{"buggy_code": ["<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <!-- Required meta tags -->\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n  <!-- CSS -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" href=\"https://pro.fontawesome.com/releases/v5.15.1/css/all.css\" integrity=\"sha384-9ZfPnbegQSumzaE7mks2IYgHoayLtuto3AS6ieArECeaR8nCfliJVuLh/GaQ1gyM\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" href=\"roboto/css/roboto.css\">\n  <link rel=\"stylesheet\" href=\"styles.css\">\n  <script src=\"main.js\"></script>\n\n  <!-- Favicon -->\n  <link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href=\"/assets/android-icon-192x192.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/assets/favicon-32x32.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"/assets/favicon-96x96.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/assets/favicon-16x16.png\">\n\n  <title>systeminformation</title>\n\n</head>\n\n<body>\n  <nav class=\"nav\">\n    <div class=\"container\">\n      <a href=\".\"><img class=\"logo float-left\" src=\"assets/logo.png\" alt=\"logo\">\n        <div class=\"title float-left\">systeminformation</div>\n      </a>\n      <div class=\"text float-right github\"><a href=\"https://github.com/sebhildebrandt/systeminformation\">View on Github <i class=\"fab fa-github\"></i></a></div>\n      <div class=\"text float-right todocs\"><a href=\"./#docs\">Docs Overview</a></div>\n    </div>\n  </nav>\n\n  <div class=\"container-fluid\">\n    <section class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-4 col-lg-3 col-xl-2 menu\" id=\"menu\">\n        </div>\n        <div class=\"col-12 col-md-8 col-lg-9 col-xl-10 content\">\n          <div class=\"row\">\n            <div class=\"col-12 sectionheader\">\n              <div class=\"title\">Version History</div>\n              <div class=\"text\">\n                <h3>Major and Breaking Changes</h3>\n                <p>To see detaild information on major und breaking changes for version 5.x, refer to the <a href=\"changes.html\">Version 5 - Changes</a> page.<br>Be aware version 5 is <strong>NOT fully backward compatible</strong> to version 4.x ...</p>\n\n                <h3>Full version history</h3>\n                <table class=\"table table-sm table-bordered table-striped\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Version</th>\n                      <th scope=\"col\" width=\"12%\">Date</th>\n                      <th scope=\"col\">Comment</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">5.21.6</th>\n                      <td>2023-09-18</td>\n                      <td><span class=\"code\">baseboard()</span> improved parsing (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.21.5</th>\n                      <td>2023-09-15</td>\n                      <td><span class=\"code\">chassis()</span>, <span class=\"code\">baseboard()</span> improved parsing (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.21.4</th>\n                      <td>2023-09-02</td>\n                      <td><span class=\"code\">wifiConnections()</span> fixed when no wifi chip (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.21.3</th>\n                      <td>2023-08-31</td>\n                      <td><span class=\"code\">cpuTemperature()</span> improved parsing for AMD (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.21.2</th>\n                      <td>2023-08-30</td>\n                      <td><span class=\"code\">cpuTemperature()</span> improved parsing for AMD (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.21.1</th>\n                      <td>2023-08-28</td>\n                      <td><span class=\"code\">graphics()</span> subVendor fix (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.21.0</th>\n                      <td>2023-08-28</td>\n                      <td><span class=\"code\">graphics()</span> added subVendor (linux) <span class=\"code\">mamLayout()</span> DDR5 detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.20.0</th>\n                      <td>2023-08-25</td>\n                      <td><span class=\"code\">mem()</span> new properties writeback and dirty (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.19.1</th>\n                      <td>2023-08-23</td>\n                      <td><span class=\"code\">wifiNetworks()</span> improved parsing SSID (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.19.0</th>\n                      <td>2023-08-22</td>\n                      <td><span class=\"code\">currentLoad()</span> new properties steal and guest time (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.15</th>\n                      <td>2023-08-10</td>\n                      <td><span class=\"code\">npx()</span> command extended</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.14</th>\n                      <td>2023-08-09</td>\n                      <td><span class=\"code\">fsSize()</span> fixed syntax error</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.13</th>\n                      <td>2023-08-08</td>\n                      <td><span class=\"code\">mem()</span> fixed error handling</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.12</th>\n                      <td>2023-08-05</td>\n                      <td><span class=\"code\">fsSize()</span> rw /snap/ issue fixed (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.11</th>\n                      <td>2023-08-04</td>\n                      <td><span class=\"code\">bluetooth()</span> improved parsing</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.10</th>\n                      <td>2023-07-28</td>\n                      <td><span class=\"code\">cpu()</span> fixed chach sizes, extended sockets (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.9</th>\n                      <td>2023-07-26</td>\n                      <td><span class=\"code\">fsSize()</span> fixed missing rw property (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.8</th>\n                      <td>2023-07-25</td>\n                      <td><span class=\"code\">cpu()</span> added AMD ZEN 4 base frequencies</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.7</th>\n                      <td>2023-07-12</td>\n                      <td><span class=\"code\">osInfo()</span> added macOS Sonoma code name (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.6</th>\n                      <td>2023-06-28</td>\n                      <td><span class=\"code\">graphics()</span> fixed catch errors (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.5</th>\n                      <td>2023-06-26</td>\n                      <td><span class=\"code\">cpu()</span> fix parsing amd (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.4</th>\n                      <td>2023-06-22</td>\n                      <td><span class=\"code\">graphics()</span> fixed parsing (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.3</th>\n                      <td>2023-06-09</td>\n                      <td><span class=\"code\">tests</span> improved key handling, updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.2</th>\n                      <td>2023-06-08</td>\n                      <td><span class=\"code\">fsSize()</span> improved error handling (alpine linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.1</th>\n                      <td>2023-06-07</td>\n                      <td><span class=\"code\">networkInterfaces()</span> cleaned up testVirtualNic</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.0</th>\n                      <td>2023-06-06</td>\n                      <td><span class=\"code\">fssize()</span> added optional drive parameter</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.17</th>\n                      <td>2023-06-03</td>\n                      <td><span class=\"code\">osInfo()</span> improved fqdn (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.16</th>\n                      <td>2023-05-30</td>\n                      <td><span class=\"code\">usb()</span> fix parsing JSON (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.15</th>\n                      <td>2023-05-29</td>\n                      <td><span class=\"code\">powerShell()</span> added NoProfile attribute (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.14</th>\n                      <td>2023-05-29</td>\n                      <td><span class=\"code\">diskLayout()</span> <span class=\"code\">osInfo()</span>fix parsing issue (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.13</th>\n                      <td>2023-05-24</td>\n                      <td><span class=\"code\">typings</span> fix typings dynamicData, networkInterfaceData</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.12</th>\n                      <td>2023-02-28</td>\n                      <td><span class=\"code\">uuid()</span> fix unique mac address issue (Android)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.11</th>\n                      <td>2023-02-27</td>\n                      <td><span class=\"code\">blockDevices()</span> raid added label, uuid (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.10</th>\n                      <td>2023-02-23</td>\n                      <td><span class=\"code\">blockDevices()</span> fixed parsing raids (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.9</th>\n                      <td>2023-02-11</td>\n                      <td><span class=\"code\">system()</span> fix model Apple Silicon</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.8</th>\n                      <td>2023-01-30</td>\n                      <td><span class=\"code\">system()</span> improved virtual host detection for Parallels</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.7</th>\n                      <td>2023-01-29</td>\n                      <td><span class=\"code\">processes()</span> fixed CPU usage info (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.6</th>\n                      <td>2023-01-29</td>\n                      <td><span class=\"code\">processes()</span> fixed Node Version 8 compatibility issues</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.5</th>\n                      <td>2023-01-29</td>\n                      <td><span class=\"code\">processes()</span> improved parsing of all services (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.4</th>\n                      <td>2023-01-24</td>\n                      <td><span class=\"code\">networkInterfaces()</span> sanitizing interface names</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.3</th>\n                      <td>2023-01-10</td>\n                      <td><span class=\"code\">processes()</span> fix elapsed time parsing (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.2</th>\n                      <td>2023-01-10</td>\n                      <td><span class=\"code\">utils</span> fix killing powershell (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.1</th>\n                      <td>2023-01-06</td>\n                      <td><span class=\"code\">graphics()</span> positionX, positionY Ventura fix (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.0</th>\n                      <td>2023-01-06</td>\n                      <td><span class=\"code\">graphics()</span> added positionX, positionY (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.9</th>\n                      <td>2022-12-27</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.8</th>\n                      <td>2022-12-22</td>\n                      <td><span class=\"code\">processes()</span> params truncated fix (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.7</th>\n                      <td>2022-12-22</td>\n                      <td><span class=\"code\">processes()</span> commandLine missing spaces fix (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.6</th>\n                      <td>2022-12-12</td>\n                      <td><span class=\"code\">processes()</span> time format fix (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.5</th>\n                      <td>2022-12-09</td>\n                      <td><span class=\"code\">inetLatency()</span> fix for alpine (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.4</th>\n                      <td>2022-12-09</td>\n                      <td><span class=\"code\">processes()</span> fix started (linux alpine)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.3</th>\n                      <td>2022-12-08</td>\n                      <td><span class=\"code\">users()</span> fix when multiple exporer.exe opened (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.2</th>\n                      <td>2022-12-08</td>\n                      <td><span class=\"code\">dockerContainerStats()</span> improved calculation cpuPercent</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.1</th>\n                      <td>2022-12-04</td>\n                      <td>code cleanup, moved from lgtm to GitHub Code Scan</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.0</th>\n                      <td>2022-12-01</td>\n                      <td><span class=\"code\">fsSize()</span> added rw attribute (win, linux, macOS, BSD)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.15.1</th>\n                      <td>2022-11-29</td>\n                      <td><span class=\"code\">typings</span> fixed typo</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.15.0</th>\n                      <td>2022-11-29</td>\n                      <td><span class=\"code\">blockDevices()</span> added device (win, linux, macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.14.4</th>\n                      <td>2022-11-21</td>\n                      <td><span class=\"code\">osInfo()</span> improved uefi parsing (FreeBSD)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.14.3</th>\n                      <td>2022-11-20</td>\n                      <td><span class=\"code\">graphics()</span> multi monitor current refresh rate (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.14.2</th>\n                      <td>2022-11-20</td>\n                      <td><span class=\"code\">osInfo()</span> improved parsing (FreeBSD)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.14.1</th>\n                      <td>2022-11-20</td>\n                      <td><span class=\"code\">mamLayout()</span> bank descriptor cleanup (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.14.0</th>\n                      <td>2022-11-19</td>\n                      <td><span class=\"code\">blockDevices()</span> added raid group (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.13.5</th>\n                      <td>2022-11-18</td>\n                      <td><span class=\"code\">users()</span> fix pasring issue (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.13.4</th>\n                      <td>2022-11-18</td>\n                      <td><span class=\"code\">users()</span> fix issue (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.13.3</th>\n                      <td>2022-11-18</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fix main temp (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.13.2</th>\n                      <td>2022-11-18</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fix main temp (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.13.1</th>\n                      <td>2022-11-18</td>\n                      <td><span class=\"code\">processLoad()</span> fix main pid (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.13.0</th>\n                      <td>2022-11-17</td>\n                      <td><span class=\"code\">networkConnections()</span> added process name (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.15</th>\n                      <td>2022-11-16</td>\n                      <td><span class=\"code\">networkConnections()</span> adapted parsing to reflect also UDP (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.14</th>\n                      <td>2022-11-11</td>\n                      <td>Restored <span class=\"code\">powershell</span> compatibility for version 7.3 (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.13</th>\n                      <td>2022-11-06</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.12</th>\n                      <td>2022-11-03</td>\n                      <td>fix typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.11</th>\n                      <td>2022-10-27</td>\n                      <td><span class=\"code\">wifiInterfaces()</span>, <span class=\"code\">wifiConnections()</span> improved parsing (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.10</th>\n                      <td>2022-10-25</td>\n                      <td><span class=\"code\">bluetoothDevices()</span> adapted to new profile (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.9</th>\n                      <td>2022-10-24</td>\n                      <td>fix typescript typings, code cleanup, docs updated</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.8</th>\n                      <td>2022-10-23</td>\n                      <td><span class=\"code\">processes()</span> fix truncated command (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.7</th>\n                      <td>2022-10-15</td>\n                      <td><span class=\"code\">versions()</span> fix postgres</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.6</th>\n                      <td>2022-08-18</td>\n                      <td><span class=\"code\">networkConnections()</span> udp fix (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.5</th>\n                      <td>2022-08-11</td>\n                      <td><span class=\"code\">cpu()</span> virtualization fix (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.4</th>\n                      <td>2022-08-09</td>\n                      <td><span class=\"code\">cpuTemperture()</span> fix main (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.3</th>\n                      <td>2022-08-04</td>\n                      <td><span class=\"code\">networkInterfaces()</span> operstate fix (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.2</th>\n                      <td>2022-08-01</td>\n                      <td><span class=\"code\">services()</span> Ubuntu 22.04 fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.1</th>\n                      <td>2022-07-14</td>\n                      <td><span class=\"code\">cpuTemperature()</span> Apple Silicon support (see docs)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.0</th>\n                      <td>2022-07-12</td>\n                      <td><span class=\"code\">cpu()</span> added performance and efficiency cores</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.26</th>\n                      <td>2022-07-12</td>\n                      <td><span class=\"code\">cpu()</span> fix issue parsing physical cores (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.25</th>\n                      <td>2022-07-11</td>\n                      <td><span class=\"code\">fsSize()</span> fix issue filtering (df)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.24</th>\n                      <td>2022-07-10</td>\n                      <td><span class=\"code\">fsSize()</span> fix parsing linux (df)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.23</th>\n                      <td>2022-07-09</td>\n                      <td><span class=\"code\">fsSize()</span>,<span class=\"code\">basebard()</span>,<span class=\"code\">cpuTemeratur()</span> fixes</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.22</th>\n                      <td>2022-06-24</td>\n                      <td><span class=\"code\">processes()</span> improved parsing (linux, macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.21</th>\n                      <td>2022-06-17</td>\n                      <td><span class=\"code\">fsSize()</span> fix parsing linux (df)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.20</th>\n                      <td>2022-06-13</td>\n                      <td><span class=\"code\">diskLayout()</span> fix parsing linux (JSON)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.19</th>\n                      <td>2022-06-13</td>\n                      <td><span class=\"code\">diskLayout()</span> optimized parsing linux (JSON)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.18</th>\n                      <td>2022-06-13</td>\n                      <td><span class=\"code\">diskLayout()</span> fix parsing linux (JSON)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.17</th>\n                      <td>2022-06-13</td>\n                      <td><span class=\"code\">diskLayout()</span> fix parsing linux (JSON)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.16</th>\n                      <td>2022-05-30</td>\n                      <td><span class=\"code\">docs</span> updated <span class=\"code\">tests</span> added node 18</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.15</th>\n                      <td>2022-05-11</td>\n                      <td><span class=\"code\">audio()</span> fix typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.14</th>\n                      <td>2022-04-22</td>\n                      <td><span class=\"code\">networkInterfaces()</span> node 18 compatibility</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.13</th>\n                      <td>2022-04-21</td>\n                      <td><span class=\"code\">networkStats()</span> improved scanning (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.12</th>\n                      <td>2022-04-19</td>\n                      <td><span class=\"code\">battery()</span> improved M1 support (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.11</th>\n                      <td>2022-04-19</td>\n                      <td><span class=\"code\">networkInterfaces()</span> improved parsing (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.10</th>\n                      <td>2022-04-18</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.9</th>\n                      <td>2022-03-20</td>\n                      <td><span class=\"code\">diskLayout()</span> fixed issue smartStatus (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.8</th>\n                      <td>2022-03-11</td>\n                      <td><span class=\"code\">cpu()</span> improved socket detection by name (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.7</th>\n                      <td>2022-03-10</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fix NaN issue (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.6</th>\n                      <td>2022-03-01</td>\n                      <td>typescript typings fix <span class=\"code\">diskLayout()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.5</th>\n                      <td>2022-02-26</td>\n                      <td>fixed parsing issues (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.4</th>\n                      <td>2022-02-20</td>\n                      <td><span class=\"code\">powerShell</span> execution policy fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.3</th>\n                      <td>2022-02-14</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.2</th>\n                      <td>2022-02-05</td>\n                      <td><span class=\"code\">powerShell</span> speed improvements (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.1</th>\n                      <td>2022-02-03</td>\n                      <td><span class=\"code\">osInfo()</span> fixed issue fqdn (openBSD)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.0</th>\n                      <td>2022-01-26</td>\n                      <td><span class=\"code\">networkInterfaces()</span> added default property and parameter</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.7</th>\n                      <td>2022-01-21</td>\n                      <td><span class=\"code\">processes()</span> reverted PR #56\u00df (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.6</th>\n                      <td>2022-01-21</td>\n                      <td><span class=\"code\">usb()</span> fix, <span class=\"code\">users()</span> fix tty (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.5</th>\n                      <td>2022-01-19</td>\n                      <td><span class=\"code\">processes()</span> fix calculation (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.4</th>\n                      <td>2022-01-18</td>\n                      <td><span class=\"code\">battery()</span> fix detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.3</th>\n                      <td>2022-01-17</td>\n                      <td><span class=\"code\">system()</span> improved virtual detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.2</th>\n                      <td>2022-01-17</td>\n                      <td><span class=\"code\">uuid()</span> fix return values (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.1</th>\n                      <td>2022-01-17</td>\n                      <td><span class=\"code\">cpu()</span> fix manufacturer</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.0</th>\n                      <td>2022-01-09</td>\n                      <td>Basic <span class=\"code\">Android</span> support</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.18</th>\n                      <td>2022-01-08</td>\n                      <td><span class=\"code\">wifiConnections()</span> fix empty issue (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.17</th>\n                      <td>2021-12-07</td>\n                      <td><span class=\"code\">wifiNetworks()</span> fix empty issue (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.16</th>\n                      <td>2021-12-05</td>\n                      <td><span class=\"code\">wifiNetworks()</span> adaption for Apple silicon (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.15</th>\n                      <td>2021-11-19</td>\n                      <td><span class=\"code\">cpuCache()</span> fix (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.14</th>\n                      <td>2021-11-17</td>\n                      <td><span class=\"code\">versions()</span> python 2 monterey (deprecated warning) fix (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.13</th>\n                      <td>2021-11-14</td>\n                      <td><span class=\"code\">time()</span> timezone name, <span class=\"code\">cpu()</span> l1 cache improvement</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.12</th>\n                      <td>2021-11-13</td>\n                      <td><span class=\"code\">users()</span> fix data check (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.11</th>\n                      <td>2021-11-12</td>\n                      <td><span class=\"code\">fsStats()</span> fix null result (bsd)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.10</th>\n                      <td>2021-11-11</td>\n                      <td><span class=\"code\">powerShell</span> transition, replacing wmic (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.9</th>\n                      <td>2021-10-27</td>\n                      <td><span class=\"code\">graphics</span> fixed screen resolution issue (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.8</th>\n                      <td>2021-10-22</td>\n                      <td><span class=\"code\">wmic</span> fixed code page issues (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.7</th>\n                      <td>2021-10-09</td>\n                      <td><span class=\"code\">battery()</span> fixed typo seperator (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.6</th>\n                      <td>2021-10-08</td>\n                      <td><span class=\"code\">system()</span> fixed virtual on WSL2</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.5</th>\n                      <td>2021-10-08</td>\n                      <td><span class=\"code\">battery()</span> fixed isCharging (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.4</th>\n                      <td>2021-09-23</td>\n                      <td><span class=\"code\">processes()</span> fix memVsz, memRss (macOS M1)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.3</th>\n                      <td>2021-09-17</td>\n                      <td><span class=\"code\">cpuTemperature()</span> improvement tdie detection (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.2</th>\n                      <td>2021-09-16</td>\n                      <td><span class=\"code\">memLayout()</span> type fix (win), <span class=\"code\">graphics()</span> improvement (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.1</th>\n                      <td>2021-09-15</td>\n                      <td><span class=\"code\">disklayout()</span> fix size (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.0</th>\n                      <td>2021-09-15</td>\n                      <td><span class=\"code\">graphics()</span> macOS new XML parser, extended properties</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.9</th>\n                      <td>2021-09-13</td>\n                      <td><span class=\"code\">battery()</span> fix (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.8</th>\n                      <td>2021-09-11</td>\n                      <td><span class=\"code\">wifiConnections(), wifiInterfaces(), wifiNetworks()</span> fix (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.7</th>\n                      <td>2021-09-01</td>\n                      <td><span class=\"code\">processes()</span> fix alpine linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.6</th>\n                      <td>2021-08-26</td>\n                      <td><span class=\"code\">cpu()</span> improved detection (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.5</th>\n                      <td>2021-08-26</td>\n                      <td><span class=\"code\">osInfo()</span> hyper-v detection fix (win VM)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.4</th>\n                      <td>2021-08-26</td>\n                      <td><span class=\"code\">graphics()</span> added vendor (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.3</th>\n                      <td>2021-08-26</td>\n                      <td><span class=\"code\">graphics()</span> fix empty controller (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.2</th>\n                      <td>2021-08-24</td>\n                      <td><span class=\"code\">baseboard(), getDefaultNetworkInterface()</span> fix catch error</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.1</th>\n                      <td>2021-08-24</td>\n                      <td><span class=\"code\">battery()</span> battery fix capacity</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.0</th>\n                      <td>2021-08-02</td>\n                      <td><span class=\"code\">disksIO()</span> added wait time (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.14</th>\n                      <td>2021-08-01</td>\n                      <td><span class=\"code\">cpu()</span> cache calculation fix (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.13</th>\n                      <td>2021-07-28</td>\n                      <td><span class=\"code\">osInfo()</span> fix uefi detection (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.12</th>\n                      <td>2021-07-27</td>\n                      <td><span class=\"code\">osInfo()</span> fix uefi detection (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.11</th>\n                      <td>2021-07-27</td>\n                      <td>typescript typings fix bluetoothDevices()</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.10</th>\n                      <td>2021-07-26</td>\n                      <td>typescript typings fix processLoad()</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.9</th>\n                      <td>2021-07-25</td>\n                      <td><span class=\"code\">uuid()</span> better regedit path detection (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.8</th>\n                      <td>2021-07-16</td>\n                      <td><span class=\"code\">battery()</span> fix designedCapacity (win, linux), fix catch error</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.7</th>\n                      <td>2021-06-15</td>\n                      <td><span class=\"code\">graphics()</span> improved detection screen resolution (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.6</th>\n                      <td>2021-06-09</td>\n                      <td><span class=\"code\">battery()</span> improved detection (additional batteries windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.5</th>\n                      <td>2021-06-08</td>\n                      <td><span class=\"code\">memLayout()</span> improved clock speed detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.4</th>\n                      <td>2021-05-27</td>\n                      <td><span class=\"code\">osInfo(), cpu()</span> improved hypervisor, virtualization detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.3</th>\n                      <td>2021-05-26</td>\n                      <td><span class=\"code\">osInfo()</span> improved UEFI detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.2</th>\n                      <td>2021-05-24</td>\n                      <td><span class=\"code\">system()</span> virtual detection improvement</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.1</th>\n                      <td>2021-05-20</td>\n                      <td><span class=\"code\">grahics()</span> Check for qwMemorySize on Windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.0</th>\n                      <td>2021-05-20</td>\n                      <td><span class=\"code\">diskLayout()</span> added smartdata for Windows (if installed)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.22</th>\n                      <td>2021-05-18</td>\n                      <td><span class=\"code\">diskLayout()</span> fixed to small buffer smartdata (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.21</th>\n                      <td>2021-05-14</td>\n                      <td><span class=\"code\">graphics()</span> fixed dual gpu issue (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.20</th>\n                      <td>2021-05-07</td>\n                      <td><span class=\"code\">system()</span> fixed vm detection (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.19</th>\n                      <td>2021-05-06</td>\n                      <td><span class=\"code\">services()</span> modified service listing (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.18</th>\n                      <td>2021-05-06</td>\n                      <td><span class=\"code\">processes()</span> fixed Windows mem bug (naming conform to all platforms)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.17</th>\n                      <td>2021-05-05</td>\n                      <td><span class=\"code\">networkInterfaces()</span> fixed Windows XP bug (WMIC NetEnabled)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.16</th>\n                      <td>2021-05-05</td>\n                      <td><span class=\"code\">graphics()</span> fixed compare bug</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.15</th>\n                      <td>2021-05-05</td>\n                      <td>restored Node 4.x compatibility</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.14</th>\n                      <td>2021-05-04</td>\n                      <td><span class=\"code\">networkGatewayDefault()</span> macOS improvement for active VPN</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.13</th>\n                      <td>2021-05-04</td>\n                      <td><span class=\"code\">dockerImagesInspect()</span> <span class=\"code\">dockerContainerInspect()</span> <span class=\"code\">dockerContainerProcesses()</span> parameter sanitation</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.12</th>\n                      <td>2021-04-09</td>\n                      <td><span class=\"code\">networkInterfaces()</span> windows detection fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.11</th>\n                      <td>2021-04-08</td>\n                      <td><span class=\"code\">versions()</span> parameter sanitation</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.10</th>\n                      <td>2021-03-29</td>\n                      <td><span class=\"code\">vboxInfo()</span> fixed windows bug</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.9</th>\n                      <td>2021-03-28</td>\n                      <td><span class=\"code\">graphics()</span> fixed nvidia-smi compare bug</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.8</th>\n                      <td>2021-03-23</td>\n                      <td>typescript definitions fix wifiInterfces, wifiConnections</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.7</th>\n                      <td>2021-03-16</td>\n                      <td><span class=\"code\">inetLatency()</span> <span class=\"code\">inetChecksite()</span> schema avlidation</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.6</th>\n                      <td>2021-03-16</td>\n                      <td>code refactoring</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.5</th>\n                      <td>2021-03-15</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fix linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.4</th>\n                      <td>2021-03-15</td>\n                      <td><span class=\"code\">sanitizeShellString()</span> and other security improvements</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.3</th>\n                      <td>2021-03-14</td>\n                      <td><span class=\"code\">sanitizeShellString()</span> improvements</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.2</th>\n                      <td>2021-03-10</td>\n                      <td><span class=\"code\">networkInterfaces(), cpu()</span> improvements (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.1</th>\n                      <td>2021-03-03</td>\n                      <td><span class=\"code\">get()</span> fixed issue boolean parameters</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.0</th>\n                      <td>2021-03-03</td>\n                      <td><span class=\"code\">cpuTemperature()</span> added socket and chipset temp (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.5.0</th>\n                      <td>2021-02-25</td>\n                      <td><span class=\"code\">dockerVolumes()</span> added</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.4.0</th>\n                      <td>2021-02-24</td>\n                      <td><span class=\"code\">dockerImages()</span> added</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.3.5</th>\n                      <td>2021-02-23</td>\n                      <td><span class=\"code\">dockerContainerStats()</span> fixed issue parameter *</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.3.4</th>\n                      <td>2021-02-20</td>\n                      <td><span class=\"code\">sanitizeShellString()</span> optimized strict sanitation</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.3.3</th>\n                      <td>2021-02-15</td>\n                      <td><span class=\"code\">dockerContainerStats()</span> fix correct ID splitting</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.3.2</th>\n                      <td>2021-02-15</td>\n                      <td><span class=\"code\">inetLatency()</span> <span class=\"code\">inetChecksite()</span> fix possible security issue (file://)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.3.1</th>\n                      <td>2021-02-14</td>\n                      <td><span class=\"code\">inetLatency()</span> <span class=\"code\">inetChecksite()</span> <span class=\"code\">services()</span> <span class=\"code\">processLoad()</span> fix possible security issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.3.0</th>\n                      <td>2021-02-12</td>\n                      <td><span class=\"code\">osInfo()</span> added remoteSession (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.7</th>\n                      <td>2021-02-12</td>\n                      <td><span class=\"code\">fsStats()</span> and <span class=\"code\">blockdevices()</span> improvements (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.6</th>\n                      <td>2021-02-12</td>\n                      <td><span class=\"code\">inetLatency()</span> fix DOS vulnerability</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.5</th>\n                      <td>2021-02-11</td>\n                      <td><span class=\"code\">processes()</span> fix truncated params (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.4</th>\n                      <td>2021-02-11</td>\n                      <td><span class=\"code\">currentLoad()</span> fix issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.3</th>\n                      <td>2021-02-11</td>\n                      <td><span class=\"code\">diskLayout()</span> added USB drives (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.2</th>\n                      <td>2021-02-11</td>\n                      <td>code cleanup, updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.1</th>\n                      <td>2021-02-10</td>\n                      <td><span class=\"code\">system()</span> fixed issue virtual detect (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.0</th>\n                      <td>2021-02-10</td>\n                      <td><span class=\"code\">wifiInterfces()</span> and <span class=\"code\">wifiConnections()</span> added</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.1.2</th>\n                      <td>2021-02-08</td>\n                      <td>fixed node 4 compatibility issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.1.1</th>\n                      <td>2021-02-08</td>\n                      <td><span class=\"code\">baseboard()</span> added memMax, memSlots</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.1.0</th>\n                      <td>2021-02-08</td>\n                      <td><span class=\"code\">memLayout()</span> added ECC flag, <span class=\"code\">bios()</span> added language, features (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.11</th>\n                      <td>2021-02-07</td>\n                      <td><span class=\"code\">fsSize()</span> windows WSL fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.10</th>\n                      <td>2021-02-06</td>\n                      <td><span class=\"code\">getDynamicData()</span> windows WSL fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.9</th>\n                      <td>2021-02-02</td>\n                      <td><span class=\"code\">fsSize()</span> fixed parsing edge case issue macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.8</th>\n                      <td>2021-01-30</td>\n                      <td>typescript typings fix cpuCurrentSpeed</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.7</th>\n                      <td>2021-01-29</td>\n                      <td><span class=\"code\">fsSize()</span> available fixed windows and typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.6</th>\n                      <td>2021-01-28</td>\n                      <td><span class=\"code\">osInfo()</span> added hypervisor (win only)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.5</th>\n                      <td>2021-01-27</td>\n                      <td><span class=\"code\">networkInterfaces()</span> type detection improved (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.4</th>\n                      <td>2021-01-27</td>\n                      <td><span class=\"code\">memLayout()</span> improved manufacturer decoding (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.3</th>\n                      <td>2021-01-27</td>\n                      <td><span class=\"code\">cpu()</span> fix virtualization, <span class=\"code\">wifi()</span> fix raspberry</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.2</th>\n                      <td>2021-01-26</td>\n                      <td>updated typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.1</th>\n                      <td>2021-01-26</td>\n                      <td>code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.0</th>\n                      <td>2021-01-26</td>\n                      <td>new major version 5 release</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.9</th>\n                      <td>2021-01-25</td>\n                      <td><span class=\"code\">graphics()</span> virtual controller vram value fix (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.8</th>\n                      <td>2021-01-25</td>\n                      <td><span class=\"code\">graphics()</span> controller subDeviceId fix (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.7</th>\n                      <td>2021-01-13</td>\n                      <td><span class=\"code\">services()</span> improved service discovery linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.6</th>\n                      <td>2021-01-12</td>\n                      <td><span class=\"code\">networkInterfaces()</span> catch errors</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.5</th>\n                      <td>2021-01-07</td>\n                      <td><span class=\"code\">networkInterfaceDefault()</span> fixed CMD popup (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.4</th>\n                      <td>2021-01-06</td>\n                      <td><span class=\"code\">system()</span> fixed vitrual catch error</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.3</th>\n                      <td>2021-01-06</td>\n                      <td><span class=\"code\">graphics()</span> issue non nvidia-smi controllers fixed (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.2</th>\n                      <td>2021-01-05</td>\n                      <td><span class=\"code\">system()</span> uuid now lowercase - as in uuid()</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.1</th>\n                      <td>2021-01-05</td>\n                      <td><span class=\"code\">graphics()</span> nvidia-smi detection improved</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.0</th>\n                      <td>2021-01-05</td>\n                      <td><span class=\"code\">system()</span> added flag virtual</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.8</th>\n                      <td>2021-01-04</td>\n                      <td><span class=\"code\">virtualBox()</span> fix issue windows host</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.7</th>\n                      <td>2021-01-04</td>\n                      <td><span class=\"code\">graphics()</span> nvidia-smi detection improved</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.6</th>\n                      <td>2021-01-02</td>\n                      <td><span class=\"code\">dockerContainerStats()</span> fix 'tx' changed to 'wx' as documented</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.5</th>\n                      <td>2020-12-30</td>\n                      <td><span class=\"code\">graphics()</span> vram (nvidia-smi)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.4</th>\n                      <td>2020-12-28</td>\n                      <td><span class=\"code\">typescript</span> typings fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.3</th>\n                      <td>2020-12-27</td>\n                      <td><span class=\"code\">graphics()</span> updated docs, typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.2</th>\n                      <td>2020-12-27</td>\n                      <td><span class=\"code\">graphics()</span> fixed issue nvidia-smi</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.1</th>\n                      <td>2020-12-22</td>\n                      <td><span class=\"code\">versions()</span> fixed issue (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.0</th>\n                      <td>2020-12-21</td>\n                      <td><span class=\"code\">graphics()</span> nvidia-smi support (linux, windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.32.0</th>\n                      <td>2020-12-14</td>\n                      <td><span class=\"code\">graphics()</span> clinfo support (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.31.2</th>\n                      <td>2020-12-14</td>\n                      <td><span class=\"code\">graphics()</span> Windows 7 Graphics Fix (Multi Monitor)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.31.1</th>\n                      <td>2020-12-11</td>\n                      <td><span class=\"code\">inetLatency()</span> command injection vulnaribility fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.31.0</th>\n                      <td>2020-12-06</td>\n                      <td><span class=\"code\">osInfo()</span> added FQDN</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.11</th>\n                      <td>2020-12-02</td>\n                      <td><span class=\"code\">cpu()</span> bugfix speed parsing</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.10</th>\n                      <td>2020-12-01</td>\n                      <td><span class=\"code\">cpu()</span> handled speed parsing error (Apple Silicon)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.9</th>\n                      <td>2020-12-01</td>\n                      <td><span class=\"code\">cpu()</span> corrected processor names (Raspberry Pi)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.8</th>\n                      <td>2020-11-30</td>\n                      <td><span class=\"code\">fsSize()</span> catch error (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.7</th>\n                      <td>2020-11-29</td>\n                      <td><span class=\"code\">cpuTemperature()</span> rewrite hwmon parsing (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.6</th>\n                      <td>2020-11-27</td>\n                      <td><span class=\"code\">wmic</span> added default windows path</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.5</th>\n                      <td>2020-11-26</td>\n                      <td>adapted security update (prototype pollution prevention)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.4</th>\n                      <td>2020-11-25</td>\n                      <td>reverted Object.freeze because it broke some projects</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.3</th>\n                      <td>2020-11-25</td>\n                      <td>security update (prototype pollution prevention) Object.freeze</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.2</th>\n                      <td>2020-11-25</td>\n                      <td>security update (prototype pollution prevention)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.1</th>\n                      <td>2020-11-12</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.0</th>\n                      <td>2020-11-11</td>\n                      <td><span class=\"code\">get()</span> added possibility to provide parameters</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.29.3</th>\n                      <td>2020-11-09</td>\n                      <td><span class=\"code\">blockdevices()</span> catch error adapted</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.29.2</th>\n                      <td>2020-11-09</td>\n                      <td><span class=\"code\">blockdevices()</span> catch error</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.29.1</th>\n                      <td>2020-11-08</td>\n                      <td><span class=\"code\">system()</span> better parsing Raspberry Pi revision codes</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.29.0</th>\n                      <td>2020-11-08</td>\n                      <td><span class=\"code\">fsSize()</span> correct fs type detection macOS (HFS, APFS, NFS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.28.1</th>\n                      <td>2020-11-05</td>\n                      <td>code cleanup, removing debug console.log()</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.28.0</th>\n                      <td>2020-11-04</td>\n                      <td><span class=\"code\">graphics()</span> added deviceName (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.11</th>\n                      <td>2020-10-26</td>\n                      <td><span class=\"code\">inetChecksite()</span> fixed vulnerability: command injection</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.10</th>\n                      <td>2020-10-16</td>\n                      <td><span class=\"code\">dockerContainers()</span> resolved hanging issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.9</th>\n                      <td>2020-10-13</td>\n                      <td><span class=\"code\">networkInterfaces()</span> loopback internal detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.8</th>\n                      <td>2020-10-08</td>\n                      <td>windows codepages partial fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.7</th>\n                      <td>2020-10-05</td>\n                      <td>updated typescript typings, minor fixes</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.6</th>\n                      <td>2020-10-02</td>\n                      <td><span class=\"code\">get()</span> fixed when results are in arrays</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.5</th>\n                      <td>2020-09-18</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fixed try catch (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.4</th>\n                      <td>2020-09-16</td>\n                      <td><span class=\"code\">networkInterfaceDefault()</span> optimization (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.3</th>\n                      <td>2020-08-26</td>\n                      <td>updated typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.2</th>\n                      <td>2020-08-26</td>\n                      <td>fixed issue breaking node v4 compatibility</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.1</th>\n                      <td>2020-08-25</td>\n                      <td><span class=\"code\">networkStats()</span> fixed packages dropped (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.0</th>\n                      <td>2020-08-24</td>\n                      <td><span class=\"code\">observe()</span> added function to observe/watch system parameters</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.12</th>\n                      <td>2020-08-21</td>\n                      <td><span class=\"code\">versions()</span> fixed issue windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.11</th>\n                      <td>2020-08-20</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fixed issue windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.10</th>\n                      <td>2020-07-16</td>\n                      <td><span class=\"code\">networkStats()</span> fixed issue blocking windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.9</th>\n                      <td>2020-06-06</td>\n                      <td><span class=\"code\">networkStats()</span> fixed comparison issue windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.8</th>\n                      <td>2020-06-06</td>\n                      <td><span class=\"code\">networkInterfaces()</span> fixed caching</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.7</th>\n                      <td>2020-06-06</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fixed raspberry pi sensors issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.6</th>\n                      <td>2020-06-03</td>\n                      <td><span class=\"code\">diskLayout()</span> fixed issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.5</th>\n                      <td>2020-05-27</td>\n                      <td><span class=\"code\">cpuTemperature()</span> optimizes scanning AMD linux sensors</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.4</th>\n                      <td>2020-05-21</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fix (BSD), code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.3</th>\n                      <td>2020-05-20</td>\n                      <td>Updated documentation</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.2</th>\n                      <td>2020-05-19</td>\n                      <td><span class=\"code\">processes()</span> memory leak fix, security issue fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.1</th>\n                      <td>2020-05-13</td>\n                      <td>code cleanup </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.0</th>\n                      <td>2020-05-12</td>\n                      <td><span class=\"code\">diskLayout()</span> added full smart data (where supported) </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.25.2</th>\n                      <td>2020-05-12</td>\n                      <td><span class=\"code\">getDynamicData()</span> added wifiNetworks() </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.25.1</th>\n                      <td>2020-05-07</td>\n                      <td><span class=\"code\">get()</span> minor bounds test fix, updated docs </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.25.0</th>\n                      <td>2020-05-07</td>\n                      <td><span class=\"code\">get()</span> added function to get partial system info </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.24.2</th>\n                      <td>2020-05-06</td>\n                      <td><span class=\"code\">cpu()</span> fix BSD, <span class=\"code\">networkStats()</span> fix BSD </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.24.1</th>\n                      <td>2020-05-03</td>\n                      <td><span class=\"code\">processes()</span> fix parsing command and params (linux, macOS) </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.24.0</th>\n                      <td>2020-05-01</td>\n                      <td><span class=\"code\">networkInterfaces()</span> added netmask ip4 and ip6</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.10</th>\n                      <td>2020-05-01</td>\n                      <td><span class=\"code\">cpuTemperature()</span> optimized parsing linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.9</th>\n                      <td>2020-04-29</td>\n                      <td><span class=\"code\">currentLoad()</span> workaround for no os.cpus info</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.8</th>\n                      <td>2020-04-26</td>\n                      <td><span class=\"code\">getMacAddresses()</span> fix added try catch</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.7</th>\n                      <td>2020-04-26</td>\n                      <td><span class=\"code\">getCpuCurrentSpeedSync()</span> workaround fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.6</th>\n                      <td>2020-04-25</td>\n                      <td><span class=\"code\">networkGatewayDefault()</span> bugfix no interfaces</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.5</th>\n                      <td>2020-20-04</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.4</th>\n                      <td>2020-04-20</td>\n                      <td><span class=\"code\">users()</span> optimized parseDateTime function</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.3</th>\n                      <td>2020-04-09</td>\n                      <td>refactored to avoid <span class=\"code\">cat</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.2</th>\n                      <td>2020-04-08</td>\n                      <td><span class=\"code\">cpu()</span> fixed getting base speed Ryzen CPUs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.1</th>\n                      <td>2020-03-11</td>\n                      <td><span class=\"code\">diskLayout()</span> optimized detection (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.0</th>\n                      <td>2020-03-08</td>\n                      <td><span class=\"code\">versions()</span> added param to specify which program/lib versions to detect</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.7</th>\n                      <td>2020-03-08</td>\n                      <td><span class=\"code\">diskLayout()</span> fixed detection (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.6</th>\n                      <td>2020-03-08</td>\n                      <td><span class=\"code\">network()</span> fixed DHCP detection (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.5</th>\n                      <td>2020-03-04</td>\n                      <td><span class=\"code\">graphics()</span> fixed vram (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.4</th>\n                      <td>2020-03-01</td>\n                      <td><span class=\"code\">versions()</span> added dotnet, fix typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.3</th>\n                      <td>2020-02-20</td>\n                      <td><span class=\"code\">memLayout()</span> code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.2</th>\n                      <td>2020-02-19</td>\n                      <td><span class=\"code\">memLayout()</span> raspberry PI mem voltage fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.1</th>\n                      <td>2020-02-17</td>\n                      <td><span class=\"code\">memLayout()</span> raspberry PI support</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.0</th>\n                      <td>2020-02-17</td>\n                      <td><span class=\"code\">services()</span> added pids (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.21.3</th>\n                      <td>2020-02-16</td>\n                      <td><span class=\"code\">versions()</span> fixed versions mysql (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.21.2</th>\n                      <td>2020-02-11</td>\n                      <td><span class=\"code\">networkConnections()</span> fixed linux (debian) issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.21.1</th>\n                      <td>2020-01-31</td>\n                      <td><span class=\"code\">networkGatewayDefault()</span> fixed windows 7 issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.21.0</th>\n                      <td>2020-01-27</td>\n                      <td>added <span class=\"code\">npx</span> compatibility</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.20.1</th>\n                      <td>2020-01-26</td>\n                      <td><span class=\"code\">battery()</span> code refactoring, cleanup, updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.20.0</th>\n                      <td>2020-01-25</td>\n                      <td><span class=\"code\">battery()</span> added designcapacity, voltage, unit</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.19.4</th>\n                      <td>2020-01-24</td>\n                      <td><span class=\"code\">mem()</span> prevent log messages</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.19.3</th>\n                      <td>2020-01-24</td>\n                      <td><span class=\"code\">memLayout()</span> bank info fix macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.19.2</th>\n                      <td>2020-01-19</td>\n                      <td><span class=\"code\">cpu()</span> multi-processor fix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.19.1</th>\n                      <td>2020-01-14</td>\n                      <td><span class=\"code\">osInfo()</span> uefi fix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.19.0</th>\n                      <td>2020-01-12</td>\n                      <td><span class=\"code\">osInfo()</span> uefi (OS uses UEFI on startup)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.18.3</th>\n                      <td>2020-01-10</td>\n                      <td><span class=\"code\">fsSize()</span> fix excluding loop/snap devices</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.18.2</th>\n                      <td>2020-01-10</td>\n                      <td><span class=\"code\">memLayout()</span> fix memsize linux (modules >= 32 GB)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.18.1</th>\n                      <td>2020-01-07</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.18.0</th>\n                      <td>2020-01-07</td>\n                      <td><span class=\"code\">networkInterfaces()</span> added dhcp for macOS, added dhcp linux fallback</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.17.3</th>\n                      <td>2020-01-05</td>\n                      <td>code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.17.2</th>\n                      <td>2020-01-05</td>\n                      <td><span class=\"code\">cpu().speed</span> AMD base frequency and fix (0.00)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.17.1</th>\n                      <td>2020-01-04</td>\n                      <td><span class=\"code\">fsSize()</span> alpine linux support</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.17.0</th>\n                      <td>2020-01-04</td>\n                      <td><span class=\"code\">networkInterfaces()</span> added dhcp, dnsSuffix, ieee8021xAuth, ieee8021xState</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.16.1</th>\n                      <td>2020-01-01</td>\n                      <td><span class=\"code\">networkInterfaces()</span> bug fix (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.16.0</th>\n                      <td>2019-11-27</td>\n                      <td><span class=\"code\">networkGatewayDefault()</span> added</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.15.3</th>\n                      <td>2019-11-10</td>\n                      <td><span class=\"code\">type definitions</span> and docs update</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.15.2</th>\n                      <td>2019-11-10</td>\n                      <td><span class=\"code\">mem()</span> improved calculation linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.15.1</th>\n                      <td>2019-11-10</td>\n                      <td><span class=\"code\">diskLayout()</span> added support for older lsblk versions (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.15.0</th>\n                      <td>2019-11-10</td>\n                      <td><span class=\"code\">cpu()</span> added governor (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.17</th>\n                      <td>2019-10-22</td>\n                      <td><span class=\"code\">graphics()</span> improved display detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.16</th>\n                      <td>2019-10-19</td>\n                      <td><span class=\"code\">graphics()</span> improved display detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.15</th>\n                      <td>2019-10-18</td>\n                      <td><span class=\"code\">graphics()</span> fallback display detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.14</th>\n                      <td>2019-10-18</td>\n                      <td><span class=\"code\">powershell()</span> fixed error handling (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.13</th>\n                      <td>2019-10-15</td>\n                      <td><span class=\"code\">networkConnections()</span> fixed parsing (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.12</th>\n                      <td>2019-10-14</td>\n                      <td><span class=\"code\">getCpu()</span> fixed multi socket detection (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.11</th>\n                      <td>2019-10-01</td>\n                      <td><span class=\"code\">type definitions</span> bug dockerInfo</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.10</th>\n                      <td>2019-10-01</td>\n                      <td><span class=\"code\">type definitions</span> bug fix memLayout</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.9</th>\n                      <td>2019-10-01</td>\n                      <td><span class=\"code\">processLoad()</span> fix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.8</th>\n                      <td>2019-08-23</td>\n                      <td><span class=\"code\">parseDateTime()</span> fix coding error</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.7</th>\n                      <td>2019-08-22</td>\n                      <td><span class=\"code\">battery()</span> windows acconnected improvement</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.6</th>\n                      <td>2019-08-22</td>\n                      <td><span class=\"code\">users()</span> improved date time parsing</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.5</th>\n                      <td>2019-08-22</td>\n                      <td><span class=\"code\">fsSize()</span> fix windows size as number</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.4</th>\n                      <td>2019-07-20</td>\n                      <td><span class=\"code\">versions()</span> fix pip, pip3</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.3</th>\n                      <td>2019-07-09</td>\n                      <td><span class=\"code\">system()</span> sku fix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.2</th>\n                      <td>2019-07-07</td>\n                      <td><span class=\"code\">networkConnections()</span> pid linux fix NAN</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.1</th>\n                      <td>2019-07-04</td>\n                      <td><span class=\"code\">graphics()</span> added display position windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.0</th>\n                      <td>2019-07-03</td>\n                      <td><span class=\"code\">processes()</span> added process params and path</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.13.2</th>\n                      <td>2019-07-02</td>\n                      <td><span class=\"code\">versions()</span> fix getting all versions</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.13.1</th>\n                      <td>2019-07-01</td>\n                      <td><span class=\"code\">versions()</span> gcc fix macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.13.0</th>\n                      <td>2019-07-01</td>\n                      <td><span class=\"code\">networkConnections()</span> added PID, process</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.12.2</th>\n                      <td>2019-06-24</td>\n                      <td><span class=\"code\">system()</span> added Raspberry PI 4 detection</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.12.1</th>\n                      <td>2019-06-24</td>\n                      <td><span class=\"code\">networkInterface()</span> virtual interfaces macOS<br>\n                        <span class=\"code\">networkInterfaceDefault()</span> optimization windows\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.12.0</th>\n                      <td>2019-06-21</td>\n                      <td><span class=\"code\">networkInterface()</span> added property virtual</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.11.6</th>\n                      <td>2019-06-19</td>\n                      <td><span class=\"code\">util</span> bug fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.11.5</th>\n                      <td>2019-06-19</td>\n                      <td><span class=\"code\">dockerAll()</span> bug fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.11.4</th>\n                      <td>2019-06-17</td>\n                      <td><span class=\"code\">type definitions</span> bug fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.11.3</th>\n                      <td>2019-06-16</td>\n                      <td><span class=\"code\">graphics()</span> optimization windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.11.2</th>\n                      <td>2019-06-16</td>\n                      <td><span class=\"code\">wifiNetworks()</span> bug fixes</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.11.1</th>\n                      <td>2019-06-15</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.11.0</th>\n                      <td>2019-06-14</td>\n                      <td><span class=\"code\">wifiNetworks()</span> added available wifi networks</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.10.0</th>\n                      <td>2019-06-14</td>\n                      <td><span class=\"code\">graphics()</span> rewrite windows, added featues</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.9.2</th>\n                      <td>2019-06-12</td>\n                      <td><span class=\"code\">type definitions</span> bug fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.9.1</th>\n                      <td>2019-06-11</td>\n                      <td><span class=\"code\">networkStats()</span> bugfix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.9.0</th>\n                      <td>2019-06-03</td>\n                      <td><span class=\"code\">graphics()</span> added vendor, refresh rate, current resolution</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.8.4</th>\n                      <td>2019-06-03</td>\n                      <td><span class=\"code\">vboxInfo()</span> fixed call parameters</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.8.3</th>\n                      <td>2019-05-31</td>\n                      <td><span class=\"code\">vboxInfo()</span> added stoppedSince, started, stopped</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.8.2</th>\n                      <td>2019-05-31</td>\n                      <td><span class=\"code\">dockerInfo()</span> changed property naming style</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.8.1</th>\n                      <td>2019-05-31</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.8.0</th>\n                      <td>2019-05-31</td>\n                      <td><span class=\"code\">vboxInfo()</span> added virtualbox detailed VM info</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.7.3</th>\n                      <td>2019-05-30</td>\n                      <td>updated typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.7.2</th>\n                      <td>2019-05-30</td>\n                      <td><span class=\"code\">versions()</span> added virtualbox</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.7.1</th>\n                      <td>2019-05-29</td>\n                      <td><span class=\"code\">memLayout()</span> fix macOS mojave</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.7.0</th>\n                      <td>2019-05-29</td>\n                      <td>partial NetBSD support</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.6.1</th>\n                      <td>2019-05-29</td>\n                      <td><span class=\"code\">wmic</span> path fix - windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.6.0</th>\n                      <td>2019-05-27</td>\n                      <td><span class=\"code\">dockerInfo()</span> added dockerInfo</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.5.1</th>\n                      <td>2019-05-17</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.5.0</th>\n                      <td>2019-05-17</td>\n                      <td><span class=\"code\">fsOpenFiles()</span> added open file descriptor count</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.4.1</th>\n                      <td>2019-05-11</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.4.0</th>\n                      <td>2019-05-11</td>\n                      <td><span class=\"code\">dockerContainers()</span> added started, finished time</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.3.0</th>\n                      <td>2019-05-09</td>\n                      <td><span class=\"code\">dockerContainers() dockerStats()</span> added restartCount</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.2.1</th>\n                      <td>2019-05-09</td>\n                      <td><span class=\"code\">networkInterfaceDefault()</span> time delay fix (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.2.0</th>\n                      <td>2019-05-09</td>\n                      <td><span class=\"code\">osInfo()</span> extended service pack version (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.8</th>\n                      <td>2019-05-09</td>\n                      <td><span class=\"code\">graphics()</span> resolve on error (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.7</th>\n                      <td>2019-05-09</td>\n                      <td><span class=\"code\">users()</span> parsing fix (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.6</th>\n                      <td>2019-04-24</td>\n                      <td><span class=\"code\">memory()</span> swap used fix (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.5</th>\n                      <td>2019-04-19</td>\n                      <td>refactored <span class=\"code\">wmic</span> calls to work also on Windows XP</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.4</th>\n                      <td>2019-03-26</td>\n                      <td><span class=\"code\">networkInterfaces()</span> speed bug (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.3</th>\n                      <td>2019-03-24</td>\n                      <td>wmic path detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.2</th>\n                      <td>2019-03-23</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.1</th>\n                      <td>2019-03-13</td>\n                      <td>updated typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.0</th>\n                      <td>2019-03-13</td>\n                      <td><span class=\"code\">versions()</span>added pip, pip3</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.16</th>\n                      <td>2019-03-12</td>\n                      <td>Happy birthday - 5th aniversary</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.15</th>\n                      <td>2019-03-02</td>\n                      <td><span class=\"code\">versions()</span>added java, python3, optimized gcc</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.14</th>\n                      <td>2019-03-01</td>\n                      <td>updated typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.13</th>\n                      <td>2019-03-01</td>\n                      <td><span class=\"code\">diskLayout()</span> added device (/dev/sda...) linux, mac</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.12</th>\n                      <td>2019-03-01</td>\n                      <td><span class=\"code\">diskLayout()</span> linux rewritten - better detection</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.11</th>\n                      <td>2019-02-23</td>\n                      <td><span class=\"code\">users()</span> fix windows (time), added @ts-check</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.10</th>\n                      <td>2019-02-10</td>\n                      <td><span class=\"code\">networkInterfaceDefault()</span> fix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.9</th>\n                      <td>2019-02-08</td>\n                      <td><span class=\"code\">cpu()</span> fix, code clean up</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.8</th>\n                      <td>2019-02-05</td>\n                      <td><span class=\"code\">inetLatency()</span> latency fix parse chinese output</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.7</th>\n                      <td>2019-02-05</td>\n                      <td><span class=\"code\">inetLatency()</span> latency Windows fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.6</th>\n                      <td>2019-02-04</td>\n                      <td>powershell catch error</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.5</th>\n                      <td>2019-02-03</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.4</th>\n                      <td>2019-02-03</td>\n                      <td>code cleanup, updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.3</th>\n                      <td>2019-02-03</td>\n                      <td><span class=\"code\">networkInterfaces(), chassis()</span> fixed two more issues</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.2</th>\n                      <td>2019-02-03</td>\n                      <td><span class=\"code\">networkInterfaces(), chassis()</span> fixed smaller issues</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.1</th>\n                      <td>2019-02-02</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.0</th>\n                      <td>2019-02-02</td>\n                      <td>new major version 4</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.54.0</th>\n                      <td>2018-12-30</td>\n                      <td>added TypeScript type definitions</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.53.1</th>\n                      <td>2018-12-29</td>\n                      <td><span class=\"code\">versions()</span> bug fix nginx version</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.53.0</th>\n                      <td>2018-12-29</td>\n                      <td><span class=\"code\">versions()</span> added perl, python, gcc</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.7</th>\n                      <td>2018-12-29</td>\n                      <td><span class=\"code\">versions()</span> bug fix macOS detection</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.6</th>\n                      <td>2018-12-28</td>\n                      <td><span class=\"code\">versions()</span> bug fix macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.5</th>\n                      <td>2018-12-28</td>\n                      <td>preparing automated tests, travis-ci integration, added dev-dependencies</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.4</th>\n                      <td>2018-12-27</td>\n                      <td><span class=\"code\">graphics().controllers</span> bugfix linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.3</th>\n                      <td>2018-12-27</td>\n                      <td><span class=\"code\">os().codepage</span> bugfix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.2</th>\n                      <td>2018-12-17</td>\n                      <td>code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.1</th>\n                      <td>2018-12-17</td>\n                      <td><span class=\"code\">inetChecksite()</span> bugfix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.0</th>\n                      <td>2018-12-15</td>\n                      <td><span class=\"code\">cpu()</span> added physical cores, processors, socket type</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.51.4</th>\n                      <td>2018-12-05</td>\n                      <td><span class=\"code\">versions()</span> bugfix, optimization postgres</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.51.3</th>\n                      <td>2018-11-27</td>\n                      <td><span class=\"code\">mem()</span> refactoring parsing linux, code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.51.2</th>\n                      <td>2018-11-26</td>\n                      <td><span class=\"code\">mem()</span> bugfix parsing <span class=\"code\">free</span> output linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.51.1</th>\n                      <td>2018-11-26</td>\n                      <td><span class=\"code\">processLoad()</span> bugfix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.51.0</th>\n                      <td>2018-11-25</td>\n                      <td><span class=\"code\">processLoad()</span> added for windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.50.3</th>\n                      <td>2018-11-25</td>\n                      <td><span class=\"code\">processLoad()</span>, <span class=\"code\">services()</span> fixed cpu data (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.50.2</th>\n                      <td>2018-11-23</td>\n                      <td>network mac adresses: ip support fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.50.1</th>\n                      <td>2018-11-23</td>\n                      <td><span class=\"code\">services()</span> added possibility to specify ALL services \"*\" for win</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.50.0</th>\n                      <td>2018-11-23</td>\n                      <td><span class=\"code\">services()</span> added possibility to specify ALL services \"*\" for linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.49.4</th>\n                      <td>2018-11-21</td>\n                      <td><span class=\"code\">battery()</span> timeremaining optimization (linux) thanks to Jorai Rijsdijk</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.49.3</th>\n                      <td>2018-11-20</td>\n                      <td><span class=\"code\">memLayout()</span> optimized parsing (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.49.2</th>\n                      <td>2018-11-19</td>\n                      <td>code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.49.1</th>\n                      <td>2018-11-19</td>\n                      <td><span class=\"code\">cpu().brand</span> removed extra spaces, tabs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.49.0</th>\n                      <td>2018-11-19</td>\n                      <td>added system <span class=\"code\">uuid()</span> (os specific), <span class=\"code\">versions()</span> added postgresql</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.48.4</th>\n                      <td>2018-11-18</td>\n                      <td>windows: garbled output because of codepage</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.48.3</th>\n                      <td>2018-11-18</td>\n                      <td><span class=\"code\">dockerContainerStats()</span> fixed issue <span class=\"code\">cpu_percent</span> win</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.48.2</th>\n                      <td>2018-11-18</td>\n                      <td><span class=\"code\">dockerContainerStats()</span> fixed issue <span class=\"code\">cpu_percent</span>, win exec</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.48.1</th>\n                      <td>2018-11-17</td>\n                      <td><span class=\"code\">docker...()</span> fixed issue parsing docker socket JSON</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.48.0</th>\n                      <td>2018-11-17</td>\n                      <td><span class=\"code\">diskLayout()</span> better interface detection (WIN), <span class=\"code\">osInfo()</span> added build, serial</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.47.0</th>\n                      <td>2018-11-06</td>\n                      <td><span class=\"code\">versions()</span> added docker, postfix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.46.0</th>\n                      <td>2018-11-05</td>\n                      <td>fixed issue <span class=\"code\">versions()</span>, added system openssl version</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.10</th>\n                      <td>2018-11-03</td>\n                      <td>fixed issue <span class=\"code\">battery()</span>, modified <span class=\"code\">package.json</span> - files</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.9</th>\n                      <td>2018-10-22</td>\n                      <td>fixed node 4 incompatibility</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.8</th>\n                      <td>2018-10-22</td>\n                      <td><span class=\"code\">system()</span> fix Raspberry Pi detection</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.7</th>\n                      <td>2018-10-05</td>\n                      <td>fixed typos</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.6</th>\n                      <td>2018-09-12</td>\n                      <td><span class=\"code\">mem()</span> bug parsing linux in other languages</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.5</th>\n                      <td>2018-09-07</td>\n                      <td><span class=\"code\">diskLayout()</span> tiny bug S.M.A.R.T status windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.4</th>\n                      <td>2018-09-06</td>\n                      <td>added icon to README.md</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.3</th>\n                      <td>2018-09-06</td>\n                      <td><span class=\"code\">diskLayout()</span> optimized media type detection (HD, SSD) on Windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.2</th>\n                      <td>2018-09-05</td>\n                      <td>updated imags shields icons</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.1</th>\n                      <td>2018-09-05</td>\n                      <td>updated documentation</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.0</th>\n                      <td>2018-09-04</td>\n                      <td><span class=\"code\">diskLayout()</span> added smartStatus</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.44.2</th>\n                      <td>2018-08-28</td>\n                      <td>added code quality badges</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.44.1</th>\n                      <td>2018-08-28</td>\n                      <td>code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.44.0</th>\n                      <td>2018-08-25</td>\n                      <td><span class=\"code\">battery()</span> bugfix & added type, model, manufacturer, serial</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.43.0</th>\n                      <td>2018-08-25</td>\n                      <td><span class=\"code\">cpuCurrentspeed()</span> added cpu speed for all cores</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.10</th>\n                      <td>2018-08-25</td>\n                      <td><span class=\"code\">processes()</span> optimized start time parsing</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.9</th>\n                      <td>2018-08-08</td>\n                      <td><span class=\"code\">cpuTemperature()</span> optimized parsing</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.8</th>\n                      <td>2018-08-03</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.7</th>\n                      <td>2018-08-03</td>\n                      <td><span class=\"code\">processes()</span> optimized parsing ps name</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.6</th>\n                      <td>2018-08-03</td>\n                      <td><span class=\"code\">processes()</span> bugfix parsing ps linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.5</th>\n                      <td>2018-08-03</td>\n                      <td><span class=\"code\">processes()</span> bugfix parsing ps linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.4</th>\n                      <td>2018-07-09</td>\n                      <td><span class=\"code\">cpuTemperature()</span> bugfix parsing negative values</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.3</th>\n                      <td>2018-07-05</td>\n                      <td><span class=\"code\">services()</span> bugfix not finding services with capital letters</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.2</th>\n                      <td>2018-07-03</td>\n                      <td><span class=\"code\">users()</span> optimized results if lack of permissions</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.1</th>\n                      <td>2018-07-03</td>\n                      <td><span class=\"code\">versions()</span> bugfix git version macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.0</th>\n                      <td>2018-06-01</td>\n                      <td><span class=\"code\">processes()</span> added parent process PID</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.41.4</th>\n                      <td>2018-05-28</td>\n                      <td>windows exec WMIC in try catch</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.41.3</th>\n                      <td>2018-05-13</td>\n                      <td>improved SunOS support <span class=\"code\">getStaticData()</span>, <span class=\"code\">getDynamicData()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.41.2</th>\n                      <td>2018-05-13</td>\n                      <td>bugfix <span class=\"code\">system()</span> and <span class=\"code\">flags()</span> Raspberry Pi</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.41.1</th>\n                      <td>2018-05-11</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.41.0</th>\n                      <td>2018-05-11</td>\n                      <td><span class=\"code\">system()</span> Raspberry Pi bugfix and extended detection, added partial <span class=\"code\">SunOS</span> support</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.40.1</th>\n                      <td>2018-05-10</td>\n                      <td>bugfix <span class=\"code\">system().sku</span> (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.40.0</th>\n                      <td>2018-04-29</td>\n                      <td>extended <span class=\"code\">versions()</span> (php, redis, mongodb)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.39.0</th>\n                      <td>2018-04-29</td>\n                      <td>added <span class=\"code\">versions().mysql</span> and <span class=\"code\">versions().nginx</span>, starting <span class=\"code\">SunOS</span>> support (untested)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.38.0</th>\n                      <td>2018-04-06</td>\n                      <td>added <span class=\"code\">battery().acconnected</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.12</th>\n                      <td>2018-04-05</td>\n                      <td>another optimization <span class=\"code\">battery().ischarging</span> for macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.11</th>\n                      <td>2018-04-05</td>\n                      <td>another optimization <span class=\"code\">battery().ischarging</span> for macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.10</th>\n                      <td>2018-04-05</td>\n                      <td><span class=\"code\">battery().ischarging</span> optimized for macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.9</th>\n                      <td>2018-04-03</td>\n                      <td>optimized <span class=\"code\">processes()</span>, bugfix <span class=\"code\">networkInterfaceDefault()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.8</th>\n                      <td>2018-03-25</td>\n                      <td>optimized <span class=\"code\">networkDefaultInterface()</span> detection, fixed network <span class=\"code\">operstate</span>> MacOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.7</th>\n                      <td>2018-03-13</td>\n                      <td>celebrating 4th birthday</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.6</th>\n                      <td>2018-03-12</td>\n                      <td>updated docs: fixed <span class=\"code\">diskLayout</span>>and <span class=\"code\">mamlayout</span>></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.5</th>\n                      <td>2018-03-12</td>\n                      <td>added support for <span class=\"code\">ip</span>> instead of <span class=\"code\">ifconfig</span>></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.4</th>\n                      <td>2018-02-22</td>\n                      <td>bugfix windows <span class=\"code\">processes()</span>, <span class=\"code\">disklayout()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.3</th>\n                      <td>2018-02-19</td>\n                      <td>added windows exec <span class=\"code\">windowsHide</span> option</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.2</th>\n                      <td>2018-02-15</td>\n                      <td>fixed bug <span class=\"code\">battery().percent</span> for macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.1</th>\n                      <td>2018-02-13</td>\n                      <td>fixed bug <span class=\"code\">battery().ischarging</span> for macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.0</th>\n                      <td>2018-02-11</td>\n                      <td>extended FreeBSD support <span class=\"code\">networkStats()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.36.0</th>\n                      <td>2018-02-11</td>\n                      <td>extended FreeBSD support <span class=\"code\">networkConnections()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.35.0</th>\n                      <td>2018-02-11</td>\n                      <td>extended FreeBSD support <span class=\"code\">processLoad()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.34.1</th>\n                      <td>2018-02-11</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.34.0</th>\n                      <td>2018-02-10</td>\n                      <td>first partial FreeBSD support</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.15</th>\n                      <td>2018-01-21</td>\n                      <td>optimized OSX battery</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.14</th>\n                      <td>2018-01-17</td>\n                      <td>bugfix <span class=\"code\">diskLayout()</span> (Windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.13</th>\n                      <td>2018-01-12</td>\n                      <td>bugfix <span class=\"code\">memLayout()</span> (Windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.12</th>\n                      <td>2017-12-25</td>\n                      <td>fixed typos</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.11</th>\n                      <td>2017-12-17</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.10</th>\n                      <td>2017-12-14</td>\n                      <td>bugfix WMIC blockDevice parse (Windows 7)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.9</th>\n                      <td>2017-12-14</td>\n                      <td>bugfix WMIC not found (Windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.8</th>\n                      <td>2017-12-02</td>\n                      <td>bugfix diskLayout().size (OSX)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.7</th>\n                      <td>2017-11-28</td>\n                      <td>bugfix diskLayout().size</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.6</th>\n                      <td>2017-11-16</td>\n                      <td>bugfix diskLayout().size</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.5</th>\n                      <td>2017-11-09</td>\n                      <td>code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.4</th>\n                      <td>2017-11-09</td>\n                      <td>bugfix graphics controller win (bytes)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.3</th>\n                      <td>2017-11-08</td>\n                      <td>bugfix cpu speed arm - type</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.2</th>\n                      <td>2017-11-08</td>\n                      <td>bugfix cpu speed arm</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.1</th>\n                      <td>2017-11-07</td>\n                      <td>improved bios and main board information</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.0</th>\n                      <td>2017-11-07</td>\n                      <td>added bios and main board information</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.32.4</th>\n                      <td>2017-11-02</td>\n                      <td>AMD cpu base frequencies table also for windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.32.3</th>\n                      <td>2017-11-02</td>\n                      <td>code cleanup, AMD cpu base frequencies table</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.32.2</th>\n                      <td>2017-11-01</td>\n                      <td>bugfix JSON.parse error <span class=\"code\">blockDevices()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.32.1</th>\n                      <td>2017-10-23</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.32.0</th>\n                      <td>2017-10-23</td>\n                      <td>extended <span class=\"code\">memLayout()</span> - added manufacturer</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.31.4</th>\n                      <td>2017-10-21</td>\n                      <td>updated <span class=\"code\">README.md</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.31.3</th>\n                      <td>2017-10-21</td>\n                      <td>bugfix <span class=\"code\">graphics()</span>, fixed typo <span class=\"code\">README.md</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.31.2</th>\n                      <td>2017-10-16</td>\n                      <td>bugfix <span class=\"code\">graphics()</span> vendor and model parsing linux VGA/3D</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.31.1</th>\n                      <td>2017-10-16</td>\n                      <td>bugfix <span class=\"code\">graphics()</span> vendor and model parsing linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.31.0</th>\n                      <td>2017-10-15</td>\n                      <td>extended windows support <span class=\"code\">cpuFlags()</span> (partially)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.30.6</th>\n                      <td>2017-10-05</td>\n                      <td>updated community profile</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.30.5</th>\n                      <td>2017-10-05</td>\n                      <td>bugfix <span class=\"code\">users()</span> - parsing values on windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.30.4</th>\n                      <td>2017-10-03</td>\n                      <td>bugfix <span class=\"code\">cpuTemperature()</span> - parsing values on windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.30.3</th>\n                      <td>2017-10-03</td>\n                      <td>bugfix <span class=\"code\">cpuTemperature()</span> - max value on windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.30.2</th>\n                      <td>2017-09-26</td>\n                      <td>bugfix <span class=\"code\">networkInterfaces()</span> - optimized ip6 address selection</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.30.1</th>\n                      <td>2017-09-21</td>\n                      <td>bugfix/typo <span class=\"code\">inetChecksite()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.30.0</th>\n                      <td>2017-09-21</td>\n                      <td>extended <span class=\"code\">versions()</span> (added <span class=\"code\">yarn</span>, <span class=\"code\">gulp</span>, <span class=\"code\">grunt</span>, <span class=\"code\">tsc</span>, <span class=\"code\">git</span>)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.29.0</th>\n                      <td>2017-09-15</td>\n                      <td>extended windows support <span class=\"code\">services()</span>, optimized <span class=\"code\">diskLayout()</span> (OSX), bugfixes</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.28.0</th>\n                      <td>2017-09-14</td>\n                      <td>extended windows support <span class=\"code\">processes()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.27.1</th>\n                      <td>2017-09-13</td>\n                      <td>updated Raspberry version detection <span class=\"code\">system()</span> (Pi 3, Zero)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.27.0</th>\n                      <td>2017-09-12</td>\n                      <td>added raw data to <span class=\"code\">currentLoad()</span>, fixed <span class=\"code\">networkInterfaces()</span> MAC problem node 8.x</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.26.2</th>\n                      <td>2017-09-01</td>\n                      <td>removed redundant code</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.26.1</th>\n                      <td>2017-08-23</td>\n                      <td>fixed <span class=\"code\">cpu().speed</span> windows / AMD, updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.26.0</th>\n                      <td>2017-08-21</td>\n                      <td>extended <span class=\"code\">getDynamicData()</span> (windows), updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.25.1</th>\n                      <td>2017-08-07</td>\n                      <td>updated docs </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.25.0</th>\n                      <td>2017-08-07</td>\n                      <td>improved windows support <span class=\"code\">networkStats()</span>, <span class=\"code\">cpuCache()</span>, bug fix <span class=\"code\">getStaticData()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.24.0</th>\n                      <td>2017-08-05</td>\n                      <td>extended windows support <span class=\"code\">networkStats()</span>, <span class=\"code\">networkConnections()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.7</th>\n                      <td>2017-07-11</td>\n                      <td>bug fix <span class=\"code\">diskLayout()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.6</th>\n                      <td>2017-07-11</td>\n                      <td>added <span class=\"code\">cpuFlags()</span> to <span class=\"code\">getStaticData()</span>, bug fix <span class=\"code\">graphics()</span> (Win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.5</th>\n                      <td>2017-06-29</td>\n                      <td>bug fix <span class=\"code\">inetChecksite()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.4</th>\n                      <td>2017-06-24</td>\n                      <td>bug fix <span class=\"code\">getDynamicData(), getAllData() - mem</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.3</th>\n                      <td>2017-06-23</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.2</th>\n                      <td>2017-06-23</td>\n                      <td>bug fix <span class=\"code\">battery</span> (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.1</th>\n                      <td>2017-06-22</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.0</th>\n                      <td>2017-06-22</td>\n                      <td>added <span class=\"code\">memLayout</span>, <span class=\"code\">diskLayout</span>, extended windows support (<span class=\"code\">inetChecksite<span class=\"code\"></span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.22.0</th>\n                      <td>2017-06-19</td>\n                      <td>extended windows support (<span class=\"code\">users<span class=\"code\">, <span class=\"code\">inetLatency</span>)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.21.0</th>\n                      <td>2017-06-18</td>\n                      <td>extended time (timezone), extended windows support (battery, getAll...)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.20.1</th>\n                      <td>2017-06-17</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.20.0</th>\n                      <td>2017-06-16</td>\n                      <td>extend WIN support (cpu, cpuCache, cpuCurrentspeed, mem, networkInterfaces, docker)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.19.0</th>\n                      <td>2017-06-12</td>\n                      <td>OSX temperature now an optional dependency </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.18.0</th>\n                      <td>2017-05-27</td>\n                      <td>extended <span class=\"code\">cpu</span> info (vendor, family, model, stepping, revision, cache, speedmin/max)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.17.3</th>\n                      <td>2017-04-29</td>\n                      <td>minor fix (blockDevices data array, Windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.17.2</th>\n                      <td>2017-04-24</td>\n                      <td>minor fix (removed console.log)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.17.1</th>\n                      <td>2017-04-23</td>\n                      <td>fixed bugs fsSize(win), si.processes (command), si.osinfo(win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.17.0</th>\n                      <td>2017-02-19</td>\n                      <td>windows support for some first functions, extended process list (linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.16.0</th>\n                      <td>2017-01-19</td>\n                      <td>blockDevices: added removable attribute + fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.15.1</th>\n                      <td>2017-01-17</td>\n                      <td>minor cpuTemperature fix (OSX)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.15.0</th>\n                      <td>2017-01-15</td>\n                      <td>added cpuTemperature also for OSX</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.14.0</th>\n                      <td>2017-01-14</td>\n                      <td>added currentLoad per cpu/core, cpu cache and cpu flags</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.13.0</th>\n                      <td>2016-11-23</td>\n                      <td>added shell (returns standard shell)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.12.0</th>\n                      <td>2016-11-17</td>\n                      <td>refactoring and extended currentLoad</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.11.2</th>\n                      <td>2016-11-16</td>\n                      <td>blockDevices: improved for older lsblk versions</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.11.1</th>\n                      <td>2016-11-16</td>\n                      <td>fixed small bug in blockDevices</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.11.0</th>\n                      <td>2016-11-15</td>\n                      <td>blockDevices for OSX and extended blockDevices</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.10.2</th>\n                      <td>2016-11-14</td>\n                      <td>bug fix fsSize on OSX</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.10.1</th>\n                      <td>2016-11-14</td>\n                      <td>optimization fsStats, disksIO, networkStats</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.10.0</th>\n                      <td>2016-11-12</td>\n                      <td>added blockDevices, fixed fsSize, added file system type</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.9.0</th>\n                      <td>2016-11-11</td>\n                      <td>added MAC address to networkInterfaces, fixed currentLoad</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.8.1</th>\n                      <td>2016-11-04</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.8.0</th>\n                      <td>2016-11-04</td>\n                      <td>added dockerContainerProcesses</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.7.1</th>\n                      <td>2016-11-03</td>\n                      <td>code refactoring</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.7.0</th>\n                      <td>2016-11-02</td>\n                      <td>extended docker stats, and no longer relying on curl</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.6.0</th>\n                      <td>2016-09-14</td>\n                      <td>added versions (kernel, ssl, node, npm, pm2, ...)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.5.1</th>\n                      <td>2016-09-14</td>\n                      <td>bugfix graphics info</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.5.0</th>\n                      <td>2016-09-14</td>\n                      <td>added graphics info (controller, display)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.4.4</th>\n                      <td>2016-09-02</td>\n                      <td>tiny fixes system.model, getDefaultNetworkInterface</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.4.3</th>\n                      <td>2016-09-02</td>\n                      <td>tiny bug fix fsStats, disksIO OSX</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.4.2</th>\n                      <td>2016-09-01</td>\n                      <td>improved default network interface</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.4.1</th>\n                      <td>2016-08-30</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.4.0</th>\n                      <td>2016-08-30</td>\n                      <td>rewritten processes current cpu usage</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.3.0</th>\n                      <td>2016-08-24</td>\n                      <td>process list added to processes</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.2.1</th>\n                      <td>2016-08-19</td>\n                      <td>updated docs, improvement system</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.2.0</th>\n                      <td>2016-08-19</td>\n                      <td>added battery information</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.1.1</th>\n                      <td>2016-08-18</td>\n                      <td>improved system and os detection (vm, ...), bugfix disksIO</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.1.0</th>\n                      <td>2016-08-18</td>\n                      <td>added Docker stats</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.0.1</th>\n                      <td>2016-08-17</td>\n                      <td>Bug-Fix disksIO, users, updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.0.0</th>\n                      <td>2016-08-03</td>\n                      <td>new major version 3.0</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">2.0.5</th>\n                      <td>2016-03-02</td>\n                      <td>changed .gitignore</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">2.0.4</th>\n                      <td>2016-02-22</td>\n                      <td>tiny correction - removed double quotes CPU brand, ...</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">2.0.3</th>\n                      <td>2016-02-22</td>\n                      <td>optimized cpuCurrentspeed</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">2.0.2</th>\n                      <td>2016-02-22</td>\n                      <td>added CoreOS identification</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">2.0.1</th>\n                      <td>2016-01-07</td>\n                      <td>minor patch</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">2.0.0</th>\n                      <td>2016-01-07</td>\n                      <td>new major version 2.0</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.7</th>\n                      <td>2015-11-27</td>\n                      <td>fixed: si.network_speed()</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.6</th>\n                      <td>2015-09-17</td>\n                      <td>fixed: si.users()</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.5</th>\n                      <td>2015-09-14</td>\n                      <td>updated dependencies</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.4</th>\n                      <td>2015-07-18</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.3</th>\n                      <td>2015-07-18</td>\n                      <td>bugfix cpu cores</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.2</th>\n                      <td>2015-07-18</td>\n                      <td>bugfix cpu_currentspeed, cpu_temperature</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.1</th>\n                      <td>2015-07-18</td>\n                      <td>documentation update</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.0</th>\n                      <td>2015-07-18</td>\n                      <td>bug-fixes, version bump, published as npm component</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">0.0.3</th>\n                      <td>2014-04-14</td>\n                      <td>bug-fix (cpu_speed)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">0.0.2</th>\n                      <td>2014-03-14</td>\n                      <td>Optimization FS-Speed & CPU current speed</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">0.0.1</th>\n                      <td>2014-03-13</td>\n                      <td>initial release</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n  </section>\n  </div>\n  <footer class=\"container-fluid footer\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\".\" class=\"medium home\">Home</a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"security.html\">Security Advisories&nbsp;&nbsp;<i class=\"fas fa-shield-check\"></i></a></li>\n            <li><a href=\"https://github.com/sebhildebrandt/systeminformation\">Github <i class=\"fab fa-github\"></i></a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"https://buymeacoff.ee/systeminfo\" class=\"medium badge bg-primary\"><i class=\"fas fa-coffee\"></i>&nbsp;&nbsp;Buy me a coffee</a></li>\n          </ul>\n        </div>\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\"gettingstarted.html\">Quick Start</a></li>\n            <li><a href=\"changes.html\">Version 5 Changes</a></li>\n            <li><a href=\"history.html\">Full Version History</a></li>\n            <li><a href=\"tests.html\">Testing</a></li>\n            <li><a href=\"issues.html\">Known Issues</a></li>\n            <li><a href=\"statsfunctions.html\">Stats Functions</a></li>\n          </ul>\n        </div>\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\"contributors.html\">Contributors</a></li>\n            <li><a href=\"trademarks.html\">Trademarks</a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"copyright.html\">Copyright &amp; License&nbsp;&nbsp;<img src=\"https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\" alt=\"MIT license\" /></a></li>\n            <li><a href=\"https://www.plus-innovations.com\">&copy; 2023 Sebastian Hildebrandt</a></li>\n            <li><a href=\"https://www.plus-innovations.com\">+innovations GmbH</a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </footer>\n\n  <script>\n    window.onload = function (e) {\n      createMenu();\n    }\n  </script>\n\n</body>\n\n</html>\n", "<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <!-- Required meta tags -->\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n  <!-- CSS -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" href=\"https://pro.fontawesome.com/releases/v5.15.1/css/all.css\" integrity=\"sha384-9ZfPnbegQSumzaE7mks2IYgHoayLtuto3AS6ieArECeaR8nCfliJVuLh/GaQ1gyM\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" href=\"roboto/css/roboto.css\">\n  <link rel=\"stylesheet\" href=\"styles.css\">\n\n  <!-- Favicon -->\n  <link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href=\"/assets/android-icon-192x192.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/assets/favicon-32x32.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"/assets/favicon-96x96.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/assets/favicon-16x16.png\">\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/typed.js/2.0.12/typed.min.js\" integrity=\"sha512-3J8teBiHrSyaaRBajZyIEtpDsXdPq1gsznKWIVb5CnorQuFhjWGhWe54z8YNnHHr7MZuExb9m5kvf964HiT1Sw==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n\n  <title>systeminformation</title>\n  <script>\n    let vh = window.innerHeight * 0.01;\n    // Then we set the value in the --vh custom property to the root of the document\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n\n    // We listen to the resize event\n    // window.addEventListener('resize', () => {\n    //   // We execute the same script as before\n    //   let vh = window.innerHeight * 0.01;\n    //   document.documentElement.style.setProperty('--vh', `${vh}px`);\n    // });\n    function init() {\n      typed();\n      document.querySelector('.down').addEventListener('click', function () {\n        scrollIt(\n          document.querySelector('.quickstart'),\n          600,\n          'easeOutQuad',\n          function () {\n            console.log('READY');\n          }\n        );\n      });\n      getDownloads();\n    }\n    function numberWithCommas(x) {\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n    function getDownloads() {\n      var xhttp = new XMLHttpRequest();\n      xhttp.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n          var downloads = JSON.parse(this.responseText);\n          document.getElementById(\"downloads\").innerHTML = numberWithCommas(downloads.downloads);\n        }\n      };\n      xhttp.open(\"GET\", \"https://api.npmjs.org/downloads/point/last-month/systeminformation\", true);\n      xhttp.send();\n    }\n    function getVersion() {\n      var xhttp = new XMLHttpRequest();\n      xhttp.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n          var package = JSON.parse(this.responseText);\n          document.getElementById(\"version\").innerHTML = package.version;\n        }\n      };\n      xhttp.open(\"GET\", \"https://registry.npmjs.org/systeminformation/latest\", true);\n      xhttp.send();\n    }\n    function typed() {\n      var options = {\n        strings: [\"System and OS information library for node.js\", \"Get detailed hardware, system &amp; OS information.\", \"For Linux, macOS, Windows, FreeBSD, OpenBSD, NetBSD, SunOS, Android\"],\n        typeSpeed: 60,\n        loop: false,\n        backDelay: 1200,\n\n      };\n      var typed = new Typed('#typed', options);\n    }\n    function scrollIt(destination, duration = 200, easing = 'linear', callback) {\n\n      const easings = {\n        linear(t) {\n          return t;\n        },\n        easeInQuad(t) {\n          return t * t;\n        },\n        easeOutQuad(t) {\n          return t * (2 - t);\n        },\n        easeInOutQuad(t) {\n          return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n        },\n        easeInCubic(t) {\n          return t * t * t;\n        },\n        easeOutCubic(t) {\n          return (--t) * t * t + 1;\n        },\n        easeInOutCubic(t) {\n          return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n        },\n        easeInQuart(t) {\n          return t * t * t * t;\n        },\n        easeOutQuart(t) {\n          return 1 - (--t) * t * t * t;\n        },\n        easeInOutQuart(t) {\n          return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t;\n        },\n        easeInQuint(t) {\n          return t * t * t * t * t;\n        },\n        easeOutQuint(t) {\n          return 1 + (--t) * t * t * t * t;\n        },\n        easeInOutQuint(t) {\n          return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t;\n        }\n      };\n\n      const start = window.pageYOffset;\n      const startTime = 'now' in window.performance ? performance.now() : new Date().getTime();\n\n      const documentHeight = Math.max(document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight);\n      const windowHeight = window.innerHeight || document.documentElement.clientHeight || document.getElementsByTagName('body')[0].clientHeight;\n      const destinationOffset = typeof destination === 'number' ? destination : destination.offsetTop;\n      const destinationOffsetToScroll = Math.round(documentHeight - destinationOffset < windowHeight ? documentHeight - windowHeight : destinationOffset);\n\n      if ('requestAnimationFrame' in window === false) {\n        window.scroll(0, destinationOffsetToScroll);\n        if (callback) {\n          callback();\n        }\n        return;\n      }\n\n      function scroll() {\n        const now = 'now' in window.performance ? performance.now() : new Date().getTime();\n        const time = Math.min(1, ((now - startTime) / duration));\n        const timeFunction = easings[easing](time);\n        window.scroll(0, Math.ceil((timeFunction * (destinationOffsetToScroll - start)) + start));\n\n        if (window.pageYOffset === destinationOffsetToScroll) {\n          if (callback) {\n            callback();\n          }\n          return;\n        }\n\n        requestAnimationFrame(scroll);\n      }\n\n      scroll();\n    }\n  </script>\n\n</head>\n\n<body>\n  <header class=\"bg-image-full\">\n    <div class=\"top-container\">\n      <a href=\"security.html\" class=\"recommendation\">Security advisory:<br>Update to v5.6.13</a>\n      <img class=\"logo\" src=\"assets/logo.png\" alt=\"logo\">\n      <div class=\"title\">systeminformation</div>\n      <div class=\"subtitle\"><span id=\"typed\"></span>&nbsp;</div>\n      <div class=\"version\">New Version: <span id=\"version\">5.21.6</span></div>\n      <button class=\"btn btn-light\" onclick=\"location.href='https://github.com/sebhildebrandt/systeminformation'\">View on Github <i class=\" fab fa-github\"></i></button>\n    </div>\n    <div class=\"down\">\n      <button class=\"btn btn-primary mb-2\" onclick=\"location.href='https://www.buymeacoffee.com/systeminfo'\">Buy me a coffee&nbsp;&nbsp;<i class=\"far fa-mug-hot\"></i></button>\n      <br>Read Documentation<br>\n      <i class=\"fal fa-caret-down caret\"></i>\n    </div>\n  </header>\n\n  <div class=\"container-fluid\">\n\n    <section class=\"container quickstart\">\n      <div class=\"row\">\n        <div class=\"col-12 sectionheader index\">\n          <div class=\"title\">Overview</div>\n          <div class=\"subtitle\">Node.js system information package. Lightweight collection of 50+ functions to retrieve detailed hardware, system and OS information. For Linux, macOS, partial Windows, FreeBSD, OpenBSD, NetBSD, SunOS and Android support. Dependency free.</div>\n          <div class=\"subtitle bold\">#1 NPM ranking for backend packages</div>\n          <div class=\"npmicons\">\n            <a href=\"https://npmjs.org/package/systeminformation\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/df25636cbefadf18ca1532e3bdcd0d2794235e19/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f73797374656d696e666f726d6174696f6e2e7376673f7374796c653d666c61742d737175617265\" alt=\"NPM Version\" data-canonical-src=\"https://img.shields.io/npm/v/systeminformation.svg?style=flat-square\" style=\"max-width:100%;\"></a>\n            <a href=\"https://systeminformation.io\" rel=\"nofollow\"><img src=\"assets/no-dependencies.svg\" alt=\"no dependencies\"></a>\n            <a href=\"https://github.com/sebhildebrandt/systeminformation/blob/master/LICENSE\"><img src=\"https://camo.githubusercontent.com/4b5966a2a252ee0f241a1e03b13417178eb4964f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c61742d737175617265\" alt=\"MIT license\" data-canonical-src=\"https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\" style=\"max-width:100%;\"></a>\n          </div>\n          <div class=\"text larger\"><span class=\"warning\">Security issues:</span> Please have a look at our <a href=\"../security.html\">security advisories</a>.</div>\n\n        </div>\n      </div>\n      <div class=\"row justify-content-center sectionheader index\">\n        <div class=\"col-8\">\n          <hr>\n        </div>\n      </div>\n      <div class=\"row number-section\">\n        <div class=\"col-xl-4 col-lg-4 col-md-4 col-12\">\n          <div class=\"numbers\">15,642</div>\n          <div class=\"title\">Lines of code</div>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-4 col-12\">\n          <div id=\"downloads\" class=\"numbers\">...</div>\n          <div class=\"title\">Downloads last month</div>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-4 col-12\">\n          <div class=\"numbers\">646</div>\n          <div class=\"title\">Dependents</div>\n        </div>\n      </div>\n      <div class=\"row justify-content-center sectionheader index\">\n        <div class=\"col-8\">\n          <hr>\n        </div>\n      </div>\n      <div class=\"row\" id=\"docs\">\n        <div class=\"col-12 sectionheader index\">\n          <div class=\"title\">Documentation</div>\n          <div class=\"subtitle\">Detailed documentation and reference for version 5.x.x</div>\n          <div class=\"title-small\">Breaking Changes - Version 5</div>\n          <div class=\"text\">We made a lot of improvements and changes in the new version. <span class=\"bold\">Version 5 is NOT fully backward compatible to version 4!</span> Be aware, there are some breaking changes. Please refer to the <a href=\"changes.html\">Version 5 - Changes</a> page to see a full documentation of all changes you should have a look on.</div>\n          <div class=\"text larger\"><span class=\"bold\">Version 4 documentation</span> can be found <a href=\"v4/index.html\">here</a>.</div>\n        </div>\n      </div>\n      <div class=\"row index\">\n        <a href=\"gettingstarted.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-download\"></i></div>\n            <div class=\"icontitle\">Quick Start</div>\n          </div>\n        </a>\n        <a href=\"general.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-th-list\"></i></div>\n            <div class=\"icontitle\">General</div>\n          </div>\n        </a>\n        <a href=\"system.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-server\"></i></div>\n            <div class=\"icontitle\">System</div>\n          </div>\n        </a>\n        <a href=\"cpu.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-microchip\"></i></div>\n            <div class=\"icontitle\">CPU</div>\n          </div>\n        </a>\n        <a href=\"memory.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-memory\"></i></div>\n            <div class=\"icontitle\">Memory</div>\n          </div>\n        </a>\n        <a href=\"battery.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-battery-half\"></i></div>\n            <div class=\"icontitle\">Battery</div>\n          </div>\n        </a>\n        <a href=\"graphics.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-desktop\"></i></div>\n            <div class=\"icontitle\">Graphics</div>\n          </div>\n        </a>\n        <a href=\"os.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-window\"></i></div>\n            <div class=\"icontitle\">OS</div>\n          </div>\n        </a>\n        <a href=\"processes.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-chart-line\"></i></div>\n            <div class=\"icontitle\">Process/Service</div>\n          </div>\n        </a>\n        <a href=\"filesystem.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-hdd\"></i></div>\n            <div class=\"icontitle\">Disks / FS</div>\n          </div>\n        </a>\n        <a href=\"usb.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fab fa-usb\"></i></div>\n            <div class=\"icontitle\">USB</div>\n          </div>\n        </a>\n        <a href=\"printer.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-print\"></i></div>\n            <div class=\"icontitle\">Printer</div>\n          </div>\n        </a>\n        <a href=\"audio.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-volume\"></i></div>\n            <div class=\"icontitle\">Audio</div>\n          </div>\n        </a>\n        <a href=\"network.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-network-wired\"></i></div>\n            <div class=\"icontitle\">Network</div>\n          </div>\n        </a>\n        <a href=\"wifi.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-wifi\"></i></div>\n            <div class=\"icontitle\">Wifi</div>\n          </div>\n        </a>\n        <a href=\"bluetooth.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fab fa-bluetooth\"></i></div>\n            <div class=\"icontitle\">Bluetooth</div>\n          </div>\n        </a>\n        <a href=\"docker.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fab fa-docker\"></i></div>\n            <div class=\"icontitle\">Docker</div>\n          </div>\n        </a>\n        <a href=\"vbox.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-box-open\"></i></div>\n            <div class=\"icontitle\">Virtual Box</div>\n          </div>\n        </a>\n      </div>\n      <div class=\"row justify-content-center sectionheader index\">\n        <div class=\"col-8\">\n          <hr>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12 sectionheader index\">\n          <div class=\"title-small\">Issues</div>\n          <div class=\"text\"><span class=\"warning\">Security issues:</span> We highly recommend to have a look at our <a href=\"security.html\">security advisories</a></div>\n          <div class=\"text\"><span class=\"bold\">Having an issue</span>: If you run into problems, please check out <a href=\"issues.html\">known issues page</a> first.<br>If you still have problems, please feel free to open an issue on our <a href=\"https://github.com/sebhildebrandt/systeminformation/issues\">github page</a></div>\n        </div>\n      </div>\n    </section>\n  </div>\n\n  <footer class=\"container-fluid footer\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\".\" class=\"medium home\">Home</a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"security.html\">Security Advisories&nbsp;&nbsp;<i class=\"fas fa-shield-check\"></i></a></li>\n            <li><a href=\"https://github.com/sebhildebrandt/systeminformation\">Github <i class=\"fab fa-github\"></i></a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"https://buymeacoff.ee/systeminfo\" class=\"medium badge bg-primary\"><i class=\"fas fa-coffee\"></i>&nbsp;&nbsp;Buy me a coffee</a></li>\n          </ul>\n        </div>\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\"gettingstarted.html\">Quick Start</a></li>\n            <li><a href=\"changes.html\">Version 5 Changes</a></li>\n            <li><a href=\"history.html\">Full Version History</a></li>\n            <li><a href=\"tests.html\">Testing</a></li>\n            <li><a href=\"issues.html\">Known Issues</a></li>\n            <li><a href=\"statsfunctions.html\">Stats Functions</a></li>\n          </ul>\n        </div>\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\"contributors.html\">Contributors</a></li>\n            <li><a href=\"trademarks.html\">Trademarks</a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"copyright.html\">Copyright &amp; License&nbsp;&nbsp;<img src=\"https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\" alt=\"MIT license\" /></a></li>\n            <li><a href=\"https://www.plus-innovations.com\">&copy; 2023 Sebastian Hildebrandt</a></li>\n            <li><a href=\"https://www.plus-innovations.com\">+innovations GmbH</a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </footer>\n\n  <!-- Optional JavaScript -->\n  <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n  <script>\n    window.onload = function (e) {\n      init();\n    }\n  </script>\n</body>\n\n</html>\n", "<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <!-- Required meta tags -->\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n  <!-- CSS -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" href=\"https://pro.fontawesome.com/releases/v5.15.1/css/all.css\" integrity=\"sha384-9ZfPnbegQSumzaE7mks2IYgHoayLtuto3AS6ieArECeaR8nCfliJVuLh/GaQ1gyM\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" href=\"roboto/css/roboto.css\">\n  <link rel=\"stylesheet\" href=\"styles.css\">\n  <script src=\"main.js\"></script>\n\n  <!-- Favicon -->\n  <link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href=\"/assets/android-icon-192x192.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/assets/favicon-32x32.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"/assets/favicon-96x96.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/assets/favicon-16x16.png\">\n\n  <title>systeminformation</title>\n\n</head>\n\n<body>\n  <nav class=\"nav\">\n    <div class=\"container\">\n      <a href=\".\"><img class=\"logo float-left\" src=\"assets/logo.png\" alt=\"logo\">\n        <div class=\"title float-left\">systeminformation</div>\n      </a>\n      <div class=\"text float-right github\"><a href=\"https://github.com/sebhildebrandt/systeminformation\">View on Github <i class=\"fab fa-github\"></i></a></div>\n      <div class=\"text float-right todocs\"><a href=\"./#docs\">Docs Overview</a></div>\n    </div>\n  </nav>\n\n  <div class=\"container-fluid\">\n    <section class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-4 col-lg-3 col-xl-2 menu\" id=\"menu\">\n        </div>\n        <div class=\"col-12 col-md-8 col-lg-9 col-xl-10 content\">\n          <div class=\"row\">\n            <div class=\"col-12 sectionheader\">\n              <div class=\"title\">Security Advisories</div>\n              <div class=\"text\">\n                <h2>Passing User Paramters to Systeminformation</h2>\n                <p>For most of the applications that are using <span class=\"code\">systeminformation</span>, there is no reason to worry. <span class=\"bold\">But be aware!</span> If you are using <span class=\"code\">inetLatency()</span>, <span class=\"code\">inetChecksite()</span>, <span class=\"code\">services()</span>, <span class=\"code\">processLoad()</span>, <span class=\"code\">versions()</span> with arbitrary untrusted user input, you should pay extra attention! We are doing a lot of input sanitation for those functions inside this package but we cannot handle all cases!</p>\n                <p class=\"warning\">This can lead to serious impact on your servers!</p>\n                <p>We highly recommend to always upgrade to the latest version of our package. We maintain security updates for version 5 AND also version 4. For version 4 you can install latest version by placing <span class=\"code\">\"systeminformation\": \"^4\"</span> in your package.json (dependencies) and run <span class=\"code\">npm install</span></p>\n\n                <h2>Command Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 5.6.13 and &lt; 4.34.21<br>\n                  <span class=\"bold\">Date:</span> 2021-05-04<br>\n                  <span class=\"bold\">CVE indentifier</span> -\n                </p>\n\n                <h4>Impact</h4>\n                <p>We had an issue that there was a possibility to perform a potential command injection possibility by passing a non string values as a parameter to the <span class=\"code\">dockerImagesInspect()</span>, <span class=\"code\">dockerContainerInspect()</span>, <span class=\"code\">dockerContainerProcesses()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with parameter checking. Please upgrade to version >= 5.6.13 (or >= 4.34.21 if you are using version 4).</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize parameter strings that are passed to <span class=\"code\">dockerImagesInspect()</span>, <span class=\"code\">dockerContainerInspect()</span>, <span class=\"code\">dockerContainerProcesses()</span> (string only)</p>\n                <hr>\n                <br>\n                <h2>Command Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 5.6.11 and &lt; 4.34.20<br>\n                  <span class=\"bold\">Date:</span> 2021-04-08<br>\n                  <span class=\"bold\">CVE indentifier</span> -\n                </p>\n\n                <h4>Impact</h4>\n                <p>We had an issue that there was a possibility to perform a potential command injection possibility by passing a non string values as a parameter to the <span class=\"code\">versions()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with parameter checking. Please upgrade to version >= 5.6.11 (or >= 4.34.20 if you are using version 4).</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize parameter strings that are passed to <span class=\"code\">versions()</span> (string only)</p>\n                <hr>\n                <br>\n                <h2>Command Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 5.6.4 and &lt; 4.34.17<br>\n                  <span class=\"bold\">Date:</span> 2021-03-15<br>\n                  <span class=\"bold\">CVE indentifier</span> CVE-2021-21388\n                </p>\n\n                <h4>Impact</h4>\n                <p>We had an issue that there was a possibility to perform a potential command injection possibility by passing a manipulated string prototype as a parameter to the following functions. Affected commands: <span class=\"code\">inetLatency()</span>, <span class=\"code\">inetChecksite()</span>, <span class=\"code\">services()</span>, <span class=\"code\">processLoad()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with additional parameter checking. Please upgrade to version >= 5.6.4 (or >= 4.34.17 if you are using version 4).</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize parameter strings that are passed to <span class=\"code\">inetLatency()</span>, <span class=\"code\">inetChecksite()</span>, <span class=\"code\">services()</span>, <span class=\"code\">processLoad()</span> (string only)</p>\n                <hr>\n                <br>\n                <h2>Insufficient File Scheme Validation</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 5.3.2 and &lt; 4.34.12<br>\n                  <span class=\"bold\">Date:</span> 2021-02-15<br>\n                  <span class=\"bold\">CVE indentifier</span> -\n                </p>\n\n                <h4>Impact</h4>\n                <p>We had an issue that there was a possibility to run inetChecksite against local files due to improper file scheme validation. Affected commands: <span class=\"code\">inetLatency()</span>, <span class=\"code\">inetChecksite()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with additional parameter checking. Please upgrade to version >= 5.3.2 (or >= 4.34.12 if you are using version 4).</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to <span class=\"code\">inetLatency()</span>, <span class=\"code\">inetChecksite()</span> (sanitize `file://` parameter)</p>\n                <hr>\n                <br>\n                <h2>Command Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 5.3.1 and &lt; 4.34.11<br>\n                  <span class=\"bold\">Date:</span> 2021-02-14<br>\n                  <span class=\"bold\">CVE indentifier</span> CVE-2021-21315\n                </p>\n\n                <h4>Impact</h4>\n                <p>We had an issue that there was a possibility to perform a potential command injection possibility by passing a manipulated array as a parameter to the following functions. Affected commands: <span class=\"code\">inetLatency()</span>, <span class=\"code\">inetChecksite()</span>, <span class=\"code\">services()</span>, <span class=\"code\">processLoad()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with additional parameter checking. Please upgrade to version >= 5.3.1 (or >= 4.34.11 if you are using version 4).</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to <span class=\"code\">inetLatency()</span>, <span class=\"code\">inetChecksite()</span>, <span class=\"code\">services()</span>, <span class=\"code\">processLoad()</span> (string only)</p>\n                <hr>\n                <br>\n                <h2>DOS Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 5.2.6 and &lt; 4.34.10<br>\n                  <span class=\"bold\">Date:</span> 2021-02-12<br>\n                  <span class=\"bold\">CVE indentifier</span> -\n                </p>\n\n                <h4>Impact</h4>\n                <p>Here we had an issue that there was a possibility to perform a ping command execution for too long time. Affected commands: <span class=\"code\">inetLatency()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with a shell string sanitation fix. Please upgrade to version >= 5.2.6 (or >= 4.34.10 if you are using version 4).</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to <span class=\"code\">inetLatency()</span> (no spaces)</p>\n                <hr>\n                <br>\n                <h2>Command Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 4.31.1<br>\n                  <span class=\"bold\">Date:</span> 2020-12-11<br>\n                  <span class=\"bold\">CVE indentifier</span> CVE-2020-26274, CVE-2020-28448\n                </p>\n\n                <h4>Impact</h4>\n                <p>Here we had an issue that there was a possibility to inject commands to the command line of your machine via systeminformation. Affected commands: <span class=\"code\">inetLatency()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with a shell string sanitation fix. Please upgrade to version >= 4.31.1</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to <span class=\"code\">inetLatency()</span></p>\n\n                <hr>\n                <br>\n                <h2>Command Injection Vulnerability - Prototype Pollution</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 4.30.5<br>\n                  <span class=\"bold\">Date:</span> 2020-11-26<br>\n                  <span class=\"bold\">CVE indentifier</span> CVE-2020-26245\n                </p>\n\n                <h4>Impact</h4>\n                <p>Here we had an issue that there was a possibility to inject commands to the command line by property pollution on the string object. Affected commands: <span class=\"code\">inetChecksite()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with a shell string sanitation fix as well as handling prototype polution. Please upgrade to version >= 4.30.5</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to <span class=\"code\">inetChecksite()</span></p>\n\n                <hr>\n                <br>\n                <h2>Command Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 4.27.11<br>\n                  <span class=\"bold\">Date:</span> 2020-10-26<br>\n                  <span class=\"bold\">CVE indentifier</span> CVE-2020-7752\n                </p>\n\n                <h4>Impact</h4>\n                <p>Here we had an issue that there was a possibility to inject commands to the command line of your machine via systeminformation. Affected commands: <span class=\"code\">inetChecksite()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with a shell string sanitation fix. Please upgrade to version >= 4.27.11</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to <span class=\"code\">inetChecksite()</span></p>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n  </section>\n  </div>\n  <footer class=\"container-fluid footer\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\".\" class=\"medium home\">Home</a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"security.html\">Security Advisories&nbsp;&nbsp;<i class=\"fas fa-shield-check\"></i></a></li>\n            <li><a href=\"https://github.com/sebhildebrandt/systeminformation\">Github <i class=\"fab fa-github\"></i></a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"https://buymeacoff.ee/systeminfo\" class=\"medium badge bg-primary\"><i class=\"fas fa-coffee\"></i>&nbsp;&nbsp;Buy me a coffee</a></li>\n          </ul>\n        </div>\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\"gettingstarted.html\">Quick Start</a></li>\n            <li><a href=\"changes.html\">Version 5 Changes</a></li>\n            <li><a href=\"history.html\">Full Version History</a></li>\n            <li><a href=\"tests.html\">Testing</a></li>\n            <li><a href=\"issues.html\">Known Issues</a></li>\n            <li><a href=\"statsfunctions.html\">Stats Functions</a></li>\n          </ul>\n        </div>\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\"contributors.html\">Contributors</a></li>\n            <li><a href=\"trademarks.html\">Trademarks</a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"copyright.html\">Copyright &amp; License&nbsp;&nbsp;<img src=\"https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\" alt=\"MIT license\" /></a></li>\n            <li><a href=\"https://www.plus-innovations.com\">&copy; 2023 Sebastian Hildebrandt</a></li>\n            <li><a href=\"https://www.plus-innovations.com\">+innovations GmbH</a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </footer>\n\n  <script>\n    window.onload = function (e) {\n      createMenu();\n    }\n  </script>\n</body>\n\n</html>", "'use strict';\n// @ts-check\n// ==================================================================================\n// wifi.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2023\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 9. wifi\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\n\nfunction wifiDBFromQuality(quality) {\n  return (parseFloat(quality) / 2 - 100);\n}\n\nfunction wifiQualityFromDB(db) {\n  const result = 2 * (parseFloat(db) + 100);\n  return result <= 100 ? result : 100;\n}\n\nconst _wifi_frequencies = {\n  1: 2412,\n  2: 2417,\n  3: 2422,\n  4: 2427,\n  5: 2432,\n  6: 2437,\n  7: 2442,\n  8: 2447,\n  9: 2452,\n  10: 2457,\n  11: 2462,\n  12: 2467,\n  13: 2472,\n  14: 2484,\n  32: 5160,\n  34: 5170,\n  36: 5180,\n  38: 5190,\n  40: 5200,\n  42: 5210,\n  44: 5220,\n  46: 5230,\n  48: 5240,\n  50: 5250,\n  52: 5260,\n  54: 5270,\n  56: 5280,\n  58: 5290,\n  60: 5300,\n  62: 5310,\n  64: 5320,\n  68: 5340,\n  96: 5480,\n  100: 5500,\n  102: 5510,\n  104: 5520,\n  106: 5530,\n  108: 5540,\n  110: 5550,\n  112: 5560,\n  114: 5570,\n  116: 5580,\n  118: 5590,\n  120: 5600,\n  122: 5610,\n  124: 5620,\n  126: 5630,\n  128: 5640,\n  132: 5660,\n  134: 5670,\n  136: 5680,\n  138: 5690,\n  140: 5700,\n  142: 5710,\n  144: 5720,\n  149: 5745,\n  151: 5755,\n  153: 5765,\n  155: 5775,\n  157: 5785,\n  159: 5795,\n  161: 5805,\n  165: 5825,\n  169: 5845,\n  173: 5865,\n  183: 4915,\n  184: 4920,\n  185: 4925,\n  187: 4935,\n  188: 4940,\n  189: 4945,\n  192: 4960,\n  196: 4980\n};\n\nfunction wifiFrequencyFromChannel(channel) {\n  return {}.hasOwnProperty.call(_wifi_frequencies, channel) ? _wifi_frequencies[channel] : null;\n}\n\nfunction wifiChannelFromFrequencs(frequency) {\n  let channel = 0;\n  for (let key in _wifi_frequencies) {\n    if ({}.hasOwnProperty.call(_wifi_frequencies, key)) {\n      if (_wifi_frequencies[key] === frequency) { channel = util.toInt(key); }\n    }\n  }\n  return channel;\n}\n\nfunction ifaceListLinux() {\n  const result = [];\n  const cmd = 'iw dev 2>/dev/null';\n  try {\n    const all = execSync(cmd).toString().split('\\n').map(line => line.trim()).join('\\n');\n    const parts = all.split('\\nInterface ');\n    parts.shift();\n    parts.forEach(ifaceDetails => {\n      const lines = ifaceDetails.split('\\n');\n      const iface = lines[0];\n      const id = util.toInt(util.getValue(lines, 'ifindex', ' '));\n      const mac = util.getValue(lines, 'addr', ' ');\n      const channel = util.toInt(util.getValue(lines, 'channel', ' '));\n      result.push({\n        id,\n        iface,\n        mac,\n        channel\n      });\n    });\n    return result;\n  } catch (e) {\n    try {\n      const all = execSync('nmcli -t -f general,wifi-properties,wired-properties,interface-flags,capabilities,nsp device show 2>/dev/null').toString();\n      const parts = all.split('\\nGENERAL.DEVICE:');\n      let i = 1;\n      parts.forEach(ifaceDetails => {\n        const lines = ifaceDetails.split('\\n');\n        const iface = util.getValue(lines, 'GENERAL.DEVICE');\n        const type = util.getValue(lines, 'GENERAL.TYPE');\n        const id = i++; // // util.getValue(lines, 'GENERAL.PATH');\n        const mac = util.getValue(lines, 'GENERAL.HWADDR');\n        const channel = '';\n        if (type.toLowerCase() === 'wifi') {\n          result.push({\n            id,\n            iface,\n            mac,\n            channel\n          });\n        }\n      });\n      return result;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n\nfunction nmiDeviceLinux(iface) {\n  const cmd = `nmcli -t -f general,wifi-properties,capabilities,ip4,ip6 device show ${iface} 2>/dev/null`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const ssid = util.getValue(lines, 'GENERAL.CONNECTION');\n    return {\n      iface,\n      type: util.getValue(lines, 'GENERAL.TYPE'),\n      vendor: util.getValue(lines, 'GENERAL.VENDOR'),\n      product: util.getValue(lines, 'GENERAL.PRODUCT'),\n      mac: util.getValue(lines, 'GENERAL.HWADDR').toLowerCase(),\n      ssid: ssid !== '--' ? ssid : null\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction nmiConnectionLinux(ssid) {\n  const cmd = `nmcli -t --show-secrets connection show ${ssid} 2>/dev/null`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const bssid = util.getValue(lines, '802-11-wireless.seen-bssids').toLowerCase();\n    return {\n      ssid: ssid !== '--' ? ssid : null,\n      uuid: util.getValue(lines, 'connection.uuid'),\n      type: util.getValue(lines, 'connection.type'),\n      autoconnect: util.getValue(lines, 'connection.autoconnect') === 'yes',\n      security: util.getValue(lines, '802-11-wireless-security.key-mgmt'),\n      bssid: bssid !== '--' ? bssid : null\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction wpaConnectionLinux(iface) {\n  const cmd = `wpa_cli -i ${iface} status 2>&1`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const freq = util.toInt(util.getValue(lines, 'freq', '='));\n    return {\n      ssid: util.getValue(lines, 'ssid', '='),\n      uuid: util.getValue(lines, 'uuid', '='),\n      security: util.getValue(lines, 'key_mgmt', '='),\n      freq,\n      channel: wifiChannelFromFrequencs(freq),\n      bssid: util.getValue(lines, 'bssid', '=').toLowerCase()\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction getWifiNetworkListNmi() {\n  const result = [];\n  const cmd = 'nmcli -t -m multiline --fields active,ssid,bssid,mode,chan,freq,signal,security,wpa-flags,rsn-flags device wifi list 2>/dev/null';\n  try {\n    const stdout = execSync(cmd, { maxBuffer: 1024 * 20000 });\n    const parts = stdout.toString().split('ACTIVE:');\n    parts.shift();\n    parts.forEach(part => {\n      part = 'ACTIVE:' + part;\n      const lines = part.split(os.EOL);\n      const channel = util.getValue(lines, 'CHAN');\n      const frequency = util.getValue(lines, 'FREQ').toLowerCase().replace('mhz', '').trim();\n      const security = util.getValue(lines, 'SECURITY').replace('(', '').replace(')', '');\n      const wpaFlags = util.getValue(lines, 'WPA-FLAGS').replace('(', '').replace(')', '');\n      const rsnFlags = util.getValue(lines, 'RSN-FLAGS').replace('(', '').replace(')', '');\n      result.push({\n        ssid: util.getValue(lines, 'SSID'),\n        bssid: util.getValue(lines, 'BSSID').toLowerCase(),\n        mode: util.getValue(lines, 'MODE'),\n        channel: channel ? parseInt(channel, 10) : null,\n        frequency: frequency ? parseInt(frequency, 10) : null,\n        signalLevel: wifiDBFromQuality(util.getValue(lines, 'SIGNAL')),\n        quality: parseFloat(util.getValue(lines, 'SIGNAL')),\n        security: security && security !== 'none' ? security.split(' ') : [],\n        wpaFlags: wpaFlags && wpaFlags !== 'none' ? wpaFlags.split(' ') : [],\n        rsnFlags: rsnFlags && rsnFlags !== 'none' ? rsnFlags.split(' ') : []\n      });\n    });\n    return result;\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction getWifiNetworkListIw(iface) {\n  const result = [];\n  try {\n    let iwlistParts = execSync(`export LC_ALL=C; iwlist ${iface} scan 2>&1; unset LC_ALL`).toString().split('        Cell ');\n    if (iwlistParts[0].indexOf('resource busy') >= 0) { return -1; }\n    if (iwlistParts.length > 1) {\n      iwlistParts.shift();\n      iwlistParts.forEach(element => {\n        const lines = element.split('\\n');\n        const channel = util.getValue(lines, 'channel', ':', true);\n        const address = (lines && lines.length && lines[0].indexOf('Address:') >= 0 ? lines[0].split('Address:')[1].trim().toLowerCase() : '');\n        const mode = util.getValue(lines, 'mode', ':', true);\n        const frequency = util.getValue(lines, 'frequency', ':', true);\n        const qualityString = util.getValue(lines, 'Quality', '=', true);\n        const dbParts = qualityString.toLowerCase().split('signal level=');\n        const db = dbParts.length > 1 ? util.toInt(dbParts[1]) : 0;\n        const quality = db ? wifiQualityFromDB(db) : 0;\n        const ssid = util.getValue(lines, 'essid', ':', true);\n\n        // security and wpa-flags\n        const isWpa = element.indexOf(' WPA ') >= 0;\n        const isWpa2 = element.indexOf('WPA2 ') >= 0;\n        const security = [];\n        if (isWpa) { security.push('WPA'); }\n        if (isWpa2) { security.push('WPA2'); }\n        const wpaFlags = [];\n        let wpaFlag = '';\n        lines.forEach(function (line) {\n          const l = line.trim().toLowerCase();\n          if (l.indexOf('group cipher') >= 0) {\n            if (wpaFlag) {\n              wpaFlags.push(wpaFlag);\n            }\n            const parts = l.split(':');\n            if (parts.length > 1) {\n              wpaFlag = parts[1].trim().toUpperCase();\n            }\n          }\n          if (l.indexOf('pairwise cipher') >= 0) {\n            const parts = l.split(':');\n            if (parts.length > 1) {\n              if (parts[1].indexOf('tkip')) { wpaFlag = (wpaFlag ? 'TKIP/' + wpaFlag : 'TKIP'); }\n              else if (parts[1].indexOf('ccmp')) { wpaFlag = (wpaFlag ? 'CCMP/' + wpaFlag : 'CCMP'); }\n              else if (parts[1].indexOf('proprietary')) { wpaFlag = (wpaFlag ? 'PROP/' + wpaFlag : 'PROP'); }\n            }\n          }\n          if (l.indexOf('authentication suites') >= 0) {\n            const parts = l.split(':');\n            if (parts.length > 1) {\n              if (parts[1].indexOf('802.1x')) { wpaFlag = (wpaFlag ? '802.1x/' + wpaFlag : '802.1x'); }\n              else if (parts[1].indexOf('psk')) { wpaFlag = (wpaFlag ? 'PSK/' + wpaFlag : 'PSK'); }\n            }\n          }\n        });\n        if (wpaFlag) {\n          wpaFlags.push(wpaFlag);\n        }\n\n        result.push({\n          ssid,\n          bssid: address,\n          mode,\n          channel: channel ? util.toInt(channel) : null,\n          frequency: frequency ? util.toInt(frequency.replace('.', '')) : null,\n          signalLevel: db,\n          quality,\n          security,\n          wpaFlags,\n          rsnFlags: []\n        });\n      });\n    }\n    return result;\n  } catch (e) {\n    return -1;\n  }\n}\n\nfunction parseWifiDarwin(wifiObj) {\n  const result = [];\n  if (wifiObj) {\n    wifiObj.forEach(function (wifiItem) {\n      const signalLevel = wifiItem.RSSI;\n      let security = [];\n      let wpaFlags = [];\n      let ssid = wifiItem.SSID_STR || '';\n      if (wifiItem.WPA_IE) {\n        security.push('WPA');\n        if (wifiItem.WPA_IE.IE_KEY_WPA_UCIPHERS) {\n          wifiItem.WPA_IE.IE_KEY_WPA_UCIPHERS.forEach(function (ciphers) {\n            if (ciphers === 0 && wpaFlags.indexOf('unknown/TKIP') === -1) { wpaFlags.push('unknown/TKIP'); }\n            if (ciphers === 2 && wpaFlags.indexOf('PSK/TKIP') === -1) { wpaFlags.push('PSK/TKIP'); }\n            if (ciphers === 4 && wpaFlags.indexOf('PSK/AES') === -1) { wpaFlags.push('PSK/AES'); }\n          });\n        }\n      }\n      if (wifiItem.RSN_IE) {\n        security.push('WPA2');\n        if (wifiItem.RSN_IE.IE_KEY_RSN_UCIPHERS) {\n          wifiItem.RSN_IE.IE_KEY_RSN_UCIPHERS.forEach(function (ciphers) {\n            if (ciphers === 0 && wpaFlags.indexOf('unknown/TKIP') === -1) { wpaFlags.push('unknown/TKIP'); }\n            if (ciphers === 2 && wpaFlags.indexOf('TKIP/TKIP') === -1) { wpaFlags.push('TKIP/TKIP'); }\n            if (ciphers === 4 && wpaFlags.indexOf('PSK/AES') === -1) { wpaFlags.push('PSK/AES'); }\n          });\n        }\n      }\n      if (wifiItem.SSID) {\n        ssid = Buffer.from(wifiItem.SSID, 'base64').toString('utf8');\n      }\n      result.push({\n        ssid,\n        bssid: wifiItem.BSSID || '',\n        mode: '',\n        channel: wifiItem.CHANNEL,\n        frequency: wifiFrequencyFromChannel(wifiItem.CHANNEL),\n        signalLevel: signalLevel ? parseInt(signalLevel, 10) : null,\n        quality: wifiQualityFromDB(signalLevel),\n        security,\n        wpaFlags,\n        rsnFlags: []\n      });\n    });\n  }\n  return result;\n}\nfunction wifiNetworks(callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux) {\n        result = getWifiNetworkListNmi();\n        if (result.length === 0) {\n          try {\n            const iwconfigParts = execSync('export LC_ALL=C; iwconfig 2>/dev/null; unset LC_ALL').toString().split('\\n\\n');\n            let iface = '';\n            iwconfigParts.forEach(element => {\n              if (element.indexOf('no wireless') === -1 && element.trim() !== '') {\n                iface = element.split(' ')[0];\n              }\n            });\n            if (iface) {\n              let ifaceSanitized = '';\n              const s = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(iface, true);\n              for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n                if (s[i] !== undefined) {\n                  ifaceSanitized = ifaceSanitized + s[i];\n                }\n              }\n\n              const res = getWifiNetworkListIw(ifaceSanitized);\n              if (res === -1) {\n                // try again after 4 secs\n                setTimeout(function (iface) {\n                  const res = getWifiNetworkListIw(iface);\n                  if (res != -1) { result = res; }\n                  if (callback) {\n                    callback(result);\n                  }\n                  resolve(result);\n                }, 4000);\n              } else {\n                result = res;\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              }\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          } catch (e) {\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          }\n        } else {\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        }\n      } else if (_darwin) {\n        let cmd = '/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -s -x';\n        exec(cmd, { maxBuffer: 1024 * 40000 }, function (error, stdout) {\n          const output = stdout.toString();\n          result = parseWifiDarwin(util.plistParser(output));\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else if (_windows) {\n        let cmd = 'netsh wlan show networks mode=Bssid';\n        util.powerShell(cmd).then((stdout) => {\n          const ssidParts = stdout.toString('utf8').split(os.EOL + os.EOL + 'SSID ');\n          ssidParts.shift();\n\n          ssidParts.forEach(ssidPart => {\n            const ssidLines = ssidPart.split(os.EOL);\n            if (ssidLines && ssidLines.length >= 8 && ssidLines[0].indexOf(':') >= 0) {\n              const bssidsParts = ssidPart.split(' BSSID');\n              bssidsParts.shift();\n\n              bssidsParts.forEach((bssidPart) => {\n                const bssidLines = bssidPart.split(os.EOL);\n                const bssidLine = bssidLines[0].split(':');\n                bssidLine.shift();\n                const bssid = bssidLine.join(':').trim().toLowerCase();\n                const channel = bssidLines[3].split(':').pop().trim();\n                const quality = bssidLines[1].split(':').pop().trim();\n\n                result.push({\n                  ssid: ssidLines[0].split(':').pop().trim(),\n                  bssid,\n                  mode: '',\n                  channel: channel ? parseInt(channel, 10) : null,\n                  frequency: wifiFrequencyFromChannel(channel),\n                  signalLevel: wifiDBFromQuality(quality),\n                  quality: quality ? parseInt(quality, 10) : null,\n                  security: [ssidLines[2].split(':').pop().trim()],\n                  wpaFlags: [ssidLines[3].split(':').pop().trim()],\n                  rsnFlags: []\n                });\n              });\n            }\n          });\n\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiNetworks = wifiNetworks;\n\nfunction getVendor(model) {\n  model = model.toLowerCase();\n  let result = '';\n  if (model.indexOf('intel') >= 0) { result = 'Intel'; }\n  else if (model.indexOf('realtek') >= 0) { result = 'Realtek'; }\n  else if (model.indexOf('qualcom') >= 0) { result = 'Qualcom'; }\n  else if (model.indexOf('broadcom') >= 0) { result = 'Broadcom'; }\n  else if (model.indexOf('cavium') >= 0) { result = 'Cavium'; }\n  else if (model.indexOf('cisco') >= 0) { result = 'Cisco'; }\n  else if (model.indexOf('marvel') >= 0) { result = 'Marvel'; }\n  else if (model.indexOf('zyxel') >= 0) { result = 'Zyxel'; }\n  else if (model.indexOf('melanox') >= 0) { result = 'Melanox'; }\n  else if (model.indexOf('d-link') >= 0) { result = 'D-Link'; }\n  else if (model.indexOf('tp-link') >= 0) { result = 'TP-Link'; }\n  else if (model.indexOf('asus') >= 0) { result = 'Asus'; }\n  else if (model.indexOf('linksys') >= 0) { result = 'Linksys'; }\n  return result;\n}\n\nfunction wifiConnections(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const result = [];\n\n      if (_linux) {\n        const ifaces = ifaceListLinux();\n        const networkList = getWifiNetworkListNmi();\n        ifaces.forEach(ifaceDetail => {\n          let ifaceSanitized = '';\n          const s = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(ifaceDetail.iface, true);\n          for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n            if (s[i] !== undefined) {\n              ifaceSanitized = ifaceSanitized + s[i];\n            }\n          }\n\n          const nmiDetails = nmiDeviceLinux(ifaceSanitized);\n          const wpaDetails = wpaConnectionLinux(ifaceSanitized);\n          const ssid = nmiDetails.ssid || wpaDetails.ssid;\n          const network = networkList.filter(nw => nw.ssid === ssid);\n          const nmiConnection = nmiConnectionLinux(ssid);\n          const channel = network && network.length && network[0].channel ? network[0].channel : (wpaDetails.channel ? wpaDetails.channel : null);\n          const bssid = network && network.length && network[0].bssid ? network[0].bssid : (wpaDetails.bssid ? wpaDetails.bssid : null);\n          if (ssid && bssid) {\n            result.push({\n              id: ifaceDetail.id,\n              iface: ifaceDetail.iface,\n              model: nmiDetails.product,\n              ssid,\n              bssid: network && network.length && network[0].bssid ? network[0].bssid : (wpaDetails.bssid ? wpaDetails.bssid : null),\n              channel,\n              frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n              type: nmiConnection.type ? nmiConnection.type : '802.11',\n              security: nmiConnection.security ? nmiConnection.security : (wpaDetails.security ? wpaDetails.security : null),\n              signalLevel: network && network.length && network[0].signalLevel ? network[0].signalLevel : null,\n              txRate: null\n            });\n          }\n        });\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      } else if (_darwin) {\n        let cmd = 'system_profiler SPNetworkDataType';\n        exec(cmd, function (error, stdout) {\n          const parts1 = stdout.toString().split('\\n\\n    Wi-Fi:\\n\\n');\n          if (parts1.length > 1) {\n            const lines = parts1[1].split('\\n\\n')[0].split('\\n');\n            const iface = util.getValue(lines, 'BSD Device Name', ':', true);\n            const model = util.getValue(lines, 'hardware', ':', true);\n            cmd = '/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I';\n            exec(cmd, function (error, stdout) {\n              const lines2 = stdout.toString().split('\\n');\n              if (lines.length > 10) {\n                const ssid = util.getValue(lines2, 'ssid', ':', true);\n                const bssid = util.getValue(lines2, 'bssid', ':', true);\n                const security = util.getValue(lines2, 'link auth', ':', true);\n                const txRate = util.getValue(lines2, 'lastTxRate', ':', true);\n                const channel = util.getValue(lines2, 'channel', ':', true).split(',')[0];\n                const type = '802.11';\n                const rssi = util.toInt(util.getValue(lines2, 'agrCtlRSSI', ':', true));\n                const noise = util.toInt(util.getValue(lines2, 'agrCtlNoise', ':', true));\n                const signalLevel = rssi - noise;\n                if (ssid || bssid) {\n                  result.push({\n                    id: 'Wi-Fi',\n                    iface,\n                    model,\n                    ssid,\n                    bssid,\n                    channel: util.toInt(channel),\n                    frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n                    type,\n                    security,\n                    signalLevel,\n                    txRate\n                  });\n                }\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          } else {\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          }\n        });\n      } else if (_windows) {\n        let cmd = 'netsh wlan show interfaces';\n        util.powerShell(cmd).then(function (stdout) {\n          const allLines = stdout.toString().split('\\r\\n');\n          for (let i = 0; i < allLines.length; i++) {\n            allLines[i] = allLines[i].trim();\n          }\n          const parts = allLines.join('\\r\\n').split(':\\r\\n\\r\\n');\n          parts.shift();\n          parts.forEach(part => {\n            const lines = part.split('\\r\\n');\n            if (lines.length >= 5) {\n              const iface = lines[0].indexOf(':') >= 0 ? lines[0].split(':')[1].trim() : '';\n              const model = lines[1].indexOf(':') >= 0 ? lines[1].split(':')[1].trim() : '';\n              const id = lines[2].indexOf(':') >= 0 ? lines[2].split(':')[1].trim() : '';\n              const ssid = util.getValue(lines, 'SSID', ':', true);\n              const bssid = util.getValue(lines, 'BSSID', ':', true);\n              const signalLevel = util.getValue(lines, 'Signal', ':', true);\n              const type = util.getValue(lines, 'Radio type', ':', true) || util.getValue(lines, 'Type de radio', ':', true) || util.getValue(lines, 'Funktyp', ':', true) || null;\n              const security = util.getValue(lines, 'authentication', ':', true) || util.getValue(lines, 'Authentification', ':', true) || util.getValue(lines, 'Authentifizierung', ':', true) || null;\n              const channel = util.getValue(lines, 'Channel', ':', true) || util.getValue(lines, 'Canal', ':', true) || util.getValue(lines, 'Kanal', ':', true) || null;\n              const txRate = util.getValue(lines, 'Transmit rate (mbps)', ':', true) || util.getValue(lines, 'Transmission (mbit/s)', ':', true) || util.getValue(lines, 'Empfangsrate (MBit/s)', ':', true) || null;\n              if (model && id && ssid && bssid) {\n                result.push({\n                  id,\n                  iface,\n                  model,\n                  ssid,\n                  bssid,\n                  channel: util.toInt(channel),\n                  frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n                  type,\n                  security,\n                  signalLevel,\n                  txRate: util.toInt(txRate) || null\n                });\n              }\n            }\n          });\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiConnections = wifiConnections;\n\nfunction wifiInterfaces(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const result = [];\n\n      if (_linux) {\n        const ifaces = ifaceListLinux();\n        ifaces.forEach(ifaceDetail => {\n          const nmiDetails = nmiDeviceLinux(ifaceDetail.iface);\n          result.push({\n            id: ifaceDetail.id,\n            iface: ifaceDetail.iface,\n            model: nmiDetails.product ? nmiDetails.product : null,\n            vendor: nmiDetails.vendor ? nmiDetails.vendor : null,\n            mac: ifaceDetail.mac,\n          });\n        });\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      } else if (_darwin) {\n        let cmd = 'system_profiler SPNetworkDataType';\n        exec(cmd, function (error, stdout) {\n          const parts1 = stdout.toString().split('\\n\\n    Wi-Fi:\\n\\n');\n          if (parts1.length > 1) {\n            const lines = parts1[1].split('\\n\\n')[0].split('\\n');\n            const iface = util.getValue(lines, 'BSD Device Name', ':', true);\n            const mac = util.getValue(lines, 'MAC Address', ':', true);\n            const model = util.getValue(lines, 'hardware', ':', true);\n            result.push({\n              id: 'Wi-Fi',\n              iface,\n              model,\n              vendor: '',\n              mac\n            });\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else if (_windows) {\n        let cmd = 'netsh wlan show interfaces';\n        util.powerShell(cmd).then(function (stdout) {\n          const allLines = stdout.toString().split('\\r\\n');\n          for (let i = 0; i < allLines.length; i++) {\n            allLines[i] = allLines[i].trim();\n          }\n          const parts = allLines.join('\\r\\n').split(':\\r\\n\\r\\n');\n          parts.shift();\n          parts.forEach(part => {\n            const lines = part.split('\\r\\n');\n            if (lines.length >= 5) {\n              const iface = lines[0].indexOf(':') >= 0 ? lines[0].split(':')[1].trim() : '';\n              const model = lines[1].indexOf(':') >= 0 ? lines[1].split(':')[1].trim() : '';\n              const id = lines[2].indexOf(':') >= 0 ? lines[2].split(':')[1].trim() : '';\n              const macParts = lines[3].indexOf(':') >= 0 ? lines[3].split(':') : [];\n              macParts.shift();\n              const mac = macParts.join(':').trim();\n              const vendor = getVendor(model);\n              if (iface && model && id && mac) {\n                result.push({\n                  id,\n                  iface,\n                  model,\n                  vendor,\n                  mac,\n                });\n              }\n            }\n          });\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiInterfaces = wifiInterfaces;\n"], "fixing_code": ["<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <!-- Required meta tags -->\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n  <!-- CSS -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" href=\"https://pro.fontawesome.com/releases/v5.15.1/css/all.css\" integrity=\"sha384-9ZfPnbegQSumzaE7mks2IYgHoayLtuto3AS6ieArECeaR8nCfliJVuLh/GaQ1gyM\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" href=\"roboto/css/roboto.css\">\n  <link rel=\"stylesheet\" href=\"styles.css\">\n  <script src=\"main.js\"></script>\n\n  <!-- Favicon -->\n  <link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href=\"/assets/android-icon-192x192.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/assets/favicon-32x32.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"/assets/favicon-96x96.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/assets/favicon-16x16.png\">\n\n  <title>systeminformation</title>\n\n</head>\n\n<body>\n  <nav class=\"nav\">\n    <div class=\"container\">\n      <a href=\".\"><img class=\"logo float-left\" src=\"assets/logo.png\" alt=\"logo\">\n        <div class=\"title float-left\">systeminformation</div>\n      </a>\n      <div class=\"text float-right github\"><a href=\"https://github.com/sebhildebrandt/systeminformation\">View on Github <i class=\"fab fa-github\"></i></a></div>\n      <div class=\"text float-right todocs\"><a href=\"./#docs\">Docs Overview</a></div>\n    </div>\n  </nav>\n\n  <div class=\"container-fluid\">\n    <section class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-4 col-lg-3 col-xl-2 menu\" id=\"menu\">\n        </div>\n        <div class=\"col-12 col-md-8 col-lg-9 col-xl-10 content\">\n          <div class=\"row\">\n            <div class=\"col-12 sectionheader\">\n              <div class=\"title\">Version History</div>\n              <div class=\"text\">\n                <h3>Major and Breaking Changes</h3>\n                <p>To see detaild information on major und breaking changes for version 5.x, refer to the <a href=\"changes.html\">Version 5 - Changes</a> page.<br>Be aware version 5 is <strong>NOT fully backward compatible</strong> to version 4.x ...</p>\n\n                <h3>Full version history</h3>\n                <table class=\"table table-sm table-bordered table-striped\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Version</th>\n                      <th scope=\"col\" width=\"12%\">Date</th>\n                      <th scope=\"col\">Comment</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">5.21.7</th>\n                      <td>2023-09-19</td>\n                      <td><span class=\"code\">wifiConnections()</span> <span class=\"code\">wifiNetworks()</span>fixed security issue (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.21.6</th>\n                      <td>2023-09-18</td>\n                      <td><span class=\"code\">baseboard()</span> improved parsing (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.21.5</th>\n                      <td>2023-09-15</td>\n                      <td><span class=\"code\">chassis()</span>, <span class=\"code\">baseboard()</span> improved parsing (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.21.4</th>\n                      <td>2023-09-02</td>\n                      <td><span class=\"code\">wifiConnections()</span> fixed when no wifi chip (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.21.3</th>\n                      <td>2023-08-31</td>\n                      <td><span class=\"code\">cpuTemperature()</span> improved parsing for AMD (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.21.2</th>\n                      <td>2023-08-30</td>\n                      <td><span class=\"code\">cpuTemperature()</span> improved parsing for AMD (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.21.1</th>\n                      <td>2023-08-28</td>\n                      <td><span class=\"code\">graphics()</span> subVendor fix (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.21.0</th>\n                      <td>2023-08-28</td>\n                      <td><span class=\"code\">graphics()</span> added subVendor (linux) <span class=\"code\">mamLayout()</span> DDR5 detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.20.0</th>\n                      <td>2023-08-25</td>\n                      <td><span class=\"code\">mem()</span> new properties writeback and dirty (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.19.1</th>\n                      <td>2023-08-23</td>\n                      <td><span class=\"code\">wifiNetworks()</span> improved parsing SSID (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.19.0</th>\n                      <td>2023-08-22</td>\n                      <td><span class=\"code\">currentLoad()</span> new properties steal and guest time (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.15</th>\n                      <td>2023-08-10</td>\n                      <td><span class=\"code\">npx()</span> command extended</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.14</th>\n                      <td>2023-08-09</td>\n                      <td><span class=\"code\">fsSize()</span> fixed syntax error</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.13</th>\n                      <td>2023-08-08</td>\n                      <td><span class=\"code\">mem()</span> fixed error handling</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.12</th>\n                      <td>2023-08-05</td>\n                      <td><span class=\"code\">fsSize()</span> rw /snap/ issue fixed (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.11</th>\n                      <td>2023-08-04</td>\n                      <td><span class=\"code\">bluetooth()</span> improved parsing</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.10</th>\n                      <td>2023-07-28</td>\n                      <td><span class=\"code\">cpu()</span> fixed chach sizes, extended sockets (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.9</th>\n                      <td>2023-07-26</td>\n                      <td><span class=\"code\">fsSize()</span> fixed missing rw property (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.8</th>\n                      <td>2023-07-25</td>\n                      <td><span class=\"code\">cpu()</span> added AMD ZEN 4 base frequencies</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.7</th>\n                      <td>2023-07-12</td>\n                      <td><span class=\"code\">osInfo()</span> added macOS Sonoma code name (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.6</th>\n                      <td>2023-06-28</td>\n                      <td><span class=\"code\">graphics()</span> fixed catch errors (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.5</th>\n                      <td>2023-06-26</td>\n                      <td><span class=\"code\">cpu()</span> fix parsing amd (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.4</th>\n                      <td>2023-06-22</td>\n                      <td><span class=\"code\">graphics()</span> fixed parsing (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.3</th>\n                      <td>2023-06-09</td>\n                      <td><span class=\"code\">tests</span> improved key handling, updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.2</th>\n                      <td>2023-06-08</td>\n                      <td><span class=\"code\">fsSize()</span> improved error handling (alpine linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.1</th>\n                      <td>2023-06-07</td>\n                      <td><span class=\"code\">networkInterfaces()</span> cleaned up testVirtualNic</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.18.0</th>\n                      <td>2023-06-06</td>\n                      <td><span class=\"code\">fssize()</span> added optional drive parameter</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.17</th>\n                      <td>2023-06-03</td>\n                      <td><span class=\"code\">osInfo()</span> improved fqdn (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.16</th>\n                      <td>2023-05-30</td>\n                      <td><span class=\"code\">usb()</span> fix parsing JSON (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.15</th>\n                      <td>2023-05-29</td>\n                      <td><span class=\"code\">powerShell()</span> added NoProfile attribute (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.14</th>\n                      <td>2023-05-29</td>\n                      <td><span class=\"code\">diskLayout()</span> <span class=\"code\">osInfo()</span>fix parsing issue (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.13</th>\n                      <td>2023-05-24</td>\n                      <td><span class=\"code\">typings</span> fix typings dynamicData, networkInterfaceData</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.12</th>\n                      <td>2023-02-28</td>\n                      <td><span class=\"code\">uuid()</span> fix unique mac address issue (Android)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.11</th>\n                      <td>2023-02-27</td>\n                      <td><span class=\"code\">blockDevices()</span> raid added label, uuid (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.10</th>\n                      <td>2023-02-23</td>\n                      <td><span class=\"code\">blockDevices()</span> fixed parsing raids (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.9</th>\n                      <td>2023-02-11</td>\n                      <td><span class=\"code\">system()</span> fix model Apple Silicon</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.8</th>\n                      <td>2023-01-30</td>\n                      <td><span class=\"code\">system()</span> improved virtual host detection for Parallels</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.7</th>\n                      <td>2023-01-29</td>\n                      <td><span class=\"code\">processes()</span> fixed CPU usage info (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.6</th>\n                      <td>2023-01-29</td>\n                      <td><span class=\"code\">processes()</span> fixed Node Version 8 compatibility issues</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.5</th>\n                      <td>2023-01-29</td>\n                      <td><span class=\"code\">processes()</span> improved parsing of all services (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.4</th>\n                      <td>2023-01-24</td>\n                      <td><span class=\"code\">networkInterfaces()</span> sanitizing interface names</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.3</th>\n                      <td>2023-01-10</td>\n                      <td><span class=\"code\">processes()</span> fix elapsed time parsing (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.2</th>\n                      <td>2023-01-10</td>\n                      <td><span class=\"code\">utils</span> fix killing powershell (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.1</th>\n                      <td>2023-01-06</td>\n                      <td><span class=\"code\">graphics()</span> positionX, positionY Ventura fix (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.17.0</th>\n                      <td>2023-01-06</td>\n                      <td><span class=\"code\">graphics()</span> added positionX, positionY (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.9</th>\n                      <td>2022-12-27</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.8</th>\n                      <td>2022-12-22</td>\n                      <td><span class=\"code\">processes()</span> params truncated fix (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.7</th>\n                      <td>2022-12-22</td>\n                      <td><span class=\"code\">processes()</span> commandLine missing spaces fix (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.6</th>\n                      <td>2022-12-12</td>\n                      <td><span class=\"code\">processes()</span> time format fix (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.5</th>\n                      <td>2022-12-09</td>\n                      <td><span class=\"code\">inetLatency()</span> fix for alpine (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.4</th>\n                      <td>2022-12-09</td>\n                      <td><span class=\"code\">processes()</span> fix started (linux alpine)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.3</th>\n                      <td>2022-12-08</td>\n                      <td><span class=\"code\">users()</span> fix when multiple exporer.exe opened (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.2</th>\n                      <td>2022-12-08</td>\n                      <td><span class=\"code\">dockerContainerStats()</span> improved calculation cpuPercent</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.1</th>\n                      <td>2022-12-04</td>\n                      <td>code cleanup, moved from lgtm to GitHub Code Scan</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.16.0</th>\n                      <td>2022-12-01</td>\n                      <td><span class=\"code\">fsSize()</span> added rw attribute (win, linux, macOS, BSD)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.15.1</th>\n                      <td>2022-11-29</td>\n                      <td><span class=\"code\">typings</span> fixed typo</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.15.0</th>\n                      <td>2022-11-29</td>\n                      <td><span class=\"code\">blockDevices()</span> added device (win, linux, macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.14.4</th>\n                      <td>2022-11-21</td>\n                      <td><span class=\"code\">osInfo()</span> improved uefi parsing (FreeBSD)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.14.3</th>\n                      <td>2022-11-20</td>\n                      <td><span class=\"code\">graphics()</span> multi monitor current refresh rate (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.14.2</th>\n                      <td>2022-11-20</td>\n                      <td><span class=\"code\">osInfo()</span> improved parsing (FreeBSD)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.14.1</th>\n                      <td>2022-11-20</td>\n                      <td><span class=\"code\">mamLayout()</span> bank descriptor cleanup (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.14.0</th>\n                      <td>2022-11-19</td>\n                      <td><span class=\"code\">blockDevices()</span> added raid group (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.13.5</th>\n                      <td>2022-11-18</td>\n                      <td><span class=\"code\">users()</span> fix pasring issue (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.13.4</th>\n                      <td>2022-11-18</td>\n                      <td><span class=\"code\">users()</span> fix issue (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.13.3</th>\n                      <td>2022-11-18</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fix main temp (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.13.2</th>\n                      <td>2022-11-18</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fix main temp (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.13.1</th>\n                      <td>2022-11-18</td>\n                      <td><span class=\"code\">processLoad()</span> fix main pid (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.13.0</th>\n                      <td>2022-11-17</td>\n                      <td><span class=\"code\">networkConnections()</span> added process name (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.15</th>\n                      <td>2022-11-16</td>\n                      <td><span class=\"code\">networkConnections()</span> adapted parsing to reflect also UDP (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.14</th>\n                      <td>2022-11-11</td>\n                      <td>Restored <span class=\"code\">powershell</span> compatibility for version 7.3 (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.13</th>\n                      <td>2022-11-06</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.12</th>\n                      <td>2022-11-03</td>\n                      <td>fix typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.11</th>\n                      <td>2022-10-27</td>\n                      <td><span class=\"code\">wifiInterfaces()</span>, <span class=\"code\">wifiConnections()</span> improved parsing (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.10</th>\n                      <td>2022-10-25</td>\n                      <td><span class=\"code\">bluetoothDevices()</span> adapted to new profile (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.9</th>\n                      <td>2022-10-24</td>\n                      <td>fix typescript typings, code cleanup, docs updated</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.8</th>\n                      <td>2022-10-23</td>\n                      <td><span class=\"code\">processes()</span> fix truncated command (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.7</th>\n                      <td>2022-10-15</td>\n                      <td><span class=\"code\">versions()</span> fix postgres</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.6</th>\n                      <td>2022-08-18</td>\n                      <td><span class=\"code\">networkConnections()</span> udp fix (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.5</th>\n                      <td>2022-08-11</td>\n                      <td><span class=\"code\">cpu()</span> virtualization fix (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.4</th>\n                      <td>2022-08-09</td>\n                      <td><span class=\"code\">cpuTemperture()</span> fix main (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.3</th>\n                      <td>2022-08-04</td>\n                      <td><span class=\"code\">networkInterfaces()</span> operstate fix (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.2</th>\n                      <td>2022-08-01</td>\n                      <td><span class=\"code\">services()</span> Ubuntu 22.04 fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.1</th>\n                      <td>2022-07-14</td>\n                      <td><span class=\"code\">cpuTemperature()</span> Apple Silicon support (see docs)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.12.0</th>\n                      <td>2022-07-12</td>\n                      <td><span class=\"code\">cpu()</span> added performance and efficiency cores</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.26</th>\n                      <td>2022-07-12</td>\n                      <td><span class=\"code\">cpu()</span> fix issue parsing physical cores (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.25</th>\n                      <td>2022-07-11</td>\n                      <td><span class=\"code\">fsSize()</span> fix issue filtering (df)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.24</th>\n                      <td>2022-07-10</td>\n                      <td><span class=\"code\">fsSize()</span> fix parsing linux (df)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.23</th>\n                      <td>2022-07-09</td>\n                      <td><span class=\"code\">fsSize()</span>,<span class=\"code\">basebard()</span>,<span class=\"code\">cpuTemeratur()</span> fixes</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.22</th>\n                      <td>2022-06-24</td>\n                      <td><span class=\"code\">processes()</span> improved parsing (linux, macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.21</th>\n                      <td>2022-06-17</td>\n                      <td><span class=\"code\">fsSize()</span> fix parsing linux (df)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.20</th>\n                      <td>2022-06-13</td>\n                      <td><span class=\"code\">diskLayout()</span> fix parsing linux (JSON)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.19</th>\n                      <td>2022-06-13</td>\n                      <td><span class=\"code\">diskLayout()</span> optimized parsing linux (JSON)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.18</th>\n                      <td>2022-06-13</td>\n                      <td><span class=\"code\">diskLayout()</span> fix parsing linux (JSON)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.17</th>\n                      <td>2022-06-13</td>\n                      <td><span class=\"code\">diskLayout()</span> fix parsing linux (JSON)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.16</th>\n                      <td>2022-05-30</td>\n                      <td><span class=\"code\">docs</span> updated <span class=\"code\">tests</span> added node 18</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.15</th>\n                      <td>2022-05-11</td>\n                      <td><span class=\"code\">audio()</span> fix typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.14</th>\n                      <td>2022-04-22</td>\n                      <td><span class=\"code\">networkInterfaces()</span> node 18 compatibility</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.13</th>\n                      <td>2022-04-21</td>\n                      <td><span class=\"code\">networkStats()</span> improved scanning (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.12</th>\n                      <td>2022-04-19</td>\n                      <td><span class=\"code\">battery()</span> improved M1 support (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.11</th>\n                      <td>2022-04-19</td>\n                      <td><span class=\"code\">networkInterfaces()</span> improved parsing (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.10</th>\n                      <td>2022-04-18</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.9</th>\n                      <td>2022-03-20</td>\n                      <td><span class=\"code\">diskLayout()</span> fixed issue smartStatus (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.8</th>\n                      <td>2022-03-11</td>\n                      <td><span class=\"code\">cpu()</span> improved socket detection by name (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.7</th>\n                      <td>2022-03-10</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fix NaN issue (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.6</th>\n                      <td>2022-03-01</td>\n                      <td>typescript typings fix <span class=\"code\">diskLayout()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.5</th>\n                      <td>2022-02-26</td>\n                      <td>fixed parsing issues (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.4</th>\n                      <td>2022-02-20</td>\n                      <td><span class=\"code\">powerShell</span> execution policy fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.3</th>\n                      <td>2022-02-14</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.2</th>\n                      <td>2022-02-05</td>\n                      <td><span class=\"code\">powerShell</span> speed improvements (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.1</th>\n                      <td>2022-02-03</td>\n                      <td><span class=\"code\">osInfo()</span> fixed issue fqdn (openBSD)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.11.0</th>\n                      <td>2022-01-26</td>\n                      <td><span class=\"code\">networkInterfaces()</span> added default property and parameter</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.7</th>\n                      <td>2022-01-21</td>\n                      <td><span class=\"code\">processes()</span> reverted PR #56\u00df (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.6</th>\n                      <td>2022-01-21</td>\n                      <td><span class=\"code\">usb()</span> fix, <span class=\"code\">users()</span> fix tty (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.5</th>\n                      <td>2022-01-19</td>\n                      <td><span class=\"code\">processes()</span> fix calculation (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.4</th>\n                      <td>2022-01-18</td>\n                      <td><span class=\"code\">battery()</span> fix detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.3</th>\n                      <td>2022-01-17</td>\n                      <td><span class=\"code\">system()</span> improved virtual detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.2</th>\n                      <td>2022-01-17</td>\n                      <td><span class=\"code\">uuid()</span> fix return values (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.1</th>\n                      <td>2022-01-17</td>\n                      <td><span class=\"code\">cpu()</span> fix manufacturer</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.10.0</th>\n                      <td>2022-01-09</td>\n                      <td>Basic <span class=\"code\">Android</span> support</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.18</th>\n                      <td>2022-01-08</td>\n                      <td><span class=\"code\">wifiConnections()</span> fix empty issue (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.17</th>\n                      <td>2021-12-07</td>\n                      <td><span class=\"code\">wifiNetworks()</span> fix empty issue (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.16</th>\n                      <td>2021-12-05</td>\n                      <td><span class=\"code\">wifiNetworks()</span> adaption for Apple silicon (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.15</th>\n                      <td>2021-11-19</td>\n                      <td><span class=\"code\">cpuCache()</span> fix (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.14</th>\n                      <td>2021-11-17</td>\n                      <td><span class=\"code\">versions()</span> python 2 monterey (deprecated warning) fix (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.13</th>\n                      <td>2021-11-14</td>\n                      <td><span class=\"code\">time()</span> timezone name, <span class=\"code\">cpu()</span> l1 cache improvement</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.12</th>\n                      <td>2021-11-13</td>\n                      <td><span class=\"code\">users()</span> fix data check (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.11</th>\n                      <td>2021-11-12</td>\n                      <td><span class=\"code\">fsStats()</span> fix null result (bsd)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.10</th>\n                      <td>2021-11-11</td>\n                      <td><span class=\"code\">powerShell</span> transition, replacing wmic (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.9</th>\n                      <td>2021-10-27</td>\n                      <td><span class=\"code\">graphics</span> fixed screen resolution issue (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.8</th>\n                      <td>2021-10-22</td>\n                      <td><span class=\"code\">wmic</span> fixed code page issues (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.7</th>\n                      <td>2021-10-09</td>\n                      <td><span class=\"code\">battery()</span> fixed typo seperator (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.6</th>\n                      <td>2021-10-08</td>\n                      <td><span class=\"code\">system()</span> fixed virtual on WSL2</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.5</th>\n                      <td>2021-10-08</td>\n                      <td><span class=\"code\">battery()</span> fixed isCharging (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.4</th>\n                      <td>2021-09-23</td>\n                      <td><span class=\"code\">processes()</span> fix memVsz, memRss (macOS M1)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.3</th>\n                      <td>2021-09-17</td>\n                      <td><span class=\"code\">cpuTemperature()</span> improvement tdie detection (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.2</th>\n                      <td>2021-09-16</td>\n                      <td><span class=\"code\">memLayout()</span> type fix (win), <span class=\"code\">graphics()</span> improvement (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.1</th>\n                      <td>2021-09-15</td>\n                      <td><span class=\"code\">disklayout()</span> fix size (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.9.0</th>\n                      <td>2021-09-15</td>\n                      <td><span class=\"code\">graphics()</span> macOS new XML parser, extended properties</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.9</th>\n                      <td>2021-09-13</td>\n                      <td><span class=\"code\">battery()</span> fix (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.8</th>\n                      <td>2021-09-11</td>\n                      <td><span class=\"code\">wifiConnections(), wifiInterfaces(), wifiNetworks()</span> fix (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.7</th>\n                      <td>2021-09-01</td>\n                      <td><span class=\"code\">processes()</span> fix alpine linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.6</th>\n                      <td>2021-08-26</td>\n                      <td><span class=\"code\">cpu()</span> improved detection (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.5</th>\n                      <td>2021-08-26</td>\n                      <td><span class=\"code\">osInfo()</span> hyper-v detection fix (win VM)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.4</th>\n                      <td>2021-08-26</td>\n                      <td><span class=\"code\">graphics()</span> added vendor (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.3</th>\n                      <td>2021-08-26</td>\n                      <td><span class=\"code\">graphics()</span> fix empty controller (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.2</th>\n                      <td>2021-08-24</td>\n                      <td><span class=\"code\">baseboard(), getDefaultNetworkInterface()</span> fix catch error</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.1</th>\n                      <td>2021-08-24</td>\n                      <td><span class=\"code\">battery()</span> battery fix capacity</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.8.0</th>\n                      <td>2021-08-02</td>\n                      <td><span class=\"code\">disksIO()</span> added wait time (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.14</th>\n                      <td>2021-08-01</td>\n                      <td><span class=\"code\">cpu()</span> cache calculation fix (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.13</th>\n                      <td>2021-07-28</td>\n                      <td><span class=\"code\">osInfo()</span> fix uefi detection (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.12</th>\n                      <td>2021-07-27</td>\n                      <td><span class=\"code\">osInfo()</span> fix uefi detection (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.11</th>\n                      <td>2021-07-27</td>\n                      <td>typescript typings fix bluetoothDevices()</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.10</th>\n                      <td>2021-07-26</td>\n                      <td>typescript typings fix processLoad()</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.9</th>\n                      <td>2021-07-25</td>\n                      <td><span class=\"code\">uuid()</span> better regedit path detection (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.8</th>\n                      <td>2021-07-16</td>\n                      <td><span class=\"code\">battery()</span> fix designedCapacity (win, linux), fix catch error</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.7</th>\n                      <td>2021-06-15</td>\n                      <td><span class=\"code\">graphics()</span> improved detection screen resolution (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.6</th>\n                      <td>2021-06-09</td>\n                      <td><span class=\"code\">battery()</span> improved detection (additional batteries windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.5</th>\n                      <td>2021-06-08</td>\n                      <td><span class=\"code\">memLayout()</span> improved clock speed detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.4</th>\n                      <td>2021-05-27</td>\n                      <td><span class=\"code\">osInfo(), cpu()</span> improved hypervisor, virtualization detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.3</th>\n                      <td>2021-05-26</td>\n                      <td><span class=\"code\">osInfo()</span> improved UEFI detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.2</th>\n                      <td>2021-05-24</td>\n                      <td><span class=\"code\">system()</span> virtual detection improvement</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.1</th>\n                      <td>2021-05-20</td>\n                      <td><span class=\"code\">grahics()</span> Check for qwMemorySize on Windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.7.0</th>\n                      <td>2021-05-20</td>\n                      <td><span class=\"code\">diskLayout()</span> added smartdata for Windows (if installed)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.22</th>\n                      <td>2021-05-18</td>\n                      <td><span class=\"code\">diskLayout()</span> fixed to small buffer smartdata (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.21</th>\n                      <td>2021-05-14</td>\n                      <td><span class=\"code\">graphics()</span> fixed dual gpu issue (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.20</th>\n                      <td>2021-05-07</td>\n                      <td><span class=\"code\">system()</span> fixed vm detection (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.19</th>\n                      <td>2021-05-06</td>\n                      <td><span class=\"code\">services()</span> modified service listing (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.18</th>\n                      <td>2021-05-06</td>\n                      <td><span class=\"code\">processes()</span> fixed Windows mem bug (naming conform to all platforms)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.17</th>\n                      <td>2021-05-05</td>\n                      <td><span class=\"code\">networkInterfaces()</span> fixed Windows XP bug (WMIC NetEnabled)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.16</th>\n                      <td>2021-05-05</td>\n                      <td><span class=\"code\">graphics()</span> fixed compare bug</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.15</th>\n                      <td>2021-05-05</td>\n                      <td>restored Node 4.x compatibility</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.14</th>\n                      <td>2021-05-04</td>\n                      <td><span class=\"code\">networkGatewayDefault()</span> macOS improvement for active VPN</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.13</th>\n                      <td>2021-05-04</td>\n                      <td><span class=\"code\">dockerImagesInspect()</span> <span class=\"code\">dockerContainerInspect()</span> <span class=\"code\">dockerContainerProcesses()</span> parameter sanitation</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.12</th>\n                      <td>2021-04-09</td>\n                      <td><span class=\"code\">networkInterfaces()</span> windows detection fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.11</th>\n                      <td>2021-04-08</td>\n                      <td><span class=\"code\">versions()</span> parameter sanitation</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.10</th>\n                      <td>2021-03-29</td>\n                      <td><span class=\"code\">vboxInfo()</span> fixed windows bug</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.9</th>\n                      <td>2021-03-28</td>\n                      <td><span class=\"code\">graphics()</span> fixed nvidia-smi compare bug</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.8</th>\n                      <td>2021-03-23</td>\n                      <td>typescript definitions fix wifiInterfces, wifiConnections</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.7</th>\n                      <td>2021-03-16</td>\n                      <td><span class=\"code\">inetLatency()</span> <span class=\"code\">inetChecksite()</span> schema avlidation</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.6</th>\n                      <td>2021-03-16</td>\n                      <td>code refactoring</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.5</th>\n                      <td>2021-03-15</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fix linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.4</th>\n                      <td>2021-03-15</td>\n                      <td><span class=\"code\">sanitizeShellString()</span> and other security improvements</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.3</th>\n                      <td>2021-03-14</td>\n                      <td><span class=\"code\">sanitizeShellString()</span> improvements</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.2</th>\n                      <td>2021-03-10</td>\n                      <td><span class=\"code\">networkInterfaces(), cpu()</span> improvements (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.1</th>\n                      <td>2021-03-03</td>\n                      <td><span class=\"code\">get()</span> fixed issue boolean parameters</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.6.0</th>\n                      <td>2021-03-03</td>\n                      <td><span class=\"code\">cpuTemperature()</span> added socket and chipset temp (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.5.0</th>\n                      <td>2021-02-25</td>\n                      <td><span class=\"code\">dockerVolumes()</span> added</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.4.0</th>\n                      <td>2021-02-24</td>\n                      <td><span class=\"code\">dockerImages()</span> added</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.3.5</th>\n                      <td>2021-02-23</td>\n                      <td><span class=\"code\">dockerContainerStats()</span> fixed issue parameter *</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.3.4</th>\n                      <td>2021-02-20</td>\n                      <td><span class=\"code\">sanitizeShellString()</span> optimized strict sanitation</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.3.3</th>\n                      <td>2021-02-15</td>\n                      <td><span class=\"code\">dockerContainerStats()</span> fix correct ID splitting</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.3.2</th>\n                      <td>2021-02-15</td>\n                      <td><span class=\"code\">inetLatency()</span> <span class=\"code\">inetChecksite()</span> fix possible security issue (file://)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.3.1</th>\n                      <td>2021-02-14</td>\n                      <td><span class=\"code\">inetLatency()</span> <span class=\"code\">inetChecksite()</span> <span class=\"code\">services()</span> <span class=\"code\">processLoad()</span> fix possible security issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.3.0</th>\n                      <td>2021-02-12</td>\n                      <td><span class=\"code\">osInfo()</span> added remoteSession (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.7</th>\n                      <td>2021-02-12</td>\n                      <td><span class=\"code\">fsStats()</span> and <span class=\"code\">blockdevices()</span> improvements (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.6</th>\n                      <td>2021-02-12</td>\n                      <td><span class=\"code\">inetLatency()</span> fix DOS vulnerability</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.5</th>\n                      <td>2021-02-11</td>\n                      <td><span class=\"code\">processes()</span> fix truncated params (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.4</th>\n                      <td>2021-02-11</td>\n                      <td><span class=\"code\">currentLoad()</span> fix issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.3</th>\n                      <td>2021-02-11</td>\n                      <td><span class=\"code\">diskLayout()</span> added USB drives (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.2</th>\n                      <td>2021-02-11</td>\n                      <td>code cleanup, updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.1</th>\n                      <td>2021-02-10</td>\n                      <td><span class=\"code\">system()</span> fixed issue virtual detect (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.2.0</th>\n                      <td>2021-02-10</td>\n                      <td><span class=\"code\">wifiInterfces()</span> and <span class=\"code\">wifiConnections()</span> added</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.1.2</th>\n                      <td>2021-02-08</td>\n                      <td>fixed node 4 compatibility issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.1.1</th>\n                      <td>2021-02-08</td>\n                      <td><span class=\"code\">baseboard()</span> added memMax, memSlots</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.1.0</th>\n                      <td>2021-02-08</td>\n                      <td><span class=\"code\">memLayout()</span> added ECC flag, <span class=\"code\">bios()</span> added language, features (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.11</th>\n                      <td>2021-02-07</td>\n                      <td><span class=\"code\">fsSize()</span> windows WSL fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.10</th>\n                      <td>2021-02-06</td>\n                      <td><span class=\"code\">getDynamicData()</span> windows WSL fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.9</th>\n                      <td>2021-02-02</td>\n                      <td><span class=\"code\">fsSize()</span> fixed parsing edge case issue macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.8</th>\n                      <td>2021-01-30</td>\n                      <td>typescript typings fix cpuCurrentSpeed</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.7</th>\n                      <td>2021-01-29</td>\n                      <td><span class=\"code\">fsSize()</span> available fixed windows and typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.6</th>\n                      <td>2021-01-28</td>\n                      <td><span class=\"code\">osInfo()</span> added hypervisor (win only)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.5</th>\n                      <td>2021-01-27</td>\n                      <td><span class=\"code\">networkInterfaces()</span> type detection improved (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.4</th>\n                      <td>2021-01-27</td>\n                      <td><span class=\"code\">memLayout()</span> improved manufacturer decoding (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.3</th>\n                      <td>2021-01-27</td>\n                      <td><span class=\"code\">cpu()</span> fix virtualization, <span class=\"code\">wifi()</span> fix raspberry</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.2</th>\n                      <td>2021-01-26</td>\n                      <td>updated typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.1</th>\n                      <td>2021-01-26</td>\n                      <td>code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">5.0.0</th>\n                      <td>2021-01-26</td>\n                      <td>new major version 5 release</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.9</th>\n                      <td>2021-01-25</td>\n                      <td><span class=\"code\">graphics()</span> virtual controller vram value fix (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.8</th>\n                      <td>2021-01-25</td>\n                      <td><span class=\"code\">graphics()</span> controller subDeviceId fix (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.7</th>\n                      <td>2021-01-13</td>\n                      <td><span class=\"code\">services()</span> improved service discovery linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.6</th>\n                      <td>2021-01-12</td>\n                      <td><span class=\"code\">networkInterfaces()</span> catch errors</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.5</th>\n                      <td>2021-01-07</td>\n                      <td><span class=\"code\">networkInterfaceDefault()</span> fixed CMD popup (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.4</th>\n                      <td>2021-01-06</td>\n                      <td><span class=\"code\">system()</span> fixed vitrual catch error</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.3</th>\n                      <td>2021-01-06</td>\n                      <td><span class=\"code\">graphics()</span> issue non nvidia-smi controllers fixed (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.2</th>\n                      <td>2021-01-05</td>\n                      <td><span class=\"code\">system()</span> uuid now lowercase - as in uuid()</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.1</th>\n                      <td>2021-01-05</td>\n                      <td><span class=\"code\">graphics()</span> nvidia-smi detection improved</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.34.0</th>\n                      <td>2021-01-05</td>\n                      <td><span class=\"code\">system()</span> added flag virtual</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.8</th>\n                      <td>2021-01-04</td>\n                      <td><span class=\"code\">virtualBox()</span> fix issue windows host</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.7</th>\n                      <td>2021-01-04</td>\n                      <td><span class=\"code\">graphics()</span> nvidia-smi detection improved</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.6</th>\n                      <td>2021-01-02</td>\n                      <td><span class=\"code\">dockerContainerStats()</span> fix 'tx' changed to 'wx' as documented</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.5</th>\n                      <td>2020-12-30</td>\n                      <td><span class=\"code\">graphics()</span> vram (nvidia-smi)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.4</th>\n                      <td>2020-12-28</td>\n                      <td><span class=\"code\">typescript</span> typings fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.3</th>\n                      <td>2020-12-27</td>\n                      <td><span class=\"code\">graphics()</span> updated docs, typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.2</th>\n                      <td>2020-12-27</td>\n                      <td><span class=\"code\">graphics()</span> fixed issue nvidia-smi</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.1</th>\n                      <td>2020-12-22</td>\n                      <td><span class=\"code\">versions()</span> fixed issue (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.33.0</th>\n                      <td>2020-12-21</td>\n                      <td><span class=\"code\">graphics()</span> nvidia-smi support (linux, windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.32.0</th>\n                      <td>2020-12-14</td>\n                      <td><span class=\"code\">graphics()</span> clinfo support (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.31.2</th>\n                      <td>2020-12-14</td>\n                      <td><span class=\"code\">graphics()</span> Windows 7 Graphics Fix (Multi Monitor)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.31.1</th>\n                      <td>2020-12-11</td>\n                      <td><span class=\"code\">inetLatency()</span> command injection vulnaribility fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.31.0</th>\n                      <td>2020-12-06</td>\n                      <td><span class=\"code\">osInfo()</span> added FQDN</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.11</th>\n                      <td>2020-12-02</td>\n                      <td><span class=\"code\">cpu()</span> bugfix speed parsing</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.10</th>\n                      <td>2020-12-01</td>\n                      <td><span class=\"code\">cpu()</span> handled speed parsing error (Apple Silicon)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.9</th>\n                      <td>2020-12-01</td>\n                      <td><span class=\"code\">cpu()</span> corrected processor names (Raspberry Pi)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.8</th>\n                      <td>2020-11-30</td>\n                      <td><span class=\"code\">fsSize()</span> catch error (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.7</th>\n                      <td>2020-11-29</td>\n                      <td><span class=\"code\">cpuTemperature()</span> rewrite hwmon parsing (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.6</th>\n                      <td>2020-11-27</td>\n                      <td><span class=\"code\">wmic</span> added default windows path</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.5</th>\n                      <td>2020-11-26</td>\n                      <td>adapted security update (prototype pollution prevention)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.4</th>\n                      <td>2020-11-25</td>\n                      <td>reverted Object.freeze because it broke some projects</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.3</th>\n                      <td>2020-11-25</td>\n                      <td>security update (prototype pollution prevention) Object.freeze</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.2</th>\n                      <td>2020-11-25</td>\n                      <td>security update (prototype pollution prevention)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.1</th>\n                      <td>2020-11-12</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.30.0</th>\n                      <td>2020-11-11</td>\n                      <td><span class=\"code\">get()</span> added possibility to provide parameters</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.29.3</th>\n                      <td>2020-11-09</td>\n                      <td><span class=\"code\">blockdevices()</span> catch error adapted</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.29.2</th>\n                      <td>2020-11-09</td>\n                      <td><span class=\"code\">blockdevices()</span> catch error</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.29.1</th>\n                      <td>2020-11-08</td>\n                      <td><span class=\"code\">system()</span> better parsing Raspberry Pi revision codes</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.29.0</th>\n                      <td>2020-11-08</td>\n                      <td><span class=\"code\">fsSize()</span> correct fs type detection macOS (HFS, APFS, NFS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.28.1</th>\n                      <td>2020-11-05</td>\n                      <td>code cleanup, removing debug console.log()</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.28.0</th>\n                      <td>2020-11-04</td>\n                      <td><span class=\"code\">graphics()</span> added deviceName (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.11</th>\n                      <td>2020-10-26</td>\n                      <td><span class=\"code\">inetChecksite()</span> fixed vulnerability: command injection</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.10</th>\n                      <td>2020-10-16</td>\n                      <td><span class=\"code\">dockerContainers()</span> resolved hanging issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.9</th>\n                      <td>2020-10-13</td>\n                      <td><span class=\"code\">networkInterfaces()</span> loopback internal detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.8</th>\n                      <td>2020-10-08</td>\n                      <td>windows codepages partial fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.7</th>\n                      <td>2020-10-05</td>\n                      <td>updated typescript typings, minor fixes</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.6</th>\n                      <td>2020-10-02</td>\n                      <td><span class=\"code\">get()</span> fixed when results are in arrays</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.5</th>\n                      <td>2020-09-18</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fixed try catch (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.4</th>\n                      <td>2020-09-16</td>\n                      <td><span class=\"code\">networkInterfaceDefault()</span> optimization (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.3</th>\n                      <td>2020-08-26</td>\n                      <td>updated typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.2</th>\n                      <td>2020-08-26</td>\n                      <td>fixed issue breaking node v4 compatibility</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.1</th>\n                      <td>2020-08-25</td>\n                      <td><span class=\"code\">networkStats()</span> fixed packages dropped (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.27.0</th>\n                      <td>2020-08-24</td>\n                      <td><span class=\"code\">observe()</span> added function to observe/watch system parameters</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.12</th>\n                      <td>2020-08-21</td>\n                      <td><span class=\"code\">versions()</span> fixed issue windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.11</th>\n                      <td>2020-08-20</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fixed issue windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.10</th>\n                      <td>2020-07-16</td>\n                      <td><span class=\"code\">networkStats()</span> fixed issue blocking windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.9</th>\n                      <td>2020-06-06</td>\n                      <td><span class=\"code\">networkStats()</span> fixed comparison issue windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.8</th>\n                      <td>2020-06-06</td>\n                      <td><span class=\"code\">networkInterfaces()</span> fixed caching</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.7</th>\n                      <td>2020-06-06</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fixed raspberry pi sensors issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.6</th>\n                      <td>2020-06-03</td>\n                      <td><span class=\"code\">diskLayout()</span> fixed issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.5</th>\n                      <td>2020-05-27</td>\n                      <td><span class=\"code\">cpuTemperature()</span> optimizes scanning AMD linux sensors</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.4</th>\n                      <td>2020-05-21</td>\n                      <td><span class=\"code\">cpuTemperature()</span> fix (BSD), code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.3</th>\n                      <td>2020-05-20</td>\n                      <td>Updated documentation</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.2</th>\n                      <td>2020-05-19</td>\n                      <td><span class=\"code\">processes()</span> memory leak fix, security issue fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.1</th>\n                      <td>2020-05-13</td>\n                      <td>code cleanup </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.26.0</th>\n                      <td>2020-05-12</td>\n                      <td><span class=\"code\">diskLayout()</span> added full smart data (where supported) </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.25.2</th>\n                      <td>2020-05-12</td>\n                      <td><span class=\"code\">getDynamicData()</span> added wifiNetworks() </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.25.1</th>\n                      <td>2020-05-07</td>\n                      <td><span class=\"code\">get()</span> minor bounds test fix, updated docs </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.25.0</th>\n                      <td>2020-05-07</td>\n                      <td><span class=\"code\">get()</span> added function to get partial system info </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.24.2</th>\n                      <td>2020-05-06</td>\n                      <td><span class=\"code\">cpu()</span> fix BSD, <span class=\"code\">networkStats()</span> fix BSD </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.24.1</th>\n                      <td>2020-05-03</td>\n                      <td><span class=\"code\">processes()</span> fix parsing command and params (linux, macOS) </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.24.0</th>\n                      <td>2020-05-01</td>\n                      <td><span class=\"code\">networkInterfaces()</span> added netmask ip4 and ip6</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.10</th>\n                      <td>2020-05-01</td>\n                      <td><span class=\"code\">cpuTemperature()</span> optimized parsing linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.9</th>\n                      <td>2020-04-29</td>\n                      <td><span class=\"code\">currentLoad()</span> workaround for no os.cpus info</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.8</th>\n                      <td>2020-04-26</td>\n                      <td><span class=\"code\">getMacAddresses()</span> fix added try catch</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.7</th>\n                      <td>2020-04-26</td>\n                      <td><span class=\"code\">getCpuCurrentSpeedSync()</span> workaround fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.6</th>\n                      <td>2020-04-25</td>\n                      <td><span class=\"code\">networkGatewayDefault()</span> bugfix no interfaces</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.5</th>\n                      <td>2020-20-04</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.4</th>\n                      <td>2020-04-20</td>\n                      <td><span class=\"code\">users()</span> optimized parseDateTime function</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.3</th>\n                      <td>2020-04-09</td>\n                      <td>refactored to avoid <span class=\"code\">cat</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.2</th>\n                      <td>2020-04-08</td>\n                      <td><span class=\"code\">cpu()</span> fixed getting base speed Ryzen CPUs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.1</th>\n                      <td>2020-03-11</td>\n                      <td><span class=\"code\">diskLayout()</span> optimized detection (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.23.0</th>\n                      <td>2020-03-08</td>\n                      <td><span class=\"code\">versions()</span> added param to specify which program/lib versions to detect</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.7</th>\n                      <td>2020-03-08</td>\n                      <td><span class=\"code\">diskLayout()</span> fixed detection (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.6</th>\n                      <td>2020-03-08</td>\n                      <td><span class=\"code\">network()</span> fixed DHCP detection (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.5</th>\n                      <td>2020-03-04</td>\n                      <td><span class=\"code\">graphics()</span> fixed vram (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.4</th>\n                      <td>2020-03-01</td>\n                      <td><span class=\"code\">versions()</span> added dotnet, fix typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.3</th>\n                      <td>2020-02-20</td>\n                      <td><span class=\"code\">memLayout()</span> code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.2</th>\n                      <td>2020-02-19</td>\n                      <td><span class=\"code\">memLayout()</span> raspberry PI mem voltage fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.1</th>\n                      <td>2020-02-17</td>\n                      <td><span class=\"code\">memLayout()</span> raspberry PI support</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.22.0</th>\n                      <td>2020-02-17</td>\n                      <td><span class=\"code\">services()</span> added pids (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.21.3</th>\n                      <td>2020-02-16</td>\n                      <td><span class=\"code\">versions()</span> fixed versions mysql (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.21.2</th>\n                      <td>2020-02-11</td>\n                      <td><span class=\"code\">networkConnections()</span> fixed linux (debian) issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.21.1</th>\n                      <td>2020-01-31</td>\n                      <td><span class=\"code\">networkGatewayDefault()</span> fixed windows 7 issue</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.21.0</th>\n                      <td>2020-01-27</td>\n                      <td>added <span class=\"code\">npx</span> compatibility</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.20.1</th>\n                      <td>2020-01-26</td>\n                      <td><span class=\"code\">battery()</span> code refactoring, cleanup, updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.20.0</th>\n                      <td>2020-01-25</td>\n                      <td><span class=\"code\">battery()</span> added designcapacity, voltage, unit</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.19.4</th>\n                      <td>2020-01-24</td>\n                      <td><span class=\"code\">mem()</span> prevent log messages</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.19.3</th>\n                      <td>2020-01-24</td>\n                      <td><span class=\"code\">memLayout()</span> bank info fix macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.19.2</th>\n                      <td>2020-01-19</td>\n                      <td><span class=\"code\">cpu()</span> multi-processor fix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.19.1</th>\n                      <td>2020-01-14</td>\n                      <td><span class=\"code\">osInfo()</span> uefi fix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.19.0</th>\n                      <td>2020-01-12</td>\n                      <td><span class=\"code\">osInfo()</span> uefi (OS uses UEFI on startup)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.18.3</th>\n                      <td>2020-01-10</td>\n                      <td><span class=\"code\">fsSize()</span> fix excluding loop/snap devices</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.18.2</th>\n                      <td>2020-01-10</td>\n                      <td><span class=\"code\">memLayout()</span> fix memsize linux (modules >= 32 GB)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.18.1</th>\n                      <td>2020-01-07</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.18.0</th>\n                      <td>2020-01-07</td>\n                      <td><span class=\"code\">networkInterfaces()</span> added dhcp for macOS, added dhcp linux fallback</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.17.3</th>\n                      <td>2020-01-05</td>\n                      <td>code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.17.2</th>\n                      <td>2020-01-05</td>\n                      <td><span class=\"code\">cpu().speed</span> AMD base frequency and fix (0.00)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.17.1</th>\n                      <td>2020-01-04</td>\n                      <td><span class=\"code\">fsSize()</span> alpine linux support</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.17.0</th>\n                      <td>2020-01-04</td>\n                      <td><span class=\"code\">networkInterfaces()</span> added dhcp, dnsSuffix, ieee8021xAuth, ieee8021xState</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.16.1</th>\n                      <td>2020-01-01</td>\n                      <td><span class=\"code\">networkInterfaces()</span> bug fix (macOS)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.16.0</th>\n                      <td>2019-11-27</td>\n                      <td><span class=\"code\">networkGatewayDefault()</span> added</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.15.3</th>\n                      <td>2019-11-10</td>\n                      <td><span class=\"code\">type definitions</span> and docs update</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.15.2</th>\n                      <td>2019-11-10</td>\n                      <td><span class=\"code\">mem()</span> improved calculation linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.15.1</th>\n                      <td>2019-11-10</td>\n                      <td><span class=\"code\">diskLayout()</span> added support for older lsblk versions (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.15.0</th>\n                      <td>2019-11-10</td>\n                      <td><span class=\"code\">cpu()</span> added governor (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.17</th>\n                      <td>2019-10-22</td>\n                      <td><span class=\"code\">graphics()</span> improved display detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.16</th>\n                      <td>2019-10-19</td>\n                      <td><span class=\"code\">graphics()</span> improved display detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.15</th>\n                      <td>2019-10-18</td>\n                      <td><span class=\"code\">graphics()</span> fallback display detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.14</th>\n                      <td>2019-10-18</td>\n                      <td><span class=\"code\">powershell()</span> fixed error handling (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.13</th>\n                      <td>2019-10-15</td>\n                      <td><span class=\"code\">networkConnections()</span> fixed parsing (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.12</th>\n                      <td>2019-10-14</td>\n                      <td><span class=\"code\">getCpu()</span> fixed multi socket detection (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.11</th>\n                      <td>2019-10-01</td>\n                      <td><span class=\"code\">type definitions</span> bug dockerInfo</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.10</th>\n                      <td>2019-10-01</td>\n                      <td><span class=\"code\">type definitions</span> bug fix memLayout</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.9</th>\n                      <td>2019-10-01</td>\n                      <td><span class=\"code\">processLoad()</span> fix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.8</th>\n                      <td>2019-08-23</td>\n                      <td><span class=\"code\">parseDateTime()</span> fix coding error</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.7</th>\n                      <td>2019-08-22</td>\n                      <td><span class=\"code\">battery()</span> windows acconnected improvement</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.6</th>\n                      <td>2019-08-22</td>\n                      <td><span class=\"code\">users()</span> improved date time parsing</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.5</th>\n                      <td>2019-08-22</td>\n                      <td><span class=\"code\">fsSize()</span> fix windows size as number</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.4</th>\n                      <td>2019-07-20</td>\n                      <td><span class=\"code\">versions()</span> fix pip, pip3</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.3</th>\n                      <td>2019-07-09</td>\n                      <td><span class=\"code\">system()</span> sku fix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.2</th>\n                      <td>2019-07-07</td>\n                      <td><span class=\"code\">networkConnections()</span> pid linux fix NAN</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.1</th>\n                      <td>2019-07-04</td>\n                      <td><span class=\"code\">graphics()</span> added display position windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.14.0</th>\n                      <td>2019-07-03</td>\n                      <td><span class=\"code\">processes()</span> added process params and path</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.13.2</th>\n                      <td>2019-07-02</td>\n                      <td><span class=\"code\">versions()</span> fix getting all versions</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.13.1</th>\n                      <td>2019-07-01</td>\n                      <td><span class=\"code\">versions()</span> gcc fix macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.13.0</th>\n                      <td>2019-07-01</td>\n                      <td><span class=\"code\">networkConnections()</span> added PID, process</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.12.2</th>\n                      <td>2019-06-24</td>\n                      <td><span class=\"code\">system()</span> added Raspberry PI 4 detection</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.12.1</th>\n                      <td>2019-06-24</td>\n                      <td><span class=\"code\">networkInterface()</span> virtual interfaces macOS<br>\n                        <span class=\"code\">networkInterfaceDefault()</span> optimization windows\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.12.0</th>\n                      <td>2019-06-21</td>\n                      <td><span class=\"code\">networkInterface()</span> added property virtual</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.11.6</th>\n                      <td>2019-06-19</td>\n                      <td><span class=\"code\">util</span> bug fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.11.5</th>\n                      <td>2019-06-19</td>\n                      <td><span class=\"code\">dockerAll()</span> bug fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.11.4</th>\n                      <td>2019-06-17</td>\n                      <td><span class=\"code\">type definitions</span> bug fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.11.3</th>\n                      <td>2019-06-16</td>\n                      <td><span class=\"code\">graphics()</span> optimization windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.11.2</th>\n                      <td>2019-06-16</td>\n                      <td><span class=\"code\">wifiNetworks()</span> bug fixes</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.11.1</th>\n                      <td>2019-06-15</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.11.0</th>\n                      <td>2019-06-14</td>\n                      <td><span class=\"code\">wifiNetworks()</span> added available wifi networks</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.10.0</th>\n                      <td>2019-06-14</td>\n                      <td><span class=\"code\">graphics()</span> rewrite windows, added featues</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.9.2</th>\n                      <td>2019-06-12</td>\n                      <td><span class=\"code\">type definitions</span> bug fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.9.1</th>\n                      <td>2019-06-11</td>\n                      <td><span class=\"code\">networkStats()</span> bugfix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.9.0</th>\n                      <td>2019-06-03</td>\n                      <td><span class=\"code\">graphics()</span> added vendor, refresh rate, current resolution</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.8.4</th>\n                      <td>2019-06-03</td>\n                      <td><span class=\"code\">vboxInfo()</span> fixed call parameters</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.8.3</th>\n                      <td>2019-05-31</td>\n                      <td><span class=\"code\">vboxInfo()</span> added stoppedSince, started, stopped</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.8.2</th>\n                      <td>2019-05-31</td>\n                      <td><span class=\"code\">dockerInfo()</span> changed property naming style</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.8.1</th>\n                      <td>2019-05-31</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.8.0</th>\n                      <td>2019-05-31</td>\n                      <td><span class=\"code\">vboxInfo()</span> added virtualbox detailed VM info</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.7.3</th>\n                      <td>2019-05-30</td>\n                      <td>updated typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.7.2</th>\n                      <td>2019-05-30</td>\n                      <td><span class=\"code\">versions()</span> added virtualbox</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.7.1</th>\n                      <td>2019-05-29</td>\n                      <td><span class=\"code\">memLayout()</span> fix macOS mojave</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.7.0</th>\n                      <td>2019-05-29</td>\n                      <td>partial NetBSD support</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.6.1</th>\n                      <td>2019-05-29</td>\n                      <td><span class=\"code\">wmic</span> path fix - windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.6.0</th>\n                      <td>2019-05-27</td>\n                      <td><span class=\"code\">dockerInfo()</span> added dockerInfo</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.5.1</th>\n                      <td>2019-05-17</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.5.0</th>\n                      <td>2019-05-17</td>\n                      <td><span class=\"code\">fsOpenFiles()</span> added open file descriptor count</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.4.1</th>\n                      <td>2019-05-11</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.4.0</th>\n                      <td>2019-05-11</td>\n                      <td><span class=\"code\">dockerContainers()</span> added started, finished time</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.3.0</th>\n                      <td>2019-05-09</td>\n                      <td><span class=\"code\">dockerContainers() dockerStats()</span> added restartCount</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.2.1</th>\n                      <td>2019-05-09</td>\n                      <td><span class=\"code\">networkInterfaceDefault()</span> time delay fix (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.2.0</th>\n                      <td>2019-05-09</td>\n                      <td><span class=\"code\">osInfo()</span> extended service pack version (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.8</th>\n                      <td>2019-05-09</td>\n                      <td><span class=\"code\">graphics()</span> resolve on error (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.7</th>\n                      <td>2019-05-09</td>\n                      <td><span class=\"code\">users()</span> parsing fix (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.6</th>\n                      <td>2019-04-24</td>\n                      <td><span class=\"code\">memory()</span> swap used fix (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.5</th>\n                      <td>2019-04-19</td>\n                      <td>refactored <span class=\"code\">wmic</span> calls to work also on Windows XP</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.4</th>\n                      <td>2019-03-26</td>\n                      <td><span class=\"code\">networkInterfaces()</span> speed bug (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.3</th>\n                      <td>2019-03-24</td>\n                      <td>wmic path detection (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.2</th>\n                      <td>2019-03-23</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.1</th>\n                      <td>2019-03-13</td>\n                      <td>updated typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.1.0</th>\n                      <td>2019-03-13</td>\n                      <td><span class=\"code\">versions()</span>added pip, pip3</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.16</th>\n                      <td>2019-03-12</td>\n                      <td>Happy birthday - 5th aniversary</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.15</th>\n                      <td>2019-03-02</td>\n                      <td><span class=\"code\">versions()</span>added java, python3, optimized gcc</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.14</th>\n                      <td>2019-03-01</td>\n                      <td>updated typescript typings</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.13</th>\n                      <td>2019-03-01</td>\n                      <td><span class=\"code\">diskLayout()</span> added device (/dev/sda...) linux, mac</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.12</th>\n                      <td>2019-03-01</td>\n                      <td><span class=\"code\">diskLayout()</span> linux rewritten - better detection</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.11</th>\n                      <td>2019-02-23</td>\n                      <td><span class=\"code\">users()</span> fix windows (time), added @ts-check</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.10</th>\n                      <td>2019-02-10</td>\n                      <td><span class=\"code\">networkInterfaceDefault()</span> fix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.9</th>\n                      <td>2019-02-08</td>\n                      <td><span class=\"code\">cpu()</span> fix, code clean up</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.8</th>\n                      <td>2019-02-05</td>\n                      <td><span class=\"code\">inetLatency()</span> latency fix parse chinese output</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.7</th>\n                      <td>2019-02-05</td>\n                      <td><span class=\"code\">inetLatency()</span> latency Windows fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.6</th>\n                      <td>2019-02-04</td>\n                      <td>powershell catch error</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.5</th>\n                      <td>2019-02-03</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.4</th>\n                      <td>2019-02-03</td>\n                      <td>code cleanup, updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.3</th>\n                      <td>2019-02-03</td>\n                      <td><span class=\"code\">networkInterfaces(), chassis()</span> fixed two more issues</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.2</th>\n                      <td>2019-02-03</td>\n                      <td><span class=\"code\">networkInterfaces(), chassis()</span> fixed smaller issues</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.1</th>\n                      <td>2019-02-02</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4.0.0</th>\n                      <td>2019-02-02</td>\n                      <td>new major version 4</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.54.0</th>\n                      <td>2018-12-30</td>\n                      <td>added TypeScript type definitions</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.53.1</th>\n                      <td>2018-12-29</td>\n                      <td><span class=\"code\">versions()</span> bug fix nginx version</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.53.0</th>\n                      <td>2018-12-29</td>\n                      <td><span class=\"code\">versions()</span> added perl, python, gcc</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.7</th>\n                      <td>2018-12-29</td>\n                      <td><span class=\"code\">versions()</span> bug fix macOS detection</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.6</th>\n                      <td>2018-12-28</td>\n                      <td><span class=\"code\">versions()</span> bug fix macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.5</th>\n                      <td>2018-12-28</td>\n                      <td>preparing automated tests, travis-ci integration, added dev-dependencies</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.4</th>\n                      <td>2018-12-27</td>\n                      <td><span class=\"code\">graphics().controllers</span> bugfix linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.3</th>\n                      <td>2018-12-27</td>\n                      <td><span class=\"code\">os().codepage</span> bugfix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.2</th>\n                      <td>2018-12-17</td>\n                      <td>code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.1</th>\n                      <td>2018-12-17</td>\n                      <td><span class=\"code\">inetChecksite()</span> bugfix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.52.0</th>\n                      <td>2018-12-15</td>\n                      <td><span class=\"code\">cpu()</span> added physical cores, processors, socket type</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.51.4</th>\n                      <td>2018-12-05</td>\n                      <td><span class=\"code\">versions()</span> bugfix, optimization postgres</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.51.3</th>\n                      <td>2018-11-27</td>\n                      <td><span class=\"code\">mem()</span> refactoring parsing linux, code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.51.2</th>\n                      <td>2018-11-26</td>\n                      <td><span class=\"code\">mem()</span> bugfix parsing <span class=\"code\">free</span> output linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.51.1</th>\n                      <td>2018-11-26</td>\n                      <td><span class=\"code\">processLoad()</span> bugfix windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.51.0</th>\n                      <td>2018-11-25</td>\n                      <td><span class=\"code\">processLoad()</span> added for windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.50.3</th>\n                      <td>2018-11-25</td>\n                      <td><span class=\"code\">processLoad()</span>, <span class=\"code\">services()</span> fixed cpu data (linux)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.50.2</th>\n                      <td>2018-11-23</td>\n                      <td>network mac adresses: ip support fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.50.1</th>\n                      <td>2018-11-23</td>\n                      <td><span class=\"code\">services()</span> added possibility to specify ALL services \"*\" for win</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.50.0</th>\n                      <td>2018-11-23</td>\n                      <td><span class=\"code\">services()</span> added possibility to specify ALL services \"*\" for linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.49.4</th>\n                      <td>2018-11-21</td>\n                      <td><span class=\"code\">battery()</span> timeremaining optimization (linux) thanks to Jorai Rijsdijk</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.49.3</th>\n                      <td>2018-11-20</td>\n                      <td><span class=\"code\">memLayout()</span> optimized parsing (win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.49.2</th>\n                      <td>2018-11-19</td>\n                      <td>code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.49.1</th>\n                      <td>2018-11-19</td>\n                      <td><span class=\"code\">cpu().brand</span> removed extra spaces, tabs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.49.0</th>\n                      <td>2018-11-19</td>\n                      <td>added system <span class=\"code\">uuid()</span> (os specific), <span class=\"code\">versions()</span> added postgresql</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.48.4</th>\n                      <td>2018-11-18</td>\n                      <td>windows: garbled output because of codepage</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.48.3</th>\n                      <td>2018-11-18</td>\n                      <td><span class=\"code\">dockerContainerStats()</span> fixed issue <span class=\"code\">cpu_percent</span> win</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.48.2</th>\n                      <td>2018-11-18</td>\n                      <td><span class=\"code\">dockerContainerStats()</span> fixed issue <span class=\"code\">cpu_percent</span>, win exec</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.48.1</th>\n                      <td>2018-11-17</td>\n                      <td><span class=\"code\">docker...()</span> fixed issue parsing docker socket JSON</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.48.0</th>\n                      <td>2018-11-17</td>\n                      <td><span class=\"code\">diskLayout()</span> better interface detection (WIN), <span class=\"code\">osInfo()</span> added build, serial</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.47.0</th>\n                      <td>2018-11-06</td>\n                      <td><span class=\"code\">versions()</span> added docker, postfix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.46.0</th>\n                      <td>2018-11-05</td>\n                      <td>fixed issue <span class=\"code\">versions()</span>, added system openssl version</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.10</th>\n                      <td>2018-11-03</td>\n                      <td>fixed issue <span class=\"code\">battery()</span>, modified <span class=\"code\">package.json</span> - files</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.9</th>\n                      <td>2018-10-22</td>\n                      <td>fixed node 4 incompatibility</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.8</th>\n                      <td>2018-10-22</td>\n                      <td><span class=\"code\">system()</span> fix Raspberry Pi detection</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.7</th>\n                      <td>2018-10-05</td>\n                      <td>fixed typos</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.6</th>\n                      <td>2018-09-12</td>\n                      <td><span class=\"code\">mem()</span> bug parsing linux in other languages</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.5</th>\n                      <td>2018-09-07</td>\n                      <td><span class=\"code\">diskLayout()</span> tiny bug S.M.A.R.T status windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.4</th>\n                      <td>2018-09-06</td>\n                      <td>added icon to README.md</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.3</th>\n                      <td>2018-09-06</td>\n                      <td><span class=\"code\">diskLayout()</span> optimized media type detection (HD, SSD) on Windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.2</th>\n                      <td>2018-09-05</td>\n                      <td>updated imags shields icons</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.1</th>\n                      <td>2018-09-05</td>\n                      <td>updated documentation</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.45.0</th>\n                      <td>2018-09-04</td>\n                      <td><span class=\"code\">diskLayout()</span> added smartStatus</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.44.2</th>\n                      <td>2018-08-28</td>\n                      <td>added code quality badges</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.44.1</th>\n                      <td>2018-08-28</td>\n                      <td>code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.44.0</th>\n                      <td>2018-08-25</td>\n                      <td><span class=\"code\">battery()</span> bugfix & added type, model, manufacturer, serial</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.43.0</th>\n                      <td>2018-08-25</td>\n                      <td><span class=\"code\">cpuCurrentspeed()</span> added cpu speed for all cores</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.10</th>\n                      <td>2018-08-25</td>\n                      <td><span class=\"code\">processes()</span> optimized start time parsing</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.9</th>\n                      <td>2018-08-08</td>\n                      <td><span class=\"code\">cpuTemperature()</span> optimized parsing</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.8</th>\n                      <td>2018-08-03</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.7</th>\n                      <td>2018-08-03</td>\n                      <td><span class=\"code\">processes()</span> optimized parsing ps name</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.6</th>\n                      <td>2018-08-03</td>\n                      <td><span class=\"code\">processes()</span> bugfix parsing ps linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.5</th>\n                      <td>2018-08-03</td>\n                      <td><span class=\"code\">processes()</span> bugfix parsing ps linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.4</th>\n                      <td>2018-07-09</td>\n                      <td><span class=\"code\">cpuTemperature()</span> bugfix parsing negative values</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.3</th>\n                      <td>2018-07-05</td>\n                      <td><span class=\"code\">services()</span> bugfix not finding services with capital letters</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.2</th>\n                      <td>2018-07-03</td>\n                      <td><span class=\"code\">users()</span> optimized results if lack of permissions</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.1</th>\n                      <td>2018-07-03</td>\n                      <td><span class=\"code\">versions()</span> bugfix git version macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.42.0</th>\n                      <td>2018-06-01</td>\n                      <td><span class=\"code\">processes()</span> added parent process PID</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.41.4</th>\n                      <td>2018-05-28</td>\n                      <td>windows exec WMIC in try catch</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.41.3</th>\n                      <td>2018-05-13</td>\n                      <td>improved SunOS support <span class=\"code\">getStaticData()</span>, <span class=\"code\">getDynamicData()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.41.2</th>\n                      <td>2018-05-13</td>\n                      <td>bugfix <span class=\"code\">system()</span> and <span class=\"code\">flags()</span> Raspberry Pi</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.41.1</th>\n                      <td>2018-05-11</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.41.0</th>\n                      <td>2018-05-11</td>\n                      <td><span class=\"code\">system()</span> Raspberry Pi bugfix and extended detection, added partial <span class=\"code\">SunOS</span> support</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.40.1</th>\n                      <td>2018-05-10</td>\n                      <td>bugfix <span class=\"code\">system().sku</span> (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.40.0</th>\n                      <td>2018-04-29</td>\n                      <td>extended <span class=\"code\">versions()</span> (php, redis, mongodb)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.39.0</th>\n                      <td>2018-04-29</td>\n                      <td>added <span class=\"code\">versions().mysql</span> and <span class=\"code\">versions().nginx</span>, starting <span class=\"code\">SunOS</span>> support (untested)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.38.0</th>\n                      <td>2018-04-06</td>\n                      <td>added <span class=\"code\">battery().acconnected</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.12</th>\n                      <td>2018-04-05</td>\n                      <td>another optimization <span class=\"code\">battery().ischarging</span> for macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.11</th>\n                      <td>2018-04-05</td>\n                      <td>another optimization <span class=\"code\">battery().ischarging</span> for macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.10</th>\n                      <td>2018-04-05</td>\n                      <td><span class=\"code\">battery().ischarging</span> optimized for macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.9</th>\n                      <td>2018-04-03</td>\n                      <td>optimized <span class=\"code\">processes()</span>, bugfix <span class=\"code\">networkInterfaceDefault()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.8</th>\n                      <td>2018-03-25</td>\n                      <td>optimized <span class=\"code\">networkDefaultInterface()</span> detection, fixed network <span class=\"code\">operstate</span>> MacOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.7</th>\n                      <td>2018-03-13</td>\n                      <td>celebrating 4th birthday</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.6</th>\n                      <td>2018-03-12</td>\n                      <td>updated docs: fixed <span class=\"code\">diskLayout</span>>and <span class=\"code\">mamlayout</span>></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.5</th>\n                      <td>2018-03-12</td>\n                      <td>added support for <span class=\"code\">ip</span>> instead of <span class=\"code\">ifconfig</span>></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.4</th>\n                      <td>2018-02-22</td>\n                      <td>bugfix windows <span class=\"code\">processes()</span>, <span class=\"code\">disklayout()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.3</th>\n                      <td>2018-02-19</td>\n                      <td>added windows exec <span class=\"code\">windowsHide</span> option</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.2</th>\n                      <td>2018-02-15</td>\n                      <td>fixed bug <span class=\"code\">battery().percent</span> for macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.1</th>\n                      <td>2018-02-13</td>\n                      <td>fixed bug <span class=\"code\">battery().ischarging</span> for macOS</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.37.0</th>\n                      <td>2018-02-11</td>\n                      <td>extended FreeBSD support <span class=\"code\">networkStats()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.36.0</th>\n                      <td>2018-02-11</td>\n                      <td>extended FreeBSD support <span class=\"code\">networkConnections()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.35.0</th>\n                      <td>2018-02-11</td>\n                      <td>extended FreeBSD support <span class=\"code\">processLoad()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.34.1</th>\n                      <td>2018-02-11</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.34.0</th>\n                      <td>2018-02-10</td>\n                      <td>first partial FreeBSD support</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.15</th>\n                      <td>2018-01-21</td>\n                      <td>optimized OSX battery</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.14</th>\n                      <td>2018-01-17</td>\n                      <td>bugfix <span class=\"code\">diskLayout()</span> (Windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.13</th>\n                      <td>2018-01-12</td>\n                      <td>bugfix <span class=\"code\">memLayout()</span> (Windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.12</th>\n                      <td>2017-12-25</td>\n                      <td>fixed typos</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.11</th>\n                      <td>2017-12-17</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.10</th>\n                      <td>2017-12-14</td>\n                      <td>bugfix WMIC blockDevice parse (Windows 7)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.9</th>\n                      <td>2017-12-14</td>\n                      <td>bugfix WMIC not found (Windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.8</th>\n                      <td>2017-12-02</td>\n                      <td>bugfix diskLayout().size (OSX)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.7</th>\n                      <td>2017-11-28</td>\n                      <td>bugfix diskLayout().size</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.6</th>\n                      <td>2017-11-16</td>\n                      <td>bugfix diskLayout().size</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.5</th>\n                      <td>2017-11-09</td>\n                      <td>code cleanup</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.4</th>\n                      <td>2017-11-09</td>\n                      <td>bugfix graphics controller win (bytes)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.3</th>\n                      <td>2017-11-08</td>\n                      <td>bugfix cpu speed arm - type</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.2</th>\n                      <td>2017-11-08</td>\n                      <td>bugfix cpu speed arm</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.1</th>\n                      <td>2017-11-07</td>\n                      <td>improved bios and main board information</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.33.0</th>\n                      <td>2017-11-07</td>\n                      <td>added bios and main board information</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.32.4</th>\n                      <td>2017-11-02</td>\n                      <td>AMD cpu base frequencies table also for windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.32.3</th>\n                      <td>2017-11-02</td>\n                      <td>code cleanup, AMD cpu base frequencies table</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.32.2</th>\n                      <td>2017-11-01</td>\n                      <td>bugfix JSON.parse error <span class=\"code\">blockDevices()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.32.1</th>\n                      <td>2017-10-23</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.32.0</th>\n                      <td>2017-10-23</td>\n                      <td>extended <span class=\"code\">memLayout()</span> - added manufacturer</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.31.4</th>\n                      <td>2017-10-21</td>\n                      <td>updated <span class=\"code\">README.md</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.31.3</th>\n                      <td>2017-10-21</td>\n                      <td>bugfix <span class=\"code\">graphics()</span>, fixed typo <span class=\"code\">README.md</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.31.2</th>\n                      <td>2017-10-16</td>\n                      <td>bugfix <span class=\"code\">graphics()</span> vendor and model parsing linux VGA/3D</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.31.1</th>\n                      <td>2017-10-16</td>\n                      <td>bugfix <span class=\"code\">graphics()</span> vendor and model parsing linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.31.0</th>\n                      <td>2017-10-15</td>\n                      <td>extended windows support <span class=\"code\">cpuFlags()</span> (partially)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.30.6</th>\n                      <td>2017-10-05</td>\n                      <td>updated community profile</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.30.5</th>\n                      <td>2017-10-05</td>\n                      <td>bugfix <span class=\"code\">users()</span> - parsing values on windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.30.4</th>\n                      <td>2017-10-03</td>\n                      <td>bugfix <span class=\"code\">cpuTemperature()</span> - parsing values on windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.30.3</th>\n                      <td>2017-10-03</td>\n                      <td>bugfix <span class=\"code\">cpuTemperature()</span> - max value on windows</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.30.2</th>\n                      <td>2017-09-26</td>\n                      <td>bugfix <span class=\"code\">networkInterfaces()</span> - optimized ip6 address selection</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.30.1</th>\n                      <td>2017-09-21</td>\n                      <td>bugfix/typo <span class=\"code\">inetChecksite()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.30.0</th>\n                      <td>2017-09-21</td>\n                      <td>extended <span class=\"code\">versions()</span> (added <span class=\"code\">yarn</span>, <span class=\"code\">gulp</span>, <span class=\"code\">grunt</span>, <span class=\"code\">tsc</span>, <span class=\"code\">git</span>)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.29.0</th>\n                      <td>2017-09-15</td>\n                      <td>extended windows support <span class=\"code\">services()</span>, optimized <span class=\"code\">diskLayout()</span> (OSX), bugfixes</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.28.0</th>\n                      <td>2017-09-14</td>\n                      <td>extended windows support <span class=\"code\">processes()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.27.1</th>\n                      <td>2017-09-13</td>\n                      <td>updated Raspberry version detection <span class=\"code\">system()</span> (Pi 3, Zero)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.27.0</th>\n                      <td>2017-09-12</td>\n                      <td>added raw data to <span class=\"code\">currentLoad()</span>, fixed <span class=\"code\">networkInterfaces()</span> MAC problem node 8.x</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.26.2</th>\n                      <td>2017-09-01</td>\n                      <td>removed redundant code</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.26.1</th>\n                      <td>2017-08-23</td>\n                      <td>fixed <span class=\"code\">cpu().speed</span> windows / AMD, updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.26.0</th>\n                      <td>2017-08-21</td>\n                      <td>extended <span class=\"code\">getDynamicData()</span> (windows), updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.25.1</th>\n                      <td>2017-08-07</td>\n                      <td>updated docs </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.25.0</th>\n                      <td>2017-08-07</td>\n                      <td>improved windows support <span class=\"code\">networkStats()</span>, <span class=\"code\">cpuCache()</span>, bug fix <span class=\"code\">getStaticData()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.24.0</th>\n                      <td>2017-08-05</td>\n                      <td>extended windows support <span class=\"code\">networkStats()</span>, <span class=\"code\">networkConnections()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.7</th>\n                      <td>2017-07-11</td>\n                      <td>bug fix <span class=\"code\">diskLayout()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.6</th>\n                      <td>2017-07-11</td>\n                      <td>added <span class=\"code\">cpuFlags()</span> to <span class=\"code\">getStaticData()</span>, bug fix <span class=\"code\">graphics()</span> (Win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.5</th>\n                      <td>2017-06-29</td>\n                      <td>bug fix <span class=\"code\">inetChecksite()</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.4</th>\n                      <td>2017-06-24</td>\n                      <td>bug fix <span class=\"code\">getDynamicData(), getAllData() - mem</span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.3</th>\n                      <td>2017-06-23</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.2</th>\n                      <td>2017-06-23</td>\n                      <td>bug fix <span class=\"code\">battery</span> (windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.1</th>\n                      <td>2017-06-22</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.23.0</th>\n                      <td>2017-06-22</td>\n                      <td>added <span class=\"code\">memLayout</span>, <span class=\"code\">diskLayout</span>, extended windows support (<span class=\"code\">inetChecksite<span class=\"code\"></span></td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.22.0</th>\n                      <td>2017-06-19</td>\n                      <td>extended windows support (<span class=\"code\">users<span class=\"code\">, <span class=\"code\">inetLatency</span>)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.21.0</th>\n                      <td>2017-06-18</td>\n                      <td>extended time (timezone), extended windows support (battery, getAll...)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.20.1</th>\n                      <td>2017-06-17</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.20.0</th>\n                      <td>2017-06-16</td>\n                      <td>extend WIN support (cpu, cpuCache, cpuCurrentspeed, mem, networkInterfaces, docker)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.19.0</th>\n                      <td>2017-06-12</td>\n                      <td>OSX temperature now an optional dependency </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.18.0</th>\n                      <td>2017-05-27</td>\n                      <td>extended <span class=\"code\">cpu</span> info (vendor, family, model, stepping, revision, cache, speedmin/max)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.17.3</th>\n                      <td>2017-04-29</td>\n                      <td>minor fix (blockDevices data array, Windows)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.17.2</th>\n                      <td>2017-04-24</td>\n                      <td>minor fix (removed console.log)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.17.1</th>\n                      <td>2017-04-23</td>\n                      <td>fixed bugs fsSize(win), si.processes (command), si.osinfo(win)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.17.0</th>\n                      <td>2017-02-19</td>\n                      <td>windows support for some first functions, extended process list (linux</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.16.0</th>\n                      <td>2017-01-19</td>\n                      <td>blockDevices: added removable attribute + fix</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.15.1</th>\n                      <td>2017-01-17</td>\n                      <td>minor cpuTemperature fix (OSX)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.15.0</th>\n                      <td>2017-01-15</td>\n                      <td>added cpuTemperature also for OSX</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.14.0</th>\n                      <td>2017-01-14</td>\n                      <td>added currentLoad per cpu/core, cpu cache and cpu flags</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.13.0</th>\n                      <td>2016-11-23</td>\n                      <td>added shell (returns standard shell)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.12.0</th>\n                      <td>2016-11-17</td>\n                      <td>refactoring and extended currentLoad</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.11.2</th>\n                      <td>2016-11-16</td>\n                      <td>blockDevices: improved for older lsblk versions</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.11.1</th>\n                      <td>2016-11-16</td>\n                      <td>fixed small bug in blockDevices</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.11.0</th>\n                      <td>2016-11-15</td>\n                      <td>blockDevices for OSX and extended blockDevices</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.10.2</th>\n                      <td>2016-11-14</td>\n                      <td>bug fix fsSize on OSX</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.10.1</th>\n                      <td>2016-11-14</td>\n                      <td>optimization fsStats, disksIO, networkStats</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.10.0</th>\n                      <td>2016-11-12</td>\n                      <td>added blockDevices, fixed fsSize, added file system type</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.9.0</th>\n                      <td>2016-11-11</td>\n                      <td>added MAC address to networkInterfaces, fixed currentLoad</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.8.1</th>\n                      <td>2016-11-04</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.8.0</th>\n                      <td>2016-11-04</td>\n                      <td>added dockerContainerProcesses</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.7.1</th>\n                      <td>2016-11-03</td>\n                      <td>code refactoring</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.7.0</th>\n                      <td>2016-11-02</td>\n                      <td>extended docker stats, and no longer relying on curl</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.6.0</th>\n                      <td>2016-09-14</td>\n                      <td>added versions (kernel, ssl, node, npm, pm2, ...)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.5.1</th>\n                      <td>2016-09-14</td>\n                      <td>bugfix graphics info</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.5.0</th>\n                      <td>2016-09-14</td>\n                      <td>added graphics info (controller, display)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.4.4</th>\n                      <td>2016-09-02</td>\n                      <td>tiny fixes system.model, getDefaultNetworkInterface</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.4.3</th>\n                      <td>2016-09-02</td>\n                      <td>tiny bug fix fsStats, disksIO OSX</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.4.2</th>\n                      <td>2016-09-01</td>\n                      <td>improved default network interface</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.4.1</th>\n                      <td>2016-08-30</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.4.0</th>\n                      <td>2016-08-30</td>\n                      <td>rewritten processes current cpu usage</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.3.0</th>\n                      <td>2016-08-24</td>\n                      <td>process list added to processes</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.2.1</th>\n                      <td>2016-08-19</td>\n                      <td>updated docs, improvement system</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.2.0</th>\n                      <td>2016-08-19</td>\n                      <td>added battery information</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.1.1</th>\n                      <td>2016-08-18</td>\n                      <td>improved system and os detection (vm, ...), bugfix disksIO</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.1.0</th>\n                      <td>2016-08-18</td>\n                      <td>added Docker stats</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.0.1</th>\n                      <td>2016-08-17</td>\n                      <td>Bug-Fix disksIO, users, updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3.0.0</th>\n                      <td>2016-08-03</td>\n                      <td>new major version 3.0</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">2.0.5</th>\n                      <td>2016-03-02</td>\n                      <td>changed .gitignore</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">2.0.4</th>\n                      <td>2016-02-22</td>\n                      <td>tiny correction - removed double quotes CPU brand, ...</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">2.0.3</th>\n                      <td>2016-02-22</td>\n                      <td>optimized cpuCurrentspeed</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">2.0.2</th>\n                      <td>2016-02-22</td>\n                      <td>added CoreOS identification</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">2.0.1</th>\n                      <td>2016-01-07</td>\n                      <td>minor patch</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">2.0.0</th>\n                      <td>2016-01-07</td>\n                      <td>new major version 2.0</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.7</th>\n                      <td>2015-11-27</td>\n                      <td>fixed: si.network_speed()</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.6</th>\n                      <td>2015-09-17</td>\n                      <td>fixed: si.users()</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.5</th>\n                      <td>2015-09-14</td>\n                      <td>updated dependencies</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.4</th>\n                      <td>2015-07-18</td>\n                      <td>updated docs</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.3</th>\n                      <td>2015-07-18</td>\n                      <td>bugfix cpu cores</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.2</th>\n                      <td>2015-07-18</td>\n                      <td>bugfix cpu_currentspeed, cpu_temperature</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.1</th>\n                      <td>2015-07-18</td>\n                      <td>documentation update</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">1.0.0</th>\n                      <td>2015-07-18</td>\n                      <td>bug-fixes, version bump, published as npm component</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">0.0.3</th>\n                      <td>2014-04-14</td>\n                      <td>bug-fix (cpu_speed)</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">0.0.2</th>\n                      <td>2014-03-14</td>\n                      <td>Optimization FS-Speed & CPU current speed</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">0.0.1</th>\n                      <td>2014-03-13</td>\n                      <td>initial release</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n  </section>\n  </div>\n  <footer class=\"container-fluid footer\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\".\" class=\"medium home\">Home</a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"security.html\">Security Advisories&nbsp;&nbsp;<i class=\"fas fa-shield-check\"></i></a></li>\n            <li><a href=\"https://github.com/sebhildebrandt/systeminformation\">Github <i class=\"fab fa-github\"></i></a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"https://buymeacoff.ee/systeminfo\" class=\"medium badge bg-primary\"><i class=\"fas fa-coffee\"></i>&nbsp;&nbsp;Buy me a coffee</a></li>\n          </ul>\n        </div>\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\"gettingstarted.html\">Quick Start</a></li>\n            <li><a href=\"changes.html\">Version 5 Changes</a></li>\n            <li><a href=\"history.html\">Full Version History</a></li>\n            <li><a href=\"tests.html\">Testing</a></li>\n            <li><a href=\"issues.html\">Known Issues</a></li>\n            <li><a href=\"statsfunctions.html\">Stats Functions</a></li>\n          </ul>\n        </div>\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\"contributors.html\">Contributors</a></li>\n            <li><a href=\"trademarks.html\">Trademarks</a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"copyright.html\">Copyright &amp; License&nbsp;&nbsp;<img src=\"https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\" alt=\"MIT license\" /></a></li>\n            <li><a href=\"https://www.plus-innovations.com\">&copy; 2023 Sebastian Hildebrandt</a></li>\n            <li><a href=\"https://www.plus-innovations.com\">+innovations GmbH</a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </footer>\n\n  <script>\n    window.onload = function (e) {\n      createMenu();\n    }\n  </script>\n\n</body>\n\n</html>\n", "<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <!-- Required meta tags -->\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n  <!-- CSS -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" href=\"https://pro.fontawesome.com/releases/v5.15.1/css/all.css\" integrity=\"sha384-9ZfPnbegQSumzaE7mks2IYgHoayLtuto3AS6ieArECeaR8nCfliJVuLh/GaQ1gyM\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" href=\"roboto/css/roboto.css\">\n  <link rel=\"stylesheet\" href=\"styles.css\">\n\n  <!-- Favicon -->\n  <link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href=\"/assets/android-icon-192x192.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/assets/favicon-32x32.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"/assets/favicon-96x96.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/assets/favicon-16x16.png\">\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/typed.js/2.0.12/typed.min.js\" integrity=\"sha512-3J8teBiHrSyaaRBajZyIEtpDsXdPq1gsznKWIVb5CnorQuFhjWGhWe54z8YNnHHr7MZuExb9m5kvf964HiT1Sw==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n\n  <title>systeminformation</title>\n  <script>\n    let vh = window.innerHeight * 0.01;\n    // Then we set the value in the --vh custom property to the root of the document\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n\n    // We listen to the resize event\n    // window.addEventListener('resize', () => {\n    //   // We execute the same script as before\n    //   let vh = window.innerHeight * 0.01;\n    //   document.documentElement.style.setProperty('--vh', `${vh}px`);\n    // });\n    function init() {\n      typed();\n      document.querySelector('.down').addEventListener('click', function () {\n        scrollIt(\n          document.querySelector('.quickstart'),\n          600,\n          'easeOutQuad',\n          function () {\n            console.log('READY');\n          }\n        );\n      });\n      getDownloads();\n    }\n    function numberWithCommas(x) {\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n    function getDownloads() {\n      var xhttp = new XMLHttpRequest();\n      xhttp.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n          var downloads = JSON.parse(this.responseText);\n          document.getElementById(\"downloads\").innerHTML = numberWithCommas(downloads.downloads);\n        }\n      };\n      xhttp.open(\"GET\", \"https://api.npmjs.org/downloads/point/last-month/systeminformation\", true);\n      xhttp.send();\n    }\n    function getVersion() {\n      var xhttp = new XMLHttpRequest();\n      xhttp.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n          var package = JSON.parse(this.responseText);\n          document.getElementById(\"version\").innerHTML = package.version;\n        }\n      };\n      xhttp.open(\"GET\", \"https://registry.npmjs.org/systeminformation/latest\", true);\n      xhttp.send();\n    }\n    function typed() {\n      var options = {\n        strings: [\"System and OS information library for node.js\", \"Get detailed hardware, system &amp; OS information.\", \"For Linux, macOS, Windows, FreeBSD, OpenBSD, NetBSD, SunOS, Android\"],\n        typeSpeed: 60,\n        loop: false,\n        backDelay: 1200,\n\n      };\n      var typed = new Typed('#typed', options);\n    }\n    function scrollIt(destination, duration = 200, easing = 'linear', callback) {\n\n      const easings = {\n        linear(t) {\n          return t;\n        },\n        easeInQuad(t) {\n          return t * t;\n        },\n        easeOutQuad(t) {\n          return t * (2 - t);\n        },\n        easeInOutQuad(t) {\n          return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n        },\n        easeInCubic(t) {\n          return t * t * t;\n        },\n        easeOutCubic(t) {\n          return (--t) * t * t + 1;\n        },\n        easeInOutCubic(t) {\n          return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n        },\n        easeInQuart(t) {\n          return t * t * t * t;\n        },\n        easeOutQuart(t) {\n          return 1 - (--t) * t * t * t;\n        },\n        easeInOutQuart(t) {\n          return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t;\n        },\n        easeInQuint(t) {\n          return t * t * t * t * t;\n        },\n        easeOutQuint(t) {\n          return 1 + (--t) * t * t * t * t;\n        },\n        easeInOutQuint(t) {\n          return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t;\n        }\n      };\n\n      const start = window.pageYOffset;\n      const startTime = 'now' in window.performance ? performance.now() : new Date().getTime();\n\n      const documentHeight = Math.max(document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight);\n      const windowHeight = window.innerHeight || document.documentElement.clientHeight || document.getElementsByTagName('body')[0].clientHeight;\n      const destinationOffset = typeof destination === 'number' ? destination : destination.offsetTop;\n      const destinationOffsetToScroll = Math.round(documentHeight - destinationOffset < windowHeight ? documentHeight - windowHeight : destinationOffset);\n\n      if ('requestAnimationFrame' in window === false) {\n        window.scroll(0, destinationOffsetToScroll);\n        if (callback) {\n          callback();\n        }\n        return;\n      }\n\n      function scroll() {\n        const now = 'now' in window.performance ? performance.now() : new Date().getTime();\n        const time = Math.min(1, ((now - startTime) / duration));\n        const timeFunction = easings[easing](time);\n        window.scroll(0, Math.ceil((timeFunction * (destinationOffsetToScroll - start)) + start));\n\n        if (window.pageYOffset === destinationOffsetToScroll) {\n          if (callback) {\n            callback();\n          }\n          return;\n        }\n\n        requestAnimationFrame(scroll);\n      }\n\n      scroll();\n    }\n  </script>\n\n</head>\n\n<body>\n  <header class=\"bg-image-full\">\n    <div class=\"top-container\">\n      <a href=\"security.html\" class=\"recommendation\">Security advisory:<br>Update to v5.21.7</a>\n      <img class=\"logo\" src=\"assets/logo.png\" alt=\"logo\">\n      <div class=\"title\">systeminformation</div>\n      <div class=\"subtitle\"><span id=\"typed\"></span>&nbsp;</div>\n      <div class=\"version\">New Version: <span id=\"version\">5.21.7</span></div>\n      <button class=\"btn btn-light\" onclick=\"location.href='https://github.com/sebhildebrandt/systeminformation'\">View on Github <i class=\" fab fa-github\"></i></button>\n    </div>\n    <div class=\"down\">\n      <button class=\"btn btn-primary mb-2\" onclick=\"location.href='https://www.buymeacoffee.com/systeminfo'\">Buy me a coffee&nbsp;&nbsp;<i class=\"far fa-mug-hot\"></i></button>\n      <br>Read Documentation<br>\n      <i class=\"fal fa-caret-down caret\"></i>\n    </div>\n  </header>\n\n  <div class=\"container-fluid\">\n\n    <section class=\"container quickstart\">\n      <div class=\"row\">\n        <div class=\"col-12 sectionheader index\">\n          <div class=\"title\">Overview</div>\n          <div class=\"subtitle\">Node.js system information package. Lightweight collection of 50+ functions to retrieve detailed hardware, system and OS information. For Linux, macOS, partial Windows, FreeBSD, OpenBSD, NetBSD, SunOS and Android support. Dependency free.</div>\n          <div class=\"subtitle bold\">#1 NPM ranking for backend packages</div>\n          <div class=\"npmicons\">\n            <a href=\"https://npmjs.org/package/systeminformation\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/df25636cbefadf18ca1532e3bdcd0d2794235e19/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f73797374656d696e666f726d6174696f6e2e7376673f7374796c653d666c61742d737175617265\" alt=\"NPM Version\" data-canonical-src=\"https://img.shields.io/npm/v/systeminformation.svg?style=flat-square\" style=\"max-width:100%;\"></a>\n            <a href=\"https://systeminformation.io\" rel=\"nofollow\"><img src=\"assets/no-dependencies.svg\" alt=\"no dependencies\"></a>\n            <a href=\"https://github.com/sebhildebrandt/systeminformation/blob/master/LICENSE\"><img src=\"https://camo.githubusercontent.com/4b5966a2a252ee0f241a1e03b13417178eb4964f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c61742d737175617265\" alt=\"MIT license\" data-canonical-src=\"https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\" style=\"max-width:100%;\"></a>\n          </div>\n          <div class=\"text larger\"><span class=\"warning\">Security issues:</span> Please have a look at our <a href=\"../security.html\">security advisories</a>.</div>\n\n        </div>\n      </div>\n      <div class=\"row justify-content-center sectionheader index\">\n        <div class=\"col-8\">\n          <hr>\n        </div>\n      </div>\n      <div class=\"row number-section\">\n        <div class=\"col-xl-4 col-lg-4 col-md-4 col-12\">\n          <div class=\"numbers\">15,642</div>\n          <div class=\"title\">Lines of code</div>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-4 col-12\">\n          <div id=\"downloads\" class=\"numbers\">...</div>\n          <div class=\"title\">Downloads last month</div>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-4 col-12\">\n          <div class=\"numbers\">646</div>\n          <div class=\"title\">Dependents</div>\n        </div>\n      </div>\n      <div class=\"row justify-content-center sectionheader index\">\n        <div class=\"col-8\">\n          <hr>\n        </div>\n      </div>\n      <div class=\"row\" id=\"docs\">\n        <div class=\"col-12 sectionheader index\">\n          <div class=\"title\">Documentation</div>\n          <div class=\"subtitle\">Detailed documentation and reference for version 5.x.x</div>\n          <div class=\"title-small\">Breaking Changes - Version 5</div>\n          <div class=\"text\">We made a lot of improvements and changes in the new version. <span class=\"bold\">Version 5 is NOT fully backward compatible to version 4!</span> Be aware, there are some breaking changes. Please refer to the <a href=\"changes.html\">Version 5 - Changes</a> page to see a full documentation of all changes you should have a look on.</div>\n          <div class=\"text larger\"><span class=\"bold\">Version 4 documentation</span> can be found <a href=\"v4/index.html\">here</a>.</div>\n        </div>\n      </div>\n      <div class=\"row index\">\n        <a href=\"gettingstarted.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-download\"></i></div>\n            <div class=\"icontitle\">Quick Start</div>\n          </div>\n        </a>\n        <a href=\"general.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-th-list\"></i></div>\n            <div class=\"icontitle\">General</div>\n          </div>\n        </a>\n        <a href=\"system.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-server\"></i></div>\n            <div class=\"icontitle\">System</div>\n          </div>\n        </a>\n        <a href=\"cpu.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-microchip\"></i></div>\n            <div class=\"icontitle\">CPU</div>\n          </div>\n        </a>\n        <a href=\"memory.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-memory\"></i></div>\n            <div class=\"icontitle\">Memory</div>\n          </div>\n        </a>\n        <a href=\"battery.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-battery-half\"></i></div>\n            <div class=\"icontitle\">Battery</div>\n          </div>\n        </a>\n        <a href=\"graphics.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-desktop\"></i></div>\n            <div class=\"icontitle\">Graphics</div>\n          </div>\n        </a>\n        <a href=\"os.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-window\"></i></div>\n            <div class=\"icontitle\">OS</div>\n          </div>\n        </a>\n        <a href=\"processes.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-chart-line\"></i></div>\n            <div class=\"icontitle\">Process/Service</div>\n          </div>\n        </a>\n        <a href=\"filesystem.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-hdd\"></i></div>\n            <div class=\"icontitle\">Disks / FS</div>\n          </div>\n        </a>\n        <a href=\"usb.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fab fa-usb\"></i></div>\n            <div class=\"icontitle\">USB</div>\n          </div>\n        </a>\n        <a href=\"printer.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-print\"></i></div>\n            <div class=\"icontitle\">Printer</div>\n          </div>\n        </a>\n        <a href=\"audio.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-volume\"></i></div>\n            <div class=\"icontitle\">Audio</div>\n          </div>\n        </a>\n        <a href=\"network.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-network-wired\"></i></div>\n            <div class=\"icontitle\">Network</div>\n          </div>\n        </a>\n        <a href=\"wifi.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-wifi\"></i></div>\n            <div class=\"icontitle\">Wifi</div>\n          </div>\n        </a>\n        <a href=\"bluetooth.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fab fa-bluetooth\"></i></div>\n            <div class=\"icontitle\">Bluetooth</div>\n          </div>\n        </a>\n        <a href=\"docker.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fab fa-docker\"></i></div>\n            <div class=\"icontitle\">Docker</div>\n          </div>\n        </a>\n        <a href=\"vbox.html\" class=\"col-xl-3 col-lg-3 col-md-4 col-6 features\">\n          <div class=\"inner\">\n            <div class=\"icons\"><i class=\"fal fa-box-open\"></i></div>\n            <div class=\"icontitle\">Virtual Box</div>\n          </div>\n        </a>\n      </div>\n      <div class=\"row justify-content-center sectionheader index\">\n        <div class=\"col-8\">\n          <hr>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12 sectionheader index\">\n          <div class=\"title-small\">Issues</div>\n          <div class=\"text\"><span class=\"warning\">Security issues:</span> We highly recommend to have a look at our <a href=\"security.html\">security advisories</a></div>\n          <div class=\"text\"><span class=\"bold\">Having an issue</span>: If you run into problems, please check out <a href=\"issues.html\">known issues page</a> first.<br>If you still have problems, please feel free to open an issue on our <a href=\"https://github.com/sebhildebrandt/systeminformation/issues\">github page</a></div>\n        </div>\n      </div>\n    </section>\n  </div>\n\n  <footer class=\"container-fluid footer\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\".\" class=\"medium home\">Home</a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"security.html\">Security Advisories&nbsp;&nbsp;<i class=\"fas fa-shield-check\"></i></a></li>\n            <li><a href=\"https://github.com/sebhildebrandt/systeminformation\">Github <i class=\"fab fa-github\"></i></a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"https://buymeacoff.ee/systeminfo\" class=\"medium badge bg-primary\"><i class=\"fas fa-coffee\"></i>&nbsp;&nbsp;Buy me a coffee</a></li>\n          </ul>\n        </div>\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\"gettingstarted.html\">Quick Start</a></li>\n            <li><a href=\"changes.html\">Version 5 Changes</a></li>\n            <li><a href=\"history.html\">Full Version History</a></li>\n            <li><a href=\"tests.html\">Testing</a></li>\n            <li><a href=\"issues.html\">Known Issues</a></li>\n            <li><a href=\"statsfunctions.html\">Stats Functions</a></li>\n          </ul>\n        </div>\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\"contributors.html\">Contributors</a></li>\n            <li><a href=\"trademarks.html\">Trademarks</a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"copyright.html\">Copyright &amp; License&nbsp;&nbsp;<img src=\"https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\" alt=\"MIT license\" /></a></li>\n            <li><a href=\"https://www.plus-innovations.com\">&copy; 2023 Sebastian Hildebrandt</a></li>\n            <li><a href=\"https://www.plus-innovations.com\">+innovations GmbH</a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </footer>\n\n  <!-- Optional JavaScript -->\n  <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n  <script>\n    window.onload = function (e) {\n      init();\n    }\n  </script>\n</body>\n\n</html>\n", "<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <!-- Required meta tags -->\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n  <!-- CSS -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" href=\"https://pro.fontawesome.com/releases/v5.15.1/css/all.css\" integrity=\"sha384-9ZfPnbegQSumzaE7mks2IYgHoayLtuto3AS6ieArECeaR8nCfliJVuLh/GaQ1gyM\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" href=\"roboto/css/roboto.css\">\n  <link rel=\"stylesheet\" href=\"styles.css\">\n  <script src=\"main.js\"></script>\n\n  <!-- Favicon -->\n  <link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href=\"/assets/android-icon-192x192.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/assets/favicon-32x32.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"/assets/favicon-96x96.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/assets/favicon-16x16.png\">\n\n  <title>systeminformation</title>\n\n</head>\n\n<body>\n  <nav class=\"nav\">\n    <div class=\"container\">\n      <a href=\".\"><img class=\"logo float-left\" src=\"assets/logo.png\" alt=\"logo\">\n        <div class=\"title float-left\">systeminformation</div>\n      </a>\n      <div class=\"text float-right github\"><a href=\"https://github.com/sebhildebrandt/systeminformation\">View on Github <i class=\"fab fa-github\"></i></a></div>\n      <div class=\"text float-right todocs\"><a href=\"./#docs\">Docs Overview</a></div>\n    </div>\n  </nav>\n\n  <div class=\"container-fluid\">\n    <section class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-4 col-lg-3 col-xl-2 menu\" id=\"menu\">\n        </div>\n        <div class=\"col-12 col-md-8 col-lg-9 col-xl-10 content\">\n          <div class=\"row\">\n            <div class=\"col-12 sectionheader\">\n              <div class=\"title\">Security Advisories</div>\n              <div class=\"text\">\n                <h2>Passing User Paramters to Systeminformation</h2>\n                <p>For most of the applications that are using <span class=\"code\">systeminformation</span>, there is no reason to worry. <span class=\"bold\">But be aware!</span> If you are using <span class=\"code\">inetLatency()</span>, <span class=\"code\">inetChecksite()</span>, <span class=\"code\">services()</span>, <span class=\"code\">processLoad()</span>, <span class=\"code\">versions()</span> with arbitrary untrusted user input, you should pay extra attention! We are doing a lot of input sanitation for those functions inside this package but we cannot handle all cases!</p>\n                <p class=\"warning\">This can lead to serious impact on your servers!</p>\n                <p>We highly recommend to always upgrade to the latest version of our package. We maintain security updates for version 5 AND also version 4. For version 4 you can install latest version by placing <span class=\"code\">\"systeminformation\": \"^4\"</span> in your package.json (dependencies) and run <span class=\"code\">npm install</span></p>\n\n                <h2>SSID Command Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 5.21.07 and &lt; 4.34.22<br>\n                  <span class=\"bold\">Date:</span> 2023-09-19<br>\n                  <span class=\"bold\">CVE indentifier</span> -\n                </p>\n\n                <h4>Impact</h4>\n                <p>We had an issue that there was a possibility to perform a potential command injection possibility by crafting detected SSIDs in <span class=\"code\">wifiConnections()</span>, <span class=\"code\">wifiNetworks()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with parameter checking. Please upgrade to version >= 5.7.21 (or >= 4.34.22 if you are using version 4).</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize parameter strings that are passed to <span class=\"code\">wifiConnections()</span>, <span class=\"code\">wifiNetworks()</span> (string only)</p>\n                <hr>\n                <br>\n\n                <h2>Command Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 5.6.13 and &lt; 4.34.21<br>\n                  <span class=\"bold\">Date:</span> 2021-05-04<br>\n                  <span class=\"bold\">CVE indentifier</span> -\n                </p>\n\n                <h4>Impact</h4>\n                <p>We had an issue that there was a possibility to perform a potential command injection possibility by passing a non string values as a parameter to the <span class=\"code\">dockerImagesInspect()</span>, <span class=\"code\">dockerContainerInspect()</span>, <span class=\"code\">dockerContainerProcesses()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with parameter checking. Please upgrade to version >= 5.6.13 (or >= 4.34.21 if you are using version 4).</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize parameter strings that are passed to <span class=\"code\">dockerImagesInspect()</span>, <span class=\"code\">dockerContainerInspect()</span>, <span class=\"code\">dockerContainerProcesses()</span> (string only)</p>\n                <hr>\n                <br>\n                <h2>Command Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 5.6.11 and &lt; 4.34.20<br>\n                  <span class=\"bold\">Date:</span> 2021-04-08<br>\n                  <span class=\"bold\">CVE indentifier</span> -\n                </p>\n\n                <h4>Impact</h4>\n                <p>We had an issue that there was a possibility to perform a potential command injection possibility by passing a non string values as a parameter to the <span class=\"code\">versions()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with parameter checking. Please upgrade to version >= 5.6.11 (or >= 4.34.20 if you are using version 4).</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize parameter strings that are passed to <span class=\"code\">versions()</span> (string only)</p>\n                <hr>\n                <br>\n                <h2>Command Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 5.6.4 and &lt; 4.34.17<br>\n                  <span class=\"bold\">Date:</span> 2021-03-15<br>\n                  <span class=\"bold\">CVE indentifier</span> CVE-2021-21388\n                </p>\n\n                <h4>Impact</h4>\n                <p>We had an issue that there was a possibility to perform a potential command injection possibility by passing a manipulated string prototype as a parameter to the following functions. Affected commands: <span class=\"code\">inetLatency()</span>, <span class=\"code\">inetChecksite()</span>, <span class=\"code\">services()</span>, <span class=\"code\">processLoad()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with additional parameter checking. Please upgrade to version >= 5.6.4 (or >= 4.34.17 if you are using version 4).</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize parameter strings that are passed to <span class=\"code\">inetLatency()</span>, <span class=\"code\">inetChecksite()</span>, <span class=\"code\">services()</span>, <span class=\"code\">processLoad()</span> (string only)</p>\n                <hr>\n                <br>\n                <h2>Insufficient File Scheme Validation</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 5.3.2 and &lt; 4.34.12<br>\n                  <span class=\"bold\">Date:</span> 2021-02-15<br>\n                  <span class=\"bold\">CVE indentifier</span> -\n                </p>\n\n                <h4>Impact</h4>\n                <p>We had an issue that there was a possibility to run inetChecksite against local files due to improper file scheme validation. Affected commands: <span class=\"code\">inetLatency()</span>, <span class=\"code\">inetChecksite()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with additional parameter checking. Please upgrade to version >= 5.3.2 (or >= 4.34.12 if you are using version 4).</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to <span class=\"code\">inetLatency()</span>, <span class=\"code\">inetChecksite()</span> (sanitize `file://` parameter)</p>\n                <hr>\n                <br>\n                <h2>Command Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 5.3.1 and &lt; 4.34.11<br>\n                  <span class=\"bold\">Date:</span> 2021-02-14<br>\n                  <span class=\"bold\">CVE indentifier</span> CVE-2021-21315\n                </p>\n\n                <h4>Impact</h4>\n                <p>We had an issue that there was a possibility to perform a potential command injection possibility by passing a manipulated array as a parameter to the following functions. Affected commands: <span class=\"code\">inetLatency()</span>, <span class=\"code\">inetChecksite()</span>, <span class=\"code\">services()</span>, <span class=\"code\">processLoad()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with additional parameter checking. Please upgrade to version >= 5.3.1 (or >= 4.34.11 if you are using version 4).</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to <span class=\"code\">inetLatency()</span>, <span class=\"code\">inetChecksite()</span>, <span class=\"code\">services()</span>, <span class=\"code\">processLoad()</span> (string only)</p>\n                <hr>\n                <br>\n                <h2>DOS Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 5.2.6 and &lt; 4.34.10<br>\n                  <span class=\"bold\">Date:</span> 2021-02-12<br>\n                  <span class=\"bold\">CVE indentifier</span> -\n                </p>\n\n                <h4>Impact</h4>\n                <p>Here we had an issue that there was a possibility to perform a ping command execution for too long time. Affected commands: <span class=\"code\">inetLatency()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with a shell string sanitation fix. Please upgrade to version >= 5.2.6 (or >= 4.34.10 if you are using version 4).</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to <span class=\"code\">inetLatency()</span> (no spaces)</p>\n                <hr>\n                <br>\n                <h2>Command Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 4.31.1<br>\n                  <span class=\"bold\">Date:</span> 2020-12-11<br>\n                  <span class=\"bold\">CVE indentifier</span> CVE-2020-26274, CVE-2020-28448\n                </p>\n\n                <h4>Impact</h4>\n                <p>Here we had an issue that there was a possibility to inject commands to the command line of your machine via systeminformation. Affected commands: <span class=\"code\">inetLatency()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with a shell string sanitation fix. Please upgrade to version >= 4.31.1</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to <span class=\"code\">inetLatency()</span></p>\n\n                <hr>\n                <br>\n                <h2>Command Injection Vulnerability - Prototype Pollution</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 4.30.5<br>\n                  <span class=\"bold\">Date:</span> 2020-11-26<br>\n                  <span class=\"bold\">CVE indentifier</span> CVE-2020-26245\n                </p>\n\n                <h4>Impact</h4>\n                <p>Here we had an issue that there was a possibility to inject commands to the command line by property pollution on the string object. Affected commands: <span class=\"code\">inetChecksite()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with a shell string sanitation fix as well as handling prototype polution. Please upgrade to version >= 4.30.5</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to <span class=\"code\">inetChecksite()</span></p>\n\n                <hr>\n                <br>\n                <h2>Command Injection Vulnerability</h2>\n                <p><span class=\"bold\">Affected versions:</span>\n                  &lt; 4.27.11<br>\n                  <span class=\"bold\">Date:</span> 2020-10-26<br>\n                  <span class=\"bold\">CVE indentifier</span> CVE-2020-7752\n                </p>\n\n                <h4>Impact</h4>\n                <p>Here we had an issue that there was a possibility to inject commands to the command line of your machine via systeminformation. Affected commands: <span class=\"code\">inetChecksite()</span>.</p>\n\n                <h4>Patch</h4>\n                <p>Problem was fixed with a shell string sanitation fix. Please upgrade to version >= 4.27.11</p>\n\n                <h4>Workaround</h4>\n                <p>If you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to <span class=\"code\">inetChecksite()</span></p>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n  </section>\n  </div>\n  <footer class=\"container-fluid footer\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\".\" class=\"medium home\">Home</a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"security.html\">Security Advisories&nbsp;&nbsp;<i class=\"fas fa-shield-check\"></i></a></li>\n            <li><a href=\"https://github.com/sebhildebrandt/systeminformation\">Github <i class=\"fab fa-github\"></i></a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"https://buymeacoff.ee/systeminfo\" class=\"medium badge bg-primary\"><i class=\"fas fa-coffee\"></i>&nbsp;&nbsp;Buy me a coffee</a></li>\n          </ul>\n        </div>\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\"gettingstarted.html\">Quick Start</a></li>\n            <li><a href=\"changes.html\">Version 5 Changes</a></li>\n            <li><a href=\"history.html\">Full Version History</a></li>\n            <li><a href=\"tests.html\">Testing</a></li>\n            <li><a href=\"issues.html\">Known Issues</a></li>\n            <li><a href=\"statsfunctions.html\">Stats Functions</a></li>\n          </ul>\n        </div>\n        <div class=\"col-lg-4 col-12\">\n          <ul class=\"list-unstyled\">\n            <li><a href=\"contributors.html\">Contributors</a></li>\n            <li><a href=\"trademarks.html\">Trademarks</a></li>\n            <li>&nbsp;</li>\n            <li><a href=\"copyright.html\">Copyright &amp; License&nbsp;&nbsp;<img src=\"https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\" alt=\"MIT license\" /></a></li>\n            <li><a href=\"https://www.plus-innovations.com\">&copy; 2023 Sebastian Hildebrandt</a></li>\n            <li><a href=\"https://www.plus-innovations.com\">+innovations GmbH</a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </footer>\n\n  <script>\n    window.onload = function (e) {\n      createMenu();\n    }\n  </script>\n</body>\n\n</html>\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// wifi.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2023\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 9. wifi\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\n\nfunction wifiDBFromQuality(quality) {\n  return (parseFloat(quality) / 2 - 100);\n}\n\nfunction wifiQualityFromDB(db) {\n  const result = 2 * (parseFloat(db) + 100);\n  return result <= 100 ? result : 100;\n}\n\nconst _wifi_frequencies = {\n  1: 2412,\n  2: 2417,\n  3: 2422,\n  4: 2427,\n  5: 2432,\n  6: 2437,\n  7: 2442,\n  8: 2447,\n  9: 2452,\n  10: 2457,\n  11: 2462,\n  12: 2467,\n  13: 2472,\n  14: 2484,\n  32: 5160,\n  34: 5170,\n  36: 5180,\n  38: 5190,\n  40: 5200,\n  42: 5210,\n  44: 5220,\n  46: 5230,\n  48: 5240,\n  50: 5250,\n  52: 5260,\n  54: 5270,\n  56: 5280,\n  58: 5290,\n  60: 5300,\n  62: 5310,\n  64: 5320,\n  68: 5340,\n  96: 5480,\n  100: 5500,\n  102: 5510,\n  104: 5520,\n  106: 5530,\n  108: 5540,\n  110: 5550,\n  112: 5560,\n  114: 5570,\n  116: 5580,\n  118: 5590,\n  120: 5600,\n  122: 5610,\n  124: 5620,\n  126: 5630,\n  128: 5640,\n  132: 5660,\n  134: 5670,\n  136: 5680,\n  138: 5690,\n  140: 5700,\n  142: 5710,\n  144: 5720,\n  149: 5745,\n  151: 5755,\n  153: 5765,\n  155: 5775,\n  157: 5785,\n  159: 5795,\n  161: 5805,\n  165: 5825,\n  169: 5845,\n  173: 5865,\n  183: 4915,\n  184: 4920,\n  185: 4925,\n  187: 4935,\n  188: 4940,\n  189: 4945,\n  192: 4960,\n  196: 4980\n};\n\nfunction wifiFrequencyFromChannel(channel) {\n  return {}.hasOwnProperty.call(_wifi_frequencies, channel) ? _wifi_frequencies[channel] : null;\n}\n\nfunction wifiChannelFromFrequencs(frequency) {\n  let channel = 0;\n  for (let key in _wifi_frequencies) {\n    if ({}.hasOwnProperty.call(_wifi_frequencies, key)) {\n      if (_wifi_frequencies[key] === frequency) { channel = util.toInt(key); }\n    }\n  }\n  return channel;\n}\n\nfunction ifaceListLinux() {\n  const result = [];\n  const cmd = 'iw dev 2>/dev/null';\n  try {\n    const all = execSync(cmd).toString().split('\\n').map(line => line.trim()).join('\\n');\n    const parts = all.split('\\nInterface ');\n    parts.shift();\n    parts.forEach(ifaceDetails => {\n      const lines = ifaceDetails.split('\\n');\n      const iface = lines[0];\n      const id = util.toInt(util.getValue(lines, 'ifindex', ' '));\n      const mac = util.getValue(lines, 'addr', ' ');\n      const channel = util.toInt(util.getValue(lines, 'channel', ' '));\n      result.push({\n        id,\n        iface,\n        mac,\n        channel\n      });\n    });\n    return result;\n  } catch (e) {\n    try {\n      const all = execSync('nmcli -t -f general,wifi-properties,wired-properties,interface-flags,capabilities,nsp device show 2>/dev/null').toString();\n      const parts = all.split('\\nGENERAL.DEVICE:');\n      let i = 1;\n      parts.forEach(ifaceDetails => {\n        const lines = ifaceDetails.split('\\n');\n        const iface = util.getValue(lines, 'GENERAL.DEVICE');\n        const type = util.getValue(lines, 'GENERAL.TYPE');\n        const id = i++; // // util.getValue(lines, 'GENERAL.PATH');\n        const mac = util.getValue(lines, 'GENERAL.HWADDR');\n        const channel = '';\n        if (type.toLowerCase() === 'wifi') {\n          result.push({\n            id,\n            iface,\n            mac,\n            channel\n          });\n        }\n      });\n      return result;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n\nfunction nmiDeviceLinux(iface) {\n  const cmd = `nmcli -t -f general,wifi-properties,capabilities,ip4,ip6 device show ${iface} 2>/dev/null`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const ssid = util.getValue(lines, 'GENERAL.CONNECTION');\n    return {\n      iface,\n      type: util.getValue(lines, 'GENERAL.TYPE'),\n      vendor: util.getValue(lines, 'GENERAL.VENDOR'),\n      product: util.getValue(lines, 'GENERAL.PRODUCT'),\n      mac: util.getValue(lines, 'GENERAL.HWADDR').toLowerCase(),\n      ssid: ssid !== '--' ? ssid : null\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction nmiConnectionLinux(ssid) {\n  const cmd = `nmcli -t --show-secrets connection show ${ssid} 2>/dev/null`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const bssid = util.getValue(lines, '802-11-wireless.seen-bssids').toLowerCase();\n    return {\n      ssid: ssid !== '--' ? ssid : null,\n      uuid: util.getValue(lines, 'connection.uuid'),\n      type: util.getValue(lines, 'connection.type'),\n      autoconnect: util.getValue(lines, 'connection.autoconnect') === 'yes',\n      security: util.getValue(lines, '802-11-wireless-security.key-mgmt'),\n      bssid: bssid !== '--' ? bssid : null\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction wpaConnectionLinux(iface) {\n  const cmd = `wpa_cli -i ${iface} status 2>&1`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const freq = util.toInt(util.getValue(lines, 'freq', '='));\n    return {\n      ssid: util.getValue(lines, 'ssid', '='),\n      uuid: util.getValue(lines, 'uuid', '='),\n      security: util.getValue(lines, 'key_mgmt', '='),\n      freq,\n      channel: wifiChannelFromFrequencs(freq),\n      bssid: util.getValue(lines, 'bssid', '=').toLowerCase()\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction getWifiNetworkListNmi() {\n  const result = [];\n  const cmd = 'nmcli -t -m multiline --fields active,ssid,bssid,mode,chan,freq,signal,security,wpa-flags,rsn-flags device wifi list 2>/dev/null';\n  try {\n    const stdout = execSync(cmd, { maxBuffer: 1024 * 20000 });\n    const parts = stdout.toString().split('ACTIVE:');\n    parts.shift();\n    parts.forEach(part => {\n      part = 'ACTIVE:' + part;\n      const lines = part.split(os.EOL);\n      const channel = util.getValue(lines, 'CHAN');\n      const frequency = util.getValue(lines, 'FREQ').toLowerCase().replace('mhz', '').trim();\n      const security = util.getValue(lines, 'SECURITY').replace('(', '').replace(')', '');\n      const wpaFlags = util.getValue(lines, 'WPA-FLAGS').replace('(', '').replace(')', '');\n      const rsnFlags = util.getValue(lines, 'RSN-FLAGS').replace('(', '').replace(')', '');\n      result.push({\n        ssid: util.getValue(lines, 'SSID'),\n        bssid: util.getValue(lines, 'BSSID').toLowerCase(),\n        mode: util.getValue(lines, 'MODE'),\n        channel: channel ? parseInt(channel, 10) : null,\n        frequency: frequency ? parseInt(frequency, 10) : null,\n        signalLevel: wifiDBFromQuality(util.getValue(lines, 'SIGNAL')),\n        quality: parseFloat(util.getValue(lines, 'SIGNAL')),\n        security: security && security !== 'none' ? security.split(' ') : [],\n        wpaFlags: wpaFlags && wpaFlags !== 'none' ? wpaFlags.split(' ') : [],\n        rsnFlags: rsnFlags && rsnFlags !== 'none' ? rsnFlags.split(' ') : []\n      });\n    });\n    return result;\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction getWifiNetworkListIw(iface) {\n  const result = [];\n  try {\n    let iwlistParts = execSync(`export LC_ALL=C; iwlist ${iface} scan 2>&1; unset LC_ALL`).toString().split('        Cell ');\n    if (iwlistParts[0].indexOf('resource busy') >= 0) { return -1; }\n    if (iwlistParts.length > 1) {\n      iwlistParts.shift();\n      iwlistParts.forEach(element => {\n        const lines = element.split('\\n');\n        const channel = util.getValue(lines, 'channel', ':', true);\n        const address = (lines && lines.length && lines[0].indexOf('Address:') >= 0 ? lines[0].split('Address:')[1].trim().toLowerCase() : '');\n        const mode = util.getValue(lines, 'mode', ':', true);\n        const frequency = util.getValue(lines, 'frequency', ':', true);\n        const qualityString = util.getValue(lines, 'Quality', '=', true);\n        const dbParts = qualityString.toLowerCase().split('signal level=');\n        const db = dbParts.length > 1 ? util.toInt(dbParts[1]) : 0;\n        const quality = db ? wifiQualityFromDB(db) : 0;\n        const ssid = util.getValue(lines, 'essid', ':', true);\n\n        // security and wpa-flags\n        const isWpa = element.indexOf(' WPA ') >= 0;\n        const isWpa2 = element.indexOf('WPA2 ') >= 0;\n        const security = [];\n        if (isWpa) { security.push('WPA'); }\n        if (isWpa2) { security.push('WPA2'); }\n        const wpaFlags = [];\n        let wpaFlag = '';\n        lines.forEach(function (line) {\n          const l = line.trim().toLowerCase();\n          if (l.indexOf('group cipher') >= 0) {\n            if (wpaFlag) {\n              wpaFlags.push(wpaFlag);\n            }\n            const parts = l.split(':');\n            if (parts.length > 1) {\n              wpaFlag = parts[1].trim().toUpperCase();\n            }\n          }\n          if (l.indexOf('pairwise cipher') >= 0) {\n            const parts = l.split(':');\n            if (parts.length > 1) {\n              if (parts[1].indexOf('tkip')) { wpaFlag = (wpaFlag ? 'TKIP/' + wpaFlag : 'TKIP'); }\n              else if (parts[1].indexOf('ccmp')) { wpaFlag = (wpaFlag ? 'CCMP/' + wpaFlag : 'CCMP'); }\n              else if (parts[1].indexOf('proprietary')) { wpaFlag = (wpaFlag ? 'PROP/' + wpaFlag : 'PROP'); }\n            }\n          }\n          if (l.indexOf('authentication suites') >= 0) {\n            const parts = l.split(':');\n            if (parts.length > 1) {\n              if (parts[1].indexOf('802.1x')) { wpaFlag = (wpaFlag ? '802.1x/' + wpaFlag : '802.1x'); }\n              else if (parts[1].indexOf('psk')) { wpaFlag = (wpaFlag ? 'PSK/' + wpaFlag : 'PSK'); }\n            }\n          }\n        });\n        if (wpaFlag) {\n          wpaFlags.push(wpaFlag);\n        }\n\n        result.push({\n          ssid,\n          bssid: address,\n          mode,\n          channel: channel ? util.toInt(channel) : null,\n          frequency: frequency ? util.toInt(frequency.replace('.', '')) : null,\n          signalLevel: db,\n          quality,\n          security,\n          wpaFlags,\n          rsnFlags: []\n        });\n      });\n    }\n    return result;\n  } catch (e) {\n    return -1;\n  }\n}\n\nfunction parseWifiDarwin(wifiObj) {\n  const result = [];\n  if (wifiObj) {\n    wifiObj.forEach(function (wifiItem) {\n      const signalLevel = wifiItem.RSSI;\n      let security = [];\n      let wpaFlags = [];\n      let ssid = wifiItem.SSID_STR || '';\n      if (wifiItem.WPA_IE) {\n        security.push('WPA');\n        if (wifiItem.WPA_IE.IE_KEY_WPA_UCIPHERS) {\n          wifiItem.WPA_IE.IE_KEY_WPA_UCIPHERS.forEach(function (ciphers) {\n            if (ciphers === 0 && wpaFlags.indexOf('unknown/TKIP') === -1) { wpaFlags.push('unknown/TKIP'); }\n            if (ciphers === 2 && wpaFlags.indexOf('PSK/TKIP') === -1) { wpaFlags.push('PSK/TKIP'); }\n            if (ciphers === 4 && wpaFlags.indexOf('PSK/AES') === -1) { wpaFlags.push('PSK/AES'); }\n          });\n        }\n      }\n      if (wifiItem.RSN_IE) {\n        security.push('WPA2');\n        if (wifiItem.RSN_IE.IE_KEY_RSN_UCIPHERS) {\n          wifiItem.RSN_IE.IE_KEY_RSN_UCIPHERS.forEach(function (ciphers) {\n            if (ciphers === 0 && wpaFlags.indexOf('unknown/TKIP') === -1) { wpaFlags.push('unknown/TKIP'); }\n            if (ciphers === 2 && wpaFlags.indexOf('TKIP/TKIP') === -1) { wpaFlags.push('TKIP/TKIP'); }\n            if (ciphers === 4 && wpaFlags.indexOf('PSK/AES') === -1) { wpaFlags.push('PSK/AES'); }\n          });\n        }\n      }\n      if (wifiItem.SSID) {\n        ssid = Buffer.from(wifiItem.SSID, 'base64').toString('utf8');\n      }\n      result.push({\n        ssid,\n        bssid: wifiItem.BSSID || '',\n        mode: '',\n        channel: wifiItem.CHANNEL,\n        frequency: wifiFrequencyFromChannel(wifiItem.CHANNEL),\n        signalLevel: signalLevel ? parseInt(signalLevel, 10) : null,\n        quality: wifiQualityFromDB(signalLevel),\n        security,\n        wpaFlags,\n        rsnFlags: []\n      });\n    });\n  }\n  return result;\n}\nfunction wifiNetworks(callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux) {\n        result = getWifiNetworkListNmi();\n        if (result.length === 0) {\n          try {\n            const iwconfigParts = execSync('export LC_ALL=C; iwconfig 2>/dev/null; unset LC_ALL').toString().split('\\n\\n');\n            let iface = '';\n            iwconfigParts.forEach(element => {\n              if (element.indexOf('no wireless') === -1 && element.trim() !== '') {\n                iface = element.split(' ')[0];\n              }\n            });\n            if (iface) {\n              let ifaceSanitized = '';\n              const s = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(iface, true);\n              for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n                if (s[i] !== undefined) {\n                  ifaceSanitized = ifaceSanitized + s[i];\n                }\n              }\n\n              const res = getWifiNetworkListIw(ifaceSanitized);\n              if (res === -1) {\n                // try again after 4 secs\n                setTimeout(function (iface) {\n                  const res = getWifiNetworkListIw(iface);\n                  if (res != -1) { result = res; }\n                  if (callback) {\n                    callback(result);\n                  }\n                  resolve(result);\n                }, 4000);\n              } else {\n                result = res;\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              }\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          } catch (e) {\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          }\n        } else {\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        }\n      } else if (_darwin) {\n        let cmd = '/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -s -x';\n        exec(cmd, { maxBuffer: 1024 * 40000 }, function (error, stdout) {\n          const output = stdout.toString();\n          result = parseWifiDarwin(util.plistParser(output));\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else if (_windows) {\n        let cmd = 'netsh wlan show networks mode=Bssid';\n        util.powerShell(cmd).then((stdout) => {\n          const ssidParts = stdout.toString('utf8').split(os.EOL + os.EOL + 'SSID ');\n          ssidParts.shift();\n\n          ssidParts.forEach(ssidPart => {\n            const ssidLines = ssidPart.split(os.EOL);\n            if (ssidLines && ssidLines.length >= 8 && ssidLines[0].indexOf(':') >= 0) {\n              const bssidsParts = ssidPart.split(' BSSID');\n              bssidsParts.shift();\n\n              bssidsParts.forEach((bssidPart) => {\n                const bssidLines = bssidPart.split(os.EOL);\n                const bssidLine = bssidLines[0].split(':');\n                bssidLine.shift();\n                const bssid = bssidLine.join(':').trim().toLowerCase();\n                const channel = bssidLines[3].split(':').pop().trim();\n                const quality = bssidLines[1].split(':').pop().trim();\n\n                result.push({\n                  ssid: ssidLines[0].split(':').pop().trim(),\n                  bssid,\n                  mode: '',\n                  channel: channel ? parseInt(channel, 10) : null,\n                  frequency: wifiFrequencyFromChannel(channel),\n                  signalLevel: wifiDBFromQuality(quality),\n                  quality: quality ? parseInt(quality, 10) : null,\n                  security: [ssidLines[2].split(':').pop().trim()],\n                  wpaFlags: [ssidLines[3].split(':').pop().trim()],\n                  rsnFlags: []\n                });\n              });\n            }\n          });\n\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiNetworks = wifiNetworks;\n\nfunction getVendor(model) {\n  model = model.toLowerCase();\n  let result = '';\n  if (model.indexOf('intel') >= 0) { result = 'Intel'; }\n  else if (model.indexOf('realtek') >= 0) { result = 'Realtek'; }\n  else if (model.indexOf('qualcom') >= 0) { result = 'Qualcom'; }\n  else if (model.indexOf('broadcom') >= 0) { result = 'Broadcom'; }\n  else if (model.indexOf('cavium') >= 0) { result = 'Cavium'; }\n  else if (model.indexOf('cisco') >= 0) { result = 'Cisco'; }\n  else if (model.indexOf('marvel') >= 0) { result = 'Marvel'; }\n  else if (model.indexOf('zyxel') >= 0) { result = 'Zyxel'; }\n  else if (model.indexOf('melanox') >= 0) { result = 'Melanox'; }\n  else if (model.indexOf('d-link') >= 0) { result = 'D-Link'; }\n  else if (model.indexOf('tp-link') >= 0) { result = 'TP-Link'; }\n  else if (model.indexOf('asus') >= 0) { result = 'Asus'; }\n  else if (model.indexOf('linksys') >= 0) { result = 'Linksys'; }\n  return result;\n}\n\nfunction wifiConnections(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const result = [];\n\n      if (_linux) {\n        const ifaces = ifaceListLinux();\n        const networkList = getWifiNetworkListNmi();\n        ifaces.forEach(ifaceDetail => {\n          let ifaceSanitized = '';\n          const s = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(ifaceDetail.iface, true);\n          for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n            if (s[i] !== undefined) {\n              ifaceSanitized = ifaceSanitized + s[i];\n            }\n          }\n\n          const nmiDetails = nmiDeviceLinux(ifaceSanitized);\n          const wpaDetails = wpaConnectionLinux(ifaceSanitized);\n          const ssid = nmiDetails.ssid || wpaDetails.ssid;\n          const network = networkList.filter(nw => nw.ssid === ssid);\n          let ssidSanitized = '';\n          const t = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(ssid, true);\n          for (let i = 0; i <= util.mathMin(t.length, 2000); i++) {\n            if (t[i] !== undefined) {\n              ssidSanitized = ssidSanitized + t[i];\n            }\n          }\n\n          const nmiConnection = nmiConnectionLinux(ssidSanitized);\n          const channel = network && network.length && network[0].channel ? network[0].channel : (wpaDetails.channel ? wpaDetails.channel : null);\n          const bssid = network && network.length && network[0].bssid ? network[0].bssid : (wpaDetails.bssid ? wpaDetails.bssid : null);\n          if (ssid && bssid) {\n            result.push({\n              id: ifaceDetail.id,\n              iface: ifaceDetail.iface,\n              model: nmiDetails.product,\n              ssid,\n              bssid: network && network.length && network[0].bssid ? network[0].bssid : (wpaDetails.bssid ? wpaDetails.bssid : null),\n              channel,\n              frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n              type: nmiConnection.type ? nmiConnection.type : '802.11',\n              security: nmiConnection.security ? nmiConnection.security : (wpaDetails.security ? wpaDetails.security : null),\n              signalLevel: network && network.length && network[0].signalLevel ? network[0].signalLevel : null,\n              txRate: null\n            });\n          }\n        });\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      } else if (_darwin) {\n        let cmd = 'system_profiler SPNetworkDataType';\n        exec(cmd, function (error, stdout) {\n          const parts1 = stdout.toString().split('\\n\\n    Wi-Fi:\\n\\n');\n          if (parts1.length > 1) {\n            const lines = parts1[1].split('\\n\\n')[0].split('\\n');\n            const iface = util.getValue(lines, 'BSD Device Name', ':', true);\n            const model = util.getValue(lines, 'hardware', ':', true);\n            cmd = '/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I';\n            exec(cmd, function (error, stdout) {\n              const lines2 = stdout.toString().split('\\n');\n              if (lines.length > 10) {\n                const ssid = util.getValue(lines2, 'ssid', ':', true);\n                const bssid = util.getValue(lines2, 'bssid', ':', true);\n                const security = util.getValue(lines2, 'link auth', ':', true);\n                const txRate = util.getValue(lines2, 'lastTxRate', ':', true);\n                const channel = util.getValue(lines2, 'channel', ':', true).split(',')[0];\n                const type = '802.11';\n                const rssi = util.toInt(util.getValue(lines2, 'agrCtlRSSI', ':', true));\n                const noise = util.toInt(util.getValue(lines2, 'agrCtlNoise', ':', true));\n                const signalLevel = rssi - noise;\n                if (ssid || bssid) {\n                  result.push({\n                    id: 'Wi-Fi',\n                    iface,\n                    model,\n                    ssid,\n                    bssid,\n                    channel: util.toInt(channel),\n                    frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n                    type,\n                    security,\n                    signalLevel,\n                    txRate\n                  });\n                }\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          } else {\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          }\n        });\n      } else if (_windows) {\n        let cmd = 'netsh wlan show interfaces';\n        util.powerShell(cmd).then(function (stdout) {\n          const allLines = stdout.toString().split('\\r\\n');\n          for (let i = 0; i < allLines.length; i++) {\n            allLines[i] = allLines[i].trim();\n          }\n          const parts = allLines.join('\\r\\n').split(':\\r\\n\\r\\n');\n          parts.shift();\n          parts.forEach(part => {\n            const lines = part.split('\\r\\n');\n            if (lines.length >= 5) {\n              const iface = lines[0].indexOf(':') >= 0 ? lines[0].split(':')[1].trim() : '';\n              const model = lines[1].indexOf(':') >= 0 ? lines[1].split(':')[1].trim() : '';\n              const id = lines[2].indexOf(':') >= 0 ? lines[2].split(':')[1].trim() : '';\n              const ssid = util.getValue(lines, 'SSID', ':', true);\n              const bssid = util.getValue(lines, 'BSSID', ':', true);\n              const signalLevel = util.getValue(lines, 'Signal', ':', true);\n              const type = util.getValue(lines, 'Radio type', ':', true) || util.getValue(lines, 'Type de radio', ':', true) || util.getValue(lines, 'Funktyp', ':', true) || null;\n              const security = util.getValue(lines, 'authentication', ':', true) || util.getValue(lines, 'Authentification', ':', true) || util.getValue(lines, 'Authentifizierung', ':', true) || null;\n              const channel = util.getValue(lines, 'Channel', ':', true) || util.getValue(lines, 'Canal', ':', true) || util.getValue(lines, 'Kanal', ':', true) || null;\n              const txRate = util.getValue(lines, 'Transmit rate (mbps)', ':', true) || util.getValue(lines, 'Transmission (mbit/s)', ':', true) || util.getValue(lines, 'Empfangsrate (MBit/s)', ':', true) || null;\n              if (model && id && ssid && bssid) {\n                result.push({\n                  id,\n                  iface,\n                  model,\n                  ssid,\n                  bssid,\n                  channel: util.toInt(channel),\n                  frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n                  type,\n                  security,\n                  signalLevel,\n                  txRate: util.toInt(txRate) || null\n                });\n              }\n            }\n          });\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiConnections = wifiConnections;\n\nfunction wifiInterfaces(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const result = [];\n\n      if (_linux) {\n        const ifaces = ifaceListLinux();\n        ifaces.forEach(ifaceDetail => {\n          const nmiDetails = nmiDeviceLinux(ifaceDetail.iface);\n          result.push({\n            id: ifaceDetail.id,\n            iface: ifaceDetail.iface,\n            model: nmiDetails.product ? nmiDetails.product : null,\n            vendor: nmiDetails.vendor ? nmiDetails.vendor : null,\n            mac: ifaceDetail.mac,\n          });\n        });\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      } else if (_darwin) {\n        let cmd = 'system_profiler SPNetworkDataType';\n        exec(cmd, function (error, stdout) {\n          const parts1 = stdout.toString().split('\\n\\n    Wi-Fi:\\n\\n');\n          if (parts1.length > 1) {\n            const lines = parts1[1].split('\\n\\n')[0].split('\\n');\n            const iface = util.getValue(lines, 'BSD Device Name', ':', true);\n            const mac = util.getValue(lines, 'MAC Address', ':', true);\n            const model = util.getValue(lines, 'hardware', ':', true);\n            result.push({\n              id: 'Wi-Fi',\n              iface,\n              model,\n              vendor: '',\n              mac\n            });\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else if (_windows) {\n        let cmd = 'netsh wlan show interfaces';\n        util.powerShell(cmd).then(function (stdout) {\n          const allLines = stdout.toString().split('\\r\\n');\n          for (let i = 0; i < allLines.length; i++) {\n            allLines[i] = allLines[i].trim();\n          }\n          const parts = allLines.join('\\r\\n').split(':\\r\\n\\r\\n');\n          parts.shift();\n          parts.forEach(part => {\n            const lines = part.split('\\r\\n');\n            if (lines.length >= 5) {\n              const iface = lines[0].indexOf(':') >= 0 ? lines[0].split(':')[1].trim() : '';\n              const model = lines[1].indexOf(':') >= 0 ? lines[1].split(':')[1].trim() : '';\n              const id = lines[2].indexOf(':') >= 0 ? lines[2].split(':')[1].trim() : '';\n              const macParts = lines[3].indexOf(':') >= 0 ? lines[3].split(':') : [];\n              macParts.shift();\n              const mac = macParts.join(':').trim();\n              const vendor = getVendor(model);\n              if (iface && model && id && mac) {\n                result.push({\n                  id,\n                  iface,\n                  model,\n                  vendor,\n                  mac,\n                });\n              }\n            }\n          });\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiInterfaces = wifiInterfaces;\n"], "filenames": ["docs/history.html", "docs/index.html", "docs/security.html", "lib/wifi.js"], "buggy_code_start_loc": [59, 169, 50, 552], "buggy_code_end_loc": [59, 174, 259, 553], "fixing_code_start_loc": [60, 169, 51, 552], "fixing_code_end_loc": [65, 174, 277, 561], "type": "CWE-77", "message": "systeminformation is a System Information Library for Node.JS. Versions 5.0.0 through 5.21.6 have a SSID Command Injection Vulnerability. The problem was fixed with a parameter check in version 5.21.7. As a workaround, check or sanitize parameter strings that are passed to `wifiConnections()`, `wifiNetworks()` (string only).", "other": {"cve": {"id": "CVE-2023-42810", "sourceIdentifier": "security-advisories@github.com", "published": "2023-09-21T18:15:12.327", "lastModified": "2023-09-23T03:38:14.547", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "systeminformation is a System Information Library for Node.JS. Versions 5.0.0 through 5.21.6 have a SSID Command Injection Vulnerability. The problem was fixed with a parameter check in version 5.21.7. As a workaround, check or sanitize parameter strings that are passed to `wifiConnections()`, `wifiNetworks()` (string only)."}, {"lang": "es", "value": "systeminformation es System Information Library para Node.JS. Las versiones 5.0.0 a 5.21.6 tienen una vulnerabilidad de inyecci\u00f3n de comando SSID. El problema se solucion\u00f3 con una verificaci\u00f3n de par\u00e1metros en la versi\u00f3n 5.21.7. Como workaround, verifique o sanitize las cadenas de par\u00e1metros que se pasan a `wifiConnections()`, `wifiNetworks()` (solo cadena)."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-77"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:systeminformation:systeminformation:*:*:*:*:*:node.js:*:*", "versionStartIncluding": "5.0.0", "versionEndExcluding": "5.21.7", "matchCriteriaId": "4902866A-BD36-42E7-B197-C9131EF83FB7"}]}]}], "references": [{"url": "https://github.com/sebhildebrandt/systeminformation/commit/7972565812ccb2a610a22911c54c3446f4171392", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/sebhildebrandt/systeminformation/security/advisories/GHSA-gx6r-qc2v-3p3v", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}, {"url": "https://systeminformation.io/security.html", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}]}, "github_commit_url": "https://github.com/sebhildebrandt/systeminformation/commit/7972565812ccb2a610a22911c54c3446f4171392"}}