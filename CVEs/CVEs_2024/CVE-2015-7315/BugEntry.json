{"buggy_code": ["Products.CMFCore Changelog\n==========================\n\n2.3.1 (unreleased)\n------------------\n\n- Nothing changed yet.\n\n\n2.3.0 (2015-02-20)\n------------------\n\n- Fall back to DAV aware marshaller when importing or exporting folderish\n  content, so types now retain their metadata when being round-tripped.\n  [MatthewWilkes]\n\n- IndexableObjectWrapper: Made sure portal_type doesn't return None.\n  Products.ZCatalog 3 indexes can no longer handle None values.\n\n- interfaces: Fixed dotted names by setting __module__ explicitly.\n\n- Skinnable: The skins tool is now looked up as utility.\n  'getSkinsFolderName' is no longer supported, that method was removed.\n\n- permissions: Fixed some issues in permissions.zcml. \n\n- support unset portal_skins request variables in HTTP headers\n  (see https://dev.plone.org/ticket/10071) [fRiSi]\n\n2.3.0-beta2 (2012-03-31)\n------------------------\n\n- added fixes for migrating CMF 2.2 sites.\n\n\n2.3.0-beta (2012-03-21)\n------------------------\n\n- DynamicType: Modified 'icon' method.\n  The specified icon might be registered for a ZTK layer that is not available\n  in the ZMI. If the icon can't be found, an empty string is returned.\n\n- exportimport.tests.test_mailhost:  Accomodate 'smtp_queue' and\n  'smtp_queue_directory' exports (newly added in GenericSetup).\n\n- tools: Converted all tools into local utilities.\n\n- MemberDataTool: Changed property modes to 'w' and added 'fullname' property.\n\n- setup handlers: Improved content type registry handler.\n  The 'insert-before' and 'insert-after' directives are now supported.\n\n- Optimize `SkinnableObjectManager.__getattr__` to short circuit view (`@`) and\n  traverser (`+`) lookup in addition to `_` and `aq_`.\n\n- Avoid a shallow dependency on `Products.ZReST`.\n\n- Fixed types tool test to only test creation for type infos.\n\n- utils: Fixed '_OldCacheHeaders' and '_FSCacheHeaders' methods.\n  DateTimeErrors caused by invalid HTTP headers were not caught.\n\n- setup handlers: Added export/import support for member data tool settings.\n\n- MemberDataTool: Fixed tool initialization.\n  The default boolean and date property values were not set correctly.\n\n- MemberDataTool: Modified 'setProperties' method.\n  It now can be used by user managers as well.\n\n- MembershipTool: Added 'isMemberAccessAllowed' method.\n  If you don't have the 'Manage users' permission for the membership tool, you\n  shouldn't have write access to other members.\n\n- MemberDataTool: Removed obsolete MemberData factory lookup.\n  This feature was added in CMF 2.2, but now the MemberAdapter should be\n  overridden instead.\n\n- MemberDataTool: Split up MemberData class.\n  The old MemberData API is now provided by the new MemberAdapter. The\n  persistent MemberData objects are just used for storing member data.\n\n- interfaces: Added 'IMember' interface.\n\n- permissions: Marked 'setDefaultRoles' as deprecated.\n\n- DirectoryView: Added 'bobobase_modification_time' method to FSObject.\n  The \"Contents\" tab in the ZMI now shows useful 'Last Modified' values.\n\n- DirectoryView: Changed debug mode behavior.\n  No additional subdirs are registered in debug mode. If you add new subdirs,\n  you have to restart your instance.\n  (https://bugs.launchpad.net/zope-cmf/+bug/271027)\n\n- DirectoryView: Improved debug mode speed on NTFS partitions.\n  The much faster non-Windows implementation is now used on Windows as well if\n  non-FAT32 time stamps are detected. In rare cases that heuristic approach\n  might fail to detected NTFS partitions.\n\n- DirectoryView: Modernized debug mode lookup.\n  Now getConfiguration().debug_mode is used instead of Globals.DevelopmentMode.\n\n- Fix content exportimport when Title or Description are unicode (merge from\n  2.2 branch).\n  \n- tests base: Tightened security for anonymous test user.\n\n- Load permissions.zcml from Products.Five in the test to fix tests\n  with Zope 2.12.\n\n- notifyWorkflowCreated only to IWorkflowAware, possibly following adaption on\n  IObjectAddedEvent.\n\n- Adapterize workflow storage lookups.\n\n- utils: Added FakeExecutableObject.\n  It can be used to set proxy roles in trusted code.\n\n- tests base: Removed obsolete test utils.\n\n- testing: Removed broken run function.\n  Unit test modules are no longer directly executable.\n\n- CookieCrumbler: Removed redirect support.\n  The Unauthorized handling and redirects are now part of CMFDefault.\n\n- Added a permissions.zcml file defining our own permissions. This was\n  formerly done in Zope 2's Products.Five.\n\n- Removed zope.app.testing dependency.\n\n- Import BeforeTraverseEvent from new location if available.\n\n- Skinnable and MembershipTool: Removed support for missing REQUEST argument.\n  'changeSkin', 'setupCurrentSkin' and 'credentialsChanged' will no longer\n  try to acquire the request if it is not passed in explicitly.\n\n- Tools and PortalFolder: Removed support for deprecated marker attributes.\n  '_isDirectoryView', '_isPortalRoot', '_isTypeInformation' and '_isAWorkflow'\n  are no longer supported.\n\n- utils: Removed deprecated functions.\n  'getToolByInterfaceName', 'initializeBasesPhase1', 'initializeBasesPhase2',\n  'expandpath' and 'minimalpath' are no longer available.\n\n- DirectoryView: Removed support for deprecated old API.\n\n- Require at least Zope 2.13.12.\n\n\n2.2.5 (2011-11-01)\n------------------\n\n- Added two missing explicit InitializeClass calls.\n\n\n2.2.4 (2011-04-02)\n------------------\n\n- Fix content exportimport when Title or Description are unicode.\n\n\n2.2.3 (2010-10-31)\n------------------\n\n- Make the error raised when trying to rename an instance of ImmutableId\n  indicate the id of the object.\n\n- DateTime 2.12.5 does away with a special case representing\n  DateTime values for midnight (00:00:00) without their time and\n  time zone values. So DateTimes formerly rendered as\n  ``2010/01/01`` in the UTC timezone now render as\n  ``2010/01/01 00:00:00 UTC``. Several unit tests that relied on \n  the old-style representation had to be fixed.\n\n- Get most tests working under Zope 2.13.0a2.\n\n- Added dependency on the new ``Products.ZSQLMethods`` distribution and updated\n  Zope2 requirement accordingly.\n\n\n2.2.2 (2010-07-04)\n------------------\n\n- Backport test setup fixes for Zope 2.13 compatibility.\n\n- Use the standard libraries doctest module.\n\n- Updated setDefaultRoles to use the addPermission API if available.\n\n- Updated test to work with zope.contenttype >= 3.4.3.\n\n\n2.2.1 (2010-04-07)\n------------------\n\n- Actions and TypeInformation: Clear the compiled NNN_expr_object\n  property when the NNN_expr property is cleared.\n\n- Actions: Return None if 'link_target' is an empty string.\n  This helps to avoid invalid empty 'target' attributes in HTML output.\n\n\n2.2.0 (2010-01-04)\n------------------\n\n- Changed GenericSetup import handlers to fail silently if they\n  are called in a context that does not contain the items they \n  import.\n\n\n2.2.0-beta (2009-12-06)\n-----------------------\n\n- TypesTool: Made it an ordered container.\n  This allows to control the order of the add actions.\n\n- TypeInformation: Removed redundant 'content_icon' property.\n  For backwards compatibility old settings containing 'content_icon' instead\n  of 'icon_expr' are converted on import. CMFDefault provides the necessary\n  upgrade steps for migrating existing sites.\n\n- DynamicType: Added 'getIconURL' method.\n  This replaces the now deprecated 'getIcon' method.\n\n- TypeInformation: Added 'getIconExprObject' method.\n  This replaces the now deprecated 'getIcon' method.\n\n\n2.2.0-alpha (2009-11-13)\n------------------------\n\n- Got rid of redundant icon related type info properties.\n  (https://bugs.launchpad.net/zope-cmf/+bug/397795)\n\n- PortalFolder: Ensure that pasting an object into a folder takes \n  workflow instance creation conditions into account.\n  (https://bugs.launchpad.net/zope-cmf/+bug/308947)\n\n- Made calls to reindexObjectSecurity in the membership tool conditional\n  after the CMFCatalogAware refactoring.\n\n- PortalFolder: Removed unused ICatalogAware and IWorkflowAware methods.\n\n- CMFCatalogAware: Split up CMFCatalogAware mixin.\n  CatalogAware, WorkflowAware and OpaqueItemManager are now separate mixins.\n\n- Changed testing.py to directly load zope.traversing's ZCML instead of going\n  via the Five traversing.zcml BBB shim.\n\n- moved the Zope dependency to version 2.12.0b3dev\n\n- PortalFolder: Modified allowedContentTypes method to check \n  isConstructionAllowed only for allowed types, not for all content types.\n\n- Fixed typo in the acquisition wrapping of the found utility in\n  getToolByName.\n\n- Actions: Add a link_target attribute to store a value for the \n  final rendered link tag's \"target\" attribute\n  (https://bugs.launchpad.net/zope-cmf/+bug/376951)\n\n- MemberData tool: Make it easier to override the default \n  MemberData implementation by trying to look up a named \n  factory utility named \"MemberData\" before falling back on the\n  default MemberData class.\n  (https://bugs.launchpad.net/zope-cmf/+bug/377208)\n\n- FSPageTemplate: Change the charset/encoding detection to consider \n  charset specifications in the content type, and replace the\n  hardcoded Latin-15 fallback with the mechanism used by the \n  Products.PageTemplate code, which can be influenced by setting\n  the environment variable \"ZPT_PREFERRED_ENCODING\"\n  (https://bugs.launchpad.net/zope-cmf/+bug/322263)\n\n- Expose the ZMI manage view of the \"_components\" object manager as\n  a new \"Components Folder\" tab in the ZMI.\n\n- ActionsTool: The \"Action Providers\" tab in the ZMI did not render\n  actions from the WorkflowTool correctly since those are not \n  'new-style' actions.\n  (https://bugs.launchpad.net/zope-cmf/+bug/322300)\n\n- FSPageTemplate: Prevent reading the underlying file without doing \n  anything with the data in some cases.\n\n- FSObject: Ensure that ZCache invalidations only happens if the \n  filesystem modification time differs from the internally stored\n  previous modification time.\n  (https://bugs.launchpad.net/zope-cmf/+bug/325246)\n\n- TypeInformation: DCWorkflow instances define a method and a guard \n  for vetoing object creation, but it was never used. Now  \n  TypeInformation objects will consult these guard conditions during \n  object creation.\n  (https://bugs.launchpad.net/zope-cmf/+bug/308947)\n\n- PortalCatalog: Changed to use a multi-adaptor to allow a pluggable\n  IndexableObjectWrapper class.  Objects that implement IIndexableObject\n  are not wrapped.  The change will assist in integrating with\n  other indexing strategies from third-party packages.\n\n- Events: Changed 'handleContentishEvent' behavior for IObjectCopiedEvent.\n  'WorkflowTool.notifyCreated' no longer resets the workflow state, so the\n  the event subscriber clears the workflow history instead.\n\n- WorkflowTool: 'notifyCreated' no longer overrides assigned workflow states.\n\n- No longer catch a `NotImplemented` string exception in the MembershipTool\n  in deleteMembers.\n\n- Cleaned up / normalized imports:\n\n  o Don't import from Globals;  instead, use real locations.\n\n  o Make other imports use the actual source module, rather than an\n    intermediate (e.g., prefer importing 'ClassSecurityInfo' from\n    'AccessControl.SecurityInfo' rather than from 'AccessControl').\n\n  o Avoid relative imports, which will break in later versions of Python.\n\n- Added `icon_expr` as a new property to type information. This allows you\n  to specify the `content_icon` as an expression and store it. This avoids\n  creating the expression on the fly at rendering time.\n\n- Removed superGetAttr fallback from SkinnableObjectManager. None of its base\n  classes have a `__getattr__` method anymore.\n\n- PortalObject: Removed backwards compatibility code in getSiteManager.\n  Please use CMFDefault's upgrade steps for upgrading old CMF sites.\n\n- Fixed compatibility with non-string exceptions on Zope trunk.\n\n- Added remove support to GenericSetup types tool exportimport handler.\n\n- FiveActionsTool: Removed the tool and all functionality for bridging\n  between Zope 3-style menu items and CMF actions. The CMF has been going\n  a different route for a long time and the code is unused and \n  unmaintained.\n\n- Actions: Added deprecation warnings to the ZMI actions tab and \n  most listActions methods where old-style actions are found \n  asking developers to move to new-style actions instead. These \n  warnings allow us to remove old-style actions code by version 2.4.\n\n- Discussion tool: Removed the listActions method that would return \n  a hardcoded Reply action. This action has been handled by the\n  Actions tool itself for a while now, and the Discussions tool was \n  not set as an action provider anymore.\n\n- actions tool export/import: The actions tool export/import mechanism \n  is no longer attempting to handle actions stored on tools other than\n  itself. Other tools are themselves responsible for their actions.\n  The importer has been fixed to add all action providers to the actions \n  tool, not just a select list of providers we know about.\n  (https://bugs.launchpad.net/zope-cmf/+bug/177675)\n\n- tool interfaces: Replace non-existing IMember interface with the\n  correct IMemberData.\n\n- CatalogTool: If proxy roles are set on a script that uses the catalog\n  and those proxy roles have been unset using the ZMI, which results\n  in an empty tuple as proxy roles, then the catalog would not correctly\n  determine what the current user is allowed to see.\n  (https://bugs.launchpad.net/zope-cmf/+bug/161729)\n\n- Properties export/import: Get the string encoding for property \n  imports from the import context and fall back to UTF-8, which \n  mirrors the behavior for exports. This fixes property export/import \n  round tripping.\n  (https://bugs.launchpad.net/zope-cmf/+bug/248853)\n\n- traversal: Added ++add++ namespace for add views.\n\n- Skinstool import: Fix imports that manipulate existing skins.\n  (https://bugs.launchpad.net/zope-cmf/+bug/161732)\n\n- ActionInformation: extend the ActionInformation and ActionInfo classes \n  to support a icon URL just like the newer Action class already does\n\n- WorkflowTool: Passing the \"magic\" chain name \"(Default)\" to the\n  setChainForPortalTypes method did not set the chain to the default \n  chain value as expected.\n  (https://bugs.launchpad.net/zope-cmf/+bug/161702)\n\n- ZMI: Prevent users from creating content through the ZMI by hiding the\n  entry for \"CMFCore Content\".\n\n- utils: Add a new optional argument to ContentInit that allows hiding\n  a content item's ZMI add list entry. The default is to leave the item\n  visible, which reflects the previous behavior.\n\n- FSMetadata: Remove handling of .security and .properties metadata\n  files which was supposed to have been removed in CMF 2.0 already.\n\n- SkinsTool: Added the ability to do a diff comparison between items\n  found using the portal_skins \"Find\" ZMI tab.\n  (https://bugs.launchpad.net/zope-cmf/+bug/238489)\n\n- TypeInformation and TypesTool: Added support for add view actions.\n  Type infos now have a new 'add_view_expr' property and implement IAction.\n  'listActions' of the types tool includes type infos as 'add' actions.\n\n- interfaces: Fixed some docstrings.\n  There is no IActionInformation. ActionInformation is an old action class\n  that implements IAction, non-persistent IActionInfo objects adapt action\n  objects to a given context.\n\n- FSSTXMethod: Fixed Zope 2.12 compatibility.\n  zope.structuredtext is now used instead of StructuredText.\n\n- removed the five.localsitemanager svn:external and its import hack\n  in favor of stating the dependency for separate installation in\n  DEPENDENCIES.txt and automatic installation in setup.py.\n\n- TypesTool: Refactored content creation.\n  Moved addCreator call to IObjectCreatedEvent handler and moved\n  notifyWorkflowCreated and indexObject calls to IObjectAddedEvent handler.\n  Please make sure all oldstyle content factory methods use _setObject with\n  suppress_events=True. CMF factory methods don't finish object creation,\n  so they should not send the IObjectAddedEvent.\n\n- interfaces: Added new interfaces for CMFCatalogAware methods.\n  In the long run ICatalogAware, IWorkflowAware and IOpaqueItemManager will\n  become deprecated. Don't expect that CMF content always implements them.\n\n- setup handlers: All import and export steps are now registered globally.\n\n- MembershipTool: Removed ancient LoginManager compatibility code and\n  deprecated the no longer needed __getPUS method.\n\n- interfaces: Removed deprecated oldstyle interfaces.\n\n\n2.1.2 (2008-09-13)\n------------------\n\n- fiveactionstool: fix typo in a method name that isn't even used in the CMF \n  or Plone.\n  (https://bugs.launchpad.net/zope-cmf/+bug/257259)\n\n2.1.2-beta (2008-08-26)\n-----------------------\n\n- completed devolution from monolithic CMF package into its component\n  products that are distributed as eggs from PyPI.\n\n\n2.1.1 (2008-01-06)\n------------------\n\n- exportimport.content: Add simple guard against import failures when\n  the \".objects\" file contains empty lines.\n  (https://bugs.launchpad.net/zope-cmf/+bug/176328)\n\n\n2.1.1-beta (2007-12-29)\n-----------------------\n\n- Testing: Derive test layers from ZopeLite layer if available.\n\n- Updated to the 0.3 release of five.localsitemanager.\n\n- Events: Fixed some handleContentishEvent issues.\n  Moved _clearLocalRolesAfterClone code to separate handler that is\n  triggered before indexing and also for folders. Made sure notifyModified\n  is not called if objects are just moved.\n\n- PortalObject: Added setSite to getSiteManager for old instances. This\n  fixes migrations from Plone 2.1 to 3.0.\n\n- FSImage: Supply class-level defaults for 'alt', 'height', and 'width',\n  to avoid acquiring objects with the same names.\n  (http://www.zope.org/Collectors/CMF/507)\n\n- Testing: Derive test layers from ZopeLite layer if available.\n\n- PortalObject: Fixed a bug in the site manager creation code, which would\n  assign the __parent__ pointer to the Aq-wrapper and not the actual\n  object.\n\n\n2.1.0 (2007-08-08)\n------------------\n\n- Fixed all componentregistry.xml files to use plain object paths and strip\n  and slashes. GenericSetup does only support registering objects which are\n  in the site root.\n\n- PortalFolder: Enabled 'Components' ZMI tab.\n  This GenericSetup tab allows to inspect and edit component registrations.\n\n- First egg release.  For changes up through this release, please see\n  the overall \"CMF changelog\",\n  http://svn.zope.org/CMF/tags/2.1.0/CHANGES.txt?rev=78713&view=markup\n\n\n2.1.0-beta2 (2007-07-12)\n------------------------\n\n- moved the Zope dependency to version 2.10.4\n\n- Remove antique usage of marker attributes in favor of interfaces,\n  leaving BBB behind for places potentially affecting third-party code.\n  (http://www.zope.org/Collectors/CMF/440)\n\n- Add POST-only protections to security critical methods.\n  http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0240)\n\n- exportimport.skins: Added the ability to remove whole skin selections using a \n  GS profile.\n  (http://www.zope.org/Collectors/CMF/479)\n\n- UndoTool: Fixed 'listUndoableTransactionsFor'.\n  The required 'object' argument is now respected. This doesn't change the\n  behavior as long as 'object' is the site root object.\n\n- TypesTool: Corrected method signature of all_meta_types to have\n  an interface keyword argument, as per the underlying OFS.ObjectManager\n  interface declaration.\n\n- SkinnableObjectManager: Changed the way skins are set up.\n  Acquisition wrapping no longer triggers 'setupCurrentSkin'. This is now\n  done on publishing traversal after the BeforeTraverseEvent triggers\n  'setSite'. This fix replaces a temporary hack introduced in 2.1.0-beta,\n  making sure ISkinsTool is looked up after setting the site.\n\n- CMFBTreeFolder: CMFBTreeFolders could not be used as the\n  toplevel /Members container.\n  (http://www.zope.org/Collectors/CMF/441)\n\n- TypesTool: Pass 'object' through to TypeInformation objects'\n  'listActions'.\n  (http://www.zope.org/Collectors/CMF/482)\n\n- Removed extraneous \"Cache\" tab from FS-based skin objects.\n  (http://www.zope.org/Collectors/CMF/343)\n\n- WorkflowTool: Using the '(Default)' keyword for a type's\n  workflow chain will now reset any custom workflow chains for the type.\n  (http://www.zope.org/Collectors/CMF/475)\n\n- SkinsTool: Use the property API to get the member specific skin,\n  because direct attribute access won't work with PAS based membership.\n  (http://dev.plone.org/plone/ticket/5904)\n\n- Allow customization from DirectoryViews to be redirected into\n  alternate folders, and use manually-built clones.\n  (http://www.zope.org/Collectors/CMF/382)\n\n\n2.1.0-beta (2007-03-09)\n-----------------------\n\n- moved the Zope dependency to verson 2.10.2\n\n- Tool lookup and registration is now done \"the Zope 3 way\" as utilities, see\n  http://svn.zope.org/CMF/branches/2.1/docs/ToolsAreUtilities.stx?view=auto\n\n- DirectoryView: Added 'registerDirectory' ZCML directive.\n  Using the old registerDirectory method in __init__.py is now deprecated.\n  See zcml.IRegisterDirectoryDirective for details.\n\n- DirectoryView: Added support for non-product packages.\n  This introduces new registry keys. Old registry keys stored in\n  persistent DirectoryView objects are updated on the fly.\n  (http://www.zope.org/Collectors/CMF/467)\n\n- setup handlers: Improved properties handler.\n  It now works with properties using a default_charset other than UTF-8.\n\n- MembershipTool: Fixed inconsistent behavior where member lookup\n  would take all user folders up to the Zope root into account whereas\n  member area creation would not.\n\n- MembershipTool: when using an object without a __nonzero__ but with a \n  __len__ (ala CMFBTreeFolder) as a member folder, the createMemberArea \n  method would believe there was no members folder if the folder was\n  empty, and so would fail (change \"not membersfolder\" to\n  \"membersfolder is not None\") .\n\n- DynamicType: Fixed behaviour regarding default view.\n  DynamicType was making it impossible to use a Zope3-style\n  default view for CMF content types.\n  (http://www.zope.org/Collectors/CMF/459)\n\n- utils: Marked 'minimalpath' and 'expandpath' as deprecated.\n\n- Merged patches from Martin Aspeli to enable generating events before\n  and after DCWorkflow transitions, and in the 'notify' methods of the\n  workflow tool (http://www.zope.org/Collectors/CMF/461).\n\n\n2.1.0-alpha2 (2006-11-23)\n-------------------------\n\n- moved the Zope dependency to version 2.10.1\n\n- Fixed test breakage induced by use of Z3 pagetemplates in Zope 2.10+.\n\n- browser views: Added some zope.formlib based forms.\n\n- testing: Added test layers for setting up ZCML.\n\n- WorkflowTool: Added the IConfigurableWorkflowTool interface.\n  This change includes the new 'getDefaultChain' and 'listChainOverrides'\n  methods and an improved 'setChainForPortalTypes' method. The import\n  handler now supports the 'remove' attribute for removing overrides.\n  (http://www.zope.org/Collectors/CMF/457)\n\n- CachingPolicyManager: Implemented the old OFS.Cache.CacheManager\n  API. Now objects other than CMF content or CMF templates can have their\n  caching headers set by the caching policy manager with the same\n  fine-grained control.\n  (http://www.zope.org/Collectors/CMF/408)\n\n- Added CMFCore.FSRestMethod:  ReST equivalent of FSSTXMethod.\n\n- FSSTXMethod:  Modernized, added tests, made customization\n  possible (now renders via ZPT by default, using 'main_template').\n\n- CachingPolicyManager: Prevent firing of caching policies\n  for templates (DTML or ZPT) that are rendered in-line (without a\n  separate request) while rendering the requested content item's view.\n  (http://www.zope.org/Collectors/CMF/456)\n\n\n2.1.0-alpha (2006-10-09)\n------------------------\n\n- skins: Changed encoding of translated portal_status_messages.\n  Now getBrowserCharset is used to play nice with Five forms. Customized\n  setRedirect and getMainGlobals scripts have to be updated.\n\n- Profiles: All profiles are now registered by ZCML.\n\n- ZClasses: Removed unmaintained support for ZClasses.\n  Marked the 'initializeBases*' methods as deprecated.\n\n- Content: Added IFactory utilities for all content classes.\n  They are now used by default instead of the old constructor methods.\n\n- Content: All content classes are now registered by ZCML.\n  ContentInit is still used to register oldstyle constructors.\n\n- setup handlers: Removed support for CMF 1.5 CMFSetup profiles.\n\n- FactoryTypeInformation: Added support for Zope3 style factories.\n  If the 'product' property of a type info instance is empty the 'factory'\n  property is interpreted as an IFactory name.\n\n- ActionInformation: don't use a fixed set of properties for\n  ActionInformation. (http://www.zope.org/Collectors/CMF/232/)\n\n- CatalogTool: Use current executable's proxy roles, if any,\n  in place of user's roles when computing 'allowedRolesAndUsers' for\n  a query. (http://www.zope.org/Collectors/CMF/380)\n\n- FSFile: Added registration for 'txt' extension.\n\n- CMFCatalogAware: Added 'handleObjectEvent' subscriber.\n  This replaces the deprecated 'manage_afterAdd', 'manage_afterClone' and\n  'manage_beforeDelete' hooks.\n\n\nEarlier releases\n----------------\n\nFor a complete list of changes before version 2.1.0-alpha, see the HISTORY.txt\nfile on the CMF-2.1 branch:\nhttp://svn.zope.org/CMF/branches/2.1/HISTORY.txt?view=auto\n\n", "##############################################################################\n#\n# Copyright (c) 2001 Zope Foundation and Contributors.\n#\n# This software is subject to the provisions of the Zope Public License,\n# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.\n# THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY AND ALL EXPRESS OR IMPLIED\n# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS\n# FOR A PARTICULAR PURPOSE.\n#\n##############################################################################\n\"\"\" Basic user registration tool.\n\"\"\"\n\nfrom random import choice\nimport re\n\nfrom AccessControl.requestmethod import postonly\nfrom AccessControl.SecurityInfo import ClassSecurityInfo\nfrom App.class_init import InitializeClass\nfrom App.special_dtml import DTMLFile\nfrom OFS.SimpleItem import SimpleItem\nfrom zope.component import getUtility\nfrom zope.interface import implements\n\nfrom Products.CMFCore.interfaces import IMembershipTool\nfrom Products.CMFCore.interfaces import IRegistrationTool\nfrom Products.CMFCore.permissions import AddPortalMember\nfrom Products.CMFCore.permissions import MailForgottenPassword\nfrom Products.CMFCore.permissions import ManagePortal\nfrom Products.CMFCore.utils import _checkPermission\nfrom Products.CMFCore.utils import _dtmldir\nfrom Products.CMFCore.utils import _limitGrantedRoles\nfrom Products.CMFCore.utils import Message as _\nfrom Products.CMFCore.utils import registerToolInterface\nfrom Products.CMFCore.utils import UniqueObject\n\n\nclass RegistrationTool(UniqueObject, SimpleItem):\n\n    \"\"\" Create and modify users by making calls to portal_membership.\n    \"\"\"\n\n    implements(IRegistrationTool)\n\n    id = 'portal_registration'\n    meta_type = 'CMF Registration Tool'\n    member_id_pattern = ''\n    default_member_id_pattern = \"^[A-Za-z][A-Za-z0-9_]*$\"\n    _ALLOWED_MEMBER_ID_PATTERN = re.compile(default_member_id_pattern)\n\n    security = ClassSecurityInfo()\n\n    manage_options = ( ({'label': 'Overview',\n                         'action': 'manage_overview'},\n                        {'label': 'Configure',\n                         'action': 'manage_configuration'})\n                     + SimpleItem.manage_options\n                     )\n\n    #\n    #   ZMI methods\n    #\n    security.declareProtected(ManagePortal, 'manage_overview')\n    manage_overview = DTMLFile( 'explainRegistrationTool', _dtmldir )\n\n    security.declareProtected(ManagePortal, 'manage_configuration')\n    manage_configuration = DTMLFile('configureRegistrationTool', _dtmldir)\n\n    security.declareProtected(ManagePortal, 'manage_editIDPattern')\n    def manage_editIDPattern(self, pattern, REQUEST=None):\n        \"\"\"Edit the allowable member ID pattern TTW\"\"\"\n        pattern.strip()\n\n        if len(pattern) > 0:\n            self.member_id_pattern = pattern\n            self._ALLOWED_MEMBER_ID_PATTERN = re.compile(pattern)\n        else:\n            self.member_id_pattern = ''\n            self._ALLOWED_MEMBER_ID_PATTERN = re.compile(\n                                                self.default_member_id_pattern)\n\n        if REQUEST is not None:\n            msg = 'Member ID Pattern changed'\n            return self.manage_configuration(manage_tabs_message=msg)\n\n    security.declareProtected(ManagePortal, 'getIDPattern')\n    def getIDPattern(self):\n        \"\"\" Return the currently-used member ID pattern \"\"\"\n        return self.member_id_pattern\n\n    security.declareProtected(ManagePortal, 'getDefaultIDPattern')\n    def getDefaultIDPattern(self):\n        \"\"\" Return the currently-used member ID pattern \"\"\"\n        return self.default_member_id_pattern\n\n\n    #\n    #   'portal_registration' interface methods\n    #\n    security.declarePublic('isRegistrationAllowed')\n    def isRegistrationAllowed(self, REQUEST):\n        '''Returns a boolean value indicating whether the user\n        is allowed to add a member to the portal.\n        '''\n        return _checkPermission(AddPortalMember, self.aq_inner.aq_parent)\n\n    security.declarePublic('testPasswordValidity')\n    def testPasswordValidity(self, password, confirm=None):\n        '''If the password is valid, returns None.  If not, returns\n        a string explaining why.\n        '''\n        return None\n\n    security.declarePublic('testPropertiesValidity')\n    def testPropertiesValidity(self, new_properties, member=None):\n        '''If the properties are valid, returns None.  If not, returns\n        a string explaining why.\n        '''\n        return None\n\n    security.declarePublic('generatePassword')\n    def generatePassword(self):\n        \"\"\" Generate a valid password.\n        \"\"\"\n        # we don't use these to avoid typos: OQ0Il1\n        chars = 'ABCDEFGHJKLMNPRSTUVWXYZabcdefghijkmnopqrstuvwxyz23456789'\n        return ''.join( [ choice(chars) for i in range(6) ] )\n\n    security.declareProtected(AddPortalMember, 'addMember')\n    @postonly\n    def addMember(self, id, password, roles=('Member',), domains='',\n                  properties=None, REQUEST=None):\n        '''Creates a PortalMember and returns it. The properties argument\n        can be a mapping with additional member properties. Raises an\n        exception if the given id already exists, the password does not\n        comply with the policy in effect, or the authenticated user is not\n        allowed to grant one of the roles listed (where Member is a special\n        role that can always be granted); these conditions should be\n        detected before the fact so that a cleaner message can be printed.\n        '''\n        if not self.isMemberIdAllowed(id):\n            raise ValueError(_(u'The login name you selected is already in '\n                               u'use or is not valid. Please choose another.'))\n\n        failMessage = self.testPasswordValidity(password)\n        if failMessage is not None:\n            raise ValueError(failMessage)\n\n        if properties is not None:\n            failMessage = self.testPropertiesValidity(properties)\n            if failMessage is not None:\n                raise ValueError(failMessage)\n\n        # Limit the granted roles.\n        # Anyone is always allowed to grant the 'Member' role.\n        _limitGrantedRoles(roles, self, ('Member',))\n\n        mtool = getUtility(IMembershipTool)\n        mtool.addMember(id, password, roles, domains, properties)\n\n        member = mtool.getMemberById(id)\n        self.afterAdd(member, id, password, properties)\n        return member\n\n    security.declareProtected(AddPortalMember, 'isMemberIdAllowed')\n    def isMemberIdAllowed(self, id):\n        '''Returns 1 if the ID is not in use and is not reserved.\n        '''\n        if len(id) < 1 or id == 'Anonymous User':\n            return 0\n        if not self._ALLOWED_MEMBER_ID_PATTERN.match( id ):\n            return 0\n        mtool = getUtility(IMembershipTool)\n        if mtool.getMemberById(id) is not None:\n            return 0\n        return 1\n\n    security.declarePublic('afterAdd')\n    def afterAdd(self, member, id, password, properties):\n        '''Called by portal_registration.addMember()\n        after a member has been added successfully.'''\n        pass\n\n    security.declareProtected(MailForgottenPassword, 'mailPassword')\n    def mailPassword(self, forgotten_userid, REQUEST):\n        '''Email a forgotten password to a member.  Raises an exception\n        if user ID is not found.\n        '''\n        raise NotImplementedError\n\nInitializeClass(RegistrationTool)\nregisterToolInterface('portal_registration', IRegistrationTool)\n"], "fixing_code": ["Products.CMFCore Changelog\n==========================\n\n2.3.1 (unreleased)\n------------------\n\n- Make sure RegistrationTool.addMember is not published\n  [vangheem]\n\n\n2.3.0 (2015-02-20)\n------------------\n\n- Fall back to DAV aware marshaller when importing or exporting folderish\n  content, so types now retain their metadata when being round-tripped.\n  [MatthewWilkes]\n\n- IndexableObjectWrapper: Made sure portal_type doesn't return None.\n  Products.ZCatalog 3 indexes can no longer handle None values.\n\n- interfaces: Fixed dotted names by setting __module__ explicitly.\n\n- Skinnable: The skins tool is now looked up as utility.\n  'getSkinsFolderName' is no longer supported, that method was removed.\n\n- permissions: Fixed some issues in permissions.zcml. \n\n- support unset portal_skins request variables in HTTP headers\n  (see https://dev.plone.org/ticket/10071) [fRiSi]\n\n2.3.0-beta2 (2012-03-31)\n------------------------\n\n- added fixes for migrating CMF 2.2 sites.\n\n\n2.3.0-beta (2012-03-21)\n------------------------\n\n- DynamicType: Modified 'icon' method.\n  The specified icon might be registered for a ZTK layer that is not available\n  in the ZMI. If the icon can't be found, an empty string is returned.\n\n- exportimport.tests.test_mailhost:  Accomodate 'smtp_queue' and\n  'smtp_queue_directory' exports (newly added in GenericSetup).\n\n- tools: Converted all tools into local utilities.\n\n- MemberDataTool: Changed property modes to 'w' and added 'fullname' property.\n\n- setup handlers: Improved content type registry handler.\n  The 'insert-before' and 'insert-after' directives are now supported.\n\n- Optimize `SkinnableObjectManager.__getattr__` to short circuit view (`@`) and\n  traverser (`+`) lookup in addition to `_` and `aq_`.\n\n- Avoid a shallow dependency on `Products.ZReST`.\n\n- Fixed types tool test to only test creation for type infos.\n\n- utils: Fixed '_OldCacheHeaders' and '_FSCacheHeaders' methods.\n  DateTimeErrors caused by invalid HTTP headers were not caught.\n\n- setup handlers: Added export/import support for member data tool settings.\n\n- MemberDataTool: Fixed tool initialization.\n  The default boolean and date property values were not set correctly.\n\n- MemberDataTool: Modified 'setProperties' method.\n  It now can be used by user managers as well.\n\n- MembershipTool: Added 'isMemberAccessAllowed' method.\n  If you don't have the 'Manage users' permission for the membership tool, you\n  shouldn't have write access to other members.\n\n- MemberDataTool: Removed obsolete MemberData factory lookup.\n  This feature was added in CMF 2.2, but now the MemberAdapter should be\n  overridden instead.\n\n- MemberDataTool: Split up MemberData class.\n  The old MemberData API is now provided by the new MemberAdapter. The\n  persistent MemberData objects are just used for storing member data.\n\n- interfaces: Added 'IMember' interface.\n\n- permissions: Marked 'setDefaultRoles' as deprecated.\n\n- DirectoryView: Added 'bobobase_modification_time' method to FSObject.\n  The \"Contents\" tab in the ZMI now shows useful 'Last Modified' values.\n\n- DirectoryView: Changed debug mode behavior.\n  No additional subdirs are registered in debug mode. If you add new subdirs,\n  you have to restart your instance.\n  (https://bugs.launchpad.net/zope-cmf/+bug/271027)\n\n- DirectoryView: Improved debug mode speed on NTFS partitions.\n  The much faster non-Windows implementation is now used on Windows as well if\n  non-FAT32 time stamps are detected. In rare cases that heuristic approach\n  might fail to detected NTFS partitions.\n\n- DirectoryView: Modernized debug mode lookup.\n  Now getConfiguration().debug_mode is used instead of Globals.DevelopmentMode.\n\n- Fix content exportimport when Title or Description are unicode (merge from\n  2.2 branch).\n  \n- tests base: Tightened security for anonymous test user.\n\n- Load permissions.zcml from Products.Five in the test to fix tests\n  with Zope 2.12.\n\n- notifyWorkflowCreated only to IWorkflowAware, possibly following adaption on\n  IObjectAddedEvent.\n\n- Adapterize workflow storage lookups.\n\n- utils: Added FakeExecutableObject.\n  It can be used to set proxy roles in trusted code.\n\n- tests base: Removed obsolete test utils.\n\n- testing: Removed broken run function.\n  Unit test modules are no longer directly executable.\n\n- CookieCrumbler: Removed redirect support.\n  The Unauthorized handling and redirects are now part of CMFDefault.\n\n- Added a permissions.zcml file defining our own permissions. This was\n  formerly done in Zope 2's Products.Five.\n\n- Removed zope.app.testing dependency.\n\n- Import BeforeTraverseEvent from new location if available.\n\n- Skinnable and MembershipTool: Removed support for missing REQUEST argument.\n  'changeSkin', 'setupCurrentSkin' and 'credentialsChanged' will no longer\n  try to acquire the request if it is not passed in explicitly.\n\n- Tools and PortalFolder: Removed support for deprecated marker attributes.\n  '_isDirectoryView', '_isPortalRoot', '_isTypeInformation' and '_isAWorkflow'\n  are no longer supported.\n\n- utils: Removed deprecated functions.\n  'getToolByInterfaceName', 'initializeBasesPhase1', 'initializeBasesPhase2',\n  'expandpath' and 'minimalpath' are no longer available.\n\n- DirectoryView: Removed support for deprecated old API.\n\n- Require at least Zope 2.13.12.\n\n\n2.2.5 (2011-11-01)\n------------------\n\n- Added two missing explicit InitializeClass calls.\n\n\n2.2.4 (2011-04-02)\n------------------\n\n- Fix content exportimport when Title or Description are unicode.\n\n\n2.2.3 (2010-10-31)\n------------------\n\n- Make the error raised when trying to rename an instance of ImmutableId\n  indicate the id of the object.\n\n- DateTime 2.12.5 does away with a special case representing\n  DateTime values for midnight (00:00:00) without their time and\n  time zone values. So DateTimes formerly rendered as\n  ``2010/01/01`` in the UTC timezone now render as\n  ``2010/01/01 00:00:00 UTC``. Several unit tests that relied on \n  the old-style representation had to be fixed.\n\n- Get most tests working under Zope 2.13.0a2.\n\n- Added dependency on the new ``Products.ZSQLMethods`` distribution and updated\n  Zope2 requirement accordingly.\n\n\n2.2.2 (2010-07-04)\n------------------\n\n- Backport test setup fixes for Zope 2.13 compatibility.\n\n- Use the standard libraries doctest module.\n\n- Updated setDefaultRoles to use the addPermission API if available.\n\n- Updated test to work with zope.contenttype >= 3.4.3.\n\n\n2.2.1 (2010-04-07)\n------------------\n\n- Actions and TypeInformation: Clear the compiled NNN_expr_object\n  property when the NNN_expr property is cleared.\n\n- Actions: Return None if 'link_target' is an empty string.\n  This helps to avoid invalid empty 'target' attributes in HTML output.\n\n\n2.2.0 (2010-01-04)\n------------------\n\n- Changed GenericSetup import handlers to fail silently if they\n  are called in a context that does not contain the items they \n  import.\n\n\n2.2.0-beta (2009-12-06)\n-----------------------\n\n- TypesTool: Made it an ordered container.\n  This allows to control the order of the add actions.\n\n- TypeInformation: Removed redundant 'content_icon' property.\n  For backwards compatibility old settings containing 'content_icon' instead\n  of 'icon_expr' are converted on import. CMFDefault provides the necessary\n  upgrade steps for migrating existing sites.\n\n- DynamicType: Added 'getIconURL' method.\n  This replaces the now deprecated 'getIcon' method.\n\n- TypeInformation: Added 'getIconExprObject' method.\n  This replaces the now deprecated 'getIcon' method.\n\n\n2.2.0-alpha (2009-11-13)\n------------------------\n\n- Got rid of redundant icon related type info properties.\n  (https://bugs.launchpad.net/zope-cmf/+bug/397795)\n\n- PortalFolder: Ensure that pasting an object into a folder takes \n  workflow instance creation conditions into account.\n  (https://bugs.launchpad.net/zope-cmf/+bug/308947)\n\n- Made calls to reindexObjectSecurity in the membership tool conditional\n  after the CMFCatalogAware refactoring.\n\n- PortalFolder: Removed unused ICatalogAware and IWorkflowAware methods.\n\n- CMFCatalogAware: Split up CMFCatalogAware mixin.\n  CatalogAware, WorkflowAware and OpaqueItemManager are now separate mixins.\n\n- Changed testing.py to directly load zope.traversing's ZCML instead of going\n  via the Five traversing.zcml BBB shim.\n\n- moved the Zope dependency to version 2.12.0b3dev\n\n- PortalFolder: Modified allowedContentTypes method to check \n  isConstructionAllowed only for allowed types, not for all content types.\n\n- Fixed typo in the acquisition wrapping of the found utility in\n  getToolByName.\n\n- Actions: Add a link_target attribute to store a value for the \n  final rendered link tag's \"target\" attribute\n  (https://bugs.launchpad.net/zope-cmf/+bug/376951)\n\n- MemberData tool: Make it easier to override the default \n  MemberData implementation by trying to look up a named \n  factory utility named \"MemberData\" before falling back on the\n  default MemberData class.\n  (https://bugs.launchpad.net/zope-cmf/+bug/377208)\n\n- FSPageTemplate: Change the charset/encoding detection to consider \n  charset specifications in the content type, and replace the\n  hardcoded Latin-15 fallback with the mechanism used by the \n  Products.PageTemplate code, which can be influenced by setting\n  the environment variable \"ZPT_PREFERRED_ENCODING\"\n  (https://bugs.launchpad.net/zope-cmf/+bug/322263)\n\n- Expose the ZMI manage view of the \"_components\" object manager as\n  a new \"Components Folder\" tab in the ZMI.\n\n- ActionsTool: The \"Action Providers\" tab in the ZMI did not render\n  actions from the WorkflowTool correctly since those are not \n  'new-style' actions.\n  (https://bugs.launchpad.net/zope-cmf/+bug/322300)\n\n- FSPageTemplate: Prevent reading the underlying file without doing \n  anything with the data in some cases.\n\n- FSObject: Ensure that ZCache invalidations only happens if the \n  filesystem modification time differs from the internally stored\n  previous modification time.\n  (https://bugs.launchpad.net/zope-cmf/+bug/325246)\n\n- TypeInformation: DCWorkflow instances define a method and a guard \n  for vetoing object creation, but it was never used. Now  \n  TypeInformation objects will consult these guard conditions during \n  object creation.\n  (https://bugs.launchpad.net/zope-cmf/+bug/308947)\n\n- PortalCatalog: Changed to use a multi-adaptor to allow a pluggable\n  IndexableObjectWrapper class.  Objects that implement IIndexableObject\n  are not wrapped.  The change will assist in integrating with\n  other indexing strategies from third-party packages.\n\n- Events: Changed 'handleContentishEvent' behavior for IObjectCopiedEvent.\n  'WorkflowTool.notifyCreated' no longer resets the workflow state, so the\n  the event subscriber clears the workflow history instead.\n\n- WorkflowTool: 'notifyCreated' no longer overrides assigned workflow states.\n\n- No longer catch a `NotImplemented` string exception in the MembershipTool\n  in deleteMembers.\n\n- Cleaned up / normalized imports:\n\n  o Don't import from Globals;  instead, use real locations.\n\n  o Make other imports use the actual source module, rather than an\n    intermediate (e.g., prefer importing 'ClassSecurityInfo' from\n    'AccessControl.SecurityInfo' rather than from 'AccessControl').\n\n  o Avoid relative imports, which will break in later versions of Python.\n\n- Added `icon_expr` as a new property to type information. This allows you\n  to specify the `content_icon` as an expression and store it. This avoids\n  creating the expression on the fly at rendering time.\n\n- Removed superGetAttr fallback from SkinnableObjectManager. None of its base\n  classes have a `__getattr__` method anymore.\n\n- PortalObject: Removed backwards compatibility code in getSiteManager.\n  Please use CMFDefault's upgrade steps for upgrading old CMF sites.\n\n- Fixed compatibility with non-string exceptions on Zope trunk.\n\n- Added remove support to GenericSetup types tool exportimport handler.\n\n- FiveActionsTool: Removed the tool and all functionality for bridging\n  between Zope 3-style menu items and CMF actions. The CMF has been going\n  a different route for a long time and the code is unused and \n  unmaintained.\n\n- Actions: Added deprecation warnings to the ZMI actions tab and \n  most listActions methods where old-style actions are found \n  asking developers to move to new-style actions instead. These \n  warnings allow us to remove old-style actions code by version 2.4.\n\n- Discussion tool: Removed the listActions method that would return \n  a hardcoded Reply action. This action has been handled by the\n  Actions tool itself for a while now, and the Discussions tool was \n  not set as an action provider anymore.\n\n- actions tool export/import: The actions tool export/import mechanism \n  is no longer attempting to handle actions stored on tools other than\n  itself. Other tools are themselves responsible for their actions.\n  The importer has been fixed to add all action providers to the actions \n  tool, not just a select list of providers we know about.\n  (https://bugs.launchpad.net/zope-cmf/+bug/177675)\n\n- tool interfaces: Replace non-existing IMember interface with the\n  correct IMemberData.\n\n- CatalogTool: If proxy roles are set on a script that uses the catalog\n  and those proxy roles have been unset using the ZMI, which results\n  in an empty tuple as proxy roles, then the catalog would not correctly\n  determine what the current user is allowed to see.\n  (https://bugs.launchpad.net/zope-cmf/+bug/161729)\n\n- Properties export/import: Get the string encoding for property \n  imports from the import context and fall back to UTF-8, which \n  mirrors the behavior for exports. This fixes property export/import \n  round tripping.\n  (https://bugs.launchpad.net/zope-cmf/+bug/248853)\n\n- traversal: Added ++add++ namespace for add views.\n\n- Skinstool import: Fix imports that manipulate existing skins.\n  (https://bugs.launchpad.net/zope-cmf/+bug/161732)\n\n- ActionInformation: extend the ActionInformation and ActionInfo classes \n  to support a icon URL just like the newer Action class already does\n\n- WorkflowTool: Passing the \"magic\" chain name \"(Default)\" to the\n  setChainForPortalTypes method did not set the chain to the default \n  chain value as expected.\n  (https://bugs.launchpad.net/zope-cmf/+bug/161702)\n\n- ZMI: Prevent users from creating content through the ZMI by hiding the\n  entry for \"CMFCore Content\".\n\n- utils: Add a new optional argument to ContentInit that allows hiding\n  a content item's ZMI add list entry. The default is to leave the item\n  visible, which reflects the previous behavior.\n\n- FSMetadata: Remove handling of .security and .properties metadata\n  files which was supposed to have been removed in CMF 2.0 already.\n\n- SkinsTool: Added the ability to do a diff comparison between items\n  found using the portal_skins \"Find\" ZMI tab.\n  (https://bugs.launchpad.net/zope-cmf/+bug/238489)\n\n- TypeInformation and TypesTool: Added support for add view actions.\n  Type infos now have a new 'add_view_expr' property and implement IAction.\n  'listActions' of the types tool includes type infos as 'add' actions.\n\n- interfaces: Fixed some docstrings.\n  There is no IActionInformation. ActionInformation is an old action class\n  that implements IAction, non-persistent IActionInfo objects adapt action\n  objects to a given context.\n\n- FSSTXMethod: Fixed Zope 2.12 compatibility.\n  zope.structuredtext is now used instead of StructuredText.\n\n- removed the five.localsitemanager svn:external and its import hack\n  in favor of stating the dependency for separate installation in\n  DEPENDENCIES.txt and automatic installation in setup.py.\n\n- TypesTool: Refactored content creation.\n  Moved addCreator call to IObjectCreatedEvent handler and moved\n  notifyWorkflowCreated and indexObject calls to IObjectAddedEvent handler.\n  Please make sure all oldstyle content factory methods use _setObject with\n  suppress_events=True. CMF factory methods don't finish object creation,\n  so they should not send the IObjectAddedEvent.\n\n- interfaces: Added new interfaces for CMFCatalogAware methods.\n  In the long run ICatalogAware, IWorkflowAware and IOpaqueItemManager will\n  become deprecated. Don't expect that CMF content always implements them.\n\n- setup handlers: All import and export steps are now registered globally.\n\n- MembershipTool: Removed ancient LoginManager compatibility code and\n  deprecated the no longer needed __getPUS method.\n\n- interfaces: Removed deprecated oldstyle interfaces.\n\n\n2.1.2 (2008-09-13)\n------------------\n\n- fiveactionstool: fix typo in a method name that isn't even used in the CMF \n  or Plone.\n  (https://bugs.launchpad.net/zope-cmf/+bug/257259)\n\n2.1.2-beta (2008-08-26)\n-----------------------\n\n- completed devolution from monolithic CMF package into its component\n  products that are distributed as eggs from PyPI.\n\n\n2.1.1 (2008-01-06)\n------------------\n\n- exportimport.content: Add simple guard against import failures when\n  the \".objects\" file contains empty lines.\n  (https://bugs.launchpad.net/zope-cmf/+bug/176328)\n\n\n2.1.1-beta (2007-12-29)\n-----------------------\n\n- Testing: Derive test layers from ZopeLite layer if available.\n\n- Updated to the 0.3 release of five.localsitemanager.\n\n- Events: Fixed some handleContentishEvent issues.\n  Moved _clearLocalRolesAfterClone code to separate handler that is\n  triggered before indexing and also for folders. Made sure notifyModified\n  is not called if objects are just moved.\n\n- PortalObject: Added setSite to getSiteManager for old instances. This\n  fixes migrations from Plone 2.1 to 3.0.\n\n- FSImage: Supply class-level defaults for 'alt', 'height', and 'width',\n  to avoid acquiring objects with the same names.\n  (http://www.zope.org/Collectors/CMF/507)\n\n- Testing: Derive test layers from ZopeLite layer if available.\n\n- PortalObject: Fixed a bug in the site manager creation code, which would\n  assign the __parent__ pointer to the Aq-wrapper and not the actual\n  object.\n\n\n2.1.0 (2007-08-08)\n------------------\n\n- Fixed all componentregistry.xml files to use plain object paths and strip\n  and slashes. GenericSetup does only support registering objects which are\n  in the site root.\n\n- PortalFolder: Enabled 'Components' ZMI tab.\n  This GenericSetup tab allows to inspect and edit component registrations.\n\n- First egg release.  For changes up through this release, please see\n  the overall \"CMF changelog\",\n  http://svn.zope.org/CMF/tags/2.1.0/CHANGES.txt?rev=78713&view=markup\n\n\n2.1.0-beta2 (2007-07-12)\n------------------------\n\n- moved the Zope dependency to version 2.10.4\n\n- Remove antique usage of marker attributes in favor of interfaces,\n  leaving BBB behind for places potentially affecting third-party code.\n  (http://www.zope.org/Collectors/CMF/440)\n\n- Add POST-only protections to security critical methods.\n  http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0240)\n\n- exportimport.skins: Added the ability to remove whole skin selections using a \n  GS profile.\n  (http://www.zope.org/Collectors/CMF/479)\n\n- UndoTool: Fixed 'listUndoableTransactionsFor'.\n  The required 'object' argument is now respected. This doesn't change the\n  behavior as long as 'object' is the site root object.\n\n- TypesTool: Corrected method signature of all_meta_types to have\n  an interface keyword argument, as per the underlying OFS.ObjectManager\n  interface declaration.\n\n- SkinnableObjectManager: Changed the way skins are set up.\n  Acquisition wrapping no longer triggers 'setupCurrentSkin'. This is now\n  done on publishing traversal after the BeforeTraverseEvent triggers\n  'setSite'. This fix replaces a temporary hack introduced in 2.1.0-beta,\n  making sure ISkinsTool is looked up after setting the site.\n\n- CMFBTreeFolder: CMFBTreeFolders could not be used as the\n  toplevel /Members container.\n  (http://www.zope.org/Collectors/CMF/441)\n\n- TypesTool: Pass 'object' through to TypeInformation objects'\n  'listActions'.\n  (http://www.zope.org/Collectors/CMF/482)\n\n- Removed extraneous \"Cache\" tab from FS-based skin objects.\n  (http://www.zope.org/Collectors/CMF/343)\n\n- WorkflowTool: Using the '(Default)' keyword for a type's\n  workflow chain will now reset any custom workflow chains for the type.\n  (http://www.zope.org/Collectors/CMF/475)\n\n- SkinsTool: Use the property API to get the member specific skin,\n  because direct attribute access won't work with PAS based membership.\n  (http://dev.plone.org/plone/ticket/5904)\n\n- Allow customization from DirectoryViews to be redirected into\n  alternate folders, and use manually-built clones.\n  (http://www.zope.org/Collectors/CMF/382)\n\n\n2.1.0-beta (2007-03-09)\n-----------------------\n\n- moved the Zope dependency to verson 2.10.2\n\n- Tool lookup and registration is now done \"the Zope 3 way\" as utilities, see\n  http://svn.zope.org/CMF/branches/2.1/docs/ToolsAreUtilities.stx?view=auto\n\n- DirectoryView: Added 'registerDirectory' ZCML directive.\n  Using the old registerDirectory method in __init__.py is now deprecated.\n  See zcml.IRegisterDirectoryDirective for details.\n\n- DirectoryView: Added support for non-product packages.\n  This introduces new registry keys. Old registry keys stored in\n  persistent DirectoryView objects are updated on the fly.\n  (http://www.zope.org/Collectors/CMF/467)\n\n- setup handlers: Improved properties handler.\n  It now works with properties using a default_charset other than UTF-8.\n\n- MembershipTool: Fixed inconsistent behavior where member lookup\n  would take all user folders up to the Zope root into account whereas\n  member area creation would not.\n\n- MembershipTool: when using an object without a __nonzero__ but with a \n  __len__ (ala CMFBTreeFolder) as a member folder, the createMemberArea \n  method would believe there was no members folder if the folder was\n  empty, and so would fail (change \"not membersfolder\" to\n  \"membersfolder is not None\") .\n\n- DynamicType: Fixed behaviour regarding default view.\n  DynamicType was making it impossible to use a Zope3-style\n  default view for CMF content types.\n  (http://www.zope.org/Collectors/CMF/459)\n\n- utils: Marked 'minimalpath' and 'expandpath' as deprecated.\n\n- Merged patches from Martin Aspeli to enable generating events before\n  and after DCWorkflow transitions, and in the 'notify' methods of the\n  workflow tool (http://www.zope.org/Collectors/CMF/461).\n\n\n2.1.0-alpha2 (2006-11-23)\n-------------------------\n\n- moved the Zope dependency to version 2.10.1\n\n- Fixed test breakage induced by use of Z3 pagetemplates in Zope 2.10+.\n\n- browser views: Added some zope.formlib based forms.\n\n- testing: Added test layers for setting up ZCML.\n\n- WorkflowTool: Added the IConfigurableWorkflowTool interface.\n  This change includes the new 'getDefaultChain' and 'listChainOverrides'\n  methods and an improved 'setChainForPortalTypes' method. The import\n  handler now supports the 'remove' attribute for removing overrides.\n  (http://www.zope.org/Collectors/CMF/457)\n\n- CachingPolicyManager: Implemented the old OFS.Cache.CacheManager\n  API. Now objects other than CMF content or CMF templates can have their\n  caching headers set by the caching policy manager with the same\n  fine-grained control.\n  (http://www.zope.org/Collectors/CMF/408)\n\n- Added CMFCore.FSRestMethod:  ReST equivalent of FSSTXMethod.\n\n- FSSTXMethod:  Modernized, added tests, made customization\n  possible (now renders via ZPT by default, using 'main_template').\n\n- CachingPolicyManager: Prevent firing of caching policies\n  for templates (DTML or ZPT) that are rendered in-line (without a\n  separate request) while rendering the requested content item's view.\n  (http://www.zope.org/Collectors/CMF/456)\n\n\n2.1.0-alpha (2006-10-09)\n------------------------\n\n- skins: Changed encoding of translated portal_status_messages.\n  Now getBrowserCharset is used to play nice with Five forms. Customized\n  setRedirect and getMainGlobals scripts have to be updated.\n\n- Profiles: All profiles are now registered by ZCML.\n\n- ZClasses: Removed unmaintained support for ZClasses.\n  Marked the 'initializeBases*' methods as deprecated.\n\n- Content: Added IFactory utilities for all content classes.\n  They are now used by default instead of the old constructor methods.\n\n- Content: All content classes are now registered by ZCML.\n  ContentInit is still used to register oldstyle constructors.\n\n- setup handlers: Removed support for CMF 1.5 CMFSetup profiles.\n\n- FactoryTypeInformation: Added support for Zope3 style factories.\n  If the 'product' property of a type info instance is empty the 'factory'\n  property is interpreted as an IFactory name.\n\n- ActionInformation: don't use a fixed set of properties for\n  ActionInformation. (http://www.zope.org/Collectors/CMF/232/)\n\n- CatalogTool: Use current executable's proxy roles, if any,\n  in place of user's roles when computing 'allowedRolesAndUsers' for\n  a query. (http://www.zope.org/Collectors/CMF/380)\n\n- FSFile: Added registration for 'txt' extension.\n\n- CMFCatalogAware: Added 'handleObjectEvent' subscriber.\n  This replaces the deprecated 'manage_afterAdd', 'manage_afterClone' and\n  'manage_beforeDelete' hooks.\n\n\nEarlier releases\n----------------\n\nFor a complete list of changes before version 2.1.0-alpha, see the HISTORY.txt\nfile on the CMF-2.1 branch:\nhttp://svn.zope.org/CMF/branches/2.1/HISTORY.txt?view=auto\n\n", "##############################################################################\n#\n# Copyright (c) 2001 Zope Foundation and Contributors.\n#\n# This software is subject to the provisions of the Zope Public License,\n# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.\n# THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY AND ALL EXPRESS OR IMPLIED\n# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS\n# FOR A PARTICULAR PURPOSE.\n#\n##############################################################################\n\"\"\" Basic user registration tool.\n\"\"\"\n\nfrom random import choice\nimport re\n\nfrom AccessControl.requestmethod import postonly\nfrom AccessControl.SecurityInfo import ClassSecurityInfo\nfrom App.class_init import InitializeClass\nfrom App.special_dtml import DTMLFile\nfrom OFS.SimpleItem import SimpleItem\nfrom zope.component import getUtility\nfrom zope.interface import implements\n\nfrom Products.CMFCore.interfaces import IMembershipTool\nfrom Products.CMFCore.interfaces import IRegistrationTool\nfrom Products.CMFCore.permissions import AddPortalMember\nfrom Products.CMFCore.permissions import MailForgottenPassword\nfrom Products.CMFCore.permissions import ManagePortal\nfrom Products.CMFCore.utils import _checkPermission\nfrom Products.CMFCore.utils import _dtmldir\nfrom Products.CMFCore.utils import _limitGrantedRoles\nfrom Products.CMFCore.utils import Message as _\nfrom Products.CMFCore.utils import registerToolInterface\nfrom Products.CMFCore.utils import UniqueObject\n\n\nclass RegistrationTool(UniqueObject, SimpleItem):\n\n    \"\"\" Create and modify users by making calls to portal_membership.\n    \"\"\"\n\n    implements(IRegistrationTool)\n\n    id = 'portal_registration'\n    meta_type = 'CMF Registration Tool'\n    member_id_pattern = ''\n    default_member_id_pattern = \"^[A-Za-z][A-Za-z0-9_]*$\"\n    _ALLOWED_MEMBER_ID_PATTERN = re.compile(default_member_id_pattern)\n\n    security = ClassSecurityInfo()\n\n    manage_options = ( ({'label': 'Overview',\n                         'action': 'manage_overview'},\n                        {'label': 'Configure',\n                         'action': 'manage_configuration'})\n                     + SimpleItem.manage_options\n                     )\n\n    #\n    #   ZMI methods\n    #\n    security.declareProtected(ManagePortal, 'manage_overview')\n    manage_overview = DTMLFile( 'explainRegistrationTool', _dtmldir )\n\n    security.declareProtected(ManagePortal, 'manage_configuration')\n    manage_configuration = DTMLFile('configureRegistrationTool', _dtmldir)\n\n    security.declareProtected(ManagePortal, 'manage_editIDPattern')\n    def manage_editIDPattern(self, pattern, REQUEST=None):\n        \"\"\"Edit the allowable member ID pattern TTW\"\"\"\n        pattern.strip()\n\n        if len(pattern) > 0:\n            self.member_id_pattern = pattern\n            self._ALLOWED_MEMBER_ID_PATTERN = re.compile(pattern)\n        else:\n            self.member_id_pattern = ''\n            self._ALLOWED_MEMBER_ID_PATTERN = re.compile(\n                                                self.default_member_id_pattern)\n\n        if REQUEST is not None:\n            msg = 'Member ID Pattern changed'\n            return self.manage_configuration(manage_tabs_message=msg)\n\n    security.declareProtected(ManagePortal, 'getIDPattern')\n    def getIDPattern(self):\n        \"\"\" Return the currently-used member ID pattern \"\"\"\n        return self.member_id_pattern\n\n    security.declareProtected(ManagePortal, 'getDefaultIDPattern')\n    def getDefaultIDPattern(self):\n        \"\"\" Return the currently-used member ID pattern \"\"\"\n        return self.default_member_id_pattern\n\n\n    #\n    #   'portal_registration' interface methods\n    #\n    security.declarePublic('isRegistrationAllowed')\n    def isRegistrationAllowed(self, REQUEST):\n        '''Returns a boolean value indicating whether the user\n        is allowed to add a member to the portal.\n        '''\n        return _checkPermission(AddPortalMember, self.aq_inner.aq_parent)\n\n    security.declarePublic('testPasswordValidity')\n    def testPasswordValidity(self, password, confirm=None):\n        '''If the password is valid, returns None.  If not, returns\n        a string explaining why.\n        '''\n        return None\n\n    security.declarePublic('testPropertiesValidity')\n    def testPropertiesValidity(self, new_properties, member=None):\n        '''If the properties are valid, returns None.  If not, returns\n        a string explaining why.\n        '''\n        return None\n\n    security.declarePublic('generatePassword')\n    def generatePassword(self):\n        \"\"\" Generate a valid password.\n        \"\"\"\n        # we don't use these to avoid typos: OQ0Il1\n        chars = 'ABCDEFGHJKLMNPRSTUVWXYZabcdefghijkmnopqrstuvwxyz23456789'\n        return ''.join( [ choice(chars) for i in range(6) ] )\n\n    security.declareProtected(AddPortalMember, 'addMember')\n    @postonly\n    def addMember(self, id, password, roles=('Member',), domains='',\n                  properties=None, REQUEST=None):\n        # XXX Do not make this a normal method comment. Doing so makes\n        # this method publishable\n\n        # Creates a PortalMember and returns it. The properties argument\n        # can be a mapping with additional member properties. Raises an\n        # exception if the given id already exists, the password does not\n        # comply with the policy in effect, or the authenticated user is not\n        # allowed to grant one of the roles listed (where Member is a special\n        # role that can always be granted); these conditions should be\n        # detected before the fact so that a cleaner message can be printed.\n\n        if not self.isMemberIdAllowed(id):\n            raise ValueError(_(u'The login name you selected is already in '\n                               u'use or is not valid. Please choose another.'))\n\n        failMessage = self.testPasswordValidity(password)\n        if failMessage is not None:\n            raise ValueError(failMessage)\n\n        if properties is not None:\n            failMessage = self.testPropertiesValidity(properties)\n            if failMessage is not None:\n                raise ValueError(failMessage)\n\n        # Limit the granted roles.\n        # Anyone is always allowed to grant the 'Member' role.\n        _limitGrantedRoles(roles, self, ('Member',))\n\n        mtool = getUtility(IMembershipTool)\n        mtool.addMember(id, password, roles, domains, properties)\n\n        member = mtool.getMemberById(id)\n        self.afterAdd(member, id, password, properties)\n        return member\n\n    security.declareProtected(AddPortalMember, 'isMemberIdAllowed')\n    def isMemberIdAllowed(self, id):\n        '''Returns 1 if the ID is not in use and is not reserved.\n        '''\n        if len(id) < 1 or id == 'Anonymous User':\n            return 0\n        if not self._ALLOWED_MEMBER_ID_PATTERN.match( id ):\n            return 0\n        mtool = getUtility(IMembershipTool)\n        if mtool.getMemberById(id) is not None:\n            return 0\n        return 1\n\n    security.declarePublic('afterAdd')\n    def afterAdd(self, member, id, password, properties):\n        '''Called by portal_registration.addMember()\n        after a member has been added successfully.'''\n        pass\n\n    security.declareProtected(MailForgottenPassword, 'mailPassword')\n    def mailPassword(self, forgotten_userid, REQUEST):\n        '''Email a forgotten password to a member.  Raises an exception\n        if user ID is not found.\n        '''\n        raise NotImplementedError\n\nInitializeClass(RegistrationTool)\nregisterToolInterface('portal_registration', IRegistrationTool)\n"], "filenames": ["Products/CMFCore/CHANGES.txt", "Products/CMFCore/RegistrationTool.py"], "buggy_code_start_loc": [7, 135], "buggy_code_end_loc": [8, 143], "fixing_code_start_loc": [7, 135], "fixing_code_end_loc": [9, 146], "type": "CWE-284", "message": "Plone 3.3.0 through 3.3.6, 4.0.0 through 4.0.10, 4.1.0 through 4.1.6, 4.2.0 through 4.2.7, 4.3.0 through 4.3.6, and 5.0rc1 allows remote attackers to add a new member to a Plone site with registration enabled, without acknowledgment of site administrator.", "other": {"cve": {"id": "CVE-2015-7315", "sourceIdentifier": "cve@mitre.org", "published": "2017-09-25T17:29:00.537", "lastModified": "2017-10-03T15:17:25.627", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Plone 3.3.0 through 3.3.6, 4.0.0 through 4.0.10, 4.1.0 through 4.1.6, 4.2.0 through 4.2.7, 4.3.0 through 4.3.6, and 5.0rc1 allows remote attackers to add a new member to a Plone site with registration enabled, without acknowledgment of site administrator."}, {"lang": "es", "value": "Plone desde la versi\u00f3n 3.3.0 hasta la 3.3.6, desde la 4.0.0 hasta la 4.0.10, desde la 4.1.0 hasta la 4.1.6, desde la 4.2.0 hasta la 4.2.7, desde la 4.3.0 hasta la 4.3.6 y la 5.0rc1 permite que los atacantes remotos a\u00f1adan un nuevo miembro a un sitio Plone con el registro activado, sin el conocimiento del administrador del sitio."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 5.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.2, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-284"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:3.3:*:*:*:*:*:*:*", "matchCriteriaId": "FDC93803-6506-4382-A013-18010EE7E06B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:3.3.1:*:*:*:*:*:*:*", "matchCriteriaId": "E65977FD-A880-4D16-B56B-94A72774F42D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:3.3.2:*:*:*:*:*:*:*", "matchCriteriaId": "4EA5B4F8-2155-403D-97D8-1272285D508B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:3.3.3:*:*:*:*:*:*:*", "matchCriteriaId": "A3CA2943-77E5-4384-A019-415BBCE62F94"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:3.3.4:*:*:*:*:*:*:*", "matchCriteriaId": "B7FF63F6-F1DC-4A97-A2E6-11CF613A31E8"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:3.3.5:*:*:*:*:*:*:*", "matchCriteriaId": "538A3519-5B04-4FE5-A3C0-FD26EFA32705"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:3.3.6:*:*:*:*:*:*:*", "matchCriteriaId": "858CBC5A-C241-475C-8125-C5EA351B12A7"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.0:*:*:*:*:*:*:*", "matchCriteriaId": "F3306D84-0F5B-46BA-9BCC-DCD0A1CDD604"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.0.1:*:*:*:*:*:*:*", "matchCriteriaId": "E08F4534-A588-463F-A745-39E559AB1CB8"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.0.2:*:*:*:*:*:*:*", "matchCriteriaId": "B64341BA-5722-415E-9771-9837168AB7C0"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.0.3:*:*:*:*:*:*:*", "matchCriteriaId": "E2929227-AE19-428D-9AC3-D312A559039B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.0.4:*:*:*:*:*:*:*", "matchCriteriaId": "3B6DC866-0FEE-475B-855C-A69E004810CD"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.0.5:*:*:*:*:*:*:*", "matchCriteriaId": "50BF3E8E-152C-4E89-BAA2-A952D10F4611"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.0.7:*:*:*:*:*:*:*", "matchCriteriaId": "F1F88BF6-9058-4CB8-A2D6-5653860CF489"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.0.8:*:*:*:*:*:*:*", "matchCriteriaId": "B2AA3FA2-15C3-444A-8810-5EF3E0E84D58"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.0.9:*:*:*:*:*:*:*", "matchCriteriaId": "72F3B15A-CD0F-4CC5-A76F-E62637B30E2E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.0.10:*:*:*:*:*:*:*", "matchCriteriaId": "D913FCA7-4DAE-4E9A-9146-9AFA8472B04B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.1:*:*:*:*:*:*:*", "matchCriteriaId": "7C44B53B-953B-4522-A5B4-11573850D2CD"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.1.1:*:*:*:*:*:*:*", "matchCriteriaId": "D8883023-113A-420A-97B6-A4A9B29CF7DB"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.1.2:*:*:*:*:*:*:*", "matchCriteriaId": "4DF4D113-8D9D-4DA3-A177-64783352F608"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.1.3:*:*:*:*:*:*:*", "matchCriteriaId": "28F9B699-D1A4-425C-84ED-6A8FD29BE7F8"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.1.4:*:*:*:*:*:*:*", "matchCriteriaId": "47321B60-67DA-4543-B173-D629A9569B45"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.1.5:*:*:*:*:*:*:*", "matchCriteriaId": "58B36EB2-723F-4E25-8018-EEB2BE806D9D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.1.6:*:*:*:*:*:*:*", "matchCriteriaId": "7962EF74-6AC1-424C-A202-163AFDADA971"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.2:*:*:*:*:*:*:*", "matchCriteriaId": "1F1818BB-E23A-4136-898D-1D0C80C08728"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.2.1:*:*:*:*:*:*:*", "matchCriteriaId": "5CB06627-133A-40D1-8816-E31E0A9BAD22"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.2.2:*:*:*:*:*:*:*", "matchCriteriaId": "AE7E448A-2C0C-4DE0-89EA-904718CB6C6D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.2.3:*:*:*:*:*:*:*", "matchCriteriaId": "6E727C5C-9E54-49F7-B92C-2492069AAE08"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.2.4:*:*:*:*:*:*:*", "matchCriteriaId": "BFD68465-4CDC-4788-8932-41335B5C4AC8"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.2.5:*:*:*:*:*:*:*", "matchCriteriaId": "A7B739E0-FB73-401C-AB1A-E3C1434AA2A3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.2.6:*:*:*:*:*:*:*", "matchCriteriaId": "DCC8B987-5173-4C61-8DE6-B70C18EE6FD3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.2.7:*:*:*:*:*:*:*", "matchCriteriaId": "38BA31E8-77EC-478B-BC6E-E2F145A8B9BD"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.3:*:*:*:*:*:*:*", "matchCriteriaId": "CE168A35-1A46-4A6F-8A08-25CDD886066D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.3.1:*:*:*:*:*:*:*", "matchCriteriaId": "CFE0FC06-369B-46CF-9B1E-BAF7AF87E950"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.3.2:*:*:*:*:*:*:*", "matchCriteriaId": "56571585-E9A2-4B78-B2B1-5D8EADED522A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.3.3:*:*:*:*:*:*:*", "matchCriteriaId": "2CDF8A15-401C-453E-8D09-8D4CDD4766DB"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.3.4:*:*:*:*:*:*:*", "matchCriteriaId": "39B0B1CE-C0D9-495C-B4E7-E52A50BD6D97"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.3.5:*:*:*:*:*:*:*", "matchCriteriaId": "043B3CBE-DEA2-474D-AA57-1830A470B621"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:4.3.6:*:*:*:*:*:*:*", "matchCriteriaId": "08A6842B-B479-4D91-928A-1CCE1DCB936E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:plone:plone:5.0:rc1:*:*:*:*:*:*", "matchCriteriaId": "8AF9FB6C-134F-4653-8771-1BF46AB39344"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2015/09/22/13", "source": "cve@mitre.org", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1264791", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/zopefoundation/Products.CMFCore/commit/e1d981bfa14b664317285f0f36498f4be4a23406", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://plone.org/security/hotfix/20150910/anonymous-is-able-to-create-plone-members", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}]}, "github_commit_url": "https://github.com/zopefoundation/Products.CMFCore/commit/e1d981bfa14b664317285f0f36498f4be4a23406"}}