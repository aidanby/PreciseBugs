{"buggy_code": ["<document xmlns=\"http://maven.apache.org/changes/1.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/changes/1.0.0 http://maven.apache.org/plugins/maven-changes-plugin/xsd/changes-1.0.0.xsd\">\n    <properties>\n        <title>YAML 1.1 parser and emitter</title>\n    </properties>\n    <body>\n        <release version=\"1.31\" date=\"in Git\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"add\" issue=\"525\">\n                Add test for stackoverflow\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"522\">\n                Deserializing key \"on\" fails with Exception\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Merged PR #7: https://bitbucket.org/snakeyaml/snakeyaml/pull-requests/7 (2022-04-04)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Do not emit global TAGs by not keeping them in Parser\n                (breaks https://code.google.com/archive/p/snakeyaml/issues/149)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add an example with Lombok and ENV variable substitution (2021-12-29)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Fix issues with comments\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"517\">\n                Recognise issue with trailing TAB\n            </action>\n        </release>\n        <release version=\"1.30\" date=\"2021-12-14\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"516\">\n                Remove snakeyaml.org\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Migrate to https://bitbucket.org/snakeyaml/snakeyaml (2021-10-23)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Fix issues with comments\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"506\">\n                Improve parsing a number starting with 0x (2021-06-28)\n                Take the Float pattern from ruamel: https://pypi.org/project/ruamel.yaml\n            </action>\n        </release>\n        <release version=\"1.29\" date=\"2021-06-08\" description=\"Maintenance\">\n            <action dev=\"Wolf2323\" type=\"fix\">\n                Fix Events ordering and improve Node-Comment association (2021-05-13)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Fix corner case for comments where blank lines after plain token  (2021-03-02)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add a test for issue 500 (2021-03-14)\n            </action>\n            <action dev=\"asomov\" type=\"remove\">\n                Remove unused variable (2021-02-28)\n            </action>\n        </release>\n        <release version=\"1.28\" date=\"2021-02-22\" description=\"Maintenance\">\n            <action dev=\"maslovalex\" type=\"fix\">\n                Fix tests to work on Windows (2021-02-19)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add enumCaseSensitive property to LoaderOptions to control constructing enum with case sensitivity (2021-01-05)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"493\">\n                ENV substitution default can contain special characters (2021-01-03)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Allow for read and write YAML with Comments (2020-11-01)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"485\">\n                Alias names are too permissive compared to libyaml and future spec.\n                Follow https://github.com/yaml/yaml-spec/blob/master/rfc/RFC-0003.md (2020-10-06)\n            </action>\n        </release>\n        <release version=\"1.27\" date=\"2020-08-31\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"481\">\n                Serialize anchors that are not used by any alias (2020-08-14)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"416\">\n                Add indentWithIndicator option to improve dumping sequences (2020-07-14)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"480\">\n                Anchor should allow non ascii characters while dumping (2020-06-29)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"remove\">\n                Remove Spring related tests because they are outdated and upgrading to Spring 5\n                makes the tests fail under JDK 7 (2020-05-02)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"476\">\n                Make constructor of EnvScalarConstructor public (2020-04-24)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"474\">\n                Parse the value of byte and short after a narrowing primitive conversion (2020-04-16)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add test for different Line Break Characters in the error message (2020-03-09)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Fix yet another OWASP false positive. It complains that the Spring controller makes SnakeYAML insecure\n                even though SnakeYAML does not use Spring controller and does not depend on Spring (but the tests do).\n                Bump spring.version from 3.2.17.RELEASE to 5.2.4.RELEASE (2020-03-08)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Migrated to GIT (2020-02-29)\n            </action>\n        </release>\n        <release version=\"1.26\" date=\"2020-02-28\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"377\">\n                Allow configuration for preventing billion laughs attack (2020-02-24)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Update Maven wrapper (2020-01-18)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"468\">\n                Parse ENV variables similar to how it works in docker-compose (2019-12-25)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"468\">\n                Allow non ASCII characters in the anchor names (2019-12-23)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"462\">\n                Clean up composer internal maps after construction. Should not have any impact but\n                it does not harm (2019-10-25)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"459\">\n                The '!' tag now works the same way as for PyYAML. (12 is parsed as int instead of string)\n                The spec files are modified (spec-08-07.canonical spec-08-07.data)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add test for not implemented \"!\" tag (2019-10-11)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor Events: expose Event.ID via a getter (2019-10-05)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor ScalarAnalysis: make it immutable (2019-09-28)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"454\">\n                Add example for integer without time pattern (2019-08-22)\n            </action>\n        </release>\n        <release version=\"1.25\" date=\"2019-08-13\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"update\">\n                Deprecate setting tags in TypeDescription (2019-06-23)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"449\">\n                Add test for issue 449 (2019-06-19)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"441\">\n                Restore the way to get anchor for a Node (2019-04-13)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"437\">\n                Introduce setting to keep !!str tag for String even when it contains non-printable chars (2019-03-24)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Update plugin versions (2019-03-04)\n            </action>\n        </release>\n        <release version=\"1.24\" date=\"2019-02-28\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"update\">\n                Refactor BaseConstructor: Factored out postponed mapping logic so subclasses can effectively\n                override constructMapping2ndStep() and delegate to the postponed mapping logic.\n                This is backported from SnakeYAML engine (2019-01-26)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"431\">\n                Customize simple key length when dumping (2019-01-17)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"430\">\n                Wrap runtime exceptions into YAMLException (2019-01-14)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Fix: Null tag constructor not called when parsing top-level null value (2019-01-13)\n                (issue reported for snakeyaml-engine)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"429\">\n                Provide \"Automatic-Module-Name\" entry in MANIFEST (2018-12-16)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"426\">\n                Fix NPE when duplicate keys are not allowed and the key is null (2018-12-02)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Support java.sql classes without the need to depend on java.sql module in java9+ (2018-11-06)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Require Java 7  (2018-11-06)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"423\">\n                Date Serialization Fails for TimeZones on Daylight Savings Time (2018-11-06)\n            </action>\n        </release>\n        <release version=\"1.23\" date=\"2018-08-27\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"412\">\n                Add another getter for ScalarStyle to support backwards compatibility (2018-08-27)\n            </action>\n        </release>\n        <release version=\"1.22\" date=\"2018-08-25\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"update\">\n                Run tests under Java 11  (2018-08-19)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Use Maven 3.5.4 (2018-08-19)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"412\">\n                Restore the Boolean constructors for Events and Nodes for binary compatibility\n                of dependent projects (2018-08-17)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"411\">\n                System Property \"java.runtime.name\" is not required to be defined (2018-08-12)\n                Ensure Compatibility with Graal\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"409\">\n                Dumping Enum breaks when Enum value is Anonymous inner class (2018-08-07)\n                Solution: refactor the way to detect if the full tag can be omitted (and !!str is used instead).\n                Instead of checking whether the class for property and the class for the actual value is the same\n                we can just check that the property class is not java.lang.Enum\n            </action>\n        </release>\n        <release version=\"1.21\" date=\"2018-04-13\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"update\">\n                Scanner throws IndexOutOfBoundsException if no more token left but getToken()\n                or peekToken() called (2018-04-10)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Enhance output of token IDs (2018-04-06)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Mark: expose buffer and pointer  (2018-04-06)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"401\">\n                Restore index in Mark - it is used in JRuby (2018-03-26)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"397\">\n                Plain scalars with colons in flow sequences/mappings are valid YAML (2018-03-03)\n            </action>\n        </release>\n        <release version=\"1.20\" date=\"2018-02-28\" description=\"Maintenance\">\n            <action dev=\"maslovalex\" type=\"fix\"  issue=\"393\">\n                Improve reflective access operation to avoid warning under Java 9 (2018-02-24)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor collection node - flow style must not be null (2018-02-16)\n            </action>\n            <action dev=\"asomov\" type=\"remove\">\n                Refactor: remove unused method isResolved in Node (2018-02-15)\n            </action>\n            <action dev=\"asomov\" type=\"remove\">\n                Refactor: remove unused code in Tag (2018-02-15)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor nodes and events - use enum FlowStyle instead of Boolean (2018-02-10)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor ScalarToken, ScalarNode and ScalarEvent - use enum ScalarStyle instead of Character (2018-02-10)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor Token - remove unused code (2018-02-08)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor Mark - remove unused code (2018-02-06)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"395\">\n                Introduce DuplicateKeyException and report line number for duplicate keys\n                when creating non-Javabeans (2017-12-15)\n            </action>\n        </release>\n        <release version=\"1.19\" date=\"2017-10-14\" description=\"Maintenance\">\n            <action dev=\"maslovalex\" type=\"update\">\n                Only use FIELD access for Android in PropertyUtils (2017-08-20)\n            </action>\n            <action dev=\"maslovalex\" type=\"update\">\n                Add getAnnotations() and getAnnotation() methods to Property (2017-08-20)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"383\">\n                Some configuration properties of Representer are ignored.\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"386\">\n                Fix order of duplicate keys indices to prevent wrong removals.\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"382\">\n                Fix 382: same as 322\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"322\">\n                Fix 322: if there is no getter try to get type information from a setter\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"377\">\n                Add test for 'billion laughs attack'\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"368\">\n                Relax final restriction on TypeDescription (2017-05-05)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"375\">\n                Empty yaml file must return null instead of throwing an exception when loading a JavaBean (2017-05-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"374\">\n                Fix Number when it is used as a JavaBean property with a custom Locale (2017-04-30)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"373\">\n                Add redundant test (2017-04-06)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Provide access to node's anchor, pull request#20 (2017-03-30)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"370\">\n                Remove redundant \"Bundle-RequiredExecutionEnvironment: J2SE-1.5\" (2017-03-16)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"364\">\n                Serializing Calendar objects with certain timezone offsets renders invalid YAML (2017-02-28)\n            </action>\n        </release>\n        <release version=\"1.18\" date=\"2017-02-22\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"358\">\n                Validate DumperOptions to prevent invalid YAML to be dumped (2017-01-12)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"355\">\n                Fix for emitter to split long plain string scalars over multiple lines (2017-01-10)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Let Mark implement Serializable so that ParserException can be serialized (2016-12-15)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"354\">\n                Add tests for issue 354 (2016-12-12)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"337\">\n                Throw exception in case of duplicate keys in MappingNode and\n                LoaderOptions.allowDuplicateKeys is false. (2016-11-25)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"351\">\n                Keep same nodes order on merge (preprocess keys for MappingNode\n                and remove duplicates keeping the last one). (2016-11-22)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"349\">\n                Ignore white spaces for base64 encoded scalar (2016-11-17)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"348\">\n                Not removing parent object when composed object is an anchor. (2016-10-13)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"323\">\n                Support \"Miscellaneous Symbols and Pictographs\" (2016-09-05)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"341\">\n                Fix NPE in BaseRepresenter.multiRepresenters if it contains 'null' as value (2016-05-03)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"335\">\n                Add example for issue 335 - the same tag for different node kinds (2016-03-19)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"332\">\n                Add example for issue 332 (2016-02-24)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Build SnakeYAML for different JDKs with docker without building images (2016-02-22)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Update plugin versions (2016-02-19)\n            </action>\n        </release>\n        <release version=\"1.17\" date=\"2016-02-19\" description=\"Maintenance\">\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"318\" due-to=\"Rog Sigal\">\n                Use Thread.currentThread.getContextClassLoader in Class.forName instead of default one (2016-02-15)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"329\">\n                Add parameters to POM to change distribution server (2016-02-03)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"326\">\n                Relax some of the modifiers to make integration easier (2016-02-02)\n            </action>\n            <action dev=\"maslovalex\" type=\"update\" issue=\"310\">\n                Make use of private/protected constructors for Scalars and 'immutable' objects.\n                Added 'src/test/java8' for Java8 specific tests (requires -Pwith-java8-tests) (2016-01-07)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"320\">\n                Better support to customise BaseConstructor. Make 'composer' field and constructDocument()\n                method protected (2015-10-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"306\">\n                Better UUID support (2015-09-23)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Use Polyglot Maven: add support for YAML POM (2015-09-10)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"314\">\n                Provide ability to customize anchor names (2015-08-25)\n            </action>\n        </release>\n        <release version=\"1.16\" date=\"2015-08-18\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"308\">\n                Provide Docker image for testing under different Java 8 (2015-06-19)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"302\">\n                Convert binary byte[] to String when it matches the JavaBean property (2015-05-26)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                The source code migrated to Bitbucket. Old commits (older then 6 years) have\n                been removed. (2015-05-20)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"212\">\n                Fix a typo in an error message in ScannerImpl (2015-05-19)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"209\">\n                Do not print special characters in the error message (2015-04-16)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"199\">\n                Evaluate implementations for duplicate mapping keys.\n            </action>\n        </release>\n        <release version=\"1.15\" date=\"2015-02-19\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"update\">\n                Apply FindBugs and PMD recommendations (2015-02-16)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Added split lines option to DumperOptions to allow line splitting to be disabled. (2015-02-08)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Use Maven 3 and update plugin versions (2015-02-05)\n            </action>\n            <action dev=\"asomov\" type=\"update\"  issue=\"205\">\n                Add test to clarify iOS emoji character in the surrogate range (2015-02-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"201\">\n                Fix grammar error in exception message (2014-11-18)\n            </action>\n        </release>\n        <release version=\"1.14\" date=\"2014-08-29\" description=\"Maintenance\">\n            <action dev=\"maslovalex\" type=\"fix\"  issue=\"197\">\n                Load JavaBean with fields using custom constructors (2014-08-18)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"192\">\n                Drop support for \"Value Key Language-Independent Type\" and '=' a standard character (2014-05-22)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\"  issue=\"191\">\n                Improve error message for invalid YAML document (2014-05-21)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"188\">\n                Improve error message for invalid YAML document (2014-03-26)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"183\">\n                Support Number class (2013-11-07)\n            </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"182\">\n                Double.POSITIVE_INFINITY applied to float fields (2013-11-07)\n             </action>\n        </release>\n        <release version=\"1.13\" date=\"2013-08-29\" description=\"Maintenance\">\n             <action dev=\"asomov\" type=\"fix\"  issue=\"178\">\n                OSGi: Specify version for exported packages (2013-06-27)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"177\">\n                Improve error report while parsing a JavaBean (2013-05-14)\n             </action>\n              <action dev=\"Jordan\" type=\"fix\"  issue=\"135\">\n                Arrays of primitives are now fully supported (2013-04-16)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"174\">\n                Duplicate anchors in an input document should not be an error (2013-04-03)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"172\">\n                Using a locale with minimum number fraction digits breaks anchor generation (2013-03-30)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"171\">\n                Use more generic generics in BaseRepresenter (2013-03-30)\n             </action>\n        </release>\n        <release version=\"1.12\" date=\"2013-03-02\" description=\"Maintenance\">\n             <action dev=\"asomov\" type=\"update\">\n                The build is using JDK 1.6 (2013-03-02)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"169\">\n                Make Constructor.typeDefinitions protected to be more flexible (2013-02-18)\n             </action>\n             <action dev=\"asomov\" type=\"remove\">\n                Remove file AUTHORS because it does not reflect the actual situation (2012-11-09)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Improve the error message when a TAB character starts a token (2012-11-06)\n             </action>\n        </release>\n        <release version=\"1.11\" date=\"2012-09-29\" description=\"Maintenance\">\n             <action dev=\"asomov\" type=\"fix\"  issue=\"158\">\n                Fix issue 158: improve support for 32-bit characters (UTF-16 surrogate pairs) (2012-09-29)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"146\">\n                Fix issue 146: empty tags should not force explicit document start (2012-09-29)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"156\">\n                Fix issue 156: setSkipMissingProperties fails for non-scalar values (2012-09-05)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"155\">\n                Fix issue 155: SnakeYAML must always eat its own food - a YAML document created by itself must\n                be read without exceptions (2012-09-04)\n             </action>\n             <action dev=\"asomov\" type=\"update\"  issue=\"154\">\n                Fix issue 154: Add option to skip missing properties when deserializing YAML into Java object (2012-07-25)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Add a test for issue 150 (2012-06-17)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Add a test for issue 151 (2012-06-14)\n             </action>\n             <action dev=\"asomov\" type=\"fix\">\n                Fix issue 149: Directives are no longer lost between documents (2012-06-10)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Refactor: use Version enum instead of Array of Integers.\n                This is done to simplify fixing issue 149 (2012-06-09)\n             </action>\n             <action dev=\"asomov\" type=\"fix\">\n                Add tests for issue 148  (2012-06-07)\n             </action>\n             <action dev=\"asomov\" type=\"fix\">\n                Fix issue 147: Serialized representation of character U+FFFD causes exception on deserialization  (2012-06-05)\n             </action>\n             <action dev=\"asomov\" type=\"fix\">\n                Fix issue 145: exception.getMessage() must show the line number as exception.toString() does (2012-04-03)\n             </action>\n             <action dev=\"maslovalex\" type=\"fix\">\n                Fix issue 144: improve type inference for Compact Object Notation (2012-03-16)\n             </action>\n             <action dev=\"maslovalex\" type=\"add\">\n                Improve Android support\n             </action>\n        </release>\n        <release version=\"1.10\" date=\"2012-02-08\" description=\"Maintenance\">\n             <action dev=\"asomov\" type=\"update\">\n                Fix issue 141: TimeZone is configurable in DumperOptions (2012-02-03)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Refactor with PMD: minor non-functional improvements (2012-01-28)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Refactor with PMD: Avoid unused method parameter 'index' in\n                Serializer and Emitter (2012-01-28)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Refactor with PMD: Composer - Avoid unused method parameter 'index' in\n                'Composer.composeNode(Node parent, Object index)''. It was used\n                in PyYAML for kind of XPath for YAML, but it was not imported from PyYAML (2012-01-28)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Refactor Emitter: the SPACE mutable static field could be changed by malicious code or by accident.\n                Boxed value is unboxed and then immediately reboxed (2012-01-28)\n             </action>\n             <action dev=\"asomov\" type=\"remove\">\n                Refactor with FindBugs: remove unused ScalarAnalysis.allowDoubleQuoted (2012-01-28)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Refactor with FindBugs: do not rely on default encoding (2012-01-28)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Refactor: apply FindBugs recommendations (2012-01-28)\n             </action>\n             <action dev=\"maslovalex\" type=\"fix\">\n                Fix issue 139: merge should use last key in map (2012-01-24)\n             </action>\n             <action dev=\"asomov\" type=\"fix\">\n                Fix issue 136: tabs are allowed in plain scalars. This is a deviation from PyYAML (2012-01-11)\n             </action>\n             <action dev=\"asomov\" type=\"add\" issue=\"138\">\n                Expose internal data of ReaderException (2012-01-06)\n             </action>\n             <action dev=\"asomov\" type=\"fix\" issue=\"137\">\n                Respect supplementary characters (2012-01-06)\n             </action>\n             <action dev=\"asomov\" type=\"add\">\n                Use http://mercurial.selenic.com/wiki/EolExtension to force LF  as line separator\n                for all operating systems (2011-12-20)\n             </action>\n             <action dev=\"asomov\" type=\"add\">\n                Add a test for issue 136 (2011-12-14)\n             </action>\n              <action dev=\"asomov\" type=\"remove\">\n                Deprecate the DumperOptions.calculateScalarStyle() method because it was introduced as a quick\n                fix for issue 29. Now it should not be required at all (because of the fix for issue 66),\n                or it should be implemented in the Representer (in RepresentString) (2011-10-10)\n             </action>\n             <action dev=\"asomov\" type=\"fix\">\n                Fix issue 66: literal scalar style is used by default for multiline scalars (2011-10-10)\n             </action>\n             <action dev=\"asomov\" type=\"add\">\n                An example added: how to dump multiline literal scalars (2011-10-04)\n             </action>\n             <action dev=\"asomov\" type=\"add\">\n                An example added: how to dump recursive object for issue 133 (2011-09-14)\n             </action>\n             <action dev=\"asomov\" type=\"add\">\n                A test added for issue 132 (2011-09-13)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Finish 1.9 release (2011-08-15)\n             </action>\n        </release>\n        <release version=\"1.9\" date=\"2011-08-15\" description=\"Introduce Yaml.loadAs() and Yaml.dumpAs() methods\">\n            <action dev=\"asomov\" type=\"update\">\n                Add a test to prove that SnakeYAML is not affected by the problem reported for libyaml\n                at http://pyyaml.org/ticket/196 (2011-07-28)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"128\">\n                Since timestamp contains ':' characters it is dumped with single quoted scalar style\n                in the flow context. The single quoted scalar style causes to dump the explicit tag.\n                In the block context the plain scalar can be used and the tag is not required. It may cause\n                unpredictable behaviour if the tag is required. See the comments in JodaTimeExampleTest (2011-07-25)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"130\">\n                Fix scientific notation inconsistency in the YAML 1.1 specification:\n                scalar '8e-06' should be parsed as a Double (2011-07-24)\n            </action>\n            <action dev=\"asomov\" type=\"remove\" issue=\"127\">\n                Do not allow to override BaseRepresenter.representData(Object data) because\n                users should instead implement Represent interface (2011-07-21)\n            </action>\n            <action dev=\"asomov\" type=\"remove\" issue=\"124\">\n                Deprecate DumperOptions.explicitRoot (2011-07-20)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"124\">\n                Add Yaml.dumpAs(Object, Tag.MAP, FlowStyle) and Yaml.dumpAsMap(Object) methods. JavaBeanDumper is marked as deprecated (2011-07-16)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"127\">\n                Add example to show how to dump a custom class (2011-07-12)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"129\">\n                Add Yaml.serialize(Node) low level method to the public API (2011-07-14)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"129\">\n                Add Yaml.represent(Object) low level method to the public API (2011-07-14)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"125\">\n                Add support for Maven 3 via 'm3' profile (2011-07-10)\n            </action>\n            <action dev=\"asomov\" type=\"remove\" issue=\"124\">\n                Remove deprecated JavaBeanParser (2011-07-05)\n            </action>\n            <action dev=\"asomov\" type=\"remove\" issue=\"124\">\n                Remove redundant JavaBeanDumper.classTags set (2011-07-03)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"124\">\n                Add Yaml.loadAs() methods. JavaBeanLoader is marked as deprecated (2011-07-03)\n            </action>\n            <action dev=\"asomov\" type=\"remove\" issue=\"124\">\n                Remove TypeDescription.root property to prepare issue 124. This is a minor backwards incompatible change.\n                Now instead of setting as root, the TypeDescription must be passed to the Contructor's constructor\n                to be taken as the root definition (2011-07-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"121\" due-to=\"Jaromir\">\n                Fix: close files in tests to avoid a possible file handle limit (2011-06-09)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"116\" due-to=\"Jim Peterson\">\n                Fix: Improved support for empty JavaBeans (2011-06-09)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"112\" due-to=\"Lethargish\">\n                Fix: Improved support for parameterised types in collections (2011-05-25)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"115\" due-to=\"elkniwt\">\n                Fix: parameterised JavaBeans fail to load and dump because they are treated as Maps (2011-05-16)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"114\" due-to=\"gileadis\">\n                Fix: Do not remove root tags of JavaBeans when it is not explicitly requested (2011-04-20)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"111\" due-to=\"JordanAngold\">\n                Fix: Long escaped tag URI sequences throw BufferOverflowException (2011-03-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"110\" due-to=\"dmitry.s.mamonov\">\n                Fix: introduce a package for external libraries and move there the 64Coder\n                and the Google's URL encoder (2011-02-24)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"109\" due-to=\"cjalmeida\">\n                Fix: ancient years must be dumped with leading zeros (2011-02-19)\n            </action>\n            <action dev=\"asomov\" type=\"remove\" due-to=\"JordanAngold\">\n                Remove unused code in Constructor: Modifier.isAbstract() is not needed any more (2011-02-18)\n            </action>\n            <action dev=\"JordanAngold\" type=\"fix\" issue=\"108\">\n                Enum's name property shall be dumped instead of the 'toString()' output (2011-02-16)\n            </action>\n        </release>\n        <release version=\"1.8\" date=\"2011-02-15\" description=\"Performance improvement\">\n            <action dev=\"asomov\" type=\"add\">\n                Add example to howto Wiki:\n                How_to_substitute_object_in_YAML_document_with_a_custom_object (2011-01-27)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                When the YAML document to be loaded is provided as String parse it directly\n                without making a Reader first (2011-01-23)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"106\">\n                Immutable data structures in StreamReader allow to share the same buffer for all\n                the Mark instances. It makes 'withMarkContext' setting redundant (2011-01-19)\n            </action>\n            <action dev=\"maslovalex\" type=\"update\" issue=\"100\">\n                Merge JavaBean properties when an explicit tag is provided (2011-01-11)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"99\">\n                Add an example for escaping line breaks in binary content (2011-01-03)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"97\">\n                Propose a solution for JavaBeans to support SortedSet property when it is encoded\n                as a sequence (2010-11-24)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"59\">\n                Simplify the way how the order of JavaBean properties is specified. Introduce\n                PropertyUtils.createPropertySet() method to be overridden when a specific order\n                is expected (2010-11-23)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"95\">\n                Fix: Loading of generic collections with Array parameter(s). (2010-11-16)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"94\">\n                Add ChangeRuntimeClassTest as an example how to change a class for a global tag (2010-11-05)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Inner objects in Constructor become protected to be more flexible when Constructor\n                is expended (2010-10-03)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"91\">\n                Apply www.snakeyaml.org domain name (2010-09-20)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"90\">\n                Move Base64Coder into another package to keep a separate copyright statement.\n                Base64Coder is left unchanged (2010-09-19)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"69\">\n                Iterable should not be serialised as sequence (2010-09-16)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Introduce 'fast' Maven profile to quickly build cobertura reports (2010-09-16)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"89\">\n                Fix: Specify plugin versions in POM (2010-09-15)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"88\">\n                Fix: Custom tag erased when referenced from generic collection (2010-09-15)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Minor refactoring in Emitter to improve performance: save calls to Constant.has() (2010-09-13)\n            </action>\n            <action dev=\"maslovalex\" type=\"update\">\n                Minor refactorings in Emitter to improve performance: create less Strings [r9185e0b3] (2010-09-10)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"79\">\n                Introduce LoaderOptions to be able to specify configuration while loading (2010-09-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"81\">\n                Representer.representJavaBeanProperty() is given the wrong tag. Instead of the property tag,\n                the tag for the JavaBean itself is provided. (2010-09-01)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Rename JvmDetector into GenericsBugDetector (2010-08-31)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"80\" due-to=\"SebastienRainville\">\n                Fix: Timestamp is not parsed properly when milliseconds start with 0 (2010-08-24)\n            </action>\n            <action dev=\"maslovalex\" type=\"update\" issue=\"79\">\n                Context for error reporting consumes a lot of resources (2010-08-21)\n            </action>\n            <action dev=\"asomov\" type=\"remove\">\n                Cleanup unused code in deprecated Loader and Dumper (2010-08-13)\n            </action>\n        </release>\n        <release version=\"1.7\" date=\"2010-08-12\" description=\"Simplify public API (drop Loader and Dumper)\">\n            <action dev=\"asomov\" type=\"update\">\n                Eclipse does not run JUnit 4 tests when they are launched for the whole project (2010-08-11)\n            </action>\n            <action dev=\"maslovalex\" type=\"update\" issue=\"55\">\n                Share PropertyUtils if not explicitly set in Constructor or Representer\n                (BeanAccess.FIELD works properly when JavaBean is identified by a root tag) (2010-08-11)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Create 1.7 Release Candidate 1 (2010-08-11)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"77\">\n                Simplify public API: Drop Dumper (2010-08-06)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"77\">\n                Simplify public API: Drop Loader (2010-08-05)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"75\" due-to=\"jon.p.hermes\">\n                Add examples to create scalars that match custom regular expression:\n                CustomImplicitResolverTest, CustomBeanResolverTest (2010-08-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"74\" due-to=\"Kevin Menard\">\n                Do not use redundant tags for arrays which are JavaBean properties. (2010-07-21)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                RecursiveSetTest proves that it is possible to construct a recursive set (2010-07-20)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"73\" due-to=\"birnbuazn\">\n                Provide sequence support for loading java.util.Set. Also provide an example\n                to serialise a java.util.Set as a sequence. (2010-07-19)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"72\" due-to=\"birnbuazn\">\n                Support java.util.Collection as a parent for List and Set (2010-07-09)\n            </action>\n            <action dev=\"maslovalex\" type=\"add\" issue=\"55\" due-to=\"birnbuazn\">\n                Allow direct field access bypassing setters and getters. Empty constructor\n                is required to support 2-step construction (2010-07-02)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"69\">\n                Serialise Iterator and Iterable as sequences (2010-06-25)\n            </action>\n            <action dev=\"asomov\" type=\"update\" due-to=\"maslovalex\">\n                Change error message when 'No suitable constructor with N arguments found for class' (2010-06-23)\n            </action>\n            <action dev=\"asomov\" type=\"add\" due-to=\"Antony Stubbs\">\n                Add JodaTime example (2010-06-04)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"67\" due-to=\"Manuel Sugawara\">\n                Add possibility to create a Tag out of an URI (2010-05-31)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                URLDecoder.decode() does not fail when UTF-8 is invalid. Use\n                CodingErrorAction.REPORT to implement the failure (2010-05-21)\n            </action>\n            <action dev=\"maslovalex\" type=\"update\">\n                Fix generic collections which contain other collections (2010-05-18)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"67\" due-to=\"Manuel Sugawara\">\n                Fix: java classes containing non-ASCII characters in names are\n                incorrectly encoded (2010-05-14)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"65\" due-to=\"lerch.johannes\">\n                Fix: add checks for null arguments for JavaBeanDumper (2010-04-27)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add a test to see how stack trace is serialised (2010-04-27)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"64\" due-to=\"maxim.moschko\">\n                ClassCastException in Representer when working with ParameterizedType (2010-04-25)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Improve toString() method for Node. Since scalars cannot be recursive\n                they can be printed (2010-04-15)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"63\" due-to=\"Udo\">\n                Refactor the way arrays are constructed (2010-04-15)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"62\">\n                Add examples for dumping custom values for !!bool and !!null (2010-04-13)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"61\">\n                Fix: ClassCastException when dumping generic bean (2010-04-11)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"59\">\n                Provide an example for changing JavaBean properties order (2010-04-01)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"60\">\n                Provide example for skipping null and empty collections (2010-03-29)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"58\" due-to=\"jeff.caulfield\">\n                JavaBeanDumper.dump throws NullPointerException on list property\n                with null element (2010-03-23)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"56\" due-to=\"DZeiss\">\n                Make constructors in SafeConstructor public (2010-03-16)\n            </action>\n            <action dev=\"asomov\" type=\"update\" due-to=\"David Bernard\">\n                Releases and snapshots are available in the Sonatype Maven repository.\n                https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide\n            </action>\n            <action dev=\"obastard\" type=\"fix\" issue=\"53\" due-to=\"obastard\">\n                Enhancement for a pretty format that combines BLOCK and FLOW (2010-03-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"50\" due-to=\"sualeh.fatehi\">\n                Unable to dump JavaBean that inherits from a protected base class (2010-03-02)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Format source (2010-03-01)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Use Token.ID and Event.ID instead of just ID (2010-03-01)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Issue 50 fails in Eclipse but works with Maven (2010-03-01)\n            </action>\n        </release>\n        <release version=\"1.6\" date=\"2010-02-26\" description=\"introduce Tag class\">\n            <action dev=\"asomov\" type=\"update\">\n                Release Candidate 2 is available (2010-02-24)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"47\" due-to=\"obastard\">\n                Don't dump read-only properties by default. DumperOptions gets a setting to\n                include read-only JavaBean properties.\n                This is no backwards compatible change (2010-02-19)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"49\" due-to=\"obastard\">\n                Support GregorianCalendar. Due to Daylight Saving Time parsing the timestamp with\n                a TimeZone cannot determine the exact time (2010-02-19)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"51\" due-to=\"johann.Werner\">\n                Some Unicode characters are wrongly replaced by \\x{fffd} during\n                double quoted style dump (2010-02-15)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"48\" due-to=\"obastard\">\n                Introduce representJavaBeanProperty() method in Representer. The method\n                can be overridden to simplify custom JavaBean representation (2010-02-12)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Release Candidate 1 is available (2010-02-01)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Representer.representJavaBean() returns MappingNode (2010-01-26)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add example of serialising static fields  (2010-01-26)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add example of serialising java.io.File as scalar node for issue 46  (2010-01-25)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: introduce Chomping to avoid using null as value for Boolean.\n                Stay in line with Scala port where null is not allowed (2010-01-19)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use Event.ID enum instead of classes (2010-01-15)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use Token.ID enum instead of classes (2010-01-15)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use generic classes for DirectiveToken (2010-01-14)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: rename Reader to StreamReader to avoid name conflict with java.io.Reader (2010-01-13)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use StringBuilder instead of StringBuffer (2010-01-12)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: introduce Constant class to share String constants (2010-01-12)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Keep Tag.equals(String) to simplify transition to Tag class (2010-01-08)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: introduce Tag instead of Tags. Nodes use Tag class instead of String (2010-01-05)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"42\" due-to=\"Artem\">\n                BaseConstructor shall give more flexibility to choose a constructor at runtime (2010-01-08)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: introduce TagTuple instead of String[] (2010-01-04)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"40\" due-to=\"sitrious\">\n                Ignore tags when they are compatible with the runtime class (2010-01-04)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add example to ignore unknown tags (2009-12-08)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add Ruby example (2009-12-08)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Do not omit the tag for JavaBean properties when the tag is explicitly defined (2009-12-08)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"38\" due-to=\"gchpaco\">\n                Fix ID format for numbers over 999 (2009-12-05)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"29\" due-to=\"grignaak\">\n                Allow separate option in DumperOptions for long strings (2009-11-16)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                JavaBeanDumper: add possibility to define a custom Representer (2009-11-25)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"36\">\n                Introduce multi contructors (tag prefix). A family of tags may be processed\n                by a single constructor (2009-11-25)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor BaseConstructor: simplify second step for recursive structures (2009-11-25)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add FilterPropertyToDumpTest to show how to filter JavaBean properties (2009-11-24)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add FilterClassesConstructorTest to show how to filter created classes (2009-11-16)\n            </action>\n            <action dev=\"asomov\" type=\"update\" due-to=\"Stefan\">\n                Improve JavaDoc (2009-11-12)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add Velocity example (2009-11-03)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: rename Tuple to RecursiveTuple and hide it inside BaseConstructor (2009-11-03)\n            </action>\n        </release>\n        <release version=\"1.5\" date=\"2009-10-30\" description=\"Improve usage of generic collections in JavaBeans\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"27\" due-to=\"Polyglot Maven team\">\n                Extend Resolver to support custom implicit types (2009-10-27)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Performance improvement: use ArrayStack instead of Stack which extends Vector (2009-10-20)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"25\" due-to=\"Benjamin Bentmann\">\n                Improve usage of generic collections: while type erase makes no difference between\n                Class&lt; Foo&gt; and Class&lt; Bar&gt; at runtime, the information about generics is still\n                accessible via reflection from Method/Field. (2009-10-19)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Fix ConstructYamlObject: support recursive objects. Introduce 'resolved'\n                property for Nodes. This property supposed to help to distinguish explicit tag\n                from the resolved tag (2009-10-19)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use rootTag instead of rootType (for Class) in BaseConstructor. This is done to\n                solve the priority problem: normally explicit tag has more priority then runtime class but\n                for the root tag it is the other way around (2009-10-19)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"24\" due-to=\"shrode\">\n                Line numbers reported in Exceptions are Zero based, should be 1 based (2009-10-12)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"21\" due-to=\"ashwin.jayaprakash\">\n                Support arrays of reference types as JavaBean properties (2009-09-22)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"17\" due-to=\"jcucurull\">\n                Respect root tag for sequences (2009-09-04)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"18\" due-to=\"creiniger\">\n                SafeRepresenter respects custom tags for standard Java classes where standard tag has\n                more then one Java implementation available (Long, List, Map, Date etc) (2009-09-03)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add possibility to define a custom Class Loader. (2009-09-01)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Fixed an obscure scanner error not reported when there is no line break at the end\n                of the stream. The fix is imported from PyYAML 3.09 {ticket 118} (2009-08-31)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"16\" due-to=\"infinity0x\">\n                Cache JavaBean class properties. Tests show that the loading has become a few percents faster (2009-08-31)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Introduce ArrayStack to use push() and pop() instead of standard (and too verbose)\n                'remove(size()-1)'  (2009-08-27)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"14\" due-to=\"infinity0x\">\n                Fix: ArrayList is more efficient than LinkedList  (2009-08-26)\n            </action>\n        </release>\n        <release version=\"1.4\" date=\"2009-08-26\" description=\"better support for loading immutable objects\">\n            <action dev=\"asomov\" type=\"update\">\n                Apply Apache License Version 2.0 (2009-08-14)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"13\" due-to=\"infinity0x\">\n                Provide javadocs link to Sun Java API (2009-08-10)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Build 1.4 Release Candidate 1 (2009-08-07)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Introduce Tags.getGlobalTagForClass() to simplify tag generation in custom constructors (2009-08-06)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: introduce ImplicitTuple (2009-08-06)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"11\" due-to=\"infinity0x\">\n                Fix: create a Java instance with the following priority to choose the class:\n                Explicit tag -> Runtime class (defined in JavaBean) -> implicit tag  (2009-08-06)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"9\" due-to=\"wwagner4\">\n                Fix: Bean with no property cannot be instantiated. This is implemented via better\n                support for immutable objects. Custom Constructor may be used when there are more\n                then 1 way to create an instance (2009-08-04)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Deliver possibility to load immutable instances with no global tags. Reflection for\n                constructor arguments is used to get the runtime classes (2009-08-04)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Use more informative error message when a JavaBean property cannot\n                be created (2009-08-02)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: Constructor is rewritten. Do not overwrite methods from BaseConstructor.\n                Instead introduce ConstructScalar, ConstructSequence, ConstructMapping (2009-07-31)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Change Maven repository path: groupId='org.yaml', artifactId='snakeyaml' (2009-07-31)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"10\" due-to=\"derrick.rice\">\n                Fix: dump omits JavaBean class name when used with an alias (2009-07-28)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Generate sources and Javadoc (2009-07-27)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Node does not have the value. It is delegated to the non-abstract classes (2009-07-27)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Extends JavaBeanDumper to allow skipping global tags inside type-safe collections.\n                Introduce method setMapTagForBean() (2009-07-22)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add ConstructEmptyBeanTest to test JavaBean construction with no\n                properties in the YAML document(2009-07-22)\n            </action>\n            <action dev=\"asomov\" type=\"remove\">\n                Refactor: redesign tag management for JavaBeans in Representer.\n                Drop dynamic root tag concept (2009-07-22)\n            </action>\n            <action dev=\"asomov\" type=\"remove\">\n                Remove unused TypeDescription in Representer (2009-07-21)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Use NodeTuple instead of Node[] for mappings (2009-07-21)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Introduce JavaBeanLoader and JavaBeanDumper. Deprecate JavaBeanParser (2009-07-21)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"8\" due-to=\"Alan Gutierrez\">\n                Fix: Representer was keeping state between invocations (2009-07-21)\n            </action>\n        </release>\n        <release version=\"1.3\" date=\"2009-07-20\" description=\"complete support for recursive objects\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"6\" due-to=\"infinity0x\">\n                Fix: values returned by System.identityHashCode() are not guaranteed to be unique (2009-07-14)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add a simple test for Java Generics (BirdTest). Unfortunately it shows that some JVM\n                implementations do not recognise classes for JavaBean properties at runtime.\n                It leads to unnecessary global tags. See http://code.google.com/p/snakeyaml/wiki/Documentation#Generics\n                for details (2009-07-13)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"5\" due-to=\"infinity0x\">\n                Fix: set the \"cause\" field for MarkedYAMLException (2009-07-10)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"1\">\n                Fix: Recursive objects are now fully supported (2009-07-09)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add support for BigDecimal as a JavaBean property (2009-07-07)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Improve test coverage for Constructor. Allow construction of JavaBeans\n                with only setter without the corresponding getter (2009-07-07)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add a test to check the proper report for IOException (2009-07-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"3\" due-to=\"infinity0x\">\n                Fix: represent proper tags for JavaBeans when they are not the root of the YAML\n                document but a member of a collection (2009-07-03)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: run PMD and apply some of the recommendations (2009-06-18)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"1\">\n                Create an issue for Recursive objects to be remembered (2009-06-08)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Migrate project hosting from Assembla to Google code (2009-06-08)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" due-to=\"Magne\">\n                Fix: null as a JavaBean property was not handled properly (2009-06-04)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Validate changes.xml file (2009-05-25)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" due-to=\"Magne\">\n                Fix ticket 40 in Assembla: getting an error when javabean contains java.sql.Timestamp fields (2009-05-25)\n            </action>\n        </release>\n        <release version=\"1.2\" date=\"2009-04-27\" description=\"expose low-level API\">\n            <action dev=\"asomov\" type=\"add\">\n                Add 'Yaml.parse()' method which return Events to support low level YAML processing (2009-04-20)\n            </action>\n            <action dev=\"asomov\" type=\"add\" due-to=\"Bob Jalex\">\n                Introduce LineBreak.getPlatformLineBreak (ticket 5 in Assembla) (2009-04-18)\n            </action>\n            <action dev=\"asomov\" type=\"update\" due-to=\"Bob Jalex\">\n                 Rename LineBreak.LINUX to LineBreak.UNIX (ticket 5 in Assembla) (2009-04-18)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add 'Yaml.compose()' methods which return Nodes to support YEdit (2009-04-17)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: rename enums in DumperOptions to make the names consistent (2009-04-07)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use Character instead of char primitive for style in Emitter (2009-04-07)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add possibility to parse all scalars as Strings (2009-03-30)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Merge changeset 347 from PyYAML (2009-03-30)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Respect DumperOptions with a custom Representer (2009-03-18)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Represent TAB as '\\t' instead of '(9' in the error message (2009-03-17)\n            </action>\n        </release>\n        <release version=\"1.1\" date=\"2009-03-14\" description=\"improve performance and test coverage\">\n            <action dev=\"asomov\" type=\"add\">\n                Introduce JavaBeanParser (2009-03-14)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Introduce DumperOptions.Version enum (2009-03-13)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Introduce DumperOptions.LineBreak enum (2009-03-10)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Use byte[] for binary type. (2009-03-09)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Restore Regular Expressions in Resolver. Ragel gives only 5% performance increase.\n                Fix a bug in Resolver with expanded regular expressions which caused the\n                performance problem. (2009-03-06)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Better Spring support: it is now possible to create a constructor with a String\n                as the class name. (2009-03-05)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Throw an exception when the same Loader or Dumper instance is shared between\n                different Yaml instances. Because they are statefull it is not Thread-safe. (2009-03-05)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add possibility to set a meaningful name for Yaml instance to be shown in toString(). (2009-03-05)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: declare classes which are not expected to be extended as final. (2009-03-04)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use 'final' keyword to identify immutable fields. (2009-03-04)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: do not use 'final' keyword for local variables. (2009-03-04)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Fix: respect implicit resolvers with 'null' as a first character. (2009-03-02)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use Character instead of String as a key for implicit resolvers. (2009-03-02)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Use Ragel instead of Regular Expressions for implicit types. (2009-03-02)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" due-to=\"Christophe Desguez\">\n                Fix ticket #4 (in Assembla): java.sql.Date not handled. (2009-02-28)\n            </action>\n             <action dev=\"asomov\" type=\"add\">\n                Introduce DumperOptions.DefaultFlowStyle enum (2009-02-24)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Introduce DumperOptions.DefaultScalarStyle enum (2009-02-24)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use 'switch' with Enum instead of multiple 'if' statements to distinguish nodes (2009-02-19)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use Enum instead of String as NodeId (2009-02-19)\n            </action>\n        </release>\n        <release version=\"1.0.1\" date=\"2009-02-18\" description=\"implement Enum support\">\n            <action dev=\"asomov\" type=\"fix\">\n                Do not emit anchors for Enum (2009-02-18)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Enum as a JavaBean property (when the Enum class is implicitly defined) does\n                not need tags for both loading and dumping (2009-02-17)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Enum is emitted as a scalar node (2009-02-17)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" due-to=\"James Nissel\">\n                Enum is parsed as a scalar node or as a JavaBean property (2009-02-17)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: for performance ScannerImpl.stalePossibleSimpleKeys() does not copy key Set (2009-02-10)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                By default allowUnicode=true. If it is necessary to escape Unicode use\n                DumperOptions.setAllowUnicode(false) (2009-02-09)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Implement allowUnicode setting (to escape Unicode characters on non UTF-8 terminals) (2009-02-09)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add possibility to specify tags for dumping (2009-02-09)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Rename getExpRoot to getExplicitRoot to conform with\n                standard JavaBean naming convention (2009-02-09)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Rename explictStart and explicitEnd to standard setters to conform with\n                standard JavaBean naming convention (2009-02-09)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Add possibility to specify a line break (2009-02-09)\n            </action>\n        </release>\n        <release version=\"1.0\" date=\"2009-02-06\" description=\"final 1.0 release\">\n            <action dev=\"asomov\" type=\"add\">\n                Deliver first release (2009-02-06)\n            </action>\n        </release>\n    </body>\n</document>\n", "/**\n * Copyright (c) 2008, SnakeYAML\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.yaml.snakeyaml;\n\npublic class LoaderOptions {\n\n    private boolean allowDuplicateKeys = true;\n    private boolean wrappedToRootException = false;\n    private int maxAliasesForCollections = 50; //to prevent YAML at https://en.wikipedia.org/wiki/Billion_laughs_attack\n    private boolean allowRecursiveKeys = false;\n    private boolean processComments = false;\n    private boolean enumCaseSensitive = true;\n\n    public boolean isAllowDuplicateKeys() {\n        return allowDuplicateKeys;\n    }\n\n    /**\n     * Allow/Reject duplicate map keys in the YAML file.\n     *\n     * Default is to allow.\n     *\n     * YAML 1.1 is slightly vague around duplicate entries in the YAML file. The\n     * best reference is <a href=\"http://www.yaml.org/spec/1.1/#id862121\">\n     * 3.2.1.3. Nodes Comparison</a> where it hints that a duplicate map key is\n     * an error.\n     *\n     * For future reference, YAML spec 1.2 is clear. The keys MUST be unique.\n     * <a href=\"http://www.yaml.org/spec/1.2/spec.html#id2759572\">1.3. Relation\n     * to JSON</a>\n     * @param allowDuplicateKeys false to reject duplicate mapping keys\n     */\n    public void setAllowDuplicateKeys(boolean allowDuplicateKeys) {\n        this.allowDuplicateKeys = allowDuplicateKeys;\n    }\n\n    public boolean isWrappedToRootException() {\n        return wrappedToRootException;\n    }\n\n    /**\n     * Wrap runtime exception to YAMLException during parsing or leave them as they are\n     *\n     * Default is to leave original exceptions\n     *\n     * @param wrappedToRootException - true to convert runtime exception to YAMLException\n     */\n    public void setWrappedToRootException(boolean wrappedToRootException) {\n        this.wrappedToRootException = wrappedToRootException;\n    }\n\n    public int getMaxAliasesForCollections() {\n        return maxAliasesForCollections;\n    }\n\n    /**\n     * Restrict the amount of aliases for collections (sequences and mappings) to avoid https://en.wikipedia.org/wiki/Billion_laughs_attack\n     * @param maxAliasesForCollections set max allowed value (50 by default)\n     */\n    public void setMaxAliasesForCollections(int maxAliasesForCollections) {\n    \tthis.maxAliasesForCollections = maxAliasesForCollections;\n    }\n\n    /**\n     * Allow recursive keys for mappings. By default it is not allowed.\n     * This setting only prevents the case when the key is the value. If the key is only a part of the value\n     * (the value is a sequence or a mapping) then this case is not recognized and always allowed.\n     * @param allowRecursiveKeys - false to disable recursive keys\n     */\n    public void setAllowRecursiveKeys(boolean allowRecursiveKeys) {\n    \tthis.allowRecursiveKeys = allowRecursiveKeys;\n    }\n\n    public boolean getAllowRecursiveKeys() {\n        return allowRecursiveKeys;\n    }\n\n    /**\n     * Set the comment processing. By default, comments are ignored.\n     *\n     * @param processComments <code>true</code> to process; <code>false</code> to ignore\n     */\n    public void setProcessComments(boolean processComments) {\n        this.processComments = processComments;\n    }\n\n    public boolean isProcessComments() {\n        return processComments;\n    }\n\n    public boolean isEnumCaseSensitive() {\n        return enumCaseSensitive;\n    }\n\n    /**\n     * Disables or enables case sensitivity during construct enum constant from string value\n     * Default is false.\n     *\n     * @param enumCaseSensitive - true to set enum case sensitive, false the reverse\n     */\n    public void setEnumCaseSensitive(boolean enumCaseSensitive) {\n        this.enumCaseSensitive = enumCaseSensitive;\n    }\n}\n", "/**\n * Copyright (c) 2008, SnakeYAML\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.yaml.snakeyaml.composer;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\n\nimport org.yaml.snakeyaml.DumperOptions.FlowStyle;\nimport org.yaml.snakeyaml.LoaderOptions;\nimport org.yaml.snakeyaml.comments.CommentEventsCollector;\nimport org.yaml.snakeyaml.comments.CommentLine;\nimport org.yaml.snakeyaml.comments.CommentType;\nimport org.yaml.snakeyaml.error.Mark;\nimport org.yaml.snakeyaml.error.YAMLException;\nimport org.yaml.snakeyaml.events.AliasEvent;\nimport org.yaml.snakeyaml.events.Event;\nimport org.yaml.snakeyaml.events.MappingStartEvent;\nimport org.yaml.snakeyaml.events.NodeEvent;\nimport org.yaml.snakeyaml.events.ScalarEvent;\nimport org.yaml.snakeyaml.events.SequenceStartEvent;\nimport org.yaml.snakeyaml.nodes.AnchorNode;\nimport org.yaml.snakeyaml.nodes.MappingNode;\nimport org.yaml.snakeyaml.nodes.Node;\nimport org.yaml.snakeyaml.nodes.NodeId;\nimport org.yaml.snakeyaml.nodes.NodeTuple;\nimport org.yaml.snakeyaml.nodes.ScalarNode;\nimport org.yaml.snakeyaml.nodes.SequenceNode;\nimport org.yaml.snakeyaml.nodes.Tag;\nimport org.yaml.snakeyaml.parser.Parser;\nimport org.yaml.snakeyaml.resolver.Resolver;\n\n/**\n * Creates a node graph from parser events.\n * <p>\n * Corresponds to the 'Compose' step as described in chapter 3.1 of the\n * <a href=\"http://yaml.org/spec/1.1/\">YAML Specification</a>.\n * </p>\n */\npublic class Composer {\n    protected final Parser parser;\n    private final Resolver resolver;\n    private final Map<String, Node> anchors;\n    private final Set<Node> recursiveNodes;\n    private int nonScalarAliasesCount = 0;\n    private final LoaderOptions loadingConfig;\n    private final CommentEventsCollector blockCommentsCollector;\n    private final CommentEventsCollector inlineCommentsCollector;\n\n    public Composer(Parser parser, Resolver resolver) {\n        this(parser, resolver, new LoaderOptions());\n    }\n\n    public Composer(Parser parser, Resolver resolver, LoaderOptions loadingConfig) {\n        this.parser = parser;\n        this.resolver = resolver;\n        this.anchors = new HashMap<String, Node>();\n        this.recursiveNodes = new HashSet<Node>();\n        this.loadingConfig = loadingConfig;\n        this.blockCommentsCollector = new CommentEventsCollector(parser,\n                CommentType.BLANK_LINE, CommentType.BLOCK);\n        this.inlineCommentsCollector = new CommentEventsCollector(parser,\n                CommentType.IN_LINE);\n    }\n\n    /**\n     * Checks if further documents are available.\n     *\n     * @return <code>true</code> if there is at least one more document.\n     */\n    public boolean checkNode() {\n        // Drop the STREAM-START event.\n        if (parser.checkEvent(Event.ID.StreamStart)) {\n            parser.getEvent();\n        }\n        // If there are more documents available?\n        return !parser.checkEvent(Event.ID.StreamEnd);\n    }\n\n    /**\n     * Reads and composes the next document.\n     *\n     * @return The root node of the document or <code>null</code> if no more documents are available.\n     */\n    public Node getNode() {\n        // Collect inter-document start comments\n        blockCommentsCollector.collectEvents();\n        if (parser.checkEvent(Event.ID.StreamEnd)) {\n            List<CommentLine> commentLines = blockCommentsCollector.consume();\n            Mark startMark = commentLines.get(0).getStartMark();\n            List<NodeTuple> children = Collections.emptyList();\n            Node node = new MappingNode(Tag.COMMENT, false, children, startMark, null, FlowStyle.BLOCK);\n            node.setBlockComments(commentLines);\n            return node;\n        }\n        // Drop the DOCUMENT-START event.\n        parser.getEvent();\n        // Compose the root node.\n        Node node = composeNode(null);\n        // Drop the DOCUMENT-END event.\n        blockCommentsCollector.collectEvents();\n        if(!blockCommentsCollector.isEmpty()) {\n            node.setEndComments(blockCommentsCollector.consume());\n        }\n        parser.getEvent();\n        this.anchors.clear();\n        this.recursiveNodes.clear();\n        return node;\n    }\n\n    /**\n     * Reads a document from a source that contains only one document.\n     * <p>\n     * If the stream contains more than one document an exception is thrown.\n     * </p>\n     *\n     * @return The root node of the document or <code>null</code> if no document\n     * is available.\n     */\n    public Node getSingleNode() {\n        // Drop the STREAM-START event.\n        parser.getEvent();\n        // Compose a document if the stream is not empty.\n        Node document = null;\n        if (!parser.checkEvent(Event.ID.StreamEnd)) {\n            document = getNode();\n        }\n        // Ensure that the stream contains no more documents.\n        if (!parser.checkEvent(Event.ID.StreamEnd)) {\n            Event event = parser.getEvent();\n            Mark contextMark = document != null ? document.getStartMark(): null;\n            throw new ComposerException(\"expected a single document in the stream\",\n                    contextMark, \"but found another document\", event.getStartMark());\n        }\n        // Drop the STREAM-END event.\n        parser.getEvent();\n        return document;\n    }\n\n    private Node composeNode(Node parent) {\n        blockCommentsCollector.collectEvents();\n        if (parent != null)\n            recursiveNodes.add(parent);\n        final Node node;\n        if (parser.checkEvent(Event.ID.Alias)) {\n            AliasEvent event = (AliasEvent) parser.getEvent();\n            String anchor = event.getAnchor();\n            if (!anchors.containsKey(anchor)) {\n                throw new ComposerException(null, null, \"found undefined alias \" + anchor,\n                        event.getStartMark());\n            }\n            node = anchors.get(anchor);\n            if (!(node instanceof ScalarNode)) {\n                this.nonScalarAliasesCount++;\n                if (this.nonScalarAliasesCount > loadingConfig.getMaxAliasesForCollections()) {\n                    throw new YAMLException(\"Number of aliases for non-scalar nodes exceeds the specified max=\" + loadingConfig.getMaxAliasesForCollections());\n                }\n            }\n            if (recursiveNodes.remove(node)) {\n                node.setTwoStepsConstruction(true);\n            }\n            // drop comments, they can not be supported here\n            blockCommentsCollector.consume();\n            inlineCommentsCollector.collectEvents().consume();\n        } else {\n            NodeEvent event = (NodeEvent) parser.peekEvent();\n            String anchor = event.getAnchor();\n            // the check for duplicate anchors has been removed (issue 174)\n            if (parser.checkEvent(Event.ID.Scalar)) {\n                node = composeScalarNode(anchor, blockCommentsCollector.consume());\n            } else if (parser.checkEvent(Event.ID.SequenceStart)) {\n                node = composeSequenceNode(anchor);\n            } else {\n                node = composeMappingNode(anchor);\n            }\n        }\n        recursiveNodes.remove(parent);\n        return node;\n    }\n\n    protected Node composeScalarNode(String anchor, List<CommentLine> blockComments) {\n        ScalarEvent ev = (ScalarEvent) parser.getEvent();\n        String tag = ev.getTag();\n        boolean resolved = false;\n        Tag nodeTag;\n        if (tag == null || tag.equals(\"!\")) {\n            nodeTag = resolver.resolve(NodeId.scalar, ev.getValue(),\n                    ev.getImplicit().canOmitTagInPlainScalar());\n            resolved = true;\n        } else {\n            nodeTag = new Tag(tag);\n        }\n        Node node = new ScalarNode(nodeTag, resolved, ev.getValue(), ev.getStartMark(),\n                ev.getEndMark(), ev.getScalarStyle());\n        if (anchor != null) {\n            node.setAnchor(anchor);\n            anchors.put(anchor, node);\n        }\n        node.setBlockComments(blockComments);\n        node.setInLineComments(inlineCommentsCollector.collectEvents().consume());\n        return node;\n    }\n\n    protected Node composeSequenceNode(String anchor) {\n        SequenceStartEvent startEvent = (SequenceStartEvent) parser.getEvent();\n        String tag = startEvent.getTag();\n        Tag nodeTag;\n        \n        boolean resolved = false;\n        if (tag == null || tag.equals(\"!\")) {\n            nodeTag = resolver.resolve(NodeId.sequence, null, startEvent.getImplicit());\n            resolved = true;\n        } else {\n            nodeTag = new Tag(tag);\n        }\n        final ArrayList<Node> children = new ArrayList<Node>();\n        SequenceNode node = new SequenceNode(nodeTag, resolved, children, startEvent.getStartMark(),\n                null, startEvent.getFlowStyle());\n        if (startEvent.isFlow()) {\n            node.setBlockComments(blockCommentsCollector.consume());\n        }\n        if (anchor != null) {\n            node.setAnchor(anchor);\n            anchors.put(anchor, node);\n        }\n        while (!parser.checkEvent(Event.ID.SequenceEnd)) {\n            blockCommentsCollector.collectEvents();\n            if (parser.checkEvent(Event.ID.SequenceEnd)) {\n                break;\n            }\n            children.add(composeNode(node));\n        }\n        if (startEvent.isFlow()) {\n            node.setInLineComments(inlineCommentsCollector.collectEvents().consume());\n        }\n        Event endEvent = parser.getEvent();\n        node.setEndMark(endEvent.getEndMark());\n        inlineCommentsCollector.collectEvents();\n        if(!inlineCommentsCollector.isEmpty()) {\n            node.setInLineComments(inlineCommentsCollector.consume());\n        }\n        return node;\n    }\n\n    protected Node composeMappingNode(String anchor) {\n        MappingStartEvent startEvent = (MappingStartEvent) parser.getEvent();\n        String tag = startEvent.getTag();\n        Tag nodeTag;\n        boolean resolved = false;\n        if (tag == null || tag.equals(\"!\")) {\n            nodeTag = resolver.resolve(NodeId.mapping, null, startEvent.getImplicit());\n            resolved = true;\n        } else {\n            nodeTag = new Tag(tag);\n        }\n\n        final List<NodeTuple> children = new ArrayList<NodeTuple>();\n        MappingNode node = new MappingNode(nodeTag, resolved, children, startEvent.getStartMark(),\n                null, startEvent.getFlowStyle());\n        if (startEvent.isFlow()) {\n            node.setBlockComments(blockCommentsCollector.consume());\n        }\n        if (anchor != null) {\n            node.setAnchor(anchor);\n            anchors.put(anchor, node);\n        }\n        while (!parser.checkEvent(Event.ID.MappingEnd)) {\n            blockCommentsCollector.collectEvents();\n            if (parser.checkEvent(Event.ID.MappingEnd)) {\n                break;\n            }\n            composeMappingChildren(children, node);\n        }\n        if (startEvent.isFlow()) {\n            node.setInLineComments(inlineCommentsCollector.collectEvents().consume());\n        }\n        Event endEvent = parser.getEvent();\n        node.setEndMark(endEvent.getEndMark());\n        inlineCommentsCollector.collectEvents();\n        if(!inlineCommentsCollector.isEmpty()) {\n            node.setInLineComments(inlineCommentsCollector.consume());\n        }\n        return node;\n    }\n\n    protected void composeMappingChildren(List<NodeTuple> children, MappingNode node) {\n        Node itemKey = composeKeyNode(node);\n        if (itemKey.getTag().equals(Tag.MERGE)) {\n            node.setMerged(true);\n        }\n        Node itemValue = composeValueNode(node);\n        children.add(new NodeTuple(itemKey, itemValue));\n    }\n\n    protected Node composeKeyNode(MappingNode node) {\n        return composeNode(node);\n    }\n\n    protected Node composeValueNode(MappingNode node) {\n        return composeNode(node);\n    }\n}\n", "/**\n * Copyright (c) 2008, SnakeYAML\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.yaml.snakeyaml.issues.issue377;\n\nimport org.junit.Test;\nimport org.yaml.snakeyaml.LoaderOptions;\nimport org.yaml.snakeyaml.Yaml;\nimport org.yaml.snakeyaml.constructor.SafeConstructor;\n\nimport java.util.HashMap;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\nimport static org.junit.Assert.fail;\n\npublic class ReferencesTest {\n\n    /**\n     * Create data which is difficult to parse.\n     *\n     * @param size - size of the map, defines the complexity\n     * @return YAML to parse\n     */\n    private String createDump(int size) {\n        HashMap root = new HashMap();\n        HashMap s1, s2, t1, t2;\n        s1 = root;\n        s2 = new HashMap();\n        /*\n        the time to parse grows very quickly\n        SIZE -> time to parse in seconds\n        25 -> 1\n        26 -> 2\n        27 -> 3\n        28 -> 8\n        29 -> 13\n        30 -> 28\n        31 -> 52\n        32 -> 113\n        33 -> 245\n        34 -> 500\n         */\n        for (int i = 0; i < size; i++) {\n\n            t1 = new HashMap();\n            t2 = new HashMap();\n            t1.put(\"foo\", \"1\");\n            t2.put(\"bar\", \"2\");\n\n            s1.put(\"a\", t1);\n            s1.put(\"b\", t2);\n            s2.put(\"a\", t1);\n            s2.put(\"b\", t2);\n\n            s1 = t1;\n            s2 = t2;\n        }\n\n        // this is VERY BAD code\n        // the map has itself as a key (no idea why it may be used except of a DoS attack)\n        HashMap f = new HashMap();\n        f.put(f, \"a\");\n        f.put(\"g\", root);\n\n        Yaml yaml = new Yaml(new SafeConstructor());\n        String output = yaml.dump(f);\n        return output;\n    }\n\n    @Test\n    public void referencesWithRecursiveKeysNotAllowedByDefault() {\n        String output = createDump(30);\n        //System.out.println(output);\n        long time1 = System.currentTimeMillis();\n        // Load\n        LoaderOptions settings = new LoaderOptions();\n        settings.setMaxAliasesForCollections(150);\n        Yaml yaml = new Yaml(settings);\n        try {\n            yaml.load(output);\n            fail();\n        } catch (Exception e) {\n            assertEquals(\"Recursive key for mapping is detected but it is not configured to be allowed.\", e.getMessage());\n        }\n        long time2 = System.currentTimeMillis();\n        float duration = (time2 - time1) / 1000;\n        assertTrue(\"It should fail quickly. Time was \" + duration + \" seconds.\", duration < 1.0);\n    }\n\n    @Test\n    public void parseManyAliasesForCollections() {\n        String output = createDump(25);\n        // Load\n        // long time1 = System.currentTimeMillis();\n        LoaderOptions settings = new LoaderOptions();\n        settings.setMaxAliasesForCollections(50);\n        settings.setAllowRecursiveKeys(true);\n        Yaml yaml = new Yaml(settings);\n        yaml.load(output);\n        // Disabling this as it runs slower than 0.9 on my machine\n        // long time2 = System.currentTimeMillis();\n        // double duration = (time2 - time1) / 1000.0;\n        // assertTrue(\"It should take time. Time was \" + duration + \" seconds.\", duration > 0.9);\n        // assertTrue(\"Time was \" + duration + \" seconds.\", duration < 5.0);\n    }\n\n    @Test\n    public void referencesWithRestrictedAliases() {\n        // without alias restriction this size should occupy tons of CPU, memory and time to parse\n        String bigYAML = createDump(35);\n        // Load\n        long time1 = System.currentTimeMillis();\n        LoaderOptions settings = new LoaderOptions();\n        settings.setMaxAliasesForCollections(40);\n        settings.setAllowRecursiveKeys(true);\n        Yaml yaml = new Yaml(settings);\n        try {\n            yaml.load(bigYAML);\n            fail();\n        } catch (Exception e) {\n            assertEquals(\"Number of aliases for non-scalar nodes exceeds the specified max=40\", e.getMessage());\n        }\n        long time2 = System.currentTimeMillis();\n        float duration = (time2 - time1) / 1000;\n        assertTrue(\"It should fail quickly. Time was \" + duration + \" seconds.\", duration < 1.0);\n    }\n\n}", "/**\n * Copyright (c) 2008, SnakeYAML\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.yaml.snakeyaml.issues.issue525;\n\nimport static org.junit.Assert.assertTrue;\nimport static org.junit.Assert.fail;\n\nimport org.junit.Test;\nimport org.yaml.snakeyaml.Util;\nimport org.yaml.snakeyaml.Yaml;\nimport org.yaml.snakeyaml.error.YAMLException;\n\npublic class FuzzyStackOverflowTest {\n\n  @Test\n  public void parseOpenUnmatchedMappings() {\n    try {\n      Yaml yaml = new Yaml();\n      String strYaml = Util.getLocalResource(\"fuzzer/YamlFuzzer-4626423186325504\");\n      yaml.load(strYaml);\n      fail(\"Should report invalid YAML\");\n    } catch (YAMLException e) {\n      assertTrue(false);\n    } catch (Error e) {\n      //TODO FIXME stackoverflow\n    }\n  }\n}\n", "/**\n * Copyright (c) 2008, SnakeYAML\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.yaml.snakeyaml.issues.issue526;\n\nimport static org.junit.Assert.assertTrue;\nimport static org.junit.Assert.fail;\n\nimport org.junit.Test;\nimport org.yaml.snakeyaml.Util;\nimport org.yaml.snakeyaml.Yaml;\nimport org.yaml.snakeyaml.error.YAMLException;\n\n//OSS-Fuzz - 47027\npublic class Fuzzy47027Test {\n\n  @Test\n  public void parseOpenUnmatchedSequences_47027() {\n    try {\n      Yaml yaml = new Yaml();\n      String strYaml = Util.getLocalResource(\"fuzzer/YamlFuzzer-5427149240139776\");\n      yaml.load(strYaml);\n      fail(\"Should report invalid YAML\");\n    } catch (YAMLException e) {\n      assertTrue(false);\n    } catch (Error e) {\n      //TODO FIXME stackoverflow\n    }\n  }\n}\n", "/**\n * Copyright (c) 2008, SnakeYAML\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.yaml.snakeyaml.issues.issue527;\n\nimport static org.junit.Assert.assertTrue;\nimport static org.junit.Assert.fail;\n\nimport org.junit.Test;\nimport org.yaml.snakeyaml.Util;\nimport org.yaml.snakeyaml.Yaml;\nimport org.yaml.snakeyaml.error.YAMLException;\n\n// Stackoverflow [OSS-Fuzz - 47047]\npublic class Fuzzy47047Test {\n\n  @Test\n  public void parseOpenUnmatchedSequences_47047() {\n    try {\n      Yaml yaml = new Yaml();\n      String strYaml = Util.getLocalResource(\"fuzzer/YamlFuzzer-5868638424399872\");\n      yaml.load(strYaml);\n      fail(\"Should report invalid YAML\");\n    } catch (YAMLException e) {\n      assertTrue(false);\n    } catch (Error e) {\n      //TODO FIXME it runs for 35 seconds !!!\n    }\n  }\n}\n"], "fixing_code": ["<document xmlns=\"http://maven.apache.org/changes/1.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/changes/1.0.0 http://maven.apache.org/plugins/maven-changes-plugin/xsd/changes-1.0.0.xsd\">\n    <properties>\n        <title>YAML 1.1 parser and emitter</title>\n    </properties>\n    <body>\n        <release version=\"1.31\" date=\"in Git\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"525\">\n                Restrict nested depth for collections to avoid DoS attacks (detected by OSS-Fuzz)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"525\">\n                Add test for stackoverflow\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"522\">\n                Deserializing key \"on\" fails with Exception\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Merged PR #7: https://bitbucket.org/snakeyaml/snakeyaml/pull-requests/7 (2022-04-04)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Do not emit global TAGs by not keeping them in Parser\n                (breaks https://code.google.com/archive/p/snakeyaml/issues/149)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add an example with Lombok and ENV variable substitution (2021-12-29)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Fix issues with comments\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"517\">\n                Recognise issue with trailing TAB\n            </action>\n        </release>\n        <release version=\"1.30\" date=\"2021-12-14\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"516\">\n                Remove snakeyaml.org\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Migrate to https://bitbucket.org/snakeyaml/snakeyaml (2021-10-23)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Fix issues with comments\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"506\">\n                Improve parsing a number starting with 0x (2021-06-28)\n                Take the Float pattern from ruamel: https://pypi.org/project/ruamel.yaml\n            </action>\n        </release>\n        <release version=\"1.29\" date=\"2021-06-08\" description=\"Maintenance\">\n            <action dev=\"Wolf2323\" type=\"fix\">\n                Fix Events ordering and improve Node-Comment association (2021-05-13)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Fix corner case for comments where blank lines after plain token  (2021-03-02)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add a test for issue 500 (2021-03-14)\n            </action>\n            <action dev=\"asomov\" type=\"remove\">\n                Remove unused variable (2021-02-28)\n            </action>\n        </release>\n        <release version=\"1.28\" date=\"2021-02-22\" description=\"Maintenance\">\n            <action dev=\"maslovalex\" type=\"fix\">\n                Fix tests to work on Windows (2021-02-19)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add enumCaseSensitive property to LoaderOptions to control constructing enum with case sensitivity (2021-01-05)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"493\">\n                ENV substitution default can contain special characters (2021-01-03)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Allow for read and write YAML with Comments (2020-11-01)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"485\">\n                Alias names are too permissive compared to libyaml and future spec.\n                Follow https://github.com/yaml/yaml-spec/blob/master/rfc/RFC-0003.md (2020-10-06)\n            </action>\n        </release>\n        <release version=\"1.27\" date=\"2020-08-31\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"481\">\n                Serialize anchors that are not used by any alias (2020-08-14)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"416\">\n                Add indentWithIndicator option to improve dumping sequences (2020-07-14)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"480\">\n                Anchor should allow non ascii characters while dumping (2020-06-29)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"remove\">\n                Remove Spring related tests because they are outdated and upgrading to Spring 5\n                makes the tests fail under JDK 7 (2020-05-02)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"476\">\n                Make constructor of EnvScalarConstructor public (2020-04-24)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"474\">\n                Parse the value of byte and short after a narrowing primitive conversion (2020-04-16)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add test for different Line Break Characters in the error message (2020-03-09)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Fix yet another OWASP false positive. It complains that the Spring controller makes SnakeYAML insecure\n                even though SnakeYAML does not use Spring controller and does not depend on Spring (but the tests do).\n                Bump spring.version from 3.2.17.RELEASE to 5.2.4.RELEASE (2020-03-08)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Migrated to GIT (2020-02-29)\n            </action>\n        </release>\n        <release version=\"1.26\" date=\"2020-02-28\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"377\">\n                Allow configuration for preventing billion laughs attack (2020-02-24)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Update Maven wrapper (2020-01-18)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"468\">\n                Parse ENV variables similar to how it works in docker-compose (2019-12-25)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"468\">\n                Allow non ASCII characters in the anchor names (2019-12-23)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"462\">\n                Clean up composer internal maps after construction. Should not have any impact but\n                it does not harm (2019-10-25)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"459\">\n                The '!' tag now works the same way as for PyYAML. (12 is parsed as int instead of string)\n                The spec files are modified (spec-08-07.canonical spec-08-07.data)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add test for not implemented \"!\" tag (2019-10-11)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor Events: expose Event.ID via a getter (2019-10-05)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor ScalarAnalysis: make it immutable (2019-09-28)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"454\">\n                Add example for integer without time pattern (2019-08-22)\n            </action>\n        </release>\n        <release version=\"1.25\" date=\"2019-08-13\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"update\">\n                Deprecate setting tags in TypeDescription (2019-06-23)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"449\">\n                Add test for issue 449 (2019-06-19)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"441\">\n                Restore the way to get anchor for a Node (2019-04-13)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"437\">\n                Introduce setting to keep !!str tag for String even when it contains non-printable chars (2019-03-24)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Update plugin versions (2019-03-04)\n            </action>\n        </release>\n        <release version=\"1.24\" date=\"2019-02-28\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"update\">\n                Refactor BaseConstructor: Factored out postponed mapping logic so subclasses can effectively\n                override constructMapping2ndStep() and delegate to the postponed mapping logic.\n                This is backported from SnakeYAML engine (2019-01-26)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"431\">\n                Customize simple key length when dumping (2019-01-17)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"430\">\n                Wrap runtime exceptions into YAMLException (2019-01-14)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Fix: Null tag constructor not called when parsing top-level null value (2019-01-13)\n                (issue reported for snakeyaml-engine)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"429\">\n                Provide \"Automatic-Module-Name\" entry in MANIFEST (2018-12-16)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"426\">\n                Fix NPE when duplicate keys are not allowed and the key is null (2018-12-02)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Support java.sql classes without the need to depend on java.sql module in java9+ (2018-11-06)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Require Java 7  (2018-11-06)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"423\">\n                Date Serialization Fails for TimeZones on Daylight Savings Time (2018-11-06)\n            </action>\n        </release>\n        <release version=\"1.23\" date=\"2018-08-27\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"412\">\n                Add another getter for ScalarStyle to support backwards compatibility (2018-08-27)\n            </action>\n        </release>\n        <release version=\"1.22\" date=\"2018-08-25\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"update\">\n                Run tests under Java 11  (2018-08-19)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Use Maven 3.5.4 (2018-08-19)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"412\">\n                Restore the Boolean constructors for Events and Nodes for binary compatibility\n                of dependent projects (2018-08-17)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"411\">\n                System Property \"java.runtime.name\" is not required to be defined (2018-08-12)\n                Ensure Compatibility with Graal\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"409\">\n                Dumping Enum breaks when Enum value is Anonymous inner class (2018-08-07)\n                Solution: refactor the way to detect if the full tag can be omitted (and !!str is used instead).\n                Instead of checking whether the class for property and the class for the actual value is the same\n                we can just check that the property class is not java.lang.Enum\n            </action>\n        </release>\n        <release version=\"1.21\" date=\"2018-04-13\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"update\">\n                Scanner throws IndexOutOfBoundsException if no more token left but getToken()\n                or peekToken() called (2018-04-10)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Enhance output of token IDs (2018-04-06)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Mark: expose buffer and pointer  (2018-04-06)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"401\">\n                Restore index in Mark - it is used in JRuby (2018-03-26)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"397\">\n                Plain scalars with colons in flow sequences/mappings are valid YAML (2018-03-03)\n            </action>\n        </release>\n        <release version=\"1.20\" date=\"2018-02-28\" description=\"Maintenance\">\n            <action dev=\"maslovalex\" type=\"fix\"  issue=\"393\">\n                Improve reflective access operation to avoid warning under Java 9 (2018-02-24)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor collection node - flow style must not be null (2018-02-16)\n            </action>\n            <action dev=\"asomov\" type=\"remove\">\n                Refactor: remove unused method isResolved in Node (2018-02-15)\n            </action>\n            <action dev=\"asomov\" type=\"remove\">\n                Refactor: remove unused code in Tag (2018-02-15)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor nodes and events - use enum FlowStyle instead of Boolean (2018-02-10)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor ScalarToken, ScalarNode and ScalarEvent - use enum ScalarStyle instead of Character (2018-02-10)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor Token - remove unused code (2018-02-08)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor Mark - remove unused code (2018-02-06)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"395\">\n                Introduce DuplicateKeyException and report line number for duplicate keys\n                when creating non-Javabeans (2017-12-15)\n            </action>\n        </release>\n        <release version=\"1.19\" date=\"2017-10-14\" description=\"Maintenance\">\n            <action dev=\"maslovalex\" type=\"update\">\n                Only use FIELD access for Android in PropertyUtils (2017-08-20)\n            </action>\n            <action dev=\"maslovalex\" type=\"update\">\n                Add getAnnotations() and getAnnotation() methods to Property (2017-08-20)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"383\">\n                Some configuration properties of Representer are ignored.\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"386\">\n                Fix order of duplicate keys indices to prevent wrong removals.\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"382\">\n                Fix 382: same as 322\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"322\">\n                Fix 322: if there is no getter try to get type information from a setter\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"377\">\n                Add test for 'billion laughs attack'\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"368\">\n                Relax final restriction on TypeDescription (2017-05-05)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"375\">\n                Empty yaml file must return null instead of throwing an exception when loading a JavaBean (2017-05-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"374\">\n                Fix Number when it is used as a JavaBean property with a custom Locale (2017-04-30)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"373\">\n                Add redundant test (2017-04-06)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Provide access to node's anchor, pull request#20 (2017-03-30)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"370\">\n                Remove redundant \"Bundle-RequiredExecutionEnvironment: J2SE-1.5\" (2017-03-16)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"364\">\n                Serializing Calendar objects with certain timezone offsets renders invalid YAML (2017-02-28)\n            </action>\n        </release>\n        <release version=\"1.18\" date=\"2017-02-22\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"358\">\n                Validate DumperOptions to prevent invalid YAML to be dumped (2017-01-12)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"355\">\n                Fix for emitter to split long plain string scalars over multiple lines (2017-01-10)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Let Mark implement Serializable so that ParserException can be serialized (2016-12-15)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"354\">\n                Add tests for issue 354 (2016-12-12)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"337\">\n                Throw exception in case of duplicate keys in MappingNode and\n                LoaderOptions.allowDuplicateKeys is false. (2016-11-25)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"351\">\n                Keep same nodes order on merge (preprocess keys for MappingNode\n                and remove duplicates keeping the last one). (2016-11-22)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"349\">\n                Ignore white spaces for base64 encoded scalar (2016-11-17)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"348\">\n                Not removing parent object when composed object is an anchor. (2016-10-13)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"323\">\n                Support \"Miscellaneous Symbols and Pictographs\" (2016-09-05)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"341\">\n                Fix NPE in BaseRepresenter.multiRepresenters if it contains 'null' as value (2016-05-03)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"335\">\n                Add example for issue 335 - the same tag for different node kinds (2016-03-19)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"332\">\n                Add example for issue 332 (2016-02-24)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Build SnakeYAML for different JDKs with docker without building images (2016-02-22)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Update plugin versions (2016-02-19)\n            </action>\n        </release>\n        <release version=\"1.17\" date=\"2016-02-19\" description=\"Maintenance\">\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"318\" due-to=\"Rog Sigal\">\n                Use Thread.currentThread.getContextClassLoader in Class.forName instead of default one (2016-02-15)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"329\">\n                Add parameters to POM to change distribution server (2016-02-03)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"326\">\n                Relax some of the modifiers to make integration easier (2016-02-02)\n            </action>\n            <action dev=\"maslovalex\" type=\"update\" issue=\"310\">\n                Make use of private/protected constructors for Scalars and 'immutable' objects.\n                Added 'src/test/java8' for Java8 specific tests (requires -Pwith-java8-tests) (2016-01-07)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"320\">\n                Better support to customise BaseConstructor. Make 'composer' field and constructDocument()\n                method protected (2015-10-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"306\">\n                Better UUID support (2015-09-23)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Use Polyglot Maven: add support for YAML POM (2015-09-10)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"314\">\n                Provide ability to customize anchor names (2015-08-25)\n            </action>\n        </release>\n        <release version=\"1.16\" date=\"2015-08-18\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"308\">\n                Provide Docker image for testing under different Java 8 (2015-06-19)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"302\">\n                Convert binary byte[] to String when it matches the JavaBean property (2015-05-26)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                The source code migrated to Bitbucket. Old commits (older then 6 years) have\n                been removed. (2015-05-20)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"212\">\n                Fix a typo in an error message in ScannerImpl (2015-05-19)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"209\">\n                Do not print special characters in the error message (2015-04-16)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"199\">\n                Evaluate implementations for duplicate mapping keys.\n            </action>\n        </release>\n        <release version=\"1.15\" date=\"2015-02-19\" description=\"Maintenance\">\n            <action dev=\"asomov\" type=\"update\">\n                Apply FindBugs and PMD recommendations (2015-02-16)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Added split lines option to DumperOptions to allow line splitting to be disabled. (2015-02-08)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Use Maven 3 and update plugin versions (2015-02-05)\n            </action>\n            <action dev=\"asomov\" type=\"update\"  issue=\"205\">\n                Add test to clarify iOS emoji character in the surrogate range (2015-02-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"201\">\n                Fix grammar error in exception message (2014-11-18)\n            </action>\n        </release>\n        <release version=\"1.14\" date=\"2014-08-29\" description=\"Maintenance\">\n            <action dev=\"maslovalex\" type=\"fix\"  issue=\"197\">\n                Load JavaBean with fields using custom constructors (2014-08-18)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"192\">\n                Drop support for \"Value Key Language-Independent Type\" and '=' a standard character (2014-05-22)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\"  issue=\"191\">\n                Improve error message for invalid YAML document (2014-05-21)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"188\">\n                Improve error message for invalid YAML document (2014-03-26)\n            </action>\n            <action dev=\"asomov\" type=\"fix\"  issue=\"183\">\n                Support Number class (2013-11-07)\n            </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"182\">\n                Double.POSITIVE_INFINITY applied to float fields (2013-11-07)\n             </action>\n        </release>\n        <release version=\"1.13\" date=\"2013-08-29\" description=\"Maintenance\">\n             <action dev=\"asomov\" type=\"fix\"  issue=\"178\">\n                OSGi: Specify version for exported packages (2013-06-27)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"177\">\n                Improve error report while parsing a JavaBean (2013-05-14)\n             </action>\n              <action dev=\"Jordan\" type=\"fix\"  issue=\"135\">\n                Arrays of primitives are now fully supported (2013-04-16)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"174\">\n                Duplicate anchors in an input document should not be an error (2013-04-03)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"172\">\n                Using a locale with minimum number fraction digits breaks anchor generation (2013-03-30)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"171\">\n                Use more generic generics in BaseRepresenter (2013-03-30)\n             </action>\n        </release>\n        <release version=\"1.12\" date=\"2013-03-02\" description=\"Maintenance\">\n             <action dev=\"asomov\" type=\"update\">\n                The build is using JDK 1.6 (2013-03-02)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"169\">\n                Make Constructor.typeDefinitions protected to be more flexible (2013-02-18)\n             </action>\n             <action dev=\"asomov\" type=\"remove\">\n                Remove file AUTHORS because it does not reflect the actual situation (2012-11-09)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Improve the error message when a TAB character starts a token (2012-11-06)\n             </action>\n        </release>\n        <release version=\"1.11\" date=\"2012-09-29\" description=\"Maintenance\">\n             <action dev=\"asomov\" type=\"fix\"  issue=\"158\">\n                Fix issue 158: improve support for 32-bit characters (UTF-16 surrogate pairs) (2012-09-29)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"146\">\n                Fix issue 146: empty tags should not force explicit document start (2012-09-29)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"156\">\n                Fix issue 156: setSkipMissingProperties fails for non-scalar values (2012-09-05)\n             </action>\n             <action dev=\"asomov\" type=\"fix\"  issue=\"155\">\n                Fix issue 155: SnakeYAML must always eat its own food - a YAML document created by itself must\n                be read without exceptions (2012-09-04)\n             </action>\n             <action dev=\"asomov\" type=\"update\"  issue=\"154\">\n                Fix issue 154: Add option to skip missing properties when deserializing YAML into Java object (2012-07-25)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Add a test for issue 150 (2012-06-17)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Add a test for issue 151 (2012-06-14)\n             </action>\n             <action dev=\"asomov\" type=\"fix\">\n                Fix issue 149: Directives are no longer lost between documents (2012-06-10)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Refactor: use Version enum instead of Array of Integers.\n                This is done to simplify fixing issue 149 (2012-06-09)\n             </action>\n             <action dev=\"asomov\" type=\"fix\">\n                Add tests for issue 148  (2012-06-07)\n             </action>\n             <action dev=\"asomov\" type=\"fix\">\n                Fix issue 147: Serialized representation of character U+FFFD causes exception on deserialization  (2012-06-05)\n             </action>\n             <action dev=\"asomov\" type=\"fix\">\n                Fix issue 145: exception.getMessage() must show the line number as exception.toString() does (2012-04-03)\n             </action>\n             <action dev=\"maslovalex\" type=\"fix\">\n                Fix issue 144: improve type inference for Compact Object Notation (2012-03-16)\n             </action>\n             <action dev=\"maslovalex\" type=\"add\">\n                Improve Android support\n             </action>\n        </release>\n        <release version=\"1.10\" date=\"2012-02-08\" description=\"Maintenance\">\n             <action dev=\"asomov\" type=\"update\">\n                Fix issue 141: TimeZone is configurable in DumperOptions (2012-02-03)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Refactor with PMD: minor non-functional improvements (2012-01-28)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Refactor with PMD: Avoid unused method parameter 'index' in\n                Serializer and Emitter (2012-01-28)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Refactor with PMD: Composer - Avoid unused method parameter 'index' in\n                'Composer.composeNode(Node parent, Object index)''. It was used\n                in PyYAML for kind of XPath for YAML, but it was not imported from PyYAML (2012-01-28)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Refactor Emitter: the SPACE mutable static field could be changed by malicious code or by accident.\n                Boxed value is unboxed and then immediately reboxed (2012-01-28)\n             </action>\n             <action dev=\"asomov\" type=\"remove\">\n                Refactor with FindBugs: remove unused ScalarAnalysis.allowDoubleQuoted (2012-01-28)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Refactor with FindBugs: do not rely on default encoding (2012-01-28)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Refactor: apply FindBugs recommendations (2012-01-28)\n             </action>\n             <action dev=\"maslovalex\" type=\"fix\">\n                Fix issue 139: merge should use last key in map (2012-01-24)\n             </action>\n             <action dev=\"asomov\" type=\"fix\">\n                Fix issue 136: tabs are allowed in plain scalars. This is a deviation from PyYAML (2012-01-11)\n             </action>\n             <action dev=\"asomov\" type=\"add\" issue=\"138\">\n                Expose internal data of ReaderException (2012-01-06)\n             </action>\n             <action dev=\"asomov\" type=\"fix\" issue=\"137\">\n                Respect supplementary characters (2012-01-06)\n             </action>\n             <action dev=\"asomov\" type=\"add\">\n                Use http://mercurial.selenic.com/wiki/EolExtension to force LF  as line separator\n                for all operating systems (2011-12-20)\n             </action>\n             <action dev=\"asomov\" type=\"add\">\n                Add a test for issue 136 (2011-12-14)\n             </action>\n              <action dev=\"asomov\" type=\"remove\">\n                Deprecate the DumperOptions.calculateScalarStyle() method because it was introduced as a quick\n                fix for issue 29. Now it should not be required at all (because of the fix for issue 66),\n                or it should be implemented in the Representer (in RepresentString) (2011-10-10)\n             </action>\n             <action dev=\"asomov\" type=\"fix\">\n                Fix issue 66: literal scalar style is used by default for multiline scalars (2011-10-10)\n             </action>\n             <action dev=\"asomov\" type=\"add\">\n                An example added: how to dump multiline literal scalars (2011-10-04)\n             </action>\n             <action dev=\"asomov\" type=\"add\">\n                An example added: how to dump recursive object for issue 133 (2011-09-14)\n             </action>\n             <action dev=\"asomov\" type=\"add\">\n                A test added for issue 132 (2011-09-13)\n             </action>\n             <action dev=\"asomov\" type=\"update\">\n                Finish 1.9 release (2011-08-15)\n             </action>\n        </release>\n        <release version=\"1.9\" date=\"2011-08-15\" description=\"Introduce Yaml.loadAs() and Yaml.dumpAs() methods\">\n            <action dev=\"asomov\" type=\"update\">\n                Add a test to prove that SnakeYAML is not affected by the problem reported for libyaml\n                at http://pyyaml.org/ticket/196 (2011-07-28)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"128\">\n                Since timestamp contains ':' characters it is dumped with single quoted scalar style\n                in the flow context. The single quoted scalar style causes to dump the explicit tag.\n                In the block context the plain scalar can be used and the tag is not required. It may cause\n                unpredictable behaviour if the tag is required. See the comments in JodaTimeExampleTest (2011-07-25)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"130\">\n                Fix scientific notation inconsistency in the YAML 1.1 specification:\n                scalar '8e-06' should be parsed as a Double (2011-07-24)\n            </action>\n            <action dev=\"asomov\" type=\"remove\" issue=\"127\">\n                Do not allow to override BaseRepresenter.representData(Object data) because\n                users should instead implement Represent interface (2011-07-21)\n            </action>\n            <action dev=\"asomov\" type=\"remove\" issue=\"124\">\n                Deprecate DumperOptions.explicitRoot (2011-07-20)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"124\">\n                Add Yaml.dumpAs(Object, Tag.MAP, FlowStyle) and Yaml.dumpAsMap(Object) methods. JavaBeanDumper is marked as deprecated (2011-07-16)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"127\">\n                Add example to show how to dump a custom class (2011-07-12)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"129\">\n                Add Yaml.serialize(Node) low level method to the public API (2011-07-14)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"129\">\n                Add Yaml.represent(Object) low level method to the public API (2011-07-14)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"125\">\n                Add support for Maven 3 via 'm3' profile (2011-07-10)\n            </action>\n            <action dev=\"asomov\" type=\"remove\" issue=\"124\">\n                Remove deprecated JavaBeanParser (2011-07-05)\n            </action>\n            <action dev=\"asomov\" type=\"remove\" issue=\"124\">\n                Remove redundant JavaBeanDumper.classTags set (2011-07-03)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"124\">\n                Add Yaml.loadAs() methods. JavaBeanLoader is marked as deprecated (2011-07-03)\n            </action>\n            <action dev=\"asomov\" type=\"remove\" issue=\"124\">\n                Remove TypeDescription.root property to prepare issue 124. This is a minor backwards incompatible change.\n                Now instead of setting as root, the TypeDescription must be passed to the Contructor's constructor\n                to be taken as the root definition (2011-07-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"121\" due-to=\"Jaromir\">\n                Fix: close files in tests to avoid a possible file handle limit (2011-06-09)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"116\" due-to=\"Jim Peterson\">\n                Fix: Improved support for empty JavaBeans (2011-06-09)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"112\" due-to=\"Lethargish\">\n                Fix: Improved support for parameterised types in collections (2011-05-25)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"115\" due-to=\"elkniwt\">\n                Fix: parameterised JavaBeans fail to load and dump because they are treated as Maps (2011-05-16)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"114\" due-to=\"gileadis\">\n                Fix: Do not remove root tags of JavaBeans when it is not explicitly requested (2011-04-20)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"111\" due-to=\"JordanAngold\">\n                Fix: Long escaped tag URI sequences throw BufferOverflowException (2011-03-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"110\" due-to=\"dmitry.s.mamonov\">\n                Fix: introduce a package for external libraries and move there the 64Coder\n                and the Google's URL encoder (2011-02-24)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"109\" due-to=\"cjalmeida\">\n                Fix: ancient years must be dumped with leading zeros (2011-02-19)\n            </action>\n            <action dev=\"asomov\" type=\"remove\" due-to=\"JordanAngold\">\n                Remove unused code in Constructor: Modifier.isAbstract() is not needed any more (2011-02-18)\n            </action>\n            <action dev=\"JordanAngold\" type=\"fix\" issue=\"108\">\n                Enum's name property shall be dumped instead of the 'toString()' output (2011-02-16)\n            </action>\n        </release>\n        <release version=\"1.8\" date=\"2011-02-15\" description=\"Performance improvement\">\n            <action dev=\"asomov\" type=\"add\">\n                Add example to howto Wiki:\n                How_to_substitute_object_in_YAML_document_with_a_custom_object (2011-01-27)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                When the YAML document to be loaded is provided as String parse it directly\n                without making a Reader first (2011-01-23)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"106\">\n                Immutable data structures in StreamReader allow to share the same buffer for all\n                the Mark instances. It makes 'withMarkContext' setting redundant (2011-01-19)\n            </action>\n            <action dev=\"maslovalex\" type=\"update\" issue=\"100\">\n                Merge JavaBean properties when an explicit tag is provided (2011-01-11)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"99\">\n                Add an example for escaping line breaks in binary content (2011-01-03)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"97\">\n                Propose a solution for JavaBeans to support SortedSet property when it is encoded\n                as a sequence (2010-11-24)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"59\">\n                Simplify the way how the order of JavaBean properties is specified. Introduce\n                PropertyUtils.createPropertySet() method to be overridden when a specific order\n                is expected (2010-11-23)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"95\">\n                Fix: Loading of generic collections with Array parameter(s). (2010-11-16)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"94\">\n                Add ChangeRuntimeClassTest as an example how to change a class for a global tag (2010-11-05)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Inner objects in Constructor become protected to be more flexible when Constructor\n                is expended (2010-10-03)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"91\">\n                Apply www.snakeyaml.org domain name (2010-09-20)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"90\">\n                Move Base64Coder into another package to keep a separate copyright statement.\n                Base64Coder is left unchanged (2010-09-19)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"69\">\n                Iterable should not be serialised as sequence (2010-09-16)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Introduce 'fast' Maven profile to quickly build cobertura reports (2010-09-16)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"89\">\n                Fix: Specify plugin versions in POM (2010-09-15)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"88\">\n                Fix: Custom tag erased when referenced from generic collection (2010-09-15)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Minor refactoring in Emitter to improve performance: save calls to Constant.has() (2010-09-13)\n            </action>\n            <action dev=\"maslovalex\" type=\"update\">\n                Minor refactorings in Emitter to improve performance: create less Strings [r9185e0b3] (2010-09-10)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"79\">\n                Introduce LoaderOptions to be able to specify configuration while loading (2010-09-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"81\">\n                Representer.representJavaBeanProperty() is given the wrong tag. Instead of the property tag,\n                the tag for the JavaBean itself is provided. (2010-09-01)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Rename JvmDetector into GenericsBugDetector (2010-08-31)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"80\" due-to=\"SebastienRainville\">\n                Fix: Timestamp is not parsed properly when milliseconds start with 0 (2010-08-24)\n            </action>\n            <action dev=\"maslovalex\" type=\"update\" issue=\"79\">\n                Context for error reporting consumes a lot of resources (2010-08-21)\n            </action>\n            <action dev=\"asomov\" type=\"remove\">\n                Cleanup unused code in deprecated Loader and Dumper (2010-08-13)\n            </action>\n        </release>\n        <release version=\"1.7\" date=\"2010-08-12\" description=\"Simplify public API (drop Loader and Dumper)\">\n            <action dev=\"asomov\" type=\"update\">\n                Eclipse does not run JUnit 4 tests when they are launched for the whole project (2010-08-11)\n            </action>\n            <action dev=\"maslovalex\" type=\"update\" issue=\"55\">\n                Share PropertyUtils if not explicitly set in Constructor or Representer\n                (BeanAccess.FIELD works properly when JavaBean is identified by a root tag) (2010-08-11)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Create 1.7 Release Candidate 1 (2010-08-11)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"77\">\n                Simplify public API: Drop Dumper (2010-08-06)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"77\">\n                Simplify public API: Drop Loader (2010-08-05)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"75\" due-to=\"jon.p.hermes\">\n                Add examples to create scalars that match custom regular expression:\n                CustomImplicitResolverTest, CustomBeanResolverTest (2010-08-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"74\" due-to=\"Kevin Menard\">\n                Do not use redundant tags for arrays which are JavaBean properties. (2010-07-21)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                RecursiveSetTest proves that it is possible to construct a recursive set (2010-07-20)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"73\" due-to=\"birnbuazn\">\n                Provide sequence support for loading java.util.Set. Also provide an example\n                to serialise a java.util.Set as a sequence. (2010-07-19)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"72\" due-to=\"birnbuazn\">\n                Support java.util.Collection as a parent for List and Set (2010-07-09)\n            </action>\n            <action dev=\"maslovalex\" type=\"add\" issue=\"55\" due-to=\"birnbuazn\">\n                Allow direct field access bypassing setters and getters. Empty constructor\n                is required to support 2-step construction (2010-07-02)\n            </action>\n            <action dev=\"asomov\" type=\"update\" issue=\"69\">\n                Serialise Iterator and Iterable as sequences (2010-06-25)\n            </action>\n            <action dev=\"asomov\" type=\"update\" due-to=\"maslovalex\">\n                Change error message when 'No suitable constructor with N arguments found for class' (2010-06-23)\n            </action>\n            <action dev=\"asomov\" type=\"add\" due-to=\"Antony Stubbs\">\n                Add JodaTime example (2010-06-04)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"67\" due-to=\"Manuel Sugawara\">\n                Add possibility to create a Tag out of an URI (2010-05-31)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                URLDecoder.decode() does not fail when UTF-8 is invalid. Use\n                CodingErrorAction.REPORT to implement the failure (2010-05-21)\n            </action>\n            <action dev=\"maslovalex\" type=\"update\">\n                Fix generic collections which contain other collections (2010-05-18)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"67\" due-to=\"Manuel Sugawara\">\n                Fix: java classes containing non-ASCII characters in names are\n                incorrectly encoded (2010-05-14)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"65\" due-to=\"lerch.johannes\">\n                Fix: add checks for null arguments for JavaBeanDumper (2010-04-27)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add a test to see how stack trace is serialised (2010-04-27)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"64\" due-to=\"maxim.moschko\">\n                ClassCastException in Representer when working with ParameterizedType (2010-04-25)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Improve toString() method for Node. Since scalars cannot be recursive\n                they can be printed (2010-04-15)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"63\" due-to=\"Udo\">\n                Refactor the way arrays are constructed (2010-04-15)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"62\">\n                Add examples for dumping custom values for !!bool and !!null (2010-04-13)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"61\">\n                Fix: ClassCastException when dumping generic bean (2010-04-11)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"59\">\n                Provide an example for changing JavaBean properties order (2010-04-01)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"60\">\n                Provide example for skipping null and empty collections (2010-03-29)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"58\" due-to=\"jeff.caulfield\">\n                JavaBeanDumper.dump throws NullPointerException on list property\n                with null element (2010-03-23)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"56\" due-to=\"DZeiss\">\n                Make constructors in SafeConstructor public (2010-03-16)\n            </action>\n            <action dev=\"asomov\" type=\"update\" due-to=\"David Bernard\">\n                Releases and snapshots are available in the Sonatype Maven repository.\n                https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide\n            </action>\n            <action dev=\"obastard\" type=\"fix\" issue=\"53\" due-to=\"obastard\">\n                Enhancement for a pretty format that combines BLOCK and FLOW (2010-03-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"50\" due-to=\"sualeh.fatehi\">\n                Unable to dump JavaBean that inherits from a protected base class (2010-03-02)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Format source (2010-03-01)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Use Token.ID and Event.ID instead of just ID (2010-03-01)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Issue 50 fails in Eclipse but works with Maven (2010-03-01)\n            </action>\n        </release>\n        <release version=\"1.6\" date=\"2010-02-26\" description=\"introduce Tag class\">\n            <action dev=\"asomov\" type=\"update\">\n                Release Candidate 2 is available (2010-02-24)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"47\" due-to=\"obastard\">\n                Don't dump read-only properties by default. DumperOptions gets a setting to\n                include read-only JavaBean properties.\n                This is no backwards compatible change (2010-02-19)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"49\" due-to=\"obastard\">\n                Support GregorianCalendar. Due to Daylight Saving Time parsing the timestamp with\n                a TimeZone cannot determine the exact time (2010-02-19)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"51\" due-to=\"johann.Werner\">\n                Some Unicode characters are wrongly replaced by \\x{fffd} during\n                double quoted style dump (2010-02-15)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"48\" due-to=\"obastard\">\n                Introduce representJavaBeanProperty() method in Representer. The method\n                can be overridden to simplify custom JavaBean representation (2010-02-12)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Release Candidate 1 is available (2010-02-01)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Representer.representJavaBean() returns MappingNode (2010-01-26)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add example of serialising static fields  (2010-01-26)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add example of serialising java.io.File as scalar node for issue 46  (2010-01-25)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: introduce Chomping to avoid using null as value for Boolean.\n                Stay in line with Scala port where null is not allowed (2010-01-19)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use Event.ID enum instead of classes (2010-01-15)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use Token.ID enum instead of classes (2010-01-15)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use generic classes for DirectiveToken (2010-01-14)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: rename Reader to StreamReader to avoid name conflict with java.io.Reader (2010-01-13)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use StringBuilder instead of StringBuffer (2010-01-12)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: introduce Constant class to share String constants (2010-01-12)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Keep Tag.equals(String) to simplify transition to Tag class (2010-01-08)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: introduce Tag instead of Tags. Nodes use Tag class instead of String (2010-01-05)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"42\" due-to=\"Artem\">\n                BaseConstructor shall give more flexibility to choose a constructor at runtime (2010-01-08)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: introduce TagTuple instead of String[] (2010-01-04)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"40\" due-to=\"sitrious\">\n                Ignore tags when they are compatible with the runtime class (2010-01-04)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add example to ignore unknown tags (2009-12-08)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add Ruby example (2009-12-08)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Do not omit the tag for JavaBean properties when the tag is explicitly defined (2009-12-08)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"38\" due-to=\"gchpaco\">\n                Fix ID format for numbers over 999 (2009-12-05)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"29\" due-to=\"grignaak\">\n                Allow separate option in DumperOptions for long strings (2009-11-16)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                JavaBeanDumper: add possibility to define a custom Representer (2009-11-25)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"36\">\n                Introduce multi contructors (tag prefix). A family of tags may be processed\n                by a single constructor (2009-11-25)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor BaseConstructor: simplify second step for recursive structures (2009-11-25)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add FilterPropertyToDumpTest to show how to filter JavaBean properties (2009-11-24)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add FilterClassesConstructorTest to show how to filter created classes (2009-11-16)\n            </action>\n            <action dev=\"asomov\" type=\"update\" due-to=\"Stefan\">\n                Improve JavaDoc (2009-11-12)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add Velocity example (2009-11-03)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: rename Tuple to RecursiveTuple and hide it inside BaseConstructor (2009-11-03)\n            </action>\n        </release>\n        <release version=\"1.5\" date=\"2009-10-30\" description=\"Improve usage of generic collections in JavaBeans\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"27\" due-to=\"Polyglot Maven team\">\n                Extend Resolver to support custom implicit types (2009-10-27)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Performance improvement: use ArrayStack instead of Stack which extends Vector (2009-10-20)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"25\" due-to=\"Benjamin Bentmann\">\n                Improve usage of generic collections: while type erase makes no difference between\n                Class&lt; Foo&gt; and Class&lt; Bar&gt; at runtime, the information about generics is still\n                accessible via reflection from Method/Field. (2009-10-19)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Fix ConstructYamlObject: support recursive objects. Introduce 'resolved'\n                property for Nodes. This property supposed to help to distinguish explicit tag\n                from the resolved tag (2009-10-19)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use rootTag instead of rootType (for Class) in BaseConstructor. This is done to\n                solve the priority problem: normally explicit tag has more priority then runtime class but\n                for the root tag it is the other way around (2009-10-19)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"24\" due-to=\"shrode\">\n                Line numbers reported in Exceptions are Zero based, should be 1 based (2009-10-12)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"21\" due-to=\"ashwin.jayaprakash\">\n                Support arrays of reference types as JavaBean properties (2009-09-22)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"17\" due-to=\"jcucurull\">\n                Respect root tag for sequences (2009-09-04)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"18\" due-to=\"creiniger\">\n                SafeRepresenter respects custom tags for standard Java classes where standard tag has\n                more then one Java implementation available (Long, List, Map, Date etc) (2009-09-03)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add possibility to define a custom Class Loader. (2009-09-01)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Fixed an obscure scanner error not reported when there is no line break at the end\n                of the stream. The fix is imported from PyYAML 3.09 {ticket 118} (2009-08-31)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"16\" due-to=\"infinity0x\">\n                Cache JavaBean class properties. Tests show that the loading has become a few percents faster (2009-08-31)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Introduce ArrayStack to use push() and pop() instead of standard (and too verbose)\n                'remove(size()-1)'  (2009-08-27)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"14\" due-to=\"infinity0x\">\n                Fix: ArrayList is more efficient than LinkedList  (2009-08-26)\n            </action>\n        </release>\n        <release version=\"1.4\" date=\"2009-08-26\" description=\"better support for loading immutable objects\">\n            <action dev=\"asomov\" type=\"update\">\n                Apply Apache License Version 2.0 (2009-08-14)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"13\" due-to=\"infinity0x\">\n                Provide javadocs link to Sun Java API (2009-08-10)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Build 1.4 Release Candidate 1 (2009-08-07)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Introduce Tags.getGlobalTagForClass() to simplify tag generation in custom constructors (2009-08-06)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: introduce ImplicitTuple (2009-08-06)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"11\" due-to=\"infinity0x\">\n                Fix: create a Java instance with the following priority to choose the class:\n                Explicit tag -> Runtime class (defined in JavaBean) -> implicit tag  (2009-08-06)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"9\" due-to=\"wwagner4\">\n                Fix: Bean with no property cannot be instantiated. This is implemented via better\n                support for immutable objects. Custom Constructor may be used when there are more\n                then 1 way to create an instance (2009-08-04)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Deliver possibility to load immutable instances with no global tags. Reflection for\n                constructor arguments is used to get the runtime classes (2009-08-04)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Use more informative error message when a JavaBean property cannot\n                be created (2009-08-02)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: Constructor is rewritten. Do not overwrite methods from BaseConstructor.\n                Instead introduce ConstructScalar, ConstructSequence, ConstructMapping (2009-07-31)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Change Maven repository path: groupId='org.yaml', artifactId='snakeyaml' (2009-07-31)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"10\" due-to=\"derrick.rice\">\n                Fix: dump omits JavaBean class name when used with an alias (2009-07-28)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Generate sources and Javadoc (2009-07-27)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Node does not have the value. It is delegated to the non-abstract classes (2009-07-27)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Extends JavaBeanDumper to allow skipping global tags inside type-safe collections.\n                Introduce method setMapTagForBean() (2009-07-22)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add ConstructEmptyBeanTest to test JavaBean construction with no\n                properties in the YAML document(2009-07-22)\n            </action>\n            <action dev=\"asomov\" type=\"remove\">\n                Refactor: redesign tag management for JavaBeans in Representer.\n                Drop dynamic root tag concept (2009-07-22)\n            </action>\n            <action dev=\"asomov\" type=\"remove\">\n                Remove unused TypeDescription in Representer (2009-07-21)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Use NodeTuple instead of Node[] for mappings (2009-07-21)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Introduce JavaBeanLoader and JavaBeanDumper. Deprecate JavaBeanParser (2009-07-21)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"8\" due-to=\"Alan Gutierrez\">\n                Fix: Representer was keeping state between invocations (2009-07-21)\n            </action>\n        </release>\n        <release version=\"1.3\" date=\"2009-07-20\" description=\"complete support for recursive objects\">\n            <action dev=\"asomov\" type=\"fix\" issue=\"6\" due-to=\"infinity0x\">\n                Fix: values returned by System.identityHashCode() are not guaranteed to be unique (2009-07-14)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add a simple test for Java Generics (BirdTest). Unfortunately it shows that some JVM\n                implementations do not recognise classes for JavaBean properties at runtime.\n                It leads to unnecessary global tags. See http://code.google.com/p/snakeyaml/wiki/Documentation#Generics\n                for details (2009-07-13)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"5\" due-to=\"infinity0x\">\n                Fix: set the \"cause\" field for MarkedYAMLException (2009-07-10)\n            </action>\n            <action dev=\"maslovalex\" type=\"fix\" issue=\"1\">\n                Fix: Recursive objects are now fully supported (2009-07-09)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add support for BigDecimal as a JavaBean property (2009-07-07)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Improve test coverage for Constructor. Allow construction of JavaBeans\n                with only setter without the corresponding getter (2009-07-07)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add a test to check the proper report for IOException (2009-07-03)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" issue=\"3\" due-to=\"infinity0x\">\n                Fix: represent proper tags for JavaBeans when they are not the root of the YAML\n                document but a member of a collection (2009-07-03)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: run PMD and apply some of the recommendations (2009-06-18)\n            </action>\n            <action dev=\"asomov\" type=\"add\" issue=\"1\">\n                Create an issue for Recursive objects to be remembered (2009-06-08)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Migrate project hosting from Assembla to Google code (2009-06-08)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" due-to=\"Magne\">\n                Fix: null as a JavaBean property was not handled properly (2009-06-04)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Validate changes.xml file (2009-05-25)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" due-to=\"Magne\">\n                Fix ticket 40 in Assembla: getting an error when javabean contains java.sql.Timestamp fields (2009-05-25)\n            </action>\n        </release>\n        <release version=\"1.2\" date=\"2009-04-27\" description=\"expose low-level API\">\n            <action dev=\"asomov\" type=\"add\">\n                Add 'Yaml.parse()' method which return Events to support low level YAML processing (2009-04-20)\n            </action>\n            <action dev=\"asomov\" type=\"add\" due-to=\"Bob Jalex\">\n                Introduce LineBreak.getPlatformLineBreak (ticket 5 in Assembla) (2009-04-18)\n            </action>\n            <action dev=\"asomov\" type=\"update\" due-to=\"Bob Jalex\">\n                 Rename LineBreak.LINUX to LineBreak.UNIX (ticket 5 in Assembla) (2009-04-18)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add 'Yaml.compose()' methods which return Nodes to support YEdit (2009-04-17)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: rename enums in DumperOptions to make the names consistent (2009-04-07)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use Character instead of char primitive for style in Emitter (2009-04-07)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add possibility to parse all scalars as Strings (2009-03-30)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Merge changeset 347 from PyYAML (2009-03-30)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Respect DumperOptions with a custom Representer (2009-03-18)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Represent TAB as '\\t' instead of '(9' in the error message (2009-03-17)\n            </action>\n        </release>\n        <release version=\"1.1\" date=\"2009-03-14\" description=\"improve performance and test coverage\">\n            <action dev=\"asomov\" type=\"add\">\n                Introduce JavaBeanParser (2009-03-14)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Introduce DumperOptions.Version enum (2009-03-13)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Introduce DumperOptions.LineBreak enum (2009-03-10)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Use byte[] for binary type. (2009-03-09)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Restore Regular Expressions in Resolver. Ragel gives only 5% performance increase.\n                Fix a bug in Resolver with expanded regular expressions which caused the\n                performance problem. (2009-03-06)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Better Spring support: it is now possible to create a constructor with a String\n                as the class name. (2009-03-05)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Throw an exception when the same Loader or Dumper instance is shared between\n                different Yaml instances. Because they are statefull it is not Thread-safe. (2009-03-05)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add possibility to set a meaningful name for Yaml instance to be shown in toString(). (2009-03-05)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: declare classes which are not expected to be extended as final. (2009-03-04)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use 'final' keyword to identify immutable fields. (2009-03-04)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: do not use 'final' keyword for local variables. (2009-03-04)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Fix: respect implicit resolvers with 'null' as a first character. (2009-03-02)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use Character instead of String as a key for implicit resolvers. (2009-03-02)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Use Ragel instead of Regular Expressions for implicit types. (2009-03-02)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" due-to=\"Christophe Desguez\">\n                Fix ticket #4 (in Assembla): java.sql.Date not handled. (2009-02-28)\n            </action>\n             <action dev=\"asomov\" type=\"add\">\n                Introduce DumperOptions.DefaultFlowStyle enum (2009-02-24)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Introduce DumperOptions.DefaultScalarStyle enum (2009-02-24)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use 'switch' with Enum instead of multiple 'if' statements to distinguish nodes (2009-02-19)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: use Enum instead of String as NodeId (2009-02-19)\n            </action>\n        </release>\n        <release version=\"1.0.1\" date=\"2009-02-18\" description=\"implement Enum support\">\n            <action dev=\"asomov\" type=\"fix\">\n                Do not emit anchors for Enum (2009-02-18)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Enum as a JavaBean property (when the Enum class is implicitly defined) does\n                not need tags for both loading and dumping (2009-02-17)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Enum is emitted as a scalar node (2009-02-17)\n            </action>\n            <action dev=\"asomov\" type=\"fix\" due-to=\"James Nissel\">\n                Enum is parsed as a scalar node or as a JavaBean property (2009-02-17)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Refactor: for performance ScannerImpl.stalePossibleSimpleKeys() does not copy key Set (2009-02-10)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                By default allowUnicode=true. If it is necessary to escape Unicode use\n                DumperOptions.setAllowUnicode(false) (2009-02-09)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Implement allowUnicode setting (to escape Unicode characters on non UTF-8 terminals) (2009-02-09)\n            </action>\n            <action dev=\"asomov\" type=\"add\">\n                Add possibility to specify tags for dumping (2009-02-09)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Rename getExpRoot to getExplicitRoot to conform with\n                standard JavaBean naming convention (2009-02-09)\n            </action>\n            <action dev=\"asomov\" type=\"update\">\n                Rename explictStart and explicitEnd to standard setters to conform with\n                standard JavaBean naming convention (2009-02-09)\n            </action>\n            <action dev=\"asomov\" type=\"fix\">\n                Add possibility to specify a line break (2009-02-09)\n            </action>\n        </release>\n        <release version=\"1.0\" date=\"2009-02-06\" description=\"final 1.0 release\">\n            <action dev=\"asomov\" type=\"add\">\n                Deliver first release (2009-02-06)\n            </action>\n        </release>\n    </body>\n</document>\n", "/**\n * Copyright (c) 2008, SnakeYAML\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.yaml.snakeyaml;\n\npublic class LoaderOptions {\n\n    private boolean allowDuplicateKeys = true;\n    private boolean wrappedToRootException = false;\n    private int maxAliasesForCollections = 50; //to prevent YAML at https://en.wikipedia.org/wiki/Billion_laughs_attack\n    private boolean allowRecursiveKeys = false;\n    private boolean processComments = false;\n    private boolean enumCaseSensitive = true;\n    private int nestingDepthLimit = 50;\n\n    public boolean isAllowDuplicateKeys() {\n        return allowDuplicateKeys;\n    }\n\n    /**\n     * Allow/Reject duplicate map keys in the YAML file.\n     *\n     * Default is to allow.\n     *\n     * YAML 1.1 is slightly vague around duplicate entries in the YAML file. The\n     * best reference is <a href=\"http://www.yaml.org/spec/1.1/#id862121\">\n     * 3.2.1.3. Nodes Comparison</a> where it hints that a duplicate map key is\n     * an error.\n     *\n     * For future reference, YAML spec 1.2 is clear. The keys MUST be unique.\n     * <a href=\"http://www.yaml.org/spec/1.2/spec.html#id2759572\">1.3. Relation\n     * to JSON</a>\n     * @param allowDuplicateKeys false to reject duplicate mapping keys\n     */\n    public void setAllowDuplicateKeys(boolean allowDuplicateKeys) {\n        this.allowDuplicateKeys = allowDuplicateKeys;\n    }\n\n    public boolean isWrappedToRootException() {\n        return wrappedToRootException;\n    }\n\n    /**\n     * Wrap runtime exception to YAMLException during parsing or leave them as they are\n     *\n     * Default is to leave original exceptions\n     *\n     * @param wrappedToRootException - true to convert runtime exception to YAMLException\n     */\n    public void setWrappedToRootException(boolean wrappedToRootException) {\n        this.wrappedToRootException = wrappedToRootException;\n    }\n\n    public int getMaxAliasesForCollections() {\n        return maxAliasesForCollections;\n    }\n\n    /**\n     * Restrict the amount of aliases for collections (sequences and mappings)\n     * to avoid https://en.wikipedia.org/wiki/Billion_laughs_attack\n     * @param maxAliasesForCollections set max allowed value (50 by default)\n     */\n    public void setMaxAliasesForCollections(int maxAliasesForCollections) {\n    \tthis.maxAliasesForCollections = maxAliasesForCollections;\n    }\n\n    /**\n     * Allow recursive keys for mappings. By default, it is not allowed.\n     * This setting only prevents the case when the key is the value. If the key is only a part of the value\n     * (the value is a sequence or a mapping) then this case is not recognized and always allowed.\n     * @param allowRecursiveKeys - false to disable recursive keys\n     */\n    public void setAllowRecursiveKeys(boolean allowRecursiveKeys) {\n    \tthis.allowRecursiveKeys = allowRecursiveKeys;\n    }\n\n    public boolean getAllowRecursiveKeys() {\n        return allowRecursiveKeys;\n    }\n\n    /**\n     * Set the comment processing. By default, comments are ignored.\n     *\n     * @param processComments <code>true</code> to process; <code>false</code> to ignore\n     */\n    public void setProcessComments(boolean processComments) {\n        this.processComments = processComments;\n    }\n\n    public boolean isProcessComments() {\n        return processComments;\n    }\n\n    public boolean isEnumCaseSensitive() {\n        return enumCaseSensitive;\n    }\n\n    /**\n     * Disables or enables case sensitivity during construct enum constant from string value\n     * Default is false.\n     *\n     * @param enumCaseSensitive - true to set enum case sensitive, false the reverse\n     */\n    public void setEnumCaseSensitive(boolean enumCaseSensitive) {\n        this.enumCaseSensitive = enumCaseSensitive;\n    }\n\n    public int getNestingDepthLimit() {\n        return nestingDepthLimit;\n    }\n\n    /**\n     * Set max depth of nested collections. When the limit is exceeded an exception is thrown.\n     * Aliases/Anchors are not counted.\n     * This is to prevent a DoS attack\n     * @param nestingDepthLimit - depth to be accepted (50 by default)\n     */\n    public void setNestingDepthLimit(int nestingDepthLimit) {\n        this.nestingDepthLimit = nestingDepthLimit;\n    }\n}\n", "/**\n * Copyright (c) 2008, SnakeYAML\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.yaml.snakeyaml.composer;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\n\nimport org.yaml.snakeyaml.DumperOptions.FlowStyle;\nimport org.yaml.snakeyaml.LoaderOptions;\nimport org.yaml.snakeyaml.comments.CommentEventsCollector;\nimport org.yaml.snakeyaml.comments.CommentLine;\nimport org.yaml.snakeyaml.comments.CommentType;\nimport org.yaml.snakeyaml.error.Mark;\nimport org.yaml.snakeyaml.error.YAMLException;\nimport org.yaml.snakeyaml.events.AliasEvent;\nimport org.yaml.snakeyaml.events.Event;\nimport org.yaml.snakeyaml.events.MappingStartEvent;\nimport org.yaml.snakeyaml.events.NodeEvent;\nimport org.yaml.snakeyaml.events.ScalarEvent;\nimport org.yaml.snakeyaml.events.SequenceStartEvent;\nimport org.yaml.snakeyaml.nodes.MappingNode;\nimport org.yaml.snakeyaml.nodes.Node;\nimport org.yaml.snakeyaml.nodes.NodeId;\nimport org.yaml.snakeyaml.nodes.NodeTuple;\nimport org.yaml.snakeyaml.nodes.ScalarNode;\nimport org.yaml.snakeyaml.nodes.SequenceNode;\nimport org.yaml.snakeyaml.nodes.Tag;\nimport org.yaml.snakeyaml.parser.Parser;\nimport org.yaml.snakeyaml.resolver.Resolver;\n\n/**\n * Creates a node graph from parser events.\n * <p>\n * Corresponds to the 'Compose' step as described in chapter 3.1 of the\n * <a href=\"http://yaml.org/spec/1.1/\">YAML Specification</a>.\n * </p>\n */\npublic class Composer {\n    protected final Parser parser;\n    private final Resolver resolver;\n    private final Map<String, Node> anchors;\n    private final Set<Node> recursiveNodes;\n    private int nonScalarAliasesCount = 0;\n    private final LoaderOptions loadingConfig;\n    private final CommentEventsCollector blockCommentsCollector;\n    private final CommentEventsCollector inlineCommentsCollector;\n    // keep the nesting of collections inside other collections\n    private int nestingDepth = 0;\n    private final int nestingDepthLimit;\n\n    public Composer(Parser parser, Resolver resolver) {\n        this(parser, resolver, new LoaderOptions());\n    }\n\n    public Composer(Parser parser, Resolver resolver, LoaderOptions loadingConfig) {\n        this.parser = parser;\n        this.resolver = resolver;\n        this.anchors = new HashMap<String, Node>();\n        this.recursiveNodes = new HashSet<Node>();\n        this.loadingConfig = loadingConfig;\n        this.blockCommentsCollector = new CommentEventsCollector(parser,\n                CommentType.BLANK_LINE, CommentType.BLOCK);\n        this.inlineCommentsCollector = new CommentEventsCollector(parser,\n                CommentType.IN_LINE);\n        nestingDepthLimit = loadingConfig.getNestingDepthLimit();\n    }\n\n    /**\n     * Checks if further documents are available.\n     *\n     * @return <code>true</code> if there is at least one more document.\n     */\n    public boolean checkNode() {\n        // Drop the STREAM-START event.\n        if (parser.checkEvent(Event.ID.StreamStart)) {\n            parser.getEvent();\n        }\n        // If there are more documents available?\n        return !parser.checkEvent(Event.ID.StreamEnd);\n    }\n\n    /**\n     * Reads and composes the next document.\n     *\n     * @return The root node of the document or <code>null</code> if no more documents are available.\n     */\n    public Node getNode() {\n        // Collect inter-document start comments\n        blockCommentsCollector.collectEvents();\n        if (parser.checkEvent(Event.ID.StreamEnd)) {\n            List<CommentLine> commentLines = blockCommentsCollector.consume();\n            Mark startMark = commentLines.get(0).getStartMark();\n            List<NodeTuple> children = Collections.emptyList();\n            Node node = new MappingNode(Tag.COMMENT, false, children, startMark, null, FlowStyle.BLOCK);\n            node.setBlockComments(commentLines);\n            return node;\n        }\n        // Drop the DOCUMENT-START event.\n        parser.getEvent();\n        // Compose the root node.\n        Node node = composeNode(null);\n        // Drop the DOCUMENT-END event.\n        blockCommentsCollector.collectEvents();\n        if(!blockCommentsCollector.isEmpty()) {\n            node.setEndComments(blockCommentsCollector.consume());\n        }\n        parser.getEvent();\n        this.anchors.clear();\n        this.recursiveNodes.clear();\n        return node;\n    }\n\n    /**\n     * Reads a document from a source that contains only one document.\n     * <p>\n     * If the stream contains more than one document an exception is thrown.\n     * </p>\n     *\n     * @return The root node of the document or <code>null</code> if no document\n     * is available.\n     */\n    public Node getSingleNode() {\n        // Drop the STREAM-START event.\n        parser.getEvent();\n        // Compose a document if the stream is not empty.\n        Node document = null;\n        if (!parser.checkEvent(Event.ID.StreamEnd)) {\n            document = getNode();\n        }\n        // Ensure that the stream contains no more documents.\n        if (!parser.checkEvent(Event.ID.StreamEnd)) {\n            Event event = parser.getEvent();\n            Mark contextMark = document != null ? document.getStartMark(): null;\n            throw new ComposerException(\"expected a single document in the stream\",\n                    contextMark, \"but found another document\", event.getStartMark());\n        }\n        // Drop the STREAM-END event.\n        parser.getEvent();\n        return document;\n    }\n\n    private Node composeNode(Node parent) {\n        blockCommentsCollector.collectEvents();\n        if (parent != null)\n            recursiveNodes.add(parent);\n        final Node node;\n        if (parser.checkEvent(Event.ID.Alias)) {\n            AliasEvent event = (AliasEvent) parser.getEvent();\n            String anchor = event.getAnchor();\n            if (!anchors.containsKey(anchor)) {\n                throw new ComposerException(null, null, \"found undefined alias \" + anchor,\n                        event.getStartMark());\n            }\n            node = anchors.get(anchor);\n            if (!(node instanceof ScalarNode)) {\n                this.nonScalarAliasesCount++;\n                if (this.nonScalarAliasesCount > loadingConfig.getMaxAliasesForCollections()) {\n                    throw new YAMLException(\"Number of aliases for non-scalar nodes exceeds the specified max=\" + loadingConfig.getMaxAliasesForCollections());\n                }\n            }\n            if (recursiveNodes.remove(node)) {\n                node.setTwoStepsConstruction(true);\n            }\n            // drop comments, they can not be supported here\n            blockCommentsCollector.consume();\n            inlineCommentsCollector.collectEvents().consume();\n        } else {\n            NodeEvent event = (NodeEvent) parser.peekEvent();\n            String anchor = event.getAnchor();\n            increaseNestingDepth();\n            // the check for duplicate anchors has been removed (issue 174)\n            if (parser.checkEvent(Event.ID.Scalar)) {\n                node = composeScalarNode(anchor, blockCommentsCollector.consume());\n            } else if (parser.checkEvent(Event.ID.SequenceStart)) {\n                node = composeSequenceNode(anchor);\n            } else {\n                node = composeMappingNode(anchor);\n            }\n            decreaseNestingDepth();\n        }\n        recursiveNodes.remove(parent);\n        return node;\n    }\n\n    protected Node composeScalarNode(String anchor, List<CommentLine> blockComments) {\n        ScalarEvent ev = (ScalarEvent) parser.getEvent();\n        String tag = ev.getTag();\n        boolean resolved = false;\n        Tag nodeTag;\n        if (tag == null || tag.equals(\"!\")) {\n            nodeTag = resolver.resolve(NodeId.scalar, ev.getValue(),\n                    ev.getImplicit().canOmitTagInPlainScalar());\n            resolved = true;\n        } else {\n            nodeTag = new Tag(tag);\n        }\n        Node node = new ScalarNode(nodeTag, resolved, ev.getValue(), ev.getStartMark(),\n                ev.getEndMark(), ev.getScalarStyle());\n        if (anchor != null) {\n            node.setAnchor(anchor);\n            anchors.put(anchor, node);\n        }\n        node.setBlockComments(blockComments);\n        node.setInLineComments(inlineCommentsCollector.collectEvents().consume());\n        return node;\n    }\n\n    protected Node composeSequenceNode(String anchor) {\n        SequenceStartEvent startEvent = (SequenceStartEvent) parser.getEvent();\n        String tag = startEvent.getTag();\n        Tag nodeTag;\n        \n        boolean resolved = false;\n        if (tag == null || tag.equals(\"!\")) {\n            nodeTag = resolver.resolve(NodeId.sequence, null, startEvent.getImplicit());\n            resolved = true;\n        } else {\n            nodeTag = new Tag(tag);\n        }\n        final ArrayList<Node> children = new ArrayList<Node>();\n        SequenceNode node = new SequenceNode(nodeTag, resolved, children, startEvent.getStartMark(),\n                null, startEvent.getFlowStyle());\n        if (startEvent.isFlow()) {\n            node.setBlockComments(blockCommentsCollector.consume());\n        }\n        if (anchor != null) {\n            node.setAnchor(anchor);\n            anchors.put(anchor, node);\n        }\n        while (!parser.checkEvent(Event.ID.SequenceEnd)) {\n            blockCommentsCollector.collectEvents();\n            if (parser.checkEvent(Event.ID.SequenceEnd)) {\n                break;\n            }\n            children.add(composeNode(node));\n        }\n        if (startEvent.isFlow()) {\n            node.setInLineComments(inlineCommentsCollector.collectEvents().consume());\n        }\n        Event endEvent = parser.getEvent();\n        node.setEndMark(endEvent.getEndMark());\n        inlineCommentsCollector.collectEvents();\n        if(!inlineCommentsCollector.isEmpty()) {\n            node.setInLineComments(inlineCommentsCollector.consume());\n        }\n        return node;\n    }\n\n    protected Node composeMappingNode(String anchor) {\n        MappingStartEvent startEvent = (MappingStartEvent) parser.getEvent();\n        String tag = startEvent.getTag();\n        Tag nodeTag;\n        boolean resolved = false;\n        if (tag == null || tag.equals(\"!\")) {\n            nodeTag = resolver.resolve(NodeId.mapping, null, startEvent.getImplicit());\n            resolved = true;\n        } else {\n            nodeTag = new Tag(tag);\n        }\n\n        final List<NodeTuple> children = new ArrayList<NodeTuple>();\n        MappingNode node = new MappingNode(nodeTag, resolved, children, startEvent.getStartMark(),\n                null, startEvent.getFlowStyle());\n        if (startEvent.isFlow()) {\n            node.setBlockComments(blockCommentsCollector.consume());\n        }\n        if (anchor != null) {\n            node.setAnchor(anchor);\n            anchors.put(anchor, node);\n        }\n        while (!parser.checkEvent(Event.ID.MappingEnd)) {\n            blockCommentsCollector.collectEvents();\n            if (parser.checkEvent(Event.ID.MappingEnd)) {\n                break;\n            }\n            composeMappingChildren(children, node);\n        }\n        if (startEvent.isFlow()) {\n            node.setInLineComments(inlineCommentsCollector.collectEvents().consume());\n        }\n        Event endEvent = parser.getEvent();\n        node.setEndMark(endEvent.getEndMark());\n        inlineCommentsCollector.collectEvents();\n        if(!inlineCommentsCollector.isEmpty()) {\n            node.setInLineComments(inlineCommentsCollector.consume());\n        }\n        return node;\n    }\n\n    protected void composeMappingChildren(List<NodeTuple> children, MappingNode node) {\n        Node itemKey = composeKeyNode(node);\n        if (itemKey.getTag().equals(Tag.MERGE)) {\n            node.setMerged(true);\n        }\n        Node itemValue = composeValueNode(node);\n        children.add(new NodeTuple(itemKey, itemValue));\n    }\n\n    protected Node composeKeyNode(MappingNode node) {\n        return composeNode(node);\n    }\n\n    protected Node composeValueNode(MappingNode node) {\n        return composeNode(node);\n    }\n\n    /**\n     * Increase nesting depth and fail when it exceeds the denied limit\n     */\n    private void increaseNestingDepth() {\n        if (nestingDepth > nestingDepthLimit) {\n            throw new YAMLException(\"Nesting Depth exceeded max \" + nestingDepthLimit);\n        }\n        nestingDepth++;\n    }\n\n    /**\n     * Indicate that the collection is finished and the nesting is decreased\n     */\n    private void decreaseNestingDepth() {\n        if (nestingDepth > 0) {\n            nestingDepth--;\n        } else {\n            throw new YAMLException(\"Nesting Depth cannot be negative\");\n        }\n    }\n}\n", "/**\n * Copyright (c) 2008, SnakeYAML\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.yaml.snakeyaml.issues.issue377;\n\nimport org.junit.Test;\nimport org.yaml.snakeyaml.LoaderOptions;\nimport org.yaml.snakeyaml.Yaml;\nimport org.yaml.snakeyaml.constructor.SafeConstructor;\n\nimport java.util.HashMap;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\nimport static org.junit.Assert.fail;\n\npublic class ReferencesTest {\n\n    /**\n     * Create data which is difficult to parse.\n     *\n     * @param size - size of the map, defines the complexity\n     * @return YAML to parse\n     */\n    private String createDump(int size) {\n        HashMap root = new HashMap();\n        HashMap s1, s2, t1, t2;\n        s1 = root;\n        s2 = new HashMap();\n        /*\n        the time to parse grows very quickly\n        SIZE -> time to parse in seconds\n        25 -> 1\n        26 -> 2\n        27 -> 3\n        28 -> 8\n        29 -> 13\n        30 -> 28\n        31 -> 52\n        32 -> 113\n        33 -> 245\n        34 -> 500\n         */\n        for (int i = 0; i < size; i++) {\n\n            t1 = new HashMap();\n            t2 = new HashMap();\n            t1.put(\"foo\", \"1\");\n            t2.put(\"bar\", \"2\");\n\n            s1.put(\"a\", t1);\n            s1.put(\"b\", t2);\n            s2.put(\"a\", t1);\n            s2.put(\"b\", t2);\n\n            s1 = t1;\n            s2 = t2;\n        }\n\n        // this is VERY BAD code\n        // the map has itself as a key (no idea why it may be used except of a DoS attack)\n        HashMap f = new HashMap();\n        f.put(f, \"a\");\n        f.put(\"g\", root);\n\n        Yaml yaml = new Yaml(new SafeConstructor());\n        String output = yaml.dump(f);\n        return output;\n    }\n\n    @Test\n    public void referencesWithRecursiveKeysNotAllowedByDefault() {\n        String output = createDump(30);\n        //System.out.println(output);\n        long time1 = System.currentTimeMillis();\n        // Load\n        LoaderOptions settings = new LoaderOptions();\n        settings.setMaxAliasesForCollections(150);\n        Yaml yaml = new Yaml(settings);\n        try {\n            yaml.load(output);\n            fail();\n        } catch (Exception e) {\n            assertEquals(\"Recursive key for mapping is detected but it is not configured to be allowed.\", e.getMessage());\n        }\n        long time2 = System.currentTimeMillis();\n        float duration = (time2 - time1) / 1000;\n        assertTrue(\"It should fail quickly. Time was \" + duration + \" seconds.\", duration < 1.0);\n    }\n\n    @Test\n    public void parseManyAliasesForCollections() {\n        String output = createDump(25);\n        // Load\n        // long time1 = System.currentTimeMillis();\n        LoaderOptions settings = new LoaderOptions();\n        settings.setMaxAliasesForCollections(50);\n        settings.setAllowRecursiveKeys(true);\n        Yaml yaml = new Yaml(settings);\n        yaml.load(output);\n        // Disabling this as it runs slower than 0.9 on my machine\n        // long time2 = System.currentTimeMillis();\n        // double duration = (time2 - time1) / 1000.0;\n        // assertTrue(\"It should take time. Time was \" + duration + \" seconds.\", duration > 0.9);\n        // assertTrue(\"Time was \" + duration + \" seconds.\", duration < 5.0);\n    }\n\n    @Test\n    public void referencesWithRestrictedNesting() {\n        // without alias restriction this size should occupy tons of CPU, memory and time to parse\n        int depth = 35;\n        String bigYAML = createDump(depth);\n        // Load\n        long time1 = System.currentTimeMillis();\n        LoaderOptions settings = new LoaderOptions();\n        settings.setMaxAliasesForCollections(1000);\n        settings.setAllowRecursiveKeys(true);\n        settings.setNestingDepthLimit(depth);\n        Yaml yaml = new Yaml(settings);\n        try {\n            yaml.load(bigYAML);\n            fail();\n        } catch (Exception e) {\n            assertEquals(\"Nesting Depth exceeded max 35\", e.getMessage());\n        }\n        long time2 = System.currentTimeMillis();\n        float duration = (time2 - time1) / 1000;\n        assertTrue(\"It should fail quickly. Time was \" + duration + \" seconds.\", duration < 1.0);\n    }\n\n}", "/**\n * Copyright (c) 2008, SnakeYAML\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.yaml.snakeyaml.issues.issue525;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\nimport static org.junit.Assert.fail;\n\nimport org.junit.Test;\nimport org.yaml.snakeyaml.LoaderOptions;\nimport org.yaml.snakeyaml.Util;\nimport org.yaml.snakeyaml.Yaml;\nimport org.yaml.snakeyaml.error.YAMLException;\n\npublic class FuzzyStackOverflowTest {\n  @Test\n  public void parseOpenUnmatchedMappings() {\n    try {\n      Yaml yaml = new Yaml();\n      String strYaml = Util.getLocalResource(\"fuzzer/YamlFuzzer-4626423186325504\");\n      yaml.load(strYaml);\n      fail(\"Should report invalid YAML\");\n    } catch (YAMLException e) {\n      assertEquals(\"Nesting Depth exceeded max 50\", e.getMessage());\n    }\n  }\n\n  @Test\n  public void parseOpenUnmatchedMappingsWithCustomLimit() {\n    try {\n      LoaderOptions options = new LoaderOptions();\n      options.setNestingDepthLimit(1000);\n      Yaml yaml = new Yaml(options);\n      String strYaml = Util.getLocalResource(\"fuzzer/YamlFuzzer-4626423186325504\");\n      yaml.load(strYaml);\n      fail(\"Should report invalid YAML\");\n    } catch (YAMLException e) {\n      assertEquals(\"Nesting Depth exceeded max 1000\", e.getMessage());\n    }\n  }\n}\n", "/**\n * Copyright (c) 2008, SnakeYAML\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.yaml.snakeyaml.issues.issue526;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.fail;\n\nimport org.junit.Test;\nimport org.yaml.snakeyaml.LoaderOptions;\nimport org.yaml.snakeyaml.Util;\nimport org.yaml.snakeyaml.Yaml;\nimport org.yaml.snakeyaml.error.YAMLException;\n\n//OSS-Fuzz - 47027\npublic class Fuzzy47027Test {\n\n  @Test\n  public void parseOpenUnmatchedSequences_47027() {\n    try {\n      Yaml yaml = new Yaml();\n      String strYaml = Util.getLocalResource(\"fuzzer/YamlFuzzer-5427149240139776\");\n      yaml.load(strYaml);\n      fail(\"Should report invalid YAML\");\n    } catch (YAMLException e) {\n      assertEquals(\"Nesting Depth exceeded max 50\", e.getMessage());\n    }\n  }\n\n  @Test\n  public void setCustomLimit100() {\n    try {\n      LoaderOptions options = new LoaderOptions();\n      options.setNestingDepthLimit(100);\n      Yaml yaml = new Yaml(options);\n      String strYaml = Util.getLocalResource(\"fuzzer/YamlFuzzer-5427149240139776\");\n      yaml.load(strYaml);\n      fail(\"Should report invalid YAML\");\n    } catch (YAMLException e) {\n      assertEquals(\"Nesting Depth exceeded max 100\", e.getMessage());\n    }\n  }\n}\n", "/**\n * Copyright (c) 2008, SnakeYAML\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.yaml.snakeyaml.issues.issue527;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.fail;\n\nimport org.junit.Test;\nimport org.yaml.snakeyaml.Util;\nimport org.yaml.snakeyaml.Yaml;\nimport org.yaml.snakeyaml.error.YAMLException;\n\n// Stackoverflow [OSS-Fuzz - 47047]\npublic class Fuzzy47047Test {\n\n  @Test\n  public void parseKeyIndicators_47047() {\n    try {\n      Yaml yaml = new Yaml();\n      String strYaml = Util.getLocalResource(\"fuzzer/YamlFuzzer-5868638424399872\");\n      //yaml.load(strYaml);\n      //TODO FIXME fail(\"Should report invalid YAML\");\n    } catch (YAMLException e) {\n      assertEquals(\"Nesting Depth exceeded max 25\", e.getMessage());\n    }\n  }\n}\n"], "filenames": ["src/changes/changes.xml", "src/main/java/org/yaml/snakeyaml/LoaderOptions.java", "src/main/java/org/yaml/snakeyaml/composer/Composer.java", "src/test/java/org/yaml/snakeyaml/issues/issue377/ReferencesTest.java", "src/test/java/org/yaml/snakeyaml/issues/issue525/FuzzyStackOverflowTest.java", "src/test/java/org/yaml/snakeyaml/issues/issue526/Fuzzy47027Test.java", "src/test/java/org/yaml/snakeyaml/issues/issue527/Fuzzy47047Test.java"], "buggy_code_start_loc": [8, 25, 39, 121, 17, 18, 18], "buggy_code_end_loc": [8, 116, 318, 135, 39, 40, 40], "fixing_code_start_loc": [9, 26, 38, 121, 18, 18, 18], "fixing_code_end_loc": [12, 133, 345, 137, 52, 53, 38], "type": "CWE-400", "message": "The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.", "other": {"cve": {"id": "CVE-2022-25857", "sourceIdentifier": "report@snyk.io", "published": "2022-08-30T05:15:07.667", "lastModified": "2022-10-06T15:30:09.227", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections."}, {"lang": "es", "value": "El paquete org.yaml:snakeyaml versiones desde 0 y anteriores a 1.31, son vulnerables a una Denegaci\u00f3n de Servicio (DoS) debido a una falta de limitaci\u00f3n de profundidad anidada para las colecciones"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "report@snyk.io", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-400"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:snakeyaml_project:snakeyaml:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.31", "matchCriteriaId": "4911A85B-287B-4900-8ACE-5BA60949D7BE"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*", "matchCriteriaId": "07B237A9-69A3-4A9C-9DA0-4E06BD37AE73"}]}]}], "references": [{"url": "https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174", "source": "report@snyk.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://bitbucket.org/snakeyaml/snakeyaml/issues/525", "source": "report@snyk.io", "tags": ["Exploit", "Issue Tracking", "Third Party Advisory"]}, {"url": "https://github.com/snakeyaml/snakeyaml/commit/fc300780da21f4bb92c148bc90257201220cf174", "source": "report@snyk.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2022/10/msg00001.html", "source": "report@snyk.io", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://security.snyk.io/vuln/SNYK-JAVA-ORGYAML-2806360", "source": "report@snyk.io", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/snakeyaml/snakeyaml/commit/fc300780da21f4bb92c148bc90257201220cf174"}}