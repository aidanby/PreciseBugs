{"buggy_code": ["# Changelog\n\nAll notable changes to this project are documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nwith the exception that this project **does not** follow Semantic Versioning.\n\nFor details about compatibility between different releases, see the **Commitments and Releases** section of our README.\n\n## [Unreleased]\n\n### Added\n\n- Network Server ID (NSID) used for Backend Interfaces interoperability via the `ns.interop.id` and `dcs.edcs.ns-id` configuration options.\n  - In the Network Server, `ns.interop.id` acts as a fallback value for `sender-ns-id` in Join Server interoperability configuration.\n\n### Changed\n\n### Deprecated\n\n- Device Claiming Server configuration option `dcs.edcs.network-server.home-ns-id`. Use `dcs.edcs.ns-id` instead.\n\n### Removed\n\n### Fixed\n\n### Security\n\n## [3.24.0] - 2023-02-02\n\n### Added\n\n- List of end-devices can now be sorted by `last_seen_at` field. Unseen devices will be shown last.\n- End devices now contain `lora_alliance_profile_ids` field.\n- Add `source` config option for TLS certificates in LoRaWAN Backend Interfaces interop client and The Things Join Server device claiming configuration. This value can be `file` (existing behavior) or `key-vault`.\n\n### Changed\n\n- `serial_number` field is now moved to the root of the end device structure. `vendor_id` and `vendor_profile_id` are now moved to the `lora_alliance_profile_ids`.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of added columns and views.\n\n### Deprecated\n\n- Configuring certificate authorities per LoRaWAN Backend Interfaces SenderID (`interop.sender-client-ca`) is now deprecated and support will be removed in a future version of The Things Stack.\n\n### Removed\n\n- The device version identifiers no longer have the `serial_number`, `vendor_id` and `vendor_profile_id` fields.\n\n## [3.23.2] - 2023-01-18\n\n### Changed\n\n- Deletion of the last admin user or removal of its admin status via an update operation now returns an error.\n- Do not allow to remove the collaborator of an entity if it is the last collaborator (in the Console).\n\n### Fixed\n\n- When searching for end-devices, specifying `last_seen_at` as the field in which the devices will be sorted by no longer returns an error.\n- Errors during removal of collaborators the application collaborator form not being forwarded to the user in the Console.\n- Importing devices via CSV no longer skips the first header column when BOM bytes are present.\n\n## [3.23.1] - 2022-12-14\n\n### Added\n\n- List of end-devices can now be sorted by `last_seen_at` field. Unseen devices will be shown last.\n\n### Fixed\n\n- It is now allowed to set `0` for ping slot frequency and beacon frequency in the Network Layer Settings of the end device general settings in the Console.\n- MAC parameters that have the `desired_` will be hidden from the end device general settings for multicast end devices in the Console.\n\n## [3.23.0] - 2022-11-30\n\n### Added\n\n- The Things Join Server 2.0 (type `ttjsv2`) for claiming with Device Claiming Server.\n- All Join Servers with a `/64` JoinEUI prefix are contacted concurrently with LoRaWAN Backend Interfaces interoperability. This should only be used with ambiguous JoinEUIs and when migrating Join Servers.\n\n### Changed\n\n- Gateway EUI is no longer unset when deleting a gateway, meaning it could be recovered if no other gateway claimed it. This requires a schema migration (`ttn-lw-stack is-db migrate`) because of the change in the database's `gateway_eui_index`.\n- The new database driver is no longer specific to the Identity Server and is now activated using the `db.pgdriver` feature flag (instead of `is.pgdriver`).\n\n### Removed\n\n- The Things Join Server 1.0 (type `ttjs`) for claiming with Device Claiming Server. Use The Things Join Server 2.0 (type `ttjsv2`) instead.\n\n### Fixed\n\n- Devices with pending session and MAC state may now successfully be imported.\n- Client creation with an organization API key will no longer send an email without user information to the admins. Instead, the API key name will be used and if that is empty the API key ID will be the default.\n- Allow providing DevEUI for ABP end devices with a LoRaWAN specification lower or equal to 1.0.4 in the end device onboarding screen in the Console.\n- Faulty field validation for byte payloads in the uplink payload formatter panel in the Console.\n- `serial_number` field is now properly stored.\n\n## [3.22.2] - 2022-11-10\n\n### Added\n\n- The `is.gormstore` experimental flag has been added. Swaps the underlying Identity Server store implementation if set to true.\n\n### Changed\n\n- Class B and C downlinks will no longer be automatically retried indefinitely if none of the gateways are available at the scheduling moment, and the downlink paths come from the last uplink.\n  - This was already the behavior for downlinks which had their downlink path provided explicitly using the `class_b_c.gateways` field.\n  - The downlinks will be evicted from the downlink queue and a downlink failure event will be generated. The failure event can be observed by the application using the `downlink_failed` message, which is available in all integrations.\n- Event history and payload storage TTL has now 1% jitter.\n- The underlying store implementation has been changed to be by default based on `bun` instead of `gorm`. The previous store implementation can be reactivated using the `is.gormstore` experimental flag.\n\n### Removed\n\n- The `is.bunstore` experimental flag has been removed.\n\n### Fixed\n\n- Do not require AppKey when skipping Join Server registration in end device onboarding in the Console.\n- Fix auto generation of device ID when using DevEUI generator in the Console.\n- Fix several device onboarding issues with ABP in the Console.\n  - Do not ask for a JoinEUI.\n  - Reinitialize form properly when switching between ABP and OTAA.\n- Issue with pasting values into byte input at the wrong position in the Console.\n- Issue with updating field masks in the webhook edit form in the Console.\n\n## [3.22.1] - 2022-10-19\n\n### Changed\n\n- Option to ignore logs from selected gRPC methods now supports ignoring logs for selected errors on method.\n    Examples:\n    - `--grpc.log-ignore-methods=\"/ttn.lorawan.v3.GsNs/HandleUplink\"`: log is skipped when no error occurs.\n    - `--grpc.log-ignore-methods=\"/ttn.lorawan.v3.GsNs/HandleUplink:pkg/networkserver:duplicate_uplink;pkg/networkserver:device_not_found\"`: log is skipped when either `pkg/networkserver:duplicate_uplink` or `pkg/networkserver:device_not_found` error occurs (but not on success).\n    - `--grpc.log-ignore-methods=\"/ttn.lorawan.v3.GsNs/HandleUplink:;pkg/networkserver:duplicate_uplink\"`: log is skipped on success or when `pkg/networkserver:duplicate_uplink` error occurs.\n- The Gateway Server now takes into consideration the extra duty cycle checks present in the LoRa Basics Station forwarder. Previously the Gateway Server may accept the scheduling of downlinks which the packet forwarder would silently drop.\n  - Note that in some rare cases in which the LoRa Basics Station duty cycle is stricter than the windowed approach used by The Things Stack, the scheduling will fail and this will be visible via `ns.down.data.schedule.fail` events. Note that this is actually a positive outcome - it allows the Network Server to schedule the downlink via another gateway, while previously the downlink would be scheduled but get silently dropped on the gateway.\n\n## [3.22.0] - 2022-10-06\n\n### Added\n\n- Add more specific rights for OAuth clients.\n\n### Changed\n\n- The flow for adding end devices has been updated in the Console.\n  - Device QR codes can now be scanned to speed up end device onboarding.\n  - Claiming end devices from external Join Servers is now possible seemlessly from the same onboarding flow.\n- LoRa coding rate now defined in `DataRate` instead of `Band`.\n- The Network Server will now schedule a potentially empty downlink in order to stop end devices from sending sticky MAC commands.\n- Factory preset frequencies may now be provided for bands with fixed channel plans, such as US915 or AU915. The factory preset frequencies are interpreted as the only channels which are enabled at boot time.\n- `TxParamSetupReq` MAC command priority has been increased.\n- `DevStatusReq` MAC command priority has been lowered.\n\n### Removed\n\n- Removed coding rate from `TxSettings` as it is now defined in `DataRate`.\n\n### Fixed\n\n- `--mac-settings.adr.mode.disabled`, `--mac-settings.adr.mode.dynamic` and `--mac-settings.adr.mode.static` flags of the `end-device update` command.\n- Pagination in `sessions` and `access tokens` tables in the Console.\n- `LinkADRReq` MAC command generation for LoRaWAN 1.0 and 1.0.1 end devices.\n- `LinkADRReq` no longer attempts to enable channels which have not yet been negotiated with the end device.\n- Downlink path selection for uplinks which are not LoRa modulated.\n- Issues with byte inputs in the Console.\n  - Pasting values into the input leading to issues in some cases.\n  - Values being typed double on android phones.\n- Console showing deleted collaborator after successful deletion in application collaborator list.\n- Console crashing after deleting an organization.\n\n## [3.21.2] - 2022-09-14\n\n### Added\n\n- New `ListBands` RPC on the `Configuration` service.\n  - Added support to CLI. Available via the `end-devices list-bands` command.\n- CLI support for listing PHY versions via the `end-devices list-phy-versions` CLI command.\n- New `NetID` and `DeviceAddressPrefixes` RPC on the `NS` service.\n  - Added support on CLI. Available via the `end-devices get-net-id` and `end-devices get-dev-addr-prefixes` commands.\n- Support for loading end device template from Device Repository when importing devices using a CSV file.\n- Experimental support for normalized payload.\n- Support management of deleted users in the Console.\n- Decoded payloads are now visible for downlinks in the Console.\n- Support for dynamic ping slot frequencies, as used by the US915 and AU915 bands.\n- Support for LoRa Basics Station beaconing.\n\n### Changed\n\n- Deprecated `attributes` from `GatewayAntenna` definition. While it was present in the API it was never stored in the database.\n- Absolute time downlinks (such as class B ping slots or class C absolute time downlinks) are now using the native class B downlink API of LoRa Basics Station.\n- Only gateways which are guaranteed to be GPS capable may now be used for absolute time downlinks. This ensures that gateways that have an unknown time source are not used for absolute time scheduling.\n- The static ADR mode may now steer the end device to use custom data rates such as SF7BW250, FSK and LR-FHSS.\n- The Console will try to resolve invalid state errors during login with an automatic refresh.\n- Error details are now displayed in a modal instead of within the notification element in the Console.\n\n### Removed\n\n- Experimental support for `LoRa Basics Station` gateway GPS timestamps which use the wrong precision (milliseconds instead of microseconds). Please ensure that your gateway has been updated to the latest firmware.\n\n### Fixed\n\n- The Gateway Server scheduler no longer considers the absolute time of a downlink to be the time of arrival.\n- The Network Server now correctly handles the command that may succeed a `LinkADRAns` response.\n- LR-FHSS data rate matching.\n- Console data rate rendering of non-LoRa modulations.\n\n### Security\n\n- End device network layer form crashing in some situations in the Console device general settings.\n- End device overview crashing in some situations in the Console.\n- Device import when using Join Server-only deployments.\n- QRG can generate QR Codes without the claim authentication code.\n\n## [3.21.1] - 2022-08-24\n\n### Added\n\n- New `SearchAccounts` RPC on the `EntityRegistrySearch` service.\n- Prompt user to confirm navigation when changes have not been saved in the payload formatter form to prevent big change-drafts from getting lost.\n- Event data pushed by webhooks can now be filtered with field masks.\n  - Support for the field mask setup was added for both CLI and Console.\n\n### Changed\n\n- Gateway registration in the Console has been updated to simplify the onboarding experience.\n\n### Fixed\n\n- CLI command `end-device template create` no longer breaks when providing field mask values.\n- Device repository services no longer require ApplicationID in its request URL.\n- Importing ABP devices via the CSV format now correctly handles the missing session key ID.\n\n## [3.21.0] - 2022-08-11\n\n### Added\n\n- Component selector for Join Server interoperability configuration. This allows administrators to declare separate Network Server and Application Server configuration for the same JoinEUI ranges in the same interoperability configuration. See [documentation](https://www.thethingsindustries.com/docs/reference/interop-repository/).\n- `BatchGetGatewayConnectionStats` RPC to fetch Gateway Connection Stats for a batch of gateways.\n- The ability to disable the downlink scheduling mechanism for individual end devices (`mac-settings.schedule-downlinks`).\n  - This option is useful during a migration procedure in order to force the end device to join the new network. The Network Server will no longer schedule any data downlinks or MAC commands, and will stop answering potential join requests.\n- A new implementation of the Identity Server storage layer. In v3.21.0 the new implementation is not yet used by default, but it can be enabled with the `is.bunstore` feature flag. A new database driver can be enabled with the `is.pgdriver` feature flag.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of added columns and views.\n- Support for comma-separated (`,`) values in The Things Stack CSV file format for importing end devices.\n- Support for the `RxParamSetup`, `RxTimingSetup`, `TxParamSetup`, and `DlChannel` sticky answer mechanism. The commands were supported previously, but subsequent sticky responses would cause the Network Server to drop the MAC command buffer in certain situations.\n\n### Changed\n\n- Deleted users are no longer included in primary email addresses uniqueness checks. This allows a user to create a new account which uses the email address of a deleted account.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) due to updated indices.\n- The CLI settings fields `retry-config.enable_metadata` and `retry-config.default_timeout` have been renamed to `retry.enable-metadata` and `retry.default-timeout` for consistency reasons.\n- Generated device ID based on a DevEUI from an imported CSV file is now prepended by `eui-`. This is consistent with generated device IDs by the Console.\n- The Claim Authentication Code (CAC) field is stored in the Identity Server instead of the Join Server.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n  - CAC values stored currently in the Join Server should be migrated to the Identity Server. One method is to run the following CLI commands on each device with a CAC.\n    - Read the current values using `ttn-lw-cli dev get <application-id> <device-id> --claim-authentication-code`. This will fetch the value stored in the Join Server as a fallback.\n    - Write back the value read `ttn-lw-cli dev set <application-id> <device-id> --claim-authentication-code.valid_from [xxx] --claim-authentication-code.valid_to [xxx] --claim-authentication-code.value <xxx>`. This will by default write to the Identity Server.\n    - Note that this requires a minimum CLI version of 3.21.0.\n- Device Repository no longer uses the `ApplicationID` for validating requests. Authentication is still necessary, but the `ApplicationID` field has been deprecated in the Device Repository API.\n\n### Fixed\n\n- Console showing `404 Not Found` errors for pages containing user IDs in the path, when the user ID has a length of two.\n- CLI no longer panics when deleting a device without JoinEUI, this scenario only occurred when deleting a device that uses ABP.\n- Console crashing when navigating to certain Packet Broker network configuration pages.\n- Packet Broker network pages becoming inaccessible until refreshing after a user navigates to a non-existing network.\n- The batch update query for `EndDevice.LastSeenAt` field now specifies the data type of the placeholders.\n  - This resolves an issue in the Console where `Last activity` values were inconsistent.\n\n## [3.20.2] - 2022-07-20\n\n### Added\n\n- More fields were added to the csv end-device migration procedure. The details on which fields were added can be found [here](https://www.thethingsindustries.com/docs/getting-started/migrating/device-csv/).\n- Authorization management in the Account app.\n- Gateway remote address to gateway connection statistics.\n\n### Fixed\n\n- Encoding of DevAddr, EUI and similar fields in `text/event-stream` responses.\n- GPS time leap second calculations taking a new leap second into consideration for 6th of July 2022.\n\n## [3.20.1] - 2022-06-29\n\n### Added\n\n- Support inviting users in the Console.\n\n### Changed\n\n- In AS923 frequency plans, the Network Server will skip the RX1 window if the data rate is ambiguous.\n  - This change occurs in old Regional Parameters versions in which the initial downlink dwell time setting of the end device is not specified. The end device may have the downlink dwell time setting either enabled or disabled, and due to this the data rate of the RX1 window is ambiguous.\n  - This ambiguity exists until the Network Server is successful in negotiating the dwell time limitations using the TxParamSetupReq MAC command. This will occur automatically and does not require any external input.\n  - If you already know the boot dwell time settings of your end device, you may provide them via the `--mac-settings.downlink-dwell-time` and `--mac-settings.uplink-dwell-time` MAC settings. This will ensure that RX1 transmissions are available from the first uplink of the session.\n\n### Removed\n\n- Sorting on associated rights in the API keys table.\n\n### Fixed\n\n- `last activity` not updating when an end device joins for the first time in the Console.\n- A bug that would show the \"Status count periodicity\"-field in the Console as `200` when actually set to `0`.\n- A bug causing map viewports to be set in odd locations when setting end device/gateway locations.\n- Console crashing when sorting by associated rights in the API keys table.\n\n## [3.20.0] - 2022-06-15\n\n### Added\n\n- OAuth client management in the account app.\n- Support claim protection when claiming end devices on The Things Join Server.\n- CLI commands `notifications list` and `notifications set-status` to manage user notifications.\n- Support for class B and C downlink transmissions through multiple gateways simultaneously.\n\n### Changed\n\n- Entities are now fully validated when updated in the stores.\n  - Previously only the updated paths where validated. This lead to situations in which a partial update could cause the entity as a whole to reach an invalid state.\n- Application, gateway, end device and organization-tables in the Console are now sorted by creation time by default (newest first).\n- Collaborator and API Key tables can now be sorted in the Console.\n- The application table in the Console now shows the amount of end devices.\n- The organizations table in the Console now shows the amount of collaborators.\n- Table layouts for several entities have been improved on the Console.\n\n### Fixed\n\n- End devices running on MAC versions higher or equal to 1.1 showing network downlink frame counters instead of application downlink frame counters.\n- Wrong representation of time values between midnight and 1am (eg. 24:04:11) in the Console in some cases.\n\n## [3.19.2] - 2022-05-25\n\n### Added\n\n- Allow setting an expiry date for API keys in the Console\n- New event type `gs.gateway.connection.stats` with connection statistics. A new event is sent at most every `gs.update-connection-stats-debounce-time` time and at least every `gs.update-connection-stats-interval` time.\n- Button to export as JSON end device `mac-settings` and `mac-state` in the Console.\n- Support for the `FOpts encryption, usage of FCntDwn` LoRaWAN 1.1 erratum.\n\n### Changed\n\n- Event type for `gs.up.receive` event to `GatewayUplinkMessage`.\n- Default debounce time for updating connection stats in de Gateway Server (configuration setting `gs.update-connection-stats-debounce-time`) is now 30 seconds.\n- Error code when importing CSV file with invalid LoRaWAN or Regional Parameters version.\n- Emails sent by the Identity Server now also contain HTML versions.\n  - For the images in these emails to work, an absolute `is.email.network.assets-base-url` (and optionally `is.email.network.branding-base-url`) needs to be set in configuration.\n- Notification emails are now sent through the Notification Service of the Identity Server.\n- \"Last activity\"-information in the Console is now sourced as a single aggregate from the Identity Server.\n- End device overview in the Console.\n  - Showing MAC/PHY versions and used frequency plan.\n  - Hiding the entity description if not set.\n  - Showing information of pending sessions.\n  - Automatically updating session info (no refresh necessary to schedule downlinks after a device has joined).\n  - Showing session start time.\n- The Things Stack is now built with Go 1.18.\n- Layout of webhook and Pub/Sub forms to improve UX.\n- The Network Server Address used for End Device Claiming is fetched from the configuration instead of client input.\n\n### Removed\n\n- The ability to create custom email templates.\n\n### Fixed\n\n- Support `app_eui` as alias for `join_eui` in CSV file import, per documentation.\n- End devices frame counts being displayed as `n/a` when event stream contained historical data message events.\n- Gateway general settings (Basic settings) not saving changes in some cases.\n- Contact info validation not possible when user is already logged in.\n- CLI not allowing devices to be created or updated.\n- End device creation no longer errors on missing application info rights.\n- Missing success notification when successfully deleting an application in the Console.\n- CLI create commands for applications, gateways and clients no longer have their decoded ID emptied when using the `--user-id` flag.\n- Metric `ttn_lw_events_channel_dropped_total` not getting updated.\n- Dropped events when calling the Stream RPC with a long tail.\n\n### Security\n\n- Security fix for an issue where the description and list of rights of arbitrary API keys could be retrieved by any logged-in user if the 24-bit random API key ID was known.\n\n## [3.19.1] - 2022-05-04\n\n### Changed\n\n- Application Server now decodes downlink if a downlink decoder is present and binary payload is scheduled.\n\n### Fixed\n\n- End devices frame counts being displayed as `n/a` when event stream contained historical data message events.\n- Gateway general settings (Basic settings) not saving changes in some cases.\n\n## [3.19.0] - 2022-04-21\n\n### Added\n\n- Session management page in Account App.\n- Status page references in the Console.\n- Notification Service API that will allow users to receive notifications about their registered entities.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added tables.\n- Add `network_server_address`, `application_server_address` and `join_server_address` to applications.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- New ADR settings API, which allows stronger control over the ADR algorithm.\n  - The new settings fields can be found under `mac-settings.adr`, and are mutually exclusive with `use-adr` and `adr-margin`. The legacy settings need to be unset before the new API options may be used.\n  - `mac-settings.adr.mode.disabled` completely disables the ADR algorithm.\n  - `mac-settings.adr.mode.static.data-rate-index`, `mac-settings.adr.mode.static.nb-trans`, `mac-settings.adr.mode.static.tx-power-index` allow the user to provide static ADR parameters to be negotiated with the end device. These options persist over multiple sessions and do not require a session reset in order to be propagated to the current session.\n  - `mac-settings.adr.mode.dynamic.min-data-rate-index` and `mac-settings.adr.mode.dynamic.max-data-rate-index` control the data rate index range which the Network Server will attempt to negotiate with the end device. Note that if the provided interval is disjoint with the available data rate indices, no negotiation will take place.\n  - `mac-settings.adr.mode.dynamic.min-tx-power-index` and `mac-settings.adr.mode.dynamic.max-tx-power-index` have similar behavior, but for transmission power indices.\n  - `mac-settings.adr.mode.dynamic.min-nb-trans` and `mac-settings.adr.mode.dynamic.max-nb-trans` have similar behavior, but for NbTrans.\n  - `mac-settings.adr.mode.dynamic.margin` may be used to provide the margin of the ADR algorithm. It replaces the old `adr-margin` setting.\n  - `use-adr` and `adr-margin` are still supported, but deprecated. Any future API usage should instead use the `mac-settings.adr` settings.\n- Service to parse QR codes and return the data within.\n\n### Changed\n\n- Sortable tables are now sorted by default in the Console\n\n### Fixed\n\n- Console determining gateways as \"Other cluster\" even though using the same host if server addresses not matching exactly (e.g. due to using different host or scheme).\n- Inconsistency in setting gateway's LNS Auth key in the Console.\n- CLI no longer informs the user that is using the default JoinEUI when passing its value via flags.\n- Generating device ID from a DevEUI when importing a CSV file.\n- The `is-db migrate` command that failed when running on databases created by `v3.18`.\n- Some error messages being displayed as `error:undefined:undefined` in the Console, e.g. in the live data view.\n- Missing `query` flag on CLI search commands.\n\n## [3.18.2] - 2022-03-29\n\n### Added\n\n- Support for importing end devices using a CSV file. See [documentation](https://www.thethingsindustries.com/docs/reference/data-formats/#csv) for the data format.\n- Support claiming end devices in an external Join Server (ex: The Things Join Server).\n- Support to fetch LoRaWAN end device profiles using numeric identifiers.\n\n### Changed\n\n- Replace `as.down.data.forward` to `as.down.data.receive` in default event filter, so that decrypted and decoded dowlink payload can be examined in the Console.\n\n### Fixed\n\n- Join-accept scheduling if it took more than ~1.2 seconds to process the device activation with default configuration. These slow device activations can be observed when using external Join Servers.\n- Fix issues in the webhook forms causing webhooks to be created with all message types enabled and no way of deactivating message types.\n- Fix validation issue in the webhook form not detecting message type paths with more than 64 characters.\n- Fix \"reactivate\"-webhook button in the Console.\n- Port returned by the LBS LNS discovery message if standard 80/443 ports are used.\n\n## [3.18.1] - 2022-03-09\n\n### Added\n\n- Add HTTP basic authentication configuration to the webhooks form in the Console.\n- Show repository formatter code in the payload formatter form in the Console and allow pasting the application and payload formatter code when using the JavaScript option.\n- gRPC service to Gateway Configuration Server so that gateway configurations can be obtained via gRPC requests.\n- The option to configure the Redis idle connection pool timeout, using the `redis.idle-timeout` setting.\n- New RP002 regional parameters as options during device registration in the Console.\n- Default gateway visibility configuration in Packet Broker agent in the Console.\n\n### Changed\n\n- The custom webhook option is now shown at the top of the list in the Console when adding new webhooks.\n- Wording around webhook statuses to `Healthy`, `Requests failing` and `Pending`.\n- The uplink event preview in the Console now shows the highest SNR.\n- When scheduling downlink messages with decoded payload, the downlink queued event now contains the encoded, plain binary payload.\n- When Application Server forwards downlink messages to Network Server, the event payload now contains the encrypted LoRaWAN `FRMPayload`.\n- The Network Server will now match downlink acknowledgements on the `cache` redis cluster (previously the `general` cluster was used).\n- Gateway Connection statistics updates are now debounced. The debounce period occurs before the statistics are stored, and can be configured using the `gs.update-connection-stats-debounce-time` setting (default 5 seconds).\n- Payload formatter form layout in the Console.\n- Event publication when the Redis backend is used may no longer block the hot path. Instead, the events are now asynchronously published, which may render their ordering to change.\n  - The events are queued and published using the worker pool mechanism, under the `redis_events_transactions` pool.\n  - The length of the queue used by the pool may be configured using the `events.redis.publish.queue-size` setting.\n  - The maximum worker count used by the pool may be configured using the `events.redis.publish.max-workers` setting.\n\n### Removed\n\n- Ability to select the `Repository` payload formatter type for end devices that have no Device Repository association or have no associated repository payload formatter.\n\n### Fixed\n\n- Consistent ordering of entities with equal values for the sort field.\n- Fix `xtime` sent to LBS gateways for Class C downlinks.\n\n## [3.18.0] - 2022-02-23\n\n### Added\n\n- Retain at most 10 recent session keys in the Join Server. This avoids a slowly growing number of session keys in the Join Server's database.\n  - This requires a database migration (`ttn-lw-stack js-db migrate`).\n- Add TTL for gateway connection stats. Can be configured with the option `gs.connection-stats-ttl`.\n- Add `query` field to search requests, allowing to search for a string in any of ID, Name, Description and EUI (for entities that have EUIs).\n- Added fallback values for end device import in the Console.\n\n### Changed\n\n- The minimum required Redis version is now 6.2.\n- Applications on other cluster will be hidden in Applications list in the Console.\n\n### Deprecated\n\n- Gateway Server setting `gs.update-connection-stats-debounce-time` is no longer valid.\n\n### Fixed\n\n- Webhook statuses being shown as pending regardless of their actual condition.\n- Device activation flow with a LoRaWAN Backend Interfaces 1.1 capable Join Server.\n  - Join Servers using Backend Interfaces 1.1 (protocol `BI1.1`) must be configured with a `sender-ns-id` containing the EUI of the Network Server.\n- Fix `time.Duration` flags in CLI.\n- Gateway Server will no longer leave permanent gateway connection stats data on the registry when crashing.\n\n## [3.17.2] - 2022-01-30\n\n### Added\n\n- Add configurable storage limit to device's DevNonce in the JoinServer. Can be configured using the option `js.dev-nonce-limit`.\n- Fix copy button in API key modal in the Console.\n- Enable copying and format transformations of byte values in the event previews in the Console.\n- Attribute `administrative_contact` on \"gateway eui taken\" error to help users resolve gateway EUI conflicts.\n- Add retry capability for cli requests. Can be configured with the options found in `retry-config`, some of the configuration options are `retry-config.max` and `retry-config.default-timeout`.\n\n### Changed\n\n- Webhook maximum header value length extended to 4096 characters.\n- Limited the end device event types that are included in application event streams to only application layer events, errors and warnings. Other end device events can still be received when subscribing to end device device events.\n- Several small improvements to the styling, structuring and input logic of forms in the Console.\n\n### Fixed\n\n- CLI Completion and Documentation commands no longer try to make a server connection.\n- When an end device has both `NwkKey` and `AppKey` provisioned in the Join Server, `NwkKey` is used for MIC and session key derivation when activating the device in LoRaWAN 1.0.x. This is per LoRaWAN 1.1 specification.\n- Gateway Server will no longer report the gateways as being both connected and disconnected at the same time.\n\n## [3.17.1] - 2022-01-12\n\n### Changed\n\n- Gateways are removed from the Packet Broker Mapper API when unsetting the location public setting. This is to remove gateways from the map. Previously, the location was still set, but it did not get updated.\n\n### Fixed\n\n- Rate limiting of cluster authenticated RPCs.\n- CLI panic when setting end devices.\n\n## [3.17.0] - 2022-01-07\n\n### Added\n\n- Support reading the Join Server's default JoinEUI and using this in the CLI for end device creation.\n  - The Join Server has a new API `GetDefaultJoinEUI`.\n  - The default JoinEUI can be configured on the Join Server using the option `--js.default-join-eui`.\n- Filtering of end device frequency plans in end device forms based on band id in the Console.\n- Showing automatically set entity locations in the Console.\n- Applications, OAuth clients, gateways and organizations now have an `administrative_contact` and `technical_contact`.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n\n### Deprecated\n\n- The `contact_info` fields of applications, OAuth clients, gateways, organizations and users.\n\n### Fixed\n\n- CLI panic when getting devices.\n- Application uplink processing serialization behavior in the Application Server.\n\n## [3.16.2] - 2021-12-17\n\n### Added\n\n- User defined antenna gain for LBS gateways.\n- Webhooks now have a health status associated with them. Webhooks that fail successively are now disabled for a period of time.\n  - Failure in this context means that the HTTP endpoint returned a non-2xx status code.\n  - A successful HTTP request will reset the failure counter.\n  - The number of allowed successive failures and cooldown period can be configured using the `--as.webhooks.unhealthy-attempts-threshold` and `--as.webhooks.unhealthy-retry-interval` configuration options.\n- Webhook enabled path validation in the Console.\n\n### Changed\n\n- Increased the maximum gRPC message size to 16MB.\n- Gateways which have been deleted are now automatically disconnected by the Gateway Server.\n- Mark off and hide and restrict access to end devices that are registered on a different cluster in the Console.\n- Show more detailed last activity information inside tooltip info in the Console.\n- Add a button to allow exporting the event log in the Console.\n\n### Fixed\n\n- Access to application payload formatters for users with `RIGHT_APPLICATION_SETTINGS_BASIC` right.\n- End device mac settings handling in the Console.\n- Uplink and downlink counters display on end device activity in the Console.\n- Join settings handling in JS-only deployments in the Console.\n- Configuring Packet Broker listed option when Packet Broker Agent is configured with a Packet Broker tenant API key.\n- Contact info validation through the Account app.\n\n## [3.16.1] - 2021-11-26\n\n### Added\n\n- Support for fine timestamps and frequency offsets sent by gateways with SX1303 concentrator using the legacy UDP protocol.\n- Support for resetting end device session context and MAC state in the Console.\n- The Content-Security-Policy header (that was previously behind the `webui.csp` feature flag) is now enabled by default.\n- Default `Cache-Control: no-store` headers.\n- `Cache-Control: public, max-age=604800, immutable` headers for hashed static files.\n- Experimental support for BasicStation GPS timestamps which use the wrong precision (milliseconds instead of microseconds).\n  - The Gateway Server will attempt to determine the correct GPS timestamp from the provided `gpstime` based on the time at which the upstream message has been received.\n  - This workaround will be available until the related gateway vendors will release patches for this issue.\n- Firmware version of The Things Kickstarter Gateway are written to the gateway attributes upon receiving a valid status message.\n- Desired mac settings to end device general settings in the Console.\n- Experimental support for Azure Blob Storage. Only authentication via Managed Identity is supported.\n\n### Changed\n\n- Gateway server disconnects LoRa Basics Station gateways that stop sending pongs to server pings. This does not apply to gateways that don't support pongs.\n- The new plugin for reading/writing JSON in our API (that was previously behind the `jsonpb.jsonplugin` feature flag) is now enabled by default. All API responses should be equivalent, but in some cases object fields may be in a different order.\n\n### Fixed\n\n- The reported sub-band's `downlink_utilization` in gateway connection stats now represents the utilization of the available duty-cycle time.\n- Missing fields when admins list non-owned entities.\n- Using the correct timestamp when retreiving the \"Last activity\" data point for Gateways on initial page loads in the Console.\n- Events reappearing in the end device data view after clearing them when navigating back and forth.\n\n## [3.16.0] - 2021-11-12\n\n### Added\n\n- `ttn_lw_as_subscription_sets_publish_success_total` and `ttn_lw_as_subscription_sets_publish_failed_total` metrics to track the number of subscription set publish attempts.\n- Application Server advanced distribution settings:\n  - `as.distribution.global.individual.subscription-blocks` controls if the Application Server should block while publishing traffic to individual global subscribers (such as MQTT clients).\n  - `as.distribution.global.individual.subscription-queue-size` controls how many uplinks the Application Server should buffer for an individual global subscriber. Note that when the buffer is full, the Application Server will drop the uplinks if `--as.distribution.global.individual.subscription-blocks` is not enabled. Use a negative value in order to disable the queue.\n  - `as.distribution.local.broadcast.subscription-blocks` controls if the Application Server should block while publishing traffic to broadcast local subscribers (such as webhooks and application packages matching).\n  - `as.distribution.local.broadcast.subscription-queue-size` controls how many uplinks the Application Server should buffer for an broadcast local subscriber. Has the same semantics as `--as.distribution.global.individual.subscription-queue-size`.\n  - `as.distribution.local.individual.subscription-blocks` controls if the Application Server should block while publishing traffic to individual local subscribers (such as PubSub integrations).\n  - `as.distribution.local.individual.subscription-queue-size` controls how many uplinks the Application Server should buffer for an individual local subscriber. Has the same semantics as `--as.distribution.global.individual.subscription-queue-size`.\n- `ttn_lw_gs_txack_received_total`, `ttn_lw_gs_txack_forwarded_total` and `ttn_lw_gs_txack_dropped_total` metrics, which track the transmission acknowledgements from gateways.\n- `gs.txack.receive`, `gs.txack.drop` and `gs.txack.forward` events, which track the transmission acknowledgements from gateways.\n- `ttn-lw-stack as-db migrate` command to migrate the Application Server database. This command records the schema version and only performs migrations if on a newer version.\n  - Use the `--force` flag to force perform migrations.\n- Server-side event filtering with the `names` field.\n\n### Changed\n\n- Gateway Server default UDP worker count has been increased to 1024, from 16.\n- Application Server webhooks and application packages default worker count has been increased to 1024, from 16.\n- Application Server no longer sets the end device's `session.started_at` and `pending_session.started_at`. The session start time should be retrieved from the Network Server, per API specification.\n  - This requires an Application Server database migration (`ttn-lw-stack as-db migrate`) to clear the `started_at` field in existing (pending) sessions.\n- Console changing to server-side event filtering (used to be client-side).\n\n### Removed\n\n- The `ttn_lw_gs_status_failed_total`, `ttn_lw_gs_uplink_failed_total` metrics. `ttn_lw_gs_status_dropped_total` and `ttn_lw_gs_uplink_dropped_total` should be used instead, as they contain the failure cause.\n- The `gs.status.fail` and `gs.up.fail` events. `gs.status.drop` and `gs.up.drop` should be used instead, as they contain the failure cause.\n- The `data_rate_index` field in uplink message metadata. Observe the fully described data rate in the `data_rate` field instead.\n- LoRaWAN data rate index reported to LoRa Cloud DMS.\n- Dockerfile doesn't define environmental variables `TTN_LW_BLOB_LOCAL_DIRECTORY`, `TTN_LW_IS_DATABASE_URI` and `TTN_LW_REDIS_ADDRESS` anymore. They need to be set when running the container: please refer to `docker-compose.yml` for example values.\n- `CockroachDB` from development tooling as well as config option within `docker-compose.yml`.\n  - This also changes the default value of the `--is.database-uri` option, so it can connect to the development Postgres database by default.\n\n### Fixed\n\n- Handling of NaN values in our JSON API.\n- Receiver metadata from more than one antenna is now available in messages received from Packet Broker.\n- Unhelpful error message when aborting the OIDC Login in the Console.\n- Parsing of multi-word description search queries.\n\n## [3.15.3] - 2021-10-26\n\n### Fixed\n\n- Gateway disconnection when location updates from status messages are enabled.\n- Table entries not allowing to be opened in new tabs in the Console.\n- Right clicking on table entries navigating to respective entity in the Console.\n\n## [3.15.2] - 2021-10-22\n\n### Added\n\n- `tls.cipher-suites` config option to specify used cipher suites.\n- Support for enhanced security policies of Packet Broker services.\n- Handling of MAC and PHY versions in end device forms based on selected frequency plan in the Console.\n- Support for scheduling downlink messages as JSON in the Console.\n- Support for Packet Broker authentication through LoRaWAN Backend Interfaces. This adds the following configuration options:\n  - `interop.public-tls-address`: public address of the interop server. The audience in the incoming OAuth 2.0 token from Packet Broker is verified against this address to ensure that other networks cannot impersonate as Packet Broker;\n  - `interop.packet-broker.enabled`: enable Packet Broker to authenticate;\n  - `interop.packet-broker.token-issuer`: the issuer of the incoming OAuth 2.0 token from Packet Broker is verified against this value.\n- Support for LoRaWAN Backend Interfaces in Identity Server to obtain an end device's NetID, tenant ID and Network Server address with the use of a vendor-specifc extension (`VSExtension`). This adds the following configuration options:\n  - `is.network.net-id`: the NetID of the network. When running a Network Server, make sure that this is the same value as `ns.net-id`.\n  - `is.network.tenant-id`: the Tenant ID in the host NetID. Leave blank if the NetID that you use is dedicated for this Identity Server.\n- Configuration option `experimental.features` to enable experimental features.\n- Tooltip descriptions for \"Last activity\" values (formerly \"Last seen\") and uplink/downlink counts in the Console.\n- Status pulses being triggered by incoming data in the Console.\n- Packet broker page crashing when networks with a NetID of `0` are present.\n- Allowing to toggle visibility of sensitive values in text inputs in the Console.\n- Webhook failed event.\n\n### Changed\n\n- Searching for entity IDs is now case insensitive.\n- Renamed entitie's \"Last seen\" to \"Last activity\" in the Console.\n- The database queries for determining the rights of users on entities have been rewritten to reduce the number of round-trips to the database.\n- The default downlink path expiration timeout for UDP gateway connections has been increased to 90 seconds, and the default connection timeout has been increased to 3 minutes.\n  - The original downlink path expiration timeout was based on the fact that the default `PULL_DATA` interval is 5 seconds. In practice we have observed that most gateways actually send a `PULL_DATA` message every 30 seconds instead in order to preserve data transfer costs.\n- The default duration for storing (sparse) entity events has been increased to 24 hours.\n\n### Removed\n\n- Option to select targeted stack components during end device import in the Console.\n\n### Fixed\n\n- LoRaWAN Backend Interfaces 1.1 fields that were used in 1.0 (most notably `SenderNSID` and `ReceiverNSID`). Usage of `NSID` is now only supported with LoRaWAN Backend Interfaces 1.1 as specified.\n- Connection status not being shown as toast notification.\n- Registering and logging in users with 2 character user IDs in the Account App.\n- Frequency plan display for the gateway overview page in the Console.\n- Profile settings link not being present in the mobile menu in the Console.\n- Calculation of \"Last activity\" values not using all available data in the Console.\n- Layout jumps due to length of \"Last activity\" text.\n- Invalid `session` handling in Network Layer settings form in the Console.\n\n### Security\n\n- Network Servers using LoRaWAN Backend Interfaces to interact with the Join Server can now provide a single Network Server address in the X.509 Common Name of the TLS client certificate (the old behavior) or multiple Network Server addresses in the X.509 DNS Subject Alternative Names (SANs). DNS names have precedence over an address in the Common Name.\n\n## [3.15.1] - 2021-10-01\n\n### Added\n\n- Packet Broker gateway visibility management (default settings only). See `ttn-lw-cli packetbroker home-networks gateway-visibilities --help` for more information.\n\n### Changed\n\n- The Gateway Server worker pools may now drop workers if they are idle for too long.\n- FPort = 0 uplinks are no longer decoded by the Application Server, and the Network Server no longer provides the frame payload to the Application Server for these messages.\n\n### Fixed\n\n- Emails to admins about requested OAuth clients.\n- `session` handling for joined OTAA end devices in the Console.\n- Empty Join Server address handling in end device creation form in the Console.\n- Data Rate to data rate index matching for uplinks and downlinks.\n\n## [3.15.0] - 2021-09-17\n\n### Added\n\n- RPC to query supported PHY versions for a given Band ID.\n- Non-TLS LNS endpoint support.\n\n### Changed\n\n- Update to Go 1.17.\n- LBS timestamp rollover threshold.\n- Layout of error pages.\n- The Application Server worker pools may now drop workers if they are idle for too long.\n- Improved error page UX in the Console.\n\n### Fixed\n\n- Entity purge handling for non-admin users in the Console.\n- URL field validation in webhook forms in the Console when value is not trimmed.\n- Not rendering site header and footer for error pages in some situations.\n- Not providing a copy button for error pages in some situations.\n- Improved errors for invalid URLs.\n- Limit length of search queries within tables in the Console to 50 to comply with API validation.\n- External Join Server address handling in end device creation form in the Console.\n- Updating `supports_class_b` field in the end device general settings page in the Console.\n\n## [3.14.2] - 2021-08-27\n\n### Added\n\n- CLI warnings about insecure connections.\n- CLI warnings about using the `--all` flag.\n- Packet Broker network listed switch in the Console.\n- Improved errors for invalid command-line flags.\n- Validation of entity attributes in the Console, with regards to maximum length for keys and values.\n- CLI command to decode raw LoRaWAN frames (`ttn-lw-cli lorawan decode`), useful for debugging purposes.\n- Options to restore or purge deleted applications, gateways and organizations in the Console.\n- Handling of default mac settings values when manually registering end devices in the Console.\n- Add a new `class_b_c_downlink_interval` field that can be configured to set the minimum interval between a network initiated downlink (Class B & Class C) and an arbitrary downlink per device.\n- Retrieve count of upstream messages from the Storage Integration by end device.\n  - See the new `GetStoredApplicationUpCount` RPC.\n  - See the new `ttn-lw-cli applications storage count` and `ttn-lw-cli end-devices storage count` CLI commands.\n\n### Changed\n\n- The Identity Server now returns a validation error when trying to update the EUIs of an end device.\n- Network Server no longer accepts RX metadata from Packet Broker if the originating forwarder network equals the current Network Server (by NetID and cluster ID, based on`ns.net-id` and `ns.cluster-id` configuration). This avoids duplicate RX metadata as well as redundant downlink scheduling attempts through Packet Broker after the cluster's Gateway Server already failed to schedule.\n- Usability of the end device import function in the Console.\n  - Show a per-device report when errors occur.\n  - More structural changes to the process to improve UX.\n\n### Removed\n\n- Packet Broker mutual TLS authentication; only OAuth 2.0 is supported now.\n- `request_details` from errors in the Console.\n\n### Fixed\n\n- Generated CLI configuration for The Things Stack Community Edition.\n- End device access with limited rights in the Console.\n- Parsing of ID6 encoded EUIs from Basic Station gateways.\n- Warnings about unknown fields when getting or searching for gateways.\n- Internal Server Errors from `pkg/identityserver/store`.\n- Console rendering blank pages in outdated browsers due to missing or incomplete internationalization API.\n- Error in edit user form (Console) when submitting without making any changes.\n- `description` field not being fetched in edit user form (admin only) in the Console.\n- Ignore invalid configuration when printing configuration with `ttn-lw-cli config` or `ttn-lw-stack config`.\n- Emails about API key changes.\n- Avoid rendering blank pages in the Console for certain errors.\n- Blank page crashes in the Console for certain browsers that do not fully support `Intl` API.\n- End device session keys handling in the Console.\n- Byte input width in Safari in the Console.\n\n## [3.14.1] - 2021-08-06\n\n### Added\n\n- New config option `--as.packages.timeout` to control the message processing timeout of application packages.\n- Option to view and copy error details in full view errors in the Console.\n- Metrics for CUPS requests.\n- Language chooser in the footer in the Console.\n- Japanese language support in the Console.\n\n### Changed\n\n- Cache Root CA for client TLS configuration.\n- Identity Server no longer allows removing the `_ALL` right from entity collaborators if that leaves the entity without any collaborator that has the `_ALL` right.\n- The Network Server application uplink queue may now be skipped if the Application Server peer is available at enqueue time.\n- The interval for updating gateways in Packet Broker is now 10 minutes (was 5 minutes) and the timeout is 5 seconds (was 2 seconds).\n\n### Fixed\n\n- Improved errors when ordering search requests by non-existent fields.\n- LNS authentication key handling for gateways in the Console.\n\n## [3.14.0] - 2021-07-23\n\n### Added\n\n- Gateway antenna placement; unknown, indoor or outdoor. This can now be specified with CLI, e.g. for the first antenna: `ttn-lw-cli gateways set <gateway-id> --antenna.index 0 --antenna.placement OUTDOOR`. The antenna placement will be reported to Packet Broker Mapper.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Payload formatter length validation in the Console.\n- User session management (listing and deleting) in the Identity Server and the CLI.\n- Improved logging for the OAuth server.\n- LR-FHSS modulation\n  - Additional fields for the Gateway and Rx Metadata API. This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n  - Support for LR-FHSS fields when translating uplink messages with the UDP protocol.\n- Network Server now appends network identifiers in forwarded uplink messages. These are populated from the `ns.net-id` and the new `ns.cluster-id` configuration option.\n  - See the new `uplink_message.network_identifiers.net_id`, `uplink_message.network_identifiers.cluster_id` and `uplink_message.network_identifiers.tenant_id` fields.\n  - This can be useful for HTTP webhooks to determine the Network Server that received and forwarded an uplink message.\n- `GetDefaultMACSettings` RPC for requesting the default and desired MAC settings for a Band (Frequency Plan) and LoRaWAN regional parameters version.\n- Error handling for missing templates in device repository form in the Console.\n- Opt out of Packet Broker for individual gateways, see the new `disable_packet_broker_forwarding` gateway option.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n  - This is only relevant when Packet Broker is enabled and configured by the network operator.\n- Gateways are now disconnected when settings affecting the connection with Gateway Server change. Use the `gs.fetch-gateway-interval` and `gs.fetch-interval-jitter` to configure how often the gateway is fetched from the entity registry.\n- Small UX improvements to the LoRaCloud DAS forms in the Console.\n- End device first activation timestamp in the Identity Server end device store.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- `AppJs` interface for applications to get the LoRaWAN AppSKey directly from the Join Server.\n- Console support for DevEUI generation from the configured DevEUI address block.\n  - This requires `console.ui.dev-eui-issuing-enabled` and `console.ui.dev-eui-app-limit` to be set with the same values as in the Identity Server configuration.\n- Gateway antenna placement selection in the Console.\n\n### Changed\n\n- When a gateway uplink message contains duplicate data uplinks, only the one with the highest RSSI are forwarded.\n- The HTTP port now allows HTTP/2 connections over cleartext (h2c).\n- `ttn-lw-stack ns-db migrate` command records the schema version and only performs migrations if on a newer version.\n  - Use the `--force` flag to force perform migrations.\n- Any authenticated user in the network can now list the collaborators of entities in the network.\n- The search RPCs no longer require fields to be specified in the field mask when those fields are already specified as filters.\n- When generating client configuration with the CLI `use` command, automatically set the correct Identity Server and OAuth Server addresses for The Things Stack Cloud and The Things Stack Community Edition.\n\n### Removed\n\n- The `old` log format.\n\n### Fixed\n\n- Network Server ADR algorithm data rate adjustment behavior on negative margin.\n- CLI `gateway set --antenna.remove` command failing to remove gateway antennas in some cases.\n- CLI `gateway set --antenna.gain <gain>` command crashing when no gateway antennas are present.\n- Webhook template path variable expansion of query parameters.\n- LBS LNS Auth Secret displays garbage value when updated.\n- Transmit confirmation messages for LoRa Basics Station gateways.\n- Instability and frequent crashes when internet connection is lost in the Console.\n- Panic in GCS when CUPS rotation is set without a key.\n- Rate limiting for `GatewayRegistry.GetGatewayIdentifiersForEUI` is now applied per gateway EUI.\n- Network Server ensures that the Band ID in the end device version identifiers match the configured Frequency Plan of the device.\n\n## [3.13.3] - 2021-07-02\n\n### Added\n\n- Email sent to admins when an OAuth client is requested by a non-admin user.\n- Packet Broker UI in the Console (admin only).\n- New config option `--console.oauth.cross-site-cookie` to control access to OAuth state cookie between origins.\n  - This option needs to be set to `true` (default is `false`) in multi-cluster deployments in order to support OAuth clients that use POST callbacks.\n- Application Server forwards upstream messages of type `ApplicationDownlinkSent` for application downlink messages that were acknowledged with a TxAck message from the gateway.\n  - MQTT clients can subscribe to the topic `v3/{application-id}/devices/{device-id}/down/sent`.\n  - For HTTP webhooks, make sure that the **Downlink Sent** messages are enabled.\n- Query for the most recent application messages from the Storage Integration API with the new `last` parameter (for example, `?last=10m` or `?last=2h`). See also `--last` argument for the `ttn-lw-cli applications storage get` and `ttn-lw-cli end-devices storage get` commands.\n- A location solved message is published automatically by Application Server when the decoded payload contains coordinates (e.g. `latitude` and `longitude`, among other combinations, as well as support for accuracy and altitude).\n- Configuration option to include Packet Broker metadata in uplink messages: `pba.home-network.include-hops`. By default, this is now disabled.\n- Update gateway identity, status, antennas, frequency plan, location and receive and transmit rates to Packet Broker Mapper. Mapping is enabled when the Forwarder role is enabled. The following new configuration options are introduced to change the default behavior:\n  - `gs.packetbroker.update-gateway-interval`: Update gateway interval\n  - `gs.packetbroker.update-gateway-jitter`: Jitter (fraction) to apply to the update interval to randomize intervals\n  - `gs.packetbroker.online-ttl-margin`: Time to extend the online status before it expires\n  - `pba.mapper-address`: Address of Packet Broker Mapper\n  - `pba.forwarder.gateway-online-ttl`: Time-to-live of online status reported to Packet Broker\n\n### Changed\n\n- Low-level log messages from the `go-redis` library are printed only when the log level is set to `DEBUG`.\n- GS will discard repeated gateway uplink messages (often received due to buggy gateway forwarder implementations). A gateway uplink is considered to be repeated when it has the same payload, frequency and antenna index as the last one.\n  - The new `gs_uplink_repeated_total` metric counts how many repeated uplinks have been discarded.\n  - A `gs.up.repeat` event is emitted (once per minute maximum) for gateways that are stuck in a loop and forward the same uplink message.\n- For ABP sessions, the CLI now requests a DevAddr from the Network Server instead of generating one from the testing NetID.\n- Descriptions, tooltips and defaults for checkboxes for public gateway status and location in the Console.\n- All HTTP requests made by The Things Stack now contain a `User-Agent` header in the form of `TheThingsStack/{version}`.\n- No connection to Packet Broker is being made when neither the Forwarder nor the Home Network role is enabled.\n- Increase the default size limit for payload formatter scripts to 40KB (up from 4KB). The maximum size enforced at API level is 40KB (up from 16KB).\n  - For more context see [issue #4053](https://github.com/TheThingsNetwork/lorawan-stack/issues/4053) and [issue #4278](https://github.com/TheThingsNetwork/lorawan-stack/issues/4278).\n\n### Fixed\n\n- Parse error in Webhook Templates.\n- Application deletion handling in the Console.\n- Error when logging into the Console when using connections without TLS.\n- Account for antenna gain when the gateway is not authenticated (i.e. UDP gateway).\n- Preserve antenna gain when the gateway status message contains GPS coordinates.\n- Location map coordinate selection in the Console.\n- Rights required for reading scheduled downlinks.\n\n## [3.13.2] - 2021-06-17\n\n### Added\n\n- Configurable log formats with the `log.format` configuration option.\n  - The `console` format that prints logs as more human-friendly text. This is the new default.\n  - The `json` format that prints logs as JSON. This is the recommended format for production deployments.\n  - The `old` format (deprecated). This can be used if you need to adapt your log analysis tooling before v3.14.\n- `ttn_lw_gs_ns_uplink_latency_seconds`, `ttn_lw_ns_as_uplink_latency_seconds` and `ttn_lw_gtw_as_uplink_latency_seconds` metrics to track latency of uplink processing.\n- Signing of releases.\n- Hard delete option to delete applications, gateways and organizations in the Console.\n\n### Changed\n\n- Relaxed the cookie policy for cross-origin requests from Strict to Lax.\n- Changed the cookie policy for OAuth state to None.\n\n### Deprecated\n\n- The `old` log format is deprecated and will be removed in v3.14.\n\n### Fixed\n\n- Permissions issue for reading and writing gateway secrets in the Console.\n- Current and future rights selection for organization collaborators in the Console.\n- Current and future rights selection for user api keys in the Console.\n- Low or no throughput of message handling from Packet Broker when the ingress is high when Packet Broker Agent starts.\n- Unset ADR bit in downlink messages to multicast devices.\n\n## [3.13.1] - 2021-06-04\n\n### Added\n\n- More contextual tooltips to end device and gateway form fields in the Console.\n- Warnings in the Console when changing or revoking your own access to an entity.\n\n### Changed\n\n- Do not print error line logs for rate limited gRPC and HTTP API requests.\n- The `ttn_lw_log_log_messages_total` metric was renamed to `ttn_lw_log_messages_total` and has an additional `error_name` label.\n- Authenticated users now have access to gateway status and location when those are set to public.\n- Cookies are no longer allowed in cross-origin requests to the HTTP API. Applications must instead use Bearer tokens in the Authorization header.\n\n### Fixed\n\n- Downlink queue eviction on FCnt mismatch.\n- End device payload formatter view crashing in the Console.\n- End device overview frequently crashing in the Console.\n- Panic on empty downlink in zero indexed downlink token.\n\n## [3.13.0] - 2021-05-20\n\n### Added\n\n- Searching Packet Broker networks with `--tenant-id-contains` and `--name-contains` flags.\n- Listing all listed Packet Broker networks with `ttn-lw-cli packetbroker networks list`.\n- Include end device version identifiers in upstream messages (see `uplink_message.version_ids.brand_id`, `uplink_message.version_ids.model_id`, `uplink_message.version_ids.firmware_version`, `uplink_message.version_ids.hardware_version` and `uplink_message.version_ids.band_id` fields).\n- Reporting uplink and downlink message delivery state changes to Packet Broker. This will be used for statistical purposes (e.g. which message is processed successfully or why it errored) as well as LoRaWAN roaming (the `XmitDataAns` result code).\n- Setting API key expiry via `--api-key-expiry` flag using RFC3339 format.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Events storage in the Redis events backend. This can be enabled with the new `events.redis.store.enable` option. The new options `events.redis.store.ttl`, `events.redis.store.entity-ttl`, `events.redis.store.entity-count` and `events.redis.store.correlation-id-count` can be used to configure retention.\n- RPC to find related events by correlation ID.\n- CLI command `events find-related`.\n- Support for loading Device Repository profiles from different vendors if specified. This allows reusing standard end device profiles from module makers and LoRaWAN end device stack vendors.\n- Filtering out verbose events in the event views in the Console.\n- The `gs.up.forward` event now includes the host an uplink was forwarded to.\n- Previews for `*.update` events in the Console.\n- The Console can now show recent historical events in networks that have events storage enabled.\n- Add a new `mac_settings.desired_max_eirp` field that can be configured to set the desired MaxEIRP value per device.\n- Support loading rate limiting profile configuration from external sources. When set, they will override embedded configuration. See `rate-limiting.config-source`, `rate-limiting.directory`, `rate-limiting.url` and `rate-limiting.blob.*` configuration options.\n- `IssueDevEUI` RPC for requesting a DevEUI from a configured IEEE MAC block for devices per application.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added `eui_blocks` table and `dev_eui_counter`\n    column in applications table.\n  - This requires a new `dev-eui-block` configuration setting.\n\n### Changed\n\n- User IDs now have a minimum length of 2 instead of 3, so that more users coming from v2 can keep their username.\n- Disabled device uplink simulation and downlink message sending when skipping payload crypto.\n- The UpdateAPIKey RPCs now take a fieldmask.\n- The Gateway Server no longer sends `gs.up.drop` event if the Network Server does not handle an uplink message, or if the uplink does not match the DevAddr prefix of an upstream.\n- Maximum size for user-defined payload formatter scripts.\n  - The default cap is at 4KB, see the new `as.formatters.max-parameter-length` config option.\n  - A maximum cap of 16KB per script is set at the API level.\n  - This only prevents setting large payload formatter scripts for new devices and applications; it does not remove payload formatters from existing applications and devices. Scripts sourced from the Device Repository are not affected. See [issue #4053](https://github.com/TheThingsNetwork/lorawan-stack/issues/4053) for more context on this change.\n- LoRa Basics Station `router_config` message omits hardware specific fields.\n- Showing \"Last seen\" information in end device tables (replacing \"Created\").\n\n### Removed\n\n- The `gs.status.forward` event.\n\n### Fixed\n\n- OAuth token exchange for OAuth clients that use Basic auth.\n- The CLI now properly returns a non-zero exit status code on invalid commands.\n- Gateway connection requests with zero EUI are rejected.\n- End device payload formatter reset to `FORMATTER_NONE` in the Console.\n- Memory issues when importing end devices in the Console.\n\n## [3.12.3] - 2021-05-06\n\n### Changed\n\n- Optimized storage of recent application uplinks in Application Server.\n\n### Fixed\n\n- Validation of OAuth token exchange requests from the CLI.\n- Validation of join-request types when using the Crypto Server backend.\n- Application Server session recovery functionality for imported devices.\n- Fetching AppSKey when the session is rebuilt but the identifier did not change.\n\n## [3.12.2] - 2021-04-30\n\n### Added\n\n- Contextual tooltips to form fields in the Console.\n- C-Style uint32_t representation for end device address field.\n- Gateway Configuration Server to the cluster package.\n  - This introduces a new config option `cluster.gateway-configuration-server` that needs to be set in multi-instance deployments.\n- Uplink storage for integrations in the Application Server. The number of uplinks stored per end device may be configured via the config option `as.uplink-storage.limit`.\n- LoRaCloud GLS multi frame request support.\n- LoRaCloud GNSS request support.\n- LoRaCloud WiFi request support.\n\n### Changed\n\n- Allow the LinkADRReq commands to lower the data rate used by the end devices.\n\n### Fixed\n\n- Occasional crashes in the ratelimit middleware.\n- Handling of zero EUI CUPS update-info requests.\n- Backend validation messages for some forms.\n- Gateway downlink message previews not displaying correctly in the event view of the Console.\n- Importing end devices from the Console would occasionally ignore some device MAC settings fields.\n\n## [3.12.1] - 2021-04-15\n\n### Added\n\n- Payload formatter testing functionality in the Console.\n- Options in the Identity Server to reject passwords that contain the user ID (`is.user-registration.password-requirements.reject-user-id`) or common passwords (`is.user-registration.password-requirements.reject-common`).\n\n### Changed\n\n- Network Server now takes uplink data rate index for ADR.\n- Event streams are now closed when the callers rights are revoked.\n\n### Fixed\n\n- It is no longer possible to accidentally create API keys without any rights.\n- Application overview page crashing for collaborators without certain rights.\n- `mac_settings.factory_preset_frequencies` handling in US-like bands.\n\n### Security\n\n- This release fixes an issue that prevented some request messages from being validated correctly, allowing invalid values in certain fields.\n\n## [3.12.0] - 2021-04-06\n\n### Added\n\n- API and CLI commands for listing, searching for and restoring recently deleted applications, OAuth clients, gateways, organizations and users.\n- State Description fields for adding context to the (rejected, flagged, suspended) state of Users and OAuth clients.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Searching for gateways by EUI.\n- Searching for users and OAuth clients by state.\n- Gateway Server forwards Tx Acknowlegdment packets to the Network Server for scheduled downlinks. These can be used by the Network Server to forward `downlink_ack` upstream messages to the Application Server.\n- UDP connection error caching. The duration can be configured via the `gs.udp.connection-error-expires` configuration entry.\n- Option to require individual gateways to use authenticated connections.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Login Tokens (magic login links) that can be used for password-less login.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n  - This feature is disabled by default; use the new `is.login-tokens.enabled` option to enable it.\n- Packet Broker registration, configuration of routing policies, listing home networks and viewing routing policies set by forwarding networks. See `ttn-lw-cli packetbroker --help` for more information.\n- Support LoRa 2.4 GHz with Packet Broker.\n- Include gateway identifiers from Packet Broker in metadata.\n- Session and MAC state import functionality. This means that devices can be migrated without rejoin.\n- Rate limiting for HTTP endpoints, gRPC endpoints, MQTT, UDP and WebSockets connections.\n  - Rate limiting is disabled by default. Refer to the `rate-limiting` configuration entry to enable.\n- Profile settings link to header dropdown menu.\n\n### Changed\n\n- Changed the pub/sub channels that the Redis backend of the Events system uses.\n- Changed the encoding of events transported by the Redis backend of the Events system.\n- All external HTTP calls are now using TLS client configuration. This fixes issues where HTTP calls would fail if custom (e.g. self-signed) CAs were used.\n- All external HTTP calls are now using a default timeout. This fixes issues where HTTP calls would stall for a long time.\n- All value wrappers now are encoded and decoded as the value being wrapped in JSON. That means, that, e.g. format of `mac_settings.rx1_delay` is changed from `{\"value\": 2}` to just `2`.\n- Changed the error that is returned when attempting to validate already validated contact info.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added column.\n- Update Go to 1.16\n- Network Server now performs more strict validation and will disallow creation and updates of invalid devices.\n- DevEUI is not required for multicast devices anymore, regarding of LoRaWAN version.\n\n### Fixed\n\n- Incorrect documentation url for event details data formats.\n- Search functionality for applications, gateways and organizations in the Console.\n- Error handling of end device template formats for the application overview page in the Console.\n- Payload size limits for AU915 data rates 8 and 9, which are now consistent with Regional Parameters RP002-1.0.2.\n- Payload size limit calculation in Network Server.\n- Occasional panic in Network Server on downlink with corrupted device states.\n- Occasional panic in Identity Server on extracting log fields from invalid requests.\n- Print an error message stating that the Storage Integration is not available in the open source edition of The Things Stack when trying to execute `ttn-lw-stack storage-db` commands.\n\n## [3.11.3] - 2021-03-19\n\n### Added\n\n- `sentry.environment` configuration option to set the `environment` tag on Sentry reports.\n- TR005 QR code format, with ID `tr005`.\n- LoRa Cloud Geolocation Services support for TOA/RSSI end device geolocation.\n\n### Changed\n\n- Default value of `gs.udp.addr-change-block` is now 0, which disables the IP firewall for UDP traffic. Deployments that need to enforce the IP check should set a value greater than 0. Note that the new default value makes UDP connections less secure.\n- Prevent flooding logs with \"Packet Filtered\" messages when UDP gateways exceed the maximum rate limit. Only one message per minute will be printed for each gateway.\n\n### Deprecated\n\n- TR005 Draft 2 and 3 QR code formats. Use the final version of the technical recommendation, with ID `tr005`.\n\n### Fixed\n\n- Downlink queue operations on ABP devices not working under specific circumstances.\n- NwkKey handling for end devices in the Console.\n\n## [3.11.2] - 2021-03-05\n\n### Added\n\n- Pagination flags for the `users oauth authorizations list` and `users oauth access-tokens list` CLI commands.\n- End device ID generation based on DevEUI in The LoRaWAN Device Repository creation form in the Console.\n- `remote_ip` and `user_agent` metadata on OAuth events.\n- `created_at` and `updated_at` fields to API Keys.\n- Telemetry for Packet Broker Agent.\n- User rights check for managing API keys in the Console.\n\n### Changed\n\n- `temp` field of the UDP stats message is now type `float32` (pointer).\n\n### Fixed\n\n- Ocassional race condition in uplink matching with replicated Network Server instances.\n- Ocassional race condition when matching pending sessions.\n- Conflict error when registering an end device via the wizard in the Console.\n- Pagination in the `List` and `ListTokens` RPCs of the `OAuthAuthorizationRegistry`.\n- Event name on user login.\n- Application uplink queue handling in Network Server.\n- Application Server session desynchronization with the Network Server. The Application Server will now attempt to synchronize the end device session view on downlink queue operational errors. This fixes the `f_cnt_too_low` and `unknown_session` errors reported on downlink queue push and replace.\n- Panic while generating SX1301 config for frequency plans without radio configuration.\n\n## [3.11.1] - 2021-02-18\n\n### Added\n\n- Profile settings view to the Account App.\n  - Functionality to change basic profile information, such as name, email address and profile picture.\n  - Functionality to update the account password.\n  - Functionality to delete the account.\n\n### Changed\n\n- Improved logging.\n\n### Fixed\n\n- Synchronization in Gateway Server scheduler that caused race conditions in scheduling downlink traffic.\n\n## [3.11.0] - 2021-02-10\n\n### Added\n\n- Reset functionality in Network Server, which resets session context and MAC state (see `ttn-lw-cli end-devices reset` command). For OTAA all data is wiped and device must rejoin, for ABP session keys, device address and downlink queue are preserved, while MAC state is reset.\n- Store and retrieve Gateway Claim Authentication Code from database.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added column.\n  - This uses the same encryption key set using the `is.gateways.encryption-key-id` configuration option.\n- Improved handling of connection issues in the Console, as well as automatic reconnects.\n- Helpful details for synthetic meta events in the data view of the Console.\n- Support field mask paths in Storage Integration API requests.\n- CUPS redirection.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Configuration option (`is.user-registration.enabled`) to enable or disable user registrations.\n- Missing CLI commands for getting single API keys or collaborators for entities.\n- New Account App for authentication, authorization and account related functionality.\n  - This introduces various UX improvements and new designs around e.g. user login, registration and the \"forgot password\" flow.\n- Integrate Device Repository.\n- Device Repository component to integrate [Device Repository](https://github.com/TheThingsNetwork/lorawan-devices) with The Things Stack. See the `dr` configuration section.\n  - The Device Repository database is bundled automatically into Docker release images. See the `ttn-lw-stack dr-db init` command to manually fetch the latest changes.\n- Device repository service to the JavaScript SDK.\n- Choosing array representation for end device session keys as well as gateway EUI.\n\n### Changed\n\n- Network Server does not store `recent_uplinks`, `recent_adr_uplinks` and `recent_downlinks` anymore.\n- Improved Network Server downlink task performance.\n- Improved Network Server matching performance.\n- Network Server matching mapping in the database.\n  - This requires a database migration (`ttn-lw-stack ns-db migrate`).\n- Sending a non-empty implicitly specified field disallowed field will now cause RPCs to fail. E.g. if RPC supports paths `A` and `A.B`, sending value with `A.C` non-empty and field mask `A` would result in an error.\n- Improved content of emails sent by the Identity Server.\n- Stricter validation of the maximum length of string fields, binary fields, lists and maps.\n- Frequency plans and webhook templates are now included in Docker images, and used by default, instead of fetching directly from GitHub.\n- JavaScript entrypoints changed from `oauth.css` and `oauth.js` to `account.css` and `account.css`. Note: For deployments using custom frontend bundles (e.g. via `--is.oauth.ui.js-file`), the filenames have to be updated accordingly as well.\n\n### Removed\n\n- Application Server linking. The Network Server now pushes data to the cluster Application Server instead.\n  - Applications which desire to handle payload decryption within their own domains should disable payload decryption at application or device level and decrypt the payload on their own end.\n  - While not backwards compatible, the decision to remove linking was heavily motivated by scalability concerns - the previous linking model scales poorly when taking high availability and load balancing concerns into account.\n- The option to disable CUPS per gateway `gcs.basic-station.require-explicit-enable`.\n\n### Fixed\n\n- Network Server DevStatusReq scheduling conditions in relation to frame counter value.\n- Missing `authentication`, `remote_ip` and `user_agent` fields in events when using event backends other than `internal`.\n- Handling of `DLChannelReq` if dependent `NewChannelReq` was previously rejected.\n- Login after user registration leading to dead-end when originally coming from the Console.\n- Frame counter display of end devices on initial page load in the Console.\n- AU915-928 data rate indexes in Regional Parameter specification versions below 1.0.2b.\n\n## [3.10.6] - 2021-01-12\n\n### Added\n\n- Configuration option `is.admin-rights.all` to grant admins all rights, including `_KEYS` and `_ALL`.\n- Configuration option `is.user-registration.contact-info-validation.token-ttl` to customize the validity of contact information validation tokens.\n- `ttn-lw-stack` CLI command for creating an API Key with full rights on a user.\n\n### Changed\n\n- Packet Broker API version to `v3.2.0-tts` and routing API to `v1.0.2-tts`.\n- Emails with temporary tokens now also show when these tokens expire. Custom email templates can use `{{ .TTL }}` and `{{ .FormatTTL }}` to render the expiry durations.\n\n### Deprecated\n\n- Packet Broker mutual TLS authentication: use OAuth 2.0 client credentials instead; set `pba.authentication-mode` to `oauth2` and configure `pba.oauth2`.\n- Packet Broker forwarder blacklist setting `pba.home-network.blacklist-forwarder` has become ineffective.\n\n### Fixed\n\n- Do not initiate new contact info validations when old validations are still pending.\n\n## [3.10.5] - 2020-12-23\n\n### Added\n\n- Support for sending end device uplinks using the CLI (see `ttn-lw-cli simulate application-uplink` command).\n- Clients can now perform custom ADR by modifying ADR parameters in `mac-state.desired-parameters` of the device.\n\n### Changed\n\n- Form field layouts in the Console (field labels are now dispayed above the field).\n- Small structural changes to the custom webhook form in the Console.\n- Renamed experimental command `ttn-lw-cli simulate uplink` to `ttn-lw-cli simulate gateway-uplink`.\n- Renamed experimental command `ttn-lw-cli simulate join-request` to `ttn-lw-cli simulate gateway-join-request`.\n\n### Fixed\n\n- Removed misleading warning message for missing package data when setting up the storage integration package association.\n\n## [3.10.4] - 2020-12-08\n\n### Added\n\n- Configure application activation settings from the CLI (see `ttn-lw-cli application activation-settings` commands).\n- User API keys management to the Console.\n- `Purge` RPC and cli command for entity purge (hard-delete) from the database.\n- More password validation rules in the user management form in the Console.\n- Support for class B end devices in the Console.\n- MAC settings configuration when creating and editing end devices in the Console.\n- Support for the LR1110 LTV stream protocol.\n\n### Changed\n\n- Branding (updated TTS Open Source logo, colors, etc).\n\n### Fixed\n\n- Simulated uplinks visibility in webhook messages.\n- Retransmission handling.\n- RTT recording for LBS gateways. The maximum round trip delay for RTT calculation is configurable via `--gs.basic-station.max-valid-round-trip-delay`.\n- Memory leak in GS scheduler.\n\n## [3.10.3] - 2020-12-02\n\n### Added\n\n- Configure application activation settings from the CLI (see `ttn-lw-cli application activation-settings` commands).\n\n### Security\n\n- Fixed an issue with authentication on the `/debug/pprof`, `/healthz` and `/metrics` endpoints.\n\n## [3.10.2] - 2020-11-27\n\n### Added\n\n- gRPC middleware to extract proxy headers from trusted proxies. This adds a configuration `grpc.trusted-proxies` that is similar to the existing `http.trusted-proxies` option.\n\n### Changed\n\n- Log field consistency for HTTP and gRPC request logs.\n\n### Fixed\n\n- Uplink frame counter reset handling.\n- Uplink retransmission handling in Network Server.\n- DevAddr generation for NetID Type 3 and 4, according to errata.\n- HTTP header propagation (such as Request ID) to gRPC services.\n\n## [3.10.1] - 2020-11-19\n\n### Added\n\n- More password validation rules in the user management form in the Console.\n\n### Changed\n\n- Limitation of displayed and stored events in the Console to 2000.\n- Application Server will unwrap the AppSKey if it can, even if skipping payload crypto is enabled. This is to avoid upstream applications to receive wrapped keys they cannot unwrap. For end-to-end encryption, configure Join Servers with wrap keys unknown to the Application Server.\n- More precise payload labels for event previews in the Console.\n\n### Fixed\n\n- Next button title in the end device wizard in the Console.\n- Navigation to the user edit page after creation in the Console.\n- The port number of the `http.redirect-to-host` option was ignored when `http.redirect-to-tls` was used. This could lead to situations where the HTTPS server would always redirect to port 443, even if a different one was specified.\n  - If the HTTPS server is available on `https://thethings.example.com:8443`, the following flags (or equivalent environment variables or configuration options) are required: `--http.redirect-to-tls --http.redirect-to-host=thethings.example.com:8443`.\n- Status display on the error view in the Console.\n- Event views in the Console freezing after receiving thousands of events.\n- Wrong FPort value displayed for downlink attempt events in the Console.\n- Network Server sending duplicate application downlink NACKs.\n- Network Server now sends downlink NACK when it assumes confirmed downlink is lost.\n- Network Server application uplink drainage.\n\n## [3.10.0] - 2020-11-02\n\n### Added\n\n- Gateway Configuration Server endpoint to download UDP gateway configuration file.\n  - In the Console this requires a new `console.ui.gcs.base-url` configuration option to be set.\n- Support for sending end device uplinks in the Console.\n- PHY version filtering based on LoRaWAN MAC in the Console.\n- Meta information and status events in the event views in the Console.\n- Support for setting the frame counter width of an end device in the Console.\n- Include consumed airtime metadata in uplink messages and join requests (see `uplink_message.consumed_airtime` field).\n- Add end device location metadata on forwarded uplink messages (see `uplink_message.locations` field).\n- Store and retrieve LBS LNS Secrets from database.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added column.\n  - To encrypt the secrets, set the new `is.gateways.encryption-key-id` configuration option.\n- Storage Integration API.\n- CLI support for Storage Integration (see `ttn-lw-cli end-devices storage` and `ttn-lw-cli applications storage` commands).\n- Network Server does not retry rejected `NewChannelReq` data rate ranges or rejected `DLChannelReq` frequencies anymore.\n- Functionality to allow admin users to list all organizations in the Console.\n- Downlink count for end devices in the Console.\n- Support for Application Activation Settings in the Join Server to configure Application Server KEK, ID and Home NetID.\n- Downlink queue invalidated message sent upstream by Application Server to support applications to re-encrypt the downlink queue when Application Server skips FRMPayload crypto.\n- Navigation to errored step in the end device wizard in the Console.\n- Reference available glossary entries for form fields in the Console.\n\n### Changed\n\n- Decoded downlink payloads are now published as part of downlink attempt events.\n- Decoded downlink payloads are stored now by Network Server.\n- Raw downlink PHY payloads are not stored anymore by Network Server.\n- Move documentation to [lorawan-stack-docs](https://github.com/TheThingsIndustries/lorawan-stack-docs).\n- Improve LinkADRReq scheduling condition computation and, as a consequence, downlink task efficiency.\n- CUPS Server only accepts The Things Stack API Key for token auth.\n- Improve MQTT Pub/Sub task restart conditions and error propagation.\n- Pausing event streams is not saving up arriving events during the pause anymore.\n- Gateway server can now update the gateway location only if the gateway is authenticated.\n- Right to manage links on Application Server is now `RIGHT_APPLICATION_SETTINGS_BASIC`.\n\n### Removed\n\n- Join EUI prefixes select on empty prefixes configuration in Join Server.\n\n### Fixed\n\n- Broken link to setting device location in the device map widget.\n- Error events causing Console becoming unresponsive and crashing.\n- Incorrect entity count in title sections in the Console.\n- Incorrect event detail panel open/close behavior for some events in the Console.\n- Improved error resilience and stability of the event views in the Console.\n- RSSI metadata for MQTT gateways connected with The Things Network Stack V2 protocol.\n- Gateway ID usage in upstream connection.\n- Last seen counter for applications, end devices and gateways in the Console.\n- `Use credentials` option being always checked in Pub/Sub edit form in the Console.\n- FPending being set on downlinks, when LinkADRReq is required, but all available TxPower and data rate index combinations are rejected by the device.\n- Coding rate for LoRa 2.4 GHz: it's now `4/8LI`.\n- End device import in the Console crashing in Firefox.\n- Creation of multicast end devices in the Console.\n- Overwriting values in the end device wizard in the Console.\n- Redirect loops when logging out of the Console if the Console OAuth client had no logout redirect URI(s) set.\n- Event selection not working properly when the event stream is paused in the Console.\n\n## [3.9.4] - 2020-09-23\n\n### Changed\n\n- Detail view of events in the Console moved to the side.\n- Display the full event object when expanded in the Console (used to be `event.data` only).\n\n### Fixed\n\n- Performance issues of event views in the Console (freezing after some time).\n- Gateway Server panic on upstream message handling.\n- Incorrect redirects for restricted routes in the Console.\n- Validation of MAC settings in the Network Server.\n- Network Server panic when RX2 parameters cannot be computed.\n\n## [3.9.3] - 2020-09-15\n\n### Added\n\n- Add `the-things-stack` device template converter, enabled by default. Effectively, this allows importing end devices from the Console.\n- Support for binary decoding downlink messages previously encoded with Javascript or CayenneLPP.\n- Common CA certificates available in documentation.\n- Service data fields to pub/subs and webhooks in the Console.\n\n### Changed\n\n- MAC commands (both requests and responses) are now only scheduled in class A downlink slots in accordance to latest revisions to LoRaWAN specification.\n- Scheduling failure events are now emitted on unsuccessful scheduling attempts.\n- Default Javascript function signatures to `encodeDownlink()`, `decodeUplink()` and `decodeDownlink()`.\n- Default Class B timeout is increased from 1 minute to 10 minutes as was originally intended.\n- Update Go to 1.15\n- Application, gateway, organization and end device title sections in the Console.\n- Network Server downlink queues now have a capacity - by default maximum application downlink queue length is 10000 elements.\n- Improve ADR algorithm loss rate computation.\n\n### Deprecated\n\n- Previous Javascript function signatures `Decoder()` and `Encoder()`, although they remain functional until further notice.\n\n### Fixed\n\n- ISM2400 RX2, beacon and ping slot frequencies are now consistent with latest LoRaWAN specification draft.\n- CLI login issues when OAuth Server Address explicitly includes the `:443` HTTPS port.\n- Documentation link for LoRa Cloud Device & Application Services in the Lora Cloud integration view in the Console.\n- Webhooks and Pub/Subs forms in the Console will now let users choose whether they want to overwrite an existing record when the ID already exists (as opposed to overwriting by default).\n- Pub/Sub integrations not backing off on internal connection failures.\n- Network Server ping slot-related field validation.\n- Memory usage of Network Server application uplink queues.\n- Incorrect uplink FCnt display in end device title section.\n- Service Data messages being routed incorrectly.\n\n## [3.9.1] - 2020-08-19\n\n### Added\n\n- LoRaCloud DAS integration page in the Console.\n- User Agent metadata on published events (when available).\n- Option to override server name used in TLS handshake with cluster peers (`cluster.tls-server-name`).\n\n### Changed\n\n- Network Server now only publishes payload-related downlink events if scheduling succeeds.\n- Moved remote IP event metadata outside authentication.\n- Admins can now set the expiration time of temporary passwords of users.\n- Application Server links are no longer canceled prematurely for special error codes. Longer back off times are used instead.\n\n### Fixed\n\n- Authentication metadata missing from published events.\n- Under some circumstances, CLI would mistakenly import ABP devices as OTAA.\n- Gateway Server could include the gateway antenna location on messages forwarded to the Network Server even if the gateway location was not public.\n\n## [3.9.0] - 2020-08-06\n\n### Added\n\n- API Authentication and authorization via session cookie.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added and modified columns.\n  - This changes the `AuthInfo` API response.\n- Skipping payload crypto on application-level via application link's `skip_payload_crypto` field.\n- Authentication method, ID and Remote IP in events metadata.\n- Service data messages published by integrations. Can be consumed using the bundled MQTT server, Webhooks or Pub/Sub integrations.\n- Application package application-wide associations support.\n- LoRaCloud DAS application package server URL overrides support.\n- Key vault caching mechanism (see `--key-vault.cache.size` and `--key-vault.cache.ttl` options).\n- Generic encryption/decryption to KeyVault.\n- Option to ignore log messages for selected gRPC method on success (see `grpc.log-ignore-methods` option).\n- CLI auto-completion support (automatically enabled for installable packages, also see `ttn-lw-cli complete` command).\n- Options to disable profile picture and end device picture uploads (`is.profile-picture.disable-upload` and `is.end-device-picture.disable-upload`).\n- Options to allow/deny non-admin users to create applications, gateways, etc. (the the `is.user-rights.*` options).\n- Admins now receive emails about requested user accounts that need approval.\n- Support for synchronizing gateway clocks via uplink tokens. UDP gateways may not connect to the same Gateway Server instance.\n- Consistent command aliases for CLI commands.\n- Laird gateway documentation.\n- Option to allow unauthenticated Basic Station connections. Unset `gs.basic-station.allow-unauthenticated` to enforce auth check for production clusters. Please note that unauthenticated connections in existing connections will not be allowed unless this is set.\n- Option to require TLS on connections to Redis servers (see `redis.tls.require` and related options).\n- Documentation for `cache` options.\n- Documentation for the Gateway Server MQTT protocol.\n- Add user page in console.\n- Troubleshooting guide.\n- API to get configuration from the Identity Server (including user registration options and password requirements).\n- Synchronize gateway time by uplink token on downstream in case the Gateway Server instance is not handling the upstream gateway connection.\n- Work-around for Basic Station gateways sending uplink frames with no `xtime`.\n- Document Network Server API Key requirement for Basic Station.\n\n### Changed\n\n- Remove version from hosted documentation paths.\n- Gateway connection stats are now stored in a single key.\n- The example configuration for deployments with custom certificates now also uses a CA certificate.\n- Increase Network Server application uplink buffer queue size.\n- `ttn-lw-cli use` command no longer adds default HTTP ports (80/443) to the OAuth Server address.\n- Suppress the HTTP server logs from the standard library. This is intended to stop the false positive \"unexpected EOF\" error logs generated by health checks on the HTTPS ports (for API, BasicStation and Interop servers).\n- Automatic collapse and expand of the sidebar navigation in the Console based on screen width.\n- The header of the sidebar is now clickable in the Console.\n- Overall layout and behavior of the sidebar in the Console improved.\n- Improved layout and screen space utilization of event data views in the Console.\n- Allow setting all default MAC settings of the Network Server. Support setting enum values using strings where applicable.\n\n### Deprecated\n\n- End device `skip_payload_crypto` field: it gets replaced by `skip_payload_crypto_override`.\n\n### Fixed\n\n- Inconsistent error message responses when retrieving connection stats from GS if the gateway is not connected.\n- Empty form validation in the Console.\n- CLI crash when listing application package default associations without providing an application ID.\n- Decoding of uplinks with frame counters exceeding 16 bits in Application Server.\n- Validation of keys for gateway metrics and version fields.\n- Read only access for the gateway overview page in the Console.\n- Fix an issue that frequently caused event data views crashing in the Console.\n- Application Server contacting Join Server via interop for fetching the AppSKey.\n- Low color contrast situations in the Console.\n- Application Server pub/sub integrations race condition during shutdown.\n- Console webhook templates empty headers error.\n- Console MQTT URL validation.\n- AFCntDown from the application-layer is respected when skipping application payload crypto.\n- RTT usage for calculating downlink delta.\n- Synchronize concentrator timestamp when uplink messages arrive out-of-order.\n\n## [3.8.6] - 2020-07-10\n\n### Added\n\n- Payload formatter documentation.\n- CLI support for setting message payload formatters from a local file. (see `--formatters.down-formatter-parameter-local-file` and `--formatters.up-formatter-parameter-local-file` options).\n\n### Changed\n\n- Gateway connection stats are now stored in a single key.\n\n### Fixed\n\n- Uplink frame counters being limited to 16 bits in Network Server.\n\n## [3.8.5] - 2020-07-06\n\n### Added\n\n- Option to reset end device payload formatters in the Console.\n- Service discovery using DNS SRV records for external Application Server linking.\n- Functionality to set end device attributes in the Console.\n- Event description tooltip to events in the Console.\n- CLI support for setting and unsetting end device location (see `--location.latitude`, `--location.longitude`, `--location.altitude` and `--location.accuracy` options).\n- Functionality to allow admin users to list all applications and gateways in the Console.\n- Ursalink UG8X gateway documentation.\n- Intercom, Google Analytics, and Emojicom feedback in documentation.\n- LORIX One gateway documentation.\n- Display own user name instead of ID in Console if possible.\n- Option to hide rarely used fields in the Join Settings step (end device wizard) in the Console.\n\n### Changed\n\n- JSON uplink message doc edited for clarity.\n- The CLI snap version uses the `$SNAP_USER_COMMON` directory for config by default, so that it is preserved between revisions.\n- Defer events subscriptions until there is actual interest for events.\n- End device creation form with wizard in the Console.\n\n### Removed\n\n- Requirement to specify `frequency_plan_id` when creating gateways in the Console.\n\n### Fixed\n\n- Endless authentication refresh loop in the Console in some rare situations.\n- Logout operation not working properly in the Console in some rare situations.\n- Handling API key deletion event for applications, gateways, organizations and users.\n- Organization API key deletion in the Console.\n- CLI now only sends relevant end device fields to Identity Server on create.\n- Maximum ADR data rate index used in 1.0.2a and earlier versions of AU915 band.\n- End device events stream restart in the Console.\n- CLI was unable to read input from pipes.\n- Timezones issue in claim authentication code form, causing time to reverse on submission.\n- Errors during submit of the join settings for end devices in the Console.\n\n## [3.8.4] - 2020-06-12\n\n### Added\n\n- Metrics for log messages, counted per level and namespace.\n- Allow suppressing logs on HTTP requests for user-defined paths (see `--http.log-ignore-paths` option).\n- Redux state and actions reporting to Sentry\n- Serving frontend sourcemaps in production\n- Frequency plan documentation.\n- LoRa Basics Station documentation.\n\n### Changed\n\n- Suppress a few unexpected EOF errors, in order to reduce noise in the logs for health checks.\n\n### Fixed\n\n- Packet Broker Agent cluster ID is used as subscription group.\n- LinkADR handling in 72-channel bands.\n- Data uplink metrics reported by Application Server.\n\n## [3.8.3] - 2020-06-05\n\n### Added\n\n- Favicon to documentation pages.\n- Draft template for documentation.\n\n### Changed\n\n- Late scheduling algorithm; Gateway Server now takes the 90th percentile of at least the last 5 round-trip times of the last 30 minutes into account to determine whether there's enough time to send the downlink to the gateway. This was the highest round-trip time received while the gateway was connected.\n\n### Fixed\n\n- Downlink scheduling to gateways which had one observed round-trip time that was higher than the available time to schedule. In some occassions, this broke downlink at some point while the gateway was connected.\n\n## [3.8.2] - 2020-06-03\n\n### Added\n\n- Console logout is now propagated to the OAuth provider.\n  - This requires a database migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n  - To set the `logout-redirect-uris` for existing clients, the CLI client can be used, e.g.: `ttn-lw-cli clients update console --logout-redirect-uris \"https://localhost:8885/console\" --redirect-uris \"http://localhost:1885/console\"`.\n- Packet Broker Agent to act as Forwarder and Home Network. See `pba` configuration section.\n- JavaScript style guide to our `DEVELOPMENT.md` documentation.\n- Schedule end device downlinks in the Console.\n- Support for repeated `RekeyInd`. (happens when e.g. `RekeyConf` is lost)\n- Validate the `DevAddr` when switching session as a result of receiving `RekeyInd`.\n- Error details for failed events in the Console.\n- `Unknown` and `Other cluster` connection statuses to the gateways table in the Console.\n- LoRaWAN 2.4 GHz band `ISM2400`.\n- Unset end device fields using the CLI (see `--unset` option)\n- Join EUI and Dev EUI columns to the end device table in the Console.\n- CLI creates user configuration directory if it does not exist when generating configuration file.\n- Upgrading guide in docs.\n- Glossary.\n- Event details in the Console traffic view.\n- Gateway Server events for uplink messages now contain end device identifiers.\n- Setting custom gateway attributes in the Console.\n- Pub/Sub documentation.\n- Return informative well-known errors for standard network and context errors.\n- Error notification in list views in the Console.\n- Latest \"last seen\" info and uplink frame counts for end devices in the Console.\n- Latest \"last seen\" info for applications in the Console.\n\n### Changed\n\n- Conformed JavaScript to new code style guide.\n- Removed login page of the Console (now redirects straight to the OAuth login).\n- Network Server now records `LinkADRReq` rejections and will not retry rejected values.\n- Improved `NewChannelReq`, `DLChannelReq` and `LinkADRReq` efficiency.\n- For frames carrying only MAC commands, Network Server now attempts to fit them in FOpts omitting FPort, if possible, and sends them in FRMPayload with FPort 0 as usual otherwise.\n- Submit buttons are now always enabled in the Console, regardless of the form's validation state.\n- Disabled ADR for `ISM2400` band.\n- Network Server will attempt RX1 for devices with `Rx1Delay` of 1 second, if possible.\n- Network Server will not attempt to schedule MAC-only frames in ping slots or RXC windows.\n- Network Server will only attempt to schedule in a ping slot or RXC window after RX2 has passed.\n- Network Server will schedule all time-bound network-initiated downlinks at most RX1 delay ahead of time.\n- Network Server now uses its own internal clock in `DeviceTimeAns`.\n- Troubleshooting section of `DEVELOPMENT.md`\n- Change console field labels from `MAC version` and `PHY version` to `LoRaWAN version` and `Regional Parameters version` and add descriptions\n\n### Fixed\n\n- Handling of device unsetting the ADR bit in uplink, after ADR has been started.\n- Invalid `oauth-server-address` in CLI config generated by `use` command when config file is already present.\n- Network Server now properly handles FPort 0 data uplinks carrying FOpts.\n- Data rate 4 in version `1.0.2-a` of AU915.\n- Incorrect `TxOffset` values used by Network Server in some bands.\n- OAuth authorization page crashing.\n- Byte input in scheduling downlink view.\n- OAuth client token exchange and refresh issues when using TLS with a RootCA.\n- Join Server and Application Server device registries now return an error when deleting keys on `SET` operations. The operation was never supported and caused an error on `GET` instead.\n- Clearing end device events list in the Console.\n- Some views not being accessible in the OAuth app (e.g. update password).\n- `LinkADRReq` scheduling.\n- Unsetting NwkKey in Join Server.\n- CSRF token validation issues preventing login and logout in some circumstances.\n- Typo in Application Server configuration documentation (webhook downlink).\n- Unset fields via CLI on Join Server, i.e. `--unset root-keys.nwk-key`.\n- Reconnecting UDP gateways that were disconnected by a new gateway connection.\n- ADR in US915-like bands.\n\n## [3.7.2] - 2020-04-22\n\n### Added\n\n- CLI can now dump JSON encoded `grpc_payload` field for unary requests (see `--dump-requests` flag).\n- Template ID column in the webhook table in the Console.\n- Select all field mask paths in CLI get, list and search commands (see `--all` option).\n- Create webhooks via webhook templates in the Console.\n- `ns.up.data.receive` and `ns.up.join.receive` events, which are triggered when respective uplink is received and matched to a device by Network Server.\n- `ns.up.data.forward` and `ns.up.join.accept.forward` events, which are triggered when respective message is forwarded from Network Server to Application Server.\n- `ns.up.join.cluster.attempt` and `ns.up.join.interop.attempt` events, which are triggered when the join-request is sent to respective Join Server by the Network Server.\n- `ns.up.join.cluster.success` and `ns.up.join.interop.success` events, which are triggered when Network Server's join-request is accepted by respective Join Server.\n- `ns.up.join.cluster.fail` and `ns.up.join.interop.fail` events, which are triggered when Network Server's join-request to respective Join Server fails.\n- `ns.up.data.process` and `ns.up.join.accept.process` events, which are triggered when respective message is successfully processed by Network Server.\n- `ns.down.data.schedule.attempt` and `ns.down.join.schedule.attempt` events, which are triggered when Network Server attempts to schedule a respective downlink on Gateway Server.\n- `ns.down.data.schedule.success` and `ns.down.join.schedule.success` events, which are triggered when Network Server successfully schedules a respective downlink on Gateway Server.\n- `ns.down.data.schedule.fail` and `ns.down.join.schedule.fail` events, which are triggered when Network Server fails to schedule a respective downlink on Gateway Server.\n- Specify gRPC port and OAuth server address when generating a CLI config file with `ttn-lw-cli use` (see `--grpc-port` and `--oauth-server-address` options).\n- Guide to connect MikroTik Routerboard\n\n### Changed\n\n- Styling improvements to webhook and pubsub table in Console.\n- Gateway location is updated even if no antenna locations had been previously set.\n- Renamed `ns.application.begin_link` event to `ns.application.link.begin`.\n- Renamed `ns.application.end_link` event to `ns.application.link.end`.\n- `ns.up.data.drop` and `ns.up.join.drop` events are now triggered when respective uplink duplicate is dropped by Network Server.\n- Network Server now drops FPort 0 data uplinks with non-empty FOpts.\n- Frontend asset hashes are loaded dynamically from a manifest file instead of being built into the stack binary.\n- Removed `Cache-Control` header for static files.\n- Sort events by `time` in the Console.\n- Restructure doc folder\n\n### Removed\n\n- `ns.up.merge_metadata` event.\n- `ns.up.receive_duplicate` event.\n- `ns.up.receive` event.\n\n### Fixed\n\n- End device claim display bug when claim dates not set.\n- DeviceModeInd handling for LoRaWAN 1.1 devices.\n- Do not perform unnecessary gateway location updates.\n- Error display on failed end device import in the Console.\n- Update password view not being accessible\n- FOpts encryption and decryption for LoRaWAN 1.1 devices.\n- Application Server returns an error when trying to delete a device that does not exist.\n- Network Server returns an error when trying to delete a device that does not exist.\n- Retrieve LNS Trust without LNS Credentials attribute.\n- Too strict webhook base URL validation in the Console.\n- Webhook and PubSub total count in the Console.\n- DevEUI is set when creating ABP devices via CLI.\n- CLI now shows all supported enum values for LoraWAN fields.\n- Application Server does not crash when retrieving a webhook template that does not exist if no template repository has been configured.\n- Application Server does not crash when listing webhook templates if no template repository has been configured.\n- Error display on failed end device fetching in the Console.\n- Various inconsistencies with Regional Parameters specifications.\n\n## [3.7.0] - 2020-04-02\n\n### Added\n\n- Update gateway antenna location from incoming status message (see `update_location_from_status` gateway field and `--gs.update-gateway-location-debounce-time` option).\n  - This requires a database migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Access Tokens are now linked to User Sessions.\n  - This requires a database migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Edit application attributes in Application General Settings in the Console\n- New `use` CLI command to automatically generate CLI configuration files.\n- View/edit `update_location_from_status` gateway property using the Console.\n\n### Changed\n\n- Default DevStatus periodicity is increased, which means that, by default, DevStatusReq will be scheduled less often.\n- Default class B and C timeouts are increased, which means that, by default, if the Network Server expects an uplink from the device after a downlink, it will wait longer before rescheduling the downlink.\n- In case downlink frame carries MAC requests, Network Server will not force the downlink to be sent confirmed in class B and C.\n\n### Fixed\n\n- Fix organization collaborator view not being accessible in the Console.\n- Error display on Data pages in the Console.\n- Fix too restrictive MQTT client validation in PubSub form in the Console.\n- Fix faulty display of device event stream data for end devices with the same ID in different applications.\n- Trailing slashes handling in webhook paths.\n- End device location display bug when deleting the location entry in the Console.\n- GS could panic when gateway connection stats were updated while updating the registry.\n- Local CLI and stack config files now properly override global config.\n- Error display on failed end device deletion in the Console.\n\n## [3.6.3] - 2020-03-30\n\n### Fixed\n\n- Limited throughput in upstream handlers in Gateway Server when one gateway's upstream handler is busy.\n\n## [3.6.2] - 2020-03-19\n\n### Fixed\n\n- Entity events subscription release in the Console (Firefox).\n- RekeyInd handling for LoRaWAN 1.1 devices.\n- Network server deduplication Redis configuration.\n- Change the date format in the Console to be unambiguous (`17 Mar, 2020`).\n- Handling of uplink frame counters exceeding 65535.\n- Gateway events subscription release in the Console.\n- Panic when receiving a UDP `PUSH_DATA` frame from a gateway without payload.\n\n### Security\n\n- Admin users that are suspended can no longer create, view or delete other users.\n\n## [3.6.1] - 2020-03-13\n\n### Added\n\n- New `list` and `request-validation` subcommands for the CLI's `contact-info` commands.\n- Device Claim Authentication Code page in the Console.\n- Gateway Server rate limiting support for the UDP frontend, see (`--gs.udp.rate-limiting` options).\n- Uplink deduplication via Redis in Network Server.\n\n### Changed\n\n- Network and Application Servers now maintain application downlink queue per-session.\n- Gateway Server skips setting up an upstream if the DevAddr prefixes to forward are empty.\n- Gateway connection stats are now cached in Redis (see `--cache.service` and `--gs.update-connections-stats-debounce-time` options).\n\n### Fixed\n\n- Telemetry and events for gateway statuses.\n- Handling of downlink frame counters exceeding 65535.\n- Creating 1.0.4 ABP end devices via the Console.\n- ADR uplink handling.\n- Uplink retransmission handling.\n- Synchronizing Basic Station concentrator time after reconnect or initial connect after long inactivity.\n\n### Security\n\n- Changing username and password to be not required in pubsub integration.\n\n## [3.6.0] - 2020-02-27\n\n### Added\n\n- Class B support.\n- WebSocket Ping-Pong support for Basic Station frontend in the Gateway Server.\n- LoRaWAN 1.0.4 support.\n\n### Changed\n\n- Do not use `personal-files` plugin for Snap package.\n- Network Server will never attempt RX1 for devices with `Rx1Delay` of 1 second.\n- Improved efficiency of ADR MAC commands.\n- Gateway Configuration Server will use the default WebSocket TLS port if none is set.\n\n### Fixed\n\n- End device events subscription release in the Console.\n- Blocking UDP packet handling while the gateway was still connecting. Traffic is now dropped while the connection is in progress, so that traffic from already connected gateways keep flowing.\n- Join-request transmission parameters.\n- ADR in 72-channel regions.\n- Payload length limits used by Network Server being too low.\n- CLI ignores default config files that cannot be read.\n- Device creation rollback potentially deleting existing device with same ID.\n- Returned values not representing the effective state of the devices in Network Server when deprecated field paths are used.\n- Downlink queue operations in Network Server for LoRaWAN 1.1 devices.\n\n## [3.5.3] - 2020-02-14\n\n### Added\n\n- Display of error payloads in console event log.\n- Zero coordinate handling in location form in the Console.\n\n### Fixed\n\n- Updating `supports_class_c` field in the Device General Settings Page in the Console.\n- Updating MQTT pubsub configuration in the Console\n- Handling multiple consequent updates of MQTT pubsub/webhook integrations in the Console.\n- Displaying total device count in application overview section when using device search in the Console\n- FQDN used for Backend Interfaces interoperability requests.\n- Exposing device sensitive fields to unrelated stack components in the Console.\n- CLI trying to read input while none available.\n- Reconnections of gateways whose previous connection was not cleaned up properly. New connections from the same gateway now actively disconnects existing connections.\n- `ttn-lw-stack` and `ttn-lw-cli` file permission errors when installed using snap.\n  - You may need to run `sudo snap connect ttn-lw-stack:personal-files`\n- Changing username and password to be not required in pubsub integration\n\n## [3.5.2] - 2020-02-06\n\n### Fixed\n\n- Channel mask encoding in LinkADR MAC command.\n- Frequency plan validation in Network Server on device update.\n- Authentication of Basic Station gateways.\n\n## [3.5.1] - 2020-01-29\n\n### Added\n\n- Responsive side navigation (inside entity views) to the Console.\n- Overall responsiveness of the Console.\n- Support for configuring Redis connection pool sizes with `redis.pool-size` options.\n\n### Fixed\n\n- Crashes on Gateway Server start when traffic flow started while The Things Stack was still starting.\n- Not detecting session change in Application Server when interop Join Server did not provide a `SessionKeyID`.\n\n## [3.5.0] - 2020-01-24\n\n### Added\n\n- Support for releasing gateway EUI after deletion.\n- Support in the Application Server for the `X-Downlink-Apikey`, `X-Downlink-Push` and `X-Downlink-Replace` webhook headers. They allow webhook integrations to determine which endpoints to use for downlink queue operations.\n- `as.webhooks.downlinks.public-address` and `as.webhooks.downlinks.public-tls-address` configuration options to the Application Server.\n- Support for adjusting the time that the Gateway Server schedules class C messages in advance per gateway.\n  - This requires a database migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- `end-devices use-external-join-server` CLI subcommand, which disassociates and deletes the device from Join Server.\n- `mac_settings.beacon_frequency` end device field, which defines the default frequency of class B beacon in Hz.\n- `mac_settings.desired_beacon_frequency` end device field, which defines the desired frequency of class B beacon in Hz that will be configured via MAC commands.\n- `mac_settings.desired_ping_slot_data_rate_index` end device field, which defines the desired data rate index of the class B ping slot that will be configured via MAC commands.\n- `mac_settings.desired_ping_slot_frequency` end device field, which defines the desired frequency of the class B ping slot that will be configured via MAC commands.\n- Mobile navigation menu to the Console.\n- View and edit all Gateway settings from the Console.\n- `skip_payload_crypto` end device field, which makes the Application Server skip decryption of uplink payloads and encryption of downlink payloads.\n- `app_s_key` and `last_a_f_cnt_down` uplink message fields, which are set if the `skip_payload_crypto` end device field is true.\n- Support multiple frequency plans for a Gateway.\n- Entity search by ID in the Console.\n\n### Changed\n\n- `resets_join_nonces` now applies to pre-1.1 devices as well as 1.1+ devices.\n- Empty (`0x0000000000000000`) JoinEUIs are now allowed.\n\n### Fixed\n\n- Respect stack components on different hosts when connected to event sources in the Console.\n- Pagination of search results.\n- Handling OTAA devices registered on an external Join Server in the Console.\n- RxMetadata Location field from Gateway Server.\n- Channel mask encoding in LinkADR MAC command.\n- Device location and payload formatter form submits in the Console.\n- Events processing in the JS SDK.\n- Application Server frontends getting stuck after their associated link is closed.\n\n## [3.4.2] - 2020-01-08\n\n### Added\n\n- Forwarding of backend warnings to the Console.\n- Auth Info service to the JavaScript SDK.\n- Subscribable events to the JavaScript SDK.\n- Include `gateway_ID` field in Semtech UDP configuration response from Gateway Configuration Server.\n- Sorting feature to entity tables in the Console.\n\n### Changed\n\n- Increase time that class C messages are scheduled in advance from 300 to 500 ms to support higher latency gateway backhauls.\n\n### Fixed\n\n- Fix selection of pseudo wildcard rights being possible (leading to crash) in the Console even when such right cannot be granted.\n- Fix loading spinner being stuck infinitely in gateway / application / organization overview when some rights aren't granted to the collaborator.\n- Fix deadlock of application add form in the Console when the submit results in an error.\n- Fix ttn-lw-cli sometimes refusing to update Gateway EUI.\n\n## [3.4.1] - 2019-12-30\n\n### Added\n\n- Support for ordering in `List` RPCs.\n- Detect existing Basic Station time epoch when the gateway was already running long before it (re)connected to the Gateway Server.\n\n### Changed\n\n- Reduce the downlink path expiry window to 15 seconds, i.e. typically missing three `PULL_DATA` frames.\n- Reduce the connection expiry window to 1 minute.\n- Reduce default UDP address block time from 5 minutes to 1 minute. This allows for faster reconnecting if the gateway changes IP address. The downlink path and connection now expire before the UDP source address is released.\n\n### Fixed\n\n- Fix class A downlink scheduling when an uplink message has been received between the triggering uplink message.\n\n## [3.4.0] - 2019-12-24\n\n### Added\n\n- Downlink queue operation topics in the PubSub integrations can now be configured using the Console.\n- `List` RPC in the user registry and related messages.\n- User management for admins in the Console.\n- `users list` command in the CLI.\n- Support for getting Kerlink CPF configurations from Gateway Configuration Server.\n- Support for Microchip ATECC608A-TNGLORA-C manifest files in device template conversion.\n\n### Fixed\n\n- Fix the PubSub integration edit page in the Console.\n- Fix updating and setting of webhook headers in the Console.\n- Fix DevNonce checks for LoRaWAN 1.0.3.\n\n## [3.3.2] - 2019-12-04\n\n### Added\n\n- Support for selecting gateways when queueing downlinks via CLI (see `class-b-c.gateways` option).\n- Options `is.oauth.ui.branding-base-url` and `console.ui.branding-base-url` that can be used to customize the branding (logos) of the web UI.\n- Email templates can now also be loaded from blob buckets.\n- Support for pagination in search APIs.\n- Search is now also available to non-admin users.\n- Support for searching end devices within an application.\n- Notification during login informing users of unapproved user accounts.\n- Support maximum EIRP value from frequency plans sub-bands.\n- Support duty-cycle value from frequency plans sub-bands.\n\n### Changed\n\n- Allow enqueuing class B/C downlinks regardless of active device class.\n\n### Fixed\n\n- Fix crashing of organization collaborator edit page.\n- Avoid validating existing queue on application downlink pushes.\n- Correct `AU_915_928` maximum EIRP value to 30 dBm in 915.0 \u2013 928.0 MHz (was 16.15 dBm).\n- Correct `US_902_928` maximum EIRP value to 23.15 dBm in 902.3 \u2013 914.9 MHz (was 32.15 dBm) and 28.15 dBm in 923.3 \u2013 927.5 MHz (was 32.15 dBm). This aligns with US915 Hybrid Mode.\n- Correct `AS_923` maximum EIRP value to 16 dBm in 923.0 \u2013 923.5 MHz (was 16.15 dBm).\n\n### Security\n\n- Keep session keys separate by `JoinEUI` to avoid conditions where session keys are retrieved only by `DevEUI` and the session key identifier. This breaks retrieving session keys of devices that have been activated on a deployment running a previous version. Since the Application Server instances are currently in-cluster, there is no need for an Application Server to retrieve the `AppSKey` from the Join Server, making this breaking change ineffective.\n\n## [3.3.1] - 2019-11-26\n\n### Added\n\n- Add support for Redis Sentinel (see `redis.failover.enable`, `redis.failover.master-name`, `redis.failover.addresses` options).\n\n### Fixed\n\n- Fix `AppKey` decryption in Join Server.\n\n## [3.3.0] - 2019-11-25\n\n### Added\n\n- Add support for encrypting device keys at rest (see `as.device-kek-label`, `js.device-kek-label` and `ns.device-kek-label` options).\n- The Network Server now provides the timestamp at which it received join-accept or data uplink messages.\n- Add more details to logs that contain errors.\n- Support for end device pictures in the Identity Server.\n  - This requires a database migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Support for end device pictures in the CLI.\n\n### Fixed\n\n- Fix an issue causing unexpected behavior surrounding login, logout and token management in the Console.\n- Fix an issue causing the application link page of the Console to load infinitely.\n\n## [3.2.6] - 2019-11-18\n\n### Fixed\n\n- Fix active application link count being limited to 10 per CPU.\n- The Application Server now fills the timestamp at which it has received uplinks from the Network Server.\n\n## [3.2.5] - 2019-11-15\n\n### Added\n\n- Support for creating applications and gateway with an organization as the initial owner in the Console.\n- Hide views and features in the Console that the user and stack configuration does not meet the necessary requirements for.\n- Full range of Join EUI prefixes in the Console.\n- Support specifying the source of interoperability server client CA configuration (see `interop.sender-client-ca.source` and related fields).\n\n### Changed\n\n- Reading and writing of session keys in Application and Network server registries now require device key read and write rights respectively.\n- Implement redesign of entity overview title sections to improve visual consistency.\n\n### Deprecated\n\n- `--interop.sender-client-cas` in favor of `--interop.sender-client-ca` sub-fields in the stack.\n\n### Fixed\n\n- Fix gateway API key forms being broken in the Console.\n- Fix MAC command handling in retransmissions.\n- Fix multicast device creation issues.\n- Fix device key unwrapping.\n- Fix setting gateway locations in the Console.\n\n## [3.2.4] - 2019-11-04\n\n### Added\n\n- Support LoRa Alliance TR005 Draft 3 QR code format.\n- Connection indicators in Console's gateway list.\n- TLS support for application link in the Console.\n- Embedded documentation served at `/assets/doc`.\n\n### Fixed\n\n- Fix device creation rollback potentially deleting existing device with same ID.\n- Fix missing transport credentials when using external NS linking.\n\n## [3.2.3] - 2019-10-24\n\n### Added\n\n- Emails when the state of a user or OAuth client changes.\n- Option to generate claim authentication codes for devices automatically.\n- User invitations can now be sent and redeemed.\n- Support for creating organization API keys in the Console.\n- Support for deleting organization API keys in the Console.\n- Support for editing organization API keys in the Console.\n- Support for listing organization API keys in the Console.\n- Support for managing organization API keys and rights in the JS SDK.\n- Support for removing organization collaborators in the Console.\n- Support for editing organization collaborators in the Console.\n- Support for listing organization collaborators in the Console.\n- Support for managing organization collaborators and rights in the JS SDK.\n- MQTT integrations page in the Console.\n\n### Changed\n\n- Rename \"bulk device creation\" to \"import devices\".\n- Move device import button to the end device tables (and adapt routing accordingly).\n- Improve downlink performance.\n\n### Fixed\n\n- Fix issues with device bulk creation in Join Server.\n- Fix device import not setting component hosts automatically.\n- Fix NewChannelReq scheduling condition.\n- Fix publishing events for generated MAC commands.\n- Fix saving changes to device general settings in the Console.\n\n## [3.2.2] - 2019-10-14\n\n### Added\n\n- Initial API and CLI support for LoRaWAN application packages and application package associations.\n- New documentation design.\n- Support for ACME v2.\n\n### Deprecated\n\n- Deprecate the `tls.acme.enable` setting. To use ACME, set `tls.source` to `acme`.\n\n### Fixed\n\n- Fix giving priority to ACME settings to remain backward compatible with configuration for `v3.2.0` and older.\n\n## [3.2.1] - 2019-10-11\n\n### Added\n\n- `support-link` URI config to the Console to show a \"Get Support\" button.\n- Option to explicitly enable TLS for linking of an Application Server on an external Network Server.\n- Service to list QR code formats and generate QR codes in PNG format.\n- Status message forwarding functions to upstream host/s.\n- Support for authorizing device claiming on application level through CLI. See `ttn-lw-cli application claim authorize --help` for more information.\n- Support for claiming end devices through CLI. See `ttn-lw-cli end-device claim --help` for more information.\n- Support for converting Microchip ATECC608A-TNGLORA manifest files to device templates.\n- Support for Crypto Servers that do not expose device root keys.\n- Support for generating QR codes for claiming. See `ttn-lw-cli end-device generate-qr --help` for more information.\n- Support for storage of frequency plans, device repository and interoperability configurations in AWS S3 buckets or GCP blobs.\n\n### Changed\n\n- Enable the V2 MQTT gateway listener by default on ports 1881/8881.\n- Improve handling of API-Key and Collaborator rights in the console.\n\n### Fixed\n\n- Fix bug with logout sometimes not working in the console.\n- Fix not respecting `RootCA` and `InsecureSkipVerify` TLS settings when ACME was configured for requesting TLS certificates.\n- Fix reading configuration from current, home and XDG directories.\n\n## [3.2.0] - 2019-09-30\n\n### Added\n\n- A map to the overview pages of end devices and gateways.\n- API to retrieve MQTT configurations for applications and gateways.\n- Application Server PubSub integrations events.\n- `mac_settings.desired_max_duty_cycle`, `mac_settings.desired_adr_ack_delay_exponent` and `mac_settings.desired_adr_ack_limit_exponent` device flags.\n- PubSub integrations to the console.\n- PubSub service to JavaScript SDK.\n- Support for updating `mac_state.desired_parameters`.\n- `--tls.insecure-skip-verify` to skip certificate chain verification (insecure; for development only).\n\n### Changed\n\n- Change the way API key rights are handled in the `UpdateAPIKey` rpc for Applications, Gateways, Users and Organizations. Users can revoke or add rights to api keys as long as they have these rights.\n- Change the way collaborator rights are handled in the `SetCollaborator` rpc for Applications, Gateways, Clients and Organizations. Collaborators can revoke or add rights to other collaborators as long as they have these rights.\n- Extend device form in the Console to allow creating OTAA devices without root keys.\n- Improve confirmed downlink operation.\n- Improve gateway connection status indicators in Console.\n- Upgrade Gateway Configuration Server to a first-class cluster role.\n\n### Fixed\n\n- Fix downlink length computation in the Network Server.\n- Fix implementation of CUPS update-info endpoint.\n- Fix missing CLI in `deb`, `rpm` and Snapcraft packages.\n\n## [3.1.2] - 2019-09-05\n\n### Added\n\n- `http.redirect-to-host` config to redirect all HTTP(S) requests to the same host.\n- `http.redirect-to-tls` config to redirect HTTP requests to HTTPS.\n- Organization Create page in the Console.\n- Organization Data page to the console.\n- Organization General Settings page to the console.\n- Organization List page.\n- Organization Overview page to the console.\n- Organizations service to the JS SDK.\n- `create` method in the Organization service in the JS SDK.\n- `deleteById` method to the Organization service in the JS SDK.\n- `getAll` method to the Organizations service.\n- `getAll` method to the Organization service in the JS SDK.\n- `getById` method to the Organization service in the JS SDK.\n- `openStream` method to the Organization service in the JS SDK.\n- `updateById` method to the Organization service in the JS SDK.\n\n### Changed\n\n- Improve compatibility with various Class C devices.\n\n### Fixed\n\n- Fix root-relative OAuth flows for the console.\n\n## [3.1.1] - 2019-08-30\n\n### Added\n\n- `--tls.acme.default-host` flag to set a default (fallback) host for connecting clients that do not use TLS-SNI.\n- AS-ID to validate the Application Server with through the Common Name of the X.509 Distinguished Name of the TLS client certificate. If unspecified, the Join Server uses the host name from the address.\n- Defaults to `ttn-lw-cli clients create` and `ttn-lw-cli users create`.\n- KEK labels for Network Server and Application Server to use to wrap session keys by the Join Server. If unspecified, the Join Server uses a KEK label from the address, if present in the key vault.\n- MQTT PubSub support in the Application Server. See `ttn-lw-cli app pubsub set --help` for more details.\n- Support for external email templates in the Identity Server.\n- Support for Join-Server interoperability via Backend Interfaces specification protocol.\n- The `generateDevAddress` method in the `Ns` service.\n- The `Js` service to the JS SDK.\n- The `listJoinEUIPrefixes` method in the `Js` service.\n- The `Ns` service to the JS SDK.\n- The new The Things Stack branding.\n- Web interface for changing password.\n- Web interface for requesting temporary password.\n\n### Changed\n\n- Allow admins to create temporary passwords for users.\n- CLI-only brew tap formula is now available as `TheThingsNetwork/lorawan-stack/ttn-lw-cli`.\n- Improve error handling in OAuth flow.\n- Improve getting started guide for a deployment of The Things Stack.\n- Optimize the way the Identity Server determines memberships and rights.\n\n### Deprecated\n\n- `--nats-server-url` in favor of `--nats.server-url` in the PubSub CLI support.\n\n### Removed\n\n- `ids.dev_addr` from allowed field masks for `/ttn.lorawan.v3.NsEndDeviceRegistry/Set`.\n- Auth from CLI's `forgot-password` command and made it optional on `update-password` command.\n- Breadcrumbs from Overview, Application and Gateway top-level views.\n\n### Fixed\n\n- Fix `grants` and `rights` flags of `ttn-lw-cli clients create`.\n- Fix a bug that resulted in events streams crashing in the console.\n- Fix a bug where uplinks from some Basic Station gateways resulted in the connection to break.\n- Fix a security issue where non-admin users could edit admin-only fields of OAuth clients.\n- Fix an issue resulting in errors being unnecessarily logged in the console.\n- Fix an issue with the `config` command rendering some flags and environment variables incorrectly.\n- Fix API endpoints that allowed HTTP methods that are not part of our API specification.\n- Fix console handling of configured mount paths other than `/console`.\n- Fix handling of `ns.dev-addr-prefixes`.\n- Fix incorrect error message in `ttn-lw-cli users oauth` commands.\n- Fix propagation of warning headers in API responses.\n- Fix relative time display in the Console.\n- Fix relative time display in the Console for IE11, Edge and Safari.\n- Fix unable to change LoRaWAN MAC and PHY version.\n- Resolve flickering display issue in the overview pages of entities in the console.\n\n## [3.1.0] - 2019-07-26\n\n### Added\n\n- `--headers` flag to `ttn-lw-cli applications webhooks set` allowing users to set HTTP headers to add to webhook requests.\n- `getByOrganizationId` and `getByUserId` methods to the JS SDK.\n- A new documentation system.\n- A newline between list items returned from the CLI when using a custom `--output-format` template.\n- An `--api-key` flag to `ttn-lw-cli login` that allows users to configure the CLI with a more restricted (Application, Gateway, ...) API key instead of the usual \"all rights\" OAuth access token.\n- API for getting the rights of a single collaborator on (member of) an entity.\n- Application Payload Formatters Page in the console.\n- Class C and Multicast guide.\n- CLI support for enabling/disabling JS, GS, NS and AS through configuration.\n- Components overview in documentation.\n- Device Templates to create, convert and map templates and assign EUIs to create large amounts of devices.\n- Downlink Queue Operations guide.\n- End device level payload formatters to console.\n- Event streaming views for end devices.\n- Events to device registries in the Network Server, Application Server and Join Server.\n- Functionality to delete end devices in the console.\n- Gateway General Settings Page to the console.\n- Getting Started guide for command-line utility (CLI).\n- Initial overview page to console.\n- Native support to the Basic Station LNS protocol in the Gateway Server.\n- NS-JS and AS-JS Backend Interfaces 1.0 and 1.1 draft 3 support.\n- Option to revoke user sessions and access tokens on password change.\n- Support for NS-JS and AS-JS Backend Interfaces.\n- Support for URL templates inside the Webhook paths ! The currently supported fields are `appID`, `appEUI`, `joinEUI`, `devID`, `devEUI` and `devAddr`. They can be used using RFC 6570.\n- The `go-cloud` integration to the Application Server. See `ttn-lw-cli applications pubsubs --help` for more details.\n- The `go-cloud` integration to the Application Server. This integration enables downlink and uplink messaging using the cloud pub-sub by setting up the `--as.pubsub.publish-urls` and `--as.pubsub.subscribe-urls` parameters. You can specify multiple publish endpoints or subscribe endpoints by repeating the parameter (i.e. `--as.pubsub.publish-urls url1 --as.pubsub.publish-urls url2 --as.pubsub.subscribe-urls url3`).\n- The Gateway Data Page to the console.\n- View to update the antenna location information of gateways.\n- View to update the location information of end devices.\n- Views to handle integrations (webhooks) to the console.\n- Working with Events guide.\n\n### Changed\n\n- Change database index names for invitation and OAuth models. Existing databases are migrated automatically.\n- Change HTTP API for managing webhooks to avoid conflicts with downlink webhook paths.\n- Change interpretation of frequency plan's maximum EIRP from a ceiling to a overriding value of any band (PHY) settings.\n- Change the prefix of Prometheus metrics from `ttn_` to `ttn_lw_`.\n- Rename the label `server_address` of Prometheus metrics `grpc_client_conns_{opened,closed}_total` to `remote_address`\n- Resolve an issue where the stack complained about sending credentials on insecure connections.\n- The Events endpoint no longer requires the `_ALL` right on requested entities. All events now have explicit visibility rules.\n\n### Deprecated\n\n- `JsEndDeviceRegistry.Provision()` rpc. Please use `EndDeviceTemplateConverter.Convert()` instead.\n\n### Removed\n\n- Remove the address label from Prometheus metric `grpc_server_conns_{opened,closed}_total`.\n\n### Fixed\n\n- Fix Basic Station CUPS LNS credentials blob.\n- Fix a leak of entity information in List RPCs.\n- Fix an issue that resulted in some event errors not being shown in the console.\n- Fix an issue where incorrect error codes were returned from the console's OAuth flow.\n- Fix clearing component addresses on updating end devices through CLI.\n- Fix CLI panic for invalid attributes.\n- Fix crash when running some `ttn-lw-cli organizations` commands without `--user-id` flag.\n- Fix dwell-time issues in AS923 and AU915 bands.\n- Fix occasional issues with downlink payload length.\n- Fix the `x-total-count` header value for API Keys and collaborators.\n- Fix the error that is returned when deleting a collaborator fails.\n\n### Security\n\n- Update node packages to fix known vulnerabilities.\n\n## [3.0.4] - 2019-07-10\n\n### Fixed\n\n- Fix rights caching across multiple request contexts.\n\n## [3.0.3] - 2019-05-10\n\n### Added\n\n- Support for getting automatic Let's Encrypt certificates. Add the new config flags `--tls.acme.enable`, `--tls.acme.dir=/path/to/storage`, `--tls.acme.hosts=example.com`, `--tls.acme.email=you@example.com` flags (or their env/config equivalent) to make it work. The `/path/to/storage` dir needs to be `chown`ed to `886:886`. See also `docker-compose.yml`.\n- `GetApplicationAPIKey`, `GetGatewayAPIKey`, `GetOrganizationAPIKey`, `GetUserAPIKey` RPCs and related messages.\n- \"General Settings\" view for end devices.\n- `--credentials-id` flag to CLI that allows users to be logged in with mulitple credentials and switch between them.\n- A check to the Identity Server that prevents users from deleting applications that still contain end devices.\n- Application Collaborators management to the console.\n- Checking maximum round-trip time for late-detection in downlink scheduling.\n- Configuration service to JS SDK.\n- Device list page to applications in console.\n- Events to the application management pages.\n- Round-trip times to Gateway Server connection statistics.\n- Support for the value `cloud` for the `--events.backend` flag. When this flag is set, the `--events.cloud.publish-url` and `--events.cloud.subscribe-url` are used to set up a cloud pub-sub for events.\n- Support for uplink retransmissions.\n- Using median round-trip time value for absolute time scheduling if the gateway does not have GPS time.\n\n### Changed\n\n- Change encoding of keys to hex in device key generation (JS SDK).\n- Change interpretation of absolute time in downlink messages from time of transmission to time of arrival.\n- Improve ADR algorithm performance.\n- Improve ADR performance.\n- Make late scheduling default for gateways connected over UDP to avoid overwriting queued downlink.\n- Make sure that non-user definable fields of downlink messages get discarded across all Application Server frontends.\n- Prevent rpc calls to JS when the device has `supports_join` set to `false` (JS SDK).\n- Update the development tooling. If you are a developer, make sure to check the changes in CONTRIBUTING.md and DEVELOPMENT.md.\n\n### Fixed\n\n- Fix `AppAs` not registered for HTTP interfacing while it is documented in the API.\n- Fix absolute time scheduling with UDP connected gateways\n- Fix authentication of MQTT and gRPC connected gateways\n- Fix connecting MQTT V2 gateways\n- Fix faulty composition of default values with provided values during device creation (JS SDK)\n- Fix preserving user defined priority for application downlink\n- Fix UDP downlink format for older forwarders\n- Fix usage of `URL` class in browsers (JS SDK)\n\n## [3.0.2] - 2019-04-12\n\n### Changed\n\n- Upgrade Go to 1.12\n\n### Fixed\n\n- Fix streaming events over HTTP with Gzip enabled.\n- Fix resetting downlink channels for US, AU and CN end devices.\n- Fix rendering of enums in JSON.\n- Fix the permissions of our Snap package.\n\n## [3.0.1] - 2019-04-10\n\n### Added\n\n- `dev_addr` to device fetched from the Network Server.\n- `received_at` to `ApplicationUp` messages.\n- `ttn-lw-cli users oauth` commands.\n- Event payload to `as.up.forward`, `as.up.drop`, `as.down.receive`, `as.down.forward` and `as.down.drop` events.\n- Event payload to `gs.status.receive`, `gs.up.receive` and `gs.down.send` events.\n- OAuth management in the Identity Server.\n\n### Changed\n\n- Document places in the CLI where users can use arguments instead of flags.\n- In JSON, LoRaWAN AES keys are now formatted as Hex instead of Base64.\n- Make device's `dev_addr` update when the session's `dev_addr` is updated.\n\n### Removed\n\n- Remove end device identifiers from `DownlinkMessage` sent from the Network Server to the Gateway Server.\n\n### Fixed\n\n- Fix `dev_addr` not being present in upstream messages.\n\n<!--\nNOTE: These links should respect backports. See https://github.com/TheThingsNetwork/lorawan-stack/pull/1444/files#r333379706.\n-->\n\n[unreleased]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.24.0...v3.24\n[3.24.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.23.2...v3.24.0\n[3.23.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.23.1...v3.23.2\n[3.23.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.23.0...v3.23.1\n[3.23.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.22.2...v3.23.0\n[3.22.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.22.1...v3.22.2\n[3.22.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.22.0...v3.22.1\n[3.22.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.21.2...v3.22.0\n[3.21.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.21.1...v3.21.2\n[3.21.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.21.0...v3.21.1\n[3.21.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.20.2...v3.21.0\n[3.20.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.20.1...v3.20.2\n[3.20.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.20.0...v3.20.1\n[3.20.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.19.2...v3.20.0\n[3.19.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.19.1...v3.19.2\n[3.19.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.19.0...v3.19.1\n[3.19.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.18.2...v3.19.0\n[3.18.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.18.1...v3.18.2\n[3.18.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.18.0...v3.18.1\n[3.18.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.17.1...v3.18.0\n[3.17.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.17.0...v3.17.1\n[3.17.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.16.2...v3.17.0\n[3.16.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.16.1...v3.16.2\n[3.16.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.16.0...v3.16.1\n[3.16.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.15.3...v3.16.0\n[3.15.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.15.2...v3.15.3\n[3.15.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.15.1...v3.15.2\n[3.15.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.15.0...v3.15.1\n[3.15.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.14.2...v3.15.0\n[3.14.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.14.1...v3.14.2\n[3.14.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.14.0...v3.14.1\n[3.14.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.13.3...v3.14.0\n[3.13.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.13.2...v3.13.3\n[3.13.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.13.1...v3.13.2\n[3.13.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.13.0...v3.13.1\n[3.13.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.12.3...v3.13.0\n[3.12.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.12.2...v3.12.3\n[3.12.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.12.1...v3.12.2\n[3.12.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.12.0...v3.12.1\n[3.12.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.11.3...v3.12.0\n[3.11.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.11.2...v3.11.3\n[3.11.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.11.1...v3.11.2\n[3.11.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.11.0...v3.11.1\n[3.11.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.10.6...v3.11.0\n[3.10.6]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.10.5...v3.10.6\n[3.10.5]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.10.4...v3.10.5\n[3.10.4]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.10.3...v3.10.4\n[3.10.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.10.2...v3.10.3\n[3.10.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.10.1...v3.10.2\n[3.10.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.10.0...v3.10.1\n[3.10.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.9.4...v3.10.0\n[3.9.4]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.9.3...v3.9.4\n[3.9.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.9.1...v3.9.3\n[3.9.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.9.0...v3.9.1\n[3.9.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.8.6...v3.9.0\n[3.8.6]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.8.5...v3.8.6\n[3.8.5]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.8.4...v3.8.5\n[3.8.4]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.8.3...v3.8.4\n[3.8.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.8.2...v3.8.3\n[3.8.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.7.2...v3.8.2\n[3.7.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.7.0...v3.7.2\n[3.7.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.6.0...v3.7.0\n[3.6.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.6.2...v3.6.3\n[3.6.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.6.1...v3.6.2\n[3.6.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.6.0...v3.6.1\n[3.6.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.5.3...v3.6.0\n[3.5.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.5.2...v3.5.3\n[3.5.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.5.1...v3.5.2\n[3.5.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.5.0...v3.5.1\n[3.5.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.4.2...v3.5.0\n[3.4.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.4.1...v3.4.2\n[3.4.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.4.0...v3.4.1\n[3.4.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.3.2...v3.4.0\n[3.3.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.3.1...v3.3.2\n[3.3.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.3.0...v3.3.1\n[3.3.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.2.6...v3.3.0\n[3.2.6]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.2.5...v3.2.6\n[3.2.5]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.2.4...v3.2.5\n[3.2.4]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.2.3...v3.2.4\n[3.2.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.2.2...v3.2.3\n[3.2.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.2.1...v3.2.2\n[3.2.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.2.0...v3.2.1\n[3.2.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.1.2...v3.2.0\n[3.1.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.1.1...v3.1.2\n[3.1.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.1.0...v3.1.1\n[3.1.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.0.4...v3.1.0\n[3.0.4]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.0.3...v3.0.4\n[3.0.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.0.2...v3.0.3\n[3.0.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.0.1...v3.0.2\n[3.0.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.0.0...v3.0.1\n", "// Copyright \u00a9 2020 The Things Network Foundation, The Things Industries B.V.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport React, { useState, useCallback } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport Query from 'query-string'\nimport { defineMessages } from 'react-intl'\n\nimport api from '@account/api'\n\nimport Button from '@ttn-lw/components/button'\nimport ButtonGroup from '@ttn-lw/components/button/group'\nimport Form from '@ttn-lw/components/form'\nimport Input from '@ttn-lw/components/input'\nimport SubmitButton from '@ttn-lw/components/submit-button'\n\nimport IntlHelmet from '@ttn-lw/lib/components/intl-helmet'\n\nimport style from '@account/views/front/front.styl'\n\nimport Yup from '@ttn-lw/lib/yup'\nimport {\n  selectApplicationRootPath,\n  selectApplicationSiteName,\n  selectApplicationSiteTitle,\n} from '@ttn-lw/lib/selectors/env'\nimport sharedMessages from '@ttn-lw/lib/shared-messages'\nimport { userId as userIdRegexp } from '@ttn-lw/lib/regexp'\n\nimport { selectEnableUserRegistration } from '@account/lib/selectors/app-config'\n\nconst m = defineMessages({\n  createAccount: 'Create an account',\n  forgotPassword: 'Forgot password?',\n  loginToContinue: 'Please login to continue',\n  loginFailed: 'Login failed',\n  accountDeleted: 'Account deleted',\n})\n\nconst appRoot = selectApplicationRootPath()\nconst siteName = selectApplicationSiteName()\nconst siteTitle = selectApplicationSiteTitle()\nconst enableUserRegistration = selectEnableUserRegistration()\n\nconst validationSchema = Yup.object().shape({\n  user_id: Yup.string()\n    .min(2, Yup.passValues(sharedMessages.validateTooShort))\n    .max(36, Yup.passValues(sharedMessages.validateTooLong))\n    .matches(userIdRegexp, Yup.passValues(sharedMessages.validateIdFormat))\n    .required(sharedMessages.validateRequired)\n    .trim(),\n  password: Yup.string().required(sharedMessages.validateRequired),\n})\n\nconst url = (location, omitQuery = false) => {\n  const query = Query.parse(location.search)\n\n  const next = query.n || appRoot\n\n  if (omitQuery) {\n    return next.split('?')[0]\n  }\n\n  return next\n}\n\nconst Login = () => {\n  const [error, setError] = useState(undefined)\n  const location = useLocation()\n\n  const handleSubmit = useCallback(\n    async (values, { setSubmitting }) => {\n      try {\n        setError(undefined)\n\n        const castedValues = validationSchema.cast(values)\n        await api.account.login(castedValues)\n\n        window.location = url(location)\n      } catch (error) {\n        setError(error)\n        setSubmitting(false)\n      }\n    },\n    [location],\n  )\n\n  const initialValues = {\n    user_id: '',\n    password: '',\n  }\n\n  let info\n  const next = url(location)\n\n  if (location.state && location.state.info) {\n    info = location.state.info\n  } else if (!next || (next !== appRoot && !Boolean(error))) {\n    info = m.loginToContinue\n  } else if ('account-deleted' in Query.parse(location.search)) {\n    info = m.accountDeleted\n  }\n\n  return (\n    <div className={style.form}>\n      <IntlHelmet title={sharedMessages.login} />\n      <h1 className={style.title}>\n        {siteName}\n        <br />\n        <span className={style.subTitle}>{siteTitle}</span>\n      </h1>\n      <hr className={style.hRule} />\n      <Form\n        onSubmit={handleSubmit}\n        initialValues={initialValues}\n        error={error}\n        errorTitle={m.loginFailed}\n        info={info}\n        validationSchema={validationSchema}\n        horizontal={false}\n      >\n        <Form.Field\n          title={sharedMessages.userId}\n          name=\"user_id\"\n          component={Input}\n          autoFocus\n          required\n        />\n        <Form.Field\n          title={sharedMessages.password}\n          component={Input}\n          name=\"password\"\n          type=\"password\"\n          required\n        />\n        <ButtonGroup>\n          <Form.Submit\n            component={SubmitButton}\n            message={sharedMessages.login}\n            className={style.submitButton}\n            error={Boolean(error)}\n          />\n          {enableUserRegistration && (\n            <Button.Link to={`/register${location.search}`} message={m.createAccount} />\n          )}\n          <Button.Link naked message={m.forgotPassword} to={`/forgot-password${location.search}`} />\n        </ButtonGroup>\n      </Form>\n    </div>\n  )\n}\n\nexport default Login\n"], "fixing_code": ["# Changelog\n\nAll notable changes to this project are documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nwith the exception that this project **does not** follow Semantic Versioning.\n\nFor details about compatibility between different releases, see the **Commitments and Releases** section of our README.\n\n## [Unreleased]\n\n### Added\n\n- Network Server ID (NSID) used for Backend Interfaces interoperability via the `ns.interop.id` and `dcs.edcs.ns-id` configuration options.\n  - In the Network Server, `ns.interop.id` acts as a fallback value for `sender-ns-id` in Join Server interoperability configuration.\n\n### Changed\n\n### Deprecated\n\n- Device Claiming Server configuration option `dcs.edcs.network-server.home-ns-id`. Use `dcs.edcs.ns-id` instead.\n\n### Removed\n\n### Fixed\n\n### Security\n\n- Fix open redirect vulnerability for Console/Account App logins.\n\n## [3.24.0] - 2023-02-02\n\n### Added\n\n- List of end-devices can now be sorted by `last_seen_at` field. Unseen devices will be shown last.\n- End devices now contain `lora_alliance_profile_ids` field.\n- Add `source` config option for TLS certificates in LoRaWAN Backend Interfaces interop client and The Things Join Server device claiming configuration. This value can be `file` (existing behavior) or `key-vault`.\n\n### Changed\n\n- `serial_number` field is now moved to the root of the end device structure. `vendor_id` and `vendor_profile_id` are now moved to the `lora_alliance_profile_ids`.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of added columns and views.\n\n### Deprecated\n\n- Configuring certificate authorities per LoRaWAN Backend Interfaces SenderID (`interop.sender-client-ca`) is now deprecated and support will be removed in a future version of The Things Stack.\n\n### Removed\n\n- The device version identifiers no longer have the `serial_number`, `vendor_id` and `vendor_profile_id` fields.\n\n## [3.23.2] - 2023-01-18\n\n### Changed\n\n- Deletion of the last admin user or removal of its admin status via an update operation now returns an error.\n- Do not allow to remove the collaborator of an entity if it is the last collaborator (in the Console).\n\n### Fixed\n\n- When searching for end-devices, specifying `last_seen_at` as the field in which the devices will be sorted by no longer returns an error.\n- Errors during removal of collaborators the application collaborator form not being forwarded to the user in the Console.\n- Importing devices via CSV no longer skips the first header column when BOM bytes are present.\n\n## [3.23.1] - 2022-12-14\n\n### Added\n\n- List of end-devices can now be sorted by `last_seen_at` field. Unseen devices will be shown last.\n\n### Fixed\n\n- It is now allowed to set `0` for ping slot frequency and beacon frequency in the Network Layer Settings of the end device general settings in the Console.\n- MAC parameters that have the `desired_` will be hidden from the end device general settings for multicast end devices in the Console.\n\n## [3.23.0] - 2022-11-30\n\n### Added\n\n- The Things Join Server 2.0 (type `ttjsv2`) for claiming with Device Claiming Server.\n- All Join Servers with a `/64` JoinEUI prefix are contacted concurrently with LoRaWAN Backend Interfaces interoperability. This should only be used with ambiguous JoinEUIs and when migrating Join Servers.\n\n### Changed\n\n- Gateway EUI is no longer unset when deleting a gateway, meaning it could be recovered if no other gateway claimed it. This requires a schema migration (`ttn-lw-stack is-db migrate`) because of the change in the database's `gateway_eui_index`.\n- The new database driver is no longer specific to the Identity Server and is now activated using the `db.pgdriver` feature flag (instead of `is.pgdriver`).\n\n### Removed\n\n- The Things Join Server 1.0 (type `ttjs`) for claiming with Device Claiming Server. Use The Things Join Server 2.0 (type `ttjsv2`) instead.\n\n### Fixed\n\n- Devices with pending session and MAC state may now successfully be imported.\n- Client creation with an organization API key will no longer send an email without user information to the admins. Instead, the API key name will be used and if that is empty the API key ID will be the default.\n- Allow providing DevEUI for ABP end devices with a LoRaWAN specification lower or equal to 1.0.4 in the end device onboarding screen in the Console.\n- Faulty field validation for byte payloads in the uplink payload formatter panel in the Console.\n- `serial_number` field is now properly stored.\n\n## [3.22.2] - 2022-11-10\n\n### Added\n\n- The `is.gormstore` experimental flag has been added. Swaps the underlying Identity Server store implementation if set to true.\n\n### Changed\n\n- Class B and C downlinks will no longer be automatically retried indefinitely if none of the gateways are available at the scheduling moment, and the downlink paths come from the last uplink.\n  - This was already the behavior for downlinks which had their downlink path provided explicitly using the `class_b_c.gateways` field.\n  - The downlinks will be evicted from the downlink queue and a downlink failure event will be generated. The failure event can be observed by the application using the `downlink_failed` message, which is available in all integrations.\n- Event history and payload storage TTL has now 1% jitter.\n- The underlying store implementation has been changed to be by default based on `bun` instead of `gorm`. The previous store implementation can be reactivated using the `is.gormstore` experimental flag.\n\n### Removed\n\n- The `is.bunstore` experimental flag has been removed.\n\n### Fixed\n\n- Do not require AppKey when skipping Join Server registration in end device onboarding in the Console.\n- Fix auto generation of device ID when using DevEUI generator in the Console.\n- Fix several device onboarding issues with ABP in the Console.\n  - Do not ask for a JoinEUI.\n  - Reinitialize form properly when switching between ABP and OTAA.\n- Issue with pasting values into byte input at the wrong position in the Console.\n- Issue with updating field masks in the webhook edit form in the Console.\n\n## [3.22.1] - 2022-10-19\n\n### Changed\n\n- Option to ignore logs from selected gRPC methods now supports ignoring logs for selected errors on method.\n    Examples:\n    - `--grpc.log-ignore-methods=\"/ttn.lorawan.v3.GsNs/HandleUplink\"`: log is skipped when no error occurs.\n    - `--grpc.log-ignore-methods=\"/ttn.lorawan.v3.GsNs/HandleUplink:pkg/networkserver:duplicate_uplink;pkg/networkserver:device_not_found\"`: log is skipped when either `pkg/networkserver:duplicate_uplink` or `pkg/networkserver:device_not_found` error occurs (but not on success).\n    - `--grpc.log-ignore-methods=\"/ttn.lorawan.v3.GsNs/HandleUplink:;pkg/networkserver:duplicate_uplink\"`: log is skipped on success or when `pkg/networkserver:duplicate_uplink` error occurs.\n- The Gateway Server now takes into consideration the extra duty cycle checks present in the LoRa Basics Station forwarder. Previously the Gateway Server may accept the scheduling of downlinks which the packet forwarder would silently drop.\n  - Note that in some rare cases in which the LoRa Basics Station duty cycle is stricter than the windowed approach used by The Things Stack, the scheduling will fail and this will be visible via `ns.down.data.schedule.fail` events. Note that this is actually a positive outcome - it allows the Network Server to schedule the downlink via another gateway, while previously the downlink would be scheduled but get silently dropped on the gateway.\n\n## [3.22.0] - 2022-10-06\n\n### Added\n\n- Add more specific rights for OAuth clients.\n\n### Changed\n\n- The flow for adding end devices has been updated in the Console.\n  - Device QR codes can now be scanned to speed up end device onboarding.\n  - Claiming end devices from external Join Servers is now possible seemlessly from the same onboarding flow.\n- LoRa coding rate now defined in `DataRate` instead of `Band`.\n- The Network Server will now schedule a potentially empty downlink in order to stop end devices from sending sticky MAC commands.\n- Factory preset frequencies may now be provided for bands with fixed channel plans, such as US915 or AU915. The factory preset frequencies are interpreted as the only channels which are enabled at boot time.\n- `TxParamSetupReq` MAC command priority has been increased.\n- `DevStatusReq` MAC command priority has been lowered.\n\n### Removed\n\n- Removed coding rate from `TxSettings` as it is now defined in `DataRate`.\n\n### Fixed\n\n- `--mac-settings.adr.mode.disabled`, `--mac-settings.adr.mode.dynamic` and `--mac-settings.adr.mode.static` flags of the `end-device update` command.\n- Pagination in `sessions` and `access tokens` tables in the Console.\n- `LinkADRReq` MAC command generation for LoRaWAN 1.0 and 1.0.1 end devices.\n- `LinkADRReq` no longer attempts to enable channels which have not yet been negotiated with the end device.\n- Downlink path selection for uplinks which are not LoRa modulated.\n- Issues with byte inputs in the Console.\n  - Pasting values into the input leading to issues in some cases.\n  - Values being typed double on android phones.\n- Console showing deleted collaborator after successful deletion in application collaborator list.\n- Console crashing after deleting an organization.\n\n## [3.21.2] - 2022-09-14\n\n### Added\n\n- New `ListBands` RPC on the `Configuration` service.\n  - Added support to CLI. Available via the `end-devices list-bands` command.\n- CLI support for listing PHY versions via the `end-devices list-phy-versions` CLI command.\n- New `NetID` and `DeviceAddressPrefixes` RPC on the `NS` service.\n  - Added support on CLI. Available via the `end-devices get-net-id` and `end-devices get-dev-addr-prefixes` commands.\n- Support for loading end device template from Device Repository when importing devices using a CSV file.\n- Experimental support for normalized payload.\n- Support management of deleted users in the Console.\n- Decoded payloads are now visible for downlinks in the Console.\n- Support for dynamic ping slot frequencies, as used by the US915 and AU915 bands.\n- Support for LoRa Basics Station beaconing.\n\n### Changed\n\n- Deprecated `attributes` from `GatewayAntenna` definition. While it was present in the API it was never stored in the database.\n- Absolute time downlinks (such as class B ping slots or class C absolute time downlinks) are now using the native class B downlink API of LoRa Basics Station.\n- Only gateways which are guaranteed to be GPS capable may now be used for absolute time downlinks. This ensures that gateways that have an unknown time source are not used for absolute time scheduling.\n- The static ADR mode may now steer the end device to use custom data rates such as SF7BW250, FSK and LR-FHSS.\n- The Console will try to resolve invalid state errors during login with an automatic refresh.\n- Error details are now displayed in a modal instead of within the notification element in the Console.\n\n### Removed\n\n- Experimental support for `LoRa Basics Station` gateway GPS timestamps which use the wrong precision (milliseconds instead of microseconds). Please ensure that your gateway has been updated to the latest firmware.\n\n### Fixed\n\n- The Gateway Server scheduler no longer considers the absolute time of a downlink to be the time of arrival.\n- The Network Server now correctly handles the command that may succeed a `LinkADRAns` response.\n- LR-FHSS data rate matching.\n- Console data rate rendering of non-LoRa modulations.\n\n### Security\n\n- End device network layer form crashing in some situations in the Console device general settings.\n- End device overview crashing in some situations in the Console.\n- Device import when using Join Server-only deployments.\n- QRG can generate QR Codes without the claim authentication code.\n\n## [3.21.1] - 2022-08-24\n\n### Added\n\n- New `SearchAccounts` RPC on the `EntityRegistrySearch` service.\n- Prompt user to confirm navigation when changes have not been saved in the payload formatter form to prevent big change-drafts from getting lost.\n- Event data pushed by webhooks can now be filtered with field masks.\n  - Support for the field mask setup was added for both CLI and Console.\n\n### Changed\n\n- Gateway registration in the Console has been updated to simplify the onboarding experience.\n\n### Fixed\n\n- CLI command `end-device template create` no longer breaks when providing field mask values.\n- Device repository services no longer require ApplicationID in its request URL.\n- Importing ABP devices via the CSV format now correctly handles the missing session key ID.\n\n## [3.21.0] - 2022-08-11\n\n### Added\n\n- Component selector for Join Server interoperability configuration. This allows administrators to declare separate Network Server and Application Server configuration for the same JoinEUI ranges in the same interoperability configuration. See [documentation](https://www.thethingsindustries.com/docs/reference/interop-repository/).\n- `BatchGetGatewayConnectionStats` RPC to fetch Gateway Connection Stats for a batch of gateways.\n- The ability to disable the downlink scheduling mechanism for individual end devices (`mac-settings.schedule-downlinks`).\n  - This option is useful during a migration procedure in order to force the end device to join the new network. The Network Server will no longer schedule any data downlinks or MAC commands, and will stop answering potential join requests.\n- A new implementation of the Identity Server storage layer. In v3.21.0 the new implementation is not yet used by default, but it can be enabled with the `is.bunstore` feature flag. A new database driver can be enabled with the `is.pgdriver` feature flag.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of added columns and views.\n- Support for comma-separated (`,`) values in The Things Stack CSV file format for importing end devices.\n- Support for the `RxParamSetup`, `RxTimingSetup`, `TxParamSetup`, and `DlChannel` sticky answer mechanism. The commands were supported previously, but subsequent sticky responses would cause the Network Server to drop the MAC command buffer in certain situations.\n\n### Changed\n\n- Deleted users are no longer included in primary email addresses uniqueness checks. This allows a user to create a new account which uses the email address of a deleted account.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) due to updated indices.\n- The CLI settings fields `retry-config.enable_metadata` and `retry-config.default_timeout` have been renamed to `retry.enable-metadata` and `retry.default-timeout` for consistency reasons.\n- Generated device ID based on a DevEUI from an imported CSV file is now prepended by `eui-`. This is consistent with generated device IDs by the Console.\n- The Claim Authentication Code (CAC) field is stored in the Identity Server instead of the Join Server.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n  - CAC values stored currently in the Join Server should be migrated to the Identity Server. One method is to run the following CLI commands on each device with a CAC.\n    - Read the current values using `ttn-lw-cli dev get <application-id> <device-id> --claim-authentication-code`. This will fetch the value stored in the Join Server as a fallback.\n    - Write back the value read `ttn-lw-cli dev set <application-id> <device-id> --claim-authentication-code.valid_from [xxx] --claim-authentication-code.valid_to [xxx] --claim-authentication-code.value <xxx>`. This will by default write to the Identity Server.\n    - Note that this requires a minimum CLI version of 3.21.0.\n- Device Repository no longer uses the `ApplicationID` for validating requests. Authentication is still necessary, but the `ApplicationID` field has been deprecated in the Device Repository API.\n\n### Fixed\n\n- Console showing `404 Not Found` errors for pages containing user IDs in the path, when the user ID has a length of two.\n- CLI no longer panics when deleting a device without JoinEUI, this scenario only occurred when deleting a device that uses ABP.\n- Console crashing when navigating to certain Packet Broker network configuration pages.\n- Packet Broker network pages becoming inaccessible until refreshing after a user navigates to a non-existing network.\n- The batch update query for `EndDevice.LastSeenAt` field now specifies the data type of the placeholders.\n  - This resolves an issue in the Console where `Last activity` values were inconsistent.\n\n## [3.20.2] - 2022-07-20\n\n### Added\n\n- More fields were added to the csv end-device migration procedure. The details on which fields were added can be found [here](https://www.thethingsindustries.com/docs/getting-started/migrating/device-csv/).\n- Authorization management in the Account app.\n- Gateway remote address to gateway connection statistics.\n\n### Fixed\n\n- Encoding of DevAddr, EUI and similar fields in `text/event-stream` responses.\n- GPS time leap second calculations taking a new leap second into consideration for 6th of July 2022.\n\n## [3.20.1] - 2022-06-29\n\n### Added\n\n- Support inviting users in the Console.\n\n### Changed\n\n- In AS923 frequency plans, the Network Server will skip the RX1 window if the data rate is ambiguous.\n  - This change occurs in old Regional Parameters versions in which the initial downlink dwell time setting of the end device is not specified. The end device may have the downlink dwell time setting either enabled or disabled, and due to this the data rate of the RX1 window is ambiguous.\n  - This ambiguity exists until the Network Server is successful in negotiating the dwell time limitations using the TxParamSetupReq MAC command. This will occur automatically and does not require any external input.\n  - If you already know the boot dwell time settings of your end device, you may provide them via the `--mac-settings.downlink-dwell-time` and `--mac-settings.uplink-dwell-time` MAC settings. This will ensure that RX1 transmissions are available from the first uplink of the session.\n\n### Removed\n\n- Sorting on associated rights in the API keys table.\n\n### Fixed\n\n- `last activity` not updating when an end device joins for the first time in the Console.\n- A bug that would show the \"Status count periodicity\"-field in the Console as `200` when actually set to `0`.\n- A bug causing map viewports to be set in odd locations when setting end device/gateway locations.\n- Console crashing when sorting by associated rights in the API keys table.\n\n## [3.20.0] - 2022-06-15\n\n### Added\n\n- OAuth client management in the account app.\n- Support claim protection when claiming end devices on The Things Join Server.\n- CLI commands `notifications list` and `notifications set-status` to manage user notifications.\n- Support for class B and C downlink transmissions through multiple gateways simultaneously.\n\n### Changed\n\n- Entities are now fully validated when updated in the stores.\n  - Previously only the updated paths where validated. This lead to situations in which a partial update could cause the entity as a whole to reach an invalid state.\n- Application, gateway, end device and organization-tables in the Console are now sorted by creation time by default (newest first).\n- Collaborator and API Key tables can now be sorted in the Console.\n- The application table in the Console now shows the amount of end devices.\n- The organizations table in the Console now shows the amount of collaborators.\n- Table layouts for several entities have been improved on the Console.\n\n### Fixed\n\n- End devices running on MAC versions higher or equal to 1.1 showing network downlink frame counters instead of application downlink frame counters.\n- Wrong representation of time values between midnight and 1am (eg. 24:04:11) in the Console in some cases.\n\n## [3.19.2] - 2022-05-25\n\n### Added\n\n- Allow setting an expiry date for API keys in the Console\n- New event type `gs.gateway.connection.stats` with connection statistics. A new event is sent at most every `gs.update-connection-stats-debounce-time` time and at least every `gs.update-connection-stats-interval` time.\n- Button to export as JSON end device `mac-settings` and `mac-state` in the Console.\n- Support for the `FOpts encryption, usage of FCntDwn` LoRaWAN 1.1 erratum.\n\n### Changed\n\n- Event type for `gs.up.receive` event to `GatewayUplinkMessage`.\n- Default debounce time for updating connection stats in de Gateway Server (configuration setting `gs.update-connection-stats-debounce-time`) is now 30 seconds.\n- Error code when importing CSV file with invalid LoRaWAN or Regional Parameters version.\n- Emails sent by the Identity Server now also contain HTML versions.\n  - For the images in these emails to work, an absolute `is.email.network.assets-base-url` (and optionally `is.email.network.branding-base-url`) needs to be set in configuration.\n- Notification emails are now sent through the Notification Service of the Identity Server.\n- \"Last activity\"-information in the Console is now sourced as a single aggregate from the Identity Server.\n- End device overview in the Console.\n  - Showing MAC/PHY versions and used frequency plan.\n  - Hiding the entity description if not set.\n  - Showing information of pending sessions.\n  - Automatically updating session info (no refresh necessary to schedule downlinks after a device has joined).\n  - Showing session start time.\n- The Things Stack is now built with Go 1.18.\n- Layout of webhook and Pub/Sub forms to improve UX.\n- The Network Server Address used for End Device Claiming is fetched from the configuration instead of client input.\n\n### Removed\n\n- The ability to create custom email templates.\n\n### Fixed\n\n- Support `app_eui` as alias for `join_eui` in CSV file import, per documentation.\n- End devices frame counts being displayed as `n/a` when event stream contained historical data message events.\n- Gateway general settings (Basic settings) not saving changes in some cases.\n- Contact info validation not possible when user is already logged in.\n- CLI not allowing devices to be created or updated.\n- End device creation no longer errors on missing application info rights.\n- Missing success notification when successfully deleting an application in the Console.\n- CLI create commands for applications, gateways and clients no longer have their decoded ID emptied when using the `--user-id` flag.\n- Metric `ttn_lw_events_channel_dropped_total` not getting updated.\n- Dropped events when calling the Stream RPC with a long tail.\n\n### Security\n\n- Security fix for an issue where the description and list of rights of arbitrary API keys could be retrieved by any logged-in user if the 24-bit random API key ID was known.\n\n## [3.19.1] - 2022-05-04\n\n### Changed\n\n- Application Server now decodes downlink if a downlink decoder is present and binary payload is scheduled.\n\n### Fixed\n\n- End devices frame counts being displayed as `n/a` when event stream contained historical data message events.\n- Gateway general settings (Basic settings) not saving changes in some cases.\n\n## [3.19.0] - 2022-04-21\n\n### Added\n\n- Session management page in Account App.\n- Status page references in the Console.\n- Notification Service API that will allow users to receive notifications about their registered entities.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added tables.\n- Add `network_server_address`, `application_server_address` and `join_server_address` to applications.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- New ADR settings API, which allows stronger control over the ADR algorithm.\n  - The new settings fields can be found under `mac-settings.adr`, and are mutually exclusive with `use-adr` and `adr-margin`. The legacy settings need to be unset before the new API options may be used.\n  - `mac-settings.adr.mode.disabled` completely disables the ADR algorithm.\n  - `mac-settings.adr.mode.static.data-rate-index`, `mac-settings.adr.mode.static.nb-trans`, `mac-settings.adr.mode.static.tx-power-index` allow the user to provide static ADR parameters to be negotiated with the end device. These options persist over multiple sessions and do not require a session reset in order to be propagated to the current session.\n  - `mac-settings.adr.mode.dynamic.min-data-rate-index` and `mac-settings.adr.mode.dynamic.max-data-rate-index` control the data rate index range which the Network Server will attempt to negotiate with the end device. Note that if the provided interval is disjoint with the available data rate indices, no negotiation will take place.\n  - `mac-settings.adr.mode.dynamic.min-tx-power-index` and `mac-settings.adr.mode.dynamic.max-tx-power-index` have similar behavior, but for transmission power indices.\n  - `mac-settings.adr.mode.dynamic.min-nb-trans` and `mac-settings.adr.mode.dynamic.max-nb-trans` have similar behavior, but for NbTrans.\n  - `mac-settings.adr.mode.dynamic.margin` may be used to provide the margin of the ADR algorithm. It replaces the old `adr-margin` setting.\n  - `use-adr` and `adr-margin` are still supported, but deprecated. Any future API usage should instead use the `mac-settings.adr` settings.\n- Service to parse QR codes and return the data within.\n\n### Changed\n\n- Sortable tables are now sorted by default in the Console\n\n### Fixed\n\n- Console determining gateways as \"Other cluster\" even though using the same host if server addresses not matching exactly (e.g. due to using different host or scheme).\n- Inconsistency in setting gateway's LNS Auth key in the Console.\n- CLI no longer informs the user that is using the default JoinEUI when passing its value via flags.\n- Generating device ID from a DevEUI when importing a CSV file.\n- The `is-db migrate` command that failed when running on databases created by `v3.18`.\n- Some error messages being displayed as `error:undefined:undefined` in the Console, e.g. in the live data view.\n- Missing `query` flag on CLI search commands.\n\n## [3.18.2] - 2022-03-29\n\n### Added\n\n- Support for importing end devices using a CSV file. See [documentation](https://www.thethingsindustries.com/docs/reference/data-formats/#csv) for the data format.\n- Support claiming end devices in an external Join Server (ex: The Things Join Server).\n- Support to fetch LoRaWAN end device profiles using numeric identifiers.\n\n### Changed\n\n- Replace `as.down.data.forward` to `as.down.data.receive` in default event filter, so that decrypted and decoded dowlink payload can be examined in the Console.\n\n### Fixed\n\n- Join-accept scheduling if it took more than ~1.2 seconds to process the device activation with default configuration. These slow device activations can be observed when using external Join Servers.\n- Fix issues in the webhook forms causing webhooks to be created with all message types enabled and no way of deactivating message types.\n- Fix validation issue in the webhook form not detecting message type paths with more than 64 characters.\n- Fix \"reactivate\"-webhook button in the Console.\n- Port returned by the LBS LNS discovery message if standard 80/443 ports are used.\n\n## [3.18.1] - 2022-03-09\n\n### Added\n\n- Add HTTP basic authentication configuration to the webhooks form in the Console.\n- Show repository formatter code in the payload formatter form in the Console and allow pasting the application and payload formatter code when using the JavaScript option.\n- gRPC service to Gateway Configuration Server so that gateway configurations can be obtained via gRPC requests.\n- The option to configure the Redis idle connection pool timeout, using the `redis.idle-timeout` setting.\n- New RP002 regional parameters as options during device registration in the Console.\n- Default gateway visibility configuration in Packet Broker agent in the Console.\n\n### Changed\n\n- The custom webhook option is now shown at the top of the list in the Console when adding new webhooks.\n- Wording around webhook statuses to `Healthy`, `Requests failing` and `Pending`.\n- The uplink event preview in the Console now shows the highest SNR.\n- When scheduling downlink messages with decoded payload, the downlink queued event now contains the encoded, plain binary payload.\n- When Application Server forwards downlink messages to Network Server, the event payload now contains the encrypted LoRaWAN `FRMPayload`.\n- The Network Server will now match downlink acknowledgements on the `cache` redis cluster (previously the `general` cluster was used).\n- Gateway Connection statistics updates are now debounced. The debounce period occurs before the statistics are stored, and can be configured using the `gs.update-connection-stats-debounce-time` setting (default 5 seconds).\n- Payload formatter form layout in the Console.\n- Event publication when the Redis backend is used may no longer block the hot path. Instead, the events are now asynchronously published, which may render their ordering to change.\n  - The events are queued and published using the worker pool mechanism, under the `redis_events_transactions` pool.\n  - The length of the queue used by the pool may be configured using the `events.redis.publish.queue-size` setting.\n  - The maximum worker count used by the pool may be configured using the `events.redis.publish.max-workers` setting.\n\n### Removed\n\n- Ability to select the `Repository` payload formatter type for end devices that have no Device Repository association or have no associated repository payload formatter.\n\n### Fixed\n\n- Consistent ordering of entities with equal values for the sort field.\n- Fix `xtime` sent to LBS gateways for Class C downlinks.\n\n## [3.18.0] - 2022-02-23\n\n### Added\n\n- Retain at most 10 recent session keys in the Join Server. This avoids a slowly growing number of session keys in the Join Server's database.\n  - This requires a database migration (`ttn-lw-stack js-db migrate`).\n- Add TTL for gateway connection stats. Can be configured with the option `gs.connection-stats-ttl`.\n- Add `query` field to search requests, allowing to search for a string in any of ID, Name, Description and EUI (for entities that have EUIs).\n- Added fallback values for end device import in the Console.\n\n### Changed\n\n- The minimum required Redis version is now 6.2.\n- Applications on other cluster will be hidden in Applications list in the Console.\n\n### Deprecated\n\n- Gateway Server setting `gs.update-connection-stats-debounce-time` is no longer valid.\n\n### Fixed\n\n- Webhook statuses being shown as pending regardless of their actual condition.\n- Device activation flow with a LoRaWAN Backend Interfaces 1.1 capable Join Server.\n  - Join Servers using Backend Interfaces 1.1 (protocol `BI1.1`) must be configured with a `sender-ns-id` containing the EUI of the Network Server.\n- Fix `time.Duration` flags in CLI.\n- Gateway Server will no longer leave permanent gateway connection stats data on the registry when crashing.\n\n## [3.17.2] - 2022-01-30\n\n### Added\n\n- Add configurable storage limit to device's DevNonce in the JoinServer. Can be configured using the option `js.dev-nonce-limit`.\n- Fix copy button in API key modal in the Console.\n- Enable copying and format transformations of byte values in the event previews in the Console.\n- Attribute `administrative_contact` on \"gateway eui taken\" error to help users resolve gateway EUI conflicts.\n- Add retry capability for cli requests. Can be configured with the options found in `retry-config`, some of the configuration options are `retry-config.max` and `retry-config.default-timeout`.\n\n### Changed\n\n- Webhook maximum header value length extended to 4096 characters.\n- Limited the end device event types that are included in application event streams to only application layer events, errors and warnings. Other end device events can still be received when subscribing to end device device events.\n- Several small improvements to the styling, structuring and input logic of forms in the Console.\n\n### Fixed\n\n- CLI Completion and Documentation commands no longer try to make a server connection.\n- When an end device has both `NwkKey` and `AppKey` provisioned in the Join Server, `NwkKey` is used for MIC and session key derivation when activating the device in LoRaWAN 1.0.x. This is per LoRaWAN 1.1 specification.\n- Gateway Server will no longer report the gateways as being both connected and disconnected at the same time.\n\n## [3.17.1] - 2022-01-12\n\n### Changed\n\n- Gateways are removed from the Packet Broker Mapper API when unsetting the location public setting. This is to remove gateways from the map. Previously, the location was still set, but it did not get updated.\n\n### Fixed\n\n- Rate limiting of cluster authenticated RPCs.\n- CLI panic when setting end devices.\n\n## [3.17.0] - 2022-01-07\n\n### Added\n\n- Support reading the Join Server's default JoinEUI and using this in the CLI for end device creation.\n  - The Join Server has a new API `GetDefaultJoinEUI`.\n  - The default JoinEUI can be configured on the Join Server using the option `--js.default-join-eui`.\n- Filtering of end device frequency plans in end device forms based on band id in the Console.\n- Showing automatically set entity locations in the Console.\n- Applications, OAuth clients, gateways and organizations now have an `administrative_contact` and `technical_contact`.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n\n### Deprecated\n\n- The `contact_info` fields of applications, OAuth clients, gateways, organizations and users.\n\n### Fixed\n\n- CLI panic when getting devices.\n- Application uplink processing serialization behavior in the Application Server.\n\n## [3.16.2] - 2021-12-17\n\n### Added\n\n- User defined antenna gain for LBS gateways.\n- Webhooks now have a health status associated with them. Webhooks that fail successively are now disabled for a period of time.\n  - Failure in this context means that the HTTP endpoint returned a non-2xx status code.\n  - A successful HTTP request will reset the failure counter.\n  - The number of allowed successive failures and cooldown period can be configured using the `--as.webhooks.unhealthy-attempts-threshold` and `--as.webhooks.unhealthy-retry-interval` configuration options.\n- Webhook enabled path validation in the Console.\n\n### Changed\n\n- Increased the maximum gRPC message size to 16MB.\n- Gateways which have been deleted are now automatically disconnected by the Gateway Server.\n- Mark off and hide and restrict access to end devices that are registered on a different cluster in the Console.\n- Show more detailed last activity information inside tooltip info in the Console.\n- Add a button to allow exporting the event log in the Console.\n\n### Fixed\n\n- Access to application payload formatters for users with `RIGHT_APPLICATION_SETTINGS_BASIC` right.\n- End device mac settings handling in the Console.\n- Uplink and downlink counters display on end device activity in the Console.\n- Join settings handling in JS-only deployments in the Console.\n- Configuring Packet Broker listed option when Packet Broker Agent is configured with a Packet Broker tenant API key.\n- Contact info validation through the Account app.\n\n## [3.16.1] - 2021-11-26\n\n### Added\n\n- Support for fine timestamps and frequency offsets sent by gateways with SX1303 concentrator using the legacy UDP protocol.\n- Support for resetting end device session context and MAC state in the Console.\n- The Content-Security-Policy header (that was previously behind the `webui.csp` feature flag) is now enabled by default.\n- Default `Cache-Control: no-store` headers.\n- `Cache-Control: public, max-age=604800, immutable` headers for hashed static files.\n- Experimental support for BasicStation GPS timestamps which use the wrong precision (milliseconds instead of microseconds).\n  - The Gateway Server will attempt to determine the correct GPS timestamp from the provided `gpstime` based on the time at which the upstream message has been received.\n  - This workaround will be available until the related gateway vendors will release patches for this issue.\n- Firmware version of The Things Kickstarter Gateway are written to the gateway attributes upon receiving a valid status message.\n- Desired mac settings to end device general settings in the Console.\n- Experimental support for Azure Blob Storage. Only authentication via Managed Identity is supported.\n\n### Changed\n\n- Gateway server disconnects LoRa Basics Station gateways that stop sending pongs to server pings. This does not apply to gateways that don't support pongs.\n- The new plugin for reading/writing JSON in our API (that was previously behind the `jsonpb.jsonplugin` feature flag) is now enabled by default. All API responses should be equivalent, but in some cases object fields may be in a different order.\n\n### Fixed\n\n- The reported sub-band's `downlink_utilization` in gateway connection stats now represents the utilization of the available duty-cycle time.\n- Missing fields when admins list non-owned entities.\n- Using the correct timestamp when retreiving the \"Last activity\" data point for Gateways on initial page loads in the Console.\n- Events reappearing in the end device data view after clearing them when navigating back and forth.\n\n## [3.16.0] - 2021-11-12\n\n### Added\n\n- `ttn_lw_as_subscription_sets_publish_success_total` and `ttn_lw_as_subscription_sets_publish_failed_total` metrics to track the number of subscription set publish attempts.\n- Application Server advanced distribution settings:\n  - `as.distribution.global.individual.subscription-blocks` controls if the Application Server should block while publishing traffic to individual global subscribers (such as MQTT clients).\n  - `as.distribution.global.individual.subscription-queue-size` controls how many uplinks the Application Server should buffer for an individual global subscriber. Note that when the buffer is full, the Application Server will drop the uplinks if `--as.distribution.global.individual.subscription-blocks` is not enabled. Use a negative value in order to disable the queue.\n  - `as.distribution.local.broadcast.subscription-blocks` controls if the Application Server should block while publishing traffic to broadcast local subscribers (such as webhooks and application packages matching).\n  - `as.distribution.local.broadcast.subscription-queue-size` controls how many uplinks the Application Server should buffer for an broadcast local subscriber. Has the same semantics as `--as.distribution.global.individual.subscription-queue-size`.\n  - `as.distribution.local.individual.subscription-blocks` controls if the Application Server should block while publishing traffic to individual local subscribers (such as PubSub integrations).\n  - `as.distribution.local.individual.subscription-queue-size` controls how many uplinks the Application Server should buffer for an individual local subscriber. Has the same semantics as `--as.distribution.global.individual.subscription-queue-size`.\n- `ttn_lw_gs_txack_received_total`, `ttn_lw_gs_txack_forwarded_total` and `ttn_lw_gs_txack_dropped_total` metrics, which track the transmission acknowledgements from gateways.\n- `gs.txack.receive`, `gs.txack.drop` and `gs.txack.forward` events, which track the transmission acknowledgements from gateways.\n- `ttn-lw-stack as-db migrate` command to migrate the Application Server database. This command records the schema version and only performs migrations if on a newer version.\n  - Use the `--force` flag to force perform migrations.\n- Server-side event filtering with the `names` field.\n\n### Changed\n\n- Gateway Server default UDP worker count has been increased to 1024, from 16.\n- Application Server webhooks and application packages default worker count has been increased to 1024, from 16.\n- Application Server no longer sets the end device's `session.started_at` and `pending_session.started_at`. The session start time should be retrieved from the Network Server, per API specification.\n  - This requires an Application Server database migration (`ttn-lw-stack as-db migrate`) to clear the `started_at` field in existing (pending) sessions.\n- Console changing to server-side event filtering (used to be client-side).\n\n### Removed\n\n- The `ttn_lw_gs_status_failed_total`, `ttn_lw_gs_uplink_failed_total` metrics. `ttn_lw_gs_status_dropped_total` and `ttn_lw_gs_uplink_dropped_total` should be used instead, as they contain the failure cause.\n- The `gs.status.fail` and `gs.up.fail` events. `gs.status.drop` and `gs.up.drop` should be used instead, as they contain the failure cause.\n- The `data_rate_index` field in uplink message metadata. Observe the fully described data rate in the `data_rate` field instead.\n- LoRaWAN data rate index reported to LoRa Cloud DMS.\n- Dockerfile doesn't define environmental variables `TTN_LW_BLOB_LOCAL_DIRECTORY`, `TTN_LW_IS_DATABASE_URI` and `TTN_LW_REDIS_ADDRESS` anymore. They need to be set when running the container: please refer to `docker-compose.yml` for example values.\n- `CockroachDB` from development tooling as well as config option within `docker-compose.yml`.\n  - This also changes the default value of the `--is.database-uri` option, so it can connect to the development Postgres database by default.\n\n### Fixed\n\n- Handling of NaN values in our JSON API.\n- Receiver metadata from more than one antenna is now available in messages received from Packet Broker.\n- Unhelpful error message when aborting the OIDC Login in the Console.\n- Parsing of multi-word description search queries.\n\n## [3.15.3] - 2021-10-26\n\n### Fixed\n\n- Gateway disconnection when location updates from status messages are enabled.\n- Table entries not allowing to be opened in new tabs in the Console.\n- Right clicking on table entries navigating to respective entity in the Console.\n\n## [3.15.2] - 2021-10-22\n\n### Added\n\n- `tls.cipher-suites` config option to specify used cipher suites.\n- Support for enhanced security policies of Packet Broker services.\n- Handling of MAC and PHY versions in end device forms based on selected frequency plan in the Console.\n- Support for scheduling downlink messages as JSON in the Console.\n- Support for Packet Broker authentication through LoRaWAN Backend Interfaces. This adds the following configuration options:\n  - `interop.public-tls-address`: public address of the interop server. The audience in the incoming OAuth 2.0 token from Packet Broker is verified against this address to ensure that other networks cannot impersonate as Packet Broker;\n  - `interop.packet-broker.enabled`: enable Packet Broker to authenticate;\n  - `interop.packet-broker.token-issuer`: the issuer of the incoming OAuth 2.0 token from Packet Broker is verified against this value.\n- Support for LoRaWAN Backend Interfaces in Identity Server to obtain an end device's NetID, tenant ID and Network Server address with the use of a vendor-specifc extension (`VSExtension`). This adds the following configuration options:\n  - `is.network.net-id`: the NetID of the network. When running a Network Server, make sure that this is the same value as `ns.net-id`.\n  - `is.network.tenant-id`: the Tenant ID in the host NetID. Leave blank if the NetID that you use is dedicated for this Identity Server.\n- Configuration option `experimental.features` to enable experimental features.\n- Tooltip descriptions for \"Last activity\" values (formerly \"Last seen\") and uplink/downlink counts in the Console.\n- Status pulses being triggered by incoming data in the Console.\n- Packet broker page crashing when networks with a NetID of `0` are present.\n- Allowing to toggle visibility of sensitive values in text inputs in the Console.\n- Webhook failed event.\n\n### Changed\n\n- Searching for entity IDs is now case insensitive.\n- Renamed entitie's \"Last seen\" to \"Last activity\" in the Console.\n- The database queries for determining the rights of users on entities have been rewritten to reduce the number of round-trips to the database.\n- The default downlink path expiration timeout for UDP gateway connections has been increased to 90 seconds, and the default connection timeout has been increased to 3 minutes.\n  - The original downlink path expiration timeout was based on the fact that the default `PULL_DATA` interval is 5 seconds. In practice we have observed that most gateways actually send a `PULL_DATA` message every 30 seconds instead in order to preserve data transfer costs.\n- The default duration for storing (sparse) entity events has been increased to 24 hours.\n\n### Removed\n\n- Option to select targeted stack components during end device import in the Console.\n\n### Fixed\n\n- LoRaWAN Backend Interfaces 1.1 fields that were used in 1.0 (most notably `SenderNSID` and `ReceiverNSID`). Usage of `NSID` is now only supported with LoRaWAN Backend Interfaces 1.1 as specified.\n- Connection status not being shown as toast notification.\n- Registering and logging in users with 2 character user IDs in the Account App.\n- Frequency plan display for the gateway overview page in the Console.\n- Profile settings link not being present in the mobile menu in the Console.\n- Calculation of \"Last activity\" values not using all available data in the Console.\n- Layout jumps due to length of \"Last activity\" text.\n- Invalid `session` handling in Network Layer settings form in the Console.\n\n### Security\n\n- Network Servers using LoRaWAN Backend Interfaces to interact with the Join Server can now provide a single Network Server address in the X.509 Common Name of the TLS client certificate (the old behavior) or multiple Network Server addresses in the X.509 DNS Subject Alternative Names (SANs). DNS names have precedence over an address in the Common Name.\n\n## [3.15.1] - 2021-10-01\n\n### Added\n\n- Packet Broker gateway visibility management (default settings only). See `ttn-lw-cli packetbroker home-networks gateway-visibilities --help` for more information.\n\n### Changed\n\n- The Gateway Server worker pools may now drop workers if they are idle for too long.\n- FPort = 0 uplinks are no longer decoded by the Application Server, and the Network Server no longer provides the frame payload to the Application Server for these messages.\n\n### Fixed\n\n- Emails to admins about requested OAuth clients.\n- `session` handling for joined OTAA end devices in the Console.\n- Empty Join Server address handling in end device creation form in the Console.\n- Data Rate to data rate index matching for uplinks and downlinks.\n\n## [3.15.0] - 2021-09-17\n\n### Added\n\n- RPC to query supported PHY versions for a given Band ID.\n- Non-TLS LNS endpoint support.\n\n### Changed\n\n- Update to Go 1.17.\n- LBS timestamp rollover threshold.\n- Layout of error pages.\n- The Application Server worker pools may now drop workers if they are idle for too long.\n- Improved error page UX in the Console.\n\n### Fixed\n\n- Entity purge handling for non-admin users in the Console.\n- URL field validation in webhook forms in the Console when value is not trimmed.\n- Not rendering site header and footer for error pages in some situations.\n- Not providing a copy button for error pages in some situations.\n- Improved errors for invalid URLs.\n- Limit length of search queries within tables in the Console to 50 to comply with API validation.\n- External Join Server address handling in end device creation form in the Console.\n- Updating `supports_class_b` field in the end device general settings page in the Console.\n\n## [3.14.2] - 2021-08-27\n\n### Added\n\n- CLI warnings about insecure connections.\n- CLI warnings about using the `--all` flag.\n- Packet Broker network listed switch in the Console.\n- Improved errors for invalid command-line flags.\n- Validation of entity attributes in the Console, with regards to maximum length for keys and values.\n- CLI command to decode raw LoRaWAN frames (`ttn-lw-cli lorawan decode`), useful for debugging purposes.\n- Options to restore or purge deleted applications, gateways and organizations in the Console.\n- Handling of default mac settings values when manually registering end devices in the Console.\n- Add a new `class_b_c_downlink_interval` field that can be configured to set the minimum interval between a network initiated downlink (Class B & Class C) and an arbitrary downlink per device.\n- Retrieve count of upstream messages from the Storage Integration by end device.\n  - See the new `GetStoredApplicationUpCount` RPC.\n  - See the new `ttn-lw-cli applications storage count` and `ttn-lw-cli end-devices storage count` CLI commands.\n\n### Changed\n\n- The Identity Server now returns a validation error when trying to update the EUIs of an end device.\n- Network Server no longer accepts RX metadata from Packet Broker if the originating forwarder network equals the current Network Server (by NetID and cluster ID, based on`ns.net-id` and `ns.cluster-id` configuration). This avoids duplicate RX metadata as well as redundant downlink scheduling attempts through Packet Broker after the cluster's Gateway Server already failed to schedule.\n- Usability of the end device import function in the Console.\n  - Show a per-device report when errors occur.\n  - More structural changes to the process to improve UX.\n\n### Removed\n\n- Packet Broker mutual TLS authentication; only OAuth 2.0 is supported now.\n- `request_details` from errors in the Console.\n\n### Fixed\n\n- Generated CLI configuration for The Things Stack Community Edition.\n- End device access with limited rights in the Console.\n- Parsing of ID6 encoded EUIs from Basic Station gateways.\n- Warnings about unknown fields when getting or searching for gateways.\n- Internal Server Errors from `pkg/identityserver/store`.\n- Console rendering blank pages in outdated browsers due to missing or incomplete internationalization API.\n- Error in edit user form (Console) when submitting without making any changes.\n- `description` field not being fetched in edit user form (admin only) in the Console.\n- Ignore invalid configuration when printing configuration with `ttn-lw-cli config` or `ttn-lw-stack config`.\n- Emails about API key changes.\n- Avoid rendering blank pages in the Console for certain errors.\n- Blank page crashes in the Console for certain browsers that do not fully support `Intl` API.\n- End device session keys handling in the Console.\n- Byte input width in Safari in the Console.\n\n## [3.14.1] - 2021-08-06\n\n### Added\n\n- New config option `--as.packages.timeout` to control the message processing timeout of application packages.\n- Option to view and copy error details in full view errors in the Console.\n- Metrics for CUPS requests.\n- Language chooser in the footer in the Console.\n- Japanese language support in the Console.\n\n### Changed\n\n- Cache Root CA for client TLS configuration.\n- Identity Server no longer allows removing the `_ALL` right from entity collaborators if that leaves the entity without any collaborator that has the `_ALL` right.\n- The Network Server application uplink queue may now be skipped if the Application Server peer is available at enqueue time.\n- The interval for updating gateways in Packet Broker is now 10 minutes (was 5 minutes) and the timeout is 5 seconds (was 2 seconds).\n\n### Fixed\n\n- Improved errors when ordering search requests by non-existent fields.\n- LNS authentication key handling for gateways in the Console.\n\n## [3.14.0] - 2021-07-23\n\n### Added\n\n- Gateway antenna placement; unknown, indoor or outdoor. This can now be specified with CLI, e.g. for the first antenna: `ttn-lw-cli gateways set <gateway-id> --antenna.index 0 --antenna.placement OUTDOOR`. The antenna placement will be reported to Packet Broker Mapper.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Payload formatter length validation in the Console.\n- User session management (listing and deleting) in the Identity Server and the CLI.\n- Improved logging for the OAuth server.\n- LR-FHSS modulation\n  - Additional fields for the Gateway and Rx Metadata API. This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n  - Support for LR-FHSS fields when translating uplink messages with the UDP protocol.\n- Network Server now appends network identifiers in forwarded uplink messages. These are populated from the `ns.net-id` and the new `ns.cluster-id` configuration option.\n  - See the new `uplink_message.network_identifiers.net_id`, `uplink_message.network_identifiers.cluster_id` and `uplink_message.network_identifiers.tenant_id` fields.\n  - This can be useful for HTTP webhooks to determine the Network Server that received and forwarded an uplink message.\n- `GetDefaultMACSettings` RPC for requesting the default and desired MAC settings for a Band (Frequency Plan) and LoRaWAN regional parameters version.\n- Error handling for missing templates in device repository form in the Console.\n- Opt out of Packet Broker for individual gateways, see the new `disable_packet_broker_forwarding` gateway option.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n  - This is only relevant when Packet Broker is enabled and configured by the network operator.\n- Gateways are now disconnected when settings affecting the connection with Gateway Server change. Use the `gs.fetch-gateway-interval` and `gs.fetch-interval-jitter` to configure how often the gateway is fetched from the entity registry.\n- Small UX improvements to the LoRaCloud DAS forms in the Console.\n- End device first activation timestamp in the Identity Server end device store.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- `AppJs` interface for applications to get the LoRaWAN AppSKey directly from the Join Server.\n- Console support for DevEUI generation from the configured DevEUI address block.\n  - This requires `console.ui.dev-eui-issuing-enabled` and `console.ui.dev-eui-app-limit` to be set with the same values as in the Identity Server configuration.\n- Gateway antenna placement selection in the Console.\n\n### Changed\n\n- When a gateway uplink message contains duplicate data uplinks, only the one with the highest RSSI are forwarded.\n- The HTTP port now allows HTTP/2 connections over cleartext (h2c).\n- `ttn-lw-stack ns-db migrate` command records the schema version and only performs migrations if on a newer version.\n  - Use the `--force` flag to force perform migrations.\n- Any authenticated user in the network can now list the collaborators of entities in the network.\n- The search RPCs no longer require fields to be specified in the field mask when those fields are already specified as filters.\n- When generating client configuration with the CLI `use` command, automatically set the correct Identity Server and OAuth Server addresses for The Things Stack Cloud and The Things Stack Community Edition.\n\n### Removed\n\n- The `old` log format.\n\n### Fixed\n\n- Network Server ADR algorithm data rate adjustment behavior on negative margin.\n- CLI `gateway set --antenna.remove` command failing to remove gateway antennas in some cases.\n- CLI `gateway set --antenna.gain <gain>` command crashing when no gateway antennas are present.\n- Webhook template path variable expansion of query parameters.\n- LBS LNS Auth Secret displays garbage value when updated.\n- Transmit confirmation messages for LoRa Basics Station gateways.\n- Instability and frequent crashes when internet connection is lost in the Console.\n- Panic in GCS when CUPS rotation is set without a key.\n- Rate limiting for `GatewayRegistry.GetGatewayIdentifiersForEUI` is now applied per gateway EUI.\n- Network Server ensures that the Band ID in the end device version identifiers match the configured Frequency Plan of the device.\n\n## [3.13.3] - 2021-07-02\n\n### Added\n\n- Email sent to admins when an OAuth client is requested by a non-admin user.\n- Packet Broker UI in the Console (admin only).\n- New config option `--console.oauth.cross-site-cookie` to control access to OAuth state cookie between origins.\n  - This option needs to be set to `true` (default is `false`) in multi-cluster deployments in order to support OAuth clients that use POST callbacks.\n- Application Server forwards upstream messages of type `ApplicationDownlinkSent` for application downlink messages that were acknowledged with a TxAck message from the gateway.\n  - MQTT clients can subscribe to the topic `v3/{application-id}/devices/{device-id}/down/sent`.\n  - For HTTP webhooks, make sure that the **Downlink Sent** messages are enabled.\n- Query for the most recent application messages from the Storage Integration API with the new `last` parameter (for example, `?last=10m` or `?last=2h`). See also `--last` argument for the `ttn-lw-cli applications storage get` and `ttn-lw-cli end-devices storage get` commands.\n- A location solved message is published automatically by Application Server when the decoded payload contains coordinates (e.g. `latitude` and `longitude`, among other combinations, as well as support for accuracy and altitude).\n- Configuration option to include Packet Broker metadata in uplink messages: `pba.home-network.include-hops`. By default, this is now disabled.\n- Update gateway identity, status, antennas, frequency plan, location and receive and transmit rates to Packet Broker Mapper. Mapping is enabled when the Forwarder role is enabled. The following new configuration options are introduced to change the default behavior:\n  - `gs.packetbroker.update-gateway-interval`: Update gateway interval\n  - `gs.packetbroker.update-gateway-jitter`: Jitter (fraction) to apply to the update interval to randomize intervals\n  - `gs.packetbroker.online-ttl-margin`: Time to extend the online status before it expires\n  - `pba.mapper-address`: Address of Packet Broker Mapper\n  - `pba.forwarder.gateway-online-ttl`: Time-to-live of online status reported to Packet Broker\n\n### Changed\n\n- Low-level log messages from the `go-redis` library are printed only when the log level is set to `DEBUG`.\n- GS will discard repeated gateway uplink messages (often received due to buggy gateway forwarder implementations). A gateway uplink is considered to be repeated when it has the same payload, frequency and antenna index as the last one.\n  - The new `gs_uplink_repeated_total` metric counts how many repeated uplinks have been discarded.\n  - A `gs.up.repeat` event is emitted (once per minute maximum) for gateways that are stuck in a loop and forward the same uplink message.\n- For ABP sessions, the CLI now requests a DevAddr from the Network Server instead of generating one from the testing NetID.\n- Descriptions, tooltips and defaults for checkboxes for public gateway status and location in the Console.\n- All HTTP requests made by The Things Stack now contain a `User-Agent` header in the form of `TheThingsStack/{version}`.\n- No connection to Packet Broker is being made when neither the Forwarder nor the Home Network role is enabled.\n- Increase the default size limit for payload formatter scripts to 40KB (up from 4KB). The maximum size enforced at API level is 40KB (up from 16KB).\n  - For more context see [issue #4053](https://github.com/TheThingsNetwork/lorawan-stack/issues/4053) and [issue #4278](https://github.com/TheThingsNetwork/lorawan-stack/issues/4278).\n\n### Fixed\n\n- Parse error in Webhook Templates.\n- Application deletion handling in the Console.\n- Error when logging into the Console when using connections without TLS.\n- Account for antenna gain when the gateway is not authenticated (i.e. UDP gateway).\n- Preserve antenna gain when the gateway status message contains GPS coordinates.\n- Location map coordinate selection in the Console.\n- Rights required for reading scheduled downlinks.\n\n## [3.13.2] - 2021-06-17\n\n### Added\n\n- Configurable log formats with the `log.format` configuration option.\n  - The `console` format that prints logs as more human-friendly text. This is the new default.\n  - The `json` format that prints logs as JSON. This is the recommended format for production deployments.\n  - The `old` format (deprecated). This can be used if you need to adapt your log analysis tooling before v3.14.\n- `ttn_lw_gs_ns_uplink_latency_seconds`, `ttn_lw_ns_as_uplink_latency_seconds` and `ttn_lw_gtw_as_uplink_latency_seconds` metrics to track latency of uplink processing.\n- Signing of releases.\n- Hard delete option to delete applications, gateways and organizations in the Console.\n\n### Changed\n\n- Relaxed the cookie policy for cross-origin requests from Strict to Lax.\n- Changed the cookie policy for OAuth state to None.\n\n### Deprecated\n\n- The `old` log format is deprecated and will be removed in v3.14.\n\n### Fixed\n\n- Permissions issue for reading and writing gateway secrets in the Console.\n- Current and future rights selection for organization collaborators in the Console.\n- Current and future rights selection for user api keys in the Console.\n- Low or no throughput of message handling from Packet Broker when the ingress is high when Packet Broker Agent starts.\n- Unset ADR bit in downlink messages to multicast devices.\n\n## [3.13.1] - 2021-06-04\n\n### Added\n\n- More contextual tooltips to end device and gateway form fields in the Console.\n- Warnings in the Console when changing or revoking your own access to an entity.\n\n### Changed\n\n- Do not print error line logs for rate limited gRPC and HTTP API requests.\n- The `ttn_lw_log_log_messages_total` metric was renamed to `ttn_lw_log_messages_total` and has an additional `error_name` label.\n- Authenticated users now have access to gateway status and location when those are set to public.\n- Cookies are no longer allowed in cross-origin requests to the HTTP API. Applications must instead use Bearer tokens in the Authorization header.\n\n### Fixed\n\n- Downlink queue eviction on FCnt mismatch.\n- End device payload formatter view crashing in the Console.\n- End device overview frequently crashing in the Console.\n- Panic on empty downlink in zero indexed downlink token.\n\n## [3.13.0] - 2021-05-20\n\n### Added\n\n- Searching Packet Broker networks with `--tenant-id-contains` and `--name-contains` flags.\n- Listing all listed Packet Broker networks with `ttn-lw-cli packetbroker networks list`.\n- Include end device version identifiers in upstream messages (see `uplink_message.version_ids.brand_id`, `uplink_message.version_ids.model_id`, `uplink_message.version_ids.firmware_version`, `uplink_message.version_ids.hardware_version` and `uplink_message.version_ids.band_id` fields).\n- Reporting uplink and downlink message delivery state changes to Packet Broker. This will be used for statistical purposes (e.g. which message is processed successfully or why it errored) as well as LoRaWAN roaming (the `XmitDataAns` result code).\n- Setting API key expiry via `--api-key-expiry` flag using RFC3339 format.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Events storage in the Redis events backend. This can be enabled with the new `events.redis.store.enable` option. The new options `events.redis.store.ttl`, `events.redis.store.entity-ttl`, `events.redis.store.entity-count` and `events.redis.store.correlation-id-count` can be used to configure retention.\n- RPC to find related events by correlation ID.\n- CLI command `events find-related`.\n- Support for loading Device Repository profiles from different vendors if specified. This allows reusing standard end device profiles from module makers and LoRaWAN end device stack vendors.\n- Filtering out verbose events in the event views in the Console.\n- The `gs.up.forward` event now includes the host an uplink was forwarded to.\n- Previews for `*.update` events in the Console.\n- The Console can now show recent historical events in networks that have events storage enabled.\n- Add a new `mac_settings.desired_max_eirp` field that can be configured to set the desired MaxEIRP value per device.\n- Support loading rate limiting profile configuration from external sources. When set, they will override embedded configuration. See `rate-limiting.config-source`, `rate-limiting.directory`, `rate-limiting.url` and `rate-limiting.blob.*` configuration options.\n- `IssueDevEUI` RPC for requesting a DevEUI from a configured IEEE MAC block for devices per application.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added `eui_blocks` table and `dev_eui_counter`\n    column in applications table.\n  - This requires a new `dev-eui-block` configuration setting.\n\n### Changed\n\n- User IDs now have a minimum length of 2 instead of 3, so that more users coming from v2 can keep their username.\n- Disabled device uplink simulation and downlink message sending when skipping payload crypto.\n- The UpdateAPIKey RPCs now take a fieldmask.\n- The Gateway Server no longer sends `gs.up.drop` event if the Network Server does not handle an uplink message, or if the uplink does not match the DevAddr prefix of an upstream.\n- Maximum size for user-defined payload formatter scripts.\n  - The default cap is at 4KB, see the new `as.formatters.max-parameter-length` config option.\n  - A maximum cap of 16KB per script is set at the API level.\n  - This only prevents setting large payload formatter scripts for new devices and applications; it does not remove payload formatters from existing applications and devices. Scripts sourced from the Device Repository are not affected. See [issue #4053](https://github.com/TheThingsNetwork/lorawan-stack/issues/4053) for more context on this change.\n- LoRa Basics Station `router_config` message omits hardware specific fields.\n- Showing \"Last seen\" information in end device tables (replacing \"Created\").\n\n### Removed\n\n- The `gs.status.forward` event.\n\n### Fixed\n\n- OAuth token exchange for OAuth clients that use Basic auth.\n- The CLI now properly returns a non-zero exit status code on invalid commands.\n- Gateway connection requests with zero EUI are rejected.\n- End device payload formatter reset to `FORMATTER_NONE` in the Console.\n- Memory issues when importing end devices in the Console.\n\n## [3.12.3] - 2021-05-06\n\n### Changed\n\n- Optimized storage of recent application uplinks in Application Server.\n\n### Fixed\n\n- Validation of OAuth token exchange requests from the CLI.\n- Validation of join-request types when using the Crypto Server backend.\n- Application Server session recovery functionality for imported devices.\n- Fetching AppSKey when the session is rebuilt but the identifier did not change.\n\n## [3.12.2] - 2021-04-30\n\n### Added\n\n- Contextual tooltips to form fields in the Console.\n- C-Style uint32_t representation for end device address field.\n- Gateway Configuration Server to the cluster package.\n  - This introduces a new config option `cluster.gateway-configuration-server` that needs to be set in multi-instance deployments.\n- Uplink storage for integrations in the Application Server. The number of uplinks stored per end device may be configured via the config option `as.uplink-storage.limit`.\n- LoRaCloud GLS multi frame request support.\n- LoRaCloud GNSS request support.\n- LoRaCloud WiFi request support.\n\n### Changed\n\n- Allow the LinkADRReq commands to lower the data rate used by the end devices.\n\n### Fixed\n\n- Occasional crashes in the ratelimit middleware.\n- Handling of zero EUI CUPS update-info requests.\n- Backend validation messages for some forms.\n- Gateway downlink message previews not displaying correctly in the event view of the Console.\n- Importing end devices from the Console would occasionally ignore some device MAC settings fields.\n\n## [3.12.1] - 2021-04-15\n\n### Added\n\n- Payload formatter testing functionality in the Console.\n- Options in the Identity Server to reject passwords that contain the user ID (`is.user-registration.password-requirements.reject-user-id`) or common passwords (`is.user-registration.password-requirements.reject-common`).\n\n### Changed\n\n- Network Server now takes uplink data rate index for ADR.\n- Event streams are now closed when the callers rights are revoked.\n\n### Fixed\n\n- It is no longer possible to accidentally create API keys without any rights.\n- Application overview page crashing for collaborators without certain rights.\n- `mac_settings.factory_preset_frequencies` handling in US-like bands.\n\n### Security\n\n- This release fixes an issue that prevented some request messages from being validated correctly, allowing invalid values in certain fields.\n\n## [3.12.0] - 2021-04-06\n\n### Added\n\n- API and CLI commands for listing, searching for and restoring recently deleted applications, OAuth clients, gateways, organizations and users.\n- State Description fields for adding context to the (rejected, flagged, suspended) state of Users and OAuth clients.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Searching for gateways by EUI.\n- Searching for users and OAuth clients by state.\n- Gateway Server forwards Tx Acknowlegdment packets to the Network Server for scheduled downlinks. These can be used by the Network Server to forward `downlink_ack` upstream messages to the Application Server.\n- UDP connection error caching. The duration can be configured via the `gs.udp.connection-error-expires` configuration entry.\n- Option to require individual gateways to use authenticated connections.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Login Tokens (magic login links) that can be used for password-less login.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n  - This feature is disabled by default; use the new `is.login-tokens.enabled` option to enable it.\n- Packet Broker registration, configuration of routing policies, listing home networks and viewing routing policies set by forwarding networks. See `ttn-lw-cli packetbroker --help` for more information.\n- Support LoRa 2.4 GHz with Packet Broker.\n- Include gateway identifiers from Packet Broker in metadata.\n- Session and MAC state import functionality. This means that devices can be migrated without rejoin.\n- Rate limiting for HTTP endpoints, gRPC endpoints, MQTT, UDP and WebSockets connections.\n  - Rate limiting is disabled by default. Refer to the `rate-limiting` configuration entry to enable.\n- Profile settings link to header dropdown menu.\n\n### Changed\n\n- Changed the pub/sub channels that the Redis backend of the Events system uses.\n- Changed the encoding of events transported by the Redis backend of the Events system.\n- All external HTTP calls are now using TLS client configuration. This fixes issues where HTTP calls would fail if custom (e.g. self-signed) CAs were used.\n- All external HTTP calls are now using a default timeout. This fixes issues where HTTP calls would stall for a long time.\n- All value wrappers now are encoded and decoded as the value being wrapped in JSON. That means, that, e.g. format of `mac_settings.rx1_delay` is changed from `{\"value\": 2}` to just `2`.\n- Changed the error that is returned when attempting to validate already validated contact info.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added column.\n- Update Go to 1.16\n- Network Server now performs more strict validation and will disallow creation and updates of invalid devices.\n- DevEUI is not required for multicast devices anymore, regarding of LoRaWAN version.\n\n### Fixed\n\n- Incorrect documentation url for event details data formats.\n- Search functionality for applications, gateways and organizations in the Console.\n- Error handling of end device template formats for the application overview page in the Console.\n- Payload size limits for AU915 data rates 8 and 9, which are now consistent with Regional Parameters RP002-1.0.2.\n- Payload size limit calculation in Network Server.\n- Occasional panic in Network Server on downlink with corrupted device states.\n- Occasional panic in Identity Server on extracting log fields from invalid requests.\n- Print an error message stating that the Storage Integration is not available in the open source edition of The Things Stack when trying to execute `ttn-lw-stack storage-db` commands.\n\n## [3.11.3] - 2021-03-19\n\n### Added\n\n- `sentry.environment` configuration option to set the `environment` tag on Sentry reports.\n- TR005 QR code format, with ID `tr005`.\n- LoRa Cloud Geolocation Services support for TOA/RSSI end device geolocation.\n\n### Changed\n\n- Default value of `gs.udp.addr-change-block` is now 0, which disables the IP firewall for UDP traffic. Deployments that need to enforce the IP check should set a value greater than 0. Note that the new default value makes UDP connections less secure.\n- Prevent flooding logs with \"Packet Filtered\" messages when UDP gateways exceed the maximum rate limit. Only one message per minute will be printed for each gateway.\n\n### Deprecated\n\n- TR005 Draft 2 and 3 QR code formats. Use the final version of the technical recommendation, with ID `tr005`.\n\n### Fixed\n\n- Downlink queue operations on ABP devices not working under specific circumstances.\n- NwkKey handling for end devices in the Console.\n\n## [3.11.2] - 2021-03-05\n\n### Added\n\n- Pagination flags for the `users oauth authorizations list` and `users oauth access-tokens list` CLI commands.\n- End device ID generation based on DevEUI in The LoRaWAN Device Repository creation form in the Console.\n- `remote_ip` and `user_agent` metadata on OAuth events.\n- `created_at` and `updated_at` fields to API Keys.\n- Telemetry for Packet Broker Agent.\n- User rights check for managing API keys in the Console.\n\n### Changed\n\n- `temp` field of the UDP stats message is now type `float32` (pointer).\n\n### Fixed\n\n- Ocassional race condition in uplink matching with replicated Network Server instances.\n- Ocassional race condition when matching pending sessions.\n- Conflict error when registering an end device via the wizard in the Console.\n- Pagination in the `List` and `ListTokens` RPCs of the `OAuthAuthorizationRegistry`.\n- Event name on user login.\n- Application uplink queue handling in Network Server.\n- Application Server session desynchronization with the Network Server. The Application Server will now attempt to synchronize the end device session view on downlink queue operational errors. This fixes the `f_cnt_too_low` and `unknown_session` errors reported on downlink queue push and replace.\n- Panic while generating SX1301 config for frequency plans without radio configuration.\n\n## [3.11.1] - 2021-02-18\n\n### Added\n\n- Profile settings view to the Account App.\n  - Functionality to change basic profile information, such as name, email address and profile picture.\n  - Functionality to update the account password.\n  - Functionality to delete the account.\n\n### Changed\n\n- Improved logging.\n\n### Fixed\n\n- Synchronization in Gateway Server scheduler that caused race conditions in scheduling downlink traffic.\n\n## [3.11.0] - 2021-02-10\n\n### Added\n\n- Reset functionality in Network Server, which resets session context and MAC state (see `ttn-lw-cli end-devices reset` command). For OTAA all data is wiped and device must rejoin, for ABP session keys, device address and downlink queue are preserved, while MAC state is reset.\n- Store and retrieve Gateway Claim Authentication Code from database.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added column.\n  - This uses the same encryption key set using the `is.gateways.encryption-key-id` configuration option.\n- Improved handling of connection issues in the Console, as well as automatic reconnects.\n- Helpful details for synthetic meta events in the data view of the Console.\n- Support field mask paths in Storage Integration API requests.\n- CUPS redirection.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Configuration option (`is.user-registration.enabled`) to enable or disable user registrations.\n- Missing CLI commands for getting single API keys or collaborators for entities.\n- New Account App for authentication, authorization and account related functionality.\n  - This introduces various UX improvements and new designs around e.g. user login, registration and the \"forgot password\" flow.\n- Integrate Device Repository.\n- Device Repository component to integrate [Device Repository](https://github.com/TheThingsNetwork/lorawan-devices) with The Things Stack. See the `dr` configuration section.\n  - The Device Repository database is bundled automatically into Docker release images. See the `ttn-lw-stack dr-db init` command to manually fetch the latest changes.\n- Device repository service to the JavaScript SDK.\n- Choosing array representation for end device session keys as well as gateway EUI.\n\n### Changed\n\n- Network Server does not store `recent_uplinks`, `recent_adr_uplinks` and `recent_downlinks` anymore.\n- Improved Network Server downlink task performance.\n- Improved Network Server matching performance.\n- Network Server matching mapping in the database.\n  - This requires a database migration (`ttn-lw-stack ns-db migrate`).\n- Sending a non-empty implicitly specified field disallowed field will now cause RPCs to fail. E.g. if RPC supports paths `A` and `A.B`, sending value with `A.C` non-empty and field mask `A` would result in an error.\n- Improved content of emails sent by the Identity Server.\n- Stricter validation of the maximum length of string fields, binary fields, lists and maps.\n- Frequency plans and webhook templates are now included in Docker images, and used by default, instead of fetching directly from GitHub.\n- JavaScript entrypoints changed from `oauth.css` and `oauth.js` to `account.css` and `account.css`. Note: For deployments using custom frontend bundles (e.g. via `--is.oauth.ui.js-file`), the filenames have to be updated accordingly as well.\n\n### Removed\n\n- Application Server linking. The Network Server now pushes data to the cluster Application Server instead.\n  - Applications which desire to handle payload decryption within their own domains should disable payload decryption at application or device level and decrypt the payload on their own end.\n  - While not backwards compatible, the decision to remove linking was heavily motivated by scalability concerns - the previous linking model scales poorly when taking high availability and load balancing concerns into account.\n- The option to disable CUPS per gateway `gcs.basic-station.require-explicit-enable`.\n\n### Fixed\n\n- Network Server DevStatusReq scheduling conditions in relation to frame counter value.\n- Missing `authentication`, `remote_ip` and `user_agent` fields in events when using event backends other than `internal`.\n- Handling of `DLChannelReq` if dependent `NewChannelReq` was previously rejected.\n- Login after user registration leading to dead-end when originally coming from the Console.\n- Frame counter display of end devices on initial page load in the Console.\n- AU915-928 data rate indexes in Regional Parameter specification versions below 1.0.2b.\n\n## [3.10.6] - 2021-01-12\n\n### Added\n\n- Configuration option `is.admin-rights.all` to grant admins all rights, including `_KEYS` and `_ALL`.\n- Configuration option `is.user-registration.contact-info-validation.token-ttl` to customize the validity of contact information validation tokens.\n- `ttn-lw-stack` CLI command for creating an API Key with full rights on a user.\n\n### Changed\n\n- Packet Broker API version to `v3.2.0-tts` and routing API to `v1.0.2-tts`.\n- Emails with temporary tokens now also show when these tokens expire. Custom email templates can use `{{ .TTL }}` and `{{ .FormatTTL }}` to render the expiry durations.\n\n### Deprecated\n\n- Packet Broker mutual TLS authentication: use OAuth 2.0 client credentials instead; set `pba.authentication-mode` to `oauth2` and configure `pba.oauth2`.\n- Packet Broker forwarder blacklist setting `pba.home-network.blacklist-forwarder` has become ineffective.\n\n### Fixed\n\n- Do not initiate new contact info validations when old validations are still pending.\n\n## [3.10.5] - 2020-12-23\n\n### Added\n\n- Support for sending end device uplinks using the CLI (see `ttn-lw-cli simulate application-uplink` command).\n- Clients can now perform custom ADR by modifying ADR parameters in `mac-state.desired-parameters` of the device.\n\n### Changed\n\n- Form field layouts in the Console (field labels are now dispayed above the field).\n- Small structural changes to the custom webhook form in the Console.\n- Renamed experimental command `ttn-lw-cli simulate uplink` to `ttn-lw-cli simulate gateway-uplink`.\n- Renamed experimental command `ttn-lw-cli simulate join-request` to `ttn-lw-cli simulate gateway-join-request`.\n\n### Fixed\n\n- Removed misleading warning message for missing package data when setting up the storage integration package association.\n\n## [3.10.4] - 2020-12-08\n\n### Added\n\n- Configure application activation settings from the CLI (see `ttn-lw-cli application activation-settings` commands).\n- User API keys management to the Console.\n- `Purge` RPC and cli command for entity purge (hard-delete) from the database.\n- More password validation rules in the user management form in the Console.\n- Support for class B end devices in the Console.\n- MAC settings configuration when creating and editing end devices in the Console.\n- Support for the LR1110 LTV stream protocol.\n\n### Changed\n\n- Branding (updated TTS Open Source logo, colors, etc).\n\n### Fixed\n\n- Simulated uplinks visibility in webhook messages.\n- Retransmission handling.\n- RTT recording for LBS gateways. The maximum round trip delay for RTT calculation is configurable via `--gs.basic-station.max-valid-round-trip-delay`.\n- Memory leak in GS scheduler.\n\n## [3.10.3] - 2020-12-02\n\n### Added\n\n- Configure application activation settings from the CLI (see `ttn-lw-cli application activation-settings` commands).\n\n### Security\n\n- Fixed an issue with authentication on the `/debug/pprof`, `/healthz` and `/metrics` endpoints.\n\n## [3.10.2] - 2020-11-27\n\n### Added\n\n- gRPC middleware to extract proxy headers from trusted proxies. This adds a configuration `grpc.trusted-proxies` that is similar to the existing `http.trusted-proxies` option.\n\n### Changed\n\n- Log field consistency for HTTP and gRPC request logs.\n\n### Fixed\n\n- Uplink frame counter reset handling.\n- Uplink retransmission handling in Network Server.\n- DevAddr generation for NetID Type 3 and 4, according to errata.\n- HTTP header propagation (such as Request ID) to gRPC services.\n\n## [3.10.1] - 2020-11-19\n\n### Added\n\n- More password validation rules in the user management form in the Console.\n\n### Changed\n\n- Limitation of displayed and stored events in the Console to 2000.\n- Application Server will unwrap the AppSKey if it can, even if skipping payload crypto is enabled. This is to avoid upstream applications to receive wrapped keys they cannot unwrap. For end-to-end encryption, configure Join Servers with wrap keys unknown to the Application Server.\n- More precise payload labels for event previews in the Console.\n\n### Fixed\n\n- Next button title in the end device wizard in the Console.\n- Navigation to the user edit page after creation in the Console.\n- The port number of the `http.redirect-to-host` option was ignored when `http.redirect-to-tls` was used. This could lead to situations where the HTTPS server would always redirect to port 443, even if a different one was specified.\n  - If the HTTPS server is available on `https://thethings.example.com:8443`, the following flags (or equivalent environment variables or configuration options) are required: `--http.redirect-to-tls --http.redirect-to-host=thethings.example.com:8443`.\n- Status display on the error view in the Console.\n- Event views in the Console freezing after receiving thousands of events.\n- Wrong FPort value displayed for downlink attempt events in the Console.\n- Network Server sending duplicate application downlink NACKs.\n- Network Server now sends downlink NACK when it assumes confirmed downlink is lost.\n- Network Server application uplink drainage.\n\n## [3.10.0] - 2020-11-02\n\n### Added\n\n- Gateway Configuration Server endpoint to download UDP gateway configuration file.\n  - In the Console this requires a new `console.ui.gcs.base-url` configuration option to be set.\n- Support for sending end device uplinks in the Console.\n- PHY version filtering based on LoRaWAN MAC in the Console.\n- Meta information and status events in the event views in the Console.\n- Support for setting the frame counter width of an end device in the Console.\n- Include consumed airtime metadata in uplink messages and join requests (see `uplink_message.consumed_airtime` field).\n- Add end device location metadata on forwarded uplink messages (see `uplink_message.locations` field).\n- Store and retrieve LBS LNS Secrets from database.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added column.\n  - To encrypt the secrets, set the new `is.gateways.encryption-key-id` configuration option.\n- Storage Integration API.\n- CLI support for Storage Integration (see `ttn-lw-cli end-devices storage` and `ttn-lw-cli applications storage` commands).\n- Network Server does not retry rejected `NewChannelReq` data rate ranges or rejected `DLChannelReq` frequencies anymore.\n- Functionality to allow admin users to list all organizations in the Console.\n- Downlink count for end devices in the Console.\n- Support for Application Activation Settings in the Join Server to configure Application Server KEK, ID and Home NetID.\n- Downlink queue invalidated message sent upstream by Application Server to support applications to re-encrypt the downlink queue when Application Server skips FRMPayload crypto.\n- Navigation to errored step in the end device wizard in the Console.\n- Reference available glossary entries for form fields in the Console.\n\n### Changed\n\n- Decoded downlink payloads are now published as part of downlink attempt events.\n- Decoded downlink payloads are stored now by Network Server.\n- Raw downlink PHY payloads are not stored anymore by Network Server.\n- Move documentation to [lorawan-stack-docs](https://github.com/TheThingsIndustries/lorawan-stack-docs).\n- Improve LinkADRReq scheduling condition computation and, as a consequence, downlink task efficiency.\n- CUPS Server only accepts The Things Stack API Key for token auth.\n- Improve MQTT Pub/Sub task restart conditions and error propagation.\n- Pausing event streams is not saving up arriving events during the pause anymore.\n- Gateway server can now update the gateway location only if the gateway is authenticated.\n- Right to manage links on Application Server is now `RIGHT_APPLICATION_SETTINGS_BASIC`.\n\n### Removed\n\n- Join EUI prefixes select on empty prefixes configuration in Join Server.\n\n### Fixed\n\n- Broken link to setting device location in the device map widget.\n- Error events causing Console becoming unresponsive and crashing.\n- Incorrect entity count in title sections in the Console.\n- Incorrect event detail panel open/close behavior for some events in the Console.\n- Improved error resilience and stability of the event views in the Console.\n- RSSI metadata for MQTT gateways connected with The Things Network Stack V2 protocol.\n- Gateway ID usage in upstream connection.\n- Last seen counter for applications, end devices and gateways in the Console.\n- `Use credentials` option being always checked in Pub/Sub edit form in the Console.\n- FPending being set on downlinks, when LinkADRReq is required, but all available TxPower and data rate index combinations are rejected by the device.\n- Coding rate for LoRa 2.4 GHz: it's now `4/8LI`.\n- End device import in the Console crashing in Firefox.\n- Creation of multicast end devices in the Console.\n- Overwriting values in the end device wizard in the Console.\n- Redirect loops when logging out of the Console if the Console OAuth client had no logout redirect URI(s) set.\n- Event selection not working properly when the event stream is paused in the Console.\n\n## [3.9.4] - 2020-09-23\n\n### Changed\n\n- Detail view of events in the Console moved to the side.\n- Display the full event object when expanded in the Console (used to be `event.data` only).\n\n### Fixed\n\n- Performance issues of event views in the Console (freezing after some time).\n- Gateway Server panic on upstream message handling.\n- Incorrect redirects for restricted routes in the Console.\n- Validation of MAC settings in the Network Server.\n- Network Server panic when RX2 parameters cannot be computed.\n\n## [3.9.3] - 2020-09-15\n\n### Added\n\n- Add `the-things-stack` device template converter, enabled by default. Effectively, this allows importing end devices from the Console.\n- Support for binary decoding downlink messages previously encoded with Javascript or CayenneLPP.\n- Common CA certificates available in documentation.\n- Service data fields to pub/subs and webhooks in the Console.\n\n### Changed\n\n- MAC commands (both requests and responses) are now only scheduled in class A downlink slots in accordance to latest revisions to LoRaWAN specification.\n- Scheduling failure events are now emitted on unsuccessful scheduling attempts.\n- Default Javascript function signatures to `encodeDownlink()`, `decodeUplink()` and `decodeDownlink()`.\n- Default Class B timeout is increased from 1 minute to 10 minutes as was originally intended.\n- Update Go to 1.15\n- Application, gateway, organization and end device title sections in the Console.\n- Network Server downlink queues now have a capacity - by default maximum application downlink queue length is 10000 elements.\n- Improve ADR algorithm loss rate computation.\n\n### Deprecated\n\n- Previous Javascript function signatures `Decoder()` and `Encoder()`, although they remain functional until further notice.\n\n### Fixed\n\n- ISM2400 RX2, beacon and ping slot frequencies are now consistent with latest LoRaWAN specification draft.\n- CLI login issues when OAuth Server Address explicitly includes the `:443` HTTPS port.\n- Documentation link for LoRa Cloud Device & Application Services in the Lora Cloud integration view in the Console.\n- Webhooks and Pub/Subs forms in the Console will now let users choose whether they want to overwrite an existing record when the ID already exists (as opposed to overwriting by default).\n- Pub/Sub integrations not backing off on internal connection failures.\n- Network Server ping slot-related field validation.\n- Memory usage of Network Server application uplink queues.\n- Incorrect uplink FCnt display in end device title section.\n- Service Data messages being routed incorrectly.\n\n## [3.9.1] - 2020-08-19\n\n### Added\n\n- LoRaCloud DAS integration page in the Console.\n- User Agent metadata on published events (when available).\n- Option to override server name used in TLS handshake with cluster peers (`cluster.tls-server-name`).\n\n### Changed\n\n- Network Server now only publishes payload-related downlink events if scheduling succeeds.\n- Moved remote IP event metadata outside authentication.\n- Admins can now set the expiration time of temporary passwords of users.\n- Application Server links are no longer canceled prematurely for special error codes. Longer back off times are used instead.\n\n### Fixed\n\n- Authentication metadata missing from published events.\n- Under some circumstances, CLI would mistakenly import ABP devices as OTAA.\n- Gateway Server could include the gateway antenna location on messages forwarded to the Network Server even if the gateway location was not public.\n\n## [3.9.0] - 2020-08-06\n\n### Added\n\n- API Authentication and authorization via session cookie.\n  - This requires a database schema migration (`ttn-lw-stack is-db migrate`) because of the added and modified columns.\n  - This changes the `AuthInfo` API response.\n- Skipping payload crypto on application-level via application link's `skip_payload_crypto` field.\n- Authentication method, ID and Remote IP in events metadata.\n- Service data messages published by integrations. Can be consumed using the bundled MQTT server, Webhooks or Pub/Sub integrations.\n- Application package application-wide associations support.\n- LoRaCloud DAS application package server URL overrides support.\n- Key vault caching mechanism (see `--key-vault.cache.size` and `--key-vault.cache.ttl` options).\n- Generic encryption/decryption to KeyVault.\n- Option to ignore log messages for selected gRPC method on success (see `grpc.log-ignore-methods` option).\n- CLI auto-completion support (automatically enabled for installable packages, also see `ttn-lw-cli complete` command).\n- Options to disable profile picture and end device picture uploads (`is.profile-picture.disable-upload` and `is.end-device-picture.disable-upload`).\n- Options to allow/deny non-admin users to create applications, gateways, etc. (the the `is.user-rights.*` options).\n- Admins now receive emails about requested user accounts that need approval.\n- Support for synchronizing gateway clocks via uplink tokens. UDP gateways may not connect to the same Gateway Server instance.\n- Consistent command aliases for CLI commands.\n- Laird gateway documentation.\n- Option to allow unauthenticated Basic Station connections. Unset `gs.basic-station.allow-unauthenticated` to enforce auth check for production clusters. Please note that unauthenticated connections in existing connections will not be allowed unless this is set.\n- Option to require TLS on connections to Redis servers (see `redis.tls.require` and related options).\n- Documentation for `cache` options.\n- Documentation for the Gateway Server MQTT protocol.\n- Add user page in console.\n- Troubleshooting guide.\n- API to get configuration from the Identity Server (including user registration options and password requirements).\n- Synchronize gateway time by uplink token on downstream in case the Gateway Server instance is not handling the upstream gateway connection.\n- Work-around for Basic Station gateways sending uplink frames with no `xtime`.\n- Document Network Server API Key requirement for Basic Station.\n\n### Changed\n\n- Remove version from hosted documentation paths.\n- Gateway connection stats are now stored in a single key.\n- The example configuration for deployments with custom certificates now also uses a CA certificate.\n- Increase Network Server application uplink buffer queue size.\n- `ttn-lw-cli use` command no longer adds default HTTP ports (80/443) to the OAuth Server address.\n- Suppress the HTTP server logs from the standard library. This is intended to stop the false positive \"unexpected EOF\" error logs generated by health checks on the HTTPS ports (for API, BasicStation and Interop servers).\n- Automatic collapse and expand of the sidebar navigation in the Console based on screen width.\n- The header of the sidebar is now clickable in the Console.\n- Overall layout and behavior of the sidebar in the Console improved.\n- Improved layout and screen space utilization of event data views in the Console.\n- Allow setting all default MAC settings of the Network Server. Support setting enum values using strings where applicable.\n\n### Deprecated\n\n- End device `skip_payload_crypto` field: it gets replaced by `skip_payload_crypto_override`.\n\n### Fixed\n\n- Inconsistent error message responses when retrieving connection stats from GS if the gateway is not connected.\n- Empty form validation in the Console.\n- CLI crash when listing application package default associations without providing an application ID.\n- Decoding of uplinks with frame counters exceeding 16 bits in Application Server.\n- Validation of keys for gateway metrics and version fields.\n- Read only access for the gateway overview page in the Console.\n- Fix an issue that frequently caused event data views crashing in the Console.\n- Application Server contacting Join Server via interop for fetching the AppSKey.\n- Low color contrast situations in the Console.\n- Application Server pub/sub integrations race condition during shutdown.\n- Console webhook templates empty headers error.\n- Console MQTT URL validation.\n- AFCntDown from the application-layer is respected when skipping application payload crypto.\n- RTT usage for calculating downlink delta.\n- Synchronize concentrator timestamp when uplink messages arrive out-of-order.\n\n## [3.8.6] - 2020-07-10\n\n### Added\n\n- Payload formatter documentation.\n- CLI support for setting message payload formatters from a local file. (see `--formatters.down-formatter-parameter-local-file` and `--formatters.up-formatter-parameter-local-file` options).\n\n### Changed\n\n- Gateway connection stats are now stored in a single key.\n\n### Fixed\n\n- Uplink frame counters being limited to 16 bits in Network Server.\n\n## [3.8.5] - 2020-07-06\n\n### Added\n\n- Option to reset end device payload formatters in the Console.\n- Service discovery using DNS SRV records for external Application Server linking.\n- Functionality to set end device attributes in the Console.\n- Event description tooltip to events in the Console.\n- CLI support for setting and unsetting end device location (see `--location.latitude`, `--location.longitude`, `--location.altitude` and `--location.accuracy` options).\n- Functionality to allow admin users to list all applications and gateways in the Console.\n- Ursalink UG8X gateway documentation.\n- Intercom, Google Analytics, and Emojicom feedback in documentation.\n- LORIX One gateway documentation.\n- Display own user name instead of ID in Console if possible.\n- Option to hide rarely used fields in the Join Settings step (end device wizard) in the Console.\n\n### Changed\n\n- JSON uplink message doc edited for clarity.\n- The CLI snap version uses the `$SNAP_USER_COMMON` directory for config by default, so that it is preserved between revisions.\n- Defer events subscriptions until there is actual interest for events.\n- End device creation form with wizard in the Console.\n\n### Removed\n\n- Requirement to specify `frequency_plan_id` when creating gateways in the Console.\n\n### Fixed\n\n- Endless authentication refresh loop in the Console in some rare situations.\n- Logout operation not working properly in the Console in some rare situations.\n- Handling API key deletion event for applications, gateways, organizations and users.\n- Organization API key deletion in the Console.\n- CLI now only sends relevant end device fields to Identity Server on create.\n- Maximum ADR data rate index used in 1.0.2a and earlier versions of AU915 band.\n- End device events stream restart in the Console.\n- CLI was unable to read input from pipes.\n- Timezones issue in claim authentication code form, causing time to reverse on submission.\n- Errors during submit of the join settings for end devices in the Console.\n\n## [3.8.4] - 2020-06-12\n\n### Added\n\n- Metrics for log messages, counted per level and namespace.\n- Allow suppressing logs on HTTP requests for user-defined paths (see `--http.log-ignore-paths` option).\n- Redux state and actions reporting to Sentry\n- Serving frontend sourcemaps in production\n- Frequency plan documentation.\n- LoRa Basics Station documentation.\n\n### Changed\n\n- Suppress a few unexpected EOF errors, in order to reduce noise in the logs for health checks.\n\n### Fixed\n\n- Packet Broker Agent cluster ID is used as subscription group.\n- LinkADR handling in 72-channel bands.\n- Data uplink metrics reported by Application Server.\n\n## [3.8.3] - 2020-06-05\n\n### Added\n\n- Favicon to documentation pages.\n- Draft template for documentation.\n\n### Changed\n\n- Late scheduling algorithm; Gateway Server now takes the 90th percentile of at least the last 5 round-trip times of the last 30 minutes into account to determine whether there's enough time to send the downlink to the gateway. This was the highest round-trip time received while the gateway was connected.\n\n### Fixed\n\n- Downlink scheduling to gateways which had one observed round-trip time that was higher than the available time to schedule. In some occassions, this broke downlink at some point while the gateway was connected.\n\n## [3.8.2] - 2020-06-03\n\n### Added\n\n- Console logout is now propagated to the OAuth provider.\n  - This requires a database migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n  - To set the `logout-redirect-uris` for existing clients, the CLI client can be used, e.g.: `ttn-lw-cli clients update console --logout-redirect-uris \"https://localhost:8885/console\" --redirect-uris \"http://localhost:1885/console\"`.\n- Packet Broker Agent to act as Forwarder and Home Network. See `pba` configuration section.\n- JavaScript style guide to our `DEVELOPMENT.md` documentation.\n- Schedule end device downlinks in the Console.\n- Support for repeated `RekeyInd`. (happens when e.g. `RekeyConf` is lost)\n- Validate the `DevAddr` when switching session as a result of receiving `RekeyInd`.\n- Error details for failed events in the Console.\n- `Unknown` and `Other cluster` connection statuses to the gateways table in the Console.\n- LoRaWAN 2.4 GHz band `ISM2400`.\n- Unset end device fields using the CLI (see `--unset` option)\n- Join EUI and Dev EUI columns to the end device table in the Console.\n- CLI creates user configuration directory if it does not exist when generating configuration file.\n- Upgrading guide in docs.\n- Glossary.\n- Event details in the Console traffic view.\n- Gateway Server events for uplink messages now contain end device identifiers.\n- Setting custom gateway attributes in the Console.\n- Pub/Sub documentation.\n- Return informative well-known errors for standard network and context errors.\n- Error notification in list views in the Console.\n- Latest \"last seen\" info and uplink frame counts for end devices in the Console.\n- Latest \"last seen\" info for applications in the Console.\n\n### Changed\n\n- Conformed JavaScript to new code style guide.\n- Removed login page of the Console (now redirects straight to the OAuth login).\n- Network Server now records `LinkADRReq` rejections and will not retry rejected values.\n- Improved `NewChannelReq`, `DLChannelReq` and `LinkADRReq` efficiency.\n- For frames carrying only MAC commands, Network Server now attempts to fit them in FOpts omitting FPort, if possible, and sends them in FRMPayload with FPort 0 as usual otherwise.\n- Submit buttons are now always enabled in the Console, regardless of the form's validation state.\n- Disabled ADR for `ISM2400` band.\n- Network Server will attempt RX1 for devices with `Rx1Delay` of 1 second, if possible.\n- Network Server will not attempt to schedule MAC-only frames in ping slots or RXC windows.\n- Network Server will only attempt to schedule in a ping slot or RXC window after RX2 has passed.\n- Network Server will schedule all time-bound network-initiated downlinks at most RX1 delay ahead of time.\n- Network Server now uses its own internal clock in `DeviceTimeAns`.\n- Troubleshooting section of `DEVELOPMENT.md`\n- Change console field labels from `MAC version` and `PHY version` to `LoRaWAN version` and `Regional Parameters version` and add descriptions\n\n### Fixed\n\n- Handling of device unsetting the ADR bit in uplink, after ADR has been started.\n- Invalid `oauth-server-address` in CLI config generated by `use` command when config file is already present.\n- Network Server now properly handles FPort 0 data uplinks carrying FOpts.\n- Data rate 4 in version `1.0.2-a` of AU915.\n- Incorrect `TxOffset` values used by Network Server in some bands.\n- OAuth authorization page crashing.\n- Byte input in scheduling downlink view.\n- OAuth client token exchange and refresh issues when using TLS with a RootCA.\n- Join Server and Application Server device registries now return an error when deleting keys on `SET` operations. The operation was never supported and caused an error on `GET` instead.\n- Clearing end device events list in the Console.\n- Some views not being accessible in the OAuth app (e.g. update password).\n- `LinkADRReq` scheduling.\n- Unsetting NwkKey in Join Server.\n- CSRF token validation issues preventing login and logout in some circumstances.\n- Typo in Application Server configuration documentation (webhook downlink).\n- Unset fields via CLI on Join Server, i.e. `--unset root-keys.nwk-key`.\n- Reconnecting UDP gateways that were disconnected by a new gateway connection.\n- ADR in US915-like bands.\n\n## [3.7.2] - 2020-04-22\n\n### Added\n\n- CLI can now dump JSON encoded `grpc_payload` field for unary requests (see `--dump-requests` flag).\n- Template ID column in the webhook table in the Console.\n- Select all field mask paths in CLI get, list and search commands (see `--all` option).\n- Create webhooks via webhook templates in the Console.\n- `ns.up.data.receive` and `ns.up.join.receive` events, which are triggered when respective uplink is received and matched to a device by Network Server.\n- `ns.up.data.forward` and `ns.up.join.accept.forward` events, which are triggered when respective message is forwarded from Network Server to Application Server.\n- `ns.up.join.cluster.attempt` and `ns.up.join.interop.attempt` events, which are triggered when the join-request is sent to respective Join Server by the Network Server.\n- `ns.up.join.cluster.success` and `ns.up.join.interop.success` events, which are triggered when Network Server's join-request is accepted by respective Join Server.\n- `ns.up.join.cluster.fail` and `ns.up.join.interop.fail` events, which are triggered when Network Server's join-request to respective Join Server fails.\n- `ns.up.data.process` and `ns.up.join.accept.process` events, which are triggered when respective message is successfully processed by Network Server.\n- `ns.down.data.schedule.attempt` and `ns.down.join.schedule.attempt` events, which are triggered when Network Server attempts to schedule a respective downlink on Gateway Server.\n- `ns.down.data.schedule.success` and `ns.down.join.schedule.success` events, which are triggered when Network Server successfully schedules a respective downlink on Gateway Server.\n- `ns.down.data.schedule.fail` and `ns.down.join.schedule.fail` events, which are triggered when Network Server fails to schedule a respective downlink on Gateway Server.\n- Specify gRPC port and OAuth server address when generating a CLI config file with `ttn-lw-cli use` (see `--grpc-port` and `--oauth-server-address` options).\n- Guide to connect MikroTik Routerboard\n\n### Changed\n\n- Styling improvements to webhook and pubsub table in Console.\n- Gateway location is updated even if no antenna locations had been previously set.\n- Renamed `ns.application.begin_link` event to `ns.application.link.begin`.\n- Renamed `ns.application.end_link` event to `ns.application.link.end`.\n- `ns.up.data.drop` and `ns.up.join.drop` events are now triggered when respective uplink duplicate is dropped by Network Server.\n- Network Server now drops FPort 0 data uplinks with non-empty FOpts.\n- Frontend asset hashes are loaded dynamically from a manifest file instead of being built into the stack binary.\n- Removed `Cache-Control` header for static files.\n- Sort events by `time` in the Console.\n- Restructure doc folder\n\n### Removed\n\n- `ns.up.merge_metadata` event.\n- `ns.up.receive_duplicate` event.\n- `ns.up.receive` event.\n\n### Fixed\n\n- End device claim display bug when claim dates not set.\n- DeviceModeInd handling for LoRaWAN 1.1 devices.\n- Do not perform unnecessary gateway location updates.\n- Error display on failed end device import in the Console.\n- Update password view not being accessible\n- FOpts encryption and decryption for LoRaWAN 1.1 devices.\n- Application Server returns an error when trying to delete a device that does not exist.\n- Network Server returns an error when trying to delete a device that does not exist.\n- Retrieve LNS Trust without LNS Credentials attribute.\n- Too strict webhook base URL validation in the Console.\n- Webhook and PubSub total count in the Console.\n- DevEUI is set when creating ABP devices via CLI.\n- CLI now shows all supported enum values for LoraWAN fields.\n- Application Server does not crash when retrieving a webhook template that does not exist if no template repository has been configured.\n- Application Server does not crash when listing webhook templates if no template repository has been configured.\n- Error display on failed end device fetching in the Console.\n- Various inconsistencies with Regional Parameters specifications.\n\n## [3.7.0] - 2020-04-02\n\n### Added\n\n- Update gateway antenna location from incoming status message (see `update_location_from_status` gateway field and `--gs.update-gateway-location-debounce-time` option).\n  - This requires a database migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Access Tokens are now linked to User Sessions.\n  - This requires a database migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Edit application attributes in Application General Settings in the Console\n- New `use` CLI command to automatically generate CLI configuration files.\n- View/edit `update_location_from_status` gateway property using the Console.\n\n### Changed\n\n- Default DevStatus periodicity is increased, which means that, by default, DevStatusReq will be scheduled less often.\n- Default class B and C timeouts are increased, which means that, by default, if the Network Server expects an uplink from the device after a downlink, it will wait longer before rescheduling the downlink.\n- In case downlink frame carries MAC requests, Network Server will not force the downlink to be sent confirmed in class B and C.\n\n### Fixed\n\n- Fix organization collaborator view not being accessible in the Console.\n- Error display on Data pages in the Console.\n- Fix too restrictive MQTT client validation in PubSub form in the Console.\n- Fix faulty display of device event stream data for end devices with the same ID in different applications.\n- Trailing slashes handling in webhook paths.\n- End device location display bug when deleting the location entry in the Console.\n- GS could panic when gateway connection stats were updated while updating the registry.\n- Local CLI and stack config files now properly override global config.\n- Error display on failed end device deletion in the Console.\n\n## [3.6.3] - 2020-03-30\n\n### Fixed\n\n- Limited throughput in upstream handlers in Gateway Server when one gateway's upstream handler is busy.\n\n## [3.6.2] - 2020-03-19\n\n### Fixed\n\n- Entity events subscription release in the Console (Firefox).\n- RekeyInd handling for LoRaWAN 1.1 devices.\n- Network server deduplication Redis configuration.\n- Change the date format in the Console to be unambiguous (`17 Mar, 2020`).\n- Handling of uplink frame counters exceeding 65535.\n- Gateway events subscription release in the Console.\n- Panic when receiving a UDP `PUSH_DATA` frame from a gateway without payload.\n\n### Security\n\n- Admin users that are suspended can no longer create, view or delete other users.\n\n## [3.6.1] - 2020-03-13\n\n### Added\n\n- New `list` and `request-validation` subcommands for the CLI's `contact-info` commands.\n- Device Claim Authentication Code page in the Console.\n- Gateway Server rate limiting support for the UDP frontend, see (`--gs.udp.rate-limiting` options).\n- Uplink deduplication via Redis in Network Server.\n\n### Changed\n\n- Network and Application Servers now maintain application downlink queue per-session.\n- Gateway Server skips setting up an upstream if the DevAddr prefixes to forward are empty.\n- Gateway connection stats are now cached in Redis (see `--cache.service` and `--gs.update-connections-stats-debounce-time` options).\n\n### Fixed\n\n- Telemetry and events for gateway statuses.\n- Handling of downlink frame counters exceeding 65535.\n- Creating 1.0.4 ABP end devices via the Console.\n- ADR uplink handling.\n- Uplink retransmission handling.\n- Synchronizing Basic Station concentrator time after reconnect or initial connect after long inactivity.\n\n### Security\n\n- Changing username and password to be not required in pubsub integration.\n\n## [3.6.0] - 2020-02-27\n\n### Added\n\n- Class B support.\n- WebSocket Ping-Pong support for Basic Station frontend in the Gateway Server.\n- LoRaWAN 1.0.4 support.\n\n### Changed\n\n- Do not use `personal-files` plugin for Snap package.\n- Network Server will never attempt RX1 for devices with `Rx1Delay` of 1 second.\n- Improved efficiency of ADR MAC commands.\n- Gateway Configuration Server will use the default WebSocket TLS port if none is set.\n\n### Fixed\n\n- End device events subscription release in the Console.\n- Blocking UDP packet handling while the gateway was still connecting. Traffic is now dropped while the connection is in progress, so that traffic from already connected gateways keep flowing.\n- Join-request transmission parameters.\n- ADR in 72-channel regions.\n- Payload length limits used by Network Server being too low.\n- CLI ignores default config files that cannot be read.\n- Device creation rollback potentially deleting existing device with same ID.\n- Returned values not representing the effective state of the devices in Network Server when deprecated field paths are used.\n- Downlink queue operations in Network Server for LoRaWAN 1.1 devices.\n\n## [3.5.3] - 2020-02-14\n\n### Added\n\n- Display of error payloads in console event log.\n- Zero coordinate handling in location form in the Console.\n\n### Fixed\n\n- Updating `supports_class_c` field in the Device General Settings Page in the Console.\n- Updating MQTT pubsub configuration in the Console\n- Handling multiple consequent updates of MQTT pubsub/webhook integrations in the Console.\n- Displaying total device count in application overview section when using device search in the Console\n- FQDN used for Backend Interfaces interoperability requests.\n- Exposing device sensitive fields to unrelated stack components in the Console.\n- CLI trying to read input while none available.\n- Reconnections of gateways whose previous connection was not cleaned up properly. New connections from the same gateway now actively disconnects existing connections.\n- `ttn-lw-stack` and `ttn-lw-cli` file permission errors when installed using snap.\n  - You may need to run `sudo snap connect ttn-lw-stack:personal-files`\n- Changing username and password to be not required in pubsub integration\n\n## [3.5.2] - 2020-02-06\n\n### Fixed\n\n- Channel mask encoding in LinkADR MAC command.\n- Frequency plan validation in Network Server on device update.\n- Authentication of Basic Station gateways.\n\n## [3.5.1] - 2020-01-29\n\n### Added\n\n- Responsive side navigation (inside entity views) to the Console.\n- Overall responsiveness of the Console.\n- Support for configuring Redis connection pool sizes with `redis.pool-size` options.\n\n### Fixed\n\n- Crashes on Gateway Server start when traffic flow started while The Things Stack was still starting.\n- Not detecting session change in Application Server when interop Join Server did not provide a `SessionKeyID`.\n\n## [3.5.0] - 2020-01-24\n\n### Added\n\n- Support for releasing gateway EUI after deletion.\n- Support in the Application Server for the `X-Downlink-Apikey`, `X-Downlink-Push` and `X-Downlink-Replace` webhook headers. They allow webhook integrations to determine which endpoints to use for downlink queue operations.\n- `as.webhooks.downlinks.public-address` and `as.webhooks.downlinks.public-tls-address` configuration options to the Application Server.\n- Support for adjusting the time that the Gateway Server schedules class C messages in advance per gateway.\n  - This requires a database migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- `end-devices use-external-join-server` CLI subcommand, which disassociates and deletes the device from Join Server.\n- `mac_settings.beacon_frequency` end device field, which defines the default frequency of class B beacon in Hz.\n- `mac_settings.desired_beacon_frequency` end device field, which defines the desired frequency of class B beacon in Hz that will be configured via MAC commands.\n- `mac_settings.desired_ping_slot_data_rate_index` end device field, which defines the desired data rate index of the class B ping slot that will be configured via MAC commands.\n- `mac_settings.desired_ping_slot_frequency` end device field, which defines the desired frequency of the class B ping slot that will be configured via MAC commands.\n- Mobile navigation menu to the Console.\n- View and edit all Gateway settings from the Console.\n- `skip_payload_crypto` end device field, which makes the Application Server skip decryption of uplink payloads and encryption of downlink payloads.\n- `app_s_key` and `last_a_f_cnt_down` uplink message fields, which are set if the `skip_payload_crypto` end device field is true.\n- Support multiple frequency plans for a Gateway.\n- Entity search by ID in the Console.\n\n### Changed\n\n- `resets_join_nonces` now applies to pre-1.1 devices as well as 1.1+ devices.\n- Empty (`0x0000000000000000`) JoinEUIs are now allowed.\n\n### Fixed\n\n- Respect stack components on different hosts when connected to event sources in the Console.\n- Pagination of search results.\n- Handling OTAA devices registered on an external Join Server in the Console.\n- RxMetadata Location field from Gateway Server.\n- Channel mask encoding in LinkADR MAC command.\n- Device location and payload formatter form submits in the Console.\n- Events processing in the JS SDK.\n- Application Server frontends getting stuck after their associated link is closed.\n\n## [3.4.2] - 2020-01-08\n\n### Added\n\n- Forwarding of backend warnings to the Console.\n- Auth Info service to the JavaScript SDK.\n- Subscribable events to the JavaScript SDK.\n- Include `gateway_ID` field in Semtech UDP configuration response from Gateway Configuration Server.\n- Sorting feature to entity tables in the Console.\n\n### Changed\n\n- Increase time that class C messages are scheduled in advance from 300 to 500 ms to support higher latency gateway backhauls.\n\n### Fixed\n\n- Fix selection of pseudo wildcard rights being possible (leading to crash) in the Console even when such right cannot be granted.\n- Fix loading spinner being stuck infinitely in gateway / application / organization overview when some rights aren't granted to the collaborator.\n- Fix deadlock of application add form in the Console when the submit results in an error.\n- Fix ttn-lw-cli sometimes refusing to update Gateway EUI.\n\n## [3.4.1] - 2019-12-30\n\n### Added\n\n- Support for ordering in `List` RPCs.\n- Detect existing Basic Station time epoch when the gateway was already running long before it (re)connected to the Gateway Server.\n\n### Changed\n\n- Reduce the downlink path expiry window to 15 seconds, i.e. typically missing three `PULL_DATA` frames.\n- Reduce the connection expiry window to 1 minute.\n- Reduce default UDP address block time from 5 minutes to 1 minute. This allows for faster reconnecting if the gateway changes IP address. The downlink path and connection now expire before the UDP source address is released.\n\n### Fixed\n\n- Fix class A downlink scheduling when an uplink message has been received between the triggering uplink message.\n\n## [3.4.0] - 2019-12-24\n\n### Added\n\n- Downlink queue operation topics in the PubSub integrations can now be configured using the Console.\n- `List` RPC in the user registry and related messages.\n- User management for admins in the Console.\n- `users list` command in the CLI.\n- Support for getting Kerlink CPF configurations from Gateway Configuration Server.\n- Support for Microchip ATECC608A-TNGLORA-C manifest files in device template conversion.\n\n### Fixed\n\n- Fix the PubSub integration edit page in the Console.\n- Fix updating and setting of webhook headers in the Console.\n- Fix DevNonce checks for LoRaWAN 1.0.3.\n\n## [3.3.2] - 2019-12-04\n\n### Added\n\n- Support for selecting gateways when queueing downlinks via CLI (see `class-b-c.gateways` option).\n- Options `is.oauth.ui.branding-base-url` and `console.ui.branding-base-url` that can be used to customize the branding (logos) of the web UI.\n- Email templates can now also be loaded from blob buckets.\n- Support for pagination in search APIs.\n- Search is now also available to non-admin users.\n- Support for searching end devices within an application.\n- Notification during login informing users of unapproved user accounts.\n- Support maximum EIRP value from frequency plans sub-bands.\n- Support duty-cycle value from frequency plans sub-bands.\n\n### Changed\n\n- Allow enqueuing class B/C downlinks regardless of active device class.\n\n### Fixed\n\n- Fix crashing of organization collaborator edit page.\n- Avoid validating existing queue on application downlink pushes.\n- Correct `AU_915_928` maximum EIRP value to 30 dBm in 915.0 \u2013 928.0 MHz (was 16.15 dBm).\n- Correct `US_902_928` maximum EIRP value to 23.15 dBm in 902.3 \u2013 914.9 MHz (was 32.15 dBm) and 28.15 dBm in 923.3 \u2013 927.5 MHz (was 32.15 dBm). This aligns with US915 Hybrid Mode.\n- Correct `AS_923` maximum EIRP value to 16 dBm in 923.0 \u2013 923.5 MHz (was 16.15 dBm).\n\n### Security\n\n- Keep session keys separate by `JoinEUI` to avoid conditions where session keys are retrieved only by `DevEUI` and the session key identifier. This breaks retrieving session keys of devices that have been activated on a deployment running a previous version. Since the Application Server instances are currently in-cluster, there is no need for an Application Server to retrieve the `AppSKey` from the Join Server, making this breaking change ineffective.\n\n## [3.3.1] - 2019-11-26\n\n### Added\n\n- Add support for Redis Sentinel (see `redis.failover.enable`, `redis.failover.master-name`, `redis.failover.addresses` options).\n\n### Fixed\n\n- Fix `AppKey` decryption in Join Server.\n\n## [3.3.0] - 2019-11-25\n\n### Added\n\n- Add support for encrypting device keys at rest (see `as.device-kek-label`, `js.device-kek-label` and `ns.device-kek-label` options).\n- The Network Server now provides the timestamp at which it received join-accept or data uplink messages.\n- Add more details to logs that contain errors.\n- Support for end device pictures in the Identity Server.\n  - This requires a database migration (`ttn-lw-stack is-db migrate`) because of the added columns.\n- Support for end device pictures in the CLI.\n\n### Fixed\n\n- Fix an issue causing unexpected behavior surrounding login, logout and token management in the Console.\n- Fix an issue causing the application link page of the Console to load infinitely.\n\n## [3.2.6] - 2019-11-18\n\n### Fixed\n\n- Fix active application link count being limited to 10 per CPU.\n- The Application Server now fills the timestamp at which it has received uplinks from the Network Server.\n\n## [3.2.5] - 2019-11-15\n\n### Added\n\n- Support for creating applications and gateway with an organization as the initial owner in the Console.\n- Hide views and features in the Console that the user and stack configuration does not meet the necessary requirements for.\n- Full range of Join EUI prefixes in the Console.\n- Support specifying the source of interoperability server client CA configuration (see `interop.sender-client-ca.source` and related fields).\n\n### Changed\n\n- Reading and writing of session keys in Application and Network server registries now require device key read and write rights respectively.\n- Implement redesign of entity overview title sections to improve visual consistency.\n\n### Deprecated\n\n- `--interop.sender-client-cas` in favor of `--interop.sender-client-ca` sub-fields in the stack.\n\n### Fixed\n\n- Fix gateway API key forms being broken in the Console.\n- Fix MAC command handling in retransmissions.\n- Fix multicast device creation issues.\n- Fix device key unwrapping.\n- Fix setting gateway locations in the Console.\n\n## [3.2.4] - 2019-11-04\n\n### Added\n\n- Support LoRa Alliance TR005 Draft 3 QR code format.\n- Connection indicators in Console's gateway list.\n- TLS support for application link in the Console.\n- Embedded documentation served at `/assets/doc`.\n\n### Fixed\n\n- Fix device creation rollback potentially deleting existing device with same ID.\n- Fix missing transport credentials when using external NS linking.\n\n## [3.2.3] - 2019-10-24\n\n### Added\n\n- Emails when the state of a user or OAuth client changes.\n- Option to generate claim authentication codes for devices automatically.\n- User invitations can now be sent and redeemed.\n- Support for creating organization API keys in the Console.\n- Support for deleting organization API keys in the Console.\n- Support for editing organization API keys in the Console.\n- Support for listing organization API keys in the Console.\n- Support for managing organization API keys and rights in the JS SDK.\n- Support for removing organization collaborators in the Console.\n- Support for editing organization collaborators in the Console.\n- Support for listing organization collaborators in the Console.\n- Support for managing organization collaborators and rights in the JS SDK.\n- MQTT integrations page in the Console.\n\n### Changed\n\n- Rename \"bulk device creation\" to \"import devices\".\n- Move device import button to the end device tables (and adapt routing accordingly).\n- Improve downlink performance.\n\n### Fixed\n\n- Fix issues with device bulk creation in Join Server.\n- Fix device import not setting component hosts automatically.\n- Fix NewChannelReq scheduling condition.\n- Fix publishing events for generated MAC commands.\n- Fix saving changes to device general settings in the Console.\n\n## [3.2.2] - 2019-10-14\n\n### Added\n\n- Initial API and CLI support for LoRaWAN application packages and application package associations.\n- New documentation design.\n- Support for ACME v2.\n\n### Deprecated\n\n- Deprecate the `tls.acme.enable` setting. To use ACME, set `tls.source` to `acme`.\n\n### Fixed\n\n- Fix giving priority to ACME settings to remain backward compatible with configuration for `v3.2.0` and older.\n\n## [3.2.1] - 2019-10-11\n\n### Added\n\n- `support-link` URI config to the Console to show a \"Get Support\" button.\n- Option to explicitly enable TLS for linking of an Application Server on an external Network Server.\n- Service to list QR code formats and generate QR codes in PNG format.\n- Status message forwarding functions to upstream host/s.\n- Support for authorizing device claiming on application level through CLI. See `ttn-lw-cli application claim authorize --help` for more information.\n- Support for claiming end devices through CLI. See `ttn-lw-cli end-device claim --help` for more information.\n- Support for converting Microchip ATECC608A-TNGLORA manifest files to device templates.\n- Support for Crypto Servers that do not expose device root keys.\n- Support for generating QR codes for claiming. See `ttn-lw-cli end-device generate-qr --help` for more information.\n- Support for storage of frequency plans, device repository and interoperability configurations in AWS S3 buckets or GCP blobs.\n\n### Changed\n\n- Enable the V2 MQTT gateway listener by default on ports 1881/8881.\n- Improve handling of API-Key and Collaborator rights in the console.\n\n### Fixed\n\n- Fix bug with logout sometimes not working in the console.\n- Fix not respecting `RootCA` and `InsecureSkipVerify` TLS settings when ACME was configured for requesting TLS certificates.\n- Fix reading configuration from current, home and XDG directories.\n\n## [3.2.0] - 2019-09-30\n\n### Added\n\n- A map to the overview pages of end devices and gateways.\n- API to retrieve MQTT configurations for applications and gateways.\n- Application Server PubSub integrations events.\n- `mac_settings.desired_max_duty_cycle`, `mac_settings.desired_adr_ack_delay_exponent` and `mac_settings.desired_adr_ack_limit_exponent` device flags.\n- PubSub integrations to the console.\n- PubSub service to JavaScript SDK.\n- Support for updating `mac_state.desired_parameters`.\n- `--tls.insecure-skip-verify` to skip certificate chain verification (insecure; for development only).\n\n### Changed\n\n- Change the way API key rights are handled in the `UpdateAPIKey` rpc for Applications, Gateways, Users and Organizations. Users can revoke or add rights to api keys as long as they have these rights.\n- Change the way collaborator rights are handled in the `SetCollaborator` rpc for Applications, Gateways, Clients and Organizations. Collaborators can revoke or add rights to other collaborators as long as they have these rights.\n- Extend device form in the Console to allow creating OTAA devices without root keys.\n- Improve confirmed downlink operation.\n- Improve gateway connection status indicators in Console.\n- Upgrade Gateway Configuration Server to a first-class cluster role.\n\n### Fixed\n\n- Fix downlink length computation in the Network Server.\n- Fix implementation of CUPS update-info endpoint.\n- Fix missing CLI in `deb`, `rpm` and Snapcraft packages.\n\n## [3.1.2] - 2019-09-05\n\n### Added\n\n- `http.redirect-to-host` config to redirect all HTTP(S) requests to the same host.\n- `http.redirect-to-tls` config to redirect HTTP requests to HTTPS.\n- Organization Create page in the Console.\n- Organization Data page to the console.\n- Organization General Settings page to the console.\n- Organization List page.\n- Organization Overview page to the console.\n- Organizations service to the JS SDK.\n- `create` method in the Organization service in the JS SDK.\n- `deleteById` method to the Organization service in the JS SDK.\n- `getAll` method to the Organizations service.\n- `getAll` method to the Organization service in the JS SDK.\n- `getById` method to the Organization service in the JS SDK.\n- `openStream` method to the Organization service in the JS SDK.\n- `updateById` method to the Organization service in the JS SDK.\n\n### Changed\n\n- Improve compatibility with various Class C devices.\n\n### Fixed\n\n- Fix root-relative OAuth flows for the console.\n\n## [3.1.1] - 2019-08-30\n\n### Added\n\n- `--tls.acme.default-host` flag to set a default (fallback) host for connecting clients that do not use TLS-SNI.\n- AS-ID to validate the Application Server with through the Common Name of the X.509 Distinguished Name of the TLS client certificate. If unspecified, the Join Server uses the host name from the address.\n- Defaults to `ttn-lw-cli clients create` and `ttn-lw-cli users create`.\n- KEK labels for Network Server and Application Server to use to wrap session keys by the Join Server. If unspecified, the Join Server uses a KEK label from the address, if present in the key vault.\n- MQTT PubSub support in the Application Server. See `ttn-lw-cli app pubsub set --help` for more details.\n- Support for external email templates in the Identity Server.\n- Support for Join-Server interoperability via Backend Interfaces specification protocol.\n- The `generateDevAddress` method in the `Ns` service.\n- The `Js` service to the JS SDK.\n- The `listJoinEUIPrefixes` method in the `Js` service.\n- The `Ns` service to the JS SDK.\n- The new The Things Stack branding.\n- Web interface for changing password.\n- Web interface for requesting temporary password.\n\n### Changed\n\n- Allow admins to create temporary passwords for users.\n- CLI-only brew tap formula is now available as `TheThingsNetwork/lorawan-stack/ttn-lw-cli`.\n- Improve error handling in OAuth flow.\n- Improve getting started guide for a deployment of The Things Stack.\n- Optimize the way the Identity Server determines memberships and rights.\n\n### Deprecated\n\n- `--nats-server-url` in favor of `--nats.server-url` in the PubSub CLI support.\n\n### Removed\n\n- `ids.dev_addr` from allowed field masks for `/ttn.lorawan.v3.NsEndDeviceRegistry/Set`.\n- Auth from CLI's `forgot-password` command and made it optional on `update-password` command.\n- Breadcrumbs from Overview, Application and Gateway top-level views.\n\n### Fixed\n\n- Fix `grants` and `rights` flags of `ttn-lw-cli clients create`.\n- Fix a bug that resulted in events streams crashing in the console.\n- Fix a bug where uplinks from some Basic Station gateways resulted in the connection to break.\n- Fix a security issue where non-admin users could edit admin-only fields of OAuth clients.\n- Fix an issue resulting in errors being unnecessarily logged in the console.\n- Fix an issue with the `config` command rendering some flags and environment variables incorrectly.\n- Fix API endpoints that allowed HTTP methods that are not part of our API specification.\n- Fix console handling of configured mount paths other than `/console`.\n- Fix handling of `ns.dev-addr-prefixes`.\n- Fix incorrect error message in `ttn-lw-cli users oauth` commands.\n- Fix propagation of warning headers in API responses.\n- Fix relative time display in the Console.\n- Fix relative time display in the Console for IE11, Edge and Safari.\n- Fix unable to change LoRaWAN MAC and PHY version.\n- Resolve flickering display issue in the overview pages of entities in the console.\n\n## [3.1.0] - 2019-07-26\n\n### Added\n\n- `--headers` flag to `ttn-lw-cli applications webhooks set` allowing users to set HTTP headers to add to webhook requests.\n- `getByOrganizationId` and `getByUserId` methods to the JS SDK.\n- A new documentation system.\n- A newline between list items returned from the CLI when using a custom `--output-format` template.\n- An `--api-key` flag to `ttn-lw-cli login` that allows users to configure the CLI with a more restricted (Application, Gateway, ...) API key instead of the usual \"all rights\" OAuth access token.\n- API for getting the rights of a single collaborator on (member of) an entity.\n- Application Payload Formatters Page in the console.\n- Class C and Multicast guide.\n- CLI support for enabling/disabling JS, GS, NS and AS through configuration.\n- Components overview in documentation.\n- Device Templates to create, convert and map templates and assign EUIs to create large amounts of devices.\n- Downlink Queue Operations guide.\n- End device level payload formatters to console.\n- Event streaming views for end devices.\n- Events to device registries in the Network Server, Application Server and Join Server.\n- Functionality to delete end devices in the console.\n- Gateway General Settings Page to the console.\n- Getting Started guide for command-line utility (CLI).\n- Initial overview page to console.\n- Native support to the Basic Station LNS protocol in the Gateway Server.\n- NS-JS and AS-JS Backend Interfaces 1.0 and 1.1 draft 3 support.\n- Option to revoke user sessions and access tokens on password change.\n- Support for NS-JS and AS-JS Backend Interfaces.\n- Support for URL templates inside the Webhook paths ! The currently supported fields are `appID`, `appEUI`, `joinEUI`, `devID`, `devEUI` and `devAddr`. They can be used using RFC 6570.\n- The `go-cloud` integration to the Application Server. See `ttn-lw-cli applications pubsubs --help` for more details.\n- The `go-cloud` integration to the Application Server. This integration enables downlink and uplink messaging using the cloud pub-sub by setting up the `--as.pubsub.publish-urls` and `--as.pubsub.subscribe-urls` parameters. You can specify multiple publish endpoints or subscribe endpoints by repeating the parameter (i.e. `--as.pubsub.publish-urls url1 --as.pubsub.publish-urls url2 --as.pubsub.subscribe-urls url3`).\n- The Gateway Data Page to the console.\n- View to update the antenna location information of gateways.\n- View to update the location information of end devices.\n- Views to handle integrations (webhooks) to the console.\n- Working with Events guide.\n\n### Changed\n\n- Change database index names for invitation and OAuth models. Existing databases are migrated automatically.\n- Change HTTP API for managing webhooks to avoid conflicts with downlink webhook paths.\n- Change interpretation of frequency plan's maximum EIRP from a ceiling to a overriding value of any band (PHY) settings.\n- Change the prefix of Prometheus metrics from `ttn_` to `ttn_lw_`.\n- Rename the label `server_address` of Prometheus metrics `grpc_client_conns_{opened,closed}_total` to `remote_address`\n- Resolve an issue where the stack complained about sending credentials on insecure connections.\n- The Events endpoint no longer requires the `_ALL` right on requested entities. All events now have explicit visibility rules.\n\n### Deprecated\n\n- `JsEndDeviceRegistry.Provision()` rpc. Please use `EndDeviceTemplateConverter.Convert()` instead.\n\n### Removed\n\n- Remove the address label from Prometheus metric `grpc_server_conns_{opened,closed}_total`.\n\n### Fixed\n\n- Fix Basic Station CUPS LNS credentials blob.\n- Fix a leak of entity information in List RPCs.\n- Fix an issue that resulted in some event errors not being shown in the console.\n- Fix an issue where incorrect error codes were returned from the console's OAuth flow.\n- Fix clearing component addresses on updating end devices through CLI.\n- Fix CLI panic for invalid attributes.\n- Fix crash when running some `ttn-lw-cli organizations` commands without `--user-id` flag.\n- Fix dwell-time issues in AS923 and AU915 bands.\n- Fix occasional issues with downlink payload length.\n- Fix the `x-total-count` header value for API Keys and collaborators.\n- Fix the error that is returned when deleting a collaborator fails.\n\n### Security\n\n- Update node packages to fix known vulnerabilities.\n\n## [3.0.4] - 2019-07-10\n\n### Fixed\n\n- Fix rights caching across multiple request contexts.\n\n## [3.0.3] - 2019-05-10\n\n### Added\n\n- Support for getting automatic Let's Encrypt certificates. Add the new config flags `--tls.acme.enable`, `--tls.acme.dir=/path/to/storage`, `--tls.acme.hosts=example.com`, `--tls.acme.email=you@example.com` flags (or their env/config equivalent) to make it work. The `/path/to/storage` dir needs to be `chown`ed to `886:886`. See also `docker-compose.yml`.\n- `GetApplicationAPIKey`, `GetGatewayAPIKey`, `GetOrganizationAPIKey`, `GetUserAPIKey` RPCs and related messages.\n- \"General Settings\" view for end devices.\n- `--credentials-id` flag to CLI that allows users to be logged in with mulitple credentials and switch between them.\n- A check to the Identity Server that prevents users from deleting applications that still contain end devices.\n- Application Collaborators management to the console.\n- Checking maximum round-trip time for late-detection in downlink scheduling.\n- Configuration service to JS SDK.\n- Device list page to applications in console.\n- Events to the application management pages.\n- Round-trip times to Gateway Server connection statistics.\n- Support for the value `cloud` for the `--events.backend` flag. When this flag is set, the `--events.cloud.publish-url` and `--events.cloud.subscribe-url` are used to set up a cloud pub-sub for events.\n- Support for uplink retransmissions.\n- Using median round-trip time value for absolute time scheduling if the gateway does not have GPS time.\n\n### Changed\n\n- Change encoding of keys to hex in device key generation (JS SDK).\n- Change interpretation of absolute time in downlink messages from time of transmission to time of arrival.\n- Improve ADR algorithm performance.\n- Improve ADR performance.\n- Make late scheduling default for gateways connected over UDP to avoid overwriting queued downlink.\n- Make sure that non-user definable fields of downlink messages get discarded across all Application Server frontends.\n- Prevent rpc calls to JS when the device has `supports_join` set to `false` (JS SDK).\n- Update the development tooling. If you are a developer, make sure to check the changes in CONTRIBUTING.md and DEVELOPMENT.md.\n\n### Fixed\n\n- Fix `AppAs` not registered for HTTP interfacing while it is documented in the API.\n- Fix absolute time scheduling with UDP connected gateways\n- Fix authentication of MQTT and gRPC connected gateways\n- Fix connecting MQTT V2 gateways\n- Fix faulty composition of default values with provided values during device creation (JS SDK)\n- Fix preserving user defined priority for application downlink\n- Fix UDP downlink format for older forwarders\n- Fix usage of `URL` class in browsers (JS SDK)\n\n## [3.0.2] - 2019-04-12\n\n### Changed\n\n- Upgrade Go to 1.12\n\n### Fixed\n\n- Fix streaming events over HTTP with Gzip enabled.\n- Fix resetting downlink channels for US, AU and CN end devices.\n- Fix rendering of enums in JSON.\n- Fix the permissions of our Snap package.\n\n## [3.0.1] - 2019-04-10\n\n### Added\n\n- `dev_addr` to device fetched from the Network Server.\n- `received_at` to `ApplicationUp` messages.\n- `ttn-lw-cli users oauth` commands.\n- Event payload to `as.up.forward`, `as.up.drop`, `as.down.receive`, `as.down.forward` and `as.down.drop` events.\n- Event payload to `gs.status.receive`, `gs.up.receive` and `gs.down.send` events.\n- OAuth management in the Identity Server.\n\n### Changed\n\n- Document places in the CLI where users can use arguments instead of flags.\n- In JSON, LoRaWAN AES keys are now formatted as Hex instead of Base64.\n- Make device's `dev_addr` update when the session's `dev_addr` is updated.\n\n### Removed\n\n- Remove end device identifiers from `DownlinkMessage` sent from the Network Server to the Gateway Server.\n\n### Fixed\n\n- Fix `dev_addr` not being present in upstream messages.\n\n<!--\nNOTE: These links should respect backports. See https://github.com/TheThingsNetwork/lorawan-stack/pull/1444/files#r333379706.\n-->\n\n[unreleased]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.24.0...v3.24\n[3.24.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.23.2...v3.24.0\n[3.23.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.23.1...v3.23.2\n[3.23.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.23.0...v3.23.1\n[3.23.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.22.2...v3.23.0\n[3.22.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.22.1...v3.22.2\n[3.22.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.22.0...v3.22.1\n[3.22.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.21.2...v3.22.0\n[3.21.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.21.1...v3.21.2\n[3.21.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.21.0...v3.21.1\n[3.21.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.20.2...v3.21.0\n[3.20.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.20.1...v3.20.2\n[3.20.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.20.0...v3.20.1\n[3.20.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.19.2...v3.20.0\n[3.19.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.19.1...v3.19.2\n[3.19.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.19.0...v3.19.1\n[3.19.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.18.2...v3.19.0\n[3.18.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.18.1...v3.18.2\n[3.18.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.18.0...v3.18.1\n[3.18.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.17.1...v3.18.0\n[3.17.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.17.0...v3.17.1\n[3.17.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.16.2...v3.17.0\n[3.16.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.16.1...v3.16.2\n[3.16.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.16.0...v3.16.1\n[3.16.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.15.3...v3.16.0\n[3.15.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.15.2...v3.15.3\n[3.15.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.15.1...v3.15.2\n[3.15.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.15.0...v3.15.1\n[3.15.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.14.2...v3.15.0\n[3.14.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.14.1...v3.14.2\n[3.14.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.14.0...v3.14.1\n[3.14.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.13.3...v3.14.0\n[3.13.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.13.2...v3.13.3\n[3.13.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.13.1...v3.13.2\n[3.13.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.13.0...v3.13.1\n[3.13.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.12.3...v3.13.0\n[3.12.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.12.2...v3.12.3\n[3.12.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.12.1...v3.12.2\n[3.12.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.12.0...v3.12.1\n[3.12.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.11.3...v3.12.0\n[3.11.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.11.2...v3.11.3\n[3.11.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.11.1...v3.11.2\n[3.11.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.11.0...v3.11.1\n[3.11.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.10.6...v3.11.0\n[3.10.6]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.10.5...v3.10.6\n[3.10.5]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.10.4...v3.10.5\n[3.10.4]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.10.3...v3.10.4\n[3.10.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.10.2...v3.10.3\n[3.10.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.10.1...v3.10.2\n[3.10.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.10.0...v3.10.1\n[3.10.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.9.4...v3.10.0\n[3.9.4]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.9.3...v3.9.4\n[3.9.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.9.1...v3.9.3\n[3.9.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.9.0...v3.9.1\n[3.9.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.8.6...v3.9.0\n[3.8.6]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.8.5...v3.8.6\n[3.8.5]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.8.4...v3.8.5\n[3.8.4]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.8.3...v3.8.4\n[3.8.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.8.2...v3.8.3\n[3.8.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.7.2...v3.8.2\n[3.7.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.7.0...v3.7.2\n[3.7.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.6.0...v3.7.0\n[3.6.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.6.2...v3.6.3\n[3.6.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.6.1...v3.6.2\n[3.6.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.6.0...v3.6.1\n[3.6.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.5.3...v3.6.0\n[3.5.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.5.2...v3.5.3\n[3.5.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.5.1...v3.5.2\n[3.5.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.5.0...v3.5.1\n[3.5.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.4.2...v3.5.0\n[3.4.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.4.1...v3.4.2\n[3.4.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.4.0...v3.4.1\n[3.4.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.3.2...v3.4.0\n[3.3.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.3.1...v3.3.2\n[3.3.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.3.0...v3.3.1\n[3.3.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.2.6...v3.3.0\n[3.2.6]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.2.5...v3.2.6\n[3.2.5]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.2.4...v3.2.5\n[3.2.4]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.2.3...v3.2.4\n[3.2.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.2.2...v3.2.3\n[3.2.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.2.1...v3.2.2\n[3.2.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.2.0...v3.2.1\n[3.2.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.1.2...v3.2.0\n[3.1.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.1.1...v3.1.2\n[3.1.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.1.0...v3.1.1\n[3.1.0]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.0.4...v3.1.0\n[3.0.4]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.0.3...v3.0.4\n[3.0.3]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.0.2...v3.0.3\n[3.0.2]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.0.1...v3.0.2\n[3.0.1]: https://github.com/TheThingsNetwork/lorawan-stack/compare/v3.0.0...v3.0.1\n", "// Copyright \u00a9 2020 The Things Network Foundation, The Things Industries B.V.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport React, { useState, useCallback } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport Query from 'query-string'\nimport { defineMessages } from 'react-intl'\n\nimport api from '@account/api'\n\nimport Button from '@ttn-lw/components/button'\nimport ButtonGroup from '@ttn-lw/components/button/group'\nimport Form from '@ttn-lw/components/form'\nimport Input from '@ttn-lw/components/input'\nimport SubmitButton from '@ttn-lw/components/submit-button'\n\nimport IntlHelmet from '@ttn-lw/lib/components/intl-helmet'\n\nimport style from '@account/views/front/front.styl'\n\nimport Yup from '@ttn-lw/lib/yup'\nimport {\n  selectApplicationRootPath,\n  selectApplicationSiteName,\n  selectApplicationSiteTitle,\n} from '@ttn-lw/lib/selectors/env'\nimport sharedMessages from '@ttn-lw/lib/shared-messages'\nimport { userId as userIdRegexp } from '@ttn-lw/lib/regexp'\n\nimport { selectEnableUserRegistration } from '@account/lib/selectors/app-config'\n\nconst m = defineMessages({\n  createAccount: 'Create an account',\n  forgotPassword: 'Forgot password?',\n  loginToContinue: 'Please login to continue',\n  loginFailed: 'Login failed',\n  accountDeleted: 'Account deleted',\n})\n\nconst appRoot = selectApplicationRootPath()\nconst siteName = selectApplicationSiteName()\nconst siteTitle = selectApplicationSiteTitle()\nconst enableUserRegistration = selectEnableUserRegistration()\n\nconst validationSchema = Yup.object().shape({\n  user_id: Yup.string()\n    .min(2, Yup.passValues(sharedMessages.validateTooShort))\n    .max(36, Yup.passValues(sharedMessages.validateTooLong))\n    .matches(userIdRegexp, Yup.passValues(sharedMessages.validateIdFormat))\n    .required(sharedMessages.validateRequired)\n    .trim(),\n  password: Yup.string().required(sharedMessages.validateRequired),\n})\n\nconst url = (location, omitQuery = false) => {\n  const query = Query.parse(location.search)\n\n  const next = query.n || appRoot\n\n  if (omitQuery) {\n    return next.split('?')[0]\n  }\n\n  // Only allow relative redirects to prevent open redirects.\n  if (!next.startsWith('/') || next.startsWith('//')) {\n    return appRoot\n  }\n\n  return next\n}\n\nconst Login = () => {\n  const [error, setError] = useState(undefined)\n  const location = useLocation()\n\n  const handleSubmit = useCallback(\n    async (values, { setSubmitting }) => {\n      try {\n        setError(undefined)\n\n        const castedValues = validationSchema.cast(values)\n        await api.account.login(castedValues)\n\n        window.location = url(location)\n      } catch (error) {\n        setError(error)\n        setSubmitting(false)\n      }\n    },\n    [location],\n  )\n\n  const initialValues = {\n    user_id: '',\n    password: '',\n  }\n\n  let info\n  const next = url(location)\n\n  if (location.state && location.state.info) {\n    info = location.state.info\n  } else if (!next || (next !== appRoot && !Boolean(error))) {\n    info = m.loginToContinue\n  } else if ('account-deleted' in Query.parse(location.search)) {\n    info = m.accountDeleted\n  }\n\n  return (\n    <div className={style.form}>\n      <IntlHelmet title={sharedMessages.login} />\n      <h1 className={style.title}>\n        {siteName}\n        <br />\n        <span className={style.subTitle}>{siteTitle}</span>\n      </h1>\n      <hr className={style.hRule} />\n      <Form\n        onSubmit={handleSubmit}\n        initialValues={initialValues}\n        error={error}\n        errorTitle={m.loginFailed}\n        info={info}\n        validationSchema={validationSchema}\n        horizontal={false}\n      >\n        <Form.Field\n          title={sharedMessages.userId}\n          name=\"user_id\"\n          component={Input}\n          autoFocus\n          required\n        />\n        <Form.Field\n          title={sharedMessages.password}\n          component={Input}\n          name=\"password\"\n          type=\"password\"\n          required\n        />\n        <ButtonGroup>\n          <Form.Submit\n            component={SubmitButton}\n            message={sharedMessages.login}\n            className={style.submitButton}\n            error={Boolean(error)}\n          />\n          {enableUserRegistration && (\n            <Button.Link to={`/register${location.search}`} message={m.createAccount} />\n          )}\n          <Button.Link naked message={m.forgotPassword} to={`/forgot-password${location.search}`} />\n        </ButtonGroup>\n      </Form>\n    </div>\n  )\n}\n\nexport default Login\n"], "filenames": ["CHANGELOG.md", "pkg/webui/account/views/login/index.js"], "buggy_code_start_loc": [27, 72], "buggy_code_end_loc": [27, 72], "fixing_code_start_loc": [28, 73], "fixing_code_end_loc": [30, 78], "type": "CWE-601", "message": "lorawan-stack is an open source LoRaWAN network server. Prior to version 3.24.1, an open redirect exists on the login page of the lorawan stack server, allowing an attacker to supply a user controlled redirect upon sign in. This issue may allows malicious actors to phish users, as users assume they were redirected to the homepage on login. Version 3.24.1 contains a fix.\n\n", "other": {"cve": {"id": "CVE-2023-26494", "sourceIdentifier": "security-advisories@github.com", "published": "2023-04-24T17:15:10.693", "lastModified": "2023-05-03T18:59:28.997", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "lorawan-stack is an open source LoRaWAN network server. Prior to version 3.24.1, an open redirect exists on the login page of the lorawan stack server, allowing an attacker to supply a user controlled redirect upon sign in. This issue may allows malicious actors to phish users, as users assume they were redirected to the homepage on login. Version 3.24.1 contains a fix.\n\n"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-601"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:thethingsnetwork:lorawan-stack:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.24.1", "matchCriteriaId": "5085A9E1-E8DC-4888-BE64-BE80842C8336"}]}]}], "references": [{"url": "https://github.com/TheThingsNetwork/lorawan-stack/blob/ecdef730f176c02f7c9afce98b0457ae64de5bfc/pkg/webui/account/views/login/index.js#L90-L90", "source": "security-advisories@github.com", "tags": ["Product"]}, {"url": "https://github.com/TheThingsNetwork/lorawan-stack/blob/ecdef730f176c02f7c9afce98b0457ae64de5bfc/pkg/webui/account/views/token-login/index.js#L74-L74", "source": "security-advisories@github.com", "tags": ["Product"]}, {"url": "https://github.com/TheThingsNetwork/lorawan-stack/commit/f06776028bdb3994847fc6067613dc61a2b3559e", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/TheThingsNetwork/lorawan-stack/releases/tag/v3.24.1", "source": "security-advisories@github.com", "tags": ["Release Notes"]}, {"url": "https://securitylab.github.com/advisories/GHSL-2022-138_lorawan-stack/", "source": "security-advisories@github.com", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/TheThingsNetwork/lorawan-stack/commit/f06776028bdb3994847fc6067613dc61a2b3559e"}}