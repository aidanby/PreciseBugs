{"buggy_code": ["<?php\n\nclass Install\n{\n    function __construct($ini_file)\n    {\n        openlog(\"livehelperchat\", LOG_PID | LOG_PERROR, LOG_LOCAL0);\n        syslog(LOG_DEBUG, \"Start installation\"); \n        $this->settings = parse_ini_file($ini_file, true, INI_SCANNER_TYPED);\n    }\n\n    function __destruct()\n    {\n        syslog(LOG_DEBUG, \"Finish installation\"); \n        closelog();\n    }\n\n    function step1() {\n        $Errors = array();\n        $directories = $this->_scandir('cache');\n        $this->file_is_writable(array('cache'),'', $Errors);\n        $this->file_is_writable($directories, 'cache/', $Errors);\n        $this->file_is_writable(array('settings'), '', $Errors);\n        $var_directories = array(\n            'var/storage',\n            'var/storageform',\n            'var/storagetheme',\n            'var/storageadmintheme',\n            'var/tmpfiles',\n            'var/userphoto',\n        );\n        $this->file_is_writable(array('var'),'', $Errors);\n        $this->file_is_writable($var_directories, '', $Errors);\n\n        if (!extension_loaded ('pdo_mysql' ))\n            $Errors[] = \"php-pdo extension not detected. Please install php extension\";\n\n        if (!extension_loaded('curl'))\n            $Errors[] = \"php_curl extension not detected. Please install php extension\";\t\n\n        if (!extension_loaded('mbstring'))\n            $Errors[] = \"mbstring extension not detected. Please install php extension\";\t\n\n        if (!extension_loaded('gd'))\n            $Errors[] = \"gd extension not detected. Please install php extension\";\t\n\n        if (!function_exists('json_encode'))\n            $Errors[] = \"json support not detected. Please install php extension\";\t\n\n        if (version_compare(PHP_VERSION, '5.4.0','<')) {\n            $Errors[] = \"Minimum 5.4.0 PHP version is required\";\t\n        }\n\n        if (count($Errors) == 0){\n            return true;\n        } else {\n            return $Errors;\n        }\n    }\n\n    function step2() {\n        $Errors = array();\n        $database = $this->settings['db'];\n        foreach ($database as $key => $value) {\n            if (!filter_var($database[$key], FILTER_UNSAFE_RAW)) {\n                $Errors[] = \"Please enter database $key\";\n            }\n        }\n        if (!filter_var($database['database'], FILTER_SANITIZE_STRING))\n        {\n            $Errors[] = 'Please enter database name';\n        }\n\n        if (count($Errors) == 0) {\n            try {\n                $db = ezcDbFactory::create( \"mysql://{$database['user']}:{$database['password']}@{$database['host']}:{$database['port']}/{$database['database']}\" );\n            } catch (Exception $e) {\n                $Errors[] = \"Cannot login with provided logins. Returned message: \".$e->getMessage();\n            }\n        }\n\n        if (count($Errors) == 0) {\n            $cfgSite = erConfigClassLhConfig::getInstance();\n            foreach ($database as $key => $value) {\n                $cfgSite->setSetting( 'db', $key, $value);\n            }\n            $cfgSite->setSetting( 'site', 'secrethash', erLhcoreClassChat::generateHash(80));\n            return true;\n        } else {\n            return $Errors;\n        }\n    }\n\n    function step3() {\n\n        $Errors = array();\n\n        $form = (object)$this->settings['admin'];\n        if (!filter_var($form->AdminUsername, FILTER_UNSAFE_RAW))\n        {\n            $Errors[] = 'Please enter admin username';\n        }\n\n        if (!empty($form->AdminUsername) && strlen($form->AdminUsername) > 40)\n        {\n            $Errors[] = 'Maximum 40 characters for admin username';\n        }\n\n        if (!filter_var($form->AdminPassword, FILTER_UNSAFE_RAW))\n        {\n            $Errors[] = 'Please enter admin password';\n        }\n\n        if (!empty($form->AdminPassword) && strlen($form->AdminPassword) > 40)\n        {\n            $Errors[] = 'Maximum 40 characters for admin password';\n        }\n\n        if (!filter_var($form->AdminEmail, FILTER_VALIDATE_EMAIL))\n        {\n            $Errors[] = 'Wrong email address';\n        }\n\n        if (!filter_var($form->DefaultDepartament, FILTER_SANITIZE_STRING))\n        {\n            $Errors[] = 'Please enter default department name';\n        }\n\n        if (count($Errors) == 0) {\n            $adminEmail = $form->AdminEmail;\n\n            /*DATABASE TABLES SETUP*/\n            $db = ezcDbInstance::get();\n\n            try {\n                $db->query(\"set global innodb_large_prefix = 1\");\n            } catch (Exception $e) {\n                // Just ignore if not succeed\n            }\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat` (\n\t\t\t\t  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `nick` varchar(100) NOT NULL,\n\t\t\t\t  `status` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `status_sub` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `status_sub_sub` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `time` int(11) NOT NULL,\n\t\t\t\t  `user_id` int(11) NOT NULL,\n\t\t\t\t  `hash` varchar(40) NOT NULL,\n\t\t\t\t  `referrer` text NOT NULL,\n        \t   \t  `session_referrer` text NOT NULL,\n        \t   \t  `chat_variables` text NOT NULL,\n        \t   \t  `remarks` text NOT NULL,\n\t\t\t\t  `ip` varchar(100) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\t\t\t\t \n\t\t\t\t  `gbot_id` int(11) NOT NULL DEFAULT '0',\t\t\t\t \n\t\t\t\t  `invitation_id` int(11) NOT NULL,\t\t\t\t \n\t\t\t\t  `sender_user_id` int(11) NOT NULL,\n\t\t\t\t  `product_id` int(11) NOT NULL,\n                  `cls_us` tinyint(1) NOT NULL DEFAULT '0',\n\t\t\t\t  `pnd_time` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `cls_time` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `usaccept` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `user_status` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `user_closed_ts` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `support_informed` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `unread_messages_informed` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `reinform_timeout` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `last_op_msg_time` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `has_unread_op_messages` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `unread_op_messages_informed` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `email` varchar(100) NOT NULL,\n\t\t\t\t  `country_code` varchar(100) NOT NULL,\n\t\t\t\t  `country_name` varchar(100) NOT NULL,\n\t\t\t\t  `unanswered_chat` int(11) NOT NULL,\n\t\t\t\t  `anonymized` tinyint(1) NOT NULL,\n\t\t\t\t  `user_typing` int(11) NOT NULL,\n\t\t\t\t  `user_typing_txt` varchar(200) NOT NULL,\n\t\t\t\t  `operator_typing` int(11) NOT NULL,\n        \t   \t  `operator_typing_id` int(11) NOT NULL,\n\t\t\t\t  `phone` varchar(100) NOT NULL,\n\t\t\t\t  `has_unread_messages` int(11) NOT NULL,\n\t\t\t\t  `last_user_msg_time` int(11) NOT NULL,\n\t\t\t\t  `fbst` tinyint(1) NOT NULL,\n\t\t\t\t  `online_user_id` int(11) NOT NULL,\n\t\t\t\t  `auto_responder_id` int(11) NOT NULL,\n\t\t\t\t  `last_msg_id` int(11) NOT NULL,\n\t\t\t\t  `lsync` int(11) NOT NULL,\n\t\t\t\t  `transfer_uid` int(11) NOT NULL,\n\t\t\t\t  `additional_data` text NOT NULL,\t\t\t\t  \n\t\t\t\t  `user_tz_identifier` varchar(50) NOT NULL,\n\t\t\t\t  `lat` varchar(10) NOT NULL,\n\t\t\t\t  `lon` varchar(10) NOT NULL,\n\t\t\t\t  `city` varchar(100) NOT NULL,\n\t\t\t\t  `operation` text NOT NULL,\n\t\t\t\t  `operation_admin` varchar(200) NOT NULL,\n\t\t\t\t  `status_sub_arg` varchar(200) NOT NULL,\n\t\t\t\t  `uagent` varchar(250) NOT NULL,\n\t\t\t\t  `chat_locale` varchar(10) NOT NULL,\n\t\t\t\t  `chat_locale_to` varchar(10) NOT NULL,\n\t\t\t\t  `mail_send` int(11) NOT NULL,\n        \t   \t  `screenshot_id` int(11) NOT NULL,\n        \t   \t  `wait_time` int(11) NOT NULL,\n  \t\t\t\t  `chat_duration` int(11) NOT NULL,\n  \t\t\t\t  `tslasign` int(11) NOT NULL,\n        \t   \t  `priority` int(11) NOT NULL,\n        \t   \t  `chat_initiator` int(11) NOT NULL,\n        \t   \t  `transfer_timeout_ts` int(11) NOT NULL,\n        \t   \t  `transfer_timeout_ac` int(11) NOT NULL,\n        \t   \t  `transfer_if_na` int(11) NOT NULL,\n        \t   \t  `na_cb_executed` int(11) NOT NULL,\n        \t   \t  `device_type` int(11) NOT NULL,\n        \t   \t  `nc_cb_executed` tinyint(1) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `status_user_id` (`status`,`user_id`),\n\t\t\t\t  KEY `unanswered_chat` (`unanswered_chat`),\n\t\t\t\t  KEY `online_user_id` (`online_user_id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `product_id` (`product_id`),\n\t\t\t\t  KEY `unread_operator` (`has_unread_op_messages`,`unread_op_messages_informed`),\n\t\t\t\t  KEY `user_id_sender_user_id` (`user_id`,`sender_user_id`),\n\t\t\t\t  KEY `sender_user_id` (`sender_user_id`),\n\t\t\t\t  KEY `anonymized` (`anonymized`),\n\t\t\t\t  KEY `has_unread_messages` (`has_unread_messages`),\n\t\t\t\t  KEY `status` (`status`),\n                  KEY `nick` (`nick`),\n\t\t\t\t  KEY `email` (`email`),\n\t\t\t\t  KEY `phone` (`phone`),\n\t\t\t\t  KEY `dep_id_status` (`dep_id`,`status`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_chat_blocked_user` (\n                  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `ip` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `user_id` bigint(20) unsigned NOT NULL,\n                  `datets` bigint(20) unsigned NOT NULL,\n                  `chat_id` bigint(20) unsigned NOT NULL,\n                  `dep_id` bigint(20) unsigned NOT NULL,\n                  `nick` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `btype` tinyint(1) NOT NULL DEFAULT 0,\n                  `expires` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  `online_user_id` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  PRIMARY KEY (`id`),\n                  KEY `ip` (`ip`),\n                  KEY `nick` (`nick`),\n                  KEY `online_user_id` (`online_user_id`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_users_online_session` ( \n        \t       `id` bigint(20) NOT NULL AUTO_INCREMENT, \n        \t       `user_id` int(11) NOT NULL, \n        \t       `time` int(11) NOT NULL, \n        \t       `duration` int(11) NOT NULL, \n        \t       `lactivity` int(11) NOT NULL, \n        \t       PRIMARY KEY (`id`), \n        \t       KEY `user_id_lactivity` (`user_id`, `lactivity`), KEY `lactivity` (`lactivity`) ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_chat_start_settings` ( \n        \t       `id` int(11) NOT NULL AUTO_INCREMENT, \n        \t       `name` varchar(50) NOT NULL, \n        \t       `data` longtext NOT NULL, \n        \t       `department_id` int(11) NOT NULL, \n        \t       PRIMARY KEY (`id`), \n        \t       KEY `department_id` (`department_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_chat_event_track` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL, `data` longtext NOT NULL, `department_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `department_id` (`department_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_canned_msg_use` (`id` bigint(20) unsigned NOT NULL AUTO_INCREMENT, `canned_id` int(11) unsigned NOT NULL, `chat_id` bigint(20) unsigned NOT NULL, `ctime` bigint(20) unsigned NOT NULL, `user_id` bigint(20) unsigned NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`), KEY `ctime` (`ctime`), KEY `canned_id` (`canned_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            \n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_archive_range` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `range_from` int(11) NOT NULL,\n        \t   `range_to` int(11) NOT NULL,\n        \t   `year_month` int(11) NOT NULL,\n        \t   `older_than` int(11) NOT NULL,\n        \t   `last_id` int(11) NOT NULL,\n        \t   `first_id` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_notification_subscriber` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `online_user_id` bigint(20) NOT NULL, `dep_id` int(11) NOT NULL, `theme_id` int(11) NOT NULL, `ctime` int(11) NOT NULL, `utime` int(11) NOT NULL, `status` int(11) NOT NULL, `params` text NOT NULL, `device_type` tinyint(1) NOT NULL,`subscriber_hash` varchar(50) NOT NULL, `uagent` varchar(250) NOT NULL, `ip` varchar(250) NOT NULL, `last_error` text NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`), KEY `dep_id` (`dep_id`), KEY `online_user_id` (`online_user_id`), KEY `subscriber_hash` (`subscriber_hash`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_auto_responder` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `siteaccess` varchar(3) NOT NULL,\n                  `wait_message` text NOT NULL,\n                  `wait_timeout` int(11) NOT NULL,\n                  `position` int(11) NOT NULL,\n                  `timeout_message` text NOT NULL,\n                  `bot_configuration` text NOT NULL,\n                  `name` varchar(50) NOT NULL,\n                  `operator` varchar(50) NOT NULL,\n                  `dep_id` int(11) NOT NULL,\n                  `user_id` int(11) NOT NULL,\n                  `only_proactive` int(11) NOT NULL,\n                  `repeat_number` int(11) NOT NULL DEFAULT '1',\n                  `survey_timeout` int(11) NOT NULL DEFAULT '0',\n                  `survey_id` int(11) NOT NULL DEFAULT '0',\n                  `wait_timeout_hold_1` int(11) NOT NULL,\n                  `wait_timeout_hold_2` int(11) NOT NULL,\n                  `wait_timeout_hold_3` int(11) NOT NULL,\n                  `wait_timeout_hold_4` int(11) NOT NULL,\n                  `wait_timeout_hold_5` int(11) NOT NULL,\n                  `timeout_hold_message_1` text NOT NULL,\n                  `timeout_hold_message_2` text NOT NULL,\n                  `timeout_hold_message_3` text NOT NULL,\n                  `timeout_hold_message_4` text NOT NULL,\n                  `timeout_hold_message_5` text NOT NULL,\n                  `wait_timeout_hold` text NOT NULL,\n                  `wait_timeout_2` int(11) NOT NULL,\n                  `timeout_message_2` text NOT NULL,\n                  `wait_timeout_3` int(11) NOT NULL,\n                  `timeout_message_3` text NOT NULL,\n                  `wait_timeout_4` int(11) NOT NULL,\n                  `timeout_message_4` text NOT NULL,\n                  `wait_timeout_5` int(11) NOT NULL,\n                  `timeout_message_5` text NOT NULL,\n                  `wait_timeout_reply_1` int(11) NOT NULL,\n                  `timeout_reply_message_1` text NOT NULL,\n                  `wait_timeout_reply_2` int(11) NOT NULL,\n                  `timeout_reply_message_2` text NOT NULL,\n                  `wait_timeout_reply_3` int(11) NOT NULL,\n                  `timeout_reply_message_3` text NOT NULL,\n                  `wait_timeout_reply_4` int(11) NOT NULL,\n                  `timeout_reply_message_4` text NOT NULL,\n                  `wait_timeout_reply_5` int(11) NOT NULL,\n                  `timeout_reply_message_5` text NOT NULL,\n                  `languages` text NOT NULL,\n                  `ignore_pa_chat` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `siteaccess_position` (`siteaccess`,`position`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n\n\n            $db->query(\"CREATE TABLE `lh_abstract_widget_theme` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `name_company` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `onl_bcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `bor_bcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'e3e3e3',\n  `text_color` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `online_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `online_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `offline_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `offline_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `logo_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `logo_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `header_background` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_tcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_bcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_border` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_close_bg` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_hover_bg` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_close_hover_bg` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `custom_status_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `custom_container_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `custom_widget_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_header` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `online_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `offline_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `widget_border_color` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `copyright_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `copyright_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `widget_copyright_url` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `show_copyright` int(11) NOT NULL DEFAULT 1,\n  `explain_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `intro_operator_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `operator_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `operator_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `minimize_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `minimize_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `restore_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `restore_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `close_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `close_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `popup_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `popup_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `hide_close` int(11) NOT NULL,\n  `hide_popup` int(11) NOT NULL,\n  `header_height` int(11) NOT NULL,\n  `header_padding` int(11) NOT NULL,\n  `widget_border_width` int(11) NOT NULL,\n  `support_joined` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `support_closed` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `pending_join` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `noonline_operators` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `noonline_operators_offline` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `show_need_help` int(11) NOT NULL DEFAULT 1,\n  `show_need_help_timeout` int(11) NOT NULL DEFAULT 24,\n  `show_voting` tinyint(1) NOT NULL DEFAULT 1,\n  `department_title` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `department_select` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `buble_visitor_background` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `buble_visitor_title_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `buble_visitor_text_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `buble_operator_background` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `buble_operator_title_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `buble_operator_text_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `custom_popup_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `hide_ts` int(11) NOT NULL,\n  `widget_response_width` int(11) NOT NULL,\n  `show_need_help_delay` int(11) NOT NULL,\n  `show_status_delay` int(11) NOT NULL,\n  `modern_look` tinyint(1) NOT NULL DEFAULT 0,\n  `bot_status_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `bot_configuration` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n  `notification_configuration` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n  `pending_join_queue` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `modified` int(11) NOT NULL,\n  `widget_show_leave_form` tinyint(1) NOT NULL,\n  `enable_widget_embed_override` tinyint(1) NOT NULL,\n  `widget_popheight` int(11) NOT NULL,\n  `widget_popwidth` int(11) NOT NULL,\n  `widget_survey` int(11) NOT NULL,\n  `widget_position` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `widget_pright` int(11) NOT NULL,\n  `widget_pbottom` int(11) NOT NULL,\n  `alias` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `alias` (`alias`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_faq` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `question` varchar(250) NOT NULL,\n\t\t\t\t  `answer` text NOT NULL,\n\t\t\t\t  `url` varchar(250) NOT NULL,\n\t\t\t\t  `email` varchar(50) NOT NULL,\n\t\t\t\t  `identifier` varchar(10) NOT NULL,\n\t\t\t\t  `active` int(11) NOT NULL,\n\t\t\t\t  `has_url` tinyint(1) NOT NULL,\n\t\t\t\t  `is_wildcard` tinyint(1) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `active` (`active`),\n\t\t\t\t  KEY `active_url_2` (`active`,`url`(191)),\n\t\t\t\t  KEY `has_url` (`has_url`),\n\t\t\t\t  KEY `identifier` (`identifier`),\n\t\t\t\t  KEY `is_wildcard` (`is_wildcard`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n            $db->query(\"CREATE TABLE `lh_group_chat` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `name` varchar(50) NOT NULL,\n  `status` int(11) NOT NULL,\n  `time` int(11) NOT NULL,\n  `user_id` int(11) NOT NULL,\n  `last_msg_op_id` bigint(20) NOT NULL,\n  `last_msg` varchar(200) NOT NULL,\n  `chat_id` bigint(20) NOT NULL DEFAULT 0,\n  `last_user_msg_time` int(11) NOT NULL,\n  `last_msg_id` bigint(20) NOT NULL,\n  `type` tinyint(1) NOT NULL DEFAULT 0,\n  `tm` int(11) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `user_id` (`user_id`),\n  KEY `chat_id` (`chat_id`),\n  KEY `type` (`type`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_group_msg` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `msg` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n  `time` int(11) NOT NULL,\n  `chat_id` int(11) NOT NULL DEFAULT 0,\n  `user_id` int(11) NOT NULL DEFAULT 0,\n  `name_support` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `meta_msg` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `chat_id_id` (`chat_id`,`id`),\n  KEY `user_id` (`user_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_group_chat_member` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `user_id` bigint(20) NOT NULL,\n  `group_id` bigint(20) NOT NULL,\n  `last_activity` int(11) NOT NULL,\n  `last_msg_id` bigint(20) NOT NULL DEFAULT 0,\n  `type` tinyint(1) NOT NULL DEFAULT 0,\n  `jtime` int(11) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `group_id` (`group_id`),\n  KEY `user_id` (`user_id`),\n  KEY `type` (`type`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_cobrowse` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `chat_id` int(11) NOT NULL,\n        \t   `online_user_id` int(11) NOT NULL,\n        \t   `mtime` int(11) NOT NULL,\n        \t   `url` varchar(250) NOT NULL,\n        \t   `initialize` longtext NOT NULL,\n        \t   `modifications` longtext NOT NULL,\n        \t   `finished` tinyint(1) NOT NULL,\n        \t   `w` int NOT NULL,\n\t\t\t   `wh` int NOT NULL,\n\t\t\t   `x` int NOT NULL,\n\t\t\t   `y` int NOT NULL,        \t   \t\t\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `chat_id` (`chat_id`),\n        \t   KEY `online_user_id` (`online_user_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_survey` (\n        \t      `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `name` varchar(250) NOT NULL,\n                  `feedback_text` text NOT NULL,\n                  `max_stars_1_title` varchar(250) NOT NULL,\n                  `max_stars_1_pos` int(11) NOT NULL,\n                  `max_stars_2_title` varchar(250) NOT NULL,\n                  `max_stars_2_pos` int(11) NOT NULL,\n                  `max_stars_2` int(11) NOT NULL,\n                  `max_stars_3_title` varchar(250) NOT NULL,\n                  `max_stars_3_pos` int(11) NOT NULL,\n                  `max_stars_3` int(11) NOT NULL,\n                  `max_stars_4_title` varchar(250) NOT NULL,\n                  `max_stars_4_pos` int(11) NOT NULL,\n                  `max_stars_4` int(11) NOT NULL,\n                  `max_stars_5_title` varchar(250) NOT NULL,\n                  `max_stars_5_pos` int(11) NOT NULL,\n                  `max_stars_5` int(11) NOT NULL,\n                  `question_options_1` varchar(250) NOT NULL,\n                  `question_options_1_items` text NOT NULL,\n                  `question_options_1_pos` int(11) NOT NULL,\n                  `question_options_2` varchar(250) NOT NULL,\n                  `question_options_2_items` text NOT NULL,\n                  `question_options_2_pos` int(11) NOT NULL,\n                  `question_options_3` varchar(250) NOT NULL,\n                  `question_options_3_items` text NOT NULL,\n                  `question_options_3_pos` int(11) NOT NULL,\n                  `question_options_4` varchar(250) NOT NULL,\n                  `question_options_4_items` text NOT NULL,\n                  `question_options_4_pos` int(11) NOT NULL,\n                  `question_options_5` varchar(250) NOT NULL,\n                  `question_options_5_items` text NOT NULL,\n                  `question_options_5_pos` int(11) NOT NULL,\n                  `question_plain_1` text NOT NULL,\n                  `question_plain_1_pos` int(11) NOT NULL,\n                  `question_plain_2` text NOT NULL,\n                  `question_plain_2_pos` int(11) NOT NULL,\n                  `question_plain_3` text NOT NULL,\n                  `question_plain_3_pos` int(11) NOT NULL,\n                  `question_plain_4` text NOT NULL,\n                  `question_plain_4_pos` int(11) NOT NULL,\n                  `question_plain_5` text NOT NULL,\n                  `question_plain_5_pos` int(11) NOT NULL,\n                  `max_stars_1_enabled` int(11) NOT NULL,\n                  `max_stars_2_enabled` int(11) NOT NULL,\n                  `max_stars_3_enabled` int(11) NOT NULL,\n                  `max_stars_4_enabled` int(11) NOT NULL,\n                  `max_stars_5_enabled` int(11) NOT NULL,\n                  `question_options_1_enabled` int(11) NOT NULL,\n                  `question_options_2_enabled` int(11) NOT NULL,\n                  `question_options_3_enabled` int(11) NOT NULL,\n                  `question_options_4_enabled` int(11) NOT NULL,\n                  `question_options_5_enabled` int(11) NOT NULL,\n                  `question_plain_1_enabled` int(11) NOT NULL,\n                  `question_plain_2_enabled` int(11) NOT NULL,\n                  `question_plain_3_enabled` int(11) NOT NULL,\n                  `question_plain_4_enabled` int(11) NOT NULL,\n                  `question_plain_5_enabled` int(11) NOT NULL,\n                  `max_stars_1` int(11) NOT NULL,\n                  `max_stars_1_req` int(11) NOT NULL,\n                  `max_stars_2_req` int(11) NOT NULL,\n                  `max_stars_3_req` int(11) NOT NULL,\n                  `max_stars_4_req` int(11) NOT NULL,\n                  `max_stars_5_req` int(11) NOT NULL,\n                  `question_options_1_req` int(11) NOT NULL,\n                  `question_options_2_req` int(11) NOT NULL,\n                  `question_options_3_req` int(11) NOT NULL,\n                  `question_options_4_req` int(11) NOT NULL,\n                  `question_options_5_req` int(11) NOT NULL,\n                  `question_plain_1_req` int(11) NOT NULL,\n                  `question_plain_2_req` int(11) NOT NULL,\n                  `question_plain_3_req` int(11) NOT NULL,\n                  `question_plain_4_req` int(11) NOT NULL,\n                  `question_plain_5_req` int(11) NOT NULL,\n                  `configuration` longtext NOT NULL,\n                  PRIMARY KEY (`id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n            $db->query(\"CREATE TABLE `lh_admin_theme` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `name` varchar(100) NOT NULL,\n        \t       `static_content` longtext NOT NULL,\n        \t       `static_js_content` longtext NOT NULL,\n        \t       `static_css_content` longtext NOT NULL,\n        \t       `css_attributes` longtext NOT NULL,\n        \t       `header_content` text NOT NULL,\n        \t       `user_id` int(11) NOT NULL, \n        \t       `header_css` text NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `user_id` (`user_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n            $db->query(\"CREATE TABLE `lh_chat_paid` ( \n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,  \n        \t       `hash` varchar(250) NOT NULL,  \n        \t       `chat_id` int(11) NOT NULL, \n        \t        PRIMARY KEY (`id`),  \n        \t       KEY `hash` (`hash`(191)),  \n        \t       KEY `chat_id` (`chat_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_survey_item` (\n        \t      `id` bigint(20) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `survey_id` int(11) NOT NULL,\n\t\t\t\t  `status` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `chat_id` int(11) NOT NULL,\n\t\t\t\t  `user_id` int(11) NOT NULL,\n\t\t\t\t  `ftime` int(11) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `max_stars_1` int(11) NOT NULL,\n\t\t\t\t  `max_stars_2` int(11) NOT NULL,\n\t\t\t\t  `max_stars_3` int(11) NOT NULL,\n\t\t\t\t  `max_stars_4` int(11) NOT NULL,\n\t\t\t\t  `max_stars_5` int(11) NOT NULL,\n\t\t\t\t  `question_options_1` int(11) NOT NULL,\n\t\t\t\t  `question_options_2` int(11) NOT NULL,\n\t\t\t\t  `question_options_3` int(11) NOT NULL,\n\t\t\t\t  `question_options_4` int(11) NOT NULL,\n\t\t\t\t  `question_options_5` int(11) NOT NULL,\n\t\t\t\t  `question_plain_1` text NOT NULL,\n\t\t\t\t  `question_plain_2` text NOT NULL,\n\t\t\t\t  `question_plain_3` text NOT NULL,\n\t\t\t\t  `question_plain_4` text NOT NULL,\n\t\t\t\t  `question_plain_5` text NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `survey_id` (`survey_id`),\n\t\t\t\t  KEY `chat_id` (`chat_id`),\n\t\t\t\t  KEY `user_id` (`user_id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `ftime` (`ftime`),\n\t\t\t\t  KEY `max_stars_1` (`max_stars_1`),\n\t\t\t\t  KEY `max_stars_2` (`max_stars_2`),\n\t\t\t\t  KEY `max_stars_3` (`max_stars_3`),\n\t\t\t\t  KEY `max_stars_4` (`max_stars_4`),\n\t\t\t\t  KEY `max_stars_5` (`max_stars_5`),\n\t\t\t\t  KEY `question_options_1` (`question_options_1`),\n\t\t\t\t  KEY `question_options_2` (`question_options_2`),\n\t\t\t\t  KEY `question_options_3` (`question_options_3`),\n\t\t\t\t  KEY `question_options_4` (`question_options_4`),\n\t\t\t\t  KEY `question_options_5` (`question_options_5`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_speech_language` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `name` varchar(100) NOT NULL,\n                  `siteaccess` varchar(3) NOT NULL DEFAULT '',\n                  PRIMARY KEY (`id`)\n               ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_speech_language_dialect` (\n                `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `language_id` int(11) NOT NULL,\n                  `lang_name` varchar(100) NOT NULL,\n                  `lang_code` varchar(100) NOT NULL,\n                  `short_code` varchar(4) NOT NULL DEFAULT '',\n                  PRIMARY KEY (`id`),\n                  KEY `language_id` (`language_id`),\n                  KEY `short_code` (`short_code`),\n                  KEY `lang_code` (`lang_code`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"INSERT INTO `lh_speech_language` (`id`, `name`, `siteaccess`) VALUES\n\t\t\t\t(1,\t'Afrikaans',''),\n\t\t\t\t(2,\t'Bahasa Indonesia',''),\n\t\t\t\t(3,\t'Bahasa Melayu',''),\n\t\t\t\t(4,\t'Catal\u00e0',''),\n\t\t\t\t(5,\t'\u010ce\u0161tina',''),\n\t\t\t\t(6,\t'Deutsch','ger'),\n\t\t\t\t(7,\t'English',''),\n\t\t\t\t(8,\t'Espa\u00f1ol','esp'),\n\t\t\t\t(9,\t'Euskara',''),\n\t\t\t\t(10,\t'Fran\u00e7ais','fre'),\n\t\t\t\t(11,\t'Galego',''),\n\t\t\t\t(12,\t'Hrvatski',''),\n\t\t\t\t(13,\t'IsiZulu',''),\n\t\t\t\t(14,\t'\u00cdslenska',''),\n\t\t\t\t(15,\t'Italiano','ita'),\n\t\t\t\t(16,\t'Magyar',''),\n\t\t\t\t(17,\t'Nederlands','nld'),\n\t\t\t\t(18,\t'Norsk bokm\u00e5l',''),\n\t\t\t\t(19,\t'Polski','pol'),\n\t\t\t\t(20,\t'Portugu\u00eas','por'),\n\t\t\t\t(21,\t'Rom\u00e2n\u0103',''),\n\t\t\t\t(22,\t'Sloven\u010dina',''),\n\t\t\t\t(23,\t'Suomi','fin'),\n\t\t\t\t(24,\t'Svenska',''),\n\t\t\t\t(25,\t'T\u00fcrk\u00e7e','tur'),\n\t\t\t\t(26,\t'\u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438',''),\n\t\t\t\t(27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439','rus'),\n\t\t\t\t(28,\t'\u0421\u0440\u043f\u0441\u043a\u0438',''),\n\t\t\t\t(29,\t'\ud55c\uad6d\uc5b4',''),\n\t\t\t\t(30,\t'\u4e2d\u6587',''),\n\t\t\t\t(31,\t'\u65e5\u672c\u8a9e',''),\n\t\t\t\t(32,\t'Lingua lat\u012bna',''),\n\t\t\t\t(33,\t'Lithuanian','lit'),\n\t\t\t\t(34,\t'Latvia',''),\n\t\t\t\t(35,\t'Afar',''),\n\t\t\t\t(36,\t'Arabic',''),\n\t\t\t\t(37,\t'Assamese',''),\n\t\t\t\t(38,\t'Azerbaijani',''),\n\t\t\t\t(39,\t'Bulgarian','bgr'),\n\t\t\t\t(40,\t'Bangla',''),\n\t\t\t\t(41,\t'Bosnian',''),\n\t\t\t\t(42,\t'Cakchiquel',''),\n\t\t\t\t(43,\t'Danish',''),\n\t\t\t\t(44,\t'Greek',''),\n\t\t\t\t(45,\t'Estonian',''),\n\t\t\t\t(46,\t'Persian',''),\n\t\t\t\t(47,\t'Filipino',''),\n\t\t\t\t(48,\t'Gujarati',''),\n\t\t\t\t(49,\t'Hebrew',''),\n\t\t\t\t(50,\t'Croatian',''),\n\t\t\t\t(51,\t'Indonesia',''),\n\t\t\t\t(52,\t'Icelandic',''),\n\t\t\t\t(53,\t'Georgian',''),\n\t\t\t\t(54,\t'Maori (New Zealand)',''),\n\t\t\t\t(55,\t'Macedonian',''),\n\t\t\t\t(56,\t'Malay (Latin)',''),\n\t\t\t\t(57,\t'Maltese',''),\n\t\t\t\t(58,\t'Norwegian Nynorsk',''),\n\t\t\t\t(59,\t'Norwegian','nor'),\n\t\t\t\t(60,\t'Northern Sotho (South Africa)',''),\n\t\t\t\t(61,\t'Slovenian',''),\n\t\t\t\t(63,\t'Thai',''),\n\t\t\t\t(64,\t'Tagalog',''),\n\t\t\t\t(65,\t'Tongan',''),\n\t\t\t\t(66,\t'Ukrainian',''),\n\t\t\t\t(67,\t'Vietnamese','vnm'),\n\t\t\t\t(68,\t'Chinese','chn');\");\n\n            $db->query(\"INSERT INTO `lh_speech_language_dialect` (`id`, `language_id`, `lang_name`, `lang_code`, `short_code`) VALUES\n(1,\t1,\t'Afrikaans',\t'af-ZA',\t'af'),\n(2,\t2,\t'Bahasa Indonesia',\t'id-ID',\t'id'),\n(3,\t3,\t'Bahasa Melayu',\t'ms-MY',\t''),\n(4,\t4,\t'Catal\u00e0',\t'ca-ES',\t''),\n(5,\t5,\t'\u010ce\u0161tina',\t'cs-CZ',\t'cs'),\n(6,\t6,\t'Deutsch',\t'de-DE',\t'de'),\n(7,\t7,\t'Australia',\t'en-AU',\t''),\n(8,\t7,\t'Canada',\t'en-CA',\t''),\n(9,\t7,\t'India',\t'en-IN',\t''),\n(10,\t7,\t'New Zealand',\t'en-NZ',\t''),\n(11,\t7,\t'South Africa',\t'en-ZA',\t''),\n(12,\t7,\t'United Kingdom',\t'en-GB',\t'en'),\n(13,\t7,\t'United States',\t'en-US',\t''),\n(14,\t8,\t'Argentina',\t'es-AR',\t''),\n(15,\t8,\t'Bolivia',\t'es-BO',\t''),\n(16,\t8,\t'Chile',\t'es-CL',\t''),\n(17,\t8,\t'Colombia',\t'es-CO',\t''),\n(18,\t8,\t'Costa Rica',\t'es-CR',\t''),\n(19,\t8,\t'Ecuador',\t'es-EC',\t''),\n(20,\t8,\t'El Salvador',\t'es-SV',\t''),\n(21,\t8,\t'Espa\u00f1a',\t'es-ES',\t'es'),\n(22,\t8,\t'Estados Unidos',\t'es-US',\t''),\n(23,\t8,\t'Guatemala',\t'es-GT',\t''),\n(24,\t8,\t'Honduras',\t'es-HN',\t''),\n(25,\t8,\t'M\u00e9xico',\t'es-MX',\t''),\n(26,\t8,\t'Nicaragua',\t'es-NI',\t''),\n(27,\t8,\t'Panam\u00e1',\t'es-PA',\t''),\n(28,\t8,\t'Paraguay',\t'es-PY',\t''),\n(29,\t8,\t'Per\u00fa',\t'es-PE',\t''),\n(30,\t8,\t'Puerto Rico',\t'es-PR',\t''),\n(31,\t8,\t'Rep\u00fablica Dominicana',\t'es-DO',\t''),\n(32,\t8,\t'Uruguay',\t'es-UY',\t''),\n(33,\t8,\t'Venezuela',\t'es-VE',\t''),\n(34,\t9,\t'Euskara',\t'eu-ES',\t''),\n(35,\t10,\t'Fran\u00e7ais',\t'fr-FR',\t'fr'),\n(36,\t11,\t'Galego',\t'gl-ES',\t''),\n(37,\t12,\t'Hrvatski',\t'hr_HR',\t''),\n(38,\t13,\t'IsiZulu',\t'zu-ZA',\t''),\n(39,\t14,\t'\u00cdslenska',\t'is-IS',\t''),\n(40,\t15,\t'Italia',\t'it-IT',\t'it'),\n(41,\t15,\t'Svizzera',\t'it-CH',\t'it'),\n(42,\t16,\t'Magyar',\t'hu-HU',\t'hu'),\n(43,\t17,\t'Nederlands',\t'nl-NL',\t'nl'),\n(44,\t18,\t'Norsk bokm\u00e5l',\t'nb-NO',\t'nb'),\n(45,\t19,\t'Polski',\t'pl-PL',\t'pl'),\n(46,\t20,\t'Brasil',\t'pt-BR',\t''),\n(47,\t20,\t'Portugal',\t'pt-PT',\t'pt'),\n(48,\t21,\t'Rom\u00e2n\u0103',\t'ro-RO',\t'ro'),\n(49,\t22,\t'Sloven\u010dina',\t'sk-SK',\t'sk'),\n(50,\t23,\t'Suomi',\t'fi-FI',\t'fi'),\n(51,\t24,\t'Swedish',\t'sv-SE',\t'sv'),\n(52,\t25,\t'T\u00fcrk\u00e7e',\t'tr-TR',\t'tr'),\n(53,\t26,\t'\u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438',\t'bg-BG',\t''),\n(54,\t27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439',\t'ru-RU',\t'ru'),\n(55,\t28,\t'Serbian',\t'sr-RS',\t'sr'),\n(56,\t29,\t'\ud55c\uad6d\uc5b4',\t'ko-KR',\t'ko'),\n(57,\t30,\t'\u666e\u901a\u8bdd (\u4e2d\u56fd\u5927\u9646)',\t'cmn-Hans-CN',\t''),\n(58,\t30,\t'\u666e\u901a\u8bdd (\u9999\u6e2f)',\t'cmn-Hans-HK',\t''),\n(59,\t30,\t'\u4e2d\u6587 (\u53f0\u7063)',\t'cmn-Hant-TW',\t''),\n(60,\t30,\t'\u7cb5\u8a9e (\u9999\u6e2f)',\t'yue-Hant-HK',\t''),\n(61,\t31,\t'\u65e5\u672c\u8a9e',\t'ja-JP',\t'ja'),\n(62,\t32,\t'Lingua lat\u012bna',\t'la',\t''),\n(64,\t33,\t'Lithuanian',\t'lt-LT',\t'lt'),\n(65,\t34,\t'Latvia',\t'lv-LV',\t'lv'),\n(66,\t35,\t'Afar',\t'aa-DJ',\t'aa'),\n(67,\t36,\t'Egypt',\t'ar-EG',\t'ar'),\n(68,\t37,\t'India',\t'as-IN',\t'as'),\n(69,\t38,\t'Azerbaijani',\t'az-AZ',\t'az'),\n(70,\t39,\t'Bulgarian',\t'bg',\t'bg'),\n(71,\t40,\t'Bangla',\t'bn',\t'bn'),\n(72,\t41,\t'Bosnian',\t'bs-BA',\t'bs'),\n(73,\t42,\t'Cakchiquel',\t'cak',\t'cak'),\n(74,\t43,\t'Danish',\t'da-dk',\t'da'),\n(75,\t44,\t'Greek',\t'el-GR',\t'el'),\n(76,\t45,\t'Estonian',\t'et-EE',\t'et'),\n(77,\t46,\t'Persian',\t'fa-IR',\t'fa'),\n(78,\t47,\t'Filipino',\t'fil',\t'fil'),\n(79,\t48,\t'Gujarati',\t'gu-IN',\t'gu'),\n(80,\t49,\t'Hebrew',\t'he',\t'he'),\n(81,\t50,\t'Croatian',\t'hr-HR',\t'hr'),\n(82,\t51,\t'Indonesia',\t'in',\t'in'),\n(83,\t52,\t'Icelandic',\t'is',\t'is'),\n(84,\t53,\t'Georgian',\t'ka-ge',\t'ka'),\n(85,\t54,\t'Maori (New Zealand)',\t'mi-nz',\t'mi'),\n(86,\t55,\t'Macedonian',\t'mk-MK',\t'mk'),\n(87,\t56,\t'Malay (Latin)',\t'ms',\t'ms'),\n(88,\t57,\t'Maltese',\t'mt',\t'mt'),\n(89,\t58,\t'Norwegian Nynorsk',\t'nn-NO',\t'nn'),\n(90,\t59,\t'Norwegian',\t'no',\t'no'),\n(91,\t60,\t'Northern Sotho (South Africa)',\t'nso-za',\t'nso'),\n(92,\t61,\t'Slovenian',\t'sl-SI',\t'sl'),\n(94,\t63,\t'Thai',\t'th-TH',\t'th'),\n(95,\t64,\t'Tagalog',\t'tl',\t'tl'),\n(96,\t65,\t'Tongan',\t'to-TO',\t'to'),\n(97,\t66,\t'Ukrainian',\t'uk-UA',\t'uk'),\n(98,\t67,\t'Vietnamese',\t'vi-VN',\t'vi'),\n(99,\t68,\t'Chinese',\t'zh-CN',\t'zh'),\n(100,\t36,\t'Egypt',\t'ar-AE',\t''),\n(101,\t36,\t'Egypt',\t'ar-IQ',\t''),\n(102,\t41,\t'Bosnian',\t'bs-Latn-BA',\t''),\n(103,\t6,\t'Deutsch',\t'de-at',\t''),\n(104,\t6,\t'Deutsch',\t'de-ch',\t''),\n(105,\t6,\t'Deutsch',\t'de-GB',\t''),\n(106,\t6,\t'Deutsch',\t'de-LI',\t''),\n(107,\t6,\t'Deutsch',\t'de-LU',\t''),\n(108,\t7,\t'United Kingdom',\t'en-029',\t''),\n(109,\t7,\t'United Kingdom',\t'en-AS',\t''),\n(110,\t7,\t'United Kingdom',\t'en-BE',\t''),\n(111,\t7,\t'United Kingdom',\t'en-BM',\t''),\n(112,\t7,\t'United Kingdom',\t'en-BS',\t''),\n(113,\t7,\t'United Kingdom',\t'en-BW',\t''),\n(114,\t7,\t'United Kingdom',\t'en-CH',\t''),\n(115,\t7,\t'United Kingdom',\t'en-CX',\t''),\n(116,\t7,\t'United Kingdom',\t'en-CY',\t''),\n(117,\t7,\t'United Kingdom',\t'en-DE',\t''),\n(118,\t7,\t'United Kingdom',\t'en-DK',\t''),\n(119,\t7,\t'United Kingdom',\t'en-DM',\t''),\n(120,\t7,\t'United Kingdom',\t'en-GY',\t''),\n(121,\t7,\t'United Kingdom',\t'en-HK',\t''),\n(122,\t7,\t'United Kingdom',\t'en-ie',\t''),\n(123,\t7,\t'United Kingdom',\t'en-IM',\t''),\n(124,\t7,\t'United Kingdom',\t'en-JM',\t''),\n(125,\t7,\t'United Kingdom',\t'en-KY',\t''),\n(126,\t7,\t'United Kingdom',\t'en-MY',\t''),\n(127,\t7,\t'United Kingdom',\t'en-NF',\t''),\n(128,\t7,\t'United Kingdom',\t'en-NG',\t''),\n(129,\t7,\t'United Kingdom',\t'en-NL',\t''),\n(130,\t7,\t'United Kingdom',\t'en-PH',\t''),\n(131,\t7,\t'United Kingdom',\t'en-SE',\t''),\n(132,\t7,\t'United Kingdom',\t'en-sg',\t''),\n(133,\t7,\t'United Kingdom',\t'en-SI',\t''),\n(134,\t7,\t'United Kingdom',\t'en-SS',\t''),\n(135,\t7,\t'United Kingdom',\t'en-TO',\t''),\n(136,\t7,\t'United Kingdom',\t'en-TZ',\t''),\n(137,\t7,\t'United Kingdom',\t'en-UG',\t''),\n(138,\t7,\t'United Kingdom',\t'en-UK',\t''),\n(139,\t7,\t'United Kingdom',\t'en-ZG',\t''),\n(140,\t7,\t'United Kingdom',\t'en-ZM',\t''),\n(141,\t7,\t'United Kingdom',\t'en-ZW',\t''),\n(142,\t8,\t'Espa\u00f1a',\t'es-419',\t''),\n(143,\t8,\t'Espa\u00f1a',\t'es-xl',\t''),\n(144,\t47,\t'Filipino',\t'fil-PH',\t''),\n(145,\t10,\t'Fran\u00e7ais',\t'fr-BE',\t''),\n(146,\t10,\t'Fran\u00e7ais',\t'fr-ca',\t''),\n(147,\t10,\t'Fran\u00e7ais',\t'fr-ch',\t''),\n(148,\t10,\t'Fran\u00e7ais',\t'fr-CM',\t''),\n(149,\t10,\t'Fran\u00e7ais',\t'fr-MC',\t''),\n(150,\t49,\t'Hebrew',\t'he-IL',\t''),\n(151,\t50,\t'Croatian',\t'hr-BA',\t''),\n(152,\t17,\t'Nederlands',\t'nl-BE',\t''),\n(153,\t19,\t'Polski',\t'pl-GB',\t''),\n(154,\t27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439',\t'ru-KZ',\t''),\n(155,\t27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439',\t'ru-UA',\t''),\n(156,\t28,\t'Serbian',\t'sr-BA',\t''),\n(157,\t28,\t'Serbian',\t'sr-Latn-RS',\t''),\n(158,\t68,\t'Chinese',\t'zh-MO',\t''),\n(159,\t68,\t'Chinese',\t'zh-SG',\t''),\n(160,\t68,\t'Chinese',\t'zh-TW',\t'');\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_speech_chat_language` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `chat_id` int(11) NOT NULL,\n                  `language_id` int(11) NOT NULL,\n                  `dialect` varchar(50) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `chat_id` (`chat_id`)\n               ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_file` (\n        \t   `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n        \t   `name` varchar(255) NOT NULL,\n        \t   `upload_name` varchar(255) NOT NULL,\n        \t   `size` int(11) NOT NULL,\n        \t   `type` varchar(255) NOT NULL,\n        \t   `file_path` varchar(255) NOT NULL,\n        \t   `extension` varchar(255) NOT NULL,\n        \t   `chat_id` bigint(20) NOT NULL,\n        \t   `persistent` int(11) NOT NULL,\n        \t   `online_user_id` int(11) NOT NULL,\n        \t   `user_id` int(11) NOT NULL,\n        \t   `date` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `chat_id` (`chat_id`),\n        \t   KEY `online_user_id` (`online_user_id`),\n        \t   KEY `user_id` (`user_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_email_template` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `name` varchar(250) NOT NULL,\n\t\t\t\t  `from_name` varchar(150) NOT NULL,\n\t\t\t\t  `from_name_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `from_email` varchar(150) NOT NULL,\n\t\t\t\t  `from_email_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `user_mail_as_sender` tinyint(4) NOT NULL,\n\t\t\t\t  `content` text NOT NULL,\n\t\t\t\t  `use_chat_locale` tinyint(1) NOT NULL DEFAULT '0',\n                  `translations` longtext NOT NULL,\n\t\t\t\t  `subject` varchar(250) NOT NULL,\n\t\t\t\t  `bcc_recipients` varchar(200) NOT NULL,\n\t\t\t\t  `subject_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `reply_to` varchar(150) NOT NULL,\n\t\t\t\t  `reply_to_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `recipient` varchar(150) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"INSERT INTO `lh_abstract_email_template` (`id`, `translations`, `name`, `from_name`, `from_name_ac`, `from_email`, `from_email_ac`, `content`, `subject`, `subject_ac`, `reply_to`, `reply_to_ac`, `recipient`, `bcc_recipients`, `user_mail_as_sender`) VALUES\n            \t   (1,'',\t'Send mail to user',\t'Live Helper Chat',\t0,\t'',\t0,\t'Dear {user_chat_nick},\\r\\n\\r\\n{additional_message}\\r\\n\\r\\nLive Support response:\\r\\n{messages_content}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team\\r\\n',\t'{name_surname} has responded to your request',\t1,\t'',\t1,\t'',\t'',\t0),\n            \t   (2,'',\t'Support request from user',\t'',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nAdditional data, if any:\\r\\n{additional_data}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nLink to chat if any:\\r\\n{prefillchat}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'{name}, {country}, {department}, Support request from user',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (3,'',\t'User mail for himself',\t'Live Helper Chat',\t0,\t'',\t0,\t'Dear {user_chat_nick},\\r\\n\\r\\nTranscript:\\r\\n{messages_content}\\r\\nChat ID: {chat_id}\\n\\r\\nSincerely,\\r\\nLive Support Team\\r\\n',\t'Chat transcript',\t0,\t'',\t0,\t'',\t'',\t0),\n            \t   (4,'',\t'New chat request',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nClick to accept chat automatically\\r\\n{url_accept}\\r\\n\\r\\nSurvey\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'New chat request',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (5,'',\t'Chat was closed',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\n{operator} has closed a chat\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nAdditional data, if any:\\r\\n{additional_data}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nSurvey:\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Chat was closed',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (6,'',\t'New FAQ question',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nNew FAQ question\\r\\nEmail: {email}\\r\\n\\r\\nQuestion:\\r\\n{question}\\r\\n\\r\\nQuestion URL:\\r\\n{url_question}\\r\\n\\r\\nURL to answer a question:\\r\\n{url_request}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'New FAQ question',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (7,'',\t'New unread message',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nClick to accept chat automatically\\r\\n{url_accept}\\r\\n\\r\\nSurvey:\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'New unread message',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (8,'',\t'Filled form',\t'MCFC',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser has filled a form\\r\\nForm name - {form_name}\\r\\nUser IP - {ip}\\r\\nDownload filled data - {url_download}\\r\\nView filled data - {url_view}\\r\\n\\r\\n{content}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Filled form - {form_name}',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (9,'',\t'Chat was accepted',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nOperator {user_name} has accepted a chat [{chat_id}]\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nClick to accept chat automatically\\r\\n{url_accept}\\r\\n\\r\\nSurvey:\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Chat was accepted [{chat_id}]',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (10,'',\t'Permission request',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nOperator {user} has requested these permissions\\n\\r\\n{permissions}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Permission request from {user}',\t0,\t'',\t0,\t'',\t'',\t0),\n            \t   (11,'',\t'You have unread messages',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nOperator {operator} has answered to you\\r\\n\\r\\n{messages}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Operator has answered to your request',\t0,\t'',\t0,\t'',\t'',\t0),\n            \t   (12,'',\t'Visitor returned',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nVisitor information\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nSee more information at\\r\\n{url_accept}\\r\\n\\r\\nLast chat:\\r\\n{message}\\r\\n\\r\\nAdditional data, if any:\\r\\n{additional_data}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Visitor returned - {username}',\t0,\t'',\t0,\t'',\t'',\t0);\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `question` varchar(250) NOT NULL,\n        \t   `location` varchar(250) NOT NULL,\n        \t   `active` int(11) NOT NULL,\n        \t   `priority` int(11) NOT NULL,\n        \t   `is_voting` int(11) NOT NULL,\n        \t   `question_intro` text NOT NULL,\n        \t   `revote` int(11) NOT NULL DEFAULT '0',\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `priority` (`priority`),\n        \t   KEY `active_priority` (`active`,`priority`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question_answer` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `ip` bigint(20) NOT NULL,\n        \t   `question_id` int(11) NOT NULL,\n        \t   `answer` text NOT NULL,\n        \t   `ctime` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `ip` (`ip`),\n        \t   KEY `question_id` (`question_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question_option` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `question_id` int(11) NOT NULL,\n        \t   `option_name` varchar(250) NOT NULL,\n        \t   `priority` tinyint(4) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `question_id` (`question_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question_option_answer` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `question_id` int(11) NOT NULL,\n        \t   `option_id` int(11) NOT NULL,\n        \t   `ctime` int(11) NOT NULL,\n        \t   `ip` bigint(20) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `question_id` (`question_id`),\n        \t   KEY `ip` (`ip`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_product` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT, \n        \t       `name` varchar(250) NOT NULL, \n        \t       `disabled` int(11) NOT NULL, \n        \t       `priority` int(11) NOT NULL, \n        \t       `departament_id` int(11) NOT NULL, \n        \t       KEY `departament_id` (`departament_id`), \n        \t       PRIMARY KEY (`id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_browse_offer_invitation` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `siteaccess` varchar(10) NOT NULL,\n\t\t\t\t  `time_on_site` int(11) NOT NULL,\n\t\t\t\t  `content` longtext NOT NULL,\n\t\t\t\t  `callback_content` longtext NOT NULL,\n\t\t\t\t  `lhc_iframe_content` tinyint(4) NOT NULL,\n\t\t\t\t  `custom_iframe_url` varchar(250) NOT NULL,\n\t\t\t\t  `name` varchar(250) NOT NULL,\n\t\t\t\t  `identifier` varchar(50) NOT NULL,\n\t\t\t\t  `executed_times` int(11) NOT NULL,\n\t\t\t\t  `url` varchar(250) NOT NULL,\n\t\t\t\t  `active` int(11) NOT NULL,\n\t\t\t\t  `has_url` int(11) NOT NULL,\n\t\t\t\t  `is_wildcard` int(11) NOT NULL,\n\t\t\t\t  `referrer` varchar(250) NOT NULL,\n\t\t\t\t  `priority` varchar(250) NOT NULL,\n\t\t\t\t  `hash` varchar(40) NOT NULL,\n\t\t\t\t  `width` int(11) NOT NULL,\n\t\t\t\t  `height` int(11) NOT NULL,\n\t\t\t\t  `unit` varchar(10) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `active` (`active`),\n\t\t\t\t  KEY `identifier` (`identifier`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_form` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `name` varchar(100) NOT NULL,        \t   \n        \t   `content` longtext NOT NULL,\n        \t   `recipient` varchar(250) NOT NULL,\n        \t   `active` int(11) NOT NULL,\n        \t   `name_attr` varchar(250) NOT NULL,\n        \t   `intro_attr` varchar(250) NOT NULL,\n        \t   `xls_columns` text NOT NULL,\n        \t   `pagelayout` varchar(200) NOT NULL,\n        \t   `post_content` text NOT NULL,\n        \t   PRIMARY KEY (`id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_form_collected` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `form_id` int(11) NOT NULL,\n\t\t\t\t  `ctime` int(11) NOT NULL,\n\t\t\t\t  `ip` varchar(250) NOT NULL,\n        \t   \t  `identifier` varchar(250) NOT NULL,\n        \t   \t  `chat_id` bigint(20) NOT NULL,\n\t\t\t\t  `content` longtext NOT NULL,\n\t\t\t\t  `custom_fields` longtext NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `form_id` (`form_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chatbox` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `identifier` varchar(50) NOT NULL,\n\t\t\t\t  `name` varchar(100) NOT NULL,\n\t\t\t\t  `chat_id` int(11) NOT NULL,\n\t\t\t\t  `active` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `identifier` (`identifier`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_chat_action` (\n                `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `chat_id` bigint(20) NOT NULL,\n                  `action` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `body` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `created_at` bigint(20) unsigned NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `chat_id` (`chat_id`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_canned_msg` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `msg` longtext NOT NULL,\n                  `fallback_msg` text NOT NULL,\n                  `title` varchar(250) NOT NULL,\n                  `explain` varchar(250) NOT NULL,\n                  `languages` text NOT NULL,\n                  `additional_data` text NOT NULL,\n        \t   \t  `position` int(11) NOT NULL,\n                  `disabled` tinyint(1) unsigned NOT NULL NULL DEFAULT 0,\n        \t   \t  `department_id` int(11) NOT NULL,\n        \t   \t  `user_id` int(11) NOT NULL,\n  \t\t\t\t  `delay` int(11) NOT NULL,\n        \t   \t  `auto_send` tinyint(1) NOT NULL,\n        \t   \t  `html_snippet` longtext NOT NULL,\n        \t   \t  `attr_int_1` int(11) NOT NULL,\n        \t   \t  `attr_int_2` int(11) NOT NULL,\n        \t   \t  `attr_int_3` int(11) NOT NULL,\n                  `unique_id` varchar(20) NOT NULL,\n                  `updated_at` int(11) unsigned NOT NULL DEFAULT 0,\n                  `created_at` int(11) unsigned NOT NULL DEFAULT 0,\n                  `active_from` int(11) unsigned NOT NULL DEFAULT 0,\n                  `active_to` int(11) unsigned NOT NULL DEFAULT 0,\n                  `repetitiveness` int(11) unsigned NOT NULL DEFAULT 0,\n                  `days_activity` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                  PRIMARY KEY (`id`),\n        \t   \t  KEY `department_id` (`department_id`),\n        \t   \t  KEY `disabled` (`disabled`),\n        \t   \t  KEY `attr_int_1` (`attr_int_1`),\n        \t   \t  KEY `attr_int_2` (`attr_int_2`),\n        \t   \t  KEY `attr_int_3` (`attr_int_3`),\n        \t   \t  KEY `position_title_v2` (`position`, `title`(191)),\n        \t   \t  KEY `user_id` (`user_id`),\n        \t   \t  KEY `unique_id` (`unique_id`),\n                  KEY `repetitiveness` (`repetitiveness`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_online_user_footprint` (\n\t\t\t\t  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `chat_id` bigint(20) NOT NULL,\n\t\t\t\t  `online_user_id` int(11) NOT NULL,\n\t\t\t\t  `page` varchar(2083) NOT NULL,\n\t\t\t\t  `vtime` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `chat_id` (`chat_id`),\n\t\t\t\t  KEY `online_user_id` (`online_user_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_invitation_dep` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n    `invitation_id` int(11) NOT NULL,\n    `dep_id` int(11) NOT NULL,\n    PRIMARY KEY (`id`),\n    KEY `invitation_id` (`invitation_id`),\n    KEY `dep_id` (`dep_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_event` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `vid_id` int(11) NOT NULL,\n        \t       `ev_id` int(11) NOT NULL,\n        \t       `ts` int(11) NOT NULL,\n        \t       `val` varchar(50) NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `vid_id_ev_id_val_ts` (`vid_id`,`ev_id`,`val`,`ts`),\n        \t       KEY `vid_id_ev_id_ts` (`vid_id`,`ev_id`,`ts`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_invitation_event` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `invitation_id` int(11) NOT NULL,\n        \t       `event_id` int(11) NOT NULL,\n        \t       `min_number` int(11) NOT NULL,\n        \t       `during_seconds` int(11) NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `invitation_id` (`invitation_id`),\n        \t       KEY `event_id` (`event_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_variables` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `name` varchar(50) NOT NULL,\n        \t       `identifier` varchar(50) NOT NULL,\n        \t       `store_timeout` int(11) NOT NULL,\n        \t       `filter_val` int(11) NOT NULL DEFAULT '0',\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `identifier` (`identifier`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_campaign` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL, `text` text NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_abstract_chat_alert_icon` (`id` bigint(20) NOT NULL AUTO_INCREMENT,`name` varchar(50) NOT NULL, `identifier` varchar(50) NOT NULL,PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_campaign_conv` (\n                  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `device_type` tinyint(11) NOT NULL,\n\t\t\t\t  `invitation_type` tinyint(1) NOT NULL,\n\t\t\t\t  `invitation_status` tinyint(1) NOT NULL,\n\t\t\t\t  `chat_id` bigint(20) NOT NULL,\n\t\t\t\t  `campaign_id` int(11) NOT NULL,\n\t\t\t\t  `invitation_id` int(11) NOT NULL,\n\t\t\t\t  `department_id` int(11) NOT NULL,\n\t\t\t\t  `ctime` int(11) NOT NULL,\n\t\t\t\t  `con_time` int(11) NOT NULL,\n\t\t\t\t  `vid_id` bigint(20) DEFAULT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `ctime` (`ctime`),\n\t\t\t\t  KEY `campaign_id` (`campaign_id`),\n\t\t\t\t  KEY `invitation_id` (`invitation_id`),\n\t\t\t\t  KEY `invitation_status` (`invitation_status`)\n\t\t\t\t) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users_setting` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `user_id` int(11) NOT NULL,\n        \t   `identifier` varchar(50) NOT NULL,\n        \t   `value` text NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `user_id` (`user_id`,`identifier`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_departament_limit_group_member` (  \n    \t       `id` int(11) NOT NULL AUTO_INCREMENT,  \n    \t       `dep_id` int(11) NOT NULL,  \n    \t       `dep_limit_group_id` int(11) NOT NULL,  \n    \t       PRIMARY KEY (`id`),  \n    \t       KEY `dep_limit_group_id` (`dep_limit_group_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_departament_limit_group` (  \n    \t       `id` int(11) NOT NULL AUTO_INCREMENT,  \n    \t       `name` varchar(50) NOT NULL,\n    \t       `pending_max` int(11) NOT NULL,  \n    \t       PRIMARY KEY (`id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_auto_responder_chat` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `chat_id` int(11) NOT NULL,\n                  `auto_responder_id` int(11) NOT NULL,\n                  `wait_timeout_send` int(11) NOT NULL,\n                  `pending_send_status` int(11) NOT NULL,\n                  `active_send_status` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `chat_id` (`chat_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users_setting_option` (\n\t\t\t\t  `identifier` varchar(50) NOT NULL,\n\t\t\t\t  `class` varchar(50) NOT NULL,\n\t\t\t\t  `attribute` varchar(40) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`identifier`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"INSERT INTO `lh_users_setting_option` (`identifier`, `class`, `attribute`) VALUES\n        \t   ('chat_message',\t'',\t''),\n        \t   ('new_chat_sound',\t'',\t''),\n        \t   ('enable_pending_list', '', ''),\n        \t   ('enable_active_list', '', ''),\n        \t   ('enable_close_list', '', ''),\n        \t   ('new_user_bn', '', ''),\n        \t   ('new_user_sound', '', ''),\n        \t   ('oupdate_timeout', '', ''),\n        \t   ('ouser_timeout', '', ''),\n        \t   ('o_department', '', ''),\n        \t   ('omax_rows', '', ''),\n        \t   ('ogroup_by', '', ''),\n        \t   ('omap_depid', '', ''),\n        \t   ('omap_mtimeout', '', ''),\n        \t   ('ocountry', '', ''),\n        \t   ('otime_on_site', '', ''),\n        \t   ('dwo', '', ''),\n        \t   ('enable_unread_list', '', '')\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_config` (\n                  `identifier` varchar(50) NOT NULL,\n                  `value` text NOT NULL,\n                  `type` tinyint(1) NOT NULL DEFAULT '0',\n                  `explain` varchar(250) NOT NULL,\n                  `hidden` int(11) NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`identifier`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $randomHash = erLhcoreClassModelForgotPassword::randomPassword(9);\n            $randomHashLength = strlen($randomHash);\n            $exportHash = erLhcoreClassModelForgotPassword::randomPassword(9);\n\n            if (extension_loaded('bcmath')){\n                $geoRow = \"('geo_data','a:5:{i:0;b:0;s:21:\\\"geo_detection_enabled\\\";i:1;s:22:\\\"geo_service_identifier\\\";s:8:\\\"max_mind\\\";s:23:\\\"max_mind_detection_type\\\";s:7:\\\"country\\\";s:22:\\\"max_mind_city_location\\\";s:37:\\\"var/external/geoip/GeoLite2-City.mmdb\\\";}',0,'',1)\";\n            } else {\n                $geoRow = \"('geo_data', '', '0', '', '1')\";\n            }\n\n            $db->query(\"INSERT INTO `lh_chat_config` (`identifier`, `value`, `type`, `explain`, `hidden`) VALUES\n                ('tracked_users_cleanup',\t'160',\t0,\t'How many days keep records of online users.',\t0),\n        \t   \t('list_online_operators', '1', '0', 'List online operators.', '0'),\n        \t   \t('voting_days_limit',\t'7',\t0,\t'How many days voting widget should not be expanded after last show',\t0),\n                ('track_online_visitors',\t'1',\t0,\t'Enable online site visitors tracking',\t0),\n        \t   \t('pro_active_invite',\t'1',\t0,\t'Is pro active chat invitation active. Online users tracking also has to be enabled',\t0),\n                ('customer_company_name',\t'Live Helper Chat',\t0,\t'Your company name - visible in bottom left corner',\t0),\n                ('customer_site_url',\t'http://livehelperchat.com',\t0,\t'Your site URL address',\t0),\n                ('transfer_configuration','0','0','Transfer configuration','1'),\n                ('list_unread','0','0','List unread chats','0'),\n                ('autoclose_abandon_pending','0,0','0','Automatically close pending chats where visitor has left a chat. Timeout in minutes, last activity by visitor <desktop timeout>,<mobile timeout>,<status chat>.','0'),\n                ('mobile_options',\t'a:2:{s:13:\\\"notifications\\\";i:0;s:7:\\\"fcm_key\\\";s:152:\\\"AAAAiF8DeNk:APA91bFVHu2ybhBUTtlEtQrUEPpM2fb-5ovgo0FVNm4XxK3cYJtSwRcd-pqcBot_422yDOzHyw2p9ZFplkHrmNXjm8f5f-OIzfalGmpsypeXvnPxhU6Db1B2Z1Acc-TamHUn2F4xBJkP\\\";}',\t0,\t'',\t1),\n                ('list_closed','0','0','List closed chats','0'),\n                ('autoclose_activity_timeout','0','0','Automatically close active chat if from last visitor/operator message passed. 0 - disabled, n > 0 time in minutes','0'),\n                ('footprint_background','0','0','Footprint updates should be processed in the background. Make sure you are running workflow background cronjob.','0'),\n                ('reverse_pending','0','0','Make default pending chats order from old to new','0'),\n                ('departament_availability','364','0','How long department availability statistic should be kept? (days)','0'),\n                ('uonline_sessions','364','0','How long keep operators online sessions data? (days)','0'),\n                ('disable_live_autoassign','0','0','Disable live auto assign','0'),\n                ('tracked_footprint_cleanup','90','0','How many days keep records of users footprint.','0'),\n                ('cleanup_cronjob','0','0','Cleanup should be done only using cronjob.','0'),         \n                ('vwait_to_long','120','0','How long we should wait before we inform operator about unanswered chat.','0'),\n                ('no_wildcard_cookie','0','0','Cookie should be valid only for domain where Javascript is embedded (excludes subdomains)','0'),\n                ('cduration_timeout_user','4','0','How long operator can wait for message from visitor before time between messages are ignored. Values in minutes.','0'),\n                ('cduration_timeout_operator','10','0','How long visitor can wait for message from operator before time between messages are ignored. Values in minutes.','0'),       \n                ('assign_workflow_timeout','0','0','Chats waiting in pending line more than n seconds should be auto assigned first. Time in seconds','0'),\n        \t   \t('smtp_data',\t'a:5:{s:4:\\\"host\\\";s:0:\\\"\\\";s:4:\\\"port\\\";s:2:\\\"25\\\";s:8:\\\"use_smtp\\\";i:0;s:8:\\\"username\\\";s:0:\\\"\\\";s:8:\\\"password\\\";s:0:\\\"\\\";}',\t0,\t'SMTP configuration',\t1),\n        \t    ('chatbox_data',\t'a:6:{i:0;b:0;s:20:\\\"chatbox_auto_enabled\\\";i:0;s:19:\\\"chatbox_secret_hash\\\";s:{$randomHashLength}:\\\"{$randomHash}\\\";s:20:\\\"chatbox_default_name\\\";s:7:\\\"Chatbox\\\";s:17:\\\"chatbox_msg_limit\\\";i:50;s:22:\\\"chatbox_default_opname\\\";s:7:\\\"Manager\\\";}',\t0,\t'Chatbox configuration',\t1),\n                ('start_chat_data',\t'a:80:{i:0;b:0;s:21:\\\"name_visible_in_popup\\\";b:0;s:27:\\\"name_visible_in_page_widget\\\";b:0;s:19:\\\"name_require_option\\\";s:8:\\\"required\\\";s:22:\\\"email_visible_in_popup\\\";b:0;s:28:\\\"email_visible_in_page_widget\\\";b:0;s:20:\\\"email_require_option\\\";s:8:\\\"required\\\";s:24:\\\"message_visible_in_popup\\\";b:1;s:30:\\\"message_visible_in_page_widget\\\";b:1;s:22:\\\"message_require_option\\\";s:8:\\\"required\\\";s:22:\\\"phone_visible_in_popup\\\";b:0;s:28:\\\"phone_visible_in_page_widget\\\";b:0;s:20:\\\"phone_require_option\\\";s:8:\\\"required\\\";s:21:\\\"force_leave_a_message\\\";b:0;s:29:\\\"offline_name_visible_in_popup\\\";b:1;s:35:\\\"offline_name_visible_in_page_widget\\\";b:1;s:27:\\\"offline_name_require_option\\\";s:8:\\\"required\\\";s:30:\\\"offline_phone_visible_in_popup\\\";b:0;s:36:\\\"offline_phone_visible_in_page_widget\\\";b:0;s:28:\\\"offline_phone_require_option\\\";s:8:\\\"required\\\";s:32:\\\"offline_message_visible_in_popup\\\";b:1;s:38:\\\"offline_message_visible_in_page_widget\\\";b:1;s:30:\\\"offline_message_require_option\\\";s:8:\\\"required\\\";s:15:\\\"auto_start_chat\\\";b:0;s:12:\\\"mobile_popup\\\";b:0;s:17:\\\"dont_auto_process\\\";b:0;s:20:\\\"tos_visible_in_popup\\\";b:0;s:12:\\\"requires_dep\\\";b:0;s:17:\\\"requires_dep_lock\\\";b:0;s:17:\\\"show_messages_box\\\";b:1;s:26:\\\"tos_visible_in_page_widget\\\";b:0;s:19:\\\"tos_checked_offline\\\";b:0;s:18:\\\"tos_checked_online\\\";b:0;s:28:\\\"offline_tos_visible_in_popup\\\";b:0;s:34:\\\"offline_tos_visible_in_page_widget\\\";b:0;s:35:\\\"offline_file_visible_in_page_widget\\\";b:0;s:29:\\\"offline_file_visible_in_popup\\\";b:0;s:11:\\\"name_hidden\\\";b:0;s:15:\\\"name_hidden_bot\\\";b:0;s:24:\\\"custom_fields_encryption\\\";s:0:\\\"\\\";s:19:\\\"offline_name_hidden\\\";b:0;s:13:\\\"pre_chat_html\\\";s:0:\\\"\\\";s:21:\\\"pre_offline_chat_html\\\";s:0:\\\"\\\";s:12:\\\"email_hidden\\\";b:0;s:16:\\\"email_hidden_bot\\\";b:0;s:20:\\\"offline_email_hidden\\\";b:0;s:15:\\\"user_msg_height\\\";s:0:\\\"\\\";s:12:\\\"phone_hidden\\\";b:0;s:16:\\\"phone_hidden_bot\\\";b:0;s:20:\\\"offline_phone_hidden\\\";b:0;s:14:\\\"message_hidden\\\";b:0;s:18:\\\"message_hidden_bot\\\";b:0;s:18:\\\"message_auto_start\\\";b:0;s:28:\\\"message_auto_start_key_press\\\";b:0;s:22:\\\"offline_message_hidden\\\";b:0;s:21:\\\"show_operator_profile\\\";b:1;s:21:\\\"remove_operator_space\\\";b:0;s:18:\\\"hide_message_label\\\";b:0;s:17:\\\"custom_fields_url\\\";s:0:\\\"\\\";s:13:\\\"custom_fields\\\";s:0:\\\"\\\";s:21:\\\"name_hidden_prefilled\\\";b:0;s:22:\\\"email_hidden_prefilled\\\";b:0;s:24:\\\"message_hidden_prefilled\\\";b:0;s:22:\\\"phone_hidden_prefilled\\\";b:0;s:29:\\\"offline_name_hidden_prefilled\\\";b:0;s:32:\\\"offline_message_hidden_prefilled\\\";b:0;s:30:\\\"offline_phone_hidden_prefilled\\\";b:0;s:18:\\\"disable_start_chat\\\";b:0;s:18:\\\"offline_name_width\\\";i:0;s:19:\\\"offline_email_width\\\";i:0;s:19:\\\"offline_phone_width\\\";i:0;s:10:\\\"name_width\\\";i:0;s:11:\\\"email_width\\\";i:0;s:11:\\\"phone_width\\\";i:0;s:17:\\\"hide_start_button\\\";b:0;s:9:\\\"lazy_load\\\";b:0;s:28:\\\"offline_email_require_option\\\";s:8:\\\"required\\\";s:30:\\\"offline_email_hidden_prefilled\\\";b:0;s:36:\\\"offline_email_visible_in_page_widget\\\";b:1;s:30:\\\"offline_email_visible_in_popup\\\";b:1;}',\t0,\t'',\t1),\n                ('application_name',\t'a:6:{s:3:\\\"eng\\\";s:31:\\\"Live Helper Chat - live support\\\";s:3:\\\"lit\\\";s:26:\\\"Live Helper Chat - pagalba\\\";s:3:\\\"hrv\\\";s:0:\\\"\\\";s:3:\\\"esp\\\";s:0:\\\"\\\";s:3:\\\"por\\\";s:0:\\\"\\\";s:10:\\\"site_admin\\\";s:31:\\\"Live Helper Chat - live support\\\";}',\t1,\t'Support application name, visible in browser title.',\t0),\n                ('track_footprint',\t'0',\t0,\t'Track users footprint. For this also online visitors tracking should be enabled',\t0),\n                ('pro_active_limitation',\t'-1',\t0,\t'Pro active chats invitations limitation based on pending chats, (-1) do not limit, (0,1,n+1) number of pending chats can be for invitation to be shown.',\t0),\n                ('pro_active_show_if_offline',\t'0',\t0,\t'Should invitation logic be executed if there is no online operators',\t0),\n                ('export_hash',\t'{$exportHash}',\t0,\t'Chats export secret hash',\t0),\n                ('do_no_track_ip', 0, 0, 'Do not track visitors IP',0),\n                ('remember_username','1','0','Should we remember username for the next time visitor starts a chat?','0'),\n                ('ignore_typing', 0, 0, 'Do not store what visitor is typing',0),\n                ('encrypt_msg_after', 0, 0, 'After how many days anonymize messages',0),\n                ('encrypt_msg_op', 0, 0, 'Anonymize also operators messages',0),\n                ('valid_domains','','0','Domains where script can be embedded. E.g example.com, google.com','0'),\n                ('message_seen_timeout', 24, 0, 'Proactive message timeout in hours. After how many hours proactive chat mesasge should be shown again.',\t0),\n                ('reopen_chat_enabled',0,\t0,\t'Reopen chat functionality enabled',\t0),\n                ('ignorable_ip',\t'',\t0,\t'Which ip should be ignored in online users list, separate by comma',0),\n                ('run_departments_workflow', 0, 0, 'Should cronjob run departments transfer workflow, even if user leaves a chat',\t0),\n                ('geo_location_data', 'a:3:{s:4:\\\"zoom\\\";i:4;s:3:\\\"lat\\\";s:7:\\\"49.8211\\\";s:3:\\\"lng\\\";s:7:\\\"11.7835\\\";}', '0', '', '1'),\n                ('xmp_data','a:14:{i:0;b:0;s:4:\\\"host\\\";s:15:\\\"talk.google.com\\\";s:6:\\\"server\\\";s:9:\\\"gmail.com\\\";s:8:\\\"resource\\\";s:6:\\\"xmpphp\\\";s:4:\\\"port\\\";s:4:\\\"5222\\\";s:7:\\\"use_xmp\\\";i:0;s:8:\\\"username\\\";s:0:\\\"\\\";s:8:\\\"password\\\";s:0:\\\"\\\";s:11:\\\"xmp_message\\\";s:98:\\\"New chat request [{chat_id}] from [{department}]\\r\\n{messages}\\r\\nClick to accept a chat\\r\\n{url_accept}\\\";s:10:\\\"recipients\\\";s:0:\\\"\\\";s:20:\\\"xmp_accepted_message\\\";s:89:\\\"{user_name} has accepted a chat [{chat_id}] from [{department}]\\r\\n{messages}\\r\\n{url_accept}\\\";s:16:\\\"use_standard_xmp\\\";i:0;s:15:\\\"test_recipients\\\";s:0:\\\"\\\";s:21:\\\"test_group_recipients\\\";s:0:\\\"\\\";}',0,'XMP data',1),\n                ('run_unaswered_chat_workflow', 0, 0, 'Should cronjob run unanswered chats workflow and execute unaswered chats callback, 0 - no, any other number bigger than 0 is a minits how long chat have to be not accepted before executing callback.',0),\n                ('disable_popup_restore', 0, 0, 'Disable option in widget to open new window. Restore icon will be hidden',\t0),\n                ('accept_tos_link', '#', 0, 'Change to your site Terms of Service', 0),\n                ('hide_button_dropdown', '0', 0, 'Hide close button in dropdown', 0),\n                ('on_close_exit_chat', '0', 0, 'On chat close exit chat', 0),\n                ('activity_timeout', '5', 0, 'How long operator should go offline automatically because of inactivity. Value in minutes', 0),\n                ('product_enabled_module','0','0','Product module is enabled', '1'),\n                ('preload_iframes','0','0','Preload widget. It will avoid loading delay after clicking widget','0'),\n                ('product_show_departament','0','0','Enable products show by departments', '1'),\n                ('paidchat_data','','0','Paid chat configuration','1'),\n                ('mheight_op','200','0','Messages box height for operator','0'),\n                ('listd_op','10','0','Default number of online operators to show','0'),\n                ('disable_iframe_sharing',\t'1',\t0,\t'Disable iframes in sharing mode',\t0),\n                ('file_configuration',\t'a:7:{i:0;b:0;s:5:\\\"ft_op\\\";s:47:\\\"gif|jpe?g|png|zip|svg|rar|xls|doc|docx|xlsx|pdf\\\";s:5:\\\"ft_us\\\";s:30:\\\"gif|jpe?g|png|svg|doc|docx|pdf\\\";s:6:\\\"fs_max\\\";i:2048;s:18:\\\"active_user_upload\\\";b:0;s:16:\\\"active_op_upload\\\";b:1;s:19:\\\"active_admin_upload\\\";b:1;}',\t0,\t'Files configuration item',\t1),\n                ('accept_chat_link_timeout',\t'300',\t0,\t'How many seconds chat accept link is valid. Set 0 to force login all the time manually.',\t0),\n                ('open_closed_chat_timeout',\t'1800',\t0,\t'How many seconds customer has to open already closed chat.',\t0),\n                ('session_captcha',0,\t0,\t'Use session captcha. LHC have to be installed on the same domain or subdomain.',\t0),\n                ('sync_sound_settings',\t'a:16:{i:0;b:0;s:12:\\\"repeat_sound\\\";i:1;s:18:\\\"repeat_sound_delay\\\";i:5;s:10:\\\"show_alert\\\";b:0;s:22:\\\"new_chat_sound_enabled\\\";b:1;s:31:\\\"new_message_sound_admin_enabled\\\";b:1;s:30:\\\"new_message_sound_user_enabled\\\";b:1;s:14:\\\"online_timeout\\\";d:300;s:22:\\\"check_for_operator_msg\\\";d:10;s:21:\\\"back_office_sinterval\\\";d:10;s:22:\\\"chat_message_sinterval\\\";d:3.5;s:20:\\\"long_polling_enabled\\\";b:0;s:30:\\\"polling_chat_message_sinterval\\\";d:1.5;s:29:\\\"polling_back_office_sinterval\\\";d:5;s:18:\\\"connection_timeout\\\";i:30;s:28:\\\"browser_notification_message\\\";b:0;}',\t0,\t'',\t1),\n                ('sound_invitation', 1, 0, 'Play sound on invitation to chat.',\t0),\n                ('explicit_http_mode', '',0,'Please enter explicit http mode. Either http: or https:, do not forget : at the end.', '0'),\n                ('track_domain',\t'',\t0,\t'Set your domain to enable user tracking across different domain subdomains.',\t0),\n                ('max_message_length','500',0,'Maximum message length in characters', '0'),\n                ('need_help_tip','1',0,'Show need help tooltip?', '0'),\n                ('recaptcha_data','a:4:{i:0;b:0;s:8:\\\"site_key\\\";s:0:\\\"\\\";s:10:\\\"secret_key\\\";s:0:\\\"\\\";s:7:\\\"enabled\\\";i:0;}','0','Re-captcha configuration','1'),\n                ('need_help_tip_timeout','24',0,'Need help tooltip timeout, after how many hours show again tooltip?', '0'),\n                ('use_secure_cookie','0',0,'Use secure cookie, check this if you want to force SSL all the time', '0'),\n                ('faq_email_required','0',0,'Is visitor e-mail required for FAQ', '0'),\n                ('disable_print','0',0,'Disable chat print', '0'),\n                ('hide_disabled_department','1',0,'Hide disabled department widget', '0'),\n                ('disable_send','0',0,'Disable chat transcript send', '0'),\n                ('ignore_user_status','0',0,'Ignore users online statuses and use departments online hours', '0'),\n                ('bbc_button_visible','1',0,'Show BB Code button', '0'),\n                ('password_data','','0','Password requirements','1'),\n                ('activity_track_all','0','0','Track all logged operators activity and ignore their individual settings.','0'),\n                ('allow_reopen_closed','0', 0, 'Allow user to reopen closed chats?', '0'),\n                ('reopen_as_new','0', 0, 'Reopen closed chat as new? Otherwise it will be reopened as active.', '0'),\n                ('default_theme_id','0', 0, 'Default theme ID.', '1'),  \n                ('default_admin_theme_id','0', 0, 'Default admin theme ID', '1'),  \n                ('translation_data',\t'a:6:{i:0;b:0;s:19:\\\"translation_handler\\\";s:4:\\\"bing\\\";s:19:\\\"enable_translations\\\";b:0;s:14:\\\"bing_client_id\\\";s:0:\\\"\\\";s:18:\\\"bing_client_secret\\\";s:0:\\\"\\\";s:14:\\\"google_api_key\\\";s:0:\\\"\\\";}',\t0,\t'Translation data',\t1),              \n                ('disable_html5_storage','1',0,'Disable HMTL5 storage, check it if your site is switching between http and https', '0'),\n                ('automatically_reopen_chat','1',0,'Automatically reopen chat on widget open', '0'),\n                ('autoclose_timeout','0', 0, 'Automatic chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autoclose_timeout_pending','0', 0, 'Automatic pending chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autoclose_timeout_active','0', 0, 'Automatic active chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autoclose_timeout_bot','0', 0, 'Automatic bot chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autopurge_timeout','0', 0, 'Automatic chats purging. 0 - disabled, n > 0 time in minutes before chat is automatically deleted', '0'),\n                ('update_ip',\t'127.0.0.1',\t0,\t'Which ip should be allowed to update DB by executing http request, separate by comma?',0),\n                ('track_if_offline',\t'0',\t0,\t'Track online visitors even if there is no online operators',0),\n                ('min_phone_length','8',0,'Minimum phone number length',0),\n                ('mheight','',0,'Messages box height',0),\n                ('inform_unread_message','0',0,'Inform visitor about unread messages from operator, value in minutes. 0 - disabled',0),\n                ('dashboard_order', '[[\\\"online_operators\\\",\\\"departments_stats\\\",\\\"online_visitors\\\"],[\\\"group_chats\\\",\\\"my_chats\\\",\\\"pending_chats\\\",\\\"transfered_chats\\\"],[\\\"active_chats\\\",\\\"bot_chats\\\"]]', '0', 'Home page dashboard widgets order', '0'),\n                ('banned_ip_range','',0,'Which ip should not be allowed to chat',0),\n                ('suggest_leave_msg','1',0,'Suggest user to leave a message then user chooses offline department',0),\n                ('checkstatus_timeout','0',0,'Interval between chat status checks in seconds, 0 disabled.',0),\n                ('show_language_switcher','0',0,'Show users option to switch language at widget',0),\n                ('sharing_auto_allow','0',0,'Do not ask permission for users to see their screen',0),\n                ('sharing_nodejs_enabled','0',0,'NodeJs support enabled',0),\n                ('sharing_nodejs_path','',0,'socket.io path, optional',0),\n                ('online_if','0','0','','0'),\n                ('track_mouse_activity','0','0','Should mouse movement be tracked as activity measure, if not checked only basic events would be tracked','0'),\n                ('track_activity','0','0','Track users activity on site?','0'),\n                ('autologin_data','a:3:{i:0;b:0;s:11:\\\"secret_hash\\\";s:16:\\\"please_change_me\\\";s:7:\\\"enabled\\\";i:0;}',0,'Autologin configuration data',\t1),\n                ('sharing_nodejs_secure','0',0,'Connect to NodeJs in https mode',0),\n                ('disable_js_execution','1',0,'Disable JS execution in Co-Browsing operator window',0),\n                ('sharing_nodejs_socket_host','',0,'Host where NodeJs is running',0),\n                ('hide_right_column_frontpage','1','0','Hide right column in frontpage','0'),\n                ('front_tabs', 'dashboard,online_users,online_map', '0', 'Home page tabs order', '0'),\n                ('speech_data',\t'a:3:{i:0;b:0;s:8:\\\"language\\\";i:7;s:7:\\\"dialect\\\";s:5:\\\"en-US\\\";}',\t1,\t'',\t1),\n                ('sharing_nodejs_sllocation','https://cdn.jsdelivr.net/npm/socket.io-client@2/dist/socket.io.js',0,'Location of SocketIO JS library',0),\n                ('track_is_online','0',0,'Track is user still on site, chat status checks also has to be enabled',0),\n\t\t\t\t('show_languages','eng,lit,hrv,esp,por,nld,ara,ger,pol,rus,ita,fre,chn,cse,nor,tur,vnm,idn,sve,per,ell,dnk,rou,bgr,tha,geo,fin,alb',0,'Between what languages user should be able to switch',0),\n                ('geoadjustment_data',\t'a:8:{i:0;b:0;s:18:\\\"use_geo_adjustment\\\";b:0;s:13:\\\"available_for\\\";s:0:\\\"\\\";s:15:\\\"other_countries\\\";s:6:\\\"custom\\\";s:8:\\\"hide_for\\\";s:0:\\\"\\\";s:12:\\\"other_status\\\";s:7:\\\"offline\\\";s:11:\\\"rest_status\\\";s:6:\\\"hidden\\\";s:12:\\\"apply_widget\\\";i:0;}',\t0,\t'Geo adjustment settings',\t1),\n                {$geoRow}\");\n\n\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_online_user` (\n                  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `vid` varchar(50) NOT NULL,\n                  `ip` varchar(50) NOT NULL,\n                  `current_page` text NOT NULL,\n        \t   \t  `page_title` varchar(250) NOT NULL,\n                  `referrer` text NOT NULL,\n                  `chat_id` int(11) NOT NULL,\n                  `invitation_seen_count` int(11) NOT NULL,\n        \t   \t  `invitation_id` int(11) NOT NULL,\n                  `last_visit` int(11) NOT NULL,\n        \t   \t  `first_visit` int(11) NOT NULL,\n        \t   \t  `total_visits` int(11) NOT NULL,\n        \t   \t  `pages_count` int(11) NOT NULL,\n        \t   \t  `tt_pages_count` int(11) NOT NULL,\n        \t   \t  `invitation_count` int(11) NOT NULL,\n        \t   \t  `last_check_time` int(11) NOT NULL,\n        \t   \t  `dep_id` int(11) NOT NULL,        \t   \t \n                  `user_agent` text NOT NULL,\n                  `notes` varchar(250) NOT NULL,\n                  `user_country_code` varchar(50) NOT NULL,\n                  `user_country_name` varchar(50) NOT NULL,\n                  `visitor_tz` varchar(50) NOT NULL,\n                  `operator_message` text NOT NULL,\n                  `operator_user_proactive` varchar(100) NOT NULL,\n                  `operator_user_id` int(11) NOT NULL,\n                  `conversion_id` int(11) NOT NULL,\n                  `message_seen` int(11) NOT NULL,\n                  `message_seen_ts` int(11) NOT NULL,\n                  `user_active` int(11) NOT NULL,\n        \t   \t  `lat` varchar(10) NOT NULL,\n  \t\t\t\t  `lon` varchar(10) NOT NULL,\n  \t\t\t\t  `city` varchar(100) NOT NULL,\n        \t   \t  `reopen_chat` int(11) NOT NULL,\n        \t   \t  `time_on_site` int(11) NOT NULL,\n  \t\t\t\t  `tt_time_on_site` int(11) NOT NULL,\n        \t   \t  `requires_email` int(11) NOT NULL,\n        \t   \t  `requires_username` int(11) NOT NULL,\n        \t   \t  `requires_phone` int(11) NOT NULL,\n        \t   \t  `screenshot_id` int(11) NOT NULL,\n        \t   \t  `identifier` varchar(50) NOT NULL,\n        \t   \t  `operation` text NOT NULL,\n        \t   \t  `online_attr_system` text NOT NULL,\n        \t   \t  `operation_chat` text NOT NULL,\n        \t   \t  `online_attr` text NOT NULL,\n        \t   \t  `device_type` tinyint(1) NOT NULL DEFAULT '0',\n                  `chat_time` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  `last_visit_prev` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  PRIMARY KEY (`id`),\n                  KEY `vid` (`vid`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `last_visit_dep_id` (`last_visit`,`dep_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_proactive_chat_invitation` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `siteaccess` varchar(10) NOT NULL,\n\t\t\t\t  `time_on_site` int(11) NOT NULL,\n\t\t\t\t  `pageviews` int(11) NOT NULL,\n\t\t\t\t  `message` text NOT NULL,\n\t\t\t\t  `message_returning` text NOT NULL,\n\t\t\t\t  `executed_times` int(11) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `hide_after_ntimes` int(11) NOT NULL,\n\t\t\t\t  `show_on_mobile` int(11) NOT NULL,\n\t\t\t\t  `delay` int(11) NOT NULL,\n\t\t\t\t  `delay_init` int(11) NOT NULL,\n\t\t\t\t  `show_instant` int(11) NOT NULL,\n\t\t\t\t  `autoresponder_id` int(11) NOT NULL,\n\t\t\t\t  `disabled` int(11) NOT NULL,\n\t\t\t\t  `inject_only_html` tinyint(1) NOT NULL,\n\t\t\t\t  `name` varchar(50) NOT NULL,\n\t\t\t\t  `operator_ids` varchar(100) NOT NULL,\t\t\t\t \n\t\t\t\t  `message_returning_nick` varchar(250) NOT NULL,\n\t\t\t\t  `referrer` varchar(250) NOT NULL,\t\t\t\t  \n\t\t\t\t  `show_random_operator` int(11) NOT NULL,\n\t\t\t\t  `operator_name` varchar(100) NOT NULL,\n\t\t\t\t  `campaign_id` int(11) NOT NULL,\n\t\t\t\t  `position` int(11) NOT NULL,\n\t\t\t\t  `event_invitation` int(11) NOT NULL,\n\t\t\t\t  `dynamic_invitation` int(11) NOT NULL,\n\t\t\t\t  `bot_id` int(11) NOT NULL,\n\t\t\t\t  `trigger_id` int(11) NOT NULL,\n\t\t\t\t  `bot_offline` tinyint(1) NOT NULL,\n        \t   \t  `identifier` varchar(50) NOT NULL,\n        \t   \t  `tag` varchar(50) NOT NULL,\n        \t   \t  `requires_email` int(11) NOT NULL,\n        \t   \t  `iddle_for` int(11) NOT NULL,\n        \t   \t  `event_type` int(11) NOT NULL,\n        \t   \t  `requires_username` int(11) NOT NULL,\n        \t   \t  `requires_phone` int(11) NOT NULL,        \t   \t  \n        \t   \t  `design_data` longtext NOT NULL,        \t   \t  \n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `time_on_site_pageviews_siteaccess_position` (`time_on_site`,`pageviews`,`siteaccess`,`identifier`,`position`),\n        \t      KEY `identifier` (`identifier`),\n        \t      KEY `dynamic_invitation` (`dynamic_invitation`),\n        \t      KEY `tag` (`tag`),\n        \t      KEY `dep_id` (`dep_id`),\n        \t      KEY `show_on_mobile` (`show_on_mobile`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_accept` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `chat_id` bigint(20) NOT NULL,\n        \t   `hash` varchar(50) NOT NULL,\n        \t   `ctime` int(11) NOT NULL,\n        \t   `wused` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `hash` (`hash`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            //Default departament\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_departament` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `name` varchar(100) NOT NULL,\n\t\t\t\t  `email` varchar(100) NOT NULL,\n\t\t\t\t  `xmpp_recipients` text NOT NULL,\n\t\t\t\t  `xmpp_group_recipients` text NOT NULL,\n\t\t\t\t  `priority` int(11) NOT NULL,\n\t\t\t\t  `sort_priority` int(11) NOT NULL,\n\t\t\t\t  `department_transfer_id` int(11) NOT NULL,\n\t\t\t\t  `transfer_timeout` int(11) NOT NULL,\n\t\t\t\t  `exclude_inactive_chats` int(11) NOT NULL,\n\t\t\t\t  `delay_before_assign` int(11) NOT NULL,\n\t\t\t\t  `max_ac_dep_chats` int(11) NOT NULL,\n\t\t\t\t  `archive` tinyint(1) NOT NULL DEFAULT '0',\n\t\t\t\t  `max_load` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `max_load_h` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `assign_same_language` int(11) NOT NULL,\n\t\t\t\t  `disabled` int(11) NOT NULL,\n\t\t\t\t  `hidden` int(11) NOT NULL,\n\t\t\t\t  `delay_lm` int(11) NOT NULL,\n\t\t\t\t  `max_active_chats` int(11) NOT NULL,\n\t\t\t\t  `max_timeout_seconds` int(11) NOT NULL,\n\t\t\t\t  `identifier` varchar(2083) NOT NULL,\n\t\t\t\t  `mod_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `mod_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `tud_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `tud_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `wed_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `wed_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `thd_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `thd_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `frd_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `frd_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sad_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sad_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sud_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sud_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `nc_cb_execute` tinyint(1) NOT NULL,\n\t\t\t\t  `na_cb_execute` tinyint(1) NOT NULL,\n\t\t\t\t  `inform_unread` tinyint(1) NOT NULL,\n\t\t\t\t  `active_balancing` tinyint(1) NOT NULL,\n\t\t\t\t  `visible_if_online` tinyint(1) NOT NULL,\n\t\t\t\t  `inform_close` int(11) NOT NULL,\n\t\t\t\t  `inform_unread_delay` int(11) NOT NULL,\n\t\t\t\t  `inform_options` varchar(250) NOT NULL,\n\t\t\t\t  `online_hours_active` tinyint(1) NOT NULL,\n\t\t\t\t  `inform_delay` int(11) NOT NULL,\n\t\t\t\t  `attr_int_1` int(11) NOT NULL,\n\t\t\t\t  `attr_int_2` int(11) NOT NULL,\n\t\t\t\t  `attr_int_3` int(11) NOT NULL,\n\t\t\t\t  `pending_max` int(11) NOT NULL,\n\t\t\t\t  `pending_group_max` int(11) NOT NULL,\n\t\t\t\t  `active_chats_counter` int(11) NOT NULL,\n\t\t\t\t  `inactive_chats_cnt` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `pending_chats_counter` int(11) NOT NULL,\n\t\t\t\t  `bot_chats_counter` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `inop_chats_cnt` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `acop_chats_cnt` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `inform_close_all` int(11) NOT NULL,\n\t\t\t\t  `inform_close_all_email` varchar(250) NOT NULL,\n\t\t\t\t  `alias` varchar(50) NOT NULL,\n\t\t\t\t  `product_configuration` longtext NOT NULL,\n\t\t\t\t  `bot_configuration` text NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `identifier_2` (`identifier`(191)),\n\t\t\t\t  KEY `archive` (`archive`),\n\t\t\t\t  KEY `attr_int_1` (`attr_int_1`),\n\t\t\t\t  KEY `attr_int_2` (`attr_int_2`),\n\t\t\t\t  KEY `attr_int_3` (`attr_int_3`),\n\t\t\t\t  KEY `active_chats_counter` (`active_chats_counter`),\n\t\t\t\t  KEY `pending_chats_counter` (`pending_chats_counter`),\n\t\t\t\t  KEY `bot_chats_counter` (`bot_chats_counter`),\n\t\t\t\t  KEY `disabled_hidden` (`disabled`, `hidden`),\n\t\t\t\t  KEY `sort_priority_name` (`sort_priority`, `name`),\n\t\t\t\t  KEY `alias` (`alias`),\n\t\t\t\t  KEY `active_mod` (`online_hours_active`,`mod_start_hour`,`mod_end_hour`),\n\t\t\t\t  KEY `active_tud` (`online_hours_active`,`tud_start_hour`,`tud_end_hour`),\n\t\t\t\t  KEY `active_wed` (`online_hours_active`,`wed_start_hour`,`wed_end_hour`),\n\t\t\t\t  KEY `active_thd` (`online_hours_active`,`thd_start_hour`,`thd_end_hour`),\n\t\t\t\t  KEY `active_frd` (`online_hours_active`,`frd_start_hour`,`frd_end_hour`),\n\t\t\t\t  KEY `active_sad` (`online_hours_active`,`sad_start_hour`,`sad_end_hour`),\n\t\t\t\t  KEY `active_sud` (`online_hours_active`,`sud_start_hour`,`sud_end_hour`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_saved_search` (\n                    `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `params` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `user_id` bigint(20) unsigned NOT NULL,\n                  `position` int(11) unsigned NOT NULL,\n                  `scope` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `days` int(11) unsigned NOT NULL,\n                  `updated_at` bigint(20) unsigned NOT NULL,\n                  `requested_at` bigint(20) unsigned NOT NULL,\n                  `total_records` bigint(20) unsigned NOT NULL,\n                  `passive` tinyint(1) unsigned NOT NULL DEFAULT 0,\n                  PRIMARY KEY (`id`),\n                  KEY `user_id` (`user_id`),\n                  KEY `scope` (`scope`),\n                  KEY `updated_at` (`updated_at`),\n                  KEY `requested_at` (`requested_at`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_departament_group_user` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `dep_group_id` int(11) NOT NULL,\n                  `user_id` int(11) NOT NULL,\n                  `read_only` tinyint(1) unsigned NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`id`),\n                  KEY `dep_group_id` (`dep_group_id`),\n                  KEY `user_id` (`user_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_departament_availability` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `dep_id` int(11) NOT NULL, `hour` int(11) NOT NULL, `hourminute` int(4) NOT NULL, `minute` int(11) NOT NULL, `time` int(11) NOT NULL, `ymdhi` bigint(20) NOT NULL, `ymd` int(11) NOT NULL, `status` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `ymdhi` (`ymdhi`), KEY `dep_id` (`dep_id`),  KEY `hourminute` (`hourminute`), KEY `time` (`time`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_product_departament` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `product_id` int(11) NOT NULL,\n        \t       `departament_id` int(11) NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `departament_id` (`departament_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_departament_group_member` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `dep_id` int(11) NOT NULL,\n                  `dep_group_id` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `dep_group_id` (`dep_group_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_generic_bot_rest_api` (`id` bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY, `name` varchar(50) NOT NULL, `description` varchar(250), `configuration` text NOT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_departament_group` (\n                      `id` int(11) NOT NULL AUTO_INCREMENT,\n                      `name` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `achats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `inachats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `pchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `max_load` int(11) NOT NULL DEFAULT 0,\n                      `max_load_h` int(11) NOT NULL DEFAULT 0,\n                      `bchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `inopchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `acopchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      PRIMARY KEY (`id`)\n                    ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_canned_msg_tag_link` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `tag_id` int(11) NOT NULL,  `canned_id` int(11) NOT NULL,  PRIMARY KEY (`id`), KEY `canned_id` (`canned_id`), KEY `tag_id` (`tag_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_canned_msg_tag` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `tag` varchar(40) NOT NULL, PRIMARY KEY (`id`), KEY `tag` (`tag`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_abstract_subject` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `internal` tinyint(1) NOT NULL DEFAULT 0,\n  `internal_type` varchar(20) NOT NULL DEFAULT '',\n  PRIMARY KEY (`id`),\n  KEY `internal` (`internal`),\n  KEY `internal_type` (`internal_type`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_abstract_subject_dep` ( `id` int(11) NOT NULL AUTO_INCREMENT, `dep_id` int(11) NOT NULL, `subject_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `subject_id` (`subject_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_abstract_subject_chat` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `subject_id` int(11) NOT NULL, `chat_id` bigint(20) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_group_object` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `object_id` bigint(20) NOT NULL, `group_id` bigint(20) NOT NULL, `type` bigint(20) NOT NULL, PRIMARY KEY (`id`), KEY `object_id_type` (`object_id`,`type`), KEY `group_id` (`group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Bot tables\n            $db->query(\"CREATE TABLE `lh_generic_bot_bot` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `configuration` longtext NOT NULL, `avatar` varchar(150) NOT NULL, `filename` varchar(250) NOT NULL, `filepath` varchar(250) NOT NULL, `name` varchar(100) NOT NULL, `nick` varchar(100) NOT NULL,`attr_str_1` varchar(100) NOT NULL, `attr_str_2` varchar(100) NOT NULL, `attr_str_3` varchar(100) NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_group` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL,`is_collapsed` int(11) NOT NULL DEFAULT '0', `pos` int(11) NOT NULL DEFAULT '0', `bot_id` bigint(20) NOT NULL, PRIMARY KEY (`id`), KEY `bot_id` (`bot_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_trigger` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL, `actions` longtext NOT NULL, `group_id` bigint(20) NOT NULL, `bot_id` int(11) NOT NULL, `default` int(11) NOT NULL, `default_unknown` int(11) NOT NULL, `as_argument` int(11) NOT NULL DEFAULT '0', `in_progress` int(11) NOT NULL DEFAULT '0', `default_unknown_btn` int(11) NOT NULL DEFAULT '0', `default_always` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `bot_id` (`bot_id`),  KEY `default_unknown` (`default_unknown`), KEY `in_progress` (`in_progress`), KEY `default_unknown_btn` (`default_unknown_btn`), KEY `default_always` (`default_always`), KEY `group_id` (`group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_trigger_event` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `pattern` text NOT NULL, `pattern_exc` text NOT NULL, `configuration` longtext NOT NULL, `trigger_id` bigint(20) NOT NULL, `bot_id` int(11) NOT NULL, `on_start_type` tinyint(1) NOT NULL, `priority` int(11) NOT NULL, `type` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `pattern_v2` (`pattern`(191)), KEY `type` (`type`), KEY `on_start_type` (`on_start_type`), KEY `trigger_id` (`trigger_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_payload` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL, `payload` varchar(100) NOT NULL, `bot_id` int(11) NOT NULL, `trigger_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `bot_id` (`bot_id`), KEY `trigger_id` (`trigger_id`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_chat_workflow` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL,`trigger_id` bigint(20) NOT NULL, `time` int(11) NOT NULL, `identifier` varchar(100) NOT NULL, `status` int(11) NOT NULL, `collected_data` text, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_chat_event` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `counter` int(11) NOT NULL, `content` longtext NOT NULL, `ctime` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_pending_event` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `trigger_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_exception` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL, `priority` int(11) NOT NULL, `active` tinyint(1) NOT NULL, PRIMARY KEY (`id`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_exception_message` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `code` varchar(20) NOT NULL, `exception_group_id` int(11) NOT NULL, `priority` int(11) NOT NULL, `active` tinyint(1) NOT NULL, `message` text NOT NULL, PRIMARY KEY (`id`), KEY `code` (`code`), KEY `exception_group_id` (`exception_group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_tr_group` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL,`filename` varchar(250) NOT NULL,`filepath` varchar(250) NOT NULL,`configuration` longtext NOT NULL,`nick` varchar(100) NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_tr_item` ( `id` int(11) NOT NULL AUTO_INCREMENT, `group_id` int(11) NOT NULL, `identifier` varchar(50) NOT NULL, `translation` text NOT NULL, PRIMARY KEY (`id`),  KEY `identifier` (`identifier`), KEY `group_id` (`group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_speech_user_language` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `user_id` bigint(20) NOT NULL, `language` varchar(20) NOT NULL, PRIMARY KEY (`id`), KEY `user_id_language` (`user_id`,`language`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_audits` (`id` bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY, `category` varchar(255) NOT NULL, `file` varchar(255), `object_id` bigint(20) DEFAULT '0', `line` bigint(20), `message` longtext NOT NULL, `severity` varchar(255) NOT NULL, `source` varchar(255) NOT NULL, `time` timestamp NOT NULL, KEY `object_id` (`object_id`), KEY `source` (`source`(191)), KEY `category` (`category`(191))) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_chat_online_user_footprint_update` (`online_user_id` bigint(20) NOT NULL,  `command` varchar(20) NOT NULL,  `args` varchar(250) NOT NULL,  `ctime` int(11) NOT NULL, KEY `online_user_id` (`online_user_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_repeat_restrict` (`id` bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY, `chat_id` bigint(20) NOT NULL, `trigger_id` bigint(20), `identifier` varchar(20), `counter` int(11) DEFAULT '0', KEY `chat_id_trigger_id` (`chat_id`,`trigger_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_users_login` (`id` bigint(20) NOT NULL AUTO_INCREMENT,`user_id` bigint(20) NOT NULL,`type` int(11) NOT NULL,`ctime` bigint(20) NOT NULL,`status` int(11) NOT NULL,`ip` varchar(100) NOT NULL,`msg` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,PRIMARY KEY (`id`),KEY `user_id_type` (`user_id`,`type`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            \n            $Departament = new erLhcoreClassModelDepartament();\n            $Departament->name = $form->DefaultDepartament;\n            erLhcoreClassDepartament::getSession()->save($Departament);\n            \n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_voice_video` (\n                   `id` bigint(20) NOT NULL AUTO_INCREMENT,\n                   `chat_id` bigint(20) NOT NULL,\n                   `user_id` bigint(20) NOT NULL,\n                   `op_status` tinyint(4) NOT NULL,\n                   `vi_status` tinyint(4) NOT NULL,\n                   `voice` tinyint(4) NOT NULL,\n                   `video` tinyint(4) NOT NULL,\n                   `screen_share` tinyint(4) NOT NULL,\n                   `status` tinyint(4) NOT NULL,\n                   `ctime` int(11) NOT NULL,\n                   `token` varchar(200) NOT NULL,\n                   PRIMARY KEY (`id`),\n                   KEY `chat_id` (`chat_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_canned_msg_replace` (\n                    `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n                    `identifier` varchar(50) NOT NULL,\n                    `default` text NOT NULL, `conditions` longtext NOT NULL,\n                    PRIMARY KEY (`id`),\n                   KEY `identifier` (`identifier`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            //Department custom work hours\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_departament_custom_work_hours` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `date_from` int(11) NOT NULL,\n\t\t\t\t  `date_to` int(11) NOT NULL,\n\t\t\t\t  `start_hour` int(11) NOT NULL,\n\t\t\t\t  `end_hour` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `date_from` (`date_from`),\n\t\t\t\t  KEY `search_active` (`date_from`, `date_to`, `dep_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            //Administrators group\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_group` (\n               `id` int(11) NOT NULL AUTO_INCREMENT,\n               `name` varchar(50) NOT NULL,\n               `disabled` tinyint(1) NOT NULL,\n               `required` tinyint(1) NOT NULL DEFAULT '0',\n               PRIMARY KEY (`id`),\n               KEY `disabled` (`disabled`)\n               ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_stats` (\n              `id` bigint(20) NOT NULL AUTO_INCREMENT,\n              `type` int(11) NOT NULL,\n              `lupdate` bigint(20) NOT NULL,\n              `object_id` bigint(20) NOT NULL,\n              `stats` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n              PRIMARY KEY (`id`),\n              KEY `type_object_id` (`type`,`object_id`)\n            ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            //Administrators group\n            $db->query(\"CREATE TABLE `lh_generic_bot_command` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `command` varchar(50) NOT NULL,\n  `bot_id` int(11) NOT NULL,\n  `trigger_id` int(11) NOT NULL,\n  `dep_id` int(11) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `dep_id` (`dep_id`),\n  KEY `command` (`command`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Admin group\n            $GroupData = new erLhcoreClassModelGroup();\n            $GroupData->name    = \"Administrators\";\n            erLhcoreClassUser::getSession()->save($GroupData);\n\n            // Precreate operators group\n            $GroupDataOperators = new erLhcoreClassModelGroup();\n            $GroupDataOperators->name    = \"Operators\";\n            erLhcoreClassUser::getSession()->save($GroupDataOperators);\n\n            //Administrators role\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_role` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `name` varchar(50) NOT NULL,\n                  PRIMARY KEY (`id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Administrators role\n            $Role = new erLhcoreClassModelRole();\n            $Role->name = 'Administrators';\n            erLhcoreClassRole::getSession()->save($Role);\n\n            // Operators role\n            $RoleOperators = new erLhcoreClassModelRole();\n            $RoleOperators->name = 'Operators';\n            erLhcoreClassRole::getSession()->save($RoleOperators);\n\n            //Assing group role\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_grouprole` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `group_id` int(11) NOT NULL,\n                  `role_id` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `group_id` (`role_id`,`group_id`),\n                  KEY `group_id_primary` (`group_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Assign admin role to admin group\n            $GroupRole = new erLhcoreClassModelGroupRole();\n            $GroupRole->group_id =$GroupData->id;\n            $GroupRole->role_id = $Role->id;\n            erLhcoreClassRole::getSession()->save($GroupRole);\n\n            // Assign operators role to operators group\n            $GroupRoleOperators = new erLhcoreClassModelGroupRole();\n            $GroupRoleOperators->group_id =$GroupDataOperators->id;\n            $GroupRoleOperators->role_id = $RoleOperators->id;\n            erLhcoreClassRole::getSession()->save($GroupRoleOperators);\n\n            // Users\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `username` varchar(80) NOT NULL,\n                  `password` varchar(200) NOT NULL,\n                  `email` varchar(100) NOT NULL,\n                  `time_zone` varchar(100) NOT NULL,\n                  `name` varchar(100) NOT NULL,\n                  `surname` varchar(100) NOT NULL,\n                  `avatar` varchar(150) NOT NULL,\n                  `filepath` varchar(200) NOT NULL,\n                  `filename` varchar(200) NOT NULL,\n                  `job_title` varchar(100) NOT NULL,\n                  `departments_ids` text NOT NULL,\n                  `chat_nickname` varchar(100) NOT NULL,\n                  `xmpp_username` varchar(200) NOT NULL,\n                  `session_id` varchar(40) NOT NULL,\n                  `operation_admin` text NOT NULL,\n                  `skype` varchar(50) NOT NULL,\n                  `exclude_autoasign` tinyint(1) NOT NULL,\n                  `disabled` tinyint(4) NOT NULL,\n                  `hide_online` tinyint(1) NOT NULL,\n                  `all_departments` tinyint(1) NOT NULL,\n                  `invisible_mode` tinyint(1) NOT NULL,\n                  `inactive_mode` tinyint(1) NOT NULL,\n                  `rec_per_req` tinyint(1) NOT NULL,\n                  `auto_accept` tinyint(1) NOT NULL,\n                  `max_active_chats` int(11) NOT NULL,\n                  `cache_version` int(11) unsigned NOT NULL DEFAULT '0',\n                  `pswd_updated` int(11) NOT NULL,\n                  `attr_int_1` int(11) NOT NULL,\n                  `attr_int_2` int(11) NOT NULL,\n                  `attr_int_3` int(11) NOT NULL,\n                   `force_logout` tinyint(1) unsigned NOT NULL DEFAULT '0',\n                  `llogin` bigint(20) unsigned NOT NULL DEFAULT '0',\n                  `always_on` tinyint(1) NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`id`),\n                  KEY `hide_online` (`hide_online`),\n                  KEY `rec_per_req` (`rec_per_req`),\n                  KEY `email` (`email`),\n                  KEY `disabled` (`disabled`),\n                  KEY `xmpp_username` (`xmpp_username`(191))\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $UserData = new erLhcoreClassModelUser();\n\n            $UserData->setPassword($form->AdminPassword);\n            $UserData->email   = $form->AdminEmail;\n            $UserData->name    = $form->AdminName;\n            $UserData->surname = $form->AdminSurname;\n            $UserData->username = $form->AdminUsername;\n            $UserData->all_departments = 1;\n            $UserData->departments_ids = 0;\n            $UserData->pswd_updated = time();\n\n            erLhcoreClassUser::getSession()->save($UserData);\n\n            // User departaments\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_userdep` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `user_id` int(11) NOT NULL,\n                  `dep_id` int(11) NOT NULL,\n                  `last_activity` int(11) NOT NULL,\n                  `lastd_activity` int(11) NOT NULL DEFAULT '0',\n                  `exclude_autoasign` tinyint(1) NOT NULL DEFAULT '0',\n                  `hide_online` int(11) NOT NULL,\n                  `last_accepted` int(11) NOT NULL DEFAULT '0',\n                  `active_chats` int(11) NOT NULL DEFAULT '0',\n                  `pending_chats` int(11) NOT NULL DEFAULT '0',\n                  `inactive_chats` int(11) NOT NULL DEFAULT '0',\n                  `max_chats` int(11) NOT NULL DEFAULT '0',\n                  `type` int(11) NOT NULL DEFAULT '0',\n                  `ro` tinyint(1) NOT NULL DEFAULT '0',\n                  `hide_online_ts` int(11) NOT NULL DEFAULT '0',\n                  `dep_group_id` int(11) NOT NULL DEFAULT '0',\n                  `always_on` tinyint(1) NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`id`),\n                  KEY `last_activity_hide_online_dep_id` (`last_activity`,`hide_online`,`dep_id`),\n                  KEY `dep_id` (`dep_id`),\n                  KEY `user_id_type` (`user_id`,`type`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n            // Insert record to departament instantly\n            $db->query(\"INSERT INTO `lh_userdep` (`user_id`,`dep_id`,`last_activity`,`hide_online`,`last_accepted`,`active_chats`,`type`,`dep_group_id`,`exclude_autoasign`) VALUES ({$UserData->id},0,0,0,0,0,0,0,0)\");\n\n            $db->query(\"CREATE TABLE `lh_group_work` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `group_id` int(11) NOT NULL, `group_work_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `group_id` (`group_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Transfer chat\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_transfer` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `chat_id` int(11) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `transfer_user_id` int(11) NOT NULL,\n\t\t\t\t  `from_dep_id` int(11) NOT NULL,\n\t\t\t\t  `ctime` int(11) NOT NULL,\n\t\t\t\t  `transfer_to_user_id` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `transfer_user_id_dep_id` (`transfer_user_id`,`dep_id`),\n\t\t\t\t  KEY `transfer_to_user_id` (`transfer_to_user_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Remember user table\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users_remember` (\n\t\t\t\t `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t `user_id` int(11) NOT NULL,\n\t\t\t\t `mtime` int(11) NOT NULL,\n\t\t\t\t PRIMARY KEY (`id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // API table\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_rest_api_key` (\n                    `id` int(11) NOT NULL AUTO_INCREMENT,\n                    `api_key` varchar(50) NOT NULL,\n                    `user_id` int(11) NOT NULL DEFAULT '0',\n                    `active` int(11) NOT NULL DEFAULT '0',\n                    `ip_restrictions` varchar(250) NOT NULL,\n                    PRIMARY KEY (`id`),\n                    KEY `api_key` (`api_key`),\n                    KEY `user_id` (`user_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_rest_api_key_remote` ( `id` int(11) NOT NULL AUTO_INCREMENT, `api_key` varchar(50) NOT NULL, `username` varchar(50) NOT NULL, `name` varchar(50) NOT NULL, `host` varchar(250) NOT NULL, `active` tinyint(1) NOT NULL DEFAULT '0', `position` int(11) NOT NULL DEFAULT '0', PRIMARY KEY (`id`), KEY `active` (`active`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n            $db->query(\"CREATE TABLE `lh_abstract_chat_variable` ( `id` int(11) NOT NULL AUTO_INCREMENT, `var_name` varchar(255) NOT NULL, `var_identifier` varchar(255) NOT NULL, `inv` tinyint(1) NOT NULL, `change_message` varchar(250) NOT NULL, `type` tinyint(1) NOT NULL, `persistent` tinyint(1) NOT NULL, `js_variable` varchar(255) NOT NULL, `dep_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `dep_id` (`dep_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_webhook` ( `id` int(11) NOT NULL AUTO_INCREMENT, `event` varchar(50) NOT NULL, `bot_id_alt` int(11) NOT NULL DEFAULT '0', `trigger_id_alt` int(11) NOT NULL DEFAULT '0',`bot_id` int(11) NOT NULL, `trigger_id` int(11) NOT NULL, `disabled` tinyint(1) NOT NULL, `configuration` longtext NOT NULL, `type` tinyint(1) NOT NULL DEFAULT 0, PRIMARY KEY (`id`), KEY `event_disabled` (`event`,`disabled`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_incoming_webhook` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL,`identifier` varchar(50) NOT NULL, `scope` varchar(50) NOT NULL, `dep_id` int(11) NOT NULL, `disabled` tinyint(1) NOT NULL, `configuration` longtext NOT NULL, PRIMARY KEY (`id`), KEY `identifier` (`identifier`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_chat_incoming` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `utime` bigint(20) NOT NULL, `incoming_id` int(11) NOT NULL, `payload` longtext NOT NULL, `chat_external_id` varchar(50) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`),  KEY `incoming_ext_id` (`incoming_id`,`chat_external_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_abstract_chat_column` (`id` int(11) NOT NULL AUTO_INCREMENT,`column_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,`variable` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL, `position` int(11) NOT NULL, `enabled` tinyint(1) NOT NULL, `online_enabled` tinyint(1) NOT NULL, `chat_enabled` tinyint(1) NOT NULL, `conditions` text COLLATE utf8mb4_unicode_ci NOT NULL,`column_icon` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL, `column_identifier` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL, PRIMARY KEY (`id`), KEY `enabled` (`enabled`), KEY `online_enabled` (`online_enabled`), KEY `chat_enabled` (`chat_enabled`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_abstract_chat_priority` (`id` int(11) NOT NULL AUTO_INCREMENT,`value` text COLLATE utf8mb4_unicode_ci NOT NULL,`dep_id` int(11) NOT NULL, `dest_dep_id` int(11) NOT NULL DEFAULT 0, `sort_priority` int(11) NOT NULL DEFAULT 0,`priority` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `dep_id` (`dep_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_canned_msg_dep` (\n                                 `id` bigint(20) NOT NULL AUTO_INCREMENT,\n                                 `canned_id` int(11) NOT NULL,\n                                 `dep_id` int(11) NOT NULL,\n                                 PRIMARY KEY (`id`),\n                                 KEY `canned_id` (`canned_id`),\n                                 KEY `dep_id` (`dep_id`)\n                            ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_canned_msg_subject` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `canned_id` int(11) NOT NULL,\n    `subject_id` int(11) NOT NULL,\n    PRIMARY KEY (`id`),\n    KEY `canned_id` (`canned_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Session\n            $db->query(\"CREATE TABLE `lh_users_session` (\n                      `id` int(11) NOT NULL AUTO_INCREMENT,\n                      `token` varchar(40) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `device_type` int(11) NOT NULL,\n                      `device_token` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `user_id` int(11) NOT NULL,\n                      `created_on` int(11) NOT NULL,\n                      `updated_on` int(11) NOT NULL,\n                      `expires_on` int(11) NOT NULL,\n                      `notifications_status` int(11) NOT NULL DEFAULT 1,\n                      `error` int(11) NOT NULL DEFAULT 0,\n                      `last_error` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      PRIMARY KEY (`id`),\n                      KEY `token` (`token`),\n                      KEY `device_token_device_type_v2` (`device_token`(191),`device_type`),\n                      KEY `error` (`error`)\n                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Chat messages\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_msg` (\n\t\t\t\t  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `msg` longtext NOT NULL,\n\t\t\t\t  `meta_msg` longtext NOT NULL,\n\t\t\t\t  `time` int(11) NOT NULL,\n\t\t\t\t  `chat_id` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `user_id` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `name_support` varchar(100) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `chat_id_id` (`chat_id`, `id`),\n\t\t\t\t  KEY `user_id` (`user_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Forgot password table\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_forgotpasswordhash` (\n                `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,\n                `user_id` INT NOT NULL ,\n                `hash` VARCHAR( 40 ) NOT NULL ,\n                `created` INT NOT NULL\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // User groups table\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_groupuser` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `group_id` int(11) NOT NULL,\n                  `user_id` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `group_id` (`group_id`),\n                  KEY `user_id` (`user_id`),\n                  KEY `group_id_2` (`group_id`,`user_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Assign admin user to admin group\n            $GroupUser = new erLhcoreClassModelGroupUser();\n            $GroupUser->group_id = $GroupData->id;\n            $GroupUser->user_id = $UserData->id;\n            erLhcoreClassUser::getSession()->save($GroupUser);\n\n            //Assign default role functions\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_rolefunction` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `role_id` int(11) NOT NULL,\n                  `module` varchar(100) NOT NULL,\n                  `function` varchar(100) NOT NULL,\n                  `limitation` text NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `role_id` (`role_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Admin role and function\n            $RoleFunction = new erLhcoreClassModelRoleFunction();\n            $RoleFunction->role_id = $Role->id;\n            $RoleFunction->module = '*';\n            $RoleFunction->function = '*';\n            erLhcoreClassRole::getSession()->save($RoleFunction);\n\n            // Operators rules and functions\n            $permissionsArray = array(\n                array('module' => 'lhuser',  'function' => 'selfedit'),\n                array('module' => 'lhuser',  'function' => 'changeonlinestatus'),\n                array('module' => 'lhuser',  'function' => 'changeskypenick'),\n                array('module' => 'lhuser',  'function' => 'personalcannedmsg'),\n                array('module' => 'lhuser',  'function' => 'change_visibility_list'),\n                array('module' => 'lhuser',  'function' => 'see_assigned_departments'),\n                array('module' => 'lhuser',  'function' => 'canseedepartmentstats'),\n                array('module' => 'lhchat',  'function' => 'use'),\n                array('module' => 'lhchat',  'function' => 'open_all'),\n                array('module' => 'lhchat',  'function' => 'chattabschrome'),\n                array('module' => 'lhchat',  'function' => 'singlechatwindow'),\n                array('module' => 'lhchat',  'function' => 'allowopenremotechat'),\n                array('module' => 'lhchat',  'function' => 'writeremotechat'),\n                array('module' => 'lhchat',  'function' => 'allowchattabs'),\n                array('module' => 'lhchat',  'function' => 'use_onlineusers'),\n                array('module' => 'lhchat',  'function' => 'take_screenshot'),\n                array('module' => 'lhfront', 'function' => 'use'),\n                array('module' => 'lhchat', 'function' => 'prev_chats'),\n                array('module' => 'lhsystem','function' => 'use'),\n                array('module' => 'lhcannedmsg', 'function' => 'see_global'),\n                array('module' => 'lhtranslation','function' => 'use'),\n                array('module' => 'lhchat',  'function' => 'allowblockusers'),\n                array('module' => 'lhsystem','function' => 'generatejs'),\n                array('module' => 'lhsystem','function' => 'changelanguage'),\n                array('module' => 'lhchat',  'function' => 'allowredirect'),\n                array('module' => 'lhchat',  'function' => 'allowtransfer'),\n                array('module' => 'lhchat',  'function' => 'allowtransferdirectly'),\n                array('module' => 'lhchat',  'function' => 'administratecannedmsg'),\n                array('module' => 'lhchat',  'function' => 'sees_all_online_visitors'),\n                array('module' => 'lhpermission',   'function' => 'see_permissions'),\n                array('module' => 'lhquestionary',  'function' => 'manage_questionary'),\n                array('module' => 'lhfaq',   \t\t'function' => 'manage_faq'),\n                array('module' => 'lhchatbox',   \t'function' => 'manage_chatbox'),\n                array('module' => 'lhbrowseoffer',  'function' => 'manage_bo'),\n                array('module' => 'lhxml',   \t\t'function' => '*'),\n                array('module' => 'lhcobrowse',   \t'function' => 'browse'),\n                array('module' => 'lhfile',   \t\t'function' => 'use_operator'),\n                array('module' => 'lhfile',   \t\t'function' => 'file_delete_chat'),\n                array('module' => 'lhstatistic',   \t'function' => 'use'),\n                array('module' => 'lhspeech', 'function' => 'changedefaultlanguage'),\n                array('module' => 'lhspeech', 'function' => 'use'),\n                array('module' => 'lhcannedmsg', 'function' => 'use'),\n                array('module' => 'lhtheme', 'function' => 'personaltheme'),\n                array('module' => 'lhuser', 'function' => 'userlistonline'),\n                array('module' => 'lhspeech', 'function' => 'change_chat_recognition'),\n                array('module' => 'lhgroupchat', 'function' => 'use'),\n                array('module' => 'lhuser', 'function' => 'see_all_group_users'),\n                array('module' => 'lhvoicevideo', 'function' => 'use'),\n            );\n\n            foreach ($permissionsArray as $paramsPermission) {\n                $RoleFunctionOperator = new erLhcoreClassModelRoleFunction();\n                $RoleFunctionOperator->role_id = $RoleOperators->id;\n                $RoleFunctionOperator->module = $paramsPermission['module'];\n                $RoleFunctionOperator->function = $paramsPermission['function'];\n                erLhcoreClassRole::getSession()->save($RoleFunctionOperator);\n            }\n\n            $cfgSite = erConfigClassLhConfig::getInstance();\n            $cfgSite->setSetting( 'site', 'installed', true);\n            $cfgSite->setSetting( 'site', 'templatecache', true);\n            $cfgSite->setSetting( 'site', 'templatecompile', true);\n            $cfgSite->setSetting( 'site', 'modulecompile', true);\n            $cfgSite->setSetting( 'site', 'force_virtual_host', $form->ForceVirtualHost == 1);\n            $cfgSite->setSetting( 'webhooks', 'enabled', isset($form->WebhooksEnabled) &&$form->WebhooksEnabled == 1);\n            $cfgSite->setSetting( 'webhooks', 'worker', isset($form->WebhooksWorker) ? $form->WebhooksWorker : 'http');\n            \n            if ($form->Extensions != '') {\n                $extensions = explode(',',str_replace(' ','',$form->Extensions));\n                if (!empty($extensions) ) {\n                    $cfgSite->setSetting( 'site', 'extensions', $extensions);\n                }\n            }\n\n            if ($form->ApacheUserGroupName != '') {\n                $cfgSite->setSetting( 'site', 'default_group', $form->ApacheUserGroupName);\n            }\n\n            if ($form->ApacheUserName != '') {\n                $cfgSite->setSetting( 'site', 'default_user', $form->ApacheUserName);\n            }\n\n            if ($form->TimeZone != '') {\n                $cfgSite->setSetting( 'site', 'time_zone', $form->TimeZone);\n            }\n\n            if (isset($form->DefaultConfigs) && is_array($form->DefaultConfigs)) {\n                foreach ($form->DefaultConfigs as $identifier => $value) {\n                    $sql = \"UPDATE `lh_chat_config` SET `value` = :value WHERE `identifier` = :identifier\";\n                    $stmt = $db->prepare($sql);\n                    $stmt->bindValue(':value',$value);\n                    $stmt->bindValue(':identifier',$identifier);\n                    $stmt->execute();\n                }\n            }\n\n            $smtpData = erLhcoreClassModelChatConfig::fetch('smtp_data');\n\n            $data = (array)$smtpData->data;\n            $data['default_from'] = 'info@'.$form->Domain;\n            $data['default_from_name'] = trim($form->AdminName . ' ' . $form->AdminSurname);\n            $data['sender'] = 'info@'.$form->Domain;\n\n            $smtpData->value = serialize($data);\n            $smtpData->saveThis();\n\n            return true;\n        } else {\n            return $Errors;\n        }\n    }\n\n    function step4() {\n        $cfgSite = erConfigClassLhConfig::getInstance();\n        $cfgSite->save();\n        $msg = \"Installation is complete. You can start by adding users and departments\";\n        syslog(LOG_DEBUG, $msg);\n    }\n\n    function print_errors($errors) {\n        foreach($errors as $error) {\n            syslog(LOG_ERR, \"ERROR: \".$error);\n        }\n        exit(-1);\n    }\n\n    private function file_perms($file, $octal = true) {\n        if(!file_exists($file)) return false;\n\n        $perms = fileperms($file);\n\n        $cut = $octal ? 2 : 3;\n\n        return substr(decoct($perms), $cut);\n    }\n    private function file_is_writable($directories, $preffix = '', &$Errors) {\n        foreach ($directories as $directory) {\n            $error = false;\n            syslog(LOG_DEBUG, \"Evaluate $directory if writable\");\n            $owner = fileowner($preffix.$directory);\n            $group = filegroup($preffix.$directory);\n            $permission = $this->file_perms($preffix.$directory);\n            if ($permission[2] == 7) {\n                continue;\n            }\n            if ($owner == 33 and $permission[0] != 7) {\n                $error = true;\n            }\n            if ($group == 33 and $permission[1] != 7) {\n                $error = true;\n            }\n            if ($error) {\n                $Errors[] = $preffix.$directory.\" is not writable\";\n            }\n        }\n    }\n\n    private function _scandir($directory) {\n        $directories = scandir($directory);\n        $directories = array_diff($directories, ['.']);\n        $directories = array_diff($directories, ['..']);\n        return $directories;\n    }\n}\n", "<?php \r\n$trackDomain = erLhcoreClassModelChatConfig::fetch('track_domain')->current_value;\r\n$disableHTML5Storage = (int)erLhcoreClassModelChatConfig::fetch('disable_html5_storage')->current_value;\r\n?>\r\n\r\n/*! Cookies.js - 0.4.0; Copyright (c) 2014, Scott Hamper; http://www.opensource.org/licenses/MIT */\r\n(function(e){\"use strict\";var b=function(a,d,c){return 1===arguments.length?b.get(a):b.set(a,d,c)};b._document=document;b._navigator=navigator;b.defaults={path:\"/\"};b.get=function(a){b._cachedDocumentCookie!==b._document.cookie&&b._renewCache();return b._cache[a]};b.set=function(a,d,c){c=b._getExtendedOptions(c);c.expires=b._getExpiresDate(d===e?-1:c.expires);b._document.cookie=b._generateCookieString(a,d,c);return b};b.expire=function(a,d){return b.set(a,e,d)};b._getExtendedOptions=function(a){return{path:a&& a.path||b.defaults.path,domain:a&&a.domain||b.defaults.domain,expires:a&&a.expires||b.defaults.expires,secure:a&&a.secure!==e?a.secure:b.defaults.secure}};b._isValidDate=function(a){return\"[object Date]\"===Object.prototype.toString.call(a)&&!isNaN(a.getTime())};b._getExpiresDate=function(a,d){d=d||new Date;switch(typeof a){case \"number\":a=new Date(d.getTime()+1E3*a);break;case \"string\":a=new Date(a)}if(a&&!b._isValidDate(a))throw Error(\"`expires` parameter cannot be converted to a valid Date instance\"); return a};b._generateCookieString=function(a,b,c){a=a.replace(/[^#$&+\\^`|]/g,encodeURIComponent);a=a.replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\");b=(b+\"\").replace(/[^!#$&-+\\--:<-\\[\\]-~]/g,encodeURIComponent);c=c||{};a=a+\"=\"+b+(c.path?\";path=\"+c.path:\"\");a+=c.domain?\";domain=\"+c.domain:\"\";a+=c.expires?\";expires=\"+c.expires.toUTCString():\"\";return a+=c.secure?\";secure\":\"\"};b._getCookieObjectFromString=function(a){var d={};a=a?a.split(\"; \"):[];for(var c=0;c<a.length;c++){var f=b._getKeyValuePairFromCookieString(a[c]); d[f.key]===e&&(d[f.key]=f.value)}return d};b._getKeyValuePairFromCookieString=function(a){var b=a.indexOf(\"=\"),b=0>b?a.length:b;try {return{key:decodeURIComponent(a.substr(0,b)),value:decodeURIComponent(a.substr(b+1))}} catch(e) {return{key:a.substr(0,b),value:a.substr(b+1)}}};b._renewCache=function(){b._cache=b._getCookieObjectFromString(b._document.cookie);b._cachedDocumentCookie=b._document.cookie};b._areEnabled=function(){var a=\"1\"===b.set(\"cookies_lhc.js\",1).get(\"cookies_lhc.js\");b.expire(\"cookies_lhc.js\");return a};b.enabled=b._areEnabled();window.lhc_Cookies=b})();\r\n\r\nlhc_Cookies.defaults = {path:\"/\",secure: <?php erLhcoreClassModelChatConfig::fetch('use_secure_cookie')->current_value == 1 ? print 'true' : print 'false' ?>};\r\n\r\n<?php include(erLhcoreClassDesign::designtpl('lhbrowseoffer/getstatus/options_variable.tpl.php')); ?>\r\n\r\nvar lhc_BrowseOffer = {\r\n\tJSON : {\r\n            parse: window.JSON && (window.JSON.parse || window.JSON.decode) || String.prototype.evalJSON && function(str){return String(str).evalJSON();} || $.parseJSON || $.evalJSON,\r\n            stringify:  Object.toJSON || window.JSON && (window.JSON.stringify || window.JSON.encode) || $.toJSON\r\n    },\r\n    canOpenOffer : true,\r\n    offset_data : {},    \r\n\tcookieData : {},\r\n\tcookieDataPers : {'of':[]},\r\n\tdomain : false, \r\n\t\r\n\taddCss : function(css_content) {\r\n        var head = document.getElementsByTagName('head')[0];\r\n        var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n\r\n        if(style.styleSheet) {\r\n          style.styleSheet.cssText = css_content;\r\n        } else {\r\n          rules = document.createTextNode(css_content);\r\n          style.appendChild(rules);\r\n        };\r\n        head.appendChild(style);\r\n   },\r\n\r\n   appendHTML : function(htmlStr) {\r\n        var frag = document.createDocumentFragment(),\r\n            temp = document.createElement('div');\r\n        temp.innerHTML = htmlStr;\r\n        while (temp.firstChild) {\r\n            frag.appendChild(temp.firstChild);\r\n        };\r\n        return frag;\r\n    },\r\n\r\n\tremoveById : function(EId)\r\n    {\r\n        return(EObj=document.getElementById(EId))?EObj.parentNode.removeChild(EObj):false;\r\n    },\r\n\r\n    hide : function() {\r\n        var th = document.getElementsByTagName('head')[0];\r\n        var s = document.createElement('script');\r\n        s.setAttribute('type','text/javascript');\r\n        s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('browseoffer/widgetclosed')?>/<?php echo $invite->hash?>');\r\n        th.appendChild(s);\r\n        this.removeById('lhc_container_browseoffer');\r\n        this.removeById('lhc_browseoffer-bg');\r\n        this.cookieDataPers.of.push(<?php echo $invite->id?>);\r\n        this.storePersistenCookie();\r\n        this.addCookieAttributePersistent('was_opened',true);\r\n     \r\n        if (<?php echo $browseofferOptionsVariable;?>.closeCallback) {\r\n        \t<?php echo $browseofferOptionsVariable;?>.closeCallback(<?php echo $invite->callback_content?>);\r\n        }            \r\n    },\r\n    \t\t\r\n\tshowBrowseOffer : function() {\r\n\r\n   \t\t  this.removeById('lhc_container_browseoffer');\r\n\t\t\r\n   \t\t  <?php if ($invite->custom_iframe_url != '' || $invite->lhc_iframe_content == 1) : ?>\r\n   \t\t  this.iframe_html = '<iframe id=\"lhcbrowseoffer_iframe\" allowTransparency=\"true\" scrolling=\"no\" frameborder=\"0\" ' +\r\n                       ' src=\"<?php if ($invite->custom_iframe_url != '') : ?><?php echo $invite->custom_iframe_url ?><?php else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('browseoffer/widget')?>/<?php echo $invite->hash?><?php endif;?>\"' +                    \r\n                       ' style=\"width: 100%; height: <?php echo $size_height?>px;\"></iframe>';\r\n         <?php else : ?>\r\n         this.iframe_html = \"<div id=\\\"lhcbrowseoffer_content\\\">\"+<?php echo json_encode($invite->content)?>+\"</div>\";\r\n         <?php endif; ?>\r\n          \t  \r\n         this.iframe_html = '<div id=\"lhc_container_browseoffer\">' +\r\n                              '<div id=\"lhc_browseoffer_header\"><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" id=\"lhc_browseoffer_close\">&#xd7;</a></div>' +\r\n                              this.iframe_html + '</div>';\r\n\r\n         raw_css = \"#lhcbrowseoffer_content{padding:5px;}#lhcbrowseoffer_content iframe,#lhcbrowseoffer_content video{width:100%;}\\n#lhc_browseoffer-bg{position: fixed;height: 100%;width: 100%;background: #000;background: rgba(0, 0, 0, 0.45);z-index: 99;display: none;top: 0;left: 0;};#lhc_container_browseoffer * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial\\;line-height:100%\\;font-size:12px\\;box-sizing: content-box\\;-moz-box-sizing:content-box;padding:0;margin:0;}\\n#lhc_container_browseoffer img {border:0;}\\n#lhc_browseoffer_title{float:left;}\\n#lhc_browseoffer_header{position:relative;z-index:9990;height:24px;overflow:hidden;background-color:#FFF;text-align:right;clear:both;padding:2px;}\\n#lhc_browseoffer_close,#lhc-copyright-link{color: #ccc;text-decoration:none;font-family:arial;line-height:0.5;font-size:42px;font-weight: bold;padding:2px;float:right;width:24px;height:24px;}\\n#lhc-copyright-link{font-size:12px}\\n#lhc_browseoffer_close:hover{color:#575555}\\n#lhc_container_browseoffer {box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);max-width:95%;max-height:95%;width:<?php echo $size,$units?>;top:-100%;margin-top:-100%;left:50%;-webkit-transition: top 1s ease-in-out;-moz-transition: top 1s ease-in-out;  -o-transition: top 1s ease-in-out;  transition: top 1s ease-in-out;overflow: hidden;margin-left:-100%;background-color:#FFF\\;\\nz-index:9990;\\n position: fixed;border:1px solid #CCC;-moz-user-select:none; }\\n#lhc_container_browseoffer iframe{transition-property: height;transition-duration: 0.4s;-webkit-transition: height 0.4s ease-in-out;transition: height 0.4s;}\\n\";\r\n\r\n         if (!this.cssWasAdded) {\r\n          \t\tthis.cssWasAdded = true;\r\n          \t\tthis.addCss(raw_css);\r\n\t\t };\r\n\r\n         var fragment = this.appendHTML(this.iframe_html);\r\n         document.body.insertBefore(fragment, document.body.childNodes[0]);\r\n\r\n         var lhc_obj = this;\r\n         document.getElementById('lhc_browseoffer_close').onclick = function() { lhc_obj.hide(); return false; };\r\n         setTimeout(function(){\r\n         \tlhc_obj.reflow();         \t       \t\r\n         },500);\r\n         \r\n         var th = document.getElementsByTagName('head')[0];\r\n         var s = document.createElement('script');\r\n         s.setAttribute('type','text/javascript');\r\n         s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('browseoffer/addhit')?>/<?php echo $invite->hash?>');\r\n         th.appendChild(s);\r\n         \r\n         if (<?php echo $browseofferOptionsVariable;?>.openCallback) {\r\n        \t<?php echo $browseofferOptionsVariable;?>.openCallback(<?php echo $invite->callback_content?>);\r\n         }          \r\n    },\r\n\r\n   reflow : function(){\r\n   \t\t\t<?php if ($showoverlay === true) : ?>\r\n   \t\t\tthis.removeById('lhc_browseoffer-bg');\r\n         \tvar fragment = this.appendHTML('<div id=\"lhc_browseoffer-bg\" style=\"display: block;\"></div>');\r\n         \tdocument.body.insertBefore(fragment, document.body.childNodes[0]);\r\n         \t<?php endif; ?>\r\n         \tdocument.getElementById('lhc_container_browseoffer').style.marginTop = '-'+(document.getElementById('lhc_container_browseoffer').offsetHeight/2)+'px';\r\n         \tdocument.getElementById('lhc_container_browseoffer').style.marginLeft = '-<?php if ($units == '%') : ?><?php echo $size/2,$units?><?php else : ?>'+(document.getElementById('lhc_container_browseoffer').offsetWidth/2)+'px<?php endif;?>';\r\n         \tdocument.getElementById('lhc_container_browseoffer').style.top = '50%';  \r\n   },\r\n\r\n   handleMessage : function(e) {\r\n    \tvar action = e.data.split(':')[0];\r\n    \tif (action == 'lhc_sizing_browseoffer' || action == 'lhc_sizing_faq_embed') {\r\n    \t\tvar height = e.data.split(':')[1];\r\n    \t\tvar elementObject = document.getElementById('lhcbrowseoffer_iframe');\r\n    \t\tvar iframeContainer = document.getElementById('lhc_container_browseoffer');\r\n    \t\telementObject.height = height;\r\n    \t\telementObject.style.height = height+'px';\r\n    \t\tiframeContainer.className = iframeContainer.className;\r\n    \t\tiframeContainer.style.height = (parseInt(height)+26)+'px';    \t\t\r\n    \t\tlhc_BrowseOffer.reflow();    \t\t\r\n    \t};\r\n   },  \r\n     \r\n   getCookieDomain : function(domain) {    \r\n    \t if (this.domain !== false) {\r\n    \t \treturn this.domain;\r\n    \t } else {    \r\n\t    \tif (typeof <?php echo $browseofferOptionsVariable;?> != 'undefined' && typeof <?php echo $browseofferOptionsVariable;?>.domain != 'undefined') {\r\n\t    \t\tthis.domain = '.'+<?php echo $browseofferOptionsVariable;?>.domain;\r\n\t    \t} else {    \t\r\n\t    \t\tthis.domain = '.'+document.location.hostname.replace(/^(?:[a-z0-9\\-\\.]+\\.)??([a-z0-9\\-]+)?(\\.com|\\.net|\\.org|\\.biz|\\.ws|\\.in|\\.me|\\.co\\.uk|\\.co|\\.org\\.uk|\\.ltd\\.uk|\\.plc\\.uk|\\.me\\.uk|\\.edu|\\.mil|\\.br\\.com|\\.cn\\.com|\\.eu\\.com|\\.hu\\.com|\\.no\\.com|\\.qc\\.com|\\.sa\\.com|\\.se\\.com|\\.se\\.net|\\.us\\.com|\\.uy\\.com|\\.ac|\\.co\\.ac|\\.gv\\.ac|\\.or\\.ac|\\.ac\\.ac|\\.af|\\.am|\\.as|\\.at|\\.ac\\.at|\\.co\\.at|\\.gv\\.at|\\.or\\.at|\\.asn\\.au|\\.com\\.au|\\.edu\\.au|\\.org\\.au|\\.net\\.au|\\.id\\.au|\\.be|\\.ac\\.be|\\.adm\\.br|\\.adv\\.br|\\.am\\.br|\\.arq\\.br|\\.art\\.br|\\.bio\\.br|\\.cng\\.br|\\.cnt\\.br|\\.com\\.br|\\.ecn\\.br|\\.eng\\.br|\\.esp\\.br|\\.etc\\.br|\\.eti\\.br|\\.fm\\.br|\\.fot\\.br|\\.fst\\.br|\\.g12\\.br|\\.gov\\.br|\\.ind\\.br|\\.inf\\.br|\\.jor\\.br|\\.lel\\.br|\\.med\\.br|\\.mil\\.br|\\.net\\.br|\\.nom\\.br|\\.ntr\\.br|\\.odo\\.br|\\.org\\.br|\\.ppg\\.br|\\.pro\\.br|\\.psc\\.br|\\.psi\\.br|\\.rec\\.br|\\.slg\\.br|\\.tmp\\.br|\\.tur\\.br|\\.tv\\.br|\\.vet\\.br|\\.zlg\\.br|\\.br|\\.ab\\.ca|\\.bc\\.ca|\\.mb\\.ca|\\.nb\\.ca|\\.nf\\.ca|\\.ns\\.ca|\\.nt\\.ca|\\.on\\.ca|\\.pe\\.ca|\\.qc\\.ca|\\.sk\\.ca|\\.yk\\.ca|\\.ca|\\.cc|\\.ac\\.cn|\\.com\\.cn|\\.edu\\.cn|\\.gov\\.cn|\\.org\\.cn|\\.bj\\.cn|\\.sh\\.cn|\\.tj\\.cn|\\.cq\\.cn|\\.he\\.cn|\\.nm\\.cn|\\.ln\\.cn|\\.jl\\.cn|\\.hl\\.cn|\\.js\\.cn|\\.zj\\.cn|\\.ah\\.cn|\\.gd\\.cn|\\.gx\\.cn|\\.hi\\.cn|\\.sc\\.cn|\\.gz\\.cn|\\.yn\\.cn|\\.xz\\.cn|\\.sn\\.cn|\\.gs\\.cn|\\.qh\\.cn|\\.nx\\.cn|\\.xj\\.cn|\\.tw\\.cn|\\.hk\\.cn|\\.mo\\.cn|\\.cn|\\.cx|\\.cz|\\.de|\\.dk|\\.fo|\\.com\\.ec|\\.tm\\.fr|\\.com\\.fr|\\.asso\\.fr|\\.presse\\.fr|\\.fr|\\.gf|\\.gs|\\.co\\.il|\\.net\\.il|\\.ac\\.il|\\.k12\\.il|\\.gov\\.il|\\.muni\\.il|\\.ac\\.in|\\.co\\.in|\\.org\\.in|\\.ernet\\.in|\\.gov\\.in|\\.net\\.in|\\.res\\.in|\\.is|\\.it|\\.ac\\.jp|\\.co\\.jp|\\.go\\.jp|\\.or\\.jp|\\.ne\\.jp|\\.ac\\.kr|\\.co\\.kr|\\.go\\.kr|\\.ne\\.kr|\\.nm\\.kr|\\.or\\.kr|\\.li|\\.lt|\\.lu|\\.asso\\.mc|\\.tm\\.mc|\\.com\\.mm|\\.org\\.mm|\\.net\\.mm|\\.edu\\.mm|\\.gov\\.mm|\\.ms|\\.nl|\\.no|\\.nu|\\.pl|\\.ro|\\.org\\.ro|\\.store\\.ro|\\.tm\\.ro|\\.firm\\.ro|\\.www\\.ro|\\.arts\\.ro|\\.rec\\.ro|\\.info\\.ro|\\.nom\\.ro|\\.nt\\.ro|\\.se|\\.si|\\.com\\.sg|\\.org\\.sg|\\.net\\.sg|\\.gov\\.sg|\\.sk|\\.st|\\.tf|\\.ac\\.th|\\.co\\.th|\\.go\\.th|\\.mi\\.th|\\.net\\.th|\\.or\\.th|\\.tm|\\.to|\\.com\\.tr|\\.edu\\.tr|\\.gov\\.tr|\\.k12\\.tr|\\.net\\.tr|\\.org\\.tr|\\.com\\.tw|\\.org\\.tw|\\.net\\.tw|\\.ac\\.uk|\\.uk\\.com|\\.uk\\.net|\\.gb\\.com|\\.gb\\.net|\\.vg|\\.sh|\\.kz|\\.ch|\\.info|\\.ua|\\.gov|\\.name|\\.pro|\\.ie|\\.hk|\\.com\\.hk|\\.org\\.hk|\\.net\\.hk|\\.edu\\.hk|\\.us|\\.tk|\\.cd|\\.by|\\.ad|\\.lv|\\.eu\\.lv|\\.bz|\\.es|\\.jp|\\.cl|\\.ag|\\.mobi|\\.eu|\\.co\\.nz|\\.org\\.nz|\\.net\\.nz|\\.maori\\.nz|\\.iwi\\.nz|\\.io|\\.la|\\.md|\\.sc|\\.sg|\\.vc|\\.tw|\\.travel|\\.my|\\.se|\\.tv|\\.pt|\\.com\\.pt|\\.edu\\.pt|\\.asia|\\.fi|\\.com\\.ve|\\.net\\.ve|\\.fi|\\.org\\.ve|\\.web\\.ve|\\.info\\.ve|\\.co\\.ve|\\.tel|\\.im|\\.gr|\\.ru|\\.net\\.ru|\\.org\\.ru|\\.hr|\\.com\\.hr)$/, '$1$2');\r\n\t    \t}\r\n    \t};    \t\r\n    \treturn this.domain;\r\n    },\r\n    \r\n   storePersistenCookie : function(){\r\n   \t\tvar parameters = {};\r\n   \t\t<?php ($trackDomain != '' || $disableHTML5Storage == 1) ? ($trackDomain != '' ? print 'parameters.domain = \\'.'.$trackDomain.'\\';' : print 'parameters.domain = this.getCookieDomain();') : ''?>\r\n   \t\t<?php $timeout !== false ? print 'parameters.expires = '.($timeout * 24*3600).';' : ''?>\r\n\t    lhc_Cookies('lhc_bo_per',this.JSON.stringify(this.cookieDataPers),parameters);\r\n   },\r\n    \r\n   getPersistentAttribute : function(attr) {    \r\n\t    \tif (this.cookieDataPers[attr]){\r\n\t\t    \treturn this.cookieDataPers[attr];\r\n\t    \t}\r\n\t    \treturn null;    \t    \t\r\n    },\r\n    \r\n    addCookieAttributePersistent : function(attr, value){    \t\r\n    \tif (!this.cookieDataPers[attr] || this.cookieDataPers[attr] != value){\r\n\t    \tthis.cookieDataPers[attr] = value;\r\n\t    \tthis.storePersistenCookie();\t    \t\r\n    \t}    \t\r\n    }\r\n};\r\n\r\nvar cookieData = lhc_Cookies('lhc_bo_per');\r\n\r\nif ( typeof cookieData === \"string\" && cookieData ) {\r\n\tlhc_BrowseOffer.cookieDataPers = lhc_BrowseOffer.JSON.parse(cookieData);\t\r\n\tif ( (lhc_BrowseOffer.cookieDataPers.was_opened && false == <?php echo $canreopen == true ? 'true' : 'false'?>) || (lhc_BrowseOffer.cookieDataPers.of && lhc_BrowseOffer.cookieDataPers.of.indexOf(<?php echo $invite->id?>) >= 0)) {\r\n\t\tlhc_BrowseOffer.canOpenOffer = false;\r\n\t}\r\n};\r\n\r\nif ( window.attachEvent ) {\r\n\t// IE\r\n\twindow.attachEvent(\"onmessage\",function(e){lhc_BrowseOffer.handleMessage(e);});\r\n};\r\n\r\nif ( document.attachEvent ) {\r\n\t// IE\r\n\tdocument.attachEvent(\"onmessage\",function(e){lhc_BrowseOffer.handleMessage(e);});\r\n};\r\n\r\nif ( window.addEventListener ){\r\n\t// FF\r\n\twindow.addEventListener(\"message\",function(e){lhc_BrowseOffer.handleMessage(e);}, false);\r\n};\r\n\r\nif (lhc_BrowseOffer.canOpenOffer == true) {\r\n\tsetTimeout(function(){\r\n\t\tlhc_BrowseOffer.showBrowseOffer();\r\n\t},<?php echo $invite->time_on_site*1000?>)\t\r\n};\r\n", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup width');?></label>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-8\">\n\t\t\t\t\t<input class=\"form-control\" type=\"text\" id=\"id_size_text\" value=\"450\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t<select class=\"form-control\" id=\"UnitsTop\">\n\t\t\t\t\t\t<option value=\"pixels\">Pixels</option>\n\t\t\t\t\t\t<option value=\"percents\">Percents</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup height, used only if iframe is used');?></label> <input type=\"text\" class=\"form-control\" id=\"id_size_height\" value=\"450\" />\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-12\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Identifier, this can be used as filter for pro active chat invitations and is use full having different messages for different domains. Only string without spaces or special characters.');?></label> <input type=\"text\" class=\"form-control\" id=\"id_site_identifier\" maxlength=\"50\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Leave empty if it is not important to you');?>\" value=\"\" />\n\t\t</div>\n\t</div>\n\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label for=\"id_show_overlay\"><input type=\"checkbox\" id=\"id_show_overlay\" value=\"on\" checked=\"checked\"> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Show overlay');?></label>\n\t\t</div>\n\t</div>\n\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label for=\"id_canreopen\"><input type=\"checkbox\" id=\"id_canreopen\" value=\"on\"> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Show different offers for the same user');?></label>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-12\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Offer timeout in days, after how many days show offers for the same visitor again, leave empty for session');?></label> <input type=\"text\" class=\"form-control\" id=\"offer_timeout\" maxlength=\"50\" value=\"\" />\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','For what domain you are generating embed code?');?></label> \n\t\t\t<input class=\"form-control\" type=\"text\" id=\"id_embed_domain\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','example.com');?>\" value=\"\" /> \n\t\t</div>\t\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select class=\"form-control\" id=\"HttpMode\">\n\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6 end\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select class=\"form-control\" id=\"LocaleID\">\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n\t\t</div>\n\t</div>\n</div>\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Copy the code from the text area to the page header or footer');?></p>\n<textarea style=\"width: 100%; height: 180px; font-size: 12px;\" id=\"HMLTContent\"></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n\tvar size = '/(size)/'+($('#id_size_text').val() == '' ? 400 : $('#id_size_text').val());\n\tvar topposition = '/(units)/'+$('#UnitsTop').val();\n\tvar id_identifier = $('#id_site_identifier').val() != '' ? '/(identifier)/'+$('#id_site_identifier').val() : '';\n\tvar id_timeout = $('#offer_timeout').val() != '' ? '/(timeout)/'+$('#offer_timeout').val() : '';\n\tvar id_size_height = $('#id_size_height').val() != '' ? '/(height)/'+$('#id_size_height').val() : '';\n\tvar id_show_overlay = $('#id_show_overlay').is(':checked') ? '/(showoverlay)/true' : '';\n\tvar id_canreopen = $('#id_canreopen').is(':checked') ? '/(canreopen)/true' : '';\n\tvar id_embed_domain = $('#id_embed_domain').val() != '' ? 'domain:\\''+$('#id_embed_domain').val()+'\\'' : '';\n\n\t<?php include(erLhcoreClassDesign::designtpl('lhbrowseoffer/getstatus/options_variable.tpl.php')); ?>\n\t\n    var script = '<script type=\"text/javascript\">'+\"\\nvar <?php echo $browseofferOptionsVariable;?> = {\"+id_embed_domain+\"};\\n\"+\n    \n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'var referrer = (document.referrer) ? encodeURIComponent(document.referrer.substr(document.referrer.indexOf(\\'://\\')+1)) : \\'\\';'+\"\\n\"+\n        'var location  = (document.location) ? encodeURIComponent(window.location.href.substring(window.location.protocol.length)) : \\'\\';'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'browseoffer/getstatus'+size+id_size_height+topposition+id_timeout+id_show_overlay+id_identifier+id_canreopen+'?r=\\'+referrer+\\'&l=\\'+location;'+\"\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n    $('#HMLTContent').text(script);\n};\n$('#LocaleID,#id_embed_domain,#UnitsTop,#id_size_text,#HttpMode,#id_site_identifier,#id_size_height,#id_show_overlay,#id_canreopen,#offer_timeout').change(function(){\n    generateEmbedCode();\n});\ngenerateEmbedCode();\n\n</script>", "<?php if (isset($orderInformation['id']['enabled']) && $orderInformation['id']['enabled'] == true) : ?>\r\n<div class=\"col-6 pb-1\">\r\n    <span class=\"material-icons user-select-none\">vpn_key</span><span><?php echo $chat->id;?></span><button data-success=\"Copied\" class=\"ml-1 btn btn-xs btn-link text-muted py-1\" data-copy=\"<?php echo (erLhcoreClassSystem::$httpsMode == true ? 'https:' : 'http:') . '//' . $_SERVER['HTTP_HOST'] ?><?php echo erLhcoreClassDesign::baseurl('front/default')?>/(cid)/<?php echo $chat->id?>/#!#chat-id-<?php echo $chat->id?>\" onclick=\"lhinst.copyContent($(this))\" type=\"button\"><i class=\"material-icons\">link</i>Copy link</button>\r\n</div>\r\n<?php endif; ?>", "<?php if (isset($reopen_chat)) : ?>\nlh_inst.stopCheckNewMessage();\nlh_inst.addCookieAttribute('hash','<?php echo $reopen_chat->id;?>_<?php echo $reopen_chat->hash?>');\nlh_inst.showStartWindow();\n<?php elseif ($visitor->has_message_from_operator == true && (!isset($dynamic_everytime) || $dynamic_everytime == false)) : ?>\nlh_inst.stopCheckNewMessage();\n\n<?php if ($visitor->invitation instanceof erLhAbstractModelProactiveChatInvitation && $visitor->invitation->show_on_mobile == 1) : ?>\n\n    <?php if (($visitor->invitation_assigned == false && $visitor->invitation->delay > 0) || $visitor->invitation->delay_init > 0) : ?>\n    setTimeout(function() {\n    <?php endif; ?>\n\n        var invitationURL =  '<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('chat/readoperatormessage')?><?php $department !== false ? print '/(department)/'.$department : '' ?><?php $theme !== false ? print '/(theme)/'.$theme : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : ''?><?php $tag !== false ? print '/(tag)/' . $tag : ''?><?php $survey !== false ? print '/(survey)/'.$survey : ''?>/(vid)/<?php echo $vid;?><?php $visitor->invitation_assigned == true ? print '/(playsound)/true' : ''?>/(fullheight)/<?= $fullheight ? 'true' : 'false' ?>';\n\n        <?php if (isset($visitor->invitation->design_data_array['mobile_html']) && $visitor->invitation->design_data_array['mobile_html'] != '') : ?>\n\n            <?php if (isset($visitor->invitation->design_data_array['mobile_style']) && $visitor->invitation->design_data_array['mobile_style'] != '') : ?>\n                <?php\n                    $replaceStyleArray = array();\n                    for ($i = 1; $i < 5; $i++) {\n                        $replaceStyleArray['{proactive_img_' . $i . '}'] =  erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value . '//' . $_SERVER['HTTP_HOST'] . $visitor->invitation->{'design_data_img_' . $i . '_url'};\n                    }\n                ?>\n                <?php\n                    $contentCSS = str_replace(array_keys($replaceStyleArray),array_values($replaceStyleArray),$visitor->invitation->design_data_array['mobile_style']);\n                    $contentCSS = str_replace(array(\"\\n\",\"\\r\"),'',$contentCSS);\n                ?>\n                lh_inst.addCss(<?php echo json_encode($contentCSS)?>);\n            <?php endif; ?>\n            lh_inst.invitationURL = invitationURL;\n            var fragmentInv = lh_inst.appendHTML(<?php echo json_encode(str_replace(array(\"\\n\",\"\\r\",'{readmessage}','{hideInvitation}'),array('','',\"return lh_inst.showHTMLInvitation(lh_inst.invitationURL)\",\"return lh_inst.hideHTMLInvitation()\"),$visitor->invitation->design_data_array['mobile_html']))?>);\n            document.body.insertBefore(fragmentInv, document.body.childNodes[0]);\n            lh_inst.isProactivePending = 1;\n            lh_inst.toggleStatusWidget(true);\n\n        <?php else : ?>\n            <?php if (isset($visitor->invitation->design_data_array['api_do_not_show']) && $visitor->invitation->design_data_array['api_do_not_show'] == 1) : ?>\n                lh_inst.showBasicInvitation(invitationURL);\n            <?php else : ?>\n            if (window.innerWidth > 700) {\n                lh_inst.isProactivePending = 1;\n                lh_inst.showStartWindow(invitationURL,true);\n            } else {\n                lh_inst.showBasicInvitation(invitationURL);\n            }\n            <?php endif; ?>\n        <?php endif; ?>\n\n    <?php if (($visitor->invitation_assigned == false && $visitor->invitation->delay > 0) || $visitor->invitation->delay_init > 0) : ?>\n    },<?php echo ($visitor->invitation_assigned == true ? $visitor->invitation->delay_init : $visitor->invitation->delay) * 1000?>);\n    <?php endif; ?>\n\n<?php else : ?>\n            <?php if ($visitor->invitation instanceof erLhAbstractModelProactiveChatInvitation && (($visitor->invitation_assigned == false && $visitor->invitation->delay > 0) || $visitor->invitation->delay_init > 0)) : ?>\n                setTimeout(function() {\n            <?php endif; ?>\n            var urlInvitation = '<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('chat/readoperatormessage')?><?php $department !== false ? print '/(department)/'.$department : '' ?><?php $theme !== false ? print '/(theme)/'.$theme : ''?><?php $tag !== false ? print '/(tag)/' . $tag : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : ''?><?php $survey !== false ? print '/(survey)/'.$survey : ''?>/(vid)/<?php echo $vid;?><?php $visitor->invitation_assigned == true ? print '/(playsound)/true' : ''?>/(fullheight)/<?= $fullheight ? 'true' : 'false' ?>';\n            <?php if ($visitor->invitation instanceof erLhAbstractModelProactiveChatInvitation && isset($visitor->invitation->design_data_array['api_do_not_show']) && $visitor->invitation->design_data_array['api_do_not_show'] == 1) : ?>\n                lh_inst.showBasicInvitation(urlInvitation);\n            <?php else : ?>\n                if (window.innerWidth > 700) {\n                        lh_inst.isProactivePending = 1;\n                        lh_inst.showStartWindow(urlInvitation,true);\n                    } else {\n                        lh_inst.showBasicInvitation(urlInvitation);\n                    }\n            <?php endif; ?>\n            <?php if ($visitor->invitation instanceof erLhAbstractModelProactiveChatInvitation && ($visitor->invitation_assigned == false && $visitor->invitation->delay > 0 || $visitor->invitation->delay_init > 0)) : ?>\n                },<?php echo ($visitor->invitation_assigned == true ? $visitor->invitation->delay_init : $visitor->invitation->delay) * 1000?>);\n            <?php endif; ?>\n<?php endif; ?>\n\n<?php elseif (isset($dynamic)) : ?>\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/dynamic_events.tpl.php')); ?>\t\n<?php endif; ?>\n\n<?php if (isset($inject_html)) : ?>\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/inject_events.tpl.php')); ?>\n<?php endif; ?>\n\n<?php if (isset($operation)) : ?><?php echo $operation;?><?php endif;?>\n\n<?php if ($visitor->next_reschedule > 0) : ?>\n    setTimeout(function() {\n        lh_inst.startNewMessageCheckSingle();\n    },<?php echo (($visitor->next_reschedule + 1)*1000);?>);\n<?php endif; ?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/chatcheckoperatormessage_multiinclude.tpl.php')); ?>\t", "<div class=\"align-self-center op-photo\">\n    <?php if ($user->has_photo_avatar) : ?>\n        <?php if ($user->has_photo) : ?>\n            <img width=\"20\" height=\"20\" src=\"<?php echo $user->photo_path?>\" alt=\"<?php echo htmlspecialchars($user->name_support)?>\" />\n        <?php else : ?>\n            <img width=\"20\" height=\"20\" src=\"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect('widgetrestapi/avatar')?>/<?php echo htmlspecialchars($user->avatar)?>\" alt=\"<?php echo htmlspecialchars($user->name_support)?>\" />\n        <?php endif; ?>\n    <?php else : ?>\n        <i class=\"icon-assistant material-icons mr-0\"><?php if (isset($react) && $react === true) : ?>&#xf10d;<?php else : ?>account_box<?php endif; ?></i>\n    <?php endif;?>\n</div>\n<div class=\"p-1 pl-2\">\n    <span class=\"font-weight-bold op-name-widget\">\n        <?php if (isset($theme) && $theme instanceof erLhAbstractModelWidgetTheme && isset($theme->bot_configuration_array['custom_op_name']) && $theme->bot_configuration_array['custom_op_name'] != '') : ?>\n            <?php echo htmlspecialchars(str_replace(['{nick}', '{name}', '{surname}'], [$user->name_support, $user->name, $user->surname], $theme->bot_configuration_array['custom_op_name']));?>\n        <?php else : ?>\n            <?php echo htmlspecialchars($user->name_support)?>\n        <?php endif; ?>\n    </span>\n</div>", "<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/position_css.tpl.php')); ?>\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/position_css_override.tpl.php')); ?>\n\n<?php\n$trackDomain = erLhcoreClassModelChatConfig::fetch('track_domain')->current_value;\n$disableHTML5Storage = (int)erLhcoreClassModelChatConfig::fetch('disable_html5_storage')->current_value;\n$trackOnline = (int)erLhcoreClassModelChatConfig::fetch('track_if_offline')->current_value;\n$noWildcardCookie = (int)erLhcoreClassModelChatConfig::fetch('no_wildcard_cookie')->current_value;\n?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/is_online_help.tpl.php')); ?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/geo_adjustment.tpl.php')); ?>\n\n<?php\n\nif ($isOnlineHelp == false && erLhcoreClassModelChatConfig::fetch('pro_active_show_if_offline')->current_value == 0) {\n\t$disable_pro_active = true;\n};\n\n// Perhaps user do not want to show live help when it's offline\nif ( !($isOnlineHelp == false && $hide_offline == 'true') || $trackOnline == 1 ) : ?>\n\n/*! Cookies.js - 0.4.0; Copyright (c) 2014, Scott Hamper; http://www.opensource.org/licenses/MIT */\n(function(e){\"use strict\";var b=function(a,d,c){return 1===arguments.length?b.get(a):b.set(a,d,c)};b._document=document;b._navigator=navigator;b.defaults={path:\"/\"};b.get=function(a){b._cachedDocumentCookie!==b._document.cookie&&b._renewCache();return b._cache[a]};b.set=function(a,d,c){c=b._getExtendedOptions(c);c.expires=b._getExpiresDate(d===e?-1:c.expires);b._document.cookie=b._generateCookieString(a,d,c);return b};b.expire=function(a,d){return b.set(a,e,d)};b._getExtendedOptions=function(a){return{path:a&& a.path||b.defaults.path,domain:a&&a.domain||b.defaults.domain,expires:a&&a.expires||b.defaults.expires,secure:a&&a.secure!==e?a.secure:b.defaults.secure}};b._isValidDate=function(a){return\"[object Date]\"===Object.prototype.toString.call(a)&&!isNaN(a.getTime())};b._getExpiresDate=function(a,d){d=d||new Date;switch(typeof a){case \"number\":a=new Date(d.getTime()+1E3*a);break;case \"string\":a=new Date(a)}if(a&&!b._isValidDate(a))throw Error(\"`expires` parameter cannot be converted to a valid Date instance\"); return a};b._generateCookieString=function(a,b,c){a=a.replace(/[^#$&+\\^`|]/g,encodeURIComponent);a=a.replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\");b=(b+\"\").replace(/[^!#$&-+\\--:<-\\[\\]-~]/g,encodeURIComponent);c=c||{};a=a+\"=\"+b+(c.path?\";path=\"+c.path:\"\");a+=c.domain?\";domain=\"+c.domain:\"\";a+=c.expires?\";expires=\"+c.expires.toUTCString():\"\";a+=c.secure?\";secure\":\"\";return a+=\";SameSite=Lax\"};b._getCookieObjectFromString=function(a){var d={};a=a?a.split(\"; \"):[];for(var c=0;c<a.length;c++){var f=b._getKeyValuePairFromCookieString(a[c]); d[f.key]===e&&(d[f.key]=f.value)}return d};b._getKeyValuePairFromCookieString=function(a){var b=a.indexOf(\"=\"),b=0>b?a.length:b;try {return{key:decodeURIComponent(a.substr(0,b)),value:decodeURIComponent(a.substr(b+1))}} catch(e) {return{key:a.substr(0,b),value:a.substr(b+1)}}};b._renewCache=function(){b._cache=b._getCookieObjectFromString(b._document.cookie);b._cachedDocumentCookie=b._document.cookie};b._areEnabled=function(){var a=\"1\"===b.set(\"cookies_lhc.js\",1).get(\"cookies_lhc.js\");b.expire(\"cookies_lhc.js\");return a};b.enabled=b._areEnabled();window.lhc_Cookies=b})();\n\nlhc_Cookies.defaults = {path:\"/\",secure: <?php erLhcoreClassModelChatConfig::fetch('use_secure_cookie')->current_value == 1 ? print 'true' : print 'false' ?>};\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/options_variable.tpl.php')); ?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/custom_get_status_js.tpl.php')); ?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/part/javascript_variables.tpl.php')); ?>\n\nvar lh_inst  = {\n   JSON : {\n            parse: window.JSON && (window.JSON.parse || window.JSON.decode) || String.prototype.evalJSON && function(str){return String(str).evalJSON();} || $.parseJSON || $.evalJSON,\n            stringify:  Object.toJSON || window.JSON && (window.JSON.stringify || window.JSON.encode) || $.toJSON\n    },\n    js_variables : <?php echo json_encode($jsVars);?>,\n    rendered : false,\n    pos : <?php echo json_encode($position)?>,\n    isOnline : <?php echo $isOnlineHelp == true ? 'true' : 'false'?>,\n    disabledGeo : <?php echo (isset($disableByGeoAdjustment) && $disableByGeoAdjustment == true) ? 'true' : 'false' ?>,\n    checkOperatorMessage : <?php echo $check_operator_messages == true ? 'true' : 'false'?>,\n\toffset_data : '',\n    reset : <?php isset($fresh) && $fresh == true ? print 'true' : print 'false'?>,\n\tlang: '<?php echo erLhcoreClassSystem::instance()->WWWDirLang?>',\n\tlangDefault: '/<?php echo erLhcoreClassSystem::instance()->SiteAccess?>',\n\tis_dragging : false,\n\tis_full_height : <?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ? 'true' : 'false' ?>,\n\tonline_tracked : false,\n    urlopen : function(){\n    \treturn \"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>\"+this.lang+\"/chat/startchat<?php $leaveamessage == true ? print '/(leaveamessage)/true' : ''?><?php is_object($theme) ? print '/(theme)/'.$theme->id : ''?><?php $department !== false ? print '/(department)/'.$department : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : ''?>\"+this.survey_id;\n    },\n\t<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/custom_get_status_lh_inst_js.tpl.php')); ?>\n    hasSurvey : <?php echo $survey !== false ? 'true ': 'false'?>,\n    survey_id : '<?php echo $survey !== false ? '/(survey)/' . $survey : ''?>',\n    surveyShown : false,\n    isMinimized : false,\n    explicitClose : false,\n    iframeLoaded : false,\n    isProactivePending : 0,\n    dynamicAssigned : [],\n    extensionCommands : [],\n    windowname : \"startchatwindow\",\n\tsubstatus : '',\n    cookieData : {},\n    cookieDataPers : {},\n\tdomain : false,\n    isSharing : false,\n    chat_started : false,\n    iswildcard : null,\n    extensionArgs : '',\n    prefillMessage : '',\n    getCookieDomain : function(domain) {\n    \t if (this.domain !== false) {\n    \t \treturn this.domain;\n    \t } else {\n\t    \tif (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.domain != 'undefined') {\n\t    \t\tthis.domain = '.'+<?php echo $chatOptionsVariable?>.opt.domain.replace(/(https:\\/\\/|http:\\/\\/)/g,'');\n\t    \t} else {\n\t    \t\tthis.domain = '.'+document.location.hostname.replace(/^(?:[a-z0-9\\-\\.]+\\.)??([a-z0-9\\-]+)?(\\.com|\\.net|\\.org|\\.biz|\\.ws|\\.in|\\.me|\\.co\\.uk|\\.co|\\.org\\.uk|\\.ltd\\.uk|\\.plc\\.uk|\\.me\\.uk|\\.edu|\\.mil|\\.br\\.com|\\.cn\\.com|\\.eu\\.com|\\.hu\\.com|\\.no\\.com|\\.qc\\.com|\\.sa\\.com|\\.se\\.com|\\.se\\.net|\\.us\\.com|\\.uy\\.com|\\.ac|\\.co\\.ac|\\.gv\\.ac|\\.or\\.ac|\\.ac\\.ac|\\.af|\\.am|\\.as|\\.at|\\.ac\\.at|\\.co\\.at|\\.gv\\.at|\\.or\\.at|\\.asn\\.au|\\.com\\.au|\\.edu\\.au|\\.org\\.au|\\.net\\.au|\\.id\\.au|\\.be|\\.ac\\.be|\\.adm\\.br|\\.adv\\.br|\\.am\\.br|\\.arq\\.br|\\.art\\.br|\\.bio\\.br|\\.cng\\.br|\\.cnt\\.br|\\.com\\.br|\\.ecn\\.br|\\.eng\\.br|\\.esp\\.br|\\.etc\\.br|\\.eti\\.br|\\.fm\\.br|\\.fot\\.br|\\.fst\\.br|\\.g12\\.br|\\.gov\\.br|\\.ind\\.br|\\.inf\\.br|\\.jor\\.br|\\.lel\\.br|\\.med\\.br|\\.mil\\.br|\\.net\\.br|\\.nom\\.br|\\.ntr\\.br|\\.odo\\.br|\\.org\\.br|\\.ppg\\.br|\\.pro\\.br|\\.psc\\.br|\\.psi\\.br|\\.rec\\.br|\\.slg\\.br|\\.tmp\\.br|\\.tur\\.br|\\.tv\\.br|\\.vet\\.br|\\.zlg\\.br|\\.br|\\.ab\\.ca|\\.bc\\.ca|\\.mb\\.ca|\\.nb\\.ca|\\.nf\\.ca|\\.ns\\.ca|\\.nt\\.ca|\\.on\\.ca|\\.pe\\.ca|\\.qc\\.ca|\\.sk\\.ca|\\.yk\\.ca|\\.ca|\\.cc|\\.ac\\.cn|\\.com\\.cn|\\.edu\\.cn|\\.gov\\.cn|\\.org\\.cn|\\.bj\\.cn|\\.sh\\.cn|\\.tj\\.cn|\\.cq\\.cn|\\.he\\.cn|\\.nm\\.cn|\\.ln\\.cn|\\.jl\\.cn|\\.hl\\.cn|\\.js\\.cn|\\.zj\\.cn|\\.ah\\.cn|\\.gd\\.cn|\\.gx\\.cn|\\.hi\\.cn|\\.sc\\.cn|\\.gz\\.cn|\\.yn\\.cn|\\.xz\\.cn|\\.sn\\.cn|\\.gs\\.cn|\\.qh\\.cn|\\.nx\\.cn|\\.xj\\.cn|\\.tw\\.cn|\\.hk\\.cn|\\.mo\\.cn|\\.cn|\\.cx|\\.cz|\\.de|\\.dk|\\.fo|\\.com\\.ec|\\.tm\\.fr|\\.com\\.fr|\\.asso\\.fr|\\.presse\\.fr|\\.fr|\\.gf|\\.gs|\\.co\\.il|\\.net\\.il|\\.ac\\.il|\\.k12\\.il|\\.gov\\.il|\\.muni\\.il|\\.ac\\.in|\\.co\\.in|\\.org\\.in|\\.ernet\\.in|\\.gov\\.in|\\.net\\.in|\\.res\\.in|\\.is|\\.it|\\.ac\\.jp|\\.co\\.jp|\\.go\\.jp|\\.or\\.jp|\\.ne\\.jp|\\.ac\\.kr|\\.co\\.kr|\\.go\\.kr|\\.ne\\.kr|\\.nm\\.kr|\\.or\\.kr|\\.li|\\.lt|\\.lu|\\.asso\\.mc|\\.tm\\.mc|\\.com\\.mm|\\.org\\.mm|\\.net\\.mm|\\.edu\\.mm|\\.gov\\.mm|\\.ms|\\.nl|\\.no|\\.nu|\\.pl|\\.ro|\\.org\\.ro|\\.store\\.ro|\\.tm\\.ro|\\.firm\\.ro|\\.www\\.ro|\\.arts\\.ro|\\.rec\\.ro|\\.info\\.ro|\\.nom\\.ro|\\.nt\\.ro|\\.se|\\.si|\\.com\\.sg|\\.org\\.sg|\\.net\\.sg|\\.gov\\.sg|\\.sk|\\.st|\\.tf|\\.ac\\.th|\\.co\\.th|\\.go\\.th|\\.mi\\.th|\\.net\\.th|\\.or\\.th|\\.tm|\\.to|\\.com\\.tr|\\.edu\\.tr|\\.gov\\.tr|\\.k12\\.tr|\\.net\\.tr|\\.org\\.tr|\\.com\\.tw|\\.org\\.tw|\\.net\\.tw|\\.ac\\.uk|\\.uk\\.com|\\.uk\\.net|\\.gb\\.com|\\.gb\\.net|\\.vg|\\.sh|\\.kz|\\.ch|\\.info|\\.ua|\\.gov|\\.name|\\.pro|\\.ie|\\.hk|\\.com\\.hk|\\.org\\.hk|\\.net\\.hk|\\.edu\\.hk|\\.us|\\.tk|\\.cd|\\.by|\\.ad|\\.lv|\\.eu\\.lv|\\.bz|\\.es|\\.jp|\\.cl|\\.ag|\\.mobi|\\.eu|\\.co\\.nz|\\.org\\.nz|\\.net\\.nz|\\.maori\\.nz|\\.iwi\\.nz|\\.io|\\.la|\\.md|\\.sc|\\.sg|\\.vc|\\.tw|\\.travel|\\.my|\\.se|\\.tv|\\.pt|\\.com\\.pt|\\.edu\\.pt|\\.asia|\\.fi|\\.com\\.ve|\\.net\\.ve|\\.fi|\\.org\\.ve|\\.web\\.ve|\\.info\\.ve|\\.co\\.ve|\\.tel|\\.im|\\.gr|\\.ru|\\.net\\.ru|\\.org\\.ru|\\.hr|\\.com\\.hr)$/, '$1$2');\n\t    \t}\n    \t};\n    \treturn this.domain;\n    },\n\n    isWildcardCookie : function() {\n        if (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.subdomain != 'undefined') {\n            this.iswildcard = <?php echo $chatOptionsVariable?>.opt.subdomain;\n        }\n\n        return this.iswildcard;\n    },\n\n    updateVarsTimeout : null,\n\n    appendArg : function(args) {\n        var tt = args.length/2;\n        for (i = 0; i < tt; i++) {\n            var argument = args[i*2];\n            var value = args[(i*2)+1];\n            if (argument == 'survey_id') {\n                this.survey_id = '/(survey)/'+value;\n                this.hasSurvey = true;\n            }\n        }\n    },\n\n    addCss : function(css_content) {\n        var head = document.getElementsByTagName('head')[0];\n        var style = document.createElement('style');\n        style.type = 'text/css';\n\n        if(style.styleSheet) {\n          style.styleSheet.cssText = css_content;\n        } else {\n          rules = document.createTextNode(css_content);\n          style.appendChild(rules);\n        };\n\n        head.appendChild(style);\n    },\n\n    appendHTML : function (htmlStr) {\n        var frag = document.createDocumentFragment(),\n            temp = document.createElement('div');\n        temp.innerHTML = htmlStr;\n        while (temp.firstChild) {\n            frag.appendChild(temp.firstChild);\n        };\n        return frag;\n    },\n\n    removeById : function(EId)\n    {\n        return(EObj=document.getElementById(EId))?EObj.parentNode.removeChild(EObj):false;\n    },\n\n\thasClass : function(el, name) {\n\t   return new RegExp('(\\\\s|^)'+name+'(\\\\s|$)').test(el.className);\n\t},\n\n\taddClass : function(el, name) {\n\t   if (!this.hasClass(el, name)) { el.className += (el.className ? ' ' : '') +name; }\n\t},\n\n\tremoveClass : function(el, name) {\n\t   if (this.hasClass(el, name)) {\n\t      el.className=el.className.replace(new RegExp('(\\\\s|^)'+name+'(\\\\s|$)'),' ').replace(/^\\s+|\\s+$/g, '');\n\t   }\n    },\n\n    storePos : function(dm, height) {\n\t\t    var cookiePos = '';\n\t\t\t<?php if ($currentPosition['pos'] == 'r') : ?>\n\t\t    \tcookiePos += dm.style.right;\n\t\t    <?php else : ?>\n\t\t    \tcookiePos += dm.style.left;\n\t\t    <?php endif;?>\n\t\t    <?php if ($currentPosition['posv'] == 't') : ?>\n\t\t    cookiePos += \",\"+dm.style.top;\n\t\t    <?php else : ?>\n\t\t    cookiePos += \",\"+dm.style.bottom;\n\t\t    <?php endif;?>\n\n            if (height > 0) {\n                cookiePos += \",\"+height;\n            }\n\n\t\t    this.addCookieAttribute('pos',cookiePos);\n    },\n\n\tmin : function(initial) {\n\n        // If it's proactive invitation hide instead to avoid reopening.\n        if (this.isProactivePending == 1) {\n           this.hide();\n           return;\n        }\n\n\t\tvar dm = document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n\n        var msgNum = document.getElementById('<?php echo $chatCSSPrefix?>-msg-number');\n        msgNum.innerHTML = '';\n        msgNum.msg_number = 0;\n        this.removeClass(dm, '<?php echo $chatCSSPrefix?>-has-unread-message');\n\n    if (!dm.attrIsMin || dm.attrIsMin == false) {\n\t\t\tdm.attrHeight = dm.style.height;\n\t\t\tdm.attrIsMin = true;\n            this.isMinimized = true;\n\t\t\t<?php if ($currentPosition['posv'] == 'b') : ?>\n\t\t\tif(dm.style.bottom!='' && dm.attrHeight!=''){\n\t\t\t\tdm.style.bottom = (parseInt(dm.style.bottom)+parseInt(dm.attrHeight)-35)+'px';\n\t\t\t} else {\n\t\t\t\tif (initial == undefined) {\n\t\t\t\t\tdm.style.bottom = (parseInt(dm.style.bottom) + parseInt(document.getElementById('<?php echo $chatCSSPrefix?>_iframe_container').offsetHeight)-10)+'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\t<?php endif; ?>\n\n            var heightIframe = 0;\n            if (initial == undefined) {\n                heightIframe = parseInt(document.getElementById('<?php echo $chatCSSPrefix?>_iframe_container').offsetHeight)-1;\n            } else if (typeof lh_inst.pendingHeight !== 'undefined') {\n                heightIframe = lh_inst.pendingHeight;\n            }\n\n\t\t\tthis.addCookieAttribute('m',1);\n\t\t\tthis.storePos(dm, heightIframe);\n\t\t\t<?php if ($currentPosition['posv'] == 'b' && $minimize_action == 'br') : ?>\n\t\t\t\t\tdm.attrBottomOrigin = dm.style.bottom;\n\t\t\t\t\tdm.style.bottom = '';\n\t\t\t\t\t<?php if ($currentPosition['pos'] == 'r') : ?>\n\t\t\t\t\tdm.attrRightOrigin = dm.style.right;\n\t\t\t\t\tdm.style.right = '0px';\n\t\t\t\t\t<?php else : ?>\n\t\t\t\t\tdm.attrLeftOrigin = dm.style.left;\n\t\t\t\t\tdm.style.left = '0px';\n\t\t\t\t\t<?php endif;?>\n\t\t\t<?php endif;?>\n            this.addClass(dm,'<?php echo $chatCSSPrefix?>-min');\n\t\t\tthis.removeClass(document.body,'<?php echo $chatCSSPrefix?>-opened');\n\t\t} else {\n\n            if (this.cookieData.pos) {\n                var posContainer = this.cookieData.pos.split(',');\n                if (typeof posContainer[2] !== 'undefined' && posContainer[2] > 0){\n                    document.getElementById('<?php echo $chatCSSPrefix?>_iframe').style.height = posContainer[2] + 'px';\n                }\n            };\n\n            this.removeClass(dm,'<?php echo $chatCSSPrefix?>-min');\n\n\t\t\tdm.attrIsMin = false;\n            this.isMinimized = false;\n\t\t\t<?php if ($currentPosition['posv'] == 'b') : ?>\n\t\t\tif (dm.attrBottomOrigin) {\n\t\t\t\tdm.style.bottom = (parseInt(dm.attrBottomOrigin)-parseInt(document.getElementById('<?php echo $chatCSSPrefix?>_iframe').style.height)+9)+'px';\n\t\t\t\t<?php if ($currentPosition['pos'] == 'r') : ?>\n\t\t\t\tdm.style.right = dm.attrRightOrigin;\n\t\t\t\t<?php else : ?>\n\t\t\t\tdm.style.left = dm.attrLeftOrigin;\n\t\t\t\t<?php endif;?>\n\t\t\t} else if (dm.style.bottom!='') {\n\t\t\t\tdm.style.bottom = (parseInt(dm.style.bottom)-parseInt(document.getElementById('<?php echo $chatCSSPrefix?>_iframe').style.height)+9)+'px';\n\t\t\t}\n\t\t\t<?php endif;?>\n\t\t\tthis.removeCookieAttr('m');\n\t\t\tvar inst = this;\n\t\t\tthis.storePos(dm);\n\t\t\tthis.addClass(document.body,'<?php echo $chatCSSPrefix?>-opened');\n\t\t};\n\t},\n\n    hide : function() {\n        this.isProactivePending = 0;\n        if (!lh_inst.cookieData.hash || lh_inst.hasSurvey == false || lh_inst.surveyShown == true) {\n\n            <?php if ((int)erLhcoreClassModelChatConfig::fetch('on_close_exit_chat')->current_value == 1) : ?>\n            this.explicitClose = true;\n            <?php endif;?>\n\n            var th = document.getElementsByTagName('head')[0];\n            var s = document.createElement('script');\n            s.setAttribute('type','text/javascript');\n            s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/chatwidgetclosed'+this.getAppendCookieArguments()+'?ts='+Date.now());\n            th.appendChild(s);\n            this.toggleStatusWidget(false);\n\n            this.removeCookieAttr('pos');\n            this.removeCookieAttr('m');\n\n            if (lh_inst.cookieData.hash) {\n                this.removeById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n                this.removeCookieAttr('hash');\n                this.iframe_html = null;\n                this.iframePreloaded = false;\n\n                // Give time for cookie to be removed\n                setTimeout(function(){\n                    lh_inst.preloadWidget();\n                },300);\n\n            } else {\n                if (this.iframeCustomUrl === true) {\n                    this.removeById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n                    lh_inst.preloadWidget();\n                } else {\n                    this.addClass(document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>'),'<?php echo $chatCSSPrefix?>-delayed');\n                }\n            }\n\n            this.removeClass(document.body,'<?php echo $chatCSSPrefix?>-opened');\n\n            <?php if ($check_operator_messages == 'true' && $disable_pro_active == false) : ?>\n            this.startNewMessageCheck();\n            <?php endif; ?>\n            this.timeoutStatusWidgetOpen = 0;\n            this.surveyShown = true;\n\n        } else {\n            this.showSurvey();\n        }\n    },\n\n    hideHTMLInvitation : function() {\n        lh_inst.hide();\n        lh_inst.removeById('<?php echo $chatCSSPrefix?>-inv-container');\n        return false;\n    },\n\n    showHTMLInvitation : function(invitationURL) {\n        this.showStartWindow(invitationURL,true);\n        lh_inst.removeById('<?php echo $chatCSSPrefix?>-inv-container');\n        return false;\n    },\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/part/show_survey.tpl.php')); ?>\n\n    getAppendCookieArguments : function() {\n\t\t    var hashAppend = this.cookieData.hash && this.reset == false  ? '/(hash)/'+this.cookieData.hash : '';\n\t\t    var vidAppend = this.cookieDataPers.vid ? '/(vid)/'+this.cookieDataPers.vid : '';\n\t\t    var hashResume = this.cookieData.hash_resume && this.reset == false  ? '/(hash_resume)/'+this.cookieData.hash_resume : '';\n\t\t    var soundOption = this.cookieData.s ? '/(sound)/'+this.cookieData.s : '';\n\t\t    var explicitClose = this.explicitClose ? '/(eclose)/t' : '';\n\n\t\t    if (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.attr_paid != 'undefined') {\n\t\t          explicitClose = explicitClose + '/(phash)/'+ <?php echo $chatOptionsVariable?>.attr_paid.phash;\n\t\t          explicitClose = explicitClose + '/(pvhash)/'+ <?php echo $chatOptionsVariable?>.attr_paid.pvhash;\n\t\t    };\n\n\t\t    return hashAppend+vidAppend+hashResume+soundOption+explicitClose+this.survey_id;\n    },\n\n    openRemoteWindow : function() {\n        this.removeById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n        var popupHeight = (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.popup_height != 'undefined') ? parseInt(<?php echo $chatOptionsVariable?>.opt.popup_height) : 520;\n        var popupWidth = (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.popup_width != 'undefined') ? parseInt(<?php echo $chatOptionsVariable?>.opt.popup_width) : 500;\n        var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n        window.open(this.urlopen()+this.getAppendCookieArguments()+'/(er)/1'+'?URLReferer='+locationCurrent+this.parseOptions()+this.parseStorageArguments(),this.windowname,\"scrollbars=yes,menubar=1,resizable=1,width=\"+popupWidth+\",height=\"+popupHeight);\n        this.removeCookieAttr('hash');\n        this.removeCookieAttr('hash_resume');\n        this.toggleStatusWidget(false);\n        this.iframe_html = null;\n        this.iframePreloaded = false;\n\n        // Give time for cookie to be removed\n        setTimeout(function(){\n            lh_inst.preloadWidget();\n        },300);\n    },\n\n    getTimeZone : function() {\n\n            var today = new Date();\n\n            stdTimezoneOffset = function() {\n                var jan = new Date(today.getFullYear(), 0, 1);\n                var jul = new Date(today.getFullYear(), 6, 1);\n                return Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n            };\n\n            var dst = function() {\n                return today.getTimezoneOffset() < stdTimezoneOffset();\n            };\n\n            var timeZoneOffset = 0;\n\n            if (dst()) {\n                timeZoneOffset = today.getTimezoneOffset();\n            } else {\n                timeZoneOffset = today.getTimezoneOffset()-60;\n            };\n\n            return (((timeZoneOffset)/60) * -1);\n    },\n\n    parseOptions : function() {\n\t\targumentsQuery = new Array();\n        var paramsReturn = '';\n\t\tif (typeof <?php echo $chatOptionsVariable?> != 'undefined') {\n\t    \tif (typeof <?php echo $chatOptionsVariable?>.attr != 'undefined') {\n\t    \t\tif (<?php echo $chatOptionsVariable?>.attr.length > 0){\n\t\t\t\t\tfor (var index in <?php echo $chatOptionsVariable?>.attr) {\n\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariable?>.attr[index] != 'undefined' && typeof <?php echo $chatOptionsVariable?>.attr[index].type != 'undefined') {\n\t\t\t\t\t\t\targumentsQuery.push('name[]='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr[index].name)+'&encattr[]='+(typeof <?php echo $chatOptionsVariable?>.attr[index].encrypted != 'undefined' && <?php echo $chatOptionsVariable?>.attr[index].encrypted == true ? 't' : 'f')+'&value[]='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr[index].value)+'&type[]='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr[index].type)+'&size[]='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr[index].size)+'&req[]='+(typeof <?php echo $chatOptionsVariable?>.attr[index].req != 'undefined' && <?php echo $chatOptionsVariable?>.attr[index].req == true ? 't' : 'f')+'&sh[]='+((typeof <?php echo $chatOptionsVariable?>.attr[index].show != 'undefined' && (<?php echo $chatOptionsVariable?>.attr[index].show == 'on' || <?php echo $chatOptionsVariable?>.attr[index].show == 'off')) ? <?php echo $chatOptionsVariable?>.attr[index].show : 'b'));\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t    \t\t};\n\t    \t};\n\n\t    \tif (typeof <?php echo $chatOptionsVariable?>.attr_prefill != 'undefined') {\n\t    \t\tif (<?php echo $chatOptionsVariable?>.attr_prefill.length > 0){\n\t\t\t\t\tfor (var index in <?php echo $chatOptionsVariable?>.attr_prefill) {\n\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariable?>.attr_prefill[index] != 'undefined' && typeof <?php echo $chatOptionsVariable?>.attr_prefill[index].name != 'undefined') {\n\t\t\t\t\t\t\targumentsQuery.push('prefill['+<?php echo $chatOptionsVariable?>.attr_prefill[index].name+']='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr_prefill[index].value));\n\t\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariable?>.attr_prefill[index].hidden != 'undefined') {\n\t\t\t\t\t\t\t\targumentsQuery.push('hattr[]='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr_prefill[index].name));\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t    \t\t};\n\t    \t};\n\n\t    \tif (typeof <?php echo $chatOptionsVariable?>.attr_prefill_admin != 'undefined') {\n\t    \t\tif (<?php echo $chatOptionsVariable?>.attr_prefill_admin.length > 0){\n\t\t\t\t\tfor (var index in <?php echo $chatOptionsVariable?>.attr_prefill_admin) {\n\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariable?>.attr_prefill_admin[index] != 'undefined') {\n\t\t\t\t\t\t\targumentsQuery.push('value_items_admin['+<?php echo $chatOptionsVariable?>.attr_prefill_admin[index].index+']='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr_prefill_admin[index].value));\n\n\t\t\t\t\t\t    if (typeof <?php echo $chatOptionsVariable?>.attr_prefill_admin[index].hidden != 'undefined') {\n\t\t\t\t\t\t\t     argumentsQuery.push('via_hidden['+<?php echo $chatOptionsVariable?>.attr_prefill_admin[index].index+']='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr_prefill_admin[index].hidden == true ? 't' : 'f'));\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t    if (typeof <?php echo $chatOptionsVariable?>.attr_prefill_admin[index].encrypted != 'undefined') {\n\t\t\t\t\t\t\t     argumentsQuery.push('via_encrypted['+<?php echo $chatOptionsVariable?>.attr_prefill_admin[index].index+']='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr_prefill_admin[index].encrypted == true ? 't' : 'f'));\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t    \t\t};\n\t    \t};\n\n\t    \tif (argumentsQuery.length > 0) {\n\t    \t\tparamsReturn = '&'+argumentsQuery.join('&');\n\t    \t};\n    \t};\n\n    \tif (this.extensionArgs != '') {\n    \t    paramsReturn = paramsReturn + this.extensionArgs;\n    \t}\n\n        var js_args = [];\n        var currentVar = null;\n        for (var index in this.js_variables) {\n            try {\n                currentVar = eval(this.js_variables[index].var);\n                if (typeof currentVar !== 'undefined' && currentVar !== null && currentVar !== '') {\n                    js_args.push('jsvar['+this.js_variables[index].id+']='+encodeURIComponent(currentVar));\n                }\n            } catch(err) {\n                \n            }\n        }\n\n        if (js_args.length > 0) {\n            paramsReturn = paramsReturn + '&' + js_args.join('&');\n        }\n\n    \tif (this.prefillMessage != '') {\n    \t   paramsReturn = paramsReturn + '&' + 'prefillMsg=' + encodeURIComponent(this.prefillMessage);\n    \t}\n\n        if (this.tag != '') {\n            paramsReturn = paramsReturn + this.tag;\n        }\n\n        paramsReturn = paramsReturn + '&' + 'tzuser=' + encodeURIComponent(this.getTimeZone());\n\n    \treturn paramsReturn;\n    },\n\n    setDefaultMessage : function(msg) {\n        this.prefillMessage = msg;\n    },\n\n    parseOptionsOnline : function(){\n    \targumentsQuery = new Array();\n\n\t\tif (typeof <?php echo $chatOptionsVariable?> != 'undefined') {\n\t    \tif (typeof <?php echo $chatOptionsVariable?>.attr_online != 'undefined') {\n\t    \t\tif (<?php echo $chatOptionsVariable?>.attr_online.length > 0){\n\t\t\t\t\tfor (var index in <?php echo $chatOptionsVariable?>.attr_online) {\n\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariable?>.attr_online[index] != 'undefined' && typeof <?php echo $chatOptionsVariable?>.attr_online[index].name != 'undefined') {\n\t\t\t\t\t\t\targumentsQuery.push('onattr['+<?php echo $chatOptionsVariable?>.attr_online[index].name+']='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr_online[index].value));\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t    \t\t};\n\t    \t};\n    \t};\n\n        if (argumentsQuery.length > 0) {\n            return '&'+argumentsQuery.join('&');\n        };\n\n    \treturn '';\n    },\n\n    parseStorageArguments : function() {\n    \tif (sessionStorage && sessionStorage.getItem('lhc_ref') && sessionStorage.getItem('lhc_ref') != '') {\n    \t\treturn '&r='+encodeURIComponent(sessionStorage.getItem('lhc_ref'));\n    \t}\n    \treturn '';\n    },\n\n\taddEvent : (function () {\n\t  if (document.addEventListener) {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.addEventListener(type, fn, false);\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lh_inst.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  } else {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.attachEvent('on' + type, function () { return fn.call(el, window.event); });\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lh_inst.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  }\n\t})(),\n\n\tremoveEvent : function(target, type, callback) {\n        if (target.removeEventListener){\n            target.removeEventListener(type,callback);\n        } else {\n            target.detachEvent('on'+type,callback);\n        }\n    },\n\n\t<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/show_start_window.tpl.php')); ?>\n\n    toggleStatusWidget : function(hide){\n      if(document.getElementById('<?php echo $chatCSSPrefix?>_status_container') != null) {\n        if (hide == true){\n          this.addClass(document.getElementById('<?php echo $chatCSSPrefix?>_status_container'),'hide-status');\n        } else {\n          this.removeClass(document.getElementById('<?php echo $chatCSSPrefix?>_status_container'),'hide-status');\n        }\n      }\n    },\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/open_chat_window.tpl.php')); ?>\n\n    chatOpenedCallback : function(type){\n    \tif (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback.start_chat_cb != 'undefined') {\n    \t\t<?php echo $chatOptionsVariable?>.callback.start_chat_cb(type+this.substatus);\n    \t\tthis.substatus = '';\n    \t}\n    },\n\n    chatClosedCallback : function(type){\n      if (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback.close_chat_cb != 'undefined') {\n        <?php echo $chatOptionsVariable?>.callback.close_chat_cb(type+this.substatus);\n        this.substatus = '';\n      }\n    },\n\n    genericCallback : function(name){\n    \tif (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback[name] != 'undefined') {\n    \t\t<?php echo $chatOptionsVariable?>.callback[name](this);\n    \t}\n    },\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/show_status_widget.tpl.php')); ?>\n\n    timeoutInstance : null,\n\n    stopCheckNewMessage : function() {\n        clearTimeout(this.timeoutInstance);\n    },\n\n    tag : '',\n\n    addTag : function(params) {\n\n        if (typeof params === 'string') {\n            var params = {tag : params};\n        }\n\n        if (typeof params['child_mode'] !== 'undefined' && params['child_mode'] == true && typeof(parent) !== 'undefined') {\n            if (typeof window.parent.lh_inst !== 'undefined') {\n                window.parent.lh_inst.addTag({'tag':params['tag']});\n            } else {\n                parent.postMessage('lhc_add_tag:'+params['tag'], '*');\n            }\n        } else {\n            this.tag = this.tag != '' ? this.tag + ',' + params['tag'] : '&tag='+params['tag'];\n            if (this.timeoutStatusWidgetOpen == 0) {\n                this.startNewMessageCheckSingle();\n            }\n        }\n    },\n\n    updateAttribute : function(attributes) {\n        var xhr = new XMLHttpRequest();\n        xhr.open( \"POST\", '<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/updateattribute'+this.getAppendCookieArguments(), true);\n     \txhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n     \txhr.send( \"data=\" + encodeURIComponent( this.JSON.stringify(attributes) ) );\n    },\n\n    startNewMessageCheck : function() {\n    \t<?php /*var vid = this.cookieDataPers.vid;\n    \tvar inst = this;\n    \tvar locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n\n        this.timeoutInstance = setTimeout(function() {\n            lh_inst.removeById('lhc_operator_message');\n            var dynamic = inst.dynamicAssigned.length > 0 ? '/(dyn)/' +  inst.dynamicAssigned.join('/') : '';\n            var th = document.getElementsByTagName('head')[0];\n            var s = document.createElement('script');\n            s.setAttribute('id','lhc_operator_message');\n            s.setAttribute('type','text/javascript');\n            s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+lh_inst.lang+'/chat/chatcheckoperatormessage<?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $theme !== false ? print '/(theme)/'.$theme->id : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $department !== false ? print '/(department)/'.$department : ''?><?php $identifier !== false ? print '/(identifier)/'.htmlspecialchars($identifier) : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?><?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ?  '/(fullheight)/true' : '/(fullheight)/false' ?>/(vid)/'+vid + lh_inst.survey_id + '/(uactiv)/'+lh_inst.userActive+'/(wopen)/'+lh_inst.timeoutStatusWidgetOpen+dynamic+'?l='+locationCurrent+inst.tag+'&dt='+encodeURIComponent(document.title)+'&ts='+Date.now());\n            th.appendChild(s);\n            lh_inst.startNewMessageCheck();\n        }, <?php echo (int)(erLhcoreClassModelChatConfig::fetch('sync_sound_settings')->data['check_for_operator_msg']*1000); ?> );*/ ?>\n    },\n\n    getTzOffset : function(){\n\t    Date.prototype.stdTimezoneOffset = function() {\n\t\t    var jan = new Date(this.getFullYear(), 0, 1);\n\t\t    var jul = new Date(this.getFullYear(), 6, 1);\n\t\t    return Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n\t\t};\n\n\t\tDate.prototype.dst = function() {\n\t\t    return this.getTimezoneOffset() < this.stdTimezoneOffset();\n\t\t};\n\n\t\tvar today = new Date();\n\t\tvar timeZoneOffset = 0;\n\n\t\tif (today.dst()) {\n\t\t\ttimeZoneOffset = today.getTimezoneOffset();\n\t\t} else {\n\t\t\ttimeZoneOffset = today.getTimezoneOffset()-60;\n\t\t};\n\n\t\treturn (timeZoneOffset/60)*-1;\n    },\n\n    startNewMessageCheckSingle : function() {\n        if (!lh_inst.cookieData.hash) {\n            var vid = this.cookieDataPers.vid;\n            lh_inst.removeById('lhc_operator_message');\n            var th = document.getElementsByTagName('head')[0];\n            var s = document.createElement('script');\n            var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n            var tzOffset = this.getTzOffset();\n\n            var dynamic = this.dynamicAssigned.length > 0 ? '/(dyn)/' +  this.dynamicAssigned.join('/'): '';\n\n            s.setAttribute('id','lhc_operator_message');\n            s.setAttribute('type','text/javascript');\n            s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/chatcheckoperatormessage<?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php is_object($theme) ? print '/(theme)/'.$theme->id : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $department !== false ? print '/(department)/'.$department : ''?><?php $identifier !== false ? print '/(identifier)/'.htmlspecialchars($identifier) : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?><?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ?  '/(fullheight)/true' : '/(fullheight)/false' ?>/(tz)/' + tzOffset + this.survey_id + '/(count_page)/1/(vid)/'+vid+'/(uactiv)/'+lh_inst.userActive+'/(wopen)/'+lh_inst.timeoutStatusWidgetOpen+dynamic+'?l='+locationCurrent+this.tag+this.parseStorageArguments()+this.parseOptionsOnline()+this.parseOptions()+'&dt='+encodeURIComponent(document.title)+'&ts='+Date.now());\n            th.appendChild(s);\n        }\n    },\n\n    logPageView : function() {\n    \tvar vid = this.cookieDataPers.vid;\n        var th = document.getElementsByTagName('head')[0];\n        var s = document.createElement('script');\n        var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n        var tzOffset = this.getTzOffset();\n        s.setAttribute('id','lhc_log_pageview');\n        s.setAttribute('type','text/javascript');\n        s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/logpageview<?php $department !== false ? print '/(department)/'.$department : ''?><?php $identifier !== false ? print '/(identifier)/'.htmlspecialchars($identifier) : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?>/(tz)/'+tzOffset+'/(vid)/' + vid + this.survey_id + '/(uactiv)/'+lh_inst.userActive+'/(wopen)/'+lh_inst.timeoutStatusWidgetOpen+'?l='+locationCurrent+this.parseStorageArguments()+this.parseOptionsOnline()+'&dt='+encodeURIComponent(document.title)+'&ts='+Date.now());\n        th.appendChild(s);\n    },\n\n    updateJSVars : function(vars){\n        var xhr = new XMLHttpRequest();\n        xhr.open( \"POST\", '<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/updatejsvars'+this.getAppendCookieArguments(), true);\n        xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        xhr.send( \"data=\" + encodeURIComponent( this.JSON.stringify(vars) ) );\n    },\n\n    storeEvents : function() {\n        if (typeof <?php echo $chatOptionsVariable?>.events != 'undefined') {\n            if (<?php echo $chatOptionsVariable?>.events.length > 0) {\n                 var xhr = new XMLHttpRequest();\n                 xhr.open( \"POST\", '<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/logevent'+this.getAppendCookieArguments(), true);\n             \t xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n             \t xhr.send( \"data=\" + encodeURIComponent( this.JSON.stringify(<?php echo $chatOptionsVariable?>.events) ) );\n             \t <?php echo $chatOptionsVariable?>.events = new Array();\n            }\n        }\n    },\n\n    logEvent : function(events) {\n        <?php echo $chatOptionsVariable?>.events = events;\n        this.storeEvents();\n    },\n\n    removeCookieAttr : function(attr){\n    \tif (this.cookieData[attr]) {\n    \t\tdelete this.cookieData[attr];\n    \t\tthis.storeSesCookie();\n    \t}\n    },\n\n    addCookieAttribute : function(attr, value){\n    \tif (!this.cookieData[attr] || this.cookieData[attr] != value){\n\t    \tthis.cookieData[attr] = value;\n\t    \tthis.storeSesCookie();\n    \t}\n    },\n\n    storePersistenCookie : function() {\n    \ttry {\n            var cookieParams = {expires:16070400};\n\n            if ((this.isWildcardCookie() === null && 0 == <?php echo (int)$noWildcardCookie;?>) || (this.isWildcardCookie() === true)) {\n                cookieParams.domain = <?php ($trackDomain != '' ? print \"'.{$trackDomain}'\" : print \"this.getCookieDomain()\");?>;\n            }\n\n\t    \tlhc_Cookies('lhc_per',this.JSON.stringify(this.cookieDataPers),cookieParams);\n\t    } catch(err) { };\n    },\n\n    checkCookieTime : function() {\n        if (!this.cookieDataPers['ex'] || this.cookieDataPers['ex'] < Math.round(Date.now()/100000000)) {\n            this.cookieDataPers['ex'] = Math.round(Date.now()/100000000)+10;\n            this.storePersistenCookie();\n            var xhr = new XMLHttpRequest();\n            xhr.open( \"GET\", '<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/extendcookie/'+this.cookieDataPers.vid, true);\n            xhr.send();\n        }\n    },\n\n\tsetVid : function(vid) {\n\t\tif ((this.cookieDataPers.vid && vid != this.cookieDataPers.vid) || !this.cookieDataPers.vid) {\n\n\t\t\tvar old = this.cookieDataPers.vid;\n\t\t\tthis.addCookieAttributePersistent('vid',vid);\n\n\t\t\t<?php if ($trackOnline == true && $disable_online_tracking == false) : ?>\n\t\t\tlh_inst.stopCheckNewMessage();\n\t\t\tlh_inst.logPageView();\n\t\t\tlh_inst.startNewMessageCheckSingle();\n\n\t\t\t<?php endif;?>\n\n\t\t\tif (old && old != this.cookieDataPers.vid) {\n\t\t\t\tvar inst = this;\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\t        xhr.open( \"POST\", '<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+inst.lang+'/chat/setnewvid', true);\n\t\t\t     \txhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\t\t\t     \txhr.send( \"data=\" + encodeURIComponent( inst.JSON.stringify({'vid':old,'new':vid}) ) );\n\t\t\t\t},1000);\n\t\t\t}\n\t\t}\n\t},\n\n    storeSesCookie : function(){\n    \t<?php if ($trackDomain == '' && $disableHTML5Storage == 0) : ?>\n    \tif (localStorage) {\n    \t\ttry {\n    \t\t\tlocalStorage.setItem('lhc_ses',this.JSON.stringify(this.cookieData));\n    \t\t} catch(err) { // Fallback to cookie\n                var cookieParams = {};\n                if ((this.isWildcardCookie() === null && 0 == <?php echo (int)$noWildcardCookie;?>) || (this.isWildcardCookie() === true)) {\n                    cookieParams.domain = <?php ($trackDomain != '' ? print \"'.{$trackDomain}'\" : print \"this.getCookieDomain()\");?>;\n                }\n                lhc_Cookies('lhc_ses',this.JSON.stringify(this.cookieData),cookieParams);\n    \t\t};\n    \t} else {\n    \t<?php endif;?>\n            var cookieParams = {};\n            if ((this.isWildcardCookie() === null && 0 == <?php echo (int)$noWildcardCookie;?>) || (this.isWildcardCookie() === true)) {\n                cookieParams.domain = <?php ($trackDomain != '' ? print \"'.{$trackDomain}'\" : print \"this.getCookieDomain()\");?>;\n            }\n            lhc_Cookies('lhc_ses',this.JSON.stringify(this.cookieData),cookieParams);\n\t    <?php if ($trackDomain == '' && $disableHTML5Storage == 0) : ?>}<?php endif;?>\n    },\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/init_session_storage.tpl.php')); ?>\n\n    storeReferrer : function(ref){\n    \tif (sessionStorage && !sessionStorage.getItem('lhc_ref')) {\n    \t\ttry {\n    \t\t\tsessionStorage.setItem('lhc_ref',ref);\n    \t\t} catch(err) {};\n    \t}\n    },\n\n    executeExtension : function(extension, args) {\n        if (this.iframeLoaded) {\n            if (this.isMinimized === true) {\n                this.min()\n            } else {\n                this.showStartWindow();\n            }\n            var iframe = document.getElementById('<?php echo $chatCSSPrefix?>_iframe');\n            if (iframe !== null) {\n                iframe.contentWindow.postMessage('lhc_load_ext:'+extension + '::' + this.JSON.stringify(typeof args !== 'undefined' ? args : null), '*');\n            }\n        } else {\n            this.showStartWindow();\n            this.extensionCommands.push({'ext':extension, 'arg':args});\n        }\n    },\n\n    makeScreenshot : function() {\n    \tvar inst = this;\n    \tif (typeof html2canvas == \"undefined\") {\n\t\t   \t\tvar th = document.getElementsByTagName('head')[0];\n\t\t        var s = document.createElement('script');\n\t\t        s.setAttribute('type','text/javascript');\n\t\t        s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('js/html2canvas.min.js');?>');\n\t\t        th.appendChild(s);\n\t\t        s.onreadystatechange = s.onload = function(){\n\t\t        \tinst.makeScreenshot();\n\t\t        };\n    \t} else {\n\t\t    \ttry {\n\t\t\t\t  \thtml2canvas(document.body, {\n\t\t\t\t\t\t  onrendered: function(canvas) {\n\t\t\t\t\t\t         var xhr = new XMLHttpRequest();\n\t\t\t\t\t\t         xhr.open( \"POST\", '<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+lh_inst.lang+'/file/storescreenshot'+inst.getAppendCookieArguments(), true);\n\t\t\t\t\t\t\t     xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\t\t\t\t\t\t\t     xhr.send( \"data=\" + encodeURIComponent( canvas.toDataURL() ) );\n\t\t\t\t\t\t  }\n\t\t\t\t\t});\n\t\t\t   } catch(err) {\n\n\t\t\t   }\n    \t};\n    },\n\n    finishScreenSharing : function(){\n    \tthis.removeById('lhc_status_mirror');\n\t\tthis.removeCookieAttr('shr');\n\t\tthis.removeCookieAttr('shrm');\n\t\tthis.isSharing = false;\n\n\t\tvar vid = this.cookieDataPers.vid;\n        var th = document.getElementsByTagName('head')[0];\n        var s = document.createElement('script');\n        var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n        var tzOffset = this.getTzOffset();\n        s.setAttribute('id','lhc_finish_shr');\n        s.setAttribute('type','text/javascript');\n        s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+lh_inst.lang+'/cobrowse/finishsession/(sharemode)/'+lh_inst.sharemode+lh_inst.getAppendCookieArguments());\n        th.appendChild(s);\n        this.cobrowser = null;\n    },\n\n    cobrowse : null,\n\n    startCoBrowse : function(chatHash,sharemode){\n    \tvar inst = this;\n    \tif (this.isSharing == false && (this.cookieData.shr || <?php echo (int)erLhcoreClassModelChatConfig::fetch('sharing_auto_allow')->current_value?> == 1 || confirm(<?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Allow operator to see your page content?'),ENT_QUOTES))?>)))\n    \t{\n    \t\tthis.sharehash = chatHash || this.cookieData.hash || this.cookieData.shr;\n    \t\tthis.sharemode = sharemode || this.cookieData.shrm || 'chat';\n    \t\tthis.addCookieAttribute('shr',this.sharehash);\n    \t\tthis.addCookieAttribute('shrm',this.sharemode);\n\n\t    \tif (typeof TreeMirror == \"undefined\") {\n\t\t\t   \t\tvar th = document.getElementsByTagName('head')[0];\n\t\t\t        var s = document.createElement('script');\n\t\t\t        s.setAttribute('type','text/javascript');\n\t\t\t        s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::designJS('js/cobrowse/compiled/cobrowse.visitor.min.js');?>');\n\t\t\t        th.appendChild(s);\n\t\t\t        s.onreadystatechange = s.onload = function(){\n\t\t\t        \tinst.startCoBrowse(inst.sharehash,this.sharemode);\n\t\t\t        };\n\t    \t} else {\n\t\t    \ttry {\n\t\t    \t\tthis.isSharing = true;\n\t\t    \t\tthis.addCookieAttribute('shr',this.sharehash);\n\t\t    \t\tthis.addCookieAttribute('shrm',this.sharemode);\n\t\t    \t\t<?php include(erLhcoreClassDesign::designtpl('lhcobrowse/userinit.tpl.php')); ?>\n\t\t\t   } catch(err) {\n\t\t\t  \t\tconsole.log(err);\n\t\t\t   }\n\t    \t};\n    \t}\n    },\n\n    lhc_need_help_hide :function() {\n    \tthis.removeById('<?php echo $chatCSSPrefix?>_need_help_container');\n    \t<?php $needHelpTimeout = $theme !== false ? $theme->show_need_help_timeout : erLhcoreClassModelChatConfig::fetch('need_help_tip_timeout')->current_value; ?>\n    \t<?php if ($needHelpTimeout > 0) : ?>\n    \tthis.addCookieAttributePersistent('lhc_hnh','<?php echo (($needHelpTimeout * 3600) + time())?>');\n    \t<?php else : ?>\n    \tif (localStorage) {\n\t    \tlocalStorage.removeItem('lhc_hnh');\n    \t};\n    \tthis.addCookieAttribute('lhc_hnh','<?php echo ((24 * 3600) + time())?>');\n    \t<?php endif; ?>\n\n    \treturn false;\n    },\n\n    getPersistentAttribute : function(attr) {\n    \t<?php if ($trackDomain == '' && $disableHTML5Storage == 0) : ?>\n    \tif (localStorage) {\n\t    \treturn localStorage.getItem(attr);\n    \t} else {\n    \t<?php endif;?>\n\t    \tif (this.cookieDataPers[attr]){\n\t\t    \treturn this.cookieDataPers[attr];\n\t    \t}\n\t    \treturn null;\n    \t<?php if ($trackDomain == '' && $disableHTML5Storage == 0) : ?>}<?php endif;?>\n    },\n\n    addCookieAttributePersistent : function(attr, value){\n    \t<?php if ($trackDomain == '' && $disableHTML5Storage == 0) : ?>\n    \tif (localStorage) {\n    \t\ttry {\n    \t\t\tlocalStorage.setItem(attr,value);\n    \t\t} catch(err) {\n    \t\t\tif (!this.cookieDataPers[attr] || this.cookieDataPers[attr] != value){\n\t\t\t    \tthis.cookieDataPers[attr] = value;\n\t\t\t    \tthis.storePersistenCookie();\n\t\t    \t};\n    \t\t};\n    \t} else {\n    \t<?php endif;?>\n    \tif (!this.cookieDataPers[attr] || this.cookieDataPers[attr] != value){\n\t    \tthis.cookieDataPers[attr] = value;\n\t    \tthis.storePersistenCookie();\n    \t}\n    \t<?php if ($trackDomain == '' && $disableHTML5Storage == 0) : ?>}<?php endif;?>\n    },\n\n    lhc_need_help_click : function() {\n    \tthis.lhc_need_help_hide();\n    \tthis.lh_openchatWindow();\n    },\n\n    initLanguage : function() {\n   \t\tvar langUser = this.getPersistentAttribute('lng');\n    \tthis.lang = (langUser != null && langUser != '' && langUser != undefined && this.langDefault != langUser) ? langUser : this.lang;\n    },\n\n    resetTimeoutActivity : function() {\n\n        var wasInactive = this.userActive == 0;\n        this.userActive = 1;\n\n        if (wasInactive == true) {\n            this.syncUserStatus(1);\n        }\n\n        clearTimeout(this.timeoutActivity);\n        var _that = this;\n        this.timeoutActivity = setTimeout(function(){\n            _that.userActive = 0;\n            _that.syncUserStatus(1);\n        }, 300*1000);\n    },\n\n    timeoutActivity : null,\n    userActive : 1,\n    timeoutStatuscheck : null,\n    timeoutStatusWidgetOpen : 0,\n\n    syncUserStatus : function(sender) {\n    \tvar hashAppend = this.cookieData.hash ? '/(hash)/'+this.cookieData.hash : '';\n\t\tvar hashResume = this.cookieData.hash_resume ? '/(hash_resume)/'+this.cookieData.hash_resume : '';\n        this.removeById('lhc_check_status');\n        var th = document.getElementsByTagName('head')[0];\n        var s = document.createElement('script');\n        s.setAttribute('id','lhc_check_status');\n        s.setAttribute('type','text/javascript');\n        s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/chatcheckstatus<?php $department !== false ? print '/(department)/'.$department : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?><?php $disable_online_tracking === true ? print '/(dot)/true' : ''?><?php $hide_offline == 'true' ? print '/(hide_offline)/true' : ''?>/(status)/' + this.isOnline + this.survey_id + (this.cookieDataPers.vid ? '/(vid)/'+this.cookieDataPers.vid : '')+ hashAppend + hashResume + '/(uactiv)/'+this.userActive+'/(wopen)/'+this.timeoutStatusWidgetOpen + '/(uaction)/'+sender+'/(isproactive)/'+this.isProactivePending+'/?ts='+Date.now());\n        th.appendChild(s);\n    },\n\n    checkStatusChat : function() {\n    \tif (<?php echo (int)erLhcoreClassModelChatConfig::fetch('checkstatus_timeout')->current_value > 0 ? 'true' : 'false' ?> || this.isProactivePending === 1) {\n        \tclearTimeout(this.timeoutStatuscheck);\n        \tvar _that = this;\n            this.timeoutStatuscheck = setTimeout(function() {\n                _that.syncUserStatus(0);\n                _that.checkStatusChat();\n            },<?php echo ((int)erLhcoreClassModelChatConfig::fetch('checkstatus_timeout')->current_value > 0 ? (int)erLhcoreClassModelChatConfig::fetch('checkstatus_timeout')->current_value : 10)*1000; ?>);\n        }\n    },\n\n    refreshCustomFields : function() {\n        var xhr = new XMLHttpRequest();\n        xhr.open( \"POST\", '<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+lh_inst.lang+'/chat/refreshcustomfields'+this.getAppendCookieArguments() , true);\n\t    xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\t    xhr.send(this.parseOptions());\n    },\n\n    invitationUrl  :  '',\n\n    showBasicInvitation : function(url) {\n        lh_inst.isProactivePending = 1;\n        lh_inst.invitationUrl = url;\n        var elm = document.getElementById('<?php echo $chatCSSPrefix?>_status_container');\n        if (elm !== null){\n            this.addClass(elm,'<?php echo $chatCSSPrefix?>_invitation-mode');\n        }\n    },\n\n    attatchActivityListeners : function() {\n        <?php if ((int)erLhcoreClassModelChatConfig::fetch('track_activity')->current_value > 0) : ?>\n        var resetTimeout = function() {\n            lh_inst.resetTimeoutActivity();\n        };\n\n        <?php if ((int)erLhcoreClassModelChatConfig::fetch('track_mouse_activity')->current_value == 1) : ?>\n        this.addEvent(window,'mousemove',resetTimeout);\n        this.addEvent(document,'mousemove',resetTimeout);\n        <?php endif;?>\n\n        this.addEvent(window,'mousedown',resetTimeout);\n        this.addEvent(window,'click',resetTimeout);\n        this.addEvent(window,'scroll',resetTimeout);\n        this.addEvent(window,'keypress',resetTimeout);\n        this.addEvent(window,'load',resetTimeout);\n        this.addEvent(document,'scroll',resetTimeout);\n        this.addEvent(document,'touchstart',resetTimeout);\n        this.addEvent(document,'touchend',resetTimeout);\n        this.resetTimeoutActivity();\n        <?php endif;?>\n    },\n\n    sendHTMLSnippet : function(messageId, options) {\n        var hashAppend = this.cookieData.hash ? '/(hash)/'+this.cookieData.hash : '';\n        var hashResume = this.cookieData.hash_resume ? '/(hash_resume)/'+this.cookieData.hash_resume : '';\n        var th = document.getElementsByTagName('head')[0];\n        var s = document.createElement('script');\n        s.setAttribute('type','text/javascript');\n        var optionsParts = options.split('_');\n        s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/htmlsnippet/'+messageId+'/'+optionsParts[0]+\"/\"+optionsParts[1]+'<?php $department !== false ? print '/(department)/'.$department : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?><?php $disable_online_tracking === true ? print '/(dot)/true' : ''?><?php $hide_offline == 'true' ? print '/(hide_offline)/true' : ''?>/(status)/' + this.isOnline + this.survey_id + (this.cookieDataPers.vid ? '/(vid)/'+this.cookieDataPers.vid : '')+ hashAppend + hashResume + '/(uactiv)/'+this.userActive+'/(wopen)/'+this.timeoutStatusWidgetOpen + '/(isproactive)/'+this.isProactivePending+'/?ts='+Date.now());\n        th.appendChild(s);\n    },\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/send_notification.tpl.php')); ?>\n\n    handleMessage : function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n        var originDomain = e.origin.replace(\"http://\", \"\").replace(\"https://\", \"\").replace(/:(\\d+)$/,'');\n\n        // We allow to send events only from chat installation or page where script is embeded.\n        if (\n            originDomain !== '<?php echo $_SERVER['HTTP_HOST']?>' &&\n            originDomain !== document.domain &&\n            action != 'lhc_sizing_chat_survey' &&\n            action != 'lh_survey_runed' &&\n            action != 'lhc_end_cookies'\n        ) {\n            return;\n        }\n\n        if (action == 'lhc_newopmsg') {\n            if ( lh_inst.isMinimized == true) {\n                var msgNum = document.getElementById('<?php echo $chatCSSPrefix?>-msg-number');\n                msgNum.innerHTML = (parseInt(msgNum.msg_number)+1);\n                msgNum.msg_number++;\n                var dm = document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n                lh_inst.addClass(dm, '<?php echo $chatCSSPrefix?>-has-unread-message');\n            }\n        } else if (action == 'lhc_sizing_chat') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('<?php echo $chatCSSPrefix?>_iframe');\n    \t\tvar iframeContainer = document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n\n            if (typeof lh_inst.pendingHeight !== 'undefined' && typeof lh_inst.heightSet == 'undefined' && lh_inst.pendingHeight > 0) {\n                height = lh_inst.pendingHeight;\n                lh_inst.heightSet = true;\n            }\n\n    \t\tif (elementObject){\n    \t\t\telementObject.height = height;\n    \t\t\telementObject.style.height = height+'px';\n    \t\t}\n\n    \t\tiframeContainer.className = iframeContainer.className;\n    \t} else if (action == 'lhc_ch') {\n    \t\tvar parts = e.data.split(':');\n    \t\tif (parts[1] != '' && parts[2] != '') {\n    \t\t\tlh_inst.addCookieAttribute(parts[1],parts[2]);\n    \t\t\tif (parts[1] == 'hash') {\n                    lh_inst.chat_started = true;\n    \t\t\t}\n    \t\t}\n    \t} else if (action == 'lhc_open_restore') {\n    \t\tlh_inst.lh_openchatWindow();\n        } else if (action == 'lhc_widget_loaded') {\n            lh_inst.iframeLoaded = true;\n            if (lh_inst.iframePreloaded == false) {\n                lh_inst.toggleStatusWidget(true);\n                lh_inst.removeClass(document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>'),'<?php echo $chatCSSPrefix?>-delayed');\n            }\n\n            if (lh_inst.extensionCommands.length > 0) {\n                lh_inst.extensionCommands.forEach(function(evt) {\n                    var iframe = document.getElementById('<?php echo $chatCSSPrefix?>_iframe');\n                    if (iframe !== null) {\n                        iframe.contentWindow.postMessage('lhc_load_ext:' + evt['ext'] + '::' + lh_inst.JSON.stringify(typeof evt['arg'] !== 'undefined' ? evt['arg'] : null), '*');\n                    }\n                });\n                lh_inst.extensionCommands = [];\n            }\n\n    \t} else if (action == 'lhc_continue_chat') {\n    \t\tlh_inst.showStartWindow();\n        } else if (action == 'lhc_html_snippet') {\n            lh_inst.sendHTMLSnippet(e.data.split(':')[1],e.data.split(':')[2]);\n    \t} else if (action == 'lhc_add_tag') {\n    \t\tlh_inst.addTag({tag:e.data.split(':')[1]});\n    \t} else if (action == 'lhc_cfrefresh') {\n    \t\tlh_inst.refreshCustomFields();\n    \t} else if (action == 'lhc_screenshot') {\n    \t\tlh_inst.makeScreenshot();\n    \t} else if (action == 'lhc_disable_survey') {\n    \t\tlh_inst.surveyShown = true;\n    \t} else if (action == 'lhc_chat_closed_explicit') {\n    \t    lh_inst.explicitClose = true;\n    \t\tlh_inst.hide();\n    \t} else if (action == 'lhc_chat_closed') {\n    \t    var parts = e.data.split(':');\n    \t    parts.shift();\n    \t    if (parts.length > 0){\n    \t       lh_inst.appendArg(parts);\n    \t    }\n    \t\tlh_inst.showSurvey();\n    \t} else if (action == 'lhc_cobrowse') {\n    \t\tlh_inst.startCoBrowse(e.data.split(':')[1],'chat');\n    \t} else if (action == 'lhc_cobrowse_online') {\n    \t\tlh_inst.startCoBrowse(e.data.split(':')[1],'onlineuser');\n    \t} else if (action == 'lhc_chat_redirect') {\n    \t\tdocument.location = e.data.split(':')[1].replace(new RegExp('__SPLIT__','g'),':');\n    \t} else if (action == 'lhc_cobrowse_cmd') {\n    \t\tif (lh_inst.cobrowser !== null){\n    \t\tlh_inst.cobrowser.handleMessage(e.data.split(':'));\n    \t\t};\n    \t} else if (action == 'lhc_lang') {\n    \t\tvar lang = e.data.split(':')[1];\n    \t\tif (lang != undefined) {\n    \t\t\tlh_inst.addCookieAttributePersistent('lng',lang);\n    \t\t\tlh_inst.lang = lang;\n    \t\t} else {\n    \t\t\tlh_inst.addCookieAttributePersistent('lng','');\n    \t\t\tlh_inst.lang = '';\n    \t\t}\n        } else if (action == 'lhc_notification') {\n                var parts = e.data.split(':');\n                lh_inst.sendNotification(parts);\n    \t} else if (action == 'lh_callback') {\n    \t\tvar functionName = e.data.split(':')[1];\n    \t\tlh_inst.genericCallback(functionName);\n    \t} else if (action == 'lhc_close') {\n    \t\tlh_inst.hide();\n                lh_inst.chatClosedCallback('message')\n    \t} <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/handlemessage_multiinclude.tpl.php')); ?>\n    }\n};\n\nfunction preloadDataLHC() {\n\n    if (lh_inst.rendered == true) {\n        return;\n    }\n\n    lh_inst.rendered = true;\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/lhc_chat_multiinclude.tpl.php')); ?>\n\n    var cookieData = lhc_Cookies('lhc_per');\n\n    if ( typeof cookieData === \"string\" && cookieData) {\n\n\n        if (cookieData.indexOf('|') !== -1) {\n            var contentReturn = {};\n            var parts = cookieData.split('|');\n\n            for (var i = 0; i < parts.length / 2; i++) {\n                contentReturn[parts[i * 2]] = parts[(i * 2) + 1];\n            }\n\n            lh_inst.cookieDataPers = contentReturn;\n\n        } else {\n            lh_inst.cookieDataPers = lh_inst.JSON.parse(cookieData);\n        }\n\n        if (!lh_inst.cookieDataPers.vid) {\n            lh_inst.cookieDataPers = {<?php isset($vid) ? print 'vid:\\''.$vid.'\\'' : ''?>};\n            lh_inst.storePersistenCookie();\n        } else {\n            lh_inst.checkCookieTime();\n        }\n\n    } else {\n        lh_inst.cookieDataPers = {<?php isset($vid) ? print 'vid:\\''.$vid.'\\'' : ''?>};\n        lh_inst.storePersistenCookie();\n    };\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/lhc_chat_after_cookie_multiinclude.tpl.php')); ?>\n\n    lh_inst.initSessionStorage();\n    lh_inst.initLanguage();\n\n    <?php if ($referrer != '') : ?>\n        lh_inst.storeReferrer(<?php echo json_encode($referrer)?>);\n    <?php endif; ?>\n\n\n    <?php if (!($isOnlineHelp == false && $hide_offline == 'true')) : ?>\n\n        lh_inst.showStatusWidget();\n\n        if (lh_inst.cookieData.hash) {\n        lh_inst.stopCheckNewMessage();\n        lh_inst.substatus = '_reopen';\n        lh_inst.toggleStatusWidget(true);\n        lh_inst.showStartWindow(undefined,true);\n        <?php if (($track_online_users == true || $trackOnline == true) && $disable_online_tracking == false) : ?>\n            lh_inst.logPageView();\n            lh_inst.online_tracked = true;\n        <?php endif;?>\n        } else {\n            lh_inst.preloadWidget();\n        }\n\n        <?php /*if ($check_operator_messages == 'true' && $disable_pro_active == false && $disable_online_tracking == false) : ?>\n            if (!lh_inst.cookieData.hash) {\n            lh_inst.startNewMessageCheck();\n            lh_inst.online_tracked = true;\n            }\n        <?php endif;*/ ?>\n\n        <?php if ($disable_pro_active == false && $track_online_users == true && $disable_online_tracking == false) : ?>\n            if (!lh_inst.cookieData.hash) {\n            lh_inst.startNewMessageCheckSingle();\n            lh_inst.online_tracked = true;\n            }\n        <?php endif;?>\n\n        <?php if ($trackOnline == true && $disable_online_tracking == false) : ?>\n            if (lh_inst.online_tracked == false) {\n            lh_inst.logPageView();\n            };\n        <?php endif;?>\n\n        if (lh_inst.cookieData.shr) {\n        lh_inst.startCoBrowse(lh_inst.cookieData.shr);\n        };\n\n    <?php elseif ($track_online_users == true) : ?>\n        lh_inst.logPageView();\n    <?php endif;?>\n\n    // Try to monitor variable if it's lhc_var\n    try {\n        if (typeof lhc_var !== 'undefined')\n        {\n            var validator = {\n                set: function(obj, prop, value) {\n                    // The default behavior to store the value\n                    obj[prop] = value;\n\n                    clearTimeout(lh_inst.updateVarsTimeout);\n\n                    lh_inst.updateVarsTimeout = setTimeout(function(){\n                        lh_inst.updateJSVars(obj);\n                    },1000);\n\n                    // Indicate success\n                    return true;\n                }\n            };\n            lhc_var = new Proxy(lhc_var,validator);\n        }\n    } catch(err) {\n\n    };\n\n\n\n    lh_inst.checkStatusChat();\n    lh_inst.attatchActivityListeners();\n    lh_inst.storeEvents();\n    lh_inst.genericCallback('loaded');\n}\n\npreloadDataLHC();\n\nfunction resetLHCRender(){\n    lh_inst.rendered = false;\n}\n\nif ( window.addEventListener ){\n    // FF\n    window.addEventListener(\"message\", lh_inst.handleMessage, false);\n    window.addEventListener(\"pageshow\", preloadDataLHC, false);\n    window.addEventListener(\"beforeunload\", resetLHCRender, false);\n} else if ( window.attachEvent ) {\n    // IE\n    window.attachEvent(\"onmessage\", lh_inst.handleMessage);\n    window.attachEvent(\"onpageshow\", preloadDataLHC);\n    window.attachEvent(\"beforeunload\", resetLHCRender);\n} else if ( document.attachEvent ) {\n    // IE\n    document.attachEvent(\"onmessage\", lh_inst.handleMessage);\n    document.attachEvent(\"onpageshow\", preloadDataLHC);\n    document.attachEvent(\"beforeunload\", resetLHCRender);\n};\n\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.addEventListener('message', function(event) {\n        if (typeof event.data.lhc_ch !== 'undefined' && typeof event.data.lhc_cid !== 'undefined') {\n            lh_inst.readNotification(event.data.lhc_cid, event.data.lhc_ch);\n        }\n    });\n}\n\n<?php endif;exit; // Hide if offline ?>\n\n\n\n", "<?php \n$iconsStatuses['restore_image_url'] = ($theme !== false && $theme->restore_image_url !== false && strpos($theme->restore_image_url, 'http') !== false);\n$iconsStatuses['minimize_image_url'] = ($theme !== false && $theme->minimize_image_url !== false && strpos($theme->minimize_image_url, 'http') !== false);\n$iconsStatuses['close_image_url'] = ($theme !== false && $theme->close_image_url !== false && strpos($theme->close_image_url, 'http') !== false);\n$iconsStatuses['popup_image_url'] = ($theme !== false && $theme->popup_image_url !== false && strpos($theme->popup_image_url, 'http') !== false);\n$iconsStatuses['online_image_url'] = ($theme !== false && $theme->online_image_url !== false && strpos($theme->online_image_url, 'http') !== false);\n$iconsStatuses['offline_image_url'] = ($theme !== false && $theme->offline_image_url !== false && strpos($theme->offline_image_url, 'http') !== false);\n?>\n<?php if ($theme !== false && $theme->modern_look == 0) : ?>\nthis.iframe_html = '<div id=\"<?php echo $chatCSSLayoutOptions['container_id']?>\" <?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ? 'style=\"height:100%\"' : '' ?>>' +\n    '<?php if ($theme !== false && isset($theme->bot_configuration_array['custom_html_header'])) : ?><?php echo str_replace(array(\"\\n\",\"\\r\"), '',$theme->bot_configuration_array['custom_html_header'])?><?php endif?><div id=\"<?php echo $chatCSSPrefix?>_header\"><?php if ($theme !== false && isset($theme->bot_configuration_array['custom_html_header_body'])) : ?><?php echo str_replace(array(\"\\n\",\"\\r\"), '',$theme->bot_configuration_array['custom_html_header_body'])?><?php endif?><?php if ($theme === false || $theme->hide_close == 0) : ?><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" id=\"<?php echo $chatCSSPrefix?>_close\"><img src=\"<?php if ($theme !== false && $theme->close_image_url != '') : ?><?php echo $theme->close_image_url;?><?php else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/cancel.png');?><?php endif;?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" alt=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" /></a><?php endif;?><?php if (erLhcoreClassModelChatConfig::fetch('disable_popup_restore')->current_value == 0 && ($theme === false || $theme->hide_popup == 0)) : ?><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Open in a new window')?>\" id=\"<?php echo $chatCSSPrefix?>_remote_window\"><img src=\"<?php if ($theme !== false && $theme->popup_image_url != '') : ?><?php echo $theme->popup_image_url;?><?php else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/application_double.png');?><?php endif;?>\" alt=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Open in a new window')?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Open in a new window')?>\" /></a><?php endif; ?><a href=\"#\" id=\"<?php echo $chatCSSPrefix?>_min\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Minimize/Restore')?>\"></a><i title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','New messages')?>\" id=\"<?php echo $chatCSSPrefix?>-msg-number\"></i></div>' +\n    this.iframe_html + '</div>';\nraw_css = \"#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-min {overflow:hidden}#<?php echo $chatCSSPrefix?>_remote_window{padding-left:5px;}.<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_header{min-width:107px} .<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_iframe_container{display:none} .<?php echo $chatCSSPrefix?>-no-transition{ -webkit-transition: none !important; -moz-transition: none !important;-o-transition: none !important;-ms-transition: none !important;transition: none !important;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-delayed{visibility:hidden;position: fixed;left: -90000px!important;right: auto!important;}#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-delayed .<?php echo $chatCSSPrefix?>-cf{display:none}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> * {line-height:100%;direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial;font-size:12px;line-height:100%;box-sizing: content-box;-moz-box-sizing:content-box;padding:0;margin:0;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> img {border:0;}\\n#<?php echo $chatCSSPrefix?>_header{position:relative;z-index:2147483640;height:<?php ($theme !== false && $theme->header_height > 0) ? print $theme->header_height : print '17' ?>px;overflow:hidden;text-align:right;clear:both;background-color:#<?php $theme !== false ? print $theme->header_background : print '525252' ?>;padding:<?php ($theme !== false && $theme->header_padding > 0) ? print $theme->header_padding : print '5' ?>px;}#<?php echo $chatCSSPrefix?>-msg-number{float: left;color: #FFF;font-size: 12px;font-weight: bold;padding-left: 5px;line-height: 20px;} \\n#<?php echo $chatCSSPrefix?>_min{float:left;padding:2px;}#<?php echo $chatCSSPrefix?>_remote_window,#<?php echo $chatCSSPrefix?>_close{padding:2px;float:right;}.<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_min:before{content:url(<?php if ($theme !== false && $theme->restore_image_url != '') : ?><?php echo $theme->restore_image_url;?><?php else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/restore.png');?><?php endif;?>)}#<?php echo $chatCSSPrefix?>_min:before{content: url('<?php if ($theme !== false && $theme->minimize_image_url != '') : ?><?php echo $theme->minimize_image_url;?><?php else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/min.png');?><?php endif;?>'); position: relative;left:0;top;0} #<?php echo $chatCSSPrefix?>_min{width:14px;height:14px;}\\n#<?php echo $chatCSSPrefix?>_close:hover,#<?php echo $chatCSSPrefix?>_min:hover,#<?php echo $chatCSSPrefix?>_remote_window:hover{opacity:0.4;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> {background-color:#FFF;-moz-user-select:none; -khtml-user-drag:element;cursor: move;cursor: -moz-grab;cursor: -webkit-grab;max-height: 100%;overflow: auto;\\nz-index:2147483640;\\n position: fixed;<?php echo $currentPosition['position_body']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-webkit-border-radius: 5px;-moz-border-radius: 5px;border-radius: 5px; }\\n#<?php echo $chatCSSLayoutOptions['container_id']?> iframe{position:relative;display:block;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> #<?php echo $chatCSSPrefix?>_iframe_container{border:<?php ($theme !== false && $theme->widget_border_width > 0) ? print $theme->widget_border_width : print '1' ?>px solid #<?php $theme !== false ? print $theme->widget_border_color : print 'cccccc' ?>;border-top: 0;border-bottom-left-radius: 5px;border-bottom-right-radius: 5px;overflow: hidden;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> iframe.<?php echo $chatCSSPrefix?>-loading{\\nbackground: #FFF url(<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/general/loading.gif');?>) no-repeat center center; }\\n@media only screen and (max-device-width : <?php ($theme !== false && $theme->widget_response_width > 0) ? print $theme->widget_response_width : print 992?>px) { .<?php echo $chatCSSPrefix?>-opened{position: fixed; overflow: hidden; right: 0px; left: 0px; top: 0px; bottom: 0px;} #<?php echo $chatCSSPrefix?>_header{height:30px;} #<?php echo $chatCSSPrefix?>_header a{padding:7px;}#<?php echo $chatCSSLayoutOptions['container_id']?>{position:fixed;left:0!important;right:0!important;bottom:0!important;top:0!important;border:0;border-radius:0}#<?php echo $chatCSSLayoutOptions['container_id']?> #<?php echo $chatCSSPrefix?>_iframe_container{border:0;height: calc(100% - 40px)}#<?php echo $chatCSSLayoutOptions['container_id']?> iframe{width:100% !important;height: 100%!important} .<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_header a{padding:2px;} #<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-min{<?php echo $currentPosition['mobile_position']?>}}\";\n<?php else : ?>\nthis.iframe_html = '<div id=\"<?php echo $chatCSSLayoutOptions['container_id']?>\" <?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ? 'style=\"height:100%\"' : '' ?>>' +\n                              '<a class=\"status-icon ' +\n                              (this.isOnline == true ? 'online-status-icon' : 'offline-status-icon') +\n                              '\" id=\"<?php echo $chatCSSPrefix?>_status-icon-restore\" href=\"#\" ><i title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','New messages')?>\" id=\"<?php echo $chatCSSPrefix?>-msg-number\"></i></a><div id=\"<?php echo $chatCSSPrefix?>_header\"><ul class=\"<?php echo $chatCSSPrefix?>-cf\"><li><a href=\"#\">&#9776;</a><ul class=\"<?php echo $chatCSSPrefix?>-cf\"><?php if ($theme === false || $theme->hide_close == 0) : ?><li><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" id=\"<?php echo $chatCSSPrefix?>_close\"><img src=\"<?php if ($theme !== false && $theme->close_image_url != '') : ?><?php echo $theme->close_image_url;?><?php else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/cancel.png');?><?php endif;?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" alt=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" /></a></li><?php endif;?><?php if (erLhcoreClassModelChatConfig::fetch('disable_popup_restore')->current_value == 0 && ($theme === false || $theme->hide_popup == 0)) : ?><li><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Open in a new window')?>\" id=\"<?php echo $chatCSSPrefix?>_remote_window\"><img src=\"<?php if ($theme !== false && $theme->popup_image_url != '') : ?><?php echo $theme->popup_image_url;?><?php else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/application_double.png');?><?php endif;?>\" alt=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Open in a new window')?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Open in a new window')?>\" /></a></li><?php endif; ?></ul></li></ul><a href=\"#\" id=\"<?php echo $chatCSSPrefix?>_min\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Minimize/Restore')?>\"></a></div>' +\n                              this.iframe_html + '</div>';\n\nraw_css = \"#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-min {overflow:hidden}#<?php echo $chatCSSLayoutOptions['container_id']?> .status-icon{display:none;}#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-min .status-icon{display:inline-block;<?php echo $currentPosition['border_status_modern']?>;<?php echo $currentPosition['widget_radius_modern']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);-moz-box-shadow:<?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);box-shadow: <?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);text-decoration:none;height:41px;width:41px;font-weight:bold;color:<?php $theme !== false ? print '#'.$theme->text_color : print '#000' ?>;display:block;padding:10px;background:#<?php $theme !== false ? print $theme->onl_bcolor : print '0c8fc4' ?> url('<?php if ($theme !== false && $theme->online_image_url !== false) : print $theme->online_image_url; else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/getstatus/online.svg');?><?php endif;?>') no-repeat center center}#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-min .status-icon.offline-status-icon{background:#888888 url('<?php if ($theme !== false && $theme->offline_image_url !== false) : print $theme->offline_image_url; else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/getstatus/offline.svg');?><?php endif;?>') no-repeat center center}<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/burger_menu_css.tpl.php')); ?> #<?php echo $chatCSSPrefix?>_remote_window{padding-left:5px;}.<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_header{min-width:107px} .<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_iframe_container{display:none} .<?php echo $chatCSSPrefix?>-no-transition{ -webkit-transition: none !important; -moz-transition: none !important;-o-transition: none !important;-ms-transition: none !important;transition: none !important;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-delayed{visibility:hidden;position: fixed;left: -90000px!important;right: auto!important;}#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-delayed .<?php echo $chatCSSPrefix?>-cf{display:none}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> * {line-height:100%;direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial;font-size:12px;line-height:100%;box-sizing: content-box;-moz-box-sizing:content-box;padding:0;margin:0;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> img {border:0;max-width: none}\\n#<?php echo $chatCSSPrefix?>_header{position:relative;z-index:2147483640;height:<?php ($theme !== false && $theme->header_height > 0) ? print $theme->header_height : print '17' ?>px;text-align:right;clear:both;background-color:#<?php $theme !== false ? print $theme->header_background : print '525252' ?>;padding:<?php ($theme !== false && $theme->header_padding > 0) ? print $theme->header_padding : print '5' ?>px;}#<?php echo $chatCSSPrefix?>-msg-number{float: left;color: #ffffff;font-size: 12px;font-weight: normal;line-height: 23px;position: absolute;background-color: red;border-radius: 37px;display: inline-block;padding-left: 8px;padding-right: 8px;margin-top: -5px;margin-left: -4px;} \\n#<?php echo $chatCSSPrefix?>_min{float:right;padding:2px;}.<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_min:before{content:url(<?php if ($iconsStatuses['restore_image_url'] == false) : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php endif; if ($theme !== false && $theme->restore_image_url != '') : ?><?php echo $theme->restore_image_url;?><?php else : ?><?php echo erLhcoreClassDesign::design('images/icons/restore.png');?><?php endif;?>)}#<?php echo $chatCSSPrefix?>_min:before{content: url('<?php if ($theme !== false && $theme->minimize_image_url != '') : ?><?php echo $theme->minimize_image_url;?><?php else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/min.png');?><?php endif;?>'); position: relative;left:0;top;0} #<?php echo $chatCSSPrefix?>_min{width:14px;height:14px;}\\n#<?php echo $chatCSSPrefix?>_min:hover{opacity:0.4;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> {background-color:#FFF;-moz-user-select:none; -khtml-user-drag:element;cursor: move;cursor: -moz-grab;cursor: -webkit-grab;max-height: 100%;\toverflow: auto;\\nz-index:2147483640;\\n position: fixed;<?php echo $currentPosition['position_body']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-webkit-border-radius: 5px;-moz-border-radius: 5px;border-radius: 5px; }\\n#<?php echo $chatCSSLayoutOptions['container_id']?> iframe{position:relative;display:block;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> #<?php echo $chatCSSPrefix?>_iframe_container{border:<?php ($theme !== false && $theme->widget_border_width > 0) ? print $theme->widget_border_width : print '1' ?>px solid #<?php $theme !== false ? print $theme->widget_border_color : print 'cccccc' ?>;border-top: 0;border-bottom-left-radius: 5px;border-bottom-right-radius: 5px;overflow: hidden;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> iframe.<?php echo $chatCSSPrefix?>-loading{\\nbackground: #FFF url(<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/general/loading.gif');?>) no-repeat center center; }\\n@media only screen and (max-device-width : <?php ($theme !== false && $theme->widget_response_width > 0) ? print $theme->widget_response_width : print 992?>px) {ul.<?php echo $chatCSSPrefix?>-cf li ul a{padding:8px 14px!important} ul.<?php echo $chatCSSPrefix?>-cf li:hover ul, ul.<?php echo $chatCSSPrefix?>-cf li ul {top: 30px;} .<?php echo $chatCSSPrefix?>-opened{position: fixed; overflow: hidden; right: 0px; left: 0px; top: 0px; bottom: 0px;} #<?php echo $chatCSSPrefix?>_header{height:30px;} #<?php echo $chatCSSPrefix?>_header a{padding:7px;}#<?php echo $chatCSSLayoutOptions['container_id']?>{position:fixed;left:0!important;right:0!important;bottom:0!important;top:0!important;border:0;border-radius:0}#<?php echo $chatCSSLayoutOptions['container_id']?> #<?php echo $chatCSSPrefix?>_iframe_container{border:0;height: calc(100% - 40px)}#<?php echo $chatCSSLayoutOptions['container_id']?> iframe{width:100% !important;height: 100%!important}} .<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_header{display:none;}.<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_header a{padding:2px;} #<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-min .status-icon{<?php echo $currentPosition['border_status_modern']?>;<?php echo $currentPosition['widget_radius_modern']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);-moz-box-shadow:<?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);box-shadow: <?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);text-decoration:none;height:41px;width:41px;}#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-min{<?php echo $currentPosition['mobile_position_modern']?>}\";\n<?php endif; ?>\n", "<?php foreach ($dynamic_invitation as $invitation) : ?>\n\n<?php if (in_array($invitation->id, $dynamic_processed)) {\n    continue; // Skip if particular invitation was already shown\n} ?>\n\n<?php if ($invitation->event_type == 1) : ?>\nlh_inst.dynamicAssigned.push(<?php echo $invitation->id?>);      \nlh_inst.outWindowCallback = function(e) {\n    <?php /* Show only if mouse was never triggered before, widget is not open, and chat was not started during current session. */ ?>\n    if (lh_inst.timeoutStatusWidgetOpen == 0 && lh_inst.chat_started == false) {\n        e = e ? e : window.event;\n        var from = e.relatedTarget || e.toElement;\n        if (!from || from.nodeName == \"HTML\") {                \n            lh_inst.stopCheckNewMessage();\n            lh_inst.showStartWindow('<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('chat/readoperatormessage')?>/(inv)/<?php echo $invitation->id?><?php $department !== false ? print '/(department)/'.$department : '' ?><?php $theme !== false ? print '/(theme)/'.$theme : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : ''?><?php $survey !== false ? print '/(survey)/'.$survey : ''?>/(vid)/<?php echo $vid;?><?php $visitor->invitation_assigned == true ? print '/(playsound)/true' : ''?>/(fullheight)/<?= $fullheight ? 'true' : 'false' ?>',true);\n            lh_inst.removeEvent(document,\"mouseout\",lh_inst.outWindowCallback);\n        }\n    }\n};    \nlh_inst.addEvent(document, \"mouseout\", lh_inst.outWindowCallback);\n<?php elseif ($invitation->event_type == 2) : ?>\nlh_inst.dynamicAssigned.push(<?php echo $invitation->id?>);\n\nlh_inst.iddleTimeoutActivity = null;\n\nlh_inst.resetTimeoutIddle = function() {\n    lh_inst.iddleEventResetActivity();\n};    \n\nlh_inst.iddleEventResetActivity = function() {\n    clearTimeout(this.iddleTimeoutActivity);\n    var _that = this;\n    this.iddleTimeoutActivity = setTimeout(function(){\n        \n        clearTimeout(_that.iddleTimeoutActivity); \n        \n        lh_inst.stopCheckNewMessage();\n        lh_inst.showStartWindow('<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('chat/readoperatormessage')?>/(inv)/<?php echo $invitation->id?><?php $department !== false ? print '/(department)/'.$department : '' ?><?php $theme !== false ? print '/(theme)/'.$theme : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : ''?><?php $survey !== false ? print '/(survey)/'.$survey : ''?>/(vid)/<?php echo $vid;?><?php $visitor->invitation_assigned == true ? print '/(playsound)/true' : ''?>/(fullheight)/<?= $fullheight ? 'true' : 'false' ?>',true);\n \n        ['mousemove','mousedown','click','scroll','keypress','load'].forEach(function(element) {\n            lh_inst.removeEvent(window,element,lh_inst.resetTimeoutIddle);   \n        });\n        \n        ['mousemove','scroll','touchstart','touchend'].forEach(function(element) {\n            lh_inst.removeEvent(document,element,lh_inst.resetTimeoutIddle);   \n        });                         \n        \n    }, <?php echo $invitation->iddle_for *1000?>);        \n};\n\nlh_inst.iddleEventResetActivity();\n\n['mousemove','mousedown','click','scroll','keypress','load'].forEach(function(element) {\n    lh_inst.addEvent(window,element,lh_inst.resetTimeoutIddle);   \n});\n\n['mousemove','scroll','touchstart','touchend'].forEach(function(element) {\n    lh_inst.addEvent(document,element,lh_inst.resetTimeoutIddle);   \n});\n<?php endif; ?>\n\n<?php endforeach; ?>", "showSurvey : function() {\r\n    if (lh_inst.cookieData.hash && lh_inst.hasSurvey == true && lh_inst.surveyShown == false){\r\n        var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\r\n        this.surveyShown = true;\r\n        document.getElementById('<?php echo $chatCSSPrefix?>_iframe').contentWindow.location.replace(\"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>\"+this.lang+\"/survey/fillwidget<?php $leaveamessage == true ? print '/(leaveamessage)/true' : ''?><?php $department !== false ? print '/(department)/'.$department : ''?><?php is_object($theme) ? print '/(theme)/'.$theme->id : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?>\"+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.parseOptions()+this.parseStorageArguments()+'&dt='+encodeURIComponent(document.title));\r\n    }\r\n},", "showSurvey : function() {\n    if (this.cookieData.hash && this.hasSurvey == true && this.surveyShown == false){\n        var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n        this.surveyShown = true;\n        document.getElementById('<?php echo $chatCSSPrefix?>_iframe_page').contentWindow.location.replace(\"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>\"+this.lang+\"/survey/fillwidget/(mode)/embed<?php $leaveamessage == true ? print '/(leaveamessage)/true' : ''?><?php $department !== false ? print '/(department)/'.$department : ''?><?php is_object($theme) ? print '/(theme)/'.$theme->id : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?>\"+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.parseOptions()+this.parseStorageArguments()+'&dt='+encodeURIComponent(document.title));\n    }\n},", "\r\nisNotificationsSubscribed : false,\r\n\r\nsendNotification : function() {\r\n\r\n    <?php $notificationsSettings = erLhcoreClassModelChatConfig::fetch('notifications_settings')->data_value;?>\r\n\r\n    <?php if (isset($notificationsSettings['enabled']) && $notificationsSettings['enabled'] == 1) : ?>\r\n\r\n    var applicationServerPublicKey = '<?php echo $notificationsSettings['public_key']?>';\r\n    this.isNotificationsSubscribed = false;\r\n\r\n    var swRegistration = null;\r\n\r\n    if (!('serviceWorker' in navigator) || !('PushManager' in window)) {\r\n        alert(\"This browser does not support desktop notification\");\r\n        return;\r\n    }\r\n\r\n    // Let's check if the browser supports notifications\r\n    if (!(\"Notification\" in window)) {\r\n        alert(\"This browser does not support desktop notification\");\r\n        return;\r\n    }\r\n    // Let's check whether notification permissions have already been granted\r\n    else if (Notification.permission === \"granted\") {\r\n        // If it's okay let's create a notification\r\n        //\r\n    }\r\n    // Otherwise, we need to ask the user for permission\r\n    else if (Notification.permission !== \"denied\") {\r\n        Notification.requestPermission(function (permission) {\r\n            // If the user accepts, let's create a notification\r\n            if (permission !== \"granted\") {\r\n                alert('Sorry but you have denied notification!');\r\n                return;\r\n            }\r\n        });\r\n    } else if (Notification.permission === \"denied\") {\r\n        alert('Sorry but you have denied notification!');\r\n        return;\r\n    }\r\n\r\n    function urlB64ToUint8Array(base64String) {\r\n        var padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n        var base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n\r\n        var rawData = window.atob(base64);\r\n        var outputArray = new Uint8Array(rawData.length);\r\n\r\n        for (var i = 0; i < rawData.length; ++i) {\r\n            outputArray[i] = rawData.charCodeAt(i);\r\n        }\r\n        return outputArray;\r\n    }\r\n\r\n\r\n    var that = this;\r\n\r\n    function updateSubscriptionOnServer(subscription, subscribe) {\r\n        if (subscription === null) {\r\n            return;\r\n        }\r\n\r\n        var key = subscription.getKey('p256dh');\r\n        var token = subscription.getKey('auth');\r\n        var contentEncoding = (PushManager.supportedContentEncodings || ['aesgcm'])[0];\r\n\r\n        var payload = JSON.stringify({\r\n            endpoint: subscription.endpoint,\r\n            publicKey: key ? btoa(String.fromCharCode.apply(null, new Uint8Array(key))) : null,\r\n            authToken: token ? btoa(String.fromCharCode.apply(null, new Uint8Array(token))) : null,\r\n            contentEncoding : contentEncoding\r\n        });\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open( \"POST\", '<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+that.lang+'/notifications/subscribe<?php $theme !== false ? print '/(theme)/' . (is_object($theme) ? $theme->id : $theme) : ''?>' + (subscribe == true ? '/(action)/sub' : '/(action)/unsub') + that.getAppendCookieArguments(), true);\r\n        xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n        xhr.send( \"data=\" + encodeURIComponent( payload ) );\r\n    }\r\n\r\n    var that = this;\r\n\r\n    function subscribeUser() {\r\n        var applicationServerKey = urlB64ToUint8Array(applicationServerPublicKey);\r\n        swRegistration.pushManager.subscribe({\r\n            'userVisibleOnly': true,\r\n            'applicationServerKey': applicationServerKey\r\n        }).then(function(subscription) {\r\n            <?php /*console.log('User just subscribed subscribed.');*/ ?>\r\n            updateSubscriptionOnServer(subscription, true);\r\n            that.isNotificationsSubscribed = true;\r\n            <?php /*alert('You have subscribed!');*/ ?>\r\n        })<?php /*.catch(function(err) {\r\n            console.log('Failed to subscribe the user: ', err);\r\n        })*/ ?>;\r\n    }\r\n\r\n    function unsubscribeUser() {\r\n        swRegistration.pushManager.getSubscription().then(function(subscription) {\r\n            if (subscription) {\r\n                updateSubscriptionOnServer(subscription,false);\r\n                return subscription.unsubscribe();\r\n            }\r\n        })<?php /*.catch(function(error) {\r\n            console.log('Error unsubscribing', error);\r\n        })*/ ?>.then(function() {\r\n        <?php /*console.log('User is unsubscribed.');*/ ?>\r\n                alert('You have unsubscribed!');\r\n            that.isNotificationsSubscribed = false;\r\n        });\r\n    }\r\n\r\n    function initializeUI() {\r\n        // Set the initial subscription value\r\n        swRegistration.pushManager.getSubscription().then(function(subscription) {\r\n            that.isNotificationsSubscribed = !(subscription === null);\r\n            if (that.isNotificationsSubscribed) {\r\n                // unsubscribeUser();\r\n                subscribeUser();\r\n            } else {\r\n                subscribeUser();\r\n            }\r\n        });\r\n    }\r\n\r\n    // At last, if the user has denied notifications, and you\r\n    // want to be respectful there is no need to bother them any more.\r\n    navigator.serviceWorker.register('sw.lhc.js?v=2')\r\n    .then(function(swReg) {\r\n        <?php /*console.log('Service Worker is registered', swReg);*/ ?>\r\n        swRegistration = swReg;\r\n        initializeUI();\r\n    })<?php /*.catch(function(error) {\r\n        console.error('Service Worker Error', error);\r\n    })*/ ?>;\r\n    <?php endif; ?>\r\n},\r\n\r\nreadNotification : function(chat_id, hash) {\r\n    <?php $notificationsSettings = erLhcoreClassModelChatConfig::fetch('notifications_settings')->data_value;?>\r\n    <?php if (isset($notificationsSettings['enabled']) && $notificationsSettings['enabled'] == 1) : ?>\r\n        this.showStartWindow(\"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>\"+this.lang+\"/notifications/read/<?php $theme !== false ? print '/(theme)/'.(is_object($theme) ? $theme->id : $theme) : ''?>/(id)/\"+chat_id+\"/(hashread)/\"+hash+\"/(mode)/widget\");\r\n    <?php endif; ?>\r\n},\r\n", "iframePreloaded : false,\niframeCustomUrl : false,\n\npreloadWidget : function() {\n    <?php if ((int)erLhcoreClassModelChatConfig::fetch('preload_iframes')->current_value == 1) : ?>\n    var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n    var widgetWidth = (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.widget_width != 'undefined') ? parseInt(<?php echo $chatOptionsVariable?>.opt.widget_width) : 300;\n    var widgetHeight = (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.widget_height != 'undefined') ? parseInt(<?php echo $chatOptionsVariable?>.opt.widget_height) : 340;\n    var widgetHeightUnit = 'px';\n\n    if (this.is_full_height === true) {\n        widgetHeight = 100;\n        widgetHeightUnit = '%';\n    }\n\n    this.initial_iframe_url = \"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>\"+this.lang+\"/chat/chatwidget<?php $leaveamessage == true ? print '/(leaveamessage)/true' : ''?><?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ?  '/(fullheight)/true' : '/(fullheight)/false' ?><?php $department !== false ? print '/(department)/'.$department : ''?><?php $theme !== false ? print '/(theme)/'.$theme->id : ''?><?php $bot_id !== null ? print '/(bot_id)/'.$bot_id : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?>\"+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.parseOptions()+this.parseStorageArguments()+'&dt='+encodeURIComponent(document.title);\n\n    this.iframePreloaded = true;\n\n    this.iframe_html = '<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/before_iframe_container.tpl.php')); ?>'+'<div id=\"<?php echo $chatCSSPrefix?>_iframe_container\" <?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ? 'style=\"height: calc(100% - 25px);\"' : '' ?>><iframe id=\"<?php echo $chatCSSPrefix?>_iframe\" allowTransparency=\"true\" class=\"<?php echo $chatCSSPrefix?>-loading\" frameborder=\"0\" ' +\n        ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n        ' width=\"'+widgetWidth+'\"' +\n        ' height=\"'+widgetHeight+'\"' +\n        ' style=\"width: '+widgetWidth+'px;height: '+widgetHeight+widgetHeightUnit+';\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Live Help')?>\"></iframe></div>';\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/container.tpl.php')); ?>\n\n    if (!this.cssWasAdded) {\n        this.cssWasAdded = true;\n        this.addCss(raw_css<?php ($theme !== false && $theme->custom_container_css !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_container_css).'\\'' : '' ?>);\n    };\n\n    var fragment = this.appendHTML(this.iframe_html);\n\n    var parentElement = document.body;\n\n    if (typeof <?php echo $chatOptionsVariable?> != 'undefined' &&\n        typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' &&\n        typeof <?php echo $chatOptionsVariable?>.opt.widget_parent != 'undefined') {\n        if(document.getElementById(<?php echo $chatOptionsVariable?>.opt.widget_parent) != null) {\n            parentElement = document.getElementById(<?php echo $chatOptionsVariable?>.opt.widget_parent);\n        }\n    }\n\n    parentElement.insertBefore(fragment, parentElement.childNodes[0]);\n\n    this.addClass(document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>'),'<?php echo $chatCSSPrefix?>-delayed');\n    this.iframeCustomUrl = false;\n    <?php endif; ?>\n},\n\nshowStartWindow : function(url_to_open,delayShow) {\n\t\t  \n\t  if (this.isOnline == false && typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.offline_redirect != 'undefined'){\n\t\t\twindow.open(<?php echo $chatOptionsVariable?>.opt.offline_redirect,\"_blank\");\n\t\t\treturn;\n\t  };\t\n\t  this.lhc_need_help_hide();\n\n      // Do not check for new messages\n      this.stopCheckNewMessage();\n\n      var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n\n    if (this.isProactivePending == 1 && this.invitationUrl != ''){\n        url_to_open = this.invitationUrl;\n        this.invitationUrl = '';\n        var elm = document.getElementById('<?php echo $chatCSSPrefix?>_status_container');\n        if (elm !== null) {\n            this.removeClass(document.getElementById('<?php echo $chatCSSPrefix?>_status_container'),'<?php echo $chatCSSPrefix?>_invitation-mode');\n        }\n    };\n\n      if ( url_to_open != undefined ) {\n       \t\tthis.chatOpenedCallback('internal_invitation');\t\n            this.initial_iframe_url = url_to_open+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.parseOptions()+this.parseStorageArguments()+'&dt='+encodeURIComponent(document.title);\n            this.iframeCustomUrl = true;\n      } else {\n      \t\tthis.chatOpenedCallback(this.isOnline == false ? 'internal_offline' : 'internal');\t\n            this.initial_iframe_url = \"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>\"+this.lang+\"/chat/chatwidget<?php $leaveamessage == true ? print '/(leaveamessage)/true' : ''?><?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ?  '/(fullheight)/true' : '/(fullheight)/false' ?><?php $department !== false ? print '/(department)/'.$department : ''?><?php $bot_id !== null ? print '/(bot_id)/'.$bot_id : ''?><?php $theme !== false ? print '/(theme)/'.$theme->id : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?>\"+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.parseOptions()+this.parseStorageArguments()+'&dt='+encodeURIComponent(document.title);\n      };\n       \n      this.addClass(document.body,'<?php echo $chatCSSPrefix?>-opened');\n      \n      lh_inst.surveyShown = false;                             \n      lh_inst.timeoutStatusWidgetOpen = 1;\n      \n      var widgetWidth = (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.widget_width != 'undefined') ? parseInt(<?php echo $chatOptionsVariable?>.opt.widget_width) : 300;\n\t  var widgetHeight = (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.widget_height != 'undefined') ? parseInt(<?php echo $chatOptionsVariable?>.opt.widget_height) : 340;\n\t  var widgetHeightUnit = 'px';\n\n      if(this.is_full_height === true) {\n\t\twidgetHeight = 100;\n\t\twidgetHeightUnit = '%';\n\t  }\n\n      <?php\n        $iconsStatuses = array(\n            'online_image_url' => ($theme !== false && $theme->online_image_url !== false && strpos($theme->online_image_url, 'http') !== false),\n            'offline_image_url' => ($theme !== false && $theme->offline_image_url !== false && strpos($theme->offline_image_url, 'http') !== false)\n        );\n      ?>\n      var needLoading = true;\n\n      var iframe_html_source = this.iframe_html;\n\n       this.iframe_html = '<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/before_iframe_container.tpl.php')); ?>'+'<div id=\"<?php echo $chatCSSPrefix?>_iframe_container\" <?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ? 'style=\"height: calc(100% - 25px);\"' : '' ?>><iframe id=\"<?php echo $chatCSSPrefix?>_iframe\" allow=\"microphone\" allowTransparency=\"true\" class=\"<?php echo $chatCSSPrefix?>-loading\" frameborder=\"0\" ' +\n                   ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                   ' width=\"'+widgetWidth+'\"' +\n                   ' height=\"'+widgetHeight+'\"' +\n                   ' style=\"width: '+widgetWidth+'px;height: '+widgetHeight+widgetHeightUnit+';\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Live Help')?>\"></iframe></div>';\n\n      <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/container.tpl.php')); ?>\n\n        if (iframe_html_source != this.iframe_html) {\n            this.removeById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n        } else {\n            needLoading = false;\n        }\n\n      if (!this.cssWasAdded) {\n      \tthis.cssWasAdded = true;\n      \tthis.addCss(raw_css<?php ($theme !== false && $theme->custom_container_css !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_container_css).'\\'' : '' ?>);\n\t  };\n\n      if (needLoading === true) {\n\n        this.iframePreloaded = false;\n\n        var fragment = this.appendHTML(this.iframe_html);\n\n        var parentElement = document.body;\n\n        if (typeof <?php echo $chatOptionsVariable?> != 'undefined' &&\n        typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' &&\n        typeof <?php echo $chatOptionsVariable?>.opt.widget_parent != 'undefined') {\n            if(document.getElementById(<?php echo $chatOptionsVariable?>.opt.widget_parent) != null) {\n                parentElement = document.getElementById(<?php echo $chatOptionsVariable?>.opt.widget_parent);\n            }\n        }\n        parentElement.insertBefore(fragment, parentElement.childNodes[0]);\n\n        this.addClass(document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>'),'<?php echo $chatCSSPrefix?>-delayed');\n\n    } else {\n        lh_inst.removeClass(document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>'),'<?php echo $chatCSSPrefix?>-delayed');\n    }\n\n    var lhc_obj = this;\n\n      <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/part/close_handler.tpl.php')); ?>\t\t\n      \n      document.getElementById('<?php echo $chatCSSPrefix?>_min').onclick = function() { lhc_obj.min(); return false; };\n\n      <?php if ($theme === false || $theme->modern_look == 1) : ?>\n      document.getElementById('<?php echo $chatCSSPrefix?>_status-icon-restore').onclick = function() { lhc_obj.min(); return false; };\n      <?php endif ?>\n\n      <?php if (erLhcoreClassModelChatConfig::fetch('disable_popup_restore')->current_value == 0 && ($theme === false || $theme->hide_popup == 0)) : ?>\n      document.getElementById('<?php echo $chatCSSPrefix?>_remote_window').onclick = function() { lhc_obj.openRemoteWindow(); return false; };\n\t  <?php endif; ?>\n\t  \n\t  var domContainer = document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n\t  var domIframe = '<?php echo $chatCSSPrefix?>_iframe';\n\t  var domContainerId = '<?php echo $chatCSSLayoutOptions['container_id']?>';\n\t  <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/drag_drop_logic.tpl.php')); ?>\t\t  \n\n\t  if (this.cookieData.m) {\n        if (this.cookieData.hash) {\n            this.min(true);\n        }\n      };\n\t  \n\t  if (typeof delayShow === 'undefined') {\n\t  \t\tthis.toggleStatusWidget(true);\n\t  }\n\t  \n\t  // If proactive invitation is shown. Check for status changes and hide popup if operator goes offline\n\t  this.checkStatusChat();\t  \n},", "showStatusWidget : function() {\n<?php if ($position == 'original' || $position == '') :\n// You can style bottom HTML whatever you want. ?>\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/native_placement.tpl.php')); ?>\n\n<?php elseif (in_array($position, array_keys($positionArgument))) : ?>\n\tthis.removeById('<?php echo $chatCSSPrefix?>_status_container');\n\n    <?php if ($theme !== false && $theme->modern_look == 0) : ?>\n    var statusTEXT = '<?php if ($theme !== false && isset($theme->bot_configuration_array['custom_html_status'])) : ?><?php echo str_replace(array(\"\\n\",\"\\r\",\"'\"), array('','','\\\\\\''),$theme->bot_configuration_array['custom_html_status'])?><?php endif?><a id=\"'+(this.isOnline == true ? 'online-icon' : 'offline-icon')+'\" class=\"status-icon\" href=\"#\" onclick=\"return lh_inst.lh_openchatWindow()\" ><span class=\"<?php echo $chatCSSPrefix?>-text-status\">'+(this.isOnline ? <?php if ($theme !== false && $theme->online_text !== '') : print json_encode($theme->online_text); else : ?><?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Live help is online...'),ENT_QUOTES))?><?php endif?> : <?php if ($theme !== false && $theme->offline_text != '') : print json_encode($theme->offline_text); else : ?><?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Live help is offline...'),ENT_QUOTES))?><?php endif?>)+'</span></a>';\n\n    if (!this.cssStatusWasAdded) {\n      \tthis.cssStatusWasAdded = true;\n      \t<?php \n      \t$iconsStatuses = array(\n      \t    'online_image_url' => ($theme !== false && $theme->online_image_url !== false && strpos($theme->online_image_url, 'http') !== false),\n      \t    'offline_image_url' => ($theme !== false && $theme->offline_image_url !== false && strpos($theme->offline_image_url, 'http') !== false)\n      \t);          \t          \t\n      \t?>\n    \tvar raw_css = \"#<?php echo $chatCSSPrefix?>_status_container.hide-status,#<?php echo $chatCSSPrefix?>_status_container.hide-status-delay{display:none!important;}#<?php echo $chatCSSPrefix?>_status_container * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site','dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site','dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial;font-size:12px;box-sizing: content-box;zoom:1;margin:0;padding:0}\\n#<?php echo $chatCSSPrefix?>_status_container .status-icon{text-decoration:none;font-size:12px;font-weight:bold;color:<?php $theme !== false ? print '#'.$theme->text_color : print '#000' ?>;display:block;padding:<?php echo $currentPosition['padding_text']?>;background:url('<?php if ($theme !== false && $theme->online_image_url !== false) : print $theme->online_image_url; else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/user_green_chat.png');?><?php endif;?>') no-repeat <?php echo $currentPosition['background_position']?> center}\\n#<?php echo $chatCSSPrefix?>_status_container:hover{<?php echo $currentPosition['widget_hover']?>}\\n#<?php echo $chatCSSPrefix?>_status_container #offline-icon{background-image:url('<?php if ($theme !== false && $theme->offline_image_url !== false) : print $theme->offline_image_url; else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/user_gray_chat.png');?><?php endif;?>')}\\n#<?php echo $chatCSSPrefix?>_status_container{box-sizing: content-box;<?php echo $currentPosition['widget_radius']?>-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);<?php echo $currentPosition['border_widget']?>;-moz-box-shadow:<?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);padding:5px 0px 0px 5px;width:190px;font-family:arial;font-size:12px;transition: 1s;position:fixed;<?php echo $currentPosition['position']?>;background-color:#<?php $theme !== false ? print $theme->onl_bcolor : print 'f6f6f6' ?>;z-index:2147483647;}@media only screen and (max-width : 640px) {#<?php echo $chatCSSPrefix?>_need_help_container{display:none;}#<?php echo $chatCSSPrefix?>_status_container .status-icon{padding:32px 15px 9px 31px;background-position:center center;}#<?php echo $chatCSSPrefix?>_status_container .<?php echo $chatCSSPrefix?>-text-status{display:none} #<?php echo $chatCSSPrefix?>_status_container{<?php echo $currentPosition['mobile_position_status']?>}}\\n\";\n    \tthis.addCss(raw_css<?php ($theme !== false && $theme->custom_status_css_front !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\",\"'\"), array('','','\\\\\\''), $theme->custom_status_css_front).'\\'' : '' ?>);\n\t};\n    <?php else : ?>\n        var statusTEXT = '<?php if ($theme !== false && isset($theme->bot_configuration_array['custom_html_status'])) : ?><?php echo str_replace(array(\"\\n\",\"\\r\",\"'\"), array('','','\\\\\\''),$theme->bot_configuration_array['custom_html_status'])?><?php endif?><i class=\"<?php echo $chatCSSPrefix?>-invitation-status\" onclick=\"return lh_inst.lh_openchatWindow()\">!</i><a id=\"'+(this.isOnline == true ? 'online-icon' : 'offline-icon')+'\" class=\"status-icon\" href=\"#\" onclick=\"return lh_inst.lh_openchatWindow()\" ></a>';\n\n    if (!this.cssStatusWasAdded) {\n        this.cssStatusWasAdded = true;\n        <?php\n        $iconsStatuses = array(\n            'online_image_url' => ($theme !== false && $theme->online_image_url !== false && strpos($theme->online_image_url, 'http') !== false),\n            'offline_image_url' => ($theme !== false && $theme->offline_image_url !== false && strpos($theme->offline_image_url, 'http') !== false)\n        );\n        ?>\n        var raw_css = \"#<?php echo $chatCSSPrefix?>_status_container.hide-status,#<?php echo $chatCSSPrefix?>_status_container.hide-status-delay{display:none!important;}#<?php echo $chatCSSPrefix?>_status_container * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site','dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site','dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial;font-size:12px;box-sizing: content-box;zoom:1;margin:0;padding:0}#<?php echo $chatCSSPrefix?>_status_container .<?php echo $chatCSSPrefix?>-invitation-status{display:none;position:absolute;}#<?php echo $chatCSSPrefix?>_status_container.<?php echo $chatCSSPrefix?>_invitation-mode .<?php echo $chatCSSPrefix?>-invitation-status{width: 16px;height:16px;padding: 2px;border-radius: 10px;text-align: center;font-weight: bold;color: #FFF;background-color: red;display: inline-block;}\\n#<?php echo $chatCSSPrefix?>_status_container .status-icon{<?php echo $currentPosition['border_status_modern']?>;<?php echo $currentPosition['widget_radius_modern']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);-moz-box-shadow:<?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);box-shadow: <?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);text-decoration:none;height:41px;width:41px;font-weight:bold;color:<?php $theme !== false ? print '#'.$theme->text_color : print '#000' ?>;display:block;padding:10px;background:#<?php $theme !== false ? print $theme->onl_bcolor : print '0c8fc4' ?> url('<?php if ($theme !== false && $theme->online_image_url !== false) : print $theme->online_image_url; else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/getstatus/online.svg');?><?php endif;?>') no-repeat center center}\\n#<?php echo $chatCSSPrefix?>_status_container:hover{<?php echo $currentPosition['widget_hover_modern']?>}\\n#<?php echo $chatCSSPrefix?>_status_container #offline-icon{background:#888888 url('<?php if ($theme !== false && $theme->offline_image_url !== false) : print $theme->offline_image_url; else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/getstatus/offline.svg');?><?php endif;?>') no-repeat center}\\n#<?php echo $chatCSSPrefix?>_status_container{box-sizing: content-box;padding:5px 0px 0px 5px;font-family:arial;font-size:12px;transition: 1s;position:fixed;<?php echo $currentPosition['position_modern']?>;z-index:2147483647;}@media only screen and (max-width : 640px) {#<?php echo $chatCSSPrefix?>_need_help_container{display:none;}#<?php echo $chatCSSPrefix?>_status_container .status-icon{background-position:center center;}#<?php echo $chatCSSPrefix?>_status_container .<?php echo $chatCSSPrefix?>-text-status{display:none} #<?php echo $chatCSSPrefix?>_status_container{<?php echo $currentPosition['mobile_position_status_modern']?>}}\\n\";\n        this.addCss(raw_css<?php ($theme !== false && $theme->custom_status_css_front !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\",\"'\"), array('','','\\\\\\''), $theme->custom_status_css_front).'\\'' : '' ?>);\n    };\n    <?php endif; ?>\n\n\t<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/we_here.tpl.php')); ?>\n\n    var statusInitial = '';\n    <?php if ($theme !== false && $theme->show_status_delay > 0) : ?>\n        statusInitial = ' class=\"hide-status-delay\" ';\n        setTimeout( function() {\n            var dm = document.getElementById('<?php echo $chatCSSPrefix?>_status_container');\n            that.removeClass(dm,'hide-status-delay');\n        },<?php echo $theme->show_status_delay*1000?>);\n    <?php endif ?>\n\n    var htmlStatus = '<div id=\"<?php echo $chatCSSPrefix?>_status_container\"' + statusInitial + '>'+subStatus+statusTEXT+'</div>';\n\n    var fragment = this.appendHTML(htmlStatus);\n    \n    document.body.insertBefore(fragment, document.body.childNodes[0]);\n\n    var that = this;\n    if (subStatus != '') {\n        document.getElementById('<?php echo $chatCSSPrefix?>_need_help_image').onclick = function() { that.lhc_need_help_click(); return false; };\n        document.getElementById('<?php echo $chatCSSPrefix?>_need_help_main_title').onclick = function() { that.lhc_need_help_click(); return false; };\n        document.getElementById('<?php echo $chatCSSPrefix?>_need_help_sub_title').onclick = function() { that.lhc_need_help_click(); return false; };\n        document.getElementById('<?php echo $chatCSSPrefix?>_need_help_close').onclick = function() { that.lhc_need_help_hide(); return false; };\n    }\n\n<?php endif; ?>\n\tif (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback.show_widget_cb != 'undefined') {\n\t\t<?php echo $chatOptionsVariable?>.callback.show_widget_cb(this);    \t\t\n\t};\n},\n", "var lhc_domain = '';\n\nif (typeof LHCChatOptions !== 'undefined' && typeof LHCChatOptions.opt !== 'undefined' && typeof LHCChatOptions.opt.domain !== 'undefined') {\nlhc_domain = LHCChatOptions.opt.domain;\n}\n\nif (typeof LHCChatOptionsPage !== 'undefined' && typeof LHCChatOptionsPage.opt !== 'undefined' && typeof LHCChatOptionsPage.opt.domain !== 'undefined') {\nlhc_domain = LHCChatOptionsPage.opt.domain;\n}\n\nif (lhc_domain === '') {\nlhc_domain = document.location.hostname.replace(/^(?:[a-z0-9\\-\\.]+\\.)??([a-z0-9\\-]+)?(\\.com|\\.net|\\.org|\\.biz|\\.ws|\\.in|\\.me|\\.co\\.uk|\\.co|\\.org\\.uk|\\.ltd\\.uk|\\.plc\\.uk|\\.me\\.uk|\\.edu|\\.mil|\\.br\\.com|\\.cn\\.com|\\.eu\\.com|\\.hu\\.com|\\.no\\.com|\\.qc\\.com|\\.sa\\.com|\\.se\\.com|\\.se\\.net|\\.us\\.com|\\.uy\\.com|\\.ac|\\.co\\.ac|\\.gv\\.ac|\\.or\\.ac|\\.ac\\.ac|\\.af|\\.am|\\.as|\\.at|\\.ac\\.at|\\.co\\.at|\\.gv\\.at|\\.or\\.at|\\.asn\\.au|\\.com\\.au|\\.edu\\.au|\\.org\\.au|\\.net\\.au|\\.id\\.au|\\.be|\\.ac\\.be|\\.adm\\.br|\\.adv\\.br|\\.am\\.br|\\.arq\\.br|\\.art\\.br|\\.bio\\.br|\\.cng\\.br|\\.cnt\\.br|\\.com\\.br|\\.ecn\\.br|\\.eng\\.br|\\.esp\\.br|\\.etc\\.br|\\.eti\\.br|\\.fm\\.br|\\.fot\\.br|\\.fst\\.br|\\.g12\\.br|\\.gov\\.br|\\.ind\\.br|\\.inf\\.br|\\.jor\\.br|\\.lel\\.br|\\.med\\.br|\\.mil\\.br|\\.net\\.br|\\.nom\\.br|\\.ntr\\.br|\\.odo\\.br|\\.org\\.br|\\.ppg\\.br|\\.pro\\.br|\\.psc\\.br|\\.psi\\.br|\\.rec\\.br|\\.slg\\.br|\\.tmp\\.br|\\.tur\\.br|\\.tv\\.br|\\.vet\\.br|\\.zlg\\.br|\\.br|\\.ab\\.ca|\\.bc\\.ca|\\.mb\\.ca|\\.nb\\.ca|\\.nf\\.ca|\\.ns\\.ca|\\.nt\\.ca|\\.on\\.ca|\\.pe\\.ca|\\.qc\\.ca|\\.sk\\.ca|\\.yk\\.ca|\\.ca|\\.cc|\\.ac\\.cn|\\.com\\.cn|\\.edu\\.cn|\\.gov\\.cn|\\.org\\.cn|\\.bj\\.cn|\\.sh\\.cn|\\.tj\\.cn|\\.cq\\.cn|\\.he\\.cn|\\.nm\\.cn|\\.ln\\.cn|\\.jl\\.cn|\\.hl\\.cn|\\.js\\.cn|\\.zj\\.cn|\\.ah\\.cn|\\.gd\\.cn|\\.gx\\.cn|\\.hi\\.cn|\\.sc\\.cn|\\.gz\\.cn|\\.yn\\.cn|\\.xz\\.cn|\\.sn\\.cn|\\.gs\\.cn|\\.qh\\.cn|\\.nx\\.cn|\\.xj\\.cn|\\.tw\\.cn|\\.hk\\.cn|\\.mo\\.cn|\\.cn|\\.cx|\\.cz|\\.de|\\.dk|\\.fo|\\.com\\.ec|\\.tm\\.fr|\\.com\\.fr|\\.asso\\.fr|\\.presse\\.fr|\\.fr|\\.gf|\\.gs|\\.co\\.il|\\.net\\.il|\\.ac\\.il|\\.k12\\.il|\\.gov\\.il|\\.muni\\.il|\\.ac\\.in|\\.co\\.in|\\.org\\.in|\\.ernet\\.in|\\.gov\\.in|\\.net\\.in|\\.res\\.in|\\.is|\\.it|\\.ac\\.jp|\\.co\\.jp|\\.go\\.jp|\\.or\\.jp|\\.ne\\.jp|\\.ac\\.kr|\\.co\\.kr|\\.go\\.kr|\\.ne\\.kr|\\.nm\\.kr|\\.or\\.kr|\\.li|\\.lt|\\.lu|\\.asso\\.mc|\\.tm\\.mc|\\.com\\.mm|\\.org\\.mm|\\.net\\.mm|\\.edu\\.mm|\\.gov\\.mm|\\.ms|\\.nl|\\.no|\\.nu|\\.pl|\\.ro|\\.org\\.ro|\\.store\\.ro|\\.tm\\.ro|\\.firm\\.ro|\\.www\\.ro|\\.arts\\.ro|\\.rec\\.ro|\\.info\\.ro|\\.nom\\.ro|\\.nt\\.ro|\\.se|\\.si|\\.com\\.sg|\\.org\\.sg|\\.net\\.sg|\\.gov\\.sg|\\.sk|\\.st|\\.tf|\\.ac\\.th|\\.co\\.th|\\.go\\.th|\\.mi\\.th|\\.net\\.th|\\.or\\.th|\\.tm|\\.to|\\.com\\.tr|\\.edu\\.tr|\\.gov\\.tr|\\.k12\\.tr|\\.net\\.tr|\\.org\\.tr|\\.com\\.tw|\\.org\\.tw|\\.net\\.tw|\\.ac\\.uk|\\.uk\\.com|\\.uk\\.net|\\.gb\\.com|\\.gb\\.net|\\.vg|\\.sh|\\.kz|\\.ch|\\.info|\\.ua|\\.gov|\\.name|\\.pro|\\.ie|\\.hk|\\.com\\.hk|\\.org\\.hk|\\.net\\.hk|\\.edu\\.hk|\\.us|\\.tk|\\.cd|\\.by|\\.ad|\\.lv|\\.eu\\.lv|\\.bz|\\.es|\\.jp|\\.cl|\\.ag|\\.mobi|\\.eu|\\.co\\.nz|\\.org\\.nz|\\.net\\.nz|\\.maori\\.nz|\\.iwi\\.nz|\\.io|\\.la|\\.md|\\.sc|\\.sg|\\.vc|\\.tw|\\.travel|\\.my|\\.se|\\.tv|\\.pt|\\.com\\.pt|\\.edu\\.pt|\\.asia|\\.fi|\\.com\\.ve|\\.net\\.ve|\\.fi|\\.org\\.ve|\\.web\\.ve|\\.info\\.ve|\\.co\\.ve|\\.tel|\\.im|\\.gr|\\.ru|\\.net\\.ru|\\.org\\.ru|\\.hr|\\.com\\.hr)$/, '$1$2');\n}\n\nif (typeof LHCChatOptionsPage !== 'undefined') {\nvar LHCChatOptions = LHCChatOptionsPage;\n}\n\nif (typeof lh_inst === 'undefined') {\nwindow.lh_inst = {};\nlh_inst.showStartWindow = function(){\nwindow.$_LHC.eventListener.emitEvent('showWidget');\n};\n\nlh_inst.addTag = function(tag){\nwindow.$_LHC.eventListener.emitEvent('addTag',[tag]);\n};\n\nlh_inst.addTag = function(tag){\nwindow.$_LHC.eventListener.emitEvent('addTag',[tag]);\n};\n\nlh_inst.lh_openchatWindow = function(){\n<?php if (isset($click) && $click == 'internal') : ?>\n    window.$_LHC.eventListener.emitEvent('showWidget');\n<?php else : ?>\n    window.$_LHC.eventListener.emitEvent('openPopup');\n<?php endif; ?>\n};\n}\n\n<?php $lang = erLhcoreClassSystem::instance()->SiteAccess != 'site_admin' ?  erLhcoreClassSystem::instance()->SiteAccess . '/' : ''; ?>\n\nvar LHC_API = LHC_API||{};\nLHC_API.args = {'lang':'<?php echo $lang?>',mode:'<?php echo $mode?>'<?php (isset($position) && $position == 'api') ? print \",position:'api'\" : ''?>,lhc_base_url:'//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect('/')?>',domain: lhc_domain, wheight:<?php isset($wheight) ? print (int)$wheight : print 450?>, wwidth:<?php isset($wwidth) ? print (int)$wwidth : print 350?>,pheight:520,pwidth:500<?php if (is_array($depId) && !empty($depId)) : ?>,department:[<?php echo implode(',',$depId)?>]<?php endif;?><?php if ($leaveamessage == true) : ?>,leaveamessage:true<?php endif; ?><?php if ($disable_pro_active == true) : ?>,proactive:false<?php else : ?>,check_messages:true<?php endif;?><?php isset($uparams['theme']) & is_numeric($uparams['theme']) ? print ',theme:' . (int)$uparams['theme'] : ''?>};\n(function() {\nvar po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;\nvar date = new Date();po.src = '//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('js/widgetv2/index.js');?>?v1'+(\"\"+date.getFullYear() + date.getMonth() + date.getDate());\nvar s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);\n})();\n", "document.getElementById('<?php echo $chatCSSPrefix?>_status_container').innerHTML = '<p class=\"<?php echo $chatCSSPrefix?>-status-native-'+(this.isOnline == true ? 'online' : 'offline')+'\"><a href=\"#\" onclick=\"return lh_inst.lh_openchatWindow()\">'+(this.isOnline == true ? '<img src=\"<?php if ($theme !== false && $theme->online_image_url !== false) : print $theme->online_image_url; else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/user_green_chat.png');?><?php endif;?>\" alt=\"\" /><?php if ($theme !== false && $theme->online_text !== '') : print htmlspecialchars_decode($theme->online_text,ENT_QUOTES); else : ?><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Live help is online...')?><?php endif?>' : '<img src=\"<?php if ($theme !== false && $theme->offline_image_url !== false) : print $theme->offline_image_url; else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/user_gray_chat.png');?><?php endif;?>\" alt=\"\" /><?php if ($theme !== false && $theme->offline_text != '') : print htmlspecialchars_decode($theme->offline_text,ENT_QUOTES); else : ?><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Live help is offline...')?><?php endif;?>')+'</a></p>';\r\n", "var titleText = (typeof <?php echo $chatOptionsVariable;?>.opt.nh_title_text != 'undefined') ? <?php echo $chatOptionsVariable;?>.opt.nh_title_text : <?php if ($theme !== false && $theme->need_help_header !== '') : print json_encode($theme->need_help_header); else : ?><?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Need help?'),ENT_QUOTES))?><?php endif;?>;\r\nvar subTitleText = (typeof <?php echo $chatOptionsVariable;?>.opt.nh_sub_title_text != 'undefined') ? <?php echo $chatOptionsVariable;?>.opt.nh_sub_title_text : <?php if ($theme !== false && $theme->need_help_text !== '') : print json_encode($theme->need_help_text); else : ?><?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Our staff are always ready to help'),ENT_QUOTES))?><?php endif;?>;\r\n<?php $iconsStatuses['need_help_image_url'] = ($theme !== false && $theme->need_help_image_url !== false && strpos($theme->need_help_image_url, 'http') !== false); ?>\r\nvar imageTooltip = (typeof <?php echo $chatOptionsVariable;?>.opt.nh_image != 'undefined') ? <?php echo $chatOptionsVariable;?>.opt.nh_image : '<?php if ($theme !== false && $theme->need_help_image_url !== false) : print $theme->need_help_image_url; else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/general/operator.png');?><?php endif;?>';\r\n\r\nsubStatus = '<div id=\"<?php echo $chatCSSPrefix?>_need_help_container\" style=\"<?php echo $currentPosition[$nh_hor_pos]?>\">'+\r\n'<span id=\"<?php echo $chatCSSPrefix?>_need_help_triangle\" style=\"<?php echo $currentPosition['nh_tr_pos']?>\"></span>'+\r\n'<i id=\"<?php echo $chatCSSPrefix?>_need_help_close\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" href=\"#\">&#xd7;</i>';\r\nif (imageTooltip !== false) {\r\nsubStatus += '<div id=\"<?php echo $chatCSSPrefix?>_need_help_image\"><img width=\"60\" alt=\"Customer service\" height=\"60\" src=\"' + imageTooltip + '\"></div>';\r\n};\r\nsubStatus += '<div id=\"<?php echo $chatCSSPrefix?>_need_help_main_title\">'+titleText+'</div>'+\r\n'<span id=\"<?php echo $chatCSSPrefix?>_need_help_sub_title\">'+subTitleText+'</span>'+\r\n'</div>';};", "<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/is_online_help.tpl.php')); ?>\n\n<?php\n\n// Perhaps user does not want to show live help when it's offline\nif ( !($isOnlineHelp == false && $hide_offline == 'true') ) : ?>\n\n/*! Cookies.js - 0.4.0; Copyright (c) 2014, Scott Hamper; http://www.opensource.org/licenses/MIT */\n(function(e){\"use strict\";var b=function(a,d,c){return 1===arguments.length?b.get(a):b.set(a,d,c)};b._document=document;b._navigator=navigator;b.defaults={path:\"/\"};b.get=function(a){b._cachedDocumentCookie!==b._document.cookie&&b._renewCache();return b._cache[a]};b.set=function(a,d,c){c=b._getExtendedOptions(c);c.expires=b._getExpiresDate(d===e?-1:c.expires);b._document.cookie=b._generateCookieString(a,d,c);return b};b.expire=function(a,d){return b.set(a,e,d)};b._getExtendedOptions=function(a){return{path:a&& a.path||b.defaults.path,domain:a&&a.domain||b.defaults.domain,expires:a&&a.expires||b.defaults.expires,secure:a&&a.secure!==e?a.secure:b.defaults.secure}};b._isValidDate=function(a){return\"[object Date]\"===Object.prototype.toString.call(a)&&!isNaN(a.getTime())};b._getExpiresDate=function(a,d){d=d||new Date;switch(typeof a){case \"number\":a=new Date(d.getTime()+1E3*a);break;case \"string\":a=new Date(a)}if(a&&!b._isValidDate(a))throw Error(\"`expires` parameter cannot be converted to a valid Date instance\"); return a};b._generateCookieString=function(a,b,c){a=a.replace(/[^#$&+\\^`|]/g,encodeURIComponent);a=a.replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\");b=(b+\"\").replace(/[^!#$&-+\\--:<-\\[\\]-~]/g,encodeURIComponent);c=c||{};a=a+\"=\"+b+(c.path?\";path=\"+c.path:\"\");a+=c.domain?\";domain=\"+c.domain:\"\";a+=c.expires?\";expires=\"+c.expires.toUTCString():\"\";return a+=c.secure?\";secure\":\"\"};b._getCookieObjectFromString=function(a){var d={};a=a?a.split(\"; \"):[];for(var c=0;c<a.length;c++){var f=b._getKeyValuePairFromCookieString(a[c]); d[f.key]===e&&(d[f.key]=f.value)}return d};b._getKeyValuePairFromCookieString=function(a){var b=a.indexOf(\"=\"),b=0>b?a.length:b;try {return{key:decodeURIComponent(a.substr(0,b)),value:decodeURIComponent(a.substr(b+1))}} catch(e) {return{key:a.substr(0,b),value:a.substr(b+1)}}};b._renewCache=function(){b._cache=b._getCookieObjectFromString(b._document.cookie);b._cachedDocumentCookie=b._document.cookie};b._areEnabled=function(){var a=\"1\"===b.set(\"cookies_lhc.js\",1).get(\"cookies_lhc.js\");b.expire(\"cookies_lhc.js\");return a};b.enabled=b._areEnabled();window.lhc_Cookies=b})();\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/options_variable_page.tpl.php')); ?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/part/javascript_variables.tpl.php')); ?>\n\nvar lh_inst_page  = {\n\tJSON : {\n            parse: window.JSON && (window.JSON.parse || window.JSON.decode) || String.prototype.evalJSON && function(str){return String(str).evalJSON();} || $.parseJSON || $.evalJSON,\n            stringify:  Object.toJSON || window.JSON && (window.JSON.stringify || window.JSON.encode) || $.toJSON\n    },\n\tcookieData : {},\n\n    js_variables : <?php echo json_encode($jsVars);?>,\n\n    lang: '<?php echo erLhcoreClassSystem::instance()->WWWDirLang?>',\n\n    langDefault: '/<?php echo erLhcoreClassSystem::instance()->SiteAccess?>',\n\n    hasSurvey : false,\n    survey_id : '',\n    surveyShown : false,\n    reset : <?php isset($fresh) && $fresh == true ? print 'true' : print 'false'?>,\n    hide : function() {\n        if (!this.cookieData.hash || this.hasSurvey == false || this.surveyShown == true) {\n            var th = document.getElementsByTagName('head')[0];\n            var s = document.createElement('script');\n            s.setAttribute('type','text/javascript');\n            s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('chat/chatwidgetclosed')?>/(eclose)/t'+this.getAppendCookieArguments());\n            th.appendChild(s);\n            s.onreadystatechange = s.onload = function(){\n                lh_inst_page.removeCookieAttr('hash');\n                lh_inst_page.showStartWindow();\n                lh_inst_page.surveyShown = false;\n            };\n        } else {\n            this.showSurvey();\n        }\n    },\n\n    storeReferrer : function(ref){\n        if (sessionStorage && !sessionStorage.getItem('lhc_ref')) {\n            try {\n                sessionStorage.setItem('lhc_ref',ref);\n            } catch(err) {};\n        }\n    },\n\n    parseStorageArguments : function() {\n        if (sessionStorage && sessionStorage.getItem('lhc_ref') && sessionStorage.getItem('lhc_ref') != '') {\n            return '&r='+encodeURIComponent(sessionStorage.getItem('lhc_ref'));\n        }\n        return '';\n    },\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/part/show_survey_page.tpl.php')); ?>\n\n    parseOptions : function() {\n\t\targumentsQuery = new Array();\n        var paramsReturn = '';\n\t\tif (typeof <?php echo $chatOptionsVariablePage?> != 'undefined') {\n\t    \tif (typeof <?php echo $chatOptionsVariablePage?>.attr != 'undefined') {\n\t    \t\tif (<?php echo $chatOptionsVariablePage?>.attr.length > 0){\n\t\t\t\t\tfor (var index in <?php echo $chatOptionsVariablePage?>.attr) {\n\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariablePage?>.attr[index] != 'undefined' && typeof <?php echo $chatOptionsVariablePage?>.attr[index].type != 'undefined') {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\targumentsQuery.push('name[]='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr[index].name)+'&encattr[]='+(typeof <?php echo $chatOptionsVariablePage?>.attr[index].encrypted != 'undefined' && <?php echo $chatOptionsVariablePage?>.attr[index].encrypted == true ? 't' : 'f')+'&value[]='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr[index].value)+'&type[]='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr[index].type)+'&size[]='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr[index].size)+'&req[]='+(typeof <?php echo $chatOptionsVariablePage?>.attr[index].req != 'undefined' && <?php echo $chatOptionsVariablePage?>.attr[index].req == true ? 't' : 'f')+'&sh[]='+((typeof <?php echo $chatOptionsVariablePage?>.attr[index].show != 'undefined' && (<?php echo $chatOptionsVariablePage?>.attr[index].show == 'on' || <?php echo $chatOptionsVariablePage?>.attr[index].show == 'off')) ? <?php echo $chatOptionsVariablePage?>.attr[index].show : 'b'));\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t    \t\t};\n\t    \t};\n\n\t    \tif (typeof <?php echo $chatOptionsVariablePage?>.attr_prefill != 'undefined') {\n\t    \t\tif (<?php echo $chatOptionsVariablePage?>.attr_prefill.length > 0){\n\t\t\t\t\tfor (var index in <?php echo $chatOptionsVariablePage?>.attr_prefill) {\n\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariablePage?>.attr_prefill[index] != 'undefined' && typeof <?php echo $chatOptionsVariablePage?>.attr_prefill[index].name != 'undefined') {\n\t\t\t\t\t\t\targumentsQuery.push('prefill['+<?php echo $chatOptionsVariablePage?>.attr_prefill[index].name+']='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr_prefill[index].value));\n\t\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariablePage?>.attr_prefill[index].hidden != 'undefined') {\n\t\t\t\t\t\t\t\targumentsQuery.push('hattr[]='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr_prefill[index].name));\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t    \t\t};\n\t    \t};\n\n\t    \tif (typeof <?php echo $chatOptionsVariablePage?>.attr_prefill_admin != 'undefined') {\n\t    \t\tif (<?php echo $chatOptionsVariablePage?>.attr_prefill_admin.length > 0){\n\t\t\t\t\tfor (var index in <?php echo $chatOptionsVariablePage?>.attr_prefill_admin) {\n\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index] != 'undefined') {\n\t\t\t\t\t\t\targumentsQuery.push('value_items_admin['+<?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].index+']='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].value));\t\n\n\t\t\t\t\t\t    if (typeof <?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].hidden != 'undefined') {\n\t\t\t\t\t\t\t     argumentsQuery.push('via_hidden['+<?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].index+']='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].hidden == true ? 't' : 'f'));\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t    if (typeof <?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].encrypted != 'undefined') {\n\t\t\t\t\t\t\t     argumentsQuery.push('via_encrypted['+<?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].index+']='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].encrypted == true ? 't' : 'f'));\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t    \t\t};\n\t    \t};\n\t    \t\n\t    \tif (argumentsQuery.length > 0) {\n\t    \t\tparamsReturn = '&'+argumentsQuery.join('&');\n\t    \t};\n    \t};\n\n        var js_args = [];\n        var currentVar = null;\n        for (var index in this.js_variables) {\n            try {\n                currentVar = eval(this.js_variables[index].var);\n                if (typeof currentVar !== 'undefined' && currentVar !== null && currentVar !== '') {\n                    js_args.push('jsvar['+this.js_variables[index].id+']='+encodeURIComponent(currentVar));\n                }\n            } catch(err) {\n                \n            }\n        }\n\n        if (js_args.length > 0) {\n            paramsReturn = paramsReturn + '&' + js_args.join('&');\n        }\n\n    \treturn paramsReturn;\n    },\n\n    getAppendCookieArguments : function() {\n\t\t    var hashAppend = this.cookieData.hash && this.reset == false ? '/(hash)/'+this.cookieData.hash : '';\n\t\t    var hashResume = this.cookieData.hash_resume && this.reset == false ? '/(hash_resume)/'+this.cookieData.hash_resume : '';\n\t\t    var soundOption = this.cookieData.s ? '/(sound)/'+this.cookieData.s : '';\n\n\t\t    var paid_hash = '';\n\t\t    if (typeof <?php echo $chatOptionsVariablePage?> != 'undefined' && typeof <?php echo $chatOptionsVariablePage?>.attr_paid != 'undefined') {\n\t\t          paid_hash = '/(phash)/'+ <?php echo $chatOptionsVariablePage?>.attr_paid.phash;\n\t\t          paid_hash = paid_hash + '/(pvhash)/'+ <?php echo $chatOptionsVariablePage?>.attr_paid.pvhash;\n\t\t    };\n\n\t\t    return hashAppend+hashResume+soundOption+paid_hash+this.survey_id;\n    },\n\n    addCss : function(css_content) {\n        var head = document.getElementsByTagName('head')[0];\n        var style = document.createElement('style');\n        style.type = 'text/css';\n\n        if(style.styleSheet) {\n        style.styleSheet.cssText = css_content;\n        } else {\n        rules = document.createTextNode(css_content);\n        style.appendChild(rules);\n        };\n\n        head.appendChild(style);\n    },\n\n\taddCookieAttribute : function(attr, value){\n    \tif (!this.cookieData[attr] || this.cookieData[attr] != value){\n\t    \tthis.cookieData[attr] = value;\n\t    \tthis.storeSesCookie();\n    \t}\n    },\n\n    showStartWindow : function(url_to_open) {\n\n        var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n\n        var mobileFullHeight = typeof <?php echo $chatOptionsVariablePage?>.opt.mobile === 'undefined' || <?php echo $chatOptionsVariablePage?>.opt.mobile === true;\n\n        if ( url_to_open != undefined ) {\n            this.initial_iframe_url = url_to_open+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.parseOptions()+'&dt='+encodeURIComponent(document.title)+this.parseStorageArguments();\n        } else {\n            this.initial_iframe_url = \"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('chat/chatwidget')?><?php $leaveamessage == true ? print '/(leaveamessage)/true' : ''?><?php $department !== false ? print '/(department)/'.$department : ''?><?php $theme !== false ? print '/(theme)/'.$theme : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $bot_id !== null ? print '/(bot_id)/'.$bot_id : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : ''?>/(mode)/embed\" + (mobileFullHeight === false ? '/(mobile)/false' : '') + this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.parseOptions()+this.parseStorageArguments();\n        };\n\n        if (mobileFullHeight === true) {\n            var raw_css = \"@media only screen and (max-device-width : 640px) { #<?php echo $chatCSSPrefix?>_status_container_page{position: fixed; overflow: hidden; right: 0px; left: 0px; top: 0px; bottom: 0px;} #<?php echo $chatCSSPrefix?>_status_container_page iframe{width:100% !important;height: 100%!important}}\";\n            this.addCss(raw_css);\n        }\n\n        this.iframe_html = '<iframe id=\"<?php echo $chatCSSPrefix?>_iframe_page\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Live Help')?>\" allowTransparency=\"true\" scrolling=\"no\" class=\"loading\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"100%\"' +\n                       ' height=\"340\"' +\n                       ' style=\"width: 100%; height: 340px;\"></iframe>';\n\n\t\tdocument.getElementById('<?php echo $chatCSSPrefix?>_status_container_page').innerHTML = this.iframe_html;\n    },\n\n\tstoreSesCookie : function(){\n    \tif (sessionStorage) {\n    \t\tsessionStorage.setItem('lhc_ses',this.JSON.stringify(this.cookieData));\n    \t} else {\n\t    \tlhc_Cookies('lhc_ses',this.JSON.stringify(this.cookieData));\n\t    }\n    },\n\n    initSessionStorage : function(){\n    \tif (sessionStorage && sessionStorage.getItem('lhc_ses')) {\n    \t\tthis.cookieData = this.JSON.parse(sessionStorage.getItem('lhc_ses'));\n    \t} else {\n\t    \tvar cookieData = lhc_Cookies('lhc_ses');\n\t\t\tif ( typeof cookieData === \"string\" && cookieData ) {\n\t\t\t\tthis.cookieData = this.JSON.parse(cookieData);\n\t\t\t}\n\t\t}\n    },\n\n\tremoveCookieAttr : function(attr){\n    \tif (this.cookieData[attr]) {\n    \t\tdelete this.cookieData[attr];\n    \t\tthis.storeSesCookie();\n    \t}\n    },\n\n    appendArg : function(args) {\n        var tt = args.length/2;\n        for (i = 0; i < tt; i++) {\n            var argument = args[i*2];\n            var value = args[(i*2)+1];\n            if (argument == 'survey_id') {\n                this.survey_id = '/(survey)/'+value;\n                this.hasSurvey = true;\n            }\n        }\n    },\n\n\tgenericCallback : function(name){\n    \tif (typeof <?php echo $chatOptionsVariablePage?> != 'undefined' && typeof <?php echo $chatOptionsVariablePage?>.callback != 'undefined' && typeof <?php echo $chatOptionsVariablePage?>.callback[name] != 'undefined') {\n    \t\t<?php echo $chatOptionsVariablePage?>.callback[name](this);    \t\n    \t}\n    },\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/send_notification.tpl.php')); ?>\n\n    handleMessage : function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_chat_page') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('<?php echo $chatCSSPrefix?>_iframe_page');\n            if (parseInt(height) < (<?php echo $chatOptionsVariablePage?>.opt.height ? <?php echo $chatOptionsVariablePage?>.opt.height : 300)) {\n                elementObject.height = (<?php echo $chatOptionsVariablePage?>.opt.height ? <?php echo $chatOptionsVariablePage?>.opt.height : 300);\n                elementObject.style.height = (<?php echo $chatOptionsVariablePage?>.opt.height ? <?php echo $chatOptionsVariablePage?>.opt.height : 300)+'px';\n            } else {\n                if (height > elementObject.height) {\n                    elementObject.height = height;\n                    elementObject.style.height = height+'px';\n                }\n            }\n    \t} else if (action == 'lhc_ch') {\n    \t\tvar parts = e.data.split(':');\n    \t\tif (parts[1] != '' && parts[2] != '') {\n    \t\t\tlh_inst_page.addCookieAttribute(parts[1],parts[2]);\n    \t\t};\n    \t} else if (action == 'lhc_chat_redirect') {\n            document.location = e.data.split(':')[1].replace(new RegExp('__SPLIT__','g'),':');\n    \t} else if (action == 'lh_callback') {\n    \t\tvar functionName = e.data.split(':')[1];\n    \t\tlh_inst_page.genericCallback(functionName);\n        } else if (action == 'lhc_chat_survey') {\n    \t\tvar value = e.data.split(':')[1];\n            lh_inst_page.survey_id = '/(survey)/'+value;\n            lh_inst_page.hasSurvey = true;\n    \t} else if (action == 'lhc_close') {\n    \t\tlh_inst_page.hide();\n        } else if (action == 'lhc_notification') {\n            var parts = e.data.split(':');\n            lh_inst_page.sendNotification(parts);\n    \t} else if (action == 'lhc_chat_closed_explicit') {\n    \t\tlh_inst_page.hide();\n    \t} <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/handlemessageembed_multiinclude.tpl.php')); ?>\n    }\n};\n\n<?php if ($referrer != '') : ?>\nlh_inst_page.storeReferrer(<?php echo json_encode($referrer)?>);\n<?php endif; ?>\n\nlh_inst_page.initSessionStorage();\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\", lh_inst_page.handleMessage);\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\", lh_inst_page.handleMessage);\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\", lh_inst_page.handleMessage, false);\n};\n\nlh_inst_page.showStartWindow();\n\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.addEventListener('message', function(event) {\n        if (typeof event.data.lhc_ch !== 'undefined' && typeof event.data.lhc_cid !== 'undefined') {\n            lh_inst_page.readNotification(event.data.lhc_cid, event.data.lhc_ch);\n        }\n    });\n}\n\n<?php endif;\nexit;?>", "<span class=\"usr-tit<?php echo $msg['user_id'] == 0 ? ' vis-tit' : ' op-tit'?>\">\n    <?php if (\n        isset($theme) && $theme !== false && isset($theme->bot_configuration_array['bubble_style_profile']) &&\n        $theme->bot_configuration_array['bubble_style_profile'] == 1 &&\n        $msg['user_id'] == -2 &&\n        $chat->bot instanceof erLhcoreClassModelGenericBotBot &&\n        $chat->bot->has_photo_avatar\n    ) : ?>\n        <i title=\"<?php echo htmlspecialchars($msg['name_support'])?>\" class=\"chat-operators mi-fs15 mr-0\">\n            <?php if ($chat->bot->has_photo) : ?>\n            <img class=\"profile-msg-pic\" src=\"<?php echo $chat->bot->photo_path?>\" alt=\"\">\n            <?php else : ?>\n            <img class=\"profile-msg-pic\" src=\"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect('widgetrestapi/avatar')?>/<?php echo htmlspecialchars($chat->bot->avatar)?>\" alt=\"\" />\n            <?php endif; ?>\n        </i>\n    <?php elseif ($msg['user_id'] > 0 && isset($theme) && $theme !== false && isset($theme->bot_configuration_array['bubble_style_profile']) && $theme->bot_configuration_array['bubble_style_profile'] == 1 &&\n        ($userMessage = erLhcoreClassModelUser::fetch($msg['user_id'],true)) && $userMessage instanceof erLhcoreClassModelUser && $userMessage->has_photo_avatar\n    ) : ?>\n            <i title=\"<?php echo htmlspecialchars($msg['name_support'])?>\" class=\"chat-operators mi-fs15 mr-0\">\n                <?php if ($userMessage->has_photo) : ?>\n                    <img class=\"profile-msg-pic\" src=\"<?php echo $userMessage->photo_path?>\" alt=\"\">\n                <?php else : ?>\n                    <img class=\"profile-msg-pic\" src=\"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect('widgetrestapi/avatar')?>/<?php echo htmlspecialchars($userMessage->avatar)?>\" alt=\"\" />\n                <?php endif; ?>\n            </i>\n    <?php elseif (isset($theme) && $theme !== false && isset($theme->bot_configuration_array['bubble_style_profile']) && $theme->bot_configuration_array['bubble_style_profile'] == 1 && $theme->operator_image_avatar !== false) : ?>\n        <i title=\"<?php echo htmlspecialchars($msg['name_support'])?>\" class=\"chat-operators mi-fs15 mr-0\">\n            <?php if ($theme->operator_image_url !== false) : ?>\n                <img class=\"profile-msg-pic\" src=\"<?php echo $theme->operator_image_url?>\" alt=\"\">\n            <?php else : ?>\n                <img class=\"profile-msg-pic\" src=\"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect('widgetrestapi/avatar')?>/<?php echo htmlspecialchars($theme->bot_configuration_array['operator_avatar'])?>\" alt=\"\" />\n            <?php endif; ?>\n        </i>\n    <?php else : ?>\n        <i title=\"<?php echo htmlspecialchars($msg['name_support'])?>\" class=\"material-icons chat-operators mi-fs15 mr-0\"><?php if (isset($react) && $react == true) : ?>&#xf10d;<?php else : ?>account_box<?php endif; ?> </i>\n        <span class=\"op-nick-title\"><?php echo htmlspecialchars($msg['name_support'])?></span>\n    <?php endif; ?>\n</span>", "<?php if ($user->has_photo) : ?>\n<img width=\"48\" height=\"48\" src=\"<?php echo $user->photo_path?>\" alt=\"<?php echo htmlspecialchars($user->name_support)?>\" />\n<?php else : ?>\n<img width=\"48\" height=\"48\" src=\"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect('widgetrestapi/avatar')?>/<?php echo htmlspecialchars($user->avatar)?>\" alt=\"<?php echo htmlspecialchars($user->name_support)?>\" />\n<?php endif; ?>\n", "<div class=\"operator-info d-flex\">\r\n\t<div>\r\n     \t<?php if ($theme !== false && $theme->operator_image_avatar !== false) : ?>\r\n\r\n        <?php if ($theme->operator_image_url !== false) : ?>\r\n     \t\t\t<img width=\"48\" height=\"48\" src=\"<?php echo $theme->operator_image_url?>\" alt=\"\" />\r\n        <?php else : ?>\r\n                <img width=\"48\" height=\"48\" src=\"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect('widgetrestapi/avatar')?>/<?php echo htmlspecialchars($theme->bot_configuration_array['operator_avatar'])?>\" alt=\"\" />\r\n        <?php endif; ?>\r\n\r\n     \t<?php else : ?>\r\n     \t\t<i class=\"icon-assistant material-icons\">\r\n                <?php if (isset($react) && $react == true) : ?>&#xf10d;<?php else : ?>account_box<?php endif; ?>\r\n            </i>\r\n     \t<?php endif;?> \r\n     </div>\r\n     <div class=\"p-1 pl-2 w-100\">\r\n\r\n         <?php if (!isset($react)) : ?>\r\n            <?php $rightLanguage = true;?>\r\n            <?php include(erLhcoreClassDesign::designtpl('pagelayouts/parts/switch_language.tpl.php'));?>\r\n         <?php endif; ?>\r\n\r\n\t    <span><i><?php if ($theme !== false && $theme->intro_operator_text != '') : ?><?php echo htmlspecialchars($theme->intro_operator_text); ?><?php else : ?><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/startchat','Have a question? Ask us!');?>\r\n\t    <?php endif;?>\r\n\t    </i></span>\r\n\t    <?php include(erLhcoreClassDesign::designtpl('lhchat/part/operator_profile_start_chat_post.tpl.php'));?>\r\n     </div>\r\n</div>\r\n", "<?php if ($theme === false || $theme->show_copyright == 1) : ?><span id=\"lhc_chatbox_title\"><a title=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print '' : print 'Powered by Live Helper Chat' ?>\" href=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print htmlspecialchars($theme->widget_copyright_url) : print 'http://livehelperchat.com' ?>\" rel=\"noreferrer\" target=\"_blank\"><img src=\"<?php if ($theme !== false && $theme->copyright_image_url !== false) : print $theme->copyright_image_url; else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/general/logo_grey.png');?><?php endif;?>\" alt=\"Live Helper Chat\" /></a></span><?php endif;?>", "<?php if ($theme === false || $theme->show_copyright == 1) : ?><span id=\"lhc_faq_title\"><a title=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print '' : print 'Powered by Live Helper Chat' ?>\" href=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print htmlspecialchars($theme->widget_copyright_url) : print 'http://livehelperchat.com' ?>\" target=\"_blank\" rel=\"noreferrer\"><img src=\"<?php if ($theme !== false && $theme->copyright_image_url !== false) : print $theme->copyright_image_url; else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/general/logo_grey.png');?><?php endif;?>\" alt=\"Live Helper Chat\" /></a></span><?php endif;?>", "<?php $iconsStatuses['copyright_image_url'] = ($theme !== false && $theme->copyright_image_url !== false && strpos($theme->copyright_image_url, 'http') !== false);          \t          \t\r\nif ($theme === false || $theme->show_copyright == 1) : ?><span id=\"lhc_title\"><a title=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print '' : print 'Powered by Live Helper Chat' ?>\" href=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print htmlspecialchars($theme->widget_copyright_url) : print 'http://livehelperchat.com' ?>\" target=\"_blank\"><img src=\"<?php if ($theme !== false && $theme->copyright_image_url !== false) : print $theme->copyright_image_url; else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/general/logo_grey.png');?><?php endif;?>\" alt=\"Live Helper Chat\" /></a></span><?php endif;?>", "<?php if ($theme === false || $theme->show_copyright == 1) : ?><span id=\"lhc_questionary_title\"><a rel=\"noreferrer\" title=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print '' : print 'Powered by Live Helper Chat' ?>\" href=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print htmlspecialchars($theme->widget_copyright_url) : print 'http://livehelperchat.com' ?>\" target=\"_blank\"><img src=\"<?php if ($theme !== false && $theme->copyright_image_url !== false) : print $theme->copyright_image_url; else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/general/logo_grey.png');?><?php endif;?>\" alt=\"Live Helper Chat\" /></a></span><?php endif;?>", "<?php include(erLhcoreClassDesign::designtpl('lhchatbox/getstatus/options_variable_page.tpl.php')); ?>\n\nvar lhc_ChatboxPage = {\n\tJSON : {\n            parse: window.JSON && (window.JSON.parse || window.JSON.decode) || String.prototype.evalJSON && function(str){return String(str).evalJSON();} || $.parseJSON || $.evalJSON,\n            stringify:  Object.toJSON || window.JSON && (window.JSON.stringify || window.JSON.encode) || $.toJSON\n    },\n\tcookieData : {},\n\n\tshowVotingForm : function() {\n\t\t  var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n   \t\t  this.initial_iframe_url = \"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('chatbox/chatwidget')?>/(chat_height)/<?php echo $heightchatcontent;?><?php $theme !== false ? print '/(theme)/'.$theme : ''?>/(mode)/embed/(identifier)/\"+<?php echo $chatboxOptionsVariablePage;?>.identifier+'/(hashchatbox)/'+<?php echo $chatboxOptionsVariablePage;?>.hashchatbox+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.getAppendRequestArguments();\n\n   \t\t  this.iframe_html = '<iframe id=\"lhc_sizing_chatbox_page\" allowTransparency=\"true\" scrolling=\"no\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"100%\"' +\n                       ' height=\"300\"' +\n                       ' style=\"width: 100%; height: 300px;\"></iframe>';\n\n          document.getElementById('lhc_chatbox_embed_container').innerHTML = this.iframe_html;\n    },\n\n    getAppendRequestArguments : function() {\n\t\t    var nickOption = (typeof <?php echo $chatboxOptionsVariablePage;?>.nick !== 'undefined') ?  '&nick='+encodeURIComponent(<?php echo $chatboxOptionsVariablePage;?>.nick) : (this.cookieData.nick ? '&nick='+encodeURIComponent(this.cookieData.nick) : '');\n\t\t    var disableOption = (typeof <?php echo $chatboxOptionsVariablePage;?>.disable_nick_change !== 'undefined') ?  '&dnc=true' : '';\n\t\t    var chatboxName = (typeof <?php echo $chatboxOptionsVariablePage;?>.chatbox_name !== 'undefined') ?  '&chtbx_name='+encodeURIComponent(<?php echo $chatboxOptionsVariablePage;?>.chatbox_name) : '';\n\t\t    return nickOption+disableOption+chatboxName;\n    },\n\n\tgetAppendCookieArguments : function() {\n\t\t    var soundOption = this.cookieData.s ? '/(sound)/'+this.cookieData.s : '';\n\t\t    var nickOption = this.cookieData.n ? '/(nick)/'+this.cookieData.n : '';\n\t\t    return soundOption+nickOption;\n    },\n\n   handleMessage : function(e) {\n        if (typeof e.data !== 'string') { return; }\n\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_chatbox_page') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('lhc_sizing_chatbox_page');\n    \t\telementObject.height = height;\n    \t\telementObject.style.height = height+'px';\n    \t} else if (action == 'lhc_ch') {\n    \t\tvar parts = e.data.split(':');\n    \t\tif (parts[1] != '' && parts[2] != '') {\n    \t\t\tlhc_ChatboxPage.addCookieAttribute(parts[1],parts[2]);\n    \t\t}\n    \t} else if (action == 'lhc_chb') {\n    \t\tvar parts = e.data.split(':');\n    \t\tif (parts[1] != '' && parts[2] != '') {\n    \t\t\tlhc_ChatboxPage.addCookieAttribute(parts[1],parts[2]);\n    \t\t}\n    \t}\n    },\n\n    removeCookieAttr : function(attr){\n    \tif (this.cookieData[attr]) {\n    \t\tdelete this.cookieData[attr];\n    \t\tthis.storeSesCookie();\n    \t}\n    },\n\n   storeSesCookie : function(){\n    \tif (localStorage) {\n    \t\tlocalStorage.setItem('lhc_chb',this.JSON.stringify(this.cookieData));\n    \t}\n   },\n\n   initSessionStorage : function(){\n    \tif (localStorage && localStorage.getItem('lhc_chb')) {\n    \t\tthis.cookieData = this.JSON.parse(localStorage.getItem('lhc_chb'));\n    \t}\n   },\n\n   addCookieAttribute : function(attr, value){\n    \tif (!this.cookieData[attr] || this.cookieData[attr] != value){\n\t    \tthis.cookieData[attr] = value;\n\t    \tthis.storeSesCookie();\n    \t}\n   }\n};\n\nlhc_ChatboxPage.initSessionStorage();\nlhc_ChatboxPage.showVotingForm();\n\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\",function(e){lhc_ChatboxPage.handleMessage(e);});\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\",function(e){lhc_ChatboxPage.handleMessage(e);});\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\",function(e){lhc_ChatboxPage.handleMessage(e);}, false);\n};", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select class=\"form-control\" id=\"LocaleID\">\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Chatbox messages content height');?></label> <input class=\"form-control\" type=\"text\" id=\"id_chat_height\" value=\"220\" />\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select class=\"form-control\" id=\"HttpMode\">\n\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6 end\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select class=\"form-control\" id=\"ThemeID\">\n\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n\t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n\t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t\t</div>\n\t</div>\n</div>\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the text area to the page where you want it to be rendered');?></p>\n\n<textarea ng-non-bindable style=\"width: 100%; height: 180px; font-size: 12px;\" id=\"HMLTContent\"></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var chat_height = '/(chat_height)/'+($('#id_chat_height').val() == '' ? 220 : $('#id_chat_height').val());\n    var id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n    \n    var id_tag = <?php include(erLhcoreClassDesign::designtpl('lhchatbox/embedcode_title.tpl.php'));?>+\"\\n\"+'<div id=\"lhc_chatbox_embed_container\" ></div>'+\"\\n\\n\"+<?php include(erLhcoreClassDesign::designtpl('lhchatbox/embedcode_title_after.tpl.php'));?>+\"\\n\";\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchatbox/getstatus/options_variable_page.tpl.php')); ?>\n    \n    var script = '<script type=\"text/javascript\">'+\"\\nvar <?php echo $chatboxOptionsVariablePage?> = {hashchatbox:'empty',identifier:'default'};\\n\"+\n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'chatbox/embed'+chat_height+id_theme+\"';\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n    $('#HMLTContent').text(id_tag+script);\n};\n\n$('#LocaleID,#id_chat_height,#HttpMode,#ThemeID').change(function(){\n    generateEmbedCode();\n});\ngenerateEmbedCode();\n</script>", "<?php\n\n$positionArgument = array (\n\t\t'bottom_left' => array (\n\t\t\t\t'radius' => 'right',\n\t\t\t\t'position' => 'bottom:0;left:0;',\n\t\t\t\t'position_body' => 'bottom:0;left:0;',\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'moz_radius' => 'topright',\n\t\t\t\t'widget_hover' => '',\n\t\t\t\t'posv' => 'b',\n\t\t\t\t'pos' => 'l',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'chrome_radius' => 'top-right',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-left:0;border-bottom:0;',\n\t\t\t\t'background_position' => '0',\n\t\t\t\t'widget_radius' => '-webkit-border-top-right-radius: 20px;-moz-border-radius-topright: 20px;border-top-right-radius: 20px;'\n\t\t),\n\t\t'bottom_right' => array (\n\t\t\t\t'pos' => 'r',\n\t\t\t\t'posv' => 'b',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => 'bottom:0;right:0;',\n\t\t\t\t'position_body' => 'bottom:0;right:0;',\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'moz_radius' => 'topleft',\n\t\t\t\t'widget_hover' => '',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-right:0;border-bottom:0;',\n\t\t\t\t'background_position' => 'left',\n\t\t\t\t'chrome_radius' => 'top-left',\n\t\t\t\t'widget_radius' => '-webkit-border-top-left-radius: 20px;-moz-border-radius-topleft: 20px;border-top-left-radius: 20px;'\n\t\t),\n\t\t'middle_right' => array (\n\t\t\t\t'pos' => 'r',\n\t\t\t\t'posv' => 't',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => \"top:{$top_pos}{$units};right:-155px;\",\n\t\t\t\t'position_body' => \"top:{$top_pos}{$units};right:0px;\",\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'widget_hover' => 'right:0;transition: 1s;',\n\t\t\t\t'moz_radius' => 'topleft',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-right:0;',\n\t\t\t\t'background_position' => '0',\n\t\t\t\t'chrome_radius' => 'top-left',\n\t\t\t\t'widget_radius' => '-webkit-border-top-left-radius: 20px;-moz-border-radius-topleft: 20px;border-top-left-radius: 20px;      -webkit-border-bottom-left-radius: 20px;-moz-border-radius-bottomleft: 20px;border-bottom-left-radius: 20px;'\n\t\t),\n\t\t'middle_left' => array (\n\t\t\t\t'posv' => 't',\n\t\t\t\t'pos' => 'l',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => \"top:{$top_pos}{$units};left:-155px;\",\n\t\t\t\t'position_body' => \"top:{$top_pos}{$units};left:0px;\",\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'padding_text' => '10px 35px 10px 9px',\n\t\t\t\t'widget_hover' => 'left:0;transition: 1s;',\n\t\t\t\t'moz_radius' => 'topright',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-left:0;',\n\t\t\t\t'background_position' => '95%',\n\t\t\t\t'chrome_radius' => 'top-right',\n\t\t\t\t'widget_radius' => '-webkit-border-top-right-radius: 20px;-moz-border-radius-topright: 20px;border-top-right-radius: 20px;      -webkit-border-bottom-right-radius: 20px;-moz-border-radius-bottomright: 20px;border-bottom-right-radius: 20px;'\n\t\t)\n);\n\nif (key_exists($position, $positionArgument)){\n\t$currentPosition = $positionArgument[$position];\n} else {\n\t$currentPosition = $positionArgument['bottom_left'];\n}\n\n?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchatbox/getstatus/options_variable.tpl.php')); ?>\n\nvar lhc_Chatbox = {\n\tJSON : {\n            parse: window.JSON && (window.JSON.parse || window.JSON.decode) || String.prototype.evalJSON && function(str){return String(str).evalJSON();} || $.parseJSON || $.evalJSON,\n            stringify:  Object.toJSON || window.JSON && (window.JSON.stringify || window.JSON.encode) || $.toJSON\n    },\n\tcookieData : {},\n\n\thasClass : function(el, name) {\n\t   return new RegExp('(\\\\s|^)'+name+'(\\\\s|$)').test(el.className);\n\t},\n\t\n\taddClass : function(el, name) {\n\t   if (!this.hasClass(el, name)) { el.className += (el.className ? ' ' : '') +name; }\n\t},\n\n\tremoveClass : function(el, name) {\n\t   if (this.hasClass(el, name)) {\n\t      el.className=el.className.replace(new RegExp('(\\\\s|^)'+name+'(\\\\s|$)'),' ').replace(/^\\s+|\\s+$/g, '');\n\t   }\n    },\n    storePos : function(dm) {\n\t\t    var cookiePos = '';\n\t\t\t<?php if ($currentPosition['pos'] == 'r') : ?>\n\t\t    \tcookiePos += dm.style.right;\t\t\t    \t   \t\n\t\t    <?php else : ?>\n\t\t    \tcookiePos += dm.style.left;\t\n\t\t    <?php endif;?>\t    \n\t\t    <?php if ($currentPosition['posv'] == 't') : ?>\n\t\t    cookiePos += \",\"+dm.style.top;\n\t\t    <?php else : ?>\n\t\t    cookiePos += \",\"+dm.style.bottom;\t\t\n\t\t    <?php endif;?>\t\t    \n\t\t    this.addCookieAttribute('pos',cookiePos);\t\n    },\n    \n\tmin : function(initial) {\n\t\tvar dm = document.getElementById('lhc_container_chatbox');\t\t\t\t\t\n\t\tif (!dm.attrIsMin || dm.attrIsMin == false) {\n\t\t\tdm.attrHeight = dm.style.height;\n\t\t\tdm.attrIsMin = true;\n\t\t\tthis.addClass(dm,'lhc-min');\t\t\t\t\t\t\t\t\t\n\t\t\t<?php if ($currentPosition['posv'] == 'b') : ?>\t\t\t\n\t\t\tif(dm.style.bottom!='' && dm.attrHeight!=''){\n\t\t\t\tdm.style.bottom = (parseInt(dm.style.bottom)+parseInt(dm.attrHeight)-35)+'px';\t\t\t\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif (initial == undefined) {\n\t\t\t\t\tdm.style.bottom = (parseInt(dm.style.bottom) + parseInt(document.getElementById('lhc_chatbox_iframe_container').offsetHeight)-10)+'px';\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t\t<?php endif; ?>\t\t\t\n\t\t\tthis.addCookieAttribute('m',1);\n\t\t\tthis.storePos(dm);\n\t\t\t<?php if ($currentPosition['posv'] == 'b' && isset($minimize_action) && $minimize_action == 'br') : ?>\n\t\t\t\t\tdm.attrBottomOrigin = dm.style.bottom;\n\t\t\t\t\tdm.style.bottom = '';\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t<?php if ($currentPosition['pos'] == 'r') : ?>\n\t\t\t\t\tdm.attrRightOrigin = dm.style.right;\n\t\t\t\t\tdm.style.right = '0px';\t\n\t\t\t\t\t<?php else : ?>\n\t\t\t\t\tdm.attrLeftOrigin = dm.style.left;\n\t\t\t\t\tdm.style.left = '0px';\t\n\t\t\t\t\t<?php endif;?>\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t<?php endif;?>\n\t\t} else {\t\n\t\t\tdm.attrIsMin = false;\n\t\t\t<?php if ($currentPosition['posv'] == 'b') : ?>\n\t\t\tif (dm.attrBottomOrigin)\t{\n\t\t\t\tdm.style.bottom = (parseInt(dm.attrBottomOrigin)-parseInt(document.getElementById('lhcchatbox_iframe').style.height)+9)+'px';\n\t\t\t\t<?php if ($currentPosition['pos'] == 'r') : ?>\n\t\t\t\tdm.style.right = dm.attrRightOrigin;\t\n\t\t\t\t<?php else : ?>\n\t\t\t\tdm.style.left = dm.attrLeftOrigin;\t\n\t\t\t\t<?php endif;?>\n\t\t\t} else if (dm.style.bottom!=''){\t\t\n\t\t\t\tdm.style.bottom = (parseInt(dm.style.bottom)-parseInt(document.getElementById('lhcchatbox_iframe').style.height)+9)+'px';\n\t\t\t}\n\t\t\t<?php endif;?>\t\t\n\t\t\tthis.removeCookieAttr('m');\n\t\t\tthis.removeClass(dm,'lhc-min');\n\t\t\tvar inst = this;\t\t\n\t\t\tthis.storePos(dm);\n\t\t};\n\t},\n\t\n\t\n\taddCss : function(css_content) {\n        var head = document.getElementsByTagName('head')[0];\n        var style = document.createElement('style');\n        style.type = 'text/css';\n\n        if(style.styleSheet) {\n          style.styleSheet.cssText = css_content;\n        } else {\n          rules = document.createTextNode(css_content);\n          style.appendChild(rules);\n        };\n\n        head.appendChild(style);\n   },\n   is_dragging : false,\n   offset_data : '',\n   appendHTML : function(htmlStr) {\n        var frag = document.createDocumentFragment(),\n            temp = document.createElement('div');\n        temp.innerHTML = htmlStr;\n        while (temp.firstChild) {\n            frag.appendChild(temp.firstChild);\n        };\n        return frag;\n    },\n\n\tremoveById : function(EId)\n    {\n        return(EObj=document.getElementById(EId))?EObj.parentNode.removeChild(EObj):false;\n    },\n\n   hide : function() {\n   \t\t\n    \tvar th = document.getElementsByTagName('head')[0];\n        var s = document.createElement('script');\n        s.setAttribute('type','text/javascript');\n        s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('chatbox/chatwidgetclosed')?>');\n        th.appendChild(s);\n        this.removeById('lhc_container_chatbox');\n        this.removeCookieAttr('pos');\n        this.removeCookieAttr('is_opened',0);\n        this.removeCookieAttr('m');\n    },\n\n \tgetAppendCookieArguments : function() {\n\t\t    var soundOption = this.cookieData.s ? '/(sound)/'+this.cookieData.s : '';\n\t\t    return soundOption;\n    },\n\n \tgetAppendRequestArguments : function() {\n\t\t    var nickOption = (typeof <?php echo $chatboxOptionsVariable;?>.nick !== 'undefined') ?  '&nick='+encodeURIComponent(<?php echo $chatboxOptionsVariable;?>.nick) : (this.cookieData.nick ? '&nick='+encodeURIComponent(this.cookieData.nick) : '');\n\t\t    var disableOption = (typeof <?php echo $chatboxOptionsVariable;?>.disable_nick_change !== 'undefined') ?  '&dnc=true' : '';\n\t\t    var chatboxName = (typeof <?php echo $chatboxOptionsVariable;?>.chatbox_name !== 'undefined') ?  '&chtbx_name='+encodeURIComponent(<?php echo $chatboxOptionsVariable;?>.chatbox_name) : '';\n\t\t    return nickOption+disableOption+chatboxName;\n    },\n    \n\taddEvent : (function () {\n\t  if (document.addEventListener) {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.addEventListener(type, fn, false);\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lhc_Chatbox.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  } else {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.attachEvent('on' + type, function () { return fn.call(el, window.event); });\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lhc_Chatbox.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  }\n\t})(),\n\t\n\tshowVotingForm : function() {\n\n   \t\t  this.removeById('lhc_container_chatbox');\n\t\t  var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n\t\t  \n   \t\t  this.initial_iframe_url = \"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('chatbox/chatwidget')?>/(chat_height)/<?php echo $heightchatcontent;?><?php $theme !== false ? print '/(theme)/'.$theme->id : ''?>/(identifier)/\"+<?php echo $chatboxOptionsVariable;?>.identifier+'/(hashchatbox)/'+<?php echo $chatboxOptionsVariable;?>.hashchatbox+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.getAppendRequestArguments();\n\n   \t\t  if (window.innerWidth < 1024) {\n          \t\twindow.open(this.initial_iframe_url,\"_blank\");\n          \t\treturn;\n          };\n   \t\t  \n   \t\t  this.addCookieAttribute('is_opened',1);\n\n   \t\t  this.iframe_html = '<div id=\"lhc_chatbox_iframe_container\"><iframe id=\"lhcchatbox_iframe\" allowTransparency=\"true\" scrolling=\"no\" class=\"lhc-loading\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"<?php echo $widthwidget?>\"' +\n                       ' height=\"<?php echo $heightwidget?>\"' +\n                       ' style=\"width: <?php echo $widthwidget?>px; height: <?php echo $heightwidget?>px;\"></iframe></div>';\n\n          this.iframe_html = '<div id=\"lhc_container_chatbox\">' +\n                              '<div id=\"lhc_chatbox_header\"><?php include(erLhcoreClassDesign::designtpl('lhchat/widget_brand/chatbox.tpl.php')); ?><?php if ($show_content === false) : ?><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" id=\"lhc_chatbox_close\"><img src=\"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php if ($theme !== false && $theme->close_image_url != '') : ?><?php echo $theme->close_image_url;?><?php else : ?><?php echo erLhcoreClassDesign::design('images/icons/cancel.png');?><?php endif;?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" alt=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" /></a><?php endif;?><?php if ($disable_min === false) : ?><a href=\"#\" id=\"lhc_chatbox_min\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Minimize/Restore')?>\"></a><?php endif;?></div><div id=\"lhc_iframe_container\">' +\n                              this.iframe_html + '</div></div>';\n\n          raw_css = \".lhc-no-transition{ -webkit-transition: none !important; -moz-transition: none !important;-o-transition: none !important;-ms-transition: none !important;transition: none !important;}\\n.lhc-min{height:35px !important}\\n#lhc_container_chatbox * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial\\;font-size:12px\\;line-height:100%\\;box-sizing: content-box\\;-moz-box-sizing:content-box;padding:0;margin:0;}\\n#lhc_container_chatbox img {border:0;}\\n#lhc_chatbox_title{float:left;}\\n#lhc_chatbox_header{position:relative;z-index:9990;height:<?php ($theme !== false && $theme->header_height > 0) ? print $theme->header_height : print '15' ?>px;overflow:hidden;background-color:#<?php $theme !== false ? print $theme->header_background : print '525252' ?>;text-align:right;clear:both;padding:<?php ($theme !== false && $theme->header_padding > 0) ? print $theme->header_padding : print '5' ?>px;}\\n#lhc_chatbox_close,#lhc_chatbox_min{padding:2px;float:right;}.lhc-min #lhc_chatbox_min{background-image:url(<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php if ($theme !== false && $theme->restore_image_url != '') : ?><?php echo $theme->restore_image_url;?><?php else : ?><?php echo erLhcoreClassDesign::design('images/icons/restore.png');?><?php endif;?>)}#lhc_chatbox_min{width:14px;height:14px;background:url(<?php if ($theme !== false && $theme->minimize_image_url != '') : ?><?php echo $theme->minimize_image_url;?><?php else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/min.png');?><?php endif;?>) no-repeat center center;}\\n\\n#lhc_chatbox_close:hover,#lhc_chatbox_min:hover{opacity:0.4}\\n#lhc_container_chatbox {overflow: hidden;transition-property: height;transition-duration: 0.4s;-webkit-transition: height 0.4s ease-in-out;transition: height 0.4s;background-color:#FFF\\;\\nz-index:9990;\\n position: fixed;<?php echo $currentPosition['position_body']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-webkit-border-radius: 5px;-moz-border-radius: 5px;border-radius: 5px;-moz-user-select:none; -khtml-user-drag:element;cursor: move;cursor: -moz-grab;cursor: -webkit-grab; }\\n#lhc_container_chatbox iframe{position:relative;display:block;transition-property: height;transition-duration: 0.4s;-webkit-transition: height 0.4s ease-in-out;transition: height 0.4s;}\\n#lhc_container_chatbox iframe.lhc-loading{\\nbackground: #FFF url(<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/general/loading.gif');?>) no-repeat center center; }\\n#lhc_container_chatbox #lhc_iframe_container{border:<?php ($theme !== false && $theme->widget_border_width > 0) ? print $theme->widget_border_width : print '1' ?>px solid #<?php $theme !== false ? print $theme->widget_border_color : print 'cccccc' ?>;border-top: 0;border-bottom-left-radius: 5px;border-bottom-right-radius: 5px;overflow: hidden;}\\n@media only screen and (max-width : 640px) {#lhc_container_chatbox{margin-bottom:5px;position:relative;right:0 !important;bottom:0 !important;top:0 !important}#lhc_container_chatbox iframe{width:100% !important}}\";\n\n          if (!this.cssWasAdded) {\n          \t\tthis.cssWasAdded = true;\n          \t\tthis.addCss(raw_css<?php ($theme !== false && $theme->custom_container_css !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_container_css).'\\'' : '' ?>);\n\t\t  };\n\n          var fragment = this.appendHTML(this.iframe_html);\n          document.body.insertBefore(fragment, document.body.childNodes[0]);\n\n\t\t  var lhc_obj = this;\n          <?php if ($show_content === false) : ?>\n          document.getElementById('lhc_chatbox_close').onclick = function() { lhc_obj.hide(); return false; };\n          <?php endif;?>\n                   \n          <?php if ($disable_min === false) : ?>\n          document.getElementById('lhc_chatbox_min').onclick = function() { lhc_obj.min(); return false; };         \n          <?php endif;?>\n                   \n          var domContainer = document.getElementById('lhc_container_chatbox');\n          var domIframe = 'lhcchatbox_iframe';\n          var domContainerId = 'lhc_container_chatbox';\n\t\t  <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/drag_drop_logic.tpl.php')); ?>\n\t\t  \n\t\t  if (this.cookieData.m) {this.min(true);};\n\t\t  \n   },\n\n   showStatusWidget : function() {\n   \t\t<?php if ($show_content === false) : ?>\n       var statusTEXT = '<a id=\"chatbox-icon\" class=\"status-icon\" href=\"#\" >'+<?php echo $chatboxOptionsVariable;?>.status_text+'</a>';\n       var raw_css = \"#lhc_chatbox_container * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial;font-size:12px;line-height:100%;box-sizing: content-box;zoom:1;margin:0;padding:0}\\n#lhc_chatbox_container .status-icon{text-decoration:none;font-size:12px;font-weight:bold;color:#<?php $theme !== false ? print $theme->text_color : print '000' ?>;display:block;padding:<?php echo $currentPosition['padding_text']?>;background:url('<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/emotion_amazing.png');?>') no-repeat <?php echo $currentPosition['background_position']?> center}\\n#lhc_chatbox_container:hover{<?php echo $currentPosition['widget_hover']?>}\\n#lhc_chatbox_container{box-sizing: content-box;<?php echo $currentPosition['widget_radius']?>-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);<?php echo $currentPosition['border_widget']?>;padding:5px 0px 3px 5px;width:190px;font-family:arial;font-size:12px;line-height:100%;transition: 1s;position:fixed;<?php echo $currentPosition['position']?>;background-color:#<?php $theme !== false ? print $theme->onl_bcolor : print 'f6f6f6' ?>;z-index:9989;}\\n<?php if ($noresponse == false) : ?>@media only screen and (max-width : 640px) {#lhc_chatbox_container{position:relative;top:0;right:0;bottom:0;left:0;width:auto;border-radius:2px;box-shadow:none;border:1px solid #e3e3e3;margin-bottom:5px;}}\\n<?php endif;?>\";\n       this.addCss(raw_css<?php ($theme !== false && $theme->custom_status_css !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_status_css).'\\'' : '' ?>);\n       var htmlStatus = '<div id=\"lhc_chatbox_container\">'+statusTEXT+'</div>';\n       var fragment = this.appendHTML(htmlStatus);\n       document.body.insertBefore(fragment, document.body.childNodes[0]);\n       var lhc_obj = this;\n       document.getElementById('chatbox-icon').onclick = function() { lhc_obj.showVotingForm(); return false; };\n       <?php endif;?>\n   },\n\n   removeCookieAttr : function(attr){\n    \tif (this.cookieData[attr]) {\n    \t\tdelete this.cookieData[attr];\n    \t\tthis.storeSesCookie();\n    \t}\n   },\n\n   storeSesCookie : function(){\n    \tif (localStorage) {\n    \t\tlocalStorage.setItem('lhc_chb',this.JSON.stringify(this.cookieData));\n    \t}\n   },\n\n   initSessionStorage : function(){\n    \tif (localStorage && localStorage.getItem('lhc_chb')) {\n    \t\tthis.cookieData = this.JSON.parse(localStorage.getItem('lhc_chb'));\n    \t};\n    \t<?php if ($show_content === true) : ?>\n    \tif (!this.cookieData.is_opened) {\n    \t\tthis.cookieData.is_opened = 1;\n    \t\t<?php if ($show_content_min === true) : ?>\n    \t\tif (!this.cookieData.m) {\n    \t\t\tthis.cookieData.m = 1;\n    \t\t}\n    \t\t<?php endif;?>\n    \t}\n    \t<?php endif;?>\n   },\n\n   addCookieAttribute : function(attr, value){\n    \tif (!this.cookieData[attr] || this.cookieData[attr] != value){\n\t    \tthis.cookieData[attr] = value;\n\t    \tthis.storeSesCookie();\n    \t}\n   },\n\n   handleMessage : function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_chatbox') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('lhcchatbox_iframe');\n    \t\tvar iframeContainer = document.getElementById('lhc_container_chatbox');\n    \t\telementObject.height = height;\n    \t\telementObject.style.height = height+'px';\n    \t\tiframeContainer.className = iframeContainer.className;    \n    \t} else if (action == 'lhc_ch') {\n    \t\tvar parts = e.data.split(':');\n    \t\tif (parts[1] != '' && parts[2] != '') {\n    \t\t\tlhc_Chatbox.addCookieAttribute(parts[1],parts[2]);\n    \t\t}\n    \t} else if (action == 'lhc_chb') {\n    \t\tvar parts = e.data.split(':');\n    \t\tif (parts[1] != '' && parts[2] != '') {\n    \t\t\tlhc_Chatbox.addCookieAttribute(parts[1],parts[2]);\n    \t\t}\n    \t}\n   }\n};\n\nlhc_Chatbox.initSessionStorage();\nlhc_Chatbox.showStatusWidget();\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\",function(e){lhc_Chatbox.handleMessage(e);});\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\",function(e){lhc_Chatbox.handleMessage(e);});\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\",function(e){lhc_Chatbox.handleMessage(e);}, false);\n};\n\nif (lhc_Chatbox.cookieData.is_opened) {\n\tif (window.innerWidth > 1023) {\n\t\tlhc_Chatbox.showVotingForm();\n\t}\n}", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div class=\"row\">\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Status text');?></label> <input class=\"form-control\" type=\"text\" id=\"id_status_text\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Chatbox');?>\" />\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Chatbox messages content height');?></label> <input class=\"form-control\" type=\"text\" id=\"id_chat_height\" value=\"220\" />\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position from the top, is only used if the Middle left or the Middle right side is chosen');?></label>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-8\">\n\t\t\t\t\t<input class=\"form-control\" type=\"text\" id=\"id_top_text\" value=\"300\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t<select class=\"form-control\" id=\"UnitsTop\">\n\t\t\t\t\t\t<option value=\"pixels\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Pixels');?></option>\n\t\t\t\t\t\t<option value=\"percents\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Percents');?></option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Size');?></label>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<input class=\"form-control\" type=\"text\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Width')?>\" id=\"id_width_text\" value=\"300\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<input class=\"form-control\" type=\"text\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Height')?>\" id=\"id_height_text\" value=\"300\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select class=\"form-control\" id=\"LocaleID\">\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position');?></label> <select class=\"form-control\" id=\"PositionID\">\n\t\t\t\t<option value=\"bottom_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom right corner of the screen');?></option>\n\t\t\t\t<option value=\"bottom_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom left corner of the screen');?></option>\n\t\t\t\t<option value=\"middle_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle right side of the screen');?></option>\n\t\t\t\t<option value=\"middle_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle left side of the screen');?></option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><input type=\"checkbox\" id=\"id_disable_responsive\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Disable responsive layout for status widget.');?></label>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select class=\"form-control\" id=\"HttpMode\">\n\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6 end\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select class=\"form-control\" id=\"ThemeID\">\n\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n\t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n\t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t\t</div>\n\t</div>\n</div>\n\n<label><input type=\"checkbox\" id=\"DisableMiminize\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Disable minimize icon');?></label>\n<br>\n<label><input type=\"checkbox\" id=\"ShowContent\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Show chatbox content instead of widget, users will be able only minimize, not close it.');?></label>\n<br>\n<label><input type=\"checkbox\" id=\"ShowContentMinimized\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Show chatbox content minimized first time if content is shown.');?></label>\n<br>\n\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the text area to the footer, before the closing &lt;/body&gt; tag');?></p>\n<textarea ng-non-bindable style=\"width: 100%; height: 180px; font-size: 12px;\" id=\"HMLTContent\"></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var id_position =  '/(position)/'+$('#PositionID').val();\n\tvar textStatus = $('#id_status_text').val();\n\tvar top = '/(top)/'+($('#id_top_text').val() == '' ? 300 : $('#id_top_text').val());\n\tvar topposition = '/(units)/'+$('#UnitsTop').val();\n\tvar widthwidget = '/(width)/'+($('#id_width_text').val() == '' ? 300 : $('#id_width_text').val());\n\tvar heightwidget = '/(height)/'+($('#id_height_text').val() == '' ? 300 : $('#id_height_text').val());\n\tvar chat_height = '/(chat_height)/'+($('#id_chat_height').val() == '' ? 220 : $('#id_chat_height').val());\t\n\tvar show_content = ($('#ShowContent').is(':checked') ? '/(sc)/true' : '');\n\tvar show_min = ($('#ShowContentMinimized').is(':checked')? '/(scm)/true' : '');\n\tvar dis_min = ($('#DisableMiminize').is(':checked')? '/(dmn)/true' : '');\n\tvar id_disable_responsive = $('#id_disable_responsive').is(':checked') ? '/(noresponse)/true' : '';\n\tvar id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n\n\t<?php include(erLhcoreClassDesign::designtpl('lhchatbox/getstatus/options_variable.tpl.php')); ?>\n\t\n    var script = '<script type=\"text/javascript\">'+\"\\nvar <?php echo $chatboxOptionsVariable?> = {hashchatbox:'empty',identifier:'default',status_text:'\"+textStatus+\"'};\\n\"+\n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'chatbox/getstatus'+id_position+top+id_disable_responsive+topposition+widthwidget+id_theme+heightwidget+chat_height+show_content+show_min+dis_min+\"';\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n    $('#HMLTContent').text(script);\n};\n$('#LocaleID,#PositionID,#HttpMode,#id_status_text,#UnitsTop,#id_top_text,#id_width_text,#id_height_text,#ThemeID,#id_disable_responsive,#id_chat_height,#ShowContent,#ShowContentMinimized,#DisableMiminize').change(function(){\n    generateEmbedCode();\n});\ngenerateEmbedCode();\n</script>", "var lhcbrowserOpeator = new LHCCoBrowserOperator(window,document,{'mode':'chat','lhcbase':'<?php echo (erLhcoreClassSystem::$httpsMode == true ? 'https://' : 'http://').$_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('cobrowse/proxycss')?>','httpsmode':<?php echo erLhcoreClassSystem::$httpsMode == true ? 'true' : 'false'?>,'disableiframe':<?php echo erLhcoreClassModelChatConfig::fetch('disable_iframe_sharing')->current_value == 1 ? 'true' : 'false'?>,'disablejs':<?php echo erLhcoreClassModelChatConfig::fetch('disable_js_execution')->current_value == 1 ? 'true' : 'false'?>,options:{opcontrol:$('#status-icon-control'),opscroll:$('#sync-user-scroll'),opmouse:$('#show-operator-mouse'),scroll:$('#scroll-user-window')},'cpos':{w:<?php echo $browse->w?>,wh:<?php echo $browse->wh?>},'cursor':'<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/cursor.png')?>','nodejssettings':{'nodejssocket':<?php echo json_encode(erLhcoreClassModelChatConfig::fetch('sharing_nodejs_sllocation')->current_value)?>,'nodejshost':<?php echo json_encode(erLhcoreClassModelChatConfig::fetch('sharing_nodejs_socket_host')->current_value != '' ? erLhcoreClassModelChatConfig::fetch('sharing_nodejs_socket_host')->current_value : $_SERVER['HTTP_HOST'])?>,'path':'<?php echo erLhcoreClassModelChatConfig::fetch('sharing_nodejs_path')->current_value?>','secure':<?php if ((int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_secure')->current_value == 1) : ?>true<?php else : ?>false<?php endif;?>},'nodejsenabled':<?php echo (int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_enabled')->current_value?>,'chat_hash':'<?php echo $browse->chat->hash?>','chat_id':<?php echo $browse->chat_id?>, 'base':<?php echo json_encode($browse->url)?>, 'initialize' : <?php echo $browse->initialize != '' ? $browse->initialize : 'null'?>});", "var lhcbrowserOpeator = new LHCCoBrowserOperator(window,document,{'mode':'onlineuser','lhcbase':'<?php echo (erLhcoreClassSystem::$httpsMode == true ? 'https://' : 'http://').$_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('cobrowse/proxycss')?>','httpsmode':<?php echo erLhcoreClassSystem::$httpsMode == true ? 'true' : 'false'?>,'disableiframe':<?php echo erLhcoreClassModelChatConfig::fetch('disable_iframe_sharing')->current_value == 1 ? 'true' : 'false'?>,'disablejs':<?php echo erLhcoreClassModelChatConfig::fetch('disable_js_execution')->current_value == 1 ? 'true' : 'false'?>,options:{opcontrol:$('#status-icon-control'),opscroll:$('#sync-user-scroll'),opmouse:$('#show-operator-mouse'),scroll:$('#scroll-user-window')},'cpos':{w:<?php echo $browse->w?>,wh:<?php echo $browse->wh?>},'cursor':'<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/cursor.png')?>','nodejssettings':{'nodejssocket':<?php echo json_encode(erLhcoreClassModelChatConfig::fetch('sharing_nodejs_sllocation')->current_value)?>,'nodejshost':<?php echo json_encode(erLhcoreClassModelChatConfig::fetch('sharing_nodejs_socket_host')->current_value)?>,'path':'<?php echo erLhcoreClassModelChatConfig::fetch('sharing_nodejs_path')->current_value?>','secure':<?php if ((int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_secure')->current_value == 1) : ?>true<?php else : ?>false<?php endif;?>},'nodejsenabled':<?php echo (int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_enabled')->current_value?>,'online_user_hash':'<?php echo $browse->online_user->vid?>','online_user_id':<?php echo $browse->online_user_id?>, 'base':<?php echo json_encode($browse->url)?>, 'initialize' : <?php echo $browse->initialize != '' ? $browse->initialize : 'null'?>});", "if(typeof formsEnabled == \"undefined\") var formsEnabled = false;\r\nthis.cobrowser = new LHCCoBrowser({'formsenabled':formsEnabled,'chat_hash':this.sharehash,'nodejssettings':{'nodejssocket':<?php echo json_encode(erLhcoreClassModelChatConfig::fetch('sharing_nodejs_sllocation')->current_value)?>,'nodejshost':<?php echo json_encode(erLhcoreClassModelChatConfig::fetch('sharing_nodejs_socket_host')->current_value != '' ? erLhcoreClassModelChatConfig::fetch('sharing_nodejs_socket_host')->current_value : $_SERVER['HTTP_HOST'])?>,'path':'<?php echo erLhcoreClassModelChatConfig::fetch('sharing_nodejs_path')->current_value?>','secure':<?php if ((int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_secure')->current_value == 1) : ?>true<?php else : ?>false<?php endif;?>},'nodejsenabled':<?php echo (int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_enabled')->current_value?>,'trans':{'operator_watching':<?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Screen shared, click to finish'),ENT_QUOTES))?>},'url':'<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+lh_inst.lang+'/cobrowse/storenodemap/(sharemode)/'+inst.sharemode+inst.getAppendCookieArguments()+'/?url='+encodeURIComponent(location.href.match(/^(.*\\/)[^\\/]*$/)[1])});\r\nthis.cobrowser.startMirroring();", "<?php // Do not edit this file but create an override ?>\r\n<?php echo '<?xml version=\"1.0\" encoding=\"utf-8\"?>';?>\r\n<chat>\r\n<id><![CDATA[ <?php echo $chat->id?> ]]></id>\r\n<url><![CDATA[http://<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('chat/single')?>/<?php echo $chat->id?>]]></url>\r\n<requested_by><![CDATA[ <?php echo htmlspecialchars($chat->email)?> ]]></requested_by>\r\n<created_at type=\"datetime\"><?php echo date('c',$chat->time)?></created_at>\r\n<page_url><![CDATA[ <?php echo htmlspecialchars($chat->referrer)?> ]]></page_url>\r\n<page_referrer><![CDATA[ <?php echo htmlspecialchars($chat->session_referrer)?> ]]></page_referrer>\r\n<chat_initiator><![CDATA[ <?php echo $chat->chat_initiator?> ]]></chat_initiator>\r\n<nick><![CDATA[ <?php echo htmlspecialchars($chat->nick)?>]]></nick>\r\n<ip_address><?php echo htmlspecialchars($chat->ip)?></ip_address>\r\n<unanswered><?php echo $chat->na_cb_executed?></unanswered>\r\n<priority><?php echo $chat->priority?></priority>\r\n<country_code><?php echo $chat->country_code?></country_code>\r\n<country><![CDATA[ <?php echo htmlspecialchars($chat->country_name)?> ]]></country>\r\n<city><![CDATA[ <?php echo htmlspecialchars($chat->city)?> ]]></city>\r\n<remarks><![CDATA[ <?php echo htmlspecialchars($chat->remarks)?> ]]></remarks>\r\n<latitude><?php echo $chat->lat?></latitude>\r\n<longitude><?php echo $chat->lon?></longitude>\r\n<additional_data><![CDATA[<?php echo htmlspecialchars($chat->additional_data)?>]]></additional_data>\r\n<operator_variables type=\"array\">\r\n<?php if (!empty($chat->chat_variables)) : $chatVariables = json_decode($chat->chat_variables); ?>\r\n\r\n<?php if (isset($chatVariables['variables'])) : ?>\r\n\t<?php foreach ($chatVariables['variables'] as $key => $variable) : ?>\r\n\r\n\t<?php if (strpos($key, '_ignore') === false && !isset($chatVariables['variables'][$key.'_ignore'])) : ?>\r\n\t\t<operator_variable>\r\n\t\t\t\t<name><![CDATA[<?php echo $key?>]]></name>\r\n\t\t\t\t<value><![CDATA[<?php echo htmlspecialchars($variable)?>]]></value>\r\n\t\t</operator_variable>\r\n\t<?php endif;?>\r\n\r\n\t<?php endforeach;?>\r\n<?php endif;?>\r\n\r\n<?php endif;?>\r\n</operator_variables>\r\n\r\n<operator_variables_filled type=\"array\">\r\n\r\n<?php if (isset($chatVariables['variables_filled'])) : ?>\r\n\t<?php foreach ($chatVariables['variables_filled'] as $key => $variables) : ?>\r\n\t\t<operator_variable>\r\n\t\t\t\t<name><![CDATA[<?php echo $key?>]]></name>\r\n\t\t\t\t<?php foreach ($variables as $variable => $value) : ?>\r\n\t\t\t\t\t<value_<?php echo $variable?>><![CDATA[<?php echo htmlspecialchars($value)?>]]></value_<?php echo $variable?>>\r\n\t\t\t\t<?php endforeach;?>\r\n\t\t</operator_variable>\r\n\t<?php endforeach;?>\r\n<?php endif;?>\r\n\r\n</operator_variables_filled>\r\n\r\n<transcripts type=\"array\">\r\n<?php foreach (erLhcoreClassModelmsg::getList(array('limit' => 5000, 'filter' => array('chat_id' => $chat->id))) as $msg) : ?>\r\n<transcript>\r\n\t<id><?php echo $msg->user_id?></id>\r\n\t<date type=\"datetime\"><?php echo date('r',$msg->time)?></date>\r\n\t<message><![CDATA[<?php echo htmlspecialchars($msg->msg)?>]]></message>\r\n\t<user_id><?php echo $msg->user_id?></user_id>\r\n\t<alias>\r\n\t<?php if ($msg->user_id == -1) : ?>\r\n\tsystem\r\n\t<?php elseif ($msg->user_id == 0) : ?>\r\n\tvisitor\r\n\t<?php elseif ($msg->user_id > 0) : ?>\r\n\t<?php echo htmlspecialchars($msg->name_support)?>\r\n\t<?php endif;?>\r\n\t</alias>\r\n</transcript>\r\n<?php endforeach;?>\r\n</transcripts>\r\n<chat_waittime type=\"integer\"><?php echo $chat->wait_time?></chat_waittime>\r\n<chat_duration type=\"integer\"><?php echo $chat->chat_duration?></chat_duration>\r\n</chat>", "<?php include(erLhcoreClassDesign::designtpl('lhfaq/getstatus/options_variable.tpl.php')); ?>\nvar lhc_FAQEmbed = function() {\n\tvar self = this;\n\tthis.showVotingForm = function() {\n\t\t  var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n   \t\t  this.initial_iframe_url = \"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('faq/faqwidget')?>/(mode)/embed<?php $theme !== false ? print '/(theme)/'.$theme : ''?>\"+'?URLReferer='+locationCurrent+'&URLModule='+encodeURIComponent(<?php echo $faqOptionsVariable;?>.url)+'&identifier='+encodeURIComponent(<?php echo $faqOptionsVariable;?>.identifier);\n   \t\t  this.iframe_html = '<iframe id=\"lhcfaq_iframe_embed\" allowTransparency=\"true\" scrolling=\"no\" class=\"loading\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"100%\"' +\n                       ' height=\"350\"' +\n                       ' style=\"width: 100%; height: 350px;\"></iframe>';\n\n\t\t  document.getElementById('lhc_faq_embed_container').innerHTML = this.iframe_html;\n    };\n\n    this.handleMessage = function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_faq_embed') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('lhcfaq_iframe_embed');\n    \t\telementObject.height = height;\n    \t\telementObject.style.height = height+'px';\n    \t};\n   };\n   this.showVotingForm();\n};\n\nvar lhcFaqEmbed = new lhc_FAQEmbed();\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\",function(e){lhcFaqEmbed.handleMessage(e);});\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\",function(e){lhcFaqEmbed.handleMessage(e);});\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\",function(e){lhcFaqEmbed.handleMessage(e);}, false);\n};\n\n\n", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select id=\"LocaleID\" class=\"form-control\">\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select id=\"HttpMode\" class=\"form-control\">\n\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6 end\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select id=\"ThemeID\" class=\"form-control\">\n\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n\t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n\t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t\t</div>\n\t</div>\n</div>\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the textarea to page where you want it to be rendered');?></p>\n\n<textarea style=\"width: 100%; height: 180px; font-size: 12px;\" id=\"HMLTContent\"></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n    \n    var id_tag = <?php include(erLhcoreClassDesign::designtpl('lhfaq/embedcode_title.tpl.php'));?>+\"\\n\"+'<div id=\"lhc_faq_embed_container\" ></div>'+\"\\n\\n\"+<?php include(erLhcoreClassDesign::designtpl('lhfaq/embedcode_title_after.tpl.php'));?>+\"\\n\";\n    \n    <?php include(erLhcoreClassDesign::designtpl('lhfaq/getstatus/options_variable.tpl.php')); ?>\n    \n    var script = '<script type=\"text/javascript\">'+\"\\nvar <?php echo $faqOptionsVariable;?> = {url:'replace_me_with_dynamic_url',identifier:''};\\n\"+\n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'faq/embed'+id_theme+\"';\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n    $('#HMLTContent').text(id_tag+script);\n};\n\n$('#LocaleID,#HttpMode,#ThemeID').change(function(){\n    generateEmbedCode();\n});\ngenerateEmbedCode();\n</script>", "<?php\n\n$positionArgument = array (\n\t\t'bottom_left' => array (\n\t\t\t\t'radius' => 'right',\n\t\t\t\t'position' => 'bottom:0;left:0;',\n\t\t\t\t'position_body' => 'bottom:0;left:0;',\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'moz_radius' => 'topright',\n\t\t\t\t'widget_hover' => '',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'chrome_radius' => 'top-right',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-left:0;border-bottom:0;',\n\t\t\t\t'background_position' => '0',\n\t\t\t\t'widget_radius' => '-webkit-border-top-right-radius: 20px;-moz-border-radius-topright: 20px;border-top-right-radius: 20px;',\n\t\t\t\t'posv' => 'b',\n\t\t\t\t'pos' => 'l',\n\t\t),\n\t\t'bottom_right' => array (\n\t\t\t\t'pos' => 'r',\n\t\t\t\t'posv' => 'b',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => 'bottom:0;right:0;',\n\t\t\t\t'position_body' => 'bottom:0;right:0;',\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'moz_radius' => 'topleft',\n\t\t\t\t'widget_hover' => '',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'background_position' => 'left',\n\t\t\t\t'chrome_radius' => 'top-left',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-right:0;border-bottom:0;',\n\t\t\t\t'widget_radius' => '-webkit-border-top-left-radius: 20px;-moz-border-radius-topleft: 20px;border-top-left-radius: 20px;'\n\t\t),\n\t\t'middle_right' => array (\n\t\t\t\t'pos' => 'r',\n\t\t\t\t'posv' => 't',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => \"top:{$top_pos}{$units};right:-155px;\",\n\t\t\t\t'position_body' => \"top:{$top_pos}{$units};right:0px;\",\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'widget_hover' => 'right:0;transition: 1s;',\n\t\t\t\t'moz_radius' => 'topleft',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-right:0;',\n\t\t\t\t'background_position' => '0',\n\t\t\t\t'chrome_radius' => 'top-left',\n\t\t\t\t'widget_radius' => '-webkit-border-top-left-radius: 20px;-moz-border-radius-topleft: 20px;border-top-left-radius: 20px;      -webkit-border-bottom-left-radius: 20px;-moz-border-radius-bottomleft: 20px;border-bottom-left-radius: 20px;'\n\t\t),\n\t\t'middle_left' => array (\n\t\t\t\t'posv' => 't',\n\t\t\t\t'pos' => 'l',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => \"top:{$top_pos}{$units};left:-155px;\",\n\t\t\t\t'position_body' => \"top:{$top_pos}{$units};left:0px;\",\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'padding_text' => '10px 35px 10px 9px',\n\t\t\t\t'widget_hover' => 'left:0;transition: 1s;',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-left:0;',\n\t\t\t\t'moz_radius' => 'topright',\n\t\t\t\t'background_position' => '95%',\n\t\t\t\t'chrome_radius' => 'top-right',\n\t\t\t\t'widget_radius' => '-webkit-border-top-right-radius: 20px;-moz-border-radius-topright: 20px;border-top-right-radius: 20px;      -webkit-border-bottom-right-radius: 20px;-moz-border-radius-bottomright: 20px;border-bottom-right-radius: 20px;'\n\t\t)\n);\n\nif (key_exists($position, $positionArgument)){\n\t$currentPosition = $positionArgument[$position];\n} else {\n\t$currentPosition = $positionArgument['bottom_left'];\n}\n\n?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhfaq/getstatus/options_variable.tpl.php')); ?>\n\nvar lhc_FAQ = {\n\tJSON : {\n            parse: window.JSON && (window.JSON.parse || window.JSON.decode) || String.prototype.evalJSON && function(str){return String(str).evalJSON();} || $.parseJSON || $.evalJSON,\n            stringify:  Object.toJSON || window.JSON && (window.JSON.stringify || window.JSON.encode) || $.toJSON\n    },\n    is_dragging : false,\n    offset_data : '',\n\tcookieData : {},\n\taddCss : function(css_content) {\n        var head = document.getElementsByTagName('head')[0];\n        var style = document.createElement('style');\n        style.type = 'text/css';\n\n        if(style.styleSheet) {\n          style.styleSheet.cssText = css_content;\n        } else {\n          rules = document.createTextNode(css_content);\n          style.appendChild(rules);\n        };\n\n        head.appendChild(style);\n   },\n\n   appendHTML : function(htmlStr) {\n        var frag = document.createDocumentFragment(),\n            temp = document.createElement('div');\n        temp.innerHTML = htmlStr;\n        while (temp.firstChild) {\n            frag.appendChild(temp.firstChild);\n        };\n        return frag;\n    },\n\n\tremoveById : function(EId)\n    {\n        return(EObj=document.getElementById(EId))?EObj.parentNode.removeChild(EObj):false;\n    },\n\n    hide : function() {\n        this.removeById('lhc_container_faq');\n    },\n    \n\taddEvent : (function () {\n\t  if (document.addEventListener) {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.addEventListener(type, fn, false);\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lhc_FAQ.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  } else {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.attachEvent('on' + type, function () { return fn.call(el, window.event); });\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lhc_FAQ.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  }\n\t})(),\n\t\n\tshowVotingForm : function() {\n\n   \t\t  this.removeById('lhc_container_faq');\n\n   \t\t  var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n   \t\t  this.initial_iframe_url = \"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('faq/faqwidget')?><?php $theme !== false ? print '/(theme)/'.$theme->id : ''?>\"+'?URLReferer='+locationCurrent+'&URLModule='+encodeURIComponent(<?php echo $faqOptionsVariable;?>.url)+'&identifier='+encodeURIComponent(<?php echo $faqOptionsVariable;?>.identifier);\n\n   \t\t  if (window.innerWidth < 1024) {\n          \t\twindow.open(this.initial_iframe_url,\"_blank\");\n          \t\treturn;\n          };\n          \n   \t\t  this.iframe_html = '<iframe id=\"lhcfaq_iframe\" allowTransparency=\"true\" scrolling=\"no\" class=\"lhc-loading\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"520\"' +\n                       ' height=\"350\"' +\n                       ' style=\"width: 490px; height: 350px;\"></iframe>';\n\n          this.iframe_html = '<div id=\"lhc_container_faq\">' +\n                              '<div id=\"lhc_faq_header\"><?php include(erLhcoreClassDesign::designtpl('lhchat/widget_brand/faq.tpl.php')); ?><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" id=\"lhc_faq_close\"><img src=\"<?php if ($theme !== false && $theme->close_image_url != '') : ?><?php echo $theme->close_image_url;?><?php else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/cancel.png');?><?php endif;?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" alt=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" /></a></div><div id=\"lhc_iframe_container\">' +\n                              this.iframe_html + '</div></div>';\n\n          raw_css = \"#lhc_container_faq * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial\\;line-height:100%\\;font-size:12px\\;box-sizing: content-box\\;-moz-box-sizing:content-box;padding:0;margin:0;}\\n#lhc_container_faq img {border:0;}\\n#lhc_faq_title{float:left;}\\n#lhc_faq_header{position:relative;z-index:9990;height:<?php ($theme !== false && $theme->header_height > 0) ? print $theme->header_height : print '15' ?>px;overflow:hidden;background-color:#<?php $theme !== false ? print $theme->header_background : print '525252' ?>;text-align:right;clear:both;padding:<?php ($theme !== false && $theme->header_padding > 0) ? print $theme->header_padding : print '5' ?>px;}\\n#lhc_faq_close{padding:2px;float:right;}\\n#lhc_faq_close:hover{opacity:0.4;}\\n#lhc_container_faq {-moz-user-select:none; -khtml-user-drag:element;cursor: move;cursor: -moz-grab;cursor: -webkit-grab; overflow: hidden;transition-property: height;transition-duration: 0.4s;-webkit-transition: height 0.4s ease-in-out;transition: height 0.4s;background-color:#FFF\\;width:490px;\\nz-index:9990;\\n position: fixed;<?php echo $currentPosition['position_body']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-webkit-border-radius: 5px;-moz-border-radius: 5px;border-radius: 5px; }\\n#lhc_container_faq iframe{position:relative;display:block;transition-property: height;transition-duration: 0.4s;-webkit-transition: height 0.4s ease-in-out;transition: height 0.4s;}\\n#lhc_container_faq iframe.lhc-loading{\\nbackground: #FFF url(<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/general/loading.gif');?>) no-repeat center center; }\\n#lhc_container_faq #lhc_iframe_container{border:<?php ($theme !== false && $theme->widget_border_width > 0) ? print $theme->widget_border_width : print '1' ?>px solid #<?php $theme !== false ? print $theme->widget_border_color : print 'cccccc' ?>;border-top: 0;border-bottom-left-radius: 5px;border-bottom-right-radius: 5px;overflow: hidden;}\\n@media only screen and (max-width : 640px) {#lhc_container_faq{margin-bottom:5px;position:relative;right:0;bottom:0;top:0;width:100%;}#lhc_container_faq iframe{width:100% !important}}\";\n\n          if (!this.cssWasAdded) {\n          \t\tthis.cssWasAdded = true;\n          \t\tthis.addCss(raw_css<?php ($theme !== false && $theme->custom_container_css !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_container_css).'\\'' : '' ?>);\n\t\t  };\n\n          var fragment = this.appendHTML(this.iframe_html);\n          document.body.insertBefore(fragment, document.body.childNodes[0]);\n\t\t\n\t\t  var lhc_obj = this;\t\t\t\n          document.getElementById('lhc_faq_close').onclick = function() { lhc_obj.hide(); return false; };\n           \n          var domContainer = document.getElementById('lhc_container_faq');\n          var domIframe = 'lhcfaq_iframe';\n          var domContainerId = 'lhc_container_faq';\n\t\t  <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/drag_drop_logic.tpl.php')); ?>\t\n          \n          \n    },\n\n    showStatusWidget : function() {\n       var statusTEXT = '<a id=\"faq-icon\" class=\"status-icon\" href=\"#\" >'+<?php echo $faqOptionsVariable;?>.status_text+'</a>';\n       var raw_css = \"#lhc_faq_container * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial;line-height:100%;font-size:12px;box-sizing: content-box;zoom:1;margin:0;padding:0;}\\n#lhc_faq_container .status-icon{text-decoration:none;font-size:12px;font-weight:bold;color:#<?php $theme !== false ? print $theme->text_color : print '000' ?>;display:block;padding:<?php echo $currentPosition['padding_text']?>;background:url('<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/help.png');?>') no-repeat <?php echo $currentPosition['background_position']?> center}\\n#lhc_faq_container:hover{<?php echo $currentPosition['widget_hover']?>}\\n#lhc_faq_container{box-sizing: content-box;<?php echo $currentPosition['widget_radius']?>-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);<?php echo $currentPosition['border_widget']?>;padding:5px 0px 3px 5px;width:190px;font-family:arial;font-size:12px;transition: 1s;position:fixed;<?php echo $currentPosition['position']?>;background-color:#<?php $theme !== false ? print $theme->onl_bcolor : print 'f6f6f6' ?>;z-index:9989;}\\n<?php if ($noresponse == false) : ?>@media only screen and (max-width : 640px) {#lhc_faq_container{position:relative;top:0;right:0;bottom:0;left:0;width:auto;border-radius:2px;box-shadow:none;border:1px solid #e3e3e3;margin-bottom:5px;}}\\n<?php endif;?>\";\n       this.addCss(raw_css<?php ($theme !== false && $theme->custom_status_css_front !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_status_css_front).'\\'' : '' ?>);\n       var htmlStatus = '<div id=\"lhc_faq_container\">'+statusTEXT+'</div>';\n       var fragment = this.appendHTML(htmlStatus);\n       document.body.insertBefore(fragment, document.body.childNodes[0]);\n       var inst = this;\n       document.getElementById('faq-icon').onclick = function() { inst.showVotingForm(); return false; };\n   },\n\n   handleMessage : function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_faq') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('lhcfaq_iframe');\n    \t\tvar iframeContainer = document.getElementById('lhc_container_faq');\n    \t\telementObject.height = height;\n    \t\telementObject.style.height = height+'px';\n    \t\tiframeContainer.className = iframeContainer.className;    \t\t\n    \t};\n   },\n   \n   addCookieAttribute : function() {\n   \n   }\n\n};\n\nlhc_FAQ.showStatusWidget();\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\",function(e){lhc_FAQ.handleMessage(e);});\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\",function(e){lhc_FAQ.handleMessage(e);});\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\",function(e){lhc_FAQ.handleMessage(e);}, false);\n};\n\n\n", "<h1 class=\"attr-header\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div class=\"row\">\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Status text');?></label> <input type=\"text\" class=\"form-control\" id=\"id_status_text\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','FAQ');?>\" />\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position from the top, only used if the Middle left or the Middle right side is chosen');?></label>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-8 columns\">\n\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"id_top_text\" value=\"450\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-4 columns\">\n\t\t\t\t\t<select id=\"UnitsTop\" class=\"form-control\">\n\t\t\t\t\t\t<option value=\"pixels\">Pixels</option>\n\t\t\t\t\t\t<option value=\"percents\">Percents</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select id=\"LocaleID\" class=\"form-control\">\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position');?></label> <select id=\"PositionID\" class=\"form-control\">\n\t\t\t\t<option value=\"bottom_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom right corner of the screen');?></option>\n\t\t\t\t<option value=\"bottom_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom left corner of the screen');?></option>\n\t\t\t\t<option value=\"middle_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle right side of the screen');?></option>\n\t\t\t\t<option value=\"middle_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle left side of the screen');?></option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<label><input type=\"checkbox\" id=\"id_disable_responsive\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Disable responsive layout for status widget.');?></label>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select id=\"HttpMode\" class=\"form-control\">\n\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6 end\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select id=\"ThemeID\" class=\"form-control\">\n\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n\t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n\t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t\t</div>\n\t</div>\n</div>\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Copy the code from the text area to the page header or footer');?></p>\n<textarea style=\"width: 100%; height: 180px; font-size: 12px;\" id=\"HMLTContent\"></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var id_position =  '/(position)/'+$('#PositionID').val();\n\tvar textStatus = $('#id_status_text').val();\n\tvar top = '/(top)/'+($('#id_top_text').val() == '' ? 400 : $('#id_top_text').val());\n\tvar topposition = '/(units)/'+$('#UnitsTop').val();\n\tvar id_disable_responsive = $('#id_disable_responsive').is(':checked') ? '/(noresponse)/true' : '';\n\tvar id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n\n\t<?php include(erLhcoreClassDesign::designtpl('lhfaq/getstatus/options_variable.tpl.php')); ?>\n\t  \n    var script = '<script type=\"text/javascript\">'+\"\\nvar <?php echo $faqOptionsVariable;?> = {status_text:'\"+textStatus+\"',url:'replace_me_with_dynamic_url',identifier:''};\\n\"+\n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'faq/getstatus'+id_position+top+topposition+id_theme+id_disable_responsive+\"';\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n    $('#HMLTContent').text(script);\n};\n$('#LocaleID,#PositionID,#id_status_text,#UnitsTop,#id_top_text,#HttpMode,#id_disable_responsive,#ThemeID').change(function(){\n    generateEmbedCode();\n});\ngenerateEmbedCode();\n</script>", "<h1 ng-non-bindable><?php echo htmlspecialchars($form)?></h1>\r\n\r\n<div class=\"row pb-2\">\r\n\t<div class=\"col-6\"><a href=\"<?php echo erLhcoreClassDesign::baseurl('form/downloadcollected')?>/<?php echo $form->id?>\" class=\"btn btn-secondary\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Download XLS');?></a></div>\r\n\t<div class=\"col-6\">\r\n\t\r\n\t<div class=\"input-group\">\r\n        <div class=\"input-group-prepend\"><span class=\"input-group-text\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','URL');?></span></div>\r\n      <input type=\"text\" class=\"form-control\" value=\"<?php echo erLhcoreClassXMP::getBaseHost(). $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect('form/fill')?>/<?php echo $form->id?>\">\r\n    </div>\r\n    \r\n\t</div>\r\n</div>\r\n\r\n<table class=\"table\" cellpadding=\"0\" cellspacing=\"0\" ng-non-bindable>\r\n<thead>\r\n<tr>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Name');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Identifier');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Chat');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Intro');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Time');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','IP');?></th>\r\n    <th width=\"1%\">&nbsp;</th>\r\n    <th width=\"1%\">&nbsp;</th>\r\n</tr>\r\n</thead>\r\n<?php foreach ($items as $item) : ?>\r\n    <tr>\r\n    \t<td><?php echo htmlspecialchars($item->getAttrValue($form->name_attr))?></td>\r\n    \t<td>\r\n    \t<div class=\"page-url\"><span><?php echo htmlspecialchars($item->identifier)?></span></div>\r\n    \t</td>\r\n        <td>\r\n    \t<?php if ($item->chat_id > 0) : ?>\r\n            <a class=\"material-icons\" onclick=\"lhc.previewChat(<?php echo $item->chat_id?>)\">info_outline</a>\r\n        <?php else : ?>\r\n            <i class=\"material-icons\">remove_circle_outline</i>\r\n        <?php endif; ?>\r\n    \t</td>\r\n        <td><?php echo $form->intro_attr != '' ? htmlspecialchars($item->getAttrValue($form->intro_attr)) : ''?></td>\r\n        <td><?php echo $item->ctime_front?></td>\r\n        <td><?php echo htmlspecialchars($item->ip)?></td>\r\n        <td nowrap>\r\n\t        <div style=\"width:140px\">\r\n\t        \r\n\t        \t<div class=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n\t            \t<a class=\"btn btn-secondary btn-xs\" href=\"<?php echo erLhcoreClassDesign::baseurl('form/viewcollected')?>/<?php echo $item->id?>\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','View');?></a>\r\n\t            \t<a class=\"btn btn-secondary btn-xs\" href=\"<?php echo erLhcoreClassDesign::baseurl('form/downloaditem')?>/<?php echo $item->id?>\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Download');?></a>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t        </div>\r\n        </td>\r\n        <td nowrap><a onclick=\"return confirm('<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('kernel/message','Are you sure?');?>')\" class=\"csfr-required btn btn-danger btn-xs\" href=\"<?php echo erLhcoreClassDesign::baseurl('form/collected')?>/<?php echo $form->id?>/(action)/delete/(id)/<?php echo $item->id?>\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Delete');?></a></td>\r\n    </tr>\r\n<?php endforeach; ?>\r\n</table>\r\n\r\n<?php include(erLhcoreClassDesign::designtpl('lhkernel/secure_links.tpl.php')); ?>\r\n\r\n<?php if (isset($pages)) : ?>\r\n    <?php include(erLhcoreClassDesign::designtpl('lhkernel/paginator.tpl.php')); ?>\r\n<?php endif;?>", "<?php include(erLhcoreClassDesign::designtpl('lhform/getstatus/options_variable.tpl.php')); ?>\n\nvar lhc_FormEmbed = function() {\n\tvar self = this;\n\tthis.showVotingForm = function() {\n   \t\t  this.initial_iframe_url = \"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('form/formwidget')?>/<?php echo $form_id,$identifier?>\";\n   \t\t  this.iframe_html = '<iframe id=\"lhcform_iframe_embed\" allowTransparency=\"true\" scrolling=\"no\" class=\"loading\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"100%\"' +\n                       ' height=\"350\"' +\n                       ' style=\"width: 100%; height: 350px;\"></iframe>';\n\n\t\t  document.getElementById('lhc_form_embed_container').innerHTML = this.iframe_html;\n    };\n\n    this.handleMessage = function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_form_embed') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('lhcform_iframe_embed');\n    \t\telementObject.height = height;\n    \t\telementObject.style.height = height+'px';\n    \t};\n   };\n   this.showVotingForm();\n};\n\nvar lhcFormEmbed = new lhc_FormEmbed();\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\",function(e){lhcFormEmbed.handleMessage(e);});\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\",function(e){lhcFormEmbed.handleMessage(e);});\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\",function(e){lhcFormEmbed.handleMessage(e);}, false);\n};", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label>\r\n        <select class=\"form-control\" id=\"LocaleID\">\r\n            <?php foreach ($locales as $locale ) : ?>\r\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\r\n            <?php endforeach; ?>\r\n        </select>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n\t   <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label>\r\n\t\t    <select class=\"form-control\" id=\"HttpMode\">         \r\n\t\t            <option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\r\n\t\t            <option value=\"http:\">http:</option>\r\n\t\t            <option value=\"https:\">https:</option>      \r\n\t\t    </select>    \t    \r\n    </div>\r\n    <div class=\"col-md-6\">\r\n\t   <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose what form you want to embed');?></label>\r\n\t   <?php echo erLhcoreClassRenderHelper::renderCombobox( array (\r\n\t\t\t\t\t\t\t\t\t\t'input_name'     => 'FormID',\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t'display_name'   => 'name',\r\n\t\t\t\t\t\t\t\t\t\t'selected_id'    => 0,\r\n\t                                    'css_class'      => 'form-control',\r\n\t\t\t\t\t\t\t\t\t\t'list_function'  => 'erLhAbstractModelForm::getList',\r\n\t\t\t\t\t\t\t\t\t\t'list_function_params'  => array('limit' => '1000000'),\r\n\t\t)); ?> \t    \r\n    </div>\r\n    <div class=\"col-md-6\">\r\n\t   <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Identifier');?></label>\r\n\t   <input class=\"form-control\" type=\"text\" id=\"id_identifier\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Identifier')?>\" value=\"\" /> \t    \r\n    </div>\r\n    \r\n</div>\r\n\r\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the textarea to page where you want it to be rendered');?></p>\r\n\r\n<textarea class=\"form-control\" style=\"width:100%;height:180px;font-size:12px;\" id=\"HMLTContent\" ></textarea>\r\n\r\n<script type=\"text/javascript\">\r\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\r\n\r\nfunction generateEmbedCode(){\r\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\r\n    var formid = $('#id_FormID').val() == default_site_access ? '' : $('#id_FormID').val();\r\n    var identifier = $('#id_identifier').val() == '' ? '' : '?identifier=' + $('#id_identifier').val();\r\n\r\n    var id_tag = '<!-- Place this tag where you want the Live Helper Form module to render. -->'+\"\\n\"+'<div id=\"lhc_form_embed_container\" ></div>'+\"\\n\\n<!-- Place this tag after the Live Helper Form module tag. -->\\n\";\r\n    \r\n    <?php include(erLhcoreClassDesign::designtpl('lhform/getstatus/options_variable.tpl.php')); ?>\r\n    \r\n    var script = '<script type=\"text/javascript\">'+\"\\nvar <?php echo $formOptionsVariable?> = {};\\n\"+\r\n      '(function() {'+\"\\n\"+\r\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\r\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'form/embed/'+formid+identifier+\"';\\n\"+\r\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\r\n      '})();'+\"\\n\"+\r\n    '</scr'+'ipt>';\r\n    $('#HMLTContent').text(id_tag+script);\r\n};\r\n\r\n$('#LocaleID,#HttpMode,#id_identifier').change(function(){\r\n    generateEmbedCode();\r\n});\r\ngenerateEmbedCode();\r\n</script>", "<div class=\"meta-message meta-message-<?php echo $messageId?>\">\r\n\r\n    <?php if (!isset($metaMessageData['content']['attr_options']['as_dropdown']) || $metaMessageData['content']['attr_options']['as_dropdown'] == false) : ?>\r\n    <ul class=\"quick-replies list-inline meta-auto-hide mb-0\">\r\n    <?php foreach ($metaMessage as $item) : $disabledButton = isset($item['content']['disabled']) && $item['content']['disabled'] == true;?>\r\n            <?php if ($item['type'] == 'url') : ?>\r\n            <li class=\"list-inline-item\">\r\n                <a rel=\"noreferrer\" <?php if (isset($item['content']['button_id']) && $item['content']['button_id'] != '') : ?>id=\"<?php echo htmlspecialchars($item['content']['button_id'])?>\"<?php endif;?> <?php if (isset($item['content']['payload_message']) && $item['content']['payload_message'] != '') : ?>data-payload=<?php echo json_encode($item['content']['payload_message'])?> data-id=\"<?php echo $messageId?>\" onclick='lhinst.buttonClicked(<?php echo json_encode($item['content']['payload_message'])?>,<?php echo $messageId?>,$(this))'<?php endif;?> class=\"btn btn-sm btn-outline-primary btn-bot\" target=\"_blank\" href=\"<?php echo htmlspecialchars($item['content']['payload'])?>\"><i class=\"material-icons\"><?php if (isset($react) && $react == true) : ?>&#xf106;<?php else : ?>open_in_new<?php endif; ?></i><?php echo htmlspecialchars($item['content']['name'])?></a>\r\n            </li>\r\n            <?php elseif ($item['type'] == 'file') : $fileReply = erLhcoreClassModelChatFile::fetch($item['content']['payload']); if ($fileReply instanceof erLhcoreClassModelChatFile) : $fileLink = '//'. $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurldirect('file/downloadfile') . \"/{$fileReply->id}/{$fileReply->security_hash}\"; ?>\r\n            <li class=\"list-inline-item\">\r\n                <a rel=\"noreferrer\" <?php if (isset($item['content']['button_id']) && $item['content']['button_id'] != '') : ?>id=\"<?php echo htmlspecialchars($item['content']['button_id'])?>\"<?php endif;?> <?php if (isset($item['content']['payload_message']) && $item['content']['payload_message'] != '') : ?>data-payload=<?php echo json_encode($item['content']['payload_message'])?> data-id=\"<?php echo $messageId?>\" onclick='lhinst.buttonClicked(<?php echo json_encode($item['content']['payload_message'])?>,<?php echo $messageId?>,$(this))'<?php endif;?> class=\"btn btn-sm btn-outline-primary btn-bot\" target=\"_blank\" href=\"<?php echo $fileLink?>\"><i class=\"material-icons\"><?php if (isset($react) && $react == true) : ?>&#xf10e;<?php else : ?>attach_file<?php endif; ?></i><?php echo htmlspecialchars($item['content']['name'])?></a>\r\n            </li>\r\n            <?php endif; elseif ($item['type'] == 'trigger') : ?>\r\n            <li class=\"list-inline-item\"><button type=\"button\" <?php if (isset($item['content']['button_id']) && $item['content']['button_id'] != '') : ?>id=\"<?php echo htmlspecialchars($item['content']['button_id'])?>\"<?php endif;?> class=\"btn btn-sm btn-outline-primary btn-bot\" <?php if ($disabledButton == true) : ?>disabled=\"disabled\"<?php endif;?> <?php if ($disabledButton == false) : ?>data-payload=<?php echo json_encode($item['content']['payload']. '__' . md5($item['content']['name']))?> data-id=\"<?php echo $messageId?>\" onclick='lhinst.updateTriggerClicked(<?php echo json_encode($item['content']['payload']. '__' . md5($item['content']['name']))?>,<?php echo $messageId?>,$(this))'<?php endif;?>><?php echo htmlspecialchars($item['content']['name'])?></button></li>\r\n            <?php elseif ($item['type'] == 'updatechat') : ?>\r\n                <?php if ($item['content']['payload'] == 'subscribeToNotifications') : $detectMobile = new Mobile_Detect; ?>\r\n                    <?php if (!$detectMobile->is('IOS') && erLhcoreClassModelNotificationSubscriber::getCount(array('filter_custom' => array('`chat_id` = ' . (int)$chat->id . ($chat->online_user_id > 0 ? ' OR `online_user_id` = ' . (int)$chat->online_user_id : '')))) == 0) : ?>\r\n                        <li class=\"list-inline-item\"><button <?php if (isset($item['content']['button_id']) && $item['content']['button_id'] != '') : ?>id=\"<?php echo htmlspecialchars($item['content']['button_id'])?>\"<?php endif;?> type=\"button\" <?php if ($disabledButton == true) : ?>disabled=\"disabled\"<?php endif;?> class=\"btn btn-sm btn-outline-primary btn-bot\" <?php if ($disabledButton == false) : ?>data-id=\"<?php echo $messageId?>\" onclick='$(this).attr(\"disabled\",\"disabled\").text(\"Subscribing...\");notificationsLHC.sendNotification();'<?php endif;?>><?php echo htmlspecialchars($item['content']['name'])?></button></li>\r\n                    <?php endif; ?>\r\n                <?php else : ?>\r\n                        <li class=\"list-inline-item\"><button <?php if (isset($item['content']['button_id']) && $item['content']['button_id'] != '') : ?>id=\"<?php echo htmlspecialchars($item['content']['button_id'])?>\"<?php endif;?> type=\"button\" <?php if ($disabledButton == true) : ?>disabled=\"disabled\"<?php endif;?> class=\"btn btn-sm btn-outline-primary btn-bot\" <?php if ($disabledButton == false) : ?>data-payload=<?php echo json_encode($item['content']['payload'])?> data-id=\"<?php echo $messageId?>\" onclick='lhinst.updateChatClicked(<?php echo json_encode($item['content']['payload'])?>,<?php echo $messageId?>,$(this))'<?php endif;?>><?php echo htmlspecialchars($item['content']['name'])?></button></li>\r\n                <?php endif; ?>\r\n            <?php else : ?>\r\n                        <li class=\"list-inline-item\"><button <?php if (isset($item['content']['button_id']) && $item['content']['button_id'] != '') : ?>id=\"<?php echo htmlspecialchars($item['content']['button_id'])?>\"<?php endif;?> type=\"button\" <?php if ($disabledButton == true) : ?>disabled=\"disabled\"<?php endif;?> class=\"btn btn-sm btn-outline-primary btn-bot\" <?php if ($disabledButton == false) : ?>data-payload=<?php echo json_encode($item['content']['payload']. '__' . md5($item['content']['name']))?> data-id=\"<?php echo $messageId?>\" onclick='lhinst.buttonClicked(<?php echo json_encode($item['content']['payload']. '__' . md5($item['content']['name']))?>,<?php echo $messageId?>,$(this))'<?php endif;?>><?php echo htmlspecialchars($item['content']['name'])?></button></li>\r\n            <?php endif?>\r\n    <?php endforeach; ?>\r\n    </ul>\r\n    <?php else : ?>\r\n    <select class=\"form-control form-control-sm mb-2 rounded meta-auto-hide\" data-id=\"<?php echo $messageId?>\" onchange=\"lhinst.dropdownClicked(<?php echo $messageId?>,$(this))\">\r\n        <option><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/lists/search_panel','Please choose')?></option>\r\n        <?php foreach ($metaMessage as $item) : $disabledButton = isset($item['content']['disabled']) && $item['content']['disabled'] == true; ?>\r\n            <?php if ($item['type'] == 'trigger') : ?>\r\n                <option payload-type=\"trigger\" <?php if ($disabledButton == true) : ?>disabled=\"disabled\"<?php endif;?> <?php if ($disabledButton == false) : ?>data-payload=<?php echo json_encode($item['content']['payload']. '__' . md5($item['content']['name']))?> data-id=\"<?php echo $messageId?>\"<?php endif;?> ><?php echo htmlspecialchars($item['content']['name'])?></option>\r\n            <?php elseif ($item['type'] == 'button') : ?>\r\n                <option payload-type=\"payload\" <?php if ($disabledButton == true) : ?>disabled=\"disabled\"<?php endif;?> <?php if ($disabledButton == false) : ?>data-payload=<?php echo json_encode($item['content']['payload']. '__' . md5($item['content']['name']))?> data-id=\"<?php echo $messageId?>\"<?php endif;?> ><?php echo htmlspecialchars($item['content']['name'])?></option>\r\n            <?php endif?>\r\n\r\n        <?php endforeach ?>\r\n    </select>\r\n    <?php endif; ?>\r\n\r\n</div>\r\n\r\n", "<h1 class=\"attr-header\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Notifications settings')?></h1>\r\n\r\n<form action=\"\" method=\"post\" ng-non-bindable>\r\n\r\n    <?php include(erLhcoreClassDesign::designtpl('lhkernel/csfr_token.tpl.php'));?>\r\n\r\n    <?php if (isset($updated) && $updated == 'done') : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/onlineusers','Settings updated'); ?>\r\n        <?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\r\n    <?php endif; ?>\r\n\r\n    <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','For more information see')?> <a target=\"_blank\" href=\"https://developers.google.com/web/fundamentals/push-notifications/display-a-notification\">https://developers.google.com/web/fundamentals/push-notifications/display-a-notification</a></p>\r\n\r\n    <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','You can generate your private and public key here')?> - <a target=\"_blank\" href=\"https://web-push-codelab.glitch.me\">https://web-push-codelab.glitch.me</a></p>\r\n\r\n    <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Explains were taken from:')?> <a target=\"_blank\" href=\"https://web-push-book.gauntface.com/demos/notification-examples/\">https://web-push-book.gauntface.com/demos/notification-examples/</a></p>\r\n\r\n    <p><a href=\"<?php echo erLhcoreClassDesign::baseurl('notifications/downloadworker')?>\"><i class=\"material-icons\">cloud_download</i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Download Service Worker')?></a> - <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','you will have to put this file in your domain root folder.')?></p>\r\n\r\n    <div class=\"form-group\">\r\n        <label><input type=\"checkbox\" value=\"on\" name=\"enabled\" <?php isset($n_settings['enabled']) && ($n_settings['enabled'] == true) ? print 'checked=\"checked\"' : ''?> /> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Enable notifications')?></label><br/>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><input type=\"checkbox\" value=\"on\" name=\"require_interaction\" <?php isset($n_settings['require_interaction']) && ($n_settings['require_interaction'] == true) ? print 'checked=\"checked\"' : ''?> /> Require Interaction</label><br/>\r\n        <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','On desktop, a notification is only displayed for a short period of time. On Android, notifications are shown until the user interacts with it.')?></p>\r\n\r\n        <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','To get the same behaviour on desktop and mobile you can set the \"require-interaction\" option to true, which means the user must click or dismiss the notification.')?></p>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><input type=\"checkbox\" value=\"on\" name=\"renotify\" <?php isset($n_settings['renotify']) && ($n_settings['renotify'] == true) ? print 'checked=\"checked\"' : ''?> /> Renotify</label><br/>\r\n        <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','When you use the tag option, the default behavior of a new notification replacing an existing one is that there is no sound, vibration and the screen is kept asleep.')?></p>\r\n\r\n        <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','With `renotify: true` a new notification will play a sound, vibrate and wake up the users device. This means replacing notifications have the same behavior as a completely new notification.')?></p>\r\n\r\n        <p><i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Note')?>:</i> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','There is no visible affect on desktop, but on mobile, vibration and sound will be affected.')?></p>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Subject*')?></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"subject\" value=\"<?php (isset($n_settings['subject'])) ? print htmlspecialchars($n_settings['subject']) : ''?>\">\r\n        <small><i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','You must provide a subject that is either a mailto: or a URL.')?></i></small>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','HTTP Host*')?></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"http_host\" value=\"<?php (isset($n_settings['http_host']) && !empty($n_settings['http_host'])) ? print htmlspecialchars($n_settings['http_host']) : print $_SERVER['HTTP_HOST']?>\">\r\n        <small><i>You must provide host for notifications images.</i></small>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Default Icon')?></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"icon\" value=\"<?php if (isset($n_settings['icon'])) : ?><?php print htmlspecialchars($n_settings['icon']); else : ?>https://<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/general/logo.png');?><?php endif;?>\">\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Badge Icon')?></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"badge\" value=\"<?php if (isset($n_settings['badge'])) : ?><?php print htmlspecialchars($n_settings['badge']); else : ?>https://<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/general/logo.png');?><?php endif;?>\">\r\n        <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Notification badges are only being used on mobile, at least at the time of writing. It is used to replace the browser icon that is shown by default.')?></p>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Vibrate')?></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"vibrate\" value=\"<?php if (isset($n_settings['vibrate'])) : ?><?php print htmlspecialchars($n_settings['vibrate']); endif ?>\">\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Public key*')?></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"public_key\" value=\"<?php (isset($n_settings['public_key'])) ? print htmlspecialchars($n_settings['public_key']) : ''?>\">\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Private key*')?></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"private_key\" value=\"\">\r\n        <small><i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Private key is not shown after save')?></i></small>\r\n    </div>\r\n\r\n    <input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreOptions\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save'); ?>\" />\r\n\r\n</form>\r\n", "var lhc_QuestionaryPage = function() {\n\tvar self = this;\n\n\tthis.showVotingForm = function() {\n\t\t  var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n   \t\t  this.initial_iframe_url = \"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('questionary/votingwidget')?>/(mode)/embed<?php $theme !== false ? print '/(theme)/'.$theme : ''?>\"+'?URLReferer='+locationCurrent;\n\n   \t\t  this.iframe_html = '<iframe id=\"lhc_sizing_questionary_page\" allowTransparency=\"true\" scrolling=\"no\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"100%\"' +\n                       ' height=\"300\"' +\n                       ' style=\"width: 100%; height: 300px;\"></iframe>';\n\n          document.getElementById('lhc_questionary_embed_container').innerHTML = this.iframe_html;\n    };\n\n    this.handleMessage = function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_questionary_page') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('lhc_sizing_questionary_page');\n    \t\telementObject.height = height;\n    \t\telementObject.style.height = height+'px';\n    \t};\n    };\n\n    this.showVotingForm();\n};\n\nvar lhcQuestionaryPage = new lhc_QuestionaryPage();\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\",function(e){lhcQuestionaryPage.handleMessage(e);});\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\",function(e){lhcQuestionaryPage.handleMessage(e);});\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\",function(e){lhcQuestionaryPage.handleMessage(e);}, false);\n};", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div class=\"row\">\n    <div class=\"col-md-6\">\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label>\n        <select class=\"form-control\" id=\"LocaleID\" ng-non-bindable>\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n    </div>\n    <div class=\"col-md-6\">\n\t   <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label>\n\t\t    <select class=\"form-control\" id=\"HttpMode\">         \n\t\t            <option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t            <option value=\"http:\">http:</option>\n\t\t            <option value=\"https:\">https:</option>      \n\t\t    </select>    \t    \n    </div>\n    <div class=\"col-md-6 end\">\n    \t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label>\n        <select class=\"form-control\" id=\"ThemeID\" ng-non-bindable>\n        \t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n\t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n\t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t</div>\n</div>\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the text area to the page where you want it to be rendered');?></p>\n\n<textarea style=\"width:100%;height:180px;font-size:12px;\" id=\"HMLTContent\" ></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n    \n    var id_tag = <?php include(erLhcoreClassDesign::designtpl('lhquestionary/embedcode_title.tpl.php'));?>+\"\\n\"+'<div id=\"lhc_questionary_embed_container\" ></div>'+\"\\n\\n\"+<?php include(erLhcoreClassDesign::designtpl('lhquestionary/embedcode_title_after.tpl.php'));?>+\"\\n\";\n\t\n    var script = '<script type=\"text/javascript\">'+\"\\n\"+\n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'questionary/embed'+id_theme+'\\';'+\"\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n    $('#HMLTContent').text(id_tag+script);\n};\n$('#LocaleID,#HttpMode,#ThemeID').change(function(){\n    generateEmbedCode();\n});\ngenerateEmbedCode();\n</script>", "<?php\n\n$positionArgument = array (\n\t\t'bottom_left' => array (\n\t\t\t\t'radius' => 'right',\n\t\t\t\t'position' => 'bottom:0;left:0;',\n\t\t\t\t'position_body' => 'bottom:0;left:0;',\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'moz_radius' => 'topright',\n\t\t\t\t'widget_hover' => '',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'chrome_radius' => 'top-right',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-left:0;border-bottom:0;',\n\t\t\t\t'background_position' => '0',\n\t\t\t\t'widget_radius' => '-webkit-border-top-right-radius: 20px;-moz-border-radius-topright: 20px;border-top-right-radius: 20px;',\n\t\t\t\t'posv' => 'b',\n\t\t\t\t'pos' => 'l',\n\t\t),\n\t\t'bottom_right' => array (\n\t\t\t\t'pos' => 'r',\n\t\t\t\t'posv' => 'b',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => 'bottom:0;right:0;',\n\t\t\t\t'position_body' => 'bottom:0;right:0;',\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'moz_radius' => 'topleft',\n\t\t\t\t'widget_hover' => '',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-right:0;border-bottom:0;',\n\t\t\t\t'background_position' => 'left',\n\t\t\t\t'chrome_radius' => 'top-left',\n\t\t\t\t'widget_radius' => '-webkit-border-top-left-radius: 20px;-moz-border-radius-topleft: 20px;border-top-left-radius: 20px;'\n\t\t),\n\t\t'middle_right' => array (\n\t\t\t\t'pos' => 'r',\n\t\t\t\t'posv' => 't',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => \"top:{$top_pos}{$units};right:-155px;\",\n\t\t\t\t'position_body' => \"top:{$top_pos}{$units};right:0px;\",\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'widget_hover' => 'right:0;transition: 1s;',\n\t\t\t\t'moz_radius' => 'topleft',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-right:0;',\n\t\t\t\t'background_position' => '0',\n\t\t\t\t'chrome_radius' => 'top-left',\n\t\t\t\t'widget_radius' => '-webkit-border-top-left-radius: 20px;-moz-border-radius-topleft: 20px;border-top-left-radius: 20px;      -webkit-border-bottom-left-radius: 20px;-moz-border-radius-bottomleft: 20px;border-bottom-left-radius: 20px;'\n\t\t),\n\t\t'middle_left' => array (\n\t\t\t\t'posv' => 't',\n\t\t\t\t'pos' => 'l',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => \"top:{$top_pos}{$units};left:-155px;\",\n\t\t\t\t'position_body' => \"top:{$top_pos}{$units};left:0px;\",\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'padding_text' => '10px 35px 10px 9px',\n\t\t\t\t'widget_hover' => 'left:0;transition: 1s;',\n\t\t\t\t'moz_radius' => 'topright',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-left:0;',\n\t\t\t\t'background_position' => '95%',\n\t\t\t\t'chrome_radius' => 'top-right',\n\t\t\t\t'widget_radius' => '-webkit-border-top-right-radius: 20px;-moz-border-radius-topright: 20px;border-top-right-radius: 20px;      -webkit-border-bottom-right-radius: 20px;-moz-border-radius-bottomright: 20px;border-bottom-right-radius: 20px;'\n\t\t)\n);\n\nif (key_exists($position, $positionArgument)){\n\t$currentPosition = $positionArgument[$position];\n} else {\n\t$currentPosition = $positionArgument['bottom_left'];\n}\n\n?>\n<?php include(erLhcoreClassDesign::designtpl('lhquestionary/getstatus/options_variable.tpl.php')); ?>\n\nvar lhc_Questionary = {\n\tJSON : {\n            parse: window.JSON && (window.JSON.parse || window.JSON.decode) || String.prototype.evalJSON && function(str){return String(str).evalJSON();} || $.parseJSON || $.evalJSON,\n            stringify:  Object.toJSON || window.JSON && (window.JSON.stringify || window.JSON.encode) || $.toJSON\n    },\n    is_dragging : false,\n    offset_data : '',\n\tcookieData : {},\n\taddCss : function(css_content) {\n        var head = document.getElementsByTagName('head')[0];\n        var style = document.createElement('style');\n        style.type = 'text/css';\n\n        if(style.styleSheet) {\n          style.styleSheet.cssText = css_content;\n        } else {\n          rules = document.createTextNode(css_content);\n          style.appendChild(rules);\n        };\n\n        head.appendChild(style);\n   },\n\n   appendHTML : function(htmlStr) {\n        var frag = document.createDocumentFragment(),\n            temp = document.createElement('div');\n        temp.innerHTML = htmlStr;\n        while (temp.firstChild) {\n            frag.appendChild(temp.firstChild);\n        };\n        return frag;\n    },\n\n\tremoveById : function(EId)\n    {\n        return(EObj=document.getElementById(EId))?EObj.parentNode.removeChild(EObj):false;\n    },\n\n    hide : function() {\n        var th = document.getElementsByTagName('head')[0];\n        var s = document.createElement('script');\n        s.setAttribute('type','text/javascript');\n        s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('questionary/votingwidgetclosed')?>');\n        th.appendChild(s);\n        this.removeById('lhc_container_questionary');\n        this.addCookieAttribute('was_opened',true);\n        this.removeCookieAttr('pos');\n    },\n    \n\taddEvent : (function () {\n\t  if (document.addEventListener) {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.addEventListener(type, fn, false);\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lhc_Questionary.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  } else {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.attachEvent('on' + type, function () { return fn.call(el, window.event); });\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lhc_Questionary.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  }\n\t})(),\n\t\n\tshowVotingForm : function() {\n\n   \t\t  this.removeById('lhc_container_questionary');\n\t      var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n   \t\t  this.initial_iframe_url = \"<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('questionary/votingwidget')?>\"+'?URLReferer='+locationCurrent;\n\t\t  \n\t\t  if (window.innerWidth < 1024) {\n          \t\twindow.open(this.initial_iframe_url,\"_blank\");\n          \t\treturn;\n          };\n          \n   \t\t  this.iframe_html = '<iframe id=\"lhcquestionary_iframe\" allowTransparency=\"true\" scrolling=\"no\" class=\"lhc-loading\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"<?php echo $widthwidget?>\"' +\n                       ' height=\"<?php echo $heightwidget?>\"' +\n                       ' style=\"width: <?php echo $widthwidget?>px; height: <?php echo $heightwidget?>px;\"></iframe>';\n\n          this.iframe_html = '<div id=\"lhc_container_questionary\">' +\n                              '<div id=\"lhc_questionary_header\"><?php include(erLhcoreClassDesign::designtpl('lhchat/widget_brand/questionary.tpl.php')); ?><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" id=\"lhc_questionary_close\"><img src=\"<?php if ($theme !== false && $theme->close_image_url != '') : ?><?php echo $theme->close_image_url;?><?php else : ?><?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/cancel.png');?><?php endif;?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" alt=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" /></a></div><div id=\"lhc_iframe_container\">' +\n                              this.iframe_html + '</div></div>';\n\n          raw_css = \"#lhc_container_questionary * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial\\;line-height:100%\\;font-size:12px\\;box-sizing: content-box\\;-moz-box-sizing:content-box;padding:0;margin:0;}\\n#lhc_container_questionary img {border:0;}\\n#lhc_questionary_title{float:left;}\\n#lhc_questionary_header{position:relative;z-index:9990;height:<?php ($theme !== false && $theme->header_height > 0) ? print $theme->header_height : print '15' ?>px;overflow:hidden;background-color:#<?php $theme !== false ? print $theme->header_background : print '525252' ?>;text-align:right;clear:both;padding:<?php ($theme !== false && $theme->header_padding > 0) ? print $theme->header_padding : print '5' ?>px;}\\n#lhc_questionary_close{padding:2px;float:right;}\\n#lhc_questionary_close:hover{opacity:0.4;}\\n#lhc_container_questionary {overflow: hidden;transition-property: height;transition-duration: 0.4s;-webkit-transition: height 0.4s ease-in-out;transition: height 0.4s;background-color:#FFF;z-index:9990;position: fixed;<?php echo $currentPosition['position_body']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-webkit-border-radius: 5px;-moz-border-radius: 5px;border-radius: 5px;-moz-user-select:none; -khtml-user-drag:element;cursor: move;cursor: -moz-grab;cursor: -webkit-grab; }\\n#lhc_container_questionary iframe{position:relative;display:block;transition-property: height;transition-duration: 0.4s;-webkit-transition: height 0.4s ease-in-out;transition: height 0.4s;}\\n#lhc_container_questionary iframe.lhc-loading{\\nbackground: #FFF url(<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/general/loading.gif');?>) no-repeat center center; }#lhc_container_questionary #lhc_iframe_container{border: <?php ($theme !== false && $theme->widget_border_width > 0) ? print $theme->widget_border_width : print '1' ?>px solid #<?php $theme !== false ? print $theme->widget_border_color : print 'cccccc' ?>;border-top: 0;border-bottom-left-radius: 5px;border-bottom-right-radius: 5px;overflow: hidden;}@media only screen and (max-width : 640px) {#lhc_container_questionary{margin-bottom:5px;position:relative;right:0;bottom:0;top:0;}#lhc_container_questionary iframe{width:100% !important}}\";\n\n          if (!this.cssWasAdded) {\n          \t\tthis.cssWasAdded = true;\n          \t\tthis.addCss(raw_css<?php ($theme !== false && $theme->custom_container_css !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_container_css).'\\'' : '' ?>);\n\t\t  };\n\n          var fragment = this.appendHTML(this.iframe_html);\n          document.body.insertBefore(fragment, document.body.childNodes[0]);\n\n          var lhc_obj = this;\n          document.getElementById('lhc_questionary_close').onclick = function() { lhc_obj.hide(); return false; };\n          \n          var domContainer = document.getElementById('lhc_container_questionary');\n          var domIframe = 'lhcquestionary_iframe';\n          var domContainerId = 'lhc_container_questionary';\n\t\t  <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/drag_drop_logic.tpl.php')); ?>\t\n    },\n\n    showStatusWidget : function() {\n       var statusTEXT = '<a id=\"questionary-icon\" class=\"status-icon\" href=\"#\" >'+<?php echo $questionaryOptionsVariable?>.status_text+'</a>';\n       var raw_css = \"#lhc_questionary_container * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial;line-height:100%;font-size:12px;box-sizing: content-box;zoom:1;margin:0;padding:0}\\n#lhc_questionary_container .status-icon{text-decoration:none;font-size:12px;font-weight:bold;color:#<?php $theme !== false ? print $theme->text_color : print '000' ?>;display:block;padding:<?php echo $currentPosition['padding_text']?>;background:url('<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('images/icons/plant.png');?>') no-repeat <?php echo $currentPosition['background_position']?> center}\\n#lhc_questionary_container:hover{<?php echo $currentPosition['widget_hover']?>}\\n#lhc_questionary_container{box-sizing: content-box;<?php echo $currentPosition['widget_radius']?>-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);<?php echo $currentPosition['border_widget']?>;padding:5px 0px 3px 5px;width:190px;font-family:arial;font-size:12px;transition: 1s;position:fixed;<?php echo $currentPosition['position']?>;background-color:#<?php $theme !== false ? print $theme->onl_bcolor : print 'f6f6f6' ?>;z-index:9989;}\\n<?php if ($noresponse == false) : ?>@media only screen and (max-width : 640px) {#lhc_questionary_container{position:relative;top:0;right:0;bottom:0;left:0;width:auto;border-radius:2px;box-shadow:none;border:1px solid #e3e3e3;margin-bottom:5px;}}\\n<?php endif;?>\";\n       this.addCss(raw_css<?php ($theme !== false && $theme->custom_status_css !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_status_css).'\\'' : '' ?>);\n       var htmlStatus = '<div id=\"lhc_questionary_container\">'+statusTEXT+'</div>';\n       var fragment = this.appendHTML(htmlStatus);\n       document.body.insertBefore(fragment, document.body.childNodes[0]);\n       var inst = this;\n       document.getElementById('questionary-icon').onclick = function() { inst.showVotingForm(); return false; };\n   },\n\n   handleMessage : function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_questionary') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('lhcquestionary_iframe');\n    \t\tvar iframeContainer = document.getElementById('lhc_container_questionary');\n    \t\telementObject.height = height;\n    \t\telementObject.style.height = height+'px';\n    \t\tiframeContainer.className = iframeContainer.className;    \t\t\n    \t};\n   },\n\n   removeCookieAttr : function(attr){\n    \tif (this.cookieData[attr]) {\n    \t\tdelete this.cookieData[attr];\n    \t\tthis.storeSesCookie();\n    \t}\n   },\n\n   storeSesCookie : function(){\n    \tif (sessionStorage) {\n    \t\tsessionStorage.setItem('lhc_vb',this.JSON.stringify(this.cookieData));\n    \t}\n   },\n\n   initSessionStorage : function(){\n    \tif (sessionStorage && sessionStorage.getItem('lhc_vb')) {\n    \t\tthis.cookieData = this.JSON.parse(sessionStorage.getItem('lhc_vb'));\n    \t}\n   },\n\n   addCookieAttribute : function(attr, value){\n    \tif (!this.cookieData[attr] || this.cookieData[attr] != value){\n\t    \tthis.cookieData[attr] = value;\n\t    \tthis.storeSesCookie();\n    \t}\n   }\n};\n\nlhc_Questionary.initSessionStorage();\nlhc_Questionary.showStatusWidget();\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\",function(e){lhc_Questionary.handleMessage(e);});\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\",function(e){lhc_Questionary.handleMessage(e);});\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\",function(e){lhc_Questionary.handleMessage(e);}, false);\n};\n\n<?php if ($expand == 'true') : ?>\nif (!lhc_Questionary.cookieData.was_opened) {\n\tif (window.innerWidth > 1023) {\n\t\tlhc_Questionary.showVotingForm();\n\t};\n};\n<?php endif;?>\n", "<h1 class=\"attr-header\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div class=\"row\">\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Status text');?></label> <input type=\"text\" class=\"form-control\" id=\"id_status_text\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Help us to grow');?>\" />\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label for=\"id_show_widget_on_open\"><input type=\"checkbox\" id=\"id_show_widget_on_open\" value=\"on\"> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Expand the widget automatically for new users');?></label>\n\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"row\">\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position from the top, only used if the Middle left or the Middle right side is chosen');?></label>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-8 columns\">\n\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"id_top_text\" value=\"400\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-4 columns\">\n\t\t\t\t\t<select id=\"UnitsTop\" class=\"form-control\">\n\t\t\t\t\t\t<option value=\"pixels\">Pixels</option>\n\t\t\t\t\t\t<option value=\"percents\">Percents</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Size');?></label>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<input type=\"text\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Width')?>\" id=\"id_width_text\" value=\"300\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<input type=\"text\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Height')?>\" id=\"id_height_text\" value=\"300\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select id=\"LocaleID\" class=\"form-control\">\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position');?></label> <select id=\"PositionID\" class=\"form-control\">\n\t\t\t\t<option value=\"bottom_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom right corner of the screen');?></option>\n\t\t\t\t<option value=\"bottom_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom left corner of the screen');?></option>\n\t\t\t\t<option value=\"middle_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle right side of the screen');?></option>\n\t\t\t\t<option value=\"middle_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle left side of the screen');?></option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><input type=\"checkbox\" id=\"id_disable_responsive\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Disable responsive layout for status widget.');?></label>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select id=\"HttpMode\" class=\"form-control\">\n\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6 end\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select id=\"ThemeID\" class=\"form-control\">\n\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n\t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n\t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t\t</div>\n\t</div>\n</div>\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Copy the code from the text area to the footer, before the closing &lt;/body&gt; tag');?></p>\n<textarea style=\"width: 100%; height: 180px; font-size: 12px;\" id=\"HMLTContent\"></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var id_position =  '/(position)/'+$('#PositionID').val();\n    var id_show_widget_on_open = $('#id_show_widget_on_open').is(':checked') ? '/(expand)/true' : '';\n\tvar textStatus = $('#id_status_text').val();\n\tvar top = '/(top)/'+($('#id_top_text').val() == '' ? 400 : $('#id_top_text').val());\n\tvar topposition = '/(units)/'+$('#UnitsTop').val();\n\tvar widthwidget = '/(width)/'+($('#id_width_text').val() == '' ? 300 : $('#id_width_text').val());\n\tvar heightwidget = '/(height)/'+($('#id_height_text').val() == '' ? 300 : $('#id_height_text').val());\n\tvar id_disable_responsive = $('#id_disable_responsive').is(':checked') ? '/(noresponse)/true' : '';\n\tvar id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n\t\n\t<?php include(erLhcoreClassDesign::designtpl('lhquestionary/getstatus/options_variable.tpl.php')); ?>\n\t\n    var script = '<script type=\"text/javascript\">'+\"\\nvar <?php echo $questionaryOptionsVariable?> = {status_text:'\"+textStatus+\"'};\\n\"+\n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'questionary/getstatus'+id_position+id_disable_responsive+id_show_widget_on_open+top+topposition+widthwidget+id_theme+heightwidget+\"';\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n    $('#HMLTContent').text(script);\n};\n$('#LocaleID,#PositionID,#id_show_widget_on_open,#id_disable_responsive,#id_status_text,#UnitsTop,#id_top_text,#id_width_text,#id_height_text,#HttpMode,#ThemeID').change(function(){\n    generateEmbedCode();\n});\ngenerateEmbedCode();\n</script>", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div role=\"tabpanel\" ng-non-bindable>\n\n\t<!-- Nav tabs -->\n\t<ul class=\"nav nav-tabs\" role=\"tablist\">\n\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"active nav-link\" href=\"#general\" aria-controls=\"general\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','General');?></a></li>\n\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#design\" aria-controls=\"design\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Design');?></a></li>\n\t\t<?php include(erLhcoreClassDesign::designtpl('lhsystem/embed_tab_multiinclude.tpl.php'));?>\n\t</ul>\n\n\t<!-- Tab panes -->\n\t<div class=\"tab-content\">\n\t\t<div role=\"tabpanel\" class=\"tab-pane active\" id=\"general\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<label><input type=\"checkbox\" id=\"id_hide_then_offline\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Hide status when offline');?></label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<label><input type=\"checkbox\" id=\"id_show_leave_form\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Show a \u2018leave a message form\u2019 when there are no online operators');?></label>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"col-md-6\">\n\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select id=\"LocaleID\" class=\"form-control\">\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-6 end\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select id=\"HttpMode\" class=\"form-control\">\n\t\t\t\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Department')?></label> <select id=\"DepartmentID\" multiple=\"multiple\" size=\"5\" class=\"form-control\">\n\t\t\t\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Any');?></option>\n\t\t\t<?php foreach (erLhcoreClassModelDepartament::getList($departmentParams) as $departament) : ?>\n\t\t\t    <option value=\"<?php echo $departament->id?>\"><?php echo htmlspecialchars($departament->name)?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n                <?php include(erLhcoreClassDesign::designtpl('lhsystem/embed_tab_operator.tpl.php'));?>\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div role=\"tabpanel\" class=\"tab-pane\" id=\"design\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select id=\"ThemeID\" class=\"form-control\">\n\t\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n        \t\t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n        \t\t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n        \t\t\t\t<?php endforeach; ?>\n        \t    </select>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<?php include(erLhcoreClassDesign::designtpl('lhsystem/embed_tab_content_multiinclude.tpl.php'));?>\n\n\t</div>\n</div>\n\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the text area to the page where you want your status to appear');?></p>\n<textarea style=\"width: 100%; height: 180px; font-size: 12px;\" id=\"HMLTContent\"><?php echo htmlspecialchars('<script type=\"text/javascript\" src=\"//'.$_SERVER['HTTP_HOST'].erLhcoreClassDesign::baseurl('chat/getstatus').'\"></script>')?></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\nfunction generateEmbedCode() {\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var id_hide_then_offline = $('#id_hide_then_offline').is(':checked') ? '/(hide_offline)/true' : '';\n    var id_show_leave_form = $('#id_show_leave_form').is(':checked') ? '/(leaveamessage)/true' : '';\n    var id_department = $('#DepartmentID').val() && $('#DepartmentID').val().length > 0 && $('#DepartmentID').val().join('/') != '0' ? '/(department)/'+$('#DepartmentID').val().join('/') : '';\n    var id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n    var id_operator = $('#id_operator').val() > 0 ? '/(operator)/'+$('#id_operator').val() : '';\n    \n    var id_tag =  <?php include(erLhcoreClassDesign::designtpl('lhsystem/embedcode_title.tpl.php'));?>+\"\\n\"+\n        '<div id=\"lhc_status_container_page\" ></div>'+\"\\n\\n\"+<?php include(erLhcoreClassDesign::designtpl('lhsystem/embedcode_title_after.tpl.php'));?>+\"\\n\";\n\n    var uaArguments = '';\n        \n    <?php include(erLhcoreClassDesign::designtpl('lhsystem/embedcode_custom_generation_multiinclude.tpl.php'));?>\n\n    if (uaArguments != '') {\n    \tuaArguments = '/(ua)'+uaArguments;\n    }\n    \n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/options_variable_page.tpl.php')); ?>\n    \n    var script = '<script type=\"text/javascript\">'+\"\\n\"+\"var <?php echo $chatOptionsVariablePage?> = {'height':300,'mobile':false};\\n\"+\n      '<?php echo $chatOptionsVariablePage?>.opt = {};\\n'+\n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'var referrer = (document.referrer) ? encodeURIComponent(document.referrer.substr(document.referrer.indexOf(\\'://\\')+1)) : \\'\\';'+\"\\n\"+\n        'var location  = (document.location) ? encodeURIComponent(window.location.href.substring(window.location.protocol.length)) : \\'\\';'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'chat/getstatusembed<?php isset($userArgument) ? print $userArgument : ''?>'+uaArguments+id_hide_then_offline+id_theme+id_operator+id_show_leave_form+id_department+'?r=\\'+referrer+\\'&l=\\'+location;'+\"\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n\n    $('#HMLTContent').text(id_tag+script);\n};\n\n$('#LocaleID,#id_show_leave_form,#DepartmentID,#HttpMode,#ThemeID,#id_operator,#id_hide_then_offline').change(function(){\n    generateEmbedCode();\n});\n\ngenerateEmbedCode();\n\n</script>", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div role=\"tabpanel\" ng-non-bindable>\n\n\t<!-- Nav tabs -->\n\t<ul class=\"nav nav-tabs\" role=\"tablist\">\n\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"active nav-link\" href=\"#general\" aria-controls=\"general\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','General');?></a></li>\n\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#design\" aria-controls=\"design\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Design');?></a></li>\n\t\t<?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_tab_multiinclude.tpl.php'));?>\n\t</ul>\n\n\t<!-- Tab panes -->\n\t<div class=\"tab-content\">\n\t\t<div role=\"tabpanel\" class=\"tab-pane active\" id=\"general\">\t\t\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-6\">\n    \t\t\t<div>\n    \t\t\t\t<label><input type=\"checkbox\" id=\"id_internal_popup\" checked=\"checked\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Show the page widget when a mouse is clicked');?></label>\n    \t\t\t</div>        \t\t\t\n\t\t\t</div>\n\t\t\t<div class=\"col-md-6\">\n    \t\t\t<div>\n    \t\t\t\t<label><input type=\"checkbox\" id=\"id_hide_then_offline\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Hide status when offline');?></label>\n    \t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"col-md-6\">\n    \t\t\t<div>\n    \t\t\t\t<label><input type=\"checkbox\" id=\"id_show_leave_form\" checked=\"checked\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Show a \u2018leave a message form\u2019 when there are no online operators');?></label>\n    \t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-6\">\n    \t\t\t<div>\n    \t\t\t     <label><input type=\"checkbox\" id=\"id_disable_pro_active_invitations\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Disable proactive invitations');?></label>\n    \t\t\t</div>\n\t\t\t</div>\t\t\n\t\t\t<div class=\"col-md-6\">\t\n    \t\t\t<div>\n    \t\t\t\t<label><input type=\"checkbox\" id=\"id_disable_online_tracking\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Disable online tracking (this overrides the system configuration)');?></label>\n    \t\t\t</div>\n\t\t\t</div>\n            <div class=\"col-md-6\">\n    \t\t\t<div>\n    \t\t\t\t<label><input type=\"checkbox\" id=\"id_disable_subdomain\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Cookie is valid only for domain where javascript embedded (excludes subdomains)');?></label>\n    \t\t\t</div>\n\t\t\t</div>\n\t\t</div>\t\n\t\t\t<hr>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','For what domain you are generating embed code?');?></label> <input type=\"text\" class=\"form-control\" id=\"id_embed_domain\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','example.com');?>\" value=\"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select id=\"HttpMode\" class=\"form-control\">\n\t\t\t\t\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Department')?></label> \n\t\t\t\t\t\t\t<select id=\"DepartmentID\" multiple=\"multiple\" size=\"5\" class=\"form-control\">\n\t\t\t\t\t\t\t\t   <option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Any');?></option>\n                    \t\t\t<?php foreach (erLhcoreClassModelDepartament::getList($departmentParams) as $departament) : ?>\n                    \t\t\t   <option value=\"<?php echo $departament->id?>\"><?php echo htmlspecialchars($departament->name)?></option>\n                    \t\t\t<?php endforeach; ?>\n                    \t\t</select>\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select id=\"LocaleID\" class=\"form-control\">\n                                <?php foreach ($locales as $locale ) : ?>\n                                <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n                                <?php endforeach; ?>\n                            </select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<label><input type=\"checkbox\" id=\"DetectLanguage\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Try to detect language automatically');?></label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t  <div class=\"col-md-6\">\n\t\t\t\t\t\t        <div class=\"form-group\">\n        \t\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Operator ID')?></label> <input type=\"text\" class=\"form-control\" id=\"id_operator\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','To what operator chat should be assigned automatically?')?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','To what operator chat should be assigned automatically?')?>\" value=\"\" />\n        \t\t\t\t\t\t</div>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t  <div class=\"col-md-6\">\n\t\t\t\t\t\t        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Survey at the end of chat')?></label> \n\t\t\t\t\t\t        <?php echo erLhcoreClassRenderHelper::renderCombobox( array (\n            \t\t                    'input_name'     => 'Survey',\n            \t\t                    'optional_field' => erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','no survey'),\n            \t\t                    'selected_id'    => 0,\n            \t\t                    'css_class'     => 'form-control',\n            \t\t                    'list_function'  => 'erLhAbstractModelSurvey::getList'\n            \t\t            )); ?>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<?php if (erLhcoreClassModelChatConfig::fetch('product_enabled_module')->current_value == 1) : ?>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t    <div class=\"col-md-6\">\n    \t\t\t\t    <div class=\"form-group\">\n        \t\t\t\t    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Product')?></label> \n        \t\t\t\t\t<?php echo erLhcoreClassRenderHelper::renderCombobox( array (\n                                    'input_name'     => 'product_id',                    \t\t\t\t\n                                    'selected_id'    =>  0,\n                    \t            'css_class'      => 'form-control',\n                    \t            'display_name'   => 'name_department',\n                    \t            'multiple'       => true,\n                                    'list_function'  => 'erLhAbstractModelProduct::getList'\n                            )); ?>\n        \t\t\t\t</div>\n    \t\t\t\t</div>\t\t\t\t    \n\t\t\t\t</div>\n\t\t\t\t<?php endif;?>\n\t\t</div>\n\n\t\t<div role=\"tabpanel\" class=\"tab-pane\" id=\"design\">\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Minimize action, applies only if status widget is at the bottom');?></label> <select id=\"MinimizeID\" class=\"form-control\">\n\t\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Keep where it was');?></option>\n\t\t\t\t\t<option value=\"br\" selected=\"selected\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Minimize to bottom of the screen');?></option>\n\t\t\t\t</select>\n\t\t\t</div>\n\n\n\t\t\t<div class=\"row\">\n\t\t\t\t\n\t\t\t\t<div class=\"col-md-6\">\n    \t\t\t\t<div class=\"form-group\">\n        \t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position');?></label> <select id=\"PositionID\" class=\"form-control\">\n        \t\t\t\t\t<option value=\"original\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Native placement - it will be shown where the html is embedded');?></option>\n        \t\t\t\t\t<option value=\"bottom_right\" selected=\"selected\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom right corner of the screen');?></option>\n        \t\t\t\t\t<option value=\"bottom_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom left corner of the screen');?></option>\n        \t\t\t\t\t<option value=\"middle_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle right side of the screen');?></option>\n        \t\t\t\t\t<option value=\"middle_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle left side of the screen');?></option>\n        \t\t\t\t\t<option value=\"api\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Invisible, only JS API will be included');?></option>\n        \t\t\t\t\t<option value=\"full_height_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Full height right');?></option>\n        \t\t\t\t\t<option value=\"full_height_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Full height left');?></option>\n        \t\t\t\t</select>\n        \t\t\t</div>\n    \t\t\t</div>\n    \t\t\t\n    \t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select id=\"ThemeID\" class=\"form-control\">\n\t\t\t\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n        \t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n        \t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n        \t\t\t<?php endforeach; ?>\n        \t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup window width')?></label> <input type=\"text\" class=\"form-control\" id=\"id_popup_width\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup window width in pixels')?>\" value=\"500\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-2\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Height')?></label> <input type=\"text\" class=\"form-control\" id=\"id_popup_height\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup window height in pixels')?>\" value=\"520\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget width')?></label> <input type=\"text\" class=\"form-control\" id=\"id_widget_width\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget width in pixels')?>\" value=\"300\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-2\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Height')?></label> <input type=\"text\" class=\"form-control\" id=\"id_widget_height\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget height in pixels')?>\" value=\"340\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position from the top, only used if the middle left or the middle right side is chosen');?></label>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-md-8\">\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"id_top_text\" value=\"350\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t\t<select id=\"UnitsTop\" class=\"form-control\">\n\t\t\t\t\t\t\t<option value=\"pixels\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Pixels');?></option>\n\t\t\t\t\t\t\t<option value=\"percents\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Percentage');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Identifier \u2013 enter a unique identifier here. This is useful for separating messages and proactive chat invitations from different domains/web pages. Enter a string without special characters or spaces such as \u201chomepage\u201d or \u201cwebsite1\u201d.');?></label> <input type=\"text\" class=\"form-control\" id=\"id_site_identifier\" maxlength=\"50\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Leave empty if it is not important to you');?>\" value=\"\" />\n\t\t\t</div>\n\n\t\t</div>\n\t\t\n\t\t<?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_tab_content_multiinclude.tpl.php'));?>\n\t\t\n\t</div>\n</div>\n\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the text area to the page where you want your status to appear');?></p>\n<textarea style=\"width: 100%; height: 200px; font-size: 11px;\" class=\"form-control\" id=\"HMLTContent\"><?php echo htmlspecialchars('<script type=\"text/javascript\" src=\"http://'.$_SERVER['HTTP_HOST'].erLhcoreClassDesign::baseurl('chat/getstatus').'\"></script>')?></textarea>\n\n<script type=\"text/javascript\">\n\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var id_internal_popup = $('#id_internal_popup').is(':checked') ? '/(click)/internal' : '';\n    var id_disable_online_tracking = $('#id_disable_online_tracking').is(':checked') ? '/(dot)/true' : '';\n    \n    var id_show_leave_form = $('#id_show_leave_form').is(':checked') ? '/(leaveamessage)/true' : '';\n    var id_hide_then_offline = $('#id_hide_then_offline').is(':checked') ? '/(hide_offline)/true' : '';\n    var id_check_operator_message = $('#id_check_operator_message').is(':checked') ? '/(check_operator_messages)/true' : '';\n    var id_disable_pro_active_invitations = $('#id_disable_pro_active_invitations').is(':checked') ? '/(disable_pro_active)/true' : '';\n    var id_department = $('#DepartmentID').val() && $('#DepartmentID').val().length > 0 && $('#DepartmentID').val().join('/') != '0' ? '/(department)/'+$('#DepartmentID').val().join('/') : '';\n    var id_product = $('#id_product_id').val() && $('#id_product_id').val().length > 0 && $('#id_product_id').val().join('/') != '0' ? '/(prod)/'+$('#id_product_id').val().join('/') : '';\n    \n    var id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n    var id_identifier = $('#id_site_identifier').val() != '' ? '/(identifier)/'+$('#id_site_identifier').val() : '';\n    var id_ma = $('#MinimizeID').val() != '' ? '/(ma)/'+$('#MinimizeID').val() : '';\n    var id_operator = $('#id_operator').val() > 0 ? '/(operator)/'+$('#id_operator').val() : '';\n    var id_survey = $('#id_Survey').val() > 0 ? '/(survey)/'+$('#id_Survey').val() : '';\n    \n\n    var id_position =  '/(position)/'+$('#PositionID').val();\n   \n    var id_tag = '';\n    var top = '/(top)/'+($('#id_top_text').val() == '' ? 350 : $('#id_top_text').val());\n\tvar topposition = '/(units)/'+$('#UnitsTop').val();\n\n    if ($('#PositionID').val() == 'original'){\n        id_tag = <?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_title.tpl.php'));?>+\"\\n\"+\n        '<div id=\"lhc_status_container\" ></div>'+\"\\n\\n\"+<?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_title_after.tpl.php'));?>+\"\\n\";\n    };\n    \n    var id_embed_domain = $('#id_embed_domain').val() != '' ? ',domain:\\''+$('#id_embed_domain').val()+'\\'' : '';\n\n    if (id_embed_domain.indexOf('://') != -1) {\n        alert(<?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Please do not enter protocol, only domain name is required'),ENT_QUOTES))?>);\n        return;\n    };\n\n    var id_disable_subdomain =  $('#id_disable_subdomain').is(':checked') ? ',subdomain:true' : '';\n\n    var uaArguments = '';\n    \n    <?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_custom_generation_multiinclude.tpl.php'));?>\n\n    if (uaArguments != '') {\n    \tuaArguments = '/(ua)'+uaArguments;\n    }\n    \n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/options_variable.tpl.php')); ?>\n\n    var id_detect_language = $('#DetectLanguage').is(':checked') ? true : false;\n\n    var langDetectScript = '';\n\n    if (id_detect_language == true) {\n    \tlangDetectScript = \"var _l = '';\"+\n\t\t\"var _m = document.getElementsByTagName('meta');\"+   \n        \"var _cl = '';\"+\n        \"for (i=0; i < _m.length; i++) {if ( _m[i].getAttribute('http-equiv') == 'content-language' ) {_cl = _m[i].getAttribute('content');}}\"+\n        \"if (document.documentElement.lang != '') _l = document.documentElement.lang;\"+\n        \"if (_cl != '' && _cl != _l) _l = _cl;\"+\n        \"if (_l == undefined || _l == '') {_l = '\" + siteAccess + \"';\"+\n        \"} else {_l = _l[0].toLowerCase() + _l[1].toLowerCase(); if ('<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' )?>' == _l) {_l = ''} else {_l = _l + '/';}}\\n\";\n    }\n\n    var script = '<script type=\"text/javascript\">'+\"\\n\"+\"var <?php echo $chatOptionsVariable?> = {};\\n\"+\n      '<?php echo $chatOptionsVariable?>.opt = {widget_height:'+$('#id_widget_height').val()+',widget_width:'+$('#id_widget_width').val()+',popup_height:'+$('#id_popup_height').val()+',popup_width:'+$('#id_popup_width').val()+id_embed_domain+id_disable_subdomain+'};\\n'+\n      '(function() {'+\"\\n\"+langDetectScript+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'var referrer = (document.referrer) ? encodeURIComponent(document.referrer.substr(document.referrer.indexOf(\\'://\\')+1)) : \\'\\';'+\"\\n\"+\n        'var location  = (document.location) ? encodeURIComponent(window.location.href.substring(window.location.protocol.length)) : \\'\\';'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect()?>'+(id_detect_language == false ? siteAccess : '\\'+_l+\\'')+'chat/getstatus<?php isset($userArgument) ? print $userArgument : ''?>'+uaArguments+id_internal_popup+id_position+id_ma+id_hide_then_offline+id_disable_online_tracking+id_check_operator_message+top+topposition+id_show_leave_form+id_department+id_operator+id_identifier+id_disable_pro_active_invitations+id_theme+id_product+id_survey+'?r=\\'+referrer+\\'&l=\\'+location;'+\"\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n\n    $('#HMLTContent').text(id_tag+script);\n};\n\n$('#id_disable_subdomain,#LocaleID,#id_embed_domain,#DetectLanguage,#id_product_id,#id_disable_online_tracking,#MinimizeID,#id_operator,#DepartmentID,#HttpMode,#ThemeID,#id_Survey,#id_disable_pro_active_invitations,#id_site_identifier,#id_internal_popup,#id_position_bottom,#PositionID,#id_show_leave_form,#id_hide_then_offline,#id_check_operator_message,#UnitsTop,#id_top_text,#id_popup_width,#id_popup_height,#id_widget_width,#id_widget_height').change(function(){\n    generateEmbedCode();\n});\n\ngenerateEmbedCode();\n\n</script>", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div role=\"tabpanel\" ng-non-bindable>\n\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs\" role=\"tablist\">\n        <li role=\"presentation\" class=\"nav-item\"><a class=\"active nav-link\" href=\"#general\" aria-controls=\"general\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','General');?></a></li>\n        <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#design\" aria-controls=\"design\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Design');?></a></li>\n        <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#staticimage\" aria-controls=\"design\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Static image');?></a></li>\n        <?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_tab_multiinclude.tpl.php'));?>\n    </ul>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div role=\"tabpanel\" class=\"tab-pane active pt-2\" id=\"general\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div>\n                        <label><input type=\"checkbox\" id=\"id_fresh\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','On each refresh start a new chat. Users will loose chat session browsing through pages! Usefull in embed mode.');?></label>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div>\n                        <label><input type=\"checkbox\" id=\"id_show_leave_form\" checked=\"checked\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Show a \u2018leave a message form\u2019 when there are no online operators');?></label>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div>\n                        <label><input type=\"checkbox\" id=\"id_check_messages_operator\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Check for operator invitation messages. If you are planning to send messages to online visitors manually you can check this.');?></label>\n                    </div>\n                </div>\n\n                <div class=\"col-md-6\">\n                    <div>\n                        <label><input type=\"checkbox\" id=\"id_disable_pro_active_invitations\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Disable proactive invitations');?></label>\n                    </div>\n                </div>\n\n            </div>\n            <hr>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','For what domain you are generating embed code?');?></label> <input type=\"text\" class=\"form-control\" id=\"id_embed_domain\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','example.com');?>\" value=\"\" />\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Department')?></label>\n                        <select id=\"DepartmentID\" multiple=\"multiple\" size=\"5\" class=\"form-control\">\n                            <option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Any');?></option>\n                            <?php foreach (erLhcoreClassModelDepartament::getList($departmentParams) as $departament) : ?>\n                                <option value=\"<?php echo $departament->alias != '' ? htmlspecialchars($departament->alias) : $departament->id?>\"><?php echo htmlspecialchars($departament->name)?></option>\n                            <?php endforeach; ?>\n                        </select>\n                    </div>\n\n                </div>\n\n                <div class=\"col-md-6\">\n                    <?php /*<div>\n                        <label><input type=\"checkbox\" id=\"id_internal_popup\" checked=\"checked\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Show the page widget when a mouse is clicked');?></label>\n                    </div>*/ ?>\n\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget embed/click mode');?></label>\n                    <select id=\"id_widget_mode\" class=\"form-control\">\n                        <option value=\"widget\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','widget (default)');?></option>\n                        <option value=\"embed\">embed</option>\n                        <option value=\"popup\">popup</option>\n                    </select>\n\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget position');?></label>\n                    <select id=\"id_widget_position\" class=\"form-control\">\n                        <option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n                        <option value=\"api\">api</option>\n                    </select>\n\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget position placement.');?></label>\n                    <select id=\"id_position_placement\" class=\"form-control\">\n                        <option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom right');?></option>\n                        <option value=\"bottom_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom left');?></option>\n                        <option value=\"middle_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle right');?></option>\n                        <option value=\"middle_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle left');?></option>\n                        <option value=\"full_height_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom right, full height');?></option>\n                        <option value=\"full_height_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom left, full height');?></option>\n                    </select>\n                </div>\n\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select id=\"HttpMode\" class=\"form-control\">\n                            <option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n                            <option value=\"http:\">http:</option>\n                            <option value=\"https:\">https:</option>\n                        </select>\n                    </div>\n                </div>\n\n\n                <div class=\"col-md-12\">\n\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <div class=\"form-group\">\n                                <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select id=\"LocaleID\" class=\"form-control\">\n                                    <?php foreach ($locales as $locale ) : ?>\n                                        <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n                                    <?php endforeach; ?>\n                                </select>\n                            </div>\n                            <div class=\"form-group\">\n                                <label><input type=\"checkbox\" id=\"DetectLanguage\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Try to detect language automatically');?></label>\n                            </div>\n                        </div>\n                        <div class=\"col-6\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Operator ID')?></label> <input type=\"text\" class=\"form-control\" id=\"id_operator\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','To what operator chat should be assigned automatically?')?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','To what operator chat should be assigned automatically?')?>\" value=\"\" />\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Survey at the end of chat')?></label>\n                                    <?php echo erLhcoreClassRenderHelper::renderCombobox( array (\n                                        'input_name'     => 'Survey',\n                                        'optional_field' => erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','no survey'),\n                                        'selected_id'    => 0,\n                                        'css_class'     => 'form-control',\n                                        'list_function'  => 'erLhAbstractModelSurvey::getList'\n                                    )); ?>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <?php if (erLhcoreClassModelChatConfig::fetch('product_enabled_module')->current_value == 1) : ?>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Product')?></label>\n                            <?php echo erLhcoreClassRenderHelper::renderCombobox( array (\n                                'input_name'     => 'product_id',\n                                'selected_id'    =>  0,\n                                'css_class'      => 'form-control',\n                                'display_name'   => 'name_department',\n                                'multiple'       => true,\n                                'list_function'  => 'erLhAbstractModelProduct::getList'\n                            )); ?>\n                        </div>\n                    </div>\n                </div>\n            <?php endif;?>\n        </div>\n\n        <div role=\"tabpanel\" class=\"tab-pane\" id=\"design\">\n\n            <?php /*<div class=\"form-group\">\n                <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Minimize action, applies only if status widget is at the bottom');?></label> <select id=\"MinimizeID\" class=\"form-control\">\n                    <option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Keep where it was');?></option>\n                    <option value=\"br\" selected=\"selected\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Minimize to bottom of the screen');?></option>\n                </select>\n            </div>*/ ?>\n\n\n            <div class=\"row\">\n\n                <?php /*<div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position');?></label> <select id=\"PositionID\" class=\"form-control\">\n                            <option value=\"original\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Native placement - it will be shown where the html is embedded');?></option>\n                            <option value=\"bottom_right\" selected=\"selected\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom right corner of the screen');?></option>\n                            <option value=\"bottom_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom left corner of the screen');?></option>\n                            <option value=\"middle_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle right side of the screen');?></option>\n                            <option value=\"middle_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle left side of the screen');?></option>\n                            <option value=\"api\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Invisible, only JS API will be included');?></option>\n                            <option value=\"full_height_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Full height right');?></option>\n                            <option value=\"full_height_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Full height left');?></option>\n                        </select>\n                    </div>\n                </div>*/ ?>\n\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select id=\"ThemeID\" class=\"form-control\">\n                            <option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n                            <?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n                                <option value=\"<?php echo $theme->alias != '' ? htmlspecialchars($theme->alias) : $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n                            <?php endforeach; ?>\n                        </select>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"form-group\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup window width')?></label> <input type=\"text\" class=\"form-control\" id=\"id_popup_width\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup window width in pixels')?>\" value=\"500\" />\n                    </div>\n                    <div class=\"col-md-2\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Height')?></label> <input type=\"text\" class=\"form-control\" id=\"id_popup_height\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup window height in pixels')?>\" value=\"520\" />\n                    </div>\n                    <div class=\"col-md-4\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget width')?></label> <input type=\"text\" class=\"form-control\" id=\"id_widget_width\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget width in pixels')?>\" value=\"350\" />\n                    </div>\n                    <div class=\"col-md-2\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Height')?></label> <input type=\"text\" class=\"form-control\" id=\"id_widget_height\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget height in pixels')?>\" value=\"450\" />\n                    </div>\n                </div>\n            </div>\n\n            <?php /*<div class=\"form-group\">\n                <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position from the top, only used if the middle left or the middle right side is chosen');?></label>\n                <div class=\"row\">\n                    <div class=\"col-md-8\">\n                        <input type=\"text\" class=\"form-control\" id=\"id_top_text\" value=\"350\" />\n                    </div>\n                    <div class=\"col-md-4\">\n                        <select id=\"UnitsTop\" class=\"form-control\">\n                            <option value=\"pixels\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Pixels');?></option>\n                            <option value=\"percents\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Percentage');?></option>\n                        </select>\n                    </div>\n                </div>\n            </div>*/ ?>\n\n\n            <div class=\"form-group\">\n                <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Identifier \u2013 enter a unique identifier here. This is useful for separating messages and proactive chat invitations from different domains/web pages. Enter a string without special characters or spaces such as \u201chomepage\u201d or \u201cwebsite1\u201d.');?></label> <input type=\"text\" class=\"form-control\" id=\"id_site_identifier\" maxlength=\"50\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Leave empty if it is not important to you');?>\" value=\"\" />\n            </div>\n\n        </div>\n\n        <div role=\"tabpanel\" class=\"tab-pane\" id=\"staticimage\">\n            <div class=\"row\">\n                <div class=\"col-6\">\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Online status text')?></label>\n                        <input type=\"text\" class=\"form-control\" id=\"OnlineTextStatic\" value=\"I'm online\" />\n                    </div>\n                </div>\n                <div class=\"col-6\">\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Offline status text. If you lave empty we will return empty image.')?></label>\n                        <input type=\"text\" class=\"form-control\" id=\"OfflineTextStatic\" value=\"I'm offline\" />\n                    </div>\n                </div>\n                <div class=\"col-6\">\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Width')?></label>\n                        <input type=\"text\" class=\"form-control\" id=\"OnlineImageWidth\" value=\"200\" />\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Sample image')?></label><br/>\n                <img id=\"static-image-url\" src=\"<?php echo erLhcoreClassDesign::baseurl('restapi/onlineimage')?>\">\n            </div>\n\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Source code with a link')?></label>\n            <textarea class=\"form-control form-control\" style=\"font-size: 12px;\" id=\"static-image-code\"></textarea>\n\n            <script>\n                function staticImageGeneration(){\n                    var onlineText = $('#OnlineTextStatic').val() != '' ? '&online=' + encodeURIComponent($('#OnlineTextStatic').val()) : '';\n                    var offlineText = $('#OfflineTextStatic').val() != '' ? '&offline=' + encodeURIComponent($('#OfflineTextStatic').val()) : '&offline=0';\n                    var width = parseInt($('#OnlineImageWidth').val()) > 0 ? '&w=' + parseInt($('#OnlineImageWidth').val()) : '';\n                    var department = $('#DepartmentID').val() && $('#DepartmentID').val().length > 0 && $('#DepartmentID').val().join('/') != '0' ? '/(department)/'+$('#DepartmentID').val().join('/') : '';\n                    var operator = $('#id_operator').val() > 0 ? '/(operator)/'+$('#id_operator').val() : '';\n                    var theme = $('#ThemeID').val() != 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n\n                    var baseURL = '<?php echo erLhcoreClassXMP::getBaseHost()?><?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurl('restapi/onlineimage')?>' + department + operator + theme + '?' + onlineText + offlineText + width;\n\n                    $('#static-image-url').attr('src', baseURL);\n                    $('#static-image-code').val('<a href=\"'+$('#static-url-generated').val()+'\">'+'<img src=\"' + baseURL + '\" alt=\"\" /></a>');\n                }\n                $('#DepartmentID, #id_operator, #OnlineTextStatic, #OnlineImageWidth, #OfflineTextStatic, #static-url-generated').on('keyup change',function(){\n                    staticImageGeneration();\n                });\n            </script>\n\n            <hr>\n\n        </div>\n\n        <?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_tab_content_multiinclude.tpl.php'));?>\n\n    </div>\n</div>\n\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the text area to the page where you want your status to appear');?></p>\n<textarea style=\"width: 100%; height: 200px; font-size: 11px;\" class=\"form-control\" id=\"HMLTContent\"></textarea>\n\n<p>Static URL. You can send this url to your customers</p>\n\n<input type=\"text\" class=\"form-control form-control-sm\" value=\"\" id=\"static-url-generated\">\n\n<script type=\"text/javascript\">\n\n    var default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\n    function generateEmbedCode(){\n        var siteAccess = $('#LocaleID').val() == default_site_access ? '' : ',lang:\\''+$('#LocaleID').val()+'\\'';\n\n        var siteAccessStatic = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n\n        var id_widget_mode = $('#id_widget_mode').val();\n\n        var id_tag = '';\n        if (id_widget_mode == 'embed') {\n            id_tag = <?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_title.tpl.php'));?>+\"\\n\"+\n                '<div id=\"lhc_status_container_page\" ></div>'+\"\\n\\n\"+<?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_title_after.tpl.php'));?>+\"\\n\";\n        }\n\n\n        //var id_disable_online_tracking = $('#id_disable_online_tracking').is(':checked') ? ',dot:true' : '';\n\n        var id_show_leave_form = $('#id_show_leave_form').is(':checked') ? ',leaveamessage:true' : '';\n        var id_fresh = $('#id_fresh').is(':checked') ? ',fresh:true' : '';\n        var id_fresh_status = $('#id_fresh').is(':checked') ? '/(fresh)/true' : '';\n\n       var id_disable_pro_active_invitations = $('#id_disable_pro_active_invitations').is(':checked') ? ',proactive:false' : '';\n       var id_position_placement = $('#id_position_placement').val() != '' ? ',position_placement:\\''+$('#id_position_placement').val()+'\\'' : '';\n\n        var id_department = $('#DepartmentID').val() && $('#DepartmentID').val().length > 0 && $('#DepartmentID').val().join('/') != '0' ? ',department:[\"'+$('#DepartmentID').val().join('\",\"')+'\"]' : '';\n        var id_department_static = $('#DepartmentID').val() && $('#DepartmentID').val().length > 0 && $('#DepartmentID').val().join('/') != '0' ? '/(department)/'+$('#DepartmentID').val().join('/') : '';\n\n        //var id_product = $('#id_product_id').val() && $('#id_product_id').val().length > 0 && $('#id_product_id').val().join('/') != '0' ? '/(prod)/'+$('#id_product_id').val().join('/') : '';\n\n        var id_theme = $('#ThemeID').val() != 0 ? ',theme:\"'+$('#ThemeID').val()+'\"' : '';\n        var id_theme_static = $('#ThemeID').val() != 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n\n        var id_widget_position = $('#id_widget_position').val() != '' ? ',position:\\''+$('#id_widget_position').val()+'\\'' : '';\n\n        var id_check_messages_operator = $('#id_check_messages_operator').is(':checked') ? ',check_messages:true' : ',check_messages:false';\n\n        var id_identifier = $('#id_site_identifier').val() != '' ? ',identifier:\\''+$('#id_site_identifier').val()+'\\'' : '';\n        var id_identifier_static = $('#id_site_identifier').val() != '' ? '/(identifier)/'+$('#id_site_identifier').val() : '';\n\n        <?php //var id_ma = $('#MinimizeID').val() != '' ? '/(ma)/'+$('#MinimizeID').val() : ''; ?>\n\n        var id_operator = $('#id_operator').val() > 0 ? ',operator:'+$('#id_operator').val() : '';\n        var id_operator_static = $('#id_operator').val() > 0 ? '/(operator)/'+$('#id_operator').val() : '';\n\n\n        var id_survey = $('#id_Survey').val() > 0 ? ',survey:'+$('#id_Survey').val() : '';\n        var id_survey_static = $('#id_Survey').val() > 0 ? '/(survey)/'+$('#id_Survey').val() : '';\n\n\n        <?php /*var id_position =  '/(position)/'+$('#PositionID').val();*/ ?>\n\n        /*var id_tag = '';\n        var top = '/(top)/'+($('#id_top_text').val() == '' ? 350 : $('#id_top_text').val());\n        var topposition = '/(units)/'+$('#UnitsTop').val();\n\n        if ($('#PositionID').val() == 'original'){\n            id_tag = <?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_title.tpl.php'));?>+\"\\n\"+\n                '<div id=\"lhc_status_container\" ></div>'+\"\\n\\n\"+<?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_title_after.tpl.php'));?>+\"\\n\";\n        };*/\n\n        var id_embed_domain = $('#id_embed_domain').val() != '' ? ',domain:\\''+$('#id_embed_domain').val()+'\\'' : '';\n\n        if (id_embed_domain.indexOf('://') != -1) {\n            alert(<?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Please do not enter protocol, only domain name is required'),ENT_QUOTES))?>);\n            return;\n        };\n\n        <?php /*var id_disable_subdomain =  $('#id_disable_subdomain').is(':checked') ? ',subdomain:true' : '';\n\n        var uaArguments = '';\n\n        <?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_custom_generation_multiinclude.tpl.php'));?>\n\n        if (uaArguments != '') {\n            uaArguments = '/(ua)'+uaArguments;\n        }\n\n        <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/options_variable.tpl.php')); ?>\n*/ ?>\n\n        var id_detect_language = $('#DetectLanguage').is(':checked') ? true : false;\n\n        var langDetectScript = '';\n\n        if (id_detect_language == true) {\n            langDetectScript = \"var _l = '';\"+\n                \"var _m = document.getElementsByTagName('meta');\"+\n                \"var _cl = '';\"+\n                \"for (i=0; i < _m.length; i++) {if ( _m[i].getAttribute('http-equiv') == 'content-language' ) {_cl = _m[i].getAttribute('content');}}\"+\n                \"if (document.documentElement.lang != '') _l = document.documentElement.lang;\"+\n                \"if (_cl != '' && _cl != _l) _l = _cl;\"+\n                \"if (_l == undefined || _l == '') {_l = '\" + siteAccess + \"';\"+\n                \"} else {_l = _l[0].toLowerCase() + _l[1].toLowerCase(); if ('<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' )?>' == _l) {_l = ''} else {LHC_API.args.lang = _l + '/';}}\\n\";\n        }\n\n        $('#static-url-generated').val($('#HttpMode').val()+'//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccessStatic +'chat/start'+id_survey_static+id_operator_static+id_fresh_status+id_department_static+id_theme_static+id_identifier_static);\n        staticImageGeneration();\n\n        var script = '<script>'+\n            'var LHC_API = LHC_API||{};'+\"\\n\"+'LHC_API.args = {mode:\\''+id_widget_mode+'\\',lhc_base_url:\\'' + $('#HttpMode').val() + '//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect()?>\\',wheight:'+$('#id_widget_height').val()+',wwidth:'+$('#id_widget_width').val()+',pheight:'+$('#id_popup_height').val()+',pwidth:'+$('#id_popup_width').val()+id_operator+id_embed_domain+id_fresh+id_show_leave_form+id_department+id_theme+id_survey+id_widget_position+id_check_messages_operator+id_disable_pro_active_invitations+id_identifier+siteAccess+id_position_placement+'};\\n'+\n            '(function() {'+\"\\n\"+langDetectScript+\n            'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.setAttribute(\\'crossorigin\\',\\'anonymous\\'); po.async = true;'+\"\\n\"+\n            'var date = new Date();'+\n            'po.src = \\''+$('#HttpMode').val()+'//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('js/widgetv2/index.js')?>?\\'+(\"\"+date.getFullYear() + date.getMonth() + date.getDate());'+\"\\n\"+\n            'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n            '})();'+\"\\n\"+\n            '</scr'+'ipt>';\n\n        $('#HMLTContent').text(id_tag+script);\n    };\n\n    $('#id_widget_mode,#id_position_placement, #hash_args,#id_check_messages_operator,#id_disable_subdomain,#id_fresh,#id_widget_position,#LocaleID,#id_embed_domain,#DetectLanguage,#id_product_id,#id_disable_online_tracking,#MinimizeID,#id_operator,#DepartmentID,#HttpMode,#ThemeID,#id_Survey,#id_disable_pro_active_invitations,#id_site_identifier,#id_internal_popup,#id_position_bottom,#PositionID,#id_show_leave_form,#id_hide_then_offline,#UnitsTop,#id_top_text,#id_popup_width,#id_popup_height,#id_widget_width,#id_widget_height').change(function(){\n        generateEmbedCode();\n    });\n\n    generateEmbedCode();\n    staticImageGeneration();\n\n</script>", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/timezone','Update');?></h1>\r\n\r\n<?php if (isset($updated) && $updated == 'done') : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('system/smtp','Settings updated'); ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-md-4\">\r\n\t\t<h5><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Your version')?> - <?php echo sprintf(\"%0.2f\", erLhcoreClassUpdate::LHC_RELEASE/100);?></h5>\r\n\t\t<h5><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Current version')?> - <span class=\"text-success\" id=\"recent-version\">...</span></h5>\r\n\r\n        <p class=\"font-weight-bold\">More information</p>\r\n\r\n        <ul>\r\n            <li><a rel=\"noreferrer\" href=\"http://livehelperchat.com/news-5c.html\" target=\"_blank\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','News')?></a></li>\r\n            <li><a target=\"_blank\" rel=\"noreferrer\" href=\"https://doc.livehelperchat.com/\">Documentation</a></li>\r\n            <li><a target=\"_blank\" rel=\"noreferrer\" href=\"https://doc.livehelperchat.com/docs/upgrading\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Upgrade instructions')?></a></li>\r\n            <li><a target=\"_blank\" rel=\"noreferrer\" href=\"http://livehelperchat.com\">Live Helper Chat official website</a></li>\r\n        </ul>\r\n\r\n\t</div>\r\n\t<div class=\"col-md-8\">\r\n        <button type=\"button\" class=\"btn btn-secondary btn-xs\" onclick=\"compareLocal()\">Click to compare with local definition</button>\r\n\t\t<div id=\"status-db\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/timezone','Comparing current database structure, please wait...')?></div>\r\n\t</div>\r\n</div>\r\n\r\n<script>\r\nfunction updateDatabase(scope) {\r\n\t$('#db-status-checked').hide();\r\n\t$('#db-status-updating').show();\t\t\r\n\t$.postJSON('<?php echo erLhcoreClassDesign::baseurl('system/update')?>/(action)/statusdbdoupdate' + (scope != '' ? '/(scope)/local' : ''),function(data){\r\n        $('#status-db').html(data.result);            \r\n    }); \r\n};\r\n\r\nfunction compareLocal() {\r\n    $.postJSON('<?php echo erLhcoreClassDesign::baseurl('system/update')?>/(action)/statusdb/(scope)/local',function(data){\r\n        $('#status-db').html(data.result);\r\n    });\r\n}\r\n\r\n(function() {\r\n\t\r\n  $.ajax({\r\n      url: 'https://livehelperchat.com/update/version',   \r\n      dataType: 'jsonp',      \r\n      jsonp: 'callback',\r\n      jsonpCallback: 'jsonpCallbackLHC',\r\n      success: function(data){        \r\n              $('#recent-version').text((data.version/100).toFixed(2));\r\n      }\r\n  });\r\n\t \r\n  $.postJSON('<?php echo erLhcoreClassDesign::baseurl('system/update')?>/(action)/statusdb',function(data){\r\n      $('#status-db').html(data.result);            \r\n  });\r\n    \r\n})();\r\n</script>", "<?php if (isset($errors)) : ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/validation_error.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<?php if (isset($updated) && $updated == 'done') : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Settings updated'); ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<form action=\"\" method=\"post\" autocomplete=\"off\" ng-non-bindable>\r\n\r\n\t<div role=\"tabpanel\">\r\n\r\n\t\t<!-- Nav tabs -->\r\n\t\t<ul class=\"nav nav-tabs\" role=\"tablist\">\r\n\t\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link active\" href=\"#autologinsettings\" aria-controls=\"autologinsettings\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Auto login settings');?></a></li>\r\n\t\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#autologincustom\" aria-controls=\"autologincustom\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Custom auto logins');?></a></li>\r\n\t\t</ul>\r\n\r\n\t\t<!-- Tab panes -->\r\n\t\t<div class=\"tab-content\">\r\n\t\t\t<div role=\"tabpanel\" class=\"tab-pane active\" id=\"autologinsettings\">\r\n\t\t\t\r\n\t\t\t    <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','This module can be used if you are generating autologin link. See site for code examples')?></p>\r\n\t\t\t\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label><input type=\"checkbox\" name=\"enabled\" value=\"on\" <?php (isset($autologin_data['enabled']) && $autologin_data['enabled'] == 1) ? print 'checked=\"checked\"' : print '' ?>\" /> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Enabled');?></label> \r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Secret hash used for authentification token generation, min 10 characters');?></label> \r\n\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"secret_hash\" value=\"<?php (isset($autologin_data['secret_hash']) && $autologin_data['secret_hash'] != '') ? print htmlspecialchars($autologin_data['secret_hash']) : print '' ?>\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/csfr_token.tpl.php'));?>\r\n\t\t\t\t \r\n\t\t\t\t<div class=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n\t\t\t\t\t<input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreAutologinSettings\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save'); ?>\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n            <div role=\"tabpanel\" class=\"tab-pane\" id=\"autologincustom\">\r\n                <script>\r\n                    function updateURL(index) {\r\n                       $('#copy-url-'+index).val( $('#copy-url-'+index).attr('data-original-url') + $('#site-access-'+index).val() + '/user/autologinuser' + '/'+$('#secret-hash-'+index).val());\r\n                    }\r\n                    function copyURL(inst) {\r\n                        $('#copy-url-'+inst.attr('data-index')).select();\r\n                        document.execCommand(\"copy\");\r\n                        inst.tooltip({\r\n                            trigger: 'click',\r\n                            placement: 'top'\r\n                        });\r\n                        function setTooltip(message) {\r\n                            inst.tooltip('hide')\r\n                                .attr('data-original-title', message)\r\n                                .tooltip('show');\r\n                        }\r\n\r\n                        function hideTooltip() {\r\n                            setTimeout(function() {\r\n                                inst.tooltip('hide');\r\n                            }, 3000);\r\n                        }\r\n                        setTooltip(inst.attr('data-success'));\r\n                        hideTooltip();\r\n                        return false;\r\n                    }\r\n                </script>\r\n\r\n                <?php for ($i = 0; $i < 5; $i++) : ?>\r\n                <div class=\"row\">\r\n                    <div class=\"col-1\">\r\n                        <div class=\"form-group\">\r\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','User ID')?>*</label>\r\n                            <input type=\"text\" name=\"UserID[<?php echo $i?>]\" class=\"form-control\" value=\"<?php echo isset($autologin_data['autologin_options'][$i]) ? htmlspecialchars($autologin_data['autologin_options'][$i]['user_id']) : null?>\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <div class=\"form-group\">\r\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','SiteAccess')?>*</label>\r\n                            <select id=\"site-access-<?php echo $i?>\" name=\"siteAccess[<?php echo $i?>]\" class=\"form-control\" onchange=\"updateURL(<?php echo $i?>)\">\r\n                                <?php foreach (erConfigClassLhConfig::getInstance()->getSetting( 'site', 'available_site_access' ) as $locale ) : ?>\r\n                                    <option value=\"<?php echo $locale?>\" <?php (isset($autologin_data['autologin_options'][$i]['site_access']) && $autologin_data['autologin_options'][$i]['site_access'] == $locale) ? print 'selected=\"selected\"' : ''?> ><?php echo $locale?></option>\r\n                                <?php endforeach; ?>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-3\">\r\n                        <div class=\"form-group\">\r\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Default URL')?>*</label>\r\n                            <input type=\"text\" name=\"URL[<?php echo $i?>]\" id=\"url-autologin-<?php echo $i?>\" class=\"form-control\" value=\"<?php echo isset($autologin_data['autologin_options'][$i]) ? htmlspecialchars($autologin_data['autologin_options'][$i]['url']) : null?>\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-3\">\r\n                        <div class=\"form-group\">\r\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Secret hash')?>*</label>\r\n                            <input type=\"text\" onkeyup=\"updateURL(<?php echo $i?>)\" name=\"SecretHash[<?php echo $i?>]\" id=\"secret-hash-<?php echo $i?>\" class=\"form-control\" value=\"<?php echo isset($autologin_data['autologin_options'][$i]) ? htmlspecialchars($autologin_data['autologin_options'][$i]['secret_hash']) : null?>\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <div class=\"form-group\">\r\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','IP Allowed')?>*</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"1.2.3.*,128.8.8.8\" name=\"IP[<?php echo $i?>]\" value=\"<?php echo isset($autologin_data['autologin_options'][$i]) ? htmlspecialchars($autologin_data['autologin_options'][$i]['ip']) : null?>\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-12\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input type=\"text\" class=\"form-control\" readonly=\"readonly\" id=\"copy-url-<?php echo $i?>\" data-original-url=\"<?php echo erLhcoreClassSystem::$httpsMode == 'true' ? 'https://' : 'http://'?><?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect('/')?>\" value=\"\">\r\n                                <div class=\"input-group-append\"><span class=\"input-group-text\"><a onclick=\"copyURL($(this))\" data-index=\"<?php echo $i?>\" data-original-title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Copied!')?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Copy URL to clipboard')?>\"><i class=\"material-icons mr-0\">&#xE14D;</i></a></span></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <script>updateURL(<?php echo $i?>)</script>\r\n                <?php endfor; ?>\r\n\r\n                <div class=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n                    <input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreAutologinSettings\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save'); ?>\" />\r\n                </div>\r\n\r\n            </div>\r\n\t\t</div>\r\n\t</div>\r\n</form>", "<div class=\"form-group\" ng-non-bindable>\n    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Name');?></label>\n    <input type=\"text\" class=\"form-control form-control-sm\" name=\"name\" value=\"<?php echo htmlspecialchars($item->name);?>\" />\n</div>\n\n<div class=\"row\">\n    <div class=\"col-6\">\n        <div class=\"form-group\" ng-non-bindable>\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Identifier');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" name=\"identifier\" onkeyup=\"$('#api-incoming-url').val($('#api-incoming-url').attr('data-base')+$(this).val())\" value=\"<?php echo htmlspecialchars($item->identifier);?>\" />\n        </div>\n    </div>\n    <div class=\"col-6\">\n        <div class=\"form-group\" ng-non-bindable>\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Scope. This should be the same for all same provider implementations.');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" name=\"scope\" value=\"<?php echo htmlspecialchars($item->scope);?>\" />\n        </div>\n    </div>\n</div>\n\n<div class=\"form-group\">\n    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','URL to put in third party Rest API service');?></label>\n    <input type=\"text\" ng-non-bindable class=\"form-control form-control-sm\" id=\"api-incoming-url\" data-base=\"<?php echo erLhcoreClassXMP::getBaseHost().(isset($_SERVER['HTTP_HOST']) ? $_SERVER['HTTP_HOST'] : '')?><?php echo erLhcoreClassDesign::baseurldirect('webhooks/incoming')?>/\" value=\"<?php echo erLhcoreClassXMP::getBaseHost().(isset($_SERVER['HTTP_HOST']) ? $_SERVER['HTTP_HOST'] : '')?><?php echo erLhcoreClassDesign::baseurldirect('webhooks/incoming')?>/<?php echo htmlspecialchars($item->identifier);?>\">\n</div>\n\n<div class=\"form-group\">\n    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/lists/search_panel','Department');?></label>\n    <?php echo erLhcoreClassRenderHelper::renderCombobox( array (\n        'input_name'     => 'dep_id',\n        'optional_field' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/lists/search_panel','Choose department'),\n        'selected_id'    => $item->dep_id,\n        'css_class'      => 'form-control form-control-sm',\n        'display_name'   => 'name',\n        'list_function_params' => array('limit' => false, 'sort' => '`name` ASC'),\n        'list_function'  => 'erLhcoreClassModelDepartament::getList'\n    )); ?>\n</div>\n\n<div class=\"form-group\">\n    <label><input type=\"checkbox\" value=\"on\" name=\"disabled\" <?php echo $item->disabled == 1 ? 'checked=\"checked\"' : '' ?> /> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/new','Disabled')?></label>\n</div>\n\n<div class=\"form-group\">\n    <label><input type=\"checkbox\" ng-model=\"show_wh_integration\"> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Show integration information.');?></label>\n</div>\n\n<div ng-show=\"show_wh_integration\">\n\n<ul class=\"nav nav-tabs mb-3\" role=\"tablist\">\n    <li role=\"presentation\" class=\"nav-item\"><a href=\"#main_message_attributes\" class=\"nav-link active\" aria-controls=\"main_message_attributes\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"false\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Main attributes')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#text_messages\" aria-controls=\"text_messages\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Text messages 1')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#text_messages_2\" aria-controls=\"text_messages_2\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Text messages 2')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#text_messages_3\" aria-controls=\"text_messages_3\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Text messages 3')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#text_messages_4\" aria-controls=\"text_messages_4\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Text messages 4')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#attachments\" aria-controls=\"attachments\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Attachments')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#img-attachments\" aria-controls=\"img-attachments\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Images/Video 1')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#img-attachments_2\" aria-controls=\"img-attachments_2\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Images/Video 2')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#img-attachments_3\" aria-controls=\"img-attachments_3\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Images/Video 3')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#chat_options\" aria-controls=\"chat_options\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Chat options')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#wh_attributes\" aria-controls=\"wh_attributes\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Attributes')?></a></li>\n</ul>\n\n<div class=\"tab-content\">\n    <div role=\"tabpanel\" class=\"tab-pane form-group active\" id=\"main_message_attributes\">\n\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Messages attribute location');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.messages\" value=\"\" />\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                       <label><input type=\"checkbox\" ng-model=\"webhookincomingsctl.conditions.message_direct\" value=\"on\" > <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','This attribute contains direct message and NOT a messages array');?></label>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-6\">\n\n                <div class=\"row\">\n                    <div class=\"col-6\">\n                        <div class=\"form-group\">\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Nick');?></label>\n                            <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.nick\" value=\"\" />\n                        </div>\n                    </div>\n                    <div class=\"col-6\">\n                        <div class=\"form-group\">\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Nick preg match rule');?></label>\n                            <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.nick_pregmatch\" placeholder=\"/(?!^\\d+$)^.+$/is\" value=\"\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Phone');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.phone\" value=\"\" />\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','IP');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.ip\" value=\"\" />\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','E-mail');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.email\" value=\"\" />\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Time');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.time\" value=\"\" />\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Chat ID field location');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.chat_id\" value=\"\" />\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Chat ID Template for manual message sending. Use {chat_id} as placeholder');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" title=\"{chat_id}@c.us\" placeholder=\"E.g {chat_id}@c.us\" ng-model=\"webhookincomingsctl.conditions.chat_id_template\" value=\"\" />\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','General conditions for messages being processed. These are first level attributes');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.main_cond\" placeholder=\"main attribute=value expected||main attribute=value expected\" value=\"\" />\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Additional field location');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.add_field_value\" value=\"\" />\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"text_messages\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_body\"></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered text message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond\" value=\"\" />\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_op\" value=\"\" />\n        </div>\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"text_messages_2\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_body_2\"></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered text message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_2\" value=\"\" />\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_op_2\" value=\"\" />\n        </div>\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"text_messages_3\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_body_3\"></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered text message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_3\" value=\"\" />\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_op_3\" value=\"\" />\n        </div>\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"text_messages_4\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_body_4\"></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered text message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_4\" value=\"\" />\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_op_4\" value=\"\" />\n        </div>\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"attachments\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_attachments\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><input type=\"checkbox\" ng-model=\"webhookincomingsctl.conditions.msg_attachments_download\" value=\"on\" > <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Download attachment instead of using external URL');?></label>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Image body attributes. URL or base64 encoded content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_attachments_body\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Attribute which holds file name. Optional');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute. E.g file_name\" ng-model=\"webhookincomingsctl.conditions.msg_cond_attachments_file_name\" value=\"\" />\n        </div>\n        \n        <h5><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Decode file options');?> </h5>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','URL To make request to get content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_attachments_url_decode\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Request content');?></label>\n            <textarea class=\"form-control\" ng-model=\"webhookincomingsctl.conditions.msg_cond_attachments_url_decode_content\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Response location');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_attachments_url_decode_output\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered attachment message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_attachments\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_attachments_op\" value=\"\" />\n        </div>\n\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"img-attachments\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_img\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><input type=\"checkbox\" ng-model=\"webhookincomingsctl.conditions.msg_img_download\" value=\"on\" > <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Download image instead of using external URL');?></label>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Image body attributes. URL or base64 encoded content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_body\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Attribute which holds file name. Optional');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute. E.g file_name\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_file_name\" value=\"\" />\n        </div>\n\n        <h5><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Decode file options');?> </h5>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','URL To make request to get content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_url_decode\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Request content');?></label>\n            <textarea class=\"form-control\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_url_decode_content\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Response location');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_url_decode_output\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered images message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_op\" value=\"\" />\n        </div>\n\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"img-attachments_2\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_img_2\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><input type=\"checkbox\" ng-model=\"webhookincomingsctl.conditions.msg_img_2_download\" value=\"on\" > <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Download image instead of using external URL');?></label>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Image body attributes. URL or base64 encoded content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_2_body\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Attribute which holds file name. Optional');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute. E.g file_name\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_2_file_name\" value=\"\" />\n        </div>\n\n        <h5><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Decode file options');?> </h5>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','URL To make request to get content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_2_url_decode\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Request content');?></label>\n            <textarea class=\"form-control\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_2_url_decode_content\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Response location');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_2_url_decode_output\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered images message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_2\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_2_op\" value=\"\" />\n        </div>\n\n    </div>\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"img-attachments_3\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_img_3\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><input type=\"checkbox\" ng-model=\"webhookincomingsctl.conditions.msg_img_3_download\" value=\"on\" > <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Download image instead of using external URL');?></label>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Image body attributes. URL or base64 encoded content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_3_body\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Attribute which holds file name. Optional');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute. E.g file_name\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_3_file_name\" value=\"\" />\n        </div>\n\n        <h5><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Decode file options');?> </h5>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','URL To make request to get content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_3_url_decode\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Request content');?></label>\n            <textarea class=\"form-control\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_3_url_decode_content\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Response location');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_3_url_decode_output\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered images message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_3\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_3_op\" value=\"\" />\n        </div>\n\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"chat_options\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','If previous chat is found and it is closed we should');?></label>\n            <select ng-model=\"webhookincomingsctl.conditions.chat_status\" class=\"form-control form-control-sm\">\n                <option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Create a new chat.');?></option>\n                <option value=\"pending\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Set previous chat to Pending/Bot depending on department configuration.');?></option>\n                <option value=\"active\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Set as active if operator was assigned. Operator will not be reset.');?></option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <label><input type=\"checkbox\" ng-model=\"webhookincomingsctl.conditions.reset_op\" value=\"on\" > <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Operator should be reset if chat being transferred to pending state.');?></label>\n        </div>\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"wh_attributes\">\n        <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','These attributes can be accessed in Rest API. So you would not need to define them there.');?></p>\n\n        <button type=\"button\" class=\"btn btn-secondary btn-sm\" ng-click=\"webhookincomingsctl.addParam(webhookincomingsctl.conditions.attr)\">Add parameter</button>\n\n        <div ng-repeat=\"paramQuery in webhookincomingsctl.conditions.attr\" class=\"mt-2\">\n            <div class=\"row\">\n                <div class=\"col-4\">\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"paramQuery.key\" placeholder=\"Key\">\n                </div>\n                <div class=\"col-4\">\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"paramQuery.value\" placeholder=\"Value\">\n                </div>\n                <div class=\"col-1\">\n                    <button type=\"button\" class=\"btn btn-danger d-block w-100 btn-xs\" ng-click=\"webhookincomingsctl.deleteParam(webhookincomingsctl.conditions.attr,paramQuery)\">-</button>\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n</div>\n\n<hr/>\n\n<h5><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Expected JSON payload for text message.');?></h5>\n\n<pre>\n<?php echo '{'.\"\\n\".'\n    {{webhookincomingsctl.conditions.messages ? \"\\\"\"+webhookincomingsctl.conditions.messages+\"\\\":[\" : \"\"}}'.\"\\n\".'\n        \"{{webhookincomingsctl.conditions.msg_body}}\" : \"'. erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','expected message body') .'\",'.\"\\n\".'\n        \"{{webhookincomingsctl.conditions.nick}}\": \"'.  erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','expected nick').'\",'.\"\\n\".'\n        \"{{webhookincomingsctl.conditions.time}}\": \"'.  erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','unix timestamp E.g 1504208593').'\",'.\"\\n\".'\n        \"{{webhookincomingsctl.conditions.chat_id}}\": \"'.  erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Unique Chat ID.').'\",'.\"\\n\".'\n        {{webhookincomingsctl.conditions.msg_cond ? \"\\\"\"+webhookincomingsctl.conditions.msg_cond.replaceAll(\"=\",\"\\\":\\\"\").replaceAll(\"||\",\"\\\",        \\n\\\"\")+\"\\\",\" : \"\"}}'.\"\\n\".'\n    {{webhookincomingsctl.conditions.messages ? \"]\" : \"\"}}'.\"\\n\".'\n    {{webhookincomingsctl.conditions.main_cond ? \"\\\"\"+webhookincomingsctl.conditions.main_cond.replaceAll(\"=\",\"\\\":\\\"\").replaceAll(\"||\",\"\\\",        \\n\\\"\")+\"\\\",\" : \"\"}}\n'.\"\\n\".'}'?>\n</pre>\n\n</div>\n\n<textarea name=\"configuration\" class=\"hide\" ng-model=\"webhookincomingsctl.conditions_json\"></textarea>", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','XMPP settings');?></h1>\r\n\r\n<?php if (isset($errors)) : ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/validation_error.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<?php if (isset($updated) && $updated == 'done') : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Settings updated'); ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<?php if (isset($token_received) && $token_received == 'done') : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Succesfully authorised, now you can try to send a message'); ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<?php if (isset($token_revoked) && $token_revoked == 'done') : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Token was revoked'); ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<?php if (isset($message_send)) : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','XMPP message was sent succesfuly'); ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<form ng-non-bindable action=\"<?php echo erLhcoreClassDesign::baseurl('xmp/configuration')?>\" method=\"post\" autocomplete=\"off\">\r\n\r\n<?php include(erLhcoreClassDesign::designtpl('lhkernel/csfr_token.tpl.php'));?>\r\n\r\n<label><input type=\"checkbox\" name=\"use_xmp\" value=\"1\" <?php isset($xmp_data['use_xmp']) && ($xmp_data['use_xmp'] == '1') ? print 'checked=\"checked\"' : '' ?> /> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','XMPP active'); ?></label>\r\n\r\n<div class=\"row form-group\">\r\n\t<div class=\"col-6\">\r\n\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','XMPP Message content');?></label>\r\n\t\t<textarea class=\"form-control\" name=\"XMPMessage\" style=\"height:100px;\"><?php echo htmlspecialchars($xmp_data['xmp_message'])?></textarea>\r\n\t</div>\r\n\t<div class=\"col-6\">\r\n\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','XMPP Message about accepted chat');?></label>\r\n\t\t<textarea class=\"form-control\" name=\"XMPAcceptedMessage\" style=\"height:100px;\"><?php echo htmlspecialchars($xmp_data['xmp_accepted_message'])?></textarea>\r\n\t</div>\r\n</div>\r\n\r\n<div role=\"tabpanel\">\r\n\t<!-- Nav tabs -->\r\n\t<ul class=\"nav nav-tabs\" role=\"tablist\">\r\n\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link <?php if ( (isset($xmp_data['use_standard_xmp']) && $xmp_data['use_standard_xmp'] == '0') || !isset($xmp_data['use_standard_xmp']) ) : ?>active<?php endif;?>\" href=\"#xmp\" aria-controls=\"xmp\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','XMPP');?></a></li>\r\n\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link <?php if (isset($xmp_data['use_standard_xmp']) && $xmp_data['use_standard_xmp'] == '1' ) : ?>active<?php endif;?>\" href=\"#gtalk\" aria-controls=\"gtalk\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','GTalk');?></a></li>\r\n\t</ul>\r\n\r\n\t<!-- Tab panes -->\r\n\t<div class=\"tab-content\">\r\n\t\t<div role=\"tabpanel\" class=\"tab-pane <?php if ( (isset($xmp_data['use_standard_xmp']) && $xmp_data['use_standard_xmp'] == '0') || !isset($xmp_data['use_standard_xmp']) ) : ?>active<?php endif;?>\" id=\"xmp\">\r\n\t\t        <label><input type=\"radio\" name=\"use_standard_xmp\" value=\"0\" <?php ( (isset($xmp_data['use_standard_xmp']) && $xmp_data['use_standard_xmp'] == '0') || !isset($xmp_data['use_standard_xmp']) ) ? print 'checked=\"checked\"' : '' ?> /> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Use standard XMPP service'); ?></label>\r\n\t\t\r\n\t\t\t\t<div class=\"row form-group\">\r\n\t\t\t\t\t<div class=\"col-6\">\r\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Host');?></label>\r\n\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"host\" placeholder=\"talk.google.com\" value=\"<?php (isset($xmp_data['host']) && $xmp_data['host'] != '') ? print htmlspecialchars($xmp_data['host']) : print '' ?>\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-6\">\r\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Port');?></label>\r\n\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"port\" value=\"<?php (isset($xmp_data['port']) && $xmp_data['port'] != '') ? print htmlspecialchars($xmp_data['port']) : print '5222' ?>\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"row form-group\">\r\n\t\t\t\t\t<div class=\"col-6\">\t\t\t\r\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Login');?></label>\r\n\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"username\" autocomplete=\"new-password\" value=\"<?php (isset($xmp_data['username']) && $xmp_data['username'] != '') ? print htmlspecialchars($xmp_data['username']) : print '' ?>\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-6\">\r\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Password');?></label>\r\n\t\t\t\t\t\t<input class=\"form-control\" type=\"password\" name=\"password\" autocomplete=\"new-password\" value=\"\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"row form-group\">\r\n\t\t\t\t\t<div class=\"col-6\">\r\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Resource');?></label>\r\n\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"resource\" placeholder=\"xmpphp\" value=\"<?php (isset($xmp_data['resource']) && $xmp_data['resource'] != '') ? print htmlspecialchars($xmp_data['resource']) : print '' ?>\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-6\">\r\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Server');?></label>\r\n\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"server\" placeholder=\"gmail.com\" value=\"<?php (isset($xmp_data['server']) && $xmp_data['server'] != '') ? print htmlspecialchars($xmp_data['server']) : print '' ?>\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Recipients');?></label>\r\n\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"recipients\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Default recipients'); ?>\" value=\"<?php (isset($xmp_data['recipients']) && $xmp_data['recipients'] != '') ? print htmlspecialchars($xmp_data['recipients']) : print '' ?>\" />\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/csfr_token.tpl.php'));?>\r\n\t\t\t\t\r\n\t\t\t\t<h3><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Test recipients');?></h3>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Individual recipients');?></label>\r\n\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"test_recipients\" value=\"<?php (isset($xmp_data['test_recipients']) && $xmp_data['test_recipients'] != '') ? print htmlspecialchars($xmp_data['test_recipients']) : print '' ?>\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Test group recipients');?></label>\r\n\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"test_group_recipients\" value=\"<?php (isset($xmp_data['test_group_recipients']) && $xmp_data['test_group_recipients'] != '') ? print htmlspecialchars($xmp_data['test_group_recipients']) : print '' ?>\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n\t\t\t\t  <input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreXMPSettings\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save'); ?>\" />\r\n\t\t\t\t  <input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreXMPSettingsTest\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Test message will be send to your account e-mail'); ?>\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Send test message'); ?>\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t</div>\r\n\t\t<div role=\"tabpanel\" class=\"tab-pane <?php if (isset($xmp_data['use_standard_xmp']) && $xmp_data['use_standard_xmp'] == '1' ) : ?>active<?php endif;?>\" id=\"gtalk\">\r\n\t\t        <label><input type=\"radio\" name=\"use_standard_xmp\" value=\"1\" <?php isset($xmp_data['use_standard_xmp']) && ($xmp_data['use_standard_xmp'] == '1') ? print 'checked=\"checked\"' : '' ?> /> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Use GTalk for messaging'); ?></label>\r\n\t\t\t\t<h4><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Information for your google app')?></h4>\t\r\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Redirect URL, this url you will have to enter in your google app configuration')?></label>\r\n\t\t\t\t<input class=\"form-control\" type=\"text\" value=\"<?php echo htmlspecialchars(erLhcoreClassXMP::getBaseHost().$_SERVER['HTTP_HOST'])?><?php echo erLhcoreClassDesign::baseurl('xmp/configuration')?>/(gtalkoauth)/true\" />\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<h4><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Enter your app information bellow')?></h4>\t\t\t\t\t\t\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','OAuth 2.0 Client ID');?></label>\r\n\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"gtalk_client_id\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Please enter your Client ID')?>\" value=\"<?php (isset($xmp_data['gtalk_client_id']) && $xmp_data['gtalk_client_id'] != '') ? print $xmp_data['gtalk_client_id'] : print '' ?>\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Client secret');?></label>\r\n\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"gtalk_client_secret\" value=\"<?php (isset($xmp_data['gtalk_client_secret']) && $xmp_data['gtalk_client_secret'] != '') ? print htmlspecialchars($xmp_data['gtalk_client_secret']) : print '' ?>\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/csfr_token.tpl.php'));?>\r\n\t\t\t\t\r\n\t\t\t\t<?php if (erLhcoreClassXMP::getAccessToken() !== false) : ?>\r\n\t\t\t\t<h3><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Test recipients');?></h3>\r\n\t\t\t    \r\n\t\t\t    <div class=\"form-group\">\r\n\t\t\t    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Please enter to what gmail address test message should be send?');?></label>\r\n\t\t\t    <input class=\"form-control\" type=\"text\" name=\"test_recipients_gtalk\" value=\"<?php (isset($test_gmail_email) && $test_gmail_email != '') ? print htmlspecialchars($test_gmail_email) : print '' ?>\" />\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<input type=\"submit\" class=\"btn btn-primary float-right\" name=\"StoreXMPGTalkSendeMessage\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','This message will be send to test e-mail'); ?>\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Send test message'); ?>\" />\r\n\t\t\t\t<?php endif;?>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t<div class=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n\t\t\t\t  <input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreXMPGTalkSettings\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save'); ?>\" />\r\n\t\t\t\t  \t\t\t\t\t  \r\n\t\t\t\t  <?php if (erLhcoreClassXMP::getAccessToken() !== false) : ?>\t\t\t\t\t  \r\n\t\t\t\t  \t<input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreXMPGTalkRevokeToken\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Revoke access token'); ?>\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Revoke permission to send a message'); ?>\" />\r\n\t\t\t\t  <?php else : ?>\r\n\t\t\t\t\t  <?php if (isset($xmp_data['gtalk_client_secret']) && (!empty($xmp_data['gtalk_client_secret']))) : ?>\r\n\t\t\t\t\t  \t\t<input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreXMPGTalkSettingsTest\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Authentificate and grant permission to send a message'); ?>\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Grant permission to send a message'); ?>\" />\r\n\t\t\t\t\t  <?php endif;?>\r\n\t\t\t\t  <?php endif;?>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n\t\r\n\t\r\n\r\n</form>", "<?php\n\n/**\n * This code is mix of WP and phpBB :)\n * */\nclass erLhcoreClassBBCode\n{    \n   /**\n    * Callback to convert URI match to HTML A element.\n    *\n    * This function was backported from 2.5.0 to 2.3.2. Regex callback for make_clickable().\n    *\n    * @since 2.3.2\n    * @access private\n    *\n    * @param array $matches Single Regex Match.\n    * @return string HTML A element with URI address.\n    */\n   public static function _make_url_clickable_cb( $matches ) {\n       $url = $matches[2];\n       if ( ')' == $matches[3] && strpos( $url, '(' ) ) {\n           // If the trailing character is a closing parethesis, and the URL has an opening parenthesis in it, add the closing parenthesis to the URL.\n           // Then we can let the parenthesis balancer do its thing below.\n           $url .= $matches[3];\n           $suffix = '';\n       } else {\n           $suffix = $matches[3];\n       }\n       // Include parentheses in the URL only if paired\n       while ( substr_count( $url, '(' ) < substr_count( $url, ')' ) ) {\n           $suffix = strrchr( $url, ')' ) . $suffix;\n           $url = substr( $url, 0, strrpos( $url, ')' ) );\n       }\n       $url = self::esc_url($url);\n       if ( empty($url) )\n           return $matches[0];\n       return $matches[1] . \"<a href=\\\"$url\\\" class=\\\"link\\\" rel=\\\"noreferrer\\\" target=\\\"_blank\\\">$url</a>\" . $suffix;\n   }\n   \n   /**\n    * Checks and cleans a URL.\n    *\n    * A number of characters are removed from the URL. If the URL is for displaying\n    * (the default behaviour) ampersands are also replaced. The {@see 'clean_url'} filter\n    * is applied to the returned cleaned URL.\n    *\n    * @since 2.8.0\n    *\n    * @param string $url       The URL to be cleaned.\n    * @param array  $protocols Optional. An array of acceptable protocols.\n    *\t\t                    Defaults to return value of wp_allowed_protocols()\n    * @param string $_context  Private. Use esc_url_raw() for database usage.\n    * @return string The cleaned $url after the {@see 'clean_url'} filter is applied.\n    */\n   public static function esc_url( $url, $protocols = null, $_context = 'display' ) {\n       $original_url = $url;\n       if ( '' == $url )\n           return $url;\n       $url = str_replace( ' ', '%20', $url );\n       $url = preg_replace('|[^a-z0-9-~+_.?#=!&;,/:%@$\\|*\\'()\\[\\]\\\\x80-\\\\xff]|i', '', $url);\n       if ( '' === $url ) {\n           return $url;\n       }\n       if ( 0 !== stripos( $url, 'mailto:' ) ) {\n           $strip = array('%0d', '%0a', '%0D', '%0A');\n           $url = self::_deep_replace($strip, $url);\n       }\n       $url = str_replace(';//', '://', $url);\n       /* If the URL doesn't appear to contain a scheme, we\n        * presume it needs http:// prepended (unless a relative\n        * link starting with /, # or ? or a php file).\n       */\n       if ( strpos($url, ':') === false && ! in_array( $url[0], array( '/', '#', '?' ) ) &&\n           ! preg_match('/^[a-z0-9-]+?\\.php/i', $url) )\n               $url = 'http://' . $url;\n           // Replace ampersands and single quotes only when displaying.\n           if ( 'display' == $_context ) {\n               $url = self::wp_kses_normalize_entities( $url );\n               $url = str_replace( '&amp;', '&#038;', $url );\n               $url = str_replace( \"'\", '&#039;', $url );\n           }\n           if ( ( false !== strpos( $url, '[' ) ) || ( false !== strpos( $url, ']' ) ) ) {\n               $parsed = self::wp_parse_url( $url );\n               $front  = '';\n               if ( isset( $parsed['scheme'] ) ) {\n                   $front .= $parsed['scheme'] . '://';\n               } elseif ( '/' === $url[0] ) {\n                   $front .= '//';\n               }\n               if ( isset( $parsed['user'] ) ) {\n                   $front .= $parsed['user'];\n               }\n               if ( isset( $parsed['pass'] ) ) {\n                   $front .= ':' . $parsed['pass'];\n               }\n               if ( isset( $parsed['user'] ) || isset( $parsed['pass'] ) ) {\n                   $front .= '@';\n               }\n               if ( isset( $parsed['host'] ) ) {\n                   $front .= $parsed['host'];\n               }\n               if ( isset( $parsed['port'] ) ) {\n                   $front .= ':' . $parsed['port'];\n               }\n               $end_dirty = str_replace( $front, '', $url );\n               $end_clean = str_replace( array( '[', ']' ), array( '%5B', '%5D' ), $end_dirty );\n               $url       = str_replace( $end_dirty, $end_clean, $url );\n           }\n           if ( '/' === $url[0] ) {\n               $good_protocol_url = $url;\n           } else {\n               if ( ! is_array( $protocols ) )\n                   $protocols = $protocols = array( 'http', 'https', 'ftp', 'ftps', 'mailto', 'news', 'irc', 'gopher', 'nntp', 'feed', 'telnet', 'mms', 'rtsp', 'svn', 'tel', 'fax', 'xmpp', 'webcal', 'urn' );\n               \n               $good_protocol_url = self::wp_kses_bad_protocol( $url, $protocols );\n               if ( strtolower( $good_protocol_url ) != strtolower( $url ) )\n                   return '';\n           }\n\n           /**\n            * Filters a string cleaned and escaped for output as a URL.\n            *\n            * @since 2.3.0\n            *\n            * @param string $good_protocol_url The cleaned URL to be returned.\n            * @param string $original_url      The URL prior to cleaning.\n            * @param string $_context          If 'display', replace ampersands and single quotes only.\n            */\n           return $url;           \n           //self::esc_url( $good_protocol_url, $original_url, $_context ); //apply_filters( 'erLhcoreClassBBCode::clean_url', $good_protocol_url, $original_url, $_context );\n   }\n   \n   /**\n    * A wrapper for PHP's parse_url() function that handles consistency in the return\n    * values across PHP versions.\n    *\n    * PHP 5.4.7 expanded parse_url()'s ability to handle non-absolute url's, including\n    * schemeless and relative url's with :// in the path. This function works around\n    * those limitations providing a standard output on PHP 5.2~5.4+.\n    *\n    * Secondly, across various PHP versions, schemeless URLs starting containing a \":\"\n    * in the query are being handled inconsistently. This function works around those\n    * differences as well.\n    *\n    * Error suppression is used as prior to PHP 5.3.3, an E_WARNING would be generated\n    * when URL parsing failed.\n    *\n    * @since 4.4.0\n    * @since 4.7.0 The $component parameter was added for parity with PHP's parse_url().\n    *\n    * @param string $url       The URL to parse.\n    * @param int    $component The specific component to retrieve. Use one of the PHP\n    *                          predefined constants to specify which one.\n    *                          Defaults to -1 (= return all parts as an array).\n    *                          @see http://php.net/manual/en/function.parse-url.php\n    * @return mixed False on parse failure; Array of URL components on success;\n    *               When a specific component has been requested: null if the component\n    *               doesn't exist in the given URL; a string or - in the case of\n    *               PHP_URL_PORT - integer when it does. See parse_url()'s return values.\n    */\n   public static function wp_parse_url( $url, $component = -1 ) {\n       $to_unset = array();\n       $url = strval( $url );\n       if ( '//' === substr( $url, 0, 2 ) ) {\n           $to_unset[] = 'scheme';\n           $url = 'placeholder:' . $url;\n       } elseif ( '/' === substr( $url, 0, 1 ) ) {\n           $to_unset[] = 'scheme';\n           $to_unset[] = 'host';\n           $url = 'placeholder://placeholder' . $url;\n       }\n       $parts = @parse_url( $url );\n       if ( false === $parts ) {\n           // Parsing failure.\n           return $parts;\n       }\n       // Remove the placeholder values.\n       foreach ( $to_unset as $key ) {\n           unset( $parts[ $key ] );\n       }\n       return self::_get_component_from_parsed_url_array( $parts, $component );\n   }\n   \n   /**\n    * Retrieve a specific component from a parsed URL array.\n    *\n    * @internal\n    *\n    * @since 4.7.0\n    *\n    * @param array|false $url_parts The parsed URL. Can be false if the URL failed to parse.\n    * @param int    $component The specific component to retrieve. Use one of the PHP\n    *                          predefined constants to specify which one.\n    *                          Defaults to -1 (= return all parts as an array).\n    *                          @see http://php.net/manual/en/function.parse-url.php\n    * @return mixed False on parse failure; Array of URL components on success;\n    *               When a specific component has been requested: null if the component\n    *               doesn't exist in the given URL; a string or - in the case of\n    *               PHP_URL_PORT - integer when it does. See parse_url()'s return values.\n    */\n   public static function _get_component_from_parsed_url_array( $url_parts, $component = -1 ) {\n       if ( -1 === $component ) {\n           return $url_parts;\n       }\n       $key = self::_wp_translate_php_url_constant_to_key( $component );\n       if ( false !== $key && is_array( $url_parts ) && isset( $url_parts[ $key ] ) ) {\n           return $url_parts[ $key ];\n       } else {\n           return null;\n       }\n   }\n   \n   /**\n    * Translate a PHP_URL_* constant to the named array keys PHP uses.\n    *\n    * @internal\n    *\n    * @since 4.7.0\n    *\n    * @see   http://php.net/manual/en/url.constants.php\n    *\n    * @param int $constant PHP_URL_* constant.\n    * @return string|bool The named key or false.\n    */\n   public static function _wp_translate_php_url_constant_to_key( $constant ) {\n       $translation = array(\n           PHP_URL_SCHEME   => 'scheme',\n           PHP_URL_HOST     => 'host',\n           PHP_URL_PORT     => 'port',\n           PHP_URL_USER     => 'user',\n           PHP_URL_PASS     => 'pass',\n           PHP_URL_PATH     => 'path',\n           PHP_URL_QUERY    => 'query',\n           PHP_URL_FRAGMENT => 'fragment',\n       );\n       if ( isset( $translation[ $constant ] ) ) {\n           return $translation[ $constant ];\n       } else {\n           return false;\n       }\n   }\n   \n   \n   /**\n    * Converts and fixes HTML entities.\n    *\n    * This function normalizes HTML entities. It will convert `AT&T` to the correct\n    * `AT&amp;T`, `&#00058;` to `&#58;`, `&#XYZZY;` to `&amp;#XYZZY;` and so on.\n    *\n    * @since 1.0.0\n    *\n    * @param string $string Content to normalize entities\n    * @return string Content with normalized entities\n    */\n   public static function wp_kses_normalize_entities($string) {\n       // Disarm all entities by converting & to &amp;\n       $string = str_replace('&', '&amp;', $string);\n       // Change back the allowed entities in our entity whitelist\n       $string = preg_replace_callback('/&amp;([A-Za-z]{2,8}[0-9]{0,2});/', 'erLhcoreClassBBCode::wp_kses_named_entities', $string);\n       $string = preg_replace_callback('/&amp;#(0*[0-9]{1,7});/', 'erLhcoreClassBBCode::wp_kses_normalize_entities2', $string);\n       $string = preg_replace_callback('/&amp;#[Xx](0*[0-9A-Fa-f]{1,6});/', 'erLhcoreClassBBCode::wp_kses_normalize_entities3', $string);\n       return $string;\n   }\n   \n   /**\n    * Callback for wp_kses_normalize_entities() for regular expression.\n    *\n    * This function helps wp_kses_normalize_entities() to only accept valid Unicode\n    * numeric entities in hex form.\n    *\n    * @since 2.7.0\n    * @access private\n    *\n    * @param array $matches preg_replace_callback() matches array\n    * @return string Correctly encoded entity\n    */\n   public static function wp_kses_normalize_entities3($matches) {\n       if ( empty($matches[1]) )\n           return '';\n       $hexchars = $matches[1];\n       return ( ! self::valid_unicode( hexdec( $hexchars ) ) ) ? \"&amp;#x$hexchars;\" : '&#x'.ltrim($hexchars,'0').';';\n   }\n   \n   /**\n    * Helper function to determine if a Unicode value is valid.\n    *\n    * @since 2.7.0\n    *\n    * @param int $i Unicode value\n    * @return bool True if the value was a valid Unicode number\n    */\n   public static function valid_unicode($i) {\n       return ( $i == 0x9 || $i == 0xa || $i == 0xd ||\n           ($i >= 0x20 && $i <= 0xd7ff) ||\n           ($i >= 0xe000 && $i <= 0xfffd) ||\n           ($i >= 0x10000 && $i <= 0x10ffff) );\n   }\n   \n   /**\n    * Callback for wp_kses_normalize_entities() regular expression.\n    *\n    * This function helps wp_kses_normalize_entities() to only accept 16-bit\n    * values and nothing more for `&#number;` entities.\n    *\n    * @access private\n    * @since 1.0.0\n    *\n    * @param array $matches preg_replace_callback() matches array\n    * @return string Correctly encoded entity\n    */\n   public static function wp_kses_normalize_entities2($matches) {\n       if ( empty($matches[1]) )\n           return '';\n       $i = $matches[1];\n       if (self::valid_unicode($i)) {\n           $i = str_pad(ltrim($i,'0'), 3, '0', STR_PAD_LEFT);\n           $i = \"&#$i;\";\n       } else {\n           $i = \"&amp;#$i;\";\n       }\n       return $i;\n   }\n   \n   /**\n    * Callback for wp_kses_normalize_entities() regular expression.\n    *\n    * This function only accepts valid named entity references, which are finite,\n    * case-sensitive, and highly scrutinized by HTML and XML validators.\n    *\n    * @since 3.0.0\n    *\n    * @global array $allowedentitynames\n    *\n    * @param array $matches preg_replace_callback() matches array\n    * @return string Correctly encoded entity\n    */\n   public static function wp_kses_named_entities($matches) {       \n       $allowedentitynames = array(\n           'nbsp',    'iexcl',  'cent',    'pound',  'curren', 'yen',\n           'brvbar',  'sect',   'uml',     'copy',   'ordf',   'laquo',\n           'not',     'shy',    'reg',     'macr',   'deg',    'plusmn',\n           'acute',   'micro',  'para',    'middot', 'cedil',  'ordm',\n           'raquo',   'iquest', 'Agrave',  'Aacute', 'Acirc',  'Atilde',\n           'Auml',    'Aring',  'AElig',   'Ccedil', 'Egrave', 'Eacute',\n           'Ecirc',   'Euml',   'Igrave',  'Iacute', 'Icirc',  'Iuml',\n           'ETH',     'Ntilde', 'Ograve',  'Oacute', 'Ocirc',  'Otilde',\n           'Ouml',    'times',  'Oslash',  'Ugrave', 'Uacute', 'Ucirc',\n           'Uuml',    'Yacute', 'THORN',   'szlig',  'agrave', 'aacute',\n           'acirc',   'atilde', 'auml',    'aring',  'aelig',  'ccedil',\n           'egrave',  'eacute', 'ecirc',   'euml',   'igrave', 'iacute',\n           'icirc',   'iuml',   'eth',     'ntilde', 'ograve', 'oacute',\n           'ocirc',   'otilde', 'ouml',    'divide', 'oslash', 'ugrave',\n           'uacute',  'ucirc',  'uuml',    'yacute', 'thorn',  'yuml',\n           'quot',    'amp',    'lt',      'gt',     'apos',   'OElig',\n           'oelig',   'Scaron', 'scaron',  'Yuml',   'circ',   'tilde',\n           'ensp',    'emsp',   'thinsp',  'zwnj',   'zwj',    'lrm',\n           'rlm',     'ndash',  'mdash',   'lsquo',  'rsquo',  'sbquo',\n           'ldquo',   'rdquo',  'bdquo',   'dagger', 'Dagger', 'permil',\n           'lsaquo',  'rsaquo', 'euro',    'fnof',   'Alpha',  'Beta',\n           'Gamma',   'Delta',  'Epsilon', 'Zeta',   'Eta',    'Theta',\n           'Iota',    'Kappa',  'Lambda',  'Mu',     'Nu',     'Xi',\n           'Omicron', 'Pi',     'Rho',     'Sigma',  'Tau',    'Upsilon',\n           'Phi',     'Chi',    'Psi',     'Omega',  'alpha',  'beta',\n           'gamma',   'delta',  'epsilon', 'zeta',   'eta',    'theta',\n           'iota',    'kappa',  'lambda',  'mu',     'nu',     'xi',\n           'omicron', 'pi',     'rho',     'sigmaf', 'sigma',  'tau',\n           'upsilon', 'phi',    'chi',     'psi',    'omega',  'thetasym',\n           'upsih',   'piv',    'bull',    'hellip', 'prime',  'Prime',\n           'oline',   'frasl',  'weierp',  'image',  'real',   'trade',\n           'alefsym', 'larr',   'uarr',    'rarr',   'darr',   'harr',\n           'crarr',   'lArr',   'uArr',    'rArr',   'dArr',   'hArr',\n           'forall',  'part',   'exist',   'empty',  'nabla',  'isin',\n           'notin',   'ni',     'prod',    'sum',    'minus',  'lowast',\n           'radic',   'prop',   'infin',   'ang',    'and',    'or',\n           'cap',     'cup',    'int',     'sim',    'cong',   'asymp',\n           'ne',      'equiv',  'le',      'ge',     'sub',    'sup',\n           'nsub',    'sube',   'supe',    'oplus',  'otimes', 'perp',\n           'sdot',    'lceil',  'rceil',   'lfloor', 'rfloor', 'lang',\n           'rang',    'loz',    'spades',  'clubs',  'hearts', 'diams',\n           'sup1',    'sup2',   'sup3',    'frac14', 'frac12', 'frac34',\n           'there4',\n       );\n       \n       if ( empty($matches[1]) )\n           return '';\n       $i = $matches[1];\n       return ( ! in_array( $i, $allowedentitynames ) ) ? \"&amp;$i;\" : \"&$i;\";\n   }\n   \n   /**\n    * Sanitize string from bad protocols.\n    *\n    * This function removes all non-allowed protocols from the beginning of\n    * $string. It ignores whitespace and the case of the letters, and it does\n    * understand HTML entities. It does its work in a while loop, so it won't be\n    * fooled by a string like \"javascript:javascript:alert(57)\".\n    *\n    * @since 1.0.0\n    *\n    * @param string $string            Content to filter bad protocols from\n    * @param array  $allowed_protocols Allowed protocols to keep\n    * @return string Filtered content\n    */\n   public static function wp_kses_bad_protocol($string, $allowed_protocols) {\n       $string = self::wp_kses_no_null($string);\n       $iterations = 0;\n       do {\n           $original_string = $string;\n           $string = self::wp_kses_bad_protocol_once($string, $allowed_protocols);\n       } while ( $original_string != $string && ++$iterations < 6 );\n       if ( $original_string != $string )\n           return '';\n       return $string;\n   }\n   \n   /**\n    * Removes any invalid control characters in $string.\n    *\n    * Also removes any instance of the '\\0' string.\n    *\n    * @since 1.0.0\n    *\n    * @param string $string\n    * @param array $options Set 'slash_zero' => 'keep' when '\\0' is allowed. Default is 'remove'.\n    * @return string\n    */\n   public static function wp_kses_no_null( $string, $options = null ) {\n       if ( ! isset( $options['slash_zero'] ) ) {\n           $options = array( 'slash_zero' => 'remove' );\n       }\n       $string = preg_replace( '/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F]/', '', $string );\n       if ( 'remove' == $options['slash_zero'] ) {\n           $string = preg_replace( '/\\\\\\\\+0+/', '', $string );\n       }\n       return $string;\n   }\n   \n   /**\n    * Sanitizes content from bad protocols and other characters.\n    *\n    * This function searches for URL protocols at the beginning of $string, while\n    * handling whitespace and HTML entities.\n    *\n    * @since 1.0.0\n    *\n    * @param string $string            Content to check for bad protocols\n    * @param string $allowed_protocols Allowed protocols\n    * @return string Sanitized content\n    */\n   public static function wp_kses_bad_protocol_once($string, $allowed_protocols, $count = 1 ) {\n       $string2 = preg_split( '/:|&#0*58;|&#x0*3a;/i', $string, 2 );\n       if ( isset($string2[1]) && ! preg_match('%/\\?%', $string2[0]) ) {\n           $string = trim( $string2[1] );\n           $protocol = self::wp_kses_bad_protocol_once2( $string2[0], $allowed_protocols );\n           if ( 'feed:' == $protocol ) {\n               if ( $count > 2 )\n                   return '';\n               $string = self::wp_kses_bad_protocol_once( $string, $allowed_protocols, ++$count );\n               if ( empty( $string ) )\n                   return $string;\n           }\n           $string = $protocol . $string;\n       }\n       return $string;\n   }\n   \n   \n   /**\n    * Callback for wp_kses_bad_protocol_once() regular expression.\n    *\n    * This function processes URL protocols, checks to see if they're in the\n    * whitelist or not, and returns different data depending on the answer.\n    *\n    * @access private\n    * @since 1.0.0\n    *\n    * @param string $string            URI scheme to check against the whitelist\n    * @param string $allowed_protocols Allowed protocols\n    * @return string Sanitized content\n    */\n   public static function wp_kses_bad_protocol_once2( $string, $allowed_protocols ) {\n       $string2 = self::wp_kses_decode_entities($string);\n       $string2 = preg_replace('/\\s/', '', $string2);\n       $string2 = self::wp_kses_no_null($string2);\n       $string2 = strtolower($string2);\n       $allowed = false;\n       foreach ( (array) $allowed_protocols as $one_protocol )\n           if ( strtolower($one_protocol) == $string2 ) {\n               $allowed = true;\n               break;\n           }\n       if ($allowed)\n           return \"$string2:\";\n       else\n           return '';\n   }\n   \n   /**\n    * Convert all entities to their character counterparts.\n    *\n    * This function decodes numeric HTML entities (`&#65;` and `&#x41;`).\n    * It doesn't do anything with other entities like &auml;, but we don't\n    * need them in the URL protocol whitelisting system anyway.\n    *\n    * @since 1.0.0\n    *\n    * @param string $string Content to change entities\n    * @return string Content after decoded entities\n    */\n   public static function wp_kses_decode_entities($string) {\n       $string = preg_replace_callback('/&#([0-9]+);/', 'erLhcoreClassBBCode::_wp_kses_decode_entities_chr', $string);\n       $string = preg_replace_callback('/&#[Xx]([0-9A-Fa-f]+);/', 'erLhcoreClassBBCode::_wp_kses_decode_entities_chr_hexdec', $string);\n       return $string;\n   }\n   \n   /**\n    * Regex callback for wp_kses_decode_entities()\n    *\n    * @since 2.9.0\n    *\n    * @param array $match preg match\n    * @return string\n    */\n   public static function _wp_kses_decode_entities_chr( $match ) {\n       return chr( $match[1] );\n   }\n   /**\n    * Regex callback for wp_kses_decode_entities()\n    *\n    * @since 2.9.0\n    *\n    * @param array $match preg match\n    * @return string\n    */\n   public static function _wp_kses_decode_entities_chr_hexdec( $match ) {\n       return chr( hexdec( $match[1] ) );\n   }\n   \n\n   /**\n    * Perform a deep string replace operation to ensure the values in $search are no longer present\n    *\n    * Repeats the replacement operation until it no longer replaces anything so as to remove \"nested\" values\n    * e.g. $subject = '%0%0%0DDD', $search ='%0D', $result ='' rather than the '%0%0DD' that\n    * str_replace would return\n    *\n    * @since 2.8.1\n    * @access private\n    *\n    * @param string|array $search  The value being searched for, otherwise known as the needle.\n    *                              An array may be used to designate multiple needles.\n    * @param string       $subject The string being searched and replaced on, otherwise known as the haystack.\n    * @return string The string with the replaced svalues.\n    */\n   public static function _deep_replace( $search, $subject ) {\n       $subject = (string) $subject;\n       $count = 1;\n       while ( $count ) {\n           $subject = str_replace( $search, '', $subject, $count );\n       }\n       return $subject;\n   }\n\n   public static $replaceEmoji = array(\n       ':\\)' => \"\\u{1F642}\",\n       ':D:' => \"\\u{1F600}\",\n       ':D' => \"\\u{1F600}\",\n       ':\\(' => \"\\u{1F641}\",\n       ':o:' => \"\\u{1F62E}\",\n       ':o' => \"\\u{1F62E}\",\n       ':p:' => \"\\u{1F61B}\",\n       ':p' => \"\\u{1F61B}\",\n       ';\\)' => \"\\u{1F609}\",\n       ';\\(' => \"\\u{1F622}\",\n       ':x' => \"\\u{1F910}\",\n       ':\\*' => \"\\u{1F617}\",\n       ';\\*' => \"\\u{1F618}\",\n       ':\\/' => \"\\u{1F615}\"\n   );\n\n   public static function parseEmoji($text) {\n\n       // Smileys to find...\n       for ($i = 0; $i < 2; $i++) {\n           $text = preg_replace_callback('/(^|\\s)(' .implode(\"|\",array_keys(self::$replaceEmoji)) . ')(\\s|$)/', function($match) {\n               $char = str_replace(array('/','(',')','*'),array('\\/','\\(','\\)','\\*'),$match[2]);\n               return $match[1] . erLhcoreClassBBCode::$replaceEmoji[$char] . $match[3];\n           },  $text);\n       }\n\n       return $text;\n   }\n\n   public static function BBCode2Html($text) {\n    \t$text = trim($text);\n\n       $text = self::parseEmoji($text);\n\n       // Smileys to find...\n       $in = array(\n       );\n\n       // And replace them by...\n       $out = array(\n       );\n    \t\n    \t$in[] = '[/*]';\n    \t$in[] = '[*]';\n    \t$out[] = '</li>';\n    \t$out[] = '<li>';\n    \t    \t\n    \t$text = str_replace($in, $out, $text);\n\n    \t// BBCode to find...\n    \t$in = array( \t '/\\[b\\](.*?)\\[\\/b\\]/ms',\n    \t\t\t\t\t '/\\[i\\](.*?)\\[\\/i\\]/ms',\n    \t\t\t\t\t '/\\[u\\](.*?)\\[\\/u\\]/ms',\n    \t\t\t\t\t '/\\[mark\\](.*?)\\[\\/mark\\]/ms',\n    \t\t\t\t\t '/\\[s\\](.*?)\\[\\/s\\]/ms',\n    \t\t\t\t\t '/\\[list\\=([0-9]+)\\](.*?)\\[\\/list\\]/ms',\n    \t\t\t\t\t '/\\[list\\](.*?)\\[\\/list\\]/ms',\n    \t\t\t\t\t '/\\[\\*\\]\\s?(.*?)\\n/ms',\n    \t\t\t\t\t '/\\[fs([0-9]+)\\](.*?)\\[\\/fs\\]/ms',\n    \t\t\t\t\t '/\\[color\\=([A-Za-z0-9]{2,6})\\](.*?)\\[\\/color\\]/ms',\n    \t\t\t\t\t '/\\[level\\=([A-Za-z0-9\\-\\s]{2,60})\\](.*?)\\[\\/level\\]/ms'\n    \t);\n\n    \t// And replace them by...\n    \t$out = array(\t '<strong>\\1</strong>',\n    \t\t\t\t\t '<em>\\1</em>',\n    \t\t\t\t\t '<u>\\1</u>',\n    \t\t\t\t\t '<mark>\\1</mark>',\n    \t\t\t\t\t '<strike>\\1</strike>',\n    \t\t\t\t\t '<ol class=\"default-list\" start=\"\\1\">\\2</ol>',\n    \t\t\t\t\t '<ul class=\"default-list\" >\\1</ul>',\n    \t\t\t\t\t '<li>\\1</li>',\n    \t\t\t\t\t '<span style=\"font-size:\\1pt\">\\2</span>',\n    \t\t\t\t\t '<span style=\"color:#\\1\">\\2</span>',\n    \t\t\t\t\t '<span class=\"\\1\">\\2</span>'\n    \t);\n\n    \t$text = preg_replace($in, $out, $text);\n\n    \t// Prepare quote's\n    \t$text = str_replace(\"\\r\\n\",\"\\n\",$text);\n\n    \t// paragraphs\n    \t$text = str_replace(\"\\r\", \"\", $text);\n    \t$text = nl2br($text);\n\n    \t// clean some tags to remain strict\n    \t// not very elegant, but it works. No time to do better ;)\n    \tif (!function_exists('removeBr')) {\n    \t\tfunction removeBr($s) {\n    \t\t\treturn str_replace(\"<br />\", \"\", $s[0]);\n    \t\t}\n    \t}\n\n    \t$text = preg_replace_callback('/<pre>(.*?)<\\/pre>/ms', \"removeBr\", $text);\n    \t$text = preg_replace('/<p><pre>(.*?)<\\/pre><\\/p>/ms', \"<pre>\\\\1</pre>\", $text);\n\n    \t$text = preg_replace_callback('/<ul>(.*?)<\\/ul>/ms', \"removeBr\", $text);\n    \t$text = preg_replace('/<p><ul>(.*?)<\\/ul><\\/p>/ms', \"<ul>\\\\1</ul>\", $text);\n\n    \treturn $text;\n    }\n\n    public static function _make_url_embed_image($matches) {\n\n        $in = htmlspecialchars_decode($matches[2]);\n        $in = trim($in);\n\n        $url = self::esc_url($in);\n        if ( empty($url) )\n            return '[img]' . $matches[2] . '[img]';\n\n        $prepend = '';\n        $append = '';\n        if (isset($matches[1]) && $matches[1] != '' && !empty(self::esc_url($matches[1]))) {\n            $prepend = '<a class=\"link\" rel=\"noreferrer\" target=\"_blank\" href=\"' . $matches[1] . '\">';\n            $append = '</a>';\n        }\n\n        return  \"<div class=\\\"img_embed\\\">{$prepend}<img title=\\\"\\\" onclick='lhinst.zoomImage()' class='action-image img-fluid' src=\\\"\".$url.\"\\\" alt=\\\"\\\" />{$append}</div>\";\n   }\n\n   public static function _make_embed_map($matches)\n   {\n       $parts = explode(',',trim($matches[1]));\n\n       if (count($parts) == 2 && is_numeric($parts[0]) && is_numeric($parts[1])) {\n           $id = rand(0,1000) . time();\n           return \"<div id='msg-location-\".$id.\"' style='height:300px'><script>lhinst.showMessageLocation(\" . $id . \",\" . (float)$parts[0] . \",\" . (float)$parts[1] . \")</script></div>\";\n       }\n\n       return ;\n   }\n\n   public static function _make_url_embed($matches){\n\n        $in = str_replace('\"','',htmlspecialchars_decode($matches[1]));\n        $in = trim($in);\n        \n        $url = self::esc_url($in);\n        if ( empty($url) )\n            return '[url='.$matches[1].']' . $matches[2] . '[/url]';\n\t\t\t\t\n        return '<a class=\"link\" target=\"_blank\" rel=\"noreferrer\" href=\"'.$url.'\">' . $matches[2] . '</a>';\n   }\n      \n   /**\n    * Callback to convert URL match to HTML A element.\n    *\n    * This function was backported from 2.5.0 to 2.3.2. Regex callback for make_clickable().\n    *\n    * @since 2.3.2\n    * @access private\n    *\n    * @param array $matches Single Regex Match.\n    * @return string HTML A element with URL address.\n    */\n   public static function _make_web_ftp_clickable_cb( $matches ) {\n       $ret = '';\n       $dest = $matches[2];\n       $dest = 'http://' . $dest;\n       // removed trailing [.,;:)] from URL\n       if ( in_array( substr($dest, -1), array('.', ',', ';', ':', ')') ) === true ) {\n           $ret = substr($dest, -1);\n           $dest = substr($dest, 0, strlen($dest)-1);\n       }\n       $dest = self::esc_url($dest);\n       if ( empty($dest) )\n           return $matches[0];\n       \n       return $matches[1] . \"<a href=\\\"$dest\\\" class=\\\"link\\\" rel=\\\"noreferrer\\\" target=\\\"_blank\\\">$dest</a>$ret\";\n   }\n   \n   /**\n     * Callback to convert email address match to HTML A element.\n     *\n     * This function was backported from 2.5.0 to 2.3.2. Regex callback for make_clickable().\n     *\n     * @since 2.3.2\n     * @access private\n     *\n     * @param array $matches Single Regex Match.\n     * @return string HTML A element with email address.\n     */\n   public static function _make_email_clickable_cb( $matches ) {\n    \t$email = $matches[2] . '@' . $matches[3];\n    \treturn $matches[1] . \"<a rel=\\\"noreferrer\\\" class=\\\"link\\\" href=\\\"mailto:$email\\\">$email</a>\";\n   }\n\n   \n   public static function _make_paypal_button($matches){\n\n         if (filter_var($matches[1],FILTER_VALIDATE_EMAIL)) {\n            return '<form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\">\n            <input type=\"hidden\" name=\"cmd\" value=\"_donations\">\n            <input type=\"hidden\" name=\"business\" value=\"'.$matches[1].'\">\n            <input type=\"hidden\" name=\"lc\" value=\"US\">\n            <input type=\"hidden\" name=\"no_note\" value=\"0\">\n            <input type=\"hidden\" name=\"currency_code\" value=\"USD\">\n            <input type=\"hidden\" name=\"bn\" value=\"PP-DonationsBF:btn_donate_SM.gif:NonHostedGuest\">\n            <input type=\"image\" title=\"Support an artist\" src=\"https://www.paypalobjects.com/WEBSCR-640-20110306-1/en_US/i/btn/btn_donate_SM.gif\" border=\"0\" name=\"submit\" alt=\"PayPal - The safer, easier way to pay online!\">\n            <img alt=\"\" border=\"0\" src=\"https://www.paypalobjects.com/WEBSCR-640-20110306-1/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\">\n            </form>';\n        } else {\n            return $matches[0];\n        }\n   }\n\n   public static function _make_button_action($matches) {\n        return \"<button type=\\\"button\\\" class=\\\"btn btn-xs text-white fs13 btn-secondary\\\" onclick=\\\"lhinst.buttonAction($(this),'\" . htmlspecialchars(strip_tags($matches[1])) . \"')\\\">\" . htmlspecialchars($matches[2]) . \"</button>\";\n   }\n\n   public static function _make_link_trigger($matches) {\n       return \"<a class=\\\"action-image link-trigger-button\\\" data-id=\\\"{msg_id}\\\" data-payload=\\\"\".htmlspecialchars(strip_tags($matches[1])).\"\\\" onclick='lhinst.updateTriggerClicked(\\\"\".htmlspecialchars(strip_tags($matches[1])).\"\\\",{msg_id},$(this))'>\" . htmlspecialchars($matches[2]) . \"</a>\";\n   }\n\n   public static function _make_youtube_block($matches) {\n\n         $data = parse_url($matches[1]);\n\n         if (isset($data['query'])){\n             parse_str($data['query'],$query);\n             if (stristr($data['host'],'youtube.com') && isset($query['v']) && ($query['v'] != '')) {\n                 return '<iframe class=\"w-100 h-100\" title=\"YouTube video player\" width=\"480\" height=\"300\" src=\"https://www.youtube.com/embed/'.urlencode($query['v']).'\" frameborder=\"0\" allowfullscreen></iframe>';\n             } else {\n                 return $matches[0];\n             }\n         } else {\n             return $matches[0];\n         }\n   }\n\n   public static function getHost() {\n\n       if (isset($_SERVER['HTTP_HOST'])) {\n           $site_address = (erLhcoreClassSystem::$httpsMode == true ? 'https:' : 'http:') . '//' . $_SERVER['HTTP_HOST'] ;\n       } else if (class_exists('erLhcoreClassInstance')) {\n           $site_address = 'https://' . erLhcoreClassInstance::$instanceChat->address . '.' . erConfigClassLhConfig::getInstance()->getSetting( 'site', 'seller_domain');\n       } else if (class_exists('erLhcoreClassExtensionLhcphpresque')) {\n           $site_address = erLhcoreClassModule::getExtensionInstance('erLhcoreClassExtensionLhcphpresque')->settings['site_address'];\n       } else {\n           $site_address = '';\n       }\n\n       return $site_address;\n   }\n\n   public static function _make_upload_link($matches){\n       $data = $matches[1];\n       return '<a class=\"action-image alert-link\" onclick=\"lhinst.chooseFile()\">' . htmlspecialchars($data) . '</a>';\n   }\n\n   public static function _make_base_link($matches) {\n       $data = htmlspecialchars($matches[1]);\n       $url = self::getHost() . erLhcoreClassDesign::baseurl($data);\n       return  $url;\n   }\n\n   public static function _make_url_file($matches)\n   {\n\n   \t\tif (isset($matches[1])){\n   \t\t    $mainData = explode(' ',$matches[1]);\n   \t\t    $parts = explode('_',$mainData[0]);\n   \t\t\t$fileID = $parts[0];\n   \t\t\t$hash = $parts[1];\n   \t\t\t$displayType = isset($parts[2]) ? $parts[2] : null;\n   \t\t\ttry {\n   \t\t\t\t$file = erLhcoreClassModelChatFile::fetch($fileID);\n\n   \t\t\t\tif (is_object($file)) {\n                    // Check that user has permission to see the chat. Let say if user purposely types file bbcode\n                    if ($hash == $file->security_hash) {\n                        $fileExtension = strtolower($file->extension);\n                        if (in_array($fileExtension,['jfif','jpg','jpeg','png','gif'])){\n\n                            // Make link if required\n                            $prepend = '';\n                            $append = '';\n                            if (isset($mainData[1])) {\n                                $subpartParts = explode('=',$mainData[1]);\n                                if ($subpartParts[0] == 'link') {\n                                    if (!isset($subpartParts[1])) {\n                                        $prepend = '<a class=\"link\" rel=\"noreferrer\" target=\"_blank\" href=\"'. self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}/(inline)/true\\\">\";\n                                        $append = '</a>';\n                                    } else {\n                                        $url = self::esc_url($subpartParts[1]);\n                                        if ($url != ''){\n                                            $prepend = '<a class=\"link\" rel=\"noreferrer\" target=\"_blank\" href=\"' . self::esc_url($subpartParts[1]) . '\">';\n                                            $append = '</a>';\n                                        }\n                                    }\n                                }\n                            } else {\n                                $prepend = '<div class=\"position-relative\">';\n                                $append = '<a class=\"hidden-download\" target=\"_blank\" rel=\"noreferrer\" href=\"'. self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\".'/(inline)/true\"></a></div>';\n                            }\n                            return $prepend . '<img onclick=\"lhinst.zoomImage()\" id=\"img-file-' . $file->id . '\" title=\"'.htmlspecialchars($file->upload_name).'\" class=\"action-image img-fluid\" src=\"' . self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\" . '\" alt=\"'.htmlspecialchars($file->upload_name).'\" />' . $append;\n                        }\n\n                        $audio = '';\n                        if (in_array($fileExtension,['mp3','wav','ogg','oga'])) {\n                            return '<a rel=\"noreferrer\" class=\"hidden-download audio-download\" href=\"'. self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\".'\"></a><audio preload=\"none\" style=\"width: 230px\" controls><source src=\"' . self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\" . '\" type=\"' . $file->type . '\"></audio>';\n                        } elseif (in_array($fileExtension,['mp4','avi','mov','ogg','3gpp'])) {\n                            $audio = '<br><div class=\"embed-responsive embed-responsive-16by9\"><video class=\"embed-responsive-item\" controls><source src=\"' . self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\" . '\"></video></div>';\n                        }\n\n                        return \"<a href=\\\"\" . self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\" class=\\\"link\\\" >\" . erTranslationClassLhTranslation::getInstance()->getTranslation('file/file', 'Download file') . ' - ' . htmlspecialchars($file->upload_name) . ' [' . $file->extension . ']' . \"</a>\" . $audio;\n                    }\n                }\n\n   \t\t\t} catch (Exception $e) {\n\n   \t\t\t}\n\n   \t\t\treturn '';\n   \t\t}\n   \t\treturn '';\n   }\n\n   public static function _make_url_survey($matches)\n   {\n       if (isset($matches[1])){\n                  \n           list($surveyId, $surveyItemId) = explode('_',str_replace(array('\"','&quot;'),'', $matches[1]));\n           \n           try {\n                             \n               if (is_numeric($surveyItemId) && is_numeric($surveyId)) {\n\n                   $surveyItem = erLhAbstractModelSurveyItem::fetch($surveyItemId);\n\n                   if ($surveyId == $surveyItem->survey_id) \n                   {\n                       $survey = erLhAbstractModelSurvey::fetch($surveyId);\n                       return \"<a href=\\\"\" . self::getHost()  . erLhcoreClassDesign::baseurl('survey/collected').\"/{$survey->id}?show={$surveyItem->id}\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\" class=\\\"link\\\" >\" . erTranslationClassLhTranslation::getInstance()->getTranslation('file/file','Collected survey data') . ' - ' . htmlspecialchars($survey->name) . \"</a>\";\n                   }\n               }\n               \n           } catch (Exception $e) {\n       \n           }\n       \n           return '';\n       }\n       return '';\n   }\n   \n   public static function _make_url_mail_file($matches){\n\n   \t\tif (isset($matches[1])){\n   \t\t\tlist($fileID,$hash) = explode('_',$matches[1]);\n   \t\t\ttry {\n   \t\t\t\t$file = erLhcoreClassModelChatFile::fetch($fileID);\n\n   \t\t\t\t// Check that user has permission to see the chat. Let say if user purposely types file bbcode\n   \t\t\t\tif ($hash == $file->security_hash) {\n   \t\t\t\t\treturn self::getHost() . erLhcoreClassDesign::baseurldirect('file/downloadfile').\"/{$file->id}/{$hash}\";\n   \t\t\t\t}\n   \t\t\t} catch (Exception $e) {\n\n   \t\t\t}\n\n   \t\t\treturn '';\n   \t\t}\n   \t\treturn '';\n   }\n\n   public static function _split_str_by_whitespace( $string, $goal ) {\n        $chunks = array();\n\n        $string_nullspace = strtr( $string, \"\\r\\n\\t\\v\\f \", \"\\000\\000\\000\\000\\000\\000\" );\n\n        while ( $goal < strlen( $string_nullspace ) ) {\n            $pos = strrpos( substr( $string_nullspace, 0, $goal + 1 ), \"\\000\" );\n\n            if ( false === $pos ) {\n                $pos = strpos( $string_nullspace, \"\\000\", $goal + 1 );\n                if ( false === $pos ) {\n                    break;\n                }\n            }\n\n            $chunks[] = substr( $string, 0, $pos + 1 );\n            $string = substr( $string, $pos + 1 );\n            $string_nullspace = substr( $string_nullspace, $pos + 1 );\n        }\n\n        if ( $string ) {\n            $chunks[] = $string;\n        }\n\n        return $chunks;\n    }\n\n   // https://github.com/WordPress/WordPress/blob/6e5e29c5bf49ad2be6a2c3a3d4fb3f5af6853b5b/wp-includes/formatting.php\n   public static function make_clickable_text( $text ) {\n       $r = '';\n       $textarr = preg_split( '/(<[^<>]+>)/', $text, -1, PREG_SPLIT_DELIM_CAPTURE ); // split out HTML tags\n       $nested_code_pre = 0; // Keep track of how many levels link is nested inside <pre> or <code>\n       foreach ( $textarr as $piece ) {\n           if ( preg_match( '|^<code[\\s>]|i', $piece ) || preg_match( '|^<pre[\\s>]|i', $piece ) || preg_match( '|^<script[\\s>]|i', $piece ) || preg_match( '|^<style[\\s>]|i', $piece ) )\n               $nested_code_pre++;\n           elseif ( $nested_code_pre && ( '</code>' === strtolower( $piece ) || '</pre>' === strtolower( $piece ) || '</script>' === strtolower( $piece ) || '</style>' === strtolower( $piece ) ) )\n           $nested_code_pre--;\n           if ( $nested_code_pre || empty( $piece ) || ( $piece[0] === '<' && ! preg_match( '|^<\\s*[\\w]{1,20}+://|', $piece ) ) ) {\n               $r .= $piece;\n               continue;\n           }\n           // Long strings might contain expensive edge cases ...\n           if ( 10000 < strlen( $piece ) ) {\n               // ... break it up\n               foreach ( self::_split_str_by_whitespace( $piece, 2100 ) as $chunk ) { // 2100: Extra room for scheme and leading and trailing paretheses\n                   if ( 2101 < strlen( $chunk ) ) {\n                       $r .= $chunk; // Too big, no whitespace: bail.\n                   } else {\n                       $r .= self::make_clickable_text( $chunk );\n                   }\n               }\n           } else {\n               $ret = \" $piece \"; // Pad with whitespace to simplify the regexes\n               $url_clickable = '~\n\t\t\t\t([\\\\s(<.,;:!?])                                        # 1: Leading whitespace, or punctuation\n\t\t\t\t(                                                      # 2: URL\n\t\t\t\t\t[\\\\w]{1,20}+://                                # Scheme and hier-part prefix\n\t\t\t\t\t(?=\\S{1,2000}\\s)                               # Limit to URLs less than about 2000 characters long\n\t\t\t\t\t[\\\\w\\\\x80-\\\\xff#%\\\\~/@\\\\[\\\\]*(+=&$-]*+         # Non-punctuation URL character\n\t\t\t\t\t(?:                                            # Unroll the Loop: Only allow puctuation URL character if followed by a non-punctuation URL character\n\t\t\t\t\t\t[\\'.,;:!?)]                            # Punctuation URL character\n\t\t\t\t\t\t[\\\\w\\\\x80-\\\\xff#%\\\\~/@\\\\[\\\\]*(+=&$-]++ # Non-punctuation URL character\n\t\t\t\t\t)*\n\t\t\t\t)\n\t\t\t\t(\\)?)                                                  # 3: Trailing closing parenthesis (for parethesis balancing post processing)\n\t\t\t~xS'; // The regex is a non-anchored pattern and does not have a single fixed starting character.\n               // Tell PCRE to spend more time optimizing since, when used on a page load, it will probably be used several times.\n               $ret = preg_replace_callback( $url_clickable, 'erLhcoreClassBBCode::_make_url_clickable_cb', $ret );\n               $ret = preg_replace_callback( '#([\\s>])((www|ftp)\\.[\\w\\\\x80-\\\\xff\\#$%&~/.\\-;:=,?@\\[\\]+]+)#is', 'erLhcoreClassBBCode::_make_web_ftp_clickable_cb', $ret );\n               $ret = preg_replace_callback( '#([\\s>])([.0-9a-z_+-]+)@(([0-9a-z-]+\\.)+[0-9a-z]{2,})#i', 'erLhcoreClassBBCode::_make_email_clickable_cb', $ret );\n               $ret = substr( $ret, 1, -1 ); // Remove our whitespace padding.\n               $r .= $ret;\n           }\n       }\n       \n       // Cleanup of accidental links within links\n       return preg_replace( '#(<a([ \\r\\n\\t]+[^>]+?>|>))<a [^>]+?>([^>]+?)</a></a>#i', \"$1$3</a>\", $r );\n   }\n\n   public static function makeQuote($matches)\n   {\n       if ($matches[1]) {\n           return '<blockquote class=\"blockquote\"> ' . $matches[1] . ' </blockquote>';\n       } else {\n           return $matches[0];\n       }\n   }\n\n   public static function extractMetaByMessage(& $msg) {\n       $meta = array();\n       if (strpos($msg,'[html_snippet]') !== false) {\n           $matches = array();\n           preg_match_all('/\\[html_snippet\\](.*?)\\[\\/html_snippet\\]/is',$msg,$matches);\n           foreach ($matches[0] as $index => $match) {\n               $msg = str_replace($match,'',$msg);\n               $meta['html_snippet'][] = $matches[1][$index];\n           }\n       }\n       return $meta;\n   }\n\n   public static function makeSubmessages($msg, $paramsMessage = array()) {\n\n       $replacer = 'IMG_REPLACE';\n\n       if (strpos($msg,'[quote]') !== false) {\n           $replacer = '';\n       }\n\n        // Links wraps images\n       $msg = preg_replace('#\\[url\\=\"?(.*?)\"?\\]\\[file=\"?(.*?)_img\"?\\]\\[\\/url\\]#is','[file=\\2_img link=\\1]',$msg);\n\n       // pure files\n       $msg = preg_replace('#\\[file=\"?(.*?)_img\"?(.*?)\\]#is',$replacer.'[file=\\1_img\\2]'.$replacer,$msg);\n\n       // Images within links\n       $msg = preg_replace('#\\[url\\=\"?(.*?)\"?\\]\\[img\\](.*?)\\[\\/img\\]\\[\\/url\\]#is','[img=\\1]\\2[/img]',$msg);\n\n       // Pure images\n       $msg = preg_replace('#\\[img(.*?)\\](.*?)\\[\\/img\\]#is',$replacer.'[img\\1]\\2[/img]'.$replacer,$msg);\n\n       $msg = trim($msg);\n\n       if (strpos($msg,'IMG_REPLACE') !== false) {\n           $messages = array_filter(explode('IMG_REPLACE', $msg), function($v) {\n               return $v != \"\";\n           });\n           $totalMessages = count($messages);\n       } else {\n           $totalMessages = 1;\n           $messages = [$msg];\n       }\n\n       $messagesData = array();\n       foreach ($messages as $indexMessage => $message) {\n           if (trim($message) != '')\n           {\n               $msgRendered = erLhcoreClassBBCode::make_clickable(htmlspecialchars($message), $paramsMessage);\n\n               $messagesDataItem['body'] = $msgRendered;\n               $messagesDataItem['flags'] = [];\n\n               $msgRenderedMedia = strip_tags($msgRendered);\n               $emojiMessage = trim(preg_replace('#([\\x{2B50}-\\x{2B55}]|[\\x{23F0}-\\x{23F3}]|[\\x{231A}-\\x{231B}]|[\\x{1F600}-\\x{1F64F}]|[\\x{1F910}-\\x{1F9FF}]|[\\x{1F300}-\\x{1F5FF}]|[\\x{1F680}-\\x{1F6FF}]|[\\x{2600}-\\x{26FF}]|[\\x{2700}-\\x{27BF}])#u','', $msgRendered));\n\n               if ($msgRenderedMedia == '') {\n                   $messagesDataItem['flags'][] = 'img';\n               }\n\n               if ($emojiMessage == '') {\n                   $messagesDataItem['flags'][] = 'emoji';\n               }\n\n                // New line at the top of message and it's not the first message\n               if (substr($message,0,1) == \"\\n\" && $indexMessage > 0) {\n                   $messagesDataItem['flags'][] = 'nlt';\n               }\n\n               // New line at the end of message and it's not the last message\n               if (substr($message,-1) == \"\\n\" && $indexMessage + 1 != $totalMessages) {\n                   $messagesDataItem['flags'][] = 'nl';\n               }\n\n               $messagesData[] = $messagesDataItem;\n           }\n       }\n\n       return $messagesData;\n   }\n\n   // Converts bbcode and general links to hmtl code\n   public static function make_clickable($ret, $paramsMessage = array()) {\n        $ret = ' ' . $ret;\n\n        $makeLinksClickable = true;\n        \n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_make_clickable',array('msg' => & $ret, 'makeLinksClickable' => & $makeLinksClickable));\n\n        // Make base URL\n        $ret = preg_replace_callback('#\\[baseurl\\](.*?)\\[/baseurl\\]#is', 'erLhcoreClassBBCode::_make_base_link', $ret);\n\n        $ret = preg_replace_callback('/\\[img=?(.*?)\\](.*?)\\[\\/img\\]/ms', \"erLhcoreClassBBCode::_make_url_embed_image\", $ret);\n\n        $ret = preg_replace_callback('/\\[loc\\](.*?)\\[\\/loc\\]/ms', \"erLhcoreClassBBCode::_make_embed_map\", $ret);\n\n        $ret = preg_replace_callback('/\\[url\\=\"?(.*?)\"?\\](.*?)\\[\\/url\\]/ms', \"erLhcoreClassBBCode::_make_url_embed\", $ret);\n\n        if (isset($paramsMessage['sender']) && $paramsMessage['sender'] == 0) {\n            $ret = preg_replace('/\\[html\\](.*?)\\[\\/html\\]/ms','',$ret);\n        } else if (isset($paramsMessage['html_as_text']) && $paramsMessage['html_as_text'] == true) {\n            $ret = preg_replace_callback('/\\[html\\](.*?)\\[\\/html\\]/ms', function ($matches) {\n                return '<code class=\"rounded mx170 text-white\">'.trim($matches[1]).'</code>';\n            }, $ret);\n        }\n\n        $ret = preg_replace_callback('/\\[html\\](.*?)\\[\\/html\\]/ms', function ($matches) use ($paramsMessage) {\n            $html = htmlspecialchars_decode($matches[1]);\n\n            $html = preg_replace_callback('/\"window\\.parent\\.(.*)\"/ms',function ($matches){\n                return \"'lhinst.executeRemoteCommands([\\\"lhc_eval:\" . $matches[1] . \"\\\"])'\";\n            },$html);\n\n            // Remove JS if it's not the first run\n            if (!isset($paramsMessage['render_js']) || $paramsMessage['render_js'] == false) {\n                $html = preg_replace(\"/<script.*?\\/script>/s\", \"\", $html);\n            }\n\n            return $html;\n\n        }, $ret);\n\n\n        if ($makeLinksClickable) {\n            $ret = self::make_clickable_text($ret);           \n        }\n\n    \t$ret = self::BBCode2Html($ret);\n\n    \t// Paypal button\n    \t$ret = preg_replace_callback('#\\[paypal\\](.*?)\\[/paypal\\]#is', 'erLhcoreClassBBCode::_make_paypal_button', $ret);\n\n    \t// Quote\n    \t$ret = preg_replace_callback('#\\[quote\\](.*?)\\[/quote\\]#is', 'erLhcoreClassBBCode::makeQuote', $ret);\n\n    \t// Youtube block\n    \t$ret = preg_replace_callback('#\\[youtube\\](.*?)\\[/youtube\\]#is', 'erLhcoreClassBBCode::_make_youtube_block', $ret);\n\n    \t// File upload link directly in chat message\n    \t$ret = preg_replace_callback('#\\[fupload\\](.*?)\\[/fupload\\]#is', 'erLhcoreClassBBCode::_make_upload_link', $ret);\n\n    \t$ret = preg_replace_callback('#\\[button_action=\"?(.*?)\"?\\](.*?)\\[/button_action\\]#is', 'erLhcoreClassBBCode::_make_button_action', $ret);\n\n    \t$ret = preg_replace_callback('#\\[link_trigger=\"?([0-9]+)\"?\\](.*?)\\[/link_trigger\\]#is', 'erLhcoreClassBBCode::_make_link_trigger', $ret);\n\n    \tif (strpos($ret,'[translation]') !== false) {\n            // For the admin we show original and translated text\n            if (isset($paramsMessage['html_as_text']) && $paramsMessage['html_as_text'] == true) {\n                $ret = preg_replace('#\\[translation\\](.*?)\\[/translation\\]#is', '<span class=\"tr-msg\">$1</span>', $ret);\n            } else {\n                // This is visitor translated message. We show original message for the visitor\n                if (isset($paramsMessage['sender']) && $paramsMessage['sender'] > 0) {\n                    // This is admin message. We show translated content only\n                    $translations = array();\n                    preg_match('#\\[translation\\](.*?)\\[/translation\\]#is',$ret, $translations);\n                    if (isset($translations[1])) {\n                        $ret = $translations[1];\n                    }\n\n                } else {\n                    $ret = preg_replace('#\\[translation\\](.*?)\\[/translation\\]#is', '', $ret);\n                }\n            }\n        }\n\n    \t// File block\n    \t$ret = preg_replace_callback('#\\[file=\"?(.*?)\"?\\]#is', 'erLhcoreClassBBCode::_make_url_file', $ret);\n    \t\n    \t// Survey\n    \t$ret = preg_replace_callback('#\\[survey=\"?(.*?)\"?\\]#is', 'erLhcoreClassBBCode::_make_url_survey', $ret);\n\n    \t$ret = trim($ret);\n\n        if (isset($paramsMessage['msg_id']) && $paramsMessage['msg_id'] > 0) {\n            $ret = str_replace('{msg_id}',$paramsMessage['msg_id'], $ret);\n        }\n\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.after_make_clickable',array('msg' => & $ret));\n        \n    \treturn $ret;\n   }\n   \n   public static function parseForMail($ret){\n   \t\t// File block\n   \t\t$ret = preg_replace_callback('#\\[file=\"?(.*?)\"?\\]#is', 'erLhcoreClassBBCode::_make_url_mail_file', $ret);\n   \t\treturn trim($ret);\n   }\n   \n   // Makes plain text from BB code\n   public static function make_plain($ret){\n        $ret = ' ' . $ret;\n\n       // BBCode to find...\n       $in = array( \t '/\\[b\\](.*?)\\[\\/b\\]/ms',\n           '/\\[i\\](.*?)\\[\\/i\\]/ms',\n           '/\\[u\\](.*?)\\[\\/u\\]/ms',\n           '/\\[list\\=(.*?)\\](.*?)\\[\\/list\\]/ms',\n           '/\\[list\\](.*?)\\[\\/list\\]/ms',\n           '/\\[\\*\\]\\s?(.*?)\\n/ms',\n           '/\\[img\\](.*?)\\[\\/img\\]/ms',\n           '/\\[url\\=\"?(.*?)\"?\\](.*?)\\[\\/url\\]/ms',\n           '/\\[quote\\]/ms',\n           '/\\[\\/quote\\]/ms',\n           '/\\[fs([0-9]+)\\](.*?)\\[\\/fs\\]/ms',\n           '/\\[level\\=([A-Za-z0-9\\-\\s]{2,60})\\](.*?)\\[\\/level\\]/ms',\n           '/\\[button_action\\=([A-Za-z0-9_\\-\\s]{2,60})\\](.*?)\\[\\/button_action\\]/ms',\n           '/\\n/ms',\n       );\n\n       // And replace them by...\n       $out = array(\t '\\1',\n           '\\1',\n           '\\1',\n           '\\2',\n           '\\1',\n           '\\1',\n           '',\n           '\\2 \\1',\n           '',\n           '',\n           '\\2',\n           '\\2',\n           '',\n           ' ',\n       );\n\n    \t$ret = preg_replace($in, $out, $ret);\n\n        $ret = trim($ret);\n        return $ret;\n   }\n\n}\n\n\n?>\n", "<?php\n\n/**\n * This code is mix of WP and phpBB :)\n * */\nclass erLhcoreClassBBCodePlain\n{\n    /**\n     * Callback to convert URI match to HTML A element.\n     *\n     * This function was backported from 2.5.0 to 2.3.2. Regex callback for make_clickable().\n     *\n     * @since 2.3.2\n     * @access private\n     *\n     * @param array $matches Single Regex Match.\n     * @return string HTML A element with URI address.\n     */\n    public static function _make_url_clickable_cb( $matches ) {\n        $url = $matches[2];\n        if ( ')' == $matches[3] && strpos( $url, '(' ) ) {\n            // If the trailing character is a closing parethesis, and the URL has an opening parenthesis in it, add the closing parenthesis to the URL.\n            // Then we can let the parenthesis balancer do its thing below.\n            $url .= $matches[3];\n            $suffix = '';\n        } else {\n            $suffix = $matches[3];\n        }\n        // Include parentheses in the URL only if paired\n        while ( substr_count( $url, '(' ) < substr_count( $url, ')' ) ) {\n            $suffix = strrchr( $url, ')' ) . $suffix;\n            $url = substr( $url, 0, strrpos( $url, ')' ) );\n        }\n        $url = self::esc_url($url);\n        if ( empty($url) )\n            return $matches[0];\n        return $matches[1] . $url . $suffix;\n    }\n\n    /**\n     * Checks and cleans a URL.\n     *\n     * A number of characters are removed from the URL. If the URL is for displaying\n     * (the default behaviour) ampersands are also replaced. The {@see 'clean_url'} filter\n     * is applied to the returned cleaned URL.\n     *\n     * @since 2.8.0\n     *\n     * @param string $url       The URL to be cleaned.\n     * @param array  $protocols Optional. An array of acceptable protocols.\n     *\t\t                    Defaults to return value of wp_allowed_protocols()\n     * @param string $_context  Private. Use esc_url_raw() for database usage.\n     * @return string The cleaned $url after the {@see 'clean_url'} filter is applied.\n     */\n    public static function esc_url( $url, $protocols = null, $_context = 'display' ) {\n        $original_url = $url;\n        if ( '' == $url )\n            return $url;\n        $url = str_replace( ' ', '%20', $url );\n        $url = preg_replace('|[^a-z0-9-~+_.?#=!&;,/:%@$\\|*\\'()\\[\\]\\\\x80-\\\\xff]|i', '', $url);\n        if ( '' === $url ) {\n            return $url;\n        }\n        if ( 0 !== stripos( $url, 'mailto:' ) ) {\n            $strip = array('%0d', '%0a', '%0D', '%0A');\n            $url = self::_deep_replace($strip, $url);\n        }\n        $url = str_replace(';//', '://', $url);\n        /* If the URL doesn't appear to contain a scheme, we\n         * presume it needs http:// prepended (unless a relative\n         * link starting with /, # or ? or a php file).\n        */\n        if ( strpos($url, ':') === false && ! in_array( $url[0], array( '/', '#', '?' ) ) &&\n            ! preg_match('/^[a-z0-9-]+?\\.php/i', $url) )\n            $url = 'http://' . $url;\n        // Replace ampersands and single quotes only when displaying.\n        if ( 'display' == $_context ) {\n            $url = self::wp_kses_normalize_entities( $url );\n            $url = str_replace( '&amp;', '&#038;', $url );\n            $url = str_replace( \"'\", '&#039;', $url );\n        }\n        if ( ( false !== strpos( $url, '[' ) ) || ( false !== strpos( $url, ']' ) ) ) {\n            $parsed = self::wp_parse_url( $url );\n            $front  = '';\n            if ( isset( $parsed['scheme'] ) ) {\n                $front .= $parsed['scheme'] . '://';\n            } elseif ( '/' === $url[0] ) {\n                $front .= '//';\n            }\n            if ( isset( $parsed['user'] ) ) {\n                $front .= $parsed['user'];\n            }\n            if ( isset( $parsed['pass'] ) ) {\n                $front .= ':' . $parsed['pass'];\n            }\n            if ( isset( $parsed['user'] ) || isset( $parsed['pass'] ) ) {\n                $front .= '@';\n            }\n            if ( isset( $parsed['host'] ) ) {\n                $front .= $parsed['host'];\n            }\n            if ( isset( $parsed['port'] ) ) {\n                $front .= ':' . $parsed['port'];\n            }\n            $end_dirty = str_replace( $front, '', $url );\n            $end_clean = str_replace( array( '[', ']' ), array( '%5B', '%5D' ), $end_dirty );\n            $url       = str_replace( $end_dirty, $end_clean, $url );\n        }\n        if ( '/' === $url[0] ) {\n            $good_protocol_url = $url;\n        } else {\n            if ( ! is_array( $protocols ) )\n                $protocols = $protocols = array( 'http', 'https', 'ftp', 'ftps', 'mailto', 'news', 'irc', 'gopher', 'nntp', 'feed', 'telnet', 'mms', 'rtsp', 'svn', 'tel', 'fax', 'xmpp', 'webcal', 'urn' );\n\n            $good_protocol_url = self::wp_kses_bad_protocol( $url, $protocols );\n            if ( strtolower( $good_protocol_url ) != strtolower( $url ) )\n                return '';\n        }\n\n        /**\n         * Filters a string cleaned and escaped for output as a URL.\n         *\n         * @since 2.3.0\n         *\n         * @param string $good_protocol_url The cleaned URL to be returned.\n         * @param string $original_url      The URL prior to cleaning.\n         * @param string $_context          If 'display', replace ampersands and single quotes only.\n         */\n        return $url;\n    }\n\n    /**\n     * A wrapper for PHP's parse_url() function that handles consistency in the return\n     * values across PHP versions.\n     *\n     * PHP 5.4.7 expanded parse_url()'s ability to handle non-absolute url's, including\n     * schemeless and relative url's with :// in the path. This function works around\n     * those limitations providing a standard output on PHP 5.2~5.4+.\n     *\n     * Secondly, across various PHP versions, schemeless URLs starting containing a \":\"\n     * in the query are being handled inconsistently. This function works around those\n     * differences as well.\n     *\n     * Error suppression is used as prior to PHP 5.3.3, an E_WARNING would be generated\n     * when URL parsing failed.\n     *\n     * @since 4.4.0\n     * @since 4.7.0 The $component parameter was added for parity with PHP's parse_url().\n     *\n     * @param string $url       The URL to parse.\n     * @param int    $component The specific component to retrieve. Use one of the PHP\n     *                          predefined constants to specify which one.\n     *                          Defaults to -1 (= return all parts as an array).\n     *                          @see http://php.net/manual/en/function.parse-url.php\n     * @return mixed False on parse failure; Array of URL components on success;\n     *               When a specific component has been requested: null if the component\n     *               doesn't exist in the given URL; a string or - in the case of\n     *               PHP_URL_PORT - integer when it does. See parse_url()'s return values.\n     */\n    public static function wp_parse_url( $url, $component = -1 ) {\n        $to_unset = array();\n        $url = strval( $url );\n        if ( '//' === substr( $url, 0, 2 ) ) {\n            $to_unset[] = 'scheme';\n            $url = 'placeholder:' . $url;\n        } elseif ( '/' === substr( $url, 0, 1 ) ) {\n            $to_unset[] = 'scheme';\n            $to_unset[] = 'host';\n            $url = 'placeholder://placeholder' . $url;\n        }\n        $parts = @parse_url( $url );\n        if ( false === $parts ) {\n            // Parsing failure.\n            return $parts;\n        }\n        // Remove the placeholder values.\n        foreach ( $to_unset as $key ) {\n            unset( $parts[ $key ] );\n        }\n        return self::_get_component_from_parsed_url_array( $parts, $component );\n    }\n\n    /**\n     * Retrieve a specific component from a parsed URL array.\n     *\n     * @internal\n     *\n     * @since 4.7.0\n     *\n     * @param array|false $url_parts The parsed URL. Can be false if the URL failed to parse.\n     * @param int    $component The specific component to retrieve. Use one of the PHP\n     *                          predefined constants to specify which one.\n     *                          Defaults to -1 (= return all parts as an array).\n     *                          @see http://php.net/manual/en/function.parse-url.php\n     * @return mixed False on parse failure; Array of URL components on success;\n     *               When a specific component has been requested: null if the component\n     *               doesn't exist in the given URL; a string or - in the case of\n     *               PHP_URL_PORT - integer when it does. See parse_url()'s return values.\n     */\n    public static function _get_component_from_parsed_url_array( $url_parts, $component = -1 ) {\n        if ( -1 === $component ) {\n            return $url_parts;\n        }\n        $key = self::_wp_translate_php_url_constant_to_key( $component );\n        if ( false !== $key && is_array( $url_parts ) && isset( $url_parts[ $key ] ) ) {\n            return $url_parts[ $key ];\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Translate a PHP_URL_* constant to the named array keys PHP uses.\n     *\n     * @internal\n     *\n     * @since 4.7.0\n     *\n     * @see   http://php.net/manual/en/url.constants.php\n     *\n     * @param int $constant PHP_URL_* constant.\n     * @return string|bool The named key or false.\n     */\n    public static function _wp_translate_php_url_constant_to_key( $constant ) {\n        $translation = array(\n            PHP_URL_SCHEME   => 'scheme',\n            PHP_URL_HOST     => 'host',\n            PHP_URL_PORT     => 'port',\n            PHP_URL_USER     => 'user',\n            PHP_URL_PASS     => 'pass',\n            PHP_URL_PATH     => 'path',\n            PHP_URL_QUERY    => 'query',\n            PHP_URL_FRAGMENT => 'fragment',\n        );\n        if ( isset( $translation[ $constant ] ) ) {\n            return $translation[ $constant ];\n        } else {\n            return false;\n        }\n    }\n\n\n    /**\n     * Converts and fixes HTML entities.\n     *\n     * This function normalizes HTML entities. It will convert `AT&T` to the correct\n     * `AT&amp;T`, `&#00058;` to `&#58;`, `&#XYZZY;` to `&amp;#XYZZY;` and so on.\n     *\n     * @since 1.0.0\n     *\n     * @param string $string Content to normalize entities\n     * @return string Content with normalized entities\n     */\n    public static function wp_kses_normalize_entities($string) {\n        // Disarm all entities by converting & to &amp;\n        $string = str_replace('&', '&amp;', $string);\n        // Change back the allowed entities in our entity whitelist\n        $string = preg_replace_callback('/&amp;([A-Za-z]{2,8}[0-9]{0,2});/', 'erLhcoreClassBBCodePlain::wp_kses_named_entities', $string);\n        $string = preg_replace_callback('/&amp;#(0*[0-9]{1,7});/', 'erLhcoreClassBBCodePlain::wp_kses_normalize_entities2', $string);\n        $string = preg_replace_callback('/&amp;#[Xx](0*[0-9A-Fa-f]{1,6});/', 'erLhcoreClassBBCodePlain::wp_kses_normalize_entities3', $string);\n        return $string;\n    }\n\n    /**\n     * Callback for wp_kses_normalize_entities() for regular expression.\n     *\n     * This function helps wp_kses_normalize_entities() to only accept valid Unicode\n     * numeric entities in hex form.\n     *\n     * @since 2.7.0\n     * @access private\n     *\n     * @param array $matches preg_replace_callback() matches array\n     * @return string Correctly encoded entity\n     */\n    public static function wp_kses_normalize_entities3($matches) {\n        if ( empty($matches[1]) )\n            return '';\n        $hexchars = $matches[1];\n        return ( ! self::valid_unicode( hexdec( $hexchars ) ) ) ? \"&amp;#x$hexchars;\" : '&#x'.ltrim($hexchars,'0').';';\n    }\n\n    /**\n     * Helper function to determine if a Unicode value is valid.\n     *\n     * @since 2.7.0\n     *\n     * @param int $i Unicode value\n     * @return bool True if the value was a valid Unicode number\n     */\n    public static function valid_unicode($i) {\n        return ( $i == 0x9 || $i == 0xa || $i == 0xd ||\n            ($i >= 0x20 && $i <= 0xd7ff) ||\n            ($i >= 0xe000 && $i <= 0xfffd) ||\n            ($i >= 0x10000 && $i <= 0x10ffff) );\n    }\n\n    /**\n     * Callback for wp_kses_normalize_entities() regular expression.\n     *\n     * This function helps wp_kses_normalize_entities() to only accept 16-bit\n     * values and nothing more for `&#number;` entities.\n     *\n     * @access private\n     * @since 1.0.0\n     *\n     * @param array $matches preg_replace_callback() matches array\n     * @return string Correctly encoded entity\n     */\n    public static function wp_kses_normalize_entities2($matches) {\n        if ( empty($matches[1]) )\n            return '';\n        $i = $matches[1];\n        if (self::valid_unicode($i)) {\n            $i = str_pad(ltrim($i,'0'), 3, '0', STR_PAD_LEFT);\n            $i = \"&#$i;\";\n        } else {\n            $i = \"&amp;#$i;\";\n        }\n        return $i;\n    }\n\n    /**\n     * Callback for wp_kses_normalize_entities() regular expression.\n     *\n     * This function only accepts valid named entity references, which are finite,\n     * case-sensitive, and highly scrutinized by HTML and XML validators.\n     *\n     * @since 3.0.0\n     *\n     * @global array $allowedentitynames\n     *\n     * @param array $matches preg_replace_callback() matches array\n     * @return string Correctly encoded entity\n     */\n    public static function wp_kses_named_entities($matches) {\n        $allowedentitynames = array(\n            'nbsp',    'iexcl',  'cent',    'pound',  'curren', 'yen',\n            'brvbar',  'sect',   'uml',     'copy',   'ordf',   'laquo',\n            'not',     'shy',    'reg',     'macr',   'deg',    'plusmn',\n            'acute',   'micro',  'para',    'middot', 'cedil',  'ordm',\n            'raquo',   'iquest', 'Agrave',  'Aacute', 'Acirc',  'Atilde',\n            'Auml',    'Aring',  'AElig',   'Ccedil', 'Egrave', 'Eacute',\n            'Ecirc',   'Euml',   'Igrave',  'Iacute', 'Icirc',  'Iuml',\n            'ETH',     'Ntilde', 'Ograve',  'Oacute', 'Ocirc',  'Otilde',\n            'Ouml',    'times',  'Oslash',  'Ugrave', 'Uacute', 'Ucirc',\n            'Uuml',    'Yacute', 'THORN',   'szlig',  'agrave', 'aacute',\n            'acirc',   'atilde', 'auml',    'aring',  'aelig',  'ccedil',\n            'egrave',  'eacute', 'ecirc',   'euml',   'igrave', 'iacute',\n            'icirc',   'iuml',   'eth',     'ntilde', 'ograve', 'oacute',\n            'ocirc',   'otilde', 'ouml',    'divide', 'oslash', 'ugrave',\n            'uacute',  'ucirc',  'uuml',    'yacute', 'thorn',  'yuml',\n            'quot',    'amp',    'lt',      'gt',     'apos',   'OElig',\n            'oelig',   'Scaron', 'scaron',  'Yuml',   'circ',   'tilde',\n            'ensp',    'emsp',   'thinsp',  'zwnj',   'zwj',    'lrm',\n            'rlm',     'ndash',  'mdash',   'lsquo',  'rsquo',  'sbquo',\n            'ldquo',   'rdquo',  'bdquo',   'dagger', 'Dagger', 'permil',\n            'lsaquo',  'rsaquo', 'euro',    'fnof',   'Alpha',  'Beta',\n            'Gamma',   'Delta',  'Epsilon', 'Zeta',   'Eta',    'Theta',\n            'Iota',    'Kappa',  'Lambda',  'Mu',     'Nu',     'Xi',\n            'Omicron', 'Pi',     'Rho',     'Sigma',  'Tau',    'Upsilon',\n            'Phi',     'Chi',    'Psi',     'Omega',  'alpha',  'beta',\n            'gamma',   'delta',  'epsilon', 'zeta',   'eta',    'theta',\n            'iota',    'kappa',  'lambda',  'mu',     'nu',     'xi',\n            'omicron', 'pi',     'rho',     'sigmaf', 'sigma',  'tau',\n            'upsilon', 'phi',    'chi',     'psi',    'omega',  'thetasym',\n            'upsih',   'piv',    'bull',    'hellip', 'prime',  'Prime',\n            'oline',   'frasl',  'weierp',  'image',  'real',   'trade',\n            'alefsym', 'larr',   'uarr',    'rarr',   'darr',   'harr',\n            'crarr',   'lArr',   'uArr',    'rArr',   'dArr',   'hArr',\n            'forall',  'part',   'exist',   'empty',  'nabla',  'isin',\n            'notin',   'ni',     'prod',    'sum',    'minus',  'lowast',\n            'radic',   'prop',   'infin',   'ang',    'and',    'or',\n            'cap',     'cup',    'int',     'sim',    'cong',   'asymp',\n            'ne',      'equiv',  'le',      'ge',     'sub',    'sup',\n            'nsub',    'sube',   'supe',    'oplus',  'otimes', 'perp',\n            'sdot',    'lceil',  'rceil',   'lfloor', 'rfloor', 'lang',\n            'rang',    'loz',    'spades',  'clubs',  'hearts', 'diams',\n            'sup1',    'sup2',   'sup3',    'frac14', 'frac12', 'frac34',\n            'there4',\n        );\n\n        if ( empty($matches[1]) )\n            return '';\n        $i = $matches[1];\n        return ( ! in_array( $i, $allowedentitynames ) ) ? \"&amp;$i;\" : \"&$i;\";\n    }\n\n    /**\n     * Sanitize string from bad protocols.\n     *\n     * This function removes all non-allowed protocols from the beginning of\n     * $string. It ignores whitespace and the case of the letters, and it does\n     * understand HTML entities. It does its work in a while loop, so it won't be\n     * fooled by a string like \"javascript:javascript:alert(57)\".\n     *\n     * @since 1.0.0\n     *\n     * @param string $string            Content to filter bad protocols from\n     * @param array  $allowed_protocols Allowed protocols to keep\n     * @return string Filtered content\n     */\n    public static function wp_kses_bad_protocol($string, $allowed_protocols) {\n        $string = self::wp_kses_no_null($string);\n        $iterations = 0;\n        do {\n            $original_string = $string;\n            $string = self::wp_kses_bad_protocol_once($string, $allowed_protocols);\n        } while ( $original_string != $string && ++$iterations < 6 );\n        if ( $original_string != $string )\n            return '';\n        return $string;\n    }\n\n    /**\n     * Removes any invalid control characters in $string.\n     *\n     * Also removes any instance of the '\\0' string.\n     *\n     * @since 1.0.0\n     *\n     * @param string $string\n     * @param array $options Set 'slash_zero' => 'keep' when '\\0' is allowed. Default is 'remove'.\n     * @return string\n     */\n    public static function wp_kses_no_null( $string, $options = null ) {\n        if ( ! isset( $options['slash_zero'] ) ) {\n            $options = array( 'slash_zero' => 'remove' );\n        }\n        $string = preg_replace( '/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F]/', '', $string );\n        if ( 'remove' == $options['slash_zero'] ) {\n            $string = preg_replace( '/\\\\\\\\+0+/', '', $string );\n        }\n        return $string;\n    }\n\n    /**\n     * Sanitizes content from bad protocols and other characters.\n     *\n     * This function searches for URL protocols at the beginning of $string, while\n     * handling whitespace and HTML entities.\n     *\n     * @since 1.0.0\n     *\n     * @param string $string            Content to check for bad protocols\n     * @param string $allowed_protocols Allowed protocols\n     * @return string Sanitized content\n     */\n    public static function wp_kses_bad_protocol_once($string, $allowed_protocols, $count = 1 ) {\n        $string2 = preg_split( '/:|&#0*58;|&#x0*3a;/i', $string, 2 );\n        if ( isset($string2[1]) && ! preg_match('%/\\?%', $string2[0]) ) {\n            $string = trim( $string2[1] );\n            $protocol = self::wp_kses_bad_protocol_once2( $string2[0], $allowed_protocols );\n            if ( 'feed:' == $protocol ) {\n                if ( $count > 2 )\n                    return '';\n                $string = self::wp_kses_bad_protocol_once( $string, $allowed_protocols, ++$count );\n                if ( empty( $string ) )\n                    return $string;\n            }\n            $string = $protocol . $string;\n        }\n        return $string;\n    }\n\n\n    /**\n     * Callback for wp_kses_bad_protocol_once() regular expression.\n     *\n     * This function processes URL protocols, checks to see if they're in the\n     * whitelist or not, and returns different data depending on the answer.\n     *\n     * @access private\n     * @since 1.0.0\n     *\n     * @param string $string            URI scheme to check against the whitelist\n     * @param string $allowed_protocols Allowed protocols\n     * @return string Sanitized content\n     */\n    public static function wp_kses_bad_protocol_once2( $string, $allowed_protocols ) {\n        $string2 = self::wp_kses_decode_entities($string);\n        $string2 = preg_replace('/\\s/', '', $string2);\n        $string2 = self::wp_kses_no_null($string2);\n        $string2 = strtolower($string2);\n        $allowed = false;\n        foreach ( (array) $allowed_protocols as $one_protocol )\n            if ( strtolower($one_protocol) == $string2 ) {\n                $allowed = true;\n                break;\n            }\n        if ($allowed)\n            return \"$string2:\";\n        else\n            return '';\n    }\n\n    /**\n     * Convert all entities to their character counterparts.\n     *\n     * This function decodes numeric HTML entities (`&#65;` and `&#x41;`).\n     * It doesn't do anything with other entities like &auml;, but we don't\n     * need them in the URL protocol whitelisting system anyway.\n     *\n     * @since 1.0.0\n     *\n     * @param string $string Content to change entities\n     * @return string Content after decoded entities\n     */\n    public static function wp_kses_decode_entities($string) {\n        $string = preg_replace_callback('/&#([0-9]+);/', 'erLhcoreClassBBCodePlain::_wp_kses_decode_entities_chr', $string);\n        $string = preg_replace_callback('/&#[Xx]([0-9A-Fa-f]+);/', 'erLhcoreClassBBCodePlain::_wp_kses_decode_entities_chr_hexdec', $string);\n        return $string;\n    }\n\n    /**\n     * Regex callback for wp_kses_decode_entities()\n     *\n     * @since 2.9.0\n     *\n     * @param array $match preg match\n     * @return string\n     */\n    public static function _wp_kses_decode_entities_chr( $match ) {\n        return chr( $match[1] );\n    }\n    /**\n     * Regex callback for wp_kses_decode_entities()\n     *\n     * @since 2.9.0\n     *\n     * @param array $match preg match\n     * @return string\n     */\n    public static function _wp_kses_decode_entities_chr_hexdec( $match ) {\n        return chr( hexdec( $match[1] ) );\n    }\n\n\n    /**\n     * Perform a deep string replace operation to ensure the values in $search are no longer present\n     *\n     * Repeats the replacement operation until it no longer replaces anything so as to remove \"nested\" values\n     * e.g. $subject = '%0%0%0DDD', $search ='%0D', $result ='' rather than the '%0%0DD' that\n     * str_replace would return\n     *\n     * @since 2.8.1\n     * @access private\n     *\n     * @param string|array $search  The value being searched for, otherwise known as the needle.\n     *                              An array may be used to designate multiple needles.\n     * @param string       $subject The string being searched and replaced on, otherwise known as the haystack.\n     * @return string The string with the replaced svalues.\n     */\n    public static function _deep_replace( $search, $subject ) {\n        $subject = (string) $subject;\n        $count = 1;\n        while ( $count ) {\n            $subject = str_replace( $search, '', $subject, $count );\n        }\n        return $subject;\n    }\n\n    public static $replaceEmoji = array(\n        ':\\)' => \"\\u{1F642}\",\n        ':D:' => \"\\u{1F600}\",\n        ':D' => \"\\u{1F600}\",\n        ':\\(' => \"\\u{1F641}\",\n        ':o:' => \"\\u{1F62E}\",\n        ':o' => \"\\u{1F62E}\",\n        ':p:' => \"\\u{1F61B}\",\n        ':p' => \"\\u{1F61B}\",\n        ';\\)' => \"\\u{1F609}\",\n        ';\\(' => \"\\u{1F622}\",\n        ':x' => \"\\u{1F910}\",\n        ':\\*' => \"\\u{1F617}\",\n        ';\\*' => \"\\u{1F618}\",\n        ':\\/' => \"\\u{1F615}\"\n    );\n\n    public static function parseEmoji($text) {\n\n        // Smileys to find...\n        for ($i = 0; $i < 2; $i++) {\n            $text = preg_replace_callback('/(^|\\s)(' .implode(\"|\",array_keys(self::$replaceEmoji)) . ')(\\s|$)/', function($match) {\n                $char = str_replace(array('/','(',')','*'),array('\\/','\\(','\\)','\\*'),$match[2]);\n                return $match[1] . erLhcoreClassBBCodePlain::$replaceEmoji[$char] . $match[3];\n            },  $text);\n        }\n\n        return $text;\n    }\n\n    public static function BBCode2Html($text) {\n        $text = trim($text);\n\n        $text = self::parseEmoji($text);\n\n        // Smileys to find...\n        $in = array(\n        );\n\n        // And replace them by...\n        $out = array(\n        );\n\n        $in[] = '[/*]';\n        $in[] = '[*]';\n        $out[] = '</li>';\n        $out[] = '<li>';\n\n        $text = str_replace($in, $out, $text);\n\n        // BBCode to find...\n        $in = array( \t '/\\[b\\](.*?)\\[\\/b\\]/ms',\n            '/\\[i\\](.*?)\\[\\/i\\]/ms',\n            '/\\[u\\](.*?)\\[\\/u\\]/ms',\n            '/\\[mark\\](.*?)\\[\\/mark\\]/ms',\n            '/\\[s\\](.*?)\\[\\/s\\]/ms',\n            '/\\[list\\=([0-9]+)\\](.*?)\\[\\/list\\]/ms',\n            '/\\[list\\](.*?)\\[\\/list\\]/ms',\n            '/\\[\\*\\]\\s?(.*?)\\n/ms',\n            '/\\[fs([0-9]+)\\](.*?)\\[\\/fs\\]/ms',\n            '/\\[color\\=([A-Za-z0-9]{2,6})\\](.*?)\\[\\/color\\]/ms',\n            '/\\[level\\=([A-Za-z0-9\\-\\s]{2,60})\\](.*?)\\[\\/level\\]/ms',\n            '/\\[button_action\\=([A-Za-z0-9_\\-\\s]{2,60})\\](.*?)\\[\\/button_action\\]/ms',\n        );\n\n        // And replace them by...\n        $out = array(\t '\\1',\n            '\\1',\n            '\\1',\n            '\\1',\n            '\\1',\n            '\\2',\n            '\\1',\n            '\\1',\n            '\\2',\n            '\\2',\n            '\\2',\n            '',\n        );\n\n        $text = preg_replace($in, $out, $text);\n\n        // Prepare quote's\n        $text = str_replace(\"\\r\\n\",\"\\n\",$text);\n\n        // paragraphs\n        $text = str_replace(\"\\r\", \"\", $text);\n\n        return $text;\n    }\n\n    public static function _make_url_embed_image($matches) {\n\n        $in = htmlspecialchars_decode($matches[2]);\n        $in = trim($in);\n\n        $url = self::esc_url($in);\n        if ( empty($url) )\n            return $matches[2];\n\n        $prepend = '';\n\n        if (isset($matches[1]) && $matches[1] != '' && !empty(self::esc_url($matches[1]))) {\n            $prepend = $matches[1];\n        }\n\n        if (strpos($url,'http://') === false && strpos($url,'https://') === false) {\n            $url = self::getHost() . str_replace('//','/','/'. $url).' ';\n        }\n\n        return  $prepend . ' ' . $url;\n    }\n\n    public static function _make_embed_map($matches)\n    {\n        $parts = explode(',',trim($matches[1]));\n\n        if (count($parts) == 2 && is_numeric($parts[0]) && is_numeric($parts[1])) {\n            $id = rand(0,1000) . time();\n            return \"<div id='msg-location-\".$id.\"' style='height:300px'><script>lhinst.showMessageLocation(\" . $id . \",\" . (float)$parts[0] . \",\" . (float)$parts[1] . \")</script></div>\";\n        }\n\n        return ;\n    }\n\n    public static function _make_url_embed($matches){\n\n        $in = str_replace('\"','',htmlspecialchars_decode($matches[1]));\n        $in = trim($in);\n\n        $url = self::esc_url($in);\n        if ( empty($url) )\n            return $matches[1] . ' ' . $matches[2];\n\n        return $url .' '. $matches[2];\n    }\n\n    /**\n     * Callback to convert URL match to HTML A element.\n     *\n     * This function was backported from 2.5.0 to 2.3.2. Regex callback for make_clickable().\n     *\n     * @since 2.3.2\n     * @access private\n     *\n     * @param array $matches Single Regex Match.\n     * @return string HTML A element with URL address.\n     */\n    public static function _make_web_ftp_clickable_cb( $matches ) {\n        $ret = '';\n        $dest = $matches[2];\n        $dest = 'http://' . $dest;\n        // removed trailing [.,;:)] from URL\n        if ( in_array( substr($dest, -1), array('.', ',', ';', ':', ')') ) === true ) {\n            $ret = substr($dest, -1);\n            $dest = substr($dest, 0, strlen($dest)-1);\n        }\n        $dest = self::esc_url($dest);\n        if ( empty($dest) )\n            return $matches[0];\n\n        return $matches[1] . $dest . ' ' . $ret;\n    }\n\n    /**\n     * Callback to convert email address match to HTML A element.\n     *\n     * This function was backported from 2.5.0 to 2.3.2. Regex callback for make_clickable().\n     *\n     * @since 2.3.2\n     * @access private\n     *\n     * @param array $matches Single Regex Match.\n     * @return string HTML A element with email address.\n     */\n    public static function _make_email_clickable_cb( $matches ) {\n        $email = $matches[2] . '@' . $matches[3];\n        return $matches[1] . ' ' . $email;\n    }\n\n\n    public static function _make_paypal_button($matches){\n\n        if (filter_var($matches[1],FILTER_VALIDATE_EMAIL)) {\n            return '<form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\">\n            <input type=\"hidden\" name=\"cmd\" value=\"_donations\">\n            <input type=\"hidden\" name=\"business\" value=\"'.$matches[1].'\">\n            <input type=\"hidden\" name=\"lc\" value=\"US\">\n            <input type=\"hidden\" name=\"no_note\" value=\"0\">\n            <input type=\"hidden\" name=\"currency_code\" value=\"USD\">\n            <input type=\"hidden\" name=\"bn\" value=\"PP-DonationsBF:btn_donate_SM.gif:NonHostedGuest\">\n            <input type=\"image\" title=\"Support an artist\" src=\"https://www.paypalobjects.com/WEBSCR-640-20110306-1/en_US/i/btn/btn_donate_SM.gif\" border=\"0\" name=\"submit\" alt=\"PayPal - The safer, easier way to pay online!\">\n            <img alt=\"\" border=\"0\" src=\"https://www.paypalobjects.com/WEBSCR-640-20110306-1/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\">\n            </form>';\n        } else {\n            return $matches[0];\n        }\n    }\n\n    public static function _make_youtube_block($matches) {\n\n        $data = parse_url($matches[1]);\n\n        if (isset($data['query'])){\n            parse_str($data['query'],$query);\n            if (stristr($data['host'],'youtube.com') && isset($query['v']) && ($query['v'] != '')) {\n                return '<iframe class=\"youtube-frame\" title=\"YouTube video player\" width=\"480\" height=\"300\" src=\"https://www.youtube.com/embed/'.urlencode($query['v']).'\" frameborder=\"0\" allowfullscreen></iframe>';\n            } else {\n                return $matches[0];\n            }\n        } else {\n            return $matches[0];\n        }\n    }\n\n    public static function _make_url_file($matches)\n    {\n\n        if (isset($matches[1])){\n            $mainData = explode(' ',$matches[1]);\n            $parts = explode('_',$mainData[0]);\n            $fileID = $parts[0];\n            $hash = $parts[1];\n            $displayType = isset($parts[2]) ? $parts[2] : null;\n            try {\n                $file = erLhcoreClassModelChatFile::fetch($fileID);\n\n                if (is_object($file)) {\n                    // Check that user has permission to see the chat. Let say if user purposely types file bbcode\n                    if ($hash == $file->security_hash) {\n                        $fileExtension = strtolower($file->extension);\n                        if (in_array($fileExtension,['jfif','jpg','jpeg','png','gif'])){\n\n                            // Make link if required\n                            $prepend = '';\n                            $append = '';\n                            if (isset($mainData[1])) {\n                                $subpartParts = explode('=',$mainData[1]);\n                                if ($subpartParts[0] == 'link') {\n                                    $url = self::esc_url($subpartParts[1]);\n                                    if ($url != ''){\n                                        $prepend = self::esc_url($subpartParts[1]);\n                                        $append = '';\n                                    }\n                                }\n                            } else {\n                                $prepend = '';\n                                $append = self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\";\n                            }\n\n                            return $prepend . $append;\n                        }\n\n                        if ($fileExtension == 'mp3' || $fileExtension == 'wav' || $fileExtension == 'ogg') {\n                            return self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\";\n                        }\n\n                        return self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash} {$file->upload_name}\" . ' [' . $file->extension . ']';\n                    }\n                }\n\n            } catch (Exception $e) {\n\n            }\n\n            return '';\n        }\n        return '';\n    }\n\n    public static function getHost() {\n\n        if (isset($_SERVER['HTTP_HOST'])) {\n            $site_address = (erLhcoreClassSystem::$httpsMode == true ? 'https:' : 'http:') . '//' . $_SERVER['HTTP_HOST'] ;\n        } else if (class_exists('erLhcoreClassInstance')) {\n            $site_address = 'https://' . erLhcoreClassInstance::$instanceChat->address . '.' . erConfigClassLhConfig::getInstance()->getSetting( 'site', 'seller_domain');\n        } else if (class_exists('erLhcoreClassExtensionLhcphpresque')) {\n            $site_address = erLhcoreClassModule::getExtensionInstance('erLhcoreClassExtensionLhcphpresque')->settings['site_address'];\n        } else {\n            $site_address = '';\n        }\n\n        return $site_address;\n    }\n\n    public static function _make_url_survey($matches)\n    {\n        if (isset($matches[1])){\n\n            list($surveyId, $surveyItemId) = explode('_',str_replace(array('\"','&quot;'),'', $matches[1]));\n\n            try {\n\n                if (is_numeric($surveyItemId) && is_numeric($surveyId)) {\n\n                    $surveyItem = erLhAbstractModelSurveyItem::fetch($surveyItemId);\n\n                    if ($surveyId == $surveyItem->survey_id)\n                    {\n                        $survey = erLhAbstractModelSurvey::fetch($surveyId);\n                        return self::getHost() . erLhcoreClassDesign::baseurl('survey/collected').\"/{$survey->id}?show={$surveyItem->id}\" . erTranslationClassLhTranslation::getInstance()->getTranslation('file/file','Collected survey data') . ' - ' . htmlspecialchars($survey->name);\n                    }\n                }\n\n            } catch (Exception $e) {\n\n            }\n\n            return '';\n        }\n        return '';\n    }\n\n    public static function _make_url_mail_file($matches){\n\n        if (isset($matches[1])){\n            list($fileID,$hash) = explode('_',$matches[1]);\n            try {\n                $file = erLhcoreClassModelChatFile::fetch($fileID);\n\n                // Check that user has permission to see the chat. Let say if user purposely types file bbcode\n                if ($hash == $file->security_hash) {\n                    return self::getHost() . erLhcoreClassDesign::baseurldirect('file/downloadfile').\"/{$file->id}/{$hash}\";\n                }\n            } catch (Exception $e) {\n\n            }\n\n            return '';\n        }\n        return '';\n    }\n\n    public static function _split_str_by_whitespace( $string, $goal ) {\n        $chunks = array();\n\n        $string_nullspace = strtr( $string, \"\\r\\n\\t\\v\\f \", \"\\000\\000\\000\\000\\000\\000\" );\n\n        while ( $goal < strlen( $string_nullspace ) ) {\n            $pos = strrpos( substr( $string_nullspace, 0, $goal + 1 ), \"\\000\" );\n\n            if ( false === $pos ) {\n                $pos = strpos( $string_nullspace, \"\\000\", $goal + 1 );\n                if ( false === $pos ) {\n                    break;\n                }\n            }\n\n            $chunks[] = substr( $string, 0, $pos + 1 );\n            $string = substr( $string, $pos + 1 );\n            $string_nullspace = substr( $string_nullspace, $pos + 1 );\n        }\n\n        if ( $string ) {\n            $chunks[] = $string;\n        }\n\n        return $chunks;\n    }\n\n    // https://github.com/WordPress/WordPress/blob/6e5e29c5bf49ad2be6a2c3a3d4fb3f5af6853b5b/wp-includes/formatting.php\n    public static function make_clickable_text( $text ) {\n        $r = '';\n        $textarr = preg_split( '/(<[^<>]+>)/', $text, -1, PREG_SPLIT_DELIM_CAPTURE ); // split out HTML tags\n        $nested_code_pre = 0; // Keep track of how many levels link is nested inside <pre> or <code>\n        foreach ( $textarr as $piece ) {\n            if ( preg_match( '|^<code[\\s>]|i', $piece ) || preg_match( '|^<pre[\\s>]|i', $piece ) || preg_match( '|^<script[\\s>]|i', $piece ) || preg_match( '|^<style[\\s>]|i', $piece ) )\n                $nested_code_pre++;\n            elseif ( $nested_code_pre && ( '</code>' === strtolower( $piece ) || '</pre>' === strtolower( $piece ) || '</script>' === strtolower( $piece ) || '</style>' === strtolower( $piece ) ) )\n                $nested_code_pre--;\n            if ( $nested_code_pre || empty( $piece ) || ( $piece[0] === '<' && ! preg_match( '|^<\\s*[\\w]{1,20}+://|', $piece ) ) ) {\n                $r .= $piece;\n                continue;\n            }\n            // Long strings might contain expensive edge cases ...\n            if ( 10000 < strlen( $piece ) ) {\n                // ... break it up\n                foreach ( self::_split_str_by_whitespace( $piece, 2100 ) as $chunk ) { // 2100: Extra room for scheme and leading and trailing paretheses\n                    if ( 2101 < strlen( $chunk ) ) {\n                        $r .= $chunk; // Too big, no whitespace: bail.\n                    } else {\n                        $r .= self::make_clickable_text( $chunk );\n                    }\n                }\n            } else {\n                $ret = \" $piece \"; // Pad with whitespace to simplify the regexes\n                $url_clickable = '~\n\t\t\t\t([\\\\s(<.,;:!?])                                        # 1: Leading whitespace, or punctuation\n\t\t\t\t(                                                      # 2: URL\n\t\t\t\t\t[\\\\w]{1,20}+://                                # Scheme and hier-part prefix\n\t\t\t\t\t(?=\\S{1,2000}\\s)                               # Limit to URLs less than about 2000 characters long\n\t\t\t\t\t[\\\\w\\\\x80-\\\\xff#%\\\\~/@\\\\[\\\\]*(+=&$-]*+         # Non-punctuation URL character\n\t\t\t\t\t(?:                                            # Unroll the Loop: Only allow puctuation URL character if followed by a non-punctuation URL character\n\t\t\t\t\t\t[\\'.,;:!?)]                            # Punctuation URL character\n\t\t\t\t\t\t[\\\\w\\\\x80-\\\\xff#%\\\\~/@\\\\[\\\\]*(+=&$-]++ # Non-punctuation URL character\n\t\t\t\t\t)*\n\t\t\t\t)\n\t\t\t\t(\\)?)                                                  # 3: Trailing closing parenthesis (for parethesis balancing post processing)\n\t\t\t~xS'; // The regex is a non-anchored pattern and does not have a single fixed starting character.\n                // Tell PCRE to spend more time optimizing since, when used on a page load, it will probably be used several times.\n                $ret = preg_replace_callback( $url_clickable, 'erLhcoreClassBBCodePlain::_make_url_clickable_cb', $ret );\n                $ret = preg_replace_callback( '#([\\s>])((www|ftp)\\.[\\w\\\\x80-\\\\xff\\#$%&~/.\\-;:=,?@\\[\\]+]+)#is', 'erLhcoreClassBBCodePlain::_make_web_ftp_clickable_cb', $ret );\n                $ret = preg_replace_callback( '#([\\s>])([.0-9a-z_+-]+)@(([0-9a-z-]+\\.)+[0-9a-z]{2,})#i', 'erLhcoreClassBBCodePlain::_make_email_clickable_cb', $ret );\n                $ret = substr( $ret, 1, -1 ); // Remove our whitespace padding.\n                $r .= $ret;\n            }\n        }\n\n        // Cleanup of accidental links within links\n        return preg_replace( '#(<a([ \\r\\n\\t]+[^>]+?>|>))<a [^>]+?>([^>]+?)</a></a>#i', \"$1$3</a>\", $r );\n    }\n\n    public static function makeQuote($matches)\n    {\n        if ($matches[1]) {\n            return '<blockquote class=\"blockquote\"> ' . $matches[1] . ' </blockquote>';\n        } else {\n            return $matches[0];\n        }\n    }\n\n    public static function extractMetaByMessage(& $msg) {\n        $meta = array();\n        if (strpos($msg,'[html_snippet]') !== false) {\n            $matches = array();\n            preg_match_all('/\\[html_snippet\\](.*?)\\[\\/html_snippet\\]/is',$msg,$matches);\n            foreach ($matches[0] as $index => $match) {\n                $msg = str_replace($match,'',$msg);\n                $meta['html_snippet'][] = $matches[1][$index];\n            }\n        }\n        return $meta;\n    }\n\n    public static function _make_base_link($matches) {\n        $data = htmlspecialchars($matches[1]);\n        $url = self::getHost() . erLhcoreClassDesign::baseurl($data);\n        return $url;\n    }\n\n    // Converts bbcode and general links to hmtl code\n    public static function make_clickable($ret, $paramsMessage = array()) {\n        $ret = ' ' . $ret;\n\n        $makeLinksClickable = true;\n\n        // Make base URL\n        $ret = preg_replace_callback('#\\[baseurl\\](.*?)\\[/baseurl\\]#is', 'erLhcoreClassBBCode::_make_base_link', $ret);\n\n        $ret = preg_replace_callback('/\\[img=?(.*?)\\](.*?)\\[\\/img\\]/ms', \"erLhcoreClassBBCodePlain::_make_url_embed_image\", $ret);\n\n        $ret = preg_replace_callback('/\\[loc\\](.*?)\\[\\/loc\\]/ms', \"erLhcoreClassBBCodePlain::_make_embed_map\", $ret);\n\n        $ret = preg_replace_callback('/\\[url\\=\"?(.*?)\"?\\](.*?)\\[\\/url\\]/ms', \"erLhcoreClassBBCodePlain::_make_url_embed\", $ret);\n\n        if (isset($paramsMessage['sender']) && $paramsMessage['sender'] == 0) {\n            $ret = preg_replace('/\\[html\\](.*?)\\[\\/html\\]/ms','',$ret);\n        }\n\n        $ret = preg_replace_callback('/\\[html\\](.*?)\\[\\/html\\]/ms', function ($matches) {\n            $html = htmlspecialchars_decode($matches[1]);\n\n            $html = preg_replace_callback('/\"window\\.parent\\.(.*)\"/ms',function ($matches){\n                return \"'lhinst.executeRemoteCommands([\\\"lhc_eval:\" . $matches[1] . \"\\\"])'\";\n            },$html);\n\n            return $html;\n\n        }, $ret);\n\n        if ($makeLinksClickable) {\n            $ret = self::make_clickable_text($ret);\n        }\n\n        $ret = self::BBCode2Html($ret);\n\n        // Paypal button\n        $ret = preg_replace_callback('#\\[paypal\\](.*?)\\[/paypal\\]#is', 'erLhcoreClassBBCodePlain::_make_paypal_button', $ret);\n\n        // Quote\n        $ret = preg_replace_callback('#\\[quote\\](.*?)\\[/quote\\]#is', 'erLhcoreClassBBCodePlain::makeQuote', $ret);\n\n        // Youtube block\n        $ret = preg_replace_callback('#\\[youtube\\](.*?)\\[/youtube\\]#is', 'erLhcoreClassBBCodePlain::_make_youtube_block', $ret);\n\n        $ret = preg_replace('#\\[translation\\](.*?)\\[/translation\\]#is', '<span class=\"tr-msg\">$1</span>', $ret);\n\n        // File block\n        $ret = preg_replace_callback('#\\[file=\"?(.*?)\"?\\]#is', 'erLhcoreClassBBCodePlain::_make_url_file', $ret);\n\n        // Survey\n        $ret = preg_replace_callback('#\\[survey=\"?(.*?)\"?\\]#is', 'erLhcoreClassBBCodePlain::_make_url_survey', $ret);\n\n        $ret = trim($ret);\n\n        return $ret;\n    }\n\n    public static function parseForMail($ret){\n        // File block\n        $ret = preg_replace_callback('#\\[file=\"?(.*?)\"?\\]#is', 'erLhcoreClassBBCodePlain::_make_url_mail_file', $ret);\n        return trim($ret);\n    }\n\n}\n\n\n?>", "<?php\n\n/**\n * Responsible for executing !<command> based queries\n * \n * */\nclass erLhcoreClassChatCommand\n{\n\n    private static $supportedCommands = array(\n        '!name' => 'self::setName',\n        '!email' => 'self::setEmail',\n        '!phone' => 'self::setPhone',\n        '!goto' => 'self::redirectTo',\n        '!translate' => 'self::startTranslation',\n        '!screenshot' => 'self::takeScreenshot',\n        '!contactform' => 'self::contactForm',\n        '!block' => 'self::blockUser',\n        '!close' => 'self::closeChat',\n        '!closed' => 'self::closeChatDialog',\n        '!delete' => 'self::deleteChat',\n        '!pending' => 'self::pendingChat',\n        '!active' => 'self::activeChat',\n        '!remark' => 'self::addRemark',\n        '!info' => 'self::info',\n        '!help' => 'self::help',\n    \t'!note' => 'self::notice',\n    \t'!hold' => 'self::hold',\n    \t'!gotobot' => 'self::goToBot',\n    \t'!transferforce' => 'self::transferforce',\n    \t'!files' => 'self::enableFiles',\n    \t'!stopfiles' => 'self::disableFiles',\n    \t'!modal' => 'self::showModal',\n    );\n\n    private static function extractCommand($message)\n    {\n        $params = explode(' ', $message);\n        \n        $commandData['command'] = array_shift($params);\n        $commandData['argument'] = trim(implode(' ', $params));\n        \n        return $commandData;\n    }\n\n    public static function showModal($params) {\n\n        if (!isset($params['argument']) || empty($params['argument'])) {\n            return array(\n                'processed' => true,\n                'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Please provide modal URL!')\n            );\n        }\n\n        $paramsURL = explode(' ',$params['argument']);\n        $URL = array_shift($paramsURL);\n\n        if (is_numeric($URL)) {\n            $URL =  (erLhcoreClassSystem::$httpsMode == true ? 'https:' : 'http:') . '//' . (isset($_SERVER['HTTP_HOST']) ? $_SERVER['HTTP_HOST'] : '') . erLhcoreClassDesign::baseurldirect('form/formwidget') . '/' . $URL;\n        }\n\n        // Store as message to visitor\n        $msg = new erLhcoreClassModelmsg();\n        $msg->msg = !empty($paramsURL) ? implode(' ',$paramsURL) : erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand','We will show a form in a moment!');\n        $msg->meta_msg = '{\"content\":{\"execute_js\":{\"text\":\"\",\"ext_execute\":\"modal_ext\",\"ext_args\":\"{\\\"delay\\\":3,\\\"url\\\":\\\"' . $URL .'\\\"}\"}}}';\n        $msg->chat_id = $params['chat']->id;\n        $msg->user_id = $params['user']->id;\n        $msg->time = time();\n        $msg->name_support = $params['user']->name_support;\n        $msg->saveThis();\n\n        // Update last user msg time so auto responder work's correctly\n        $params['chat']->last_op_msg_time = $params['chat']->last_user_msg_time = time();\n        $params['chat']->last_msg_id = $msg->id;\n\n        // All ok, we can make changes\n        $params['chat']->updateThis(array('update' => array('last_msg_id', 'last_op_msg_time', 'status_sub', 'last_user_msg_time')));\n\n        return array(\n            'status' => erLhcoreClassChatEventDispatcher::STOP_WORKFLOW,\n            'processed' => true,\n            'raw_message' => '!modal',\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Modal activated!') . ' ' . $URL\n        );\n    }\n\n    /**\n     * Processes command\n     */\n    public static function processCommand($params)\n    {\n        $commandData = self::extractCommand($params['msg']);\n        \n        if (key_exists($commandData['command'], self::$supportedCommands)) {\n            $params['argument'] = $commandData['argument'];\n            return call_user_func_array(self::$supportedCommands[$commandData['command']], array(\n                $params\n            ));\n        } else { // Perhaps some extension has implemented this command?\n\n            $command = erLhcoreClassModelGenericBotCommand::findOne(array('customfilter' => array('(dep_id = 0 OR dep_id = ' . (int)$params['chat']->dep_id . ')'),'filter' => array('command' => ltrim($commandData['command'],'!'))));\n\n            if ($command instanceof erLhcoreClassModelGenericBotCommand) {\n\n                $trigger = $command->trigger;\n\n                $ignore = false;\n\n                if ($trigger instanceof erLhcoreClassModelGenericBotTrigger) {\n\n                    $ignore = strpos($commandData['argument'],'--silent') !== false;\n\n                    if ($ignore == true) {\n                        $commandData['argument'] = trim(str_replace('--silent','',$commandData['argument']));\n                    }\n\n                    $argumentsTrigger = array(\n                        'msg' => $commandData['argument'], \n                        'caller_user_id' => $params['user']->id,\n                        'caller_user_class' => get_class($params['user']));\n\n                    foreach (explode('--arg',$commandData['argument']) as $indexArgument => $argumentValue) {\n                        $argumentsTrigger['replace_array']['{arg_'.($indexArgument + 1).'}'] = trim($argumentValue); // For direct replacement\n                        $argumentsTrigger['arg_'.($indexArgument + 1)] = trim($argumentValue);                       // For {args.arg_3} to work\n                    }\n\n                    erLhcoreClassGenericBotWorkflow::processTrigger($params['chat'], $trigger, false, array('args' => $argumentsTrigger));\n\n                    $response = '\"' . $trigger->name . '\"' . ' ' . erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'was executed');\n\n                } else {\n                    $response = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Assigned trigger could not be found');\n                }\n\n                return array(\n                    'ignore' => $ignore,\n                    'processed' => true,\n                    'process_status' => '',\n                    'raw_message' => $commandData['command'] . ' || ' . $response\n                );\n\n\n            } else {\n                $commandResponse = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.customcommand', array('command' => $commandData['command'], 'argument' => $commandData['argument'], 'params' => $params));\n\n                if (isset($commandResponse['processed']) && $commandResponse['processed'] == true) {\n                    return $commandResponse;\n                }\n            }\n        }\n        \n        return array(\n            'processed' => true,\n            'ignore' => true,\n            'process_status' => '',\n            'info' => 'Unknown command! [' . $commandData['command'] .']',\n        );\n    }\n\n    /**\n     * Updates chat nick.\n     *\n     * @param array $params            \n     *\n     * @return boolean\n     */\n    public static function setName($params)\n    {\n        \n        // Update object attribute\n        $params['chat']->nick = $params['argument'];\n        \n        // Update only\n        $db = ezcDbInstance::get();\n        $stmt = $db->prepare('UPDATE lh_chat SET nick = :nick WHERE id = :id');\n        $stmt->bindValue(':id', $params['chat']->id, PDO::PARAM_INT);\n        $stmt->bindValue(':nick', $params['chat']->nick, PDO::PARAM_STR);\n        $stmt->execute();\n        \n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Nick changed!')\n        );\n    }\n    \n    /**\n     * Just adds message from operator\n     *\n     * @param array $params\n     *\n     * @return boolean\n     */\n    public static function notice($params)\n    {\n    \treturn array(\n    \t\t\t'processed' => true,\n    \t\t\t'process_status' => '',\n    \t\t\t'raw_message' => $params['argument']\n    \t);\n    }\n\n    public static function disableFiles($params)\n    {\n        $chatVariables = $params['chat']->chat_variables_array;\n\n        if (isset($chatVariables['lhc_fu'])) {\n            unset($chatVariables['lhc_fu']);\n            $params['chat']->chat_variables = json_encode($chatVariables);\n            $params['chat']->chat_variables_array = $chatVariables;\n        }\n\n        if (!isset($params['argument']) || $params['argument'] != 'no') {\n            $msg = new erLhcoreClassModelmsg();\n            $msg->msg = (isset($params['argument']) && $params['argument'] != '') ? $params['argument'] : erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Files upload was disabled!');\n            $msg->chat_id = $params['chat']->id;\n            $msg->user_id = $params['user']->id;\n            $msg->time = time();\n            $msg->name_support = $params['user']->name_support;\n\n            erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_msg_admin_saved', array('msg' => & $msg, 'chat' => & $params['chat']));\n\n            $msg->saveThis();\n        }\n\n        // Schedule UI Refresh\n        $params['chat']->operation .= \"lhc_ui_refresh:0\\n\";\n\n        // Store permanently\n        $params['chat']->updateThis(array('update' => array('chat_variables', 'operation')));\n\n        return array(\n            'processed' => true,\n            'process_status' => '',\n            'raw_message' => '!stopfiles'\n        );\n    }\n\n    public static function enableFiles($params)\n    {\n        $chatVariables = $params['chat']->chat_variables_array;\n        $chatVariables['lhc_fu'] = 1;\n\n        $params['chat']->chat_variables = json_encode($chatVariables);\n        $params['chat']->chat_variables_array = $chatVariables;\n\n        if (!isset($params['argument']) || $params['argument'] != 'no') {\n            $msg = new erLhcoreClassModelmsg();\n            $msg->msg = (isset($params['argument']) && $params['argument'] != '') ? $params['argument'] : erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand','I have enabled files upload for you. [fupload]Upload a file[/fupload].');\n            $msg->chat_id = $params['chat']->id;\n            $msg->user_id = $params['user']->id;\n            $msg->time = time();\n            $msg->name_support = $params['user']->name_support;\n\n            erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_msg_admin_saved',array('msg' => & $msg, 'chat' => & $params['chat']));\n\n            $msg->saveThis();\n        }\n\n        // Schedule UI Refresh\n        $params['chat']->operation .= \"lhc_ui_refresh:1\\n\";\n\n        // Store permanently\n        $params['chat']->updateThis(array('update' => array('chat_variables','operation')));\n\n        return array(\n            'processed' => true,\n            'process_status' => '',\n            'raw_message' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand','Files upload enabled.')\n        );\n    }\n\n    /**\n     * Just adds message from operator\n     *\n     * @param array $params\n     *\n     * @return boolean\n     */\n    public static function hold($params)\n    {\n        $params['chat']->status_sub = erLhcoreClassModelChat::STATUS_SUB_ON_HOLD;\n\n        if ($params['argument'] != '') {\n            $defaultHoldMessage = $params['argument'];\n        } else if ($params['chat']->auto_responder !== false && $params['chat']->auto_responder->auto_responder !== false && $params['chat']->auto_responder->auto_responder->wait_timeout_hold != '') {\n            $defaultHoldMessage = $params['chat']->auto_responder->auto_responder->wait_timeout_hold;\n        } else {\n            $defaultHoldMessage = '';\n        }\n\n        if ($defaultHoldMessage != '') {\n            // Store as message to visitor\n            $msg = new erLhcoreClassModelmsg();\n            $msg->msg = $defaultHoldMessage;\n            $msg->chat_id = $params['chat']->id;\n            $msg->user_id = $params['user']->id;\n            $msg->time = time();\n            $msg->name_support = $params['user']->name_support;\n\n            erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_msg_admin_saved',array('msg' => & $msg, 'chat' => & $params['chat']));\n\n            $msg->saveThis();\n        }\n\n        // Reset auto responder on hold command\n        if ($params['chat']->auto_responder !== false) {\n            $params['chat']->auto_responder->active_send_status = 0;\n            $params['chat']->auto_responder->saveThis();\n        }\n\n        // Update last user msg time so auto responder work's correctly\n        $params['chat']->last_op_msg_time = $params['chat']->last_user_msg_time = time();\n\n        // All ok, we can make changes\n        $params['chat']->updateThis(array('update' => array('last_op_msg_time','status_sub','last_user_msg_time')));\n\n\n        return array(\n            'custom_args' => array(\n              'hold_added' => true\n            ),\n            'processed' => true,\n            'raw_message' => '!hold',\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat status changed on-hold!')\n        );\n    }\n\n    /**\n     * @desc Transfers chat to bot\n     *\n     * @param $params\n     * @return array\n     * @throws ezcPersistentDefinitionNotFoundException\n     * @throws ezcPersistentObjectNotPersistentException\n     * @throws ezcPersistentQueryException\n     */\n    public static function goToBot($params) {\n\n        $params['chat']->status = erLhcoreClassModelChat::STATUS_BOT_CHAT;\n        $params['chat']->last_op_msg_time = $params['chat']->last_user_msg_time = time();\n        $params['chat']->updateThis(array('update' => array('status','last_op_msg_time','last_user_msg_time')));\n\n        return array(\n            'processed' => true,\n            'raw_message' => '!gotobot',\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat was transferred to bot!')\n        );\n    }\n\n    /**\n     * Updates chat email.\n     *\n     * @param array $params            \n     *\n     * @return boolean\n     */\n    public static function setEmail($params)\n    {\n        \n        // Update object attribute\n        $params['chat']->email = $params['argument'];\n        \n        if (! isset($params['no_ui_update'])) {\n            // Schedule interface update\n            $params['chat']->operation_admin .= \"lhinst.updateVoteStatus(\" . $params['chat']->id . \");\";\n        }\n        \n        // Update only\n        $db = ezcDbInstance::get();\n        $stmt = $db->prepare('UPDATE lh_chat SET email = :email, operation_admin = :operation_admin WHERE id = :id');\n        $stmt->bindValue(':id', $params['chat']->id, PDO::PARAM_INT);\n        $stmt->bindValue(':email', $params['chat']->email, PDO::PARAM_STR);\n        $stmt->bindValue(':operation_admin', $params['chat']->operation_admin, PDO::PARAM_STR);\n        $stmt->execute();\n        \n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'E-mail changed!')\n        );\n    }\n\n    /**\n     * Option to transfer user to another user via command line directly\n     * */\n    public static function transferforce($params)\n    {\n        $user = erLhcoreClassModelUser::findOne(array('filter' => array('username' => $params['argument'])));\n        \n        // Try find user by e-mail\n        if (!($user instanceof erLhcoreClassModelUser)) {\n            $user = erLhcoreClassModelUser::findOne(array('filter' => array('email' => $params['argument'])));\n        }\n        \n        if ($user instanceof erLhcoreClassModelUser) {\n            \n            $permissionsArray = erLhcoreClassRole::accessArrayByUserID($params['user']->id);\n            \n            if ($params['chat']->user_id == $params['user']->id || erLhcoreClassRole::canUseByModuleAndFunction($permissionsArray, 'lhchat', 'allowtransferdirectly')) {\n                                                \n                $params['chat']->user_id = $user->id;\n                $params['chat']->status_sub = erLhcoreClassModelChat::STATUS_SUB_OWNER_CHANGED;\n                $params['chat']->user_typing_txt = htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('chat/accepttrasnfer','Chat has been transfered to'),ENT_QUOTES) . ' - ' . (string)$user;\n                $params['chat']->user_typing  = time();\n                     \n                // Change department if user cannot read current department, so chat appears in right menu\n                $filter = erLhcoreClassUserDep::parseUserDepartmetnsForFilter($user->id, $user->cache_version);\n                if ($filter !== true && !in_array($params['chat']->dep_id, $filter)) {\n                    $dep_id = erLhcoreClassUserDep::getDefaultUserDepartment($user->id);                    \n                    if ($dep_id > 0) {\n                        $params['chat']->dep_id = $dep_id;                       \n                    }\n                }\n                \n                $params['chat']->status_sub_sub = erLhcoreClassModelChat::STATUS_SUB_SUB_TRANSFERED;\n    \n                // Update UI\n                if (! isset($params['no_ui_update'])) {\n                    $params['chat']->operation_admin .= \"lhinst.updateVoteStatus(\" . $params['chat']->id . \");\";\n                }\n    \n                // All ok, we can make changes\n                erLhcoreClassChat::getSession()->update($params['chat']);\n                \n                // Chat was transfered callback\n                erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.chat_transfered_force', array('chat' => & $params['chat']));\n                \n                return array(\n                    'processed' => true,\n                    'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/accepttrasnfer','Chat has been transfered to') . ' - ' . (string)$user\n                );\n            \n            } else {\n                return array(\n                    'processed' => true,\n                    'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'You do not have permission to transfer chat directly!')\n                );\n            }            \n        } else {\n            return array(\n                'processed' => true,\n                'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'User could not be found!')\n            );\n        }\n    }\n    \n    /**\n     * Updates chat phone\n     *\n     * @param array $params            \n     *\n     * @return boolean\n     */\n    public static function setPhone($params)\n    {\n        \n        // Update object attribute\n        $params['chat']->phone = $params['argument'];\n        \n        if (! isset($params['no_ui_update'])) {\n            // Schedule interface update\n            $params['chat']->operation_admin .= \"lhinst.updateVoteStatus(\" . $params['chat']->id . \");\";\n        }\n\n        $params['chat']->updateThis(array('update' => array('phone','operation_admin')));\n\n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Phone changed!')\n        );\n    }\n\n    /**\n     * Redirects user to specified URL\n     *\n     * @param array $params            \n     *\n     * @return boolean\n     */\n    public static function redirectTo($params)\n    {\n        \n        // Update object attribute\n        $params['chat']->operation .= 'lhc_chat_redirect:' . str_replace(':', '__SPLIT__', $params['argument']) . \"\\n\";\n        $params['chat']->updateThis(array('update' => array('operation')));\n\n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'User was redirected!')\n        );\n    }\n\n    public static function startTranslation($params)\n    {\n        // Schedule interface update\n        $params['chat']->operation_admin .= \"lhc.methodCall('lhc.translation','startTranslation',{'btn':$('#start-trans-btn-{$params['chat']->id}'),'chat_id':'{$params['chat']->id}'});\";\n        \n        $params['chat']->updateThis(array('update' => array('operation_admin')));\n        \n        return array(\n            'processed' => true,\n            'process_status' => ''\n        );\n    }\n\n    public static function takeScreenshot($params)\n    {\n        // Update object attribute\n        $params['chat']->operation .= \"lhc_screenshot\\n\";\n        \n        // Update only\n        $params['chat']->updateThis(array('update' => array('operation')));\n\n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Screenshot was scheduled!')\n        );\n    }\n\n    public static function contactForm($params)\n    {\n        if (isset($params['no_ui_update'])) {\n            erLhcoreClassChatHelper::redirectToContactForm($params);\n        } else {\n            \n            // Schedule interface update\n            $params['chat']->operation_admin .= \"lhinst.redirectContact('{$params['chat']->id}');\";\n            \n            $params['chat']->updateThis(array('update' => array('operation_admin')));\n        }\n        \n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'User was redirected to contact form!')\n        );\n    }\n\n    public static function blockUser($params)\n    {\n        erLhcoreClassModelChatBlockedUser::blockChat(array('user' => $params['user'], 'chat' => $params['chat']));\n\n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'User was blocked!')\n        );\n    }\n    \n    public static function info($params)\n    {\n        $infoArray = array();\n        $infoArray[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Department').' - '.(string)$params['chat']->department;\n        \n        if ($params['chat']->referrer != '') {\n            $infoArray[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Started chat from').' - '.(string)$params['chat']->referrer;\n        }\n        \n        if ($params['chat']->session_referrer != '') {\n            $infoArray[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Refered from').' - '.(string)$params['chat']->session_referrer;\n        }\n        \n        if ($params['chat']->online_user !== false && $params['chat']->online_user->current_page != '') {\n            $infoArray[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Current page').' - '.(string)$params['chat']->online_user->current_page;\n        }\n        \n        if ($params['chat']->email != '') {\n            $infoArray[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'E-mail').' - '.(string)$params['chat']->email;\n        }\n        \n        if ($params['chat']->phone != '') {\n            $infoArray[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Phone').' - '.(string)$params['chat']->phone;\n        }\n        \n        if ($params['chat']->country_name != '') {\n            $infoArray[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Country').' - '.(string)$params['chat']->country_name;\n        }\n        \n        return array(\n            'processed' => true,\n            'process_status' => '',\n            'ignore' => true,\n            'info' => implode(\"\\n\", array_filter($infoArray))\n        );\n    }\n    \n    public static function help()\n    {                    \n        return array(\n            'processed' => true,\n            'process_status' => '',\n            'ignore' => true,\n            'info' => implode(\"\\n\", array_keys(self::$supportedCommands))\n        );\n    }\n\n    public static function closeChat($params)\n    {\n        if (isset($params['no_ui_update'])) {\n            \n            $permissionsArray = erLhcoreClassRole::accessArrayByUserID($params['user']->id);\n            \n            if ($params['chat']->user_id == $params['user']->id || erLhcoreClassRole::canUseByModuleAndFunction($permissionsArray, 'lhchat', 'allowcloseremote')) {\n                erLhcoreClassChatHelper::closeChat($params);\n                return array(\n                    'processed' => true,\n                    'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat was closed!')\n                );\n            } else {\n                return array(\n                    'processed' => true,\n                    'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'You do not have permission to close a chat!')\n                );\n            }\n        } else {\n            // Schedule interface update\n            $params['chat']->operation_admin .= \"lhinst.closeActiveChatDialog('{$params['chat']->id}',$('#tabs'),true);\";\n\n            $params['chat']->updateThis(array('update' => array('operation_admin')));\n\n            return array(\n                'processed' => true,\n                'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat was closed!')\n            );\n        }\n    }\n    \n    /**\n     * \n     * @param array $params\n     * \n     * @return multitype:boolean string\n     */\n    public static function closeChatDialog($params)\n    {\n        // Schedule interface update\n        $params['chat']->operation_admin .= \"lhinst.removeDialogTab('{$params['chat']->id}',$('#tabs'),true);\";\n                \n        $params['chat']->updateThis(array('update' => array('operation_admin')));\n\n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat was closed!')\n        );        \n    }\n    \n    /**\n     * Deletes a chat\n     */\n    public static function deleteChat($params)\n    {\n        if (isset($params['no_ui_update'])) {\n            \n            $permissionsArray = erLhcoreClassRole::accessArrayByUserID($params['user']->id);\n            \n            if (erLhcoreClassRole::canUseByModuleAndFunction($permissionsArray, 'lhchat', 'deleteglobalchat') || (erLhcoreClassRole::canUseByModuleAndFunction($permissionsArray, 'lhchat', 'deletechat') && $params['chat']->user_id == $params['user']->id)) {\n                erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.delete', array(\n                    'chat' => & $params['chat'],\n                    'user' => $params['user']\n                ));\n                $params['chat']->removeThis();\n                \n                return array(\n                    'processed' => true,\n                    'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat was deleted!')\n                );\n            } else {\n                return array(\n                    'processed' => true,\n                    'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'You do not have permission to delete a chat!')\n                );\n            }\n        } else {\n            // Schedule interface update\n            $params['chat']->operation_admin .= \"lhinst.deleteChat('{$params['chat']->id}',$('#tabs'),true);\";\n            \n            $params['chat']->updateThis(array('update' => array('operation_admin')));\n            \n            return array(\n                'processed' => true,\n                'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat was deleted!')\n            );\n        }\n    }\n\n    /**\n     * Changes stat status to pending\n     */\n    public static function pendingChat($params)\n    {\n        erLhcoreClassChatHelper::changeStatus(array(\n            'user' => $params['user'],\n            'chat' => & $params['chat'],\n            'status' => erLhcoreClassModelChat::STATUS_PENDING_CHAT,\n            'allow_close_remote' => erLhcoreClassRole::canUseByModuleAndFunction(erLhcoreClassRole::accessArrayByUserID($params['user']->id), 'lhchat', 'allowcloseremote')\n        ));\n        \n        if (! isset($params['no_ui_update'])) {\n            $params['chat']->operation_admin .= \"lhinst.updateVoteStatus(\" . $params['chat']->id . \");\";\n            $params['chat']->updateThis(array('update' => array('operation_admin')));\n        }\n        \n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat status was changed to pending!')\n        );\n    }\n    \n    public static function activeChat($params)\n    {\n        erLhcoreClassChatHelper::changeStatus(array(\n            'user' => $params['user'],\n            'chat' => & $params['chat'],\n            'status' => erLhcoreClassModelChat::STATUS_ACTIVE_CHAT,\n            'allow_close_remote' => erLhcoreClassRole::canUseByModuleAndFunction(erLhcoreClassRole::accessArrayByUserID($params['user']->id), 'lhchat', 'allowcloseremote')\n        ));\n        \n        if (! isset($params['no_ui_update'])) {\n            $params['chat']->operation_admin .= \"lhinst.updateVoteStatus(\" . $params['chat']->id . \");\";\n\n            $params['chat']->updateThis(array('update' => array('operation_admin')));\n        }\n        \n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat status was changed to active!')\n        );\n    }\n    \n    /**\n     * Add remarks to chat\n     * */\n    public static function addRemark($params)\n    {     \n        $params['chat']->remarks = $params['argument'];\n        \n        if (! isset($params['no_ui_update'])) {\n            $params['chat']->operation_admin .= \"lhinst.updateVoteStatus(\" . $params['chat']->id . \");\";\n        }\n\n        $params['chat']->updateThis(array('update' => array('operation_admin','remarks')));\n              \n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Remarks were saved!')\n        );\n    }\n}\n\n?>", "<?php\r\n\r\nclass erLhcoreClassChatExport {\r\n\r\n\tpublic static function chatExportXML(erLhcoreClassModelChat $chat) {\r\n\t\t$tpl = new erLhcoreClassTemplate('lhexport/xml.tpl.php');\r\n\t\t$tpl->set('chat', $chat);\r\n\t\treturn $tpl->fetch();\r\n\t}\r\n\r\n\tpublic static function chatExportJSON(erLhcoreClassModelChat $chat) {\r\n\t\t$tpl = new erLhcoreClassTemplate('lhexport/json.tpl.php');\r\n\t\t$tpl->set('chat', $chat);\r\n\t\treturn $tpl->fetch();\r\n\t}\r\n\r\n\tpublic static function exportCannedMessages($messages) {\r\n        $filename = \"canned-messages-\".date('Y-m-d').\".csv\";\r\n        $fp = fopen('php://output', 'w');\r\n\r\n        header('Content-type: application/csv');\r\n        header('Content-Disposition: attachment; filename='.$filename);\r\n\r\n        $counter = 0;\r\n        foreach ($messages as $message) {\r\n            $values = $message->getState();\r\n            $values['subject'] = implode(',',$message->subject_name_front);\r\n            $values['tags_plain'] = $message->tags_plain;\r\n            $values['department_ids_front'] = implode(',',$message->department_ids_front);\r\n            if ($counter == 0) {\r\n                fputcsv($fp, array_keys($values));\r\n            }\r\n            fputcsv($fp, $values);\r\n            $counter++;\r\n        }\r\n        exit;\r\n    }\r\n\r\n    public static function exportUsers($users) {\r\n        $filename = \"users-\".date('Y-m-d').\".csv\";\r\n        $fp = fopen('php://output', 'w');\r\n\r\n        header('Content-type: application/csv');\r\n        header('Content-Disposition: attachment; filename='.$filename);\r\n\r\n        $counter = 0;\r\n        foreach ($users as $user) {\r\n            $values = $user->getState();\r\n            unset($values['password']);\r\n\r\n            $values['user_groups_id'] = implode(',',$user->user_groups_id);\r\n\r\n            if (!empty($user->user_groups_id)) {\r\n                $values['user_groups_name'] = implode(',',erLhcoreClassModelGroup::getList(array('filterin' => array('id' => $user->user_groups_id))));\r\n            } else {\r\n                $values['user_groups_name'] = '';\r\n            }\r\n\r\n            $values['dep_groups_id'] = '';\r\n            $values['dep_groups_name'] = '';\r\n\r\n            $depGroupIds = $depGroupNames = [];\r\n            $userGroups = erLhcoreClassModelDepartamentGroupUser::getList(array('filter' => array('user_id' => $user->id)));\r\n            foreach ($userGroups as $userGroup) {\r\n                $depGroupIds[] = $userGroup->dep_group_id;\r\n                $depGroupNames[] = (string)$userGroup->dep_group;\r\n            }\r\n\r\n            $values['dep_groups_id'] = implode(',',$depGroupIds);\r\n            $values['dep_groups_name'] = implode(',',$depGroupNames);\r\n\r\n            $lastLogin = erLhcoreClassModelUserLogin::findOne(array('sort' => 'ctime DESC','filter' => array('user_id' => $user->id)));\r\n            \r\n            $values['last_login'] = $lastLogin instanceof erLhcoreClassModelUserLogin ? date(erLhcoreClassModule::$dateDateHourFormat,$lastLogin->ctime) : '';\r\n\r\n            if ($counter == 0) {\r\n                fputcsv($fp, array_keys($values));\r\n            }\r\n            fputcsv($fp, $values);\r\n            $counter++;\r\n        }\r\n        exit;\r\n    }\r\n\r\n    public static function exportDepartments($items) {\r\n        $filename = \"departments-\".date('Y-m-d').\".csv\";\r\n        $fp = fopen('php://output', 'w');\r\n\r\n        header('Content-type: application/csv');\r\n        header('Content-Disposition: attachment; filename='.$filename);\r\n\r\n        $counter = 0;\r\n        foreach ($items as $item) {\r\n            $values = $item->getState();\r\n\r\n            $botConfiguration = $item->bot_configuration_array;\r\n\r\n            $values['bot_id'] = isset($botConfiguration['bot_id']) ? $botConfiguration['bot_id'] : 0;\r\n            $values['bot_name'] = $values['bot_id'] > 0 ? (string)erLhcoreClassModelGenericBotBot::fetch($values['bot_id']) : '';\r\n\r\n            $values['bot_translation_group_id'] = isset($botConfiguration['bot_tr_id']) ? $botConfiguration['bot_tr_id'] : 0;\r\n            $values['bot_translation_group_name'] = $values['bot_translation_group_id']  > 0 ? (string)erLhcoreClassModelGenericBotTrGroup::fetch($values['bot_translation_group_id']) : '';\r\n\r\n            $memberOfGroups = erLhcoreClassModelDepartamentGroupMember::getList(['filter' => ['dep_id' => $item->id]]);\r\n\r\n            $ids = [];\r\n            $names = [];\r\n\r\n            foreach ($memberOfGroups as $member) {\r\n                $departmentGroup = erLhcoreClassModelDepartamentGroup::fetch($member->dep_group_id);\r\n                $ids[] = $member->dep_group_id;\r\n                $names[] = (string)$departmentGroup;\r\n            }\r\n\r\n            $values['department_group_ids'] = implode(',',$ids);\r\n            $values['department_group_names'] = implode(',',$names);\r\n\r\n            unset($values['department_transfer_id']);\r\n            unset($values['transfer_timeout']);\r\n\r\n            $values['department_transfer_id'] = $item->department_transfer_id;\r\n            $values['transfer_timeout'] = $item->transfer_timeout;\r\n            $values['department_transfer_name'] = $item->department_transfer_id > 0 ? (string)erLhcoreClassModelDepartament::fetch($item->department_transfer_id) : '';\r\n\r\n            if ($counter == 0) {\r\n                fputcsv($fp, array_keys($values));\r\n            }\r\n            fputcsv($fp, $values);\r\n            $counter++;\r\n        }\r\n        exit;\r\n    }\r\n\r\n\tpublic static function exportDepartmentStats($departments) {\r\n\t    include 'lib/core/lhform/PHPExcel.php';\r\n\t\t\t$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_to_phpTemp;\r\n\t\t\t$cacheSettings = array( 'memoryCacheSize ' => '64MB');\r\n\t\t\tPHPExcel_Settings::setCacheStorageMethod($cacheMethod, $cacheSettings);\r\n\r\n\t    $objPHPExcel = new PHPExcel();\r\n\t    $objPHPExcel->setActiveSheetIndex(0);\r\n\t    $objPHPExcel->getActiveSheet()->getStyle('A1:AW1')->getFont()->setBold(true);\r\n\t    $objPHPExcel->getActiveSheet()->setTitle('Report');\r\n\t    \r\n\t    $objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow(0, 1, \"ID\");\r\n\t    $objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow(1, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Department name'));\r\n\t    $objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow(2, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Pending chats number'));\r\n\t    $objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow(3, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Active chats number'));\r\n\t    \r\n\t    $attributes = array(\r\n\t        'id',\r\n\t        'name',\r\n\t        'pending_chats_counter',\r\n\t        'active_chats_counter',\r\n\t    );\r\n\t    \r\n\t    $i = 2;\r\n\t    foreach ($departments as $item) {\r\n\t        foreach ($attributes as $key => $attr) {\r\n\t            $objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($key, $i, (string)$item->{$attr});\r\n\t        }\r\n\t        $i++;\r\n\t    }\r\n\t    \r\n\t    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\r\n\t    \r\n\t    // We'll be outputting an excel file\r\n\t    header('Content-type: application/vnd.ms-excel');\r\n\t    \r\n\t    // It will be called file.xls\r\n\t    header('Content-Disposition: attachment; filename=\"report.xlsx\"');\r\n\t    \r\n\t    // Write file to the browser\r\n\t    $objWriter->save('php://output');\r\n\t}\r\n\r\n    public static function messagesStatistic(& $itemData, $item)\r\n    {\r\n        $itemData[] = erLhcoreClassModelmsg::getCount(array('limit' => false,'filter' => array('chat_id' => $item->id))); // Total messages\r\n        $visitorMessagesCount = erLhcoreClassModelmsg::getCount(array('limit' => false,'filter' => array('user_id' => 0, 'chat_id' => $item->id)));\r\n        $itemData[] =  $visitorMessagesCount; // Visitor messages\r\n        $itemData[] = erLhcoreClassModelmsg::getCount(array('limit' => false,'filter' => array('user_id' => -2, 'chat_id' => $item->id))); // Bot messages\r\n        $itemData[] = erLhcoreClassModelmsg::getCount(array('limit' => false,'filtergt' => array('user_id' => 0),'filter' => array('chat_id' => $item->id))); // Operator messages\r\n        $itemData[] = erLhcoreClassModelmsg::getCount(array('limit' => false,'filter' => array('user_id' => -1,'chat_id' => $item->id))); // System messages\r\n        // We have a bot assigned\r\n        // Chat does not have an operator OR it has operator and message time is less than chat become pending\r\n        $visitorMessagesBotCount = 0;\r\n        $botMessages = [];\r\n        $agentMessages = [];\r\n\r\n        if ($item->gbot_id > 0) {\r\n            // All visitor messages were interactions with bot\r\n            if ($item->user_id == 0) {\r\n                $visitorMessagesBotCount = $visitorMessagesCount;\r\n                $itemData[] = $visitorMessagesBotCount;\r\n                // All interactions were with a bot\r\n                $botMessages = erLhcoreClassModelmsg::getList(array('limit' => false, 'filter' => array('chat_id' => $item->id)));\r\n            } else {\r\n                $botMessages = erLhcoreClassModelmsg::getList(array('limit' => false, 'filterlte' => array('time' => $item->pnd_time),'filter' => array('chat_id' => $item->id)));\r\n                $agentMessages =  erLhcoreClassModelmsg::getList(array('limit' => false, 'filtergt' => array('time' => $item->pnd_time),'filter' => array('chat_id' => $item->id)));\r\n                $visitorMessagesBotCount = erLhcoreClassModelmsg::getCount(array('limit' => false, 'filterlte' => array('time' => $item->pnd_time),'filter' => array('user_id' => 0, 'chat_id' => $item->id)));\r\n                $itemData[] = $visitorMessagesBotCount;\r\n            }\r\n        } else { // There was no bot assigned\r\n            $itemData[] = 0;\r\n            $agentMessages = erLhcoreClassModelmsg::getList(array('limit' => false, 'filter' => array('chat_id' => $item->id)));\r\n        }\r\n\r\n        $itemData[] = $visitorMessagesCount - $visitorMessagesBotCount;\r\n\r\n        $timesResponse = [];\r\n        $startTime = 0;\r\n        $firstBotResponseTime = 'None';\r\n\r\n        foreach ($botMessages as $messageWithABot) {\r\n            if ($messageWithABot->user_id == 0) {\r\n                if ($startTime == 0) {\r\n                    $startTime = $messageWithABot->time;\r\n                }\r\n            } elseif ($messageWithABot->user_id == -2) {\r\n                if ($startTime > 0) {\r\n                    if (empty($timesResponse)){\r\n                        $firstBotResponseTime = $messageWithABot->time - $startTime;\r\n                        $timesResponse[] = $firstBotResponseTime;\r\n                    } else {\r\n                        $timesResponse[] = $messageWithABot->time - $startTime;\r\n                    }\r\n\r\n                    $startTime = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        $tillFirstOperatorMessage = 'None';\r\n        $firstAgentResponseTime = 'None';\r\n        $timesResponseAgent = [];\r\n        $startTime = $item->pnd_time;\r\n\r\n        foreach ($agentMessages as $agentMessage) {\r\n            if ($agentMessage->user_id == 0) {\r\n                if ($startTime == 0) {\r\n                    $startTime = $agentMessage->time;\r\n                }\r\n            } elseif ($agentMessage->user_id > 0) {\r\n                if ($tillFirstOperatorMessage == 'None') {\r\n                    $tillFirstOperatorMessage = $agentMessage->time - $item->pnd_time;\r\n                    if ($tillFirstOperatorMessage < 0) { // It was operator who first send a message\r\n                        $tillFirstOperatorMessage = 0;\r\n                    }\r\n                }\r\n\r\n                if ($startTime > 0) {\r\n                    // It's first agent response\r\n                    if (empty($timesResponseAgent)) {\r\n                        $responseTime = $agentMessage->time - ($item->wait_time + $item->pnd_time);\r\n                        if ($responseTime > 0) {\r\n                            $firstAgentResponseTime = $responseTime;\r\n                            $timesResponseAgent[] = $firstAgentResponseTime;\r\n                        } else {\r\n                            $responseTime = $agentMessage->time - $item->pnd_time;\r\n                            if ($responseTime > 0) {\r\n                                $firstAgentResponseTime = $responseTime;\r\n                                $timesResponseAgent[] = $firstAgentResponseTime;\r\n                            } else {\r\n\r\n                                $firstAgentResponseTime = $agentMessage->time - $item->time;\r\n\r\n                                // Happens for old proactive chat invitations\r\n                                if ($firstAgentResponseTime < 0) {\r\n                                    $firstAgentResponseTime = 0;\r\n                                }\r\n\r\n                                $timesResponseAgent[] = $firstAgentResponseTime;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        $timesResponseAgent[] = $agentMessage->time - $startTime;\r\n                    }\r\n                    $startTime = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        $itemData[] = !empty($timesResponseAgent) ? max($timesResponseAgent) : 'None';\r\n        $itemData[] = !empty($timesResponse) ? max($timesResponse) : 'None';\r\n        $itemData[] = !empty($timesResponseAgent) ? (array_sum($timesResponseAgent)/count($timesResponseAgent)) : 'None';\r\n        $itemData[] = !empty($timesResponse) ? array_sum($timesResponse)/count($timesResponse) : 'None';\r\n        $itemData[] = $firstAgentResponseTime;\r\n        $itemData[] = $firstBotResponseTime;\r\n        $itemData[] = $tillFirstOperatorMessage;\r\n    }\r\n\r\n\tpublic static function chatListExportXLS($chats, $params = array()) {\r\n\r\n\t\tinclude 'lib/core/lhform/PHPExcel.php';\r\n\t\t$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_to_phpTemp;\r\n\t\t$cacheSettings = array( 'memoryCacheSize ' => '64MB');\r\n\t\tPHPExcel_Settings::setCacheStorageMethod($cacheMethod, $cacheSettings);\r\n\r\n\t\t$chatArray = array();\r\n\t\t\r\n\t\t$id = \"ID\";\r\n\t\t$name = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Visitor Name');\r\n\t\t$email = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','E-mail');\r\n\t\t$phone = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Phone');\r\n\t\t$wait = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Wait time');\r\n\t\t$waitAbandoned = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Wait time abandoned');\r\n\t\t$country = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Country');\r\n\t\t$countryCode = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Country Code');\r\n\t\t$city = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','City');\r\n\t\t$ip = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','IP');\r\n\t\t$operator = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Operator');\r\n\t\t$operatorName = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Operator Name');\r\n\t\t$dept = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Department');\r\n\t\t$date = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Date');\r\n\t\t$minutes = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Minutes');\r\n\t\t$vote = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Vote status');\r\n\t\t$subjects = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Subjects');\r\n\t\t$mail = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Mail send');\r\n\t\t$page = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Page');\r\n\t\t$from = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Came from');\r\n\t\t$link = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Link');\r\n\t\t$remarks = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Remarks');\r\n\t\t$visitorRemarks = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Visitor remarks');\r\n\t\t$device = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Device');\r\n\t\t$visitorID = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Visitor ID');\r\n\t\t$duration = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Duration');\r\n\t\t$chat_initiator = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Started by');\r\n\t\t$browser = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','User agent');\r\n\t\t$browserBrand = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Browser');\r\n\t\t$platform = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Platform');\r\n        $user_id_op = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','User ID');\r\n        $referrer = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Chat start page');      // Page visitor started a chat\r\n        $session_referrer = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Referer page'); // Page from which visitor come to website\r\n        $chat_start_time = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Chat start time');\r\n        $chat_end_time = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Chat end time');\r\n        $is_unread = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Is unread by operator');\r\n        $is_unread_visitor = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Is unread by visitor');\r\n        $is_abandoned = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Is abandoned');\r\n        $bot = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Bot');\r\n        $chat_actions = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Chat actions');\r\n\r\n\t\t$additionalDataPlain = array();\r\n\t\tfor ($i = 1; $i <= 20; $i++) {\r\n            $additionalDataPlain[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Additional data').' - '.$i;\r\n        }\r\n\r\n\t\t$additionalData = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Additional data');\r\n\r\n        $survey = array();\r\n        for ($i = 1; $i <= 20; $i++) {\r\n            $survey[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Survey data').' - '.$i;\r\n        }\r\n\r\n\t\t$mainColumns = array($id, $name, $email, $phone, $wait, $waitAbandoned, $country, $countryCode, $city, $ip, $operator, $operatorName, $user_id_op, $dept, $date, $minutes, $vote, $mail, $page, $from, $link, $remarks, $visitorRemarks, $subjects, $is_unread, $is_unread_visitor, $is_abandoned, $bot, $chat_actions, $device, $visitorID, $duration, $chat_initiator, $browser, $browserBrand, $platform, $referrer, $session_referrer, $chat_start_time, $chat_end_time);\r\n\r\n\t\tif (isset($params['type']) && in_array(2,$params['type'])) {\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Chat content');\r\n        }\r\n\r\n        if (isset($params['type']) && in_array(6, $params['type'])) {\r\n            $chatVariables = erLhAbstractModelChatVariable::getList();\r\n            foreach ($chatVariables as $chatVariable){\r\n                $mainColumns[] = $chatVariable->var_name;\r\n            }\r\n        }\r\n\r\n        if (isset($params['type']) && in_array(4,$params['type'])) {\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Messages');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Visitor messages');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Bot messages');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Operator messages');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','System messages');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Visitor messages to bot');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Visitor messages to operator');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Maximum agent response time');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Maximum bot response time');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Average agent response time');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Average bot response time');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','First agent response time');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','First bot response time');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Wait time till first operator message');\r\n        }\r\n\r\n        if (isset($params['type']) && in_array(5,$params['type'])) {\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Subject');\r\n        }\r\n\r\n\t\tif (isset($params['type']) && in_array(3,$params['type'])) {\r\n            $mainColumns = array_merge($mainColumns,$survey);\r\n        }\r\n\r\n        $chatArray[] = array_merge($mainColumns, $additionalDataPlain, array($additionalData));\r\n\r\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.list_export_columns',array('items' => & $chatArray));\r\n\r\n\t\tif ($params['csv'] && $params['csv'] == true) {\r\n            $now = gmdate(\"D, d M Y H:i:s\");\r\n            header(\"Expires: Tue, 03 Jul 2001 06:00:00 GMT\");\r\n            header(\"Cache-Control: max-age=0, no-cache, must-revalidate, proxy-revalidate\");\r\n            header(\"Last-Modified: {$now} GMT\");\r\n\r\n            // force download\r\n            header(\"Content-Type: application/force-download\");\r\n            header(\"Content-Type: application/octet-stream\");\r\n            header(\"Content-Type: application/download\");\r\n\r\n            // disposition / encoding on response body\r\n            header(\"Content-Disposition: attachment;filename=report.csv\");\r\n            header(\"Content-Transfer-Encoding: binary\");\r\n\r\n            $df = fopen(\"php://output\", 'w');\r\n\r\n            // First row\r\n            fputcsv($df, $chatArray[0]);\r\n        }\r\n\r\n        foreach ($chats as $item) {\r\n                $item = erLhcoreClassModelChat::fetch($item->id, false);\r\n                $id = (string)$item->{'id'};\r\n                $nick = (string)$item->{'nick'};\r\n                $email = (string)$item->{'email'};\r\n                $phone = (string)$item->{'phone'};\r\n                $wait = (string)$item->{'wait_time'};\r\n                $country = (string)$item->{'country_name'};\r\n                $countryCode = (string)$item->{'country_code'};\r\n                $city = (string)$item->{'city'};\r\n                $ip = (string)$item->{'ip'};\r\n                $user = (string)$item->{'user'};\r\n                $operatorName = (string)$item->{'n_off_full'};\r\n                $user_id_op = (string)$item->{'user_id'};\r\n                $dept = (string)$item->{'department'};\r\n                $remarks = (string)$item->{'remarks'};\r\n                $device = (string)$item->{'device_type'} == 0 ? erTranslationClassLhTranslation::getInstance()->getTranslation('chat/adminchat','Computer') : ((string)$item->{'device_type'} == 1 ? erTranslationClassLhTranslation::getInstance()->getTranslation('chat/adminchat','Mobile') : erTranslationClassLhTranslation::getInstance()->getTranslation('chat/adminchat','Tablet'));\r\n                $visitorID = (string)$item->online_user_id;\r\n                $duration = (string)$item->chat_duration;\r\n                $chat_initiator = $item->chat_initiator == erLhcoreClassModelChat::CHAT_INITIATOR_DEFAULT ? 'visitor' : 'proactive';\r\n                $browser = (string)$item->uagent;\r\n                $visitorRemarks = $item->online_user_id > 0 && ($onlineUser = erLhcoreClassModelChatOnlineUser::fetch($item->online_user_id, false)) && $onlineUser instanceof erLhcoreClassModelChatOnlineUser ? $onlineUser->notes : '';\r\n\r\n                $detect = new BrowserDetection;\r\n                $OSDetails = $detect->getOS($item->uagent);\r\n                $browserDetails = $detect->getBrowser($item->uagent);\r\n\r\n                $osFamily = isset($OSDetails['os_family']) ? $OSDetails['os_family'] : 'Unknown';\r\n                $browserBrand = isset($browserDetails['browser_name']) ? $browserDetails['browser_name'] : 'Unknown';\r\n\r\n                $referrer = (string)$item->referrer;\r\n                $session_referrer = (string)$item->session_referrer;\r\n                $chat_start_time = date('Y-m-d H:i:s',$item->time);\r\n                $chat_end_time = $item->cls_time > 0 ? date('Y-m-d H:i:s',$item->cls_time) : '';\r\n\r\n                $subjects = implode(',',erLhAbstractModelSubjectChat::getList(array('filter' => array('chat_id' => $item->id))));\r\n                $is_unread = (int)$item->has_unread_messages;\r\n                $is_unread_visitor = (int)$item->has_unread_op_messages;\r\n                $is_abandoned = ($item->lsync < ($item->pnd_time + $item->wait_time) && $item->wait_time > 1) || ($item->lsync > ($item->pnd_time + $item->wait_time) && $item->wait_time > 1 && $item->user_id == 0) ? 1 : 0;\r\n                $waitAbandoned = 'None';\r\n\r\n                if ($is_abandoned == true) {\r\n                    $waitAbandoned = ($item->cls_time > 0 ? $item->cls_time : time()) - $item->pnd_time;\r\n                }\r\n\r\n                $bot = (string)$item->bot;\r\n\r\n                $date = date(erLhcoreClassModule::$dateFormat,$item->time);\r\n                $minutes = date('H:i:s',$item->time);\r\n                $vote = ($item->fbst == 1 ? 'UP' : ($item->fbst == 2 ? 'DOWN' : 'NONE'));\r\n                $mail = $item->mail_send == 1 ? 'Yes' : 'No';\r\n                $page = $item->referrer;\r\n                $additionalDataContent = $item->additional_data;\r\n\r\n                // Create empty array of 20 to make sure all are filled\r\n                $urlData = array();\r\n                $pairsRegular = array();\r\n                if (!empty($additionalDataContent)) {\r\n                    foreach (json_decode($additionalDataContent,true) as $index => $additionalItem) {\r\n                        if (isset($additionalItem['url']) && $additionalItem['url'] == true) {\r\n                            $urlData[] = $additionalItem['key'] . ' - ' . $additionalItem['value'];\r\n                        } else {\r\n                            $pairsRegular[] = (isset($additionalItem['key']) ? $additionalItem['key'] : '') . ' - ' . (isset($additionalItem['value']) ? $additionalItem['value'] : '');\r\n                        }\r\n\r\n                    }\r\n                }\r\n                       \r\n                // Put URL arguments always first\r\n                $additionalPairs = array_merge($urlData,$pairsRegular);\r\n                $additionalPairs = array_merge($additionalPairs,array_fill(count($additionalPairs),20-count($additionalPairs),''));\r\n\r\n                if ($item->session_referrer != '') {\r\n                        $referer = parse_url($item->session_referrer);                    \r\n                        if (isset($referer['host'])) {\r\n                            $from = $referer['host'];\r\n                        } else {\r\n                        \t$from = null;\r\n                        }\r\n                } else {\r\n                \t$from = null;\r\n                }\r\n\r\n                $url = erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurl('user/login').'/(r)/'.rawurlencode(base64_encode('chat/single/'.$item->id));\r\n\r\n                $chat_actions = '';\r\n\r\n                foreach (erLhcoreClassModelChatAction::getList(['sort' => 'id ASC', 'limit' => false, 'filter' => ['chat_id' => $item->id]]) as $chatActionItem) {\r\n                    $chat_actions .= $chatActionItem->body.\"\\n\";\r\n                }\r\n\r\n                $itemData = array($id, $nick, $email, $phone, $wait, $waitAbandoned, $country, $countryCode, $city, $ip, $user, $operatorName, $user_id_op, $dept, $date, $minutes, $vote, $mail, $page, $from, $url, $remarks, $visitorRemarks, $subjects, $is_unread, $is_unread_visitor, $is_abandoned, $bot, trim($chat_actions), $device, $visitorID, $duration, $chat_initiator, $browser, $browserBrand, $osFamily, $referrer, $session_referrer, $chat_start_time, $chat_end_time);\r\n\r\n                // Print chat content to last column\r\n                if (isset($params['type']) && in_array(2,$params['type'])) {\r\n\r\n                    $messages = erLhcoreClassModelmsg::getList(array('limit' => 10000,'sort' => 'id ASC','filter' => array('chat_id' => $item->id)));                       \r\n                    $messagesContent = '';\r\n\r\n                    foreach ($messages as $msg ) {\r\n                        if ($msg->user_id == -1) {\r\n                                $messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. erTranslationClassLhTranslation::getInstance()->getTranslation('chat/syncadmin','System assistant').': '.htmlspecialchars($msg->msg).\"\\n\";\r\n                        } else {\r\n                                $messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. ($msg->user_id == 0 ? htmlspecialchars($item->nick) : htmlspecialchars($msg->name_support)).': '.htmlspecialchars($msg->msg).\"\\n\";\r\n                        }\r\n                    }\r\n                    $itemData[] = trim($messagesContent);\r\n                }\r\n\r\n                if (isset($chatVariables)) {\r\n                    foreach ($chatVariables as $chatVariable) {\r\n                        if ($chatVariable->inv == true) {\r\n                            $chatVariablesPassed = $item->chat_variables_array;\r\n                        } else {\r\n                            foreach ($item->additional_data_array as $chatVariablePassed) {\r\n                                if (isset($chatVariablePassed['identifier'])){\r\n                                    $chatVariablesPassed[$chatVariablePassed['identifier']] = $chatVariablePassed['value'];\r\n                                }\r\n\r\n                            }\r\n                        }\r\n\r\n                        $valueVariable = '';\r\n\r\n                        if (isset($chatVariablesPassed[$chatVariable->var_identifier])){\r\n                            $valueVariable = $chatVariablesPassed[$chatVariable->var_identifier];\r\n                        }\r\n\r\n                        $itemData[] = $valueVariable;\r\n                    }\r\n                }\r\n\r\n                if (isset($params['type']) && in_array(4,$params['type'])) {\r\n                    self::messagesStatistic($itemData, $item);\r\n                }\r\n\r\n                if (isset($params['type']) && in_array(5,$params['type'])) {\r\n                    $subjects = erLhAbstractModelSubjectChat::getList(array('filter' => array('chat_id' => $item->id)));\r\n                    $subjectValue = [];\r\n                    foreach ($subjects as $subject) {\r\n                        $subjectValue[] = (string)$subject->subject;\r\n                    }\r\n                    $itemData[] = implode(\"\\n\",$subjectValue);\r\n                }\r\n\r\n                if (isset($params['type']) && in_array(3,$params['type'])) {\r\n                    $surveyItem = erLhAbstractModelSurveyItem::findOne(array('filter' => array('chat_id' =>$item->{'id'})));\r\n                    if ($surveyItem instanceof erLhAbstractModelSurveyItem){\r\n                        $survey = erLhAbstractModelSurvey::fetch($surveyItem->survey_id);\r\n                        $exported = erLhcoreClassSurveyExporter::exportRAW(array($surveyItem),$survey);\r\n                        $pairs = array_fill(0,20,'');\r\n                        $i = 0;\r\n                        foreach ($exported['value'] as $valueItems) {\r\n                            foreach ($exported['title'] as $indexColumn => $columnName) {\r\n                                $pairs[$i] = $columnName . ' - ' . $valueItems[$indexColumn];\r\n                                $i++;\r\n                            }\r\n                        }\r\n                        $itemData = array_merge($itemData,$pairs);\r\n                    } else {\r\n                        $itemData = array_merge($itemData,array_fill(0,20,''));\r\n                    }\r\n                }\r\n\r\n                $itemData = array_merge($itemData, $additionalPairs, array($additionalDataContent));\r\n\r\n                erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.list_export_item_data',array('item' => & $itemData, 'chat' => $item));\r\n\r\n                if ($params['csv'] && $params['csv'] == true) {\r\n                    fputcsv($df, $itemData);\r\n                } else {\r\n                    $chatArray[] = $itemData;\r\n                }\r\n        }\r\n\r\n        if ($params['csv'] && $params['csv'] == true) {\r\n            fclose($df);\r\n        } else {\r\n            // Create new PHPExcel object\r\n            $objPHPExcel = new PHPExcel();\r\n            $objPHPExcel->setActiveSheetIndex(0);\r\n\r\n            // Set the starting point and array of data\r\n            $objPHPExcel->getActiveSheet()->fromArray($chatArray, null, 'A1');\r\n\r\n            // Set style for top row\r\n            $objPHPExcel->getActiveSheet()->getStyle('A1:AW1')->getFont()->setBold(true);\r\n\r\n            // Set file type and name of file\r\n            header('Content-Type: application/vnd.ms-excel');\r\n            header('Content-Disposition: attachment;filename=\"report.xlsx\"');\r\n            header('Cache-Control: max-age=0');\r\n\r\n            $writer = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\r\n\r\n            $writer->save('php://output');\r\n        }\r\n\t}\r\n}\r\n\r\n?>\r\n", "<?php\n\nclass erLhcoreClassChatMail {\n\n\tpublic static function setupSMTP(PHPMailer & $phpMailer)\n\t{\n        // Allow extension override mail settings\n        $response = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chatmail.setup_smtp', array(\n            'phpmailer' => & $phpMailer\n        ));\n        \n        if ($response !== false && isset($response['status']) && $response['status'] == erLhcoreClassChatEventDispatcher::STOP_WORKFLOW) {\n            return;\n        }\n\t    \n\t        \n\t\t$smtpData = erLhcoreClassModelChatConfig::fetch('smtp_data');\n\t\t$data = (array)$smtpData->data;\n\n\t\tif ( isset($data['sender']) && $data['sender'] != '' ) {\n\t\t    $phpMailer->Sender = $data['sender'];\n\t\t}\n\t\t\n\t\tif ($phpMailer->From == 'root@localhost' || $phpMailer->From == '') {\n\t\t    $phpMailer->From = $data['default_from'];\n\t\t}\n\t\t\n\t\tif ($phpMailer->FromName == 'Root User' || $phpMailer->FromName == '') {\n\t\t    $phpMailer->FromName = $data['default_from_name'];\n\t\t}\n\t\t\n\t\tif ( isset($data['use_smtp']) && $data['use_smtp'] == 1 ) {\n\t\t\t$phpMailer->IsSMTP();\n\t\t\t$phpMailer->Host = $data['host'];\n\t\t\t$phpMailer->Port = $data['port'];\n\t\t\t\n\t\t\tif ($data['username'] != '' && $data['password'] != '') {\t\t\t\n\t\t\t\t$phpMailer->Username = $data['username'];\n\t\t\t\t$phpMailer->Password = $data['password'];\n\t\t\t\t$phpMailer->SMTPAuth = true;\n\t\t\t\t$phpMailer->From = isset($data['default_from']) ? $data['default_from'] : $data['username'];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static function sendTestMail($userData) {\n\n\t\t$mail = new PHPMailer(true);\n\t\t$mail->CharSet = \"UTF-8\";\n\t\t$mail->Subject = 'LHC Test mail';\n\t\t$mail->AddReplyTo($userData->email,(string)$userData);\n\t\t$mail->Body = 'This is test mail. If you received this mail. That means that your mail settings is correct.';\n\t\t$mail->AddAddress( $userData->email );\n\n\t\tself::setupSMTP($mail);\n\t\t\n\t\ttry {\n\t\t\treturn $mail->Send();\n\t\t} catch (Exception $e) {\n\t\t\tthrow $e;\n\t\t}\n\t\t$mail->ClearAddresses();\n\t}\n\n\t// Prepare template variables\n    public static function prepareSendMail(erLhAbstractModelEmailTemplate & $sendMail, $chat)\n    {\n    \t$currentUser = erLhcoreClassUser::instance();\n    \t\n    \tif ($currentUser->isLogged() == true){    \t\n\t    \t$userData = $currentUser->getUserData();  \t\n\t    \t\t    \t    \t\n\t    \t$sendMail->subject = str_replace(array('{name_surname}','{department}'),array($userData->name.' '.$userData->surname, (string)$chat->department), $sendMail->subject);\n\t    \t$sendMail->from_name = str_replace(array('{name_surname}','{department}'),array($userData->name.' '.$userData->surname, (string)$chat->department), $sendMail->from_name);\n\t\n\t    \tif (empty($sendMail->from_email)) {\n\t    \t\t$sendMail->from_email = $userData->email;\n\t    \t}\n\t\n\t    \tif (empty($sendMail->reply_to)) {\n\t    \t\t$sendMail->reply_to = $userData->email;\n\t    \t}\n    \t}\n    }\n\n    // Validate send mail\n    public static function validateSendMail(erLhAbstractModelEmailTemplate & $sendMail, & $chat, $params = array())\n    {\n    \t$Errors = array();\n\n    \t$validationFields = array();\n    \t$validationFields['Message'] = new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw');\n    \t$validationFields['Subject'] = new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw');\n    \t$validationFields['FromName'] = new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw');\n    \t$validationFields['FromEmail'] = new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'validate_email');\n    \t$validationFields['ReplyEmail'] = new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'validate_email');\n    \t$validationFields['RecipientEmail'] = new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'validate_email');\n\n    \t$form = new ezcInputForm( INPUT_POST, $validationFields );\n    \t$Errors = array();\n\n    \tif (isset($params['archive_mode']) && $params['archive_mode'] == true){\n    \t\t$messages = array_reverse(erLhcoreClassChat::getList(array('limit' => false, 'sort' => 'id DESC','customfilter' => array('user_id != -1'), 'filter' => array('chat_id' => $chat->id)),'erLhcoreClassModelChatArchiveMsg',erLhcoreClassModelChatArchiveRange::$archiveMsgTable));\n    \t} else {\n    \t\t$messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false,'sort' => 'id DESC','customfilter' => array('user_id != -1'), 'filter' => array('chat_id' => $chat->id))));\n    \t}\n    \t\n    \t// Fetch chat messages\n    \t$tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n    \t$tpl->set('chat', $chat);\n    \t$tpl->set('messages', $messages);\n    \t\n    \t$surveyContent = self::getSurveyContent($chat);\n\n\n        $cfgSite = erConfigClassLhConfig::getInstance();\n        $secretHash = $cfgSite->getSetting( 'site', 'secrethash' );\n        $url = erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurldirect('chat/readchatmail') . '/' . $chat->id . '/' . sha1($secretHash . $chat->hash . $chat->id);\n\n    \t$sendMail->content = str_replace(array('{user_chat_nick}','{messages_content}','{chat_id}','{survey}','{operator_name}','{chat_link}'), array($chat->nick, $tpl->fetch(), $chat->id, $surveyContent, $chat->plain_user_name, $url), $sendMail->content);\n    \t\n    \tif ($form->hasValidData( 'Message' ) )\n    \t{\n    \t\t$sendMail->content = str_replace('{additional_message}', $form->Message, $sendMail->content);\n    \t}\n\n        $sendMail->content = str_replace(array('{chat_link}'), array($url), $sendMail->content);\n\n    \t$sendMail->content = erLhcoreClassBBCode::parseForMail($sendMail->content);\n    \t\n    \tif ( $form->hasValidData( 'FromEmail' ) ) {\n    \t\t$sendMail->from_email = $form->FromEmail;\n    \t}\n\n    \tif ( $form->hasValidData( 'ReplyEmail' ) ) {\n    \t\t$sendMail->reply_to = $form->ReplyEmail;\n    \t}\n\n    \tif ( $form->hasValidData( 'FromName' ) ) {\n    \t\t$sendMail->from_name = $form->FromName;\n    \t}\n\n    \tif ( $form->hasValidData( 'Subject' ) ) {\n    \t\t$sendMail->subject = $form->Subject;\n    \t}\n\n    \tif ( $form->hasValidData( 'RecipientEmail' ) ) {\n    \t\t$sendMail->recipient = $form->RecipientEmail;\n    \t} else {\n    \t\t$Errors[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/sendmail','Please enter recipient e-mail!');\n    \t}\n\n    \tif (empty($sendMail->from_email)) {\n    \t\t$Errors[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/sendmail','From e-mail is missing!');\n    \t}\n\n    \tif (empty($sendMail->reply_to)) {\n    \t\t$Errors[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/sendmail','Reply e-mail is missing!');\n    \t}\n\n    \tif (empty($sendMail->subject)) {\n    \t\t$Errors[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/sendmail','Subject is missing!');\n    \t}\n\n    \treturn $Errors;\n    }\n\n    // Send mail\n    public static function sendMail(erLhAbstractModelEmailTemplate & $sendMail, & $chat) {\n\n    \t$mail = new PHPMailer();\n    \t$mail->CharSet = \"UTF-8\";\n    \t\n    \tif ($sendMail->from_email != '') {\n    \t\t$mail->Sender = $mail->From = $sendMail->from_email;\n    \t}\n    \t\n    \t$mail->FromName = $sendMail->from_name;\n    \t$mail->Subject = str_replace(array('{chat_id}'), array($chat->id), $sendMail->subject);\n    \t\n    \tif ($sendMail->reply_to != '') {\n    \t\t$mail->AddReplyTo($sendMail->reply_to,$sendMail->from_name);\n    \t}\n    \t    \t\n    \t$mail->Body = $sendMail->content;\n    \t$mail->AddAddress( $sendMail->recipient );\n\n    \tself::setupSMTP($mail);\n    \t\n    \tif ($sendMail->bcc_recipients != '') {\n    \t\t$recipientsBCC = explode(',',$sendMail->bcc_recipients);\n    \t\tforeach ($recipientsBCC as $recipientBCC) {\n    \t\t\t$mail->AddBCC(trim($recipientBCC));\n    \t\t}\n    \t}\n    \t\n    \t$mail->Send();\n    \t$mail->ClearAddresses();\n    }\n\n    public static function sendMailFAQ($faq) {\n\n    \t$sendMail = erLhAbstractModelEmailTemplate::fetch(6);\n        $sendMail->translate();\n\n    \t$mail = new PHPMailer();\n    \t$mail->CharSet = \"UTF-8\";\n\n    \t$mail->FromName = $sendMail->from_name;\n    \t\n    \tif ($sendMail->from_email != '') {\n    \t\t$mail->From = $mail->Sender = $sendMail->from_email;\n    \t}\n\n    \tif ($faq->email != ''){    \n    \t\t$mail->AddReplyTo($faq->email);\n    \t}\n\n    \t$mail->Subject = $sendMail->subject;\n    \t\n    \t$mail->Body = str_replace(array('{email}','{question}','{url_request}','{url_question}'), array($faq->email,$faq->question,erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurl('user/login').'/(r)/'.rawurlencode(base64_encode('faq/view/'.$faq->id)),$faq->url), $sendMail->content);\n    \t\n    \tif ($sendMail->recipient != '') { // Perhaps template has default recipient\n    \t\t$emailRecipient = explode(',',$sendMail->recipient);\n    \t} else { // Lets find first user and send him an e-mail\n    \t\t$list = erLhcoreClassModelUser::getUserList(array('limit' => 1,'sort' => 'id ASC'));\n    \t\t$user = array_pop($list);\n    \t\t$emailRecipient = array($user->email);\n    \t}\n    \t\n    \tforeach ($emailRecipient as $receiver) {\n    \t\t$mail->AddAddress( $receiver );\n    \t}\n    \t\n    \tself::setupSMTP($mail);\n    \t\n    \t$mail->Send();    \t\n    }\n    \n    public static function sendMailRequestPermission(erLhcoreClassModelUser $recipient, erLhcoreClassModelUser $sender, $requestedPermissions) {\n        $sendMail = erLhAbstractModelEmailTemplate::fetch(10);\n        $sendMail->translate();\n\n        $mail = new PHPMailer();\n        $mail->CharSet = \"UTF-8\";\n        \n        if ($sendMail->from_email != '') {\n            $mail->From = $mail->Sender = $sendMail->from_email;\n        }\n                     \n        $mail->Subject = str_replace(array('{user}'),array((string)$sender),$sendMail->subject);\n        $mail->AddReplyTo($sender->email,(string)$sender);\n                 \n        $mail->Body = str_replace(array('{permissions}','{user}'), array($requestedPermissions,(string)$sender), $sendMail->content);\n        \n        $mail->AddAddress( $recipient->email );\n        \n        self::setupSMTP($mail);\n                     \n        $mail->Send();\n        $mail->ClearAddresses();\n    }\n    \n    public static function sendMailRequest($inputData, erLhcoreClassModelChat $chat, $params = array()) {\n\n    \t$sendMail = erLhAbstractModelEmailTemplate::fetch(2);\n        $sendMail->translate();\n\n    \t$mail = new PHPMailer();\n    \t$mail->CharSet = \"UTF-8\";\n\n    \tif ($sendMail->from_email != '') {\n    \t\t$mail->From = $mail->Sender = $sendMail->from_email;\n    \t}    \t\n        \t\n    \t$mail->FromName = $sendMail->from_name;\n    \t    \t\n    \t$mail->Subject = str_replace(array('{name}','{department}','{country}','{city}','{chat_id}'),array($chat->nick,(string)$chat->department,$chat->country_name,$chat->city,$chat->id),$sendMail->subject);\n    \t$mail->AddReplyTo($chat->email,$chat->nick);\n    \t\n    \t$prefillchat = '-'; \n    \tif (isset($params['chatprefill']) && $params['chatprefill'] instanceof erLhcoreClassModelChat){\n    \t\t$prefillchat = erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurl('user/login').'/(r)/'.rawurlencode(base64_encode('chat/single/'.$params['chatprefill']->id));\n    \t}\n    \t\n    \t// Format user friendly additional data\n    \tif ($chat->additional_data != '') {\n    \t    $paramsAdditional = json_decode($chat->additional_data,true);\n    \t    $elementsAdditional = array();\n    \t    if (is_array($paramsAdditional) && !empty($paramsAdditional)) {\n    \t        foreach ($paramsAdditional as $param) {\n    \t            $elementsAdditional[] = $param['key'].' - '.$param['value'];\n    \t        }\n    \t        \n    \t        $additional_data = implode(\"\\n\", $elementsAdditional);\n    \t    } else {\n    \t        $additional_data = $chat->additional_data;\n    \t    }\n    \t    \n    \t} else {\n    \t    $additional_data = '';\n    \t}\n    \t\n    \t\n    \t$mail->Body = str_replace(array('{phone}','{name}','{email}','{message}','{additional_data}','{url_request}','{ip}','{department}','{country}','{city}','{prefillchat}'), array($chat->phone,$chat->nick,$chat->email,(isset($inputData->question) ? $inputData->question : ''),$additional_data,(isset($_POST['URLRefer']) ? $_POST['URLRefer'] : ''),erLhcoreClassIPDetect::getIP(),(string)$chat->department,$chat->country_name,$chat->city,$prefillchat), $sendMail->content);\n\n    \t/*\n    \t * Attatch file\n    \t * */\n    \tif ($inputData->has_file == true) { \n    \t\t$mail->AddAttachment($inputData->file_location,'file.'.$inputData->file_extension);\n    \t}\n    \t\n    \t$emailRecipient = array();\n    \tif ($chat->department !== false && $chat->department->email != '') { // Perhaps department has assigned email\n    \t\t$emailRecipient = explode(',',$chat->department->email);\n    \t} elseif ($sendMail->recipient != '') { // Perhaps template has default recipient\n    \t\t$emailRecipient = explode(',',$sendMail->recipient);\n    \t} else { // Lets find first user and send him an e-mail\n    \t\t$list = erLhcoreClassModelUser::getUserList(array('limit' => 1,'sort' => 'id ASC'));\n    \t\t$user = array_pop($list);\n    \t\t$emailRecipient = array($user->email);\n    \t}\n\n    \tforeach ($emailRecipient as $receiver) {\n    \t\t$mail->AddAddress( $receiver );\n    \t}\n\n    \tself::setupSMTP($mail);\n\n    \tif ($sendMail->bcc_recipients != '') {\n    \t\t$recipientsBCC = explode(',',$sendMail->bcc_recipients);\n    \t\tforeach ($recipientsBCC as $recipientBCC) {\n    \t\t\t$mail->AddBCC(trim($recipientBCC));    \t\t\t\n    \t\t}\n    \t}\n    \t\n    \tif ($sendMail->user_mail_as_sender == 1 && $chat->email != '') {    \t       \t \n    \t   $mail->From = $chat->email;\n    \t   $mail->FromName = $chat->nick;    \t  \n    \t}\n    \t    \t\n    \t$mail->Send();\n    \t$mail->ClearAddresses();\n    }\n    \n    public static function sendMailUnacceptedChat(erLhcoreClassModelChat $chat, $templateID = 4) {\n    \t$sendMail = erLhAbstractModelEmailTemplate::fetch($templateID);\n        $sendMail->translate();\n\n    \t$mail = new PHPMailer();\n    \t$mail->CharSet = \"UTF-8\";\n    \t\n    \tif ($sendMail->from_email != '') { \t\n    \t\t$mail->Sender = $mail->From = $sendMail->from_email;\n    \t}\n    \t\n    \t$mail->FromName = $sendMail->from_name;\n    \t\n    \tif ($sendMail->reply_to != '') {\n    \t    $mail->AddReplyTo($sendMail->reply_to,$sendMail->from_name);\n    \t} elseif ($chat->email != '') {    \t\t\n    \t\t$mail->AddReplyTo($chat->email,$chat->nick);\n    \t}\n\n    \t\n    \t$mail->Subject = str_replace(array('{chat_id}','{department}'), array($chat->id,(string)$chat->department), $sendMail->subject);\n    \t   \t    \t\n    \t$messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false,'sort' => 'id DESC','filter' => array('chat_id' => $chat->id))));\n    \t$messagesContent = '';\n    \t\n    \tforeach ($messages as $msg ) {\n\t    \t if ($msg->user_id == -1) {\n\t    \t\t$messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. erTranslationClassLhTranslation::getInstance()->getTranslation('chat/syncadmin','System assistant').': '.htmlspecialchars($msg->msg).\"\\n\";\n\t    \t } else {\n\t    \t\t$messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. ($msg->user_id == 0 ? htmlspecialchars($chat->nick) : htmlspecialchars($msg->name_support)).': '.htmlspecialchars($msg->msg).\"\\n\";\n\t    \t }\n    \t}\n    \t\n    \t$emailRecipient = array();\n    \tif ($chat->department !== false && $chat->department->email != '') { // Perhaps department has assigned email\n    \t\t$emailRecipient = explode(',',$chat->department->email);\n    \t} elseif ($sendMail->recipient != '') { // Perhaps template has default recipient\n    \t\t$emailRecipient = explode(',',$sendMail->recipient);\n    \t} else { // Lets find first user and send him an e-mail\n    \t\t$list = erLhcoreClassModelUser::getUserList(array('limit' => 1,'sort' => 'id ASC'));\n    \t\t$user = array_pop($list);\n    \t\t$emailRecipient = array($user->email);\n    \t}\n    \t\n    \tself::setupSMTP($mail);\n    \t\n    \t$cfgSite = erConfigClassLhConfig::getInstance();\n    \t$secretHash = $cfgSite->getSetting( 'site', 'secrethash' );\n    \t    \t\n    \t// Format user friendly additional data\n    \tif ($chat->additional_data != '') {\n    \t    $paramsAdditional = json_decode($chat->additional_data,true);\n    \t    $elementsAdditional = array();\n    \t    if (is_array($paramsAdditional) && !empty($paramsAdditional)) {\n    \t        foreach ($paramsAdditional as $param) {\n    \t            $elementsAdditional[] = $param['key'].' - '.$param['value'];\n    \t        }\n    \t        \n    \t        $additional_data = implode(\"\\n\", $elementsAdditional);\n    \t    } else {\n    \t        $additional_data = $chat->additional_data;\n    \t    }\n    \t    \n    \t} else {\n    \t    $additional_data = '';\n    \t}\n    \t\n    \t$surveyContent = self::getSurveyContent($chat);\n    \t    \t\n    \tforeach ($emailRecipient as $receiver) {   \n    \t\t$veryfyEmail = \tsha1(sha1($receiver.$secretHash).$secretHash);\n    \t\t$mail->Body = str_replace(array('{survey}','{chat_duration}','{waited}','{created}','{user_left}','{user_name}','{chat_id}','{phone}','{name}','{email}','{message}','{additional_data}','{url_request}','{ip}','{department}','{url_accept}','{country}','{city}'), array($surveyContent, ($chat->chat_duration > 0 ? $chat->chat_duration_front : '-'), ($chat->wait_time > 0 ? $chat->wait_time_front : '-'), $chat->time_created_front, ($chat->user_closed_ts > 0 && $chat->user_status == 1 ? $chat->user_closed_ts_front : '-'),$chat->user_name,$chat->id,$chat->phone,$chat->nick,$chat->email,$messagesContent,$additional_data,$chat->referrer,erLhcoreClassIPDetect::getIP(),(string)$chat->department, erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurl('chat/accept').'/'.erLhcoreClassModelChatAccept::generateAcceptLink($chat).'/'.$veryfyEmail.'/'.$receiver,$chat->country_name,$chat->city), $sendMail->content);\n    \t\t$mail->AddAddress( $receiver );\n    \t\t$mail->Send();\n    \t\t$mail->ClearAddresses();\n    \t}\n    \t\n    \tif ($sendMail->bcc_recipients != '') {\n    \t\t$recipientsBCC = explode(',',$sendMail->bcc_recipients);\n    \t\tforeach ($recipientsBCC as $receiver) {\n    \t\t\t$receiver = trim($receiver);\n    \t\t\t$veryfyEmail = \tsha1(sha1($receiver.$secretHash).$secretHash);\n    \t\t\t$mail->Body = str_replace(array('{survey}','{chat_duration}','{waited}','{created}','{user_left}','{user_name}','{chat_id}','{phone}','{name}','{email}','{message}','{additional_data}','{url_request}','{ip}','{department}','{url_accept}','{country}','{city}'), array($surveyContent, ($chat->chat_duration > 0 ? $chat->chat_duration_front : '-'), ($chat->wait_time > 0 ? $chat->wait_time_front : '-'), $chat->time_created_front, ($chat->user_closed_ts > 0 && $chat->user_status == 1 ? $chat->user_closed_ts_front : '-'),$chat->user_name,$chat->id,$chat->phone,$chat->nick,$chat->email,$messagesContent,$additional_data,$chat->referrer,erLhcoreClassIPDetect::getIP(),(string)$chat->department, erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurl('chat/accept').'/'.erLhcoreClassModelChatAccept::generateAcceptLink($chat).'/'.$veryfyEmail.'/'.$receiver,$chat->country_name,$chat->city), $sendMail->content);\n    \t\t\t$mail->AddAddress( $receiver );\n    \t\t\t$mail->Send();\n    \t\t\t$mail->ClearAddresses();    \t\t\t\n    \t\t}\n    \t}\n    }\n\n    public static function getSurveyContent($chat)\n    {\n        $surveyContent = '';\n        include (erLhcoreClassDesign::designtpl('lhsurvey/forms/fields_names.tpl.php'));\n        \n        foreach (erLhAbstractModelSurveyItem::getList(array(\n            'filter' => array(\n                'chat_id' => $chat->id\n            )\n        )) as $survey_item) {\n            $survey = $survey_item->survey;\n            $surveyContent .= \"[[\" . (string) $survey_item->survey . \"]]\\n\";\n            for ($i = 0; $i < 16; $i ++) {\n                foreach ($sortOptions as $keyOption => $sortOption) {\n                    if ($survey->{$keyOption . '_pos'} == $i && $survey->{$keyOption . '_enabled'} == 1) {\n                        if ($sortOption['type'] == 'stars') {\n                            $surveyContent .= \"\\n==\" . $survey->{$sortOption['field'] . '_title'} . \"==\\n\";\n                            $surveyContent .= $survey_item->{$sortOption['field']} . \"\\n\";\n                        } elseif ($sortOption['type'] == 'question') {\n                            $surveyContent .= \"\\n==\" . $survey->{$sortOption['field']} . \"==\\n\";\n                            $surveyContent .= $survey_item->{$sortOption['field']} . \"\\n\";\n                        } elseif ($sortOption['type'] == 'question_options') {\n                            $surveyContent .= \"\\n==\" . $survey->{$sortOption['field']} . \"==\\n\";\n                            $options = $survey->{$sortOption['field'] . '_items_front'};\n                            if (isset($options[$survey_item->{$sortOption['field']} - 1])) {\n                                $surveyContent .= $options[$survey_item->{$sortOption['field']} - 1]['option'] . \"\\n\";\n                            } else {\n                                $surveyContent .= $survey_item->{$sortOption['field']} . \"\\n\";\n                            }\n                        }\n                    }\n                }\n            }\n            $surveyContent .= \"===========================\\n\";\n        }\n        \n        return $surveyContent == '' ? '-' : $surveyContent;\n    }\n    \n    public static function informFormFilled($formCollected, $params = array()) {\n    \t$sendMail = erLhAbstractModelEmailTemplate::fetch(8);\n        $sendMail->translate();\n\n    \t$mail = new PHPMailer();\n    \t$mail->CharSet = \"UTF-8\";\n    \t\n    \tif ($sendMail->from_email != '') {\n    \t\t$mail->From = $mail->Sender = $sendMail->from_email;\n    \t}\n    \t\n    \tif (isset($params['email']) && $params['email'] !== false && $params['email'] != '')\n    \t{\n    \t    $mail->AddReplyTo($params['email']);    \t    \n    \t}\n    \t\n    \t$mail->FromName = $sendMail->from_name;    \t\n    \t$mail->Subject = str_replace(array('{form_name}'),array($formCollected->form),$sendMail->subject);   \t     \t\n    \t$mail->Body = str_replace(array('{identifier}','{form_name}','{content}','{ip}','{url_download}','{url_view}'), array($formCollected->identifier,(string)$formCollected->form, $formCollected->form_content, $formCollected->ip, erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurldirect('user/login').'/(r)/'.rawurlencode(base64_encode('form/downloaditem/'.$formCollected->id)), erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurldirect('user/login').'/(r)/'.rawurlencode(base64_encode('form/viewcollected/'.$formCollected->id))), $sendMail->content);\n\n    \t$emailRecipient = array();\n    \tif ($formCollected->form->recipient != '') {\n    \t\t$emailRecipient = array($formCollected->form->recipient);\n    \t} elseif ($sendMail->recipient != '') {\n    \t\t$emailRecipient = array($sendMail->recipient);\n    \t}\n\n    \tif (!empty($emailRecipient)) {    \t\n\t    \tforeach ($emailRecipient as $receiver) {\n\t    \t\t$mail->AddAddress( $receiver );\n\t    \t}\n\t    \t\n\t    \tself::setupSMTP($mail);\n\t    \t\n\t    \tif ($sendMail->bcc_recipients != '') {\n\t    \t\t$recipientsBCC = explode(',',$sendMail->bcc_recipients);\n\t    \t\tforeach ($recipientsBCC as $recipientBCC) {\n\t    \t\t\t$mail->AddBCC(trim($recipientBCC));\n\t    \t\t}\n\t    \t}\n\t    \t\n\t    \t$mail->Send();\n\t    \t$mail->ClearAddresses();\n    \t}\n    }\n    \n    public static function informVisitorUnreadMessage(erLhcoreClassModelChat $chat)\n    {\n    \tif ($chat->email == '') {\n    \t\treturn ;\n    \t}\n    \t\n    \t$sendMail = erLhAbstractModelEmailTemplate::fetch(11);\n        $sendMail->translate($chat->chat_locale);\n\n    \t$mail = new PHPMailer();\n    \t$mail->CharSet = \"UTF-8\";\n\n    \t$fromSet = false;\n    \tif ($sendMail->from_email != '') {\n    \t\t$mail->Sender = $mail->From = $sendMail->from_email;\n    \t\t$fromSet = true;\n    \t}\n\n    \t$mail->FromName = $sendMail->from_name;\n\n    \tif ($sendMail->reply_to != '') {\n    \t\t$mail->AddReplyTo($sendMail->reply_to);\n    \t\tif ($fromSet == false) {\n    \t\t\t$mail->From = $sendMail->reply_to;\n    \t\t}\n    \t} elseif ($chat->user !== false) {\n    \t\t$mail->AddReplyTo($chat->user->email, $chat->user->name_support);\n    \t\tif ($fromSet == false) {\n    \t\t\t$mail->From = $chat->user->email;\n    \t\t}\n    \t}\n\n    \t$mail->Subject = $sendMail->subject;\n\n    \t$messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false, 'sort' => 'id DESC','filter' => array('chat_id' => $chat->id))));\n    \t$messagesContent = '';\n\n    \tforeach ($messages as $msg ) {\n    \t\tif ($msg->user_id != -1) {    \t\t\t\n    \t\t\t$messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. ($msg->user_id == 0 ? htmlspecialchars($chat->nick) : htmlspecialchars($msg->name_support)).': '.htmlspecialchars($msg->msg).\"\\n\";\n    \t\t}\n    \t}\n\n    \t$nameSupport = $chat->user !== false ? $chat->user->name_support : '';\n\n    \t$mail->Body = str_replace(array('{messages}','{operator}'), array($messagesContent, $nameSupport), $sendMail->content);\n\n    \tself::setupSMTP($mail);\n\n    \t$mail->AddAddress( $chat->email );\n    \t$mail->Send();\n    }\n    \n    public static function informChatClosed(erLhcoreClassModelChat $chat, $operator = false) {\n    \t$sendMail = erLhAbstractModelEmailTemplate::fetch(5);\n        $sendMail->translate();\n\n    \t$mail = new PHPMailer();\n    \t$mail->CharSet = \"UTF-8\";\n\n        if ($sendMail->from_email != '') {\n            $mail->Sender = $mail->From = $sendMail->from_email;\n        }\n\n        if($sendMail->from_email == '{chat_email}' && $chat->email != '') {\n            $mail->From = $chat->email;\n        }\n\n        $mail->FromName = $sendMail->from_name;\n        $mail->Subject = str_replace(array('{chat_id}','{department}'), array($chat->id,(string)$chat->department), $sendMail->subject);;\n\n        if($sendMail->from_name == '{chat_nick}' && $chat->nick != '') {\n            $mail->FromName = $chat->nick;\n        }\n\n    \t$messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false,'sort' => 'id DESC','filter' => array('chat_id' => $chat->id))));\n\n        // Fetch chat messages\n        $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n        $tpl->set('chat', $chat);\n        $tpl->set('messages', $messages);\n\n        $messagesContent = $tpl->fetch();\n\n        $emailRecipient = array();\n    \t$emailRecipientAll = array();\n    \t    \t    \t    \n    \tif ($chat->department !== false && ($chat->department->inform_close_all == 1 || $chat->department->inform_close == 1) && $chat->department->inform_close_all_email != '') {\n    \t    $emailRecipientAll = explode(',', $chat->department->inform_close_all_email);\n    \t}\n    \t    \t\n    \tif ($sendMail->recipient != '') { // This time we give priority to template recipients\n    \t\t$emailRecipient = explode(',',$sendMail->recipient);    \t\t\n    \t} elseif ($chat->department !== false && $chat->department->email != '' && $chat->department->inform_close == 1) {    \t\t\t\n    \t\t$emailRecipient = explode(',',$chat->department->email);    \t\t\n    \t} elseif (empty($emailRecipientAll)) { // Lets find first user and send him an e-mail\n    \t\t$list = erLhcoreClassModelUser::getUserList(array('limit' => 1,'sort' => 'id ASC'));\n    \t\t$user = array_pop($list);\n    \t\t$emailRecipient = array($user->email);\n    \t}\n    \t\n    \t$emailRecipient = array_unique(array_merge($emailRecipient,$emailRecipientAll));\n\n    \tself::setupSMTP($mail);\n    \t\n    \t$cfgSite = erConfigClassLhConfig::getInstance();\n    \t$secretHash = $cfgSite->getSetting( 'site', 'secrethash' );\n    \t\n    \tif ($sendMail->reply_to != '') {\n    \t    $mail->AddReplyTo($sendMail->reply_to,$sendMail->from_name);\n    \t} elseif ($chat->email != '') {    \t\n    \t\t$mail->AddReplyTo($chat->email, $chat->nick);\n    \t}\n    \t\n    \t// Format user friendly additional data\n    \tif ($chat->additional_data != '') {\n    \t    $paramsAdditional = json_decode($chat->additional_data,true);\n    \t    $elementsAdditional = array();\n    \t    if (is_array($paramsAdditional) && !empty($paramsAdditional)) {\n    \t        foreach ($paramsAdditional as $param) {\n    \t            $elementsAdditional[] = $param['key'].' - '.$param['value'];\n    \t        }\n    \t        \n    \t        $additional_data = implode(\"\\n\", $elementsAdditional);\n    \t    } else {\n    \t        $additional_data = $chat->additional_data;\n    \t    }\n    \t    \n    \t} else {\n    \t    $additional_data = '';\n    \t}\n    \t\n    \t$surveyContent = self::getSurveyContent($chat);\n\n    \tforeach ($emailRecipient as $receiver) {   \n    \t\t$veryfyEmail = \tsha1(sha1($receiver.$secretHash).$secretHash);\n    \t\t$mail->Body = str_replace(array('{survey}','{chat_duration}','{waited}','{created}','{user_left}','{chat_id}','{phone}','{name}','{email}','{message}','{additional_data}','{url_request}','{ip}','{department}','{url_accept}','{operator}','{country}','{city}'), array($surveyContent,($chat->chat_duration > 0 ? $chat->chat_duration_front : '-'), ($chat->wait_time > 0 ? $chat->wait_time_front : '-'), $chat->time_created_front, ($chat->user_closed_ts > 0 && $chat->user_status == 1 ? $chat->user_closed_ts_front : '-'),$chat->id,$chat->phone,$chat->nick,$chat->email,$messagesContent,$additional_data,$chat->referrer,$chat->ip,(string)$chat->department,(isset($_SERVER['HTTP_HOST'])) ?  erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] : erLhcoreClassModelChatConfig::fetch('customer_site_url')->current_value . erLhcoreClassDesign::baseurl('chat/accept').'/'.erLhcoreClassModelChatAccept::generateAcceptLink($chat).'/'.$veryfyEmail.'/'.$receiver,$operator,$chat->country_name,$chat->city), $sendMail->content);\n    \t\t$mail->AddAddress( $receiver );    \t\t    \t\t\n    \t\t$mail->Send();\n    \t\t$mail->ClearAddresses();\n    \t}\n    \t    \t\n    \tif ($sendMail->bcc_recipients != '') {\n    \t\t$recipientsBCC = explode(',',$sendMail->bcc_recipients);\n    \t\tforeach ($recipientsBCC as $receiver) {    \t\t\t\n    \t\t\t$receiver = trim($receiver);\n    \t\t\t$veryfyEmail = \tsha1(sha1($receiver.$secretHash).$secretHash);\n\t    \t\t$mail->Body = str_replace(array('{survey}','{chat_duration}','{waited}','{created}','{user_left}','{chat_id}','{phone}','{name}','{email}','{message}','{additional_data}','{url_request}','{ip}','{department}','{url_accept}','{operator}','{country}','{city}'), array($surveyContent,($chat->chat_duration > 0 ? $chat->chat_duration_front : '-'), ($chat->wait_time > 0 ? $chat->wait_time_front : '-'), $chat->time_created_front, ($chat->user_closed_ts > 0 && $chat->user_status == 1 ? $chat->user_closed_ts_front : '-'),$chat->id,$chat->phone,$chat->nick,$chat->email,$messagesContent,$additional_data,$chat->referrer,$chat->ip,(string)$chat->department,(isset($_SERVER['HTTP_HOST'])) ?  erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] : erLhcoreClassModelChatConfig::fetch('customer_site_url')->current_value . erLhcoreClassDesign::baseurl('chat/accept').'/'.erLhcoreClassModelChatAccept::generateAcceptLink($chat).'/'.$veryfyEmail.'/'.$receiver,$operator,$chat->country_name,$chat->city), $sendMail->content);\n\t    \t\t$mail->AddAddress( $receiver );    \t\t    \t\t\n\t    \t\t$mail->Send();\n\t    \t\t$mail->ClearAddresses();    \t\t\t \n    \t\t}\n    \t}    \t\n    \t\n    \t\n    }\n\n    public static function informVisitorReturned($item) {\n        $sendMail = erLhAbstractModelEmailTemplate::fetch(12);\n        $sendMail->translate();\n\n        $mail = new PHPMailer();\n        $mail->CharSet = \"UTF-8\";\n\n        if ($sendMail->from_email != '') {\n            $mail->Sender = $mail->From = $sendMail->from_email;\n        }\n\n        $chat = $item->chat;\n\n        if (!($chat instanceof erLhcoreClassModelChat)) {\n            $chat = erLhcoreClassModelChat::findOne(array('sort' => '`id` DESC','filter' => array('online_user_id' => $item->id)));\n        }\n\n        if ($sendMail->from_email == '{chat_email}' && $chat instanceof erLhcoreClassModelChat && $chat->email != '') {\n            $mail->From = $item->chat->email;\n        }\n\n        $mail->FromName = $sendMail->from_name;\n\n        $mail->Subject = str_replace(array('{username}'), array($item->nick), $sendMail->subject);;\n\n        $mail->FromName = $item->nick;\n\n        $emailRecipient = array();\n\n        $attr = $item->online_attr_system_array;\n        foreach ($attr['lhc_ir'] as $userId) {\n            $userData = erLhcoreClassModelUser::fetch($userId);\n            if ($userData instanceof erLhcoreClassModelUser) {\n                $emailRecipient[] = $userData->email;\n            }\n        }\n\n        if (empty($emailRecipient) && $sendMail->recipient != '') { // This time we give priority to template recipients\n            $emailRecipient = explode(',',$sendMail->recipient);\n        }\n\n        if (empty($emailRecipient)) { // Lets find first user and send him an e-mail\n            $list = erLhcoreClassModelUser::getUserList(array('limit' => 1,'sort' => 'id ASC'));\n            $user = array_pop($list);\n            $emailRecipient = array($user->email);\n        }\n\n        self::setupSMTP($mail);\n\n        if ($sendMail->reply_to != '') {\n            $mail->AddReplyTo($sendMail->reply_to,$sendMail->from_name);\n        } elseif ($chat instanceof erLhcoreClassModelChat && $chat->email != '') {\n            $mail->AddReplyTo($chat->email, $chat->nick);\n        }\n\n        $messagesContent = '-';\n        $additional_data = '-';\n\n        if ($chat instanceof erLhcoreClassModelChat) {\n\n            $messagesContent = '';\n\n            $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false,'sort' => 'id DESC', 'filter' => array('chat_id' => $chat->id))));\n            foreach ($messages as $msg ) {\n                if ($msg->user_id == -1) {\n                    $messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. erTranslationClassLhTranslation::getInstance()->getTranslation('chat/syncadmin','System assistant').': '.htmlspecialchars($msg->msg).\"\\n\";\n                } else {\n                    $messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. ($msg->user_id == 0 ? htmlspecialchars($chat->nick) : htmlspecialchars($msg->name_support)).': '.htmlspecialchars($msg->msg).\"\\n\";\n                }\n            }\n\n            // Format user friendly additional data\n            if ($chat->additional_data != '') {\n                $paramsAdditional = json_decode($chat->additional_data,true);\n                $elementsAdditional = array();\n                if (is_array($paramsAdditional) && !empty($paramsAdditional)) {\n                    foreach ($paramsAdditional as $param) {\n                        $elementsAdditional[] = $param['key'].' - '.$param['value'];\n                    }\n                    $additional_data = implode(\"\\n\", $elementsAdditional);\n                } else {\n                    $additional_data = $chat->additional_data;\n                }\n            }\n        }\n\n        foreach ($emailRecipient as $receiver) {\n            $appendURL = erLhcoreClassDesign::baseurldirect('user/login').'/(r)/'.rawurlencode(base64_encode('chat/onlineusers?search='.$item->nick));\n\n            $mail->Body = str_replace(array(\n                '{chat_duration}',\n                '{waited}',\n                '{created}',\n                '{user_left}',\n                '{chat_id}',\n                '{phone}',\n                '{name}',\n                '{email}',\n                '{message}',\n                '{additional_data}',\n                '{url_request}',\n                '{ip}',\n                '{department}',\n                '{url_accept}',\n                '{country}',\n                '{city}'\n            ), array(\n                ($chat instanceof erLhcoreClassModelChat && $chat->chat_duration > 0 ? $chat->chat_duration_front : '-'),\n                ($chat instanceof erLhcoreClassModelChat && $chat->wait_time > 0 ? $chat->wait_time_front : '-'),\n                ($chat instanceof erLhcoreClassModelChat ? $chat->time_created_front : '-'),\n                ($chat instanceof erLhcoreClassModelChat && $chat->user_closed_ts > 0 && $chat->user_status == 1 ? $chat->user_closed_ts_front : '-'),\n                ($chat instanceof erLhcoreClassModelChat ? $chat->id : '-'),\n                ($chat instanceof erLhcoreClassModelChat ? $chat->phone : '-'),\n                $item->nick,\n                ($chat instanceof erLhcoreClassModelChat ? $chat->email : '-'),\n                $messagesContent,\n                $additional_data,\n                $item->referrer,\n                $item->ip,\n                ($chat instanceof erLhcoreClassModelChat ? (string)$chat->department : '-'),\n                (isset($_SERVER['HTTP_HOST']) ? erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . $appendURL : erLhcoreClassModelChatConfig::fetch('customer_site_url')->current_value . $appendURL),\n                $item->user_country_name,\n                $item->city),\n                $sendMail->content);\n\n            $mail->AddAddress( $receiver );\n            $mail->Send();\n            $mail->ClearAddresses();\n        }\n\n        if ($sendMail->bcc_recipients != '') {\n            $recipientsBCC = explode(',',$sendMail->bcc_recipients);\n            foreach ($recipientsBCC as $receiver) {\n\n                $appendURL = erLhcoreClassDesign::baseurldirect('user/login').'/(r)/'.rawurlencode(base64_encode('chat/onlineusers?search='.$item->nick));\n\n                $mail->Body = str_replace(array(\n                    '{chat_duration}',\n                    '{waited}',\n                    '{created}',\n                    '{user_left}',\n                    '{chat_id}',\n                    '{phone}',\n                    '{name}',\n                    '{email}',\n                    '{message}',\n                    '{additional_data}',\n                    '{url_request}',\n                    '{ip}',\n                    '{department}',\n                    '{url_accept}',\n                    '{country}',\n                    '{city}'\n                ), array(\n                    ($chat instanceof erLhcoreClassModelChat && $chat->chat_duration > 0 ? $chat->chat_duration_front : '-'),\n                    ($chat instanceof erLhcoreClassModelChat && $chat->wait_time > 0 ? $chat->wait_time_front : '-'),\n                    ($chat instanceof erLhcoreClassModelChat ? $chat->time_created_front : '-'),\n                    ($chat instanceof erLhcoreClassModelChat && $chat->user_closed_ts > 0 && $chat->user_status == 1 ? $chat->user_closed_ts_front : '-'),\n                    ($chat instanceof erLhcoreClassModelChat ? $chat->id : '-'),\n                    ($chat instanceof erLhcoreClassModelChat ? $chat->phone : '-'),\n                    $item->nick,\n                    ($chat instanceof erLhcoreClassModelChat ? $chat->email : '-'),\n                    $messagesContent,\n                    $additional_data,\n                    $item->referrer,\n                    $item->ip,\n                    ($chat instanceof erLhcoreClassModelChat ? (string)$chat->department : '-'),\n                    (isset($_SERVER['HTTP_HOST']) ? erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . $appendURL : erLhcoreClassModelChatConfig::fetch('customer_site_url')->current_value . $appendURL),\n                    $item->user_country_name,\n                    $item->city),\n                    $sendMail->content);\n\n                $receiver = trim($receiver);\n\n                $mail->AddAddress( $receiver );\n                $mail->Send();\n                $mail->ClearAddresses();\n            }\n        }\n    }\n}\n\n?>\n", "<?php\n\nclass CSCacheAPC {\n\n    static private $m_objMem = NULL;\n    public $cacheEngine = null;\n    public $cacheGlobalKey = null;\n    public $cacheGlobalKeyAppend = null;\n    \n    public $cacheKeys = array(\n    'site_version'             // Global site version\n    );\n\n    public function increaseImageManipulationCache()\n    {\n        $this->increaseCacheVersion('site_version');\n    }\n\n    function setSession($identifier, $value, $useGlobalCache = false, $skipSession = false)\n    {\n    \tif ($skipSession == false){\n    \t\t$_SESSION[$identifier] = $value;\n    \t}\n\n    \tif ($useGlobalCache == true) {\n    \t\t$GLOBALS[$identifier] = $value;\n    \t}\n    }\n\n    function appendToArray($identifier, $value)\n    {\n    \tif (isset($_SESSION[$identifier]) && in_array($value, $_SESSION[$identifier])){\n    \t\treturn ;\n    \t}\n\n    \t$_SESSION[$identifier][] = $value;\n    }\n\n    function removeFromArray($identifier, $value)\n    {\n    \tif (isset($_SESSION[$identifier]) && is_array($_SESSION[$identifier]) && ($index = array_search($value, $_SESSION[$identifier])) !== false){\n    \t\tunset($_SESSION[$identifier][$index]);\n    \t}\n    }\n\n    function getArray($identifier)\n    {\n    \tif (isset($_SESSION[$identifier]) && is_array($_SESSION[$identifier])){\n    \t\treturn $_SESSION[$identifier];\n    \t}\n\n    \treturn array();\n    }\n\n    function getSession($identifier, $useGlobalCache = false) {\n\n    \tif (isset($_SESSION[$identifier])){\n    \t\treturn $_SESSION[$identifier];\n    \t}\n\n    \tif ($useGlobalCache == true) {\n    \t\tif (isset($GLOBALS[$identifier])) {\n    \t\t\treturn $GLOBALS[$identifier];\n    \t\t}\n    \t}\n\n    \treturn false;\n    }\n    \n    function restoreMulti($keys)\n    {\n        if ($this->cacheEngine != null) {\n            return $this->cacheEngine->get($keys);\n        }\n    \n        return array();\n    }\n    \n    function __construct() {\n\n        $cacheEngineClassName = erConfigClassLhConfig::getInstance()->getSetting( 'cacheEngine', 'className' );\n        $this->cacheGlobalKey = erConfigClassLhConfig::getInstance()->getSetting( 'cacheEngine', 'cache_global_key' ) . $this->cacheGlobalKeyAppend;\n\n        if ($cacheEngineClassName !== false)\n        {\n            $this->cacheEngine = new $cacheEngineClassName();\n        }\n    }\n\n    function __destruct() {\n\n    }\n\n    static function getMem() {\n        if (self::$m_objMem == NULL) {\n            self::$m_objMem = new CSCacheAPC();\n        }\n        return self::$m_objMem;\n    }\n\n    function delete($key) {\n        if (isset($GLOBALS[$key])) unset($GLOBALS[$key]);\n\n        if ( $this->cacheEngine != null )\n        {\n            $this->cacheEngine->set($this->cacheGlobalKey.$key,false,0);\n        }\n    }\n\n    function restore($key) {\n\n        if (isset($GLOBALS[$key]) && $GLOBALS[$key] !== false) return $GLOBALS[$key];\n\n        if ( $this->cacheEngine != null )\n        {\n            $GLOBALS[$key] = $this->cacheEngine->get($this->cacheGlobalKey.$key);\n        } else {\n            $GLOBALS[$key] = false;\n        }\n\n        return $GLOBALS[$key];\n    }\n\n    function getCacheVersion($cacheVariable, $valuedefault = 1, $ttl = 0)\n    {\n\n        if (isset($GLOBALS['CacheKeyVersion_'.$cacheVariable])) return $GLOBALS['CacheKeyVersion_'.$cacheVariable];\n\n        if ( $this->cacheEngine != null )\n        {\n            if (($version = $this->cacheEngine->get($this->cacheGlobalKey.$cacheVariable)) == false){\n                $version = $valuedefault;\n                $this->cacheEngine->set($this->cacheGlobalKey.$cacheVariable,$version,0,$ttl);\n                $GLOBALS['CacheKeyVersion_'.$cacheVariable] = $valuedefault;\n            } else $GLOBALS['CacheKeyVersion_'.$cacheVariable] = $version;\n\n        } else {\n            $version = $valuedefault;\n            $GLOBALS['CacheKeyVersion_'.$cacheVariable] = $valuedefault;\n        }\n\n        return $version;\n    }\n\n    function increaseCacheVersion($cacheVariable, $valuedefault = 1, $ttl = 0)\n    {\n        if ( $this->cacheEngine != null )\n        {\n            if (($version = $this->cacheEngine->get($this->cacheGlobalKey.$cacheVariable)) == false) {\n                 $this->cacheEngine->set($this->cacheGlobalKey.$cacheVariable,$valuedefault,0,$ttl);\n                 $GLOBALS['CacheKeyVersion_'.$cacheVariable] = $valuedefault;\n            } else {$this->cacheEngine->increment($this->cacheGlobalKey.$cacheVariable,$version+1);$GLOBALS['CacheKeyVersion_'.$cacheVariable] = $version+1;}\n\n        } else {\n            $GLOBALS['CacheKeyVersion_'.$cacheVariable] = $valuedefault;\n        }\n    }\n\n    function store($key, $value, $ttl = 720000) {\n        if ( $this->cacheEngine != null )\n        {\n            $GLOBALS[$key] = $value;\n            $this->cacheEngine->set($this->cacheGlobalKey.$key,$value,0,$ttl);\n        } else {\n           $GLOBALS[$key] = $value;\n        }\n    }\n}\n\nclass erLhcoreClassSystem{\n\n    protected $Params;\n\n    public function __construct(){\n        $this->Params = array(\n            'PHP_OS' => PHP_OS,\n            'DIRECTORY_SEPARATOR' => DIRECTORY_SEPARATOR,\n            'PATH_SEPARATOR' => PATH_SEPARATOR,\n            '_SERVER' => $_SERVER,\n        );\n\n        if ( isset( $this->Params['_SERVER']['REQUEST_TIME'] ) )\n        {\n            // REQUEST_TIME is a float and includes microseconds in PHP > 5.4.0\n            // It should be casted to int in order to keep BC\n            $this->Params['_SERVER']['REQUEST_TIME'] = (int)$this->Params['_SERVER']['REQUEST_TIME'];\n        }\n\n        $this->Attributes = array( 'magickQuotes' => true,\n                                   'hostname'     => true );\n        $this->FileSeparator = $this->Params['DIRECTORY_SEPARATOR'];\n        $this->EnvSeparator  = $this->Params['PATH_SEPARATOR'];\n\n        // Determine OS specific settings\n        if ( $this->Params['PHP_OS'] === 'WINNT' )\n        {\n            $this->OSType = \"win32\";\n            $this->OS = \"windows\";\n            $this->FileSystemType = \"win32\";\n            $this->LineSeparator = \"\\r\\n\";\n            $this->ShellEscapeCharacter = '\"';\n            $this->BackupFilename = '.bak';\n        }\n        else\n        {\n            $this->OSType = 'unix';\n            if ( $this->Params['PHP_OS'] === 'Linux' )\n            {\n                $this->OS = 'linux';\n            }\n            else if ( $this->Params['PHP_OS'] === 'FreeBSD' )\n            {\n                $this->OS = 'freebsd';\n            }\n            else if ( $this->Params['PHP_OS'] === 'Darwin' )\n            {\n                $this->OS = 'darwin';\n            }\n            else\n            {\n                $this->OS = false;\n            }\n            $this->FileSystemType = \"unix\";\n            $this->LineSeparator = \"\\n\";\n            $this->ShellEscapeCharacter = \"'\";\n            $this->BackupFilename = '~';\n        }\n    }\n\n    public static function autoload($className)\n    {\n        if (strpos($className,'LiveHelperChatExtension\\\\') !== false) {\n            $className = str_replace('LiveHelperChatExtension\\\\','',$className);\n            $file = '.' . DIRECTORY_SEPARATOR . 'extension' . DIRECTORY_SEPARATOR . str_replace('\\\\',DIRECTORY_SEPARATOR, $className) . '.php';\n        } else {\n            $file = '.' . DIRECTORY_SEPARATOR . 'lib' . DIRECTORY_SEPARATOR . 'vendor_lhc' . DIRECTORY_SEPARATOR . str_replace('\\\\',DIRECTORY_SEPARATOR, $className) . '.php';\n        }\n\n        if (file_exists($file)) {\n            require_once $file;\n        }\n\n        return false;\n    }\n\n    public static function instance()\n    {\n        if ( is_null( self::$instance ) )\n        {\n            self::$instance = new erLhcoreClassSystem();\n        }\n        return self::$instance;\n    }\n\n\n    /**\n     * Generate wwwdir from phpSelf if valid accoring to scriptFileName\n     * and return null if invalid and false if there is no index in phpSelf\n     *\n     * @param string $phpSelf\n     * @param string $scriptFileName\n     * @param string $index\n     * @return string|null|false String in form 'path/path2' if valid, null if not\n     *                           and false if $index is not  part of phpself\n     */\n    protected static function getValidwwwDir( $phpSelf, $scriptFileName, $index )\n    {\n        if ( !isset( $phpSelf[1] ) || strpos( $phpSelf, $index ) === false )\n            return false;\n\n        // validate $index straight away\n        if ( strpos( $scriptFileName, $index ) === false )\n            return null;\n\n        // optimize '/index.php' pattern\n        if ( $phpSelf === \"/{$index}\" )\n            return '';\n\n        $phpSelfParts = explode( $index, $phpSelf );\n        $validateDir = $phpSelfParts[0];\n        // remove first path if home dir\n        if ( $phpSelf[1] === '~' )\n        {\n            $uri = explode( '/', ltrim( $validateDir, '/' ) );\n            array_shift( $uri );\n            $validateDir = '/' . implode( '/', $uri );\n        }\n\n        // validate direclty with phpself part\n        if ( strpos( $scriptFileName, $validateDir ) !== false )\n            return trim( $phpSelfParts[0], '/' );\n\n        // validate with windows path\n        if ( strpos( $scriptFileName, str_replace( '/', '\\\\', $validateDir ) ) !== false )\n            return trim( $phpSelfParts[0], '/' );\n\n        return null;\n    }\n    \n    /*\n     * Vulnerability: SC-1628\n     * Name: SSL cookie without secure flag set\n     * Type: Web Servers\n     * Asset Group: Network Segment\n     *\n     * URI: /index.php/chat/startchat\n     * Other Info: PHPSESSID=4fqbt1u2k5ci475ieiku4aaie0; path=/; HttpOnly\n     *\n     * Source: SureCloud\n     */\n    // https://bugs.php.net/bug.php?id=49184\n    // https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=730094\n    private static function setSecureCookieIfRequired()\n    {\t    \n\t    if ( (!empty($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) !== 'off') || ((!empty($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') || (!empty($_SERVER['HTTP_X_FORWARDED_SSL']) && $_SERVER['HTTP_X_FORWARDED_SSL'] == 'on'))){\n\t    \t@ini_set('session.cookie_secure',1);\n\t    \tself::$httpsMode = true;\n\t    }\t    \n    }\n    \n    static function init()\n    {\n        $index = 'index.php';\n        $forceVirtualHost = null;\n\n        $instance = erLhcoreClassSystem::instance();\n\n \t\t$instance       = self::instance();\n        $server         = $instance->Params['_SERVER'];\n        $phpSelf        = $server['PHP_SELF'];\n        $requestUri     = $server['REQUEST_URI'];\n        $scriptFileName = $server['SCRIPT_FILENAME'];\n        $siteDir        = rtrim( str_replace( $index, '', $scriptFileName ), '\\/' ) . '/';\n        $wwwDir         = '';\n        $IndexFile      = '';\n        $queryString    = '';\n\n        $cfg = erConfigClassLhConfig::getInstance();\n        $lhcForceVirtualHost = $cfg->getSetting( 'site', 'force_virtual_host', false);\n        \n        self::$proxyMode = $cfg->getSetting( 'site', 'proxy_mode', false);\n\n        // see if we can use phpSelf to determin wwwdir\n        $tempwwwDir = self::getValidwwwDir( $phpSelf, $scriptFileName, $index );\n        if ( $tempwwwDir !== null && $tempwwwDir !== false )\n        {\n            // Force virual host or Auto detect IIS vh mode & Apache .htaccess mode\n            if ( $forceVirtualHost\n              || ( isset( $server['IIS_WasUrlRewritten'] ) && $server['IIS_WasUrlRewritten'] )\n              || ( isset( $server['REDIRECT_URL'] ) && isset( $server['REDIRECT_STATUS'] ) && $server['REDIRECT_STATUS'] == '200' ) )\n            {\n                if ( $tempwwwDir )\n                {\n                    $wwwDir = '/' . $tempwwwDir;\n                    $wwwDirPos = strpos( $requestUri, $wwwDir );\n                    if ( $wwwDirPos !== false )\n                    {\n                        $requestUri = substr( $requestUri, $wwwDirPos + strlen($wwwDir) );\n                    }\n                }\n            }\n            else // Non virtual host mode, use $tempwwwDir to figgure out paths\n            {\n                $indexDir = $index;\n                if ( $tempwwwDir )\n                {\n                    $wwwDir  = '/' . $tempwwwDir;\n                    $indexDir = $wwwDir . '/' . $indexDir;\n                }\n                $IndexFile = '/' . $index;\n\n                // remove sub path from requestUri\n                $indexDirPos = strpos( $requestUri, $indexDir );\n                if ( $indexDirPos !== false )\n                {\n                    if ($lhcForceVirtualHost === false) {                     \n                        $requestUri = substr( $requestUri, $indexDirPos + strlen($indexDir) );\n                    }\n                }\n                elseif ( $wwwDir )\n                {\n                    $wwwDirPos = strpos( $requestUri, $wwwDir );\n                    if ( $wwwDirPos !== false )\n                    {\n                        $requestUri = substr( $requestUri, $wwwDirPos + strlen($wwwDir) );\n                    }\n                }\n            }\n        }\n\n        // remove url and hash parameters\n        if ( isset( $requestUri[1] ) && $requestUri !== '/'  )\n        {\n            $uriGetPos = strpos( $requestUri, '?' );\n            if ( $uriGetPos !== false )\n            {\n                $queryString = substr( $requestUri, $uriGetPos );\n                if ( $uriGetPos === 0 )\n                    $requestUri = '';\n                else\n                    $requestUri = substr( $requestUri, 0, $uriGetPos );\n            }\n\n            $uriHashPos = strpos( $requestUri, '#' );\n            if ( $uriHashPos === 0 )\n                $requestUri = '';\n            elseif ( $uriHashPos !== false )\n                $requestUri = substr( $requestUri, 0, $uriHashPos );\n        }\n\n        // normalize slash use and url decode url if needed\n        if ( $requestUri === '/' || $requestUri === '' )\n        {\n            $requestUri = '';\n        }\n        else\n        {\n            $requestUri = '/' . urldecode( trim( $requestUri, '/ ' ) );\n        }\n\n        if ( ($pos = strpos($requestUri,'index.php')) !== false ) {\n        \t$requestUri = substr($requestUri,$pos+9);\n        }\n\n        $instance->SiteDir    = $siteDir;\n        $instance->WWWDirImages = $instance->WWWDir = $wwwDir;\n        $instance->IndexFile  = $lhcForceVirtualHost === false ? '/index.php' : '';\n        $instance->RequestURI = str_replace('//','/',$requestUri);\n        $instance->QueryString = $queryString;\n        $instance->WWWDirLang = '';\n        \n        self::setSecureCookieIfRequired();\n    }\n    \n    public static function setSiteAccess($siteaccess) {\n    \t \n    \t$cfgSite = erConfigClassLhConfig::getInstance();\n    \t \n    \t$availableSiteaccess = $cfgSite->getSetting( 'site', 'available_site_access' );\n    \t$defaultSiteAccess = $cfgSite->getSetting( 'site', 'default_site_access' );\n    \t\t\n    \tif ($defaultSiteAccess != $siteaccess && in_array($siteaccess, $availableSiteaccess)) {\n    \t\t$optionsSiteAccess = $cfgSite->getSetting('site_access_options',$siteaccess);\n    \t\terLhcoreClassSystem::instance()->Language = $optionsSiteAccess['locale'];\n    \t\terLhcoreClassSystem::instance()->ThemeSite = $optionsSiteAccess['theme'];\n    \t\terLhcoreClassSystem::instance()->ContentLanguage = $optionsSiteAccess['content_language'];\n    \t\terLhcoreClassSystem::instance()->WWWDirLang = '/'.$siteaccess;\n    \t\terLhcoreClassSystem::instance()->SiteAccess = $siteaccess;\n    \t} else {\n    \t\t$optionsSiteAccess = $cfgSite->getSetting('site_access_options',$defaultSiteAccess);\n    \t\terLhcoreClassSystem::instance()->SiteAccess = $defaultSiteAccess;\n    \t\terLhcoreClassSystem::instance()->Language = $optionsSiteAccess['locale'];\n    \t\terLhcoreClassSystem::instance()->ThemeSite = $optionsSiteAccess['theme'];\n    \t\terLhcoreClassSystem::instance()->WWWDirLang = '';\n    \t\terLhcoreClassSystem::instance()->ContentLanguage = $optionsSiteAccess['content_language'];\n    \t}\n    \t \n    \terTranslationClassLhTranslation::getInstance()->initLanguage();\n    }\n    \n    public static function setSiteAccessByLocale($locale) {\n    \t$cfgSite = erConfigClassLhConfig::getInstance();\n    \t$site_languages = $cfgSite->getSetting( 'site', 'available_site_access');\n    \tforeach ($site_languages as $siteaccess) {    \t\t\n    \t\t$siteAccessOptions =  $cfgSite->getSetting( 'site_access_options', $siteaccess);    \t\t\n    \t\tif ($siteAccessOptions['locale'] == $locale) {\n    \t\t\tself::setSiteAccess($siteaccess);\n    \t\t\tbreak;\n    \t\t}    \t\t\n    \t}\n    }\n    \n    function wwwDir()\n    {\n        return (self::$prependDomain ? (self::$httpsMode == true ? 'https:' : '') . '//' . $_SERVER['HTTP_HOST'] : '') . $this->WWWDir;\n    }\n\n    function wwwImagesDir()\n    {\n    \treturn $this->WWWDirImages;\n    }\n\n    public static $prependDomain = false;\n\n    public static $httpsMode = false;\n\n    public static $proxyMode = false;\n\n    public $backgroundMode = false;\n\n    /// The path to where all the code resides\n    public $SiteDir;\n    /// The access path of the current site view\n    /// The relative directory path of the vhless setup\n    public $WWWDir;\n        \n    public $WWWDirImages;\n\n    // The www dir used in links formating\n    public $WWWDirLang;\n\n    /// The filepath for the index\n    public $IndexFile;\n    /// The uri which is used for parsing module/view information from, may differ from $_SERVER['REQUEST_URI']\n    public $RequestURI;\n    /// The type of filesystem, is either win32 or unix. This often used to determine os specific paths.\n\n    /// Current language\n    public $Language;\n\n    // Content language\n    public $ContentLanguage;\n\n    /// Theme site\n    public $ThemeSite;\n\n    public $SiteAccess;\n\n    public $MobileDevice = false;\n\n\n    private static $instance = null;\n\n}\n\n\n?>", "<?php\r\n\r\nclass erLhcoreClassUpdate\r\n{\r\n\tconst DB_VERSION = 269;\r\n\tconst LHC_RELEASE = 397;\r\n\r\n\tpublic static function doTablesUpdate($definition){\r\n\t\t$updateInformation = self::getTablesStatus($definition);\r\n\t\t$db = ezcDbInstance::get();\r\n\r\n        $errorMessages = array();\r\n\r\n\t\ttry {\r\n            $db->query('SET GLOBAL innodb_file_per_table=1;');\r\n            $db->query('SET GLOBAL innodb_large_prefix=1;');\r\n        } catch (Exception $e) {\r\n            //$errorMessages[] = $e->getMessage();\r\n        }\r\n\r\n\t\tforeach ($updateInformation as $table => $tableData) {\r\n\t\t\tif ($tableData['error'] == true) {\r\n\t\t\t\tforeach ($tableData['queries'] as $query) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t$db->query($query);\r\n\t\t\t\t\t} catch (Exception $e) {\r\n\t\t\t\t\t\t$errorMessages[] = $e->getMessage();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn $errorMessages;\r\n\t}\r\n\t\r\n\tpublic static function getTablesStatus($definition){\r\n\t\t$db = ezcDbInstance::get();\r\n\t\t\r\n\t\t$tablesStatus = array();\r\n\t\t\r\n\t\t// Get archive tables\t\t\r\n\t\t$archives = erLhcoreClassModelChatArchiveRange::getList(array('ignore_fields' => array('year_month','range_from','range_to','older_than','last_id','first_id'),'offset' => 0, 'limit' => 1000000,'sort' => 'id ASC'));\r\n\t\t\t\r\n\t\tif (isset($definition['tables']['lh_chat']) && isset($definition['tables']['lh_msg']))\r\n\t\t{\r\n    \t\t// Update archives tables also\r\n    \t\tforeach ($archives as $archive) {\r\n    \t\t    $archive->setTables();\r\n    \t\t    $definition['tables'][erLhcoreClassModelChatArchiveRange::$archiveTable] = $definition['tables']['lh_chat'];\r\n    \t\t    $definition['tables'][erLhcoreClassModelChatArchiveRange::$archiveMsgTable] = $definition['tables']['lh_msg'];\r\n    \t\t}\r\n\t\t}\r\n\r\n\t\tif (isset($definition['tables_collation'])){\r\n            foreach ($definition['tables_collation'] as $table => $dataTableCollation) {\r\n                $tablesStatus[$table] = array('error' => false, 'status' => '', 'queries' => array());\r\n                try {\r\n                    $stmt = $db->prepare(\"show table status like '{$table}'\");\r\n                    $stmt->execute();\r\n                    $tableData = $stmt->fetch(PDO::FETCH_ASSOC);\r\n\r\n                    if (!empty($tableData) && $tableData['collation'] != $dataTableCollation) {\r\n                        $tablesStatus[$table]['queries'][] = \"ALTER TABLE `{$table}` COMMENT='' COLLATE '{$dataTableCollation}';\";\r\n                        $tablesStatus[$table]['error'] = true;\r\n                        $tablesStatus[$table]['status'] = \"{$table} collation {$tableData['collation']} mismatch expected {$dataTableCollation}\";\r\n                    }\r\n\r\n                } catch (Exception $e) {\r\n                    // Just not existing table perhaps\r\n                }\r\n            }\r\n        }\r\n\r\n\t\tforeach ($definition['tables'] as $table => $tableDefinition) {\r\n\r\n\t\t    if (!isset( $tablesStatus[$table])) {\r\n                $tablesStatus[$table] = array('error' => false, 'status' => '', 'queries' => array());\r\n            }\r\n\r\n\t\t\ttry {\r\n\t\t\t\t$sql = 'SHOW FULL COLUMNS FROM '.$table;\r\n\t\t\t\t$stmt = $db->prepare($sql);\r\n\t\t\t\t$stmt->execute();\r\n\t\t\t\t$columnsData = $stmt->fetchAll(PDO::FETCH_ASSOC);\t\t\t\t\r\n\t\t\t\t$columnsDesired = (array)$tableDefinition;\r\n\r\n\t\t\t\t$status = array();\r\n\t\t\t\t$fieldsHandled = array();\r\n\t\t\t\t$existingColumns = array();\r\n\t\t\t\t\r\n\t\t\t\tforeach ($columnsData as $column) {\r\n\t\t\t\t    $existingColumns[] = $column['field'];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tforeach ($columnsData as $column) {\r\n\t\t\t\t\tif (isset($definition['tables_alter'][$table][$column['field']])) {\r\n\t\t\t\t\t    \r\n\t\t\t\t\t    if (!in_array($definition['tables_alter'][$table][$column['field']]['new'], $existingColumns)) {\r\n    \t\t\t\t\t\t$status[] = '['.$column['field'] . \"] field will be renamed\";\r\n    \t\t\t\t\t\t$tablesStatus[$table]['queries'][] = $definition['tables_alter'][$table][$column['field']]['sql'];\r\n    \t\t\t\t\t\t$fieldsHandled[] = $definition['tables_alter'][$table][$column['field']]['new'];\r\n\t\t\t\t\t    } else {\r\n\t\t\t\t\t        $status[] = '['.$column['field'] . \"] field will be dropped\";\r\n\t\t\t\t\t        $tablesStatus[$table]['queries'][] = \"ALTER TABLE `{$table}` DROP `{$column['field']}`,COMMENT=''\";\r\n\t\t\t\t\t    }\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (isset($definition['tables_drop_column'][$table])) {\r\n\t\t\t\t\t    if (in_array($column['field'], $definition['tables_drop_column'][$table])) {\r\n    \t\t\t\t\t\t$status[] = '['.$column['field'] . \"] field will be dropped\";\r\n                            $tablesStatus[$table]['queries'][] = \"ALTER TABLE `{$table}` DROP `{$column['field']}`,COMMENT=''\";\r\n\t\t\t\t\t    }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$tableDataChanged = false;\r\n\t\t\t\t$queriesChangeType = array();\r\n\r\n\t\t\t\tforeach ($columnsDesired as $columnDesired) {\r\n\t\t\t\t\t$columnFound = false;\r\n\t\t\t\t\t$typeMatch = true;\r\n\t\t\t\t\t$collationMatch = true;\r\n\t\t\t\t\tforeach ($columnsData as $column) {\r\n\t\t\t\t\t\tif ($columnDesired['field'] == $column['field']) {\r\n\t\t\t\t\t\t\t$columnFound = true;\r\n\r\n                            if (($columnDesired['type'] != $column['type'] && strpos($column['type'],'(') !== false) || (strpos($column['type'],'(') === false && explode('(',$columnDesired['type'])[0] != explode(' ',$column['type'])[0])) {\r\n\t\t\t\t\t\t\t\t$typeMatch = false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($columnDesired['default'] != $column['default']) {\r\n\t\t\t\t\t\t\t\t$typeMatch = false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($column['collation'] != '' && isset($columnDesired['collation']) && $columnDesired['collation'] != $column['collation']) {\r\n                                $typeMatch = $collationMatch = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($typeMatch == false) {\r\n                        $tableDataChanged = true;\r\n\r\n\t\t\t\t\t\t$tablesStatus[$table]['error'] = true;\r\n\t\t\t\t\t\t$status[] = \"[{$columnDesired['field']}] column type/collation is not correct\";\r\n\r\n\t\t\t\t\t\t$extra = '';\r\n\t\t\t\t\t\tif ($columnDesired['extra'] == 'auto_increment') {\r\n\t\t\t\t\t\t    $extra = ' AUTO_INCREMENT';\r\n\t\t\t\t\t\t} elseif ($columnDesired['default'] !== null) {\r\n                            $extra = \" DEFAULT '{$columnDesired['default']}'\";\r\n                        }\r\n\r\n\t\t\t\t\t\t$collation = '';\r\n                        if ($collationMatch == false) {\r\n                            $collation = \" COLLATE '\".$columnDesired['collation'].\"' \";\r\n                        }\r\n\r\n                        $queriesChangeType[] = \"CHANGE `{$columnDesired['field']}` `{$columnDesired['field']}` {$columnDesired['type']}{$collation} NOT NULL{$extra}\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ($columnFound == false && !in_array($columnDesired['field'], $fieldsHandled)) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$tablesStatus[$table]['error'] = true;\r\n\t\t\t\t\t\t$status[] = \"[{$columnDesired['field']}] column was not found\";\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$default = '';\r\n\t\t\t\t\t\tif ($columnDesired['default'] != null){\r\n\t\t\t\t\t\t\t$default = \" DEFAULT '{$columnDesired['default']}'\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t$tablesStatus[$table]['queries'][] = \"ALTER TABLE `{$table}`\r\n\t\t\t\t\t\tADD `{$columnDesired['field']}` {$columnDesired['type']} NOT NULL{$default},\r\n\t\t\t\t\t\tCOMMENT='';\";\r\n\r\n\t\t\t\t\t\tif (isset($columnDesired['post_query']) && !empty($columnDesired['post_query'])) {\r\n                            $tablesStatus[$table]['queries'][] = $columnDesired['post_query'];\r\n                        }\r\n\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($tableDataChanged == true) {\r\n                    $tablesStatus[$table]['queries'][] = \"ALTER TABLE `{$table}` \" . implode(', ', $queriesChangeType) . ';';\r\n                }\r\n\t\t\t\t\r\n\t\t\t\tif (!empty($status)) {\r\n\t\t\t\t\t$tablesStatus[$table]['status'] = implode(\", \", $status);\r\n\t\t\t\t\t$tablesStatus[$table]['error'] = true;\r\n\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t} catch (Exception $e) {\r\n\t\t        if (isset($definition['tables_create'][$table]))\r\n                {\r\n                    $tablesStatus[$table]['error'] = true;\r\n                    $tablesStatus[$table]['status'] = \"table does not exists\";\r\n                    $tablesStatus[$table]['queries'][] = $definition['tables_create'][$table];\r\n                }\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tforeach ($definition['tables_indexes'] as $table => $dataTableIndex) {\t\t    \r\n\t\t    try {\r\n    \t\t    $sql = 'SHOW INDEX FROM '.$table;\r\n    \t\t    $stmt = $db->prepare($sql);\r\n    \t\t    $stmt->execute();\r\n    \t\t    $columnsData = $stmt->fetchAll(PDO::FETCH_ASSOC); \r\n    \t\t    $status = array();\r\n    \t\t       \t\t    \r\n    \t\t    $existingIndexes = array();\r\n    \t\t    foreach ($columnsData as $indexData) {\r\n    \t\t        $existingIndexes[] = $indexData['key_name'];\r\n    \t\t    }\r\n    \t\t    \r\n    \t\t    $existingIndexes = array_unique($existingIndexes);\r\n    \t\t    \r\n    \t\t    $newIndexes = array_diff(array_keys($dataTableIndex['new']), $existingIndexes);\r\n    \t\t    \r\n    \t\t    foreach ($newIndexes as $newIndex) {\r\n    \t\t        $tablesStatus[$table]['queries'][] = $dataTableIndex['new'][$newIndex];\r\n    \t\t        $status[] = \"{$newIndex} index was not found\";\r\n    \t\t    }\r\n    \t\t    \r\n    \t\t    $removeIndexes = array_intersect($dataTableIndex['old'], $existingIndexes);\r\n    \t\t   \r\n    \t\t    foreach ($removeIndexes as $removeIndex) {\r\n                    array_unshift($tablesStatus[$table]['queries'],\"ALTER TABLE `{$table}` DROP INDEX `{$removeIndex}`;\");\r\n    \t\t        $tablesStatus[$table]['error'] = true;\r\n    \t\t        $status[] = \"{$removeIndex} legacy index was found\";\r\n    \t\t    }\r\n    \t\t    \r\n    \t\t    if (!empty($status)) {\r\n    \t\t        $tablesStatus[$table]['status'] = implode(\", \", $status);\r\n    \t\t        $tablesStatus[$table]['error'] = true;\r\n    \t\t    }\r\n    \t\t    \r\n\t\t    } catch (Exception $e) {\t\t        \r\n\t\t        // Just not existing table perhaps\r\n\t\t    }\t    \r\n\t\t}\r\n\r\n\r\n\r\n\t\tforeach ($definition['tables_data'] as $table => $dataTable) {\r\n\t\t\t$tableIdentifier = $definition['tables_data_identifier'][$table];\r\n\t\t\t\r\n\t\t\t$status = array();\r\n\t\t\t// Check that table has all required records\r\n\t\t\tforeach ($dataTable as $record) {\t\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\t$sql = \"SELECT COUNT(*) as total_records FROM `{$table}` WHERE `{$tableIdentifier}` = :identifier_value\";\r\n\t\t\t\t\t$stmt = $db->prepare($sql);\r\n\t\t\t\t\t$stmt->bindValue(':identifier_value',$record[$tableIdentifier]);\r\n\t\t\t\t\t$stmt->execute();\r\n\t\t\t\t\t$columnsData = $stmt->fetchColumn();\r\n\t\t\t\t\tif ($columnsData == 0){\r\n\t\t\t\t\t\t$status[] = \"Record with identifier {$tableIdentifier} = {$record[$tableIdentifier]} was not found\";\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$columns = array();\r\n\t\t\t\t\t\t$values = array();\r\n\t\t\t\t\t\tforeach ($record as $column => $value) {\r\n\t\t\t\t\t\t\t$columns[] = '`' . $column . '`';\r\n\t\t\t\t\t\t\t$values[] = $db->quote($value);\r\n\t\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\t\t$tablesStatus[$table]['queries'][] = \"INSERT INTO `{$table}` (\".implode(',', $columns).\") VALUES (\".implode(',', $values).\")\";\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (Exception $e) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t$status[] = \"Record with identifier {$tableIdentifier} = {$record[$tableIdentifier]} was not found\";\r\n\t\t\t\t\t\r\n\t\t\t\t\t$columns = array();\r\n\t\t\t\t\t$values = array();\r\n\t\t\t\t\tforeach ($record as $column => $value) {\r\n\t\t\t\t\t\t$columns[] = '`' . $column . '`';\r\n\t\t\t\t\t\t$values[] = $db->quote($value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$tablesStatus[$table]['queries'][] = \"INSERT INTO `{$table}` (\".implode(',', $columns).\") VALUES (\".implode(',', $values).\")\";\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t// Perhaps table does not exists\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!empty($status)){\r\n\t\t\t\t$tablesStatus[$table]['status'] .= implode(\", \", $status);\r\n\t\t\t\t$tablesStatus[$table]['error'] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn $tablesStatus;\r\n\t}\r\n}\r\n\r\n?>", "<?php\r\n\r\nclass erLhcoreClassFormRenderer {\r\n\t\t\r\n\t\r\n\tprivate static $errors = array();\r\n\tprivate static $collectedInfo = array();\r\n\tprivate static $isCollected = false;\r\n\tprivate static $collectedObject = false;\r\n\tprivate static $mainEmail = false;\r\n\tprivate static $customFields = array();\r\n\r\n\t\r\n\tpublic static function setCollectedObject($object) {\r\n\t\tself::$collectedObject = $object;\r\n\t}\r\n\t\r\n    public static function renderForm($form, $asAdmin = false) {\r\n    \t$contentForm = $form->content;\r\n\r\n        // Fields definition in JSON format\r\n        $inputFields = array();\r\n        preg_match_all('/\\[\\[json_content\\{(.*?)\\]\\]/i', $contentForm, $inputFields);\r\n        foreach ($inputFields[1] as $index => $inputDefinition) {\r\n            $inputDefinition = json_decode('{'.$inputDefinition, true);\r\n            $content = self::processInput($inputDefinition, $asAdmin);\r\n            $contentForm = str_replace($inputFields[0][$index], $content, $contentForm);\r\n        }\r\n\r\n    \t$inputFields = array();\r\n    \tpreg_match_all('/\\[\\[[input|textarea|combobox|range](.*?)\\]\\]/i', $contentForm, $inputFields);\r\n    \tforeach ($inputFields[0] as $inputDefinition) {\r\n    \t\t$content = self::processInput($inputDefinition, $asAdmin);\r\n    \t\t$contentForm = str_replace($inputDefinition,$content,$contentForm);\r\n    \t}\r\n\r\n    \tif (isset($_GET['identifier']) && !empty($_GET['identifier'])) {\r\n    \t\t$contentForm .= \"<input type=\\\"hidden\\\" name=\\\"identifier\\\" value=\\\"\".htmlspecialchars(rawurldecode($_GET['identifier'])).\"\\\" />\";\r\n    \t} elseif (isset($_POST['identifier']) && !empty($_POST['identifier'])) {\r\n    \t\t$contentForm .= \"<input type=\\\"hidden\\\" name=\\\"identifier\\\" value=\\\"\".htmlspecialchars($_POST['identifier']).\"\\\" />\";\r\n    \t} elseif (isset($_SERVER['HTTP_REFERER']) && !empty($_SERVER['HTTP_REFERER'])) {\r\n    \t\t$contentForm .= \"<input type=\\\"hidden\\\" name=\\\"identifier\\\" value=\\\"\".htmlspecialchars($_SERVER['HTTP_REFERER']).\"\\\" />\";\r\n    \t}\r\n\r\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('form.on_form_render',array('form' => & $form, 'errors' => & self::$errors));\r\n\r\n    \tif ( empty(self::$errors) && ezcInputForm::hasPostData()) {\r\n    \t\tself::$isCollected = true;\r\n            self::collectCustomFields();\r\n    \t}\r\n\r\n    \treturn $contentForm;    \t\r\n    }\r\n\r\n    public static function collectCustomFields() {\r\n\r\n\t    $collectedData = array();\r\n\r\n        if (isset($_POST['custom_fields']) && !empty($_POST['custom_fields'])) {\r\n            $customFields = json_decode($_POST['custom_fields'], true);\r\n            foreach ($customFields as $customField) {\r\n                $valueStore = $customField['value'];\r\n                if (isset($customField['encrypted']) && $customField['encrypted'] == true) {\r\n                    try {\r\n                        $valueStore = erLhcoreClassChatValidator::decryptAdditionalField($valueStore);\r\n                    } catch (Exception $e) {\r\n                        $valueStore = $e->getMessage();\r\n                    }\r\n                }\r\n\r\n                $collectedData[] = array(\r\n                    'identifier' => str_replace(' ','_',strtolower($customField['name'])),\r\n                    'name' => $customField['name'],\r\n                    'value' => $valueStore\r\n                );\r\n            }\r\n        }\r\n\r\n        if (isset($_POST['jsvar']) && !empty($_POST['jsvar'])) {\r\n            foreach ($_POST['jsvar'] as $key => $value) {\r\n                $jsVar = erLhAbstractModelChatVariable::fetch($key);\r\n                if ($jsVar instanceof erLhAbstractModelChatVariable) {\r\n                    $val = $value;\r\n                    if ($jsVar->type == 0) {\r\n                        $val = (string)$val;\r\n                    } elseif ($jsVar->type == 1) {\r\n                        $val = (int)$val;\r\n                    } elseif ($jsVar->type == 2) {\r\n                        $val = (float)$val;\r\n                    } elseif ($jsVar->type == 3) {\r\n                        try {\r\n                            $val = erLhcoreClassChatValidator::decryptAdditionalField($val);\r\n                        } catch (Exception $e) {\r\n                            $val = $e->getMessage();\r\n                        }\r\n                    }\r\n                    $collectedData[] = array(\r\n                        'identifier' => $jsVar->var_identifier,\r\n                        'name' => $jsVar->var_name,\r\n                        'value' => $val\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        self::$customFields = $collectedData;\r\n    }\r\n\r\n    public static function getCustomFields() {\r\n\t    return self::$customFields;\r\n    }\r\n\r\n    public static function getErrors() {\r\n    \treturn self::$errors;\r\n    }\r\n\r\n    public static function getCollectedInfo() {\r\n    \treturn self::$collectedInfo;\r\n    }\r\n    \r\n    public static function isCollected() {\r\n    \treturn self::$isCollected;\r\n    }\r\n    \r\n    public static function setCollectedInformation($information) {\r\n    \tself::$collectedInfo = $information;\r\n    }\r\n    \r\n    public static function processInput($inputDefinition, $asAdmin = false) {\r\n\t    if (is_array($inputDefinition)) {\r\n            $paramsParsed = $inputDefinition;\r\n        } else {\r\n            $inputDefinition = str_replace(array('[[',']]'), '', $inputDefinition);\r\n            $paramsInput = explode('||', $inputDefinition);\r\n            $defaultType = array_shift($paramsInput);\r\n\r\n            $paramsParsed = array();\r\n            foreach ($paramsInput as $param) {\r\n                $paramsItem = explode('=', $param);\r\n                $paramsParsed[$paramsItem[0]] = $paramsItem[1];\r\n            }\r\n\r\n            if (!isset($paramsParsed['type'])) {\r\n                $paramsParsed['type'] = $defaultType;\r\n            }\r\n        }\r\n\r\n        $paramsParsed['as_admin'] = $asAdmin;\r\n\r\n    \treturn call_user_func('erLhcoreClassFormRenderer::renderInputType'.ucfirst($paramsParsed['type']),$paramsParsed);\r\n    }\r\n    \r\n    public static function renderInputTypeRange($params) {\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \r\n    \t\t$validationFields = array();\r\n    \t\t$validationFields[$params['name'].'From'] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw' );\r\n    \t\t$validationFields[$params['name'].'Till'] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw' );\r\n    \r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n\r\n    \t\tif ( !$form->hasValidData( $params['name'].'From' ) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name'].'From'} == '')) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name'].'From').' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'].'From' )) {\r\n    \t\t\t$valueFrom = $form->{$params['name'].'From'};\r\n    \t\t\tself::$collectedInfo[$params['name'].'From'] = array('definition' => $params,'value' => $form->{$params['name'].'From'});\r\n    \t\t}\r\n    \r\n    \t\tif ( !$form->hasValidData( $params['name'].'Till' ) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name'].'Till'} == '')) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name'].'Till').' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'].'Till' )) {\r\n    \t\t\t$valueTill = $form->{$params['name'].'Till'};\r\n    \t\t\tself::$collectedInfo[$params['name'].'Till'] = array('definition' => $params,'value' => $form->{$params['name'].'Till'});\r\n    \t\t}\r\n    \r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name'].'From']['value'])) {\r\n    \t\t\t$valueFrom = self::$collectedInfo[$params['name'].'From']['value'];\r\n    \t\t} else {\r\n    \t\t\t$valueFrom = (isset($params['StartValue']) ? $params['StartValue'] : '');\r\n    \t\t}\r\n    \r\n    \t\tif (isset(self::$collectedInfo[$params['name'].'Till']['value'])) {\r\n    \t\t\t$valueTill = self::$collectedInfo[$params['name'].'Till']['value'];\r\n    \t\t} else {\r\n    \t\t\t$valueTill = (isset($params['EndValue']) ? $params['EndValue'] : '');\r\n    \t\t}\r\n    \t}\r\n    \t$return = '';\r\n    \t \r\n    \t$placeholder = isset($params['placeholder']) ? ' placeholder=\"'.htmlspecialchars($params['placeholder']).'\" ' : '';\r\n    \t \r\n    \t$valueFromDefault = $valueFrom;\r\n    \tif ($valueFromDefault == '') {\r\n    \t\t$valueFromDefault = $params['min'];\r\n    \t}\r\n    \t \r\n    \t$valueTillDefault = $valueTill;\r\n    \tif ($valueTillDefault == '') {\r\n    \t\t$valueTillDefault = $params['max'];\r\n    \t}\r\n    \t \r\n    \t$return .= \"<div ng-init=\\\"ng{$params['name']}From=\".htmlspecialchars($valueFromDefault,ENT_QUOTES).\";ng{$params['name']}Till=\".htmlspecialchars($valueTillDefault,ENT_QUOTES).\"\\\"><input type=\\\"text\\\" id=\\\"id_{$params['name']}From\\\" ng-model=\\\"ng{$params['name']}From\\\" name=\\\"{$params['name']}From\\\" {$additionalAttributes} {$placeholder} value=\\\"\".htmlspecialchars($valueFrom).\"\\\" />\";\r\n    \t$return .= \"<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"id_{$params['name']}Till\\\" ng-model=\\\"ng{$params['name']}Till\\\" name=\\\"{$params['name']}Till\\\" {$additionalAttributes} {$placeholder} value=\\\"\".htmlspecialchars($valueTill).\"\\\" /></div>\";\r\n    \t \r\n    \tif ($params['usejquislider'] && $params['usejquislider'] == 'true') {\r\n    \r\n    \t\t$step = isset($params['step']) ? 'step:'.$params['step'].',' : '';\r\n    \r\n    \t\t$return = '<div class=\"hide\">'.$return.'</div><script>\r\n\t\t\t$(function() {\r\n\t\t\t\t\t$( \"#'.$params['name'].'Slider\" ).slider({\r\n\t\t\t\t\t\trange: true,\r\n\t\t\t\t\t\tvalues: [ '.htmlspecialchars($valueFromDefault).', '.htmlspecialchars($valueTillDefault).' ],\r\n\t\t\t\t\t\tmin:'.$params['min'].',\r\n\t\t\t\t\t\tmax:'.$params['max'].',\r\n\t\t\t\t\t\t'.$step.'\r\n\t\t\t\t        slide: function (event, ui) {\r\n\t\t\t\t            $(\\'#id_'.$params['name'].'From\\').val(ui.values[0]).trigger(\\'input\\');\r\n\t\t\t\t            $(\\'#id_'.$params['name'].'Till\\').val(ui.values[1]).trigger(\\'input\\');\r\n\t\t\t\t        }\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t</script>';\r\n    \t}\r\n    \t \r\n    \treturn $return;\r\n    }\r\n        \r\n    public static function renderInputTypeText($params) {    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \t\r\n    \t$value = '';\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t\r\n    \t\t$validationFields = array();    \t\t    \t\t\r\n    \t\t$validationFields[$params['name']] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw' );\r\n    \t\t\r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n\r\n    \t\tif (!$form->hasValidData($params['name']) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name']} == '') || (isset($params['validation_rule']) && $params['validation_rule'] != '' && !preg_match($params['validation_rule'],$form->{$params['name']}))) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n                if ($form->hasValidData($params['name'])) {\r\n                    $value = $form->{$params['name']};\r\n                }\r\n    \t\t} elseif ($form->hasValidData( $params['name'] ) && (!isset($params['validation_rule']) || $params['validation_rule'] == '' || preg_match($params['validation_rule'],$form->{$params['name']}))) {\r\n    \t\t\t$value = $form->{$params['name']};\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t}\r\n    \t\t\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])) {\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['value']) ? $params['value'] : '');\r\n    \t\t}\r\n    \t}\r\n    \t    \t\r\n    \t$placeholder = isset($params['placeholder']) ? ' placeholder=\"'.htmlspecialchars($params['placeholder']).'\" ' : '';    \r\n    \treturn \"<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"{$params['name']}\\\" {$additionalAttributes} {$placeholder} value=\\\"\".htmlspecialchars($value).\"\\\" />\";\r\n    }\r\n\r\n    public static function renderInputTypeHidden($params) {\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n\r\n    \t$value = '';\r\n    \tif (ezcInputForm::hasPostData()) {\r\n\r\n    \t\t$validationFields = array();\r\n    \t\t$validationFields[$params['name']] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw' );\r\n\r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n\r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name']} == '')) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {\r\n    \t\t\t$value = $form->{$params['name']};\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t}\r\n\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])) {\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t    if (isset($params['value']) && strpos($params['value'],'prefill|') !== false) {\r\n    \t\t        $varName = str_replace('prefill|','',$params['value']);\r\n                    if (isset($_GET['prefill'][$varName])) {\r\n                        $value = $_GET['prefill'][$varName];\r\n                    } else {\r\n                        $value = '';\r\n                    }\r\n                } else {\r\n                    $value = (isset($params['value']) ? $params['value'] : '');\r\n                }\r\n    \t\t}\r\n    \t}\r\n\r\n        $returnAppend = $return = \"\";\r\n        if (isset($params['as_admin']) && $params['as_admin'] == true) {\r\n            $return = \"<div class='form-group'><label class='font-weight-bold'>\" . htmlspecialchars($params['name_literal']) . \"</label>\";\r\n            $returnAppend = \"</div>\";\r\n        }\r\n\r\n    \treturn $return . \"<input class=\\\"form-control form-control-sm\\\" type=\\\"\". ((isset($params['as_admin']) && $params['as_admin'] == true) ? \"text\" : \"hidden\") .\"\\\" name=\\\"{$params['name']}\\\" {$additionalAttributes} value=\\\"\".htmlspecialchars($value).\"\\\" />\" . $returnAppend;\r\n    }\r\n        \r\n    public static function renderInputTypeEmail($params) {    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \t\r\n    \t$value = '';\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t\r\n    \t\t$validationFields = array();    \t\t    \t\t\r\n    \t\t$validationFields[$params['name']] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'validate_email' );\r\n    \t\t\r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n\r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name']} == '')) {    \t\t\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {\r\n    \t\t\t$value = $form->{$params['name']};\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('main' => (isset($params['main']) && $params['main'] == 'true'),'definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t\t    \t\t\t\r\n    \t\t\t// It's main form e-mail\r\n    \t\t\tif (self::$collectedInfo[$params['name']]['main'] == true) {\r\n    \t\t\t    self::$mainEmail = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t\t}\r\n    \t\t}\r\n    \t\t\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])) {\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['value']) ? $params['value'] : '');\r\n    \t\t}\r\n    \t}\r\n    \t    \t\r\n    \t$placeholder = isset($params['placeholder']) ? ' placeholder=\"'.htmlspecialchars($params['placeholder']).'\" ' : '';    \r\n    \treturn \"<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"{$params['name']}\\\" {$additionalAttributes} {$placeholder} value=\\\"\".htmlspecialchars($value).\"\\\" />\";\r\n    }\r\n\r\n    public static function renderInputTypeNumber($params) {    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \t\r\n    \t$value = '';\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t\r\n    \t\t$validationFields = array();    \t\t    \t\t\r\n    \t\t$validationFields[$params['name']] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'int' );\r\n    \t\t\r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n    \t\t$Errors = array();\r\n    \t\t\r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name']} == '')) {    \t\t\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {    \t\t\r\n    \t\t\t$value = $form->{$params['name']};\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t}\r\n    \t\t\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])) {\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['value']) ? $params['value'] : '');\r\n    \t\t}\r\n    \t}\r\n    \t    \t\r\n    \t$placeholder = isset($params['placeholder']) ? ' placeholder=\"'.htmlspecialchars($params['placeholder']).'\" ' : '';    \r\n    \treturn \"<input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\" name=\\\"{$params['name']}\\\" {$additionalAttributes} {$placeholder} value=\\\"\".htmlspecialchars($value).\"\\\" />\";\r\n    }\r\n\r\n    public static function renderInputTypeDate($params) {    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \t\r\n    \t$value = '';\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t\r\n    \t\t$validationFields = array();    \t\t    \t\t\r\n    \t\t$validationFields[$params['name']] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'string' );\r\n    \t\t\r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n    \t\t$Errors = array();\r\n    \t\t\r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name']} == '')) {    \t\t\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name']) && $form->{$params['name']} != '') {   \r\n    \t\t\t \t\t\r\n    \t\t\t$separator = strpos($form->{$params['name']}, '-') !== false ? '-' : '/';\r\n    \t\t\t$parts = explode($separator, $form->{$params['name']});\r\n\r\n    \t\t\t$pos = explode(',', $params['pos']);\r\n    \t\t\t\r\n    \t\t\tif (count($parts) == 3 && checkdate($parts[$pos[1]], $parts[$pos[2]], $parts[$pos[0]])){    \t\t\t\r\n\t    \t\t\t$value = $form->{$params['name']};\r\n\t    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t\t} else {\r\n    \t\t\t\t$value = htmlspecialchars($form->{$params['name']});\r\n    \t\t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','invalid date format');\r\n    \t\t\t}\r\n    \t\t\t\r\n    \t\t}\r\n    \t\t\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])) {\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['value']) ? $params['value'] : '');\r\n    \t\t}\r\n    \t}\r\n    \t    \t\r\n    \t$placeholder = isset($params['placeholder']) ? ' placeholder=\"'.htmlspecialchars($params['placeholder']).'\" ' : '';    \r\n    \treturn \"<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"{$params['name']}\\\" id=\\\"id_{$params['name']}\\\" {$additionalAttributes} {$placeholder} value=\\\"\".htmlspecialchars($value).\"\\\" /><script>$(function() {\\$('#id_{$params['name']}').fdatepicker({format: '{$params['format']}'});});</script>\";\r\n    }\r\n    \r\n    public static function renderInputTypeTranslate($params)\r\n    {        \r\n        if (isset($params['context']) && isset($params['text'])) {           \r\n            return erTranslationClassLhTranslation::getInstance()->getTranslation($params['context'],$params['text']);\r\n        }\r\n    }\r\n    \r\n    public static function renderInputTypeCombobox($params) {    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \t\r\n    \t$value = '';\r\n    \t\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t \r\n    \t\t$validationFields = array();\r\n    \t\t$validationFields[$params['name']] = new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw' );\r\n    \t\t \r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n    \t\t$Errors = array();\r\n    \t\t \r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && ($form->{$params['name']} == '' || (isset($params['default']) && $params['default'] == $form->{$params['name']})))) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {\r\n    \t\t\t$value = htmlspecialchars($form->{$params['name']});\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t}\r\n    \t\t    \t\t \r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])){\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['default']) ? $params['default'] : '');\r\n    \t\t}\r\n    \t}\r\n    \t\r\n    \t$options = array();\r\n    \tif (isset($params['from']) && isset($params['till'])){\r\n    \t\tfor ($i = $params['from']; $i <= $params['till']; $i++) {\r\n    \t\t\t$isSelected= $value == $i ? 'selected=\"selected\"' : '';\r\n    \t\t\t$options[] = \"<option =\\\"\".htmlspecialchars($i).\"\\\" {$isSelected}>\".htmlspecialchars($i).'</option>';\r\n    \t\t}\r\n    \t} else {    \t\r\n\t    \tforeach (explode('#',$params['options']) as $option) {\r\n\t    \t\t$isSelected= $value == $option ? 'selected=\"selected\"' : '';\r\n\t    \t\t$options[] = \"<option =\\\"\".htmlspecialchars($option).\"\\\" {$isSelected}>\".htmlspecialchars($option).'</option>';\r\n\t    \t};\r\n    \t}\r\n    \t    \t\r\n    \treturn \"<select class=\\\"form-control form-control-sm\\\" {$additionalAttributes} name=\\\"{$params['name']}\\\">\".implode('', $options).\"</select>\";\r\n    }\r\n\r\n    public static function renderInputTypeYear($params) {    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \t\r\n    \t$value = '';\r\n    \t\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t \r\n    \t\t$validationFields = array();\r\n    \t\t$validationFields[$params['name']] = new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'int',array('min_range' => $params['from']) );\r\n    \t\t \r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n    \t\t$Errors = array();\r\n    \t\t \r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && ($form->{$params['name']} == '' || (isset($params['default']) && $params['default'] == $form->{$params['name']})))) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {\r\n    \t\t\t$value = htmlspecialchars($form->{$params['name']});\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t}\r\n    \t\t    \t\t \r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])){\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['default']) ? htmlspecialchars($params['default']) : '');\r\n    \t\t}\r\n    \t}\r\n    \t\r\n\t\t$options = array();\r\n\t\t$yearTill = (isset($params['till']) ? $params['till'] : date('Y'));\r\n    \tfor ( $i = $yearTill; $i >= $params['from']; $i--) {    \t\t    \t\r\n    \t\t$isSelected= $value == $i ? 'selected=\"selected\"' : '';\r\n    \t\t$options[] = \"<option =\\\"\".htmlspecialchars($i).\"\\\" {$isSelected}>\".htmlspecialchars($i).'</option>';    \t\t\r\n    \t}\r\n    \t\t    \t\r\n    \treturn \"<select class=\\\"form-control form-control-sm\\\" {$additionalAttributes} name=\\\"{$params['name']}\\\">\".implode('', $options).\"</select>\";\r\n    }\r\n    \r\n    public static function renderInputTypeMonth($params) {    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \t\r\n    \t$value = '';\r\n    \t\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t \r\n    \t\t$validationFields = array();\r\n    \t\t$validationFields[$params['name']] = new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'int',array('min_range' => 1,'max_range' => 12) );\r\n    \t\t \r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n    \t\t$Errors = array();\r\n    \t\t \r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && ($form->{$params['name']} == '' || (isset($params['default']) && $params['default'] == $form->{$params['name']})))) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {\r\n    \t\t\t$value = $form->{$params['name']};\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t}\r\n    \t\t    \t\t \r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])){\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['default']) ? $params['default'] : '');\r\n    \t\t}\r\n    \t}\r\n    \t\r\n\t\t$options = array();\r\n\t\t\t\r\n    \tfor ( $i = 1; $i <= 12; $i++) {    \t\t    \t\r\n    \t\t$isSelected= $value == $i ? 'selected=\"selected\"' : '';\r\n    \t\t$options[] = \"<option =\\\"\".htmlspecialchars($i).\"\\\" {$isSelected}>\".htmlspecialchars($i).'</option>';    \t\t\r\n    \t}\r\n    \t\t    \t\r\n    \treturn \"<select class=\\\"form-control form-control-sm\\\" {$additionalAttributes} name=\\\"{$params['name']}\\\">\".implode('', $options).\"</select>\";\r\n    }\r\n\r\n    public static function renderInputTypeCheckbox($params) {   \r\n    \t\r\n    \t$isChecked = '';\r\n    \t\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t\r\n    \t\t$validationFields = array();\r\n    \t\t$validationFields[$params['name']] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'boolean' );\r\n    \t\t\r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n    \t\t$Errors = array();\r\n    \t\t\r\n    \t\tif ( !$form->hasValidData( $params['name'] ) && (isset($params['required']) && $params['required'] == 'required')) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {\r\n    \t\t\t$isChecked = ' checked=\"checked\" ';\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params, 'value' => true);\r\n    \t\t} else {\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params, 'value' => false);\r\n    \t\t}    \t\t    \t\t\r\n    \t\t\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])){    \t\r\n    \t\t\t$isChecked = self::$collectedInfo[$params['name']]['value'] == true ? ' checked=\"checked\" ' : '';\r\n    \t\t} else {\r\n    \t\t\t$isChecked = isset($params['value']) && $params['value'] == 'checked' ? ' checked=\"checked\" ' : ''; \r\n    \t\t}\r\n    \t}\r\n    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \treturn \"<input type=\\\"checkbox\\\" name=\\\"{$params['name']}\\\"{$isChecked} {$additionalAttributes} value=\\\"on\\\" />\";\r\n    }\r\n    \r\n    public static function renderInputTypeTextarea($params) {    \t\r\n    \t\r\n    \t$value = '';\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\r\n    \t\t$validationFields = array();\r\n    \t\t$validationFields[$params['name']] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw' );\r\n    \t\r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n    \t\t$Errors = array();\r\n    \t\r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name']} == '')) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {\r\n    \t\t\t$value = $form->{$params['name']};\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t}\r\n    \t\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])){\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['value']) ? $params['value'] : '');\r\n    \t\t}\r\n    \t}    \t\r\n    \t$placeholder = isset($params['placeholder']) ? ' placeholder=\"'.htmlspecialchars($params['placeholder']).'\" ' : '';\r\n    \t\r\n    \treturn \"<textarea class=\\\"form-control form-control-sm\\\" name=\\\"{$params['name']}\\\" {$placeholder}>\" . htmlspecialchars($value) . \"</textarea>\";\r\n    }\r\n    \r\n    public static function renderAdditionalAtrributes($params) {\r\n    \t$additionalAttributes = array();\r\n    \tforeach ($params as $type => $value) {\r\n    \t\tif (strpos($type, 'ng-') !== false) {\r\n    \t\t\t$additionalAttributes[] = $type.'=\"'.htmlspecialchars($value).'\"';\r\n    \t\t}\r\n    \t};     \t\r\n    \treturn implode(' ', $additionalAttributes);\r\n    }\r\n    \r\n    public static function renderInputTypeFile($params) {\r\n\r\n    \t$downloadLink = '';\r\n    \tif (ezcInputForm::hasPostData()) {\r\n\r\n            $fileData = erLhcoreClassModelChatConfig::fetch('file_configuration');\r\n            $data = (array)$fileData->data;\r\n\r\n            // Is file uses different method to check is valid file\r\n            $data['ft_us'] = str_replace('jpe?g','jpg|jpeg',$data['ft_us']);\r\n\r\n\t    \tif (!erLhcoreClassSearchHandler::isFile($params['name'], explode('|',$data['ft_us']), $data['fs_max'] * 1024) && (isset($params['required']) && $params['required'] == 'required')) {\r\n\t    \t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n\t    \t} elseif (erLhcoreClassSearchHandler::isFile($params['name'], explode('|',$data['ft_us']), $data['fs_max'] * 1024)) {\r\n\t    \t\tself::$collectedInfo[$params['name']] = array('definition' => $params, 'value' => $_FILES[$params['name']]);\r\n\t    \t}\r\n\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])){\r\n    \t\t\t$valueContent = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t\t$downloadLink = \"<a href=\\\"http://\".$_SERVER['HTTP_HOST'].erLhcoreClassDesign::baseurl('form/download').'/'.self::$collectedObject->id.'/'.self::$collectedObject->hash.'/'.$params['name'].\"\\\">Download (\".htmlspecialchars($valueContent['name']).\")</a>\";\r\n    \t\t}\r\n    \t}\r\n    \t\r\n    \treturn \"{$downloadLink}<input type=\\\"file\\\" name=\\\"{$params['name']}\\\" />\";\r\n    }\r\n\r\n    public static function storeCollectedInformation($form, $collectedInformation, $customFields = [], $chat = null) {\r\n\r\n\t    $chatForm = true;\r\n        $chatAttributes = [];\r\n        $formAttributes = [];\r\n\r\n        if (isset($_POST['chat_id']) && is_numeric($_POST['chat_id']) && isset($_POST['hash']) && ($chat = erLhcoreClassModelChat::fetch($_POST['chat_id'])) instanceof erLhcoreClassModelChat && $chat->hash == $_POST['hash'] && $chat->status !== erLhcoreClassModelChat::STATUS_CLOSED_CHAT) {\r\n            // Check does this form only chat modifying form or also information collecting form\r\n            foreach ($collectedInformation as $fieldName => $params) {\r\n                $chatFormElement = false;\r\n                if (isset($params['definition']['chat_attr'])) {\r\n                    $chatAttributes[] = $fieldName;\r\n                    $chatFormElement = true;\r\n                    $path = explode('.', $params['definition']['chat_attr']);\r\n                    if ($path[0] == 'chat') {\r\n                        $chat->{$path[1]} = (string)$params['value'];\r\n                        $chat->updateThis(['update' => [$path[1]]]);\r\n                    } elseif ($path[0] == 'chat_variable') {\r\n                        $chatVariablesArray = $chat->chat_variables_array;\r\n                        $chatVariablesArray[$path[1]] = is_numeric($params['value']) ? $params['value'] : (string)$params['value'];\r\n                        $chat->chat_variables_array = $chatVariablesArray;\r\n                        $chat->chat_variables = json_encode($chatVariablesArray);\r\n                        $chat->updateThis(['update' => ['chat_variables']]);\r\n                    }\r\n                } elseif (isset($params['definition']['chat_additional']) && $params['definition']['chat_additional'] != '') {\r\n                    $chatFormElement = true;\r\n                    $chatAttributes[] = $fieldName;\r\n                    $paramsAdditions = json_decode($params['definition']['chat_additional'],true);\r\n                    if (isset($paramsAdditions['identifier'])) {\r\n                        $additionalData = $chat->additional_data_array;\r\n                        $attributesUpdates = [];\r\n                        foreach ($additionalData as $index => $dataAdditional) {\r\n                            if (isset($dataAdditional['identifier']) && $dataAdditional['identifier'] == $paramsAdditions['identifier']) {\r\n                                $additionalData[$index]['value'] = is_numeric($params['value']) ? $params['value'] : (string)$params['value'];\r\n\r\n                                if (isset($paramsAdditions['key'])) {\r\n                                    $additionalData[$index]['key'] = $paramsAdditions['key'];\r\n                                }\r\n\r\n                                $attributesUpdates[] = $dataAdditional['identifier'];\r\n                            }\r\n                        }\r\n\r\n                        if (!in_array($paramsAdditions['identifier'], $attributesUpdates)) {\r\n                            $additionalData[] = [\r\n                                'value' => is_numeric($params['value']) ? $params['value'] : (string)$params['value'],\r\n                                'key' => (isset($paramsAdditions['key']) ? $paramsAdditions['key'] : $paramsAdditions['identifier']),\r\n                                'identifier' => $paramsAdditions['identifier'],\r\n                            ];\r\n                        }\r\n\r\n                        $chat->additional_data_array = $additionalData;\r\n                        $chat->additional_data = json_encode($additionalData);\r\n                        $chat->updateThis(['update' => ['additional_data']]);\r\n                    }\r\n\r\n                } elseif (isset($params['definition']['scope']) && $params['definition']['scope'] == 'chat') {\r\n                    $chatAttributes[] = $fieldName;\r\n                    $chatFormElement = true;\r\n                    // Save file as association with a chat instead of a form\r\n                    if ($params['definition']['type'] == 'file') {\r\n\r\n                        $fileData = erLhcoreClassModelChatConfig::fetch('file_configuration');\r\n                        $data = (array)$fileData->data;\r\n                        $path = 'var/storage/' . date('Y') . 'y/' . date('m') . '/' . date('d') . '/' . $chat->id . '/';\r\n\r\n                        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('file.uploadfile.file_path', array('path' => & $path, 'storage_id' => $chat->id));\r\n\r\n                        $clamav = false;\r\n\r\n                        if (isset($data['clamav_enabled']) && $data['clamav_enabled'] == true) {\r\n\r\n                            $opts = array();\r\n\r\n                            if (isset($data['clamd_sock']) && !empty($data['clamd_sock'])) {\r\n                                $opts['clamd_sock'] = $data['clamd_sock'];\r\n                            }\r\n\r\n                            if (isset($data['clamd_sock_len']) && !empty($data['clamd_sock_len'])) {\r\n                                $opts['clamd_sock_len'] = $data['clamd_sock_len'];\r\n                            }\r\n\r\n                            $clamav = new Clamav($opts);\r\n                        }\r\n\r\n                        $upload_handler = new erLhcoreClassFileUpload(array(\r\n                            'antivirus' => $clamav,\r\n                            'param_name' => $params['definition']['name'],\r\n                            'user_id' => -1,    // Save as system message\r\n                            'as_form' => true,    // Indicate it's a form upload\r\n                            'max_file_size' => $data['fs_max'] * 1024,\r\n                            'accept_file_types_lhc' => '/\\.(' . $data['ft_us'] . ')$/i',\r\n                            'chat' => $chat,\r\n                            'download_via_php' => true,\r\n                            'upload_dir' => $path));\r\n\r\n                        if ($upload_handler->uploadedFile instanceof erLhcoreClassModelChatFile) {\r\n                            erLhcoreClassChatEventDispatcher::getInstance()->dispatch('file.uploadfile.file_store', array('chat_file' => $upload_handler->uploadedFile));\r\n                            $chat->user_typing_txt = '100%';\r\n                        }\r\n\r\n                        $chat->user_typing = time();\r\n                        $chat->updateThis(array('update' => array('user_typing_txt','user_typing')));\r\n                    }\r\n                } else {\r\n                    $formAttributes[] = $fieldName;\r\n                }\r\n\r\n                // If at-least one attribute is not chat save as a form\r\n                if ($chatForm == true && $chatFormElement == false) {\r\n                    $chatForm = false;\r\n                }\r\n\r\n             }\r\n        } else {\r\n            $chatForm = false;\r\n        }\r\n\r\n        if ($chatForm === false) {\r\n            $formCollected = new erLhAbstractModelFormCollected();\r\n            $formCollected->ip = erLhcoreClassIPDetect::getIP();\r\n            $formCollected->ctime = time();\r\n            $formCollected->form_id = $form->id;\r\n            $formCollected->identifier = substr(isset($_POST['identifier']) ? $_POST['identifier'] : (isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : ''),0,250);\r\n            $formCollected->saveThis();\r\n        }\r\n\r\n        if (isset($_POST['chat_id']) && is_numeric($_POST['chat_id']) && isset($_POST['hash']) && ($chat = erLhcoreClassModelChat::fetch($_POST['chat_id'])) instanceof erLhcoreClassModelChat && $chat->hash == $_POST['hash'] && $chat->status !== erLhcoreClassModelChat::STATUS_CLOSED_CHAT) {\r\n\r\n            if ($chatForm === false) {\r\n                $formCollected->chat_id = $chat->id;\r\n            }\r\n\r\n            // Store as message to visitor\r\n            $msg = new erLhcoreClassModelmsg();\r\n\r\n            if ($chatForm === false) {\r\n                $msg->msg = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Information collected. [baseurl]form/viewcollected/' . $formCollected->id . '[/baseurl]');\r\n            } else {\r\n                $msg->msg = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Information collected. Only chat form');\r\n            }\r\n\r\n            $msg->chat_id = $chat->id;\r\n            $msg->user_id = -1;\r\n            $msg->time = time();\r\n            $msg->name_support = $chat->nick;\r\n            $msg->saveThis();\r\n\r\n            // Update last user msg time so auto responder work's correctly\r\n            $chat->last_op_msg_time = $chat->last_user_msg_time = time();\r\n            $chat->last_msg_id = $msg->id;\r\n\r\n            // All ok, we can make changes\r\n            $chat->updateThis(array('update' => array('last_msg_id', 'last_op_msg_time', 'last_user_msg_time')));\r\n        }\r\n\r\n        if ($chatForm === true) {\r\n            return;\r\n        }\r\n\r\n    \t// Finish collect information\r\n    \tforeach ($collectedInformation as $fieldName => & $params) {\r\n    \t    // Do not save file again if it was chat file\r\n    \t\tif (!in_array($fieldName, $chatAttributes) && $params['definition']['type'] == 'file' && !(isset($params['definition']['scope']) && $params['definition']['scope'] == 'chat')) {\r\n    \t\t\t\t\t\t\r\n    \t\t\t$dir = 'var/storageform/'.date('Y').'y/'.date('m').'/'.date('d').'/'.$formCollected->id.'/';\r\n    \t\t\t\r\n    \t\t\terLhcoreClassChatEventDispatcher::getInstance()->dispatch('form.fill.file_path',array('path' => & $dir, 'storage_id' => $formCollected->id));\r\n    \t\t\t\r\n    \t\t\terLhcoreClassFileUpload::mkdirRecursive( $dir );\r\n    \t\t\t    \t\t\t\r\n    \t\t\t$file = erLhcoreClassSearchHandler::moveUploadedFile($params['definition']['name'],$dir);\r\n    \t\t\t\r\n\t    \t\t$params['filename'] = $file;\r\n\t    \t\t$params['filepath'] = $dir;\r\n\t    \t\t\r\n\t    \t\terLhcoreClassChatEventDispatcher::getInstance()->dispatch('form.fill.store_file',array('file_params' => & $params));\r\n    \t\t}\r\n    \t}\r\n    \t\r\n    \t$formCollected->content = json_encode($collectedInformation);\r\n        $formCollected->custom_fields = json_encode($customFields);\r\n    \t$formCollected->saveThis();\r\n\r\n    \terLhcoreClassChatEventDispatcher::getInstance()->dispatch('form.filled',array('form' => & $formCollected));\r\n    \t\r\n    \t// Inform user about filled form\r\n    \terLhcoreClassChatMail::informFormFilled($formCollected,array('email' => self::$mainEmail));\r\n    }\r\n    \r\n}\r\n\r\n?>", "<?php\n\nclass erLhcoreClassGenericBotActionRestapi\n{\n\n    public static function process($chat, $action, $trigger, $params)\n    {\n\n        $params['current_trigger'] = $trigger;\n\n        if (!isset($params['first_trigger'])) {\n            $params['first_trigger'] = $params['current_trigger'];\n        }\n        \n        if (isset($action['content']['rest_api']) && is_numeric($action['content']['rest_api']) && isset($action['content']['rest_api_method']) && !empty($action['content']['rest_api_method'])) {\n\n            $restAPI = erLhcoreClassModelGenericBotRestAPI::fetch($action['content']['rest_api']);\n\n            if ($restAPI instanceof erLhcoreClassModelGenericBotRestAPI) {\n\n                // Within next user message we will process this event\n                if (isset($action['content']['attr_options']['on_next_msg']) && $action['content']['attr_options']['on_next_msg'] == true) {\n\n                    unset($action['content']['attr_options']['on_next_msg']);\n                    $event = new erLhcoreClassModelGenericBotChatEvent();\n                    $event->chat_id = $chat->id;\n                    $event->ctime = time();\n                    $event->content = json_encode(array('callback_list' => array(\n                        array(\n                            'content' => array(\n                                'type' => 'rest_api_next_msg',\n                                'replace_array' => (isset($params['replace_array']) ? $params['replace_array'] : array()),\n                                'content' => $action['content']\n                            )\n                        )\n                    )));\n\n                    if (!isset($params['do_not_save']) || $params['do_not_save'] == false) {\n                        $event->saveThis();\n                    }\n\n                    return;\n                }\n\n                $method = false;\n                foreach ($restAPI->configuration_array['parameters'] as $parameter) {\n                    if ($action['content']['rest_api_method'] == $parameter['id']) {\n                        $method = $parameter;\n                    }\n                }\n\n                // Callback should be executed as background task\n                if ((isset($action['content']['attr_options']['background_process']) && $action['content']['attr_options']['background_process'] == true)) {\n\n                    $event = new erLhcoreClassModelGenericBotChatEvent();\n                    $event->chat_id = $chat->id;\n                    $event->ctime = time();\n                    $event->content = json_encode(array('callback_list' => array(\n                        array(\n                            'content' => array(\n                                'type' => 'rest_api',\n                                'start_mode' => erLhcoreClassGenericBotWorkflow::$startChat,\n                                'replace_array' => (isset($params['replace_array']) ? $params['replace_array'] : array()),\n                                'action' => $action,\n                                'msg_id' => (isset($params['msg']) && is_object($params['msg']) ? $params['msg']->id : 0),\n                                'msg_text' => (isset($params['msg_text']) ? $params['msg_text'] : ''),\n                                'event' => (isset($action['content']['event']) ? $action['content']['event'] : null),\n                            )\n                        )\n                    )));\n\n                    // Save only if user has resque extension\n                    if ((!isset($params['do_not_save']) || $params['do_not_save'] == false) && class_exists('erLhcoreClassExtensionLhcphpresque')) {\n                        $event->saveThis();\n                        $inst_id = class_exists('erLhcoreClassInstance') ? erLhcoreClassInstance::$instanceChat->id : 0;\n                        erLhcoreClassModule::getExtensionInstance('erLhcoreClassExtensionLhcphpresque')->enqueue('lhc_rest_api_queue', 'erLhcoreClassLHCBotWorker', array('inst_id' => $inst_id, 'action' => 'rest_api', 'event_id' => $event->id));\n                        return ;\n                    }\n                }\n\n                erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.rest_api_before_request', array(\n                    'restapi' => & $restAPI,\n                    'chat' => $chat,\n                    'params' => $params\n                ));\n\n                $response = self::makeRequest($restAPI->configuration_array['host'], $method, array('action' => $action, 'rest_api_method_params' => $action['content']['rest_api_method_params'], 'chat' => $chat, 'params' => $params));\n\n                // We have found exact matching response type\n                // Let's check has user checked any trigger to execute.\n                if (isset($response['id'])) {\n                    if (isset($action['content']['rest_api_method_output'][$response['id']]) && is_numeric($action['content']['rest_api_method_output'][$response['id']])) {\n\n                        $argsDefault = array(\n                            'status' => 'continue_all',\n                            'replace_array' => array(\n                                '{content_1}' => $response['content'],\n                                '{content_2}' => $response['content_2'],\n                                '{content_3}' => $response['content_3'],\n                                '{content_4}' => $response['content_4'],\n                                '{content_5}' => $response['content_5'],\n                                '{content_6}' => $response['content_6'],\n                                '{content_1_json}' => json_encode($response['content']),\n                                '{content_2_json}' => json_encode($response['content_2']),\n                                '{content_3_json}' => json_encode($response['content_3']),\n                                '{content_4_json}' => json_encode($response['content_4']),\n                                '{content_5_json}' => json_encode($response['content_5']),\n                                '{content_6_json}' => json_encode($response['content_6']),\n                                '{http_code}' => $response['http_code'],\n                                '{http_error}' => $response['http_error'],\n                                '{content_raw}' => $response['content_raw'],\n                                '{http_data}' => $response['http_data']\n                            ),\n                            'meta_msg' => $response['meta'],\n                            'trigger_id' => $action['content']['rest_api_method_output'][$response['id']]\n                        );\n\n                        if (isset($params['msg'])) {\n                            $argsDefault['msg'] = $params['msg'];\n                        } elseif (isset($params['msg_text'])) {\n                            $argsDefault['msg_text'] = $params['msg_text'];\n                        }\n\n                        if (isset($params['replace_array']) && !empty($params['replace_array'])) {\n                            $argsDefault['replace_array'] = array_merge($params['replace_array'], $argsDefault['replace_array']);\n                        }\n\n                        return $argsDefault;\n\n                    } else {\n                        // Do nothing as user did not chose any trigger to execute\n                    }\n                } elseif (isset($action['content']['rest_api_method_output']['default_trigger']) && is_numeric($action['content']['rest_api_method_output']['default_trigger'])) {\n\n                    $argsDefault = array(\n                        'status' => 'continue_all',\n                        'replace_array' => array(\n                            '{content_1}' => $response['content'],\n                            '{content_2}' => $response['content_2'],\n                            '{content_3}' => $response['content_3'],\n                            '{content_4}' => $response['content_4'],\n                            '{content_5}' => $response['content_5'],\n                            '{content_6}' => $response['content_6'],\n                            '{content_1_json}' => json_encode($response['content']),\n                            '{content_2_json}' => json_encode($response['content_2']),\n                            '{content_3_json}' => json_encode($response['content_3']),\n                            '{content_4_json}' => json_encode($response['content_4']),\n                            '{content_5_json}' => json_encode($response['content_5']),\n                            '{content_6_json}' => json_encode($response['content_6']),\n                            '{http_code}' => $response['http_code'],\n                            '{http_error}' => $response['http_error'],\n                            '{content_raw}' => $response['content_raw'],\n                            '{http_data}' => $response['http_data']\n                        ),\n                        'meta_msg' => $response['meta'],\n                        'trigger_id' => $action['content']['rest_api_method_output']['default_trigger'],\n                        'trigger_action_id' => (isset($action['content']['rest_api_method_output']['default_trigger_action_id']) && !empty($action['content']['rest_api_method_output']['default_trigger_action_id']) ? $action['content']['rest_api_method_output']['default_trigger_action_id'] : null)\n                    );\n\n                    if (isset($params['msg'])) {\n                        $argsDefault['msg'] = $params['msg'];\n                    } elseif (isset($params['msg_text'])) {\n                        $argsDefault['msg_text'] = $params['msg_text'];\n                    }\n                    \n                    if (isset($params['replace_array']) && !empty($params['replace_array'])) {\n                        $argsDefault['replace_array'] = array_merge($params['replace_array'], $argsDefault['replace_array']);\n                    }\n\n                    // Alternative trigger, most of the time just for logging purposes\n                    if (isset($action['content']['rest_api_method_output']['default_trigger_alt']) && is_numeric($action['content']['rest_api_method_output']['default_trigger_alt'])) {\n                        $triggerDefaultAlt = erLhcoreClassModelGenericBotTrigger::fetch($action['content']['rest_api_method_output']['default_trigger_alt']);\n                        if ($triggerDefaultAlt instanceof erLhcoreClassModelGenericBotTrigger) {\n                            erLhcoreClassGenericBotWorkflow::processTrigger($chat, $triggerDefaultAlt, false, array('args' => $argsDefault));\n                        }\n                    }\n\n                    return $argsDefault;\n                }\n\n                if ($response['content'] != '' || (isset($response['meta']) && !empty($response['meta']))){\n\n                    if (isset($action['content']['attr_options']['no_body']) && $action['content']['attr_options']['no_body'] == true) {\n                        return;\n                    }\n\n                    $msg = new erLhcoreClassModelmsg();\n                    $msg->chat_id = $chat->id;\n                    $msg->name_support = erLhcoreClassGenericBotWorkflow::getDefaultNick($chat);\n\n                    if (isset($action['content']['attr_options']['as_system']) && $action['content']['attr_options']['as_system'] == true) {\n                        $msg->user_id = -1; // Save as system message\n                    } else {\n                        $msg->user_id = -2; // Save as bot message\n                    }\n\n                    $msg->time = time() + 1;\n                    $msg->meta_msg = (isset($response['meta']) && !empty($response['meta'])) ? json_encode($response['meta']) : '';\n                    $msg->msg = $response['content'];\n\n                    if (!isset($params['do_not_save']) || $params['do_not_save'] == false) {\n                        if ($msg->chat_id > 0) {\n                            $msg->saveThis();\n                        }\n                    }\n\n                    return  $msg;\n                }\n            }\n        }\n    }\n\n    public static function makeRequest($host, $methodSettings, $paramsCustomer)\n    {\n        $msg_text = '';\n\n        if (isset($paramsCustomer['params']['msg'])) {\n            $msg_text = $paramsCustomer['params']['msg']->msg;\n        } elseif (isset($paramsCustomer['params']['msg_text'])) {\n            $msg_text = $paramsCustomer['params']['msg_text'];\n        }\n\n        // Allow extensions to preparse send message\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_parse_send', array('msg' => & $msg_text));\n\n        $msg_text_cleaned = $msg_text;\n\n        // We have to extract attached files and send them separately\n        $matches = array();\n        preg_match_all('/\\[file=\"?(.*?)\"?\\]/', $msg_text, $matches);\n\n        $media = array();\n        $files = array();\n\n        foreach ($matches[1] as $index => $body) {\n            $parts = explode('_', $body);\n            $fileID = $parts[0];\n            $hash = $parts[1];\n            try {\n                $file = erLhcoreClassModelChatFile::fetch($fileID);\n                if (is_object($file) && $hash == $file->security_hash) {\n\n                    if (isset($_SERVER['HTTP_HOST'])) {\n                        $url = (erLhcoreClassSystem::$httpsMode == true ? 'https:' : 'http:') . '//' . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurldirect('file/downloadfile') . \"/{$file->id}/{$hash}\";\n                    } else {\n                        if (class_exists('erLhcoreClassInstance')) {\n                            $site_address = 'https://' . erLhcoreClassInstance::$instanceChat->address . '.' . erConfigClassLhConfig::getInstance()->getSetting( 'site', 'seller_domain');\n                        } else {\n                            $site_address = erLhcoreClassModule::getExtensionInstance('erLhcoreClassExtensionLhcphpresque')->settings['site_address'];\n                        }\n                        $url = $site_address . erLhcoreClassDesign::baseurldirect('file/downloadfile') . \"/{$file->id}/{$hash}\";\n                    }\n\n                    $media[] = array(\n                        'id' => $file->id,\n                        'size' => $file->size,\n                        'upload_name' => $file->upload_name,\n                        'type' => $file->type,\n                        'extension' => $file->extension,\n                        'hash' => $hash,\n                        'url' => $url\n                    );\n\n                    $msg_text_cleaned = str_replace($matches[0][$index],'',$msg_text_cleaned);\n\n                    $files[] = $file;\n                }\n\n            } catch (Exception $e) {\n\n            }\n        }\n\n        if (empty($media)) {\n            $matches = array();\n\n            preg_match_all('/\\[img\\](.*?)\\[\\/img\\]/ms', $msg_text, $matches);\n\n            foreach ($matches[1] as $index => $img) {\n                $in = trim($img);\n\n                $url = erLhcoreClassBBCode::esc_url($in);\n\n                if ( empty($url) )\n                    continue;\n\n                $file = new erLhcoreClassModelChatFile();\n                $file->remote_file = true;\n                $file->remote_url = $url;\n\n                $parts = explode('.',strtolower($file->remote_url));\n                $extension = array_pop($parts);\n\n                $extensionMimetype = array(\n                    'jpeg' => 'image/jpeg',\n                    'jpg' => 'image/jpg',\n                    'png' => 'image/png',\n                    'gif' => 'image/gif',\n                );\n\n                $file->upload_name = (isset($extensionMimetype[$extension]) ? 'image.' . $extension : 'image.png');\n                $file->extension = isset($extensionMimetype[$extension]) ? $extension : 'png';\n                $file->type = (isset($extensionMimetype[$extension]) ? $extensionMimetype[$extension] : 'image/jpeg');\n\n                $media[] = array(\n                    'id' => null,\n                    'size' => null,\n                    'upload_name' =>  $file->upload_name,\n                    'type' => $file->type,\n                    'extension' => $file->extension,\n                    'hash' => '',\n                    'url' => $file->remote_url\n                );\n\n                $files[] = $file;\n\n                $msg_text_cleaned = str_replace($matches[0][$index],'',$msg_text_cleaned);\n            }\n        }\n\n        // Allow extensions to preparse send message\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_parse_send_clean', array('msg' => & $msg_text_cleaned));\n\n        $file_body = null;\n        $file_url = null;\n        $file_name = null;\n\n        $file_api = false;\n\n        // Switch to file API if it's only one file send\n        if (isset($methodSettings['body_raw_file']) && $methodSettings['body_raw_file'] != '' && count($files) == 1 && trim($msg_text_cleaned) == '') {\n            foreach ($files as $mediaFile) {\n\n                $file_api = false;\n\n                if (isset($methodSettings['suburl_file']) && !empty($methodSettings['suburl_file'])) {\n                    if (in_array($mediaFile->type,['image/jpeg','image/png','image/gif'])) {\n                        $fileBodyRawFile = preg_replace('/\\{file_api\\}(.*?)\\{\\/file_api\\}/ms','',$methodSettings['body_raw_file']);\n                        $fileBodyRawFile = trim(str_replace(['{image_api}','{/image_api}'],'', $fileBodyRawFile));\n                        if (!empty($fileBodyRawFile)) {\n                            $methodSettings['suburl'] = $methodSettings['suburl_file'];\n                            $methodSettings['suburl'] = preg_replace('/\\{file_api\\}(.*?)\\{\\/file_api\\}/ms','',$methodSettings['suburl']);\n                            $methodSettings['suburl'] = str_replace(['{image_api}','{/image_api}'],'', $methodSettings['suburl']);\n                            $methodSettings['body_raw_file'] = $fileBodyRawFile;\n                            $file_api = true;\n                        }\n                    } else {\n                        $fileBodyRawFile = preg_replace('/\\{image_api\\}(.*?)\\{\\/image_api\\}/ms','',$methodSettings['body_raw_file']);\n                        $fileBodyRawFile = trim(str_replace(['{file_api}','{/file_api}'],'', $fileBodyRawFile));\n                        if (!empty($fileBodyRawFile)) {\n                            $methodSettings['suburl'] = $methodSettings['suburl_file'];\n                            $methodSettings['suburl'] = preg_replace('/\\{image_api\\}(.*?)\\{\\/image_api\\}/ms','',$methodSettings['suburl']);\n                            $methodSettings['suburl'] = str_replace(['{file_api}','{/file_api}'],'', $methodSettings['suburl']);\n                            $methodSettings['body_raw_file'] = $fileBodyRawFile;\n                            $file_api = true;\n                        }\n                    }\n                }\n\n                $file_name = $mediaFile->upload_name;\n\n                if ($mediaFile->remote_file !== true) {\n                    $file_body = 'data:'.$mediaFile->type.';base64,'.base64_encode(file_get_contents($mediaFile->file_path_server));\n                    if (isset($_SERVER['HTTP_HOST'])) {\n                        $file_url = (erLhcoreClassSystem::$httpsMode == true ? 'https:' : 'http:') . '//' . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurldirect('file/downloadfile') . \"/{$mediaFile->id}/{$mediaFile->security_hash}\";\n                    } else {\n                        if (class_exists('erLhcoreClassInstance')) {\n                            $site_address = 'https://' . erLhcoreClassInstance::$instanceChat->address . '.' . erConfigClassLhConfig::getInstance()->getSetting( 'site', 'seller_domain');\n                        } else {\n                            $site_address = erLhcoreClassModule::getExtensionInstance('erLhcoreClassExtensionLhcphpresque')->settings['site_address'];\n                        }\n                        $file_url = $site_address . erLhcoreClassDesign::baseurldirect('file/downloadfile') . \"/{$mediaFile->id}/{$mediaFile->security_hash}\";\n                    }\n                } else {\n                    $file_body = '';\n                    if (strpos($file->remote_url,'http://') !== false || strpos($file->remote_url,'https://') !== false) {\n                        $file_url = $file->remote_url;\n                    } else {\n                        if (isset($_SERVER['HTTP_HOST'])) {\n                            $file_url = (erLhcoreClassSystem::$httpsMode == true ? 'https:' : 'http:') . '//' . $_SERVER['HTTP_HOST'] . $file->remote_url;\n                        } else {\n                            if (class_exists('erLhcoreClassInstance')) {\n                                $site_address = 'https://' . erLhcoreClassInstance::$instanceChat->address . '.' . erConfigClassLhConfig::getInstance()->getSetting( 'site', 'seller_domain');\n                            } else {\n                                $site_address = erLhcoreClassModule::getExtensionInstance('erLhcoreClassExtensionLhcphpresque')->settings['site_address'];\n                            }\n                            $file_url = $site_address . $file->remote_url;\n                        }\n                    }\n                }\n             }\n        }\n\n        $dynamicParamsVariables = self::extractDynamicParams($methodSettings, $paramsCustomer['params']);\n\n        $dynamicReplaceVariables = self::extractDynamicVariables($methodSettings, $paramsCustomer['chat']);\n\n        $replaceVariables = array(\n            '{{msg}}' => $msg_text,\n            '{{msg_clean}}' => trim($msg_text_cleaned),\n            '{{msg_url}}' => erLhcoreClassBBCodePlain::make_clickable($msg_text, array('sender' => 0)),\n            '{{chat_id}}' => $paramsCustomer['chat']->id,\n            '{{lhc.nick}}' =>$paramsCustomer['chat']->nick,\n            '{{lhc.email}}' => $paramsCustomer['chat']->email,\n            '{{lhc.department}}' => (string)$paramsCustomer['chat']->department,\n            '{{lhc.dep_id}}' => (string)$paramsCustomer['chat']->dep_id,\n            '{{ip}}' => (string)erLhcoreClassIPDetect::getIP(),\n            '{{media}}' => json_encode($media),\n            '{{file_body}}' => $file_body,\n            '{{file_url}}' => $file_url,\n            '{{file_name}}' => $file_name\n        );\n\n        $replaceVariables = array_merge($replaceVariables, $dynamicReplaceVariables);\n\n        $replaceVariables = array_merge($replaceVariables, $dynamicParamsVariables);\n\n        foreach ($replaceVariables as $keyVariable => $variableValue) {\n            if (is_array($variableValue) || is_object($variableValue)) {\n                $replaceVariables[$keyVariable] = json_encode($variableValue);\n            }\n        }\n\n        $replaceVariablesJSON = array(\n            '{{msg}}' => json_encode($msg_text),\n            '{{msg_clean}}' => json_encode(trim($msg_text_cleaned)),\n            '{{msg_url}}' => json_encode(erLhcoreClassBBCodePlain::make_clickable($msg_text, array('sender' => 0))),\n            '{{chat_id}}' => json_encode($paramsCustomer['chat']->id),\n            '{{lhc.nick}}' => json_encode($paramsCustomer['chat']->nick),\n            '{{lhc.email}}' => json_encode($paramsCustomer['chat']->email),\n            '{{lhc.department}}' => json_encode((string)$paramsCustomer['chat']->department),\n            '{{lhc.dep_id}}' => json_encode((string)$paramsCustomer['chat']->dep_id),\n            '{{ip}}' => json_encode(erLhcoreClassIPDetect::getIP()),\n            '{{media}}' => json_encode($media),\n            '{{file_body}}' => json_encode($file_body),\n            '{{file_url}}' => json_encode($file_url),\n            '{{file_name}}' =>json_encode($file_name)\n        );\n\n        foreach ($dynamicReplaceVariables as $keyDynamic => $valueDynamic) {\n            $replaceVariablesJSON[$keyDynamic] = json_encode($valueDynamic);\n        }\n\n        foreach ($dynamicParamsVariables as $keyDynamic => $valueDynamic) {\n            $replaceVariablesJSON[$keyDynamic] = json_encode($valueDynamic);\n        }\n\n        if (isset($methodSettings['conditions']) && is_array($methodSettings['conditions']) && !empty($methodSettings['conditions'])) {\n            foreach ($methodSettings['conditions'] as $condition){\n\n                if (isset($replaceVariables[$condition['key']]) && $replaceVariables[$condition['key']] !== null) {\n                    $condition['key'] = $replaceVariables[$condition['key']];\n                    $validCondition = true;\n                } else {\n                    $validCondition = false;\n                }\n\n                if ($validCondition === true && isset($condition['success_condition']) && $condition['success_condition'] != '' && isset($condition['value']) && $condition['value'] != '') {\n                    if ( $condition['success_condition'] == 'eq' && !($condition['key'] == $condition['value'])) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'lt' && !($condition['key'] < $condition['value'])) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'lte' && !($condition['key'] <= $condition['value'])) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'neq' && !($condition['key'] != $condition['value'])) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'gte' && !($condition['key'] >= $condition['value'])) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'gt' && !($condition['key'] > $condition['value'])) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'like' && erLhcoreClassGenericBotWorkflow::checkPresence(explode(',',$condition['value']),$condition['key'],0) == false) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'notlike' && erLhcoreClassGenericBotWorkflow::checkPresence(explode(',',$condition['value']),$condition['key'],0) == true) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'contains' && strrpos($condition['value'],$condition['key']) === false) {\n                        $validCondition = false;\n                    }\n                }\n\n                if ($validCondition == false) {\n                     return array(\n                        'content' => 'Invalid conditions',\n                        'http_code' => 404,\n                        'http_data' => '',\n                        'content_2' => '',\n                        'content_3' =>  '',\n                        'content_4' => '',\n                        'content_5' =>  '',\n                        'content_6' => '',\n                        'http_error' => '',\n                        'content_raw' => '',\n                        'meta' => '',\n                        'id' => 0\n                    );\n                }\n            }\n        }\n\n        foreach ($paramsCustomer['chat']->additional_data_array as $keyItem => $addItem) {\n            if (!is_string($addItem) || (is_string($addItem) && ($addItem != ''))) {\n                if (isset($addItem['identifier'])) {\n                    if (is_string($addItem['value']) || is_numeric($addItem['value'])) {\n                        $replaceVariables['{{lhc.add.' . $addItem['identifier'] . '}}'] = $addItem['value'];\n                        $replaceVariablesJSON['{{lhc.add.' . $addItem['identifier'] . '}}'] = json_encode($addItem['value']);\n                    }\n                } else if (isset($addItem['key'])) {\n                    if (is_string($addItem['value']) || is_numeric($addItem['value'])) {\n                        $replaceVariables['{{lhc.add.' . $addItem['key'] . '}}'] = $addItem['value'];\n                        $replaceVariablesJSON['{{lhc.add.' . $addItem['key'] . '}}'] = json_encode($addItem['value']);\n                    }\n                }\n            }\n        }\n\n        foreach ($paramsCustomer['chat']->chat_variables_array as $keyItem => $addItem) {\n            if (is_string($addItem) || is_numeric($addItem)) {\n                $replaceVariables['{{lhc.var.' . $keyItem . '}}'] = $addItem;\n                $replaceVariablesJSON['{{lhc.var.' . $keyItem . '}}'] = json_encode($addItem);\n            }\n        }\n\n        $queryArgs = array();\n\n        if (isset($methodSettings['query']) && !empty($methodSettings['query'])) {\n            foreach ($methodSettings['query'] as $dataQuery) {\n                $queryArgs[$dataQuery['key']] = str_replace(array_keys($replaceVariables), array_values($replaceVariables), $dataQuery['value']);\n            }\n        }\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_TIMEOUT, (isset($methodSettings['max_execution_time']) && is_numeric($methodSettings['max_execution_time']) && $methodSettings['max_execution_time'] >= 1 && $methodSettings['max_execution_time'] <= 30) ? (int)$methodSettings['max_execution_time'] : 10);\n        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 5);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n\n        if (isset($methodSettings['method']) && ($methodSettings['method'] == 'PUT' || $methodSettings['method'] == 'DELETE')) {\n            curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $methodSettings['method']);\n        }\n\n        $headers = array();\n\n        if (isset($methodSettings['header']) && !empty($methodSettings['header'])) {\n            foreach ($methodSettings['header'] as $header) {\n                $headers[] = $header['key'] . ': ' . str_replace(array_keys($replaceVariables), array_values($replaceVariables), $header['value']);\n            }\n        }\n\n        if (isset($methodSettings['method']) && $methodSettings['method'] == 'POST') {\n            curl_setopt($ch, CURLOPT_POST, 1);\n        }\n\n        if (isset($methodSettings['authorization']) && $methodSettings['authorization'] == 'basicauth') {\n            curl_setopt($ch, CURLOPT_USERPWD, $methodSettings['auth_username'] . \":\" . $methodSettings['auth_password']);\n        } elseif (isset($methodSettings['authorization']) && $methodSettings['authorization'] == 'NTLMauth') {\n            curl_setopt($ch, CURLOPT_USERPWD, $methodSettings['auth_username'] . \":\" . $methodSettings['auth_password']);\n            curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_NTLM);\n        } elseif (isset($methodSettings['authorization']) && $methodSettings['authorization'] == 'bearer' && isset($methodSettings['auth_bearer']) && $methodSettings['auth_bearer'] != '') {\n            $headers[] = 'Authorization: Bearer ' . $methodSettings['auth_bearer'];\n        } else if (isset($methodSettings['authorization']) && $methodSettings['authorization'] == 'apikey') {\n            if ($methodSettings['api_key_location'] == 'header' && isset($methodSettings['auth_api_key_key']) && isset($methodSettings['auth_api_key_name'])) {\n                $headers[] = $methodSettings['auth_api_key_name'] . ': ' . $methodSettings['auth_api_key_key'];\n            } else if ($methodSettings['api_key_location'] == 'queryparams') {\n                $queryArgs[$methodSettings['auth_api_key_name']] = $methodSettings['auth_api_key_key'];\n            }\n        }\n\n        if (isset($methodSettings['userparams']) && !empty($methodSettings['userparams'])) {\n            foreach ($methodSettings['userparams'] as $userParam) {\n\n                $valueParam = '';\n\n                if (isset($paramsCustomer['action']['content']['rest_api_method_params'][$userParam['id']]) && !empty($paramsCustomer['action']['content']['rest_api_method_params'][$userParam['id']])) {\n                    $valueParam = $paramsCustomer['action']['content']['rest_api_method_params'][$userParam['id']];\n                }\n\n                if (!isset($userParam['location']) || $userParam['location'] == '') {\n                    $queryArgs[$userParam['key']] = $valueParam;\n                } elseif (isset($userParam['location']) && $userParam['location'] == 'post_param') {\n                    $postParams[$userParam['key']] = $valueParam;\n                } elseif (isset($userParam['location']) && $userParam['location'] == 'body_param') {\n                    $methodSettings['body_raw'] = str_replace('{{' . $userParam['key'] . '}}', json_encode($valueParam), $file_api === true ? $methodSettings['body_raw_file'] : $methodSettings['body_raw']);\n                }\n            }\n        }\n\n        if (isset($methodSettings['body_request_type']) && ($methodSettings['body_request_type'] == 'form-data' || $methodSettings['body_request_type'] == 'form-data-urlencoded')) {\n            if (isset($methodSettings['postparams']) && !empty($methodSettings['postparams'])) {\n                $postParams = array();\n                foreach ($methodSettings['postparams'] as $postParam) {\n                    $postParams[$postParam['key']] = str_replace(array_keys($replaceVariables), array_values($replaceVariables), $postParam['value']);\n                }\n\n                if ($methodSettings['body_request_type'] == 'form-data-urlencoded') {\n                    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postParams));\n                } else {\n                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postParams);\n                }\n            }\n\n            if ($methodSettings['body_request_type'] == 'form-data-urlencoded') {\n                $headers[] = 'Cache-Control: no-cache';\n                $headers[] = 'Content-Type: application/x-www-form-urlencoded';\n            }\n\n        } elseif (isset($methodSettings['body_request_type']) && $methodSettings['body_request_type'] == 'raw') {\n\n            $rawReplaceArray = array();\n            foreach ($replaceVariablesJSON as $keyVariable => $keyValue) {\n                $rawReplaceArray['raw_'.$keyVariable] = trim($keyValue,\"\\\"\");\n            }\n\n            $bodyPOST = str_replace(array_keys($rawReplaceArray), array_values($rawReplaceArray), $file_api === true ? $methodSettings['body_raw_file'] : $methodSettings['body_raw']);\n            $bodyPOST = str_replace(array_keys($replaceVariablesJSON), array_values($replaceVariablesJSON), $bodyPOST);\n            $bodyPOST = preg_replace('/{{lhc\\.(var|add)\\.(.*?)}}/','\"\"',$bodyPOST);\n\n            curl_setopt($ch, CURLOPT_POSTFIELDS, $bodyPOST);\n\n            if (isset($methodSettings['body_request_type_content'])) {\n                if ($methodSettings['body_request_type_content'] == 'json') {\n                    $headers[] = 'Content-Type: application/json';\n                } else if ($methodSettings['body_request_type_content'] == 'text') {\n                    $headers[] = 'Content-Type: text/plain';\n                } else if ($methodSettings['body_request_type_content'] == 'js') {\n                    $headers[] = 'Content-Type: application/javascript';\n                } else if ($methodSettings['body_request_type_content'] == 'appxml') {\n                    $headers[] = 'Content-Type: application/xml';\n                } else if ($methodSettings['body_request_type_content'] == 'textxml') {\n                    $headers[] = 'Content-Type: text/xml';\n                }else if ($methodSettings['body_request_type_content'] == 'texthtml') {\n                    $headers[] = 'Content-Type: text/html';\n                }\n            }\n        }\n\n        $queryArgsString = http_build_query($queryArgs);\n        $url = rtrim($host) . str_replace(array_keys($replaceVariables), array_values($replaceVariables), (isset($methodSettings['suburl']) ? $methodSettings['suburl'] : '')) . (!empty($queryArgsString) ? '?'.$queryArgsString : '');\n\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n        @curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);\n\n        $paramsRequest = [\n            'headers' => $headers,\n            'url' => $url,\n        ];\n\n        if (isset($postParams)) {\n            $paramsRequest['post'] = $postParams;\n        }\n\n        if (isset($bodyPOST)) {\n            $paramsRequest['body'] = $bodyPOST;\n        }\n\n        $commandResponse = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.rest_api_make_request', array(\n            'method_settings' => $methodSettings,\n            'params_customer' => $paramsCustomer,\n            'params_request' => $paramsRequest,\n            'url' => $url\n        ));\n\n        $overridden = false;\n\n        if (isset($commandResponse['processed']) && $commandResponse['processed'] == true) {\n            $content = $commandResponse['http_response'];\n            $http_error = $commandResponse['http_error'];\n            $httpcode = $commandResponse['http_code'];\n            $overridden = true;\n        } else {\n            $content = curl_exec($ch);\n            $http_error = '';\n        }\n\n        $http_data = json_encode($paramsRequest);\n\n        if ($overridden == false && curl_errno($ch)) {\n            $http_error = curl_error($ch);\n        }\n\n        if ($overridden == false) {\n            $httpcode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n        }\n\n        if (isset($methodSettings['output']) && !empty($methodSettings['output'])) {\n\n            $allOptional = true;\n\n            // First check is there any required to check combinations and disable others if so.\n            foreach ($methodSettings['output'] as $index => $outputCombination)\n            {\n                if (isset($paramsCustomer['action']['content']['rest_api_method_output'][$outputCombination['id'] . '_chk']) && $paramsCustomer['action']['content']['rest_api_method_output'][$outputCombination['id'] . '_chk'] == true) {\n                    $allOptional = false;\n                    break;\n                }\n            }\n\n            // Sort by priority, first we will check the ones with higher priority\n            usort($methodSettings['output'], function ($a, $b) {\n                return !(isset($a['output_priority']) && is_numeric($a['output_priority']) && (!isset($b['output_priority']) || $a['output_priority'] > $b['output_priority'])) ? 1 : 0;\n            });\n            \n            foreach ($methodSettings['output'] as $outputCombination)\n            {\n                if ($allOptional == false && (!isset($paramsCustomer['action']['content']['rest_api_method_output'][$outputCombination['id'] . '_chk']) || $paramsCustomer['action']['content']['rest_api_method_output'][$outputCombination['id'] . '_chk'] == false)) {\n                    // One of the conditions is checked, but not this one.\n                    continue;\n                }\n\n                // Verify HTTP Status code\n                if (!isset($outputCombination['success_header']) || $outputCombination['success_header'] == '' || in_array((string)$httpcode,explode(',',$outputCombination['success_header']))){\n\n                    if (isset($outputCombination['success_location']) && $outputCombination['success_location'] != '') {\n\n                        if (isset($outputCombination['format']) && $outputCombination['format'] == 'xml') {\n                            $contentJSON = json_decode(json_encode(simplexml_load_string($content)),true);\n                        } else {\n                            $contentJSON = json_decode($content, true);\n                        }\n\n                        $successLocation = self::extractAttribute($contentJSON, $outputCombination['success_location']);\n\n                        if ($successLocation['found'] === true) {\n\n                            $responseValueSub = array();\n                            for ($i = 2; $i <= 6; $i++) {\n                                if (isset($outputCombination['success_location_' . $i]) && $outputCombination['success_location_' . $i] != '') {\n                                    $successLocationNumbered = self::extractAttribute($contentJSON,$outputCombination['success_location_' . $i]);\n                                    if ($successLocationNumbered['found'] === true) {\n                                        $responseValueSub[$i] = $successLocationNumbered['value'];\n                                    }\n                                }\n                            }\n\n                            $responseValueCompare2 = $responseValueCompare = $responseValue = $successLocation['value'];\n\n                            // First condition\n                            if (isset($outputCombination['success_condition_val']) && !empty($outputCombination['success_condition_val'])) {\n                                $responseValueCompareLocation = self::extractAttribute($contentJSON, $outputCombination['success_condition_val']);\n                                if ($responseValueCompareLocation['found'] === true && !is_array($responseValueCompareLocation['value'])) {\n                                    $responseValueCompare = $responseValueCompareLocation['value'];\n                                } else {\n                                    // Attribute was not found\n                                    continue;\n                                }\n                            }\n\n                            // Second condition\n                            if (isset($outputCombination['success_condition_val_2']) && !empty($outputCombination['success_condition_val_2'])) {\n                                $responseValueCompareLocation = self::extractAttribute($contentJSON, $outputCombination['success_condition_val_2']);\n\n                                if ($responseValueCompareLocation['found'] === true && !is_array($responseValueCompareLocation['value'])) {\n                                    $responseValueCompare2 = $responseValueCompareLocation['value'];\n                                } else {\n                                    // Attribute was not found\n                                    continue;\n                                }\n                            }\n\n\n                        } else {\n                            continue; // Required attribute was not found\n                        }\n                    } else {\n                        $responseValueCompare2 = $responseValueCompare = $responseValue = $content;\n                    }\n\n                    foreach([   [\n                                    'success_compare_value' => 'success_compare_value',\n                                    'success_condition' => 'success_condition',\n                                    'live_value' => $responseValueCompare,\n                                ],\n                                [\n                                    'success_compare_value' => 'success_compare_value_2',\n                                    'success_condition' => 'success_condition_2',\n                                    'live_value' => $responseValueCompare2,\n                                ]\n                            ] as $attrCompare) {\n                                if (isset($outputCombination[$attrCompare['success_condition']]) && $outputCombination[$attrCompare['success_condition']] != '' && isset($outputCombination[$attrCompare['success_compare_value']]) && $outputCombination[$attrCompare['success_compare_value']] != '') {\n                                    if ( $outputCombination[$attrCompare['success_condition']] == 'eq' && !($attrCompare['live_value'] == $outputCombination[$attrCompare['success_compare_value']])) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'lt' && !($attrCompare['live_value'] < $outputCombination[$attrCompare['success_compare_value']])) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'lte' && !($attrCompare['live_value'] <= $outputCombination[$attrCompare['success_compare_value']])) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'neq' && !($attrCompare['live_value'] != $outputCombination[$attrCompare['success_compare_value']])) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'gte' && !($attrCompare['live_value'] >= $outputCombination[$attrCompare['success_compare_value']])) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'gt' && !($attrCompare['live_value'] > $outputCombination[$attrCompare['success_compare_value']])) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'like' && erLhcoreClassGenericBotWorkflow::checkPresence(explode(',',$outputCombination[$attrCompare['success_compare_value']]),$attrCompare['live_value'],0) == false) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'notlike' && erLhcoreClassGenericBotWorkflow::checkPresence(explode(',',$outputCombination[$attrCompare['success_compare_value']]),$attrCompare['live_value'],0) == true) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'contains' && strrpos($attrCompare['live_value'], $outputCombination[$attrCompare['success_compare_value']]) === false) {\n                                        continue 2;\n                                    }\n                                }\n                    }\n\n                    $meta = array();\n\n                    if (isset($outputCombination['success_location_meta']) && $outputCombination['success_location_meta'] != '') {\n                        $contentJSON = json_decode($content,true);\n                        $metaResponse = self::extractAttribute($contentJSON, $outputCombination['success_location_meta']);\n\n                        if ($metaResponse['found'] == true) {\n                            $meta = $metaResponse['value'];\n                        }\n                    }\n\n                    return array(\n                        'content' => $responseValue,\n                        'content_raw' => $content,\n                        'http_code' => $httpcode,\n                        'http_error' => $http_error,\n                        'http_data' => $http_data,\n                        'content_2' => (isset($responseValueSub[2]) ? $responseValueSub[2] : ''),\n                        'content_3' => (isset($responseValueSub[3]) ? $responseValueSub[3] : ''),\n                        'content_4' => (isset($responseValueSub[4]) ? $responseValueSub[4] : ''),\n                        'content_5' => (isset($responseValueSub[5]) ? $responseValueSub[5] : ''),\n                        'content_6' => (isset($responseValueSub[6]) ? $responseValueSub[6] : ''),\n                        'meta' => $meta,\n                        'id' => $outputCombination['id']);\n                }\n            }\n\n            // We did not found matching response. Return everything.\n            return array(\n                'content' => $content,\n                'content_raw' => $content,\n                'http_code' => $httpcode,\n                'http_error' => $http_error,\n                'http_data' => $http_data,\n                'content_2' => '',\n                'content_3' => '',\n                'content_4' => '',\n                'content_5' => '',\n                'content_6' => '',\n                'meta' => array()\n            );\n        }\n\n        return array(\n            'content' => $content,\n            'content_raw' => $content,\n            'http_code' => $httpcode,\n            'http_error' => $http_error,\n            'http_data' => $http_data,\n            'content_2' => '',\n            'content_3' => '',\n            'content_4' => '',\n            'content_5' => '',\n            'content_6' => '',\n            'meta' => array()\n        );\n    }\n\n    public static function extractDynamicParams($methodSettings, $params) {\n\n        $dynamicVariables = [];\n        $requiredVars = [];\n\n        $userData = array(\n            'dynamic_variables' => & $dynamicVariables,\n            'required_vars' => & $requiredVars,\n            'params' => $params,\n        );\n\n        array_walk_recursive($methodSettings, function ($item, $key, $userData) {\n\n            $matchesValues = [];\n            preg_match_all('~\\{\\{args\\.((?:[^\\{\\}\\}]++|(?R))*)\\}\\}~', $item,$matchesValues);\n\n            if (!empty($matchesValues[0])) {\n                foreach ($matchesValues[0] as $indexElement => $elementValue) {\n                    $valueAttribute = self::extractAttribute($userData['params'], $matchesValues[1][$indexElement], '.');\n                    $userData['dynamic_variables'][$elementValue] = $valueAttribute['found'] == true ? $valueAttribute['value'] : null;\n                }\n            }\n\n            $matchesValues = [];\n            preg_match_all('~\\{\\{args\\.((?:[^\\{\\}\\}]++|(?R))*)\\}\\}~', $key, $matchesValues);\n            if (!empty($matchesValues[0])) {\n                foreach ($matchesValues[0] as $indexElement => $elementValue) {\n                    $valueAttribute = self::extractAttribute($userData['params'], $matchesValues[1][$indexElement], '.');\n                    $userData['dynamic_variables'][$elementValue] = $valueAttribute['found'] == true ? $valueAttribute['value'] : null;\n                }\n            }\n\n        }, $userData);\n\n        return $userData['dynamic_variables'];\n    }\n\n    public static function extractDynamicVariables($methodSettings, $chat) {\n\n         $dynamicVariables = [];\n         $requiredVars = [];\n         \n         $userData = array(\n             'dynamic_variables' => & $dynamicVariables,\n             'required_vars' => & $requiredVars,\n             'chat' => $chat,\n         );\n         \n         array_walk_recursive($methodSettings, function ($item, $key, $userData) {\n            $matchesValues = [];\n            preg_match_all('~\\{\\{lhc\\.((?:[^\\{\\}\\}]++|(?R))*)\\}\\}~', $item,$matchesValues);\n\n            if (!empty($matchesValues[0])) {\n                foreach ($matchesValues[0] as $indexElement => $elementValue) {\n                    $userData['dynamic_variables'][$elementValue] = $userData['chat']->{$matchesValues[1][$indexElement]};\n                }\n            }\n\n            $matchesValues = [];\n            preg_match_all('~\\{\\{lhc\\.((?:[^\\{\\}\\}]++|(?R))*)\\}\\}~', $key, $matchesValues);\n                \n            if (!empty($matchesValues[0])) {\n                foreach ($matchesValues[0] as $indexElement => $elementValue) {\n                    $userData['dynamic_variables'][$elementValue] = $userData['chat']->{$matchesValues[1][$indexElement]};\n                }\n            }\n\n            // Detect does customer want's somewhere all messages\n            if (strpos($item,'{{msg_all_html}}') !== false && !in_array('{{msg_all_html}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_all_html}}';\n\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false,'sort' => 'id DESC', 'filter' => array('chat_id' => $userData['chat']->id))));\n\n                // Fetch chat messages\n                $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/full.tpl.php');\n                $tpl->set('chat', $userData['chat']);\n                $tpl->set('messages', $messages);\n                $userData['dynamic_variables']['{{msg_all_html}}'] = $tpl->fetch();\n            }\n\n            // Detect does customer want's somewhere all messages\n            if (strpos($item,'{{msg_items}}') !== false && !in_array('{{msg_items}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_items}}';\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false,'sort' => 'id DESC', 'filter' => array('chat_id' => $userData['chat']->id))));\n                $userData['dynamic_variables']['{{msg_items}}'] = $messages;\n            }\n\n            if (strpos($item,'{{msg_all}}') !== false && !in_array('{{msg_all}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_all}}';\n\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false,'sort' => 'id DESC', 'filter' => array('chat_id' => $userData['chat']->id))));\n                // Fetch chat messages\n                $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n                $tpl->set('chat', $userData['chat']);\n                $tpl->set('messages', $messages);\n\n                $userData['dynamic_variables']['{{msg_all}}'] = $tpl->fetch();\n            }\n\n            // All messages without [<date>] [<nick>] and system messages\n            if (strpos($item,'{{msg_all_content}}') !== false && !in_array('{{msg_all_content}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_all_content}}';\n\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false, 'filternot' => array('user_id' => -1), 'sort' => 'id DESC', 'filter' => array('chat_id' => $userData['chat']->id))));\n\n                // Fetch chat messages\n                $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n                $tpl->set('chat', $userData['chat']);\n                $tpl->set('messages', $messages);\n                $tpl->set('remove_meta', true);\n\n                $userData['dynamic_variables']['{{msg_all_content}}'] = $tpl->fetch();\n            }\n\n             // All messages since operator took over without [<date>] [<nick>] and system messages\n            if (strpos($item,'{{msg_all_since_transfer_content}}') !== false && !in_array('{{msg_all_since_transfer_content}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_all_since_transfer_content}}';\n\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false, 'filternot' => array('user_id' => -1), 'sort' => 'id DESC','filter', 'filtergte' => array('time' => $userData['chat']->pnd_time), 'filter' => array('chat_id' => $userData['chat']->id))));\n\n                // Fetch chat messages\n                $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n                $tpl->set('chat', $userData['chat']);\n                $tpl->set('messages', $messages);\n                $tpl->set('remove_meta', true);\n\n                $userData['dynamic_variables']['{{msg_all_since_transfer_content}}'] = $tpl->fetch();\n            }\n\n            // All operator messages from chat\n            if (strpos($item,'{{msg_all_op_msg_content}}') !== false && !in_array('{{msg_all_op_msg_content}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_all_op_msg_content}}';\n\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false, 'filtergt' => array('user_id' => 0), 'sort' => 'id DESC','filter' => array('chat_id' => $userData['chat']->id))));\n\n                // Fetch chat messages\n                $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n                $tpl->set('chat', $userData['chat']);\n                $tpl->set('messages', $messages);\n                $tpl->set('remove_meta', true);\n\n                $userData['dynamic_variables']['{{msg_all_op_msg_content}}'] = $tpl->fetch();\n            }\n\n            // All visitor messages without meta\n            if (strpos($item,'{{msg_all_vis_msg_content}}') !== false && !in_array('{{msg_all_vis_msg_content}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_all_vis_msg_content}}';\n\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false, 'sort' => 'id DESC','filter' => array('user_id' => 0, 'chat_id' => $userData['chat']->id))));\n\n                // Fetch chat messages\n                $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n                $tpl->set('chat', $userData['chat']);\n                $tpl->set('messages', $messages);\n                $tpl->set('remove_meta', true);\n\n                $userData['dynamic_variables']['{{msg_all_vis_msg_content}}'] = $tpl->fetch();\n            }\n\n            // All visitor messages since transfer without meta\n            if (strpos($item,'{{msg_all_vis_since_transfer_content}}') !== false && !in_array('{{msg_all_vis_since_transfer_content}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_all_vis_since_transfer_content}}';\n\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false, 'sort' => 'id DESC', 'filtergte' => array('time' => $userData['chat']->pnd_time), 'filter' => array('user_id' => 0, 'chat_id' => $userData['chat']->id))));\n\n                // Fetch chat messages\n                $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n                $tpl->set('chat', $userData['chat']);\n                $tpl->set('messages', $messages);\n                $tpl->set('remove_meta', true);\n\n                $userData['dynamic_variables']['{{msg_all_vis_since_transfer_content}}'] = $tpl->fetch();\n            }\n\n            // Detect does customer want's somewhere footprint\n            if (strpos($item,'{{footprint}}') !== false && !in_array('{{footprint}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{footprint}}';\n\n                $footprints = erLhcoreClassModelChatOnlineUserFootprint::getList(array('limit' => 25,'sort' => 'id DESC', 'filter' => array('chat_id' => $userData['chat']->id)));\n\n                $itemsFootprint = array();\n                foreach ($footprints as $footprint) {\n                    $itemsFootprint[] = $footprint->time_ago . ' | ' . $footprint->page;\n                }\n\n                $userData['dynamic_variables']['{{footprint}}'] = implode(\"\\n\",$itemsFootprint);\n            }\n\n        }, $userData);\n\n        return $userData['dynamic_variables'];\n    }\n\n    public static function extractAttribute($partData, $string, $separator = ':')\n    {\n\n        $stringParts = explode('^',$string);\n\n        $parts = explode($separator, $stringParts[0]);\n\n        $partFound = true;\n        foreach ($parts as $part) {\n\n            if (strpos($part,'[') === 0) {\n\n                $conditions = explode('=', str_replace(['[',']'],'',$part));\n\n                $foundConditions = false;\n                foreach ($partData as $partItem) {\n                    if ($partItem[$conditions[0]] == $conditions[1]) {\n                        $partData = $partItem;\n                        $foundConditions = true;\n                        continue;\n                    }\n                }\n\n                if ($foundConditions == false) {\n                    $partFound = false;\n                    break;\n                }\n\n            } else {\n                if (is_object($partData)) {\n                    $partDataValue = $partData->{$part};\n                    if (isset($partDataValue)) {\n                        $partData = $partDataValue;\n                    } else {\n                        $partFound = false;\n                        break;\n                    }\n                } else {\n                    if (isset($partData[$part]) ) {\n                        $partData = $partData[$part];\n                    } else {\n                        $partFound = false;\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (isset($stringParts[1])) {\n\n            $combinations = explode('==',$stringParts[1]);\n            $paramsOutput = [];\n\n            for ($i = 0; $i < count($combinations)/2; $i++) {\n                $paramsOutput[$combinations[$i * 2]] = $combinations[$i+1];\n            }\n\n            if (is_array($partData)) {\n                if (isset($paramsOutput['implode'])) {\n                    $output = \"\";\n                    foreach ($partData as $partDataItem) {\n                        $output .= (strpos($paramsOutput['implode'],'{item}') === false ? (string)$partDataItem : '').str_replace([\"{n}\",\"{item}\"],[\"\\n\",(string)$partDataItem],$paramsOutput['implode']);\n                    }\n                    $partData = trim($output);\n                }\n            }\n        }\n\n        return array('found' => $partFound, 'value' => $partData);\n    }\n\n}\n\n?>\n", "<?php\n\nclass erLhcoreClassRestAPIHandler\n{\n    public static function executeRequest(erLhAbstractModelRestAPIKeyRemote $apiKey, $function, $params = array(), $uparams = array(), $method = 'GET', $manualAppend = '')\n    {\n        $ch = curl_init();\n        $headers = array('Accept' => 'application/json');\n\n        $uparamsArg = '';\n\n        if (!empty($uparams) && is_array($uparams)) {\n            $parts = array();\n            foreach ($uparams as $param => $value) {\n                $parts[] = '/('.$param .')/'.$value;\n            }\n            $uparamsArg = implode('', $parts);\n\n        }\n\n        $requestArgs = ($method == 'GET') ? '?' .http_build_query($params) : '';\n\n        if ($method == 'POST') {\n            curl_setopt($ch,CURLOPT_POST,1);\n            curl_setopt($ch,CURLOPT_POSTFIELDS,$params);\n        }\n\n        curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);\n        curl_setopt($ch, CURLOPT_USERPWD, $apiKey->username . ':' . $apiKey->api_key);\n        curl_setopt($ch, CURLOPT_URL, $apiKey->host . $function . $manualAppend . $uparamsArg . $requestArgs);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_USERAGENT,'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.13) Gecko/20080311 Firefox/2.0.0.13');\n        curl_setopt($ch, CURLOPT_TIMEOUT, 5);\n        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT , 5);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n        @curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);\n        $content = curl_exec($ch);\n\n        return $content;\n    }\n    \n    public static function getHeaders()\n    {\n        if (! function_exists('getallheaders')) {\n            if (! is_array($_SERVER)) {\n                return array();\n            }\n            \n            $headers = array();\n            foreach ($_SERVER as $name => $value) {\n                if (substr($name, 0, 5) == 'HTTP_') {\n                    $headers[str_replace(' ', '-', ucwords(strtolower(str_replace('_', ' ', substr($name, 5)))))] = $value;\n                }\n            }\n            \n            return $headers;\n        } else {\n            return getallheaders();\n        }\n    }\n\n    public static function getRequestMethod()\n    {\n        if (isset($_SERVER['REQUEST_METHOD']) && $_SERVER['REQUEST_METHOD'] != '') {\n            return $_SERVER['REQUEST_METHOD'];\n        }\n\n        return false;\n    }\n\n    public static function setHeaders($content = 'Content-Type: application/json')\n    {\n        header('Access-Control-Allow-Origin: *');\n        header('Access-Control-Allow-Credentials: true');\n        header('Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, API-Key, Authorization');\n        header($content);\n        self::setOptionHeaders();\n    }\n\n    public static function setOptionHeaders(){\n        if ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {\n\n            if (isset($_SERVER['HTTP_ACCESS_CONTROL_REQUEST_METHOD']))\n                // may also be using PUT, PATCH, HEAD etc\n                header(\"Access-Control-Allow-Methods: GET, POST, OPTIONS, PUT, DELETE\");\n\n            if (isset($_SERVER['HTTP_ACCESS_CONTROL_REQUEST_HEADERS']))\n                header(\"Access-Control-Allow-Headers: {$_SERVER['HTTP_ACCESS_CONTROL_REQUEST_HEADERS']}\");\n\n            header(\"Access-Control-Max-Age: 1728000\");\n\n            exit(0);\n        }\n    }\n\n    public static function validateRequest()\n    {\n        self::setHeaders();\n\n        $headers = self::getHeaders();\n\n        $authorization = isset($headers['Authorization']) ? $headers['Authorization'] : (isset($headers['authorization']) ? $headers['authorization'] : (isset($_SERVER['REDIRECT_HTTP_AUTHORIZATION']) ? $_SERVER['REDIRECT_HTTP_AUTHORIZATION'] : null));\n\n        if ($authorization !== null) {\n            \n            $dataAuthorisation = explode(' ', $authorization);\n            $apiData = explode(':', base64_decode($dataAuthorisation[1]));\n            \n            if (count($apiData) != 2) {\n                throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'Authorization failed!'));\n            }\n\n            // There is no current workflow in progress\n            $handler = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('rest_api.validate_request', array(\n                'headers' => $headers,\n            ));\n\n            if ($handler !== false) {\n                $apiKey = $handler['api_key'];\n            } else {\n                $apiKey = erLhAbstractModelRestAPIKey::findOne(array(\n                    'enable_sql_cache' => true,\n                    'filter' => array(\n                        'active' => 1,\n                        'api_key' => $apiData[1]\n                    )\n                ));\n            }\n\n            $authorised = false;\n            $user = null;\n\n            if (!($apiKey instanceof erLhAbstractModelRestAPIKey)) {\n\n                $disabledByUser = erConfigClassLhConfig::getInstance()->getSetting('site', 'disable_rest_api_by_user',false);\n\n                // Rest API disabled by username and only by Rest API key's can be used\n                if ($disabledByUser === true){\n                    throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('user/login','Authorization failed!'));\n                }\n\n                $user = erLhcoreClassModelUser::findOne(array('filter' => array('username' => $apiData[0])));\n                if (!($user instanceof erLhcoreClassModelUser) || !password_verify($apiData[1], $user->password)) {\n\n                    if ($user instanceof erLhcoreClassModelUser) {\n                        erLhcoreClassModelUserLogin::logUserAction(array(\n                            'type' => erLhcoreClassModelUserLogin::TYPE_LOGIN_ATTEMPT,\n                            'user_id' => $user->id,\n                            'msg' => erTranslationClassLhTranslation::getInstance()->getTranslation('user/login','Failed login. API')\n                        ));\n\n                        erLhcoreClassModelUserLogin::disableIfRequired($user);\n                    }\n\n                    throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'Authorization failed!'));\n                } else {\n                    if (!$user->hasAccessTo('lhrestapi','use_direct_logins')){\n                        throw new Exception(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'You do not have permission to use REST API directly. \"lhrestapi\", \"use_direct_logins\" is missing!')));\n                    } else {\n                        $authorised = true;\n                    }\n                }\n            }\n\n            if ($authorised === false && $apiKey->user->username != $apiData[0]) {\n                throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'Authorization failed!'));\n            }\n\n            if ($user instanceof erLhcoreClassModelUser){\n                self::$apiKey = new erLhAbstractModelRestAPIKey();\n                self::$apiKey->user = $user;\n            } else {\n\n                if ($apiKey->ip_restrictions != '' && !erLhcoreClassIPDetect::isIgnored(erLhcoreClassIPDetect::getIP(),explode(',',$apiKey->ip_restrictions))) {\n                    throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'Rest API IP restrictions applies! '). erLhcoreClassIPDetect::getIP());\n                }\n\n                // API Key\n                self::$apiKey = $apiKey;\n            }\n\n            if (isset($_GET['update_activity'])) {\n                erLhcoreClassUserDep::updateLastActivityByUser(self::$apiKey->user->id, time());\n            }\n\n        } else {\n            throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'Authorization header is missing!'));\n        }\n\n        return true;\n    }\n\n    public static function formatFilter($validAttributes)\n    {\n        $definition = array();\n        \n        foreach ($validAttributes as $attributeType => $attributes) {\n            foreach ($attributes as $userAttribute => $definitionField) {\n                $definition[$userAttribute] = $definitionField['validator'];\n            }\n        }\n        \n        $form = new ezcInputForm(INPUT_GET, $definition);\n        $filter = array();\n        \n        foreach ($validAttributes as $attributeType => $attributes) {\n            foreach ($attributes as $userAttribute => $definitionField) {\n                if ($form->hasValidData($userAttribute)) {\n                    if ($definitionField['type'] == 'filter') {\n                        $filter['filter'][$definitionField['field']] = $form->$userAttribute;\n                    } else if ($definitionField['type'] == 'filtergt') {\n                        $filter['filtergt'][$definitionField['field']] = $form->$userAttribute;\n                    } elseif ($definitionField['type'] == 'general') {\n                        $filter[$definitionField['field']] = $form->$userAttribute;\n                    }\n                }\n            }\n        }\n        \n        $filter['limit'] = isset($filter['limit']) ? $filter['limit'] : 20;\n        $filter['offset'] = isset($filter['offset']) ? $filter['offset'] : 0;\n        $filter['smart_select'] = true;\n        \n        return $filter;\n    }\n\n    public static function validateCampaignConversionList()\n    {\n        $validAttributes = array(\n            'int' => array(\n                'department_id' => array(\n                    'type' => 'filter',\n                    'field' => 'department_id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'campaign_id' => array(\n                    'type' => 'filter',\n                    'field' => 'campaign_id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'invitation_id' => array(\n                    'type' => 'filter',\n                    'field' => 'invitation_id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'chat_id' => array(\n                    'type' => 'filter',\n                    'field' => 'chat_id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'ctime' => array(\n                    'type' => 'filtergt',\n                    'field' => 'ctime',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'con_time' => array(\n                    'type' => 'filtergt',\n                    'field' => 'con_time',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'id' => array(\n                    'type' => 'filtergt',\n                    'field' => 'id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'limit' => array(\n                    'type' => 'general',\n                    'field' => 'limit',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'offset' => array(\n                    'type' => 'general',\n                    'field' => 'offset',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                )\n            )\n        );\n\n        $filter = self::formatFilter($validAttributes);\n\n        if (isset($_GET['invitation_status']) && $_GET['invitation_status'] != '') {\n            $statusLiteral = explode(',',$_GET['invitation_status']);\n            $statusMap = array(\n                'send' => erLhAbstractModelProactiveChatCampaignConversion::INV_SEND,\n                'shown' => erLhAbstractModelProactiveChatCampaignConversion::INV_SHOWN,\n                'seen' => erLhAbstractModelProactiveChatCampaignConversion::INV_SEEN,\n                'chat_started' => erLhAbstractModelProactiveChatCampaignConversion::INV_CHAT_STARTED\n            );\n\n            $statuses = array();\n            foreach ($statusLiteral as $item){\n                if (isset($statusMap[$item])){\n                    $statuses[] = $statusMap[$item];\n                }\n            }\n\n            if (!empty($statuses)) {\n                $filter['filterin']['invitation_status'] = $statuses;\n            }\n        }\n        // 0 - PC, 1 - mobile, 2 - tablet\n        if (isset($_GET['device_type']) && $_GET['device_type'] != '') {\n            $statusLiteral = explode(',',$_GET['device_type']);\n            $statusMap = array(\n                'pc' => 0,\n                'mobile' => 1,\n                'tablet' => 2,\n            );\n\n            $statuses = array();\n            foreach ($statusLiteral as $item){\n                if (isset($statusMap[$item])){\n                    $statuses[] = $statusMap[$item];\n                }\n            }\n\n            if (!empty($statuses)) {\n                $filter['filterin']['device_type'] = $statuses;\n            }\n        }\n\n        if (isset($_GET['invitation_type']) && $_GET['invitation_type'] != '') {\n            $statusLiteral = $_GET['invitation_type'];\n            $statusMap = array(\n                'operator' => 2,\n                'system' => 1,\n            );\n\n            if (isset($statusMap[$statusLiteral])){\n                $filter['filter']['invitation_type'] = $statusMap[$statusLiteral];\n            }\n        }\n\n        $filter['sort'] = 'id ' . ((isset($_GET['sort']) && $_GET['sort'] == 'desc') ? 'DESC' : 'ASC');\n\n        // Get chats list\n        $campaignsConversions = erLhAbstractModelProactiveChatCampaignConversion::getList($filter);\n\n        // Get chats count\n        $chatsCount = erLhAbstractModelProactiveChatCampaignConversion::getCount($filter);\n\n        if (isset($_GET['include_invitation']) && $_GET['include_invitation'] == 'true') {\n            erLhcoreClassChat::prefillObjects($campaignsConversions,array(\n                array(\n                    'invitation_id',\n                    'invitation',\n                    'erLhAbstractModelProactiveChatInvitation::getList'\n                ),\n            ));\n        }\n\n        if (isset($_GET['include_invitation']) && $_GET['include_invitation'] == 'true') {\n            erLhcoreClassChat::prefillObjects($campaignsConversions,array(\n                array(\n                    'invitation_id',\n                    'invitation',\n                    'erLhAbstractModelProactiveChatInvitation::getList'\n                ),\n            ));\n        }\n\n        if (isset($_GET['include_onlinevisitor']) && $_GET['include_onlinevisitor'] == 'true') {\n            erLhcoreClassChat::prefillObjects($campaignsConversions,array(\n                array(\n                    'vid_id',\n                    'vid',\n                    'erLhcoreClassModelChatOnlineUser::getList'\n                ),\n            ));\n        }\n\n        if (isset($_GET['include_department']) && $_GET['include_department'] == 'true') {\n            erLhcoreClassChat::prefillObjects($campaignsConversions,array(\n                array(\n                    'department_id',\n                    'department',\n                    'erLhcoreClassModelDepartament::getList'\n                ),\n            ));\n        }\n\n        // Chats list\n        return array(\n            'list' => array_values($campaignsConversions),\n            'list_count' => $chatsCount,\n            'error' => false\n        );\n    }\n\n    public static function getChatListFilter()\n    {\n        $validAttributes = array(\n            'int' => array(\n                'departament_id' => array(\n                    'type' => 'filter',\n                    'field' => 'dep_id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'user_id' => array(\n                    'type' => 'filter',\n                    'field' => 'user_id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'online_user_id' => array(\n                    'type' => 'filter',\n                    'field' => 'online_user_id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'phone' => array(\n                    'type' => 'filter',\n                    'field' => 'phone',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw')\n                ),\n                'email' => array(\n                    'type' => 'filter',\n                    'field' => 'email',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw')\n                ),\n                'nick' => array(\n                    'type' => 'filter',\n                    'field' => 'nick',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw')\n                ),\n                'status' => array(\n                    'type' => 'filter',\n                    'field' => 'status',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'limit' => array(\n                    'type' => 'general',\n                    'field' => 'limit',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'offset' => array(\n                    'type' => 'general',\n                    'field' => 'offset',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                )\n            )\n        );\n\n        $filter = self::formatFilter($validAttributes);\n\n        if (isset($_GET['filtergt']['id']) && is_numeric($_GET['filtergt']['id'])) {\n            $filter['filtergt']['id'] = (int)$_GET['filtergt']['id'];\n        }\n\n        if (isset($_GET['departament_ids'])) {\n            $idDep = explode(',',$_GET['departament_ids']);\n            erLhcoreClassChat::validateFilterIn($idDep);\n            if (!empty($idDep)){\n                $filter['filterin']['dep_id'] = $idDep;\n            }\n        }\n\n        if (isset($_GET['user_ids'])) {\n            $uidDep = explode(',',$_GET['user_ids']);\n            erLhcoreClassChat::validateFilterIn($uidDep);\n            if (!empty($uidDep)){\n                $filter['filterin']['user_id'] = $uidDep;\n            }\n        }\n\n        if (isset($_GET['status_ids'])) {\n            $statusIds = explode(',',$_GET['status_ids']);\n            erLhcoreClassChat::validateFilterIn($statusIds);\n            if (!empty($statusIds)){\n                $filter['filterin']['status'] = $statusIds;\n            }\n        }\n\n        if (isset($_GET['vid']) && !empty($_GET['vid'])) {\n            $onlineUser = erLhcoreClassModelChatOnlineUser::fetchByVid($_GET['vid']);\n            if ($onlineUser instanceof erLhcoreClassModelChatOnlineUser) {\n                $filter['filter']['online_user_id'] = $onlineUser->id;\n            } else {\n                $filter['filter']['online_user_id'] = -1;\n            }\n        }\n\n        if (isset($_GET['departament_groups_ids'])) {\n            $idDep = explode(',',$_GET['departament_groups_ids']);\n            erLhcoreClassChat::validateFilterIn($idDep);\n            if (!empty($idDep)){\n                $groups = erLhcoreClassModelDepartamentGroup::getList(array('filterin' => array('id' => $idDep)));\n                foreach ($groups as $group) {\n                    $depIds = $group->departments_ids;\n                    if (!empty($depIds)) {\n                        if (isset($filter['filterin']['dep_id'])) {\n                            $filter['filterin']['dep_id'] = array_merge($filter['filterin']['dep_id'], $depIds);\n                        } else {\n                            $filter['filterin']['dep_id'] = $depIds;\n                        }\n                    }\n                }\n            }\n        }\n\n        if (isset($_GET['bot_ids'])) {\n            $botIds = explode(',',$_GET['bot_ids']);\n            erLhcoreClassChat::validateFilterIn($botIds);\n            if (!empty($botIds)) {\n                $filter['filterin']['gbot_id'] = $botIds;\n            }\n        }\n\n        if (isset($_GET['id_gt']) && is_numeric($_GET['id_gt'])) {\n            $filter['filtergt']['id'] = (int)$_GET['id_gt'];\n        }\n\n        if (isset($_GET['time_gt']) && is_numeric($_GET['time_gt'])) {\n            $filter['filtergt']['time'] = (int)$_GET['time_gt'];\n        }\n\n        if (isset($_GET['time_lt']) && is_numeric($_GET['time_lt'])) {\n            $filter['filterlt']['time'] = (int)$_GET['time_lt'];\n        }\n\n        if (isset($_GET['delay']) && is_numeric($_GET['delay'])) {\n            $filter['filterlte']['time'] = time()-(int)$_GET['delay'];\n        }\n\n        if (isset($_GET['last_user_msg_time_gt']) && is_numeric($_GET['last_user_msg_time_gt'])) {\n            $filter['filtergt']['last_user_msg_time'] = (int)$_GET['last_user_msg_time_gt'];\n        }\n\n        if (isset($_GET['has_operator']) && $_GET['has_operator'] == 'true') {\n            $filter['filtergt']['user_id'] = 0;\n        } elseif (isset($_GET['has_operator']) && $_GET['has_operator'] == 'false') {\n            $filter['filter']['user_id'] = 0;\n        }\n\n        if (isset($_GET['had_bot']) && $_GET['had_bot'] == 'true') {\n            $filter['filtergt']['gbot_id'] = 0;\n        } elseif (isset($_GET['had_bot']) && $_GET['had_bot'] == 'false') {\n            $filter['filter']['gbot_id'] = 0;\n        }\n\n        $groupFields = array();\n\n        if (isset($_GET['group_by_nick']) && $_GET['group_by_nick'] == 'true') {\n            $groupFields[] = '`nick`';\n        }\n\n        if (isset($_GET['group_by_phone']) && $_GET['group_by_phone'] == 'true') {\n            $groupFields[] = '`phone`';\n        }\n\n        if (isset($_GET['group_by_email']) && $_GET['group_by_email'] == 'true') {\n            $groupFields[] = '`email`';\n        }\n\n        if (!empty($groupFields)) {\n            $filter['group'] = implode(', ', $groupFields);\n        }\n\n        $limitation = self::getLimitation();\n\n        // Does not have any assigned department\n        if ($limitation === false) {\n            return array(\n                'list' => array(),\n                'list_count' => 0\n            );\n        }\n\n        if ($limitation !== true) {\n            $filter['customfilter'][] = $limitation;\n        }\n\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('restapi.chats_filter', array('filter' => & $filter));\n\n        return $filter;\n    }\n\n    public static function validateChatListCount()\n    {\n        $filter = self::getChatListFilter();\n\n        if (isset($filter['limit'])) {\n            unset($filter['limit']);\n        }\n\n        // Get chats count\n        $chatsCount = erLhcoreClassModelChat::getCount($filter);\n\n        // Chats list\n        return array(\n            'list_count' => $chatsCount,\n            'error' => false\n        );\n    }\n    /**\n     * Chat's list\n     */\n    public static function validateChatList()\n    {\n\n        $filter = self::getChatListFilter();\n        \n        // Get chats list\n        $chats = erLhcoreClassModelChat::getList($filter);\n        \n        // Get chats count\n        $chatsCount = erLhcoreClassModelChat::getCount($filter);\n\n        // Allow extensions append custom field\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.restapi_chats',array('list' => & $chats));\n\n        if (isset($_GET['include_messages']) && $_GET['include_messages'] == 'true' && !empty($chats)) {\n            $messages = erLhcoreClassModelmsg::getList(array('limit' => 100000,'sort' => 'id ASC','filterin' => array('chat_id' => array_keys($chats))));\n            foreach ($messages as $message) {\n                if (!is_array($chats[$message->chat_id]->messages)) {\n                    $chats[$message->chat_id]->messages = array();\n                }\n\n                if (isset($_GET['meta_parse']) && ($_GET['meta_parse'] == 'true' && $_GET['meta_parse'] == '1') && $message->msg == '') {\n                    $metaMessage = $message->meta_msg_array;\n                    if (is_array($metaMessage) && isset($metaMessage['content']) && is_array($metaMessage['content'])) {\n                        if (isset($metaMessage['content']['text_conditional']['full_op'])) {\n                            $message->msg = trim(preg_replace('/\\[button_action=not_insult\\](.*)\\[\\/button_action\\]/is','',$metaMessage['content']['text_conditional']['full_op']));\n                            unset($message->meta_msg_array);\n                        }\n                    }\n                }\n\n                $chats[$message->chat_id]->messages[] = $message;\n            }\n        }\n\n         if (isset($_GET['include_survey']) && $_GET['include_survey'] == 'true' && !empty($chats)) {\n             $filledSurveys = erLhAbstractModelSurveyItem::getList(array('limit' => 100000,'sort' => 'id ASC','filterin' => array('chat_id' => array_keys($chats))));\n             foreach ($filledSurveys as $filledSurvey) {\n                 $chats[$filledSurvey->chat_id]->survey = $filledSurvey;\n             }\n         }\n\n        $prefillFields = array();\n\n        if (isset($_GET['prefill_fields'])){\n            $prefillFields = explode(',',str_replace(' ','',$_GET['prefill_fields']));\n        }\n\n        $ignoreFields = array();\n        if (isset($_GET['ignore_fields'])){\n            $ignoreFields = explode(',',str_replace(' ','',$_GET['ignore_fields']));\n        }\n\n        // Option to have department_groups attribute listed in response\n        if (isset($_GET['department_groups']) && $_GET['department_groups'] == 'true') {\n            $departments = array();\n            foreach ($chats as $chat) {\n                $departments[] = $chat->dep_id;\n            }\n\n            $departments = array_unique($departments);\n\n            $depMembersItems = array();\n\n            if (!empty($departments)) {\n                $depMembers = erLhcoreClassModelDepartamentGroupMember::getList(array('filterin' => array('dep_id' => $departments)));\n                foreach ($depMembers as $depMember) {\n                    $depMembersItems[$depMember->dep_id][] = $depMember->dep_group_id;\n                }\n            }\n\n            foreach ($chats as $index => $chat) {\n                $chats[$index]->department_groups = isset($depMembersItems[$chat->dep_id]) ? $depMembersItems[$chat->dep_id] : array();\n            }\n        }\n\n        if (isset($_GET['include_department']) && $_GET['include_department'] == 'true') {\n            erLhcoreClassChat::prefillObjects($chats,array(\n                array(\n                    'dep_id',\n                    'department',\n                    'erLhcoreClassModelDepartament::getList'\n                ),\n            ));\n        }\n\n        if (in_array('link',$prefillFields)) {\n            foreach ($chats as $index => $chat) {\n                $chats[$index]->link = erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurl('user/login').'/(r)/'.rawurlencode(base64_encode('chat/single/'.$chat->id));\n            }\n        }\n\n        if (!empty($chats) && in_array('subject',$prefillFields)) {\n            $assignedSubjects = erLhAbstractModelSubjectChat::getList(['sort' => 'id ASC', 'limit' => false,'filterin' => ['chat_id' => array_keys($chats)]]);\n            foreach ($assignedSubjects as $chatSubject) {\n                if (!isset($chats[$chatSubject->chat_id]->subjects)){\n                    $chats[$chatSubject->chat_id]->subject = [];\n                }\n                $chats[$chatSubject->chat_id]->subject[] = $chatSubject->subject;\n            }\n        }\n\n        if (!empty($chats) && in_array('messages_statistic',$prefillFields)) {\n            foreach ($chats as $index => $chat) {\n                $messages_statistic = [];\n                erLhcoreClassChatExport::messagesStatistic($messages_statistic, $chat);\n                $chats[$index]->messages_statistic = [\n                    'total_messages' => ($messages_statistic[0] == 'None' ? null : (float)$messages_statistic[0]),\n                    'visitor_messages' =>  ($messages_statistic[1] == 'None' ? null : (float)$messages_statistic[1]),\n                    'bot_messages' =>  ($messages_statistic[2] == 'None' ? null : (float)$messages_statistic[2]),\n                    'operator_messages' =>  ($messages_statistic[3] == 'None' ? null : (float)$messages_statistic[3]),\n                    'system_messages' =>  ($messages_statistic[4] == 'None' ? null : (float)$messages_statistic[4]),\n                    'visitor_messages_to_bot' =>  ($messages_statistic[5] == 'None' ? null : (float)$messages_statistic[5]),\n                    'visitor_messages_to_operator' =>  ($messages_statistic[6] == 'None' ? null : (float)$messages_statistic[6]),\n                    'max_agent_response_time' =>  ($messages_statistic[7] == 'None' ? null : (float)$messages_statistic[7]),\n                    'max_bot_response_time' =>  ($messages_statistic[8] == 'None' ? null : (float)$messages_statistic[8]),\n                    'avg_agent_response_time' => ($messages_statistic[9] == 'None' ? null : (float)$messages_statistic[9]),\n                    'avg_bot_response_time' => ($messages_statistic[10] == 'None' ? null : (float)$messages_statistic[10]),\n                    'first_agent_response_time' => ($messages_statistic[11] == 'None' ? null : (float)$messages_statistic[11]),\n                    'first_bot_response_time' => ($messages_statistic[12] == 'None' ? null : (float)$messages_statistic[12]),\n                    'wait_time_till_first_operator_msg' => ($messages_statistic[13] == 'None' ? null : (float)$messages_statistic[13]),\n                ];\n            }\n        }\n\n        if (!empty($chats) && in_array('chat_actions',$prefillFields)) {\n            $chatActions = erLhcoreClassModelChatAction::getList(['sort' => 'id ASC', 'limit' => false,'filterin' => ['chat_id' => array_keys($chats)]]);\n            foreach ($chatActions as $chatAction) {\n                if (!isset($chats[$chatAction->chat_id]->chat_actions)){\n                    $chats[$chatAction->chat_id]->chat_actions = [];\n                }\n                $chatAction->body_array;\n                $chats[$chatAction->chat_id]->chat_actions[] = $chatAction;\n            }\n        }\n\n        if (!empty($prefillFields) || !empty($ignoreFields)) {\n            erLhcoreClassChat::prefillGetAttributes($chats, $prefillFields, $ignoreFields, array('clean_ignore' => true, 'do_not_clean' => true));\n        }\n\n        // Chats list\n        return array(\n            'list' => array_values($chats),\n            'list_count' => $chatsCount,\n            'error' => false\n        );\n    }\n\n    public static function getLimitation($tableName = 'lh_chat')\n    {\n        if (self::$apiKey->user->all_departments == 0) {\n            $userDepartaments = erLhcoreClassUserDep::getUserDepartaments(self::$apiKey->user->id, self::$apiKey->user->cache_version);\n            \n            if (count($userDepartaments) == 0)\n                return false;\n            \n            $LimitationDepartament = '(' . $tableName . '.dep_id IN (' . implode(',', $userDepartaments) . '))';\n            \n            return $LimitationDepartament;\n        }\n        \n        return true;\n    }\n\n    /**\n     * \n     * @param erLhcoreClassModelChat $chat\n     * \n     * @return boolean\n     */\n    public static function hasAccessToRead(erLhcoreClassModelChat $chat)\n    {            \n        if ( self::$apiKey->user->all_departments == 0 ) {\n      \n            if ($chat->user_id == self::$apiKey->user->id) return true;\n    \n            $userDepartaments = erLhcoreClassUserDep::getUserDepartaments(self::$apiKey->user->id, self::$apiKey->user->cache_version);\n    \n            if (count($userDepartaments) == 0) return false;\n                \n            if (in_array($chat->dep_id,$userDepartaments)) {\n                                   \n                if (self::hasAccessTo('lhchat','allowopenremotechat') == true || $chat->status == erLhcoreClassModelChat::STATUS_OPERATORS_CHAT){\n                    return true;\n                } elseif ($chat->user_id == 0 || $chat->user_id == self::$apiKey->user->id) {\n                    return true;\n                }\n    \n                return false;\n            }\n    \n            return false;\n        }\n    \n        return true;\n    }\n\n    public static function hasAccessToWrite($chat)\n    {\n        $dep = erLhcoreClassUserDep::getUserReadDepartments(self::$apiKey->user->id, self::$apiKey->user->cache_version);\n        return !in_array($chat->dep_id, $dep);\n    }\n\n    public static function hasAccessTo($module, $functions, $returnLimitation = false)\n    {\n        $AccessArray = erLhcoreClassRole::accessArrayByUserID( self::$apiKey->user->id );\n\n        // Global rights\n        if (isset($AccessArray['*']['*']) || isset($AccessArray[$module]['*']))\n        {\n            if ($returnLimitation === false) {\n                return true;\n            } elseif (isset($AccessArray[$module]['*']) && !is_bool($AccessArray[$module]['*'])) {\n                return $AccessArray[$module]['*'];\n            } elseif ($AccessArray['*']['*'] && !is_bool($AccessArray['*']['*'])) {\n                return $AccessArray['*']['*'];\n            } else {\n                return true;\n            }\n        }\n\n        // Provided rights have to be set\n        if (is_array($functions))\n        {\n            foreach ($functions as $function)\n            {\n                // Missing one of provided right\n                if (!isset($AccessArray[$module][$function])) return false;\n            }\n\n        } else {\n            if (!isset($AccessArray[$module][$functions])) {\n                return false;\n            } elseif (isset($AccessArray[$module][$functions]) && $returnLimitation === true && !is_bool($AccessArray[$module][$functions])) {\n                return $AccessArray[$module][$functions];\n            }\n        }\n\n        return true;\n    }\n\n    public static function getUserId()\n    {\n        return self::$apiKey->user->id;\n    }\n\n    public static function getUser()\n    {\n        return self::$apiKey->user;\n    }\n\n    /*\n     * Departaments\n     */\n    public static function validateDepartaments()\n    {\n        $departaments = erLhcoreClassModelDepartament::getList();\n        $departamentsCount = erLhcoreClassModelDepartament::getCount();\n        \n        // Chats list\n        return array(\n            'list' => array_values($departaments),\n            'list_count' => $departamentsCount,\n            'error' => false\n        );\n    }\n\n    /**\n     * php array to xml conversion even for nested data\n     *\n     * @link http://stackoverflow.com/q/14136714/367456\n     * @see http://stackoverflow.com/a/14143759/367456 for description\n     * @author hakre <http://hakre.wordpress.com/credits>\n     */\n    public static function formatXML($data)\n    {\n        $createArrayImporter = function (SimpleXMLElement $subject) {\n            $add = function (SimpleXMLElement $subject, $key, $value) use (&$add) {\n                \n                $addChildCdata = function ($name, $value = NULL, & $parent) {\n                    $new_child = $parent->addChild($name);\n                \n                    if ($new_child !== NULL) {\n                        $node = dom_import_simplexml($new_child);\n                        $no   = $node->ownerDocument;\n                        $node->appendChild($no->createCDATASection($value));\n                    }\n                \n                    return $new_child;\n                };\n                \n                $hasKey    = is_string($key);\n                $isString  = is_string($value) || is_numeric($value);\n                $isArray   = is_array($value);\n                $isIndexed = $isArray && count($value) > 1 && array_keys($value) === range(0, count($value) - 1);\n                $isKeyed   = $isArray && count($value) && !$isIndexed;\n                switch (true) {\n                    case $isString && $hasKey:\n                                                \n                        if (is_numeric($value) || empty($value)) {\n                            return $subject->addChild($key, $value);\n                        } else {\n                            return $addChildCdata($key, $value, $subject);\n                        }\n                        \n                    case $isIndexed && $hasKey:\n                        foreach ($value as $oneof_value) {\n                            $add($subject, $key, $oneof_value);\n                        }\n                        return $subject->$key;\n                    case $isKeyed && $hasKey:\n                        $subject = $subject->addChild($key);\n                        // fall-through intended\n                    case $isKeyed:\n                        foreach ($value as $oneof_key => $oneof_value) {\n                            $add($subject, $oneof_key, $oneof_value);\n                        }\n                        return true;\n                    default:\n                        //trigger_error('Unknown Nodetype ' . $key .print_r($value, 1));\n                }\n            };\n            return function (Array $array) use ($subject, $add) {\n                $add($subject, null, $array);\n                return $subject;\n            };\n        };\n        \n        $xml      = new SimpleXMLElement('<root/>');\n        $importer = $createArrayImporter($xml);\n        \n        $SimpleXML = $importer($data);\n        \n        $dom                     = new DOMDocument();\n        $dom->preserveWhiteSpace = false;\n        $dom->formatOutput       = true;\n        $dom->loadXML($SimpleXML->asXML());\n        \n        return $dom->saveXML();\n    }\n    \n    /**\n     *\n     * @param array $data            \n     */\n    public static function outputResponse($data, $format = null, $options = 0)\n    {\n        if ((isset($_GET['format']) && $_GET['format'] == 'xml') || $format === 'xml') {\n           echo self::formatXML(json_decode(json_encode($data),true));\n        } else {\n        \n            $json = json_encode($data, $options);\n            \n            if (isset($_GET['callback'])) {\n                echo $_GET['callback'] . '(' . $json . ')';\n            } else {\n                echo $json;\n            }\n        }\n    }\n\n    public static function importMessages($chat, $messages) {\n        foreach ($messages as $message) {\n            $msg = new erLhcoreClassModelmsg();\n            $msg->msg = isset($message['msg']) ? $message['msg'] : '';\n            $msg->meta_msg = isset($message['meta_msg']) ? $message['meta_msg'] : '';\n            $msg->time = isset($message['time']) ? $message['time'] : time();\n            $msg->chat_id = $chat->id;\n            $msg->user_id = isset($message['user_id']) ? $message['user_id'] : 0;\n            $msg->name_support = isset($message['name_support']) ? $message['name_support'] : '';\n            $msg->saveThis();\n\n            $chat->last_msg_id = $msg->id;\n            if ($msg->user_id == 0) {\n                $chat->last_user_msg_time = $msg->time;\n            } elseif ($msg->user_id == -2) {\n                $chat->last_op_msg_time = $msg->time;\n            }\n        }\n    }\n\n    private static $apiKey = null;\n}\n\n?>\n", "<?php\r\n\r\nclass erLhcoreClassXMP {\r\n\r\n\tpublic static function sendTestXMP($userData) {\t\t\r\n\t\t$data = (array) erLhcoreClassModelChatConfig::fetch('xmp_data')->data;\r\n\t\t\r\n\t\t$templateMessage = 'xmp_message';\r\n\t\t\t\t\t\t\t\t\r\n\t\t$conn = new XMPPHP_XMPP($data['host'], $data['port'], $data['username'], $data['password'], $data['resource'], $data['server'], $printlog = false, $loglevel = XMPPHP_Log::LEVEL_INFO);\r\n\t\ttry {\r\n\t\t\t$conn->connect();\r\n\t\t\t$conn->processUntil('session_start');\r\n\t\t\t\r\n\t\t\tif (isset($data['test_group_recipients']) && $data['test_group_recipients'] != '') {\r\n\t\t\t\t\r\n\t\t\t\t$recipientsGroup = explode(',',$data['test_group_recipients']);\r\n\t\t\t\t\r\n\t\t\t\tforeach ($recipientsGroup as $groupRecipient) {\r\n\t\t\t\t\t$conn->presence(NULL, \"available\", $groupRecipient);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tforeach ($recipientsGroup as $groupRecipient) {\r\n\t\t\t\t\tlist($groupName) = explode('/',$groupRecipient);\r\n\t\t\t\t\t$conn->message($groupName, $data[$templateMessage], \"groupchat\");\r\n\t\t\t\t}\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tforeach ($recipientsGroup as $groupRecipient) {\r\n\t\t\t\t\t$conn->presence(NULL, \"unavailable\", $groupRecipient);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (isset($data['test_recipients']) && $data['test_recipients'] != '') {\r\n\t\t\t\t$recipientsUsers = explode(',',$data['test_recipients']);\r\n\t\t\t\t$conn->presence();\r\n\t\t\t\t\r\n\t\t\t\tforeach ($recipientsUsers as $recipientsUser) {\t\t\t\t\t\r\n\t\t\t\t\t$conn->message($recipientsUser, $data[$templateMessage]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\t$conn->disconnect();\r\n\t\t\treturn true;\r\n\t\t} catch (Exception $e) {\r\n\t\t\tthrow $e;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function getAccessToken() {\r\n\t\t$xmpData = erLhcoreClassModelChatConfig::fetch('xmp_data');\r\n\t\t$data = (array)$xmpData->data;\r\n\r\n\t\tif (isset($data['gtalk_client_token']) && $data['gtalk_client_token'] != '') {\t\t\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\trequire_once 'lib/core/lhxmp/google/Google_Client.php';\r\n\t\t\t\t\r\n\t\t\t\t$client = new Google_Client();\r\n\t\t\t\t$client->setApplicationName('Live Helper Chat');\r\n\t\t\t\t$client->setScopes(array(\"https://www.googleapis.com/auth/googletalk\",\"https://www.googleapis.com/auth/userinfo.email\"));\r\n\t\t\t\t$client->setClientId($data['gtalk_client_id']);\r\n\t\t\t\t$client->setClientSecret($data['gtalk_client_secret']);\r\n\t\t\t\t$client->setApprovalPrompt('force');\r\n\t\t\t\t$client->setAccessType('offline');\r\n\t\t\t\t$token = $data['gtalk_client_token'];\r\n\t\t\t\t$client->setAccessToken($data['gtalk_client_token']);\r\n\t\t\t\t\r\n\t\t\t\t// Refresh token if it's\r\n\t\t\t\tif ( $client->isAccessTokenExpired() ) {\r\n\t\t\t\t\t$tokenData = json_decode($token);\r\n\t\t\t\t\t$client->refreshToken($tokenData->refresh_token);\r\n\t\t\t\t\t$accessToken = $client->getAccessToken();\r\n\t\t\t\t\r\n\t\t\t\t\t$data['gtalk_client_token'] = $accessToken;\r\n\t\t\t\t\t$xmpData->value = serialize($data);\r\n\t\t\t\t\t$xmpData->saveThis();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (($accessToken = $client->getAccessToken())) {\t\t\t\t\r\n\t\t\t\t\t$tokenData = json_decode($accessToken);\r\n\t\t\t\t\treturn $tokenData->access_token;\r\n\t\t\t\t}\r\n\t\t\t} catch (Exception $e) {\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tpublic static function revokeAccessToken() {\r\n\t\t$xmpData = erLhcoreClassModelChatConfig::fetch('xmp_data');\r\n\t\t$data = (array)$xmpData->data;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (isset($data['gtalk_client_token']) && $data['gtalk_client_token'] != '') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\trequire_once 'lib/core/lhxmp/google/Google_Client.php';\t\t\t\t\r\n\t\t\t\t$client = new Google_Client();\r\n\t\t\t\t$client->setApplicationName('Live Helper Chat');\r\n\t\t\t\t$client->setScopes(array(\"https://www.googleapis.com/auth/googletalk\",\"https://www.googleapis.com/auth/userinfo.email\"));\r\n\t\t\t\t$client->setClientId($data['gtalk_client_id']);\r\n\t\t\t\t$client->setClientSecret($data['gtalk_client_secret']);\r\n\t\t\t\t$client->setAccessType('offline');\r\n\t\t\t\t$client->setApprovalPrompt('force');\r\n\t\t\t\t$token = $data['gtalk_client_token'];\r\n\t\t\t\t$client->setAccessToken($data['gtalk_client_token']);\r\n\t\r\n\t\t\t\t// Refresh token if it's\r\n\t\t\t\tif ( $client->isAccessTokenExpired() ) {\r\n\t\t\t\t\t$tokenData = json_decode($token);\r\n\t\t\t\t\t$client->refreshToken($tokenData->refresh_token);\r\n\t\t\t\t\t$accessToken = $client->getAccessToken();\t\t\t\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (($accessToken = $client->getAccessToken())) {\r\n\t\t\t\t\t$client->revokeToken();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tunset($data['gtalk_client_token']);\r\n\t\t\t\t$xmpData->value = serialize($data);\r\n\t\t\t\t$xmpData->saveThis();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t} catch (Exception $e) {\r\n\t\t\tthrow $e;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function get_dns_srv($domain) {\r\n\t\t$rec = dns_get_record(\"_xmpp-client._tcp.\".$domain, DNS_SRV);\r\n\t\tif(is_array($rec)) {\r\n\t\t\tif(sizeof($rec) == 0) return array($domain, 5222);\r\n\t\t\tif(sizeof($rec) > 0) return array($rec[0]['target'], $rec[0]['port']);\r\n\t\t}\r\n\t}\r\n\t\t\t\r\n\tpublic static function sendTestXMPGTalk($email) {\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t$xmpData = erLhcoreClassModelChatConfig::fetch('xmp_data');\r\n\t\t$data = (array)$xmpData->data;\r\n\r\n\t\tif (($accessToken = self::getAccessToken()) !== false) {\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t$dataLogin = self::get_dns_srv('gmail.com');\r\n\t\t\r\n\t\t\t$conn = new XMPPHP_XMPP($dataLogin[0], $dataLogin[1], $data['email_gtalk'], $accessToken, 'xmpphp', $dataLogin[0], $printlog = false, $loglevel = XMPPHP_Log::LEVEL_INFO, true);\r\n\t\t\ttry {\r\n\t\t\t\t$conn->connect();\r\n\t\t\t\t$conn->processUntil('session_start');\r\n\t\t\t\t$conn->presence();\r\n\t\t\t\t$conn->message($email, $data['xmp_message']);\r\n\t\t\t\t$conn->disconnect();\r\n\t\t\t\treturn true;\r\n\t\t\t} catch (Exception $e) {\r\n\t\t\t\tthrow $e;\r\n\t\t\t}\t\t\t\r\n\t\t} else {\r\n\t\t\tthrow new Exception('Invalid access token');\r\n\t\t}\t\r\n\t}\r\n\t\r\n\tpublic static function getBaseHost() {\r\n\t\tif ( (!empty($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) !== 'off') || ((!empty($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') || (!empty($_SERVER['HTTP_X_FORWARDED_SSL']) && $_SERVER['HTTP_X_FORWARDED_SSL'] == 'on'))){\r\n\t\t\treturn 'https://';\r\n\t\t}\r\n\t\t\r\n\t\treturn 'http://';\t\t\r\n\t}\r\n\t\r\n\tpublic static function sendXMPMessage($chat, $params = array()) {\r\n\t\t\r\n\t\t$data = (array) erLhcoreClassModelChatConfig::fetch('xmp_data')->data;\r\n\t\t\r\n\t\t// Allows extension to override xmpp settings, let say disable it :)\r\n\t\terLhcoreClassChatEventDispatcher::getInstance()->dispatch('xml.send_xmp_message',array('params' => & $data));\r\n\t\t\t\t\r\n\t\t$templateMessage = 'xmp_message';\r\n\t\tif (isset($params['template'])) {\r\n\t\t\t$templateMessage = $params['template'];\r\n\t\t}\r\n\t\t\r\n\t\tif (isset($data['use_xmp']) && $data['use_xmp'] == 1) {\t\r\n\t\t\t\t\r\n\t\t\tif  ( (isset($data['use_standard_xmp']) && $data['use_standard_xmp'] == '0') || !isset($data['use_standard_xmp']) ) { \t\t\t\r\n\t\t\t\t$conn = new XMPPHP_XMPP($data['host'], $data['port'], $data['username'], $data['password'], $data['resource'], $data['server'], $printlog = false, $loglevel = XMPPHP_Log::LEVEL_INFO);\r\n\t\t\t\ttry {\r\n\t\t\t\t\t$conn->connect();\r\n\t\t\t\t\t$conn->processUntil('session_start');\r\n\t\t\t\t\t\r\n\t\t\t\t\t$emailRecipient = array();\t// Email messages\r\n\t\t\t\t\t$groupRecipients = array(); // Group messages\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ($chat->department !== false && $chat->department->xmpp_recipients != '') { // Perhaps department has assigned email\r\n\t\t\t\t\t\t$emailRecipient = explode(',',$chat->department->xmpp_recipients);\r\n\t\t\t\t\t} elseif (isset($data['recipients']) && $data['recipients'] != '') {\r\n\t\t\t\t\t\t$emailRecipient = explode(',', $data['recipients']);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$settingsXMPPGlobal = isset($params['recipients_setting']) ? $params['recipients_setting'] : 'xmp_users';\r\n\t\t\t\t\t\r\n\t\t\t\t\t$optionsDepartment = array();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ($chat->department !== false){\r\n\t\t\t\t\t    $optionsDepartment = $chat->department->inform_options_array;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tif (in_array($settingsXMPPGlobal, $optionsDepartment)) {\t\t\t\t\t \t\t\t\t\t    \r\n\t\t\t\t\t    $db = ezcDbInstance::get();\r\n                        $stmt = $db->prepare(\"SELECT xmpp_username FROM lh_users WHERE id IN (SELECT user_id FROM lh_userdep WHERE dep_id = 0 OR dep_id = :dep_id) AND xmpp_username != ''\");\r\n                        $stmt->bindValue( ':dep_id',$chat->dep_id,PDO::PARAM_INT);\r\n                        $stmt->execute();\r\n                        $usersXMPPs = $stmt->fetchAll(PDO::FETCH_COLUMN);\r\n                        if (is_array($usersXMPPs)){\r\n                            $emailRecipient = array_unique(array_merge($emailRecipient,$usersXMPPs));\r\n                        }\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ($chat->department !== false && $chat->department->xmpp_group_recipients != '') {\r\n\t\t\t\t\t\t$groupRecipients = explode(',',$chat->department->xmpp_group_recipients);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// change status\r\n\t\t\t\t\tforeach($groupRecipients as $recipient){\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t$conn->presence(NULL,'available', $recipient);\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!empty($emailRecipient)) {\r\n\t\t\t\t\t\t$conn->presence();\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t$messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => 5,'sort' => 'id DESC','filter' => array('chat_id' => $chat->id))));\r\n\t\t\t\t\t$messagesContent = '';\r\n\t\t\t\t\t \r\n\t\t\t\t\tforeach ($messages as $msg ) {\r\n\t\t\t\t\t\tif ($msg->user_id == -1) {\r\n\t\t\t\t\t\t\t$messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. erTranslationClassLhTranslation::getInstance()->getTranslation('chat/syncadmin','System assistant').': '.htmlspecialchars($msg->msg).\"\\n\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. ($msg->user_id == 0 ? htmlspecialchars($chat->nick) : htmlspecialchars($msg->name_support)).': '.htmlspecialchars($msg->msg).\"\\n\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$cfgSite = erConfigClassLhConfig::getInstance();\r\n\t\t\t\t\t$secretHash = $cfgSite->getSetting( 'site', 'secrethash' );\r\n\t\t\t\t\t\r\n\t\t\t\t\tforeach ($emailRecipient as $email) {\t\t\t\r\n\t\t\t\t\t\t$veryfyEmail = \tsha1(sha1($email.$secretHash).$secretHash);\r\n\t\t\t\t\t\t$messagesParsed = str_replace(array('{messages}','{url_accept}','{chat_id}','{user_name}','{department}'), array($messagesContent,self::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurl('chat/accept').'/'.erLhcoreClassModelChatAccept::generateAcceptLink($chat).'/'.$veryfyEmail.'/'.$email,$chat->id,$chat->user_name,(string)$chat->department),$data[$templateMessage]);\r\n\t\t\t\t\t\t$conn->message($email,$messagesParsed);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tforeach ($groupRecipients as $email) {\r\n\t\t\t\t\t\tlist($emailGroup) = explode('/',$email);\r\n\t\t\t\t\t\t$veryfyEmail = \tsha1(sha1($emailGroup.$secretHash).$secretHash);\r\n\t\t\t\t\t\t$messagesParsed = str_replace(array('{messages}','{url_accept}','{chat_id}','{user_name}','{department}'), array($messagesContent,self::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurl('chat/accept').'/'.erLhcoreClassModelChatAccept::generateAcceptLink($chat).'/'.$veryfyEmail.'/'.$emailGroup,$chat->id,$chat->user_name,(string)$chat->department),$data[$templateMessage]);\r\n\t\t\t\t\t\t$conn->message($emailGroup,$messagesParsed,'groupchat');\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tforeach($groupRecipients as $recipient) {\t\t\t\t\t\r\n\t\t\t\t\t\t$conn->presence(NULL,'unavailable',$recipient);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$conn->disconnect();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} catch (Exception $e) {\r\n\t\t\t\t\tthrow $e;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (($accessToken = self::getAccessToken()) !== false) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t$dataLogin = self::get_dns_srv('gmail.com');\r\n\t\t\t\t\t\r\n\t\t\t\t\t$conn = new XMPPHP_XMPP($dataLogin[0], $dataLogin[1], $data['email_gtalk'], $accessToken, 'xmpphp', $dataLogin[0], $printlog = false, $loglevel = XMPPHP_Log::LEVEL_INFO, true);\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t$conn->connect();\r\n\t\t\t\t\t\t$conn->processUntil('session_start');\r\n\t\t\t\t\t\t$conn->presence();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$emailRecipient = array();\r\n\t\t\t\t\t\tif ($chat->department !== false && $chat->department->xmpp_recipients != '') { // Perhaps department has assigned email\r\n\t\t\t\t\t\t\t$emailRecipient = explode(',',$chat->department->xmpp_recipients);\r\n\t\t\t\t\t\t} elseif (isset($data['recipients']) && $data['recipients'] != '') {\r\n\t\t\t\t\t\t\t$emailRecipient = explode(',', $data['recipients']);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$settingsXMPPGlobal = isset($params['recipients_setting']) ? $params['recipients_setting'] : 'xmp_users';\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$optionsDepartment = array();\r\n\t\t\t\t\t\r\n    \t\t\t\t\tif ($chat->department !== false){\r\n    \t\t\t\t\t    $optionsDepartment = $chat->department->inform_options_array;\r\n    \t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t    if (in_array($settingsXMPPGlobal, $optionsDepartment)) {\r\n\t\t\t\t\t\t    $db = ezcDbInstance::get();\r\n\t\t\t\t\t\t    $stmt = $db->prepare(\"SELECT xmpp_username FROM lh_users WHERE id IN (SELECT user_id FROM lh_userdep WHERE dep_id = 0 OR dep_id = :dep_id) AND xmpp_username != ''\");\r\n\t\t\t\t\t\t    $stmt->bindValue( ':dep_id',$chat->dep_id,PDO::PARAM_INT);\r\n\t\t\t\t\t\t    $stmt->execute();\r\n\t\t\t\t\t\t    $usersXMPPs = $stmt->fetchAll(PDO::FETCH_COLUMN);\r\n\t\t\t\t\t\t    if (is_array($usersXMPPs)){\r\n\t\t\t\t\t\t        $emailRecipient = array_unique(array_merge($emailRecipient,$usersXMPPs));\r\n\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => 5,'sort' => 'id DESC','filter' => array('chat_id' => $chat->id))));\r\n\t\t\t\t\t\t$messagesContent = '';\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tforeach ($messages as $msg ) {\r\n\t\t\t\t\t\t\tif ($msg->user_id == -1) { \r\n\t\t\t\t\t\t\t\t$messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. erTranslationClassLhTranslation::getInstance()->getTranslation('chat/syncadmin','System assistant').': '.htmlspecialchars($msg->msg).\"\\n\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. ($msg->user_id == 0 ? htmlspecialchars($chat->nick) : htmlspecialchars($msg->name_support)).': '.htmlspecialchars($msg->msg).\"\\n\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$cfgSite = erConfigClassLhConfig::getInstance();\r\n\t\t\t\t\t\t$secretHash = $cfgSite->getSetting( 'site', 'secrethash' );\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tforeach ($emailRecipient as $email) {\r\n\t\t\t\t\t\t\t$veryfyEmail = \tsha1(sha1($email.$secretHash).$secretHash);\r\n\t\t\t\t\t\t\t$conn->message($email,str_replace(array('{messages}','{url_accept}','{chat_id}','{user_name}','{department}'), array($messagesContent,self::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurl('chat/accept').'/'.erLhcoreClassModelChatAccept::generateAcceptLink($chat).'/'.$veryfyEmail.'/'.$email, $chat->id,$chat->user_name,(string)$chat->department),$data[$templateMessage]));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$conn->disconnect();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} catch (Exception $e) {\r\n\t\t\t\t\t\tthrow $e;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Exception('Invalid access token');\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t}\t\t\r\n\t}\r\n\r\n}\r\n\r\n?>", "<?php\r\n\r\nclass erLhAbstractModelFormCollected\r\n{\r\n\r\n    use erLhcoreClassDBTrait;\r\n\r\n    public static $dbTable = 'lh_abstract_form_collected';\r\n\r\n    public static $dbTableId = 'id';\r\n\r\n    public static $dbSessionHandler = 'erLhcoreClassAbstract::getSession';\r\n\r\n    public static $dbSortOrder = 'DESC';\r\n\r\n    public function getState()\r\n    {\r\n        $stateArray = array(\r\n            'id' => $this->id,\r\n            'form_id' => $this->form_id,\r\n            'ctime' => $this->ctime,\r\n            'ip' => $this->ip,\r\n            'content' => $this->content,\r\n            'identifier' => $this->identifier,\r\n            'custom_fields' => $this->custom_fields,\r\n            'chat_id' => $this->chat_id,\r\n        );\r\n\r\n        return $stateArray;\r\n    }\r\n\r\n    public function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case 'left_menu':\r\n                $this->left_menu = '';\r\n                return $this->left_menu;\r\n\r\n            case 'ctime_front':\r\n                return $this->ctime_front = date('Ymd') == date('Ymd', $this->ctime) ? date(erLhcoreClassModule::$dateHourFormat, $this->ctime) : date(erLhcoreClassModule::$dateDateHourFormat, $this->ctime);\r\n\r\n            case 'ctime_full_front':\r\n                return $this->ctime_full_front = date(erLhcoreClassModule::$dateDateHourFormat, $this->ctime);\r\n\r\n            case 'content_array':\r\n                $content = json_decode($this->content,true);\r\n                if ($content === null) {\r\n                    $content = unserialize($this->content);\r\n                }\r\n                return $this->content_array = $content;\r\n\r\n            case 'custom_fields_array':\r\n                return $this->custom_fields_array = $this->custom_fields != '' ? json_decode($this->custom_fields, true) : [];\r\n\r\n            case 'form':\r\n                return $this->form = erLhAbstractModelForm::fetch($this->form_id);\r\n\r\n            case 'form_content':\r\n                return $this->getFormattedContent();\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public function getFormattedContent()\r\n    {\r\n        $dataCollected = array();\r\n        foreach ($this->content_array as $nameAttr => $contentArray) {\r\n            if (isset($contentArray['definition']['type']) && $contentArray['definition']['type'] == 'file') {\r\n                $dataCollected[] = $contentArray['definition']['name_literal'] . \" - \" . erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurldirect('user/login') . '/(r)/' . rawurlencode(base64_encode('form/download/' . $this->id . '/' . $nameAttr));\r\n            } elseif (isset($contentArray['definition']['type']) && $contentArray['definition']['type'] == 'checkbox') {\r\n                $dataCollected[] = $contentArray['definition']['name_literal'] . \" - \" . ($contentArray['value'] == 1 ? 'Y' : 'N');\r\n            } else {\r\n                $dataCollected[] = $contentArray['definition']['name_literal'] . \" - \" . $contentArray['value'];\r\n            }\r\n        }\r\n\r\n        return implode(\"\\n\", $dataCollected);\r\n    }\r\n\r\n    public function getAttrValue($attrDesc)\r\n    {\r\n        $attrs = explode(',', $attrDesc);\r\n\r\n        $attrCollected = array();\r\n\r\n        foreach ($attrs as $attr) {\r\n            $attrCollected[] = $this->content_array[$attr]['value'];\r\n        }\r\n\r\n        return implode(', ', $attrCollected);\r\n    }\r\n\r\n    public function beforeRemove()\r\n    {\r\n        foreach ($this->content_array as $key => $content) {\r\n            if ($content['definition']['type'] == 'file') {\r\n\r\n                if ($content['filename'] != '') {\r\n                    erLhcoreClassChatEventDispatcher::getInstance()->dispatch('form.remove_file', array('filepath' => $content['filepath'], 'filename' => $content['filename']));\r\n                }\r\n\r\n                if ($content['filepath'] != '' && file_exists($content['filepath'] . $content['filename'])) {\r\n                    unlink($content['filepath'] . $content['filename']);\r\n                    erLhcoreClassFileUpload::removeRecursiveIfEmpty('var/', str_replace('var/', '', $content['filepath']));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public $id = null;\r\n    public $form_id = null;\r\n    public $ctime = null;\r\n    public $ip = '';\r\n    public $content = '';\r\n    public $identifier = '';\r\n    public $custom_fields = '';\r\n    public $chat_id = 0;\r\n\r\n}\r\n\r\n?>", "<?php\r\n\r\nclass erLhAbstractModelWidgetTheme {\r\n\r\n    use erLhcoreClassDBTrait;\r\n\r\n    public static $dbTable = 'lh_abstract_widget_theme';\r\n\r\n    public static $dbTableId = 'id';\r\n\r\n    public static $dbSessionHandler = 'erLhcoreClassAbstract::getSession';\r\n\r\n    public static $dbSortOrder = 'DESC';\r\n\r\n\tpublic function getState()\r\n\t{\r\n\t\t$stateArray = array (\r\n\t\t\t'id'         \t\t\t\t=> $this->id,\r\n\t\t\t'name'  \t\t\t\t\t=> $this->name,\r\n\t\t\t'enable_widget_embed_override' => $this->enable_widget_embed_override,\r\n\t\t\t'widget_show_leave_form'       => $this->widget_show_leave_form,\r\n\t\t\t'widget_survey'             => $this->widget_survey,\r\n\t\t\t'widget_position'           => $this->widget_position,\r\n\t\t\t'widget_popwidth'           => $this->widget_popwidth,\r\n\t\t\t'widget_popheight'          => $this->widget_popheight,\r\n\t\t\t'widget_pright'             => $this->widget_pright,\r\n\t\t\t'widget_pbottom'           => $this->widget_pbottom,\r\n\t\t\t'name_company'  \t\t\t=> $this->name_company,\r\n\t\t\t'onl_bcolor'\t\t\t\t=> $this->onl_bcolor,\t\t\t\r\n\t\t\t'bor_bcolor'\t\t\t\t=> $this->bor_bcolor,\t\t\t\r\n\t\t\t'text_color'\t\t\t\t=> $this->text_color,\t\t\t\t\r\n\t\t\t'online_image'\t\t\t\t=> $this->online_image,\r\n\t\t\t'online_image_path'\t\t\t=> $this->online_image_path,\r\n\t\t\t'offline_image'\t\t\t\t=> $this->offline_image,\r\n\t\t\t'offline_image_path'\t\t=> $this->offline_image_path,\t\t\t\t\t\r\n\t\t\t'operator_image'\t\t\t=> $this->operator_image,\r\n\t\t\t'operator_image_path'\t\t=> $this->operator_image_path,\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t'header_background'\t\t\t=> $this->header_background,\r\n\t\t\t'widget_border_color'\t\t=> $this->widget_border_color,\r\n\t\t\t'need_help_image'\t\t\t=> $this->need_help_image,\r\n\t\t\t'need_help_bcolor'\t\t\t=> $this->need_help_bcolor,\r\n\t\t\t'need_help_hover_bg'\t\t=> $this->need_help_hover_bg,\r\n\t\t\t'need_help_tcolor'\t\t\t=> $this->need_help_tcolor,\r\n\t\t\t'need_help_border'\t\t\t=> $this->need_help_border,\r\n\t\t\t'need_help_close_bg'\t\t=> $this->need_help_close_bg,\r\n\t\t\t'need_help_close_hover_bg'\t=> $this->need_help_close_hover_bg,\r\n\t\t\t'need_help_image_path'\t\t=> $this->need_help_image_path,\r\n\t\t\t'show_need_help_delay'\t\t=> $this->show_need_help_delay,\r\n\t\t\t'show_status_delay'\t\t    => $this->show_status_delay,\r\n\t\t\t'custom_status_css'\t\t\t=> $this->custom_status_css,\r\n\t\t\t'custom_container_css'\t\t=> $this->custom_container_css,\r\n\t\t\t'custom_widget_css'\t\t\t=> $this->custom_widget_css,\r\n\t\t\t'custom_popup_css'\t\t\t=> $this->custom_popup_css,\r\n\t\t\t'need_help_header'\t\t\t=> $this->need_help_header,\r\n\t\t\t'need_help_text'\t\t\t=> $this->need_help_text,\r\n\t\t\t'bot_status_text'\t\t\t=> $this->bot_status_text,\r\n\t\t\t'online_text'\t\t\t\t=> $this->online_text,\r\n\t\t\t'offline_text'\t\t\t\t=> $this->offline_text,\r\n\t\t\t'logo_image'\t\t\t\t=> $this->logo_image,\r\n\t\t\t'logo_image_path'\t\t\t=> $this->logo_image_path,\r\n\t\t\t'copyright_image'\t\t\t=> $this->copyright_image,\r\n\t\t\t'copyright_image_path'\t\t=> $this->copyright_image_path,\r\n\t\t\t'show_copyright'\t\t\t=> $this->show_copyright,\r\n\t\t\t'widget_copyright_url'\t\t=> $this->widget_copyright_url,\r\n\t\t\t'explain_text'\t\t\t\t=> $this->explain_text,\r\n\t\t\t'intro_operator_text'\t\t=> $this->intro_operator_text,\t\t    \r\n\t\t\t'minimize_image'\t\t    => $this->minimize_image,\r\n\t\t    'minimize_image_path'\t\t=> $this->minimize_image_path,\t\t    \r\n\t\t\t'restore_image'\t\t        => $this->restore_image,\r\n\t\t    'restore_image_path'\t\t=> $this->restore_image_path,\t\t    \r\n\t\t\t'close_image'\t\t        => $this->close_image,\r\n\t\t    'close_image_path'\t\t    => $this->close_image_path,\t\t    \r\n\t\t\t'popup_image'\t\t        => $this->popup_image,\t\t\t\r\n\t\t\t'popup_image_path'\t\t    => $this->popup_image_path,\t\t    \r\n\t\t\t'hide_close'\t\t        => $this->hide_close,\r\n\t\t\t'hide_popup'\t\t        => $this->hide_popup,\r\n\t\t\t'header_height'\t\t        => $this->header_height,\r\n\t\t\t'header_padding'\t\t    => $this->header_padding,\r\n\t\t\t'widget_border_width'\t\t=> $this->widget_border_width,\r\n\t\t\t'support_joined'\t\t    => $this->support_joined,\r\n\t\t\t'support_closed'\t\t    => $this->support_closed,\r\n\t\t\t'pending_join'\t\t        => $this->pending_join,\r\n\t\t\t'pending_join_queue'\t\t=> $this->pending_join_queue,\r\n\t\t\t'noonline_operators'\t\t=> $this->noonline_operators,\r\n\t\t\t'noonline_operators_offline'=> $this->noonline_operators_offline,\r\n\t\t\t'show_need_help'            => $this->show_need_help,\r\n\t\t\t'show_need_help_timeout'    => $this->show_need_help_timeout,\r\n\t\t\t'modern_look'               => $this->modern_look,\r\n\r\n\t\t\t'show_voting'               => $this->show_voting,\r\n\t\t\t'department_title'          => $this->department_title,\r\n\t\t\t'department_select'         => $this->department_select,\r\n\t\t\t'buble_visitor_background'  => $this->buble_visitor_background,\r\n\t\t\t'buble_visitor_title_color' => $this->buble_visitor_title_color,\r\n\t\t\t'buble_visitor_text_color'  => $this->buble_visitor_text_color,\r\n\t\t\t'buble_operator_background' => $this->buble_operator_background,\r\n\t\t\t'buble_operator_title_color'=> $this->buble_operator_title_color,\r\n\t\t\t'buble_operator_text_color' => $this->buble_operator_text_color,\r\n\r\n\t\t\t'bot_configuration'         => $this->bot_configuration,\r\n\t\t\t'notification_configuration'=> $this->notification_configuration,\r\n\r\n\t\t\t'hide_ts'                   => $this->hide_ts,\r\n\t\t\t'widget_response_width'     => $this->widget_response_width,\r\n\t\t\t'modified'                  => $this->modified,\r\n\t\t\t'alias'                     => $this->alias,\r\n\t\t);\r\n\r\n\t\terLhcoreClassChatEventDispatcher::getInstance()->dispatch('lhabstract.erlhabstractmodelwidgettheme.getstate',array('state' => & $stateArray, 'object' => & $this));\r\n\t\t\r\n\t\treturn $stateArray;\r\n\t}\r\n\r\n\tpublic function __toString()\r\n\t{\r\n\t\treturn $this->name;\r\n\t}\r\n\t\t\r\n   \tpublic function getFields()\r\n   \t{\r\n   \t\treturn include('lib/core/lhabstract/fields/erlhabstractmodelwidgettheme.php');\r\n\t}\r\n\t\r\n\tpublic function getContentAttribute($attr)\r\n\t{\r\n\t\t$response = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('theme.download_image.'.$attr, array('theme' => $this, 'attr' => $attr));\r\n\t\tif ($response === false) {\r\n\t\t\treturn file_get_contents($this->{$attr.'_path'}.'/'.$this->$attr);\r\n\t\t} else {\r\n\t\t\treturn $response['filedata'];\r\n\t\t}\r\n\t}\r\n\r\n    public function movePhoto($attr, $isLocal = false, $localFile = false)\r\n\t{\r\n\t\t$this->deletePhoto($attr);\r\n\t\r\n\t\tif ($this->id != null){\r\n\t\t\t$dir = 'var/storagetheme/' . date('Y') . 'y/' . date('m') . '/' . date('d') .'/' . $this->id . '/';\r\n\t\r\n\t\t\t$response = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('theme.edit.'.$attr.'_path',array('dir' => & $dir, 'storage_id' => $this->id));\r\n\t\r\n\t\t\terLhcoreClassFileUpload::mkdirRecursive( $dir );\r\n\t\t\t\t\t\t\r\n\t\t\tif ($isLocal == false) {\r\n\t\t\t\t$this->$attr = erLhcoreClassSearchHandler::moveUploadedFile('AbstractInput_'.$attr, $dir . '/','.' );\r\n\t\t\t} else {\r\n\t\t\t\t$this->$attr = erLhcoreClassSearchHandler::moveLocalFile($localFile, $dir . '/','.' );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$this->{$attr.'_path'} = $dir;\r\n\r\n\t\t\tif ($attr == 'notification_icon') {\r\n\t\t\t    $noteConfigurationArray = $this->notification_configuration_array;\r\n                $noteConfigurationArray[$attr.'_path'] = $this->{$attr.'_path'};\r\n                $noteConfigurationArray[$attr] = $this->{$attr};\r\n\r\n                $this->notification_configuration_array = $noteConfigurationArray;\r\n            }\r\n\r\n\t\t\t$response = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('theme.edit.store_'.$attr,array(\r\n\t\t\t\t\t'theme' => & $this, \r\n\t\t\t\t\t'path_attr' => $attr.'_path', \r\n\t\t\t\t\t'name' => $this->$attr,\r\n\t\t\t        'name_attr' => $attr,\t\t\t\t\r\n\t\t\t\t\t'file_path' => $this->{$attr.'_path'} . $this->$attr));\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t$this->{$attr.'_pending'} = true;\r\n\t\t}\r\n\t}\t\r\n\t\t\r\n\tpublic function deletePhoto($attr)\r\n\t{\r\n\t\tif ($this->$attr != '') {\r\n\t\t\tif ( file_exists($this->{$attr.'_path'} . $this->$attr) ) {\r\n\t\t\t\tunlink($this->{$attr.'_path'} . $this->$attr);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif ($this->{$attr.'_path'} != '') {\r\n\t\t\t\terLhcoreClassFileUpload::removeRecursiveIfEmpty('var/storagetheme/',str_replace('var/storagetheme/','',$this->{$attr.'_path'}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\terLhcoreClassChatEventDispatcher::getInstance()->dispatch('theme.edit.remove_'.$attr,array(\r\n\t\t\t\t\t'theme' => & $this,\r\n\t\t\t\t\t'path_attr' => $attr.'_path',\r\n\t\t\t\t\t'name' => $this->$attr));\r\n\t\t\t\r\n\t\t\t$this->$attr = '';\r\n\t\t\t$this->{$attr.'_path'} = '';\r\n\r\n\t\t\tif ($attr == 'notification_icon') {\r\n                $noteConfigurationArray = $this->notification_configuration_array;\r\n                $noteConfigurationArray[$attr.'_path'] = '';\r\n                $noteConfigurationArray[$attr] = '';\r\n                $this->notification_configuration_array = $noteConfigurationArray;\r\n            }\r\n\t\t}\t\t\r\n\t}\r\n\t\r\n\tpublic function getModuleTranslations()\r\n\t{\r\n\t    $metaData = array(\r\n\t    'path' => array(\r\n            array('url' => erLhcoreClassDesign::baseurl('system/configuration'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('department/edit','System configuration')),\r\n\t        array('url' => erLhcoreClassDesign::baseurl('theme/index'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('theme/index','Themes'))\r\n        ), 'permission_delete' => array('module' => 'lhtheme','function' => 'administratethemes'),'permission' => array('module' => 'lhtheme','function' => 'administratethemes'),'name' => erTranslationClassLhTranslation::getInstance()->getTranslation('abstract/widgettheme','Widget themes'));\r\n\t    \r\n\t    erLhcoreClassChatEventDispatcher::getInstance()->dispatch('feature.can_use_themes', array('object_meta_data' => & $metaData));\r\n\t    \r\n\t    return $metaData;\r\n\t}\r\n\r\n\tpublic function afterSave()\r\n    {\r\n        $movePhotos = array(\r\n            'need_help_image',\r\n            'online_image',\r\n            'offline_image',\r\n            'logo_image',\r\n            'copyright_image',\r\n            'operator_image',\r\n            'minimize_image',\r\n            'restore_image',\r\n            'close_image',\r\n            'popup_image',\r\n            'notification_icon',\r\n        );\r\n\r\n        $pendingUpdate = false;\r\n        foreach ($movePhotos as $photoAttr) {\r\n            if ($this->{$photoAttr.'_pending'} == true) {\r\n                $this->movePhoto($photoAttr);\r\n                $pendingUpdate = true;\r\n            }\r\n        }\r\n\r\n        if ($pendingUpdate == true) {\r\n            $this->updateThis();\r\n        }\r\n    }\r\n\r\n\tpublic function __get($var)\r\n\t{\r\n\t   switch ($var) {\r\n\t   \t\r\n\t   \tcase 'left_menu':\r\n\t   \t       $this->left_menu = '';\r\n\t   \t\t   return $this->left_menu;\r\n\t   \t\tbreak;\r\n\r\n           case 'custom_status_css_front':\r\n               $attr = str_replace('_front', '', $var);\r\n               $this->$var = false;\r\n               if ($this->$attr != '') {\r\n                   $this->$var =  str_replace($this->replace_array['search'], $this->replace_array['replace'], $this->$attr);\r\n               }\r\n               return $this->$var;\r\n               break;\r\n\r\n           case 'replace_array':\r\n\r\n               $host = '//'.$_SERVER['HTTP_HOST'];\r\n\r\n               $this->replace_array = array(\r\n                   'search' => array(\r\n                       '{{host}}',\r\n                       '{{logo_image_url}}',\r\n                       '{{minimize_image_url}}',\r\n                       '{{restore_image_url}}',\r\n                       '{{close_image_url}}',\r\n                       '{{popup_image_url}}',\r\n                       '{{operator_image_url}}',\r\n                       '{{copyright_image_url}}',\r\n                       '{{need_help_image_url}}',\r\n                       '{{online_image_url}}',\r\n                       '{{offline_image_url}}',\r\n                   ),\r\n                   'replace' => array(\r\n                       $host,\r\n                       $this->logo_image_url,\r\n                       $this->minimize_image_url,\r\n                       $this->restore_image_url,\r\n                       $this->close_image_url,\r\n                       $this->popup_image_url,\r\n                       $this->operator_image_url,\r\n                       $this->copyright_image_url,\r\n                       $this->need_help_image_url,\r\n                       $this->online_image_url,\r\n                       $this->offline_image_url,\r\n                   ));\r\n               return $this->replace_array;\r\n               break;\r\n\r\n           case 'operator_image_avatar':\r\n               return $this->operator_image_url !== false || (isset($this->bot_configuration_array['operator_avatar']) && $this->bot_configuration_array['operator_avatar'] != '');\r\n\r\n\t   \tcase 'notification_icon_url':\r\n\t   \tcase 'logo_image_url':\r\n\t   \tcase 'minimize_image_url':\r\n\t   \tcase 'restore_image_url':\r\n\t   \tcase 'close_image_url':\r\n\t   \tcase 'popup_image_url':\r\n\t   \tcase 'operator_image_url':\r\n\t   \tcase 'copyright_image_url':\r\n\t   \tcase 'need_help_image_url':\r\n\t   \tcase 'online_image_url':\r\n\t   \tcase 'offline_image_url':\r\n\t   \t       $attr = str_replace('_url', '', $var);\t   \t       \t   \t       \r\n\t   \t       $this->$var = false;\t   \t        \r\n\t   \t       if ($this->$attr != ''){\r\n\t   \t           $this->$var =  ($this->{$attr.'_path'} != '' ? (erLhcoreClassSystem::$httpsMode == true ? 'https:' : 'http:') . '//' . $_SERVER['HTTP_HOST'] . erLhcoreClassSystem::instance()->wwwDir() : erLhcoreClassSystem::instance()->wwwImagesDir() ) . '/' . $this->{$attr.'_path'} . $this->$attr;\r\n\t   \t       }\t   \t        \r\n\t   \t       return $this->$var;\r\n\t   \t    break;\r\n\t   \t\t   \t\t\t   \t\t\r\n\t   \tcase 'need_help_image_url_img':\r\n\t   \tcase 'online_image_url_img':\r\n\t   \tcase 'offline_image_url_img':\r\n\t   \tcase 'logo_image_url_img':\r\n\t   \tcase 'copyright_image_url_img':\r\n\t   \tcase 'operator_image_url_img':\r\n\t   \tcase 'popup_image_url_img':\r\n\t   \tcase 'close_image_url_img':\r\n\t   \tcase 'restore_image_url_img':\r\n\t   \tcase 'minimize_image_url_img':\t   \t\t\t \r\n\t   \t        $attr = str_replace('_url_img', '', $var);\t   \t    \r\n\t   \t\t\t$this->$var = false;\t   \t\t\r\n\t   \t\t\tif($this->$attr != ''){\r\n\t   \t\t\t\t$this->$var = '<img src=\"'.($this->{$attr.'_path'} != '' ? (erLhcoreClassSystem::$httpsMode == true ? 'https:' : 'http:') . '//' . $_SERVER['HTTP_HOST'] . erLhcoreClassSystem::instance()->wwwDir() : erLhcoreClassSystem::instance()->wwwImagesDir() ) .'/'.$this->{$attr.'_path'} . $this->$attr.'\"/>';\r\n\t   \t\t\t}\r\n\t   \t\t\treturn $this->$var;\r\n\t   \t\tbreak;\r\n\r\n       case 'notification_icon':\r\n       case 'notification_icon_path':\r\n           $configurationArray = $this->notification_configuration_array;\r\n           if (isset($configurationArray[$var]) && $configurationArray[$var] != '') {\r\n               $this->$var = $configurationArray[$var];\r\n           } else {\r\n               $this->$var = '';\r\n           }\r\n           return $this->$var;\r\n           break;\r\n\r\n       case 'notification_icon_url_img':\r\n           $attr = str_replace('_url_img', '', $var);\r\n           $configurationArray = $this->notification_configuration_array;\r\n           if (isset($configurationArray[$attr]) && $configurationArray[$attr] != '') {\r\n               $this->$var = '<img src=\"'.($this->{$attr.'_path'} != '' ? erLhcoreClassSystem::instance()->wwwDir() : erLhcoreClassSystem::instance()->wwwImagesDir() ) .'/'.$this->{$attr.'_path'} . $configurationArray[$attr].'\"/>';\r\n           } else {\r\n               $this->$var = false;\r\n           }\r\n           return $this->$var;\r\n           break;\r\n\r\n       case 'bot_configuration_array':\r\n       case 'notification_configuration_array':\r\n           $attr = str_replace('_array','',$var);\r\n           if (!empty($this->{$attr})) {\r\n               $jsonData = json_decode($this->{$attr},true);\r\n               if ($jsonData !== null) {\r\n                   $this->{$var} = $jsonData;\r\n               } else {\r\n                   $this->{$var} = array();\r\n               }\r\n           } else {\r\n               $this->{$var} = array();\r\n           }\r\n           return $this->{$var};\r\n           break;\r\n\t   \t\t\r\n\t   \tdefault:\r\n\t   \t\tbreak;\r\n\t   }\r\n\t}\r\n\r\n\tpublic function beforeRemove()\r\n    {\r\n        // If theme is removed we have to reset default theme if it was the one\r\n        $themeData = erLhcoreClassModelChatConfig::fetch('default_theme_id');\r\n\r\n        if ($themeData->value == $this->id) {\r\n            $themeData->value = 0;\r\n            $themeData->saveThis();\r\n        }\r\n        \r\n        $imagesToRemove = array(\r\n            'online_image',\r\n            'offline_image',\r\n            'logo_image',\r\n            'need_help_image',\r\n            'copyright_image',\r\n            'operator_image',\r\n            'minimize_image',\r\n            'restore_image',\r\n            'close_image',\r\n            'popup_image'\r\n        );\r\n\r\n        foreach ($imagesToRemove as $img) {\r\n            $this->deletePhoto($img);\r\n        }\r\n    }\r\n\r\n    public function beforeUpdate()\r\n    {\r\n        $this->bot_configuration = json_encode($this->bot_configuration_array);\r\n        $this->notification_configuration = json_encode($this->notification_configuration_array);\r\n        $this->modified = time();\r\n    }\r\n\r\n    public function beforeSave()\r\n    {\r\n        $this->bot_configuration = json_encode($this->bot_configuration_array);\r\n        $this->notification_configuration = json_encode($this->notification_configuration_array);\r\n        $this->modified = time();\r\n    }\r\n    \r\n\tpublic function dependCss()\r\n    {\r\n\t\treturn '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.erLhcoreClassDesign::design('css/colorpicker.css').'\" />';\r\n\t}\r\n\r\n\tpublic function dependJs()\r\n    {\r\n\t\treturn '<script type=\"text/javascript\" src=\"'.erLhcoreClassDesign::designJS('js/colorpicker.js;js/ace/ace.js').'\"></script>';\r\n\t}\r\n\r\n    public function dependFooterJs()\r\n    {\r\n        return '<script type=\"text/javascript\" src=\"'.erLhcoreClassDesign::designJS('js/angular.lhc.theme.js').'\"></script>';\r\n    }\r\n\t\r\n\tpublic function customForm()\r\n    {\r\n\t\treturn 'widget_theme.tpl.php';\r\n\t}\r\n\r\n\tpublic function translate() {\r\n        $chatLocale = null;\r\n        $chatLocaleFallback = erConfigClassLhConfig::getInstance()->getDirLanguage('content_language');\r\n\r\n        // Detect user locale\r\n        if(isset($_SERVER['HTTP_ACCEPT_LANGUAGE'])) {\r\n            $parts = explode(';',$_SERVER['HTTP_ACCEPT_LANGUAGE']);\r\n            $languages = explode(',',$parts[0]);\r\n            if (isset($languages[0])) {\r\n                $chatLocale = $languages[0];\r\n            }\r\n        }\r\n\r\n        $attributesDirect = array(\r\n            'pending_join_queue',\r\n            'bot_status_text',\r\n            'support_joined',\r\n            'support_closed',\r\n            'pending_join',\r\n            'noonline_operators',\r\n            'noonline_operators_offline',\r\n            'department_title',\r\n            'department_select',\r\n            'explain_text',\r\n            'need_help_text',\r\n            'need_help_header',\r\n            'intro_operator_text',\r\n        );\r\n\r\n        $translatableAttributes = array_merge(array(\r\n            'custom_start_button_offline',\r\n            'custom_start_button_bot',\r\n            'custom_start_button',\r\n            'inject_html',\r\n            'custom_html_status',\r\n            'custom_html_header_body',\r\n            'custom_html_header',\r\n            'custom_html_widget_bot',\r\n            'custom_html_bot',\r\n            'custom_html_widget',\r\n            'custom_html',\r\n            'intro_message',\r\n            'intro_message_html',\r\n            'pre_chat_html',\r\n            'pre_offline_chat_html',\r\n            'thank_feedback',\r\n            'placeholder_message',\r\n            'need_help_html',\r\n            'chat_unavailable',\r\n            'custom_op_name',\r\n            'custom_tos_text',\r\n            'min_text',\r\n            'popup_text',\r\n            'end_chat_text',\r\n            'cnew_msgh',\r\n            'cnew_msg',\r\n            'cscroll_btn',\r\n            'cnew_msgm',\r\n            'formf_name',\r\n            'formf_email',\r\n            'formf_file',\r\n            'formf_phone',\r\n            'formf_question',\r\n        ),$attributesDirect);\r\n\r\n        $attributes = $this->bot_configuration_array;\r\n\r\n        foreach ($translatableAttributes as $attr) {\r\n            if (isset($attributes[$attr . '_lang'])) {\r\n\r\n                $translated = false;\r\n\r\n                if ($chatLocale !== null) {\r\n                    foreach ($attributes[$attr . '_lang'] as $attrTrans) {\r\n                        if (in_array($chatLocale, $attrTrans['languages']) && $attrTrans['content'] != '') {\r\n                            $attributes[$attr] = $attrTrans['content'];\r\n                            $translated = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if ($translated == false) {\r\n                    foreach ($attributes[$attr . '_lang'] as $attrTrans) {\r\n                        if (in_array($chatLocaleFallback, $attrTrans['languages']) && $attrTrans['content'] != '') {\r\n                            $attributes[$attr] = $attrTrans['content'];\r\n                            $translated = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if ($translated === true && in_array($attr,$attributesDirect)) {\r\n                    $this->$attr = $attributes[$attr];\r\n                }\r\n            }\r\n        }\r\n\r\n        $this->bot_configuration_array = $attributes;\r\n    }\r\n\r\n   \tpublic $id = null;\r\n\tpublic $name = '';\r\n\tpublic $onl_bcolor = '0c8fc4';\r\n\tpublic $text_color = '';\r\n\tpublic $bor_bcolor = 'e3e3e3';\r\n\tpublic $online_image = '';\r\n\tpublic $offline_image = '';\r\n\tpublic $online_image_path = '';\r\n\tpublic $offline_image_path = '';\r\n\tpublic $header_background = '525252';\r\n\tpublic $need_help_bcolor = '';\r\n\tpublic $need_help_hover_bg = '';\r\n\tpublic $need_help_image = '';\t\r\n\tpublic $need_help_tcolor = '';\r\n\tpublic $need_help_border = '';\r\n\tpublic $need_help_close_bg = '';\r\n\tpublic $need_help_close_hover_bg = '';\r\n\tpublic $need_help_image_path = '';\r\n\tpublic $custom_status_css = '';\r\n\tpublic $custom_container_css = '';\r\n\tpublic $custom_widget_css = '';\r\n\tpublic $need_help_header = '';\r\n\tpublic $need_help_text = '';\r\n\tpublic $online_text = '';\r\n\tpublic $offline_text = '';\t\r\n\tpublic $logo_image = '';\r\n\tpublic $logo_image_path = '';\r\n\tpublic $operator_image = '';\r\n\tpublic $operator_image_path = '';\r\n\tpublic $copyright_image = '';\r\n\tpublic $copyright_image_path = '';\r\n\tpublic $show_copyright = '1';\r\n\tpublic $widget_copyright_url = '';\r\n\tpublic $explain_text = '';\r\n\tpublic $intro_operator_text = '';\r\n\tpublic $widget_border_color = 'cccccc';\t\r\n\tpublic $hide_close = 1;\r\n\tpublic $hide_popup = 0;\t\r\n\tpublic $minimize_image = '';\r\n\tpublic $minimize_image_path = '';\t\r\n\tpublic $restore_image = '';\r\n\tpublic $restore_image_path = '';\t\r\n\tpublic $close_image = '';\r\n\tpublic $close_image_path = '';\t\r\n\tpublic $popup_image = '';\r\n\tpublic $popup_image_path = '';\t\r\n\tpublic $custom_popup_css = '';\r\n\tpublic $name_company = '';\r\n\tpublic $header_height = 0;\r\n\tpublic $header_padding = 0;\r\n\tpublic $widget_border_width = 1;\r\n\tpublic $show_need_help = 1;\r\n\tpublic $show_need_help_timeout = 24;\r\n\tpublic $show_need_help_delay = 0;\r\n\tpublic $show_status_delay = 0;\r\n\r\n\tpublic $support_joined = '';\r\n\tpublic $bot_status_text = '';\r\n\tpublic $support_closed = '';\r\n\tpublic $pending_join = '';\r\n\tpublic $pending_join_queue = '';\r\n\tpublic $noonline_operators = '';\r\n\tpublic $noonline_operators_offline = '';\r\n\tpublic $notification_configuration = '';\r\n\r\n\tpublic $bot_configuration = '';\r\n\r\n\tpublic $show_voting = 1;\r\n\tpublic $modern_look = 1;\r\n\tpublic $department_title = '';\r\n\tpublic $department_select = '';\r\n\r\n\tpublic $buble_visitor_background = ''; //BFE9F9\r\n\tpublic $buble_visitor_title_color = '';//99BE7B\r\n\tpublic $buble_visitor_text_color = ''; //333333\r\n\r\n\tpublic $buble_operator_background = ''; //DCF2FA\r\n\tpublic $buble_operator_title_color = '';//8EC1D9\r\n\tpublic $buble_operator_text_color = ''; //333333\r\n\r\n    public $hide_ts = 0;\r\n    public $widget_response_width = 0;\r\n\r\n    // Theme modified time. We will use this attribute for E-Tag\r\n    public $modified = 0;\r\n\r\n    public $enable_widget_embed_override = 0;\r\n    public $widget_show_leave_form = 0;\r\n    public $widget_survey = 0;\r\n    public $widget_position = '';\r\n    public $widget_popwidth = 500;\r\n    public $widget_popheight = 520;\r\n    public $widget_pright = 0;\r\n    public $widget_pbottom = 0;\r\n    public $alias = '';\r\n\r\n\tpublic $hide_add = false;\r\n\tpublic $hide_delete = false;\r\n}\r\n\r\n?>", "<?php\r\n\r\nclass erLhcoreClassModelGenericBotBot {\r\n\r\n    use erLhcoreClassDBTrait;\r\n\r\n    public static $dbTable = 'lh_generic_bot_bot';\r\n\r\n    public static $dbTableId = 'id';\r\n\r\n    public static $dbSessionHandler = 'erLhcoreClassGenericBot::getSession';\r\n\r\n    public static $dbSortOrder = 'DESC';\r\n\r\n    public function getState()\r\n    {\r\n        $stateArray = array(\r\n            'id' => $this->id,\r\n            'name' => $this->name,\r\n            'nick' => $this->nick,\r\n            'configuration' => $this->configuration,\r\n            'attr_str_1' => $this->attr_str_1,\r\n            'attr_str_2' => $this->attr_str_2,\r\n            'attr_str_3' => $this->attr_str_3,\r\n            'filepath' => $this->filepath,\r\n            'filename' => $this->filename,\r\n            'avatar' => $this->avatar,\r\n        );\r\n\r\n        return $stateArray;\r\n    }\r\n\r\n    public function beforeRemove() {\r\n\r\n        // Bot groups\r\n        $q = ezcDbInstance::get()->createDeleteQuery();\r\n        $q->deleteFrom( 'lh_generic_bot_group' )->where( $q->expr->eq( 'bot_id', $this->id ) );\r\n        $stmt = $q->prepare();\r\n        $stmt->execute();\r\n\r\n        // Bot payloads\r\n        $q = ezcDbInstance::get()->createDeleteQuery();\r\n        $q->deleteFrom( 'lh_generic_bot_payload' )->where( $q->expr->eq( 'bot_id', $this->id ) );\r\n        $stmt = $q->prepare();\r\n        $stmt->execute();\r\n\r\n        // Bot triggers\r\n        $q = ezcDbInstance::get()->createDeleteQuery();\r\n        $q->deleteFrom( 'lh_generic_bot_trigger' )->where( $q->expr->eq( 'bot_id', $this->id ) );\r\n        $stmt = $q->prepare();\r\n        $stmt->execute();\r\n\r\n        // Bot trigger event\r\n        $q = ezcDbInstance::get()->createDeleteQuery();\r\n        $q->deleteFrom( 'lh_generic_bot_trigger_event' )->where( $q->expr->eq( 'bot_id', $this->id ) );\r\n        $stmt = $q->prepare();\r\n        $stmt->execute();\r\n\r\n        $this->removeFile();\r\n    }\r\n\r\n    public function __get($var) {\r\n\r\n        switch ($var) {\r\n\r\n            case 'configuration_array':\r\n                $this->configuration_array = array();\r\n                if ($this->configuration != ''){\r\n                    $jsonData = json_decode($this->configuration,true);\r\n                    if ($jsonData !== null) {\r\n                        $this->configuration_array = $jsonData;\r\n                    } else {\r\n                        $this->configuration_array = array();\r\n                    }\r\n                }\r\n                return $this->configuration_array;\r\n                break;\r\n\r\n            case 'name_support':\r\n                return $this->name_support = $this->nick;\r\n                break;\r\n\r\n            case 'has_photo':\r\n                return $this->filename != '';\r\n                break;\r\n\r\n            case 'has_photo_avatar':\r\n                return $this->filename != '' || $this->avatar != '';\r\n                break;\r\n\r\n            case 'photo_path':\r\n                $this->photo_path = ($this->filepath != '' ? '//' . $_SERVER['HTTP_HOST'] . erLhcoreClassSystem::instance()->wwwDir() : erLhcoreClassSystem::instance()->wwwImagesDir() ) .'/'. $this->filepath . $this->filename;\r\n                return $this->photo_path;\r\n                break;\r\n\r\n            case 'file_path_server':\r\n                return $this->filepath . $this->filename;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public function getBotIds() {\r\n\r\n        $ids = array($this->id);\r\n\r\n        $configurationArray = $this->configuration_array;\r\n\r\n        if (isset($configurationArray['bot_id']) && !empty($configurationArray['bot_id'])) {\r\n            $ids = array_merge($ids,$configurationArray['bot_id']);\r\n        }\r\n\r\n        return $ids;\r\n    }\r\n\r\n    public function removeFile()\r\n    {\r\n        if ($this->filename != '') {\r\n            if ( file_exists($this->filepath . $this->filename) ) {\r\n                unlink($this->filepath . $this->filename);\r\n            }\r\n\r\n            if ($this->filepath != '') {\r\n                erLhcoreClassFileUpload::removeRecursiveIfEmpty('var/botphoto/',str_replace('var/botphoto/','',$this->filepath));\r\n            }\r\n\r\n            erLhcoreClassChatEventDispatcher::getInstance()->dispatch('user.remove_photo', array('user' => & $this));\r\n\r\n            $this->filepath = '';\r\n            $this->filename = '';\r\n            $this->saveThis();\r\n        }\r\n    }\r\n\r\n    public function __toString()\r\n    {\r\n        return $this->name;\r\n    }\r\n\r\n    public $id = null;\r\n    public $name = '';\r\n    public $nick = '';\r\n    public $configuration = '';\r\n    public $attr_str_1 = '';\r\n    public $attr_str_2 = '';\r\n    public $attr_str_3 = '';\r\n    public $filepath = '';\r\n    public $filename = '';\r\n    public $avatar = '';\r\n}", "<?php\n\nclass erLhcoreClassModelGenericBotTrGroup {\n\n    use erLhcoreClassDBTrait;\n\n    public static $dbTable = 'lh_generic_bot_tr_group';\n\n    public static $dbTableId = 'id';\n\n    public static $dbSessionHandler = 'erLhcoreClassGenericBot::getSession';\n\n    public static $dbSortOrder = 'DESC';\n\n    public function getState()\n    {\n        $stateArray = array(\n            'id' => $this->id,\n            'name' => $this->name,\n            'nick' => $this->nick,\n            'filepath' => $this->filepath,\n            'filename' => $this->filename,\n            'configuration' => $this->configuration,\n        );\n        return $stateArray;\n    }\n\n    public function __get($var) {\n\n        switch ($var) {\n            case 'configuration_array':\n                $this->configuration_array = array();\n                if ($this->configuration != ''){\n                    $jsonData = json_decode($this->configuration,true);\n                    if ($jsonData !== null) {\n                        $this->configuration_array = $jsonData;\n                    } else {\n                        $this->configuration_array = array();\n                    }\n                }\n                return $this->configuration_array;\n                break;\n\n            case 'name_support':\n                return $this->name_support = $this->nick;\n                break;\n\n            case 'has_photo':\n                return $this->filename != '';\n                break;\n\n            case 'photo_path':\n                $this->photo_path = ($this->filepath != '' ? '//' . $_SERVER['HTTP_HOST'] . erLhcoreClassSystem::instance()->wwwDir() : erLhcoreClassSystem::instance()->wwwImagesDir() ) .'/'. $this->filepath . $this->filename;\n                return $this->photo_path;\n                break;\n\n            case 'file_path_server':\n                return $this->filepath . $this->filename;\n                break;\n\n            default:\n                break;\n        }\n    }\n    public function beforeRemove() {\n        $q = ezcDbInstance::get()->createDeleteQuery();\n\n        // Bot groups\n        $q->deleteFrom( 'lh_generic_bot_tr_item' )->where( $q->expr->eq( 'group_id', $this->id ) );\n        $stmt = $q->prepare();\n        $stmt->execute();\n\n        $this->removeFile();\n    }\n    public function removeFile()\n    {\n        if ($this->filename != '') {\n            if ( file_exists($this->filepath . $this->filename) ) {\n                unlink($this->filepath . $this->filename);\n            }\n\n            if ($this->filepath != '') {\n                erLhcoreClassFileUpload::removeRecursiveIfEmpty('var/bottrphoto/',str_replace('var/bottrphoto/','',$this->filepath));\n            }\n\n            erLhcoreClassChatEventDispatcher::getInstance()->dispatch('user.remove_photo', array('user' => & $this));\n\n            $this->filepath = '';\n            $this->filename = '';\n            $this->saveThis();\n        }\n    }\n\n    public function __toString()\n    {\n        return $this->name;\n    }\n\n    public $id = null;\n    public $name = '';\n    public $nick = '';\n    public $filepath = '';\n    public $filename = '';\n    public $configuration = '';\n}", "<?php\n\nclass erLhcoreClassModelUser {\n\n    use erLhcoreClassDBTrait;\n\n    public static $dbTable = 'lh_users';\n\n    public static $dbTableId = 'id';\n\n    public static $dbSessionHandler = 'erLhcoreClassUser::getSession';\n\n    public static $dbSortOrder = 'DESC';\n\n    public function getState()\n    {\n        return array(\n            'id' => $this->id,\n            'username' => $this->username,\n            'password' => $this->password,\n            'email' => $this->email,\n            'name' => $this->name,\n            'surname' => $this->surname,\n            'disabled' => $this->disabled,\n            'hide_online' => $this->hide_online,\n            'all_departments' => $this->all_departments,\n            'filepath' => $this->filepath,\n            'filename' => $this->filename,\n            'skype' => $this->skype,\n            'job_title' => $this->job_title,\n            'time_zone' => $this->time_zone,\n            'invisible_mode' => $this->invisible_mode,\n            'inactive_mode' => $this->inactive_mode,\n            'xmpp_username' => $this->xmpp_username,\n            'rec_per_req' => $this->rec_per_req,\n            'session_id' => $this->session_id,\n            'departments_ids' => $this->departments_ids,\n            'chat_nickname' => $this->chat_nickname,\n            'max_active_chats' => $this->max_active_chats,\n            'auto_accept' => $this->auto_accept,\n            'attr_int_1' => $this->attr_int_1,\n            'attr_int_2' => $this->attr_int_2,\n            'attr_int_3' => $this->attr_int_3,\n            'operation_admin' => $this->operation_admin,\n            'exclude_autoasign' => $this->exclude_autoasign,\n            'pswd_updated' => $this->pswd_updated,\n            'always_on' => $this->always_on,\n            'avatar' => $this->avatar,\n            'cache_version' => $this->cache_version,\n            'llogin' => $this->llogin,\n            'force_logout' => $this->force_logout,\n        );\n   }\n\n   public function setPassword($password)\n   {\n\t\t$hash = password_hash($password, PASSWORD_DEFAULT);\n       \n\t\tif ($hash) {\n\t\t\t$this->password = $hash;\n\t\t\t$this->pswd_updated = time();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n   }\n\n   public function __toString()\n   {\n   \t\treturn $this->username.' ('.$this->email.')';\n   }\n\n   public static function getUserCount($params = array())\n   {\n       return self::getCount($params);\n   }\n\n   public function beforeUpdate()\n   {\n       $this->cache_version = $this->cache_version + 1;\n   }\n\n    public function __get($param)\n   {\n       switch ($param) {\n\n       \tcase 'name_support':\n       \t\t\treturn $this->chat_nickname != '' ? trim($this->chat_nickname) : trim($this->name_official);\n\n       \tcase 'name_official':\n       \t\t\t$this->name_official = trim($this->name.' '.$this->surname);\n       \t\t\t$this->name_official = $this->name_official != '' ? $this->name_official : $this->chat_nickname;\n       \t\t\treturn $this->name_official;\n\n       \tcase 'user_groups_id':\n       \t\t   $userGroups = erLhcoreClassModelGroupUser::getList(array('filter' => array('user_id' => $this->id)));\n       \t\t   $this->user_groups_id = array();\n\n       \t\t   if (!empty($userGroups)) {\n       \t\t   \t\tforeach ($userGroups as $userGroup) {\n       \t\t   \t \t\t$this->user_groups_id[] = $userGroup->group_id;\n       \t\t   \t\t}\n       \t\t   }\n\n       \t\t   return $this->user_groups_id;\n\n       \tcase 'lastactivity':\n       \tcase 'lastd_activity':\n                $activityVar = array('lastactivity' => 'last_activity', 'lastd_activity' => 'lastd_activity');\n                $db = ezcDbInstance::get();\n                $stmt = $db->prepare('SELECT '. $activityVar[$param] .' FROM lh_userdep WHERE user_id = :user_id LIMIT 1');\n                $stmt->bindValue(':user_id',$this->id,PDO::PARAM_INT);\n                $stmt->execute();\n                $this->{$param} = (int)$stmt->fetchColumn();\n                return $this->{$param};\n\n       \tcase 'has_photo':\n       \t    \treturn $this->filename != '';\n\n       \tcase 'has_photo_avatar':\n       \t    \treturn $this->filename != '' || $this->avatar != '';\n\n       \tcase 'photo_path':\n       \t\t\t$this->photo_path = ($this->filepath != '' ? '//' . $_SERVER['HTTP_HOST'] . erLhcoreClassSystem::instance()->wwwDir() : erLhcoreClassSystem::instance()->wwwImagesDir() ) .'/'. $this->filepath . $this->filename;\n       \t\t\treturn $this->photo_path;\n\n       \tcase 'file_path_server':\n       \t\t\treturn $this->filepath . $this->filename;\n\n       \tcase 'lastactivity_front':\n       \t\t   $this->lastactivity_front = '';\n\n       \t\t   if ( $this->lastactivity > 0 ) {\n       \t\t       $this->lastactivity_front = date(erLhcoreClassModule::$dateDateHourFormat);\n       \t\t   };\n\n       \t\t   return $this->lastactivity_front;\n\n       \tcase 'lastactivity_ago':\n       \tcase 'llogin_ago':\n               $var = str_replace('_ago','',$param);\n               if ($this->{$var} > 0) {\n                   $this->{$param} = erLhcoreClassChat::getAgoFormat($this->{$var});\n               } else {\n                   $this->{$param} = '';\n               }\n       \t\t   return $this->{$param};\n\n       \tdefault:\n       \t\tbreak;\n       }\n   }\n\n   public static function getUserList($paramsSearch = array())\n   {\n       return self::getList($paramsSearch);\n   }\n\n   public static function userExists($username)\n   {\n       return self::getCount(array('filter' => array('username' => $username))) > 0;\n   }\n\n   public static function fetchUserByEmail($email, $xmpp_username = false)\n   {\n       $db = ezcDbInstance::get();\n       $xmppAppend = $xmpp_username !== false ? ' OR xmpp_username = :xmpp_username' : '';       \n       $stmt = $db->prepare('SELECT id FROM lh_users WHERE email = :email'.$xmppAppend);\n       $stmt->bindValue( ':email',$email);\n       \n       if ($xmpp_username !== false) {\n       \t\t$stmt->bindValue( ':xmpp_username',$xmpp_username);       \t\t\n       }\n       \n       $stmt->execute();\n       $rows = $stmt->fetchAll();\n\n       if (isset($rows[0]['id'])) {\n            return $rows[0]['id'];\n       } else {\n            return false;\n       }\n   }\n\n   public function removeFile()\n   {   \t\t   \t\n\t   \tif ($this->filename != '') {\n\t   \t\tif ( file_exists($this->filepath . $this->filename) ) {\n\t   \t\t\tunlink($this->filepath . $this->filename);\n\t   \t\t}\n\n\t   \t\tif ($this->filepath != '') {\n\t   \t\t\terLhcoreClassFileUpload::removeRecursiveIfEmpty('var/userphoto/',str_replace('var/userphoto/','',$this->filepath));\n\t   \t\t}\n\t   \t\t\n\t   \t\terLhcoreClassChatEventDispatcher::getInstance()->dispatch('user.remove_photo', array('user' => & $this));\n\t   \t\t\n\t   \t\t$this->filepath = '';\n\t   \t\t$this->filename = '';\n\t   \t\t$this->saveThis();\n\t   \t}\n   }\n\n   public function setUserGroups() {\n   \t\t\n\t\terLhcoreClassModelGroupUser::removeUserFromGroups($this->id);\n\t\t\n\t\tforeach ($this->user_groups_id as $group_id) {\n\t\t\t$groupUser = new erLhcoreClassModelGroupUser();\n\t\t\t$groupUser->group_id = $group_id;\n\t\t\t$groupUser->user_id = $this->id;\n\t\t\t$groupUser->saveThis();\n\t\t}\n\t\t\n   \t}\n\n\n   \tpublic function hasAccessTo($module, $function) {\n        if ($this->accessArray === null) {\n            $this->accessArray = erLhcoreClassRole::accessArrayByUserID($this->id);\n        }\n\n        return erLhcoreClassRole::canUseByModuleAndFunction($this->accessArray, $module, $function);\n    }\n\n    private $accessArray = null;\n\n    public $id = null;\n    public $username = '';\n    public $password = '';\n    public $email = '';\n    public $name = '';\n    public $filepath = '';\n    public $filename = '';\n    public $surname = '';\n    public $job_title = '';\n    public $departments_ids = '';\n    public $skype = '';\n    public $xmpp_username = '';\n    public $disabled = 0;\n    public $hide_online = 0;\n    public $all_departments = 0;\n    public $invisible_mode = 0;\n    public $time_zone = '';\n    public $rec_per_req = '';\n    public $session_id = '';\n    public $chat_nickname = '';\n    public $operation_admin = '';\n    public $inactive_mode = 0;\n    public $max_active_chats = 0;\n    public $auto_accept = 0;\n    public $exclude_autoasign = 0;\n    public $pswd_updated = 0;\n    public $always_on = 0;\n    public $avatar = '';\n    public $cache_version = 0;\n    public $llogin = 0;\n    public $force_logout = 0;\n\n    public $attr_int_1 = 0;\n    public $attr_int_2 = 0;\n    public $attr_int_3 = 0;\n}\n\n?>", "<?php\r\nheader(\"Content-type: text/css\", true);\r\n\r\n/**\r\n * Refetches CSS as it was hosted on our server.\r\n * I can swear there is some bugs regarding relative CSS and base URL path.\r\n * This script is required if LHC is hosted on HTTPS but site itself is hosted on HTTP, because browser forbids downloading content from insecure site except images\r\n * themself\r\n * */\r\nif ($Params['user_parameters_unordered']['cobrowsemode'] == 'onlineuser'){\r\n    $ouser = erLhcoreClassModelChatOnlineUser::fetch($Params['user_parameters']['chat_id']);\r\n    $browse = erLhcoreClassCoBrowse::getBrowseInstanceByOnlineUser($ouser);\r\n} else {\r\n    $chat = erLhcoreClassChat::getSession()->load('erLhcoreClassModelChat', $Params['user_parameters']['chat_id']);\r\n    $browse = erLhcoreClassCoBrowse::getBrowseInstance($chat);\r\n}\r\n\r\n$base = trim($_GET['base']);\r\n\r\nif (!filter_var($base, FILTER_VALIDATE_URL)) {\r\n    exit;\r\n}\r\n\r\n$url = parse_url($base);\r\n\r\n// Only http/https supported\r\nif (!in_array($url['scheme'],['http','https']) || (isset($url['port']) && !in_array($url['port'],[80,443]))) {\r\n    exit;\r\n}\r\n\r\n// Some basic validation\r\nif (isset($url['host']) && $url['host'] != '' && strpos($_GET['css'], $_SERVER['HTTP_HOST']) === false) {\r\n\r\n    $urlCSS = parse_url($_GET['css']);\r\n\r\n    // Just our attempt to fix CSS, BaseURL, Relative path madness\r\n    if (! isset($urlCSS['host']) || $urlCSS['host'] == '') {\r\n        if (strpos($_GET['css'], '../') !== false) {            \r\n            $numberOfTime = substr_count($_GET['css'], '../');\r\n            $match = str_replace('../', '', $_GET['css']);  \r\n                      \r\n            $parts = explode('/', rtrim($_GET['base'],'/'));            \r\n            $imagePathToCss = array_slice($parts, 0, count($parts) - $numberOfTime);\r\n            \r\n            $urlCSSDownload = implode('/', $imagePathToCss) . $match;                      \r\n        } else {\r\n            $urlCSSDownload = $url['scheme'] . '://' . $url['host'] . '/' . ltrim($_GET['css'], '/');\r\n        }\r\n    } else {\r\n\r\n        if (!filter_var($_GET['css'], FILTER_VALIDATE_URL) || !in_array($urlCSS['scheme'],['http','https']) || (isset($urlCSS['port']) && !in_array($urlCSS['port'],[80,443]))) {\r\n            exit;\r\n        }\r\n\r\n        $urlCSSDownload = $_GET['css'];\r\n    }\r\n\r\n    $ch = curl_init();\r\n    curl_setopt($ch, CURLOPT_URL, $urlCSSDownload);\r\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 0);\r\n    curl_setopt($ch, CURLOPT_TIMEOUT, 5);\r\n    curl_setopt($ch, CURLOPT_REFERER, $_GET['base']);\r\n    curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.2) Gecko/20090729 Firefox/3.5.2 GTB5');\r\n    curl_setopt($ch, CURLOPT_HEADER, true);\r\n    $response = curl_exec($ch);\r\n\r\n    if (curl_errno($ch)) {   // should be 0\r\n        curl_close($ch);\r\n        exit;\r\n    }\r\n\r\n    $curl_info = curl_getinfo($ch);\r\n    $contentType = curl_getinfo($ch, CURLINFO_CONTENT_TYPE);\r\n    $header_size = $curl_info['header_size'];\r\n\r\n    $cssContent = substr($response, $header_size);\r\n\r\n    if ($contentType != 'text/css') {\r\n        exit;\r\n    }\r\n\r\n    if ($cssContent !== false) {        \r\n        if (preg_match_all(\"/url\\(\\s*[\\'|\\\"]?([A-Za-z0-9_\\-\\/\\.\\\\%?&#]+)[\\'|\\\"]?\\s*\\)/ix\", $cssContent, $urlMatches)) {\r\n            $urlMatches = array_unique($urlMatches[1]);\r\n            foreach ($urlMatches as $match) {\r\n                $match = str_replace('\\\\', '/', $match);\r\n                // Replace path if it is realtive\r\n                if (strpos($match, 'http') === false) {\r\n                    $appendMatch = '';\r\n                    $matchOriginal = $match;\r\n                    \r\n                    if (strpos($match, '?') !== false) {\r\n                        $matchParts = explode('?', $match);\r\n                        $match = $matchParts[0];\r\n                        $appendMatch = '?' . $matchParts[1];\r\n                    }\r\n                    \r\n                    // Fix relative path\r\n                    if (strpos($match, '../') !== false) {\r\n                        $numberOfTime = substr_count($match, '../');\r\n                        $match = str_replace('../', '', $match);\r\n                        \r\n                        $parts = explode('/', $_GET['css']);\r\n                        array_pop($parts);\r\n                        \r\n                        $imagePathToCss = array_slice($parts, 0, count($parts) - $numberOfTime);\r\n                        \r\n                        $cssContent = str_replace($matchOriginal, $url['scheme'] . '://' . str_replace('//', '/', $url['host'] . '/' . implode('/', $imagePathToCss) . '/' . $match . $appendMatch), $cssContent);\r\n                    } else { // Absolute path\r\n                        $cssContent = str_replace($matchOriginal, $url['scheme'] . '://' . str_replace('//', '/', $url['host'] . '/' . $match . $appendMatch), $cssContent);\r\n                    }\r\n                }\r\n            }\r\n        }        \r\n    }\r\n    echo $cssContent;\r\n}\r\n\r\nexit();\r\n?>", "<?php\r\n/**\r\n * php cron.php -s site_admin -c cron/test\r\n *\r\n * For various testing purposes\r\n *\r\n * */\r\n\r\n?>", "<?php\r\n\r\n$hash = (string)$Params['user_parameters']['hash'];\r\n$format = (string)$Params['user_parameters_unordered']['format'] == 'xml' ? 'xml' : 'json';\r\n\r\n$hashSecret = erLhcoreClassModelChatConfig::fetch('export_hash')->current_value;\r\n\r\ntry {\r\n\tif ( sha1('getchat'.$hashSecret) == $hash ) {\r\n\r\n\t\t$chat = erLhcoreClassModelChat::fetch((string)$Params['user_parameters']['chat_id']);\r\n\r\n\t\tif ($format =='json') {\r\n\t\t\t\theader('Content-type: application/json');\r\n\t\t\t\techo erLhcoreClassChatExport::chatExportJSON($chat);\r\n\t\t\texit;\r\n\t\t} else {\r\n\t\t\t\theader('Content-type: text/xml');\r\n\t\t\t\techo erLhcoreClassChatExport::chatExportXML($chat);\t\t\t\t\r\n\t\t\texit;\r\n\t\t}\r\n\r\n\t} else {\r\n\t\tthrow new Exception('Invalid hash.');\r\n\t}\r\n\r\n} catch (Exception $e) {\r\n\r\n\tif ($format =='json') {\r\n\t\theader('Content-type: application/json');\r\n\t\techo json_encode(array('error' => $e->getMessage()));\t\t\r\n\t\texit;\r\n\t} else {\r\n\t\theader('Content-type: text/xml');\r\n\t\techo '<?xml version=\"1.0\" encoding=\"utf-8\" ?>',\"<lhc><error><![CDATA[\".htmlspecialchars($e->getMessage()).\"]]></error></lhc>\";\t\r\n\t\texit;\r\n\t}\r\n}\r\n\r\nexit;\r\n\r\n?>", "<?php\r\n\r\n$hash = (string)$Params['user_parameters']['hash'];\r\n$format = (string)$Params['user_parameters_unordered']['format'] == 'xml' ? 'xml' : 'json';\r\n\r\n$hashSecret = erLhcoreClassModelChatConfig::fetch('export_hash')->current_value;\r\n\r\ntry {\r\n\tif ( sha1('getcount'.$hashSecret) == $hash ) {\r\n\r\n\t\t$filter = array();\r\n\r\n\t\tif (is_array($Params['user_parameters_unordered']['status'])){\r\n\t\t\tforeach ($Params['user_parameters_unordered']['status'] as $status) {\r\n\t\t\t\t$filter['filterin']['status'][] = (int)$status;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$totalChats = erLhcoreClassChat::getCount($filter);\r\n\r\n\t\tif ($format =='json') {\r\n\t\t\theader('Content-type: application/json');\r\n\t\t\techo json_encode(array('count' => $totalChats));\t\t\t\r\n\t\t\texit;\r\n\t\t} else {\r\n\t\t\theader('Content-type: text/xml');\r\n\t\t\techo '<?xml version=\"1.0\" encoding=\"utf-8\" ?>',\"<lhc><count>{$totalChats}</count></lhc>\";\t\t\t\t  \r\n\t\t\texit;\r\n\t\t}\r\n\r\n\t} else {\r\n\t\tthrow new Exception('Invalid hash.');\r\n\t}\r\n\r\n} catch (Exception $e) {\r\n\r\n\tif ($format =='json') {\r\n\t\theader('Content-type: application/json');\r\n\t\techo json_encode(array('error' => $e->getMessage()));\r\n\t\texit;\r\n\t} else {\r\n\t\theader('Content-type: text/xml');\r\n\t\techo '<?xml version=\"1.0\" encoding=\"utf-8\" ?>',\"<lhc><error><![CDATA[\".htmlspecialchars($e->getMessage()).\"]]></error></lhc>\";\r\n\t\texit;\r\n\t}\r\n}\r\n\r\nexit;\r\n\r\n?>", "<?php\r\n\r\n$hash = (string)$Params['user_parameters']['hash'];\r\n$format = (string)$Params['user_parameters_unordered']['format'] == 'xml' ? 'xml' : 'json';\r\n\r\n$hashSecret = erLhcoreClassModelChatConfig::fetch('export_hash')->current_value;\r\n\r\ntry {\r\n\tif ( sha1('getlist'.$hashSecret) == $hash ) {\r\n\r\n\t\t$filter = array();\r\n\r\n\t\tif (is_array($Params['user_parameters_unordered']['status'])){\r\n\t\t\tforeach ($Params['user_parameters_unordered']['status'] as $status) {\r\n\t\t\t\t$filter['filterin']['status'][] = (int)$status;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$totalChats = erLhcoreClassChat::getCount($filter);\r\n\r\n\t\t$pages = new lhPaginator();\r\n\t\t$pages->items_total = $totalChats;\r\n\t\t$pages->setItemsPerPage(is_numeric($Params['user_parameters_unordered']['limit']) ? (int)$Params['user_parameters_unordered']['limit'] : 100);\r\n\t\t$pages->paginate();\r\n\r\n\t\t$list = erLhcoreClassChat::getList(array_merge(array('offset' => $pages->low, 'limit' => $pages->items_per_page,'sort' => 'id DESC'),$filter));\r\n\r\n\t\tif ($format =='json') {\r\n\t\t\theader('Content-type: application/json');\r\n\t\t\techo json_encode(array('list' => array_keys($list)));\r\n\t\t\texit;\r\n\t\t} else {\r\n\t\t\theader('Content-type: text/xml');\r\n\t\t\techo '<?xml version=\"1.0\" encoding=\"utf-8\" ?><lhc>';\r\n\t\t\tforeach (array_keys($list) as $id) {\r\n\t\t\t\techo \"<item>{$id}</item>\";\r\n\t\t\t}\r\n\t\t\techo '</lhc>';\t\t\t\t  \r\n\t\t\texit;\r\n\t\t}\r\n\r\n\t} else {\r\n\t\tthrow new Exception('Invalid hash.');\r\n\t}\r\n\r\n} catch (Exception $e) {\r\n\r\n\tif ($format =='json') {\r\n\t\theader('Content-type: application/json');\r\n\t\techo json_encode(array('error' => $e->getMessage()));\t\t\r\n\t\texit;\r\n\t} else {\r\n\t\theader('Content-type: text/xml');\r\n\t\techo '<?xml version=\"1.0\" encoding=\"utf-8\" ?>',\"<lhc><error><![CDATA[\".htmlspecialchars($e->getMessage()).\"]]></error></lhc>\";\t\t\r\n\t\texit;\r\n\t}\r\n}\r\n\r\nexit;\r\n\r\n?>", "<?php\r\n\r\n$form = erLhAbstractModelForm::fetch((int)$Params['user_parameters']['form_id']);\r\n$items = erLhAbstractModelFormCollected::getList(array('filter' => array('form_id' => $form->id),'offset' => 0, 'limit' => 100000,'sort' => 'id ASC'));\r\n\r\ninclude 'lib/core/lhform/PHPExcel.php';\r\n\r\n$objPHPExcel = new PHPExcel();\r\n\r\n$objPHPExcel->setActiveSheetIndex(0);\r\n$objPHPExcel->getActiveSheet()->getStyle('A1:AW1')->getFont()->setBold(true);\r\n\r\n// Set width\r\nforeach ($form->xls_columns_data as $key => $data) {\r\n\tif (isset($data['width'])) {\r\n\t\t$objPHPExcel->getActiveSheet()->getColumnDimensionByColumn($key)->setWidth($data['width']);\r\n\t}\r\n}\r\n\r\n\r\n// Set header\r\n$i = 0;\r\nforeach ($form->xls_columns_data as $data) {\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, $data['name']);\r\n\t$i++;\r\n}\r\n\r\n$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('form/index','Date'));\r\n\r\n$i++;\r\n$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, 'IP');\r\n\r\n$i++;\r\n$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('form/index','Custom fields'));\r\n\r\n$i++;\r\n$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('form/index','Identifier'));\r\n\r\n// Set data\r\n$i = 2;\r\nforeach ($items as $item) {\t\r\n\t$y = 0;\r\n\tforeach ($form->xls_columns_data as $data) {\t\t\t\t\t\r\n\t\tif (isset($item->content_array[$data['attr_name']]['definition']['type']) && $item->content_array[$data['attr_name']]['definition']['type'] == 'file') {\t\t\t\r\n\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurldirect('user/login').'/(r)/'.rawurlencode(base64_encode('form/download/'.$item->id.'/'.$data['attr_name'])));\r\n\t\t} else {\r\n\t\t\tif (strpos($data['attr_name'], ',') === false){\r\n\t\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->content_array[$data['attr_name']]['value']);\r\n\t\t\t} else {\r\n\t\t\t\t$nameParts = explode(',', $data['attr_name']);\r\n\t\t\t\t$valuesPart = array();\r\n\t\t\t\tforeach ($nameParts as $part) {\r\n\t\t\t\t\t$valuesPart[] = isset($item->content_array[$part]['value']) ? $item->content_array[$part]['value'] : $part;\r\n\t\t\t\t}\r\n\t\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, implode('', $valuesPart));\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\t$y++;\r\n\t}\r\n\t\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->ctime_full_front);\r\n\r\n\t$y++;\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->ip);\r\n\r\n\t$y++;\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->custom_fields);\r\n\t\r\n\t$y++;\t\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->identifier);\r\n\t\r\n\t$i++;\t\t\r\n}\r\n\r\n$objPHPExcel->getActiveSheet()->setTitle('Report');\r\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\r\n\r\n// We'll be outputting an excel file\r\nheader('Content-type: application/vnd.ms-excel');\r\n\r\n// It will be called file.xls\r\nheader('Content-Disposition: attachment; filename=\"report.xlsx\"');\r\n\r\n// Write file to the browser\r\n$objWriter->save('php://output');\r\nexit;", "<?php\r\n\r\ntry {\r\n\t$item = erLhAbstractModelFormCollected::fetch((int)$Params['user_parameters']['collected_id']);\r\n\t\t\t\r\n\t$form = $item->form;\r\n\t\r\n\tinclude 'lib/core/lhform/PHPExcel.php';\r\n\r\n\r\n\t$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_to_phpTemp;\r\n\t$cacheSettings = array( 'memoryCacheSize ' => '64MB');\r\n\tPHPExcel_Settings::setCacheStorageMethod($cacheMethod, $cacheSettings);\r\n\r\n\t$objPHPExcel = new PHPExcel();\r\n\t\r\n\t$objPHPExcel->setActiveSheetIndex(0);\r\n\t$objPHPExcel->getActiveSheet()->getStyle('A1:AW1')->getFont()->setBold(true);\r\n\t\r\n\t// Set width\r\n\tforeach ($form->xls_columns_data as $key => $data) {\r\n\t\tif (isset($data['width'])) {\r\n\t\t\t$objPHPExcel->getActiveSheet()->getColumnDimensionByColumn($key)->setWidth($data['width']);\r\n\t\t}\r\n\t}\r\n\t\t\t\r\n\t// Set header\r\n\t$i = 0;\r\n\tforeach ($form->xls_columns_data as $data) {\r\n\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, $data['name']);\r\n\t\t$i++;\r\n\t}\r\n\t\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('form/index','Date'));\r\n\t$i++;\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, 'IP');\r\n\r\n\t$i++;\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('form/index','Custom fields'));\r\n\t\r\n\t$i++;\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('form/index','Identifier'));\r\n\t\t\r\n\t// Set data\r\n\t$i = 2;\t\r\n\t$y = 0;\r\n\tforeach ($form->xls_columns_data as $data) {\r\n\t\tif (isset($item->content_array[$data['attr_name']]['definition']['type']) && $item->content_array[$data['attr_name']]['definition']['type'] == 'file') {\r\n\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurldirect('user/login').'/(r)/'.rawurlencode(base64_encode('form/download/'.$item->id.'/'.$data['attr_name'])));\r\n\t\t} else {\r\n\t\t\tif (strpos($data['attr_name'], ',') === false){\r\n\t\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->content_array[$data['attr_name']]['value']);\r\n\t\t\t} else {\r\n\t\t\t\t$nameParts = explode(',', $data['attr_name']);\r\n\t\t\t\t$valuesPart = array();\r\n\t\t\t\tforeach ($nameParts as $part) {\r\n\t\t\t\t\t$valuesPart[] = isset($item->content_array[$part]['value']) ? $item->content_array[$part]['value'] : $part;\r\n\t\t\t\t}\r\n\t\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, implode('', $valuesPart));\r\n\t\t\t}\r\n\t\t}\r\n\t\t$y++;\r\n\t}\r\n\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->ctime_full_front);\r\n\t$y++;\r\n\t\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->ip);\t\r\n\t$y++;\r\n\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->custom_fields);\r\n\t$y++;\r\n\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->identifier);\t\r\n\t$y++;\r\n\t\r\n\t$objPHPExcel->getActiveSheet()->setTitle('Report');\r\n\t$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\r\n\t\t\t\r\n\t$objWriter->save('var/storageform/'.$item->id.'-report.xlsx');\r\n\t\t\t\r\n\t$zip = new ZipArchive();\r\n\t$zip->open('var/storageform/'.$item->id.'-temp.zip',ZIPARCHIVE::CREATE | ZIPARCHIVE::OVERWRITE);\r\n\t$zip->addFile('var/storageform/'.$item->id.'-report.xlsx','report.xlsx');\r\n\t\t\t\r\n\tforeach ($item->content_array as $key => $content) {\r\n\t\tif ($content['definition']['type'] == 'file') {\t\t\t\t\r\n\t\t\t$array = explode('.',$content['value']['name']);\r\n\t\t\t$ext = end($array);\r\n\r\n\t\t\t$response = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('form.file.download', array('filename' => $content['filename']));\r\n\t\t\t\r\n\t\t\t// There was no callbacks or file not found etc, we try to download from standard location\r\n\t\t\tif ($response === false) {\r\n\t\t\t\t$zip->addFile( $content['filepath'] . $content['filename'],$key.'.'.$ext);\r\n\t\t\t} else {\r\n\t\t\t\t$zip->addFromString($key.'.'.$ext, $response['filedata']);\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\t\t\r\n\t} \r\n\r\n\t$zip->close();\r\n\t\t\t\r\n\theader(\"Content-type: application/octet-stream\");\r\n\theader(\"Content-Disposition: attachment; filename=\\\"export-{$item->id}.zip\\\"\");\r\n\techo file_get_contents('var/storageform/'.$item->id.'-temp.zip');\r\n\tunlink('var/storageform/'.$item->id.'-temp.zip');\r\n\tunlink('var/storageform/'.$item->id.'-report.xlsx');\r\n\texit;\r\n\r\n} catch (Exception $e) {\r\n\theader('Location: /');\r\n\texit;\r\n}\r\nexit;\r\n\r\n?>", "<?php\n\ntry {\n\n    $cfgSite = erConfigClassLhConfig::getInstance();\n\n    if ($cfgSite->getSetting( 'site', 'installed' ) == true)\n    {\n        $Params['module']['functions'] = array('install');\n        include_once('modules/lhkernel/nopermission.php');\n\n        $Result['pagelayout'] = 'install';\n        $Result['path'] = array(array('title' => 'Live helper chat installation'));\n        return $Result;\n\n        exit;\n    }\n\n    $instance = erLhcoreClassSystem::instance();\n\n    if ($instance->SiteAccess != 'site_admin') {\n        header('Location: ' .erLhcoreClassDesign::baseurldirect('site_admin/install/install') );\n        exit;\n    }\n\n    $tpl = new erLhcoreClassTemplate( 'lhinstall/install1.tpl.php');\n\n    switch ((int)$Params['user_parameters']['step_id']) {\n\n        case '1':\n            $Errors = array();\n            if (!is_writable(\"cache/cacheconfig\"))\n                $Errors[] = \"cache/cacheconfig is not writable\";\n\n            if (!is_writable(\"settings/\"))\n                $Errors[] = \"settings/ is not writable\";\n\n            if (!is_writable(\"cache/translations\"))\n                $Errors[] = \"cache/translations is not writable\";\n\n            if (!is_writable(\"cache/userinfo\"))\n                $Errors[] = \"cache/userinfo is not writable\";\n\n            if (!is_writable(\"cache/compiledtemplates\"))\n                $Errors[] = \"cache/compiledtemplates is not writable\";\n\n            if (!is_writable(\"var/storage\"))\n                $Errors[] = \"var/storage is not writable\";\n\n            if (!is_writable(\"var/storageform\"))\n                $Errors[] = \"var/storageform is not writable\";\n\n            if (!is_writable(\"var/userphoto\"))\n                $Errors[] = \"var/userphoto is not writable\";\n\n            if (!is_writable(\"var/tmpfiles\"))\n                $Errors[] = \"var/tmpfiles is not writable\";\n\n            if (!is_writable(\"var/storagetheme\"))\n                $Errors[] = \"var/storagetheme is not writable\";\n\n            if (!is_writable(\"var/botphoto\"))\n                $Errors[] = \"var/botphoto is not writable\";\n\n            if (!is_writable(\"var/bottrphoto\"))\n                $Errors[] = \"var/bottrphoto is not writable\";\n\n            if (!is_writable(\"var/storageinvitation\"))\n                $Errors[] = \"var/storageinvitation is not writable\";\n\n            if (!is_writable(\"var/storageadmintheme\"))\n                $Errors[] = \"var/storageadmintheme is not writable\";\n\n            if (!extension_loaded ('pdo_mysql' ))\n                $Errors[] = \"php-pdo extension not detected. Please install php extension\";\n\n            if (!extension_loaded('curl'))\n                $Errors[] = \"php_curl extension not detected. Please install php extension\";\n\n            if (!extension_loaded('mbstring'))\n                $Errors[] = \"mbstring extension not detected. Please install php extension\";\n\n            if (!extension_loaded('gd'))\n                $Errors[] = \"gd extension not detected. Please install php extension\";\n\n            if (!function_exists('json_encode'))\n                $Errors[] = \"json support not detected. Please install php extension\";\n\n            if (!function_exists('simplexml_load_string'))\n                $Errors[] = \"XML support not detected. Please install php-xml extension\";\n\n            if (version_compare(PHP_VERSION, '5.4.0','<')) {\n                $Errors[] = \"Minimum 5.4.0 PHP version is required\";\n            }\n\n            if (count($Errors) == 0){\n                $tpl->setFile('lhinstall/install2.tpl.php');\n            }\n            break;\n\n        case '2':\n            $Errors = array();\n\n            $definition = array(\n                'DatabaseUsername' => new ezcInputFormDefinitionElement(\n                    ezcInputFormDefinitionElement::REQUIRED, 'unsafe_raw'\n                ),\n                'DatabasePassword' => new ezcInputFormDefinitionElement(\n                    ezcInputFormDefinitionElement::REQUIRED, 'unsafe_raw'\n                ),\n                'DatabaseHost' => new ezcInputFormDefinitionElement(\n                    ezcInputFormDefinitionElement::REQUIRED, 'string'\n                ),\n                'DatabasePort' => new ezcInputFormDefinitionElement(\n                    ezcInputFormDefinitionElement::REQUIRED, 'int'\n                ),\n                'DatabaseDatabaseName' => new ezcInputFormDefinitionElement(\n                    ezcInputFormDefinitionElement::REQUIRED, 'string'\n                ),\n            );\n\n            $form = new ezcInputForm( INPUT_POST, $definition );\n\n\n            if ( !$form->hasValidData( 'DatabaseUsername' ) )\n            {\n                $Errors[] = 'Please enter database username';\n            }\n\n            if ( !$form->hasValidData( 'DatabasePassword' ) )\n            {\n                $Errors[] = 'Please enter database password';\n            }\n\n            if ( !$form->hasValidData( 'DatabaseHost' ) || $form->DatabaseHost == '' )\n            {\n                $Errors[] = 'Please enter database host';\n            }\n\n            if ( !$form->hasValidData( 'DatabasePort' ) || $form->DatabasePort == '' )\n            {\n                $Errors[] = 'Please enter database post';\n            }\n\n            if ( !$form->hasValidData( 'DatabaseDatabaseName' ) || $form->DatabaseDatabaseName == '' )\n            {\n                $Errors[] = 'Please enter database name';\n            }\n\n            if (count($Errors) == 0)\n            {\n                try {\n                    $db = ezcDbFactory::create( \"mysql://{$form->DatabaseUsername}:{$form->DatabasePassword}@{$form->DatabaseHost}:{$form->DatabasePort}/{$form->DatabaseDatabaseName}\" );\n                } catch (Exception $e) {\n                    $Errors[] = 'Cannot login with provided logins. Returned message: <br/>'.$e->getMessage();\n                }\n            }\n\n            if (count($Errors) == 0){\n\n                $cfgSite = erConfigClassLhConfig::getInstance();\n                $cfgSite->setSetting( 'db', 'host', $form->DatabaseHost);\n                $cfgSite->setSetting( 'db', 'user', $form->DatabaseUsername);\n                $cfgSite->setSetting( 'db', 'password', $form->DatabasePassword);\n                $cfgSite->setSetting( 'db', 'database', $form->DatabaseDatabaseName);\n                $cfgSite->setSetting( 'db', 'port', $form->DatabasePort);\n                $cfgSite->setSetting( 'site', 'secrethash', (!empty(getenv('LHC_SECRET_HASH')) ? getenv('LHC_SECRET_HASH') : erLhcoreClassChat::generateHash(80)));\n                $cfgSite->save();\n\n                $tpl->setFile('lhinstall/install3.tpl.php');\n            } else {\n\n                $tpl->set('db_username',$form->DatabaseUsername);\n                $tpl->set('db_password',$form->DatabasePassword);\n                $tpl->set('db_host',$form->DatabaseHost);\n                $tpl->set('db_port',$form->DatabasePort);\n                $tpl->set('db_name',$form->DatabaseDatabaseName);\n\n                $tpl->set('errors',$Errors);\n                $tpl->setFile('lhinstall/install2.tpl.php');\n            }\n            break;\n\n        case '3':\n\n            $Errors = array();\n\n            if ($_SERVER['REQUEST_METHOD'] == 'POST')\n            {\n                $definition = array(\n                    'AdminUsername' => new ezcInputFormDefinitionElement(\n                        ezcInputFormDefinitionElement::REQUIRED, 'unsafe_raw'\n                    ),\n                    'AdminPassword' => new ezcInputFormDefinitionElement(\n                        ezcInputFormDefinitionElement::REQUIRED, 'unsafe_raw'\n                    ),\n                    'AdminPassword1' => new ezcInputFormDefinitionElement(\n                        ezcInputFormDefinitionElement::REQUIRED, 'unsafe_raw'\n                    ),\n                    'AdminEmail' => new ezcInputFormDefinitionElement(\n                        ezcInputFormDefinitionElement::REQUIRED, 'validate_email'\n                    ),\n                    'AdminName' => new ezcInputFormDefinitionElement(\n                        ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\n                    ),\n                    'AdminSurname' => new ezcInputFormDefinitionElement(\n                        ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\n                    ),\n                    'DefaultDepartament' => new ezcInputFormDefinitionElement(\n                        ezcInputFormDefinitionElement::REQUIRED, 'string'\n                    )\n                );\n\n                $form = new ezcInputForm( INPUT_POST, $definition );\n\n\n                if ( !$form->hasValidData( 'AdminUsername' ) || $form->AdminUsername == '')\n                {\n                    $Errors[] = 'Please enter admin username';\n                }\n\n                if ($form->hasValidData( 'AdminUsername' ) && $form->AdminUsername != '' && strlen($form->AdminUsername) > 40)\n                {\n                    $Errors[] = 'Maximum 40 characters for admin username';\n                }\n\n                if ( !$form->hasValidData( 'AdminPassword' ) || $form->AdminPassword == '')\n                {\n                    $Errors[] = 'Please enter admin password';\n                }\n\n                if ($form->hasValidData( 'AdminPassword' ) && $form->AdminPassword != '' && strlen($form->AdminPassword) > 40)\n                {\n                    $Errors[] = 'Maximum 40 characters for admin password';\n                }\n\n                if ($form->hasValidData( 'AdminPassword' ) && $form->AdminPassword != '' && strlen($form->AdminPassword) <= 40 && $form->AdminPassword1 != $form->AdminPassword)\n                {\n                    $Errors[] = 'Passwords missmatch';\n                }\n\n\n                if ( !$form->hasValidData( 'AdminEmail' ) )\n                {\n                    $Errors[] = 'Wrong email address';\n                }\n\n\n                if ( !$form->hasValidData( 'DefaultDepartament' ) || $form->DefaultDepartament == '')\n                {\n                    $Errors[] = 'Please enter default department name';\n                }\n\n                if (count($Errors) == 0) {\n\n                    $tpl->set('admin_username',$form->AdminUsername);\n                    $adminEmail = '';\n                    if ( $form->hasValidData( 'AdminEmail' ) ) {\n                        $tpl->set('admin_email',$form->AdminEmail);\n                        $adminEmail = $form->AdminEmail;\n                    }\n                    $tpl->set('admin_name',$form->AdminName);\n                    $tpl->set('admin_surname',$form->AdminSurname);\n                    $tpl->set('admin_departament',$form->DefaultDepartament);\n\n                    /*DATABASE TABLES SETUP*/\n                    $db = ezcDbInstance::get();\n\n                    try {\n                        $db->query(\"set global innodb_large_prefix = 1\");\n                    } catch (Exception $e) {\n                        // Just ignore if not succeed\n                    }\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat` (\n\t\t\t\t  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `nick` varchar(100) NOT NULL,\n\t\t\t\t  `status` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `status_sub` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `status_sub_sub` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `time` int(11) NOT NULL,\n\t\t\t\t  `user_id` int(11) NOT NULL,\n\t\t\t\t  `hash` varchar(40) NOT NULL,\n\t\t\t\t  `referrer` text NOT NULL,\n        \t   \t  `session_referrer` text NOT NULL,\n        \t   \t  `chat_variables` text NOT NULL,\n        \t   \t  `remarks` text NOT NULL,\n\t\t\t\t  `ip` varchar(100) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\t\t\t\t \n\t\t\t\t  `invitation_id` int(11) NOT NULL,\t\t\t\t \n\t\t\t\t  `sender_user_id` int(11) NOT NULL,\n\t\t\t\t  `product_id` int(11) NOT NULL,\n\t\t\t\t  `pnd_time` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `cls_time` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `usaccept` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `user_status` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `user_closed_ts` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `support_informed` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `unread_messages_informed` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `reinform_timeout` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `last_op_msg_time` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `has_unread_op_messages` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `unread_op_messages_informed` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `email` varchar(100) NOT NULL,\n\t\t\t\t  `country_code` varchar(100) NOT NULL,\n\t\t\t\t  `country_name` varchar(100) NOT NULL,\n\t\t\t\t  `unanswered_chat` int(11) NOT NULL,\n\t\t\t\t  `cls_us` tinyint(1) NOT NULL DEFAULT '0',\n\t\t\t\t  `anonymized` tinyint(1) NOT NULL,\n\t\t\t\t  `user_typing` int(11) NOT NULL,\n\t\t\t\t  `gbot_id` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `user_typing_txt` varchar(200) NOT NULL,\n\t\t\t\t  `operator_typing` int(11) NOT NULL,\n        \t   \t  `operator_typing_id` int(11) NOT NULL,\n\t\t\t\t  `phone` varchar(100) NOT NULL,\n\t\t\t\t  `has_unread_messages` int(11) NOT NULL,\n\t\t\t\t  `last_user_msg_time` int(11) NOT NULL,\n\t\t\t\t  `fbst` tinyint(1) NOT NULL,\n\t\t\t\t  `online_user_id` int(11) NOT NULL,\n\t\t\t\t  `auto_responder_id` int(11) NOT NULL,\n\t\t\t\t  `last_msg_id` int(11) NOT NULL,\n\t\t\t\t  `lsync` int(11) NOT NULL,\n\t\t\t\t  `transfer_uid` int(11) NOT NULL,\n\t\t\t\t  `additional_data` text NOT NULL,\t\t\t\t  \n\t\t\t\t  `user_tz_identifier` varchar(50) NOT NULL,\n\t\t\t\t  `lat` varchar(10) NOT NULL,\n\t\t\t\t  `lon` varchar(10) NOT NULL,\n\t\t\t\t  `city` varchar(100) NOT NULL,\n\t\t\t\t  `operation` text NOT NULL,\n\t\t\t\t  `operation_admin` varchar(200) NOT NULL,\n\t\t\t\t  `status_sub_arg` varchar(200) NOT NULL,\n\t\t\t\t  `uagent` varchar(250) NOT NULL,\n\t\t\t\t  `chat_locale` varchar(10) NOT NULL,\n\t\t\t\t  `chat_locale_to` varchar(10) NOT NULL,\n\t\t\t\t  `mail_send` int(11) NOT NULL,\n        \t   \t  `screenshot_id` int(11) NOT NULL,\n        \t   \t  `wait_time` int(11) NOT NULL,\n  \t\t\t\t  `chat_duration` int(11) NOT NULL,\n  \t\t\t\t  `tslasign` int(11) NOT NULL,\n        \t   \t  `priority` int(11) NOT NULL,\n        \t   \t  `chat_initiator` int(11) NOT NULL,\n        \t   \t  `transfer_timeout_ts` int(11) NOT NULL,\n        \t   \t  `transfer_timeout_ac` int(11) NOT NULL,\n        \t   \t  `transfer_if_na` int(11) NOT NULL,\n        \t   \t  `na_cb_executed` int(11) NOT NULL,\n        \t   \t  `device_type` int(11) NOT NULL,\n        \t   \t  `nc_cb_executed` tinyint(1) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `status_user_id` (`status`,`user_id`),\n\t\t\t\t  KEY `unanswered_chat` (`unanswered_chat`),\n\t\t\t\t  KEY `online_user_id` (`online_user_id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `product_id` (`product_id`),\n\t\t\t\t  KEY `unread_operator` (`has_unread_op_messages`,`unread_op_messages_informed`),\n\t\t\t\t  KEY `user_id_sender_user_id` (`user_id`,`sender_user_id`),\n\t\t\t\t  KEY `sender_user_id` (`sender_user_id`),\n\t\t\t\t  KEY `anonymized` (`anonymized`),\n\t\t\t\t  KEY `has_unread_messages` (`has_unread_messages`),\n\t\t\t\t  KEY `status` (`status`),\n\t\t\t\t  KEY `nick` (`nick`),\n\t\t\t\t  KEY `email` (`email`),\n\t\t\t\t  KEY `phone` (`phone`),\n\t\t\t\t  KEY `dep_id_status` (`dep_id`,`status`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n               $db->query(\"CREATE TABLE `lh_chat_blocked_user` (\n                  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `ip` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `user_id` bigint(20) unsigned NOT NULL,\n                  `datets` bigint(20) unsigned NOT NULL,\n                  `chat_id` bigint(20) unsigned NOT NULL,\n                  `dep_id` bigint(20) unsigned NOT NULL,\n                  `nick` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `btype` tinyint(1) NOT NULL DEFAULT 0,\n                  `expires` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  `online_user_id` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  PRIMARY KEY (`id`),\n                  KEY `ip` (`ip`),\n                  KEY `nick` (`nick`),\n                  KEY `online_user_id` (`online_user_id`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_users_online_session` ( \n        \t       `id` bigint(20) NOT NULL AUTO_INCREMENT, \n        \t       `user_id` int(11) NOT NULL, \n        \t       `time` int(11) NOT NULL, \n        \t       `duration` int(11) NOT NULL, \n        \t       `lactivity` int(11) NOT NULL, \n        \t       PRIMARY KEY (`id`), \n        \t       KEY `user_id_lactivity` (`user_id`, `lactivity`), KEY `lactivity` (`lactivity`) ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_chat_start_settings` ( \n        \t       `id` int(11) NOT NULL AUTO_INCREMENT, \n        \t       `name` varchar(50) NOT NULL, \n        \t       `data` longtext NOT NULL, \n        \t       `department_id` int(11) NOT NULL, \n        \t       PRIMARY KEY (`id`), \n        \t       KEY `department_id` (`department_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_chat_event_track` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL, `data` longtext NOT NULL, `department_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `department_id` (`department_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_archive_range` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `range_from` int(11) NOT NULL,\n        \t   `range_to` int(11) NOT NULL,\n        \t   `year_month` int(11) NOT NULL,\n        \t   `older_than` int(11) NOT NULL,\n        \t   `last_id` int(11) NOT NULL,\n        \t   `first_id` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_notification_subscriber` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `online_user_id` bigint(20) NOT NULL, `dep_id` int(11) NOT NULL, `theme_id` int(11) NOT NULL, `ctime` int(11) NOT NULL, `utime` int(11) NOT NULL, `status` int(11) NOT NULL, `params` text NOT NULL, `device_type` tinyint(1) NOT NULL,`subscriber_hash` varchar(50) NOT NULL, `uagent` varchar(250) NOT NULL, `ip` varchar(250) NOT NULL, `last_error` text NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`), KEY `dep_id` (`dep_id`), KEY `online_user_id` (`online_user_id`), KEY `subscriber_hash` (`subscriber_hash`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_auto_responder` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `siteaccess` varchar(3) NOT NULL,\n                  `wait_message` text NOT NULL,\n                  `wait_timeout` int(11) NOT NULL,\n                  `position` int(11) NOT NULL,\n                  `timeout_message` text NOT NULL,\n                  `bot_configuration` text NOT NULL,\n                  `name` varchar(50) NOT NULL,\n                  `operator` varchar(50) NOT NULL,\n                  `dep_id` int(11) NOT NULL,\n                  `user_id` int(11) NOT NULL,\n                  `only_proactive` int(11) NOT NULL,\n                  `repeat_number` int(11) NOT NULL DEFAULT '1',\n                  `survey_timeout` int(11) NOT NULL DEFAULT '0',\n                  `survey_id` int(11) NOT NULL DEFAULT '0',\n                  `wait_timeout_hold_1` int(11) NOT NULL,\n                  `wait_timeout_hold_2` int(11) NOT NULL,\n                  `wait_timeout_hold_3` int(11) NOT NULL,\n                  `wait_timeout_hold_4` int(11) NOT NULL,\n                  `wait_timeout_hold_5` int(11) NOT NULL,\n                  `timeout_hold_message_1` text NOT NULL,\n                  `timeout_hold_message_2` text NOT NULL,\n                  `timeout_hold_message_3` text NOT NULL,\n                  `timeout_hold_message_4` text NOT NULL,\n                  `timeout_hold_message_5` text NOT NULL,\n                  `wait_timeout_hold` text NOT NULL,\n                  `wait_timeout_2` int(11) NOT NULL,\n                  `timeout_message_2` text NOT NULL,\n                  `wait_timeout_3` int(11) NOT NULL,\n                  `timeout_message_3` text NOT NULL,\n                  `wait_timeout_4` int(11) NOT NULL,\n                  `timeout_message_4` text NOT NULL,\n                  `wait_timeout_5` int(11) NOT NULL,\n                  `timeout_message_5` text NOT NULL,\n                  `wait_timeout_reply_1` int(11) NOT NULL,\n                  `timeout_reply_message_1` text NOT NULL,\n                  `wait_timeout_reply_2` int(11) NOT NULL,\n                  `timeout_reply_message_2` text NOT NULL,\n                  `wait_timeout_reply_3` int(11) NOT NULL,\n                  `timeout_reply_message_3` text NOT NULL,\n                  `wait_timeout_reply_4` int(11) NOT NULL,\n                  `timeout_reply_message_4` text NOT NULL,\n                  `wait_timeout_reply_5` int(11) NOT NULL,\n                  `timeout_reply_message_5` text NOT NULL,\n                  `languages` text NOT NULL,\n                  `ignore_pa_chat` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `siteaccess_position` (`siteaccess`,`position`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_widget_theme` (\n                      `id` int(11) NOT NULL AUTO_INCREMENT,\n                      `name` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `name_company` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `onl_bcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `bor_bcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'e3e3e3',\n                      `text_color` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `online_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `online_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `offline_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `offline_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `logo_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `logo_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `header_background` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_tcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_bcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_border` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_close_bg` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_hover_bg` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_close_hover_bg` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `custom_status_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `custom_container_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `custom_widget_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_header` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `online_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `offline_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `widget_border_color` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `copyright_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `copyright_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `widget_copyright_url` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `show_copyright` int(11) NOT NULL DEFAULT 1,\n                      `explain_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `intro_operator_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `operator_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `operator_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `minimize_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `minimize_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `restore_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `restore_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `close_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `close_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `popup_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `popup_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `hide_close` int(11) NOT NULL,\n                      `hide_popup` int(11) NOT NULL,\n                      `header_height` int(11) NOT NULL,\n                      `header_padding` int(11) NOT NULL,\n                      `widget_border_width` int(11) NOT NULL,\n                      `support_joined` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `support_closed` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `pending_join` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `noonline_operators` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `noonline_operators_offline` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `show_need_help` int(11) NOT NULL DEFAULT 1,\n                      `show_need_help_timeout` int(11) NOT NULL DEFAULT 24,\n                      `show_voting` tinyint(1) NOT NULL DEFAULT 1,\n                      `department_title` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `department_select` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `buble_visitor_background` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `buble_visitor_title_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `buble_visitor_text_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `buble_operator_background` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `buble_operator_title_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `buble_operator_text_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `custom_popup_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `hide_ts` int(11) NOT NULL,\n                      `widget_response_width` int(11) NOT NULL,\n                      `show_need_help_delay` int(11) NOT NULL,\n                      `show_status_delay` int(11) NOT NULL,\n                      `modern_look` tinyint(1) NOT NULL DEFAULT 0,\n                      `bot_status_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `bot_configuration` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `notification_configuration` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `pending_join_queue` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `modified` int(11) NOT NULL,\n                      `widget_show_leave_form` tinyint(1) NOT NULL,\n                      `enable_widget_embed_override` tinyint(1) NOT NULL,\n                      `widget_popheight` int(11) NOT NULL,\n                      `widget_popwidth` int(11) NOT NULL,\n                      `widget_survey` int(11) NOT NULL,\n                      `widget_position` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `widget_pright` int(11) NOT NULL,\n                      `widget_pbottom` int(11) NOT NULL,\n                      `alias` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      PRIMARY KEY (`id`),\n                      KEY `alias` (`alias`)\n                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_faq` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `question` varchar(250) NOT NULL,\n\t\t\t\t  `answer` text NOT NULL,\n\t\t\t\t  `url` varchar(250) NOT NULL,\n\t\t\t\t  `email` varchar(50) NOT NULL,\n\t\t\t\t  `identifier` varchar(10) NOT NULL,\n\t\t\t\t  `active` int(11) NOT NULL,\n\t\t\t\t  `has_url` tinyint(1) NOT NULL,\n\t\t\t\t  `is_wildcard` tinyint(1) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `active` (`active`),\n\t\t\t\t  KEY `active_url_2` (`active`,`url`(191)),\n\t\t\t\t  KEY `has_url` (`has_url`),\n\t\t\t\t  KEY `identifier` (`identifier`),\n\t\t\t\t  KEY `is_wildcard` (`is_wildcard`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                    $db->query(\"CREATE TABLE `lh_group_chat` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `name` varchar(50) NOT NULL,\n  `status` int(11) NOT NULL,\n  `time` int(11) NOT NULL,\n  `user_id` int(11) NOT NULL,\n  `chat_id` bigint(20) NOT NULL DEFAULT 0,\n  `last_msg_op_id` bigint(20) NOT NULL,\n  `last_msg` varchar(200) NOT NULL,\n  `last_user_msg_time` int(11) NOT NULL,\n  `last_msg_id` bigint(20) NOT NULL,\n  `type` tinyint(1) NOT NULL DEFAULT 0,\n  `tm` int(11) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `user_id` (`user_id`),\n  KEY `chat_id` (`chat_id`),\n  KEY `type` (`type`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_group_msg` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `msg` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n  `time` int(11) NOT NULL,\n  `chat_id` int(11) NOT NULL DEFAULT 0,\n  `user_id` int(11) NOT NULL DEFAULT 0,\n  `name_support` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `meta_msg` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `chat_id_id` (`chat_id`,`id`),\n  KEY `user_id` (`user_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_group_chat_member` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `user_id` bigint(20) NOT NULL,\n  `group_id` bigint(20) NOT NULL,\n  `last_activity` int(11) NOT NULL,\n  `last_msg_id` bigint(20) NOT NULL DEFAULT 0,\n  `type` tinyint(1) NOT NULL DEFAULT 0,\n  `jtime` int(11) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `group_id` (`group_id`),\n  KEY `user_id` (`user_id`),\n  KEY `type` (`type`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_cobrowse` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `chat_id` int(11) NOT NULL,\n        \t   `online_user_id` int(11) NOT NULL,\n        \t   `mtime` int(11) NOT NULL,\n        \t   `url` varchar(250) NOT NULL,\n        \t   `initialize` longtext NOT NULL,\n        \t   `modifications` longtext NOT NULL,\n        \t   `finished` tinyint(1) NOT NULL,\n        \t   `w` int NOT NULL,\n\t\t\t   `wh` int NOT NULL,\n\t\t\t   `x` int NOT NULL,\n\t\t\t   `y` int NOT NULL,        \t   \t\t\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `chat_id` (`chat_id`),\n        \t   KEY `online_user_id` (`online_user_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_survey` (\n        \t      `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `name` varchar(250) NOT NULL,\n                  `feedback_text` text NOT NULL,\n                  `max_stars_1_title` varchar(250) NOT NULL,\n                  `max_stars_1_pos` int(11) NOT NULL,\n                  `max_stars_2_title` varchar(250) NOT NULL,\n                  `max_stars_2_pos` int(11) NOT NULL,\n                  `max_stars_2` int(11) NOT NULL,\n                  `max_stars_3_title` varchar(250) NOT NULL,\n                  `max_stars_3_pos` int(11) NOT NULL,\n                  `max_stars_3` int(11) NOT NULL,\n                  `max_stars_4_title` varchar(250) NOT NULL,\n                  `max_stars_4_pos` int(11) NOT NULL,\n                  `max_stars_4` int(11) NOT NULL,\n                  `max_stars_5_title` varchar(250) NOT NULL,\n                  `max_stars_5_pos` int(11) NOT NULL,\n                  `max_stars_5` int(11) NOT NULL,\n                  `question_options_1` varchar(250) NOT NULL,\n                  `question_options_1_items` text NOT NULL,\n                  `question_options_1_pos` int(11) NOT NULL,\n                  `question_options_2` varchar(250) NOT NULL,\n                  `question_options_2_items` text NOT NULL,\n                  `question_options_2_pos` int(11) NOT NULL,\n                  `question_options_3` varchar(250) NOT NULL,\n                  `question_options_3_items` text NOT NULL,\n                  `question_options_3_pos` int(11) NOT NULL,\n                  `question_options_4` varchar(250) NOT NULL,\n                  `question_options_4_items` text NOT NULL,\n                  `question_options_4_pos` int(11) NOT NULL,\n                  `question_options_5` varchar(250) NOT NULL,\n                  `question_options_5_items` text NOT NULL,\n                  `question_options_5_pos` int(11) NOT NULL,\n                  `question_plain_1` text NOT NULL,\n                  `question_plain_1_pos` int(11) NOT NULL,\n                  `question_plain_2` text NOT NULL,\n                  `question_plain_2_pos` int(11) NOT NULL,\n                  `question_plain_3` text NOT NULL,\n                  `question_plain_3_pos` int(11) NOT NULL,\n                  `question_plain_4` text NOT NULL,\n                  `question_plain_4_pos` int(11) NOT NULL,\n                  `question_plain_5` text NOT NULL,\n                  `question_plain_5_pos` int(11) NOT NULL,\n                  `max_stars_1_enabled` int(11) NOT NULL,\n                  `max_stars_2_enabled` int(11) NOT NULL,\n                  `max_stars_3_enabled` int(11) NOT NULL,\n                  `max_stars_4_enabled` int(11) NOT NULL,\n                  `max_stars_5_enabled` int(11) NOT NULL,\n                  `question_options_1_enabled` int(11) NOT NULL,\n                  `question_options_2_enabled` int(11) NOT NULL,\n                  `question_options_3_enabled` int(11) NOT NULL,\n                  `question_options_4_enabled` int(11) NOT NULL,\n                  `question_options_5_enabled` int(11) NOT NULL,\n                  `question_plain_1_enabled` int(11) NOT NULL,\n                  `question_plain_2_enabled` int(11) NOT NULL,\n                  `question_plain_3_enabled` int(11) NOT NULL,\n                  `question_plain_4_enabled` int(11) NOT NULL,\n                  `question_plain_5_enabled` int(11) NOT NULL,\n                  `max_stars_1` int(11) NOT NULL,\n                  `max_stars_1_req` int(11) NOT NULL,\n                  `max_stars_2_req` int(11) NOT NULL,\n                  `max_stars_3_req` int(11) NOT NULL,\n                  `max_stars_4_req` int(11) NOT NULL,\n                  `max_stars_5_req` int(11) NOT NULL,\n                  `question_options_1_req` int(11) NOT NULL,\n                  `question_options_2_req` int(11) NOT NULL,\n                  `question_options_3_req` int(11) NOT NULL,\n                  `question_options_4_req` int(11) NOT NULL,\n                  `question_options_5_req` int(11) NOT NULL,\n                  `question_plain_1_req` int(11) NOT NULL,\n                  `question_plain_2_req` int(11) NOT NULL,\n                  `question_plain_3_req` int(11) NOT NULL,\n                  `question_plain_4_req` int(11) NOT NULL,\n                  `question_plain_5_req` int(11) NOT NULL,\n                  `configuration` longtext NOT NULL,\n                  PRIMARY KEY (`id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n                    $db->query(\"CREATE TABLE `lh_admin_theme` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `name` varchar(100) NOT NULL,\n        \t       `static_content` longtext NOT NULL,\n        \t       `static_js_content` longtext NOT NULL,\n        \t       `static_css_content` longtext NOT NULL,\n        \t       `css_attributes` longtext NOT NULL,\n        \t       `header_content` text NOT NULL,\n        \t       `user_id` int(11) NOT NULL, \n        \t       `header_css` text NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `user_id` (`user_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n                    $db->query(\"CREATE TABLE `lh_chat_paid` ( \n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,  \n        \t       `hash` varchar(250) NOT NULL,  \n        \t       `chat_id` int(11) NOT NULL, \n        \t        PRIMARY KEY (`id`),  \n        \t       KEY `hash` (`hash`(191)),  \n        \t       KEY `chat_id` (`chat_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_survey_item` (\n        \t      `id` bigint(20) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `survey_id` int(11) NOT NULL,\n\t\t\t\t  `status` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `chat_id` int(11) NOT NULL,\n\t\t\t\t  `user_id` int(11) NOT NULL,\n\t\t\t\t  `ftime` int(11) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `max_stars_1` int(11) NOT NULL,\n\t\t\t\t  `max_stars_2` int(11) NOT NULL,\n\t\t\t\t  `max_stars_3` int(11) NOT NULL,\n\t\t\t\t  `max_stars_4` int(11) NOT NULL,\n\t\t\t\t  `max_stars_5` int(11) NOT NULL,\n\t\t\t\t  `question_options_1` int(11) NOT NULL,\n\t\t\t\t  `question_options_2` int(11) NOT NULL,\n\t\t\t\t  `question_options_3` int(11) NOT NULL,\n\t\t\t\t  `question_options_4` int(11) NOT NULL,\n\t\t\t\t  `question_options_5` int(11) NOT NULL,\n\t\t\t\t  `question_plain_1` text NOT NULL,\n\t\t\t\t  `question_plain_2` text NOT NULL,\n\t\t\t\t  `question_plain_3` text NOT NULL,\n\t\t\t\t  `question_plain_4` text NOT NULL,\n\t\t\t\t  `question_plain_5` text NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `survey_id` (`survey_id`),\n\t\t\t\t  KEY `chat_id` (`chat_id`),\n\t\t\t\t  KEY `user_id` (`user_id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `ftime` (`ftime`),\n\t\t\t\t  KEY `max_stars_1` (`max_stars_1`),\n\t\t\t\t  KEY `max_stars_2` (`max_stars_2`),\n\t\t\t\t  KEY `max_stars_3` (`max_stars_3`),\n\t\t\t\t  KEY `max_stars_4` (`max_stars_4`),\n\t\t\t\t  KEY `max_stars_5` (`max_stars_5`),\n\t\t\t\t  KEY `question_options_1` (`question_options_1`),\n\t\t\t\t  KEY `question_options_2` (`question_options_2`),\n\t\t\t\t  KEY `question_options_3` (`question_options_3`),\n\t\t\t\t  KEY `question_options_4` (`question_options_4`),\n\t\t\t\t  KEY `question_options_5` (`question_options_5`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_speech_language` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `name` varchar(100) NOT NULL,\n                  `siteaccess` varchar(3) NOT NULL DEFAULT '',\n                  PRIMARY KEY (`id`)\n               ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_speech_language_dialect` (\n                `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `language_id` int(11) NOT NULL,\n                  `lang_name` varchar(100) NOT NULL,\n                  `lang_code` varchar(100) NOT NULL,\n                  `short_code` varchar(4) NOT NULL DEFAULT '',\n                  PRIMARY KEY (`id`),\n                  KEY `language_id` (`language_id`),\n                  KEY `short_code` (`short_code`),\n                  KEY `lang_code` (`lang_code`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"INSERT INTO `lh_speech_language` (`id`, `name`, `siteaccess`) VALUES\n\t\t\t\t(1,\t'Afrikaans',''),\n\t\t\t\t(2,\t'Bahasa Indonesia',''),\n\t\t\t\t(3,\t'Bahasa Melayu',''),\n\t\t\t\t(4,\t'Catal\u00e0',''),\n\t\t\t\t(5,\t'\u010ce\u0161tina','cse'),\n\t\t\t\t(6,\t'Deutsch','ger'),\n\t\t\t\t(7,\t'English',''),\n\t\t\t\t(8,\t'Espa\u00f1ol','esp'),\n\t\t\t\t(9,\t'Euskara',''),\n\t\t\t\t(10,\t'Fran\u00e7ais','fre'),\n\t\t\t\t(11,\t'Galego',''),\n\t\t\t\t(12,\t'Hrvatski',''),\n\t\t\t\t(13,\t'IsiZulu',''),\n\t\t\t\t(14,\t'\u00cdslenska',''),\n\t\t\t\t(15,\t'Italiano','ita'),\n\t\t\t\t(16,\t'Magyar',''),\n\t\t\t\t(17,\t'Nederlands','nld'),\n\t\t\t\t(18,\t'Norsk bokm\u00e5l',''),\n\t\t\t\t(19,\t'Polski','pol'),\n\t\t\t\t(20,\t'Portugu\u00eas','por'),\n\t\t\t\t(21,\t'Rom\u00e2n\u0103',''),\n\t\t\t\t(22,\t'Sloven\u010dina','svk'),\n\t\t\t\t(23,\t'Suomi','fin'),\n\t\t\t\t(24,\t'Svenska',''),\n\t\t\t\t(25,\t'T\u00fcrk\u00e7e','tur'),\n\t\t\t\t(26,\t'\u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438',''),\n\t\t\t\t(27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439','rus'),\n\t\t\t\t(28,\t'\u0421\u0440\u043f\u0441\u043a\u0438',''),\n\t\t\t\t(29,\t'\ud55c\uad6d\uc5b4',''),\n\t\t\t\t(30,\t'\u4e2d\u6587',''),\n\t\t\t\t(31,\t'\u65e5\u672c\u8a9e',''),\n\t\t\t\t(32,\t'Lingua lat\u012bna',''),\n\t\t\t\t(33,\t'Lithuanian','lit'),\n\t\t\t\t(34,\t'Latvia',''),\n\t\t\t\t(35,\t'Afar',''),\n\t\t\t\t(36,\t'Arabic',''),\n\t\t\t\t(37,\t'Assamese',''),\n\t\t\t\t(38,\t'Azerbaijani',''),\n\t\t\t\t(39,\t'Bulgarian','bgr'),\n\t\t\t\t(40,\t'Bangla',''),\n\t\t\t\t(41,\t'Bosnian',''),\n\t\t\t\t(42,\t'Cakchiquel',''),\n\t\t\t\t(43,\t'Danish',''),\n\t\t\t\t(44,\t'Greek',''),\n\t\t\t\t(45,\t'Estonian',''),\n\t\t\t\t(46,\t'Persian',''),\n\t\t\t\t(47,\t'Filipino',''),\n\t\t\t\t(48,\t'Gujarati',''),\n\t\t\t\t(49,\t'Hebrew',''),\n\t\t\t\t(50,\t'Croatian',''),\n\t\t\t\t(51,\t'Indonesia',''),\n\t\t\t\t(52,\t'Icelandic',''),\n\t\t\t\t(53,\t'Georgian',''),\n\t\t\t\t(54,\t'Maori (New Zealand)',''),\n\t\t\t\t(55,\t'Macedonian',''),\n\t\t\t\t(56,\t'Malay (Latin)',''),\n\t\t\t\t(57,\t'Maltese',''),\n\t\t\t\t(58,\t'Norwegian Nynorsk',''),\n\t\t\t\t(59,\t'Norwegian','nor'),\n\t\t\t\t(60,\t'Northern Sotho (South Africa)',''),\n\t\t\t\t(61,\t'Slovenian',''),\n\t\t\t\t(63,\t'Thai',''),\n\t\t\t\t(64,\t'Tagalog',''),\n\t\t\t\t(65,\t'Tongan',''),\n\t\t\t\t(66,\t'Ukrainian',''),\n\t\t\t\t(67,\t'Vietnamese','vnm'),\n\t\t\t\t(68,\t'Chinese','chn');\");\n\n                    $db->query(\"INSERT INTO `lh_speech_language_dialect` (`id`, `language_id`, `lang_name`, `lang_code`, `short_code`) VALUES\n(1,\t1,\t'Afrikaans',\t'af-ZA',\t'af'),\n(2,\t2,\t'Bahasa Indonesia',\t'id-ID',\t'id'),\n(3,\t3,\t'Bahasa Melayu',\t'ms-MY',\t''),\n(4,\t4,\t'Catal\u00e0',\t'ca-ES',\t''),\n(5,\t5,\t'\u010ce\u0161tina',\t'cs-CZ',\t'cs'),\n(6,\t6,\t'Deutsch',\t'de-DE',\t'de'),\n(7,\t7,\t'Australia',\t'en-AU',\t''),\n(8,\t7,\t'Canada',\t'en-CA',\t''),\n(9,\t7,\t'India',\t'en-IN',\t''),\n(10,\t7,\t'New Zealand',\t'en-NZ',\t''),\n(11,\t7,\t'South Africa',\t'en-ZA',\t''),\n(12,\t7,\t'United Kingdom',\t'en-GB',\t'en'),\n(13,\t7,\t'United States',\t'en-US',\t''),\n(14,\t8,\t'Argentina',\t'es-AR',\t''),\n(15,\t8,\t'Bolivia',\t'es-BO',\t''),\n(16,\t8,\t'Chile',\t'es-CL',\t''),\n(17,\t8,\t'Colombia',\t'es-CO',\t''),\n(18,\t8,\t'Costa Rica',\t'es-CR',\t''),\n(19,\t8,\t'Ecuador',\t'es-EC',\t''),\n(20,\t8,\t'El Salvador',\t'es-SV',\t''),\n(21,\t8,\t'Espa\u00f1a',\t'es-ES',\t'es'),\n(22,\t8,\t'Estados Unidos',\t'es-US',\t''),\n(23,\t8,\t'Guatemala',\t'es-GT',\t''),\n(24,\t8,\t'Honduras',\t'es-HN',\t''),\n(25,\t8,\t'M\u00e9xico',\t'es-MX',\t''),\n(26,\t8,\t'Nicaragua',\t'es-NI',\t''),\n(27,\t8,\t'Panam\u00e1',\t'es-PA',\t''),\n(28,\t8,\t'Paraguay',\t'es-PY',\t''),\n(29,\t8,\t'Per\u00fa',\t'es-PE',\t''),\n(30,\t8,\t'Puerto Rico',\t'es-PR',\t''),\n(31,\t8,\t'Rep\u00fablica Dominicana',\t'es-DO',\t''),\n(32,\t8,\t'Uruguay',\t'es-UY',\t''),\n(33,\t8,\t'Venezuela',\t'es-VE',\t''),\n(34,\t9,\t'Euskara',\t'eu-ES',\t''),\n(35,\t10,\t'Fran\u00e7ais',\t'fr-FR',\t'fr'),\n(36,\t11,\t'Galego',\t'gl-ES',\t''),\n(37,\t12,\t'Hrvatski',\t'hr_HR',\t''),\n(38,\t13,\t'IsiZulu',\t'zu-ZA',\t''),\n(39,\t14,\t'\u00cdslenska',\t'is-IS',\t''),\n(40,\t15,\t'Italia',\t'it-IT',\t'it'),\n(41,\t15,\t'Svizzera',\t'it-CH',\t'it'),\n(42,\t16,\t'Magyar',\t'hu-HU',\t'hu'),\n(43,\t17,\t'Nederlands',\t'nl-NL',\t'nl'),\n(44,\t18,\t'Norsk bokm\u00e5l',\t'nb-NO',\t'nb'),\n(45,\t19,\t'Polski',\t'pl-PL',\t'pl'),\n(46,\t20,\t'Brasil',\t'pt-BR',\t''),\n(47,\t20,\t'Portugal',\t'pt-PT',\t'pt'),\n(48,\t21,\t'Rom\u00e2n\u0103',\t'ro-RO',\t'ro'),\n(49,\t22,\t'Sloven\u010dina',\t'sk-SK',\t'sk'),\n(50,\t23,\t'Suomi',\t'fi-FI',\t'fi'),\n(51,\t24,\t'Swedish',\t'sv-SE',\t'sv'),\n(52,\t25,\t'T\u00fcrk\u00e7e',\t'tr-TR',\t'tr'),\n(53,\t26,\t'\u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438',\t'bg-BG',\t''),\n(54,\t27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439',\t'ru-RU',\t'ru'),\n(55,\t28,\t'Serbian',\t'sr-RS',\t'sr'),\n(56,\t29,\t'\ud55c\uad6d\uc5b4',\t'ko-KR',\t'ko'),\n(57,\t30,\t'\u666e\u901a\u8bdd (\u4e2d\u56fd\u5927\u9646)',\t'cmn-Hans-CN',\t''),\n(58,\t30,\t'\u666e\u901a\u8bdd (\u9999\u6e2f)',\t'cmn-Hans-HK',\t''),\n(59,\t30,\t'\u4e2d\u6587 (\u53f0\u7063)',\t'cmn-Hant-TW',\t''),\n(60,\t30,\t'\u7cb5\u8a9e (\u9999\u6e2f)',\t'yue-Hant-HK',\t''),\n(61,\t31,\t'\u65e5\u672c\u8a9e',\t'ja-JP',\t'ja'),\n(62,\t32,\t'Lingua lat\u012bna',\t'la',\t''),\n(64,\t33,\t'Lithuanian',\t'lt-LT',\t'lt'),\n(65,\t34,\t'Latvia',\t'lv-LV',\t'lv'),\n(66,\t35,\t'Afar',\t'aa-DJ',\t'aa'),\n(67,\t36,\t'Egypt',\t'ar-EG',\t'ar'),\n(68,\t37,\t'India',\t'as-IN',\t'as'),\n(69,\t38,\t'Azerbaijani',\t'az-AZ',\t'az'),\n(70,\t39,\t'Bulgarian',\t'bg',\t'bg'),\n(71,\t40,\t'Bangla',\t'bn',\t'bn'),\n(72,\t41,\t'Bosnian',\t'bs-BA',\t'bs'),\n(73,\t42,\t'Cakchiquel',\t'cak',\t'cak'),\n(74,\t43,\t'Danish',\t'da-dk',\t'da'),\n(75,\t44,\t'Greek',\t'el-GR',\t'el'),\n(76,\t45,\t'Estonian',\t'et-EE',\t'et'),\n(77,\t46,\t'Persian',\t'fa-IR',\t'fa'),\n(78,\t47,\t'Filipino',\t'fil',\t'fil'),\n(79,\t48,\t'Gujarati',\t'gu-IN',\t'gu'),\n(80,\t49,\t'Hebrew',\t'he',\t'he'),\n(81,\t50,\t'Croatian',\t'hr-HR',\t'hr'),\n(82,\t51,\t'Indonesia',\t'in',\t'in'),\n(83,\t52,\t'Icelandic',\t'is',\t'is'),\n(84,\t53,\t'Georgian',\t'ka-ge',\t'ka'),\n(85,\t54,\t'Maori (New Zealand)',\t'mi-nz',\t'mi'),\n(86,\t55,\t'Macedonian',\t'mk-MK',\t'mk'),\n(87,\t56,\t'Malay (Latin)',\t'ms',\t'ms'),\n(88,\t57,\t'Maltese',\t'mt',\t'mt'),\n(89,\t58,\t'Norwegian Nynorsk',\t'nn-NO',\t'nn'),\n(90,\t59,\t'Norwegian',\t'no',\t'no'),\n(91,\t60,\t'Northern Sotho (South Africa)',\t'nso-za',\t'nso'),\n(92,\t61,\t'Slovenian',\t'sl-SI',\t'sl'),\n(94,\t63,\t'Thai',\t'th-TH',\t'th'),\n(95,\t64,\t'Tagalog',\t'tl',\t'tl'),\n(96,\t65,\t'Tongan',\t'to-TO',\t'to'),\n(97,\t66,\t'Ukrainian',\t'uk-UA',\t'uk'),\n(98,\t67,\t'Vietnamese',\t'vi-VN',\t'vi'),\n(99,\t68,\t'Chinese',\t'zh-CN',\t'zh'),\n(100,\t36,\t'Egypt',\t'ar-AE',\t''),\n(101,\t36,\t'Egypt',\t'ar-IQ',\t''),\n(102,\t41,\t'Bosnian',\t'bs-Latn-BA',\t''),\n(103,\t6,\t'Deutsch',\t'de-at',\t''),\n(104,\t6,\t'Deutsch',\t'de-ch',\t''),\n(105,\t6,\t'Deutsch',\t'de-GB',\t''),\n(106,\t6,\t'Deutsch',\t'de-LI',\t''),\n(107,\t6,\t'Deutsch',\t'de-LU',\t''),\n(108,\t7,\t'United Kingdom',\t'en-029',\t''),\n(109,\t7,\t'United Kingdom',\t'en-AS',\t''),\n(110,\t7,\t'United Kingdom',\t'en-BE',\t''),\n(111,\t7,\t'United Kingdom',\t'en-BM',\t''),\n(112,\t7,\t'United Kingdom',\t'en-BS',\t''),\n(113,\t7,\t'United Kingdom',\t'en-BW',\t''),\n(114,\t7,\t'United Kingdom',\t'en-CH',\t''),\n(115,\t7,\t'United Kingdom',\t'en-CX',\t''),\n(116,\t7,\t'United Kingdom',\t'en-CY',\t''),\n(117,\t7,\t'United Kingdom',\t'en-DE',\t''),\n(118,\t7,\t'United Kingdom',\t'en-DK',\t''),\n(119,\t7,\t'United Kingdom',\t'en-DM',\t''),\n(120,\t7,\t'United Kingdom',\t'en-GY',\t''),\n(121,\t7,\t'United Kingdom',\t'en-HK',\t''),\n(122,\t7,\t'United Kingdom',\t'en-ie',\t''),\n(123,\t7,\t'United Kingdom',\t'en-IM',\t''),\n(124,\t7,\t'United Kingdom',\t'en-JM',\t''),\n(125,\t7,\t'United Kingdom',\t'en-KY',\t''),\n(126,\t7,\t'United Kingdom',\t'en-MY',\t''),\n(127,\t7,\t'United Kingdom',\t'en-NF',\t''),\n(128,\t7,\t'United Kingdom',\t'en-NG',\t''),\n(129,\t7,\t'United Kingdom',\t'en-NL',\t''),\n(130,\t7,\t'United Kingdom',\t'en-PH',\t''),\n(131,\t7,\t'United Kingdom',\t'en-SE',\t''),\n(132,\t7,\t'United Kingdom',\t'en-sg',\t''),\n(133,\t7,\t'United Kingdom',\t'en-SI',\t''),\n(134,\t7,\t'United Kingdom',\t'en-SS',\t''),\n(135,\t7,\t'United Kingdom',\t'en-TO',\t''),\n(136,\t7,\t'United Kingdom',\t'en-TZ',\t''),\n(137,\t7,\t'United Kingdom',\t'en-UG',\t''),\n(138,\t7,\t'United Kingdom',\t'en-UK',\t''),\n(139,\t7,\t'United Kingdom',\t'en-ZG',\t''),\n(140,\t7,\t'United Kingdom',\t'en-ZM',\t''),\n(141,\t7,\t'United Kingdom',\t'en-ZW',\t''),\n(142,\t8,\t'Espa\u00f1a',\t'es-419',\t''),\n(143,\t8,\t'Espa\u00f1a',\t'es-xl',\t''),\n(144,\t47,\t'Filipino',\t'fil-PH',\t''),\n(145,\t10,\t'Fran\u00e7ais',\t'fr-BE',\t''),\n(146,\t10,\t'Fran\u00e7ais',\t'fr-ca',\t''),\n(147,\t10,\t'Fran\u00e7ais',\t'fr-ch',\t''),\n(148,\t10,\t'Fran\u00e7ais',\t'fr-CM',\t''),\n(149,\t10,\t'Fran\u00e7ais',\t'fr-MC',\t''),\n(150,\t49,\t'Hebrew',\t'he-IL',\t''),\n(151,\t50,\t'Croatian',\t'hr-BA',\t''),\n(152,\t17,\t'Nederlands',\t'nl-BE',\t''),\n(153,\t19,\t'Polski',\t'pl-GB',\t''),\n(154,\t27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439',\t'ru-KZ',\t''),\n(155,\t27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439',\t'ru-UA',\t''),\n(156,\t28,\t'Serbian',\t'sr-BA',\t''),\n(157,\t28,\t'Serbian',\t'sr-Latn-RS',\t''),\n(158,\t68,\t'Chinese',\t'zh-MO',\t''),\n(159,\t68,\t'Chinese',\t'zh-SG',\t''),\n(160,\t68,\t'Chinese',\t'zh-TW',\t'');\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_speech_chat_language` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `chat_id` int(11) NOT NULL,\n                  `language_id` int(11) NOT NULL,\n                  `dialect` varchar(50) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `chat_id` (`chat_id`)\n               ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_chat_alert_icon` (`id` bigint(20) NOT NULL AUTO_INCREMENT,`name` varchar(50) NOT NULL, `identifier` varchar(50) NOT NULL,PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_file` (\n        \t   `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n        \t   `name` varchar(255) NOT NULL,\n        \t   `upload_name` varchar(255) NOT NULL,\n        \t   `size` int(11) NOT NULL,\n        \t   `type` varchar(255) NOT NULL,\n        \t   `file_path` varchar(255) NOT NULL,\n        \t   `extension` varchar(255) NOT NULL,\n        \t   `chat_id` bigint(20) NOT NULL,\n        \t   `persistent` int(11) NOT NULL,\n        \t   `online_user_id` int(11) NOT NULL,\n        \t   `user_id` int(11) NOT NULL,\n        \t   `date` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `chat_id` (`chat_id`),\n        \t   KEY `online_user_id` (`online_user_id`),\n        \t   KEY `user_id` (`user_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_email_template` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `name` varchar(250) NOT NULL,\n\t\t\t\t  `from_name` varchar(150) NOT NULL,\n\t\t\t\t  `from_name_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `from_email` varchar(150) NOT NULL,\n\t\t\t\t  `from_email_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `user_mail_as_sender` tinyint(4) NOT NULL,\n                  `use_chat_locale` tinyint(1) NOT NULL DEFAULT '0',\n\t\t\t\t  `content` text NOT NULL,\n                  `translations` longtext NOT NULL,\n\t\t\t\t  `subject` varchar(250) NOT NULL,\n\t\t\t\t  `bcc_recipients` varchar(200) NOT NULL,\n\t\t\t\t  `subject_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `reply_to` varchar(150) NOT NULL,\n\t\t\t\t  `reply_to_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `recipient` varchar(150) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"INSERT INTO `lh_abstract_email_template` (`id`, `translations`, `name`, `from_name`, `from_name_ac`, `from_email`, `from_email_ac`, `content`, `subject`, `subject_ac`, `reply_to`, `reply_to_ac`, `recipient`, `bcc_recipients`, `user_mail_as_sender`) VALUES\n            \t   (1,'',\t'Send mail to user',\t'Live Helper Chat',\t0,\t'',\t0,\t'Dear {user_chat_nick},\\r\\n\\r\\n{additional_message}\\r\\n\\r\\nLive Support response:\\r\\n{messages_content}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team\\r\\n',\t'{name_surname} has responded to your request',\t1,\t'',\t1,\t'',\t'',\t0),\n            \t   (2,'',\t'Support request from user',\t'',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nAdditional data, if any:\\r\\n{additional_data}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nLink to chat if any:\\r\\n{prefillchat}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'{name}, {country}, {department}, Support request from user',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (3,'',\t'User mail for himself',\t'Live Helper Chat',\t0,\t'',\t0,\t'Dear {user_chat_nick},\\r\\n\\r\\nTranscript:\\r\\n{messages_content}\\r\\nChat ID: {chat_id}\\n\\r\\nSincerely,\\r\\nLive Support Team\\r\\n',\t'Chat transcript',\t0,\t'',\t0,\t'',\t'',\t0),\n            \t   (4,'',\t'New chat request',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nClick to accept chat automatically\\r\\n{url_accept}\\r\\n\\r\\nSurvey\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'New chat request',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (5,'',\t'Chat was closed',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\n{operator} has closed a chat\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nAdditional data, if any:\\r\\n{additional_data}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nSurvey:\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Chat was closed',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (6,'',\t'New FAQ question',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nNew FAQ question\\r\\nEmail: {email}\\r\\n\\r\\nQuestion:\\r\\n{question}\\r\\n\\r\\nQuestion URL:\\r\\n{url_question}\\r\\n\\r\\nURL to answer a question:\\r\\n{url_request}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'New FAQ question',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (7,'',\t'New unread message',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nClick to accept chat automatically\\r\\n{url_accept}\\r\\n\\r\\nSurvey:\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'New unread message',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (8,'',\t'Filled form',\t'MCFC',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser has filled a form\\r\\nForm name - {form_name}\\r\\nUser IP - {ip}\\r\\nDownload filled data - {url_download}\\r\\nView filled data - {url_view}\\r\\n\\r\\n{content}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Filled form - {form_name}',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (9,'',\t'Chat was accepted',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nOperator {user_name} has accepted a chat [{chat_id}]\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nClick to accept chat automatically\\r\\n{url_accept}\\r\\n\\r\\nSurvey:\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Chat was accepted [{chat_id}]',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (10,'',\t'Permission request',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nOperator {user} has requested these permissions\\n\\r\\n{permissions}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Permission request from {user}',\t0,\t'',\t0,\t'',\t'',\t0),\n            \t   (11,'',\t'You have unread messages',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nOperator {operator} has answered to you\\r\\n\\r\\n{messages}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Operator has answered to your request',\t0,\t'',\t0,\t'',\t'',\t0),\n            \t   (12,'',\t'Visitor returned',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nVisitor information\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nSee more information at\\r\\n{url_accept}\\r\\n\\r\\nLast chat:\\r\\n{message}\\r\\n\\r\\nAdditional data, if any:\\r\\n{additional_data}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Visitor returned - {username}',\t0,\t'',\t0,\t'',\t'',\t0);\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `question` varchar(250) NOT NULL,\n        \t   `location` varchar(250) NOT NULL,\n        \t   `active` int(11) NOT NULL,\n        \t   `priority` int(11) NOT NULL,\n        \t   `is_voting` int(11) NOT NULL,\n        \t   `question_intro` text NOT NULL,\n        \t   `revote` int(11) NOT NULL DEFAULT '0',\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `priority` (`priority`),\n        \t   KEY `active_priority` (`active`,`priority`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question_answer` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `ip` bigint(20) NOT NULL,\n        \t   `question_id` int(11) NOT NULL,\n        \t   `answer` text NOT NULL,\n        \t   `ctime` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `ip` (`ip`),\n        \t   KEY `question_id` (`question_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question_option` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `question_id` int(11) NOT NULL,\n        \t   `option_name` varchar(250) NOT NULL,\n        \t   `priority` tinyint(4) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `question_id` (`question_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                $db->query(\"CREATE TABLE `lh_chat_action` (\n                `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `chat_id` bigint(20) NOT NULL,\n                  `action` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `body` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `created_at` bigint(20) unsigned NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `chat_id` (`chat_id`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n               $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_stats` (\n                  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n                  `type` int(11) NOT NULL,\n                  `lupdate` bigint(20) NOT NULL,\n                  `object_id` bigint(20) NOT NULL,\n                  `stats` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `type_object_id` (`type`,`object_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question_option_answer` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `question_id` int(11) NOT NULL,\n        \t   `option_id` int(11) NOT NULL,\n        \t   `ctime` int(11) NOT NULL,\n        \t   `ip` bigint(20) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `question_id` (`question_id`),\n        \t   KEY `ip` (`ip`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_voice_video` (\n                   `id` bigint(20) NOT NULL AUTO_INCREMENT,\n                   `chat_id` bigint(20) NOT NULL,\n                   `user_id` bigint(20) NOT NULL,\n                   `op_status` tinyint(4) NOT NULL,\n                   `vi_status` tinyint(4) NOT NULL,\n                   `voice` tinyint(4) NOT NULL,\n                   `video` tinyint(4) NOT NULL,\n                   `screen_share` tinyint(4) NOT NULL,\n                   `status` tinyint(4) NOT NULL,\n                   `ctime` int(11) NOT NULL,\n                   `token` varchar(200) NOT NULL,\n                   PRIMARY KEY (`id`),\n                   KEY `chat_id` (`chat_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_product` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT, \n        \t       `name` varchar(250) NOT NULL, \n        \t       `disabled` int(11) NOT NULL, \n        \t       `priority` int(11) NOT NULL, \n        \t       `departament_id` int(11) NOT NULL, \n        \t       KEY `departament_id` (`departament_id`), \n        \t       PRIMARY KEY (`id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_browse_offer_invitation` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `siteaccess` varchar(10) NOT NULL,\n\t\t\t\t  `time_on_site` int(11) NOT NULL,\n\t\t\t\t  `content` longtext NOT NULL,\n\t\t\t\t  `callback_content` longtext NOT NULL,\n\t\t\t\t  `lhc_iframe_content` tinyint(4) NOT NULL,\n\t\t\t\t  `custom_iframe_url` varchar(250) NOT NULL,\n\t\t\t\t  `name` varchar(250) NOT NULL,\n\t\t\t\t  `identifier` varchar(50) NOT NULL,\n\t\t\t\t  `executed_times` int(11) NOT NULL,\n\t\t\t\t  `url` varchar(250) NOT NULL,\n\t\t\t\t  `active` int(11) NOT NULL,\n\t\t\t\t  `has_url` int(11) NOT NULL,\n\t\t\t\t  `is_wildcard` int(11) NOT NULL,\n\t\t\t\t  `referrer` varchar(250) NOT NULL,\n\t\t\t\t  `priority` varchar(250) NOT NULL,\n\t\t\t\t  `hash` varchar(40) NOT NULL,\n\t\t\t\t  `width` int(11) NOT NULL,\n\t\t\t\t  `height` int(11) NOT NULL,\n\t\t\t\t  `unit` varchar(10) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `active` (`active`),\n\t\t\t\t  KEY `identifier` (`identifier`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_form` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `name` varchar(100) NOT NULL,        \t   \n        \t   `content` longtext NOT NULL,\n        \t   `recipient` varchar(250) NOT NULL,\n        \t   `active` int(11) NOT NULL,\n        \t   `name_attr` varchar(250) NOT NULL,\n        \t   `intro_attr` varchar(250) NOT NULL,\n        \t   `xls_columns` text NOT NULL,\n        \t   `pagelayout` varchar(200) NOT NULL,\n        \t   `post_content` text NOT NULL,\n        \t   PRIMARY KEY (`id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_form_collected` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `form_id` int(11) NOT NULL,\n\t\t\t\t  `ctime` int(11) NOT NULL,\n\t\t\t\t  `ip` varchar(250) NOT NULL,\n        \t   \t  `identifier` varchar(250) NOT NULL,\n        \t   \t  `chat_id` bigint(20) NOT NULL,\n\t\t\t\t  `content` longtext NOT NULL,\n\t\t\t\t  `custom_fields` longtext NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `form_id` (`form_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chatbox` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `identifier` varchar(50) NOT NULL,\n\t\t\t\t  `name` varchar(100) NOT NULL,\n\t\t\t\t  `chat_id` int(11) NOT NULL,\n\t\t\t\t  `active` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `identifier` (`identifier`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_canned_msg` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `msg` longtext NOT NULL,\n                  `fallback_msg` text NOT NULL,\n                  `title` varchar(250) NOT NULL,\n                  `explain` varchar(250) NOT NULL,\n                  `languages` text NOT NULL,\n                  `additional_data` text NOT NULL,\n        \t   \t  `position` int(11) NOT NULL,\n        \t   \t  `department_id` int(11) NOT NULL,\n        \t   \t  `user_id` int(11) NOT NULL,\n  \t\t\t\t  `delay` int(11) NOT NULL,\n        \t   \t  `auto_send` tinyint(1) NOT NULL,\n        \t   \t  `html_snippet` longtext NOT NULL,\n        \t   \t  `attr_int_1` int(11) NOT NULL,\n        \t   \t  `attr_int_2` int(11) NOT NULL,\n        \t   \t  `attr_int_3` int(11) NOT NULL,\n        \t   \t  `disabled` tinyint(1) unsigned NOT NULL NULL DEFAULT 0,\n        \t   \t  `unique_id` varchar(20) NOT NULL,\n                  `updated_at` int(11) unsigned NOT NULL DEFAULT 0,\n                  `created_at` int(11) unsigned NOT NULL DEFAULT 0,\n                  `active_from` int(11) unsigned NOT NULL DEFAULT 0,\n                  `active_to` int(11) unsigned NOT NULL DEFAULT 0,\n                  `repetitiveness` int(11) unsigned NOT NULL DEFAULT 0,\n                  `days_activity` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                  PRIMARY KEY (`id`),\n        \t   \t  KEY `department_id` (`department_id`),\n        \t   \t  KEY `disabled` (`disabled`),\n        \t   \t  KEY `attr_int_1` (`attr_int_1`),\n        \t   \t  KEY `attr_int_2` (`attr_int_2`),\n        \t   \t  KEY `attr_int_3` (`attr_int_3`),\n        \t   \t  KEY `position_title_v2` (`position`, `title`(191)),\n        \t   \t  KEY `user_id` (`user_id`),\n        \t   \t  KEY `unique_id` (`unique_id`),\n                  KEY `repetitiveness` (`repetitiveness`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_online_user_footprint` (\n\t\t\t\t  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `chat_id` bigint(20) NOT NULL,\n\t\t\t\t  `online_user_id` int(11) NOT NULL,\n\t\t\t\t  `page` varchar(2083) NOT NULL,\n\t\t\t\t  `vtime` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `chat_id` (`chat_id`),\n\t\t\t\t  KEY `online_user_id` (`online_user_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                $db->query(\"CREATE TABLE `lh_canned_msg_dep` (\n                                 `id` bigint(20) NOT NULL AUTO_INCREMENT,\n                                 `canned_id` int(11) NOT NULL,\n                                 `dep_id` int(11) NOT NULL,\n                                 PRIMARY KEY (`id`),\n                                 KEY `canned_id` (`canned_id`),\n                                 KEY `dep_id` (`dep_id`)\n                            ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_invitation_dep` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n    `invitation_id` int(11) NOT NULL,\n    `dep_id` int(11) NOT NULL,\n    PRIMARY KEY (`id`),\n    KEY `invitation_id` (`invitation_id`),\n    KEY `dep_id` (`dep_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                 $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_event` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `vid_id` int(11) NOT NULL,\n        \t       `ev_id` int(11) NOT NULL,\n        \t       `ts` int(11) NOT NULL,\n        \t       `val` varchar(50) NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `vid_id_ev_id_val_ts` (`vid_id`,`ev_id`,`val`,`ts`),\n        \t       KEY `vid_id_ev_id_ts` (`vid_id`,`ev_id`,`ts`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_invitation_event` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `invitation_id` int(11) NOT NULL,\n        \t       `event_id` int(11) NOT NULL,\n        \t       `min_number` int(11) NOT NULL,\n        \t       `during_seconds` int(11) NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `invitation_id` (`invitation_id`),\n        \t       KEY `event_id` (`event_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_variables` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `name` varchar(50) NOT NULL,\n        \t       `identifier` varchar(50) NOT NULL,\n        \t       `store_timeout` int(11) NOT NULL,\n        \t       `filter_val` int(11) NOT NULL DEFAULT '0',\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `identifier` (`identifier`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_campaign` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL, `text` text NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_campaign_conv` (\n                  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `device_type` tinyint(11) NOT NULL,\n\t\t\t\t  `invitation_type` tinyint(1) NOT NULL,\n\t\t\t\t  `invitation_status` tinyint(1) NOT NULL,\n\t\t\t\t  `chat_id` bigint(20) NOT NULL,\n\t\t\t\t  `campaign_id` int(11) NOT NULL,\n\t\t\t\t  `invitation_id` int(11) NOT NULL,\n\t\t\t\t  `department_id` int(11) NOT NULL,\n\t\t\t\t  `ctime` int(11) NOT NULL,\n\t\t\t\t  `con_time` int(11) NOT NULL,\n\t\t\t\t  `vid_id` bigint(20) DEFAULT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `ctime` (`ctime`),\n\t\t\t\t  KEY `campaign_id` (`campaign_id`),\n\t\t\t\t  KEY `invitation_id` (`invitation_id`),\n\t\t\t\t  KEY `invitation_status` (`invitation_status`)\n\t\t\t\t) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users_setting` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `user_id` int(11) NOT NULL,\n        \t   `identifier` varchar(50) NOT NULL,\n        \t   `value` text NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `user_id` (`user_id`,`identifier`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_departament_limit_group_member` (  \n    \t       `id` int(11) NOT NULL AUTO_INCREMENT,  \n    \t       `dep_id` int(11) NOT NULL,  \n    \t       `dep_limit_group_id` int(11) NOT NULL,  \n    \t       PRIMARY KEY (`id`),  \n    \t       KEY `dep_limit_group_id` (`dep_limit_group_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_departament_limit_group` (  \n    \t       `id` int(11) NOT NULL AUTO_INCREMENT,  \n    \t       `name` varchar(50) NOT NULL,\n    \t       `pending_max` int(11) NOT NULL,  \n    \t       PRIMARY KEY (`id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_auto_responder_chat` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `chat_id` int(11) NOT NULL,\n                  `auto_responder_id` int(11) NOT NULL,\n                  `wait_timeout_send` int(11) NOT NULL,\n                  `pending_send_status` int(11) NOT NULL,\n                  `active_send_status` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `chat_id` (`chat_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users_setting_option` (\n\t\t\t\t  `identifier` varchar(50) NOT NULL,\n\t\t\t\t  `class` varchar(50) NOT NULL,\n\t\t\t\t  `attribute` varchar(40) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`identifier`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"INSERT INTO `lh_users_setting_option` (`identifier`, `class`, `attribute`) VALUES\n        \t   ('chat_message',\t'',\t''),\n        \t   ('new_chat_sound',\t'',\t''),\n        \t   ('enable_pending_list', '', ''),\n        \t   ('enable_active_list', '', ''),\n        \t   ('enable_close_list', '', ''),\n        \t   ('new_user_bn', '', ''),\n        \t   ('new_user_sound', '', ''),\n        \t   ('oupdate_timeout', '', ''),\n        \t   ('ouser_timeout', '', ''),\n        \t   ('o_department', '', ''),\n        \t   ('omax_rows', '', ''),\n        \t   ('ogroup_by', '', ''),\n        \t   ('omap_depid', '', ''),\n        \t   ('omap_mtimeout', '', ''),\n        \t   ('ocountry', '', ''),\n        \t   ('otime_on_site', '', ''),\n        \t   ('dwo', '', ''),\n        \t   ('enable_unread_list', '', '')\");\n\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_config` (\n                  `identifier` varchar(50) NOT NULL,\n                  `value` text NOT NULL,\n                  `type` tinyint(1) NOT NULL DEFAULT '0',\n                  `explain` varchar(250) NOT NULL,\n                  `hidden` int(11) NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`identifier`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $randomHash = erLhcoreClassModelForgotPassword::randomPassword(9);\n                    $randomHashLength = strlen($randomHash);\n                    $exportHash = erLhcoreClassModelForgotPassword::randomPassword(9);\n\n                    if (extension_loaded('bcmath')){\n                        $geoRow = \"('geo_data','a:5:{i:0;b:0;s:21:\\\"geo_detection_enabled\\\";i:1;s:22:\\\"geo_service_identifier\\\";s:8:\\\"max_mind\\\";s:23:\\\"max_mind_detection_type\\\";s:7:\\\"country\\\";s:22:\\\"max_mind_city_location\\\";s:37:\\\"var/external/geoip/GeoLite2-City.mmdb\\\";}',0,'',1)\";\n                    } else {\n                        $geoRow = \"('geo_data', '', '0', '', '1')\";\n                    }\n\n                    $db->query(\"INSERT INTO `lh_chat_config` (`identifier`, `value`, `type`, `explain`, `hidden`) VALUES\n                ('tracked_users_cleanup',\t'160',\t0,\t'How many days keep records of online users.',\t0),\n        \t   \t('list_online_operators', '1', '0', 'List online operators.', '0'),\n        \t   \t('voting_days_limit',\t'7',\t0,\t'How many days voting widget should not be expanded after last show',\t0),\n                ('track_online_visitors',\t'1',\t0,\t'Enable online site visitors tracking',\t0),\n        \t   \t('pro_active_invite',\t'1',\t0,\t'Is pro active chat invitation active. Online users tracking also has to be enabled',\t0),\n                ('customer_company_name',\t'Live Helper Chat',\t0,\t'Your company name - visible in bottom left corner',\t0),\n                ('customer_site_url',\t'http://livehelperchat.com',\t0,\t'Your site URL address',\t0),\n                ('transfer_configuration','0','0','Transfer configuration','1'),\n                ('list_unread','0','0','List unread chats','0'),\n                ('list_closed','0','0','List closed chats','0'),\n                ('vwait_to_long','120','0','How long we should wait before we inform operator about unanswered chat.','0'),\n                ('autoclose_activity_timeout','0','0','Automatically close active chat if from last visitor/operator message passed. 0 - disabled, n > 0 time in minutes','0'),\n                ('mobile_options',\t'a:2:{s:13:\\\"notifications\\\";i:0;s:7:\\\"fcm_key\\\";s:152:\\\"AAAAiF8DeNk:APA91bFVHu2ybhBUTtlEtQrUEPpM2fb-5ovgo0FVNm4XxK3cYJtSwRcd-pqcBot_422yDOzHyw2p9ZFplkHrmNXjm8f5f-OIzfalGmpsypeXvnPxhU6Db1B2Z1Acc-TamHUn2F4xBJkP\\\";}',\t0,\t'',\t1),\n                ('footprint_background','0','0','Footprint updates should be processed in the background. Make sure you are running workflow background cronjob.','0'),\n                ('reverse_pending','0','0','Make default pending chats order from old to new','0'),\n                ('departament_availability','364','0','How long department availability statistic should be kept? (days)','0'),\n                ('uonline_sessions','364','0','How long keep operators online sessions data? (days)','0'),\n                ('disable_live_autoassign','0','0','Disable live auto assign','0'),\n                ('tracked_footprint_cleanup','90','0','How many days keep records of users footprint.','0'),\n                ('cleanup_cronjob','0','0','Cleanup should be done only using cronjob.','0'),         \n                ('no_wildcard_cookie','0','0','Cookie should be valid only for domain where Javascript is embedded (excludes subdomains)','0'),\n                ('cduration_timeout_user','4','0','How long operator can wait for message from visitor before time between messages are ignored. Values in minutes.','0'),\n                ('cduration_timeout_operator','10','0','How long visitor can wait for message from operator before time between messages are ignored. Values in minutes.','0'),       \n                ('assign_workflow_timeout','0','0','Chats waiting in pending line more than n seconds should be auto assigned first. Time in seconds','0'),\n        \t   \t('smtp_data',\t'a:5:{s:4:\\\"host\\\";s:0:\\\"\\\";s:4:\\\"port\\\";s:2:\\\"25\\\";s:8:\\\"use_smtp\\\";i:0;s:8:\\\"username\\\";s:0:\\\"\\\";s:8:\\\"password\\\";s:0:\\\"\\\";}',\t0,\t'SMTP configuration',\t1),\n        \t    ('chatbox_data',\t'a:6:{i:0;b:0;s:20:\\\"chatbox_auto_enabled\\\";i:0;s:19:\\\"chatbox_secret_hash\\\";s:{$randomHashLength}:\\\"{$randomHash}\\\";s:20:\\\"chatbox_default_name\\\";s:7:\\\"Chatbox\\\";s:17:\\\"chatbox_msg_limit\\\";i:50;s:22:\\\"chatbox_default_opname\\\";s:7:\\\"Manager\\\";}',\t0,\t'Chatbox configuration',\t1),\n                ('start_chat_data',\t'a:80:{i:0;b:0;s:21:\\\"name_visible_in_popup\\\";b:0;s:27:\\\"name_visible_in_page_widget\\\";b:0;s:19:\\\"name_require_option\\\";s:8:\\\"required\\\";s:22:\\\"email_visible_in_popup\\\";b:0;s:28:\\\"email_visible_in_page_widget\\\";b:0;s:20:\\\"email_require_option\\\";s:8:\\\"required\\\";s:24:\\\"message_visible_in_popup\\\";b:1;s:30:\\\"message_visible_in_page_widget\\\";b:1;s:22:\\\"message_require_option\\\";s:8:\\\"required\\\";s:22:\\\"phone_visible_in_popup\\\";b:0;s:28:\\\"phone_visible_in_page_widget\\\";b:0;s:20:\\\"phone_require_option\\\";s:8:\\\"required\\\";s:21:\\\"force_leave_a_message\\\";b:0;s:29:\\\"offline_name_visible_in_popup\\\";b:1;s:35:\\\"offline_name_visible_in_page_widget\\\";b:1;s:27:\\\"offline_name_require_option\\\";s:8:\\\"required\\\";s:30:\\\"offline_phone_visible_in_popup\\\";b:0;s:36:\\\"offline_phone_visible_in_page_widget\\\";b:0;s:28:\\\"offline_phone_require_option\\\";s:8:\\\"required\\\";s:32:\\\"offline_message_visible_in_popup\\\";b:1;s:38:\\\"offline_message_visible_in_page_widget\\\";b:1;s:30:\\\"offline_message_require_option\\\";s:8:\\\"required\\\";s:15:\\\"auto_start_chat\\\";b:0;s:12:\\\"mobile_popup\\\";b:0;s:17:\\\"dont_auto_process\\\";b:0;s:20:\\\"tos_visible_in_popup\\\";b:0;s:12:\\\"requires_dep\\\";b:0;s:17:\\\"requires_dep_lock\\\";b:0;s:17:\\\"show_messages_box\\\";b:1;s:26:\\\"tos_visible_in_page_widget\\\";b:0;s:19:\\\"tos_checked_offline\\\";b:0;s:18:\\\"tos_checked_online\\\";b:0;s:28:\\\"offline_tos_visible_in_popup\\\";b:0;s:34:\\\"offline_tos_visible_in_page_widget\\\";b:0;s:35:\\\"offline_file_visible_in_page_widget\\\";b:0;s:29:\\\"offline_file_visible_in_popup\\\";b:0;s:11:\\\"name_hidden\\\";b:0;s:15:\\\"name_hidden_bot\\\";b:0;s:24:\\\"custom_fields_encryption\\\";s:0:\\\"\\\";s:19:\\\"offline_name_hidden\\\";b:0;s:13:\\\"pre_chat_html\\\";s:0:\\\"\\\";s:21:\\\"pre_offline_chat_html\\\";s:0:\\\"\\\";s:12:\\\"email_hidden\\\";b:0;s:16:\\\"email_hidden_bot\\\";b:0;s:20:\\\"offline_email_hidden\\\";b:0;s:15:\\\"user_msg_height\\\";s:0:\\\"\\\";s:12:\\\"phone_hidden\\\";b:0;s:16:\\\"phone_hidden_bot\\\";b:0;s:20:\\\"offline_phone_hidden\\\";b:0;s:14:\\\"message_hidden\\\";b:0;s:18:\\\"message_hidden_bot\\\";b:0;s:18:\\\"message_auto_start\\\";b:0;s:28:\\\"message_auto_start_key_press\\\";b:0;s:22:\\\"offline_message_hidden\\\";b:0;s:21:\\\"show_operator_profile\\\";b:1;s:21:\\\"remove_operator_space\\\";b:0;s:18:\\\"hide_message_label\\\";b:0;s:17:\\\"custom_fields_url\\\";s:0:\\\"\\\";s:13:\\\"custom_fields\\\";s:0:\\\"\\\";s:21:\\\"name_hidden_prefilled\\\";b:0;s:22:\\\"email_hidden_prefilled\\\";b:0;s:24:\\\"message_hidden_prefilled\\\";b:0;s:22:\\\"phone_hidden_prefilled\\\";b:0;s:29:\\\"offline_name_hidden_prefilled\\\";b:0;s:32:\\\"offline_message_hidden_prefilled\\\";b:0;s:30:\\\"offline_phone_hidden_prefilled\\\";b:0;s:18:\\\"disable_start_chat\\\";b:0;s:18:\\\"offline_name_width\\\";i:0;s:19:\\\"offline_email_width\\\";i:0;s:19:\\\"offline_phone_width\\\";i:0;s:10:\\\"name_width\\\";i:0;s:11:\\\"email_width\\\";i:0;s:11:\\\"phone_width\\\";i:0;s:17:\\\"hide_start_button\\\";b:0;s:9:\\\"lazy_load\\\";b:0;s:28:\\\"offline_email_require_option\\\";s:8:\\\"required\\\";s:30:\\\"offline_email_hidden_prefilled\\\";b:0;s:36:\\\"offline_email_visible_in_page_widget\\\";b:1;s:30:\\\"offline_email_visible_in_popup\\\";b:1;}',\t0,\t'',\t1),\n                ('application_name',\t'a:6:{s:3:\\\"eng\\\";s:31:\\\"Live Helper Chat - live support\\\";s:3:\\\"lit\\\";s:26:\\\"Live Helper Chat - pagalba\\\";s:3:\\\"hrv\\\";s:0:\\\"\\\";s:3:\\\"esp\\\";s:0:\\\"\\\";s:3:\\\"por\\\";s:0:\\\"\\\";s:10:\\\"site_admin\\\";s:31:\\\"Live Helper Chat - live support\\\";}',\t1,\t'Support application name, visible in browser title.',\t0),\n                ('track_footprint',\t'0',\t0,\t'Track users footprint. For this also online visitors tracking should be enabled',\t0),\n                ('pro_active_limitation',\t'-1',\t0,\t'Pro active chats invitations limitation based on pending chats, (-1) do not limit, (0,1,n+1) number of pending chats can be for invitation to be shown.',\t0),\n                ('pro_active_show_if_offline',\t'0',\t0,\t'Should invitation logic be executed if there is no online operators',\t0),\n                ('export_hash',\t'{$exportHash}',\t0,\t'Chats export secret hash',\t0),\n                ('do_no_track_ip', 0, 0, 'Do not track visitors IP',0),\n                ('remember_username','1','0','Should we remember username for the next time visitor starts a chat?','0'),\n                ('ignore_typing', 0, 0, 'Do not store what visitor is typing',0),\n                ('encrypt_msg_after', 0, 0, 'After how many days anonymize messages',0),\n                ('encrypt_msg_op', 0, 0, 'Anonymize also operators messages',0),\n                ('valid_domains','','0','Domains where script can be embedded. E.g example.com, google.com','0'),\n                ('message_seen_timeout', 24, 0, 'Proactive message timeout in hours. After how many hours proactive chat mesasge should be shown again.',\t0),\n                ('reopen_chat_enabled',0,\t0,\t'Reopen chat functionality enabled',\t0),\n                ('ignorable_ip',\t'',\t0,\t'Which ip should be ignored in online users list, separate by comma',0),\n                ('run_departments_workflow', 0, 0, 'Should cronjob run departments transfer workflow, even if user leaves a chat',\t0),\n                ('geo_location_data', 'a:3:{s:4:\\\"zoom\\\";i:4;s:3:\\\"lat\\\";s:7:\\\"49.8211\\\";s:3:\\\"lng\\\";s:7:\\\"11.7835\\\";}', '0', '', '1'),\n                ('xmp_data','a:14:{i:0;b:0;s:4:\\\"host\\\";s:15:\\\"talk.google.com\\\";s:6:\\\"server\\\";s:9:\\\"gmail.com\\\";s:8:\\\"resource\\\";s:6:\\\"xmpphp\\\";s:4:\\\"port\\\";s:4:\\\"5222\\\";s:7:\\\"use_xmp\\\";i:0;s:8:\\\"username\\\";s:0:\\\"\\\";s:8:\\\"password\\\";s:0:\\\"\\\";s:11:\\\"xmp_message\\\";s:98:\\\"New chat request [{chat_id}] from [{department}]\\r\\n{messages}\\r\\nClick to accept a chat\\r\\n{url_accept}\\\";s:10:\\\"recipients\\\";s:0:\\\"\\\";s:20:\\\"xmp_accepted_message\\\";s:89:\\\"{user_name} has accepted a chat [{chat_id}] from [{department}]\\r\\n{messages}\\r\\n{url_accept}\\\";s:16:\\\"use_standard_xmp\\\";i:0;s:15:\\\"test_recipients\\\";s:0:\\\"\\\";s:21:\\\"test_group_recipients\\\";s:0:\\\"\\\";}',0,'XMP data',1),\n                ('run_unaswered_chat_workflow', 0, 0, 'Should cronjob run unanswered chats workflow and execute unaswered chats callback, 0 - no, any other number bigger than 0 is a minits how long chat have to be not accepted before executing callback.',0),\n                ('disable_popup_restore', 0, 0, 'Disable option in widget to open new window. Restore icon will be hidden',\t0),\n                ('accept_tos_link', '#', 0, 'Change to your site Terms of Service', 0),\n                ('hide_button_dropdown', '0', 0, 'Hide close button in dropdown', 0),\n                ('on_close_exit_chat', '0', 0, 'On chat close exit chat', 0),\n                ('activity_timeout', '5', 0, 'How long operator should go offline automatically because of inactivity. Value in minutes', 0),\n                ('product_enabled_module','0','0','Product module is enabled', '1'),\n                ('preload_iframes','0','0','Preload widget. It will avoid loading delay after clicking widget','0'),\n                ('product_show_departament','0','0','Enable products show by departments', '1'),\n                ('paidchat_data','','0','Paid chat configuration','1'),\n                ('mheight_op','200','0','Messages box height for operator','0'),\n                ('listd_op','10','0','Default number of online operators to show','0'),\n                ('disable_iframe_sharing',\t'1',\t0,\t'Disable iframes in sharing mode',\t0),\n                ('file_configuration',\t'a:7:{i:0;b:0;s:5:\\\"ft_op\\\";s:47:\\\"gif|jpe?g|png|zip|svg|rar|xls|doc|docx|xlsx|pdf\\\";s:5:\\\"ft_us\\\";s:30:\\\"gif|jpe?g|png|svg|doc|docx|pdf\\\";s:6:\\\"fs_max\\\";i:2048;s:18:\\\"active_user_upload\\\";b:0;s:16:\\\"active_op_upload\\\";b:1;s:19:\\\"active_admin_upload\\\";b:1;}',\t0,\t'Files configuration item',\t1),\n                ('accept_chat_link_timeout',\t'300',\t0,\t'How many seconds chat accept link is valid. Set 0 to force login all the time manually.',\t0),\n                ('open_closed_chat_timeout',\t'1800',\t0,\t'How many seconds customer has to open already closed chat.',\t0),\n                ('session_captcha',0,\t0,\t'Use session captcha. LHC have to be installed on the same domain or subdomain.',\t0),\n                ('sync_sound_settings',\t'a:16:{i:0;b:0;s:12:\\\"repeat_sound\\\";i:1;s:18:\\\"repeat_sound_delay\\\";i:5;s:10:\\\"show_alert\\\";b:0;s:22:\\\"new_chat_sound_enabled\\\";b:1;s:31:\\\"new_message_sound_admin_enabled\\\";b:1;s:30:\\\"new_message_sound_user_enabled\\\";b:1;s:14:\\\"online_timeout\\\";d:300;s:22:\\\"check_for_operator_msg\\\";d:10;s:21:\\\"back_office_sinterval\\\";d:10;s:22:\\\"chat_message_sinterval\\\";d:3.5;s:20:\\\"long_polling_enabled\\\";b:0;s:30:\\\"polling_chat_message_sinterval\\\";d:1.5;s:29:\\\"polling_back_office_sinterval\\\";d:5;s:18:\\\"connection_timeout\\\";i:30;s:28:\\\"browser_notification_message\\\";b:0;}',\t0,\t'',\t1),\n                ('sound_invitation', 1, 0, 'Play sound on invitation to chat.',\t0),\n                ('explicit_http_mode', '',0,'Please enter explicit http mode. Either http: or https:, do not forget : at the end.', '0'),\n                ('track_domain',\t'',\t0,\t'Set your domain to enable user tracking across different domain subdomains.',\t0),\n                ('max_message_length','500',0,'Maximum message length in characters', '0'),\n                ('need_help_tip','1',0,'Show need help tooltip?', '0'),\n                ('recaptcha_data','a:4:{i:0;b:0;s:8:\\\"site_key\\\";s:0:\\\"\\\";s:10:\\\"secret_key\\\";s:0:\\\"\\\";s:7:\\\"enabled\\\";i:0;}','0','Re-captcha configuration','1'),\n                ('need_help_tip_timeout','24',0,'Need help tooltip timeout, after how many hours show again tooltip?', '0'),\n                ('use_secure_cookie','0',0,'Use secure cookie, check this if you want to force SSL all the time', '0'),\n                ('faq_email_required','0',0,'Is visitor e-mail required for FAQ', '0'),\n                ('disable_print','0',0,'Disable chat print', '0'),\n                ('hide_disabled_department','1',0,'Hide disabled department widget', '0'),\n                ('disable_send','0',0,'Disable chat transcript send', '0'),\n                ('autoclose_abandon_pending','0,0','0','Automatically close pending chats where visitor has left a chat. Timeout in minutes, last activity by visitor <desktop timeout>,<mobile timeout>,<status chat>','0'),\n                ('ignore_user_status','0',0,'Ignore users online statuses and use departments online hours', '0'),\n                ('bbc_button_visible','1',0,'Show BB Code button', '0'),\n                ('password_data','','0','Password requirements','1'),\n                ('activity_track_all','0','0','Track all logged operators activity and ignore their individual settings.','0'),\n                ('allow_reopen_closed','0', 0, 'Allow user to reopen closed chats?', '0'),\n                ('reopen_as_new','1', 0, 'Reopen closed chat as new? Otherwise it will be reopened as active.', '0'),\n                ('default_theme_id','0', 0, 'Default theme ID.', '1'),  \n                ('default_admin_theme_id','0', 0, 'Default admin theme ID', '1'),  \n                ('translation_data',\t'a:6:{i:0;b:0;s:19:\\\"translation_handler\\\";s:4:\\\"bing\\\";s:19:\\\"enable_translations\\\";b:0;s:14:\\\"bing_client_id\\\";s:0:\\\"\\\";s:18:\\\"bing_client_secret\\\";s:0:\\\"\\\";s:14:\\\"google_api_key\\\";s:0:\\\"\\\";}',\t0,\t'Translation data',\t1),              \n                ('disable_html5_storage','1',0,'Disable HMTL5 storage, check it if your site is switching between http and https', '0'),\n                ('automatically_reopen_chat','1',0,'Automatically reopen chat on widget open', '0'),\n                ('autoclose_timeout','0', 0, 'Automatic chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autoclose_timeout_pending','0', 0, 'Automatic pending chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autoclose_timeout_active','0', 0, 'Automatic active chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autoclose_timeout_bot','0', 0, 'Automatic bot chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autopurge_timeout','0', 0, 'Automatic chats purging. 0 - disabled, n > 0 time in minutes before chat is automatically deleted', '0'),\n                ('update_ip',\t'127.0.0.1',\t0,\t'Which ip should be allowed to update DB by executing http request, separate by comma?',0),\n                ('track_if_offline',\t'0',\t0,\t'Track online visitors even if there is no online operators',0),\n                ('min_phone_length','8',0,'Minimum phone number length',0),\n                ('mheight','',0,'Messages box height',0),\n                ('inform_unread_message','0',0,'Inform visitor about unread messages from operator, value in minutes. 0 - disabled',0),\n                ('dashboard_order', '[[\\\"online_operators\\\",\\\"departments_stats\\\",\\\"online_visitors\\\"],[\\\"group_chats\\\",\\\"my_chats\\\",\\\"pending_chats\\\",\\\"transfered_chats\\\"],[\\\"active_chats\\\",\\\"bot_chats\\\"]]', '0', 'Home page dashboard widgets order', '0'),\n                ('banned_ip_range','',0,'Which ip should not be allowed to chat',0),\n                ('suggest_leave_msg','1',0,'Suggest user to leave a message then user chooses offline department',0),\n                ('checkstatus_timeout','0',0,'Interval between chat status checks in seconds, 0 disabled.',0),\n                ('show_language_switcher','0',0,'Show users option to switch language at widget',0),\n                ('sharing_auto_allow','0',0,'Do not ask permission for users to see their screen',0),\n                ('sharing_nodejs_enabled','0',0,'NodeJs support enabled',0),\n                ('sharing_nodejs_path','',0,'socket.io path, optional',0),\n                ('online_if','0','0','','0'),\n                ('track_mouse_activity','0','0','Should mouse movement be tracked as activity measure, if not checked only basic events would be tracked','0'),\n                ('track_activity','0','0','Track users activity on site?','0'),\n                ('autologin_data','a:3:{i:0;b:0;s:11:\\\"secret_hash\\\";s:16:\\\"please_change_me\\\";s:7:\\\"enabled\\\";i:0;}',0,'Autologin configuration data',\t1),\n                ('sharing_nodejs_secure','0',0,'Connect to NodeJs in https mode',0),\n                ('disable_js_execution','1',0,'Disable JS execution in Co-Browsing operator window',0),\n                ('sharing_nodejs_socket_host','',0,'Host where NodeJs is running',0),\n                ('hide_right_column_frontpage','1','0','Hide right column in frontpage','0'),\n                ('front_tabs', 'dashboard,online_users,online_map', '0', 'Home page tabs order', '0'),\n                ('speech_data',\t'a:3:{i:0;b:0;s:8:\\\"language\\\";i:7;s:7:\\\"dialect\\\";s:5:\\\"en-US\\\";}',\t1,\t'',\t1),\n                ('sharing_nodejs_sllocation','https://cdn.jsdelivr.net/npm/socket.io-client@2/dist/socket.io.js',0,'Location of SocketIO JS library',0),\n                ('track_is_online','0',0,'Track is user still on site, chat status checks also has to be enabled',0),\n\t\t\t\t('show_languages','eng,lit,hrv,esp,por,nld,ara,ger,pol,rus,ita,fre,chn,cse,nor,tur,vnm,idn,sve,per,ell,dnk,rou,bgr,tha,geo,fin,alb',0,'Between what languages user should be able to switch',0),\n                ('geoadjustment_data',\t'a:8:{i:0;b:0;s:18:\\\"use_geo_adjustment\\\";b:0;s:13:\\\"available_for\\\";s:0:\\\"\\\";s:15:\\\"other_countries\\\";s:6:\\\"custom\\\";s:8:\\\"hide_for\\\";s:0:\\\"\\\";s:12:\\\"other_status\\\";s:7:\\\"offline\\\";s:11:\\\"rest_status\\\";s:6:\\\"hidden\\\";s:12:\\\"apply_widget\\\";i:0;}',\t0,\t'Geo adjustment settings',\t1),\n                {$geoRow}\");\n\n\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_online_user` (\n                  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `vid` varchar(50) NOT NULL,\n                  `ip` varchar(50) NOT NULL,\n                  `current_page` text NOT NULL,\n        \t   \t  `page_title` varchar(250) NOT NULL,\n                  `referrer` text NOT NULL,\n                  `chat_id` bigint(20) NOT NULL,\n                  `invitation_seen_count` int(11) NOT NULL,\n        \t   \t  `invitation_id` int(11) NOT NULL,\n                  `last_visit` int(11) NOT NULL,\n        \t   \t  `first_visit` int(11) NOT NULL,\n        \t   \t  `total_visits` int(11) NOT NULL,\n        \t   \t  `pages_count` int(11) NOT NULL,\n        \t   \t  `tt_pages_count` int(11) NOT NULL,\n        \t   \t  `invitation_count` int(11) NOT NULL,\n        \t   \t  `last_check_time` int(11) NOT NULL,\n        \t   \t  `dep_id` int(11) NOT NULL,        \t   \t \n                  `user_agent` text NOT NULL,\n                  `notes` varchar(250) NOT NULL,\n                  `user_country_code` varchar(50) NOT NULL,\n                  `user_country_name` varchar(50) NOT NULL,\n                  `visitor_tz` varchar(50) NOT NULL,\n                  `operator_message` text NOT NULL,\n                  `operator_user_proactive` varchar(100) NOT NULL,\n                  `operator_user_id` int(11) NOT NULL,\n                  `conversion_id` int(11) NOT NULL,\n                  `message_seen` int(11) NOT NULL,\n                  `message_seen_ts` int(11) NOT NULL,\n                  `user_active` int(11) NOT NULL,\n        \t   \t  `lat` varchar(10) NOT NULL,\n  \t\t\t\t  `lon` varchar(10) NOT NULL,\n  \t\t\t\t  `city` varchar(100) NOT NULL,\n        \t   \t  `reopen_chat` int(11) NOT NULL,\n        \t   \t  `time_on_site` int(11) NOT NULL,\n  \t\t\t\t  `tt_time_on_site` int(11) NOT NULL,\n        \t   \t  `requires_email` int(11) NOT NULL,\n        \t   \t  `requires_username` int(11) NOT NULL,\n        \t   \t  `requires_phone` int(11) NOT NULL,\n        \t   \t  `screenshot_id` int(11) NOT NULL,\n        \t   \t  `identifier` varchar(50) NOT NULL,\n        \t   \t  `operation` text NOT NULL,\n        \t   \t  `online_attr_system` text NOT NULL,\n        \t   \t  `operation_chat` text NOT NULL,\n        \t   \t  `online_attr` text NOT NULL,\n        \t   \t  `device_type` tinyint(1) NOT NULL DEFAULT '0',\n                  `chat_time` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  `last_visit_prev` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  PRIMARY KEY (`id`),\n                  KEY `vid` (`vid`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `last_visit_dep_id` (`last_visit`,`dep_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_proactive_chat_invitation` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `siteaccess` varchar(10) NOT NULL,\n\t\t\t\t  `time_on_site` int(11) NOT NULL,\n\t\t\t\t  `pageviews` int(11) NOT NULL,\n\t\t\t\t  `message` text NOT NULL,\n\t\t\t\t  `message_returning` text NOT NULL,\n\t\t\t\t  `executed_times` int(11) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `hide_after_ntimes` int(11) NOT NULL,\n\t\t\t\t  `show_on_mobile` int(11) NOT NULL,\n\t\t\t\t  `delay` int(11) NOT NULL,\n\t\t\t\t  `delay_init` int(11) NOT NULL,\n\t\t\t\t  `show_instant` int(11) NOT NULL,\n\t\t\t\t  `autoresponder_id` int(11) NOT NULL,\n\t\t\t\t  `disabled` int(11) NOT NULL,\n\t\t\t\t  `inject_only_html` tinyint(1) NOT NULL,\n\t\t\t\t  `name` varchar(50) NOT NULL,\n\t\t\t\t  `operator_ids` varchar(100) NOT NULL,\t\t\t\t \n\t\t\t\t  `message_returning_nick` varchar(250) NOT NULL,\n\t\t\t\t  `referrer` varchar(250) NOT NULL,\t\t\t\t  \n\t\t\t\t  `show_random_operator` int(11) NOT NULL,\n\t\t\t\t  `operator_name` varchar(100) NOT NULL,\n\t\t\t\t  `campaign_id` int(11) NOT NULL,\n\t\t\t\t  `position` int(11) NOT NULL,\n\t\t\t\t  `event_invitation` int(11) NOT NULL,\n\t\t\t\t  `dynamic_invitation` int(11) NOT NULL,\n\t\t\t\t  `bot_id` int(11) NOT NULL,\n\t\t\t\t  `trigger_id` int(11) NOT NULL,\n\t\t\t\t  `bot_offline` tinyint(1) NOT NULL,\n        \t   \t  `identifier` varchar(50) NOT NULL,\n        \t   \t  `tag` varchar(50) NOT NULL,\n        \t   \t  `requires_email` int(11) NOT NULL,\n        \t   \t  `iddle_for` int(11) NOT NULL,\n        \t   \t  `event_type` int(11) NOT NULL,\n        \t   \t  `requires_username` int(11) NOT NULL,\n        \t   \t  `requires_phone` int(11) NOT NULL,        \t   \t  \n        \t   \t  `design_data` longtext NOT NULL,        \t   \t  \n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `time_on_site_pageviews_siteaccess_position` (`time_on_site`,`pageviews`,`siteaccess`,`identifier`,`position`),\n        \t      KEY `identifier` (`identifier`),\n        \t      KEY `dynamic_invitation` (`dynamic_invitation`),\n        \t      KEY `tag` (`tag`),\n        \t      KEY `show_on_mobile` (`show_on_mobile`),\n        \t      KEY `dep_id` (`dep_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_accept` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `chat_id` bigint(20) NOT NULL,\n        \t   `hash` varchar(50) NOT NULL,\n        \t   `ctime` int(11) NOT NULL,\n        \t   `wused` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `hash` (`hash`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    //Default departament\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_departament` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `name` varchar(100) NOT NULL,\n\t\t\t\t  `email` varchar(100) NOT NULL,\n\t\t\t\t  `xmpp_recipients` text NOT NULL,\n\t\t\t\t  `xmpp_group_recipients` text NOT NULL,\n\t\t\t\t  `priority` int(11) NOT NULL,\n\t\t\t\t  `sort_priority` int(11) NOT NULL,\n\t\t\t\t  `department_transfer_id` int(11) NOT NULL,\n\t\t\t\t  `transfer_timeout` int(11) NOT NULL,\n\t\t\t\t  `exclude_inactive_chats` int(11) NOT NULL,\n\t\t\t\t  `delay_before_assign` int(11) NOT NULL,\n\t\t\t\t  `max_ac_dep_chats` int(11) NOT NULL,\n\t\t\t\t  `assign_same_language` int(11) NOT NULL,\n\t\t\t\t  `archive` tinyint(1) NOT NULL DEFAULT '0',\n\t\t\t\t  `max_load` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `max_load_h` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `disabled` int(11) NOT NULL,\n\t\t\t\t  `hidden` int(11) NOT NULL,\n\t\t\t\t  `delay_lm` int(11) NOT NULL,\n\t\t\t\t  `max_active_chats` int(11) NOT NULL,\n\t\t\t\t  `max_timeout_seconds` int(11) NOT NULL,\n\t\t\t\t  `identifier` varchar(2083) NOT NULL,\n\t\t\t\t  `mod_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `mod_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `tud_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `tud_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `wed_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `wed_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `thd_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `thd_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `frd_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `frd_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sad_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sad_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sud_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sud_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `nc_cb_execute` tinyint(1) NOT NULL,\n\t\t\t\t  `na_cb_execute` tinyint(1) NOT NULL,\n\t\t\t\t  `inform_unread` tinyint(1) NOT NULL,\n\t\t\t\t  `active_balancing` tinyint(1) NOT NULL,\n\t\t\t\t  `visible_if_online` tinyint(1) NOT NULL,\n\t\t\t\t  `inform_close` int(11) NOT NULL,\n\t\t\t\t  `inform_unread_delay` int(11) NOT NULL,\n\t\t\t\t  `inform_options` varchar(250) NOT NULL,\n\t\t\t\t  `online_hours_active` tinyint(1) NOT NULL,\n\t\t\t\t  `inform_delay` int(11) NOT NULL,\n\t\t\t\t  `attr_int_1` int(11) NOT NULL,\n\t\t\t\t  `attr_int_2` int(11) NOT NULL,\n\t\t\t\t  `attr_int_3` int(11) NOT NULL,\n\t\t\t\t  `pending_max` int(11) NOT NULL,\n\t\t\t\t  `pending_group_max` int(11) NOT NULL,\n\t\t\t\t  `active_chats_counter` int(11) NOT NULL,\n\t\t\t\t  `inactive_chats_cnt` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `pending_chats_counter` int(11) NOT NULL,\n\t\t\t\t  `bot_chats_counter` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `inop_chats_cnt` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `acop_chats_cnt` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `inform_close_all` int(11) NOT NULL,\n\t\t\t\t  `inform_close_all_email` varchar(250) NOT NULL,\n\t\t\t\t  `alias` varchar(50) NOT NULL,\n\t\t\t\t  `product_configuration` longtext NOT NULL,\n\t\t\t\t  `bot_configuration` text NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `identifier_2` (`identifier`(191)),\n\t\t\t\t  KEY `archive` (`archive`),\n\t\t\t\t  KEY `alias` (`alias`),\n\t\t\t\t  KEY `attr_int_1` (`attr_int_1`),\n\t\t\t\t  KEY `attr_int_2` (`attr_int_2`),\n\t\t\t\t  KEY `attr_int_3` (`attr_int_3`),\n\t\t\t\t  KEY `active_chats_counter` (`active_chats_counter`),\n\t\t\t\t  KEY `pending_chats_counter` (`pending_chats_counter`),\n\t\t\t\t  KEY `bot_chats_counter` (`bot_chats_counter`),\n\t\t\t\t  KEY `disabled_hidden` (`disabled`, `hidden`),\n\t\t\t\t  KEY `sort_priority_name` (`sort_priority`, `name`),\n\t\t\t\t  KEY `active_mod` (`online_hours_active`,`mod_start_hour`,`mod_end_hour`),\n\t\t\t\t  KEY `active_tud` (`online_hours_active`,`tud_start_hour`,`tud_end_hour`),\n\t\t\t\t  KEY `active_wed` (`online_hours_active`,`wed_start_hour`,`wed_end_hour`),\n\t\t\t\t  KEY `active_thd` (`online_hours_active`,`thd_start_hour`,`thd_end_hour`),\n\t\t\t\t  KEY `active_frd` (`online_hours_active`,`frd_start_hour`,`frd_end_hour`),\n\t\t\t\t  KEY `active_sad` (`online_hours_active`,`sad_start_hour`,`sad_end_hour`),\n\t\t\t\t  KEY `active_sud` (`online_hours_active`,`sud_start_hour`,`sud_end_hour`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_departament_group_user` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `dep_group_id` int(11) NOT NULL,\n                  `user_id` int(11) NOT NULL,\n                  `read_only` tinyint(1) unsigned NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`id`),\n                  KEY `dep_group_id` (`dep_group_id`),\n                  KEY `user_id` (`user_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_departament_availability` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `dep_id` int(11) NOT NULL, `hour` int(11) NOT NULL, `hourminute` int(4) NOT NULL, `minute` int(11) NOT NULL, `time` int(11) NOT NULL, `ymdhi` bigint(20) NOT NULL, `ymd` int(11) NOT NULL, `status` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `ymdhi` (`ymdhi`), KEY `dep_id` (`dep_id`),  KEY `hourminute` (`hourminute`), KEY `time` (`time`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_product_departament` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `product_id` int(11) NOT NULL,\n        \t       `departament_id` int(11) NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `departament_id` (`departament_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_departament_group_member` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `dep_id` int(11) NOT NULL,\n                  `dep_group_id` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `dep_group_id` (`dep_group_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_generic_bot_rest_api` (`id` bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY, `name` varchar(50) NOT NULL, `description` varchar(250), `configuration` text NOT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_departament_group` (\n                      `id` int(11) NOT NULL AUTO_INCREMENT,\n                      `name` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `achats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `inachats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `pchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `max_load` int(11) NOT NULL DEFAULT 0,\n                      `max_load_h` int(11) NOT NULL DEFAULT 0,\n                      `bchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `inopchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `acopchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      PRIMARY KEY (`id`)\n                    ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_canned_msg_tag_link` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `tag_id` int(11) NOT NULL,  `canned_id` int(11) NOT NULL,  PRIMARY KEY (`id`), KEY `canned_id` (`canned_id`), KEY `tag_id` (`tag_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_canned_msg_tag` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `tag` varchar(40) NOT NULL, PRIMARY KEY (`id`), KEY `tag` (`tag`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_subject` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `internal` tinyint(1) NOT NULL DEFAULT 0,\n  `internal_type` varchar(20) NOT NULL DEFAULT '',\n  PRIMARY KEY (`id`),\n  KEY `internal` (`internal`),\n  KEY `internal_type` (`internal_type`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_subject_dep` ( `id` int(11) NOT NULL AUTO_INCREMENT, `dep_id` int(11) NOT NULL, `subject_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `subject_id` (`subject_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_abstract_subject_chat` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `subject_id` int(11) NOT NULL, `chat_id` bigint(20) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_group_object` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `object_id` bigint(20) NOT NULL, `group_id` bigint(20) NOT NULL, `type` bigint(20) NOT NULL, PRIMARY KEY (`id`), KEY `object_id_type` (`object_id`,`type`), KEY `group_id` (`group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Bot tables\n                    $db->query(\"CREATE TABLE `lh_generic_bot_bot` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `configuration` longtext NOT NULL, `avatar` varchar(150) NOT NULL, `filename` varchar(250) NOT NULL, `filepath` varchar(250) NOT NULL, `name` varchar(100) NOT NULL, `nick` varchar(100) NOT NULL,`attr_str_1` varchar(100) NOT NULL, `attr_str_2` varchar(100) NOT NULL, `attr_str_3` varchar(100) NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_group` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL,`is_collapsed` int(11) NOT NULL DEFAULT '0', `pos` int(11) NOT NULL DEFAULT '0', `bot_id` bigint(20) NOT NULL, PRIMARY KEY (`id`), KEY `bot_id` (`bot_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_trigger` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL, `actions` longtext NOT NULL, `group_id` bigint(20) NOT NULL, `bot_id` int(11) NOT NULL, `default` int(11) NOT NULL, `default_unknown` int(11) NOT NULL, `as_argument` int(11) NOT NULL DEFAULT '0', `in_progress` int(11) NOT NULL DEFAULT '0', `default_unknown_btn` int(11) NOT NULL DEFAULT '0', `default_always` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `bot_id` (`bot_id`),  KEY `default_unknown` (`default_unknown`), KEY `in_progress` (`in_progress`), KEY `default_unknown_btn` (`default_unknown_btn`), KEY `default_always` (`default_always`), KEY `group_id` (`group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_trigger_event` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `pattern` text NOT NULL, `pattern_exc` text NOT NULL, `configuration` longtext NOT NULL, `trigger_id` bigint(20) NOT NULL, `bot_id` int(11) NOT NULL, `on_start_type` tinyint(1) NOT NULL, `priority` int(11) NOT NULL, `type` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `pattern_v2` (`pattern`(191)), KEY `type` (`type`), KEY `on_start_type` (`on_start_type`), KEY `trigger_id` (`trigger_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_payload` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL, `payload` varchar(100) NOT NULL, `bot_id` int(11) NOT NULL, `trigger_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `bot_id` (`bot_id`), KEY `trigger_id` (`trigger_id`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_chat_workflow` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL,`trigger_id` bigint(20) NOT NULL, `time` int(11) NOT NULL, `identifier` varchar(100) NOT NULL, `status` int(11) NOT NULL, `collected_data` text, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_chat_event` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `counter` int(11) NOT NULL, `content` longtext NOT NULL, `ctime` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_pending_event` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `trigger_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_exception` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL, `priority` int(11) NOT NULL, `active` tinyint(1) NOT NULL, PRIMARY KEY (`id`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_exception_message` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `code` varchar(20) NOT NULL, `exception_group_id` int(11) NOT NULL, `priority` int(11) NOT NULL, `active` tinyint(1) NOT NULL, `message` text NOT NULL, PRIMARY KEY (`id`), KEY `code` (`code`), KEY `exception_group_id` (`exception_group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_tr_group` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL,`filename` varchar(250) NOT NULL,`filepath` varchar(250) NOT NULL,`configuration` longtext NOT NULL,`nick` varchar(100) NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_tr_item` ( `id` int(11) NOT NULL AUTO_INCREMENT, `group_id` int(11) NOT NULL, `identifier` varchar(50) NOT NULL, `translation` text NOT NULL, PRIMARY KEY (`id`),  KEY `identifier` (`identifier`), KEY `group_id` (`group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_speech_user_language` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `user_id` bigint(20) NOT NULL, `language` varchar(20) NOT NULL, PRIMARY KEY (`id`), KEY `user_id_language` (`user_id`,`language`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_audits` (`id` bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY, `category` varchar(255) NOT NULL, `file` varchar(255), `object_id` bigint(20) DEFAULT '0', `line` bigint(20), `message` longtext NOT NULL, `severity` varchar(255) NOT NULL, `source` varchar(255) NOT NULL, `time` timestamp NOT NULL, KEY `object_id` (`object_id`), KEY `source` (`source`(191)), KEY `category` (`category`(191))) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_chat_online_user_footprint_update` (`online_user_id` bigint(20) NOT NULL,  `command` varchar(20) NOT NULL,  `args` varchar(250) NOT NULL,  `ctime` int(11) NOT NULL, KEY `online_user_id` (`online_user_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_repeat_restrict` (`id` bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY, `chat_id` bigint(20) NOT NULL, `trigger_id` bigint(20), `identifier` varchar(20), `counter` int(11) DEFAULT '0', KEY `chat_id_trigger_id` (`chat_id`,`trigger_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_users_login` (`id` bigint(20) NOT NULL AUTO_INCREMENT,`user_id` bigint(20) NOT NULL,`type` int(11) NOT NULL,`ctime` bigint(20) NOT NULL,`status` int(11) NOT NULL,`ip` varchar(100) NOT NULL,`msg` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,PRIMARY KEY (`id`),KEY `user_id_type` (`user_id`,`type`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                    $Departament = new erLhcoreClassModelDepartament();\n                    $Departament->name = $form->DefaultDepartament;\n                    erLhcoreClassDepartament::getSession()->save($Departament);\n\n                    //Department custom work hours\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_departament_custom_work_hours` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `date_from` int(11) NOT NULL,\n\t\t\t\t  `date_to` int(11) NOT NULL,\n\t\t\t\t  `start_hour` int(11) NOT NULL,\n\t\t\t\t  `end_hour` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `date_from` (`date_from`),\n\t\t\t\t  KEY `search_active` (`date_from`, `date_to`, `dep_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    //Administrators group\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_group` (\n               `id` int(11) NOT NULL AUTO_INCREMENT,\n               `name` varchar(50) NOT NULL,\n               `disabled` tinyint(1) NOT NULL,\n               `required` tinyint(1) NOT NULL DEFAULT '0',\n               PRIMARY KEY (`id`),\n               KEY `disabled` (`disabled`)\n               ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Admin group\n                    $GroupData = new erLhcoreClassModelGroup();\n                    $GroupData->name    = \"Administrators\";\n                    erLhcoreClassUser::getSession()->save($GroupData);\n\n                    // Precreate operators group\n                    $GroupDataOperators = new erLhcoreClassModelGroup();\n                    $GroupDataOperators->name    = \"Operators\";\n                    erLhcoreClassUser::getSession()->save($GroupDataOperators);\n\n                    //Administrators role\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_role` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `name` varchar(50) NOT NULL,\n                  PRIMARY KEY (`id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Administrators role\n                    $Role = new erLhcoreClassModelRole();\n                    $Role->name = 'Administrators';\n                    erLhcoreClassRole::getSession()->save($Role);\n\n                    // Operators role\n                    $RoleOperators = new erLhcoreClassModelRole();\n                    $RoleOperators->name = 'Operators';\n                    erLhcoreClassRole::getSession()->save($RoleOperators);\n\n                    //Assing group role\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_grouprole` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `group_id` int(11) NOT NULL,\n                  `role_id` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `group_id` (`role_id`,`group_id`),\n                  KEY `group_id_primary` (`group_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Assign admin role to admin group\n                    $GroupRole = new erLhcoreClassModelGroupRole();\n                    $GroupRole->group_id =$GroupData->id;\n                    $GroupRole->role_id = $Role->id;\n                    erLhcoreClassRole::getSession()->save($GroupRole);\n\n                    // Assign operators role to operators group\n                    $GroupRoleOperators = new erLhcoreClassModelGroupRole();\n                    $GroupRoleOperators->group_id =$GroupDataOperators->id;\n                    $GroupRoleOperators->role_id = $RoleOperators->id;\n                    erLhcoreClassRole::getSession()->save($GroupRoleOperators);\n\n                    // Users\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `username` varchar(80) NOT NULL,\n                  `password` varchar(200) NOT NULL,\n                  `email` varchar(100) NOT NULL,\n                  `time_zone` varchar(100) NOT NULL,\n                  `name` varchar(100) NOT NULL,\n                  `surname` varchar(100) NOT NULL,\n                  `filepath` varchar(200) NOT NULL,\n                  `filename` varchar(200) NOT NULL,\n                  `job_title` varchar(100) NOT NULL,\n                  `departments_ids` text NOT NULL,\n                  `chat_nickname` varchar(100) NOT NULL,\n                  `xmpp_username` varchar(200) NOT NULL,\n                  `session_id` varchar(40) NOT NULL,\n                  `avatar` varchar(150) NOT NULL,\n                  `operation_admin` text NOT NULL,\n                  `skype` varchar(50) NOT NULL,\n                  `exclude_autoasign` tinyint(1) NOT NULL,\n                  `disabled` tinyint(4) NOT NULL,\n                  `hide_online` tinyint(1) NOT NULL,\n                  `all_departments` tinyint(1) NOT NULL,\n                  `invisible_mode` tinyint(1) NOT NULL,\n                  `inactive_mode` tinyint(1) NOT NULL,\n                  `rec_per_req` tinyint(1) NOT NULL,\n                  `auto_accept` tinyint(1) NOT NULL,\n                  `max_active_chats` int(11) NOT NULL,\n                  `cache_version` int(11) unsigned NOT NULL DEFAULT '0',\n                  `pswd_updated` int(11) NOT NULL,\n                  `attr_int_1` int(11) NOT NULL,\n                  `attr_int_2` int(11) NOT NULL,\n                  `attr_int_3` int(11) NOT NULL,\n                  `force_logout` tinyint(1) unsigned NOT NULL DEFAULT '0',\n                  `llogin` bigint(20) unsigned NOT NULL DEFAULT '0',\n                  `always_on` tinyint(1) NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`id`),\n                  KEY `hide_online` (`hide_online`),\n                  KEY `rec_per_req` (`rec_per_req`),\n                  KEY `disabled` (`disabled`),\n                  KEY `email` (`email`),\n                  KEY `xmpp_username` (`xmpp_username`(191))\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $UserData = new erLhcoreClassModelUser();\n\n                    $UserData->setPassword($form->AdminPassword);\n                    $UserData->email   = $form->AdminEmail;\n                    $UserData->name    = $form->AdminName;\n                    $UserData->surname = $form->AdminSurname;\n                    $UserData->username = $form->AdminUsername;\n                    $UserData->all_departments = 1;\n                    $UserData->departments_ids = 0;\n                    $UserData->pswd_updated = time();\n\n                    erLhcoreClassUser::getSession()->save($UserData);\n\n                    // User departaments\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_userdep` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `user_id` int(11) NOT NULL,\n                  `dep_id` int(11) NOT NULL,\n                  `last_activity` int(11) NOT NULL,\n                  `lastd_activity` int(11) NOT NULL DEFAULT '0',\n                  `exclude_autoasign` tinyint(1) NOT NULL DEFAULT '0',\n                  `hide_online` int(11) NOT NULL,\n                  `last_accepted` int(11) NOT NULL DEFAULT '0',\n                  `active_chats` int(11) NOT NULL DEFAULT '0',\n                  `pending_chats` int(11) NOT NULL DEFAULT '0',\n                  `inactive_chats` int(11) NOT NULL DEFAULT '0',\n                  `max_chats` int(11) NOT NULL DEFAULT '0',\n                  `type` int(11) NOT NULL DEFAULT '0',\n                  `ro` tinyint(1) NOT NULL DEFAULT '0',\n                  `hide_online_ts` int(11) NOT NULL DEFAULT '0',\n                  `dep_group_id` int(11) NOT NULL DEFAULT '0',\n                  `always_on` tinyint(1) NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`id`),\n                  KEY `last_activity_hide_online_dep_id` (`last_activity`,`hide_online`,`dep_id`),\n                  KEY `dep_id` (`dep_id`),\n                  KEY `user_id_type` (`user_id`,`type`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n                    // Insert record to departament instantly\n                    $db->query(\"INSERT INTO `lh_userdep` (`user_id`,`dep_id`,`last_activity`,`hide_online`,`last_accepted`,`active_chats`,`type`,`dep_group_id`,`exclude_autoasign`) VALUES ({$UserData->id},0,0,0,0,0,0,0,0)\");\n\n                    $db->query(\"CREATE TABLE `lh_group_work` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `group_id` int(11) NOT NULL, `group_work_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `group_id` (`group_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Transfer chat\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_transfer` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `chat_id` int(11) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `transfer_user_id` int(11) NOT NULL,\n\t\t\t\t  `from_dep_id` int(11) NOT NULL,\n\t\t\t\t  `ctime` int(11) NOT NULL,\n\t\t\t\t  `transfer_to_user_id` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `transfer_user_id_dep_id` (`transfer_user_id`,`dep_id`),\n\t\t\t\t  KEY `transfer_to_user_id` (`transfer_to_user_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Remember user table\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users_remember` (\n\t\t\t\t `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t `user_id` int(11) NOT NULL,\n\t\t\t\t `mtime` int(11) NOT NULL,\n\t\t\t\t PRIMARY KEY (`id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_generic_bot_command` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `command` varchar(50) NOT NULL,\n  `bot_id` int(11) NOT NULL,\n  `trigger_id` int(11) NOT NULL,\n  `dep_id` int(11) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `dep_id` (`dep_id`),\n  KEY `command` (`command`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_canned_msg_subject` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `canned_id` int(11) NOT NULL,\n    `subject_id` int(11) NOT NULL,\n    PRIMARY KEY (`id`),\n    KEY `canned_id` (`canned_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_canned_msg_replace` (\n                    `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n                    `identifier` varchar(50) NOT NULL,\n                    `default` text NOT NULL, `conditions` longtext NOT NULL,\n                    PRIMARY KEY (`id`),\n                   KEY `identifier` (`identifier`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_saved_search` (\n                    `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `params` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `user_id` bigint(20) unsigned NOT NULL,\n                  `position` int(11) unsigned NOT NULL,\n                  `scope` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `days` int(11) unsigned NOT NULL,\n                  `updated_at` bigint(20) unsigned NOT NULL,\n                  `requested_at` bigint(20) unsigned NOT NULL,\n                  `total_records` bigint(20) unsigned NOT NULL,\n                  `passive` tinyint(1) unsigned NOT NULL DEFAULT 0,\n                  PRIMARY KEY (`id`),\n                  KEY `user_id` (`user_id`),\n                  KEY `scope` (`scope`),\n                  KEY `updated_at` (`updated_at`),\n                  KEY `requested_at` (`requested_at`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // API table\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_rest_api_key` (\n                    `id` int(11) NOT NULL AUTO_INCREMENT,\n                    `api_key` varchar(50) NOT NULL,\n                    `user_id` int(11) NOT NULL DEFAULT '0',\n                    `active` int(11) NOT NULL DEFAULT '0',\n                    `ip_restrictions` varchar(250) NOT NULL,\n                    PRIMARY KEY (`id`),\n                    KEY `api_key` (`api_key`),\n                    KEY `user_id` (`user_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_rest_api_key_remote` ( `id` int(11) NOT NULL AUTO_INCREMENT, `api_key` varchar(50) NOT NULL, `username` varchar(50) NOT NULL, `name` varchar(50) NOT NULL, `host` varchar(250) NOT NULL, `active` tinyint(1) NOT NULL DEFAULT '0', `position` int(11) NOT NULL DEFAULT '0', PRIMARY KEY (`id`), KEY `active` (`active`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n                    $db->query(\"CREATE TABLE `lh_abstract_chat_variable` ( `id` int(11) NOT NULL AUTO_INCREMENT, `var_name` varchar(255) NOT NULL, `var_identifier` varchar(255) NOT NULL,`inv` tinyint(1) NOT NULL, `change_message` varchar(250) NOT NULL, `type` tinyint(1) NOT NULL, `persistent` tinyint(1) NOT NULL, `js_variable` varchar(255) NOT NULL, `dep_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `dep_id` (`dep_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_webhook` ( `id` int(11) NOT NULL AUTO_INCREMENT, `event` varchar(50) NOT NULL, `bot_id_alt` int(11) NOT NULL DEFAULT '0', `trigger_id_alt` int(11) NOT NULL DEFAULT '0', `bot_id` int(11) NOT NULL, `trigger_id` int(11) NOT NULL, `disabled` tinyint(1) NOT NULL, `configuration` longtext NOT NULL, `type` tinyint(1) NOT NULL DEFAULT 0, PRIMARY KEY (`id`), KEY `event_disabled` (`event`,`disabled`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_incoming_webhook` ( `id` int(11) NOT NULL AUTO_INCREMENT, `dep_id` int(11) NOT NULL, `name` varchar(50) NOT NULL,`identifier` varchar(50) NOT NULL, `scope` varchar(50) NOT NULL, `disabled` tinyint(1) NOT NULL, `configuration` longtext NOT NULL, PRIMARY KEY (`id`), KEY `identifier` (`identifier`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_chat_incoming` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `utime` bigint(20) NOT NULL, `incoming_id` int(11) NOT NULL,`payload` longtext NOT NULL, `chat_external_id` varchar(50) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`),  KEY `incoming_ext_id` (`incoming_id`,`chat_external_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_chat_column` (`id` int(11) NOT NULL AUTO_INCREMENT,`column_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,`variable` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL, `position` int(11) NOT NULL, `enabled` tinyint(1) NOT NULL, `online_enabled` tinyint(1) NOT NULL, `chat_enabled` tinyint(1) NOT NULL, `conditions` text COLLATE utf8mb4_unicode_ci NOT NULL,`column_icon` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL, `column_identifier` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL, PRIMARY KEY (`id`), KEY `enabled` (`enabled`), KEY `online_enabled` (`online_enabled`), KEY `chat_enabled` (`chat_enabled`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_abstract_chat_priority` (`id` int(11) NOT NULL AUTO_INCREMENT,`value` text COLLATE utf8mb4_unicode_ci NOT NULL,`dep_id` int(11) NOT NULL, `dest_dep_id` int(11) NOT NULL DEFAULT 0, `sort_priority` int(11) NOT NULL DEFAULT 0,`priority` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `dep_id` (`dep_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_canned_msg_use` (`id` bigint(20) unsigned NOT NULL AUTO_INCREMENT, `canned_id` int(11) unsigned NOT NULL, `chat_id` bigint(20) unsigned NOT NULL, `ctime` bigint(20) unsigned NOT NULL, `user_id` bigint(20) unsigned NOT NULL, PRIMARY KEY (`id`), KEY `ctime` (`ctime`), KEY `chat_id` (`chat_id`), KEY `canned_id` (`canned_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                    // Session\n                    $db->query(\"CREATE TABLE `lh_users_session` (\n                      `id` int(11) NOT NULL AUTO_INCREMENT,\n                      `token` varchar(40) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `device_type` int(11) NOT NULL,\n                      `device_token` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `user_id` int(11) NOT NULL,\n                      `created_on` int(11) NOT NULL,\n                      `updated_on` int(11) NOT NULL,\n                      `expires_on` int(11) NOT NULL,\n                      `notifications_status` int(11) NOT NULL DEFAULT 1,\n                      `error` int(11) NOT NULL DEFAULT 0,\n                      `last_error` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      PRIMARY KEY (`id`),\n                      KEY `token` (`token`),\n                      KEY `device_token_device_type_v2` (`device_token`(191),`device_type`),\n                      KEY `error` (`error`)\n                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Chat messages\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_msg` (\n\t\t\t\t  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `msg` longtext NOT NULL,\n\t\t\t\t  `meta_msg` longtext NOT NULL,\n\t\t\t\t  `time` int(11) NOT NULL,\n\t\t\t\t  `chat_id` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `user_id` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `name_support` varchar(100) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `chat_id_id` (`chat_id`, `id`),\n\t\t\t\t  KEY `user_id` (`user_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Forgot password table\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_forgotpasswordhash` (\n                `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,\n                `user_id` INT NOT NULL ,\n                `hash` VARCHAR( 40 ) NOT NULL ,\n                `created` INT NOT NULL\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // User groups table\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_groupuser` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `group_id` int(11) NOT NULL,\n                  `user_id` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `group_id` (`group_id`),\n                  KEY `user_id` (`user_id`),\n                  KEY `group_id_2` (`group_id`,`user_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Assign admin user to admin group\n                    $GroupUser = new erLhcoreClassModelGroupUser();\n                    $GroupUser->group_id = $GroupData->id;\n                    $GroupUser->user_id = $UserData->id;\n                    erLhcoreClassUser::getSession()->save($GroupUser);\n\n                    //Assign default role functions\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_rolefunction` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `role_id` int(11) NOT NULL,\n                  `module` varchar(100) NOT NULL,\n                  `function` varchar(100) NOT NULL,\n                  `limitation` text NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `role_id` (`role_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Admin role and function\n                    $RoleFunction = new erLhcoreClassModelRoleFunction();\n                    $RoleFunction->role_id = $Role->id;\n                    $RoleFunction->module = '*';\n                    $RoleFunction->function = '*';\n                    erLhcoreClassRole::getSession()->save($RoleFunction);\n\n                    // Operators rules and functions\n                    $permissionsArray = array(\n                        array('module' => 'lhuser',  'function' => 'selfedit'),\n                        array('module' => 'lhuser',  'function' => 'change_chat_nickname'),\n                        array('module' => 'lhuser',  'function' => 'changephoto'),\n                        array('module' => 'lhuser',  'function' => 'change_job_title'),\n                        array('module' => 'lhuser',  'function' => 'change_core_attributes'),\n                        array('module' => 'lhuser',  'function' => 'change_name_surname'),\n                        array('module' => 'lhuser',  'function' => 'selfedit'),\n                        array('module' => 'lhuser',  'function' => 'changeonlinestatus'),\n                        array('module' => 'lhuser',  'function' => 'changeskypenick'),\n                        array('module' => 'lhuser',  'function' => 'personalcannedmsg'),\n                        array('module' => 'lhuser',  'function' => 'change_visibility_list'),\n                        array('module' => 'lhuser',  'function' => 'see_assigned_departments'),\n                        array('module' => 'lhuser',  'function' => 'canseedepartmentstats'),\n                        array('module' => 'lhchat',  'function' => 'use'),\n                        array('module' => 'lhchat',  'function' => 'open_all'),\n                        array('module' => 'lhchat',  'function' => 'chattabschrome'),\n                        array('module' => 'lhchat',  'function' => 'singlechatwindow'),\n                        array('module' => 'lhchat',  'function' => 'allowopenremotechat'),\n                        array('module' => 'lhchat',  'function' => 'writeremotechat'),\n                        array('module' => 'lhchat',  'function' => 'allowchattabs'),\n                        array('module' => 'lhchat',  'function' => 'use_onlineusers'),\n                        array('module' => 'lhchat',  'function' => 'take_screenshot'),\n                        array('module' => 'lhfront', 'function' => 'use'),\n                        array('module' => 'lhsystem','function' => 'use'),\n                        array('module' => 'lhtranslation','function' => 'use'),\n                        array('module' => 'lhchat',  'function' => 'allowblockusers'),\n                        array('module' => 'lhsystem','function' => 'generatejs'),\n                        array('module' => 'lhsystem','function' => 'changelanguage'),\n                        array('module' => 'lhchat',  'function' => 'allowredirect'),\n                        array('module' => 'lhchat',  'function' => 'allowtransfer'),\n                        array('module' => 'lhchat',  'function' => 'allowtransferdirectly'),\n                        array('module' => 'lhchat',  'function' => 'administratecannedmsg'),\n                        array('module' => 'lhchat',  'function' => 'explorecannedmsg'),\n                        array('module' => 'lhchat',  'function' => 'sees_all_online_visitors'),\n                        array('module' => 'lhpermission',   'function' => 'see_permissions'),\n                        array('module' => 'lhquestionary',  'function' => 'manage_questionary'),\n                        array('module' => 'lhfaq',   \t\t'function' => 'manage_faq'),\n                        array('module' => 'lhchatbox',   \t'function' => 'manage_chatbox'),\n                        array('module' => 'lhbrowseoffer',  'function' => 'manage_bo'),\n                        array('module' => 'lhxml',   \t\t'function' => '*'),\n                        array('module' => 'lhcobrowse',   \t'function' => 'browse'),\n                        array('module' => 'lhfile',   \t\t'function' => 'use_operator'),\n                        array('module' => 'lhfile',   \t\t'function' => 'file_delete_chat'),\n                        array('module' => 'lhstatistic',   \t'function' => 'use'),\n                        array('module' => 'lhspeech', 'function' => 'changedefaultlanguage'),\n                        array('module' => 'lhspeech', 'function' => 'use'),\n                        array('module' => 'lhcannedmsg', 'function' => 'use'),\n                        array('module' => 'lhcannedmsg', 'function' => 'see_global'),\n                        array('module' => 'lhchat', 'function' => 'prev_chats'),\n                        array('module' => 'lhtheme', 'function' => 'personaltheme'),\n                        array('module' => 'lhuser', 'function' => 'userlistonline'),\n                        array('module' => 'lhspeech', 'function' => 'change_chat_recognition'),\n                        array('module' => 'lhgroupchat', 'function' => 'use'),\n                        array('module' => 'lhuser', 'function' => 'see_all_group_users'),\n                        array('module' => 'lhvoicevideo', 'function' => 'use'),\n                        array('module' => 'lhtheme', 'function' => 'use_operator'),\n                        array('module' => 'lhgenericbot', 'function' => 'use_operator'),\n                    );\n\n                    foreach ($permissionsArray as $paramsPermission) {\n                        $RoleFunctionOperator = new erLhcoreClassModelRoleFunction();\n                        $RoleFunctionOperator->role_id = $RoleOperators->id;\n                        $RoleFunctionOperator->module = $paramsPermission['module'];\n                        $RoleFunctionOperator->function = $paramsPermission['function'];\n                        erLhcoreClassRole::getSession()->save($RoleFunctionOperator);\n                    }\n\n                    $cfgSite = erConfigClassLhConfig::getInstance();\n                    $cfgSite->setSetting( 'site', 'installed', true);\n                    $cfgSite->setSetting( 'site', 'templatecache', true);\n                    $cfgSite->setSetting( 'site', 'templatecompile', true);\n                    $cfgSite->setSetting( 'site', 'modulecompile', true);\n                    $cfgSite->setSetting( 'webhooks', 'enabled', (!empty(getenv('LHC_WEBHOOKS_ENABLED')) ? getenv('LHC_WEBHOOKS_ENABLED') : 0));\n                    $cfgSite->save();\n\n                    $tpl->setFile('lhinstall/install4.tpl.php');\n\n                } else {\n\n                    $tpl->set('admin_username',$form->AdminUsername);\n                    if ( $form->hasValidData( 'AdminEmail' ) ) $tpl->set('admin_email',$form->AdminEmail);\n                    $tpl->set('admin_name',$form->AdminName);\n                    $tpl->set('admin_surname',$form->AdminSurname);\n                    $tpl->set('admin_departament',$form->DefaultDepartament);\n\n                    $tpl->set('errors',$Errors);\n\n                    $tpl->setFile('lhinstall/install3.tpl.php');\n                }\n            } else {\n                $tpl->setFile('lhinstall/install3.tpl.php');\n            }\n\n            break;\n\n        case '4':\n            $tpl->setFile('lhinstall/install4.tpl.php');\n            break;\n\n        default:\n            $tpl->setFile('lhinstall/install1.tpl.php');\n            break;\n    }\n\n    $Result['content'] = $tpl->fetch();\n    $Result['pagelayout'] = 'install';\n    $Result['path'] = array(array('title' => 'Live helper chat installation'));\n\n} catch (Exception $e) {\n    echo \"Make sure that &quot;cache/*&quot; is writable and then <a href=\\\"\".erLhcoreClassDesign::baseurl('install/install').\"\\\">try again</a>\";\n\n    echo \"<pre>\";\n    print_r($e);\n    echo \"</pre>\";\n    exit;\n}\n?>\n", "<?php\n\n$tpl = erLhcoreClassTemplate::getInstance('lhpermission/explorer.tpl.php');\n\nif ($Params['user_parameters_unordered']['action'] == 1) {\n    $filename = \"permissions-\" . date('Y-m-d') . \".csv\";\n    $fp = fopen('php://output', 'w');\n\n    header('Content-type: application/csv');\n    header('Content-Disposition: attachment; filename=' . $filename);\n    fputcsv($fp, [\n        erTranslationClassLhTranslation::getInstance()->getTranslation('permission/explorer', 'Module'),\n        erTranslationClassLhTranslation::getInstance()->getTranslation('permission/explorer', 'Permission'),\n        erTranslationClassLhTranslation::getInstance()->getTranslation('permission/explorer', 'Explain'),\n        erTranslationClassLhTranslation::getInstance()->getTranslation('permission/explorer', 'Used by URL')]);\n\n    foreach (erLhcoreClassModules::getModuleList() as $key => $Module) {\n        $moduleFunctions = erLhcoreClassModules::getModuleFunctions($key, array('extract_url' => true));\n        if (count($moduleFunctions) > 0) {\n            foreach ($moduleFunctions as $keyFunction => $function) {\n                $url = [];\n                if (isset($function['url'])) {\n                    foreach ($function['url'] as $urlData) {\n                        $url[] = (erLhcoreClassSystem::$httpsMode == true ? 'https:' : 'http:') . '//' . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurl('/') . preg_replace('/^lh/', '', $urlData);\n                    }\n                }\n                fputcsv($fp, [\n                    '[' . $key . '] ' . $Module['name'],\n                    $keyFunction,\n                    $function['explain'],\n                    implode(\"\\n\", $url)\n                ]);\n            }\n        }\n    }\n    exit;\n}\n\nif ($Params['user_parameters_unordered']['action'] == 2) {\n\n    $sysConfiguration = erLhcoreClassSystem::instance()->RequestURI = $_POST['url'];\n    erLhcoreClassURL::resetInstance();\n\n    $url = erLhcoreClassURL::getInstance();\n\n    $currentModuleName = preg_replace('/[^a-zA-Z0-9\\-_]/', '', $url->getParam( 'module' ));\n    $currentView = preg_replace('/[^a-zA-Z0-9\\-_]/', '', $url->getParam( 'function' ));\n\n    $moduleFunctions = erLhcoreClassModules::getModuleFunctions('lh'.$currentModuleName, array('extract_url' => true));\n\n    $requiredPermissions = [];\n\n    foreach ($moduleFunctions as $permission => $moduleFunction) {\n        if (isset($moduleFunction['url']) && in_array('lh'.$currentModuleName.'/'.$currentView, $moduleFunction['url'])) {\n            $requiredPermissions[] = [\n                'permission' => $permission,\n                'explain' => $moduleFunction['explain']\n            ];\n        }\n    }\n\n    $moduleData = [\n        'module' => 'lh'.$currentModuleName,\n        'name' => erLhcoreClassModules::getModuleName('lh'.$currentModuleName),\n        'permissions' => $requiredPermissions\n    ];\n\n    echo \"<pre class='bg-secondary text-white p-2'>\";\n    echo htmlspecialchars(json_encode($moduleData,JSON_PRETTY_PRINT));\n    echo \"</pre>\";\n\n    exit;\n}\n\n$Result['content'] = $tpl->fetch();\n\n?>\n", "<?php\n\ntry {\n    erLhcoreClassRestAPIHandler::validateRequest();\n    \n    if (!erLhcoreClassRestAPIHandler::hasAccessTo('lhchat', 'use')) {\n        throw new Exception('You do not have permission. `lhchat`, `use` is required.');\n    }\n\n    $chat = erLhcoreClassModelChat::fetch((int)$_GET['chat_id']);\n\n    // Try to find chat in archive\n    if (!($chat instanceof erLhcoreClassModelChat)) {\n        $chatData = erLhcoreClassChatArcive::fetchChatById((int)$_GET['chat_id']);\n        if (!($chatData['chat'] instanceof erLhcoreClassModelChatArchive)) {\n            throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'Could not find chat by chat_id!'));\n        } else {\n            $chat = $chatData['chat'];\n            $chat->archive = $chatData['archive'];\n        }\n    } else {\n        $chat->archive = null;\n    }\n\n    if (erLhcoreClassRestAPIHandler::hasAccessToRead($chat) == true) {\n\n        $saveChat = false;\n\n        if (isset($_GET['workflow']) && $_GET['workflow'] == true && $chat->archive === null) {\n            // Auto responder\n            if ($chat->status == erLhcoreClassModelChat::STATUS_PENDING_CHAT && $chat->wait_timeout_send <= 0 && $chat->wait_timeout > 0 && !empty($chat->timeout_message) && (time() - $chat->time) > ($chat->wait_timeout*($chat->wait_timeout_repeat-(abs($chat->wait_timeout_send))))) {\n                $errors = array();\n                erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_auto_responder_triggered',array('chat' => & $chat, 'errors' => & $errors));\n            \n                if (empty($errors)) {\n                    erLhcoreClassChatWorkflow::timeoutWorkflow($chat);\n                } else {\n                    $msg = new erLhcoreClassModelmsg();\n                    $msg->msg = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/adminchat','Auto responder got error').': '.implode('; ', $errors);\n                    $msg->chat_id = $chat->id;\n                    $msg->user_id = -1;\n                    $msg->time = time();\n            \n                    if ($chat->last_msg_id < $msg->id) {\n                        $chat->last_msg_id = $msg->id;\n                    }\n            \n                    erLhcoreClassChat::getSession()->save($msg);\n                }\n            \n            }\n            \n            if ($chat->status == erLhcoreClassModelChat::STATUS_PENDING_CHAT && $chat->transfer_if_na == 1 && $chat->transfer_timeout_ts < (time()-$chat->transfer_timeout_ac) ) {\n            \n                $canExecuteWorkflow = true;\n            \n                if (erLhcoreClassModelChatConfig::fetch('pro_active_limitation')->current_value >= 0) {\n                    if ($chat->department !== false && $chat->department->department_transfer_id > 0) {\n                        $canExecuteWorkflow = erLhcoreClassChat::getPendingChatsCountPublic($chat->department->department_transfer_id) <= erLhcoreClassModelChatConfig::fetch('pro_active_limitation')->current_value;\n                    }\n                }\n            \n                if ($canExecuteWorkflow == true) {\n                    erLhcoreClassChatWorkflow::transferWorkflow($chat);\n                }\n            }\n            \n            if ($chat->reinform_timeout > 0 && $chat->unread_messages_informed == 0 && $chat->has_unread_messages == 1 && (time()-$chat->last_user_msg_time) > $chat->reinform_timeout) {\n                $department = $chat->department;\n                if ($department !== false) {\n                    $options = $department->inform_options_array;\n                    erLhcoreClassChatWorkflow::unreadInformWorkflow(array('department' => $department,'options' => $options),$chat);\n                }\n            }\n            \n        }\n        \n        // Operator typing\n        if ( $chat->is_operator_typing == true) {\n            erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.syncuser.operator_typing',array('chat' => & $chat));\n            $ott = ($chat->operator_typing_user !== false) ? $chat->operator_typing_user->name_support . ' ' . erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chat','is typing now...') : erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chat','Operator is typing now...');\n        }  elseif ($chat->is_operator_typing == false) {\n            $ott = '';\n        }\n\n        $lastMessageId = isset($_GET['last_message_id']) ? (int)$_GET['last_message_id'] : 0;\n        \n        if ($chat->archive === null) {\n            $messages = erLhcoreClassChat::getPendingMessages($chat->id, $lastMessageId);\n        } else {\n            $messages = erLhcoreClassChatArcive::getPendingMessages($chat->id, $lastMessageId);\n        }\n\n        if (isset($_GET['ignore_system_messages']) && ($_GET['ignore_system_messages'] == 'true' || $_GET['ignore_system_messages'] == '1'))\n        {\n            foreach ($messages as $key => $data) {\n                if ($data['user_id'] == -1) {\n                    unset($messages[$key]);\n                }\n                $lastMessageId = $data['id'];\n            }\n        }\n\n        // Extract media within message if required\n        if (isset($_GET['extract_media']) && ($_GET['extract_media'] == 'true' || $_GET['extract_media'] == '1')) {\n            foreach ($messages as $key => $msg) {\n                $matches = array();\n\n                $msg_text_cleaned = $msg['msg'];\n\n                preg_match_all('/\\[file=\"?(.*?)\"?\\]/', $msg_text_cleaned, $matches);\n\n                $media = array();\n\n                foreach ($matches[1] as $index => $body) {\n                    $parts = explode('_', $body);\n                    $fileID = $parts[0];\n                    $hash = $parts[1];\n                    try {\n                        $file = erLhcoreClassModelChatFile::fetch($fileID);\n                        if (is_object($file) && $hash == $file->security_hash) {\n\n                            $url = (erLhcoreClassSystem::$httpsMode == true ? 'https:' : 'http:') . '//' . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurldirect('file/downloadfile') . \"/{$file->id}/{$hash}\";\n\n                            $media[] = array(\n                                'id' => $file->id,\n                                'size' => $file->size,\n                                'upload_name' => $file->upload_name,\n                                'type' => $file->type,\n                                'extension' => $file->extension,\n                                'hash' => $hash,\n                                'url' => $url,\n                            );\n\n                            $msg_text_cleaned = str_replace($matches[0][$index],'',$msg_text_cleaned);\n                        }\n\n                    } catch (Exception $e) {\n\n                    }\n                }\n\n                // Set message text to empty if only file was send\n                if (trim($msg_text_cleaned) == '' && isset($_GET['remove_media']) && ($_GET['remove_media'] == 'true' || $_GET['remove_media'] == '1') ) {\n                    $messages[$key]['msg'] = '';\n                }\n\n                $messages[$key]['media'] = $media;\n\n            }\n        }\n                \n        $checkStatus = false;\n        \n        // Closed\n        $closed = false;\n        if ($chat->status == erLhcoreClassModelChat::STATUS_CLOSED_CHAT) {\n            $closed = true;\n        }\n        \n        if (isset($_GET['workflow']) && $_GET['workflow'] == true) {\n            if ($chat->status_sub == erLhcoreClassModelChat::STATUS_SUB_OWNER_CHANGED) {\n                $checkStatus = true;\n                $chat->status_sub = erLhcoreClassModelChat::STATUS_SUB_DEFAULT;\n                $saveChat = true;\n            }\n        }\n        \n        if ($chat->status_sub == erLhcoreClassModelChat::STATUS_SUB_SURVEY_SHOW) {        \n            $closed = true;            \n        }\n        \n        if ($chat->status_sub == erLhcoreClassModelChat::STATUS_SUB_CONTACT_FORM) {\n            $checkStatus = true;\n        }\n        \n        if (isset($_GET['workflow']) && $_GET['workflow'] == true) {\n            if ($chat->operation != '') {\n                $operation = explode(\"\\n\", trim($chat->operation));\n                $chat->operation = '';\n                $saveChat = true;\n            }\n        }\n        \n        if (isset($_GET['workflow']) && $_GET['workflow'] == true) {\n            if ($chat->user_status != 0) {\n                $chat->user_status = 0;\n                $saveChat = true;\n            }\n        \n            if ($chat->has_unread_op_messages == 1)\n            {\n                $chat->unread_op_messages_informed = 0;\n                $chat->has_unread_op_messages = 0;\n                $saveChat = true;\n            }\n        }\n        \n        if ($saveChat === true) {\n            $chat->updateThis();\n        }\n\n        if (isset($_GET['as_html']) && ($_GET['as_html'] == 'true' || $_GET['as_html'] == '1')) {\n            foreach ($messages as $key => $msg) {\n                $messages[$key]['msg'] = erLhcoreClassBBCode::make_clickable(htmlspecialchars($msg['msg']), array('sender' => $msg['user_id']));\n            }\n        }\n\n        if (isset($_GET['file_as_link']) && ($_GET['file_as_link'] == 'true' || $_GET['file_as_link'] == '1')) {\n            foreach ($messages as $key => $msg) {\n                $messages[$key]['msg'] = erLhcoreClassBBCodePlain::make_clickable($msg['msg'], array('sender' => $msg['user_id']));\n            }\n        }\n\n        if (isset($_GET['meta_parse']) && ($_GET['meta_parse'] == 'true' || $_GET['meta_parse'] == '1')) {\n            foreach ($messages as $key => $msg) {\n                if ($messages[$key]['msg'] == '') {\n                    $metaMessage = json_decode($messages[$key]['meta_msg'],true);\n                    if (is_array($metaMessage) && isset($metaMessage['content']) && is_array($metaMessage['content'])) {\n                        if (isset($metaMessage['content']['text_conditional']['full_op'])) {\n                            $messages[$key]['msg'] = trim(preg_replace('/\\[button_action=not_insult\\](.*)\\[\\/button_action\\]/is','',$metaMessage['content']['text_conditional']['full_op']));\n                        }\n                    }\n                }\n            }\n        }\n\n        if (isset($_GET['remove_bbcode']) && ($_GET['remove_bbcode'] == 'true' || $_GET['remove_bbcode'] == '1')) {\n            foreach ($messages as $key => $msg) {\n                if ($messages[$key]['msg'] != '') {\n                    $messages[$key]['msg'] = erLhcoreClassBBCodePlain::make_clickable($messages[$key]['msg'], array('sender' => $msg['user_id']));\n                }\n            }\n        }\n\n        erLhcoreClassRestAPIHandler::outputResponse(array(\n            'error' => false,\n            'result' => array(\n            \t\t'messages' => array_values($messages), \n            \t\t'ot' => $ott, \n            \t\t'closed' => $closed, \n            \t\t'check_status' => $checkStatus,\n            \t\t'lmid' => $lastMessageId\n            )\n        ));\n        \n    } else {\n        throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'You do not have permission to read this chat!'));\n    }\n    \n} catch (Exception $e) {\n    echo erLhcoreClassRestAPIHandler::outputResponse(array(\n        'error' => true,\n        'result' => $e->getMessage()\n    ));\n}\n\nexit();", "<?php\n\ntry\n{\n    erLhcoreClassRestAPIHandler::validateRequest();\n\n    $requestBody = json_decode(file_get_contents('php://input'),true);\n\n    $data = erLhcoreClassModelChatConfig::fetch('autologin_data')->data;\n\n    if ($data['enabled'] != 1) {\n        throw new Exception('Auto login module is disabled!');\n    }\n\n    if ($data['secret_hash'] == '') {\n        throw new Exception('Secret hash value is empty. Please set it in back office!');\n    }\n\n    if (!erLhcoreClassRestAPIHandler::hasAccessTo('lhuser', 'userautologin')) {\n        throw new Exception('You do not have permission to generate auto login link. `lhuser`, `userautologin` is required.');\n    }\n\n    function generateAutoLoginLink($params){\n\n        $dataRequest = array();\n        $dataRequestAppend = array();\n\n        // Destination ID\n        if (isset($params['r'])){\n            $dataRequest['r'] = $params['r'];\n            $dataRequestAppend[] = '/(r)/'.rawurlencode(base64_encode($params['r']));\n        }\n\n        // User ID\n        if (isset($params['u']) && is_numeric($params['u'])){\n            $dataRequest['u'] = $params['u'];\n            $dataRequestAppend[] = '/(u)/'.rawurlencode($params['u']);\n        }\n\n        // Username\n        if (isset($params['l'])){\n            $dataRequest['l'] = $params['l'];\n            $dataRequestAppend[] = '/(l)/'.rawurlencode($params['l']);\n        }\n\n        if (!isset($params['l']) && !isset($params['u'])) {\n            throw new Exception('Username or User ID has to be provided');\n        }\n\n        $ts = time() + $params['t'];\n\n        // Expire time for link\n        if (isset($params['t'])) {\n            $dataRequest['t'] = $ts;\n            $dataRequestAppend[] = '/(t)/'.rawurlencode($ts);\n        }\n\n        $hashValidation = sha1($params['secret_hash'].sha1($params['secret_hash'].implode(',', $dataRequest)));\n\n        return $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurldirect(\"user/autologin\") . \"/{$hashValidation}\".implode('', $dataRequestAppend);\n    }\n\n    $requestBody['secret_hash'] = $data['secret_hash'];\n\n    erLhcoreClassRestAPIHandler::outputResponse(array(\n        'error' => false,\n        'result' => generateAutoLoginLink($requestBody)\n    ));\n\n} catch (Exception $e) {\n    http_response_code(400);\n    echo erLhcoreClassRestAPIHandler::outputResponse(array(\n        'error' => true,\n        'result' => $e->getMessage()\n    ));\n}\n\nexit();\n\n", "<?php\n\nerLhcoreClassRestAPIHandler::setHeaders();\n\n$modeAPI = isset($_GET['api']) && $_GET['api'] == 'true';\n\ntry {\n    \n    if (!isset($_GET['token'])) {\n        throw new Exception('Token not found!');\n    }\n\n    $token = $_GET['token'];\n\n    $uSession = erLhcoreClassModelUserSession::findOne(array('filter' => array('token' => $token)));\n        \n    if ($uSession instanceof erLhcoreClassModelUserSession)\n    {\n        $currentUser = erLhcoreClassUser::instance();\n        $instance = erLhcoreClassSystem::instance();\n               \n        $userToLogin = erLhcoreClassModelUser::fetch((int)$uSession->user_id);           \n        \n        $r = '';\n        if (isset($_GET['r'])) {\n            $r = rawurldecode($_GET['r']);\n        }\n\n        if ($userToLogin instanceof erLhcoreClassModelUser) {\n            erLhcoreClassUser::instance()->setLoggedUser($userToLogin->id);\n            if ($modeAPI == false) {\n                header('Location: ' .erLhcoreClassDesign::baseurldirect('site_admin').'/'.ltrim($r, '/'));\n                exit;\n            } else {\n                echo json_encode(array('error' => false, 'msg' => 'Session started', 'url' => erLhcoreClassXMP::getBaseHost() . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurldirect('site_admin').'/'.ltrim($r,'/')));\n                exit;\n            }\n        } else {\n            throw new Exception('User could not be found!');\n        }\n\n    } else {\n        throw new Exception('Token not found');        \n    }    \n\n} catch (Exception $e) {\n    \n    if ($modeAPI == false) {\n        http_response_code(400);\n        die($e->getMessage());\n    } else {\n        http_response_code(400);\n        echo json_encode(\n            array('error' => true, 'msg' => $e->getMessage())\n        );\n    }\n}\n\nexit;\n?>", "<?php \nheader('Access-Control-Allow-Origin: *');\nheader('Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept');\n\nif ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {\n\n    if (isset($_SERVER['HTTP_ACCESS_CONTROL_REQUEST_METHOD']))\n        // may also be using PUT, PATCH, HEAD etc\n        header(\"Access-Control-Allow-Methods: GET, POST, OPTIONS\");\n\n    if (isset($_SERVER['HTTP_ACCESS_CONTROL_REQUEST_HEADERS']))\n        header(\"Access-Control-Allow-Headers: {$_SERVER['HTTP_ACCESS_CONTROL_REQUEST_HEADERS']}\");\n\n    exit(0);\n}\n\nheader('Content-Type: application/json');\n\nob_start();\ninclude 'modules/lhrestapi/swagger.json';\n$content = ob_get_clean();\n\n$append_definitions = '';\n$append_paths = '';\n$chats_parameters = '';\n$elastic_definition = '';\n$elastic_mail = '';\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('restapi.swagger', array(\n    'elastic_mail_definition' => & $elastic_mail,\n    'elastic_definition' => & $elastic_definition,\n    'append_definitions' => & $append_definitions,\n    'append_paths' => & $append_paths,\n    'chats_parameters' => & $chats_parameters));\n\necho str_replace(\n    array('{{base_path}}','{{ts}}','{{host}}','{{append_definitions}}','{{append_paths}}', '{{chats_parameters}}','{{append_elastic_definitions}}','{{append_elastic_mail_definitions}}'),\n    array(erLhcoreClassDesign::baseurldirect(),time(),$_SERVER['HTTP_HOST'], $append_definitions, $append_paths, $chats_parameters,$elastic_definition,$elastic_mail)\n    , $content);\n\nexit;\n\n?>", "<?php\n\nheader('X-Frame-Options: DENY');\n\n$tpl = erLhcoreClassTemplate::getInstance( 'lhuser/forgotpassword.tpl.php');\n\n$currentUser = erLhcoreClassUser::instance();\n\nif (isset($_POST['Forgotpassword'])) {\n\n\t$definition = array(\n        'Email' => new ezcInputFormDefinitionElement(\n            ezcInputFormDefinitionElement::REQUIRED, 'validate_email'\n        )\n    );\n\n    $form = new ezcInputForm( INPUT_POST, $definition );\n\n    $Errors = array();\n    \n    if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\n        erLhcoreClassModule::redirect('user/forgotpassword');\n        exit;\n    }\n    \n    if ( !$form->hasValidData( 'Email' ) )\n    {\n        $Errors[] =  erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Invalid e-mail address!');\n    }\n\n    $recaptchaData = erLhcoreClassModelChatConfig::fetch('recaptcha_data')->data_value;\n\n    if (is_array($recaptchaData) && isset($recaptchaData['enabled']) && $recaptchaData['enabled'] == 1) {\n        $params = [\n            'secret'    => $recaptchaData['secret_key'],\n            'response'  => $_POST['g-recaptcha']\n        ];\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, 'https://www.google.com/recaptcha/api/siteverify');\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 5);\n        curl_setopt($ch,CURLOPT_POST,1);\n        curl_setopt($ch,CURLOPT_POSTFIELDS,$params);\n        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT , 5);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        @curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true); // Some hostings produces warning...\n        $res = curl_exec($ch);\n\n        $res = json_decode($res,true);\n\n        if (!(isset($res['success']) && $res['success'] == 1 && isset($res['score']) && $res['score'] >= 0.1 && $res['action'] == 'login_action')) {\n            $Errors[] = 'Invalid recaptcha!';\n        }\n    }\n\n\tif (count($Errors) == 0) {\n\n\t\tif (($userID = erLhcoreClassModelUser::fetchUserByEmail($form->Email)) !== false) {\n\n\t\t\t$host = $_SERVER['HTTP_HOST'];\n\n\t\t\t$adminEmail = erConfigClassLhConfig::getInstance()->getSetting( 'site', 'site_admin_email' );\n\n\t\t\t$UserData = erLhcoreClassUser::getSession()->load( 'erLhcoreClassModelUser', $userID );\n\n\t\t\t$hash = erLhcoreClassModelForgotPassword::randomPassword(40);\n\n\t\t\terLhcoreClassModelForgotPassword::setRemindHash($UserData->id,$hash);\n\n\t\t\t$mail = new PHPMailer();\n\t\t\t$mail->CharSet = \"UTF-8\";\n\t\t\t$mail->From = $adminEmail;\n\n\t\t\t$mail->FromName = erConfigClassLhConfig::getInstance()->getSetting( 'site', 'title' );\n\t\t\t$mail->Subject = erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Password remind');\n\n\t\t\t// HTML body\n\t\t\t$body  = erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Click this link and You will be able to change a password').' </br><a href=\"' . (erLhcoreClassSystem::$httpsMode == true ? 'https://' : 'http://') . $host . erLhcoreClassDesign::baseurl('user/remindpassword').'/'.$hash.'\">Restore password</a>';\n\n\t\t\t// Plain text body\n\t\t\t$text_body  = erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Click this link and You will be able to change a password').' - ' . (erLhcoreClassSystem::$httpsMode == true ? 'https://' : 'http://') . $host . erLhcoreClassDesign::baseurl('user/remindpassword').'/'.$hash;\n\n\t\t\t$mail->Body    = $body;\n\t\t\t$mail->AltBody = $text_body;\n\t\t\t$mail->AddAddress( $UserData->email, $UserData->username);\n\n\t\t\terLhcoreClassChatMail::setupSMTP($mail);\n\n\t\t\t$mail->Send();\n\t\t\t$mail->ClearAddresses();\n\n\t\t\t$tpl = erLhcoreClassTemplate::getInstance( 'lhuser/forgotpasswordsent.tpl.php');\n\n\t\t} else {\n            $tpl = erLhcoreClassTemplate::getInstance( 'lhuser/forgotpasswordsent.tpl.php');\n\t\t}\n\n    }  else {\n        $tpl->set('errors',$Errors);\n    }\n}\n\n$Result['content'] = $tpl->fetch();\n$Result['pagelayout'] = 'login';\n\n?>", "<?php\n\nerLhcoreClassRestAPIHandler::setHeaders();\n\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\nheader(\"Pragma: no-cache\");\n\n$ignorable_ip = erLhcoreClassModelChatConfig::fetch('ignorable_ip')->current_value;\n\n$outputResponse = array('status' => true);\n\nif (\n    ($ignorable_ip != '' && erLhcoreClassIPDetect::isIgnored(erLhcoreClassIPDetect::getIP(),explode(',',$ignorable_ip)))\n    ||\n    (erLhcoreClassModelChatConfig::fetch('track_online_visitors')->current_value != 1)\n) {\n    erLhcoreClassRestAPIHandler::outputResponse(array('status' => false));\n    exit;\n}\n\nif (isset($_GET['dep'])) {\n    $parametersDepartment = erLhcoreClassChat::extractDepartment(explode(',',$_GET['dep']));\n    $department = $parametersDepartment['system'];\n} else {\n    $department = false;\n}\n\nif (isset($_GET['ua'])) {\n    $uarguments = explain(',',$_GET['ua']);\n} else {\n    $uarguments = false;\n}\n\n$proactiveInviteActive = erLhcoreClassModelChatConfig::fetch('pro_active_invite')->current_value;\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.chatcheckoperatormessage', array('proactive_active' => & $proactiveInviteActive));\n\n$injectInvitation = array();\n\n$paramsRequest = array(\n    'inject_html' => & $injectInvitation,\n    'tag' => isset($_GET['tag']) ? $_GET['tag'] : false,\n    'uactiv' => (isset($_GET['uactiv']) ? 1 : 0),\n    'wopen' => (isset($_GET['wopen']) ? 1 : 0),\n    //'tpl' => & $tpl,\n    'message_seen_timeout' => erLhcoreClassModelChatConfig::fetch('message_seen_timeout')->current_value,\n    'department' => $department,\n    'identifier' => (isset($_GET['idnt']) ? $_GET['idnt'] : ''),\n    'pages_count' => false,\n    'vid' => (string)$_GET['vid'],\n    'check_message_operator' => true,\n    'pro_active_limitation' =>  erLhcoreClassModelChatConfig::fetch('pro_active_limitation')->current_value,\n    'pro_active_invite' => $proactiveInviteActive);\n\n$userInstance = erLhcoreClassModelChatOnlineUser::handleRequest($paramsRequest);\n\n// Exit if not required\n$statusGeoAdjustment = erLhcoreClassChat::getAdjustment(erLhcoreClassModelChatConfig::fetch('geoadjustment_data')->data_value,'',false,$userInstance);\n\nif ($statusGeoAdjustment['status'] == 'offline' || $statusGeoAdjustment['status'] == 'hidden' || $userInstance === false) {\n    erLhcoreClassRestAPIHandler::outputResponse(array('status' => false));\n    exit;\n}\n\n$outputResponse['vid_id'] = $userInstance->id;\n\nif ($userInstance->invitation_id == -1) {\n    $userInstance->invitation_id = 0;\n    $userInstance->invitation_assigned = true;\n    $userInstance->saveThis();\n}\n\n$dynamic = true;\n\nif ($userInstance->reopen_chat == 1 && ($chat = $userInstance->chat) !== false && $chat->user_status == erLhcoreClassModelChat::USER_STATUS_PENDING_REOPEN) {\n    $reopen_chat = $chat;\n    $dynamic = false;\n}\n\n// If there is no assigned default proactive invitations find dynamic one triggers\n$dynamicEveryTime = $userInstance->invitation instanceof erLhAbstractModelProactiveChatInvitation && $userInstance->invitation->dynamic_invitation == 1 && $userInstance->invitation->show_instant == 0;\n\nif ($dynamic == true && $userInstance->message_seen == 0 && ($userInstance->operator_message == '' || $dynamicEveryTime == true) && !isset($_GET['wopen'])) {\n    if (isset($_GET['init']) && $_GET['init'] == 1) {\n        $dynamicProcessed = isset($_GET['dyn']) ? explode(',', $_GET['dyn']) : array();\n        $dynamic_invitation = erLhcoreClassModelChatOnlineUser::getDynamicInvitation(array('online_user' => $userInstance, 'tag' => isset($_GET['tag']) ? $_GET['tag'] : false));\n        foreach ($dynamic_invitation as $dynamicInvitation) {\n            if (in_array($dynamicInvitation->id, $dynamicProcessed)) {\n                continue; // Skip if particular invitation was already shown\n            }\n            $outputResponse['dynamic'][] = array(\n                'id' => $dynamicInvitation->id,\n                'type' => $dynamicInvitation->event_type,\n                'iddle_for' => $dynamicInvitation->iddle_for,\n                'inject_html' => isset($dynamicInvitation->design_data_array['inject_html']) && $dynamicInvitation->design_data_array['inject_html'] != ''\n            );\n        }\n    }\n}\n\nif (isset($reopen_chat)) {\n    $outputResponse['reopen'] = array(\n        'id' => $reopen_chat->id,\n        'hash' => $reopen_chat->hash\n    );\n} elseif (\n        (\n            $userInstance->has_message_from_operator == true ||\n\n            ($appendInvitation = ($userInstance->invitation instanceof erLhAbstractModelProactiveChatInvitation && ($userInstance->message_seen == 0 || isset($userInstance->invitation->design_data_array['keep_after_close']) && $userInstance->invitation->design_data_array['keep_after_close'] == 1) && isset($userInstance->invitation->design_data_array['append_bot']) && $userInstance->invitation->design_data_array['append_bot'] == 1 && $userInstance->invitation->bot_id > 0 && $userInstance->invitation->trigger_id > 0)) == true\n        ) &&\n        (!isset($dynamicEveryTime) || $dynamicEveryTime == false)\n) {\n    $outputResponse['status'] = false;\n\n    if ($userInstance->invitation instanceof erLhAbstractModelProactiveChatInvitation && $userInstance->invitation->show_on_mobile == 1) {\n\n        if (($userInstance->invitation_assigned == false && $userInstance->invitation->delay > 0) || $userInstance->invitation->delay_init > 0) {\n            $outputResponse['delay'] = ($userInstance->invitation_assigned == true ? $userInstance->invitation->delay_init : $userInstance->invitation->delay) * 1000;\n        }\n\n        if (isset($userInstance->invitation->design_data_array['mobile_html']) && $userInstance->invitation->design_data_array['mobile_html'] != '') {\n\n            if (isset($userInstance->invitation->design_data_array['mobile_style']) && $userInstance->invitation->design_data_array['mobile_style'] != '') {\n\n                $replaceStyleArray = array();\n\n                for ($i = 1; $i < 5; $i++) {\n                    $replaceStyleArray['{proactive_img_' . $i . '}'] = erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value . '//' . $_SERVER['HTTP_HOST'] . $userInstance->invitation->{'design_data_img_' . $i . '_url'};\n                }\n\n                $contentCSS = str_replace(array_keys($replaceStyleArray), array_values($replaceStyleArray), $userInstance->invitation->design_data_array['mobile_style']);\n                $contentCSS = str_replace(array(\"\\n\", \"\\r\"), '', $contentCSS);\n                $outputResponse['site_css'] = json_encode($contentCSS);\n            }\n\n            $outputResponse['html_invitation'] = json_encode(str_replace(array(\"\\n\", \"\\r\", '{readmessage}', '{hideInvitation}'), array('', '', \"return lh_inst.showHTMLInvitation(lh_inst.invitationURL)\", \"return lh_inst.hideHTMLInvitation()\"), $userInstance->invitation->design_data_array['mobile_html']));\n\n        } else {\n            $outputResponse['invitation'] = $userInstance->invitation->id;\n        }\n\n    } else {\n        if ($userInstance->invitation instanceof erLhAbstractModelProactiveChatInvitation) {\n            if (($userInstance->invitation_assigned == false && $userInstance->invitation->delay > 0) || $userInstance->invitation->delay_init > 0) {\n                $outputResponse['delay'] = ($userInstance->invitation_assigned == true ? $userInstance->invitation->delay_init : $userInstance->invitation->delay) * 1000;\n            }\n\n            if (isset($userInstance->invitation->design_data_array['inject_html']) && $userInstance->invitation->design_data_array['inject_html'] != '') {\n                $outputResponse['inject_html'] = true;\n            }\n\n            $outputResponse['invitation'] = $userInstance->invitation->id;\n        } else {\n            $outputResponse['invitation'] = true;\n        }\n    }\n}\n\nif ($userInstance->operation != '' && (int)$_GET['wopen'] == 0) {\n    $outputResponse['operation'] = $userInstance->operation;\n    $userInstance->operation = '';\n    $userInstance->operation_chat = '';\n    $userInstance->saveThis();\n}\n\nif (isset($_GET['init']) && $_GET['init'] == 1) {\n\n    if ($userInstance->next_reschedule > 0) {\n        $outputResponse['next_reschedule'] = ($userInstance->next_reschedule + 1) * 1000;\n    }\n\n    $injectInvitations = erLhcoreClassModelChatOnlineUser::getInjectHTMLInvitation(array('online_user' => $userInstance, 'tag' => isset($_GET['tag']) ? $_GET['tag'] : false));\n    foreach ($injectInvitations as $injectInvitation) {\n        $outputResponse['dynamic'][] = array(\n            'id' => $injectInvitation->id,\n            'type' => $injectInvitation->event_type,\n            'iddle_for' => $injectInvitation->iddle_for,\n            'only_inject' => true,\n            'inject_html' => true,\n            'every_time' => !(!isset($injectInvitation->design_data_array['dynamic_everytime']) || $injectInvitation->design_data_array['dynamic_everytime'] == 0)\n        );\n    }\n}\n\n\n$outputResponse['qinv'] = isset($userInstance->online_attr_system_array['qinv']) || ($userInstance->has_message_from_operator == false && isset($appendInvitation) && $appendInvitation == true);\n\nerLhcoreClassRestAPIHandler::outputResponse($outputResponse);\nexit;\n\n?>", "<?php\nerLhcoreClassRestAPIHandler::setHeaders();\n\n$settings = array(\n    'nodejssettings' => array(\n        'nodejssocket' => erLhcoreClassModelChatConfig::fetch('sharing_nodejs_sllocation')->current_value,\n        'nodejshost' => (erLhcoreClassModelChatConfig::fetch('sharing_nodejs_socket_host')->current_value != '' ? erLhcoreClassModelChatConfig::fetch('sharing_nodejs_socket_host')->current_value : $_SERVER['HTTP_HOST']),\n        'path' => erLhcoreClassModelChatConfig::fetch('sharing_nodejs_path')->current_value,\n        'secure' => ((int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_secure')->current_value == 1 ? true : false)\n    ),\n    'auto_share' => (int)erLhcoreClassModelChatConfig::fetch('sharing_auto_allow')->current_value,\n    'cobrowser' => erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value . '//' . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::designJS('js/cobrowse/compiled/cobrowse.visitor.min.js'),\n    'nodejsenabled' => (int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_enabled')->current_value,\n    'trans' => array(\n        'operator_watching' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus', 'Screen shared, click to finish'),\n        'start_share' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/screenshare','Start screen share session'),\n        'deny' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/screenshare','Deny screen share'),\n    ),\n    'url' => erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value . '//' . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurlsite() . '/cobrowse/storenodemap/(sharemode)/chat'\n);\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('widgetrestapi.screensharesettings', array('output' => & $settings));\n\nerLhcoreClassRestAPIHandler::outputResponse($settings);\nexit();\n\n?>", "<?php\n\nerLhcoreClassRestAPIHandler::setHeaders();\n\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\nheader(\"Pragma: no-cache\");\n\nif (isset($_SERVER['HTTP_ORIGIN']) && !empty($_SERVER['HTTP_ORIGIN'])) {\n    $validDomains = (string)erLhcoreClassModelChatConfig::fetch('valid_domains')->current_value;\n    if (!empty($validDomains)) {\n        $validDomainsList = explode(',',$validDomains);\n        $validDomain = false;\n        foreach ($validDomainsList as $validDomainItem) {\n            if (strpos($_SERVER['HTTP_ORIGIN'],trim($validDomainItem)) !== false) {\n                $validDomain = true;\n            }\n        }\n\n        if ($validDomain == false) {\n            erLhcoreClassRestAPIHandler::outputResponse(array('terminate' => true));\n            exit;\n        }\n    }\n}\n\nif (isset($_SERVER['HTTP_USER_AGENT']) && erLhcoreClassModelChatOnlineUser::isBot($_SERVER['HTTP_USER_AGENT'])) {\n    erLhcoreClassRestAPIHandler::outputResponse(array('terminate' => true));\n    exit;\n}\n\nif (isset($_GET['dep']) && is_array($_GET['dep']) && !empty($_GET['dep'])){\n    $department = (isset($_GET['dep']) && is_array($_GET['dep']) && !empty($_GET['dep']) ? $_GET['dep'] : false);\n} else if (isset($_GET['dep']) && $_GET['dep'] != '') {\n    $department = explode(',',$_GET['dep']);\n} else {\n    $department = false;\n}\n\nif (is_array($department)) {\n    $parametersDepartment = erLhcoreClassChat::extractDepartment($department);\n    $department = $parametersDepartment['system'];\n    $departmentArgument = $parametersDepartment['argument'];\n} else {\n    $departmentArgument = $department;\n}\n\n$departmentUpdated = $department;\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('widgetrestapi.settings_department_verify', array('department' => & $departmentUpdated));\n\n$outputResponse = array(\n    'isOnline' => erLhcoreClassChat::isOnline($departmentUpdated, false, array(\n        'online_timeout' => (int) erLhcoreClassModelChatConfig::fetch('sync_sound_settings')->data['online_timeout'],\n        'ignore_user_status' => (int)erLhcoreClassModelChatConfig::fetch('ignore_user_status')->current_value\n    )),\n    'hideOffline' => false,\n    'vid' => isset($_GET['vid']) ? $_GET['vid'] : substr(sha1(mt_rand() . microtime()),0,20)\n);\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('widgetrestapi.settings_department_after_verify', array('department' => & $department, 'output' => & $outputResponse));\n\n$ignorable_ip = erLhcoreClassModelChatConfig::fetch('ignorable_ip')->current_value;\n$fullHeight = (isset($Params['user_parameters_unordered']['fullheight']) && $Params['user_parameters_unordered']['fullheight'] == 'true') ? true : false;\n\nif ( $ignorable_ip == '' || !erLhcoreClassIPDetect::isIgnored(erLhcoreClassIPDetect::getIP(),explode(',',$ignorable_ip))) {\n\n    $jsVars = array();\n\n    // Additional javascript variables\n    if (is_array($department) && !empty($department)) {\n        foreach (erLhAbstractModelChatVariable::getList(array('ignore_fields' => array('dep_id','var_name','var_identifier','type'), 'customfilter' => array('dep_id = 0 OR dep_id IN (' . implode(',',$department) .')'))) as $jsVar) {\n            $jsVars[] = array('id' => $jsVar->id,'var' => $jsVar->js_variable);\n        }\n    } else {\n        foreach (erLhAbstractModelChatVariable::getList(array('ignore_fields' => array('dep_id','var_name','var_identifier','type'), 'filter' => array('dep_id' => 0))) as $jsVar) {\n            $jsVars[] = array('id' => $jsVar->id, 'var' => $jsVar->js_variable);\n        }\n    }\n\n    $outputResponse['js_vars'] = $jsVars;\n\n    if (is_array($Params['user_parameters_unordered']['ua'])){\n        $uarguments = $Params['user_parameters_unordered']['ua'];\n    } else {\n        $uarguments = false;\n    }\n\n    $proactiveInviteActive = erLhcoreClassModelChatConfig::fetch('pro_active_invite')->current_value;\n\n    erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.chatcheckoperatormessage', array('proactive_active' => & $proactiveInviteActive));\n\n    $injectInvitation = array();\n\n    if ((isset($_GET['cd']) && $_GET['cd'] == 1) || erLhcoreClassModelChatConfig::fetch('track_online_visitors')->current_value != 1) {\n        $userInstance = false;\n    } else {\n        $userInstance = erLhcoreClassModelChatOnlineUser::handleRequest(array('inject_html' => & $injectInvitation, 'tag' => isset($_GET['tag']) ? $_GET['tag'] : false, 'uactiv' => 1, 'wopen' => 0 /*@todo add support if request is made and widget is open, chat is going*/, 'tpl' => & $tpl, 'tz' => (isset($_GET['tz']) ? $_GET['tz'] : null), 'message_seen_timeout' => erLhcoreClassModelChatConfig::fetch('message_seen_timeout')->current_value, 'department' => $department, 'identifier' => (isset($_GET['idnt']) ? (string)$_GET['idnt'] : ''), 'pages_count' => true, 'vid' => $outputResponse['vid'], 'check_message_operator' => true, 'pro_active_limitation' =>  erLhcoreClassModelChatConfig::fetch('pro_active_limitation')->current_value, 'pro_active_invite' => $proactiveInviteActive));\n    }\n\n    // Exit if not required\n    $statusGeoAdjustment = erLhcoreClassChat::getAdjustment(erLhcoreClassModelChatConfig::fetch('geoadjustment_data')->data_value,'',false, $userInstance);\n\n    if ($statusGeoAdjustment['status'] == 'offline' || $statusGeoAdjustment['status'] == 'hidden') {\n\n        if ($statusGeoAdjustment['status'] == 'hidden') {\n            $outputResponse['hideOffline'] = true;\n        }\n\n        $outputResponse['isOnline'] = false;\n    }\n\n    if ($userInstance !== false) {\n\n        if (erLhcoreClassModelChatConfig::fetch('track_footprint')->current_value == 1 && erLhcoreClassModelChatOnlineUser::getReferer() != '') {\n            erLhcoreClassModelChatOnlineUserFootprint::addPageView($userInstance);\n        }\n\n        if ($userInstance->operation != '') {\n            $outputResponse['operation'] = explode(\"\\n\", trim($userInstance->operation_chat));\n            $userInstance->operation = '';\n            $userInstance->operation_chat = '';\n            $userInstance->updateThis(array('update' => array('operation','operation_chat')));\n        }\n\n        if ($userInstance->invitation_id == -1) {\n            $userInstance->invitation_id = 0;\n            $userInstance->invitation_assigned = true;\n            $userInstance->saveThis();\n        }\n    }\n}\n\nif (($themeId = erLhcoreClassChat::extractTheme()) !== false) {\n    $outputResponse['theme'] = $themeId;\n} else {\n    $defaultTheme = erLhcoreClassModelChatConfig::fetch('default_theme_id')->current_value;\n    if ($defaultTheme > 0) {\n        $outputResponse['theme'] = (int)$defaultTheme;\n    }\n}\n\n$pageCSS = false;\n\nif (isset($outputResponse['theme'])) {\n    $theme = erLhAbstractModelWidgetTheme::fetch($outputResponse['theme']);\n\n    if ($theme instanceof erLhAbstractModelWidgetTheme) {\n\n        $outputResponse['theme'] = $theme->alias != '' ? $theme->alias : $theme->id;\n\n        if (isset($theme->bot_configuration_array['wwidth']) && $theme->bot_configuration_array['wwidth'] > 0) {\n            $outputResponse['chat_ui']['wwidth'] = (int)$theme->bot_configuration_array['wwidth'];\n        }\n\n        if (isset($theme->bot_configuration_array['wheight']) && $theme->bot_configuration_array['wheight'] > 0) {\n            $outputResponse['chat_ui']['wheight'] = (int)$theme->bot_configuration_array['wheight'];\n        }\n\n        if (isset($theme->bot_configuration_array['fscreen_embed']) && $theme->bot_configuration_array['fscreen_embed'] == 1) {\n            $outputResponse['chat_ui']['fscreen'] = (int)$theme->bot_configuration_array['fscreen_embed'];\n        }\n\n        if (isset($theme->bot_configuration_array['wright']) && is_numeric($theme->bot_configuration_array['wright'])) {\n            $outputResponse['chat_ui']['wright'] = (int)$theme->bot_configuration_array['wright'];\n        }\n\n        if (isset($theme->bot_configuration_array['hide_iframe']) && $theme->bot_configuration_array['hide_iframe'] == 1) {\n            $outputResponse['chat_ui']['hide_iframe'] = 1;\n        }\n\n        if (isset($theme->bot_configuration_array['hide_parent']) && $theme->bot_configuration_array['hide_parent'] == 1) {\n            $outputResponse['chat_ui']['hide_parent'] = 1;\n        }\n\n        if ($theme->widget_pbottom != 0) {\n            $outputResponse['chat_ui']['sbottom'] = (int)$theme->widget_pbottom;\n        }\n\n        if ($theme->widget_pright != 0) {\n            $outputResponse['chat_ui']['sright'] = (int)$theme->widget_pright;\n        }\n\n        if (isset($theme->bot_configuration_array['wright_inv']) && is_numeric($theme->bot_configuration_array['wright_inv'])) {\n            $outputResponse['chat_ui']['wright_inv'] = (int)$theme->bot_configuration_array['wright_inv'];\n        }\n\n        if (isset($theme->bot_configuration_array['wbottom']) && is_numeric($theme->bot_configuration_array['wbottom'])) {\n            $outputResponse['chat_ui']['wbottom'] = (int)$theme->bot_configuration_array['wbottom'];\n        }\n\n        $outputResponse['theme_v'] = $theme->modified;\n\n        if ($theme->custom_container_css !== ''){\n            $outputResponse['cont_css'] =  str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_container_css);\n        }\n\n        if (isset($theme->bot_configuration_array['kcw']) && $theme->bot_configuration_array['kcw'] == 1) {\n            $outputResponse['chat_ui']['kcw'] = 1;\n        }\n\n        if (isset($theme->bot_configuration_array['custom_page_css']) && $theme->bot_configuration_array['custom_page_css'] != '') {\n            $pageCSS = true;\n        }\n\n        if ($theme instanceof erLhAbstractModelWidgetTheme && isset($theme->bot_configuration_array['detect_language']) && $theme->bot_configuration_array['detect_language'] == true) {\n            $siteaccess = erLhcoreClassChatValidator::setLanguageByBrowser(true);\n            if ($siteaccess != '') {\n                $outputResponse['siteaccess'] = $siteaccess . '/';\n                erLhcoreClassSystem::setSiteAccess($siteaccess);\n            }\n        }\n\n        if (isset($theme->bot_configuration_array['header_html']) && $theme->bot_configuration_array['header_html'] != '') {\n            $outputResponse['chat_ui']['hhtml'] = $theme->bot_configuration_array['header_html'];\n        }\n\n        if (isset($theme->bot_configuration_array['close_in_status']) && $theme->bot_configuration_array['close_in_status'] == true) {\n            $outputResponse['chat_ui']['clinst'] = true;\n        }\n\n        if ($theme->enable_widget_embed_override == 1) {\n           $outputResponse['chat_ui']['leaveamessage'] = $theme->widget_show_leave_form == 1;\n\n           if ($theme->widget_popheight > 0 && $theme->widget_popwidth > 0) {\n               $outputResponse['pdim'] = ['pheight' => $theme->widget_popheight, 'pwidth' => $theme->widget_popwidth];\n           }\n\n           if ($theme->widget_survey > 0) {\n               $outputResponse['survey_id'] = $theme->widget_survey;\n           }\n\n           if ($theme->widget_position != '') {\n               $outputResponse['wposition'] = $theme->widget_position;\n           }\n        }\n\n        $outputResponse['chat_ui']['sound_enabled'] = (isset($theme->bot_configuration_array['disable_sound']) && $theme->bot_configuration_array['disable_sound'] == 1) ? 0 : 1;\n    }\n}\n\nif ((int)erLhcoreClassModelChatConfig::fetch('checkstatus_timeout')->current_value > 0){\n    $outputResponse['chat_ui']['check_status'] = (int)erLhcoreClassModelChatConfig::fetch('checkstatus_timeout')->current_value;\n\n    if ((int)erLhcoreClassModelChatConfig::fetch('track_activity')->current_value > 0) {\n        $outputResponse['chat_ui']['track_activity'] = true;\n    }\n\n    if ((int)erLhcoreClassModelChatConfig::fetch('track_mouse_activity')->current_value > 0) {\n        $outputResponse['chat_ui']['track_mouse'] = true;\n    }\n}\n\n$soundData = erLhcoreClassModelChatConfig::fetch('sync_sound_settings')->data_value;\n\n$outputResponse['chat_ui']['proactive_interval'] = (int)($soundData['check_for_operator_msg']);\n\nif (!isset($outputResponse['chat_ui']['sound_enabled'])) {\n    $outputResponse['chat_ui']['sound_enabled'] = (int)($soundData['new_message_sound_user_enabled']);\n}\n\nif (erLhcoreClassModelChatConfig::fetch('use_secure_cookie')->current_value == 1) {\n    $outputResponse['secure_cookie'] = true;\n}\n\nif (($domain = erLhcoreClassModelChatConfig::fetch('track_domain')->current_value) != '') {\n    $outputResponse['domain'] = $domain;\n}\n\n$startDataDepartment = false;\n\nif (is_array($department) && !empty($department) && count($department) == 1) {\n    $dep_id = $department[0];\n    $startDataDepartment = erLhcoreClassModelChatStartSettings::findOne(array('filter' => array('department_id' => $dep_id)));\n    if ($startDataDepartment instanceof erLhcoreClassModelChatStartSettings) {\n        $startDataFields = $startDataDepartment->data_array;\n    }\n}\n\nif ($startDataDepartment === false) {\n    $startData = erLhcoreClassModelChatConfig::fetch('start_chat_data');\n    $start_data_fields = $startDataFields = (array)$startData->data;\n}\n\n$disableNeedHelp = false;\n\nif (isset($start_data_fields['pre_conditions']) && !empty($start_data_fields['pre_conditions'])) {\n    $preConditions = json_decode($start_data_fields['pre_conditions'], true);\n    if (\n        (isset($preConditions['online']) && !empty($preConditions['online'])) ||\n        (isset($preConditions['offline']) && !empty($preConditions['offline'])) ||\n        (isset($preConditions['disable']) && !empty($preConditions['disable'])) ) {\n        $outcome = erLhcoreClassChatValidator::validatePreconditions($preConditions, ['is_online' => (int)$outputResponse['isOnline'], 'online_user' => (isset($userInstance) ? $userInstance : false)]);\n        if ($outcome['mode'] == 'terminate') {\n            erLhcoreClassRestAPIHandler::outputResponse(array('terminate' => true));\n            exit;\n        } else if ($outcome['mode'] == 'offline') {\n            $outputResponse['isOnline'] = false;\n        } else if ($outcome['mode'] == 'disable') {\n            $disableNeedHelp = true;\n            $outputResponse['disable_proactive'] = true;\n        }\n    }\n}\n\n$needHelpTimeout = isset($theme) && $theme instanceof erLhAbstractModelWidgetTheme ? $theme->show_need_help_timeout : erLhcoreClassModelChatConfig::fetch('need_help_tip_timeout')->current_value;\n\nif ($disableNeedHelp === false && ((isset($theme) && $theme instanceof erLhAbstractModelWidgetTheme && $theme->show_need_help == 1 && (!isset($theme->bot_configuration_array['hide_mobile_nh']) || $theme->bot_configuration_array['hide_mobile_nh'] == false || (isset($userInstance) && $userInstance !== false && $theme->bot_configuration_array['hide_mobile_nh'] == true && in_array($userInstance->device_type,array(1,3))) )) || (!isset($theme) && erLhcoreClassModelChatConfig::fetch('need_help_tip')->current_value == 1)) && $needHelpTimeout > 0 && (!isset($_GET['hnh']) || $_GET['hnh'] < (time() - ($needHelpTimeout * 24 * 3600))))\n{\n    $configInstance = erConfigClassLhConfig::getInstance();\n\n    $nhCloseVisible = true;\n    if (isset($theme) && $theme instanceof erLhAbstractModelWidgetTheme && isset($theme->bot_configuration_array['hide_close_nh']) && $theme->bot_configuration_array['hide_close_nh'] == true) {\n        $nhCloseVisible = false;\n    }\n\n    $outputResponse['nh']['html'] = '<div class=\"container-fluid overflow-auto fade-in p-3 pb-4 {dev_type}\" >\n<div class=\"shadow rounded bg-white nh-background\">\n    <div class=\"p-2\" id=\"start-chat-btn\" style=\"cursor: pointer\">\n        ' . ($nhCloseVisible === false ? '' : '<button type=\"button\" id=\"close-need-help-btn\" class=\"close position-absolute\" style=\"' . ($configInstance->getDirLanguage('dir_language') == 'ltr' ? 'right' : 'left') . ':30px;top:25px;\" aria-label=\"Close\">\n          <span class=\"px-1\" aria-hidden=\"true\">&times;</span>\n        </button>') . '\n        <div class=\"d-flex\">\n          <div class=\"p-1\"><img style=\"min-width: 50px;\" alt=\"Customer service\" class=\"img-fluid rounded-circle\" src=\"{{need_help_image_url}}\"/></div>\n          <div class=\"p-1 flex-grow-1\"><h6 class=\"mb-0\">{{need_help_header}}</h6>\n            <p class=\"mb-1\" style=\"font-size: 14px\">{{need_help_body}}</p></div>\n        </div>\n    </div>\n</div>\n</div>';\n\n    $outputResponse['nh']['delay'] = 1500;\n\n    $translationInstance = erTranslationClassLhTranslation::getInstance();\n\n    if (isset($theme) && $theme instanceof erLhAbstractModelWidgetTheme) {\n\n        if ($theme->show_need_help_delay > 0) {\n            $outputResponse['nh']['delay'] = (int)$theme->show_need_help_delay * 1000;\n        }\n\n        if (isset($theme->bot_configuration_array['always_present_nh']) && $theme->bot_configuration_array['always_present_nh'] == true) {\n            $outputResponse['nh']['ap'] = true;\n        }\n\n        $theme->translate();\n\n        if (isset($theme->bot_configuration_array['need_help_html']) && !empty($theme->bot_configuration_array['need_help_html'])){\n            $outputResponse['nh']['html'] = $theme->bot_configuration_array['need_help_html'];\n        }\n\n        $replaceVars = $theme->replace_array;\n\n        if ($theme->need_help_image_url === false) {\n            if ((isset($theme->bot_configuration_array['nh_avatar']) && $theme->bot_configuration_array['nh_avatar'] != '')) {\n                $replaceVars['replace'][8] = erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value . '//' . $_SERVER['HTTP_HOST'] .erLhcoreClassDesign::baseurldirect('widgetrestapi/avatar') . '/' . $theme->bot_configuration_array['nh_avatar'];\n            } else {\n                $replaceVars['replace'][8] = erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value . '//' . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::design('images/general/operator.png');\n            }\n        }\n\n        $replaceVars['search'][] = '{{need_help_header}}';\n        $replaceVars['search'][] = '{{need_help_body}}';\n\n        $replaceVars['replace'][] = $theme->need_help_header != '' ? $theme->need_help_header : $translationInstance->getTranslation('chat/getstatus', 'Need help?');\n        $replaceVars['replace'][] = $theme->need_help_text != '' ? $theme->need_help_text : $translationInstance->getTranslation('chat/getstatus', 'Our staff are ready to help!');\n    } else {\n        $replaceVars = array(\n            'search' => array(\n                '{{need_help_image_url}}',\n                '{{need_help_header}}',\n                '{{need_help_body}}',\n            ),\n            'replace' => array(\n                '//' . $_SERVER['HTTP_HOST'] . erLhcoreClassDesign::design('images/general/operator.png'),\n                $translationInstance->getTranslation('chat/getstatus', 'Need help?'),\n                $translationInstance->getTranslation('chat/getstatus', 'Our staff are ready to help!')\n            )\n        );\n    }\n\n    $outputResponse['nh']['html'] = str_replace($replaceVars['search'], $replaceVars['replace'], $outputResponse['nh']['html']);\n\n    $attrDimensions = array(\n        'nh_bottom' => 'bottom',\n        'nh_right' => 'right',\n        'nh_height' => 'height',\n        'nh_width' => 'width',\n    );\n\n    foreach ($attrDimensions as $attrDimension => $attrName){\n        if (isset($theme) && $theme instanceof erLhAbstractModelWidgetTheme && isset($theme->bot_configuration_array[$attrDimension]) && is_numeric($theme->bot_configuration_array[$attrDimension])){\n            $outputResponse['nh']['dimensions'][$attrName] = (int)$theme->bot_configuration_array[$attrDimension] . 'px';\n        }\n    }\n}\n\nif (!isset($outputResponse['chat_ui']['leaveamessage'])) {\n    $outputResponse['chat_ui']['leaveamessage'] = (isset($startDataFields['force_leave_a_message']) && $startDataFields['force_leave_a_message'] == true) ? true : false;\n}\n\n$outputResponse['chat_ui']['mobile_popup'] = isset($startDataFields['mobile_popup']) && $startDataFields['mobile_popup'] == true;\n\nif (isset($startDataFields['lazy_load']) && $startDataFields['lazy_load'] == true) {\n    $outputResponse['ll'] = true;\n}\n\n$ts = time();\n\n// Wrapper version\n$outputResponse['wv'] = 195;\n\n// React APP versions\n$outputResponse['v'] = 242;\n\n$outputResponse['hash'] = sha1(erLhcoreClassIPDetect::getIP() . $ts . erConfigClassLhConfig::getInstance()->getSetting( 'site', 'secrethash' ));\n$outputResponse['hash_ts'] = $ts;\n\nif (is_array($department) && !empty($department)) {\n    $outputResponse['department'] = $departmentArgument;\n}\n\n$gaOptions = erLhcoreClassModelChatConfig::fetch('ga_options')->data_value;\n\nif (isset($gaOptions['ga_enabled']) && $gaOptions['ga_enabled'] == true) {\n    $optionEvents = array(\n        'showWidget',\n        'closeWidget',\n        'openPopup',\n        'endChat',\n        'chatStarted',\n        'offlineMessage',\n        'showInvitation',\n        'hideInvitation',\n        'nhClicked',\n        'nhClosed',\n        'nhShow',\n        'nhHide',\n        'fullInvitation',\n        'cancelInvitation',\n        'readInvitation',\n        'clickAction',\n        'botTrigger',\n    );\n\n    $continueTrack = false;\n\n    if ((isset($gaOptions['ga_all']) &&  $gaOptions['ga_all'] == true) || (isset($gaOptions['ga_dep']) && is_array($department) && count(array_intersect($department,$gaOptions['ga_dep'])) > 0)) {\n        $continueTrack = true;\n    }\n\n    if (isset($dep_id) && $dep_id > 0) {\n        $gaByDep = erLhcoreClassModelChatEventTrack::findOne(array('filter' => array('department_id' => $dep_id)));\n        if ($gaByDep instanceof erLhcoreClassModelChatEventTrack) {\n            $gaOptions = $gaByDep->data_array;\n            $continueTrack = true;\n        }\n    }\n\n    if ($continueTrack == true) {\n        foreach ($optionEvents as $optionEvent) {\n            if (isset($gaOptions[$optionEvent .'_on']) && $gaOptions[$optionEvent .'_on'] == 1) {\n                $outputResponse['ga']['events'][] = array(\n                    'ev' => $optionEvent,\n                    'ec' => $gaOptions[$optionEvent .'_category'],\n                    'ea' => $gaOptions[$optionEvent .'_action'],\n                    'el' => (isset($gaOptions[$optionEvent .'_label']) ? $gaOptions[$optionEvent .'_label'] : ''),\n                );\n            }\n        }\n\n        $outputResponse['ga']['events'][] = array(\n            'ev' => 'trackingEvent',\n            'ec' => 'Widget',\n            'ea' => 'Click',\n            'el' => '',\n        );\n\n        $outputResponse['ga']['js'] = $gaOptions['ga_js'];\n    }\n}\n\n$host = erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value;\n\nif ($host == '') {\n    $host = erLhcoreClassBBCode::getHost();\n} else {\n    $host .= '//' . $_SERVER['HTTP_HOST'];\n}\n\n$outputResponse['static'] = array(\n    'screenshot' =>  $host . erLhcoreClassDesign::design('js/html2canvas.min.js'). '?v=' . $outputResponse['v'],\n    'app' => $host . ((isset($_GET['ie']) && $_GET['ie'] == 'true') ? erLhcoreClassDesign::design('js/widgetv2/react.app.ie.js') . '?v=' . $outputResponse['v'] : erLhcoreClassDesign::design('js/widgetv2/react.app.js') . '?v=' . $outputResponse['v']),\n    'vendor' => $host . ((isset($_GET['ie']) && $_GET['ie'] == 'true') ? erLhcoreClassDesign::design('js/widgetv2/vendor.ie.js') . '?v=a2' : erLhcoreClassDesign::design('js/widgetv2/vendor.js') . '?v=a2'),\n    'widget_css' => $host . (erConfigClassLhConfig::getInstance()->getDirLanguage('dir_language') == 'ltr' ? erLhcoreClassDesign::designCSS('css/widgetv2/bootstrap.min.css;css/widgetv2/widget.css;css/widgetv2/widget_override.css') : erLhcoreClassDesign::designCSS('css/widgetv2/bootstrap.min.rtl.css;css/widgetv2/widget.css;css/widgetv2/widget_rtl.css;css/widgetv2/widget_override_rtl.css')),\n    'dir' => erConfigClassLhConfig::getInstance()->getDirLanguage('dir_language'),\n    'cl' => erConfigClassLhConfig::getInstance()->getDirLanguage('content_language'),\n    'widget_mobile_css' => $host . erLhcoreClassDesign::designCSS('css/widgetv2/widget_mobile.css;css/widgetv2/widget_mobile_override.css'),\n    'embed_css' => $host . erLhcoreClassDesign::designCSS('css/widgetv2/embed.css;css/widgetv2/embed_override.css'),\n    'status_css' => $host . erLhcoreClassDesign::designCSS('css/widgetv2/status.css;css/widgetv2/status_override.css'),\n    'font_status' => $host . erLhcoreClassDesign::design('fonts/MaterialIcons-lhc-v4.woff2'),\n    'chunk_js' => $host . erLhcoreClassDesign::design('js/widgetv2'),\n    'page_css' => $pageCSS,\n    'ex_js' => [],\n    'ex_cb_js' => []\n);\n\n$outputResponse['chunks_location'] = $host . erLhcoreClassDesign::design('js/widgetv2');\n$outputResponse['domain_lhc'] = $_SERVER['HTTP_HOST'];\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('widgetrestapi.settings', array('output' => & $outputResponse));\n\nerLhcoreClassRestAPIHandler::outputResponse($outputResponse);\nexit();", "<html>\n<head>\n    <script src=\"//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::design('js/widgetv2/index.js')?>?t=<?php echo time()?>\"></script>\n    <meta http-equiv=\"cache-control\" content=\"no-cache, must-revalidate, post-check=0, pre-check=0\" />\n    <meta http-equiv=\"cache-control\" content=\"max-age=0\" />\n    <meta http-equiv=\"expires\" content=\"0\" />\n    <meta http-equiv=\"expires\" content=\"Tue, 01 Jan 1980 1:00:00 GMT\" />\n    <meta http-equiv=\"pragma\" content=\"no-cache\" />\n</head>\n<body>\n<script>\n    if (location.hash === '') {\n        location.hash = \"check\";\n        location.reload(true);\n        console.log('reloading');\n    }\n</script>\n</body>\n</html>\n<?php exit();?>", "<?php\r\n\r\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('xmp.configuration', array());\r\n\r\n$tpl = erLhcoreClassTemplate::getInstance( 'lhxmp/xmp.tpl.php');\r\n\r\n$xmpData = erLhcoreClassModelChatConfig::fetch('xmp_data');\r\n$data = (array)$xmpData->data;\r\n\r\nif (isset($_POST['StoreXMPGTalkSendeMessage'])) {\r\n\ttry {\r\n        $definition = array(\r\n            'test_recipients_gtalk' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'validate_email')\r\n        );\r\n        \r\n        $form = new ezcInputForm(INPUT_POST, $definition);\r\n\r\n        if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\r\n            throw new Exception('Invalid CSRF token!');\r\n        }\r\n\r\n        if ($form->hasValidData('test_recipients_gtalk')) {\r\n            erLhcoreClassXMP::sendTestXMPGTalk($form->test_recipients_gtalk);\r\n            $tpl->set('message_send','done');\r\n            $tpl->set('test_gmail_email',$form->test_recipients_gtalk);\r\n        } else {\r\n            $tpl->set('errors',array(erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Invalid test e-mail address')));\r\n        }\r\n\t    \r\n\t} catch (Exception $e) {\r\n\t\t$tpl->set('errors',array($e->getMessage()));\r\n\t}\r\n}\r\n\r\nif (isset($_POST['StoreXMPGTalkRevokeToken'])){\r\n\ttry {\r\n\r\n        if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\r\n            throw new Exception('Invalid CSRF token!');\r\n        }\r\n\r\n\t\terLhcoreClassXMP::revokeAccessToken();\r\n\t\t$tpl->set('token_revoked','done');\r\n\t} catch (Exception $e) {\r\n\t\t$tpl->set('errors',array($e->getMessage()));\r\n\t}\r\n}\r\n\r\nif ($Params['user_parameters_unordered']['gtalkoauth'] == 'true') {\r\n\t\r\n\trequire_once 'lib/core/lhxmp/google/Google_Client.php';\r\n\trequire_once 'lib/core/lhxmp/google/contrib/Google_Oauth2Service.php';\r\n\t\r\n\t$client = new Google_Client();\r\n\t$oauth2 = new Google_Oauth2Service($client);\r\n\t\r\n\t$client->setApplicationName('Live Helper Chat');\r\n\t$client->setScopes(array(\"https://www.googleapis.com/auth/googletalk\",\"https://www.googleapis.com/auth/userinfo.email\"));\r\n\t\r\n\t$client->setClientId($data['gtalk_client_id']);\r\n\t$client->setClientSecret($data['gtalk_client_secret']);\r\n\t$client->setApprovalPrompt('force');\r\n\t$client->setAccessType('offline');\r\n\t$client->setRedirectUri(erLhcoreClassXMP::getBaseHost().$_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurl('xmp/configuration').'/(gtalkoauth)/true');\r\n\t\t\r\n\tif (isset($_GET['code'])) {\r\n\t\ttry {\t\t\t\r\n\t\t\t$client->authenticate();\t\t\r\n\t\t\t$data['gtalk_client_token'] = $client->getAccessToken();\t\t\t\r\n\t\t\t$userGoogle = $oauth2->userinfo->get();\r\n\t\t\t$data['email_gtalk'] = $userGoogle['email'];\r\n\t\t\t\t\t\t\r\n\t\t\t$xmpData->value = serialize($data);\r\n\t\t\t$xmpData->saveThis();\r\n\t\t\t$tpl->set('token_received','done');\r\n\t\t} catch (Exception $e) {\r\n\t\t\t$tpl->set('errors',array($e->getMessage()));\r\n\t\t}\r\n\t} else {\r\n\t\t$tpl->set('errors',array('Could not receive a token!'));\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nif ( isset($_POST['StoreXMPGTalkSettings']) || isset($_POST['StoreXMPGTalkSettingsTest'])) {\r\n\t$definition = array(\r\n\t\t\t'gtalk_client_id' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'gtalk_client_secret' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'XMPMessage' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'XMPAcceptedMessage' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\t\t\t\r\n\t\t\t'use_standard_xmp' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'int'\r\n\t\t\t),\t\t\t\r\n\t\t\t'use_xmp' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'int'\r\n\t\t\t)\r\n\t);\r\n\t\r\n\tif (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\r\n\t\terLhcoreClassModule::redirect('xmp/configuration');\r\n\t\texit;\r\n\t}\r\n\t\t\r\n\t$form = new ezcInputForm( INPUT_POST, $definition );\r\n\t$Errors = array();\r\n\t\r\n\tif ( $form->hasValidData( 'gtalk_client_id' )) {\r\n\t\t$data['gtalk_client_id'] = $form->gtalk_client_id;\r\n\t} else {\r\n\t\t$data['gtalk_client_id'] = '';\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'gtalk_client_secret' )) {\r\n\t\t$data['gtalk_client_secret'] = $form->gtalk_client_secret;\r\n\t} else {\r\n\t\t$data['gtalk_client_secret'] = '';\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'use_xmp' ) && $form->use_xmp == true ) {\r\n\t\t$data['use_xmp'] = 1;\r\n\t} else {\r\n\t\t$data['use_xmp'] = 0;\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'use_standard_xmp' )) {\r\n\t\t$data['use_standard_xmp'] = $form->use_standard_xmp;\r\n\t} else {\r\n\t\t$data['use_standard_xmp'] = 0;\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'XMPMessage' ) ) {\r\n\t\t$data['xmp_message'] = $form->XMPMessage;\r\n\t} else {\r\n\t\t$data['xmp_message'] = '';\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'XMPAcceptedMessage' ) ) {\r\n\t\t$data['xmp_accepted_message'] = $form->XMPAcceptedMessage;\r\n\t} else {\r\n\t\t$data['xmp_accepted_message'] = '';\r\n\t}\r\n\t\r\n\t$xmpData->value = serialize($data);\r\n\t$xmpData->saveThis();\r\n\t\r\n\tif (isset($_POST['StoreXMPGTalkSettingsTest'])) {\r\n\t\r\n\t\trequire_once 'lib/core/lhxmp/google/Google_Client.php';\r\n\t\r\n\t\t$client = new Google_Client();\r\n\t\t$client->setApplicationName('Live Helper Chat');\r\n\t\t$client->setScopes(array(\"https://www.googleapis.com/auth/googletalk\",\"https://www.googleapis.com/auth/userinfo.email\"));\r\n\t\r\n\t\t// Documentation: http://code.google.com/apis/gdata/docs/2.0/basics.html\r\n\t\t// Visit https://code.google.com/apis/console?api=contacts to generate your\r\n\t\t// oauth2_client_id, oauth2_client_secret, and register your oauth2_redirect_uri.\r\n\t\t$client->setClientId($data['gtalk_client_id']);\r\n\t\t$client->setClientSecret($data['gtalk_client_secret']);\r\n\t\t$client->setApprovalPrompt('force');\r\n\t\t$client->setAccessType('offline');\r\n\t\t$client->setRedirectUri(erLhcoreClassXMP::getBaseHost().$_SERVER['HTTP_HOST'] . erLhcoreClassDesign::baseurl('xmp/configuration').'/(gtalkoauth)/true');\r\n\t\t\t\r\n\t\tif ( !$client->getAccessToken() ) {\r\n\t\t\theader('Location: '.$client->createAuthUrl());\r\n\t\t\texit;\r\n\t\t}\r\n\t}\r\n\t\r\n\t$tpl->set('updated','done');\t\r\n}\r\n\r\n\r\nif ( isset($_POST['StoreXMPSettings']) || isset($_POST['StoreXMPSettingsTest']) ) {\r\n\r\n\t$definition = array(\r\n\t\t\t'host' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'username' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'password' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'port' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'use_xmp' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'boolean'\r\n\t\t\t),\r\n\t\t\t'resource' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\t\t\t\r\n\t\t\t'server' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'recipients' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'XMPMessage' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'XMPAcceptedMessage' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'test_recipients' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'test_group_recipients' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'use_standard_xmp' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'int'\r\n\t\t\t)\r\n\t);\r\n\r\n\tif (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\r\n\t\terLhcoreClassModule::redirect('xmp/configuration');\r\n\t\texit;\r\n\t}\r\n\r\n\t$Errors = array();\r\n\r\n\t$form = new ezcInputForm( INPUT_POST, $definition );\r\n\t$Errors = array();\r\n\r\n\tif ( $form->hasValidData( 'host' )) {\r\n\t\t$data['host'] = $form->host;\r\n\t} else {\r\n\t\t$data['host'] = '';\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'server' )) {\r\n\t\t$data['server'] = $form->server;\r\n\t} else {\r\n\t\t$data['server'] = '';\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'resource' )) {\r\n\t\t$data['resource'] = $form->resource;\r\n\t} else {\r\n\t\t$data['resource'] = '';\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'recipients' )) {\r\n\t\t$data['recipients'] = $form->recipients;\r\n\t} else {\r\n\t\t$data['recipients'] = '';\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'port' )) {\r\n\t\t$data['port'] = $form->port;\r\n\t} else {\r\n\t\t$data['port'] = '';\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'use_xmp' ) && $form->use_xmp == true ) {\r\n\t\t$data['use_xmp'] = 1;\r\n\t} else {\r\n\t\t$data['use_xmp'] = 0;\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'username' ) ) {\r\n\t\t$data['username'] = $form->username;\r\n\t} else {\r\n\t\t$data['username'] = '';\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'password' ) && $form->password != '' ) {\r\n\t\t$data['password'] = $form->password;\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'XMPMessage' ) ) {\r\n\t\t$data['xmp_message'] = $form->XMPMessage;\r\n\t} else {\r\n\t\t$data['xmp_message'] = '';\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'XMPAcceptedMessage' ) ) {\r\n\t\t$data['xmp_accepted_message'] = $form->XMPAcceptedMessage;\r\n\t} else {\r\n\t\t$data['xmp_accepted_message'] = '';\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'use_standard_xmp' )) {\r\n\t\t$data['use_standard_xmp'] = $form->use_standard_xmp;\r\n\t} else {\r\n\t\t$data['use_standard_xmp'] = 0;\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'test_recipients' )) {\r\n\t\t$data['test_recipients'] = $form->test_recipients;\r\n\t} else {\r\n\t\t$data['test_recipients'] = '';\r\n\t}\r\n\tif ( $form->hasValidData( 'test_group_recipients' )) {\r\n\t\t$data['test_group_recipients'] = $form->test_group_recipients;\r\n\t} else {\r\n\t\t$data['test_group_recipients'] = '';\r\n\t}\r\n\t\r\n\t$xmpData->value = serialize($data);\r\n\t$xmpData->saveThis();\r\n\r\n\tif (isset($_POST['StoreXMPSettingsTest'])){\r\n\t\ttry {\r\n\t\t\terLhcoreClassXMP::sendTestXMP($currentUser->getUserData());\r\n\t\t\t$tpl->set('message_send','done');\r\n\t\t} catch (Exception $e) {\r\n\t\t\t$tpl->set('errors',array($e->getMessage()));\r\n\t\t}\r\n\t}\r\n\r\n\t$tpl->set('updated','done');\r\n}\r\n\r\n$tpl->set('xmp_data',$data);\r\n\r\n$Result['content'] = $tpl->fetch();\r\n$Result['path'] = array(array('url' => erLhcoreClassDesign::baseurl('system/configuration'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','System configuration')),\r\narray('title' => erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','XMPP settings')));\r\n\r\n?>", "<?php\nreturn array (\n    'settings' =>\n        array (\n            'site' =>\n                array (\n                    'title' => 'Live helper Chat',\n                    'site_admin_email' => '',\n                    'locale' => 'en_EN',\n                    'theme' => 'defaulttheme',\n                    'installed' => false,\n                    'secrethash' => '',\n                    'debug_output' => false,\n                    'templatecache' => false,\n                    'templatecompile' => false,\n                    'modulecompile' => false,\n                    'force_virtual_host' => false,\n                    'proxy_mode' => false,\n                    'disable_rest_api_by_user' => false,\n                    'one_login_per_account' => false,\n                    'time_zone' => '',\n                    'date_format' => 'Y-m-d',\n                    'date_hour_format' => 'H:i:s',\n                    'date_date_hour_format' => 'Y-m-d H:i:s',\n                    'default_site_access' => 'eng',\n                    'maps_api_key' => false,\n                    'default_group' => '',\n                    'default_user' => '',\n                    'extensions' =>\n                        array (\n                            // 0 => 'customstatus',\n                        ),\n                    'available_site_access' =>\n                        array (\n                            0 => 'eng',\n                            1 => 'lit',\n                            2 => 'hrv',\n                            3 => 'esp',\n                            4 => 'por',\n                            5 => 'nld',\n                            6 => 'ara',\n                            7 => 'ger',\n                            8 => 'pol',\n                            9 => 'rus',\n                            10 => 'ita',\n                            11 => 'fre',\n                            12 => 'chn',\n                            13 => 'cse',\n                            14 => 'nor',\n                            15 => 'tur',\n                            16 => 'vnm',\n                            17 => 'idn',\n                            18 => 'sve',\n                            19 => 'per',\n                            20 => 'ell',\n                            21 => 'dnk',\n                            22 => 'rou',\n                            23 => 'bgr',\n                            24 => 'tha',\n                            25 => 'geo',\n                            26 => 'fin',\n                            27 => 'alb',\n                            28 => 'heb',\n                            29 => 'cat',\n                            30 => 'hun',\n                            31 => 'svk',\n                            32 => 'site_admin'\n                        ),\n                ),\n            'default_url' =>\n                array (\n                    'module' => 'chat',\n                    'view' => 'start',\n                ),\n            'webhooks' =>\n                array(\n                    'enabled' => false,\n                    'worker' => 'http',\n                ),\n            'chat' => array(\n                'online_timeout' => 300,\n                'back_office_sinterval' => 10,\n                'chat_message_sinterval' => 3.5,\n                'check_for_operator_msg' => 10,\n                'new_chat_sound_enabled' => true,\n                'new_message_sound_admin_enabled' => true,\n                'new_message_sound_user_enabled' => true,\n            ),\n            'memecache' =>\n                array (\n                    'servers' =>\n                        array (\n                            0 =>\n                                array (\n                                    'host' => '127.0.0.1',\n                                    'port' => '11211',\n                                    'weight' => 1,\n                                ),\n                        ),\n                ),\n            'redis' => array (\n                'server' => array (\n                    'host' => 'localhost',\n                    'port' => 6379,\n                    'auth' => null,\n                    'database' => 0\n                )\n            ),\n            'db' =>\n                array (\n                    'host' => '',\n                    'user' => '',\n                    'password' => '',\n                    'database' => '',\n                    'port' => 3306,\n                    'use_slaves' => false,\n                    'db_slaves' =>\n                        array (\n                            0 =>\n                                array (\n                                    'host' => '',\n                                    'user' => '',\n                                    'port' => 3306,\n                                    'password' => '',\n                                    'database' => '',\n                                ),\n                        ),\n                ),\n            'site_access_options' =>\n                array (\n                    'eng' =>\n                        array (\n                            'locale' => 'en_EN',\n                            'content_language' => 'en',\n                            'dir_language' => 'ltr',\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                        ),\n                    'lit' =>\n                        array (\n                            'locale' => 'lt_LT',\n                            'content_language' => 'lt',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'svk' =>\n                        array (\n                            'locale' => 'sk_SK',\n                            'content_language' => 'sk',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'hrv' =>\n                        array (\n                            'locale' => 'hr_HR',\n                            'content_language' => 'hr',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'esp' =>\n                        array (\n                            'locale' => 'es_MX',\n                            'content_language' => 'es',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'dnk' =>\n                        array (\n                            'locale' => 'da_DA',\n                            'content_language' => 'da',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'por' =>\n                        array (\n                            'locale' => 'pt_BR',\n                            'content_language' => 'pt',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'nld' =>\n                        array (\n                            'locale' => 'nl_NL',\n                            'content_language' => 'nl',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'ara' =>\n                        array (\n                            'locale' => 'ar_EG',\n                            'content_language' => 'ar',\n                            'dir_language' => 'rtl',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'ger' =>\n                        array (\n                            'locale' => 'de_DE',\n                            'content_language' => 'de',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'pol' =>\n                        array (\n                            'locale' => 'pl_PL',\n                            'content_language' => 'pl',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'rus' =>\n                        array (\n                            'locale' => 'ru_RU',\n                            'content_language' => 'ru',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'ita' =>\n                        array (\n                            'locale' => 'it_IT',\n                            'content_language' => 'it',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'tur' =>\n                        array (\n                            'locale' => 'tr_TR',\n                            'content_language' => 'tr',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'fre' =>\n                        array (\n                            'locale' => 'fr_FR',\n                            'content_language' => 'fr',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'chn' =>\n                        array (\n                            'locale' => 'zh_ZH',\n                            'content_language' => 'zh',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'cse' =>\n                        array (\n                            'locale' => 'cs_CS',\n                            'content_language' => 'cs',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'nor' =>\n                        array (\n                            'locale' => 'no_NO',\n                            'content_language' => 'no',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'vnm' =>\n                        array (\n                            'locale' => 'vi_VN',\n                            'content_language' => 'vi',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'tha' =>\n                        array (\n                            'locale' => 'th_TH',\n                            'content_language' => 'th',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'idn' =>\n                        array (\n                            'locale' => 'id_ID',\n                            'content_language' => 'in',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'sve' =>\n                        array (\n                            'locale' => 'sv_SV',\n                            'content_language' => 'sv',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'per' =>\n                        array (\n                            'locale' => 'fa_FA',\n                            'content_language' => 'fa',\n                            'dir_language' => 'rtl',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'ell' =>\n                        array (\n                            'locale' => 'el_EL',\n                            'content_language' => 'el',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'rou' =>\n                        array (\n                            'locale' => 'ro_RO',\n                            'content_language' => 'ro',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'bgr' =>\n                        array (\n                            'locale' => 'bg_BG',\n                            'content_language' => 'bg',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'cat' =>\n                        array (\n                            'locale' => 'ca_ES',\n                            'content_language' => 'es',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'geo' =>\n                        array (\n                            'locale' => 'ka_KA',\n                            'content_language' => 'ka',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'fin' =>\n                        array (\n                            'locale' => 'fi_FI',\n                            'content_language' => 'fi',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'alb' =>\n                        array (\n                            'locale' => 'sq_AL',\n                            'content_language' => 'sq',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'heb' => array (\n                        'locale' => 'he_HE',\n                        'content_language' => 'he',\n                        'dir_language' => 'rtl',\n                        'title' => '',\n                        'description' => '',\n                        'theme' =>\n                            array (\n                                0 => 'customtheme',\n                                1 => 'defaulttheme'\n                            ),\n                        'default_url' =>\n                            array (\n                                'module' => 'chat',\n                                'view' => 'start'\n                            ),\n                    ),\n                    'hun' =>\n                        array (\n                            'locale' => 'hu_HU',\n                            'content_language' => 'hu',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'site_admin' =>\n                        array (\n                            'locale' => 'en_EN',\n                            'content_language' => 'en',\n                            'dir_language' => 'ltr',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'login_pagelayout' => 'login',\n                            'default_url' =>\n                                array (\n                                    'module' => 'front',\n                                    'view' => 'default',\n                                ),\n                        ),\n                ),\n            'cacheEngine' =>\n                array (\n                    'cache_global_key' => 'global_cache_key',\n                    'className' => false,\n                ),\n        ),\n    'comments' => NULL,\n);\n?>\n"], "fixing_code": ["<?php\n\nclass Install\n{\n    function __construct($ini_file)\n    {\n        openlog(\"livehelperchat\", LOG_PID | LOG_PERROR, LOG_LOCAL0);\n        syslog(LOG_DEBUG, \"Start installation\"); \n        $this->settings = parse_ini_file($ini_file, true, INI_SCANNER_TYPED);\n    }\n\n    function __destruct()\n    {\n        syslog(LOG_DEBUG, \"Finish installation\"); \n        closelog();\n    }\n\n    function step1() {\n        $Errors = array();\n        $directories = $this->_scandir('cache');\n        $this->file_is_writable(array('cache'),'', $Errors);\n        $this->file_is_writable($directories, 'cache/', $Errors);\n        $this->file_is_writable(array('settings'), '', $Errors);\n        $var_directories = array(\n            'var/storage',\n            'var/storageform',\n            'var/storagetheme',\n            'var/storageadmintheme',\n            'var/tmpfiles',\n            'var/userphoto',\n        );\n        $this->file_is_writable(array('var'),'', $Errors);\n        $this->file_is_writable($var_directories, '', $Errors);\n\n        if (!extension_loaded ('pdo_mysql' ))\n            $Errors[] = \"php-pdo extension not detected. Please install php extension\";\n\n        if (!extension_loaded('curl'))\n            $Errors[] = \"php_curl extension not detected. Please install php extension\";\t\n\n        if (!extension_loaded('mbstring'))\n            $Errors[] = \"mbstring extension not detected. Please install php extension\";\t\n\n        if (!extension_loaded('gd'))\n            $Errors[] = \"gd extension not detected. Please install php extension\";\t\n\n        if (!function_exists('json_encode'))\n            $Errors[] = \"json support not detected. Please install php extension\";\t\n\n        if (version_compare(PHP_VERSION, '5.4.0','<')) {\n            $Errors[] = \"Minimum 5.4.0 PHP version is required\";\t\n        }\n\n        if (count($Errors) == 0){\n            return true;\n        } else {\n            return $Errors;\n        }\n    }\n\n    function step2() {\n        $Errors = array();\n        $database = $this->settings['db'];\n        foreach ($database as $key => $value) {\n            if (!filter_var($database[$key], FILTER_UNSAFE_RAW)) {\n                $Errors[] = \"Please enter database $key\";\n            }\n        }\n        if (!filter_var($database['database'], FILTER_SANITIZE_STRING))\n        {\n            $Errors[] = 'Please enter database name';\n        }\n\n        if (count($Errors) == 0) {\n            try {\n                $db = ezcDbFactory::create( \"mysql://{$database['user']}:{$database['password']}@{$database['host']}:{$database['port']}/{$database['database']}\" );\n            } catch (Exception $e) {\n                $Errors[] = \"Cannot login with provided logins. Returned message: \".$e->getMessage();\n            }\n        }\n\n        if (count($Errors) == 0) {\n            $cfgSite = erConfigClassLhConfig::getInstance();\n            foreach ($database as $key => $value) {\n                $cfgSite->setSetting( 'db', $key, $value);\n            }\n            $cfgSite->setSetting( 'site', 'secrethash', erLhcoreClassChat::generateHash(80));\n            return true;\n        } else {\n            return $Errors;\n        }\n    }\n\n    function step3() {\n\n        $Errors = array();\n\n        $form = (object)$this->settings['admin'];\n        if (!filter_var($form->AdminUsername, FILTER_UNSAFE_RAW))\n        {\n            $Errors[] = 'Please enter admin username';\n        }\n\n        if (!empty($form->AdminUsername) && strlen($form->AdminUsername) > 40)\n        {\n            $Errors[] = 'Maximum 40 characters for admin username';\n        }\n\n        if (!filter_var($form->AdminPassword, FILTER_UNSAFE_RAW))\n        {\n            $Errors[] = 'Please enter admin password';\n        }\n\n        if (!empty($form->AdminPassword) && strlen($form->AdminPassword) > 40)\n        {\n            $Errors[] = 'Maximum 40 characters for admin password';\n        }\n\n        if (!filter_var($form->AdminEmail, FILTER_VALIDATE_EMAIL))\n        {\n            $Errors[] = 'Wrong email address';\n        }\n\n        if (!filter_var($form->DefaultDepartament, FILTER_SANITIZE_STRING))\n        {\n            $Errors[] = 'Please enter default department name';\n        }\n\n        if (count($Errors) == 0) {\n            $adminEmail = $form->AdminEmail;\n\n            /*DATABASE TABLES SETUP*/\n            $db = ezcDbInstance::get();\n\n            try {\n                $db->query(\"set global innodb_large_prefix = 1\");\n            } catch (Exception $e) {\n                // Just ignore if not succeed\n            }\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat` (\n\t\t\t\t  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `nick` varchar(100) NOT NULL,\n\t\t\t\t  `status` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `status_sub` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `status_sub_sub` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `time` int(11) NOT NULL,\n\t\t\t\t  `user_id` int(11) NOT NULL,\n\t\t\t\t  `hash` varchar(40) NOT NULL,\n\t\t\t\t  `referrer` text NOT NULL,\n        \t   \t  `session_referrer` text NOT NULL,\n        \t   \t  `chat_variables` text NOT NULL,\n        \t   \t  `remarks` text NOT NULL,\n\t\t\t\t  `ip` varchar(100) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\t\t\t\t \n\t\t\t\t  `gbot_id` int(11) NOT NULL DEFAULT '0',\t\t\t\t \n\t\t\t\t  `invitation_id` int(11) NOT NULL,\t\t\t\t \n\t\t\t\t  `sender_user_id` int(11) NOT NULL,\n\t\t\t\t  `product_id` int(11) NOT NULL,\n                  `cls_us` tinyint(1) NOT NULL DEFAULT '0',\n\t\t\t\t  `pnd_time` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `cls_time` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `usaccept` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `user_status` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `user_closed_ts` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `support_informed` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `unread_messages_informed` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `reinform_timeout` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `last_op_msg_time` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `has_unread_op_messages` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `unread_op_messages_informed` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `email` varchar(100) NOT NULL,\n\t\t\t\t  `country_code` varchar(100) NOT NULL,\n\t\t\t\t  `country_name` varchar(100) NOT NULL,\n\t\t\t\t  `unanswered_chat` int(11) NOT NULL,\n\t\t\t\t  `anonymized` tinyint(1) NOT NULL,\n\t\t\t\t  `user_typing` int(11) NOT NULL,\n\t\t\t\t  `user_typing_txt` varchar(200) NOT NULL,\n\t\t\t\t  `operator_typing` int(11) NOT NULL,\n        \t   \t  `operator_typing_id` int(11) NOT NULL,\n\t\t\t\t  `phone` varchar(100) NOT NULL,\n\t\t\t\t  `has_unread_messages` int(11) NOT NULL,\n\t\t\t\t  `last_user_msg_time` int(11) NOT NULL,\n\t\t\t\t  `fbst` tinyint(1) NOT NULL,\n\t\t\t\t  `online_user_id` int(11) NOT NULL,\n\t\t\t\t  `auto_responder_id` int(11) NOT NULL,\n\t\t\t\t  `last_msg_id` int(11) NOT NULL,\n\t\t\t\t  `lsync` int(11) NOT NULL,\n\t\t\t\t  `transfer_uid` int(11) NOT NULL,\n\t\t\t\t  `additional_data` text NOT NULL,\t\t\t\t  \n\t\t\t\t  `user_tz_identifier` varchar(50) NOT NULL,\n\t\t\t\t  `lat` varchar(10) NOT NULL,\n\t\t\t\t  `lon` varchar(10) NOT NULL,\n\t\t\t\t  `city` varchar(100) NOT NULL,\n\t\t\t\t  `operation` text NOT NULL,\n\t\t\t\t  `operation_admin` varchar(200) NOT NULL,\n\t\t\t\t  `status_sub_arg` varchar(200) NOT NULL,\n\t\t\t\t  `uagent` varchar(250) NOT NULL,\n\t\t\t\t  `chat_locale` varchar(10) NOT NULL,\n\t\t\t\t  `chat_locale_to` varchar(10) NOT NULL,\n\t\t\t\t  `mail_send` int(11) NOT NULL,\n        \t   \t  `screenshot_id` int(11) NOT NULL,\n        \t   \t  `wait_time` int(11) NOT NULL,\n  \t\t\t\t  `chat_duration` int(11) NOT NULL,\n  \t\t\t\t  `tslasign` int(11) NOT NULL,\n        \t   \t  `priority` int(11) NOT NULL,\n        \t   \t  `chat_initiator` int(11) NOT NULL,\n        \t   \t  `transfer_timeout_ts` int(11) NOT NULL,\n        \t   \t  `transfer_timeout_ac` int(11) NOT NULL,\n        \t   \t  `transfer_if_na` int(11) NOT NULL,\n        \t   \t  `na_cb_executed` int(11) NOT NULL,\n        \t   \t  `device_type` int(11) NOT NULL,\n        \t   \t  `nc_cb_executed` tinyint(1) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `status_user_id` (`status`,`user_id`),\n\t\t\t\t  KEY `unanswered_chat` (`unanswered_chat`),\n\t\t\t\t  KEY `online_user_id` (`online_user_id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `product_id` (`product_id`),\n\t\t\t\t  KEY `unread_operator` (`has_unread_op_messages`,`unread_op_messages_informed`),\n\t\t\t\t  KEY `user_id_sender_user_id` (`user_id`,`sender_user_id`),\n\t\t\t\t  KEY `sender_user_id` (`sender_user_id`),\n\t\t\t\t  KEY `anonymized` (`anonymized`),\n\t\t\t\t  KEY `has_unread_messages` (`has_unread_messages`),\n\t\t\t\t  KEY `status` (`status`),\n                  KEY `nick` (`nick`),\n\t\t\t\t  KEY `email` (`email`),\n\t\t\t\t  KEY `phone` (`phone`),\n\t\t\t\t  KEY `dep_id_status` (`dep_id`,`status`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_chat_blocked_user` (\n                  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `ip` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `user_id` bigint(20) unsigned NOT NULL,\n                  `datets` bigint(20) unsigned NOT NULL,\n                  `chat_id` bigint(20) unsigned NOT NULL,\n                  `dep_id` bigint(20) unsigned NOT NULL,\n                  `nick` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `btype` tinyint(1) NOT NULL DEFAULT 0,\n                  `expires` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  `online_user_id` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  PRIMARY KEY (`id`),\n                  KEY `ip` (`ip`),\n                  KEY `nick` (`nick`),\n                  KEY `online_user_id` (`online_user_id`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_users_online_session` ( \n        \t       `id` bigint(20) NOT NULL AUTO_INCREMENT, \n        \t       `user_id` int(11) NOT NULL, \n        \t       `time` int(11) NOT NULL, \n        \t       `duration` int(11) NOT NULL, \n        \t       `lactivity` int(11) NOT NULL, \n        \t       PRIMARY KEY (`id`), \n        \t       KEY `user_id_lactivity` (`user_id`, `lactivity`), KEY `lactivity` (`lactivity`) ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_chat_start_settings` ( \n        \t       `id` int(11) NOT NULL AUTO_INCREMENT, \n        \t       `name` varchar(50) NOT NULL, \n        \t       `data` longtext NOT NULL, \n        \t       `department_id` int(11) NOT NULL, \n        \t       PRIMARY KEY (`id`), \n        \t       KEY `department_id` (`department_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_chat_event_track` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL, `data` longtext NOT NULL, `department_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `department_id` (`department_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_canned_msg_use` (`id` bigint(20) unsigned NOT NULL AUTO_INCREMENT, `canned_id` int(11) unsigned NOT NULL, `chat_id` bigint(20) unsigned NOT NULL, `ctime` bigint(20) unsigned NOT NULL, `user_id` bigint(20) unsigned NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`), KEY `ctime` (`ctime`), KEY `canned_id` (`canned_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            \n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_archive_range` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `range_from` int(11) NOT NULL,\n        \t   `range_to` int(11) NOT NULL,\n        \t   `year_month` int(11) NOT NULL,\n        \t   `older_than` int(11) NOT NULL,\n        \t   `last_id` int(11) NOT NULL,\n        \t   `first_id` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_notification_subscriber` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `online_user_id` bigint(20) NOT NULL, `dep_id` int(11) NOT NULL, `theme_id` int(11) NOT NULL, `ctime` int(11) NOT NULL, `utime` int(11) NOT NULL, `status` int(11) NOT NULL, `params` text NOT NULL, `device_type` tinyint(1) NOT NULL,`subscriber_hash` varchar(50) NOT NULL, `uagent` varchar(250) NOT NULL, `ip` varchar(250) NOT NULL, `last_error` text NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`), KEY `dep_id` (`dep_id`), KEY `online_user_id` (`online_user_id`), KEY `subscriber_hash` (`subscriber_hash`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_auto_responder` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `siteaccess` varchar(3) NOT NULL,\n                  `wait_message` text NOT NULL,\n                  `wait_timeout` int(11) NOT NULL,\n                  `position` int(11) NOT NULL,\n                  `timeout_message` text NOT NULL,\n                  `bot_configuration` text NOT NULL,\n                  `name` varchar(50) NOT NULL,\n                  `operator` varchar(50) NOT NULL,\n                  `dep_id` int(11) NOT NULL,\n                  `user_id` int(11) NOT NULL,\n                  `only_proactive` int(11) NOT NULL,\n                  `repeat_number` int(11) NOT NULL DEFAULT '1',\n                  `survey_timeout` int(11) NOT NULL DEFAULT '0',\n                  `survey_id` int(11) NOT NULL DEFAULT '0',\n                  `wait_timeout_hold_1` int(11) NOT NULL,\n                  `wait_timeout_hold_2` int(11) NOT NULL,\n                  `wait_timeout_hold_3` int(11) NOT NULL,\n                  `wait_timeout_hold_4` int(11) NOT NULL,\n                  `wait_timeout_hold_5` int(11) NOT NULL,\n                  `timeout_hold_message_1` text NOT NULL,\n                  `timeout_hold_message_2` text NOT NULL,\n                  `timeout_hold_message_3` text NOT NULL,\n                  `timeout_hold_message_4` text NOT NULL,\n                  `timeout_hold_message_5` text NOT NULL,\n                  `wait_timeout_hold` text NOT NULL,\n                  `wait_timeout_2` int(11) NOT NULL,\n                  `timeout_message_2` text NOT NULL,\n                  `wait_timeout_3` int(11) NOT NULL,\n                  `timeout_message_3` text NOT NULL,\n                  `wait_timeout_4` int(11) NOT NULL,\n                  `timeout_message_4` text NOT NULL,\n                  `wait_timeout_5` int(11) NOT NULL,\n                  `timeout_message_5` text NOT NULL,\n                  `wait_timeout_reply_1` int(11) NOT NULL,\n                  `timeout_reply_message_1` text NOT NULL,\n                  `wait_timeout_reply_2` int(11) NOT NULL,\n                  `timeout_reply_message_2` text NOT NULL,\n                  `wait_timeout_reply_3` int(11) NOT NULL,\n                  `timeout_reply_message_3` text NOT NULL,\n                  `wait_timeout_reply_4` int(11) NOT NULL,\n                  `timeout_reply_message_4` text NOT NULL,\n                  `wait_timeout_reply_5` int(11) NOT NULL,\n                  `timeout_reply_message_5` text NOT NULL,\n                  `languages` text NOT NULL,\n                  `ignore_pa_chat` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `siteaccess_position` (`siteaccess`,`position`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n\n\n            $db->query(\"CREATE TABLE `lh_abstract_widget_theme` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `name_company` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `onl_bcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `bor_bcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'e3e3e3',\n  `text_color` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `online_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `online_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `offline_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `offline_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `logo_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `logo_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `header_background` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_tcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_bcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_border` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_close_bg` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_hover_bg` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_close_hover_bg` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `custom_status_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `custom_container_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `custom_widget_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_header` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `need_help_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `online_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `offline_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `widget_border_color` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `copyright_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `copyright_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `widget_copyright_url` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `show_copyright` int(11) NOT NULL DEFAULT 1,\n  `explain_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `intro_operator_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `operator_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `operator_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `minimize_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `minimize_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `restore_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `restore_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `close_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `close_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `popup_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `popup_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `hide_close` int(11) NOT NULL,\n  `hide_popup` int(11) NOT NULL,\n  `header_height` int(11) NOT NULL,\n  `header_padding` int(11) NOT NULL,\n  `widget_border_width` int(11) NOT NULL,\n  `support_joined` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `support_closed` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `pending_join` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `noonline_operators` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `noonline_operators_offline` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `show_need_help` int(11) NOT NULL DEFAULT 1,\n  `show_need_help_timeout` int(11) NOT NULL DEFAULT 24,\n  `show_voting` tinyint(1) NOT NULL DEFAULT 1,\n  `department_title` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `department_select` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `buble_visitor_background` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `buble_visitor_title_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `buble_visitor_text_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `buble_operator_background` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `buble_operator_title_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `buble_operator_text_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `custom_popup_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `hide_ts` int(11) NOT NULL,\n  `widget_response_width` int(11) NOT NULL,\n  `show_need_help_delay` int(11) NOT NULL,\n  `show_status_delay` int(11) NOT NULL,\n  `modern_look` tinyint(1) NOT NULL DEFAULT 0,\n  `bot_status_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `bot_configuration` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n  `notification_configuration` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n  `pending_join_queue` text COLLATE utf8mb4_unicode_ci NOT NULL,\n  `modified` int(11) NOT NULL,\n  `widget_show_leave_form` tinyint(1) NOT NULL,\n  `enable_widget_embed_override` tinyint(1) NOT NULL,\n  `widget_popheight` int(11) NOT NULL,\n  `widget_popwidth` int(11) NOT NULL,\n  `widget_survey` int(11) NOT NULL,\n  `widget_position` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `widget_pright` int(11) NOT NULL,\n  `widget_pbottom` int(11) NOT NULL,\n  `alias` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `alias` (`alias`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_faq` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `question` varchar(250) NOT NULL,\n\t\t\t\t  `answer` text NOT NULL,\n\t\t\t\t  `url` varchar(250) NOT NULL,\n\t\t\t\t  `email` varchar(50) NOT NULL,\n\t\t\t\t  `identifier` varchar(10) NOT NULL,\n\t\t\t\t  `active` int(11) NOT NULL,\n\t\t\t\t  `has_url` tinyint(1) NOT NULL,\n\t\t\t\t  `is_wildcard` tinyint(1) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `active` (`active`),\n\t\t\t\t  KEY `active_url_2` (`active`,`url`(191)),\n\t\t\t\t  KEY `has_url` (`has_url`),\n\t\t\t\t  KEY `identifier` (`identifier`),\n\t\t\t\t  KEY `is_wildcard` (`is_wildcard`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n            $db->query(\"CREATE TABLE `lh_group_chat` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `name` varchar(50) NOT NULL,\n  `status` int(11) NOT NULL,\n  `time` int(11) NOT NULL,\n  `user_id` int(11) NOT NULL,\n  `last_msg_op_id` bigint(20) NOT NULL,\n  `last_msg` varchar(200) NOT NULL,\n  `chat_id` bigint(20) NOT NULL DEFAULT 0,\n  `last_user_msg_time` int(11) NOT NULL,\n  `last_msg_id` bigint(20) NOT NULL,\n  `type` tinyint(1) NOT NULL DEFAULT 0,\n  `tm` int(11) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `user_id` (`user_id`),\n  KEY `chat_id` (`chat_id`),\n  KEY `type` (`type`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_group_msg` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `msg` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n  `time` int(11) NOT NULL,\n  `chat_id` int(11) NOT NULL DEFAULT 0,\n  `user_id` int(11) NOT NULL DEFAULT 0,\n  `name_support` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `meta_msg` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `chat_id_id` (`chat_id`,`id`),\n  KEY `user_id` (`user_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_group_chat_member` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `user_id` bigint(20) NOT NULL,\n  `group_id` bigint(20) NOT NULL,\n  `last_activity` int(11) NOT NULL,\n  `last_msg_id` bigint(20) NOT NULL DEFAULT 0,\n  `type` tinyint(1) NOT NULL DEFAULT 0,\n  `jtime` int(11) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `group_id` (`group_id`),\n  KEY `user_id` (`user_id`),\n  KEY `type` (`type`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_cobrowse` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `chat_id` int(11) NOT NULL,\n        \t   `online_user_id` int(11) NOT NULL,\n        \t   `mtime` int(11) NOT NULL,\n        \t   `url` varchar(250) NOT NULL,\n        \t   `initialize` longtext NOT NULL,\n        \t   `modifications` longtext NOT NULL,\n        \t   `finished` tinyint(1) NOT NULL,\n        \t   `w` int NOT NULL,\n\t\t\t   `wh` int NOT NULL,\n\t\t\t   `x` int NOT NULL,\n\t\t\t   `y` int NOT NULL,        \t   \t\t\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `chat_id` (`chat_id`),\n        \t   KEY `online_user_id` (`online_user_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_survey` (\n        \t      `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `name` varchar(250) NOT NULL,\n                  `feedback_text` text NOT NULL,\n                  `max_stars_1_title` varchar(250) NOT NULL,\n                  `max_stars_1_pos` int(11) NOT NULL,\n                  `max_stars_2_title` varchar(250) NOT NULL,\n                  `max_stars_2_pos` int(11) NOT NULL,\n                  `max_stars_2` int(11) NOT NULL,\n                  `max_stars_3_title` varchar(250) NOT NULL,\n                  `max_stars_3_pos` int(11) NOT NULL,\n                  `max_stars_3` int(11) NOT NULL,\n                  `max_stars_4_title` varchar(250) NOT NULL,\n                  `max_stars_4_pos` int(11) NOT NULL,\n                  `max_stars_4` int(11) NOT NULL,\n                  `max_stars_5_title` varchar(250) NOT NULL,\n                  `max_stars_5_pos` int(11) NOT NULL,\n                  `max_stars_5` int(11) NOT NULL,\n                  `question_options_1` varchar(250) NOT NULL,\n                  `question_options_1_items` text NOT NULL,\n                  `question_options_1_pos` int(11) NOT NULL,\n                  `question_options_2` varchar(250) NOT NULL,\n                  `question_options_2_items` text NOT NULL,\n                  `question_options_2_pos` int(11) NOT NULL,\n                  `question_options_3` varchar(250) NOT NULL,\n                  `question_options_3_items` text NOT NULL,\n                  `question_options_3_pos` int(11) NOT NULL,\n                  `question_options_4` varchar(250) NOT NULL,\n                  `question_options_4_items` text NOT NULL,\n                  `question_options_4_pos` int(11) NOT NULL,\n                  `question_options_5` varchar(250) NOT NULL,\n                  `question_options_5_items` text NOT NULL,\n                  `question_options_5_pos` int(11) NOT NULL,\n                  `question_plain_1` text NOT NULL,\n                  `question_plain_1_pos` int(11) NOT NULL,\n                  `question_plain_2` text NOT NULL,\n                  `question_plain_2_pos` int(11) NOT NULL,\n                  `question_plain_3` text NOT NULL,\n                  `question_plain_3_pos` int(11) NOT NULL,\n                  `question_plain_4` text NOT NULL,\n                  `question_plain_4_pos` int(11) NOT NULL,\n                  `question_plain_5` text NOT NULL,\n                  `question_plain_5_pos` int(11) NOT NULL,\n                  `max_stars_1_enabled` int(11) NOT NULL,\n                  `max_stars_2_enabled` int(11) NOT NULL,\n                  `max_stars_3_enabled` int(11) NOT NULL,\n                  `max_stars_4_enabled` int(11) NOT NULL,\n                  `max_stars_5_enabled` int(11) NOT NULL,\n                  `question_options_1_enabled` int(11) NOT NULL,\n                  `question_options_2_enabled` int(11) NOT NULL,\n                  `question_options_3_enabled` int(11) NOT NULL,\n                  `question_options_4_enabled` int(11) NOT NULL,\n                  `question_options_5_enabled` int(11) NOT NULL,\n                  `question_plain_1_enabled` int(11) NOT NULL,\n                  `question_plain_2_enabled` int(11) NOT NULL,\n                  `question_plain_3_enabled` int(11) NOT NULL,\n                  `question_plain_4_enabled` int(11) NOT NULL,\n                  `question_plain_5_enabled` int(11) NOT NULL,\n                  `max_stars_1` int(11) NOT NULL,\n                  `max_stars_1_req` int(11) NOT NULL,\n                  `max_stars_2_req` int(11) NOT NULL,\n                  `max_stars_3_req` int(11) NOT NULL,\n                  `max_stars_4_req` int(11) NOT NULL,\n                  `max_stars_5_req` int(11) NOT NULL,\n                  `question_options_1_req` int(11) NOT NULL,\n                  `question_options_2_req` int(11) NOT NULL,\n                  `question_options_3_req` int(11) NOT NULL,\n                  `question_options_4_req` int(11) NOT NULL,\n                  `question_options_5_req` int(11) NOT NULL,\n                  `question_plain_1_req` int(11) NOT NULL,\n                  `question_plain_2_req` int(11) NOT NULL,\n                  `question_plain_3_req` int(11) NOT NULL,\n                  `question_plain_4_req` int(11) NOT NULL,\n                  `question_plain_5_req` int(11) NOT NULL,\n                  `configuration` longtext NOT NULL,\n                  PRIMARY KEY (`id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n            $db->query(\"CREATE TABLE `lh_admin_theme` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `name` varchar(100) NOT NULL,\n        \t       `static_content` longtext NOT NULL,\n        \t       `static_js_content` longtext NOT NULL,\n        \t       `static_css_content` longtext NOT NULL,\n        \t       `css_attributes` longtext NOT NULL,\n        \t       `header_content` text NOT NULL,\n        \t       `user_id` int(11) NOT NULL, \n        \t       `header_css` text NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `user_id` (`user_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n            $db->query(\"CREATE TABLE `lh_chat_paid` ( \n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,  \n        \t       `hash` varchar(250) NOT NULL,  \n        \t       `chat_id` int(11) NOT NULL, \n        \t        PRIMARY KEY (`id`),  \n        \t       KEY `hash` (`hash`(191)),  \n        \t       KEY `chat_id` (`chat_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_survey_item` (\n        \t      `id` bigint(20) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `survey_id` int(11) NOT NULL,\n\t\t\t\t  `status` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `chat_id` int(11) NOT NULL,\n\t\t\t\t  `user_id` int(11) NOT NULL,\n\t\t\t\t  `ftime` int(11) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `max_stars_1` int(11) NOT NULL,\n\t\t\t\t  `max_stars_2` int(11) NOT NULL,\n\t\t\t\t  `max_stars_3` int(11) NOT NULL,\n\t\t\t\t  `max_stars_4` int(11) NOT NULL,\n\t\t\t\t  `max_stars_5` int(11) NOT NULL,\n\t\t\t\t  `question_options_1` int(11) NOT NULL,\n\t\t\t\t  `question_options_2` int(11) NOT NULL,\n\t\t\t\t  `question_options_3` int(11) NOT NULL,\n\t\t\t\t  `question_options_4` int(11) NOT NULL,\n\t\t\t\t  `question_options_5` int(11) NOT NULL,\n\t\t\t\t  `question_plain_1` text NOT NULL,\n\t\t\t\t  `question_plain_2` text NOT NULL,\n\t\t\t\t  `question_plain_3` text NOT NULL,\n\t\t\t\t  `question_plain_4` text NOT NULL,\n\t\t\t\t  `question_plain_5` text NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `survey_id` (`survey_id`),\n\t\t\t\t  KEY `chat_id` (`chat_id`),\n\t\t\t\t  KEY `user_id` (`user_id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `ftime` (`ftime`),\n\t\t\t\t  KEY `max_stars_1` (`max_stars_1`),\n\t\t\t\t  KEY `max_stars_2` (`max_stars_2`),\n\t\t\t\t  KEY `max_stars_3` (`max_stars_3`),\n\t\t\t\t  KEY `max_stars_4` (`max_stars_4`),\n\t\t\t\t  KEY `max_stars_5` (`max_stars_5`),\n\t\t\t\t  KEY `question_options_1` (`question_options_1`),\n\t\t\t\t  KEY `question_options_2` (`question_options_2`),\n\t\t\t\t  KEY `question_options_3` (`question_options_3`),\n\t\t\t\t  KEY `question_options_4` (`question_options_4`),\n\t\t\t\t  KEY `question_options_5` (`question_options_5`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_speech_language` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `name` varchar(100) NOT NULL,\n                  `siteaccess` varchar(3) NOT NULL DEFAULT '',\n                  PRIMARY KEY (`id`)\n               ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_speech_language_dialect` (\n                `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `language_id` int(11) NOT NULL,\n                  `lang_name` varchar(100) NOT NULL,\n                  `lang_code` varchar(100) NOT NULL,\n                  `short_code` varchar(4) NOT NULL DEFAULT '',\n                  PRIMARY KEY (`id`),\n                  KEY `language_id` (`language_id`),\n                  KEY `short_code` (`short_code`),\n                  KEY `lang_code` (`lang_code`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"INSERT INTO `lh_speech_language` (`id`, `name`, `siteaccess`) VALUES\n\t\t\t\t(1,\t'Afrikaans',''),\n\t\t\t\t(2,\t'Bahasa Indonesia',''),\n\t\t\t\t(3,\t'Bahasa Melayu',''),\n\t\t\t\t(4,\t'Catal\u00e0',''),\n\t\t\t\t(5,\t'\u010ce\u0161tina',''),\n\t\t\t\t(6,\t'Deutsch','ger'),\n\t\t\t\t(7,\t'English',''),\n\t\t\t\t(8,\t'Espa\u00f1ol','esp'),\n\t\t\t\t(9,\t'Euskara',''),\n\t\t\t\t(10,\t'Fran\u00e7ais','fre'),\n\t\t\t\t(11,\t'Galego',''),\n\t\t\t\t(12,\t'Hrvatski',''),\n\t\t\t\t(13,\t'IsiZulu',''),\n\t\t\t\t(14,\t'\u00cdslenska',''),\n\t\t\t\t(15,\t'Italiano','ita'),\n\t\t\t\t(16,\t'Magyar',''),\n\t\t\t\t(17,\t'Nederlands','nld'),\n\t\t\t\t(18,\t'Norsk bokm\u00e5l',''),\n\t\t\t\t(19,\t'Polski','pol'),\n\t\t\t\t(20,\t'Portugu\u00eas','por'),\n\t\t\t\t(21,\t'Rom\u00e2n\u0103',''),\n\t\t\t\t(22,\t'Sloven\u010dina',''),\n\t\t\t\t(23,\t'Suomi','fin'),\n\t\t\t\t(24,\t'Svenska',''),\n\t\t\t\t(25,\t'T\u00fcrk\u00e7e','tur'),\n\t\t\t\t(26,\t'\u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438',''),\n\t\t\t\t(27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439','rus'),\n\t\t\t\t(28,\t'\u0421\u0440\u043f\u0441\u043a\u0438',''),\n\t\t\t\t(29,\t'\ud55c\uad6d\uc5b4',''),\n\t\t\t\t(30,\t'\u4e2d\u6587',''),\n\t\t\t\t(31,\t'\u65e5\u672c\u8a9e',''),\n\t\t\t\t(32,\t'Lingua lat\u012bna',''),\n\t\t\t\t(33,\t'Lithuanian','lit'),\n\t\t\t\t(34,\t'Latvia',''),\n\t\t\t\t(35,\t'Afar',''),\n\t\t\t\t(36,\t'Arabic',''),\n\t\t\t\t(37,\t'Assamese',''),\n\t\t\t\t(38,\t'Azerbaijani',''),\n\t\t\t\t(39,\t'Bulgarian','bgr'),\n\t\t\t\t(40,\t'Bangla',''),\n\t\t\t\t(41,\t'Bosnian',''),\n\t\t\t\t(42,\t'Cakchiquel',''),\n\t\t\t\t(43,\t'Danish',''),\n\t\t\t\t(44,\t'Greek',''),\n\t\t\t\t(45,\t'Estonian',''),\n\t\t\t\t(46,\t'Persian',''),\n\t\t\t\t(47,\t'Filipino',''),\n\t\t\t\t(48,\t'Gujarati',''),\n\t\t\t\t(49,\t'Hebrew',''),\n\t\t\t\t(50,\t'Croatian',''),\n\t\t\t\t(51,\t'Indonesia',''),\n\t\t\t\t(52,\t'Icelandic',''),\n\t\t\t\t(53,\t'Georgian',''),\n\t\t\t\t(54,\t'Maori (New Zealand)',''),\n\t\t\t\t(55,\t'Macedonian',''),\n\t\t\t\t(56,\t'Malay (Latin)',''),\n\t\t\t\t(57,\t'Maltese',''),\n\t\t\t\t(58,\t'Norwegian Nynorsk',''),\n\t\t\t\t(59,\t'Norwegian','nor'),\n\t\t\t\t(60,\t'Northern Sotho (South Africa)',''),\n\t\t\t\t(61,\t'Slovenian',''),\n\t\t\t\t(63,\t'Thai',''),\n\t\t\t\t(64,\t'Tagalog',''),\n\t\t\t\t(65,\t'Tongan',''),\n\t\t\t\t(66,\t'Ukrainian',''),\n\t\t\t\t(67,\t'Vietnamese','vnm'),\n\t\t\t\t(68,\t'Chinese','chn');\");\n\n            $db->query(\"INSERT INTO `lh_speech_language_dialect` (`id`, `language_id`, `lang_name`, `lang_code`, `short_code`) VALUES\n(1,\t1,\t'Afrikaans',\t'af-ZA',\t'af'),\n(2,\t2,\t'Bahasa Indonesia',\t'id-ID',\t'id'),\n(3,\t3,\t'Bahasa Melayu',\t'ms-MY',\t''),\n(4,\t4,\t'Catal\u00e0',\t'ca-ES',\t''),\n(5,\t5,\t'\u010ce\u0161tina',\t'cs-CZ',\t'cs'),\n(6,\t6,\t'Deutsch',\t'de-DE',\t'de'),\n(7,\t7,\t'Australia',\t'en-AU',\t''),\n(8,\t7,\t'Canada',\t'en-CA',\t''),\n(9,\t7,\t'India',\t'en-IN',\t''),\n(10,\t7,\t'New Zealand',\t'en-NZ',\t''),\n(11,\t7,\t'South Africa',\t'en-ZA',\t''),\n(12,\t7,\t'United Kingdom',\t'en-GB',\t'en'),\n(13,\t7,\t'United States',\t'en-US',\t''),\n(14,\t8,\t'Argentina',\t'es-AR',\t''),\n(15,\t8,\t'Bolivia',\t'es-BO',\t''),\n(16,\t8,\t'Chile',\t'es-CL',\t''),\n(17,\t8,\t'Colombia',\t'es-CO',\t''),\n(18,\t8,\t'Costa Rica',\t'es-CR',\t''),\n(19,\t8,\t'Ecuador',\t'es-EC',\t''),\n(20,\t8,\t'El Salvador',\t'es-SV',\t''),\n(21,\t8,\t'Espa\u00f1a',\t'es-ES',\t'es'),\n(22,\t8,\t'Estados Unidos',\t'es-US',\t''),\n(23,\t8,\t'Guatemala',\t'es-GT',\t''),\n(24,\t8,\t'Honduras',\t'es-HN',\t''),\n(25,\t8,\t'M\u00e9xico',\t'es-MX',\t''),\n(26,\t8,\t'Nicaragua',\t'es-NI',\t''),\n(27,\t8,\t'Panam\u00e1',\t'es-PA',\t''),\n(28,\t8,\t'Paraguay',\t'es-PY',\t''),\n(29,\t8,\t'Per\u00fa',\t'es-PE',\t''),\n(30,\t8,\t'Puerto Rico',\t'es-PR',\t''),\n(31,\t8,\t'Rep\u00fablica Dominicana',\t'es-DO',\t''),\n(32,\t8,\t'Uruguay',\t'es-UY',\t''),\n(33,\t8,\t'Venezuela',\t'es-VE',\t''),\n(34,\t9,\t'Euskara',\t'eu-ES',\t''),\n(35,\t10,\t'Fran\u00e7ais',\t'fr-FR',\t'fr'),\n(36,\t11,\t'Galego',\t'gl-ES',\t''),\n(37,\t12,\t'Hrvatski',\t'hr_HR',\t''),\n(38,\t13,\t'IsiZulu',\t'zu-ZA',\t''),\n(39,\t14,\t'\u00cdslenska',\t'is-IS',\t''),\n(40,\t15,\t'Italia',\t'it-IT',\t'it'),\n(41,\t15,\t'Svizzera',\t'it-CH',\t'it'),\n(42,\t16,\t'Magyar',\t'hu-HU',\t'hu'),\n(43,\t17,\t'Nederlands',\t'nl-NL',\t'nl'),\n(44,\t18,\t'Norsk bokm\u00e5l',\t'nb-NO',\t'nb'),\n(45,\t19,\t'Polski',\t'pl-PL',\t'pl'),\n(46,\t20,\t'Brasil',\t'pt-BR',\t''),\n(47,\t20,\t'Portugal',\t'pt-PT',\t'pt'),\n(48,\t21,\t'Rom\u00e2n\u0103',\t'ro-RO',\t'ro'),\n(49,\t22,\t'Sloven\u010dina',\t'sk-SK',\t'sk'),\n(50,\t23,\t'Suomi',\t'fi-FI',\t'fi'),\n(51,\t24,\t'Swedish',\t'sv-SE',\t'sv'),\n(52,\t25,\t'T\u00fcrk\u00e7e',\t'tr-TR',\t'tr'),\n(53,\t26,\t'\u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438',\t'bg-BG',\t''),\n(54,\t27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439',\t'ru-RU',\t'ru'),\n(55,\t28,\t'Serbian',\t'sr-RS',\t'sr'),\n(56,\t29,\t'\ud55c\uad6d\uc5b4',\t'ko-KR',\t'ko'),\n(57,\t30,\t'\u666e\u901a\u8bdd (\u4e2d\u56fd\u5927\u9646)',\t'cmn-Hans-CN',\t''),\n(58,\t30,\t'\u666e\u901a\u8bdd (\u9999\u6e2f)',\t'cmn-Hans-HK',\t''),\n(59,\t30,\t'\u4e2d\u6587 (\u53f0\u7063)',\t'cmn-Hant-TW',\t''),\n(60,\t30,\t'\u7cb5\u8a9e (\u9999\u6e2f)',\t'yue-Hant-HK',\t''),\n(61,\t31,\t'\u65e5\u672c\u8a9e',\t'ja-JP',\t'ja'),\n(62,\t32,\t'Lingua lat\u012bna',\t'la',\t''),\n(64,\t33,\t'Lithuanian',\t'lt-LT',\t'lt'),\n(65,\t34,\t'Latvia',\t'lv-LV',\t'lv'),\n(66,\t35,\t'Afar',\t'aa-DJ',\t'aa'),\n(67,\t36,\t'Egypt',\t'ar-EG',\t'ar'),\n(68,\t37,\t'India',\t'as-IN',\t'as'),\n(69,\t38,\t'Azerbaijani',\t'az-AZ',\t'az'),\n(70,\t39,\t'Bulgarian',\t'bg',\t'bg'),\n(71,\t40,\t'Bangla',\t'bn',\t'bn'),\n(72,\t41,\t'Bosnian',\t'bs-BA',\t'bs'),\n(73,\t42,\t'Cakchiquel',\t'cak',\t'cak'),\n(74,\t43,\t'Danish',\t'da-dk',\t'da'),\n(75,\t44,\t'Greek',\t'el-GR',\t'el'),\n(76,\t45,\t'Estonian',\t'et-EE',\t'et'),\n(77,\t46,\t'Persian',\t'fa-IR',\t'fa'),\n(78,\t47,\t'Filipino',\t'fil',\t'fil'),\n(79,\t48,\t'Gujarati',\t'gu-IN',\t'gu'),\n(80,\t49,\t'Hebrew',\t'he',\t'he'),\n(81,\t50,\t'Croatian',\t'hr-HR',\t'hr'),\n(82,\t51,\t'Indonesia',\t'in',\t'in'),\n(83,\t52,\t'Icelandic',\t'is',\t'is'),\n(84,\t53,\t'Georgian',\t'ka-ge',\t'ka'),\n(85,\t54,\t'Maori (New Zealand)',\t'mi-nz',\t'mi'),\n(86,\t55,\t'Macedonian',\t'mk-MK',\t'mk'),\n(87,\t56,\t'Malay (Latin)',\t'ms',\t'ms'),\n(88,\t57,\t'Maltese',\t'mt',\t'mt'),\n(89,\t58,\t'Norwegian Nynorsk',\t'nn-NO',\t'nn'),\n(90,\t59,\t'Norwegian',\t'no',\t'no'),\n(91,\t60,\t'Northern Sotho (South Africa)',\t'nso-za',\t'nso'),\n(92,\t61,\t'Slovenian',\t'sl-SI',\t'sl'),\n(94,\t63,\t'Thai',\t'th-TH',\t'th'),\n(95,\t64,\t'Tagalog',\t'tl',\t'tl'),\n(96,\t65,\t'Tongan',\t'to-TO',\t'to'),\n(97,\t66,\t'Ukrainian',\t'uk-UA',\t'uk'),\n(98,\t67,\t'Vietnamese',\t'vi-VN',\t'vi'),\n(99,\t68,\t'Chinese',\t'zh-CN',\t'zh'),\n(100,\t36,\t'Egypt',\t'ar-AE',\t''),\n(101,\t36,\t'Egypt',\t'ar-IQ',\t''),\n(102,\t41,\t'Bosnian',\t'bs-Latn-BA',\t''),\n(103,\t6,\t'Deutsch',\t'de-at',\t''),\n(104,\t6,\t'Deutsch',\t'de-ch',\t''),\n(105,\t6,\t'Deutsch',\t'de-GB',\t''),\n(106,\t6,\t'Deutsch',\t'de-LI',\t''),\n(107,\t6,\t'Deutsch',\t'de-LU',\t''),\n(108,\t7,\t'United Kingdom',\t'en-029',\t''),\n(109,\t7,\t'United Kingdom',\t'en-AS',\t''),\n(110,\t7,\t'United Kingdom',\t'en-BE',\t''),\n(111,\t7,\t'United Kingdom',\t'en-BM',\t''),\n(112,\t7,\t'United Kingdom',\t'en-BS',\t''),\n(113,\t7,\t'United Kingdom',\t'en-BW',\t''),\n(114,\t7,\t'United Kingdom',\t'en-CH',\t''),\n(115,\t7,\t'United Kingdom',\t'en-CX',\t''),\n(116,\t7,\t'United Kingdom',\t'en-CY',\t''),\n(117,\t7,\t'United Kingdom',\t'en-DE',\t''),\n(118,\t7,\t'United Kingdom',\t'en-DK',\t''),\n(119,\t7,\t'United Kingdom',\t'en-DM',\t''),\n(120,\t7,\t'United Kingdom',\t'en-GY',\t''),\n(121,\t7,\t'United Kingdom',\t'en-HK',\t''),\n(122,\t7,\t'United Kingdom',\t'en-ie',\t''),\n(123,\t7,\t'United Kingdom',\t'en-IM',\t''),\n(124,\t7,\t'United Kingdom',\t'en-JM',\t''),\n(125,\t7,\t'United Kingdom',\t'en-KY',\t''),\n(126,\t7,\t'United Kingdom',\t'en-MY',\t''),\n(127,\t7,\t'United Kingdom',\t'en-NF',\t''),\n(128,\t7,\t'United Kingdom',\t'en-NG',\t''),\n(129,\t7,\t'United Kingdom',\t'en-NL',\t''),\n(130,\t7,\t'United Kingdom',\t'en-PH',\t''),\n(131,\t7,\t'United Kingdom',\t'en-SE',\t''),\n(132,\t7,\t'United Kingdom',\t'en-sg',\t''),\n(133,\t7,\t'United Kingdom',\t'en-SI',\t''),\n(134,\t7,\t'United Kingdom',\t'en-SS',\t''),\n(135,\t7,\t'United Kingdom',\t'en-TO',\t''),\n(136,\t7,\t'United Kingdom',\t'en-TZ',\t''),\n(137,\t7,\t'United Kingdom',\t'en-UG',\t''),\n(138,\t7,\t'United Kingdom',\t'en-UK',\t''),\n(139,\t7,\t'United Kingdom',\t'en-ZG',\t''),\n(140,\t7,\t'United Kingdom',\t'en-ZM',\t''),\n(141,\t7,\t'United Kingdom',\t'en-ZW',\t''),\n(142,\t8,\t'Espa\u00f1a',\t'es-419',\t''),\n(143,\t8,\t'Espa\u00f1a',\t'es-xl',\t''),\n(144,\t47,\t'Filipino',\t'fil-PH',\t''),\n(145,\t10,\t'Fran\u00e7ais',\t'fr-BE',\t''),\n(146,\t10,\t'Fran\u00e7ais',\t'fr-ca',\t''),\n(147,\t10,\t'Fran\u00e7ais',\t'fr-ch',\t''),\n(148,\t10,\t'Fran\u00e7ais',\t'fr-CM',\t''),\n(149,\t10,\t'Fran\u00e7ais',\t'fr-MC',\t''),\n(150,\t49,\t'Hebrew',\t'he-IL',\t''),\n(151,\t50,\t'Croatian',\t'hr-BA',\t''),\n(152,\t17,\t'Nederlands',\t'nl-BE',\t''),\n(153,\t19,\t'Polski',\t'pl-GB',\t''),\n(154,\t27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439',\t'ru-KZ',\t''),\n(155,\t27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439',\t'ru-UA',\t''),\n(156,\t28,\t'Serbian',\t'sr-BA',\t''),\n(157,\t28,\t'Serbian',\t'sr-Latn-RS',\t''),\n(158,\t68,\t'Chinese',\t'zh-MO',\t''),\n(159,\t68,\t'Chinese',\t'zh-SG',\t''),\n(160,\t68,\t'Chinese',\t'zh-TW',\t'');\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_speech_chat_language` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `chat_id` int(11) NOT NULL,\n                  `language_id` int(11) NOT NULL,\n                  `dialect` varchar(50) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `chat_id` (`chat_id`)\n               ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_file` (\n        \t   `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n        \t   `name` varchar(255) NOT NULL,\n        \t   `upload_name` varchar(255) NOT NULL,\n        \t   `size` int(11) NOT NULL,\n        \t   `type` varchar(255) NOT NULL,\n        \t   `file_path` varchar(255) NOT NULL,\n        \t   `extension` varchar(255) NOT NULL,\n        \t   `chat_id` bigint(20) NOT NULL,\n        \t   `persistent` int(11) NOT NULL,\n        \t   `online_user_id` int(11) NOT NULL,\n        \t   `user_id` int(11) NOT NULL,\n        \t   `date` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `chat_id` (`chat_id`),\n        \t   KEY `online_user_id` (`online_user_id`),\n        \t   KEY `user_id` (`user_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_email_template` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `name` varchar(250) NOT NULL,\n\t\t\t\t  `from_name` varchar(150) NOT NULL,\n\t\t\t\t  `from_name_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `from_email` varchar(150) NOT NULL,\n\t\t\t\t  `from_email_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `user_mail_as_sender` tinyint(4) NOT NULL,\n\t\t\t\t  `content` text NOT NULL,\n\t\t\t\t  `use_chat_locale` tinyint(1) NOT NULL DEFAULT '0',\n                  `translations` longtext NOT NULL,\n\t\t\t\t  `subject` varchar(250) NOT NULL,\n\t\t\t\t  `bcc_recipients` varchar(200) NOT NULL,\n\t\t\t\t  `subject_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `reply_to` varchar(150) NOT NULL,\n\t\t\t\t  `reply_to_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `recipient` varchar(150) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"INSERT INTO `lh_abstract_email_template` (`id`, `translations`, `name`, `from_name`, `from_name_ac`, `from_email`, `from_email_ac`, `content`, `subject`, `subject_ac`, `reply_to`, `reply_to_ac`, `recipient`, `bcc_recipients`, `user_mail_as_sender`) VALUES\n            \t   (1,'',\t'Send mail to user',\t'Live Helper Chat',\t0,\t'',\t0,\t'Dear {user_chat_nick},\\r\\n\\r\\n{additional_message}\\r\\n\\r\\nLive Support response:\\r\\n{messages_content}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team\\r\\n',\t'{name_surname} has responded to your request',\t1,\t'',\t1,\t'',\t'',\t0),\n            \t   (2,'',\t'Support request from user',\t'',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nAdditional data, if any:\\r\\n{additional_data}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nLink to chat if any:\\r\\n{prefillchat}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'{name}, {country}, {department}, Support request from user',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (3,'',\t'User mail for himself',\t'Live Helper Chat',\t0,\t'',\t0,\t'Dear {user_chat_nick},\\r\\n\\r\\nTranscript:\\r\\n{messages_content}\\r\\nChat ID: {chat_id}\\n\\r\\nSincerely,\\r\\nLive Support Team\\r\\n',\t'Chat transcript',\t0,\t'',\t0,\t'',\t'',\t0),\n            \t   (4,'',\t'New chat request',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nClick to accept chat automatically\\r\\n{url_accept}\\r\\n\\r\\nSurvey\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'New chat request',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (5,'',\t'Chat was closed',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\n{operator} has closed a chat\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nAdditional data, if any:\\r\\n{additional_data}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nSurvey:\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Chat was closed',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (6,'',\t'New FAQ question',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nNew FAQ question\\r\\nEmail: {email}\\r\\n\\r\\nQuestion:\\r\\n{question}\\r\\n\\r\\nQuestion URL:\\r\\n{url_question}\\r\\n\\r\\nURL to answer a question:\\r\\n{url_request}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'New FAQ question',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (7,'',\t'New unread message',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nClick to accept chat automatically\\r\\n{url_accept}\\r\\n\\r\\nSurvey:\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'New unread message',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (8,'',\t'Filled form',\t'MCFC',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser has filled a form\\r\\nForm name - {form_name}\\r\\nUser IP - {ip}\\r\\nDownload filled data - {url_download}\\r\\nView filled data - {url_view}\\r\\n\\r\\n{content}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Filled form - {form_name}',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (9,'',\t'Chat was accepted',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nOperator {user_name} has accepted a chat [{chat_id}]\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nClick to accept chat automatically\\r\\n{url_accept}\\r\\n\\r\\nSurvey:\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Chat was accepted [{chat_id}]',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (10,'',\t'Permission request',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nOperator {user} has requested these permissions\\n\\r\\n{permissions}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Permission request from {user}',\t0,\t'',\t0,\t'',\t'',\t0),\n            \t   (11,'',\t'You have unread messages',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nOperator {operator} has answered to you\\r\\n\\r\\n{messages}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Operator has answered to your request',\t0,\t'',\t0,\t'',\t'',\t0),\n            \t   (12,'',\t'Visitor returned',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nVisitor information\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nSee more information at\\r\\n{url_accept}\\r\\n\\r\\nLast chat:\\r\\n{message}\\r\\n\\r\\nAdditional data, if any:\\r\\n{additional_data}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Visitor returned - {username}',\t0,\t'',\t0,\t'',\t'',\t0);\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `question` varchar(250) NOT NULL,\n        \t   `location` varchar(250) NOT NULL,\n        \t   `active` int(11) NOT NULL,\n        \t   `priority` int(11) NOT NULL,\n        \t   `is_voting` int(11) NOT NULL,\n        \t   `question_intro` text NOT NULL,\n        \t   `revote` int(11) NOT NULL DEFAULT '0',\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `priority` (`priority`),\n        \t   KEY `active_priority` (`active`,`priority`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question_answer` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `ip` bigint(20) NOT NULL,\n        \t   `question_id` int(11) NOT NULL,\n        \t   `answer` text NOT NULL,\n        \t   `ctime` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `ip` (`ip`),\n        \t   KEY `question_id` (`question_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question_option` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `question_id` int(11) NOT NULL,\n        \t   `option_name` varchar(250) NOT NULL,\n        \t   `priority` tinyint(4) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `question_id` (`question_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question_option_answer` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `question_id` int(11) NOT NULL,\n        \t   `option_id` int(11) NOT NULL,\n        \t   `ctime` int(11) NOT NULL,\n        \t   `ip` bigint(20) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `question_id` (`question_id`),\n        \t   KEY `ip` (`ip`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_product` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT, \n        \t       `name` varchar(250) NOT NULL, \n        \t       `disabled` int(11) NOT NULL, \n        \t       `priority` int(11) NOT NULL, \n        \t       `departament_id` int(11) NOT NULL, \n        \t       KEY `departament_id` (`departament_id`), \n        \t       PRIMARY KEY (`id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_browse_offer_invitation` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `siteaccess` varchar(10) NOT NULL,\n\t\t\t\t  `time_on_site` int(11) NOT NULL,\n\t\t\t\t  `content` longtext NOT NULL,\n\t\t\t\t  `callback_content` longtext NOT NULL,\n\t\t\t\t  `lhc_iframe_content` tinyint(4) NOT NULL,\n\t\t\t\t  `custom_iframe_url` varchar(250) NOT NULL,\n\t\t\t\t  `name` varchar(250) NOT NULL,\n\t\t\t\t  `identifier` varchar(50) NOT NULL,\n\t\t\t\t  `executed_times` int(11) NOT NULL,\n\t\t\t\t  `url` varchar(250) NOT NULL,\n\t\t\t\t  `active` int(11) NOT NULL,\n\t\t\t\t  `has_url` int(11) NOT NULL,\n\t\t\t\t  `is_wildcard` int(11) NOT NULL,\n\t\t\t\t  `referrer` varchar(250) NOT NULL,\n\t\t\t\t  `priority` varchar(250) NOT NULL,\n\t\t\t\t  `hash` varchar(40) NOT NULL,\n\t\t\t\t  `width` int(11) NOT NULL,\n\t\t\t\t  `height` int(11) NOT NULL,\n\t\t\t\t  `unit` varchar(10) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `active` (`active`),\n\t\t\t\t  KEY `identifier` (`identifier`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_form` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `name` varchar(100) NOT NULL,        \t   \n        \t   `content` longtext NOT NULL,\n        \t   `recipient` varchar(250) NOT NULL,\n        \t   `active` int(11) NOT NULL,\n        \t   `name_attr` varchar(250) NOT NULL,\n        \t   `intro_attr` varchar(250) NOT NULL,\n        \t   `xls_columns` text NOT NULL,\n        \t   `pagelayout` varchar(200) NOT NULL,\n        \t   `post_content` text NOT NULL,\n        \t   PRIMARY KEY (`id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_form_collected` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `form_id` int(11) NOT NULL,\n\t\t\t\t  `ctime` int(11) NOT NULL,\n\t\t\t\t  `ip` varchar(250) NOT NULL,\n        \t   \t  `identifier` varchar(250) NOT NULL,\n        \t   \t  `chat_id` bigint(20) NOT NULL,\n\t\t\t\t  `content` longtext NOT NULL,\n\t\t\t\t  `custom_fields` longtext NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `form_id` (`form_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chatbox` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `identifier` varchar(50) NOT NULL,\n\t\t\t\t  `name` varchar(100) NOT NULL,\n\t\t\t\t  `chat_id` int(11) NOT NULL,\n\t\t\t\t  `active` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `identifier` (`identifier`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_chat_action` (\n                `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `chat_id` bigint(20) NOT NULL,\n                  `action` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `body` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `created_at` bigint(20) unsigned NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `chat_id` (`chat_id`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_canned_msg` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `msg` longtext NOT NULL,\n                  `fallback_msg` text NOT NULL,\n                  `title` varchar(250) NOT NULL,\n                  `explain` varchar(250) NOT NULL,\n                  `languages` text NOT NULL,\n                  `additional_data` text NOT NULL,\n        \t   \t  `position` int(11) NOT NULL,\n                  `disabled` tinyint(1) unsigned NOT NULL NULL DEFAULT 0,\n        \t   \t  `department_id` int(11) NOT NULL,\n        \t   \t  `user_id` int(11) NOT NULL,\n  \t\t\t\t  `delay` int(11) NOT NULL,\n        \t   \t  `auto_send` tinyint(1) NOT NULL,\n        \t   \t  `html_snippet` longtext NOT NULL,\n        \t   \t  `attr_int_1` int(11) NOT NULL,\n        \t   \t  `attr_int_2` int(11) NOT NULL,\n        \t   \t  `attr_int_3` int(11) NOT NULL,\n                  `unique_id` varchar(20) NOT NULL,\n                  `updated_at` int(11) unsigned NOT NULL DEFAULT 0,\n                  `created_at` int(11) unsigned NOT NULL DEFAULT 0,\n                  `active_from` int(11) unsigned NOT NULL DEFAULT 0,\n                  `active_to` int(11) unsigned NOT NULL DEFAULT 0,\n                  `repetitiveness` int(11) unsigned NOT NULL DEFAULT 0,\n                  `days_activity` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                  PRIMARY KEY (`id`),\n        \t   \t  KEY `department_id` (`department_id`),\n        \t   \t  KEY `disabled` (`disabled`),\n        \t   \t  KEY `attr_int_1` (`attr_int_1`),\n        \t   \t  KEY `attr_int_2` (`attr_int_2`),\n        \t   \t  KEY `attr_int_3` (`attr_int_3`),\n        \t   \t  KEY `position_title_v2` (`position`, `title`(191)),\n        \t   \t  KEY `user_id` (`user_id`),\n        \t   \t  KEY `unique_id` (`unique_id`),\n                  KEY `repetitiveness` (`repetitiveness`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_online_user_footprint` (\n\t\t\t\t  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `chat_id` bigint(20) NOT NULL,\n\t\t\t\t  `online_user_id` int(11) NOT NULL,\n\t\t\t\t  `page` varchar(2083) NOT NULL,\n\t\t\t\t  `vtime` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `chat_id` (`chat_id`),\n\t\t\t\t  KEY `online_user_id` (`online_user_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_invitation_dep` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n    `invitation_id` int(11) NOT NULL,\n    `dep_id` int(11) NOT NULL,\n    PRIMARY KEY (`id`),\n    KEY `invitation_id` (`invitation_id`),\n    KEY `dep_id` (`dep_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_event` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `vid_id` int(11) NOT NULL,\n        \t       `ev_id` int(11) NOT NULL,\n        \t       `ts` int(11) NOT NULL,\n        \t       `val` varchar(50) NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `vid_id_ev_id_val_ts` (`vid_id`,`ev_id`,`val`,`ts`),\n        \t       KEY `vid_id_ev_id_ts` (`vid_id`,`ev_id`,`ts`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_invitation_event` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `invitation_id` int(11) NOT NULL,\n        \t       `event_id` int(11) NOT NULL,\n        \t       `min_number` int(11) NOT NULL,\n        \t       `during_seconds` int(11) NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `invitation_id` (`invitation_id`),\n        \t       KEY `event_id` (`event_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_variables` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `name` varchar(50) NOT NULL,\n        \t       `identifier` varchar(50) NOT NULL,\n        \t       `store_timeout` int(11) NOT NULL,\n        \t       `filter_val` int(11) NOT NULL DEFAULT '0',\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `identifier` (`identifier`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_campaign` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL, `text` text NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_abstract_chat_alert_icon` (`id` bigint(20) NOT NULL AUTO_INCREMENT,`name` varchar(50) NOT NULL, `identifier` varchar(50) NOT NULL,PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_campaign_conv` (\n                  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `device_type` tinyint(11) NOT NULL,\n\t\t\t\t  `invitation_type` tinyint(1) NOT NULL,\n\t\t\t\t  `invitation_status` tinyint(1) NOT NULL,\n\t\t\t\t  `chat_id` bigint(20) NOT NULL,\n\t\t\t\t  `campaign_id` int(11) NOT NULL,\n\t\t\t\t  `invitation_id` int(11) NOT NULL,\n\t\t\t\t  `department_id` int(11) NOT NULL,\n\t\t\t\t  `ctime` int(11) NOT NULL,\n\t\t\t\t  `con_time` int(11) NOT NULL,\n\t\t\t\t  `vid_id` bigint(20) DEFAULT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `ctime` (`ctime`),\n\t\t\t\t  KEY `campaign_id` (`campaign_id`),\n\t\t\t\t  KEY `invitation_id` (`invitation_id`),\n\t\t\t\t  KEY `invitation_status` (`invitation_status`)\n\t\t\t\t) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users_setting` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `user_id` int(11) NOT NULL,\n        \t   `identifier` varchar(50) NOT NULL,\n        \t   `value` text NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `user_id` (`user_id`,`identifier`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_departament_limit_group_member` (  \n    \t       `id` int(11) NOT NULL AUTO_INCREMENT,  \n    \t       `dep_id` int(11) NOT NULL,  \n    \t       `dep_limit_group_id` int(11) NOT NULL,  \n    \t       PRIMARY KEY (`id`),  \n    \t       KEY `dep_limit_group_id` (`dep_limit_group_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_departament_limit_group` (  \n    \t       `id` int(11) NOT NULL AUTO_INCREMENT,  \n    \t       `name` varchar(50) NOT NULL,\n    \t       `pending_max` int(11) NOT NULL,  \n    \t       PRIMARY KEY (`id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_auto_responder_chat` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `chat_id` int(11) NOT NULL,\n                  `auto_responder_id` int(11) NOT NULL,\n                  `wait_timeout_send` int(11) NOT NULL,\n                  `pending_send_status` int(11) NOT NULL,\n                  `active_send_status` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `chat_id` (`chat_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users_setting_option` (\n\t\t\t\t  `identifier` varchar(50) NOT NULL,\n\t\t\t\t  `class` varchar(50) NOT NULL,\n\t\t\t\t  `attribute` varchar(40) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`identifier`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"INSERT INTO `lh_users_setting_option` (`identifier`, `class`, `attribute`) VALUES\n        \t   ('chat_message',\t'',\t''),\n        \t   ('new_chat_sound',\t'',\t''),\n        \t   ('enable_pending_list', '', ''),\n        \t   ('enable_active_list', '', ''),\n        \t   ('enable_close_list', '', ''),\n        \t   ('new_user_bn', '', ''),\n        \t   ('new_user_sound', '', ''),\n        \t   ('oupdate_timeout', '', ''),\n        \t   ('ouser_timeout', '', ''),\n        \t   ('o_department', '', ''),\n        \t   ('omax_rows', '', ''),\n        \t   ('ogroup_by', '', ''),\n        \t   ('omap_depid', '', ''),\n        \t   ('omap_mtimeout', '', ''),\n        \t   ('ocountry', '', ''),\n        \t   ('otime_on_site', '', ''),\n        \t   ('dwo', '', ''),\n        \t   ('enable_unread_list', '', '')\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_config` (\n                  `identifier` varchar(50) NOT NULL,\n                  `value` text NOT NULL,\n                  `type` tinyint(1) NOT NULL DEFAULT '0',\n                  `explain` varchar(250) NOT NULL,\n                  `hidden` int(11) NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`identifier`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $randomHash = erLhcoreClassModelForgotPassword::randomPassword(80);\n            $randomHashLength = strlen($randomHash);\n            $exportHash = erLhcoreClassModelForgotPassword::randomPassword(80);\n\n            if (extension_loaded('bcmath')){\n                $geoRow = \"('geo_data','a:5:{i:0;b:0;s:21:\\\"geo_detection_enabled\\\";i:1;s:22:\\\"geo_service_identifier\\\";s:8:\\\"max_mind\\\";s:23:\\\"max_mind_detection_type\\\";s:7:\\\"country\\\";s:22:\\\"max_mind_city_location\\\";s:37:\\\"var/external/geoip/GeoLite2-City.mmdb\\\";}',0,'',1)\";\n            } else {\n                $geoRow = \"('geo_data', '', '0', '', '1')\";\n            }\n\n            $db->query(\"INSERT INTO `lh_chat_config` (`identifier`, `value`, `type`, `explain`, `hidden`) VALUES\n                ('tracked_users_cleanup',\t'160',\t0,\t'How many days keep records of online users.',\t0),\n        \t   \t('list_online_operators', '1', '0', 'List online operators.', '0'),\n        \t   \t('voting_days_limit',\t'7',\t0,\t'How many days voting widget should not be expanded after last show',\t0),\n                ('track_online_visitors',\t'1',\t0,\t'Enable online site visitors tracking',\t0),\n        \t   \t('pro_active_invite',\t'1',\t0,\t'Is pro active chat invitation active. Online users tracking also has to be enabled',\t0),\n                ('customer_company_name',\t'Live Helper Chat',\t0,\t'Your company name - visible in bottom left corner',\t0),\n                ('customer_site_url',\t'http://livehelperchat.com',\t0,\t'Your site URL address',\t0),\n                ('transfer_configuration','0','0','Transfer configuration','1'),\n                ('list_unread','0','0','List unread chats','0'),\n                ('autoclose_abandon_pending','0,0','0','Automatically close pending chats where visitor has left a chat. Timeout in minutes, last activity by visitor <desktop timeout>,<mobile timeout>,<status chat>.','0'),\n                ('mobile_options',\t'a:2:{s:13:\\\"notifications\\\";i:0;s:7:\\\"fcm_key\\\";s:152:\\\"AAAAiF8DeNk:APA91bFVHu2ybhBUTtlEtQrUEPpM2fb-5ovgo0FVNm4XxK3cYJtSwRcd-pqcBot_422yDOzHyw2p9ZFplkHrmNXjm8f5f-OIzfalGmpsypeXvnPxhU6Db1B2Z1Acc-TamHUn2F4xBJkP\\\";}',\t0,\t'',\t1),\n                ('list_closed','0','0','List closed chats','0'),\n                ('autoclose_activity_timeout','0','0','Automatically close active chat if from last visitor/operator message passed. 0 - disabled, n > 0 time in minutes','0'),\n                ('footprint_background','0','0','Footprint updates should be processed in the background. Make sure you are running workflow background cronjob.','0'),\n                ('reverse_pending','0','0','Make default pending chats order from old to new','0'),\n                ('departament_availability','364','0','How long department availability statistic should be kept? (days)','0'),\n                ('uonline_sessions','364','0','How long keep operators online sessions data? (days)','0'),\n                ('disable_live_autoassign','0','0','Disable live auto assign','0'),\n                ('tracked_footprint_cleanup','90','0','How many days keep records of users footprint.','0'),\n                ('cleanup_cronjob','0','0','Cleanup should be done only using cronjob.','0'),         \n                ('vwait_to_long','120','0','How long we should wait before we inform operator about unanswered chat.','0'),\n                ('no_wildcard_cookie','0','0','Cookie should be valid only for domain where Javascript is embedded (excludes subdomains)','0'),\n                ('cduration_timeout_user','4','0','How long operator can wait for message from visitor before time between messages are ignored. Values in minutes.','0'),\n                ('cduration_timeout_operator','10','0','How long visitor can wait for message from operator before time between messages are ignored. Values in minutes.','0'),       \n                ('assign_workflow_timeout','0','0','Chats waiting in pending line more than n seconds should be auto assigned first. Time in seconds','0'),\n        \t   \t('smtp_data',\t'a:5:{s:4:\\\"host\\\";s:0:\\\"\\\";s:4:\\\"port\\\";s:2:\\\"25\\\";s:8:\\\"use_smtp\\\";i:0;s:8:\\\"username\\\";s:0:\\\"\\\";s:8:\\\"password\\\";s:0:\\\"\\\";}',\t0,\t'SMTP configuration',\t1),\n        \t    ('chatbox_data',\t'a:6:{i:0;b:0;s:20:\\\"chatbox_auto_enabled\\\";i:0;s:19:\\\"chatbox_secret_hash\\\";s:{$randomHashLength}:\\\"{$randomHash}\\\";s:20:\\\"chatbox_default_name\\\";s:7:\\\"Chatbox\\\";s:17:\\\"chatbox_msg_limit\\\";i:50;s:22:\\\"chatbox_default_opname\\\";s:7:\\\"Manager\\\";}',\t0,\t'Chatbox configuration',\t1),\n                ('start_chat_data',\t'a:80:{i:0;b:0;s:21:\\\"name_visible_in_popup\\\";b:0;s:27:\\\"name_visible_in_page_widget\\\";b:0;s:19:\\\"name_require_option\\\";s:8:\\\"required\\\";s:22:\\\"email_visible_in_popup\\\";b:0;s:28:\\\"email_visible_in_page_widget\\\";b:0;s:20:\\\"email_require_option\\\";s:8:\\\"required\\\";s:24:\\\"message_visible_in_popup\\\";b:1;s:30:\\\"message_visible_in_page_widget\\\";b:1;s:22:\\\"message_require_option\\\";s:8:\\\"required\\\";s:22:\\\"phone_visible_in_popup\\\";b:0;s:28:\\\"phone_visible_in_page_widget\\\";b:0;s:20:\\\"phone_require_option\\\";s:8:\\\"required\\\";s:21:\\\"force_leave_a_message\\\";b:0;s:29:\\\"offline_name_visible_in_popup\\\";b:1;s:35:\\\"offline_name_visible_in_page_widget\\\";b:1;s:27:\\\"offline_name_require_option\\\";s:8:\\\"required\\\";s:30:\\\"offline_phone_visible_in_popup\\\";b:0;s:36:\\\"offline_phone_visible_in_page_widget\\\";b:0;s:28:\\\"offline_phone_require_option\\\";s:8:\\\"required\\\";s:32:\\\"offline_message_visible_in_popup\\\";b:1;s:38:\\\"offline_message_visible_in_page_widget\\\";b:1;s:30:\\\"offline_message_require_option\\\";s:8:\\\"required\\\";s:15:\\\"auto_start_chat\\\";b:0;s:12:\\\"mobile_popup\\\";b:0;s:17:\\\"dont_auto_process\\\";b:0;s:20:\\\"tos_visible_in_popup\\\";b:0;s:12:\\\"requires_dep\\\";b:0;s:17:\\\"requires_dep_lock\\\";b:0;s:17:\\\"show_messages_box\\\";b:1;s:26:\\\"tos_visible_in_page_widget\\\";b:0;s:19:\\\"tos_checked_offline\\\";b:0;s:18:\\\"tos_checked_online\\\";b:0;s:28:\\\"offline_tos_visible_in_popup\\\";b:0;s:34:\\\"offline_tos_visible_in_page_widget\\\";b:0;s:35:\\\"offline_file_visible_in_page_widget\\\";b:0;s:29:\\\"offline_file_visible_in_popup\\\";b:0;s:11:\\\"name_hidden\\\";b:0;s:15:\\\"name_hidden_bot\\\";b:0;s:24:\\\"custom_fields_encryption\\\";s:0:\\\"\\\";s:19:\\\"offline_name_hidden\\\";b:0;s:13:\\\"pre_chat_html\\\";s:0:\\\"\\\";s:21:\\\"pre_offline_chat_html\\\";s:0:\\\"\\\";s:12:\\\"email_hidden\\\";b:0;s:16:\\\"email_hidden_bot\\\";b:0;s:20:\\\"offline_email_hidden\\\";b:0;s:15:\\\"user_msg_height\\\";s:0:\\\"\\\";s:12:\\\"phone_hidden\\\";b:0;s:16:\\\"phone_hidden_bot\\\";b:0;s:20:\\\"offline_phone_hidden\\\";b:0;s:14:\\\"message_hidden\\\";b:0;s:18:\\\"message_hidden_bot\\\";b:0;s:18:\\\"message_auto_start\\\";b:0;s:28:\\\"message_auto_start_key_press\\\";b:0;s:22:\\\"offline_message_hidden\\\";b:0;s:21:\\\"show_operator_profile\\\";b:1;s:21:\\\"remove_operator_space\\\";b:0;s:18:\\\"hide_message_label\\\";b:0;s:17:\\\"custom_fields_url\\\";s:0:\\\"\\\";s:13:\\\"custom_fields\\\";s:0:\\\"\\\";s:21:\\\"name_hidden_prefilled\\\";b:0;s:22:\\\"email_hidden_prefilled\\\";b:0;s:24:\\\"message_hidden_prefilled\\\";b:0;s:22:\\\"phone_hidden_prefilled\\\";b:0;s:29:\\\"offline_name_hidden_prefilled\\\";b:0;s:32:\\\"offline_message_hidden_prefilled\\\";b:0;s:30:\\\"offline_phone_hidden_prefilled\\\";b:0;s:18:\\\"disable_start_chat\\\";b:0;s:18:\\\"offline_name_width\\\";i:0;s:19:\\\"offline_email_width\\\";i:0;s:19:\\\"offline_phone_width\\\";i:0;s:10:\\\"name_width\\\";i:0;s:11:\\\"email_width\\\";i:0;s:11:\\\"phone_width\\\";i:0;s:17:\\\"hide_start_button\\\";b:0;s:9:\\\"lazy_load\\\";b:0;s:28:\\\"offline_email_require_option\\\";s:8:\\\"required\\\";s:30:\\\"offline_email_hidden_prefilled\\\";b:0;s:36:\\\"offline_email_visible_in_page_widget\\\";b:1;s:30:\\\"offline_email_visible_in_popup\\\";b:1;}',\t0,\t'',\t1),\n                ('application_name',\t'a:6:{s:3:\\\"eng\\\";s:31:\\\"Live Helper Chat - live support\\\";s:3:\\\"lit\\\";s:26:\\\"Live Helper Chat - pagalba\\\";s:3:\\\"hrv\\\";s:0:\\\"\\\";s:3:\\\"esp\\\";s:0:\\\"\\\";s:3:\\\"por\\\";s:0:\\\"\\\";s:10:\\\"site_admin\\\";s:31:\\\"Live Helper Chat - live support\\\";}',\t1,\t'Support application name, visible in browser title.',\t0),\n                ('track_footprint',\t'0',\t0,\t'Track users footprint. For this also online visitors tracking should be enabled',\t0),\n                ('pro_active_limitation',\t'-1',\t0,\t'Pro active chats invitations limitation based on pending chats, (-1) do not limit, (0,1,n+1) number of pending chats can be for invitation to be shown.',\t0),\n                ('pro_active_show_if_offline',\t'0',\t0,\t'Should invitation logic be executed if there is no online operators',\t0),\n                ('export_hash',\t'{$exportHash}',\t0,\t'Chats export secret hash',\t0),\n                ('do_no_track_ip', 0, 0, 'Do not track visitors IP',0),\n                ('remember_username','1','0','Should we remember username for the next time visitor starts a chat?','0'),\n                ('ignore_typing', 0, 0, 'Do not store what visitor is typing',0),\n                ('encrypt_msg_after', 0, 0, 'After how many days anonymize messages',0),\n                ('encrypt_msg_op', 0, 0, 'Anonymize also operators messages',0),\n                ('valid_domains','','0','Domains where script can be embedded. E.g example.com, google.com','0'),\n                ('message_seen_timeout', 24, 0, 'Proactive message timeout in hours. After how many hours proactive chat mesasge should be shown again.',\t0),\n                ('reopen_chat_enabled',0,\t0,\t'Reopen chat functionality enabled',\t0),\n                ('ignorable_ip',\t'',\t0,\t'Which ip should be ignored in online users list, separate by comma',0),\n                ('run_departments_workflow', 0, 0, 'Should cronjob run departments transfer workflow, even if user leaves a chat',\t0),\n                ('geo_location_data', 'a:3:{s:4:\\\"zoom\\\";i:4;s:3:\\\"lat\\\";s:7:\\\"49.8211\\\";s:3:\\\"lng\\\";s:7:\\\"11.7835\\\";}', '0', '', '1'),\n                ('xmp_data','a:14:{i:0;b:0;s:4:\\\"host\\\";s:15:\\\"talk.google.com\\\";s:6:\\\"server\\\";s:9:\\\"gmail.com\\\";s:8:\\\"resource\\\";s:6:\\\"xmpphp\\\";s:4:\\\"port\\\";s:4:\\\"5222\\\";s:7:\\\"use_xmp\\\";i:0;s:8:\\\"username\\\";s:0:\\\"\\\";s:8:\\\"password\\\";s:0:\\\"\\\";s:11:\\\"xmp_message\\\";s:98:\\\"New chat request [{chat_id}] from [{department}]\\r\\n{messages}\\r\\nClick to accept a chat\\r\\n{url_accept}\\\";s:10:\\\"recipients\\\";s:0:\\\"\\\";s:20:\\\"xmp_accepted_message\\\";s:89:\\\"{user_name} has accepted a chat [{chat_id}] from [{department}]\\r\\n{messages}\\r\\n{url_accept}\\\";s:16:\\\"use_standard_xmp\\\";i:0;s:15:\\\"test_recipients\\\";s:0:\\\"\\\";s:21:\\\"test_group_recipients\\\";s:0:\\\"\\\";}',0,'XMP data',1),\n                ('run_unaswered_chat_workflow', 0, 0, 'Should cronjob run unanswered chats workflow and execute unaswered chats callback, 0 - no, any other number bigger than 0 is a minits how long chat have to be not accepted before executing callback.',0),\n                ('disable_popup_restore', 0, 0, 'Disable option in widget to open new window. Restore icon will be hidden',\t0),\n                ('accept_tos_link', '#', 0, 'Change to your site Terms of Service', 0),\n                ('hide_button_dropdown', '0', 0, 'Hide close button in dropdown', 0),\n                ('on_close_exit_chat', '0', 0, 'On chat close exit chat', 0),\n                ('activity_timeout', '5', 0, 'How long operator should go offline automatically because of inactivity. Value in minutes', 0),\n                ('product_enabled_module','0','0','Product module is enabled', '1'),\n                ('preload_iframes','0','0','Preload widget. It will avoid loading delay after clicking widget','0'),\n                ('product_show_departament','0','0','Enable products show by departments', '1'),\n                ('paidchat_data','','0','Paid chat configuration','1'),\n                ('mheight_op','200','0','Messages box height for operator','0'),\n                ('listd_op','10','0','Default number of online operators to show','0'),\n                ('disable_iframe_sharing',\t'1',\t0,\t'Disable iframes in sharing mode',\t0),\n                ('file_configuration',\t'a:7:{i:0;b:0;s:5:\\\"ft_op\\\";s:47:\\\"gif|jpe?g|png|zip|svg|rar|xls|doc|docx|xlsx|pdf\\\";s:5:\\\"ft_us\\\";s:30:\\\"gif|jpe?g|png|svg|doc|docx|pdf\\\";s:6:\\\"fs_max\\\";i:2048;s:18:\\\"active_user_upload\\\";b:0;s:16:\\\"active_op_upload\\\";b:1;s:19:\\\"active_admin_upload\\\";b:1;}',\t0,\t'Files configuration item',\t1),\n                ('accept_chat_link_timeout',\t'300',\t0,\t'How many seconds chat accept link is valid. Set 0 to force login all the time manually.',\t0),\n                ('open_closed_chat_timeout',\t'1800',\t0,\t'How many seconds customer has to open already closed chat.',\t0),\n                ('session_captcha',0,\t0,\t'Use session captcha. LHC have to be installed on the same domain or subdomain.',\t0),\n                ('sync_sound_settings',\t'a:16:{i:0;b:0;s:12:\\\"repeat_sound\\\";i:1;s:18:\\\"repeat_sound_delay\\\";i:5;s:10:\\\"show_alert\\\";b:0;s:22:\\\"new_chat_sound_enabled\\\";b:1;s:31:\\\"new_message_sound_admin_enabled\\\";b:1;s:30:\\\"new_message_sound_user_enabled\\\";b:1;s:14:\\\"online_timeout\\\";d:300;s:22:\\\"check_for_operator_msg\\\";d:10;s:21:\\\"back_office_sinterval\\\";d:10;s:22:\\\"chat_message_sinterval\\\";d:3.5;s:20:\\\"long_polling_enabled\\\";b:0;s:30:\\\"polling_chat_message_sinterval\\\";d:1.5;s:29:\\\"polling_back_office_sinterval\\\";d:5;s:18:\\\"connection_timeout\\\";i:30;s:28:\\\"browser_notification_message\\\";b:0;}',\t0,\t'',\t1),\n                ('sound_invitation', 1, 0, 'Play sound on invitation to chat.',\t0),\n                ('explicit_http_mode', '',0,'Please enter explicit http mode. Either http: or https:, do not forget : at the end.', '0'),\n                ('track_domain',\t'',\t0,\t'Set your domain to enable user tracking across different domain subdomains.',\t0),\n                ('max_message_length','500',0,'Maximum message length in characters', '0'),\n                ('need_help_tip','1',0,'Show need help tooltip?', '0'),\n                ('recaptcha_data','a:4:{i:0;b:0;s:8:\\\"site_key\\\";s:0:\\\"\\\";s:10:\\\"secret_key\\\";s:0:\\\"\\\";s:7:\\\"enabled\\\";i:0;}','0','Re-captcha configuration','1'),\n                ('need_help_tip_timeout','24',0,'Need help tooltip timeout, after how many hours show again tooltip?', '0'),\n                ('use_secure_cookie','0',0,'Use secure cookie, check this if you want to force SSL all the time', '0'),\n                ('faq_email_required','0',0,'Is visitor e-mail required for FAQ', '0'),\n                ('disable_print','0',0,'Disable chat print', '0'),\n                ('hide_disabled_department','1',0,'Hide disabled department widget', '0'),\n                ('disable_send','0',0,'Disable chat transcript send', '0'),\n                ('ignore_user_status','0',0,'Ignore users online statuses and use departments online hours', '0'),\n                ('bbc_button_visible','1',0,'Show BB Code button', '0'),\n                ('password_data','','0','Password requirements','1'),\n                ('activity_track_all','0','0','Track all logged operators activity and ignore their individual settings.','0'),\n                ('allow_reopen_closed','0', 0, 'Allow user to reopen closed chats?', '0'),\n                ('reopen_as_new','0', 0, 'Reopen closed chat as new? Otherwise it will be reopened as active.', '0'),\n                ('default_theme_id','0', 0, 'Default theme ID.', '1'),  \n                ('default_admin_theme_id','0', 0, 'Default admin theme ID', '1'),  \n                ('translation_data',\t'a:6:{i:0;b:0;s:19:\\\"translation_handler\\\";s:4:\\\"bing\\\";s:19:\\\"enable_translations\\\";b:0;s:14:\\\"bing_client_id\\\";s:0:\\\"\\\";s:18:\\\"bing_client_secret\\\";s:0:\\\"\\\";s:14:\\\"google_api_key\\\";s:0:\\\"\\\";}',\t0,\t'Translation data',\t1),              \n                ('disable_html5_storage','1',0,'Disable HMTL5 storage, check it if your site is switching between http and https', '0'),\n                ('automatically_reopen_chat','1',0,'Automatically reopen chat on widget open', '0'),\n                ('autoclose_timeout','0', 0, 'Automatic chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autoclose_timeout_pending','0', 0, 'Automatic pending chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autoclose_timeout_active','0', 0, 'Automatic active chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autoclose_timeout_bot','0', 0, 'Automatic bot chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autopurge_timeout','0', 0, 'Automatic chats purging. 0 - disabled, n > 0 time in minutes before chat is automatically deleted', '0'),\n                ('update_ip',\t'127.0.0.1',\t0,\t'Which ip should be allowed to update DB by executing http request, separate by comma?',0),\n                ('track_if_offline',\t'0',\t0,\t'Track online visitors even if there is no online operators',0),\n                ('min_phone_length','8',0,'Minimum phone number length',0),\n                ('mheight','',0,'Messages box height',0),\n                ('inform_unread_message','0',0,'Inform visitor about unread messages from operator, value in minutes. 0 - disabled',0),\n                ('dashboard_order', '[[\\\"online_operators\\\",\\\"departments_stats\\\",\\\"online_visitors\\\"],[\\\"group_chats\\\",\\\"my_chats\\\",\\\"pending_chats\\\",\\\"transfered_chats\\\"],[\\\"active_chats\\\",\\\"bot_chats\\\"]]', '0', 'Home page dashboard widgets order', '0'),\n                ('banned_ip_range','',0,'Which ip should not be allowed to chat',0),\n                ('suggest_leave_msg','1',0,'Suggest user to leave a message then user chooses offline department',0),\n                ('checkstatus_timeout','0',0,'Interval between chat status checks in seconds, 0 disabled.',0),\n                ('show_language_switcher','0',0,'Show users option to switch language at widget',0),\n                ('sharing_auto_allow','0',0,'Do not ask permission for users to see their screen',0),\n                ('sharing_nodejs_enabled','0',0,'NodeJs support enabled',0),\n                ('sharing_nodejs_path','',0,'socket.io path, optional',0),\n                ('online_if','0','0','','0'),\n                ('track_mouse_activity','0','0','Should mouse movement be tracked as activity measure, if not checked only basic events would be tracked','0'),\n                ('track_activity','0','0','Track users activity on site?','0'),\n                ('autologin_data','a:3:{i:0;b:0;s:11:\\\"secret_hash\\\";s:16:\\\"please_change_me\\\";s:7:\\\"enabled\\\";i:0;}',0,'Autologin configuration data',\t1),\n                ('sharing_nodejs_secure','0',0,'Connect to NodeJs in https mode',0),\n                ('disable_js_execution','1',0,'Disable JS execution in Co-Browsing operator window',0),\n                ('sharing_nodejs_socket_host','',0,'Host where NodeJs is running',0),\n                ('hide_right_column_frontpage','1','0','Hide right column in frontpage','0'),\n                ('front_tabs', 'dashboard,online_users,online_map', '0', 'Home page tabs order', '0'),\n                ('speech_data',\t'a:3:{i:0;b:0;s:8:\\\"language\\\";i:7;s:7:\\\"dialect\\\";s:5:\\\"en-US\\\";}',\t1,\t'',\t1),\n                ('sharing_nodejs_sllocation','https://cdn.jsdelivr.net/npm/socket.io-client@2/dist/socket.io.js',0,'Location of SocketIO JS library',0),\n                ('track_is_online','0',0,'Track is user still on site, chat status checks also has to be enabled',0),\n\t\t\t\t('show_languages','eng,lit,hrv,esp,por,nld,ara,ger,pol,rus,ita,fre,chn,cse,nor,tur,vnm,idn,sve,per,ell,dnk,rou,bgr,tha,geo,fin,alb',0,'Between what languages user should be able to switch',0),\n                ('geoadjustment_data',\t'a:8:{i:0;b:0;s:18:\\\"use_geo_adjustment\\\";b:0;s:13:\\\"available_for\\\";s:0:\\\"\\\";s:15:\\\"other_countries\\\";s:6:\\\"custom\\\";s:8:\\\"hide_for\\\";s:0:\\\"\\\";s:12:\\\"other_status\\\";s:7:\\\"offline\\\";s:11:\\\"rest_status\\\";s:6:\\\"hidden\\\";s:12:\\\"apply_widget\\\";i:0;}',\t0,\t'Geo adjustment settings',\t1),\n                {$geoRow}\");\n\n\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_online_user` (\n                  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `vid` varchar(50) NOT NULL,\n                  `ip` varchar(50) NOT NULL,\n                  `current_page` text NOT NULL,\n        \t   \t  `page_title` varchar(250) NOT NULL,\n                  `referrer` text NOT NULL,\n                  `chat_id` int(11) NOT NULL,\n                  `invitation_seen_count` int(11) NOT NULL,\n        \t   \t  `invitation_id` int(11) NOT NULL,\n                  `last_visit` int(11) NOT NULL,\n        \t   \t  `first_visit` int(11) NOT NULL,\n        \t   \t  `total_visits` int(11) NOT NULL,\n        \t   \t  `pages_count` int(11) NOT NULL,\n        \t   \t  `tt_pages_count` int(11) NOT NULL,\n        \t   \t  `invitation_count` int(11) NOT NULL,\n        \t   \t  `last_check_time` int(11) NOT NULL,\n        \t   \t  `dep_id` int(11) NOT NULL,        \t   \t \n                  `user_agent` text NOT NULL,\n                  `notes` varchar(250) NOT NULL,\n                  `user_country_code` varchar(50) NOT NULL,\n                  `user_country_name` varchar(50) NOT NULL,\n                  `visitor_tz` varchar(50) NOT NULL,\n                  `operator_message` text NOT NULL,\n                  `operator_user_proactive` varchar(100) NOT NULL,\n                  `operator_user_id` int(11) NOT NULL,\n                  `conversion_id` int(11) NOT NULL,\n                  `message_seen` int(11) NOT NULL,\n                  `message_seen_ts` int(11) NOT NULL,\n                  `user_active` int(11) NOT NULL,\n        \t   \t  `lat` varchar(10) NOT NULL,\n  \t\t\t\t  `lon` varchar(10) NOT NULL,\n  \t\t\t\t  `city` varchar(100) NOT NULL,\n        \t   \t  `reopen_chat` int(11) NOT NULL,\n        \t   \t  `time_on_site` int(11) NOT NULL,\n  \t\t\t\t  `tt_time_on_site` int(11) NOT NULL,\n        \t   \t  `requires_email` int(11) NOT NULL,\n        \t   \t  `requires_username` int(11) NOT NULL,\n        \t   \t  `requires_phone` int(11) NOT NULL,\n        \t   \t  `screenshot_id` int(11) NOT NULL,\n        \t   \t  `identifier` varchar(50) NOT NULL,\n        \t   \t  `operation` text NOT NULL,\n        \t   \t  `online_attr_system` text NOT NULL,\n        \t   \t  `operation_chat` text NOT NULL,\n        \t   \t  `online_attr` text NOT NULL,\n        \t   \t  `device_type` tinyint(1) NOT NULL DEFAULT '0',\n                  `chat_time` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  `last_visit_prev` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  PRIMARY KEY (`id`),\n                  KEY `vid` (`vid`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `last_visit_dep_id` (`last_visit`,`dep_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_proactive_chat_invitation` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `siteaccess` varchar(10) NOT NULL,\n\t\t\t\t  `time_on_site` int(11) NOT NULL,\n\t\t\t\t  `pageviews` int(11) NOT NULL,\n\t\t\t\t  `message` text NOT NULL,\n\t\t\t\t  `message_returning` text NOT NULL,\n\t\t\t\t  `executed_times` int(11) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `hide_after_ntimes` int(11) NOT NULL,\n\t\t\t\t  `show_on_mobile` int(11) NOT NULL,\n\t\t\t\t  `delay` int(11) NOT NULL,\n\t\t\t\t  `delay_init` int(11) NOT NULL,\n\t\t\t\t  `show_instant` int(11) NOT NULL,\n\t\t\t\t  `autoresponder_id` int(11) NOT NULL,\n\t\t\t\t  `disabled` int(11) NOT NULL,\n\t\t\t\t  `inject_only_html` tinyint(1) NOT NULL,\n\t\t\t\t  `name` varchar(50) NOT NULL,\n\t\t\t\t  `operator_ids` varchar(100) NOT NULL,\t\t\t\t \n\t\t\t\t  `message_returning_nick` varchar(250) NOT NULL,\n\t\t\t\t  `referrer` varchar(250) NOT NULL,\t\t\t\t  \n\t\t\t\t  `show_random_operator` int(11) NOT NULL,\n\t\t\t\t  `operator_name` varchar(100) NOT NULL,\n\t\t\t\t  `campaign_id` int(11) NOT NULL,\n\t\t\t\t  `position` int(11) NOT NULL,\n\t\t\t\t  `event_invitation` int(11) NOT NULL,\n\t\t\t\t  `dynamic_invitation` int(11) NOT NULL,\n\t\t\t\t  `bot_id` int(11) NOT NULL,\n\t\t\t\t  `trigger_id` int(11) NOT NULL,\n\t\t\t\t  `bot_offline` tinyint(1) NOT NULL,\n        \t   \t  `identifier` varchar(50) NOT NULL,\n        \t   \t  `tag` varchar(50) NOT NULL,\n        \t   \t  `requires_email` int(11) NOT NULL,\n        \t   \t  `iddle_for` int(11) NOT NULL,\n        \t   \t  `event_type` int(11) NOT NULL,\n        \t   \t  `requires_username` int(11) NOT NULL,\n        \t   \t  `requires_phone` int(11) NOT NULL,        \t   \t  \n        \t   \t  `design_data` longtext NOT NULL,        \t   \t  \n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `time_on_site_pageviews_siteaccess_position` (`time_on_site`,`pageviews`,`siteaccess`,`identifier`,`position`),\n        \t      KEY `identifier` (`identifier`),\n        \t      KEY `dynamic_invitation` (`dynamic_invitation`),\n        \t      KEY `tag` (`tag`),\n        \t      KEY `dep_id` (`dep_id`),\n        \t      KEY `show_on_mobile` (`show_on_mobile`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_accept` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `chat_id` bigint(20) NOT NULL,\n        \t   `hash` varchar(50) NOT NULL,\n        \t   `ctime` int(11) NOT NULL,\n        \t   `wused` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `hash` (`hash`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            //Default departament\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_departament` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `name` varchar(100) NOT NULL,\n\t\t\t\t  `email` varchar(100) NOT NULL,\n\t\t\t\t  `xmpp_recipients` text NOT NULL,\n\t\t\t\t  `xmpp_group_recipients` text NOT NULL,\n\t\t\t\t  `priority` int(11) NOT NULL,\n\t\t\t\t  `sort_priority` int(11) NOT NULL,\n\t\t\t\t  `department_transfer_id` int(11) NOT NULL,\n\t\t\t\t  `transfer_timeout` int(11) NOT NULL,\n\t\t\t\t  `exclude_inactive_chats` int(11) NOT NULL,\n\t\t\t\t  `delay_before_assign` int(11) NOT NULL,\n\t\t\t\t  `max_ac_dep_chats` int(11) NOT NULL,\n\t\t\t\t  `archive` tinyint(1) NOT NULL DEFAULT '0',\n\t\t\t\t  `max_load` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `max_load_h` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `assign_same_language` int(11) NOT NULL,\n\t\t\t\t  `disabled` int(11) NOT NULL,\n\t\t\t\t  `hidden` int(11) NOT NULL,\n\t\t\t\t  `delay_lm` int(11) NOT NULL,\n\t\t\t\t  `max_active_chats` int(11) NOT NULL,\n\t\t\t\t  `max_timeout_seconds` int(11) NOT NULL,\n\t\t\t\t  `identifier` varchar(2083) NOT NULL,\n\t\t\t\t  `mod_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `mod_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `tud_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `tud_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `wed_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `wed_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `thd_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `thd_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `frd_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `frd_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sad_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sad_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sud_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sud_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `nc_cb_execute` tinyint(1) NOT NULL,\n\t\t\t\t  `na_cb_execute` tinyint(1) NOT NULL,\n\t\t\t\t  `inform_unread` tinyint(1) NOT NULL,\n\t\t\t\t  `active_balancing` tinyint(1) NOT NULL,\n\t\t\t\t  `visible_if_online` tinyint(1) NOT NULL,\n\t\t\t\t  `inform_close` int(11) NOT NULL,\n\t\t\t\t  `inform_unread_delay` int(11) NOT NULL,\n\t\t\t\t  `inform_options` varchar(250) NOT NULL,\n\t\t\t\t  `online_hours_active` tinyint(1) NOT NULL,\n\t\t\t\t  `inform_delay` int(11) NOT NULL,\n\t\t\t\t  `attr_int_1` int(11) NOT NULL,\n\t\t\t\t  `attr_int_2` int(11) NOT NULL,\n\t\t\t\t  `attr_int_3` int(11) NOT NULL,\n\t\t\t\t  `pending_max` int(11) NOT NULL,\n\t\t\t\t  `pending_group_max` int(11) NOT NULL,\n\t\t\t\t  `active_chats_counter` int(11) NOT NULL,\n\t\t\t\t  `inactive_chats_cnt` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `pending_chats_counter` int(11) NOT NULL,\n\t\t\t\t  `bot_chats_counter` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `inop_chats_cnt` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `acop_chats_cnt` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `inform_close_all` int(11) NOT NULL,\n\t\t\t\t  `inform_close_all_email` varchar(250) NOT NULL,\n\t\t\t\t  `alias` varchar(50) NOT NULL,\n\t\t\t\t  `product_configuration` longtext NOT NULL,\n\t\t\t\t  `bot_configuration` text NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `identifier_2` (`identifier`(191)),\n\t\t\t\t  KEY `archive` (`archive`),\n\t\t\t\t  KEY `attr_int_1` (`attr_int_1`),\n\t\t\t\t  KEY `attr_int_2` (`attr_int_2`),\n\t\t\t\t  KEY `attr_int_3` (`attr_int_3`),\n\t\t\t\t  KEY `active_chats_counter` (`active_chats_counter`),\n\t\t\t\t  KEY `pending_chats_counter` (`pending_chats_counter`),\n\t\t\t\t  KEY `bot_chats_counter` (`bot_chats_counter`),\n\t\t\t\t  KEY `disabled_hidden` (`disabled`, `hidden`),\n\t\t\t\t  KEY `sort_priority_name` (`sort_priority`, `name`),\n\t\t\t\t  KEY `alias` (`alias`),\n\t\t\t\t  KEY `active_mod` (`online_hours_active`,`mod_start_hour`,`mod_end_hour`),\n\t\t\t\t  KEY `active_tud` (`online_hours_active`,`tud_start_hour`,`tud_end_hour`),\n\t\t\t\t  KEY `active_wed` (`online_hours_active`,`wed_start_hour`,`wed_end_hour`),\n\t\t\t\t  KEY `active_thd` (`online_hours_active`,`thd_start_hour`,`thd_end_hour`),\n\t\t\t\t  KEY `active_frd` (`online_hours_active`,`frd_start_hour`,`frd_end_hour`),\n\t\t\t\t  KEY `active_sad` (`online_hours_active`,`sad_start_hour`,`sad_end_hour`),\n\t\t\t\t  KEY `active_sud` (`online_hours_active`,`sud_start_hour`,`sud_end_hour`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_saved_search` (\n                    `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `params` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `user_id` bigint(20) unsigned NOT NULL,\n                  `position` int(11) unsigned NOT NULL,\n                  `scope` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `days` int(11) unsigned NOT NULL,\n                  `updated_at` bigint(20) unsigned NOT NULL,\n                  `requested_at` bigint(20) unsigned NOT NULL,\n                  `total_records` bigint(20) unsigned NOT NULL,\n                  `passive` tinyint(1) unsigned NOT NULL DEFAULT 0,\n                  PRIMARY KEY (`id`),\n                  KEY `user_id` (`user_id`),\n                  KEY `scope` (`scope`),\n                  KEY `updated_at` (`updated_at`),\n                  KEY `requested_at` (`requested_at`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_departament_group_user` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `dep_group_id` int(11) NOT NULL,\n                  `user_id` int(11) NOT NULL,\n                  `read_only` tinyint(1) unsigned NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`id`),\n                  KEY `dep_group_id` (`dep_group_id`),\n                  KEY `user_id` (`user_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_departament_availability` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `dep_id` int(11) NOT NULL, `hour` int(11) NOT NULL, `hourminute` int(4) NOT NULL, `minute` int(11) NOT NULL, `time` int(11) NOT NULL, `ymdhi` bigint(20) NOT NULL, `ymd` int(11) NOT NULL, `status` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `ymdhi` (`ymdhi`), KEY `dep_id` (`dep_id`),  KEY `hourminute` (`hourminute`), KEY `time` (`time`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_product_departament` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `product_id` int(11) NOT NULL,\n        \t       `departament_id` int(11) NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `departament_id` (`departament_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_departament_group_member` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `dep_id` int(11) NOT NULL,\n                  `dep_group_id` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `dep_group_id` (`dep_group_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_generic_bot_rest_api` (`id` bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY, `name` varchar(50) NOT NULL, `description` varchar(250), `configuration` text NOT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_departament_group` (\n                      `id` int(11) NOT NULL AUTO_INCREMENT,\n                      `name` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `achats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `inachats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `pchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `max_load` int(11) NOT NULL DEFAULT 0,\n                      `max_load_h` int(11) NOT NULL DEFAULT 0,\n                      `bchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `inopchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `acopchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      PRIMARY KEY (`id`)\n                    ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_canned_msg_tag_link` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `tag_id` int(11) NOT NULL,  `canned_id` int(11) NOT NULL,  PRIMARY KEY (`id`), KEY `canned_id` (`canned_id`), KEY `tag_id` (`tag_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_canned_msg_tag` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `tag` varchar(40) NOT NULL, PRIMARY KEY (`id`), KEY `tag` (`tag`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_abstract_subject` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `internal` tinyint(1) NOT NULL DEFAULT 0,\n  `internal_type` varchar(20) NOT NULL DEFAULT '',\n  PRIMARY KEY (`id`),\n  KEY `internal` (`internal`),\n  KEY `internal_type` (`internal_type`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_abstract_subject_dep` ( `id` int(11) NOT NULL AUTO_INCREMENT, `dep_id` int(11) NOT NULL, `subject_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `subject_id` (`subject_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_abstract_subject_chat` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `subject_id` int(11) NOT NULL, `chat_id` bigint(20) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_group_object` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `object_id` bigint(20) NOT NULL, `group_id` bigint(20) NOT NULL, `type` bigint(20) NOT NULL, PRIMARY KEY (`id`), KEY `object_id_type` (`object_id`,`type`), KEY `group_id` (`group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Bot tables\n            $db->query(\"CREATE TABLE `lh_generic_bot_bot` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `configuration` longtext NOT NULL, `avatar` varchar(150) NOT NULL, `filename` varchar(250) NOT NULL, `filepath` varchar(250) NOT NULL, `name` varchar(100) NOT NULL, `nick` varchar(100) NOT NULL,`attr_str_1` varchar(100) NOT NULL, `attr_str_2` varchar(100) NOT NULL, `attr_str_3` varchar(100) NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_group` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL,`is_collapsed` int(11) NOT NULL DEFAULT '0', `pos` int(11) NOT NULL DEFAULT '0', `bot_id` bigint(20) NOT NULL, PRIMARY KEY (`id`), KEY `bot_id` (`bot_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_trigger` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL, `actions` longtext NOT NULL, `group_id` bigint(20) NOT NULL, `bot_id` int(11) NOT NULL, `default` int(11) NOT NULL, `default_unknown` int(11) NOT NULL, `as_argument` int(11) NOT NULL DEFAULT '0', `in_progress` int(11) NOT NULL DEFAULT '0', `default_unknown_btn` int(11) NOT NULL DEFAULT '0', `default_always` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `bot_id` (`bot_id`),  KEY `default_unknown` (`default_unknown`), KEY `in_progress` (`in_progress`), KEY `default_unknown_btn` (`default_unknown_btn`), KEY `default_always` (`default_always`), KEY `group_id` (`group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_trigger_event` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `pattern` text NOT NULL, `pattern_exc` text NOT NULL, `configuration` longtext NOT NULL, `trigger_id` bigint(20) NOT NULL, `bot_id` int(11) NOT NULL, `on_start_type` tinyint(1) NOT NULL, `priority` int(11) NOT NULL, `type` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `pattern_v2` (`pattern`(191)), KEY `type` (`type`), KEY `on_start_type` (`on_start_type`), KEY `trigger_id` (`trigger_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_payload` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL, `payload` varchar(100) NOT NULL, `bot_id` int(11) NOT NULL, `trigger_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `bot_id` (`bot_id`), KEY `trigger_id` (`trigger_id`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_chat_workflow` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL,`trigger_id` bigint(20) NOT NULL, `time` int(11) NOT NULL, `identifier` varchar(100) NOT NULL, `status` int(11) NOT NULL, `collected_data` text, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_chat_event` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `counter` int(11) NOT NULL, `content` longtext NOT NULL, `ctime` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_pending_event` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `trigger_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_exception` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL, `priority` int(11) NOT NULL, `active` tinyint(1) NOT NULL, PRIMARY KEY (`id`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_exception_message` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `code` varchar(20) NOT NULL, `exception_group_id` int(11) NOT NULL, `priority` int(11) NOT NULL, `active` tinyint(1) NOT NULL, `message` text NOT NULL, PRIMARY KEY (`id`), KEY `code` (`code`), KEY `exception_group_id` (`exception_group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_tr_group` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL,`filename` varchar(250) NOT NULL,`filepath` varchar(250) NOT NULL,`configuration` longtext NOT NULL,`nick` varchar(100) NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_tr_item` ( `id` int(11) NOT NULL AUTO_INCREMENT, `group_id` int(11) NOT NULL, `identifier` varchar(50) NOT NULL, `translation` text NOT NULL, PRIMARY KEY (`id`),  KEY `identifier` (`identifier`), KEY `group_id` (`group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_speech_user_language` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `user_id` bigint(20) NOT NULL, `language` varchar(20) NOT NULL, PRIMARY KEY (`id`), KEY `user_id_language` (`user_id`,`language`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_audits` (`id` bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY, `category` varchar(255) NOT NULL, `file` varchar(255), `object_id` bigint(20) DEFAULT '0', `line` bigint(20), `message` longtext NOT NULL, `severity` varchar(255) NOT NULL, `source` varchar(255) NOT NULL, `time` timestamp NOT NULL, KEY `object_id` (`object_id`), KEY `source` (`source`(191)), KEY `category` (`category`(191))) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_chat_online_user_footprint_update` (`online_user_id` bigint(20) NOT NULL,  `command` varchar(20) NOT NULL,  `args` varchar(250) NOT NULL,  `ctime` int(11) NOT NULL, KEY `online_user_id` (`online_user_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_generic_bot_repeat_restrict` (`id` bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY, `chat_id` bigint(20) NOT NULL, `trigger_id` bigint(20), `identifier` varchar(20), `counter` int(11) DEFAULT '0', KEY `chat_id_trigger_id` (`chat_id`,`trigger_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_users_login` (`id` bigint(20) NOT NULL AUTO_INCREMENT,`user_id` bigint(20) NOT NULL,`type` int(11) NOT NULL,`ctime` bigint(20) NOT NULL,`status` int(11) NOT NULL,`ip` varchar(100) NOT NULL,`msg` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,PRIMARY KEY (`id`),KEY `user_id_type` (`user_id`,`type`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            \n            $Departament = new erLhcoreClassModelDepartament();\n            $Departament->name = $form->DefaultDepartament;\n            erLhcoreClassDepartament::getSession()->save($Departament);\n            \n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_voice_video` (\n                   `id` bigint(20) NOT NULL AUTO_INCREMENT,\n                   `chat_id` bigint(20) NOT NULL,\n                   `user_id` bigint(20) NOT NULL,\n                   `op_status` tinyint(4) NOT NULL,\n                   `vi_status` tinyint(4) NOT NULL,\n                   `voice` tinyint(4) NOT NULL,\n                   `video` tinyint(4) NOT NULL,\n                   `screen_share` tinyint(4) NOT NULL,\n                   `status` tinyint(4) NOT NULL,\n                   `ctime` int(11) NOT NULL,\n                   `token` varchar(200) NOT NULL,\n                   PRIMARY KEY (`id`),\n                   KEY `chat_id` (`chat_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_canned_msg_replace` (\n                    `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n                    `identifier` varchar(50) NOT NULL,\n                    `default` text NOT NULL, `conditions` longtext NOT NULL,\n                    PRIMARY KEY (`id`),\n                   KEY `identifier` (`identifier`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            //Department custom work hours\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_departament_custom_work_hours` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `date_from` int(11) NOT NULL,\n\t\t\t\t  `date_to` int(11) NOT NULL,\n\t\t\t\t  `start_hour` int(11) NOT NULL,\n\t\t\t\t  `end_hour` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `date_from` (`date_from`),\n\t\t\t\t  KEY `search_active` (`date_from`, `date_to`, `dep_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            //Administrators group\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_group` (\n               `id` int(11) NOT NULL AUTO_INCREMENT,\n               `name` varchar(50) NOT NULL,\n               `disabled` tinyint(1) NOT NULL,\n               `required` tinyint(1) NOT NULL DEFAULT '0',\n               PRIMARY KEY (`id`),\n               KEY `disabled` (`disabled`)\n               ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_stats` (\n              `id` bigint(20) NOT NULL AUTO_INCREMENT,\n              `type` int(11) NOT NULL,\n              `lupdate` bigint(20) NOT NULL,\n              `object_id` bigint(20) NOT NULL,\n              `stats` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n              PRIMARY KEY (`id`),\n              KEY `type_object_id` (`type`,`object_id`)\n            ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            //Administrators group\n            $db->query(\"CREATE TABLE `lh_generic_bot_command` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `command` varchar(50) NOT NULL,\n  `bot_id` int(11) NOT NULL,\n  `trigger_id` int(11) NOT NULL,\n  `dep_id` int(11) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `dep_id` (`dep_id`),\n  KEY `command` (`command`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Admin group\n            $GroupData = new erLhcoreClassModelGroup();\n            $GroupData->name    = \"Administrators\";\n            erLhcoreClassUser::getSession()->save($GroupData);\n\n            // Precreate operators group\n            $GroupDataOperators = new erLhcoreClassModelGroup();\n            $GroupDataOperators->name    = \"Operators\";\n            erLhcoreClassUser::getSession()->save($GroupDataOperators);\n\n            //Administrators role\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_role` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `name` varchar(50) NOT NULL,\n                  PRIMARY KEY (`id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Administrators role\n            $Role = new erLhcoreClassModelRole();\n            $Role->name = 'Administrators';\n            erLhcoreClassRole::getSession()->save($Role);\n\n            // Operators role\n            $RoleOperators = new erLhcoreClassModelRole();\n            $RoleOperators->name = 'Operators';\n            erLhcoreClassRole::getSession()->save($RoleOperators);\n\n            //Assing group role\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_grouprole` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `group_id` int(11) NOT NULL,\n                  `role_id` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `group_id` (`role_id`,`group_id`),\n                  KEY `group_id_primary` (`group_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Assign admin role to admin group\n            $GroupRole = new erLhcoreClassModelGroupRole();\n            $GroupRole->group_id =$GroupData->id;\n            $GroupRole->role_id = $Role->id;\n            erLhcoreClassRole::getSession()->save($GroupRole);\n\n            // Assign operators role to operators group\n            $GroupRoleOperators = new erLhcoreClassModelGroupRole();\n            $GroupRoleOperators->group_id =$GroupDataOperators->id;\n            $GroupRoleOperators->role_id = $RoleOperators->id;\n            erLhcoreClassRole::getSession()->save($GroupRoleOperators);\n\n            // Users\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `username` varchar(80) NOT NULL,\n                  `password` varchar(200) NOT NULL,\n                  `email` varchar(100) NOT NULL,\n                  `time_zone` varchar(100) NOT NULL,\n                  `name` varchar(100) NOT NULL,\n                  `surname` varchar(100) NOT NULL,\n                  `avatar` varchar(150) NOT NULL,\n                  `filepath` varchar(200) NOT NULL,\n                  `filename` varchar(200) NOT NULL,\n                  `job_title` varchar(100) NOT NULL,\n                  `departments_ids` text NOT NULL,\n                  `chat_nickname` varchar(100) NOT NULL,\n                  `xmpp_username` varchar(200) NOT NULL,\n                  `session_id` varchar(40) NOT NULL,\n                  `operation_admin` text NOT NULL,\n                  `skype` varchar(50) NOT NULL,\n                  `exclude_autoasign` tinyint(1) NOT NULL,\n                  `disabled` tinyint(4) NOT NULL,\n                  `hide_online` tinyint(1) NOT NULL,\n                  `all_departments` tinyint(1) NOT NULL,\n                  `invisible_mode` tinyint(1) NOT NULL,\n                  `inactive_mode` tinyint(1) NOT NULL,\n                  `rec_per_req` tinyint(1) NOT NULL,\n                  `auto_accept` tinyint(1) NOT NULL,\n                  `max_active_chats` int(11) NOT NULL,\n                  `cache_version` int(11) unsigned NOT NULL DEFAULT '0',\n                  `pswd_updated` int(11) NOT NULL,\n                  `attr_int_1` int(11) NOT NULL,\n                  `attr_int_2` int(11) NOT NULL,\n                  `attr_int_3` int(11) NOT NULL,\n                   `force_logout` tinyint(1) unsigned NOT NULL DEFAULT '0',\n                  `llogin` bigint(20) unsigned NOT NULL DEFAULT '0',\n                  `always_on` tinyint(1) NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`id`),\n                  KEY `hide_online` (`hide_online`),\n                  KEY `rec_per_req` (`rec_per_req`),\n                  KEY `email` (`email`),\n                  KEY `disabled` (`disabled`),\n                  KEY `xmpp_username` (`xmpp_username`(191))\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $UserData = new erLhcoreClassModelUser();\n\n            $UserData->setPassword($form->AdminPassword);\n            $UserData->email   = $form->AdminEmail;\n            $UserData->name    = $form->AdminName;\n            $UserData->surname = $form->AdminSurname;\n            $UserData->username = $form->AdminUsername;\n            $UserData->all_departments = 1;\n            $UserData->departments_ids = 0;\n            $UserData->pswd_updated = time();\n\n            erLhcoreClassUser::getSession()->save($UserData);\n\n            // User departaments\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_userdep` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `user_id` int(11) NOT NULL,\n                  `dep_id` int(11) NOT NULL,\n                  `last_activity` int(11) NOT NULL,\n                  `lastd_activity` int(11) NOT NULL DEFAULT '0',\n                  `exclude_autoasign` tinyint(1) NOT NULL DEFAULT '0',\n                  `hide_online` int(11) NOT NULL,\n                  `last_accepted` int(11) NOT NULL DEFAULT '0',\n                  `active_chats` int(11) NOT NULL DEFAULT '0',\n                  `pending_chats` int(11) NOT NULL DEFAULT '0',\n                  `inactive_chats` int(11) NOT NULL DEFAULT '0',\n                  `max_chats` int(11) NOT NULL DEFAULT '0',\n                  `type` int(11) NOT NULL DEFAULT '0',\n                  `ro` tinyint(1) NOT NULL DEFAULT '0',\n                  `hide_online_ts` int(11) NOT NULL DEFAULT '0',\n                  `dep_group_id` int(11) NOT NULL DEFAULT '0',\n                  `always_on` tinyint(1) NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`id`),\n                  KEY `last_activity_hide_online_dep_id` (`last_activity`,`hide_online`,`dep_id`),\n                  KEY `dep_id` (`dep_id`),\n                  KEY `user_id_type` (`user_id`,`type`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n            // Insert record to departament instantly\n            $db->query(\"INSERT INTO `lh_userdep` (`user_id`,`dep_id`,`last_activity`,`hide_online`,`last_accepted`,`active_chats`,`type`,`dep_group_id`,`exclude_autoasign`) VALUES ({$UserData->id},0,0,0,0,0,0,0,0)\");\n\n            $db->query(\"CREATE TABLE `lh_group_work` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `group_id` int(11) NOT NULL, `group_work_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `group_id` (`group_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Transfer chat\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_transfer` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `chat_id` int(11) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `transfer_user_id` int(11) NOT NULL,\n\t\t\t\t  `from_dep_id` int(11) NOT NULL,\n\t\t\t\t  `ctime` int(11) NOT NULL,\n\t\t\t\t  `transfer_to_user_id` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `transfer_user_id_dep_id` (`transfer_user_id`,`dep_id`),\n\t\t\t\t  KEY `transfer_to_user_id` (`transfer_to_user_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Remember user table\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users_remember` (\n\t\t\t\t `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t `user_id` int(11) NOT NULL,\n\t\t\t\t `mtime` int(11) NOT NULL,\n\t\t\t\t PRIMARY KEY (`id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // API table\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_rest_api_key` (\n                    `id` int(11) NOT NULL AUTO_INCREMENT,\n                    `api_key` varchar(50) NOT NULL,\n                    `user_id` int(11) NOT NULL DEFAULT '0',\n                    `active` int(11) NOT NULL DEFAULT '0',\n                    `ip_restrictions` varchar(250) NOT NULL,\n                    PRIMARY KEY (`id`),\n                    KEY `api_key` (`api_key`),\n                    KEY `user_id` (`user_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_abstract_rest_api_key_remote` ( `id` int(11) NOT NULL AUTO_INCREMENT, `api_key` varchar(50) NOT NULL, `username` varchar(50) NOT NULL, `name` varchar(50) NOT NULL, `host` varchar(250) NOT NULL, `active` tinyint(1) NOT NULL DEFAULT '0', `position` int(11) NOT NULL DEFAULT '0', PRIMARY KEY (`id`), KEY `active` (`active`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n            $db->query(\"CREATE TABLE `lh_abstract_chat_variable` ( `id` int(11) NOT NULL AUTO_INCREMENT, `var_name` varchar(255) NOT NULL, `var_identifier` varchar(255) NOT NULL, `inv` tinyint(1) NOT NULL, `change_message` varchar(250) NOT NULL, `type` tinyint(1) NOT NULL, `persistent` tinyint(1) NOT NULL, `js_variable` varchar(255) NOT NULL, `dep_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `dep_id` (`dep_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_webhook` ( `id` int(11) NOT NULL AUTO_INCREMENT, `event` varchar(50) NOT NULL, `bot_id_alt` int(11) NOT NULL DEFAULT '0', `trigger_id_alt` int(11) NOT NULL DEFAULT '0',`bot_id` int(11) NOT NULL, `trigger_id` int(11) NOT NULL, `disabled` tinyint(1) NOT NULL, `configuration` longtext NOT NULL, `type` tinyint(1) NOT NULL DEFAULT 0, PRIMARY KEY (`id`), KEY `event_disabled` (`event`,`disabled`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_incoming_webhook` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL,`identifier` varchar(50) NOT NULL, `scope` varchar(50) NOT NULL, `dep_id` int(11) NOT NULL, `disabled` tinyint(1) NOT NULL, `configuration` longtext NOT NULL, PRIMARY KEY (`id`), KEY `identifier` (`identifier`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_chat_incoming` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `utime` bigint(20) NOT NULL, `incoming_id` int(11) NOT NULL, `payload` longtext NOT NULL, `chat_external_id` varchar(50) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`),  KEY `incoming_ext_id` (`incoming_id`,`chat_external_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_abstract_chat_column` (`id` int(11) NOT NULL AUTO_INCREMENT,`column_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,`variable` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL, `position` int(11) NOT NULL, `enabled` tinyint(1) NOT NULL, `online_enabled` tinyint(1) NOT NULL, `chat_enabled` tinyint(1) NOT NULL, `conditions` text COLLATE utf8mb4_unicode_ci NOT NULL,`column_icon` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL, `column_identifier` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL, PRIMARY KEY (`id`), KEY `enabled` (`enabled`), KEY `online_enabled` (`online_enabled`), KEY `chat_enabled` (`chat_enabled`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n            $db->query(\"CREATE TABLE `lh_abstract_chat_priority` (`id` int(11) NOT NULL AUTO_INCREMENT,`value` text COLLATE utf8mb4_unicode_ci NOT NULL,`dep_id` int(11) NOT NULL, `dest_dep_id` int(11) NOT NULL DEFAULT 0, `sort_priority` int(11) NOT NULL DEFAULT 0,`priority` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `dep_id` (`dep_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_canned_msg_dep` (\n                                 `id` bigint(20) NOT NULL AUTO_INCREMENT,\n                                 `canned_id` int(11) NOT NULL,\n                                 `dep_id` int(11) NOT NULL,\n                                 PRIMARY KEY (`id`),\n                                 KEY `canned_id` (`canned_id`),\n                                 KEY `dep_id` (`dep_id`)\n                            ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            $db->query(\"CREATE TABLE `lh_canned_msg_subject` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `canned_id` int(11) NOT NULL,\n    `subject_id` int(11) NOT NULL,\n    PRIMARY KEY (`id`),\n    KEY `canned_id` (`canned_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Session\n            $db->query(\"CREATE TABLE `lh_users_session` (\n                      `id` int(11) NOT NULL AUTO_INCREMENT,\n                      `token` varchar(40) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `device_type` int(11) NOT NULL,\n                      `device_token` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `user_id` int(11) NOT NULL,\n                      `created_on` int(11) NOT NULL,\n                      `updated_on` int(11) NOT NULL,\n                      `expires_on` int(11) NOT NULL,\n                      `notifications_status` int(11) NOT NULL DEFAULT 1,\n                      `error` int(11) NOT NULL DEFAULT 0,\n                      `last_error` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      PRIMARY KEY (`id`),\n                      KEY `token` (`token`),\n                      KEY `device_token_device_type_v2` (`device_token`(191),`device_type`),\n                      KEY `error` (`error`)\n                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Chat messages\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_msg` (\n\t\t\t\t  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `msg` longtext NOT NULL,\n\t\t\t\t  `meta_msg` longtext NOT NULL,\n\t\t\t\t  `time` int(11) NOT NULL,\n\t\t\t\t  `chat_id` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `user_id` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `name_support` varchar(100) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `chat_id_id` (`chat_id`, `id`),\n\t\t\t\t  KEY `user_id` (`user_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Forgot password table\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_forgotpasswordhash` (\n                `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,\n                `user_id` INT NOT NULL ,\n                `hash` VARCHAR( 40 ) NOT NULL ,\n                `created` INT NOT NULL\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // User groups table\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_groupuser` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `group_id` int(11) NOT NULL,\n                  `user_id` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `group_id` (`group_id`),\n                  KEY `user_id` (`user_id`),\n                  KEY `group_id_2` (`group_id`,`user_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Assign admin user to admin group\n            $GroupUser = new erLhcoreClassModelGroupUser();\n            $GroupUser->group_id = $GroupData->id;\n            $GroupUser->user_id = $UserData->id;\n            erLhcoreClassUser::getSession()->save($GroupUser);\n\n            //Assign default role functions\n            $db->query(\"CREATE TABLE IF NOT EXISTS `lh_rolefunction` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `role_id` int(11) NOT NULL,\n                  `module` varchar(100) NOT NULL,\n                  `function` varchar(100) NOT NULL,\n                  `limitation` text NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `role_id` (`role_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n            // Admin role and function\n            $RoleFunction = new erLhcoreClassModelRoleFunction();\n            $RoleFunction->role_id = $Role->id;\n            $RoleFunction->module = '*';\n            $RoleFunction->function = '*';\n            erLhcoreClassRole::getSession()->save($RoleFunction);\n\n            // Operators rules and functions\n            $permissionsArray = array(\n                array('module' => 'lhuser',  'function' => 'selfedit'),\n                array('module' => 'lhuser',  'function' => 'changeonlinestatus'),\n                array('module' => 'lhuser',  'function' => 'changeskypenick'),\n                array('module' => 'lhuser',  'function' => 'personalcannedmsg'),\n                array('module' => 'lhuser',  'function' => 'change_visibility_list'),\n                array('module' => 'lhuser',  'function' => 'see_assigned_departments'),\n                array('module' => 'lhuser',  'function' => 'canseedepartmentstats'),\n                array('module' => 'lhchat',  'function' => 'use'),\n                array('module' => 'lhchat',  'function' => 'open_all'),\n                array('module' => 'lhchat',  'function' => 'chattabschrome'),\n                array('module' => 'lhchat',  'function' => 'singlechatwindow'),\n                array('module' => 'lhchat',  'function' => 'allowopenremotechat'),\n                array('module' => 'lhchat',  'function' => 'writeremotechat'),\n                array('module' => 'lhchat',  'function' => 'allowchattabs'),\n                array('module' => 'lhchat',  'function' => 'use_onlineusers'),\n                array('module' => 'lhchat',  'function' => 'take_screenshot'),\n                array('module' => 'lhfront', 'function' => 'use'),\n                array('module' => 'lhchat', 'function' => 'prev_chats'),\n                array('module' => 'lhsystem','function' => 'use'),\n                array('module' => 'lhcannedmsg', 'function' => 'see_global'),\n                array('module' => 'lhtranslation','function' => 'use'),\n                array('module' => 'lhchat',  'function' => 'allowblockusers'),\n                array('module' => 'lhsystem','function' => 'generatejs'),\n                array('module' => 'lhsystem','function' => 'changelanguage'),\n                array('module' => 'lhchat',  'function' => 'allowredirect'),\n                array('module' => 'lhchat',  'function' => 'allowtransfer'),\n                array('module' => 'lhchat',  'function' => 'allowtransferdirectly'),\n                array('module' => 'lhchat',  'function' => 'administratecannedmsg'),\n                array('module' => 'lhchat',  'function' => 'sees_all_online_visitors'),\n                array('module' => 'lhpermission',   'function' => 'see_permissions'),\n                array('module' => 'lhquestionary',  'function' => 'manage_questionary'),\n                array('module' => 'lhfaq',   \t\t'function' => 'manage_faq'),\n                array('module' => 'lhchatbox',   \t'function' => 'manage_chatbox'),\n                array('module' => 'lhbrowseoffer',  'function' => 'manage_bo'),\n                array('module' => 'lhxml',   \t\t'function' => '*'),\n                array('module' => 'lhcobrowse',   \t'function' => 'browse'),\n                array('module' => 'lhfile',   \t\t'function' => 'use_operator'),\n                array('module' => 'lhfile',   \t\t'function' => 'file_delete_chat'),\n                array('module' => 'lhstatistic',   \t'function' => 'use'),\n                array('module' => 'lhspeech', 'function' => 'changedefaultlanguage'),\n                array('module' => 'lhspeech', 'function' => 'use'),\n                array('module' => 'lhcannedmsg', 'function' => 'use'),\n                array('module' => 'lhtheme', 'function' => 'personaltheme'),\n                array('module' => 'lhuser', 'function' => 'userlistonline'),\n                array('module' => 'lhspeech', 'function' => 'change_chat_recognition'),\n                array('module' => 'lhgroupchat', 'function' => 'use'),\n                array('module' => 'lhuser', 'function' => 'see_all_group_users'),\n                array('module' => 'lhvoicevideo', 'function' => 'use'),\n            );\n\n            foreach ($permissionsArray as $paramsPermission) {\n                $RoleFunctionOperator = new erLhcoreClassModelRoleFunction();\n                $RoleFunctionOperator->role_id = $RoleOperators->id;\n                $RoleFunctionOperator->module = $paramsPermission['module'];\n                $RoleFunctionOperator->function = $paramsPermission['function'];\n                erLhcoreClassRole::getSession()->save($RoleFunctionOperator);\n            }\n\n            $cfgSite = erConfigClassLhConfig::getInstance();\n            $cfgSite->setSetting( 'site', 'installed', true);\n            $cfgSite->setSetting( 'site', 'templatecache', true);\n            $cfgSite->setSetting( 'site', 'templatecompile', true);\n            $cfgSite->setSetting( 'site', 'modulecompile', true);\n            $cfgSite->setSetting( 'site', 'force_virtual_host', $form->ForceVirtualHost == 1);\n            $cfgSite->setSetting( 'webhooks', 'enabled', isset($form->WebhooksEnabled) &&$form->WebhooksEnabled == 1);\n            $cfgSite->setSetting( 'webhooks', 'worker', isset($form->WebhooksWorker) ? $form->WebhooksWorker : 'http');\n            \n            if ($form->Extensions != '') {\n                $extensions = explode(',',str_replace(' ','',$form->Extensions));\n                if (!empty($extensions) ) {\n                    $cfgSite->setSetting( 'site', 'extensions', $extensions);\n                }\n            }\n\n            if ($form->ApacheUserGroupName != '') {\n                $cfgSite->setSetting( 'site', 'default_group', $form->ApacheUserGroupName);\n            }\n\n            if ($form->ApacheUserName != '') {\n                $cfgSite->setSetting( 'site', 'default_user', $form->ApacheUserName);\n            }\n\n            if ($form->TimeZone != '') {\n                $cfgSite->setSetting( 'site', 'time_zone', $form->TimeZone);\n            }\n\n            if (isset($form->DefaultConfigs) && is_array($form->DefaultConfigs)) {\n                foreach ($form->DefaultConfigs as $identifier => $value) {\n                    $sql = \"UPDATE `lh_chat_config` SET `value` = :value WHERE `identifier` = :identifier\";\n                    $stmt = $db->prepare($sql);\n                    $stmt->bindValue(':value',$value);\n                    $stmt->bindValue(':identifier',$identifier);\n                    $stmt->execute();\n                }\n            }\n\n            $smtpData = erLhcoreClassModelChatConfig::fetch('smtp_data');\n\n            $data = (array)$smtpData->data;\n            $data['default_from'] = 'info@'.$form->Domain;\n            $data['default_from_name'] = trim($form->AdminName . ' ' . $form->AdminSurname);\n            $data['sender'] = 'info@'.$form->Domain;\n\n            $smtpData->value = serialize($data);\n            $smtpData->saveThis();\n\n            return true;\n        } else {\n            return $Errors;\n        }\n    }\n\n    function step4() {\n        $cfgSite = erConfigClassLhConfig::getInstance();\n        $cfgSite->save();\n        $msg = \"Installation is complete. You can start by adding users and departments\";\n        syslog(LOG_DEBUG, $msg);\n    }\n\n    function print_errors($errors) {\n        foreach($errors as $error) {\n            syslog(LOG_ERR, \"ERROR: \".$error);\n        }\n        exit(-1);\n    }\n\n    private function file_perms($file, $octal = true) {\n        if(!file_exists($file)) return false;\n\n        $perms = fileperms($file);\n\n        $cut = $octal ? 2 : 3;\n\n        return substr(decoct($perms), $cut);\n    }\n    private function file_is_writable($directories, $preffix = '', &$Errors) {\n        foreach ($directories as $directory) {\n            $error = false;\n            syslog(LOG_DEBUG, \"Evaluate $directory if writable\");\n            $owner = fileowner($preffix.$directory);\n            $group = filegroup($preffix.$directory);\n            $permission = $this->file_perms($preffix.$directory);\n            if ($permission[2] == 7) {\n                continue;\n            }\n            if ($owner == 33 and $permission[0] != 7) {\n                $error = true;\n            }\n            if ($group == 33 and $permission[1] != 7) {\n                $error = true;\n            }\n            if ($error) {\n                $Errors[] = $preffix.$directory.\" is not writable\";\n            }\n        }\n    }\n\n    private function _scandir($directory) {\n        $directories = scandir($directory);\n        $directories = array_diff($directories, ['.']);\n        $directories = array_diff($directories, ['..']);\n        return $directories;\n    }\n}\n", "<?php \r\n$trackDomain = erLhcoreClassModelChatConfig::fetch('track_domain')->current_value;\r\n$disableHTML5Storage = (int)erLhcoreClassModelChatConfig::fetch('disable_html5_storage')->current_value;\r\n?>\r\n\r\n/*! Cookies.js - 0.4.0; Copyright (c) 2014, Scott Hamper; http://www.opensource.org/licenses/MIT */\r\n(function(e){\"use strict\";var b=function(a,d,c){return 1===arguments.length?b.get(a):b.set(a,d,c)};b._document=document;b._navigator=navigator;b.defaults={path:\"/\"};b.get=function(a){b._cachedDocumentCookie!==b._document.cookie&&b._renewCache();return b._cache[a]};b.set=function(a,d,c){c=b._getExtendedOptions(c);c.expires=b._getExpiresDate(d===e?-1:c.expires);b._document.cookie=b._generateCookieString(a,d,c);return b};b.expire=function(a,d){return b.set(a,e,d)};b._getExtendedOptions=function(a){return{path:a&& a.path||b.defaults.path,domain:a&&a.domain||b.defaults.domain,expires:a&&a.expires||b.defaults.expires,secure:a&&a.secure!==e?a.secure:b.defaults.secure}};b._isValidDate=function(a){return\"[object Date]\"===Object.prototype.toString.call(a)&&!isNaN(a.getTime())};b._getExpiresDate=function(a,d){d=d||new Date;switch(typeof a){case \"number\":a=new Date(d.getTime()+1E3*a);break;case \"string\":a=new Date(a)}if(a&&!b._isValidDate(a))throw Error(\"`expires` parameter cannot be converted to a valid Date instance\"); return a};b._generateCookieString=function(a,b,c){a=a.replace(/[^#$&+\\^`|]/g,encodeURIComponent);a=a.replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\");b=(b+\"\").replace(/[^!#$&-+\\--:<-\\[\\]-~]/g,encodeURIComponent);c=c||{};a=a+\"=\"+b+(c.path?\";path=\"+c.path:\"\");a+=c.domain?\";domain=\"+c.domain:\"\";a+=c.expires?\";expires=\"+c.expires.toUTCString():\"\";return a+=c.secure?\";secure\":\"\"};b._getCookieObjectFromString=function(a){var d={};a=a?a.split(\"; \"):[];for(var c=0;c<a.length;c++){var f=b._getKeyValuePairFromCookieString(a[c]); d[f.key]===e&&(d[f.key]=f.value)}return d};b._getKeyValuePairFromCookieString=function(a){var b=a.indexOf(\"=\"),b=0>b?a.length:b;try {return{key:decodeURIComponent(a.substr(0,b)),value:decodeURIComponent(a.substr(b+1))}} catch(e) {return{key:a.substr(0,b),value:a.substr(b+1)}}};b._renewCache=function(){b._cache=b._getCookieObjectFromString(b._document.cookie);b._cachedDocumentCookie=b._document.cookie};b._areEnabled=function(){var a=\"1\"===b.set(\"cookies_lhc.js\",1).get(\"cookies_lhc.js\");b.expire(\"cookies_lhc.js\");return a};b.enabled=b._areEnabled();window.lhc_Cookies=b})();\r\n\r\nlhc_Cookies.defaults = {path:\"/\",secure: <?php erLhcoreClassModelChatConfig::fetch('use_secure_cookie')->current_value == 1 ? print 'true' : print 'false' ?>};\r\n\r\n<?php include(erLhcoreClassDesign::designtpl('lhbrowseoffer/getstatus/options_variable.tpl.php')); ?>\r\n\r\nvar lhc_BrowseOffer = {\r\n\tJSON : {\r\n            parse: window.JSON && (window.JSON.parse || window.JSON.decode) || String.prototype.evalJSON && function(str){return String(str).evalJSON();} || $.parseJSON || $.evalJSON,\r\n            stringify:  Object.toJSON || window.JSON && (window.JSON.stringify || window.JSON.encode) || $.toJSON\r\n    },\r\n    canOpenOffer : true,\r\n    offset_data : {},    \r\n\tcookieData : {},\r\n\tcookieDataPers : {'of':[]},\r\n\tdomain : false, \r\n\t\r\n\taddCss : function(css_content) {\r\n        var head = document.getElementsByTagName('head')[0];\r\n        var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n\r\n        if(style.styleSheet) {\r\n          style.styleSheet.cssText = css_content;\r\n        } else {\r\n          rules = document.createTextNode(css_content);\r\n          style.appendChild(rules);\r\n        };\r\n        head.appendChild(style);\r\n   },\r\n\r\n   appendHTML : function(htmlStr) {\r\n        var frag = document.createDocumentFragment(),\r\n            temp = document.createElement('div');\r\n        temp.innerHTML = htmlStr;\r\n        while (temp.firstChild) {\r\n            frag.appendChild(temp.firstChild);\r\n        };\r\n        return frag;\r\n    },\r\n\r\n\tremoveById : function(EId)\r\n    {\r\n        return(EObj=document.getElementById(EId))?EObj.parentNode.removeChild(EObj):false;\r\n    },\r\n\r\n    hide : function() {\r\n        var th = document.getElementsByTagName('head')[0];\r\n        var s = document.createElement('script');\r\n        s.setAttribute('type','text/javascript');\r\n        s.setAttribute('src','<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('browseoffer/widgetclosed')?>/<?php echo $invite->hash?>');\r\n        th.appendChild(s);\r\n        this.removeById('lhc_container_browseoffer');\r\n        this.removeById('lhc_browseoffer-bg');\r\n        this.cookieDataPers.of.push(<?php echo $invite->id?>);\r\n        this.storePersistenCookie();\r\n        this.addCookieAttributePersistent('was_opened',true);\r\n     \r\n        if (<?php echo $browseofferOptionsVariable;?>.closeCallback) {\r\n        \t<?php echo $browseofferOptionsVariable;?>.closeCallback(<?php echo $invite->callback_content?>);\r\n        }            \r\n    },\r\n    \t\t\r\n\tshowBrowseOffer : function() {\r\n\r\n   \t\t  this.removeById('lhc_container_browseoffer');\r\n\t\t\r\n   \t\t  <?php if ($invite->custom_iframe_url != '' || $invite->lhc_iframe_content == 1) : ?>\r\n   \t\t  this.iframe_html = '<iframe id=\"lhcbrowseoffer_iframe\" allowTransparency=\"true\" scrolling=\"no\" frameborder=\"0\" ' +\r\n                       ' src=\"<?php if ($invite->custom_iframe_url != '') : ?><?php echo $invite->custom_iframe_url ?><?php else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('browseoffer/widget')?>/<?php echo $invite->hash?><?php endif;?>\"' +\r\n                       ' style=\"width: 100%; height: <?php echo $size_height?>px;\"></iframe>';\r\n         <?php else : ?>\r\n         this.iframe_html = \"<div id=\\\"lhcbrowseoffer_content\\\">\"+<?php echo json_encode($invite->content)?>+\"</div>\";\r\n         <?php endif; ?>\r\n          \t  \r\n         this.iframe_html = '<div id=\"lhc_container_browseoffer\">' +\r\n                              '<div id=\"lhc_browseoffer_header\"><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" id=\"lhc_browseoffer_close\">&#xd7;</a></div>' +\r\n                              this.iframe_html + '</div>';\r\n\r\n         raw_css = \"#lhcbrowseoffer_content{padding:5px;}#lhcbrowseoffer_content iframe,#lhcbrowseoffer_content video{width:100%;}\\n#lhc_browseoffer-bg{position: fixed;height: 100%;width: 100%;background: #000;background: rgba(0, 0, 0, 0.45);z-index: 99;display: none;top: 0;left: 0;};#lhc_container_browseoffer * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial\\;line-height:100%\\;font-size:12px\\;box-sizing: content-box\\;-moz-box-sizing:content-box;padding:0;margin:0;}\\n#lhc_container_browseoffer img {border:0;}\\n#lhc_browseoffer_title{float:left;}\\n#lhc_browseoffer_header{position:relative;z-index:9990;height:24px;overflow:hidden;background-color:#FFF;text-align:right;clear:both;padding:2px;}\\n#lhc_browseoffer_close,#lhc-copyright-link{color: #ccc;text-decoration:none;font-family:arial;line-height:0.5;font-size:42px;font-weight: bold;padding:2px;float:right;width:24px;height:24px;}\\n#lhc-copyright-link{font-size:12px}\\n#lhc_browseoffer_close:hover{color:#575555}\\n#lhc_container_browseoffer {box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);max-width:95%;max-height:95%;width:<?php echo $size,$units?>;top:-100%;margin-top:-100%;left:50%;-webkit-transition: top 1s ease-in-out;-moz-transition: top 1s ease-in-out;  -o-transition: top 1s ease-in-out;  transition: top 1s ease-in-out;overflow: hidden;margin-left:-100%;background-color:#FFF\\;\\nz-index:9990;\\n position: fixed;border:1px solid #CCC;-moz-user-select:none; }\\n#lhc_container_browseoffer iframe{transition-property: height;transition-duration: 0.4s;-webkit-transition: height 0.4s ease-in-out;transition: height 0.4s;}\\n\";\r\n\r\n         if (!this.cssWasAdded) {\r\n          \t\tthis.cssWasAdded = true;\r\n          \t\tthis.addCss(raw_css);\r\n\t\t };\r\n\r\n         var fragment = this.appendHTML(this.iframe_html);\r\n         document.body.insertBefore(fragment, document.body.childNodes[0]);\r\n\r\n         var lhc_obj = this;\r\n         document.getElementById('lhc_browseoffer_close').onclick = function() { lhc_obj.hide(); return false; };\r\n         setTimeout(function(){\r\n         \tlhc_obj.reflow();         \t       \t\r\n         },500);\r\n         \r\n         var th = document.getElementsByTagName('head')[0];\r\n         var s = document.createElement('script');\r\n         s.setAttribute('type','text/javascript');\r\n         s.setAttribute('src','<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('browseoffer/addhit')?>/<?php echo $invite->hash?>');\r\n         th.appendChild(s);\r\n         \r\n         if (<?php echo $browseofferOptionsVariable;?>.openCallback) {\r\n        \t<?php echo $browseofferOptionsVariable;?>.openCallback(<?php echo $invite->callback_content?>);\r\n         }          \r\n    },\r\n\r\n   reflow : function(){\r\n   \t\t\t<?php if ($showoverlay === true) : ?>\r\n   \t\t\tthis.removeById('lhc_browseoffer-bg');\r\n         \tvar fragment = this.appendHTML('<div id=\"lhc_browseoffer-bg\" style=\"display: block;\"></div>');\r\n         \tdocument.body.insertBefore(fragment, document.body.childNodes[0]);\r\n         \t<?php endif; ?>\r\n         \tdocument.getElementById('lhc_container_browseoffer').style.marginTop = '-'+(document.getElementById('lhc_container_browseoffer').offsetHeight/2)+'px';\r\n         \tdocument.getElementById('lhc_container_browseoffer').style.marginLeft = '-<?php if ($units == '%') : ?><?php echo $size/2,$units?><?php else : ?>'+(document.getElementById('lhc_container_browseoffer').offsetWidth/2)+'px<?php endif;?>';\r\n         \tdocument.getElementById('lhc_container_browseoffer').style.top = '50%';  \r\n   },\r\n\r\n   handleMessage : function(e) {\r\n    \tvar action = e.data.split(':')[0];\r\n    \tif (action == 'lhc_sizing_browseoffer' || action == 'lhc_sizing_faq_embed') {\r\n    \t\tvar height = e.data.split(':')[1];\r\n    \t\tvar elementObject = document.getElementById('lhcbrowseoffer_iframe');\r\n    \t\tvar iframeContainer = document.getElementById('lhc_container_browseoffer');\r\n    \t\telementObject.height = height;\r\n    \t\telementObject.style.height = height+'px';\r\n    \t\tiframeContainer.className = iframeContainer.className;\r\n    \t\tiframeContainer.style.height = (parseInt(height)+26)+'px';    \t\t\r\n    \t\tlhc_BrowseOffer.reflow();    \t\t\r\n    \t};\r\n   },  \r\n     \r\n   getCookieDomain : function(domain) {    \r\n    \t if (this.domain !== false) {\r\n    \t \treturn this.domain;\r\n    \t } else {    \r\n\t    \tif (typeof <?php echo $browseofferOptionsVariable;?> != 'undefined' && typeof <?php echo $browseofferOptionsVariable;?>.domain != 'undefined') {\r\n\t    \t\tthis.domain = '.'+<?php echo $browseofferOptionsVariable;?>.domain;\r\n\t    \t} else {    \t\r\n\t    \t\tthis.domain = '.'+document.location.hostname.replace(/^(?:[a-z0-9\\-\\.]+\\.)??([a-z0-9\\-]+)?(\\.com|\\.net|\\.org|\\.biz|\\.ws|\\.in|\\.me|\\.co\\.uk|\\.co|\\.org\\.uk|\\.ltd\\.uk|\\.plc\\.uk|\\.me\\.uk|\\.edu|\\.mil|\\.br\\.com|\\.cn\\.com|\\.eu\\.com|\\.hu\\.com|\\.no\\.com|\\.qc\\.com|\\.sa\\.com|\\.se\\.com|\\.se\\.net|\\.us\\.com|\\.uy\\.com|\\.ac|\\.co\\.ac|\\.gv\\.ac|\\.or\\.ac|\\.ac\\.ac|\\.af|\\.am|\\.as|\\.at|\\.ac\\.at|\\.co\\.at|\\.gv\\.at|\\.or\\.at|\\.asn\\.au|\\.com\\.au|\\.edu\\.au|\\.org\\.au|\\.net\\.au|\\.id\\.au|\\.be|\\.ac\\.be|\\.adm\\.br|\\.adv\\.br|\\.am\\.br|\\.arq\\.br|\\.art\\.br|\\.bio\\.br|\\.cng\\.br|\\.cnt\\.br|\\.com\\.br|\\.ecn\\.br|\\.eng\\.br|\\.esp\\.br|\\.etc\\.br|\\.eti\\.br|\\.fm\\.br|\\.fot\\.br|\\.fst\\.br|\\.g12\\.br|\\.gov\\.br|\\.ind\\.br|\\.inf\\.br|\\.jor\\.br|\\.lel\\.br|\\.med\\.br|\\.mil\\.br|\\.net\\.br|\\.nom\\.br|\\.ntr\\.br|\\.odo\\.br|\\.org\\.br|\\.ppg\\.br|\\.pro\\.br|\\.psc\\.br|\\.psi\\.br|\\.rec\\.br|\\.slg\\.br|\\.tmp\\.br|\\.tur\\.br|\\.tv\\.br|\\.vet\\.br|\\.zlg\\.br|\\.br|\\.ab\\.ca|\\.bc\\.ca|\\.mb\\.ca|\\.nb\\.ca|\\.nf\\.ca|\\.ns\\.ca|\\.nt\\.ca|\\.on\\.ca|\\.pe\\.ca|\\.qc\\.ca|\\.sk\\.ca|\\.yk\\.ca|\\.ca|\\.cc|\\.ac\\.cn|\\.com\\.cn|\\.edu\\.cn|\\.gov\\.cn|\\.org\\.cn|\\.bj\\.cn|\\.sh\\.cn|\\.tj\\.cn|\\.cq\\.cn|\\.he\\.cn|\\.nm\\.cn|\\.ln\\.cn|\\.jl\\.cn|\\.hl\\.cn|\\.js\\.cn|\\.zj\\.cn|\\.ah\\.cn|\\.gd\\.cn|\\.gx\\.cn|\\.hi\\.cn|\\.sc\\.cn|\\.gz\\.cn|\\.yn\\.cn|\\.xz\\.cn|\\.sn\\.cn|\\.gs\\.cn|\\.qh\\.cn|\\.nx\\.cn|\\.xj\\.cn|\\.tw\\.cn|\\.hk\\.cn|\\.mo\\.cn|\\.cn|\\.cx|\\.cz|\\.de|\\.dk|\\.fo|\\.com\\.ec|\\.tm\\.fr|\\.com\\.fr|\\.asso\\.fr|\\.presse\\.fr|\\.fr|\\.gf|\\.gs|\\.co\\.il|\\.net\\.il|\\.ac\\.il|\\.k12\\.il|\\.gov\\.il|\\.muni\\.il|\\.ac\\.in|\\.co\\.in|\\.org\\.in|\\.ernet\\.in|\\.gov\\.in|\\.net\\.in|\\.res\\.in|\\.is|\\.it|\\.ac\\.jp|\\.co\\.jp|\\.go\\.jp|\\.or\\.jp|\\.ne\\.jp|\\.ac\\.kr|\\.co\\.kr|\\.go\\.kr|\\.ne\\.kr|\\.nm\\.kr|\\.or\\.kr|\\.li|\\.lt|\\.lu|\\.asso\\.mc|\\.tm\\.mc|\\.com\\.mm|\\.org\\.mm|\\.net\\.mm|\\.edu\\.mm|\\.gov\\.mm|\\.ms|\\.nl|\\.no|\\.nu|\\.pl|\\.ro|\\.org\\.ro|\\.store\\.ro|\\.tm\\.ro|\\.firm\\.ro|\\.www\\.ro|\\.arts\\.ro|\\.rec\\.ro|\\.info\\.ro|\\.nom\\.ro|\\.nt\\.ro|\\.se|\\.si|\\.com\\.sg|\\.org\\.sg|\\.net\\.sg|\\.gov\\.sg|\\.sk|\\.st|\\.tf|\\.ac\\.th|\\.co\\.th|\\.go\\.th|\\.mi\\.th|\\.net\\.th|\\.or\\.th|\\.tm|\\.to|\\.com\\.tr|\\.edu\\.tr|\\.gov\\.tr|\\.k12\\.tr|\\.net\\.tr|\\.org\\.tr|\\.com\\.tw|\\.org\\.tw|\\.net\\.tw|\\.ac\\.uk|\\.uk\\.com|\\.uk\\.net|\\.gb\\.com|\\.gb\\.net|\\.vg|\\.sh|\\.kz|\\.ch|\\.info|\\.ua|\\.gov|\\.name|\\.pro|\\.ie|\\.hk|\\.com\\.hk|\\.org\\.hk|\\.net\\.hk|\\.edu\\.hk|\\.us|\\.tk|\\.cd|\\.by|\\.ad|\\.lv|\\.eu\\.lv|\\.bz|\\.es|\\.jp|\\.cl|\\.ag|\\.mobi|\\.eu|\\.co\\.nz|\\.org\\.nz|\\.net\\.nz|\\.maori\\.nz|\\.iwi\\.nz|\\.io|\\.la|\\.md|\\.sc|\\.sg|\\.vc|\\.tw|\\.travel|\\.my|\\.se|\\.tv|\\.pt|\\.com\\.pt|\\.edu\\.pt|\\.asia|\\.fi|\\.com\\.ve|\\.net\\.ve|\\.fi|\\.org\\.ve|\\.web\\.ve|\\.info\\.ve|\\.co\\.ve|\\.tel|\\.im|\\.gr|\\.ru|\\.net\\.ru|\\.org\\.ru|\\.hr|\\.com\\.hr)$/, '$1$2');\r\n\t    \t}\r\n    \t};    \t\r\n    \treturn this.domain;\r\n    },\r\n    \r\n   storePersistenCookie : function(){\r\n   \t\tvar parameters = {};\r\n   \t\t<?php ($trackDomain != '' || $disableHTML5Storage == 1) ? ($trackDomain != '' ? print 'parameters.domain = \\'.'.$trackDomain.'\\';' : print 'parameters.domain = this.getCookieDomain();') : ''?>\r\n   \t\t<?php $timeout !== false ? print 'parameters.expires = '.($timeout * 24*3600).';' : ''?>\r\n\t    lhc_Cookies('lhc_bo_per',this.JSON.stringify(this.cookieDataPers),parameters);\r\n   },\r\n    \r\n   getPersistentAttribute : function(attr) {    \r\n\t    \tif (this.cookieDataPers[attr]){\r\n\t\t    \treturn this.cookieDataPers[attr];\r\n\t    \t}\r\n\t    \treturn null;    \t    \t\r\n    },\r\n    \r\n    addCookieAttributePersistent : function(attr, value){    \t\r\n    \tif (!this.cookieDataPers[attr] || this.cookieDataPers[attr] != value){\r\n\t    \tthis.cookieDataPers[attr] = value;\r\n\t    \tthis.storePersistenCookie();\t    \t\r\n    \t}    \t\r\n    }\r\n};\r\n\r\nvar cookieData = lhc_Cookies('lhc_bo_per');\r\n\r\nif ( typeof cookieData === \"string\" && cookieData ) {\r\n\tlhc_BrowseOffer.cookieDataPers = lhc_BrowseOffer.JSON.parse(cookieData);\t\r\n\tif ( (lhc_BrowseOffer.cookieDataPers.was_opened && false == <?php echo $canreopen == true ? 'true' : 'false'?>) || (lhc_BrowseOffer.cookieDataPers.of && lhc_BrowseOffer.cookieDataPers.of.indexOf(<?php echo $invite->id?>) >= 0)) {\r\n\t\tlhc_BrowseOffer.canOpenOffer = false;\r\n\t}\r\n};\r\n\r\nif ( window.attachEvent ) {\r\n\t// IE\r\n\twindow.attachEvent(\"onmessage\",function(e){lhc_BrowseOffer.handleMessage(e);});\r\n};\r\n\r\nif ( document.attachEvent ) {\r\n\t// IE\r\n\tdocument.attachEvent(\"onmessage\",function(e){lhc_BrowseOffer.handleMessage(e);});\r\n};\r\n\r\nif ( window.addEventListener ){\r\n\t// FF\r\n\twindow.addEventListener(\"message\",function(e){lhc_BrowseOffer.handleMessage(e);}, false);\r\n};\r\n\r\nif (lhc_BrowseOffer.canOpenOffer == true) {\r\n\tsetTimeout(function(){\r\n\t\tlhc_BrowseOffer.showBrowseOffer();\r\n\t},<?php echo $invite->time_on_site*1000?>)\t\r\n};\r\n", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup width');?></label>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-8\">\n\t\t\t\t\t<input class=\"form-control\" type=\"text\" id=\"id_size_text\" value=\"450\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t<select class=\"form-control\" id=\"UnitsTop\">\n\t\t\t\t\t\t<option value=\"pixels\">Pixels</option>\n\t\t\t\t\t\t<option value=\"percents\">Percents</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup height, used only if iframe is used');?></label> <input type=\"text\" class=\"form-control\" id=\"id_size_height\" value=\"450\" />\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-12\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Identifier, this can be used as filter for pro active chat invitations and is use full having different messages for different domains. Only string without spaces or special characters.');?></label> <input type=\"text\" class=\"form-control\" id=\"id_site_identifier\" maxlength=\"50\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Leave empty if it is not important to you');?>\" value=\"\" />\n\t\t</div>\n\t</div>\n\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label for=\"id_show_overlay\"><input type=\"checkbox\" id=\"id_show_overlay\" value=\"on\" checked=\"checked\"> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Show overlay');?></label>\n\t\t</div>\n\t</div>\n\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label for=\"id_canreopen\"><input type=\"checkbox\" id=\"id_canreopen\" value=\"on\"> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Show different offers for the same user');?></label>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-12\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Offer timeout in days, after how many days show offers for the same visitor again, leave empty for session');?></label> <input type=\"text\" class=\"form-control\" id=\"offer_timeout\" maxlength=\"50\" value=\"\" />\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','For what domain you are generating embed code?');?></label> \n\t\t\t<input class=\"form-control\" type=\"text\" id=\"id_embed_domain\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','example.com');?>\" value=\"\" /> \n\t\t</div>\t\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select class=\"form-control\" id=\"HttpMode\">\n\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6 end\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select class=\"form-control\" id=\"LocaleID\">\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n\t\t</div>\n\t</div>\n</div>\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Copy the code from the text area to the page header or footer');?></p>\n<textarea style=\"width: 100%; height: 180px; font-size: 12px;\" id=\"HMLTContent\"></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n\tvar size = '/(size)/'+($('#id_size_text').val() == '' ? 400 : $('#id_size_text').val());\n\tvar topposition = '/(units)/'+$('#UnitsTop').val();\n\tvar id_identifier = $('#id_site_identifier').val() != '' ? '/(identifier)/'+$('#id_site_identifier').val() : '';\n\tvar id_timeout = $('#offer_timeout').val() != '' ? '/(timeout)/'+$('#offer_timeout').val() : '';\n\tvar id_size_height = $('#id_size_height').val() != '' ? '/(height)/'+$('#id_size_height').val() : '';\n\tvar id_show_overlay = $('#id_show_overlay').is(':checked') ? '/(showoverlay)/true' : '';\n\tvar id_canreopen = $('#id_canreopen').is(':checked') ? '/(canreopen)/true' : '';\n\tvar id_embed_domain = $('#id_embed_domain').val() != '' ? 'domain:\\''+$('#id_embed_domain').val()+'\\'' : '';\n\n\t<?php include(erLhcoreClassDesign::designtpl('lhbrowseoffer/getstatus/options_variable.tpl.php')); ?>\n\t\n    var script = '<script type=\"text/javascript\">'+\"\\nvar <?php echo $browseofferOptionsVariable;?> = {\"+id_embed_domain+\"};\\n\"+\n    \n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'var referrer = (document.referrer) ? encodeURIComponent(document.referrer.substr(document.referrer.indexOf(\\'://\\')+1)) : \\'\\';'+\"\\n\"+\n        'var location  = (document.location) ? encodeURIComponent(window.location.href.substring(window.location.protocol.length)) : \\'\\';'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'browseoffer/getstatus'+size+id_size_height+topposition+id_timeout+id_show_overlay+id_identifier+id_canreopen+'?r=\\'+referrer+\\'&l=\\'+location;'+\"\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n    $('#HMLTContent').text(script);\n};\n$('#LocaleID,#id_embed_domain,#UnitsTop,#id_size_text,#HttpMode,#id_site_identifier,#id_size_height,#id_show_overlay,#id_canreopen,#offer_timeout').change(function(){\n    generateEmbedCode();\n});\ngenerateEmbedCode();\n\n</script>", "<?php if (isset($orderInformation['id']['enabled']) && $orderInformation['id']['enabled'] == true) : ?>\r\n<div class=\"col-6 pb-1\">\r\n    <span class=\"material-icons user-select-none\">vpn_key</span><span><?php echo $chat->id;?></span><button data-success=\"Copied\" class=\"ml-1 btn btn-xs btn-link text-muted py-1\" data-copy=\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('front/default')?>/(cid)/<?php echo $chat->id?>/#!#chat-id-<?php echo $chat->id?>\" onclick=\"lhinst.copyContent($(this))\" type=\"button\"><i class=\"material-icons\">link</i>Copy link</button>\r\n</div>\r\n<?php endif; ?>", "<?php if (isset($reopen_chat)) : ?>\nlh_inst.stopCheckNewMessage();\nlh_inst.addCookieAttribute('hash','<?php echo $reopen_chat->id;?>_<?php echo $reopen_chat->hash?>');\nlh_inst.showStartWindow();\n<?php elseif ($visitor->has_message_from_operator == true && (!isset($dynamic_everytime) || $dynamic_everytime == false)) : ?>\nlh_inst.stopCheckNewMessage();\n\n<?php if ($visitor->invitation instanceof erLhAbstractModelProactiveChatInvitation && $visitor->invitation->show_on_mobile == 1) : ?>\n\n    <?php if (($visitor->invitation_assigned == false && $visitor->invitation->delay > 0) || $visitor->invitation->delay_init > 0) : ?>\n    setTimeout(function() {\n    <?php endif; ?>\n\n        var invitationURL =  '<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('chat/readoperatormessage')?><?php $department !== false ? print '/(department)/'.$department : '' ?><?php $theme !== false ? print '/(theme)/'.$theme : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : ''?><?php $tag !== false ? print '/(tag)/' . $tag : ''?><?php $survey !== false ? print '/(survey)/'.$survey : ''?>/(vid)/<?php echo $vid;?><?php $visitor->invitation_assigned == true ? print '/(playsound)/true' : ''?>/(fullheight)/<?= $fullheight ? 'true' : 'false' ?>';\n\n        <?php if (isset($visitor->invitation->design_data_array['mobile_html']) && $visitor->invitation->design_data_array['mobile_html'] != '') : ?>\n\n            <?php if (isset($visitor->invitation->design_data_array['mobile_style']) && $visitor->invitation->design_data_array['mobile_style'] != '') : ?>\n                <?php\n                    $replaceStyleArray = array();\n                    for ($i = 1; $i < 5; $i++) {\n                        $replaceStyleArray['{proactive_img_' . $i . '}'] = erLhcoreClassSystem::getHost() . $visitor->invitation->{'design_data_img_' . $i . '_url'};\n                    }\n                ?>\n                <?php\n                    $contentCSS = str_replace(array_keys($replaceStyleArray),array_values($replaceStyleArray),$visitor->invitation->design_data_array['mobile_style']);\n                    $contentCSS = str_replace(array(\"\\n\",\"\\r\"),'',$contentCSS);\n                ?>\n                lh_inst.addCss(<?php echo json_encode($contentCSS)?>);\n            <?php endif; ?>\n            lh_inst.invitationURL = invitationURL;\n            var fragmentInv = lh_inst.appendHTML(<?php echo json_encode(str_replace(array(\"\\n\",\"\\r\",'{readmessage}','{hideInvitation}'),array('','',\"return lh_inst.showHTMLInvitation(lh_inst.invitationURL)\",\"return lh_inst.hideHTMLInvitation()\"),$visitor->invitation->design_data_array['mobile_html']))?>);\n            document.body.insertBefore(fragmentInv, document.body.childNodes[0]);\n            lh_inst.isProactivePending = 1;\n            lh_inst.toggleStatusWidget(true);\n\n        <?php else : ?>\n            <?php if (isset($visitor->invitation->design_data_array['api_do_not_show']) && $visitor->invitation->design_data_array['api_do_not_show'] == 1) : ?>\n                lh_inst.showBasicInvitation(invitationURL);\n            <?php else : ?>\n            if (window.innerWidth > 700) {\n                lh_inst.isProactivePending = 1;\n                lh_inst.showStartWindow(invitationURL,true);\n            } else {\n                lh_inst.showBasicInvitation(invitationURL);\n            }\n            <?php endif; ?>\n        <?php endif; ?>\n\n    <?php if (($visitor->invitation_assigned == false && $visitor->invitation->delay > 0) || $visitor->invitation->delay_init > 0) : ?>\n    },<?php echo ($visitor->invitation_assigned == true ? $visitor->invitation->delay_init : $visitor->invitation->delay) * 1000?>);\n    <?php endif; ?>\n\n<?php else : ?>\n            <?php if ($visitor->invitation instanceof erLhAbstractModelProactiveChatInvitation && (($visitor->invitation_assigned == false && $visitor->invitation->delay > 0) || $visitor->invitation->delay_init > 0)) : ?>\n                setTimeout(function() {\n            <?php endif; ?>\n            var urlInvitation = '<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('chat/readoperatormessage')?><?php $department !== false ? print '/(department)/'.$department : '' ?><?php $theme !== false ? print '/(theme)/'.$theme : ''?><?php $tag !== false ? print '/(tag)/' . $tag : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : ''?><?php $survey !== false ? print '/(survey)/'.$survey : ''?>/(vid)/<?php echo $vid;?><?php $visitor->invitation_assigned == true ? print '/(playsound)/true' : ''?>/(fullheight)/<?= $fullheight ? 'true' : 'false' ?>';\n            <?php if ($visitor->invitation instanceof erLhAbstractModelProactiveChatInvitation && isset($visitor->invitation->design_data_array['api_do_not_show']) && $visitor->invitation->design_data_array['api_do_not_show'] == 1) : ?>\n                lh_inst.showBasicInvitation(urlInvitation);\n            <?php else : ?>\n                if (window.innerWidth > 700) {\n                        lh_inst.isProactivePending = 1;\n                        lh_inst.showStartWindow(urlInvitation,true);\n                    } else {\n                        lh_inst.showBasicInvitation(urlInvitation);\n                    }\n            <?php endif; ?>\n            <?php if ($visitor->invitation instanceof erLhAbstractModelProactiveChatInvitation && ($visitor->invitation_assigned == false && $visitor->invitation->delay > 0 || $visitor->invitation->delay_init > 0)) : ?>\n                },<?php echo ($visitor->invitation_assigned == true ? $visitor->invitation->delay_init : $visitor->invitation->delay) * 1000?>);\n            <?php endif; ?>\n<?php endif; ?>\n\n<?php elseif (isset($dynamic)) : ?>\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/dynamic_events.tpl.php')); ?>\t\n<?php endif; ?>\n\n<?php if (isset($inject_html)) : ?>\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/inject_events.tpl.php')); ?>\n<?php endif; ?>\n\n<?php if (isset($operation)) : ?><?php echo $operation;?><?php endif;?>\n\n<?php if ($visitor->next_reschedule > 0) : ?>\n    setTimeout(function() {\n        lh_inst.startNewMessageCheckSingle();\n    },<?php echo (($visitor->next_reschedule + 1)*1000);?>);\n<?php endif; ?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/chatcheckoperatormessage_multiinclude.tpl.php')); ?>\t", "<div class=\"align-self-center op-photo\">\n    <?php if ($user->has_photo_avatar) : ?>\n        <?php if ($user->has_photo) : ?>\n            <img width=\"20\" height=\"20\" src=\"<?php echo $user->photo_path?>\" alt=\"<?php echo htmlspecialchars($user->name_support)?>\" />\n        <?php else : ?>\n            <img width=\"20\" height=\"20\" src=\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurldirect('widgetrestapi/avatar')?>/<?php echo htmlspecialchars($user->avatar)?>\" alt=\"<?php echo htmlspecialchars($user->name_support)?>\" />\n        <?php endif; ?>\n    <?php else : ?>\n        <i class=\"icon-assistant material-icons mr-0\"><?php if (isset($react) && $react === true) : ?>&#xf10d;<?php else : ?>account_box<?php endif; ?></i>\n    <?php endif;?>\n</div>\n<div class=\"p-1 pl-2\">\n    <span class=\"font-weight-bold op-name-widget\">\n        <?php if (isset($theme) && $theme instanceof erLhAbstractModelWidgetTheme && isset($theme->bot_configuration_array['custom_op_name']) && $theme->bot_configuration_array['custom_op_name'] != '') : ?>\n            <?php echo htmlspecialchars(str_replace(['{nick}', '{name}', '{surname}'], [$user->name_support, $user->name, $user->surname], $theme->bot_configuration_array['custom_op_name']));?>\n        <?php else : ?>\n            <?php echo htmlspecialchars($user->name_support)?>\n        <?php endif; ?>\n    </span>\n</div>", "<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/position_css.tpl.php')); ?>\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/position_css_override.tpl.php')); ?>\n\n<?php\n$trackDomain = erLhcoreClassModelChatConfig::fetch('track_domain')->current_value;\n$disableHTML5Storage = (int)erLhcoreClassModelChatConfig::fetch('disable_html5_storage')->current_value;\n$trackOnline = (int)erLhcoreClassModelChatConfig::fetch('track_if_offline')->current_value;\n$noWildcardCookie = (int)erLhcoreClassModelChatConfig::fetch('no_wildcard_cookie')->current_value;\n?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/is_online_help.tpl.php')); ?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/geo_adjustment.tpl.php')); ?>\n\n<?php\n\nif ($isOnlineHelp == false && erLhcoreClassModelChatConfig::fetch('pro_active_show_if_offline')->current_value == 0) {\n\t$disable_pro_active = true;\n};\n\n// Perhaps user do not want to show live help when it's offline\nif ( !($isOnlineHelp == false && $hide_offline == 'true') || $trackOnline == 1 ) : ?>\n\n/*! Cookies.js - 0.4.0; Copyright (c) 2014, Scott Hamper; http://www.opensource.org/licenses/MIT */\n(function(e){\"use strict\";var b=function(a,d,c){return 1===arguments.length?b.get(a):b.set(a,d,c)};b._document=document;b._navigator=navigator;b.defaults={path:\"/\"};b.get=function(a){b._cachedDocumentCookie!==b._document.cookie&&b._renewCache();return b._cache[a]};b.set=function(a,d,c){c=b._getExtendedOptions(c);c.expires=b._getExpiresDate(d===e?-1:c.expires);b._document.cookie=b._generateCookieString(a,d,c);return b};b.expire=function(a,d){return b.set(a,e,d)};b._getExtendedOptions=function(a){return{path:a&& a.path||b.defaults.path,domain:a&&a.domain||b.defaults.domain,expires:a&&a.expires||b.defaults.expires,secure:a&&a.secure!==e?a.secure:b.defaults.secure}};b._isValidDate=function(a){return\"[object Date]\"===Object.prototype.toString.call(a)&&!isNaN(a.getTime())};b._getExpiresDate=function(a,d){d=d||new Date;switch(typeof a){case \"number\":a=new Date(d.getTime()+1E3*a);break;case \"string\":a=new Date(a)}if(a&&!b._isValidDate(a))throw Error(\"`expires` parameter cannot be converted to a valid Date instance\"); return a};b._generateCookieString=function(a,b,c){a=a.replace(/[^#$&+\\^`|]/g,encodeURIComponent);a=a.replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\");b=(b+\"\").replace(/[^!#$&-+\\--:<-\\[\\]-~]/g,encodeURIComponent);c=c||{};a=a+\"=\"+b+(c.path?\";path=\"+c.path:\"\");a+=c.domain?\";domain=\"+c.domain:\"\";a+=c.expires?\";expires=\"+c.expires.toUTCString():\"\";a+=c.secure?\";secure\":\"\";return a+=\";SameSite=Lax\"};b._getCookieObjectFromString=function(a){var d={};a=a?a.split(\"; \"):[];for(var c=0;c<a.length;c++){var f=b._getKeyValuePairFromCookieString(a[c]); d[f.key]===e&&(d[f.key]=f.value)}return d};b._getKeyValuePairFromCookieString=function(a){var b=a.indexOf(\"=\"),b=0>b?a.length:b;try {return{key:decodeURIComponent(a.substr(0,b)),value:decodeURIComponent(a.substr(b+1))}} catch(e) {return{key:a.substr(0,b),value:a.substr(b+1)}}};b._renewCache=function(){b._cache=b._getCookieObjectFromString(b._document.cookie);b._cachedDocumentCookie=b._document.cookie};b._areEnabled=function(){var a=\"1\"===b.set(\"cookies_lhc.js\",1).get(\"cookies_lhc.js\");b.expire(\"cookies_lhc.js\");return a};b.enabled=b._areEnabled();window.lhc_Cookies=b})();\n\nlhc_Cookies.defaults = {path:\"/\",secure: <?php erLhcoreClassModelChatConfig::fetch('use_secure_cookie')->current_value == 1 ? print 'true' : print 'false' ?>};\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/options_variable.tpl.php')); ?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/custom_get_status_js.tpl.php')); ?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/part/javascript_variables.tpl.php')); ?>\n\nvar lh_inst  = {\n   JSON : {\n            parse: window.JSON && (window.JSON.parse || window.JSON.decode) || String.prototype.evalJSON && function(str){return String(str).evalJSON();} || $.parseJSON || $.evalJSON,\n            stringify:  Object.toJSON || window.JSON && (window.JSON.stringify || window.JSON.encode) || $.toJSON\n    },\n    js_variables : <?php echo json_encode($jsVars);?>,\n    rendered : false,\n    pos : <?php echo json_encode($position)?>,\n    isOnline : <?php echo $isOnlineHelp == true ? 'true' : 'false'?>,\n    disabledGeo : <?php echo (isset($disableByGeoAdjustment) && $disableByGeoAdjustment == true) ? 'true' : 'false' ?>,\n    checkOperatorMessage : <?php echo $check_operator_messages == true ? 'true' : 'false'?>,\n\toffset_data : '',\n    reset : <?php isset($fresh) && $fresh == true ? print 'true' : print 'false'?>,\n\tlang: '<?php echo erLhcoreClassSystem::instance()->WWWDirLang?>',\n\tlangDefault: '/<?php echo erLhcoreClassSystem::instance()->SiteAccess?>',\n\tis_dragging : false,\n\tis_full_height : <?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ? 'true' : 'false' ?>,\n\tonline_tracked : false,\n    urlopen : function(){\n    \treturn \"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>\"+this.lang+\"/chat/startchat<?php $leaveamessage == true ? print '/(leaveamessage)/true' : ''?><?php is_object($theme) ? print '/(theme)/'.$theme->id : ''?><?php $department !== false ? print '/(department)/'.$department : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : ''?>\"+this.survey_id;\n    },\n\t<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/custom_get_status_lh_inst_js.tpl.php')); ?>\n    hasSurvey : <?php echo $survey !== false ? 'true ': 'false'?>,\n    survey_id : '<?php echo $survey !== false ? '/(survey)/' . $survey : ''?>',\n    surveyShown : false,\n    isMinimized : false,\n    explicitClose : false,\n    iframeLoaded : false,\n    isProactivePending : 0,\n    dynamicAssigned : [],\n    extensionCommands : [],\n    windowname : \"startchatwindow\",\n\tsubstatus : '',\n    cookieData : {},\n    cookieDataPers : {},\n\tdomain : false,\n    isSharing : false,\n    chat_started : false,\n    iswildcard : null,\n    extensionArgs : '',\n    prefillMessage : '',\n    getCookieDomain : function(domain) {\n    \t if (this.domain !== false) {\n    \t \treturn this.domain;\n    \t } else {\n\t    \tif (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.domain != 'undefined') {\n\t    \t\tthis.domain = '.'+<?php echo $chatOptionsVariable?>.opt.domain.replace(/(https:\\/\\/|http:\\/\\/)/g,'');\n\t    \t} else {\n\t    \t\tthis.domain = '.'+document.location.hostname.replace(/^(?:[a-z0-9\\-\\.]+\\.)??([a-z0-9\\-]+)?(\\.com|\\.net|\\.org|\\.biz|\\.ws|\\.in|\\.me|\\.co\\.uk|\\.co|\\.org\\.uk|\\.ltd\\.uk|\\.plc\\.uk|\\.me\\.uk|\\.edu|\\.mil|\\.br\\.com|\\.cn\\.com|\\.eu\\.com|\\.hu\\.com|\\.no\\.com|\\.qc\\.com|\\.sa\\.com|\\.se\\.com|\\.se\\.net|\\.us\\.com|\\.uy\\.com|\\.ac|\\.co\\.ac|\\.gv\\.ac|\\.or\\.ac|\\.ac\\.ac|\\.af|\\.am|\\.as|\\.at|\\.ac\\.at|\\.co\\.at|\\.gv\\.at|\\.or\\.at|\\.asn\\.au|\\.com\\.au|\\.edu\\.au|\\.org\\.au|\\.net\\.au|\\.id\\.au|\\.be|\\.ac\\.be|\\.adm\\.br|\\.adv\\.br|\\.am\\.br|\\.arq\\.br|\\.art\\.br|\\.bio\\.br|\\.cng\\.br|\\.cnt\\.br|\\.com\\.br|\\.ecn\\.br|\\.eng\\.br|\\.esp\\.br|\\.etc\\.br|\\.eti\\.br|\\.fm\\.br|\\.fot\\.br|\\.fst\\.br|\\.g12\\.br|\\.gov\\.br|\\.ind\\.br|\\.inf\\.br|\\.jor\\.br|\\.lel\\.br|\\.med\\.br|\\.mil\\.br|\\.net\\.br|\\.nom\\.br|\\.ntr\\.br|\\.odo\\.br|\\.org\\.br|\\.ppg\\.br|\\.pro\\.br|\\.psc\\.br|\\.psi\\.br|\\.rec\\.br|\\.slg\\.br|\\.tmp\\.br|\\.tur\\.br|\\.tv\\.br|\\.vet\\.br|\\.zlg\\.br|\\.br|\\.ab\\.ca|\\.bc\\.ca|\\.mb\\.ca|\\.nb\\.ca|\\.nf\\.ca|\\.ns\\.ca|\\.nt\\.ca|\\.on\\.ca|\\.pe\\.ca|\\.qc\\.ca|\\.sk\\.ca|\\.yk\\.ca|\\.ca|\\.cc|\\.ac\\.cn|\\.com\\.cn|\\.edu\\.cn|\\.gov\\.cn|\\.org\\.cn|\\.bj\\.cn|\\.sh\\.cn|\\.tj\\.cn|\\.cq\\.cn|\\.he\\.cn|\\.nm\\.cn|\\.ln\\.cn|\\.jl\\.cn|\\.hl\\.cn|\\.js\\.cn|\\.zj\\.cn|\\.ah\\.cn|\\.gd\\.cn|\\.gx\\.cn|\\.hi\\.cn|\\.sc\\.cn|\\.gz\\.cn|\\.yn\\.cn|\\.xz\\.cn|\\.sn\\.cn|\\.gs\\.cn|\\.qh\\.cn|\\.nx\\.cn|\\.xj\\.cn|\\.tw\\.cn|\\.hk\\.cn|\\.mo\\.cn|\\.cn|\\.cx|\\.cz|\\.de|\\.dk|\\.fo|\\.com\\.ec|\\.tm\\.fr|\\.com\\.fr|\\.asso\\.fr|\\.presse\\.fr|\\.fr|\\.gf|\\.gs|\\.co\\.il|\\.net\\.il|\\.ac\\.il|\\.k12\\.il|\\.gov\\.il|\\.muni\\.il|\\.ac\\.in|\\.co\\.in|\\.org\\.in|\\.ernet\\.in|\\.gov\\.in|\\.net\\.in|\\.res\\.in|\\.is|\\.it|\\.ac\\.jp|\\.co\\.jp|\\.go\\.jp|\\.or\\.jp|\\.ne\\.jp|\\.ac\\.kr|\\.co\\.kr|\\.go\\.kr|\\.ne\\.kr|\\.nm\\.kr|\\.or\\.kr|\\.li|\\.lt|\\.lu|\\.asso\\.mc|\\.tm\\.mc|\\.com\\.mm|\\.org\\.mm|\\.net\\.mm|\\.edu\\.mm|\\.gov\\.mm|\\.ms|\\.nl|\\.no|\\.nu|\\.pl|\\.ro|\\.org\\.ro|\\.store\\.ro|\\.tm\\.ro|\\.firm\\.ro|\\.www\\.ro|\\.arts\\.ro|\\.rec\\.ro|\\.info\\.ro|\\.nom\\.ro|\\.nt\\.ro|\\.se|\\.si|\\.com\\.sg|\\.org\\.sg|\\.net\\.sg|\\.gov\\.sg|\\.sk|\\.st|\\.tf|\\.ac\\.th|\\.co\\.th|\\.go\\.th|\\.mi\\.th|\\.net\\.th|\\.or\\.th|\\.tm|\\.to|\\.com\\.tr|\\.edu\\.tr|\\.gov\\.tr|\\.k12\\.tr|\\.net\\.tr|\\.org\\.tr|\\.com\\.tw|\\.org\\.tw|\\.net\\.tw|\\.ac\\.uk|\\.uk\\.com|\\.uk\\.net|\\.gb\\.com|\\.gb\\.net|\\.vg|\\.sh|\\.kz|\\.ch|\\.info|\\.ua|\\.gov|\\.name|\\.pro|\\.ie|\\.hk|\\.com\\.hk|\\.org\\.hk|\\.net\\.hk|\\.edu\\.hk|\\.us|\\.tk|\\.cd|\\.by|\\.ad|\\.lv|\\.eu\\.lv|\\.bz|\\.es|\\.jp|\\.cl|\\.ag|\\.mobi|\\.eu|\\.co\\.nz|\\.org\\.nz|\\.net\\.nz|\\.maori\\.nz|\\.iwi\\.nz|\\.io|\\.la|\\.md|\\.sc|\\.sg|\\.vc|\\.tw|\\.travel|\\.my|\\.se|\\.tv|\\.pt|\\.com\\.pt|\\.edu\\.pt|\\.asia|\\.fi|\\.com\\.ve|\\.net\\.ve|\\.fi|\\.org\\.ve|\\.web\\.ve|\\.info\\.ve|\\.co\\.ve|\\.tel|\\.im|\\.gr|\\.ru|\\.net\\.ru|\\.org\\.ru|\\.hr|\\.com\\.hr)$/, '$1$2');\n\t    \t}\n    \t};\n    \treturn this.domain;\n    },\n\n    isWildcardCookie : function() {\n        if (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.subdomain != 'undefined') {\n            this.iswildcard = <?php echo $chatOptionsVariable?>.opt.subdomain;\n        }\n\n        return this.iswildcard;\n    },\n\n    updateVarsTimeout : null,\n\n    appendArg : function(args) {\n        var tt = args.length/2;\n        for (i = 0; i < tt; i++) {\n            var argument = args[i*2];\n            var value = args[(i*2)+1];\n            if (argument == 'survey_id') {\n                this.survey_id = '/(survey)/'+value;\n                this.hasSurvey = true;\n            }\n        }\n    },\n\n    addCss : function(css_content) {\n        var head = document.getElementsByTagName('head')[0];\n        var style = document.createElement('style');\n        style.type = 'text/css';\n\n        if(style.styleSheet) {\n          style.styleSheet.cssText = css_content;\n        } else {\n          rules = document.createTextNode(css_content);\n          style.appendChild(rules);\n        };\n\n        head.appendChild(style);\n    },\n\n    appendHTML : function (htmlStr) {\n        var frag = document.createDocumentFragment(),\n            temp = document.createElement('div');\n        temp.innerHTML = htmlStr;\n        while (temp.firstChild) {\n            frag.appendChild(temp.firstChild);\n        };\n        return frag;\n    },\n\n    removeById : function(EId)\n    {\n        return(EObj=document.getElementById(EId))?EObj.parentNode.removeChild(EObj):false;\n    },\n\n\thasClass : function(el, name) {\n\t   return new RegExp('(\\\\s|^)'+name+'(\\\\s|$)').test(el.className);\n\t},\n\n\taddClass : function(el, name) {\n\t   if (!this.hasClass(el, name)) { el.className += (el.className ? ' ' : '') +name; }\n\t},\n\n\tremoveClass : function(el, name) {\n\t   if (this.hasClass(el, name)) {\n\t      el.className=el.className.replace(new RegExp('(\\\\s|^)'+name+'(\\\\s|$)'),' ').replace(/^\\s+|\\s+$/g, '');\n\t   }\n    },\n\n    storePos : function(dm, height) {\n\t\t    var cookiePos = '';\n\t\t\t<?php if ($currentPosition['pos'] == 'r') : ?>\n\t\t    \tcookiePos += dm.style.right;\n\t\t    <?php else : ?>\n\t\t    \tcookiePos += dm.style.left;\n\t\t    <?php endif;?>\n\t\t    <?php if ($currentPosition['posv'] == 't') : ?>\n\t\t    cookiePos += \",\"+dm.style.top;\n\t\t    <?php else : ?>\n\t\t    cookiePos += \",\"+dm.style.bottom;\n\t\t    <?php endif;?>\n\n            if (height > 0) {\n                cookiePos += \",\"+height;\n            }\n\n\t\t    this.addCookieAttribute('pos',cookiePos);\n    },\n\n\tmin : function(initial) {\n\n        // If it's proactive invitation hide instead to avoid reopening.\n        if (this.isProactivePending == 1) {\n           this.hide();\n           return;\n        }\n\n\t\tvar dm = document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n\n        var msgNum = document.getElementById('<?php echo $chatCSSPrefix?>-msg-number');\n        msgNum.innerHTML = '';\n        msgNum.msg_number = 0;\n        this.removeClass(dm, '<?php echo $chatCSSPrefix?>-has-unread-message');\n\n    if (!dm.attrIsMin || dm.attrIsMin == false) {\n\t\t\tdm.attrHeight = dm.style.height;\n\t\t\tdm.attrIsMin = true;\n            this.isMinimized = true;\n\t\t\t<?php if ($currentPosition['posv'] == 'b') : ?>\n\t\t\tif(dm.style.bottom!='' && dm.attrHeight!=''){\n\t\t\t\tdm.style.bottom = (parseInt(dm.style.bottom)+parseInt(dm.attrHeight)-35)+'px';\n\t\t\t} else {\n\t\t\t\tif (initial == undefined) {\n\t\t\t\t\tdm.style.bottom = (parseInt(dm.style.bottom) + parseInt(document.getElementById('<?php echo $chatCSSPrefix?>_iframe_container').offsetHeight)-10)+'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\t<?php endif; ?>\n\n            var heightIframe = 0;\n            if (initial == undefined) {\n                heightIframe = parseInt(document.getElementById('<?php echo $chatCSSPrefix?>_iframe_container').offsetHeight)-1;\n            } else if (typeof lh_inst.pendingHeight !== 'undefined') {\n                heightIframe = lh_inst.pendingHeight;\n            }\n\n\t\t\tthis.addCookieAttribute('m',1);\n\t\t\tthis.storePos(dm, heightIframe);\n\t\t\t<?php if ($currentPosition['posv'] == 'b' && $minimize_action == 'br') : ?>\n\t\t\t\t\tdm.attrBottomOrigin = dm.style.bottom;\n\t\t\t\t\tdm.style.bottom = '';\n\t\t\t\t\t<?php if ($currentPosition['pos'] == 'r') : ?>\n\t\t\t\t\tdm.attrRightOrigin = dm.style.right;\n\t\t\t\t\tdm.style.right = '0px';\n\t\t\t\t\t<?php else : ?>\n\t\t\t\t\tdm.attrLeftOrigin = dm.style.left;\n\t\t\t\t\tdm.style.left = '0px';\n\t\t\t\t\t<?php endif;?>\n\t\t\t<?php endif;?>\n            this.addClass(dm,'<?php echo $chatCSSPrefix?>-min');\n\t\t\tthis.removeClass(document.body,'<?php echo $chatCSSPrefix?>-opened');\n\t\t} else {\n\n            if (this.cookieData.pos) {\n                var posContainer = this.cookieData.pos.split(',');\n                if (typeof posContainer[2] !== 'undefined' && posContainer[2] > 0){\n                    document.getElementById('<?php echo $chatCSSPrefix?>_iframe').style.height = posContainer[2] + 'px';\n                }\n            };\n\n            this.removeClass(dm,'<?php echo $chatCSSPrefix?>-min');\n\n\t\t\tdm.attrIsMin = false;\n            this.isMinimized = false;\n\t\t\t<?php if ($currentPosition['posv'] == 'b') : ?>\n\t\t\tif (dm.attrBottomOrigin) {\n\t\t\t\tdm.style.bottom = (parseInt(dm.attrBottomOrigin)-parseInt(document.getElementById('<?php echo $chatCSSPrefix?>_iframe').style.height)+9)+'px';\n\t\t\t\t<?php if ($currentPosition['pos'] == 'r') : ?>\n\t\t\t\tdm.style.right = dm.attrRightOrigin;\n\t\t\t\t<?php else : ?>\n\t\t\t\tdm.style.left = dm.attrLeftOrigin;\n\t\t\t\t<?php endif;?>\n\t\t\t} else if (dm.style.bottom!='') {\n\t\t\t\tdm.style.bottom = (parseInt(dm.style.bottom)-parseInt(document.getElementById('<?php echo $chatCSSPrefix?>_iframe').style.height)+9)+'px';\n\t\t\t}\n\t\t\t<?php endif;?>\n\t\t\tthis.removeCookieAttr('m');\n\t\t\tvar inst = this;\n\t\t\tthis.storePos(dm);\n\t\t\tthis.addClass(document.body,'<?php echo $chatCSSPrefix?>-opened');\n\t\t};\n\t},\n\n    hide : function() {\n        this.isProactivePending = 0;\n        if (!lh_inst.cookieData.hash || lh_inst.hasSurvey == false || lh_inst.surveyShown == true) {\n\n            <?php if ((int)erLhcoreClassModelChatConfig::fetch('on_close_exit_chat')->current_value == 1) : ?>\n            this.explicitClose = true;\n            <?php endif;?>\n\n            var th = document.getElementsByTagName('head')[0];\n            var s = document.createElement('script');\n            s.setAttribute('type','text/javascript');\n            s.setAttribute('src','<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/chatwidgetclosed'+this.getAppendCookieArguments()+'?ts='+Date.now());\n            th.appendChild(s);\n            this.toggleStatusWidget(false);\n\n            this.removeCookieAttr('pos');\n            this.removeCookieAttr('m');\n\n            if (lh_inst.cookieData.hash) {\n                this.removeById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n                this.removeCookieAttr('hash');\n                this.iframe_html = null;\n                this.iframePreloaded = false;\n\n                // Give time for cookie to be removed\n                setTimeout(function(){\n                    lh_inst.preloadWidget();\n                },300);\n\n            } else {\n                if (this.iframeCustomUrl === true) {\n                    this.removeById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n                    lh_inst.preloadWidget();\n                } else {\n                    this.addClass(document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>'),'<?php echo $chatCSSPrefix?>-delayed');\n                }\n            }\n\n            this.removeClass(document.body,'<?php echo $chatCSSPrefix?>-opened');\n\n            <?php if ($check_operator_messages == 'true' && $disable_pro_active == false) : ?>\n            this.startNewMessageCheck();\n            <?php endif; ?>\n            this.timeoutStatusWidgetOpen = 0;\n            this.surveyShown = true;\n\n        } else {\n            this.showSurvey();\n        }\n    },\n\n    hideHTMLInvitation : function() {\n        lh_inst.hide();\n        lh_inst.removeById('<?php echo $chatCSSPrefix?>-inv-container');\n        return false;\n    },\n\n    showHTMLInvitation : function(invitationURL) {\n        this.showStartWindow(invitationURL,true);\n        lh_inst.removeById('<?php echo $chatCSSPrefix?>-inv-container');\n        return false;\n    },\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/part/show_survey.tpl.php')); ?>\n\n    getAppendCookieArguments : function() {\n\t\t    var hashAppend = this.cookieData.hash && this.reset == false  ? '/(hash)/'+this.cookieData.hash : '';\n\t\t    var vidAppend = this.cookieDataPers.vid ? '/(vid)/'+this.cookieDataPers.vid : '';\n\t\t    var hashResume = this.cookieData.hash_resume && this.reset == false  ? '/(hash_resume)/'+this.cookieData.hash_resume : '';\n\t\t    var soundOption = this.cookieData.s ? '/(sound)/'+this.cookieData.s : '';\n\t\t    var explicitClose = this.explicitClose ? '/(eclose)/t' : '';\n\n\t\t    if (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.attr_paid != 'undefined') {\n\t\t          explicitClose = explicitClose + '/(phash)/'+ <?php echo $chatOptionsVariable?>.attr_paid.phash;\n\t\t          explicitClose = explicitClose + '/(pvhash)/'+ <?php echo $chatOptionsVariable?>.attr_paid.pvhash;\n\t\t    };\n\n\t\t    return hashAppend+vidAppend+hashResume+soundOption+explicitClose+this.survey_id;\n    },\n\n    openRemoteWindow : function() {\n        this.removeById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n        var popupHeight = (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.popup_height != 'undefined') ? parseInt(<?php echo $chatOptionsVariable?>.opt.popup_height) : 520;\n        var popupWidth = (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.popup_width != 'undefined') ? parseInt(<?php echo $chatOptionsVariable?>.opt.popup_width) : 500;\n        var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n        window.open(this.urlopen()+this.getAppendCookieArguments()+'/(er)/1'+'?URLReferer='+locationCurrent+this.parseOptions()+this.parseStorageArguments(),this.windowname,\"scrollbars=yes,menubar=1,resizable=1,width=\"+popupWidth+\",height=\"+popupHeight);\n        this.removeCookieAttr('hash');\n        this.removeCookieAttr('hash_resume');\n        this.toggleStatusWidget(false);\n        this.iframe_html = null;\n        this.iframePreloaded = false;\n\n        // Give time for cookie to be removed\n        setTimeout(function(){\n            lh_inst.preloadWidget();\n        },300);\n    },\n\n    getTimeZone : function() {\n\n            var today = new Date();\n\n            stdTimezoneOffset = function() {\n                var jan = new Date(today.getFullYear(), 0, 1);\n                var jul = new Date(today.getFullYear(), 6, 1);\n                return Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n            };\n\n            var dst = function() {\n                return today.getTimezoneOffset() < stdTimezoneOffset();\n            };\n\n            var timeZoneOffset = 0;\n\n            if (dst()) {\n                timeZoneOffset = today.getTimezoneOffset();\n            } else {\n                timeZoneOffset = today.getTimezoneOffset()-60;\n            };\n\n            return (((timeZoneOffset)/60) * -1);\n    },\n\n    parseOptions : function() {\n\t\targumentsQuery = new Array();\n        var paramsReturn = '';\n\t\tif (typeof <?php echo $chatOptionsVariable?> != 'undefined') {\n\t    \tif (typeof <?php echo $chatOptionsVariable?>.attr != 'undefined') {\n\t    \t\tif (<?php echo $chatOptionsVariable?>.attr.length > 0){\n\t\t\t\t\tfor (var index in <?php echo $chatOptionsVariable?>.attr) {\n\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariable?>.attr[index] != 'undefined' && typeof <?php echo $chatOptionsVariable?>.attr[index].type != 'undefined') {\n\t\t\t\t\t\t\targumentsQuery.push('name[]='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr[index].name)+'&encattr[]='+(typeof <?php echo $chatOptionsVariable?>.attr[index].encrypted != 'undefined' && <?php echo $chatOptionsVariable?>.attr[index].encrypted == true ? 't' : 'f')+'&value[]='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr[index].value)+'&type[]='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr[index].type)+'&size[]='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr[index].size)+'&req[]='+(typeof <?php echo $chatOptionsVariable?>.attr[index].req != 'undefined' && <?php echo $chatOptionsVariable?>.attr[index].req == true ? 't' : 'f')+'&sh[]='+((typeof <?php echo $chatOptionsVariable?>.attr[index].show != 'undefined' && (<?php echo $chatOptionsVariable?>.attr[index].show == 'on' || <?php echo $chatOptionsVariable?>.attr[index].show == 'off')) ? <?php echo $chatOptionsVariable?>.attr[index].show : 'b'));\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t    \t\t};\n\t    \t};\n\n\t    \tif (typeof <?php echo $chatOptionsVariable?>.attr_prefill != 'undefined') {\n\t    \t\tif (<?php echo $chatOptionsVariable?>.attr_prefill.length > 0){\n\t\t\t\t\tfor (var index in <?php echo $chatOptionsVariable?>.attr_prefill) {\n\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariable?>.attr_prefill[index] != 'undefined' && typeof <?php echo $chatOptionsVariable?>.attr_prefill[index].name != 'undefined') {\n\t\t\t\t\t\t\targumentsQuery.push('prefill['+<?php echo $chatOptionsVariable?>.attr_prefill[index].name+']='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr_prefill[index].value));\n\t\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariable?>.attr_prefill[index].hidden != 'undefined') {\n\t\t\t\t\t\t\t\targumentsQuery.push('hattr[]='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr_prefill[index].name));\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t    \t\t};\n\t    \t};\n\n\t    \tif (typeof <?php echo $chatOptionsVariable?>.attr_prefill_admin != 'undefined') {\n\t    \t\tif (<?php echo $chatOptionsVariable?>.attr_prefill_admin.length > 0){\n\t\t\t\t\tfor (var index in <?php echo $chatOptionsVariable?>.attr_prefill_admin) {\n\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariable?>.attr_prefill_admin[index] != 'undefined') {\n\t\t\t\t\t\t\targumentsQuery.push('value_items_admin['+<?php echo $chatOptionsVariable?>.attr_prefill_admin[index].index+']='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr_prefill_admin[index].value));\n\n\t\t\t\t\t\t    if (typeof <?php echo $chatOptionsVariable?>.attr_prefill_admin[index].hidden != 'undefined') {\n\t\t\t\t\t\t\t     argumentsQuery.push('via_hidden['+<?php echo $chatOptionsVariable?>.attr_prefill_admin[index].index+']='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr_prefill_admin[index].hidden == true ? 't' : 'f'));\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t    if (typeof <?php echo $chatOptionsVariable?>.attr_prefill_admin[index].encrypted != 'undefined') {\n\t\t\t\t\t\t\t     argumentsQuery.push('via_encrypted['+<?php echo $chatOptionsVariable?>.attr_prefill_admin[index].index+']='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr_prefill_admin[index].encrypted == true ? 't' : 'f'));\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t    \t\t};\n\t    \t};\n\n\t    \tif (argumentsQuery.length > 0) {\n\t    \t\tparamsReturn = '&'+argumentsQuery.join('&');\n\t    \t};\n    \t};\n\n    \tif (this.extensionArgs != '') {\n    \t    paramsReturn = paramsReturn + this.extensionArgs;\n    \t}\n\n        var js_args = [];\n        var currentVar = null;\n        for (var index in this.js_variables) {\n            try {\n                currentVar = eval(this.js_variables[index].var);\n                if (typeof currentVar !== 'undefined' && currentVar !== null && currentVar !== '') {\n                    js_args.push('jsvar['+this.js_variables[index].id+']='+encodeURIComponent(currentVar));\n                }\n            } catch(err) {\n                \n            }\n        }\n\n        if (js_args.length > 0) {\n            paramsReturn = paramsReturn + '&' + js_args.join('&');\n        }\n\n    \tif (this.prefillMessage != '') {\n    \t   paramsReturn = paramsReturn + '&' + 'prefillMsg=' + encodeURIComponent(this.prefillMessage);\n    \t}\n\n        if (this.tag != '') {\n            paramsReturn = paramsReturn + this.tag;\n        }\n\n        paramsReturn = paramsReturn + '&' + 'tzuser=' + encodeURIComponent(this.getTimeZone());\n\n    \treturn paramsReturn;\n    },\n\n    setDefaultMessage : function(msg) {\n        this.prefillMessage = msg;\n    },\n\n    parseOptionsOnline : function(){\n    \targumentsQuery = new Array();\n\n\t\tif (typeof <?php echo $chatOptionsVariable?> != 'undefined') {\n\t    \tif (typeof <?php echo $chatOptionsVariable?>.attr_online != 'undefined') {\n\t    \t\tif (<?php echo $chatOptionsVariable?>.attr_online.length > 0){\n\t\t\t\t\tfor (var index in <?php echo $chatOptionsVariable?>.attr_online) {\n\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariable?>.attr_online[index] != 'undefined' && typeof <?php echo $chatOptionsVariable?>.attr_online[index].name != 'undefined') {\n\t\t\t\t\t\t\targumentsQuery.push('onattr['+<?php echo $chatOptionsVariable?>.attr_online[index].name+']='+encodeURIComponent(<?php echo $chatOptionsVariable?>.attr_online[index].value));\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t    \t\t};\n\t    \t};\n    \t};\n\n        if (argumentsQuery.length > 0) {\n            return '&'+argumentsQuery.join('&');\n        };\n\n    \treturn '';\n    },\n\n    parseStorageArguments : function() {\n    \tif (sessionStorage && sessionStorage.getItem('lhc_ref') && sessionStorage.getItem('lhc_ref') != '') {\n    \t\treturn '&r='+encodeURIComponent(sessionStorage.getItem('lhc_ref'));\n    \t}\n    \treturn '';\n    },\n\n\taddEvent : (function () {\n\t  if (document.addEventListener) {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.addEventListener(type, fn, false);\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lh_inst.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  } else {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.attachEvent('on' + type, function () { return fn.call(el, window.event); });\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lh_inst.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  }\n\t})(),\n\n\tremoveEvent : function(target, type, callback) {\n        if (target.removeEventListener){\n            target.removeEventListener(type,callback);\n        } else {\n            target.detachEvent('on'+type,callback);\n        }\n    },\n\n\t<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/show_start_window.tpl.php')); ?>\n\n    toggleStatusWidget : function(hide){\n      if(document.getElementById('<?php echo $chatCSSPrefix?>_status_container') != null) {\n        if (hide == true){\n          this.addClass(document.getElementById('<?php echo $chatCSSPrefix?>_status_container'),'hide-status');\n        } else {\n          this.removeClass(document.getElementById('<?php echo $chatCSSPrefix?>_status_container'),'hide-status');\n        }\n      }\n    },\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/open_chat_window.tpl.php')); ?>\n\n    chatOpenedCallback : function(type){\n    \tif (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback.start_chat_cb != 'undefined') {\n    \t\t<?php echo $chatOptionsVariable?>.callback.start_chat_cb(type+this.substatus);\n    \t\tthis.substatus = '';\n    \t}\n    },\n\n    chatClosedCallback : function(type){\n      if (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback.close_chat_cb != 'undefined') {\n        <?php echo $chatOptionsVariable?>.callback.close_chat_cb(type+this.substatus);\n        this.substatus = '';\n      }\n    },\n\n    genericCallback : function(name){\n    \tif (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback[name] != 'undefined') {\n    \t\t<?php echo $chatOptionsVariable?>.callback[name](this);\n    \t}\n    },\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/show_status_widget.tpl.php')); ?>\n\n    timeoutInstance : null,\n\n    stopCheckNewMessage : function() {\n        clearTimeout(this.timeoutInstance);\n    },\n\n    tag : '',\n\n    addTag : function(params) {\n\n        if (typeof params === 'string') {\n            var params = {tag : params};\n        }\n\n        if (typeof params['child_mode'] !== 'undefined' && params['child_mode'] == true && typeof(parent) !== 'undefined') {\n            if (typeof window.parent.lh_inst !== 'undefined') {\n                window.parent.lh_inst.addTag({'tag':params['tag']});\n            } else {\n                parent.postMessage('lhc_add_tag:'+params['tag'], '*');\n            }\n        } else {\n            this.tag = this.tag != '' ? this.tag + ',' + params['tag'] : '&tag='+params['tag'];\n            if (this.timeoutStatusWidgetOpen == 0) {\n                this.startNewMessageCheckSingle();\n            }\n        }\n    },\n\n    updateAttribute : function(attributes) {\n        var xhr = new XMLHttpRequest();\n        xhr.open( \"POST\", '<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/updateattribute'+this.getAppendCookieArguments(), true);\n     \txhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n     \txhr.send( \"data=\" + encodeURIComponent( this.JSON.stringify(attributes) ) );\n    },\n\n    startNewMessageCheck : function() {\n    \t<?php /*var vid = this.cookieDataPers.vid;\n    \tvar inst = this;\n    \tvar locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n\n        this.timeoutInstance = setTimeout(function() {\n            lh_inst.removeById('lhc_operator_message');\n            var dynamic = inst.dynamicAssigned.length > 0 ? '/(dyn)/' +  inst.dynamicAssigned.join('/') : '';\n            var th = document.getElementsByTagName('head')[0];\n            var s = document.createElement('script');\n            s.setAttribute('id','lhc_operator_message');\n            s.setAttribute('type','text/javascript');\n            s.setAttribute('src','<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+lh_inst.lang+'/chat/chatcheckoperatormessage<?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $theme !== false ? print '/(theme)/'.$theme->id : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $department !== false ? print '/(department)/'.$department : ''?><?php $identifier !== false ? print '/(identifier)/'.htmlspecialchars($identifier) : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?><?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ?  '/(fullheight)/true' : '/(fullheight)/false' ?>/(vid)/'+vid + lh_inst.survey_id + '/(uactiv)/'+lh_inst.userActive+'/(wopen)/'+lh_inst.timeoutStatusWidgetOpen+dynamic+'?l='+locationCurrent+inst.tag+'&dt='+encodeURIComponent(document.title)+'&ts='+Date.now());\n            th.appendChild(s);\n            lh_inst.startNewMessageCheck();\n        }, <?php echo (int)(erLhcoreClassModelChatConfig::fetch('sync_sound_settings')->data['check_for_operator_msg']*1000); ?> );*/ ?>\n    },\n\n    getTzOffset : function(){\n\t    Date.prototype.stdTimezoneOffset = function() {\n\t\t    var jan = new Date(this.getFullYear(), 0, 1);\n\t\t    var jul = new Date(this.getFullYear(), 6, 1);\n\t\t    return Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n\t\t};\n\n\t\tDate.prototype.dst = function() {\n\t\t    return this.getTimezoneOffset() < this.stdTimezoneOffset();\n\t\t};\n\n\t\tvar today = new Date();\n\t\tvar timeZoneOffset = 0;\n\n\t\tif (today.dst()) {\n\t\t\ttimeZoneOffset = today.getTimezoneOffset();\n\t\t} else {\n\t\t\ttimeZoneOffset = today.getTimezoneOffset()-60;\n\t\t};\n\n\t\treturn (timeZoneOffset/60)*-1;\n    },\n\n    startNewMessageCheckSingle : function() {\n        if (!lh_inst.cookieData.hash) {\n            var vid = this.cookieDataPers.vid;\n            lh_inst.removeById('lhc_operator_message');\n            var th = document.getElementsByTagName('head')[0];\n            var s = document.createElement('script');\n            var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n            var tzOffset = this.getTzOffset();\n\n            var dynamic = this.dynamicAssigned.length > 0 ? '/(dyn)/' +  this.dynamicAssigned.join('/'): '';\n\n            s.setAttribute('id','lhc_operator_message');\n            s.setAttribute('type','text/javascript');\n            s.setAttribute('src','<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/chatcheckoperatormessage<?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php is_object($theme) ? print '/(theme)/'.$theme->id : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $department !== false ? print '/(department)/'.$department : ''?><?php $identifier !== false ? print '/(identifier)/'.htmlspecialchars($identifier) : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?><?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ?  '/(fullheight)/true' : '/(fullheight)/false' ?>/(tz)/' + tzOffset + this.survey_id + '/(count_page)/1/(vid)/'+vid+'/(uactiv)/'+lh_inst.userActive+'/(wopen)/'+lh_inst.timeoutStatusWidgetOpen+dynamic+'?l='+locationCurrent+this.tag+this.parseStorageArguments()+this.parseOptionsOnline()+this.parseOptions()+'&dt='+encodeURIComponent(document.title)+'&ts='+Date.now());\n            th.appendChild(s);\n        }\n    },\n\n    logPageView : function() {\n    \tvar vid = this.cookieDataPers.vid;\n        var th = document.getElementsByTagName('head')[0];\n        var s = document.createElement('script');\n        var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n        var tzOffset = this.getTzOffset();\n        s.setAttribute('id','lhc_log_pageview');\n        s.setAttribute('type','text/javascript');\n        s.setAttribute('src','<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/logpageview<?php $department !== false ? print '/(department)/'.$department : ''?><?php $identifier !== false ? print '/(identifier)/'.htmlspecialchars($identifier) : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?>/(tz)/'+tzOffset+'/(vid)/' + vid + this.survey_id + '/(uactiv)/'+lh_inst.userActive+'/(wopen)/'+lh_inst.timeoutStatusWidgetOpen+'?l='+locationCurrent+this.parseStorageArguments()+this.parseOptionsOnline()+'&dt='+encodeURIComponent(document.title)+'&ts='+Date.now());\n        th.appendChild(s);\n    },\n\n    updateJSVars : function(vars){\n        var xhr = new XMLHttpRequest();\n        xhr.open( \"POST\", '<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/updatejsvars'+this.getAppendCookieArguments(), true);\n        xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        xhr.send( \"data=\" + encodeURIComponent( this.JSON.stringify(vars) ) );\n    },\n\n    storeEvents : function() {\n        if (typeof <?php echo $chatOptionsVariable?>.events != 'undefined') {\n            if (<?php echo $chatOptionsVariable?>.events.length > 0) {\n                 var xhr = new XMLHttpRequest();\n                 xhr.open( \"POST\", '<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/logevent'+this.getAppendCookieArguments(), true);\n             \t xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n             \t xhr.send( \"data=\" + encodeURIComponent( this.JSON.stringify(<?php echo $chatOptionsVariable?>.events) ) );\n             \t <?php echo $chatOptionsVariable?>.events = new Array();\n            }\n        }\n    },\n\n    logEvent : function(events) {\n        <?php echo $chatOptionsVariable?>.events = events;\n        this.storeEvents();\n    },\n\n    removeCookieAttr : function(attr){\n    \tif (this.cookieData[attr]) {\n    \t\tdelete this.cookieData[attr];\n    \t\tthis.storeSesCookie();\n    \t}\n    },\n\n    addCookieAttribute : function(attr, value){\n    \tif (!this.cookieData[attr] || this.cookieData[attr] != value){\n\t    \tthis.cookieData[attr] = value;\n\t    \tthis.storeSesCookie();\n    \t}\n    },\n\n    storePersistenCookie : function() {\n    \ttry {\n            var cookieParams = {expires:16070400};\n\n            if ((this.isWildcardCookie() === null && 0 == <?php echo (int)$noWildcardCookie;?>) || (this.isWildcardCookie() === true)) {\n                cookieParams.domain = <?php ($trackDomain != '' ? print \"'.{$trackDomain}'\" : print \"this.getCookieDomain()\");?>;\n            }\n\n\t    \tlhc_Cookies('lhc_per',this.JSON.stringify(this.cookieDataPers),cookieParams);\n\t    } catch(err) { };\n    },\n\n    checkCookieTime : function() {\n        if (!this.cookieDataPers['ex'] || this.cookieDataPers['ex'] < Math.round(Date.now()/100000000)) {\n            this.cookieDataPers['ex'] = Math.round(Date.now()/100000000)+10;\n            this.storePersistenCookie();\n            var xhr = new XMLHttpRequest();\n            xhr.open( \"GET\", '<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/extendcookie/'+this.cookieDataPers.vid, true);\n            xhr.send();\n        }\n    },\n\n\tsetVid : function(vid) {\n\t\tif ((this.cookieDataPers.vid && vid != this.cookieDataPers.vid) || !this.cookieDataPers.vid) {\n\n\t\t\tvar old = this.cookieDataPers.vid;\n\t\t\tthis.addCookieAttributePersistent('vid',vid);\n\n\t\t\t<?php if ($trackOnline == true && $disable_online_tracking == false) : ?>\n\t\t\tlh_inst.stopCheckNewMessage();\n\t\t\tlh_inst.logPageView();\n\t\t\tlh_inst.startNewMessageCheckSingle();\n\n\t\t\t<?php endif;?>\n\n\t\t\tif (old && old != this.cookieDataPers.vid) {\n\t\t\t\tvar inst = this;\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\t        xhr.open( \"POST\", '<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+inst.lang+'/chat/setnewvid', true);\n\t\t\t     \txhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\t\t\t     \txhr.send( \"data=\" + encodeURIComponent( inst.JSON.stringify({'vid':old,'new':vid}) ) );\n\t\t\t\t},1000);\n\t\t\t}\n\t\t}\n\t},\n\n    storeSesCookie : function(){\n    \t<?php if ($trackDomain == '' && $disableHTML5Storage == 0) : ?>\n    \tif (localStorage) {\n    \t\ttry {\n    \t\t\tlocalStorage.setItem('lhc_ses',this.JSON.stringify(this.cookieData));\n    \t\t} catch(err) { // Fallback to cookie\n                var cookieParams = {};\n                if ((this.isWildcardCookie() === null && 0 == <?php echo (int)$noWildcardCookie;?>) || (this.isWildcardCookie() === true)) {\n                    cookieParams.domain = <?php ($trackDomain != '' ? print \"'.{$trackDomain}'\" : print \"this.getCookieDomain()\");?>;\n                }\n                lhc_Cookies('lhc_ses',this.JSON.stringify(this.cookieData),cookieParams);\n    \t\t};\n    \t} else {\n    \t<?php endif;?>\n            var cookieParams = {};\n            if ((this.isWildcardCookie() === null && 0 == <?php echo (int)$noWildcardCookie;?>) || (this.isWildcardCookie() === true)) {\n                cookieParams.domain = <?php ($trackDomain != '' ? print \"'.{$trackDomain}'\" : print \"this.getCookieDomain()\");?>;\n            }\n            lhc_Cookies('lhc_ses',this.JSON.stringify(this.cookieData),cookieParams);\n\t    <?php if ($trackDomain == '' && $disableHTML5Storage == 0) : ?>}<?php endif;?>\n    },\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/init_session_storage.tpl.php')); ?>\n\n    storeReferrer : function(ref){\n    \tif (sessionStorage && !sessionStorage.getItem('lhc_ref')) {\n    \t\ttry {\n    \t\t\tsessionStorage.setItem('lhc_ref',ref);\n    \t\t} catch(err) {};\n    \t}\n    },\n\n    executeExtension : function(extension, args) {\n        if (this.iframeLoaded) {\n            if (this.isMinimized === true) {\n                this.min()\n            } else {\n                this.showStartWindow();\n            }\n            var iframe = document.getElementById('<?php echo $chatCSSPrefix?>_iframe');\n            if (iframe !== null) {\n                iframe.contentWindow.postMessage('lhc_load_ext:'+extension + '::' + this.JSON.stringify(typeof args !== 'undefined' ? args : null), '*');\n            }\n        } else {\n            this.showStartWindow();\n            this.extensionCommands.push({'ext':extension, 'arg':args});\n        }\n    },\n\n    makeScreenshot : function() {\n    \tvar inst = this;\n    \tif (typeof html2canvas == \"undefined\") {\n\t\t   \t\tvar th = document.getElementsByTagName('head')[0];\n\t\t        var s = document.createElement('script');\n\t\t        s.setAttribute('type','text/javascript');\n\t\t        s.setAttribute('src','<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('js/html2canvas.min.js');?>');\n\t\t        th.appendChild(s);\n\t\t        s.onreadystatechange = s.onload = function(){\n\t\t        \tinst.makeScreenshot();\n\t\t        };\n    \t} else {\n\t\t    \ttry {\n\t\t\t\t  \thtml2canvas(document.body, {\n\t\t\t\t\t\t  onrendered: function(canvas) {\n\t\t\t\t\t\t         var xhr = new XMLHttpRequest();\n\t\t\t\t\t\t         xhr.open( \"POST\", '<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+lh_inst.lang+'/file/storescreenshot'+inst.getAppendCookieArguments(), true);\n\t\t\t\t\t\t\t     xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\t\t\t\t\t\t\t     xhr.send( \"data=\" + encodeURIComponent( canvas.toDataURL() ) );\n\t\t\t\t\t\t  }\n\t\t\t\t\t});\n\t\t\t   } catch(err) {\n\n\t\t\t   }\n    \t};\n    },\n\n    finishScreenSharing : function(){\n    \tthis.removeById('lhc_status_mirror');\n\t\tthis.removeCookieAttr('shr');\n\t\tthis.removeCookieAttr('shrm');\n\t\tthis.isSharing = false;\n\n\t\tvar vid = this.cookieDataPers.vid;\n        var th = document.getElementsByTagName('head')[0];\n        var s = document.createElement('script');\n        var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n        var tzOffset = this.getTzOffset();\n        s.setAttribute('id','lhc_finish_shr');\n        s.setAttribute('type','text/javascript');\n        s.setAttribute('src','<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+lh_inst.lang+'/cobrowse/finishsession/(sharemode)/'+lh_inst.sharemode+lh_inst.getAppendCookieArguments());\n        th.appendChild(s);\n        this.cobrowser = null;\n    },\n\n    cobrowse : null,\n\n    startCoBrowse : function(chatHash,sharemode){\n    \tvar inst = this;\n    \tif (this.isSharing == false && (this.cookieData.shr || <?php echo (int)erLhcoreClassModelChatConfig::fetch('sharing_auto_allow')->current_value?> == 1 || confirm(<?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Allow operator to see your page content?'),ENT_QUOTES))?>)))\n    \t{\n    \t\tthis.sharehash = chatHash || this.cookieData.hash || this.cookieData.shr;\n    \t\tthis.sharemode = sharemode || this.cookieData.shrm || 'chat';\n    \t\tthis.addCookieAttribute('shr',this.sharehash);\n    \t\tthis.addCookieAttribute('shrm',this.sharemode);\n\n\t    \tif (typeof TreeMirror == \"undefined\") {\n\t\t\t   \t\tvar th = document.getElementsByTagName('head')[0];\n\t\t\t        var s = document.createElement('script');\n\t\t\t        s.setAttribute('type','text/javascript');\n\t\t\t        s.setAttribute('src','<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::designJS('js/cobrowse/compiled/cobrowse.visitor.min.js');?>');\n\t\t\t        th.appendChild(s);\n\t\t\t        s.onreadystatechange = s.onload = function(){\n\t\t\t        \tinst.startCoBrowse(inst.sharehash,this.sharemode);\n\t\t\t        };\n\t    \t} else {\n\t\t    \ttry {\n\t\t    \t\tthis.isSharing = true;\n\t\t    \t\tthis.addCookieAttribute('shr',this.sharehash);\n\t\t    \t\tthis.addCookieAttribute('shrm',this.sharemode);\n\t\t    \t\t<?php include(erLhcoreClassDesign::designtpl('lhcobrowse/userinit.tpl.php')); ?>\n\t\t\t   } catch(err) {\n\t\t\t  \t\tconsole.log(err);\n\t\t\t   }\n\t    \t};\n    \t}\n    },\n\n    lhc_need_help_hide :function() {\n    \tthis.removeById('<?php echo $chatCSSPrefix?>_need_help_container');\n    \t<?php $needHelpTimeout = $theme !== false ? $theme->show_need_help_timeout : erLhcoreClassModelChatConfig::fetch('need_help_tip_timeout')->current_value; ?>\n    \t<?php if ($needHelpTimeout > 0) : ?>\n    \tthis.addCookieAttributePersistent('lhc_hnh','<?php echo (($needHelpTimeout * 3600) + time())?>');\n    \t<?php else : ?>\n    \tif (localStorage) {\n\t    \tlocalStorage.removeItem('lhc_hnh');\n    \t};\n    \tthis.addCookieAttribute('lhc_hnh','<?php echo ((24 * 3600) + time())?>');\n    \t<?php endif; ?>\n\n    \treturn false;\n    },\n\n    getPersistentAttribute : function(attr) {\n    \t<?php if ($trackDomain == '' && $disableHTML5Storage == 0) : ?>\n    \tif (localStorage) {\n\t    \treturn localStorage.getItem(attr);\n    \t} else {\n    \t<?php endif;?>\n\t    \tif (this.cookieDataPers[attr]){\n\t\t    \treturn this.cookieDataPers[attr];\n\t    \t}\n\t    \treturn null;\n    \t<?php if ($trackDomain == '' && $disableHTML5Storage == 0) : ?>}<?php endif;?>\n    },\n\n    addCookieAttributePersistent : function(attr, value){\n    \t<?php if ($trackDomain == '' && $disableHTML5Storage == 0) : ?>\n    \tif (localStorage) {\n    \t\ttry {\n    \t\t\tlocalStorage.setItem(attr,value);\n    \t\t} catch(err) {\n    \t\t\tif (!this.cookieDataPers[attr] || this.cookieDataPers[attr] != value){\n\t\t\t    \tthis.cookieDataPers[attr] = value;\n\t\t\t    \tthis.storePersistenCookie();\n\t\t    \t};\n    \t\t};\n    \t} else {\n    \t<?php endif;?>\n    \tif (!this.cookieDataPers[attr] || this.cookieDataPers[attr] != value){\n\t    \tthis.cookieDataPers[attr] = value;\n\t    \tthis.storePersistenCookie();\n    \t}\n    \t<?php if ($trackDomain == '' && $disableHTML5Storage == 0) : ?>}<?php endif;?>\n    },\n\n    lhc_need_help_click : function() {\n    \tthis.lhc_need_help_hide();\n    \tthis.lh_openchatWindow();\n    },\n\n    initLanguage : function() {\n   \t\tvar langUser = this.getPersistentAttribute('lng');\n    \tthis.lang = (langUser != null && langUser != '' && langUser != undefined && this.langDefault != langUser) ? langUser : this.lang;\n    },\n\n    resetTimeoutActivity : function() {\n\n        var wasInactive = this.userActive == 0;\n        this.userActive = 1;\n\n        if (wasInactive == true) {\n            this.syncUserStatus(1);\n        }\n\n        clearTimeout(this.timeoutActivity);\n        var _that = this;\n        this.timeoutActivity = setTimeout(function(){\n            _that.userActive = 0;\n            _that.syncUserStatus(1);\n        }, 300*1000);\n    },\n\n    timeoutActivity : null,\n    userActive : 1,\n    timeoutStatuscheck : null,\n    timeoutStatusWidgetOpen : 0,\n\n    syncUserStatus : function(sender) {\n    \tvar hashAppend = this.cookieData.hash ? '/(hash)/'+this.cookieData.hash : '';\n\t\tvar hashResume = this.cookieData.hash_resume ? '/(hash_resume)/'+this.cookieData.hash_resume : '';\n        this.removeById('lhc_check_status');\n        var th = document.getElementsByTagName('head')[0];\n        var s = document.createElement('script');\n        s.setAttribute('id','lhc_check_status');\n        s.setAttribute('type','text/javascript');\n        s.setAttribute('src','<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/chatcheckstatus<?php $department !== false ? print '/(department)/'.$department : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?><?php $disable_online_tracking === true ? print '/(dot)/true' : ''?><?php $hide_offline == 'true' ? print '/(hide_offline)/true' : ''?>/(status)/' + this.isOnline + this.survey_id + (this.cookieDataPers.vid ? '/(vid)/'+this.cookieDataPers.vid : '')+ hashAppend + hashResume + '/(uactiv)/'+this.userActive+'/(wopen)/'+this.timeoutStatusWidgetOpen + '/(uaction)/'+sender+'/(isproactive)/'+this.isProactivePending+'/?ts='+Date.now());\n        th.appendChild(s);\n    },\n\n    checkStatusChat : function() {\n    \tif (<?php echo (int)erLhcoreClassModelChatConfig::fetch('checkstatus_timeout')->current_value > 0 ? 'true' : 'false' ?> || this.isProactivePending === 1) {\n        \tclearTimeout(this.timeoutStatuscheck);\n        \tvar _that = this;\n            this.timeoutStatuscheck = setTimeout(function() {\n                _that.syncUserStatus(0);\n                _that.checkStatusChat();\n            },<?php echo ((int)erLhcoreClassModelChatConfig::fetch('checkstatus_timeout')->current_value > 0 ? (int)erLhcoreClassModelChatConfig::fetch('checkstatus_timeout')->current_value : 10)*1000; ?>);\n        }\n    },\n\n    refreshCustomFields : function() {\n        var xhr = new XMLHttpRequest();\n        xhr.open( \"POST\", '<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+lh_inst.lang+'/chat/refreshcustomfields'+this.getAppendCookieArguments() , true);\n\t    xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\t    xhr.send(this.parseOptions());\n    },\n\n    invitationUrl  :  '',\n\n    showBasicInvitation : function(url) {\n        lh_inst.isProactivePending = 1;\n        lh_inst.invitationUrl = url;\n        var elm = document.getElementById('<?php echo $chatCSSPrefix?>_status_container');\n        if (elm !== null){\n            this.addClass(elm,'<?php echo $chatCSSPrefix?>_invitation-mode');\n        }\n    },\n\n    attatchActivityListeners : function() {\n        <?php if ((int)erLhcoreClassModelChatConfig::fetch('track_activity')->current_value > 0) : ?>\n        var resetTimeout = function() {\n            lh_inst.resetTimeoutActivity();\n        };\n\n        <?php if ((int)erLhcoreClassModelChatConfig::fetch('track_mouse_activity')->current_value == 1) : ?>\n        this.addEvent(window,'mousemove',resetTimeout);\n        this.addEvent(document,'mousemove',resetTimeout);\n        <?php endif;?>\n\n        this.addEvent(window,'mousedown',resetTimeout);\n        this.addEvent(window,'click',resetTimeout);\n        this.addEvent(window,'scroll',resetTimeout);\n        this.addEvent(window,'keypress',resetTimeout);\n        this.addEvent(window,'load',resetTimeout);\n        this.addEvent(document,'scroll',resetTimeout);\n        this.addEvent(document,'touchstart',resetTimeout);\n        this.addEvent(document,'touchend',resetTimeout);\n        this.resetTimeoutActivity();\n        <?php endif;?>\n    },\n\n    sendHTMLSnippet : function(messageId, options) {\n        var hashAppend = this.cookieData.hash ? '/(hash)/'+this.cookieData.hash : '';\n        var hashResume = this.cookieData.hash_resume ? '/(hash_resume)/'+this.cookieData.hash_resume : '';\n        var th = document.getElementsByTagName('head')[0];\n        var s = document.createElement('script');\n        s.setAttribute('type','text/javascript');\n        var optionsParts = options.split('_');\n        s.setAttribute('src','<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/htmlsnippet/'+messageId+'/'+optionsParts[0]+\"/\"+optionsParts[1]+'<?php $department !== false ? print '/(department)/'.$department : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?><?php $disable_online_tracking === true ? print '/(dot)/true' : ''?><?php $hide_offline == 'true' ? print '/(hide_offline)/true' : ''?>/(status)/' + this.isOnline + this.survey_id + (this.cookieDataPers.vid ? '/(vid)/'+this.cookieDataPers.vid : '')+ hashAppend + hashResume + '/(uactiv)/'+this.userActive+'/(wopen)/'+this.timeoutStatusWidgetOpen + '/(isproactive)/'+this.isProactivePending+'/?ts='+Date.now());\n        th.appendChild(s);\n    },\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/send_notification.tpl.php')); ?>\n\n    handleMessage : function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n        var originDomain = e.origin.replace(\"http://\", \"\").replace(\"https://\", \"\").replace(/:(\\d+)$/,'');\n\n        // We allow to send events only from chat installation or page where script is embeded.\n        if (\n            originDomain !== '<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?>' &&\n            originDomain !== document.domain &&\n            action != 'lhc_sizing_chat_survey' &&\n            action != 'lh_survey_runed' &&\n            action != 'lhc_end_cookies'\n        ) {\n            return;\n        }\n\n        if (action == 'lhc_newopmsg') {\n            if ( lh_inst.isMinimized == true) {\n                var msgNum = document.getElementById('<?php echo $chatCSSPrefix?>-msg-number');\n                msgNum.innerHTML = (parseInt(msgNum.msg_number)+1);\n                msgNum.msg_number++;\n                var dm = document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n                lh_inst.addClass(dm, '<?php echo $chatCSSPrefix?>-has-unread-message');\n            }\n        } else if (action == 'lhc_sizing_chat') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('<?php echo $chatCSSPrefix?>_iframe');\n    \t\tvar iframeContainer = document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n\n            if (typeof lh_inst.pendingHeight !== 'undefined' && typeof lh_inst.heightSet == 'undefined' && lh_inst.pendingHeight > 0) {\n                height = lh_inst.pendingHeight;\n                lh_inst.heightSet = true;\n            }\n\n    \t\tif (elementObject){\n    \t\t\telementObject.height = height;\n    \t\t\telementObject.style.height = height+'px';\n    \t\t}\n\n    \t\tiframeContainer.className = iframeContainer.className;\n    \t} else if (action == 'lhc_ch') {\n    \t\tvar parts = e.data.split(':');\n    \t\tif (parts[1] != '' && parts[2] != '') {\n    \t\t\tlh_inst.addCookieAttribute(parts[1],parts[2]);\n    \t\t\tif (parts[1] == 'hash') {\n                    lh_inst.chat_started = true;\n    \t\t\t}\n    \t\t}\n    \t} else if (action == 'lhc_open_restore') {\n    \t\tlh_inst.lh_openchatWindow();\n        } else if (action == 'lhc_widget_loaded') {\n            lh_inst.iframeLoaded = true;\n            if (lh_inst.iframePreloaded == false) {\n                lh_inst.toggleStatusWidget(true);\n                lh_inst.removeClass(document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>'),'<?php echo $chatCSSPrefix?>-delayed');\n            }\n\n            if (lh_inst.extensionCommands.length > 0) {\n                lh_inst.extensionCommands.forEach(function(evt) {\n                    var iframe = document.getElementById('<?php echo $chatCSSPrefix?>_iframe');\n                    if (iframe !== null) {\n                        iframe.contentWindow.postMessage('lhc_load_ext:' + evt['ext'] + '::' + lh_inst.JSON.stringify(typeof evt['arg'] !== 'undefined' ? evt['arg'] : null), '*');\n                    }\n                });\n                lh_inst.extensionCommands = [];\n            }\n\n    \t} else if (action == 'lhc_continue_chat') {\n    \t\tlh_inst.showStartWindow();\n        } else if (action == 'lhc_html_snippet') {\n            lh_inst.sendHTMLSnippet(e.data.split(':')[1],e.data.split(':')[2]);\n    \t} else if (action == 'lhc_add_tag') {\n    \t\tlh_inst.addTag({tag:e.data.split(':')[1]});\n    \t} else if (action == 'lhc_cfrefresh') {\n    \t\tlh_inst.refreshCustomFields();\n    \t} else if (action == 'lhc_screenshot') {\n    \t\tlh_inst.makeScreenshot();\n    \t} else if (action == 'lhc_disable_survey') {\n    \t\tlh_inst.surveyShown = true;\n    \t} else if (action == 'lhc_chat_closed_explicit') {\n    \t    lh_inst.explicitClose = true;\n    \t\tlh_inst.hide();\n    \t} else if (action == 'lhc_chat_closed') {\n    \t    var parts = e.data.split(':');\n    \t    parts.shift();\n    \t    if (parts.length > 0){\n    \t       lh_inst.appendArg(parts);\n    \t    }\n    \t\tlh_inst.showSurvey();\n    \t} else if (action == 'lhc_cobrowse') {\n    \t\tlh_inst.startCoBrowse(e.data.split(':')[1],'chat');\n    \t} else if (action == 'lhc_cobrowse_online') {\n    \t\tlh_inst.startCoBrowse(e.data.split(':')[1],'onlineuser');\n    \t} else if (action == 'lhc_chat_redirect') {\n    \t\tdocument.location = e.data.split(':')[1].replace(new RegExp('__SPLIT__','g'),':');\n    \t} else if (action == 'lhc_cobrowse_cmd') {\n    \t\tif (lh_inst.cobrowser !== null){\n    \t\tlh_inst.cobrowser.handleMessage(e.data.split(':'));\n    \t\t};\n    \t} else if (action == 'lhc_lang') {\n    \t\tvar lang = e.data.split(':')[1];\n    \t\tif (lang != undefined) {\n    \t\t\tlh_inst.addCookieAttributePersistent('lng',lang);\n    \t\t\tlh_inst.lang = lang;\n    \t\t} else {\n    \t\t\tlh_inst.addCookieAttributePersistent('lng','');\n    \t\t\tlh_inst.lang = '';\n    \t\t}\n        } else if (action == 'lhc_notification') {\n                var parts = e.data.split(':');\n                lh_inst.sendNotification(parts);\n    \t} else if (action == 'lh_callback') {\n    \t\tvar functionName = e.data.split(':')[1];\n    \t\tlh_inst.genericCallback(functionName);\n    \t} else if (action == 'lhc_close') {\n    \t\tlh_inst.hide();\n                lh_inst.chatClosedCallback('message')\n    \t} <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/handlemessage_multiinclude.tpl.php')); ?>\n    }\n};\n\nfunction preloadDataLHC() {\n\n    if (lh_inst.rendered == true) {\n        return;\n    }\n\n    lh_inst.rendered = true;\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/lhc_chat_multiinclude.tpl.php')); ?>\n\n    var cookieData = lhc_Cookies('lhc_per');\n\n    if ( typeof cookieData === \"string\" && cookieData) {\n\n\n        if (cookieData.indexOf('|') !== -1) {\n            var contentReturn = {};\n            var parts = cookieData.split('|');\n\n            for (var i = 0; i < parts.length / 2; i++) {\n                contentReturn[parts[i * 2]] = parts[(i * 2) + 1];\n            }\n\n            lh_inst.cookieDataPers = contentReturn;\n\n        } else {\n            lh_inst.cookieDataPers = lh_inst.JSON.parse(cookieData);\n        }\n\n        if (!lh_inst.cookieDataPers.vid) {\n            lh_inst.cookieDataPers = {<?php isset($vid) ? print 'vid:\\''.$vid.'\\'' : ''?>};\n            lh_inst.storePersistenCookie();\n        } else {\n            lh_inst.checkCookieTime();\n        }\n\n    } else {\n        lh_inst.cookieDataPers = {<?php isset($vid) ? print 'vid:\\''.$vid.'\\'' : ''?>};\n        lh_inst.storePersistenCookie();\n    };\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/lhc_chat_after_cookie_multiinclude.tpl.php')); ?>\n\n    lh_inst.initSessionStorage();\n    lh_inst.initLanguage();\n\n    <?php if ($referrer != '') : ?>\n        lh_inst.storeReferrer(<?php echo json_encode($referrer)?>);\n    <?php endif; ?>\n\n\n    <?php if (!($isOnlineHelp == false && $hide_offline == 'true')) : ?>\n\n        lh_inst.showStatusWidget();\n\n        if (lh_inst.cookieData.hash) {\n        lh_inst.stopCheckNewMessage();\n        lh_inst.substatus = '_reopen';\n        lh_inst.toggleStatusWidget(true);\n        lh_inst.showStartWindow(undefined,true);\n        <?php if (($track_online_users == true || $trackOnline == true) && $disable_online_tracking == false) : ?>\n            lh_inst.logPageView();\n            lh_inst.online_tracked = true;\n        <?php endif;?>\n        } else {\n            lh_inst.preloadWidget();\n        }\n\n        <?php /*if ($check_operator_messages == 'true' && $disable_pro_active == false && $disable_online_tracking == false) : ?>\n            if (!lh_inst.cookieData.hash) {\n            lh_inst.startNewMessageCheck();\n            lh_inst.online_tracked = true;\n            }\n        <?php endif;*/ ?>\n\n        <?php if ($disable_pro_active == false && $track_online_users == true && $disable_online_tracking == false) : ?>\n            if (!lh_inst.cookieData.hash) {\n            lh_inst.startNewMessageCheckSingle();\n            lh_inst.online_tracked = true;\n            }\n        <?php endif;?>\n\n        <?php if ($trackOnline == true && $disable_online_tracking == false) : ?>\n            if (lh_inst.online_tracked == false) {\n            lh_inst.logPageView();\n            };\n        <?php endif;?>\n\n        if (lh_inst.cookieData.shr) {\n        lh_inst.startCoBrowse(lh_inst.cookieData.shr);\n        };\n\n    <?php elseif ($track_online_users == true) : ?>\n        lh_inst.logPageView();\n    <?php endif;?>\n\n    // Try to monitor variable if it's lhc_var\n    try {\n        if (typeof lhc_var !== 'undefined')\n        {\n            var validator = {\n                set: function(obj, prop, value) {\n                    // The default behavior to store the value\n                    obj[prop] = value;\n\n                    clearTimeout(lh_inst.updateVarsTimeout);\n\n                    lh_inst.updateVarsTimeout = setTimeout(function(){\n                        lh_inst.updateJSVars(obj);\n                    },1000);\n\n                    // Indicate success\n                    return true;\n                }\n            };\n            lhc_var = new Proxy(lhc_var,validator);\n        }\n    } catch(err) {\n\n    };\n\n\n\n    lh_inst.checkStatusChat();\n    lh_inst.attatchActivityListeners();\n    lh_inst.storeEvents();\n    lh_inst.genericCallback('loaded');\n}\n\npreloadDataLHC();\n\nfunction resetLHCRender(){\n    lh_inst.rendered = false;\n}\n\nif ( window.addEventListener ){\n    // FF\n    window.addEventListener(\"message\", lh_inst.handleMessage, false);\n    window.addEventListener(\"pageshow\", preloadDataLHC, false);\n    window.addEventListener(\"beforeunload\", resetLHCRender, false);\n} else if ( window.attachEvent ) {\n    // IE\n    window.attachEvent(\"onmessage\", lh_inst.handleMessage);\n    window.attachEvent(\"onpageshow\", preloadDataLHC);\n    window.attachEvent(\"beforeunload\", resetLHCRender);\n} else if ( document.attachEvent ) {\n    // IE\n    document.attachEvent(\"onmessage\", lh_inst.handleMessage);\n    document.attachEvent(\"onpageshow\", preloadDataLHC);\n    document.attachEvent(\"beforeunload\", resetLHCRender);\n};\n\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.addEventListener('message', function(event) {\n        if (typeof event.data.lhc_ch !== 'undefined' && typeof event.data.lhc_cid !== 'undefined') {\n            lh_inst.readNotification(event.data.lhc_cid, event.data.lhc_ch);\n        }\n    });\n}\n\n<?php endif;exit; // Hide if offline ?>\n\n\n\n", "<?php \n$iconsStatuses['restore_image_url'] = ($theme !== false && $theme->restore_image_url !== false && strpos($theme->restore_image_url, 'http') !== false);\n$iconsStatuses['minimize_image_url'] = ($theme !== false && $theme->minimize_image_url !== false && strpos($theme->minimize_image_url, 'http') !== false);\n$iconsStatuses['close_image_url'] = ($theme !== false && $theme->close_image_url !== false && strpos($theme->close_image_url, 'http') !== false);\n$iconsStatuses['popup_image_url'] = ($theme !== false && $theme->popup_image_url !== false && strpos($theme->popup_image_url, 'http') !== false);\n$iconsStatuses['online_image_url'] = ($theme !== false && $theme->online_image_url !== false && strpos($theme->online_image_url, 'http') !== false);\n$iconsStatuses['offline_image_url'] = ($theme !== false && $theme->offline_image_url !== false && strpos($theme->offline_image_url, 'http') !== false);\n?>\n<?php if ($theme !== false && $theme->modern_look == 0) : ?>\nthis.iframe_html = '<div id=\"<?php echo $chatCSSLayoutOptions['container_id']?>\" <?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ? 'style=\"height:100%\"' : '' ?>>' +\n    '<?php if ($theme !== false && isset($theme->bot_configuration_array['custom_html_header'])) : ?><?php echo str_replace(array(\"\\n\",\"\\r\"), '',$theme->bot_configuration_array['custom_html_header'])?><?php endif?><div id=\"<?php echo $chatCSSPrefix?>_header\"><?php if ($theme !== false && isset($theme->bot_configuration_array['custom_html_header_body'])) : ?><?php echo str_replace(array(\"\\n\",\"\\r\"), '',$theme->bot_configuration_array['custom_html_header_body'])?><?php endif?><?php if ($theme === false || $theme->hide_close == 0) : ?><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" id=\"<?php echo $chatCSSPrefix?>_close\"><img src=\"<?php if ($theme !== false && $theme->close_image_url != '') : ?><?php echo $theme->close_image_url;?><?php else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/cancel.png');?><?php endif;?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" alt=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" /></a><?php endif;?><?php if (erLhcoreClassModelChatConfig::fetch('disable_popup_restore')->current_value == 0 && ($theme === false || $theme->hide_popup == 0)) : ?><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Open in a new window')?>\" id=\"<?php echo $chatCSSPrefix?>_remote_window\"><img src=\"<?php if ($theme !== false && $theme->popup_image_url != '') : ?><?php echo $theme->popup_image_url;?><?php else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/application_double.png');?><?php endif;?>\" alt=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Open in a new window')?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Open in a new window')?>\" /></a><?php endif; ?><a href=\"#\" id=\"<?php echo $chatCSSPrefix?>_min\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Minimize/Restore')?>\"></a><i title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','New messages')?>\" id=\"<?php echo $chatCSSPrefix?>-msg-number\"></i></div>' +\n    this.iframe_html + '</div>';\nraw_css = \"#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-min {overflow:hidden}#<?php echo $chatCSSPrefix?>_remote_window{padding-left:5px;}.<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_header{min-width:107px} .<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_iframe_container{display:none} .<?php echo $chatCSSPrefix?>-no-transition{ -webkit-transition: none !important; -moz-transition: none !important;-o-transition: none !important;-ms-transition: none !important;transition: none !important;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-delayed{visibility:hidden;position: fixed;left: -90000px!important;right: auto!important;}#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-delayed .<?php echo $chatCSSPrefix?>-cf{display:none}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> * {line-height:100%;direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial;font-size:12px;line-height:100%;box-sizing: content-box;-moz-box-sizing:content-box;padding:0;margin:0;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> img {border:0;}\\n#<?php echo $chatCSSPrefix?>_header{position:relative;z-index:2147483640;height:<?php ($theme !== false && $theme->header_height > 0) ? print $theme->header_height : print '17' ?>px;overflow:hidden;text-align:right;clear:both;background-color:#<?php $theme !== false ? print $theme->header_background : print '525252' ?>;padding:<?php ($theme !== false && $theme->header_padding > 0) ? print $theme->header_padding : print '5' ?>px;}#<?php echo $chatCSSPrefix?>-msg-number{float: left;color: #FFF;font-size: 12px;font-weight: bold;padding-left: 5px;line-height: 20px;} \\n#<?php echo $chatCSSPrefix?>_min{float:left;padding:2px;}#<?php echo $chatCSSPrefix?>_remote_window,#<?php echo $chatCSSPrefix?>_close{padding:2px;float:right;}.<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_min:before{content:url(<?php if ($theme !== false && $theme->restore_image_url != '') : ?><?php echo $theme->restore_image_url;?><?php else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/restore.png');?><?php endif;?>)}#<?php echo $chatCSSPrefix?>_min:before{content: url('<?php if ($theme !== false && $theme->minimize_image_url != '') : ?><?php echo $theme->minimize_image_url;?><?php else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/min.png');?><?php endif;?>'); position: relative;left:0;top;0} #<?php echo $chatCSSPrefix?>_min{width:14px;height:14px;}\\n#<?php echo $chatCSSPrefix?>_close:hover,#<?php echo $chatCSSPrefix?>_min:hover,#<?php echo $chatCSSPrefix?>_remote_window:hover{opacity:0.4;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> {background-color:#FFF;-moz-user-select:none; -khtml-user-drag:element;cursor: move;cursor: -moz-grab;cursor: -webkit-grab;max-height: 100%;overflow: auto;\\nz-index:2147483640;\\n position: fixed;<?php echo $currentPosition['position_body']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-webkit-border-radius: 5px;-moz-border-radius: 5px;border-radius: 5px; }\\n#<?php echo $chatCSSLayoutOptions['container_id']?> iframe{position:relative;display:block;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> #<?php echo $chatCSSPrefix?>_iframe_container{border:<?php ($theme !== false && $theme->widget_border_width > 0) ? print $theme->widget_border_width : print '1' ?>px solid #<?php $theme !== false ? print $theme->widget_border_color : print 'cccccc' ?>;border-top: 0;border-bottom-left-radius: 5px;border-bottom-right-radius: 5px;overflow: hidden;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> iframe.<?php echo $chatCSSPrefix?>-loading{\\nbackground: #FFF url(<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/general/loading.gif');?>) no-repeat center center; }\\n@media only screen and (max-device-width : <?php ($theme !== false && $theme->widget_response_width > 0) ? print $theme->widget_response_width : print 992?>px) { .<?php echo $chatCSSPrefix?>-opened{position: fixed; overflow: hidden; right: 0px; left: 0px; top: 0px; bottom: 0px;} #<?php echo $chatCSSPrefix?>_header{height:30px;} #<?php echo $chatCSSPrefix?>_header a{padding:7px;}#<?php echo $chatCSSLayoutOptions['container_id']?>{position:fixed;left:0!important;right:0!important;bottom:0!important;top:0!important;border:0;border-radius:0}#<?php echo $chatCSSLayoutOptions['container_id']?> #<?php echo $chatCSSPrefix?>_iframe_container{border:0;height: calc(100% - 40px)}#<?php echo $chatCSSLayoutOptions['container_id']?> iframe{width:100% !important;height: 100%!important} .<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_header a{padding:2px;} #<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-min{<?php echo $currentPosition['mobile_position']?>}}\";\n<?php else : ?>\nthis.iframe_html = '<div id=\"<?php echo $chatCSSLayoutOptions['container_id']?>\" <?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ? 'style=\"height:100%\"' : '' ?>>' +\n                              '<a class=\"status-icon ' +\n                              (this.isOnline == true ? 'online-status-icon' : 'offline-status-icon') +\n                              '\" id=\"<?php echo $chatCSSPrefix?>_status-icon-restore\" href=\"#\" ><i title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','New messages')?>\" id=\"<?php echo $chatCSSPrefix?>-msg-number\"></i></a><div id=\"<?php echo $chatCSSPrefix?>_header\"><ul class=\"<?php echo $chatCSSPrefix?>-cf\"><li><a href=\"#\">&#9776;</a><ul class=\"<?php echo $chatCSSPrefix?>-cf\"><?php if ($theme === false || $theme->hide_close == 0) : ?><li><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" id=\"<?php echo $chatCSSPrefix?>_close\"><img src=\"<?php if ($theme !== false && $theme->close_image_url != '') : ?><?php echo $theme->close_image_url;?><?php else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/cancel.png');?><?php endif;?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" alt=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" /></a></li><?php endif;?><?php if (erLhcoreClassModelChatConfig::fetch('disable_popup_restore')->current_value == 0 && ($theme === false || $theme->hide_popup == 0)) : ?><li><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Open in a new window')?>\" id=\"<?php echo $chatCSSPrefix?>_remote_window\"><img src=\"<?php if ($theme !== false && $theme->popup_image_url != '') : ?><?php echo $theme->popup_image_url;?><?php else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/application_double.png');?><?php endif;?>\" alt=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Open in a new window')?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Open in a new window')?>\" /></a></li><?php endif; ?></ul></li></ul><a href=\"#\" id=\"<?php echo $chatCSSPrefix?>_min\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Minimize/Restore')?>\"></a></div>' +\n                              this.iframe_html + '</div>';\n\nraw_css = \"#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-min {overflow:hidden}#<?php echo $chatCSSLayoutOptions['container_id']?> .status-icon{display:none;}#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-min .status-icon{display:inline-block;<?php echo $currentPosition['border_status_modern']?>;<?php echo $currentPosition['widget_radius_modern']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);-moz-box-shadow:<?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);box-shadow: <?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);text-decoration:none;height:41px;width:41px;font-weight:bold;color:<?php $theme !== false ? print '#'.$theme->text_color : print '#000' ?>;display:block;padding:10px;background:#<?php $theme !== false ? print $theme->onl_bcolor : print '0c8fc4' ?> url('<?php if ($theme !== false && $theme->online_image_url !== false) : print $theme->online_image_url; else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/getstatus/online.svg');?><?php endif;?>') no-repeat center center}#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-min .status-icon.offline-status-icon{background:#888888 url('<?php if ($theme !== false && $theme->offline_image_url !== false) : print $theme->offline_image_url; else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/getstatus/offline.svg');?><?php endif;?>') no-repeat center center}<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/burger_menu_css.tpl.php')); ?> #<?php echo $chatCSSPrefix?>_remote_window{padding-left:5px;}.<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_header{min-width:107px} .<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_iframe_container{display:none} .<?php echo $chatCSSPrefix?>-no-transition{ -webkit-transition: none !important; -moz-transition: none !important;-o-transition: none !important;-ms-transition: none !important;transition: none !important;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-delayed{visibility:hidden;position: fixed;left: -90000px!important;right: auto!important;}#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-delayed .<?php echo $chatCSSPrefix?>-cf{display:none}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> * {line-height:100%;direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial;font-size:12px;line-height:100%;box-sizing: content-box;-moz-box-sizing:content-box;padding:0;margin:0;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> img {border:0;max-width: none}\\n#<?php echo $chatCSSPrefix?>_header{position:relative;z-index:2147483640;height:<?php ($theme !== false && $theme->header_height > 0) ? print $theme->header_height : print '17' ?>px;text-align:right;clear:both;background-color:#<?php $theme !== false ? print $theme->header_background : print '525252' ?>;padding:<?php ($theme !== false && $theme->header_padding > 0) ? print $theme->header_padding : print '5' ?>px;}#<?php echo $chatCSSPrefix?>-msg-number{float: left;color: #ffffff;font-size: 12px;font-weight: normal;line-height: 23px;position: absolute;background-color: red;border-radius: 37px;display: inline-block;padding-left: 8px;padding-right: 8px;margin-top: -5px;margin-left: -4px;} \\n#<?php echo $chatCSSPrefix?>_min{float:right;padding:2px;}.<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_min:before{content:url(<?php if ($iconsStatuses['restore_image_url'] == false) : ?><?php echo erLhcoreClassSystem::getHost()?><?php endif; if ($theme !== false && $theme->restore_image_url != '') : ?><?php echo $theme->restore_image_url;?><?php else : ?><?php echo erLhcoreClassDesign::design('images/icons/restore.png');?><?php endif;?>)}#<?php echo $chatCSSPrefix?>_min:before{content: url('<?php if ($theme !== false && $theme->minimize_image_url != '') : ?><?php echo $theme->minimize_image_url;?><?php else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/min.png');?><?php endif;?>'); position: relative;left:0;top;0} #<?php echo $chatCSSPrefix?>_min{width:14px;height:14px;}\\n#<?php echo $chatCSSPrefix?>_min:hover{opacity:0.4;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> {background-color:#FFF;-moz-user-select:none; -khtml-user-drag:element;cursor: move;cursor: -moz-grab;cursor: -webkit-grab;max-height: 100%;\toverflow: auto;\\nz-index:2147483640;\\n position: fixed;<?php echo $currentPosition['position_body']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-webkit-border-radius: 5px;-moz-border-radius: 5px;border-radius: 5px; }\\n#<?php echo $chatCSSLayoutOptions['container_id']?> iframe{position:relative;display:block;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> #<?php echo $chatCSSPrefix?>_iframe_container{border:<?php ($theme !== false && $theme->widget_border_width > 0) ? print $theme->widget_border_width : print '1' ?>px solid #<?php $theme !== false ? print $theme->widget_border_color : print 'cccccc' ?>;border-top: 0;border-bottom-left-radius: 5px;border-bottom-right-radius: 5px;overflow: hidden;}\\n#<?php echo $chatCSSLayoutOptions['container_id']?> iframe.<?php echo $chatCSSPrefix?>-loading{\\nbackground: #FFF url(<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/general/loading.gif');?>) no-repeat center center; }\\n@media only screen and (max-device-width : <?php ($theme !== false && $theme->widget_response_width > 0) ? print $theme->widget_response_width : print 992?>px) {ul.<?php echo $chatCSSPrefix?>-cf li ul a{padding:8px 14px!important} ul.<?php echo $chatCSSPrefix?>-cf li:hover ul, ul.<?php echo $chatCSSPrefix?>-cf li ul {top: 30px;} .<?php echo $chatCSSPrefix?>-opened{position: fixed; overflow: hidden; right: 0px; left: 0px; top: 0px; bottom: 0px;} #<?php echo $chatCSSPrefix?>_header{height:30px;} #<?php echo $chatCSSPrefix?>_header a{padding:7px;}#<?php echo $chatCSSLayoutOptions['container_id']?>{position:fixed;left:0!important;right:0!important;bottom:0!important;top:0!important;border:0;border-radius:0}#<?php echo $chatCSSLayoutOptions['container_id']?> #<?php echo $chatCSSPrefix?>_iframe_container{border:0;height: calc(100% - 40px)}#<?php echo $chatCSSLayoutOptions['container_id']?> iframe{width:100% !important;height: 100%!important}} .<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_header{display:none;}.<?php echo $chatCSSPrefix?>-min #<?php echo $chatCSSPrefix?>_header a{padding:2px;} #<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-min .status-icon{<?php echo $currentPosition['border_status_modern']?>;<?php echo $currentPosition['widget_radius_modern']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);-moz-box-shadow:<?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);box-shadow: <?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);text-decoration:none;height:41px;width:41px;}#<?php echo $chatCSSLayoutOptions['container_id']?>.<?php echo $chatCSSPrefix?>-min{<?php echo $currentPosition['mobile_position_modern']?>}\";\n<?php endif; ?>\n", "<?php foreach ($dynamic_invitation as $invitation) : ?>\n\n<?php if (in_array($invitation->id, $dynamic_processed)) {\n    continue; // Skip if particular invitation was already shown\n} ?>\n\n<?php if ($invitation->event_type == 1) : ?>\nlh_inst.dynamicAssigned.push(<?php echo $invitation->id?>);      \nlh_inst.outWindowCallback = function(e) {\n    <?php /* Show only if mouse was never triggered before, widget is not open, and chat was not started during current session. */ ?>\n    if (lh_inst.timeoutStatusWidgetOpen == 0 && lh_inst.chat_started == false) {\n        e = e ? e : window.event;\n        var from = e.relatedTarget || e.toElement;\n        if (!from || from.nodeName == \"HTML\") {                \n            lh_inst.stopCheckNewMessage();\n            lh_inst.showStartWindow('<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('chat/readoperatormessage')?>/(inv)/<?php echo $invitation->id?><?php $department !== false ? print '/(department)/'.$department : '' ?><?php $theme !== false ? print '/(theme)/'.$theme : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : ''?><?php $survey !== false ? print '/(survey)/'.$survey : ''?>/(vid)/<?php echo $vid;?><?php $visitor->invitation_assigned == true ? print '/(playsound)/true' : ''?>/(fullheight)/<?= $fullheight ? 'true' : 'false' ?>',true);\n            lh_inst.removeEvent(document,\"mouseout\",lh_inst.outWindowCallback);\n        }\n    }\n};    \nlh_inst.addEvent(document, \"mouseout\", lh_inst.outWindowCallback);\n<?php elseif ($invitation->event_type == 2) : ?>\nlh_inst.dynamicAssigned.push(<?php echo $invitation->id?>);\n\nlh_inst.iddleTimeoutActivity = null;\n\nlh_inst.resetTimeoutIddle = function() {\n    lh_inst.iddleEventResetActivity();\n};    \n\nlh_inst.iddleEventResetActivity = function() {\n    clearTimeout(this.iddleTimeoutActivity);\n    var _that = this;\n    this.iddleTimeoutActivity = setTimeout(function(){\n        \n        clearTimeout(_that.iddleTimeoutActivity); \n        \n        lh_inst.stopCheckNewMessage();\n        lh_inst.showStartWindow('<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('chat/readoperatormessage')?>/(inv)/<?php echo $invitation->id?><?php $department !== false ? print '/(department)/'.$department : '' ?><?php $theme !== false ? print '/(theme)/'.$theme : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : ''?><?php $survey !== false ? print '/(survey)/'.$survey : ''?>/(vid)/<?php echo $vid;?><?php $visitor->invitation_assigned == true ? print '/(playsound)/true' : ''?>/(fullheight)/<?= $fullheight ? 'true' : 'false' ?>',true);\n \n        ['mousemove','mousedown','click','scroll','keypress','load'].forEach(function(element) {\n            lh_inst.removeEvent(window,element,lh_inst.resetTimeoutIddle);   \n        });\n        \n        ['mousemove','scroll','touchstart','touchend'].forEach(function(element) {\n            lh_inst.removeEvent(document,element,lh_inst.resetTimeoutIddle);   \n        });                         \n        \n    }, <?php echo $invitation->iddle_for *1000?>);        \n};\n\nlh_inst.iddleEventResetActivity();\n\n['mousemove','mousedown','click','scroll','keypress','load'].forEach(function(element) {\n    lh_inst.addEvent(window,element,lh_inst.resetTimeoutIddle);   \n});\n\n['mousemove','scroll','touchstart','touchend'].forEach(function(element) {\n    lh_inst.addEvent(document,element,lh_inst.resetTimeoutIddle);   \n});\n<?php endif; ?>\n\n<?php endforeach; ?>", "showSurvey : function() {\r\n    if (lh_inst.cookieData.hash && lh_inst.hasSurvey == true && lh_inst.surveyShown == false){\r\n        var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\r\n        this.surveyShown = true;\r\n        document.getElementById('<?php echo $chatCSSPrefix?>_iframe').contentWindow.location.replace(\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>\"+this.lang+\"/survey/fillwidget<?php $leaveamessage == true ? print '/(leaveamessage)/true' : ''?><?php $department !== false ? print '/(department)/'.$department : ''?><?php is_object($theme) ? print '/(theme)/'.$theme->id : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?>\"+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.parseOptions()+this.parseStorageArguments()+'&dt='+encodeURIComponent(document.title));\r\n    }\r\n},", "showSurvey : function() {\n    if (this.cookieData.hash && this.hasSurvey == true && this.surveyShown == false){\n        var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n        this.surveyShown = true;\n        document.getElementById('<?php echo $chatCSSPrefix?>_iframe_page').contentWindow.location.replace(\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>\"+this.lang+\"/survey/fillwidget/(mode)/embed<?php $leaveamessage == true ? print '/(leaveamessage)/true' : ''?><?php $department !== false ? print '/(department)/'.$department : ''?><?php is_object($theme) ? print '/(theme)/'.$theme->id : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?>\"+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.parseOptions()+this.parseStorageArguments()+'&dt='+encodeURIComponent(document.title));\n    }\n},", "\r\nisNotificationsSubscribed : false,\r\n\r\nsendNotification : function() {\r\n\r\n    <?php $notificationsSettings = erLhcoreClassModelChatConfig::fetch('notifications_settings')->data_value;?>\r\n\r\n    <?php if (isset($notificationsSettings['enabled']) && $notificationsSettings['enabled'] == 1) : ?>\r\n\r\n    var applicationServerPublicKey = '<?php echo $notificationsSettings['public_key']?>';\r\n    this.isNotificationsSubscribed = false;\r\n\r\n    var swRegistration = null;\r\n\r\n    if (!('serviceWorker' in navigator) || !('PushManager' in window)) {\r\n        alert(\"This browser does not support desktop notification\");\r\n        return;\r\n    }\r\n\r\n    // Let's check if the browser supports notifications\r\n    if (!(\"Notification\" in window)) {\r\n        alert(\"This browser does not support desktop notification\");\r\n        return;\r\n    }\r\n    // Let's check whether notification permissions have already been granted\r\n    else if (Notification.permission === \"granted\") {\r\n        // If it's okay let's create a notification\r\n        //\r\n    }\r\n    // Otherwise, we need to ask the user for permission\r\n    else if (Notification.permission !== \"denied\") {\r\n        Notification.requestPermission(function (permission) {\r\n            // If the user accepts, let's create a notification\r\n            if (permission !== \"granted\") {\r\n                alert('Sorry but you have denied notification!');\r\n                return;\r\n            }\r\n        });\r\n    } else if (Notification.permission === \"denied\") {\r\n        alert('Sorry but you have denied notification!');\r\n        return;\r\n    }\r\n\r\n    function urlB64ToUint8Array(base64String) {\r\n        var padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n        var base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n\r\n        var rawData = window.atob(base64);\r\n        var outputArray = new Uint8Array(rawData.length);\r\n\r\n        for (var i = 0; i < rawData.length; ++i) {\r\n            outputArray[i] = rawData.charCodeAt(i);\r\n        }\r\n        return outputArray;\r\n    }\r\n\r\n\r\n    var that = this;\r\n\r\n    function updateSubscriptionOnServer(subscription, subscribe) {\r\n        if (subscription === null) {\r\n            return;\r\n        }\r\n\r\n        var key = subscription.getKey('p256dh');\r\n        var token = subscription.getKey('auth');\r\n        var contentEncoding = (PushManager.supportedContentEncodings || ['aesgcm'])[0];\r\n\r\n        var payload = JSON.stringify({\r\n            endpoint: subscription.endpoint,\r\n            publicKey: key ? btoa(String.fromCharCode.apply(null, new Uint8Array(key))) : null,\r\n            authToken: token ? btoa(String.fromCharCode.apply(null, new Uint8Array(token))) : null,\r\n            contentEncoding : contentEncoding\r\n        });\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open( \"POST\", '<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+that.lang+'/notifications/subscribe<?php $theme !== false ? print '/(theme)/' . (is_object($theme) ? $theme->id : $theme) : ''?>' + (subscribe == true ? '/(action)/sub' : '/(action)/unsub') + that.getAppendCookieArguments(), true);\r\n        xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n        xhr.send( \"data=\" + encodeURIComponent( payload ) );\r\n    }\r\n\r\n    var that = this;\r\n\r\n    function subscribeUser() {\r\n        var applicationServerKey = urlB64ToUint8Array(applicationServerPublicKey);\r\n        swRegistration.pushManager.subscribe({\r\n            'userVisibleOnly': true,\r\n            'applicationServerKey': applicationServerKey\r\n        }).then(function(subscription) {\r\n            <?php /*console.log('User just subscribed subscribed.');*/ ?>\r\n            updateSubscriptionOnServer(subscription, true);\r\n            that.isNotificationsSubscribed = true;\r\n            <?php /*alert('You have subscribed!');*/ ?>\r\n        })<?php /*.catch(function(err) {\r\n            console.log('Failed to subscribe the user: ', err);\r\n        })*/ ?>;\r\n    }\r\n\r\n    function unsubscribeUser() {\r\n        swRegistration.pushManager.getSubscription().then(function(subscription) {\r\n            if (subscription) {\r\n                updateSubscriptionOnServer(subscription,false);\r\n                return subscription.unsubscribe();\r\n            }\r\n        })<?php /*.catch(function(error) {\r\n            console.log('Error unsubscribing', error);\r\n        })*/ ?>.then(function() {\r\n        <?php /*console.log('User is unsubscribed.');*/ ?>\r\n                alert('You have unsubscribed!');\r\n            that.isNotificationsSubscribed = false;\r\n        });\r\n    }\r\n\r\n    function initializeUI() {\r\n        // Set the initial subscription value\r\n        swRegistration.pushManager.getSubscription().then(function(subscription) {\r\n            that.isNotificationsSubscribed = !(subscription === null);\r\n            if (that.isNotificationsSubscribed) {\r\n                // unsubscribeUser();\r\n                subscribeUser();\r\n            } else {\r\n                subscribeUser();\r\n            }\r\n        });\r\n    }\r\n\r\n    // At last, if the user has denied notifications, and you\r\n    // want to be respectful there is no need to bother them any more.\r\n    navigator.serviceWorker.register('sw.lhc.js?v=2')\r\n    .then(function(swReg) {\r\n        <?php /*console.log('Service Worker is registered', swReg);*/ ?>\r\n        swRegistration = swReg;\r\n        initializeUI();\r\n    })<?php /*.catch(function(error) {\r\n        console.error('Service Worker Error', error);\r\n    })*/ ?>;\r\n    <?php endif; ?>\r\n},\r\n\r\nreadNotification : function(chat_id, hash) {\r\n    <?php $notificationsSettings = erLhcoreClassModelChatConfig::fetch('notifications_settings')->data_value;?>\r\n    <?php if (isset($notificationsSettings['enabled']) && $notificationsSettings['enabled'] == 1) : ?>\r\n        this.showStartWindow(\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>\"+this.lang+\"/notifications/read/<?php $theme !== false ? print '/(theme)/'.(is_object($theme) ? $theme->id : $theme) : ''?>/(id)/\"+chat_id+\"/(hashread)/\"+hash+\"/(mode)/widget\");\r\n    <?php endif; ?>\r\n},\r\n", "iframePreloaded : false,\niframeCustomUrl : false,\n\npreloadWidget : function() {\n    <?php if ((int)erLhcoreClassModelChatConfig::fetch('preload_iframes')->current_value == 1) : ?>\n    var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n    var widgetWidth = (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.widget_width != 'undefined') ? parseInt(<?php echo $chatOptionsVariable?>.opt.widget_width) : 300;\n    var widgetHeight = (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.widget_height != 'undefined') ? parseInt(<?php echo $chatOptionsVariable?>.opt.widget_height) : 340;\n    var widgetHeightUnit = 'px';\n\n    if (this.is_full_height === true) {\n        widgetHeight = 100;\n        widgetHeightUnit = '%';\n    }\n\n    this.initial_iframe_url = \"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>\"+this.lang+\"/chat/chatwidget<?php $leaveamessage == true ? print '/(leaveamessage)/true' : ''?><?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ?  '/(fullheight)/true' : '/(fullheight)/false' ?><?php $department !== false ? print '/(department)/'.$department : ''?><?php $theme !== false ? print '/(theme)/'.$theme->id : ''?><?php $bot_id !== null ? print '/(bot_id)/'.$bot_id : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?>\"+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.parseOptions()+this.parseStorageArguments()+'&dt='+encodeURIComponent(document.title);\n\n    this.iframePreloaded = true;\n\n    this.iframe_html = '<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/before_iframe_container.tpl.php')); ?>'+'<div id=\"<?php echo $chatCSSPrefix?>_iframe_container\" <?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ? 'style=\"height: calc(100% - 25px);\"' : '' ?>><iframe id=\"<?php echo $chatCSSPrefix?>_iframe\" allowTransparency=\"true\" class=\"<?php echo $chatCSSPrefix?>-loading\" frameborder=\"0\" ' +\n        ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n        ' width=\"'+widgetWidth+'\"' +\n        ' height=\"'+widgetHeight+'\"' +\n        ' style=\"width: '+widgetWidth+'px;height: '+widgetHeight+widgetHeightUnit+';\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Live Help')?>\"></iframe></div>';\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/container.tpl.php')); ?>\n\n    if (!this.cssWasAdded) {\n        this.cssWasAdded = true;\n        this.addCss(raw_css<?php ($theme !== false && $theme->custom_container_css !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_container_css).'\\'' : '' ?>);\n    };\n\n    var fragment = this.appendHTML(this.iframe_html);\n\n    var parentElement = document.body;\n\n    if (typeof <?php echo $chatOptionsVariable?> != 'undefined' &&\n        typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' &&\n        typeof <?php echo $chatOptionsVariable?>.opt.widget_parent != 'undefined') {\n        if(document.getElementById(<?php echo $chatOptionsVariable?>.opt.widget_parent) != null) {\n            parentElement = document.getElementById(<?php echo $chatOptionsVariable?>.opt.widget_parent);\n        }\n    }\n\n    parentElement.insertBefore(fragment, parentElement.childNodes[0]);\n\n    this.addClass(document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>'),'<?php echo $chatCSSPrefix?>-delayed');\n    this.iframeCustomUrl = false;\n    <?php endif; ?>\n},\n\nshowStartWindow : function(url_to_open,delayShow) {\n\t\t  \n\t  if (this.isOnline == false && typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.offline_redirect != 'undefined'){\n\t\t\twindow.open(<?php echo $chatOptionsVariable?>.opt.offline_redirect,\"_blank\");\n\t\t\treturn;\n\t  };\t\n\t  this.lhc_need_help_hide();\n\n      // Do not check for new messages\n      this.stopCheckNewMessage();\n\n      var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n\n    if (this.isProactivePending == 1 && this.invitationUrl != ''){\n        url_to_open = this.invitationUrl;\n        this.invitationUrl = '';\n        var elm = document.getElementById('<?php echo $chatCSSPrefix?>_status_container');\n        if (elm !== null) {\n            this.removeClass(document.getElementById('<?php echo $chatCSSPrefix?>_status_container'),'<?php echo $chatCSSPrefix?>_invitation-mode');\n        }\n    };\n\n      if ( url_to_open != undefined ) {\n       \t\tthis.chatOpenedCallback('internal_invitation');\t\n            this.initial_iframe_url = url_to_open+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.parseOptions()+this.parseStorageArguments()+'&dt='+encodeURIComponent(document.title);\n            this.iframeCustomUrl = true;\n      } else {\n      \t\tthis.chatOpenedCallback(this.isOnline == false ? 'internal_offline' : 'internal');\t\n            this.initial_iframe_url = \"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>\"+this.lang+\"/chat/chatwidget<?php $leaveamessage == true ? print '/(leaveamessage)/true' : ''?><?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ?  '/(fullheight)/true' : '/(fullheight)/false' ?><?php $department !== false ? print '/(department)/'.$department : ''?><?php $bot_id !== null ? print '/(bot_id)/'.$bot_id : ''?><?php $theme !== false ? print '/(theme)/'.$theme->id : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?>\"+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.parseOptions()+this.parseStorageArguments()+'&dt='+encodeURIComponent(document.title);\n      };\n       \n      this.addClass(document.body,'<?php echo $chatCSSPrefix?>-opened');\n      \n      lh_inst.surveyShown = false;                             \n      lh_inst.timeoutStatusWidgetOpen = 1;\n      \n      var widgetWidth = (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.widget_width != 'undefined') ? parseInt(<?php echo $chatOptionsVariable?>.opt.widget_width) : 300;\n\t  var widgetHeight = (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' && typeof <?php echo $chatOptionsVariable?>.opt.widget_height != 'undefined') ? parseInt(<?php echo $chatOptionsVariable?>.opt.widget_height) : 340;\n\t  var widgetHeightUnit = 'px';\n\n      if(this.is_full_height === true) {\n\t\twidgetHeight = 100;\n\t\twidgetHeightUnit = '%';\n\t  }\n\n      <?php\n        $iconsStatuses = array(\n            'online_image_url' => ($theme !== false && $theme->online_image_url !== false && strpos($theme->online_image_url, 'http') !== false),\n            'offline_image_url' => ($theme !== false && $theme->offline_image_url !== false && strpos($theme->offline_image_url, 'http') !== false)\n        );\n      ?>\n      var needLoading = true;\n\n      var iframe_html_source = this.iframe_html;\n\n       this.iframe_html = '<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/before_iframe_container.tpl.php')); ?>'+'<div id=\"<?php echo $chatCSSPrefix?>_iframe_container\" <?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ? 'style=\"height: calc(100% - 25px);\"' : '' ?>><iframe id=\"<?php echo $chatCSSPrefix?>_iframe\" allow=\"microphone\" allowTransparency=\"true\" class=\"<?php echo $chatCSSPrefix?>-loading\" frameborder=\"0\" ' +\n                   ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                   ' width=\"'+widgetWidth+'\"' +\n                   ' height=\"'+widgetHeight+'\"' +\n                   ' style=\"width: '+widgetWidth+'px;height: '+widgetHeight+widgetHeightUnit+';\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Live Help')?>\"></iframe></div>';\n\n      <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/container.tpl.php')); ?>\n\n        if (iframe_html_source != this.iframe_html) {\n            this.removeById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n        } else {\n            needLoading = false;\n        }\n\n      if (!this.cssWasAdded) {\n      \tthis.cssWasAdded = true;\n      \tthis.addCss(raw_css<?php ($theme !== false && $theme->custom_container_css !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_container_css).'\\'' : '' ?>);\n\t  };\n\n      if (needLoading === true) {\n\n        this.iframePreloaded = false;\n\n        var fragment = this.appendHTML(this.iframe_html);\n\n        var parentElement = document.body;\n\n        if (typeof <?php echo $chatOptionsVariable?> != 'undefined' &&\n        typeof <?php echo $chatOptionsVariable?>.opt != 'undefined' &&\n        typeof <?php echo $chatOptionsVariable?>.opt.widget_parent != 'undefined') {\n            if(document.getElementById(<?php echo $chatOptionsVariable?>.opt.widget_parent) != null) {\n                parentElement = document.getElementById(<?php echo $chatOptionsVariable?>.opt.widget_parent);\n            }\n        }\n        parentElement.insertBefore(fragment, parentElement.childNodes[0]);\n\n        this.addClass(document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>'),'<?php echo $chatCSSPrefix?>-delayed');\n\n    } else {\n        lh_inst.removeClass(document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>'),'<?php echo $chatCSSPrefix?>-delayed');\n    }\n\n    var lhc_obj = this;\n\n      <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/part/close_handler.tpl.php')); ?>\t\t\n      \n      document.getElementById('<?php echo $chatCSSPrefix?>_min').onclick = function() { lhc_obj.min(); return false; };\n\n      <?php if ($theme === false || $theme->modern_look == 1) : ?>\n      document.getElementById('<?php echo $chatCSSPrefix?>_status-icon-restore').onclick = function() { lhc_obj.min(); return false; };\n      <?php endif ?>\n\n      <?php if (erLhcoreClassModelChatConfig::fetch('disable_popup_restore')->current_value == 0 && ($theme === false || $theme->hide_popup == 0)) : ?>\n      document.getElementById('<?php echo $chatCSSPrefix?>_remote_window').onclick = function() { lhc_obj.openRemoteWindow(); return false; };\n\t  <?php endif; ?>\n\t  \n\t  var domContainer = document.getElementById('<?php echo $chatCSSLayoutOptions['container_id']?>');\n\t  var domIframe = '<?php echo $chatCSSPrefix?>_iframe';\n\t  var domContainerId = '<?php echo $chatCSSLayoutOptions['container_id']?>';\n\t  <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/drag_drop_logic.tpl.php')); ?>\t\t  \n\n\t  if (this.cookieData.m) {\n        if (this.cookieData.hash) {\n            this.min(true);\n        }\n      };\n\t  \n\t  if (typeof delayShow === 'undefined') {\n\t  \t\tthis.toggleStatusWidget(true);\n\t  }\n\t  \n\t  // If proactive invitation is shown. Check for status changes and hide popup if operator goes offline\n\t  this.checkStatusChat();\t  \n},", "showStatusWidget : function() {\n<?php if ($position == 'original' || $position == '') :\n// You can style bottom HTML whatever you want. ?>\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/native_placement.tpl.php')); ?>\n\n<?php elseif (in_array($position, array_keys($positionArgument))) : ?>\n\tthis.removeById('<?php echo $chatCSSPrefix?>_status_container');\n\n    <?php if ($theme !== false && $theme->modern_look == 0) : ?>\n    var statusTEXT = '<?php if ($theme !== false && isset($theme->bot_configuration_array['custom_html_status'])) : ?><?php echo str_replace(array(\"\\n\",\"\\r\",\"'\"), array('','','\\\\\\''),$theme->bot_configuration_array['custom_html_status'])?><?php endif?><a id=\"'+(this.isOnline == true ? 'online-icon' : 'offline-icon')+'\" class=\"status-icon\" href=\"#\" onclick=\"return lh_inst.lh_openchatWindow()\" ><span class=\"<?php echo $chatCSSPrefix?>-text-status\">'+(this.isOnline ? <?php if ($theme !== false && $theme->online_text !== '') : print json_encode($theme->online_text); else : ?><?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Live help is online...'),ENT_QUOTES))?><?php endif?> : <?php if ($theme !== false && $theme->offline_text != '') : print json_encode($theme->offline_text); else : ?><?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Live help is offline...'),ENT_QUOTES))?><?php endif?>)+'</span></a>';\n\n    if (!this.cssStatusWasAdded) {\n      \tthis.cssStatusWasAdded = true;\n      \t<?php \n      \t$iconsStatuses = array(\n      \t    'online_image_url' => ($theme !== false && $theme->online_image_url !== false && strpos($theme->online_image_url, 'http') !== false),\n      \t    'offline_image_url' => ($theme !== false && $theme->offline_image_url !== false && strpos($theme->offline_image_url, 'http') !== false)\n      \t);          \t          \t\n      \t?>\n    \tvar raw_css = \"#<?php echo $chatCSSPrefix?>_status_container.hide-status,#<?php echo $chatCSSPrefix?>_status_container.hide-status-delay{display:none!important;}#<?php echo $chatCSSPrefix?>_status_container * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site','dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site','dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial;font-size:12px;box-sizing: content-box;zoom:1;margin:0;padding:0}\\n#<?php echo $chatCSSPrefix?>_status_container .status-icon{text-decoration:none;font-size:12px;font-weight:bold;color:<?php $theme !== false ? print '#'.$theme->text_color : print '#000' ?>;display:block;padding:<?php echo $currentPosition['padding_text']?>;background:url('<?php if ($theme !== false && $theme->online_image_url !== false) : print $theme->online_image_url; else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/user_green_chat.png');?><?php endif;?>') no-repeat <?php echo $currentPosition['background_position']?> center}\\n#<?php echo $chatCSSPrefix?>_status_container:hover{<?php echo $currentPosition['widget_hover']?>}\\n#<?php echo $chatCSSPrefix?>_status_container #offline-icon{background-image:url('<?php if ($theme !== false && $theme->offline_image_url !== false) : print $theme->offline_image_url; else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/user_gray_chat.png');?><?php endif;?>')}\\n#<?php echo $chatCSSPrefix?>_status_container{box-sizing: content-box;<?php echo $currentPosition['widget_radius']?>-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);<?php echo $currentPosition['border_widget']?>;-moz-box-shadow:<?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);padding:5px 0px 0px 5px;width:190px;font-family:arial;font-size:12px;transition: 1s;position:fixed;<?php echo $currentPosition['position']?>;background-color:#<?php $theme !== false ? print $theme->onl_bcolor : print 'f6f6f6' ?>;z-index:2147483647;}@media only screen and (max-width : 640px) {#<?php echo $chatCSSPrefix?>_need_help_container{display:none;}#<?php echo $chatCSSPrefix?>_status_container .status-icon{padding:32px 15px 9px 31px;background-position:center center;}#<?php echo $chatCSSPrefix?>_status_container .<?php echo $chatCSSPrefix?>-text-status{display:none} #<?php echo $chatCSSPrefix?>_status_container{<?php echo $currentPosition['mobile_position_status']?>}}\\n\";\n    \tthis.addCss(raw_css<?php ($theme !== false && $theme->custom_status_css_front !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\",\"'\"), array('','','\\\\\\''), $theme->custom_status_css_front).'\\'' : '' ?>);\n\t};\n    <?php else : ?>\n        var statusTEXT = '<?php if ($theme !== false && isset($theme->bot_configuration_array['custom_html_status'])) : ?><?php echo str_replace(array(\"\\n\",\"\\r\",\"'\"), array('','','\\\\\\''),$theme->bot_configuration_array['custom_html_status'])?><?php endif?><i class=\"<?php echo $chatCSSPrefix?>-invitation-status\" onclick=\"return lh_inst.lh_openchatWindow()\">!</i><a id=\"'+(this.isOnline == true ? 'online-icon' : 'offline-icon')+'\" class=\"status-icon\" href=\"#\" onclick=\"return lh_inst.lh_openchatWindow()\" ></a>';\n\n    if (!this.cssStatusWasAdded) {\n        this.cssStatusWasAdded = true;\n        <?php\n        $iconsStatuses = array(\n            'online_image_url' => ($theme !== false && $theme->online_image_url !== false && strpos($theme->online_image_url, 'http') !== false),\n            'offline_image_url' => ($theme !== false && $theme->offline_image_url !== false && strpos($theme->offline_image_url, 'http') !== false)\n        );\n        ?>\n        var raw_css = \"#<?php echo $chatCSSPrefix?>_status_container.hide-status,#<?php echo $chatCSSPrefix?>_status_container.hide-status-delay{display:none!important;}#<?php echo $chatCSSPrefix?>_status_container * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site','dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site','dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial;font-size:12px;box-sizing: content-box;zoom:1;margin:0;padding:0}#<?php echo $chatCSSPrefix?>_status_container .<?php echo $chatCSSPrefix?>-invitation-status{display:none;position:absolute;}#<?php echo $chatCSSPrefix?>_status_container.<?php echo $chatCSSPrefix?>_invitation-mode .<?php echo $chatCSSPrefix?>-invitation-status{width: 16px;height:16px;padding: 2px;border-radius: 10px;text-align: center;font-weight: bold;color: #FFF;background-color: red;display: inline-block;}\\n#<?php echo $chatCSSPrefix?>_status_container .status-icon{<?php echo $currentPosition['border_status_modern']?>;<?php echo $currentPosition['widget_radius_modern']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);-moz-box-shadow:<?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);box-shadow: <?php echo $currentPosition['shadow_modern']?> rgba(50, 50, 50, 0.5);text-decoration:none;height:41px;width:41px;font-weight:bold;color:<?php $theme !== false ? print '#'.$theme->text_color : print '#000' ?>;display:block;padding:10px;background:#<?php $theme !== false ? print $theme->onl_bcolor : print '0c8fc4' ?> url('<?php if ($theme !== false && $theme->online_image_url !== false) : print $theme->online_image_url; else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/getstatus/online.svg');?><?php endif;?>') no-repeat center center}\\n#<?php echo $chatCSSPrefix?>_status_container:hover{<?php echo $currentPosition['widget_hover_modern']?>}\\n#<?php echo $chatCSSPrefix?>_status_container #offline-icon{background:#888888 url('<?php if ($theme !== false && $theme->offline_image_url !== false) : print $theme->offline_image_url; else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/getstatus/offline.svg');?><?php endif;?>') no-repeat center}\\n#<?php echo $chatCSSPrefix?>_status_container{box-sizing: content-box;padding:5px 0px 0px 5px;font-family:arial;font-size:12px;transition: 1s;position:fixed;<?php echo $currentPosition['position_modern']?>;z-index:2147483647;}@media only screen and (max-width : 640px) {#<?php echo $chatCSSPrefix?>_need_help_container{display:none;}#<?php echo $chatCSSPrefix?>_status_container .status-icon{background-position:center center;}#<?php echo $chatCSSPrefix?>_status_container .<?php echo $chatCSSPrefix?>-text-status{display:none} #<?php echo $chatCSSPrefix?>_status_container{<?php echo $currentPosition['mobile_position_status_modern']?>}}\\n\";\n        this.addCss(raw_css<?php ($theme !== false && $theme->custom_status_css_front !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\",\"'\"), array('','','\\\\\\''), $theme->custom_status_css_front).'\\'' : '' ?>);\n    };\n    <?php endif; ?>\n\n\t<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/we_here.tpl.php')); ?>\n\n    var statusInitial = '';\n    <?php if ($theme !== false && $theme->show_status_delay > 0) : ?>\n        statusInitial = ' class=\"hide-status-delay\" ';\n        setTimeout( function() {\n            var dm = document.getElementById('<?php echo $chatCSSPrefix?>_status_container');\n            that.removeClass(dm,'hide-status-delay');\n        },<?php echo $theme->show_status_delay*1000?>);\n    <?php endif ?>\n\n    var htmlStatus = '<div id=\"<?php echo $chatCSSPrefix?>_status_container\"' + statusInitial + '>'+subStatus+statusTEXT+'</div>';\n\n    var fragment = this.appendHTML(htmlStatus);\n    \n    document.body.insertBefore(fragment, document.body.childNodes[0]);\n\n    var that = this;\n    if (subStatus != '') {\n        document.getElementById('<?php echo $chatCSSPrefix?>_need_help_image').onclick = function() { that.lhc_need_help_click(); return false; };\n        document.getElementById('<?php echo $chatCSSPrefix?>_need_help_main_title').onclick = function() { that.lhc_need_help_click(); return false; };\n        document.getElementById('<?php echo $chatCSSPrefix?>_need_help_sub_title').onclick = function() { that.lhc_need_help_click(); return false; };\n        document.getElementById('<?php echo $chatCSSPrefix?>_need_help_close').onclick = function() { that.lhc_need_help_hide(); return false; };\n    }\n\n<?php endif; ?>\n\tif (typeof <?php echo $chatOptionsVariable?> != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback != 'undefined' && typeof <?php echo $chatOptionsVariable?>.callback.show_widget_cb != 'undefined') {\n\t\t<?php echo $chatOptionsVariable?>.callback.show_widget_cb(this);    \t\t\n\t};\n},\n", "var lhc_domain = '';\n\nif (typeof LHCChatOptions !== 'undefined' && typeof LHCChatOptions.opt !== 'undefined' && typeof LHCChatOptions.opt.domain !== 'undefined') {\nlhc_domain = LHCChatOptions.opt.domain;\n}\n\nif (typeof LHCChatOptionsPage !== 'undefined' && typeof LHCChatOptionsPage.opt !== 'undefined' && typeof LHCChatOptionsPage.opt.domain !== 'undefined') {\nlhc_domain = LHCChatOptionsPage.opt.domain;\n}\n\nif (lhc_domain === '') {\nlhc_domain = document.location.hostname.replace(/^(?:[a-z0-9\\-\\.]+\\.)??([a-z0-9\\-]+)?(\\.com|\\.net|\\.org|\\.biz|\\.ws|\\.in|\\.me|\\.co\\.uk|\\.co|\\.org\\.uk|\\.ltd\\.uk|\\.plc\\.uk|\\.me\\.uk|\\.edu|\\.mil|\\.br\\.com|\\.cn\\.com|\\.eu\\.com|\\.hu\\.com|\\.no\\.com|\\.qc\\.com|\\.sa\\.com|\\.se\\.com|\\.se\\.net|\\.us\\.com|\\.uy\\.com|\\.ac|\\.co\\.ac|\\.gv\\.ac|\\.or\\.ac|\\.ac\\.ac|\\.af|\\.am|\\.as|\\.at|\\.ac\\.at|\\.co\\.at|\\.gv\\.at|\\.or\\.at|\\.asn\\.au|\\.com\\.au|\\.edu\\.au|\\.org\\.au|\\.net\\.au|\\.id\\.au|\\.be|\\.ac\\.be|\\.adm\\.br|\\.adv\\.br|\\.am\\.br|\\.arq\\.br|\\.art\\.br|\\.bio\\.br|\\.cng\\.br|\\.cnt\\.br|\\.com\\.br|\\.ecn\\.br|\\.eng\\.br|\\.esp\\.br|\\.etc\\.br|\\.eti\\.br|\\.fm\\.br|\\.fot\\.br|\\.fst\\.br|\\.g12\\.br|\\.gov\\.br|\\.ind\\.br|\\.inf\\.br|\\.jor\\.br|\\.lel\\.br|\\.med\\.br|\\.mil\\.br|\\.net\\.br|\\.nom\\.br|\\.ntr\\.br|\\.odo\\.br|\\.org\\.br|\\.ppg\\.br|\\.pro\\.br|\\.psc\\.br|\\.psi\\.br|\\.rec\\.br|\\.slg\\.br|\\.tmp\\.br|\\.tur\\.br|\\.tv\\.br|\\.vet\\.br|\\.zlg\\.br|\\.br|\\.ab\\.ca|\\.bc\\.ca|\\.mb\\.ca|\\.nb\\.ca|\\.nf\\.ca|\\.ns\\.ca|\\.nt\\.ca|\\.on\\.ca|\\.pe\\.ca|\\.qc\\.ca|\\.sk\\.ca|\\.yk\\.ca|\\.ca|\\.cc|\\.ac\\.cn|\\.com\\.cn|\\.edu\\.cn|\\.gov\\.cn|\\.org\\.cn|\\.bj\\.cn|\\.sh\\.cn|\\.tj\\.cn|\\.cq\\.cn|\\.he\\.cn|\\.nm\\.cn|\\.ln\\.cn|\\.jl\\.cn|\\.hl\\.cn|\\.js\\.cn|\\.zj\\.cn|\\.ah\\.cn|\\.gd\\.cn|\\.gx\\.cn|\\.hi\\.cn|\\.sc\\.cn|\\.gz\\.cn|\\.yn\\.cn|\\.xz\\.cn|\\.sn\\.cn|\\.gs\\.cn|\\.qh\\.cn|\\.nx\\.cn|\\.xj\\.cn|\\.tw\\.cn|\\.hk\\.cn|\\.mo\\.cn|\\.cn|\\.cx|\\.cz|\\.de|\\.dk|\\.fo|\\.com\\.ec|\\.tm\\.fr|\\.com\\.fr|\\.asso\\.fr|\\.presse\\.fr|\\.fr|\\.gf|\\.gs|\\.co\\.il|\\.net\\.il|\\.ac\\.il|\\.k12\\.il|\\.gov\\.il|\\.muni\\.il|\\.ac\\.in|\\.co\\.in|\\.org\\.in|\\.ernet\\.in|\\.gov\\.in|\\.net\\.in|\\.res\\.in|\\.is|\\.it|\\.ac\\.jp|\\.co\\.jp|\\.go\\.jp|\\.or\\.jp|\\.ne\\.jp|\\.ac\\.kr|\\.co\\.kr|\\.go\\.kr|\\.ne\\.kr|\\.nm\\.kr|\\.or\\.kr|\\.li|\\.lt|\\.lu|\\.asso\\.mc|\\.tm\\.mc|\\.com\\.mm|\\.org\\.mm|\\.net\\.mm|\\.edu\\.mm|\\.gov\\.mm|\\.ms|\\.nl|\\.no|\\.nu|\\.pl|\\.ro|\\.org\\.ro|\\.store\\.ro|\\.tm\\.ro|\\.firm\\.ro|\\.www\\.ro|\\.arts\\.ro|\\.rec\\.ro|\\.info\\.ro|\\.nom\\.ro|\\.nt\\.ro|\\.se|\\.si|\\.com\\.sg|\\.org\\.sg|\\.net\\.sg|\\.gov\\.sg|\\.sk|\\.st|\\.tf|\\.ac\\.th|\\.co\\.th|\\.go\\.th|\\.mi\\.th|\\.net\\.th|\\.or\\.th|\\.tm|\\.to|\\.com\\.tr|\\.edu\\.tr|\\.gov\\.tr|\\.k12\\.tr|\\.net\\.tr|\\.org\\.tr|\\.com\\.tw|\\.org\\.tw|\\.net\\.tw|\\.ac\\.uk|\\.uk\\.com|\\.uk\\.net|\\.gb\\.com|\\.gb\\.net|\\.vg|\\.sh|\\.kz|\\.ch|\\.info|\\.ua|\\.gov|\\.name|\\.pro|\\.ie|\\.hk|\\.com\\.hk|\\.org\\.hk|\\.net\\.hk|\\.edu\\.hk|\\.us|\\.tk|\\.cd|\\.by|\\.ad|\\.lv|\\.eu\\.lv|\\.bz|\\.es|\\.jp|\\.cl|\\.ag|\\.mobi|\\.eu|\\.co\\.nz|\\.org\\.nz|\\.net\\.nz|\\.maori\\.nz|\\.iwi\\.nz|\\.io|\\.la|\\.md|\\.sc|\\.sg|\\.vc|\\.tw|\\.travel|\\.my|\\.se|\\.tv|\\.pt|\\.com\\.pt|\\.edu\\.pt|\\.asia|\\.fi|\\.com\\.ve|\\.net\\.ve|\\.fi|\\.org\\.ve|\\.web\\.ve|\\.info\\.ve|\\.co\\.ve|\\.tel|\\.im|\\.gr|\\.ru|\\.net\\.ru|\\.org\\.ru|\\.hr|\\.com\\.hr)$/, '$1$2');\n}\n\nif (typeof LHCChatOptionsPage !== 'undefined') {\nvar LHCChatOptions = LHCChatOptionsPage;\n}\n\nif (typeof lh_inst === 'undefined') {\nwindow.lh_inst = {};\nlh_inst.showStartWindow = function(){\nwindow.$_LHC.eventListener.emitEvent('showWidget');\n};\n\nlh_inst.addTag = function(tag){\nwindow.$_LHC.eventListener.emitEvent('addTag',[tag]);\n};\n\nlh_inst.addTag = function(tag){\nwindow.$_LHC.eventListener.emitEvent('addTag',[tag]);\n};\n\nlh_inst.lh_openchatWindow = function(){\n<?php if (isset($click) && $click == 'internal') : ?>\n    window.$_LHC.eventListener.emitEvent('showWidget');\n<?php else : ?>\n    window.$_LHC.eventListener.emitEvent('openPopup');\n<?php endif; ?>\n};\n}\n\n<?php $lang = erLhcoreClassSystem::instance()->SiteAccess != 'site_admin' ?  erLhcoreClassSystem::instance()->SiteAccess . '/' : ''; ?>\n\nvar LHC_API = LHC_API||{};\nLHC_API.args = {'lang':'<?php echo $lang?>',mode:'<?php echo $mode?>'<?php (isset($position) && $position == 'api') ? print \",position:'api'\" : ''?>,lhc_base_url:'<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurldirect('/')?>',domain: lhc_domain, wheight:<?php isset($wheight) ? print (int)$wheight : print 450?>, wwidth:<?php isset($wwidth) ? print (int)$wwidth : print 350?>,pheight:520,pwidth:500<?php if (is_array($depId) && !empty($depId)) : ?>,department:[<?php echo implode(',',$depId)?>]<?php endif;?><?php if ($leaveamessage == true) : ?>,leaveamessage:true<?php endif; ?><?php if ($disable_pro_active == true) : ?>,proactive:false<?php else : ?>,check_messages:true<?php endif;?><?php isset($uparams['theme']) & is_numeric($uparams['theme']) ? print ',theme:' . (int)$uparams['theme'] : ''?>};\n(function() {\nvar po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;\nvar date = new Date();po.src = '<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('js/widgetv2/index.js');?>?v1'+(\"\"+date.getFullYear() + date.getMonth() + date.getDate());\nvar s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);\n})();\n", "document.getElementById('<?php echo $chatCSSPrefix?>_status_container').innerHTML = '<p class=\"<?php echo $chatCSSPrefix?>-status-native-'+(this.isOnline == true ? 'online' : 'offline')+'\"><a href=\"#\" onclick=\"return lh_inst.lh_openchatWindow()\">'+(this.isOnline == true ? '<img src=\"<?php if ($theme !== false && $theme->online_image_url !== false) : print $theme->online_image_url; else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/user_green_chat.png');?><?php endif;?>\" alt=\"\" /><?php if ($theme !== false && $theme->online_text !== '') : print htmlspecialchars_decode($theme->online_text,ENT_QUOTES); else : ?><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Live help is online...')?><?php endif?>' : '<img src=\"<?php if ($theme !== false && $theme->offline_image_url !== false) : print $theme->offline_image_url; else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/user_gray_chat.png');?><?php endif;?>\" alt=\"\" /><?php if ($theme !== false && $theme->offline_text != '') : print htmlspecialchars_decode($theme->offline_text,ENT_QUOTES); else : ?><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Live help is offline...')?><?php endif;?>')+'</a></p>';\r\n", "var titleText = (typeof <?php echo $chatOptionsVariable;?>.opt.nh_title_text != 'undefined') ? <?php echo $chatOptionsVariable;?>.opt.nh_title_text : <?php if ($theme !== false && $theme->need_help_header !== '') : print json_encode($theme->need_help_header); else : ?><?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Need help?'),ENT_QUOTES))?><?php endif;?>;\r\nvar subTitleText = (typeof <?php echo $chatOptionsVariable;?>.opt.nh_sub_title_text != 'undefined') ? <?php echo $chatOptionsVariable;?>.opt.nh_sub_title_text : <?php if ($theme !== false && $theme->need_help_text !== '') : print json_encode($theme->need_help_text); else : ?><?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Our staff are always ready to help'),ENT_QUOTES))?><?php endif;?>;\r\n<?php $iconsStatuses['need_help_image_url'] = ($theme !== false && $theme->need_help_image_url !== false && strpos($theme->need_help_image_url, 'http') !== false); ?>\r\nvar imageTooltip = (typeof <?php echo $chatOptionsVariable;?>.opt.nh_image != 'undefined') ? <?php echo $chatOptionsVariable;?>.opt.nh_image : '<?php if ($theme !== false && $theme->need_help_image_url !== false) : print $theme->need_help_image_url; else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/general/operator.png');?><?php endif;?>';\r\n\r\nsubStatus = '<div id=\"<?php echo $chatCSSPrefix?>_need_help_container\" style=\"<?php echo $currentPosition[$nh_hor_pos]?>\">'+\r\n'<span id=\"<?php echo $chatCSSPrefix?>_need_help_triangle\" style=\"<?php echo $currentPosition['nh_tr_pos']?>\"></span>'+\r\n'<i id=\"<?php echo $chatCSSPrefix?>_need_help_close\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" href=\"#\">&#xd7;</i>';\r\nif (imageTooltip !== false) {\r\nsubStatus += '<div id=\"<?php echo $chatCSSPrefix?>_need_help_image\"><img width=\"60\" alt=\"Customer service\" height=\"60\" src=\"' + imageTooltip + '\"></div>';\r\n};\r\nsubStatus += '<div id=\"<?php echo $chatCSSPrefix?>_need_help_main_title\">'+titleText+'</div>'+\r\n'<span id=\"<?php echo $chatCSSPrefix?>_need_help_sub_title\">'+subTitleText+'</span>'+\r\n'</div>';};", "<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/is_online_help.tpl.php')); ?>\n\n<?php\n\n// Perhaps user does not want to show live help when it's offline\nif ( !($isOnlineHelp == false && $hide_offline == 'true') ) : ?>\n\n/*! Cookies.js - 0.4.0; Copyright (c) 2014, Scott Hamper; http://www.opensource.org/licenses/MIT */\n(function(e){\"use strict\";var b=function(a,d,c){return 1===arguments.length?b.get(a):b.set(a,d,c)};b._document=document;b._navigator=navigator;b.defaults={path:\"/\"};b.get=function(a){b._cachedDocumentCookie!==b._document.cookie&&b._renewCache();return b._cache[a]};b.set=function(a,d,c){c=b._getExtendedOptions(c);c.expires=b._getExpiresDate(d===e?-1:c.expires);b._document.cookie=b._generateCookieString(a,d,c);return b};b.expire=function(a,d){return b.set(a,e,d)};b._getExtendedOptions=function(a){return{path:a&& a.path||b.defaults.path,domain:a&&a.domain||b.defaults.domain,expires:a&&a.expires||b.defaults.expires,secure:a&&a.secure!==e?a.secure:b.defaults.secure}};b._isValidDate=function(a){return\"[object Date]\"===Object.prototype.toString.call(a)&&!isNaN(a.getTime())};b._getExpiresDate=function(a,d){d=d||new Date;switch(typeof a){case \"number\":a=new Date(d.getTime()+1E3*a);break;case \"string\":a=new Date(a)}if(a&&!b._isValidDate(a))throw Error(\"`expires` parameter cannot be converted to a valid Date instance\"); return a};b._generateCookieString=function(a,b,c){a=a.replace(/[^#$&+\\^`|]/g,encodeURIComponent);a=a.replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\");b=(b+\"\").replace(/[^!#$&-+\\--:<-\\[\\]-~]/g,encodeURIComponent);c=c||{};a=a+\"=\"+b+(c.path?\";path=\"+c.path:\"\");a+=c.domain?\";domain=\"+c.domain:\"\";a+=c.expires?\";expires=\"+c.expires.toUTCString():\"\";return a+=c.secure?\";secure\":\"\"};b._getCookieObjectFromString=function(a){var d={};a=a?a.split(\"; \"):[];for(var c=0;c<a.length;c++){var f=b._getKeyValuePairFromCookieString(a[c]); d[f.key]===e&&(d[f.key]=f.value)}return d};b._getKeyValuePairFromCookieString=function(a){var b=a.indexOf(\"=\"),b=0>b?a.length:b;try {return{key:decodeURIComponent(a.substr(0,b)),value:decodeURIComponent(a.substr(b+1))}} catch(e) {return{key:a.substr(0,b),value:a.substr(b+1)}}};b._renewCache=function(){b._cache=b._getCookieObjectFromString(b._document.cookie);b._cachedDocumentCookie=b._document.cookie};b._areEnabled=function(){var a=\"1\"===b.set(\"cookies_lhc.js\",1).get(\"cookies_lhc.js\");b.expire(\"cookies_lhc.js\");return a};b.enabled=b._areEnabled();window.lhc_Cookies=b})();\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/options_variable_page.tpl.php')); ?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/part/javascript_variables.tpl.php')); ?>\n\nvar lh_inst_page  = {\n\tJSON : {\n            parse: window.JSON && (window.JSON.parse || window.JSON.decode) || String.prototype.evalJSON && function(str){return String(str).evalJSON();} || $.parseJSON || $.evalJSON,\n            stringify:  Object.toJSON || window.JSON && (window.JSON.stringify || window.JSON.encode) || $.toJSON\n    },\n\tcookieData : {},\n\n    js_variables : <?php echo json_encode($jsVars);?>,\n\n    lang: '<?php echo erLhcoreClassSystem::instance()->WWWDirLang?>',\n\n    langDefault: '/<?php echo erLhcoreClassSystem::instance()->SiteAccess?>',\n\n    hasSurvey : false,\n    survey_id : '',\n    surveyShown : false,\n    reset : <?php isset($fresh) && $fresh == true ? print 'true' : print 'false'?>,\n    hide : function() {\n        if (!this.cookieData.hash || this.hasSurvey == false || this.surveyShown == true) {\n            var th = document.getElementsByTagName('head')[0];\n            var s = document.createElement('script');\n            s.setAttribute('type','text/javascript');\n            s.setAttribute('src','<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('chat/chatwidgetclosed')?>/(eclose)/t'+this.getAppendCookieArguments());\n            th.appendChild(s);\n            s.onreadystatechange = s.onload = function(){\n                lh_inst_page.removeCookieAttr('hash');\n                lh_inst_page.showStartWindow();\n                lh_inst_page.surveyShown = false;\n            };\n        } else {\n            this.showSurvey();\n        }\n    },\n\n    storeReferrer : function(ref){\n        if (sessionStorage && !sessionStorage.getItem('lhc_ref')) {\n            try {\n                sessionStorage.setItem('lhc_ref',ref);\n            } catch(err) {};\n        }\n    },\n\n    parseStorageArguments : function() {\n        if (sessionStorage && sessionStorage.getItem('lhc_ref') && sessionStorage.getItem('lhc_ref') != '') {\n            return '&r='+encodeURIComponent(sessionStorage.getItem('lhc_ref'));\n        }\n        return '';\n    },\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/part/show_survey_page.tpl.php')); ?>\n\n    parseOptions : function() {\n\t\targumentsQuery = new Array();\n        var paramsReturn = '';\n\t\tif (typeof <?php echo $chatOptionsVariablePage?> != 'undefined') {\n\t    \tif (typeof <?php echo $chatOptionsVariablePage?>.attr != 'undefined') {\n\t    \t\tif (<?php echo $chatOptionsVariablePage?>.attr.length > 0){\n\t\t\t\t\tfor (var index in <?php echo $chatOptionsVariablePage?>.attr) {\n\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariablePage?>.attr[index] != 'undefined' && typeof <?php echo $chatOptionsVariablePage?>.attr[index].type != 'undefined') {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\targumentsQuery.push('name[]='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr[index].name)+'&encattr[]='+(typeof <?php echo $chatOptionsVariablePage?>.attr[index].encrypted != 'undefined' && <?php echo $chatOptionsVariablePage?>.attr[index].encrypted == true ? 't' : 'f')+'&value[]='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr[index].value)+'&type[]='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr[index].type)+'&size[]='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr[index].size)+'&req[]='+(typeof <?php echo $chatOptionsVariablePage?>.attr[index].req != 'undefined' && <?php echo $chatOptionsVariablePage?>.attr[index].req == true ? 't' : 'f')+'&sh[]='+((typeof <?php echo $chatOptionsVariablePage?>.attr[index].show != 'undefined' && (<?php echo $chatOptionsVariablePage?>.attr[index].show == 'on' || <?php echo $chatOptionsVariablePage?>.attr[index].show == 'off')) ? <?php echo $chatOptionsVariablePage?>.attr[index].show : 'b'));\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t    \t\t};\n\t    \t};\n\n\t    \tif (typeof <?php echo $chatOptionsVariablePage?>.attr_prefill != 'undefined') {\n\t    \t\tif (<?php echo $chatOptionsVariablePage?>.attr_prefill.length > 0){\n\t\t\t\t\tfor (var index in <?php echo $chatOptionsVariablePage?>.attr_prefill) {\n\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariablePage?>.attr_prefill[index] != 'undefined' && typeof <?php echo $chatOptionsVariablePage?>.attr_prefill[index].name != 'undefined') {\n\t\t\t\t\t\t\targumentsQuery.push('prefill['+<?php echo $chatOptionsVariablePage?>.attr_prefill[index].name+']='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr_prefill[index].value));\n\t\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariablePage?>.attr_prefill[index].hidden != 'undefined') {\n\t\t\t\t\t\t\t\targumentsQuery.push('hattr[]='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr_prefill[index].name));\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t    \t\t};\n\t    \t};\n\n\t    \tif (typeof <?php echo $chatOptionsVariablePage?>.attr_prefill_admin != 'undefined') {\n\t    \t\tif (<?php echo $chatOptionsVariablePage?>.attr_prefill_admin.length > 0){\n\t\t\t\t\tfor (var index in <?php echo $chatOptionsVariablePage?>.attr_prefill_admin) {\n\t\t\t\t\t\tif (typeof <?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index] != 'undefined') {\n\t\t\t\t\t\t\targumentsQuery.push('value_items_admin['+<?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].index+']='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].value));\t\n\n\t\t\t\t\t\t    if (typeof <?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].hidden != 'undefined') {\n\t\t\t\t\t\t\t     argumentsQuery.push('via_hidden['+<?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].index+']='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].hidden == true ? 't' : 'f'));\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t    if (typeof <?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].encrypted != 'undefined') {\n\t\t\t\t\t\t\t     argumentsQuery.push('via_encrypted['+<?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].index+']='+encodeURIComponent(<?php echo $chatOptionsVariablePage?>.attr_prefill_admin[index].encrypted == true ? 't' : 'f'));\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t    \t\t};\n\t    \t};\n\t    \t\n\t    \tif (argumentsQuery.length > 0) {\n\t    \t\tparamsReturn = '&'+argumentsQuery.join('&');\n\t    \t};\n    \t};\n\n        var js_args = [];\n        var currentVar = null;\n        for (var index in this.js_variables) {\n            try {\n                currentVar = eval(this.js_variables[index].var);\n                if (typeof currentVar !== 'undefined' && currentVar !== null && currentVar !== '') {\n                    js_args.push('jsvar['+this.js_variables[index].id+']='+encodeURIComponent(currentVar));\n                }\n            } catch(err) {\n                \n            }\n        }\n\n        if (js_args.length > 0) {\n            paramsReturn = paramsReturn + '&' + js_args.join('&');\n        }\n\n    \treturn paramsReturn;\n    },\n\n    getAppendCookieArguments : function() {\n\t\t    var hashAppend = this.cookieData.hash && this.reset == false ? '/(hash)/'+this.cookieData.hash : '';\n\t\t    var hashResume = this.cookieData.hash_resume && this.reset == false ? '/(hash_resume)/'+this.cookieData.hash_resume : '';\n\t\t    var soundOption = this.cookieData.s ? '/(sound)/'+this.cookieData.s : '';\n\n\t\t    var paid_hash = '';\n\t\t    if (typeof <?php echo $chatOptionsVariablePage?> != 'undefined' && typeof <?php echo $chatOptionsVariablePage?>.attr_paid != 'undefined') {\n\t\t          paid_hash = '/(phash)/'+ <?php echo $chatOptionsVariablePage?>.attr_paid.phash;\n\t\t          paid_hash = paid_hash + '/(pvhash)/'+ <?php echo $chatOptionsVariablePage?>.attr_paid.pvhash;\n\t\t    };\n\n\t\t    return hashAppend+hashResume+soundOption+paid_hash+this.survey_id;\n    },\n\n    addCss : function(css_content) {\n        var head = document.getElementsByTagName('head')[0];\n        var style = document.createElement('style');\n        style.type = 'text/css';\n\n        if(style.styleSheet) {\n        style.styleSheet.cssText = css_content;\n        } else {\n        rules = document.createTextNode(css_content);\n        style.appendChild(rules);\n        };\n\n        head.appendChild(style);\n    },\n\n\taddCookieAttribute : function(attr, value){\n    \tif (!this.cookieData[attr] || this.cookieData[attr] != value){\n\t    \tthis.cookieData[attr] = value;\n\t    \tthis.storeSesCookie();\n    \t}\n    },\n\n    showStartWindow : function(url_to_open) {\n\n        var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n\n        var mobileFullHeight = typeof <?php echo $chatOptionsVariablePage?>.opt.mobile === 'undefined' || <?php echo $chatOptionsVariablePage?>.opt.mobile === true;\n\n        if ( url_to_open != undefined ) {\n            this.initial_iframe_url = url_to_open+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.parseOptions()+'&dt='+encodeURIComponent(document.title)+this.parseStorageArguments();\n        } else {\n            this.initial_iframe_url = \"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('chat/chatwidget')?><?php $leaveamessage == true ? print '/(leaveamessage)/true' : ''?><?php $department !== false ? print '/(department)/'.$department : ''?><?php $theme !== false ? print '/(theme)/'.$theme : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $bot_id !== null ? print '/(bot_id)/'.$bot_id : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : ''?>/(mode)/embed\" + (mobileFullHeight === false ? '/(mobile)/false' : '') + this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.parseOptions()+this.parseStorageArguments();\n        };\n\n        if (mobileFullHeight === true) {\n            var raw_css = \"@media only screen and (max-device-width : 640px) { #<?php echo $chatCSSPrefix?>_status_container_page{position: fixed; overflow: hidden; right: 0px; left: 0px; top: 0px; bottom: 0px;} #<?php echo $chatCSSPrefix?>_status_container_page iframe{width:100% !important;height: 100%!important}}\";\n            this.addCss(raw_css);\n        }\n\n        this.iframe_html = '<iframe id=\"<?php echo $chatCSSPrefix?>_iframe_page\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Live Help')?>\" allowTransparency=\"true\" scrolling=\"no\" class=\"loading\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"100%\"' +\n                       ' height=\"340\"' +\n                       ' style=\"width: 100%; height: 340px;\"></iframe>';\n\n\t\tdocument.getElementById('<?php echo $chatCSSPrefix?>_status_container_page').innerHTML = this.iframe_html;\n    },\n\n\tstoreSesCookie : function(){\n    \tif (sessionStorage) {\n    \t\tsessionStorage.setItem('lhc_ses',this.JSON.stringify(this.cookieData));\n    \t} else {\n\t    \tlhc_Cookies('lhc_ses',this.JSON.stringify(this.cookieData));\n\t    }\n    },\n\n    initSessionStorage : function(){\n    \tif (sessionStorage && sessionStorage.getItem('lhc_ses')) {\n    \t\tthis.cookieData = this.JSON.parse(sessionStorage.getItem('lhc_ses'));\n    \t} else {\n\t    \tvar cookieData = lhc_Cookies('lhc_ses');\n\t\t\tif ( typeof cookieData === \"string\" && cookieData ) {\n\t\t\t\tthis.cookieData = this.JSON.parse(cookieData);\n\t\t\t}\n\t\t}\n    },\n\n\tremoveCookieAttr : function(attr){\n    \tif (this.cookieData[attr]) {\n    \t\tdelete this.cookieData[attr];\n    \t\tthis.storeSesCookie();\n    \t}\n    },\n\n    appendArg : function(args) {\n        var tt = args.length/2;\n        for (i = 0; i < tt; i++) {\n            var argument = args[i*2];\n            var value = args[(i*2)+1];\n            if (argument == 'survey_id') {\n                this.survey_id = '/(survey)/'+value;\n                this.hasSurvey = true;\n            }\n        }\n    },\n\n\tgenericCallback : function(name){\n    \tif (typeof <?php echo $chatOptionsVariablePage?> != 'undefined' && typeof <?php echo $chatOptionsVariablePage?>.callback != 'undefined' && typeof <?php echo $chatOptionsVariablePage?>.callback[name] != 'undefined') {\n    \t\t<?php echo $chatOptionsVariablePage?>.callback[name](this);    \t\n    \t}\n    },\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/functions/send_notification.tpl.php')); ?>\n\n    handleMessage : function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_chat_page') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('<?php echo $chatCSSPrefix?>_iframe_page');\n            if (parseInt(height) < (<?php echo $chatOptionsVariablePage?>.opt.height ? <?php echo $chatOptionsVariablePage?>.opt.height : 300)) {\n                elementObject.height = (<?php echo $chatOptionsVariablePage?>.opt.height ? <?php echo $chatOptionsVariablePage?>.opt.height : 300);\n                elementObject.style.height = (<?php echo $chatOptionsVariablePage?>.opt.height ? <?php echo $chatOptionsVariablePage?>.opt.height : 300)+'px';\n            } else {\n                if (height > elementObject.height) {\n                    elementObject.height = height;\n                    elementObject.style.height = height+'px';\n                }\n            }\n    \t} else if (action == 'lhc_ch') {\n    \t\tvar parts = e.data.split(':');\n    \t\tif (parts[1] != '' && parts[2] != '') {\n    \t\t\tlh_inst_page.addCookieAttribute(parts[1],parts[2]);\n    \t\t};\n    \t} else if (action == 'lhc_chat_redirect') {\n            document.location = e.data.split(':')[1].replace(new RegExp('__SPLIT__','g'),':');\n    \t} else if (action == 'lh_callback') {\n    \t\tvar functionName = e.data.split(':')[1];\n    \t\tlh_inst_page.genericCallback(functionName);\n        } else if (action == 'lhc_chat_survey') {\n    \t\tvar value = e.data.split(':')[1];\n            lh_inst_page.survey_id = '/(survey)/'+value;\n            lh_inst_page.hasSurvey = true;\n    \t} else if (action == 'lhc_close') {\n    \t\tlh_inst_page.hide();\n        } else if (action == 'lhc_notification') {\n            var parts = e.data.split(':');\n            lh_inst_page.sendNotification(parts);\n    \t} else if (action == 'lhc_chat_closed_explicit') {\n    \t\tlh_inst_page.hide();\n    \t} <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/handlemessageembed_multiinclude.tpl.php')); ?>\n    }\n};\n\n<?php if ($referrer != '') : ?>\nlh_inst_page.storeReferrer(<?php echo json_encode($referrer)?>);\n<?php endif; ?>\n\nlh_inst_page.initSessionStorage();\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\", lh_inst_page.handleMessage);\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\", lh_inst_page.handleMessage);\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\", lh_inst_page.handleMessage, false);\n};\n\nlh_inst_page.showStartWindow();\n\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.addEventListener('message', function(event) {\n        if (typeof event.data.lhc_ch !== 'undefined' && typeof event.data.lhc_cid !== 'undefined') {\n            lh_inst_page.readNotification(event.data.lhc_cid, event.data.lhc_ch);\n        }\n    });\n}\n\n<?php endif;\nexit;?>", "<span class=\"usr-tit<?php echo $msg['user_id'] == 0 ? ' vis-tit' : ' op-tit'?>\">\n    <?php if (\n        isset($theme) && $theme !== false && isset($theme->bot_configuration_array['bubble_style_profile']) &&\n        $theme->bot_configuration_array['bubble_style_profile'] == 1 &&\n        $msg['user_id'] == -2 &&\n        $chat->bot instanceof erLhcoreClassModelGenericBotBot &&\n        $chat->bot->has_photo_avatar\n    ) : ?>\n        <i title=\"<?php echo htmlspecialchars($msg['name_support'])?>\" class=\"chat-operators mi-fs15 mr-0\">\n            <?php if ($chat->bot->has_photo) : ?>\n            <img class=\"profile-msg-pic\" src=\"<?php echo $chat->bot->photo_path?>\" alt=\"\">\n            <?php else : ?>\n            <img class=\"profile-msg-pic\" src=\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurldirect('widgetrestapi/avatar')?>/<?php echo htmlspecialchars($chat->bot->avatar)?>\" alt=\"\" />\n            <?php endif; ?>\n        </i>\n    <?php elseif ($msg['user_id'] > 0 && isset($theme) && $theme !== false && isset($theme->bot_configuration_array['bubble_style_profile']) && $theme->bot_configuration_array['bubble_style_profile'] == 1 &&\n        ($userMessage = erLhcoreClassModelUser::fetch($msg['user_id'],true)) && $userMessage instanceof erLhcoreClassModelUser && $userMessage->has_photo_avatar\n    ) : ?>\n            <i title=\"<?php echo htmlspecialchars($msg['name_support'])?>\" class=\"chat-operators mi-fs15 mr-0\">\n                <?php if ($userMessage->has_photo) : ?>\n                    <img class=\"profile-msg-pic\" src=\"<?php echo $userMessage->photo_path?>\" alt=\"\">\n                <?php else : ?>\n                    <img class=\"profile-msg-pic\" src=\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurldirect('widgetrestapi/avatar')?>/<?php echo htmlspecialchars($userMessage->avatar)?>\" alt=\"\" />\n                <?php endif; ?>\n            </i>\n    <?php elseif (isset($theme) && $theme !== false && isset($theme->bot_configuration_array['bubble_style_profile']) && $theme->bot_configuration_array['bubble_style_profile'] == 1 && $theme->operator_image_avatar !== false) : ?>\n        <i title=\"<?php echo htmlspecialchars($msg['name_support'])?>\" class=\"chat-operators mi-fs15 mr-0\">\n            <?php if ($theme->operator_image_url !== false) : ?>\n                <img class=\"profile-msg-pic\" src=\"<?php echo $theme->operator_image_url?>\" alt=\"\">\n            <?php else : ?>\n                <img class=\"profile-msg-pic\" src=\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurldirect('widgetrestapi/avatar')?>/<?php echo htmlspecialchars($theme->bot_configuration_array['operator_avatar'])?>\" alt=\"\" />\n            <?php endif; ?>\n        </i>\n    <?php else : ?>\n        <i title=\"<?php echo htmlspecialchars($msg['name_support'])?>\" class=\"material-icons chat-operators mi-fs15 mr-0\"><?php if (isset($react) && $react == true) : ?>&#xf10d;<?php else : ?>account_box<?php endif; ?> </i>\n        <span class=\"op-nick-title\"><?php echo htmlspecialchars($msg['name_support'])?></span>\n    <?php endif; ?>\n</span>", "<?php if ($user->has_photo) : ?>\n<img width=\"48\" height=\"48\" src=\"<?php echo $user->photo_path?>\" alt=\"<?php echo htmlspecialchars($user->name_support)?>\" />\n<?php else : ?>\n<img width=\"48\" height=\"48\" src=\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurldirect('widgetrestapi/avatar')?>/<?php echo htmlspecialchars($user->avatar)?>\" alt=\"<?php echo htmlspecialchars($user->name_support)?>\" />\n<?php endif; ?>\n", "<div class=\"operator-info d-flex\">\r\n\t<div>\r\n     \t<?php if ($theme !== false && $theme->operator_image_avatar !== false) : ?>\r\n\r\n        <?php if ($theme->operator_image_url !== false) : ?>\r\n     \t\t\t<img width=\"48\" height=\"48\" src=\"<?php echo $theme->operator_image_url?>\" alt=\"\" />\r\n        <?php else : ?>\r\n                <img width=\"48\" height=\"48\" src=\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurldirect('widgetrestapi/avatar')?>/<?php echo htmlspecialchars($theme->bot_configuration_array['operator_avatar'])?>\" alt=\"\" />\r\n        <?php endif; ?>\r\n\r\n     \t<?php else : ?>\r\n     \t\t<i class=\"icon-assistant material-icons\">\r\n                <?php if (isset($react) && $react == true) : ?>&#xf10d;<?php else : ?>account_box<?php endif; ?>\r\n            </i>\r\n     \t<?php endif;?> \r\n     </div>\r\n     <div class=\"p-1 pl-2 w-100\">\r\n\r\n         <?php if (!isset($react)) : ?>\r\n            <?php $rightLanguage = true;?>\r\n            <?php include(erLhcoreClassDesign::designtpl('pagelayouts/parts/switch_language.tpl.php'));?>\r\n         <?php endif; ?>\r\n\r\n\t    <span><i><?php if ($theme !== false && $theme->intro_operator_text != '') : ?><?php echo htmlspecialchars($theme->intro_operator_text); ?><?php else : ?><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/startchat','Have a question? Ask us!');?>\r\n\t    <?php endif;?>\r\n\t    </i></span>\r\n\t    <?php include(erLhcoreClassDesign::designtpl('lhchat/part/operator_profile_start_chat_post.tpl.php'));?>\r\n     </div>\r\n</div>\r\n", "<?php if ($theme === false || $theme->show_copyright == 1) : ?><span id=\"lhc_chatbox_title\"><a title=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print '' : print 'Powered by Live Helper Chat' ?>\" href=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print htmlspecialchars($theme->widget_copyright_url) : print 'http://livehelperchat.com' ?>\" rel=\"noreferrer\" target=\"_blank\"><img src=\"<?php if ($theme !== false && $theme->copyright_image_url !== false) : print $theme->copyright_image_url; else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/general/logo_grey.png');?><?php endif;?>\" alt=\"Live Helper Chat\" /></a></span><?php endif;?>", "<?php if ($theme === false || $theme->show_copyright == 1) : ?><span id=\"lhc_faq_title\"><a title=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print '' : print 'Powered by Live Helper Chat' ?>\" href=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print htmlspecialchars($theme->widget_copyright_url) : print 'http://livehelperchat.com' ?>\" target=\"_blank\" rel=\"noreferrer\"><img src=\"<?php if ($theme !== false && $theme->copyright_image_url !== false) : print $theme->copyright_image_url; else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/general/logo_grey.png');?><?php endif;?>\" alt=\"Live Helper Chat\" /></a></span><?php endif;?>", "<?php $iconsStatuses['copyright_image_url'] = ($theme !== false && $theme->copyright_image_url !== false && strpos($theme->copyright_image_url, 'http') !== false);          \t          \t\r\nif ($theme === false || $theme->show_copyright == 1) : ?><span id=\"lhc_title\"><a title=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print '' : print 'Powered by Live Helper Chat' ?>\" href=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print htmlspecialchars($theme->widget_copyright_url) : print 'http://livehelperchat.com' ?>\" target=\"_blank\"><img src=\"<?php if ($theme !== false && $theme->copyright_image_url !== false) : print $theme->copyright_image_url; else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/general/logo_grey.png');?><?php endif;?>\" alt=\"Live Helper Chat\" /></a></span><?php endif;?>", "<?php if ($theme === false || $theme->show_copyright == 1) : ?><span id=\"lhc_questionary_title\"><a rel=\"noreferrer\" title=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print '' : print 'Powered by Live Helper Chat' ?>\" href=\"<?php $theme !== false && $theme->widget_copyright_url != '' ? print htmlspecialchars($theme->widget_copyright_url) : print 'http://livehelperchat.com' ?>\" target=\"_blank\"><img src=\"<?php if ($theme !== false && $theme->copyright_image_url !== false) : print $theme->copyright_image_url; else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/general/logo_grey.png');?><?php endif;?>\" alt=\"Live Helper Chat\" /></a></span><?php endif;?>", "<?php include(erLhcoreClassDesign::designtpl('lhchatbox/getstatus/options_variable_page.tpl.php')); ?>\n\nvar lhc_ChatboxPage = {\n\tJSON : {\n            parse: window.JSON && (window.JSON.parse || window.JSON.decode) || String.prototype.evalJSON && function(str){return String(str).evalJSON();} || $.parseJSON || $.evalJSON,\n            stringify:  Object.toJSON || window.JSON && (window.JSON.stringify || window.JSON.encode) || $.toJSON\n    },\n\tcookieData : {},\n\n\tshowVotingForm : function() {\n\t\t  var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n   \t\t  this.initial_iframe_url = \"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('chatbox/chatwidget')?>/(chat_height)/<?php echo $heightchatcontent;?><?php $theme !== false ? print '/(theme)/'.$theme : ''?>/(mode)/embed/(identifier)/\"+<?php echo $chatboxOptionsVariablePage;?>.identifier+'/(hashchatbox)/'+<?php echo $chatboxOptionsVariablePage;?>.hashchatbox+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.getAppendRequestArguments();\n\n   \t\t  this.iframe_html = '<iframe id=\"lhc_sizing_chatbox_page\" allowTransparency=\"true\" scrolling=\"no\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"100%\"' +\n                       ' height=\"300\"' +\n                       ' style=\"width: 100%; height: 300px;\"></iframe>';\n\n          document.getElementById('lhc_chatbox_embed_container').innerHTML = this.iframe_html;\n    },\n\n    getAppendRequestArguments : function() {\n\t\t    var nickOption = (typeof <?php echo $chatboxOptionsVariablePage;?>.nick !== 'undefined') ?  '&nick='+encodeURIComponent(<?php echo $chatboxOptionsVariablePage;?>.nick) : (this.cookieData.nick ? '&nick='+encodeURIComponent(this.cookieData.nick) : '');\n\t\t    var disableOption = (typeof <?php echo $chatboxOptionsVariablePage;?>.disable_nick_change !== 'undefined') ?  '&dnc=true' : '';\n\t\t    var chatboxName = (typeof <?php echo $chatboxOptionsVariablePage;?>.chatbox_name !== 'undefined') ?  '&chtbx_name='+encodeURIComponent(<?php echo $chatboxOptionsVariablePage;?>.chatbox_name) : '';\n\t\t    return nickOption+disableOption+chatboxName;\n    },\n\n\tgetAppendCookieArguments : function() {\n\t\t    var soundOption = this.cookieData.s ? '/(sound)/'+this.cookieData.s : '';\n\t\t    var nickOption = this.cookieData.n ? '/(nick)/'+this.cookieData.n : '';\n\t\t    return soundOption+nickOption;\n    },\n\n   handleMessage : function(e) {\n        if (typeof e.data !== 'string') { return; }\n\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_chatbox_page') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('lhc_sizing_chatbox_page');\n    \t\telementObject.height = height;\n    \t\telementObject.style.height = height+'px';\n    \t} else if (action == 'lhc_ch') {\n    \t\tvar parts = e.data.split(':');\n    \t\tif (parts[1] != '' && parts[2] != '') {\n    \t\t\tlhc_ChatboxPage.addCookieAttribute(parts[1],parts[2]);\n    \t\t}\n    \t} else if (action == 'lhc_chb') {\n    \t\tvar parts = e.data.split(':');\n    \t\tif (parts[1] != '' && parts[2] != '') {\n    \t\t\tlhc_ChatboxPage.addCookieAttribute(parts[1],parts[2]);\n    \t\t}\n    \t}\n    },\n\n    removeCookieAttr : function(attr){\n    \tif (this.cookieData[attr]) {\n    \t\tdelete this.cookieData[attr];\n    \t\tthis.storeSesCookie();\n    \t}\n    },\n\n   storeSesCookie : function(){\n    \tif (localStorage) {\n    \t\tlocalStorage.setItem('lhc_chb',this.JSON.stringify(this.cookieData));\n    \t}\n   },\n\n   initSessionStorage : function(){\n    \tif (localStorage && localStorage.getItem('lhc_chb')) {\n    \t\tthis.cookieData = this.JSON.parse(localStorage.getItem('lhc_chb'));\n    \t}\n   },\n\n   addCookieAttribute : function(attr, value){\n    \tif (!this.cookieData[attr] || this.cookieData[attr] != value){\n\t    \tthis.cookieData[attr] = value;\n\t    \tthis.storeSesCookie();\n    \t}\n   }\n};\n\nlhc_ChatboxPage.initSessionStorage();\nlhc_ChatboxPage.showVotingForm();\n\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\",function(e){lhc_ChatboxPage.handleMessage(e);});\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\",function(e){lhc_ChatboxPage.handleMessage(e);});\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\",function(e){lhc_ChatboxPage.handleMessage(e);}, false);\n};", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select class=\"form-control\" id=\"LocaleID\">\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Chatbox messages content height');?></label> <input class=\"form-control\" type=\"text\" id=\"id_chat_height\" value=\"220\" />\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select class=\"form-control\" id=\"HttpMode\">\n\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6 end\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select class=\"form-control\" id=\"ThemeID\">\n\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n\t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n\t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t\t</div>\n\t</div>\n</div>\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the text area to the page where you want it to be rendered');?></p>\n\n<textarea ng-non-bindable style=\"width: 100%; height: 180px; font-size: 12px;\" id=\"HMLTContent\"></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var chat_height = '/(chat_height)/'+($('#id_chat_height').val() == '' ? 220 : $('#id_chat_height').val());\n    var id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n    \n    var id_tag = <?php include(erLhcoreClassDesign::designtpl('lhchatbox/embedcode_title.tpl.php'));?>+\"\\n\"+'<div id=\"lhc_chatbox_embed_container\" ></div>'+\"\\n\\n\"+<?php include(erLhcoreClassDesign::designtpl('lhchatbox/embedcode_title_after.tpl.php'));?>+\"\\n\";\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchatbox/getstatus/options_variable_page.tpl.php')); ?>\n    \n    var script = '<script type=\"text/javascript\">'+\"\\nvar <?php echo $chatboxOptionsVariablePage?> = {hashchatbox:'empty',identifier:'default'};\\n\"+\n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'chatbox/embed'+chat_height+id_theme+\"';\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n    $('#HMLTContent').text(id_tag+script);\n};\n\n$('#LocaleID,#id_chat_height,#HttpMode,#ThemeID').change(function(){\n    generateEmbedCode();\n});\ngenerateEmbedCode();\n</script>", "<?php\n\n$positionArgument = array (\n\t\t'bottom_left' => array (\n\t\t\t\t'radius' => 'right',\n\t\t\t\t'position' => 'bottom:0;left:0;',\n\t\t\t\t'position_body' => 'bottom:0;left:0;',\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'moz_radius' => 'topright',\n\t\t\t\t'widget_hover' => '',\n\t\t\t\t'posv' => 'b',\n\t\t\t\t'pos' => 'l',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'chrome_radius' => 'top-right',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-left:0;border-bottom:0;',\n\t\t\t\t'background_position' => '0',\n\t\t\t\t'widget_radius' => '-webkit-border-top-right-radius: 20px;-moz-border-radius-topright: 20px;border-top-right-radius: 20px;'\n\t\t),\n\t\t'bottom_right' => array (\n\t\t\t\t'pos' => 'r',\n\t\t\t\t'posv' => 'b',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => 'bottom:0;right:0;',\n\t\t\t\t'position_body' => 'bottom:0;right:0;',\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'moz_radius' => 'topleft',\n\t\t\t\t'widget_hover' => '',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-right:0;border-bottom:0;',\n\t\t\t\t'background_position' => 'left',\n\t\t\t\t'chrome_radius' => 'top-left',\n\t\t\t\t'widget_radius' => '-webkit-border-top-left-radius: 20px;-moz-border-radius-topleft: 20px;border-top-left-radius: 20px;'\n\t\t),\n\t\t'middle_right' => array (\n\t\t\t\t'pos' => 'r',\n\t\t\t\t'posv' => 't',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => \"top:{$top_pos}{$units};right:-155px;\",\n\t\t\t\t'position_body' => \"top:{$top_pos}{$units};right:0px;\",\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'widget_hover' => 'right:0;transition: 1s;',\n\t\t\t\t'moz_radius' => 'topleft',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-right:0;',\n\t\t\t\t'background_position' => '0',\n\t\t\t\t'chrome_radius' => 'top-left',\n\t\t\t\t'widget_radius' => '-webkit-border-top-left-radius: 20px;-moz-border-radius-topleft: 20px;border-top-left-radius: 20px;      -webkit-border-bottom-left-radius: 20px;-moz-border-radius-bottomleft: 20px;border-bottom-left-radius: 20px;'\n\t\t),\n\t\t'middle_left' => array (\n\t\t\t\t'posv' => 't',\n\t\t\t\t'pos' => 'l',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => \"top:{$top_pos}{$units};left:-155px;\",\n\t\t\t\t'position_body' => \"top:{$top_pos}{$units};left:0px;\",\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'padding_text' => '10px 35px 10px 9px',\n\t\t\t\t'widget_hover' => 'left:0;transition: 1s;',\n\t\t\t\t'moz_radius' => 'topright',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-left:0;',\n\t\t\t\t'background_position' => '95%',\n\t\t\t\t'chrome_radius' => 'top-right',\n\t\t\t\t'widget_radius' => '-webkit-border-top-right-radius: 20px;-moz-border-radius-topright: 20px;border-top-right-radius: 20px;      -webkit-border-bottom-right-radius: 20px;-moz-border-radius-bottomright: 20px;border-bottom-right-radius: 20px;'\n\t\t)\n);\n\nif (key_exists($position, $positionArgument)){\n\t$currentPosition = $positionArgument[$position];\n} else {\n\t$currentPosition = $positionArgument['bottom_left'];\n}\n\n?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchatbox/getstatus/options_variable.tpl.php')); ?>\n\nvar lhc_Chatbox = {\n\tJSON : {\n            parse: window.JSON && (window.JSON.parse || window.JSON.decode) || String.prototype.evalJSON && function(str){return String(str).evalJSON();} || $.parseJSON || $.evalJSON,\n            stringify:  Object.toJSON || window.JSON && (window.JSON.stringify || window.JSON.encode) || $.toJSON\n    },\n\tcookieData : {},\n\n\thasClass : function(el, name) {\n\t   return new RegExp('(\\\\s|^)'+name+'(\\\\s|$)').test(el.className);\n\t},\n\t\n\taddClass : function(el, name) {\n\t   if (!this.hasClass(el, name)) { el.className += (el.className ? ' ' : '') +name; }\n\t},\n\n\tremoveClass : function(el, name) {\n\t   if (this.hasClass(el, name)) {\n\t      el.className=el.className.replace(new RegExp('(\\\\s|^)'+name+'(\\\\s|$)'),' ').replace(/^\\s+|\\s+$/g, '');\n\t   }\n    },\n    storePos : function(dm) {\n\t\t    var cookiePos = '';\n\t\t\t<?php if ($currentPosition['pos'] == 'r') : ?>\n\t\t    \tcookiePos += dm.style.right;\t\t\t    \t   \t\n\t\t    <?php else : ?>\n\t\t    \tcookiePos += dm.style.left;\t\n\t\t    <?php endif;?>\t    \n\t\t    <?php if ($currentPosition['posv'] == 't') : ?>\n\t\t    cookiePos += \",\"+dm.style.top;\n\t\t    <?php else : ?>\n\t\t    cookiePos += \",\"+dm.style.bottom;\t\t\n\t\t    <?php endif;?>\t\t    \n\t\t    this.addCookieAttribute('pos',cookiePos);\t\n    },\n    \n\tmin : function(initial) {\n\t\tvar dm = document.getElementById('lhc_container_chatbox');\t\t\t\t\t\n\t\tif (!dm.attrIsMin || dm.attrIsMin == false) {\n\t\t\tdm.attrHeight = dm.style.height;\n\t\t\tdm.attrIsMin = true;\n\t\t\tthis.addClass(dm,'lhc-min');\t\t\t\t\t\t\t\t\t\n\t\t\t<?php if ($currentPosition['posv'] == 'b') : ?>\t\t\t\n\t\t\tif(dm.style.bottom!='' && dm.attrHeight!=''){\n\t\t\t\tdm.style.bottom = (parseInt(dm.style.bottom)+parseInt(dm.attrHeight)-35)+'px';\t\t\t\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif (initial == undefined) {\n\t\t\t\t\tdm.style.bottom = (parseInt(dm.style.bottom) + parseInt(document.getElementById('lhc_chatbox_iframe_container').offsetHeight)-10)+'px';\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t\t<?php endif; ?>\t\t\t\n\t\t\tthis.addCookieAttribute('m',1);\n\t\t\tthis.storePos(dm);\n\t\t\t<?php if ($currentPosition['posv'] == 'b' && isset($minimize_action) && $minimize_action == 'br') : ?>\n\t\t\t\t\tdm.attrBottomOrigin = dm.style.bottom;\n\t\t\t\t\tdm.style.bottom = '';\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t<?php if ($currentPosition['pos'] == 'r') : ?>\n\t\t\t\t\tdm.attrRightOrigin = dm.style.right;\n\t\t\t\t\tdm.style.right = '0px';\t\n\t\t\t\t\t<?php else : ?>\n\t\t\t\t\tdm.attrLeftOrigin = dm.style.left;\n\t\t\t\t\tdm.style.left = '0px';\t\n\t\t\t\t\t<?php endif;?>\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t<?php endif;?>\n\t\t} else {\t\n\t\t\tdm.attrIsMin = false;\n\t\t\t<?php if ($currentPosition['posv'] == 'b') : ?>\n\t\t\tif (dm.attrBottomOrigin)\t{\n\t\t\t\tdm.style.bottom = (parseInt(dm.attrBottomOrigin)-parseInt(document.getElementById('lhcchatbox_iframe').style.height)+9)+'px';\n\t\t\t\t<?php if ($currentPosition['pos'] == 'r') : ?>\n\t\t\t\tdm.style.right = dm.attrRightOrigin;\t\n\t\t\t\t<?php else : ?>\n\t\t\t\tdm.style.left = dm.attrLeftOrigin;\t\n\t\t\t\t<?php endif;?>\n\t\t\t} else if (dm.style.bottom!=''){\t\t\n\t\t\t\tdm.style.bottom = (parseInt(dm.style.bottom)-parseInt(document.getElementById('lhcchatbox_iframe').style.height)+9)+'px';\n\t\t\t}\n\t\t\t<?php endif;?>\t\t\n\t\t\tthis.removeCookieAttr('m');\n\t\t\tthis.removeClass(dm,'lhc-min');\n\t\t\tvar inst = this;\t\t\n\t\t\tthis.storePos(dm);\n\t\t};\n\t},\n\t\n\t\n\taddCss : function(css_content) {\n        var head = document.getElementsByTagName('head')[0];\n        var style = document.createElement('style');\n        style.type = 'text/css';\n\n        if(style.styleSheet) {\n          style.styleSheet.cssText = css_content;\n        } else {\n          rules = document.createTextNode(css_content);\n          style.appendChild(rules);\n        };\n\n        head.appendChild(style);\n   },\n   is_dragging : false,\n   offset_data : '',\n   appendHTML : function(htmlStr) {\n        var frag = document.createDocumentFragment(),\n            temp = document.createElement('div');\n        temp.innerHTML = htmlStr;\n        while (temp.firstChild) {\n            frag.appendChild(temp.firstChild);\n        };\n        return frag;\n    },\n\n\tremoveById : function(EId)\n    {\n        return(EObj=document.getElementById(EId))?EObj.parentNode.removeChild(EObj):false;\n    },\n\n   hide : function() {\n   \t\t\n    \tvar th = document.getElementsByTagName('head')[0];\n        var s = document.createElement('script');\n        s.setAttribute('type','text/javascript');\n        s.setAttribute('src','<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('chatbox/chatwidgetclosed')?>');\n        th.appendChild(s);\n        this.removeById('lhc_container_chatbox');\n        this.removeCookieAttr('pos');\n        this.removeCookieAttr('is_opened',0);\n        this.removeCookieAttr('m');\n    },\n\n \tgetAppendCookieArguments : function() {\n\t\t    var soundOption = this.cookieData.s ? '/(sound)/'+this.cookieData.s : '';\n\t\t    return soundOption;\n    },\n\n \tgetAppendRequestArguments : function() {\n\t\t    var nickOption = (typeof <?php echo $chatboxOptionsVariable;?>.nick !== 'undefined') ?  '&nick='+encodeURIComponent(<?php echo $chatboxOptionsVariable;?>.nick) : (this.cookieData.nick ? '&nick='+encodeURIComponent(this.cookieData.nick) : '');\n\t\t    var disableOption = (typeof <?php echo $chatboxOptionsVariable;?>.disable_nick_change !== 'undefined') ?  '&dnc=true' : '';\n\t\t    var chatboxName = (typeof <?php echo $chatboxOptionsVariable;?>.chatbox_name !== 'undefined') ?  '&chtbx_name='+encodeURIComponent(<?php echo $chatboxOptionsVariable;?>.chatbox_name) : '';\n\t\t    return nickOption+disableOption+chatboxName;\n    },\n    \n\taddEvent : (function () {\n\t  if (document.addEventListener) {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.addEventListener(type, fn, false);\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lhc_Chatbox.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  } else {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.attachEvent('on' + type, function () { return fn.call(el, window.event); });\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lhc_Chatbox.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  }\n\t})(),\n\t\n\tshowVotingForm : function() {\n\n   \t\t  this.removeById('lhc_container_chatbox');\n\t\t  var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n\t\t  \n   \t\t  this.initial_iframe_url = \"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('chatbox/chatwidget')?>/(chat_height)/<?php echo $heightchatcontent;?><?php $theme !== false ? print '/(theme)/'.$theme->id : ''?>/(identifier)/\"+<?php echo $chatboxOptionsVariable;?>.identifier+'/(hashchatbox)/'+<?php echo $chatboxOptionsVariable;?>.hashchatbox+this.getAppendCookieArguments()+'?URLReferer='+locationCurrent+this.getAppendRequestArguments();\n\n   \t\t  if (window.innerWidth < 1024) {\n          \t\twindow.open(this.initial_iframe_url,\"_blank\");\n          \t\treturn;\n          };\n   \t\t  \n   \t\t  this.addCookieAttribute('is_opened',1);\n\n   \t\t  this.iframe_html = '<div id=\"lhc_chatbox_iframe_container\"><iframe id=\"lhcchatbox_iframe\" allowTransparency=\"true\" scrolling=\"no\" class=\"lhc-loading\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"<?php echo $widthwidget?>\"' +\n                       ' height=\"<?php echo $heightwidget?>\"' +\n                       ' style=\"width: <?php echo $widthwidget?>px; height: <?php echo $heightwidget?>px;\"></iframe></div>';\n\n          this.iframe_html = '<div id=\"lhc_container_chatbox\">' +\n                              '<div id=\"lhc_chatbox_header\"><?php include(erLhcoreClassDesign::designtpl('lhchat/widget_brand/chatbox.tpl.php')); ?><?php if ($show_content === false) : ?><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" id=\"lhc_chatbox_close\"><img src=\"<?php echo erLhcoreClassSystem::getHost()?><?php if ($theme !== false && $theme->close_image_url != '') : ?><?php echo $theme->close_image_url;?><?php else : ?><?php echo erLhcoreClassDesign::design('images/icons/cancel.png');?><?php endif;?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" alt=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" /></a><?php endif;?><?php if ($disable_min === false) : ?><a href=\"#\" id=\"lhc_chatbox_min\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Minimize/Restore')?>\"></a><?php endif;?></div><div id=\"lhc_iframe_container\">' +\n                              this.iframe_html + '</div></div>';\n\n          raw_css = \".lhc-no-transition{ -webkit-transition: none !important; -moz-transition: none !important;-o-transition: none !important;-ms-transition: none !important;transition: none !important;}\\n.lhc-min{height:35px !important}\\n#lhc_container_chatbox * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial\\;font-size:12px\\;line-height:100%\\;box-sizing: content-box\\;-moz-box-sizing:content-box;padding:0;margin:0;}\\n#lhc_container_chatbox img {border:0;}\\n#lhc_chatbox_title{float:left;}\\n#lhc_chatbox_header{position:relative;z-index:9990;height:<?php ($theme !== false && $theme->header_height > 0) ? print $theme->header_height : print '15' ?>px;overflow:hidden;background-color:#<?php $theme !== false ? print $theme->header_background : print '525252' ?>;text-align:right;clear:both;padding:<?php ($theme !== false && $theme->header_padding > 0) ? print $theme->header_padding : print '5' ?>px;}\\n#lhc_chatbox_close,#lhc_chatbox_min{padding:2px;float:right;}.lhc-min #lhc_chatbox_min{background-image:url(<?php echo erLhcoreClassSystem::getHost()?><?php if ($theme !== false && $theme->restore_image_url != '') : ?><?php echo $theme->restore_image_url;?><?php else : ?><?php echo erLhcoreClassDesign::design('images/icons/restore.png');?><?php endif;?>)}#lhc_chatbox_min{width:14px;height:14px;background:url(<?php if ($theme !== false && $theme->minimize_image_url != '') : ?><?php echo $theme->minimize_image_url;?><?php else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/min.png');?><?php endif;?>) no-repeat center center;}\\n\\n#lhc_chatbox_close:hover,#lhc_chatbox_min:hover{opacity:0.4}\\n#lhc_container_chatbox {overflow: hidden;transition-property: height;transition-duration: 0.4s;-webkit-transition: height 0.4s ease-in-out;transition: height 0.4s;background-color:#FFF\\;\\nz-index:9990;\\n position: fixed;<?php echo $currentPosition['position_body']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-webkit-border-radius: 5px;-moz-border-radius: 5px;border-radius: 5px;-moz-user-select:none; -khtml-user-drag:element;cursor: move;cursor: -moz-grab;cursor: -webkit-grab; }\\n#lhc_container_chatbox iframe{position:relative;display:block;transition-property: height;transition-duration: 0.4s;-webkit-transition: height 0.4s ease-in-out;transition: height 0.4s;}\\n#lhc_container_chatbox iframe.lhc-loading{\\nbackground: #FFF url(<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/general/loading.gif');?>) no-repeat center center; }\\n#lhc_container_chatbox #lhc_iframe_container{border:<?php ($theme !== false && $theme->widget_border_width > 0) ? print $theme->widget_border_width : print '1' ?>px solid #<?php $theme !== false ? print $theme->widget_border_color : print 'cccccc' ?>;border-top: 0;border-bottom-left-radius: 5px;border-bottom-right-radius: 5px;overflow: hidden;}\\n@media only screen and (max-width : 640px) {#lhc_container_chatbox{margin-bottom:5px;position:relative;right:0 !important;bottom:0 !important;top:0 !important}#lhc_container_chatbox iframe{width:100% !important}}\";\n\n          if (!this.cssWasAdded) {\n          \t\tthis.cssWasAdded = true;\n          \t\tthis.addCss(raw_css<?php ($theme !== false && $theme->custom_container_css !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_container_css).'\\'' : '' ?>);\n\t\t  };\n\n          var fragment = this.appendHTML(this.iframe_html);\n          document.body.insertBefore(fragment, document.body.childNodes[0]);\n\n\t\t  var lhc_obj = this;\n          <?php if ($show_content === false) : ?>\n          document.getElementById('lhc_chatbox_close').onclick = function() { lhc_obj.hide(); return false; };\n          <?php endif;?>\n                   \n          <?php if ($disable_min === false) : ?>\n          document.getElementById('lhc_chatbox_min').onclick = function() { lhc_obj.min(); return false; };         \n          <?php endif;?>\n                   \n          var domContainer = document.getElementById('lhc_container_chatbox');\n          var domIframe = 'lhcchatbox_iframe';\n          var domContainerId = 'lhc_container_chatbox';\n\t\t  <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/drag_drop_logic.tpl.php')); ?>\n\t\t  \n\t\t  if (this.cookieData.m) {this.min(true);};\n\t\t  \n   },\n\n   showStatusWidget : function() {\n   \t\t<?php if ($show_content === false) : ?>\n       var statusTEXT = '<a id=\"chatbox-icon\" class=\"status-icon\" href=\"#\" >'+<?php echo $chatboxOptionsVariable;?>.status_text+'</a>';\n       var raw_css = \"#lhc_chatbox_container * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial;font-size:12px;line-height:100%;box-sizing: content-box;zoom:1;margin:0;padding:0}\\n#lhc_chatbox_container .status-icon{text-decoration:none;font-size:12px;font-weight:bold;color:#<?php $theme !== false ? print $theme->text_color : print '000' ?>;display:block;padding:<?php echo $currentPosition['padding_text']?>;background:url('<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/emotion_amazing.png');?>') no-repeat <?php echo $currentPosition['background_position']?> center}\\n#lhc_chatbox_container:hover{<?php echo $currentPosition['widget_hover']?>}\\n#lhc_chatbox_container{box-sizing: content-box;<?php echo $currentPosition['widget_radius']?>-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);<?php echo $currentPosition['border_widget']?>;padding:5px 0px 3px 5px;width:190px;font-family:arial;font-size:12px;line-height:100%;transition: 1s;position:fixed;<?php echo $currentPosition['position']?>;background-color:#<?php $theme !== false ? print $theme->onl_bcolor : print 'f6f6f6' ?>;z-index:9989;}\\n<?php if ($noresponse == false) : ?>@media only screen and (max-width : 640px) {#lhc_chatbox_container{position:relative;top:0;right:0;bottom:0;left:0;width:auto;border-radius:2px;box-shadow:none;border:1px solid #e3e3e3;margin-bottom:5px;}}\\n<?php endif;?>\";\n       this.addCss(raw_css<?php ($theme !== false && $theme->custom_status_css !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_status_css).'\\'' : '' ?>);\n       var htmlStatus = '<div id=\"lhc_chatbox_container\">'+statusTEXT+'</div>';\n       var fragment = this.appendHTML(htmlStatus);\n       document.body.insertBefore(fragment, document.body.childNodes[0]);\n       var lhc_obj = this;\n       document.getElementById('chatbox-icon').onclick = function() { lhc_obj.showVotingForm(); return false; };\n       <?php endif;?>\n   },\n\n   removeCookieAttr : function(attr){\n    \tif (this.cookieData[attr]) {\n    \t\tdelete this.cookieData[attr];\n    \t\tthis.storeSesCookie();\n    \t}\n   },\n\n   storeSesCookie : function(){\n    \tif (localStorage) {\n    \t\tlocalStorage.setItem('lhc_chb',this.JSON.stringify(this.cookieData));\n    \t}\n   },\n\n   initSessionStorage : function(){\n    \tif (localStorage && localStorage.getItem('lhc_chb')) {\n    \t\tthis.cookieData = this.JSON.parse(localStorage.getItem('lhc_chb'));\n    \t};\n    \t<?php if ($show_content === true) : ?>\n    \tif (!this.cookieData.is_opened) {\n    \t\tthis.cookieData.is_opened = 1;\n    \t\t<?php if ($show_content_min === true) : ?>\n    \t\tif (!this.cookieData.m) {\n    \t\t\tthis.cookieData.m = 1;\n    \t\t}\n    \t\t<?php endif;?>\n    \t}\n    \t<?php endif;?>\n   },\n\n   addCookieAttribute : function(attr, value){\n    \tif (!this.cookieData[attr] || this.cookieData[attr] != value){\n\t    \tthis.cookieData[attr] = value;\n\t    \tthis.storeSesCookie();\n    \t}\n   },\n\n   handleMessage : function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_chatbox') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('lhcchatbox_iframe');\n    \t\tvar iframeContainer = document.getElementById('lhc_container_chatbox');\n    \t\telementObject.height = height;\n    \t\telementObject.style.height = height+'px';\n    \t\tiframeContainer.className = iframeContainer.className;    \n    \t} else if (action == 'lhc_ch') {\n    \t\tvar parts = e.data.split(':');\n    \t\tif (parts[1] != '' && parts[2] != '') {\n    \t\t\tlhc_Chatbox.addCookieAttribute(parts[1],parts[2]);\n    \t\t}\n    \t} else if (action == 'lhc_chb') {\n    \t\tvar parts = e.data.split(':');\n    \t\tif (parts[1] != '' && parts[2] != '') {\n    \t\t\tlhc_Chatbox.addCookieAttribute(parts[1],parts[2]);\n    \t\t}\n    \t}\n   }\n};\n\nlhc_Chatbox.initSessionStorage();\nlhc_Chatbox.showStatusWidget();\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\",function(e){lhc_Chatbox.handleMessage(e);});\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\",function(e){lhc_Chatbox.handleMessage(e);});\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\",function(e){lhc_Chatbox.handleMessage(e);}, false);\n};\n\nif (lhc_Chatbox.cookieData.is_opened) {\n\tif (window.innerWidth > 1023) {\n\t\tlhc_Chatbox.showVotingForm();\n\t}\n}", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div class=\"row\">\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Status text');?></label> <input class=\"form-control\" type=\"text\" id=\"id_status_text\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Chatbox');?>\" />\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Chatbox messages content height');?></label> <input class=\"form-control\" type=\"text\" id=\"id_chat_height\" value=\"220\" />\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position from the top, is only used if the Middle left or the Middle right side is chosen');?></label>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-8\">\n\t\t\t\t\t<input class=\"form-control\" type=\"text\" id=\"id_top_text\" value=\"300\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t<select class=\"form-control\" id=\"UnitsTop\">\n\t\t\t\t\t\t<option value=\"pixels\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Pixels');?></option>\n\t\t\t\t\t\t<option value=\"percents\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Percents');?></option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Size');?></label>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<input class=\"form-control\" type=\"text\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Width')?>\" id=\"id_width_text\" value=\"300\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<input class=\"form-control\" type=\"text\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Height')?>\" id=\"id_height_text\" value=\"300\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select class=\"form-control\" id=\"LocaleID\">\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position');?></label> <select class=\"form-control\" id=\"PositionID\">\n\t\t\t\t<option value=\"bottom_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom right corner of the screen');?></option>\n\t\t\t\t<option value=\"bottom_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom left corner of the screen');?></option>\n\t\t\t\t<option value=\"middle_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle right side of the screen');?></option>\n\t\t\t\t<option value=\"middle_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle left side of the screen');?></option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><input type=\"checkbox\" id=\"id_disable_responsive\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Disable responsive layout for status widget.');?></label>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select class=\"form-control\" id=\"HttpMode\">\n\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6 end\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select class=\"form-control\" id=\"ThemeID\">\n\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n\t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n\t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t\t</div>\n\t</div>\n</div>\n\n<label><input type=\"checkbox\" id=\"DisableMiminize\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Disable minimize icon');?></label>\n<br>\n<label><input type=\"checkbox\" id=\"ShowContent\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Show chatbox content instead of widget, users will be able only minimize, not close it.');?></label>\n<br>\n<label><input type=\"checkbox\" id=\"ShowContentMinimized\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Show chatbox content minimized first time if content is shown.');?></label>\n<br>\n\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the text area to the footer, before the closing &lt;/body&gt; tag');?></p>\n<textarea ng-non-bindable style=\"width: 100%; height: 180px; font-size: 12px;\" id=\"HMLTContent\"></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var id_position =  '/(position)/'+$('#PositionID').val();\n\tvar textStatus = $('#id_status_text').val();\n\tvar top = '/(top)/'+($('#id_top_text').val() == '' ? 300 : $('#id_top_text').val());\n\tvar topposition = '/(units)/'+$('#UnitsTop').val();\n\tvar widthwidget = '/(width)/'+($('#id_width_text').val() == '' ? 300 : $('#id_width_text').val());\n\tvar heightwidget = '/(height)/'+($('#id_height_text').val() == '' ? 300 : $('#id_height_text').val());\n\tvar chat_height = '/(chat_height)/'+($('#id_chat_height').val() == '' ? 220 : $('#id_chat_height').val());\t\n\tvar show_content = ($('#ShowContent').is(':checked') ? '/(sc)/true' : '');\n\tvar show_min = ($('#ShowContentMinimized').is(':checked')? '/(scm)/true' : '');\n\tvar dis_min = ($('#DisableMiminize').is(':checked')? '/(dmn)/true' : '');\n\tvar id_disable_responsive = $('#id_disable_responsive').is(':checked') ? '/(noresponse)/true' : '';\n\tvar id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n\n\t<?php include(erLhcoreClassDesign::designtpl('lhchatbox/getstatus/options_variable.tpl.php')); ?>\n\t\n    var script = '<script type=\"text/javascript\">'+\"\\nvar <?php echo $chatboxOptionsVariable?> = {hashchatbox:'empty',identifier:'default',status_text:'\"+textStatus+\"'};\\n\"+\n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'chatbox/getstatus'+id_position+top+id_disable_responsive+topposition+widthwidget+id_theme+heightwidget+chat_height+show_content+show_min+dis_min+\"';\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n    $('#HMLTContent').text(script);\n};\n$('#LocaleID,#PositionID,#HttpMode,#id_status_text,#UnitsTop,#id_top_text,#id_width_text,#id_height_text,#ThemeID,#id_disable_responsive,#id_chat_height,#ShowContent,#ShowContentMinimized,#DisableMiminize').change(function(){\n    generateEmbedCode();\n});\ngenerateEmbedCode();\n</script>", "var lhcbrowserOpeator = new LHCCoBrowserOperator(window,document,{'mode':'chat','lhcbase':'<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('cobrowse/proxycss')?>','httpsmode':<?php echo erLhcoreClassSystem::$httpsMode == true ? 'true' : 'false'?>,'disableiframe':<?php echo erLhcoreClassModelChatConfig::fetch('disable_iframe_sharing')->current_value == 1 ? 'true' : 'false'?>,'disablejs':<?php echo erLhcoreClassModelChatConfig::fetch('disable_js_execution')->current_value == 1 ? 'true' : 'false'?>,options:{opcontrol:$('#status-icon-control'),opscroll:$('#sync-user-scroll'),opmouse:$('#show-operator-mouse'),scroll:$('#scroll-user-window')},'cpos':{w:<?php echo $browse->w?>,wh:<?php echo $browse->wh?>},'cursor':'<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/cursor.png')?>','nodejssettings':{'nodejssocket':<?php echo json_encode(erLhcoreClassModelChatConfig::fetch('sharing_nodejs_sllocation')->current_value)?>,'nodejshost':<?php echo json_encode(erLhcoreClassModelChatConfig::fetch('sharing_nodejs_socket_host')->current_value != '' ? erLhcoreClassModelChatConfig::fetch('sharing_nodejs_socket_host')->current_value : str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost()))?>,'path':'<?php echo erLhcoreClassModelChatConfig::fetch('sharing_nodejs_path')->current_value?>','secure':<?php if ((int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_secure')->current_value == 1) : ?>true<?php else : ?>false<?php endif;?>},'nodejsenabled':<?php echo (int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_enabled')->current_value?>,'chat_hash':'<?php echo $browse->chat->hash?>','chat_id':<?php echo $browse->chat_id?>, 'base':<?php echo json_encode($browse->url)?>, 'initialize' : <?php echo $browse->initialize != '' ? $browse->initialize : 'null'?>});", "var lhcbrowserOpeator = new LHCCoBrowserOperator(window,document,{'mode':'onlineuser','lhcbase':'<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('cobrowse/proxycss')?>','httpsmode':<?php echo erLhcoreClassSystem::$httpsMode == true ? 'true' : 'false'?>,'disableiframe':<?php echo erLhcoreClassModelChatConfig::fetch('disable_iframe_sharing')->current_value == 1 ? 'true' : 'false'?>,'disablejs':<?php echo erLhcoreClassModelChatConfig::fetch('disable_js_execution')->current_value == 1 ? 'true' : 'false'?>,options:{opcontrol:$('#status-icon-control'),opscroll:$('#sync-user-scroll'),opmouse:$('#show-operator-mouse'),scroll:$('#scroll-user-window')},'cpos':{w:<?php echo $browse->w?>,wh:<?php echo $browse->wh?>},'cursor':'<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/cursor.png')?>','nodejssettings':{'nodejssocket':<?php echo json_encode(erLhcoreClassModelChatConfig::fetch('sharing_nodejs_sllocation')->current_value)?>,'nodejshost':<?php echo json_encode(erLhcoreClassModelChatConfig::fetch('sharing_nodejs_socket_host')->current_value)?>,'path':'<?php echo erLhcoreClassModelChatConfig::fetch('sharing_nodejs_path')->current_value?>','secure':<?php if ((int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_secure')->current_value == 1) : ?>true<?php else : ?>false<?php endif;?>},'nodejsenabled':<?php echo (int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_enabled')->current_value?>,'online_user_hash':'<?php echo $browse->online_user->vid?>','online_user_id':<?php echo $browse->online_user_id?>, 'base':<?php echo json_encode($browse->url)?>, 'initialize' : <?php echo $browse->initialize != '' ? $browse->initialize : 'null'?>});", "if(typeof formsEnabled == \"undefined\") var formsEnabled = false;\r\nthis.cobrowser = new LHCCoBrowser({'formsenabled':formsEnabled,'chat_hash':this.sharehash,'nodejssettings':{'nodejssocket':<?php echo json_encode(erLhcoreClassModelChatConfig::fetch('sharing_nodejs_sllocation')->current_value)?>,'nodejshost':<?php echo json_encode(erLhcoreClassModelChatConfig::fetch('sharing_nodejs_socket_host')->current_value != '' ? erLhcoreClassModelChatConfig::fetch('sharing_nodejs_socket_host')->current_value : str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost()))?>,'path':'<?php echo erLhcoreClassModelChatConfig::fetch('sharing_nodejs_path')->current_value?>','secure':<?php if ((int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_secure')->current_value == 1) : ?>true<?php else : ?>false<?php endif;?>},'nodejsenabled':<?php echo (int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_enabled')->current_value?>,'trans':{'operator_watching':<?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Screen shared, click to finish'),ENT_QUOTES))?>},'url':'<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurlsite()?>'+lh_inst.lang+'/cobrowse/storenodemap/(sharemode)/'+inst.sharemode+inst.getAppendCookieArguments()+'/?url='+encodeURIComponent(location.href.match(/^(.*\\/)[^\\/]*$/)[1])});\r\nthis.cobrowser.startMirroring();", "<?php // Do not edit this file but create an override ?>\r\n<?php echo '<?xml version=\"1.0\" encoding=\"utf-8\"?>';?>\r\n<chat>\r\n<id><![CDATA[ <?php echo $chat->id?> ]]></id>\r\n<url><![CDATA[<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('chat/single')?>/<?php echo $chat->id?>]]></url>\r\n<requested_by><![CDATA[ <?php echo htmlspecialchars($chat->email)?> ]]></requested_by>\r\n<created_at type=\"datetime\"><?php echo date('c',$chat->time)?></created_at>\r\n<page_url><![CDATA[ <?php echo htmlspecialchars($chat->referrer)?> ]]></page_url>\r\n<page_referrer><![CDATA[ <?php echo htmlspecialchars($chat->session_referrer)?> ]]></page_referrer>\r\n<chat_initiator><![CDATA[ <?php echo $chat->chat_initiator?> ]]></chat_initiator>\r\n<nick><![CDATA[ <?php echo htmlspecialchars($chat->nick)?>]]></nick>\r\n<ip_address><?php echo htmlspecialchars($chat->ip)?></ip_address>\r\n<unanswered><?php echo $chat->na_cb_executed?></unanswered>\r\n<priority><?php echo $chat->priority?></priority>\r\n<country_code><?php echo $chat->country_code?></country_code>\r\n<country><![CDATA[ <?php echo htmlspecialchars($chat->country_name)?> ]]></country>\r\n<city><![CDATA[ <?php echo htmlspecialchars($chat->city)?> ]]></city>\r\n<remarks><![CDATA[ <?php echo htmlspecialchars($chat->remarks)?> ]]></remarks>\r\n<latitude><?php echo $chat->lat?></latitude>\r\n<longitude><?php echo $chat->lon?></longitude>\r\n<additional_data><![CDATA[<?php echo htmlspecialchars($chat->additional_data)?>]]></additional_data>\r\n<operator_variables type=\"array\">\r\n<?php if (!empty($chat->chat_variables)) : $chatVariables = json_decode($chat->chat_variables); ?>\r\n\r\n<?php if (isset($chatVariables['variables'])) : ?>\r\n\t<?php foreach ($chatVariables['variables'] as $key => $variable) : ?>\r\n\r\n\t<?php if (strpos($key, '_ignore') === false && !isset($chatVariables['variables'][$key.'_ignore'])) : ?>\r\n\t\t<operator_variable>\r\n\t\t\t\t<name><![CDATA[<?php echo $key?>]]></name>\r\n\t\t\t\t<value><![CDATA[<?php echo htmlspecialchars($variable)?>]]></value>\r\n\t\t</operator_variable>\r\n\t<?php endif;?>\r\n\r\n\t<?php endforeach;?>\r\n<?php endif;?>\r\n\r\n<?php endif;?>\r\n</operator_variables>\r\n\r\n<operator_variables_filled type=\"array\">\r\n\r\n<?php if (isset($chatVariables['variables_filled'])) : ?>\r\n\t<?php foreach ($chatVariables['variables_filled'] as $key => $variables) : ?>\r\n\t\t<operator_variable>\r\n\t\t\t\t<name><![CDATA[<?php echo $key?>]]></name>\r\n\t\t\t\t<?php foreach ($variables as $variable => $value) : ?>\r\n\t\t\t\t\t<value_<?php echo $variable?>><![CDATA[<?php echo htmlspecialchars($value)?>]]></value_<?php echo $variable?>>\r\n\t\t\t\t<?php endforeach;?>\r\n\t\t</operator_variable>\r\n\t<?php endforeach;?>\r\n<?php endif;?>\r\n\r\n</operator_variables_filled>\r\n\r\n<transcripts type=\"array\">\r\n<?php foreach (erLhcoreClassModelmsg::getList(array('limit' => 5000, 'filter' => array('chat_id' => $chat->id))) as $msg) : ?>\r\n<transcript>\r\n\t<id><?php echo $msg->user_id?></id>\r\n\t<date type=\"datetime\"><?php echo date('r',$msg->time)?></date>\r\n\t<message><![CDATA[<?php echo htmlspecialchars($msg->msg)?>]]></message>\r\n\t<user_id><?php echo $msg->user_id?></user_id>\r\n\t<alias>\r\n\t<?php if ($msg->user_id == -1) : ?>\r\n\tsystem\r\n\t<?php elseif ($msg->user_id == 0) : ?>\r\n\tvisitor\r\n\t<?php elseif ($msg->user_id > 0) : ?>\r\n\t<?php echo htmlspecialchars($msg->name_support)?>\r\n\t<?php endif;?>\r\n\t</alias>\r\n</transcript>\r\n<?php endforeach;?>\r\n</transcripts>\r\n<chat_waittime type=\"integer\"><?php echo $chat->wait_time?></chat_waittime>\r\n<chat_duration type=\"integer\"><?php echo $chat->chat_duration?></chat_duration>\r\n</chat>", "<?php include(erLhcoreClassDesign::designtpl('lhfaq/getstatus/options_variable.tpl.php')); ?>\nvar lhc_FAQEmbed = function() {\n\tvar self = this;\n\tthis.showVotingForm = function() {\n\t\t  var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n   \t\t  this.initial_iframe_url = \"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('faq/faqwidget')?>/(mode)/embed<?php $theme !== false ? print '/(theme)/'.$theme : ''?>\"+'?URLReferer='+locationCurrent+'&URLModule='+encodeURIComponent(<?php echo $faqOptionsVariable;?>.url)+'&identifier='+encodeURIComponent(<?php echo $faqOptionsVariable;?>.identifier);\n   \t\t  this.iframe_html = '<iframe id=\"lhcfaq_iframe_embed\" allowTransparency=\"true\" scrolling=\"no\" class=\"loading\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"100%\"' +\n                       ' height=\"350\"' +\n                       ' style=\"width: 100%; height: 350px;\"></iframe>';\n\n\t\t  document.getElementById('lhc_faq_embed_container').innerHTML = this.iframe_html;\n    };\n\n    this.handleMessage = function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_faq_embed') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('lhcfaq_iframe_embed');\n    \t\telementObject.height = height;\n    \t\telementObject.style.height = height+'px';\n    \t};\n   };\n   this.showVotingForm();\n};\n\nvar lhcFaqEmbed = new lhc_FAQEmbed();\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\",function(e){lhcFaqEmbed.handleMessage(e);});\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\",function(e){lhcFaqEmbed.handleMessage(e);});\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\",function(e){lhcFaqEmbed.handleMessage(e);}, false);\n};\n\n\n", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select id=\"LocaleID\" class=\"form-control\">\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select id=\"HttpMode\" class=\"form-control\">\n\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6 end\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select id=\"ThemeID\" class=\"form-control\">\n\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n\t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n\t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t\t</div>\n\t</div>\n</div>\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the textarea to page where you want it to be rendered');?></p>\n\n<textarea style=\"width: 100%; height: 180px; font-size: 12px;\" id=\"HMLTContent\"></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n    \n    var id_tag = <?php include(erLhcoreClassDesign::designtpl('lhfaq/embedcode_title.tpl.php'));?>+\"\\n\"+'<div id=\"lhc_faq_embed_container\" ></div>'+\"\\n\\n\"+<?php include(erLhcoreClassDesign::designtpl('lhfaq/embedcode_title_after.tpl.php'));?>+\"\\n\";\n    \n    <?php include(erLhcoreClassDesign::designtpl('lhfaq/getstatus/options_variable.tpl.php')); ?>\n    \n    var script = '<script type=\"text/javascript\">'+\"\\nvar <?php echo $faqOptionsVariable;?> = {url:'replace_me_with_dynamic_url',identifier:''};\\n\"+\n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'faq/embed'+id_theme+\"';\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n    $('#HMLTContent').text(id_tag+script);\n};\n\n$('#LocaleID,#HttpMode,#ThemeID').change(function(){\n    generateEmbedCode();\n});\ngenerateEmbedCode();\n</script>", "<?php\n\n$positionArgument = array (\n\t\t'bottom_left' => array (\n\t\t\t\t'radius' => 'right',\n\t\t\t\t'position' => 'bottom:0;left:0;',\n\t\t\t\t'position_body' => 'bottom:0;left:0;',\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'moz_radius' => 'topright',\n\t\t\t\t'widget_hover' => '',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'chrome_radius' => 'top-right',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-left:0;border-bottom:0;',\n\t\t\t\t'background_position' => '0',\n\t\t\t\t'widget_radius' => '-webkit-border-top-right-radius: 20px;-moz-border-radius-topright: 20px;border-top-right-radius: 20px;',\n\t\t\t\t'posv' => 'b',\n\t\t\t\t'pos' => 'l',\n\t\t),\n\t\t'bottom_right' => array (\n\t\t\t\t'pos' => 'r',\n\t\t\t\t'posv' => 'b',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => 'bottom:0;right:0;',\n\t\t\t\t'position_body' => 'bottom:0;right:0;',\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'moz_radius' => 'topleft',\n\t\t\t\t'widget_hover' => '',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'background_position' => 'left',\n\t\t\t\t'chrome_radius' => 'top-left',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-right:0;border-bottom:0;',\n\t\t\t\t'widget_radius' => '-webkit-border-top-left-radius: 20px;-moz-border-radius-topleft: 20px;border-top-left-radius: 20px;'\n\t\t),\n\t\t'middle_right' => array (\n\t\t\t\t'pos' => 'r',\n\t\t\t\t'posv' => 't',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => \"top:{$top_pos}{$units};right:-155px;\",\n\t\t\t\t'position_body' => \"top:{$top_pos}{$units};right:0px;\",\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'widget_hover' => 'right:0;transition: 1s;',\n\t\t\t\t'moz_radius' => 'topleft',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-right:0;',\n\t\t\t\t'background_position' => '0',\n\t\t\t\t'chrome_radius' => 'top-left',\n\t\t\t\t'widget_radius' => '-webkit-border-top-left-radius: 20px;-moz-border-radius-topleft: 20px;border-top-left-radius: 20px;      -webkit-border-bottom-left-radius: 20px;-moz-border-radius-bottomleft: 20px;border-bottom-left-radius: 20px;'\n\t\t),\n\t\t'middle_left' => array (\n\t\t\t\t'posv' => 't',\n\t\t\t\t'pos' => 'l',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => \"top:{$top_pos}{$units};left:-155px;\",\n\t\t\t\t'position_body' => \"top:{$top_pos}{$units};left:0px;\",\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'padding_text' => '10px 35px 10px 9px',\n\t\t\t\t'widget_hover' => 'left:0;transition: 1s;',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-left:0;',\n\t\t\t\t'moz_radius' => 'topright',\n\t\t\t\t'background_position' => '95%',\n\t\t\t\t'chrome_radius' => 'top-right',\n\t\t\t\t'widget_radius' => '-webkit-border-top-right-radius: 20px;-moz-border-radius-topright: 20px;border-top-right-radius: 20px;      -webkit-border-bottom-right-radius: 20px;-moz-border-radius-bottomright: 20px;border-bottom-right-radius: 20px;'\n\t\t)\n);\n\nif (key_exists($position, $positionArgument)){\n\t$currentPosition = $positionArgument[$position];\n} else {\n\t$currentPosition = $positionArgument['bottom_left'];\n}\n\n?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhfaq/getstatus/options_variable.tpl.php')); ?>\n\nvar lhc_FAQ = {\n\tJSON : {\n            parse: window.JSON && (window.JSON.parse || window.JSON.decode) || String.prototype.evalJSON && function(str){return String(str).evalJSON();} || $.parseJSON || $.evalJSON,\n            stringify:  Object.toJSON || window.JSON && (window.JSON.stringify || window.JSON.encode) || $.toJSON\n    },\n    is_dragging : false,\n    offset_data : '',\n\tcookieData : {},\n\taddCss : function(css_content) {\n        var head = document.getElementsByTagName('head')[0];\n        var style = document.createElement('style');\n        style.type = 'text/css';\n\n        if(style.styleSheet) {\n          style.styleSheet.cssText = css_content;\n        } else {\n          rules = document.createTextNode(css_content);\n          style.appendChild(rules);\n        };\n\n        head.appendChild(style);\n   },\n\n   appendHTML : function(htmlStr) {\n        var frag = document.createDocumentFragment(),\n            temp = document.createElement('div');\n        temp.innerHTML = htmlStr;\n        while (temp.firstChild) {\n            frag.appendChild(temp.firstChild);\n        };\n        return frag;\n    },\n\n\tremoveById : function(EId)\n    {\n        return(EObj=document.getElementById(EId))?EObj.parentNode.removeChild(EObj):false;\n    },\n\n    hide : function() {\n        this.removeById('lhc_container_faq');\n    },\n    \n\taddEvent : (function () {\n\t  if (document.addEventListener) {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.addEventListener(type, fn, false);\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lhc_FAQ.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  } else {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.attachEvent('on' + type, function () { return fn.call(el, window.event); });\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lhc_FAQ.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  }\n\t})(),\n\t\n\tshowVotingForm : function() {\n\n   \t\t  this.removeById('lhc_container_faq');\n\n   \t\t  var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n   \t\t  this.initial_iframe_url = \"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('faq/faqwidget')?><?php $theme !== false ? print '/(theme)/'.$theme->id : ''?>\"+'?URLReferer='+locationCurrent+'&URLModule='+encodeURIComponent(<?php echo $faqOptionsVariable;?>.url)+'&identifier='+encodeURIComponent(<?php echo $faqOptionsVariable;?>.identifier);\n\n   \t\t  if (window.innerWidth < 1024) {\n          \t\twindow.open(this.initial_iframe_url,\"_blank\");\n          \t\treturn;\n          };\n          \n   \t\t  this.iframe_html = '<iframe id=\"lhcfaq_iframe\" allowTransparency=\"true\" scrolling=\"no\" class=\"lhc-loading\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"520\"' +\n                       ' height=\"350\"' +\n                       ' style=\"width: 490px; height: 350px;\"></iframe>';\n\n          this.iframe_html = '<div id=\"lhc_container_faq\">' +\n                              '<div id=\"lhc_faq_header\"><?php include(erLhcoreClassDesign::designtpl('lhchat/widget_brand/faq.tpl.php')); ?><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" id=\"lhc_faq_close\"><img src=\"<?php if ($theme !== false && $theme->close_image_url != '') : ?><?php echo $theme->close_image_url;?><?php else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/cancel.png');?><?php endif;?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" alt=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" /></a></div><div id=\"lhc_iframe_container\">' +\n                              this.iframe_html + '</div></div>';\n\n          raw_css = \"#lhc_container_faq * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial\\;line-height:100%\\;font-size:12px\\;box-sizing: content-box\\;-moz-box-sizing:content-box;padding:0;margin:0;}\\n#lhc_container_faq img {border:0;}\\n#lhc_faq_title{float:left;}\\n#lhc_faq_header{position:relative;z-index:9990;height:<?php ($theme !== false && $theme->header_height > 0) ? print $theme->header_height : print '15' ?>px;overflow:hidden;background-color:#<?php $theme !== false ? print $theme->header_background : print '525252' ?>;text-align:right;clear:both;padding:<?php ($theme !== false && $theme->header_padding > 0) ? print $theme->header_padding : print '5' ?>px;}\\n#lhc_faq_close{padding:2px;float:right;}\\n#lhc_faq_close:hover{opacity:0.4;}\\n#lhc_container_faq {-moz-user-select:none; -khtml-user-drag:element;cursor: move;cursor: -moz-grab;cursor: -webkit-grab; overflow: hidden;transition-property: height;transition-duration: 0.4s;-webkit-transition: height 0.4s ease-in-out;transition: height 0.4s;background-color:#FFF\\;width:490px;\\nz-index:9990;\\n position: fixed;<?php echo $currentPosition['position_body']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-webkit-border-radius: 5px;-moz-border-radius: 5px;border-radius: 5px; }\\n#lhc_container_faq iframe{position:relative;display:block;transition-property: height;transition-duration: 0.4s;-webkit-transition: height 0.4s ease-in-out;transition: height 0.4s;}\\n#lhc_container_faq iframe.lhc-loading{\\nbackground: #FFF url(<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/general/loading.gif');?>) no-repeat center center; }\\n#lhc_container_faq #lhc_iframe_container{border:<?php ($theme !== false && $theme->widget_border_width > 0) ? print $theme->widget_border_width : print '1' ?>px solid #<?php $theme !== false ? print $theme->widget_border_color : print 'cccccc' ?>;border-top: 0;border-bottom-left-radius: 5px;border-bottom-right-radius: 5px;overflow: hidden;}\\n@media only screen and (max-width : 640px) {#lhc_container_faq{margin-bottom:5px;position:relative;right:0;bottom:0;top:0;width:100%;}#lhc_container_faq iframe{width:100% !important}}\";\n\n          if (!this.cssWasAdded) {\n          \t\tthis.cssWasAdded = true;\n          \t\tthis.addCss(raw_css<?php ($theme !== false && $theme->custom_container_css !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_container_css).'\\'' : '' ?>);\n\t\t  };\n\n          var fragment = this.appendHTML(this.iframe_html);\n          document.body.insertBefore(fragment, document.body.childNodes[0]);\n\t\t\n\t\t  var lhc_obj = this;\t\t\t\n          document.getElementById('lhc_faq_close').onclick = function() { lhc_obj.hide(); return false; };\n           \n          var domContainer = document.getElementById('lhc_container_faq');\n          var domIframe = 'lhcfaq_iframe';\n          var domContainerId = 'lhc_container_faq';\n\t\t  <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/drag_drop_logic.tpl.php')); ?>\t\n          \n          \n    },\n\n    showStatusWidget : function() {\n       var statusTEXT = '<a id=\"faq-icon\" class=\"status-icon\" href=\"#\" >'+<?php echo $faqOptionsVariable;?>.status_text+'</a>';\n       var raw_css = \"#lhc_faq_container * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial;line-height:100%;font-size:12px;box-sizing: content-box;zoom:1;margin:0;padding:0;}\\n#lhc_faq_container .status-icon{text-decoration:none;font-size:12px;font-weight:bold;color:#<?php $theme !== false ? print $theme->text_color : print '000' ?>;display:block;padding:<?php echo $currentPosition['padding_text']?>;background:url('<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/help.png');?>') no-repeat <?php echo $currentPosition['background_position']?> center}\\n#lhc_faq_container:hover{<?php echo $currentPosition['widget_hover']?>}\\n#lhc_faq_container{box-sizing: content-box;<?php echo $currentPosition['widget_radius']?>-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);<?php echo $currentPosition['border_widget']?>;padding:5px 0px 3px 5px;width:190px;font-family:arial;font-size:12px;transition: 1s;position:fixed;<?php echo $currentPosition['position']?>;background-color:#<?php $theme !== false ? print $theme->onl_bcolor : print 'f6f6f6' ?>;z-index:9989;}\\n<?php if ($noresponse == false) : ?>@media only screen and (max-width : 640px) {#lhc_faq_container{position:relative;top:0;right:0;bottom:0;left:0;width:auto;border-radius:2px;box-shadow:none;border:1px solid #e3e3e3;margin-bottom:5px;}}\\n<?php endif;?>\";\n       this.addCss(raw_css<?php ($theme !== false && $theme->custom_status_css_front !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_status_css_front).'\\'' : '' ?>);\n       var htmlStatus = '<div id=\"lhc_faq_container\">'+statusTEXT+'</div>';\n       var fragment = this.appendHTML(htmlStatus);\n       document.body.insertBefore(fragment, document.body.childNodes[0]);\n       var inst = this;\n       document.getElementById('faq-icon').onclick = function() { inst.showVotingForm(); return false; };\n   },\n\n   handleMessage : function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_faq') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('lhcfaq_iframe');\n    \t\tvar iframeContainer = document.getElementById('lhc_container_faq');\n    \t\telementObject.height = height;\n    \t\telementObject.style.height = height+'px';\n    \t\tiframeContainer.className = iframeContainer.className;    \t\t\n    \t};\n   },\n   \n   addCookieAttribute : function() {\n   \n   }\n\n};\n\nlhc_FAQ.showStatusWidget();\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\",function(e){lhc_FAQ.handleMessage(e);});\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\",function(e){lhc_FAQ.handleMessage(e);});\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\",function(e){lhc_FAQ.handleMessage(e);}, false);\n};\n\n\n", "<h1 class=\"attr-header\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div class=\"row\">\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Status text');?></label> <input type=\"text\" class=\"form-control\" id=\"id_status_text\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','FAQ');?>\" />\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position from the top, only used if the Middle left or the Middle right side is chosen');?></label>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-8 columns\">\n\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"id_top_text\" value=\"450\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-4 columns\">\n\t\t\t\t\t<select id=\"UnitsTop\" class=\"form-control\">\n\t\t\t\t\t\t<option value=\"pixels\">Pixels</option>\n\t\t\t\t\t\t<option value=\"percents\">Percents</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select id=\"LocaleID\" class=\"form-control\">\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position');?></label> <select id=\"PositionID\" class=\"form-control\">\n\t\t\t\t<option value=\"bottom_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom right corner of the screen');?></option>\n\t\t\t\t<option value=\"bottom_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom left corner of the screen');?></option>\n\t\t\t\t<option value=\"middle_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle right side of the screen');?></option>\n\t\t\t\t<option value=\"middle_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle left side of the screen');?></option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<label><input type=\"checkbox\" id=\"id_disable_responsive\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Disable responsive layout for status widget.');?></label>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select id=\"HttpMode\" class=\"form-control\">\n\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6 end\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select id=\"ThemeID\" class=\"form-control\">\n\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n\t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n\t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t\t</div>\n\t</div>\n</div>\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Copy the code from the text area to the page header or footer');?></p>\n<textarea style=\"width: 100%; height: 180px; font-size: 12px;\" id=\"HMLTContent\"></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var id_position =  '/(position)/'+$('#PositionID').val();\n\tvar textStatus = $('#id_status_text').val();\n\tvar top = '/(top)/'+($('#id_top_text').val() == '' ? 400 : $('#id_top_text').val());\n\tvar topposition = '/(units)/'+$('#UnitsTop').val();\n\tvar id_disable_responsive = $('#id_disable_responsive').is(':checked') ? '/(noresponse)/true' : '';\n\tvar id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n\n\t<?php include(erLhcoreClassDesign::designtpl('lhfaq/getstatus/options_variable.tpl.php')); ?>\n\t  \n    var script = '<script type=\"text/javascript\">'+\"\\nvar <?php echo $faqOptionsVariable;?> = {status_text:'\"+textStatus+\"',url:'replace_me_with_dynamic_url',identifier:''};\\n\"+\n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'faq/getstatus'+id_position+top+topposition+id_theme+id_disable_responsive+\"';\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n    $('#HMLTContent').text(script);\n};\n$('#LocaleID,#PositionID,#id_status_text,#UnitsTop,#id_top_text,#HttpMode,#id_disable_responsive,#ThemeID').change(function(){\n    generateEmbedCode();\n});\ngenerateEmbedCode();\n</script>", "<h1 ng-non-bindable><?php echo htmlspecialchars($form)?></h1>\r\n\r\n<div class=\"row pb-2\">\r\n\t<div class=\"col-6\"><a href=\"<?php echo erLhcoreClassDesign::baseurl('form/downloadcollected')?>/<?php echo $form->id?>\" class=\"btn btn-secondary\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Download XLS');?></a></div>\r\n\t<div class=\"col-6\">\r\n\t\r\n\t<div class=\"input-group\">\r\n        <div class=\"input-group-prepend\"><span class=\"input-group-text\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','URL');?></span></div>\r\n      <input type=\"text\" class=\"form-control\" value=\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurldirect('form/fill')?>/<?php echo $form->id?>\">\r\n    </div>\r\n    \r\n\t</div>\r\n</div>\r\n\r\n<table class=\"table\" cellpadding=\"0\" cellspacing=\"0\" ng-non-bindable>\r\n<thead>\r\n<tr>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Name');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Identifier');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Chat');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Intro');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Time');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','IP');?></th>\r\n    <th width=\"1%\">&nbsp;</th>\r\n    <th width=\"1%\">&nbsp;</th>\r\n</tr>\r\n</thead>\r\n<?php foreach ($items as $item) : ?>\r\n    <tr>\r\n    \t<td><?php echo htmlspecialchars($item->getAttrValue($form->name_attr))?></td>\r\n    \t<td>\r\n    \t<div class=\"page-url\"><span><?php echo htmlspecialchars($item->identifier)?></span></div>\r\n    \t</td>\r\n        <td>\r\n    \t<?php if ($item->chat_id > 0) : ?>\r\n            <a class=\"material-icons\" onclick=\"lhc.previewChat(<?php echo $item->chat_id?>)\">info_outline</a>\r\n        <?php else : ?>\r\n            <i class=\"material-icons\">remove_circle_outline</i>\r\n        <?php endif; ?>\r\n    \t</td>\r\n        <td><?php echo $form->intro_attr != '' ? htmlspecialchars($item->getAttrValue($form->intro_attr)) : ''?></td>\r\n        <td><?php echo $item->ctime_front?></td>\r\n        <td><?php echo htmlspecialchars($item->ip)?></td>\r\n        <td nowrap>\r\n\t        <div style=\"width:140px\">\r\n\t        \r\n\t        \t<div class=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n\t            \t<a class=\"btn btn-secondary btn-xs\" href=\"<?php echo erLhcoreClassDesign::baseurl('form/viewcollected')?>/<?php echo $item->id?>\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','View');?></a>\r\n\t            \t<a class=\"btn btn-secondary btn-xs\" href=\"<?php echo erLhcoreClassDesign::baseurl('form/downloaditem')?>/<?php echo $item->id?>\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Download');?></a>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t        </div>\r\n        </td>\r\n        <td nowrap><a onclick=\"return confirm('<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('kernel/message','Are you sure?');?>')\" class=\"csfr-required btn btn-danger btn-xs\" href=\"<?php echo erLhcoreClassDesign::baseurl('form/collected')?>/<?php echo $form->id?>/(action)/delete/(id)/<?php echo $item->id?>\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Delete');?></a></td>\r\n    </tr>\r\n<?php endforeach; ?>\r\n</table>\r\n\r\n<?php include(erLhcoreClassDesign::designtpl('lhkernel/secure_links.tpl.php')); ?>\r\n\r\n<?php if (isset($pages)) : ?>\r\n    <?php include(erLhcoreClassDesign::designtpl('lhkernel/paginator.tpl.php')); ?>\r\n<?php endif;?>", "<?php include(erLhcoreClassDesign::designtpl('lhform/getstatus/options_variable.tpl.php')); ?>\n\nvar lhc_FormEmbed = function() {\n\tvar self = this;\n\tthis.showVotingForm = function() {\n   \t\t  this.initial_iframe_url = \"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('form/formwidget')?>/<?php echo $form_id,$identifier?>\";\n   \t\t  this.iframe_html = '<iframe id=\"lhcform_iframe_embed\" allowTransparency=\"true\" scrolling=\"no\" class=\"loading\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"100%\"' +\n                       ' height=\"350\"' +\n                       ' style=\"width: 100%; height: 350px;\"></iframe>';\n\n\t\t  document.getElementById('lhc_form_embed_container').innerHTML = this.iframe_html;\n    };\n\n    this.handleMessage = function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_form_embed') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('lhcform_iframe_embed');\n    \t\telementObject.height = height;\n    \t\telementObject.style.height = height+'px';\n    \t};\n   };\n   this.showVotingForm();\n};\n\nvar lhcFormEmbed = new lhc_FormEmbed();\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\",function(e){lhcFormEmbed.handleMessage(e);});\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\",function(e){lhcFormEmbed.handleMessage(e);});\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\",function(e){lhcFormEmbed.handleMessage(e);}, false);\n};", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label>\r\n        <select class=\"form-control\" id=\"LocaleID\">\r\n            <?php foreach ($locales as $locale ) : ?>\r\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\r\n            <?php endforeach; ?>\r\n        </select>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n\t   <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label>\r\n\t\t    <select class=\"form-control\" id=\"HttpMode\">         \r\n\t\t            <option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\r\n\t\t            <option value=\"http:\">http:</option>\r\n\t\t            <option value=\"https:\">https:</option>      \r\n\t\t    </select>    \t    \r\n    </div>\r\n    <div class=\"col-md-6\">\r\n\t   <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose what form you want to embed');?></label>\r\n\t   <?php echo erLhcoreClassRenderHelper::renderCombobox( array (\r\n\t\t\t\t\t\t\t\t\t\t'input_name'     => 'FormID',\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t'display_name'   => 'name',\r\n\t\t\t\t\t\t\t\t\t\t'selected_id'    => 0,\r\n\t                                    'css_class'      => 'form-control',\r\n\t\t\t\t\t\t\t\t\t\t'list_function'  => 'erLhAbstractModelForm::getList',\r\n\t\t\t\t\t\t\t\t\t\t'list_function_params'  => array('limit' => '1000000'),\r\n\t\t)); ?> \t    \r\n    </div>\r\n    <div class=\"col-md-6\">\r\n\t   <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Identifier');?></label>\r\n\t   <input class=\"form-control\" type=\"text\" id=\"id_identifier\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Identifier')?>\" value=\"\" /> \t    \r\n    </div>\r\n    \r\n</div>\r\n\r\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the textarea to page where you want it to be rendered');?></p>\r\n\r\n<textarea class=\"form-control\" style=\"width:100%;height:180px;font-size:12px;\" id=\"HMLTContent\" ></textarea>\r\n\r\n<script type=\"text/javascript\">\r\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\r\n\r\nfunction generateEmbedCode(){\r\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\r\n    var formid = $('#id_FormID').val() == default_site_access ? '' : $('#id_FormID').val();\r\n    var identifier = $('#id_identifier').val() == '' ? '' : '?identifier=' + $('#id_identifier').val();\r\n\r\n    var id_tag = '<!-- Place this tag where you want the Live Helper Form module to render. -->'+\"\\n\"+'<div id=\"lhc_form_embed_container\" ></div>'+\"\\n\\n<!-- Place this tag after the Live Helper Form module tag. -->\\n\";\r\n    \r\n    <?php include(erLhcoreClassDesign::designtpl('lhform/getstatus/options_variable.tpl.php')); ?>\r\n    \r\n    var script = '<script type=\"text/javascript\">'+\"\\nvar <?php echo $formOptionsVariable?> = {};\\n\"+\r\n      '(function() {'+\"\\n\"+\r\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\r\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'form/embed/'+formid+identifier+\"';\\n\"+\r\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\r\n      '})();'+\"\\n\"+\r\n    '</scr'+'ipt>';\r\n    $('#HMLTContent').text(id_tag+script);\r\n};\r\n\r\n$('#LocaleID,#HttpMode,#id_identifier').change(function(){\r\n    generateEmbedCode();\r\n});\r\ngenerateEmbedCode();\r\n</script>", "<div class=\"meta-message meta-message-<?php echo $messageId?>\">\r\n\r\n    <?php if (!isset($metaMessageData['content']['attr_options']['as_dropdown']) || $metaMessageData['content']['attr_options']['as_dropdown'] == false) : ?>\r\n    <ul class=\"quick-replies list-inline meta-auto-hide mb-0\">\r\n    <?php foreach ($metaMessage as $item) : $disabledButton = isset($item['content']['disabled']) && $item['content']['disabled'] == true;?>\r\n            <?php if ($item['type'] == 'url') : ?>\r\n            <li class=\"list-inline-item\">\r\n                <a rel=\"noreferrer\" <?php if (isset($item['content']['button_id']) && $item['content']['button_id'] != '') : ?>id=\"<?php echo htmlspecialchars($item['content']['button_id'])?>\"<?php endif;?> <?php if (isset($item['content']['payload_message']) && $item['content']['payload_message'] != '') : ?>data-payload=<?php echo json_encode($item['content']['payload_message'])?> data-id=\"<?php echo $messageId?>\" onclick='lhinst.buttonClicked(<?php echo json_encode($item['content']['payload_message'])?>,<?php echo $messageId?>,$(this))'<?php endif;?> class=\"btn btn-sm btn-outline-primary btn-bot\" target=\"_blank\" href=\"<?php echo htmlspecialchars($item['content']['payload'])?>\"><i class=\"material-icons\"><?php if (isset($react) && $react == true) : ?>&#xf106;<?php else : ?>open_in_new<?php endif; ?></i><?php echo htmlspecialchars($item['content']['name'])?></a>\r\n            </li>\r\n            <?php elseif ($item['type'] == 'file') : $fileReply = erLhcoreClassModelChatFile::fetch($item['content']['payload']); if ($fileReply instanceof erLhcoreClassModelChatFile) : $fileLink = erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurldirect('file/downloadfile') . \"/{$fileReply->id}/{$fileReply->security_hash}\"; ?>\r\n            <li class=\"list-inline-item\">\r\n                <a rel=\"noreferrer\" <?php if (isset($item['content']['button_id']) && $item['content']['button_id'] != '') : ?>id=\"<?php echo htmlspecialchars($item['content']['button_id'])?>\"<?php endif;?> <?php if (isset($item['content']['payload_message']) && $item['content']['payload_message'] != '') : ?>data-payload=<?php echo json_encode($item['content']['payload_message'])?> data-id=\"<?php echo $messageId?>\" onclick='lhinst.buttonClicked(<?php echo json_encode($item['content']['payload_message'])?>,<?php echo $messageId?>,$(this))'<?php endif;?> class=\"btn btn-sm btn-outline-primary btn-bot\" target=\"_blank\" href=\"<?php echo $fileLink?>\"><i class=\"material-icons\"><?php if (isset($react) && $react == true) : ?>&#xf10e;<?php else : ?>attach_file<?php endif; ?></i><?php echo htmlspecialchars($item['content']['name'])?></a>\r\n            </li>\r\n            <?php endif; elseif ($item['type'] == 'trigger') : ?>\r\n            <li class=\"list-inline-item\"><button type=\"button\" <?php if (isset($item['content']['button_id']) && $item['content']['button_id'] != '') : ?>id=\"<?php echo htmlspecialchars($item['content']['button_id'])?>\"<?php endif;?> class=\"btn btn-sm btn-outline-primary btn-bot\" <?php if ($disabledButton == true) : ?>disabled=\"disabled\"<?php endif;?> <?php if ($disabledButton == false) : ?>data-payload=<?php echo json_encode($item['content']['payload']. '__' . md5($item['content']['name']))?> data-id=\"<?php echo $messageId?>\" onclick='lhinst.updateTriggerClicked(<?php echo json_encode($item['content']['payload']. '__' . md5($item['content']['name']))?>,<?php echo $messageId?>,$(this))'<?php endif;?>><?php echo htmlspecialchars($item['content']['name'])?></button></li>\r\n            <?php elseif ($item['type'] == 'updatechat') : ?>\r\n                <?php if ($item['content']['payload'] == 'subscribeToNotifications') : $detectMobile = new Mobile_Detect; ?>\r\n                    <?php if (!$detectMobile->is('IOS') && erLhcoreClassModelNotificationSubscriber::getCount(array('filter_custom' => array('`chat_id` = ' . (int)$chat->id . ($chat->online_user_id > 0 ? ' OR `online_user_id` = ' . (int)$chat->online_user_id : '')))) == 0) : ?>\r\n                        <li class=\"list-inline-item\"><button <?php if (isset($item['content']['button_id']) && $item['content']['button_id'] != '') : ?>id=\"<?php echo htmlspecialchars($item['content']['button_id'])?>\"<?php endif;?> type=\"button\" <?php if ($disabledButton == true) : ?>disabled=\"disabled\"<?php endif;?> class=\"btn btn-sm btn-outline-primary btn-bot\" <?php if ($disabledButton == false) : ?>data-id=\"<?php echo $messageId?>\" onclick='$(this).attr(\"disabled\",\"disabled\").text(\"Subscribing...\");notificationsLHC.sendNotification();'<?php endif;?>><?php echo htmlspecialchars($item['content']['name'])?></button></li>\r\n                    <?php endif; ?>\r\n                <?php else : ?>\r\n                        <li class=\"list-inline-item\"><button <?php if (isset($item['content']['button_id']) && $item['content']['button_id'] != '') : ?>id=\"<?php echo htmlspecialchars($item['content']['button_id'])?>\"<?php endif;?> type=\"button\" <?php if ($disabledButton == true) : ?>disabled=\"disabled\"<?php endif;?> class=\"btn btn-sm btn-outline-primary btn-bot\" <?php if ($disabledButton == false) : ?>data-payload=<?php echo json_encode($item['content']['payload'])?> data-id=\"<?php echo $messageId?>\" onclick='lhinst.updateChatClicked(<?php echo json_encode($item['content']['payload'])?>,<?php echo $messageId?>,$(this))'<?php endif;?>><?php echo htmlspecialchars($item['content']['name'])?></button></li>\r\n                <?php endif; ?>\r\n            <?php else : ?>\r\n                        <li class=\"list-inline-item\"><button <?php if (isset($item['content']['button_id']) && $item['content']['button_id'] != '') : ?>id=\"<?php echo htmlspecialchars($item['content']['button_id'])?>\"<?php endif;?> type=\"button\" <?php if ($disabledButton == true) : ?>disabled=\"disabled\"<?php endif;?> class=\"btn btn-sm btn-outline-primary btn-bot\" <?php if ($disabledButton == false) : ?>data-payload=<?php echo json_encode($item['content']['payload']. '__' . md5($item['content']['name']))?> data-id=\"<?php echo $messageId?>\" onclick='lhinst.buttonClicked(<?php echo json_encode($item['content']['payload']. '__' . md5($item['content']['name']))?>,<?php echo $messageId?>,$(this))'<?php endif;?>><?php echo htmlspecialchars($item['content']['name'])?></button></li>\r\n            <?php endif?>\r\n    <?php endforeach; ?>\r\n    </ul>\r\n    <?php else : ?>\r\n    <select class=\"form-control form-control-sm mb-2 rounded meta-auto-hide\" data-id=\"<?php echo $messageId?>\" onchange=\"lhinst.dropdownClicked(<?php echo $messageId?>,$(this))\">\r\n        <option><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/lists/search_panel','Please choose')?></option>\r\n        <?php foreach ($metaMessage as $item) : $disabledButton = isset($item['content']['disabled']) && $item['content']['disabled'] == true; ?>\r\n            <?php if ($item['type'] == 'trigger') : ?>\r\n                <option payload-type=\"trigger\" <?php if ($disabledButton == true) : ?>disabled=\"disabled\"<?php endif;?> <?php if ($disabledButton == false) : ?>data-payload=<?php echo json_encode($item['content']['payload']. '__' . md5($item['content']['name']))?> data-id=\"<?php echo $messageId?>\"<?php endif;?> ><?php echo htmlspecialchars($item['content']['name'])?></option>\r\n            <?php elseif ($item['type'] == 'button') : ?>\r\n                <option payload-type=\"payload\" <?php if ($disabledButton == true) : ?>disabled=\"disabled\"<?php endif;?> <?php if ($disabledButton == false) : ?>data-payload=<?php echo json_encode($item['content']['payload']. '__' . md5($item['content']['name']))?> data-id=\"<?php echo $messageId?>\"<?php endif;?> ><?php echo htmlspecialchars($item['content']['name'])?></option>\r\n            <?php endif?>\r\n\r\n        <?php endforeach ?>\r\n    </select>\r\n    <?php endif; ?>\r\n\r\n</div>\r\n\r\n", "<h1 class=\"attr-header\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Notifications settings')?></h1>\r\n\r\n<form action=\"\" method=\"post\" ng-non-bindable>\r\n\r\n    <?php include(erLhcoreClassDesign::designtpl('lhkernel/csfr_token.tpl.php'));?>\r\n\r\n    <?php if (isset($updated) && $updated == 'done') : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/onlineusers','Settings updated'); ?>\r\n        <?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\r\n    <?php endif; ?>\r\n\r\n    <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','For more information see')?> <a target=\"_blank\" href=\"https://developers.google.com/web/fundamentals/push-notifications/display-a-notification\">https://developers.google.com/web/fundamentals/push-notifications/display-a-notification</a></p>\r\n\r\n    <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','You can generate your private and public key here')?> - <a target=\"_blank\" href=\"https://web-push-codelab.glitch.me\">https://web-push-codelab.glitch.me</a></p>\r\n\r\n    <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Explains were taken from:')?> <a target=\"_blank\" href=\"https://web-push-book.gauntface.com/demos/notification-examples/\">https://web-push-book.gauntface.com/demos/notification-examples/</a></p>\r\n\r\n    <p><a href=\"<?php echo erLhcoreClassDesign::baseurl('notifications/downloadworker')?>\"><i class=\"material-icons\">cloud_download</i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Download Service Worker')?></a> - <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','you will have to put this file in your domain root folder.')?></p>\r\n\r\n    <div class=\"form-group\">\r\n        <label><input type=\"checkbox\" value=\"on\" name=\"enabled\" <?php isset($n_settings['enabled']) && ($n_settings['enabled'] == true) ? print 'checked=\"checked\"' : ''?> /> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Enable notifications')?></label><br/>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><input type=\"checkbox\" value=\"on\" name=\"require_interaction\" <?php isset($n_settings['require_interaction']) && ($n_settings['require_interaction'] == true) ? print 'checked=\"checked\"' : ''?> /> Require Interaction</label><br/>\r\n        <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','On desktop, a notification is only displayed for a short period of time. On Android, notifications are shown until the user interacts with it.')?></p>\r\n\r\n        <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','To get the same behaviour on desktop and mobile you can set the \"require-interaction\" option to true, which means the user must click or dismiss the notification.')?></p>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><input type=\"checkbox\" value=\"on\" name=\"renotify\" <?php isset($n_settings['renotify']) && ($n_settings['renotify'] == true) ? print 'checked=\"checked\"' : ''?> /> Renotify</label><br/>\r\n        <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','When you use the tag option, the default behavior of a new notification replacing an existing one is that there is no sound, vibration and the screen is kept asleep.')?></p>\r\n\r\n        <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','With `renotify: true` a new notification will play a sound, vibrate and wake up the users device. This means replacing notifications have the same behavior as a completely new notification.')?></p>\r\n\r\n        <p><i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Note')?>:</i> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','There is no visible affect on desktop, but on mobile, vibration and sound will be affected.')?></p>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Subject*')?></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"subject\" value=\"<?php (isset($n_settings['subject'])) ? print htmlspecialchars($n_settings['subject']) : ''?>\">\r\n        <small><i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','You must provide a subject that is either a mailto: or a URL.')?></i></small>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','HTTP Host*')?></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"http_host\" value=\"<?php (isset($n_settings['http_host']) && !empty($n_settings['http_host'])) ? print htmlspecialchars($n_settings['http_host']) : print str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?>\">\r\n        <small><i>You must provide host for notifications images.</i></small>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Default Icon')?></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"icon\" value=\"<?php if (isset($n_settings['icon'])) : ?><?php print htmlspecialchars($n_settings['icon']); else : ?>https://<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::design('images/general/logo.png');?><?php endif;?>\">\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Badge Icon')?></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"badge\" value=\"<?php if (isset($n_settings['badge'])) : ?><?php print htmlspecialchars($n_settings['badge']); else : ?>https://<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::design('images/general/logo.png');?><?php endif;?>\">\r\n        <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Notification badges are only being used on mobile, at least at the time of writing. It is used to replace the browser icon that is shown by default.')?></p>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Vibrate')?></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"vibrate\" value=\"<?php if (isset($n_settings['vibrate'])) : ?><?php print htmlspecialchars($n_settings['vibrate']); endif ?>\">\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Public key*')?></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"public_key\" value=\"<?php (isset($n_settings['public_key'])) ? print htmlspecialchars($n_settings['public_key']) : ''?>\">\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Private key*')?></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"private_key\" value=\"\">\r\n        <small><i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/notifications','Private key is not shown after save')?></i></small>\r\n    </div>\r\n\r\n    <input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreOptions\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save'); ?>\" />\r\n\r\n</form>\r\n", "var lhc_QuestionaryPage = function() {\n\tvar self = this;\n\n\tthis.showVotingForm = function() {\n\t\t  var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n   \t\t  this.initial_iframe_url = \"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('questionary/votingwidget')?>/(mode)/embed<?php $theme !== false ? print '/(theme)/'.$theme : ''?>\"+'?URLReferer='+locationCurrent;\n\n   \t\t  this.iframe_html = '<iframe id=\"lhc_sizing_questionary_page\" allowTransparency=\"true\" scrolling=\"no\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"100%\"' +\n                       ' height=\"300\"' +\n                       ' style=\"width: 100%; height: 300px;\"></iframe>';\n\n          document.getElementById('lhc_questionary_embed_container').innerHTML = this.iframe_html;\n    };\n\n    this.handleMessage = function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_questionary_page') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('lhc_sizing_questionary_page');\n    \t\telementObject.height = height;\n    \t\telementObject.style.height = height+'px';\n    \t};\n    };\n\n    this.showVotingForm();\n};\n\nvar lhcQuestionaryPage = new lhc_QuestionaryPage();\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\",function(e){lhcQuestionaryPage.handleMessage(e);});\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\",function(e){lhcQuestionaryPage.handleMessage(e);});\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\",function(e){lhcQuestionaryPage.handleMessage(e);}, false);\n};", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div class=\"row\">\n    <div class=\"col-md-6\">\n        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label>\n        <select class=\"form-control\" id=\"LocaleID\" ng-non-bindable>\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n    </div>\n    <div class=\"col-md-6\">\n\t   <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label>\n\t\t    <select class=\"form-control\" id=\"HttpMode\">         \n\t\t            <option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t            <option value=\"http:\">http:</option>\n\t\t            <option value=\"https:\">https:</option>      \n\t\t    </select>    \t    \n    </div>\n    <div class=\"col-md-6 end\">\n    \t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label>\n        <select class=\"form-control\" id=\"ThemeID\" ng-non-bindable>\n        \t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n\t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n\t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t</div>\n</div>\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the text area to the page where you want it to be rendered');?></p>\n\n<textarea style=\"width:100%;height:180px;font-size:12px;\" id=\"HMLTContent\" ></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n    \n    var id_tag = <?php include(erLhcoreClassDesign::designtpl('lhquestionary/embedcode_title.tpl.php'));?>+\"\\n\"+'<div id=\"lhc_questionary_embed_container\" ></div>'+\"\\n\\n\"+<?php include(erLhcoreClassDesign::designtpl('lhquestionary/embedcode_title_after.tpl.php'));?>+\"\\n\";\n\t\n    var script = '<script type=\"text/javascript\">'+\"\\n\"+\n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'questionary/embed'+id_theme+'\\';'+\"\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n    $('#HMLTContent').text(id_tag+script);\n};\n$('#LocaleID,#HttpMode,#ThemeID').change(function(){\n    generateEmbedCode();\n});\ngenerateEmbedCode();\n</script>", "<?php\n\n$positionArgument = array (\n\t\t'bottom_left' => array (\n\t\t\t\t'radius' => 'right',\n\t\t\t\t'position' => 'bottom:0;left:0;',\n\t\t\t\t'position_body' => 'bottom:0;left:0;',\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'moz_radius' => 'topright',\n\t\t\t\t'widget_hover' => '',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'chrome_radius' => 'top-right',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-left:0;border-bottom:0;',\n\t\t\t\t'background_position' => '0',\n\t\t\t\t'widget_radius' => '-webkit-border-top-right-radius: 20px;-moz-border-radius-topright: 20px;border-top-right-radius: 20px;',\n\t\t\t\t'posv' => 'b',\n\t\t\t\t'pos' => 'l',\n\t\t),\n\t\t'bottom_right' => array (\n\t\t\t\t'pos' => 'r',\n\t\t\t\t'posv' => 'b',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => 'bottom:0;right:0;',\n\t\t\t\t'position_body' => 'bottom:0;right:0;',\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'moz_radius' => 'topleft',\n\t\t\t\t'widget_hover' => '',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-right:0;border-bottom:0;',\n\t\t\t\t'background_position' => 'left',\n\t\t\t\t'chrome_radius' => 'top-left',\n\t\t\t\t'widget_radius' => '-webkit-border-top-left-radius: 20px;-moz-border-radius-topleft: 20px;border-top-left-radius: 20px;'\n\t\t),\n\t\t'middle_right' => array (\n\t\t\t\t'pos' => 'r',\n\t\t\t\t'posv' => 't',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => \"top:{$top_pos}{$units};right:-155px;\",\n\t\t\t\t'position_body' => \"top:{$top_pos}{$units};right:0px;\",\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'widget_hover' => 'right:0;transition: 1s;',\n\t\t\t\t'moz_radius' => 'topleft',\n\t\t\t\t'padding_text' => '10px 10px 10px 35px',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-right:0;',\n\t\t\t\t'background_position' => '0',\n\t\t\t\t'chrome_radius' => 'top-left',\n\t\t\t\t'widget_radius' => '-webkit-border-top-left-radius: 20px;-moz-border-radius-topleft: 20px;border-top-left-radius: 20px;      -webkit-border-bottom-left-radius: 20px;-moz-border-radius-bottomleft: 20px;border-bottom-left-radius: 20px;'\n\t\t),\n\t\t'middle_left' => array (\n\t\t\t\t'posv' => 't',\n\t\t\t\t'pos' => 'l',\n\t\t\t\t'radius' => 'left',\n\t\t\t\t'position' => \"top:{$top_pos}{$units};left:-155px;\",\n\t\t\t\t'position_body' => \"top:{$top_pos}{$units};left:0px;\",\n\t\t\t\t'shadow' => '1px -1px 5px',\n\t\t\t\t'padding_text' => '10px 35px 10px 9px',\n\t\t\t\t'widget_hover' => 'left:0;transition: 1s;',\n\t\t\t\t'moz_radius' => 'topright',\n\t\t\t\t'border_widget' => 'border:1px solid #'.($theme !== false ? $theme->bor_bcolor : 'e3e3e3').';border-left:0;',\n\t\t\t\t'background_position' => '95%',\n\t\t\t\t'chrome_radius' => 'top-right',\n\t\t\t\t'widget_radius' => '-webkit-border-top-right-radius: 20px;-moz-border-radius-topright: 20px;border-top-right-radius: 20px;      -webkit-border-bottom-right-radius: 20px;-moz-border-radius-bottomright: 20px;border-bottom-right-radius: 20px;'\n\t\t)\n);\n\nif (key_exists($position, $positionArgument)){\n\t$currentPosition = $positionArgument[$position];\n} else {\n\t$currentPosition = $positionArgument['bottom_left'];\n}\n\n?>\n<?php include(erLhcoreClassDesign::designtpl('lhquestionary/getstatus/options_variable.tpl.php')); ?>\n\nvar lhc_Questionary = {\n\tJSON : {\n            parse: window.JSON && (window.JSON.parse || window.JSON.decode) || String.prototype.evalJSON && function(str){return String(str).evalJSON();} || $.parseJSON || $.evalJSON,\n            stringify:  Object.toJSON || window.JSON && (window.JSON.stringify || window.JSON.encode) || $.toJSON\n    },\n    is_dragging : false,\n    offset_data : '',\n\tcookieData : {},\n\taddCss : function(css_content) {\n        var head = document.getElementsByTagName('head')[0];\n        var style = document.createElement('style');\n        style.type = 'text/css';\n\n        if(style.styleSheet) {\n          style.styleSheet.cssText = css_content;\n        } else {\n          rules = document.createTextNode(css_content);\n          style.appendChild(rules);\n        };\n\n        head.appendChild(style);\n   },\n\n   appendHTML : function(htmlStr) {\n        var frag = document.createDocumentFragment(),\n            temp = document.createElement('div');\n        temp.innerHTML = htmlStr;\n        while (temp.firstChild) {\n            frag.appendChild(temp.firstChild);\n        };\n        return frag;\n    },\n\n\tremoveById : function(EId)\n    {\n        return(EObj=document.getElementById(EId))?EObj.parentNode.removeChild(EObj):false;\n    },\n\n    hide : function() {\n        var th = document.getElementsByTagName('head')[0];\n        var s = document.createElement('script');\n        s.setAttribute('type','text/javascript');\n        s.setAttribute('src','<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('questionary/votingwidgetclosed')?>');\n        th.appendChild(s);\n        this.removeById('lhc_container_questionary');\n        this.addCookieAttribute('was_opened',true);\n        this.removeCookieAttr('pos');\n    },\n    \n\taddEvent : (function () {\n\t  if (document.addEventListener) {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.addEventListener(type, fn, false);\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lhc_Questionary.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  } else {\n\t    return function (el, type, fn) {\n\t      if (el && el.nodeName || el === window) {\n\t        el.attachEvent('on' + type, function () { return fn.call(el, window.event); });\n\t      } else if (el && el.length) {\n\t        for (var i = 0; i < el.length; i++) {\n\t          lhc_Questionary.addEvent(el[i], type, fn);\n\t        }\n\t      }\n\t    };\n\t  }\n\t})(),\n\t\n\tshowVotingForm : function() {\n\n   \t\t  this.removeById('lhc_container_questionary');\n\t      var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n   \t\t  this.initial_iframe_url = \"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('questionary/votingwidget')?>\"+'?URLReferer='+locationCurrent;\n\t\t  \n\t\t  if (window.innerWidth < 1024) {\n          \t\twindow.open(this.initial_iframe_url,\"_blank\");\n          \t\treturn;\n          };\n          \n   \t\t  this.iframe_html = '<iframe id=\"lhcquestionary_iframe\" allowTransparency=\"true\" scrolling=\"no\" class=\"lhc-loading\" frameborder=\"0\" ' +\n                       ( this.initial_iframe_url != '' ? ' src=\"'    + this.initial_iframe_url + '\"' : '' ) +\n                       ' width=\"<?php echo $widthwidget?>\"' +\n                       ' height=\"<?php echo $heightwidget?>\"' +\n                       ' style=\"width: <?php echo $widthwidget?>px; height: <?php echo $heightwidget?>px;\"></iframe>';\n\n          this.iframe_html = '<div id=\"lhc_container_questionary\">' +\n                              '<div id=\"lhc_questionary_header\"><?php include(erLhcoreClassDesign::designtpl('lhchat/widget_brand/questionary.tpl.php')); ?><a href=\"#\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" id=\"lhc_questionary_close\"><img src=\"<?php if ($theme !== false && $theme->close_image_url != '') : ?><?php echo $theme->close_image_url;?><?php else : ?><?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/cancel.png');?><?php endif;?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" alt=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus','Close')?>\" /></a></div><div id=\"lhc_iframe_container\">' +\n                              this.iframe_html + '</div></div>';\n\n          raw_css = \"#lhc_container_questionary * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial\\;line-height:100%\\;font-size:12px\\;box-sizing: content-box\\;-moz-box-sizing:content-box;padding:0;margin:0;}\\n#lhc_container_questionary img {border:0;}\\n#lhc_questionary_title{float:left;}\\n#lhc_questionary_header{position:relative;z-index:9990;height:<?php ($theme !== false && $theme->header_height > 0) ? print $theme->header_height : print '15' ?>px;overflow:hidden;background-color:#<?php $theme !== false ? print $theme->header_background : print '525252' ?>;text-align:right;clear:both;padding:<?php ($theme !== false && $theme->header_padding > 0) ? print $theme->header_padding : print '5' ?>px;}\\n#lhc_questionary_close{padding:2px;float:right;}\\n#lhc_questionary_close:hover{opacity:0.4;}\\n#lhc_container_questionary {overflow: hidden;transition-property: height;transition-duration: 0.4s;-webkit-transition: height 0.4s ease-in-out;transition: height 0.4s;background-color:#FFF;z-index:9990;position: fixed;<?php echo $currentPosition['position_body']?>;-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-webkit-border-radius: 5px;-moz-border-radius: 5px;border-radius: 5px;-moz-user-select:none; -khtml-user-drag:element;cursor: move;cursor: -moz-grab;cursor: -webkit-grab; }\\n#lhc_container_questionary iframe{position:relative;display:block;transition-property: height;transition-duration: 0.4s;-webkit-transition: height 0.4s ease-in-out;transition: height 0.4s;}\\n#lhc_container_questionary iframe.lhc-loading{\\nbackground: #FFF url(<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/general/loading.gif');?>) no-repeat center center; }#lhc_container_questionary #lhc_iframe_container{border: <?php ($theme !== false && $theme->widget_border_width > 0) ? print $theme->widget_border_width : print '1' ?>px solid #<?php $theme !== false ? print $theme->widget_border_color : print 'cccccc' ?>;border-top: 0;border-bottom-left-radius: 5px;border-bottom-right-radius: 5px;overflow: hidden;}@media only screen and (max-width : 640px) {#lhc_container_questionary{margin-bottom:5px;position:relative;right:0;bottom:0;top:0;}#lhc_container_questionary iframe{width:100% !important}}\";\n\n          if (!this.cssWasAdded) {\n          \t\tthis.cssWasAdded = true;\n          \t\tthis.addCss(raw_css<?php ($theme !== false && $theme->custom_container_css !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_container_css).'\\'' : '' ?>);\n\t\t  };\n\n          var fragment = this.appendHTML(this.iframe_html);\n          document.body.insertBefore(fragment, document.body.childNodes[0]);\n\n          var lhc_obj = this;\n          document.getElementById('lhc_questionary_close').onclick = function() { lhc_obj.hide(); return false; };\n          \n          var domContainer = document.getElementById('lhc_container_questionary');\n          var domIframe = 'lhcquestionary_iframe';\n          var domContainerId = 'lhc_container_questionary';\n\t\t  <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/drag_drop_logic.tpl.php')); ?>\t\n    },\n\n    showStatusWidget : function() {\n       var statusTEXT = '<a id=\"questionary-icon\" class=\"status-icon\" href=\"#\" >'+<?php echo $questionaryOptionsVariable?>.status_text+'</a>';\n       var raw_css = \"#lhc_questionary_container * {direction:<?php (erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == 'ltr' || erConfigClassLhConfig::getInstance()->getOverrideValue('site', 'dir_language') == '') ? print 'ltr;text-align:left;' : print 'rtl;text-align:right;'; ?>;font-family:arial;line-height:100%;font-size:12px;box-sizing: content-box;zoom:1;margin:0;padding:0}\\n#lhc_questionary_container .status-icon{text-decoration:none;font-size:12px;font-weight:bold;color:#<?php $theme !== false ? print $theme->text_color : print '000' ?>;display:block;padding:<?php echo $currentPosition['padding_text']?>;background:url('<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('images/icons/plant.png');?>') no-repeat <?php echo $currentPosition['background_position']?> center}\\n#lhc_questionary_container:hover{<?php echo $currentPosition['widget_hover']?>}\\n#lhc_questionary_container{box-sizing: content-box;<?php echo $currentPosition['widget_radius']?>-webkit-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);-moz-box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);box-shadow: <?php echo $currentPosition['shadow']?> rgba(50, 50, 50, 0.17);<?php echo $currentPosition['border_widget']?>;padding:5px 0px 3px 5px;width:190px;font-family:arial;font-size:12px;transition: 1s;position:fixed;<?php echo $currentPosition['position']?>;background-color:#<?php $theme !== false ? print $theme->onl_bcolor : print 'f6f6f6' ?>;z-index:9989;}\\n<?php if ($noresponse == false) : ?>@media only screen and (max-width : 640px) {#lhc_questionary_container{position:relative;top:0;right:0;bottom:0;left:0;width:auto;border-radius:2px;box-shadow:none;border:1px solid #e3e3e3;margin-bottom:5px;}}\\n<?php endif;?>\";\n       this.addCss(raw_css<?php ($theme !== false && $theme->custom_status_css !== '') ? print '+\\''.str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_status_css).'\\'' : '' ?>);\n       var htmlStatus = '<div id=\"lhc_questionary_container\">'+statusTEXT+'</div>';\n       var fragment = this.appendHTML(htmlStatus);\n       document.body.insertBefore(fragment, document.body.childNodes[0]);\n       var inst = this;\n       document.getElementById('questionary-icon').onclick = function() { inst.showVotingForm(); return false; };\n   },\n\n   handleMessage : function(e) {\n        if (typeof e.data !== 'string') { return; }\n    \tvar action = e.data.split(':')[0];\n    \tif (action == 'lhc_sizing_questionary') {\n    \t\tvar height = e.data.split(':')[1];\n    \t\tvar elementObject = document.getElementById('lhcquestionary_iframe');\n    \t\tvar iframeContainer = document.getElementById('lhc_container_questionary');\n    \t\telementObject.height = height;\n    \t\telementObject.style.height = height+'px';\n    \t\tiframeContainer.className = iframeContainer.className;    \t\t\n    \t};\n   },\n\n   removeCookieAttr : function(attr){\n    \tif (this.cookieData[attr]) {\n    \t\tdelete this.cookieData[attr];\n    \t\tthis.storeSesCookie();\n    \t}\n   },\n\n   storeSesCookie : function(){\n    \tif (sessionStorage) {\n    \t\tsessionStorage.setItem('lhc_vb',this.JSON.stringify(this.cookieData));\n    \t}\n   },\n\n   initSessionStorage : function(){\n    \tif (sessionStorage && sessionStorage.getItem('lhc_vb')) {\n    \t\tthis.cookieData = this.JSON.parse(sessionStorage.getItem('lhc_vb'));\n    \t}\n   },\n\n   addCookieAttribute : function(attr, value){\n    \tif (!this.cookieData[attr] || this.cookieData[attr] != value){\n\t    \tthis.cookieData[attr] = value;\n\t    \tthis.storeSesCookie();\n    \t}\n   }\n};\n\nlhc_Questionary.initSessionStorage();\nlhc_Questionary.showStatusWidget();\n\nif ( window.attachEvent ) {\n\t// IE\n\twindow.attachEvent(\"onmessage\",function(e){lhc_Questionary.handleMessage(e);});\n};\n\nif ( document.attachEvent ) {\n\t// IE\n\tdocument.attachEvent(\"onmessage\",function(e){lhc_Questionary.handleMessage(e);});\n};\n\nif ( window.addEventListener ){\n\t// FF\n\twindow.addEventListener(\"message\",function(e){lhc_Questionary.handleMessage(e);}, false);\n};\n\n<?php if ($expand == 'true') : ?>\nif (!lhc_Questionary.cookieData.was_opened) {\n\tif (window.innerWidth > 1023) {\n\t\tlhc_Questionary.showVotingForm();\n\t};\n};\n<?php endif;?>\n", "<h1 class=\"attr-header\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div class=\"row\">\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Status text');?></label> <input type=\"text\" class=\"form-control\" id=\"id_status_text\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Help us to grow');?>\" />\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label for=\"id_show_widget_on_open\"><input type=\"checkbox\" id=\"id_show_widget_on_open\" value=\"on\"> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Expand the widget automatically for new users');?></label>\n\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"row\">\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position from the top, only used if the Middle left or the Middle right side is chosen');?></label>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-8 columns\">\n\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"id_top_text\" value=\"400\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-4 columns\">\n\t\t\t\t\t<select id=\"UnitsTop\" class=\"form-control\">\n\t\t\t\t\t\t<option value=\"pixels\">Pixels</option>\n\t\t\t\t\t\t<option value=\"percents\">Percents</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Size');?></label>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<input type=\"text\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Width')?>\" id=\"id_width_text\" value=\"300\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<input type=\"text\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Height')?>\" id=\"id_height_text\" value=\"300\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"row\" ng-non-bindable>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select id=\"LocaleID\" class=\"form-control\">\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position');?></label> <select id=\"PositionID\" class=\"form-control\">\n\t\t\t\t<option value=\"bottom_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom right corner of the screen');?></option>\n\t\t\t\t<option value=\"bottom_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom left corner of the screen');?></option>\n\t\t\t\t<option value=\"middle_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle right side of the screen');?></option>\n\t\t\t\t<option value=\"middle_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle left side of the screen');?></option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><input type=\"checkbox\" id=\"id_disable_responsive\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Disable responsive layout for status widget.');?></label>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select id=\"HttpMode\" class=\"form-control\">\n\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"col-md-6 end\">\n\t\t<div class=\"form-group\">\n\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select id=\"ThemeID\" class=\"form-control\">\n\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n\t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n\t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t\t</div>\n\t</div>\n</div>\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('questionary/htmlcode','Copy the code from the text area to the footer, before the closing &lt;/body&gt; tag');?></p>\n<textarea style=\"width: 100%; height: 180px; font-size: 12px;\" id=\"HMLTContent\"></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var id_position =  '/(position)/'+$('#PositionID').val();\n    var id_show_widget_on_open = $('#id_show_widget_on_open').is(':checked') ? '/(expand)/true' : '';\n\tvar textStatus = $('#id_status_text').val();\n\tvar top = '/(top)/'+($('#id_top_text').val() == '' ? 400 : $('#id_top_text').val());\n\tvar topposition = '/(units)/'+$('#UnitsTop').val();\n\tvar widthwidget = '/(width)/'+($('#id_width_text').val() == '' ? 300 : $('#id_width_text').val());\n\tvar heightwidget = '/(height)/'+($('#id_height_text').val() == '' ? 300 : $('#id_height_text').val());\n\tvar id_disable_responsive = $('#id_disable_responsive').is(':checked') ? '/(noresponse)/true' : '';\n\tvar id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n\t\n\t<?php include(erLhcoreClassDesign::designtpl('lhquestionary/getstatus/options_variable.tpl.php')); ?>\n\t\n    var script = '<script type=\"text/javascript\">'+\"\\nvar <?php echo $questionaryOptionsVariable?> = {status_text:'\"+textStatus+\"'};\\n\"+\n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'questionary/getstatus'+id_position+id_disable_responsive+id_show_widget_on_open+top+topposition+widthwidget+id_theme+heightwidget+\"';\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n    $('#HMLTContent').text(script);\n};\n$('#LocaleID,#PositionID,#id_show_widget_on_open,#id_disable_responsive,#id_status_text,#UnitsTop,#id_top_text,#id_width_text,#id_height_text,#HttpMode,#ThemeID').change(function(){\n    generateEmbedCode();\n});\ngenerateEmbedCode();\n</script>", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div role=\"tabpanel\" ng-non-bindable>\n\n\t<!-- Nav tabs -->\n\t<ul class=\"nav nav-tabs\" role=\"tablist\">\n\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"active nav-link\" href=\"#general\" aria-controls=\"general\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','General');?></a></li>\n\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#design\" aria-controls=\"design\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Design');?></a></li>\n\t\t<?php include(erLhcoreClassDesign::designtpl('lhsystem/embed_tab_multiinclude.tpl.php'));?>\n\t</ul>\n\n\t<!-- Tab panes -->\n\t<div class=\"tab-content\">\n\t\t<div role=\"tabpanel\" class=\"tab-pane active\" id=\"general\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<label><input type=\"checkbox\" id=\"id_hide_then_offline\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Hide status when offline');?></label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<label><input type=\"checkbox\" id=\"id_show_leave_form\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Show a \u2018leave a message form\u2019 when there are no online operators');?></label>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"col-md-6\">\n\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select id=\"LocaleID\" class=\"form-control\">\n            <?php foreach ($locales as $locale ) : ?>\n            <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n            <?php endforeach; ?>\n        </select>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-6 end\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select id=\"HttpMode\" class=\"form-control\">\n\t\t\t\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Department')?></label> <select id=\"DepartmentID\" multiple=\"multiple\" size=\"5\" class=\"form-control\">\n\t\t\t\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Any');?></option>\n\t\t\t<?php foreach (erLhcoreClassModelDepartament::getList($departmentParams) as $departament) : ?>\n\t\t\t    <option value=\"<?php echo $departament->id?>\"><?php echo htmlspecialchars($departament->name)?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n                <?php include(erLhcoreClassDesign::designtpl('lhsystem/embed_tab_operator.tpl.php'));?>\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div role=\"tabpanel\" class=\"tab-pane\" id=\"design\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select id=\"ThemeID\" class=\"form-control\">\n\t\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n        \t\t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n        \t\t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n        \t\t\t\t<?php endforeach; ?>\n        \t    </select>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<?php include(erLhcoreClassDesign::designtpl('lhsystem/embed_tab_content_multiinclude.tpl.php'));?>\n\n\t</div>\n</div>\n\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the text area to the page where you want your status to appear');?></p>\n<textarea style=\"width: 100%; height: 180px; font-size: 12px;\" id=\"HMLTContent\"><?php echo htmlspecialchars('<script type=\"text/javascript\" src=\"' . erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('chat/getstatus').'\"></script>')?></textarea>\n\n<script type=\"text/javascript\">\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\nfunction generateEmbedCode() {\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var id_hide_then_offline = $('#id_hide_then_offline').is(':checked') ? '/(hide_offline)/true' : '';\n    var id_show_leave_form = $('#id_show_leave_form').is(':checked') ? '/(leaveamessage)/true' : '';\n    var id_department = $('#DepartmentID').val() && $('#DepartmentID').val().length > 0 && $('#DepartmentID').val().join('/') != '0' ? '/(department)/'+$('#DepartmentID').val().join('/') : '';\n    var id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n    var id_operator = $('#id_operator').val() > 0 ? '/(operator)/'+$('#id_operator').val() : '';\n    \n    var id_tag =  <?php include(erLhcoreClassDesign::designtpl('lhsystem/embedcode_title.tpl.php'));?>+\"\\n\"+\n        '<div id=\"lhc_status_container_page\" ></div>'+\"\\n\\n\"+<?php include(erLhcoreClassDesign::designtpl('lhsystem/embedcode_title_after.tpl.php'));?>+\"\\n\";\n\n    var uaArguments = '';\n        \n    <?php include(erLhcoreClassDesign::designtpl('lhsystem/embedcode_custom_generation_multiinclude.tpl.php'));?>\n\n    if (uaArguments != '') {\n    \tuaArguments = '/(ua)'+uaArguments;\n    }\n    \n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/options_variable_page.tpl.php')); ?>\n    \n    var script = '<script type=\"text/javascript\">'+\"\\n\"+\"var <?php echo $chatOptionsVariablePage?> = {'height':300,'mobile':false};\\n\"+\n      '<?php echo $chatOptionsVariablePage?>.opt = {};\\n'+\n      '(function() {'+\"\\n\"+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'var referrer = (document.referrer) ? encodeURIComponent(document.referrer.substr(document.referrer.indexOf(\\'://\\')+1)) : \\'\\';'+\"\\n\"+\n        'var location  = (document.location) ? encodeURIComponent(window.location.href.substring(window.location.protocol.length)) : \\'\\';'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccess+'chat/getstatusembed<?php isset($userArgument) ? print $userArgument : ''?>'+uaArguments+id_hide_then_offline+id_theme+id_operator+id_show_leave_form+id_department+'?r=\\'+referrer+\\'&l=\\'+location;'+\"\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n\n    $('#HMLTContent').text(id_tag+script);\n};\n\n$('#LocaleID,#id_show_leave_form,#DepartmentID,#HttpMode,#ThemeID,#id_operator,#id_hide_then_offline').change(function(){\n    generateEmbedCode();\n});\n\ngenerateEmbedCode();\n\n</script>", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div role=\"tabpanel\" ng-non-bindable>\n\n\t<!-- Nav tabs -->\n\t<ul class=\"nav nav-tabs\" role=\"tablist\">\n\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"active nav-link\" href=\"#general\" aria-controls=\"general\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','General');?></a></li>\n\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#design\" aria-controls=\"design\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Design');?></a></li>\n\t\t<?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_tab_multiinclude.tpl.php'));?>\n\t</ul>\n\n\t<!-- Tab panes -->\n\t<div class=\"tab-content\">\n\t\t<div role=\"tabpanel\" class=\"tab-pane active\" id=\"general\">\t\t\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-6\">\n    \t\t\t<div>\n    \t\t\t\t<label><input type=\"checkbox\" id=\"id_internal_popup\" checked=\"checked\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Show the page widget when a mouse is clicked');?></label>\n    \t\t\t</div>        \t\t\t\n\t\t\t</div>\n\t\t\t<div class=\"col-md-6\">\n    \t\t\t<div>\n    \t\t\t\t<label><input type=\"checkbox\" id=\"id_hide_then_offline\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Hide status when offline');?></label>\n    \t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"col-md-6\">\n    \t\t\t<div>\n    \t\t\t\t<label><input type=\"checkbox\" id=\"id_show_leave_form\" checked=\"checked\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Show a \u2018leave a message form\u2019 when there are no online operators');?></label>\n    \t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-6\">\n    \t\t\t<div>\n    \t\t\t     <label><input type=\"checkbox\" id=\"id_disable_pro_active_invitations\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Disable proactive invitations');?></label>\n    \t\t\t</div>\n\t\t\t</div>\t\t\n\t\t\t<div class=\"col-md-6\">\t\n    \t\t\t<div>\n    \t\t\t\t<label><input type=\"checkbox\" id=\"id_disable_online_tracking\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Disable online tracking (this overrides the system configuration)');?></label>\n    \t\t\t</div>\n\t\t\t</div>\n            <div class=\"col-md-6\">\n    \t\t\t<div>\n    \t\t\t\t<label><input type=\"checkbox\" id=\"id_disable_subdomain\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Cookie is valid only for domain where javascript embedded (excludes subdomains)');?></label>\n    \t\t\t</div>\n\t\t\t</div>\n\t\t</div>\t\n\t\t\t<hr>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','For what domain you are generating embed code?');?></label> <input type=\"text\" class=\"form-control\" id=\"id_embed_domain\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','example.com');?>\" value=\"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select id=\"HttpMode\" class=\"form-control\">\n\t\t\t\t\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n\t\t\t\t\t\t\t\t<option value=\"http:\">http:</option>\n\t\t\t\t\t\t\t\t<option value=\"https:\">https:</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Department')?></label> \n\t\t\t\t\t\t\t<select id=\"DepartmentID\" multiple=\"multiple\" size=\"5\" class=\"form-control\">\n\t\t\t\t\t\t\t\t   <option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Any');?></option>\n                    \t\t\t<?php foreach (erLhcoreClassModelDepartament::getList($departmentParams) as $departament) : ?>\n                    \t\t\t   <option value=\"<?php echo $departament->id?>\"><?php echo htmlspecialchars($departament->name)?></option>\n                    \t\t\t<?php endforeach; ?>\n                    \t\t</select>\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select id=\"LocaleID\" class=\"form-control\">\n                                <?php foreach ($locales as $locale ) : ?>\n                                <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n                                <?php endforeach; ?>\n                            </select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<label><input type=\"checkbox\" id=\"DetectLanguage\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Try to detect language automatically');?></label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t  <div class=\"col-md-6\">\n\t\t\t\t\t\t        <div class=\"form-group\">\n        \t\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Operator ID')?></label> <input type=\"text\" class=\"form-control\" id=\"id_operator\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','To what operator chat should be assigned automatically?')?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','To what operator chat should be assigned automatically?')?>\" value=\"\" />\n        \t\t\t\t\t\t</div>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t  <div class=\"col-md-6\">\n\t\t\t\t\t\t        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Survey at the end of chat')?></label> \n\t\t\t\t\t\t        <?php echo erLhcoreClassRenderHelper::renderCombobox( array (\n            \t\t                    'input_name'     => 'Survey',\n            \t\t                    'optional_field' => erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','no survey'),\n            \t\t                    'selected_id'    => 0,\n            \t\t                    'css_class'     => 'form-control',\n            \t\t                    'list_function'  => 'erLhAbstractModelSurvey::getList'\n            \t\t            )); ?>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<?php if (erLhcoreClassModelChatConfig::fetch('product_enabled_module')->current_value == 1) : ?>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t    <div class=\"col-md-6\">\n    \t\t\t\t    <div class=\"form-group\">\n        \t\t\t\t    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Product')?></label> \n        \t\t\t\t\t<?php echo erLhcoreClassRenderHelper::renderCombobox( array (\n                                    'input_name'     => 'product_id',                    \t\t\t\t\n                                    'selected_id'    =>  0,\n                    \t            'css_class'      => 'form-control',\n                    \t            'display_name'   => 'name_department',\n                    \t            'multiple'       => true,\n                                    'list_function'  => 'erLhAbstractModelProduct::getList'\n                            )); ?>\n        \t\t\t\t</div>\n    \t\t\t\t</div>\t\t\t\t    \n\t\t\t\t</div>\n\t\t\t\t<?php endif;?>\n\t\t</div>\n\n\t\t<div role=\"tabpanel\" class=\"tab-pane\" id=\"design\">\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Minimize action, applies only if status widget is at the bottom');?></label> <select id=\"MinimizeID\" class=\"form-control\">\n\t\t\t\t\t<option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Keep where it was');?></option>\n\t\t\t\t\t<option value=\"br\" selected=\"selected\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Minimize to bottom of the screen');?></option>\n\t\t\t\t</select>\n\t\t\t</div>\n\n\n\t\t\t<div class=\"row\">\n\t\t\t\t\n\t\t\t\t<div class=\"col-md-6\">\n    \t\t\t\t<div class=\"form-group\">\n        \t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position');?></label> <select id=\"PositionID\" class=\"form-control\">\n        \t\t\t\t\t<option value=\"original\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Native placement - it will be shown where the html is embedded');?></option>\n        \t\t\t\t\t<option value=\"bottom_right\" selected=\"selected\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom right corner of the screen');?></option>\n        \t\t\t\t\t<option value=\"bottom_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom left corner of the screen');?></option>\n        \t\t\t\t\t<option value=\"middle_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle right side of the screen');?></option>\n        \t\t\t\t\t<option value=\"middle_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle left side of the screen');?></option>\n        \t\t\t\t\t<option value=\"api\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Invisible, only JS API will be included');?></option>\n        \t\t\t\t\t<option value=\"full_height_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Full height right');?></option>\n        \t\t\t\t\t<option value=\"full_height_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Full height left');?></option>\n        \t\t\t\t</select>\n        \t\t\t</div>\n    \t\t\t</div>\n    \t\t\t\n    \t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select id=\"ThemeID\" class=\"form-control\">\n\t\t\t\t\t\t\t<option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n        \t\t\t<?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n        \t\t\t   <option value=\"<?php echo $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n        \t\t\t<?php endforeach; ?>\n        \t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup window width')?></label> <input type=\"text\" class=\"form-control\" id=\"id_popup_width\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup window width in pixels')?>\" value=\"500\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-2\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Height')?></label> <input type=\"text\" class=\"form-control\" id=\"id_popup_height\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup window height in pixels')?>\" value=\"520\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget width')?></label> <input type=\"text\" class=\"form-control\" id=\"id_widget_width\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget width in pixels')?>\" value=\"300\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-2\">\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Height')?></label> <input type=\"text\" class=\"form-control\" id=\"id_widget_height\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget height in pixels')?>\" value=\"340\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position from the top, only used if the middle left or the middle right side is chosen');?></label>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-md-8\">\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"id_top_text\" value=\"350\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t\t<select id=\"UnitsTop\" class=\"form-control\">\n\t\t\t\t\t\t\t<option value=\"pixels\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Pixels');?></option>\n\t\t\t\t\t\t\t<option value=\"percents\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Percentage');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Identifier \u2013 enter a unique identifier here. This is useful for separating messages and proactive chat invitations from different domains/web pages. Enter a string without special characters or spaces such as \u201chomepage\u201d or \u201cwebsite1\u201d.');?></label> <input type=\"text\" class=\"form-control\" id=\"id_site_identifier\" maxlength=\"50\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Leave empty if it is not important to you');?>\" value=\"\" />\n\t\t\t</div>\n\n\t\t</div>\n\t\t\n\t\t<?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_tab_content_multiinclude.tpl.php'));?>\n\t\t\n\t</div>\n</div>\n\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the text area to the page where you want your status to appear');?></p>\n<textarea style=\"width: 100%; height: 200px; font-size: 11px;\" class=\"form-control\" id=\"HMLTContent\"><?php echo htmlspecialchars('<script type=\"text/javascript\" src=\"'. erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('chat/getstatus') .'\"></script>')?></textarea>\n\n<script type=\"text/javascript\">\n\nvar default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\nfunction generateEmbedCode(){\n    var siteAccess = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n    var id_internal_popup = $('#id_internal_popup').is(':checked') ? '/(click)/internal' : '';\n    var id_disable_online_tracking = $('#id_disable_online_tracking').is(':checked') ? '/(dot)/true' : '';\n    \n    var id_show_leave_form = $('#id_show_leave_form').is(':checked') ? '/(leaveamessage)/true' : '';\n    var id_hide_then_offline = $('#id_hide_then_offline').is(':checked') ? '/(hide_offline)/true' : '';\n    var id_check_operator_message = $('#id_check_operator_message').is(':checked') ? '/(check_operator_messages)/true' : '';\n    var id_disable_pro_active_invitations = $('#id_disable_pro_active_invitations').is(':checked') ? '/(disable_pro_active)/true' : '';\n    var id_department = $('#DepartmentID').val() && $('#DepartmentID').val().length > 0 && $('#DepartmentID').val().join('/') != '0' ? '/(department)/'+$('#DepartmentID').val().join('/') : '';\n    var id_product = $('#id_product_id').val() && $('#id_product_id').val().length > 0 && $('#id_product_id').val().join('/') != '0' ? '/(prod)/'+$('#id_product_id').val().join('/') : '';\n    \n    var id_theme = $('#ThemeID').val() > 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n    var id_identifier = $('#id_site_identifier').val() != '' ? '/(identifier)/'+$('#id_site_identifier').val() : '';\n    var id_ma = $('#MinimizeID').val() != '' ? '/(ma)/'+$('#MinimizeID').val() : '';\n    var id_operator = $('#id_operator').val() > 0 ? '/(operator)/'+$('#id_operator').val() : '';\n    var id_survey = $('#id_Survey').val() > 0 ? '/(survey)/'+$('#id_Survey').val() : '';\n    \n\n    var id_position =  '/(position)/'+$('#PositionID').val();\n   \n    var id_tag = '';\n    var top = '/(top)/'+($('#id_top_text').val() == '' ? 350 : $('#id_top_text').val());\n\tvar topposition = '/(units)/'+$('#UnitsTop').val();\n\n    if ($('#PositionID').val() == 'original'){\n        id_tag = <?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_title.tpl.php'));?>+\"\\n\"+\n        '<div id=\"lhc_status_container\" ></div>'+\"\\n\\n\"+<?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_title_after.tpl.php'));?>+\"\\n\";\n    };\n    \n    var id_embed_domain = $('#id_embed_domain').val() != '' ? ',domain:\\''+$('#id_embed_domain').val()+'\\'' : '';\n\n    if (id_embed_domain.indexOf('://') != -1) {\n        alert(<?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Please do not enter protocol, only domain name is required'),ENT_QUOTES))?>);\n        return;\n    };\n\n    var id_disable_subdomain =  $('#id_disable_subdomain').is(':checked') ? ',subdomain:true' : '';\n\n    var uaArguments = '';\n    \n    <?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_custom_generation_multiinclude.tpl.php'));?>\n\n    if (uaArguments != '') {\n    \tuaArguments = '/(ua)'+uaArguments;\n    }\n    \n    <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/options_variable.tpl.php')); ?>\n\n    var id_detect_language = $('#DetectLanguage').is(':checked') ? true : false;\n\n    var langDetectScript = '';\n\n    if (id_detect_language == true) {\n    \tlangDetectScript = \"var _l = '';\"+\n\t\t\"var _m = document.getElementsByTagName('meta');\"+   \n        \"var _cl = '';\"+\n        \"for (i=0; i < _m.length; i++) {if ( _m[i].getAttribute('http-equiv') == 'content-language' ) {_cl = _m[i].getAttribute('content');}}\"+\n        \"if (document.documentElement.lang != '') _l = document.documentElement.lang;\"+\n        \"if (_cl != '' && _cl != _l) _l = _cl;\"+\n        \"if (_l == undefined || _l == '') {_l = '\" + siteAccess + \"';\"+\n        \"} else {_l = _l[0].toLowerCase() + _l[1].toLowerCase(); if ('<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' )?>' == _l) {_l = ''} else {_l = _l + '/';}}\\n\";\n    }\n\n    var script = '<script type=\"text/javascript\">'+\"\\n\"+\"var <?php echo $chatOptionsVariable?> = {};\\n\"+\n      '<?php echo $chatOptionsVariable?>.opt = {widget_height:'+$('#id_widget_height').val()+',widget_width:'+$('#id_widget_width').val()+',popup_height:'+$('#id_popup_height').val()+',popup_width:'+$('#id_popup_width').val()+id_embed_domain+id_disable_subdomain+'};\\n'+\n      '(function() {'+\"\\n\"+langDetectScript+\n        'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.async = true;'+\"\\n\"+\n        'var referrer = (document.referrer) ? encodeURIComponent(document.referrer.substr(document.referrer.indexOf(\\'://\\')+1)) : \\'\\';'+\"\\n\"+\n        'var location  = (document.location) ? encodeURIComponent(window.location.href.substring(window.location.protocol.length)) : \\'\\';'+\"\\n\"+\n        'po.src = \\''+$('#HttpMode').val()+'//<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::baseurldirect()?>'+(id_detect_language == false ? siteAccess : '\\'+_l+\\'')+'chat/getstatus<?php isset($userArgument) ? print $userArgument : ''?>'+uaArguments+id_internal_popup+id_position+id_ma+id_hide_then_offline+id_disable_online_tracking+id_check_operator_message+top+topposition+id_show_leave_form+id_department+id_operator+id_identifier+id_disable_pro_active_invitations+id_theme+id_product+id_survey+'?r=\\'+referrer+\\'&l=\\'+location;'+\"\\n\"+\n        'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n      '})();'+\"\\n\"+\n    '</scr'+'ipt>';\n\n    $('#HMLTContent').text(id_tag+script);\n};\n\n$('#id_disable_subdomain,#LocaleID,#id_embed_domain,#DetectLanguage,#id_product_id,#id_disable_online_tracking,#MinimizeID,#id_operator,#DepartmentID,#HttpMode,#ThemeID,#id_Survey,#id_disable_pro_active_invitations,#id_site_identifier,#id_internal_popup,#id_position_bottom,#PositionID,#id_show_leave_form,#id_hide_then_offline,#id_check_operator_message,#UnitsTop,#id_top_text,#id_popup_width,#id_popup_height,#id_widget_width,#id_widget_height').change(function(){\n    generateEmbedCode();\n});\n\ngenerateEmbedCode();\n\n</script>", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','HTML code');?></h1>\n\n<div role=\"tabpanel\" ng-non-bindable>\n\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs\" role=\"tablist\">\n        <li role=\"presentation\" class=\"nav-item\"><a class=\"active nav-link\" href=\"#general\" aria-controls=\"general\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','General');?></a></li>\n        <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#design\" aria-controls=\"design\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Design');?></a></li>\n        <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#staticimage\" aria-controls=\"design\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Static image');?></a></li>\n        <?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_tab_multiinclude.tpl.php'));?>\n    </ul>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div role=\"tabpanel\" class=\"tab-pane active pt-2\" id=\"general\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div>\n                        <label><input type=\"checkbox\" id=\"id_fresh\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','On each refresh start a new chat. Users will loose chat session browsing through pages! Usefull in embed mode.');?></label>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div>\n                        <label><input type=\"checkbox\" id=\"id_show_leave_form\" checked=\"checked\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Show a \u2018leave a message form\u2019 when there are no online operators');?></label>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div>\n                        <label><input type=\"checkbox\" id=\"id_check_messages_operator\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Check for operator invitation messages. If you are planning to send messages to online visitors manually you can check this.');?></label>\n                    </div>\n                </div>\n\n                <div class=\"col-md-6\">\n                    <div>\n                        <label><input type=\"checkbox\" id=\"id_disable_pro_active_invitations\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Disable proactive invitations');?></label>\n                    </div>\n                </div>\n\n            </div>\n            <hr>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','For what domain you are generating embed code?');?></label> <input type=\"text\" class=\"form-control\" id=\"id_embed_domain\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','example.com');?>\" value=\"\" />\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Department')?></label>\n                        <select id=\"DepartmentID\" multiple=\"multiple\" size=\"5\" class=\"form-control\">\n                            <option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Any');?></option>\n                            <?php foreach (erLhcoreClassModelDepartament::getList($departmentParams) as $departament) : ?>\n                                <option value=\"<?php echo $departament->alias != '' ? htmlspecialchars($departament->alias) : $departament->id?>\"><?php echo htmlspecialchars($departament->name)?></option>\n                            <?php endforeach; ?>\n                        </select>\n                    </div>\n\n                </div>\n\n                <div class=\"col-md-6\">\n                    <?php /*<div>\n                        <label><input type=\"checkbox\" id=\"id_internal_popup\" checked=\"checked\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Show the page widget when a mouse is clicked');?></label>\n                    </div>*/ ?>\n\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget embed/click mode');?></label>\n                    <select id=\"id_widget_mode\" class=\"form-control\">\n                        <option value=\"widget\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','widget (default)');?></option>\n                        <option value=\"embed\">embed</option>\n                        <option value=\"popup\">popup</option>\n                    </select>\n\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget position');?></label>\n                    <select id=\"id_widget_position\" class=\"form-control\">\n                        <option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n                        <option value=\"api\">api</option>\n                    </select>\n\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget position placement.');?></label>\n                    <select id=\"id_position_placement\" class=\"form-control\">\n                        <option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom right');?></option>\n                        <option value=\"bottom_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom left');?></option>\n                        <option value=\"middle_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle right');?></option>\n                        <option value=\"middle_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle left');?></option>\n                        <option value=\"full_height_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom right, full height');?></option>\n                        <option value=\"full_height_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom left, full height');?></option>\n                    </select>\n                </div>\n\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose prefered http mode');?></label> <select id=\"HttpMode\" class=\"form-control\">\n                            <option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Based on site (default)');?></option>\n                            <option value=\"http:\">http:</option>\n                            <option value=\"https:\">https:</option>\n                        </select>\n                    </div>\n                </div>\n\n\n                <div class=\"col-md-12\">\n\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <div class=\"form-group\">\n                                <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Choose a language');?></label> <select id=\"LocaleID\" class=\"form-control\">\n                                    <?php foreach ($locales as $locale ) : ?>\n                                        <option value=\"<?php echo $locale?>/\"><?php echo $locale?></option>\n                                    <?php endforeach; ?>\n                                </select>\n                            </div>\n                            <div class=\"form-group\">\n                                <label><input type=\"checkbox\" id=\"DetectLanguage\" value=\"on\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Try to detect language automatically');?></label>\n                            </div>\n                        </div>\n                        <div class=\"col-6\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Operator ID')?></label> <input type=\"text\" class=\"form-control\" id=\"id_operator\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','To what operator chat should be assigned automatically?')?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','To what operator chat should be assigned automatically?')?>\" value=\"\" />\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Survey at the end of chat')?></label>\n                                    <?php echo erLhcoreClassRenderHelper::renderCombobox( array (\n                                        'input_name'     => 'Survey',\n                                        'optional_field' => erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','no survey'),\n                                        'selected_id'    => 0,\n                                        'css_class'     => 'form-control',\n                                        'list_function'  => 'erLhAbstractModelSurvey::getList'\n                                    )); ?>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <?php if (erLhcoreClassModelChatConfig::fetch('product_enabled_module')->current_value == 1) : ?>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Product')?></label>\n                            <?php echo erLhcoreClassRenderHelper::renderCombobox( array (\n                                'input_name'     => 'product_id',\n                                'selected_id'    =>  0,\n                                'css_class'      => 'form-control',\n                                'display_name'   => 'name_department',\n                                'multiple'       => true,\n                                'list_function'  => 'erLhAbstractModelProduct::getList'\n                            )); ?>\n                        </div>\n                    </div>\n                </div>\n            <?php endif;?>\n        </div>\n\n        <div role=\"tabpanel\" class=\"tab-pane\" id=\"design\">\n\n            <?php /*<div class=\"form-group\">\n                <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Minimize action, applies only if status widget is at the bottom');?></label> <select id=\"MinimizeID\" class=\"form-control\">\n                    <option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Keep where it was');?></option>\n                    <option value=\"br\" selected=\"selected\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Minimize to bottom of the screen');?></option>\n                </select>\n            </div>*/ ?>\n\n\n            <div class=\"row\">\n\n                <?php /*<div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position');?></label> <select id=\"PositionID\" class=\"form-control\">\n                            <option value=\"original\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Native placement - it will be shown where the html is embedded');?></option>\n                            <option value=\"bottom_right\" selected=\"selected\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom right corner of the screen');?></option>\n                            <option value=\"bottom_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Bottom left corner of the screen');?></option>\n                            <option value=\"middle_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle right side of the screen');?></option>\n                            <option value=\"middle_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Middle left side of the screen');?></option>\n                            <option value=\"api\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Invisible, only JS API will be included');?></option>\n                            <option value=\"full_height_right\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Full height right');?></option>\n                            <option value=\"full_height_left\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Full height left');?></option>\n                        </select>\n                    </div>\n                </div>*/ ?>\n\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Theme')?></label> <select id=\"ThemeID\" class=\"form-control\">\n                            <option value=\"0\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Default');?></option>\n                            <?php foreach (erLhAbstractModelWidgetTheme::getList(array('limit' => 1000)) as $theme) : ?>\n                                <option value=\"<?php echo $theme->alias != '' ? htmlspecialchars($theme->alias) : $theme->id?>\"><?php echo htmlspecialchars($theme->name)?></option>\n                            <?php endforeach; ?>\n                        </select>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"form-group\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup window width')?></label> <input type=\"text\" class=\"form-control\" id=\"id_popup_width\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup window width in pixels')?>\" value=\"500\" />\n                    </div>\n                    <div class=\"col-md-2\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Height')?></label> <input type=\"text\" class=\"form-control\" id=\"id_popup_height\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Popup window height in pixels')?>\" value=\"520\" />\n                    </div>\n                    <div class=\"col-md-4\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget width')?></label> <input type=\"text\" class=\"form-control\" id=\"id_widget_width\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget width in pixels')?>\" value=\"350\" />\n                    </div>\n                    <div class=\"col-md-2\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Height')?></label> <input type=\"text\" class=\"form-control\" id=\"id_widget_height\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Widget height in pixels')?>\" value=\"450\" />\n                    </div>\n                </div>\n            </div>\n\n            <?php /*<div class=\"form-group\">\n                <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Position from the top, only used if the middle left or the middle right side is chosen');?></label>\n                <div class=\"row\">\n                    <div class=\"col-md-8\">\n                        <input type=\"text\" class=\"form-control\" id=\"id_top_text\" value=\"350\" />\n                    </div>\n                    <div class=\"col-md-4\">\n                        <select id=\"UnitsTop\" class=\"form-control\">\n                            <option value=\"pixels\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Pixels');?></option>\n                            <option value=\"percents\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Percentage');?></option>\n                        </select>\n                    </div>\n                </div>\n            </div>*/ ?>\n\n\n            <div class=\"form-group\">\n                <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Identifier \u2013 enter a unique identifier here. This is useful for separating messages and proactive chat invitations from different domains/web pages. Enter a string without special characters or spaces such as \u201chomepage\u201d or \u201cwebsite1\u201d.');?></label> <input type=\"text\" class=\"form-control\" id=\"id_site_identifier\" maxlength=\"50\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Leave empty if it is not important to you');?>\" value=\"\" />\n            </div>\n\n        </div>\n\n        <div role=\"tabpanel\" class=\"tab-pane\" id=\"staticimage\">\n            <div class=\"row\">\n                <div class=\"col-6\">\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Online status text')?></label>\n                        <input type=\"text\" class=\"form-control\" id=\"OnlineTextStatic\" value=\"I'm online\" />\n                    </div>\n                </div>\n                <div class=\"col-6\">\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Offline status text. If you lave empty we will return empty image.')?></label>\n                        <input type=\"text\" class=\"form-control\" id=\"OfflineTextStatic\" value=\"I'm offline\" />\n                    </div>\n                </div>\n                <div class=\"col-6\">\n                    <div class=\"form-group\">\n                        <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Width')?></label>\n                        <input type=\"text\" class=\"form-control\" id=\"OnlineImageWidth\" value=\"200\" />\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Sample image')?></label><br/>\n                <img id=\"static-image-url\" src=\"<?php echo erLhcoreClassDesign::baseurl('restapi/onlineimage')?>\">\n            </div>\n\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Source code with a link')?></label>\n            <textarea class=\"form-control form-control\" style=\"font-size: 12px;\" id=\"static-image-code\"></textarea>\n\n            <script>\n                function staticImageGeneration(){\n                    var onlineText = $('#OnlineTextStatic').val() != '' ? '&online=' + encodeURIComponent($('#OnlineTextStatic').val()) : '';\n                    var offlineText = $('#OfflineTextStatic').val() != '' ? '&offline=' + encodeURIComponent($('#OfflineTextStatic').val()) : '&offline=0';\n                    var width = parseInt($('#OnlineImageWidth').val()) > 0 ? '&w=' + parseInt($('#OnlineImageWidth').val()) : '';\n                    var department = $('#DepartmentID').val() && $('#DepartmentID').val().length > 0 && $('#DepartmentID').val().join('/') != '0' ? '/(department)/'+$('#DepartmentID').val().join('/') : '';\n                    var operator = $('#id_operator').val() > 0 ? '/(operator)/'+$('#id_operator').val() : '';\n                    var theme = $('#ThemeID').val() != 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n\n                    var baseURL = '<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurl('restapi/onlineimage')?>' + department + operator + theme + '?' + onlineText + offlineText + width;\n\n                    $('#static-image-url').attr('src', baseURL);\n                    $('#static-image-code').val('<a href=\"'+$('#static-url-generated').val()+'\">'+'<img src=\"' + baseURL + '\" alt=\"\" /></a>');\n                }\n                $('#DepartmentID, #id_operator, #OnlineTextStatic, #OnlineImageWidth, #OfflineTextStatic, #static-url-generated').on('keyup change',function(){\n                    staticImageGeneration();\n                });\n            </script>\n\n            <hr>\n\n        </div>\n\n        <?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_tab_content_multiinclude.tpl.php'));?>\n\n    </div>\n</div>\n\n\n<p class=\"explain\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Copy the code from the text area to the page where you want your status to appear');?></p>\n<textarea style=\"width: 100%; height: 200px; font-size: 11px;\" class=\"form-control\" id=\"HMLTContent\"></textarea>\n\n<p>Static URL. You can send this url to your customers</p>\n\n<input type=\"text\" class=\"form-control form-control-sm\" value=\"\" id=\"static-url-generated\">\n\n<script type=\"text/javascript\">\n\n    var default_site_access = '<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' ); ?>/';\n\n    function generateEmbedCode(){\n        var siteAccess = $('#LocaleID').val() == default_site_access ? '' : ',lang:\\''+$('#LocaleID').val()+'\\'';\n\n        var siteAccessStatic = $('#LocaleID').val() == default_site_access ? '' : $('#LocaleID').val();\n\n        var id_widget_mode = $('#id_widget_mode').val();\n\n        var id_tag = '';\n        if (id_widget_mode == 'embed') {\n            id_tag = <?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_title.tpl.php'));?>+\"\\n\"+\n                '<div id=\"lhc_status_container_page\" ></div>'+\"\\n\\n\"+<?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_title_after.tpl.php'));?>+\"\\n\";\n        }\n\n\n        //var id_disable_online_tracking = $('#id_disable_online_tracking').is(':checked') ? ',dot:true' : '';\n\n        var id_show_leave_form = $('#id_show_leave_form').is(':checked') ? ',leaveamessage:true' : '';\n        var id_fresh = $('#id_fresh').is(':checked') ? ',fresh:true' : '';\n        var id_fresh_status = $('#id_fresh').is(':checked') ? '/(fresh)/true' : '';\n\n       var id_disable_pro_active_invitations = $('#id_disable_pro_active_invitations').is(':checked') ? ',proactive:false' : '';\n       var id_position_placement = $('#id_position_placement').val() != '' ? ',position_placement:\\''+$('#id_position_placement').val()+'\\'' : '';\n\n        var id_department = $('#DepartmentID').val() && $('#DepartmentID').val().length > 0 && $('#DepartmentID').val().join('/') != '0' ? ',department:[\"'+$('#DepartmentID').val().join('\",\"')+'\"]' : '';\n        var id_department_static = $('#DepartmentID').val() && $('#DepartmentID').val().length > 0 && $('#DepartmentID').val().join('/') != '0' ? '/(department)/'+$('#DepartmentID').val().join('/') : '';\n\n        //var id_product = $('#id_product_id').val() && $('#id_product_id').val().length > 0 && $('#id_product_id').val().join('/') != '0' ? '/(prod)/'+$('#id_product_id').val().join('/') : '';\n\n        var id_theme = $('#ThemeID').val() != 0 ? ',theme:\"'+$('#ThemeID').val()+'\"' : '';\n        var id_theme_static = $('#ThemeID').val() != 0 ? '/(theme)/'+$('#ThemeID').val() : '';\n\n        var id_widget_position = $('#id_widget_position').val() != '' ? ',position:\\''+$('#id_widget_position').val()+'\\'' : '';\n\n        var id_check_messages_operator = $('#id_check_messages_operator').is(':checked') ? ',check_messages:true' : ',check_messages:false';\n\n        var id_identifier = $('#id_site_identifier').val() != '' ? ',identifier:\\''+$('#id_site_identifier').val()+'\\'' : '';\n        var id_identifier_static = $('#id_site_identifier').val() != '' ? '/(identifier)/'+$('#id_site_identifier').val() : '';\n\n        <?php //var id_ma = $('#MinimizeID').val() != '' ? '/(ma)/'+$('#MinimizeID').val() : ''; ?>\n\n        var id_operator = $('#id_operator').val() > 0 ? ',operator:'+$('#id_operator').val() : '';\n        var id_operator_static = $('#id_operator').val() > 0 ? '/(operator)/'+$('#id_operator').val() : '';\n\n\n        var id_survey = $('#id_Survey').val() > 0 ? ',survey:'+$('#id_Survey').val() : '';\n        var id_survey_static = $('#id_Survey').val() > 0 ? '/(survey)/'+$('#id_Survey').val() : '';\n\n\n        <?php /*var id_position =  '/(position)/'+$('#PositionID').val();*/ ?>\n\n        /*var id_tag = '';\n        var top = '/(top)/'+($('#id_top_text').val() == '' ? 350 : $('#id_top_text').val());\n        var topposition = '/(units)/'+$('#UnitsTop').val();\n\n        if ($('#PositionID').val() == 'original'){\n            id_tag = <?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_title.tpl.php'));?>+\"\\n\"+\n                '<div id=\"lhc_status_container\" ></div>'+\"\\n\\n\"+<?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_title_after.tpl.php'));?>+\"\\n\";\n        };*/\n\n        var id_embed_domain = $('#id_embed_domain').val() != '' ? ',domain:\\''+$('#id_embed_domain').val()+'\\'' : '';\n\n        if (id_embed_domain.indexOf('://') != -1) {\n            alert(<?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','Please do not enter protocol, only domain name is required'),ENT_QUOTES))?>);\n            return;\n        };\n\n        <?php /*var id_disable_subdomain =  $('#id_disable_subdomain').is(':checked') ? ',subdomain:true' : '';\n\n        var uaArguments = '';\n\n        <?php include(erLhcoreClassDesign::designtpl('lhsystem/htmlcode_custom_generation_multiinclude.tpl.php'));?>\n\n        if (uaArguments != '') {\n            uaArguments = '/(ua)'+uaArguments;\n        }\n\n        <?php include(erLhcoreClassDesign::designtpl('lhchat/getstatus/options_variable.tpl.php')); ?>\n*/ ?>\n\n        var id_detect_language = $('#DetectLanguage').is(':checked') ? true : false;\n\n        var langDetectScript = '';\n\n        if (id_detect_language == true) {\n            langDetectScript = \"var _l = '';\"+\n                \"var _m = document.getElementsByTagName('meta');\"+\n                \"var _cl = '';\"+\n                \"for (i=0; i < _m.length; i++) {if ( _m[i].getAttribute('http-equiv') == 'content-language' ) {_cl = _m[i].getAttribute('content');}}\"+\n                \"if (document.documentElement.lang != '') _l = document.documentElement.lang;\"+\n                \"if (_cl != '' && _cl != _l) _l = _cl;\"+\n                \"if (_l == undefined || _l == '') {_l = '\" + siteAccess + \"';\"+\n                \"} else {_l = _l[0].toLowerCase() + _l[1].toLowerCase(); if ('<?php echo erConfigClassLhConfig::getInstance()->getSetting( 'site', 'default_site_access' )?>' == _l) {_l = ''} else {LHC_API.args.lang = _l + '/';}}\\n\";\n        }\n\n        $('#static-url-generated').val($('#HttpMode').val()+'//<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::baseurldirect()?>'+siteAccessStatic +'chat/start'+id_survey_static+id_operator_static+id_fresh_status+id_department_static+id_theme_static+id_identifier_static);\n        staticImageGeneration();\n\n        var script = '<script>'+\n            'var LHC_API = LHC_API||{};'+\"\\n\"+'LHC_API.args = {mode:\\''+id_widget_mode+'\\',lhc_base_url:\\'' + $('#HttpMode').val() + '//<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::baseurldirect()?>\\',wheight:'+$('#id_widget_height').val()+',wwidth:'+$('#id_widget_width').val()+',pheight:'+$('#id_popup_height').val()+',pwidth:'+$('#id_popup_width').val()+id_operator+id_embed_domain+id_fresh+id_show_leave_form+id_department+id_theme+id_survey+id_widget_position+id_check_messages_operator+id_disable_pro_active_invitations+id_identifier+siteAccess+id_position_placement+'};\\n'+\n            '(function() {'+\"\\n\"+langDetectScript+\n            'var po = document.createElement(\\'script\\'); po.type = \\'text/javascript\\'; po.setAttribute(\\'crossorigin\\',\\'anonymous\\'); po.async = true;'+\"\\n\"+\n            'var date = new Date();'+\n            'po.src = \\''+$('#HttpMode').val()+'//<?php echo str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::design('js/widgetv2/index.js')?>?\\'+(\"\"+date.getFullYear() + date.getMonth() + date.getDate());'+\"\\n\"+\n            'var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(po, s);'+\"\\n\"+\n            '})();'+\"\\n\"+\n            '</scr'+'ipt>';\n\n        $('#HMLTContent').text(id_tag+script);\n    };\n\n    $('#id_widget_mode,#id_position_placement, #hash_args,#id_check_messages_operator,#id_disable_subdomain,#id_fresh,#id_widget_position,#LocaleID,#id_embed_domain,#DetectLanguage,#id_product_id,#id_disable_online_tracking,#MinimizeID,#id_operator,#DepartmentID,#HttpMode,#ThemeID,#id_Survey,#id_disable_pro_active_invitations,#id_site_identifier,#id_internal_popup,#id_position_bottom,#PositionID,#id_show_leave_form,#id_hide_then_offline,#UnitsTop,#id_top_text,#id_popup_width,#id_popup_height,#id_widget_width,#id_widget_height').change(function(){\n        generateEmbedCode();\n    });\n\n    generateEmbedCode();\n    staticImageGeneration();\n\n</script>", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/timezone','Update');?></h1>\r\n\r\n<?php if (isset($updated) && $updated == 'done') : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('system/smtp','Settings updated'); ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-md-4\">\r\n\t\t<h5><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Your version')?> - <?php echo sprintf(\"%0.2f\", erLhcoreClassUpdate::LHC_RELEASE/100);?></h5>\r\n\t\t<h5><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Current version')?> - <span class=\"text-success\" id=\"recent-version\">...</span></h5>\r\n\r\n        <p class=\"font-weight-bold\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Status/security checks')?></p>\r\n        <ul>\r\n            <li><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Strong secret hash')?> -\r\n            <?php if (strlen(erConfigClassLhConfig::getInstance()->getSetting( 'site', 'secrethash' )) < 50) : ?>\r\n                <span class=\"badge badge-danger\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Weak')?></span>\r\n            <?php else : ?>\r\n                <span class=\"badge badge-success\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Strong')?></span>\r\n            <?php endif; ?>\r\n                <a target=\"_blank\" href=\"https://doc.livehelperchat.com/docs/security#secret-hash\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','More information')?></a>\r\n            </li>\r\n            <li><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Strong export hash')?> -\r\n            <?php if (strlen(erLhcoreClassModelChatConfig::fetch('export_hash')->current_value) < 50) : ?>\r\n                <span class=\"badge badge-danger\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Weak')?></span>\r\n            <?php else : ?>\r\n                <span class=\"badge badge-success\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Strong')?></span>\r\n            <?php endif; ?>\r\n                <a target=\"_blank\" href=\"https://doc.livehelperchat.com/docs/security#export-hash\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','More information')?></a>\r\n            </li>\r\n            <li><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Trusted host')?> -\r\n            <?php if (!is_array(erConfigClassLhConfig::getInstance()->getSetting( 'site', 'trusted_host_patterns', false )) || empty(erConfigClassLhConfig::getInstance()->getSetting( 'site', 'trusted_host_patterns', false ))) : ?>\r\n                <span class=\"badge badge-danger\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','not set')?></span>\r\n            <?php else : ?>\r\n                <span class=\"badge badge-success\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','set')?></span>\r\n            <?php endif; ?>\r\n                <a target=\"_blank\" href=\"https://doc.livehelperchat.com/docs/security#trusted-hosts-and-site-address\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','More information')?></a>\r\n            </li>\r\n            <li><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Site address')?> -\r\n            <?php if (!erConfigClassLhConfig::getInstance()->getSetting( 'site', 'site_address', false )) : ?>\r\n                <span class=\"badge badge-danger\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','not set')?></span>\r\n            <?php else : ?>\r\n                <span class=\"badge badge-success\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','set')?> - <?php echo htmlspecialchars(erConfigClassLhConfig::getInstance()->getSetting( 'site', 'site_address', false )); ?></span>\r\n            <?php endif; ?>\r\n                <a target=\"_blank\" href=\"https://doc.livehelperchat.com/docs/security#trusted-hosts-and-site-address\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','More information')?></a>\r\n            </li>\r\n        </ul>\r\n\r\n        <p class=\"font-weight-bold\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','More information')?></p>\r\n\r\n        <ul>\r\n            <li><a rel=\"noreferrer\" href=\"http://livehelperchat.com/news-5c.html\" target=\"_blank\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','News')?></a></li>\r\n            <li><a target=\"_blank\" rel=\"noreferrer\" href=\"https://doc.livehelperchat.com/\">Documentation</a></li>\r\n            <li><a target=\"_blank\" rel=\"noreferrer\" href=\"https://doc.livehelperchat.com/docs/upgrading\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/update','Upgrade instructions')?></a></li>\r\n            <li><a target=\"_blank\" rel=\"noreferrer\" href=\"http://livehelperchat.com\">Live Helper Chat official website</a></li>\r\n        </ul>\r\n\r\n\t</div>\r\n\t<div class=\"col-md-8\">\r\n        <button type=\"button\" class=\"btn btn-secondary btn-xs\" onclick=\"compareLocal()\">Click to compare with local definition</button>\r\n\t\t<div id=\"status-db\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/timezone','Comparing current database structure, please wait...')?></div>\r\n\t</div>\r\n</div>\r\n\r\n<script>\r\nfunction updateDatabase(scope) {\r\n\t$('#db-status-checked').hide();\r\n\t$('#db-status-updating').show();\t\t\r\n\t$.postJSON('<?php echo erLhcoreClassDesign::baseurl('system/update')?>/(action)/statusdbdoupdate' + (scope != '' ? '/(scope)/local' : ''),function(data){\r\n        $('#status-db').html(data.result);            \r\n    }); \r\n};\r\n\r\nfunction compareLocal() {\r\n    $.postJSON('<?php echo erLhcoreClassDesign::baseurl('system/update')?>/(action)/statusdb/(scope)/local',function(data){\r\n        $('#status-db').html(data.result);\r\n    });\r\n}\r\n\r\n(function() {\r\n\t\r\n  $.ajax({\r\n      url: 'https://livehelperchat.com/update/version',   \r\n      dataType: 'jsonp',      \r\n      jsonp: 'callback',\r\n      jsonpCallback: 'jsonpCallbackLHC',\r\n      success: function(data){        \r\n              $('#recent-version').text((data.version/100).toFixed(2));\r\n      }\r\n  });\r\n\t \r\n  $.postJSON('<?php echo erLhcoreClassDesign::baseurl('system/update')?>/(action)/statusdb',function(data){\r\n      $('#status-db').html(data.result);            \r\n  });\r\n    \r\n})();\r\n</script>", "<?php if (isset($errors)) : ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/validation_error.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<?php if (isset($updated) && $updated == 'done') : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Settings updated'); ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<form action=\"\" method=\"post\" autocomplete=\"off\" ng-non-bindable>\r\n\r\n\t<div role=\"tabpanel\">\r\n\r\n\t\t<!-- Nav tabs -->\r\n\t\t<ul class=\"nav nav-tabs\" role=\"tablist\">\r\n\t\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link active\" href=\"#autologinsettings\" aria-controls=\"autologinsettings\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Auto login settings');?></a></li>\r\n\t\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#autologincustom\" aria-controls=\"autologincustom\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Custom auto logins');?></a></li>\r\n\t\t</ul>\r\n\r\n\t\t<!-- Tab panes -->\r\n\t\t<div class=\"tab-content\">\r\n\t\t\t<div role=\"tabpanel\" class=\"tab-pane active\" id=\"autologinsettings\">\r\n\t\t\t\r\n\t\t\t    <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','This module can be used if you are generating autologin link. See site for code examples')?></p>\r\n\t\t\t\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label><input type=\"checkbox\" name=\"enabled\" value=\"on\" <?php (isset($autologin_data['enabled']) && $autologin_data['enabled'] == 1) ? print 'checked=\"checked\"' : print '' ?>\" /> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Enabled');?></label> \r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Secret hash used for authentification token generation, min 10 characters');?></label> \r\n\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"secret_hash\" value=\"<?php (isset($autologin_data['secret_hash']) && $autologin_data['secret_hash'] != '') ? print htmlspecialchars($autologin_data['secret_hash']) : print '' ?>\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/csfr_token.tpl.php'));?>\r\n\t\t\t\t \r\n\t\t\t\t<div class=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n\t\t\t\t\t<input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreAutologinSettings\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save'); ?>\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n            <div role=\"tabpanel\" class=\"tab-pane\" id=\"autologincustom\">\r\n                <script>\r\n                    function updateURL(index) {\r\n                       $('#copy-url-'+index).val( $('#copy-url-'+index).attr('data-original-url') + $('#site-access-'+index).val() + '/user/autologinuser' + '/'+$('#secret-hash-'+index).val());\r\n                    }\r\n                    function copyURL(inst) {\r\n                        $('#copy-url-'+inst.attr('data-index')).select();\r\n                        document.execCommand(\"copy\");\r\n                        inst.tooltip({\r\n                            trigger: 'click',\r\n                            placement: 'top'\r\n                        });\r\n                        function setTooltip(message) {\r\n                            inst.tooltip('hide')\r\n                                .attr('data-original-title', message)\r\n                                .tooltip('show');\r\n                        }\r\n\r\n                        function hideTooltip() {\r\n                            setTimeout(function() {\r\n                                inst.tooltip('hide');\r\n                            }, 3000);\r\n                        }\r\n                        setTooltip(inst.attr('data-success'));\r\n                        hideTooltip();\r\n                        return false;\r\n                    }\r\n                </script>\r\n\r\n                <?php for ($i = 0; $i < 5; $i++) : ?>\r\n                <div class=\"row\">\r\n                    <div class=\"col-1\">\r\n                        <div class=\"form-group\">\r\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','User ID')?>*</label>\r\n                            <input type=\"text\" name=\"UserID[<?php echo $i?>]\" class=\"form-control\" value=\"<?php echo isset($autologin_data['autologin_options'][$i]) ? htmlspecialchars($autologin_data['autologin_options'][$i]['user_id']) : null?>\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <div class=\"form-group\">\r\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','SiteAccess')?>*</label>\r\n                            <select id=\"site-access-<?php echo $i?>\" name=\"siteAccess[<?php echo $i?>]\" class=\"form-control\" onchange=\"updateURL(<?php echo $i?>)\">\r\n                                <?php foreach (erConfigClassLhConfig::getInstance()->getSetting( 'site', 'available_site_access' ) as $locale ) : ?>\r\n                                    <option value=\"<?php echo $locale?>\" <?php (isset($autologin_data['autologin_options'][$i]['site_access']) && $autologin_data['autologin_options'][$i]['site_access'] == $locale) ? print 'selected=\"selected\"' : ''?> ><?php echo $locale?></option>\r\n                                <?php endforeach; ?>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-3\">\r\n                        <div class=\"form-group\">\r\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Default URL')?>*</label>\r\n                            <input type=\"text\" name=\"URL[<?php echo $i?>]\" id=\"url-autologin-<?php echo $i?>\" class=\"form-control\" value=\"<?php echo isset($autologin_data['autologin_options'][$i]) ? htmlspecialchars($autologin_data['autologin_options'][$i]['url']) : null?>\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-3\">\r\n                        <div class=\"form-group\">\r\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Secret hash')?>*</label>\r\n                            <input type=\"text\" onkeyup=\"updateURL(<?php echo $i?>)\" name=\"SecretHash[<?php echo $i?>]\" id=\"secret-hash-<?php echo $i?>\" class=\"form-control\" value=\"<?php echo isset($autologin_data['autologin_options'][$i]) ? htmlspecialchars($autologin_data['autologin_options'][$i]['secret_hash']) : null?>\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <div class=\"form-group\">\r\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','IP Allowed')?>*</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"1.2.3.*,128.8.8.8\" name=\"IP[<?php echo $i?>]\" value=\"<?php echo isset($autologin_data['autologin_options'][$i]) ? htmlspecialchars($autologin_data['autologin_options'][$i]['ip']) : null?>\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-12\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input type=\"text\" class=\"form-control\" readonly=\"readonly\" id=\"copy-url-<?php echo $i?>\" data-original-url=\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurldirect('/')?>\" value=\"\">\r\n                                <div class=\"input-group-append\"><span class=\"input-group-text\"><a onclick=\"copyURL($(this))\" data-index=\"<?php echo $i?>\" data-original-title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Copied!')?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('users/autologin','Copy URL to clipboard')?>\"><i class=\"material-icons mr-0\">&#xE14D;</i></a></span></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <script>updateURL(<?php echo $i?>)</script>\r\n                <?php endfor; ?>\r\n\r\n                <div class=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n                    <input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreAutologinSettings\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save'); ?>\" />\r\n                </div>\r\n\r\n            </div>\r\n\t\t</div>\r\n\t</div>\r\n</form>", "<div class=\"form-group\" ng-non-bindable>\n    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Name');?></label>\n    <input type=\"text\" class=\"form-control form-control-sm\" name=\"name\" value=\"<?php echo htmlspecialchars($item->name);?>\" />\n</div>\n\n<div class=\"row\">\n    <div class=\"col-6\">\n        <div class=\"form-group\" ng-non-bindable>\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Identifier');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" name=\"identifier\" onkeyup=\"$('#api-incoming-url').val($('#api-incoming-url').attr('data-base')+$(this).val())\" value=\"<?php echo htmlspecialchars($item->identifier);?>\" />\n        </div>\n    </div>\n    <div class=\"col-6\">\n        <div class=\"form-group\" ng-non-bindable>\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Scope. This should be the same for all same provider implementations.');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" name=\"scope\" value=\"<?php echo htmlspecialchars($item->scope);?>\" />\n        </div>\n    </div>\n</div>\n\n<div class=\"form-group\">\n    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','URL to put in third party Rest API service');?></label>\n    <input type=\"text\" ng-non-bindable class=\"form-control form-control-sm\" id=\"api-incoming-url\" data-base=\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurldirect('webhooks/incoming')?>/\" value=\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::baseurldirect('webhooks/incoming')?>/<?php echo htmlspecialchars($item->identifier);?>\">\n</div>\n\n<div class=\"form-group\">\n    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/lists/search_panel','Department');?></label>\n    <?php echo erLhcoreClassRenderHelper::renderCombobox( array (\n        'input_name'     => 'dep_id',\n        'optional_field' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/lists/search_panel','Choose department'),\n        'selected_id'    => $item->dep_id,\n        'css_class'      => 'form-control form-control-sm',\n        'display_name'   => 'name',\n        'list_function_params' => array('limit' => false, 'sort' => '`name` ASC'),\n        'list_function'  => 'erLhcoreClassModelDepartament::getList'\n    )); ?>\n</div>\n\n<div class=\"form-group\">\n    <label><input type=\"checkbox\" value=\"on\" name=\"disabled\" <?php echo $item->disabled == 1 ? 'checked=\"checked\"' : '' ?> /> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/new','Disabled')?></label>\n</div>\n\n<div class=\"form-group\">\n    <label><input type=\"checkbox\" ng-model=\"show_wh_integration\"> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Show integration information.');?></label>\n</div>\n\n<div ng-show=\"show_wh_integration\">\n\n<ul class=\"nav nav-tabs mb-3\" role=\"tablist\">\n    <li role=\"presentation\" class=\"nav-item\"><a href=\"#main_message_attributes\" class=\"nav-link active\" aria-controls=\"main_message_attributes\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"false\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Main attributes')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#text_messages\" aria-controls=\"text_messages\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Text messages 1')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#text_messages_2\" aria-controls=\"text_messages_2\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Text messages 2')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#text_messages_3\" aria-controls=\"text_messages_3\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Text messages 3')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#text_messages_4\" aria-controls=\"text_messages_4\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Text messages 4')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#attachments\" aria-controls=\"attachments\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Attachments')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#img-attachments\" aria-controls=\"img-attachments\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Images/Video 1')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#img-attachments_2\" aria-controls=\"img-attachments_2\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Images/Video 2')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#img-attachments_3\" aria-controls=\"img-attachments_3\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Images/Video 3')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#chat_options\" aria-controls=\"chat_options\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Chat options')?></a></li>\n    <li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link\" href=\"#wh_attributes\" aria-controls=\"wh_attributes\" role=\"tab\" data-toggle=\"tab\" aria-selected=\"true\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Attributes')?></a></li>\n</ul>\n\n<div class=\"tab-content\">\n    <div role=\"tabpanel\" class=\"tab-pane form-group active\" id=\"main_message_attributes\">\n\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Messages attribute location');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.messages\" value=\"\" />\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                       <label><input type=\"checkbox\" ng-model=\"webhookincomingsctl.conditions.message_direct\" value=\"on\" > <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','This attribute contains direct message and NOT a messages array');?></label>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-6\">\n\n                <div class=\"row\">\n                    <div class=\"col-6\">\n                        <div class=\"form-group\">\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Nick');?></label>\n                            <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.nick\" value=\"\" />\n                        </div>\n                    </div>\n                    <div class=\"col-6\">\n                        <div class=\"form-group\">\n                            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Nick preg match rule');?></label>\n                            <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.nick_pregmatch\" placeholder=\"/(?!^\\d+$)^.+$/is\" value=\"\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Phone');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.phone\" value=\"\" />\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','IP');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.ip\" value=\"\" />\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','E-mail');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.email\" value=\"\" />\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Time');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.time\" value=\"\" />\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Chat ID field location');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.chat_id\" value=\"\" />\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Chat ID Template for manual message sending. Use {chat_id} as placeholder');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" title=\"{chat_id}@c.us\" placeholder=\"E.g {chat_id}@c.us\" ng-model=\"webhookincomingsctl.conditions.chat_id_template\" value=\"\" />\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','General conditions for messages being processed. These are first level attributes');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.main_cond\" placeholder=\"main attribute=value expected||main attribute=value expected\" value=\"\" />\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Additional field location');?></label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.add_field_value\" value=\"\" />\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"text_messages\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_body\"></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered text message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond\" value=\"\" />\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_op\" value=\"\" />\n        </div>\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"text_messages_2\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_body_2\"></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered text message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_2\" value=\"\" />\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_op_2\" value=\"\" />\n        </div>\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"text_messages_3\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_body_3\"></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered text message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_3\" value=\"\" />\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_op_3\" value=\"\" />\n        </div>\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"text_messages_4\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_body_4\"></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered text message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_4\" value=\"\" />\n        </div>\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_op_4\" value=\"\" />\n        </div>\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"attachments\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_attachments\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><input type=\"checkbox\" ng-model=\"webhookincomingsctl.conditions.msg_attachments_download\" value=\"on\" > <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Download attachment instead of using external URL');?></label>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Image body attributes. URL or base64 encoded content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_attachments_body\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Attribute which holds file name. Optional');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute. E.g file_name\" ng-model=\"webhookincomingsctl.conditions.msg_cond_attachments_file_name\" value=\"\" />\n        </div>\n        \n        <h5><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Decode file options');?> </h5>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','URL To make request to get content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_attachments_url_decode\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Request content');?></label>\n            <textarea class=\"form-control\" ng-model=\"webhookincomingsctl.conditions.msg_cond_attachments_url_decode_content\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Response location');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_attachments_url_decode_output\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered attachment message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_attachments\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_attachments_op\" value=\"\" />\n        </div>\n\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"img-attachments\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_img\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><input type=\"checkbox\" ng-model=\"webhookincomingsctl.conditions.msg_img_download\" value=\"on\" > <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Download image instead of using external URL');?></label>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Image body attributes. URL or base64 encoded content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_body\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Attribute which holds file name. Optional');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute. E.g file_name\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_file_name\" value=\"\" />\n        </div>\n\n        <h5><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Decode file options');?> </h5>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','URL To make request to get content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_url_decode\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Request content');?></label>\n            <textarea class=\"form-control\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_url_decode_content\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Response location');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_url_decode_output\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered images message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_op\" value=\"\" />\n        </div>\n\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"img-attachments_2\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_img_2\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><input type=\"checkbox\" ng-model=\"webhookincomingsctl.conditions.msg_img_2_download\" value=\"on\" > <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Download image instead of using external URL');?></label>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Image body attributes. URL or base64 encoded content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_2_body\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Attribute which holds file name. Optional');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute. E.g file_name\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_2_file_name\" value=\"\" />\n        </div>\n\n        <h5><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Decode file options');?> </h5>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','URL To make request to get content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_2_url_decode\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Request content');?></label>\n            <textarea class=\"form-control\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_2_url_decode_content\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Response location');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_2_url_decode_output\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered images message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_2\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_2_op\" value=\"\" />\n        </div>\n\n    </div>\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"img-attachments_3\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Message body content');?></label>\n            <textarea class=\"form-control form-control-sm\" ng-model=\"webhookincomingsctl.conditions.msg_img_3\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><input type=\"checkbox\" ng-model=\"webhookincomingsctl.conditions.msg_img_3_download\" value=\"on\" > <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Download image instead of using external URL');?></label>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Image body attributes. URL or base64 encoded content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_3_body\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Attribute which holds file name. Optional');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute. E.g file_name\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_3_file_name\" value=\"\" />\n        </div>\n\n        <h5><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Decode file options');?> </h5>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','URL To make request to get content');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_3_url_decode\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Request content');?></label>\n            <textarea class=\"form-control\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_3_url_decode_content\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Response location');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Please provide attribute\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_3_url_decode_output\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered images message should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_3\" value=\"\" />\n        </div>\n\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','For message being considered bot/operator messages should have attribute value equal to');?></label>\n            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"message_attribute=value expected||message_attribute=value expected\" ng-model=\"webhookincomingsctl.conditions.msg_cond_img_3_op\" value=\"\" />\n        </div>\n\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"chat_options\">\n        <div class=\"form-group\">\n            <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','If previous chat is found and it is closed we should');?></label>\n            <select ng-model=\"webhookincomingsctl.conditions.chat_status\" class=\"form-control form-control-sm\">\n                <option value=\"\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Create a new chat.');?></option>\n                <option value=\"pending\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Set previous chat to Pending/Bot depending on department configuration.');?></option>\n                <option value=\"active\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Set as active if operator was assigned. Operator will not be reset.');?></option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <label><input type=\"checkbox\" ng-model=\"webhookincomingsctl.conditions.reset_op\" value=\"on\" > <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Operator should be reset if chat being transferred to pending state.');?></label>\n        </div>\n    </div>\n\n    <div role=\"tabpanel\" class=\"tab-pane form-group\" id=\"wh_attributes\">\n        <p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','These attributes can be accessed in Rest API. So you would not need to define them there.');?></p>\n\n        <button type=\"button\" class=\"btn btn-secondary btn-sm\" ng-click=\"webhookincomingsctl.addParam(webhookincomingsctl.conditions.attr)\">Add parameter</button>\n\n        <div ng-repeat=\"paramQuery in webhookincomingsctl.conditions.attr\" class=\"mt-2\">\n            <div class=\"row\">\n                <div class=\"col-4\">\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"paramQuery.key\" placeholder=\"Key\">\n                </div>\n                <div class=\"col-4\">\n                    <input type=\"text\" class=\"form-control form-control-sm\" ng-model=\"paramQuery.value\" placeholder=\"Value\">\n                </div>\n                <div class=\"col-1\">\n                    <button type=\"button\" class=\"btn btn-danger d-block w-100 btn-xs\" ng-click=\"webhookincomingsctl.deleteParam(webhookincomingsctl.conditions.attr,paramQuery)\">-</button>\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n</div>\n\n<hr/>\n\n<h5><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Expected JSON payload for text message.');?></h5>\n\n<pre>\n<?php echo '{'.\"\\n\".'\n    {{webhookincomingsctl.conditions.messages ? \"\\\"\"+webhookincomingsctl.conditions.messages+\"\\\":[\" : \"\"}}'.\"\\n\".'\n        \"{{webhookincomingsctl.conditions.msg_body}}\" : \"'. erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','expected message body') .'\",'.\"\\n\".'\n        \"{{webhookincomingsctl.conditions.nick}}\": \"'.  erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','expected nick').'\",'.\"\\n\".'\n        \"{{webhookincomingsctl.conditions.time}}\": \"'.  erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','unix timestamp E.g 1504208593').'\",'.\"\\n\".'\n        \"{{webhookincomingsctl.conditions.chat_id}}\": \"'.  erTranslationClassLhTranslation::getInstance()->getTranslation('chat/webhooks','Unique Chat ID.').'\",'.\"\\n\".'\n        {{webhookincomingsctl.conditions.msg_cond ? \"\\\"\"+webhookincomingsctl.conditions.msg_cond.replaceAll(\"=\",\"\\\":\\\"\").replaceAll(\"||\",\"\\\",        \\n\\\"\")+\"\\\",\" : \"\"}}'.\"\\n\".'\n    {{webhookincomingsctl.conditions.messages ? \"]\" : \"\"}}'.\"\\n\".'\n    {{webhookincomingsctl.conditions.main_cond ? \"\\\"\"+webhookincomingsctl.conditions.main_cond.replaceAll(\"=\",\"\\\":\\\"\").replaceAll(\"||\",\"\\\",        \\n\\\"\")+\"\\\",\" : \"\"}}\n'.\"\\n\".'}'?>\n</pre>\n\n</div>\n\n<textarea name=\"configuration\" class=\"hide\" ng-model=\"webhookincomingsctl.conditions_json\"></textarea>", "<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','XMPP settings');?></h1>\r\n\r\n<?php if (isset($errors)) : ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/validation_error.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<?php if (isset($updated) && $updated == 'done') : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Settings updated'); ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<?php if (isset($token_received) && $token_received == 'done') : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Succesfully authorised, now you can try to send a message'); ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<?php if (isset($token_revoked) && $token_revoked == 'done') : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Token was revoked'); ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<?php if (isset($message_send)) : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','XMPP message was sent succesfuly'); ?>\r\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\r\n<?php endif; ?>\r\n\r\n<form ng-non-bindable action=\"<?php echo erLhcoreClassDesign::baseurl('xmp/configuration')?>\" method=\"post\" autocomplete=\"off\">\r\n\r\n<?php include(erLhcoreClassDesign::designtpl('lhkernel/csfr_token.tpl.php'));?>\r\n\r\n<label><input type=\"checkbox\" name=\"use_xmp\" value=\"1\" <?php isset($xmp_data['use_xmp']) && ($xmp_data['use_xmp'] == '1') ? print 'checked=\"checked\"' : '' ?> /> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','XMPP active'); ?></label>\r\n\r\n<div class=\"row form-group\">\r\n\t<div class=\"col-6\">\r\n\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','XMPP Message content');?></label>\r\n\t\t<textarea class=\"form-control\" name=\"XMPMessage\" style=\"height:100px;\"><?php echo htmlspecialchars($xmp_data['xmp_message'])?></textarea>\r\n\t</div>\r\n\t<div class=\"col-6\">\r\n\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','XMPP Message about accepted chat');?></label>\r\n\t\t<textarea class=\"form-control\" name=\"XMPAcceptedMessage\" style=\"height:100px;\"><?php echo htmlspecialchars($xmp_data['xmp_accepted_message'])?></textarea>\r\n\t</div>\r\n</div>\r\n\r\n<div role=\"tabpanel\">\r\n\t<!-- Nav tabs -->\r\n\t<ul class=\"nav nav-tabs\" role=\"tablist\">\r\n\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link <?php if ( (isset($xmp_data['use_standard_xmp']) && $xmp_data['use_standard_xmp'] == '0') || !isset($xmp_data['use_standard_xmp']) ) : ?>active<?php endif;?>\" href=\"#xmp\" aria-controls=\"xmp\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','XMPP');?></a></li>\r\n\t\t<li role=\"presentation\" class=\"nav-item\"><a class=\"nav-link <?php if (isset($xmp_data['use_standard_xmp']) && $xmp_data['use_standard_xmp'] == '1' ) : ?>active<?php endif;?>\" href=\"#gtalk\" aria-controls=\"gtalk\" role=\"tab\" data-toggle=\"tab\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','GTalk');?></a></li>\r\n\t</ul>\r\n\r\n\t<!-- Tab panes -->\r\n\t<div class=\"tab-content\">\r\n\t\t<div role=\"tabpanel\" class=\"tab-pane <?php if ( (isset($xmp_data['use_standard_xmp']) && $xmp_data['use_standard_xmp'] == '0') || !isset($xmp_data['use_standard_xmp']) ) : ?>active<?php endif;?>\" id=\"xmp\">\r\n\t\t        <label><input type=\"radio\" name=\"use_standard_xmp\" value=\"0\" <?php ( (isset($xmp_data['use_standard_xmp']) && $xmp_data['use_standard_xmp'] == '0') || !isset($xmp_data['use_standard_xmp']) ) ? print 'checked=\"checked\"' : '' ?> /> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Use standard XMPP service'); ?></label>\r\n\t\t\r\n\t\t\t\t<div class=\"row form-group\">\r\n\t\t\t\t\t<div class=\"col-6\">\r\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Host');?></label>\r\n\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"host\" placeholder=\"talk.google.com\" value=\"<?php (isset($xmp_data['host']) && $xmp_data['host'] != '') ? print htmlspecialchars($xmp_data['host']) : print '' ?>\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-6\">\r\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Port');?></label>\r\n\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"port\" value=\"<?php (isset($xmp_data['port']) && $xmp_data['port'] != '') ? print htmlspecialchars($xmp_data['port']) : print '5222' ?>\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"row form-group\">\r\n\t\t\t\t\t<div class=\"col-6\">\t\t\t\r\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Login');?></label>\r\n\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"username\" autocomplete=\"new-password\" value=\"<?php (isset($xmp_data['username']) && $xmp_data['username'] != '') ? print htmlspecialchars($xmp_data['username']) : print '' ?>\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-6\">\r\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Password');?></label>\r\n\t\t\t\t\t\t<input class=\"form-control\" type=\"password\" name=\"password\" autocomplete=\"new-password\" value=\"\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"row form-group\">\r\n\t\t\t\t\t<div class=\"col-6\">\r\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Resource');?></label>\r\n\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"resource\" placeholder=\"xmpphp\" value=\"<?php (isset($xmp_data['resource']) && $xmp_data['resource'] != '') ? print htmlspecialchars($xmp_data['resource']) : print '' ?>\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-6\">\r\n\t\t\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Server');?></label>\r\n\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"server\" placeholder=\"gmail.com\" value=\"<?php (isset($xmp_data['server']) && $xmp_data['server'] != '') ? print htmlspecialchars($xmp_data['server']) : print '' ?>\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Recipients');?></label>\r\n\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"recipients\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Default recipients'); ?>\" value=\"<?php (isset($xmp_data['recipients']) && $xmp_data['recipients'] != '') ? print htmlspecialchars($xmp_data['recipients']) : print '' ?>\" />\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/csfr_token.tpl.php'));?>\r\n\t\t\t\t\r\n\t\t\t\t<h3><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Test recipients');?></h3>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Individual recipients');?></label>\r\n\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"test_recipients\" value=\"<?php (isset($xmp_data['test_recipients']) && $xmp_data['test_recipients'] != '') ? print htmlspecialchars($xmp_data['test_recipients']) : print '' ?>\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Test group recipients');?></label>\r\n\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"test_group_recipients\" value=\"<?php (isset($xmp_data['test_group_recipients']) && $xmp_data['test_group_recipients'] != '') ? print htmlspecialchars($xmp_data['test_group_recipients']) : print '' ?>\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n\t\t\t\t  <input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreXMPSettings\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save'); ?>\" />\r\n\t\t\t\t  <input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreXMPSettingsTest\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Test message will be send to your account e-mail'); ?>\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Send test message'); ?>\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t</div>\r\n\t\t<div role=\"tabpanel\" class=\"tab-pane <?php if (isset($xmp_data['use_standard_xmp']) && $xmp_data['use_standard_xmp'] == '1' ) : ?>active<?php endif;?>\" id=\"gtalk\">\r\n\t\t        <label><input type=\"radio\" name=\"use_standard_xmp\" value=\"1\" <?php isset($xmp_data['use_standard_xmp']) && ($xmp_data['use_standard_xmp'] == '1') ? print 'checked=\"checked\"' : '' ?> /> <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Use GTalk for messaging'); ?></label>\r\n\t\t\t\t<h4><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Information for your google app')?></h4>\t\r\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Redirect URL, this url you will have to enter in your google app configuration')?></label>\r\n\t\t\t\t<input class=\"form-control\" type=\"text\" value=\"<?php echo htmlspecialchars(erLhcoreClassSystem::getHost())?><?php echo erLhcoreClassDesign::baseurl('xmp/configuration')?>/(gtalkoauth)/true\" />\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<h4><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Enter your app information bellow')?></h4>\t\t\t\t\t\t\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','OAuth 2.0 Client ID');?></label>\r\n\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"gtalk_client_id\" placeholder=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Please enter your Client ID')?>\" value=\"<?php (isset($xmp_data['gtalk_client_id']) && $xmp_data['gtalk_client_id'] != '') ? print $xmp_data['gtalk_client_id'] : print '' ?>\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Client secret');?></label>\r\n\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"gtalk_client_secret\" value=\"<?php (isset($xmp_data['gtalk_client_secret']) && $xmp_data['gtalk_client_secret'] != '') ? print htmlspecialchars($xmp_data['gtalk_client_secret']) : print '' ?>\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/csfr_token.tpl.php'));?>\r\n\t\t\t\t\r\n\t\t\t\t<?php if (erLhcoreClassXMP::getAccessToken() !== false) : ?>\r\n\t\t\t\t<h3><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Test recipients');?></h3>\r\n\t\t\t    \r\n\t\t\t    <div class=\"form-group\">\r\n\t\t\t    <label><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Please enter to what gmail address test message should be send?');?></label>\r\n\t\t\t    <input class=\"form-control\" type=\"text\" name=\"test_recipients_gtalk\" value=\"<?php (isset($test_gmail_email) && $test_gmail_email != '') ? print htmlspecialchars($test_gmail_email) : print '' ?>\" />\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<input type=\"submit\" class=\"btn btn-primary float-right\" name=\"StoreXMPGTalkSendeMessage\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','This message will be send to test e-mail'); ?>\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Send test message'); ?>\" />\r\n\t\t\t\t<?php endif;?>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t<div class=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n\t\t\t\t  <input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreXMPGTalkSettings\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save'); ?>\" />\r\n\t\t\t\t  \t\t\t\t\t  \r\n\t\t\t\t  <?php if (erLhcoreClassXMP::getAccessToken() !== false) : ?>\t\t\t\t\t  \r\n\t\t\t\t  \t<input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreXMPGTalkRevokeToken\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Revoke access token'); ?>\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Revoke permission to send a message'); ?>\" />\r\n\t\t\t\t  <?php else : ?>\r\n\t\t\t\t\t  <?php if (isset($xmp_data['gtalk_client_secret']) && (!empty($xmp_data['gtalk_client_secret']))) : ?>\r\n\t\t\t\t\t  \t\t<input type=\"submit\" class=\"btn btn-secondary\" name=\"StoreXMPGTalkSettingsTest\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Authentificate and grant permission to send a message'); ?>\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Grant permission to send a message'); ?>\" />\r\n\t\t\t\t\t  <?php endif;?>\r\n\t\t\t\t  <?php endif;?>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n\t\r\n\t\r\n\r\n</form>", "<?php\n\n/**\n * This code is mix of WP and phpBB :)\n * */\nclass erLhcoreClassBBCode\n{    \n   /**\n    * Callback to convert URI match to HTML A element.\n    *\n    * This function was backported from 2.5.0 to 2.3.2. Regex callback for make_clickable().\n    *\n    * @since 2.3.2\n    * @access private\n    *\n    * @param array $matches Single Regex Match.\n    * @return string HTML A element with URI address.\n    */\n   public static function _make_url_clickable_cb( $matches ) {\n       $url = $matches[2];\n       if ( ')' == $matches[3] && strpos( $url, '(' ) ) {\n           // If the trailing character is a closing parethesis, and the URL has an opening parenthesis in it, add the closing parenthesis to the URL.\n           // Then we can let the parenthesis balancer do its thing below.\n           $url .= $matches[3];\n           $suffix = '';\n       } else {\n           $suffix = $matches[3];\n       }\n       // Include parentheses in the URL only if paired\n       while ( substr_count( $url, '(' ) < substr_count( $url, ')' ) ) {\n           $suffix = strrchr( $url, ')' ) . $suffix;\n           $url = substr( $url, 0, strrpos( $url, ')' ) );\n       }\n       $url = self::esc_url($url);\n       if ( empty($url) )\n           return $matches[0];\n       return $matches[1] . \"<a href=\\\"$url\\\" class=\\\"link\\\" rel=\\\"noreferrer\\\" target=\\\"_blank\\\">$url</a>\" . $suffix;\n   }\n   \n   /**\n    * Checks and cleans a URL.\n    *\n    * A number of characters are removed from the URL. If the URL is for displaying\n    * (the default behaviour) ampersands are also replaced. The {@see 'clean_url'} filter\n    * is applied to the returned cleaned URL.\n    *\n    * @since 2.8.0\n    *\n    * @param string $url       The URL to be cleaned.\n    * @param array  $protocols Optional. An array of acceptable protocols.\n    *\t\t                    Defaults to return value of wp_allowed_protocols()\n    * @param string $_context  Private. Use esc_url_raw() for database usage.\n    * @return string The cleaned $url after the {@see 'clean_url'} filter is applied.\n    */\n   public static function esc_url( $url, $protocols = null, $_context = 'display' ) {\n       $original_url = $url;\n       if ( '' == $url )\n           return $url;\n       $url = str_replace( ' ', '%20', $url );\n       $url = preg_replace('|[^a-z0-9-~+_.?#=!&;,/:%@$\\|*\\'()\\[\\]\\\\x80-\\\\xff]|i', '', $url);\n       if ( '' === $url ) {\n           return $url;\n       }\n       if ( 0 !== stripos( $url, 'mailto:' ) ) {\n           $strip = array('%0d', '%0a', '%0D', '%0A');\n           $url = self::_deep_replace($strip, $url);\n       }\n       $url = str_replace(';//', '://', $url);\n       /* If the URL doesn't appear to contain a scheme, we\n        * presume it needs http:// prepended (unless a relative\n        * link starting with /, # or ? or a php file).\n       */\n       if ( strpos($url, ':') === false && ! in_array( $url[0], array( '/', '#', '?' ) ) &&\n           ! preg_match('/^[a-z0-9-]+?\\.php/i', $url) )\n               $url = 'http://' . $url;\n           // Replace ampersands and single quotes only when displaying.\n           if ( 'display' == $_context ) {\n               $url = self::wp_kses_normalize_entities( $url );\n               $url = str_replace( '&amp;', '&#038;', $url );\n               $url = str_replace( \"'\", '&#039;', $url );\n           }\n           if ( ( false !== strpos( $url, '[' ) ) || ( false !== strpos( $url, ']' ) ) ) {\n               $parsed = self::wp_parse_url( $url );\n               $front  = '';\n               if ( isset( $parsed['scheme'] ) ) {\n                   $front .= $parsed['scheme'] . '://';\n               } elseif ( '/' === $url[0] ) {\n                   $front .= '//';\n               }\n               if ( isset( $parsed['user'] ) ) {\n                   $front .= $parsed['user'];\n               }\n               if ( isset( $parsed['pass'] ) ) {\n                   $front .= ':' . $parsed['pass'];\n               }\n               if ( isset( $parsed['user'] ) || isset( $parsed['pass'] ) ) {\n                   $front .= '@';\n               }\n               if ( isset( $parsed['host'] ) ) {\n                   $front .= $parsed['host'];\n               }\n               if ( isset( $parsed['port'] ) ) {\n                   $front .= ':' . $parsed['port'];\n               }\n               $end_dirty = str_replace( $front, '', $url );\n               $end_clean = str_replace( array( '[', ']' ), array( '%5B', '%5D' ), $end_dirty );\n               $url       = str_replace( $end_dirty, $end_clean, $url );\n           }\n           if ( '/' === $url[0] ) {\n               $good_protocol_url = $url;\n           } else {\n               if ( ! is_array( $protocols ) )\n                   $protocols = $protocols = array( 'http', 'https', 'ftp', 'ftps', 'mailto', 'news', 'irc', 'gopher', 'nntp', 'feed', 'telnet', 'mms', 'rtsp', 'svn', 'tel', 'fax', 'xmpp', 'webcal', 'urn' );\n               \n               $good_protocol_url = self::wp_kses_bad_protocol( $url, $protocols );\n               if ( strtolower( $good_protocol_url ) != strtolower( $url ) )\n                   return '';\n           }\n\n           /**\n            * Filters a string cleaned and escaped for output as a URL.\n            *\n            * @since 2.3.0\n            *\n            * @param string $good_protocol_url The cleaned URL to be returned.\n            * @param string $original_url      The URL prior to cleaning.\n            * @param string $_context          If 'display', replace ampersands and single quotes only.\n            */\n           return $url;           \n           //self::esc_url( $good_protocol_url, $original_url, $_context ); //apply_filters( 'erLhcoreClassBBCode::clean_url', $good_protocol_url, $original_url, $_context );\n   }\n   \n   /**\n    * A wrapper for PHP's parse_url() function that handles consistency in the return\n    * values across PHP versions.\n    *\n    * PHP 5.4.7 expanded parse_url()'s ability to handle non-absolute url's, including\n    * schemeless and relative url's with :// in the path. This function works around\n    * those limitations providing a standard output on PHP 5.2~5.4+.\n    *\n    * Secondly, across various PHP versions, schemeless URLs starting containing a \":\"\n    * in the query are being handled inconsistently. This function works around those\n    * differences as well.\n    *\n    * Error suppression is used as prior to PHP 5.3.3, an E_WARNING would be generated\n    * when URL parsing failed.\n    *\n    * @since 4.4.0\n    * @since 4.7.0 The $component parameter was added for parity with PHP's parse_url().\n    *\n    * @param string $url       The URL to parse.\n    * @param int    $component The specific component to retrieve. Use one of the PHP\n    *                          predefined constants to specify which one.\n    *                          Defaults to -1 (= return all parts as an array).\n    *                          @see http://php.net/manual/en/function.parse-url.php\n    * @return mixed False on parse failure; Array of URL components on success;\n    *               When a specific component has been requested: null if the component\n    *               doesn't exist in the given URL; a string or - in the case of\n    *               PHP_URL_PORT - integer when it does. See parse_url()'s return values.\n    */\n   public static function wp_parse_url( $url, $component = -1 ) {\n       $to_unset = array();\n       $url = strval( $url );\n       if ( '//' === substr( $url, 0, 2 ) ) {\n           $to_unset[] = 'scheme';\n           $url = 'placeholder:' . $url;\n       } elseif ( '/' === substr( $url, 0, 1 ) ) {\n           $to_unset[] = 'scheme';\n           $to_unset[] = 'host';\n           $url = 'placeholder://placeholder' . $url;\n       }\n       $parts = @parse_url( $url );\n       if ( false === $parts ) {\n           // Parsing failure.\n           return $parts;\n       }\n       // Remove the placeholder values.\n       foreach ( $to_unset as $key ) {\n           unset( $parts[ $key ] );\n       }\n       return self::_get_component_from_parsed_url_array( $parts, $component );\n   }\n   \n   /**\n    * Retrieve a specific component from a parsed URL array.\n    *\n    * @internal\n    *\n    * @since 4.7.0\n    *\n    * @param array|false $url_parts The parsed URL. Can be false if the URL failed to parse.\n    * @param int    $component The specific component to retrieve. Use one of the PHP\n    *                          predefined constants to specify which one.\n    *                          Defaults to -1 (= return all parts as an array).\n    *                          @see http://php.net/manual/en/function.parse-url.php\n    * @return mixed False on parse failure; Array of URL components on success;\n    *               When a specific component has been requested: null if the component\n    *               doesn't exist in the given URL; a string or - in the case of\n    *               PHP_URL_PORT - integer when it does. See parse_url()'s return values.\n    */\n   public static function _get_component_from_parsed_url_array( $url_parts, $component = -1 ) {\n       if ( -1 === $component ) {\n           return $url_parts;\n       }\n       $key = self::_wp_translate_php_url_constant_to_key( $component );\n       if ( false !== $key && is_array( $url_parts ) && isset( $url_parts[ $key ] ) ) {\n           return $url_parts[ $key ];\n       } else {\n           return null;\n       }\n   }\n   \n   /**\n    * Translate a PHP_URL_* constant to the named array keys PHP uses.\n    *\n    * @internal\n    *\n    * @since 4.7.0\n    *\n    * @see   http://php.net/manual/en/url.constants.php\n    *\n    * @param int $constant PHP_URL_* constant.\n    * @return string|bool The named key or false.\n    */\n   public static function _wp_translate_php_url_constant_to_key( $constant ) {\n       $translation = array(\n           PHP_URL_SCHEME   => 'scheme',\n           PHP_URL_HOST     => 'host',\n           PHP_URL_PORT     => 'port',\n           PHP_URL_USER     => 'user',\n           PHP_URL_PASS     => 'pass',\n           PHP_URL_PATH     => 'path',\n           PHP_URL_QUERY    => 'query',\n           PHP_URL_FRAGMENT => 'fragment',\n       );\n       if ( isset( $translation[ $constant ] ) ) {\n           return $translation[ $constant ];\n       } else {\n           return false;\n       }\n   }\n   \n   \n   /**\n    * Converts and fixes HTML entities.\n    *\n    * This function normalizes HTML entities. It will convert `AT&T` to the correct\n    * `AT&amp;T`, `&#00058;` to `&#58;`, `&#XYZZY;` to `&amp;#XYZZY;` and so on.\n    *\n    * @since 1.0.0\n    *\n    * @param string $string Content to normalize entities\n    * @return string Content with normalized entities\n    */\n   public static function wp_kses_normalize_entities($string) {\n       // Disarm all entities by converting & to &amp;\n       $string = str_replace('&', '&amp;', $string);\n       // Change back the allowed entities in our entity whitelist\n       $string = preg_replace_callback('/&amp;([A-Za-z]{2,8}[0-9]{0,2});/', 'erLhcoreClassBBCode::wp_kses_named_entities', $string);\n       $string = preg_replace_callback('/&amp;#(0*[0-9]{1,7});/', 'erLhcoreClassBBCode::wp_kses_normalize_entities2', $string);\n       $string = preg_replace_callback('/&amp;#[Xx](0*[0-9A-Fa-f]{1,6});/', 'erLhcoreClassBBCode::wp_kses_normalize_entities3', $string);\n       return $string;\n   }\n   \n   /**\n    * Callback for wp_kses_normalize_entities() for regular expression.\n    *\n    * This function helps wp_kses_normalize_entities() to only accept valid Unicode\n    * numeric entities in hex form.\n    *\n    * @since 2.7.0\n    * @access private\n    *\n    * @param array $matches preg_replace_callback() matches array\n    * @return string Correctly encoded entity\n    */\n   public static function wp_kses_normalize_entities3($matches) {\n       if ( empty($matches[1]) )\n           return '';\n       $hexchars = $matches[1];\n       return ( ! self::valid_unicode( hexdec( $hexchars ) ) ) ? \"&amp;#x$hexchars;\" : '&#x'.ltrim($hexchars,'0').';';\n   }\n   \n   /**\n    * Helper function to determine if a Unicode value is valid.\n    *\n    * @since 2.7.0\n    *\n    * @param int $i Unicode value\n    * @return bool True if the value was a valid Unicode number\n    */\n   public static function valid_unicode($i) {\n       return ( $i == 0x9 || $i == 0xa || $i == 0xd ||\n           ($i >= 0x20 && $i <= 0xd7ff) ||\n           ($i >= 0xe000 && $i <= 0xfffd) ||\n           ($i >= 0x10000 && $i <= 0x10ffff) );\n   }\n   \n   /**\n    * Callback for wp_kses_normalize_entities() regular expression.\n    *\n    * This function helps wp_kses_normalize_entities() to only accept 16-bit\n    * values and nothing more for `&#number;` entities.\n    *\n    * @access private\n    * @since 1.0.0\n    *\n    * @param array $matches preg_replace_callback() matches array\n    * @return string Correctly encoded entity\n    */\n   public static function wp_kses_normalize_entities2($matches) {\n       if ( empty($matches[1]) )\n           return '';\n       $i = $matches[1];\n       if (self::valid_unicode($i)) {\n           $i = str_pad(ltrim($i,'0'), 3, '0', STR_PAD_LEFT);\n           $i = \"&#$i;\";\n       } else {\n           $i = \"&amp;#$i;\";\n       }\n       return $i;\n   }\n   \n   /**\n    * Callback for wp_kses_normalize_entities() regular expression.\n    *\n    * This function only accepts valid named entity references, which are finite,\n    * case-sensitive, and highly scrutinized by HTML and XML validators.\n    *\n    * @since 3.0.0\n    *\n    * @global array $allowedentitynames\n    *\n    * @param array $matches preg_replace_callback() matches array\n    * @return string Correctly encoded entity\n    */\n   public static function wp_kses_named_entities($matches) {       \n       $allowedentitynames = array(\n           'nbsp',    'iexcl',  'cent',    'pound',  'curren', 'yen',\n           'brvbar',  'sect',   'uml',     'copy',   'ordf',   'laquo',\n           'not',     'shy',    'reg',     'macr',   'deg',    'plusmn',\n           'acute',   'micro',  'para',    'middot', 'cedil',  'ordm',\n           'raquo',   'iquest', 'Agrave',  'Aacute', 'Acirc',  'Atilde',\n           'Auml',    'Aring',  'AElig',   'Ccedil', 'Egrave', 'Eacute',\n           'Ecirc',   'Euml',   'Igrave',  'Iacute', 'Icirc',  'Iuml',\n           'ETH',     'Ntilde', 'Ograve',  'Oacute', 'Ocirc',  'Otilde',\n           'Ouml',    'times',  'Oslash',  'Ugrave', 'Uacute', 'Ucirc',\n           'Uuml',    'Yacute', 'THORN',   'szlig',  'agrave', 'aacute',\n           'acirc',   'atilde', 'auml',    'aring',  'aelig',  'ccedil',\n           'egrave',  'eacute', 'ecirc',   'euml',   'igrave', 'iacute',\n           'icirc',   'iuml',   'eth',     'ntilde', 'ograve', 'oacute',\n           'ocirc',   'otilde', 'ouml',    'divide', 'oslash', 'ugrave',\n           'uacute',  'ucirc',  'uuml',    'yacute', 'thorn',  'yuml',\n           'quot',    'amp',    'lt',      'gt',     'apos',   'OElig',\n           'oelig',   'Scaron', 'scaron',  'Yuml',   'circ',   'tilde',\n           'ensp',    'emsp',   'thinsp',  'zwnj',   'zwj',    'lrm',\n           'rlm',     'ndash',  'mdash',   'lsquo',  'rsquo',  'sbquo',\n           'ldquo',   'rdquo',  'bdquo',   'dagger', 'Dagger', 'permil',\n           'lsaquo',  'rsaquo', 'euro',    'fnof',   'Alpha',  'Beta',\n           'Gamma',   'Delta',  'Epsilon', 'Zeta',   'Eta',    'Theta',\n           'Iota',    'Kappa',  'Lambda',  'Mu',     'Nu',     'Xi',\n           'Omicron', 'Pi',     'Rho',     'Sigma',  'Tau',    'Upsilon',\n           'Phi',     'Chi',    'Psi',     'Omega',  'alpha',  'beta',\n           'gamma',   'delta',  'epsilon', 'zeta',   'eta',    'theta',\n           'iota',    'kappa',  'lambda',  'mu',     'nu',     'xi',\n           'omicron', 'pi',     'rho',     'sigmaf', 'sigma',  'tau',\n           'upsilon', 'phi',    'chi',     'psi',    'omega',  'thetasym',\n           'upsih',   'piv',    'bull',    'hellip', 'prime',  'Prime',\n           'oline',   'frasl',  'weierp',  'image',  'real',   'trade',\n           'alefsym', 'larr',   'uarr',    'rarr',   'darr',   'harr',\n           'crarr',   'lArr',   'uArr',    'rArr',   'dArr',   'hArr',\n           'forall',  'part',   'exist',   'empty',  'nabla',  'isin',\n           'notin',   'ni',     'prod',    'sum',    'minus',  'lowast',\n           'radic',   'prop',   'infin',   'ang',    'and',    'or',\n           'cap',     'cup',    'int',     'sim',    'cong',   'asymp',\n           'ne',      'equiv',  'le',      'ge',     'sub',    'sup',\n           'nsub',    'sube',   'supe',    'oplus',  'otimes', 'perp',\n           'sdot',    'lceil',  'rceil',   'lfloor', 'rfloor', 'lang',\n           'rang',    'loz',    'spades',  'clubs',  'hearts', 'diams',\n           'sup1',    'sup2',   'sup3',    'frac14', 'frac12', 'frac34',\n           'there4',\n       );\n       \n       if ( empty($matches[1]) )\n           return '';\n       $i = $matches[1];\n       return ( ! in_array( $i, $allowedentitynames ) ) ? \"&amp;$i;\" : \"&$i;\";\n   }\n   \n   /**\n    * Sanitize string from bad protocols.\n    *\n    * This function removes all non-allowed protocols from the beginning of\n    * $string. It ignores whitespace and the case of the letters, and it does\n    * understand HTML entities. It does its work in a while loop, so it won't be\n    * fooled by a string like \"javascript:javascript:alert(57)\".\n    *\n    * @since 1.0.0\n    *\n    * @param string $string            Content to filter bad protocols from\n    * @param array  $allowed_protocols Allowed protocols to keep\n    * @return string Filtered content\n    */\n   public static function wp_kses_bad_protocol($string, $allowed_protocols) {\n       $string = self::wp_kses_no_null($string);\n       $iterations = 0;\n       do {\n           $original_string = $string;\n           $string = self::wp_kses_bad_protocol_once($string, $allowed_protocols);\n       } while ( $original_string != $string && ++$iterations < 6 );\n       if ( $original_string != $string )\n           return '';\n       return $string;\n   }\n   \n   /**\n    * Removes any invalid control characters in $string.\n    *\n    * Also removes any instance of the '\\0' string.\n    *\n    * @since 1.0.0\n    *\n    * @param string $string\n    * @param array $options Set 'slash_zero' => 'keep' when '\\0' is allowed. Default is 'remove'.\n    * @return string\n    */\n   public static function wp_kses_no_null( $string, $options = null ) {\n       if ( ! isset( $options['slash_zero'] ) ) {\n           $options = array( 'slash_zero' => 'remove' );\n       }\n       $string = preg_replace( '/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F]/', '', $string );\n       if ( 'remove' == $options['slash_zero'] ) {\n           $string = preg_replace( '/\\\\\\\\+0+/', '', $string );\n       }\n       return $string;\n   }\n   \n   /**\n    * Sanitizes content from bad protocols and other characters.\n    *\n    * This function searches for URL protocols at the beginning of $string, while\n    * handling whitespace and HTML entities.\n    *\n    * @since 1.0.0\n    *\n    * @param string $string            Content to check for bad protocols\n    * @param string $allowed_protocols Allowed protocols\n    * @return string Sanitized content\n    */\n   public static function wp_kses_bad_protocol_once($string, $allowed_protocols, $count = 1 ) {\n       $string2 = preg_split( '/:|&#0*58;|&#x0*3a;/i', $string, 2 );\n       if ( isset($string2[1]) && ! preg_match('%/\\?%', $string2[0]) ) {\n           $string = trim( $string2[1] );\n           $protocol = self::wp_kses_bad_protocol_once2( $string2[0], $allowed_protocols );\n           if ( 'feed:' == $protocol ) {\n               if ( $count > 2 )\n                   return '';\n               $string = self::wp_kses_bad_protocol_once( $string, $allowed_protocols, ++$count );\n               if ( empty( $string ) )\n                   return $string;\n           }\n           $string = $protocol . $string;\n       }\n       return $string;\n   }\n   \n   \n   /**\n    * Callback for wp_kses_bad_protocol_once() regular expression.\n    *\n    * This function processes URL protocols, checks to see if they're in the\n    * whitelist or not, and returns different data depending on the answer.\n    *\n    * @access private\n    * @since 1.0.0\n    *\n    * @param string $string            URI scheme to check against the whitelist\n    * @param string $allowed_protocols Allowed protocols\n    * @return string Sanitized content\n    */\n   public static function wp_kses_bad_protocol_once2( $string, $allowed_protocols ) {\n       $string2 = self::wp_kses_decode_entities($string);\n       $string2 = preg_replace('/\\s/', '', $string2);\n       $string2 = self::wp_kses_no_null($string2);\n       $string2 = strtolower($string2);\n       $allowed = false;\n       foreach ( (array) $allowed_protocols as $one_protocol )\n           if ( strtolower($one_protocol) == $string2 ) {\n               $allowed = true;\n               break;\n           }\n       if ($allowed)\n           return \"$string2:\";\n       else\n           return '';\n   }\n   \n   /**\n    * Convert all entities to their character counterparts.\n    *\n    * This function decodes numeric HTML entities (`&#65;` and `&#x41;`).\n    * It doesn't do anything with other entities like &auml;, but we don't\n    * need them in the URL protocol whitelisting system anyway.\n    *\n    * @since 1.0.0\n    *\n    * @param string $string Content to change entities\n    * @return string Content after decoded entities\n    */\n   public static function wp_kses_decode_entities($string) {\n       $string = preg_replace_callback('/&#([0-9]+);/', 'erLhcoreClassBBCode::_wp_kses_decode_entities_chr', $string);\n       $string = preg_replace_callback('/&#[Xx]([0-9A-Fa-f]+);/', 'erLhcoreClassBBCode::_wp_kses_decode_entities_chr_hexdec', $string);\n       return $string;\n   }\n   \n   /**\n    * Regex callback for wp_kses_decode_entities()\n    *\n    * @since 2.9.0\n    *\n    * @param array $match preg match\n    * @return string\n    */\n   public static function _wp_kses_decode_entities_chr( $match ) {\n       return chr( $match[1] );\n   }\n   /**\n    * Regex callback for wp_kses_decode_entities()\n    *\n    * @since 2.9.0\n    *\n    * @param array $match preg match\n    * @return string\n    */\n   public static function _wp_kses_decode_entities_chr_hexdec( $match ) {\n       return chr( hexdec( $match[1] ) );\n   }\n   \n\n   /**\n    * Perform a deep string replace operation to ensure the values in $search are no longer present\n    *\n    * Repeats the replacement operation until it no longer replaces anything so as to remove \"nested\" values\n    * e.g. $subject = '%0%0%0DDD', $search ='%0D', $result ='' rather than the '%0%0DD' that\n    * str_replace would return\n    *\n    * @since 2.8.1\n    * @access private\n    *\n    * @param string|array $search  The value being searched for, otherwise known as the needle.\n    *                              An array may be used to designate multiple needles.\n    * @param string       $subject The string being searched and replaced on, otherwise known as the haystack.\n    * @return string The string with the replaced svalues.\n    */\n   public static function _deep_replace( $search, $subject ) {\n       $subject = (string) $subject;\n       $count = 1;\n       while ( $count ) {\n           $subject = str_replace( $search, '', $subject, $count );\n       }\n       return $subject;\n   }\n\n   public static $replaceEmoji = array(\n       ':\\)' => \"\\u{1F642}\",\n       ':D:' => \"\\u{1F600}\",\n       ':D' => \"\\u{1F600}\",\n       ':\\(' => \"\\u{1F641}\",\n       ':o:' => \"\\u{1F62E}\",\n       ':o' => \"\\u{1F62E}\",\n       ':p:' => \"\\u{1F61B}\",\n       ':p' => \"\\u{1F61B}\",\n       ';\\)' => \"\\u{1F609}\",\n       ';\\(' => \"\\u{1F622}\",\n       ':x' => \"\\u{1F910}\",\n       ':\\*' => \"\\u{1F617}\",\n       ';\\*' => \"\\u{1F618}\",\n       ':\\/' => \"\\u{1F615}\"\n   );\n\n   public static function parseEmoji($text) {\n\n       // Smileys to find...\n       for ($i = 0; $i < 2; $i++) {\n           $text = preg_replace_callback('/(^|\\s)(' .implode(\"|\",array_keys(self::$replaceEmoji)) . ')(\\s|$)/', function($match) {\n               $char = str_replace(array('/','(',')','*'),array('\\/','\\(','\\)','\\*'),$match[2]);\n               return $match[1] . erLhcoreClassBBCode::$replaceEmoji[$char] . $match[3];\n           },  $text);\n       }\n\n       return $text;\n   }\n\n   public static function BBCode2Html($text) {\n    \t$text = trim($text);\n\n       $text = self::parseEmoji($text);\n\n       // Smileys to find...\n       $in = array(\n       );\n\n       // And replace them by...\n       $out = array(\n       );\n    \t\n    \t$in[] = '[/*]';\n    \t$in[] = '[*]';\n    \t$out[] = '</li>';\n    \t$out[] = '<li>';\n    \t    \t\n    \t$text = str_replace($in, $out, $text);\n\n    \t// BBCode to find...\n    \t$in = array( \t '/\\[b\\](.*?)\\[\\/b\\]/ms',\n    \t\t\t\t\t '/\\[i\\](.*?)\\[\\/i\\]/ms',\n    \t\t\t\t\t '/\\[u\\](.*?)\\[\\/u\\]/ms',\n    \t\t\t\t\t '/\\[mark\\](.*?)\\[\\/mark\\]/ms',\n    \t\t\t\t\t '/\\[s\\](.*?)\\[\\/s\\]/ms',\n    \t\t\t\t\t '/\\[list\\=([0-9]+)\\](.*?)\\[\\/list\\]/ms',\n    \t\t\t\t\t '/\\[list\\](.*?)\\[\\/list\\]/ms',\n    \t\t\t\t\t '/\\[\\*\\]\\s?(.*?)\\n/ms',\n    \t\t\t\t\t '/\\[fs([0-9]+)\\](.*?)\\[\\/fs\\]/ms',\n    \t\t\t\t\t '/\\[color\\=([A-Za-z0-9]{2,6})\\](.*?)\\[\\/color\\]/ms',\n    \t\t\t\t\t '/\\[level\\=([A-Za-z0-9\\-\\s]{2,60})\\](.*?)\\[\\/level\\]/ms'\n    \t);\n\n    \t// And replace them by...\n    \t$out = array(\t '<strong>\\1</strong>',\n    \t\t\t\t\t '<em>\\1</em>',\n    \t\t\t\t\t '<u>\\1</u>',\n    \t\t\t\t\t '<mark>\\1</mark>',\n    \t\t\t\t\t '<strike>\\1</strike>',\n    \t\t\t\t\t '<ol class=\"default-list\" start=\"\\1\">\\2</ol>',\n    \t\t\t\t\t '<ul class=\"default-list\" >\\1</ul>',\n    \t\t\t\t\t '<li>\\1</li>',\n    \t\t\t\t\t '<span style=\"font-size:\\1pt\">\\2</span>',\n    \t\t\t\t\t '<span style=\"color:#\\1\">\\2</span>',\n    \t\t\t\t\t '<span class=\"\\1\">\\2</span>'\n    \t);\n\n    \t$text = preg_replace($in, $out, $text);\n\n    \t// Prepare quote's\n    \t$text = str_replace(\"\\r\\n\",\"\\n\",$text);\n\n    \t// paragraphs\n    \t$text = str_replace(\"\\r\", \"\", $text);\n    \t$text = nl2br($text);\n\n    \t// clean some tags to remain strict\n    \t// not very elegant, but it works. No time to do better ;)\n    \tif (!function_exists('removeBr')) {\n    \t\tfunction removeBr($s) {\n    \t\t\treturn str_replace(\"<br />\", \"\", $s[0]);\n    \t\t}\n    \t}\n\n    \t$text = preg_replace_callback('/<pre>(.*?)<\\/pre>/ms', \"removeBr\", $text);\n    \t$text = preg_replace('/<p><pre>(.*?)<\\/pre><\\/p>/ms', \"<pre>\\\\1</pre>\", $text);\n\n    \t$text = preg_replace_callback('/<ul>(.*?)<\\/ul>/ms', \"removeBr\", $text);\n    \t$text = preg_replace('/<p><ul>(.*?)<\\/ul><\\/p>/ms', \"<ul>\\\\1</ul>\", $text);\n\n    \treturn $text;\n    }\n\n    public static function _make_url_embed_image($matches) {\n\n        $in = htmlspecialchars_decode($matches[2]);\n        $in = trim($in);\n\n        $url = self::esc_url($in);\n        if ( empty($url) )\n            return '[img]' . $matches[2] . '[img]';\n\n        $prepend = '';\n        $append = '';\n        if (isset($matches[1]) && $matches[1] != '' && !empty(self::esc_url($matches[1]))) {\n            $prepend = '<a class=\"link\" rel=\"noreferrer\" target=\"_blank\" href=\"' . $matches[1] . '\">';\n            $append = '</a>';\n        }\n\n        return  \"<div class=\\\"img_embed\\\">{$prepend}<img title=\\\"\\\" onclick='lhinst.zoomImage()' class='action-image img-fluid' src=\\\"\".$url.\"\\\" alt=\\\"\\\" />{$append}</div>\";\n   }\n\n   public static function _make_embed_map($matches)\n   {\n       $parts = explode(',',trim($matches[1]));\n\n       if (count($parts) == 2 && is_numeric($parts[0]) && is_numeric($parts[1])) {\n           $id = rand(0,1000) . time();\n           return \"<div id='msg-location-\".$id.\"' style='height:300px'><script>lhinst.showMessageLocation(\" . $id . \",\" . (float)$parts[0] . \",\" . (float)$parts[1] . \")</script></div>\";\n       }\n\n       return ;\n   }\n\n   public static function _make_url_embed($matches){\n\n        $in = str_replace('\"','',htmlspecialchars_decode($matches[1]));\n        $in = trim($in);\n        \n        $url = self::esc_url($in);\n        if ( empty($url) )\n            return '[url='.$matches[1].']' . $matches[2] . '[/url]';\n\t\t\t\t\n        return '<a class=\"link\" target=\"_blank\" rel=\"noreferrer\" href=\"'.$url.'\">' . $matches[2] . '</a>';\n   }\n      \n   /**\n    * Callback to convert URL match to HTML A element.\n    *\n    * This function was backported from 2.5.0 to 2.3.2. Regex callback for make_clickable().\n    *\n    * @since 2.3.2\n    * @access private\n    *\n    * @param array $matches Single Regex Match.\n    * @return string HTML A element with URL address.\n    */\n   public static function _make_web_ftp_clickable_cb( $matches ) {\n       $ret = '';\n       $dest = $matches[2];\n       $dest = 'http://' . $dest;\n       // removed trailing [.,;:)] from URL\n       if ( in_array( substr($dest, -1), array('.', ',', ';', ':', ')') ) === true ) {\n           $ret = substr($dest, -1);\n           $dest = substr($dest, 0, strlen($dest)-1);\n       }\n       $dest = self::esc_url($dest);\n       if ( empty($dest) )\n           return $matches[0];\n       \n       return $matches[1] . \"<a href=\\\"$dest\\\" class=\\\"link\\\" rel=\\\"noreferrer\\\" target=\\\"_blank\\\">$dest</a>$ret\";\n   }\n   \n   /**\n     * Callback to convert email address match to HTML A element.\n     *\n     * This function was backported from 2.5.0 to 2.3.2. Regex callback for make_clickable().\n     *\n     * @since 2.3.2\n     * @access private\n     *\n     * @param array $matches Single Regex Match.\n     * @return string HTML A element with email address.\n     */\n   public static function _make_email_clickable_cb( $matches ) {\n    \t$email = $matches[2] . '@' . $matches[3];\n    \treturn $matches[1] . \"<a rel=\\\"noreferrer\\\" class=\\\"link\\\" href=\\\"mailto:$email\\\">$email</a>\";\n   }\n\n   \n   public static function _make_paypal_button($matches){\n\n         if (filter_var($matches[1],FILTER_VALIDATE_EMAIL)) {\n            return '<form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\">\n            <input type=\"hidden\" name=\"cmd\" value=\"_donations\">\n            <input type=\"hidden\" name=\"business\" value=\"'.$matches[1].'\">\n            <input type=\"hidden\" name=\"lc\" value=\"US\">\n            <input type=\"hidden\" name=\"no_note\" value=\"0\">\n            <input type=\"hidden\" name=\"currency_code\" value=\"USD\">\n            <input type=\"hidden\" name=\"bn\" value=\"PP-DonationsBF:btn_donate_SM.gif:NonHostedGuest\">\n            <input type=\"image\" title=\"Support an artist\" src=\"https://www.paypalobjects.com/WEBSCR-640-20110306-1/en_US/i/btn/btn_donate_SM.gif\" border=\"0\" name=\"submit\" alt=\"PayPal - The safer, easier way to pay online!\">\n            <img alt=\"\" border=\"0\" src=\"https://www.paypalobjects.com/WEBSCR-640-20110306-1/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\">\n            </form>';\n        } else {\n            return $matches[0];\n        }\n   }\n\n   public static function _make_button_action($matches) {\n        return \"<button type=\\\"button\\\" class=\\\"btn btn-xs text-white fs13 btn-secondary\\\" onclick=\\\"lhinst.buttonAction($(this),'\" . htmlspecialchars(strip_tags($matches[1])) . \"')\\\">\" . htmlspecialchars($matches[2]) . \"</button>\";\n   }\n\n   public static function _make_link_trigger($matches) {\n       return \"<a class=\\\"action-image link-trigger-button\\\" data-id=\\\"{msg_id}\\\" data-payload=\\\"\".htmlspecialchars(strip_tags($matches[1])).\"\\\" onclick='lhinst.updateTriggerClicked(\\\"\".htmlspecialchars(strip_tags($matches[1])).\"\\\",{msg_id},$(this))'>\" . htmlspecialchars($matches[2]) . \"</a>\";\n   }\n\n   public static function _make_youtube_block($matches) {\n\n         $data = parse_url($matches[1]);\n\n         if (isset($data['query'])){\n             parse_str($data['query'],$query);\n             if (stristr($data['host'],'youtube.com') && isset($query['v']) && ($query['v'] != '')) {\n                 return '<iframe class=\"w-100 h-100\" title=\"YouTube video player\" width=\"480\" height=\"300\" src=\"https://www.youtube.com/embed/'.urlencode($query['v']).'\" frameborder=\"0\" allowfullscreen></iframe>';\n             } else {\n                 return $matches[0];\n             }\n         } else {\n             return $matches[0];\n         }\n   }\n\n   public static function getHost() {\n        return erLhcoreClassSystem::getHost();\n   }\n\n   public static function _make_upload_link($matches){\n       $data = $matches[1];\n       return '<a class=\"action-image alert-link\" onclick=\"lhinst.chooseFile()\">' . htmlspecialchars($data) . '</a>';\n   }\n\n   public static function _make_base_link($matches) {\n       $data = htmlspecialchars($matches[1]);\n       $url = self::getHost() . erLhcoreClassDesign::baseurl($data);\n       return  $url;\n   }\n\n   public static function _make_url_file($matches)\n   {\n\n   \t\tif (isset($matches[1])){\n   \t\t    $mainData = explode(' ',$matches[1]);\n   \t\t    $parts = explode('_',$mainData[0]);\n   \t\t\t$fileID = $parts[0];\n   \t\t\t$hash = $parts[1];\n   \t\t\t$displayType = isset($parts[2]) ? $parts[2] : null;\n   \t\t\ttry {\n   \t\t\t\t$file = erLhcoreClassModelChatFile::fetch($fileID);\n\n   \t\t\t\tif (is_object($file)) {\n                    // Check that user has permission to see the chat. Let say if user purposely types file bbcode\n                    if ($hash == $file->security_hash) {\n                        $fileExtension = strtolower($file->extension);\n                        if (in_array($fileExtension,['jfif','jpg','jpeg','png','gif'])){\n\n                            // Make link if required\n                            $prepend = '';\n                            $append = '';\n                            if (isset($mainData[1])) {\n                                $subpartParts = explode('=',$mainData[1]);\n                                if ($subpartParts[0] == 'link') {\n                                    if (!isset($subpartParts[1])) {\n                                        $prepend = '<a class=\"link\" rel=\"noreferrer\" target=\"_blank\" href=\"'. self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}/(inline)/true\\\">\";\n                                        $append = '</a>';\n                                    } else {\n                                        $url = self::esc_url($subpartParts[1]);\n                                        if ($url != ''){\n                                            $prepend = '<a class=\"link\" rel=\"noreferrer\" target=\"_blank\" href=\"' . self::esc_url($subpartParts[1]) . '\">';\n                                            $append = '</a>';\n                                        }\n                                    }\n                                }\n                            } else {\n                                $prepend = '<div class=\"position-relative\">';\n                                $append = '<a class=\"hidden-download\" target=\"_blank\" rel=\"noreferrer\" href=\"'. self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\".'/(inline)/true\"></a></div>';\n                            }\n                            return $prepend . '<img onclick=\"lhinst.zoomImage()\" id=\"img-file-' . $file->id . '\" title=\"'.htmlspecialchars($file->upload_name).'\" class=\"action-image img-fluid\" src=\"' . self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\" . '\" alt=\"'.htmlspecialchars($file->upload_name).'\" />' . $append;\n                        }\n\n                        $audio = '';\n                        if (in_array($fileExtension,['mp3','wav','ogg','oga'])) {\n                            return '<a rel=\"noreferrer\" class=\"hidden-download audio-download\" href=\"'. self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\".'\"></a><audio preload=\"none\" style=\"width: 230px\" controls><source src=\"' . self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\" . '\" type=\"' . $file->type . '\"></audio>';\n                        } elseif (in_array($fileExtension,['mp4','avi','mov','ogg','3gpp'])) {\n                            $audio = '<br><div class=\"embed-responsive embed-responsive-16by9\"><video class=\"embed-responsive-item\" controls><source src=\"' . self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\" . '\"></video></div>';\n                        }\n\n                        return \"<a href=\\\"\" . self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\" class=\\\"link\\\" >\" . erTranslationClassLhTranslation::getInstance()->getTranslation('file/file', 'Download file') . ' - ' . htmlspecialchars($file->upload_name) . ' [' . $file->extension . ']' . \"</a>\" . $audio;\n                    }\n                }\n\n   \t\t\t} catch (Exception $e) {\n\n   \t\t\t}\n\n   \t\t\treturn '';\n   \t\t}\n   \t\treturn '';\n   }\n\n   public static function _make_url_survey($matches)\n   {\n       if (isset($matches[1])){\n                  \n           list($surveyId, $surveyItemId) = explode('_',str_replace(array('\"','&quot;'),'', $matches[1]));\n           \n           try {\n                             \n               if (is_numeric($surveyItemId) && is_numeric($surveyId)) {\n\n                   $surveyItem = erLhAbstractModelSurveyItem::fetch($surveyItemId);\n\n                   if ($surveyId == $surveyItem->survey_id) \n                   {\n                       $survey = erLhAbstractModelSurvey::fetch($surveyId);\n                       return \"<a href=\\\"\" . self::getHost()  . erLhcoreClassDesign::baseurl('survey/collected').\"/{$survey->id}?show={$surveyItem->id}\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\" class=\\\"link\\\" >\" . erTranslationClassLhTranslation::getInstance()->getTranslation('file/file','Collected survey data') . ' - ' . htmlspecialchars($survey->name) . \"</a>\";\n                   }\n               }\n               \n           } catch (Exception $e) {\n       \n           }\n       \n           return '';\n       }\n       return '';\n   }\n   \n   public static function _make_url_mail_file($matches){\n\n   \t\tif (isset($matches[1])){\n   \t\t\tlist($fileID,$hash) = explode('_',$matches[1]);\n   \t\t\ttry {\n   \t\t\t\t$file = erLhcoreClassModelChatFile::fetch($fileID);\n\n   \t\t\t\t// Check that user has permission to see the chat. Let say if user purposely types file bbcode\n   \t\t\t\tif ($hash == $file->security_hash) {\n   \t\t\t\t\treturn self::getHost() . erLhcoreClassDesign::baseurldirect('file/downloadfile').\"/{$file->id}/{$hash}\";\n   \t\t\t\t}\n   \t\t\t} catch (Exception $e) {\n\n   \t\t\t}\n\n   \t\t\treturn '';\n   \t\t}\n   \t\treturn '';\n   }\n\n   public static function _split_str_by_whitespace( $string, $goal ) {\n        $chunks = array();\n\n        $string_nullspace = strtr( $string, \"\\r\\n\\t\\v\\f \", \"\\000\\000\\000\\000\\000\\000\" );\n\n        while ( $goal < strlen( $string_nullspace ) ) {\n            $pos = strrpos( substr( $string_nullspace, 0, $goal + 1 ), \"\\000\" );\n\n            if ( false === $pos ) {\n                $pos = strpos( $string_nullspace, \"\\000\", $goal + 1 );\n                if ( false === $pos ) {\n                    break;\n                }\n            }\n\n            $chunks[] = substr( $string, 0, $pos + 1 );\n            $string = substr( $string, $pos + 1 );\n            $string_nullspace = substr( $string_nullspace, $pos + 1 );\n        }\n\n        if ( $string ) {\n            $chunks[] = $string;\n        }\n\n        return $chunks;\n    }\n\n   // https://github.com/WordPress/WordPress/blob/6e5e29c5bf49ad2be6a2c3a3d4fb3f5af6853b5b/wp-includes/formatting.php\n   public static function make_clickable_text( $text ) {\n       $r = '';\n       $textarr = preg_split( '/(<[^<>]+>)/', $text, -1, PREG_SPLIT_DELIM_CAPTURE ); // split out HTML tags\n       $nested_code_pre = 0; // Keep track of how many levels link is nested inside <pre> or <code>\n       foreach ( $textarr as $piece ) {\n           if ( preg_match( '|^<code[\\s>]|i', $piece ) || preg_match( '|^<pre[\\s>]|i', $piece ) || preg_match( '|^<script[\\s>]|i', $piece ) || preg_match( '|^<style[\\s>]|i', $piece ) )\n               $nested_code_pre++;\n           elseif ( $nested_code_pre && ( '</code>' === strtolower( $piece ) || '</pre>' === strtolower( $piece ) || '</script>' === strtolower( $piece ) || '</style>' === strtolower( $piece ) ) )\n           $nested_code_pre--;\n           if ( $nested_code_pre || empty( $piece ) || ( $piece[0] === '<' && ! preg_match( '|^<\\s*[\\w]{1,20}+://|', $piece ) ) ) {\n               $r .= $piece;\n               continue;\n           }\n           // Long strings might contain expensive edge cases ...\n           if ( 10000 < strlen( $piece ) ) {\n               // ... break it up\n               foreach ( self::_split_str_by_whitespace( $piece, 2100 ) as $chunk ) { // 2100: Extra room for scheme and leading and trailing paretheses\n                   if ( 2101 < strlen( $chunk ) ) {\n                       $r .= $chunk; // Too big, no whitespace: bail.\n                   } else {\n                       $r .= self::make_clickable_text( $chunk );\n                   }\n               }\n           } else {\n               $ret = \" $piece \"; // Pad with whitespace to simplify the regexes\n               $url_clickable = '~\n\t\t\t\t([\\\\s(<.,;:!?])                                        # 1: Leading whitespace, or punctuation\n\t\t\t\t(                                                      # 2: URL\n\t\t\t\t\t[\\\\w]{1,20}+://                                # Scheme and hier-part prefix\n\t\t\t\t\t(?=\\S{1,2000}\\s)                               # Limit to URLs less than about 2000 characters long\n\t\t\t\t\t[\\\\w\\\\x80-\\\\xff#%\\\\~/@\\\\[\\\\]*(+=&$-]*+         # Non-punctuation URL character\n\t\t\t\t\t(?:                                            # Unroll the Loop: Only allow puctuation URL character if followed by a non-punctuation URL character\n\t\t\t\t\t\t[\\'.,;:!?)]                            # Punctuation URL character\n\t\t\t\t\t\t[\\\\w\\\\x80-\\\\xff#%\\\\~/@\\\\[\\\\]*(+=&$-]++ # Non-punctuation URL character\n\t\t\t\t\t)*\n\t\t\t\t)\n\t\t\t\t(\\)?)                                                  # 3: Trailing closing parenthesis (for parethesis balancing post processing)\n\t\t\t~xS'; // The regex is a non-anchored pattern and does not have a single fixed starting character.\n               // Tell PCRE to spend more time optimizing since, when used on a page load, it will probably be used several times.\n               $ret = preg_replace_callback( $url_clickable, 'erLhcoreClassBBCode::_make_url_clickable_cb', $ret );\n               $ret = preg_replace_callback( '#([\\s>])((www|ftp)\\.[\\w\\\\x80-\\\\xff\\#$%&~/.\\-;:=,?@\\[\\]+]+)#is', 'erLhcoreClassBBCode::_make_web_ftp_clickable_cb', $ret );\n               $ret = preg_replace_callback( '#([\\s>])([.0-9a-z_+-]+)@(([0-9a-z-]+\\.)+[0-9a-z]{2,})#i', 'erLhcoreClassBBCode::_make_email_clickable_cb', $ret );\n               $ret = substr( $ret, 1, -1 ); // Remove our whitespace padding.\n               $r .= $ret;\n           }\n       }\n       \n       // Cleanup of accidental links within links\n       return preg_replace( '#(<a([ \\r\\n\\t]+[^>]+?>|>))<a [^>]+?>([^>]+?)</a></a>#i', \"$1$3</a>\", $r );\n   }\n\n   public static function makeQuote($matches)\n   {\n       if ($matches[1]) {\n           return '<blockquote class=\"blockquote\"> ' . $matches[1] . ' </blockquote>';\n       } else {\n           return $matches[0];\n       }\n   }\n\n   public static function extractMetaByMessage(& $msg) {\n       $meta = array();\n       if (strpos($msg,'[html_snippet]') !== false) {\n           $matches = array();\n           preg_match_all('/\\[html_snippet\\](.*?)\\[\\/html_snippet\\]/is',$msg,$matches);\n           foreach ($matches[0] as $index => $match) {\n               $msg = str_replace($match,'',$msg);\n               $meta['html_snippet'][] = $matches[1][$index];\n           }\n       }\n       return $meta;\n   }\n\n   public static function makeSubmessages($msg, $paramsMessage = array()) {\n\n       $replacer = 'IMG_REPLACE';\n\n       if (strpos($msg,'[quote]') !== false) {\n           $replacer = '';\n       }\n\n        // Links wraps images\n       $msg = preg_replace('#\\[url\\=\"?(.*?)\"?\\]\\[file=\"?(.*?)_img\"?\\]\\[\\/url\\]#is','[file=\\2_img link=\\1]',$msg);\n\n       // pure files\n       $msg = preg_replace('#\\[file=\"?(.*?)_img\"?(.*?)\\]#is',$replacer.'[file=\\1_img\\2]'.$replacer,$msg);\n\n       // Images within links\n       $msg = preg_replace('#\\[url\\=\"?(.*?)\"?\\]\\[img\\](.*?)\\[\\/img\\]\\[\\/url\\]#is','[img=\\1]\\2[/img]',$msg);\n\n       // Pure images\n       $msg = preg_replace('#\\[img(.*?)\\](.*?)\\[\\/img\\]#is',$replacer.'[img\\1]\\2[/img]'.$replacer,$msg);\n\n       $msg = trim($msg);\n\n       if (strpos($msg,'IMG_REPLACE') !== false) {\n           $messages = array_filter(explode('IMG_REPLACE', $msg), function($v) {\n               return $v != \"\";\n           });\n           $totalMessages = count($messages);\n       } else {\n           $totalMessages = 1;\n           $messages = [$msg];\n       }\n\n       $messagesData = array();\n       foreach ($messages as $indexMessage => $message) {\n           if (trim($message) != '')\n           {\n               $msgRendered = erLhcoreClassBBCode::make_clickable(htmlspecialchars($message), $paramsMessage);\n\n               $messagesDataItem['body'] = $msgRendered;\n               $messagesDataItem['flags'] = [];\n\n               $msgRenderedMedia = strip_tags($msgRendered);\n               $emojiMessage = trim(preg_replace('#([\\x{2B50}-\\x{2B55}]|[\\x{23F0}-\\x{23F3}]|[\\x{231A}-\\x{231B}]|[\\x{1F600}-\\x{1F64F}]|[\\x{1F910}-\\x{1F9FF}]|[\\x{1F300}-\\x{1F5FF}]|[\\x{1F680}-\\x{1F6FF}]|[\\x{2600}-\\x{26FF}]|[\\x{2700}-\\x{27BF}])#u','', $msgRendered));\n\n               if ($msgRenderedMedia == '') {\n                   $messagesDataItem['flags'][] = 'img';\n               }\n\n               if ($emojiMessage == '') {\n                   $messagesDataItem['flags'][] = 'emoji';\n               }\n\n                // New line at the top of message and it's not the first message\n               if (substr($message,0,1) == \"\\n\" && $indexMessage > 0) {\n                   $messagesDataItem['flags'][] = 'nlt';\n               }\n\n               // New line at the end of message and it's not the last message\n               if (substr($message,-1) == \"\\n\" && $indexMessage + 1 != $totalMessages) {\n                   $messagesDataItem['flags'][] = 'nl';\n               }\n\n               $messagesData[] = $messagesDataItem;\n           }\n       }\n\n       return $messagesData;\n   }\n\n   // Converts bbcode and general links to hmtl code\n   public static function make_clickable($ret, $paramsMessage = array()) {\n        $ret = ' ' . $ret;\n\n        $makeLinksClickable = true;\n        \n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_make_clickable',array('msg' => & $ret, 'makeLinksClickable' => & $makeLinksClickable));\n\n        // Make base URL\n        $ret = preg_replace_callback('#\\[baseurl\\](.*?)\\[/baseurl\\]#is', 'erLhcoreClassBBCode::_make_base_link', $ret);\n\n        $ret = preg_replace_callback('/\\[img=?(.*?)\\](.*?)\\[\\/img\\]/ms', \"erLhcoreClassBBCode::_make_url_embed_image\", $ret);\n\n        $ret = preg_replace_callback('/\\[loc\\](.*?)\\[\\/loc\\]/ms', \"erLhcoreClassBBCode::_make_embed_map\", $ret);\n\n        $ret = preg_replace_callback('/\\[url\\=\"?(.*?)\"?\\](.*?)\\[\\/url\\]/ms', \"erLhcoreClassBBCode::_make_url_embed\", $ret);\n\n        if (isset($paramsMessage['sender']) && $paramsMessage['sender'] == 0) {\n            $ret = preg_replace('/\\[html\\](.*?)\\[\\/html\\]/ms','',$ret);\n        } else if (isset($paramsMessage['html_as_text']) && $paramsMessage['html_as_text'] == true) {\n            $ret = preg_replace_callback('/\\[html\\](.*?)\\[\\/html\\]/ms', function ($matches) {\n                return '<code class=\"rounded mx170 text-white\">'.trim($matches[1]).'</code>';\n            }, $ret);\n        }\n\n        $ret = preg_replace_callback('/\\[html\\](.*?)\\[\\/html\\]/ms', function ($matches) use ($paramsMessage) {\n            $html = htmlspecialchars_decode($matches[1]);\n\n            $html = preg_replace_callback('/\"window\\.parent\\.(.*)\"/ms',function ($matches){\n                return \"'lhinst.executeRemoteCommands([\\\"lhc_eval:\" . $matches[1] . \"\\\"])'\";\n            },$html);\n\n            // Remove JS if it's not the first run\n            if (!isset($paramsMessage['render_js']) || $paramsMessage['render_js'] == false) {\n                $html = preg_replace(\"/<script.*?\\/script>/s\", \"\", $html);\n            }\n\n            return $html;\n\n        }, $ret);\n\n\n        if ($makeLinksClickable) {\n            $ret = self::make_clickable_text($ret);           \n        }\n\n    \t$ret = self::BBCode2Html($ret);\n\n    \t// Paypal button\n    \t$ret = preg_replace_callback('#\\[paypal\\](.*?)\\[/paypal\\]#is', 'erLhcoreClassBBCode::_make_paypal_button', $ret);\n\n    \t// Quote\n    \t$ret = preg_replace_callback('#\\[quote\\](.*?)\\[/quote\\]#is', 'erLhcoreClassBBCode::makeQuote', $ret);\n\n    \t// Youtube block\n    \t$ret = preg_replace_callback('#\\[youtube\\](.*?)\\[/youtube\\]#is', 'erLhcoreClassBBCode::_make_youtube_block', $ret);\n\n    \t// File upload link directly in chat message\n    \t$ret = preg_replace_callback('#\\[fupload\\](.*?)\\[/fupload\\]#is', 'erLhcoreClassBBCode::_make_upload_link', $ret);\n\n    \t$ret = preg_replace_callback('#\\[button_action=\"?(.*?)\"?\\](.*?)\\[/button_action\\]#is', 'erLhcoreClassBBCode::_make_button_action', $ret);\n\n    \t$ret = preg_replace_callback('#\\[link_trigger=\"?([0-9]+)\"?\\](.*?)\\[/link_trigger\\]#is', 'erLhcoreClassBBCode::_make_link_trigger', $ret);\n\n    \tif (strpos($ret,'[translation]') !== false) {\n            // For the admin we show original and translated text\n            if (isset($paramsMessage['html_as_text']) && $paramsMessage['html_as_text'] == true) {\n                $ret = preg_replace('#\\[translation\\](.*?)\\[/translation\\]#is', '<span class=\"tr-msg\">$1</span>', $ret);\n            } else {\n                // This is visitor translated message. We show original message for the visitor\n                if (isset($paramsMessage['sender']) && $paramsMessage['sender'] > 0) {\n                    // This is admin message. We show translated content only\n                    $translations = array();\n                    preg_match('#\\[translation\\](.*?)\\[/translation\\]#is',$ret, $translations);\n                    if (isset($translations[1])) {\n                        $ret = $translations[1];\n                    }\n\n                } else {\n                    $ret = preg_replace('#\\[translation\\](.*?)\\[/translation\\]#is', '', $ret);\n                }\n            }\n        }\n\n    \t// File block\n    \t$ret = preg_replace_callback('#\\[file=\"?(.*?)\"?\\]#is', 'erLhcoreClassBBCode::_make_url_file', $ret);\n    \t\n    \t// Survey\n    \t$ret = preg_replace_callback('#\\[survey=\"?(.*?)\"?\\]#is', 'erLhcoreClassBBCode::_make_url_survey', $ret);\n\n    \t$ret = trim($ret);\n\n        if (isset($paramsMessage['msg_id']) && $paramsMessage['msg_id'] > 0) {\n            $ret = str_replace('{msg_id}',$paramsMessage['msg_id'], $ret);\n        }\n\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.after_make_clickable',array('msg' => & $ret));\n        \n    \treturn $ret;\n   }\n   \n   public static function parseForMail($ret){\n   \t\t// File block\n   \t\t$ret = preg_replace_callback('#\\[file=\"?(.*?)\"?\\]#is', 'erLhcoreClassBBCode::_make_url_mail_file', $ret);\n   \t\treturn trim($ret);\n   }\n   \n   // Makes plain text from BB code\n   public static function make_plain($ret){\n        $ret = ' ' . $ret;\n\n       // BBCode to find...\n       $in = array( \t '/\\[b\\](.*?)\\[\\/b\\]/ms',\n           '/\\[i\\](.*?)\\[\\/i\\]/ms',\n           '/\\[u\\](.*?)\\[\\/u\\]/ms',\n           '/\\[list\\=(.*?)\\](.*?)\\[\\/list\\]/ms',\n           '/\\[list\\](.*?)\\[\\/list\\]/ms',\n           '/\\[\\*\\]\\s?(.*?)\\n/ms',\n           '/\\[img\\](.*?)\\[\\/img\\]/ms',\n           '/\\[url\\=\"?(.*?)\"?\\](.*?)\\[\\/url\\]/ms',\n           '/\\[quote\\]/ms',\n           '/\\[\\/quote\\]/ms',\n           '/\\[fs([0-9]+)\\](.*?)\\[\\/fs\\]/ms',\n           '/\\[level\\=([A-Za-z0-9\\-\\s]{2,60})\\](.*?)\\[\\/level\\]/ms',\n           '/\\[button_action\\=([A-Za-z0-9_\\-\\s]{2,60})\\](.*?)\\[\\/button_action\\]/ms',\n           '/\\n/ms',\n       );\n\n       // And replace them by...\n       $out = array(\t '\\1',\n           '\\1',\n           '\\1',\n           '\\2',\n           '\\1',\n           '\\1',\n           '',\n           '\\2 \\1',\n           '',\n           '',\n           '\\2',\n           '\\2',\n           '',\n           ' ',\n       );\n\n    \t$ret = preg_replace($in, $out, $ret);\n\n        $ret = trim($ret);\n        return $ret;\n   }\n\n}\n\n\n?>\n", "<?php\n\n/**\n * This code is mix of WP and phpBB :)\n * */\nclass erLhcoreClassBBCodePlain\n{\n    /**\n     * Callback to convert URI match to HTML A element.\n     *\n     * This function was backported from 2.5.0 to 2.3.2. Regex callback for make_clickable().\n     *\n     * @since 2.3.2\n     * @access private\n     *\n     * @param array $matches Single Regex Match.\n     * @return string HTML A element with URI address.\n     */\n    public static function _make_url_clickable_cb( $matches ) {\n        $url = $matches[2];\n        if ( ')' == $matches[3] && strpos( $url, '(' ) ) {\n            // If the trailing character is a closing parethesis, and the URL has an opening parenthesis in it, add the closing parenthesis to the URL.\n            // Then we can let the parenthesis balancer do its thing below.\n            $url .= $matches[3];\n            $suffix = '';\n        } else {\n            $suffix = $matches[3];\n        }\n        // Include parentheses in the URL only if paired\n        while ( substr_count( $url, '(' ) < substr_count( $url, ')' ) ) {\n            $suffix = strrchr( $url, ')' ) . $suffix;\n            $url = substr( $url, 0, strrpos( $url, ')' ) );\n        }\n        $url = self::esc_url($url);\n        if ( empty($url) )\n            return $matches[0];\n        return $matches[1] . $url . $suffix;\n    }\n\n    /**\n     * Checks and cleans a URL.\n     *\n     * A number of characters are removed from the URL. If the URL is for displaying\n     * (the default behaviour) ampersands are also replaced. The {@see 'clean_url'} filter\n     * is applied to the returned cleaned URL.\n     *\n     * @since 2.8.0\n     *\n     * @param string $url       The URL to be cleaned.\n     * @param array  $protocols Optional. An array of acceptable protocols.\n     *\t\t                    Defaults to return value of wp_allowed_protocols()\n     * @param string $_context  Private. Use esc_url_raw() for database usage.\n     * @return string The cleaned $url after the {@see 'clean_url'} filter is applied.\n     */\n    public static function esc_url( $url, $protocols = null, $_context = 'display' ) {\n        $original_url = $url;\n        if ( '' == $url )\n            return $url;\n        $url = str_replace( ' ', '%20', $url );\n        $url = preg_replace('|[^a-z0-9-~+_.?#=!&;,/:%@$\\|*\\'()\\[\\]\\\\x80-\\\\xff]|i', '', $url);\n        if ( '' === $url ) {\n            return $url;\n        }\n        if ( 0 !== stripos( $url, 'mailto:' ) ) {\n            $strip = array('%0d', '%0a', '%0D', '%0A');\n            $url = self::_deep_replace($strip, $url);\n        }\n        $url = str_replace(';//', '://', $url);\n        /* If the URL doesn't appear to contain a scheme, we\n         * presume it needs http:// prepended (unless a relative\n         * link starting with /, # or ? or a php file).\n        */\n        if ( strpos($url, ':') === false && ! in_array( $url[0], array( '/', '#', '?' ) ) &&\n            ! preg_match('/^[a-z0-9-]+?\\.php/i', $url) )\n            $url = 'http://' . $url;\n        // Replace ampersands and single quotes only when displaying.\n        if ( 'display' == $_context ) {\n            $url = self::wp_kses_normalize_entities( $url );\n            $url = str_replace( '&amp;', '&#038;', $url );\n            $url = str_replace( \"'\", '&#039;', $url );\n        }\n        if ( ( false !== strpos( $url, '[' ) ) || ( false !== strpos( $url, ']' ) ) ) {\n            $parsed = self::wp_parse_url( $url );\n            $front  = '';\n            if ( isset( $parsed['scheme'] ) ) {\n                $front .= $parsed['scheme'] . '://';\n            } elseif ( '/' === $url[0] ) {\n                $front .= '//';\n            }\n            if ( isset( $parsed['user'] ) ) {\n                $front .= $parsed['user'];\n            }\n            if ( isset( $parsed['pass'] ) ) {\n                $front .= ':' . $parsed['pass'];\n            }\n            if ( isset( $parsed['user'] ) || isset( $parsed['pass'] ) ) {\n                $front .= '@';\n            }\n            if ( isset( $parsed['host'] ) ) {\n                $front .= $parsed['host'];\n            }\n            if ( isset( $parsed['port'] ) ) {\n                $front .= ':' . $parsed['port'];\n            }\n            $end_dirty = str_replace( $front, '', $url );\n            $end_clean = str_replace( array( '[', ']' ), array( '%5B', '%5D' ), $end_dirty );\n            $url       = str_replace( $end_dirty, $end_clean, $url );\n        }\n        if ( '/' === $url[0] ) {\n            $good_protocol_url = $url;\n        } else {\n            if ( ! is_array( $protocols ) )\n                $protocols = $protocols = array( 'http', 'https', 'ftp', 'ftps', 'mailto', 'news', 'irc', 'gopher', 'nntp', 'feed', 'telnet', 'mms', 'rtsp', 'svn', 'tel', 'fax', 'xmpp', 'webcal', 'urn' );\n\n            $good_protocol_url = self::wp_kses_bad_protocol( $url, $protocols );\n            if ( strtolower( $good_protocol_url ) != strtolower( $url ) )\n                return '';\n        }\n\n        /**\n         * Filters a string cleaned and escaped for output as a URL.\n         *\n         * @since 2.3.0\n         *\n         * @param string $good_protocol_url The cleaned URL to be returned.\n         * @param string $original_url      The URL prior to cleaning.\n         * @param string $_context          If 'display', replace ampersands and single quotes only.\n         */\n        return $url;\n    }\n\n    /**\n     * A wrapper for PHP's parse_url() function that handles consistency in the return\n     * values across PHP versions.\n     *\n     * PHP 5.4.7 expanded parse_url()'s ability to handle non-absolute url's, including\n     * schemeless and relative url's with :// in the path. This function works around\n     * those limitations providing a standard output on PHP 5.2~5.4+.\n     *\n     * Secondly, across various PHP versions, schemeless URLs starting containing a \":\"\n     * in the query are being handled inconsistently. This function works around those\n     * differences as well.\n     *\n     * Error suppression is used as prior to PHP 5.3.3, an E_WARNING would be generated\n     * when URL parsing failed.\n     *\n     * @since 4.4.0\n     * @since 4.7.0 The $component parameter was added for parity with PHP's parse_url().\n     *\n     * @param string $url       The URL to parse.\n     * @param int    $component The specific component to retrieve. Use one of the PHP\n     *                          predefined constants to specify which one.\n     *                          Defaults to -1 (= return all parts as an array).\n     *                          @see http://php.net/manual/en/function.parse-url.php\n     * @return mixed False on parse failure; Array of URL components on success;\n     *               When a specific component has been requested: null if the component\n     *               doesn't exist in the given URL; a string or - in the case of\n     *               PHP_URL_PORT - integer when it does. See parse_url()'s return values.\n     */\n    public static function wp_parse_url( $url, $component = -1 ) {\n        $to_unset = array();\n        $url = strval( $url );\n        if ( '//' === substr( $url, 0, 2 ) ) {\n            $to_unset[] = 'scheme';\n            $url = 'placeholder:' . $url;\n        } elseif ( '/' === substr( $url, 0, 1 ) ) {\n            $to_unset[] = 'scheme';\n            $to_unset[] = 'host';\n            $url = 'placeholder://placeholder' . $url;\n        }\n        $parts = @parse_url( $url );\n        if ( false === $parts ) {\n            // Parsing failure.\n            return $parts;\n        }\n        // Remove the placeholder values.\n        foreach ( $to_unset as $key ) {\n            unset( $parts[ $key ] );\n        }\n        return self::_get_component_from_parsed_url_array( $parts, $component );\n    }\n\n    /**\n     * Retrieve a specific component from a parsed URL array.\n     *\n     * @internal\n     *\n     * @since 4.7.0\n     *\n     * @param array|false $url_parts The parsed URL. Can be false if the URL failed to parse.\n     * @param int    $component The specific component to retrieve. Use one of the PHP\n     *                          predefined constants to specify which one.\n     *                          Defaults to -1 (= return all parts as an array).\n     *                          @see http://php.net/manual/en/function.parse-url.php\n     * @return mixed False on parse failure; Array of URL components on success;\n     *               When a specific component has been requested: null if the component\n     *               doesn't exist in the given URL; a string or - in the case of\n     *               PHP_URL_PORT - integer when it does. See parse_url()'s return values.\n     */\n    public static function _get_component_from_parsed_url_array( $url_parts, $component = -1 ) {\n        if ( -1 === $component ) {\n            return $url_parts;\n        }\n        $key = self::_wp_translate_php_url_constant_to_key( $component );\n        if ( false !== $key && is_array( $url_parts ) && isset( $url_parts[ $key ] ) ) {\n            return $url_parts[ $key ];\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Translate a PHP_URL_* constant to the named array keys PHP uses.\n     *\n     * @internal\n     *\n     * @since 4.7.0\n     *\n     * @see   http://php.net/manual/en/url.constants.php\n     *\n     * @param int $constant PHP_URL_* constant.\n     * @return string|bool The named key or false.\n     */\n    public static function _wp_translate_php_url_constant_to_key( $constant ) {\n        $translation = array(\n            PHP_URL_SCHEME   => 'scheme',\n            PHP_URL_HOST     => 'host',\n            PHP_URL_PORT     => 'port',\n            PHP_URL_USER     => 'user',\n            PHP_URL_PASS     => 'pass',\n            PHP_URL_PATH     => 'path',\n            PHP_URL_QUERY    => 'query',\n            PHP_URL_FRAGMENT => 'fragment',\n        );\n        if ( isset( $translation[ $constant ] ) ) {\n            return $translation[ $constant ];\n        } else {\n            return false;\n        }\n    }\n\n\n    /**\n     * Converts and fixes HTML entities.\n     *\n     * This function normalizes HTML entities. It will convert `AT&T` to the correct\n     * `AT&amp;T`, `&#00058;` to `&#58;`, `&#XYZZY;` to `&amp;#XYZZY;` and so on.\n     *\n     * @since 1.0.0\n     *\n     * @param string $string Content to normalize entities\n     * @return string Content with normalized entities\n     */\n    public static function wp_kses_normalize_entities($string) {\n        // Disarm all entities by converting & to &amp;\n        $string = str_replace('&', '&amp;', $string);\n        // Change back the allowed entities in our entity whitelist\n        $string = preg_replace_callback('/&amp;([A-Za-z]{2,8}[0-9]{0,2});/', 'erLhcoreClassBBCodePlain::wp_kses_named_entities', $string);\n        $string = preg_replace_callback('/&amp;#(0*[0-9]{1,7});/', 'erLhcoreClassBBCodePlain::wp_kses_normalize_entities2', $string);\n        $string = preg_replace_callback('/&amp;#[Xx](0*[0-9A-Fa-f]{1,6});/', 'erLhcoreClassBBCodePlain::wp_kses_normalize_entities3', $string);\n        return $string;\n    }\n\n    /**\n     * Callback for wp_kses_normalize_entities() for regular expression.\n     *\n     * This function helps wp_kses_normalize_entities() to only accept valid Unicode\n     * numeric entities in hex form.\n     *\n     * @since 2.7.0\n     * @access private\n     *\n     * @param array $matches preg_replace_callback() matches array\n     * @return string Correctly encoded entity\n     */\n    public static function wp_kses_normalize_entities3($matches) {\n        if ( empty($matches[1]) )\n            return '';\n        $hexchars = $matches[1];\n        return ( ! self::valid_unicode( hexdec( $hexchars ) ) ) ? \"&amp;#x$hexchars;\" : '&#x'.ltrim($hexchars,'0').';';\n    }\n\n    /**\n     * Helper function to determine if a Unicode value is valid.\n     *\n     * @since 2.7.0\n     *\n     * @param int $i Unicode value\n     * @return bool True if the value was a valid Unicode number\n     */\n    public static function valid_unicode($i) {\n        return ( $i == 0x9 || $i == 0xa || $i == 0xd ||\n            ($i >= 0x20 && $i <= 0xd7ff) ||\n            ($i >= 0xe000 && $i <= 0xfffd) ||\n            ($i >= 0x10000 && $i <= 0x10ffff) );\n    }\n\n    /**\n     * Callback for wp_kses_normalize_entities() regular expression.\n     *\n     * This function helps wp_kses_normalize_entities() to only accept 16-bit\n     * values and nothing more for `&#number;` entities.\n     *\n     * @access private\n     * @since 1.0.0\n     *\n     * @param array $matches preg_replace_callback() matches array\n     * @return string Correctly encoded entity\n     */\n    public static function wp_kses_normalize_entities2($matches) {\n        if ( empty($matches[1]) )\n            return '';\n        $i = $matches[1];\n        if (self::valid_unicode($i)) {\n            $i = str_pad(ltrim($i,'0'), 3, '0', STR_PAD_LEFT);\n            $i = \"&#$i;\";\n        } else {\n            $i = \"&amp;#$i;\";\n        }\n        return $i;\n    }\n\n    /**\n     * Callback for wp_kses_normalize_entities() regular expression.\n     *\n     * This function only accepts valid named entity references, which are finite,\n     * case-sensitive, and highly scrutinized by HTML and XML validators.\n     *\n     * @since 3.0.0\n     *\n     * @global array $allowedentitynames\n     *\n     * @param array $matches preg_replace_callback() matches array\n     * @return string Correctly encoded entity\n     */\n    public static function wp_kses_named_entities($matches) {\n        $allowedentitynames = array(\n            'nbsp',    'iexcl',  'cent',    'pound',  'curren', 'yen',\n            'brvbar',  'sect',   'uml',     'copy',   'ordf',   'laquo',\n            'not',     'shy',    'reg',     'macr',   'deg',    'plusmn',\n            'acute',   'micro',  'para',    'middot', 'cedil',  'ordm',\n            'raquo',   'iquest', 'Agrave',  'Aacute', 'Acirc',  'Atilde',\n            'Auml',    'Aring',  'AElig',   'Ccedil', 'Egrave', 'Eacute',\n            'Ecirc',   'Euml',   'Igrave',  'Iacute', 'Icirc',  'Iuml',\n            'ETH',     'Ntilde', 'Ograve',  'Oacute', 'Ocirc',  'Otilde',\n            'Ouml',    'times',  'Oslash',  'Ugrave', 'Uacute', 'Ucirc',\n            'Uuml',    'Yacute', 'THORN',   'szlig',  'agrave', 'aacute',\n            'acirc',   'atilde', 'auml',    'aring',  'aelig',  'ccedil',\n            'egrave',  'eacute', 'ecirc',   'euml',   'igrave', 'iacute',\n            'icirc',   'iuml',   'eth',     'ntilde', 'ograve', 'oacute',\n            'ocirc',   'otilde', 'ouml',    'divide', 'oslash', 'ugrave',\n            'uacute',  'ucirc',  'uuml',    'yacute', 'thorn',  'yuml',\n            'quot',    'amp',    'lt',      'gt',     'apos',   'OElig',\n            'oelig',   'Scaron', 'scaron',  'Yuml',   'circ',   'tilde',\n            'ensp',    'emsp',   'thinsp',  'zwnj',   'zwj',    'lrm',\n            'rlm',     'ndash',  'mdash',   'lsquo',  'rsquo',  'sbquo',\n            'ldquo',   'rdquo',  'bdquo',   'dagger', 'Dagger', 'permil',\n            'lsaquo',  'rsaquo', 'euro',    'fnof',   'Alpha',  'Beta',\n            'Gamma',   'Delta',  'Epsilon', 'Zeta',   'Eta',    'Theta',\n            'Iota',    'Kappa',  'Lambda',  'Mu',     'Nu',     'Xi',\n            'Omicron', 'Pi',     'Rho',     'Sigma',  'Tau',    'Upsilon',\n            'Phi',     'Chi',    'Psi',     'Omega',  'alpha',  'beta',\n            'gamma',   'delta',  'epsilon', 'zeta',   'eta',    'theta',\n            'iota',    'kappa',  'lambda',  'mu',     'nu',     'xi',\n            'omicron', 'pi',     'rho',     'sigmaf', 'sigma',  'tau',\n            'upsilon', 'phi',    'chi',     'psi',    'omega',  'thetasym',\n            'upsih',   'piv',    'bull',    'hellip', 'prime',  'Prime',\n            'oline',   'frasl',  'weierp',  'image',  'real',   'trade',\n            'alefsym', 'larr',   'uarr',    'rarr',   'darr',   'harr',\n            'crarr',   'lArr',   'uArr',    'rArr',   'dArr',   'hArr',\n            'forall',  'part',   'exist',   'empty',  'nabla',  'isin',\n            'notin',   'ni',     'prod',    'sum',    'minus',  'lowast',\n            'radic',   'prop',   'infin',   'ang',    'and',    'or',\n            'cap',     'cup',    'int',     'sim',    'cong',   'asymp',\n            'ne',      'equiv',  'le',      'ge',     'sub',    'sup',\n            'nsub',    'sube',   'supe',    'oplus',  'otimes', 'perp',\n            'sdot',    'lceil',  'rceil',   'lfloor', 'rfloor', 'lang',\n            'rang',    'loz',    'spades',  'clubs',  'hearts', 'diams',\n            'sup1',    'sup2',   'sup3',    'frac14', 'frac12', 'frac34',\n            'there4',\n        );\n\n        if ( empty($matches[1]) )\n            return '';\n        $i = $matches[1];\n        return ( ! in_array( $i, $allowedentitynames ) ) ? \"&amp;$i;\" : \"&$i;\";\n    }\n\n    /**\n     * Sanitize string from bad protocols.\n     *\n     * This function removes all non-allowed protocols from the beginning of\n     * $string. It ignores whitespace and the case of the letters, and it does\n     * understand HTML entities. It does its work in a while loop, so it won't be\n     * fooled by a string like \"javascript:javascript:alert(57)\".\n     *\n     * @since 1.0.0\n     *\n     * @param string $string            Content to filter bad protocols from\n     * @param array  $allowed_protocols Allowed protocols to keep\n     * @return string Filtered content\n     */\n    public static function wp_kses_bad_protocol($string, $allowed_protocols) {\n        $string = self::wp_kses_no_null($string);\n        $iterations = 0;\n        do {\n            $original_string = $string;\n            $string = self::wp_kses_bad_protocol_once($string, $allowed_protocols);\n        } while ( $original_string != $string && ++$iterations < 6 );\n        if ( $original_string != $string )\n            return '';\n        return $string;\n    }\n\n    /**\n     * Removes any invalid control characters in $string.\n     *\n     * Also removes any instance of the '\\0' string.\n     *\n     * @since 1.0.0\n     *\n     * @param string $string\n     * @param array $options Set 'slash_zero' => 'keep' when '\\0' is allowed. Default is 'remove'.\n     * @return string\n     */\n    public static function wp_kses_no_null( $string, $options = null ) {\n        if ( ! isset( $options['slash_zero'] ) ) {\n            $options = array( 'slash_zero' => 'remove' );\n        }\n        $string = preg_replace( '/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F]/', '', $string );\n        if ( 'remove' == $options['slash_zero'] ) {\n            $string = preg_replace( '/\\\\\\\\+0+/', '', $string );\n        }\n        return $string;\n    }\n\n    /**\n     * Sanitizes content from bad protocols and other characters.\n     *\n     * This function searches for URL protocols at the beginning of $string, while\n     * handling whitespace and HTML entities.\n     *\n     * @since 1.0.0\n     *\n     * @param string $string            Content to check for bad protocols\n     * @param string $allowed_protocols Allowed protocols\n     * @return string Sanitized content\n     */\n    public static function wp_kses_bad_protocol_once($string, $allowed_protocols, $count = 1 ) {\n        $string2 = preg_split( '/:|&#0*58;|&#x0*3a;/i', $string, 2 );\n        if ( isset($string2[1]) && ! preg_match('%/\\?%', $string2[0]) ) {\n            $string = trim( $string2[1] );\n            $protocol = self::wp_kses_bad_protocol_once2( $string2[0], $allowed_protocols );\n            if ( 'feed:' == $protocol ) {\n                if ( $count > 2 )\n                    return '';\n                $string = self::wp_kses_bad_protocol_once( $string, $allowed_protocols, ++$count );\n                if ( empty( $string ) )\n                    return $string;\n            }\n            $string = $protocol . $string;\n        }\n        return $string;\n    }\n\n\n    /**\n     * Callback for wp_kses_bad_protocol_once() regular expression.\n     *\n     * This function processes URL protocols, checks to see if they're in the\n     * whitelist or not, and returns different data depending on the answer.\n     *\n     * @access private\n     * @since 1.0.0\n     *\n     * @param string $string            URI scheme to check against the whitelist\n     * @param string $allowed_protocols Allowed protocols\n     * @return string Sanitized content\n     */\n    public static function wp_kses_bad_protocol_once2( $string, $allowed_protocols ) {\n        $string2 = self::wp_kses_decode_entities($string);\n        $string2 = preg_replace('/\\s/', '', $string2);\n        $string2 = self::wp_kses_no_null($string2);\n        $string2 = strtolower($string2);\n        $allowed = false;\n        foreach ( (array) $allowed_protocols as $one_protocol )\n            if ( strtolower($one_protocol) == $string2 ) {\n                $allowed = true;\n                break;\n            }\n        if ($allowed)\n            return \"$string2:\";\n        else\n            return '';\n    }\n\n    /**\n     * Convert all entities to their character counterparts.\n     *\n     * This function decodes numeric HTML entities (`&#65;` and `&#x41;`).\n     * It doesn't do anything with other entities like &auml;, but we don't\n     * need them in the URL protocol whitelisting system anyway.\n     *\n     * @since 1.0.0\n     *\n     * @param string $string Content to change entities\n     * @return string Content after decoded entities\n     */\n    public static function wp_kses_decode_entities($string) {\n        $string = preg_replace_callback('/&#([0-9]+);/', 'erLhcoreClassBBCodePlain::_wp_kses_decode_entities_chr', $string);\n        $string = preg_replace_callback('/&#[Xx]([0-9A-Fa-f]+);/', 'erLhcoreClassBBCodePlain::_wp_kses_decode_entities_chr_hexdec', $string);\n        return $string;\n    }\n\n    /**\n     * Regex callback for wp_kses_decode_entities()\n     *\n     * @since 2.9.0\n     *\n     * @param array $match preg match\n     * @return string\n     */\n    public static function _wp_kses_decode_entities_chr( $match ) {\n        return chr( $match[1] );\n    }\n    /**\n     * Regex callback for wp_kses_decode_entities()\n     *\n     * @since 2.9.0\n     *\n     * @param array $match preg match\n     * @return string\n     */\n    public static function _wp_kses_decode_entities_chr_hexdec( $match ) {\n        return chr( hexdec( $match[1] ) );\n    }\n\n\n    /**\n     * Perform a deep string replace operation to ensure the values in $search are no longer present\n     *\n     * Repeats the replacement operation until it no longer replaces anything so as to remove \"nested\" values\n     * e.g. $subject = '%0%0%0DDD', $search ='%0D', $result ='' rather than the '%0%0DD' that\n     * str_replace would return\n     *\n     * @since 2.8.1\n     * @access private\n     *\n     * @param string|array $search  The value being searched for, otherwise known as the needle.\n     *                              An array may be used to designate multiple needles.\n     * @param string       $subject The string being searched and replaced on, otherwise known as the haystack.\n     * @return string The string with the replaced svalues.\n     */\n    public static function _deep_replace( $search, $subject ) {\n        $subject = (string) $subject;\n        $count = 1;\n        while ( $count ) {\n            $subject = str_replace( $search, '', $subject, $count );\n        }\n        return $subject;\n    }\n\n    public static $replaceEmoji = array(\n        ':\\)' => \"\\u{1F642}\",\n        ':D:' => \"\\u{1F600}\",\n        ':D' => \"\\u{1F600}\",\n        ':\\(' => \"\\u{1F641}\",\n        ':o:' => \"\\u{1F62E}\",\n        ':o' => \"\\u{1F62E}\",\n        ':p:' => \"\\u{1F61B}\",\n        ':p' => \"\\u{1F61B}\",\n        ';\\)' => \"\\u{1F609}\",\n        ';\\(' => \"\\u{1F622}\",\n        ':x' => \"\\u{1F910}\",\n        ':\\*' => \"\\u{1F617}\",\n        ';\\*' => \"\\u{1F618}\",\n        ':\\/' => \"\\u{1F615}\"\n    );\n\n    public static function parseEmoji($text) {\n\n        // Smileys to find...\n        for ($i = 0; $i < 2; $i++) {\n            $text = preg_replace_callback('/(^|\\s)(' .implode(\"|\",array_keys(self::$replaceEmoji)) . ')(\\s|$)/', function($match) {\n                $char = str_replace(array('/','(',')','*'),array('\\/','\\(','\\)','\\*'),$match[2]);\n                return $match[1] . erLhcoreClassBBCodePlain::$replaceEmoji[$char] . $match[3];\n            },  $text);\n        }\n\n        return $text;\n    }\n\n    public static function BBCode2Html($text) {\n        $text = trim($text);\n\n        $text = self::parseEmoji($text);\n\n        // Smileys to find...\n        $in = array(\n        );\n\n        // And replace them by...\n        $out = array(\n        );\n\n        $in[] = '[/*]';\n        $in[] = '[*]';\n        $out[] = '</li>';\n        $out[] = '<li>';\n\n        $text = str_replace($in, $out, $text);\n\n        // BBCode to find...\n        $in = array( \t '/\\[b\\](.*?)\\[\\/b\\]/ms',\n            '/\\[i\\](.*?)\\[\\/i\\]/ms',\n            '/\\[u\\](.*?)\\[\\/u\\]/ms',\n            '/\\[mark\\](.*?)\\[\\/mark\\]/ms',\n            '/\\[s\\](.*?)\\[\\/s\\]/ms',\n            '/\\[list\\=([0-9]+)\\](.*?)\\[\\/list\\]/ms',\n            '/\\[list\\](.*?)\\[\\/list\\]/ms',\n            '/\\[\\*\\]\\s?(.*?)\\n/ms',\n            '/\\[fs([0-9]+)\\](.*?)\\[\\/fs\\]/ms',\n            '/\\[color\\=([A-Za-z0-9]{2,6})\\](.*?)\\[\\/color\\]/ms',\n            '/\\[level\\=([A-Za-z0-9\\-\\s]{2,60})\\](.*?)\\[\\/level\\]/ms',\n            '/\\[button_action\\=([A-Za-z0-9_\\-\\s]{2,60})\\](.*?)\\[\\/button_action\\]/ms',\n        );\n\n        // And replace them by...\n        $out = array(\t '\\1',\n            '\\1',\n            '\\1',\n            '\\1',\n            '\\1',\n            '\\2',\n            '\\1',\n            '\\1',\n            '\\2',\n            '\\2',\n            '\\2',\n            '',\n        );\n\n        $text = preg_replace($in, $out, $text);\n\n        // Prepare quote's\n        $text = str_replace(\"\\r\\n\",\"\\n\",$text);\n\n        // paragraphs\n        $text = str_replace(\"\\r\", \"\", $text);\n\n        return $text;\n    }\n\n    public static function _make_url_embed_image($matches) {\n\n        $in = htmlspecialchars_decode($matches[2]);\n        $in = trim($in);\n\n        $url = self::esc_url($in);\n        if ( empty($url) )\n            return $matches[2];\n\n        $prepend = '';\n\n        if (isset($matches[1]) && $matches[1] != '' && !empty(self::esc_url($matches[1]))) {\n            $prepend = $matches[1];\n        }\n\n        if (strpos($url,'http://') === false && strpos($url,'https://') === false) {\n            $url = self::getHost() . str_replace('//','/','/'. $url).' ';\n        }\n\n        return  $prepend . ' ' . $url;\n    }\n\n    public static function _make_embed_map($matches)\n    {\n        $parts = explode(',',trim($matches[1]));\n\n        if (count($parts) == 2 && is_numeric($parts[0]) && is_numeric($parts[1])) {\n            $id = rand(0,1000) . time();\n            return \"<div id='msg-location-\".$id.\"' style='height:300px'><script>lhinst.showMessageLocation(\" . $id . \",\" . (float)$parts[0] . \",\" . (float)$parts[1] . \")</script></div>\";\n        }\n\n        return ;\n    }\n\n    public static function _make_url_embed($matches){\n\n        $in = str_replace('\"','',htmlspecialchars_decode($matches[1]));\n        $in = trim($in);\n\n        $url = self::esc_url($in);\n        if ( empty($url) )\n            return $matches[1] . ' ' . $matches[2];\n\n        return $url .' '. $matches[2];\n    }\n\n    /**\n     * Callback to convert URL match to HTML A element.\n     *\n     * This function was backported from 2.5.0 to 2.3.2. Regex callback for make_clickable().\n     *\n     * @since 2.3.2\n     * @access private\n     *\n     * @param array $matches Single Regex Match.\n     * @return string HTML A element with URL address.\n     */\n    public static function _make_web_ftp_clickable_cb( $matches ) {\n        $ret = '';\n        $dest = $matches[2];\n        $dest = 'http://' . $dest;\n        // removed trailing [.,;:)] from URL\n        if ( in_array( substr($dest, -1), array('.', ',', ';', ':', ')') ) === true ) {\n            $ret = substr($dest, -1);\n            $dest = substr($dest, 0, strlen($dest)-1);\n        }\n        $dest = self::esc_url($dest);\n        if ( empty($dest) )\n            return $matches[0];\n\n        return $matches[1] . $dest . ' ' . $ret;\n    }\n\n    /**\n     * Callback to convert email address match to HTML A element.\n     *\n     * This function was backported from 2.5.0 to 2.3.2. Regex callback for make_clickable().\n     *\n     * @since 2.3.2\n     * @access private\n     *\n     * @param array $matches Single Regex Match.\n     * @return string HTML A element with email address.\n     */\n    public static function _make_email_clickable_cb( $matches ) {\n        $email = $matches[2] . '@' . $matches[3];\n        return $matches[1] . ' ' . $email;\n    }\n\n\n    public static function _make_paypal_button($matches){\n\n        if (filter_var($matches[1],FILTER_VALIDATE_EMAIL)) {\n            return '<form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\">\n            <input type=\"hidden\" name=\"cmd\" value=\"_donations\">\n            <input type=\"hidden\" name=\"business\" value=\"'.$matches[1].'\">\n            <input type=\"hidden\" name=\"lc\" value=\"US\">\n            <input type=\"hidden\" name=\"no_note\" value=\"0\">\n            <input type=\"hidden\" name=\"currency_code\" value=\"USD\">\n            <input type=\"hidden\" name=\"bn\" value=\"PP-DonationsBF:btn_donate_SM.gif:NonHostedGuest\">\n            <input type=\"image\" title=\"Support an artist\" src=\"https://www.paypalobjects.com/WEBSCR-640-20110306-1/en_US/i/btn/btn_donate_SM.gif\" border=\"0\" name=\"submit\" alt=\"PayPal - The safer, easier way to pay online!\">\n            <img alt=\"\" border=\"0\" src=\"https://www.paypalobjects.com/WEBSCR-640-20110306-1/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\">\n            </form>';\n        } else {\n            return $matches[0];\n        }\n    }\n\n    public static function _make_youtube_block($matches) {\n\n        $data = parse_url($matches[1]);\n\n        if (isset($data['query'])){\n            parse_str($data['query'],$query);\n            if (stristr($data['host'],'youtube.com') && isset($query['v']) && ($query['v'] != '')) {\n                return '<iframe class=\"youtube-frame\" title=\"YouTube video player\" width=\"480\" height=\"300\" src=\"https://www.youtube.com/embed/'.urlencode($query['v']).'\" frameborder=\"0\" allowfullscreen></iframe>';\n            } else {\n                return $matches[0];\n            }\n        } else {\n            return $matches[0];\n        }\n    }\n\n    public static function _make_url_file($matches)\n    {\n\n        if (isset($matches[1])){\n            $mainData = explode(' ',$matches[1]);\n            $parts = explode('_',$mainData[0]);\n            $fileID = $parts[0];\n            $hash = $parts[1];\n            $displayType = isset($parts[2]) ? $parts[2] : null;\n            try {\n                $file = erLhcoreClassModelChatFile::fetch($fileID);\n\n                if (is_object($file)) {\n                    // Check that user has permission to see the chat. Let say if user purposely types file bbcode\n                    if ($hash == $file->security_hash) {\n                        $fileExtension = strtolower($file->extension);\n                        if (in_array($fileExtension,['jfif','jpg','jpeg','png','gif'])){\n\n                            // Make link if required\n                            $prepend = '';\n                            $append = '';\n                            if (isset($mainData[1])) {\n                                $subpartParts = explode('=',$mainData[1]);\n                                if ($subpartParts[0] == 'link') {\n                                    $url = self::esc_url($subpartParts[1]);\n                                    if ($url != ''){\n                                        $prepend = self::esc_url($subpartParts[1]);\n                                        $append = '';\n                                    }\n                                }\n                            } else {\n                                $prepend = '';\n                                $append = self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\";\n                            }\n\n                            return $prepend . $append;\n                        }\n\n                        if ($fileExtension == 'mp3' || $fileExtension == 'wav' || $fileExtension == 'ogg') {\n                            return self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash}\";\n                        }\n\n                        return self::getHost() . erLhcoreClassDesign::baseurl('file/downloadfile') . \"/{$file->id}/{$hash} {$file->upload_name}\" . ' [' . $file->extension . ']';\n                    }\n                }\n\n            } catch (Exception $e) {\n\n            }\n\n            return '';\n        }\n        return '';\n    }\n\n    public static function getHost() {\n        return erLhcoreClassSystem::getHost();\n    }\n\n    public static function _make_url_survey($matches)\n    {\n        if (isset($matches[1])){\n\n            list($surveyId, $surveyItemId) = explode('_',str_replace(array('\"','&quot;'),'', $matches[1]));\n\n            try {\n\n                if (is_numeric($surveyItemId) && is_numeric($surveyId)) {\n\n                    $surveyItem = erLhAbstractModelSurveyItem::fetch($surveyItemId);\n\n                    if ($surveyId == $surveyItem->survey_id)\n                    {\n                        $survey = erLhAbstractModelSurvey::fetch($surveyId);\n                        return self::getHost() . erLhcoreClassDesign::baseurl('survey/collected').\"/{$survey->id}?show={$surveyItem->id}\" . erTranslationClassLhTranslation::getInstance()->getTranslation('file/file','Collected survey data') . ' - ' . htmlspecialchars($survey->name);\n                    }\n                }\n\n            } catch (Exception $e) {\n\n            }\n\n            return '';\n        }\n        return '';\n    }\n\n    public static function _make_url_mail_file($matches){\n\n        if (isset($matches[1])){\n            list($fileID,$hash) = explode('_',$matches[1]);\n            try {\n                $file = erLhcoreClassModelChatFile::fetch($fileID);\n\n                // Check that user has permission to see the chat. Let say if user purposely types file bbcode\n                if ($hash == $file->security_hash) {\n                    return self::getHost() . erLhcoreClassDesign::baseurldirect('file/downloadfile').\"/{$file->id}/{$hash}\";\n                }\n            } catch (Exception $e) {\n\n            }\n\n            return '';\n        }\n        return '';\n    }\n\n    public static function _split_str_by_whitespace( $string, $goal ) {\n        $chunks = array();\n\n        $string_nullspace = strtr( $string, \"\\r\\n\\t\\v\\f \", \"\\000\\000\\000\\000\\000\\000\" );\n\n        while ( $goal < strlen( $string_nullspace ) ) {\n            $pos = strrpos( substr( $string_nullspace, 0, $goal + 1 ), \"\\000\" );\n\n            if ( false === $pos ) {\n                $pos = strpos( $string_nullspace, \"\\000\", $goal + 1 );\n                if ( false === $pos ) {\n                    break;\n                }\n            }\n\n            $chunks[] = substr( $string, 0, $pos + 1 );\n            $string = substr( $string, $pos + 1 );\n            $string_nullspace = substr( $string_nullspace, $pos + 1 );\n        }\n\n        if ( $string ) {\n            $chunks[] = $string;\n        }\n\n        return $chunks;\n    }\n\n    // https://github.com/WordPress/WordPress/blob/6e5e29c5bf49ad2be6a2c3a3d4fb3f5af6853b5b/wp-includes/formatting.php\n    public static function make_clickable_text( $text ) {\n        $r = '';\n        $textarr = preg_split( '/(<[^<>]+>)/', $text, -1, PREG_SPLIT_DELIM_CAPTURE ); // split out HTML tags\n        $nested_code_pre = 0; // Keep track of how many levels link is nested inside <pre> or <code>\n        foreach ( $textarr as $piece ) {\n            if ( preg_match( '|^<code[\\s>]|i', $piece ) || preg_match( '|^<pre[\\s>]|i', $piece ) || preg_match( '|^<script[\\s>]|i', $piece ) || preg_match( '|^<style[\\s>]|i', $piece ) )\n                $nested_code_pre++;\n            elseif ( $nested_code_pre && ( '</code>' === strtolower( $piece ) || '</pre>' === strtolower( $piece ) || '</script>' === strtolower( $piece ) || '</style>' === strtolower( $piece ) ) )\n                $nested_code_pre--;\n            if ( $nested_code_pre || empty( $piece ) || ( $piece[0] === '<' && ! preg_match( '|^<\\s*[\\w]{1,20}+://|', $piece ) ) ) {\n                $r .= $piece;\n                continue;\n            }\n            // Long strings might contain expensive edge cases ...\n            if ( 10000 < strlen( $piece ) ) {\n                // ... break it up\n                foreach ( self::_split_str_by_whitespace( $piece, 2100 ) as $chunk ) { // 2100: Extra room for scheme and leading and trailing paretheses\n                    if ( 2101 < strlen( $chunk ) ) {\n                        $r .= $chunk; // Too big, no whitespace: bail.\n                    } else {\n                        $r .= self::make_clickable_text( $chunk );\n                    }\n                }\n            } else {\n                $ret = \" $piece \"; // Pad with whitespace to simplify the regexes\n                $url_clickable = '~\n\t\t\t\t([\\\\s(<.,;:!?])                                        # 1: Leading whitespace, or punctuation\n\t\t\t\t(                                                      # 2: URL\n\t\t\t\t\t[\\\\w]{1,20}+://                                # Scheme and hier-part prefix\n\t\t\t\t\t(?=\\S{1,2000}\\s)                               # Limit to URLs less than about 2000 characters long\n\t\t\t\t\t[\\\\w\\\\x80-\\\\xff#%\\\\~/@\\\\[\\\\]*(+=&$-]*+         # Non-punctuation URL character\n\t\t\t\t\t(?:                                            # Unroll the Loop: Only allow puctuation URL character if followed by a non-punctuation URL character\n\t\t\t\t\t\t[\\'.,;:!?)]                            # Punctuation URL character\n\t\t\t\t\t\t[\\\\w\\\\x80-\\\\xff#%\\\\~/@\\\\[\\\\]*(+=&$-]++ # Non-punctuation URL character\n\t\t\t\t\t)*\n\t\t\t\t)\n\t\t\t\t(\\)?)                                                  # 3: Trailing closing parenthesis (for parethesis balancing post processing)\n\t\t\t~xS'; // The regex is a non-anchored pattern and does not have a single fixed starting character.\n                // Tell PCRE to spend more time optimizing since, when used on a page load, it will probably be used several times.\n                $ret = preg_replace_callback( $url_clickable, 'erLhcoreClassBBCodePlain::_make_url_clickable_cb', $ret );\n                $ret = preg_replace_callback( '#([\\s>])((www|ftp)\\.[\\w\\\\x80-\\\\xff\\#$%&~/.\\-;:=,?@\\[\\]+]+)#is', 'erLhcoreClassBBCodePlain::_make_web_ftp_clickable_cb', $ret );\n                $ret = preg_replace_callback( '#([\\s>])([.0-9a-z_+-]+)@(([0-9a-z-]+\\.)+[0-9a-z]{2,})#i', 'erLhcoreClassBBCodePlain::_make_email_clickable_cb', $ret );\n                $ret = substr( $ret, 1, -1 ); // Remove our whitespace padding.\n                $r .= $ret;\n            }\n        }\n\n        // Cleanup of accidental links within links\n        return preg_replace( '#(<a([ \\r\\n\\t]+[^>]+?>|>))<a [^>]+?>([^>]+?)</a></a>#i', \"$1$3</a>\", $r );\n    }\n\n    public static function makeQuote($matches)\n    {\n        if ($matches[1]) {\n            return '<blockquote class=\"blockquote\"> ' . $matches[1] . ' </blockquote>';\n        } else {\n            return $matches[0];\n        }\n    }\n\n    public static function extractMetaByMessage(& $msg) {\n        $meta = array();\n        if (strpos($msg,'[html_snippet]') !== false) {\n            $matches = array();\n            preg_match_all('/\\[html_snippet\\](.*?)\\[\\/html_snippet\\]/is',$msg,$matches);\n            foreach ($matches[0] as $index => $match) {\n                $msg = str_replace($match,'',$msg);\n                $meta['html_snippet'][] = $matches[1][$index];\n            }\n        }\n        return $meta;\n    }\n\n    public static function _make_base_link($matches) {\n        $data = htmlspecialchars($matches[1]);\n        $url = self::getHost() . erLhcoreClassDesign::baseurl($data);\n        return $url;\n    }\n\n    // Converts bbcode and general links to hmtl code\n    public static function make_clickable($ret, $paramsMessage = array()) {\n        $ret = ' ' . $ret;\n\n        $makeLinksClickable = true;\n\n        // Make base URL\n        $ret = preg_replace_callback('#\\[baseurl\\](.*?)\\[/baseurl\\]#is', 'erLhcoreClassBBCode::_make_base_link', $ret);\n\n        $ret = preg_replace_callback('/\\[img=?(.*?)\\](.*?)\\[\\/img\\]/ms', \"erLhcoreClassBBCodePlain::_make_url_embed_image\", $ret);\n\n        $ret = preg_replace_callback('/\\[loc\\](.*?)\\[\\/loc\\]/ms', \"erLhcoreClassBBCodePlain::_make_embed_map\", $ret);\n\n        $ret = preg_replace_callback('/\\[url\\=\"?(.*?)\"?\\](.*?)\\[\\/url\\]/ms', \"erLhcoreClassBBCodePlain::_make_url_embed\", $ret);\n\n        if (isset($paramsMessage['sender']) && $paramsMessage['sender'] == 0) {\n            $ret = preg_replace('/\\[html\\](.*?)\\[\\/html\\]/ms','',$ret);\n        }\n\n        $ret = preg_replace_callback('/\\[html\\](.*?)\\[\\/html\\]/ms', function ($matches) {\n            $html = htmlspecialchars_decode($matches[1]);\n\n            $html = preg_replace_callback('/\"window\\.parent\\.(.*)\"/ms',function ($matches){\n                return \"'lhinst.executeRemoteCommands([\\\"lhc_eval:\" . $matches[1] . \"\\\"])'\";\n            },$html);\n\n            return $html;\n\n        }, $ret);\n\n        if ($makeLinksClickable) {\n            $ret = self::make_clickable_text($ret);\n        }\n\n        $ret = self::BBCode2Html($ret);\n\n        // Paypal button\n        $ret = preg_replace_callback('#\\[paypal\\](.*?)\\[/paypal\\]#is', 'erLhcoreClassBBCodePlain::_make_paypal_button', $ret);\n\n        // Quote\n        $ret = preg_replace_callback('#\\[quote\\](.*?)\\[/quote\\]#is', 'erLhcoreClassBBCodePlain::makeQuote', $ret);\n\n        // Youtube block\n        $ret = preg_replace_callback('#\\[youtube\\](.*?)\\[/youtube\\]#is', 'erLhcoreClassBBCodePlain::_make_youtube_block', $ret);\n\n        $ret = preg_replace('#\\[translation\\](.*?)\\[/translation\\]#is', '<span class=\"tr-msg\">$1</span>', $ret);\n\n        // File block\n        $ret = preg_replace_callback('#\\[file=\"?(.*?)\"?\\]#is', 'erLhcoreClassBBCodePlain::_make_url_file', $ret);\n\n        // Survey\n        $ret = preg_replace_callback('#\\[survey=\"?(.*?)\"?\\]#is', 'erLhcoreClassBBCodePlain::_make_url_survey', $ret);\n\n        $ret = trim($ret);\n\n        return $ret;\n    }\n\n    public static function parseForMail($ret){\n        // File block\n        $ret = preg_replace_callback('#\\[file=\"?(.*?)\"?\\]#is', 'erLhcoreClassBBCodePlain::_make_url_mail_file', $ret);\n        return trim($ret);\n    }\n\n}\n\n\n?>", "<?php\n\n/**\n * Responsible for executing !<command> based queries\n * \n * */\nclass erLhcoreClassChatCommand\n{\n\n    private static $supportedCommands = array(\n        '!name' => 'self::setName',\n        '!email' => 'self::setEmail',\n        '!phone' => 'self::setPhone',\n        '!goto' => 'self::redirectTo',\n        '!translate' => 'self::startTranslation',\n        '!screenshot' => 'self::takeScreenshot',\n        '!contactform' => 'self::contactForm',\n        '!block' => 'self::blockUser',\n        '!close' => 'self::closeChat',\n        '!closed' => 'self::closeChatDialog',\n        '!delete' => 'self::deleteChat',\n        '!pending' => 'self::pendingChat',\n        '!active' => 'self::activeChat',\n        '!remark' => 'self::addRemark',\n        '!info' => 'self::info',\n        '!help' => 'self::help',\n    \t'!note' => 'self::notice',\n    \t'!hold' => 'self::hold',\n    \t'!gotobot' => 'self::goToBot',\n    \t'!transferforce' => 'self::transferforce',\n    \t'!files' => 'self::enableFiles',\n    \t'!stopfiles' => 'self::disableFiles',\n    \t'!modal' => 'self::showModal',\n    );\n\n    private static function extractCommand($message)\n    {\n        $params = explode(' ', $message);\n        \n        $commandData['command'] = array_shift($params);\n        $commandData['argument'] = trim(implode(' ', $params));\n        \n        return $commandData;\n    }\n\n    public static function showModal($params) {\n\n        if (!isset($params['argument']) || empty($params['argument'])) {\n            return array(\n                'processed' => true,\n                'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Please provide modal URL!')\n            );\n        }\n\n        $paramsURL = explode(' ',$params['argument']);\n        $URL = array_shift($paramsURL);\n\n        if (is_numeric($URL)) {\n            $URL = erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurldirect('form/formwidget') . '/' . $URL;\n        }\n\n        // Store as message to visitor\n        $msg = new erLhcoreClassModelmsg();\n        $msg->msg = !empty($paramsURL) ? implode(' ',$paramsURL) : erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand','We will show a form in a moment!');\n        $msg->meta_msg = '{\"content\":{\"execute_js\":{\"text\":\"\",\"ext_execute\":\"modal_ext\",\"ext_args\":\"{\\\"delay\\\":3,\\\"url\\\":\\\"' . $URL .'\\\"}\"}}}';\n        $msg->chat_id = $params['chat']->id;\n        $msg->user_id = $params['user']->id;\n        $msg->time = time();\n        $msg->name_support = $params['user']->name_support;\n        $msg->saveThis();\n\n        // Update last user msg time so auto responder work's correctly\n        $params['chat']->last_op_msg_time = $params['chat']->last_user_msg_time = time();\n        $params['chat']->last_msg_id = $msg->id;\n\n        // All ok, we can make changes\n        $params['chat']->updateThis(array('update' => array('last_msg_id', 'last_op_msg_time', 'status_sub', 'last_user_msg_time')));\n\n        return array(\n            'status' => erLhcoreClassChatEventDispatcher::STOP_WORKFLOW,\n            'processed' => true,\n            'raw_message' => '!modal',\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Modal activated!') . ' ' . $URL\n        );\n    }\n\n    /**\n     * Processes command\n     */\n    public static function processCommand($params)\n    {\n        $commandData = self::extractCommand($params['msg']);\n        \n        if (key_exists($commandData['command'], self::$supportedCommands)) {\n            $params['argument'] = $commandData['argument'];\n            return call_user_func_array(self::$supportedCommands[$commandData['command']], array(\n                $params\n            ));\n        } else { // Perhaps some extension has implemented this command?\n\n            $command = erLhcoreClassModelGenericBotCommand::findOne(array('customfilter' => array('(dep_id = 0 OR dep_id = ' . (int)$params['chat']->dep_id . ')'),'filter' => array('command' => ltrim($commandData['command'],'!'))));\n\n            if ($command instanceof erLhcoreClassModelGenericBotCommand) {\n\n                $trigger = $command->trigger;\n\n                $ignore = false;\n\n                if ($trigger instanceof erLhcoreClassModelGenericBotTrigger) {\n\n                    $ignore = strpos($commandData['argument'],'--silent') !== false;\n\n                    if ($ignore == true) {\n                        $commandData['argument'] = trim(str_replace('--silent','',$commandData['argument']));\n                    }\n\n                    $argumentsTrigger = array(\n                        'msg' => $commandData['argument'], \n                        'caller_user_id' => $params['user']->id,\n                        'caller_user_class' => get_class($params['user']));\n\n                    foreach (explode('--arg',$commandData['argument']) as $indexArgument => $argumentValue) {\n                        $argumentsTrigger['replace_array']['{arg_'.($indexArgument + 1).'}'] = trim($argumentValue); // For direct replacement\n                        $argumentsTrigger['arg_'.($indexArgument + 1)] = trim($argumentValue);                       // For {args.arg_3} to work\n                    }\n\n                    erLhcoreClassGenericBotWorkflow::processTrigger($params['chat'], $trigger, false, array('args' => $argumentsTrigger));\n\n                    $response = '\"' . $trigger->name . '\"' . ' ' . erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'was executed');\n\n                } else {\n                    $response = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Assigned trigger could not be found');\n                }\n\n                return array(\n                    'ignore' => $ignore,\n                    'processed' => true,\n                    'process_status' => '',\n                    'raw_message' => $commandData['command'] . ' || ' . $response\n                );\n\n\n            } else {\n                $commandResponse = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.customcommand', array('command' => $commandData['command'], 'argument' => $commandData['argument'], 'params' => $params));\n\n                if (isset($commandResponse['processed']) && $commandResponse['processed'] == true) {\n                    return $commandResponse;\n                }\n            }\n        }\n        \n        return array(\n            'processed' => true,\n            'ignore' => true,\n            'process_status' => '',\n            'info' => 'Unknown command! [' . $commandData['command'] .']',\n        );\n    }\n\n    /**\n     * Updates chat nick.\n     *\n     * @param array $params            \n     *\n     * @return boolean\n     */\n    public static function setName($params)\n    {\n        \n        // Update object attribute\n        $params['chat']->nick = $params['argument'];\n        \n        // Update only\n        $db = ezcDbInstance::get();\n        $stmt = $db->prepare('UPDATE lh_chat SET nick = :nick WHERE id = :id');\n        $stmt->bindValue(':id', $params['chat']->id, PDO::PARAM_INT);\n        $stmt->bindValue(':nick', $params['chat']->nick, PDO::PARAM_STR);\n        $stmt->execute();\n        \n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Nick changed!')\n        );\n    }\n    \n    /**\n     * Just adds message from operator\n     *\n     * @param array $params\n     *\n     * @return boolean\n     */\n    public static function notice($params)\n    {\n    \treturn array(\n    \t\t\t'processed' => true,\n    \t\t\t'process_status' => '',\n    \t\t\t'raw_message' => $params['argument']\n    \t);\n    }\n\n    public static function disableFiles($params)\n    {\n        $chatVariables = $params['chat']->chat_variables_array;\n\n        if (isset($chatVariables['lhc_fu'])) {\n            unset($chatVariables['lhc_fu']);\n            $params['chat']->chat_variables = json_encode($chatVariables);\n            $params['chat']->chat_variables_array = $chatVariables;\n        }\n\n        if (!isset($params['argument']) || $params['argument'] != 'no') {\n            $msg = new erLhcoreClassModelmsg();\n            $msg->msg = (isset($params['argument']) && $params['argument'] != '') ? $params['argument'] : erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Files upload was disabled!');\n            $msg->chat_id = $params['chat']->id;\n            $msg->user_id = $params['user']->id;\n            $msg->time = time();\n            $msg->name_support = $params['user']->name_support;\n\n            erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_msg_admin_saved', array('msg' => & $msg, 'chat' => & $params['chat']));\n\n            $msg->saveThis();\n        }\n\n        // Schedule UI Refresh\n        $params['chat']->operation .= \"lhc_ui_refresh:0\\n\";\n\n        // Store permanently\n        $params['chat']->updateThis(array('update' => array('chat_variables', 'operation')));\n\n        return array(\n            'processed' => true,\n            'process_status' => '',\n            'raw_message' => '!stopfiles'\n        );\n    }\n\n    public static function enableFiles($params)\n    {\n        $chatVariables = $params['chat']->chat_variables_array;\n        $chatVariables['lhc_fu'] = 1;\n\n        $params['chat']->chat_variables = json_encode($chatVariables);\n        $params['chat']->chat_variables_array = $chatVariables;\n\n        if (!isset($params['argument']) || $params['argument'] != 'no') {\n            $msg = new erLhcoreClassModelmsg();\n            $msg->msg = (isset($params['argument']) && $params['argument'] != '') ? $params['argument'] : erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand','I have enabled files upload for you. [fupload]Upload a file[/fupload].');\n            $msg->chat_id = $params['chat']->id;\n            $msg->user_id = $params['user']->id;\n            $msg->time = time();\n            $msg->name_support = $params['user']->name_support;\n\n            erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_msg_admin_saved',array('msg' => & $msg, 'chat' => & $params['chat']));\n\n            $msg->saveThis();\n        }\n\n        // Schedule UI Refresh\n        $params['chat']->operation .= \"lhc_ui_refresh:1\\n\";\n\n        // Store permanently\n        $params['chat']->updateThis(array('update' => array('chat_variables','operation')));\n\n        return array(\n            'processed' => true,\n            'process_status' => '',\n            'raw_message' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand','Files upload enabled.')\n        );\n    }\n\n    /**\n     * Just adds message from operator\n     *\n     * @param array $params\n     *\n     * @return boolean\n     */\n    public static function hold($params)\n    {\n        $params['chat']->status_sub = erLhcoreClassModelChat::STATUS_SUB_ON_HOLD;\n\n        if ($params['argument'] != '') {\n            $defaultHoldMessage = $params['argument'];\n        } else if ($params['chat']->auto_responder !== false && $params['chat']->auto_responder->auto_responder !== false && $params['chat']->auto_responder->auto_responder->wait_timeout_hold != '') {\n            $defaultHoldMessage = $params['chat']->auto_responder->auto_responder->wait_timeout_hold;\n        } else {\n            $defaultHoldMessage = '';\n        }\n\n        if ($defaultHoldMessage != '') {\n            // Store as message to visitor\n            $msg = new erLhcoreClassModelmsg();\n            $msg->msg = $defaultHoldMessage;\n            $msg->chat_id = $params['chat']->id;\n            $msg->user_id = $params['user']->id;\n            $msg->time = time();\n            $msg->name_support = $params['user']->name_support;\n\n            erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_msg_admin_saved',array('msg' => & $msg, 'chat' => & $params['chat']));\n\n            $msg->saveThis();\n        }\n\n        // Reset auto responder on hold command\n        if ($params['chat']->auto_responder !== false) {\n            $params['chat']->auto_responder->active_send_status = 0;\n            $params['chat']->auto_responder->saveThis();\n        }\n\n        // Update last user msg time so auto responder work's correctly\n        $params['chat']->last_op_msg_time = $params['chat']->last_user_msg_time = time();\n\n        // All ok, we can make changes\n        $params['chat']->updateThis(array('update' => array('last_op_msg_time','status_sub','last_user_msg_time')));\n\n\n        return array(\n            'custom_args' => array(\n              'hold_added' => true\n            ),\n            'processed' => true,\n            'raw_message' => '!hold',\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat status changed on-hold!')\n        );\n    }\n\n    /**\n     * @desc Transfers chat to bot\n     *\n     * @param $params\n     * @return array\n     * @throws ezcPersistentDefinitionNotFoundException\n     * @throws ezcPersistentObjectNotPersistentException\n     * @throws ezcPersistentQueryException\n     */\n    public static function goToBot($params) {\n\n        $params['chat']->status = erLhcoreClassModelChat::STATUS_BOT_CHAT;\n        $params['chat']->last_op_msg_time = $params['chat']->last_user_msg_time = time();\n        $params['chat']->updateThis(array('update' => array('status','last_op_msg_time','last_user_msg_time')));\n\n        return array(\n            'processed' => true,\n            'raw_message' => '!gotobot',\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat was transferred to bot!')\n        );\n    }\n\n    /**\n     * Updates chat email.\n     *\n     * @param array $params            \n     *\n     * @return boolean\n     */\n    public static function setEmail($params)\n    {\n        \n        // Update object attribute\n        $params['chat']->email = $params['argument'];\n        \n        if (! isset($params['no_ui_update'])) {\n            // Schedule interface update\n            $params['chat']->operation_admin .= \"lhinst.updateVoteStatus(\" . $params['chat']->id . \");\";\n        }\n        \n        // Update only\n        $db = ezcDbInstance::get();\n        $stmt = $db->prepare('UPDATE lh_chat SET email = :email, operation_admin = :operation_admin WHERE id = :id');\n        $stmt->bindValue(':id', $params['chat']->id, PDO::PARAM_INT);\n        $stmt->bindValue(':email', $params['chat']->email, PDO::PARAM_STR);\n        $stmt->bindValue(':operation_admin', $params['chat']->operation_admin, PDO::PARAM_STR);\n        $stmt->execute();\n        \n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'E-mail changed!')\n        );\n    }\n\n    /**\n     * Option to transfer user to another user via command line directly\n     * */\n    public static function transferforce($params)\n    {\n        $user = erLhcoreClassModelUser::findOne(array('filter' => array('username' => $params['argument'])));\n        \n        // Try find user by e-mail\n        if (!($user instanceof erLhcoreClassModelUser)) {\n            $user = erLhcoreClassModelUser::findOne(array('filter' => array('email' => $params['argument'])));\n        }\n        \n        if ($user instanceof erLhcoreClassModelUser) {\n            \n            $permissionsArray = erLhcoreClassRole::accessArrayByUserID($params['user']->id);\n            \n            if ($params['chat']->user_id == $params['user']->id || erLhcoreClassRole::canUseByModuleAndFunction($permissionsArray, 'lhchat', 'allowtransferdirectly')) {\n                                                \n                $params['chat']->user_id = $user->id;\n                $params['chat']->status_sub = erLhcoreClassModelChat::STATUS_SUB_OWNER_CHANGED;\n                $params['chat']->user_typing_txt = htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('chat/accepttrasnfer','Chat has been transfered to'),ENT_QUOTES) . ' - ' . (string)$user;\n                $params['chat']->user_typing  = time();\n                     \n                // Change department if user cannot read current department, so chat appears in right menu\n                $filter = erLhcoreClassUserDep::parseUserDepartmetnsForFilter($user->id, $user->cache_version);\n                if ($filter !== true && !in_array($params['chat']->dep_id, $filter)) {\n                    $dep_id = erLhcoreClassUserDep::getDefaultUserDepartment($user->id);                    \n                    if ($dep_id > 0) {\n                        $params['chat']->dep_id = $dep_id;                       \n                    }\n                }\n                \n                $params['chat']->status_sub_sub = erLhcoreClassModelChat::STATUS_SUB_SUB_TRANSFERED;\n    \n                // Update UI\n                if (! isset($params['no_ui_update'])) {\n                    $params['chat']->operation_admin .= \"lhinst.updateVoteStatus(\" . $params['chat']->id . \");\";\n                }\n    \n                // All ok, we can make changes\n                erLhcoreClassChat::getSession()->update($params['chat']);\n                \n                // Chat was transfered callback\n                erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.chat_transfered_force', array('chat' => & $params['chat']));\n                \n                return array(\n                    'processed' => true,\n                    'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/accepttrasnfer','Chat has been transfered to') . ' - ' . (string)$user\n                );\n            \n            } else {\n                return array(\n                    'processed' => true,\n                    'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'You do not have permission to transfer chat directly!')\n                );\n            }            \n        } else {\n            return array(\n                'processed' => true,\n                'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'User could not be found!')\n            );\n        }\n    }\n    \n    /**\n     * Updates chat phone\n     *\n     * @param array $params            \n     *\n     * @return boolean\n     */\n    public static function setPhone($params)\n    {\n        \n        // Update object attribute\n        $params['chat']->phone = $params['argument'];\n        \n        if (! isset($params['no_ui_update'])) {\n            // Schedule interface update\n            $params['chat']->operation_admin .= \"lhinst.updateVoteStatus(\" . $params['chat']->id . \");\";\n        }\n\n        $params['chat']->updateThis(array('update' => array('phone','operation_admin')));\n\n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Phone changed!')\n        );\n    }\n\n    /**\n     * Redirects user to specified URL\n     *\n     * @param array $params            \n     *\n     * @return boolean\n     */\n    public static function redirectTo($params)\n    {\n        \n        // Update object attribute\n        $params['chat']->operation .= 'lhc_chat_redirect:' . str_replace(':', '__SPLIT__', $params['argument']) . \"\\n\";\n        $params['chat']->updateThis(array('update' => array('operation')));\n\n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'User was redirected!')\n        );\n    }\n\n    public static function startTranslation($params)\n    {\n        // Schedule interface update\n        $params['chat']->operation_admin .= \"lhc.methodCall('lhc.translation','startTranslation',{'btn':$('#start-trans-btn-{$params['chat']->id}'),'chat_id':'{$params['chat']->id}'});\";\n        \n        $params['chat']->updateThis(array('update' => array('operation_admin')));\n        \n        return array(\n            'processed' => true,\n            'process_status' => ''\n        );\n    }\n\n    public static function takeScreenshot($params)\n    {\n        // Update object attribute\n        $params['chat']->operation .= \"lhc_screenshot\\n\";\n        \n        // Update only\n        $params['chat']->updateThis(array('update' => array('operation')));\n\n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Screenshot was scheduled!')\n        );\n    }\n\n    public static function contactForm($params)\n    {\n        if (isset($params['no_ui_update'])) {\n            erLhcoreClassChatHelper::redirectToContactForm($params);\n        } else {\n            \n            // Schedule interface update\n            $params['chat']->operation_admin .= \"lhinst.redirectContact('{$params['chat']->id}');\";\n            \n            $params['chat']->updateThis(array('update' => array('operation_admin')));\n        }\n        \n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'User was redirected to contact form!')\n        );\n    }\n\n    public static function blockUser($params)\n    {\n        erLhcoreClassModelChatBlockedUser::blockChat(array('user' => $params['user'], 'chat' => $params['chat']));\n\n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'User was blocked!')\n        );\n    }\n    \n    public static function info($params)\n    {\n        $infoArray = array();\n        $infoArray[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Department').' - '.(string)$params['chat']->department;\n        \n        if ($params['chat']->referrer != '') {\n            $infoArray[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Started chat from').' - '.(string)$params['chat']->referrer;\n        }\n        \n        if ($params['chat']->session_referrer != '') {\n            $infoArray[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Refered from').' - '.(string)$params['chat']->session_referrer;\n        }\n        \n        if ($params['chat']->online_user !== false && $params['chat']->online_user->current_page != '') {\n            $infoArray[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Current page').' - '.(string)$params['chat']->online_user->current_page;\n        }\n        \n        if ($params['chat']->email != '') {\n            $infoArray[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'E-mail').' - '.(string)$params['chat']->email;\n        }\n        \n        if ($params['chat']->phone != '') {\n            $infoArray[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Phone').' - '.(string)$params['chat']->phone;\n        }\n        \n        if ($params['chat']->country_name != '') {\n            $infoArray[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Country').' - '.(string)$params['chat']->country_name;\n        }\n        \n        return array(\n            'processed' => true,\n            'process_status' => '',\n            'ignore' => true,\n            'info' => implode(\"\\n\", array_filter($infoArray))\n        );\n    }\n    \n    public static function help()\n    {                    \n        return array(\n            'processed' => true,\n            'process_status' => '',\n            'ignore' => true,\n            'info' => implode(\"\\n\", array_keys(self::$supportedCommands))\n        );\n    }\n\n    public static function closeChat($params)\n    {\n        if (isset($params['no_ui_update'])) {\n            \n            $permissionsArray = erLhcoreClassRole::accessArrayByUserID($params['user']->id);\n            \n            if ($params['chat']->user_id == $params['user']->id || erLhcoreClassRole::canUseByModuleAndFunction($permissionsArray, 'lhchat', 'allowcloseremote')) {\n                erLhcoreClassChatHelper::closeChat($params);\n                return array(\n                    'processed' => true,\n                    'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat was closed!')\n                );\n            } else {\n                return array(\n                    'processed' => true,\n                    'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'You do not have permission to close a chat!')\n                );\n            }\n        } else {\n            // Schedule interface update\n            $params['chat']->operation_admin .= \"lhinst.closeActiveChatDialog('{$params['chat']->id}',$('#tabs'),true);\";\n\n            $params['chat']->updateThis(array('update' => array('operation_admin')));\n\n            return array(\n                'processed' => true,\n                'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat was closed!')\n            );\n        }\n    }\n    \n    /**\n     * \n     * @param array $params\n     * \n     * @return multitype:boolean string\n     */\n    public static function closeChatDialog($params)\n    {\n        // Schedule interface update\n        $params['chat']->operation_admin .= \"lhinst.removeDialogTab('{$params['chat']->id}',$('#tabs'),true);\";\n                \n        $params['chat']->updateThis(array('update' => array('operation_admin')));\n\n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat was closed!')\n        );        \n    }\n    \n    /**\n     * Deletes a chat\n     */\n    public static function deleteChat($params)\n    {\n        if (isset($params['no_ui_update'])) {\n            \n            $permissionsArray = erLhcoreClassRole::accessArrayByUserID($params['user']->id);\n            \n            if (erLhcoreClassRole::canUseByModuleAndFunction($permissionsArray, 'lhchat', 'deleteglobalchat') || (erLhcoreClassRole::canUseByModuleAndFunction($permissionsArray, 'lhchat', 'deletechat') && $params['chat']->user_id == $params['user']->id)) {\n                erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.delete', array(\n                    'chat' => & $params['chat'],\n                    'user' => $params['user']\n                ));\n                $params['chat']->removeThis();\n                \n                return array(\n                    'processed' => true,\n                    'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat was deleted!')\n                );\n            } else {\n                return array(\n                    'processed' => true,\n                    'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'You do not have permission to delete a chat!')\n                );\n            }\n        } else {\n            // Schedule interface update\n            $params['chat']->operation_admin .= \"lhinst.deleteChat('{$params['chat']->id}',$('#tabs'),true);\";\n            \n            $params['chat']->updateThis(array('update' => array('operation_admin')));\n            \n            return array(\n                'processed' => true,\n                'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat was deleted!')\n            );\n        }\n    }\n\n    /**\n     * Changes stat status to pending\n     */\n    public static function pendingChat($params)\n    {\n        erLhcoreClassChatHelper::changeStatus(array(\n            'user' => $params['user'],\n            'chat' => & $params['chat'],\n            'status' => erLhcoreClassModelChat::STATUS_PENDING_CHAT,\n            'allow_close_remote' => erLhcoreClassRole::canUseByModuleAndFunction(erLhcoreClassRole::accessArrayByUserID($params['user']->id), 'lhchat', 'allowcloseremote')\n        ));\n        \n        if (! isset($params['no_ui_update'])) {\n            $params['chat']->operation_admin .= \"lhinst.updateVoteStatus(\" . $params['chat']->id . \");\";\n            $params['chat']->updateThis(array('update' => array('operation_admin')));\n        }\n        \n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat status was changed to pending!')\n        );\n    }\n    \n    public static function activeChat($params)\n    {\n        erLhcoreClassChatHelper::changeStatus(array(\n            'user' => $params['user'],\n            'chat' => & $params['chat'],\n            'status' => erLhcoreClassModelChat::STATUS_ACTIVE_CHAT,\n            'allow_close_remote' => erLhcoreClassRole::canUseByModuleAndFunction(erLhcoreClassRole::accessArrayByUserID($params['user']->id), 'lhchat', 'allowcloseremote')\n        ));\n        \n        if (! isset($params['no_ui_update'])) {\n            $params['chat']->operation_admin .= \"lhinst.updateVoteStatus(\" . $params['chat']->id . \");\";\n\n            $params['chat']->updateThis(array('update' => array('operation_admin')));\n        }\n        \n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Chat status was changed to active!')\n        );\n    }\n    \n    /**\n     * Add remarks to chat\n     * */\n    public static function addRemark($params)\n    {     \n        $params['chat']->remarks = $params['argument'];\n        \n        if (! isset($params['no_ui_update'])) {\n            $params['chat']->operation_admin .= \"lhinst.updateVoteStatus(\" . $params['chat']->id . \");\";\n        }\n\n        $params['chat']->updateThis(array('update' => array('operation_admin','remarks')));\n              \n        return array(\n            'processed' => true,\n            'process_status' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Remarks were saved!')\n        );\n    }\n}\n\n?>", "<?php\r\n\r\nclass erLhcoreClassChatExport {\r\n\r\n\tpublic static function chatExportXML(erLhcoreClassModelChat $chat) {\r\n\t\t$tpl = new erLhcoreClassTemplate('lhexport/xml.tpl.php');\r\n\t\t$tpl->set('chat', $chat);\r\n\t\treturn $tpl->fetch();\r\n\t}\r\n\r\n\tpublic static function chatExportJSON(erLhcoreClassModelChat $chat) {\r\n\t\t$tpl = new erLhcoreClassTemplate('lhexport/json.tpl.php');\r\n\t\t$tpl->set('chat', $chat);\r\n\t\treturn $tpl->fetch();\r\n\t}\r\n\r\n\tpublic static function exportCannedMessages($messages) {\r\n        $filename = \"canned-messages-\".date('Y-m-d').\".csv\";\r\n        $fp = fopen('php://output', 'w');\r\n\r\n        header('Content-type: application/csv');\r\n        header('Content-Disposition: attachment; filename='.$filename);\r\n\r\n        $counter = 0;\r\n        foreach ($messages as $message) {\r\n            $values = $message->getState();\r\n            $values['subject'] = implode(',',$message->subject_name_front);\r\n            $values['tags_plain'] = $message->tags_plain;\r\n            $values['department_ids_front'] = implode(',',$message->department_ids_front);\r\n            if ($counter == 0) {\r\n                fputcsv($fp, array_keys($values));\r\n            }\r\n            fputcsv($fp, $values);\r\n            $counter++;\r\n        }\r\n        exit;\r\n    }\r\n\r\n    public static function exportUsers($users) {\r\n        $filename = \"users-\".date('Y-m-d').\".csv\";\r\n        $fp = fopen('php://output', 'w');\r\n\r\n        header('Content-type: application/csv');\r\n        header('Content-Disposition: attachment; filename='.$filename);\r\n\r\n        $counter = 0;\r\n        foreach ($users as $user) {\r\n            $values = $user->getState();\r\n            unset($values['password']);\r\n\r\n            $values['user_groups_id'] = implode(',',$user->user_groups_id);\r\n\r\n            if (!empty($user->user_groups_id)) {\r\n                $values['user_groups_name'] = implode(',',erLhcoreClassModelGroup::getList(array('filterin' => array('id' => $user->user_groups_id))));\r\n            } else {\r\n                $values['user_groups_name'] = '';\r\n            }\r\n\r\n            $values['dep_groups_id'] = '';\r\n            $values['dep_groups_name'] = '';\r\n\r\n            $depGroupIds = $depGroupNames = [];\r\n            $userGroups = erLhcoreClassModelDepartamentGroupUser::getList(array('filter' => array('user_id' => $user->id)));\r\n            foreach ($userGroups as $userGroup) {\r\n                $depGroupIds[] = $userGroup->dep_group_id;\r\n                $depGroupNames[] = (string)$userGroup->dep_group;\r\n            }\r\n\r\n            $values['dep_groups_id'] = implode(',',$depGroupIds);\r\n            $values['dep_groups_name'] = implode(',',$depGroupNames);\r\n\r\n            $lastLogin = erLhcoreClassModelUserLogin::findOne(array('sort' => 'ctime DESC','filter' => array('user_id' => $user->id)));\r\n            \r\n            $values['last_login'] = $lastLogin instanceof erLhcoreClassModelUserLogin ? date(erLhcoreClassModule::$dateDateHourFormat,$lastLogin->ctime) : '';\r\n\r\n            if ($counter == 0) {\r\n                fputcsv($fp, array_keys($values));\r\n            }\r\n            fputcsv($fp, $values);\r\n            $counter++;\r\n        }\r\n        exit;\r\n    }\r\n\r\n    public static function exportDepartments($items) {\r\n        $filename = \"departments-\".date('Y-m-d').\".csv\";\r\n        $fp = fopen('php://output', 'w');\r\n\r\n        header('Content-type: application/csv');\r\n        header('Content-Disposition: attachment; filename='.$filename);\r\n\r\n        $counter = 0;\r\n        foreach ($items as $item) {\r\n            $values = $item->getState();\r\n\r\n            $botConfiguration = $item->bot_configuration_array;\r\n\r\n            $values['bot_id'] = isset($botConfiguration['bot_id']) ? $botConfiguration['bot_id'] : 0;\r\n            $values['bot_name'] = $values['bot_id'] > 0 ? (string)erLhcoreClassModelGenericBotBot::fetch($values['bot_id']) : '';\r\n\r\n            $values['bot_translation_group_id'] = isset($botConfiguration['bot_tr_id']) ? $botConfiguration['bot_tr_id'] : 0;\r\n            $values['bot_translation_group_name'] = $values['bot_translation_group_id']  > 0 ? (string)erLhcoreClassModelGenericBotTrGroup::fetch($values['bot_translation_group_id']) : '';\r\n\r\n            $memberOfGroups = erLhcoreClassModelDepartamentGroupMember::getList(['filter' => ['dep_id' => $item->id]]);\r\n\r\n            $ids = [];\r\n            $names = [];\r\n\r\n            foreach ($memberOfGroups as $member) {\r\n                $departmentGroup = erLhcoreClassModelDepartamentGroup::fetch($member->dep_group_id);\r\n                $ids[] = $member->dep_group_id;\r\n                $names[] = (string)$departmentGroup;\r\n            }\r\n\r\n            $values['department_group_ids'] = implode(',',$ids);\r\n            $values['department_group_names'] = implode(',',$names);\r\n\r\n            unset($values['department_transfer_id']);\r\n            unset($values['transfer_timeout']);\r\n\r\n            $values['department_transfer_id'] = $item->department_transfer_id;\r\n            $values['transfer_timeout'] = $item->transfer_timeout;\r\n            $values['department_transfer_name'] = $item->department_transfer_id > 0 ? (string)erLhcoreClassModelDepartament::fetch($item->department_transfer_id) : '';\r\n\r\n            if ($counter == 0) {\r\n                fputcsv($fp, array_keys($values));\r\n            }\r\n            fputcsv($fp, $values);\r\n            $counter++;\r\n        }\r\n        exit;\r\n    }\r\n\r\n\tpublic static function exportDepartmentStats($departments) {\r\n\t    include 'lib/core/lhform/PHPExcel.php';\r\n\t\t\t$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_to_phpTemp;\r\n\t\t\t$cacheSettings = array( 'memoryCacheSize ' => '64MB');\r\n\t\t\tPHPExcel_Settings::setCacheStorageMethod($cacheMethod, $cacheSettings);\r\n\r\n\t    $objPHPExcel = new PHPExcel();\r\n\t    $objPHPExcel->setActiveSheetIndex(0);\r\n\t    $objPHPExcel->getActiveSheet()->getStyle('A1:AW1')->getFont()->setBold(true);\r\n\t    $objPHPExcel->getActiveSheet()->setTitle('Report');\r\n\t    \r\n\t    $objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow(0, 1, \"ID\");\r\n\t    $objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow(1, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Department name'));\r\n\t    $objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow(2, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Pending chats number'));\r\n\t    $objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow(3, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Active chats number'));\r\n\t    \r\n\t    $attributes = array(\r\n\t        'id',\r\n\t        'name',\r\n\t        'pending_chats_counter',\r\n\t        'active_chats_counter',\r\n\t    );\r\n\t    \r\n\t    $i = 2;\r\n\t    foreach ($departments as $item) {\r\n\t        foreach ($attributes as $key => $attr) {\r\n\t            $objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($key, $i, (string)$item->{$attr});\r\n\t        }\r\n\t        $i++;\r\n\t    }\r\n\t    \r\n\t    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\r\n\t    \r\n\t    // We'll be outputting an excel file\r\n\t    header('Content-type: application/vnd.ms-excel');\r\n\t    \r\n\t    // It will be called file.xls\r\n\t    header('Content-Disposition: attachment; filename=\"report.xlsx\"');\r\n\t    \r\n\t    // Write file to the browser\r\n\t    $objWriter->save('php://output');\r\n\t}\r\n\r\n    public static function messagesStatistic(& $itemData, $item)\r\n    {\r\n        $itemData[] = erLhcoreClassModelmsg::getCount(array('limit' => false,'filter' => array('chat_id' => $item->id))); // Total messages\r\n        $visitorMessagesCount = erLhcoreClassModelmsg::getCount(array('limit' => false,'filter' => array('user_id' => 0, 'chat_id' => $item->id)));\r\n        $itemData[] =  $visitorMessagesCount; // Visitor messages\r\n        $itemData[] = erLhcoreClassModelmsg::getCount(array('limit' => false,'filter' => array('user_id' => -2, 'chat_id' => $item->id))); // Bot messages\r\n        $itemData[] = erLhcoreClassModelmsg::getCount(array('limit' => false,'filtergt' => array('user_id' => 0),'filter' => array('chat_id' => $item->id))); // Operator messages\r\n        $itemData[] = erLhcoreClassModelmsg::getCount(array('limit' => false,'filter' => array('user_id' => -1,'chat_id' => $item->id))); // System messages\r\n        // We have a bot assigned\r\n        // Chat does not have an operator OR it has operator and message time is less than chat become pending\r\n        $visitorMessagesBotCount = 0;\r\n        $botMessages = [];\r\n        $agentMessages = [];\r\n\r\n        if ($item->gbot_id > 0) {\r\n            // All visitor messages were interactions with bot\r\n            if ($item->user_id == 0) {\r\n                $visitorMessagesBotCount = $visitorMessagesCount;\r\n                $itemData[] = $visitorMessagesBotCount;\r\n                // All interactions were with a bot\r\n                $botMessages = erLhcoreClassModelmsg::getList(array('limit' => false, 'filter' => array('chat_id' => $item->id)));\r\n            } else {\r\n                $botMessages = erLhcoreClassModelmsg::getList(array('limit' => false, 'filterlte' => array('time' => $item->pnd_time),'filter' => array('chat_id' => $item->id)));\r\n                $agentMessages =  erLhcoreClassModelmsg::getList(array('limit' => false, 'filtergt' => array('time' => $item->pnd_time),'filter' => array('chat_id' => $item->id)));\r\n                $visitorMessagesBotCount = erLhcoreClassModelmsg::getCount(array('limit' => false, 'filterlte' => array('time' => $item->pnd_time),'filter' => array('user_id' => 0, 'chat_id' => $item->id)));\r\n                $itemData[] = $visitorMessagesBotCount;\r\n            }\r\n        } else { // There was no bot assigned\r\n            $itemData[] = 0;\r\n            $agentMessages = erLhcoreClassModelmsg::getList(array('limit' => false, 'filter' => array('chat_id' => $item->id)));\r\n        }\r\n\r\n        $itemData[] = $visitorMessagesCount - $visitorMessagesBotCount;\r\n\r\n        $timesResponse = [];\r\n        $startTime = 0;\r\n        $firstBotResponseTime = 'None';\r\n\r\n        foreach ($botMessages as $messageWithABot) {\r\n            if ($messageWithABot->user_id == 0) {\r\n                if ($startTime == 0) {\r\n                    $startTime = $messageWithABot->time;\r\n                }\r\n            } elseif ($messageWithABot->user_id == -2) {\r\n                if ($startTime > 0) {\r\n                    if (empty($timesResponse)){\r\n                        $firstBotResponseTime = $messageWithABot->time - $startTime;\r\n                        $timesResponse[] = $firstBotResponseTime;\r\n                    } else {\r\n                        $timesResponse[] = $messageWithABot->time - $startTime;\r\n                    }\r\n\r\n                    $startTime = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        $tillFirstOperatorMessage = 'None';\r\n        $firstAgentResponseTime = 'None';\r\n        $timesResponseAgent = [];\r\n        $startTime = $item->pnd_time;\r\n\r\n        foreach ($agentMessages as $agentMessage) {\r\n            if ($agentMessage->user_id == 0) {\r\n                if ($startTime == 0) {\r\n                    $startTime = $agentMessage->time;\r\n                }\r\n            } elseif ($agentMessage->user_id > 0) {\r\n                if ($tillFirstOperatorMessage == 'None') {\r\n                    $tillFirstOperatorMessage = $agentMessage->time - $item->pnd_time;\r\n                    if ($tillFirstOperatorMessage < 0) { // It was operator who first send a message\r\n                        $tillFirstOperatorMessage = 0;\r\n                    }\r\n                }\r\n\r\n                if ($startTime > 0) {\r\n                    // It's first agent response\r\n                    if (empty($timesResponseAgent)) {\r\n                        $responseTime = $agentMessage->time - ($item->wait_time + $item->pnd_time);\r\n                        if ($responseTime > 0) {\r\n                            $firstAgentResponseTime = $responseTime;\r\n                            $timesResponseAgent[] = $firstAgentResponseTime;\r\n                        } else {\r\n                            $responseTime = $agentMessage->time - $item->pnd_time;\r\n                            if ($responseTime > 0) {\r\n                                $firstAgentResponseTime = $responseTime;\r\n                                $timesResponseAgent[] = $firstAgentResponseTime;\r\n                            } else {\r\n\r\n                                $firstAgentResponseTime = $agentMessage->time - $item->time;\r\n\r\n                                // Happens for old proactive chat invitations\r\n                                if ($firstAgentResponseTime < 0) {\r\n                                    $firstAgentResponseTime = 0;\r\n                                }\r\n\r\n                                $timesResponseAgent[] = $firstAgentResponseTime;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        $timesResponseAgent[] = $agentMessage->time - $startTime;\r\n                    }\r\n                    $startTime = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        $itemData[] = !empty($timesResponseAgent) ? max($timesResponseAgent) : 'None';\r\n        $itemData[] = !empty($timesResponse) ? max($timesResponse) : 'None';\r\n        $itemData[] = !empty($timesResponseAgent) ? (array_sum($timesResponseAgent)/count($timesResponseAgent)) : 'None';\r\n        $itemData[] = !empty($timesResponse) ? array_sum($timesResponse)/count($timesResponse) : 'None';\r\n        $itemData[] = $firstAgentResponseTime;\r\n        $itemData[] = $firstBotResponseTime;\r\n        $itemData[] = $tillFirstOperatorMessage;\r\n    }\r\n\r\n\tpublic static function chatListExportXLS($chats, $params = array()) {\r\n\r\n\t\tinclude 'lib/core/lhform/PHPExcel.php';\r\n\t\t$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_to_phpTemp;\r\n\t\t$cacheSettings = array( 'memoryCacheSize ' => '64MB');\r\n\t\tPHPExcel_Settings::setCacheStorageMethod($cacheMethod, $cacheSettings);\r\n\r\n\t\t$chatArray = array();\r\n\t\t\r\n\t\t$id = \"ID\";\r\n\t\t$name = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Visitor Name');\r\n\t\t$email = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','E-mail');\r\n\t\t$phone = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Phone');\r\n\t\t$wait = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Wait time');\r\n\t\t$waitAbandoned = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Wait time abandoned');\r\n\t\t$country = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Country');\r\n\t\t$countryCode = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Country Code');\r\n\t\t$city = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','City');\r\n\t\t$ip = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','IP');\r\n\t\t$operator = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Operator');\r\n\t\t$operatorName = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Operator Name');\r\n\t\t$dept = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Department');\r\n\t\t$date = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Date');\r\n\t\t$minutes = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Minutes');\r\n\t\t$vote = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Vote status');\r\n\t\t$subjects = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Subjects');\r\n\t\t$mail = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Mail send');\r\n\t\t$page = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Page');\r\n\t\t$from = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Came from');\r\n\t\t$link = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Link');\r\n\t\t$remarks = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Remarks');\r\n\t\t$visitorRemarks = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Visitor remarks');\r\n\t\t$device = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Device');\r\n\t\t$visitorID = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Visitor ID');\r\n\t\t$duration = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Duration');\r\n\t\t$chat_initiator = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Started by');\r\n\t\t$browser = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','User agent');\r\n\t\t$browserBrand = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Browser');\r\n\t\t$platform = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Platform');\r\n        $user_id_op = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','User ID');\r\n        $referrer = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Chat start page');      // Page visitor started a chat\r\n        $session_referrer = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Referer page'); // Page from which visitor come to website\r\n        $chat_start_time = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Chat start time');\r\n        $chat_end_time = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Chat end time');\r\n        $is_unread = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Is unread by operator');\r\n        $is_unread_visitor = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Is unread by visitor');\r\n        $is_abandoned = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Is abandoned');\r\n        $bot = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Bot');\r\n        $chat_actions = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Chat actions');\r\n\r\n\t\t$additionalDataPlain = array();\r\n\t\tfor ($i = 1; $i <= 20; $i++) {\r\n            $additionalDataPlain[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Additional data').' - '.$i;\r\n        }\r\n\r\n\t\t$additionalData = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Additional data');\r\n\r\n        $survey = array();\r\n        for ($i = 1; $i <= 20; $i++) {\r\n            $survey[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Survey data').' - '.$i;\r\n        }\r\n\r\n\t\t$mainColumns = array($id, $name, $email, $phone, $wait, $waitAbandoned, $country, $countryCode, $city, $ip, $operator, $operatorName, $user_id_op, $dept, $date, $minutes, $vote, $mail, $page, $from, $link, $remarks, $visitorRemarks, $subjects, $is_unread, $is_unread_visitor, $is_abandoned, $bot, $chat_actions, $device, $visitorID, $duration, $chat_initiator, $browser, $browserBrand, $platform, $referrer, $session_referrer, $chat_start_time, $chat_end_time);\r\n\r\n\t\tif (isset($params['type']) && in_array(2,$params['type'])) {\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Chat content');\r\n        }\r\n\r\n        if (isset($params['type']) && in_array(6, $params['type'])) {\r\n            $chatVariables = erLhAbstractModelChatVariable::getList();\r\n            foreach ($chatVariables as $chatVariable){\r\n                $mainColumns[] = $chatVariable->var_name;\r\n            }\r\n        }\r\n\r\n        if (isset($params['type']) && in_array(4,$params['type'])) {\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Messages');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Visitor messages');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Bot messages');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Operator messages');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','System messages');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Visitor messages to bot');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Visitor messages to operator');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Maximum agent response time');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Maximum bot response time');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Average agent response time');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Average bot response time');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','First agent response time');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','First bot response time');\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Wait time till first operator message');\r\n        }\r\n\r\n        if (isset($params['type']) && in_array(5,$params['type'])) {\r\n            $mainColumns[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatexport','Subject');\r\n        }\r\n\r\n\t\tif (isset($params['type']) && in_array(3,$params['type'])) {\r\n            $mainColumns = array_merge($mainColumns,$survey);\r\n        }\r\n\r\n        $chatArray[] = array_merge($mainColumns, $additionalDataPlain, array($additionalData));\r\n\r\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.list_export_columns',array('items' => & $chatArray));\r\n\r\n\t\tif ($params['csv'] && $params['csv'] == true) {\r\n            $now = gmdate(\"D, d M Y H:i:s\");\r\n            header(\"Expires: Tue, 03 Jul 2001 06:00:00 GMT\");\r\n            header(\"Cache-Control: max-age=0, no-cache, must-revalidate, proxy-revalidate\");\r\n            header(\"Last-Modified: {$now} GMT\");\r\n\r\n            // force download\r\n            header(\"Content-Type: application/force-download\");\r\n            header(\"Content-Type: application/octet-stream\");\r\n            header(\"Content-Type: application/download\");\r\n\r\n            // disposition / encoding on response body\r\n            header(\"Content-Disposition: attachment;filename=report.csv\");\r\n            header(\"Content-Transfer-Encoding: binary\");\r\n\r\n            $df = fopen(\"php://output\", 'w');\r\n\r\n            // First row\r\n            fputcsv($df, $chatArray[0]);\r\n        }\r\n\r\n        foreach ($chats as $item) {\r\n                $item = erLhcoreClassModelChat::fetch($item->id, false);\r\n                $id = (string)$item->{'id'};\r\n                $nick = (string)$item->{'nick'};\r\n                $email = (string)$item->{'email'};\r\n                $phone = (string)$item->{'phone'};\r\n                $wait = (string)$item->{'wait_time'};\r\n                $country = (string)$item->{'country_name'};\r\n                $countryCode = (string)$item->{'country_code'};\r\n                $city = (string)$item->{'city'};\r\n                $ip = (string)$item->{'ip'};\r\n                $user = (string)$item->{'user'};\r\n                $operatorName = (string)$item->{'n_off_full'};\r\n                $user_id_op = (string)$item->{'user_id'};\r\n                $dept = (string)$item->{'department'};\r\n                $remarks = (string)$item->{'remarks'};\r\n                $device = (string)$item->{'device_type'} == 0 ? erTranslationClassLhTranslation::getInstance()->getTranslation('chat/adminchat','Computer') : ((string)$item->{'device_type'} == 1 ? erTranslationClassLhTranslation::getInstance()->getTranslation('chat/adminchat','Mobile') : erTranslationClassLhTranslation::getInstance()->getTranslation('chat/adminchat','Tablet'));\r\n                $visitorID = (string)$item->online_user_id;\r\n                $duration = (string)$item->chat_duration;\r\n                $chat_initiator = $item->chat_initiator == erLhcoreClassModelChat::CHAT_INITIATOR_DEFAULT ? 'visitor' : 'proactive';\r\n                $browser = (string)$item->uagent;\r\n                $visitorRemarks = $item->online_user_id > 0 && ($onlineUser = erLhcoreClassModelChatOnlineUser::fetch($item->online_user_id, false)) && $onlineUser instanceof erLhcoreClassModelChatOnlineUser ? $onlineUser->notes : '';\r\n\r\n                $detect = new BrowserDetection;\r\n                $OSDetails = $detect->getOS($item->uagent);\r\n                $browserDetails = $detect->getBrowser($item->uagent);\r\n\r\n                $osFamily = isset($OSDetails['os_family']) ? $OSDetails['os_family'] : 'Unknown';\r\n                $browserBrand = isset($browserDetails['browser_name']) ? $browserDetails['browser_name'] : 'Unknown';\r\n\r\n                $referrer = (string)$item->referrer;\r\n                $session_referrer = (string)$item->session_referrer;\r\n                $chat_start_time = date('Y-m-d H:i:s',$item->time);\r\n                $chat_end_time = $item->cls_time > 0 ? date('Y-m-d H:i:s',$item->cls_time) : '';\r\n\r\n                $subjects = implode(',',erLhAbstractModelSubjectChat::getList(array('filter' => array('chat_id' => $item->id))));\r\n                $is_unread = (int)$item->has_unread_messages;\r\n                $is_unread_visitor = (int)$item->has_unread_op_messages;\r\n                $is_abandoned = ($item->lsync < ($item->pnd_time + $item->wait_time) && $item->wait_time > 1) || ($item->lsync > ($item->pnd_time + $item->wait_time) && $item->wait_time > 1 && $item->user_id == 0) ? 1 : 0;\r\n                $waitAbandoned = 'None';\r\n\r\n                if ($is_abandoned == true) {\r\n                    $waitAbandoned = ($item->cls_time > 0 ? $item->cls_time : time()) - $item->pnd_time;\r\n                }\r\n\r\n                $bot = (string)$item->bot;\r\n\r\n                $date = date(erLhcoreClassModule::$dateFormat,$item->time);\r\n                $minutes = date('H:i:s',$item->time);\r\n                $vote = ($item->fbst == 1 ? 'UP' : ($item->fbst == 2 ? 'DOWN' : 'NONE'));\r\n                $mail = $item->mail_send == 1 ? 'Yes' : 'No';\r\n                $page = $item->referrer;\r\n                $additionalDataContent = $item->additional_data;\r\n\r\n                // Create empty array of 20 to make sure all are filled\r\n                $urlData = array();\r\n                $pairsRegular = array();\r\n                if (!empty($additionalDataContent)) {\r\n                    foreach (json_decode($additionalDataContent,true) as $index => $additionalItem) {\r\n                        if (isset($additionalItem['url']) && $additionalItem['url'] == true) {\r\n                            $urlData[] = $additionalItem['key'] . ' - ' . $additionalItem['value'];\r\n                        } else {\r\n                            $pairsRegular[] = (isset($additionalItem['key']) ? $additionalItem['key'] : '') . ' - ' . (isset($additionalItem['value']) ? $additionalItem['value'] : '');\r\n                        }\r\n\r\n                    }\r\n                }\r\n                       \r\n                // Put URL arguments always first\r\n                $additionalPairs = array_merge($urlData,$pairsRegular);\r\n                $additionalPairs = array_merge($additionalPairs,array_fill(count($additionalPairs),20-count($additionalPairs),''));\r\n\r\n                if ($item->session_referrer != '') {\r\n                        $referer = parse_url($item->session_referrer);                    \r\n                        if (isset($referer['host'])) {\r\n                            $from = $referer['host'];\r\n                        } else {\r\n                        \t$from = null;\r\n                        }\r\n                } else {\r\n                \t$from = null;\r\n                }\r\n\r\n                $url = erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('user/login').'/(r)/'.rawurlencode(base64_encode('chat/single/'.$item->id));\r\n\r\n                $chat_actions = '';\r\n\r\n                foreach (erLhcoreClassModelChatAction::getList(['sort' => 'id ASC', 'limit' => false, 'filter' => ['chat_id' => $item->id]]) as $chatActionItem) {\r\n                    $chat_actions .= $chatActionItem->body.\"\\n\";\r\n                }\r\n\r\n                $itemData = array($id, $nick, $email, $phone, $wait, $waitAbandoned, $country, $countryCode, $city, $ip, $user, $operatorName, $user_id_op, $dept, $date, $minutes, $vote, $mail, $page, $from, $url, $remarks, $visitorRemarks, $subjects, $is_unread, $is_unread_visitor, $is_abandoned, $bot, trim($chat_actions), $device, $visitorID, $duration, $chat_initiator, $browser, $browserBrand, $osFamily, $referrer, $session_referrer, $chat_start_time, $chat_end_time);\r\n\r\n                // Print chat content to last column\r\n                if (isset($params['type']) && in_array(2,$params['type'])) {\r\n\r\n                    $messages = erLhcoreClassModelmsg::getList(array('limit' => 10000,'sort' => 'id ASC','filter' => array('chat_id' => $item->id)));                       \r\n                    $messagesContent = '';\r\n\r\n                    foreach ($messages as $msg ) {\r\n                        if ($msg->user_id == -1) {\r\n                                $messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. erTranslationClassLhTranslation::getInstance()->getTranslation('chat/syncadmin','System assistant').': '.htmlspecialchars($msg->msg).\"\\n\";\r\n                        } else {\r\n                                $messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. ($msg->user_id == 0 ? htmlspecialchars($item->nick) : htmlspecialchars($msg->name_support)).': '.htmlspecialchars($msg->msg).\"\\n\";\r\n                        }\r\n                    }\r\n                    $itemData[] = trim($messagesContent);\r\n                }\r\n\r\n                if (isset($chatVariables)) {\r\n                    foreach ($chatVariables as $chatVariable) {\r\n                        if ($chatVariable->inv == true) {\r\n                            $chatVariablesPassed = $item->chat_variables_array;\r\n                        } else {\r\n                            foreach ($item->additional_data_array as $chatVariablePassed) {\r\n                                if (isset($chatVariablePassed['identifier'])){\r\n                                    $chatVariablesPassed[$chatVariablePassed['identifier']] = $chatVariablePassed['value'];\r\n                                }\r\n\r\n                            }\r\n                        }\r\n\r\n                        $valueVariable = '';\r\n\r\n                        if (isset($chatVariablesPassed[$chatVariable->var_identifier])){\r\n                            $valueVariable = $chatVariablesPassed[$chatVariable->var_identifier];\r\n                        }\r\n\r\n                        $itemData[] = $valueVariable;\r\n                    }\r\n                }\r\n\r\n                if (isset($params['type']) && in_array(4,$params['type'])) {\r\n                    self::messagesStatistic($itemData, $item);\r\n                }\r\n\r\n                if (isset($params['type']) && in_array(5,$params['type'])) {\r\n                    $subjects = erLhAbstractModelSubjectChat::getList(array('filter' => array('chat_id' => $item->id)));\r\n                    $subjectValue = [];\r\n                    foreach ($subjects as $subject) {\r\n                        $subjectValue[] = (string)$subject->subject;\r\n                    }\r\n                    $itemData[] = implode(\"\\n\",$subjectValue);\r\n                }\r\n\r\n                if (isset($params['type']) && in_array(3,$params['type'])) {\r\n                    $surveyItem = erLhAbstractModelSurveyItem::findOne(array('filter' => array('chat_id' =>$item->{'id'})));\r\n                    if ($surveyItem instanceof erLhAbstractModelSurveyItem){\r\n                        $survey = erLhAbstractModelSurvey::fetch($surveyItem->survey_id);\r\n                        $exported = erLhcoreClassSurveyExporter::exportRAW(array($surveyItem),$survey);\r\n                        $pairs = array_fill(0,20,'');\r\n                        $i = 0;\r\n                        foreach ($exported['value'] as $valueItems) {\r\n                            foreach ($exported['title'] as $indexColumn => $columnName) {\r\n                                $pairs[$i] = $columnName . ' - ' . $valueItems[$indexColumn];\r\n                                $i++;\r\n                            }\r\n                        }\r\n                        $itemData = array_merge($itemData,$pairs);\r\n                    } else {\r\n                        $itemData = array_merge($itemData,array_fill(0,20,''));\r\n                    }\r\n                }\r\n\r\n                $itemData = array_merge($itemData, $additionalPairs, array($additionalDataContent));\r\n\r\n                erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.list_export_item_data',array('item' => & $itemData, 'chat' => $item));\r\n\r\n                if ($params['csv'] && $params['csv'] == true) {\r\n                    fputcsv($df, $itemData);\r\n                } else {\r\n                    $chatArray[] = $itemData;\r\n                }\r\n        }\r\n\r\n        if ($params['csv'] && $params['csv'] == true) {\r\n            fclose($df);\r\n        } else {\r\n            // Create new PHPExcel object\r\n            $objPHPExcel = new PHPExcel();\r\n            $objPHPExcel->setActiveSheetIndex(0);\r\n\r\n            // Set the starting point and array of data\r\n            $objPHPExcel->getActiveSheet()->fromArray($chatArray, null, 'A1');\r\n\r\n            // Set style for top row\r\n            $objPHPExcel->getActiveSheet()->getStyle('A1:AW1')->getFont()->setBold(true);\r\n\r\n            // Set file type and name of file\r\n            header('Content-Type: application/vnd.ms-excel');\r\n            header('Content-Disposition: attachment;filename=\"report.xlsx\"');\r\n            header('Cache-Control: max-age=0');\r\n\r\n            $writer = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\r\n\r\n            $writer->save('php://output');\r\n        }\r\n\t}\r\n}\r\n\r\n?>\r\n", "<?php\n\nclass erLhcoreClassChatMail {\n\n\tpublic static function setupSMTP(PHPMailer & $phpMailer)\n\t{\n        // Allow extension override mail settings\n        $response = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chatmail.setup_smtp', array(\n            'phpmailer' => & $phpMailer\n        ));\n        \n        if ($response !== false && isset($response['status']) && $response['status'] == erLhcoreClassChatEventDispatcher::STOP_WORKFLOW) {\n            return;\n        }\n\t    \n\t        \n\t\t$smtpData = erLhcoreClassModelChatConfig::fetch('smtp_data');\n\t\t$data = (array)$smtpData->data;\n\n\t\tif ( isset($data['sender']) && $data['sender'] != '' ) {\n\t\t    $phpMailer->Sender = $data['sender'];\n\t\t}\n\t\t\n\t\tif ($phpMailer->From == 'root@localhost' || $phpMailer->From == '') {\n\t\t    $phpMailer->From = $data['default_from'];\n\t\t}\n\t\t\n\t\tif ($phpMailer->FromName == 'Root User' || $phpMailer->FromName == '') {\n\t\t    $phpMailer->FromName = $data['default_from_name'];\n\t\t}\n\t\t\n\t\tif ( isset($data['use_smtp']) && $data['use_smtp'] == 1 ) {\n\t\t\t$phpMailer->IsSMTP();\n\t\t\t$phpMailer->Host = $data['host'];\n\t\t\t$phpMailer->Port = $data['port'];\n\t\t\t\n\t\t\tif ($data['username'] != '' && $data['password'] != '') {\t\t\t\n\t\t\t\t$phpMailer->Username = $data['username'];\n\t\t\t\t$phpMailer->Password = $data['password'];\n\t\t\t\t$phpMailer->SMTPAuth = true;\n\t\t\t\t$phpMailer->From = isset($data['default_from']) ? $data['default_from'] : $data['username'];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static function sendTestMail($userData) {\n\n\t\t$mail = new PHPMailer(true);\n\t\t$mail->CharSet = \"UTF-8\";\n\t\t$mail->Subject = 'LHC Test mail';\n\t\t$mail->AddReplyTo($userData->email,(string)$userData);\n\t\t$mail->Body = 'This is test mail. If you received this mail. That means that your mail settings is correct.';\n\t\t$mail->AddAddress( $userData->email );\n\n\t\tself::setupSMTP($mail);\n\t\t\n\t\ttry {\n\t\t\treturn $mail->Send();\n\t\t} catch (Exception $e) {\n\t\t\tthrow $e;\n\t\t}\n\t\t$mail->ClearAddresses();\n\t}\n\n\t// Prepare template variables\n    public static function prepareSendMail(erLhAbstractModelEmailTemplate & $sendMail, $chat)\n    {\n    \t$currentUser = erLhcoreClassUser::instance();\n    \t\n    \tif ($currentUser->isLogged() == true){    \t\n\t    \t$userData = $currentUser->getUserData();  \t\n\t    \t\t    \t    \t\n\t    \t$sendMail->subject = str_replace(array('{name_surname}','{department}'),array($userData->name.' '.$userData->surname, (string)$chat->department), $sendMail->subject);\n\t    \t$sendMail->from_name = str_replace(array('{name_surname}','{department}'),array($userData->name.' '.$userData->surname, (string)$chat->department), $sendMail->from_name);\n\t\n\t    \tif (empty($sendMail->from_email)) {\n\t    \t\t$sendMail->from_email = $userData->email;\n\t    \t}\n\t\n\t    \tif (empty($sendMail->reply_to)) {\n\t    \t\t$sendMail->reply_to = $userData->email;\n\t    \t}\n    \t}\n    }\n\n    // Validate send mail\n    public static function validateSendMail(erLhAbstractModelEmailTemplate & $sendMail, & $chat, $params = array())\n    {\n    \t$Errors = array();\n\n    \t$validationFields = array();\n    \t$validationFields['Message'] = new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw');\n    \t$validationFields['Subject'] = new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw');\n    \t$validationFields['FromName'] = new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw');\n    \t$validationFields['FromEmail'] = new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'validate_email');\n    \t$validationFields['ReplyEmail'] = new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'validate_email');\n    \t$validationFields['RecipientEmail'] = new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'validate_email');\n\n    \t$form = new ezcInputForm( INPUT_POST, $validationFields );\n    \t$Errors = array();\n\n    \tif (isset($params['archive_mode']) && $params['archive_mode'] == true){\n    \t\t$messages = array_reverse(erLhcoreClassChat::getList(array('limit' => false, 'sort' => 'id DESC','customfilter' => array('user_id != -1'), 'filter' => array('chat_id' => $chat->id)),'erLhcoreClassModelChatArchiveMsg',erLhcoreClassModelChatArchiveRange::$archiveMsgTable));\n    \t} else {\n    \t\t$messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false,'sort' => 'id DESC','customfilter' => array('user_id != -1'), 'filter' => array('chat_id' => $chat->id))));\n    \t}\n    \t\n    \t// Fetch chat messages\n    \t$tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n    \t$tpl->set('chat', $chat);\n    \t$tpl->set('messages', $messages);\n    \t\n    \t$surveyContent = self::getSurveyContent($chat);\n\n\n        $cfgSite = erConfigClassLhConfig::getInstance();\n        $secretHash = $cfgSite->getSetting( 'site', 'secrethash' );\n        $url = erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurldirect('chat/readchatmail') . '/' . $chat->id . '/' . sha1($secretHash . $chat->hash . $chat->id);\n\n    \t$sendMail->content = str_replace(array('{user_chat_nick}','{messages_content}','{chat_id}','{survey}','{operator_name}','{chat_link}'), array($chat->nick, $tpl->fetch(), $chat->id, $surveyContent, $chat->plain_user_name, $url), $sendMail->content);\n    \t\n    \tif ($form->hasValidData( 'Message' ) )\n    \t{\n    \t\t$sendMail->content = str_replace('{additional_message}', $form->Message, $sendMail->content);\n    \t}\n\n        $sendMail->content = str_replace(array('{chat_link}'), array($url), $sendMail->content);\n\n    \t$sendMail->content = erLhcoreClassBBCode::parseForMail($sendMail->content);\n    \t\n    \tif ( $form->hasValidData( 'FromEmail' ) ) {\n    \t\t$sendMail->from_email = $form->FromEmail;\n    \t}\n\n    \tif ( $form->hasValidData( 'ReplyEmail' ) ) {\n    \t\t$sendMail->reply_to = $form->ReplyEmail;\n    \t}\n\n    \tif ( $form->hasValidData( 'FromName' ) ) {\n    \t\t$sendMail->from_name = $form->FromName;\n    \t}\n\n    \tif ( $form->hasValidData( 'Subject' ) ) {\n    \t\t$sendMail->subject = $form->Subject;\n    \t}\n\n    \tif ( $form->hasValidData( 'RecipientEmail' ) ) {\n    \t\t$sendMail->recipient = $form->RecipientEmail;\n    \t} else {\n    \t\t$Errors[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/sendmail','Please enter recipient e-mail!');\n    \t}\n\n    \tif (empty($sendMail->from_email)) {\n    \t\t$Errors[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/sendmail','From e-mail is missing!');\n    \t}\n\n    \tif (empty($sendMail->reply_to)) {\n    \t\t$Errors[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/sendmail','Reply e-mail is missing!');\n    \t}\n\n    \tif (empty($sendMail->subject)) {\n    \t\t$Errors[] = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/sendmail','Subject is missing!');\n    \t}\n\n    \treturn $Errors;\n    }\n\n    // Send mail\n    public static function sendMail(erLhAbstractModelEmailTemplate & $sendMail, & $chat) {\n\n    \t$mail = new PHPMailer();\n    \t$mail->CharSet = \"UTF-8\";\n    \t\n    \tif ($sendMail->from_email != '') {\n    \t\t$mail->Sender = $mail->From = $sendMail->from_email;\n    \t}\n    \t\n    \t$mail->FromName = $sendMail->from_name;\n    \t$mail->Subject = str_replace(array('{chat_id}'), array($chat->id), $sendMail->subject);\n    \t\n    \tif ($sendMail->reply_to != '') {\n    \t\t$mail->AddReplyTo($sendMail->reply_to,$sendMail->from_name);\n    \t}\n    \t    \t\n    \t$mail->Body = $sendMail->content;\n    \t$mail->AddAddress( $sendMail->recipient );\n\n    \tself::setupSMTP($mail);\n    \t\n    \tif ($sendMail->bcc_recipients != '') {\n    \t\t$recipientsBCC = explode(',',$sendMail->bcc_recipients);\n    \t\tforeach ($recipientsBCC as $recipientBCC) {\n    \t\t\t$mail->AddBCC(trim($recipientBCC));\n    \t\t}\n    \t}\n    \t\n    \t$mail->Send();\n    \t$mail->ClearAddresses();\n    }\n\n    public static function sendMailFAQ($faq) {\n\n    \t$sendMail = erLhAbstractModelEmailTemplate::fetch(6);\n        $sendMail->translate();\n\n    \t$mail = new PHPMailer();\n    \t$mail->CharSet = \"UTF-8\";\n\n    \t$mail->FromName = $sendMail->from_name;\n    \t\n    \tif ($sendMail->from_email != '') {\n    \t\t$mail->From = $mail->Sender = $sendMail->from_email;\n    \t}\n\n    \tif ($faq->email != ''){    \n    \t\t$mail->AddReplyTo($faq->email);\n    \t}\n\n    \t$mail->Subject = $sendMail->subject;\n    \t\n    \t$mail->Body = str_replace(array('{email}','{question}','{url_request}','{url_question}'), array($faq->email,$faq->question,erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('user/login').'/(r)/'.rawurlencode(base64_encode('faq/view/'.$faq->id)),$faq->url), $sendMail->content);\n    \t\n    \tif ($sendMail->recipient != '') { // Perhaps template has default recipient\n    \t\t$emailRecipient = explode(',',$sendMail->recipient);\n    \t} else { // Lets find first user and send him an e-mail\n    \t\t$list = erLhcoreClassModelUser::getUserList(array('limit' => 1,'sort' => 'id ASC'));\n    \t\t$user = array_pop($list);\n    \t\t$emailRecipient = array($user->email);\n    \t}\n    \t\n    \tforeach ($emailRecipient as $receiver) {\n    \t\t$mail->AddAddress( $receiver );\n    \t}\n    \t\n    \tself::setupSMTP($mail);\n    \t\n    \t$mail->Send();    \t\n    }\n    \n    public static function sendMailRequestPermission(erLhcoreClassModelUser $recipient, erLhcoreClassModelUser $sender, $requestedPermissions) {\n        $sendMail = erLhAbstractModelEmailTemplate::fetch(10);\n        $sendMail->translate();\n\n        $mail = new PHPMailer();\n        $mail->CharSet = \"UTF-8\";\n        \n        if ($sendMail->from_email != '') {\n            $mail->From = $mail->Sender = $sendMail->from_email;\n        }\n                     \n        $mail->Subject = str_replace(array('{user}'),array((string)$sender),$sendMail->subject);\n        $mail->AddReplyTo($sender->email,(string)$sender);\n                 \n        $mail->Body = str_replace(array('{permissions}','{user}'), array($requestedPermissions,(string)$sender), $sendMail->content);\n        \n        $mail->AddAddress( $recipient->email );\n        \n        self::setupSMTP($mail);\n                     \n        $mail->Send();\n        $mail->ClearAddresses();\n    }\n    \n    public static function sendMailRequest($inputData, erLhcoreClassModelChat $chat, $params = array()) {\n\n    \t$sendMail = erLhAbstractModelEmailTemplate::fetch(2);\n        $sendMail->translate();\n\n    \t$mail = new PHPMailer();\n    \t$mail->CharSet = \"UTF-8\";\n\n    \tif ($sendMail->from_email != '') {\n    \t\t$mail->From = $mail->Sender = $sendMail->from_email;\n    \t}    \t\n        \t\n    \t$mail->FromName = $sendMail->from_name;\n    \t    \t\n    \t$mail->Subject = str_replace(array('{name}','{department}','{country}','{city}','{chat_id}'),array($chat->nick,(string)$chat->department,$chat->country_name,$chat->city,$chat->id),$sendMail->subject);\n    \t$mail->AddReplyTo($chat->email,$chat->nick);\n    \t\n    \t$prefillchat = '-'; \n    \tif (isset($params['chatprefill']) && $params['chatprefill'] instanceof erLhcoreClassModelChat){\n    \t\t$prefillchat = erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('user/login').'/(r)/'.rawurlencode(base64_encode('chat/single/'.$params['chatprefill']->id));\n    \t}\n    \t\n    \t// Format user friendly additional data\n    \tif ($chat->additional_data != '') {\n    \t    $paramsAdditional = json_decode($chat->additional_data,true);\n    \t    $elementsAdditional = array();\n    \t    if (is_array($paramsAdditional) && !empty($paramsAdditional)) {\n    \t        foreach ($paramsAdditional as $param) {\n    \t            $elementsAdditional[] = $param['key'].' - '.$param['value'];\n    \t        }\n    \t        \n    \t        $additional_data = implode(\"\\n\", $elementsAdditional);\n    \t    } else {\n    \t        $additional_data = $chat->additional_data;\n    \t    }\n    \t    \n    \t} else {\n    \t    $additional_data = '';\n    \t}\n    \t\n    \t\n    \t$mail->Body = str_replace(array('{phone}','{name}','{email}','{message}','{additional_data}','{url_request}','{ip}','{department}','{country}','{city}','{prefillchat}'), array($chat->phone,$chat->nick,$chat->email,(isset($inputData->question) ? $inputData->question : ''),$additional_data,(isset($_POST['URLRefer']) ? $_POST['URLRefer'] : ''),erLhcoreClassIPDetect::getIP(),(string)$chat->department,$chat->country_name,$chat->city,$prefillchat), $sendMail->content);\n\n    \t/*\n    \t * Attatch file\n    \t * */\n    \tif ($inputData->has_file == true) { \n    \t\t$mail->AddAttachment($inputData->file_location,'file.'.$inputData->file_extension);\n    \t}\n    \t\n    \t$emailRecipient = array();\n    \tif ($chat->department !== false && $chat->department->email != '') { // Perhaps department has assigned email\n    \t\t$emailRecipient = explode(',',$chat->department->email);\n    \t} elseif ($sendMail->recipient != '') { // Perhaps template has default recipient\n    \t\t$emailRecipient = explode(',',$sendMail->recipient);\n    \t} else { // Lets find first user and send him an e-mail\n    \t\t$list = erLhcoreClassModelUser::getUserList(array('limit' => 1,'sort' => 'id ASC'));\n    \t\t$user = array_pop($list);\n    \t\t$emailRecipient = array($user->email);\n    \t}\n\n    \tforeach ($emailRecipient as $receiver) {\n    \t\t$mail->AddAddress( $receiver );\n    \t}\n\n    \tself::setupSMTP($mail);\n\n    \tif ($sendMail->bcc_recipients != '') {\n    \t\t$recipientsBCC = explode(',',$sendMail->bcc_recipients);\n    \t\tforeach ($recipientsBCC as $recipientBCC) {\n    \t\t\t$mail->AddBCC(trim($recipientBCC));    \t\t\t\n    \t\t}\n    \t}\n    \t\n    \tif ($sendMail->user_mail_as_sender == 1 && $chat->email != '') {    \t       \t \n    \t   $mail->From = $chat->email;\n    \t   $mail->FromName = $chat->nick;    \t  \n    \t}\n    \t    \t\n    \t$mail->Send();\n    \t$mail->ClearAddresses();\n    }\n    \n    public static function sendMailUnacceptedChat(erLhcoreClassModelChat $chat, $templateID = 4) {\n    \t$sendMail = erLhAbstractModelEmailTemplate::fetch($templateID);\n        $sendMail->translate();\n\n    \t$mail = new PHPMailer();\n    \t$mail->CharSet = \"UTF-8\";\n    \t\n    \tif ($sendMail->from_email != '') { \t\n    \t\t$mail->Sender = $mail->From = $sendMail->from_email;\n    \t}\n    \t\n    \t$mail->FromName = $sendMail->from_name;\n    \t\n    \tif ($sendMail->reply_to != '') {\n    \t    $mail->AddReplyTo($sendMail->reply_to,$sendMail->from_name);\n    \t} elseif ($chat->email != '') {    \t\t\n    \t\t$mail->AddReplyTo($chat->email,$chat->nick);\n    \t}\n\n    \t\n    \t$mail->Subject = str_replace(array('{chat_id}','{department}'), array($chat->id,(string)$chat->department), $sendMail->subject);\n    \t   \t    \t\n    \t$messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false,'sort' => 'id DESC','filter' => array('chat_id' => $chat->id))));\n    \t$messagesContent = '';\n    \t\n    \tforeach ($messages as $msg ) {\n\t    \t if ($msg->user_id == -1) {\n\t    \t\t$messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. erTranslationClassLhTranslation::getInstance()->getTranslation('chat/syncadmin','System assistant').': '.htmlspecialchars($msg->msg).\"\\n\";\n\t    \t } else {\n\t    \t\t$messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. ($msg->user_id == 0 ? htmlspecialchars($chat->nick) : htmlspecialchars($msg->name_support)).': '.htmlspecialchars($msg->msg).\"\\n\";\n\t    \t }\n    \t}\n    \t\n    \t$emailRecipient = array();\n    \tif ($chat->department !== false && $chat->department->email != '') { // Perhaps department has assigned email\n    \t\t$emailRecipient = explode(',',$chat->department->email);\n    \t} elseif ($sendMail->recipient != '') { // Perhaps template has default recipient\n    \t\t$emailRecipient = explode(',',$sendMail->recipient);\n    \t} else { // Lets find first user and send him an e-mail\n    \t\t$list = erLhcoreClassModelUser::getUserList(array('limit' => 1,'sort' => 'id ASC'));\n    \t\t$user = array_pop($list);\n    \t\t$emailRecipient = array($user->email);\n    \t}\n    \t\n    \tself::setupSMTP($mail);\n    \t\n    \t$cfgSite = erConfigClassLhConfig::getInstance();\n    \t$secretHash = $cfgSite->getSetting( 'site', 'secrethash' );\n    \t    \t\n    \t// Format user friendly additional data\n    \tif ($chat->additional_data != '') {\n    \t    $paramsAdditional = json_decode($chat->additional_data,true);\n    \t    $elementsAdditional = array();\n    \t    if (is_array($paramsAdditional) && !empty($paramsAdditional)) {\n    \t        foreach ($paramsAdditional as $param) {\n    \t            $elementsAdditional[] = $param['key'].' - '.$param['value'];\n    \t        }\n    \t        \n    \t        $additional_data = implode(\"\\n\", $elementsAdditional);\n    \t    } else {\n    \t        $additional_data = $chat->additional_data;\n    \t    }\n    \t    \n    \t} else {\n    \t    $additional_data = '';\n    \t}\n    \t\n    \t$surveyContent = self::getSurveyContent($chat);\n    \t    \t\n    \tforeach ($emailRecipient as $receiver) {   \n    \t\t$veryfyEmail = \tsha1(sha1($receiver.$secretHash).$secretHash);\n    \t\t$mail->Body = str_replace(array('{survey}','{chat_duration}','{waited}','{created}','{user_left}','{user_name}','{chat_id}','{phone}','{name}','{email}','{message}','{additional_data}','{url_request}','{ip}','{department}','{url_accept}','{country}','{city}'), array($surveyContent, ($chat->chat_duration > 0 ? $chat->chat_duration_front : '-'), ($chat->wait_time > 0 ? $chat->wait_time_front : '-'), $chat->time_created_front, ($chat->user_closed_ts > 0 && $chat->user_status == 1 ? $chat->user_closed_ts_front : '-'),$chat->user_name,$chat->id,$chat->phone,$chat->nick,$chat->email,$messagesContent,$additional_data,$chat->referrer,erLhcoreClassIPDetect::getIP(),(string)$chat->department, erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('chat/accept').'/'.erLhcoreClassModelChatAccept::generateAcceptLink($chat).'/'.$veryfyEmail.'/'.$receiver,$chat->country_name,$chat->city), $sendMail->content);\n    \t\t$mail->AddAddress( $receiver );\n    \t\t$mail->Send();\n    \t\t$mail->ClearAddresses();\n    \t}\n    \t\n    \tif ($sendMail->bcc_recipients != '') {\n    \t\t$recipientsBCC = explode(',',$sendMail->bcc_recipients);\n    \t\tforeach ($recipientsBCC as $receiver) {\n    \t\t\t$receiver = trim($receiver);\n    \t\t\t$veryfyEmail = \tsha1(sha1($receiver.$secretHash).$secretHash);\n    \t\t\t$mail->Body = str_replace(array('{survey}','{chat_duration}','{waited}','{created}','{user_left}','{user_name}','{chat_id}','{phone}','{name}','{email}','{message}','{additional_data}','{url_request}','{ip}','{department}','{url_accept}','{country}','{city}'), array($surveyContent, ($chat->chat_duration > 0 ? $chat->chat_duration_front : '-'), ($chat->wait_time > 0 ? $chat->wait_time_front : '-'), $chat->time_created_front, ($chat->user_closed_ts > 0 && $chat->user_status == 1 ? $chat->user_closed_ts_front : '-'),$chat->user_name,$chat->id,$chat->phone,$chat->nick,$chat->email,$messagesContent,$additional_data,$chat->referrer,erLhcoreClassIPDetect::getIP(),(string)$chat->department, erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('chat/accept').'/'.erLhcoreClassModelChatAccept::generateAcceptLink($chat).'/'.$veryfyEmail.'/'.$receiver,$chat->country_name,$chat->city), $sendMail->content);\n    \t\t\t$mail->AddAddress( $receiver );\n    \t\t\t$mail->Send();\n    \t\t\t$mail->ClearAddresses();    \t\t\t\n    \t\t}\n    \t}\n    }\n\n    public static function getSurveyContent($chat)\n    {\n        $surveyContent = '';\n        include (erLhcoreClassDesign::designtpl('lhsurvey/forms/fields_names.tpl.php'));\n        \n        foreach (erLhAbstractModelSurveyItem::getList(array(\n            'filter' => array(\n                'chat_id' => $chat->id\n            )\n        )) as $survey_item) {\n            $survey = $survey_item->survey;\n            $surveyContent .= \"[[\" . (string) $survey_item->survey . \"]]\\n\";\n            for ($i = 0; $i < 16; $i ++) {\n                foreach ($sortOptions as $keyOption => $sortOption) {\n                    if ($survey->{$keyOption . '_pos'} == $i && $survey->{$keyOption . '_enabled'} == 1) {\n                        if ($sortOption['type'] == 'stars') {\n                            $surveyContent .= \"\\n==\" . $survey->{$sortOption['field'] . '_title'} . \"==\\n\";\n                            $surveyContent .= $survey_item->{$sortOption['field']} . \"\\n\";\n                        } elseif ($sortOption['type'] == 'question') {\n                            $surveyContent .= \"\\n==\" . $survey->{$sortOption['field']} . \"==\\n\";\n                            $surveyContent .= $survey_item->{$sortOption['field']} . \"\\n\";\n                        } elseif ($sortOption['type'] == 'question_options') {\n                            $surveyContent .= \"\\n==\" . $survey->{$sortOption['field']} . \"==\\n\";\n                            $options = $survey->{$sortOption['field'] . '_items_front'};\n                            if (isset($options[$survey_item->{$sortOption['field']} - 1])) {\n                                $surveyContent .= $options[$survey_item->{$sortOption['field']} - 1]['option'] . \"\\n\";\n                            } else {\n                                $surveyContent .= $survey_item->{$sortOption['field']} . \"\\n\";\n                            }\n                        }\n                    }\n                }\n            }\n            $surveyContent .= \"===========================\\n\";\n        }\n        \n        return $surveyContent == '' ? '-' : $surveyContent;\n    }\n    \n    public static function informFormFilled($formCollected, $params = array()) {\n    \t$sendMail = erLhAbstractModelEmailTemplate::fetch(8);\n        $sendMail->translate();\n\n    \t$mail = new PHPMailer();\n    \t$mail->CharSet = \"UTF-8\";\n    \t\n    \tif ($sendMail->from_email != '') {\n    \t\t$mail->From = $mail->Sender = $sendMail->from_email;\n    \t}\n    \t\n    \tif (isset($params['email']) && $params['email'] !== false && $params['email'] != '')\n    \t{\n    \t    $mail->AddReplyTo($params['email']);    \t    \n    \t}\n    \t\n    \t$mail->FromName = $sendMail->from_name;    \t\n    \t$mail->Subject = str_replace(array('{form_name}'),array($formCollected->form),$sendMail->subject);   \t     \t\n    \t$mail->Body = str_replace(array('{identifier}','{form_name}','{content}','{ip}','{url_download}','{url_view}'), array($formCollected->identifier,(string)$formCollected->form, $formCollected->form_content, $formCollected->ip, erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurldirect('user/login').'/(r)/'.rawurlencode(base64_encode('form/downloaditem/'.$formCollected->id)), erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurldirect('user/login').'/(r)/'.rawurlencode(base64_encode('form/viewcollected/'.$formCollected->id))), $sendMail->content);\n\n    \t$emailRecipient = array();\n    \tif ($formCollected->form->recipient != '') {\n    \t\t$emailRecipient = array($formCollected->form->recipient);\n    \t} elseif ($sendMail->recipient != '') {\n    \t\t$emailRecipient = array($sendMail->recipient);\n    \t}\n\n    \tif (!empty($emailRecipient)) {    \t\n\t    \tforeach ($emailRecipient as $receiver) {\n\t    \t\t$mail->AddAddress( $receiver );\n\t    \t}\n\t    \t\n\t    \tself::setupSMTP($mail);\n\t    \t\n\t    \tif ($sendMail->bcc_recipients != '') {\n\t    \t\t$recipientsBCC = explode(',',$sendMail->bcc_recipients);\n\t    \t\tforeach ($recipientsBCC as $recipientBCC) {\n\t    \t\t\t$mail->AddBCC(trim($recipientBCC));\n\t    \t\t}\n\t    \t}\n\t    \t\n\t    \t$mail->Send();\n\t    \t$mail->ClearAddresses();\n    \t}\n    }\n    \n    public static function informVisitorUnreadMessage(erLhcoreClassModelChat $chat)\n    {\n    \tif ($chat->email == '') {\n    \t\treturn ;\n    \t}\n    \t\n    \t$sendMail = erLhAbstractModelEmailTemplate::fetch(11);\n        $sendMail->translate($chat->chat_locale);\n\n    \t$mail = new PHPMailer();\n    \t$mail->CharSet = \"UTF-8\";\n\n    \t$fromSet = false;\n    \tif ($sendMail->from_email != '') {\n    \t\t$mail->Sender = $mail->From = $sendMail->from_email;\n    \t\t$fromSet = true;\n    \t}\n\n    \t$mail->FromName = $sendMail->from_name;\n\n    \tif ($sendMail->reply_to != '') {\n    \t\t$mail->AddReplyTo($sendMail->reply_to);\n    \t\tif ($fromSet == false) {\n    \t\t\t$mail->From = $sendMail->reply_to;\n    \t\t}\n    \t} elseif ($chat->user !== false) {\n    \t\t$mail->AddReplyTo($chat->user->email, $chat->user->name_support);\n    \t\tif ($fromSet == false) {\n    \t\t\t$mail->From = $chat->user->email;\n    \t\t}\n    \t}\n\n    \t$mail->Subject = $sendMail->subject;\n\n    \t$messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false, 'sort' => 'id DESC','filter' => array('chat_id' => $chat->id))));\n    \t$messagesContent = '';\n\n    \tforeach ($messages as $msg ) {\n    \t\tif ($msg->user_id != -1) {    \t\t\t\n    \t\t\t$messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. ($msg->user_id == 0 ? htmlspecialchars($chat->nick) : htmlspecialchars($msg->name_support)).': '.htmlspecialchars($msg->msg).\"\\n\";\n    \t\t}\n    \t}\n\n    \t$nameSupport = $chat->user !== false ? $chat->user->name_support : '';\n\n    \t$mail->Body = str_replace(array('{messages}','{operator}'), array($messagesContent, $nameSupport), $sendMail->content);\n\n    \tself::setupSMTP($mail);\n\n    \t$mail->AddAddress( $chat->email );\n    \t$mail->Send();\n    }\n    \n    public static function informChatClosed(erLhcoreClassModelChat $chat, $operator = false) {\n    \t$sendMail = erLhAbstractModelEmailTemplate::fetch(5);\n        $sendMail->translate();\n\n    \t$mail = new PHPMailer();\n    \t$mail->CharSet = \"UTF-8\";\n\n        if ($sendMail->from_email != '') {\n            $mail->Sender = $mail->From = $sendMail->from_email;\n        }\n\n        if($sendMail->from_email == '{chat_email}' && $chat->email != '') {\n            $mail->From = $chat->email;\n        }\n\n        $mail->FromName = $sendMail->from_name;\n        $mail->Subject = str_replace(array('{chat_id}','{department}'), array($chat->id,(string)$chat->department), $sendMail->subject);;\n\n        if($sendMail->from_name == '{chat_nick}' && $chat->nick != '') {\n            $mail->FromName = $chat->nick;\n        }\n\n    \t$messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false,'sort' => 'id DESC','filter' => array('chat_id' => $chat->id))));\n\n        // Fetch chat messages\n        $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n        $tpl->set('chat', $chat);\n        $tpl->set('messages', $messages);\n\n        $messagesContent = $tpl->fetch();\n\n        $emailRecipient = array();\n    \t$emailRecipientAll = array();\n    \t    \t    \t    \n    \tif ($chat->department !== false && ($chat->department->inform_close_all == 1 || $chat->department->inform_close == 1) && $chat->department->inform_close_all_email != '') {\n    \t    $emailRecipientAll = explode(',', $chat->department->inform_close_all_email);\n    \t}\n    \t    \t\n    \tif ($sendMail->recipient != '') { // This time we give priority to template recipients\n    \t\t$emailRecipient = explode(',',$sendMail->recipient);    \t\t\n    \t} elseif ($chat->department !== false && $chat->department->email != '' && $chat->department->inform_close == 1) {    \t\t\t\n    \t\t$emailRecipient = explode(',',$chat->department->email);    \t\t\n    \t} elseif (empty($emailRecipientAll)) { // Lets find first user and send him an e-mail\n    \t\t$list = erLhcoreClassModelUser::getUserList(array('limit' => 1,'sort' => 'id ASC'));\n    \t\t$user = array_pop($list);\n    \t\t$emailRecipient = array($user->email);\n    \t}\n    \t\n    \t$emailRecipient = array_unique(array_merge($emailRecipient,$emailRecipientAll));\n\n    \tself::setupSMTP($mail);\n    \t\n    \t$cfgSite = erConfigClassLhConfig::getInstance();\n    \t$secretHash = $cfgSite->getSetting( 'site', 'secrethash' );\n    \t\n    \tif ($sendMail->reply_to != '') {\n    \t    $mail->AddReplyTo($sendMail->reply_to,$sendMail->from_name);\n    \t} elseif ($chat->email != '') {    \t\n    \t\t$mail->AddReplyTo($chat->email, $chat->nick);\n    \t}\n    \t\n    \t// Format user friendly additional data\n    \tif ($chat->additional_data != '') {\n    \t    $paramsAdditional = json_decode($chat->additional_data,true);\n    \t    $elementsAdditional = array();\n    \t    if (is_array($paramsAdditional) && !empty($paramsAdditional)) {\n    \t        foreach ($paramsAdditional as $param) {\n    \t            $elementsAdditional[] = $param['key'].' - '.$param['value'];\n    \t        }\n    \t        \n    \t        $additional_data = implode(\"\\n\", $elementsAdditional);\n    \t    } else {\n    \t        $additional_data = $chat->additional_data;\n    \t    }\n    \t    \n    \t} else {\n    \t    $additional_data = '';\n    \t}\n    \t\n    \t$surveyContent = self::getSurveyContent($chat);\n\n    \tforeach ($emailRecipient as $receiver) {   \n    \t\t$veryfyEmail = \tsha1(sha1($receiver.$secretHash).$secretHash);\n    \t\t$mail->Body = str_replace(array('{survey}','{chat_duration}','{waited}','{created}','{user_left}','{chat_id}','{phone}','{name}','{email}','{message}','{additional_data}','{url_request}','{ip}','{department}','{url_accept}','{operator}','{country}','{city}'), array($surveyContent,($chat->chat_duration > 0 ? $chat->chat_duration_front : '-'), ($chat->wait_time > 0 ? $chat->wait_time_front : '-'), $chat->time_created_front, ($chat->user_closed_ts > 0 && $chat->user_status == 1 ? $chat->user_closed_ts_front : '-'),$chat->id,$chat->phone,$chat->nick,$chat->email,$messagesContent,$additional_data,$chat->referrer,$chat->ip,(string)$chat->department,erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('chat/accept').'/'.erLhcoreClassModelChatAccept::generateAcceptLink($chat).'/'.$veryfyEmail.'/'.$receiver,$operator,$chat->country_name,$chat->city), $sendMail->content);\n    \t\t$mail->AddAddress( $receiver );    \t\t    \t\t\n    \t\t$mail->Send();\n    \t\t$mail->ClearAddresses();\n    \t}\n    \t    \t\n    \tif ($sendMail->bcc_recipients != '') {\n    \t\t$recipientsBCC = explode(',',$sendMail->bcc_recipients);\n    \t\tforeach ($recipientsBCC as $receiver) {    \t\t\t\n    \t\t\t$receiver = trim($receiver);\n    \t\t\t$veryfyEmail = \tsha1(sha1($receiver.$secretHash).$secretHash);\n\t    \t\t$mail->Body = str_replace(array('{survey}','{chat_duration}','{waited}','{created}','{user_left}','{chat_id}','{phone}','{name}','{email}','{message}','{additional_data}','{url_request}','{ip}','{department}','{url_accept}','{operator}','{country}','{city}'), array($surveyContent,($chat->chat_duration > 0 ? $chat->chat_duration_front : '-'), ($chat->wait_time > 0 ? $chat->wait_time_front : '-'), $chat->time_created_front, ($chat->user_closed_ts > 0 && $chat->user_status == 1 ? $chat->user_closed_ts_front : '-'),$chat->id,$chat->phone,$chat->nick,$chat->email,$messagesContent,$additional_data,$chat->referrer,$chat->ip,(string)$chat->department,erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('chat/accept').'/'.erLhcoreClassModelChatAccept::generateAcceptLink($chat).'/'.$veryfyEmail.'/'.$receiver,$operator,$chat->country_name,$chat->city), $sendMail->content);\n\t    \t\t$mail->AddAddress( $receiver );    \t\t    \t\t\n\t    \t\t$mail->Send();\n\t    \t\t$mail->ClearAddresses();    \t\t\t \n    \t\t}\n    \t}    \t\n    \t\n    \t\n    }\n\n    public static function informVisitorReturned($item) {\n        $sendMail = erLhAbstractModelEmailTemplate::fetch(12);\n        $sendMail->translate();\n\n        $mail = new PHPMailer();\n        $mail->CharSet = \"UTF-8\";\n\n        if ($sendMail->from_email != '') {\n            $mail->Sender = $mail->From = $sendMail->from_email;\n        }\n\n        $chat = $item->chat;\n\n        if (!($chat instanceof erLhcoreClassModelChat)) {\n            $chat = erLhcoreClassModelChat::findOne(array('sort' => '`id` DESC','filter' => array('online_user_id' => $item->id)));\n        }\n\n        if ($sendMail->from_email == '{chat_email}' && $chat instanceof erLhcoreClassModelChat && $chat->email != '') {\n            $mail->From = $item->chat->email;\n        }\n\n        $mail->FromName = $sendMail->from_name;\n\n        $mail->Subject = str_replace(array('{username}'), array($item->nick), $sendMail->subject);;\n\n        $mail->FromName = $item->nick;\n\n        $emailRecipient = array();\n\n        $attr = $item->online_attr_system_array;\n        foreach ($attr['lhc_ir'] as $userId) {\n            $userData = erLhcoreClassModelUser::fetch($userId);\n            if ($userData instanceof erLhcoreClassModelUser) {\n                $emailRecipient[] = $userData->email;\n            }\n        }\n\n        if (empty($emailRecipient) && $sendMail->recipient != '') { // This time we give priority to template recipients\n            $emailRecipient = explode(',',$sendMail->recipient);\n        }\n\n        if (empty($emailRecipient)) { // Lets find first user and send him an e-mail\n            $list = erLhcoreClassModelUser::getUserList(array('limit' => 1,'sort' => 'id ASC'));\n            $user = array_pop($list);\n            $emailRecipient = array($user->email);\n        }\n\n        self::setupSMTP($mail);\n\n        if ($sendMail->reply_to != '') {\n            $mail->AddReplyTo($sendMail->reply_to,$sendMail->from_name);\n        } elseif ($chat instanceof erLhcoreClassModelChat && $chat->email != '') {\n            $mail->AddReplyTo($chat->email, $chat->nick);\n        }\n\n        $messagesContent = '-';\n        $additional_data = '-';\n\n        if ($chat instanceof erLhcoreClassModelChat) {\n\n            $messagesContent = '';\n\n            $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false,'sort' => 'id DESC', 'filter' => array('chat_id' => $chat->id))));\n            foreach ($messages as $msg ) {\n                if ($msg->user_id == -1) {\n                    $messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. erTranslationClassLhTranslation::getInstance()->getTranslation('chat/syncadmin','System assistant').': '.htmlspecialchars($msg->msg).\"\\n\";\n                } else {\n                    $messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. ($msg->user_id == 0 ? htmlspecialchars($chat->nick) : htmlspecialchars($msg->name_support)).': '.htmlspecialchars($msg->msg).\"\\n\";\n                }\n            }\n\n            // Format user friendly additional data\n            if ($chat->additional_data != '') {\n                $paramsAdditional = json_decode($chat->additional_data,true);\n                $elementsAdditional = array();\n                if (is_array($paramsAdditional) && !empty($paramsAdditional)) {\n                    foreach ($paramsAdditional as $param) {\n                        $elementsAdditional[] = $param['key'].' - '.$param['value'];\n                    }\n                    $additional_data = implode(\"\\n\", $elementsAdditional);\n                } else {\n                    $additional_data = $chat->additional_data;\n                }\n            }\n        }\n\n        foreach ($emailRecipient as $receiver) {\n            $appendURL = erLhcoreClassDesign::baseurldirect('user/login').'/(r)/'.rawurlencode(base64_encode('chat/onlineusers?search='.$item->nick));\n\n            $mail->Body = str_replace(array(\n                '{chat_duration}',\n                '{waited}',\n                '{created}',\n                '{user_left}',\n                '{chat_id}',\n                '{phone}',\n                '{name}',\n                '{email}',\n                '{message}',\n                '{additional_data}',\n                '{url_request}',\n                '{ip}',\n                '{department}',\n                '{url_accept}',\n                '{country}',\n                '{city}'\n            ), array(\n                ($chat instanceof erLhcoreClassModelChat && $chat->chat_duration > 0 ? $chat->chat_duration_front : '-'),\n                ($chat instanceof erLhcoreClassModelChat && $chat->wait_time > 0 ? $chat->wait_time_front : '-'),\n                ($chat instanceof erLhcoreClassModelChat ? $chat->time_created_front : '-'),\n                ($chat instanceof erLhcoreClassModelChat && $chat->user_closed_ts > 0 && $chat->user_status == 1 ? $chat->user_closed_ts_front : '-'),\n                ($chat instanceof erLhcoreClassModelChat ? $chat->id : '-'),\n                ($chat instanceof erLhcoreClassModelChat ? $chat->phone : '-'),\n                $item->nick,\n                ($chat instanceof erLhcoreClassModelChat ? $chat->email : '-'),\n                $messagesContent,\n                $additional_data,\n                $item->referrer,\n                $item->ip,\n                ($chat instanceof erLhcoreClassModelChat ? (string)$chat->department : '-'),\n                erLhcoreClassSystem::getHost() . $appendURL,\n                $item->user_country_name,\n                $item->city),\n                $sendMail->content);\n\n            $mail->AddAddress( $receiver );\n            $mail->Send();\n            $mail->ClearAddresses();\n        }\n\n        if ($sendMail->bcc_recipients != '') {\n            $recipientsBCC = explode(',',$sendMail->bcc_recipients);\n            foreach ($recipientsBCC as $receiver) {\n\n                $appendURL = erLhcoreClassDesign::baseurldirect('user/login').'/(r)/'.rawurlencode(base64_encode('chat/onlineusers?search='.$item->nick));\n\n                $mail->Body = str_replace(array(\n                    '{chat_duration}',\n                    '{waited}',\n                    '{created}',\n                    '{user_left}',\n                    '{chat_id}',\n                    '{phone}',\n                    '{name}',\n                    '{email}',\n                    '{message}',\n                    '{additional_data}',\n                    '{url_request}',\n                    '{ip}',\n                    '{department}',\n                    '{url_accept}',\n                    '{country}',\n                    '{city}'\n                ), array(\n                    ($chat instanceof erLhcoreClassModelChat && $chat->chat_duration > 0 ? $chat->chat_duration_front : '-'),\n                    ($chat instanceof erLhcoreClassModelChat && $chat->wait_time > 0 ? $chat->wait_time_front : '-'),\n                    ($chat instanceof erLhcoreClassModelChat ? $chat->time_created_front : '-'),\n                    ($chat instanceof erLhcoreClassModelChat && $chat->user_closed_ts > 0 && $chat->user_status == 1 ? $chat->user_closed_ts_front : '-'),\n                    ($chat instanceof erLhcoreClassModelChat ? $chat->id : '-'),\n                    ($chat instanceof erLhcoreClassModelChat ? $chat->phone : '-'),\n                    $item->nick,\n                    ($chat instanceof erLhcoreClassModelChat ? $chat->email : '-'),\n                    $messagesContent,\n                    $additional_data,\n                    $item->referrer,\n                    $item->ip,\n                    ($chat instanceof erLhcoreClassModelChat ? (string)$chat->department : '-'),\n                    erLhcoreClassSystem::getHost() . $appendURL,\n                    $item->user_country_name,\n                    $item->city),\n                    $sendMail->content);\n\n                $receiver = trim($receiver);\n\n                $mail->AddAddress( $receiver );\n                $mail->Send();\n                $mail->ClearAddresses();\n            }\n        }\n    }\n}\n\n?>\n", "<?php\n\nclass CSCacheAPC {\n\n    static private $m_objMem = NULL;\n    public $cacheEngine = null;\n    public $cacheGlobalKey = null;\n    public $cacheGlobalKeyAppend = null;\n    \n    public $cacheKeys = array(\n    'site_version'             // Global site version\n    );\n\n    public function increaseImageManipulationCache()\n    {\n        $this->increaseCacheVersion('site_version');\n    }\n\n    function setSession($identifier, $value, $useGlobalCache = false, $skipSession = false)\n    {\n    \tif ($skipSession == false){\n    \t\t$_SESSION[$identifier] = $value;\n    \t}\n\n    \tif ($useGlobalCache == true) {\n    \t\t$GLOBALS[$identifier] = $value;\n    \t}\n    }\n\n    function appendToArray($identifier, $value)\n    {\n    \tif (isset($_SESSION[$identifier]) && in_array($value, $_SESSION[$identifier])){\n    \t\treturn ;\n    \t}\n\n    \t$_SESSION[$identifier][] = $value;\n    }\n\n    function removeFromArray($identifier, $value)\n    {\n    \tif (isset($_SESSION[$identifier]) && is_array($_SESSION[$identifier]) && ($index = array_search($value, $_SESSION[$identifier])) !== false){\n    \t\tunset($_SESSION[$identifier][$index]);\n    \t}\n    }\n\n    function getArray($identifier)\n    {\n    \tif (isset($_SESSION[$identifier]) && is_array($_SESSION[$identifier])){\n    \t\treturn $_SESSION[$identifier];\n    \t}\n\n    \treturn array();\n    }\n\n    function getSession($identifier, $useGlobalCache = false) {\n\n    \tif (isset($_SESSION[$identifier])){\n    \t\treturn $_SESSION[$identifier];\n    \t}\n\n    \tif ($useGlobalCache == true) {\n    \t\tif (isset($GLOBALS[$identifier])) {\n    \t\t\treturn $GLOBALS[$identifier];\n    \t\t}\n    \t}\n\n    \treturn false;\n    }\n    \n    function restoreMulti($keys)\n    {\n        if ($this->cacheEngine != null) {\n            return $this->cacheEngine->get($keys);\n        }\n    \n        return array();\n    }\n    \n    function __construct() {\n\n        $cacheEngineClassName = erConfigClassLhConfig::getInstance()->getSetting( 'cacheEngine', 'className' );\n        $this->cacheGlobalKey = erConfigClassLhConfig::getInstance()->getSetting( 'cacheEngine', 'cache_global_key' ) . $this->cacheGlobalKeyAppend;\n\n        if ($cacheEngineClassName !== false)\n        {\n            $this->cacheEngine = new $cacheEngineClassName();\n        }\n    }\n\n    function __destruct() {\n\n    }\n\n    static function getMem() {\n        if (self::$m_objMem == NULL) {\n            self::$m_objMem = new CSCacheAPC();\n        }\n        return self::$m_objMem;\n    }\n\n    function delete($key) {\n        if (isset($GLOBALS[$key])) unset($GLOBALS[$key]);\n\n        if ( $this->cacheEngine != null )\n        {\n            $this->cacheEngine->set($this->cacheGlobalKey.$key,false,0);\n        }\n    }\n\n    function restore($key) {\n\n        if (isset($GLOBALS[$key]) && $GLOBALS[$key] !== false) return $GLOBALS[$key];\n\n        if ( $this->cacheEngine != null )\n        {\n            $GLOBALS[$key] = $this->cacheEngine->get($this->cacheGlobalKey.$key);\n        } else {\n            $GLOBALS[$key] = false;\n        }\n\n        return $GLOBALS[$key];\n    }\n\n    function getCacheVersion($cacheVariable, $valuedefault = 1, $ttl = 0)\n    {\n\n        if (isset($GLOBALS['CacheKeyVersion_'.$cacheVariable])) return $GLOBALS['CacheKeyVersion_'.$cacheVariable];\n\n        if ( $this->cacheEngine != null )\n        {\n            if (($version = $this->cacheEngine->get($this->cacheGlobalKey.$cacheVariable)) == false){\n                $version = $valuedefault;\n                $this->cacheEngine->set($this->cacheGlobalKey.$cacheVariable,$version,0,$ttl);\n                $GLOBALS['CacheKeyVersion_'.$cacheVariable] = $valuedefault;\n            } else $GLOBALS['CacheKeyVersion_'.$cacheVariable] = $version;\n\n        } else {\n            $version = $valuedefault;\n            $GLOBALS['CacheKeyVersion_'.$cacheVariable] = $valuedefault;\n        }\n\n        return $version;\n    }\n\n    function increaseCacheVersion($cacheVariable, $valuedefault = 1, $ttl = 0)\n    {\n        if ( $this->cacheEngine != null )\n        {\n            if (($version = $this->cacheEngine->get($this->cacheGlobalKey.$cacheVariable)) == false) {\n                 $this->cacheEngine->set($this->cacheGlobalKey.$cacheVariable,$valuedefault,0,$ttl);\n                 $GLOBALS['CacheKeyVersion_'.$cacheVariable] = $valuedefault;\n            } else {$this->cacheEngine->increment($this->cacheGlobalKey.$cacheVariable,$version+1);$GLOBALS['CacheKeyVersion_'.$cacheVariable] = $version+1;}\n\n        } else {\n            $GLOBALS['CacheKeyVersion_'.$cacheVariable] = $valuedefault;\n        }\n    }\n\n    function store($key, $value, $ttl = 720000) {\n        if ( $this->cacheEngine != null )\n        {\n            $GLOBALS[$key] = $value;\n            $this->cacheEngine->set($this->cacheGlobalKey.$key,$value,0,$ttl);\n        } else {\n           $GLOBALS[$key] = $value;\n        }\n    }\n}\n\nclass erLhcoreClassSystem{\n\n    protected $Params;\n\n    public function __construct(){\n        $this->Params = array(\n            'PHP_OS' => PHP_OS,\n            'DIRECTORY_SEPARATOR' => DIRECTORY_SEPARATOR,\n            'PATH_SEPARATOR' => PATH_SEPARATOR,\n            '_SERVER' => $_SERVER,\n        );\n\n        if ( isset( $this->Params['_SERVER']['REQUEST_TIME'] ) )\n        {\n            // REQUEST_TIME is a float and includes microseconds in PHP > 5.4.0\n            // It should be casted to int in order to keep BC\n            $this->Params['_SERVER']['REQUEST_TIME'] = (int)$this->Params['_SERVER']['REQUEST_TIME'];\n        }\n\n        $this->Attributes = array( 'magickQuotes' => true,\n                                   'hostname'     => true );\n        $this->FileSeparator = $this->Params['DIRECTORY_SEPARATOR'];\n        $this->EnvSeparator  = $this->Params['PATH_SEPARATOR'];\n\n        // Determine OS specific settings\n        if ( $this->Params['PHP_OS'] === 'WINNT' )\n        {\n            $this->OSType = \"win32\";\n            $this->OS = \"windows\";\n            $this->FileSystemType = \"win32\";\n            $this->LineSeparator = \"\\r\\n\";\n            $this->ShellEscapeCharacter = '\"';\n            $this->BackupFilename = '.bak';\n        }\n        else\n        {\n            $this->OSType = 'unix';\n            if ( $this->Params['PHP_OS'] === 'Linux' )\n            {\n                $this->OS = 'linux';\n            }\n            else if ( $this->Params['PHP_OS'] === 'FreeBSD' )\n            {\n                $this->OS = 'freebsd';\n            }\n            else if ( $this->Params['PHP_OS'] === 'Darwin' )\n            {\n                $this->OS = 'darwin';\n            }\n            else\n            {\n                $this->OS = false;\n            }\n            $this->FileSystemType = \"unix\";\n            $this->LineSeparator = \"\\n\";\n            $this->ShellEscapeCharacter = \"'\";\n            $this->BackupFilename = '~';\n        }\n    }\n\n    public static function autoload($className)\n    {\n        if (strpos($className,'LiveHelperChatExtension\\\\') !== false) {\n            $className = str_replace('LiveHelperChatExtension\\\\','',$className);\n            $file = '.' . DIRECTORY_SEPARATOR . 'extension' . DIRECTORY_SEPARATOR . str_replace('\\\\',DIRECTORY_SEPARATOR, $className) . '.php';\n        } else {\n            $file = '.' . DIRECTORY_SEPARATOR . 'lib' . DIRECTORY_SEPARATOR . 'vendor_lhc' . DIRECTORY_SEPARATOR . str_replace('\\\\',DIRECTORY_SEPARATOR, $className) . '.php';\n        }\n\n        if (file_exists($file)) {\n            require_once $file;\n        }\n\n        return false;\n    }\n\n    public static function instance()\n    {\n        if ( is_null( self::$instance ) )\n        {\n            self::$instance = new erLhcoreClassSystem();\n        }\n        return self::$instance;\n    }\n\n\n    /**\n     * Generate wwwdir from phpSelf if valid accoring to scriptFileName\n     * and return null if invalid and false if there is no index in phpSelf\n     *\n     * @param string $phpSelf\n     * @param string $scriptFileName\n     * @param string $index\n     * @return string|null|false String in form 'path/path2' if valid, null if not\n     *                           and false if $index is not  part of phpself\n     */\n    protected static function getValidwwwDir( $phpSelf, $scriptFileName, $index )\n    {\n        if ( !isset( $phpSelf[1] ) || strpos( $phpSelf, $index ) === false )\n            return false;\n\n        // validate $index straight away\n        if ( strpos( $scriptFileName, $index ) === false )\n            return null;\n\n        // optimize '/index.php' pattern\n        if ( $phpSelf === \"/{$index}\" )\n            return '';\n\n        $phpSelfParts = explode( $index, $phpSelf );\n        $validateDir = $phpSelfParts[0];\n        // remove first path if home dir\n        if ( $phpSelf[1] === '~' )\n        {\n            $uri = explode( '/', ltrim( $validateDir, '/' ) );\n            array_shift( $uri );\n            $validateDir = '/' . implode( '/', $uri );\n        }\n\n        // validate direclty with phpself part\n        if ( strpos( $scriptFileName, $validateDir ) !== false )\n            return trim( $phpSelfParts[0], '/' );\n\n        // validate with windows path\n        if ( strpos( $scriptFileName, str_replace( '/', '\\\\', $validateDir ) ) !== false )\n            return trim( $phpSelfParts[0], '/' );\n\n        return null;\n    }\n    \n    /*\n     * Vulnerability: SC-1628\n     * Name: SSL cookie without secure flag set\n     * Type: Web Servers\n     * Asset Group: Network Segment\n     *\n     * URI: /index.php/chat/startchat\n     * Other Info: PHPSESSID=4fqbt1u2k5ci475ieiku4aaie0; path=/; HttpOnly\n     *\n     * Source: SureCloud\n     */\n    // https://bugs.php.net/bug.php?id=49184\n    // https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=730094\n    private static function setSecureCookieIfRequired()\n    {\t    \n\t    if ( (!empty($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) !== 'off') || ((!empty($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') || (!empty($_SERVER['HTTP_X_FORWARDED_SSL']) && $_SERVER['HTTP_X_FORWARDED_SSL'] == 'on'))){\n\t    \t@ini_set('session.cookie_secure',1);\n\t    \tself::$httpsMode = true;\n\t    }\t    \n    }\n    \n    static function init()\n    {\n        $index = 'index.php';\n        $forceVirtualHost = null;\n\n        $instance = erLhcoreClassSystem::instance();\n\n \t\t$instance       = self::instance();\n        $server         = $instance->Params['_SERVER'];\n        $phpSelf        = $server['PHP_SELF'];\n        $requestUri     = $server['REQUEST_URI'];\n        $scriptFileName = $server['SCRIPT_FILENAME'];\n        $siteDir        = rtrim( str_replace( $index, '', $scriptFileName ), '\\/' ) . '/';\n        $wwwDir         = '';\n        $IndexFile      = '';\n        $queryString    = '';\n\n        $cfg = erConfigClassLhConfig::getInstance();\n        $lhcForceVirtualHost = $cfg->getSetting( 'site', 'force_virtual_host', false);\n        \n        self::$proxyMode = $cfg->getSetting( 'site', 'proxy_mode', false);\n\n        // see if we can use phpSelf to determin wwwdir\n        $tempwwwDir = self::getValidwwwDir( $phpSelf, $scriptFileName, $index );\n        if ( $tempwwwDir !== null && $tempwwwDir !== false )\n        {\n            // Force virual host or Auto detect IIS vh mode & Apache .htaccess mode\n            if ( $forceVirtualHost\n              || ( isset( $server['IIS_WasUrlRewritten'] ) && $server['IIS_WasUrlRewritten'] )\n              || ( isset( $server['REDIRECT_URL'] ) && isset( $server['REDIRECT_STATUS'] ) && $server['REDIRECT_STATUS'] == '200' ) )\n            {\n                if ( $tempwwwDir )\n                {\n                    $wwwDir = '/' . $tempwwwDir;\n                    $wwwDirPos = strpos( $requestUri, $wwwDir );\n                    if ( $wwwDirPos !== false )\n                    {\n                        $requestUri = substr( $requestUri, $wwwDirPos + strlen($wwwDir) );\n                    }\n                }\n            }\n            else // Non virtual host mode, use $tempwwwDir to figgure out paths\n            {\n                $indexDir = $index;\n                if ( $tempwwwDir )\n                {\n                    $wwwDir  = '/' . $tempwwwDir;\n                    $indexDir = $wwwDir . '/' . $indexDir;\n                }\n                $IndexFile = '/' . $index;\n\n                // remove sub path from requestUri\n                $indexDirPos = strpos( $requestUri, $indexDir );\n                if ( $indexDirPos !== false )\n                {\n                    if ($lhcForceVirtualHost === false) {                     \n                        $requestUri = substr( $requestUri, $indexDirPos + strlen($indexDir) );\n                    }\n                }\n                elseif ( $wwwDir )\n                {\n                    $wwwDirPos = strpos( $requestUri, $wwwDir );\n                    if ( $wwwDirPos !== false )\n                    {\n                        $requestUri = substr( $requestUri, $wwwDirPos + strlen($wwwDir) );\n                    }\n                }\n            }\n        }\n\n        // remove url and hash parameters\n        if ( isset( $requestUri[1] ) && $requestUri !== '/'  )\n        {\n            $uriGetPos = strpos( $requestUri, '?' );\n            if ( $uriGetPos !== false )\n            {\n                $queryString = substr( $requestUri, $uriGetPos );\n                if ( $uriGetPos === 0 )\n                    $requestUri = '';\n                else\n                    $requestUri = substr( $requestUri, 0, $uriGetPos );\n            }\n\n            $uriHashPos = strpos( $requestUri, '#' );\n            if ( $uriHashPos === 0 )\n                $requestUri = '';\n            elseif ( $uriHashPos !== false )\n                $requestUri = substr( $requestUri, 0, $uriHashPos );\n        }\n\n        // normalize slash use and url decode url if needed\n        if ( $requestUri === '/' || $requestUri === '' )\n        {\n            $requestUri = '';\n        }\n        else\n        {\n            $requestUri = '/' . urldecode( trim( $requestUri, '/ ' ) );\n        }\n\n        if ( ($pos = strpos($requestUri,'index.php')) !== false ) {\n        \t$requestUri = substr($requestUri,$pos+9);\n        }\n\n        $instance->SiteDir    = $siteDir;\n        $instance->WWWDirImages = $instance->WWWDir = $wwwDir;\n        $instance->IndexFile  = $lhcForceVirtualHost === false ? '/index.php' : '';\n        $instance->RequestURI = str_replace('//','/',$requestUri);\n        $instance->QueryString = $queryString;\n        $instance->WWWDirLang = '';\n        \n        self::setSecureCookieIfRequired();\n    }\n    \n    public static function setSiteAccess($siteaccess) {\n    \t \n    \t$cfgSite = erConfigClassLhConfig::getInstance();\n    \t \n    \t$availableSiteaccess = $cfgSite->getSetting( 'site', 'available_site_access' );\n    \t$defaultSiteAccess = $cfgSite->getSetting( 'site', 'default_site_access' );\n    \t\t\n    \tif ($defaultSiteAccess != $siteaccess && in_array($siteaccess, $availableSiteaccess)) {\n    \t\t$optionsSiteAccess = $cfgSite->getSetting('site_access_options',$siteaccess);\n    \t\terLhcoreClassSystem::instance()->Language = $optionsSiteAccess['locale'];\n    \t\terLhcoreClassSystem::instance()->ThemeSite = $optionsSiteAccess['theme'];\n    \t\terLhcoreClassSystem::instance()->ContentLanguage = $optionsSiteAccess['content_language'];\n    \t\terLhcoreClassSystem::instance()->WWWDirLang = '/'.$siteaccess;\n    \t\terLhcoreClassSystem::instance()->SiteAccess = $siteaccess;\n    \t} else {\n    \t\t$optionsSiteAccess = $cfgSite->getSetting('site_access_options',$defaultSiteAccess);\n    \t\terLhcoreClassSystem::instance()->SiteAccess = $defaultSiteAccess;\n    \t\terLhcoreClassSystem::instance()->Language = $optionsSiteAccess['locale'];\n    \t\terLhcoreClassSystem::instance()->ThemeSite = $optionsSiteAccess['theme'];\n    \t\terLhcoreClassSystem::instance()->WWWDirLang = '';\n    \t\terLhcoreClassSystem::instance()->ContentLanguage = $optionsSiteAccess['content_language'];\n    \t}\n    \t \n    \terTranslationClassLhTranslation::getInstance()->initLanguage();\n    }\n    \n    public static function setSiteAccessByLocale($locale) {\n    \t$cfgSite = erConfigClassLhConfig::getInstance();\n    \t$site_languages = $cfgSite->getSetting( 'site', 'available_site_access');\n    \tforeach ($site_languages as $siteaccess) {    \t\t\n    \t\t$siteAccessOptions =  $cfgSite->getSetting( 'site_access_options', $siteaccess);    \t\t\n    \t\tif ($siteAccessOptions['locale'] == $locale) {\n    \t\t\tself::setSiteAccess($siteaccess);\n    \t\t\tbreak;\n    \t\t}    \t\t\n    \t}\n    }\n\n    public static function validHttpHost($host) {\n        return substr_count($host, '.') <= 100\n            && substr_count($host, ':') <= 100\n            && preg_match('/^\\[?(?:[a-zA-Z0-9-:\\]_]+\\.?)+$/', $host)\n            && self::isTrustedHost($host);\n    }\n\n    // Borrowed from Drupal\n    public static function isTrustedHost($host) {\n        $trusted_host_patterns = erConfigClassLhConfig::getInstance()->getSetting( 'site', 'trusted_host_patterns', false);\n        if (PHP_SAPI !== 'cli' && is_array($trusted_host_patterns) && !empty($trusted_host_patterns)) {\n            foreach ($trusted_host_patterns as $pattern) {\n                $pattern = sprintf('{%s}i', str_replace('}', '\\\\}', $pattern));\n                if (preg_match($pattern, $host)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return false;\n    }\n\n    public static function getHost() {\n\n        static $site_address = null;\n\n        if ($site_address !== null) {\n            return $site_address;\n        }\n\n        if (isset($_SERVER['HTTP_HOST']) && self::validHttpHost($_SERVER['HTTP_HOST'])) {\n            $site_address = (erLhcoreClassSystem::$httpsMode == true || erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value == 'https:' ? 'https:' : 'http:') . '//' . $_SERVER['HTTP_HOST'] ;\n        } else if (class_exists('erLhcoreClassInstance')) {\n            $site_address = 'https://' . erLhcoreClassInstance::$instanceChat->address . '.' . erConfigClassLhConfig::getInstance()->getSetting( 'site', 'seller_domain');\n        } else if (($site_address = erConfigClassLhConfig::getInstance()->getSetting( 'site', 'site_address', false)) && $site_address != '') {\n            return $site_address;\n        } else if (class_exists('erLhcoreClassExtensionLhcphpresque')) {\n            $site_address = erLhcoreClassModule::getExtensionInstance('erLhcoreClassExtensionLhcphpresque')->settings['site_address'];\n        } elseif (isset($_SERVER['HTTP_HOST']) && (!is_array(erConfigClassLhConfig::getInstance()->getSetting( 'site', 'trusted_host_patterns', false)) || empty(erConfigClassLhConfig::getInstance()->getSetting( 'site', 'trusted_host_patterns', false)))) {\n            $site_address = (erLhcoreClassSystem::$httpsMode == true || erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value == 'https:' ? 'https:' : 'http:') . '//' . $_SERVER['HTTP_HOST'] ; // trust only if match array not set\n        } else {\n            $site_address = 'http://localhost'; // We could not determine any valid host\n        }\n\n        return $site_address;\n    }\n\n    function wwwDir()\n    {\n        return (self::$prependDomain ? (self::$httpsMode == true ? 'https:' : '') . '//' . $_SERVER['HTTP_HOST'] : '') . $this->WWWDir;\n    }\n\n    function wwwImagesDir()\n    {\n    \treturn $this->WWWDirImages;\n    }\n\n    public static $prependDomain = false;\n\n    public static $httpsMode = false;\n\n    public static $proxyMode = false;\n\n    public $backgroundMode = false;\n\n    /// The path to where all the code resides\n    public $SiteDir;\n    /// The access path of the current site view\n    /// The relative directory path of the vhless setup\n    public $WWWDir;\n        \n    public $WWWDirImages;\n\n    // The www dir used in links formating\n    public $WWWDirLang;\n\n    /// The filepath for the index\n    public $IndexFile;\n    /// The uri which is used for parsing module/view information from, may differ from $_SERVER['REQUEST_URI']\n    public $RequestURI;\n    /// The type of filesystem, is either win32 or unix. This often used to determine os specific paths.\n\n    /// Current language\n    public $Language;\n\n    // Content language\n    public $ContentLanguage;\n\n    /// Theme site\n    public $ThemeSite;\n\n    public $SiteAccess;\n\n    public $MobileDevice = false;\n\n\n    private static $instance = null;\n\n}\n\n\n?>", "<?php\r\n\r\nclass erLhcoreClassUpdate\r\n{\r\n\tconst DB_VERSION = 269;\r\n\tconst LHC_RELEASE = 397;\r\n\r\n\tpublic static function doTablesUpdate($definition){\r\n\t\t$updateInformation = self::getTablesStatus($definition);\r\n\t\t$db = ezcDbInstance::get();\r\n\r\n        $errorMessages = array();\r\n\r\n\t\ttry {\r\n            $db->query('SET GLOBAL innodb_strict_mode = 0;');\r\n            $db->query('SET GLOBAL innodb_file_per_table=1;');\r\n            $db->query('SET GLOBAL innodb_large_prefix=1;');\r\n        } catch (Exception $e) {\r\n            //$errorMessages[] = $e->getMessage();\r\n        }\r\n\r\n\t\tforeach ($updateInformation as $table => $tableData) {\r\n\t\t\tif ($tableData['error'] == true) {\r\n\t\t\t\tforeach ($tableData['queries'] as $query) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t$db->query($query);\r\n\t\t\t\t\t} catch (Exception $e) {\r\n\t\t\t\t\t\t$errorMessages[] = $e->getMessage();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn $errorMessages;\r\n\t}\r\n\t\r\n\tpublic static function getTablesStatus($definition){\r\n\t\t$db = ezcDbInstance::get();\r\n\t\t\r\n\t\t$tablesStatus = array();\r\n\t\t\r\n\t\t// Get archive tables\t\t\r\n\t\t$archives = erLhcoreClassModelChatArchiveRange::getList(array('ignore_fields' => array('year_month','range_from','range_to','older_than','last_id','first_id'),'offset' => 0, 'limit' => 1000000,'sort' => 'id ASC'));\r\n\t\t\t\r\n\t\tif (isset($definition['tables']['lh_chat']) && isset($definition['tables']['lh_msg']))\r\n\t\t{\r\n    \t\t// Update archives tables also\r\n    \t\tforeach ($archives as $archive) {\r\n    \t\t    $archive->setTables();\r\n    \t\t    $definition['tables'][erLhcoreClassModelChatArchiveRange::$archiveTable] = $definition['tables']['lh_chat'];\r\n    \t\t    $definition['tables'][erLhcoreClassModelChatArchiveRange::$archiveMsgTable] = $definition['tables']['lh_msg'];\r\n    \t\t}\r\n\t\t}\r\n\r\n\t\tif (isset($definition['tables_collation'])){\r\n            foreach ($definition['tables_collation'] as $table => $dataTableCollation) {\r\n                $tablesStatus[$table] = array('error' => false, 'status' => '', 'queries' => array());\r\n                try {\r\n                    $stmt = $db->prepare(\"show table status like '{$table}'\");\r\n                    $stmt->execute();\r\n                    $tableData = $stmt->fetch(PDO::FETCH_ASSOC);\r\n\r\n                    if (!empty($tableData) && $tableData['collation'] != $dataTableCollation) {\r\n                        $tablesStatus[$table]['queries'][] = \"ALTER TABLE `{$table}` COMMENT='' COLLATE '{$dataTableCollation}';\";\r\n                        $tablesStatus[$table]['error'] = true;\r\n                        $tablesStatus[$table]['status'] = \"{$table} collation {$tableData['collation']} mismatch expected {$dataTableCollation}\";\r\n                    }\r\n\r\n                } catch (Exception $e) {\r\n                    // Just not existing table perhaps\r\n                }\r\n            }\r\n        }\r\n\r\n\t\tforeach ($definition['tables'] as $table => $tableDefinition) {\r\n\r\n\t\t    if (!isset( $tablesStatus[$table])) {\r\n                $tablesStatus[$table] = array('error' => false, 'status' => '', 'queries' => array());\r\n            }\r\n\r\n\t\t\ttry {\r\n\t\t\t\t$sql = 'SHOW FULL COLUMNS FROM '.$table;\r\n\t\t\t\t$stmt = $db->prepare($sql);\r\n\t\t\t\t$stmt->execute();\r\n\t\t\t\t$columnsData = $stmt->fetchAll(PDO::FETCH_ASSOC);\t\t\t\t\r\n\t\t\t\t$columnsDesired = (array)$tableDefinition;\r\n\r\n\t\t\t\t$status = array();\r\n\t\t\t\t$fieldsHandled = array();\r\n\t\t\t\t$existingColumns = array();\r\n\t\t\t\t\r\n\t\t\t\tforeach ($columnsData as $column) {\r\n\t\t\t\t    $existingColumns[] = $column['field'];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tforeach ($columnsData as $column) {\r\n\t\t\t\t\tif (isset($definition['tables_alter'][$table][$column['field']])) {\r\n\t\t\t\t\t    \r\n\t\t\t\t\t    if (!in_array($definition['tables_alter'][$table][$column['field']]['new'], $existingColumns)) {\r\n    \t\t\t\t\t\t$status[] = '['.$column['field'] . \"] field will be renamed\";\r\n    \t\t\t\t\t\t$tablesStatus[$table]['queries'][] = $definition['tables_alter'][$table][$column['field']]['sql'];\r\n    \t\t\t\t\t\t$fieldsHandled[] = $definition['tables_alter'][$table][$column['field']]['new'];\r\n\t\t\t\t\t    } else {\r\n\t\t\t\t\t        $status[] = '['.$column['field'] . \"] field will be dropped\";\r\n\t\t\t\t\t        $tablesStatus[$table]['queries'][] = \"ALTER TABLE `{$table}` DROP `{$column['field']}`,COMMENT=''\";\r\n\t\t\t\t\t    }\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (isset($definition['tables_drop_column'][$table])) {\r\n\t\t\t\t\t    if (in_array($column['field'], $definition['tables_drop_column'][$table])) {\r\n    \t\t\t\t\t\t$status[] = '['.$column['field'] . \"] field will be dropped\";\r\n                            $tablesStatus[$table]['queries'][] = \"ALTER TABLE `{$table}` DROP `{$column['field']}`,COMMENT=''\";\r\n\t\t\t\t\t    }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$tableDataChanged = false;\r\n\t\t\t\t$queriesChangeType = array();\r\n\r\n\t\t\t\tforeach ($columnsDesired as $columnDesired) {\r\n\t\t\t\t\t$columnFound = false;\r\n\t\t\t\t\t$typeMatch = true;\r\n\t\t\t\t\t$collationMatch = true;\r\n\t\t\t\t\tforeach ($columnsData as $column) {\r\n\t\t\t\t\t\tif ($columnDesired['field'] == $column['field']) {\r\n\t\t\t\t\t\t\t$columnFound = true;\r\n\r\n                            if (($columnDesired['type'] != $column['type'] && strpos($column['type'],'(') !== false) || (strpos($column['type'],'(') === false && explode('(',$columnDesired['type'])[0] != explode(' ',$column['type'])[0])) {\r\n\t\t\t\t\t\t\t\t$typeMatch = false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($columnDesired['default'] != $column['default']) {\r\n\t\t\t\t\t\t\t\t$typeMatch = false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($column['collation'] != '' && isset($columnDesired['collation']) && $columnDesired['collation'] != $column['collation']) {\r\n                                $typeMatch = $collationMatch = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($typeMatch == false) {\r\n                        $tableDataChanged = true;\r\n\r\n\t\t\t\t\t\t$tablesStatus[$table]['error'] = true;\r\n\t\t\t\t\t\t$status[] = \"[{$columnDesired['field']}] column type/collation is not correct\";\r\n\r\n\t\t\t\t\t\t$extra = '';\r\n\t\t\t\t\t\tif ($columnDesired['extra'] == 'auto_increment') {\r\n\t\t\t\t\t\t    $extra = ' AUTO_INCREMENT';\r\n\t\t\t\t\t\t} elseif ($columnDesired['default'] !== null) {\r\n                            $extra = \" DEFAULT '{$columnDesired['default']}'\";\r\n                        }\r\n\r\n\t\t\t\t\t\t$collation = '';\r\n                        if ($collationMatch == false) {\r\n                            $collation = \" COLLATE '\".$columnDesired['collation'].\"' \";\r\n                        }\r\n\r\n                        $queriesChangeType[] = \"CHANGE `{$columnDesired['field']}` `{$columnDesired['field']}` {$columnDesired['type']}{$collation} NOT NULL{$extra}\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ($columnFound == false && !in_array($columnDesired['field'], $fieldsHandled)) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$tablesStatus[$table]['error'] = true;\r\n\t\t\t\t\t\t$status[] = \"[{$columnDesired['field']}] column was not found\";\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$default = '';\r\n\t\t\t\t\t\tif ($columnDesired['default'] != null){\r\n\t\t\t\t\t\t\t$default = \" DEFAULT '{$columnDesired['default']}'\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t$tablesStatus[$table]['queries'][] = \"ALTER TABLE `{$table}`\r\n\t\t\t\t\t\tADD `{$columnDesired['field']}` {$columnDesired['type']} NOT NULL{$default},\r\n\t\t\t\t\t\tCOMMENT='';\";\r\n\r\n\t\t\t\t\t\tif (isset($columnDesired['post_query']) && !empty($columnDesired['post_query'])) {\r\n                            $tablesStatus[$table]['queries'][] = $columnDesired['post_query'];\r\n                        }\r\n\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($tableDataChanged == true) {\r\n                    $tablesStatus[$table]['queries'][] = \"ALTER TABLE `{$table}` \" . implode(', ', $queriesChangeType) . ';';\r\n                }\r\n\t\t\t\t\r\n\t\t\t\tif (!empty($status)) {\r\n\t\t\t\t\t$tablesStatus[$table]['status'] = implode(\", \", $status);\r\n\t\t\t\t\t$tablesStatus[$table]['error'] = true;\r\n\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t} catch (Exception $e) {\r\n\t\t        if (isset($definition['tables_create'][$table]))\r\n                {\r\n                    $tablesStatus[$table]['error'] = true;\r\n                    $tablesStatus[$table]['status'] = \"table does not exists\";\r\n                    $tablesStatus[$table]['queries'][] = $definition['tables_create'][$table];\r\n                }\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tforeach ($definition['tables_indexes'] as $table => $dataTableIndex) {\t\t    \r\n\t\t    try {\r\n    \t\t    $sql = 'SHOW INDEX FROM '.$table;\r\n    \t\t    $stmt = $db->prepare($sql);\r\n    \t\t    $stmt->execute();\r\n    \t\t    $columnsData = $stmt->fetchAll(PDO::FETCH_ASSOC); \r\n    \t\t    $status = array();\r\n    \t\t       \t\t    \r\n    \t\t    $existingIndexes = array();\r\n    \t\t    foreach ($columnsData as $indexData) {\r\n    \t\t        $existingIndexes[] = $indexData['key_name'];\r\n    \t\t    }\r\n    \t\t    \r\n    \t\t    $existingIndexes = array_unique($existingIndexes);\r\n    \t\t    \r\n    \t\t    $newIndexes = array_diff(array_keys($dataTableIndex['new']), $existingIndexes);\r\n    \t\t    \r\n    \t\t    foreach ($newIndexes as $newIndex) {\r\n    \t\t        $tablesStatus[$table]['queries'][] = $dataTableIndex['new'][$newIndex];\r\n    \t\t        $status[] = \"{$newIndex} index was not found\";\r\n    \t\t    }\r\n    \t\t    \r\n    \t\t    $removeIndexes = array_intersect($dataTableIndex['old'], $existingIndexes);\r\n    \t\t   \r\n    \t\t    foreach ($removeIndexes as $removeIndex) {\r\n                    array_unshift($tablesStatus[$table]['queries'],\"ALTER TABLE `{$table}` DROP INDEX `{$removeIndex}`;\");\r\n    \t\t        $tablesStatus[$table]['error'] = true;\r\n    \t\t        $status[] = \"{$removeIndex} legacy index was found\";\r\n    \t\t    }\r\n    \t\t    \r\n    \t\t    if (!empty($status)) {\r\n    \t\t        $tablesStatus[$table]['status'] = implode(\", \", $status);\r\n    \t\t        $tablesStatus[$table]['error'] = true;\r\n    \t\t    }\r\n    \t\t    \r\n\t\t    } catch (Exception $e) {\t\t        \r\n\t\t        // Just not existing table perhaps\r\n\t\t    }\t    \r\n\t\t}\r\n\r\n\r\n\r\n\t\tforeach ($definition['tables_data'] as $table => $dataTable) {\r\n\t\t\t$tableIdentifier = $definition['tables_data_identifier'][$table];\r\n\t\t\t\r\n\t\t\t$status = array();\r\n\t\t\t// Check that table has all required records\r\n\t\t\tforeach ($dataTable as $record) {\t\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\t$sql = \"SELECT COUNT(*) as total_records FROM `{$table}` WHERE `{$tableIdentifier}` = :identifier_value\";\r\n\t\t\t\t\t$stmt = $db->prepare($sql);\r\n\t\t\t\t\t$stmt->bindValue(':identifier_value',$record[$tableIdentifier]);\r\n\t\t\t\t\t$stmt->execute();\r\n\t\t\t\t\t$columnsData = $stmt->fetchColumn();\r\n\t\t\t\t\tif ($columnsData == 0){\r\n\t\t\t\t\t\t$status[] = \"Record with identifier {$tableIdentifier} = {$record[$tableIdentifier]} was not found\";\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$columns = array();\r\n\t\t\t\t\t\t$values = array();\r\n\t\t\t\t\t\tforeach ($record as $column => $value) {\r\n\t\t\t\t\t\t\t$columns[] = '`' . $column . '`';\r\n\t\t\t\t\t\t\t$values[] = $db->quote($value);\r\n\t\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\t\t$tablesStatus[$table]['queries'][] = \"INSERT INTO `{$table}` (\".implode(',', $columns).\") VALUES (\".implode(',', $values).\")\";\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (Exception $e) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t$status[] = \"Record with identifier {$tableIdentifier} = {$record[$tableIdentifier]} was not found\";\r\n\t\t\t\t\t\r\n\t\t\t\t\t$columns = array();\r\n\t\t\t\t\t$values = array();\r\n\t\t\t\t\tforeach ($record as $column => $value) {\r\n\t\t\t\t\t\t$columns[] = '`' . $column . '`';\r\n\t\t\t\t\t\t$values[] = $db->quote($value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$tablesStatus[$table]['queries'][] = \"INSERT INTO `{$table}` (\".implode(',', $columns).\") VALUES (\".implode(',', $values).\")\";\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t// Perhaps table does not exists\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!empty($status)){\r\n\t\t\t\t$tablesStatus[$table]['status'] .= implode(\", \", $status);\r\n\t\t\t\t$tablesStatus[$table]['error'] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn $tablesStatus;\r\n\t}\r\n}\r\n\r\n?>", "<?php\r\n\r\nclass erLhcoreClassFormRenderer {\r\n\t\t\r\n\t\r\n\tprivate static $errors = array();\r\n\tprivate static $collectedInfo = array();\r\n\tprivate static $isCollected = false;\r\n\tprivate static $collectedObject = false;\r\n\tprivate static $mainEmail = false;\r\n\tprivate static $customFields = array();\r\n\r\n\t\r\n\tpublic static function setCollectedObject($object) {\r\n\t\tself::$collectedObject = $object;\r\n\t}\r\n\t\r\n    public static function renderForm($form, $asAdmin = false) {\r\n    \t$contentForm = $form->content;\r\n\r\n        // Fields definition in JSON format\r\n        $inputFields = array();\r\n        preg_match_all('/\\[\\[json_content\\{(.*?)\\]\\]/i', $contentForm, $inputFields);\r\n        foreach ($inputFields[1] as $index => $inputDefinition) {\r\n            $inputDefinition = json_decode('{'.$inputDefinition, true);\r\n            $content = self::processInput($inputDefinition, $asAdmin);\r\n            $contentForm = str_replace($inputFields[0][$index], $content, $contentForm);\r\n        }\r\n\r\n    \t$inputFields = array();\r\n    \tpreg_match_all('/\\[\\[[input|textarea|combobox|range](.*?)\\]\\]/i', $contentForm, $inputFields);\r\n    \tforeach ($inputFields[0] as $inputDefinition) {\r\n    \t\t$content = self::processInput($inputDefinition, $asAdmin);\r\n    \t\t$contentForm = str_replace($inputDefinition,$content,$contentForm);\r\n    \t}\r\n\r\n    \tif (isset($_GET['identifier']) && !empty($_GET['identifier'])) {\r\n    \t\t$contentForm .= \"<input type=\\\"hidden\\\" name=\\\"identifier\\\" value=\\\"\".htmlspecialchars(rawurldecode($_GET['identifier'])).\"\\\" />\";\r\n    \t} elseif (isset($_POST['identifier']) && !empty($_POST['identifier'])) {\r\n    \t\t$contentForm .= \"<input type=\\\"hidden\\\" name=\\\"identifier\\\" value=\\\"\".htmlspecialchars($_POST['identifier']).\"\\\" />\";\r\n    \t} elseif (isset($_SERVER['HTTP_REFERER']) && !empty($_SERVER['HTTP_REFERER'])) {\r\n    \t\t$contentForm .= \"<input type=\\\"hidden\\\" name=\\\"identifier\\\" value=\\\"\".htmlspecialchars($_SERVER['HTTP_REFERER']).\"\\\" />\";\r\n    \t}\r\n\r\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('form.on_form_render',array('form' => & $form, 'errors' => & self::$errors));\r\n\r\n    \tif ( empty(self::$errors) && ezcInputForm::hasPostData()) {\r\n    \t\tself::$isCollected = true;\r\n            self::collectCustomFields();\r\n    \t}\r\n\r\n    \treturn $contentForm;    \t\r\n    }\r\n\r\n    public static function collectCustomFields() {\r\n\r\n\t    $collectedData = array();\r\n\r\n        if (isset($_POST['custom_fields']) && !empty($_POST['custom_fields'])) {\r\n            $customFields = json_decode($_POST['custom_fields'], true);\r\n            foreach ($customFields as $customField) {\r\n                $valueStore = $customField['value'];\r\n                if (isset($customField['encrypted']) && $customField['encrypted'] == true) {\r\n                    try {\r\n                        $valueStore = erLhcoreClassChatValidator::decryptAdditionalField($valueStore);\r\n                    } catch (Exception $e) {\r\n                        $valueStore = $e->getMessage();\r\n                    }\r\n                }\r\n\r\n                $collectedData[] = array(\r\n                    'identifier' => str_replace(' ','_',strtolower($customField['name'])),\r\n                    'name' => $customField['name'],\r\n                    'value' => $valueStore\r\n                );\r\n            }\r\n        }\r\n\r\n        if (isset($_POST['jsvar']) && !empty($_POST['jsvar'])) {\r\n            foreach ($_POST['jsvar'] as $key => $value) {\r\n                $jsVar = erLhAbstractModelChatVariable::fetch($key);\r\n                if ($jsVar instanceof erLhAbstractModelChatVariable) {\r\n                    $val = $value;\r\n                    if ($jsVar->type == 0) {\r\n                        $val = (string)$val;\r\n                    } elseif ($jsVar->type == 1) {\r\n                        $val = (int)$val;\r\n                    } elseif ($jsVar->type == 2) {\r\n                        $val = (float)$val;\r\n                    } elseif ($jsVar->type == 3) {\r\n                        try {\r\n                            $val = erLhcoreClassChatValidator::decryptAdditionalField($val);\r\n                        } catch (Exception $e) {\r\n                            $val = $e->getMessage();\r\n                        }\r\n                    }\r\n                    $collectedData[] = array(\r\n                        'identifier' => $jsVar->var_identifier,\r\n                        'name' => $jsVar->var_name,\r\n                        'value' => $val\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        self::$customFields = $collectedData;\r\n    }\r\n\r\n    public static function getCustomFields() {\r\n\t    return self::$customFields;\r\n    }\r\n\r\n    public static function getErrors() {\r\n    \treturn self::$errors;\r\n    }\r\n\r\n    public static function getCollectedInfo() {\r\n    \treturn self::$collectedInfo;\r\n    }\r\n    \r\n    public static function isCollected() {\r\n    \treturn self::$isCollected;\r\n    }\r\n    \r\n    public static function setCollectedInformation($information) {\r\n    \tself::$collectedInfo = $information;\r\n    }\r\n    \r\n    public static function processInput($inputDefinition, $asAdmin = false) {\r\n\t    if (is_array($inputDefinition)) {\r\n            $paramsParsed = $inputDefinition;\r\n        } else {\r\n            $inputDefinition = str_replace(array('[[',']]'), '', $inputDefinition);\r\n            $paramsInput = explode('||', $inputDefinition);\r\n            $defaultType = array_shift($paramsInput);\r\n\r\n            $paramsParsed = array();\r\n            foreach ($paramsInput as $param) {\r\n                $paramsItem = explode('=', $param);\r\n                $paramsParsed[$paramsItem[0]] = $paramsItem[1];\r\n            }\r\n\r\n            if (!isset($paramsParsed['type'])) {\r\n                $paramsParsed['type'] = $defaultType;\r\n            }\r\n        }\r\n\r\n        $paramsParsed['as_admin'] = $asAdmin;\r\n\r\n    \treturn call_user_func('erLhcoreClassFormRenderer::renderInputType'.ucfirst($paramsParsed['type']),$paramsParsed);\r\n    }\r\n    \r\n    public static function renderInputTypeRange($params) {\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \r\n    \t\t$validationFields = array();\r\n    \t\t$validationFields[$params['name'].'From'] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw' );\r\n    \t\t$validationFields[$params['name'].'Till'] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw' );\r\n    \r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n\r\n    \t\tif ( !$form->hasValidData( $params['name'].'From' ) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name'].'From'} == '')) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name'].'From').' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'].'From' )) {\r\n    \t\t\t$valueFrom = $form->{$params['name'].'From'};\r\n    \t\t\tself::$collectedInfo[$params['name'].'From'] = array('definition' => $params,'value' => $form->{$params['name'].'From'});\r\n    \t\t}\r\n    \r\n    \t\tif ( !$form->hasValidData( $params['name'].'Till' ) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name'].'Till'} == '')) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name'].'Till').' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'].'Till' )) {\r\n    \t\t\t$valueTill = $form->{$params['name'].'Till'};\r\n    \t\t\tself::$collectedInfo[$params['name'].'Till'] = array('definition' => $params,'value' => $form->{$params['name'].'Till'});\r\n    \t\t}\r\n    \r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name'].'From']['value'])) {\r\n    \t\t\t$valueFrom = self::$collectedInfo[$params['name'].'From']['value'];\r\n    \t\t} else {\r\n    \t\t\t$valueFrom = (isset($params['StartValue']) ? $params['StartValue'] : '');\r\n    \t\t}\r\n    \r\n    \t\tif (isset(self::$collectedInfo[$params['name'].'Till']['value'])) {\r\n    \t\t\t$valueTill = self::$collectedInfo[$params['name'].'Till']['value'];\r\n    \t\t} else {\r\n    \t\t\t$valueTill = (isset($params['EndValue']) ? $params['EndValue'] : '');\r\n    \t\t}\r\n    \t}\r\n    \t$return = '';\r\n    \t \r\n    \t$placeholder = isset($params['placeholder']) ? ' placeholder=\"'.htmlspecialchars($params['placeholder']).'\" ' : '';\r\n    \t \r\n    \t$valueFromDefault = $valueFrom;\r\n    \tif ($valueFromDefault == '') {\r\n    \t\t$valueFromDefault = $params['min'];\r\n    \t}\r\n    \t \r\n    \t$valueTillDefault = $valueTill;\r\n    \tif ($valueTillDefault == '') {\r\n    \t\t$valueTillDefault = $params['max'];\r\n    \t}\r\n    \t \r\n    \t$return .= \"<div ng-init=\\\"ng{$params['name']}From=\".htmlspecialchars($valueFromDefault,ENT_QUOTES).\";ng{$params['name']}Till=\".htmlspecialchars($valueTillDefault,ENT_QUOTES).\"\\\"><input type=\\\"text\\\" id=\\\"id_{$params['name']}From\\\" ng-model=\\\"ng{$params['name']}From\\\" name=\\\"{$params['name']}From\\\" {$additionalAttributes} {$placeholder} value=\\\"\".htmlspecialchars($valueFrom).\"\\\" />\";\r\n    \t$return .= \"<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"id_{$params['name']}Till\\\" ng-model=\\\"ng{$params['name']}Till\\\" name=\\\"{$params['name']}Till\\\" {$additionalAttributes} {$placeholder} value=\\\"\".htmlspecialchars($valueTill).\"\\\" /></div>\";\r\n    \t \r\n    \tif ($params['usejquislider'] && $params['usejquislider'] == 'true') {\r\n    \r\n    \t\t$step = isset($params['step']) ? 'step:'.$params['step'].',' : '';\r\n    \r\n    \t\t$return = '<div class=\"hide\">'.$return.'</div><script>\r\n\t\t\t$(function() {\r\n\t\t\t\t\t$( \"#'.$params['name'].'Slider\" ).slider({\r\n\t\t\t\t\t\trange: true,\r\n\t\t\t\t\t\tvalues: [ '.htmlspecialchars($valueFromDefault).', '.htmlspecialchars($valueTillDefault).' ],\r\n\t\t\t\t\t\tmin:'.$params['min'].',\r\n\t\t\t\t\t\tmax:'.$params['max'].',\r\n\t\t\t\t\t\t'.$step.'\r\n\t\t\t\t        slide: function (event, ui) {\r\n\t\t\t\t            $(\\'#id_'.$params['name'].'From\\').val(ui.values[0]).trigger(\\'input\\');\r\n\t\t\t\t            $(\\'#id_'.$params['name'].'Till\\').val(ui.values[1]).trigger(\\'input\\');\r\n\t\t\t\t        }\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t</script>';\r\n    \t}\r\n    \t \r\n    \treturn $return;\r\n    }\r\n        \r\n    public static function renderInputTypeText($params) {    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \t\r\n    \t$value = '';\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t\r\n    \t\t$validationFields = array();    \t\t    \t\t\r\n    \t\t$validationFields[$params['name']] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw' );\r\n    \t\t\r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n\r\n    \t\tif (!$form->hasValidData($params['name']) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name']} == '') || (isset($params['validation_rule']) && $params['validation_rule'] != '' && !preg_match($params['validation_rule'],$form->{$params['name']}))) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n                if ($form->hasValidData($params['name'])) {\r\n                    $value = $form->{$params['name']};\r\n                }\r\n    \t\t} elseif ($form->hasValidData( $params['name'] ) && (!isset($params['validation_rule']) || $params['validation_rule'] == '' || preg_match($params['validation_rule'],$form->{$params['name']}))) {\r\n    \t\t\t$value = $form->{$params['name']};\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t}\r\n    \t\t\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])) {\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['value']) ? $params['value'] : '');\r\n    \t\t}\r\n    \t}\r\n    \t    \t\r\n    \t$placeholder = isset($params['placeholder']) ? ' placeholder=\"'.htmlspecialchars($params['placeholder']).'\" ' : '';    \r\n    \treturn \"<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"{$params['name']}\\\" {$additionalAttributes} {$placeholder} value=\\\"\".htmlspecialchars($value).\"\\\" />\";\r\n    }\r\n\r\n    public static function renderInputTypeHidden($params) {\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n\r\n    \t$value = '';\r\n    \tif (ezcInputForm::hasPostData()) {\r\n\r\n    \t\t$validationFields = array();\r\n    \t\t$validationFields[$params['name']] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw' );\r\n\r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n\r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name']} == '')) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {\r\n    \t\t\t$value = $form->{$params['name']};\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t}\r\n\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])) {\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t    if (isset($params['value']) && strpos($params['value'],'prefill|') !== false) {\r\n    \t\t        $varName = str_replace('prefill|','',$params['value']);\r\n                    if (isset($_GET['prefill'][$varName])) {\r\n                        $value = $_GET['prefill'][$varName];\r\n                    } else {\r\n                        $value = '';\r\n                    }\r\n                } else {\r\n                    $value = (isset($params['value']) ? $params['value'] : '');\r\n                }\r\n    \t\t}\r\n    \t}\r\n\r\n        $returnAppend = $return = \"\";\r\n        if (isset($params['as_admin']) && $params['as_admin'] == true) {\r\n            $return = \"<div class='form-group'><label class='font-weight-bold'>\" . htmlspecialchars($params['name_literal']) . \"</label>\";\r\n            $returnAppend = \"</div>\";\r\n        }\r\n\r\n    \treturn $return . \"<input class=\\\"form-control form-control-sm\\\" type=\\\"\". ((isset($params['as_admin']) && $params['as_admin'] == true) ? \"text\" : \"hidden\") .\"\\\" name=\\\"{$params['name']}\\\" {$additionalAttributes} value=\\\"\".htmlspecialchars($value).\"\\\" />\" . $returnAppend;\r\n    }\r\n        \r\n    public static function renderInputTypeEmail($params) {    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \t\r\n    \t$value = '';\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t\r\n    \t\t$validationFields = array();    \t\t    \t\t\r\n    \t\t$validationFields[$params['name']] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'validate_email' );\r\n    \t\t\r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n\r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name']} == '')) {    \t\t\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {\r\n    \t\t\t$value = $form->{$params['name']};\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('main' => (isset($params['main']) && $params['main'] == 'true'),'definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t\t    \t\t\t\r\n    \t\t\t// It's main form e-mail\r\n    \t\t\tif (self::$collectedInfo[$params['name']]['main'] == true) {\r\n    \t\t\t    self::$mainEmail = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t\t}\r\n    \t\t}\r\n    \t\t\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])) {\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['value']) ? $params['value'] : '');\r\n    \t\t}\r\n    \t}\r\n    \t    \t\r\n    \t$placeholder = isset($params['placeholder']) ? ' placeholder=\"'.htmlspecialchars($params['placeholder']).'\" ' : '';    \r\n    \treturn \"<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"{$params['name']}\\\" {$additionalAttributes} {$placeholder} value=\\\"\".htmlspecialchars($value).\"\\\" />\";\r\n    }\r\n\r\n    public static function renderInputTypeNumber($params) {    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \t\r\n    \t$value = '';\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t\r\n    \t\t$validationFields = array();    \t\t    \t\t\r\n    \t\t$validationFields[$params['name']] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'int' );\r\n    \t\t\r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n    \t\t$Errors = array();\r\n    \t\t\r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name']} == '')) {    \t\t\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {    \t\t\r\n    \t\t\t$value = $form->{$params['name']};\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t}\r\n    \t\t\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])) {\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['value']) ? $params['value'] : '');\r\n    \t\t}\r\n    \t}\r\n    \t    \t\r\n    \t$placeholder = isset($params['placeholder']) ? ' placeholder=\"'.htmlspecialchars($params['placeholder']).'\" ' : '';    \r\n    \treturn \"<input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\" name=\\\"{$params['name']}\\\" {$additionalAttributes} {$placeholder} value=\\\"\".htmlspecialchars($value).\"\\\" />\";\r\n    }\r\n\r\n    public static function renderInputTypeDate($params) {    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \t\r\n    \t$value = '';\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t\r\n    \t\t$validationFields = array();    \t\t    \t\t\r\n    \t\t$validationFields[$params['name']] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'string' );\r\n    \t\t\r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n    \t\t$Errors = array();\r\n    \t\t\r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name']} == '')) {    \t\t\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name']) && $form->{$params['name']} != '') {   \r\n    \t\t\t \t\t\r\n    \t\t\t$separator = strpos($form->{$params['name']}, '-') !== false ? '-' : '/';\r\n    \t\t\t$parts = explode($separator, $form->{$params['name']});\r\n\r\n    \t\t\t$pos = explode(',', $params['pos']);\r\n    \t\t\t\r\n    \t\t\tif (count($parts) == 3 && checkdate($parts[$pos[1]], $parts[$pos[2]], $parts[$pos[0]])){    \t\t\t\r\n\t    \t\t\t$value = $form->{$params['name']};\r\n\t    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t\t} else {\r\n    \t\t\t\t$value = htmlspecialchars($form->{$params['name']});\r\n    \t\t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','invalid date format');\r\n    \t\t\t}\r\n    \t\t\t\r\n    \t\t}\r\n    \t\t\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])) {\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['value']) ? $params['value'] : '');\r\n    \t\t}\r\n    \t}\r\n    \t    \t\r\n    \t$placeholder = isset($params['placeholder']) ? ' placeholder=\"'.htmlspecialchars($params['placeholder']).'\" ' : '';    \r\n    \treturn \"<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"{$params['name']}\\\" id=\\\"id_{$params['name']}\\\" {$additionalAttributes} {$placeholder} value=\\\"\".htmlspecialchars($value).\"\\\" /><script>$(function() {\\$('#id_{$params['name']}').fdatepicker({format: '{$params['format']}'});});</script>\";\r\n    }\r\n    \r\n    public static function renderInputTypeTranslate($params)\r\n    {        \r\n        if (isset($params['context']) && isset($params['text'])) {           \r\n            return erTranslationClassLhTranslation::getInstance()->getTranslation($params['context'],$params['text']);\r\n        }\r\n    }\r\n    \r\n    public static function renderInputTypeCombobox($params) {    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \t\r\n    \t$value = '';\r\n    \t\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t \r\n    \t\t$validationFields = array();\r\n    \t\t$validationFields[$params['name']] = new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw' );\r\n    \t\t \r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n    \t\t$Errors = array();\r\n    \t\t \r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && ($form->{$params['name']} == '' || (isset($params['default']) && $params['default'] == $form->{$params['name']})))) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {\r\n    \t\t\t$value = htmlspecialchars($form->{$params['name']});\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t}\r\n    \t\t    \t\t \r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])){\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['default']) ? $params['default'] : '');\r\n    \t\t}\r\n    \t}\r\n    \t\r\n    \t$options = array();\r\n    \tif (isset($params['from']) && isset($params['till'])){\r\n    \t\tfor ($i = $params['from']; $i <= $params['till']; $i++) {\r\n    \t\t\t$isSelected= $value == $i ? 'selected=\"selected\"' : '';\r\n    \t\t\t$options[] = \"<option =\\\"\".htmlspecialchars($i).\"\\\" {$isSelected}>\".htmlspecialchars($i).'</option>';\r\n    \t\t}\r\n    \t} else {    \t\r\n\t    \tforeach (explode('#',$params['options']) as $option) {\r\n\t    \t\t$isSelected= $value == $option ? 'selected=\"selected\"' : '';\r\n\t    \t\t$options[] = \"<option =\\\"\".htmlspecialchars($option).\"\\\" {$isSelected}>\".htmlspecialchars($option).'</option>';\r\n\t    \t};\r\n    \t}\r\n    \t    \t\r\n    \treturn \"<select class=\\\"form-control form-control-sm\\\" {$additionalAttributes} name=\\\"{$params['name']}\\\">\".implode('', $options).\"</select>\";\r\n    }\r\n\r\n    public static function renderInputTypeYear($params) {    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \t\r\n    \t$value = '';\r\n    \t\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t \r\n    \t\t$validationFields = array();\r\n    \t\t$validationFields[$params['name']] = new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'int',array('min_range' => $params['from']) );\r\n    \t\t \r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n    \t\t$Errors = array();\r\n    \t\t \r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && ($form->{$params['name']} == '' || (isset($params['default']) && $params['default'] == $form->{$params['name']})))) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {\r\n    \t\t\t$value = htmlspecialchars($form->{$params['name']});\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t}\r\n    \t\t    \t\t \r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])){\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['default']) ? htmlspecialchars($params['default']) : '');\r\n    \t\t}\r\n    \t}\r\n    \t\r\n\t\t$options = array();\r\n\t\t$yearTill = (isset($params['till']) ? $params['till'] : date('Y'));\r\n    \tfor ( $i = $yearTill; $i >= $params['from']; $i--) {    \t\t    \t\r\n    \t\t$isSelected= $value == $i ? 'selected=\"selected\"' : '';\r\n    \t\t$options[] = \"<option =\\\"\".htmlspecialchars($i).\"\\\" {$isSelected}>\".htmlspecialchars($i).'</option>';    \t\t\r\n    \t}\r\n    \t\t    \t\r\n    \treturn \"<select class=\\\"form-control form-control-sm\\\" {$additionalAttributes} name=\\\"{$params['name']}\\\">\".implode('', $options).\"</select>\";\r\n    }\r\n    \r\n    public static function renderInputTypeMonth($params) {    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \t\r\n    \t$value = '';\r\n    \t\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t \r\n    \t\t$validationFields = array();\r\n    \t\t$validationFields[$params['name']] = new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'int',array('min_range' => 1,'max_range' => 12) );\r\n    \t\t \r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n    \t\t$Errors = array();\r\n    \t\t \r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && ($form->{$params['name']} == '' || (isset($params['default']) && $params['default'] == $form->{$params['name']})))) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {\r\n    \t\t\t$value = $form->{$params['name']};\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t}\r\n    \t\t    \t\t \r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])){\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['default']) ? $params['default'] : '');\r\n    \t\t}\r\n    \t}\r\n    \t\r\n\t\t$options = array();\r\n\t\t\t\r\n    \tfor ( $i = 1; $i <= 12; $i++) {    \t\t    \t\r\n    \t\t$isSelected= $value == $i ? 'selected=\"selected\"' : '';\r\n    \t\t$options[] = \"<option =\\\"\".htmlspecialchars($i).\"\\\" {$isSelected}>\".htmlspecialchars($i).'</option>';    \t\t\r\n    \t}\r\n    \t\t    \t\r\n    \treturn \"<select class=\\\"form-control form-control-sm\\\" {$additionalAttributes} name=\\\"{$params['name']}\\\">\".implode('', $options).\"</select>\";\r\n    }\r\n\r\n    public static function renderInputTypeCheckbox($params) {   \r\n    \t\r\n    \t$isChecked = '';\r\n    \t\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\t\r\n    \t\t$validationFields = array();\r\n    \t\t$validationFields[$params['name']] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'boolean' );\r\n    \t\t\r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n    \t\t$Errors = array();\r\n    \t\t\r\n    \t\tif ( !$form->hasValidData( $params['name'] ) && (isset($params['required']) && $params['required'] == 'required')) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {\r\n    \t\t\t$isChecked = ' checked=\"checked\" ';\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params, 'value' => true);\r\n    \t\t} else {\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params, 'value' => false);\r\n    \t\t}    \t\t    \t\t\r\n    \t\t\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])){    \t\r\n    \t\t\t$isChecked = self::$collectedInfo[$params['name']]['value'] == true ? ' checked=\"checked\" ' : '';\r\n    \t\t} else {\r\n    \t\t\t$isChecked = isset($params['value']) && $params['value'] == 'checked' ? ' checked=\"checked\" ' : ''; \r\n    \t\t}\r\n    \t}\r\n    \t\r\n    \t$additionalAttributes = self::renderAdditionalAtrributes($params);\r\n    \treturn \"<input type=\\\"checkbox\\\" name=\\\"{$params['name']}\\\"{$isChecked} {$additionalAttributes} value=\\\"on\\\" />\";\r\n    }\r\n    \r\n    public static function renderInputTypeTextarea($params) {    \t\r\n    \t\r\n    \t$value = '';\r\n    \tif (ezcInputForm::hasPostData()) {\r\n    \t\r\n    \t\t$validationFields = array();\r\n    \t\t$validationFields[$params['name']] =  new ezcInputFormDefinitionElement( ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw' );\r\n    \t\r\n    \t\t$form = new ezcInputForm( INPUT_POST, $validationFields );\r\n    \t\t$Errors = array();\r\n    \t\r\n    \t\tif ( !$form->hasValidData( $params['name'] ) || (isset($params['required']) && $params['required'] == 'required' && $form->{$params['name']} == '')) {\r\n    \t\t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n    \t\t} elseif ($form->hasValidData( $params['name'] )) {\r\n    \t\t\t$value = $form->{$params['name']};\r\n    \t\t\tself::$collectedInfo[$params['name']] = array('definition' => $params,'value' => $form->{$params['name']});\r\n    \t\t}\r\n    \t\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])){\r\n    \t\t\t$value = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t} else {\r\n    \t\t\t$value = (isset($params['value']) ? $params['value'] : '');\r\n    \t\t}\r\n    \t}    \t\r\n    \t$placeholder = isset($params['placeholder']) ? ' placeholder=\"'.htmlspecialchars($params['placeholder']).'\" ' : '';\r\n    \t\r\n    \treturn \"<textarea class=\\\"form-control form-control-sm\\\" name=\\\"{$params['name']}\\\" {$placeholder}>\" . htmlspecialchars($value) . \"</textarea>\";\r\n    }\r\n    \r\n    public static function renderAdditionalAtrributes($params) {\r\n    \t$additionalAttributes = array();\r\n    \tforeach ($params as $type => $value) {\r\n    \t\tif (strpos($type, 'ng-') !== false) {\r\n    \t\t\t$additionalAttributes[] = $type.'=\"'.htmlspecialchars($value).'\"';\r\n    \t\t}\r\n    \t};     \t\r\n    \treturn implode(' ', $additionalAttributes);\r\n    }\r\n    \r\n    public static function renderInputTypeFile($params) {\r\n\r\n    \t$downloadLink = '';\r\n    \tif (ezcInputForm::hasPostData()) {\r\n\r\n            $fileData = erLhcoreClassModelChatConfig::fetch('file_configuration');\r\n            $data = (array)$fileData->data;\r\n\r\n            // Is file uses different method to check is valid file\r\n            $data['ft_us'] = str_replace('jpe?g','jpg|jpeg',$data['ft_us']);\r\n\r\n\t    \tif (!erLhcoreClassSearchHandler::isFile($params['name'], explode('|',$data['ft_us']), $data['fs_max'] * 1024) && (isset($params['required']) && $params['required'] == 'required')) {\r\n\t    \t\tself::$errors[] = (isset($params['name_literal']) ? $params['name_literal'] : $params['name']).' '.erTranslationClassLhTranslation::getInstance()->getTranslation('form/fill','is required');\r\n\t    \t} elseif (erLhcoreClassSearchHandler::isFile($params['name'], explode('|',$data['ft_us']), $data['fs_max'] * 1024)) {\r\n\t    \t\tself::$collectedInfo[$params['name']] = array('definition' => $params, 'value' => $_FILES[$params['name']]);\r\n\t    \t}\r\n\r\n    \t} else {\r\n    \t\tif (isset(self::$collectedInfo[$params['name']]['value'])){\r\n    \t\t\t$valueContent = self::$collectedInfo[$params['name']]['value'];\r\n    \t\t\t$downloadLink = \"<a href=\\\"\".erLhcoreClassSystem::getHost().erLhcoreClassDesign::baseurl('form/download').'/'.self::$collectedObject->id.'/'.self::$collectedObject->hash.'/'.$params['name'].\"\\\">Download (\".htmlspecialchars($valueContent['name']).\")</a>\";\r\n    \t\t}\r\n    \t}\r\n    \t\r\n    \treturn \"{$downloadLink}<input type=\\\"file\\\" name=\\\"{$params['name']}\\\" />\";\r\n    }\r\n\r\n    public static function storeCollectedInformation($form, $collectedInformation, $customFields = [], $chat = null) {\r\n\r\n\t    $chatForm = true;\r\n        $chatAttributes = [];\r\n        $formAttributes = [];\r\n\r\n        if (isset($_POST['chat_id']) && is_numeric($_POST['chat_id']) && isset($_POST['hash']) && ($chat = erLhcoreClassModelChat::fetch($_POST['chat_id'])) instanceof erLhcoreClassModelChat && $chat->hash == $_POST['hash'] && $chat->status !== erLhcoreClassModelChat::STATUS_CLOSED_CHAT) {\r\n            // Check does this form only chat modifying form or also information collecting form\r\n            foreach ($collectedInformation as $fieldName => $params) {\r\n                $chatFormElement = false;\r\n                if (isset($params['definition']['chat_attr'])) {\r\n                    $chatAttributes[] = $fieldName;\r\n                    $chatFormElement = true;\r\n                    $path = explode('.', $params['definition']['chat_attr']);\r\n                    if ($path[0] == 'chat') {\r\n                        $chat->{$path[1]} = (string)$params['value'];\r\n                        $chat->updateThis(['update' => [$path[1]]]);\r\n                    } elseif ($path[0] == 'chat_variable') {\r\n                        $chatVariablesArray = $chat->chat_variables_array;\r\n                        $chatVariablesArray[$path[1]] = is_numeric($params['value']) ? $params['value'] : (string)$params['value'];\r\n                        $chat->chat_variables_array = $chatVariablesArray;\r\n                        $chat->chat_variables = json_encode($chatVariablesArray);\r\n                        $chat->updateThis(['update' => ['chat_variables']]);\r\n                    }\r\n                } elseif (isset($params['definition']['chat_additional']) && $params['definition']['chat_additional'] != '') {\r\n                    $chatFormElement = true;\r\n                    $chatAttributes[] = $fieldName;\r\n                    $paramsAdditions = json_decode($params['definition']['chat_additional'],true);\r\n                    if (isset($paramsAdditions['identifier'])) {\r\n                        $additionalData = $chat->additional_data_array;\r\n                        $attributesUpdates = [];\r\n                        foreach ($additionalData as $index => $dataAdditional) {\r\n                            if (isset($dataAdditional['identifier']) && $dataAdditional['identifier'] == $paramsAdditions['identifier']) {\r\n                                $additionalData[$index]['value'] = is_numeric($params['value']) ? $params['value'] : (string)$params['value'];\r\n\r\n                                if (isset($paramsAdditions['key'])) {\r\n                                    $additionalData[$index]['key'] = $paramsAdditions['key'];\r\n                                }\r\n\r\n                                $attributesUpdates[] = $dataAdditional['identifier'];\r\n                            }\r\n                        }\r\n\r\n                        if (!in_array($paramsAdditions['identifier'], $attributesUpdates)) {\r\n                            $additionalData[] = [\r\n                                'value' => is_numeric($params['value']) ? $params['value'] : (string)$params['value'],\r\n                                'key' => (isset($paramsAdditions['key']) ? $paramsAdditions['key'] : $paramsAdditions['identifier']),\r\n                                'identifier' => $paramsAdditions['identifier'],\r\n                            ];\r\n                        }\r\n\r\n                        $chat->additional_data_array = $additionalData;\r\n                        $chat->additional_data = json_encode($additionalData);\r\n                        $chat->updateThis(['update' => ['additional_data']]);\r\n                    }\r\n\r\n                } elseif (isset($params['definition']['scope']) && $params['definition']['scope'] == 'chat') {\r\n                    $chatAttributes[] = $fieldName;\r\n                    $chatFormElement = true;\r\n                    // Save file as association with a chat instead of a form\r\n                    if ($params['definition']['type'] == 'file') {\r\n\r\n                        $fileData = erLhcoreClassModelChatConfig::fetch('file_configuration');\r\n                        $data = (array)$fileData->data;\r\n                        $path = 'var/storage/' . date('Y') . 'y/' . date('m') . '/' . date('d') . '/' . $chat->id . '/';\r\n\r\n                        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('file.uploadfile.file_path', array('path' => & $path, 'storage_id' => $chat->id));\r\n\r\n                        $clamav = false;\r\n\r\n                        if (isset($data['clamav_enabled']) && $data['clamav_enabled'] == true) {\r\n\r\n                            $opts = array();\r\n\r\n                            if (isset($data['clamd_sock']) && !empty($data['clamd_sock'])) {\r\n                                $opts['clamd_sock'] = $data['clamd_sock'];\r\n                            }\r\n\r\n                            if (isset($data['clamd_sock_len']) && !empty($data['clamd_sock_len'])) {\r\n                                $opts['clamd_sock_len'] = $data['clamd_sock_len'];\r\n                            }\r\n\r\n                            $clamav = new Clamav($opts);\r\n                        }\r\n\r\n                        $upload_handler = new erLhcoreClassFileUpload(array(\r\n                            'antivirus' => $clamav,\r\n                            'param_name' => $params['definition']['name'],\r\n                            'user_id' => -1,    // Save as system message\r\n                            'as_form' => true,    // Indicate it's a form upload\r\n                            'max_file_size' => $data['fs_max'] * 1024,\r\n                            'accept_file_types_lhc' => '/\\.(' . $data['ft_us'] . ')$/i',\r\n                            'chat' => $chat,\r\n                            'download_via_php' => true,\r\n                            'upload_dir' => $path));\r\n\r\n                        if ($upload_handler->uploadedFile instanceof erLhcoreClassModelChatFile) {\r\n                            erLhcoreClassChatEventDispatcher::getInstance()->dispatch('file.uploadfile.file_store', array('chat_file' => $upload_handler->uploadedFile));\r\n                            $chat->user_typing_txt = '100%';\r\n                        }\r\n\r\n                        $chat->user_typing = time();\r\n                        $chat->updateThis(array('update' => array('user_typing_txt','user_typing')));\r\n                    }\r\n                } else {\r\n                    $formAttributes[] = $fieldName;\r\n                }\r\n\r\n                // If at-least one attribute is not chat save as a form\r\n                if ($chatForm == true && $chatFormElement == false) {\r\n                    $chatForm = false;\r\n                }\r\n\r\n             }\r\n        } else {\r\n            $chatForm = false;\r\n        }\r\n\r\n        if ($chatForm === false) {\r\n            $formCollected = new erLhAbstractModelFormCollected();\r\n            $formCollected->ip = erLhcoreClassIPDetect::getIP();\r\n            $formCollected->ctime = time();\r\n            $formCollected->form_id = $form->id;\r\n            $formCollected->identifier = substr(isset($_POST['identifier']) ? $_POST['identifier'] : (isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : ''),0,250);\r\n            $formCollected->saveThis();\r\n        }\r\n\r\n        if (isset($_POST['chat_id']) && is_numeric($_POST['chat_id']) && isset($_POST['hash']) && ($chat = erLhcoreClassModelChat::fetch($_POST['chat_id'])) instanceof erLhcoreClassModelChat && $chat->hash == $_POST['hash'] && $chat->status !== erLhcoreClassModelChat::STATUS_CLOSED_CHAT) {\r\n\r\n            if ($chatForm === false) {\r\n                $formCollected->chat_id = $chat->id;\r\n            }\r\n\r\n            // Store as message to visitor\r\n            $msg = new erLhcoreClassModelmsg();\r\n\r\n            if ($chatForm === false) {\r\n                $msg->msg = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Information collected. [baseurl]form/viewcollected/' . $formCollected->id . '[/baseurl]');\r\n            } else {\r\n                $msg->msg = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chatcommand', 'Information collected. Only chat form');\r\n            }\r\n\r\n            $msg->chat_id = $chat->id;\r\n            $msg->user_id = -1;\r\n            $msg->time = time();\r\n            $msg->name_support = $chat->nick;\r\n            $msg->saveThis();\r\n\r\n            // Update last user msg time so auto responder work's correctly\r\n            $chat->last_op_msg_time = $chat->last_user_msg_time = time();\r\n            $chat->last_msg_id = $msg->id;\r\n\r\n            // All ok, we can make changes\r\n            $chat->updateThis(array('update' => array('last_msg_id', 'last_op_msg_time', 'last_user_msg_time')));\r\n        }\r\n\r\n        if ($chatForm === true) {\r\n            return;\r\n        }\r\n\r\n    \t// Finish collect information\r\n    \tforeach ($collectedInformation as $fieldName => & $params) {\r\n    \t    // Do not save file again if it was chat file\r\n    \t\tif (!in_array($fieldName, $chatAttributes) && $params['definition']['type'] == 'file' && !(isset($params['definition']['scope']) && $params['definition']['scope'] == 'chat')) {\r\n    \t\t\t\t\t\t\r\n    \t\t\t$dir = 'var/storageform/'.date('Y').'y/'.date('m').'/'.date('d').'/'.$formCollected->id.'/';\r\n    \t\t\t\r\n    \t\t\terLhcoreClassChatEventDispatcher::getInstance()->dispatch('form.fill.file_path',array('path' => & $dir, 'storage_id' => $formCollected->id));\r\n    \t\t\t\r\n    \t\t\terLhcoreClassFileUpload::mkdirRecursive( $dir );\r\n    \t\t\t    \t\t\t\r\n    \t\t\t$file = erLhcoreClassSearchHandler::moveUploadedFile($params['definition']['name'],$dir);\r\n    \t\t\t\r\n\t    \t\t$params['filename'] = $file;\r\n\t    \t\t$params['filepath'] = $dir;\r\n\t    \t\t\r\n\t    \t\terLhcoreClassChatEventDispatcher::getInstance()->dispatch('form.fill.store_file',array('file_params' => & $params));\r\n    \t\t}\r\n    \t}\r\n    \t\r\n    \t$formCollected->content = json_encode($collectedInformation);\r\n        $formCollected->custom_fields = json_encode($customFields);\r\n    \t$formCollected->saveThis();\r\n\r\n    \terLhcoreClassChatEventDispatcher::getInstance()->dispatch('form.filled',array('form' => & $formCollected));\r\n    \t\r\n    \t// Inform user about filled form\r\n    \terLhcoreClassChatMail::informFormFilled($formCollected,array('email' => self::$mainEmail));\r\n    }\r\n    \r\n}\r\n\r\n?>", "<?php\n\nclass erLhcoreClassGenericBotActionRestapi\n{\n\n    public static function process($chat, $action, $trigger, $params)\n    {\n\n        $params['current_trigger'] = $trigger;\n\n        if (!isset($params['first_trigger'])) {\n            $params['first_trigger'] = $params['current_trigger'];\n        }\n        \n        if (isset($action['content']['rest_api']) && is_numeric($action['content']['rest_api']) && isset($action['content']['rest_api_method']) && !empty($action['content']['rest_api_method'])) {\n\n            $restAPI = erLhcoreClassModelGenericBotRestAPI::fetch($action['content']['rest_api']);\n\n            if ($restAPI instanceof erLhcoreClassModelGenericBotRestAPI) {\n\n                // Within next user message we will process this event\n                if (isset($action['content']['attr_options']['on_next_msg']) && $action['content']['attr_options']['on_next_msg'] == true) {\n\n                    unset($action['content']['attr_options']['on_next_msg']);\n                    $event = new erLhcoreClassModelGenericBotChatEvent();\n                    $event->chat_id = $chat->id;\n                    $event->ctime = time();\n                    $event->content = json_encode(array('callback_list' => array(\n                        array(\n                            'content' => array(\n                                'type' => 'rest_api_next_msg',\n                                'replace_array' => (isset($params['replace_array']) ? $params['replace_array'] : array()),\n                                'content' => $action['content']\n                            )\n                        )\n                    )));\n\n                    if (!isset($params['do_not_save']) || $params['do_not_save'] == false) {\n                        $event->saveThis();\n                    }\n\n                    return;\n                }\n\n                $method = false;\n                foreach ($restAPI->configuration_array['parameters'] as $parameter) {\n                    if ($action['content']['rest_api_method'] == $parameter['id']) {\n                        $method = $parameter;\n                    }\n                }\n\n                // Callback should be executed as background task\n                if ((isset($action['content']['attr_options']['background_process']) && $action['content']['attr_options']['background_process'] == true)) {\n\n                    $event = new erLhcoreClassModelGenericBotChatEvent();\n                    $event->chat_id = $chat->id;\n                    $event->ctime = time();\n                    $event->content = json_encode(array('callback_list' => array(\n                        array(\n                            'content' => array(\n                                'type' => 'rest_api',\n                                'start_mode' => erLhcoreClassGenericBotWorkflow::$startChat,\n                                'replace_array' => (isset($params['replace_array']) ? $params['replace_array'] : array()),\n                                'action' => $action,\n                                'msg_id' => (isset($params['msg']) && is_object($params['msg']) ? $params['msg']->id : 0),\n                                'msg_text' => (isset($params['msg_text']) ? $params['msg_text'] : ''),\n                                'event' => (isset($action['content']['event']) ? $action['content']['event'] : null),\n                            )\n                        )\n                    )));\n\n                    // Save only if user has resque extension\n                    if ((!isset($params['do_not_save']) || $params['do_not_save'] == false) && class_exists('erLhcoreClassExtensionLhcphpresque')) {\n                        $event->saveThis();\n                        $inst_id = class_exists('erLhcoreClassInstance') ? erLhcoreClassInstance::$instanceChat->id : 0;\n                        erLhcoreClassModule::getExtensionInstance('erLhcoreClassExtensionLhcphpresque')->enqueue('lhc_rest_api_queue', 'erLhcoreClassLHCBotWorker', array('inst_id' => $inst_id, 'action' => 'rest_api', 'event_id' => $event->id));\n                        return ;\n                    }\n                }\n\n                erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.rest_api_before_request', array(\n                    'restapi' => & $restAPI,\n                    'chat' => $chat,\n                    'params' => $params\n                ));\n\n                $response = self::makeRequest($restAPI->configuration_array['host'], $method, array('action' => $action, 'rest_api_method_params' => $action['content']['rest_api_method_params'], 'chat' => $chat, 'params' => $params));\n\n                // We have found exact matching response type\n                // Let's check has user checked any trigger to execute.\n                if (isset($response['id'])) {\n                    if (isset($action['content']['rest_api_method_output'][$response['id']]) && is_numeric($action['content']['rest_api_method_output'][$response['id']])) {\n\n                        $argsDefault = array(\n                            'status' => 'continue_all',\n                            'replace_array' => array(\n                                '{content_1}' => $response['content'],\n                                '{content_2}' => $response['content_2'],\n                                '{content_3}' => $response['content_3'],\n                                '{content_4}' => $response['content_4'],\n                                '{content_5}' => $response['content_5'],\n                                '{content_6}' => $response['content_6'],\n                                '{content_1_json}' => json_encode($response['content']),\n                                '{content_2_json}' => json_encode($response['content_2']),\n                                '{content_3_json}' => json_encode($response['content_3']),\n                                '{content_4_json}' => json_encode($response['content_4']),\n                                '{content_5_json}' => json_encode($response['content_5']),\n                                '{content_6_json}' => json_encode($response['content_6']),\n                                '{http_code}' => $response['http_code'],\n                                '{http_error}' => $response['http_error'],\n                                '{content_raw}' => $response['content_raw'],\n                                '{http_data}' => $response['http_data']\n                            ),\n                            'meta_msg' => $response['meta'],\n                            'trigger_id' => $action['content']['rest_api_method_output'][$response['id']]\n                        );\n\n                        if (isset($params['msg'])) {\n                            $argsDefault['msg'] = $params['msg'];\n                        } elseif (isset($params['msg_text'])) {\n                            $argsDefault['msg_text'] = $params['msg_text'];\n                        }\n\n                        if (isset($params['replace_array']) && !empty($params['replace_array'])) {\n                            $argsDefault['replace_array'] = array_merge($params['replace_array'], $argsDefault['replace_array']);\n                        }\n\n                        return $argsDefault;\n\n                    } else {\n                        // Do nothing as user did not chose any trigger to execute\n                    }\n                } elseif (isset($action['content']['rest_api_method_output']['default_trigger']) && is_numeric($action['content']['rest_api_method_output']['default_trigger'])) {\n\n                    $argsDefault = array(\n                        'status' => 'continue_all',\n                        'replace_array' => array(\n                            '{content_1}' => $response['content'],\n                            '{content_2}' => $response['content_2'],\n                            '{content_3}' => $response['content_3'],\n                            '{content_4}' => $response['content_4'],\n                            '{content_5}' => $response['content_5'],\n                            '{content_6}' => $response['content_6'],\n                            '{content_1_json}' => json_encode($response['content']),\n                            '{content_2_json}' => json_encode($response['content_2']),\n                            '{content_3_json}' => json_encode($response['content_3']),\n                            '{content_4_json}' => json_encode($response['content_4']),\n                            '{content_5_json}' => json_encode($response['content_5']),\n                            '{content_6_json}' => json_encode($response['content_6']),\n                            '{http_code}' => $response['http_code'],\n                            '{http_error}' => $response['http_error'],\n                            '{content_raw}' => $response['content_raw'],\n                            '{http_data}' => $response['http_data']\n                        ),\n                        'meta_msg' => $response['meta'],\n                        'trigger_id' => $action['content']['rest_api_method_output']['default_trigger'],\n                        'trigger_action_id' => (isset($action['content']['rest_api_method_output']['default_trigger_action_id']) && !empty($action['content']['rest_api_method_output']['default_trigger_action_id']) ? $action['content']['rest_api_method_output']['default_trigger_action_id'] : null)\n                    );\n\n                    if (isset($params['msg'])) {\n                        $argsDefault['msg'] = $params['msg'];\n                    } elseif (isset($params['msg_text'])) {\n                        $argsDefault['msg_text'] = $params['msg_text'];\n                    }\n                    \n                    if (isset($params['replace_array']) && !empty($params['replace_array'])) {\n                        $argsDefault['replace_array'] = array_merge($params['replace_array'], $argsDefault['replace_array']);\n                    }\n\n                    // Alternative trigger, most of the time just for logging purposes\n                    if (isset($action['content']['rest_api_method_output']['default_trigger_alt']) && is_numeric($action['content']['rest_api_method_output']['default_trigger_alt'])) {\n                        $triggerDefaultAlt = erLhcoreClassModelGenericBotTrigger::fetch($action['content']['rest_api_method_output']['default_trigger_alt']);\n                        if ($triggerDefaultAlt instanceof erLhcoreClassModelGenericBotTrigger) {\n                            erLhcoreClassGenericBotWorkflow::processTrigger($chat, $triggerDefaultAlt, false, array('args' => $argsDefault));\n                        }\n                    }\n\n                    return $argsDefault;\n                }\n\n                if ($response['content'] != '' || (isset($response['meta']) && !empty($response['meta']))){\n\n                    if (isset($action['content']['attr_options']['no_body']) && $action['content']['attr_options']['no_body'] == true) {\n                        return;\n                    }\n\n                    $msg = new erLhcoreClassModelmsg();\n                    $msg->chat_id = $chat->id;\n                    $msg->name_support = erLhcoreClassGenericBotWorkflow::getDefaultNick($chat);\n\n                    if (isset($action['content']['attr_options']['as_system']) && $action['content']['attr_options']['as_system'] == true) {\n                        $msg->user_id = -1; // Save as system message\n                    } else {\n                        $msg->user_id = -2; // Save as bot message\n                    }\n\n                    $msg->time = time() + 1;\n                    $msg->meta_msg = (isset($response['meta']) && !empty($response['meta'])) ? json_encode($response['meta']) : '';\n                    $msg->msg = $response['content'];\n\n                    if (!isset($params['do_not_save']) || $params['do_not_save'] == false) {\n                        if ($msg->chat_id > 0) {\n                            $msg->saveThis();\n                        }\n                    }\n\n                    return  $msg;\n                }\n            }\n        }\n    }\n\n    public static function makeRequest($host, $methodSettings, $paramsCustomer)\n    {\n        $msg_text = '';\n\n        if (isset($paramsCustomer['params']['msg'])) {\n            $msg_text = $paramsCustomer['params']['msg']->msg;\n        } elseif (isset($paramsCustomer['params']['msg_text'])) {\n            $msg_text = $paramsCustomer['params']['msg_text'];\n        }\n\n        // Allow extensions to preparse send message\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_parse_send', array('msg' => & $msg_text));\n\n        $msg_text_cleaned = $msg_text;\n\n        // We have to extract attached files and send them separately\n        $matches = array();\n        preg_match_all('/\\[file=\"?(.*?)\"?\\]/', $msg_text, $matches);\n\n        $media = array();\n        $files = array();\n\n        foreach ($matches[1] as $index => $body) {\n            $parts = explode('_', $body);\n            $fileID = $parts[0];\n            $hash = $parts[1];\n            try {\n                $file = erLhcoreClassModelChatFile::fetch($fileID);\n                if (is_object($file) && $hash == $file->security_hash) {\n\n                    $url = erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurldirect('file/downloadfile') . \"/{$file->id}/{$hash}\";;\n\n                    $media[] = array(\n                        'id' => $file->id,\n                        'size' => $file->size,\n                        'upload_name' => $file->upload_name,\n                        'type' => $file->type,\n                        'extension' => $file->extension,\n                        'hash' => $hash,\n                        'url' => $url\n                    );\n\n                    $msg_text_cleaned = str_replace($matches[0][$index],'',$msg_text_cleaned);\n\n                    $files[] = $file;\n                }\n\n            } catch (Exception $e) {\n\n            }\n        }\n\n        if (empty($media)) {\n            $matches = array();\n\n            preg_match_all('/\\[img\\](.*?)\\[\\/img\\]/ms', $msg_text, $matches);\n\n            foreach ($matches[1] as $index => $img) {\n                $in = trim($img);\n\n                $url = erLhcoreClassBBCode::esc_url($in);\n\n                if ( empty($url) )\n                    continue;\n\n                $file = new erLhcoreClassModelChatFile();\n                $file->remote_file = true;\n                $file->remote_url = $url;\n\n                $parts = explode('.',strtolower($file->remote_url));\n                $extension = array_pop($parts);\n\n                $extensionMimetype = array(\n                    'jpeg' => 'image/jpeg',\n                    'jpg' => 'image/jpg',\n                    'png' => 'image/png',\n                    'gif' => 'image/gif',\n                );\n\n                $file->upload_name = (isset($extensionMimetype[$extension]) ? 'image.' . $extension : 'image.png');\n                $file->extension = isset($extensionMimetype[$extension]) ? $extension : 'png';\n                $file->type = (isset($extensionMimetype[$extension]) ? $extensionMimetype[$extension] : 'image/jpeg');\n\n                $media[] = array(\n                    'id' => null,\n                    'size' => null,\n                    'upload_name' =>  $file->upload_name,\n                    'type' => $file->type,\n                    'extension' => $file->extension,\n                    'hash' => '',\n                    'url' => $file->remote_url\n                );\n\n                $files[] = $file;\n\n                $msg_text_cleaned = str_replace($matches[0][$index],'',$msg_text_cleaned);\n            }\n        }\n\n        // Allow extensions to preparse send message\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_parse_send_clean', array('msg' => & $msg_text_cleaned));\n\n        $file_body = null;\n        $file_url = null;\n        $file_name = null;\n\n        $file_api = false;\n\n        // Switch to file API if it's only one file send\n        if (isset($methodSettings['body_raw_file']) && $methodSettings['body_raw_file'] != '' && count($files) == 1 && trim($msg_text_cleaned) == '') {\n            foreach ($files as $mediaFile) {\n\n                $file_api = false;\n\n                if (isset($methodSettings['suburl_file']) && !empty($methodSettings['suburl_file'])) {\n                    if (in_array($mediaFile->type,['image/jpeg','image/png','image/gif'])) {\n                        $fileBodyRawFile = preg_replace('/\\{file_api\\}(.*?)\\{\\/file_api\\}/ms','',$methodSettings['body_raw_file']);\n                        $fileBodyRawFile = trim(str_replace(['{image_api}','{/image_api}'],'', $fileBodyRawFile));\n                        if (!empty($fileBodyRawFile)) {\n                            $methodSettings['suburl'] = $methodSettings['suburl_file'];\n                            $methodSettings['suburl'] = preg_replace('/\\{file_api\\}(.*?)\\{\\/file_api\\}/ms','',$methodSettings['suburl']);\n                            $methodSettings['suburl'] = str_replace(['{image_api}','{/image_api}'],'', $methodSettings['suburl']);\n                            $methodSettings['body_raw_file'] = $fileBodyRawFile;\n                            $file_api = true;\n                        }\n                    } else {\n                        $fileBodyRawFile = preg_replace('/\\{image_api\\}(.*?)\\{\\/image_api\\}/ms','',$methodSettings['body_raw_file']);\n                        $fileBodyRawFile = trim(str_replace(['{file_api}','{/file_api}'],'', $fileBodyRawFile));\n                        if (!empty($fileBodyRawFile)) {\n                            $methodSettings['suburl'] = $methodSettings['suburl_file'];\n                            $methodSettings['suburl'] = preg_replace('/\\{image_api\\}(.*?)\\{\\/image_api\\}/ms','',$methodSettings['suburl']);\n                            $methodSettings['suburl'] = str_replace(['{file_api}','{/file_api}'],'', $methodSettings['suburl']);\n                            $methodSettings['body_raw_file'] = $fileBodyRawFile;\n                            $file_api = true;\n                        }\n                    }\n                }\n\n                $file_name = $mediaFile->upload_name;\n\n                if ($mediaFile->remote_file !== true) {\n                    $file_body = 'data:'.$mediaFile->type.';base64,'.base64_encode(file_get_contents($mediaFile->file_path_server));\n                    $file_url = erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurldirect('file/downloadfile') . \"/{$mediaFile->id}/{$mediaFile->security_hash}\";\n                } else {\n                    $file_body = '';\n                    if (strpos($file->remote_url,'http://') !== false || strpos($file->remote_url,'https://') !== false) {\n                        $file_url = $file->remote_url;\n                    } else {\n                        $file_url = erLhcoreClassSystem::getHost() . $file->remote_url;;\n                    }\n                }\n             }\n        }\n\n        $dynamicParamsVariables = self::extractDynamicParams($methodSettings, $paramsCustomer['params']);\n\n        $dynamicReplaceVariables = self::extractDynamicVariables($methodSettings, $paramsCustomer['chat']);\n\n        $replaceVariables = array(\n            '{{msg}}' => $msg_text,\n            '{{msg_clean}}' => trim($msg_text_cleaned),\n            '{{msg_url}}' => erLhcoreClassBBCodePlain::make_clickable($msg_text, array('sender' => 0)),\n            '{{chat_id}}' => $paramsCustomer['chat']->id,\n            '{{lhc.nick}}' =>$paramsCustomer['chat']->nick,\n            '{{lhc.email}}' => $paramsCustomer['chat']->email,\n            '{{lhc.department}}' => (string)$paramsCustomer['chat']->department,\n            '{{lhc.dep_id}}' => (string)$paramsCustomer['chat']->dep_id,\n            '{{ip}}' => (string)erLhcoreClassIPDetect::getIP(),\n            '{{media}}' => json_encode($media),\n            '{{file_body}}' => $file_body,\n            '{{file_url}}' => $file_url,\n            '{{file_name}}' => $file_name\n        );\n\n        $replaceVariables = array_merge($replaceVariables, $dynamicReplaceVariables);\n\n        $replaceVariables = array_merge($replaceVariables, $dynamicParamsVariables);\n\n        foreach ($replaceVariables as $keyVariable => $variableValue) {\n            if (is_array($variableValue) || is_object($variableValue)) {\n                $replaceVariables[$keyVariable] = json_encode($variableValue);\n            }\n        }\n\n        $replaceVariablesJSON = array(\n            '{{msg}}' => json_encode($msg_text),\n            '{{msg_clean}}' => json_encode(trim($msg_text_cleaned)),\n            '{{msg_url}}' => json_encode(erLhcoreClassBBCodePlain::make_clickable($msg_text, array('sender' => 0))),\n            '{{chat_id}}' => json_encode($paramsCustomer['chat']->id),\n            '{{lhc.nick}}' => json_encode($paramsCustomer['chat']->nick),\n            '{{lhc.email}}' => json_encode($paramsCustomer['chat']->email),\n            '{{lhc.department}}' => json_encode((string)$paramsCustomer['chat']->department),\n            '{{lhc.dep_id}}' => json_encode((string)$paramsCustomer['chat']->dep_id),\n            '{{ip}}' => json_encode(erLhcoreClassIPDetect::getIP()),\n            '{{media}}' => json_encode($media),\n            '{{file_body}}' => json_encode($file_body),\n            '{{file_url}}' => json_encode($file_url),\n            '{{file_name}}' =>json_encode($file_name)\n        );\n\n        foreach ($dynamicReplaceVariables as $keyDynamic => $valueDynamic) {\n            $replaceVariablesJSON[$keyDynamic] = json_encode($valueDynamic);\n        }\n\n        foreach ($dynamicParamsVariables as $keyDynamic => $valueDynamic) {\n            $replaceVariablesJSON[$keyDynamic] = json_encode($valueDynamic);\n        }\n\n        if (isset($methodSettings['conditions']) && is_array($methodSettings['conditions']) && !empty($methodSettings['conditions'])) {\n            foreach ($methodSettings['conditions'] as $condition){\n\n                if (isset($replaceVariables[$condition['key']]) && $replaceVariables[$condition['key']] !== null) {\n                    $condition['key'] = $replaceVariables[$condition['key']];\n                    $validCondition = true;\n                } else {\n                    $validCondition = false;\n                }\n\n                if ($validCondition === true && isset($condition['success_condition']) && $condition['success_condition'] != '' && isset($condition['value']) && $condition['value'] != '') {\n                    if ( $condition['success_condition'] == 'eq' && !($condition['key'] == $condition['value'])) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'lt' && !($condition['key'] < $condition['value'])) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'lte' && !($condition['key'] <= $condition['value'])) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'neq' && !($condition['key'] != $condition['value'])) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'gte' && !($condition['key'] >= $condition['value'])) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'gt' && !($condition['key'] > $condition['value'])) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'like' && erLhcoreClassGenericBotWorkflow::checkPresence(explode(',',$condition['value']),$condition['key'],0) == false) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'notlike' && erLhcoreClassGenericBotWorkflow::checkPresence(explode(',',$condition['value']),$condition['key'],0) == true) {\n                        $validCondition = false;\n                    } else if ($condition['success_condition'] == 'contains' && strrpos($condition['value'],$condition['key']) === false) {\n                        $validCondition = false;\n                    }\n                }\n\n                if ($validCondition == false) {\n                     return array(\n                        'content' => 'Invalid conditions',\n                        'http_code' => 404,\n                        'http_data' => '',\n                        'content_2' => '',\n                        'content_3' =>  '',\n                        'content_4' => '',\n                        'content_5' =>  '',\n                        'content_6' => '',\n                        'http_error' => '',\n                        'content_raw' => '',\n                        'meta' => '',\n                        'id' => 0\n                    );\n                }\n            }\n        }\n\n        foreach ($paramsCustomer['chat']->additional_data_array as $keyItem => $addItem) {\n            if (!is_string($addItem) || (is_string($addItem) && ($addItem != ''))) {\n                if (isset($addItem['identifier'])) {\n                    if (is_string($addItem['value']) || is_numeric($addItem['value'])) {\n                        $replaceVariables['{{lhc.add.' . $addItem['identifier'] . '}}'] = $addItem['value'];\n                        $replaceVariablesJSON['{{lhc.add.' . $addItem['identifier'] . '}}'] = json_encode($addItem['value']);\n                    }\n                } else if (isset($addItem['key'])) {\n                    if (is_string($addItem['value']) || is_numeric($addItem['value'])) {\n                        $replaceVariables['{{lhc.add.' . $addItem['key'] . '}}'] = $addItem['value'];\n                        $replaceVariablesJSON['{{lhc.add.' . $addItem['key'] . '}}'] = json_encode($addItem['value']);\n                    }\n                }\n            }\n        }\n\n        foreach ($paramsCustomer['chat']->chat_variables_array as $keyItem => $addItem) {\n            if (is_string($addItem) || is_numeric($addItem)) {\n                $replaceVariables['{{lhc.var.' . $keyItem . '}}'] = $addItem;\n                $replaceVariablesJSON['{{lhc.var.' . $keyItem . '}}'] = json_encode($addItem);\n            }\n        }\n\n        $queryArgs = array();\n\n        if (isset($methodSettings['query']) && !empty($methodSettings['query'])) {\n            foreach ($methodSettings['query'] as $dataQuery) {\n                $queryArgs[$dataQuery['key']] = str_replace(array_keys($replaceVariables), array_values($replaceVariables), $dataQuery['value']);\n            }\n        }\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_TIMEOUT, (isset($methodSettings['max_execution_time']) && is_numeric($methodSettings['max_execution_time']) && $methodSettings['max_execution_time'] >= 1 && $methodSettings['max_execution_time'] <= 30) ? (int)$methodSettings['max_execution_time'] : 10);\n        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 5);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n\n        if (isset($methodSettings['method']) && ($methodSettings['method'] == 'PUT' || $methodSettings['method'] == 'DELETE')) {\n            curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $methodSettings['method']);\n        }\n\n        $headers = array();\n\n        if (isset($methodSettings['header']) && !empty($methodSettings['header'])) {\n            foreach ($methodSettings['header'] as $header) {\n                $headers[] = $header['key'] . ': ' . str_replace(array_keys($replaceVariables), array_values($replaceVariables), $header['value']);\n            }\n        }\n\n        if (isset($methodSettings['method']) && $methodSettings['method'] == 'POST') {\n            curl_setopt($ch, CURLOPT_POST, 1);\n        }\n\n        if (isset($methodSettings['authorization']) && $methodSettings['authorization'] == 'basicauth') {\n            curl_setopt($ch, CURLOPT_USERPWD, $methodSettings['auth_username'] . \":\" . $methodSettings['auth_password']);\n        } elseif (isset($methodSettings['authorization']) && $methodSettings['authorization'] == 'NTLMauth') {\n            curl_setopt($ch, CURLOPT_USERPWD, $methodSettings['auth_username'] . \":\" . $methodSettings['auth_password']);\n            curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_NTLM);\n        } elseif (isset($methodSettings['authorization']) && $methodSettings['authorization'] == 'bearer' && isset($methodSettings['auth_bearer']) && $methodSettings['auth_bearer'] != '') {\n            $headers[] = 'Authorization: Bearer ' . $methodSettings['auth_bearer'];\n        } else if (isset($methodSettings['authorization']) && $methodSettings['authorization'] == 'apikey') {\n            if ($methodSettings['api_key_location'] == 'header' && isset($methodSettings['auth_api_key_key']) && isset($methodSettings['auth_api_key_name'])) {\n                $headers[] = $methodSettings['auth_api_key_name'] . ': ' . $methodSettings['auth_api_key_key'];\n            } else if ($methodSettings['api_key_location'] == 'queryparams') {\n                $queryArgs[$methodSettings['auth_api_key_name']] = $methodSettings['auth_api_key_key'];\n            }\n        }\n\n        if (isset($methodSettings['userparams']) && !empty($methodSettings['userparams'])) {\n            foreach ($methodSettings['userparams'] as $userParam) {\n\n                $valueParam = '';\n\n                if (isset($paramsCustomer['action']['content']['rest_api_method_params'][$userParam['id']]) && !empty($paramsCustomer['action']['content']['rest_api_method_params'][$userParam['id']])) {\n                    $valueParam = $paramsCustomer['action']['content']['rest_api_method_params'][$userParam['id']];\n                }\n\n                if (!isset($userParam['location']) || $userParam['location'] == '') {\n                    $queryArgs[$userParam['key']] = $valueParam;\n                } elseif (isset($userParam['location']) && $userParam['location'] == 'post_param') {\n                    $postParams[$userParam['key']] = $valueParam;\n                } elseif (isset($userParam['location']) && $userParam['location'] == 'body_param') {\n                    $methodSettings['body_raw'] = str_replace('{{' . $userParam['key'] . '}}', json_encode($valueParam), $file_api === true ? $methodSettings['body_raw_file'] : $methodSettings['body_raw']);\n                }\n            }\n        }\n\n        if (isset($methodSettings['body_request_type']) && ($methodSettings['body_request_type'] == 'form-data' || $methodSettings['body_request_type'] == 'form-data-urlencoded')) {\n            if (isset($methodSettings['postparams']) && !empty($methodSettings['postparams'])) {\n                $postParams = array();\n                foreach ($methodSettings['postparams'] as $postParam) {\n                    $postParams[$postParam['key']] = str_replace(array_keys($replaceVariables), array_values($replaceVariables), $postParam['value']);\n                }\n\n                if ($methodSettings['body_request_type'] == 'form-data-urlencoded') {\n                    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postParams));\n                } else {\n                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postParams);\n                }\n            }\n\n            if ($methodSettings['body_request_type'] == 'form-data-urlencoded') {\n                $headers[] = 'Cache-Control: no-cache';\n                $headers[] = 'Content-Type: application/x-www-form-urlencoded';\n            }\n\n        } elseif (isset($methodSettings['body_request_type']) && $methodSettings['body_request_type'] == 'raw') {\n\n            $rawReplaceArray = array();\n            foreach ($replaceVariablesJSON as $keyVariable => $keyValue) {\n                $rawReplaceArray['raw_'.$keyVariable] = trim($keyValue,\"\\\"\");\n            }\n\n            $bodyPOST = str_replace(array_keys($rawReplaceArray), array_values($rawReplaceArray), $file_api === true ? $methodSettings['body_raw_file'] : $methodSettings['body_raw']);\n            $bodyPOST = str_replace(array_keys($replaceVariablesJSON), array_values($replaceVariablesJSON), $bodyPOST);\n            $bodyPOST = preg_replace('/{{lhc\\.(var|add)\\.(.*?)}}/','\"\"',$bodyPOST);\n\n            curl_setopt($ch, CURLOPT_POSTFIELDS, $bodyPOST);\n\n            if (isset($methodSettings['body_request_type_content'])) {\n                if ($methodSettings['body_request_type_content'] == 'json') {\n                    $headers[] = 'Content-Type: application/json';\n                } else if ($methodSettings['body_request_type_content'] == 'text') {\n                    $headers[] = 'Content-Type: text/plain';\n                } else if ($methodSettings['body_request_type_content'] == 'js') {\n                    $headers[] = 'Content-Type: application/javascript';\n                } else if ($methodSettings['body_request_type_content'] == 'appxml') {\n                    $headers[] = 'Content-Type: application/xml';\n                } else if ($methodSettings['body_request_type_content'] == 'textxml') {\n                    $headers[] = 'Content-Type: text/xml';\n                }else if ($methodSettings['body_request_type_content'] == 'texthtml') {\n                    $headers[] = 'Content-Type: text/html';\n                }\n            }\n        }\n\n        $queryArgsString = http_build_query($queryArgs);\n        $url = rtrim($host) . str_replace(array_keys($replaceVariables), array_values($replaceVariables), (isset($methodSettings['suburl']) ? $methodSettings['suburl'] : '')) . (!empty($queryArgsString) ? '?'.$queryArgsString : '');\n\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n        @curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);\n\n        $paramsRequest = [\n            'headers' => $headers,\n            'url' => $url,\n        ];\n\n        if (isset($postParams)) {\n            $paramsRequest['post'] = $postParams;\n        }\n\n        if (isset($bodyPOST)) {\n            $paramsRequest['body'] = $bodyPOST;\n        }\n\n        $commandResponse = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.rest_api_make_request', array(\n            'method_settings' => $methodSettings,\n            'params_customer' => $paramsCustomer,\n            'params_request' => $paramsRequest,\n            'url' => $url\n        ));\n\n        $overridden = false;\n\n        if (isset($commandResponse['processed']) && $commandResponse['processed'] == true) {\n            $content = $commandResponse['http_response'];\n            $http_error = $commandResponse['http_error'];\n            $httpcode = $commandResponse['http_code'];\n            $overridden = true;\n        } else {\n            $content = curl_exec($ch);\n            $http_error = '';\n        }\n\n        $http_data = json_encode($paramsRequest);\n\n        if ($overridden == false && curl_errno($ch)) {\n            $http_error = curl_error($ch);\n        }\n\n        if ($overridden == false) {\n            $httpcode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n        }\n\n        if (isset($methodSettings['output']) && !empty($methodSettings['output'])) {\n\n            $allOptional = true;\n\n            // First check is there any required to check combinations and disable others if so.\n            foreach ($methodSettings['output'] as $index => $outputCombination)\n            {\n                if (isset($paramsCustomer['action']['content']['rest_api_method_output'][$outputCombination['id'] . '_chk']) && $paramsCustomer['action']['content']['rest_api_method_output'][$outputCombination['id'] . '_chk'] == true) {\n                    $allOptional = false;\n                    break;\n                }\n            }\n\n            // Sort by priority, first we will check the ones with higher priority\n            usort($methodSettings['output'], function ($a, $b) {\n                return !(isset($a['output_priority']) && is_numeric($a['output_priority']) && (!isset($b['output_priority']) || $a['output_priority'] > $b['output_priority'])) ? 1 : 0;\n            });\n            \n            foreach ($methodSettings['output'] as $outputCombination)\n            {\n                if ($allOptional == false && (!isset($paramsCustomer['action']['content']['rest_api_method_output'][$outputCombination['id'] . '_chk']) || $paramsCustomer['action']['content']['rest_api_method_output'][$outputCombination['id'] . '_chk'] == false)) {\n                    // One of the conditions is checked, but not this one.\n                    continue;\n                }\n\n                // Verify HTTP Status code\n                if (!isset($outputCombination['success_header']) || $outputCombination['success_header'] == '' || in_array((string)$httpcode,explode(',',$outputCombination['success_header']))){\n\n                    if (isset($outputCombination['success_location']) && $outputCombination['success_location'] != '') {\n\n                        if (isset($outputCombination['format']) && $outputCombination['format'] == 'xml') {\n                            $contentJSON = json_decode(json_encode(simplexml_load_string($content)),true);\n                        } else {\n                            $contentJSON = json_decode($content, true);\n                        }\n\n                        $successLocation = self::extractAttribute($contentJSON, $outputCombination['success_location']);\n\n                        if ($successLocation['found'] === true) {\n\n                            $responseValueSub = array();\n                            for ($i = 2; $i <= 6; $i++) {\n                                if (isset($outputCombination['success_location_' . $i]) && $outputCombination['success_location_' . $i] != '') {\n                                    $successLocationNumbered = self::extractAttribute($contentJSON,$outputCombination['success_location_' . $i]);\n                                    if ($successLocationNumbered['found'] === true) {\n                                        $responseValueSub[$i] = $successLocationNumbered['value'];\n                                    }\n                                }\n                            }\n\n                            $responseValueCompare2 = $responseValueCompare = $responseValue = $successLocation['value'];\n\n                            // First condition\n                            if (isset($outputCombination['success_condition_val']) && !empty($outputCombination['success_condition_val'])) {\n                                $responseValueCompareLocation = self::extractAttribute($contentJSON, $outputCombination['success_condition_val']);\n                                if ($responseValueCompareLocation['found'] === true && !is_array($responseValueCompareLocation['value'])) {\n                                    $responseValueCompare = $responseValueCompareLocation['value'];\n                                } else {\n                                    // Attribute was not found\n                                    continue;\n                                }\n                            }\n\n                            // Second condition\n                            if (isset($outputCombination['success_condition_val_2']) && !empty($outputCombination['success_condition_val_2'])) {\n                                $responseValueCompareLocation = self::extractAttribute($contentJSON, $outputCombination['success_condition_val_2']);\n\n                                if ($responseValueCompareLocation['found'] === true && !is_array($responseValueCompareLocation['value'])) {\n                                    $responseValueCompare2 = $responseValueCompareLocation['value'];\n                                } else {\n                                    // Attribute was not found\n                                    continue;\n                                }\n                            }\n\n\n                        } else {\n                            continue; // Required attribute was not found\n                        }\n                    } else {\n                        $responseValueCompare2 = $responseValueCompare = $responseValue = $content;\n                    }\n\n                    foreach([   [\n                                    'success_compare_value' => 'success_compare_value',\n                                    'success_condition' => 'success_condition',\n                                    'live_value' => $responseValueCompare,\n                                ],\n                                [\n                                    'success_compare_value' => 'success_compare_value_2',\n                                    'success_condition' => 'success_condition_2',\n                                    'live_value' => $responseValueCompare2,\n                                ]\n                            ] as $attrCompare) {\n                                if (isset($outputCombination[$attrCompare['success_condition']]) && $outputCombination[$attrCompare['success_condition']] != '' && isset($outputCombination[$attrCompare['success_compare_value']]) && $outputCombination[$attrCompare['success_compare_value']] != '') {\n                                    if ( $outputCombination[$attrCompare['success_condition']] == 'eq' && !($attrCompare['live_value'] == $outputCombination[$attrCompare['success_compare_value']])) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'lt' && !($attrCompare['live_value'] < $outputCombination[$attrCompare['success_compare_value']])) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'lte' && !($attrCompare['live_value'] <= $outputCombination[$attrCompare['success_compare_value']])) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'neq' && !($attrCompare['live_value'] != $outputCombination[$attrCompare['success_compare_value']])) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'gte' && !($attrCompare['live_value'] >= $outputCombination[$attrCompare['success_compare_value']])) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'gt' && !($attrCompare['live_value'] > $outputCombination[$attrCompare['success_compare_value']])) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'like' && erLhcoreClassGenericBotWorkflow::checkPresence(explode(',',$outputCombination[$attrCompare['success_compare_value']]),$attrCompare['live_value'],0) == false) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'notlike' && erLhcoreClassGenericBotWorkflow::checkPresence(explode(',',$outputCombination[$attrCompare['success_compare_value']]),$attrCompare['live_value'],0) == true) {\n                                        continue 2;\n                                    } else if ($outputCombination[$attrCompare['success_condition']] == 'contains' && strrpos($attrCompare['live_value'], $outputCombination[$attrCompare['success_compare_value']]) === false) {\n                                        continue 2;\n                                    }\n                                }\n                    }\n\n                    $meta = array();\n\n                    if (isset($outputCombination['success_location_meta']) && $outputCombination['success_location_meta'] != '') {\n                        $contentJSON = json_decode($content,true);\n                        $metaResponse = self::extractAttribute($contentJSON, $outputCombination['success_location_meta']);\n\n                        if ($metaResponse['found'] == true) {\n                            $meta = $metaResponse['value'];\n                        }\n                    }\n\n                    return array(\n                        'content' => $responseValue,\n                        'content_raw' => $content,\n                        'http_code' => $httpcode,\n                        'http_error' => $http_error,\n                        'http_data' => $http_data,\n                        'content_2' => (isset($responseValueSub[2]) ? $responseValueSub[2] : ''),\n                        'content_3' => (isset($responseValueSub[3]) ? $responseValueSub[3] : ''),\n                        'content_4' => (isset($responseValueSub[4]) ? $responseValueSub[4] : ''),\n                        'content_5' => (isset($responseValueSub[5]) ? $responseValueSub[5] : ''),\n                        'content_6' => (isset($responseValueSub[6]) ? $responseValueSub[6] : ''),\n                        'meta' => $meta,\n                        'id' => $outputCombination['id']);\n                }\n            }\n\n            // We did not found matching response. Return everything.\n            return array(\n                'content' => $content,\n                'content_raw' => $content,\n                'http_code' => $httpcode,\n                'http_error' => $http_error,\n                'http_data' => $http_data,\n                'content_2' => '',\n                'content_3' => '',\n                'content_4' => '',\n                'content_5' => '',\n                'content_6' => '',\n                'meta' => array()\n            );\n        }\n\n        return array(\n            'content' => $content,\n            'content_raw' => $content,\n            'http_code' => $httpcode,\n            'http_error' => $http_error,\n            'http_data' => $http_data,\n            'content_2' => '',\n            'content_3' => '',\n            'content_4' => '',\n            'content_5' => '',\n            'content_6' => '',\n            'meta' => array()\n        );\n    }\n\n    public static function extractDynamicParams($methodSettings, $params) {\n\n        $dynamicVariables = [];\n        $requiredVars = [];\n\n        $userData = array(\n            'dynamic_variables' => & $dynamicVariables,\n            'required_vars' => & $requiredVars,\n            'params' => $params,\n        );\n\n        array_walk_recursive($methodSettings, function ($item, $key, $userData) {\n\n            $matchesValues = [];\n            preg_match_all('~\\{\\{args\\.((?:[^\\{\\}\\}]++|(?R))*)\\}\\}~', $item,$matchesValues);\n\n            if (!empty($matchesValues[0])) {\n                foreach ($matchesValues[0] as $indexElement => $elementValue) {\n                    $valueAttribute = self::extractAttribute($userData['params'], $matchesValues[1][$indexElement], '.');\n                    $userData['dynamic_variables'][$elementValue] = $valueAttribute['found'] == true ? $valueAttribute['value'] : null;\n                }\n            }\n\n            $matchesValues = [];\n            preg_match_all('~\\{\\{args\\.((?:[^\\{\\}\\}]++|(?R))*)\\}\\}~', $key, $matchesValues);\n            if (!empty($matchesValues[0])) {\n                foreach ($matchesValues[0] as $indexElement => $elementValue) {\n                    $valueAttribute = self::extractAttribute($userData['params'], $matchesValues[1][$indexElement], '.');\n                    $userData['dynamic_variables'][$elementValue] = $valueAttribute['found'] == true ? $valueAttribute['value'] : null;\n                }\n            }\n\n        }, $userData);\n\n        return $userData['dynamic_variables'];\n    }\n\n    public static function extractDynamicVariables($methodSettings, $chat) {\n\n         $dynamicVariables = [];\n         $requiredVars = [];\n         \n         $userData = array(\n             'dynamic_variables' => & $dynamicVariables,\n             'required_vars' => & $requiredVars,\n             'chat' => $chat,\n         );\n         \n         array_walk_recursive($methodSettings, function ($item, $key, $userData) {\n            $matchesValues = [];\n            preg_match_all('~\\{\\{lhc\\.((?:[^\\{\\}\\}]++|(?R))*)\\}\\}~', $item,$matchesValues);\n\n            if (!empty($matchesValues[0])) {\n                foreach ($matchesValues[0] as $indexElement => $elementValue) {\n                    $userData['dynamic_variables'][$elementValue] = $userData['chat']->{$matchesValues[1][$indexElement]};\n                }\n            }\n\n            $matchesValues = [];\n            preg_match_all('~\\{\\{lhc\\.((?:[^\\{\\}\\}]++|(?R))*)\\}\\}~', $key, $matchesValues);\n                \n            if (!empty($matchesValues[0])) {\n                foreach ($matchesValues[0] as $indexElement => $elementValue) {\n                    $userData['dynamic_variables'][$elementValue] = $userData['chat']->{$matchesValues[1][$indexElement]};\n                }\n            }\n\n            // Detect does customer want's somewhere all messages\n            if (strpos($item,'{{msg_all_html}}') !== false && !in_array('{{msg_all_html}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_all_html}}';\n\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false,'sort' => 'id DESC', 'filter' => array('chat_id' => $userData['chat']->id))));\n\n                // Fetch chat messages\n                $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/full.tpl.php');\n                $tpl->set('chat', $userData['chat']);\n                $tpl->set('messages', $messages);\n                $userData['dynamic_variables']['{{msg_all_html}}'] = $tpl->fetch();\n            }\n\n            // Detect does customer want's somewhere all messages\n            if (strpos($item,'{{msg_items}}') !== false && !in_array('{{msg_items}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_items}}';\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false,'sort' => 'id DESC', 'filter' => array('chat_id' => $userData['chat']->id))));\n                $userData['dynamic_variables']['{{msg_items}}'] = $messages;\n            }\n\n            if (strpos($item,'{{msg_all}}') !== false && !in_array('{{msg_all}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_all}}';\n\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false,'sort' => 'id DESC', 'filter' => array('chat_id' => $userData['chat']->id))));\n                // Fetch chat messages\n                $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n                $tpl->set('chat', $userData['chat']);\n                $tpl->set('messages', $messages);\n\n                $userData['dynamic_variables']['{{msg_all}}'] = $tpl->fetch();\n            }\n\n            // All messages without [<date>] [<nick>] and system messages\n            if (strpos($item,'{{msg_all_content}}') !== false && !in_array('{{msg_all_content}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_all_content}}';\n\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false, 'filternot' => array('user_id' => -1), 'sort' => 'id DESC', 'filter' => array('chat_id' => $userData['chat']->id))));\n\n                // Fetch chat messages\n                $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n                $tpl->set('chat', $userData['chat']);\n                $tpl->set('messages', $messages);\n                $tpl->set('remove_meta', true);\n\n                $userData['dynamic_variables']['{{msg_all_content}}'] = $tpl->fetch();\n            }\n\n             // All messages since operator took over without [<date>] [<nick>] and system messages\n            if (strpos($item,'{{msg_all_since_transfer_content}}') !== false && !in_array('{{msg_all_since_transfer_content}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_all_since_transfer_content}}';\n\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false, 'filternot' => array('user_id' => -1), 'sort' => 'id DESC','filter', 'filtergte' => array('time' => $userData['chat']->pnd_time), 'filter' => array('chat_id' => $userData['chat']->id))));\n\n                // Fetch chat messages\n                $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n                $tpl->set('chat', $userData['chat']);\n                $tpl->set('messages', $messages);\n                $tpl->set('remove_meta', true);\n\n                $userData['dynamic_variables']['{{msg_all_since_transfer_content}}'] = $tpl->fetch();\n            }\n\n            // All operator messages from chat\n            if (strpos($item,'{{msg_all_op_msg_content}}') !== false && !in_array('{{msg_all_op_msg_content}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_all_op_msg_content}}';\n\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false, 'filtergt' => array('user_id' => 0), 'sort' => 'id DESC','filter' => array('chat_id' => $userData['chat']->id))));\n\n                // Fetch chat messages\n                $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n                $tpl->set('chat', $userData['chat']);\n                $tpl->set('messages', $messages);\n                $tpl->set('remove_meta', true);\n\n                $userData['dynamic_variables']['{{msg_all_op_msg_content}}'] = $tpl->fetch();\n            }\n\n            // All visitor messages without meta\n            if (strpos($item,'{{msg_all_vis_msg_content}}') !== false && !in_array('{{msg_all_vis_msg_content}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_all_vis_msg_content}}';\n\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false, 'sort' => 'id DESC','filter' => array('user_id' => 0, 'chat_id' => $userData['chat']->id))));\n\n                // Fetch chat messages\n                $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n                $tpl->set('chat', $userData['chat']);\n                $tpl->set('messages', $messages);\n                $tpl->set('remove_meta', true);\n\n                $userData['dynamic_variables']['{{msg_all_vis_msg_content}}'] = $tpl->fetch();\n            }\n\n            // All visitor messages since transfer without meta\n            if (strpos($item,'{{msg_all_vis_since_transfer_content}}') !== false && !in_array('{{msg_all_vis_since_transfer_content}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{msg_all_vis_since_transfer_content}}';\n\n                $messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => false, 'sort' => 'id DESC', 'filtergte' => array('time' => $userData['chat']->pnd_time), 'filter' => array('user_id' => 0, 'chat_id' => $userData['chat']->id))));\n\n                // Fetch chat messages\n                $tpl = new erLhcoreClassTemplate( 'lhchat/messagelist/plain.tpl.php');\n                $tpl->set('chat', $userData['chat']);\n                $tpl->set('messages', $messages);\n                $tpl->set('remove_meta', true);\n\n                $userData['dynamic_variables']['{{msg_all_vis_since_transfer_content}}'] = $tpl->fetch();\n            }\n\n            // Detect does customer want's somewhere footprint\n            if (strpos($item,'{{footprint}}') !== false && !in_array('{{footprint}}',$userData['required_vars'])) {\n                $userData['required_vars'][] = '{{footprint}}';\n\n                $footprints = erLhcoreClassModelChatOnlineUserFootprint::getList(array('limit' => 25,'sort' => 'id DESC', 'filter' => array('chat_id' => $userData['chat']->id)));\n\n                $itemsFootprint = array();\n                foreach ($footprints as $footprint) {\n                    $itemsFootprint[] = $footprint->time_ago . ' | ' . $footprint->page;\n                }\n\n                $userData['dynamic_variables']['{{footprint}}'] = implode(\"\\n\",$itemsFootprint);\n            }\n\n        }, $userData);\n\n        return $userData['dynamic_variables'];\n    }\n\n    public static function extractAttribute($partData, $string, $separator = ':')\n    {\n\n        $stringParts = explode('^',$string);\n\n        $parts = explode($separator, $stringParts[0]);\n\n        $partFound = true;\n        foreach ($parts as $part) {\n\n            if (strpos($part,'[') === 0) {\n\n                $conditions = explode('=', str_replace(['[',']'],'',$part));\n\n                $foundConditions = false;\n                foreach ($partData as $partItem) {\n                    if ($partItem[$conditions[0]] == $conditions[1]) {\n                        $partData = $partItem;\n                        $foundConditions = true;\n                        continue;\n                    }\n                }\n\n                if ($foundConditions == false) {\n                    $partFound = false;\n                    break;\n                }\n\n            } else {\n                if (is_object($partData)) {\n                    $partDataValue = $partData->{$part};\n                    if (isset($partDataValue)) {\n                        $partData = $partDataValue;\n                    } else {\n                        $partFound = false;\n                        break;\n                    }\n                } else {\n                    if (isset($partData[$part]) ) {\n                        $partData = $partData[$part];\n                    } else {\n                        $partFound = false;\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (isset($stringParts[1])) {\n\n            $combinations = explode('==',$stringParts[1]);\n            $paramsOutput = [];\n\n            for ($i = 0; $i < count($combinations)/2; $i++) {\n                $paramsOutput[$combinations[$i * 2]] = $combinations[$i+1];\n            }\n\n            if (is_array($partData)) {\n                if (isset($paramsOutput['implode'])) {\n                    $output = \"\";\n                    foreach ($partData as $partDataItem) {\n                        $output .= (strpos($paramsOutput['implode'],'{item}') === false ? (string)$partDataItem : '').str_replace([\"{n}\",\"{item}\"],[\"\\n\",(string)$partDataItem],$paramsOutput['implode']);\n                    }\n                    $partData = trim($output);\n                }\n            }\n        }\n\n        return array('found' => $partFound, 'value' => $partData);\n    }\n\n}\n\n?>\n", "<?php\n\nclass erLhcoreClassRestAPIHandler\n{\n    public static function executeRequest(erLhAbstractModelRestAPIKeyRemote $apiKey, $function, $params = array(), $uparams = array(), $method = 'GET', $manualAppend = '')\n    {\n        $ch = curl_init();\n        $headers = array('Accept' => 'application/json');\n\n        $uparamsArg = '';\n\n        if (!empty($uparams) && is_array($uparams)) {\n            $parts = array();\n            foreach ($uparams as $param => $value) {\n                $parts[] = '/('.$param .')/'.$value;\n            }\n            $uparamsArg = implode('', $parts);\n\n        }\n\n        $requestArgs = ($method == 'GET') ? '?' .http_build_query($params) : '';\n\n        if ($method == 'POST') {\n            curl_setopt($ch,CURLOPT_POST,1);\n            curl_setopt($ch,CURLOPT_POSTFIELDS,$params);\n        }\n\n        curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);\n        curl_setopt($ch, CURLOPT_USERPWD, $apiKey->username . ':' . $apiKey->api_key);\n        curl_setopt($ch, CURLOPT_URL, $apiKey->host . $function . $manualAppend . $uparamsArg . $requestArgs);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_USERAGENT,'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.13) Gecko/20080311 Firefox/2.0.0.13');\n        curl_setopt($ch, CURLOPT_TIMEOUT, 5);\n        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT , 5);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n        @curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);\n        $content = curl_exec($ch);\n\n        return $content;\n    }\n    \n    public static function getHeaders()\n    {\n        if (! function_exists('getallheaders')) {\n            if (! is_array($_SERVER)) {\n                return array();\n            }\n            \n            $headers = array();\n            foreach ($_SERVER as $name => $value) {\n                if (substr($name, 0, 5) == 'HTTP_') {\n                    $headers[str_replace(' ', '-', ucwords(strtolower(str_replace('_', ' ', substr($name, 5)))))] = $value;\n                }\n            }\n            \n            return $headers;\n        } else {\n            return getallheaders();\n        }\n    }\n\n    public static function getRequestMethod()\n    {\n        if (isset($_SERVER['REQUEST_METHOD']) && $_SERVER['REQUEST_METHOD'] != '') {\n            return $_SERVER['REQUEST_METHOD'];\n        }\n\n        return false;\n    }\n\n    public static function setHeaders($content = 'Content-Type: application/json')\n    {\n        header('Access-Control-Allow-Origin: *');\n        header('Access-Control-Allow-Credentials: true');\n        header('Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, API-Key, Authorization');\n        header($content);\n        self::setOptionHeaders();\n    }\n\n    public static function setOptionHeaders(){\n        if ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {\n\n            if (isset($_SERVER['HTTP_ACCESS_CONTROL_REQUEST_METHOD']))\n                // may also be using PUT, PATCH, HEAD etc\n                header(\"Access-Control-Allow-Methods: GET, POST, OPTIONS, PUT, DELETE\");\n\n            if (isset($_SERVER['HTTP_ACCESS_CONTROL_REQUEST_HEADERS']))\n                header(\"Access-Control-Allow-Headers: {$_SERVER['HTTP_ACCESS_CONTROL_REQUEST_HEADERS']}\");\n\n            header(\"Access-Control-Max-Age: 1728000\");\n\n            exit(0);\n        }\n    }\n\n    public static function validateRequest()\n    {\n        self::setHeaders();\n\n        $headers = self::getHeaders();\n\n        $authorization = isset($headers['Authorization']) ? $headers['Authorization'] : (isset($headers['authorization']) ? $headers['authorization'] : (isset($_SERVER['REDIRECT_HTTP_AUTHORIZATION']) ? $_SERVER['REDIRECT_HTTP_AUTHORIZATION'] : null));\n\n        if ($authorization !== null) {\n            \n            $dataAuthorisation = explode(' ', $authorization);\n            $apiData = explode(':', base64_decode($dataAuthorisation[1]));\n            \n            if (count($apiData) != 2) {\n                throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'Authorization failed!'));\n            }\n\n            // There is no current workflow in progress\n            $handler = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('rest_api.validate_request', array(\n                'headers' => $headers,\n            ));\n\n            if ($handler !== false) {\n                $apiKey = $handler['api_key'];\n            } else {\n                $apiKey = erLhAbstractModelRestAPIKey::findOne(array(\n                    'enable_sql_cache' => true,\n                    'filter' => array(\n                        'active' => 1,\n                        'api_key' => $apiData[1]\n                    )\n                ));\n            }\n\n            $authorised = false;\n            $user = null;\n\n            if (!($apiKey instanceof erLhAbstractModelRestAPIKey)) {\n\n                $disabledByUser = erConfigClassLhConfig::getInstance()->getSetting('site', 'disable_rest_api_by_user',false);\n\n                // Rest API disabled by username and only by Rest API key's can be used\n                if ($disabledByUser === true){\n                    throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('user/login','Authorization failed!'));\n                }\n\n                $user = erLhcoreClassModelUser::findOne(array('filter' => array('username' => $apiData[0])));\n                if (!($user instanceof erLhcoreClassModelUser) || !password_verify($apiData[1], $user->password)) {\n\n                    if ($user instanceof erLhcoreClassModelUser) {\n                        erLhcoreClassModelUserLogin::logUserAction(array(\n                            'type' => erLhcoreClassModelUserLogin::TYPE_LOGIN_ATTEMPT,\n                            'user_id' => $user->id,\n                            'msg' => erTranslationClassLhTranslation::getInstance()->getTranslation('user/login','Failed login. API')\n                        ));\n\n                        erLhcoreClassModelUserLogin::disableIfRequired($user);\n                    }\n\n                    throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'Authorization failed!'));\n                } else {\n                    if (!$user->hasAccessTo('lhrestapi','use_direct_logins')){\n                        throw new Exception(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'You do not have permission to use REST API directly. \"lhrestapi\", \"use_direct_logins\" is missing!')));\n                    } else {\n                        $authorised = true;\n                    }\n                }\n            }\n\n            if ($authorised === false && $apiKey->user->username != $apiData[0]) {\n                throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'Authorization failed!'));\n            }\n\n            if ($user instanceof erLhcoreClassModelUser){\n                self::$apiKey = new erLhAbstractModelRestAPIKey();\n                self::$apiKey->user = $user;\n            } else {\n\n                if ($apiKey->ip_restrictions != '' && !erLhcoreClassIPDetect::isIgnored(erLhcoreClassIPDetect::getIP(),explode(',',$apiKey->ip_restrictions))) {\n                    throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'Rest API IP restrictions applies! '). erLhcoreClassIPDetect::getIP());\n                }\n\n                // API Key\n                self::$apiKey = $apiKey;\n            }\n\n            if (isset($_GET['update_activity'])) {\n                erLhcoreClassUserDep::updateLastActivityByUser(self::$apiKey->user->id, time());\n            }\n\n        } else {\n            throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'Authorization header is missing!'));\n        }\n\n        return true;\n    }\n\n    public static function formatFilter($validAttributes)\n    {\n        $definition = array();\n        \n        foreach ($validAttributes as $attributeType => $attributes) {\n            foreach ($attributes as $userAttribute => $definitionField) {\n                $definition[$userAttribute] = $definitionField['validator'];\n            }\n        }\n        \n        $form = new ezcInputForm(INPUT_GET, $definition);\n        $filter = array();\n        \n        foreach ($validAttributes as $attributeType => $attributes) {\n            foreach ($attributes as $userAttribute => $definitionField) {\n                if ($form->hasValidData($userAttribute)) {\n                    if ($definitionField['type'] == 'filter') {\n                        $filter['filter'][$definitionField['field']] = $form->$userAttribute;\n                    } else if ($definitionField['type'] == 'filtergt') {\n                        $filter['filtergt'][$definitionField['field']] = $form->$userAttribute;\n                    } elseif ($definitionField['type'] == 'general') {\n                        $filter[$definitionField['field']] = $form->$userAttribute;\n                    }\n                }\n            }\n        }\n        \n        $filter['limit'] = isset($filter['limit']) ? $filter['limit'] : 20;\n        $filter['offset'] = isset($filter['offset']) ? $filter['offset'] : 0;\n        $filter['smart_select'] = true;\n        \n        return $filter;\n    }\n\n    public static function validateCampaignConversionList()\n    {\n        $validAttributes = array(\n            'int' => array(\n                'department_id' => array(\n                    'type' => 'filter',\n                    'field' => 'department_id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'campaign_id' => array(\n                    'type' => 'filter',\n                    'field' => 'campaign_id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'invitation_id' => array(\n                    'type' => 'filter',\n                    'field' => 'invitation_id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'chat_id' => array(\n                    'type' => 'filter',\n                    'field' => 'chat_id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'ctime' => array(\n                    'type' => 'filtergt',\n                    'field' => 'ctime',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'con_time' => array(\n                    'type' => 'filtergt',\n                    'field' => 'con_time',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'id' => array(\n                    'type' => 'filtergt',\n                    'field' => 'id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'limit' => array(\n                    'type' => 'general',\n                    'field' => 'limit',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'offset' => array(\n                    'type' => 'general',\n                    'field' => 'offset',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                )\n            )\n        );\n\n        $filter = self::formatFilter($validAttributes);\n\n        if (isset($_GET['invitation_status']) && $_GET['invitation_status'] != '') {\n            $statusLiteral = explode(',',$_GET['invitation_status']);\n            $statusMap = array(\n                'send' => erLhAbstractModelProactiveChatCampaignConversion::INV_SEND,\n                'shown' => erLhAbstractModelProactiveChatCampaignConversion::INV_SHOWN,\n                'seen' => erLhAbstractModelProactiveChatCampaignConversion::INV_SEEN,\n                'chat_started' => erLhAbstractModelProactiveChatCampaignConversion::INV_CHAT_STARTED\n            );\n\n            $statuses = array();\n            foreach ($statusLiteral as $item){\n                if (isset($statusMap[$item])){\n                    $statuses[] = $statusMap[$item];\n                }\n            }\n\n            if (!empty($statuses)) {\n                $filter['filterin']['invitation_status'] = $statuses;\n            }\n        }\n        // 0 - PC, 1 - mobile, 2 - tablet\n        if (isset($_GET['device_type']) && $_GET['device_type'] != '') {\n            $statusLiteral = explode(',',$_GET['device_type']);\n            $statusMap = array(\n                'pc' => 0,\n                'mobile' => 1,\n                'tablet' => 2,\n            );\n\n            $statuses = array();\n            foreach ($statusLiteral as $item){\n                if (isset($statusMap[$item])){\n                    $statuses[] = $statusMap[$item];\n                }\n            }\n\n            if (!empty($statuses)) {\n                $filter['filterin']['device_type'] = $statuses;\n            }\n        }\n\n        if (isset($_GET['invitation_type']) && $_GET['invitation_type'] != '') {\n            $statusLiteral = $_GET['invitation_type'];\n            $statusMap = array(\n                'operator' => 2,\n                'system' => 1,\n            );\n\n            if (isset($statusMap[$statusLiteral])){\n                $filter['filter']['invitation_type'] = $statusMap[$statusLiteral];\n            }\n        }\n\n        $filter['sort'] = 'id ' . ((isset($_GET['sort']) && $_GET['sort'] == 'desc') ? 'DESC' : 'ASC');\n\n        // Get chats list\n        $campaignsConversions = erLhAbstractModelProactiveChatCampaignConversion::getList($filter);\n\n        // Get chats count\n        $chatsCount = erLhAbstractModelProactiveChatCampaignConversion::getCount($filter);\n\n        if (isset($_GET['include_invitation']) && $_GET['include_invitation'] == 'true') {\n            erLhcoreClassChat::prefillObjects($campaignsConversions,array(\n                array(\n                    'invitation_id',\n                    'invitation',\n                    'erLhAbstractModelProactiveChatInvitation::getList'\n                ),\n            ));\n        }\n\n        if (isset($_GET['include_invitation']) && $_GET['include_invitation'] == 'true') {\n            erLhcoreClassChat::prefillObjects($campaignsConversions,array(\n                array(\n                    'invitation_id',\n                    'invitation',\n                    'erLhAbstractModelProactiveChatInvitation::getList'\n                ),\n            ));\n        }\n\n        if (isset($_GET['include_onlinevisitor']) && $_GET['include_onlinevisitor'] == 'true') {\n            erLhcoreClassChat::prefillObjects($campaignsConversions,array(\n                array(\n                    'vid_id',\n                    'vid',\n                    'erLhcoreClassModelChatOnlineUser::getList'\n                ),\n            ));\n        }\n\n        if (isset($_GET['include_department']) && $_GET['include_department'] == 'true') {\n            erLhcoreClassChat::prefillObjects($campaignsConversions,array(\n                array(\n                    'department_id',\n                    'department',\n                    'erLhcoreClassModelDepartament::getList'\n                ),\n            ));\n        }\n\n        // Chats list\n        return array(\n            'list' => array_values($campaignsConversions),\n            'list_count' => $chatsCount,\n            'error' => false\n        );\n    }\n\n    public static function getChatListFilter()\n    {\n        $validAttributes = array(\n            'int' => array(\n                'departament_id' => array(\n                    'type' => 'filter',\n                    'field' => 'dep_id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'user_id' => array(\n                    'type' => 'filter',\n                    'field' => 'user_id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'online_user_id' => array(\n                    'type' => 'filter',\n                    'field' => 'online_user_id',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'phone' => array(\n                    'type' => 'filter',\n                    'field' => 'phone',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw')\n                ),\n                'email' => array(\n                    'type' => 'filter',\n                    'field' => 'email',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw')\n                ),\n                'nick' => array(\n                    'type' => 'filter',\n                    'field' => 'nick',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw')\n                ),\n                'status' => array(\n                    'type' => 'filter',\n                    'field' => 'status',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'limit' => array(\n                    'type' => 'general',\n                    'field' => 'limit',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                ),\n                'offset' => array(\n                    'type' => 'general',\n                    'field' => 'offset',\n                    'validator' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int', array(\n                        'min_range' => 1\n                    ))\n                )\n            )\n        );\n\n        $filter = self::formatFilter($validAttributes);\n\n        if (isset($_GET['filtergt']['id']) && is_numeric($_GET['filtergt']['id'])) {\n            $filter['filtergt']['id'] = (int)$_GET['filtergt']['id'];\n        }\n\n        if (isset($_GET['departament_ids'])) {\n            $idDep = explode(',',$_GET['departament_ids']);\n            erLhcoreClassChat::validateFilterIn($idDep);\n            if (!empty($idDep)){\n                $filter['filterin']['dep_id'] = $idDep;\n            }\n        }\n\n        if (isset($_GET['user_ids'])) {\n            $uidDep = explode(',',$_GET['user_ids']);\n            erLhcoreClassChat::validateFilterIn($uidDep);\n            if (!empty($uidDep)){\n                $filter['filterin']['user_id'] = $uidDep;\n            }\n        }\n\n        if (isset($_GET['status_ids'])) {\n            $statusIds = explode(',',$_GET['status_ids']);\n            erLhcoreClassChat::validateFilterIn($statusIds);\n            if (!empty($statusIds)){\n                $filter['filterin']['status'] = $statusIds;\n            }\n        }\n\n        if (isset($_GET['vid']) && !empty($_GET['vid'])) {\n            $onlineUser = erLhcoreClassModelChatOnlineUser::fetchByVid($_GET['vid']);\n            if ($onlineUser instanceof erLhcoreClassModelChatOnlineUser) {\n                $filter['filter']['online_user_id'] = $onlineUser->id;\n            } else {\n                $filter['filter']['online_user_id'] = -1;\n            }\n        }\n\n        if (isset($_GET['departament_groups_ids'])) {\n            $idDep = explode(',',$_GET['departament_groups_ids']);\n            erLhcoreClassChat::validateFilterIn($idDep);\n            if (!empty($idDep)){\n                $groups = erLhcoreClassModelDepartamentGroup::getList(array('filterin' => array('id' => $idDep)));\n                foreach ($groups as $group) {\n                    $depIds = $group->departments_ids;\n                    if (!empty($depIds)) {\n                        if (isset($filter['filterin']['dep_id'])) {\n                            $filter['filterin']['dep_id'] = array_merge($filter['filterin']['dep_id'], $depIds);\n                        } else {\n                            $filter['filterin']['dep_id'] = $depIds;\n                        }\n                    }\n                }\n            }\n        }\n\n        if (isset($_GET['bot_ids'])) {\n            $botIds = explode(',',$_GET['bot_ids']);\n            erLhcoreClassChat::validateFilterIn($botIds);\n            if (!empty($botIds)) {\n                $filter['filterin']['gbot_id'] = $botIds;\n            }\n        }\n\n        if (isset($_GET['id_gt']) && is_numeric($_GET['id_gt'])) {\n            $filter['filtergt']['id'] = (int)$_GET['id_gt'];\n        }\n\n        if (isset($_GET['time_gt']) && is_numeric($_GET['time_gt'])) {\n            $filter['filtergt']['time'] = (int)$_GET['time_gt'];\n        }\n\n        if (isset($_GET['time_lt']) && is_numeric($_GET['time_lt'])) {\n            $filter['filterlt']['time'] = (int)$_GET['time_lt'];\n        }\n\n        if (isset($_GET['delay']) && is_numeric($_GET['delay'])) {\n            $filter['filterlte']['time'] = time()-(int)$_GET['delay'];\n        }\n\n        if (isset($_GET['last_user_msg_time_gt']) && is_numeric($_GET['last_user_msg_time_gt'])) {\n            $filter['filtergt']['last_user_msg_time'] = (int)$_GET['last_user_msg_time_gt'];\n        }\n\n        if (isset($_GET['has_operator']) && $_GET['has_operator'] == 'true') {\n            $filter['filtergt']['user_id'] = 0;\n        } elseif (isset($_GET['has_operator']) && $_GET['has_operator'] == 'false') {\n            $filter['filter']['user_id'] = 0;\n        }\n\n        if (isset($_GET['had_bot']) && $_GET['had_bot'] == 'true') {\n            $filter['filtergt']['gbot_id'] = 0;\n        } elseif (isset($_GET['had_bot']) && $_GET['had_bot'] == 'false') {\n            $filter['filter']['gbot_id'] = 0;\n        }\n\n        $groupFields = array();\n\n        if (isset($_GET['group_by_nick']) && $_GET['group_by_nick'] == 'true') {\n            $groupFields[] = '`nick`';\n        }\n\n        if (isset($_GET['group_by_phone']) && $_GET['group_by_phone'] == 'true') {\n            $groupFields[] = '`phone`';\n        }\n\n        if (isset($_GET['group_by_email']) && $_GET['group_by_email'] == 'true') {\n            $groupFields[] = '`email`';\n        }\n\n        if (!empty($groupFields)) {\n            $filter['group'] = implode(', ', $groupFields);\n        }\n\n        $limitation = self::getLimitation();\n\n        // Does not have any assigned department\n        if ($limitation === false) {\n            return array(\n                'list' => array(),\n                'list_count' => 0\n            );\n        }\n\n        if ($limitation !== true) {\n            $filter['customfilter'][] = $limitation;\n        }\n\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('restapi.chats_filter', array('filter' => & $filter));\n\n        return $filter;\n    }\n\n    public static function validateChatListCount()\n    {\n        $filter = self::getChatListFilter();\n\n        if (isset($filter['limit'])) {\n            unset($filter['limit']);\n        }\n\n        // Get chats count\n        $chatsCount = erLhcoreClassModelChat::getCount($filter);\n\n        // Chats list\n        return array(\n            'list_count' => $chatsCount,\n            'error' => false\n        );\n    }\n    /**\n     * Chat's list\n     */\n    public static function validateChatList()\n    {\n\n        $filter = self::getChatListFilter();\n        \n        // Get chats list\n        $chats = erLhcoreClassModelChat::getList($filter);\n        \n        // Get chats count\n        $chatsCount = erLhcoreClassModelChat::getCount($filter);\n\n        // Allow extensions append custom field\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.restapi_chats',array('list' => & $chats));\n\n        if (isset($_GET['include_messages']) && $_GET['include_messages'] == 'true' && !empty($chats)) {\n            $messages = erLhcoreClassModelmsg::getList(array('limit' => 100000,'sort' => 'id ASC','filterin' => array('chat_id' => array_keys($chats))));\n            foreach ($messages as $message) {\n                if (!is_array($chats[$message->chat_id]->messages)) {\n                    $chats[$message->chat_id]->messages = array();\n                }\n\n                if (isset($_GET['meta_parse']) && ($_GET['meta_parse'] == 'true' && $_GET['meta_parse'] == '1') && $message->msg == '') {\n                    $metaMessage = $message->meta_msg_array;\n                    if (is_array($metaMessage) && isset($metaMessage['content']) && is_array($metaMessage['content'])) {\n                        if (isset($metaMessage['content']['text_conditional']['full_op'])) {\n                            $message->msg = trim(preg_replace('/\\[button_action=not_insult\\](.*)\\[\\/button_action\\]/is','',$metaMessage['content']['text_conditional']['full_op']));\n                            unset($message->meta_msg_array);\n                        }\n                    }\n                }\n\n                $chats[$message->chat_id]->messages[] = $message;\n            }\n        }\n\n         if (isset($_GET['include_survey']) && $_GET['include_survey'] == 'true' && !empty($chats)) {\n             $filledSurveys = erLhAbstractModelSurveyItem::getList(array('limit' => 100000,'sort' => 'id ASC','filterin' => array('chat_id' => array_keys($chats))));\n             foreach ($filledSurveys as $filledSurvey) {\n                 $chats[$filledSurvey->chat_id]->survey = $filledSurvey;\n             }\n         }\n\n        $prefillFields = array();\n\n        if (isset($_GET['prefill_fields'])){\n            $prefillFields = explode(',',str_replace(' ','',$_GET['prefill_fields']));\n        }\n\n        $ignoreFields = array();\n        if (isset($_GET['ignore_fields'])){\n            $ignoreFields = explode(',',str_replace(' ','',$_GET['ignore_fields']));\n        }\n\n        // Option to have department_groups attribute listed in response\n        if (isset($_GET['department_groups']) && $_GET['department_groups'] == 'true') {\n            $departments = array();\n            foreach ($chats as $chat) {\n                $departments[] = $chat->dep_id;\n            }\n\n            $departments = array_unique($departments);\n\n            $depMembersItems = array();\n\n            if (!empty($departments)) {\n                $depMembers = erLhcoreClassModelDepartamentGroupMember::getList(array('filterin' => array('dep_id' => $departments)));\n                foreach ($depMembers as $depMember) {\n                    $depMembersItems[$depMember->dep_id][] = $depMember->dep_group_id;\n                }\n            }\n\n            foreach ($chats as $index => $chat) {\n                $chats[$index]->department_groups = isset($depMembersItems[$chat->dep_id]) ? $depMembersItems[$chat->dep_id] : array();\n            }\n        }\n\n        if (isset($_GET['include_department']) && $_GET['include_department'] == 'true') {\n            erLhcoreClassChat::prefillObjects($chats,array(\n                array(\n                    'dep_id',\n                    'department',\n                    'erLhcoreClassModelDepartament::getList'\n                ),\n            ));\n        }\n\n        if (in_array('link',$prefillFields)) {\n            foreach ($chats as $index => $chat) {\n                $chats[$index]->link = erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('user/login').'/(r)/'.rawurlencode(base64_encode('chat/single/'.$chat->id));\n            }\n        }\n\n        if (!empty($chats) && in_array('subject',$prefillFields)) {\n            $assignedSubjects = erLhAbstractModelSubjectChat::getList(['sort' => 'id ASC', 'limit' => false,'filterin' => ['chat_id' => array_keys($chats)]]);\n            foreach ($assignedSubjects as $chatSubject) {\n                if (!isset($chats[$chatSubject->chat_id]->subjects)){\n                    $chats[$chatSubject->chat_id]->subject = [];\n                }\n                $chats[$chatSubject->chat_id]->subject[] = $chatSubject->subject;\n            }\n        }\n\n        if (!empty($chats) && in_array('messages_statistic',$prefillFields)) {\n            foreach ($chats as $index => $chat) {\n                $messages_statistic = [];\n                erLhcoreClassChatExport::messagesStatistic($messages_statistic, $chat);\n                $chats[$index]->messages_statistic = [\n                    'total_messages' => ($messages_statistic[0] == 'None' ? null : (float)$messages_statistic[0]),\n                    'visitor_messages' =>  ($messages_statistic[1] == 'None' ? null : (float)$messages_statistic[1]),\n                    'bot_messages' =>  ($messages_statistic[2] == 'None' ? null : (float)$messages_statistic[2]),\n                    'operator_messages' =>  ($messages_statistic[3] == 'None' ? null : (float)$messages_statistic[3]),\n                    'system_messages' =>  ($messages_statistic[4] == 'None' ? null : (float)$messages_statistic[4]),\n                    'visitor_messages_to_bot' =>  ($messages_statistic[5] == 'None' ? null : (float)$messages_statistic[5]),\n                    'visitor_messages_to_operator' =>  ($messages_statistic[6] == 'None' ? null : (float)$messages_statistic[6]),\n                    'max_agent_response_time' =>  ($messages_statistic[7] == 'None' ? null : (float)$messages_statistic[7]),\n                    'max_bot_response_time' =>  ($messages_statistic[8] == 'None' ? null : (float)$messages_statistic[8]),\n                    'avg_agent_response_time' => ($messages_statistic[9] == 'None' ? null : (float)$messages_statistic[9]),\n                    'avg_bot_response_time' => ($messages_statistic[10] == 'None' ? null : (float)$messages_statistic[10]),\n                    'first_agent_response_time' => ($messages_statistic[11] == 'None' ? null : (float)$messages_statistic[11]),\n                    'first_bot_response_time' => ($messages_statistic[12] == 'None' ? null : (float)$messages_statistic[12]),\n                    'wait_time_till_first_operator_msg' => ($messages_statistic[13] == 'None' ? null : (float)$messages_statistic[13]),\n                ];\n            }\n        }\n\n        if (!empty($chats) && in_array('chat_actions',$prefillFields)) {\n            $chatActions = erLhcoreClassModelChatAction::getList(['sort' => 'id ASC', 'limit' => false,'filterin' => ['chat_id' => array_keys($chats)]]);\n            foreach ($chatActions as $chatAction) {\n                if (!isset($chats[$chatAction->chat_id]->chat_actions)){\n                    $chats[$chatAction->chat_id]->chat_actions = [];\n                }\n                $chatAction->body_array;\n                $chats[$chatAction->chat_id]->chat_actions[] = $chatAction;\n            }\n        }\n\n        if (!empty($prefillFields) || !empty($ignoreFields)) {\n            erLhcoreClassChat::prefillGetAttributes($chats, $prefillFields, $ignoreFields, array('clean_ignore' => true, 'do_not_clean' => true));\n        }\n\n        // Chats list\n        return array(\n            'list' => array_values($chats),\n            'list_count' => $chatsCount,\n            'error' => false\n        );\n    }\n\n    public static function getLimitation($tableName = 'lh_chat')\n    {\n        if (self::$apiKey->user->all_departments == 0) {\n            $userDepartaments = erLhcoreClassUserDep::getUserDepartaments(self::$apiKey->user->id, self::$apiKey->user->cache_version);\n            \n            if (count($userDepartaments) == 0)\n                return false;\n            \n            $LimitationDepartament = '(' . $tableName . '.dep_id IN (' . implode(',', $userDepartaments) . '))';\n            \n            return $LimitationDepartament;\n        }\n        \n        return true;\n    }\n\n    /**\n     * \n     * @param erLhcoreClassModelChat $chat\n     * \n     * @return boolean\n     */\n    public static function hasAccessToRead(erLhcoreClassModelChat $chat)\n    {            \n        if ( self::$apiKey->user->all_departments == 0 ) {\n      \n            if ($chat->user_id == self::$apiKey->user->id) return true;\n    \n            $userDepartaments = erLhcoreClassUserDep::getUserDepartaments(self::$apiKey->user->id, self::$apiKey->user->cache_version);\n    \n            if (count($userDepartaments) == 0) return false;\n                \n            if (in_array($chat->dep_id,$userDepartaments)) {\n                                   \n                if (self::hasAccessTo('lhchat','allowopenremotechat') == true || $chat->status == erLhcoreClassModelChat::STATUS_OPERATORS_CHAT){\n                    return true;\n                } elseif ($chat->user_id == 0 || $chat->user_id == self::$apiKey->user->id) {\n                    return true;\n                }\n    \n                return false;\n            }\n    \n            return false;\n        }\n    \n        return true;\n    }\n\n    public static function hasAccessToWrite($chat)\n    {\n        $dep = erLhcoreClassUserDep::getUserReadDepartments(self::$apiKey->user->id, self::$apiKey->user->cache_version);\n        return !in_array($chat->dep_id, $dep);\n    }\n\n    public static function hasAccessTo($module, $functions, $returnLimitation = false)\n    {\n        $AccessArray = erLhcoreClassRole::accessArrayByUserID( self::$apiKey->user->id );\n\n        // Global rights\n        if (isset($AccessArray['*']['*']) || isset($AccessArray[$module]['*']))\n        {\n            if ($returnLimitation === false) {\n                return true;\n            } elseif (isset($AccessArray[$module]['*']) && !is_bool($AccessArray[$module]['*'])) {\n                return $AccessArray[$module]['*'];\n            } elseif ($AccessArray['*']['*'] && !is_bool($AccessArray['*']['*'])) {\n                return $AccessArray['*']['*'];\n            } else {\n                return true;\n            }\n        }\n\n        // Provided rights have to be set\n        if (is_array($functions))\n        {\n            foreach ($functions as $function)\n            {\n                // Missing one of provided right\n                if (!isset($AccessArray[$module][$function])) return false;\n            }\n\n        } else {\n            if (!isset($AccessArray[$module][$functions])) {\n                return false;\n            } elseif (isset($AccessArray[$module][$functions]) && $returnLimitation === true && !is_bool($AccessArray[$module][$functions])) {\n                return $AccessArray[$module][$functions];\n            }\n        }\n\n        return true;\n    }\n\n    public static function getUserId()\n    {\n        return self::$apiKey->user->id;\n    }\n\n    public static function getUser()\n    {\n        return self::$apiKey->user;\n    }\n\n    /*\n     * Departaments\n     */\n    public static function validateDepartaments()\n    {\n        $departaments = erLhcoreClassModelDepartament::getList();\n        $departamentsCount = erLhcoreClassModelDepartament::getCount();\n        \n        // Chats list\n        return array(\n            'list' => array_values($departaments),\n            'list_count' => $departamentsCount,\n            'error' => false\n        );\n    }\n\n    /**\n     * php array to xml conversion even for nested data\n     *\n     * @link http://stackoverflow.com/q/14136714/367456\n     * @see http://stackoverflow.com/a/14143759/367456 for description\n     * @author hakre <http://hakre.wordpress.com/credits>\n     */\n    public static function formatXML($data)\n    {\n        $createArrayImporter = function (SimpleXMLElement $subject) {\n            $add = function (SimpleXMLElement $subject, $key, $value) use (&$add) {\n                \n                $addChildCdata = function ($name, $value = NULL, & $parent) {\n                    $new_child = $parent->addChild($name);\n                \n                    if ($new_child !== NULL) {\n                        $node = dom_import_simplexml($new_child);\n                        $no   = $node->ownerDocument;\n                        $node->appendChild($no->createCDATASection($value));\n                    }\n                \n                    return $new_child;\n                };\n                \n                $hasKey    = is_string($key);\n                $isString  = is_string($value) || is_numeric($value);\n                $isArray   = is_array($value);\n                $isIndexed = $isArray && count($value) > 1 && array_keys($value) === range(0, count($value) - 1);\n                $isKeyed   = $isArray && count($value) && !$isIndexed;\n                switch (true) {\n                    case $isString && $hasKey:\n                                                \n                        if (is_numeric($value) || empty($value)) {\n                            return $subject->addChild($key, $value);\n                        } else {\n                            return $addChildCdata($key, $value, $subject);\n                        }\n                        \n                    case $isIndexed && $hasKey:\n                        foreach ($value as $oneof_value) {\n                            $add($subject, $key, $oneof_value);\n                        }\n                        return $subject->$key;\n                    case $isKeyed && $hasKey:\n                        $subject = $subject->addChild($key);\n                        // fall-through intended\n                    case $isKeyed:\n                        foreach ($value as $oneof_key => $oneof_value) {\n                            $add($subject, $oneof_key, $oneof_value);\n                        }\n                        return true;\n                    default:\n                        //trigger_error('Unknown Nodetype ' . $key .print_r($value, 1));\n                }\n            };\n            return function (Array $array) use ($subject, $add) {\n                $add($subject, null, $array);\n                return $subject;\n            };\n        };\n        \n        $xml      = new SimpleXMLElement('<root/>');\n        $importer = $createArrayImporter($xml);\n        \n        $SimpleXML = $importer($data);\n        \n        $dom                     = new DOMDocument();\n        $dom->preserveWhiteSpace = false;\n        $dom->formatOutput       = true;\n        $dom->loadXML($SimpleXML->asXML());\n        \n        return $dom->saveXML();\n    }\n    \n    /**\n     *\n     * @param array $data            \n     */\n    public static function outputResponse($data, $format = null, $options = 0)\n    {\n        if ((isset($_GET['format']) && $_GET['format'] == 'xml') || $format === 'xml') {\n           echo self::formatXML(json_decode(json_encode($data),true));\n        } else {\n        \n            $json = json_encode($data, $options);\n            \n            if (isset($_GET['callback'])) {\n                echo $_GET['callback'] . '(' . $json . ')';\n            } else {\n                echo $json;\n            }\n        }\n    }\n\n    public static function importMessages($chat, $messages) {\n        foreach ($messages as $message) {\n            $msg = new erLhcoreClassModelmsg();\n            $msg->msg = isset($message['msg']) ? $message['msg'] : '';\n            $msg->meta_msg = isset($message['meta_msg']) ? $message['meta_msg'] : '';\n            $msg->time = isset($message['time']) ? $message['time'] : time();\n            $msg->chat_id = $chat->id;\n            $msg->user_id = isset($message['user_id']) ? $message['user_id'] : 0;\n            $msg->name_support = isset($message['name_support']) ? $message['name_support'] : '';\n            $msg->saveThis();\n\n            $chat->last_msg_id = $msg->id;\n            if ($msg->user_id == 0) {\n                $chat->last_user_msg_time = $msg->time;\n            } elseif ($msg->user_id == -2) {\n                $chat->last_op_msg_time = $msg->time;\n            }\n        }\n    }\n\n    private static $apiKey = null;\n}\n\n?>\n", "<?php\r\n\r\nclass erLhcoreClassXMP {\r\n\r\n\tpublic static function sendTestXMP($userData) {\t\t\r\n\t\t$data = (array) erLhcoreClassModelChatConfig::fetch('xmp_data')->data;\r\n\t\t\r\n\t\t$templateMessage = 'xmp_message';\r\n\t\t\t\t\t\t\t\t\r\n\t\t$conn = new XMPPHP_XMPP($data['host'], $data['port'], $data['username'], $data['password'], $data['resource'], $data['server'], $printlog = false, $loglevel = XMPPHP_Log::LEVEL_INFO);\r\n\t\ttry {\r\n\t\t\t$conn->connect();\r\n\t\t\t$conn->processUntil('session_start');\r\n\t\t\t\r\n\t\t\tif (isset($data['test_group_recipients']) && $data['test_group_recipients'] != '') {\r\n\t\t\t\t\r\n\t\t\t\t$recipientsGroup = explode(',',$data['test_group_recipients']);\r\n\t\t\t\t\r\n\t\t\t\tforeach ($recipientsGroup as $groupRecipient) {\r\n\t\t\t\t\t$conn->presence(NULL, \"available\", $groupRecipient);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tforeach ($recipientsGroup as $groupRecipient) {\r\n\t\t\t\t\tlist($groupName) = explode('/',$groupRecipient);\r\n\t\t\t\t\t$conn->message($groupName, $data[$templateMessage], \"groupchat\");\r\n\t\t\t\t}\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tforeach ($recipientsGroup as $groupRecipient) {\r\n\t\t\t\t\t$conn->presence(NULL, \"unavailable\", $groupRecipient);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (isset($data['test_recipients']) && $data['test_recipients'] != '') {\r\n\t\t\t\t$recipientsUsers = explode(',',$data['test_recipients']);\r\n\t\t\t\t$conn->presence();\r\n\t\t\t\t\r\n\t\t\t\tforeach ($recipientsUsers as $recipientsUser) {\t\t\t\t\t\r\n\t\t\t\t\t$conn->message($recipientsUser, $data[$templateMessage]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\t$conn->disconnect();\r\n\t\t\treturn true;\r\n\t\t} catch (Exception $e) {\r\n\t\t\tthrow $e;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function getAccessToken() {\r\n\t\t$xmpData = erLhcoreClassModelChatConfig::fetch('xmp_data');\r\n\t\t$data = (array)$xmpData->data;\r\n\r\n\t\tif (isset($data['gtalk_client_token']) && $data['gtalk_client_token'] != '') {\t\t\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\trequire_once 'lib/core/lhxmp/google/Google_Client.php';\r\n\t\t\t\t\r\n\t\t\t\t$client = new Google_Client();\r\n\t\t\t\t$client->setApplicationName('Live Helper Chat');\r\n\t\t\t\t$client->setScopes(array(\"https://www.googleapis.com/auth/googletalk\",\"https://www.googleapis.com/auth/userinfo.email\"));\r\n\t\t\t\t$client->setClientId($data['gtalk_client_id']);\r\n\t\t\t\t$client->setClientSecret($data['gtalk_client_secret']);\r\n\t\t\t\t$client->setApprovalPrompt('force');\r\n\t\t\t\t$client->setAccessType('offline');\r\n\t\t\t\t$token = $data['gtalk_client_token'];\r\n\t\t\t\t$client->setAccessToken($data['gtalk_client_token']);\r\n\t\t\t\t\r\n\t\t\t\t// Refresh token if it's\r\n\t\t\t\tif ( $client->isAccessTokenExpired() ) {\r\n\t\t\t\t\t$tokenData = json_decode($token);\r\n\t\t\t\t\t$client->refreshToken($tokenData->refresh_token);\r\n\t\t\t\t\t$accessToken = $client->getAccessToken();\r\n\t\t\t\t\r\n\t\t\t\t\t$data['gtalk_client_token'] = $accessToken;\r\n\t\t\t\t\t$xmpData->value = serialize($data);\r\n\t\t\t\t\t$xmpData->saveThis();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (($accessToken = $client->getAccessToken())) {\t\t\t\t\r\n\t\t\t\t\t$tokenData = json_decode($accessToken);\r\n\t\t\t\t\treturn $tokenData->access_token;\r\n\t\t\t\t}\r\n\t\t\t} catch (Exception $e) {\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tpublic static function revokeAccessToken() {\r\n\t\t$xmpData = erLhcoreClassModelChatConfig::fetch('xmp_data');\r\n\t\t$data = (array)$xmpData->data;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (isset($data['gtalk_client_token']) && $data['gtalk_client_token'] != '') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\trequire_once 'lib/core/lhxmp/google/Google_Client.php';\t\t\t\t\r\n\t\t\t\t$client = new Google_Client();\r\n\t\t\t\t$client->setApplicationName('Live Helper Chat');\r\n\t\t\t\t$client->setScopes(array(\"https://www.googleapis.com/auth/googletalk\",\"https://www.googleapis.com/auth/userinfo.email\"));\r\n\t\t\t\t$client->setClientId($data['gtalk_client_id']);\r\n\t\t\t\t$client->setClientSecret($data['gtalk_client_secret']);\r\n\t\t\t\t$client->setAccessType('offline');\r\n\t\t\t\t$client->setApprovalPrompt('force');\r\n\t\t\t\t$token = $data['gtalk_client_token'];\r\n\t\t\t\t$client->setAccessToken($data['gtalk_client_token']);\r\n\t\r\n\t\t\t\t// Refresh token if it's\r\n\t\t\t\tif ( $client->isAccessTokenExpired() ) {\r\n\t\t\t\t\t$tokenData = json_decode($token);\r\n\t\t\t\t\t$client->refreshToken($tokenData->refresh_token);\r\n\t\t\t\t\t$accessToken = $client->getAccessToken();\t\t\t\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (($accessToken = $client->getAccessToken())) {\r\n\t\t\t\t\t$client->revokeToken();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tunset($data['gtalk_client_token']);\r\n\t\t\t\t$xmpData->value = serialize($data);\r\n\t\t\t\t$xmpData->saveThis();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t} catch (Exception $e) {\r\n\t\t\tthrow $e;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function get_dns_srv($domain) {\r\n\t\t$rec = dns_get_record(\"_xmpp-client._tcp.\".$domain, DNS_SRV);\r\n\t\tif(is_array($rec)) {\r\n\t\t\tif(sizeof($rec) == 0) return array($domain, 5222);\r\n\t\t\tif(sizeof($rec) > 0) return array($rec[0]['target'], $rec[0]['port']);\r\n\t\t}\r\n\t}\r\n\t\t\t\r\n\tpublic static function sendTestXMPGTalk($email) {\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t$xmpData = erLhcoreClassModelChatConfig::fetch('xmp_data');\r\n\t\t$data = (array)$xmpData->data;\r\n\r\n\t\tif (($accessToken = self::getAccessToken()) !== false) {\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t$dataLogin = self::get_dns_srv('gmail.com');\r\n\t\t\r\n\t\t\t$conn = new XMPPHP_XMPP($dataLogin[0], $dataLogin[1], $data['email_gtalk'], $accessToken, 'xmpphp', $dataLogin[0], $printlog = false, $loglevel = XMPPHP_Log::LEVEL_INFO, true);\r\n\t\t\ttry {\r\n\t\t\t\t$conn->connect();\r\n\t\t\t\t$conn->processUntil('session_start');\r\n\t\t\t\t$conn->presence();\r\n\t\t\t\t$conn->message($email, $data['xmp_message']);\r\n\t\t\t\t$conn->disconnect();\r\n\t\t\t\treturn true;\r\n\t\t\t} catch (Exception $e) {\r\n\t\t\t\tthrow $e;\r\n\t\t\t}\t\t\t\r\n\t\t} else {\r\n\t\t\tthrow new Exception('Invalid access token');\r\n\t\t}\t\r\n\t}\r\n\t\r\n\tpublic static function getBaseHost() {\r\n\t\tif ( (!empty($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) !== 'off') || ((!empty($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') || (!empty($_SERVER['HTTP_X_FORWARDED_SSL']) && $_SERVER['HTTP_X_FORWARDED_SSL'] == 'on'))){\r\n\t\t\treturn 'https://';\r\n\t\t}\r\n\t\t\r\n\t\treturn 'http://';\t\t\r\n\t}\r\n\t\r\n\tpublic static function sendXMPMessage($chat, $params = array()) {\r\n\t\t\r\n\t\t$data = (array) erLhcoreClassModelChatConfig::fetch('xmp_data')->data;\r\n\t\t\r\n\t\t// Allows extension to override xmpp settings, let say disable it :)\r\n\t\terLhcoreClassChatEventDispatcher::getInstance()->dispatch('xml.send_xmp_message',array('params' => & $data));\r\n\t\t\t\t\r\n\t\t$templateMessage = 'xmp_message';\r\n\t\tif (isset($params['template'])) {\r\n\t\t\t$templateMessage = $params['template'];\r\n\t\t}\r\n\t\t\r\n\t\tif (isset($data['use_xmp']) && $data['use_xmp'] == 1) {\t\r\n\t\t\t\t\r\n\t\t\tif  ( (isset($data['use_standard_xmp']) && $data['use_standard_xmp'] == '0') || !isset($data['use_standard_xmp']) ) { \t\t\t\r\n\t\t\t\t$conn = new XMPPHP_XMPP($data['host'], $data['port'], $data['username'], $data['password'], $data['resource'], $data['server'], $printlog = false, $loglevel = XMPPHP_Log::LEVEL_INFO);\r\n\t\t\t\ttry {\r\n\t\t\t\t\t$conn->connect();\r\n\t\t\t\t\t$conn->processUntil('session_start');\r\n\t\t\t\t\t\r\n\t\t\t\t\t$emailRecipient = array();\t// Email messages\r\n\t\t\t\t\t$groupRecipients = array(); // Group messages\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ($chat->department !== false && $chat->department->xmpp_recipients != '') { // Perhaps department has assigned email\r\n\t\t\t\t\t\t$emailRecipient = explode(',',$chat->department->xmpp_recipients);\r\n\t\t\t\t\t} elseif (isset($data['recipients']) && $data['recipients'] != '') {\r\n\t\t\t\t\t\t$emailRecipient = explode(',', $data['recipients']);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$settingsXMPPGlobal = isset($params['recipients_setting']) ? $params['recipients_setting'] : 'xmp_users';\r\n\t\t\t\t\t\r\n\t\t\t\t\t$optionsDepartment = array();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ($chat->department !== false){\r\n\t\t\t\t\t    $optionsDepartment = $chat->department->inform_options_array;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tif (in_array($settingsXMPPGlobal, $optionsDepartment)) {\t\t\t\t\t \t\t\t\t\t    \r\n\t\t\t\t\t    $db = ezcDbInstance::get();\r\n                        $stmt = $db->prepare(\"SELECT xmpp_username FROM lh_users WHERE id IN (SELECT user_id FROM lh_userdep WHERE dep_id = 0 OR dep_id = :dep_id) AND xmpp_username != ''\");\r\n                        $stmt->bindValue( ':dep_id',$chat->dep_id,PDO::PARAM_INT);\r\n                        $stmt->execute();\r\n                        $usersXMPPs = $stmt->fetchAll(PDO::FETCH_COLUMN);\r\n                        if (is_array($usersXMPPs)){\r\n                            $emailRecipient = array_unique(array_merge($emailRecipient,$usersXMPPs));\r\n                        }\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ($chat->department !== false && $chat->department->xmpp_group_recipients != '') {\r\n\t\t\t\t\t\t$groupRecipients = explode(',',$chat->department->xmpp_group_recipients);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// change status\r\n\t\t\t\t\tforeach($groupRecipients as $recipient){\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t$conn->presence(NULL,'available', $recipient);\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!empty($emailRecipient)) {\r\n\t\t\t\t\t\t$conn->presence();\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t$messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => 5,'sort' => 'id DESC','filter' => array('chat_id' => $chat->id))));\r\n\t\t\t\t\t$messagesContent = '';\r\n\t\t\t\t\t \r\n\t\t\t\t\tforeach ($messages as $msg ) {\r\n\t\t\t\t\t\tif ($msg->user_id == -1) {\r\n\t\t\t\t\t\t\t$messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. erTranslationClassLhTranslation::getInstance()->getTranslation('chat/syncadmin','System assistant').': '.htmlspecialchars($msg->msg).\"\\n\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. ($msg->user_id == 0 ? htmlspecialchars($chat->nick) : htmlspecialchars($msg->name_support)).': '.htmlspecialchars($msg->msg).\"\\n\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$cfgSite = erConfigClassLhConfig::getInstance();\r\n\t\t\t\t\t$secretHash = $cfgSite->getSetting( 'site', 'secrethash' );\r\n\t\t\t\t\t\r\n\t\t\t\t\tforeach ($emailRecipient as $email) {\t\t\t\r\n\t\t\t\t\t\t$veryfyEmail = \tsha1(sha1($email.$secretHash).$secretHash);\r\n\t\t\t\t\t\t$messagesParsed = str_replace(array('{messages}','{url_accept}','{chat_id}','{user_name}','{department}'), array($messagesContent,erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('chat/accept').'/'.erLhcoreClassModelChatAccept::generateAcceptLink($chat).'/'.$veryfyEmail.'/'.$email,$chat->id,$chat->user_name,(string)$chat->department),$data[$templateMessage]);\r\n\t\t\t\t\t\t$conn->message($email,$messagesParsed);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tforeach ($groupRecipients as $email) {\r\n\t\t\t\t\t\tlist($emailGroup) = explode('/',$email);\r\n\t\t\t\t\t\t$veryfyEmail = \tsha1(sha1($emailGroup.$secretHash).$secretHash);\r\n\t\t\t\t\t\t$messagesParsed = str_replace(array('{messages}','{url_accept}','{chat_id}','{user_name}','{department}'), array($messagesContent,erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('chat/accept').'/'.erLhcoreClassModelChatAccept::generateAcceptLink($chat).'/'.$veryfyEmail.'/'.$emailGroup,$chat->id,$chat->user_name,(string)$chat->department),$data[$templateMessage]);\r\n\t\t\t\t\t\t$conn->message($emailGroup,$messagesParsed,'groupchat');\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tforeach($groupRecipients as $recipient) {\t\t\t\t\t\r\n\t\t\t\t\t\t$conn->presence(NULL,'unavailable',$recipient);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$conn->disconnect();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} catch (Exception $e) {\r\n\t\t\t\t\tthrow $e;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (($accessToken = self::getAccessToken()) !== false) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t$dataLogin = self::get_dns_srv('gmail.com');\r\n\t\t\t\t\t\r\n\t\t\t\t\t$conn = new XMPPHP_XMPP($dataLogin[0], $dataLogin[1], $data['email_gtalk'], $accessToken, 'xmpphp', $dataLogin[0], $printlog = false, $loglevel = XMPPHP_Log::LEVEL_INFO, true);\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t$conn->connect();\r\n\t\t\t\t\t\t$conn->processUntil('session_start');\r\n\t\t\t\t\t\t$conn->presence();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$emailRecipient = array();\r\n\t\t\t\t\t\tif ($chat->department !== false && $chat->department->xmpp_recipients != '') { // Perhaps department has assigned email\r\n\t\t\t\t\t\t\t$emailRecipient = explode(',',$chat->department->xmpp_recipients);\r\n\t\t\t\t\t\t} elseif (isset($data['recipients']) && $data['recipients'] != '') {\r\n\t\t\t\t\t\t\t$emailRecipient = explode(',', $data['recipients']);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$settingsXMPPGlobal = isset($params['recipients_setting']) ? $params['recipients_setting'] : 'xmp_users';\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$optionsDepartment = array();\r\n\t\t\t\t\t\r\n    \t\t\t\t\tif ($chat->department !== false){\r\n    \t\t\t\t\t    $optionsDepartment = $chat->department->inform_options_array;\r\n    \t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t    if (in_array($settingsXMPPGlobal, $optionsDepartment)) {\r\n\t\t\t\t\t\t    $db = ezcDbInstance::get();\r\n\t\t\t\t\t\t    $stmt = $db->prepare(\"SELECT xmpp_username FROM lh_users WHERE id IN (SELECT user_id FROM lh_userdep WHERE dep_id = 0 OR dep_id = :dep_id) AND xmpp_username != ''\");\r\n\t\t\t\t\t\t    $stmt->bindValue( ':dep_id',$chat->dep_id,PDO::PARAM_INT);\r\n\t\t\t\t\t\t    $stmt->execute();\r\n\t\t\t\t\t\t    $usersXMPPs = $stmt->fetchAll(PDO::FETCH_COLUMN);\r\n\t\t\t\t\t\t    if (is_array($usersXMPPs)){\r\n\t\t\t\t\t\t        $emailRecipient = array_unique(array_merge($emailRecipient,$usersXMPPs));\r\n\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$messages = array_reverse(erLhcoreClassModelmsg::getList(array('limit' => 5,'sort' => 'id DESC','filter' => array('chat_id' => $chat->id))));\r\n\t\t\t\t\t\t$messagesContent = '';\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tforeach ($messages as $msg ) {\r\n\t\t\t\t\t\t\tif ($msg->user_id == -1) { \r\n\t\t\t\t\t\t\t\t$messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. erTranslationClassLhTranslation::getInstance()->getTranslation('chat/syncadmin','System assistant').': '.htmlspecialchars($msg->msg).\"\\n\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$messagesContent .= date(erLhcoreClassModule::$dateDateHourFormat,$msg->time).' '. ($msg->user_id == 0 ? htmlspecialchars($chat->nick) : htmlspecialchars($msg->name_support)).': '.htmlspecialchars($msg->msg).\"\\n\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$cfgSite = erConfigClassLhConfig::getInstance();\r\n\t\t\t\t\t\t$secretHash = $cfgSite->getSetting( 'site', 'secrethash' );\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tforeach ($emailRecipient as $email) {\r\n\t\t\t\t\t\t\t$veryfyEmail = \tsha1(sha1($email.$secretHash).$secretHash);\r\n\t\t\t\t\t\t\t$conn->message($email,str_replace(array('{messages}','{url_accept}','{chat_id}','{user_name}','{department}'), array($messagesContent,erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('chat/accept').'/'.erLhcoreClassModelChatAccept::generateAcceptLink($chat).'/'.$veryfyEmail.'/'.$email, $chat->id,$chat->user_name,(string)$chat->department),$data[$templateMessage]));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$conn->disconnect();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} catch (Exception $e) {\r\n\t\t\t\t\t\tthrow $e;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Exception('Invalid access token');\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t}\t\t\r\n\t}\r\n\r\n}\r\n\r\n?>", "<?php\r\n\r\nclass erLhAbstractModelFormCollected\r\n{\r\n\r\n    use erLhcoreClassDBTrait;\r\n\r\n    public static $dbTable = 'lh_abstract_form_collected';\r\n\r\n    public static $dbTableId = 'id';\r\n\r\n    public static $dbSessionHandler = 'erLhcoreClassAbstract::getSession';\r\n\r\n    public static $dbSortOrder = 'DESC';\r\n\r\n    public function getState()\r\n    {\r\n        $stateArray = array(\r\n            'id' => $this->id,\r\n            'form_id' => $this->form_id,\r\n            'ctime' => $this->ctime,\r\n            'ip' => $this->ip,\r\n            'content' => $this->content,\r\n            'identifier' => $this->identifier,\r\n            'custom_fields' => $this->custom_fields,\r\n            'chat_id' => $this->chat_id,\r\n        );\r\n\r\n        return $stateArray;\r\n    }\r\n\r\n    public function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case 'left_menu':\r\n                $this->left_menu = '';\r\n                return $this->left_menu;\r\n\r\n            case 'ctime_front':\r\n                return $this->ctime_front = date('Ymd') == date('Ymd', $this->ctime) ? date(erLhcoreClassModule::$dateHourFormat, $this->ctime) : date(erLhcoreClassModule::$dateDateHourFormat, $this->ctime);\r\n\r\n            case 'ctime_full_front':\r\n                return $this->ctime_full_front = date(erLhcoreClassModule::$dateDateHourFormat, $this->ctime);\r\n\r\n            case 'content_array':\r\n                $content = json_decode($this->content,true);\r\n                if ($content === null) {\r\n                    $content = unserialize($this->content);\r\n                }\r\n                return $this->content_array = $content;\r\n\r\n            case 'custom_fields_array':\r\n                return $this->custom_fields_array = $this->custom_fields != '' ? json_decode($this->custom_fields, true) : [];\r\n\r\n            case 'form':\r\n                return $this->form = erLhAbstractModelForm::fetch($this->form_id);\r\n\r\n            case 'form_content':\r\n                return $this->getFormattedContent();\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public function getFormattedContent()\r\n    {\r\n        $dataCollected = array();\r\n        foreach ($this->content_array as $nameAttr => $contentArray) {\r\n            if (isset($contentArray['definition']['type']) && $contentArray['definition']['type'] == 'file') {\r\n                $dataCollected[] = $contentArray['definition']['name_literal'] . \" - \" . erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurldirect('user/login') . '/(r)/' . rawurlencode(base64_encode('form/download/' . $this->id . '/' . $nameAttr));\r\n            } elseif (isset($contentArray['definition']['type']) && $contentArray['definition']['type'] == 'checkbox') {\r\n                $dataCollected[] = $contentArray['definition']['name_literal'] . \" - \" . ($contentArray['value'] == 1 ? 'Y' : 'N');\r\n            } else {\r\n                $dataCollected[] = $contentArray['definition']['name_literal'] . \" - \" . $contentArray['value'];\r\n            }\r\n        }\r\n\r\n        return implode(\"\\n\", $dataCollected);\r\n    }\r\n\r\n    public function getAttrValue($attrDesc)\r\n    {\r\n        $attrs = explode(',', $attrDesc);\r\n\r\n        $attrCollected = array();\r\n\r\n        foreach ($attrs as $attr) {\r\n            $attrCollected[] = $this->content_array[$attr]['value'];\r\n        }\r\n\r\n        return implode(', ', $attrCollected);\r\n    }\r\n\r\n    public function beforeRemove()\r\n    {\r\n        foreach ($this->content_array as $key => $content) {\r\n            if ($content['definition']['type'] == 'file') {\r\n\r\n                if ($content['filename'] != '') {\r\n                    erLhcoreClassChatEventDispatcher::getInstance()->dispatch('form.remove_file', array('filepath' => $content['filepath'], 'filename' => $content['filename']));\r\n                }\r\n\r\n                if ($content['filepath'] != '' && file_exists($content['filepath'] . $content['filename'])) {\r\n                    unlink($content['filepath'] . $content['filename']);\r\n                    erLhcoreClassFileUpload::removeRecursiveIfEmpty('var/', str_replace('var/', '', $content['filepath']));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public $id = null;\r\n    public $form_id = null;\r\n    public $ctime = null;\r\n    public $ip = '';\r\n    public $content = '';\r\n    public $identifier = '';\r\n    public $custom_fields = '';\r\n    public $chat_id = 0;\r\n\r\n}\r\n\r\n?>", "<?php\r\n\r\nclass erLhAbstractModelWidgetTheme {\r\n\r\n    use erLhcoreClassDBTrait;\r\n\r\n    public static $dbTable = 'lh_abstract_widget_theme';\r\n\r\n    public static $dbTableId = 'id';\r\n\r\n    public static $dbSessionHandler = 'erLhcoreClassAbstract::getSession';\r\n\r\n    public static $dbSortOrder = 'DESC';\r\n\r\n\tpublic function getState()\r\n\t{\r\n\t\t$stateArray = array (\r\n\t\t\t'id'         \t\t\t\t=> $this->id,\r\n\t\t\t'name'  \t\t\t\t\t=> $this->name,\r\n\t\t\t'enable_widget_embed_override' => $this->enable_widget_embed_override,\r\n\t\t\t'widget_show_leave_form'       => $this->widget_show_leave_form,\r\n\t\t\t'widget_survey'             => $this->widget_survey,\r\n\t\t\t'widget_position'           => $this->widget_position,\r\n\t\t\t'widget_popwidth'           => $this->widget_popwidth,\r\n\t\t\t'widget_popheight'          => $this->widget_popheight,\r\n\t\t\t'widget_pright'             => $this->widget_pright,\r\n\t\t\t'widget_pbottom'           => $this->widget_pbottom,\r\n\t\t\t'name_company'  \t\t\t=> $this->name_company,\r\n\t\t\t'onl_bcolor'\t\t\t\t=> $this->onl_bcolor,\t\t\t\r\n\t\t\t'bor_bcolor'\t\t\t\t=> $this->bor_bcolor,\t\t\t\r\n\t\t\t'text_color'\t\t\t\t=> $this->text_color,\t\t\t\t\r\n\t\t\t'online_image'\t\t\t\t=> $this->online_image,\r\n\t\t\t'online_image_path'\t\t\t=> $this->online_image_path,\r\n\t\t\t'offline_image'\t\t\t\t=> $this->offline_image,\r\n\t\t\t'offline_image_path'\t\t=> $this->offline_image_path,\t\t\t\t\t\r\n\t\t\t'operator_image'\t\t\t=> $this->operator_image,\r\n\t\t\t'operator_image_path'\t\t=> $this->operator_image_path,\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t'header_background'\t\t\t=> $this->header_background,\r\n\t\t\t'widget_border_color'\t\t=> $this->widget_border_color,\r\n\t\t\t'need_help_image'\t\t\t=> $this->need_help_image,\r\n\t\t\t'need_help_bcolor'\t\t\t=> $this->need_help_bcolor,\r\n\t\t\t'need_help_hover_bg'\t\t=> $this->need_help_hover_bg,\r\n\t\t\t'need_help_tcolor'\t\t\t=> $this->need_help_tcolor,\r\n\t\t\t'need_help_border'\t\t\t=> $this->need_help_border,\r\n\t\t\t'need_help_close_bg'\t\t=> $this->need_help_close_bg,\r\n\t\t\t'need_help_close_hover_bg'\t=> $this->need_help_close_hover_bg,\r\n\t\t\t'need_help_image_path'\t\t=> $this->need_help_image_path,\r\n\t\t\t'show_need_help_delay'\t\t=> $this->show_need_help_delay,\r\n\t\t\t'show_status_delay'\t\t    => $this->show_status_delay,\r\n\t\t\t'custom_status_css'\t\t\t=> $this->custom_status_css,\r\n\t\t\t'custom_container_css'\t\t=> $this->custom_container_css,\r\n\t\t\t'custom_widget_css'\t\t\t=> $this->custom_widget_css,\r\n\t\t\t'custom_popup_css'\t\t\t=> $this->custom_popup_css,\r\n\t\t\t'need_help_header'\t\t\t=> $this->need_help_header,\r\n\t\t\t'need_help_text'\t\t\t=> $this->need_help_text,\r\n\t\t\t'bot_status_text'\t\t\t=> $this->bot_status_text,\r\n\t\t\t'online_text'\t\t\t\t=> $this->online_text,\r\n\t\t\t'offline_text'\t\t\t\t=> $this->offline_text,\r\n\t\t\t'logo_image'\t\t\t\t=> $this->logo_image,\r\n\t\t\t'logo_image_path'\t\t\t=> $this->logo_image_path,\r\n\t\t\t'copyright_image'\t\t\t=> $this->copyright_image,\r\n\t\t\t'copyright_image_path'\t\t=> $this->copyright_image_path,\r\n\t\t\t'show_copyright'\t\t\t=> $this->show_copyright,\r\n\t\t\t'widget_copyright_url'\t\t=> $this->widget_copyright_url,\r\n\t\t\t'explain_text'\t\t\t\t=> $this->explain_text,\r\n\t\t\t'intro_operator_text'\t\t=> $this->intro_operator_text,\t\t    \r\n\t\t\t'minimize_image'\t\t    => $this->minimize_image,\r\n\t\t    'minimize_image_path'\t\t=> $this->minimize_image_path,\t\t    \r\n\t\t\t'restore_image'\t\t        => $this->restore_image,\r\n\t\t    'restore_image_path'\t\t=> $this->restore_image_path,\t\t    \r\n\t\t\t'close_image'\t\t        => $this->close_image,\r\n\t\t    'close_image_path'\t\t    => $this->close_image_path,\t\t    \r\n\t\t\t'popup_image'\t\t        => $this->popup_image,\t\t\t\r\n\t\t\t'popup_image_path'\t\t    => $this->popup_image_path,\t\t    \r\n\t\t\t'hide_close'\t\t        => $this->hide_close,\r\n\t\t\t'hide_popup'\t\t        => $this->hide_popup,\r\n\t\t\t'header_height'\t\t        => $this->header_height,\r\n\t\t\t'header_padding'\t\t    => $this->header_padding,\r\n\t\t\t'widget_border_width'\t\t=> $this->widget_border_width,\r\n\t\t\t'support_joined'\t\t    => $this->support_joined,\r\n\t\t\t'support_closed'\t\t    => $this->support_closed,\r\n\t\t\t'pending_join'\t\t        => $this->pending_join,\r\n\t\t\t'pending_join_queue'\t\t=> $this->pending_join_queue,\r\n\t\t\t'noonline_operators'\t\t=> $this->noonline_operators,\r\n\t\t\t'noonline_operators_offline'=> $this->noonline_operators_offline,\r\n\t\t\t'show_need_help'            => $this->show_need_help,\r\n\t\t\t'show_need_help_timeout'    => $this->show_need_help_timeout,\r\n\t\t\t'modern_look'               => $this->modern_look,\r\n\r\n\t\t\t'show_voting'               => $this->show_voting,\r\n\t\t\t'department_title'          => $this->department_title,\r\n\t\t\t'department_select'         => $this->department_select,\r\n\t\t\t'buble_visitor_background'  => $this->buble_visitor_background,\r\n\t\t\t'buble_visitor_title_color' => $this->buble_visitor_title_color,\r\n\t\t\t'buble_visitor_text_color'  => $this->buble_visitor_text_color,\r\n\t\t\t'buble_operator_background' => $this->buble_operator_background,\r\n\t\t\t'buble_operator_title_color'=> $this->buble_operator_title_color,\r\n\t\t\t'buble_operator_text_color' => $this->buble_operator_text_color,\r\n\r\n\t\t\t'bot_configuration'         => $this->bot_configuration,\r\n\t\t\t'notification_configuration'=> $this->notification_configuration,\r\n\r\n\t\t\t'hide_ts'                   => $this->hide_ts,\r\n\t\t\t'widget_response_width'     => $this->widget_response_width,\r\n\t\t\t'modified'                  => $this->modified,\r\n\t\t\t'alias'                     => $this->alias,\r\n\t\t);\r\n\r\n\t\terLhcoreClassChatEventDispatcher::getInstance()->dispatch('lhabstract.erlhabstractmodelwidgettheme.getstate',array('state' => & $stateArray, 'object' => & $this));\r\n\t\t\r\n\t\treturn $stateArray;\r\n\t}\r\n\r\n\tpublic function __toString()\r\n\t{\r\n\t\treturn $this->name;\r\n\t}\r\n\t\t\r\n   \tpublic function getFields()\r\n   \t{\r\n   \t\treturn include('lib/core/lhabstract/fields/erlhabstractmodelwidgettheme.php');\r\n\t}\r\n\t\r\n\tpublic function getContentAttribute($attr)\r\n\t{\r\n\t\t$response = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('theme.download_image.'.$attr, array('theme' => $this, 'attr' => $attr));\r\n\t\tif ($response === false) {\r\n\t\t\treturn file_get_contents($this->{$attr.'_path'}.'/'.$this->$attr);\r\n\t\t} else {\r\n\t\t\treturn $response['filedata'];\r\n\t\t}\r\n\t}\r\n\r\n    public function movePhoto($attr, $isLocal = false, $localFile = false)\r\n\t{\r\n\t\t$this->deletePhoto($attr);\r\n\t\r\n\t\tif ($this->id != null){\r\n\t\t\t$dir = 'var/storagetheme/' . date('Y') . 'y/' . date('m') . '/' . date('d') .'/' . $this->id . '/';\r\n\t\r\n\t\t\t$response = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('theme.edit.'.$attr.'_path',array('dir' => & $dir, 'storage_id' => $this->id));\r\n\t\r\n\t\t\terLhcoreClassFileUpload::mkdirRecursive( $dir );\r\n\t\t\t\t\t\t\r\n\t\t\tif ($isLocal == false) {\r\n\t\t\t\t$this->$attr = erLhcoreClassSearchHandler::moveUploadedFile('AbstractInput_'.$attr, $dir . '/','.' );\r\n\t\t\t} else {\r\n\t\t\t\t$this->$attr = erLhcoreClassSearchHandler::moveLocalFile($localFile, $dir . '/','.' );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$this->{$attr.'_path'} = $dir;\r\n\r\n\t\t\tif ($attr == 'notification_icon') {\r\n\t\t\t    $noteConfigurationArray = $this->notification_configuration_array;\r\n                $noteConfigurationArray[$attr.'_path'] = $this->{$attr.'_path'};\r\n                $noteConfigurationArray[$attr] = $this->{$attr};\r\n\r\n                $this->notification_configuration_array = $noteConfigurationArray;\r\n            }\r\n\r\n\t\t\t$response = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('theme.edit.store_'.$attr,array(\r\n\t\t\t\t\t'theme' => & $this, \r\n\t\t\t\t\t'path_attr' => $attr.'_path', \r\n\t\t\t\t\t'name' => $this->$attr,\r\n\t\t\t        'name_attr' => $attr,\t\t\t\t\r\n\t\t\t\t\t'file_path' => $this->{$attr.'_path'} . $this->$attr));\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t$this->{$attr.'_pending'} = true;\r\n\t\t}\r\n\t}\t\r\n\t\t\r\n\tpublic function deletePhoto($attr)\r\n\t{\r\n\t\tif ($this->$attr != '') {\r\n\t\t\tif ( file_exists($this->{$attr.'_path'} . $this->$attr) ) {\r\n\t\t\t\tunlink($this->{$attr.'_path'} . $this->$attr);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif ($this->{$attr.'_path'} != '') {\r\n\t\t\t\terLhcoreClassFileUpload::removeRecursiveIfEmpty('var/storagetheme/',str_replace('var/storagetheme/','',$this->{$attr.'_path'}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\terLhcoreClassChatEventDispatcher::getInstance()->dispatch('theme.edit.remove_'.$attr,array(\r\n\t\t\t\t\t'theme' => & $this,\r\n\t\t\t\t\t'path_attr' => $attr.'_path',\r\n\t\t\t\t\t'name' => $this->$attr));\r\n\t\t\t\r\n\t\t\t$this->$attr = '';\r\n\t\t\t$this->{$attr.'_path'} = '';\r\n\r\n\t\t\tif ($attr == 'notification_icon') {\r\n                $noteConfigurationArray = $this->notification_configuration_array;\r\n                $noteConfigurationArray[$attr.'_path'] = '';\r\n                $noteConfigurationArray[$attr] = '';\r\n                $this->notification_configuration_array = $noteConfigurationArray;\r\n            }\r\n\t\t}\t\t\r\n\t}\r\n\t\r\n\tpublic function getModuleTranslations()\r\n\t{\r\n\t    $metaData = array(\r\n\t    'path' => array(\r\n            array('url' => erLhcoreClassDesign::baseurl('system/configuration'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('department/edit','System configuration')),\r\n\t        array('url' => erLhcoreClassDesign::baseurl('theme/index'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('theme/index','Themes'))\r\n        ), 'permission_delete' => array('module' => 'lhtheme','function' => 'administratethemes'),'permission' => array('module' => 'lhtheme','function' => 'administratethemes'),'name' => erTranslationClassLhTranslation::getInstance()->getTranslation('abstract/widgettheme','Widget themes'));\r\n\t    \r\n\t    erLhcoreClassChatEventDispatcher::getInstance()->dispatch('feature.can_use_themes', array('object_meta_data' => & $metaData));\r\n\t    \r\n\t    return $metaData;\r\n\t}\r\n\r\n\tpublic function afterSave()\r\n    {\r\n        $movePhotos = array(\r\n            'need_help_image',\r\n            'online_image',\r\n            'offline_image',\r\n            'logo_image',\r\n            'copyright_image',\r\n            'operator_image',\r\n            'minimize_image',\r\n            'restore_image',\r\n            'close_image',\r\n            'popup_image',\r\n            'notification_icon',\r\n        );\r\n\r\n        $pendingUpdate = false;\r\n        foreach ($movePhotos as $photoAttr) {\r\n            if ($this->{$photoAttr.'_pending'} == true) {\r\n                $this->movePhoto($photoAttr);\r\n                $pendingUpdate = true;\r\n            }\r\n        }\r\n\r\n        if ($pendingUpdate == true) {\r\n            $this->updateThis();\r\n        }\r\n    }\r\n\r\n\tpublic function __get($var)\r\n\t{\r\n\t   switch ($var) {\r\n\t   \t\r\n\t   \tcase 'left_menu':\r\n\t   \t       $this->left_menu = '';\r\n\t   \t\t   return $this->left_menu;\r\n\t   \t\tbreak;\r\n\r\n           case 'custom_status_css_front':\r\n               $attr = str_replace('_front', '', $var);\r\n               $this->$var = false;\r\n               if ($this->$attr != '') {\r\n                   $this->$var =  str_replace($this->replace_array['search'], $this->replace_array['replace'], $this->$attr);\r\n               }\r\n               return $this->$var;\r\n               break;\r\n\r\n           case 'replace_array':\r\n\r\n               $host = erLhcoreClassSystem::getHost();\r\n\r\n               $this->replace_array = array(\r\n                   'search' => array(\r\n                       '{{host}}',\r\n                       '{{logo_image_url}}',\r\n                       '{{minimize_image_url}}',\r\n                       '{{restore_image_url}}',\r\n                       '{{close_image_url}}',\r\n                       '{{popup_image_url}}',\r\n                       '{{operator_image_url}}',\r\n                       '{{copyright_image_url}}',\r\n                       '{{need_help_image_url}}',\r\n                       '{{online_image_url}}',\r\n                       '{{offline_image_url}}',\r\n                   ),\r\n                   'replace' => array(\r\n                       $host,\r\n                       $this->logo_image_url,\r\n                       $this->minimize_image_url,\r\n                       $this->restore_image_url,\r\n                       $this->close_image_url,\r\n                       $this->popup_image_url,\r\n                       $this->operator_image_url,\r\n                       $this->copyright_image_url,\r\n                       $this->need_help_image_url,\r\n                       $this->online_image_url,\r\n                       $this->offline_image_url,\r\n                   ));\r\n               return $this->replace_array;\r\n               break;\r\n\r\n           case 'operator_image_avatar':\r\n               return $this->operator_image_url !== false || (isset($this->bot_configuration_array['operator_avatar']) && $this->bot_configuration_array['operator_avatar'] != '');\r\n\r\n\t   \tcase 'notification_icon_url':\r\n\t   \tcase 'logo_image_url':\r\n\t   \tcase 'minimize_image_url':\r\n\t   \tcase 'restore_image_url':\r\n\t   \tcase 'close_image_url':\r\n\t   \tcase 'popup_image_url':\r\n\t   \tcase 'operator_image_url':\r\n\t   \tcase 'copyright_image_url':\r\n\t   \tcase 'need_help_image_url':\r\n\t   \tcase 'online_image_url':\r\n\t   \tcase 'offline_image_url':\r\n\t   \t       $attr = str_replace('_url', '', $var);\t   \t       \t   \t       \r\n\t   \t       $this->$var = false;\t   \t        \r\n\t   \t       if ($this->$attr != ''){\r\n\t   \t           $this->$var =  ($this->{$attr.'_path'} != '' ? erLhcoreClassSystem::getHost() . erLhcoreClassSystem::instance()->wwwDir() : erLhcoreClassSystem::instance()->wwwImagesDir() ) . '/' . $this->{$attr.'_path'} . $this->$attr;\r\n\t   \t       }\t   \t        \r\n\t   \t       return $this->$var;\r\n\t   \t    break;\r\n\t   \t\t   \t\t\t   \t\t\r\n\t   \tcase 'need_help_image_url_img':\r\n\t   \tcase 'online_image_url_img':\r\n\t   \tcase 'offline_image_url_img':\r\n\t   \tcase 'logo_image_url_img':\r\n\t   \tcase 'copyright_image_url_img':\r\n\t   \tcase 'operator_image_url_img':\r\n\t   \tcase 'popup_image_url_img':\r\n\t   \tcase 'close_image_url_img':\r\n\t   \tcase 'restore_image_url_img':\r\n\t   \tcase 'minimize_image_url_img':\t   \t\t\t \r\n\t   \t        $attr = str_replace('_url_img', '', $var);\t   \t    \r\n\t   \t\t\t$this->$var = false;\t   \t\t\r\n\t   \t\t\tif($this->$attr != ''){\r\n\t   \t\t\t\t$this->$var = '<img src=\"'.($this->{$attr.'_path'} != '' ? erLhcoreClassSystem::getHost() . erLhcoreClassSystem::instance()->wwwDir() : erLhcoreClassSystem::instance()->wwwImagesDir() ) .'/'.$this->{$attr.'_path'} . $this->$attr.'\"/>';\r\n\t   \t\t\t}\r\n\t   \t\t\treturn $this->$var;\r\n\t   \t\tbreak;\r\n\r\n       case 'notification_icon':\r\n       case 'notification_icon_path':\r\n           $configurationArray = $this->notification_configuration_array;\r\n           if (isset($configurationArray[$var]) && $configurationArray[$var] != '') {\r\n               $this->$var = $configurationArray[$var];\r\n           } else {\r\n               $this->$var = '';\r\n           }\r\n           return $this->$var;\r\n           break;\r\n\r\n       case 'notification_icon_url_img':\r\n           $attr = str_replace('_url_img', '', $var);\r\n           $configurationArray = $this->notification_configuration_array;\r\n           if (isset($configurationArray[$attr]) && $configurationArray[$attr] != '') {\r\n               $this->$var = '<img src=\"'.($this->{$attr.'_path'} != '' ? erLhcoreClassSystem::instance()->wwwDir() : erLhcoreClassSystem::instance()->wwwImagesDir() ) .'/'.$this->{$attr.'_path'} . $configurationArray[$attr].'\"/>';\r\n           } else {\r\n               $this->$var = false;\r\n           }\r\n           return $this->$var;\r\n           break;\r\n\r\n       case 'bot_configuration_array':\r\n       case 'notification_configuration_array':\r\n           $attr = str_replace('_array','',$var);\r\n           if (!empty($this->{$attr})) {\r\n               $jsonData = json_decode($this->{$attr},true);\r\n               if ($jsonData !== null) {\r\n                   $this->{$var} = $jsonData;\r\n               } else {\r\n                   $this->{$var} = array();\r\n               }\r\n           } else {\r\n               $this->{$var} = array();\r\n           }\r\n           return $this->{$var};\r\n           break;\r\n\t   \t\t\r\n\t   \tdefault:\r\n\t   \t\tbreak;\r\n\t   }\r\n\t}\r\n\r\n\tpublic function beforeRemove()\r\n    {\r\n        // If theme is removed we have to reset default theme if it was the one\r\n        $themeData = erLhcoreClassModelChatConfig::fetch('default_theme_id');\r\n\r\n        if ($themeData->value == $this->id) {\r\n            $themeData->value = 0;\r\n            $themeData->saveThis();\r\n        }\r\n        \r\n        $imagesToRemove = array(\r\n            'online_image',\r\n            'offline_image',\r\n            'logo_image',\r\n            'need_help_image',\r\n            'copyright_image',\r\n            'operator_image',\r\n            'minimize_image',\r\n            'restore_image',\r\n            'close_image',\r\n            'popup_image'\r\n        );\r\n\r\n        foreach ($imagesToRemove as $img) {\r\n            $this->deletePhoto($img);\r\n        }\r\n    }\r\n\r\n    public function beforeUpdate()\r\n    {\r\n        $this->bot_configuration = json_encode($this->bot_configuration_array);\r\n        $this->notification_configuration = json_encode($this->notification_configuration_array);\r\n        $this->modified = time();\r\n    }\r\n\r\n    public function beforeSave()\r\n    {\r\n        $this->bot_configuration = json_encode($this->bot_configuration_array);\r\n        $this->notification_configuration = json_encode($this->notification_configuration_array);\r\n        $this->modified = time();\r\n    }\r\n    \r\n\tpublic function dependCss()\r\n    {\r\n\t\treturn '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.erLhcoreClassDesign::design('css/colorpicker.css').'\" />';\r\n\t}\r\n\r\n\tpublic function dependJs()\r\n    {\r\n\t\treturn '<script type=\"text/javascript\" src=\"'.erLhcoreClassDesign::designJS('js/colorpicker.js;js/ace/ace.js').'\"></script>';\r\n\t}\r\n\r\n    public function dependFooterJs()\r\n    {\r\n        return '<script type=\"text/javascript\" src=\"'.erLhcoreClassDesign::designJS('js/angular.lhc.theme.js').'\"></script>';\r\n    }\r\n\t\r\n\tpublic function customForm()\r\n    {\r\n\t\treturn 'widget_theme.tpl.php';\r\n\t}\r\n\r\n\tpublic function translate() {\r\n        $chatLocale = null;\r\n        $chatLocaleFallback = erConfigClassLhConfig::getInstance()->getDirLanguage('content_language');\r\n\r\n        // Detect user locale\r\n        if(isset($_SERVER['HTTP_ACCEPT_LANGUAGE'])) {\r\n            $parts = explode(';',$_SERVER['HTTP_ACCEPT_LANGUAGE']);\r\n            $languages = explode(',',$parts[0]);\r\n            if (isset($languages[0])) {\r\n                $chatLocale = $languages[0];\r\n            }\r\n        }\r\n\r\n        $attributesDirect = array(\r\n            'pending_join_queue',\r\n            'bot_status_text',\r\n            'support_joined',\r\n            'support_closed',\r\n            'pending_join',\r\n            'noonline_operators',\r\n            'noonline_operators_offline',\r\n            'department_title',\r\n            'department_select',\r\n            'explain_text',\r\n            'need_help_text',\r\n            'need_help_header',\r\n            'intro_operator_text',\r\n        );\r\n\r\n        $translatableAttributes = array_merge(array(\r\n            'custom_start_button_offline',\r\n            'custom_start_button_bot',\r\n            'custom_start_button',\r\n            'inject_html',\r\n            'custom_html_status',\r\n            'custom_html_header_body',\r\n            'custom_html_header',\r\n            'custom_html_widget_bot',\r\n            'custom_html_bot',\r\n            'custom_html_widget',\r\n            'custom_html',\r\n            'intro_message',\r\n            'intro_message_html',\r\n            'pre_chat_html',\r\n            'pre_offline_chat_html',\r\n            'thank_feedback',\r\n            'placeholder_message',\r\n            'need_help_html',\r\n            'chat_unavailable',\r\n            'custom_op_name',\r\n            'custom_tos_text',\r\n            'min_text',\r\n            'popup_text',\r\n            'end_chat_text',\r\n            'cnew_msgh',\r\n            'cnew_msg',\r\n            'cscroll_btn',\r\n            'cnew_msgm',\r\n            'formf_name',\r\n            'formf_email',\r\n            'formf_file',\r\n            'formf_phone',\r\n            'formf_question',\r\n        ),$attributesDirect);\r\n\r\n        $attributes = $this->bot_configuration_array;\r\n\r\n        foreach ($translatableAttributes as $attr) {\r\n            if (isset($attributes[$attr . '_lang'])) {\r\n\r\n                $translated = false;\r\n\r\n                if ($chatLocale !== null) {\r\n                    foreach ($attributes[$attr . '_lang'] as $attrTrans) {\r\n                        if (in_array($chatLocale, $attrTrans['languages']) && $attrTrans['content'] != '') {\r\n                            $attributes[$attr] = $attrTrans['content'];\r\n                            $translated = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if ($translated == false) {\r\n                    foreach ($attributes[$attr . '_lang'] as $attrTrans) {\r\n                        if (in_array($chatLocaleFallback, $attrTrans['languages']) && $attrTrans['content'] != '') {\r\n                            $attributes[$attr] = $attrTrans['content'];\r\n                            $translated = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if ($translated === true && in_array($attr,$attributesDirect)) {\r\n                    $this->$attr = $attributes[$attr];\r\n                }\r\n            }\r\n        }\r\n\r\n        $this->bot_configuration_array = $attributes;\r\n    }\r\n\r\n   \tpublic $id = null;\r\n\tpublic $name = '';\r\n\tpublic $onl_bcolor = '0c8fc4';\r\n\tpublic $text_color = '';\r\n\tpublic $bor_bcolor = 'e3e3e3';\r\n\tpublic $online_image = '';\r\n\tpublic $offline_image = '';\r\n\tpublic $online_image_path = '';\r\n\tpublic $offline_image_path = '';\r\n\tpublic $header_background = '525252';\r\n\tpublic $need_help_bcolor = '';\r\n\tpublic $need_help_hover_bg = '';\r\n\tpublic $need_help_image = '';\t\r\n\tpublic $need_help_tcolor = '';\r\n\tpublic $need_help_border = '';\r\n\tpublic $need_help_close_bg = '';\r\n\tpublic $need_help_close_hover_bg = '';\r\n\tpublic $need_help_image_path = '';\r\n\tpublic $custom_status_css = '';\r\n\tpublic $custom_container_css = '';\r\n\tpublic $custom_widget_css = '';\r\n\tpublic $need_help_header = '';\r\n\tpublic $need_help_text = '';\r\n\tpublic $online_text = '';\r\n\tpublic $offline_text = '';\t\r\n\tpublic $logo_image = '';\r\n\tpublic $logo_image_path = '';\r\n\tpublic $operator_image = '';\r\n\tpublic $operator_image_path = '';\r\n\tpublic $copyright_image = '';\r\n\tpublic $copyright_image_path = '';\r\n\tpublic $show_copyright = '1';\r\n\tpublic $widget_copyright_url = '';\r\n\tpublic $explain_text = '';\r\n\tpublic $intro_operator_text = '';\r\n\tpublic $widget_border_color = 'cccccc';\t\r\n\tpublic $hide_close = 1;\r\n\tpublic $hide_popup = 0;\t\r\n\tpublic $minimize_image = '';\r\n\tpublic $minimize_image_path = '';\t\r\n\tpublic $restore_image = '';\r\n\tpublic $restore_image_path = '';\t\r\n\tpublic $close_image = '';\r\n\tpublic $close_image_path = '';\t\r\n\tpublic $popup_image = '';\r\n\tpublic $popup_image_path = '';\t\r\n\tpublic $custom_popup_css = '';\r\n\tpublic $name_company = '';\r\n\tpublic $header_height = 0;\r\n\tpublic $header_padding = 0;\r\n\tpublic $widget_border_width = 1;\r\n\tpublic $show_need_help = 1;\r\n\tpublic $show_need_help_timeout = 24;\r\n\tpublic $show_need_help_delay = 0;\r\n\tpublic $show_status_delay = 0;\r\n\r\n\tpublic $support_joined = '';\r\n\tpublic $bot_status_text = '';\r\n\tpublic $support_closed = '';\r\n\tpublic $pending_join = '';\r\n\tpublic $pending_join_queue = '';\r\n\tpublic $noonline_operators = '';\r\n\tpublic $noonline_operators_offline = '';\r\n\tpublic $notification_configuration = '';\r\n\r\n\tpublic $bot_configuration = '';\r\n\r\n\tpublic $show_voting = 1;\r\n\tpublic $modern_look = 1;\r\n\tpublic $department_title = '';\r\n\tpublic $department_select = '';\r\n\r\n\tpublic $buble_visitor_background = ''; //BFE9F9\r\n\tpublic $buble_visitor_title_color = '';//99BE7B\r\n\tpublic $buble_visitor_text_color = ''; //333333\r\n\r\n\tpublic $buble_operator_background = ''; //DCF2FA\r\n\tpublic $buble_operator_title_color = '';//8EC1D9\r\n\tpublic $buble_operator_text_color = ''; //333333\r\n\r\n    public $hide_ts = 0;\r\n    public $widget_response_width = 0;\r\n\r\n    // Theme modified time. We will use this attribute for E-Tag\r\n    public $modified = 0;\r\n\r\n    public $enable_widget_embed_override = 0;\r\n    public $widget_show_leave_form = 0;\r\n    public $widget_survey = 0;\r\n    public $widget_position = '';\r\n    public $widget_popwidth = 500;\r\n    public $widget_popheight = 520;\r\n    public $widget_pright = 0;\r\n    public $widget_pbottom = 0;\r\n    public $alias = '';\r\n\r\n\tpublic $hide_add = false;\r\n\tpublic $hide_delete = false;\r\n}\r\n\r\n?>", "<?php\r\n\r\nclass erLhcoreClassModelGenericBotBot {\r\n\r\n    use erLhcoreClassDBTrait;\r\n\r\n    public static $dbTable = 'lh_generic_bot_bot';\r\n\r\n    public static $dbTableId = 'id';\r\n\r\n    public static $dbSessionHandler = 'erLhcoreClassGenericBot::getSession';\r\n\r\n    public static $dbSortOrder = 'DESC';\r\n\r\n    public function getState()\r\n    {\r\n        $stateArray = array(\r\n            'id' => $this->id,\r\n            'name' => $this->name,\r\n            'nick' => $this->nick,\r\n            'configuration' => $this->configuration,\r\n            'attr_str_1' => $this->attr_str_1,\r\n            'attr_str_2' => $this->attr_str_2,\r\n            'attr_str_3' => $this->attr_str_3,\r\n            'filepath' => $this->filepath,\r\n            'filename' => $this->filename,\r\n            'avatar' => $this->avatar,\r\n        );\r\n\r\n        return $stateArray;\r\n    }\r\n\r\n    public function beforeRemove() {\r\n\r\n        // Bot groups\r\n        $q = ezcDbInstance::get()->createDeleteQuery();\r\n        $q->deleteFrom( 'lh_generic_bot_group' )->where( $q->expr->eq( 'bot_id', $this->id ) );\r\n        $stmt = $q->prepare();\r\n        $stmt->execute();\r\n\r\n        // Bot payloads\r\n        $q = ezcDbInstance::get()->createDeleteQuery();\r\n        $q->deleteFrom( 'lh_generic_bot_payload' )->where( $q->expr->eq( 'bot_id', $this->id ) );\r\n        $stmt = $q->prepare();\r\n        $stmt->execute();\r\n\r\n        // Bot triggers\r\n        $q = ezcDbInstance::get()->createDeleteQuery();\r\n        $q->deleteFrom( 'lh_generic_bot_trigger' )->where( $q->expr->eq( 'bot_id', $this->id ) );\r\n        $stmt = $q->prepare();\r\n        $stmt->execute();\r\n\r\n        // Bot trigger event\r\n        $q = ezcDbInstance::get()->createDeleteQuery();\r\n        $q->deleteFrom( 'lh_generic_bot_trigger_event' )->where( $q->expr->eq( 'bot_id', $this->id ) );\r\n        $stmt = $q->prepare();\r\n        $stmt->execute();\r\n\r\n        $this->removeFile();\r\n    }\r\n\r\n    public function __get($var) {\r\n\r\n        switch ($var) {\r\n\r\n            case 'configuration_array':\r\n                $this->configuration_array = array();\r\n                if ($this->configuration != ''){\r\n                    $jsonData = json_decode($this->configuration,true);\r\n                    if ($jsonData !== null) {\r\n                        $this->configuration_array = $jsonData;\r\n                    } else {\r\n                        $this->configuration_array = array();\r\n                    }\r\n                }\r\n                return $this->configuration_array;\r\n                break;\r\n\r\n            case 'name_support':\r\n                return $this->name_support = $this->nick;\r\n                break;\r\n\r\n            case 'has_photo':\r\n                return $this->filename != '';\r\n                break;\r\n\r\n            case 'has_photo_avatar':\r\n                return $this->filename != '' || $this->avatar != '';\r\n                break;\r\n\r\n            case 'photo_path':\r\n                $this->photo_path = ($this->filepath != '' ? erLhcoreClassSystem::getHost() . erLhcoreClassSystem::instance()->wwwDir() : erLhcoreClassSystem::instance()->wwwImagesDir() ) .'/'. $this->filepath . $this->filename;\r\n                return $this->photo_path;\r\n                break;\r\n\r\n            case 'file_path_server':\r\n                return $this->filepath . $this->filename;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public function getBotIds() {\r\n\r\n        $ids = array($this->id);\r\n\r\n        $configurationArray = $this->configuration_array;\r\n\r\n        if (isset($configurationArray['bot_id']) && !empty($configurationArray['bot_id'])) {\r\n            $ids = array_merge($ids,$configurationArray['bot_id']);\r\n        }\r\n\r\n        return $ids;\r\n    }\r\n\r\n    public function removeFile()\r\n    {\r\n        if ($this->filename != '') {\r\n            if ( file_exists($this->filepath . $this->filename) ) {\r\n                unlink($this->filepath . $this->filename);\r\n            }\r\n\r\n            if ($this->filepath != '') {\r\n                erLhcoreClassFileUpload::removeRecursiveIfEmpty('var/botphoto/',str_replace('var/botphoto/','',$this->filepath));\r\n            }\r\n\r\n            erLhcoreClassChatEventDispatcher::getInstance()->dispatch('user.remove_photo', array('user' => & $this));\r\n\r\n            $this->filepath = '';\r\n            $this->filename = '';\r\n            $this->saveThis();\r\n        }\r\n    }\r\n\r\n    public function __toString()\r\n    {\r\n        return $this->name;\r\n    }\r\n\r\n    public $id = null;\r\n    public $name = '';\r\n    public $nick = '';\r\n    public $configuration = '';\r\n    public $attr_str_1 = '';\r\n    public $attr_str_2 = '';\r\n    public $attr_str_3 = '';\r\n    public $filepath = '';\r\n    public $filename = '';\r\n    public $avatar = '';\r\n}", "<?php\n\nclass erLhcoreClassModelGenericBotTrGroup {\n\n    use erLhcoreClassDBTrait;\n\n    public static $dbTable = 'lh_generic_bot_tr_group';\n\n    public static $dbTableId = 'id';\n\n    public static $dbSessionHandler = 'erLhcoreClassGenericBot::getSession';\n\n    public static $dbSortOrder = 'DESC';\n\n    public function getState()\n    {\n        $stateArray = array(\n            'id' => $this->id,\n            'name' => $this->name,\n            'nick' => $this->nick,\n            'filepath' => $this->filepath,\n            'filename' => $this->filename,\n            'configuration' => $this->configuration,\n        );\n        return $stateArray;\n    }\n\n    public function __get($var) {\n\n        switch ($var) {\n            case 'configuration_array':\n                $this->configuration_array = array();\n                if ($this->configuration != ''){\n                    $jsonData = json_decode($this->configuration,true);\n                    if ($jsonData !== null) {\n                        $this->configuration_array = $jsonData;\n                    } else {\n                        $this->configuration_array = array();\n                    }\n                }\n                return $this->configuration_array;\n                break;\n\n            case 'name_support':\n                return $this->name_support = $this->nick;\n                break;\n\n            case 'has_photo':\n                return $this->filename != '';\n                break;\n\n            case 'photo_path':\n                $this->photo_path = ($this->filepath != '' ? erLhcoreClassSystem::getHost() . erLhcoreClassSystem::instance()->wwwDir() : erLhcoreClassSystem::instance()->wwwImagesDir() ) .'/'. $this->filepath . $this->filename;\n                return $this->photo_path;\n                break;\n\n            case 'file_path_server':\n                return $this->filepath . $this->filename;\n                break;\n\n            default:\n                break;\n        }\n    }\n    public function beforeRemove() {\n        $q = ezcDbInstance::get()->createDeleteQuery();\n\n        // Bot groups\n        $q->deleteFrom( 'lh_generic_bot_tr_item' )->where( $q->expr->eq( 'group_id', $this->id ) );\n        $stmt = $q->prepare();\n        $stmt->execute();\n\n        $this->removeFile();\n    }\n    public function removeFile()\n    {\n        if ($this->filename != '') {\n            if ( file_exists($this->filepath . $this->filename) ) {\n                unlink($this->filepath . $this->filename);\n            }\n\n            if ($this->filepath != '') {\n                erLhcoreClassFileUpload::removeRecursiveIfEmpty('var/bottrphoto/',str_replace('var/bottrphoto/','',$this->filepath));\n            }\n\n            erLhcoreClassChatEventDispatcher::getInstance()->dispatch('user.remove_photo', array('user' => & $this));\n\n            $this->filepath = '';\n            $this->filename = '';\n            $this->saveThis();\n        }\n    }\n\n    public function __toString()\n    {\n        return $this->name;\n    }\n\n    public $id = null;\n    public $name = '';\n    public $nick = '';\n    public $filepath = '';\n    public $filename = '';\n    public $configuration = '';\n}", "<?php\n\nclass erLhcoreClassModelUser {\n\n    use erLhcoreClassDBTrait;\n\n    public static $dbTable = 'lh_users';\n\n    public static $dbTableId = 'id';\n\n    public static $dbSessionHandler = 'erLhcoreClassUser::getSession';\n\n    public static $dbSortOrder = 'DESC';\n\n    public function getState()\n    {\n        return array(\n            'id' => $this->id,\n            'username' => $this->username,\n            'password' => $this->password,\n            'email' => $this->email,\n            'name' => $this->name,\n            'surname' => $this->surname,\n            'disabled' => $this->disabled,\n            'hide_online' => $this->hide_online,\n            'all_departments' => $this->all_departments,\n            'filepath' => $this->filepath,\n            'filename' => $this->filename,\n            'skype' => $this->skype,\n            'job_title' => $this->job_title,\n            'time_zone' => $this->time_zone,\n            'invisible_mode' => $this->invisible_mode,\n            'inactive_mode' => $this->inactive_mode,\n            'xmpp_username' => $this->xmpp_username,\n            'rec_per_req' => $this->rec_per_req,\n            'session_id' => $this->session_id,\n            'departments_ids' => $this->departments_ids,\n            'chat_nickname' => $this->chat_nickname,\n            'max_active_chats' => $this->max_active_chats,\n            'auto_accept' => $this->auto_accept,\n            'attr_int_1' => $this->attr_int_1,\n            'attr_int_2' => $this->attr_int_2,\n            'attr_int_3' => $this->attr_int_3,\n            'operation_admin' => $this->operation_admin,\n            'exclude_autoasign' => $this->exclude_autoasign,\n            'pswd_updated' => $this->pswd_updated,\n            'always_on' => $this->always_on,\n            'avatar' => $this->avatar,\n            'cache_version' => $this->cache_version,\n            'llogin' => $this->llogin,\n            'force_logout' => $this->force_logout,\n        );\n   }\n\n   public function setPassword($password)\n   {\n\t\t$hash = password_hash($password, PASSWORD_DEFAULT);\n       \n\t\tif ($hash) {\n\t\t\t$this->password = $hash;\n\t\t\t$this->pswd_updated = time();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n   }\n\n   public function __toString()\n   {\n   \t\treturn $this->username.' ('.$this->email.')';\n   }\n\n   public static function getUserCount($params = array())\n   {\n       return self::getCount($params);\n   }\n\n   public function beforeUpdate()\n   {\n       $this->cache_version = $this->cache_version + 1;\n   }\n\n    public function __get($param)\n   {\n       switch ($param) {\n\n       \tcase 'name_support':\n       \t\t\treturn $this->chat_nickname != '' ? trim($this->chat_nickname) : trim($this->name_official);\n\n       \tcase 'name_official':\n       \t\t\t$this->name_official = trim($this->name.' '.$this->surname);\n       \t\t\t$this->name_official = $this->name_official != '' ? $this->name_official : $this->chat_nickname;\n       \t\t\treturn $this->name_official;\n\n       \tcase 'user_groups_id':\n       \t\t   $userGroups = erLhcoreClassModelGroupUser::getList(array('filter' => array('user_id' => $this->id)));\n       \t\t   $this->user_groups_id = array();\n\n       \t\t   if (!empty($userGroups)) {\n       \t\t   \t\tforeach ($userGroups as $userGroup) {\n       \t\t   \t \t\t$this->user_groups_id[] = $userGroup->group_id;\n       \t\t   \t\t}\n       \t\t   }\n\n       \t\t   return $this->user_groups_id;\n\n       \tcase 'lastactivity':\n       \tcase 'lastd_activity':\n                $activityVar = array('lastactivity' => 'last_activity', 'lastd_activity' => 'lastd_activity');\n                $db = ezcDbInstance::get();\n                $stmt = $db->prepare('SELECT '. $activityVar[$param] .' FROM lh_userdep WHERE user_id = :user_id LIMIT 1');\n                $stmt->bindValue(':user_id',$this->id,PDO::PARAM_INT);\n                $stmt->execute();\n                $this->{$param} = (int)$stmt->fetchColumn();\n                return $this->{$param};\n\n       \tcase 'has_photo':\n       \t    \treturn $this->filename != '';\n\n       \tcase 'has_photo_avatar':\n       \t    \treturn $this->filename != '' || $this->avatar != '';\n\n       \tcase 'photo_path':\n       \t\t\t$this->photo_path = ($this->filepath != '' ? erLhcoreClassSystem::getHost() . erLhcoreClassSystem::instance()->wwwDir() : erLhcoreClassSystem::instance()->wwwImagesDir() ) .'/'. $this->filepath . $this->filename;\n       \t\t\treturn $this->photo_path;\n\n       \tcase 'file_path_server':\n       \t\t\treturn $this->filepath . $this->filename;\n\n       \tcase 'lastactivity_front':\n       \t\t   $this->lastactivity_front = '';\n\n       \t\t   if ( $this->lastactivity > 0 ) {\n       \t\t       $this->lastactivity_front = date(erLhcoreClassModule::$dateDateHourFormat);\n       \t\t   };\n\n       \t\t   return $this->lastactivity_front;\n\n       \tcase 'lastactivity_ago':\n       \tcase 'llogin_ago':\n               $var = str_replace('_ago','',$param);\n               if ($this->{$var} > 0) {\n                   $this->{$param} = erLhcoreClassChat::getAgoFormat($this->{$var});\n               } else {\n                   $this->{$param} = '';\n               }\n       \t\t   return $this->{$param};\n\n       \tdefault:\n       \t\tbreak;\n       }\n   }\n\n   public static function getUserList($paramsSearch = array())\n   {\n       return self::getList($paramsSearch);\n   }\n\n   public static function userExists($username)\n   {\n       return self::getCount(array('filter' => array('username' => $username))) > 0;\n   }\n\n   public static function fetchUserByEmail($email, $xmpp_username = false)\n   {\n       $db = ezcDbInstance::get();\n       $xmppAppend = $xmpp_username !== false ? ' OR xmpp_username = :xmpp_username' : '';       \n       $stmt = $db->prepare('SELECT id FROM lh_users WHERE email = :email'.$xmppAppend);\n       $stmt->bindValue( ':email',$email);\n       \n       if ($xmpp_username !== false) {\n       \t\t$stmt->bindValue( ':xmpp_username',$xmpp_username);       \t\t\n       }\n       \n       $stmt->execute();\n       $rows = $stmt->fetchAll();\n\n       if (isset($rows[0]['id'])) {\n            return $rows[0]['id'];\n       } else {\n            return false;\n       }\n   }\n\n   public function removeFile()\n   {   \t\t   \t\n\t   \tif ($this->filename != '') {\n\t   \t\tif ( file_exists($this->filepath . $this->filename) ) {\n\t   \t\t\tunlink($this->filepath . $this->filename);\n\t   \t\t}\n\n\t   \t\tif ($this->filepath != '') {\n\t   \t\t\terLhcoreClassFileUpload::removeRecursiveIfEmpty('var/userphoto/',str_replace('var/userphoto/','',$this->filepath));\n\t   \t\t}\n\t   \t\t\n\t   \t\terLhcoreClassChatEventDispatcher::getInstance()->dispatch('user.remove_photo', array('user' => & $this));\n\t   \t\t\n\t   \t\t$this->filepath = '';\n\t   \t\t$this->filename = '';\n\t   \t\t$this->saveThis();\n\t   \t}\n   }\n\n   public function setUserGroups() {\n   \t\t\n\t\terLhcoreClassModelGroupUser::removeUserFromGroups($this->id);\n\t\t\n\t\tforeach ($this->user_groups_id as $group_id) {\n\t\t\t$groupUser = new erLhcoreClassModelGroupUser();\n\t\t\t$groupUser->group_id = $group_id;\n\t\t\t$groupUser->user_id = $this->id;\n\t\t\t$groupUser->saveThis();\n\t\t}\n\t\t\n   \t}\n\n\n   \tpublic function hasAccessTo($module, $function) {\n        if ($this->accessArray === null) {\n            $this->accessArray = erLhcoreClassRole::accessArrayByUserID($this->id);\n        }\n\n        return erLhcoreClassRole::canUseByModuleAndFunction($this->accessArray, $module, $function);\n    }\n\n    private $accessArray = null;\n\n    public $id = null;\n    public $username = '';\n    public $password = '';\n    public $email = '';\n    public $name = '';\n    public $filepath = '';\n    public $filename = '';\n    public $surname = '';\n    public $job_title = '';\n    public $departments_ids = '';\n    public $skype = '';\n    public $xmpp_username = '';\n    public $disabled = 0;\n    public $hide_online = 0;\n    public $all_departments = 0;\n    public $invisible_mode = 0;\n    public $time_zone = '';\n    public $rec_per_req = '';\n    public $session_id = '';\n    public $chat_nickname = '';\n    public $operation_admin = '';\n    public $inactive_mode = 0;\n    public $max_active_chats = 0;\n    public $auto_accept = 0;\n    public $exclude_autoasign = 0;\n    public $pswd_updated = 0;\n    public $always_on = 0;\n    public $avatar = '';\n    public $cache_version = 0;\n    public $llogin = 0;\n    public $force_logout = 0;\n\n    public $attr_int_1 = 0;\n    public $attr_int_2 = 0;\n    public $attr_int_3 = 0;\n}\n\n?>", "<?php\r\nheader(\"Content-type: text/css\", true);\r\n\r\n/**\r\n * Refetches CSS as it was hosted on our server.\r\n * I can swear there is some bugs regarding relative CSS and base URL path.\r\n * This script is required if LHC is hosted on HTTPS but site itself is hosted on HTTP, because browser forbids downloading content from insecure site except images\r\n * themself\r\n * */\r\nif ($Params['user_parameters_unordered']['cobrowsemode'] == 'onlineuser'){\r\n    $ouser = erLhcoreClassModelChatOnlineUser::fetch($Params['user_parameters']['chat_id']);\r\n    $browse = erLhcoreClassCoBrowse::getBrowseInstanceByOnlineUser($ouser);\r\n} else {\r\n    $chat = erLhcoreClassChat::getSession()->load('erLhcoreClassModelChat', $Params['user_parameters']['chat_id']);\r\n    $browse = erLhcoreClassCoBrowse::getBrowseInstance($chat);\r\n}\r\n\r\n$base = trim($_GET['base']);\r\n\r\nif (!filter_var($base, FILTER_VALIDATE_URL)) {\r\n    exit;\r\n}\r\n\r\n$url = parse_url($base);\r\n\r\n// Only http/https supported\r\nif (!in_array($url['scheme'],['http','https']) || (isset($url['port']) && !in_array($url['port'],[80,443]))) {\r\n    exit;\r\n}\r\n\r\n// Some basic validation\r\nif (isset($url['host']) && $url['host'] != '' && strpos($_GET['css'], erLhcoreClassSystem::getHost()) === false) {\r\n\r\n    $urlCSS = parse_url($_GET['css']);\r\n\r\n    // Just our attempt to fix CSS, BaseURL, Relative path madness\r\n    if (! isset($urlCSS['host']) || $urlCSS['host'] == '') {\r\n        if (strpos($_GET['css'], '../') !== false) {            \r\n            $numberOfTime = substr_count($_GET['css'], '../');\r\n            $match = str_replace('../', '', $_GET['css']);  \r\n                      \r\n            $parts = explode('/', rtrim($_GET['base'],'/'));            \r\n            $imagePathToCss = array_slice($parts, 0, count($parts) - $numberOfTime);\r\n            \r\n            $urlCSSDownload = implode('/', $imagePathToCss) . $match;                      \r\n        } else {\r\n            $urlCSSDownload = $url['scheme'] . '://' . $url['host'] . '/' . ltrim($_GET['css'], '/');\r\n        }\r\n    } else {\r\n\r\n        if (!filter_var($_GET['css'], FILTER_VALIDATE_URL) || !in_array($urlCSS['scheme'],['http','https']) || (isset($urlCSS['port']) && !in_array($urlCSS['port'],[80,443]))) {\r\n            exit;\r\n        }\r\n\r\n        $urlCSSDownload = $_GET['css'];\r\n    }\r\n\r\n    $ch = curl_init();\r\n    curl_setopt($ch, CURLOPT_URL, $urlCSSDownload);\r\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 0);\r\n    curl_setopt($ch, CURLOPT_TIMEOUT, 5);\r\n    curl_setopt($ch, CURLOPT_REFERER, $_GET['base']);\r\n    curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.2) Gecko/20090729 Firefox/3.5.2 GTB5');\r\n    curl_setopt($ch, CURLOPT_HEADER, true);\r\n    $response = curl_exec($ch);\r\n\r\n    if (curl_errno($ch)) {   // should be 0\r\n        curl_close($ch);\r\n        exit;\r\n    }\r\n\r\n    $curl_info = curl_getinfo($ch);\r\n    $contentType = curl_getinfo($ch, CURLINFO_CONTENT_TYPE);\r\n    $header_size = $curl_info['header_size'];\r\n\r\n    $cssContent = substr($response, $header_size);\r\n\r\n    if ($contentType != 'text/css') {\r\n        exit;\r\n    }\r\n\r\n    if ($cssContent !== false) {        \r\n        if (preg_match_all(\"/url\\(\\s*[\\'|\\\"]?([A-Za-z0-9_\\-\\/\\.\\\\%?&#]+)[\\'|\\\"]?\\s*\\)/ix\", $cssContent, $urlMatches)) {\r\n            $urlMatches = array_unique($urlMatches[1]);\r\n            foreach ($urlMatches as $match) {\r\n                $match = str_replace('\\\\', '/', $match);\r\n                // Replace path if it is realtive\r\n                if (strpos($match, 'http') === false) {\r\n                    $appendMatch = '';\r\n                    $matchOriginal = $match;\r\n                    \r\n                    if (strpos($match, '?') !== false) {\r\n                        $matchParts = explode('?', $match);\r\n                        $match = $matchParts[0];\r\n                        $appendMatch = '?' . $matchParts[1];\r\n                    }\r\n                    \r\n                    // Fix relative path\r\n                    if (strpos($match, '../') !== false) {\r\n                        $numberOfTime = substr_count($match, '../');\r\n                        $match = str_replace('../', '', $match);\r\n                        \r\n                        $parts = explode('/', $_GET['css']);\r\n                        array_pop($parts);\r\n                        \r\n                        $imagePathToCss = array_slice($parts, 0, count($parts) - $numberOfTime);\r\n                        \r\n                        $cssContent = str_replace($matchOriginal, $url['scheme'] . '://' . str_replace('//', '/', $url['host'] . '/' . implode('/', $imagePathToCss) . '/' . $match . $appendMatch), $cssContent);\r\n                    } else { // Absolute path\r\n                        $cssContent = str_replace($matchOriginal, $url['scheme'] . '://' . str_replace('//', '/', $url['host'] . '/' . $match . $appendMatch), $cssContent);\r\n                    }\r\n                }\r\n            }\r\n        }        \r\n    }\r\n    echo $cssContent;\r\n}\r\n\r\nexit();\r\n?>", "<?php\r\n/**\r\n * php cron.php -s site_admin -c cron/test\r\n *\r\n * For various testing purposes\r\n *\r\n * */\r\n\r\necho erLhcoreClassBBCode::getHost();\r\n\r\n?>", "<?php\r\n\r\n$hash = (string)$Params['user_parameters']['hash'];\r\n$format = (string)$Params['user_parameters_unordered']['format'] == 'xml' ? 'xml' : 'json';\r\n\r\n$hashSecret = erLhcoreClassModelChatConfig::fetch('export_hash')->current_value;\r\n\r\ntry {\r\n\r\n    if (strlen($hashSecret) < 50) {\r\n        throw new Exception('Export hash to short!');\r\n    }\r\n\r\n\tif ( sha1('getchat'.$hashSecret) == $hash ) {\r\n\r\n\t\t$chat = erLhcoreClassModelChat::fetch((string)$Params['user_parameters']['chat_id']);\r\n\r\n\t\tif ($format =='json') {\r\n\t\t\t\theader('Content-type: application/json');\r\n\t\t\t\techo erLhcoreClassChatExport::chatExportJSON($chat);\r\n\t\t\texit;\r\n\t\t} else {\r\n\t\t\t\theader('Content-type: text/xml');\r\n\t\t\t\techo erLhcoreClassChatExport::chatExportXML($chat);\t\t\t\t\r\n\t\t\texit;\r\n\t\t}\r\n\r\n\t} else {\r\n\t\tthrow new Exception('Invalid hash.');\r\n\t}\r\n\r\n} catch (Exception $e) {\r\n\r\n\tif ($format =='json') {\r\n\t\theader('Content-type: application/json');\r\n\t\techo json_encode(array('error' => $e->getMessage()));\t\t\r\n\t\texit;\r\n\t} else {\r\n\t\theader('Content-type: text/xml');\r\n\t\techo '<?xml version=\"1.0\" encoding=\"utf-8\" ?>',\"<lhc><error><![CDATA[\".htmlspecialchars($e->getMessage()).\"]]></error></lhc>\";\t\r\n\t\texit;\r\n\t}\r\n}\r\n\r\nexit;\r\n\r\n?>", "<?php\r\n\r\n$hash = (string)$Params['user_parameters']['hash'];\r\n$format = (string)$Params['user_parameters_unordered']['format'] == 'xml' ? 'xml' : 'json';\r\n\r\n$hashSecret = erLhcoreClassModelChatConfig::fetch('export_hash')->current_value;\r\n\r\ntry {\r\n    \r\n    if (strlen($hashSecret) < 50) {\r\n        throw new Exception('Export hash to short!');\r\n    }\r\n\r\n\tif ( sha1('getcount'.$hashSecret) == $hash ) {\r\n\r\n\t\t$filter = array();\r\n\r\n\t\tif (is_array($Params['user_parameters_unordered']['status'])){\r\n\t\t\tforeach ($Params['user_parameters_unordered']['status'] as $status) {\r\n\t\t\t\t$filter['filterin']['status'][] = (int)$status;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$totalChats = erLhcoreClassChat::getCount($filter);\r\n\r\n\t\tif ($format =='json') {\r\n\t\t\theader('Content-type: application/json');\r\n\t\t\techo json_encode(array('count' => $totalChats));\t\t\t\r\n\t\t\texit;\r\n\t\t} else {\r\n\t\t\theader('Content-type: text/xml');\r\n\t\t\techo '<?xml version=\"1.0\" encoding=\"utf-8\" ?>',\"<lhc><count>{$totalChats}</count></lhc>\";\t\t\t\t  \r\n\t\t\texit;\r\n\t\t}\r\n\r\n\t} else {\r\n\t\tthrow new Exception('Invalid hash.');\r\n\t}\r\n\r\n} catch (Exception $e) {\r\n\r\n\tif ($format =='json') {\r\n\t\theader('Content-type: application/json');\r\n\t\techo json_encode(array('error' => $e->getMessage()));\r\n\t\texit;\r\n\t} else {\r\n\t\theader('Content-type: text/xml');\r\n\t\techo '<?xml version=\"1.0\" encoding=\"utf-8\" ?>',\"<lhc><error><![CDATA[\".htmlspecialchars($e->getMessage()).\"]]></error></lhc>\";\r\n\t\texit;\r\n\t}\r\n}\r\n\r\nexit;\r\n\r\n?>", "<?php\r\n\r\n$hash = (string)$Params['user_parameters']['hash'];\r\n$format = (string)$Params['user_parameters_unordered']['format'] == 'xml' ? 'xml' : 'json';\r\n\r\n$hashSecret = erLhcoreClassModelChatConfig::fetch('export_hash')->current_value;\r\n\r\ntry {\r\n    \r\n    if (strlen($hashSecret) < 50) {\r\n        throw new Exception('Export hash to short!');\r\n    }\r\n\r\n\tif ( sha1('getlist'.$hashSecret) == $hash ) {\r\n\r\n\t\t$filter = array();\r\n\r\n\t\tif (is_array($Params['user_parameters_unordered']['status'])){\r\n\t\t\tforeach ($Params['user_parameters_unordered']['status'] as $status) {\r\n\t\t\t\t$filter['filterin']['status'][] = (int)$status;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$totalChats = erLhcoreClassChat::getCount($filter);\r\n\r\n\t\t$pages = new lhPaginator();\r\n\t\t$pages->items_total = $totalChats;\r\n\t\t$pages->setItemsPerPage(is_numeric($Params['user_parameters_unordered']['limit']) ? (int)$Params['user_parameters_unordered']['limit'] : 100);\r\n\t\t$pages->paginate();\r\n\r\n\t\t$list = erLhcoreClassChat::getList(array_merge(array('offset' => $pages->low, 'limit' => $pages->items_per_page,'sort' => 'id DESC'),$filter));\r\n\r\n\t\tif ($format =='json') {\r\n\t\t\theader('Content-type: application/json');\r\n\t\t\techo json_encode(array('list' => array_keys($list)));\r\n\t\t\texit;\r\n\t\t} else {\r\n\t\t\theader('Content-type: text/xml');\r\n\t\t\techo '<?xml version=\"1.0\" encoding=\"utf-8\" ?><lhc>';\r\n\t\t\tforeach (array_keys($list) as $id) {\r\n\t\t\t\techo \"<item>{$id}</item>\";\r\n\t\t\t}\r\n\t\t\techo '</lhc>';\t\t\t\t  \r\n\t\t\texit;\r\n\t\t}\r\n\r\n\t} else {\r\n\t\tthrow new Exception('Invalid hash.');\r\n\t}\r\n\r\n} catch (Exception $e) {\r\n\r\n\tif ($format =='json') {\r\n\t\theader('Content-type: application/json');\r\n\t\techo json_encode(array('error' => $e->getMessage()));\t\t\r\n\t\texit;\r\n\t} else {\r\n\t\theader('Content-type: text/xml');\r\n\t\techo '<?xml version=\"1.0\" encoding=\"utf-8\" ?>',\"<lhc><error><![CDATA[\".htmlspecialchars($e->getMessage()).\"]]></error></lhc>\";\t\t\r\n\t\texit;\r\n\t}\r\n}\r\n\r\nexit;\r\n\r\n?>", "<?php\r\n\r\n$form = erLhAbstractModelForm::fetch((int)$Params['user_parameters']['form_id']);\r\n$items = erLhAbstractModelFormCollected::getList(array('filter' => array('form_id' => $form->id),'offset' => 0, 'limit' => 100000,'sort' => 'id ASC'));\r\n\r\ninclude 'lib/core/lhform/PHPExcel.php';\r\n\r\n$objPHPExcel = new PHPExcel();\r\n\r\n$objPHPExcel->setActiveSheetIndex(0);\r\n$objPHPExcel->getActiveSheet()->getStyle('A1:AW1')->getFont()->setBold(true);\r\n\r\n// Set width\r\nforeach ($form->xls_columns_data as $key => $data) {\r\n\tif (isset($data['width'])) {\r\n\t\t$objPHPExcel->getActiveSheet()->getColumnDimensionByColumn($key)->setWidth($data['width']);\r\n\t}\r\n}\r\n\r\n\r\n// Set header\r\n$i = 0;\r\nforeach ($form->xls_columns_data as $data) {\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, $data['name']);\r\n\t$i++;\r\n}\r\n\r\n$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('form/index','Date'));\r\n\r\n$i++;\r\n$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, 'IP');\r\n\r\n$i++;\r\n$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('form/index','Custom fields'));\r\n\r\n$i++;\r\n$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('form/index','Identifier'));\r\n\r\n// Set data\r\n$i = 2;\r\nforeach ($items as $item) {\t\r\n\t$y = 0;\r\n\tforeach ($form->xls_columns_data as $data) {\t\t\t\t\t\r\n\t\tif (isset($item->content_array[$data['attr_name']]['definition']['type']) && $item->content_array[$data['attr_name']]['definition']['type'] == 'file') {\t\t\t\r\n\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurldirect('user/login').'/(r)/'.rawurlencode(base64_encode('form/download/'.$item->id.'/'.$data['attr_name'])));\r\n\t\t} else {\r\n\t\t\tif (strpos($data['attr_name'], ',') === false){\r\n\t\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->content_array[$data['attr_name']]['value']);\r\n\t\t\t} else {\r\n\t\t\t\t$nameParts = explode(',', $data['attr_name']);\r\n\t\t\t\t$valuesPart = array();\r\n\t\t\t\tforeach ($nameParts as $part) {\r\n\t\t\t\t\t$valuesPart[] = isset($item->content_array[$part]['value']) ? $item->content_array[$part]['value'] : $part;\r\n\t\t\t\t}\r\n\t\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, implode('', $valuesPart));\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\t$y++;\r\n\t}\r\n\t\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->ctime_full_front);\r\n\r\n\t$y++;\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->ip);\r\n\r\n\t$y++;\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->custom_fields);\r\n\t\r\n\t$y++;\t\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->identifier);\r\n\t\r\n\t$i++;\t\t\r\n}\r\n\r\n$objPHPExcel->getActiveSheet()->setTitle('Report');\r\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\r\n\r\n// We'll be outputting an excel file\r\nheader('Content-type: application/vnd.ms-excel');\r\n\r\n// It will be called file.xls\r\nheader('Content-Disposition: attachment; filename=\"report.xlsx\"');\r\n\r\n// Write file to the browser\r\n$objWriter->save('php://output');\r\nexit;", "<?php\r\n\r\ntry {\r\n\t$item = erLhAbstractModelFormCollected::fetch((int)$Params['user_parameters']['collected_id']);\r\n\t\t\t\r\n\t$form = $item->form;\r\n\t\r\n\tinclude 'lib/core/lhform/PHPExcel.php';\r\n\r\n\r\n\t$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_to_phpTemp;\r\n\t$cacheSettings = array( 'memoryCacheSize ' => '64MB');\r\n\tPHPExcel_Settings::setCacheStorageMethod($cacheMethod, $cacheSettings);\r\n\r\n\t$objPHPExcel = new PHPExcel();\r\n\t\r\n\t$objPHPExcel->setActiveSheetIndex(0);\r\n\t$objPHPExcel->getActiveSheet()->getStyle('A1:AW1')->getFont()->setBold(true);\r\n\t\r\n\t// Set width\r\n\tforeach ($form->xls_columns_data as $key => $data) {\r\n\t\tif (isset($data['width'])) {\r\n\t\t\t$objPHPExcel->getActiveSheet()->getColumnDimensionByColumn($key)->setWidth($data['width']);\r\n\t\t}\r\n\t}\r\n\t\t\t\r\n\t// Set header\r\n\t$i = 0;\r\n\tforeach ($form->xls_columns_data as $data) {\r\n\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, $data['name']);\r\n\t\t$i++;\r\n\t}\r\n\t\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('form/index','Date'));\r\n\t$i++;\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, 'IP');\r\n\r\n\t$i++;\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('form/index','Custom fields'));\r\n\t\r\n\t$i++;\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($i, 1, erTranslationClassLhTranslation::getInstance()->getTranslation('form/index','Identifier'));\r\n\t\t\r\n\t// Set data\r\n\t$i = 2;\t\r\n\t$y = 0;\r\n\tforeach ($form->xls_columns_data as $data) {\r\n\t\tif (isset($item->content_array[$data['attr_name']]['definition']['type']) && $item->content_array[$data['attr_name']]['definition']['type'] == 'file') {\r\n\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurldirect('user/login').'/(r)/'.rawurlencode(base64_encode('form/download/'.$item->id.'/'.$data['attr_name'])));\r\n\t\t} else {\r\n\t\t\tif (strpos($data['attr_name'], ',') === false){\r\n\t\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->content_array[$data['attr_name']]['value']);\r\n\t\t\t} else {\r\n\t\t\t\t$nameParts = explode(',', $data['attr_name']);\r\n\t\t\t\t$valuesPart = array();\r\n\t\t\t\tforeach ($nameParts as $part) {\r\n\t\t\t\t\t$valuesPart[] = isset($item->content_array[$part]['value']) ? $item->content_array[$part]['value'] : $part;\r\n\t\t\t\t}\r\n\t\t\t\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, implode('', $valuesPart));\r\n\t\t\t}\r\n\t\t}\r\n\t\t$y++;\r\n\t}\r\n\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->ctime_full_front);\r\n\t$y++;\r\n\t\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->ip);\t\r\n\t$y++;\r\n\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->custom_fields);\r\n\t$y++;\r\n\r\n\t$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($y, $i, $item->identifier);\t\r\n\t$y++;\r\n\t\r\n\t$objPHPExcel->getActiveSheet()->setTitle('Report');\r\n\t$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\r\n\t\t\t\r\n\t$objWriter->save('var/storageform/'.$item->id.'-report.xlsx');\r\n\t\t\t\r\n\t$zip = new ZipArchive();\r\n\t$zip->open('var/storageform/'.$item->id.'-temp.zip',ZIPARCHIVE::CREATE | ZIPARCHIVE::OVERWRITE);\r\n\t$zip->addFile('var/storageform/'.$item->id.'-report.xlsx','report.xlsx');\r\n\t\t\t\r\n\tforeach ($item->content_array as $key => $content) {\r\n\t\tif ($content['definition']['type'] == 'file') {\t\t\t\t\r\n\t\t\t$array = explode('.',$content['value']['name']);\r\n\t\t\t$ext = end($array);\r\n\r\n\t\t\t$response = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('form.file.download', array('filename' => $content['filename']));\r\n\t\t\t\r\n\t\t\t// There was no callbacks or file not found etc, we try to download from standard location\r\n\t\t\tif ($response === false) {\r\n\t\t\t\t$zip->addFile( $content['filepath'] . $content['filename'],$key.'.'.$ext);\r\n\t\t\t} else {\r\n\t\t\t\t$zip->addFromString($key.'.'.$ext, $response['filedata']);\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\t\t\r\n\t} \r\n\r\n\t$zip->close();\r\n\t\t\t\r\n\theader(\"Content-type: application/octet-stream\");\r\n\theader(\"Content-Disposition: attachment; filename=\\\"export-{$item->id}.zip\\\"\");\r\n\techo file_get_contents('var/storageform/'.$item->id.'-temp.zip');\r\n\tunlink('var/storageform/'.$item->id.'-temp.zip');\r\n\tunlink('var/storageform/'.$item->id.'-report.xlsx');\r\n\texit;\r\n\r\n} catch (Exception $e) {\r\n\theader('Location: /');\r\n\texit;\r\n}\r\nexit;\r\n\r\n?>", "<?php\n\ntry {\n\n    $cfgSite = erConfigClassLhConfig::getInstance();\n\n    if ($cfgSite->getSetting( 'site', 'installed' ) == true)\n    {\n        $Params['module']['functions'] = array('install');\n        include_once('modules/lhkernel/nopermission.php');\n\n        $Result['pagelayout'] = 'install';\n        $Result['path'] = array(array('title' => 'Live helper chat installation'));\n        return $Result;\n\n        exit;\n    }\n\n    $instance = erLhcoreClassSystem::instance();\n\n    if ($instance->SiteAccess != 'site_admin') {\n        header('Location: ' .erLhcoreClassDesign::baseurldirect('site_admin/install/install') );\n        exit;\n    }\n\n    $tpl = new erLhcoreClassTemplate( 'lhinstall/install1.tpl.php');\n\n    switch ((int)$Params['user_parameters']['step_id']) {\n\n        case '1':\n            $Errors = array();\n            if (!is_writable(\"cache/cacheconfig\"))\n                $Errors[] = \"cache/cacheconfig is not writable\";\n\n            if (!is_writable(\"settings/\"))\n                $Errors[] = \"settings/ is not writable\";\n\n            if (!is_writable(\"cache/translations\"))\n                $Errors[] = \"cache/translations is not writable\";\n\n            if (!is_writable(\"cache/userinfo\"))\n                $Errors[] = \"cache/userinfo is not writable\";\n\n            if (!is_writable(\"cache/compiledtemplates\"))\n                $Errors[] = \"cache/compiledtemplates is not writable\";\n\n            if (!is_writable(\"var/storage\"))\n                $Errors[] = \"var/storage is not writable\";\n\n            if (!is_writable(\"var/storageform\"))\n                $Errors[] = \"var/storageform is not writable\";\n\n            if (!is_writable(\"var/userphoto\"))\n                $Errors[] = \"var/userphoto is not writable\";\n\n            if (!is_writable(\"var/tmpfiles\"))\n                $Errors[] = \"var/tmpfiles is not writable\";\n\n            if (!is_writable(\"var/storagetheme\"))\n                $Errors[] = \"var/storagetheme is not writable\";\n\n            if (!is_writable(\"var/botphoto\"))\n                $Errors[] = \"var/botphoto is not writable\";\n\n            if (!is_writable(\"var/bottrphoto\"))\n                $Errors[] = \"var/bottrphoto is not writable\";\n\n            if (!is_writable(\"var/storageinvitation\"))\n                $Errors[] = \"var/storageinvitation is not writable\";\n\n            if (!is_writable(\"var/storageadmintheme\"))\n                $Errors[] = \"var/storageadmintheme is not writable\";\n\n            if (!extension_loaded ('pdo_mysql' ))\n                $Errors[] = \"php-pdo extension not detected. Please install php extension\";\n\n            if (!extension_loaded('curl'))\n                $Errors[] = \"php_curl extension not detected. Please install php extension\";\n\n            if (!extension_loaded('mbstring'))\n                $Errors[] = \"mbstring extension not detected. Please install php extension\";\n\n            if (!extension_loaded('gd'))\n                $Errors[] = \"gd extension not detected. Please install php extension\";\n\n            if (!function_exists('json_encode'))\n                $Errors[] = \"json support not detected. Please install php extension\";\n\n            if (!function_exists('simplexml_load_string'))\n                $Errors[] = \"XML support not detected. Please install php-xml extension\";\n\n            if (version_compare(PHP_VERSION, '5.4.0','<')) {\n                $Errors[] = \"Minimum 5.4.0 PHP version is required\";\n            }\n\n            if (count($Errors) == 0){\n                $tpl->setFile('lhinstall/install2.tpl.php');\n            }\n            break;\n\n        case '2':\n            $Errors = array();\n\n            $definition = array(\n                'DatabaseUsername' => new ezcInputFormDefinitionElement(\n                    ezcInputFormDefinitionElement::REQUIRED, 'unsafe_raw'\n                ),\n                'DatabasePassword' => new ezcInputFormDefinitionElement(\n                    ezcInputFormDefinitionElement::REQUIRED, 'unsafe_raw'\n                ),\n                'DatabaseHost' => new ezcInputFormDefinitionElement(\n                    ezcInputFormDefinitionElement::REQUIRED, 'string'\n                ),\n                'DatabasePort' => new ezcInputFormDefinitionElement(\n                    ezcInputFormDefinitionElement::REQUIRED, 'int'\n                ),\n                'DatabaseDatabaseName' => new ezcInputFormDefinitionElement(\n                    ezcInputFormDefinitionElement::REQUIRED, 'string'\n                ),\n            );\n\n            $form = new ezcInputForm( INPUT_POST, $definition );\n\n\n            if ( !$form->hasValidData( 'DatabaseUsername' ) )\n            {\n                $Errors[] = 'Please enter database username';\n            }\n\n            if ( !$form->hasValidData( 'DatabasePassword' ) )\n            {\n                $Errors[] = 'Please enter database password';\n            }\n\n            if ( !$form->hasValidData( 'DatabaseHost' ) || $form->DatabaseHost == '' )\n            {\n                $Errors[] = 'Please enter database host';\n            }\n\n            if ( !$form->hasValidData( 'DatabasePort' ) || $form->DatabasePort == '' )\n            {\n                $Errors[] = 'Please enter database post';\n            }\n\n            if ( !$form->hasValidData( 'DatabaseDatabaseName' ) || $form->DatabaseDatabaseName == '' )\n            {\n                $Errors[] = 'Please enter database name';\n            }\n\n            if (count($Errors) == 0)\n            {\n                try {\n                    $db = ezcDbFactory::create( \"mysql://{$form->DatabaseUsername}:{$form->DatabasePassword}@{$form->DatabaseHost}:{$form->DatabasePort}/{$form->DatabaseDatabaseName}\" );\n                } catch (Exception $e) {\n                    $Errors[] = 'Cannot login with provided logins. Returned message: <br/>'.$e->getMessage();\n                }\n            }\n\n            if (count($Errors) == 0){\n\n                $cfgSite = erConfigClassLhConfig::getInstance();\n                $cfgSite->setSetting( 'db', 'host', $form->DatabaseHost);\n                $cfgSite->setSetting( 'db', 'user', $form->DatabaseUsername);\n                $cfgSite->setSetting( 'db', 'password', $form->DatabasePassword);\n                $cfgSite->setSetting( 'db', 'database', $form->DatabaseDatabaseName);\n                $cfgSite->setSetting( 'db', 'port', $form->DatabasePort);\n                $cfgSite->setSetting( 'site', 'secrethash', (!empty(getenv('LHC_SECRET_HASH')) ? getenv('LHC_SECRET_HASH') : erLhcoreClassChat::generateHash(80)));\n                $cfgSite->save();\n\n                $tpl->setFile('lhinstall/install3.tpl.php');\n            } else {\n\n                $tpl->set('db_username',$form->DatabaseUsername);\n                $tpl->set('db_password',$form->DatabasePassword);\n                $tpl->set('db_host',$form->DatabaseHost);\n                $tpl->set('db_port',$form->DatabasePort);\n                $tpl->set('db_name',$form->DatabaseDatabaseName);\n\n                $tpl->set('errors',$Errors);\n                $tpl->setFile('lhinstall/install2.tpl.php');\n            }\n            break;\n\n        case '3':\n\n            $Errors = array();\n\n            if ($_SERVER['REQUEST_METHOD'] == 'POST')\n            {\n                $definition = array(\n                    'AdminUsername' => new ezcInputFormDefinitionElement(\n                        ezcInputFormDefinitionElement::REQUIRED, 'unsafe_raw'\n                    ),\n                    'AdminPassword' => new ezcInputFormDefinitionElement(\n                        ezcInputFormDefinitionElement::REQUIRED, 'unsafe_raw'\n                    ),\n                    'AdminPassword1' => new ezcInputFormDefinitionElement(\n                        ezcInputFormDefinitionElement::REQUIRED, 'unsafe_raw'\n                    ),\n                    'AdminEmail' => new ezcInputFormDefinitionElement(\n                        ezcInputFormDefinitionElement::REQUIRED, 'validate_email'\n                    ),\n                    'AdminName' => new ezcInputFormDefinitionElement(\n                        ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\n                    ),\n                    'AdminSurname' => new ezcInputFormDefinitionElement(\n                        ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\n                    ),\n                    'DefaultDepartament' => new ezcInputFormDefinitionElement(\n                        ezcInputFormDefinitionElement::REQUIRED, 'string'\n                    )\n                );\n\n                $form = new ezcInputForm( INPUT_POST, $definition );\n\n\n                if ( !$form->hasValidData( 'AdminUsername' ) || $form->AdminUsername == '')\n                {\n                    $Errors[] = 'Please enter admin username';\n                }\n\n                if ($form->hasValidData( 'AdminUsername' ) && $form->AdminUsername != '' && strlen($form->AdminUsername) > 40)\n                {\n                    $Errors[] = 'Maximum 40 characters for admin username';\n                }\n\n                if ( !$form->hasValidData( 'AdminPassword' ) || $form->AdminPassword == '')\n                {\n                    $Errors[] = 'Please enter admin password';\n                }\n\n                if ($form->hasValidData( 'AdminPassword' ) && $form->AdminPassword != '' && strlen($form->AdminPassword) > 40)\n                {\n                    $Errors[] = 'Maximum 40 characters for admin password';\n                }\n\n                if ($form->hasValidData( 'AdminPassword' ) && $form->AdminPassword != '' && strlen($form->AdminPassword) <= 40 && $form->AdminPassword1 != $form->AdminPassword)\n                {\n                    $Errors[] = 'Passwords missmatch';\n                }\n\n\n                if ( !$form->hasValidData( 'AdminEmail' ) )\n                {\n                    $Errors[] = 'Wrong email address';\n                }\n\n\n                if ( !$form->hasValidData( 'DefaultDepartament' ) || $form->DefaultDepartament == '')\n                {\n                    $Errors[] = 'Please enter default department name';\n                }\n\n                if (count($Errors) == 0) {\n\n                    $tpl->set('admin_username',$form->AdminUsername);\n                    $adminEmail = '';\n                    if ( $form->hasValidData( 'AdminEmail' ) ) {\n                        $tpl->set('admin_email',$form->AdminEmail);\n                        $adminEmail = $form->AdminEmail;\n                    }\n                    $tpl->set('admin_name',$form->AdminName);\n                    $tpl->set('admin_surname',$form->AdminSurname);\n                    $tpl->set('admin_departament',$form->DefaultDepartament);\n\n                    /*DATABASE TABLES SETUP*/\n                    $db = ezcDbInstance::get();\n\n                    try {\n                        $db->query(\"set global innodb_large_prefix = 1\");\n                    } catch (Exception $e) {\n                        // Just ignore if not succeed\n                    }\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat` (\n\t\t\t\t  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `nick` varchar(100) NOT NULL,\n\t\t\t\t  `status` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `status_sub` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `status_sub_sub` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `time` int(11) NOT NULL,\n\t\t\t\t  `user_id` int(11) NOT NULL,\n\t\t\t\t  `hash` varchar(40) NOT NULL,\n\t\t\t\t  `referrer` text NOT NULL,\n        \t   \t  `session_referrer` text NOT NULL,\n        \t   \t  `chat_variables` text NOT NULL,\n        \t   \t  `remarks` text NOT NULL,\n\t\t\t\t  `ip` varchar(100) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\t\t\t\t \n\t\t\t\t  `invitation_id` int(11) NOT NULL,\t\t\t\t \n\t\t\t\t  `sender_user_id` int(11) NOT NULL,\n\t\t\t\t  `product_id` int(11) NOT NULL,\n\t\t\t\t  `pnd_time` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `cls_time` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `usaccept` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `user_status` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `user_closed_ts` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `support_informed` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `unread_messages_informed` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `reinform_timeout` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `last_op_msg_time` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `has_unread_op_messages` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `unread_op_messages_informed` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `email` varchar(100) NOT NULL,\n\t\t\t\t  `country_code` varchar(100) NOT NULL,\n\t\t\t\t  `country_name` varchar(100) NOT NULL,\n\t\t\t\t  `unanswered_chat` int(11) NOT NULL,\n\t\t\t\t  `cls_us` tinyint(1) NOT NULL DEFAULT '0',\n\t\t\t\t  `anonymized` tinyint(1) NOT NULL,\n\t\t\t\t  `user_typing` int(11) NOT NULL,\n\t\t\t\t  `gbot_id` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `user_typing_txt` varchar(200) NOT NULL,\n\t\t\t\t  `operator_typing` int(11) NOT NULL,\n        \t   \t  `operator_typing_id` int(11) NOT NULL,\n\t\t\t\t  `phone` varchar(100) NOT NULL,\n\t\t\t\t  `has_unread_messages` int(11) NOT NULL,\n\t\t\t\t  `last_user_msg_time` int(11) NOT NULL,\n\t\t\t\t  `fbst` tinyint(1) NOT NULL,\n\t\t\t\t  `online_user_id` int(11) NOT NULL,\n\t\t\t\t  `auto_responder_id` int(11) NOT NULL,\n\t\t\t\t  `last_msg_id` int(11) NOT NULL,\n\t\t\t\t  `lsync` int(11) NOT NULL,\n\t\t\t\t  `transfer_uid` int(11) NOT NULL,\n\t\t\t\t  `additional_data` text NOT NULL,\t\t\t\t  \n\t\t\t\t  `user_tz_identifier` varchar(50) NOT NULL,\n\t\t\t\t  `lat` varchar(10) NOT NULL,\n\t\t\t\t  `lon` varchar(10) NOT NULL,\n\t\t\t\t  `city` varchar(100) NOT NULL,\n\t\t\t\t  `operation` text NOT NULL,\n\t\t\t\t  `operation_admin` varchar(200) NOT NULL,\n\t\t\t\t  `status_sub_arg` varchar(200) NOT NULL,\n\t\t\t\t  `uagent` varchar(250) NOT NULL,\n\t\t\t\t  `chat_locale` varchar(10) NOT NULL,\n\t\t\t\t  `chat_locale_to` varchar(10) NOT NULL,\n\t\t\t\t  `mail_send` int(11) NOT NULL,\n        \t   \t  `screenshot_id` int(11) NOT NULL,\n        \t   \t  `wait_time` int(11) NOT NULL,\n  \t\t\t\t  `chat_duration` int(11) NOT NULL,\n  \t\t\t\t  `tslasign` int(11) NOT NULL,\n        \t   \t  `priority` int(11) NOT NULL,\n        \t   \t  `chat_initiator` int(11) NOT NULL,\n        \t   \t  `transfer_timeout_ts` int(11) NOT NULL,\n        \t   \t  `transfer_timeout_ac` int(11) NOT NULL,\n        \t   \t  `transfer_if_na` int(11) NOT NULL,\n        \t   \t  `na_cb_executed` int(11) NOT NULL,\n        \t   \t  `device_type` int(11) NOT NULL,\n        \t   \t  `nc_cb_executed` tinyint(1) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `status_user_id` (`status`,`user_id`),\n\t\t\t\t  KEY `unanswered_chat` (`unanswered_chat`),\n\t\t\t\t  KEY `online_user_id` (`online_user_id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `product_id` (`product_id`),\n\t\t\t\t  KEY `unread_operator` (`has_unread_op_messages`,`unread_op_messages_informed`),\n\t\t\t\t  KEY `user_id_sender_user_id` (`user_id`,`sender_user_id`),\n\t\t\t\t  KEY `sender_user_id` (`sender_user_id`),\n\t\t\t\t  KEY `anonymized` (`anonymized`),\n\t\t\t\t  KEY `has_unread_messages` (`has_unread_messages`),\n\t\t\t\t  KEY `status` (`status`),\n\t\t\t\t  KEY `nick` (`nick`),\n\t\t\t\t  KEY `email` (`email`),\n\t\t\t\t  KEY `phone` (`phone`),\n\t\t\t\t  KEY `dep_id_status` (`dep_id`,`status`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n               $db->query(\"CREATE TABLE `lh_chat_blocked_user` (\n                  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `ip` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `user_id` bigint(20) unsigned NOT NULL,\n                  `datets` bigint(20) unsigned NOT NULL,\n                  `chat_id` bigint(20) unsigned NOT NULL,\n                  `dep_id` bigint(20) unsigned NOT NULL,\n                  `nick` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `btype` tinyint(1) NOT NULL DEFAULT 0,\n                  `expires` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  `online_user_id` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  PRIMARY KEY (`id`),\n                  KEY `ip` (`ip`),\n                  KEY `nick` (`nick`),\n                  KEY `online_user_id` (`online_user_id`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_users_online_session` ( \n        \t       `id` bigint(20) NOT NULL AUTO_INCREMENT, \n        \t       `user_id` int(11) NOT NULL, \n        \t       `time` int(11) NOT NULL, \n        \t       `duration` int(11) NOT NULL, \n        \t       `lactivity` int(11) NOT NULL, \n        \t       PRIMARY KEY (`id`), \n        \t       KEY `user_id_lactivity` (`user_id`, `lactivity`), KEY `lactivity` (`lactivity`) ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_chat_start_settings` ( \n        \t       `id` int(11) NOT NULL AUTO_INCREMENT, \n        \t       `name` varchar(50) NOT NULL, \n        \t       `data` longtext NOT NULL, \n        \t       `department_id` int(11) NOT NULL, \n        \t       PRIMARY KEY (`id`), \n        \t       KEY `department_id` (`department_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_chat_event_track` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL, `data` longtext NOT NULL, `department_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `department_id` (`department_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_archive_range` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `range_from` int(11) NOT NULL,\n        \t   `range_to` int(11) NOT NULL,\n        \t   `year_month` int(11) NOT NULL,\n        \t   `older_than` int(11) NOT NULL,\n        \t   `last_id` int(11) NOT NULL,\n        \t   `first_id` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_notification_subscriber` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `online_user_id` bigint(20) NOT NULL, `dep_id` int(11) NOT NULL, `theme_id` int(11) NOT NULL, `ctime` int(11) NOT NULL, `utime` int(11) NOT NULL, `status` int(11) NOT NULL, `params` text NOT NULL, `device_type` tinyint(1) NOT NULL,`subscriber_hash` varchar(50) NOT NULL, `uagent` varchar(250) NOT NULL, `ip` varchar(250) NOT NULL, `last_error` text NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`), KEY `dep_id` (`dep_id`), KEY `online_user_id` (`online_user_id`), KEY `subscriber_hash` (`subscriber_hash`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_auto_responder` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `siteaccess` varchar(3) NOT NULL,\n                  `wait_message` text NOT NULL,\n                  `wait_timeout` int(11) NOT NULL,\n                  `position` int(11) NOT NULL,\n                  `timeout_message` text NOT NULL,\n                  `bot_configuration` text NOT NULL,\n                  `name` varchar(50) NOT NULL,\n                  `operator` varchar(50) NOT NULL,\n                  `dep_id` int(11) NOT NULL,\n                  `user_id` int(11) NOT NULL,\n                  `only_proactive` int(11) NOT NULL,\n                  `repeat_number` int(11) NOT NULL DEFAULT '1',\n                  `survey_timeout` int(11) NOT NULL DEFAULT '0',\n                  `survey_id` int(11) NOT NULL DEFAULT '0',\n                  `wait_timeout_hold_1` int(11) NOT NULL,\n                  `wait_timeout_hold_2` int(11) NOT NULL,\n                  `wait_timeout_hold_3` int(11) NOT NULL,\n                  `wait_timeout_hold_4` int(11) NOT NULL,\n                  `wait_timeout_hold_5` int(11) NOT NULL,\n                  `timeout_hold_message_1` text NOT NULL,\n                  `timeout_hold_message_2` text NOT NULL,\n                  `timeout_hold_message_3` text NOT NULL,\n                  `timeout_hold_message_4` text NOT NULL,\n                  `timeout_hold_message_5` text NOT NULL,\n                  `wait_timeout_hold` text NOT NULL,\n                  `wait_timeout_2` int(11) NOT NULL,\n                  `timeout_message_2` text NOT NULL,\n                  `wait_timeout_3` int(11) NOT NULL,\n                  `timeout_message_3` text NOT NULL,\n                  `wait_timeout_4` int(11) NOT NULL,\n                  `timeout_message_4` text NOT NULL,\n                  `wait_timeout_5` int(11) NOT NULL,\n                  `timeout_message_5` text NOT NULL,\n                  `wait_timeout_reply_1` int(11) NOT NULL,\n                  `timeout_reply_message_1` text NOT NULL,\n                  `wait_timeout_reply_2` int(11) NOT NULL,\n                  `timeout_reply_message_2` text NOT NULL,\n                  `wait_timeout_reply_3` int(11) NOT NULL,\n                  `timeout_reply_message_3` text NOT NULL,\n                  `wait_timeout_reply_4` int(11) NOT NULL,\n                  `timeout_reply_message_4` text NOT NULL,\n                  `wait_timeout_reply_5` int(11) NOT NULL,\n                  `timeout_reply_message_5` text NOT NULL,\n                  `languages` text NOT NULL,\n                  `ignore_pa_chat` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `siteaccess_position` (`siteaccess`,`position`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_widget_theme` (\n                      `id` int(11) NOT NULL AUTO_INCREMENT,\n                      `name` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `name_company` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `onl_bcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `bor_bcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'e3e3e3',\n                      `text_color` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `online_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `online_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `offline_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `offline_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `logo_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `logo_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `header_background` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_tcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_bcolor` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_border` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_close_bg` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_hover_bg` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_close_hover_bg` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `custom_status_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `custom_container_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `custom_widget_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_header` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `need_help_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `online_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `offline_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `widget_border_color` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `copyright_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `copyright_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `widget_copyright_url` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `show_copyright` int(11) NOT NULL DEFAULT 1,\n                      `explain_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `intro_operator_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `operator_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `operator_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `minimize_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `minimize_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `restore_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `restore_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `close_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `close_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `popup_image` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `popup_image_path` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `hide_close` int(11) NOT NULL,\n                      `hide_popup` int(11) NOT NULL,\n                      `header_height` int(11) NOT NULL,\n                      `header_padding` int(11) NOT NULL,\n                      `widget_border_width` int(11) NOT NULL,\n                      `support_joined` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `support_closed` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `pending_join` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `noonline_operators` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `noonline_operators_offline` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `show_need_help` int(11) NOT NULL DEFAULT 1,\n                      `show_need_help_timeout` int(11) NOT NULL DEFAULT 24,\n                      `show_voting` tinyint(1) NOT NULL DEFAULT 1,\n                      `department_title` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `department_select` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `buble_visitor_background` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `buble_visitor_title_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `buble_visitor_text_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `buble_operator_background` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `buble_operator_title_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `buble_operator_text_color` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `custom_popup_css` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `hide_ts` int(11) NOT NULL,\n                      `widget_response_width` int(11) NOT NULL,\n                      `show_need_help_delay` int(11) NOT NULL,\n                      `show_status_delay` int(11) NOT NULL,\n                      `modern_look` tinyint(1) NOT NULL DEFAULT 0,\n                      `bot_status_text` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `bot_configuration` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `notification_configuration` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `pending_join_queue` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `modified` int(11) NOT NULL,\n                      `widget_show_leave_form` tinyint(1) NOT NULL,\n                      `enable_widget_embed_override` tinyint(1) NOT NULL,\n                      `widget_popheight` int(11) NOT NULL,\n                      `widget_popwidth` int(11) NOT NULL,\n                      `widget_survey` int(11) NOT NULL,\n                      `widget_position` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `widget_pright` int(11) NOT NULL,\n                      `widget_pbottom` int(11) NOT NULL,\n                      `alias` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      PRIMARY KEY (`id`),\n                      KEY `alias` (`alias`)\n                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_faq` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `question` varchar(250) NOT NULL,\n\t\t\t\t  `answer` text NOT NULL,\n\t\t\t\t  `url` varchar(250) NOT NULL,\n\t\t\t\t  `email` varchar(50) NOT NULL,\n\t\t\t\t  `identifier` varchar(10) NOT NULL,\n\t\t\t\t  `active` int(11) NOT NULL,\n\t\t\t\t  `has_url` tinyint(1) NOT NULL,\n\t\t\t\t  `is_wildcard` tinyint(1) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `active` (`active`),\n\t\t\t\t  KEY `active_url_2` (`active`,`url`(191)),\n\t\t\t\t  KEY `has_url` (`has_url`),\n\t\t\t\t  KEY `identifier` (`identifier`),\n\t\t\t\t  KEY `is_wildcard` (`is_wildcard`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                    $db->query(\"CREATE TABLE `lh_group_chat` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `name` varchar(50) NOT NULL,\n  `status` int(11) NOT NULL,\n  `time` int(11) NOT NULL,\n  `user_id` int(11) NOT NULL,\n  `chat_id` bigint(20) NOT NULL DEFAULT 0,\n  `last_msg_op_id` bigint(20) NOT NULL,\n  `last_msg` varchar(200) NOT NULL,\n  `last_user_msg_time` int(11) NOT NULL,\n  `last_msg_id` bigint(20) NOT NULL,\n  `type` tinyint(1) NOT NULL DEFAULT 0,\n  `tm` int(11) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `user_id` (`user_id`),\n  KEY `chat_id` (`chat_id`),\n  KEY `type` (`type`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_group_msg` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `msg` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n  `time` int(11) NOT NULL,\n  `chat_id` int(11) NOT NULL DEFAULT 0,\n  `user_id` int(11) NOT NULL DEFAULT 0,\n  `name_support` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `meta_msg` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `chat_id_id` (`chat_id`,`id`),\n  KEY `user_id` (`user_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_group_chat_member` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `user_id` bigint(20) NOT NULL,\n  `group_id` bigint(20) NOT NULL,\n  `last_activity` int(11) NOT NULL,\n  `last_msg_id` bigint(20) NOT NULL DEFAULT 0,\n  `type` tinyint(1) NOT NULL DEFAULT 0,\n  `jtime` int(11) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `group_id` (`group_id`),\n  KEY `user_id` (`user_id`),\n  KEY `type` (`type`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_cobrowse` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `chat_id` int(11) NOT NULL,\n        \t   `online_user_id` int(11) NOT NULL,\n        \t   `mtime` int(11) NOT NULL,\n        \t   `url` varchar(250) NOT NULL,\n        \t   `initialize` longtext NOT NULL,\n        \t   `modifications` longtext NOT NULL,\n        \t   `finished` tinyint(1) NOT NULL,\n        \t   `w` int NOT NULL,\n\t\t\t   `wh` int NOT NULL,\n\t\t\t   `x` int NOT NULL,\n\t\t\t   `y` int NOT NULL,        \t   \t\t\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `chat_id` (`chat_id`),\n        \t   KEY `online_user_id` (`online_user_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_survey` (\n        \t      `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `name` varchar(250) NOT NULL,\n                  `feedback_text` text NOT NULL,\n                  `max_stars_1_title` varchar(250) NOT NULL,\n                  `max_stars_1_pos` int(11) NOT NULL,\n                  `max_stars_2_title` varchar(250) NOT NULL,\n                  `max_stars_2_pos` int(11) NOT NULL,\n                  `max_stars_2` int(11) NOT NULL,\n                  `max_stars_3_title` varchar(250) NOT NULL,\n                  `max_stars_3_pos` int(11) NOT NULL,\n                  `max_stars_3` int(11) NOT NULL,\n                  `max_stars_4_title` varchar(250) NOT NULL,\n                  `max_stars_4_pos` int(11) NOT NULL,\n                  `max_stars_4` int(11) NOT NULL,\n                  `max_stars_5_title` varchar(250) NOT NULL,\n                  `max_stars_5_pos` int(11) NOT NULL,\n                  `max_stars_5` int(11) NOT NULL,\n                  `question_options_1` varchar(250) NOT NULL,\n                  `question_options_1_items` text NOT NULL,\n                  `question_options_1_pos` int(11) NOT NULL,\n                  `question_options_2` varchar(250) NOT NULL,\n                  `question_options_2_items` text NOT NULL,\n                  `question_options_2_pos` int(11) NOT NULL,\n                  `question_options_3` varchar(250) NOT NULL,\n                  `question_options_3_items` text NOT NULL,\n                  `question_options_3_pos` int(11) NOT NULL,\n                  `question_options_4` varchar(250) NOT NULL,\n                  `question_options_4_items` text NOT NULL,\n                  `question_options_4_pos` int(11) NOT NULL,\n                  `question_options_5` varchar(250) NOT NULL,\n                  `question_options_5_items` text NOT NULL,\n                  `question_options_5_pos` int(11) NOT NULL,\n                  `question_plain_1` text NOT NULL,\n                  `question_plain_1_pos` int(11) NOT NULL,\n                  `question_plain_2` text NOT NULL,\n                  `question_plain_2_pos` int(11) NOT NULL,\n                  `question_plain_3` text NOT NULL,\n                  `question_plain_3_pos` int(11) NOT NULL,\n                  `question_plain_4` text NOT NULL,\n                  `question_plain_4_pos` int(11) NOT NULL,\n                  `question_plain_5` text NOT NULL,\n                  `question_plain_5_pos` int(11) NOT NULL,\n                  `max_stars_1_enabled` int(11) NOT NULL,\n                  `max_stars_2_enabled` int(11) NOT NULL,\n                  `max_stars_3_enabled` int(11) NOT NULL,\n                  `max_stars_4_enabled` int(11) NOT NULL,\n                  `max_stars_5_enabled` int(11) NOT NULL,\n                  `question_options_1_enabled` int(11) NOT NULL,\n                  `question_options_2_enabled` int(11) NOT NULL,\n                  `question_options_3_enabled` int(11) NOT NULL,\n                  `question_options_4_enabled` int(11) NOT NULL,\n                  `question_options_5_enabled` int(11) NOT NULL,\n                  `question_plain_1_enabled` int(11) NOT NULL,\n                  `question_plain_2_enabled` int(11) NOT NULL,\n                  `question_plain_3_enabled` int(11) NOT NULL,\n                  `question_plain_4_enabled` int(11) NOT NULL,\n                  `question_plain_5_enabled` int(11) NOT NULL,\n                  `max_stars_1` int(11) NOT NULL,\n                  `max_stars_1_req` int(11) NOT NULL,\n                  `max_stars_2_req` int(11) NOT NULL,\n                  `max_stars_3_req` int(11) NOT NULL,\n                  `max_stars_4_req` int(11) NOT NULL,\n                  `max_stars_5_req` int(11) NOT NULL,\n                  `question_options_1_req` int(11) NOT NULL,\n                  `question_options_2_req` int(11) NOT NULL,\n                  `question_options_3_req` int(11) NOT NULL,\n                  `question_options_4_req` int(11) NOT NULL,\n                  `question_options_5_req` int(11) NOT NULL,\n                  `question_plain_1_req` int(11) NOT NULL,\n                  `question_plain_2_req` int(11) NOT NULL,\n                  `question_plain_3_req` int(11) NOT NULL,\n                  `question_plain_4_req` int(11) NOT NULL,\n                  `question_plain_5_req` int(11) NOT NULL,\n                  `configuration` longtext NOT NULL,\n                  PRIMARY KEY (`id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n                    $db->query(\"CREATE TABLE `lh_admin_theme` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `name` varchar(100) NOT NULL,\n        \t       `static_content` longtext NOT NULL,\n        \t       `static_js_content` longtext NOT NULL,\n        \t       `static_css_content` longtext NOT NULL,\n        \t       `css_attributes` longtext NOT NULL,\n        \t       `header_content` text NOT NULL,\n        \t       `user_id` int(11) NOT NULL, \n        \t       `header_css` text NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `user_id` (`user_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n                    $db->query(\"CREATE TABLE `lh_chat_paid` ( \n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,  \n        \t       `hash` varchar(250) NOT NULL,  \n        \t       `chat_id` int(11) NOT NULL, \n        \t        PRIMARY KEY (`id`),  \n        \t       KEY `hash` (`hash`(191)),  \n        \t       KEY `chat_id` (`chat_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_survey_item` (\n        \t      `id` bigint(20) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `survey_id` int(11) NOT NULL,\n\t\t\t\t  `status` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `chat_id` int(11) NOT NULL,\n\t\t\t\t  `user_id` int(11) NOT NULL,\n\t\t\t\t  `ftime` int(11) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `max_stars_1` int(11) NOT NULL,\n\t\t\t\t  `max_stars_2` int(11) NOT NULL,\n\t\t\t\t  `max_stars_3` int(11) NOT NULL,\n\t\t\t\t  `max_stars_4` int(11) NOT NULL,\n\t\t\t\t  `max_stars_5` int(11) NOT NULL,\n\t\t\t\t  `question_options_1` int(11) NOT NULL,\n\t\t\t\t  `question_options_2` int(11) NOT NULL,\n\t\t\t\t  `question_options_3` int(11) NOT NULL,\n\t\t\t\t  `question_options_4` int(11) NOT NULL,\n\t\t\t\t  `question_options_5` int(11) NOT NULL,\n\t\t\t\t  `question_plain_1` text NOT NULL,\n\t\t\t\t  `question_plain_2` text NOT NULL,\n\t\t\t\t  `question_plain_3` text NOT NULL,\n\t\t\t\t  `question_plain_4` text NOT NULL,\n\t\t\t\t  `question_plain_5` text NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `survey_id` (`survey_id`),\n\t\t\t\t  KEY `chat_id` (`chat_id`),\n\t\t\t\t  KEY `user_id` (`user_id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `ftime` (`ftime`),\n\t\t\t\t  KEY `max_stars_1` (`max_stars_1`),\n\t\t\t\t  KEY `max_stars_2` (`max_stars_2`),\n\t\t\t\t  KEY `max_stars_3` (`max_stars_3`),\n\t\t\t\t  KEY `max_stars_4` (`max_stars_4`),\n\t\t\t\t  KEY `max_stars_5` (`max_stars_5`),\n\t\t\t\t  KEY `question_options_1` (`question_options_1`),\n\t\t\t\t  KEY `question_options_2` (`question_options_2`),\n\t\t\t\t  KEY `question_options_3` (`question_options_3`),\n\t\t\t\t  KEY `question_options_4` (`question_options_4`),\n\t\t\t\t  KEY `question_options_5` (`question_options_5`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_speech_language` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `name` varchar(100) NOT NULL,\n                  `siteaccess` varchar(3) NOT NULL DEFAULT '',\n                  PRIMARY KEY (`id`)\n               ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_speech_language_dialect` (\n                `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `language_id` int(11) NOT NULL,\n                  `lang_name` varchar(100) NOT NULL,\n                  `lang_code` varchar(100) NOT NULL,\n                  `short_code` varchar(4) NOT NULL DEFAULT '',\n                  PRIMARY KEY (`id`),\n                  KEY `language_id` (`language_id`),\n                  KEY `short_code` (`short_code`),\n                  KEY `lang_code` (`lang_code`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"INSERT INTO `lh_speech_language` (`id`, `name`, `siteaccess`) VALUES\n\t\t\t\t(1,\t'Afrikaans',''),\n\t\t\t\t(2,\t'Bahasa Indonesia',''),\n\t\t\t\t(3,\t'Bahasa Melayu',''),\n\t\t\t\t(4,\t'Catal\u00e0',''),\n\t\t\t\t(5,\t'\u010ce\u0161tina','cse'),\n\t\t\t\t(6,\t'Deutsch','ger'),\n\t\t\t\t(7,\t'English',''),\n\t\t\t\t(8,\t'Espa\u00f1ol','esp'),\n\t\t\t\t(9,\t'Euskara',''),\n\t\t\t\t(10,\t'Fran\u00e7ais','fre'),\n\t\t\t\t(11,\t'Galego',''),\n\t\t\t\t(12,\t'Hrvatski',''),\n\t\t\t\t(13,\t'IsiZulu',''),\n\t\t\t\t(14,\t'\u00cdslenska',''),\n\t\t\t\t(15,\t'Italiano','ita'),\n\t\t\t\t(16,\t'Magyar',''),\n\t\t\t\t(17,\t'Nederlands','nld'),\n\t\t\t\t(18,\t'Norsk bokm\u00e5l',''),\n\t\t\t\t(19,\t'Polski','pol'),\n\t\t\t\t(20,\t'Portugu\u00eas','por'),\n\t\t\t\t(21,\t'Rom\u00e2n\u0103',''),\n\t\t\t\t(22,\t'Sloven\u010dina','svk'),\n\t\t\t\t(23,\t'Suomi','fin'),\n\t\t\t\t(24,\t'Svenska',''),\n\t\t\t\t(25,\t'T\u00fcrk\u00e7e','tur'),\n\t\t\t\t(26,\t'\u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438',''),\n\t\t\t\t(27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439','rus'),\n\t\t\t\t(28,\t'\u0421\u0440\u043f\u0441\u043a\u0438',''),\n\t\t\t\t(29,\t'\ud55c\uad6d\uc5b4',''),\n\t\t\t\t(30,\t'\u4e2d\u6587',''),\n\t\t\t\t(31,\t'\u65e5\u672c\u8a9e',''),\n\t\t\t\t(32,\t'Lingua lat\u012bna',''),\n\t\t\t\t(33,\t'Lithuanian','lit'),\n\t\t\t\t(34,\t'Latvia',''),\n\t\t\t\t(35,\t'Afar',''),\n\t\t\t\t(36,\t'Arabic',''),\n\t\t\t\t(37,\t'Assamese',''),\n\t\t\t\t(38,\t'Azerbaijani',''),\n\t\t\t\t(39,\t'Bulgarian','bgr'),\n\t\t\t\t(40,\t'Bangla',''),\n\t\t\t\t(41,\t'Bosnian',''),\n\t\t\t\t(42,\t'Cakchiquel',''),\n\t\t\t\t(43,\t'Danish',''),\n\t\t\t\t(44,\t'Greek',''),\n\t\t\t\t(45,\t'Estonian',''),\n\t\t\t\t(46,\t'Persian',''),\n\t\t\t\t(47,\t'Filipino',''),\n\t\t\t\t(48,\t'Gujarati',''),\n\t\t\t\t(49,\t'Hebrew',''),\n\t\t\t\t(50,\t'Croatian',''),\n\t\t\t\t(51,\t'Indonesia',''),\n\t\t\t\t(52,\t'Icelandic',''),\n\t\t\t\t(53,\t'Georgian',''),\n\t\t\t\t(54,\t'Maori (New Zealand)',''),\n\t\t\t\t(55,\t'Macedonian',''),\n\t\t\t\t(56,\t'Malay (Latin)',''),\n\t\t\t\t(57,\t'Maltese',''),\n\t\t\t\t(58,\t'Norwegian Nynorsk',''),\n\t\t\t\t(59,\t'Norwegian','nor'),\n\t\t\t\t(60,\t'Northern Sotho (South Africa)',''),\n\t\t\t\t(61,\t'Slovenian',''),\n\t\t\t\t(63,\t'Thai',''),\n\t\t\t\t(64,\t'Tagalog',''),\n\t\t\t\t(65,\t'Tongan',''),\n\t\t\t\t(66,\t'Ukrainian',''),\n\t\t\t\t(67,\t'Vietnamese','vnm'),\n\t\t\t\t(68,\t'Chinese','chn');\");\n\n                    $db->query(\"INSERT INTO `lh_speech_language_dialect` (`id`, `language_id`, `lang_name`, `lang_code`, `short_code`) VALUES\n(1,\t1,\t'Afrikaans',\t'af-ZA',\t'af'),\n(2,\t2,\t'Bahasa Indonesia',\t'id-ID',\t'id'),\n(3,\t3,\t'Bahasa Melayu',\t'ms-MY',\t''),\n(4,\t4,\t'Catal\u00e0',\t'ca-ES',\t''),\n(5,\t5,\t'\u010ce\u0161tina',\t'cs-CZ',\t'cs'),\n(6,\t6,\t'Deutsch',\t'de-DE',\t'de'),\n(7,\t7,\t'Australia',\t'en-AU',\t''),\n(8,\t7,\t'Canada',\t'en-CA',\t''),\n(9,\t7,\t'India',\t'en-IN',\t''),\n(10,\t7,\t'New Zealand',\t'en-NZ',\t''),\n(11,\t7,\t'South Africa',\t'en-ZA',\t''),\n(12,\t7,\t'United Kingdom',\t'en-GB',\t'en'),\n(13,\t7,\t'United States',\t'en-US',\t''),\n(14,\t8,\t'Argentina',\t'es-AR',\t''),\n(15,\t8,\t'Bolivia',\t'es-BO',\t''),\n(16,\t8,\t'Chile',\t'es-CL',\t''),\n(17,\t8,\t'Colombia',\t'es-CO',\t''),\n(18,\t8,\t'Costa Rica',\t'es-CR',\t''),\n(19,\t8,\t'Ecuador',\t'es-EC',\t''),\n(20,\t8,\t'El Salvador',\t'es-SV',\t''),\n(21,\t8,\t'Espa\u00f1a',\t'es-ES',\t'es'),\n(22,\t8,\t'Estados Unidos',\t'es-US',\t''),\n(23,\t8,\t'Guatemala',\t'es-GT',\t''),\n(24,\t8,\t'Honduras',\t'es-HN',\t''),\n(25,\t8,\t'M\u00e9xico',\t'es-MX',\t''),\n(26,\t8,\t'Nicaragua',\t'es-NI',\t''),\n(27,\t8,\t'Panam\u00e1',\t'es-PA',\t''),\n(28,\t8,\t'Paraguay',\t'es-PY',\t''),\n(29,\t8,\t'Per\u00fa',\t'es-PE',\t''),\n(30,\t8,\t'Puerto Rico',\t'es-PR',\t''),\n(31,\t8,\t'Rep\u00fablica Dominicana',\t'es-DO',\t''),\n(32,\t8,\t'Uruguay',\t'es-UY',\t''),\n(33,\t8,\t'Venezuela',\t'es-VE',\t''),\n(34,\t9,\t'Euskara',\t'eu-ES',\t''),\n(35,\t10,\t'Fran\u00e7ais',\t'fr-FR',\t'fr'),\n(36,\t11,\t'Galego',\t'gl-ES',\t''),\n(37,\t12,\t'Hrvatski',\t'hr_HR',\t''),\n(38,\t13,\t'IsiZulu',\t'zu-ZA',\t''),\n(39,\t14,\t'\u00cdslenska',\t'is-IS',\t''),\n(40,\t15,\t'Italia',\t'it-IT',\t'it'),\n(41,\t15,\t'Svizzera',\t'it-CH',\t'it'),\n(42,\t16,\t'Magyar',\t'hu-HU',\t'hu'),\n(43,\t17,\t'Nederlands',\t'nl-NL',\t'nl'),\n(44,\t18,\t'Norsk bokm\u00e5l',\t'nb-NO',\t'nb'),\n(45,\t19,\t'Polski',\t'pl-PL',\t'pl'),\n(46,\t20,\t'Brasil',\t'pt-BR',\t''),\n(47,\t20,\t'Portugal',\t'pt-PT',\t'pt'),\n(48,\t21,\t'Rom\u00e2n\u0103',\t'ro-RO',\t'ro'),\n(49,\t22,\t'Sloven\u010dina',\t'sk-SK',\t'sk'),\n(50,\t23,\t'Suomi',\t'fi-FI',\t'fi'),\n(51,\t24,\t'Swedish',\t'sv-SE',\t'sv'),\n(52,\t25,\t'T\u00fcrk\u00e7e',\t'tr-TR',\t'tr'),\n(53,\t26,\t'\u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438',\t'bg-BG',\t''),\n(54,\t27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439',\t'ru-RU',\t'ru'),\n(55,\t28,\t'Serbian',\t'sr-RS',\t'sr'),\n(56,\t29,\t'\ud55c\uad6d\uc5b4',\t'ko-KR',\t'ko'),\n(57,\t30,\t'\u666e\u901a\u8bdd (\u4e2d\u56fd\u5927\u9646)',\t'cmn-Hans-CN',\t''),\n(58,\t30,\t'\u666e\u901a\u8bdd (\u9999\u6e2f)',\t'cmn-Hans-HK',\t''),\n(59,\t30,\t'\u4e2d\u6587 (\u53f0\u7063)',\t'cmn-Hant-TW',\t''),\n(60,\t30,\t'\u7cb5\u8a9e (\u9999\u6e2f)',\t'yue-Hant-HK',\t''),\n(61,\t31,\t'\u65e5\u672c\u8a9e',\t'ja-JP',\t'ja'),\n(62,\t32,\t'Lingua lat\u012bna',\t'la',\t''),\n(64,\t33,\t'Lithuanian',\t'lt-LT',\t'lt'),\n(65,\t34,\t'Latvia',\t'lv-LV',\t'lv'),\n(66,\t35,\t'Afar',\t'aa-DJ',\t'aa'),\n(67,\t36,\t'Egypt',\t'ar-EG',\t'ar'),\n(68,\t37,\t'India',\t'as-IN',\t'as'),\n(69,\t38,\t'Azerbaijani',\t'az-AZ',\t'az'),\n(70,\t39,\t'Bulgarian',\t'bg',\t'bg'),\n(71,\t40,\t'Bangla',\t'bn',\t'bn'),\n(72,\t41,\t'Bosnian',\t'bs-BA',\t'bs'),\n(73,\t42,\t'Cakchiquel',\t'cak',\t'cak'),\n(74,\t43,\t'Danish',\t'da-dk',\t'da'),\n(75,\t44,\t'Greek',\t'el-GR',\t'el'),\n(76,\t45,\t'Estonian',\t'et-EE',\t'et'),\n(77,\t46,\t'Persian',\t'fa-IR',\t'fa'),\n(78,\t47,\t'Filipino',\t'fil',\t'fil'),\n(79,\t48,\t'Gujarati',\t'gu-IN',\t'gu'),\n(80,\t49,\t'Hebrew',\t'he',\t'he'),\n(81,\t50,\t'Croatian',\t'hr-HR',\t'hr'),\n(82,\t51,\t'Indonesia',\t'in',\t'in'),\n(83,\t52,\t'Icelandic',\t'is',\t'is'),\n(84,\t53,\t'Georgian',\t'ka-ge',\t'ka'),\n(85,\t54,\t'Maori (New Zealand)',\t'mi-nz',\t'mi'),\n(86,\t55,\t'Macedonian',\t'mk-MK',\t'mk'),\n(87,\t56,\t'Malay (Latin)',\t'ms',\t'ms'),\n(88,\t57,\t'Maltese',\t'mt',\t'mt'),\n(89,\t58,\t'Norwegian Nynorsk',\t'nn-NO',\t'nn'),\n(90,\t59,\t'Norwegian',\t'no',\t'no'),\n(91,\t60,\t'Northern Sotho (South Africa)',\t'nso-za',\t'nso'),\n(92,\t61,\t'Slovenian',\t'sl-SI',\t'sl'),\n(94,\t63,\t'Thai',\t'th-TH',\t'th'),\n(95,\t64,\t'Tagalog',\t'tl',\t'tl'),\n(96,\t65,\t'Tongan',\t'to-TO',\t'to'),\n(97,\t66,\t'Ukrainian',\t'uk-UA',\t'uk'),\n(98,\t67,\t'Vietnamese',\t'vi-VN',\t'vi'),\n(99,\t68,\t'Chinese',\t'zh-CN',\t'zh'),\n(100,\t36,\t'Egypt',\t'ar-AE',\t''),\n(101,\t36,\t'Egypt',\t'ar-IQ',\t''),\n(102,\t41,\t'Bosnian',\t'bs-Latn-BA',\t''),\n(103,\t6,\t'Deutsch',\t'de-at',\t''),\n(104,\t6,\t'Deutsch',\t'de-ch',\t''),\n(105,\t6,\t'Deutsch',\t'de-GB',\t''),\n(106,\t6,\t'Deutsch',\t'de-LI',\t''),\n(107,\t6,\t'Deutsch',\t'de-LU',\t''),\n(108,\t7,\t'United Kingdom',\t'en-029',\t''),\n(109,\t7,\t'United Kingdom',\t'en-AS',\t''),\n(110,\t7,\t'United Kingdom',\t'en-BE',\t''),\n(111,\t7,\t'United Kingdom',\t'en-BM',\t''),\n(112,\t7,\t'United Kingdom',\t'en-BS',\t''),\n(113,\t7,\t'United Kingdom',\t'en-BW',\t''),\n(114,\t7,\t'United Kingdom',\t'en-CH',\t''),\n(115,\t7,\t'United Kingdom',\t'en-CX',\t''),\n(116,\t7,\t'United Kingdom',\t'en-CY',\t''),\n(117,\t7,\t'United Kingdom',\t'en-DE',\t''),\n(118,\t7,\t'United Kingdom',\t'en-DK',\t''),\n(119,\t7,\t'United Kingdom',\t'en-DM',\t''),\n(120,\t7,\t'United Kingdom',\t'en-GY',\t''),\n(121,\t7,\t'United Kingdom',\t'en-HK',\t''),\n(122,\t7,\t'United Kingdom',\t'en-ie',\t''),\n(123,\t7,\t'United Kingdom',\t'en-IM',\t''),\n(124,\t7,\t'United Kingdom',\t'en-JM',\t''),\n(125,\t7,\t'United Kingdom',\t'en-KY',\t''),\n(126,\t7,\t'United Kingdom',\t'en-MY',\t''),\n(127,\t7,\t'United Kingdom',\t'en-NF',\t''),\n(128,\t7,\t'United Kingdom',\t'en-NG',\t''),\n(129,\t7,\t'United Kingdom',\t'en-NL',\t''),\n(130,\t7,\t'United Kingdom',\t'en-PH',\t''),\n(131,\t7,\t'United Kingdom',\t'en-SE',\t''),\n(132,\t7,\t'United Kingdom',\t'en-sg',\t''),\n(133,\t7,\t'United Kingdom',\t'en-SI',\t''),\n(134,\t7,\t'United Kingdom',\t'en-SS',\t''),\n(135,\t7,\t'United Kingdom',\t'en-TO',\t''),\n(136,\t7,\t'United Kingdom',\t'en-TZ',\t''),\n(137,\t7,\t'United Kingdom',\t'en-UG',\t''),\n(138,\t7,\t'United Kingdom',\t'en-UK',\t''),\n(139,\t7,\t'United Kingdom',\t'en-ZG',\t''),\n(140,\t7,\t'United Kingdom',\t'en-ZM',\t''),\n(141,\t7,\t'United Kingdom',\t'en-ZW',\t''),\n(142,\t8,\t'Espa\u00f1a',\t'es-419',\t''),\n(143,\t8,\t'Espa\u00f1a',\t'es-xl',\t''),\n(144,\t47,\t'Filipino',\t'fil-PH',\t''),\n(145,\t10,\t'Fran\u00e7ais',\t'fr-BE',\t''),\n(146,\t10,\t'Fran\u00e7ais',\t'fr-ca',\t''),\n(147,\t10,\t'Fran\u00e7ais',\t'fr-ch',\t''),\n(148,\t10,\t'Fran\u00e7ais',\t'fr-CM',\t''),\n(149,\t10,\t'Fran\u00e7ais',\t'fr-MC',\t''),\n(150,\t49,\t'Hebrew',\t'he-IL',\t''),\n(151,\t50,\t'Croatian',\t'hr-BA',\t''),\n(152,\t17,\t'Nederlands',\t'nl-BE',\t''),\n(153,\t19,\t'Polski',\t'pl-GB',\t''),\n(154,\t27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439',\t'ru-KZ',\t''),\n(155,\t27,\t'P\u0443\u0441\u0441\u043a\u0438\u0439',\t'ru-UA',\t''),\n(156,\t28,\t'Serbian',\t'sr-BA',\t''),\n(157,\t28,\t'Serbian',\t'sr-Latn-RS',\t''),\n(158,\t68,\t'Chinese',\t'zh-MO',\t''),\n(159,\t68,\t'Chinese',\t'zh-SG',\t''),\n(160,\t68,\t'Chinese',\t'zh-TW',\t'');\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_speech_chat_language` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `chat_id` int(11) NOT NULL,\n                  `language_id` int(11) NOT NULL,\n                  `dialect` varchar(50) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `chat_id` (`chat_id`)\n               ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_chat_alert_icon` (`id` bigint(20) NOT NULL AUTO_INCREMENT,`name` varchar(50) NOT NULL, `identifier` varchar(50) NOT NULL,PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_file` (\n        \t   `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n        \t   `name` varchar(255) NOT NULL,\n        \t   `upload_name` varchar(255) NOT NULL,\n        \t   `size` int(11) NOT NULL,\n        \t   `type` varchar(255) NOT NULL,\n        \t   `file_path` varchar(255) NOT NULL,\n        \t   `extension` varchar(255) NOT NULL,\n        \t   `chat_id` bigint(20) NOT NULL,\n        \t   `persistent` int(11) NOT NULL,\n        \t   `online_user_id` int(11) NOT NULL,\n        \t   `user_id` int(11) NOT NULL,\n        \t   `date` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `chat_id` (`chat_id`),\n        \t   KEY `online_user_id` (`online_user_id`),\n        \t   KEY `user_id` (`user_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_email_template` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `name` varchar(250) NOT NULL,\n\t\t\t\t  `from_name` varchar(150) NOT NULL,\n\t\t\t\t  `from_name_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `from_email` varchar(150) NOT NULL,\n\t\t\t\t  `from_email_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `user_mail_as_sender` tinyint(4) NOT NULL,\n                  `use_chat_locale` tinyint(1) NOT NULL DEFAULT '0',\n\t\t\t\t  `content` text NOT NULL,\n                  `translations` longtext NOT NULL,\n\t\t\t\t  `subject` varchar(250) NOT NULL,\n\t\t\t\t  `bcc_recipients` varchar(200) NOT NULL,\n\t\t\t\t  `subject_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `reply_to` varchar(150) NOT NULL,\n\t\t\t\t  `reply_to_ac` tinyint(4) NOT NULL,\n\t\t\t\t  `recipient` varchar(150) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"INSERT INTO `lh_abstract_email_template` (`id`, `translations`, `name`, `from_name`, `from_name_ac`, `from_email`, `from_email_ac`, `content`, `subject`, `subject_ac`, `reply_to`, `reply_to_ac`, `recipient`, `bcc_recipients`, `user_mail_as_sender`) VALUES\n            \t   (1,'',\t'Send mail to user',\t'Live Helper Chat',\t0,\t'',\t0,\t'Dear {user_chat_nick},\\r\\n\\r\\n{additional_message}\\r\\n\\r\\nLive Support response:\\r\\n{messages_content}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team\\r\\n',\t'{name_surname} has responded to your request',\t1,\t'',\t1,\t'',\t'',\t0),\n            \t   (2,'',\t'Support request from user',\t'',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nAdditional data, if any:\\r\\n{additional_data}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nLink to chat if any:\\r\\n{prefillchat}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'{name}, {country}, {department}, Support request from user',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (3,'',\t'User mail for himself',\t'Live Helper Chat',\t0,\t'',\t0,\t'Dear {user_chat_nick},\\r\\n\\r\\nTranscript:\\r\\n{messages_content}\\r\\nChat ID: {chat_id}\\n\\r\\nSincerely,\\r\\nLive Support Team\\r\\n',\t'Chat transcript',\t0,\t'',\t0,\t'',\t'',\t0),\n            \t   (4,'',\t'New chat request',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nClick to accept chat automatically\\r\\n{url_accept}\\r\\n\\r\\nSurvey\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'New chat request',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (5,'',\t'Chat was closed',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\n{operator} has closed a chat\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nAdditional data, if any:\\r\\n{additional_data}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nSurvey:\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Chat was closed',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (6,'',\t'New FAQ question',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nNew FAQ question\\r\\nEmail: {email}\\r\\n\\r\\nQuestion:\\r\\n{question}\\r\\n\\r\\nQuestion URL:\\r\\n{url_question}\\r\\n\\r\\nURL to answer a question:\\r\\n{url_request}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'New FAQ question',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (7,'',\t'New unread message',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nClick to accept chat automatically\\r\\n{url_accept}\\r\\n\\r\\nSurvey:\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'New unread message',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (8,'',\t'Filled form',\t'MCFC',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nUser has filled a form\\r\\nForm name - {form_name}\\r\\nUser IP - {ip}\\r\\nDownload filled data - {url_download}\\r\\nView filled data - {url_view}\\r\\n\\r\\n{content}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Filled form - {form_name}',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (9,'',\t'Chat was accepted',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nOperator {user_name} has accepted a chat [{chat_id}]\\r\\n\\r\\nUser request data:\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nMessage:\\r\\n{message}\\r\\n\\r\\nURL of page from which user has send request:\\r\\n{url_request}\\r\\n\\r\\nClick to accept chat automatically\\r\\n{url_accept}\\r\\n\\r\\nSurvey:\\r\\n{survey}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Chat was accepted [{chat_id}]',\t0,\t'',\t0,\t'{$adminEmail}',\t'',\t0),\n            \t   (10,'',\t'Permission request',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nOperator {user} has requested these permissions\\n\\r\\n{permissions}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Permission request from {user}',\t0,\t'',\t0,\t'',\t'',\t0),\n            \t   (11,'',\t'You have unread messages',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nOperator {operator} has answered to you\\r\\n\\r\\n{messages}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Operator has answered to your request',\t0,\t'',\t0,\t'',\t'',\t0),\n            \t   (12,'',\t'Visitor returned',\t'Live Helper Chat',\t0,\t'',\t0,\t'Hello,\\r\\n\\r\\nVisitor information\\r\\nName: {name}\\r\\nEmail: {email}\\r\\nPhone: {phone}\\r\\nDepartment: {department}\\r\\nCountry: {country}\\r\\nCity: {city}\\r\\nIP: {ip}\\r\\nCreated:\t{created}\\r\\nUser left:\t{user_left}\\r\\nWaited:\t{waited}\\r\\nChat duration:\t{chat_duration}\\r\\n\\r\\nSee more information at\\r\\n{url_accept}\\r\\n\\r\\nLast chat:\\r\\n{message}\\r\\n\\r\\nAdditional data, if any:\\r\\n{additional_data}\\r\\n\\r\\nSincerely,\\r\\nLive Support Team',\t'Visitor returned - {username}',\t0,\t'',\t0,\t'',\t'',\t0);\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `question` varchar(250) NOT NULL,\n        \t   `location` varchar(250) NOT NULL,\n        \t   `active` int(11) NOT NULL,\n        \t   `priority` int(11) NOT NULL,\n        \t   `is_voting` int(11) NOT NULL,\n        \t   `question_intro` text NOT NULL,\n        \t   `revote` int(11) NOT NULL DEFAULT '0',\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `priority` (`priority`),\n        \t   KEY `active_priority` (`active`,`priority`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question_answer` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `ip` bigint(20) NOT NULL,\n        \t   `question_id` int(11) NOT NULL,\n        \t   `answer` text NOT NULL,\n        \t   `ctime` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `ip` (`ip`),\n        \t   KEY `question_id` (`question_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question_option` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `question_id` int(11) NOT NULL,\n        \t   `option_name` varchar(250) NOT NULL,\n        \t   `priority` tinyint(4) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `question_id` (`question_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                $db->query(\"CREATE TABLE `lh_chat_action` (\n                `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `chat_id` bigint(20) NOT NULL,\n                  `action` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `body` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `created_at` bigint(20) unsigned NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `chat_id` (`chat_id`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n               $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_stats` (\n                  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n                  `type` int(11) NOT NULL,\n                  `lupdate` bigint(20) NOT NULL,\n                  `object_id` bigint(20) NOT NULL,\n                  `stats` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `type_object_id` (`type`,`object_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_question_option_answer` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `question_id` int(11) NOT NULL,\n        \t   `option_id` int(11) NOT NULL,\n        \t   `ctime` int(11) NOT NULL,\n        \t   `ip` bigint(20) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `question_id` (`question_id`),\n        \t   KEY `ip` (`ip`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_voice_video` (\n                   `id` bigint(20) NOT NULL AUTO_INCREMENT,\n                   `chat_id` bigint(20) NOT NULL,\n                   `user_id` bigint(20) NOT NULL,\n                   `op_status` tinyint(4) NOT NULL,\n                   `vi_status` tinyint(4) NOT NULL,\n                   `voice` tinyint(4) NOT NULL,\n                   `video` tinyint(4) NOT NULL,\n                   `screen_share` tinyint(4) NOT NULL,\n                   `status` tinyint(4) NOT NULL,\n                   `ctime` int(11) NOT NULL,\n                   `token` varchar(200) NOT NULL,\n                   PRIMARY KEY (`id`),\n                   KEY `chat_id` (`chat_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_product` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT, \n        \t       `name` varchar(250) NOT NULL, \n        \t       `disabled` int(11) NOT NULL, \n        \t       `priority` int(11) NOT NULL, \n        \t       `departament_id` int(11) NOT NULL, \n        \t       KEY `departament_id` (`departament_id`), \n        \t       PRIMARY KEY (`id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_browse_offer_invitation` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `siteaccess` varchar(10) NOT NULL,\n\t\t\t\t  `time_on_site` int(11) NOT NULL,\n\t\t\t\t  `content` longtext NOT NULL,\n\t\t\t\t  `callback_content` longtext NOT NULL,\n\t\t\t\t  `lhc_iframe_content` tinyint(4) NOT NULL,\n\t\t\t\t  `custom_iframe_url` varchar(250) NOT NULL,\n\t\t\t\t  `name` varchar(250) NOT NULL,\n\t\t\t\t  `identifier` varchar(50) NOT NULL,\n\t\t\t\t  `executed_times` int(11) NOT NULL,\n\t\t\t\t  `url` varchar(250) NOT NULL,\n\t\t\t\t  `active` int(11) NOT NULL,\n\t\t\t\t  `has_url` int(11) NOT NULL,\n\t\t\t\t  `is_wildcard` int(11) NOT NULL,\n\t\t\t\t  `referrer` varchar(250) NOT NULL,\n\t\t\t\t  `priority` varchar(250) NOT NULL,\n\t\t\t\t  `hash` varchar(40) NOT NULL,\n\t\t\t\t  `width` int(11) NOT NULL,\n\t\t\t\t  `height` int(11) NOT NULL,\n\t\t\t\t  `unit` varchar(10) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `active` (`active`),\n\t\t\t\t  KEY `identifier` (`identifier`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_form` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `name` varchar(100) NOT NULL,        \t   \n        \t   `content` longtext NOT NULL,\n        \t   `recipient` varchar(250) NOT NULL,\n        \t   `active` int(11) NOT NULL,\n        \t   `name_attr` varchar(250) NOT NULL,\n        \t   `intro_attr` varchar(250) NOT NULL,\n        \t   `xls_columns` text NOT NULL,\n        \t   `pagelayout` varchar(200) NOT NULL,\n        \t   `post_content` text NOT NULL,\n        \t   PRIMARY KEY (`id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_form_collected` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `form_id` int(11) NOT NULL,\n\t\t\t\t  `ctime` int(11) NOT NULL,\n\t\t\t\t  `ip` varchar(250) NOT NULL,\n        \t   \t  `identifier` varchar(250) NOT NULL,\n        \t   \t  `chat_id` bigint(20) NOT NULL,\n\t\t\t\t  `content` longtext NOT NULL,\n\t\t\t\t  `custom_fields` longtext NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `form_id` (`form_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chatbox` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `identifier` varchar(50) NOT NULL,\n\t\t\t\t  `name` varchar(100) NOT NULL,\n\t\t\t\t  `chat_id` int(11) NOT NULL,\n\t\t\t\t  `active` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `identifier` (`identifier`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_canned_msg` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `msg` longtext NOT NULL,\n                  `fallback_msg` text NOT NULL,\n                  `title` varchar(250) NOT NULL,\n                  `explain` varchar(250) NOT NULL,\n                  `languages` text NOT NULL,\n                  `additional_data` text NOT NULL,\n        \t   \t  `position` int(11) NOT NULL,\n        \t   \t  `department_id` int(11) NOT NULL,\n        \t   \t  `user_id` int(11) NOT NULL,\n  \t\t\t\t  `delay` int(11) NOT NULL,\n        \t   \t  `auto_send` tinyint(1) NOT NULL,\n        \t   \t  `html_snippet` longtext NOT NULL,\n        \t   \t  `attr_int_1` int(11) NOT NULL,\n        \t   \t  `attr_int_2` int(11) NOT NULL,\n        \t   \t  `attr_int_3` int(11) NOT NULL,\n        \t   \t  `disabled` tinyint(1) unsigned NOT NULL NULL DEFAULT 0,\n        \t   \t  `unique_id` varchar(20) NOT NULL,\n                  `updated_at` int(11) unsigned NOT NULL DEFAULT 0,\n                  `created_at` int(11) unsigned NOT NULL DEFAULT 0,\n                  `active_from` int(11) unsigned NOT NULL DEFAULT 0,\n                  `active_to` int(11) unsigned NOT NULL DEFAULT 0,\n                  `repetitiveness` int(11) unsigned NOT NULL DEFAULT 0,\n                  `days_activity` text COLLATE utf8mb4_unicode_ci NOT NULL,\n                  PRIMARY KEY (`id`),\n        \t   \t  KEY `department_id` (`department_id`),\n        \t   \t  KEY `disabled` (`disabled`),\n        \t   \t  KEY `attr_int_1` (`attr_int_1`),\n        \t   \t  KEY `attr_int_2` (`attr_int_2`),\n        \t   \t  KEY `attr_int_3` (`attr_int_3`),\n        \t   \t  KEY `position_title_v2` (`position`, `title`(191)),\n        \t   \t  KEY `user_id` (`user_id`),\n        \t   \t  KEY `unique_id` (`unique_id`),\n                  KEY `repetitiveness` (`repetitiveness`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_online_user_footprint` (\n\t\t\t\t  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `chat_id` bigint(20) NOT NULL,\n\t\t\t\t  `online_user_id` int(11) NOT NULL,\n\t\t\t\t  `page` varchar(2083) NOT NULL,\n\t\t\t\t  `vtime` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `chat_id` (`chat_id`),\n\t\t\t\t  KEY `online_user_id` (`online_user_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                $db->query(\"CREATE TABLE `lh_canned_msg_dep` (\n                                 `id` bigint(20) NOT NULL AUTO_INCREMENT,\n                                 `canned_id` int(11) NOT NULL,\n                                 `dep_id` int(11) NOT NULL,\n                                 PRIMARY KEY (`id`),\n                                 KEY `canned_id` (`canned_id`),\n                                 KEY `dep_id` (`dep_id`)\n                            ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_invitation_dep` (\n                    `id` bigint(20) NOT NULL AUTO_INCREMENT,\n    `invitation_id` int(11) NOT NULL,\n    `dep_id` int(11) NOT NULL,\n    PRIMARY KEY (`id`),\n    KEY `invitation_id` (`invitation_id`),\n    KEY `dep_id` (`dep_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                 $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_event` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `vid_id` int(11) NOT NULL,\n        \t       `ev_id` int(11) NOT NULL,\n        \t       `ts` int(11) NOT NULL,\n        \t       `val` varchar(50) NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `vid_id_ev_id_val_ts` (`vid_id`,`ev_id`,`val`,`ts`),\n        \t       KEY `vid_id_ev_id_ts` (`vid_id`,`ev_id`,`ts`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_invitation_event` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `invitation_id` int(11) NOT NULL,\n        \t       `event_id` int(11) NOT NULL,\n        \t       `min_number` int(11) NOT NULL,\n        \t       `during_seconds` int(11) NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `invitation_id` (`invitation_id`),\n        \t       KEY `event_id` (`event_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_variables` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `name` varchar(50) NOT NULL,\n        \t       `identifier` varchar(50) NOT NULL,\n        \t       `store_timeout` int(11) NOT NULL,\n        \t       `filter_val` int(11) NOT NULL DEFAULT '0',\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `identifier` (`identifier`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_campaign` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL, `text` text NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_proactive_chat_campaign_conv` (\n                  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `device_type` tinyint(11) NOT NULL,\n\t\t\t\t  `invitation_type` tinyint(1) NOT NULL,\n\t\t\t\t  `invitation_status` tinyint(1) NOT NULL,\n\t\t\t\t  `chat_id` bigint(20) NOT NULL,\n\t\t\t\t  `campaign_id` int(11) NOT NULL,\n\t\t\t\t  `invitation_id` int(11) NOT NULL,\n\t\t\t\t  `department_id` int(11) NOT NULL,\n\t\t\t\t  `ctime` int(11) NOT NULL,\n\t\t\t\t  `con_time` int(11) NOT NULL,\n\t\t\t\t  `vid_id` bigint(20) DEFAULT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `ctime` (`ctime`),\n\t\t\t\t  KEY `campaign_id` (`campaign_id`),\n\t\t\t\t  KEY `invitation_id` (`invitation_id`),\n\t\t\t\t  KEY `invitation_status` (`invitation_status`)\n\t\t\t\t) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users_setting` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `user_id` int(11) NOT NULL,\n        \t   `identifier` varchar(50) NOT NULL,\n        \t   `value` text NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `user_id` (`user_id`,`identifier`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_departament_limit_group_member` (  \n    \t       `id` int(11) NOT NULL AUTO_INCREMENT,  \n    \t       `dep_id` int(11) NOT NULL,  \n    \t       `dep_limit_group_id` int(11) NOT NULL,  \n    \t       PRIMARY KEY (`id`),  \n    \t       KEY `dep_limit_group_id` (`dep_limit_group_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_departament_limit_group` (  \n    \t       `id` int(11) NOT NULL AUTO_INCREMENT,  \n    \t       `name` varchar(50) NOT NULL,\n    \t       `pending_max` int(11) NOT NULL,  \n    \t       PRIMARY KEY (`id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_auto_responder_chat` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `chat_id` int(11) NOT NULL,\n                  `auto_responder_id` int(11) NOT NULL,\n                  `wait_timeout_send` int(11) NOT NULL,\n                  `pending_send_status` int(11) NOT NULL,\n                  `active_send_status` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `chat_id` (`chat_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users_setting_option` (\n\t\t\t\t  `identifier` varchar(50) NOT NULL,\n\t\t\t\t  `class` varchar(50) NOT NULL,\n\t\t\t\t  `attribute` varchar(40) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`identifier`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"INSERT INTO `lh_users_setting_option` (`identifier`, `class`, `attribute`) VALUES\n        \t   ('chat_message',\t'',\t''),\n        \t   ('new_chat_sound',\t'',\t''),\n        \t   ('enable_pending_list', '', ''),\n        \t   ('enable_active_list', '', ''),\n        \t   ('enable_close_list', '', ''),\n        \t   ('new_user_bn', '', ''),\n        \t   ('new_user_sound', '', ''),\n        \t   ('oupdate_timeout', '', ''),\n        \t   ('ouser_timeout', '', ''),\n        \t   ('o_department', '', ''),\n        \t   ('omax_rows', '', ''),\n        \t   ('ogroup_by', '', ''),\n        \t   ('omap_depid', '', ''),\n        \t   ('omap_mtimeout', '', ''),\n        \t   ('ocountry', '', ''),\n        \t   ('otime_on_site', '', ''),\n        \t   ('dwo', '', ''),\n        \t   ('enable_unread_list', '', '')\");\n\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_config` (\n                  `identifier` varchar(50) NOT NULL,\n                  `value` text NOT NULL,\n                  `type` tinyint(1) NOT NULL DEFAULT '0',\n                  `explain` varchar(250) NOT NULL,\n                  `hidden` int(11) NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`identifier`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $randomHash = erLhcoreClassModelForgotPassword::randomPassword(80);\n                    $randomHashLength = strlen($randomHash);\n                    $exportHash = erLhcoreClassModelForgotPassword::randomPassword(80);\n\n                    if (extension_loaded('bcmath')){\n                        $geoRow = \"('geo_data','a:5:{i:0;b:0;s:21:\\\"geo_detection_enabled\\\";i:1;s:22:\\\"geo_service_identifier\\\";s:8:\\\"max_mind\\\";s:23:\\\"max_mind_detection_type\\\";s:7:\\\"country\\\";s:22:\\\"max_mind_city_location\\\";s:37:\\\"var/external/geoip/GeoLite2-City.mmdb\\\";}',0,'',1)\";\n                    } else {\n                        $geoRow = \"('geo_data', '', '0', '', '1')\";\n                    }\n\n                    $db->query(\"INSERT INTO `lh_chat_config` (`identifier`, `value`, `type`, `explain`, `hidden`) VALUES\n                ('tracked_users_cleanup',\t'160',\t0,\t'How many days keep records of online users.',\t0),\n        \t   \t('list_online_operators', '1', '0', 'List online operators.', '0'),\n        \t   \t('voting_days_limit',\t'7',\t0,\t'How many days voting widget should not be expanded after last show',\t0),\n                ('track_online_visitors',\t'1',\t0,\t'Enable online site visitors tracking',\t0),\n        \t   \t('pro_active_invite',\t'1',\t0,\t'Is pro active chat invitation active. Online users tracking also has to be enabled',\t0),\n                ('customer_company_name',\t'Live Helper Chat',\t0,\t'Your company name - visible in bottom left corner',\t0),\n                ('customer_site_url',\t'http://livehelperchat.com',\t0,\t'Your site URL address',\t0),\n                ('transfer_configuration','0','0','Transfer configuration','1'),\n                ('list_unread','0','0','List unread chats','0'),\n                ('list_closed','0','0','List closed chats','0'),\n                ('vwait_to_long','120','0','How long we should wait before we inform operator about unanswered chat.','0'),\n                ('autoclose_activity_timeout','0','0','Automatically close active chat if from last visitor/operator message passed. 0 - disabled, n > 0 time in minutes','0'),\n                ('mobile_options',\t'a:2:{s:13:\\\"notifications\\\";i:0;s:7:\\\"fcm_key\\\";s:152:\\\"AAAAiF8DeNk:APA91bFVHu2ybhBUTtlEtQrUEPpM2fb-5ovgo0FVNm4XxK3cYJtSwRcd-pqcBot_422yDOzHyw2p9ZFplkHrmNXjm8f5f-OIzfalGmpsypeXvnPxhU6Db1B2Z1Acc-TamHUn2F4xBJkP\\\";}',\t0,\t'',\t1),\n                ('footprint_background','0','0','Footprint updates should be processed in the background. Make sure you are running workflow background cronjob.','0'),\n                ('reverse_pending','0','0','Make default pending chats order from old to new','0'),\n                ('departament_availability','364','0','How long department availability statistic should be kept? (days)','0'),\n                ('uonline_sessions','364','0','How long keep operators online sessions data? (days)','0'),\n                ('disable_live_autoassign','0','0','Disable live auto assign','0'),\n                ('tracked_footprint_cleanup','90','0','How many days keep records of users footprint.','0'),\n                ('cleanup_cronjob','0','0','Cleanup should be done only using cronjob.','0'),         \n                ('no_wildcard_cookie','0','0','Cookie should be valid only for domain where Javascript is embedded (excludes subdomains)','0'),\n                ('cduration_timeout_user','4','0','How long operator can wait for message from visitor before time between messages are ignored. Values in minutes.','0'),\n                ('cduration_timeout_operator','10','0','How long visitor can wait for message from operator before time between messages are ignored. Values in minutes.','0'),       \n                ('assign_workflow_timeout','0','0','Chats waiting in pending line more than n seconds should be auto assigned first. Time in seconds','0'),\n        \t   \t('smtp_data',\t'a:5:{s:4:\\\"host\\\";s:0:\\\"\\\";s:4:\\\"port\\\";s:2:\\\"25\\\";s:8:\\\"use_smtp\\\";i:0;s:8:\\\"username\\\";s:0:\\\"\\\";s:8:\\\"password\\\";s:0:\\\"\\\";}',\t0,\t'SMTP configuration',\t1),\n        \t    ('chatbox_data',\t'a:6:{i:0;b:0;s:20:\\\"chatbox_auto_enabled\\\";i:0;s:19:\\\"chatbox_secret_hash\\\";s:{$randomHashLength}:\\\"{$randomHash}\\\";s:20:\\\"chatbox_default_name\\\";s:7:\\\"Chatbox\\\";s:17:\\\"chatbox_msg_limit\\\";i:50;s:22:\\\"chatbox_default_opname\\\";s:7:\\\"Manager\\\";}',\t0,\t'Chatbox configuration',\t1),\n                ('start_chat_data',\t'a:80:{i:0;b:0;s:21:\\\"name_visible_in_popup\\\";b:0;s:27:\\\"name_visible_in_page_widget\\\";b:0;s:19:\\\"name_require_option\\\";s:8:\\\"required\\\";s:22:\\\"email_visible_in_popup\\\";b:0;s:28:\\\"email_visible_in_page_widget\\\";b:0;s:20:\\\"email_require_option\\\";s:8:\\\"required\\\";s:24:\\\"message_visible_in_popup\\\";b:1;s:30:\\\"message_visible_in_page_widget\\\";b:1;s:22:\\\"message_require_option\\\";s:8:\\\"required\\\";s:22:\\\"phone_visible_in_popup\\\";b:0;s:28:\\\"phone_visible_in_page_widget\\\";b:0;s:20:\\\"phone_require_option\\\";s:8:\\\"required\\\";s:21:\\\"force_leave_a_message\\\";b:0;s:29:\\\"offline_name_visible_in_popup\\\";b:1;s:35:\\\"offline_name_visible_in_page_widget\\\";b:1;s:27:\\\"offline_name_require_option\\\";s:8:\\\"required\\\";s:30:\\\"offline_phone_visible_in_popup\\\";b:0;s:36:\\\"offline_phone_visible_in_page_widget\\\";b:0;s:28:\\\"offline_phone_require_option\\\";s:8:\\\"required\\\";s:32:\\\"offline_message_visible_in_popup\\\";b:1;s:38:\\\"offline_message_visible_in_page_widget\\\";b:1;s:30:\\\"offline_message_require_option\\\";s:8:\\\"required\\\";s:15:\\\"auto_start_chat\\\";b:0;s:12:\\\"mobile_popup\\\";b:0;s:17:\\\"dont_auto_process\\\";b:0;s:20:\\\"tos_visible_in_popup\\\";b:0;s:12:\\\"requires_dep\\\";b:0;s:17:\\\"requires_dep_lock\\\";b:0;s:17:\\\"show_messages_box\\\";b:1;s:26:\\\"tos_visible_in_page_widget\\\";b:0;s:19:\\\"tos_checked_offline\\\";b:0;s:18:\\\"tos_checked_online\\\";b:0;s:28:\\\"offline_tos_visible_in_popup\\\";b:0;s:34:\\\"offline_tos_visible_in_page_widget\\\";b:0;s:35:\\\"offline_file_visible_in_page_widget\\\";b:0;s:29:\\\"offline_file_visible_in_popup\\\";b:0;s:11:\\\"name_hidden\\\";b:0;s:15:\\\"name_hidden_bot\\\";b:0;s:24:\\\"custom_fields_encryption\\\";s:0:\\\"\\\";s:19:\\\"offline_name_hidden\\\";b:0;s:13:\\\"pre_chat_html\\\";s:0:\\\"\\\";s:21:\\\"pre_offline_chat_html\\\";s:0:\\\"\\\";s:12:\\\"email_hidden\\\";b:0;s:16:\\\"email_hidden_bot\\\";b:0;s:20:\\\"offline_email_hidden\\\";b:0;s:15:\\\"user_msg_height\\\";s:0:\\\"\\\";s:12:\\\"phone_hidden\\\";b:0;s:16:\\\"phone_hidden_bot\\\";b:0;s:20:\\\"offline_phone_hidden\\\";b:0;s:14:\\\"message_hidden\\\";b:0;s:18:\\\"message_hidden_bot\\\";b:0;s:18:\\\"message_auto_start\\\";b:0;s:28:\\\"message_auto_start_key_press\\\";b:0;s:22:\\\"offline_message_hidden\\\";b:0;s:21:\\\"show_operator_profile\\\";b:1;s:21:\\\"remove_operator_space\\\";b:0;s:18:\\\"hide_message_label\\\";b:0;s:17:\\\"custom_fields_url\\\";s:0:\\\"\\\";s:13:\\\"custom_fields\\\";s:0:\\\"\\\";s:21:\\\"name_hidden_prefilled\\\";b:0;s:22:\\\"email_hidden_prefilled\\\";b:0;s:24:\\\"message_hidden_prefilled\\\";b:0;s:22:\\\"phone_hidden_prefilled\\\";b:0;s:29:\\\"offline_name_hidden_prefilled\\\";b:0;s:32:\\\"offline_message_hidden_prefilled\\\";b:0;s:30:\\\"offline_phone_hidden_prefilled\\\";b:0;s:18:\\\"disable_start_chat\\\";b:0;s:18:\\\"offline_name_width\\\";i:0;s:19:\\\"offline_email_width\\\";i:0;s:19:\\\"offline_phone_width\\\";i:0;s:10:\\\"name_width\\\";i:0;s:11:\\\"email_width\\\";i:0;s:11:\\\"phone_width\\\";i:0;s:17:\\\"hide_start_button\\\";b:0;s:9:\\\"lazy_load\\\";b:0;s:28:\\\"offline_email_require_option\\\";s:8:\\\"required\\\";s:30:\\\"offline_email_hidden_prefilled\\\";b:0;s:36:\\\"offline_email_visible_in_page_widget\\\";b:1;s:30:\\\"offline_email_visible_in_popup\\\";b:1;}',\t0,\t'',\t1),\n                ('application_name',\t'a:6:{s:3:\\\"eng\\\";s:31:\\\"Live Helper Chat - live support\\\";s:3:\\\"lit\\\";s:26:\\\"Live Helper Chat - pagalba\\\";s:3:\\\"hrv\\\";s:0:\\\"\\\";s:3:\\\"esp\\\";s:0:\\\"\\\";s:3:\\\"por\\\";s:0:\\\"\\\";s:10:\\\"site_admin\\\";s:31:\\\"Live Helper Chat - live support\\\";}',\t1,\t'Support application name, visible in browser title.',\t0),\n                ('track_footprint',\t'0',\t0,\t'Track users footprint. For this also online visitors tracking should be enabled',\t0),\n                ('pro_active_limitation',\t'-1',\t0,\t'Pro active chats invitations limitation based on pending chats, (-1) do not limit, (0,1,n+1) number of pending chats can be for invitation to be shown.',\t0),\n                ('pro_active_show_if_offline',\t'0',\t0,\t'Should invitation logic be executed if there is no online operators',\t0),\n                ('export_hash',\t'{$exportHash}',\t0,\t'Chats export secret hash',\t0),\n                ('do_no_track_ip', 0, 0, 'Do not track visitors IP',0),\n                ('remember_username','1','0','Should we remember username for the next time visitor starts a chat?','0'),\n                ('ignore_typing', 0, 0, 'Do not store what visitor is typing',0),\n                ('encrypt_msg_after', 0, 0, 'After how many days anonymize messages',0),\n                ('encrypt_msg_op', 0, 0, 'Anonymize also operators messages',0),\n                ('valid_domains','','0','Domains where script can be embedded. E.g example.com, google.com','0'),\n                ('message_seen_timeout', 24, 0, 'Proactive message timeout in hours. After how many hours proactive chat mesasge should be shown again.',\t0),\n                ('reopen_chat_enabled',0,\t0,\t'Reopen chat functionality enabled',\t0),\n                ('ignorable_ip',\t'',\t0,\t'Which ip should be ignored in online users list, separate by comma',0),\n                ('run_departments_workflow', 0, 0, 'Should cronjob run departments transfer workflow, even if user leaves a chat',\t0),\n                ('geo_location_data', 'a:3:{s:4:\\\"zoom\\\";i:4;s:3:\\\"lat\\\";s:7:\\\"49.8211\\\";s:3:\\\"lng\\\";s:7:\\\"11.7835\\\";}', '0', '', '1'),\n                ('xmp_data','a:14:{i:0;b:0;s:4:\\\"host\\\";s:15:\\\"talk.google.com\\\";s:6:\\\"server\\\";s:9:\\\"gmail.com\\\";s:8:\\\"resource\\\";s:6:\\\"xmpphp\\\";s:4:\\\"port\\\";s:4:\\\"5222\\\";s:7:\\\"use_xmp\\\";i:0;s:8:\\\"username\\\";s:0:\\\"\\\";s:8:\\\"password\\\";s:0:\\\"\\\";s:11:\\\"xmp_message\\\";s:98:\\\"New chat request [{chat_id}] from [{department}]\\r\\n{messages}\\r\\nClick to accept a chat\\r\\n{url_accept}\\\";s:10:\\\"recipients\\\";s:0:\\\"\\\";s:20:\\\"xmp_accepted_message\\\";s:89:\\\"{user_name} has accepted a chat [{chat_id}] from [{department}]\\r\\n{messages}\\r\\n{url_accept}\\\";s:16:\\\"use_standard_xmp\\\";i:0;s:15:\\\"test_recipients\\\";s:0:\\\"\\\";s:21:\\\"test_group_recipients\\\";s:0:\\\"\\\";}',0,'XMP data',1),\n                ('run_unaswered_chat_workflow', 0, 0, 'Should cronjob run unanswered chats workflow and execute unaswered chats callback, 0 - no, any other number bigger than 0 is a minits how long chat have to be not accepted before executing callback.',0),\n                ('disable_popup_restore', 0, 0, 'Disable option in widget to open new window. Restore icon will be hidden',\t0),\n                ('accept_tos_link', '#', 0, 'Change to your site Terms of Service', 0),\n                ('hide_button_dropdown', '0', 0, 'Hide close button in dropdown', 0),\n                ('on_close_exit_chat', '0', 0, 'On chat close exit chat', 0),\n                ('activity_timeout', '5', 0, 'How long operator should go offline automatically because of inactivity. Value in minutes', 0),\n                ('product_enabled_module','0','0','Product module is enabled', '1'),\n                ('preload_iframes','0','0','Preload widget. It will avoid loading delay after clicking widget','0'),\n                ('product_show_departament','0','0','Enable products show by departments', '1'),\n                ('paidchat_data','','0','Paid chat configuration','1'),\n                ('mheight_op','200','0','Messages box height for operator','0'),\n                ('listd_op','10','0','Default number of online operators to show','0'),\n                ('disable_iframe_sharing',\t'1',\t0,\t'Disable iframes in sharing mode',\t0),\n                ('file_configuration',\t'a:7:{i:0;b:0;s:5:\\\"ft_op\\\";s:47:\\\"gif|jpe?g|png|zip|svg|rar|xls|doc|docx|xlsx|pdf\\\";s:5:\\\"ft_us\\\";s:30:\\\"gif|jpe?g|png|svg|doc|docx|pdf\\\";s:6:\\\"fs_max\\\";i:2048;s:18:\\\"active_user_upload\\\";b:0;s:16:\\\"active_op_upload\\\";b:1;s:19:\\\"active_admin_upload\\\";b:1;}',\t0,\t'Files configuration item',\t1),\n                ('accept_chat_link_timeout',\t'300',\t0,\t'How many seconds chat accept link is valid. Set 0 to force login all the time manually.',\t0),\n                ('open_closed_chat_timeout',\t'1800',\t0,\t'How many seconds customer has to open already closed chat.',\t0),\n                ('session_captcha',0,\t0,\t'Use session captcha. LHC have to be installed on the same domain or subdomain.',\t0),\n                ('sync_sound_settings',\t'a:16:{i:0;b:0;s:12:\\\"repeat_sound\\\";i:1;s:18:\\\"repeat_sound_delay\\\";i:5;s:10:\\\"show_alert\\\";b:0;s:22:\\\"new_chat_sound_enabled\\\";b:1;s:31:\\\"new_message_sound_admin_enabled\\\";b:1;s:30:\\\"new_message_sound_user_enabled\\\";b:1;s:14:\\\"online_timeout\\\";d:300;s:22:\\\"check_for_operator_msg\\\";d:10;s:21:\\\"back_office_sinterval\\\";d:10;s:22:\\\"chat_message_sinterval\\\";d:3.5;s:20:\\\"long_polling_enabled\\\";b:0;s:30:\\\"polling_chat_message_sinterval\\\";d:1.5;s:29:\\\"polling_back_office_sinterval\\\";d:5;s:18:\\\"connection_timeout\\\";i:30;s:28:\\\"browser_notification_message\\\";b:0;}',\t0,\t'',\t1),\n                ('sound_invitation', 1, 0, 'Play sound on invitation to chat.',\t0),\n                ('explicit_http_mode', '',0,'Please enter explicit http mode. Either http: or https:, do not forget : at the end.', '0'),\n                ('track_domain',\t'',\t0,\t'Set your domain to enable user tracking across different domain subdomains.',\t0),\n                ('max_message_length','500',0,'Maximum message length in characters', '0'),\n                ('need_help_tip','1',0,'Show need help tooltip?', '0'),\n                ('recaptcha_data','a:4:{i:0;b:0;s:8:\\\"site_key\\\";s:0:\\\"\\\";s:10:\\\"secret_key\\\";s:0:\\\"\\\";s:7:\\\"enabled\\\";i:0;}','0','Re-captcha configuration','1'),\n                ('need_help_tip_timeout','24',0,'Need help tooltip timeout, after how many hours show again tooltip?', '0'),\n                ('use_secure_cookie','0',0,'Use secure cookie, check this if you want to force SSL all the time', '0'),\n                ('faq_email_required','0',0,'Is visitor e-mail required for FAQ', '0'),\n                ('disable_print','0',0,'Disable chat print', '0'),\n                ('hide_disabled_department','1',0,'Hide disabled department widget', '0'),\n                ('disable_send','0',0,'Disable chat transcript send', '0'),\n                ('autoclose_abandon_pending','0,0','0','Automatically close pending chats where visitor has left a chat. Timeout in minutes, last activity by visitor <desktop timeout>,<mobile timeout>,<status chat>','0'),\n                ('ignore_user_status','0',0,'Ignore users online statuses and use departments online hours', '0'),\n                ('bbc_button_visible','1',0,'Show BB Code button', '0'),\n                ('password_data','','0','Password requirements','1'),\n                ('activity_track_all','0','0','Track all logged operators activity and ignore their individual settings.','0'),\n                ('allow_reopen_closed','0', 0, 'Allow user to reopen closed chats?', '0'),\n                ('reopen_as_new','1', 0, 'Reopen closed chat as new? Otherwise it will be reopened as active.', '0'),\n                ('default_theme_id','0', 0, 'Default theme ID.', '1'),  \n                ('default_admin_theme_id','0', 0, 'Default admin theme ID', '1'),  \n                ('translation_data',\t'a:6:{i:0;b:0;s:19:\\\"translation_handler\\\";s:4:\\\"bing\\\";s:19:\\\"enable_translations\\\";b:0;s:14:\\\"bing_client_id\\\";s:0:\\\"\\\";s:18:\\\"bing_client_secret\\\";s:0:\\\"\\\";s:14:\\\"google_api_key\\\";s:0:\\\"\\\";}',\t0,\t'Translation data',\t1),              \n                ('disable_html5_storage','1',0,'Disable HMTL5 storage, check it if your site is switching between http and https', '0'),\n                ('automatically_reopen_chat','1',0,'Automatically reopen chat on widget open', '0'),\n                ('autoclose_timeout','0', 0, 'Automatic chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autoclose_timeout_pending','0', 0, 'Automatic pending chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autoclose_timeout_active','0', 0, 'Automatic active chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autoclose_timeout_bot','0', 0, 'Automatic bot chats closing. 0 - disabled, n > 0 time in minutes before chat is automatically closed', '0'),\n                ('autopurge_timeout','0', 0, 'Automatic chats purging. 0 - disabled, n > 0 time in minutes before chat is automatically deleted', '0'),\n                ('update_ip',\t'127.0.0.1',\t0,\t'Which ip should be allowed to update DB by executing http request, separate by comma?',0),\n                ('track_if_offline',\t'0',\t0,\t'Track online visitors even if there is no online operators',0),\n                ('min_phone_length','8',0,'Minimum phone number length',0),\n                ('mheight','',0,'Messages box height',0),\n                ('inform_unread_message','0',0,'Inform visitor about unread messages from operator, value in minutes. 0 - disabled',0),\n                ('dashboard_order', '[[\\\"online_operators\\\",\\\"departments_stats\\\",\\\"online_visitors\\\"],[\\\"group_chats\\\",\\\"my_chats\\\",\\\"pending_chats\\\",\\\"transfered_chats\\\"],[\\\"active_chats\\\",\\\"bot_chats\\\"]]', '0', 'Home page dashboard widgets order', '0'),\n                ('banned_ip_range','',0,'Which ip should not be allowed to chat',0),\n                ('suggest_leave_msg','1',0,'Suggest user to leave a message then user chooses offline department',0),\n                ('checkstatus_timeout','0',0,'Interval between chat status checks in seconds, 0 disabled.',0),\n                ('show_language_switcher','0',0,'Show users option to switch language at widget',0),\n                ('sharing_auto_allow','0',0,'Do not ask permission for users to see their screen',0),\n                ('sharing_nodejs_enabled','0',0,'NodeJs support enabled',0),\n                ('sharing_nodejs_path','',0,'socket.io path, optional',0),\n                ('online_if','0','0','','0'),\n                ('track_mouse_activity','0','0','Should mouse movement be tracked as activity measure, if not checked only basic events would be tracked','0'),\n                ('track_activity','0','0','Track users activity on site?','0'),\n                ('autologin_data','a:3:{i:0;b:0;s:11:\\\"secret_hash\\\";s:16:\\\"please_change_me\\\";s:7:\\\"enabled\\\";i:0;}',0,'Autologin configuration data',\t1),\n                ('sharing_nodejs_secure','0',0,'Connect to NodeJs in https mode',0),\n                ('disable_js_execution','1',0,'Disable JS execution in Co-Browsing operator window',0),\n                ('sharing_nodejs_socket_host','',0,'Host where NodeJs is running',0),\n                ('hide_right_column_frontpage','1','0','Hide right column in frontpage','0'),\n                ('front_tabs', 'dashboard,online_users,online_map', '0', 'Home page tabs order', '0'),\n                ('speech_data',\t'a:3:{i:0;b:0;s:8:\\\"language\\\";i:7;s:7:\\\"dialect\\\";s:5:\\\"en-US\\\";}',\t1,\t'',\t1),\n                ('sharing_nodejs_sllocation','https://cdn.jsdelivr.net/npm/socket.io-client@2/dist/socket.io.js',0,'Location of SocketIO JS library',0),\n                ('track_is_online','0',0,'Track is user still on site, chat status checks also has to be enabled',0),\n\t\t\t\t('show_languages','eng,lit,hrv,esp,por,nld,ara,ger,pol,rus,ita,fre,chn,cse,nor,tur,vnm,idn,sve,per,ell,dnk,rou,bgr,tha,geo,fin,alb',0,'Between what languages user should be able to switch',0),\n                ('geoadjustment_data',\t'a:8:{i:0;b:0;s:18:\\\"use_geo_adjustment\\\";b:0;s:13:\\\"available_for\\\";s:0:\\\"\\\";s:15:\\\"other_countries\\\";s:6:\\\"custom\\\";s:8:\\\"hide_for\\\";s:0:\\\"\\\";s:12:\\\"other_status\\\";s:7:\\\"offline\\\";s:11:\\\"rest_status\\\";s:6:\\\"hidden\\\";s:12:\\\"apply_widget\\\";i:0;}',\t0,\t'Geo adjustment settings',\t1),\n                {$geoRow}\");\n\n\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_online_user` (\n                  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `vid` varchar(50) NOT NULL,\n                  `ip` varchar(50) NOT NULL,\n                  `current_page` text NOT NULL,\n        \t   \t  `page_title` varchar(250) NOT NULL,\n                  `referrer` text NOT NULL,\n                  `chat_id` bigint(20) NOT NULL,\n                  `invitation_seen_count` int(11) NOT NULL,\n        \t   \t  `invitation_id` int(11) NOT NULL,\n                  `last_visit` int(11) NOT NULL,\n        \t   \t  `first_visit` int(11) NOT NULL,\n        \t   \t  `total_visits` int(11) NOT NULL,\n        \t   \t  `pages_count` int(11) NOT NULL,\n        \t   \t  `tt_pages_count` int(11) NOT NULL,\n        \t   \t  `invitation_count` int(11) NOT NULL,\n        \t   \t  `last_check_time` int(11) NOT NULL,\n        \t   \t  `dep_id` int(11) NOT NULL,        \t   \t \n                  `user_agent` text NOT NULL,\n                  `notes` varchar(250) NOT NULL,\n                  `user_country_code` varchar(50) NOT NULL,\n                  `user_country_name` varchar(50) NOT NULL,\n                  `visitor_tz` varchar(50) NOT NULL,\n                  `operator_message` text NOT NULL,\n                  `operator_user_proactive` varchar(100) NOT NULL,\n                  `operator_user_id` int(11) NOT NULL,\n                  `conversion_id` int(11) NOT NULL,\n                  `message_seen` int(11) NOT NULL,\n                  `message_seen_ts` int(11) NOT NULL,\n                  `user_active` int(11) NOT NULL,\n        \t   \t  `lat` varchar(10) NOT NULL,\n  \t\t\t\t  `lon` varchar(10) NOT NULL,\n  \t\t\t\t  `city` varchar(100) NOT NULL,\n        \t   \t  `reopen_chat` int(11) NOT NULL,\n        \t   \t  `time_on_site` int(11) NOT NULL,\n  \t\t\t\t  `tt_time_on_site` int(11) NOT NULL,\n        \t   \t  `requires_email` int(11) NOT NULL,\n        \t   \t  `requires_username` int(11) NOT NULL,\n        \t   \t  `requires_phone` int(11) NOT NULL,\n        \t   \t  `screenshot_id` int(11) NOT NULL,\n        \t   \t  `identifier` varchar(50) NOT NULL,\n        \t   \t  `operation` text NOT NULL,\n        \t   \t  `online_attr_system` text NOT NULL,\n        \t   \t  `operation_chat` text NOT NULL,\n        \t   \t  `online_attr` text NOT NULL,\n        \t   \t  `device_type` tinyint(1) NOT NULL DEFAULT '0',\n                  `chat_time` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  `last_visit_prev` bigint(20) unsigned NOT NULL DEFAULT 0,\n                  PRIMARY KEY (`id`),\n                  KEY `vid` (`vid`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `last_visit_dep_id` (`last_visit`,`dep_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_proactive_chat_invitation` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `siteaccess` varchar(10) NOT NULL,\n\t\t\t\t  `time_on_site` int(11) NOT NULL,\n\t\t\t\t  `pageviews` int(11) NOT NULL,\n\t\t\t\t  `message` text NOT NULL,\n\t\t\t\t  `message_returning` text NOT NULL,\n\t\t\t\t  `executed_times` int(11) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `hide_after_ntimes` int(11) NOT NULL,\n\t\t\t\t  `show_on_mobile` int(11) NOT NULL,\n\t\t\t\t  `delay` int(11) NOT NULL,\n\t\t\t\t  `delay_init` int(11) NOT NULL,\n\t\t\t\t  `show_instant` int(11) NOT NULL,\n\t\t\t\t  `autoresponder_id` int(11) NOT NULL,\n\t\t\t\t  `disabled` int(11) NOT NULL,\n\t\t\t\t  `inject_only_html` tinyint(1) NOT NULL,\n\t\t\t\t  `name` varchar(50) NOT NULL,\n\t\t\t\t  `operator_ids` varchar(100) NOT NULL,\t\t\t\t \n\t\t\t\t  `message_returning_nick` varchar(250) NOT NULL,\n\t\t\t\t  `referrer` varchar(250) NOT NULL,\t\t\t\t  \n\t\t\t\t  `show_random_operator` int(11) NOT NULL,\n\t\t\t\t  `operator_name` varchar(100) NOT NULL,\n\t\t\t\t  `campaign_id` int(11) NOT NULL,\n\t\t\t\t  `position` int(11) NOT NULL,\n\t\t\t\t  `event_invitation` int(11) NOT NULL,\n\t\t\t\t  `dynamic_invitation` int(11) NOT NULL,\n\t\t\t\t  `bot_id` int(11) NOT NULL,\n\t\t\t\t  `trigger_id` int(11) NOT NULL,\n\t\t\t\t  `bot_offline` tinyint(1) NOT NULL,\n        \t   \t  `identifier` varchar(50) NOT NULL,\n        \t   \t  `tag` varchar(50) NOT NULL,\n        \t   \t  `requires_email` int(11) NOT NULL,\n        \t   \t  `iddle_for` int(11) NOT NULL,\n        \t   \t  `event_type` int(11) NOT NULL,\n        \t   \t  `requires_username` int(11) NOT NULL,\n        \t   \t  `requires_phone` int(11) NOT NULL,        \t   \t  \n        \t   \t  `design_data` longtext NOT NULL,        \t   \t  \n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `time_on_site_pageviews_siteaccess_position` (`time_on_site`,`pageviews`,`siteaccess`,`identifier`,`position`),\n        \t      KEY `identifier` (`identifier`),\n        \t      KEY `dynamic_invitation` (`dynamic_invitation`),\n        \t      KEY `tag` (`tag`),\n        \t      KEY `show_on_mobile` (`show_on_mobile`),\n        \t      KEY `dep_id` (`dep_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_chat_accept` (\n        \t   `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t   `chat_id` bigint(20) NOT NULL,\n        \t   `hash` varchar(50) NOT NULL,\n        \t   `ctime` int(11) NOT NULL,\n        \t   `wused` int(11) NOT NULL,\n        \t   PRIMARY KEY (`id`),\n        \t   KEY `hash` (`hash`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    //Default departament\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_departament` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `name` varchar(100) NOT NULL,\n\t\t\t\t  `email` varchar(100) NOT NULL,\n\t\t\t\t  `xmpp_recipients` text NOT NULL,\n\t\t\t\t  `xmpp_group_recipients` text NOT NULL,\n\t\t\t\t  `priority` int(11) NOT NULL,\n\t\t\t\t  `sort_priority` int(11) NOT NULL,\n\t\t\t\t  `department_transfer_id` int(11) NOT NULL,\n\t\t\t\t  `transfer_timeout` int(11) NOT NULL,\n\t\t\t\t  `exclude_inactive_chats` int(11) NOT NULL,\n\t\t\t\t  `delay_before_assign` int(11) NOT NULL,\n\t\t\t\t  `max_ac_dep_chats` int(11) NOT NULL,\n\t\t\t\t  `assign_same_language` int(11) NOT NULL,\n\t\t\t\t  `archive` tinyint(1) NOT NULL DEFAULT '0',\n\t\t\t\t  `max_load` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `max_load_h` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `disabled` int(11) NOT NULL,\n\t\t\t\t  `hidden` int(11) NOT NULL,\n\t\t\t\t  `delay_lm` int(11) NOT NULL,\n\t\t\t\t  `max_active_chats` int(11) NOT NULL,\n\t\t\t\t  `max_timeout_seconds` int(11) NOT NULL,\n\t\t\t\t  `identifier` varchar(2083) NOT NULL,\n\t\t\t\t  `mod_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `mod_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `tud_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `tud_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `wed_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `wed_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `thd_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `thd_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `frd_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `frd_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sad_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sad_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sud_start_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `sud_end_hour` int(4) NOT NULL DEFAULT '-1',\n\t\t\t\t  `nc_cb_execute` tinyint(1) NOT NULL,\n\t\t\t\t  `na_cb_execute` tinyint(1) NOT NULL,\n\t\t\t\t  `inform_unread` tinyint(1) NOT NULL,\n\t\t\t\t  `active_balancing` tinyint(1) NOT NULL,\n\t\t\t\t  `visible_if_online` tinyint(1) NOT NULL,\n\t\t\t\t  `inform_close` int(11) NOT NULL,\n\t\t\t\t  `inform_unread_delay` int(11) NOT NULL,\n\t\t\t\t  `inform_options` varchar(250) NOT NULL,\n\t\t\t\t  `online_hours_active` tinyint(1) NOT NULL,\n\t\t\t\t  `inform_delay` int(11) NOT NULL,\n\t\t\t\t  `attr_int_1` int(11) NOT NULL,\n\t\t\t\t  `attr_int_2` int(11) NOT NULL,\n\t\t\t\t  `attr_int_3` int(11) NOT NULL,\n\t\t\t\t  `pending_max` int(11) NOT NULL,\n\t\t\t\t  `pending_group_max` int(11) NOT NULL,\n\t\t\t\t  `active_chats_counter` int(11) NOT NULL,\n\t\t\t\t  `inactive_chats_cnt` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `pending_chats_counter` int(11) NOT NULL,\n\t\t\t\t  `bot_chats_counter` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `inop_chats_cnt` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `acop_chats_cnt` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `inform_close_all` int(11) NOT NULL,\n\t\t\t\t  `inform_close_all_email` varchar(250) NOT NULL,\n\t\t\t\t  `alias` varchar(50) NOT NULL,\n\t\t\t\t  `product_configuration` longtext NOT NULL,\n\t\t\t\t  `bot_configuration` text NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `identifier_2` (`identifier`(191)),\n\t\t\t\t  KEY `archive` (`archive`),\n\t\t\t\t  KEY `alias` (`alias`),\n\t\t\t\t  KEY `attr_int_1` (`attr_int_1`),\n\t\t\t\t  KEY `attr_int_2` (`attr_int_2`),\n\t\t\t\t  KEY `attr_int_3` (`attr_int_3`),\n\t\t\t\t  KEY `active_chats_counter` (`active_chats_counter`),\n\t\t\t\t  KEY `pending_chats_counter` (`pending_chats_counter`),\n\t\t\t\t  KEY `bot_chats_counter` (`bot_chats_counter`),\n\t\t\t\t  KEY `disabled_hidden` (`disabled`, `hidden`),\n\t\t\t\t  KEY `sort_priority_name` (`sort_priority`, `name`),\n\t\t\t\t  KEY `active_mod` (`online_hours_active`,`mod_start_hour`,`mod_end_hour`),\n\t\t\t\t  KEY `active_tud` (`online_hours_active`,`tud_start_hour`,`tud_end_hour`),\n\t\t\t\t  KEY `active_wed` (`online_hours_active`,`wed_start_hour`,`wed_end_hour`),\n\t\t\t\t  KEY `active_thd` (`online_hours_active`,`thd_start_hour`,`thd_end_hour`),\n\t\t\t\t  KEY `active_frd` (`online_hours_active`,`frd_start_hour`,`frd_end_hour`),\n\t\t\t\t  KEY `active_sad` (`online_hours_active`,`sad_start_hour`,`sad_end_hour`),\n\t\t\t\t  KEY `active_sud` (`online_hours_active`,`sud_start_hour`,`sud_end_hour`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_departament_group_user` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `dep_group_id` int(11) NOT NULL,\n                  `user_id` int(11) NOT NULL,\n                  `read_only` tinyint(1) unsigned NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`id`),\n                  KEY `dep_group_id` (`dep_group_id`),\n                  KEY `user_id` (`user_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_departament_availability` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `dep_id` int(11) NOT NULL, `hour` int(11) NOT NULL, `hourminute` int(4) NOT NULL, `minute` int(11) NOT NULL, `time` int(11) NOT NULL, `ymdhi` bigint(20) NOT NULL, `ymd` int(11) NOT NULL, `status` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `ymdhi` (`ymdhi`), KEY `dep_id` (`dep_id`),  KEY `hourminute` (`hourminute`), KEY `time` (`time`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_product_departament` (\n        \t       `id` int(11) NOT NULL AUTO_INCREMENT,\n        \t       `product_id` int(11) NOT NULL,\n        \t       `departament_id` int(11) NOT NULL,\n        \t       PRIMARY KEY (`id`),\n        \t       KEY `departament_id` (`departament_id`)\n        \t   ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_departament_group_member` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `dep_id` int(11) NOT NULL,\n                  `dep_group_id` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `dep_group_id` (`dep_group_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_generic_bot_rest_api` (`id` bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY, `name` varchar(50) NOT NULL, `description` varchar(250), `configuration` text NOT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_departament_group` (\n                      `id` int(11) NOT NULL AUTO_INCREMENT,\n                      `name` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `achats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `inachats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `pchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `max_load` int(11) NOT NULL DEFAULT 0,\n                      `max_load_h` int(11) NOT NULL DEFAULT 0,\n                      `bchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `inopchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      `acopchats_cnt` int(11) NOT NULL DEFAULT 0,\n                      PRIMARY KEY (`id`)\n                    ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_canned_msg_tag_link` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `tag_id` int(11) NOT NULL,  `canned_id` int(11) NOT NULL,  PRIMARY KEY (`id`), KEY `canned_id` (`canned_id`), KEY `tag_id` (`tag_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_canned_msg_tag` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `tag` varchar(40) NOT NULL, PRIMARY KEY (`id`), KEY `tag` (`tag`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_subject` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n  `internal` tinyint(1) NOT NULL DEFAULT 0,\n  `internal_type` varchar(20) NOT NULL DEFAULT '',\n  PRIMARY KEY (`id`),\n  KEY `internal` (`internal`),\n  KEY `internal_type` (`internal_type`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_subject_dep` ( `id` int(11) NOT NULL AUTO_INCREMENT, `dep_id` int(11) NOT NULL, `subject_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `subject_id` (`subject_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_abstract_subject_chat` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `subject_id` int(11) NOT NULL, `chat_id` bigint(20) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_group_object` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `object_id` bigint(20) NOT NULL, `group_id` bigint(20) NOT NULL, `type` bigint(20) NOT NULL, PRIMARY KEY (`id`), KEY `object_id_type` (`object_id`,`type`), KEY `group_id` (`group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Bot tables\n                    $db->query(\"CREATE TABLE `lh_generic_bot_bot` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `configuration` longtext NOT NULL, `avatar` varchar(150) NOT NULL, `filename` varchar(250) NOT NULL, `filepath` varchar(250) NOT NULL, `name` varchar(100) NOT NULL, `nick` varchar(100) NOT NULL,`attr_str_1` varchar(100) NOT NULL, `attr_str_2` varchar(100) NOT NULL, `attr_str_3` varchar(100) NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_group` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL,`is_collapsed` int(11) NOT NULL DEFAULT '0', `pos` int(11) NOT NULL DEFAULT '0', `bot_id` bigint(20) NOT NULL, PRIMARY KEY (`id`), KEY `bot_id` (`bot_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_trigger` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL, `actions` longtext NOT NULL, `group_id` bigint(20) NOT NULL, `bot_id` int(11) NOT NULL, `default` int(11) NOT NULL, `default_unknown` int(11) NOT NULL, `as_argument` int(11) NOT NULL DEFAULT '0', `in_progress` int(11) NOT NULL DEFAULT '0', `default_unknown_btn` int(11) NOT NULL DEFAULT '0', `default_always` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `bot_id` (`bot_id`),  KEY `default_unknown` (`default_unknown`), KEY `in_progress` (`in_progress`), KEY `default_unknown_btn` (`default_unknown_btn`), KEY `default_always` (`default_always`), KEY `group_id` (`group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_trigger_event` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `pattern` text NOT NULL, `pattern_exc` text NOT NULL, `configuration` longtext NOT NULL, `trigger_id` bigint(20) NOT NULL, `bot_id` int(11) NOT NULL, `on_start_type` tinyint(1) NOT NULL, `priority` int(11) NOT NULL, `type` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `pattern_v2` (`pattern`(191)), KEY `type` (`type`), KEY `on_start_type` (`on_start_type`), KEY `trigger_id` (`trigger_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_payload` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL, `payload` varchar(100) NOT NULL, `bot_id` int(11) NOT NULL, `trigger_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `bot_id` (`bot_id`), KEY `trigger_id` (`trigger_id`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_chat_workflow` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL,`trigger_id` bigint(20) NOT NULL, `time` int(11) NOT NULL, `identifier` varchar(100) NOT NULL, `status` int(11) NOT NULL, `collected_data` text, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_chat_event` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `counter` int(11) NOT NULL, `content` longtext NOT NULL, `ctime` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_pending_event` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `trigger_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_exception` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) NOT NULL, `priority` int(11) NOT NULL, `active` tinyint(1) NOT NULL, PRIMARY KEY (`id`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_exception_message` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `code` varchar(20) NOT NULL, `exception_group_id` int(11) NOT NULL, `priority` int(11) NOT NULL, `active` tinyint(1) NOT NULL, `message` text NOT NULL, PRIMARY KEY (`id`), KEY `code` (`code`), KEY `exception_group_id` (`exception_group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_tr_group` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL,`filename` varchar(250) NOT NULL,`filepath` varchar(250) NOT NULL,`configuration` longtext NOT NULL,`nick` varchar(100) NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_tr_item` ( `id` int(11) NOT NULL AUTO_INCREMENT, `group_id` int(11) NOT NULL, `identifier` varchar(50) NOT NULL, `translation` text NOT NULL, PRIMARY KEY (`id`),  KEY `identifier` (`identifier`), KEY `group_id` (`group_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_speech_user_language` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `user_id` bigint(20) NOT NULL, `language` varchar(20) NOT NULL, PRIMARY KEY (`id`), KEY `user_id_language` (`user_id`,`language`)) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_audits` (`id` bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY, `category` varchar(255) NOT NULL, `file` varchar(255), `object_id` bigint(20) DEFAULT '0', `line` bigint(20), `message` longtext NOT NULL, `severity` varchar(255) NOT NULL, `source` varchar(255) NOT NULL, `time` timestamp NOT NULL, KEY `object_id` (`object_id`), KEY `source` (`source`(191)), KEY `category` (`category`(191))) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_chat_online_user_footprint_update` (`online_user_id` bigint(20) NOT NULL,  `command` varchar(20) NOT NULL,  `args` varchar(250) NOT NULL,  `ctime` int(11) NOT NULL, KEY `online_user_id` (`online_user_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_generic_bot_repeat_restrict` (`id` bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY, `chat_id` bigint(20) NOT NULL, `trigger_id` bigint(20), `identifier` varchar(20), `counter` int(11) DEFAULT '0', KEY `chat_id_trigger_id` (`chat_id`,`trigger_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_users_login` (`id` bigint(20) NOT NULL AUTO_INCREMENT,`user_id` bigint(20) NOT NULL,`type` int(11) NOT NULL,`ctime` bigint(20) NOT NULL,`status` int(11) NOT NULL,`ip` varchar(100) NOT NULL,`msg` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL,PRIMARY KEY (`id`),KEY `user_id_type` (`user_id`,`type`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                    $Departament = new erLhcoreClassModelDepartament();\n                    $Departament->name = $form->DefaultDepartament;\n                    erLhcoreClassDepartament::getSession()->save($Departament);\n\n                    //Department custom work hours\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_departament_custom_work_hours` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `date_from` int(11) NOT NULL,\n\t\t\t\t  `date_to` int(11) NOT NULL,\n\t\t\t\t  `start_hour` int(11) NOT NULL,\n\t\t\t\t  `end_hour` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `date_from` (`date_from`),\n\t\t\t\t  KEY `search_active` (`date_from`, `date_to`, `dep_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    //Administrators group\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_group` (\n               `id` int(11) NOT NULL AUTO_INCREMENT,\n               `name` varchar(50) NOT NULL,\n               `disabled` tinyint(1) NOT NULL,\n               `required` tinyint(1) NOT NULL DEFAULT '0',\n               PRIMARY KEY (`id`),\n               KEY `disabled` (`disabled`)\n               ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Admin group\n                    $GroupData = new erLhcoreClassModelGroup();\n                    $GroupData->name    = \"Administrators\";\n                    erLhcoreClassUser::getSession()->save($GroupData);\n\n                    // Precreate operators group\n                    $GroupDataOperators = new erLhcoreClassModelGroup();\n                    $GroupDataOperators->name    = \"Operators\";\n                    erLhcoreClassUser::getSession()->save($GroupDataOperators);\n\n                    //Administrators role\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_role` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `name` varchar(50) NOT NULL,\n                  PRIMARY KEY (`id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Administrators role\n                    $Role = new erLhcoreClassModelRole();\n                    $Role->name = 'Administrators';\n                    erLhcoreClassRole::getSession()->save($Role);\n\n                    // Operators role\n                    $RoleOperators = new erLhcoreClassModelRole();\n                    $RoleOperators->name = 'Operators';\n                    erLhcoreClassRole::getSession()->save($RoleOperators);\n\n                    //Assing group role\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_grouprole` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `group_id` int(11) NOT NULL,\n                  `role_id` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `group_id` (`role_id`,`group_id`),\n                  KEY `group_id_primary` (`group_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Assign admin role to admin group\n                    $GroupRole = new erLhcoreClassModelGroupRole();\n                    $GroupRole->group_id =$GroupData->id;\n                    $GroupRole->role_id = $Role->id;\n                    erLhcoreClassRole::getSession()->save($GroupRole);\n\n                    // Assign operators role to operators group\n                    $GroupRoleOperators = new erLhcoreClassModelGroupRole();\n                    $GroupRoleOperators->group_id =$GroupDataOperators->id;\n                    $GroupRoleOperators->role_id = $RoleOperators->id;\n                    erLhcoreClassRole::getSession()->save($GroupRoleOperators);\n\n                    // Users\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `username` varchar(80) NOT NULL,\n                  `password` varchar(200) NOT NULL,\n                  `email` varchar(100) NOT NULL,\n                  `time_zone` varchar(100) NOT NULL,\n                  `name` varchar(100) NOT NULL,\n                  `surname` varchar(100) NOT NULL,\n                  `filepath` varchar(200) NOT NULL,\n                  `filename` varchar(200) NOT NULL,\n                  `job_title` varchar(100) NOT NULL,\n                  `departments_ids` text NOT NULL,\n                  `chat_nickname` varchar(100) NOT NULL,\n                  `xmpp_username` varchar(200) NOT NULL,\n                  `session_id` varchar(40) NOT NULL,\n                  `avatar` varchar(150) NOT NULL,\n                  `operation_admin` text NOT NULL,\n                  `skype` varchar(50) NOT NULL,\n                  `exclude_autoasign` tinyint(1) NOT NULL,\n                  `disabled` tinyint(4) NOT NULL,\n                  `hide_online` tinyint(1) NOT NULL,\n                  `all_departments` tinyint(1) NOT NULL,\n                  `invisible_mode` tinyint(1) NOT NULL,\n                  `inactive_mode` tinyint(1) NOT NULL,\n                  `rec_per_req` tinyint(1) NOT NULL,\n                  `auto_accept` tinyint(1) NOT NULL,\n                  `max_active_chats` int(11) NOT NULL,\n                  `cache_version` int(11) unsigned NOT NULL DEFAULT '0',\n                  `pswd_updated` int(11) NOT NULL,\n                  `attr_int_1` int(11) NOT NULL,\n                  `attr_int_2` int(11) NOT NULL,\n                  `attr_int_3` int(11) NOT NULL,\n                  `force_logout` tinyint(1) unsigned NOT NULL DEFAULT '0',\n                  `llogin` bigint(20) unsigned NOT NULL DEFAULT '0',\n                  `always_on` tinyint(1) NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`id`),\n                  KEY `hide_online` (`hide_online`),\n                  KEY `rec_per_req` (`rec_per_req`),\n                  KEY `disabled` (`disabled`),\n                  KEY `email` (`email`),\n                  KEY `xmpp_username` (`xmpp_username`(191))\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $UserData = new erLhcoreClassModelUser();\n\n                    $UserData->setPassword($form->AdminPassword);\n                    $UserData->email   = $form->AdminEmail;\n                    $UserData->name    = $form->AdminName;\n                    $UserData->surname = $form->AdminSurname;\n                    $UserData->username = $form->AdminUsername;\n                    $UserData->all_departments = 1;\n                    $UserData->departments_ids = 0;\n                    $UserData->pswd_updated = time();\n\n                    erLhcoreClassUser::getSession()->save($UserData);\n\n                    // User departaments\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_userdep` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `user_id` int(11) NOT NULL,\n                  `dep_id` int(11) NOT NULL,\n                  `last_activity` int(11) NOT NULL,\n                  `lastd_activity` int(11) NOT NULL DEFAULT '0',\n                  `exclude_autoasign` tinyint(1) NOT NULL DEFAULT '0',\n                  `hide_online` int(11) NOT NULL,\n                  `last_accepted` int(11) NOT NULL DEFAULT '0',\n                  `active_chats` int(11) NOT NULL DEFAULT '0',\n                  `pending_chats` int(11) NOT NULL DEFAULT '0',\n                  `inactive_chats` int(11) NOT NULL DEFAULT '0',\n                  `max_chats` int(11) NOT NULL DEFAULT '0',\n                  `type` int(11) NOT NULL DEFAULT '0',\n                  `ro` tinyint(1) NOT NULL DEFAULT '0',\n                  `hide_online_ts` int(11) NOT NULL DEFAULT '0',\n                  `dep_group_id` int(11) NOT NULL DEFAULT '0',\n                  `always_on` tinyint(1) NOT NULL DEFAULT '0',\n                  PRIMARY KEY (`id`),\n                  KEY `last_activity_hide_online_dep_id` (`last_activity`,`hide_online`,`dep_id`),\n                  KEY `dep_id` (`dep_id`),\n                  KEY `user_id_type` (`user_id`,`type`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n\n                    // Insert record to departament instantly\n                    $db->query(\"INSERT INTO `lh_userdep` (`user_id`,`dep_id`,`last_activity`,`hide_online`,`last_accepted`,`active_chats`,`type`,`dep_group_id`,`exclude_autoasign`) VALUES ({$UserData->id},0,0,0,0,0,0,0,0)\");\n\n                    $db->query(\"CREATE TABLE `lh_group_work` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `group_id` int(11) NOT NULL, `group_work_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `group_id` (`group_id`)) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Transfer chat\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_transfer` (\n\t\t\t\t  `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `chat_id` int(11) NOT NULL,\n\t\t\t\t  `dep_id` int(11) NOT NULL,\n\t\t\t\t  `transfer_user_id` int(11) NOT NULL,\n\t\t\t\t  `from_dep_id` int(11) NOT NULL,\n\t\t\t\t  `ctime` int(11) NOT NULL,\n\t\t\t\t  `transfer_to_user_id` int(11) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `dep_id` (`dep_id`),\n\t\t\t\t  KEY `transfer_user_id_dep_id` (`transfer_user_id`,`dep_id`),\n\t\t\t\t  KEY `transfer_to_user_id` (`transfer_to_user_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Remember user table\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_users_remember` (\n\t\t\t\t `id` int(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t `user_id` int(11) NOT NULL,\n\t\t\t\t `mtime` int(11) NOT NULL,\n\t\t\t\t PRIMARY KEY (`id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_generic_bot_command` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `command` varchar(50) NOT NULL,\n  `bot_id` int(11) NOT NULL,\n  `trigger_id` int(11) NOT NULL,\n  `dep_id` int(11) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `dep_id` (`dep_id`),\n  KEY `command` (`command`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_canned_msg_subject` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `canned_id` int(11) NOT NULL,\n    `subject_id` int(11) NOT NULL,\n    PRIMARY KEY (`id`),\n    KEY `canned_id` (`canned_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_canned_msg_replace` (\n                    `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n                    `identifier` varchar(50) NOT NULL,\n                    `default` text NOT NULL, `conditions` longtext NOT NULL,\n                    PRIMARY KEY (`id`),\n                   KEY `identifier` (`identifier`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_saved_search` (\n                    `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n                  `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `params` longtext COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `user_id` bigint(20) unsigned NOT NULL,\n                  `position` int(11) unsigned NOT NULL,\n                  `scope` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,\n                  `days` int(11) unsigned NOT NULL,\n                  `updated_at` bigint(20) unsigned NOT NULL,\n                  `requested_at` bigint(20) unsigned NOT NULL,\n                  `total_records` bigint(20) unsigned NOT NULL,\n                  `passive` tinyint(1) unsigned NOT NULL DEFAULT 0,\n                  PRIMARY KEY (`id`),\n                  KEY `user_id` (`user_id`),\n                  KEY `scope` (`scope`),\n                  KEY `updated_at` (`updated_at`),\n                  KEY `requested_at` (`requested_at`)\n                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // API table\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_abstract_rest_api_key` (\n                    `id` int(11) NOT NULL AUTO_INCREMENT,\n                    `api_key` varchar(50) NOT NULL,\n                    `user_id` int(11) NOT NULL DEFAULT '0',\n                    `active` int(11) NOT NULL DEFAULT '0',\n                    `ip_restrictions` varchar(250) NOT NULL,\n                    PRIMARY KEY (`id`),\n                    KEY `api_key` (`api_key`),\n                    KEY `user_id` (`user_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_rest_api_key_remote` ( `id` int(11) NOT NULL AUTO_INCREMENT, `api_key` varchar(50) NOT NULL, `username` varchar(50) NOT NULL, `name` varchar(50) NOT NULL, `host` varchar(250) NOT NULL, `active` tinyint(1) NOT NULL DEFAULT '0', `position` int(11) NOT NULL DEFAULT '0', PRIMARY KEY (`id`), KEY `active` (`active`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci\");\n                    $db->query(\"CREATE TABLE `lh_abstract_chat_variable` ( `id` int(11) NOT NULL AUTO_INCREMENT, `var_name` varchar(255) NOT NULL, `var_identifier` varchar(255) NOT NULL,`inv` tinyint(1) NOT NULL, `change_message` varchar(250) NOT NULL, `type` tinyint(1) NOT NULL, `persistent` tinyint(1) NOT NULL, `js_variable` varchar(255) NOT NULL, `dep_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `dep_id` (`dep_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_webhook` ( `id` int(11) NOT NULL AUTO_INCREMENT, `event` varchar(50) NOT NULL, `bot_id_alt` int(11) NOT NULL DEFAULT '0', `trigger_id_alt` int(11) NOT NULL DEFAULT '0', `bot_id` int(11) NOT NULL, `trigger_id` int(11) NOT NULL, `disabled` tinyint(1) NOT NULL, `configuration` longtext NOT NULL, `type` tinyint(1) NOT NULL DEFAULT 0, PRIMARY KEY (`id`), KEY `event_disabled` (`event`,`disabled`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_incoming_webhook` ( `id` int(11) NOT NULL AUTO_INCREMENT, `dep_id` int(11) NOT NULL, `name` varchar(50) NOT NULL,`identifier` varchar(50) NOT NULL, `scope` varchar(50) NOT NULL, `disabled` tinyint(1) NOT NULL, `configuration` longtext NOT NULL, PRIMARY KEY (`id`), KEY `identifier` (`identifier`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_chat_incoming` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `chat_id` bigint(20) NOT NULL, `utime` bigint(20) NOT NULL, `incoming_id` int(11) NOT NULL,`payload` longtext NOT NULL, `chat_external_id` varchar(50) NOT NULL, PRIMARY KEY (`id`), KEY `chat_id` (`chat_id`),  KEY `incoming_ext_id` (`incoming_id`,`chat_external_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    $db->query(\"CREATE TABLE `lh_abstract_chat_column` (`id` int(11) NOT NULL AUTO_INCREMENT,`column_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,`variable` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL, `position` int(11) NOT NULL, `enabled` tinyint(1) NOT NULL, `online_enabled` tinyint(1) NOT NULL, `chat_enabled` tinyint(1) NOT NULL, `conditions` text COLLATE utf8mb4_unicode_ci NOT NULL,`column_icon` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL, `column_identifier` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL, PRIMARY KEY (`id`), KEY `enabled` (`enabled`), KEY `online_enabled` (`online_enabled`), KEY `chat_enabled` (`chat_enabled`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_abstract_chat_priority` (`id` int(11) NOT NULL AUTO_INCREMENT,`value` text COLLATE utf8mb4_unicode_ci NOT NULL,`dep_id` int(11) NOT NULL, `dest_dep_id` int(11) NOT NULL DEFAULT 0, `sort_priority` int(11) NOT NULL DEFAULT 0,`priority` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `dep_id` (`dep_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n                    $db->query(\"CREATE TABLE `lh_canned_msg_use` (`id` bigint(20) unsigned NOT NULL AUTO_INCREMENT, `canned_id` int(11) unsigned NOT NULL, `chat_id` bigint(20) unsigned NOT NULL, `ctime` bigint(20) unsigned NOT NULL, `user_id` bigint(20) unsigned NOT NULL, PRIMARY KEY (`id`), KEY `ctime` (`ctime`), KEY `chat_id` (`chat_id`), KEY `canned_id` (`canned_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n\n                    // Session\n                    $db->query(\"CREATE TABLE `lh_users_session` (\n                      `id` int(11) NOT NULL AUTO_INCREMENT,\n                      `token` varchar(40) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `device_type` int(11) NOT NULL,\n                      `device_token` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      `user_id` int(11) NOT NULL,\n                      `created_on` int(11) NOT NULL,\n                      `updated_on` int(11) NOT NULL,\n                      `expires_on` int(11) NOT NULL,\n                      `notifications_status` int(11) NOT NULL DEFAULT 1,\n                      `error` int(11) NOT NULL DEFAULT 0,\n                      `last_error` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,\n                      PRIMARY KEY (`id`),\n                      KEY `token` (`token`),\n                      KEY `device_token_device_type_v2` (`device_token`(191),`device_type`),\n                      KEY `error` (`error`)\n                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Chat messages\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_msg` (\n\t\t\t\t  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n\t\t\t\t  `msg` longtext NOT NULL,\n\t\t\t\t  `meta_msg` longtext NOT NULL,\n\t\t\t\t  `time` int(11) NOT NULL,\n\t\t\t\t  `chat_id` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `user_id` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t  `name_support` varchar(100) NOT NULL,\n\t\t\t\t  PRIMARY KEY (`id`),\n\t\t\t\t  KEY `chat_id_id` (`chat_id`, `id`),\n\t\t\t\t  KEY `user_id` (`user_id`)\n\t\t\t\t) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Forgot password table\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_forgotpasswordhash` (\n                `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,\n                `user_id` INT NOT NULL ,\n                `hash` VARCHAR( 40 ) NOT NULL ,\n                `created` INT NOT NULL\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // User groups table\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_groupuser` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `group_id` int(11) NOT NULL,\n                  `user_id` int(11) NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `group_id` (`group_id`),\n                  KEY `user_id` (`user_id`),\n                  KEY `group_id_2` (`group_id`,`user_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Assign admin user to admin group\n                    $GroupUser = new erLhcoreClassModelGroupUser();\n                    $GroupUser->group_id = $GroupData->id;\n                    $GroupUser->user_id = $UserData->id;\n                    erLhcoreClassUser::getSession()->save($GroupUser);\n\n                    //Assign default role functions\n                    $db->query(\"CREATE TABLE IF NOT EXISTS `lh_rolefunction` (\n                  `id` int(11) NOT NULL AUTO_INCREMENT,\n                  `role_id` int(11) NOT NULL,\n                  `module` varchar(100) NOT NULL,\n                  `function` varchar(100) NOT NULL,\n                  `limitation` text NOT NULL,\n                  PRIMARY KEY (`id`),\n                  KEY `role_id` (`role_id`)\n                ) ENGINE=InnoDB CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\");\n\n                    // Admin role and function\n                    $RoleFunction = new erLhcoreClassModelRoleFunction();\n                    $RoleFunction->role_id = $Role->id;\n                    $RoleFunction->module = '*';\n                    $RoleFunction->function = '*';\n                    erLhcoreClassRole::getSession()->save($RoleFunction);\n\n                    // Operators rules and functions\n                    $permissionsArray = array(\n                        array('module' => 'lhuser',  'function' => 'selfedit'),\n                        array('module' => 'lhuser',  'function' => 'change_chat_nickname'),\n                        array('module' => 'lhuser',  'function' => 'changephoto'),\n                        array('module' => 'lhuser',  'function' => 'change_job_title'),\n                        array('module' => 'lhuser',  'function' => 'change_core_attributes'),\n                        array('module' => 'lhuser',  'function' => 'change_name_surname'),\n                        array('module' => 'lhuser',  'function' => 'selfedit'),\n                        array('module' => 'lhuser',  'function' => 'changeonlinestatus'),\n                        array('module' => 'lhuser',  'function' => 'changeskypenick'),\n                        array('module' => 'lhuser',  'function' => 'personalcannedmsg'),\n                        array('module' => 'lhuser',  'function' => 'change_visibility_list'),\n                        array('module' => 'lhuser',  'function' => 'see_assigned_departments'),\n                        array('module' => 'lhuser',  'function' => 'canseedepartmentstats'),\n                        array('module' => 'lhchat',  'function' => 'use'),\n                        array('module' => 'lhchat',  'function' => 'open_all'),\n                        array('module' => 'lhchat',  'function' => 'chattabschrome'),\n                        array('module' => 'lhchat',  'function' => 'singlechatwindow'),\n                        array('module' => 'lhchat',  'function' => 'allowopenremotechat'),\n                        array('module' => 'lhchat',  'function' => 'writeremotechat'),\n                        array('module' => 'lhchat',  'function' => 'allowchattabs'),\n                        array('module' => 'lhchat',  'function' => 'use_onlineusers'),\n                        array('module' => 'lhchat',  'function' => 'take_screenshot'),\n                        array('module' => 'lhfront', 'function' => 'use'),\n                        array('module' => 'lhsystem','function' => 'use'),\n                        array('module' => 'lhtranslation','function' => 'use'),\n                        array('module' => 'lhchat',  'function' => 'allowblockusers'),\n                        array('module' => 'lhsystem','function' => 'generatejs'),\n                        array('module' => 'lhsystem','function' => 'changelanguage'),\n                        array('module' => 'lhchat',  'function' => 'allowredirect'),\n                        array('module' => 'lhchat',  'function' => 'allowtransfer'),\n                        array('module' => 'lhchat',  'function' => 'allowtransferdirectly'),\n                        array('module' => 'lhchat',  'function' => 'administratecannedmsg'),\n                        array('module' => 'lhchat',  'function' => 'explorecannedmsg'),\n                        array('module' => 'lhchat',  'function' => 'sees_all_online_visitors'),\n                        array('module' => 'lhpermission',   'function' => 'see_permissions'),\n                        array('module' => 'lhquestionary',  'function' => 'manage_questionary'),\n                        array('module' => 'lhfaq',   \t\t'function' => 'manage_faq'),\n                        array('module' => 'lhchatbox',   \t'function' => 'manage_chatbox'),\n                        array('module' => 'lhbrowseoffer',  'function' => 'manage_bo'),\n                        array('module' => 'lhxml',   \t\t'function' => '*'),\n                        array('module' => 'lhcobrowse',   \t'function' => 'browse'),\n                        array('module' => 'lhfile',   \t\t'function' => 'use_operator'),\n                        array('module' => 'lhfile',   \t\t'function' => 'file_delete_chat'),\n                        array('module' => 'lhstatistic',   \t'function' => 'use'),\n                        array('module' => 'lhspeech', 'function' => 'changedefaultlanguage'),\n                        array('module' => 'lhspeech', 'function' => 'use'),\n                        array('module' => 'lhcannedmsg', 'function' => 'use'),\n                        array('module' => 'lhcannedmsg', 'function' => 'see_global'),\n                        array('module' => 'lhchat', 'function' => 'prev_chats'),\n                        array('module' => 'lhtheme', 'function' => 'personaltheme'),\n                        array('module' => 'lhuser', 'function' => 'userlistonline'),\n                        array('module' => 'lhspeech', 'function' => 'change_chat_recognition'),\n                        array('module' => 'lhgroupchat', 'function' => 'use'),\n                        array('module' => 'lhuser', 'function' => 'see_all_group_users'),\n                        array('module' => 'lhvoicevideo', 'function' => 'use'),\n                        array('module' => 'lhtheme', 'function' => 'use_operator'),\n                        array('module' => 'lhgenericbot', 'function' => 'use_operator'),\n                    );\n\n                    foreach ($permissionsArray as $paramsPermission) {\n                        $RoleFunctionOperator = new erLhcoreClassModelRoleFunction();\n                        $RoleFunctionOperator->role_id = $RoleOperators->id;\n                        $RoleFunctionOperator->module = $paramsPermission['module'];\n                        $RoleFunctionOperator->function = $paramsPermission['function'];\n                        erLhcoreClassRole::getSession()->save($RoleFunctionOperator);\n                    }\n\n                    $cfgSite = erConfigClassLhConfig::getInstance();\n                    $cfgSite->setSetting( 'site', 'installed', true);\n                    $cfgSite->setSetting( 'site', 'templatecache', true);\n                    $cfgSite->setSetting( 'site', 'templatecompile', true);\n                    $cfgSite->setSetting( 'site', 'modulecompile', true);\n                    $cfgSite->setSetting( 'webhooks', 'enabled', (!empty(getenv('LHC_WEBHOOKS_ENABLED')) ? getenv('LHC_WEBHOOKS_ENABLED') : 0));\n                    $cfgSite->save();\n\n                    $tpl->setFile('lhinstall/install4.tpl.php');\n\n                } else {\n\n                    $tpl->set('admin_username',$form->AdminUsername);\n                    if ( $form->hasValidData( 'AdminEmail' ) ) $tpl->set('admin_email',$form->AdminEmail);\n                    $tpl->set('admin_name',$form->AdminName);\n                    $tpl->set('admin_surname',$form->AdminSurname);\n                    $tpl->set('admin_departament',$form->DefaultDepartament);\n\n                    $tpl->set('errors',$Errors);\n\n                    $tpl->setFile('lhinstall/install3.tpl.php');\n                }\n            } else {\n                $tpl->setFile('lhinstall/install3.tpl.php');\n            }\n\n            break;\n\n        case '4':\n            $tpl->setFile('lhinstall/install4.tpl.php');\n            break;\n\n        default:\n            $tpl->setFile('lhinstall/install1.tpl.php');\n            break;\n    }\n\n    $Result['content'] = $tpl->fetch();\n    $Result['pagelayout'] = 'install';\n    $Result['path'] = array(array('title' => 'Live helper chat installation'));\n\n} catch (Exception $e) {\n    echo \"Make sure that &quot;cache/*&quot; is writable and then <a href=\\\"\".erLhcoreClassDesign::baseurl('install/install').\"\\\">try again</a>\";\n\n    echo \"<pre>\";\n    print_r($e);\n    echo \"</pre>\";\n    exit;\n}\n?>\n", "<?php\n\n$tpl = erLhcoreClassTemplate::getInstance('lhpermission/explorer.tpl.php');\n\nif ($Params['user_parameters_unordered']['action'] == 1) {\n    $filename = \"permissions-\" . date('Y-m-d') . \".csv\";\n    $fp = fopen('php://output', 'w');\n\n    header('Content-type: application/csv');\n    header('Content-Disposition: attachment; filename=' . $filename);\n    fputcsv($fp, [\n        erTranslationClassLhTranslation::getInstance()->getTranslation('permission/explorer', 'Module'),\n        erTranslationClassLhTranslation::getInstance()->getTranslation('permission/explorer', 'Permission'),\n        erTranslationClassLhTranslation::getInstance()->getTranslation('permission/explorer', 'Explain'),\n        erTranslationClassLhTranslation::getInstance()->getTranslation('permission/explorer', 'Used by URL')]);\n\n    foreach (erLhcoreClassModules::getModuleList() as $key => $Module) {\n        $moduleFunctions = erLhcoreClassModules::getModuleFunctions($key, array('extract_url' => true));\n        if (count($moduleFunctions) > 0) {\n            foreach ($moduleFunctions as $keyFunction => $function) {\n                $url = [];\n                if (isset($function['url'])) {\n                    foreach ($function['url'] as $urlData) {\n                        $url[] = erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('/') . preg_replace('/^lh/', '', $urlData);\n                    }\n                }\n                fputcsv($fp, [\n                    '[' . $key . '] ' . $Module['name'],\n                    $keyFunction,\n                    $function['explain'],\n                    implode(\"\\n\", $url)\n                ]);\n            }\n        }\n    }\n    exit;\n}\n\nif ($Params['user_parameters_unordered']['action'] == 2) {\n\n    $sysConfiguration = erLhcoreClassSystem::instance()->RequestURI = $_POST['url'];\n    erLhcoreClassURL::resetInstance();\n\n    $url = erLhcoreClassURL::getInstance();\n\n    $currentModuleName = preg_replace('/[^a-zA-Z0-9\\-_]/', '', $url->getParam( 'module' ));\n    $currentView = preg_replace('/[^a-zA-Z0-9\\-_]/', '', $url->getParam( 'function' ));\n\n    $moduleFunctions = erLhcoreClassModules::getModuleFunctions('lh'.$currentModuleName, array('extract_url' => true));\n\n    $requiredPermissions = [];\n\n    foreach ($moduleFunctions as $permission => $moduleFunction) {\n        if (isset($moduleFunction['url']) && in_array('lh'.$currentModuleName.'/'.$currentView, $moduleFunction['url'])) {\n            $requiredPermissions[] = [\n                'permission' => $permission,\n                'explain' => $moduleFunction['explain']\n            ];\n        }\n    }\n\n    $moduleData = [\n        'module' => 'lh'.$currentModuleName,\n        'name' => erLhcoreClassModules::getModuleName('lh'.$currentModuleName),\n        'permissions' => $requiredPermissions\n    ];\n\n    echo \"<pre class='bg-secondary text-white p-2'>\";\n    echo htmlspecialchars(json_encode($moduleData,JSON_PRETTY_PRINT));\n    echo \"</pre>\";\n\n    exit;\n}\n\n$Result['content'] = $tpl->fetch();\n\n?>\n", "<?php\n\ntry {\n    erLhcoreClassRestAPIHandler::validateRequest();\n    \n    if (!erLhcoreClassRestAPIHandler::hasAccessTo('lhchat', 'use')) {\n        throw new Exception('You do not have permission. `lhchat`, `use` is required.');\n    }\n\n    $chat = erLhcoreClassModelChat::fetch((int)$_GET['chat_id']);\n\n    // Try to find chat in archive\n    if (!($chat instanceof erLhcoreClassModelChat)) {\n        $chatData = erLhcoreClassChatArcive::fetchChatById((int)$_GET['chat_id']);\n        if (!($chatData['chat'] instanceof erLhcoreClassModelChatArchive)) {\n            throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'Could not find chat by chat_id!'));\n        } else {\n            $chat = $chatData['chat'];\n            $chat->archive = $chatData['archive'];\n        }\n    } else {\n        $chat->archive = null;\n    }\n\n    if (erLhcoreClassRestAPIHandler::hasAccessToRead($chat) == true) {\n\n        $saveChat = false;\n\n        if (isset($_GET['workflow']) && $_GET['workflow'] == true && $chat->archive === null) {\n            // Auto responder\n            if ($chat->status == erLhcoreClassModelChat::STATUS_PENDING_CHAT && $chat->wait_timeout_send <= 0 && $chat->wait_timeout > 0 && !empty($chat->timeout_message) && (time() - $chat->time) > ($chat->wait_timeout*($chat->wait_timeout_repeat-(abs($chat->wait_timeout_send))))) {\n                $errors = array();\n                erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_auto_responder_triggered',array('chat' => & $chat, 'errors' => & $errors));\n            \n                if (empty($errors)) {\n                    erLhcoreClassChatWorkflow::timeoutWorkflow($chat);\n                } else {\n                    $msg = new erLhcoreClassModelmsg();\n                    $msg->msg = erTranslationClassLhTranslation::getInstance()->getTranslation('chat/adminchat','Auto responder got error').': '.implode('; ', $errors);\n                    $msg->chat_id = $chat->id;\n                    $msg->user_id = -1;\n                    $msg->time = time();\n            \n                    if ($chat->last_msg_id < $msg->id) {\n                        $chat->last_msg_id = $msg->id;\n                    }\n            \n                    erLhcoreClassChat::getSession()->save($msg);\n                }\n            \n            }\n            \n            if ($chat->status == erLhcoreClassModelChat::STATUS_PENDING_CHAT && $chat->transfer_if_na == 1 && $chat->transfer_timeout_ts < (time()-$chat->transfer_timeout_ac) ) {\n            \n                $canExecuteWorkflow = true;\n            \n                if (erLhcoreClassModelChatConfig::fetch('pro_active_limitation')->current_value >= 0) {\n                    if ($chat->department !== false && $chat->department->department_transfer_id > 0) {\n                        $canExecuteWorkflow = erLhcoreClassChat::getPendingChatsCountPublic($chat->department->department_transfer_id) <= erLhcoreClassModelChatConfig::fetch('pro_active_limitation')->current_value;\n                    }\n                }\n            \n                if ($canExecuteWorkflow == true) {\n                    erLhcoreClassChatWorkflow::transferWorkflow($chat);\n                }\n            }\n            \n            if ($chat->reinform_timeout > 0 && $chat->unread_messages_informed == 0 && $chat->has_unread_messages == 1 && (time()-$chat->last_user_msg_time) > $chat->reinform_timeout) {\n                $department = $chat->department;\n                if ($department !== false) {\n                    $options = $department->inform_options_array;\n                    erLhcoreClassChatWorkflow::unreadInformWorkflow(array('department' => $department,'options' => $options),$chat);\n                }\n            }\n            \n        }\n        \n        // Operator typing\n        if ( $chat->is_operator_typing == true) {\n            erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.syncuser.operator_typing',array('chat' => & $chat));\n            $ott = ($chat->operator_typing_user !== false) ? $chat->operator_typing_user->name_support . ' ' . erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chat','is typing now...') : erTranslationClassLhTranslation::getInstance()->getTranslation('chat/chat','Operator is typing now...');\n        }  elseif ($chat->is_operator_typing == false) {\n            $ott = '';\n        }\n\n        $lastMessageId = isset($_GET['last_message_id']) ? (int)$_GET['last_message_id'] : 0;\n        \n        if ($chat->archive === null) {\n            $messages = erLhcoreClassChat::getPendingMessages($chat->id, $lastMessageId);\n        } else {\n            $messages = erLhcoreClassChatArcive::getPendingMessages($chat->id, $lastMessageId);\n        }\n\n        if (isset($_GET['ignore_system_messages']) && ($_GET['ignore_system_messages'] == 'true' || $_GET['ignore_system_messages'] == '1'))\n        {\n            foreach ($messages as $key => $data) {\n                if ($data['user_id'] == -1) {\n                    unset($messages[$key]);\n                }\n                $lastMessageId = $data['id'];\n            }\n        }\n\n        // Extract media within message if required\n        if (isset($_GET['extract_media']) && ($_GET['extract_media'] == 'true' || $_GET['extract_media'] == '1')) {\n            foreach ($messages as $key => $msg) {\n                $matches = array();\n\n                $msg_text_cleaned = $msg['msg'];\n\n                preg_match_all('/\\[file=\"?(.*?)\"?\\]/', $msg_text_cleaned, $matches);\n\n                $media = array();\n\n                foreach ($matches[1] as $index => $body) {\n                    $parts = explode('_', $body);\n                    $fileID = $parts[0];\n                    $hash = $parts[1];\n                    try {\n                        $file = erLhcoreClassModelChatFile::fetch($fileID);\n                        if (is_object($file) && $hash == $file->security_hash) {\n\n                            $url = erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurldirect('file/downloadfile') . \"/{$file->id}/{$hash}\";\n\n                            $media[] = array(\n                                'id' => $file->id,\n                                'size' => $file->size,\n                                'upload_name' => $file->upload_name,\n                                'type' => $file->type,\n                                'extension' => $file->extension,\n                                'hash' => $hash,\n                                'url' => $url,\n                            );\n\n                            $msg_text_cleaned = str_replace($matches[0][$index],'',$msg_text_cleaned);\n                        }\n\n                    } catch (Exception $e) {\n\n                    }\n                }\n\n                // Set message text to empty if only file was send\n                if (trim($msg_text_cleaned) == '' && isset($_GET['remove_media']) && ($_GET['remove_media'] == 'true' || $_GET['remove_media'] == '1') ) {\n                    $messages[$key]['msg'] = '';\n                }\n\n                $messages[$key]['media'] = $media;\n\n            }\n        }\n                \n        $checkStatus = false;\n        \n        // Closed\n        $closed = false;\n        if ($chat->status == erLhcoreClassModelChat::STATUS_CLOSED_CHAT) {\n            $closed = true;\n        }\n        \n        if (isset($_GET['workflow']) && $_GET['workflow'] == true) {\n            if ($chat->status_sub == erLhcoreClassModelChat::STATUS_SUB_OWNER_CHANGED) {\n                $checkStatus = true;\n                $chat->status_sub = erLhcoreClassModelChat::STATUS_SUB_DEFAULT;\n                $saveChat = true;\n            }\n        }\n        \n        if ($chat->status_sub == erLhcoreClassModelChat::STATUS_SUB_SURVEY_SHOW) {        \n            $closed = true;            \n        }\n        \n        if ($chat->status_sub == erLhcoreClassModelChat::STATUS_SUB_CONTACT_FORM) {\n            $checkStatus = true;\n        }\n        \n        if (isset($_GET['workflow']) && $_GET['workflow'] == true) {\n            if ($chat->operation != '') {\n                $operation = explode(\"\\n\", trim($chat->operation));\n                $chat->operation = '';\n                $saveChat = true;\n            }\n        }\n        \n        if (isset($_GET['workflow']) && $_GET['workflow'] == true) {\n            if ($chat->user_status != 0) {\n                $chat->user_status = 0;\n                $saveChat = true;\n            }\n        \n            if ($chat->has_unread_op_messages == 1)\n            {\n                $chat->unread_op_messages_informed = 0;\n                $chat->has_unread_op_messages = 0;\n                $saveChat = true;\n            }\n        }\n        \n        if ($saveChat === true) {\n            $chat->updateThis();\n        }\n\n        if (isset($_GET['as_html']) && ($_GET['as_html'] == 'true' || $_GET['as_html'] == '1')) {\n            foreach ($messages as $key => $msg) {\n                $messages[$key]['msg'] = erLhcoreClassBBCode::make_clickable(htmlspecialchars($msg['msg']), array('sender' => $msg['user_id']));\n            }\n        }\n\n        if (isset($_GET['file_as_link']) && ($_GET['file_as_link'] == 'true' || $_GET['file_as_link'] == '1')) {\n            foreach ($messages as $key => $msg) {\n                $messages[$key]['msg'] = erLhcoreClassBBCodePlain::make_clickable($msg['msg'], array('sender' => $msg['user_id']));\n            }\n        }\n\n        if (isset($_GET['meta_parse']) && ($_GET['meta_parse'] == 'true' || $_GET['meta_parse'] == '1')) {\n            foreach ($messages as $key => $msg) {\n                if ($messages[$key]['msg'] == '') {\n                    $metaMessage = json_decode($messages[$key]['meta_msg'],true);\n                    if (is_array($metaMessage) && isset($metaMessage['content']) && is_array($metaMessage['content'])) {\n                        if (isset($metaMessage['content']['text_conditional']['full_op'])) {\n                            $messages[$key]['msg'] = trim(preg_replace('/\\[button_action=not_insult\\](.*)\\[\\/button_action\\]/is','',$metaMessage['content']['text_conditional']['full_op']));\n                        }\n                    }\n                }\n            }\n        }\n\n        if (isset($_GET['remove_bbcode']) && ($_GET['remove_bbcode'] == 'true' || $_GET['remove_bbcode'] == '1')) {\n            foreach ($messages as $key => $msg) {\n                if ($messages[$key]['msg'] != '') {\n                    $messages[$key]['msg'] = erLhcoreClassBBCodePlain::make_clickable($messages[$key]['msg'], array('sender' => $msg['user_id']));\n                }\n            }\n        }\n\n        erLhcoreClassRestAPIHandler::outputResponse(array(\n            'error' => false,\n            'result' => array(\n            \t\t'messages' => array_values($messages), \n            \t\t'ot' => $ott, \n            \t\t'closed' => $closed, \n            \t\t'check_status' => $checkStatus,\n            \t\t'lmid' => $lastMessageId\n            )\n        ));\n        \n    } else {\n        throw new Exception(erTranslationClassLhTranslation::getInstance()->getTranslation('lhrestapi/validation', 'You do not have permission to read this chat!'));\n    }\n    \n} catch (Exception $e) {\n    echo erLhcoreClassRestAPIHandler::outputResponse(array(\n        'error' => true,\n        'result' => $e->getMessage()\n    ));\n}\n\nexit();", "<?php\n\ntry\n{\n    erLhcoreClassRestAPIHandler::validateRequest();\n\n    $requestBody = json_decode(file_get_contents('php://input'),true);\n\n    $data = erLhcoreClassModelChatConfig::fetch('autologin_data')->data;\n\n    if ($data['enabled'] != 1) {\n        throw new Exception('Auto login module is disabled!');\n    }\n\n    if ($data['secret_hash'] == '') {\n        throw new Exception('Secret hash value is empty. Please set it in back office!');\n    }\n\n    if (!erLhcoreClassRestAPIHandler::hasAccessTo('lhuser', 'userautologin')) {\n        throw new Exception('You do not have permission to generate auto login link. `lhuser`, `userautologin` is required.');\n    }\n\n    function generateAutoLoginLink($params){\n\n        $dataRequest = array();\n        $dataRequestAppend = array();\n\n        // Destination ID\n        if (isset($params['r'])){\n            $dataRequest['r'] = $params['r'];\n            $dataRequestAppend[] = '/(r)/'.rawurlencode(base64_encode($params['r']));\n        }\n\n        // User ID\n        if (isset($params['u']) && is_numeric($params['u'])){\n            $dataRequest['u'] = $params['u'];\n            $dataRequestAppend[] = '/(u)/'.rawurlencode($params['u']);\n        }\n\n        // Username\n        if (isset($params['l'])){\n            $dataRequest['l'] = $params['l'];\n            $dataRequestAppend[] = '/(l)/'.rawurlencode($params['l']);\n        }\n\n        if (!isset($params['l']) && !isset($params['u'])) {\n            throw new Exception('Username or User ID has to be provided');\n        }\n\n        $ts = time() + $params['t'];\n\n        // Expire time for link\n        if (isset($params['t'])) {\n            $dataRequest['t'] = $ts;\n            $dataRequestAppend[] = '/(t)/'.rawurlencode($ts);\n        }\n\n        $hashValidation = sha1($params['secret_hash'].sha1($params['secret_hash'].implode(',', $dataRequest)));\n\n        return erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurldirect(\"user/autologin\") . \"/{$hashValidation}\".implode('', $dataRequestAppend);\n    }\n\n    $requestBody['secret_hash'] = $data['secret_hash'];\n\n    erLhcoreClassRestAPIHandler::outputResponse(array(\n        'error' => false,\n        'result' => generateAutoLoginLink($requestBody)\n    ));\n\n} catch (Exception $e) {\n    http_response_code(400);\n    echo erLhcoreClassRestAPIHandler::outputResponse(array(\n        'error' => true,\n        'result' => $e->getMessage()\n    ));\n}\n\nexit();\n\n", "<?php\n\nerLhcoreClassRestAPIHandler::setHeaders();\n\n$modeAPI = isset($_GET['api']) && $_GET['api'] == 'true';\n\ntry {\n    \n    if (!isset($_GET['token'])) {\n        throw new Exception('Token not found!');\n    }\n\n    $token = $_GET['token'];\n\n    $uSession = erLhcoreClassModelUserSession::findOne(array('filter' => array('token' => $token)));\n        \n    if ($uSession instanceof erLhcoreClassModelUserSession)\n    {\n        $currentUser = erLhcoreClassUser::instance();\n        $instance = erLhcoreClassSystem::instance();\n               \n        $userToLogin = erLhcoreClassModelUser::fetch((int)$uSession->user_id);           \n        \n        $r = '';\n        if (isset($_GET['r'])) {\n            $r = rawurldecode($_GET['r']);\n        }\n\n        if ($userToLogin instanceof erLhcoreClassModelUser) {\n            erLhcoreClassUser::instance()->setLoggedUser($userToLogin->id);\n            if ($modeAPI == false) {\n                header('Location: ' .erLhcoreClassDesign::baseurldirect('site_admin').'/'.ltrim($r, '/'));\n                exit;\n            } else {\n                echo json_encode(array('error' => false, 'msg' => 'Session started', 'url' => erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurldirect('site_admin').'/'.ltrim($r,'/')));\n                exit;\n            }\n        } else {\n            throw new Exception('User could not be found!');\n        }\n\n    } else {\n        throw new Exception('Token not found');        \n    }    \n\n} catch (Exception $e) {\n    \n    if ($modeAPI == false) {\n        http_response_code(400);\n        die($e->getMessage());\n    } else {\n        http_response_code(400);\n        echo json_encode(\n            array('error' => true, 'msg' => $e->getMessage())\n        );\n    }\n}\n\nexit;\n?>", "<?php \nheader('Access-Control-Allow-Origin: *');\nheader('Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept');\n\nif ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {\n\n    if (isset($_SERVER['HTTP_ACCESS_CONTROL_REQUEST_METHOD']))\n        // may also be using PUT, PATCH, HEAD etc\n        header(\"Access-Control-Allow-Methods: GET, POST, OPTIONS\");\n\n    if (isset($_SERVER['HTTP_ACCESS_CONTROL_REQUEST_HEADERS']))\n        header(\"Access-Control-Allow-Headers: {$_SERVER['HTTP_ACCESS_CONTROL_REQUEST_HEADERS']}\");\n\n    exit(0);\n}\n\nheader('Content-Type: application/json');\n\nob_start();\ninclude 'modules/lhrestapi/swagger.json';\n$content = ob_get_clean();\n\n$append_definitions = '';\n$append_paths = '';\n$chats_parameters = '';\n$elastic_definition = '';\n$elastic_mail = '';\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('restapi.swagger', array(\n    'elastic_mail_definition' => & $elastic_mail,\n    'elastic_definition' => & $elastic_definition,\n    'append_definitions' => & $append_definitions,\n    'append_paths' => & $append_paths,\n    'chats_parameters' => & $chats_parameters));\n\necho str_replace(\n    array('{{base_path}}','{{ts}}','{{host}}','{{append_definitions}}','{{append_paths}}', '{{chats_parameters}}','{{append_elastic_definitions}}','{{append_elastic_mail_definitions}}'),\n    array(erLhcoreClassDesign::baseurldirect(),time(),str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost()), $append_definitions, $append_paths, $chats_parameters,$elastic_definition,$elastic_mail)\n    , $content);\n\nexit;\n\n?>", "<?php\n\nheader('X-Frame-Options: DENY');\n\n$tpl = erLhcoreClassTemplate::getInstance( 'lhuser/forgotpassword.tpl.php');\n\n$currentUser = erLhcoreClassUser::instance();\n\nif (isset($_POST['Forgotpassword'])) {\n\n\t$definition = array(\n        'Email' => new ezcInputFormDefinitionElement(\n            ezcInputFormDefinitionElement::REQUIRED, 'validate_email'\n        )\n    );\n\n    $form = new ezcInputForm( INPUT_POST, $definition );\n\n    $Errors = array();\n    \n    if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\n        erLhcoreClassModule::redirect('user/forgotpassword');\n        exit;\n    }\n    \n    if ( !$form->hasValidData( 'Email' ) )\n    {\n        $Errors[] =  erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Invalid e-mail address!');\n    }\n\n    $recaptchaData = erLhcoreClassModelChatConfig::fetch('recaptcha_data')->data_value;\n\n    if (is_array($recaptchaData) && isset($recaptchaData['enabled']) && $recaptchaData['enabled'] == 1) {\n        $params = [\n            'secret'    => $recaptchaData['secret_key'],\n            'response'  => $_POST['g-recaptcha']\n        ];\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, 'https://www.google.com/recaptcha/api/siteverify');\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 5);\n        curl_setopt($ch,CURLOPT_POST,1);\n        curl_setopt($ch,CURLOPT_POSTFIELDS,$params);\n        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT , 5);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        @curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true); // Some hostings produces warning...\n        $res = curl_exec($ch);\n\n        $res = json_decode($res,true);\n\n        if (!(isset($res['success']) && $res['success'] == 1 && isset($res['score']) && $res['score'] >= 0.1 && $res['action'] == 'login_action')) {\n            $Errors[] = 'Invalid recaptcha!';\n        }\n    }\n\n\tif (count($Errors) == 0) {\n\n\t\tif (($userID = erLhcoreClassModelUser::fetchUserByEmail($form->Email)) !== false) {\n\n\t\t\t$host = erLhcoreClassSystem::getHost();\n\n\t\t\t$adminEmail = erConfigClassLhConfig::getInstance()->getSetting( 'site', 'site_admin_email' );\n\n\t\t\t$UserData = erLhcoreClassUser::getSession()->load( 'erLhcoreClassModelUser', $userID );\n\n\t\t\t$hash = erLhcoreClassModelForgotPassword::randomPassword(40);\n\n\t\t\terLhcoreClassModelForgotPassword::setRemindHash($UserData->id,$hash);\n\n\t\t\t$mail = new PHPMailer();\n\t\t\t$mail->CharSet = \"UTF-8\";\n\t\t\t$mail->From = $adminEmail;\n\n\t\t\t$mail->FromName = erConfigClassLhConfig::getInstance()->getSetting( 'site', 'title' );\n\t\t\t$mail->Subject = erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Password remind');\n\n\t\t\t// HTML body\n\t\t\t$body  = erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Click this link and You will be able to change a password').' </br><a href=\"' . (erLhcoreClassSystem::$httpsMode == true ? 'https://' : 'http://') . $host . erLhcoreClassDesign::baseurl('user/remindpassword').'/'.$hash.'\">Restore password</a>';\n\n\t\t\t// Plain text body\n\t\t\t$text_body  = erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Click this link and You will be able to change a password').' - ' . (erLhcoreClassSystem::$httpsMode == true ? 'https://' : 'http://') . $host . erLhcoreClassDesign::baseurl('user/remindpassword').'/'.$hash;\n\n\t\t\t$mail->Body    = $body;\n\t\t\t$mail->AltBody = $text_body;\n\t\t\t$mail->AddAddress( $UserData->email, $UserData->username);\n\n\t\t\terLhcoreClassChatMail::setupSMTP($mail);\n\n\t\t\t$mail->Send();\n\t\t\t$mail->ClearAddresses();\n\n\t\t\t$tpl = erLhcoreClassTemplate::getInstance( 'lhuser/forgotpasswordsent.tpl.php');\n\n\t\t} else {\n            $tpl = erLhcoreClassTemplate::getInstance( 'lhuser/forgotpasswordsent.tpl.php');\n\t\t}\n\n    }  else {\n        $tpl->set('errors',$Errors);\n    }\n}\n\n$Result['content'] = $tpl->fetch();\n$Result['pagelayout'] = 'login';\n\n?>", "<?php\n\nerLhcoreClassRestAPIHandler::setHeaders();\n\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\nheader(\"Pragma: no-cache\");\n\n$ignorable_ip = erLhcoreClassModelChatConfig::fetch('ignorable_ip')->current_value;\n\n$outputResponse = array('status' => true);\n\nif (\n    ($ignorable_ip != '' && erLhcoreClassIPDetect::isIgnored(erLhcoreClassIPDetect::getIP(),explode(',',$ignorable_ip)))\n    ||\n    (erLhcoreClassModelChatConfig::fetch('track_online_visitors')->current_value != 1)\n) {\n    erLhcoreClassRestAPIHandler::outputResponse(array('status' => false));\n    exit;\n}\n\nif (isset($_GET['dep'])) {\n    $parametersDepartment = erLhcoreClassChat::extractDepartment(explode(',',$_GET['dep']));\n    $department = $parametersDepartment['system'];\n} else {\n    $department = false;\n}\n\nif (isset($_GET['ua'])) {\n    $uarguments = explain(',',$_GET['ua']);\n} else {\n    $uarguments = false;\n}\n\n$proactiveInviteActive = erLhcoreClassModelChatConfig::fetch('pro_active_invite')->current_value;\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.chatcheckoperatormessage', array('proactive_active' => & $proactiveInviteActive));\n\n$injectInvitation = array();\n\n$paramsRequest = array(\n    'inject_html' => & $injectInvitation,\n    'tag' => isset($_GET['tag']) ? $_GET['tag'] : false,\n    'uactiv' => (isset($_GET['uactiv']) ? 1 : 0),\n    'wopen' => (isset($_GET['wopen']) ? 1 : 0),\n    //'tpl' => & $tpl,\n    'message_seen_timeout' => erLhcoreClassModelChatConfig::fetch('message_seen_timeout')->current_value,\n    'department' => $department,\n    'identifier' => (isset($_GET['idnt']) ? $_GET['idnt'] : ''),\n    'pages_count' => false,\n    'vid' => (string)$_GET['vid'],\n    'check_message_operator' => true,\n    'pro_active_limitation' =>  erLhcoreClassModelChatConfig::fetch('pro_active_limitation')->current_value,\n    'pro_active_invite' => $proactiveInviteActive);\n\n$userInstance = erLhcoreClassModelChatOnlineUser::handleRequest($paramsRequest);\n\n// Exit if not required\n$statusGeoAdjustment = erLhcoreClassChat::getAdjustment(erLhcoreClassModelChatConfig::fetch('geoadjustment_data')->data_value,'',false,$userInstance);\n\nif ($statusGeoAdjustment['status'] == 'offline' || $statusGeoAdjustment['status'] == 'hidden' || $userInstance === false) {\n    erLhcoreClassRestAPIHandler::outputResponse(array('status' => false));\n    exit;\n}\n\n$outputResponse['vid_id'] = $userInstance->id;\n\nif ($userInstance->invitation_id == -1) {\n    $userInstance->invitation_id = 0;\n    $userInstance->invitation_assigned = true;\n    $userInstance->saveThis();\n}\n\n$dynamic = true;\n\nif ($userInstance->reopen_chat == 1 && ($chat = $userInstance->chat) !== false && $chat->user_status == erLhcoreClassModelChat::USER_STATUS_PENDING_REOPEN) {\n    $reopen_chat = $chat;\n    $dynamic = false;\n}\n\n// If there is no assigned default proactive invitations find dynamic one triggers\n$dynamicEveryTime = $userInstance->invitation instanceof erLhAbstractModelProactiveChatInvitation && $userInstance->invitation->dynamic_invitation == 1 && $userInstance->invitation->show_instant == 0;\n\nif ($dynamic == true && $userInstance->message_seen == 0 && ($userInstance->operator_message == '' || $dynamicEveryTime == true) && !isset($_GET['wopen'])) {\n    if (isset($_GET['init']) && $_GET['init'] == 1) {\n        $dynamicProcessed = isset($_GET['dyn']) ? explode(',', $_GET['dyn']) : array();\n        $dynamic_invitation = erLhcoreClassModelChatOnlineUser::getDynamicInvitation(array('online_user' => $userInstance, 'tag' => isset($_GET['tag']) ? $_GET['tag'] : false));\n        foreach ($dynamic_invitation as $dynamicInvitation) {\n            if (in_array($dynamicInvitation->id, $dynamicProcessed)) {\n                continue; // Skip if particular invitation was already shown\n            }\n            $outputResponse['dynamic'][] = array(\n                'id' => $dynamicInvitation->id,\n                'type' => $dynamicInvitation->event_type,\n                'iddle_for' => $dynamicInvitation->iddle_for,\n                'inject_html' => isset($dynamicInvitation->design_data_array['inject_html']) && $dynamicInvitation->design_data_array['inject_html'] != ''\n            );\n        }\n    }\n}\n\nif (isset($reopen_chat)) {\n    $outputResponse['reopen'] = array(\n        'id' => $reopen_chat->id,\n        'hash' => $reopen_chat->hash\n    );\n} elseif (\n        (\n            $userInstance->has_message_from_operator == true ||\n\n            ($appendInvitation = ($userInstance->invitation instanceof erLhAbstractModelProactiveChatInvitation && ($userInstance->message_seen == 0 || isset($userInstance->invitation->design_data_array['keep_after_close']) && $userInstance->invitation->design_data_array['keep_after_close'] == 1) && isset($userInstance->invitation->design_data_array['append_bot']) && $userInstance->invitation->design_data_array['append_bot'] == 1 && $userInstance->invitation->bot_id > 0 && $userInstance->invitation->trigger_id > 0)) == true\n        ) &&\n        (!isset($dynamicEveryTime) || $dynamicEveryTime == false)\n) {\n    $outputResponse['status'] = false;\n\n    if ($userInstance->invitation instanceof erLhAbstractModelProactiveChatInvitation && $userInstance->invitation->show_on_mobile == 1) {\n\n        if (($userInstance->invitation_assigned == false && $userInstance->invitation->delay > 0) || $userInstance->invitation->delay_init > 0) {\n            $outputResponse['delay'] = ($userInstance->invitation_assigned == true ? $userInstance->invitation->delay_init : $userInstance->invitation->delay) * 1000;\n        }\n\n        if (isset($userInstance->invitation->design_data_array['mobile_html']) && $userInstance->invitation->design_data_array['mobile_html'] != '') {\n\n            if (isset($userInstance->invitation->design_data_array['mobile_style']) && $userInstance->invitation->design_data_array['mobile_style'] != '') {\n\n                $replaceStyleArray = array();\n\n                for ($i = 1; $i < 5; $i++) {\n                    $replaceStyleArray['{proactive_img_' . $i . '}'] = erLhcoreClassSystem::getHost() . $userInstance->invitation->{'design_data_img_' . $i . '_url'};\n                }\n\n                $contentCSS = str_replace(array_keys($replaceStyleArray), array_values($replaceStyleArray), $userInstance->invitation->design_data_array['mobile_style']);\n                $contentCSS = str_replace(array(\"\\n\", \"\\r\"), '', $contentCSS);\n                $outputResponse['site_css'] = json_encode($contentCSS);\n            }\n\n            $outputResponse['html_invitation'] = json_encode(str_replace(array(\"\\n\", \"\\r\", '{readmessage}', '{hideInvitation}'), array('', '', \"return lh_inst.showHTMLInvitation(lh_inst.invitationURL)\", \"return lh_inst.hideHTMLInvitation()\"), $userInstance->invitation->design_data_array['mobile_html']));\n\n        } else {\n            $outputResponse['invitation'] = $userInstance->invitation->id;\n        }\n\n    } else {\n        if ($userInstance->invitation instanceof erLhAbstractModelProactiveChatInvitation) {\n            if (($userInstance->invitation_assigned == false && $userInstance->invitation->delay > 0) || $userInstance->invitation->delay_init > 0) {\n                $outputResponse['delay'] = ($userInstance->invitation_assigned == true ? $userInstance->invitation->delay_init : $userInstance->invitation->delay) * 1000;\n            }\n\n            if (isset($userInstance->invitation->design_data_array['inject_html']) && $userInstance->invitation->design_data_array['inject_html'] != '') {\n                $outputResponse['inject_html'] = true;\n            }\n\n            $outputResponse['invitation'] = $userInstance->invitation->id;\n        } else {\n            $outputResponse['invitation'] = true;\n        }\n    }\n}\n\nif ($userInstance->operation != '' && (int)$_GET['wopen'] == 0) {\n    $outputResponse['operation'] = $userInstance->operation;\n    $userInstance->operation = '';\n    $userInstance->operation_chat = '';\n    $userInstance->saveThis();\n}\n\nif (isset($_GET['init']) && $_GET['init'] == 1) {\n\n    if ($userInstance->next_reschedule > 0) {\n        $outputResponse['next_reschedule'] = ($userInstance->next_reschedule + 1) * 1000;\n    }\n\n    $injectInvitations = erLhcoreClassModelChatOnlineUser::getInjectHTMLInvitation(array('online_user' => $userInstance, 'tag' => isset($_GET['tag']) ? $_GET['tag'] : false));\n    foreach ($injectInvitations as $injectInvitation) {\n        $outputResponse['dynamic'][] = array(\n            'id' => $injectInvitation->id,\n            'type' => $injectInvitation->event_type,\n            'iddle_for' => $injectInvitation->iddle_for,\n            'only_inject' => true,\n            'inject_html' => true,\n            'every_time' => !(!isset($injectInvitation->design_data_array['dynamic_everytime']) || $injectInvitation->design_data_array['dynamic_everytime'] == 0)\n        );\n    }\n}\n\n\n$outputResponse['qinv'] = isset($userInstance->online_attr_system_array['qinv']) || ($userInstance->has_message_from_operator == false && isset($appendInvitation) && $appendInvitation == true);\n\nerLhcoreClassRestAPIHandler::outputResponse($outputResponse);\nexit;\n\n?>", "<?php\nerLhcoreClassRestAPIHandler::setHeaders();\n\n$settings = array(\n    'nodejssettings' => array(\n        'nodejssocket' => erLhcoreClassModelChatConfig::fetch('sharing_nodejs_sllocation')->current_value,\n        'nodejshost' => (erLhcoreClassModelChatConfig::fetch('sharing_nodejs_socket_host')->current_value != '' ? erLhcoreClassModelChatConfig::fetch('sharing_nodejs_socket_host')->current_value : str_replace(['http://','https://'],'',erLhcoreClassSystem::getHost())),\n        'path' => erLhcoreClassModelChatConfig::fetch('sharing_nodejs_path')->current_value,\n        'secure' => ((int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_secure')->current_value == 1 ? true : false)\n    ),\n    'auto_share' => (int)erLhcoreClassModelChatConfig::fetch('sharing_auto_allow')->current_value,\n    'cobrowser' => erLhcoreClassSystem::getHost() . erLhcoreClassDesign::designJS('js/cobrowse/compiled/cobrowse.visitor.min.js'),\n    'nodejsenabled' => (int)erLhcoreClassModelChatConfig::fetch('sharing_nodejs_enabled')->current_value,\n    'trans' => array(\n        'operator_watching' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/getstatus', 'Screen shared, click to finish'),\n        'start_share' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/screenshare','Start screen share session'),\n        'deny' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/screenshare','Deny screen share'),\n    ),\n    'url' => erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurlsite() . '/cobrowse/storenodemap/(sharemode)/chat'\n);\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('widgetrestapi.screensharesettings', array('output' => & $settings));\n\nerLhcoreClassRestAPIHandler::outputResponse($settings);\nexit();\n\n?>", "<?php\n\nerLhcoreClassRestAPIHandler::setHeaders();\n\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\nheader(\"Pragma: no-cache\");\n\nif (isset($_SERVER['HTTP_ORIGIN']) && !empty($_SERVER['HTTP_ORIGIN'])) {\n    $validDomains = (string)erLhcoreClassModelChatConfig::fetch('valid_domains')->current_value;\n    if (!empty($validDomains)) {\n        $validDomainsList = explode(',',$validDomains);\n        $validDomain = false;\n        foreach ($validDomainsList as $validDomainItem) {\n            if (strpos($_SERVER['HTTP_ORIGIN'],trim($validDomainItem)) !== false) {\n                $validDomain = true;\n            }\n        }\n\n        if ($validDomain == false) {\n            erLhcoreClassRestAPIHandler::outputResponse(array('terminate' => true));\n            exit;\n        }\n    }\n}\n\nif (isset($_SERVER['HTTP_USER_AGENT']) && erLhcoreClassModelChatOnlineUser::isBot($_SERVER['HTTP_USER_AGENT'])) {\n    erLhcoreClassRestAPIHandler::outputResponse(array('terminate' => true));\n    exit;\n}\n\nif (isset($_GET['dep']) && is_array($_GET['dep']) && !empty($_GET['dep'])){\n    $department = (isset($_GET['dep']) && is_array($_GET['dep']) && !empty($_GET['dep']) ? $_GET['dep'] : false);\n} else if (isset($_GET['dep']) && $_GET['dep'] != '') {\n    $department = explode(',',$_GET['dep']);\n} else {\n    $department = false;\n}\n\nif (is_array($department)) {\n    $parametersDepartment = erLhcoreClassChat::extractDepartment($department);\n    $department = $parametersDepartment['system'];\n    $departmentArgument = $parametersDepartment['argument'];\n} else {\n    $departmentArgument = $department;\n}\n\n$departmentUpdated = $department;\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('widgetrestapi.settings_department_verify', array('department' => & $departmentUpdated));\n\n$outputResponse = array(\n    'isOnline' => erLhcoreClassChat::isOnline($departmentUpdated, false, array(\n        'online_timeout' => (int) erLhcoreClassModelChatConfig::fetch('sync_sound_settings')->data['online_timeout'],\n        'ignore_user_status' => (int)erLhcoreClassModelChatConfig::fetch('ignore_user_status')->current_value\n    )),\n    'hideOffline' => false,\n    'vid' => isset($_GET['vid']) ? $_GET['vid'] : substr(sha1(mt_rand() . microtime()),0,20)\n);\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('widgetrestapi.settings_department_after_verify', array('department' => & $department, 'output' => & $outputResponse));\n\n$ignorable_ip = erLhcoreClassModelChatConfig::fetch('ignorable_ip')->current_value;\n$fullHeight = (isset($Params['user_parameters_unordered']['fullheight']) && $Params['user_parameters_unordered']['fullheight'] == 'true') ? true : false;\n\nif ( $ignorable_ip == '' || !erLhcoreClassIPDetect::isIgnored(erLhcoreClassIPDetect::getIP(),explode(',',$ignorable_ip))) {\n\n    $jsVars = array();\n\n    // Additional javascript variables\n    if (is_array($department) && !empty($department)) {\n        foreach (erLhAbstractModelChatVariable::getList(array('ignore_fields' => array('dep_id','var_name','var_identifier','type'), 'customfilter' => array('dep_id = 0 OR dep_id IN (' . implode(',',$department) .')'))) as $jsVar) {\n            $jsVars[] = array('id' => $jsVar->id,'var' => $jsVar->js_variable);\n        }\n    } else {\n        foreach (erLhAbstractModelChatVariable::getList(array('ignore_fields' => array('dep_id','var_name','var_identifier','type'), 'filter' => array('dep_id' => 0))) as $jsVar) {\n            $jsVars[] = array('id' => $jsVar->id, 'var' => $jsVar->js_variable);\n        }\n    }\n\n    $outputResponse['js_vars'] = $jsVars;\n\n    if (is_array($Params['user_parameters_unordered']['ua'])){\n        $uarguments = $Params['user_parameters_unordered']['ua'];\n    } else {\n        $uarguments = false;\n    }\n\n    $proactiveInviteActive = erLhcoreClassModelChatConfig::fetch('pro_active_invite')->current_value;\n\n    erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.chatcheckoperatormessage', array('proactive_active' => & $proactiveInviteActive));\n\n    $injectInvitation = array();\n\n    if ((isset($_GET['cd']) && $_GET['cd'] == 1) || erLhcoreClassModelChatConfig::fetch('track_online_visitors')->current_value != 1) {\n        $userInstance = false;\n    } else {\n        $userInstance = erLhcoreClassModelChatOnlineUser::handleRequest(array('inject_html' => & $injectInvitation, 'tag' => isset($_GET['tag']) ? $_GET['tag'] : false, 'uactiv' => 1, 'wopen' => 0 /*@todo add support if request is made and widget is open, chat is going*/, 'tpl' => & $tpl, 'tz' => (isset($_GET['tz']) ? $_GET['tz'] : null), 'message_seen_timeout' => erLhcoreClassModelChatConfig::fetch('message_seen_timeout')->current_value, 'department' => $department, 'identifier' => (isset($_GET['idnt']) ? (string)$_GET['idnt'] : ''), 'pages_count' => true, 'vid' => $outputResponse['vid'], 'check_message_operator' => true, 'pro_active_limitation' =>  erLhcoreClassModelChatConfig::fetch('pro_active_limitation')->current_value, 'pro_active_invite' => $proactiveInviteActive));\n    }\n\n    // Exit if not required\n    $statusGeoAdjustment = erLhcoreClassChat::getAdjustment(erLhcoreClassModelChatConfig::fetch('geoadjustment_data')->data_value,'',false, $userInstance);\n\n    if ($statusGeoAdjustment['status'] == 'offline' || $statusGeoAdjustment['status'] == 'hidden') {\n\n        if ($statusGeoAdjustment['status'] == 'hidden') {\n            $outputResponse['hideOffline'] = true;\n        }\n\n        $outputResponse['isOnline'] = false;\n    }\n\n    if ($userInstance !== false) {\n\n        if (erLhcoreClassModelChatConfig::fetch('track_footprint')->current_value == 1 && erLhcoreClassModelChatOnlineUser::getReferer() != '') {\n            erLhcoreClassModelChatOnlineUserFootprint::addPageView($userInstance);\n        }\n\n        if ($userInstance->operation != '') {\n            $outputResponse['operation'] = explode(\"\\n\", trim($userInstance->operation_chat));\n            $userInstance->operation = '';\n            $userInstance->operation_chat = '';\n            $userInstance->updateThis(array('update' => array('operation','operation_chat')));\n        }\n\n        if ($userInstance->invitation_id == -1) {\n            $userInstance->invitation_id = 0;\n            $userInstance->invitation_assigned = true;\n            $userInstance->saveThis();\n        }\n    }\n}\n\nif (($themeId = erLhcoreClassChat::extractTheme()) !== false) {\n    $outputResponse['theme'] = $themeId;\n} else {\n    $defaultTheme = erLhcoreClassModelChatConfig::fetch('default_theme_id')->current_value;\n    if ($defaultTheme > 0) {\n        $outputResponse['theme'] = (int)$defaultTheme;\n    }\n}\n\n$pageCSS = false;\n\nif (isset($outputResponse['theme'])) {\n    $theme = erLhAbstractModelWidgetTheme::fetch($outputResponse['theme']);\n\n    if ($theme instanceof erLhAbstractModelWidgetTheme) {\n\n        $outputResponse['theme'] = $theme->alias != '' ? $theme->alias : $theme->id;\n\n        if (isset($theme->bot_configuration_array['wwidth']) && $theme->bot_configuration_array['wwidth'] > 0) {\n            $outputResponse['chat_ui']['wwidth'] = (int)$theme->bot_configuration_array['wwidth'];\n        }\n\n        if (isset($theme->bot_configuration_array['wheight']) && $theme->bot_configuration_array['wheight'] > 0) {\n            $outputResponse['chat_ui']['wheight'] = (int)$theme->bot_configuration_array['wheight'];\n        }\n\n        if (isset($theme->bot_configuration_array['fscreen_embed']) && $theme->bot_configuration_array['fscreen_embed'] == 1) {\n            $outputResponse['chat_ui']['fscreen'] = (int)$theme->bot_configuration_array['fscreen_embed'];\n        }\n\n        if (isset($theme->bot_configuration_array['wright']) && is_numeric($theme->bot_configuration_array['wright'])) {\n            $outputResponse['chat_ui']['wright'] = (int)$theme->bot_configuration_array['wright'];\n        }\n\n        if (isset($theme->bot_configuration_array['hide_iframe']) && $theme->bot_configuration_array['hide_iframe'] == 1) {\n            $outputResponse['chat_ui']['hide_iframe'] = 1;\n        }\n\n        if (isset($theme->bot_configuration_array['hide_parent']) && $theme->bot_configuration_array['hide_parent'] == 1) {\n            $outputResponse['chat_ui']['hide_parent'] = 1;\n        }\n\n        if ($theme->widget_pbottom != 0) {\n            $outputResponse['chat_ui']['sbottom'] = (int)$theme->widget_pbottom;\n        }\n\n        if ($theme->widget_pright != 0) {\n            $outputResponse['chat_ui']['sright'] = (int)$theme->widget_pright;\n        }\n\n        if (isset($theme->bot_configuration_array['wright_inv']) && is_numeric($theme->bot_configuration_array['wright_inv'])) {\n            $outputResponse['chat_ui']['wright_inv'] = (int)$theme->bot_configuration_array['wright_inv'];\n        }\n\n        if (isset($theme->bot_configuration_array['wbottom']) && is_numeric($theme->bot_configuration_array['wbottom'])) {\n            $outputResponse['chat_ui']['wbottom'] = (int)$theme->bot_configuration_array['wbottom'];\n        }\n\n        $outputResponse['theme_v'] = $theme->modified;\n\n        if ($theme->custom_container_css !== ''){\n            $outputResponse['cont_css'] =  str_replace(array(\"\\n\",\"\\r\"), '', $theme->custom_container_css);\n        }\n\n        if (isset($theme->bot_configuration_array['kcw']) && $theme->bot_configuration_array['kcw'] == 1) {\n            $outputResponse['chat_ui']['kcw'] = 1;\n        }\n\n        if (isset($theme->bot_configuration_array['custom_page_css']) && $theme->bot_configuration_array['custom_page_css'] != '') {\n            $pageCSS = true;\n        }\n\n        if ($theme instanceof erLhAbstractModelWidgetTheme && isset($theme->bot_configuration_array['detect_language']) && $theme->bot_configuration_array['detect_language'] == true) {\n            $siteaccess = erLhcoreClassChatValidator::setLanguageByBrowser(true);\n            if ($siteaccess != '') {\n                $outputResponse['siteaccess'] = $siteaccess . '/';\n                erLhcoreClassSystem::setSiteAccess($siteaccess);\n            }\n        }\n\n        if (isset($theme->bot_configuration_array['header_html']) && $theme->bot_configuration_array['header_html'] != '') {\n            $outputResponse['chat_ui']['hhtml'] = $theme->bot_configuration_array['header_html'];\n        }\n\n        if (isset($theme->bot_configuration_array['close_in_status']) && $theme->bot_configuration_array['close_in_status'] == true) {\n            $outputResponse['chat_ui']['clinst'] = true;\n        }\n\n        if ($theme->enable_widget_embed_override == 1) {\n           $outputResponse['chat_ui']['leaveamessage'] = $theme->widget_show_leave_form == 1;\n\n           if ($theme->widget_popheight > 0 && $theme->widget_popwidth > 0) {\n               $outputResponse['pdim'] = ['pheight' => $theme->widget_popheight, 'pwidth' => $theme->widget_popwidth];\n           }\n\n           if ($theme->widget_survey > 0) {\n               $outputResponse['survey_id'] = $theme->widget_survey;\n           }\n\n           if ($theme->widget_position != '') {\n               $outputResponse['wposition'] = $theme->widget_position;\n           }\n        }\n\n        $outputResponse['chat_ui']['sound_enabled'] = (isset($theme->bot_configuration_array['disable_sound']) && $theme->bot_configuration_array['disable_sound'] == 1) ? 0 : 1;\n    }\n}\n\nif ((int)erLhcoreClassModelChatConfig::fetch('checkstatus_timeout')->current_value > 0){\n    $outputResponse['chat_ui']['check_status'] = (int)erLhcoreClassModelChatConfig::fetch('checkstatus_timeout')->current_value;\n\n    if ((int)erLhcoreClassModelChatConfig::fetch('track_activity')->current_value > 0) {\n        $outputResponse['chat_ui']['track_activity'] = true;\n    }\n\n    if ((int)erLhcoreClassModelChatConfig::fetch('track_mouse_activity')->current_value > 0) {\n        $outputResponse['chat_ui']['track_mouse'] = true;\n    }\n}\n\n$soundData = erLhcoreClassModelChatConfig::fetch('sync_sound_settings')->data_value;\n\n$outputResponse['chat_ui']['proactive_interval'] = (int)($soundData['check_for_operator_msg']);\n\nif (!isset($outputResponse['chat_ui']['sound_enabled'])) {\n    $outputResponse['chat_ui']['sound_enabled'] = (int)($soundData['new_message_sound_user_enabled']);\n}\n\nif (erLhcoreClassModelChatConfig::fetch('use_secure_cookie')->current_value == 1) {\n    $outputResponse['secure_cookie'] = true;\n}\n\nif (($domain = erLhcoreClassModelChatConfig::fetch('track_domain')->current_value) != '') {\n    $outputResponse['domain'] = $domain;\n}\n\n$startDataDepartment = false;\n\nif (is_array($department) && !empty($department) && count($department) == 1) {\n    $dep_id = $department[0];\n    $startDataDepartment = erLhcoreClassModelChatStartSettings::findOne(array('filter' => array('department_id' => $dep_id)));\n    if ($startDataDepartment instanceof erLhcoreClassModelChatStartSettings) {\n        $startDataFields = $startDataDepartment->data_array;\n    }\n}\n\nif ($startDataDepartment === false) {\n    $startData = erLhcoreClassModelChatConfig::fetch('start_chat_data');\n    $start_data_fields = $startDataFields = (array)$startData->data;\n}\n\n$disableNeedHelp = false;\n\nif (isset($start_data_fields['pre_conditions']) && !empty($start_data_fields['pre_conditions'])) {\n    $preConditions = json_decode($start_data_fields['pre_conditions'], true);\n    if (\n        (isset($preConditions['online']) && !empty($preConditions['online'])) ||\n        (isset($preConditions['offline']) && !empty($preConditions['offline'])) ||\n        (isset($preConditions['disable']) && !empty($preConditions['disable'])) ) {\n        $outcome = erLhcoreClassChatValidator::validatePreconditions($preConditions, ['is_online' => (int)$outputResponse['isOnline'], 'online_user' => (isset($userInstance) ? $userInstance : false)]);\n        if ($outcome['mode'] == 'terminate') {\n            erLhcoreClassRestAPIHandler::outputResponse(array('terminate' => true));\n            exit;\n        } else if ($outcome['mode'] == 'offline') {\n            $outputResponse['isOnline'] = false;\n        } else if ($outcome['mode'] == 'disable') {\n            $disableNeedHelp = true;\n            $outputResponse['disable_proactive'] = true;\n        }\n    }\n}\n\n$needHelpTimeout = isset($theme) && $theme instanceof erLhAbstractModelWidgetTheme ? $theme->show_need_help_timeout : erLhcoreClassModelChatConfig::fetch('need_help_tip_timeout')->current_value;\n\nif ($disableNeedHelp === false && ((isset($theme) && $theme instanceof erLhAbstractModelWidgetTheme && $theme->show_need_help == 1 && (!isset($theme->bot_configuration_array['hide_mobile_nh']) || $theme->bot_configuration_array['hide_mobile_nh'] == false || (isset($userInstance) && $userInstance !== false && $theme->bot_configuration_array['hide_mobile_nh'] == true && in_array($userInstance->device_type,array(1,3))) )) || (!isset($theme) && erLhcoreClassModelChatConfig::fetch('need_help_tip')->current_value == 1)) && $needHelpTimeout > 0 && (!isset($_GET['hnh']) || $_GET['hnh'] < (time() - ($needHelpTimeout * 24 * 3600))))\n{\n    $configInstance = erConfigClassLhConfig::getInstance();\n\n    $nhCloseVisible = true;\n    if (isset($theme) && $theme instanceof erLhAbstractModelWidgetTheme && isset($theme->bot_configuration_array['hide_close_nh']) && $theme->bot_configuration_array['hide_close_nh'] == true) {\n        $nhCloseVisible = false;\n    }\n\n    $outputResponse['nh']['html'] = '<div class=\"container-fluid overflow-auto fade-in p-3 pb-4 {dev_type}\" >\n<div class=\"shadow rounded bg-white nh-background\">\n    <div class=\"p-2\" id=\"start-chat-btn\" style=\"cursor: pointer\">\n        ' . ($nhCloseVisible === false ? '' : '<button type=\"button\" id=\"close-need-help-btn\" class=\"close position-absolute\" style=\"' . ($configInstance->getDirLanguage('dir_language') == 'ltr' ? 'right' : 'left') . ':30px;top:25px;\" aria-label=\"Close\">\n          <span class=\"px-1\" aria-hidden=\"true\">&times;</span>\n        </button>') . '\n        <div class=\"d-flex\">\n          <div class=\"p-1\"><img style=\"min-width: 50px;\" alt=\"Customer service\" class=\"img-fluid rounded-circle\" src=\"{{need_help_image_url}}\"/></div>\n          <div class=\"p-1 flex-grow-1\"><h6 class=\"mb-0\">{{need_help_header}}</h6>\n            <p class=\"mb-1\" style=\"font-size: 14px\">{{need_help_body}}</p></div>\n        </div>\n    </div>\n</div>\n</div>';\n\n    $outputResponse['nh']['delay'] = 1500;\n\n    $translationInstance = erTranslationClassLhTranslation::getInstance();\n\n    if (isset($theme) && $theme instanceof erLhAbstractModelWidgetTheme) {\n\n        if ($theme->show_need_help_delay > 0) {\n            $outputResponse['nh']['delay'] = (int)$theme->show_need_help_delay * 1000;\n        }\n\n        if (isset($theme->bot_configuration_array['always_present_nh']) && $theme->bot_configuration_array['always_present_nh'] == true) {\n            $outputResponse['nh']['ap'] = true;\n        }\n\n        $theme->translate();\n\n        if (isset($theme->bot_configuration_array['need_help_html']) && !empty($theme->bot_configuration_array['need_help_html'])){\n            $outputResponse['nh']['html'] = $theme->bot_configuration_array['need_help_html'];\n        }\n\n        $replaceVars = $theme->replace_array;\n\n        if ($theme->need_help_image_url === false) {\n            if ((isset($theme->bot_configuration_array['nh_avatar']) && $theme->bot_configuration_array['nh_avatar'] != '')) {\n                $replaceVars['replace'][8] = erLhcoreClassSystem::getHost() .erLhcoreClassDesign::baseurldirect('widgetrestapi/avatar') . '/' . $theme->bot_configuration_array['nh_avatar'];\n            } else {\n                $replaceVars['replace'][8] = erLhcoreClassSystem::getHost() . erLhcoreClassDesign::design('images/general/operator.png');\n            }\n        }\n\n        $replaceVars['search'][] = '{{need_help_header}}';\n        $replaceVars['search'][] = '{{need_help_body}}';\n\n        $replaceVars['replace'][] = $theme->need_help_header != '' ? $theme->need_help_header : $translationInstance->getTranslation('chat/getstatus', 'Need help?');\n        $replaceVars['replace'][] = $theme->need_help_text != '' ? $theme->need_help_text : $translationInstance->getTranslation('chat/getstatus', 'Our staff are ready to help!');\n    } else {\n        $replaceVars = array(\n            'search' => array(\n                '{{need_help_image_url}}',\n                '{{need_help_header}}',\n                '{{need_help_body}}',\n            ),\n            'replace' => array(\n                erLhcoreClassSystem::getHost() . erLhcoreClassDesign::design('images/general/operator.png'),\n                $translationInstance->getTranslation('chat/getstatus', 'Need help?'),\n                $translationInstance->getTranslation('chat/getstatus', 'Our staff are ready to help!')\n            )\n        );\n    }\n\n    $outputResponse['nh']['html'] = str_replace($replaceVars['search'], $replaceVars['replace'], $outputResponse['nh']['html']);\n\n    $attrDimensions = array(\n        'nh_bottom' => 'bottom',\n        'nh_right' => 'right',\n        'nh_height' => 'height',\n        'nh_width' => 'width',\n    );\n\n    foreach ($attrDimensions as $attrDimension => $attrName){\n        if (isset($theme) && $theme instanceof erLhAbstractModelWidgetTheme && isset($theme->bot_configuration_array[$attrDimension]) && is_numeric($theme->bot_configuration_array[$attrDimension])){\n            $outputResponse['nh']['dimensions'][$attrName] = (int)$theme->bot_configuration_array[$attrDimension] . 'px';\n        }\n    }\n}\n\nif (!isset($outputResponse['chat_ui']['leaveamessage'])) {\n    $outputResponse['chat_ui']['leaveamessage'] = (isset($startDataFields['force_leave_a_message']) && $startDataFields['force_leave_a_message'] == true) ? true : false;\n}\n\n$outputResponse['chat_ui']['mobile_popup'] = isset($startDataFields['mobile_popup']) && $startDataFields['mobile_popup'] == true;\n\nif (isset($startDataFields['lazy_load']) && $startDataFields['lazy_load'] == true) {\n    $outputResponse['ll'] = true;\n}\n\n$ts = time();\n\n// Wrapper version\n$outputResponse['wv'] = 195;\n\n// React APP versions\n$outputResponse['v'] = 242;\n\n$outputResponse['hash'] = sha1(erLhcoreClassIPDetect::getIP() . $ts . erConfigClassLhConfig::getInstance()->getSetting( 'site', 'secrethash' ));\n$outputResponse['hash_ts'] = $ts;\n\nif (is_array($department) && !empty($department)) {\n    $outputResponse['department'] = $departmentArgument;\n}\n\n$gaOptions = erLhcoreClassModelChatConfig::fetch('ga_options')->data_value;\n\nif (isset($gaOptions['ga_enabled']) && $gaOptions['ga_enabled'] == true) {\n    $optionEvents = array(\n        'showWidget',\n        'closeWidget',\n        'openPopup',\n        'endChat',\n        'chatStarted',\n        'offlineMessage',\n        'showInvitation',\n        'hideInvitation',\n        'nhClicked',\n        'nhClosed',\n        'nhShow',\n        'nhHide',\n        'fullInvitation',\n        'cancelInvitation',\n        'readInvitation',\n        'clickAction',\n        'botTrigger',\n    );\n\n    $continueTrack = false;\n\n    if ((isset($gaOptions['ga_all']) &&  $gaOptions['ga_all'] == true) || (isset($gaOptions['ga_dep']) && is_array($department) && count(array_intersect($department,$gaOptions['ga_dep'])) > 0)) {\n        $continueTrack = true;\n    }\n\n    if (isset($dep_id) && $dep_id > 0) {\n        $gaByDep = erLhcoreClassModelChatEventTrack::findOne(array('filter' => array('department_id' => $dep_id)));\n        if ($gaByDep instanceof erLhcoreClassModelChatEventTrack) {\n            $gaOptions = $gaByDep->data_array;\n            $continueTrack = true;\n        }\n    }\n\n    if ($continueTrack == true) {\n        foreach ($optionEvents as $optionEvent) {\n            if (isset($gaOptions[$optionEvent .'_on']) && $gaOptions[$optionEvent .'_on'] == 1) {\n                $outputResponse['ga']['events'][] = array(\n                    'ev' => $optionEvent,\n                    'ec' => $gaOptions[$optionEvent .'_category'],\n                    'ea' => $gaOptions[$optionEvent .'_action'],\n                    'el' => (isset($gaOptions[$optionEvent .'_label']) ? $gaOptions[$optionEvent .'_label'] : ''),\n                );\n            }\n        }\n\n        $outputResponse['ga']['events'][] = array(\n            'ev' => 'trackingEvent',\n            'ec' => 'Widget',\n            'ea' => 'Click',\n            'el' => '',\n        );\n\n        $outputResponse['ga']['js'] = $gaOptions['ga_js'];\n    }\n}\n\n$host = erLhcoreClassSystem::getHost();\n\n$outputResponse['static'] = array(\n    'screenshot' =>  $host . erLhcoreClassDesign::design('js/html2canvas.min.js'). '?v=' . $outputResponse['v'],\n    'app' => $host . ((isset($_GET['ie']) && $_GET['ie'] == 'true') ? erLhcoreClassDesign::design('js/widgetv2/react.app.ie.js') . '?v=' . $outputResponse['v'] : erLhcoreClassDesign::design('js/widgetv2/react.app.js') . '?v=' . $outputResponse['v']),\n    'vendor' => $host . ((isset($_GET['ie']) && $_GET['ie'] == 'true') ? erLhcoreClassDesign::design('js/widgetv2/vendor.ie.js') . '?v=a2' : erLhcoreClassDesign::design('js/widgetv2/vendor.js') . '?v=a2'),\n    'widget_css' => $host . (erConfigClassLhConfig::getInstance()->getDirLanguage('dir_language') == 'ltr' ? erLhcoreClassDesign::designCSS('css/widgetv2/bootstrap.min.css;css/widgetv2/widget.css;css/widgetv2/widget_override.css') : erLhcoreClassDesign::designCSS('css/widgetv2/bootstrap.min.rtl.css;css/widgetv2/widget.css;css/widgetv2/widget_rtl.css;css/widgetv2/widget_override_rtl.css')),\n    'dir' => erConfigClassLhConfig::getInstance()->getDirLanguage('dir_language'),\n    'cl' => erConfigClassLhConfig::getInstance()->getDirLanguage('content_language'),\n    'widget_mobile_css' => $host . erLhcoreClassDesign::designCSS('css/widgetv2/widget_mobile.css;css/widgetv2/widget_mobile_override.css'),\n    'embed_css' => $host . erLhcoreClassDesign::designCSS('css/widgetv2/embed.css;css/widgetv2/embed_override.css'),\n    'status_css' => $host . erLhcoreClassDesign::designCSS('css/widgetv2/status.css;css/widgetv2/status_override.css'),\n    'font_status' => $host . erLhcoreClassDesign::design('fonts/MaterialIcons-lhc-v4.woff2'),\n    'chunk_js' => $host . erLhcoreClassDesign::design('js/widgetv2'),\n    'page_css' => $pageCSS,\n    'ex_js' => [],\n    'ex_cb_js' => []\n);\n\n$outputResponse['chunks_location'] = $host . erLhcoreClassDesign::design('js/widgetv2');\n$outputResponse['domain_lhc'] = str_replace(['http://','https://'],'',$host);\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('widgetrestapi.settings', array('output' => & $outputResponse));\n\nerLhcoreClassRestAPIHandler::outputResponse($outputResponse);\nexit();", "<html>\n<head>\n    <script src=\"<?php echo erLhcoreClassSystem::getHost()?><?php echo erLhcoreClassDesign::design('js/widgetv2/index.js')?>?t=<?php echo time()?>\"></script>\n    <meta http-equiv=\"cache-control\" content=\"no-cache, must-revalidate, post-check=0, pre-check=0\" />\n    <meta http-equiv=\"cache-control\" content=\"max-age=0\" />\n    <meta http-equiv=\"expires\" content=\"0\" />\n    <meta http-equiv=\"expires\" content=\"Tue, 01 Jan 1980 1:00:00 GMT\" />\n    <meta http-equiv=\"pragma\" content=\"no-cache\" />\n</head>\n<body>\n<script>\n    if (location.hash === '') {\n        location.hash = \"check\";\n        location.reload(true);\n        console.log('reloading');\n    }\n</script>\n</body>\n</html>\n<?php exit();?>", "<?php\r\n\r\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('xmp.configuration', array());\r\n\r\n$tpl = erLhcoreClassTemplate::getInstance( 'lhxmp/xmp.tpl.php');\r\n\r\n$xmpData = erLhcoreClassModelChatConfig::fetch('xmp_data');\r\n$data = (array)$xmpData->data;\r\n\r\nif (isset($_POST['StoreXMPGTalkSendeMessage'])) {\r\n\ttry {\r\n        $definition = array(\r\n            'test_recipients_gtalk' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'validate_email')\r\n        );\r\n        \r\n        $form = new ezcInputForm(INPUT_POST, $definition);\r\n\r\n        if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\r\n            throw new Exception('Invalid CSRF token!');\r\n        }\r\n\r\n        if ($form->hasValidData('test_recipients_gtalk')) {\r\n            erLhcoreClassXMP::sendTestXMPGTalk($form->test_recipients_gtalk);\r\n            $tpl->set('message_send','done');\r\n            $tpl->set('test_gmail_email',$form->test_recipients_gtalk);\r\n        } else {\r\n            $tpl->set('errors',array(erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','Invalid test e-mail address')));\r\n        }\r\n\t    \r\n\t} catch (Exception $e) {\r\n\t\t$tpl->set('errors',array($e->getMessage()));\r\n\t}\r\n}\r\n\r\nif (isset($_POST['StoreXMPGTalkRevokeToken'])){\r\n\ttry {\r\n\r\n        if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\r\n            throw new Exception('Invalid CSRF token!');\r\n        }\r\n\r\n\t\terLhcoreClassXMP::revokeAccessToken();\r\n\t\t$tpl->set('token_revoked','done');\r\n\t} catch (Exception $e) {\r\n\t\t$tpl->set('errors',array($e->getMessage()));\r\n\t}\r\n}\r\n\r\nif ($Params['user_parameters_unordered']['gtalkoauth'] == 'true') {\r\n\t\r\n\trequire_once 'lib/core/lhxmp/google/Google_Client.php';\r\n\trequire_once 'lib/core/lhxmp/google/contrib/Google_Oauth2Service.php';\r\n\t\r\n\t$client = new Google_Client();\r\n\t$oauth2 = new Google_Oauth2Service($client);\r\n\t\r\n\t$client->setApplicationName('Live Helper Chat');\r\n\t$client->setScopes(array(\"https://www.googleapis.com/auth/googletalk\",\"https://www.googleapis.com/auth/userinfo.email\"));\r\n\t\r\n\t$client->setClientId($data['gtalk_client_id']);\r\n\t$client->setClientSecret($data['gtalk_client_secret']);\r\n\t$client->setApprovalPrompt('force');\r\n\t$client->setAccessType('offline');\r\n\t$client->setRedirectUri(erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('xmp/configuration').'/(gtalkoauth)/true');\r\n\t\t\r\n\tif (isset($_GET['code'])) {\r\n\t\ttry {\t\t\t\r\n\t\t\t$client->authenticate();\t\t\r\n\t\t\t$data['gtalk_client_token'] = $client->getAccessToken();\t\t\t\r\n\t\t\t$userGoogle = $oauth2->userinfo->get();\r\n\t\t\t$data['email_gtalk'] = $userGoogle['email'];\r\n\t\t\t\t\t\t\r\n\t\t\t$xmpData->value = serialize($data);\r\n\t\t\t$xmpData->saveThis();\r\n\t\t\t$tpl->set('token_received','done');\r\n\t\t} catch (Exception $e) {\r\n\t\t\t$tpl->set('errors',array($e->getMessage()));\r\n\t\t}\r\n\t} else {\r\n\t\t$tpl->set('errors',array('Could not receive a token!'));\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nif ( isset($_POST['StoreXMPGTalkSettings']) || isset($_POST['StoreXMPGTalkSettingsTest'])) {\r\n\t$definition = array(\r\n\t\t\t'gtalk_client_id' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'gtalk_client_secret' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'XMPMessage' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'XMPAcceptedMessage' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\t\t\t\r\n\t\t\t'use_standard_xmp' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'int'\r\n\t\t\t),\t\t\t\r\n\t\t\t'use_xmp' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'int'\r\n\t\t\t)\r\n\t);\r\n\t\r\n\tif (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\r\n\t\terLhcoreClassModule::redirect('xmp/configuration');\r\n\t\texit;\r\n\t}\r\n\t\t\r\n\t$form = new ezcInputForm( INPUT_POST, $definition );\r\n\t$Errors = array();\r\n\t\r\n\tif ( $form->hasValidData( 'gtalk_client_id' )) {\r\n\t\t$data['gtalk_client_id'] = $form->gtalk_client_id;\r\n\t} else {\r\n\t\t$data['gtalk_client_id'] = '';\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'gtalk_client_secret' )) {\r\n\t\t$data['gtalk_client_secret'] = $form->gtalk_client_secret;\r\n\t} else {\r\n\t\t$data['gtalk_client_secret'] = '';\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'use_xmp' ) && $form->use_xmp == true ) {\r\n\t\t$data['use_xmp'] = 1;\r\n\t} else {\r\n\t\t$data['use_xmp'] = 0;\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'use_standard_xmp' )) {\r\n\t\t$data['use_standard_xmp'] = $form->use_standard_xmp;\r\n\t} else {\r\n\t\t$data['use_standard_xmp'] = 0;\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'XMPMessage' ) ) {\r\n\t\t$data['xmp_message'] = $form->XMPMessage;\r\n\t} else {\r\n\t\t$data['xmp_message'] = '';\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'XMPAcceptedMessage' ) ) {\r\n\t\t$data['xmp_accepted_message'] = $form->XMPAcceptedMessage;\r\n\t} else {\r\n\t\t$data['xmp_accepted_message'] = '';\r\n\t}\r\n\t\r\n\t$xmpData->value = serialize($data);\r\n\t$xmpData->saveThis();\r\n\t\r\n\tif (isset($_POST['StoreXMPGTalkSettingsTest'])) {\r\n\t\r\n\t\trequire_once 'lib/core/lhxmp/google/Google_Client.php';\r\n\t\r\n\t\t$client = new Google_Client();\r\n\t\t$client->setApplicationName('Live Helper Chat');\r\n\t\t$client->setScopes(array(\"https://www.googleapis.com/auth/googletalk\",\"https://www.googleapis.com/auth/userinfo.email\"));\r\n\t\r\n\t\t// Documentation: http://code.google.com/apis/gdata/docs/2.0/basics.html\r\n\t\t// Visit https://code.google.com/apis/console?api=contacts to generate your\r\n\t\t// oauth2_client_id, oauth2_client_secret, and register your oauth2_redirect_uri.\r\n\t\t$client->setClientId($data['gtalk_client_id']);\r\n\t\t$client->setClientSecret($data['gtalk_client_secret']);\r\n\t\t$client->setApprovalPrompt('force');\r\n\t\t$client->setAccessType('offline');\r\n\t\t$client->setRedirectUri(erLhcoreClassSystem::getHost() . erLhcoreClassDesign::baseurl('xmp/configuration').'/(gtalkoauth)/true');\r\n\t\t\t\r\n\t\tif ( !$client->getAccessToken() ) {\r\n\t\t\theader('Location: '.$client->createAuthUrl());\r\n\t\t\texit;\r\n\t\t}\r\n\t}\r\n\t\r\n\t$tpl->set('updated','done');\r\n}\r\n\r\n\r\nif ( isset($_POST['StoreXMPSettings']) || isset($_POST['StoreXMPSettingsTest']) ) {\r\n\r\n\t$definition = array(\r\n\t\t\t'host' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'username' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'password' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'port' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'use_xmp' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'boolean'\r\n\t\t\t),\r\n\t\t\t'resource' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\t\t\t\r\n\t\t\t'server' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'recipients' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'XMPMessage' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'XMPAcceptedMessage' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'test_recipients' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'test_group_recipients' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n\t\t\t),\r\n\t\t\t'use_standard_xmp' => new ezcInputFormDefinitionElement(\r\n\t\t\t\t\tezcInputFormDefinitionElement::OPTIONAL, 'int'\r\n\t\t\t)\r\n\t);\r\n\r\n\tif (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\r\n\t\terLhcoreClassModule::redirect('xmp/configuration');\r\n\t\texit;\r\n\t}\r\n\r\n\t$Errors = array();\r\n\r\n\t$form = new ezcInputForm( INPUT_POST, $definition );\r\n\t$Errors = array();\r\n\r\n\tif ( $form->hasValidData( 'host' )) {\r\n\t\t$data['host'] = $form->host;\r\n\t} else {\r\n\t\t$data['host'] = '';\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'server' )) {\r\n\t\t$data['server'] = $form->server;\r\n\t} else {\r\n\t\t$data['server'] = '';\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'resource' )) {\r\n\t\t$data['resource'] = $form->resource;\r\n\t} else {\r\n\t\t$data['resource'] = '';\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'recipients' )) {\r\n\t\t$data['recipients'] = $form->recipients;\r\n\t} else {\r\n\t\t$data['recipients'] = '';\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'port' )) {\r\n\t\t$data['port'] = $form->port;\r\n\t} else {\r\n\t\t$data['port'] = '';\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'use_xmp' ) && $form->use_xmp == true ) {\r\n\t\t$data['use_xmp'] = 1;\r\n\t} else {\r\n\t\t$data['use_xmp'] = 0;\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'username' ) ) {\r\n\t\t$data['username'] = $form->username;\r\n\t} else {\r\n\t\t$data['username'] = '';\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'password' ) && $form->password != '' ) {\r\n\t\t$data['password'] = $form->password;\r\n\t}\r\n\r\n\tif ( $form->hasValidData( 'XMPMessage' ) ) {\r\n\t\t$data['xmp_message'] = $form->XMPMessage;\r\n\t} else {\r\n\t\t$data['xmp_message'] = '';\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'XMPAcceptedMessage' ) ) {\r\n\t\t$data['xmp_accepted_message'] = $form->XMPAcceptedMessage;\r\n\t} else {\r\n\t\t$data['xmp_accepted_message'] = '';\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'use_standard_xmp' )) {\r\n\t\t$data['use_standard_xmp'] = $form->use_standard_xmp;\r\n\t} else {\r\n\t\t$data['use_standard_xmp'] = 0;\r\n\t}\r\n\t\r\n\tif ( $form->hasValidData( 'test_recipients' )) {\r\n\t\t$data['test_recipients'] = $form->test_recipients;\r\n\t} else {\r\n\t\t$data['test_recipients'] = '';\r\n\t}\r\n\tif ( $form->hasValidData( 'test_group_recipients' )) {\r\n\t\t$data['test_group_recipients'] = $form->test_group_recipients;\r\n\t} else {\r\n\t\t$data['test_group_recipients'] = '';\r\n\t}\r\n\t\r\n\t$xmpData->value = serialize($data);\r\n\t$xmpData->saveThis();\r\n\r\n\tif (isset($_POST['StoreXMPSettingsTest'])){\r\n\t\ttry {\r\n\t\t\terLhcoreClassXMP::sendTestXMP($currentUser->getUserData());\r\n\t\t\t$tpl->set('message_send','done');\r\n\t\t} catch (Exception $e) {\r\n\t\t\t$tpl->set('errors',array($e->getMessage()));\r\n\t\t}\r\n\t}\r\n\r\n\t$tpl->set('updated','done');\r\n}\r\n\r\n$tpl->set('xmp_data',$data);\r\n\r\n$Result['content'] = $tpl->fetch();\r\n$Result['path'] = array(array('url' => erLhcoreClassDesign::baseurl('system/configuration'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('system/htmlcode','System configuration')),\r\narray('title' => erTranslationClassLhTranslation::getInstance()->getTranslation('system/xmpp','XMPP settings')));\r\n\r\n?>", "<?php\nreturn array (\n    'settings' =>\n        array (\n            'site' =>\n                array (\n                    'title' => 'Live helper Chat',\n                    'site_admin_email' => '',\n                    'locale' => 'en_EN',\n                    'theme' => 'defaulttheme',\n                    'installed' => false,\n                    'secrethash' => '',\n                    'debug_output' => false,\n                    'templatecache' => false,\n                    'templatecompile' => false,\n                    'modulecompile' => false,\n                    'force_virtual_host' => false,\n                    'proxy_mode' => false,\n                    'disable_rest_api_by_user' => false,\n                    'one_login_per_account' => false,\n                    'time_zone' => '',\n                    'date_format' => 'Y-m-d',\n                    'date_hour_format' => 'H:i:s',\n                    'date_date_hour_format' => 'Y-m-d H:i:s',\n                    'default_site_access' => 'eng',\n                    'maps_api_key' => false,\n                    'default_group' => '',\n                    'default_user' => '',\n                    'site_address' => '',\n                    'trusted_host_patterns' => [\n                    ],\n                    'extensions' =>\n                        array (\n                            // 0 => 'customstatus',\n                        ),\n                    'available_site_access' =>\n                        array (\n                            0 => 'eng',\n                            1 => 'lit',\n                            2 => 'hrv',\n                            3 => 'esp',\n                            4 => 'por',\n                            5 => 'nld',\n                            6 => 'ara',\n                            7 => 'ger',\n                            8 => 'pol',\n                            9 => 'rus',\n                            10 => 'ita',\n                            11 => 'fre',\n                            12 => 'chn',\n                            13 => 'cse',\n                            14 => 'nor',\n                            15 => 'tur',\n                            16 => 'vnm',\n                            17 => 'idn',\n                            18 => 'sve',\n                            19 => 'per',\n                            20 => 'ell',\n                            21 => 'dnk',\n                            22 => 'rou',\n                            23 => 'bgr',\n                            24 => 'tha',\n                            25 => 'geo',\n                            26 => 'fin',\n                            27 => 'alb',\n                            28 => 'heb',\n                            29 => 'cat',\n                            30 => 'hun',\n                            31 => 'svk',\n                            32 => 'site_admin'\n                        ),\n                ),\n            'default_url' =>\n                array (\n                    'module' => 'chat',\n                    'view' => 'start',\n                ),\n            'webhooks' =>\n                array(\n                    'enabled' => false,\n                    'worker' => 'http',\n                ),\n            'chat' => array(\n                'online_timeout' => 300,\n                'back_office_sinterval' => 10,\n                'chat_message_sinterval' => 3.5,\n                'check_for_operator_msg' => 10,\n                'new_chat_sound_enabled' => true,\n                'new_message_sound_admin_enabled' => true,\n                'new_message_sound_user_enabled' => true,\n            ),\n            'memecache' =>\n                array (\n                    'servers' =>\n                        array (\n                            0 =>\n                                array (\n                                    'host' => '127.0.0.1',\n                                    'port' => '11211',\n                                    'weight' => 1,\n                                ),\n                        ),\n                ),\n            'redis' => array (\n                'server' => array (\n                    'host' => 'localhost',\n                    'port' => 6379,\n                    'auth' => null,\n                    'database' => 0\n                )\n            ),\n            'db' =>\n                array (\n                    'host' => '',\n                    'user' => '',\n                    'password' => '',\n                    'database' => '',\n                    'port' => 3306,\n                    'use_slaves' => false,\n                    'db_slaves' =>\n                        array (\n                            0 =>\n                                array (\n                                    'host' => '',\n                                    'user' => '',\n                                    'port' => 3306,\n                                    'password' => '',\n                                    'database' => '',\n                                ),\n                        ),\n                ),\n            'site_access_options' =>\n                array (\n                    'eng' =>\n                        array (\n                            'locale' => 'en_EN',\n                            'content_language' => 'en',\n                            'dir_language' => 'ltr',\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                        ),\n                    'lit' =>\n                        array (\n                            'locale' => 'lt_LT',\n                            'content_language' => 'lt',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'svk' =>\n                        array (\n                            'locale' => 'sk_SK',\n                            'content_language' => 'sk',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'hrv' =>\n                        array (\n                            'locale' => 'hr_HR',\n                            'content_language' => 'hr',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'esp' =>\n                        array (\n                            'locale' => 'es_MX',\n                            'content_language' => 'es',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'dnk' =>\n                        array (\n                            'locale' => 'da_DA',\n                            'content_language' => 'da',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'por' =>\n                        array (\n                            'locale' => 'pt_BR',\n                            'content_language' => 'pt',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'nld' =>\n                        array (\n                            'locale' => 'nl_NL',\n                            'content_language' => 'nl',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'ara' =>\n                        array (\n                            'locale' => 'ar_EG',\n                            'content_language' => 'ar',\n                            'dir_language' => 'rtl',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'ger' =>\n                        array (\n                            'locale' => 'de_DE',\n                            'content_language' => 'de',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'pol' =>\n                        array (\n                            'locale' => 'pl_PL',\n                            'content_language' => 'pl',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'rus' =>\n                        array (\n                            'locale' => 'ru_RU',\n                            'content_language' => 'ru',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'ita' =>\n                        array (\n                            'locale' => 'it_IT',\n                            'content_language' => 'it',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'tur' =>\n                        array (\n                            'locale' => 'tr_TR',\n                            'content_language' => 'tr',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'fre' =>\n                        array (\n                            'locale' => 'fr_FR',\n                            'content_language' => 'fr',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'chn' =>\n                        array (\n                            'locale' => 'zh_ZH',\n                            'content_language' => 'zh',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'cse' =>\n                        array (\n                            'locale' => 'cs_CS',\n                            'content_language' => 'cs',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'nor' =>\n                        array (\n                            'locale' => 'no_NO',\n                            'content_language' => 'no',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'vnm' =>\n                        array (\n                            'locale' => 'vi_VN',\n                            'content_language' => 'vi',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'tha' =>\n                        array (\n                            'locale' => 'th_TH',\n                            'content_language' => 'th',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'idn' =>\n                        array (\n                            'locale' => 'id_ID',\n                            'content_language' => 'in',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'sve' =>\n                        array (\n                            'locale' => 'sv_SV',\n                            'content_language' => 'sv',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'per' =>\n                        array (\n                            'locale' => 'fa_FA',\n                            'content_language' => 'fa',\n                            'dir_language' => 'rtl',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'ell' =>\n                        array (\n                            'locale' => 'el_EL',\n                            'content_language' => 'el',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'rou' =>\n                        array (\n                            'locale' => 'ro_RO',\n                            'content_language' => 'ro',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'bgr' =>\n                        array (\n                            'locale' => 'bg_BG',\n                            'content_language' => 'bg',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'cat' =>\n                        array (\n                            'locale' => 'ca_ES',\n                            'content_language' => 'es',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start',\n                                ),\n                        ),\n                    'geo' =>\n                        array (\n                            'locale' => 'ka_KA',\n                            'content_language' => 'ka',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'fin' =>\n                        array (\n                            'locale' => 'fi_FI',\n                            'content_language' => 'fi',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'alb' =>\n                        array (\n                            'locale' => 'sq_AL',\n                            'content_language' => 'sq',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'heb' => array (\n                        'locale' => 'he_HE',\n                        'content_language' => 'he',\n                        'dir_language' => 'rtl',\n                        'title' => '',\n                        'description' => '',\n                        'theme' =>\n                            array (\n                                0 => 'customtheme',\n                                1 => 'defaulttheme'\n                            ),\n                        'default_url' =>\n                            array (\n                                'module' => 'chat',\n                                'view' => 'start'\n                            ),\n                    ),\n                    'hun' =>\n                        array (\n                            'locale' => 'hu_HU',\n                            'content_language' => 'hu',\n                            'dir_language' => 'ltr',\n                            'title' => '',\n                            'description' => '',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme'\n                                ),\n                            'default_url' =>\n                                array (\n                                    'module' => 'chat',\n                                    'view' => 'start'\n                                ),\n                        ),\n                    'site_admin' =>\n                        array (\n                            'locale' => 'en_EN',\n                            'content_language' => 'en',\n                            'dir_language' => 'ltr',\n                            'theme' =>\n                                array (\n                                    0 => 'customtheme',\n                                    1 => 'defaulttheme',\n                                ),\n                            'login_pagelayout' => 'login',\n                            'default_url' =>\n                                array (\n                                    'module' => 'front',\n                                    'view' => 'default',\n                                ),\n                        ),\n                ),\n            'cacheEngine' =>\n                array (\n                    'cache_global_key' => 'global_cache_key',\n                    'className' => false,\n                ),\n        ),\n    'comments' => NULL,\n);\n?>\n"], "filenames": ["lhc_web/cli/lib/install.php", "lhc_web/design/defaulttheme/tpl/lhbrowseoffer/getstatus.tpl.php", "lhc_web/design/defaulttheme/tpl/lhbrowseoffer/htmlcode.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/chat_tabs/information_rows/id.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/chatcheckoperatormessage.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/getmessagesnippet/operator_profile.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/getstatus.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/getstatus/container.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/getstatus/dynamic_events.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/getstatus/functions/part/show_survey.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/getstatus/functions/part/show_survey_page.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/getstatus/functions/send_notification.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/getstatus/functions/show_start_window.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/getstatus/functions/show_status_widget.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/getstatus/getstatus_migrate.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/getstatus/native_placement.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/getstatus/we_here_substatus.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/getstatusembed.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/lists/op_msg_row_nick.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/part/operator_profile_name_support_img.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/part/operator_profile_start_chat.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/widget_brand/chatbox.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/widget_brand/faq.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/widget_brand/live_help.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/widget_brand/questionary.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchatbox/embed.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchatbox/embedcode.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchatbox/getstatus.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchatbox/htmlcode.tpl.php", "lhc_web/design/defaulttheme/tpl/lhcobrowse/operatorinit.tpl.php", "lhc_web/design/defaulttheme/tpl/lhcobrowse/operatorinit_onlineuser.tpl.php", "lhc_web/design/defaulttheme/tpl/lhcobrowse/userinit.tpl.php", "lhc_web/design/defaulttheme/tpl/lhexport/xml.tpl.php", "lhc_web/design/defaulttheme/tpl/lhfaq/embed.tpl.php", "lhc_web/design/defaulttheme/tpl/lhfaq/embedcode.tpl.php", "lhc_web/design/defaulttheme/tpl/lhfaq/getstatus.tpl.php", "lhc_web/design/defaulttheme/tpl/lhfaq/htmlcode.tpl.php", "lhc_web/design/defaulttheme/tpl/lhform/collected.tpl.php", "lhc_web/design/defaulttheme/tpl/lhform/embed.tpl.php", "lhc_web/design/defaulttheme/tpl/lhform/embedcode.tpl.php", "lhc_web/design/defaulttheme/tpl/lhgenericbot/message/content/quick_replies.tpl.php", "lhc_web/design/defaulttheme/tpl/lhnotifications/settings.tpl.php", "lhc_web/design/defaulttheme/tpl/lhquestionary/embed.tpl.php", "lhc_web/design/defaulttheme/tpl/lhquestionary/embedcode.tpl.php", "lhc_web/design/defaulttheme/tpl/lhquestionary/getstatus.tpl.php", "lhc_web/design/defaulttheme/tpl/lhquestionary/htmlcode.tpl.php", "lhc_web/design/defaulttheme/tpl/lhsystem/embedcode.tpl.php", "lhc_web/design/defaulttheme/tpl/lhsystem/htmlcode.tpl.php", "lhc_web/design/defaulttheme/tpl/lhsystem/htmlcodebeta.tpl.php", "lhc_web/design/defaulttheme/tpl/lhsystem/update.tpl.php", "lhc_web/design/defaulttheme/tpl/lhuser/autologinconfig.tpl.php", "lhc_web/design/defaulttheme/tpl/lhwebhooks/form_incoming.tpl.php", "lhc_web/design/defaulttheme/tpl/lhxmp/xmp.tpl.php", "lhc_web/lib/core/lhbbcode/lhbbcode.php", "lhc_web/lib/core/lhbbcode/lhbbcode_cleanup.php", "lhc_web/lib/core/lhchat/lhchatcommand.php", "lhc_web/lib/core/lhchat/lhchatexport.php", "lhc_web/lib/core/lhchat/lhchatmail.php", "lhc_web/lib/core/lhcore/lhsys.php", "lhc_web/lib/core/lhcore/lhupdate.php", "lhc_web/lib/core/lhform/lhformrenderer.php", "lhc_web/lib/core/lhgenericbot/actionTypes/lhgenericbotactionrestapi.php", "lhc_web/lib/core/lhrestapi/lhrestapivalidator.php", "lhc_web/lib/core/lhxmp/lhxmp.php", "lhc_web/lib/models/lhabstract/erlhabstractmodelformcollected.php", "lhc_web/lib/models/lhabstract/erlhabstractmodelwidgettheme.php", "lhc_web/lib/models/lhgenericbot/erlhcoreclassmodelgenericbotbot.php", "lhc_web/lib/models/lhgenericbot/erlhcoreclassmodelgenericbottrgroup.php", "lhc_web/lib/models/lhuser/erlhcoreclassmodeluser.php", "lhc_web/modules/lhcobrowse/proxycss.php", "lhc_web/modules/lhcron/test.php", "lhc_web/modules/lhexport/getchat.php", "lhc_web/modules/lhexport/getcount.php", "lhc_web/modules/lhexport/getlist.php", "lhc_web/modules/lhform/downloadcollected.php", "lhc_web/modules/lhform/downloaditem.php", "lhc_web/modules/lhinstall/install.php", "lhc_web/modules/lhpermission/explorer.php", "lhc_web/modules/lhrestapi/fetchchatmessages.php", "lhc_web/modules/lhrestapi/generateautologin.php", "lhc_web/modules/lhrestapi/loginbytoken.php", "lhc_web/modules/lhrestapi/swagger.php", "lhc_web/modules/lhuser/forgotpassword.php", "lhc_web/modules/lhwidgetrestapi/checkinvitation.php", "lhc_web/modules/lhwidgetrestapi/screensharesettings.php", "lhc_web/modules/lhwidgetrestapi/settings.php", "lhc_web/modules/lhwidgetrestapi/updatejs.php", "lhc_web/modules/lhxmp/configuration.php", "lhc_web/settings/settings.ini.default.php"], "buggy_code_start_loc": [1270, 57, 99, 3, 14, 6, 54, 11, 16, 5, 5, 79, 16, 20, 45, 1, 4, 37, 13, 4, 8, 1, 1, 2, 1, 12, 58, 197, 129, 1, 1, 2, 5, 6, 52, 147, 91, 9, 6, 57, 10, 47, 6, 47, 117, 118, 79, 214, 274, 12, 109, 23, 112, 798, 834, 59, 501, 118, 472, 14, 638, 243, 716, 250, 70, 263, 92, 53, 123, 32, 8, 8, 8, 8, 45, 49, 1441, 24, 123, 60, 35, 38, 62, 130, 7, 356, 3, 64, 28], "buggy_code_end_loc": [1273, 106, 100, 4, 59, 7, 1049, 22, 40, 6, 6, 146, 81, 35, 49, 2, 5, 182, 32, 5, 9, 2, 2, 3, 2, 13, 59, 297, 130, 2, 2, 3, 6, 7, 53, 188, 92, 10, 7, 58, 11, 59, 7, 48, 191, 119, 111, 291, 408, 13, 110, 24, 113, 810, 846, 60, 502, 847, 473, 14, 639, 389, 717, 324, 71, 331, 93, 54, 124, 33, 8, 8, 8, 8, 46, 50, 1444, 25, 124, 61, 36, 39, 63, 131, 20, 510, 4, 180, 28], "fixing_code_start_loc": [1270, 57, 99, 3, 14, 6, 54, 11, 16, 5, 5, 79, 16, 20, 45, 1, 4, 37, 13, 4, 8, 1, 1, 2, 1, 12, 58, 197, 129, 1, 1, 2, 5, 6, 52, 147, 91, 9, 6, 57, 10, 47, 6, 47, 117, 118, 79, 214, 274, 12, 109, 23, 112, 798, 834, 59, 501, 118, 472, 15, 638, 243, 716, 250, 70, 263, 92, 53, 123, 32, 9, 9, 9, 9, 45, 49, 1441, 24, 123, 60, 35, 38, 62, 130, 7, 356, 3, 64, 29], "fixing_code_end_loc": [1273, 106, 100, 4, 59, 7, 1049, 22, 40, 6, 6, 146, 81, 35, 49, 2, 5, 182, 32, 5, 9, 2, 2, 3, 2, 13, 59, 297, 130, 2, 2, 3, 6, 7, 53, 188, 92, 10, 7, 58, 11, 59, 7, 48, 191, 119, 111, 291, 408, 49, 110, 24, 113, 799, 835, 60, 502, 847, 520, 16, 639, 362, 717, 324, 71, 331, 93, 54, 124, 33, 11, 14, 14, 14, 46, 50, 1444, 25, 124, 61, 36, 39, 63, 131, 20, 504, 4, 180, 32], "type": "CWE-116", "message": "Host Header injection in password Reset in GitHub repository livehelperchat/livehelperchat prior to 3.97.", "other": {"cve": {"id": "CVE-2022-0935", "sourceIdentifier": "security@huntr.dev", "published": "2022-04-07T19:15:08.017", "lastModified": "2022-04-14T13:47:40.803", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Host Header injection in password Reset in GitHub repository livehelperchat/livehelperchat prior to 3.97."}, {"lang": "es", "value": "Una Inyecci\u00f3n de Encabezado de Host en el restablecimiento de la contrase\u00f1a en el repositorio de GitHub livehelperchat/livehelperchat versiones anteriores a 3.97"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-116"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-840"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:livehelperchat:live_helper_chat:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.97", "matchCriteriaId": "F349805D-9BF0-4730-9824-F4A3DB5272A3"}]}]}], "references": [{"url": "https://github.com/livehelperchat/livehelperchat/commit/ce96791cb4c7420266b668fc234c211914259ba7", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/a7e40fdf-a333-4a50-8a53-d11b16ce3ec2", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/livehelperchat/livehelperchat/commit/ce96791cb4c7420266b668fc234c211914259ba7"}}