{"buggy_code": ["# Additional MIME types that you'd like nginx to handle go in here\ntypes {\n    text/csv csv;\n    application/wasm wasm;\n}\n\nupstream discourse {\n  server unix:/var/www/discourse/tmp/sockets/nginx.http.sock;\n  server unix:/var/www/discourse/tmp/sockets/nginx.https.sock;\n}\n\n# inactive means we keep stuff around for 1440m minutes regardless of last access (1 week)\n# levels means it is a 2 deep hierarchy cause we can have lots of files\n# max_size limits the size of the cache\nproxy_cache_path /var/nginx/cache inactive=1440m levels=1:2 keys_zone=one:10m max_size=600m;\n\n# see: https://meta.discourse.org/t/x/74060\nproxy_buffer_size 8k;\n\n# If you are going to use Puma, use these:\n#\n# upstream discourse {\n#   server unix:/var/www/discourse/tmp/sockets/puma.sock;\n# }\n\n\n# attempt to preserve the proto, must be in http context\nmap $http_x_forwarded_proto $thescheme {\n  default $scheme;\n  https https;\n}\n\nlog_format log_discourse '[$time_local] \"$http_host\" $remote_addr \"$request\" \"$http_user_agent\" \"$sent_http_x_discourse_route\" $status $bytes_sent \"$http_referer\" $upstream_response_time $request_time \"$upstream_http_x_discourse_username\" \"$upstream_http_x_discourse_trackview\" \"$upstream_http_x_queue_time\" \"$upstream_http_x_redis_calls\" \"$upstream_http_x_redis_time\" \"$upstream_http_x_sql_calls\" \"$upstream_http_x_sql_time\"';\n\n# Allow bypass cache from localhost\ngeo $bypass_cache {\n  default         0;\n  127.0.0.1       1;\n  ::1             1;\n}\n\nserver {\n\n  access_log /var/log/nginx/access.log log_discourse;\n\n  listen 80;\n  gzip on;\n  gzip_vary on;\n  gzip_min_length 1000;\n  gzip_comp_level 5;\n  gzip_types application/json text/css text/javascript application/x-javascript application/javascript image/svg+xml application/wasm;\n  gzip_proxied any;\n\n  # Uncomment and configure this section for HTTPS support\n  # NOTE: Put your ssl cert in your main nginx config directory (/etc/nginx)\n  #\n  # rewrite ^/(.*) https://enter.your.web.hostname.here/$1 permanent;\n  #\n  # listen 443 ssl;\n  # ssl_certificate your-hostname-cert.pem;\n  # ssl_certificate_key your-hostname-cert.key;\n  # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n  # ssl_ciphers HIGH:!aNULL:!MD5;\n  #\n\n  server_name enter.your.web.hostname.here;\n  server_tokens off;\n\n  sendfile on;\n\n  keepalive_timeout 65;\n\n  # maximum file upload size (keep up to date when changing the corresponding site setting)\n  client_max_body_size 10m;\n\n  # path to discourse's public directory\n  set $public /var/www/discourse/public;\n\n  # without weak etags we get zero benefit from etags on dynamically compressed content\n  # further more etags are based on the file in nginx not sha of data\n  # use dates, it solves the problem fine even cross server\n  etag off;\n\n  # prevent direct download of backups\n  location ^~ /backups/ {\n    internal;\n  }\n\n  # bypass rails stack with a cheap 204 for favicon.ico requests\n  location /favicon.ico {\n    return 204;\n    access_log off;\n    log_not_found off;\n  }\n\n  location / {\n    root $public;\n    add_header ETag \"\";\n\n    # auth_basic on;\n    # auth_basic_user_file /etc/nginx/htpasswd;\n\n    location ~ ^/uploads/short-url/ {\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Request-Start \"t=${msec}\";\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $thescheme;\n      proxy_pass http://discourse;\n      break;\n    }\n\n    location ~ ^/secure-media-uploads/ {\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Request-Start \"t=${msec}\";\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $thescheme;\n      proxy_pass http://discourse;\n      break;\n    }\n\n    location ~* (fonts|assets|plugins|uploads)/.*\\.(eot|ttf|woff|woff2|ico|otf)$ {\n      expires 1y;\n      add_header Cache-Control public,immutable;\n      add_header Access-Control-Allow-Origin *;\n    }\n\n    location = /srv/status {\n      access_log off;\n      log_not_found off;\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Request-Start \"t=${msec}\";\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $thescheme;\n      proxy_pass http://discourse;\n      break;\n    }\n\n    # some minimal caching here so we don't keep asking\n    # longer term we should increase probably to 1y\n    location ~ ^/javascripts/ {\n      expires 1d;\n      add_header Cache-Control public,immutable;\n      add_header Access-Control-Allow-Origin *;\n    }\n\n    location ~ ^/assets/(?<asset_path>.+)$ {\n      expires 1y;\n      # asset pipeline enables this\n      brotli_static on;\n      gzip_static on;\n      add_header Cache-Control public,immutable;\n      # HOOK in asset location (used for extensibility)\n      # TODO I don't think this break is needed, it just breaks out of rewrite\n      break;\n    }\n\n    location ~ ^/plugins/ {\n      expires 1y;\n      add_header Cache-Control public,immutable;\n      add_header Access-Control-Allow-Origin *;\n    }\n\n    # cache emojis\n    location ~ /images/emoji/ {\n      expires 1y;\n      add_header Cache-Control public,immutable;\n      add_header Access-Control-Allow-Origin *;\n    }\n\n    location ~ ^/uploads/ {\n\n      # NOTE: it is really annoying that we can't just define headers\n      # at the top level and inherit.\n      #\n      # proxy_set_header DOES NOT inherit, by design, we must repeat it,\n      # otherwise headers are not set correctly\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Request-Start \"t=${msec}\";\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $thescheme;\n      proxy_set_header X-Sendfile-Type X-Accel-Redirect;\n      proxy_set_header X-Accel-Mapping $public/=/downloads/;\n      expires 1y;\n      add_header Cache-Control public,immutable;\n\n      ## optional upload anti-hotlinking rules\n      #valid_referers none blocked mysite.com *.mysite.com;\n      #if ($invalid_referer) { return 403; }\n\n      # custom CSS\n      location ~ /stylesheet-cache/ {\n          add_header Access-Control-Allow-Origin *;\n          try_files $uri =404;\n      }\n      # this allows us to bypass rails\n      location ~* \\.(gif|png|jpg|jpeg|bmp|tif|tiff|ico|webp)$ {\n          add_header Access-Control-Allow-Origin *;\n          try_files $uri =404;\n      }\n      # SVG needs an extra header attached\n      location ~* \\.(svg)$ {\n      }\n      # thumbnails & optimized images\n      location ~ /_?optimized/ {\n          add_header Access-Control-Allow-Origin *;\n          try_files $uri =404;\n      }\n\n      proxy_pass http://discourse;\n      break;\n    }\n\n    location ~ ^/admin/backups/ {\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Request-Start \"t=${msec}\";\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $thescheme;\n      proxy_set_header X-Sendfile-Type X-Accel-Redirect;\n      proxy_set_header X-Accel-Mapping $public/=/downloads/;\n      proxy_pass http://discourse;\n      break;\n    }\n\n    # This big block is needed so we can selectively enable\n    # acceleration for backups, avatars, sprites and so on.\n    # see note about repetition above\n    location ~ ^/(svg-sprite/|letter_avatar/|letter_avatar_proxy/|user_avatar|highlight-js|stylesheets|theme-javascripts|favicon/proxied|service-worker) {\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Request-Start \"t=${msec}\";\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $thescheme;\n\n      # if Set-Cookie is in the response nothing gets cached\n      # this is double bad cause we are not passing last modified in\n      proxy_ignore_headers \"Set-Cookie\";\n      proxy_hide_header \"Set-Cookie\";\n      proxy_hide_header \"X-Discourse-Username\";\n      proxy_hide_header \"X-Runtime\";\n\n      # note x-accel-redirect can not be used with proxy_cache\n      proxy_cache one;\n      proxy_cache_key \"$scheme,$host,$request_uri\";\n      proxy_cache_valid 200 301 302 7d;\n      proxy_cache_valid any 1m;\n      proxy_cache_bypass $bypass_cache;\n      proxy_pass http://discourse;\n      break;\n    }\n\n    # we need buffering off for message bus\n    location /message-bus/ {\n      proxy_set_header X-Request-Start \"t=${msec}\";\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $thescheme;\n      proxy_http_version 1.1;\n      proxy_buffering off;\n      proxy_pass http://discourse;\n      break;\n    }\n\n    # this means every file in public is tried first\n    try_files $uri @discourse;\n  }\n\n  location /downloads/ {\n    internal;\n    alias $public/;\n  }\n\n  location @discourse {\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Request-Start \"t=${msec}\";\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $thescheme;\n    proxy_pass http://discourse;\n  }\n\n}\n"], "fixing_code": ["# Additional MIME types that you'd like nginx to handle go in here\ntypes {\n    text/csv csv;\n    application/wasm wasm;\n}\n\nupstream discourse {\n  server unix:/var/www/discourse/tmp/sockets/nginx.http.sock;\n  server unix:/var/www/discourse/tmp/sockets/nginx.https.sock;\n}\n\n# inactive means we keep stuff around for 1440m minutes regardless of last access (1 week)\n# levels means it is a 2 deep hierarchy cause we can have lots of files\n# max_size limits the size of the cache\nproxy_cache_path /var/nginx/cache inactive=1440m levels=1:2 keys_zone=one:10m max_size=600m;\n\n# see: https://meta.discourse.org/t/x/74060\nproxy_buffer_size 8k;\n\n# If you are going to use Puma, use these:\n#\n# upstream discourse {\n#   server unix:/var/www/discourse/tmp/sockets/puma.sock;\n# }\n\n\n# attempt to preserve the proto, must be in http context\nmap $http_x_forwarded_proto $thescheme {\n  default $scheme;\n  https https;\n}\n\nlog_format log_discourse '[$time_local] \"$http_host\" $remote_addr \"$request\" \"$http_user_agent\" \"$sent_http_x_discourse_route\" $status $bytes_sent \"$http_referer\" $upstream_response_time $request_time \"$upstream_http_x_discourse_username\" \"$upstream_http_x_discourse_trackview\" \"$upstream_http_x_queue_time\" \"$upstream_http_x_redis_calls\" \"$upstream_http_x_redis_time\" \"$upstream_http_x_sql_calls\" \"$upstream_http_x_sql_time\"';\n\n# Allow bypass cache from localhost\ngeo $bypass_cache {\n  default         0;\n  127.0.0.1       1;\n  ::1             1;\n}\n\nserver {\n\n  access_log /var/log/nginx/access.log log_discourse;\n\n  listen 80;\n  gzip on;\n  gzip_vary on;\n  gzip_min_length 1000;\n  gzip_comp_level 5;\n  gzip_types application/json text/css text/javascript application/x-javascript application/javascript image/svg+xml application/wasm;\n  gzip_proxied any;\n\n  # Uncomment and configure this section for HTTPS support\n  # NOTE: Put your ssl cert in your main nginx config directory (/etc/nginx)\n  #\n  # rewrite ^/(.*) https://enter.your.web.hostname.here/$1 permanent;\n  #\n  # listen 443 ssl;\n  # ssl_certificate your-hostname-cert.pem;\n  # ssl_certificate_key your-hostname-cert.key;\n  # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n  # ssl_ciphers HIGH:!aNULL:!MD5;\n  #\n\n  server_name enter.your.web.hostname.here;\n  server_tokens off;\n\n  sendfile on;\n\n  keepalive_timeout 65;\n\n  # maximum file upload size (keep up to date when changing the corresponding site setting)\n  client_max_body_size 10m;\n\n  # path to discourse's public directory\n  set $public /var/www/discourse/public;\n\n  # without weak etags we get zero benefit from etags on dynamically compressed content\n  # further more etags are based on the file in nginx not sha of data\n  # use dates, it solves the problem fine even cross server\n  etag off;\n\n  # prevent direct download of backups\n  location ^~ /backups/ {\n    internal;\n  }\n\n  # bypass rails stack with a cheap 204 for favicon.ico requests\n  location /favicon.ico {\n    return 204;\n    access_log off;\n    log_not_found off;\n  }\n\n  location / {\n    root $public;\n    add_header ETag \"\";\n\n    # auth_basic on;\n    # auth_basic_user_file /etc/nginx/htpasswd;\n\n    location ~ ^/uploads/short-url/ {\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Request-Start \"t=${msec}\";\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $thescheme;\n      proxy_pass http://discourse;\n      break;\n    }\n\n    location ~ ^/secure-media-uploads/ {\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Request-Start \"t=${msec}\";\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $thescheme;\n      proxy_pass http://discourse;\n      break;\n    }\n\n    location ~* (fonts|assets|plugins|uploads)/.*\\.(eot|ttf|woff|woff2|ico|otf)$ {\n      expires 1y;\n      add_header Cache-Control public,immutable;\n      add_header Access-Control-Allow-Origin *;\n    }\n\n    location = /srv/status {\n      access_log off;\n      log_not_found off;\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Request-Start \"t=${msec}\";\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $thescheme;\n      proxy_pass http://discourse;\n      break;\n    }\n\n    # some minimal caching here so we don't keep asking\n    # longer term we should increase probably to 1y\n    location ~ ^/javascripts/ {\n      expires 1d;\n      add_header Cache-Control public,immutable;\n      add_header Access-Control-Allow-Origin *;\n    }\n\n    location ~ ^/assets/(?<asset_path>.+)$ {\n      expires 1y;\n      # asset pipeline enables this\n      brotli_static on;\n      gzip_static on;\n      add_header Cache-Control public,immutable;\n      # HOOK in asset location (used for extensibility)\n      # TODO I don't think this break is needed, it just breaks out of rewrite\n      break;\n    }\n\n    location ~ ^/plugins/ {\n      expires 1y;\n      add_header Cache-Control public,immutable;\n      add_header Access-Control-Allow-Origin *;\n    }\n\n    # cache emojis\n    location ~ /images/emoji/ {\n      expires 1y;\n      add_header Cache-Control public,immutable;\n      add_header Access-Control-Allow-Origin *;\n    }\n\n    location ~ ^/uploads/ {\n\n      # NOTE: it is really annoying that we can't just define headers\n      # at the top level and inherit.\n      #\n      # proxy_set_header DOES NOT inherit, by design, we must repeat it,\n      # otherwise headers are not set correctly\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Request-Start \"t=${msec}\";\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $thescheme;\n      proxy_set_header X-Sendfile-Type X-Accel-Redirect;\n      proxy_set_header X-Accel-Mapping $public/=/downloads/;\n      expires 1y;\n      add_header Cache-Control public,immutable;\n\n      ## optional upload anti-hotlinking rules\n      #valid_referers none blocked mysite.com *.mysite.com;\n      #if ($invalid_referer) { return 403; }\n\n      # custom CSS\n      location ~ /stylesheet-cache/ {\n          add_header Access-Control-Allow-Origin *;\n          try_files $uri =404;\n      }\n      # this allows us to bypass rails\n      location ~* \\.(gif|png|jpg|jpeg|bmp|tif|tiff|ico|webp)$ {\n          add_header Access-Control-Allow-Origin *;\n          try_files $uri =404;\n      }\n      # SVG needs an extra header attached\n      location ~* \\.(svg)$ {\n      }\n      # thumbnails & optimized images\n      location ~ /_?optimized/ {\n          add_header Access-Control-Allow-Origin *;\n          try_files $uri =404;\n      }\n\n      proxy_pass http://discourse;\n      break;\n    }\n\n    location ~ ^/admin/backups/ {\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Request-Start \"t=${msec}\";\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $thescheme;\n      proxy_set_header X-Sendfile-Type X-Accel-Redirect;\n      proxy_set_header X-Accel-Mapping $public/=/downloads/;\n      proxy_pass http://discourse;\n      break;\n    }\n\n    # This big block is needed so we can selectively enable\n    # acceleration for backups, avatars, sprites and so on.\n    # see note about repetition above\n    location ~ ^/(svg-sprite/|letter_avatar/|letter_avatar_proxy/|user_avatar|highlight-js|stylesheets|theme-javascripts|favicon/proxied|service-worker) {\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Request-Start \"t=${msec}\";\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $thescheme;\n\n      # if Set-Cookie is in the response nothing gets cached\n      # this is double bad cause we are not passing last modified in\n      proxy_ignore_headers \"Set-Cookie\";\n      proxy_hide_header \"Set-Cookie\";\n      proxy_hide_header \"X-Discourse-Username\";\n      proxy_hide_header \"X-Runtime\";\n\n      # note x-accel-redirect can not be used with proxy_cache\n      proxy_cache one;\n      proxy_cache_key \"$scheme,$host,$request_uri\";\n      proxy_cache_valid 200 301 302 7d;\n      proxy_cache_bypass $bypass_cache;\n      proxy_pass http://discourse;\n      break;\n    }\n\n    # we need buffering off for message bus\n    location /message-bus/ {\n      proxy_set_header X-Request-Start \"t=${msec}\";\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $thescheme;\n      proxy_http_version 1.1;\n      proxy_buffering off;\n      proxy_pass http://discourse;\n      break;\n    }\n\n    # this means every file in public is tried first\n    try_files $uri @discourse;\n  }\n\n  location /downloads/ {\n    internal;\n    alias $public/;\n  }\n\n  location @discourse {\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Request-Start \"t=${msec}\";\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $thescheme;\n    proxy_pass http://discourse;\n  }\n\n}\n"], "filenames": ["config/nginx.sample.conf"], "buggy_code_start_loc": [250], "buggy_code_end_loc": [251], "fixing_code_start_loc": [249], "fixing_code_end_loc": [249], "type": "CWE-404", "message": "Discourse is the an open source discussion platform. In affected versions a maliciously crafted request for static assets could cause error responses to be cached by Discourse's default NGINX proxy configuration. A corrected NGINX configuration is included in the latest stable, beta and tests-passed versions of Discourse. Users are advised to upgrade. There are no known workarounds for this vulnerability.", "other": {"cve": {"id": "CVE-2022-31182", "sourceIdentifier": "security-advisories@github.com", "published": "2022-08-01T20:15:08.353", "lastModified": "2022-08-08T15:22:44.240", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Discourse is the an open source discussion platform. In affected versions a maliciously crafted request for static assets could cause error responses to be cached by Discourse's default NGINX proxy configuration. A corrected NGINX configuration is included in the latest stable, beta and tests-passed versions of Discourse. Users are advised to upgrade. There are no known workarounds for this vulnerability."}, {"lang": "es", "value": "Discourse es una plataforma de debate de c\u00f3digo abierto. En las versiones afectadas, una petici\u00f3n maliciosamente dise\u00f1ada de activos est\u00e1ticos podr\u00eda causar que las respuestas de error fueran almacenadas en la cach\u00e9 por la configuraci\u00f3n predeterminada del proxy NGINX de Discourse. Una configuraci\u00f3n NGINX corregida es incluida en las \u00faltimas versiones estables, beta y de prueba de Discourse. Es recomendado a usuarios actualizar. No se presentan mitigaciones conocidas para esta vulnerabilidad"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "LOW", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "LOW", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-404"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:discourse:discourse:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.8.7", "matchCriteriaId": "84A39503-20A3-468D-9B35-2956C3CA9765"}, {"vulnerable": true, "criteria": "cpe:2.3:a:discourse:discourse:2.9.0:beta7:*:*:*:*:*:*", "matchCriteriaId": "750D2AD9-35E7-4AC7-9C22-AA90DAA34F3F"}]}]}], "references": [{"url": "https://github.com/discourse/discourse/commit/7af25544c3940c4d046c51f4cfac9c72a06d4f50", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/discourse/discourse/security/advisories/GHSA-4ff8-3j78-w6pp", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/discourse/discourse/commit/7af25544c3940c4d046c51f4cfac9c72a06d4f50"}}