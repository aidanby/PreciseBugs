{"buggy_code": ["<?php\n/* Copyright (c) 2002-2007  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2012  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2004       Sebastien Di Cintio     <sdicintio@ressource-toi.org>\n * Copyright (C) 2004       Eric Seigne             <eric.seigne@ryxeo.com>\n * Copyright (C) 2005-2017  Regis Houssin           <regis.houssin@inodbox.com>\n * Copyright (C) 2006       Andre Cianfarani        <acianfa@free.fr>\n * Copyright (C) 2006       Marc Barilley/Ocebo     <marc@ocebo.com>\n * Copyright (C) 2007       Franky Van Liedekerke   <franky.van.liedekerker@telenet.be>\n * Copyright (C) 2007       Patrick Raguin          <patrick.raguin@gmail.com>\n * Copyright (C) 2010       Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2010-2021  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2011       Herve Prot              <herve.prot@symeos.com>\n * Copyright (C) 2012-2016  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2012       Cedric Salvador         <csalvador@gpcsolutions.fr>\n * Copyright (C) 2012-2015  Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2014-2020  Alexandre Spangaro      <aspangaro@open-dsi.fr>\n * Copyright (C) 2018-2021  Ferran Marcet           <fmarcet@2byte.es>\n * Copyright (C) 2018-2021  Fr\u00e9d\u00e9ric France         <frederic.france@netlogic.fr>\n * Copyright (C) 2018       Nicolas ZABOURI\t        <info@inovea-conseil.com>\n * Copyright (C) 2018       Christophe Battarel     <christophe@altairis.fr>\n * Copyright (C) 2018       Josep Lluis Amador      <joseplluis@lliuretic.cat>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/core/class/html.form.class.php\n *  \\ingroup    core\n *\t\\brief      File of class with all html predefined components\n */\n\n\n/**\n *\tClass to manage generation of HTML components\n *\tOnly common components must be here.\n *\n *  TODO Merge all function load_cache_* and loadCache* (except load_cache_vatrates) into one generic function loadCacheTable\n */\nclass Form\n{\n\t/**\n\t * @var DoliDB Database handler.\n\t */\n\tpublic $db;\n\n\t/**\n\t * @var string Error code (or message)\n\t */\n\tpublic $error = '';\n\n\t/**\n\t * @var string[]    Array of error strings\n\t */\n\tpublic $errors = array();\n\n\tpublic $num;\n\n\t// Cache arrays\n\tpublic $cache_types_paiements = array();\n\tpublic $cache_conditions_paiements = array();\n\tpublic $cache_transport_mode = array();\n\tpublic $cache_availability = array();\n\tpublic $cache_demand_reason = array();\n\tpublic $cache_types_fees = array();\n\tpublic $cache_vatrates = array();\n\n\n\t/**\n\t * Constructor\n\t *\n\t * @param\t\tDoliDB\t\t$db      Database handler\n\t */\n\tpublic function __construct($db)\n\t{\n\t\t$this->db = $db;\n\t}\n\n\t/**\n\t * Output key field for an editable field\n\t *\n\t * @param   string\t$text\t\t\tText of label or key to translate\n\t * @param   string\t$htmlname\t\tName of select field ('edit' prefix will be added)\n\t * @param   string\t$preselected    Value to show/edit (not used in this function)\n\t * @param\tobject\t$object\t\t\tObject\n\t * @param\tboolean\t$perm\t\t\tPermission to allow button to edit parameter. Set it to 0 to have a not edited field.\n\t * @param\tstring\t$typeofdata\t\tType of data ('string' by default, 'email', 'amount:99', 'numeric:99', 'text' or 'textarea:rows:cols', 'datepicker' ('day' do not work, don't know why), 'checkbox:ckeditor:dolibarr_zzz:width:height:savemethod:1:rows:cols', 'select;xxx[:class]'...)\n\t * @param\tstring\t$moreparam\t\tMore param to add on a href URL.\n\t * @param   int     $fieldrequired  1 if we want to show field as mandatory using the \"fieldrequired\" CSS.\n\t * @param   int     $notabletag     1=Do not output table tags but output a ':', 2=Do not output table tags and no ':', 3=Do not output table tags but output a ' '\n\t * @param\tstring\t$paramid\t\tKey of parameter for id ('id', 'socid')\n\t * @param\tstring\t$help\t\t\tTooltip help\n\t * @return\tstring\t\t\t\t\tHTML edit field\n\t */\n\tpublic function editfieldkey($text, $htmlname, $preselected, $object, $perm, $typeofdata = 'string', $moreparam = '', $fieldrequired = 0, $notabletag = 0, $paramid = 'id', $help = '')\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$ret = '';\n\n\t\t// TODO change for compatibility\n\t\tif (!empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && !preg_match('/^select;/', $typeofdata)) {\n\t\t\tif (!empty($perm)) {\n\t\t\t\t$tmp = explode(':', $typeofdata);\n\t\t\t\t$ret .= '<div class=\"editkey_'.$tmp[0].(!empty($tmp[1]) ? ' '.$tmp[1] : '').'\" id=\"'.$htmlname.'\">';\n\t\t\t\tif ($fieldrequired) {\n\t\t\t\t\t$ret .= '<span class=\"fieldrequired\">';\n\t\t\t\t}\n\t\t\t\tif ($help) {\n\t\t\t\t\t$ret .= $this->textwithpicto($langs->trans($text), $help);\n\t\t\t\t} else {\n\t\t\t\t\t$ret .= $langs->trans($text);\n\t\t\t\t}\n\t\t\t\tif ($fieldrequired) {\n\t\t\t\t\t$ret .= '</span>';\n\t\t\t\t}\n\t\t\t\t$ret .= '</div>'.\"\\n\";\n\t\t\t} else {\n\t\t\t\tif ($fieldrequired) {\n\t\t\t\t\t$ret .= '<span class=\"fieldrequired\">';\n\t\t\t\t}\n\t\t\t\tif ($help) {\n\t\t\t\t\t$ret .= $this->textwithpicto($langs->trans($text), $help);\n\t\t\t\t} else {\n\t\t\t\t\t$ret .= $langs->trans($text);\n\t\t\t\t}\n\t\t\t\tif ($fieldrequired) {\n\t\t\t\t\t$ret .= '</span>';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (empty($notabletag) && GETPOST('action', 'aZ09') != 'edit'.$htmlname && $perm) {\n\t\t\t\t$ret .= '<table class=\"nobordernopadding centpercent\"><tr><td class=\"nowrap\">';\n\t\t\t}\n\t\t\tif ($fieldrequired) {\n\t\t\t\t$ret .= '<span class=\"fieldrequired\">';\n\t\t\t}\n\t\t\tif ($help) {\n\t\t\t\t$ret .= $this->textwithpicto($langs->trans($text), $help);\n\t\t\t} else {\n\t\t\t\t$ret .= $langs->trans($text);\n\t\t\t}\n\t\t\tif ($fieldrequired) {\n\t\t\t\t$ret .= '</span>';\n\t\t\t}\n\t\t\tif (!empty($notabletag)) {\n\t\t\t\t$ret .= ' ';\n\t\t\t}\n\t\t\tif (empty($notabletag) && GETPOST('action', 'aZ09') != 'edit'.$htmlname && $perm) {\n\t\t\t\t$ret .= '</td>';\n\t\t\t}\n\t\t\tif (empty($notabletag) && GETPOST('action', 'aZ09') != 'edit'.$htmlname && $perm) {\n\t\t\t\t$ret .= '<td class=\"right\">';\n\t\t\t}\n\t\t\tif ($htmlname && GETPOST('action', 'aZ09') != 'edit'.$htmlname && $perm) {\n\t\t\t\t$ret .= '<a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=edit'.$htmlname.'&token='.newToken().'&'.$paramid.'='.$object->id.$moreparam.'\">'.img_edit($langs->trans('Edit'), ($notabletag ? 0 : 1)).'</a>';\n\t\t\t}\n\t\t\tif (!empty($notabletag) && $notabletag == 1) {\n\t\t\t\t$ret .= ' : ';\n\t\t\t}\n\t\t\tif (!empty($notabletag) && $notabletag == 3) {\n\t\t\t\t$ret .= ' ';\n\t\t\t}\n\t\t\tif (empty($notabletag) && GETPOST('action', 'aZ09') != 'edit'.$htmlname && $perm) {\n\t\t\t\t$ret .= '</td>';\n\t\t\t}\n\t\t\tif (empty($notabletag) && GETPOST('action', 'aZ09') != 'edit'.$htmlname && $perm) {\n\t\t\t\t$ret .= '</tr></table>';\n\t\t\t}\n\t\t}\n\n\t\treturn $ret;\n\t}\n\n\t/**\n\t * Output value of a field for an editable field\n\t *\n\t * @param\tstring\t$text\t\t\tText of label (not used in this function)\n\t * @param\tstring\t$htmlname\t\tName of select field\n\t * @param\tstring\t$value\t\t\tValue to show/edit\n\t * @param\tobject\t$object\t\t\tObject\n\t * @param\tboolean\t$perm\t\t\tPermission to allow button to edit parameter\n\t * @param\tstring\t$typeofdata\t\tType of data ('string' by default, 'email', 'amount:99', 'numeric:99', 'text' or 'textarea:rows:cols%', 'datepicker' ('day' do not work, don't know why), 'dayhour' or 'datepickerhour', 'ckeditor:dolibarr_zzz:width:height:savemethod:toolbarstartexpanded:rows:cols', 'select;xkey:xval,ykey:yval,...')\n\t * @param\tstring\t$editvalue\t\tWhen in edit mode, use this value as $value instead of value (for example, you can provide here a formated price instead of numeric value). Use '' to use same than $value\n\t * @param\tobject\t$extObject\t\tExternal object\n\t * @param\tmixed\t$custommsg\t\tString or Array of custom messages : eg array('success' => 'MyMessage', 'error' => 'MyMessage')\n\t * @param\tstring\t$moreparam\t\tMore param to add on the form action href URL\n\t * @param   int     $notabletag     Do no output table tags\n\t * @param\tstring\t$formatfunc\t\tCall a specific function to output field in view mode (For example: 'dol_print_email')\n\t * @param\tstring\t$paramid\t\tKey of parameter for id ('id', 'socid')\n\t * @return  string\t\t\t\t\tHTML edit field\n\t */\n\tpublic function editfieldval($text, $htmlname, $value, $object, $perm, $typeofdata = 'string', $editvalue = '', $extObject = null, $custommsg = null, $moreparam = '', $notabletag = 0, $formatfunc = '', $paramid = 'id')\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$ret = '';\n\n\t\t// Check parameters\n\t\tif (empty($typeofdata)) {\n\t\t\treturn 'ErrorBadParameter';\n\t\t}\n\n\t\t// When option to edit inline is activated\n\t\tif (!empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && !preg_match('/^select;|day|datepicker|dayhour|datehourpicker/', $typeofdata)) { // TODO add jquery timepicker and support select\n\t\t\t$ret .= $this->editInPlace($object, $value, $htmlname, $perm, $typeofdata, $editvalue, $extObject, $custommsg);\n\t\t} else {\n\t\t\t$editmode = (GETPOST('action', 'aZ09') == 'edit'.$htmlname);\n\t\t\tif ($editmode) {\n\t\t\t\t$ret .= \"\\n\";\n\t\t\t\t$ret .= '<form method=\"post\" action=\"'.$_SERVER[\"PHP_SELF\"].($moreparam ? '?'.$moreparam : '').'\">';\n\t\t\t\t$ret .= '<input type=\"hidden\" name=\"action\" value=\"set'.$htmlname.'\">';\n\t\t\t\t$ret .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t\t$ret .= '<input type=\"hidden\" name=\"'.$paramid.'\" value=\"'.$object->id.'\">';\n\t\t\t\tif (empty($notabletag)) {\n\t\t\t\t\t$ret .= '<table class=\"nobordernopadding centpercent\">';\n\t\t\t\t}\n\t\t\t\tif (empty($notabletag)) {\n\t\t\t\t\t$ret .= '<tr><td>';\n\t\t\t\t}\n\t\t\t\tif (preg_match('/^(string|safehtmlstring|email)/', $typeofdata)) {\n\t\t\t\t\t$tmp = explode(':', $typeofdata);\n\t\t\t\t\t$ret .= '<input type=\"text\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" value=\"'.($editvalue ? $editvalue : $value).'\"'.($tmp[1] ? ' size=\"'.$tmp[1].'\"' : '').' autofocus>';\n\t\t\t\t} elseif (preg_match('/^(numeric|amount)/', $typeofdata)) {\n\t\t\t\t\t$tmp = explode(':', $typeofdata);\n\t\t\t\t\t$valuetoshow = price2num($editvalue ? $editvalue : $value);\n\t\t\t\t\t$ret .= '<input type=\"text\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" value=\"'.($valuetoshow != '' ? price($valuetoshow) : '').'\"'.($tmp[1] ? ' size=\"'.$tmp[1].'\"' : '').' autofocus>';\n\t\t\t\t} elseif (preg_match('/^(checkbox)/', $typeofdata)) {\n\t\t\t\t\t$tmp = explode(':', $typeofdata);\n\t\t\t\t\t$ret .= '<input type=\"checkbox\" id=\"' . $htmlname . '\" name=\"' . $htmlname . '\" value=\"' . $value . '\"' . ($tmp[1] ? $tmp[1] : '') . '/>';\n\t\t\t\t} elseif (preg_match('/^text/', $typeofdata) || preg_match('/^note/', $typeofdata)) {\t// if wysiwyg is enabled $typeofdata = 'ckeditor'\n\t\t\t\t\t$tmp = explode(':', $typeofdata);\n\t\t\t\t\t$cols = $tmp[2];\n\t\t\t\t\t$morealt = '';\n\t\t\t\t\tif (preg_match('/%/', $cols)) {\n\t\t\t\t\t\t$morealt = ' style=\"width: '.$cols.'\"';\n\t\t\t\t\t\t$cols = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t$valuetoshow = ($editvalue ? $editvalue : $value);\n\t\t\t\t\t$ret .= '<textarea id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" wrap=\"soft\" rows=\"'.($tmp[1] ? $tmp[1] : '20').'\"'.($cols ? ' cols=\"'.$cols.'\"' : 'class=\"quatrevingtpercent\"').$morealt.'\" autofocus>';\n\t\t\t\t\t// textarea convert automatically entities chars into simple chars.\n\t\t\t\t\t// So we convert & into &amp; so a string like 'a &lt; <b>b</b><br>\u00e9<br>&lt;script&gt;alert('X');&lt;script&gt;' stay a correct html and is not converted by textarea component when wysiwig is off.\n\t\t\t\t\t$valuetoshow = str_replace('&', '&amp;', $valuetoshow);\n\t\t\t\t\t$ret .= dol_string_neverthesehtmltags($valuetoshow, array('textarea'));\n\t\t\t\t\t$ret .= '</textarea>';\n\t\t\t\t} elseif ($typeofdata == 'day' || $typeofdata == 'datepicker') {\n\t\t\t\t\t$ret .= $this->selectDate($value, $htmlname, 0, 0, 1, 'form'.$htmlname, 1, 0);\n\t\t\t\t} elseif ($typeofdata == 'dayhour' || $typeofdata == 'datehourpicker') {\n\t\t\t\t\t$ret .= $this->selectDate($value, $htmlname, 1, 1, 1, 'form'.$htmlname, 1, 0);\n\t\t\t\t} elseif (preg_match('/^select;/', $typeofdata)) {\n\t\t\t\t\t$arraydata = explode(',', preg_replace('/^select;/', '', $typeofdata));\n\t\t\t\t\t$arraylist = array();\n\t\t\t\t\tforeach ($arraydata as $val) {\n\t\t\t\t\t\t$tmp = explode(':', $val);\n\t\t\t\t\t\t$tmpkey = str_replace('|', ':', $tmp[0]);\n\t\t\t\t\t\t$arraylist[$tmpkey] = $tmp[1];\n\t\t\t\t\t}\n\t\t\t\t\t$ret .= $this->selectarray($htmlname, $arraylist, $value);\n\t\t\t\t} elseif (preg_match('/^ckeditor/', $typeofdata)) {\n\t\t\t\t\t$tmp = explode(':', $typeofdata); // Example: ckeditor:dolibarr_zzz:width:height:savemethod:toolbarstartexpanded:rows:cols:uselocalbrowser\n\t\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\t\t\t\t\t$doleditor = new DolEditor($htmlname, ($editvalue ? $editvalue : $value), ($tmp[2] ? $tmp[2] : ''), ($tmp[3] ? $tmp[3] : '100'), ($tmp[1] ? $tmp[1] : 'dolibarr_notes'), 'In', ($tmp[5] ? $tmp[5] : 0), (isset($tmp[8]) ? ($tmp[8] ?true:false) : true), true, ($tmp[6] ? $tmp[6] : '20'), ($tmp[7] ? $tmp[7] : '100'));\n\t\t\t\t\t$ret .= $doleditor->Create(1);\n\t\t\t\t}\n\t\t\t\tif (empty($notabletag)) {\n\t\t\t\t\t$ret .= '</td>';\n\t\t\t\t}\n\n\t\t\t\tif (empty($notabletag)) {\n\t\t\t\t\t$ret .= '<td class=\"left\">';\n\t\t\t\t}\n\t\t\t\t//else $ret.='<div class=\"clearboth\"></div>';\n\t\t\t\t$ret .= '<input type=\"submit\" class=\"smallpaddingimp button'.(empty($notabletag) ? '' : ' ').'\" name=\"modify\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t\tif (preg_match('/ckeditor|textarea/', $typeofdata) && empty($notabletag)) {\n\t\t\t\t\t$ret .= '<br>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\t$ret .= '<input type=\"submit\" class=\"smallpaddingimp button button-cancel'.(empty($notabletag) ? '' : ' ').'\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\t\tif (empty($notabletag)) {\n\t\t\t\t\t$ret .= '</td>';\n\t\t\t\t}\n\n\t\t\t\tif (empty($notabletag)) {\n\t\t\t\t\t$ret .= '</tr></table>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\t$ret .= '</form>'.\"\\n\";\n\t\t\t} else {\n\t\t\t\tif (preg_match('/^(email)/', $typeofdata)) {\n\t\t\t\t\t$ret .= dol_print_email($value, 0, 0, 0, 0, 1);\n\t\t\t\t} elseif (preg_match('/^(amount|numeric)/', $typeofdata)) {\n\t\t\t\t\t$ret .= ($value != '' ? price($value, '', $langs, 0, -1, -1, $conf->currency) : '');\n\t\t\t\t} elseif (preg_match('/^(checkbox)/', $typeofdata)) {\n\t\t\t\t\t$tmp = explode(':', $typeofdata);\n\t\t\t\t\t$ret .= '<input type=\"checkbox\" disabled id=\"' . $htmlname . '\" name=\"' . $htmlname . '\" value=\"' . $value . '\"' . ($tmp[1] ? $tmp[1] : '') . '/>';\n\t\t\t\t} elseif (preg_match('/^text/', $typeofdata) || preg_match('/^note/', $typeofdata)) {\n\t\t\t\t\t$ret .= dol_htmlentitiesbr($value);\n\t\t\t\t} elseif (preg_match('/^safehtmlstring/', $typeofdata)) {\n\t\t\t\t\t$ret .= dol_string_onlythesehtmltags($value);\n\t\t\t\t} elseif (preg_match('/^restricthtml/', $typeofdata)) {\n\t\t\t\t\t$ret .= dol_string_onlythesehtmltags($value);\n\t\t\t\t} elseif ($typeofdata == 'day' || $typeofdata == 'datepicker') {\n\t\t\t\t\t$ret .= '<span class=\"valuedate\">'.dol_print_date($value, 'day').'</span>';\n\t\t\t\t} elseif ($typeofdata == 'dayhour' || $typeofdata == 'datehourpicker') {\n\t\t\t\t\t$ret .= '<span class=\"valuedate\">'.dol_print_date($value, 'dayhour').'</span>';\n\t\t\t\t} elseif (preg_match('/^select;/', $typeofdata)) {\n\t\t\t\t\t$arraydata = explode(',', preg_replace('/^select;/', '', $typeofdata));\n\t\t\t\t\t$arraylist = array();\n\t\t\t\t\tforeach ($arraydata as $val) {\n\t\t\t\t\t\t$tmp = explode(':', $val);\n\t\t\t\t\t\t$arraylist[$tmp[0]] = $tmp[1];\n\t\t\t\t\t}\n\t\t\t\t\t$ret .= $arraylist[$value];\n\t\t\t\t\tif ($htmlname == 'fk_product_type') {\n\t\t\t\t\t\tif ($value == 0) {\n\t\t\t\t\t\t\t$ret = img_picto($langs->trans(\"Product\"), 'product', 'class=\"paddingleftonly paddingrightonly colorgrey\"').$ret;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$ret = img_picto($langs->trans(\"Service\"), 'service', 'class=\"paddingleftonly paddingrightonly colorgrey\"').$ret;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif (preg_match('/^ckeditor/', $typeofdata)) {\n\t\t\t\t\t$tmpcontent = dol_htmlentitiesbr($value);\n\t\t\t\t\tif (!empty($conf->global->MAIN_DISABLE_NOTES_TAB)) {\n\t\t\t\t\t\t$firstline = preg_replace('/<br>.*/', '', $tmpcontent);\n\t\t\t\t\t\t$firstline = preg_replace('/[\\n\\r].*/', '', $firstline);\n\t\t\t\t\t\t$tmpcontent = $firstline.((strlen($firstline) != strlen($tmpcontent)) ? '...' : '');\n\t\t\t\t\t}\n\t\t\t\t\t// We dont use dol_escape_htmltag to get the html formating active, but this need we must also\n\t\t\t\t\t// clean data from some dangerous html\n\t\t\t\t\t$ret .= dol_string_onlythesehtmltags(dol_htmlentitiesbr($tmpcontent));\n\t\t\t\t} else {\n\t\t\t\t\t$ret .= dol_escape_htmltag($value);\n\t\t\t\t}\n\n\t\t\t\tif ($formatfunc && method_exists($object, $formatfunc)) {\n\t\t\t\t\t$ret = $object->$formatfunc($ret);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $ret;\n\t}\n\n\t/**\n\t * Output edit in place form\n\t *\n\t * @param   string\t$fieldname\t\tName of the field\n\t * @param\tobject\t$object\t\t\tObject\n\t * @param\tboolean\t$perm\t\t\tPermission to allow button to edit parameter. Set it to 0 to have a not edited field.\n\t * @param\tstring\t$typeofdata\t\tType of data ('string' by default, 'email', 'amount:99', 'numeric:99', 'text' or 'textarea:rows:cols', 'datepicker' ('day' do not work, don't know why), 'ckeditor:dolibarr_zzz:width:height:savemethod:1:rows:cols', 'select;xxx[:class]'...)\n\t * @param\tstring\t$check\t\t\tSame coe than $check parameter of GETPOST()\n\t * @param\tstring\t$morecss\t\tMore CSS\n\t * @return\tstring   \t\t      \tHTML code for the edit of alternative language\n\t */\n\tpublic function widgetForTranslation($fieldname, $object, $perm, $typeofdata = 'string', $check = '', $morecss = '')\n\t{\n\t\tglobal $conf, $langs, $extralanguages;\n\n\t\t$result = '';\n\n\t\t// List of extra languages\n\t\t$arrayoflangcode = array();\n\t\tif (!empty($conf->global->PDF_USE_ALSO_LANGUAGE_CODE)) {\n\t\t\t$arrayoflangcode[] = $conf->global->PDF_USE_ALSO_LANGUAGE_CODE;\n\t\t}\n\n\t\tif (is_array($arrayoflangcode) && count($arrayoflangcode)) {\n\t\t\tif (!is_object($extralanguages)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/extralanguages.class.php';\n\t\t\t\t$extralanguages = new ExtraLanguages($this->db);\n\t\t\t}\n\t\t\t$extralanguages->fetch_name_extralanguages('societe');\n\n\t\t\tif (!is_array($extralanguages->attributes[$object->element]) || empty($extralanguages->attributes[$object->element][$fieldname])) {\n\t\t\t\treturn ''; // No extralang field to show\n\t\t\t}\n\n\t\t\t$result .= '<!-- Widget for translation -->'.\"\\n\";\n\t\t\t$result .= '<div class=\"inline-block paddingleft image-'.$object->element.'-'.$fieldname.'\">';\n\t\t\t$s = img_picto($langs->trans(\"ShowOtherLanguages\"), 'language', '', false, 0, 0, '', 'fa-15 editfieldlang');\n\t\t\t$result .= $s;\n\t\t\t$result .= '</div>';\n\n\t\t\t$result .= '<div class=\"inline-block hidden field-'.$object->element.'-'.$fieldname.'\">';\n\n\t\t\t$resultforextrlang = '';\n\t\t\tforeach ($arrayoflangcode as $langcode) {\n\t\t\t\t$valuetoshow = GETPOSTISSET('field-'.$object->element.\"-\".$fieldname.\"-\".$langcode) ? GETPOST('field-'.$object->element.'-'.$fieldname.\"-\".$langcode, $check) : '';\n\t\t\t\tif (empty($valuetoshow)) {\n\t\t\t\t\t$object->fetchValuesForExtraLanguages();\n\t\t\t\t\t//var_dump($object->array_languages);\n\t\t\t\t\t$valuetoshow = $object->array_languages[$fieldname][$langcode];\n\t\t\t\t}\n\n\t\t\t\t$s = picto_from_langcode($langcode, 'class=\"pictoforlang paddingright\"');\n\t\t\t\t$resultforextrlang .= $s;\n\n\t\t\t\t// TODO Use the showInputField() method of ExtraLanguages object\n\t\t\t\tif ($typeofdata == 'textarea') {\n\t\t\t\t\t$resultforextrlang .= '<textarea name=\"field-'.$object->element.\"-\".$fieldname.\"-\".$langcode.'\" id=\"'.$fieldname.\"-\".$langcode.'\" class=\"'.$morecss.'\" rows=\"'.ROWS_2.'\" wrap=\"soft\">';\n\t\t\t\t\t$resultforextrlang .= $valuetoshow;\n\t\t\t\t\t$resultforextrlang .= '</textarea>';\n\t\t\t\t} else {\n\t\t\t\t\t$resultforextrlang .= '<input type=\"text\" class=\"inputfieldforlang '.($morecss ? ' '.$morecss : '').'\" name=\"field-'.$object->element.'-'.$fieldname.'-'.$langcode.'\" value=\"'.$valuetoshow.'\">';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$result .= $resultforextrlang;\n\n\t\t\t$result .= '</div>';\n\t\t\t$result .= '<script>$(\".image-'.$object->element.'-'.$fieldname.'\").click(function() { console.log(\"Toggle lang widget\"); jQuery(\".field-'.$object->element.'-'.$fieldname.'\").toggle(); });</script>';\n\t\t}\n\n\t\treturn $result;\n\t}\n\n\t/**\n\t * Output edit in place form\n\t *\n\t * @param\tobject\t$object\t\t\tObject\n\t * @param\tstring\t$value\t\t\tValue to show/edit\n\t * @param\tstring\t$htmlname\t\tDIV ID (field name)\n\t * @param\tint\t\t$condition\t\tCondition to edit\n\t * @param\tstring\t$inputType\t\tType of input ('string', 'numeric', 'datepicker' ('day' do not work, don't know why), 'textarea:rows:cols', 'ckeditor:dolibarr_zzz:width:height:?:1:rows:cols', 'select:loadmethod:savemethod:buttononly')\n\t * @param\tstring\t$editvalue\t\tWhen in edit mode, use this value as $value instead of value\n\t * @param\tobject\t$extObject\t\tExternal object\n\t * @param\tmixed\t$custommsg\t\tString or Array of custom messages : eg array('success' => 'MyMessage', 'error' => 'MyMessage')\n\t * @return\tstring   \t\t      \tHTML edit in place\n\t */\n\tprotected function editInPlace($object, $value, $htmlname, $condition, $inputType = 'textarea', $editvalue = null, $extObject = null, $custommsg = null)\n\t{\n\t\tglobal $conf;\n\n\t\t$out = '';\n\n\t\t// Check parameters\n\t\tif (preg_match('/^text/', $inputType)) {\n\t\t\t$value = dol_nl2br($value);\n\t\t} elseif (preg_match('/^numeric/', $inputType)) {\n\t\t\t$value = price($value);\n\t\t} elseif ($inputType == 'day' || $inputType == 'datepicker') {\n\t\t\t$value = dol_print_date($value, 'day');\n\t\t}\n\n\t\tif ($condition) {\n\t\t\t$element = false;\n\t\t\t$table_element = false;\n\t\t\t$fk_element\t\t= false;\n\t\t\t$loadmethod\t\t= false;\n\t\t\t$savemethod\t\t= false;\n\t\t\t$ext_element\t= false;\n\t\t\t$button_only\t= false;\n\t\t\t$inputOption = '';\n\n\t\t\tif (is_object($object)) {\n\t\t\t\t$element = $object->element;\n\t\t\t\t$table_element = $object->table_element;\n\t\t\t\t$fk_element = $object->id;\n\t\t\t}\n\n\t\t\tif (is_object($extObject)) {\n\t\t\t\t$ext_element = $extObject->element;\n\t\t\t}\n\n\t\t\tif (preg_match('/^(string|email|numeric)/', $inputType)) {\n\t\t\t\t$tmp = explode(':', $inputType);\n\t\t\t\t$inputType = $tmp[0];\n\t\t\t\tif (!empty($tmp[1])) {\n\t\t\t\t\t$inputOption = $tmp[1];\n\t\t\t\t}\n\t\t\t\tif (!empty($tmp[2])) {\n\t\t\t\t\t$savemethod = $tmp[2];\n\t\t\t\t}\n\t\t\t\t$out .= '<input id=\"width_'.$htmlname.'\" value=\"'.$inputOption.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t} elseif ((preg_match('/^day$/', $inputType)) || (preg_match('/^datepicker/', $inputType)) || (preg_match('/^datehourpicker/', $inputType))) {\n\t\t\t\t$tmp = explode(':', $inputType);\n\t\t\t\t$inputType = $tmp[0];\n\t\t\t\tif (!empty($tmp[1])) {\n\t\t\t\t\t$inputOption = $tmp[1];\n\t\t\t\t}\n\t\t\t\tif (!empty($tmp[2])) {\n\t\t\t\t\t$savemethod = $tmp[2];\n\t\t\t\t}\n\n\t\t\t\t$out .= '<input id=\"timestamp\" type=\"hidden\"/>'.\"\\n\"; // Use for timestamp format\n\t\t\t} elseif (preg_match('/^(select|autocomplete)/', $inputType)) {\n\t\t\t\t$tmp = explode(':', $inputType);\n\t\t\t\t$inputType = $tmp[0];\n\t\t\t\t$loadmethod = $tmp[1];\n\t\t\t\tif (!empty($tmp[2])) {\n\t\t\t\t\t$savemethod = $tmp[2];\n\t\t\t\t}\n\t\t\t\tif (!empty($tmp[3])) {\n\t\t\t\t\t$button_only = true;\n\t\t\t\t}\n\t\t\t} elseif (preg_match('/^textarea/', $inputType)) {\n\t\t\t\t$tmp = explode(':', $inputType);\n\t\t\t\t$inputType = $tmp[0];\n\t\t\t\t$rows = (empty($tmp[1]) ? '8' : $tmp[1]);\n\t\t\t\t$cols = (empty($tmp[2]) ? '80' : $tmp[2]);\n\t\t\t} elseif (preg_match('/^ckeditor/', $inputType)) {\n\t\t\t\t$tmp = explode(':', $inputType);\n\t\t\t\t$inputType = $tmp[0];\n\t\t\t\t$toolbar = $tmp[1];\n\t\t\t\tif (!empty($tmp[2])) {\n\t\t\t\t\t$width = $tmp[2];\n\t\t\t\t}\n\t\t\t\tif (!empty($tmp[3])) {\n\t\t\t\t\t$heigth = $tmp[3];\n\t\t\t\t}\n\t\t\t\tif (!empty($tmp[4])) {\n\t\t\t\t\t$savemethod = $tmp[4];\n\t\t\t\t}\n\n\t\t\t\tif (!empty($conf->fckeditor->enabled)) {\n\t\t\t\t\t$out .= '<input id=\"ckeditor_toolbar\" value=\"'.$toolbar.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\t$inputType = 'textarea';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$out .= '<input id=\"element_'.$htmlname.'\" value=\"'.$element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t$out .= '<input id=\"table_element_'.$htmlname.'\" value=\"'.$table_element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t$out .= '<input id=\"fk_element_'.$htmlname.'\" value=\"'.$fk_element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t$out .= '<input id=\"loadmethod_'.$htmlname.'\" value=\"'.$loadmethod.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\tif (!empty($savemethod)) {\n\t\t\t\t$out .= '<input id=\"savemethod_'.$htmlname.'\" value=\"'.$savemethod.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t}\n\t\t\tif (!empty($ext_element)) {\n\t\t\t\t$out .= '<input id=\"ext_element_'.$htmlname.'\" value=\"'.$ext_element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t}\n\t\t\tif (!empty($custommsg)) {\n\t\t\t\tif (is_array($custommsg)) {\n\t\t\t\t\tif (!empty($custommsg['success'])) {\n\t\t\t\t\t\t$out .= '<input id=\"successmsg_'.$htmlname.'\" value=\"'.$custommsg['success'].'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t\tif (!empty($custommsg['error'])) {\n\t\t\t\t\t\t$out .= '<input id=\"errormsg_'.$htmlname.'\" value=\"'.$custommsg['error'].'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$out .= '<input id=\"successmsg_'.$htmlname.'\" value=\"'.$custommsg.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($inputType == 'textarea') {\n\t\t\t\t$out .= '<input id=\"textarea_'.$htmlname.'_rows\" value=\"'.$rows.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t$out .= '<input id=\"textarea_'.$htmlname.'_cols\" value=\"'.$cols.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t}\n\t\t\t$out .= '<span id=\"viewval_'.$htmlname.'\" class=\"viewval_'.$inputType.($button_only ? ' inactive' : ' active').'\">'.$value.'</span>'.\"\\n\";\n\t\t\t$out .= '<span id=\"editval_'.$htmlname.'\" class=\"editval_'.$inputType.($button_only ? ' inactive' : ' active').' hideobject\">'.(!empty($editvalue) ? $editvalue : $value).'</span>'.\"\\n\";\n\t\t} else {\n\t\t\t$out = $value;\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tShow a text and picto with tooltip on text or picto.\n\t *  Can be called by an instancied $form->textwithtooltip or by a static call Form::textwithtooltip\n\t *\n\t *\t@param\tstring\t\t$text\t\t\t\tText to show\n\t *\t@param\tstring\t\t$htmltext\t\t\tHTML content of tooltip. Must be HTML/UTF8 encoded.\n\t *\t@param\tint\t\t\t$tooltipon\t\t\t1=tooltip on text, 2=tooltip on image, 3=tooltip sur les 2\n\t *\t@param\tint\t\t\t$direction\t\t\t-1=image is before, 0=no image, 1=image is after\n\t *\t@param\tstring\t\t$img\t\t\t\tHtml code for image (use img_xxx() function to get it)\n\t *\t@param\tstring\t\t$extracss\t\t\tAdd a CSS style to td tags\n\t *\t@param\tint\t\t\t$notabs\t\t\t\t0=Include table and tr tags, 1=Do not include table and tr tags, 2=use div, 3=use span\n\t *\t@param\tstring\t\t$incbefore\t\t\tInclude code before the text\n\t *\t@param\tint\t\t\t$noencodehtmltext\tDo not encode into html entity the htmltext\n\t *  @param  string      $tooltiptrigger\t\t''=Tooltip on hover, 'abc'=Tooltip on click (abc is a unique key)\n\t *  @param\tint\t\t\t$forcenowrap\t\tForce no wrap between text and picto (works with notabs=2 only)\n\t *\t@return\tstring\t\t\t\t\t\t\tCode html du tooltip (texte+picto)\n\t *\t@see\ttextwithpicto() Use thisfunction if you can.\n\t */\n\tpublic function textwithtooltip($text, $htmltext, $tooltipon = 1, $direction = 0, $img = '', $extracss = '', $notabs = 3, $incbefore = '', $noencodehtmltext = 0, $tooltiptrigger = '', $forcenowrap = 0)\n\t{\n\t\tif ($incbefore) {\n\t\t\t$text = $incbefore.$text;\n\t\t}\n\t\tif (!$htmltext) {\n\t\t\treturn $text;\n\t\t}\n\t\t$direction = (int) $direction;\t// For backward compatibility when $direction was set to '' instead of 0\n\n\t\t$tag = 'td';\n\t\tif ($notabs == 2) {\n\t\t\t$tag = 'div';\n\t\t}\n\t\tif ($notabs == 3) {\n\t\t\t$tag = 'span';\n\t\t}\n\t\t// Sanitize tooltip\n\t\t$htmltext = str_replace(array(\"\\r\", \"\\n\"), '', $htmltext);\n\n\t\t$extrastyle = '';\n\t\tif ($direction < 0) {\n\t\t\t$extracss = ($extracss ? $extracss.' ' : '').($notabs != 3 ? 'inline-block' : '');\n\t\t\t$extrastyle = 'padding: 0px; padding-left: 3px !important;';\n\t\t}\n\t\tif ($direction > 0) {\n\t\t\t$extracss = ($extracss ? $extracss.' ' : '').($notabs != 3 ? 'inline-block' : '');\n\t\t\t$extrastyle = 'padding: 0px; padding-right: 3px !important;';\n\t\t}\n\n\t\t$classfortooltip = 'classfortooltip';\n\n\t\t$s = '';\n\t\t$textfordialog = '';\n\n\t\tif ($tooltiptrigger == '') {\n\t\t\t$htmltext = str_replace('\"', '&quot;', $htmltext);\n\t\t} else {\n\t\t\t$classfortooltip = 'classfortooltiponclick';\n\t\t\t$textfordialog .= '<div style=\"display: none;\" id=\"idfortooltiponclick_'.$tooltiptrigger.'\" class=\"classfortooltiponclicktext\">'.$htmltext.'</div>';\n\t\t}\n\t\tif ($tooltipon == 2 || $tooltipon == 3) {\n\t\t\t$paramfortooltipimg = ' class=\"'.$classfortooltip.($notabs != 3 ? ' inline-block' : '').($extracss ? ' '.$extracss : '').'\" style=\"padding: 0px;'.($extrastyle ? ' '.$extrastyle : '').'\"';\n\t\t\tif ($tooltiptrigger == '') {\n\t\t\t\t$paramfortooltipimg .= ' title=\"'.($noencodehtmltext ? $htmltext : dol_escape_htmltag($htmltext, 1)).'\"'; // Attribut to put on img tag to store tooltip\n\t\t\t} else {\n\t\t\t\t$paramfortooltipimg .= ' dolid=\"'.$tooltiptrigger.'\"';\n\t\t\t}\n\t\t} else {\n\t\t\t$paramfortooltipimg = ($extracss ? ' class=\"'.$extracss.'\"' : '').($extrastyle ? ' style=\"'.$extrastyle.'\"' : ''); // Attribut to put on td text tag\n\t\t}\n\t\tif ($tooltipon == 1 || $tooltipon == 3) {\n\t\t\t$paramfortooltiptd = ' class=\"'.($tooltipon == 3 ? 'cursorpointer ' : '').$classfortooltip.' inline-block'.($extracss ? ' '.$extracss : '').'\" style=\"padding: 0px;'.($extrastyle ? ' '.$extrastyle : '').'\" ';\n\t\t\tif ($tooltiptrigger == '') {\n\t\t\t\t$paramfortooltiptd .= ' title=\"'.($noencodehtmltext ? $htmltext : dol_escape_htmltag($htmltext, 1)).'\"'; // Attribut to put on td tag to store tooltip\n\t\t\t} else {\n\t\t\t\t$paramfortooltiptd .= ' dolid=\"'.$tooltiptrigger.'\"';\n\t\t\t}\n\t\t} else {\n\t\t\t$paramfortooltiptd = ($extracss ? ' class=\"'.$extracss.'\"' : '').($extrastyle ? ' style=\"'.$extrastyle.'\"' : ''); // Attribut to put on td text tag\n\t\t}\n\t\tif (empty($notabs)) {\n\t\t\t$s .= '<table class=\"nobordernopadding\"><tr style=\"height: auto;\">';\n\t\t} elseif ($notabs == 2) {\n\t\t\t$s .= '<div class=\"inline-block'.($forcenowrap ? ' nowrap' : '').'\">';\n\t\t}\n\t\t// Define value if value is before\n\t\tif ($direction < 0) {\n\t\t\t$s .= '<'.$tag.$paramfortooltipimg;\n\t\t\tif ($tag == 'td') {\n\t\t\t\t$s .= ' class=valigntop\" width=\"14\"';\n\t\t\t}\n\t\t\t$s .= '>'.$textfordialog.$img.'</'.$tag.'>';\n\t\t}\n\t\t// Use another method to help avoid having a space in value in order to use this value with jquery\n\t\t// Define label\n\t\tif ((string) $text != '') {\n\t\t\t$s .= '<'.$tag.$paramfortooltiptd.'>'.$text.'</'.$tag.'>';\n\t\t}\n\t\t// Define value if value is after\n\t\tif ($direction > 0) {\n\t\t\t$s .= '<'.$tag.$paramfortooltipimg;\n\t\t\tif ($tag == 'td') {\n\t\t\t\t$s .= ' class=\"valignmiddle\" width=\"14\"';\n\t\t\t}\n\t\t\t$s .= '>'.$textfordialog.$img.'</'.$tag.'>';\n\t\t}\n\t\tif (empty($notabs)) {\n\t\t\t$s .= '</tr></table>';\n\t\t} elseif ($notabs == 2) {\n\t\t\t$s .= '</div>';\n\t\t}\n\n\t\treturn $s;\n\t}\n\n\t/**\n\t *\tShow a text with a picto and a tooltip on picto\n\t *\n\t *\t@param\tstring\t$text\t\t\t\tText to show\n\t *\t@param  string\t$htmltext\t     \tContent of tooltip\n\t *\t@param\tint\t\t$direction\t\t\t1=Icon is after text, -1=Icon is before text, 0=no icon\n\t * \t@param\tstring\t$type\t\t\t\tType of picto ('info', 'infoclickable', 'help', 'helpclickable', 'warning', 'superadmin', 'mypicto@mymodule', ...) or image filepath or 'none'\n\t *  @param  string\t$extracss           Add a CSS style to td, div or span tag\n\t *  @param  int\t\t$noencodehtmltext   Do not encode into html entity the htmltext\n\t *  @param\tint\t\t$notabs\t\t\t\t0=Include table and tr tags, 1=Do not include table and tr tags, 2=use div, 3=use span\n\t *  @param  string  $tooltiptrigger     ''=Tooltip on hover, 'abc'=Tooltip on click (abc is a unique key, clickable link is on image or on link if param $type='none' or on both if $type='xxxclickable')\n\t *  @param\tint\t\t$forcenowrap\t\tForce no wrap between text and picto (works with notabs=2 only)\n\t * \t@return\tstring\t\t\t\t\t\tHTML code of text, picto, tooltip\n\t */\n\tpublic function textwithpicto($text, $htmltext, $direction = 1, $type = 'help', $extracss = '', $noencodehtmltext = 0, $notabs = 3, $tooltiptrigger = '', $forcenowrap = 0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$alt = '';\n\t\tif ($tooltiptrigger) {\n\t\t\t$alt = $langs->transnoentitiesnoconv(\"ClickToShowHelp\");\n\t\t}\n\n\t\t//For backwards compatibility\n\t\tif ($type == '0') {\n\t\t\t$type = 'info';\n\t\t} elseif ($type == '1') {\n\t\t\t$type = 'help';\n\t\t}\n\n\t\t// If info or help with no javascript, show only text\n\t\tif (empty($conf->use_javascript_ajax)) {\n\t\t\tif ($type == 'info' || $type == 'infoclickable' || $type == 'help' || $type == 'helpclickable') {\n\t\t\t\treturn $text;\n\t\t\t} else {\n\t\t\t\t$alt = $htmltext;\n\t\t\t\t$htmltext = '';\n\t\t\t}\n\t\t}\n\n\t\t// If info or help with smartphone, show only text (tooltip hover can't works)\n\t\tif (!empty($conf->dol_no_mouse_hover) && empty($tooltiptrigger)) {\n\t\t\tif ($type == 'info' || $type == 'infoclickable' || $type == 'help' || $type == 'helpclickable') {\n\t\t\t\treturn $text;\n\t\t\t}\n\t\t}\n\t\t// If info or help with smartphone, show only text (tooltip on click does not works with dialog on smaprtphone)\n\t\t//if (! empty($conf->dol_no_mouse_hover) && ! empty($tooltiptrigger))\n\t\t//{\n\t\t//if ($type == 'info' || $type == 'help') return '<a href=\"'..'\">'.$text.''</a>';\n\t\t//}\n\n\t\t$img = '';\n\t\tif ($type == 'info') {\n\t\t\t$img = img_help(0, $alt);\n\t\t} elseif ($type == 'help') {\n\t\t\t$img = img_help(($tooltiptrigger != '' ? 2 : 1), $alt);\n\t\t} elseif ($type == 'helpclickable') {\n\t\t\t$img = img_help(($tooltiptrigger != '' ? 2 : 1), $alt);\n\t\t} elseif ($type == 'superadmin') {\n\t\t\t$img = img_picto($alt, 'redstar');\n\t\t} elseif ($type == 'admin') {\n\t\t\t$img = img_picto($alt, 'star');\n\t\t} elseif ($type == 'warning') {\n\t\t\t$img = img_warning($alt);\n\t\t} elseif ($type != 'none') {\n\t\t\t$img = img_picto($alt, $type); // $type can be an image path\n\t\t}\n\n\t\treturn $this->textwithtooltip($text, $htmltext, ((($tooltiptrigger && !$img) || strpos($type, 'clickable')) ? 3 : 2), $direction, $img, $extracss, $notabs, '', $noencodehtmltext, $tooltiptrigger, $forcenowrap);\n\t}\n\n\t/**\n\t * Generate select HTML to choose massaction\n\t *\n\t * @param\tstring\t$selected\t\tValue auto selected when at least one record is selected. Not a preselected value. Use '0' by default.\n\t * @param\tarray\t$arrayofaction\tarray('code'=>'label', ...). The code is the key stored into the GETPOST('massaction') when submitting action.\n\t * @param   int     $alwaysvisible  1=select button always visible\n\t * @param   string  $name     \t\tName for massaction\n\t * @param   string  $cssclass \t\tCSS class used to check for select\n\t * @return\tstring|void\t\t\t\tSelect list\n\t */\n\tpublic function selectMassAction($selected, $arrayofaction, $alwaysvisible = 0, $name = 'massaction', $cssclass = 'checkforselect')\n\t{\n\t\tglobal $conf, $langs, $hookmanager;\n\n\n\t\t$disabled = 0;\n\t\t$ret = '<div class=\"centpercent center\">';\n\t\t$ret .= '<select class=\"flat'.(empty($conf->use_javascript_ajax) ? '' : ' hideobject').' '.$name.' '.$name.'select valignmiddle alignstart\" id=\"'.$name.'\" name=\"'.$name.'\"'.($disabled ? ' disabled=\"disabled\"' : '').'>';\n\n\t\t// Complete list with data from external modules. THe module can use $_SERVER['PHP_SELF'] to know on which page we are, or use the $parameters['currentcontext'] completed by executeHooks.\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('addMoreMassActions', $parameters); // Note that $action and $object may have been modified by hook\n\t\t// check if there is a mass action\n\t\tif (count($arrayofaction) == 0 && empty($hookmanager->resPrint)) {\n\t\t\treturn;\n\t\t}\n\t\tif (empty($reshook)) {\n\t\t\t$ret .= '<option value=\"0\"'.($disabled ? ' disabled=\"disabled\"' : '').'>-- '.$langs->trans(\"SelectAction\").' --</option>';\n\t\t\tforeach ($arrayofaction as $code => $label) {\n\t\t\t\t$ret .= '<option value=\"'.$code.'\"'.($disabled ? ' disabled=\"disabled\"' : '').' data-html=\"'.dol_escape_htmltag($label).'\">'.$label.'</option>';\n\t\t\t}\n\t\t}\n\t\t$ret .= $hookmanager->resPrint;\n\n\t\t$ret .= '</select>';\n\n\t\tif (empty($conf->dol_optimize_smallscreen)) {\n\t\t\t$ret .= ajax_combobox('.'.$name.'select');\n\t\t}\n\n\t\t// Warning: if you set submit button to disabled, post using 'Enter' will no more work if there is no another input submit. So we add a hidden button\n\t\t$ret .= '<input type=\"submit\" name=\"confirmmassactioninvisible\" style=\"display: none\" tabindex=\"-1\">'; // Hidden button BEFORE so it is the one used when we submit with ENTER.\n\t\t$ret .= '<input type=\"submit\" disabled name=\"confirmmassaction\"'.(empty($conf->use_javascript_ajax) ? '' : ' style=\"display: none\"').' class=\"button small'.(empty($conf->use_javascript_ajax) ? '' : ' hideobject').' '.$name.' '.$name.'confirmed\" value=\"'.dol_escape_htmltag($langs->trans(\"Confirm\")).'\">';\n\t\t$ret .= '</div>';\n\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t$ret .= '<!-- JS CODE TO ENABLE mass action select -->\n    \t\t<script>\n                        function initCheckForSelect(mode, name, cssclass)\t/* mode is 0 during init of page or click all, 1 when we click on 1 checkboxi, \"name\" refers to the class of the massaction button, \"cssclass\" to the class of the checkfor select boxes */\n        \t\t{\n        \t\t\tatleastoneselected=0;\n                                jQuery(\".\"+cssclass).each(function( index ) {\n    \t  \t\t\t\t/* console.log( index + \": \" + $( this ).text() ); */\n    \t  \t\t\t\tif ($(this).is(\\':checked\\')) atleastoneselected++;\n    \t  \t\t\t});\n\n\t\t\t\t\tconsole.log(\"initCheckForSelect mode=\"+mode+\" name=\"+name+\" cssclass=\"+cssclass+\" atleastoneselected=\"+atleastoneselected);\n\n    \t  \t\t\tif (atleastoneselected || '.$alwaysvisible.')\n    \t  \t\t\t{\n                                    jQuery(\".\"+name).show();\n        \t\t\t    '.($selected ? 'if (atleastoneselected) { jQuery(\".\"+name+\"select\").val(\"'.$selected.'\").trigger(\\'change\\'); jQuery(\".\"+name+\"confirmed\").prop(\\'disabled\\', false); }' : '').'\n        \t\t\t    '.($selected ? 'if (! atleastoneselected) { jQuery(\".\"+name+\"select\").val(\"0\").trigger(\\'change\\'); jQuery(\".\"+name+\"confirmed\").prop(\\'disabled\\', true); } ' : '').'\n    \t  \t\t\t}\n    \t  \t\t\telse\n    \t  \t\t\t{\n                                    jQuery(\".\"+name).hide();\n                                    jQuery(\".\"+name+\"other\").hide();\n    \t            }\n        \t\t}\n\n        \tjQuery(document).ready(function () {\n                    initCheckForSelect(0, \"' . $name.'\", \"'.$cssclass.'\");\n                    jQuery(\".' . $cssclass.'\").click(function() {\n                        initCheckForSelect(1, \"'.$name.'\", \"'.$cssclass.'\");\n                    });\n                        jQuery(\".' . $name.'select\").change(function() {\n        \t\t\tvar massaction = $( this ).val();\n        \t\t\tvar urlform = $( this ).closest(\"form\").attr(\"action\").replace(\"#show_files\",\"\");\n        \t\t\tif (massaction == \"builddoc\")\n                    {\n                        urlform = urlform + \"#show_files\";\n    \t            }\n        \t\t\t$( this ).closest(\"form\").attr(\"action\", urlform);\n                    console.log(\"we select a mass action name='.$name.' massaction=\"+massaction+\" - \"+urlform);\n        \t        /* Warning: if you set submit button to disabled, post using Enter will no more work if there is no other button */\n        \t\t\tif ($(this).val() != \\'0\\')\n    \t  \t\t\t{\n                                        jQuery(\".' . $name.'confirmed\").prop(\\'disabled\\', false);\n\t\t\t\t\t\t\t\t\t\tjQuery(\".' . $name.'other\").hide();\t/* To disable if another div was open */\n                                        jQuery(\".' . $name.'\"+massaction).show();\n    \t  \t\t\t}\n    \t  \t\t\telse\n    \t  \t\t\t{\n                                        jQuery(\".' . $name.'confirmed\").prop(\\'disabled\\', true);\n\t\t\t\t\t\t\t\t\t\tjQuery(\".' . $name.'other\").hide();\t/* To disable any div open */\n    \t  \t\t\t}\n    \t        });\n        \t});\n    \t\t</script>\n        \t';\n\t\t}\n\n\t\treturn $ret;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return combo list of activated countries, into language of user\n\t *\n\t *  @param\tstring\t$selected       \t\tId or Code or Label of preselected country\n\t *  @param  string\t$htmlname       \t\tName of html select object\n\t *  @param  string\t$htmloption     \t\tMore html options on select object\n\t *  @param\tinteger\t$maxlength\t\t\t\tMax length for labels (0=no limit)\n\t *  @param\tstring\t$morecss\t\t\t\tMore css class\n\t *  @param\tstring\t$usecodeaskey\t\t\t''=Use id as key (default), 'code3'=Use code on 3 alpha as key, 'code2\"=Use code on 2 alpha as key\n\t *  @param\tint\t\t$showempty\t\t\t\tShow empty choice\n\t *  @param\tint\t\t$disablefavorites\t\t1=Disable favorites,\n\t *  @param\tint\t\t$addspecialentries\t\t1=Add dedicated entries for group of countries (like 'European Economic Community', ...)\n\t *  @param\tarray\t$exclude_country_code\tArray of country code (iso2) to exclude\n\t *  @param\tint\t\t$hideflags\t\t\t\tHide flags\n\t *  @return string           \t\t\t\tHTML string with select\n\t */\n\tpublic function select_country($selected = '', $htmlname = 'country_id', $htmloption = '', $maxlength = 0, $morecss = 'minwidth300', $usecodeaskey = '', $showempty = 1, $disablefavorites = 0, $addspecialentries = 0, $exclude_country_code = array(), $hideflags = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs, $mysoc;\n\n\t\t$langs->load(\"dict\");\n\n\t\t$out = '';\n\t\t$countryArray = array();\n\t\t$favorite = array();\n\t\t$label = array();\n\t\t$atleastonefavorite = 0;\n\n\t\t$sql = \"SELECT rowid, code as code_iso, code_iso as code_iso3, label, favorite, eec\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"c_country\";\n\t\t$sql .= \" WHERE active > 0\";\n\t\t//$sql.= \" ORDER BY code ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_country\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$out .= '<select id=\"select'.$htmlname.'\" class=\"flat maxwidth200onsmartphone selectcountry'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\" '.$htmloption.'>';\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t\t$countryArray[$i]['rowid'] = $obj->rowid;\n\t\t\t\t\t$countryArray[$i]['code_iso'] = $obj->code_iso;\n\t\t\t\t\t$countryArray[$i]['code_iso3'] \t= $obj->code_iso3;\n\t\t\t\t\t$countryArray[$i]['label'] = ($obj->code_iso && $langs->transnoentitiesnoconv(\"Country\".$obj->code_iso) != \"Country\".$obj->code_iso ? $langs->transnoentitiesnoconv(\"Country\".$obj->code_iso) : ($obj->label != '-' ? $obj->label : ''));\n\t\t\t\t\t$countryArray[$i]['favorite'] = $obj->favorite;\n\t\t\t\t\t$countryArray[$i]['eec'] = $obj->eec;\n\t\t\t\t\t$favorite[$i] = $obj->favorite;\n\t\t\t\t\t$label[$i] = dol_string_unaccent($countryArray[$i]['label']);\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\n\t\t\t\tif (empty($disablefavorites)) {\n\t\t\t\t\tarray_multisort($favorite, SORT_DESC, $label, SORT_ASC, $countryArray);\n\t\t\t\t} else {\n\t\t\t\t\t$countryArray = dol_sort_array($countryArray, 'label');\n\t\t\t\t}\n\n\t\t\t\tif ($showempty) {\n\t\t\t\t\t$out .= '<option value=\"\">&nbsp;</option>'.\"\\n\";\n\t\t\t\t}\n\n\t\t\t\tif ($addspecialentries) {\t// Add dedicated entries for groups of countries\n\t\t\t\t\t//if ($showempty) $out.= '<option value=\"\" disabled class=\"selectoptiondisabledwhite\">--------------</option>';\n\t\t\t\t\t$out .= '<option value=\"special_allnotme\"'.($selected == 'special_allnotme' ? ' selected' : '').'>'.$langs->trans(\"CountriesExceptMe\", $langs->transnoentitiesnoconv(\"Country\".$mysoc->country_code)).'</option>';\n\t\t\t\t\t$out .= '<option value=\"special_eec\"'.($selected == 'special_eec' ? ' selected' : '').'>'.$langs->trans(\"CountriesInEEC\").'</option>';\n\t\t\t\t\tif ($mysoc->isInEEC()) {\n\t\t\t\t\t\t$out .= '<option value=\"special_eecnotme\"'.($selected == 'special_eecnotme' ? ' selected' : '').'>'.$langs->trans(\"CountriesInEECExceptMe\", $langs->transnoentitiesnoconv(\"Country\".$mysoc->country_code)).'</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= '<option value=\"special_noteec\"'.($selected == 'special_noteec' ? ' selected' : '').'>'.$langs->trans(\"CountriesNotInEEC\").'</option>';\n\t\t\t\t\t$out .= '<option value=\"\" disabled class=\"selectoptiondisabledwhite\">------------</option>';\n\t\t\t\t}\n\n\t\t\t\tforeach ($countryArray as $row) {\n\t\t\t\t\t//if (empty($showempty) && empty($row['rowid'])) continue;\n\t\t\t\t\tif (empty($row['rowid'])) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (is_array($exclude_country_code) && count($exclude_country_code) && in_array($row['code_iso'], $exclude_country_code)) {\n\t\t\t\t\t\tcontinue; // exclude some countries\n\t\t\t\t\t}\n\n\t\t\t\t\tif (empty($disablefavorites) && $row['favorite'] && $row['code_iso']) {\n\t\t\t\t\t\t$atleastonefavorite++;\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($row['favorite']) && $atleastonefavorite) {\n\t\t\t\t\t\t$atleastonefavorite = 0;\n\t\t\t\t\t\t$out .= '<option value=\"\" disabled class=\"selectoptiondisabledwhite\">------------</option>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$labeltoshow = '';\n\t\t\t\t\tif ($row['label']) {\n\t\t\t\t\t\t$labeltoshow .= dol_trunc($row['label'], $maxlength, 'middle');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$labeltoshow .= '&nbsp;';\n\t\t\t\t\t}\n\t\t\t\t\tif ($row['code_iso']) {\n\t\t\t\t\t\t$labeltoshow .= ' <span class=\"opacitymedium\">('.$row['code_iso'].')</span>';\n\t\t\t\t\t\tif (empty($hideflags)) {\n\t\t\t\t\t\t\t$tmpflag = picto_from_langcode($row['code_iso'], 'class=\"saturatemedium paddingrightonly\"', 1);\n\t\t\t\t\t\t\t$labeltoshow = $tmpflag.' '.$labeltoshow;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($selected && $selected != '-1' && ($selected == $row['rowid'] || $selected == $row['code_iso'] || $selected == $row['code_iso3'] || $selected == $row['label'])) {\n\t\t\t\t\t\t$out .= '<option value=\"'.($usecodeaskey ? ($usecodeaskey == 'code2' ? $row['code_iso'] : $row['code_iso3']) : $row['rowid']).'\" selected data-html=\"'.dol_escape_htmltag($labeltoshow).'\" data-eec=\"'.((int) $row['eec']).'\">';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$out .= '<option value=\"'.($usecodeaskey ? ($usecodeaskey == 'code2' ? $row['code_iso'] : $row['code_iso3']) : $row['rowid']).'\" data-html=\"'.dol_escape_htmltag($labeltoshow).'\" data-eec=\"'.((int) $row['eec']).'\">';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= $labeltoshow;\n\t\t\t\t\t$out .= '</option>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '</select>';\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\t// Make select dynamic\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t$out .= ajax_combobox('select'.$htmlname, array(), 0, 0, 'resolve');\n\n\t\treturn $out;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return select list of incoterms\n\t *\n\t *  @param\tstring\t$selected       \t\tId or Code of preselected incoterm\n\t *  @param\tstring\t$location_incoterms     Value of input location\n\t *  @param\tstring\t$page       \t\t\tDefined the form action\n\t *  @param  string\t$htmlname       \t\tName of html select object\n\t *  @param  string\t$htmloption     \t\tOptions html on select object\n\t * \t@param\tint\t\t$forcecombo\t\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t *  @param\tarray\t$events\t\t\t\t\tEvent options to run on change. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @return string           \t\t\t\tHTML string with select and input\n\t */\n\tpublic function select_incoterms($selected = '', $location_incoterms = '', $page = '', $htmlname = 'incoterm_id', $htmloption = '', $forcecombo = 1, $events = array())\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\n\t\t$langs->load(\"dict\");\n\n\t\t$out = '';\n\t\t$moreattrib = '';\n\t\t$incotermArray = array();\n\n\t\t$sql = \"SELECT rowid, code\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"c_incoterms\";\n\t\t$sql .= \" WHERE active > 0\";\n\t\t$sql .= \" ORDER BY code ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_incoterm\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\tif ($conf->use_javascript_ajax && !$forcecombo) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events);\n\t\t\t}\n\n\t\t\tif (!empty($page)) {\n\t\t\t\t$out .= '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\t\t$out .= '<input type=\"hidden\" name=\"action\" value=\"set_incoterms\">';\n\t\t\t\t$out .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t}\n\n\t\t\t$out .= '<select id=\"'.$htmlname.'\" class=\"flat selectincoterm width75\" name=\"'.$htmlname.'\" '.$htmloption.'>';\n\t\t\t$out .= '<option value=\"0\">&nbsp;</option>';\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\t$foundselected = false;\n\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$incotermArray[$i]['rowid'] = $obj->rowid;\n\t\t\t\t\t$incotermArray[$i]['code'] = $obj->code;\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\n\t\t\t\tforeach ($incotermArray as $row) {\n\t\t\t\t\tif ($selected && ($selected == $row['rowid'] || $selected == $row['code'])) {\n\t\t\t\t\t\t$out .= '<option value=\"'.$row['rowid'].'\" selected>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$out .= '<option value=\"'.$row['rowid'].'\">';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($row['code']) {\n\t\t\t\t\t\t$out .= $row['code'];\n\t\t\t\t\t}\n\n\t\t\t\t\t$out .= '</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '</select>';\n\n\t\t\tif ($conf->use_javascript_ajax && empty($disableautocomplete)) {\n\t\t\t\t$out .= ajax_multiautocompleter('location_incoterms', '', DOL_URL_ROOT.'/core/ajax/locationincoterms.php').\"\\n\";\n\t\t\t\t$moreattrib .= ' autocomplete=\"off\"';\n\t\t\t}\n\t\t\t$out .= '<input id=\"location_incoterms\" class=\"maxwidthonsmartphone type=\"text\" name=\"location_incoterms\" value=\"'.$location_incoterms.'\">'.\"\\n\";\n\n\t\t\tif (!empty($page)) {\n\t\t\t\t$out .= '<input type=\"submit\" class=\"button valignmiddle smallpaddingimp nomargintop nomarginbottom\" value=\"'.$langs->trans(\"Modify\").'\"></form>';\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn list of types of lines (product or service)\n\t * \tExample: 0=product, 1=service, 9=other (for external module)\n\t *\n\t *\t@param  string\t$selected       Preselected type\n\t *\t@param  string\t$htmlname       Name of field in html form\n\t * \t@param\tint\t\t$showempty\t\tAdd an empty field\n\t * \t@param\tint\t\t$hidetext\t\tDo not show label 'Type' before combo box (used only if there is at least 2 choices to select)\n\t * \t@param\tinteger\t$forceall\t\t1=Force to show products and services in combo list, whatever are activated modules, 0=No force, 2=Force to show only Products, 3=Force to show only services, -1=Force none (and set hidden field to 'service')\n\t *  @return\tvoid\n\t */\n\tpublic function select_type_of_lines($selected = '', $htmlname = 'type', $showempty = 0, $hidetext = 0, $forceall = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\n\t\t// If product & services are enabled or both disabled.\n\t\tif ($forceall == 1 || (empty($forceall) && !empty($conf->product->enabled) && !empty($conf->service->enabled))\n\t\t\t|| (empty($forceall) && empty($conf->product->enabled) && empty($conf->service->enabled))) {\n\t\t\tif (empty($hidetext)) {\n\t\t\t\tprint $langs->trans(\"Type\").': ';\n\t\t\t}\n\t\t\tprint '<select class=\"flat\" id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t\tif ($showempty) {\n\t\t\t\tprint '<option value=\"-1\"';\n\t\t\t\tif ($selected == -1) {\n\t\t\t\t\tprint ' selected';\n\t\t\t\t}\n\t\t\t\tprint '>&nbsp;</option>';\n\t\t\t}\n\n\t\t\tprint '<option value=\"0\"';\n\t\t\tif (0 == $selected || ($selected == -1 && getDolGlobalString('MAIN_FREE_PRODUCT_CHECKED_BY_DEFAULT') == 'product')) {\n\t\t\t\tprint ' selected';\n\t\t\t}\n\t\t\tprint '>'.$langs->trans(\"Product\");\n\n\t\t\tprint '<option value=\"1\"';\n\t\t\tif (1 == $selected || ($selected == -1 && getDolGlobalString('MAIN_FREE_PRODUCT_CHECKED_BY_DEFAULT') == 'service')) {\n\t\t\t\tprint ' selected';\n\t\t\t}\n\t\t\tprint '>'.$langs->trans(\"Service\");\n\n\t\t\tprint '</select>';\n\t\t\tprint ajax_combobox('select_'.$htmlname);\n\t\t\t//if ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t\t}\n\t\tif ((empty($forceall) && empty($conf->product->enabled) && !empty($conf->service->enabled)) || $forceall == 3) {\n\t\t\tprint $langs->trans(\"Service\");\n\t\t\tprint '<input type=\"hidden\" name=\"'.$htmlname.'\" value=\"1\">';\n\t\t}\n\t\tif ((empty($forceall) && !empty($conf->product->enabled) && empty($conf->service->enabled)) || $forceall == 2) {\n\t\t\tprint $langs->trans(\"Product\");\n\t\t\tprint '<input type=\"hidden\" name=\"'.$htmlname.'\" value=\"0\">';\n\t\t}\n\t\tif ($forceall < 0) {\t// This should happened only for contracts when both predefined product and service are disabled.\n\t\t\tprint '<input type=\"hidden\" name=\"'.$htmlname.'\" value=\"1\">'; // By default we set on service for contract. If CONTRACT_SUPPORT_PRODUCTS is set, forceall should be 1 not -1\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tLoad into cache cache_types_fees, array of types of fees\n\t *\n\t *\t@return     int             Nb of lines loaded, <0 if KO\n\t */\n\tpublic function load_cache_types_fees()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_types_fees);\n\t\tif ($num > 0) {\n\t\t\treturn 0; // Cache already loaded\n\t\t}\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$langs->load(\"trips\");\n\n\t\t$sql = \"SELECT c.code, c.label\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"c_type_fees as c\";\n\t\t$sql .= \" WHERE active > 0\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label = ($obj->code != $langs->trans($obj->code) ? $langs->trans($obj->code) : $langs->trans($obj->label));\n\t\t\t\t$this->cache_types_fees[$obj->code] = $label;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tasort($this->cache_types_fees);\n\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn list of types of notes\n\t *\n\t *\t@param\tstring\t\t$selected\t\tPreselected type\n\t *\t@param  string\t\t$htmlname\t\tName of field in form\n\t * \t@param\tint\t\t\t$showempty\t\tAdd an empty field\n\t * \t@return\tvoid\n\t */\n\tpublic function select_type_fees($selected = '', $htmlname = 'type', $showempty = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $user, $langs;\n\n\t\tdol_syslog(__METHOD__.\" selected=\".$selected.\", htmlname=\".$htmlname, LOG_DEBUG);\n\n\t\t$this->load_cache_types_fees();\n\n\t\tprint '<select id=\"select_'.$htmlname.'\" class=\"flat\" name=\"'.$htmlname.'\">';\n\t\tif ($showempty) {\n\t\t\tprint '<option value=\"-1\"';\n\t\t\tif ($selected == -1) {\n\t\t\t\tprint ' selected';\n\t\t\t}\n\t\t\tprint '>&nbsp;</option>';\n\t\t}\n\n\t\tforeach ($this->cache_types_fees as $key => $value) {\n\t\t\tprint '<option value=\"'.$key.'\"';\n\t\t\tif ($key == $selected) {\n\t\t\t\tprint ' selected';\n\t\t\t}\n\t\t\tprint '>';\n\t\t\tprint $value;\n\t\t\tprint '</option>';\n\t\t}\n\n\t\tprint '</select>';\n\t\tif ($user->admin) {\n\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Output html form to select a third party\n\t *\n\t *\t@param\tstring\t$selected       \t\tPreselected type\n\t *\t@param  string\t$htmlname       \t\tName of field in form\n\t *  @param  string\t$filter         \t\tOptional filters criteras. WARNING: To avoid SQL injection, only few chars [.a-z0-9 =<>] are allowed here (example: 's.rowid <> x', 's.client IN (1,3)')\n\t *\t@param\tstring\t$showempty\t\t\t\tAdd an empty field (Can be '1' or text key to use on empty line like 'SelectThirdParty')\n\t * \t@param\tint\t\t$showtype\t\t\t\tShow third party type in combolist (customer, prospect or supplier)\n\t * \t@param\tint\t\t$forcecombo\t\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t *  @param\tarray\t$events\t\t\t\t\tAjax event options to run on change. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *\t@param\tint\t\t$limit\t\t\t\t\tMaximum number of elements\n\t *  @param\tstring\t$morecss\t\t\t\tAdd more css styles to the SELECT component\n\t *\t@param  string\t$moreparam      \t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *\t@param\tstring\t$selected_input_value\tValue of preselected input text (for use with ajax)\n\t *  @param\tint\t\t$hidelabel\t\t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n\t *  @param\tarray\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t * \t@param  bool\t$multiple\t\t\t\tadd [] in the name of element and add 'multiple' attribut (not working with ajax_autocompleter)\n\t *  @param\tarray\t$excludeids\t\t\t\tExclude IDs from the select combo\n\t * \t@return\tstring\t\t\t\t\t\t\tHTML string with select box for thirdparty.\n\t */\n\tpublic function select_company($selected = '', $htmlname = 'socid', $filter = '', $showempty = '', $showtype = 0, $forcecombo = 0, $events = array(), $limit = 0, $morecss = 'minwidth100', $moreparam = '', $selected_input_value = '', $hidelabel = 1, $ajaxoptions = array(), $multiple = false, $excludeids = array())\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $user, $langs;\n\n\t\t$out = '';\n\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->COMPANY_USE_SEARCH_TO_SELECT) && !$forcecombo) {\n\t\t\tif (is_null($ajaxoptions)) {\n\t\t\t\t$ajaxoptions = array();\n\t\t\t}\n\n\t\t\trequire_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\n\t\t\t// No immediate load of all database\n\t\t\t$placeholder = '';\n\t\t\tif ($selected && empty($selected_input_value)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\n\t\t\t\t$societetmp = new Societe($this->db);\n\t\t\t\t$societetmp->fetch($selected);\n\t\t\t\t$selected_input_value = $societetmp->name;\n\t\t\t\tunset($societetmp);\n\t\t\t}\n\n\t\t\t// mode 1\n\t\t\t$urloption = 'htmlname='.urlencode($htmlname).'&outjson=1&filter='.urlencode($filter).(empty($excludeids) ? '' : '&excludeids='.join(',', $excludeids)).($showtype ? '&showtype='.urlencode($showtype) : '');\n\t\t\t$out .= ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/societe/ajax/company.php', $urloption, $conf->global->COMPANY_USE_SEARCH_TO_SELECT, 0, $ajaxoptions);\n\n\t\t\t$out .= '<style type=\"text/css\">.ui-autocomplete { z-index: 1003; }</style>';\n\t\t\tif (empty($hidelabel)) {\n\t\t\t\tprint $langs->trans(\"RefOrLabel\").' : ';\n\t\t\t} elseif ($hidelabel > 1) {\n\t\t\t\t$placeholder = $langs->trans(\"RefOrLabel\");\n\t\t\t\tif ($hidelabel == 2) {\n\t\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '<input type=\"text\" class=\"'.$morecss.'\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.($placeholder ? ' placeholder=\"'.dol_escape_htmltag($placeholder).'\"' : '').' '.(!empty($conf->global->THIRDPARTY_SEARCH_AUTOFOCUS) ? 'autofocus' : '').' />';\n\t\t\tif ($hidelabel == 3) {\n\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t}\n\t\t} else {\n\t\t\t// Immediate load of all database\n\t\t\t$out .= $this->select_thirdparty_list($selected, $htmlname, $filter, $showempty, $showtype, $forcecombo, $events, '', 0, $limit, $morecss, $moreparam, $multiple, $excludeids);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Output html form to select a third party.\n\t *  Note, you must use the select_company to get the component to select a third party. This function must only be called by select_company.\n\t *\n\t *\t@param\tstring\t$selected       Preselected type\n\t *\t@param  string\t$htmlname       Name of field in form\n\t *  @param  string\t$filter         Optional filters criteras (example: 's.rowid NOT IN (x)', 's.client IN (1,3)'). Do not use a filter coming from input of users.\n\t *\t@param\tstring\t$showempty\t\tAdd an empty field (Can be '1' or text to use on empty line like 'SelectThirdParty')\n\t * \t@param\tint\t\t$showtype\t\tShow third party type in combolist (customer, prospect or supplier)\n\t * \t@param\tint\t\t$forcecombo\t\tForce to use standard HTML select component without beautification\n\t *  @param\tarray\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @param\tstring\t$filterkey\t\tFilter on key value\n\t *  @param\tint\t\t$outputmode\t\t0=HTML select string, 1=Array\n\t *  @param\tint\t\t$limit\t\t\tLimit number of answers\n\t *  @param\tstring\t$morecss\t\tAdd more css styles to the SELECT component\n\t *\t@param  string\t$moreparam      Add more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *\t@param  bool\t$multiple       add [] in the name of element and add 'multiple' attribut\n\t *  @param\tarray\t$excludeids\t\tExclude IDs from the select combo\n\t * \t@return\tstring\t\t\t\t\tHTML string with\n\t */\n\tpublic function select_thirdparty_list($selected = '', $htmlname = 'socid', $filter = '', $showempty = '', $showtype = 0, $forcecombo = 0, $events = array(), $filterkey = '', $outputmode = 0, $limit = 0, $morecss = 'minwidth100', $moreparam = '', $multiple = false, $excludeids = array())\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $user, $langs;\n\n\t\t$out = '';\n\t\t$num = 0;\n\t\t$outarray = array();\n\n\t\tif ($selected === '') {\n\t\t\t$selected = array();\n\t\t} elseif (!is_array($selected)) {\n\t\t\t$selected = array($selected);\n\t\t}\n\n\t\t// Clean $filter that may contains sql conditions so sql code\n\t\tif (function_exists('testSqlAndScriptInject')) {\n\t\t\tif (testSqlAndScriptInject($filter, 3) > 0) {\n\t\t\t\t$filter = '';\n\t\t\t}\n\t\t}\n\n\t\t// We search companies\n\t\t$sql = \"SELECT s.rowid, s.nom as name, s.name_alias, s.tva_intra, s.client, s.fournisseur, s.code_client, s.code_fournisseur\";\n\t\tif (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n\t\t\t$sql .= \", s.address, s.zip, s.town\";\n\t\t\t$sql .= \", dictp.code as country_code\";\n\t\t}\n\t\t$sql .= \" FROM \".$this->db->prefix().\"societe as s\";\n\t\tif (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"c_country as dictp ON dictp.rowid = s.fk_pays\";\n\t\t}\n\t\tif (empty($user->rights->societe->client->voir) && !$user->socid) {\n\t\t\t$sql .= \", \".$this->db->prefix().\"societe_commerciaux as sc\";\n\t\t}\n\t\t$sql .= \" WHERE s.entity IN (\".getEntity('societe').\")\";\n\t\tif (!empty($user->socid)) {\n\t\t\t$sql .= \" AND s.rowid = \".((int) $user->socid);\n\t\t}\n\t\tif ($filter) {\n\t\t\t$sql .= \" AND (\".$filter.\")\";\n\t\t}\n\t\tif (empty($user->rights->societe->client->voir) && !$user->socid) {\n\t\t\t$sql .= \" AND s.rowid = sc.fk_soc AND sc.fk_user = \".((int) $user->id);\n\t\t}\n\t\tif (!empty($conf->global->COMPANY_HIDE_INACTIVE_IN_COMBOBOX)) {\n\t\t\t$sql .= \" AND s.status <> 0\";\n\t\t}\n\t\tif (!empty($excludeids)) {\n\t\t\t$sql .= \" AND s.rowid NOT IN (\".$this->db->sanitize(join(',', $excludeids)).\")\";\n\t\t}\n\t\t// Add criteria\n\t\tif ($filterkey && $filterkey != '') {\n\t\t\t$sql .= \" AND (\";\n\t\t\t$prefix = empty($conf->global->COMPANY_DONOTSEARCH_ANYWHERE) ? '%' : ''; // Can use index if COMPANY_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i = 0;\n\t\t\tif (count($scrit) > 1) {\n\t\t\t\t$sql .= \"(\";\n\t\t\t}\n\t\t\tforeach ($scrit as $crit) {\n\t\t\t\tif ($i > 0) {\n\t\t\t\t\t$sql .= \" AND \";\n\t\t\t\t}\n\t\t\t\t$sql .= \"(s.nom LIKE '\".$this->db->escape($prefix.$crit).\"%')\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) {\n\t\t\t\t$sql .= \")\";\n\t\t\t}\n\t\t\tif (!empty($conf->barcode->enabled)) {\n\t\t\t\t$sql .= \" OR s.barcode LIKE '\".$this->db->escape($prefix.$filterkey).\"%'\";\n\t\t\t}\n\t\t\t$sql .= \" OR s.code_client LIKE '\".$this->db->escape($prefix.$filterkey).\"%' OR s.code_fournisseur LIKE '\".$this->db->escape($prefix.$filterkey).\"%'\";\n\t\t\t$sql .= \" OR s.name_alias LIKE '\".$this->db->escape($prefix.$filterkey).\"%' OR s.tva_intra LIKE '\".$this->db->escape($prefix.$filterkey).\"%'\";\n\t\t\t$sql .= \")\";\n\t\t}\n\t\t$sql .= $this->db->order(\"nom\", \"ASC\");\n\t\t$sql .= $this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\tdol_syslog(get_class($this).\"::select_thirdparty_list\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\tif (!$forcecombo) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events, getDolGlobalString(\"COMPANY_USE_SEARCH_TO_SELECT\"));\n\t\t\t}\n\n\t\t\t// Construct $out and $outarray\n\t\t\t$out .= '<select id=\"'.$htmlname.'\" class=\"flat'.($morecss ? ' '.$morecss : '').'\"'.($moreparam ? ' '.$moreparam : '').' name=\"'.$htmlname.($multiple ? '[]' : '').'\" '.($multiple ? 'multiple' : '').'>'.\"\\n\";\n\n\t\t\t$textifempty = (($showempty && !is_numeric($showempty)) ? $langs->trans($showempty) : '');\n\t\t\tif (!empty($conf->global->COMPANY_USE_SEARCH_TO_SELECT)) {\n\t\t\t\t// Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'.\n\t\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\t\tif ($showempty && !is_numeric($showempty)) {\n\t\t\t\t\t$textifempty = $langs->trans($showempty);\n\t\t\t\t} else {\n\t\t\t\t\t$textifempty .= $langs->trans(\"All\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($showempty) {\n\t\t\t\t$out .= '<option value=\"-1\" data-html=\"'.dol_escape_htmltag('<span class=\"opacitymedium\">'.($textifempty ? $textifempty : '&nbsp;').'</span>').'\">'.$textifempty.'</option>'.\"\\n\";\n\t\t\t}\n\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$label = '';\n\t\t\t\t\tif ($conf->global->SOCIETE_ADD_REF_IN_LIST) {\n\t\t\t\t\t\tif (($obj->client) && (!empty($obj->code_client))) {\n\t\t\t\t\t\t\t$label = $obj->code_client.' - ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (($obj->fournisseur) && (!empty($obj->code_fournisseur))) {\n\t\t\t\t\t\t\t$label .= $obj->code_fournisseur.' - ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$label .= ' '.$obj->name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$label = $obj->name;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($obj->name_alias)) {\n\t\t\t\t\t\t$label .= ' ('.$obj->name_alias.')';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($conf->global->SOCIETE_SHOW_VAT_IN_LIST) && !empty($obj->tva_intra)) {\n\t\t\t\t\t\t$label .= ' - '.$obj->tva_intra.'';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($showtype) {\n\t\t\t\t\t\tif ($obj->client || $obj->fournisseur) {\n\t\t\t\t\t\t\t$label .= ' (';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($obj->client == 1 || $obj->client == 3) {\n\t\t\t\t\t\t\t$label .= $langs->trans(\"Customer\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($obj->client == 2 || $obj->client == 3) {\n\t\t\t\t\t\t\t$label .= ($obj->client == 3 ? ', ' : '').$langs->trans(\"Prospect\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($obj->fournisseur) {\n\t\t\t\t\t\t\t$label .= ($obj->client ? ', ' : '').$langs->trans(\"Supplier\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($obj->client || $obj->fournisseur) {\n\t\t\t\t\t\t\t$label .= ')';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n\t\t\t\t\t\t$label .= ($obj->address ? ' - '.$obj->address : '').($obj->zip ? ' - '.$obj->zip : '').($obj->town ? ' '.$obj->town : '');\n\t\t\t\t\t\tif (!empty($obj->country_code)) {\n\t\t\t\t\t\t\t$label .= ', '.$langs->trans('Country'.$obj->country_code);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (empty($outputmode)) {\n\t\t\t\t\t\tif (in_array($obj->rowid, $selected)) {\n\t\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\" selected>'.$label.'</option>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\">'.$label.'</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarray_push($outarray, array('key'=>$obj->rowid, 'value'=>$label, 'label'=>$label));\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\t\t\t\t\tif (($i % 10) == 0) {\n\t\t\t\t\t\t$out .= \"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '</select>'.\"\\n\";\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\t$this->result = array('nbofthirdparties'=>$num);\n\n\t\tif ($outputmode) {\n\t\t\treturn $outarray;\n\t\t}\n\t\treturn $out;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return HTML combo list of absolute discounts\n\t *\n\t *  @param\tstring\t$selected       Id remise fixe pre-selectionnee\n\t *  @param  string\t$htmlname       Nom champ formulaire\n\t *  @param  string\t$filter         Criteres optionnels de filtre\n\t *  @param\tint\t\t$socid\t\t\tId of thirdparty\n\t *  @param\tint\t\t$maxvalue\t\tMax value for lines that can be selected\n\t *  @return\tint\t\t\t\t\t\tReturn number of qualifed lines in list\n\t */\n\tpublic function select_remises($selected, $htmlname, $filter, $socid, $maxvalue = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\n\t\t// On recherche les remises\n\t\t$sql = \"SELECT re.rowid, re.amount_ht, re.amount_tva, re.amount_ttc,\";\n\t\t$sql .= \" re.description, re.fk_facture_source\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"societe_remise_except as re\";\n\t\t$sql .= \" WHERE re.fk_soc = \".(int) $socid;\n\t\t$sql .= \" AND re.entity = \".$conf->entity;\n\t\tif ($filter) {\n\t\t\t$sql .= \" AND \".$filter;\n\t\t}\n\t\t$sql .= \" ORDER BY re.description ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_remises\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\tprint '<select id=\"select_'.$htmlname.'\" class=\"flat maxwidthonsmartphone\" name=\"'.$htmlname.'\">';\n\t\t\t$num = $this->db->num_rows($resql);\n\n\t\t\t$qualifiedlines = $num;\n\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\tprint '<option value=\"0\">&nbsp;</option>';\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$desc = dol_trunc($obj->description, 40);\n\t\t\t\t\tif (preg_match('/\\(CREDIT_NOTE\\)/', $desc)) {\n\t\t\t\t\t\t$desc = preg_replace('/\\(CREDIT_NOTE\\)/', $langs->trans(\"CreditNote\"), $desc);\n\t\t\t\t\t}\n\t\t\t\t\tif (preg_match('/\\(DEPOSIT\\)/', $desc)) {\n\t\t\t\t\t\t$desc = preg_replace('/\\(DEPOSIT\\)/', $langs->trans(\"Deposit\"), $desc);\n\t\t\t\t\t}\n\t\t\t\t\tif (preg_match('/\\(EXCESS RECEIVED\\)/', $desc)) {\n\t\t\t\t\t\t$desc = preg_replace('/\\(EXCESS RECEIVED\\)/', $langs->trans(\"ExcessReceived\"), $desc);\n\t\t\t\t\t}\n\t\t\t\t\tif (preg_match('/\\(EXCESS PAID\\)/', $desc)) {\n\t\t\t\t\t\t$desc = preg_replace('/\\(EXCESS PAID\\)/', $langs->trans(\"ExcessPaid\"), $desc);\n\t\t\t\t\t}\n\n\t\t\t\t\t$selectstring = '';\n\t\t\t\t\tif ($selected > 0 && $selected == $obj->rowid) {\n\t\t\t\t\t\t$selectstring = ' selected';\n\t\t\t\t\t}\n\n\t\t\t\t\t$disabled = '';\n\t\t\t\t\tif ($maxvalue > 0 && $obj->amount_ttc > $maxvalue) {\n\t\t\t\t\t\t$qualifiedlines--;\n\t\t\t\t\t\t$disabled = ' disabled';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($conf->global->MAIN_SHOW_FACNUMBER_IN_DISCOUNT_LIST) && !empty($obj->fk_facture_source)) {\n\t\t\t\t\t\t$tmpfac = new Facture($this->db);\n\t\t\t\t\t\tif ($tmpfac->fetch($obj->fk_facture_source) > 0) {\n\t\t\t\t\t\t\t$desc = $desc.' - '.$tmpfac->ref;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\"'.$selectstring.$disabled.'>'.$desc.' ('.price($obj->amount_ht).' '.$langs->trans(\"HT\").' - '.price($obj->amount_ttc).' '.$langs->trans(\"TTC\").')</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '</select>';\n\t\t\treturn $qualifiedlines;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return list of all contacts (for a third party or all)\n\t *\n\t *  @param\tint\t\t$socid      \tId ot third party or 0 for all\n\t *  @param  string\t$selected   \tId contact pre-selectionne\n\t *  @param  string\t$htmlname  \t    Name of HTML field ('none' for a not editable field)\n\t *  @param  int\t\t$showempty      0=no empty value, 1=add an empty value, 2=add line 'Internal' (used by user edit), 3=add an empty value only if more than one record into list\n\t *  @param  string\t$exclude        List of contacts id to exclude\n\t *  @param\tstring\t$limitto\t\tDisable answers that are not id in this array list\n\t *  @param\tinteger\t$showfunction   Add function into label\n\t *  @param\tstring\t$moreclass\t\tAdd more class to class style\n\t *  @param\tinteger\t$showsoc\t    Add company into label\n\t *  @param\tint\t\t$forcecombo\t\tForce to use combo box\n\t *  @param\tarray\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @param\tbool\t$options_only\tReturn options only (for ajax treatment)\n\t *  @param\tstring\t$moreparam\t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *  @param\tstring\t$htmlid\t\t\tHtml id to use instead of htmlname\n\t *  @return\tint\t\t\t\t\t\t<0 if KO, Nb of contact in list if OK\n\t *  @deprecated\t\t\t\t\t\tYou can use selectcontacts directly (warning order of param was changed)\n\t */\n\tpublic function select_contacts($socid, $selected = '', $htmlname = 'contactid', $showempty = 0, $exclude = '', $limitto = '', $showfunction = 0, $moreclass = '', $showsoc = 0, $forcecombo = 0, $events = array(), $options_only = false, $moreparam = '', $htmlid = '')\n\t{\n\t\t// phpcs:enable\n\t\tprint $this->selectcontacts($socid, $selected, $htmlname, $showempty, $exclude, $limitto, $showfunction, $moreclass, $options_only, $showsoc, $forcecombo, $events, $moreparam, $htmlid);\n\t\treturn $this->num;\n\t}\n\n\t/**\n\t *\tReturn HTML code of the SELECT of list of all contacts (for a third party or all).\n\t *  This also set the number of contacts found into $this->num\n\t *\n\t * @since 9.0 Add afterSelectContactOptions hook\n\t *\n\t *\t@param\tint\t\t\t$socid      \tId ot third party or 0 for all or -1 for empty list\n\t *\t@param  array|int\t$selected   \tArray of ID of pre-selected contact id\n\t *\t@param  string\t\t$htmlname  \t    Name of HTML field ('none' for a not editable field)\n\t *\t@param  int\t\t\t$showempty     \t0=no empty value, 1=add an empty value, 2=add line 'Internal' (used by user edit), 3=add an empty value only if more than one record into list\n\t *\t@param  string\t\t$exclude        List of contacts id to exclude\n\t *\t@param\tstring\t\t$limitto\t\tDisable answers that are not id in this array list\n\t *\t@param\tinteger\t\t$showfunction   Add function into label\n\t *\t@param\tstring\t\t$moreclass\t\tAdd more class to class style\n\t *\t@param\tbool\t\t$options_only\tReturn options only (for ajax treatment)\n\t *\t@param\tinteger\t\t$showsoc\t    Add company into label\n\t * \t@param\tint\t\t\t$forcecombo\t\tForce to use combo box (so no ajax beautify effect)\n\t *  @param\tarray\t\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @param\tstring\t\t$moreparam\t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *  @param\tstring\t\t$htmlid\t\t\tHtml id to use instead of htmlname\n\t *  @param\tbool\t\t$multiple\t\tadd [] in the name of element and add 'multiple' attribut\n\t *  @param\tinteger\t\t$disableifempty Set tag 'disabled' on select if there is no choice\n\t *\t@return\t int|string\t\t\t\t\t<0 if KO, HTML with select string if OK.\n\t */\n\tpublic function selectcontacts($socid, $selected = '', $htmlname = 'contactid', $showempty = 0, $exclude = '', $limitto = '', $showfunction = 0, $moreclass = '', $options_only = false, $showsoc = 0, $forcecombo = 0, $events = array(), $moreparam = '', $htmlid = '', $multiple = false, $disableifempty = 0)\n\t{\n\t\tglobal $conf, $langs, $hookmanager, $action;\n\n\t\t$langs->load('companies');\n\n\t\tif (empty($htmlid)) {\n\t\t\t$htmlid = $htmlname;\n\t\t}\n\t\t$num = 0;\n\n\t\tif ($selected === '') {\n\t\t\t$selected = array();\n\t\t} elseif (!is_array($selected)) {\n\t\t\t$selected = array($selected);\n\t\t}\n\t\t$out = '';\n\n\t\tif (!is_object($hookmanager)) {\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/hookmanager.class.php';\n\t\t\t$hookmanager = new HookManager($this->db);\n\t\t}\n\n\t\t// We search third parties\n\t\t$sql = \"SELECT sp.rowid, sp.lastname, sp.statut, sp.firstname, sp.poste, sp.email, sp.phone, sp.phone_perso, sp.phone_mobile, sp.town AS contact_town\";\n\t\tif ($showsoc > 0 || !empty($conf->global->CONTACT_SHOW_EMAIL_PHONE_TOWN_SELECTLIST)) {\n\t\t\t$sql .= \", s.nom as company, s.town AS company_town\";\n\t\t}\n\t\t$sql .= \" FROM \".$this->db->prefix().\"socpeople as sp\";\n\t\tif ($showsoc > 0 || !empty($conf->global->CONTACT_SHOW_EMAIL_PHONE_TOWN_SELECTLIST)) {\n\t\t\t$sql .= \" LEFT OUTER JOIN  \".$this->db->prefix().\"societe as s ON s.rowid=sp.fk_soc\";\n\t\t}\n\t\t$sql .= \" WHERE sp.entity IN (\".getEntity('socpeople').\")\";\n\t\tif ($socid > 0 || $socid == -1) {\n\t\t\t$sql .= \" AND sp.fk_soc = \".((int) $socid);\n\t\t}\n\t\tif (!empty($conf->global->CONTACT_HIDE_INACTIVE_IN_COMBOBOX)) {\n\t\t\t$sql .= \" AND sp.statut <> 0\";\n\t\t}\n\t\t$sql .= \" ORDER BY sp.lastname ASC\";\n\n\t\tdol_syslog(get_class($this).\"::selectcontacts\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\n\t\t\tif ($htmlname != 'none' && !$options_only) {\n\t\t\t\t$out .= '<select class=\"flat'.($moreclass ? ' '.$moreclass : '').'\" id=\"'.$htmlid.'\" name=\"'.$htmlname.(($num || empty($disableifempty)) ? '' : ' disabled').($multiple ? '[]' : '').'\" '.($multiple ? 'multiple' : '').' '.(!empty($moreparam) ? $moreparam : '').'>';\n\t\t\t}\n\n\t\t\tif ($showempty && ! is_numeric($showempty)) {\n\t\t\t\t$textforempty = $showempty;\n\t\t\t\t$out .= '<option class=\"optiongrey\" value=\"-1\"'.(in_array(-1, $selected) ? ' selected' : '').'>'.$textforempty.'</option>';\n\t\t\t} else {\n\t\t\t\tif (($showempty == 1 || ($showempty == 3 && $num > 1)) && ! $multiple) {\n\t\t\t\t\t$out .= '<option value=\"0\"'.(in_array(0, $selected) ? ' selected' : '').'>&nbsp;</option>';\n\t\t\t\t}\n\t\t\t\tif ($showempty == 2) {\n\t\t\t\t\t$out .= '<option value=\"0\"'.(in_array(0, $selected) ? ' selected' : '').'>-- '.$langs->trans(\"Internal\").' --</option>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\n\t\t\t\t$contactstatic = new Contact($this->db);\n\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t\t// Set email (or phones) and town extended infos\n\t\t\t\t\t$extendedInfos = '';\n\t\t\t\t\tif (!empty($conf->global->CONTACT_SHOW_EMAIL_PHONE_TOWN_SELECTLIST)) {\n\t\t\t\t\t\t$extendedInfos = array();\n\t\t\t\t\t\t$email = trim($obj->email);\n\t\t\t\t\t\tif (!empty($email)) {\n\t\t\t\t\t\t\t$extendedInfos[] = $email;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$phone = trim($obj->phone);\n\t\t\t\t\t\t\t$phone_perso = trim($obj->phone_perso);\n\t\t\t\t\t\t\t$phone_mobile = trim($obj->phone_mobile);\n\t\t\t\t\t\t\tif (!empty($phone)) {\n\t\t\t\t\t\t\t\t$extendedInfos[] = $phone;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!empty($phone_perso)) {\n\t\t\t\t\t\t\t\t$extendedInfos[] = $phone_perso;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!empty($phone_mobile)) {\n\t\t\t\t\t\t\t\t$extendedInfos[] = $phone_mobile;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$contact_town = trim($obj->contact_town);\n\t\t\t\t\t\t$company_town = trim($obj->company_town);\n\t\t\t\t\t\tif (!empty($contact_town)) {\n\t\t\t\t\t\t\t$extendedInfos[] = $contact_town;\n\t\t\t\t\t\t} elseif (!empty($company_town)) {\n\t\t\t\t\t\t\t$extendedInfos[] = $company_town;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$extendedInfos = implode(' - ', $extendedInfos);\n\t\t\t\t\t\tif (!empty($extendedInfos)) {\n\t\t\t\t\t\t\t$extendedInfos = ' - '.$extendedInfos;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$contactstatic->id = $obj->rowid;\n\t\t\t\t\t$contactstatic->lastname = $obj->lastname;\n\t\t\t\t\t$contactstatic->firstname = $obj->firstname;\n\t\t\t\t\tif ($obj->statut == 1) {\n\t\t\t\t\t\tif ($htmlname != 'none') {\n\t\t\t\t\t\t\t$disabled = 0;\n\t\t\t\t\t\t\tif (is_array($exclude) && count($exclude) && in_array($obj->rowid, $exclude)) {\n\t\t\t\t\t\t\t\t$disabled = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (is_array($limitto) && count($limitto) && !in_array($obj->rowid, $limitto)) {\n\t\t\t\t\t\t\t\t$disabled = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!empty($selected) && in_array($obj->rowid, $selected)) {\n\t\t\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\t\t\t\tif ($disabled) {\n\t\t\t\t\t\t\t\t\t$out .= ' disabled';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$out .= ' selected>';\n\t\t\t\t\t\t\t\t$out .= $contactstatic->getFullName($langs).$extendedInfos;\n\t\t\t\t\t\t\t\tif ($showfunction && $obj->poste) {\n\t\t\t\t\t\t\t\t\t$out .= ' ('.$obj->poste.')';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (($showsoc > 0) && $obj->company) {\n\t\t\t\t\t\t\t\t\t$out .= ' - ('.$obj->company.')';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$out .= '</option>';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\t\t\t\tif ($disabled) {\n\t\t\t\t\t\t\t\t\t$out .= ' disabled';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$out .= '>';\n\t\t\t\t\t\t\t\t$out .= $contactstatic->getFullName($langs).$extendedInfos;\n\t\t\t\t\t\t\t\tif ($showfunction && $obj->poste) {\n\t\t\t\t\t\t\t\t\t$out .= ' ('.$obj->poste.')';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (($showsoc > 0) && $obj->company) {\n\t\t\t\t\t\t\t\t\t$out .= ' - ('.$obj->company.')';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$out .= '</option>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (in_array($obj->rowid, $selected)) {\n\t\t\t\t\t\t\t\t$out .= $contactstatic->getFullName($langs).$extendedInfos;\n\t\t\t\t\t\t\t\tif ($showfunction && $obj->poste) {\n\t\t\t\t\t\t\t\t\t$out .= ' ('.$obj->poste.')';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (($showsoc > 0) && $obj->company) {\n\t\t\t\t\t\t\t\t\t$out .= ' - ('.$obj->company.')';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$labeltoshow = ($socid != -1) ? ($langs->trans($socid ? \"NoContactDefinedForThirdParty\" : \"NoContactDefined\")) : $langs->trans('SelectAThirdPartyFirst');\n\t\t\t\t$out .= '<option class=\"disabled\" value=\"-1\"'.(($showempty == 2 || $multiple) ? '' : ' selected').' disabled=\"disabled\">';\n\t\t\t\t$out .= $labeltoshow;\n\t\t\t\t$out .= '</option>';\n\t\t\t}\n\n\t\t\t$parameters = array(\n\t\t\t\t'socid'=>$socid,\n\t\t\t\t'htmlname'=>$htmlname,\n\t\t\t\t'resql'=>$resql,\n\t\t\t\t'out'=>&$out,\n\t\t\t\t'showfunction'=>$showfunction,\n\t\t\t\t'showsoc'=>$showsoc,\n\t\t\t);\n\n\t\t\t$reshook = $hookmanager->executeHooks('afterSelectContactOptions', $parameters, $this, $action); // Note that $action and $object may have been modified by some hooks\n\n\t\t\tif ($htmlname != 'none' && !$options_only) {\n\t\t\t\t$out .= '</select>';\n\t\t\t}\n\n\t\t\tif ($conf->use_javascript_ajax && !$forcecombo && !$options_only) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlid, $events, getDolGlobalString(\"CONTACT_USE_SEARCH_TO_SELECT\"));\n\t\t\t}\n\n\t\t\t$this->num = $num;\n\t\t\treturn $out;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn the HTML select list of users\n\t *\n\t *  @param\tstring\t\t\t$selected       Id user preselected\n\t *  @param  string\t\t\t$htmlname       Field name in form\n\t *  @param  int\t\t\t\t$show_empty     0=liste sans valeur nulle, 1=ajoute valeur inconnue\n\t *  @param  array\t\t\t$exclude        Array list of users id to exclude\n\t * \t@param\tint\t\t\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  array|string\t$include        Array list of users id to include. User '' for all users or 'hierarchy' to have only supervised users or 'hierarchyme' to have supervised + me\n\t * \t@param\tint\t\t\t\t$enableonly\t\tArray list of users id to be enabled. All other must be disabled\n\t *  @param\tstring\t\t\t$force_entity\t'0' or Ids of environment to force\n\t * \t@return\tvoid\n\t *  @deprecated\t\tUse select_dolusers instead\n\t *  @see select_dolusers()\n\t */\n\tpublic function select_users($selected = '', $htmlname = 'userid', $show_empty = 0, $exclude = null, $disabled = 0, $include = '', $enableonly = '', $force_entity = '0')\n\t{\n\t\t// phpcs:enable\n\t\tprint $this->select_dolusers($selected, $htmlname, $show_empty, $exclude, $disabled, $include, $enableonly, $force_entity);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn select list of users\n\t *\n\t *  @param\tstring\t\t\t$selected       User id or user object of user preselected. If 0 or < -2, we use id of current user. If -1, keep unselected (if empty is allowed)\n\t *  @param  string\t\t\t$htmlname       Field name in form\n\t *  @param  int|string\t\t$show_empty     0=list with no empty value, 1=add also an empty value into list\n\t *  @param  array\t\t\t$exclude        Array list of users id to exclude\n\t * \t@param\tint\t\t\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  array|string\t$include        Array list of users id to include. User '' for all users or 'hierarchy' to have only supervised users or 'hierarchyme' to have supervised + me\n\t * \t@param\tarray\t\t\t$enableonly\t\tArray list of users id to be enabled. If defined, it means that others will be disabled\n\t *  @param\tstring\t\t\t$force_entity\t'0' or Ids of environment to force\n\t *  @param\tint\t\t\t\t$maxlength\t\tMaximum length of string into list (0=no limit)\n\t *  @param\tint\t\t\t\t$showstatus\t\t0=show user status only if status is disabled, 1=always show user status into label, -1=never show user status\n\t *  @param\tstring\t\t\t$morefilter\t\tAdd more filters into sql request (Example: 'employee = 1'). This value must not come from user input.\n\t *  @param\tinteger\t\t\t$show_every\t\t0=default list, 1=add also a value \"Everybody\" at beginning of list\n\t *  @param\tstring\t\t\t$enableonlytext\tIf option $enableonlytext is set, we use this text to explain into label why record is disabled. Not used if enableonly is empty.\n\t *  @param\tstring\t\t\t$morecss\t\tMore css\n\t *  @param  int     \t\t$noactive       Show only active users (this will also happened whatever is this option if USER_HIDE_INACTIVE_IN_COMBOBOX is on).\n\t *  @param  int\t\t\t\t$outputmode     0=HTML select string, 1=Array\n\t *  @param  bool\t\t\t$multiple       add [] in the name of element and add 'multiple' attribut\n\t * \t@return\tstring\t\t\t\t\t\t\tHTML select string\n\t *  @see select_dolgroups()\n\t */\n\tpublic function select_dolusers($selected = '', $htmlname = 'userid', $show_empty = 0, $exclude = null, $disabled = 0, $include = '', $enableonly = '', $force_entity = '0', $maxlength = 0, $showstatus = 0, $morefilter = '', $show_every = 0, $enableonlytext = '', $morecss = '', $noactive = 0, $outputmode = 0, $multiple = false)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $user, $langs, $hookmanager;\n\n\t\t// If no preselected user defined, we take current user\n\t\tif ((is_numeric($selected) && ($selected < -2 || empty($selected))) && empty($conf->global->SOCIETE_DISABLE_DEFAULT_SALESREPRESENTATIVE)) {\n\t\t\t$selected = $user->id;\n\t\t}\n\n\t\tif ($selected === '') {\n\t\t\t$selected = array();\n\t\t} elseif (!is_array($selected)) {\n\t\t\t$selected = array($selected);\n\t\t}\n\n\t\t$excludeUsers = null;\n\t\t$includeUsers = null;\n\n\t\t// Permettre l'exclusion d'utilisateurs\n\t\tif (is_array($exclude)) {\n\t\t\t$excludeUsers = implode(\",\", $exclude);\n\t\t}\n\t\t// Permettre l'inclusion d'utilisateurs\n\t\tif (is_array($include)) {\n\t\t\t$includeUsers = implode(\",\", $include);\n\t\t} elseif ($include == 'hierarchy') {\n\t\t\t// Build list includeUsers to have only hierarchy\n\t\t\t$includeUsers = implode(\",\", $user->getAllChildIds(0));\n\t\t} elseif ($include == 'hierarchyme') {\n\t\t\t// Build list includeUsers to have only hierarchy and current user\n\t\t\t$includeUsers = implode(\",\", $user->getAllChildIds(1));\n\t\t}\n\n\t\t$out = '';\n\t\t$outarray = array();\n\n\t\t// Forge request to select users\n\t\t$sql = \"SELECT DISTINCT u.rowid, u.lastname as lastname, u.firstname, u.statut as status, u.login, u.admin, u.entity, u.photo\";\n\t\tif (!empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && !$user->entity) {\n\t\t\t$sql .= \", e.label\";\n\t\t}\n\t\t$sql .= \" FROM \".$this->db->prefix().\"user as u\";\n\t\tif (!empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && !$user->entity) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"entity as e ON e.rowid = u.entity\";\n\t\t\tif ($force_entity) {\n\t\t\t\t$sql .= \" WHERE u.entity IN (0, \".$this->db->sanitize($force_entity).\")\";\n\t\t\t} else {\n\t\t\t\t$sql .= \" WHERE u.entity IS NOT NULL\";\n\t\t\t}\n\t\t} else {\n\t\t\tif (!empty($conf->multicompany->enabled) && !empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE)) {\n\t\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"usergroup_user as ug\";\n\t\t\t\t$sql .= \" ON ug.fk_user = u.rowid\";\n\t\t\t\t$sql .= \" WHERE ug.entity = \".$conf->entity;\n\t\t\t} else {\n\t\t\t\t$sql .= \" WHERE u.entity IN (0, \".$conf->entity.\")\";\n\t\t\t}\n\t\t}\n\t\tif (!empty($user->socid)) {\n\t\t\t$sql .= \" AND u.fk_soc = \".((int) $user->socid);\n\t\t}\n\t\tif (is_array($exclude) && $excludeUsers) {\n\t\t\t$sql .= \" AND u.rowid NOT IN (\".$this->db->sanitize($excludeUsers).\")\";\n\t\t}\n\t\tif ($includeUsers) {\n\t\t\t$sql .= \" AND u.rowid IN (\".$this->db->sanitize($includeUsers).\")\";\n\t\t}\n\t\tif (!empty($conf->global->USER_HIDE_INACTIVE_IN_COMBOBOX) || $noactive) {\n\t\t\t$sql .= \" AND u.statut <> 0\";\n\t\t}\n\t\tif (!empty($morefilter)) {\n\t\t\t$sql .= \" \".$morefilter;\n\t\t}\n\n\t\t//Add hook to filter on user (for exemple on usergroup define in custom modules)\n\t\t$reshook = $hookmanager->executeHooks('addSQLWhereFilterOnSelectUsers', array(), $this, $action);\n\t\tif (!empty($reshook)) {\n\t\t\t$sql .= $hookmanager->resPrint;\n\t\t}\n\n\t\tif (empty($conf->global->MAIN_FIRSTNAME_NAME_POSITION)) {\t// MAIN_FIRSTNAME_NAME_POSITION is 0 means firstname+lastname\n\t\t\t$sql .= \" ORDER BY u.statut DESC, u.firstname ASC, u.lastname ASC\";\n\t\t} else {\n\t\t\t$sql .= \" ORDER BY u.statut DESC, u.lastname ASC, u.firstname ASC\";\n\t\t}\n\n\t\tdol_syslog(get_class($this).\"::select_dolusers\", LOG_DEBUG);\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\t// do not use maxwidthonsmartphone by default. Set it by caller so auto size to 100% will work when not defined\n\t\t\t\t$out .= '<select class=\"flat'.($morecss ? ' '.$morecss : ' minwidth200').'\" id=\"'.$htmlname.'\" name=\"'.$htmlname.($multiple ? '[]' : '').'\" '.($multiple ? 'multiple' : '').' '.($disabled ? ' disabled' : '').'>';\n\t\t\t\tif ($show_empty && !$multiple) {\n\t\t\t\t\t$textforempty = ' ';\n\t\t\t\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t\t\t\t$textforempty = '&nbsp;'; // If we use ajaxcombo, we need &nbsp; here to avoid to have an empty element that is too small.\n\t\t\t\t\t}\n\t\t\t\t\tif (!is_numeric($show_empty)) {\n\t\t\t\t\t\t$textforempty = $show_empty;\n\t\t\t\t\t}\n\t\t\t\t\t$out .= '<option class=\"optiongrey\" value=\"'.($show_empty < 0 ? $show_empty : -1).'\"'.((empty($selected) || in_array(-1, $selected)) ? ' selected' : '').'>'.$textforempty.'</option>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\tif ($show_every) {\n\t\t\t\t\t$out .= '<option value=\"-2\"'.((in_array(-2, $selected)) ? ' selected' : '').'>-- '.$langs->trans(\"Everybody\").' --</option>'.\"\\n\";\n\t\t\t\t}\n\n\t\t\t\t$userstatic = new User($this->db);\n\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t\t$userstatic->id = $obj->rowid;\n\t\t\t\t\t$userstatic->lastname = $obj->lastname;\n\t\t\t\t\t$userstatic->firstname = $obj->firstname;\n\t\t\t\t\t$userstatic->photo = $obj->photo;\n\t\t\t\t\t$userstatic->statut = $obj->status;\n\t\t\t\t\t$userstatic->entity = $obj->entity;\n\t\t\t\t\t$userstatic->admin = $obj->admin;\n\n\t\t\t\t\t$disableline = '';\n\t\t\t\t\tif (is_array($enableonly) && count($enableonly) && !in_array($obj->rowid, $enableonly)) {\n\t\t\t\t\t\t$disableline = ($enableonlytext ? $enableonlytext : '1');\n\t\t\t\t\t}\n\n\t\t\t\t\t$labeltoshow = '';\n\n\t\t\t\t\t// $fullNameMode is 0=Lastname+Firstname (MAIN_FIRSTNAME_NAME_POSITION=1), 1=Firstname+Lastname (MAIN_FIRSTNAME_NAME_POSITION=0)\n\t\t\t\t\t$fullNameMode = 0;\n\t\t\t\t\tif (empty($conf->global->MAIN_FIRSTNAME_NAME_POSITION)) {\n\t\t\t\t\t\t$fullNameMode = 1; //Firstname+lastname\n\t\t\t\t\t}\n\t\t\t\t\t$labeltoshow .= $userstatic->getFullName($langs, $fullNameMode, -1, $maxlength);\n\t\t\t\t\tif (empty($obj->firstname) && empty($obj->lastname)) {\n\t\t\t\t\t\t$labeltoshow .= $obj->login;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Complete name with more info\n\t\t\t\t\t$moreinfo = '';\n\t\t\t\t\tif (!empty($conf->global->MAIN_SHOW_LOGIN)) {\n\t\t\t\t\t\t$moreinfo .= ($moreinfo ? ' - ' : ' (').$obj->login;\n\t\t\t\t\t}\n\t\t\t\t\tif ($showstatus >= 0) {\n\t\t\t\t\t\tif ($obj->status == 1 && $showstatus == 1) {\n\t\t\t\t\t\t\t$moreinfo .= ($moreinfo ? ' - ' : ' (').$langs->trans('Enabled');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($obj->status == 0 && $showstatus == 1) {\n\t\t\t\t\t\t\t$moreinfo .= ($moreinfo ? ' - ' : ' (').$langs->trans('Disabled');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!empty($conf->multicompany->enabled) && empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE) && $conf->entity == 1 && $user->admin && !$user->entity) {\n\t\t\t\t\t\tif (!$obj->entity) {\n\t\t\t\t\t\t\t$moreinfo .= ($moreinfo ? ' - ' : ' (').$langs->trans(\"AllEntities\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ($obj->entity != $conf->entity) {\n\t\t\t\t\t\t\t\t$moreinfo .= ($moreinfo ? ' - ' : ' (').($obj->label ? $obj->label : $langs->trans(\"EntityNameNotDefined\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$moreinfo .= ($moreinfo ? ')' : '');\n\t\t\t\t\tif ($disableline && $disableline != '1') {\n\t\t\t\t\t\t$moreinfo .= ' - '.$disableline; // This is text from $enableonlytext parameter\n\t\t\t\t\t}\n\t\t\t\t\t$labeltoshow .= $moreinfo;\n\n\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\tif ($disableline) {\n\t\t\t\t\t\t$out .= ' disabled';\n\t\t\t\t\t}\n\t\t\t\t\tif ((is_object($selected) && $selected->id == $obj->rowid) || (!is_object($selected) && in_array($obj->rowid, $selected))) {\n\t\t\t\t\t\t$out .= ' selected';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= ' data-html=\"';\n\t\t\t\t\t$outhtml = '';\n\t\t\t\t\t// if (!empty($obj->photo)) {\n\t\t\t\t\t$outhtml .= $userstatic->getNomUrl(-3, '', 0, 1, 24, 1, 'login', '', 1).' ';\n\t\t\t\t\t// }\n\t\t\t\t\tif ($showstatus >= 0 && $obj->status == 0) {\n\t\t\t\t\t\t$outhtml .= '<strike class=\"opacitymediumxxx\">';\n\t\t\t\t\t}\n\t\t\t\t\t$outhtml .= $labeltoshow;\n\t\t\t\t\tif ($showstatus >= 0 && $obj->status == 0) {\n\t\t\t\t\t\t$outhtml .= '</strike>';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= dol_escape_htmltag($outhtml);\n\t\t\t\t\t$out .= '\">';\n\t\t\t\t\t$out .= $labeltoshow;\n\t\t\t\t\t$out .= '</option>';\n\n\t\t\t\t\t$outarray[$userstatic->id] = $userstatic->getFullName($langs, $fullNameMode, -1, $maxlength).$moreinfo;\n\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$out .= '<select class=\"flat\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" disabled>';\n\t\t\t\t$out .= '<option value=\"\">'.$langs->trans(\"None\").'</option>';\n\t\t\t}\n\t\t\t$out .= '</select>';\n\n\t\t\tif ($num) {\n\t\t\t\t// Enhance with select2\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out = ajax_combobox($htmlname).$out;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\tif ($outputmode) {\n\t\t\treturn $outarray;\n\t\t}\n\t\treturn $out;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn select list of users. Selected users are stored into session.\n\t *  List of users are provided into $_SESSION['assignedtouser'].\n\t *\n\t *  @param  string\t$action         Value for $action\n\t *  @param  string\t$htmlname       Field name in form\n\t *  @param  int\t\t$show_empty     0=list without the empty value, 1=add empty value\n\t *  @param  array\t$exclude        Array list of users id to exclude\n\t * \t@param\tint\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  array\t$include        Array list of users id to include or 'hierarchy' to have only supervised users\n\t * \t@param\tarray\t$enableonly\t\tArray list of users id to be enabled. All other must be disabled\n\t *  @param\tint\t\t$force_entity\t'0' or Ids of environment to force\n\t *  @param\tint\t\t$maxlength\t\tMaximum length of string into list (0=no limit)\n\t *  @param\tint\t\t$showstatus\t\t0=show user status only if status is disabled, 1=always show user status into label, -1=never show user status\n\t *  @param\tstring\t$morefilter\t\tAdd more filters into sql request\n\t *  @param\tint\t\t$showproperties\t\tShow properties of each attendees\n\t *  @param\tarray\t$listofuserid\t\tArray with properties of each user\n\t *  @param\tarray\t$listofcontactid\tArray with properties of each contact\n\t *  @param\tarray\t$listofotherid\t\tArray with properties of each other contact\n\t * \t@return\tstring\t\t\t\t\tHTML select string\n\t *  @see select_dolgroups()\n\t */\n\tpublic function select_dolusers_forevent($action = '', $htmlname = 'userid', $show_empty = 0, $exclude = null, $disabled = 0, $include = '', $enableonly = '', $force_entity = '0', $maxlength = 0, $showstatus = 0, $morefilter = '', $showproperties = 0, $listofuserid = array(), $listofcontactid = array(), $listofotherid = array())\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $user, $langs;\n\n\t\t$userstatic = new User($this->db);\n\t\t$out = '';\n\n\n\t\t$assignedtouser = array();\n\t\tif (!empty($_SESSION['assignedtouser'])) {\n\t\t\t$assignedtouser = json_decode($_SESSION['assignedtouser'], true);\n\t\t}\n\t\t$nbassignetouser = count($assignedtouser);\n\n\t\t//if ($nbassignetouser && $action != 'view') $out .= '<br>';\n\t\tif ($nbassignetouser) {\n\t\t\t$out .= '<ul class=\"attendees\">';\n\t\t}\n\t\t$i = 0;\n\t\t$ownerid = 0;\n\t\tforeach ($assignedtouser as $key => $value) {\n\t\t\tif ($value['id'] == $ownerid) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$out .= '<li>';\n\t\t\t$userstatic->fetch($value['id']);\n\t\t\t$out .= $userstatic->getNomUrl(-1);\n\t\t\tif ($i == 0) {\n\t\t\t\t$ownerid = $value['id'];\n\t\t\t\t$out .= ' ('.$langs->trans(\"Owner\").')';\n\t\t\t}\n\t\t\tif ($nbassignetouser > 1 && $action != 'view') {\n\t\t\t\t$out .= ' <input type=\"image\" style=\"border: 0px;\" src=\"'.img_picto($langs->trans(\"Remove\"), 'delete', '', 0, 1).'\" value=\"'.$userstatic->id.'\" class=\"removedassigned reposition\" id=\"removedassigned_'.$userstatic->id.'\" name=\"removedassigned_'.$userstatic->id.'\">';\n\t\t\t}\n\t\t\t// Show my availability\n\t\t\tif ($showproperties) {\n\t\t\t\tif ($ownerid == $value['id'] && is_array($listofuserid) && count($listofuserid) && in_array($ownerid, array_keys($listofuserid))) {\n\t\t\t\t\t$out .= '<div class=\"myavailability inline-block\">';\n\t\t\t\t\t$out .= '<span class=\"hideonsmartphone\">&nbsp;-&nbsp;<span class=\"opacitymedium\">'.$langs->trans(\"Availability\").':</span>  </span><input id=\"transparency\" class=\"paddingrightonly\" '.($action == 'view' ? 'disabled' : '').' type=\"checkbox\" name=\"transparency\"'.($listofuserid[$ownerid]['transparency'] ? ' checked' : '').'><label for=\"transparency\">'.$langs->trans(\"Busy\").'</label>';\n\t\t\t\t\t$out .= '</div>';\n\t\t\t\t}\n\t\t\t}\n\t\t\t//$out.=' '.($value['mandatory']?$langs->trans(\"Mandatory\"):$langs->trans(\"Optional\"));\n\t\t\t//$out.=' '.($value['transparency']?$langs->trans(\"Busy\"):$langs->trans(\"NotBusy\"));\n\n\t\t\t$out .= '</li>';\n\t\t\t$i++;\n\t\t}\n\t\tif ($nbassignetouser) {\n\t\t\t$out .= '</ul>';\n\t\t}\n\n\t\t// Method with no ajax\n\t\tif ($action != 'view') {\n\t\t\t$out .= '<input type=\"hidden\" class=\"removedassignedhidden\" name=\"removedassigned\" value=\"\">';\n\t\t\t$out .= '<script type=\"text/javascript\">jQuery(document).ready(function () {';\n\t\t\t$out .= 'jQuery(\".removedassigned\").click(function() { jQuery(\".removedassignedhidden\").val(jQuery(this).val()); });';\n\t\t\t$out .= 'jQuery(\".assignedtouser\").change(function() { console.log(jQuery(\".assignedtouser option:selected\").val());';\n\t\t\t$out .= ' if (jQuery(\".assignedtouser option:selected\").val() > 0) { jQuery(\"#'.$action.'assignedtouser\").attr(\"disabled\", false); }';\n\t\t\t$out .= ' else { jQuery(\"#'.$action.'assignedtouser\").attr(\"disabled\", true); }';\n\t\t\t$out .= '});';\n\t\t\t$out .= '})</script>';\n\t\t\t$out .= $this->select_dolusers('', $htmlname, $show_empty, $exclude, $disabled, $include, $enableonly, $force_entity, $maxlength, $showstatus, $morefilter);\n\t\t\t$out .= ' <input type=\"submit\" disabled class=\"button valignmiddle smallpaddingimp reposition\" id=\"'.$action.'assignedtouser\" name=\"'.$action.'assignedtouser\" value=\"'.dol_escape_htmltag($langs->trans(\"Add\")).'\">';\n\t\t\t$out .= '<br>';\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return list of products for customer in Ajax if Ajax activated or go to select_produits_list\n\t *\n\t *  @param\t\tint\t\t\t$selected\t\t\t\tPreselected products\n\t *  @param\t\tstring\t\t$htmlname\t\t\t\tName of HTML select field (must be unique in page).\n\t *  @param\t\tint|string\t$filtertype\t\t\t\tFilter on product type (''=nofilter, 0=product, 1=service)\n\t *  @param\t\tint\t\t\t$limit\t\t\t\t\tLimit on number of returned lines\n\t *  @param\t\tint\t\t\t$price_level\t\t\tLevel of price to show\n\t *  @param\t\tint\t\t\t$status\t\t\t\t\tSell status -1=Return all products, 0=Products not on sell, 1=Products on sell\n\t *  @param\t\tint\t\t\t$finished\t\t\t\t2=all, 1=finished, 0=raw material\n\t *  @param\t\tstring\t\t$selected_input_value\tValue of preselected input text (for use with ajax)\n\t *  @param\t\tint\t\t\t$hidelabel\t\t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n\t *  @param\t\tarray\t\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t *  @param      int\t\t\t$socid\t\t\t\t\tThirdparty Id (to get also price dedicated to this customer)\n\t *  @param\t\tstring\t\t$showempty\t\t\t\t'' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t\t$forcecombo\t\t\t\tForce to use combo box\n\t *  @param      string      $morecss                Add more css on select\n\t *  @param      int         $hidepriceinlabel       1=Hide prices in label\n\t *  @param      string      $warehouseStatus        Warehouse status filter to count the quantity in stock. Following comma separated filter options can be used\n\t *\t\t\t\t\t\t\t\t\t\t            'warehouseopen' = count products from open warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t            'warehouseclosed' = count products from closed warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t            'warehouseinternal' = count products from warehouses for internal correct/transfer only\n\t *  @param \t\tarray \t\t$selected_combinations \tSelected combinations. Format: array([attrid] => attrval, [...])\n\t *  @param\t\tstring\t\t$nooutput\t\t\t\tNo print, return the output into a string\n\t *  @param\t\tint\t\t\t$status_purchase\t\tPurchase status -1=Return all products, 0=Products not on purchase, 1=Products on purchase\n\t *  @return\t\tvoid|string\n\t */\n\tpublic function select_produits($selected = '', $htmlname = 'productid', $filtertype = '', $limit = 0, $price_level = 0, $status = 1, $finished = 2, $selected_input_value = '', $hidelabel = 0, $ajaxoptions = array(), $socid = 0, $showempty = '1', $forcecombo = 0, $morecss = '', $hidepriceinlabel = 0, $warehouseStatus = '', $selected_combinations = null, $nooutput = 0, $status_purchase = -1)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\n\t\t// check parameters\n\t\t$price_level = (!empty($price_level) ? $price_level : 0);\n\t\tif (is_null($ajaxoptions)) {\n\t\t\t$ajaxoptions = array();\n\t\t}\n\n\t\tif (strval($filtertype) === '' && (!empty($conf->product->enabled) || !empty($conf->service->enabled))) {\n\t\t\tif (!empty($conf->product->enabled) && empty($conf->service->enabled)) {\n\t\t\t\t$filtertype = '0';\n\t\t\t} elseif (empty($conf->product->enabled) && !empty($conf->service->enabled)) {\n\t\t\t\t$filtertype = '1';\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->PRODUIT_USE_SEARCH_TO_SELECT)) {\n\t\t\t$placeholder = '';\n\n\t\t\tif ($selected && empty($selected_input_value)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t\t\t\t$producttmpselect = new Product($this->db);\n\t\t\t\t$producttmpselect->fetch($selected);\n\t\t\t\t$selected_input_value = $producttmpselect->ref;\n\t\t\t\tunset($producttmpselect);\n\t\t\t}\n\t\t\t// handle case where product or service module is disabled + no filter specified\n\t\t\tif ($filtertype == '') {\n\t\t\t\tif (empty($conf->product->enabled)) { // when product module is disabled, show services only\n\t\t\t\t\t$filtertype = 1;\n\t\t\t\t} elseif (empty($conf->service->enabled)) { // when service module is disabled, show products only\n\t\t\t\t\t$filtertype = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// mode=1 means customers products\n\t\t\t$urloption = 'htmlname='.$htmlname.'&outjson=1&price_level='.$price_level.'&type='.$filtertype.'&mode=1&status='.$status.'&status_purchase='.$status_purchase.'&finished='.$finished.'&hidepriceinlabel='.$hidepriceinlabel.'&warehousestatus='.$warehouseStatus;\n\t\t\t//Price by customer\n\t\t\tif (!empty($conf->global->PRODUIT_CUSTOMER_PRICES) && !empty($socid)) {\n\t\t\t\t$urloption .= '&socid='.$socid;\n\t\t\t}\n\t\t\t$out .= ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/product/ajax/products.php', $urloption, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT, 1, $ajaxoptions);\n\n\t\t\tif (!empty($conf->variants->enabled) && is_array($selected_combinations)) {\n\t\t\t\t// Code to automatically insert with javascript the select of attributes under the select of product\n\t\t\t\t// when a parent of variant has been selected.\n\t\t\t\t$out .= '\n\t\t\t\t<!-- script to auto show attributes select tags if a variant was selected -->\n\t\t\t\t<script>\n\t\t\t\t\t// auto show attributes fields\n\t\t\t\t\tselected = '.json_encode($selected_combinations).';\n\t\t\t\t\tcombvalues = {};\n\n\t\t\t\t\tjQuery(document).ready(function () {\n\n\t\t\t\t\t\tjQuery(\"input[name=\\'prod_entry_mode\\']\").change(function () {\n\t\t\t\t\t\t\tif (jQuery(this).val() == \\'free\\') {\n\t\t\t\t\t\t\t\tjQuery(\\'div#attributes_box\\').empty();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tjQuery(\"input#'.$htmlname.'\").change(function () {\n\n\t\t\t\t\t\t\tif (!jQuery(this).val()) {\n\t\t\t\t\t\t\t\tjQuery(\\'div#attributes_box\\').empty();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconsole.log(\"A change has started. We get variants fields to inject html select\");\n\n\t\t\t\t\t\t\tjQuery.getJSON(\"'.DOL_URL_ROOT.'/variants/ajax/getCombinations.php\", {\n\t\t\t\t\t\t\t\tid: jQuery(this).val()\n\t\t\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\t\t\tjQuery(\\'div#attributes_box\\').empty();\n\n\t\t\t\t\t\t\t\tjQuery.each(data, function (key, val) {\n\n\t\t\t\t\t\t\t\t\tcombvalues[val.id] = val.values;\n\n\t\t\t\t\t\t\t\t\tvar span = jQuery(document.createElement(\\'div\\')).css({\n\t\t\t\t\t\t\t\t\t\t\\'display\\': \\'table-row\\'\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tspan.append(\n\t\t\t\t\t\t\t\t\t\tjQuery(document.createElement(\\'div\\')).text(val.label).css({\n\t\t\t\t\t\t\t\t\t\t\t\\'font-weight\\': \\'bold\\',\n\t\t\t\t\t\t\t\t\t\t\t\\'display\\': \\'table-cell\\'\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tvar html = jQuery(document.createElement(\\'select\\')).attr(\\'name\\', \\'combinations[\\' + val.id + \\']\\').css({\n\t\t\t\t\t\t\t\t\t\t\\'margin-left\\': \\'15px\\',\n\t\t\t\t\t\t\t\t\t\t\\'white-space\\': \\'pre\\'\n\t\t\t\t\t\t\t\t\t}).append(\n\t\t\t\t\t\t\t\t\t\tjQuery(document.createElement(\\'option\\')).val(\\'\\')\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tjQuery.each(combvalues[val.id], function (key, val) {\n\t\t\t\t\t\t\t\t\t\tvar tag = jQuery(document.createElement(\\'option\\')).val(val.id).html(val.value);\n\n\t\t\t\t\t\t\t\t\t\tif (selected[val.fk_product_attribute] == val.id) {\n\t\t\t\t\t\t\t\t\t\t\ttag.attr(\\'selected\\', \\'selected\\');\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\thtml.append(tag);\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tspan.append(html);\n\t\t\t\t\t\t\t\t\tjQuery(\\'div#attributes_box\\').append(span);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t'.($selected ? 'jQuery(\"input#'.$htmlname.'\").change();' : '').'\n\t\t\t\t\t});\n\t\t\t\t</script>\n                ';\n\t\t\t}\n\n\t\t\tif (empty($hidelabel)) {\n\t\t\t\t$out .= $langs->trans(\"RefOrLabel\").' : ';\n\t\t\t} elseif ($hidelabel > 1) {\n\t\t\t\t$placeholder = ' placeholder=\"'.$langs->trans(\"RefOrLabel\").'\"';\n\t\t\t\tif ($hidelabel == 2) {\n\t\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '<input type=\"text\" class=\"minwidth100'.($morecss ? ' '.$morecss : '').'\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.$placeholder.' '.(!empty($conf->global->PRODUCT_SEARCH_AUTOFOCUS) ? 'autofocus' : '').' />';\n\t\t\tif ($hidelabel == 3) {\n\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t}\n\t\t} else {\n\t\t\t$out .= $this->select_produits_list($selected, $htmlname, $filtertype, $limit, $price_level, '', $status, $finished, 0, $socid, $showempty, $forcecombo, $morecss, $hidepriceinlabel, $warehouseStatus, $status_purchase);\n\t\t}\n\n\t\tif (empty($nooutput)) {\n\t\t\tprint $out;\n\t\t} else {\n\t\t\treturn $out;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\n\t/**\n\t *  Return list of BOM for customer in Ajax if Ajax activated or go to select_produits_list\n\t *\n\t * @param int $selected Preselected BOM id\n\t * @param string $htmlname Name of HTML select field (must be unique in page).\n\t * @param int $limit Limit on number of returned lines\n\t * @param int $status Sell status -1=Return all bom, 0=Draft BOM, 1=Validated BOM\n\t * @param int $type type of the BOM (-1=Return all BOM, 0=Return disassemble BOM, 1=Return manufacturing BOM)\n\t * @param string $showempty '' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * @param string $morecss Add more css on select\n\t * @param string $nooutput No print, return the output into a string\n\t * @param int $forcecombo Force to use combo box\n\t * @return        void|string\n\t */\n\tpublic function select_bom($selected = '', $htmlname = 'bom_id', $limit = 0, $status = 1, $type = 1, $showempty = '1', $morecss = '', $nooutput = '', $forcecombo = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $user, $langs, $db;\n\n\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\n\t\t$error = 0;\n\t\t$out = '';\n\n\t\tif (!$forcecombo) {\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t$out .= ajax_combobox($htmlname, $events, getDolGlobalInt(\"PRODUIT_USE_SEARCH_TO_SELECT\"));\n\t\t}\n\n\t\t$out .= '<select class=\"flat'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\n\t\t$sql = 'SELECT b.rowid, b.ref, b.label, b.fk_product';\n\t\t$sql.= ' FROM '.MAIN_DB_PREFIX.'bom_bom as b';\n\t\t$sql.= ' WHERE b.entity IN ('.getEntity('bom').')';\n\t\tif (!empty($status)) $sql.= ' AND status = '. (int) $status;\n\t\tif (!empty($type)) $sql.= ' AND status = '. (int) $type;\n\t\tif (!empty($limit)) $sql.= 'LIMIT '. (int) $limit;\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\tif ($showempty)\t{\n\t\t\t\t$out .= '<option value=\"-1\"';\n\t\t\t\tif (empty($selected)) $out .= ' selected';\n\t\t\t\t$out .= '>&nbsp;</option>';\n\t\t\t}\n\t\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t\t$product = new Product($db);\n\t\t\t\t$res = $product->fetch($obj->fk_product);\n\t\t\t\tif ($obj->rowid == $selected) $out .= '<option value=\"'.$obj->rowid.'\" selected>'.$obj->ref.' - '. $product->label .' - '.$obj->label.'</option>';\n\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\">'.$obj->ref.' - '.$product->label .' - '. $obj->label.'</option>';\n\t\t\t}\n\t\t} else {\n\t\t\t$error++;\n\t\t\tdol_print_error($db);\n\t\t}\n\t\tif (empty($nooutput)) {\n\t\t\tprint $out;\n\t\t} else {\n\t\t\treturn $out;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn list of products for a customer.\n\t *  Called by select_produits.\n\t *\n\t *\t@param      int\t\t$selected           Preselected product\n\t *\t@param      string\t$htmlname           Name of select html\n\t *  @param\t\tstring\t$filtertype         Filter on product type (''=nofilter, 0=product, 1=service)\n\t *\t@param      int\t\t$limit              Limit on number of returned lines\n\t *\t@param      int\t\t$price_level        Level of price to show\n\t * \t@param      string\t$filterkey          Filter on product\n\t *\t@param\t\tint\t\t$status             -1=Return all products, 0=Products not on sell, 1=Products on sell\n\t *  @param      int\t\t$finished           Filter on finished field: 2=No filter\n\t *  @param      int\t\t$outputmode         0=HTML select string, 1=Array\n\t *  @param      int\t\t$socid     \t\t    Thirdparty Id (to get also price dedicated to this customer)\n\t *  @param\t\tstring\t$showempty\t\t    '' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t$forcecombo\t\t    Force to use combo box\n\t *  @param      string  $morecss            Add more css on select\n\t *  @param      int     $hidepriceinlabel   1=Hide prices in label\n\t *  @param      string  $warehouseStatus    Warehouse status filter to group/count stock. Following comma separated filter options can be used.\n\t *\t\t\t\t\t\t\t\t\t\t    'warehouseopen' = count products from open warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t    'warehouseclosed' = count products from closed warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t    'warehouseinternal' = count products from warehouses for internal correct/transfer only\n\t *  @param\t\tint\t\t$status_purchase\tPurchase status -1=Return all products, 0=Products not on purchase, 1=Products on purchase\n\t *  @return     array    \t\t\t\t    Array of keys for json\n\t */\n\tpublic function select_produits_list($selected = '', $htmlname = 'productid', $filtertype = '', $limit = 20, $price_level = 0, $filterkey = '', $status = 1, $finished = 2, $outputmode = 0, $socid = 0, $showempty = '1', $forcecombo = 0, $morecss = '', $hidepriceinlabel = 0, $warehouseStatus = '', $status_purchase = -1)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\t\t$outarray = array();\n\n\t\t// Units\n\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\t$langs->load('other');\n\t\t}\n\n\t\t$warehouseStatusArray = array();\n\t\tif (!empty($warehouseStatus)) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/stock/class/entrepot.class.php';\n\t\t\tif (preg_match('/warehouseclosed/', $warehouseStatus)) {\n\t\t\t\t$warehouseStatusArray[] = Entrepot::STATUS_CLOSED;\n\t\t\t}\n\t\t\tif (preg_match('/warehouseopen/', $warehouseStatus)) {\n\t\t\t\t$warehouseStatusArray[] = Entrepot::STATUS_OPEN_ALL;\n\t\t\t}\n\t\t\tif (preg_match('/warehouseinternal/', $warehouseStatus)) {\n\t\t\t\t$warehouseStatusArray[] = Entrepot::STATUS_OPEN_INTERNAL;\n\t\t\t}\n\t\t}\n\n\t\t$selectFields = \" p.rowid, p.ref, p.label, p.description, p.barcode, p.fk_country, p.fk_product_type, p.price, p.price_ttc, p.price_base_type, p.tva_tx, p.default_vat_code, p.duration, p.fk_price_expression\";\n\t\tif (count($warehouseStatusArray)) {\n\t\t\t$selectFieldsGrouped = \", sum(\".$this->db->ifsql(\"e.statut IS NULL\", \"0\", \"ps.reel\").\") as stock\"; // e.statut is null if there is no record in stock\n\t\t} else {\n\t\t\t$selectFieldsGrouped = \", \".$this->db->ifsql(\"p.stock IS NULL\", 0, \"p.stock\").\" AS stock\";\n\t\t}\n\n\t\t$sql = \"SELECT \";\n\t\t$sql .= $selectFields.$selectFieldsGrouped;\n\n\t\tif (!empty($conf->global->PRODUCT_SORT_BY_CATEGORY)) {\n\t\t\t//Product category\n\t\t\t$sql .= \", (SELECT \".$this->db->prefix().\"categorie_product.fk_categorie\n\t\t\t\t\t\tFROM \".$this->db->prefix().\"categorie_product\n\t\t\t\t\t\tWHERE \".$this->db->prefix().\"categorie_product.fk_product=p.rowid\n\t\t\t\t\t\tLIMIT 1\n\t\t\t\t) AS categorie_product_id \";\n\t\t}\n\n\t\t//Price by customer\n\t\tif (!empty($conf->global->PRODUIT_CUSTOMER_PRICES) && !empty($socid)) {\n\t\t\t$sql .= ', pcp.rowid as idprodcustprice, pcp.price as custprice, pcp.price_ttc as custprice_ttc,';\n\t\t\t$sql .= ' pcp.price_base_type as custprice_base_type, pcp.tva_tx as custtva_tx, pcp.default_vat_code as custdefault_vat_code, pcp.ref_customer as custref';\n\t\t\t$selectFields .= \", idprodcustprice, custprice, custprice_ttc, custprice_base_type, custtva_tx, custdefault_vat_code, custref\";\n\t\t}\n\t\t// Units\n\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\t$sql .= \", u.label as unit_long, u.short_label as unit_short, p.weight, p.weight_units, p.length, p.length_units, p.width, p.width_units, p.height, p.height_units, p.surface, p.surface_units, p.volume, p.volume_units\";\n\t\t\t$selectFields .= ', unit_long, unit_short, p.weight, p.weight_units, p.length, p.length_units, p.width, p.width_units, p.height, p.height_units, p.surface, p.surface_units, p.volume, p.volume_units';\n\t\t}\n\n\t\t// Multilang : we add translation\n\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t$sql .= \", pl.label as label_translated\";\n\t\t\t$sql .= \", pl.description as description_translated\";\n\t\t\t$selectFields .= \", label_translated\";\n\t\t\t$selectFields .= \", description_translated\";\n\t\t}\n\t\t// Price by quantity\n\t\tif (!empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY) || !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES)) {\n\t\t\t$sql .= \", (SELECT pp.rowid FROM \".$this->db->prefix().\"product_price as pp WHERE pp.fk_product = p.rowid\";\n\t\t\tif ($price_level >= 1 && !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES)) {\n\t\t\t\t$sql .= \" AND price_level = \".((int) $price_level);\n\t\t\t}\n\t\t\t$sql .= \" ORDER BY date_price\";\n\t\t\t$sql .= \" DESC LIMIT 1) as price_rowid\";\n\t\t\t$sql .= \", (SELECT pp.price_by_qty FROM \".$this->db->prefix().\"product_price as pp WHERE pp.fk_product = p.rowid\"; // price_by_qty is 1 if some prices by qty exists in subtable\n\t\t\tif ($price_level >= 1 && !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES)) {\n\t\t\t\t$sql .= \" AND price_level = \".((int) $price_level);\n\t\t\t}\n\t\t\t$sql .= \" ORDER BY date_price\";\n\t\t\t$sql .= \" DESC LIMIT 1) as price_by_qty\";\n\t\t\t$selectFields .= \", price_rowid, price_by_qty\";\n\t\t}\n\t\t$sql .= \" FROM \".$this->db->prefix().\"product as p\";\n\t\tif (count($warehouseStatusArray)) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"product_stock as ps on ps.fk_product = p.rowid\";\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"entrepot as e on ps.fk_entrepot = e.rowid AND e.entity IN (\".getEntity('stock').\")\";\n\t\t\t$sql .= ' AND e.statut IN ('.$this->db->sanitize($this->db->escape(implode(',', $warehouseStatusArray))).')'; // Return line if product is inside the selected stock. If not, an empty line will be returned so we will count 0.\n\t\t}\n\n\t\t// include search in supplier ref\n\t\tif (!empty($conf->global->MAIN_SEARCH_PRODUCT_BY_FOURN_REF)) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"product_fournisseur_price as pfp ON p.rowid = pfp.fk_product\";\n\t\t}\n\n\t\t//Price by customer\n\t\tif (!empty($conf->global->PRODUIT_CUSTOMER_PRICES) && !empty($socid)) {\n\t\t\t$sql .= \" LEFT JOIN  \".$this->db->prefix().\"product_customer_price as pcp ON pcp.fk_soc=\".((int) $socid).\" AND pcp.fk_product=p.rowid\";\n\t\t}\n\t\t// Units\n\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"c_units u ON u.rowid = p.fk_unit\";\n\t\t}\n\t\t// Multilang : we add translation\n\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"product_lang as pl ON pl.fk_product = p.rowid \";\n\t\t\tif (!empty($conf->global->PRODUIT_TEXTS_IN_THIRDPARTY_LANGUAGE) && !empty($socid)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\n\t\t\t\t$soc = new Societe($this->db);\n\t\t\t\t$result = $soc->fetch($socid);\n\t\t\t\tif ($result > 0 && !empty($soc->default_lang)) {\n\t\t\t\t\t$sql .= \" AND pl.lang = '\".$this->db->escape($soc->default_lang).\"'\";\n\t\t\t\t} else {\n\t\t\t\t\t$sql .= \" AND pl.lang = '\".$this->db->escape($langs->getDefaultLang()).\"'\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$sql .= \" AND pl.lang = '\".$this->db->escape($langs->getDefaultLang()).\"'\";\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($conf->global->PRODUIT_ATTRIBUTES_HIDECHILD)) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"product_attribute_combination pac ON pac.fk_product_child = p.rowid\";\n\t\t}\n\n\t\t$sql .= ' WHERE p.entity IN ('.getEntity('product').')';\n\n\t\tif (!empty($conf->global->PRODUIT_ATTRIBUTES_HIDECHILD)) {\n\t\t\t$sql .= \" AND pac.rowid IS NULL\";\n\t\t}\n\n\t\tif ($finished == 0) {\n\t\t\t$sql .= \" AND p.finished = \".((int) $finished);\n\t\t} elseif ($finished == 1) {\n\t\t\t$sql .= \" AND p.finished = \".((int) $finished);\n\t\t\tif ($status >= 0) {\n\t\t\t\t$sql .= \" AND p.tosell = \".((int) $status);\n\t\t\t}\n\t\t} elseif ($status >= 0) {\n\t\t\t$sql .= \" AND p.tosell = \".((int) $status);\n\t\t}\n\t\tif ($status_purchase >= 0) {\n\t\t\t$sql .= \" AND p.tobuy = \".((int) $status_purchase);\n\t\t}\n\t\t// Filter by product type\n\t\tif (strval($filtertype) != '') {\n\t\t\t$sql .= \" AND p.fk_product_type = \".((int) $filtertype);\n\t\t} elseif (empty($conf->product->enabled)) { // when product module is disabled, show services only\n\t\t\t$sql .= \" AND p.fk_product_type = 1\";\n\t\t} elseif (empty($conf->service->enabled)) { // when service module is disabled, show products only\n\t\t\t$sql .= \" AND p.fk_product_type = 0\";\n\t\t}\n\t\t// Add criteria on ref/label\n\t\tif ($filterkey != '') {\n\t\t\t$sql .= ' AND (';\n\t\t\t$prefix = empty($conf->global->PRODUCT_DONOTSEARCH_ANYWHERE) ? '%' : ''; // Can use index if PRODUCT_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i = 0;\n\t\t\tif (count($scrit) > 1) {\n\t\t\t\t$sql .= \"(\";\n\t\t\t}\n\t\t\tforeach ($scrit as $crit) {\n\t\t\t\tif ($i > 0) {\n\t\t\t\t\t$sql .= \" AND \";\n\t\t\t\t}\n\t\t\t\t$sql .= \"(p.ref LIKE '\".$this->db->escape($prefix.$crit).\"%' OR p.label LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t\t\t$sql .= \" OR pl.label LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->global->PRODUIT_CUSTOMER_PRICES) && ! empty($socid)) {\n\t\t\t\t\t$sql .= \" OR pcp.ref_customer LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->global->PRODUCT_AJAX_SEARCH_ON_DESCRIPTION)) {\n\t\t\t\t\t$sql .= \" OR p.description LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t\t\t\t$sql .= \" OR pl.description LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->global->MAIN_SEARCH_PRODUCT_BY_FOURN_REF)) {\n\t\t\t\t\t$sql .= \" OR pfp.ref_fourn LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t}\n\t\t\t\t$sql .= \")\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) {\n\t\t\t\t$sql .= \")\";\n\t\t\t}\n\t\t\tif (!empty($conf->barcode->enabled)) {\n\t\t\t\t$sql .= \" OR p.barcode LIKE '\".$this->db->escape($prefix.$filterkey).\"%'\";\n\t\t\t}\n\t\t\t$sql .= ')';\n\t\t}\n\t\tif (count($warehouseStatusArray)) {\n\t\t\t$sql .= \" GROUP BY \".$selectFields;\n\t\t}\n\n\t\t//Sort by category\n\t\tif (!empty($conf->global->PRODUCT_SORT_BY_CATEGORY)) {\n\t\t\t$sql .= \" ORDER BY categorie_product_id \";\n\t\t\t//ASC OR DESC order\n\t\t\t($conf->global->PRODUCT_SORT_BY_CATEGORY == 1) ? $sql .= \"ASC\" : $sql .= \"DESC\";\n\t\t} else {\n\t\t\t$sql .= $this->db->order(\"p.ref\");\n\t\t}\n\n\t\t$sql .= $this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\tdol_syslog(get_class($this).\"::select_produits_list search products\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/dynamic_price/class/price_parser.class.php';\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/product.lib.php';\n\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t$events = null;\n\n\t\t\tif (!$forcecombo) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events, getDolGlobalInt(\"PRODUIT_USE_SEARCH_TO_SELECT\"));\n\t\t\t}\n\n\t\t\t$out .= '<select class=\"flat'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\n\t\t\t$textifempty = '';\n\t\t\t// Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'.\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (!empty($conf->global->PRODUIT_USE_SEARCH_TO_SELECT)) {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) {\n\t\t\t\t\t$textifempty = $langs->trans($showempty);\n\t\t\t\t} else {\n\t\t\t\t\t$textifempty .= $langs->trans(\"All\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) {\n\t\t\t\t\t$textifempty = $langs->trans($showempty);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($showempty) {\n\t\t\t\t$out .= '<option value=\"-1\" selected>'.($textifempty ? $textifempty : '&nbsp;').'</option>';\n\t\t\t}\n\n\t\t\t$i = 0;\n\t\t\twhile ($num && $i < $num) {\n\t\t\t\t$opt = '';\n\t\t\t\t$optJson = array();\n\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\tif ((!empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY) || !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES)) && !empty($objp->price_by_qty) && $objp->price_by_qty == 1) { // Price by quantity will return many prices for the same product\n\t\t\t\t\t$sql = \"SELECT rowid, quantity, price, unitprice, remise_percent, remise, price_base_type\";\n\t\t\t\t\t$sql .= \" FROM \".$this->db->prefix().\"product_price_by_qty\";\n\t\t\t\t\t$sql .= \" WHERE fk_product_price = \".((int) $objp->price_rowid);\n\t\t\t\t\t$sql .= \" ORDER BY quantity ASC\";\n\n\t\t\t\t\tdol_syslog(get_class($this).\"::select_produits_list search prices by qty\", LOG_DEBUG);\n\t\t\t\t\t$result2 = $this->db->query($sql);\n\t\t\t\t\tif ($result2) {\n\t\t\t\t\t\t$nb_prices = $this->db->num_rows($result2);\n\t\t\t\t\t\t$j = 0;\n\t\t\t\t\t\twhile ($nb_prices && $j < $nb_prices) {\n\t\t\t\t\t\t\t$objp2 = $this->db->fetch_object($result2);\n\n\t\t\t\t\t\t\t$objp->price_by_qty_rowid = $objp2->rowid;\n\t\t\t\t\t\t\t$objp->price_by_qty_price_base_type = $objp2->price_base_type;\n\t\t\t\t\t\t\t$objp->price_by_qty_quantity = $objp2->quantity;\n\t\t\t\t\t\t\t$objp->price_by_qty_unitprice = $objp2->unitprice;\n\t\t\t\t\t\t\t$objp->price_by_qty_remise_percent = $objp2->remise_percent;\n\t\t\t\t\t\t\t// For backward compatibility\n\t\t\t\t\t\t\t$objp->quantity = $objp2->quantity;\n\t\t\t\t\t\t\t$objp->price = $objp2->price;\n\t\t\t\t\t\t\t$objp->unitprice = $objp2->unitprice;\n\t\t\t\t\t\t\t$objp->remise_percent = $objp2->remise_percent;\n\t\t\t\t\t\t\t$objp->remise = $objp2->remise;\n\n\t\t\t\t\t\t\t//$objp->tva_tx is not overwritten by $objp2 value\n\t\t\t\t\t\t\t//$objp->default_vat_code is not overwritten by $objp2 value\n\n\t\t\t\t\t\t\t$this->constructProductListOption($objp, $opt, $optJson, 0, $selected, $hidepriceinlabel, $filterkey);\n\n\t\t\t\t\t\t\t$j++;\n\n\t\t\t\t\t\t\t// Add new entry\n\t\t\t\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t\t\t\t$out .= $opt;\n\t\t\t\t\t\t\tarray_push($outarray, $optJson);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($conf->dynamicprices->enabled) && !empty($objp->fk_price_expression)) {\n\t\t\t\t\t\t$price_product = new Product($this->db);\n\t\t\t\t\t\t$price_product->fetch($objp->rowid, '', '', 1);\n\t\t\t\t\t\t$priceparser = new PriceParser($this->db);\n\t\t\t\t\t\t$price_result = $priceparser->parseProduct($price_product);\n\t\t\t\t\t\tif ($price_result >= 0) {\n\t\t\t\t\t\t\t$objp->price = $price_result;\n\t\t\t\t\t\t\t$objp->unitprice = $price_result;\n\t\t\t\t\t\t\t//Calculate the VAT\n\t\t\t\t\t\t\t$objp->price_ttc = price2num($objp->price) * (1 + ($objp->tva_tx / 100));\n\t\t\t\t\t\t\t$objp->price_ttc = price2num($objp->price_ttc, 'MU');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$this->constructProductListOption($objp, $opt, $optJson, $price_level, $selected, $hidepriceinlabel, $filterkey);\n\t\t\t\t\t// Add new entry\n\t\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t\t$out .= $opt;\n\t\t\t\t\tarray_push($outarray, $optJson);\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$out .= '</select>';\n\n\t\t\t$this->db->free($result);\n\n\t\t\tif (empty($outputmode)) {\n\t\t\t\treturn $out;\n\t\t\t}\n\t\t\treturn $outarray;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t * Function to forge the string with OPTIONs of SELECT.\n\t * This define value for &$opt and &$optJson.\n\t * This function is called by select_produits_list().\n\t *\n\t * @param \tresource\t$objp\t\t\t    Resultset of fetch\n\t * @param \tstring\t\t$opt\t\t\t    Option (var used for returned value in string option format)\n\t * @param \tstring\t\t$optJson\t\t    Option (var used for returned value in json format)\n\t * @param \tint\t\t\t$price_level\t    Price level\n\t * @param \tstring\t\t$selected\t\t    Preselected value\n\t * @param   int         $hidepriceinlabel   Hide price in label\n\t * @param   string      $filterkey          Filter key to highlight\n\t * @param\tint\t\t\t$novirtualstock \tDo not load virtual stock, even if slow option STOCK_SHOW_VIRTUAL_STOCK_IN_PRODUCTS_COMBO is on.\n\t * @return\tvoid\n\t */\n\tprotected function constructProductListOption(&$objp, &$opt, &$optJson, $price_level, $selected, $hidepriceinlabel = 0, $filterkey = '', $novirtualstock = 0)\n\t{\n\t\tglobal $langs, $conf, $user;\n\n\t\t$outkey = '';\n\t\t$outval = '';\n\t\t$outref = '';\n\t\t$outlabel = '';\n\t\t$outlabel_translated = '';\n\t\t$outdesc = '';\n\t\t$outdesc_translated = '';\n\t\t$outbarcode = '';\n\t\t$outorigin = '';\n\t\t$outtype = '';\n\t\t$outprice_ht = '';\n\t\t$outprice_ttc = '';\n\t\t$outpricebasetype = '';\n\t\t$outtva_tx = '';\n\t\t$outdefault_vat_code = '';\n\t\t$outqty = 1;\n\t\t$outdiscount = 0;\n\n\t\t$maxlengtharticle = (empty($conf->global->PRODUCT_MAX_LENGTH_COMBO) ? 48 : $conf->global->PRODUCT_MAX_LENGTH_COMBO);\n\n\t\t$label = $objp->label;\n\t\tif (!empty($objp->label_translated)) {\n\t\t\t$label = $objp->label_translated;\n\t\t}\n\t\tif (!empty($filterkey) && $filterkey != '') {\n\t\t\t$label = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $label, 1);\n\t\t}\n\n\t\t$outkey = $objp->rowid;\n\t\t$outref = $objp->ref;\n\t\t$outrefcust = empty($objp->custref) ? '' : $objp->custref;\n\t\t$outlabel = $objp->label;\n\t\t$outdesc = $objp->description;\n\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t$outlabel_translated = $objp->label_translated;\n\t\t\t$outdesc_translated = $objp->description_translated;\n\t\t}\n\t\t$outbarcode = $objp->barcode;\n\t\t$outorigin = $objp->fk_country;\n\t\t$outpbq = empty($objp->price_by_qty_rowid) ? '' : $objp->price_by_qty_rowid;\n\n\t\t$outtype = $objp->fk_product_type;\n\t\t$outdurationvalue = $outtype == Product::TYPE_SERVICE ?substr($objp->duration, 0, dol_strlen($objp->duration) - 1) : '';\n\t\t$outdurationunit = $outtype == Product::TYPE_SERVICE ?substr($objp->duration, -1) : '';\n\n\t\tif ($outorigin && !empty($conf->global->PRODUCT_SHOW_ORIGIN_IN_COMBO)) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\t\t}\n\n\t\t// Units\n\t\t$outvalUnits = '';\n\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\tif (!empty($objp->unit_short)) {\n\t\t\t\t$outvalUnits .= ' - '.$objp->unit_short;\n\t\t\t}\n\t\t}\n\t\tif (!empty($conf->global->PRODUCT_SHOW_DIMENSIONS_IN_COMBO)) {\n\t\t\tif (!empty($objp->weight) && $objp->weight_units !== null) {\n\t\t\t\t$unitToShow = showDimensionInBestUnit($objp->weight, $objp->weight_units, 'weight', $langs);\n\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t}\n\t\t\tif ((!empty($objp->length) || !empty($objp->width) || !empty($objp->height)) && $objp->length_units !== null) {\n\t\t\t\t$unitToShow = $objp->length.' x '.$objp->width.' x '.$objp->height.' '.measuringUnitString(0, 'size', $objp->length_units);\n\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t}\n\t\t\tif (!empty($objp->surface) && $objp->surface_units !== null) {\n\t\t\t\t$unitToShow = showDimensionInBestUnit($objp->surface, $objp->surface_units, 'surface', $langs);\n\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t}\n\t\t\tif (!empty($objp->volume) && $objp->volume_units !== null) {\n\t\t\t\t$unitToShow = showDimensionInBestUnit($objp->volume, $objp->volume_units, 'volume', $langs);\n\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t}\n\t\t}\n\t\tif ($outdurationvalue && $outdurationunit) {\n\t\t\t$da = array(\n\t\t\t\t'h' => $langs->trans('Hour'),\n\t\t\t\t'd' => $langs->trans('Day'),\n\t\t\t\t'w' => $langs->trans('Week'),\n\t\t\t\t'm' => $langs->trans('Month'),\n\t\t\t\t'y' => $langs->trans('Year')\n\t\t\t);\n\t\t\tif (isset($da[$outdurationunit])) {\n\t\t\t\t$outvalUnits .= ' - '.$outdurationvalue.' '.$langs->transnoentities($da[$outdurationunit].($outdurationvalue > 1 ? 's' : ''));\n\t\t\t}\n\t\t}\n\n\t\t$opt = '<option value=\"'.$objp->rowid.'\"';\n\t\t$opt .= ($objp->rowid == $selected) ? ' selected' : '';\n\t\tif (!empty($objp->price_by_qty_rowid) && $objp->price_by_qty_rowid > 0) {\n\t\t\t$opt .= ' pbq=\"'.$objp->price_by_qty_rowid.'\" data-pbq=\"'.$objp->price_by_qty_rowid.'\" data-pbqup=\"'.$objp->price_by_qty_unitprice.'\" data-pbqbase=\"'.$objp->price_by_qty_price_base_type.'\" data-pbqqty=\"'.$objp->price_by_qty_quantity.'\" data-pbqpercent=\"'.$objp->price_by_qty_remise_percent.'\"';\n\t\t}\n\t\tif (!empty($conf->stock->enabled) && isset($objp->stock) && ($objp->fk_product_type == Product::TYPE_PRODUCT || !empty($conf->global->STOCK_SUPPORTS_SERVICES))) {\n\t\t\tif (!empty($user->rights->stock->lire)) {\n\t\t\t\tif ($objp->stock > 0) {\n\t\t\t\t\t$opt .= ' class=\"product_line_stock_ok\"';\n\t\t\t\t} elseif ($objp->stock <= 0) {\n\t\t\t\t\t$opt .= ' class=\"product_line_stock_too_low\"';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!empty($conf->global->PRODUIT_TEXTS_IN_THIRDPARTY_LANGUAGE)) {\n\t\t\t$opt .= ' data-labeltrans=\"'.$outlabel_translated.'\"';\n\t\t\t$opt .= ' data-desctrans=\"'.dol_escape_htmltag($outdesc_translated).'\"';\n\t\t}\n\t\t$opt .= '>';\n\t\t$opt .= $objp->ref;\n\t\tif (! empty($objp->custref)) {\n\t\t\t$opt.= ' (' . $objp->custref . ')';\n\t\t}\n\t\tif ($outbarcode) {\n\t\t\t$opt .= ' ('.$outbarcode.')';\n\t\t}\n\t\t$opt .= ' - '.dol_trunc($label, $maxlengtharticle);\n\t\tif ($outorigin && !empty($conf->global->PRODUCT_SHOW_ORIGIN_IN_COMBO)) {\n\t\t\t$opt .= ' ('.getCountry($outorigin, 1).')';\n\t\t}\n\n\t\t$objRef = $objp->ref;\n\t\tif (! empty($objp->custref)) {\n\t\t\t$objRef .= ' (' . $objp->custref . ')';\n\t\t}\n\t\tif (!empty($filterkey) && $filterkey != '') {\n\t\t\t$objRef = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $objRef, 1);\n\t\t}\n\t\t$outval .= $objRef;\n\t\tif ($outbarcode) {\n\t\t\t$outval .= ' ('.$outbarcode.')';\n\t\t}\n\t\t$outval .= ' - '.dol_trunc($label, $maxlengtharticle);\n\t\tif ($outorigin && !empty($conf->global->PRODUCT_SHOW_ORIGIN_IN_COMBO)) {\n\t\t\t$outval .= ' ('.getCountry($outorigin, 1).')';\n\t\t}\n\n\t\t// Units\n\t\t$opt .= $outvalUnits;\n\t\t$outval .= $outvalUnits;\n\n\t\t$found = 0;\n\n\t\t// Multiprice\n\t\t// If we need a particular price level (from 1 to n)\n\t\tif (empty($hidepriceinlabel) && $price_level >= 1 && (!empty($conf->global->PRODUIT_MULTIPRICES) || !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES))) {\n\t\t\t$sql = \"SELECT price, price_ttc, price_base_type, tva_tx, default_vat_code\";\n\t\t\t$sql .= \" FROM \".$this->db->prefix().\"product_price\";\n\t\t\t$sql .= \" WHERE fk_product = \".((int) $objp->rowid);\n\t\t\t$sql .= \" AND entity IN (\".getEntity('productprice').\")\";\n\t\t\t$sql .= \" AND price_level = \".((int) $price_level);\n\t\t\t$sql .= \" ORDER BY date_price DESC, rowid DESC\"; // Warning DESC must be both on date_price and rowid.\n\t\t\t$sql .= \" LIMIT 1\";\n\n\t\t\tdol_syslog(get_class($this).'::constructProductListOption search price for product '.$objp->rowid.' AND level '.$price_level.'', LOG_DEBUG);\n\t\t\t$result2 = $this->db->query($sql);\n\t\t\tif ($result2) {\n\t\t\t\t$objp2 = $this->db->fetch_object($result2);\n\t\t\t\tif ($objp2) {\n\t\t\t\t\t$found = 1;\n\t\t\t\t\tif ($objp2->price_base_type == 'HT') {\n\t\t\t\t\t\t$opt .= ' - '.price($objp2->price, 1, $langs, 0, 0, -1, $conf->currency).' '.$langs->trans(\"HT\");\n\t\t\t\t\t\t$outval .= ' - '.price($objp2->price, 0, $langs, 0, 0, -1, $conf->currency).' '.$langs->transnoentities(\"HT\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$opt .= ' - '.price($objp2->price_ttc, 1, $langs, 0, 0, -1, $conf->currency).' '.$langs->trans(\"TTC\");\n\t\t\t\t\t\t$outval .= ' - '.price($objp2->price_ttc, 0, $langs, 0, 0, -1, $conf->currency).' '.$langs->transnoentities(\"TTC\");\n\t\t\t\t\t}\n\t\t\t\t\t$outprice_ht = price($objp2->price);\n\t\t\t\t\t$outprice_ttc = price($objp2->price_ttc);\n\t\t\t\t\t$outpricebasetype = $objp2->price_base_type;\n\t\t\t\t\tif (!empty($conf->global->PRODUIT_MULTIPRICES_USE_VAT_PER_LEVEL)) {  // using this option is a bug. kept for backward compatibility\n\t\t\t\t\t\t$outtva_tx = $objp2->tva_tx;\t\t\t\t\t\t// We use the vat rate on line of multiprice\n\t\t\t\t\t\t$outdefault_vat_code = $objp2->default_vat_code;\t// We use the vat code on line of multiprice\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$outtva_tx = $objp->tva_tx;\t\t\t\t\t\t\t// We use the vat rate of product, not the one on line of multiprice\n\t\t\t\t\t\t$outdefault_vat_code = $objp->default_vat_code;\t\t// We use the vat code or product, not the one on line of multiprice\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdol_print_error($this->db);\n\t\t\t}\n\t\t}\n\n\t\t// Price by quantity\n\t\tif (empty($hidepriceinlabel) && !empty($objp->quantity) && $objp->quantity >= 1 && (!empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY) || !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES))) {\n\t\t\t$found = 1;\n\t\t\t$outqty = $objp->quantity;\n\t\t\t$outdiscount = $objp->remise_percent;\n\t\t\tif ($objp->quantity == 1) {\n\t\t\t\t$opt .= ' - '.price($objp->unitprice, 1, $langs, 0, 0, -1, $conf->currency).\"/\";\n\t\t\t\t$outval .= ' - '.price($objp->unitprice, 0, $langs, 0, 0, -1, $conf->currency).\"/\";\n\t\t\t\t$opt .= $langs->trans(\"Unit\"); // Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t$outval .= $langs->transnoentities(\"Unit\");\n\t\t\t} else {\n\t\t\t\t$opt .= ' - '.price($objp->price, 1, $langs, 0, 0, -1, $conf->currency).\"/\".$objp->quantity;\n\t\t\t\t$outval .= ' - '.price($objp->price, 0, $langs, 0, 0, -1, $conf->currency).\"/\".$objp->quantity;\n\t\t\t\t$opt .= $langs->trans(\"Units\"); // Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t$outval .= $langs->transnoentities(\"Units\");\n\t\t\t}\n\n\t\t\t$outprice_ht = price($objp->unitprice);\n\t\t\t$outprice_ttc = price($objp->unitprice * (1 + ($objp->tva_tx / 100)));\n\t\t\t$outpricebasetype = $objp->price_base_type;\n\t\t\t$outtva_tx = $objp->tva_tx;\t\t\t\t\t\t\t// This value is the value on product when constructProductListOption is called by select_produits_list even if other field $objp-> are from table price_by_qty\n\t\t\t$outdefault_vat_code = $objp->default_vat_code;\t\t// This value is the value on product when constructProductListOption is called by select_produits_list even if other field $objp-> are from table price_by_qty\n\t\t}\n\t\tif (empty($hidepriceinlabel) && !empty($objp->quantity) && $objp->quantity >= 1) {\n\t\t\t$opt .= \" (\".price($objp->unitprice, 1, $langs, 0, 0, -1, $conf->currency).\"/\".$langs->trans(\"Unit\").\")\"; // Do not use strtolower because it breaks utf8 encoding\n\t\t\t$outval .= \" (\".price($objp->unitprice, 0, $langs, 0, 0, -1, $conf->currency).\"/\".$langs->transnoentities(\"Unit\").\")\"; // Do not use strtolower because it breaks utf8 encoding\n\t\t}\n\t\tif (empty($hidepriceinlabel) && !empty($objp->remise_percent) && $objp->remise_percent >= 1) {\n\t\t\t$opt .= \" - \".$langs->trans(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t\t$outval .= \" - \".$langs->transnoentities(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t}\n\n\t\t// Price by customer\n\t\tif (empty($hidepriceinlabel) && !empty($conf->global->PRODUIT_CUSTOMER_PRICES)) {\n\t\t\tif (!empty($objp->idprodcustprice)) {\n\t\t\t\t$found = 1;\n\n\t\t\t\tif ($objp->custprice_base_type == 'HT') {\n\t\t\t\t\t$opt .= ' - '.price($objp->custprice, 1, $langs, 0, 0, -1, $conf->currency).' '.$langs->trans(\"HT\");\n\t\t\t\t\t$outval .= ' - '.price($objp->custprice, 0, $langs, 0, 0, -1, $conf->currency).' '.$langs->transnoentities(\"HT\");\n\t\t\t\t} else {\n\t\t\t\t\t$opt .= ' - '.price($objp->custprice_ttc, 1, $langs, 0, 0, -1, $conf->currency).' '.$langs->trans(\"TTC\");\n\t\t\t\t\t$outval .= ' - '.price($objp->custprice_ttc, 0, $langs, 0, 0, -1, $conf->currency).' '.$langs->transnoentities(\"TTC\");\n\t\t\t\t}\n\n\t\t\t\t$outprice_ht = price($objp->custprice);\n\t\t\t\t$outprice_ttc = price($objp->custprice_ttc);\n\t\t\t\t$outpricebasetype = $objp->custprice_base_type;\n\t\t\t\t$outtva_tx = $objp->custtva_tx;\n\t\t\t\t$outdefault_vat_code = $objp->custdefault_vat_code;\n\t\t\t}\n\t\t}\n\n\t\t// If level no defined or multiprice not found, we used the default price\n\t\tif (empty($hidepriceinlabel) && !$found) {\n\t\t\tif ($objp->price_base_type == 'HT') {\n\t\t\t\t$opt .= ' - '.price($objp->price, 1, $langs, 0, 0, -1, $conf->currency).' '.$langs->trans(\"HT\");\n\t\t\t\t$outval .= ' - '.price($objp->price, 0, $langs, 0, 0, -1, $conf->currency).' '.$langs->transnoentities(\"HT\");\n\t\t\t} else {\n\t\t\t\t$opt .= ' - '.price($objp->price_ttc, 1, $langs, 0, 0, -1, $conf->currency).' '.$langs->trans(\"TTC\");\n\t\t\t\t$outval .= ' - '.price($objp->price_ttc, 0, $langs, 0, 0, -1, $conf->currency).' '.$langs->transnoentities(\"TTC\");\n\t\t\t}\n\t\t\t$outprice_ht = price($objp->price);\n\t\t\t$outprice_ttc = price($objp->price_ttc);\n\t\t\t$outpricebasetype = $objp->price_base_type;\n\t\t\t$outtva_tx = $objp->tva_tx;\n\t\t\t$outdefault_vat_code = $objp->default_vat_code;\n\t\t}\n\n\t\tif (!empty($conf->stock->enabled) && isset($objp->stock) && ($objp->fk_product_type == Product::TYPE_PRODUCT || !empty($conf->global->STOCK_SUPPORTS_SERVICES))) {\n\t\t\tif (!empty($user->rights->stock->lire)) {\n\t\t\t\t$opt .= ' - '.$langs->trans(\"Stock\").': '.price(price2num($objp->stock, 'MS'));\n\n\t\t\t\tif ($objp->stock > 0) {\n\t\t\t\t\t$outval .= ' - <span class=\"product_line_stock_ok\">';\n\t\t\t\t} elseif ($objp->stock <= 0) {\n\t\t\t\t\t$outval .= ' - <span class=\"product_line_stock_too_low\">';\n\t\t\t\t}\n\t\t\t\t$outval .= $langs->transnoentities(\"Stock\").': '.price(price2num($objp->stock, 'MS'));\n\t\t\t\t$outval .= '</span>';\n\t\t\t\tif (empty($novirtualstock) && !empty($conf->global->STOCK_SHOW_VIRTUAL_STOCK_IN_PRODUCTS_COMBO)) {  // Warning, this option may slow down combo list generation\n\t\t\t\t\t$langs->load(\"stocks\");\n\n\t\t\t\t\t$tmpproduct = new Product($this->db);\n\t\t\t\t\t$tmpproduct->fetch($objp->rowid, '', '', '', 1, 1, 1); // Load product without lang and prices arrays (we just need to make ->virtual_stock() after)\n\t\t\t\t\t$tmpproduct->load_virtual_stock();\n\t\t\t\t\t$virtualstock = $tmpproduct->stock_theorique;\n\n\t\t\t\t\t$opt .= ' - '.$langs->trans(\"VirtualStock\").':'.$virtualstock;\n\n\t\t\t\t\t$outval .= ' - '.$langs->transnoentities(\"VirtualStock\").':';\n\t\t\t\t\tif ($virtualstock > 0) {\n\t\t\t\t\t\t$outval .= '<span class=\"product_line_stock_ok\">';\n\t\t\t\t\t} elseif ($virtualstock <= 0) {\n\t\t\t\t\t\t$outval .= '<span class=\"product_line_stock_too_low\">';\n\t\t\t\t\t}\n\t\t\t\t\t$outval .= $virtualstock;\n\t\t\t\t\t$outval .= '</span>';\n\n\t\t\t\t\tunset($tmpproduct);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$opt .= \"</option>\\n\";\n\t\t$optJson = array(\n\t\t\t'key'=>$outkey,\n\t\t\t'value'=>$outref,\n\t\t\t'label'=>$outval,\n\t\t\t'label2'=>$outlabel,\n\t\t\t'desc'=>$outdesc,\n\t\t\t'type'=>$outtype,\n\t\t\t'price_ht'=>price2num($outprice_ht),\n\t\t\t'price_ttc'=>price2num($outprice_ttc),\n\t\t\t'pricebasetype'=>$outpricebasetype,\n\t\t\t'tva_tx'=>$outtva_tx,\n\t\t\t'default_vat_code'=>$outdefault_vat_code,\n\t\t\t'qty'=>$outqty,\n\t\t\t'discount'=>$outdiscount,\n\t\t\t'duration_value'=>$outdurationvalue,\n\t\t\t'duration_unit'=>$outdurationunit,\n\t\t\t'pbq'=>$outpbq,\n\t\t\t'labeltrans'=>$outlabel_translated,\n\t\t\t'desctrans'=>$outdesc_translated,\n\t\t\t'ref_customer'=>$outrefcust\n\t\t);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn list of products for customer (in Ajax if Ajax activated or go to select_produits_fournisseurs_list)\n\t *\n\t *\t@param\tint\t\t$socid\t\t\tId third party\n\t *\t@param  string\t$selected       Preselected product\n\t *\t@param  string\t$htmlname       Name of HTML Select\n\t *  @param\tstring\t$filtertype     Filter on product type (''=nofilter, 0=product, 1=service)\n\t *\t@param  string\t$filtre\t\t\tFor a SQL filter\n\t *\t@param\tarray\t$ajaxoptions\tOptions for ajax_autocompleter\n\t *  @param\tint\t\t$hidelabel\t\tHide label (0=no, 1=yes)\n\t *  @param  int     $alsoproductwithnosupplierprice    1=Add also product without supplier prices\n\t *  @param\tstring\t$morecss\t\tMore CSS\n\t *  @param\tstring\t$placeholder\tPlaceholder\n\t *\t@return\tvoid\n\t */\n\tpublic function select_produits_fournisseurs($socid, $selected = '', $htmlname = 'productid', $filtertype = '', $filtre = '', $ajaxoptions = array(), $hidelabel = 0, $alsoproductwithnosupplierprice = 0, $morecss = '', $placeholder = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\t\tglobal $price_level, $status, $finished;\n\n\t\tif (!isset($status)) {\n\t\t\t$status = 1;\n\t\t}\n\n\t\t$selected_input_value = '';\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->PRODUIT_USE_SEARCH_TO_SELECT)) {\n\t\t\tif ($selected > 0) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t\t\t\t$producttmpselect = new Product($this->db);\n\t\t\t\t$producttmpselect->fetch($selected);\n\t\t\t\t$selected_input_value = $producttmpselect->ref;\n\t\t\t\tunset($producttmpselect);\n\t\t\t}\n\n\t\t\t// mode=2 means suppliers products\n\t\t\t$urloption = ($socid > 0 ? 'socid='.$socid.'&' : '').'htmlname='.$htmlname.'&outjson=1&price_level='.$price_level.'&type='.$filtertype.'&mode=2&status='.$status.'&finished='.$finished.'&alsoproductwithnosupplierprice='.$alsoproductwithnosupplierprice;\n\t\t\tprint ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/product/ajax/products.php', $urloption, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT, 0, $ajaxoptions);\n\t\t\tprint ($hidelabel ? '' : $langs->trans(\"RefOrLabel\").' : ').'<input type=\"text\" class=\"minwidth300\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.($placeholder ? ' placeholder=\"'.$placeholder.'\"' : '').'>';\n\t\t} else {\n\t\t\tprint $this->select_produits_fournisseurs_list($socid, $selected, $htmlname, $filtertype, $filtre, '', $status, 0, 0, $alsoproductwithnosupplierprice, $morecss, 0, $placeholder);\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn list of suppliers products\n\t *\n\t *\t@param\tint\t\t$socid   \t\t\tId of supplier thirdparty (0 = no filter)\n\t *\t@param  int\t\t$selected       \tProduct price pre-selected (must be 'id' in product_fournisseur_price or 'idprod_IDPROD')\n\t *\t@param  string\t$htmlname       \tName of HTML select\n\t *  @param\tstring\t$filtertype     \tFilter on product type (''=nofilter, 0=product, 1=service)\n\t *\t@param  string\t$filtre         \tGeneric filter. Data must not come from user input.\n\t *\t@param  string\t$filterkey      \tFilter of produdts\n\t *  @param  int\t\t$statut         \t-1=Return all products, 0=Products not on buy, 1=Products on buy\n\t *  @param  int\t\t$outputmode     \t0=HTML select string, 1=Array\n\t *  @param  int     $limit          \tLimit of line number\n\t *  @param  int     $alsoproductwithnosupplierprice    1=Add also product without supplier prices\n\t *  @param\tstring\t$morecss\t\t\tAdd more CSS\n\t *  @param\tint\t\t$showstockinlist\tShow stock information (slower).\n\t *  @param\tstring\t$placeholder\t\tPlaceholder\n\t *  @return array           \t\t\tArray of keys for json\n\t */\n\tpublic function select_produits_fournisseurs_list($socid, $selected = '', $htmlname = 'productid', $filtertype = '', $filtre = '', $filterkey = '', $statut = -1, $outputmode = 0, $limit = 100, $alsoproductwithnosupplierprice = 0, $morecss = '', $showstockinlist = 0, $placeholder = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf, $user;\n\n\t\t$out = '';\n\t\t$outarray = array();\n\n\t\t$maxlengtharticle = (empty($conf->global->PRODUCT_MAX_LENGTH_COMBO) ? 48 : $conf->global->PRODUCT_MAX_LENGTH_COMBO);\n\n\t\t$langs->load('stocks');\n\t\t// Units\n\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\t$langs->load('other');\n\t\t}\n\n\t\t$sql = \"SELECT p.rowid, p.ref, p.label, p.price, p.duration, p.fk_product_type, p.stock,\";\n\t\t$sql .= \" pfp.ref_fourn, pfp.rowid as idprodfournprice, pfp.price as fprice, pfp.quantity, pfp.remise_percent, pfp.remise, pfp.unitprice,\";\n\t\t$sql .= \" pfp.fk_supplier_price_expression, pfp.fk_product, pfp.tva_tx, pfp.default_vat_code, pfp.fk_soc, s.nom as name,\";\n\t\t$sql .= \" pfp.supplier_reputation\";\n\t\t// if we use supplier description of the products\n\t\tif (!empty($conf->global->PRODUIT_FOURN_TEXTS)) {\n\t\t\t$sql .= \" ,pfp.desc_fourn as description\";\n\t\t} else {\n\t\t\t$sql .= \" ,p.description\";\n\t\t}\n\t\t// Units\n\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\t$sql .= \", u.label as unit_long, u.short_label as unit_short, p.weight, p.weight_units, p.length, p.length_units, p.width, p.width_units, p.height, p.height_units, p.surface, p.surface_units, p.volume, p.volume_units\";\n\t\t}\n\t\tif (!empty($conf->barcode->enabled)) {\n\t\t\t$sql .= \", pfp.barcode\";\n\t\t}\n\t\t$sql .= \" FROM \".$this->db->prefix().\"product as p\";\n\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"product_fournisseur_price as pfp ON ( p.rowid = pfp.fk_product AND pfp.entity IN (\".getEntity('product').\") )\";\n\t\tif ($socid > 0) {\n\t\t\t$sql .= \" AND pfp.fk_soc = \".((int) $socid);\n\t\t}\n\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"societe as s ON pfp.fk_soc = s.rowid\";\n\t\t// Units\n\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"c_units u ON u.rowid = p.fk_unit\";\n\t\t}\n\t\t$sql .= \" WHERE p.entity IN (\".getEntity('product').\")\";\n\t\tif ($statut != -1) {\n\t\t\t$sql .= \" AND p.tobuy = \".((int) $statut);\n\t\t}\n\t\tif (strval($filtertype) != '') {\n\t\t\t$sql .= \" AND p.fk_product_type = \".((int) $filtertype);\n\t\t}\n\t\tif (!empty($filtre)) {\n\t\t\t$sql .= \" \".$filtre;\n\t\t}\n\t\t// Add criteria on ref/label\n\t\tif ($filterkey != '') {\n\t\t\t$sql .= ' AND (';\n\t\t\t$prefix = empty($conf->global->PRODUCT_DONOTSEARCH_ANYWHERE) ? '%' : ''; // Can use index if PRODUCT_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i = 0;\n\t\t\tif (count($scrit) > 1) {\n\t\t\t\t$sql .= \"(\";\n\t\t\t}\n\t\t\tforeach ($scrit as $crit) {\n\t\t\t\tif ($i > 0) {\n\t\t\t\t\t$sql .= \" AND \";\n\t\t\t\t}\n\t\t\t\t$sql .= \"(pfp.ref_fourn LIKE '\".$this->db->escape($prefix.$crit).\"%' OR p.ref LIKE '\".$this->db->escape($prefix.$crit).\"%' OR p.label LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\tif (!empty($conf->global->PRODUIT_FOURN_TEXTS)) {\n\t\t\t\t\t$sql .= \" OR pfp.desc_fourn LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t}\n\t\t\t\t$sql .= \")\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) {\n\t\t\t\t$sql .= \")\";\n\t\t\t}\n\t\t\tif (!empty($conf->barcode->enabled)) {\n\t\t\t\t$sql .= \" OR p.barcode LIKE '\".$this->db->escape($prefix.$filterkey).\"%'\";\n\t\t\t\t$sql .= \" OR pfp.barcode LIKE '\".$this->db->escape($prefix.$filterkey).\"%'\";\n\t\t\t}\n\t\t\t$sql .= ')';\n\t\t}\n\t\t$sql .= \" ORDER BY pfp.ref_fourn DESC, pfp.quantity ASC\";\n\t\t$sql .= $this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\n\t\tdol_syslog(get_class($this).\"::select_produits_fournisseurs_list\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/dynamic_price/class/price_parser.class.php';\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/product.lib.php';\n\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t//$out.='<select class=\"flat\" id=\"select'.$htmlname.'\" name=\"'.$htmlname.'\">';\t// remove select to have id same with combo and ajax\n\t\t\t$out .= '<select class=\"flat '.($morecss ? ' '.$morecss : '').'\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t\tif (!$selected) {\n\t\t\t\t$out .= '<option value=\"-1\" selected>'.($placeholder ? $placeholder : '&nbsp;').'</option>';\n\t\t\t} else {\n\t\t\t\t$out .= '<option value=\"-1\">'.($placeholder ? $placeholder : '&nbsp;').'</option>';\n\t\t\t}\n\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num) {\n\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\t$outkey = $objp->idprodfournprice; // id in table of price\n\t\t\t\tif (!$outkey && $alsoproductwithnosupplierprice) {\n\t\t\t\t\t$outkey = 'idprod_'.$objp->rowid; // id of product\n\t\t\t\t}\n\n\t\t\t\t$outref = $objp->ref;\n\t\t\t\t$outval = '';\n\t\t\t\t$outbarcode = $objp->barcode;\n\t\t\t\t$outqty = 1;\n\t\t\t\t$outdiscount = 0;\n\t\t\t\t$outtype = $objp->fk_product_type;\n\t\t\t\t$outdurationvalue = $outtype == Product::TYPE_SERVICE ?substr($objp->duration, 0, dol_strlen($objp->duration) - 1) : '';\n\t\t\t\t$outdurationunit = $outtype == Product::TYPE_SERVICE ?substr($objp->duration, -1) : '';\n\n\t\t\t\t// Units\n\t\t\t\t$outvalUnits = '';\n\t\t\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\t\t\tif (!empty($objp->unit_short)) {\n\t\t\t\t\t\t$outvalUnits .= ' - '.$objp->unit_short;\n\t\t\t\t\t}\n\t\t\t\t\tif (!empty($objp->weight) && $objp->weight_units !== null) {\n\t\t\t\t\t\t$unitToShow = showDimensionInBestUnit($objp->weight, $objp->weight_units, 'weight', $langs);\n\t\t\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t\t\t}\n\t\t\t\t\tif ((!empty($objp->length) || !empty($objp->width) || !empty($objp->height)) && $objp->length_units !== null) {\n\t\t\t\t\t\t$unitToShow = $objp->length.' x '.$objp->width.' x '.$objp->height.' '.measuringUnitString(0, 'size', $objp->length_units);\n\t\t\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t\t\t}\n\t\t\t\t\tif (!empty($objp->surface) && $objp->surface_units !== null) {\n\t\t\t\t\t\t$unitToShow = showDimensionInBestUnit($objp->surface, $objp->surface_units, 'surface', $langs);\n\t\t\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t\t\t}\n\t\t\t\t\tif (!empty($objp->volume) && $objp->volume_units !== null) {\n\t\t\t\t\t\t$unitToShow = showDimensionInBestUnit($objp->volume, $objp->volume_units, 'volume', $langs);\n\t\t\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t\t\t}\n\t\t\t\t\tif ($outdurationvalue && $outdurationunit) {\n\t\t\t\t\t\t$da = array(\n\t\t\t\t\t\t\t'h' => $langs->trans('Hour'),\n\t\t\t\t\t\t\t'd' => $langs->trans('Day'),\n\t\t\t\t\t\t\t'w' => $langs->trans('Week'),\n\t\t\t\t\t\t\t'm' => $langs->trans('Month'),\n\t\t\t\t\t\t\t'y' => $langs->trans('Year')\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (isset($da[$outdurationunit])) {\n\t\t\t\t\t\t\t$outvalUnits .= ' - '.$outdurationvalue.' '.$langs->transnoentities($da[$outdurationunit].($outdurationvalue > 1 ? 's' : ''));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$objRef = $objp->ref;\n\t\t\t\tif ($filterkey && $filterkey != '') {\n\t\t\t\t\t$objRef = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $objRef, 1);\n\t\t\t\t}\n\t\t\t\t$objRefFourn = $objp->ref_fourn;\n\t\t\t\tif ($filterkey && $filterkey != '') {\n\t\t\t\t\t$objRefFourn = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $objRefFourn, 1);\n\t\t\t\t}\n\t\t\t\t$label = $objp->label;\n\t\t\t\tif ($filterkey && $filterkey != '') {\n\t\t\t\t\t$label = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $label, 1);\n\t\t\t\t}\n\n\t\t\t\t$optlabel = $objp->ref;\n\t\t\t\tif (!empty($objp->idprodfournprice) && ($objp->ref != $objp->ref_fourn)) {\n\t\t\t\t\t$optlabel .= ' <span class=\"opacitymedium\">('.$objp->ref_fourn.')</span>';\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->barcode->enabled) && !empty($objp->barcode)) {\n\t\t\t\t\t$optlabel .= ' ('.$outbarcode.')';\n\t\t\t\t}\n\t\t\t\t$optlabel .= ' - '.dol_trunc($label, $maxlengtharticle);\n\n\t\t\t\t$outvallabel = $objRef;\n\t\t\t\tif (!empty($objp->idprodfournprice) && ($objp->ref != $objp->ref_fourn)) {\n\t\t\t\t\t$outvallabel .= ' ('.$objRefFourn.')';\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->barcode->enabled) && !empty($objp->barcode)) {\n\t\t\t\t\t$outvallabel .= ' ('.$outbarcode.')';\n\t\t\t\t}\n\t\t\t\t$outvallabel .= ' - '.dol_trunc($label, $maxlengtharticle);\n\n\t\t\t\t// Units\n\t\t\t\t$optlabel .= $outvalUnits;\n\t\t\t\t$outvallabel .= $outvalUnits;\n\n\t\t\t\tif (!empty($objp->idprodfournprice)) {\n\t\t\t\t\t$outqty = $objp->quantity;\n\t\t\t\t\t$outdiscount = $objp->remise_percent;\n\t\t\t\t\tif (!empty($conf->dynamicprices->enabled) && !empty($objp->fk_supplier_price_expression)) {\n\t\t\t\t\t\t$prod_supplier = new ProductFournisseur($this->db);\n\t\t\t\t\t\t$prod_supplier->product_fourn_price_id = $objp->idprodfournprice;\n\t\t\t\t\t\t$prod_supplier->id = $objp->fk_product;\n\t\t\t\t\t\t$prod_supplier->fourn_qty = $objp->quantity;\n\t\t\t\t\t\t$prod_supplier->fourn_tva_tx = $objp->tva_tx;\n\t\t\t\t\t\t$prod_supplier->fk_supplier_price_expression = $objp->fk_supplier_price_expression;\n\t\t\t\t\t\t$priceparser = new PriceParser($this->db);\n\t\t\t\t\t\t$price_result = $priceparser->parseProductSupplier($prod_supplier);\n\t\t\t\t\t\tif ($price_result >= 0) {\n\t\t\t\t\t\t\t$objp->fprice = $price_result;\n\t\t\t\t\t\t\tif ($objp->quantity >= 1) {\n\t\t\t\t\t\t\t\t$objp->unitprice = $objp->fprice / $objp->quantity; // Replace dynamically unitprice\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->quantity == 1) {\n\t\t\t\t\t\t$optlabel .= ' - '.price($objp->fprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 1, $langs, 0, 0, -1, $conf->currency).\"/\";\n\t\t\t\t\t\t$outvallabel .= ' - '.price($objp->fprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 0, $langs, 0, 0, -1, $conf->currency).\"/\";\n\t\t\t\t\t\t$optlabel .= $langs->trans(\"Unit\"); // Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t\t$outvallabel .= $langs->transnoentities(\"Unit\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$optlabel .= ' - '.price($objp->fprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 1, $langs, 0, 0, -1, $conf->currency).\"/\".$objp->quantity;\n\t\t\t\t\t\t$outvallabel .= ' - '.price($objp->fprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 0, $langs, 0, 0, -1, $conf->currency).\"/\".$objp->quantity;\n\t\t\t\t\t\t$optlabel .= ' '.$langs->trans(\"Units\"); // Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t\t$outvallabel .= ' '.$langs->transnoentities(\"Units\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($objp->quantity > 1) {\n\t\t\t\t\t\t$optlabel .= \" (\".price($objp->unitprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 1, $langs, 0, 0, -1, $conf->currency).\"/\".$langs->trans(\"Unit\").\")\"; // Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t\t$outvallabel .= \" (\".price($objp->unitprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 0, $langs, 0, 0, -1, $conf->currency).\"/\".$langs->transnoentities(\"Unit\").\")\"; // Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->remise_percent >= 1) {\n\t\t\t\t\t\t$optlabel .= \" - \".$langs->trans(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t\t\t\t\t$outvallabel .= \" - \".$langs->transnoentities(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->duration) {\n\t\t\t\t\t\t$optlabel .= \" - \".$objp->duration;\n\t\t\t\t\t\t$outvallabel .= \" - \".$objp->duration;\n\t\t\t\t\t}\n\t\t\t\t\tif (!$socid) {\n\t\t\t\t\t\t$optlabel .= \" - \".dol_trunc($objp->name, 8);\n\t\t\t\t\t\t$outvallabel .= \" - \".dol_trunc($objp->name, 8);\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->supplier_reputation) {\n\t\t\t\t\t\t//TODO dictionary\n\t\t\t\t\t\t$reputations = array(''=>$langs->trans('Standard'), 'FAVORITE'=>$langs->trans('Favorite'), 'NOTTHGOOD'=>$langs->trans('NotTheGoodQualitySupplier'), 'DONOTORDER'=>$langs->trans('DoNotOrderThisProductToThisSupplier'));\n\n\t\t\t\t\t\t$optlabel .= \" - \".$reputations[$objp->supplier_reputation];\n\t\t\t\t\t\t$outvallabel .= \" - \".$reputations[$objp->supplier_reputation];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (empty($alsoproductwithnosupplierprice)) {     // No supplier price defined for couple product/supplier\n\t\t\t\t\t\t$optlabel .= \" - <span class='opacitymedium'>\".$langs->trans(\"NoPriceDefinedForThisSupplier\").'</span>';\n\t\t\t\t\t\t$outvallabel .= ' - '.$langs->transnoentities(\"NoPriceDefinedForThisSupplier\");\n\t\t\t\t\t} else // No supplier price defined for product, even on other suppliers\n\t\t\t\t\t{\n\t\t\t\t\t\t$optlabel .= \" - <span class='opacitymedium'>\".$langs->trans(\"NoPriceDefinedForThisSupplier\").'</span>';\n\t\t\t\t\t\t$outvallabel .= ' - '.$langs->transnoentities(\"NoPriceDefinedForThisSupplier\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!empty($conf->stock->enabled) && $showstockinlist && isset($objp->stock) && ($objp->fk_product_type == Product::TYPE_PRODUCT || !empty($conf->global->STOCK_SUPPORTS_SERVICES))) {\n\t\t\t\t\t$novirtualstock = ($showstockinlist == 2);\n\n\t\t\t\t\tif (!empty($user->rights->stock->lire)) {\n\t\t\t\t\t\t$outvallabel .= ' - '.$langs->trans(\"Stock\").': '.price(price2num($objp->stock, 'MS'));\n\n\t\t\t\t\t\tif ($objp->stock > 0) {\n\t\t\t\t\t\t\t$optlabel .= ' - <span class=\"product_line_stock_ok\">';\n\t\t\t\t\t\t} elseif ($objp->stock <= 0) {\n\t\t\t\t\t\t\t$optlabel .= ' - <span class=\"product_line_stock_too_low\">';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$optlabel .= $langs->transnoentities(\"Stock\").':'.price(price2num($objp->stock, 'MS'));\n\t\t\t\t\t\t$optlabel .= '</span>';\n\t\t\t\t\t\tif (empty($novirtualstock) && !empty($conf->global->STOCK_SHOW_VIRTUAL_STOCK_IN_PRODUCTS_COMBO)) {  // Warning, this option may slow down combo list generation\n\t\t\t\t\t\t\t$langs->load(\"stocks\");\n\n\t\t\t\t\t\t\t$tmpproduct = new Product($this->db);\n\t\t\t\t\t\t\t$tmpproduct->fetch($objp->rowid, '', '', '', 1, 1, 1); // Load product without lang and prices arrays (we just need to make ->virtual_stock() after)\n\t\t\t\t\t\t\t$tmpproduct->load_virtual_stock();\n\t\t\t\t\t\t\t$virtualstock = $tmpproduct->stock_theorique;\n\n\t\t\t\t\t\t\t$outvallabel .= ' - '.$langs->trans(\"VirtualStock\").':'.$virtualstock;\n\n\t\t\t\t\t\t\t$optlabel .= ' - '.$langs->transnoentities(\"VirtualStock\").':';\n\t\t\t\t\t\t\tif ($virtualstock > 0) {\n\t\t\t\t\t\t\t\t$optlabel .= '<span class=\"product_line_stock_ok\">';\n\t\t\t\t\t\t\t} elseif ($virtualstock <= 0) {\n\t\t\t\t\t\t\t\t$optlabel .= '<span class=\"product_line_stock_too_low\">';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$optlabel .= $virtualstock;\n\t\t\t\t\t\t\t$optlabel .= '</span>';\n\n\t\t\t\t\t\t\tunset($tmpproduct);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$opt = '<option value=\"'.$outkey.'\"';\n\t\t\t\tif ($selected && $selected == $objp->idprodfournprice) {\n\t\t\t\t\t$opt .= ' selected';\n\t\t\t\t}\n\t\t\t\tif (empty($objp->idprodfournprice) && empty($alsoproductwithnosupplierprice)) {\n\t\t\t\t\t$opt .= ' disabled';\n\t\t\t\t}\n\t\t\t\tif (!empty($objp->idprodfournprice) && $objp->idprodfournprice > 0) {\n\t\t\t\t\t$opt .= ' data-product-id=\"'.$objp->rowid.'\" data-price-id=\"'.$objp->idprodfournprice.'\" data-qty=\"'.$objp->quantity.'\" data-up=\"'.$objp->unitprice.'\" data-discount=\"'.$outdiscount.'\"';\n\t\t\t\t}\n\t\t\t\t$opt .= ' data-description=\"'.dol_escape_htmltag($objp->description, 0, 1).'\"';\n\t\t\t\t$opt .= ' data-html=\"'.dol_escape_htmltag($optlabel).'\"';\n\t\t\t\t$opt .= '>';\n\n\t\t\t\t$opt .= $optlabel;\n\t\t\t\t$outval .= $outvallabel;\n\n\t\t\t\t$opt .= \"</option>\\n\";\n\n\t\t\t\t// Add new entry\n\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value. Example: 'type' = product or service, 'price_ht' = unit price without tax\n\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t$out .= $opt;\n\t\t\t\tarray_push(\n\t\t\t\t\t$outarray,\n\t\t\t\t\tarray('key'=>$outkey,\n\t\t\t\t\t\t'value'=>$outref,\n\t\t\t\t\t\t'label'=>$outval,\n\t\t\t\t\t\t'qty'=>$outqty,\n\t\t\t\t\t\t'price_qty_ht'=>price2num($objp->fprice, 'MU'),\t// Keep higher resolution for price for the min qty\n\t\t\t\t\t\t'price_unit_ht'=>price2num($objp->unitprice, 'MU'),\t// This is used to fill the Unit Price\n\t\t\t\t\t\t'price_ht'=>price2num($objp->unitprice, 'MU'),\t\t// This is used to fill the Unit Price (for compatibility)\n\t\t\t\t\t\t'tva_tx'=>$objp->tva_tx,\n\t\t\t\t\t\t'default_vat_code'=>$objp->default_vat_code,\n\t\t\t\t\t\t'discount'=>$outdiscount,\n\t\t\t\t\t\t'type'=>$outtype,\n\t\t\t\t\t\t'duration_value'=>$outdurationvalue,\n\t\t\t\t\t\t'duration_unit'=>$outdurationunit,\n\t\t\t\t\t\t'disabled'=>(empty($objp->idprodfournprice) ? true : false),\n\t\t\t\t\t\t'description'=>$objp->description\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\t// Exemple of var_dump $outarray\n\t\t\t\t// array(1) {[0]=>array(6) {[key\"]=>string(1) \"2\" [\"value\"]=>string(3) \"ppp\"\n\t\t\t\t//           [\"label\"]=>string(76) \"ppp (<strong>f</strong>ff2) - ppp - 20,00 Euros/1unit\u00e9 (20,00 Euros/unit\u00e9)\"\n\t\t\t\t//      \t [\"qty\"]=>string(1) \"1\" [\"discount\"]=>string(1) \"0\" [\"disabled\"]=>bool(false)\n\t\t\t\t//}\n\t\t\t\t//var_dump($outval); var_dump(utf8_check($outval)); var_dump(json_encode($outval));\n\t\t\t\t//$outval=array('label'=>'ppp (<strong>f</strong>ff2) - ppp - 20,00 Euros/ Unit\u00e9 (20,00 Euros/unit\u00e9)');\n\t\t\t\t//var_dump($outval); var_dump(utf8_check($outval)); var_dump(json_encode($outval));\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\t$out .= '</select>';\n\n\t\t\t$this->db->free($result);\n\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t$out .= ajax_combobox($htmlname);\n\n\t\t\tif (empty($outputmode)) {\n\t\t\t\treturn $out;\n\t\t\t}\n\t\t\treturn $outarray;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn list of suppliers prices for a product\n\t *\n\t *  @param\t    int\t\t$productid       \tId of product\n\t *  @param      string\t$htmlname        \tName of HTML field\n\t *  @param      int\t\t$selected_supplier  Pre-selected supplier if more than 1 result\n\t *  @return\t    string\n\t */\n\tpublic function select_product_fourn_price($productid, $htmlname = 'productfournpriceid', $selected_supplier = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\n\t\t$langs->load('stocks');\n\n\t\t$sql = \"SELECT p.rowid, p.ref, p.label, p.price, p.duration, pfp.fk_soc,\";\n\t\t$sql .= \" pfp.ref_fourn, pfp.rowid as idprodfournprice, pfp.price as fprice, pfp.remise_percent, pfp.quantity, pfp.unitprice,\";\n\t\t$sql .= \" pfp.fk_supplier_price_expression, pfp.fk_product, pfp.tva_tx, s.nom as name\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"product as p\";\n\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"product_fournisseur_price as pfp ON p.rowid = pfp.fk_product\";\n\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"societe as s ON pfp.fk_soc = s.rowid\";\n\t\t$sql .= \" WHERE pfp.entity IN (\".getEntity('productsupplierprice').\")\";\n\t\t$sql .= \" AND p.tobuy = 1\";\n\t\t$sql .= \" AND s.fournisseur = 1\";\n\t\t$sql .= \" AND p.rowid = \".((int) $productid);\n\t\t$sql .= \" ORDER BY s.nom, pfp.ref_fourn DESC\";\n\n\t\tdol_syslog(get_class($this).\"::select_product_fourn_price\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\n\t\tif ($result) {\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t$form = '<select class=\"flat\" id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\n\t\t\tif (!$num) {\n\t\t\t\t$form .= '<option value=\"0\">-- '.$langs->trans(\"NoSupplierPriceDefinedForThisProduct\").' --</option>';\n\t\t\t} else {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/dynamic_price/class/price_parser.class.php';\n\t\t\t\t$form .= '<option value=\"0\">&nbsp;</option>';\n\n\t\t\t\t$i = 0;\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\t\t$opt = '<option value=\"'.$objp->idprodfournprice.'\"';\n\t\t\t\t\t//if there is only one supplier, preselect it\n\t\t\t\t\tif ($num == 1 || ($selected_supplier > 0 && $objp->fk_soc == $selected_supplier)) {\n\t\t\t\t\t\t$opt .= ' selected';\n\t\t\t\t\t}\n\t\t\t\t\t$opt .= '>'.$objp->name.' - '.$objp->ref_fourn.' - ';\n\n\t\t\t\t\tif (!empty($conf->dynamicprices->enabled) && !empty($objp->fk_supplier_price_expression)) {\n\t\t\t\t\t\t$prod_supplier = new ProductFournisseur($this->db);\n\t\t\t\t\t\t$prod_supplier->product_fourn_price_id = $objp->idprodfournprice;\n\t\t\t\t\t\t$prod_supplier->id = $productid;\n\t\t\t\t\t\t$prod_supplier->fourn_qty = $objp->quantity;\n\t\t\t\t\t\t$prod_supplier->fourn_tva_tx = $objp->tva_tx;\n\t\t\t\t\t\t$prod_supplier->fk_supplier_price_expression = $objp->fk_supplier_price_expression;\n\t\t\t\t\t\t$priceparser = new PriceParser($this->db);\n\t\t\t\t\t\t$price_result = $priceparser->parseProductSupplier($prod_supplier);\n\t\t\t\t\t\tif ($price_result >= 0) {\n\t\t\t\t\t\t\t$objp->fprice = $price_result;\n\t\t\t\t\t\t\tif ($objp->quantity >= 1) {\n\t\t\t\t\t\t\t\t$objp->unitprice = $objp->fprice / $objp->quantity;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->quantity == 1) {\n\t\t\t\t\t\t$opt .= price($objp->fprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 1, $langs, 0, 0, -1, $conf->currency).\"/\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$opt .= $objp->quantity.' ';\n\n\t\t\t\t\tif ($objp->quantity == 1) {\n\t\t\t\t\t\t$opt .= $langs->trans(\"Unit\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$opt .= $langs->trans(\"Units\");\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->quantity > 1) {\n\t\t\t\t\t\t$opt .= \" - \";\n\t\t\t\t\t\t$opt .= price($objp->unitprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 1, $langs, 0, 0, -1, $conf->currency).\"/\".$langs->trans(\"Unit\");\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->duration) {\n\t\t\t\t\t\t$opt .= \" - \".$objp->duration;\n\t\t\t\t\t}\n\t\t\t\t\t$opt .= \"</option>\\n\";\n\n\t\t\t\t\t$form .= $opt;\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$form .= '</select>';\n\t\t\t$this->db->free($result);\n\t\t\treturn $form;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Return list of delivery address\n\t *\n\t *    @param    string\t$selected          \tId contact pre-selectionn\n\t *    @param    int\t\t$socid\t\t\t\tId of company\n\t *    @param    string\t$htmlname          \tName of HTML field\n\t *    @param    int\t\t$showempty         \tAdd an empty field\n\t *    @return\tinteger|null\n\t */\n\tpublic function select_address($selected, $socid, $htmlname = 'address_id', $showempty = 0)\n\t{\n\t\t// phpcs:enable\n\t\t// looking for users\n\t\t$sql = \"SELECT a.rowid, a.label\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"societe_address as a\";\n\t\t$sql .= \" WHERE a.fk_soc = \".((int) $socid);\n\t\t$sql .= \" ORDER BY a.label ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_address\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\tprint '<select class=\"flat\" id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t\tif ($showempty) {\n\t\t\t\tprint '<option value=\"0\">&nbsp;</option>';\n\t\t\t}\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t\tif ($selected && $selected == $obj->rowid) {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>'.$obj->label.'</option>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">'.$obj->label.'</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '</select>';\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Load into cache list of payment terms\n\t *\n\t *      @return     int             Nb of lines loaded, <0 if KO\n\t */\n\tpublic function load_cache_conditions_paiements()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_conditions_paiements);\n\t\tif ($num > 0) {\n\t\t\treturn 0; // Cache already loaded\n\t\t}\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$sql = \"SELECT rowid, code, libelle as label\";\n\t\t$sql .= \" FROM \".$this->db->prefix().'c_payment_term';\n\t\t$sql .= \" WHERE entity IN (\".getEntity('c_payment_term').\")\";\n\t\t$sql .= \" AND active > 0\";\n\t\t$sql .= \" ORDER BY sortorder\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label = ($langs->trans(\"PaymentConditionShort\".$obj->code) != (\"PaymentConditionShort\".$obj->code) ? $langs->trans(\"PaymentConditionShort\".$obj->code) : ($obj->label != '-' ? $obj->label : ''));\n\t\t\t\t$this->cache_conditions_paiements[$obj->rowid]['code'] = $obj->code;\n\t\t\t\t$this->cache_conditions_paiements[$obj->rowid]['label'] = $label;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t//$this->cache_conditions_paiements=dol_sort_array($this->cache_conditions_paiements, 'label', 'asc', 0, 0, 1);\t\t// We use the field sortorder of table\n\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Load int a cache property th elist of possible delivery delays.\n\t *\n\t *      @return     int             Nb of lines loaded, <0 if KO\n\t */\n\tpublic function load_cache_availability()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_availability);\t// TODO Use $conf->cache['availability'] instead of $this->cache_availability\n\t\tif ($num > 0) {\n\t\t\treturn 0; // Cache already loaded\n\t\t}\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$langs->load('propal');\n\n\t\t$sql = \"SELECT rowid, code, label, position\";\n\t\t$sql .= \" FROM \".$this->db->prefix().'c_availability';\n\t\t$sql .= \" WHERE active > 0\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label = ($langs->trans(\"AvailabilityType\".$obj->code) != (\"AvailabilityType\".$obj->code) ? $langs->trans(\"AvailabilityType\".$obj->code) : ($obj->label != '-' ? $obj->label : ''));\n\t\t\t\t$this->cache_availability[$obj->rowid]['code'] = $obj->code;\n\t\t\t\t$this->cache_availability[$obj->rowid]['label'] = $label;\n\t\t\t\t$this->cache_availability[$obj->rowid]['position'] = $obj->position;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$this->cache_availability = dol_sort_array($this->cache_availability, 'position', 'asc', 0, 0, 1);\n\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *      Retourne la liste des types de delais de livraison possibles\n\t *\n\t *      @param\tint\t\t$selected       Id du type de delais pre-selectionne\n\t *      @param  string\t$htmlname       Nom de la zone select\n\t *      @param  string\t$filtertype     To add a filter\n\t *\t\t@param\tint\t\t$addempty\t\tAdd empty entry\n\t * \t\t@param\tstring\t$morecss\t\tMore CSS\n\t *\t\t@return\tvoid\n\t */\n\tpublic function selectAvailabilityDelay($selected = '', $htmlname = 'availid', $filtertype = '', $addempty = 0, $morecss = '')\n\t{\n\t\tglobal $langs, $user;\n\n\t\t$this->load_cache_availability();\n\n\t\tdol_syslog(__METHOD__.\" selected=\".$selected.\", htmlname=\".$htmlname, LOG_DEBUG);\n\n\t\tprint '<select id=\"'.$htmlname.'\" class=\"flat'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\">';\n\t\tif ($addempty) {\n\t\t\tprint '<option value=\"0\">&nbsp;</option>';\n\t\t}\n\t\tforeach ($this->cache_availability as $id => $arrayavailability) {\n\t\t\tif ($selected == $id) {\n\t\t\t\tprint '<option value=\"'.$id.'\" selected>';\n\t\t\t} else {\n\t\t\t\tprint '<option value=\"'.$id.'\">';\n\t\t\t}\n\t\t\tprint dol_escape_htmltag($arrayavailability['label']);\n\t\t\tprint '</option>';\n\t\t}\n\t\tprint '</select>';\n\t\tif ($user->admin) {\n\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t\tprint ajax_combobox($htmlname);\n\t}\n\n\t/**\n\t *      Load into cache cache_demand_reason, array of input reasons\n\t *\n\t *      @return     int             Nb of lines loaded, <0 if KO\n\t */\n\tpublic function loadCacheInputReason()\n\t{\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_demand_reason);\t// TODO Use $conf->cache['input_reason'] instead of $this->cache_demand_reason\n\t\tif ($num > 0) {\n\t\t\treturn 0; // Cache already loaded\n\t\t}\n\n\t\t$sql = \"SELECT rowid, code, label\";\n\t\t$sql .= \" FROM \".$this->db->prefix().'c_input_reason';\n\t\t$sql .= \" WHERE active > 0\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\t$tmparray = array();\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label = ($obj->label != '-' ? $obj->label : '');\n\t\t\t\tif ($langs->trans(\"DemandReasonType\".$obj->code) != (\"DemandReasonType\".$obj->code)) {\n\t\t\t\t\t$label = $langs->trans(\"DemandReasonType\".$obj->code); // So translation key DemandReasonTypeSRC_XXX will work\n\t\t\t\t}\n\t\t\t\tif ($langs->trans($obj->code) != $obj->code) {\n\t\t\t\t\t$label = $langs->trans($obj->code); // So translation key SRC_XXX will work\n\t\t\t\t}\n\n\t\t\t\t$tmparray[$obj->rowid]['id']   = $obj->rowid;\n\t\t\t\t$tmparray[$obj->rowid]['code'] = $obj->code;\n\t\t\t\t$tmparray[$obj->rowid]['label'] = $label;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$this->cache_demand_reason = dol_sort_array($tmparray, 'label', 'asc', 0, 0, 1);\n\n\t\t\tunset($tmparray);\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn list of input reason (events that triggered an object creation, like after sending an emailing, making an advert, ...)\n\t *  List found into table c_input_reason loaded by loadCacheInputReason\n\t *\n\t *  @param\tint\t\t$selected        Id or code of type origin to select by default\n\t *  @param  string\t$htmlname        Nom de la zone select\n\t *  @param  string\t$exclude         To exclude a code value (Example: SRC_PROP)\n\t *\t@param\tint\t\t$addempty\t\t Add an empty entry\n\t *  @param  string\t$morecss\t\t Add more css to the HTML select component\n\t *  @param\tint\t\t$notooltip\t\t Do not show the tooltip for admin\n\t *\t@return\tvoid\n\t */\n\tpublic function selectInputReason($selected = '', $htmlname = 'demandreasonid', $exclude = '', $addempty = 0, $morecss = '', $notooltip = 0)\n\t{\n\t\tglobal $langs, $user;\n\n\t\t$this->loadCacheInputReason();\n\n\t\tprint '<select class=\"flat'.($morecss ? ' '.$morecss : '').'\" id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\tif ($addempty) {\n\t\t\tprint '<option value=\"0\"'.(empty($selected) ? ' selected' : '').'>&nbsp;</option>';\n\t\t}\n\t\tforeach ($this->cache_demand_reason as $id => $arraydemandreason) {\n\t\t\tif ($arraydemandreason['code'] == $exclude) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ($selected && ($selected == $arraydemandreason['id'] || $selected == $arraydemandreason['code'])) {\n\t\t\t\tprint '<option value=\"'.$arraydemandreason['id'].'\" selected>';\n\t\t\t} else {\n\t\t\t\tprint '<option value=\"'.$arraydemandreason['id'].'\">';\n\t\t\t}\n\t\t\t$label = $arraydemandreason['label']; // Translation of label was already done into the ->loadCacheInputReason\n\t\t\tprint $langs->trans($label);\n\t\t\tprint '</option>';\n\t\t}\n\t\tprint '</select>';\n\t\tif ($user->admin && empty($notooltip)) {\n\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t\tprint ajax_combobox('select_'.$htmlname);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Charge dans cache la liste des types de paiements possibles\n\t *\n\t *      @return     int                 Nb of lines loaded, <0 if KO\n\t */\n\tpublic function load_cache_types_paiements()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_types_paiements);\t\t// TODO Use $conf->cache['payment_mode'] instead of $this->cache_types_paiements\n\t\tif ($num > 0) {\n\t\t\treturn $num; // Cache already loaded\n\t\t}\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$this->cache_types_paiements = array();\n\n\t\t$sql = \"SELECT id, code, libelle as label, type, active\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"c_paiement\";\n\t\t$sql .= \" WHERE entity IN (\".getEntity('c_paiement').\")\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label = ($langs->transnoentitiesnoconv(\"PaymentTypeShort\".$obj->code) != (\"PaymentTypeShort\".$obj->code) ? $langs->transnoentitiesnoconv(\"PaymentTypeShort\".$obj->code) : ($obj->label != '-' ? $obj->label : ''));\n\t\t\t\t$this->cache_types_paiements[$obj->id]['id'] = $obj->id;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['code'] = $obj->code;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['label'] = $label;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['type'] = $obj->type;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['active'] = $obj->active;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$this->cache_types_paiements = dol_sort_array($this->cache_types_paiements, 'label', 'asc', 0, 0, 1);\n\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      print list of payment modes.\n\t *      Constant MAIN_DEFAULT_PAYMENT_TERM_ID can used to set default value but scope is all application, probably not what you want.\n\t *      See instead to force the default value by the caller.\n\t *\n\t *      @param\tint\t\t$selected\t\tId of payment term to preselect by default\n\t *      @param\tstring\t$htmlname\t\tNom de la zone select\n\t *      @param\tint\t\t$filtertype\t\tNot used\n\t *\t\t@param\tint\t\t$addempty\t\tAdd an empty entry\n\t * \t\t@param\tint\t\t$noinfoadmin\t0=Add admin info, 1=Disable admin info\n\t * \t\t@param\tstring\t$morecss\t\tAdd more CSS on select tag\n\t *\t\t@return\tvoid\n\t */\n\tpublic function select_conditions_paiements($selected = 0, $htmlname = 'condid', $filtertype = -1, $addempty = 0, $noinfoadmin = 0, $morecss = '')\n\t{\n\t\t// phpcs:enable\n\t\tprint $this->getSelectConditionsPaiements($selected, $htmlname, $filtertype, $addempty, $noinfoadmin, $morecss);\n\t}\n\n\n\t/**\n\t *      Return list of payment modes.\n\t *      Constant MAIN_DEFAULT_PAYMENT_TERM_ID can used to set default value but scope is all application, probably not what you want.\n\t *      See instead to force the default value by the caller.\n\t *\n\t *      @param\tint\t\t$selected\t\tId of payment term to preselect by default\n\t *      @param\tstring\t$htmlname\t\tNom de la zone select\n\t *      @param\tint\t\t$filtertype\t\tNot used\n\t *\t\t@param\tint\t\t$addempty\t\tAdd an empty entry\n\t * \t\t@param\tint\t\t$noinfoadmin\t0=Add admin info, 1=Disable admin info\n\t * \t\t@param\tstring\t$morecss\t\tAdd more CSS on select tag\n\t *\t\t@return\tvoid\n\t */\n\tpublic function getSelectConditionsPaiements($selected = 0, $htmlname = 'condid', $filtertype = -1, $addempty = 0, $noinfoadmin = 0, $morecss = '')\n\t{\n\n\t\tglobal $langs, $user, $conf;\n\t\t$out = '';\n\t\tdol_syslog(__METHOD__.\" selected=\".$selected.\", htmlname=\".$htmlname, LOG_DEBUG);\n\n\t\t$this->load_cache_conditions_paiements();\n\n\t\t// Set default value if not already set by caller\n\t\tif (empty($selected) && !empty($conf->global->MAIN_DEFAULT_PAYMENT_TERM_ID)) {\n\t\t\t$selected = $conf->global->MAIN_DEFAULT_PAYMENT_TERM_ID;\n\t\t}\n\n\t\t$out.=  '<select id=\"'.$htmlname.'\" class=\"flat selectpaymentterms'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\">';\n\t\tif ($addempty) {\n\t\t\t$out.=  '<option value=\"0\">&nbsp;</option>';\n\t\t}\n\t\tforeach ($this->cache_conditions_paiements as $id => $arrayconditions) {\n\t\t\tif ($selected == $id) {\n\t\t\t\t$out.=  '<option value=\"'.$id.'\" selected>';\n\t\t\t} else {\n\t\t\t\t$out.=  '<option value=\"'.$id.'\">';\n\t\t\t}\n\t\t\t$out.=  $arrayconditions['label'];\n\t\t\t$out.=  '</option>';\n\t\t}\n\t\t$out.=  '</select>';\n\t\tif ($user->admin && empty($noinfoadmin)) {\n\t\t\t$out.=  info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t\t$out.=  ajax_combobox($htmlname);\n\t\treturn $out;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Return list of payment methods\n\t *      Constant MAIN_DEFAULT_PAYMENT_TYPE_ID can used to set default value but scope is all application, probably not what you want.\n\t *\n\t *      @param\tstring\t$selected       Id or code or preselected payment mode\n\t *      @param  string\t$htmlname       Name of select field\n\t *      @param  string\t$filtertype     To filter on field type in llx_c_paiement ('CRDT' or 'DBIT' or array('code'=>xx,'label'=>zz))\n\t *      @param  int\t\t$format         0=id+label, 1=code+code, 2=code+label, 3=id+code\n\t *      @param  int\t\t$empty\t\t\t1=can be empty, 0 otherwise\n\t * \t\t@param\tint\t\t$noadmininfo\t0=Add admin info, 1=Disable admin info\n\t *      @param  int\t\t$maxlength      Max length of label\n\t *      @param  int     $active         Active or not, -1 = all\n\t *      @param  string  $morecss        Add more CSS on select tag\n\t *      @param\tint\t\t$nooutput\t\t1=Return string, do not send to output\n\t * \t\t@return\tvoid\n\t */\n\tpublic function select_types_paiements($selected = '', $htmlname = 'paiementtype', $filtertype = '', $format = 0, $empty = 1, $noadmininfo = 0, $maxlength = 0, $active = 1, $morecss = '', $nooutput = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $user, $conf;\n\n\t\t$out = '';\n\n\t\tdol_syslog(__METHOD__.\" \".$selected.\", \".$htmlname.\", \".$filtertype.\", \".$format, LOG_DEBUG);\n\n\t\t$filterarray = array();\n\t\tif ($filtertype == 'CRDT') {\n\t\t\t$filterarray = array(0, 2, 3);\n\t\t} elseif ($filtertype == 'DBIT') {\n\t\t\t$filterarray = array(1, 2, 3);\n\t\t} elseif ($filtertype != '' && $filtertype != '-1') {\n\t\t\t$filterarray = explode(',', $filtertype);\n\t\t}\n\n\t\t$this->load_cache_types_paiements();\n\n\t\t// Set default value if not already set by caller\n\t\tif (empty($selected) && !empty($conf->global->MAIN_DEFAULT_PAYMENT_TYPE_ID)) {\n\t\t\t$selected = $conf->global->MAIN_DEFAULT_PAYMENT_TYPE_ID;\n\t\t}\n\n\t\t$out .= '<select id=\"select'.$htmlname.'\" class=\"flat selectpaymenttypes'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\">';\n\t\tif ($empty) {\n\t\t\t$out .= '<option value=\"\">&nbsp;</option>';\n\t\t}\n\t\tforeach ($this->cache_types_paiements as $id => $arraytypes) {\n\t\t\t// If not good status\n\t\t\tif ($active >= 0 && $arraytypes['active'] != $active) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// On passe si on a demande de filtrer sur des modes de paiments particuliers\n\t\t\tif (count($filterarray) && !in_array($arraytypes['type'], $filterarray)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// We discard empty line if showempty is on because an empty line has already been output.\n\t\t\tif ($empty && empty($arraytypes['code'])) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ($format == 0) {\n\t\t\t\t$out .= '<option value=\"'.$id.'\"';\n\t\t\t} elseif ($format == 1) {\n\t\t\t\t$out .= '<option value=\"'.$arraytypes['code'].'\"';\n\t\t\t} elseif ($format == 2) {\n\t\t\t\t$out .= '<option value=\"'.$arraytypes['code'].'\"';\n\t\t\t} elseif ($format == 3) {\n\t\t\t\t$out .= '<option value=\"'.$id.'\"';\n\t\t\t}\n\t\t\t// Print attribute selected or not\n\t\t\tif ($format == 1 || $format == 2) {\n\t\t\t\tif ($selected == $arraytypes['code']) {\n\t\t\t\t\t$out .= ' selected';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($selected == $id) {\n\t\t\t\t\t$out .= ' selected';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '>';\n\t\t\tif ($format == 0) {\n\t\t\t\t$value = ($maxlength ?dol_trunc($arraytypes['label'], $maxlength) : $arraytypes['label']);\n\t\t\t} elseif ($format == 1) {\n\t\t\t\t$value = $arraytypes['code'];\n\t\t\t} elseif ($format == 2) {\n\t\t\t\t$value = ($maxlength ?dol_trunc($arraytypes['label'], $maxlength) : $arraytypes['label']);\n\t\t\t} elseif ($format == 3) {\n\t\t\t\t$value = $arraytypes['code'];\n\t\t\t}\n\t\t\t$out .= $value ? $value : '&nbsp;';\n\t\t\t$out .= '</option>';\n\t\t}\n\t\t$out .= '</select>';\n\t\tif ($user->admin && !$noadmininfo) {\n\t\t\t$out .= info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t\t$out .= ajax_combobox('select'.$htmlname);\n\n\t\tif (empty($nooutput)) {\n\t\t\tprint $out;\n\t\t} else {\n\t\t\treturn $out;\n\t\t}\n\t}\n\n\n\t/**\n\t *  Selection HT or TTC\n\t *\n\t *  @param\tstring\t$selected       Id pre-selectionne\n\t *  @param  string\t$htmlname       Nom de la zone select\n\t *  @param\tstring\t$addjscombo\t\tAdd js combo\n\t * \t@return\tstring\t\t\t\t\tCode of HTML select to chose tax or not\n\t */\n\tpublic function selectPriceBaseType($selected = '', $htmlname = 'price_base_type', $addjscombo = 0)\n\t{\n\t\tglobal $langs;\n\n\t\t$return = '<select class=\"flat maxwidth100\" id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t$options = array(\n\t\t\t'HT'=>$langs->trans(\"HT\"),\n\t\t\t'TTC'=>$langs->trans(\"TTC\")\n\t\t);\n\t\tforeach ($options as $id => $value) {\n\t\t\tif ($selected == $id) {\n\t\t\t\t$return .= '<option value=\"'.$id.'\" selected>'.$value;\n\t\t\t} else {\n\t\t\t\t$return .= '<option value=\"'.$id.'\">'.$value;\n\t\t\t}\n\t\t\t$return .= '</option>';\n\t\t}\n\t\t$return .= '</select>';\n\t\tif ($addjscombo) {\n\t\t\t$return .= ajax_combobox('select_'.$htmlname);\n\t\t}\n\n\t\treturn $return;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Load in cache list of transport mode\n\t *\n\t *      @return     int                 Nb of lines loaded, <0 if KO\n\t */\n\tpublic function load_cache_transport_mode()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_transport_mode);\t\t// TODO Use $conf->cache['payment_mode'] instead of $this->cache_transport_mode\n\t\tif ($num > 0) {\n\t\t\treturn $num; // Cache already loaded\n\t\t}\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$this->cache_transport_mode = array();\n\n\t\t$sql = \"SELECT rowid, code, label, active\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"c_transport_mode\";\n\t\t$sql .= \" WHERE entity IN (\".getEntity('c_transport_mode').\")\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// If traduction exist, we use it else we take the default label\n\t\t\t\t$label = ($langs->transnoentitiesnoconv(\"PaymentTypeShort\".$obj->code) != (\"PaymentTypeShort\".$obj->code) ? $langs->transnoentitiesnoconv(\"PaymentTypeShort\".$obj->code) : ($obj->label != '-' ? $obj->label : ''));\n\t\t\t\t$this->cache_transport_mode[$obj->rowid]['rowid'] = $obj->rowid;\n\t\t\t\t$this->cache_transport_mode[$obj->rowid]['code'] = $obj->code;\n\t\t\t\t$this->cache_transport_mode[$obj->rowid]['label'] = $label;\n\t\t\t\t$this->cache_transport_mode[$obj->rowid]['active'] = $obj->active;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$this->cache_transport_mode = dol_sort_array($this->cache_transport_mode, 'label', 'asc', 0, 0, 1);\n\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *      Return list of transport mode for intracomm report\n\t *\n\t *      @param\tstring\t$selected       Id of the transport mode pre-selected\n\t *      @param  string\t$htmlname       Name of the select field\n\t *      @param  int\t\t$format         0=id+label, 1=code+code, 2=code+label, 3=id+code\n\t *      @param  int\t\t$empty\t\t\t1=can be empty, 0 else\n\t *      @param\tint\t\t$noadmininfo\t0=Add admin info, 1=Disable admin info\n\t *      @param  int\t\t$maxlength      Max length of label\n\t *      @param  int     $active         Active or not, -1 = all\n\t *      @param  string  $morecss        Add more CSS on select tag\n\t * \t\t@return\tvoid\n\t */\n\tpublic function selectTransportMode($selected = '', $htmlname = 'transportmode', $format = 0, $empty = 1, $noadmininfo = 0, $maxlength = 0, $active = 1, $morecss = '')\n\t{\n\t\tglobal $langs, $user;\n\n\t\tdol_syslog(__METHOD__.\" \".$selected.\", \".$htmlname.\", \".$format, LOG_DEBUG);\n\n\t\t$this->load_cache_transport_mode();\n\n\t\tprint '<select id=\"select'.$htmlname.'\" class=\"flat selectmodetransport'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\">';\n\t\tif ($empty) {\n\t\t\tprint '<option value=\"\">&nbsp;</option>';\n\t\t}\n\t\tforeach ($this->cache_transport_mode as $id => $arraytypes) {\n\t\t\t// If not good status\n\t\t\tif ($active >= 0 && $arraytypes['active'] != $active) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// We discard empty line if showempty is on because an empty line has already been output.\n\t\t\tif ($empty && empty($arraytypes['code'])) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ($format == 0) {\n\t\t\t\tprint '<option value=\"'.$id.'\"';\n\t\t\t} elseif ($format == 1) {\n\t\t\t\tprint '<option value=\"'.$arraytypes['code'].'\"';\n\t\t\t} elseif ($format == 2) {\n\t\t\t\tprint '<option value=\"'.$arraytypes['code'].'\"';\n\t\t\t} elseif ($format == 3) {\n\t\t\t\tprint '<option value=\"'.$id.'\"';\n\t\t\t}\n\t\t\t// If text is selected, we compare with code, else with id\n\t\t\tif (preg_match('/[a-z]/i', $selected) && $selected == $arraytypes['code']) {\n\t\t\t\tprint ' selected';\n\t\t\t} elseif ($selected == $id) {\n\t\t\t\tprint ' selected';\n\t\t\t}\n\t\t\tprint '>';\n\t\t\tif ($format == 0) {\n\t\t\t\t$value = ($maxlength ?dol_trunc($arraytypes['label'], $maxlength) : $arraytypes['label']);\n\t\t\t} elseif ($format == 1) {\n\t\t\t\t$value = $arraytypes['code'];\n\t\t\t} elseif ($format == 2) {\n\t\t\t\t$value = ($maxlength ?dol_trunc($arraytypes['label'], $maxlength) : $arraytypes['label']);\n\t\t\t} elseif ($format == 3) {\n\t\t\t\t$value = $arraytypes['code'];\n\t\t\t}\n\t\t\tprint $value ? $value : '&nbsp;';\n\t\t\tprint '</option>';\n\t\t}\n\t\tprint '</select>';\n\t\tif ($user->admin && !$noadmininfo) {\n\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t}\n\n\t/**\n\t *  Return a HTML select list of shipping mode\n\t *\n\t *  @param\tstring\t$selected           Id shipping mode pre-selected\n\t *  @param  string\t$htmlname           Name of select zone\n\t *  @param  string\t$filtre             To filter list. This parameter must not come from input of users\n\t *  @param  int\t\t$useempty           1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *  @param  string\t$moreattrib         To add more attribute on select\n\t *\t@param\tint\t\t$noinfoadmin\t\t0=Add admin info, 1=Disable admin info\n\t *  @param\tstring\t$morecss\t\t\tMore CSS\n\t * \t@return\tvoid\n\t */\n\tpublic function selectShippingMethod($selected = '', $htmlname = 'shipping_method_id', $filtre = '', $useempty = 0, $moreattrib = '', $noinfoadmin = 0, $morecss = '')\n\t{\n\t\tglobal $langs, $conf, $user;\n\n\t\t$langs->load(\"admin\");\n\t\t$langs->load(\"deliveries\");\n\n\t\t$sql = \"SELECT rowid, code, libelle as label\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"c_shipment_mode\";\n\t\t$sql .= \" WHERE active > 0\";\n\t\tif ($filtre) {\n\t\t\t$sql .= \" AND \".$filtre;\n\t\t}\n\t\t$sql .= \" ORDER BY libelle ASC\";\n\n\t\tdol_syslog(get_class($this).\"::selectShippingMode\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\tprint '<select id=\"select'.$htmlname.'\" class=\"flat selectshippingmethod'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\"'.($moreattrib ? ' '.$moreattrib : '').'>';\n\t\t\t\tif ($useempty == 1 || ($useempty == 2 && $num > 1)) {\n\t\t\t\t\tprint '<option value=\"-1\">&nbsp;</option>';\n\t\t\t\t}\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\t\tif ($selected == $obj->rowid) {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">';\n\t\t\t\t\t}\n\t\t\t\t\tprint ($langs->trans(\"SendingMethod\".strtoupper($obj->code)) != \"SendingMethod\".strtoupper($obj->code)) ? $langs->trans(\"SendingMethod\".strtoupper($obj->code)) : $obj->label;\n\t\t\t\t\tprint '</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\tprint \"</select>\";\n\t\t\t\tif ($user->admin  && empty($noinfoadmin)) {\n\t\t\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t\t\t}\n\n\t\t\t\tprint ajax_combobox('select'.$htmlname);\n\t\t\t} else {\n\t\t\t\tprint $langs->trans(\"NoShippingMethodDefined\");\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *    Display form to select shipping mode\n\t *\n\t *    @param\tstring\t$page        Page\n\t *    @param    int\t\t$selected    Id of shipping mode\n\t *    @param    string\t$htmlname    Name of select html field\n\t *    @param    int\t\t$addempty    1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *    @return\tvoid\n\t */\n\tpublic function formSelectShippingMethod($page, $selected = '', $htmlname = 'shipping_method_id', $addempty = 0)\n\t{\n\t\tglobal $langs;\n\n\t\t$langs->load(\"deliveries\");\n\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setshippingmethod\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$this->selectShippingMethod($selected, $htmlname, '', $addempty);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$code = $langs->getLabelFromKey($this->db, $selected, 'c_shipment_mode', 'rowid', 'code');\n\t\t\t\tprint $langs->trans(\"SendingMethod\".strtoupper($code));\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates HTML last in cycle situation invoices selector\n\t *\n\t * @param     string  $selected   \t\tPreselected ID\n\t * @param     int     $socid      \t\tCompany ID\n\t *\n\t * @return    string                     HTML select\n\t */\n\tpublic function selectSituationInvoices($selected = '', $socid = 0)\n\t{\n\t\tglobal $langs;\n\n\t\t$langs->load('bills');\n\n\t\t$opt = '<option value=\"\" selected></option>';\n\t\t$sql = \"SELECT rowid, ref, situation_cycle_ref, situation_counter, situation_final, fk_soc\";\n\t\t$sql .= ' FROM '.$this->db->prefix().'facture';\n\t\t$sql .= ' WHERE entity IN ('.getEntity('invoice').')';\n\t\t$sql .= ' AND situation_counter >= 1';\n\t\t$sql .= ' AND fk_soc = '.(int) $socid;\n\t\t$sql .= ' AND type <> 2';\n\t\t$sql .= ' ORDER by situation_cycle_ref, situation_counter desc';\n\t\t$resql = $this->db->query($sql);\n\n\t\tif ($resql && $this->db->num_rows($resql) > 0) {\n\t\t\t// Last seen cycle\n\t\t\t$ref = 0;\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t//Same cycle ?\n\t\t\t\tif ($obj->situation_cycle_ref != $ref) {\n\t\t\t\t\t// Just seen this cycle\n\t\t\t\t\t$ref = $obj->situation_cycle_ref;\n\t\t\t\t\t//not final ?\n\t\t\t\t\tif ($obj->situation_final != 1) {\n\t\t\t\t\t\t//Not prov?\n\t\t\t\t\t\tif (substr($obj->ref, 1, 4) != 'PROV') {\n\t\t\t\t\t\t\tif ($selected == $obj->rowid) {\n\t\t\t\t\t\t\t\t$opt .= '<option value=\"'.$obj->rowid.'\" selected>'.$obj->ref.'</option>';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$opt .= '<option value=\"'.$obj->rowid.'\">'.$obj->ref.'</option>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t\tdol_syslog(\"Error sql=\".$sql.\", error=\".$this->error, LOG_ERR);\n\t\t}\n\t\tif ($opt == '<option value =\"\" selected></option>') {\n\t\t\t$opt = '<option value =\"0\" selected>'.$langs->trans('NoSituations').'</option>';\n\t\t}\n\t\treturn $opt;\n\t}\n\n\t/**\n\t *      Creates HTML units selector (code => label)\n\t *\n\t *      @param\tstring\t$selected       Preselected Unit ID\n\t *      @param  string\t$htmlname       Select name\n\t *      @param\tint\t\t$showempty\t\tAdd a nempty line\n\t *      @param  string  $unit_type      Restrict to one given unit type\n\t * \t\t@return\tstring                  HTML select\n\t */\n\tpublic function selectUnits($selected = '', $htmlname = 'units', $showempty = 0, $unit_type = '')\n\t{\n\t\tglobal $langs;\n\n\t\t$langs->load('products');\n\n\t\t$return = '<select class=\"flat\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\n\t\t$sql = \"SELECT rowid, label, code FROM \".$this->db->prefix().\"c_units\";\n\t\t$sql .= ' WHERE active > 0';\n\t\tif (!empty($unit_type)) {\n\t\t\t$sql .= \" AND unit_type = '\".$this->db->escape($unit_type).\"'\";\n\t\t}\n\t\t$sql .= \" ORDER BY sortorder\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql && $this->db->num_rows($resql) > 0) {\n\t\t\tif ($showempty) {\n\t\t\t\t$return .= '<option value=\"none\"></option>';\n\t\t\t}\n\n\t\t\twhile ($res = $this->db->fetch_object($resql)) {\n\t\t\t\t$unitLabel = $res->label;\n\t\t\t\tif (!empty($langs->tab_translate['unit'.$res->code])) {\t// check if Translation is available before\n\t\t\t\t\t$unitLabel = $langs->trans('unit'.$res->code) != $res->label ? $langs->trans('unit'.$res->code) : $res->label;\n\t\t\t\t}\n\n\t\t\t\tif ($selected == $res->rowid) {\n\t\t\t\t\t$return .= '<option value=\"'.$res->rowid.'\" selected>'.$unitLabel.'</option>';\n\t\t\t\t} else {\n\t\t\t\t\t$return .= '<option value=\"'.$res->rowid.'\">'.$unitLabel.'</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$return .= '</select>';\n\t\t}\n\t\treturn $return;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return a HTML select list of bank accounts\n\t *\n\t *  @param\tstring\t$selected           Id account pre-selected\n\t *  @param  string\t$htmlname           Name of select zone\n\t *  @param  int\t\t$status             Status of searched accounts (0=open, 1=closed, 2=both)\n\t *  @param  string\t$filtre             To filter list. This parameter must not come from input of users\n\t *  @param  int\t\t$useempty           1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *  @param  string\t$moreattrib         To add more attribute on select\n\t *  @param\tint\t\t$showcurrency\t\tShow currency in label\n\t *  @param\tstring\t$morecss\t\t\tMore CSS\n\t *  @param\tint\t\t$nooutput\t\t\t1=Return string, do not send to output\n\t * \t@return\tint\t\t\t\t\t\t\t<0 if error, Num of bank account found if OK (0, 1, 2, ...)\n\t */\n\tpublic function select_comptes($selected = '', $htmlname = 'accountid', $status = 0, $filtre = '', $useempty = 0, $moreattrib = '', $showcurrency = 0, $morecss = '', $nooutput = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\n\t\t$langs->load(\"admin\");\n\t\t$num = 0;\n\n\t\t$sql = \"SELECT rowid, label, bank, clos as status, currency_code\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"bank_account\";\n\t\t$sql .= \" WHERE entity IN (\".getEntity('bank_account').\")\";\n\t\tif ($status != 2) {\n\t\t\t$sql .= \" AND clos = \".(int) $status;\n\t\t}\n\t\tif ($filtre) {\n\t\t\t$sql .= \" AND \".$filtre;\n\t\t}\n\t\t$sql .= \" ORDER BY label\";\n\n\t\tdol_syslog(get_class($this).\"::select_comptes\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\t$out .= '<select id=\"select'.$htmlname.'\" class=\"flat selectbankaccount'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\"'.($moreattrib ? ' '.$moreattrib : '').'>';\n\t\t\t\tif ($useempty == 1 || ($useempty == 2 && $num > 1)) {\n\t\t\t\t\t$out .= '<option value=\"-1\">&nbsp;</option>';\n\t\t\t\t}\n\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\t\tif ($selected == $obj->rowid || ($useempty == 2 && $num == 1 && empty($selected))) {\n\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\" data-currency-code=\"'.$obj->currency_code.'\" selected>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\" data-currency-code=\"'.$obj->currency_code.'\">';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= trim($obj->label);\n\t\t\t\t\tif ($showcurrency) {\n\t\t\t\t\t\t$out .= ' ('.$obj->currency_code.')';\n\t\t\t\t\t}\n\t\t\t\t\tif ($status == 2 && $obj->status == 1) {\n\t\t\t\t\t\t$out .= ' ('.$langs->trans(\"Closed\").')';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= '</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\t$out .= \"</select>\";\n\t\t\t\t$out .= ajax_combobox('select'.$htmlname);\n\t\t\t} else {\n\t\t\t\tif ($status == 0) {\n\t\t\t\t\t$out .= '<span class=\"opacitymedium\">'.$langs->trans(\"NoActiveBankAccountDefined\").'</span>';\n\t\t\t\t} else {\n\t\t\t\t\t$out .= '<span class=\"opacitymedium\">'.$langs->trans(\"NoBankAccountFound\").'</span>';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\t// Output or return\n\t\tif (empty($nooutput)) {\n\t\t\tprint $out;\n\t\t} else {\n\t\t\treturn $out;\n\t\t}\n\n\t\treturn $num;\n\t}\n\n\t/**\n\t *  Return a HTML select list of establishment\n\t *\n\t *  @param\tstring\t$selected           Id establishment pre-selected\n\t *  @param  string\t$htmlname           Name of select zone\n\t *  @param  int\t\t$status             Status of searched establishment (0=open, 1=closed, 2=both)\n\t *  @param  string\t$filtre             To filter list. This parameter must not come from input of users\n\t *  @param  int\t\t$useempty           1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *  @param  string\t$moreattrib         To add more attribute on select\n\t * \t@return\tint\t\t\t\t\t\t\t<0 if error, Num of establishment found if OK (0, 1, 2, ...)\n\t */\n\tpublic function selectEstablishments($selected = '', $htmlname = 'entity', $status = 0, $filtre = '', $useempty = 0, $moreattrib = '')\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$langs->load(\"admin\");\n\t\t$num = 0;\n\n\t\t$sql = \"SELECT rowid, name, fk_country, status, entity\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"establishment\";\n\t\t$sql .= \" WHERE 1=1\";\n\t\tif ($status != 2) {\n\t\t\t$sql .= \" AND status = \".(int) $status;\n\t\t}\n\t\tif ($filtre) {\n\t\t\t$sql .= \" AND \".$filtre;\n\t\t}\n\t\t$sql .= \" ORDER BY name\";\n\n\t\tdol_syslog(get_class($this).\"::select_establishment\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\tprint '<select id=\"select'.$htmlname.'\" class=\"flat selectestablishment\" name=\"'.$htmlname.'\"'.($moreattrib ? ' '.$moreattrib : '').'>';\n\t\t\t\tif ($useempty == 1 || ($useempty == 2 && $num > 1)) {\n\t\t\t\t\tprint '<option value=\"-1\">&nbsp;</option>';\n\t\t\t\t}\n\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\t\tif ($selected == $obj->rowid) {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">';\n\t\t\t\t\t}\n\t\t\t\t\tprint trim($obj->name);\n\t\t\t\t\tif ($status == 2 && $obj->status == 1) {\n\t\t\t\t\t\tprint ' ('.$langs->trans(\"Closed\").')';\n\t\t\t\t\t}\n\t\t\t\t\tprint '</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\tprint \"</select>\";\n\t\t\t} else {\n\t\t\t\tif ($status == 0) {\n\t\t\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"NoActiveEstablishmentDefined\").'</span>';\n\t\t\t\t} else {\n\t\t\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"NoEstablishmentFound\").'</span>';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *    Display form to select bank account\n\t *\n\t *    @param\tstring\t$page        Page\n\t *    @param    int\t\t$selected    Id of bank account\n\t *    @param    string\t$htmlname    Name of select html field\n\t *    @param    int\t\t$addempty    1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *    @return\tvoid\n\t */\n\tpublic function formSelectAccount($page, $selected = '', $htmlname = 'fk_account', $addempty = 0)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setbankaccount\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint img_picto('', 'bank_account', 'class=\"pictofixedwidth\"');\n\t\t\t$nbaccountfound = $this->select_comptes($selected, $htmlname, 0, '', $addempty);\n\t\t\tif ($nbaccountfound > 0) {\n\t\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t}\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\t$langs->load('banks');\n\n\t\t\tif ($selected) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/compta/bank/class/account.class.php';\n\t\t\t\t$bankstatic = new Account($this->db);\n\t\t\t\t$result = $bankstatic->fetch($selected);\n\t\t\t\tif ($result) {\n\t\t\t\t\tprint $bankstatic->getNomUrl(1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Return list of categories having choosed type\n\t *\n\t *    @param\tstring|int\t            $type\t\t\t\tType of category ('customer', 'supplier', 'contact', 'product', 'member'). Old mode (0, 1, 2, ...) is deprecated.\n\t *    @param    string\t\t            $selected    \t\tId of category preselected or 'auto' (autoselect category if there is only one element). Not used if $outputmode = 1.\n\t *    @param    string\t\t            $htmlname\t\t\tHTML field name\n\t *    @param    int\t\t\t            $maxlength      \tMaximum length for labels\n\t *    @param    int|string|array    \t$markafterid        Keep only or removed all categories including the leaf $markafterid in category tree (exclude) or Keep only of category is inside the leaf starting with this id.\n\t *                                                          $markafterid can be an :\n\t *                                                          - int (id of category)\n\t *                                                          - string (categories ids seprated by comma)\n\t *                                                          - array (list of categories ids)\n\t *    @param\tint\t\t\t            $outputmode\t\t\t0=HTML select string, 1=Array\n\t *    @param\tint\t\t\t            $include\t\t\t[=0] Removed or 1=Keep only\n\t *    @param\tstring\t\t\t\t\t$morecss\t\t\tMore CSS\n\t *    @return\tstring\n\t *    @see select_categories()\n\t */\n\tpublic function select_all_categories($type, $selected = '', $htmlname = \"parent\", $maxlength = 64, $markafterid = 0, $outputmode = 0, $include = 0, $morecss = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\t\t$langs->load(\"categories\");\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\n\t\t// For backward compatibility\n\t\tif (is_numeric($type)) {\n\t\t\tdol_syslog(__METHOD__.': using numeric value for parameter type is deprecated. Use string code instead.', LOG_WARNING);\n\t\t}\n\n\t\tif ($type === Categorie::TYPE_BANK_LINE) {\n\t\t\t// TODO Move this into common category feature\n\t\t\t$cate_arbo = array();\n\t\t\t$sql = \"SELECT c.label, c.rowid\";\n\t\t\t$sql .= \" FROM \".$this->db->prefix().\"bank_categ as c\";\n\t\t\t$sql .= \" WHERE entity = \".$conf->entity;\n\t\t\t$sql .= \" ORDER BY c.label\";\n\t\t\t$result = $this->db->query($sql);\n\t\t\tif ($result) {\n\t\t\t\t$num = $this->db->num_rows($result);\n\t\t\t\t$i = 0;\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$objp = $this->db->fetch_object($result);\n\t\t\t\t\tif ($objp) {\n\t\t\t\t\t\t$cate_arbo[$objp->rowid] = array('id'=>$objp->rowid, 'fulllabel'=>$objp->label);\n\t\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\t$this->db->free($result);\n\t\t\t} else {\n\t\t\t\tdol_print_error($this->db);\n\t\t\t}\n\t\t} else {\n\t\t\t$cat = new Categorie($this->db);\n\t\t\t$cate_arbo = $cat->get_full_arbo($type, $markafterid, $include);\n\t\t}\n\n\t\t$output = '<select class=\"flat'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\t\t$outarray = array();\n\t\tif (is_array($cate_arbo)) {\n\t\t\tif (!count($cate_arbo)) {\n\t\t\t\t$output .= '<option value=\"-1\" disabled>'.$langs->trans(\"NoCategoriesDefined\").'</option>';\n\t\t\t} else {\n\t\t\t\t$output .= '<option value=\"-1\">&nbsp;</option>';\n\t\t\t\tforeach ($cate_arbo as $key => $value) {\n\t\t\t\t\tif ($cate_arbo[$key]['id'] == $selected || ($selected === 'auto' && count($cate_arbo) == 1)) {\n\t\t\t\t\t\t$add = 'selected ';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$add = '';\n\t\t\t\t\t}\n\t\t\t\t\t$output .= '<option '.$add.'value=\"'.$cate_arbo[$key]['id'].'\">'.dol_trunc($cate_arbo[$key]['fulllabel'], $maxlength, 'middle').'</option>';\n\n\t\t\t\t\t$outarray[$cate_arbo[$key]['id']] = $cate_arbo[$key]['fulllabel'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$output .= '</select>';\n\t\t$output .= \"\\n\";\n\n\t\tif ($outputmode) {\n\t\t\treturn $outarray;\n\t\t}\n\t\treturn $output;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *     Show a confirmation HTML form or AJAX popup\n\t *\n\t *     @param\tstring\t\t$page        \t   \tUrl of page to call if confirmation is OK\n\t *     @param\tstring\t\t$title       \t   \tTitle\n\t *     @param\tstring\t\t$question    \t   \tQuestion\n\t *     @param \tstring\t\t$action      \t   \tAction\n\t *\t   @param\tarray\t\t$formquestion\t   \tAn array with forms complementary inputs\n\t * \t   @param\tstring\t\t$selectedchoice\t\t\"\" or \"no\" or \"yes\"\n\t * \t   @param\tint\t\t\t$useajax\t\t   \t0=No, 1=Yes, 2=Yes but submit page with &confirm=no if choice is No, 'xxx'=preoutput confirm box with div id=dialog-confirm-xxx\n\t *     @param\tint\t\t\t$height          \tForce height of box\n\t *     @param\tint\t\t\t$width\t\t\t\tForce width of box\n\t *     @return \tvoid\n\t *     @deprecated\n\t *     @see formconfirm()\n\t */\n\tpublic function form_confirm($page, $title, $question, $action, $formquestion = '', $selectedchoice = \"\", $useajax = 0, $height = 170, $width = 500)\n\t{\n\t\t// phpcs:enable\n\t\tdol_syslog(__METHOD__.': using form_confirm is deprecated. Use formconfim instead.', LOG_WARNING);\n\t\tprint $this->formconfirm($page, $title, $question, $action, $formquestion, $selectedchoice, $useajax, $height, $width);\n\t}\n\n\t/**\n\t *     Show a confirmation HTML form or AJAX popup.\n\t *     Easiest way to use this is with useajax=1.\n\t *     If you use useajax='xxx', you must also add jquery code to trigger opening of box (with correct parameters)\n\t *     just after calling this method. For example:\n\t *       print '<script type=\"text/javascript\">'.\"\\n\";\n\t *       print 'jQuery(document).ready(function() {'.\"\\n\";\n\t *       print 'jQuery(\".xxxlink\").click(function(e) { jQuery(\"#aparamid\").val(jQuery(this).attr(\"rel\")); jQuery(\"#dialog-confirm-xxx\").dialog(\"open\"); return false; });'.\"\\n\";\n\t *       print '});'.\"\\n\";\n\t *       print '</script>'.\"\\n\";\n\t *\n\t *     @param  \tstring\t\t\t$page        \t   \tUrl of page to call if confirmation is OK. Can contains parameters (param 'action' and 'confirm' will be reformated)\n\t *     @param\tstring\t\t\t$title       \t   \tTitle\n\t *     @param\tstring\t\t\t$question    \t   \tQuestion\n\t *     @param \tstring\t\t\t$action      \t   \tAction\n\t *\t   @param  \tarray|string\t$formquestion\t   \tAn array with complementary inputs to add into forms: array(array('label'=> ,'type'=> , 'size'=>, 'morecss'=>, 'moreattr'=>))\n\t *\t\t\t\t\t\t\t\t\t\t\t\t\ttype can be 'hidden', 'text', 'password', 'checkbox', 'radio', 'date', 'morecss', 'other' or 'onecolumn'...\n\t * \t   @param  \tstring\t\t\t$selectedchoice  \t'' or 'no', or 'yes' or '1' or '0'\n\t * \t   @param  \tint|string\t\t$useajax\t\t   \t0=No, 1=Yes, 2=Yes but submit page with &confirm=no if choice is No, 'xxx'=Yes and preoutput confirm box with div id=dialog-confirm-xxx\n\t *     @param  \tint|string\t\t$height          \tForce height of box (0 = auto)\n\t *     @param\tint\t\t\t\t$width\t\t\t\tForce width of box ('999' or '90%'). Ignored and forced to 90% on smartphones.\n\t *     @param\tint\t\t\t\t$disableformtag\t\t1=Disable form tag. Can be used if we are already inside a <form> section.\n\t *     @return \tstring      \t\t    \t\t\tHTML ajax code if a confirm ajax popup is required, Pure HTML code if it's an html form\n\t */\n\tpublic function formconfirm($page, $title, $question, $action, $formquestion = '', $selectedchoice = '', $useajax = 0, $height = 0, $width = 500, $disableformtag = 0)\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$more = '<!-- formconfirm before calling page='.dol_escape_htmltag($page).' -->';\n\t\t$formconfirm = '';\n\t\t$inputok = array();\n\t\t$inputko = array();\n\n\t\t// Clean parameters\n\t\t$newselectedchoice = empty($selectedchoice) ? \"no\" : $selectedchoice;\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t$width = '95%';\n\t\t}\n\n\t\t// Set height automatically if not defined\n\t\tif (empty($height)) {\n\t\t\t$height = 220;\n\t\t\tif (is_array($formquestion) && count($formquestion) > 2) {\n\t\t\t\t$height += ((count($formquestion) - 2) * 24);\n\t\t\t}\n\t\t}\n\n\t\tif (is_array($formquestion) && !empty($formquestion)) {\n\t\t\t// First add hidden fields and value\n\t\t\tforeach ($formquestion as $key => $input) {\n\t\t\t\tif (is_array($input) && !empty($input)) {\n\t\t\t\t\tif ($input['type'] == 'hidden') {\n\t\t\t\t\t\t$more .= '<input type=\"hidden\" id=\"'.dol_escape_htmltag($input['name']).'\" name=\"'.dol_escape_htmltag($input['name']).'\" value=\"'.dol_escape_htmltag($input['value']).'\">'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now add questions\n\t\t\t$moreonecolumn = '';\n\t\t\t$more .= '<div class=\"tagtable paddingtopbottomonly centpercent noborderspacing\">'.\"\\n\";\n\t\t\tforeach ($formquestion as $key => $input) {\n\t\t\t\tif (is_array($input) && !empty($input)) {\n\t\t\t\t\t$size = (!empty($input['size']) ? ' size=\"'.$input['size'].'\"' : '');\t// deprecated. Use morecss instead.\n\t\t\t\t\t$moreattr = (!empty($input['moreattr']) ? ' '.$input['moreattr'] : '');\n\t\t\t\t\t$morecss = (!empty($input['morecss']) ? ' '.$input['morecss'] : '');\n\n\t\t\t\t\tif ($input['type'] == 'text') {\n\t\t\t\t\t\t$more .= '<div class=\"tagtr\"><div class=\"tagtd'.(empty($input['tdclass']) ? '' : (' '.$input['tdclass'])).'\">'.$input['label'].'</div><div class=\"tagtd\"><input type=\"text\" class=\"flat'.$morecss.'\" id=\"'.dol_escape_htmltag($input['name']).'\" name=\"'.dol_escape_htmltag($input['name']).'\"'.$size.' value=\"'.$input['value'].'\"'.$moreattr.' /></div></div>'.\"\\n\";\n\t\t\t\t\t} elseif ($input['type'] == 'password')\t{\n\t\t\t\t\t\t$more .= '<div class=\"tagtr\"><div class=\"tagtd'.(empty($input['tdclass']) ? '' : (' '.$input['tdclass'])).'\">'.$input['label'].'</div><div class=\"tagtd\"><input type=\"password\" class=\"flat'.$morecss.'\" id=\"'.dol_escape_htmltag($input['name']).'\" name=\"'.dol_escape_htmltag($input['name']).'\"'.$size.' value=\"'.$input['value'].'\"'.$moreattr.' /></div></div>'.\"\\n\";\n\t\t\t\t\t} elseif ($input['type'] == 'textarea') {\n\t\t\t\t\t\t/*$more .= '<div class=\"tagtr\"><div class=\"tagtd'.(empty($input['tdclass']) ? '' : (' '.$input['tdclass'])).'\">'.$input['label'].'</div><div class=\"tagtd\">';\n\t\t\t\t\t\t$more .= '<textarea name=\"'.$input['name'].'\" class=\"'.$morecss.'\"'.$moreattr.'>';\n\t\t\t\t\t\t$more .= $input['value'];\n\t\t\t\t\t\t$more .= '</textarea>';\n\t\t\t\t\t\t$more .= '</div></div>'.\"\\n\";*/\n\t\t\t\t\t\t$moreonecolumn .= '<div class=\"margintoponly\">';\n\t\t\t\t\t\t$moreonecolumn .= $input['label'].'<br>';\n\t\t\t\t\t\t$moreonecolumn .= '<textarea name=\"'.dol_escape_htmltag($input['name']).'\" id=\"'.dol_escape_htmltag($input['name']).'\" class=\"'.$morecss.'\"'.$moreattr.'>';\n\t\t\t\t\t\t$moreonecolumn .= $input['value'];\n\t\t\t\t\t\t$moreonecolumn .= '</textarea>';\n\t\t\t\t\t\t$moreonecolumn .= '</div>';\n\t\t\t\t\t} elseif ($input['type'] == 'select') {\n\t\t\t\t\t\tif (empty($morecss)) {\n\t\t\t\t\t\t\t$morecss = 'minwidth100';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$show_empty = isset($input['select_show_empty']) ? $input['select_show_empty'] : 1;\n\t\t\t\t\t\t$key_in_label = isset($input['select_key_in_label']) ? $input['select_key_in_label'] : 0;\n\t\t\t\t\t\t$value_as_key = isset($input['select_value_as_key']) ? $input['select_value_as_key'] : 0;\n\t\t\t\t\t\t$translate = isset($input['select_translate']) ? $input['select_translate'] : 0;\n\t\t\t\t\t\t$maxlen = isset($input['select_maxlen']) ? $input['select_maxlen'] : 0;\n\t\t\t\t\t\t$disabled = isset($input['select_disabled']) ? $input['select_disabled'] : 0;\n\t\t\t\t\t\t$sort = isset($input['select_sort']) ? $input['select_sort'] : '';\n\n\t\t\t\t\t\t$more .= '<div class=\"tagtr\"><div class=\"tagtd'.(empty($input['tdclass']) ? '' : (' '.$input['tdclass'])).'\">';\n\t\t\t\t\t\tif (!empty($input['label'])) {\n\t\t\t\t\t\t\t$more .= $input['label'].'</div><div class=\"tagtd left\">';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$more .= $this->selectarray($input['name'], $input['values'], $input['default'], $show_empty, $key_in_label, $value_as_key, $moreattr, $translate, $maxlen, $disabled, $sort, $morecss);\n\t\t\t\t\t\t$more .= '</div></div>'.\"\\n\";\n\t\t\t\t\t} elseif ($input['type'] == 'checkbox') {\n\t\t\t\t\t\t$more .= '<div class=\"tagtr\">';\n\t\t\t\t\t\t$more .= '<div class=\"tagtd'.(empty($input['tdclass']) ? '' : (' '.$input['tdclass'])).'\">'.$input['label'].' </div><div class=\"tagtd\">';\n\t\t\t\t\t\t$more .= '<input type=\"checkbox\" class=\"flat'.$morecss.'\" id=\"'.dol_escape_htmltag($input['name']).'\" name=\"'.dol_escape_htmltag($input['name']).'\"'.$moreattr;\n\t\t\t\t\t\tif (!is_bool($input['value']) && $input['value'] != 'false' && $input['value'] != '0') {\n\t\t\t\t\t\t\t$more .= ' checked';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (is_bool($input['value']) && $input['value']) {\n\t\t\t\t\t\t\t$more .= ' checked';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isset($input['disabled'])) {\n\t\t\t\t\t\t\t$more .= ' disabled';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$more .= ' /></div>';\n\t\t\t\t\t\t$more .= '</div>'.\"\\n\";\n\t\t\t\t\t} elseif ($input['type'] == 'radio') {\n\t\t\t\t\t\t$i = 0;\n\t\t\t\t\t\tforeach ($input['values'] as $selkey => $selval) {\n\t\t\t\t\t\t\t$more .= '<div class=\"tagtr\">';\n\t\t\t\t\t\t\tif ($i == 0) {\n\t\t\t\t\t\t\t\t$more .= '<div class=\"tagtd'.(empty($input['tdclass']) ? ' tdtop' : (' tdtop '.$input['tdclass'])).'\">'.$input['label'].'</div>';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$more .= '<div clas=\"tagtd'.(empty($input['tdclass']) ? '' : (' \"'.$input['tdclass'])).'\">&nbsp;</div>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$more .= '<div class=\"tagtd'.($i == 0 ? ' tdtop' : '').'\"><input type=\"radio\" class=\"flat'.$morecss.'\" id=\"'.dol_escape_htmltag($input['name'].$selkey).'\" name=\"'.dol_escape_htmltag($input['name']).'\" value=\"'.$selkey.'\"'.$moreattr;\n\t\t\t\t\t\t\tif ($input['disabled']) {\n\t\t\t\t\t\t\t\t$more .= ' disabled';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (isset($input['default']) && $input['default'] === $selkey) {\n\t\t\t\t\t\t\t\t$more .= ' checked=\"checked\"';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$more .= ' /> ';\n\t\t\t\t\t\t\t$more .= '<label for=\"'.dol_escape_htmltag($input['name'].$selkey).'\">'.$selval.'</label>';\n\t\t\t\t\t\t\t$more .= '</div></div>'.\"\\n\";\n\t\t\t\t\t\t\t$i++;\n\t\t\t\t\t\t}\n\t\t\t\t\t} elseif ($input['type'] == 'date') {\n\t\t\t\t\t\t$more .= '<div class=\"tagtr\"><div class=\"tagtd'.(empty($input['tdclass']) ? '' : (' '.$input['tdclass'])).'\">'.$input['label'].'</div>';\n\t\t\t\t\t\t$more .= '<div class=\"tagtd\">';\n\t\t\t\t\t\t$addnowlink = (empty($input['datenow']) ? 0 : 1);\n\t\t\t\t\t\t$more .= $this->selectDate($input['value'], $input['name'], 0, 0, 0, '', 1, $addnowlink);\n\t\t\t\t\t\t$more .= '</div></div>'.\"\\n\";\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'day');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'month');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'year');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'hour');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'min');\n\t\t\t\t\t} elseif ($input['type'] == 'other') {\n\t\t\t\t\t\t$more .= '<div class=\"tagtr\"><div class=\"tagtd'.(empty($input['tdclass']) ? '' : (' '.$input['tdclass'])).'\">';\n\t\t\t\t\t\tif (!empty($input['label'])) {\n\t\t\t\t\t\t\t$more .= $input['label'].'</div><div class=\"tagtd\">';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$more .= $input['value'];\n\t\t\t\t\t\t$more .= '</div></div>'.\"\\n\";\n\t\t\t\t\t} elseif ($input['type'] == 'onecolumn') {\n\t\t\t\t\t\t$moreonecolumn .= '<div class=\"margintoponly\">';\n\t\t\t\t\t\t$moreonecolumn .= $input['value'];\n\t\t\t\t\t\t$moreonecolumn .= '</div>'.\"\\n\";\n\t\t\t\t\t} elseif ($input['type'] == 'hidden') {\n\t\t\t\t\t\t// Do nothing more, already added by a previous loop\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$more .= 'Error type '.$input['type'].' for the confirm box is not a supported type';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$more .= '</div>'.\"\\n\";\n\t\t\t$more .= $moreonecolumn;\n\t\t}\n\n\t\t// JQUERY method dialog is broken with smartphone, we use standard HTML.\n\t\t// Note: When using dol_use_jmobile or no js, you must also check code for button use a GET url with action=xxx and check that you also output the confirm code when action=xxx\n\t\t// See page product/card.php for example\n\t\tif (!empty($conf->dol_use_jmobile)) {\n\t\t\t$useajax = 0;\n\t\t}\n\t\tif (empty($conf->use_javascript_ajax)) {\n\t\t\t$useajax = 0;\n\t\t}\n\n\t\tif ($useajax) {\n\t\t\t$autoOpen = true;\n\t\t\t$dialogconfirm = 'dialog-confirm';\n\t\t\t$button = '';\n\t\t\tif (!is_numeric($useajax)) {\n\t\t\t\t$button = $useajax;\n\t\t\t\t$useajax = 1;\n\t\t\t\t$autoOpen = false;\n\t\t\t\t$dialogconfirm .= '-'.$button;\n\t\t\t}\n\t\t\t$pageyes = $page.(preg_match('/\\?/', $page) ? '&' : '?').'action='.$action.'&confirm=yes';\n\t\t\t$pageno = ($useajax == 2 ? $page.(preg_match('/\\?/', $page) ? '&' : '?').'confirm=no' : '');\n\n\t\t\t// Add input fields into list of fields to read during submit (inputok and inputko)\n\t\t\tif (is_array($formquestion)) {\n\t\t\t\tforeach ($formquestion as $key => $input) {\n\t\t\t\t\t//print \"xx \".$key.\" rr \".is_array($input).\"<br>\\n\";\n\t\t\t\t\t// Add name of fields to propagate with the GET when submitting the form with button OK.\n\t\t\t\t\tif (is_array($input) && isset($input['name'])) {\n\t\t\t\t\t\tif (strpos($input['name'], ',') > 0) {\n\t\t\t\t\t\t\t$inputok = array_merge($inputok, explode(',', $input['name']));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarray_push($inputok, $input['name']);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Add name of fields to propagate with the GET when submitting the form with button KO.\n\t\t\t\t\tif (isset($input['inputko']) && $input['inputko'] == 1) {\n\t\t\t\t\t\tarray_push($inputko, $input['name']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Show JQuery confirm box.\n\t\t\t$formconfirm .= '<div id=\"'.$dialogconfirm.'\" title=\"'.dol_escape_htmltag($title).'\" style=\"display: none;\">';\n\t\t\tif (is_array($formquestion) && !empty($formquestion['text'])) {\n\t\t\t\t$formconfirm .= '<div class=\"confirmtext\">'.$formquestion['text'].'</div>'.\"\\n\";\n\t\t\t}\n\t\t\tif (!empty($more)) {\n\t\t\t\t$formconfirm .= '<div class=\"confirmquestions\">'.$more.'</div>'.\"\\n\";\n\t\t\t}\n\t\t\t$formconfirm .= ($question ? '<div class=\"confirmmessage\">'.img_help('', '').' '.$question.'</div>' : '');\n\t\t\t$formconfirm .= '</div>'.\"\\n\";\n\n\t\t\t$formconfirm .= \"\\n<!-- begin code of popup for formconfirm page=\".$page.\" -->\\n\";\n\t\t\t$formconfirm .= '<script type=\"text/javascript\">'.\"\\n\";\n\t\t\t$formconfirm .= \"/* Code for the jQuery('#dialogforpopup').dialog() */\\n\";\n\t\t\t$formconfirm .= 'jQuery(document).ready(function() {\n            $(function() {\n            \t$( \"#'.$dialogconfirm.'\" ).dialog(\n            \t{\n                    autoOpen: '.($autoOpen ? \"true\" : \"false\").',';\n\t\t\tif ($newselectedchoice == 'no') {\n\t\t\t\t$formconfirm .= '\n\t\t\t\t\t\topen: function() {\n            \t\t\t\t$(this).parent().find(\"button.ui-button:eq(2)\").focus();\n\t\t\t\t\t\t},';\n\t\t\t}\n\t\t\t$formconfirm .= '\n                    resizable: false,\n                    height: \"'.$height.'\",\n                    width: \"'.$width.'\",\n                    modal: true,\n                    closeOnEscape: false,\n                    buttons: {\n                        \"'.dol_escape_js($langs->transnoentities(\"Yes\")).'\": function() {\n                        \tvar options = \"&token='.urlencode(newToken()).'\";\n                        \tvar inputok = '.json_encode($inputok).';\t/* List of fields into form */\n                         \tvar pageyes = \"'.dol_escape_js(!empty($pageyes) ? $pageyes : '').'\";\n                         \tif (inputok.length>0) {\n                         \t\t$.each(inputok, function(i, inputname) {\n                         \t\t\tvar more = \"\";\n\t\t\t\t\t\t\t\t\tvar inputvalue;\n                         \t\t\tif ($(\"input[name=\\'\" + inputname + \"\\']\").attr(\"type\") == \"radio\") {\n\t\t\t\t\t\t\t\t\t\tinputvalue = $(\"input[name=\\'\" + inputname + \"\\']:checked\").val();\n\t\t\t\t\t\t\t\t\t} else {\n                         \t\t    \tif ($(\"#\" + inputname).attr(\"type\") == \"checkbox\") { more = \":checked\"; }\n                         \t\t\t\tinputvalue = $(\"#\" + inputname + more).val();\n\t\t\t\t\t\t\t\t\t}\n                         \t\t\tif (typeof inputvalue == \"undefined\") { inputvalue=\"\"; }\n\t\t\t\t\t\t\t\t\tconsole.log(\"formconfirm check inputname=\"+inputname+\" inputvalue=\"+inputvalue);\n                         \t\t\toptions += \"&\" + inputname + \"=\" + encodeURIComponent(inputvalue);\n                         \t\t});\n                         \t}\n                         \tvar urljump = pageyes + (pageyes.indexOf(\"?\") < 0 ? \"?\" : \"\") + options;\n            \t\t\t\tif (pageyes.length > 0) { location.href = urljump; }\n                            $(this).dialog(\"close\");\n                        },\n                        \"'.dol_escape_js($langs->transnoentities(\"No\")).'\": function() {\n                        \tvar options = \"&token='.urlencode(newToken()).'\";\n                         \tvar inputko = '.json_encode($inputko).';\t/* List of fields into form */\n                         \tvar pageno=\"'.dol_escape_js(!empty($pageno) ? $pageno : '').'\";\n                         \tif (inputko.length>0) {\n                         \t\t$.each(inputko, function(i, inputname) {\n                         \t\t\tvar more = \"\";\n                         \t\t\tif ($(\"#\" + inputname).attr(\"type\") == \"checkbox\") { more = \":checked\"; }\n                         \t\t\tvar inputvalue = $(\"#\" + inputname + more).val();\n                         \t\t\tif (typeof inputvalue == \"undefined\") { inputvalue=\"\"; }\n                         \t\t\toptions += \"&\" + inputname + \"=\" + encodeURIComponent(inputvalue);\n                         \t\t});\n                         \t}\n                         \tvar urljump=pageno + (pageno.indexOf(\"?\") < 0 ? \"?\" : \"\") + options;\n                         \t//alert(urljump);\n            \t\t\t\tif (pageno.length > 0) { location.href = urljump; }\n                            $(this).dialog(\"close\");\n                        }\n                    }\n                }\n                );\n\n            \tvar button = \"'.$button.'\";\n            \tif (button.length > 0) {\n                \t$( \"#\" + button ).click(function() {\n                \t\t$(\"#'.$dialogconfirm.'\").dialog(\"open\");\n        \t\t\t});\n                }\n            });\n            });\n            </script>';\n\t\t\t$formconfirm .= \"<!-- end ajax formconfirm -->\\n\";\n\t\t} else {\n\t\t\t$formconfirm .= \"\\n<!-- begin formconfirm page=\".dol_escape_htmltag($page).\" -->\\n\";\n\n\t\t\tif (empty($disableformtag)) {\n\t\t\t\t$formconfirm .= '<form method=\"POST\" action=\"'.$page.'\" class=\"notoptoleftroright\">'.\"\\n\";\n\t\t\t}\n\n\t\t\t$formconfirm .= '<input type=\"hidden\" name=\"action\" value=\"'.$action.'\">'.\"\\n\";\n\t\t\t$formconfirm .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">'.\"\\n\";\n\n\t\t\t$formconfirm .= '<table class=\"valid centpercent\">'.\"\\n\";\n\n\t\t\t// Line title\n\t\t\t$formconfirm .= '<tr class=\"validtitre\"><td class=\"validtitre\" colspan=\"2\">';\n\t\t\t$formconfirm .= img_picto('', 'recent').' '.$title;\n\t\t\t$formconfirm .= '</td></tr>'.\"\\n\";\n\n\t\t\t// Line text\n\t\t\tif (is_array($formquestion) && !empty($formquestion['text'])) {\n\t\t\t\t$formconfirm .= '<tr class=\"valid\"><td class=\"valid\" colspan=\"2\">'.$formquestion['text'].'</td></tr>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Line form fields\n\t\t\tif ($more) {\n\t\t\t\t$formconfirm .= '<tr class=\"valid\"><td class=\"valid\" colspan=\"2\">'.\"\\n\";\n\t\t\t\t$formconfirm .= $more;\n\t\t\t\t$formconfirm .= '</td></tr>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Line with question\n\t\t\t$formconfirm .= '<tr class=\"valid\">';\n\t\t\t$formconfirm .= '<td class=\"valid\">'.$question.'</td>';\n\t\t\t$formconfirm .= '<td class=\"valid center\">';\n\t\t\t$formconfirm .= $this->selectyesno(\"confirm\", $newselectedchoice, 0, false, 0, 0, 'marginleftonly marginrightonly');\n\t\t\t$formconfirm .= '<input class=\"button valignmiddle confirmvalidatebutton\" type=\"submit\" value=\"'.$langs->trans(\"Validate\").'\">';\n\t\t\t$formconfirm .= '</td>';\n\t\t\t$formconfirm .= '</tr>'.\"\\n\";\n\n\t\t\t$formconfirm .= '</table>'.\"\\n\";\n\n\t\t\tif (empty($disableformtag)) {\n\t\t\t\t$formconfirm .= \"</form>\\n\";\n\t\t\t}\n\t\t\t$formconfirm .= '<br>';\n\n\t\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t\t$formconfirm .= '<!-- code to disable button to avoid double clic -->';\n\t\t\t\t$formconfirm .= '<script type=\"text/javascript\">'.\"\\n\";\n\t\t\t\t$formconfirm .= '\n\t\t\t\t$(document).ready(function () {\n\t\t\t\t\t$(\".confirmvalidatebutton\").on(\"click\", function() {\n\t\t\t\t\t\tconsole.log(\"We click on button\");\n\t\t\t\t\t\t$(this).attr(\"disabled\", \"disabled\");\n\t\t\t\t\t\tsetTimeout(\\'$(\".confirmvalidatebutton\").removeAttr(\"disabled\")\\', 3000);\n\t\t\t\t\t\t//console.log($(this).closest(\"form\"));\n\t\t\t\t\t\t$(this).closest(\"form\").submit();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t';\n\t\t\t\t$formconfirm .= '</script>'.\"\\n\";\n\t\t\t}\n\n\t\t\t$formconfirm .= \"<!-- end formconfirm -->\\n\";\n\t\t}\n\n\t\treturn $formconfirm;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Show a form to select a project\n\t *\n\t *    @param\tint\t\t$page        \t\tPage\n\t *    @param\tint\t\t$socid       \t\tId third party (-1=all, 0=only projects not linked to a third party, id=projects not linked or linked to third party id)\n\t *    @param    int\t\t$selected    \t\tId pre-selected project\n\t *    @param    string\t$htmlname    \t\tName of select field\n\t *    @param\tint\t\t$discard_closed\t\tDiscard closed projects (0=Keep,1=hide completely except $selected,2=Disable)\n\t *    @param\tint\t\t$maxlength\t\t\tMax length\n\t *    @param\tint\t\t$forcefocus\t\t\tForce focus on field (works with javascript only)\n\t *    @param    int     $nooutput           No print is done. String is returned.\n\t *    @return\tstring                      Return html content\n\t */\n\tpublic function form_project($page, $socid, $selected = '', $htmlname = 'projectid', $discard_closed = 0, $maxlength = 20, $forcefocus = 0, $nooutput = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/project.lib.php';\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formprojet.class.php';\n\n\t\t$out = '';\n\n\t\t$formproject = new FormProjets($this->db);\n\n\t\t$langs->load(\"project\");\n\t\tif ($htmlname != \"none\") {\n\t\t\t$out .= \"\\n\";\n\t\t\t$out .= '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\t$out .= '<input type=\"hidden\" name=\"action\" value=\"classin\">';\n\t\t\t$out .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$out .= $formproject->select_projects($socid, $selected, $htmlname, $maxlength, 0, 1, $discard_closed, $forcefocus, 0, 0, '', 1);\n\t\t\t$out .= '<input type=\"submit\" class=\"button smallpaddingimp\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t$out .= '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$projet = new Project($this->db);\n\t\t\t\t$projet->fetch($selected);\n\t\t\t\t$out .= $projet->getNomUrl(1, '', 1);\n\t\t\t} else {\n\t\t\t\t$out .= \"&nbsp;\";\n\t\t\t}\n\t\t}\n\n\t\tif (empty($nooutput)) {\n\t\t\tprint $out;\n\t\t\treturn '';\n\t\t}\n\t\treturn $out;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tShow a form to select payment conditions\n\t *\n\t *  @param\tint\t\t$page        \tPage\n\t *  @param  string\t$selected    \tId condition pre-selectionne\n\t *  @param  string\t$htmlname    \tName of select html field\n\t *\t@param\tint\t\t$addempty\t\tAdd empty entry\n\t *  @param\tstring\t$type\t\t\tType ('direct-debit' or 'bank-transfer')\n\t *  @return\tvoid\n\t */\n\tpublic function form_conditions_reglement($page, $selected = '', $htmlname = 'cond_reglement_id', $addempty = 0, $type = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setconditions\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tif ($type) {\n\t\t\t\tprint '<input type=\"hidden\" name=\"type\" value=\"'.dol_escape_htmltag($type).'\">';\n\t\t\t}\n\t\t\t$this->select_conditions_paiements($selected, $htmlname, -1, $addempty, 0, '');\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle smallpaddingimp\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$this->load_cache_conditions_paiements();\n\t\t\t\tif (isset($this->cache_conditions_paiements[$selected])) {\n\t\t\t\t\tprint $this->cache_conditions_paiements[$selected]['label'];\n\t\t\t\t} else {\n\t\t\t\t\t$langs->load('errors');\n\t\t\t\t\tprint $langs->trans('ErrorNotInDictionaryPaymentConditions');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Show a form to select a delivery delay\n\t *\n\t *  @param  int\t\t$page        \tPage\n\t *  @param  string\t$selected    \tId condition pre-selectionne\n\t *  @param  string\t$htmlname    \tName of select html field\n\t *\t@param\tint\t\t$addempty\t\tAjoute entree vide\n\t *  @return\tvoid\n\t */\n\tpublic function form_availability($page, $selected = '', $htmlname = 'availability', $addempty = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setavailability\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$this->selectAvailabilityDelay($selected, $htmlname, -1, $addempty);\n\t\t\tprint '<input type=\"submit\" name=\"modify\" class=\"button smallpaddingimp\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '<input type=\"submit\" name=\"cancel\" class=\"button smallpaddingimp\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$this->load_cache_availability();\n\t\t\t\tprint $this->cache_availability[$selected]['label'];\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *  Output HTML form to select list of input reason (events that triggered an object creation, like after sending an emailing, making an advert, ...)\n\t *  List found into table c_input_reason loaded by loadCacheInputReason\n\t *\n\t *  @param  string\t$page        \tPage\n\t *  @param  string\t$selected    \tId condition pre-selectionne\n\t *  @param  string\t$htmlname    \tName of select html field\n\t *  @param\tint\t\t$addempty\t\tAdd empty entry\n\t *  @return\tvoid\n\t */\n\tpublic function formInputReason($page, $selected = '', $htmlname = 'demandreason', $addempty = 0)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setdemandreason\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$this->selectInputReason($selected, $htmlname, -1, $addempty);\n\t\t\tprint '<input type=\"submit\" class=\"button smallpaddingimp\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$this->loadCacheInputReason();\n\t\t\t\tforeach ($this->cache_demand_reason as $key => $val) {\n\t\t\t\t\tif ($val['id'] == $selected) {\n\t\t\t\t\t\tprint $val['label'];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Show a form + html select a date\n\t *\n\t *    @param\tstring\t\t$page        \tPage\n\t *    @param\tstring\t\t$selected    \tDate preselected\n\t *    @param    string\t\t$htmlname    \tHtml name of date input fields or 'none'\n\t *    @param    int\t\t\t$displayhour \tDisplay hour selector\n\t *    @param    int\t\t\t$displaymin\t\tDisplay minutes selector\n\t *    @param\tint\t\t\t$nooutput\t\t1=No print output, return string\n\t *    @param\tstring\t\t$type\t\t\t'direct-debit' or 'bank-transfer'\n\t *    @return\tstring\n\t *    @see\t\tselectDate()\n\t */\n\tpublic function form_date($page, $selected, $htmlname, $displayhour = 0, $displaymin = 0, $nooutput = 0, $type = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$ret = '';\n\n\t\tif ($htmlname != \"none\") {\n\t\t\t$ret .= '<form method=\"POST\" action=\"'.$page.'\" name=\"form'.$htmlname.'\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"action\" value=\"set'.$htmlname.'\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tif ($type) {\n\t\t\t\t$ret .= '<input type=\"hidden\" name=\"type\" value=\"'.dol_escape_htmltag($type).'\">';\n\t\t\t}\n\t\t\t$ret .= '<table class=\"nobordernopadding\">';\n\t\t\t$ret .= '<tr><td>';\n\t\t\t$ret .= $this->selectDate($selected, $htmlname, $displayhour, $displaymin, 1, 'form'.$htmlname, 1, 0);\n\t\t\t$ret .= '</td>';\n\t\t\t$ret .= '<td class=\"left\"><input type=\"submit\" class=\"button smallpaddingimp\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\t$ret .= '</tr></table></form>';\n\t\t} else {\n\t\t\tif ($displayhour) {\n\t\t\t\t$ret .= dol_print_date($selected, 'dayhour');\n\t\t\t} else {\n\t\t\t\t$ret .= dol_print_date($selected, 'day');\n\t\t\t}\n\t\t}\n\n\t\tif (empty($nooutput)) {\n\t\t\tprint $ret;\n\t\t}\n\t\treturn $ret;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Show a select form to choose a user\n\t *\n\t *  @param\tstring\t$page        \tPage\n\t *  @param  string\t$selected    \tId of user preselected\n\t *  @param  string\t$htmlname    \tName of input html field. If 'none', we just output the user link.\n\t *  @param  array\t$exclude\t\tList of users id to exclude\n\t *  @param  array\t$include        List of users id to include\n\t *  @return\tvoid\n\t */\n\tpublic function form_users($page, $selected = '', $htmlname = 'userid', $exclude = '', $include = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\" name=\"form'.$htmlname.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set'.$htmlname.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint $this->select_dolusers($selected, $htmlname, 1, $exclude, 0, $include);\n\t\t\tprint '<input type=\"submit\" class=\"button smallpaddingimp valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/user/class/user.class.php';\n\t\t\t\t$theuser = new User($this->db);\n\t\t\t\t$theuser->fetch($selected);\n\t\t\t\tprint $theuser->getNomUrl(1);\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Show form with payment mode\n\t *\n\t *    @param\tstring\t$page        \tPage\n\t *    @param    int\t\t$selected    \tId mode pre-selectionne\n\t *    @param    string\t$htmlname    \tName of select html field\n\t *    @param  \tstring\t$filtertype\t\tTo filter on field type in llx_c_paiement ('CRDT' or 'DBIT' or array('code'=>xx,'label'=>zz))\n\t *    @param    int     $active         Active or not, -1 = all\n\t *    @param   \tint     $addempty       1=Add empty entry\n\t *    @param\tstring\t$type\t\t\tType ('direct-debit' or 'bank-transfer')\n\t *    @return\tvoid\n\t */\n\tpublic function form_modes_reglement($page, $selected = '', $htmlname = 'mode_reglement_id', $filtertype = '', $active = 1, $addempty = 0, $type = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setmode\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tif ($type) {\n\t\t\t\tprint '<input type=\"hidden\" name=\"type\" value=\"'.dol_escape_htmltag($type).'\">';\n\t\t\t}\n\t\t\tprint $this->select_types_paiements($selected, $htmlname, $filtertype, 0, $addempty, 0, 0, $active, '', 1);\n\t\t\tprint '<input type=\"submit\" class=\"button smallpaddingimp valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$this->load_cache_types_paiements();\n\t\t\t\tprint $this->cache_types_paiements[$selected]['label'];\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *    Show form with transport mode\n\t *\n\t *    @param\tstring\t$page        \tPage\n\t *    @param    int\t\t$selected    \tId mode pre-select\n\t *    @param    string\t$htmlname    \tName of select html field\n\t *    @param    int     $active         Active or not, -1 = all\n\t *    @param    int     $addempty       1=Add empty entry\n\t *    @return\tvoid\n\t */\n\tpublic function formSelectTransportMode($page, $selected = '', $htmlname = 'transport_mode_id', $active = 1, $addempty = 0)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"settransportmode\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$this->selectTransportMode($selected, $htmlname, 0, $addempty, 0, 0, $active);\n\t\t\tprint '<input type=\"submit\" class=\"button smallpaddingimp valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$this->load_cache_transport_mode();\n\t\t\t\tprint $this->cache_transport_mode[$selected]['label'];\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Show form with multicurrency code\n\t *\n\t *    @param\tstring\t$page        \tPage\n\t *    @param    string\t$selected    \tcode pre-selectionne\n\t *    @param    string\t$htmlname    \tName of select html field\n\t *    @return\tvoid\n\t */\n\tpublic function form_multicurrency_code($page, $selected = '', $htmlname = 'multicurrency_code')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setmulticurrencycode\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint $this->selectMultiCurrency($selected, $htmlname, 0);\n\t\t\tprint '<input type=\"submit\" class=\"button smallpaddingimp valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tdol_include_once('/core/lib/company.lib.php');\n\t\t\tprint !empty($selected) ? currency_name($selected, 1) : '&nbsp;';\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Show form with multicurrency rate\n\t *\n\t *    @param\tstring\t$page        \tPage\n\t *    @param    double\t$rate\t    \tCurrent rate\n\t *    @param    string\t$htmlname    \tName of select html field\n\t *    @param    string  $currency       Currency code to explain the rate\n\t *    @return\tvoid\n\t */\n\tpublic function form_multicurrency_rate($page, $rate = '', $htmlname = 'multicurrency_tx', $currency = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $mysoc, $conf;\n\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setmulticurrencyrate\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint '<input type=\"text\" class=\"maxwidth100\" name=\"'.$htmlname.'\" value=\"'.(!empty($rate) ? price(price2num($rate, 'CU')) : 1).'\" /> ';\n\t\t\tprint '<select name=\"calculation_mode\">';\n\t\t\tprint '<option value=\"1\">Change '.$langs->trans(\"PriceUHT\").' of lines</option>';\n\t\t\tprint '<option value=\"2\">Change '.$langs->trans(\"PriceUHTCurrency\").' of lines</option>';\n\t\t\tprint '</select> ';\n\t\t\tprint '<input type=\"submit\" class=\"button smallpaddingimp valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif (!empty($rate)) {\n\t\t\t\tprint price($rate, 1, $langs, 1, 0);\n\t\t\t\tif ($currency && $rate != 1) {\n\t\t\t\t\tprint ' &nbsp; ('.price($rate, 1, $langs, 1, 0).' '.$currency.' = 1 '.$conf->currency.')';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint 1;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tShow a select box with available absolute discounts\n\t *\n\t *  @param  string\t$page        \tPage URL where form is shown\n\t *  @param  int\t\t$selected    \tValue pre-selected\n\t *\t@param  string\t$htmlname    \tName of SELECT component. If 'none', not changeable. Example 'remise_id'.\n\t *\t@param\tint\t\t$socid\t\t\tThird party id\n\t * \t@param\tfloat\t$amount\t\t\tTotal amount available\n\t * \t@param\tstring\t$filter\t\t\tSQL filter on discounts\n\t * \t@param\tint\t\t$maxvalue\t\tMax value for lines that can be selected\n\t *  @param  string\t$more           More string to add\n\t *  @param  int     $hidelist       1=Hide list\n\t *  @param\tint\t\t$discount_type\t0 => customer discount, 1 => supplier discount\n\t *  @return\tvoid\n\t */\n\tpublic function form_remise_dispo($page, $selected, $htmlname, $socid, $amount, $filter = '', $maxvalue = 0, $more = '', $hidelist = 0, $discount_type = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setabsolutediscount\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint '<div class=\"inline-block\">';\n\t\t\tif (!empty($discount_type)) {\n\t\t\t\tif (!empty($conf->global->FACTURE_DEPOSITS_ARE_JUST_PAYMENTS)) {\n\t\t\t\t\tif (!$filter || $filter == \"fk_invoice_supplier_source IS NULL\") {\n\t\t\t\t\t\t$translationKey = 'HasAbsoluteDiscountFromSupplier'; // If we want deposit to be substracted to payments only and not to total of final invoice\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$translationKey = 'HasCreditNoteFromSupplier';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!$filter || $filter == \"fk_invoice_supplier_source IS NULL OR (description LIKE '(DEPOSIT)%' AND description NOT LIKE '(EXCESS PAID)%')\") {\n\t\t\t\t\t\t$translationKey = 'HasAbsoluteDiscountFromSupplier';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$translationKey = 'HasCreditNoteFromSupplier';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!empty($conf->global->FACTURE_DEPOSITS_ARE_JUST_PAYMENTS)) {\n\t\t\t\t\tif (!$filter || $filter == \"fk_facture_source IS NULL\") {\n\t\t\t\t\t\t$translationKey = 'CompanyHasAbsoluteDiscount'; // If we want deposit to be substracted to payments only and not to total of final invoice\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$translationKey = 'CompanyHasCreditNote';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!$filter || $filter == \"fk_facture_source IS NULL OR (description LIKE '(DEPOSIT)%' AND description NOT LIKE '(EXCESS RECEIVED)%')\") {\n\t\t\t\t\t\t$translationKey = 'CompanyHasAbsoluteDiscount';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$translationKey = 'CompanyHasCreditNote';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint $langs->trans($translationKey, price($amount, 0, $langs, 0, 0, -1, $conf->currency));\n\t\t\tif (empty($hidelist)) {\n\t\t\t\tprint ' ';\n\t\t\t}\n\t\t\tprint '</div>';\n\t\t\tif (empty($hidelist)) {\n\t\t\t\tprint '<div class=\"inline-block\" style=\"padding-right: 10px\">';\n\t\t\t\t$newfilter = 'discount_type='.intval($discount_type);\n\t\t\t\tif (!empty($discount_type)) {\n\t\t\t\t\t$newfilter .= ' AND fk_invoice_supplier IS NULL AND fk_invoice_supplier_line IS NULL'; // Supplier discounts available\n\t\t\t\t} else {\n\t\t\t\t\t$newfilter .= ' AND fk_facture IS NULL AND fk_facture_line IS NULL'; // Customer discounts available\n\t\t\t\t}\n\t\t\t\tif ($filter) {\n\t\t\t\t\t$newfilter .= ' AND ('.$filter.')';\n\t\t\t\t}\n\t\t\t\t$nbqualifiedlines = $this->select_remises($selected, $htmlname, $newfilter, $socid, $maxvalue);\n\t\t\t\tif ($nbqualifiedlines > 0) {\n\t\t\t\t\tprint ' &nbsp; <input type=\"submit\" class=\"button smallpaddingimp\" value=\"'.dol_escape_htmltag($langs->trans(\"UseLine\")).'\"';\n\t\t\t\t\tif (!empty($discount_type) && $filter && $filter != \"fk_invoice_supplier_source IS NULL OR (description LIKE '(DEPOSIT)%' AND description NOT LIKE '(EXCESS PAID)%')\") {\n\t\t\t\t\t\tprint ' title=\"'.$langs->trans(\"UseCreditNoteInInvoicePayment\").'\"';\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($discount_type) && $filter && $filter != \"fk_facture_source IS NULL OR (description LIKE '(DEPOSIT)%' AND description NOT LIKE '(EXCESS RECEIVED)%')\") {\n\t\t\t\t\t\tprint ' title=\"'.$langs->trans(\"UseCreditNoteInInvoicePayment\").'\"';\n\t\t\t\t\t}\n\n\t\t\t\t\tprint '>';\n\t\t\t\t}\n\t\t\t\tprint '</div>';\n\t\t\t}\n\t\t\tif ($more) {\n\t\t\t\tprint '<div class=\"inline-block\">';\n\t\t\t\tprint $more;\n\t\t\t\tprint '</div>';\n\t\t\t}\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\tprint $selected;\n\t\t\t} else {\n\t\t\t\tprint \"0\";\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Show forms to select a contact\n\t *\n\t *  @param\tstring\t\t$page        \tPage\n\t *  @param\tSociete\t\t$societe\t\tFilter on third party\n\t *  @param    int\t\t\t$selected    \tId contact pre-selectionne\n\t *  @param    string\t\t$htmlname    \tName of HTML select. If 'none', we just show contact link.\n\t *  @return\tvoid\n\t */\n\tpublic function form_contacts($page, $societe, $selected = '', $htmlname = 'contactid')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set_contact\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint '<table class=\"nobordernopadding\">';\n\t\t\tprint '<tr><td>';\n\t\t\tprint $this->selectcontacts($societe->id, $selected, $htmlname);\n\t\t\t$num = $this->num;\n\t\t\tif ($num == 0) {\n\t\t\t\t$addcontact = (!empty($conf->global->SOCIETE_ADDRESSES_MANAGEMENT) ? $langs->trans(\"AddContact\") : $langs->trans(\"AddContactAddress\"));\n\t\t\t\tprint '<a href=\"'.DOL_URL_ROOT.'/contact/card.php?socid='.$societe->id.'&amp;action=create&amp;backtoreferer=1\">'.$addcontact.'</a>';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '<td class=\"left\"><input type=\"submit\" class=\"button smallpaddingimp\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\tprint '</tr></table></form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\n\t\t\t\t$contact = new Contact($this->db);\n\t\t\t\t$contact->fetch($selected);\n\t\t\t\tprint $contact->getFullName($langs);\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Output html select to select thirdparty\n\t *\n\t *  @param\tstring\t$page       \tPage\n\t *  @param  string\t$selected   \tId preselected\n\t *  @param  string\t$htmlname\t\tName of HTML select\n\t *  @param  string\t$filter         Optional filters criteras. Do not use a filter coming from input of users.\n\t *\t@param\tint\t\t$showempty\t\tAdd an empty field\n\t * \t@param\tint\t\t$showtype\t\tShow third party type in combolist (customer, prospect or supplier)\n\t * \t@param\tint\t\t$forcecombo\t\tForce to use combo box\n\t *  @param\tarray\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @param  int     $nooutput       No print output. Return it only.\n\t *  @param\tarray\t$excludeids\t\tExclude IDs from the select combo\n\t *  @return\tvoid|string\n\t */\n\tpublic function form_thirdparty($page, $selected = '', $htmlname = 'socid', $filter = '', $showempty = 0, $showtype = 0, $forcecombo = 0, $events = array(), $nooutput = 0, $excludeids = array())\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$out = '';\n\t\tif ($htmlname != \"none\") {\n\t\t\t$out .= '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\t$out .= '<input type=\"hidden\" name=\"action\" value=\"set_thirdparty\">';\n\t\t\t$out .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$out .= $this->select_company($selected, $htmlname, $filter, $showempty, $showtype, $forcecombo, $events, 0, 'minwidth100', '', '', 1, array(), false, $excludeids);\n\t\t\t$out .= '<input type=\"submit\" class=\"button smallpaddingimp valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t$out .= '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\n\t\t\t\t$soc = new Societe($this->db);\n\t\t\t\t$soc->fetch($selected);\n\t\t\t\t$out .= $soc->getNomUrl($langs);\n\t\t\t} else {\n\t\t\t\t$out .= \"&nbsp;\";\n\t\t\t}\n\t\t}\n\n\t\tif ($nooutput) {\n\t\t\treturn $out;\n\t\t} else {\n\t\t\tprint $out;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Retourne la liste des devises, dans la langue de l'utilisateur\n\t *\n\t *    @param\tstring\t$selected    preselected currency code\n\t *    @param    string\t$htmlname    name of HTML select list\n\t *    @deprecated\n\t *    @return\tvoid\n\t */\n\tpublic function select_currency($selected = '', $htmlname = 'currency_id')\n\t{\n\t\t// phpcs:enable\n\t\tprint $this->selectCurrency($selected, $htmlname);\n\t}\n\n\t/**\n\t *  Retourne la liste des devises, dans la langue de l'utilisateur\n\t *\n\t *  @param\tstring\t$selected    preselected currency code\n\t *  @param  string\t$htmlname    name of HTML select list\n\t *  @param  string  $mode        0 = Add currency symbol into label, 1 = Add 3 letter iso code\n\t * \t@return\tstring\n\t */\n\tpublic function selectCurrency($selected = '', $htmlname = 'currency_id', $mode = 0)\n\t{\n\t\tglobal $conf, $langs, $user;\n\n\t\t$langs->loadCacheCurrencies('');\n\n\t\t$out = '';\n\n\t\tif ($selected == 'euro' || $selected == 'euros') {\n\t\t\t$selected = 'EUR'; // Pour compatibilite\n\t\t}\n\n\t\t$out .= '<select class=\"flat maxwidth200onsmartphone minwidth300\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\t\tforeach ($langs->cache_currencies as $code_iso => $currency) {\n\t\t\t$labeltoshow = $currency['label'];\n\t\t\tif ($mode == 1) {\n\t\t\t\t$labeltoshow .= ' <span class=\"opacitymedium\">('.$code_iso.')</span>';\n\t\t\t} else {\n\t\t\t\t$labeltoshow .= ' <span class=\"opacitymedium\">('.$langs->getCurrencySymbol($code_iso).')</span>';\n\t\t\t}\n\n\t\t\tif ($selected && $selected == $code_iso) {\n\t\t\t\t$out .= '<option value=\"'.$code_iso.'\" selected data-html=\"'.dol_escape_htmltag($labeltoshow).'\">';\n\t\t\t} else {\n\t\t\t\t$out .= '<option value=\"'.$code_iso.'\" data-html=\"'.dol_escape_htmltag($labeltoshow).'\">';\n\t\t\t}\n\t\t\t$out .= $labeltoshow;\n\t\t\t$out .= '</option>';\n\t\t}\n\t\t$out .= '</select>';\n\t\tif ($user->admin) {\n\t\t\t$out .= info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\n\t\t// Make select dynamic\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t$out .= ajax_combobox($htmlname);\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tReturn array of currencies in user language\n\t *\n\t *  @param\tstring\t$selected    preselected currency code\n\t *  @param  string\t$htmlname    name of HTML select list\n\t *  @param  integer\t$useempty    1=Add empty line\n\t *  @param string $filter Optional filters criteras (example: 'code <> x', ' in (1,3)')\n\t *  @param bool $excludeConfCurrency false  = If company current currency not in table, we add it into list. Should always be available.  true = we are in currency_rate update , we don't want to see conf->currency in select\n\t * \t@return\tstring\n\t */\n\tpublic function selectMultiCurrency($selected = '', $htmlname = 'multicurrency_code', $useempty = 0, $filter = '', $excludeConfCurrency = false)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$langs->loadCacheCurrencies(''); // Load ->cache_currencies\n\n\t\t$TCurrency = array();\n\n\t\t$sql = \"SELECT code FROM \".$this->db->prefix().\"multicurrency\";\n\t\t$sql .= \" WHERE entity IN ('\".getEntity('mutlicurrency').\"')\";\n\t\tif ($filter) {\n\t\t\t$sql .= \" AND \".$filter;\n\t\t}\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$TCurrency[$obj->code] = $obj->code;\n\t\t\t}\n\t\t}\n\n\t\t$out = '';\n\t\t$out .= '<select class=\"flat\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\t\tif ($useempty) {\n\t\t\t$out .= '<option value=\"\">&nbsp;</option>';\n\t\t}\n\t\t// If company current currency not in table, we add it into list. Should always be available.\n\t\tif (!in_array($conf->currency, $TCurrency) && !$excludeConfCurrency) {\n\t\t\t$TCurrency[$conf->currency] = $conf->currency;\n\t\t}\n\t\tif (count($TCurrency) > 0) {\n\t\t\tforeach ($langs->cache_currencies as $code_iso => $currency) {\n\t\t\t\tif (isset($TCurrency[$code_iso])) {\n\t\t\t\t\tif (!empty($selected) && $selected == $code_iso) {\n\t\t\t\t\t\t$out .= '<option value=\"'.$code_iso.'\" selected=\"selected\">';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$out .= '<option value=\"'.$code_iso.'\">';\n\t\t\t\t\t}\n\n\t\t\t\t\t$out .= $currency['label'];\n\t\t\t\t\t$out .= ' ('.$langs->getCurrencySymbol($code_iso).')';\n\t\t\t\t\t$out .= '</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$out .= '</select>';\n\t\t// Make select dynamic\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t$out .= ajax_combobox($htmlname);\n\n\t\treturn $out;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Load into the cache vat rates of a country\n\t *\n\t *  @param\tstring\t$country_code\t\tCountry code with quotes (\"'CA'\", or \"'CA,IN,...'\")\n\t *  @return\tint\t\t\t\t\t\t\tNb of loaded lines, 0 if already loaded, <0 if KO\n\t */\n\tpublic function load_cache_vatrates($country_code)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_vatrates);\n\t\tif ($num > 0) {\n\t\t\treturn $num; // Cache already loaded\n\t\t}\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$sql = \"SELECT DISTINCT t.rowid, t.code, t.taux, t.localtax1, t.localtax1_type, t.localtax2, t.localtax2_type, t.recuperableonly\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"c_tva as t, \".$this->db->prefix().\"c_country as c\";\n\t\t$sql .= \" WHERE t.fk_pays = c.rowid\";\n\t\t$sql .= \" AND t.active > 0\";\n\t\t$sql .= \" AND c.code IN (\".$this->db->sanitize($country_code, 1).\")\";\n\t\t$sql .= \" ORDER BY t.code ASC, t.taux ASC, t.recuperableonly ASC\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\tif ($num) {\n\t\t\t\tfor ($i = 0; $i < $num; $i++) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$this->cache_vatrates[$i]['rowid']\t= $obj->rowid;\n\t\t\t\t\t$this->cache_vatrates[$i]['code'] = $obj->code;\n\t\t\t\t\t$this->cache_vatrates[$i]['txtva']\t= $obj->taux;\n\t\t\t\t\t$this->cache_vatrates[$i]['nprtva'] = $obj->recuperableonly;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax1']\t    = $obj->localtax1;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax1_type']\t= $obj->localtax1_type;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax2']\t    = $obj->localtax2;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax2_type']\t= $obj->localtax1_type;\n\n\t\t\t\t\t$this->cache_vatrates[$i]['label'] = $obj->taux.'%'.($obj->code ? ' ('.$obj->code.')' : ''); // Label must contains only 0-9 , . % or *\n\t\t\t\t\t$this->cache_vatrates[$i]['labelallrates'] = $obj->taux.'/'.($obj->localtax1 ? $obj->localtax1 : '0').'/'.($obj->localtax2 ? $obj->localtax2 : '0').($obj->code ? ' ('.$obj->code.')' : ''); // Must never be used as key, only label\n\t\t\t\t\t$positiverates = '';\n\t\t\t\t\tif ($obj->taux) {\n\t\t\t\t\t\t$positiverates .= ($positiverates ? '/' : '').$obj->taux;\n\t\t\t\t\t}\n\t\t\t\t\tif ($obj->localtax1) {\n\t\t\t\t\t\t$positiverates .= ($positiverates ? '/' : '').$obj->localtax1;\n\t\t\t\t\t}\n\t\t\t\t\tif ($obj->localtax2) {\n\t\t\t\t\t\t$positiverates .= ($positiverates ? '/' : '').$obj->localtax2;\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($positiverates)) {\n\t\t\t\t\t\t$positiverates = '0';\n\t\t\t\t\t}\n\t\t\t\t\t$this->cache_vatrates[$i]['labelpositiverates'] = $positiverates.($obj->code ? ' ('.$obj->code.')' : ''); // Must never be used as key, only label\n\t\t\t\t}\n\n\t\t\t\treturn $num;\n\t\t\t} else {\n\t\t\t\t$this->error = '<span class=\"error\">'.$langs->trans(\"ErrorNoVATRateDefinedForSellerCountry\", $country_code).'</span>';\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t} else {\n\t\t\t$this->error = '<span class=\"error\">'.$this->db->error().'</span>';\n\t\t\treturn -2;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Output an HTML select vat rate.\n\t *  The name of this function should be selectVat. We keep bad name for compatibility purpose.\n\t *\n\t *  @param\tstring\t      $htmlname           Name of HTML select field\n\t *  @param  float|string  $selectedrate       Force preselected vat rate. Can be '8.5' or '8.5 (NOO)' for example. Use '' for no forcing.\n\t *  @param  Societe\t      $societe_vendeuse   Thirdparty seller\n\t *  @param  Societe\t      $societe_acheteuse  Thirdparty buyer\n\t *  @param  int\t\t      $idprod             Id product. O if unknown of NA.\n\t *  @param  int\t\t      $info_bits          Miscellaneous information on line (1 for NPR)\n\t *  @param  int|string    $type               ''=Unknown, 0=Product, 1=Service (Used if idprod not defined)\n\t *                  \t\t                  Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n\t *                  \t\t\t\t\t      Si le (pays vendeur = pays acheteur) alors la TVA par defaut=TVA du produit vendu. Fin de regle.\n\t *                  \t\t\t\t\t      Si (vendeur et acheteur dans Communaute europeenne) et bien vendu = moyen de transports neuf (auto, bateau, avion), TVA par defaut=0 (La TVA doit etre paye par l'acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n\t *                                            Si vendeur et acheteur dans Communaut\u00e9 europ\u00e9enne et acheteur= particulier alors TVA par d\u00e9faut=TVA du produit vendu. Fin de r\u00e8gle.\n\t *                                            Si vendeur et acheteur dans Communaut\u00e9 europ\u00e9enne et acheteur= entreprise alors TVA par d\u00e9faut=0. Fin de r\u00e8gle.\n\t *                  \t\t\t\t\t      Sinon la TVA proposee par defaut=0. Fin de regle.\n\t *  @param\tbool\t     $options_only\t\t  Return HTML options lines only (for ajax treatment)\n\t *  @param  int          $mode                0=Use vat rate as key in combo list, 1=Add VAT code after vat rate into key, -1=Use id of vat line as key\n\t *  @return\tstring\n\t */\n\tpublic function load_tva($htmlname = 'tauxtva', $selectedrate = '', $societe_vendeuse = '', $societe_acheteuse = '', $idprod = 0, $info_bits = 0, $type = '', $options_only = false, $mode = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf, $mysoc;\n\n\t\t$langs->load('errors');\n\n\t\t$return = '';\n\n\t\t// Define defaultnpr, defaultttx and defaultcode\n\t\t$defaultnpr = ($info_bits & 0x01);\n\t\t$defaultnpr = (preg_match('/\\*/', $selectedrate) ? 1 : $defaultnpr);\n\t\t$defaulttx = str_replace('*', '', $selectedrate);\n\t\t$defaultcode = '';\n\t\t$reg = array();\n\t\tif (preg_match('/\\((.*)\\)/', $defaulttx, $reg)) {\n\t\t\t$defaultcode = $reg[1];\n\t\t\t$defaulttx = preg_replace('/\\s*\\(.*\\)/', '', $defaulttx);\n\t\t}\n\t\t//var_dump($selectedrate.'-'.$defaulttx.'-'.$defaultnpr.'-'.$defaultcode);\n\n\t\t// Check parameters\n\t\tif (is_object($societe_vendeuse) && !$societe_vendeuse->country_code) {\n\t\t\tif ($societe_vendeuse->id == $mysoc->id) {\n\t\t\t\t$return .= '<span class=\"error\">'.$langs->trans(\"ErrorYourCountryIsNotDefined\").'</span>';\n\t\t\t} else {\n\t\t\t\t$return .= '<span class=\"error\">'.$langs->trans(\"ErrorSupplierCountryIsNotDefined\").'</span>';\n\t\t\t}\n\t\t\treturn $return;\n\t\t}\n\n\t\t//var_dump($societe_acheteuse);\n\t\t//print \"name=$name, selectedrate=$selectedrate, seller=\".$societe_vendeuse->country_code.\" buyer=\".$societe_acheteuse->country_code.\" buyer is company=\".$societe_acheteuse->isACompany().\" idprod=$idprod, info_bits=$info_bits type=$type\";\n\t\t//exit;\n\n\t\t// Define list of countries to use to search VAT rates to show\n\t\t// First we defined code_country to use to find list\n\t\tif (is_object($societe_vendeuse)) {\n\t\t\t$code_country = \"'\".$societe_vendeuse->country_code.\"'\";\n\t\t} else {\n\t\t\t$code_country = \"'\".$mysoc->country_code.\"'\"; // Pour compatibilite ascendente\n\t\t}\n\t\tif (!empty($conf->global->SERVICE_ARE_ECOMMERCE_200238EC)) {    // If option to have vat for end customer for services is on\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\t\t\tif (!isInEEC($societe_vendeuse) && (!is_object($societe_acheteuse) || (isInEEC($societe_acheteuse) && !$societe_acheteuse->isACompany()))) {\n\t\t\t\t// We also add the buyer\n\t\t\t\tif (is_numeric($type)) {\n\t\t\t\t\tif ($type == 1) { // We know product is a service\n\t\t\t\t\t\t$code_country .= \",'\".$societe_acheteuse->country_code.\"'\";\n\t\t\t\t\t}\n\t\t\t\t} elseif (!$idprod) {  // We don't know type of product\n\t\t\t\t\t$code_country .= \",'\".$societe_acheteuse->country_code.\"'\";\n\t\t\t\t} else {\n\t\t\t\t\t$prodstatic = new Product($this->db);\n\t\t\t\t\t$prodstatic->fetch($idprod);\n\t\t\t\t\tif ($prodstatic->type == Product::TYPE_SERVICE) {   // We know product is a service\n\t\t\t\t\t\t$code_country .= \",'\".$societe_acheteuse->country_code.\"'\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now we get list\n\t\t$num = $this->load_cache_vatrates($code_country); // If no vat defined, return -1 with message into this->error\n\n\t\tif ($num > 0) {\n\t\t\t// Definition du taux a pre-selectionner (si defaulttx non force et donc vaut -1 ou '')\n\t\t\tif ($defaulttx < 0 || dol_strlen($defaulttx) == 0) {\n\t\t\t\t$tmpthirdparty = new Societe($this->db);\n\t\t\t\t$defaulttx = get_default_tva($societe_vendeuse, (is_object($societe_acheteuse) ? $societe_acheteuse : $tmpthirdparty), $idprod);\n\t\t\t\t$defaultnpr = get_default_npr($societe_vendeuse, (is_object($societe_acheteuse) ? $societe_acheteuse : $tmpthirdparty), $idprod);\n\t\t\t\tif (preg_match('/\\((.*)\\)/', $defaulttx, $reg)) {\n\t\t\t\t\t$defaultcode = $reg[1];\n\t\t\t\t\t$defaulttx = preg_replace('/\\s*\\(.*\\)/', '', $defaulttx);\n\t\t\t\t}\n\t\t\t\tif (empty($defaulttx)) {\n\t\t\t\t\t$defaultnpr = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Si taux par defaut n'a pu etre determine, on prend dernier de la liste.\n\t\t\t// Comme ils sont tries par ordre croissant, dernier = plus eleve = taux courant\n\t\t\tif ($defaulttx < 0 || dol_strlen($defaulttx) == 0) {\n\t\t\t\tif (empty($conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS)) {\n\t\t\t\t\t$defaulttx = $this->cache_vatrates[$num - 1]['txtva'];\n\t\t\t\t} else {\n\t\t\t\t\t$defaulttx = ($conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS == 'none' ? '' : $conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Disabled if seller is not subject to VAT\n\t\t\t$disabled = false;\n\t\t\t$title = '';\n\t\t\tif (is_object($societe_vendeuse) && $societe_vendeuse->id == $mysoc->id && $societe_vendeuse->tva_assuj == \"0\") {\n\t\t\t\t// Override/enable VAT for expense report regardless of global setting - needed if expense report used for business expenses instead\n\t\t\t\t// of using supplier invoices (this is a very bad idea !)\n\t\t\t\tif (empty($conf->global->EXPENSEREPORT_OVERRIDE_VAT)) {\n\t\t\t\t\t$title = ' title=\"'.$langs->trans('VATIsNotUsed').'\"';\n\t\t\t\t\t$disabled = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$options_only) {\n\t\t\t\t$return .= '<select class=\"flat minwidth75imp\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\"'.($disabled ? ' disabled' : '').$title.'>';\n\t\t\t}\n\n\t\t\t$selectedfound = false;\n\t\t\tforeach ($this->cache_vatrates as $rate) {\n\t\t\t\t// Keep only 0 if seller is not subject to VAT\n\t\t\t\tif ($disabled && $rate['txtva'] != 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Define key to use into select list\n\t\t\t\t$key = $rate['txtva'];\n\t\t\t\t$key .= $rate['nprtva'] ? '*' : '';\n\t\t\t\tif ($mode > 0 && $rate['code']) {\n\t\t\t\t\t$key .= ' ('.$rate['code'].')';\n\t\t\t\t}\n\t\t\t\tif ($mode < 0) {\n\t\t\t\t\t$key = $rate['rowid'];\n\t\t\t\t}\n\n\t\t\t\t$return .= '<option value=\"'.$key.'\"';\n\t\t\t\tif (!$selectedfound) {\n\t\t\t\t\tif ($defaultcode) { // If defaultcode is defined, we used it in priority to select combo option instead of using rate+npr flag\n\t\t\t\t\t\tif ($defaultcode == $rate['code']) {\n\t\t\t\t\t\t\t$return .= ' selected';\n\t\t\t\t\t\t\t$selectedfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} elseif ($rate['txtva'] == $defaulttx && $rate['nprtva'] == $defaultnpr) {\n\t\t\t\t\t\t$return .= ' selected';\n\t\t\t\t\t\t$selectedfound = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$return .= '>';\n\t\t\t\t//if (! empty($conf->global->MAIN_VAT_SHOW_POSITIVE_RATES))\n\t\t\t\tif ($mysoc->country_code == 'IN' || !empty($conf->global->MAIN_VAT_LABEL_IS_POSITIVE_RATES)) {\n\t\t\t\t\t$return .= $rate['labelpositiverates'];\n\t\t\t\t} else {\n\t\t\t\t\t$return .= vatrate($rate['label']);\n\t\t\t\t}\n\t\t\t\t//$return.=($rate['code']?' '.$rate['code']:'');\n\t\t\t\t$return .= (empty($rate['code']) && $rate['nprtva']) ? ' *' : ''; // We show the *  (old behaviour only if new vat code is not used)\n\n\t\t\t\t$return .= '</option>';\n\t\t\t}\n\n\t\t\tif (!$options_only) {\n\t\t\t\t$return .= '</select>';\n\t\t\t}\n\t\t} else {\n\t\t\t$return .= $this->error;\n\t\t}\n\n\t\t$this->num = $num;\n\t\treturn $return;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Show a HTML widget to input a date or combo list for day, month, years and optionaly hours and minutes.\n\t *  Fields are preselected with :\n\t *            \t- set_time date (must be a local PHP server timestamp or string date with format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM')\n\t *            \t- local date in user area, if set_time is '' (so if set_time is '', output may differs when done from two different location)\n\t *            \t- Empty (fields empty), if set_time is -1 (in this case, parameter empty must also have value 1)\n\t *\n\t *\t@param\tinteger\t    $set_time \t\tPre-selected date (must be a local PHP server timestamp), -1 to keep date not preselected, '' to use current date with 00:00 hour (Parameter 'empty' must be 0 or 2).\n\t *\t@param\tstring\t\t$prefix\t\t\tPrefix for fields name\n\t *\t@param\tint\t\t\t$h\t\t\t\t1 or 2=Show also hours (2=hours on a new line), -1 has same effect but hour and minutes are prefilled with 23:59 if date is empty, 3 show hour always empty\n\t *\t@param\tint\t\t\t$m\t\t\t\t1=Show also minutes, -1 has same effect but hour and minutes are prefilled with 23:59 if date is empty, 3 show minutes always empty\n\t *\t@param\tint\t\t\t$empty\t\t\t0=Fields required, 1=Empty inputs are allowed, 2=Empty inputs are allowed for hours only\n\t *\t@param\tstring\t\t$form_name \t\tNot used\n\t *\t@param\tint\t\t\t$d\t\t\t\t1=Show days, month, years\n\t * \t@param\tint\t\t\t$addnowlink\t\tAdd a link \"Now\"\n\t * \t@param\tint\t\t\t$nooutput\t\tDo not output html string but return it\n\t * \t@param \tint\t\t\t$disabled\t\tDisable input fields\n\t *  @param  int\t\t\t$fullday        When a checkbox with this html name is on, hour and day are set with 00:00 or 23:59\n\t *  @param\tstring\t\t$addplusone\t\tAdd a link \"+1 hour\". Value must be name of another select_date field.\n\t *  @param  datetime    $adddateof      Add a link \"Date of invoice\" using the following date.\n\t *  @return\tstring|void\t\t\t\t\tNothing or string if nooutput is 1\n\t *  @deprecated\n\t *  @see    selectDate(), form_date(), select_month(), select_year(), select_dayofweek()\n\t */\n\tpublic function select_date($set_time = '', $prefix = 're', $h = 0, $m = 0, $empty = 0, $form_name = \"\", $d = 1, $addnowlink = 0, $nooutput = 0, $disabled = 0, $fullday = '', $addplusone = '', $adddateof = '')\n\t{\n\t\t// phpcs:enable\n\t\t$retstring = $this->selectDate($set_time, $prefix, $h, $m, $empty, $form_name, $d, $addnowlink, $disabled, $fullday, $addplusone, $adddateof);\n\t\tif (!empty($nooutput)) {\n\t\t\treturn $retstring;\n\t\t}\n\t\tprint $retstring;\n\t\treturn;\n\t}\n\n\t/**\n\t *  Show 2 HTML widget to input a date or combo list for day, month, years and optionaly hours and minutes.\n\t *  Fields are preselected with :\n\t *              - set_time date (must be a local PHP server timestamp or string date with format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM')\n\t *              - local date in user area, if set_time is '' (so if set_time is '', output may differs when done from two different location)\n\t *              - Empty (fields empty), if set_time is -1 (in this case, parameter empty must also have value 1)\n\t *\n\t *  @param  integer     $set_time       Pre-selected date (must be a local PHP server timestamp), -1 to keep date not preselected, '' to use current date with 00:00 hour (Parameter 'empty' must be 0 or 2).\n\t *  @param  integer     $set_time_end       Pre-selected date (must be a local PHP server timestamp), -1 to keep date not preselected, '' to use current date with 00:00 hour (Parameter 'empty' must be 0 or 2).\n\t *  @param\tstring\t\t$prefix\t\t\tPrefix for fields name\n\t *  @param\tstring\t\t$empty\t\t\t0=Fields required, 1=Empty inputs are allowed, 2=Empty inputs are allowed for hours only\n\t * \t@return string                      Html for selectDate\n\t *  @see    form_date(), select_month(), select_year(), select_dayofweek()\n\t */\n\tpublic function selectDateToDate($set_time = '', $set_time_end = '', $prefix = 're', $empty = 0)\n\t{\n\t\tglobal $langs;\n\n\t\t$ret = $this->selectDate($set_time, $prefix.'_start', 0, 0, $empty, '', 1, 0, 0, '', '', '', '', 1, '', $langs->trans(\"from\"), 'tzuserrel');\n\t\t$ret .= '<br>';\n\t\t$ret .= $this->selectDate($set_time_end, $prefix.'_end', 0, 0, $empty, '', 1, 0, 0, '', '', '', '', 1, '', $langs->trans(\"to\"), 'tzuserrel');\n\t\treturn $ret;\n\t}\n\n\t/**\n\t *  Show a HTML widget to input a date or combo list for day, month, years and optionaly hours and minutes.\n\t *  Fields are preselected with :\n\t *              - set_time date (must be a local PHP server timestamp or string date with format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM')\n\t *              - local date in user area, if set_time is '' (so if set_time is '', output may differs when done from two different location)\n\t *              - Empty (fields empty), if set_time is -1 (in this case, parameter empty must also have value 1)\n\t *\n\t *  @param  integer     $set_time       Pre-selected date (must be a local PHP server timestamp), -1 to keep date not preselected, '' to use current date with 00:00 hour (Parameter 'empty' must be 0 or 2).\n\t *  @param\tstring\t\t$prefix\t\t\tPrefix for fields name\n\t *  @param\tint\t\t\t$h\t\t\t\t1 or 2=Show also hours (2=hours on a new line), -1 has same effect but hour and minutes are prefilled with 23:59 if date is empty, 3 show hour always empty\n\t *\t@param\tint\t\t\t$m\t\t\t\t1=Show also minutes, -1 has same effect but hour and minutes are prefilled with 23:59 if date is empty, 3 show minutes always empty\n\t *\t@param\tint\t\t\t$empty\t\t\t0=Fields required, 1=Empty inputs are allowed, 2=Empty inputs are allowed for hours only\n\t *\t@param\tstring\t\t$form_name \t\tNot used\n\t *\t@param\tint\t\t\t$d\t\t\t\t1=Show days, month, years\n\t * \t@param\tint\t\t\t$addnowlink\t\tAdd a link \"Now\", 1 with server time, 2 with local computer time\n\t * \t@param \tint\t\t\t$disabled\t\tDisable input fields\n\t *  @param  int\t\t\t$fullday        When a checkbox with id #fullday is checked, hours are set with 00:00 (if value if 'fulldaystart') or 23:59 (if value is 'fulldayend')\n\t *  @param\tstring\t\t$addplusone\t\tAdd a link \"+1 hour\". Value must be name of another selectDate field.\n\t *  @param  datetime    $adddateof      Add a link \"Date of ...\" using the following date. See also $labeladddateof for the label used.\n\t *  @param  string      $openinghours   Specify hour start and hour end for the select ex 8,20\n\t *  @param  int         $stepminutes    Specify step for minutes between 1 and 30\n\t *  @param\tstring\t\t$labeladddateof Label to use for the $adddateof parameter.\n\t *  @param\tstring \t\t$placeholder    Placeholder\n\t *  @param\tmixed\t\t$gm\t\t\t\t'auto' (for backward compatibility, avoid this), 'gmt' or 'tzserver' or 'tzuserrel'\n\t * \t@return string                      Html for selectDate\n\t *  @see    form_date(), select_month(), select_year(), select_dayofweek()\n\t */\n\tpublic function selectDate($set_time = '', $prefix = 're', $h = 0, $m = 0, $empty = 0, $form_name = \"\", $d = 1, $addnowlink = 0, $disabled = 0, $fullday = '', $addplusone = '', $adddateof = '', $openinghours = '', $stepminutes = 1, $labeladddateof = '', $placeholder = '', $gm = 'auto')\n\t{\n\t\tglobal $conf, $langs;\n\n\t\tif ($gm === 'auto') {\n\t\t\t$gm = (empty($conf) ? 'tzserver' : $conf->tzuserinputkey);\n\t\t}\n\n\t\t$retstring = '';\n\n\t\tif ($prefix == '') {\n\t\t\t$prefix = 're';\n\t\t}\n\t\tif ($h == '') {\n\t\t\t$h = 0;\n\t\t}\n\t\tif ($m == '') {\n\t\t\t$m = 0;\n\t\t}\n\t\t$emptydate = 0;\n\t\t$emptyhours = 0;\n\t\tif ($stepminutes <= 0 || $stepminutes > 30) {\n\t\t\t$stepminutes = 1;\n\t\t}\n\t\tif ($empty == 1) {\n\t\t\t$emptydate = 1;\n\t\t\t$emptyhours = 1;\n\t\t}\n\t\tif ($empty == 2) {\n\t\t\t$emptydate = 0;\n\t\t\t$emptyhours = 1;\n\t\t}\n\t\t$orig_set_time = $set_time;\n\n\t\tif ($set_time === '' && $emptydate == 0) {\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t\tif ($gm == 'tzuser' || $gm == 'tzuserrel') {\n\t\t\t\t$set_time = dol_now($gm);\n\t\t\t} else {\n\t\t\t\t$set_time = dol_now('tzuser') - (getServerTimeZoneInt('now') * 3600); // set_time must be relative to PHP server timezone\n\t\t\t}\n\t\t}\n\n\t\t// Analysis of the pre-selection date\n\t\t$reg = array();\n\t\tif (preg_match('/^([0-9]+)\\-([0-9]+)\\-([0-9]+)\\s?([0-9]+)?:?([0-9]+)?/', $set_time, $reg)) {\t// deprecated usage\n\t\t\t// Date format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM:SS'\n\t\t\t$syear\t= (!empty($reg[1]) ? $reg[1] : '');\n\t\t\t$smonth = (!empty($reg[2]) ? $reg[2] : '');\n\t\t\t$sday\t= (!empty($reg[3]) ? $reg[3] : '');\n\t\t\t$shour\t= (!empty($reg[4]) ? $reg[4] : '');\n\t\t\t$smin\t= (!empty($reg[5]) ? $reg[5] : '');\n\t\t} elseif (strval($set_time) != '' && $set_time != -1) {\n\t\t\t// set_time est un timestamps (0 possible)\n\t\t\t$syear = dol_print_date($set_time, \"%Y\", $gm);\n\t\t\t$smonth = dol_print_date($set_time, \"%m\", $gm);\n\t\t\t$sday = dol_print_date($set_time, \"%d\", $gm);\n\t\t\tif ($orig_set_time != '') {\n\t\t\t\t$shour = dol_print_date($set_time, \"%H\", $gm);\n\t\t\t\t$smin = dol_print_date($set_time, \"%M\", $gm);\n\t\t\t\t$ssec = dol_print_date($set_time, \"%S\", $gm);\n\t\t\t} else {\n\t\t\t\t$shour = '';\n\t\t\t\t$smin = '';\n\t\t\t\t$ssec = '';\n\t\t\t}\n\t\t} else {\n\t\t\t// Date est '' ou vaut -1\n\t\t\t$syear = '';\n\t\t\t$smonth = '';\n\t\t\t$sday = '';\n\t\t\t$shour = !isset($conf->global->MAIN_DEFAULT_DATE_HOUR) ? ($h == -1 ? '23' : '') : $conf->global->MAIN_DEFAULT_DATE_HOUR;\n\t\t\t$smin = !isset($conf->global->MAIN_DEFAULT_DATE_MIN) ? ($h == -1 ? '59' : '') : $conf->global->MAIN_DEFAULT_DATE_MIN;\n\t\t\t$ssec = !isset($conf->global->MAIN_DEFAULT_DATE_SEC) ? ($h == -1 ? '59' : '') : $conf->global->MAIN_DEFAULT_DATE_SEC;\n\t\t}\n\t\tif ($h == 3) {\n\t\t\t$shour = '';\n\t\t}\n\t\tif ($m == 3) {\n\t\t\t$smin = '';\n\t\t}\n\n\t\t$nowgmt = dol_now('gmt');\n\t\t//var_dump(dol_print_date($nowgmt, 'dayhourinputnoreduce', 'tzuserrel'));\n\n\t\t// You can set MAIN_POPUP_CALENDAR to 'eldy' or 'jquery'\n\t\t$usecalendar = 'combo';\n\t\tif (!empty($conf->use_javascript_ajax) && (empty($conf->global->MAIN_POPUP_CALENDAR) || $conf->global->MAIN_POPUP_CALENDAR != \"none\")) {\n\t\t\t$usecalendar = ((empty($conf->global->MAIN_POPUP_CALENDAR) || $conf->global->MAIN_POPUP_CALENDAR == 'eldy') ? 'jquery' : $conf->global->MAIN_POPUP_CALENDAR);\n\t\t}\n\n\t\tif ($d) {\n\t\t\t// Show date with popup\n\t\t\tif ($usecalendar != 'combo') {\n\t\t\t\t$formated_date = '';\n\t\t\t\t//print \"e\".$set_time.\" t \".$conf->format_date_short;\n\t\t\t\tif (strval($set_time) != '' && $set_time != -1) {\n\t\t\t\t\t//$formated_date=dol_print_date($set_time,$conf->format_date_short);\n\t\t\t\t\t$formated_date = dol_print_date($set_time, $langs->trans(\"FormatDateShortInput\"), $gm); // FormatDateShortInput for dol_print_date / FormatDateShortJavaInput that is same for javascript\n\t\t\t\t}\n\n\t\t\t\t// Calendrier popup version eldy\n\t\t\t\tif ($usecalendar == \"eldy\") {\n\t\t\t\t\t// Input area to enter date manually\n\t\t\t\t\t$retstring .= '<input id=\"'.$prefix.'\" name=\"'.$prefix.'\" type=\"text\" class=\"maxwidthdate\" maxlength=\"11\" value=\"'.$formated_date.'\"';\n\t\t\t\t\t$retstring .= ($disabled ? ' disabled' : '');\n\t\t\t\t\t$retstring .= ' onChange=\"dpChangeDay(\\''.$prefix.'\\',\\''.$langs->trans(\"FormatDateShortJavaInput\").'\\'); \"'; // FormatDateShortInput for dol_print_date / FormatDateShortJavaInput that is same for javascript\n\t\t\t\t\t$retstring .= '>';\n\n\t\t\t\t\t// Icon calendar\n\t\t\t\t\t$retstringbuttom = '';\n\t\t\t\t\tif (!$disabled) {\n\t\t\t\t\t\t$retstringbuttom = '<button id=\"'.$prefix.'Button\" type=\"button\" class=\"dpInvisibleButtons\"';\n\t\t\t\t\t\t$base = DOL_URL_ROOT.'/core/';\n\t\t\t\t\t\t$retstringbuttom .= ' onClick=\"showDP(\\''.$base.'\\',\\''.$prefix.'\\',\\''.$langs->trans(\"FormatDateShortJavaInput\").'\\',\\''.$langs->defaultlang.'\\');\"';\n\t\t\t\t\t\t$retstringbuttom .= '>'.img_object($langs->trans(\"SelectDate\"), 'calendarday', 'class=\"datecallink\"').'</button>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$retstringbuttom = '<button id=\"'.$prefix.'Button\" type=\"button\" class=\"dpInvisibleButtons\">'.img_object($langs->trans(\"Disabled\"), 'calendarday', 'class=\"datecallink\"').'</button>';\n\t\t\t\t\t}\n\t\t\t\t\t$retstring = $retstringbuttom.$retstring;\n\n\t\t\t\t\t$retstring .= '<input type=\"hidden\" id=\"'.$prefix.'day\"   name=\"'.$prefix.'day\"   value=\"'.$sday.'\">'.\"\\n\";\n\t\t\t\t\t$retstring .= '<input type=\"hidden\" id=\"'.$prefix.'month\" name=\"'.$prefix.'month\" value=\"'.$smonth.'\">'.\"\\n\";\n\t\t\t\t\t$retstring .= '<input type=\"hidden\" id=\"'.$prefix.'year\"  name=\"'.$prefix.'year\"  value=\"'.$syear.'\">'.\"\\n\";\n\t\t\t\t} elseif ($usecalendar == 'jquery') {\n\t\t\t\t\tif (!$disabled) {\n\t\t\t\t\t\t// Output javascript for datepicker\n\t\t\t\t\t\t$retstring .= \"<script type='text/javascript'>\";\n\t\t\t\t\t\t$retstring .= \"$(function(){ $('#\".$prefix.\"').datepicker({\n\t\t\t\t\t\t\tdateFormat: '\".$langs->trans(\"FormatDateShortJQueryInput\").\"',\n\t\t\t\t\t\t\tautoclose: true,\n\t\t\t\t\t\t\ttodayHighlight: true,\";\n\t\t\t\t\t\tif (!empty($conf->dol_use_jmobile)) {\n\t\t\t\t\t\t\t$retstring .= \"\n\t\t\t\t\t\t\t\tbeforeShow: function (input, datePicker) {\n\t\t\t\t\t\t\t\t\tinput.disabled = true;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonClose: function (dateText, datePicker) {\n\t\t\t\t\t\t\t\t\tthis.disabled = false;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Note: We don't need monthNames, monthNamesShort, dayNames, dayNamesShort, dayNamesMin, they are set globally on datepicker component in lib_head.js.php\n\t\t\t\t\t\tif (empty($conf->global->MAIN_POPUP_CALENDAR_ON_FOCUS)) {\n\t\t\t\t\t\t\t$retstring .= \"\n\t\t\t\t\t\t\t\tshowOn: 'button',\t/* both has problem with autocompletion */\n\t\t\t\t\t\t\t\tbuttonImage: '\".DOL_URL_ROOT.\"/theme/\".dol_escape_js($conf->theme).\"/img/object_calendarday.png',\n\t\t\t\t\t\t\t\tbuttonImageOnly: true\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$retstring .= \"\n\t\t\t\t\t\t\t}) });\";\n\t\t\t\t\t\t$retstring .= \"</script>\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Zone de saisie manuelle de la date\n\t\t\t\t\t$retstring .= '<div class=\"nowrap inline-block divfordateinput\">';\n\t\t\t\t\t$retstring .= '<input id=\"'.$prefix.'\" name=\"'.$prefix.'\" type=\"text\" class=\"maxwidthdate\" maxlength=\"11\" value=\"'.$formated_date.'\"';\n\t\t\t\t\t$retstring .= ($disabled ? ' disabled' : '');\n\t\t\t\t\t$retstring .= ($placeholder ? ' placeholder=\"'.dol_escape_htmltag($placeholder).'\"' : '');\n\t\t\t\t\t$retstring .= ' onChange=\"dpChangeDay(\\''.dol_escape_js($prefix).'\\',\\''.dol_escape_js($langs->trans(\"FormatDateShortJavaInput\")).'\\'); \"'; // FormatDateShortInput for dol_print_date / FormatDateShortJavaInput that is same for javascript\n\t\t\t\t\t$retstring .= '>';\n\n\t\t\t\t\t// Icone calendrier\n\t\t\t\t\tif (!$disabled) {\n\t\t\t\t\t\t/* Not required. Managed by option buttonImage of jquery\n\t\t\t\t\t\t$retstring.=img_object($langs->trans(\"SelectDate\"),'calendarday','id=\"'.$prefix.'id\" class=\"datecallink\"');\n\t\t\t\t\t\t$retstring.=\"<script type='text/javascript'>\";\n\t\t\t\t\t\t$retstring.=\"jQuery(document).ready(function() {\";\n\t\t\t\t\t\t$retstring.='\tjQuery(\"#'.$prefix.'id\").click(function() {';\n\t\t\t\t\t\t$retstring.=\"    \tjQuery('#\".$prefix.\"').focus();\";\n\t\t\t\t\t\t$retstring.='    });';\n\t\t\t\t\t\t$retstring.='});';\n\t\t\t\t\t\t$retstring.=\"</script>\";*/\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$retstringbutton = '<button id=\"'.$prefix.'Button\" type=\"button\" class=\"dpInvisibleButtons\">'.img_object($langs->trans(\"Disabled\"), 'calendarday', 'class=\"datecallink\"').'</button>';\n\t\t\t\t\t\t$retsring = $retstringbutton.$retstring;\n\t\t\t\t\t}\n\n\t\t\t\t\t$retstring .= '</div>';\n\t\t\t\t\t$retstring .= '<input type=\"hidden\" id=\"'.$prefix.'day\"   name=\"'.$prefix.'day\"   value=\"'.$sday.'\">'.\"\\n\";\n\t\t\t\t\t$retstring .= '<input type=\"hidden\" id=\"'.$prefix.'month\" name=\"'.$prefix.'month\" value=\"'.$smonth.'\">'.\"\\n\";\n\t\t\t\t\t$retstring .= '<input type=\"hidden\" id=\"'.$prefix.'year\"  name=\"'.$prefix.'year\"  value=\"'.$syear.'\">'.\"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\t$retstring .= \"Bad value of MAIN_POPUP_CALENDAR\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Show date with combo selects\n\t\t\t\t// Day\n\t\t\t\t$retstring .= '<select'.($disabled ? ' disabled' : '').' class=\"flat valignmiddle maxwidth50imp\" id=\"'.$prefix.'day\" name=\"'.$prefix.'day\">';\n\n\t\t\t\tif ($emptydate || $set_time == -1) {\n\t\t\t\t\t$retstring .= '<option value=\"0\" selected>&nbsp;</option>';\n\t\t\t\t}\n\n\t\t\t\tfor ($day = 1; $day <= 31; $day++) {\n\t\t\t\t\t$retstring .= '<option value=\"'.$day.'\"'.($day == $sday ? ' selected' : '').'>'.$day.'</option>';\n\t\t\t\t}\n\n\t\t\t\t$retstring .= \"</select>\";\n\n\t\t\t\t$retstring .= '<select'.($disabled ? ' disabled' : '').' class=\"flat valignmiddle maxwidth75imp\" id=\"'.$prefix.'month\" name=\"'.$prefix.'month\">';\n\t\t\t\tif ($emptydate || $set_time == -1) {\n\t\t\t\t\t$retstring .= '<option value=\"0\" selected>&nbsp;</option>';\n\t\t\t\t}\n\n\t\t\t\t// Month\n\t\t\t\tfor ($month = 1; $month <= 12; $month++) {\n\t\t\t\t\t$retstring .= '<option value=\"'.$month.'\"'.($month == $smonth ? ' selected' : '').'>';\n\t\t\t\t\t$retstring .= dol_print_date(mktime(12, 0, 0, $month, 1, 2000), \"%b\");\n\t\t\t\t\t$retstring .= \"</option>\";\n\t\t\t\t}\n\t\t\t\t$retstring .= \"</select>\";\n\n\t\t\t\t// Year\n\t\t\t\tif ($emptydate || $set_time == -1) {\n\t\t\t\t\t$retstring .= '<input'.($disabled ? ' disabled' : '').' placeholder=\"'.dol_escape_htmltag($langs->trans(\"Year\")).'\" class=\"flat maxwidth50imp valignmiddle\" type=\"number\" min=\"0\" max=\"3000\" maxlength=\"4\" id=\"'.$prefix.'year\" name=\"'.$prefix.'year\" value=\"'.$syear.'\">';\n\t\t\t\t} else {\n\t\t\t\t\t$retstring .= '<select'.($disabled ? ' disabled' : '').' class=\"flat valignmiddle maxwidth75imp\" id=\"'.$prefix.'year\" name=\"'.$prefix.'year\">';\n\n\t\t\t\t\tfor ($year = $syear - 10; $year < $syear + 10; $year++) {\n\t\t\t\t\t\t$retstring .= '<option value=\"'.$year.'\"'.($year == $syear ? ' selected' : '').'>'.$year.'</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$retstring .= \"</select>\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($d && $h) {\n\t\t\t$retstring .= ($h == 2 ? '<br>' : ' ');\n\t\t\t$retstring .= '<span class=\"nowraponall\">';\n\t\t}\n\n\t\tif ($h) {\n\t\t\t$hourstart = 0;\n\t\t\t$hourend = 24;\n\t\t\tif ($openinghours != '') {\n\t\t\t\t$openinghours = explode(',', $openinghours);\n\t\t\t\t$hourstart = $openinghours[0];\n\t\t\t\t$hourend = $openinghours[1];\n\t\t\t\tif ($hourend < $hourstart) {\n\t\t\t\t\t$hourend = $hourstart;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Show hour\n\t\t\t$retstring .= '<select'.($disabled ? ' disabled' : '').' class=\"flat valignmiddle maxwidth50 '.($fullday ? $fullday.'hour' : '').'\" id=\"'.$prefix.'hour\" name=\"'.$prefix.'hour\">';\n\t\t\tif ($emptyhours) {\n\t\t\t\t$retstring .= '<option value=\"-1\">&nbsp;</option>';\n\t\t\t}\n\t\t\tfor ($hour = $hourstart; $hour < $hourend; $hour++) {\n\t\t\t\tif (strlen($hour) < 2) {\n\t\t\t\t\t$hour = \"0\".$hour;\n\t\t\t\t}\n\t\t\t\t$retstring .= '<option value=\"'.$hour.'\"'.(($hour == $shour) ? ' selected' : '').'>'.$hour;\n\t\t\t\t//$retstring .= (empty($conf->dol_optimize_smallscreen) ? '' : 'H');\n\t\t\t\t$retstring .= '</option>';\n\t\t\t}\n\t\t\t$retstring .= '</select>';\n\t\t\t//if ($m && empty($conf->dol_optimize_smallscreen)) $retstring .= \":\";\n\t\t\tif ($m) {\n\t\t\t\t$retstring .= \":\";\n\t\t\t}\n\t\t}\n\n\t\tif ($m) {\n\t\t\t// Show minutes\n\t\t\t$retstring .= '<select'.($disabled ? ' disabled' : '').' class=\"flat valignmiddle maxwidth50 '.($fullday ? $fullday.'min' : '').'\" id=\"'.$prefix.'min\" name=\"'.$prefix.'min\">';\n\t\t\tif ($emptyhours) {\n\t\t\t\t$retstring .= '<option value=\"-1\">&nbsp;</option>';\n\t\t\t}\n\t\t\tfor ($min = 0; $min < 60; $min += $stepminutes) {\n\t\t\t\tif (strlen($min) < 2) {\n\t\t\t\t\t$min = \"0\".$min;\n\t\t\t\t}\n\t\t\t\t$retstring .= '<option value=\"'.$min.'\"'.(($min == $smin) ? ' selected' : '').'>'.$min.(empty($conf->dol_optimize_smallscreen) ? '' : '').'</option>';\n\t\t\t}\n\t\t\t$retstring .= '</select>';\n\n\t\t\t$retstring .= '<input type=\"hidden\" name=\"'.$prefix.'sec\" value=\"'.$ssec.'\">';\n\t\t}\n\n\t\tif ($d && $h) {\n\t\t\t$retstring .= '</span>';\n\t\t}\n\n\t\t// Add a \"Now\" link\n\t\tif ($conf->use_javascript_ajax && $addnowlink) {\n\t\t\t// Script which will be inserted in the onClick of the \"Now\" link\n\t\t\t$reset_scripts = \"\";\n\t\t\tif ($addnowlink == 2) { // local computer time\n\t\t\t\t// pad add leading 0 on numbers\n\t\t\t\t$reset_scripts .= \"Number.prototype.pad = function(size) {\n                        var s = String(this);\n                        while (s.length < (size || 2)) {s = '0' + s;}\n                        return s;\n                    };\n                    var d = new Date();\";\n\t\t\t}\n\n\t\t\t// Generate the date part, depending on the use or not of the javascript calendar\n\t\t\tif ($addnowlink == 1) { // server time expressed in user time setup\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'\\').val(\\''.dol_print_date($nowgmt, 'day', 'tzuserrel').'\\');';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'day\\').val(\\''.dol_print_date($nowgmt, '%d', 'tzuserrel').'\\');';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'month\\').val(\\''.dol_print_date($nowgmt, '%m', 'tzuserrel').'\\');';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'year\\').val(\\''.dol_print_date($nowgmt, '%Y', 'tzuserrel').'\\');';\n\t\t\t} elseif ($addnowlink == 2) {\n\t\t\t\t/* Disabled because the output does not use the string format defined by FormatDateShort key to forge the value into #prefix.\n\t\t\t\t * This break application for foreign languages.\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'\\').val(d.toLocaleDateString(\\''.str_replace('_', '-', $langs->defaultlang).'\\'));';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'day\\').val(d.getDate().pad());';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'month\\').val(parseInt(d.getMonth().pad()) + 1);';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'year\\').val(d.getFullYear());';\n\t\t\t\t*/\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'\\').val(\\''.dol_print_date($nowgmt, 'day', 'tzuserrel').'\\');';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'day\\').val(\\''.dol_print_date($nowgmt, '%d', 'tzuserrel').'\\');';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'month\\').val(\\''.dol_print_date($nowgmt, '%m', 'tzuserrel').'\\');';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'year\\').val(\\''.dol_print_date($nowgmt, '%Y', 'tzuserrel').'\\');';\n\t\t\t}\n\t\t\t/*if ($usecalendar == \"eldy\")\n\t\t\t{\n\t\t\t\t$base=DOL_URL_ROOT.'/core/';\n\t\t\t\t$reset_scripts .= 'resetDP(\\''.$base.'\\',\\''.$prefix.'\\',\\''.$langs->trans(\"FormatDateShortJavaInput\").'\\',\\''.$langs->defaultlang.'\\');';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$reset_scripts .= 'this.form.elements[\\''.$prefix.'day\\'].value=formatDate(new Date(), \\'d\\'); ';\n\t\t\t\t$reset_scripts .= 'this.form.elements[\\''.$prefix.'month\\'].value=formatDate(new Date(), \\'M\\'); ';\n\t\t\t\t$reset_scripts .= 'this.form.elements[\\''.$prefix.'year\\'].value=formatDate(new Date(), \\'yyyy\\'); ';\n\t\t\t}*/\n\t\t\t// Update the hour part\n\t\t\tif ($h) {\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t}\n\t\t\t\t//$reset_scripts .= 'this.form.elements[\\''.$prefix.'hour\\'].value=formatDate(new Date(), \\'HH\\'); ';\n\t\t\t\tif ($addnowlink == 1) {\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'hour\\').val(\\''.dol_print_date($nowgmt, '%H', 'tzuserrel').'\\');';\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'hour\\').change();';\n\t\t\t\t} elseif ($addnowlink == 2) {\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'hour\\').val(d.getHours().pad());';\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'hour\\').change();';\n\t\t\t\t}\n\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= ' } ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Update the minute part\n\t\t\tif ($m) {\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t}\n\t\t\t\t//$reset_scripts .= 'this.form.elements[\\''.$prefix.'min\\'].value=formatDate(new Date(), \\'mm\\'); ';\n\t\t\t\tif ($addnowlink == 1) {\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'min\\').val(\\''.dol_print_date($nowgmt, '%M', 'tzuserrel').'\\');';\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'min\\').change();';\n\t\t\t\t} elseif ($addnowlink == 2) {\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'min\\').val(d.getMinutes().pad());';\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'min\\').change();';\n\t\t\t\t}\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= ' } ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If reset_scripts is not empty, print the link with the reset_scripts in the onClick\n\t\t\tif ($reset_scripts && empty($conf->dol_optimize_smallscreen)) {\n\t\t\t\t$retstring .= ' <button class=\"dpInvisibleButtons datenowlink\" id=\"'.$prefix.'ButtonNow\" type=\"button\" name=\"_useless\" value=\"now\" onClick=\"'.$reset_scripts.'\">';\n\t\t\t\t$retstring .= $langs->trans(\"Now\");\n\t\t\t\t$retstring .= '</button> ';\n\t\t\t}\n\t\t}\n\n\t\t// Add a \"Plus one hour\" link\n\t\tif ($conf->use_javascript_ajax && $addplusone) {\n\t\t\t// Script which will be inserted in the onClick of the \"Add plusone\" link\n\t\t\t$reset_scripts = \"\";\n\n\t\t\t// Generate the date part, depending on the use or not of the javascript calendar\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'\\').val(\\''.dol_print_date($nowgmt, 'dayinputnoreduce', 'tzuserrel').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'day\\').val(\\''.dol_print_date($nowgmt, '%d', 'tzuserrel').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'month\\').val(\\''.dol_print_date($nowgmt, '%m', 'tzuserrel').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'year\\').val(\\''.dol_print_date($nowgmt, '%Y', 'tzuserrel').'\\');';\n\t\t\t// Update the hour part\n\t\t\tif ($h) {\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t}\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'hour\\').val(\\''.dol_print_date($nowgmt, '%H', 'tzuserrel').'\\');';\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= ' } ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Update the minute part\n\t\t\tif ($m) {\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t}\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'min\\').val(\\''.dol_print_date($nowgmt, '%M', 'tzuserrel').'\\');';\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= ' } ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If reset_scripts is not empty, print the link with the reset_scripts in the onClick\n\t\t\tif ($reset_scripts && empty($conf->dol_optimize_smallscreen)) {\n\t\t\t\t$retstring .= ' <button class=\"dpInvisibleButtons datenowlink\" id=\"'.$prefix.'ButtonPlusOne\" type=\"button\" name=\"_useless2\" value=\"plusone\" onClick=\"'.$reset_scripts.'\">';\n\t\t\t\t$retstring .= $langs->trans(\"DateStartPlusOne\");\n\t\t\t\t$retstring .= '</button> ';\n\t\t\t}\n\t\t}\n\n\t\t// Add a link to set data\n\t\tif ($conf->use_javascript_ajax && $adddateof) {\n\t\t\t$tmparray = dol_getdate($adddateof);\n\t\t\tif (empty($labeladddateof)) {\n\t\t\t\t$labeladddateof = $langs->trans(\"DateInvoice\");\n\t\t\t}\n\t\t\t$retstring .= ' - <button class=\"dpInvisibleButtons datenowlink\" id=\"dateofinvoice\" type=\"button\" name=\"_dateofinvoice\" value=\"now\" onclick=\"console.log(\\'Click on now link\\'); jQuery(\\'#re\\').val(\\''.dol_print_date($adddateof, 'dayinputnoreduce').'\\');jQuery(\\'#reday\\').val(\\''.$tmparray['mday'].'\\');jQuery(\\'#remonth\\').val(\\''.$tmparray['mon'].'\\');jQuery(\\'#reyear\\').val(\\''.$tmparray['year'].'\\');\">'.$labeladddateof.'</a>';\n\t\t}\n\n\t\treturn $retstring;\n\t}\n\n\t/**\n\t * selectTypeDuration\n\t *\n\t * @param   string   \t$prefix     \tPrefix\n\t * @param   string   \t$selected   \tSelected duration type\n\t * @param\tarray\t\t$excludetypes\tArray of duration types to exclude. Example array('y', 'm')\n\t * @return  string      \t         \tHTML select string\n\t */\n\tpublic function selectTypeDuration($prefix, $selected = 'i', $excludetypes = array())\n\t{\n\t\tglobal $langs;\n\n\t\t$TDurationTypes = array(\n\t\t\t'y'=>$langs->trans('Years'),\n\t\t\t'm'=>$langs->trans('Month'),\n\t\t\t'w'=>$langs->trans('Weeks'),\n\t\t\t'd'=>$langs->trans('Days'),\n\t\t\t'h'=>$langs->trans('Hours'),\n\t\t\t'i'=>$langs->trans('Minutes')\n\t\t);\n\n\t\t// Removed undesired duration types\n\t\tforeach ($excludetypes as $value) {\n\t\t\tunset($TDurationTypes[$value]);\n\t\t}\n\n\t\t$retstring = '<select class=\"flat minwidth75 maxwidth100\" id=\"select_'.$prefix.'type_duration\" name=\"'.$prefix.'type_duration\">';\n\t\tforeach ($TDurationTypes as $key => $typeduration) {\n\t\t\t$retstring .= '<option value=\"'.$key.'\"';\n\t\t\tif ($key == $selected) {\n\t\t\t\t$retstring .= \" selected\";\n\t\t\t}\n\t\t\t$retstring .= \">\".$typeduration.\"</option>\";\n\t\t}\n\t\t$retstring .= \"</select>\";\n\n\t\t$retstring .= ajax_combobox('select_'.$prefix.'type_duration');\n\n\t\treturn $retstring;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Function to show a form to select a duration on a page\n\t *\n\t *\t@param\tstring\t\t$prefix   \t\tPrefix for input fields\n\t *\t@param  int\t\t\t$iSecond  \t\tDefault preselected duration (number of seconds or '')\n\t * \t@param\tint\t\t\t$disabled       Disable the combo box\n\t * \t@param\tstring\t\t$typehour\t\tIf 'select' then input hour and input min is a combo,\n\t *\t\t\t\t\t\t            \tIf 'text' input hour is in text and input min is a text,\n\t *\t\t\t\t\t\t            \tIf 'textselect' input hour is in text and input min is a combo\n\t *  @param\tinteger\t\t$minunderhours\tIf 1, show minutes selection under the hours\n\t * \t@param\tint\t\t\t$nooutput\t\tDo not output html string but return it\n\t *  @return\tstring|void\n\t */\n\tpublic function select_duration($prefix, $iSecond = '', $disabled = 0, $typehour = 'select', $minunderhours = 0, $nooutput = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$retstring = '';\n\n\t\t$hourSelected = 0;\n\t\t$minSelected = 0;\n\n\t\t// Hours\n\t\tif ($iSecond != '') {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\n\t\t\t$hourSelected = convertSecondToTime($iSecond, 'allhour');\n\t\t\t$minSelected = convertSecondToTime($iSecond, 'min');\n\t\t}\n\n\t\tif ($typehour == 'select') {\n\t\t\t$retstring .= '<select class=\"flat\" id=\"select_'.$prefix.'hour\" name=\"'.$prefix.'hour\"'.($disabled ? ' disabled' : '').'>';\n\t\t\tfor ($hour = 0; $hour < 25; $hour++) {\t// For a duration, we allow 24 hours\n\t\t\t\t$retstring .= '<option value=\"'.$hour.'\"';\n\t\t\t\tif ($hourSelected == $hour) {\n\t\t\t\t\t$retstring .= \" selected\";\n\t\t\t\t}\n\t\t\t\t$retstring .= \">\".$hour.\"</option>\";\n\t\t\t}\n\t\t\t$retstring .= \"</select>\";\n\t\t} elseif ($typehour == 'text' || $typehour == 'textselect') {\n\t\t\t$retstring .= '<input placeholder=\"'.$langs->trans('HourShort').'\" type=\"number\" min=\"0\" name=\"'.$prefix.'hour\"'.($disabled ? ' disabled' : '').' class=\"flat maxwidth50 inputhour\" value=\"'.(($hourSelected != '') ? ((int) $hourSelected) : '').'\">';\n\t\t} else {\n\t\t\treturn 'BadValueForParameterTypeHour';\n\t\t}\n\n\t\tif ($typehour != 'text') {\n\t\t\t$retstring .= ' '.$langs->trans('HourShort');\n\t\t} else {\n\t\t\t$retstring .= '<span class=\"hideonsmartphone\">:</span>';\n\t\t}\n\n\t\t// Minutes\n\t\tif ($minunderhours) {\n\t\t\t$retstring .= '<br>';\n\t\t} else {\n\t\t\t$retstring .= '<span class=\"hideonsmartphone\">&nbsp;</span>';\n\t\t}\n\n\t\tif ($typehour == 'select' || $typehour == 'textselect') {\n\t\t\t$retstring .= '<select class=\"flat\" id=\"select_'.$prefix.'min\" name=\"'.$prefix.'min\"'.($disabled ? ' disabled' : '').'>';\n\t\t\tfor ($min = 0; $min <= 55; $min = $min + 5) {\n\t\t\t\t$retstring .= '<option value=\"'.$min.'\"';\n\t\t\t\tif ($minSelected == $min) {\n\t\t\t\t\t$retstring .= ' selected';\n\t\t\t\t}\n\t\t\t\t$retstring .= '>'.$min.'</option>';\n\t\t\t}\n\t\t\t$retstring .= \"</select>\";\n\t\t} elseif ($typehour == 'text') {\n\t\t\t$retstring .= '<input placeholder=\"'.$langs->trans('MinuteShort').'\" type=\"number\" min=\"0\" name=\"'.$prefix.'min\"'.($disabled ? ' disabled' : '').' class=\"flat maxwidth50 inputminute\" value=\"'.(($minSelected != '') ? ((int) $minSelected) : '').'\">';\n\t\t}\n\n\t\tif ($typehour != 'text') {\n\t\t\t$retstring .= ' '.$langs->trans('MinuteShort');\n\t\t}\n\n\t\t//$retstring.=\"&nbsp;\";\n\n\t\tif (!empty($nooutput)) {\n\t\t\treturn $retstring;\n\t\t}\n\n\t\tprint $retstring;\n\t\treturn;\n\t}\n\n\t/**\n\t *  Return list of tickets in Ajax if Ajax activated or go to selectTicketsList\n\t *\n\t *  @param\t\tint\t\t\t$selected\t\t\t\tPreselected tickets\n\t *  @param\t\tstring\t\t$htmlname\t\t\t\tName of HTML select field (must be unique in page).\n\t *  @param  \tstring\t\t$filtertype     \t\tTo add a filter\n\t *  @param\t\tint\t\t\t$limit\t\t\t\t\tLimit on number of returned lines\n\t *  @param\t\tint\t\t\t$status\t\t\t\t\tTicket status\n\t *  @param\t\tstring\t\t$selected_input_value\tValue of preselected input text (for use with ajax)\n\t *  @param\t\tint\t\t\t$hidelabel\t\t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n\t *  @param\t\tarray\t\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t *  @param      int\t\t\t$socid\t\t\t\t\tThirdparty Id (to get also price dedicated to this customer)\n\t *  @param\t\tstring\t\t$showempty\t\t\t\t'' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t\t$forcecombo\t\t\t\tForce to use combo box\n\t *  @param      string      $morecss                Add more css on select\n\t *  @param \t\tarray \t\t$selected_combinations \tSelected combinations. Format: array([attrid] => attrval, [...])\n\t *  @param\t\tstring\t\t$nooutput\t\t\t\tNo print, return the output into a string\n\t *  @return\t\tvoid|string\n\t */\n\tpublic function selectTickets($selected = '', $htmlname = 'ticketid', $filtertype = '', $limit = 0, $status = 1, $selected_input_value = '', $hidelabel = 0, $ajaxoptions = array(), $socid = 0, $showempty = '1', $forcecombo = 0, $morecss = '', $selected_combinations = null, $nooutput = 0)\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\n\t\t// check parameters\n\t\tif (is_null($ajaxoptions)) $ajaxoptions = array();\n\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->TICKET_USE_SEARCH_TO_SELECT)) {\n\t\t\t$placeholder = '';\n\n\t\t\tif ($selected && empty($selected_input_value)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/ticket/class/ticket.class.php';\n\t\t\t\t$tickettmpselect = new Ticket($this->db);\n\t\t\t\t$tickettmpselect->fetch($selected);\n\t\t\t\t$selected_input_value = $tickettmpselect->ref;\n\t\t\t\tunset($tickettmpselect);\n\t\t\t}\n\n\t\t\t$out .= ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/ticket/ajax/tickets.php', $urloption, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT, 1, $ajaxoptions);\n\n\t\t\tif (empty($hidelabel)) $out .= $langs->trans(\"RefOrLabel\").' : ';\n\t\t\telseif ($hidelabel > 1) {\n\t\t\t\t$placeholder = ' placeholder=\"'.$langs->trans(\"RefOrLabel\").'\"';\n\t\t\t\tif ($hidelabel == 2) {\n\t\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '<input type=\"text\" class=\"minwidth100\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.$placeholder.' '.(!empty($conf->global->PRODUCT_SEARCH_AUTOFOCUS) ? 'autofocus' : '').' />';\n\t\t\tif ($hidelabel == 3) {\n\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t}\n\t\t} else {\n\t\t\t$out .= $this->selectTicketsList($selected, $htmlname, $filtertype, $limit, $status, 0, $socid, $showempty, $forcecombo, $morecss);\n\t\t}\n\n\t\tif (empty($nooutput)) print $out;\n\t\telse return $out;\n\t}\n\n\n\t/**\n\t *\tReturn list of tickets.\n\t *  Called by selectTickets.\n\t *\n\t *\t@param      int\t\t$selected           Preselected ticket\n\t *\t@param      string\t$htmlname           Name of select html\n\t *  @param\t\tstring\t$filtertype         Filter on ticket type\n\t *\t@param      int\t\t$limit              Limit on number of returned lines\n\t * \t@param      string\t$filterkey          Filter on ticket ref or subject\n\t *\t@param\t\tint\t\t$status             Ticket status\n\t *  @param      int\t\t$outputmode         0=HTML select string, 1=Array\n\t *  @param\t\tstring\t$showempty\t\t    '' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t$forcecombo\t\t    Force to use combo box\n\t *  @param      string  $morecss            Add more css on select\n\t *  @return     array    \t\t\t\t    Array of keys for json\n\t */\n\tpublic function selectTicketsList($selected = '', $htmlname = 'ticketid', $filtertype = '', $limit = 20, $filterkey = '', $status = 1, $outputmode = 0, $showempty = '1', $forcecombo = 0, $morecss = '')\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\t\t$outarray = array();\n\n\t\t$selectFields = \" p.rowid, p.ref, p.message\";\n\n\t\t$sql = \"SELECT \";\n\t\t$sql .= $selectFields;\n\t\t$sql .= \" FROM \".$this->db->prefix().\"ticket as p\";\n\t\t$sql .= ' WHERE p.entity IN ('.getEntity('ticket').')';\n\n\t\t// Add criteria on ref/label\n\t\tif ($filterkey != '') {\n\t\t\t$sql .= ' AND (';\n\t\t\t$prefix = empty($conf->global->TICKET_DONOTSEARCH_ANYWHERE) ? '%' : ''; // Can use index if PRODUCT_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i = 0;\n\t\t\tif (count($scrit) > 1) $sql .= \"(\";\n\t\t\tforeach ($scrit as $crit) {\n\t\t\t\tif ($i > 0) $sql .= \" AND \";\n\t\t\t\t$sql .= \"(p.ref LIKE '\".$this->db->escape($prefix.$crit).\"%' OR p.subject LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t$sql .= \")\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) $sql .= \")\";\n\t\t\t$sql .= ')';\n\t\t}\n\n\t\t$sql .= $this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\tdol_syslog(get_class($this).\"::selectTicketsList search tickets\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/ticket/class/ticket.class.php';\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/ticket.lib.php';\n\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t$events = null;\n\n\t\t\tif (!$forcecombo) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events, $conf->global->TICKET_USE_SEARCH_TO_SELECT);\n\t\t\t}\n\n\t\t\t$out .= '<select class=\"flat'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\n\t\t\t$textifempty = '';\n\t\t\t// Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'.\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (!empty($conf->global->TICKET_USE_SEARCH_TO_SELECT)) {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) $textifempty = $langs->trans($showempty);\n\t\t\t\telse $textifempty .= $langs->trans(\"All\");\n\t\t\t} else {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) $textifempty = $langs->trans($showempty);\n\t\t\t}\n\t\t\tif ($showempty) $out .= '<option value=\"0\" selected>'.$textifempty.'</option>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($num && $i < $num) {\n\t\t\t\t$opt = '';\n\t\t\t\t$optJson = array();\n\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\t$this->constructTicketListOption($objp, $opt, $optJson, $selected, $filterkey);\n\t\t\t\t// Add new entry\n\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t$out .= $opt;\n\t\t\t\tarray_push($outarray, $optJson);\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$out .= '</select>';\n\n\t\t\t$this->db->free($result);\n\n\t\t\tif (empty($outputmode)) return $out;\n\t\t\treturn $outarray;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t * constructTicketListOption.\n\t * This define value for &$opt and &$optJson.\n\t *\n\t * @param \tresource\t$objp\t\t\t    Result set of fetch\n\t * @param \tstring\t\t$opt\t\t\t    Option (var used for returned value in string option format)\n\t * @param \tstring\t\t$optJson\t\t    Option (var used for returned value in json format)\n\t * @param \tstring\t\t$selected\t\t    Preselected value\n\t * @param   string      $filterkey          Filter key to highlight\n\t * @return\tvoid\n\t */\n\tprotected function constructTicketListOption(&$objp, &$opt, &$optJson, $selected, $filterkey = '')\n\t{\n\t\t$outkey = '';\n\t\t$outval = '';\n\t\t$outref = '';\n\t\t$outlabel = '';\n\t\t$outtype = '';\n\n\t\t$label = $objp->label;\n\n\t\t$outkey = $objp->rowid;\n\t\t$outref = $objp->ref;\n\t\t$outlabel = $objp->label;\n\t\t$outtype = $objp->fk_product_type;\n\n\t\t$opt = '<option value=\"'.$objp->rowid.'\"';\n\t\t$opt .= ($objp->rowid == $selected) ? ' selected' : '';\n\t\t$opt .= '>';\n\t\t$opt .= $objp->ref;\n\t\t$objRef = $objp->ref;\n\t\tif (!empty($filterkey) && $filterkey != '') $objRef = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $objRef, 1);\n\t\t$outval .= $objRef;\n\n\t\t$opt .= \"</option>\\n\";\n\t\t$optJson = array('key'=>$outkey, 'value'=>$outref, 'type'=>$outtypem);\n\t}\n\n\t/**\n\t *  Return list of projects in Ajax if Ajax activated or go to selectTicketsList\n\t *\n\t *  @param\t\tint\t\t\t$selected\t\t\t\tPreselected tickets\n\t *  @param\t\tstring\t\t$htmlname\t\t\t\tName of HTML select field (must be unique in page).\n\t *  @param  \tstring\t\t$filtertype     \t\tTo add a filter\n\t *  @param\t\tint\t\t\t$limit\t\t\t\t\tLimit on number of returned lines\n\t *  @param\t\tint\t\t\t$status\t\t\t\t\tTicket status\n\t *  @param\t\tstring\t\t$selected_input_value\tValue of preselected input text (for use with ajax)\n\t *  @param\t\tint\t\t\t$hidelabel\t\t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n\t *  @param\t\tarray\t\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t *  @param      int\t\t\t$socid\t\t\t\t\tThirdparty Id (to get also price dedicated to this customer)\n\t *  @param\t\tstring\t\t$showempty\t\t\t\t'' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t\t$forcecombo\t\t\t\tForce to use combo box\n\t *  @param      string      $morecss                Add more css on select\n\t *  @param \t\tarray \t\t$selected_combinations \tSelected combinations. Format: array([attrid] => attrval, [...])\n\t *  @param\t\tstring\t\t$nooutput\t\t\t\tNo print, return the output into a string\n\t *  @return\t\tvoid|string\n\t */\n\tpublic function selectProjects($selected = '', $htmlname = 'projectid', $filtertype = '', $limit = 0, $status = 1, $selected_input_value = '', $hidelabel = 0, $ajaxoptions = array(), $socid = 0, $showempty = '1', $forcecombo = 0, $morecss = '', $selected_combinations = null, $nooutput = 0)\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\n\t\t// check parameters\n\t\tif (is_null($ajaxoptions)) $ajaxoptions = array();\n\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->TICKET_USE_SEARCH_TO_SELECT)) {\n\t\t\t$placeholder = '';\n\n\t\t\tif ($selected && empty($selected_input_value)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n\t\t\t\t$projecttmpselect = new Project($this->db);\n\t\t\t\t$projecttmpselect->fetch($selected);\n\t\t\t\t$selected_input_value = $projecttmpselect->ref;\n\t\t\t\tunset($projecttmpselect);\n\t\t\t}\n\n\t\t\t$out .= ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/projet/ajax/projects.php', $urloption, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT, 1, $ajaxoptions);\n\n\t\t\tif (empty($hidelabel)) $out .= $langs->trans(\"RefOrLabel\").' : ';\n\t\t\telseif ($hidelabel > 1) {\n\t\t\t\t$placeholder = ' placeholder=\"'.$langs->trans(\"RefOrLabel\").'\"';\n\t\t\t\tif ($hidelabel == 2) {\n\t\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '<input type=\"text\" class=\"minwidth100\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.$placeholder.' '.(!empty($conf->global->PRODUCT_SEARCH_AUTOFOCUS) ? 'autofocus' : '').' />';\n\t\t\tif ($hidelabel == 3) {\n\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t}\n\t\t} else {\n\t\t\t$out .= $this->selectProjectsList($selected, $htmlname, $filtertype, $limit, $status, 0, $socid, $showempty, $forcecombo, $morecss);\n\t\t}\n\n\t\tif (empty($nooutput)) print $out;\n\t\telse return $out;\n\t}\n\n\t/**\n\t *\tReturn list of projects.\n\t *  Called by selectProjects.\n\t *\n\t *\t@param      int\t\t$selected           Preselected project\n\t *\t@param      string\t$htmlname           Name of select html\n\t *  @param\t\tstring\t$filtertype         Filter on project type\n\t *\t@param      int\t\t$limit              Limit on number of returned lines\n\t * \t@param      string\t$filterkey          Filter on project ref or subject\n\t *\t@param\t\tint\t\t$status             Ticket status\n\t *  @param      int\t\t$outputmode         0=HTML select string, 1=Array\n\t *  @param\t\tstring\t$showempty\t\t    '' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t$forcecombo\t\t    Force to use combo box\n\t *  @param      string  $morecss            Add more css on select\n\t *  @return     array    \t\t\t\t    Array of keys for json\n\t */\n\tpublic function selectProjectsList($selected = '', $htmlname = 'projectid', $filtertype = '', $limit = 20, $filterkey = '', $status = 1, $outputmode = 0, $showempty = '1', $forcecombo = 0, $morecss = '')\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\t\t$outarray = array();\n\n\t\t$selectFields = \" p.rowid, p.ref\";\n\n\t\t$sql = \"SELECT \";\n\t\t$sql .= $selectFields;\n\t\t$sql .= \" FROM \".$this->db->prefix().\"projet as p\";\n\t\t$sql .= ' WHERE p.entity IN ('.getEntity('project').')';\n\n\t\t// Add criteria on ref/label\n\t\tif ($filterkey != '') {\n\t\t\t$sql .= ' AND (';\n\t\t\t$prefix = empty($conf->global->TICKET_DONOTSEARCH_ANYWHERE) ? '%' : ''; // Can use index if PRODUCT_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i = 0;\n\t\t\tif (count($scrit) > 1) $sql .= \"(\";\n\t\t\tforeach ($scrit as $crit) {\n\t\t\t\tif ($i > 0) $sql .= \" AND \";\n\t\t\t\t$sql .= \"p.ref LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t$sql .= \"\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) $sql .= \")\";\n\t\t\t$sql .= ')';\n\t\t}\n\n\t\t$sql .= $this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\tdol_syslog(get_class($this).\"::selectProjectsList search projects\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/project.lib.php';\n\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t$events = null;\n\n\t\t\tif (!$forcecombo) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events, $conf->global->PROJECT_USE_SEARCH_TO_SELECT);\n\t\t\t}\n\n\t\t\t$out .= '<select class=\"flat'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\n\t\t\t$textifempty = '';\n\t\t\t// Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'.\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (!empty($conf->global->PROJECT_USE_SEARCH_TO_SELECT)) {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) $textifempty = $langs->trans($showempty);\n\t\t\t\telse $textifempty .= $langs->trans(\"All\");\n\t\t\t} else {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) $textifempty = $langs->trans($showempty);\n\t\t\t}\n\t\t\tif ($showempty) $out .= '<option value=\"0\" selected>'.$textifempty.'</option>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($num && $i < $num) {\n\t\t\t\t$opt = '';\n\t\t\t\t$optJson = array();\n\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\t$this->constructProjectListOption($objp, $opt, $optJson, $selected, $filterkey);\n\t\t\t\t// Add new entry\n\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t$out .= $opt;\n\t\t\t\tarray_push($outarray, $optJson);\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$out .= '</select>';\n\n\t\t\t$this->db->free($result);\n\n\t\t\tif (empty($outputmode)) return $out;\n\t\t\treturn $outarray;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t * constructProjectListOption.\n\t * This define value for &$opt and &$optJson.\n\t *\n\t * @param \tresource\t$objp\t\t\t    Result set of fetch\n\t * @param \tstring\t\t$opt\t\t\t    Option (var used for returned value in string option format)\n\t * @param \tstring\t\t$optJson\t\t    Option (var used for returned value in json format)\n\t * @param \tstring\t\t$selected\t\t    Preselected value\n\t * @param   string      $filterkey          Filter key to highlight\n\t * @return\tvoid\n\t */\n\tprotected function constructProjectListOption(&$objp, &$opt, &$optJson, $selected, $filterkey = '')\n\t{\n\t\t$outkey = '';\n\t\t$outval = '';\n\t\t$outref = '';\n\t\t$outlabel = '';\n\t\t$outtype = '';\n\n\t\t$label = $objp->label;\n\n\t\t$outkey = $objp->rowid;\n\t\t$outref = $objp->ref;\n\t\t$outlabel = $objp->label;\n\t\t$outtype = $objp->fk_product_type;\n\n\t\t$opt = '<option value=\"'.$objp->rowid.'\"';\n\t\t$opt .= ($objp->rowid == $selected) ? ' selected' : '';\n\t\t$opt .= '>';\n\t\t$opt .= $objp->ref;\n\t\t$objRef = $objp->ref;\n\t\tif (!empty($filterkey) && $filterkey != '') $objRef = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $objRef, 1);\n\t\t$outval .= $objRef;\n\n\t\t$opt .= \"</option>\\n\";\n\t\t$optJson = array('key'=>$outkey, 'value'=>$outref, 'type'=>$outtype);\n\t}\n\n\n\t/**\n\t *  Return list of members in Ajax if Ajax activated or go to selectTicketsList\n\t *\n\t *  @param\t\tint\t\t\t$selected\t\t\t\tPreselected tickets\n\t *  @param\t\tstring\t\t$htmlname\t\t\t\tName of HTML select field (must be unique in page).\n\t *  @param  \tstring\t\t$filtertype     \t\tTo add a filter\n\t *  @param\t\tint\t\t\t$limit\t\t\t\t\tLimit on number of returned lines\n\t *  @param\t\tint\t\t\t$status\t\t\t\t\tTicket status\n\t *  @param\t\tstring\t\t$selected_input_value\tValue of preselected input text (for use with ajax)\n\t *  @param\t\tint\t\t\t$hidelabel\t\t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n\t *  @param\t\tarray\t\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t *  @param      int\t\t\t$socid\t\t\t\t\tThirdparty Id (to get also price dedicated to this customer)\n\t *  @param\t\tstring\t\t$showempty\t\t\t\t'' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t\t$forcecombo\t\t\t\tForce to use combo box\n\t *  @param      string      $morecss                Add more css on select\n\t *  @param \t\tarray \t\t$selected_combinations \tSelected combinations. Format: array([attrid] => attrval, [...])\n\t *  @param\t\tstring\t\t$nooutput\t\t\t\tNo print, return the output into a string\n\t *  @return\t\tvoid|string\n\t */\n\tpublic function selectMembers($selected = '', $htmlname = 'adherentid', $filtertype = '', $limit = 0, $status = 1, $selected_input_value = '', $hidelabel = 0, $ajaxoptions = array(), $socid = 0, $showempty = '1', $forcecombo = 0, $morecss = '', $selected_combinations = null, $nooutput = 0)\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\n\t\t// check parameters\n\t\tif (is_null($ajaxoptions)) $ajaxoptions = array();\n\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->TICKET_USE_SEARCH_TO_SELECT)) {\n\t\t\t$placeholder = '';\n\n\t\t\tif ($selected && empty($selected_input_value)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\n\t\t\t\t$adherenttmpselect = new Member($this->db);\n\t\t\t\t$adherenttmpselect->fetch($selected);\n\t\t\t\t$selected_input_value = $adherenttmpselect->ref;\n\t\t\t\tunset($adherenttmpselect);\n\t\t\t}\n\n\t\t\t$out .= ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/adherents/ajax/adherents.php', $urloption, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT, 1, $ajaxoptions);\n\n\t\t\tif (empty($hidelabel)) $out .= $langs->trans(\"RefOrLabel\").' : ';\n\t\t\telseif ($hidelabel > 1) {\n\t\t\t\t$placeholder = ' placeholder=\"'.$langs->trans(\"RefOrLabel\").'\"';\n\t\t\t\tif ($hidelabel == 2) {\n\t\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '<input type=\"text\" class=\"minwidth100\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.$placeholder.' '.(!empty($conf->global->PRODUCT_SEARCH_AUTOFOCUS) ? 'autofocus' : '').' />';\n\t\t\tif ($hidelabel == 3) {\n\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t}\n\t\t} else {\n\t\t\t$out .= $this->selectMembersList($selected, $htmlname, $filtertype, $limit, $status, 0, $socid, $showempty, $forcecombo, $morecss);\n\t\t}\n\n\t\tif (empty($nooutput)) print $out;\n\t\telse return $out;\n\t}\n\n\t/**\n\t *\tReturn list of adherents.\n\t *  Called by selectMembers.\n\t *\n\t *\t@param      int\t\t$selected           Preselected adherent\n\t *\t@param      string\t$htmlname           Name of select html\n\t *  @param\t\tstring\t$filtertype         Filter on adherent type\n\t *\t@param      int\t\t$limit              Limit on number of returned lines\n\t * \t@param      string\t$filterkey          Filter on adherent ref or subject\n\t *\t@param\t\tint\t\t$status             Ticket status\n\t *  @param      int\t\t$outputmode         0=HTML select string, 1=Array\n\t *  @param\t\tstring\t$showempty\t\t    '' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t$forcecombo\t\t    Force to use combo box\n\t *  @param      string  $morecss            Add more css on select\n\t *  @return     array    \t\t\t\t    Array of keys for json\n\t */\n\tpublic function selectMembersList($selected = '', $htmlname = 'adherentid', $filtertype = '', $limit = 20, $filterkey = '', $status = 1, $outputmode = 0, $showempty = '1', $forcecombo = 0, $morecss = '')\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\t\t$outarray = array();\n\n\t\t$selectFields = \" p.rowid, p.ref\";\n\n\t\t$sql = \"SELECT \";\n\t\t$sql .= $selectFields;\n\t\t$sql .= \" FROM \".$this->db->prefix().\"adherent as p\";\n\t\t$sql .= ' WHERE p.entity IN ('.getEntity('adherent').')';\n\n\t\t// Add criteria on ref/label\n\t\tif ($filterkey != '') {\n\t\t\t$sql .= ' AND (';\n\t\t\t$prefix = empty($conf->global->TICKET_DONOTSEARCH_ANYWHERE) ? '%' : ''; // Can use index if PRODUCT_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i = 0;\n\t\t\tif (count($scrit) > 1) $sql .= \"(\";\n\t\t\tforeach ($scrit as $crit) {\n\t\t\t\tif ($i > 0) $sql .= \" AND \";\n\t\t\t\t$sql .= \"p.ref LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t$sql .= \"\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) $sql .= \")\";\n\t\t\t$sql .= ')';\n\t\t}\n\n\t\t$sql .= $this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\tdol_syslog(get_class($this).\"::selectMembersList search adherents\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/member.lib.php';\n\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t$events = null;\n\n\t\t\tif (!$forcecombo) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events, $conf->global->PROJECT_USE_SEARCH_TO_SELECT);\n\t\t\t}\n\n\t\t\t$out .= '<select class=\"flat'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\n\t\t\t$textifempty = '';\n\t\t\t// Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'.\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (!empty($conf->global->PROJECT_USE_SEARCH_TO_SELECT)) {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) $textifempty = $langs->trans($showempty);\n\t\t\t\telse $textifempty .= $langs->trans(\"All\");\n\t\t\t} else {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) $textifempty = $langs->trans($showempty);\n\t\t\t}\n\t\t\tif ($showempty) $out .= '<option value=\"0\" selected>'.$textifempty.'</option>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($num && $i < $num) {\n\t\t\t\t$opt = '';\n\t\t\t\t$optJson = array();\n\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\t$this->constructMemberListOption($objp, $opt, $optJson, $selected, $filterkey);\n\t\t\t\t// Add new entry\n\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t$out .= $opt;\n\t\t\t\tarray_push($outarray, $optJson);\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$out .= '</select>';\n\n\t\t\t$this->db->free($result);\n\n\t\t\tif (empty($outputmode)) return $out;\n\t\t\treturn $outarray;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t * constructMemberListOption.\n\t * This define value for &$opt and &$optJson.\n\t *\n\t * @param \tresource\t$objp\t\t\t    Result set of fetch\n\t * @param \tstring\t\t$opt\t\t\t    Option (var used for returned value in string option format)\n\t * @param \tstring\t\t$optJson\t\t    Option (var used for returned value in json format)\n\t * @param \tstring\t\t$selected\t\t    Preselected value\n\t * @param   string      $filterkey          Filter key to highlight\n\t * @return\tvoid\n\t */\n\tprotected function constructMemberListOption(&$objp, &$opt, &$optJson, $selected, $filterkey = '')\n\t{\n\t\t$outkey = '';\n\t\t$outval = '';\n\t\t$outref = '';\n\t\t$outlabel = '';\n\t\t$outtype = '';\n\n\t\t$label = $objp->label;\n\n\t\t$outkey = $objp->rowid;\n\t\t$outref = $objp->ref;\n\t\t$outlabel = $objp->label;\n\t\t$outtype = $objp->fk_product_type;\n\n\t\t$opt = '<option value=\"'.$objp->rowid.'\"';\n\t\t$opt .= ($objp->rowid == $selected) ? ' selected' : '';\n\t\t$opt .= '>';\n\t\t$opt .= $objp->ref;\n\t\t$objRef = $objp->ref;\n\t\tif (!empty($filterkey) && $filterkey != '') $objRef = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $objRef, 1);\n\t\t$outval .= $objRef;\n\n\t\t$opt .= \"</option>\\n\";\n\t\t$optJson = array('key'=>$outkey, 'value'=>$outref, 'type'=>$outtype);\n\t}\n\n\t/**\n\t * Generic method to select a component from a combo list.\n\t * Can use autocomplete with ajax after x key pressed or a full combo, depending on setup.\n\t * This is the generic method that will replace all specific existing methods.\n\t *\n\t * @param \tstring\t\t\t$objectdesc\t\t\tObjectClass:PathToClass[:AddCreateButtonOrNot[:Filter[:Sortfield]]]\n\t * @param\tstring\t\t\t$htmlname\t\t\tName of HTML select component\n\t * @param\tint\t\t\t\t$preselectedvalue\tPreselected value (ID of element)\n\t * @param\tstring\t\t\t$showempty\t\t\t''=empty values not allowed, 'string'=value show if we allow empty values (for example 'All', ...)\n\t * @param\tstring\t\t\t$searchkey\t\t\tSearch criteria\n\t * @param\tstring\t\t\t$placeholder\t\tPlace holder\n\t * @param\tstring\t\t\t$morecss\t\t\tMore CSS\n\t * @param\tstring\t\t\t$moreparams\t\t\tMore params provided to ajax call\n\t * @param\tint\t\t\t\t$forcecombo\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t * @param\tint\t\t\t\t$disabled\t\t\t1=Html component is disabled\n\t * @param\tstring\t        $selected_input_value\tValue of preselected input text (for use with ajax)\n\t * @return\tstring\t\t\t\t\t\t\t\tReturn HTML string\n\t * @see selectForFormsList() select_thirdparty_list()\n\t */\n\tpublic function selectForForms($objectdesc, $htmlname, $preselectedvalue, $showempty = '', $searchkey = '', $placeholder = '', $morecss = '', $moreparams = '', $forcecombo = 0, $disabled = 0, $selected_input_value = '')\n\t{\n\t\tglobal $conf, $user;\n\n\t\t$objecttmp = null;\n\n\t\t// Example of value for $objectdec:\n\t\t// Bom:bom/class/bom.class.php:0:t.status=1\n\t\t// Bom:bom/class/bom.class.php:0:t.status=1:ref\n\t\t// Bom:bom/class/bom.class.php:0:(t.status:=:1):ref\n\t\t$InfoFieldList = explode(\":\", $objectdesc, 4);\n\t\t$vartmp = $InfoFieldList[3];\n\t\t$reg = array();\n\t\tif (preg_match('/^.*:(\\w*)$/', $vartmp, $reg)) {\n\t\t\t$InfoFieldList[4] = $reg[1];\t// take the sort field\n\t\t}\n\t\t$InfoFieldList[3] = preg_replace('/:\\w*$/', '', $vartmp);\t// take the filter field\n\n\t\t$classname = $InfoFieldList[0];\n\t\t$classpath = $InfoFieldList[1];\n\t\t$addcreatebuttonornot = empty($InfoFieldList[2]) ? 0 : $InfoFieldList[2];\n\t\t$filter = empty($InfoFieldList[3]) ? '' : $InfoFieldList[3];\n\t\t$sortfield = empty($InfoFieldList[4]) ? '' : $InfoFieldList[4];\n\n\t\tif (!empty($classpath)) {\n\t\t\tdol_include_once($classpath);\n\n\t\t\tif ($classname && class_exists($classname)) {\n\t\t\t\t$objecttmp = new $classname($this->db);\n\t\t\t\t// Make some replacement\n\t\t\t\t$sharedentities = getEntity(strtolower($classname));\n\t\t\t\t$objecttmp->filter = str_replace(\n\t\t\t\t\tarray('__ENTITY__', '__SHARED_ENTITIES__', '__USER_ID__'),\n\t\t\t\t\tarray($conf->entity, $sharedentities, $user->id),\n\t\t\t\t\t$filter\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (!is_object($objecttmp)) {\n\t\t\tdol_syslog('Error bad setup of type for field '.$InfoFieldList, LOG_WARNING);\n\t\t\treturn 'Error bad setup of type for field '.join(',', $InfoFieldList);\n\t\t}\n\n\t\t//var_dump($objecttmp->filter);\n\t\t$prefixforautocompletemode = $objecttmp->element;\n\t\tif ($prefixforautocompletemode == 'societe') {\n\t\t\t$prefixforautocompletemode = 'company';\n\t\t}\n\t\tif ($prefixforautocompletemode == 'product') {\n\t\t\t$prefixforautocompletemode = 'produit';\n\t\t}\n\t\t$confkeyforautocompletemode = strtoupper($prefixforautocompletemode).'_USE_SEARCH_TO_SELECT'; // For example COMPANY_USE_SEARCH_TO_SELECT\n\n\t\tdol_syslog(get_class($this).\"::selectForForms object->filter=\".$objecttmp->filter, LOG_DEBUG);\n\t\t$out = '';\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->$confkeyforautocompletemode) && !$forcecombo) {\n\t\t\t// No immediate load of all database\n\t\t\t$placeholder = '';\n\t\t\tif ($preselectedvalue && empty($selected_input_value)) {\n\t\t\t\t$objecttmp->fetch($preselectedvalue);\n\t\t\t\t$selected_input_value = ($prefixforautocompletemode == 'company' ? $objecttmp->name : $objecttmp->ref);\n\t\t\t\t//unset($objecttmp);\n\t\t\t}\n\n\t\t\t$objectdesc = $classname.':'.$classpath.':'.$addcreatebuttonornot.':'.$filter;\n\t\t\t$urlforajaxcall = DOL_URL_ROOT.'/core/ajax/selectobject.php';\n\n\t\t\t// No immediate load of all database\n\t\t\t$urloption = 'htmlname='.urlencode($htmlname).'&outjson=1&objectdesc='.urlencode($objectdesc).'&filter='.urlencode($objecttmp->filter).($sortfield ? '&sortfield='.urlencode($sortfield) : '');\n\t\t\t// Activate the auto complete using ajax call.\n\t\t\t$out .= ajax_autocompleter($preselectedvalue, $htmlname, $urlforajaxcall, $urloption, $conf->global->$confkeyforautocompletemode, 0, array());\n\t\t\t$out .= '<style type=\"text/css\">.ui-autocomplete { z-index: 1003; }</style>';\n\t\t\t$out .= '<input type=\"text\" class=\"'.$morecss.'\"'.($disabled ? ' disabled=\"disabled\"' : '').' name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.($placeholder ? ' placeholder=\"'.dol_escape_htmltag($placeholder).'\"' : '') .' />';\n\t\t} else {\n\t\t\t// Immediate load of table record. Note: filter is inside $objecttmp->filter\n\t\t\t$out .= $this->selectForFormsList($objecttmp, $htmlname, $preselectedvalue, $showempty, $searchkey, $placeholder, $morecss, $moreparams, $forcecombo, 0, $disabled, $sortfield);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Function to forge a SQL criteria\n\t *\n\t * @param  array    $matches       Array of found string by regex search. Example: \"t.ref:like:'SO-%'\" or \"t.date_creation:<:'20160101'\" or \"t.nature:is:NULL\"\n\t * @return string                  Forged criteria. Example: \"t.field like 'abc%'\"\n\t */\n\tprotected static function forgeCriteriaCallback($matches)\n\t{\n\t\tglobal $db;\n\n\t\t//dol_syslog(\"Convert matches \".$matches[1]);\n\t\tif (empty($matches[1])) {\n\t\t\treturn '';\n\t\t}\n\t\t$tmp = explode(':', $matches[1]);\n\t\tif (count($tmp) < 3) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$tmpescaped = $tmp[2];\n\t\t$regbis = array();\n\t\tif (preg_match('/^\\'(.*)\\'$/', $tmpescaped, $regbis)) {\n\t\t\t$tmpescaped = \"'\".$db->escape($regbis[1]).\"'\";\n\t\t} else {\n\t\t\t$tmpescaped = $db->escape($tmpescaped);\n\t\t}\n\t\treturn $db->escape($tmp[0]).' '.strtoupper($db->escape($tmp[1])).\" \".$tmpescaped;\n\t}\n\n\t/**\n\t * Output html form to select an object.\n\t * Note, this function is called by selectForForms or by ajax selectobject.php\n\t *\n\t * @param \tObject\t\t\t$objecttmp\t\t\tObject to knwo the table to scan for combo.\n\t * @param\tstring\t\t\t$htmlname\t\t\tName of HTML select component\n\t * @param\tint\t\t\t\t$preselectedvalue\tPreselected value (ID of element)\n\t * @param\tstring\t\t\t$showempty\t\t\t''=empty values not allowed, 'string'=value show if we allow empty values (for example 'All', ...)\n\t * @param\tstring\t\t\t$searchkey\t\t\tSearch value\n\t * @param\tstring\t\t\t$placeholder\t\tPlace holder\n\t * @param\tstring\t\t\t$morecss\t\t\tMore CSS\n\t * @param\tstring\t\t\t$moreparams\t\t\tMore params provided to ajax call\n\t * @param\tint\t\t\t\t$forcecombo\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t * @param\tint\t\t\t\t$outputmode\t\t\t0=HTML select string, 1=Array\n\t * @param\tint\t\t\t\t$disabled\t\t\t1=Html component is disabled\n\t * @param\tstring\t\t\t$sortfield\t\t\tSort field\n\t * @return\tstring|array\t\t\t\t\t\tReturn HTML string\n\t * @see selectForForms()\n\t */\n\tpublic function selectForFormsList($objecttmp, $htmlname, $preselectedvalue, $showempty = '', $searchkey = '', $placeholder = '', $morecss = '', $moreparams = '', $forcecombo = 0, $outputmode = 0, $disabled = 0, $sortfield = '')\n\t{\n\t\tglobal $conf, $langs, $user, $hookmanager;\n\n\t\t//print \"$objecttmp->filter, $htmlname, $preselectedvalue, $showempty = '', $searchkey = '', $placeholder = '', $morecss = '', $moreparams = '', $forcecombo = 0, $outputmode = 0, $disabled\";\n\n\t\t$prefixforautocompletemode = $objecttmp->element;\n\t\tif ($prefixforautocompletemode == 'societe') {\n\t\t\t$prefixforautocompletemode = 'company';\n\t\t}\n\t\t$confkeyforautocompletemode = strtoupper($prefixforautocompletemode).'_USE_SEARCH_TO_SELECT'; // For example COMPANY_USE_SEARCH_TO_SELECT\n\n\t\tif (!empty($objecttmp->fields)) {\t// For object that declare it, it is better to use declared fields (like societe, contact, ...)\n\t\t\t$tmpfieldstoshow = '';\n\t\t\tforeach ($objecttmp->fields as $key => $val) {\n\t\t\t\tif (!dol_eval($val['enabled'], 1, 1)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!empty($val['showoncombobox'])) {\n\t\t\t\t\t$tmpfieldstoshow .= ($tmpfieldstoshow ? ',' : '').'t.'.$key;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($tmpfieldstoshow) {\n\t\t\t\t$fieldstoshow = $tmpfieldstoshow;\n\t\t\t}\n\t\t} else {\n\t\t\t// For backward compatibility\n\t\t\t$objecttmp->fields['ref'] = array('type'=>'varchar(30)', 'label'=>'Ref', 'showoncombobox'=>1);\n\t\t}\n\n\t\tif (empty($fieldstoshow)) {\n\t\t\tif (isset($objecttmp->fields['ref'])) {\n\t\t\t\t$fieldstoshow = 't.ref';\n\t\t\t} else {\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t$this->error = $langs->trans(\"ErrorNoFieldWithAttributeShowoncombobox\");\n\t\t\t\treturn $langs->trans('ErrorNoFieldWithAttributeShowoncombobox');\n\t\t\t}\n\t\t}\n\n\t\t$out = '';\n\t\t$outarray = array();\n\n\t\t$num = 0;\n\n\t\t// Search data\n\t\t$sql = \"SELECT t.rowid, \".$fieldstoshow.\" FROM \".$this->db->prefix().$objecttmp->table_element.\" as t\";\n\t\tif (isset($objecttmp->ismultientitymanaged)) {\n\t\t\tif (!is_numeric($objecttmp->ismultientitymanaged)) {\n\t\t\t\t$tmparray = explode('@', $objecttmp->ismultientitymanaged);\n\t\t\t\t$sql .= \" INNER JOIN \".$this->db->prefix().$tmparray[1].\" as parenttable ON parenttable.rowid = t.\".$tmparray[0];\n\t\t\t}\n\t\t\tif ($objecttmp->ismultientitymanaged === 'fk_soc@societe') {\n\t\t\t\tif (empty($user->rights->societe->client->voir) && !$user->socid) {\n\t\t\t\t\t$sql .= \", \".$this->db->prefix().\"societe_commerciaux as sc\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add where from hooks\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('selectForFormsListWhere', $parameters); // Note that $action and $object may have been modified by hook\n\t\tif (!empty($hookmanager->resPrint)) {\n\t\t\t$sql .= $hookmanager->resPrint;\n\t\t} else {\n\t\t\t$sql .= \" WHERE 1=1\";\n\t\t\tif (isset($objecttmp->ismultientitymanaged)) {\n\t\t\t\tif ($objecttmp->ismultientitymanaged == 1) {\n\t\t\t\t\t$sql .= \" AND t.entity IN (\".getEntity($objecttmp->table_element).\")\";\n\t\t\t\t}\n\t\t\t\tif (!is_numeric($objecttmp->ismultientitymanaged)) {\n\t\t\t\t\t$sql .= \" AND parenttable.entity = t.\".$tmparray[0];\n\t\t\t\t}\n\t\t\t\tif ($objecttmp->ismultientitymanaged == 1 && !empty($user->socid)) {\n\t\t\t\t\tif ($objecttmp->element == 'societe') {\n\t\t\t\t\t\t$sql .= \" AND t.rowid = \".((int) $user->socid);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$sql .= \" AND t.fk_soc = \".((int) $user->socid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($objecttmp->ismultientitymanaged === 'fk_soc@societe') {\n\t\t\t\t\tif (empty($user->rights->societe->client->voir) && !$user->socid) {\n\t\t\t\t\t\t$sql .= \" AND t.rowid = sc.fk_soc AND sc.fk_user = \".((int) $user->id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($searchkey != '') {\n\t\t\t\t$sql .= natural_search(explode(',', $fieldstoshow), $searchkey);\n\t\t\t}\n\t\t\tif ($objecttmp->filter) {\t // Syntax example \"(t.ref:like:'SO-%') and (t.date_creation:<:'20160101')\"\n\t\t\t\t/*if (! DolibarrApi::_checkFilters($objecttmp->filter))\n\t\t\t\t{\n\t\t\t\t\tthrow new RestException(503, 'Error when validating parameter sqlfilters '.$objecttmp->filter);\n\t\t\t\t}*/\n\t\t\t\t$regexstring = '\\(([^:\\'\\(\\)]+:[^:\\'\\(\\)]+:[^\\(\\)]+)\\)';\n\t\t\t\t$sql .= \" AND (\".preg_replace_callback('/'.$regexstring.'/', 'Form::forgeCriteriaCallback', $objecttmp->filter).\")\";\n\t\t\t}\n\t\t}\n\t\t$sql .= $this->db->order($sortfield ? $sortfield : $fieldstoshow, \"ASC\");\n\t\t//$sql.=$this->db->plimit($limit, 0);\n\t\t//print $sql;\n\n\t\t// Build output string\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t// Construct $out and $outarray\n\t\t\t$out .= '<select id=\"'.$htmlname.'\" class=\"flat'.($morecss ? ' '.$morecss : '').'\"'.($disabled ? ' disabled=\"disabled\"' : '').($moreparams ? ' '.$moreparams : '').' name=\"'.$htmlname.'\">'.\"\\n\";\n\n\t\t\t// Warning: Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'. Seems it is no more true with selec2 v4\n\t\t\t$textifempty = '&nbsp;';\n\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (!empty($conf->global->$confkeyforautocompletemode)) {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) {\n\t\t\t\t\t$textifempty = $langs->trans($showempty);\n\t\t\t\t} else {\n\t\t\t\t\t$textifempty .= $langs->trans(\"All\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($showempty) {\n\t\t\t\t$out .= '<option value=\"-1\">'.$textifempty.'</option>'.\"\\n\";\n\t\t\t}\n\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$label = '';\n\t\t\t\t\t$tmparray = explode(',', $fieldstoshow);\n\t\t\t\t\t$oldvalueforshowoncombobox = 0;\n\t\t\t\t\tforeach ($tmparray as $key => $val) {\n\t\t\t\t\t\t$val = preg_replace('/t\\./', '', $val);\n\t\t\t\t\t\t$label .= (($label && $obj->$val) ? ($oldvalueforshowoncombobox != $objecttmp->fields[$val]['showoncombobox'] ? ' - ' : ' ') : '');\n\t\t\t\t\t\t$label .= $obj->$val;\n\t\t\t\t\t\t$oldvalueforshowoncombobox = $objecttmp->fields[$val]['showoncombobox'];\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($outputmode)) {\n\t\t\t\t\t\tif ($preselectedvalue > 0 && $preselectedvalue == $obj->rowid) {\n\t\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\" selected>'.$label.'</option>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\">'.$label.'</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarray_push($outarray, array('key'=>$obj->rowid, 'value'=>$label, 'label'=>$label));\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\t\t\t\t\tif (($i % 10) == 0) {\n\t\t\t\t\t\t$out .= \"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$out .= '</select>'.\"\\n\";\n\n\t\t\tif (!$forcecombo) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, null, (!empty($conf->global->$confkeyforautocompletemode) ? $conf->global->$confkeyforautocompletemode : 0));\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\t$this->result = array('nbofelement'=>$num);\n\n\t\tif ($outputmode) {\n\t\t\treturn $outarray;\n\t\t}\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tReturn a HTML select string, built from an array of key+value.\n\t *  Note: Do not apply langs->trans function on returned content, content may be entity encoded twice.\n\t *\n\t *\t@param\tstring\t\t\t$htmlname\t\t\tName of html select area. Must start with \"multi\" if this is a multiselect\n\t *\t@param\tarray\t\t\t$array\t\t\t\tArray like array(key => value) or array(key=>array('label'=>..., 'data-...'=>..., 'disabled'=>..., 'css'=>...))\n\t *\t@param\tstring|string[]\t$id\t\t\t\t\tPreselected key or preselected keys for multiselect\n\t *\t@param\tint|string\t\t$show_empty\t\t\t0 no empty value allowed, 1 or string to add an empty value into list (If 1: key is -1 and value is '' or '&nbsp;', If placeholder string: key is -1 and value is the string), <0 to add an empty value with key that is this value.\n\t *\t@param\tint\t\t\t\t$key_in_label\t\t1 to show key into label with format \"[key] value\"\n\t *\t@param\tint\t\t\t\t$value_as_key\t\t1 to use value as key\n\t *\t@param  string\t\t\t$moreparam\t\t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *\t@param  int\t\t\t\t$translate\t\t\t1=Translate and encode value\n\t * \t@param\tint\t\t\t\t$maxlen\t\t\t\tLength maximum for labels\n\t * \t@param\tint\t\t\t\t$disabled\t\t\tHtml select box is disabled\n\t *  @param\tstring\t\t\t$sort\t\t\t\t'ASC' or 'DESC' = Sort on label, '' or 'NONE' or 'POS' = Do not sort, we keep original order\n\t *  @param\tstring\t\t\t$morecss\t\t\tAdd more class to css styles\n\t *  @param\tint\t\t\t\t$addjscombo\t\t\tAdd js combo\n\t *  @param  string          $moreparamonempty\tAdd more param on the empty option line. Not used if show_empty not set\n\t *  @param  int             $disablebademail\t1=Check if a not valid email, 2=Check string '---', and if found into value, disable and colorize entry\n\t *  @param  int             $nohtmlescape\t\tNo html escaping.\n\t * \t@return\tstring\t\t\t\t\t\t\t\tHTML select string.\n\t *  @see multiselectarray(), selectArrayAjax(), selectArrayFilter()\n\t */\n\tpublic static function selectarray($htmlname, $array, $id = '', $show_empty = 0, $key_in_label = 0, $value_as_key = 0, $moreparam = '', $translate = 0, $maxlen = 0, $disabled = 0, $sort = '', $morecss = '', $addjscombo = 1, $moreparamonempty = '', $disablebademail = 0, $nohtmlescape = 0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t// Do we want a multiselect ?\n\t\t//$jsbeautify = 0;\n\t\t//if (preg_match('/^multi/',$htmlname)) $jsbeautify = 1;\n\t\t$jsbeautify = 1;\n\n\t\tif ($value_as_key) {\n\t\t\t$array = array_combine($array, $array);\n\t\t}\n\n\t\t$out = '';\n\n\t\tif ($addjscombo < 0) {\n\t\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t\t$addjscombo = 1;\n\t\t\t} else {\n\t\t\t\t$addjscombo = 0;\n\t\t\t}\n\t\t}\n\n\t\t// Add code for jquery to use multiselect\n\t\tif ($addjscombo && $jsbeautify) {\n\t\t\t// Enhance with select2\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t$out .= ajax_combobox($htmlname, array(), 0, 0, 'resolve', $show_empty < 0 ? (string) $show_empty : '-1');\n\t\t}\n\n\t\t$out .= '<select id=\"'.preg_replace('/^\\./', '', $htmlname).'\" '.($disabled ? 'disabled=\"disabled\" ' : '').'class=\"flat '.(preg_replace('/^\\./', '', $htmlname)).($morecss ? ' '.$morecss : '').'\"';\n\t\t$out .= ' name=\"'.preg_replace('/^\\./', '', $htmlname).'\" '.($moreparam ? $moreparam : '');\n\t\t$out .= '>';\n\n\t\tif ($show_empty) {\n\t\t\t$textforempty = ' ';\n\t\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t\t$textforempty = '&nbsp;'; // If we use ajaxcombo, we need &nbsp; here to avoid to have an empty element that is too small.\n\t\t\t}\n\t\t\tif (!is_numeric($show_empty)) {\n\t\t\t\t$textforempty = $show_empty;\n\t\t\t}\n\t\t\t$out .= '<option class=\"optiongrey\" '.($moreparamonempty ? $moreparamonempty.' ' : '').'value=\"'.($show_empty < 0 ? $show_empty : -1).'\"'.($id == $show_empty ? ' selected' : '').'>'.$textforempty.'</option>'.\"\\n\";\n\t\t}\n\n\t\tif (is_array($array)) {\n\t\t\t// Translate\n\t\t\tif ($translate) {\n\t\t\t\tforeach ($array as $key => $value) {\n\t\t\t\t\tif (!is_array($value)) {\n\t\t\t\t\t\t$array[$key] = $langs->trans($value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$array[$key]['label'] = $langs->trans($value['label']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Sort\n\t\t\tif ($sort == 'ASC') {\n\t\t\t\tasort($array);\n\t\t\t} elseif ($sort == 'DESC') {\n\t\t\t\tarsort($array);\n\t\t\t}\n\n\t\t\tforeach ($array as $key => $tmpvalue) {\n\t\t\t\tif (is_array($tmpvalue)) {\n\t\t\t\t\t$value = $tmpvalue['label'];\n\t\t\t\t\t$disabled = empty($tmpvalue['disabled']) ? '' : ' disabled';\n\t\t\t\t\t$style = empty($tmpvalue['css']) ? ' class=\"'.$tmpvalue['css'].'\"' : '';\n\t\t\t\t} else {\n\t\t\t\t\t$value = $tmpvalue;\n\t\t\t\t\t$disabled = '';\n\t\t\t\t\t$style = '';\n\t\t\t\t}\n\t\t\t\tif (!empty($disablebademail)) {\n\t\t\t\t\tif (($disablebademail == 1 && !preg_match('/&lt;.+@.+&gt;/', $value))\n\t\t\t\t\t\t|| ($disablebademail == 2 && preg_match('/---/', $value))) {\n\t\t\t\t\t\t$disabled = ' disabled';\n\t\t\t\t\t\t$style = ' class=\"warning\"';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($key_in_label) {\n\t\t\t\t\tif (empty($nohtmlescape)) {\n\t\t\t\t\t\t$selectOptionValue = dol_escape_htmltag($key.' - '.($maxlen ?dol_trunc($value, $maxlen) : $value));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$selectOptionValue = $key.' - '.($maxlen ?dol_trunc($value, $maxlen) : $value);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (empty($nohtmlescape)) {\n\t\t\t\t\t\t$selectOptionValue = dol_escape_htmltag($maxlen ?dol_trunc($value, $maxlen) : $value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$selectOptionValue = $maxlen ?dol_trunc($value, $maxlen) : $value;\n\t\t\t\t\t}\n\t\t\t\t\tif ($value == '' || $value == '-') {\n\t\t\t\t\t\t$selectOptionValue = '&nbsp;';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$out .= '<option value=\"'.$key.'\"';\n\t\t\t\t$out .= $style.$disabled;\n\t\t\t\tif (is_array($id)) {\n\t\t\t\t\tif (in_array($key, $id) && !$disabled) {\n\t\t\t\t\t\t$out .= ' selected'; // To preselect a value\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$id = (string) $id; // if $id = 0, then $id = '0'\n\t\t\t\t\tif ($id != '' && $id == $key && !$disabled) {\n\t\t\t\t\t\t$out .= ' selected'; // To preselect a value\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($nohtmlescape) {\n\t\t\t\t\t$out .= ' data-html=\"'.dol_escape_htmltag($selectOptionValue).'\"';\n\t\t\t\t}\n\t\t\t\tif (is_array($tmpvalue)) {\n\t\t\t\t\tforeach ($tmpvalue as $keyforvalue => $valueforvalue) {\n\t\t\t\t\t\tif (preg_match('/^data-/', $keyforvalue)) {\n\t\t\t\t\t\t\t$out .= ' '.$keyforvalue.'=\"'.$valueforvalue.'\"';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$out .= '>';\n\t\t\t\t//var_dump($selectOptionValue);\n\t\t\t\t$out .= $selectOptionValue;\n\t\t\t\t$out .= \"</option>\\n\";\n\t\t\t}\n\t\t}\n\n\t\t$out .= \"</select>\";\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tReturn a HTML select string, built from an array of key+value, but content returned into select come from an Ajax call of an URL.\n\t *  Note: Do not apply langs->trans function on returned content of Ajax service, content may be entity encoded twice.\n\t *\n\t *\t@param\tstring\t$htmlname       \t\tName of html select area\n\t *\t@param\tstring\t$url\t\t\t\t\tUrl. Must return a json_encode of array(key=>array('text'=>'A text', 'url'=>'An url'), ...)\n\t *\t@param\tstring\t$id             \t\tPreselected key\n\t *\t@param  string\t$moreparam      \t\tAdd more parameters onto the select tag\n\t *\t@param  string\t$moreparamtourl \t\tAdd more parameters onto the Ajax called URL\n\t * \t@param\tint\t\t$disabled\t\t\t\tHtml select box is disabled\n\t *  @param\tint\t\t$minimumInputLength\t\tMinimum Input Length\n\t *  @param\tstring\t$morecss\t\t\t\tAdd more class to css styles\n\t *  @param  int     $callurlonselect        If set to 1, some code is added so an url return by the ajax is called when value is selected.\n\t *  @param  string  $placeholder            String to use as placeholder\n\t *  @param  integer $acceptdelayedhtml      1 = caller is requesting to have html js content not returned but saved into global $delayedhtmlcontent (so caller can show it at end of page to avoid flash FOUC effect)\n\t * \t@return\tstring   \t\t\t\t\t\tHTML select string\n\t *  @see selectArrayFilter(), ajax_combobox() in ajax.lib.php\n\t */\n\tpublic static function selectArrayAjax($htmlname, $url, $id = '', $moreparam = '', $moreparamtourl = '', $disabled = 0, $minimumInputLength = 1, $morecss = '', $callurlonselect = 0, $placeholder = '', $acceptdelayedhtml = 0)\n\t{\n\t\tglobal $conf, $langs;\n\t\tglobal $delayedhtmlcontent;\t// Will be used later outside of this function\n\n\t\t// TODO Use an internal dolibarr component instead of select2\n\t\tif (empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) && !defined('REQUIRE_JQUERY_MULTISELECT')) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$out = '<select type=\"text\" class=\"'.$htmlname.($morecss ? ' '.$morecss : '').'\" '.($moreparam ? $moreparam.' ' : '').'name=\"'.$htmlname.'\"></select>';\n\n\t\t$outdelayed = '';\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t$tmpplugin = 'select2';\n\t\t\t$outdelayed = \"\\n\".'<!-- JS CODE TO ENABLE '.$tmpplugin.' for id '.$htmlname.' -->\n\t\t    \t<script>\n\t\t    \t$(document).ready(function () {\n\n\t    \t        '.($callurlonselect ? 'var saveRemoteData = [];' : '').'\n\n\t                $(\".'.$htmlname.'\").select2({\n\t\t\t\t    \tajax: {\n\t\t\t\t\t    \tdir: \"ltr\",\n\t\t\t\t\t    \turl: \"'.$url.'\",\n\t\t\t\t\t    \tdataType: \\'json\\',\n\t\t\t\t\t    \tdelay: 250,\n\t\t\t\t\t    \tdata: function (params) {\n\t\t\t\t\t    \t\treturn {\n\t\t\t\t\t\t\t    \tq: params.term, \t// search term\n\t\t\t\t\t    \t\t\tpage: params.page\n\t\t\t\t\t    \t\t};\n\t\t\t\t    \t\t},\n\t\t\t\t    \t\tprocessResults: function (data) {\n\t\t\t\t    \t\t\t// parse the results into the format expected by Select2.\n\t\t\t\t    \t\t\t// since we are using custom formatting functions we do not need to alter the remote JSON data\n\t\t\t\t    \t\t\t//console.log(data);\n\t\t\t\t\t\t\t\tsaveRemoteData = data;\n\t\t\t\t\t    \t    /* format json result for select2 */\n\t\t\t\t\t    \t    result = []\n\t\t\t\t\t    \t    $.each( data, function( key, value ) {\n\t\t\t\t\t    \t       result.push({id: key, text: value.text});\n\t                            });\n\t\t\t\t    \t\t\t//return {results:[{id:\\'none\\', text:\\'aa\\'}, {id:\\'rrr\\', text:\\'Red\\'},{id:\\'bbb\\', text:\\'Search a into projects\\'}], more:false}\n\t\t\t\t    \t\t\t//console.log(result);\n\t\t\t\t    \t\t\treturn {results: result, more: false}\n\t\t\t\t    \t\t},\n\t\t\t\t    \t\tcache: true\n\t\t\t\t    \t},\n\t\t \t\t\t\tlanguage: select2arrayoflanguage,\n\t\t\t\t\t\tcontainerCssClass: \\':all:\\',\t\t\t\t\t/* Line to add class of origin SELECT propagated to the new <span class=\"select2-selection...> tag */\n\t\t\t\t\t    placeholder: \"'.dol_escape_js($placeholder).'\",\n\t\t\t\t    \tescapeMarkup: function (markup) { return markup; }, \t// let our custom formatter work\n\t\t\t\t    \tminimumInputLength: '.$minimumInputLength.',\n\t\t\t\t        formatResult: function(result, container, query, escapeMarkup) {\n\t                        return escapeMarkup(result.text);\n\t                    },\n\t\t\t\t    });\n\n\t                '.($callurlonselect ? '\n\t                /* Code to execute a GET when we select a value */\n\t                $(\".'.$htmlname.'\").change(function() {\n\t\t\t\t    \tvar selected = $(\".'.$htmlname.'\").val();\n\t                \tconsole.log(\"We select in selectArrayAjax the entry \"+selected)\n\t\t\t\t        $(\".'.$htmlname.'\").val(\"\");  /* reset visible combo value */\n\t    \t\t\t    $.each( saveRemoteData, function( key, value ) {\n\t    \t\t\t\t        if (key == selected)\n\t    \t\t\t            {\n\t    \t\t\t                 console.log(\"selectArrayAjax - Do a redirect to \"+value.url)\n\t    \t\t\t                 location.assign(value.url);\n\t    \t\t\t            }\n\t                    });\n\t    \t\t\t});' : '').'\n\n\t    \t   });\n\t\t       </script>';\n\t\t}\n\n\t\tif ($acceptdelayedhtml) {\n\t\t\t$delayedhtmlcontent .= $outdelayed;\n\t\t} else {\n\t\t\t$out .= $outdelayed;\n\t\t}\n\t\treturn $out;\n\t}\n\n\t/**\n\t *  Return a HTML select string, built from an array of key+value, but content returned into select is defined into $array parameter.\n\t *  Note: Do not apply langs->trans function on returned content of Ajax service, content may be entity encoded twice.\n\t *\n\t *  @param  string\t$htmlname               Name of html select area\n\t *\t@param\tarray\t$array\t\t\t\t\tArray (key=>array('text'=>'A text', 'url'=>'An url'), ...)\n\t *\t@param\tstring\t$id             \t\tPreselected key\n\t *\t@param  string\t$moreparam      \t\tAdd more parameters onto the select tag\n\t *\t@param\tint\t\t$disableFiltering\t\tIf set to 1, results are not filtered with searched string\n\t * \t@param\tint\t\t$disabled\t\t\t\tHtml select box is disabled\n\t *  @param\tint\t\t$minimumInputLength\t\tMinimum Input Length\n\t *  @param\tstring\t$morecss\t\t\t\tAdd more class to css styles\n\t *  @param  int     $callurlonselect        If set to 1, some code is added so an url return by the ajax is called when value is selected.\n\t *  @param  string  $placeholder            String to use as placeholder\n\t *  @param  integer $acceptdelayedhtml      1 = caller is requesting to have html js content not returned but saved into global $delayedhtmlcontent (so caller can show it at end of page to avoid flash FOUC effect)\n\t *  @return\tstring   \t\t\t\t\t\tHTML select string\n\t *  @see selectArrayAjax(), ajax_combobox() in ajax.lib.php\n\t */\n\tpublic static function selectArrayFilter($htmlname, $array, $id = '', $moreparam = '', $disableFiltering = 0, $disabled = 0, $minimumInputLength = 1, $morecss = '', $callurlonselect = 0, $placeholder = '', $acceptdelayedhtml = 0)\n\t{\n\t\tglobal $conf, $langs;\n\t\tglobal $delayedhtmlcontent;\t// Will be used later outside of this function\n\n\t\t// TODO Use an internal dolibarr component instead of select2\n\t\tif (empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) && !defined('REQUIRE_JQUERY_MULTISELECT')) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$out = '<select type=\"text\" class=\"'.$htmlname.($morecss ? ' '.$morecss : '').'\" '.($moreparam ? $moreparam.' ' : '').'name=\"'.$htmlname.'\"><option></option></select>';\n\n\t\t$formattedarrayresult = array();\n\n\t\tforeach ($array as $key => $value) {\n\t\t\t$o = new stdClass();\n\t\t\t$o->id = $key;\n\t\t\t$o->text = $value['text'];\n\t\t\t$o->url = $value['url'];\n\t\t\t$formattedarrayresult[] = $o;\n\t\t}\n\n\t\t$outdelayed = '';\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t$tmpplugin = 'select2';\n\t\t\t$outdelayed = \"\\n\".'<!-- JS CODE TO ENABLE '.$tmpplugin.' for id '.$htmlname.' -->\n\t\t\t\t<script>\n\t\t\t\t$(document).ready(function () {\n\t\t\t\t\tvar data = '.json_encode($formattedarrayresult).';\n\n\t\t\t\t\t'.($callurlonselect ? 'var saveRemoteData = '.json_encode($array).';' : '').'\n\n\t\t\t\t\t$(\".'.$htmlname.'\").select2({\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tlanguage: select2arrayoflanguage,\n\t\t\t\t\t\tcontainerCssClass: \\':all:\\',\t\t\t\t\t/* Line to add class of origin SELECT propagated to the new <span class=\"select2-selection...> tag */\n\t\t\t\t\t\tplaceholder: \"'.dol_escape_js($placeholder).'\",\n\t\t\t\t\t\tescapeMarkup: function (markup) { return markup; }, \t// let our custom formatter work\n\t\t\t\t\t\tminimumInputLength: '.$minimumInputLength.',\n\t\t\t\t\t\tformatResult: function(result, container, query, escapeMarkup) {\n\t\t\t\t\t\t\treturn escapeMarkup(result.text);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatcher: function (params, data) {\n\n\t\t\t\t\t\t\tif(! data.id) return null;';\n\n\t\t\tif ($callurlonselect) {\n\t\t\t\t$outdelayed .= '\n\n\t\t\t\t\t\t\tvar urlBase = data.url;\n\t\t\t\t\t\t\tvar separ = urlBase.indexOf(\"?\") >= 0 ? \"&\" : \"?\";\n\t\t\t\t\t\t\t/* console.log(\"params.term=\"+params.term); */\n\t\t\t\t\t\t\t/* console.log(\"params.term encoded=\"+encodeURIComponent(params.term)); */\n\t\t\t\t\t\t\tsaveRemoteData[data.id].url = urlBase + separ + \"sall=\" + encodeURIComponent(params.term.replace(/\\\"/g, \"\"));';\n\t\t\t}\n\n\t\t\tif (!$disableFiltering) {\n\t\t\t\t$outdelayed .= '\n\n\t\t\t\t\t\t\tif(data.text.match(new RegExp(params.term))) {\n\t\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn null;';\n\t\t\t} else {\n\t\t\t\t$outdelayed .= '\n\n\t\t\t\t\t\t\treturn data;';\n\t\t\t}\n\n\t\t\t$outdelayed .= '\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t'.($callurlonselect ? '\n\t\t\t\t\t/* Code to execute a GET when we select a value */\n\t\t\t\t\t$(\".'.$htmlname.'\").change(function() {\n\t\t\t\t\t\tvar selected = $(\".'.$htmlname.'\").val();\n\t\t\t\t\t\tconsole.log(\"We select \"+selected)\n\n\t\t\t\t\t\t$(\".'.$htmlname.'\").val(\"\");  /* reset visible combo value */\n\t\t\t\t\t\t$.each( saveRemoteData, function( key, value ) {\n\t\t\t\t\t\t\tif (key == selected)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(\"selectArrayFilter - Do a redirect to \"+value.url)\n\t\t\t\t\t\t\t\tlocation.assign(value.url);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});' : '').'\n\n\t\t\t\t});\n\t\t\t\t</script>';\n\t\t}\n\n\t\tif ($acceptdelayedhtml) {\n\t\t\t$delayedhtmlcontent .= $outdelayed;\n\t\t} else {\n\t\t\t$out .= $outdelayed;\n\t\t}\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tShow a multiselect form from an array. WARNING: Use this only for short lists.\n\t *\n\t *\t@param\tstring\t\t$htmlname\t\tName of select\n\t *\t@param\tarray\t\t$array\t\t\tArray with key+value\n\t *\t@param\tarray\t\t$selected\t\tArray with key+value preselected\n\t *\t@param\tint\t\t\t$key_in_label   1 to show key like in \"[key] value\"\n\t *\t@param\tint\t\t\t$value_as_key   1 to use value as key\n\t *\t@param  string\t\t$morecss        Add more css style\n\t *\t@param  int\t\t\t$translate\t\tTranslate and encode value\n\t *  @param\tint|string\t$width\t\t\tForce width of select box. May be used only when using jquery couch. Example: 250, '95%'\n\t *  @param\tstring\t\t$moreattrib\t\tAdd more options on select component. Example: 'disabled'\n\t *  @param\tstring\t\t$elemtype\t\tType of element we show ('category', ...). Will execute a formating function on it. To use in readonly mode if js component support HTML formatting.\n\t *  @param\tstring\t\t$placeholder\tString to use as placeholder\n\t *  @param\tint\t\t\t$addjscombo\t\tAdd js combo\n\t *\t@return\tstring\t\t\t\t\t\tHTML multiselect string\n\t *  @see selectarray(), selectArrayAjax(), selectArrayFilter()\n\t */\n\tpublic static function multiselectarray($htmlname, $array, $selected = array(), $key_in_label = 0, $value_as_key = 0, $morecss = '', $translate = 0, $width = 0, $moreattrib = '', $elemtype = '', $placeholder = '', $addjscombo = -1)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$out = '';\n\n\t\tif ($addjscombo < 0) {\n\t\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t\t$addjscombo = 1;\n\t\t\t} else {\n\t\t\t\t$addjscombo = 0;\n\t\t\t}\n\t\t}\n\n\t\t// Try also magic suggest\n\t\t$out .= '<select id=\"'.$htmlname.'\" class=\"multiselect'.($morecss ? ' '.$morecss : '').'\" multiple name=\"'.$htmlname.'[]\"'.($moreattrib ? ' '.$moreattrib : '').($width ? ' style=\"width: '.(preg_match('/%/', $width) ? $width : $width.'px').'\"' : '').'>'.\"\\n\";\n\t\tif (is_array($array) && !empty($array)) {\n\t\t\tif ($value_as_key) {\n\t\t\t\t$array = array_combine($array, $array);\n\t\t\t}\n\n\t\t\tif (!empty($array)) {\n\t\t\t\tforeach ($array as $key => $value) {\n\t\t\t\t\t$newval = ($translate ? $langs->trans($value) : $value);\n\t\t\t\t\t$newval = ($key_in_label ? $key.' - '.$newval : $newval);\n\n\t\t\t\t\t$out .= '<option value=\"'.$key.'\"';\n\t\t\t\t\tif (is_array($selected) && !empty($selected) && in_array((string) $key, $selected) && ((string) $key != '')) {\n\t\t\t\t\t\t$out .= ' selected';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= ' data-html=\"'.dol_escape_htmltag($newval).'\"';\n\t\t\t\t\t$out .= '>';\n\t\t\t\t\t$out .= dol_htmlentitiesbr($newval);\n\t\t\t\t\t$out .= '</option>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$out .= '</select>'.\"\\n\";\n\n\t\t// Add code for jquery to use multiselect\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT')) {\n\t\t\t$out .= \"\\n\".'<!-- JS CODE TO ENABLE select for id '.$htmlname.', addjscombo='.$addjscombo.' -->';\n\t\t\t$out .= \"\\n\".'<script>'.\"\\n\";\n\t\t\tif ($addjscombo == 1) {\n\t\t\t\t$tmpplugin = empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) ?constant('REQUIRE_JQUERY_MULTISELECT') : $conf->global->MAIN_USE_JQUERY_MULTISELECT;\n\t\t\t\t$out .= 'function formatResult(record, container) {'.\"\\n\";\n\t\t\t\t$out .= '\tif ($(record.element).attr(\"data-html\") != undefined) return htmlEntityDecodeJs($(record.element).attr(\"data-html\"));\t\t// If property html set, we decode html entities and use this'.\"\\n\";\n\t\t\t\t$out .= '\treturn record.text;';\n\t\t\t\t$out .= '};'.\"\\n\";\n\t\t\t\t$out .= 'function formatSelection(record) {'.\"\\n\";\n\t\t\t\tif ($elemtype == 'category') {\n\t\t\t\t\t$out .= 'return \\'<span><img src=\"'.DOL_URL_ROOT.'/theme/eldy/img/object_category.png\"> \\'+record.text+\\'</span>\\';';\n\t\t\t\t} else {\n\t\t\t\t\t$out .= 'return record.text;';\n\t\t\t\t}\n\t\t\t\t$out .= '};'.\"\\n\";\n\t\t\t\t$out .= '$(document).ready(function () {\n\t\t\t\t\t\t\t$(\\'#'.$htmlname.'\\').'.$tmpplugin.'({';\n\t\t\t\tif ($placeholder) {\n\t\t\t\t\t$out .= '\n\t\t\t\t\t\t\t\tplaceholder: {\n\t\t\t\t\t\t\t\t    id: \\'-1\\',\n\t\t\t\t\t\t\t\t    text: \\''.dol_escape_js($placeholder).'\\'\n\t\t\t\t\t\t\t\t  },';\n\t\t\t\t}\n\t\t\t\t$out .= '\t\tdir: \\'ltr\\',\n\t\t\t\t\t\t\t\t// Specify format function for dropdown item\n\t\t\t\t\t\t\t\tformatResult: formatResult,\n\t\t\t\t\t\t\t \ttemplateResult: formatResult,\t\t/* For 4.0 */\n\t\t\t\t\t\t\t\tescapeMarkup: function (markup) { return markup; }, \t// let our custom formatter work\n\t\t\t\t\t\t\t\t// Specify format function for selected item\n\t\t\t\t\t\t\t\tformatSelection: formatSelection,\n\t\t\t\t\t\t\t \ttemplateSelection: formatSelection\t\t/* For 4.0 */\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t/* Add also morecss to the css .select2 that is after the #htmlname, for component that are show dynamically after load, because select2 set\n\t\t\t\t\t\t\t\t the size only if component is not hidden by default on load */\n\t\t\t\t\t\t\t$(\\'#'.$htmlname.' + .select2\\').addClass(\\''.$morecss.'\\');\n\t\t\t\t\t\t});'.\"\\n\";\n\t\t\t} elseif ($addjscombo == 2 && !defined('DISABLE_MULTISELECT')) {\n\t\t\t\t// Add other js lib\n\t\t\t\t// TODO external lib multiselect/jquery.multi-select.js must have been loaded to use this multiselect plugin\n\t\t\t\t// ...\n\t\t\t\t$out .= 'console.log(\\'addjscombo=2 for htmlname='.$htmlname.'\\');';\n\t\t\t\t$out .= '$(document).ready(function () {\n\t\t\t\t\t\t\t$(\\'#'.$htmlname.'\\').multiSelect({\n\t\t\t\t\t\t\t\tcontainerHTML: \\'<div class=\"multi-select-container\">\\',\n\t\t\t\t\t\t\t\tmenuHTML: \\'<div class=\"multi-select-menu\">\\',\n\t\t\t\t\t\t\t\tbuttonHTML: \\'<span class=\"multi-select-button '.$morecss.'\">\\',\n\t\t\t\t\t\t\t\tmenuItemHTML: \\'<label class=\"multi-select-menuitem\">\\',\n\t\t\t\t\t\t\t\tactiveClass: \\'multi-select-container--open\\',\n\t\t\t\t\t\t\t\tnoneText: \\''.$placeholder.'\\'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})';\n\t\t\t}\n\t\t\t$out .= '</script>';\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tShow a multiselect dropbox from an array. If a saved selection of fields exists for user (into $user->conf->MAIN_SELECTEDFIELDS_contextofpage), we use this one instead of default.\n\t *\n\t *\t@param\tstring\t$htmlname\t\tName of HTML field\n\t *\t@param\tarray\t$array\t\t\tArray with array of fields we could show. This array may be modified according to setup of user.\n\t *  @param  string  $varpage        Id of context for page. Can be set by caller with $varpage=(empty($contextpage)?$_SERVER[\"PHP_SELF\"]:$contextpage);\n\t *\t@return\tstring\t\t\t\t\tHTML multiselect string\n\t *  @see selectarray()\n\t */\n\tpublic static function multiSelectArrayWithCheckbox($htmlname, &$array, $varpage)\n\t{\n\t\tglobal $conf, $langs, $user, $extrafields;\n\n\t\tif (!empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$tmpvar = \"MAIN_SELECTEDFIELDS_\".$varpage; // To get list of saved selected fields to show\n\n\t\tif (!empty($user->conf->$tmpvar)) {\t\t// A list of fields was already customized for user\n\t\t\t$tmparray = explode(',', $user->conf->$tmpvar);\n\t\t\tforeach ($array as $key => $val) {\n\t\t\t\t//var_dump($key);\n\t\t\t\t//var_dump($tmparray);\n\t\t\t\tif (in_array($key, $tmparray)) {\n\t\t\t\t\t$array[$key]['checked'] = 1;\n\t\t\t\t} else {\n\t\t\t\t\t$array[$key]['checked'] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\t\t\t\t\t\t\t\t// There is no list of fields already customized for user\n\t\t\tforeach ($array as $key => $val) {\n\t\t\t\tif (!empty($array[$key]['checked']) && $array[$key]['checked'] < 0) {\n\t\t\t\t\t$array[$key]['checked'] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$listoffieldsforselection = '';\n\t\t$listcheckedstring = '';\n\n\t\tforeach ($array as $key => $val) {\n\t\t\t/* var_dump($val);\n\t\t\tvar_dump(array_key_exists('enabled', $val));\n\t\t\tvar_dump(!$val['enabled']);*/\n\t\t\tif (array_key_exists('enabled', $val) && isset($val['enabled']) && !$val['enabled']) {\n\t\t\t\tunset($array[$key]); // We don't want this field\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!empty($val['type']) && $val['type'] == 'separate') {\n\t\t\t\t// Field remains in array but we don't add it into $listoffieldsforselection\n\t\t\t\t//$listoffieldsforselection .= '<li>-----</li>';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ($val['label']) {\n\t\t\t\tif (!empty($val['langfile']) && is_object($langs)) {\n\t\t\t\t\t$langs->load($val['langfile']);\n\t\t\t\t}\n\n\t\t\t\t// Note: $val['checked'] <> 0 means we must show the field into the combo list\n\t\t\t\t$listoffieldsforselection .= '<li><input type=\"checkbox\" id=\"checkbox'.$key.'\" value=\"'.$key.'\"'.((empty($val['checked']) || $val['checked'] == '-1') ? '' : ' checked=\"checked\"').'/><label for=\"checkbox'.$key.'\">'.dol_escape_htmltag($langs->trans($val['label'])).'</label></li>';\n\t\t\t\t$listcheckedstring .= (empty($val['checked']) ? '' : $key.',');\n\t\t\t}\n\t\t}\n\n\t\t$out = '<!-- Component multiSelectArrayWithCheckbox '.$htmlname.' -->\n\n        <dl class=\"dropdown\">\n            <dt>\n            <a href=\"#'.$htmlname.'\">\n              '.img_picto('', 'list').'\n            </a>\n            <input type=\"hidden\" class=\"'.$htmlname.'\" name=\"'.$htmlname.'\" value=\"'.$listcheckedstring.'\">\n            </dt>\n            <dd class=\"dropdowndd\">\n                <div class=\"multiselectcheckbox'.$htmlname.'\">\n                    <ul class=\"ul'.$htmlname.'\">\n                    '.$listoffieldsforselection.'\n                    </ul>\n                </div>\n            </dd>\n        </dl>\n\n        <script type=\"text/javascript\">\n          jQuery(document).ready(function () {\n              $(\\'.multiselectcheckbox'.$htmlname.' input[type=\"checkbox\"]\\').on(\\'click\\', function () {\n                  console.log(\"A new field was added/removed, we edit field input[name=formfilteraction]\");\n\n                  $(\"input:hidden[name=formfilteraction]\").val(\\'listafterchangingselectedfields\\');\t// Update field so we know we changed something on selected fields after POST\n\n                  var title = $(this).val() + \",\";\n                  if ($(this).is(\\':checked\\')) {\n                      $(\\'.'.$htmlname.'\\').val(title + $(\\'.'.$htmlname.'\\').val());\n                  }\n                  else {\n                      $(\\'.'.$htmlname.'\\').val( $(\\'.'.$htmlname.'\\').val().replace(title, \\'\\') )\n                  }\n                  // Now, we submit page\n                  //$(this).parents(\\'form:first\\').submit();\n              });\n\n\n           });\n        </script>\n\n        ';\n\t\treturn $out;\n\t}\n\n\t/**\n\t * \tRender list of categories linked to object with id $id and type $type\n\t *\n\t * \t@param\t\tint\t\t$id\t\t\t\tId of object\n\t * \t@param\t\tstring\t$type\t\t\tType of category ('member', 'customer', 'supplier', 'product', 'contact'). Old mode (0, 1, 2, ...) is deprecated.\n\t *  @param\t\tint\t\t$rendermode\t\t0=Default, use multiselect. 1=Emulate multiselect (recommended)\n\t *  @param\t\tint\t\t$nolink\t\t\t1=Do not add html links\n\t * \t@return\t\tstring\t\t\t\t\tString with categories\n\t */\n\tpublic function showCategories($id, $type, $rendermode = 0, $nolink = 0)\n\t{\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\n\t\t$cat = new Categorie($this->db);\n\t\t$categories = $cat->containing($id, $type);\n\n\t\tif ($rendermode == 1) {\n\t\t\t$toprint = array();\n\t\t\tforeach ($categories as $c) {\n\t\t\t\t$ways = $c->print_all_ways(' &gt;&gt; ', ($nolink ? 'none' : ''), 0, 1); // $ways[0] = \"ccc2 >> ccc2a >> ccc2a1\" with html formated text\n\t\t\t\tforeach ($ways as $way) {\n\t\t\t\t\t$toprint[] = '<li class=\"select2-search-choice-dolibarr noborderoncategories\"'.($c->color ? ' style=\"background: #'.$c->color.';\"' : ' style=\"background: #bbb\"').'>'.$way.'</li>';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '<div class=\"select2-container-multi-dolibarr\"><ul class=\"select2-choices-dolibarr\">'.implode(' ', $toprint).'</ul></div>';\n\t\t}\n\n\t\tif ($rendermode == 0) {\n\t\t\t$arrayselected = array();\n\t\t\t$cate_arbo = $this->select_all_categories($type, '', 'parent', 64, 0, 1);\n\t\t\tforeach ($categories as $c) {\n\t\t\t\t$arrayselected[] = $c->id;\n\t\t\t}\n\n\t\t\treturn $this->multiselectarray('categories', $cate_arbo, $arrayselected, '', 0, '', 0, '100%', 'disabled', 'category');\n\t\t}\n\n\t\treturn 'ErrorBadValueForParameterRenderMode'; // Should not happened\n\t}\n\n\t/**\n\t *  Show linked object block.\n\t *\n\t *  @param\tCommonObject\t$object\t\t      Object we want to show links to\n\t *  @param  string          $morehtmlright    More html to show on right of title\n\t *  @param  array           $compatibleImportElementsList  Array of compatibles elements object for \"import from\" action\n\t *  @return\tint\t\t\t\t\t\t\t      <0 if KO, >=0 if OK\n\t */\n\tpublic function showLinkedObjectBlock($object, $morehtmlright = '', $compatibleImportElementsList = false)\n\t{\n\t\tglobal $conf, $langs, $hookmanager;\n\t\tglobal $bc, $action;\n\n\t\t$object->fetchObjectLinked();\n\n\t\t// Bypass the default method\n\t\t$hookmanager->initHooks(array('commonobject'));\n\t\t$parameters = array(\n\t\t\t'morehtmlright' => $morehtmlright,\n\t\t\t'compatibleImportElementsList' => &$compatibleImportElementsList,\n\t\t);\n\t\t$reshook = $hookmanager->executeHooks('showLinkedObjectBlock', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\n\t\tif (empty($reshook)) {\n\t\t\t$nbofdifferenttypes = count($object->linkedObjects);\n\n\t\t\tprint '<!-- showLinkedObjectBlock -->';\n\t\t\tprint load_fiche_titre($langs->trans('RelatedObjects'), $morehtmlright, '', 0, 0, 'showlinkedobjectblock');\n\n\n\t\t\tprint '<div class=\"div-table-responsive-no-min\">';\n\t\t\tprint '<table class=\"noborder allwidth\" data-block=\"showLinkedObject\" data-element=\"'.$object->element.'\"  data-elementid=\"'.$object->id.'\"   >';\n\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\tprint '<td>'.$langs->trans(\"Type\").'</td>';\n\t\t\tprint '<td>'.$langs->trans(\"Ref\").'</td>';\n\t\t\tprint '<td class=\"center\"></td>';\n\t\t\tprint '<td class=\"center\">'.$langs->trans(\"Date\").'</td>';\n\t\t\tprint '<td class=\"right\">'.$langs->trans(\"AmountHTShort\").'</td>';\n\t\t\tprint '<td class=\"right\">'.$langs->trans(\"Status\").'</td>';\n\t\t\tprint '<td></td>';\n\t\t\tprint '</tr>';\n\n\t\t\t$nboftypesoutput = 0;\n\n\t\t\tforeach ($object->linkedObjects as $objecttype => $objects) {\n\t\t\t\t$tplpath = $element = $subelement = $objecttype;\n\n\t\t\t\t// to display inport button on tpl\n\t\t\t\t$showImportButton = false;\n\t\t\t\tif (!empty($compatibleImportElementsList) && in_array($element, $compatibleImportElementsList)) {\n\t\t\t\t\t$showImportButton = true;\n\t\t\t\t}\n\n\t\t\t\t$regs = array();\n\t\t\t\tif ($objecttype != 'supplier_proposal' && preg_match('/^([^_]+)_([^_]+)/i', $objecttype, $regs)) {\n\t\t\t\t\t$element = $regs[1];\n\t\t\t\t\t$subelement = $regs[2];\n\t\t\t\t\t$tplpath = $element.'/'.$subelement;\n\t\t\t\t}\n\t\t\t\t$tplname = 'linkedobjectblock';\n\n\t\t\t\t// To work with non standard path\n\t\t\t\tif ($objecttype == 'facture') {\n\t\t\t\t\t$tplpath = 'compta/'.$element;\n\t\t\t\t\tif (empty($conf->facture->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'facturerec') {\n\t\t\t\t\t$tplpath = 'compta/facture';\n\t\t\t\t\t$tplname = 'linkedobjectblockForRec';\n\t\t\t\t\tif (empty($conf->facture->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'propal') {\n\t\t\t\t\t$tplpath = 'comm/'.$element;\n\t\t\t\t\tif (empty($conf->propal->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'supplier_proposal') {\n\t\t\t\t\tif (empty($conf->supplier_proposal->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'shipping' || $objecttype == 'shipment') {\n\t\t\t\t\t$tplpath = 'expedition';\n\t\t\t\t\tif (empty($conf->expedition->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'reception') {\n\t\t\t\t\t$tplpath = 'reception';\n\t\t\t\t\tif (empty($conf->reception->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'delivery') {\n\t\t\t\t\t$tplpath = 'delivery';\n\t\t\t\t\tif (empty($conf->expedition->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'mo') {\n\t\t\t\t\t$tplpath = 'mrp/mo';\n\t\t\t\t\tif (empty($conf->mrp->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'ficheinter') {\n\t\t\t\t\t$tplpath = 'fichinter';\n\t\t\t\t\tif (empty($conf->ficheinter->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'invoice_supplier') {\n\t\t\t\t\t$tplpath = 'fourn/facture';\n\t\t\t\t} elseif ($objecttype == 'order_supplier') {\n\t\t\t\t\t$tplpath = 'fourn/commande';\n\t\t\t\t} elseif ($objecttype == 'expensereport') {\n\t\t\t\t\t$tplpath = 'expensereport';\n\t\t\t\t} elseif ($objecttype == 'subscription') {\n\t\t\t\t\t$tplpath = 'adherents';\n\t\t\t\t} elseif ($objecttype == 'conferenceorbooth') {\n\t\t\t\t\t$tplpath = 'eventorganization';\n\t\t\t\t} elseif ($objecttype == 'conferenceorboothattendee') {\n\t\t\t\t\t$tplpath = 'eventorganization';\n\t\t\t\t} elseif ($objecttype == 'mo') {\n\t\t\t\t\t$tplpath = 'mrp';\n\t\t\t\t\tif (empty($conf->mrp->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tglobal $linkedObjectBlock;\n\t\t\t\t$linkedObjectBlock = $objects;\n\n\t\t\t\t// Output template part (modules that overwrite templates must declare this into descriptor)\n\t\t\t\t$dirtpls = array_merge($conf->modules_parts['tpl'], array('/'.$tplpath.'/tpl'));\n\t\t\t\tforeach ($dirtpls as $reldir) {\n\t\t\t\t\tif ($nboftypesoutput == ($nbofdifferenttypes - 1)) {    // No more type to show after\n\t\t\t\t\t\tglobal $noMoreLinkedObjectBlockAfter;\n\t\t\t\t\t\t$noMoreLinkedObjectBlockAfter = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t$res = @include dol_buildpath($reldir.'/'.$tplname.'.tpl.php');\n\t\t\t\t\tif ($res) {\n\t\t\t\t\t\t$nboftypesoutput++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$nboftypesoutput) {\n\t\t\t\tprint '<tr><td class=\"impair\" colspan=\"7\"><span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span></td></tr>';\n\t\t\t}\n\n\t\t\tprint '</table>';\n\n\t\t\tif (!empty($compatibleImportElementsList)) {\n\t\t\t\t$res = @include dol_buildpath('core/tpl/ajax/objectlinked_lineimport.tpl.php');\n\t\t\t}\n\n\n\t\t\tprint '</div>';\n\n\t\t\treturn $nbofdifferenttypes;\n\t\t}\n\t}\n\n\t/**\n\t *  Show block with links to link to other objects.\n\t *\n\t *  @param\tCommonObject\t$object\t\t\t\tObject we want to show links to\n\t *  @param\tarray\t\t\t$restrictlinksto\tRestrict links to some elements, for exemple array('order') or array('supplier_order'). null or array() if no restriction.\n\t *  @param\tarray\t\t\t$excludelinksto\t\tDo not show links of this type, for exemple array('order') or array('supplier_order'). null or array() if no exclusion.\n\t *  @return\tstring\t\t\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function showLinkToObjectBlock($object, $restrictlinksto = array(), $excludelinksto = array())\n\t{\n\t\tglobal $conf, $langs, $hookmanager;\n\t\tglobal $bc, $action;\n\n\t\t$linktoelem = '';\n\t\t$linktoelemlist = '';\n\t\t$listofidcompanytoscan = '';\n\n\t\tif (!is_object($object->thirdparty)) {\n\t\t\t$object->fetch_thirdparty();\n\t\t}\n\n\t\t$possiblelinks = array();\n\t\tif (is_object($object->thirdparty) && !empty($object->thirdparty->id) && $object->thirdparty->id > 0) {\n\t\t\t$listofidcompanytoscan = $object->thirdparty->id;\n\t\t\tif (($object->thirdparty->parent > 0) && !empty($conf->global->THIRDPARTY_INCLUDE_PARENT_IN_LINKTO)) {\n\t\t\t\t$listofidcompanytoscan .= ','.$object->thirdparty->parent;\n\t\t\t}\n\t\t\tif (($object->fk_project > 0) && !empty($conf->global->THIRDPARTY_INCLUDE_PROJECT_THIRDPARY_IN_LINKTO)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n\t\t\t\t$tmpproject = new Project($this->db);\n\t\t\t\t$tmpproject->fetch($object->fk_project);\n\t\t\t\tif ($tmpproject->socid > 0 && ($tmpproject->socid != $object->thirdparty->id)) {\n\t\t\t\t\t$listofidcompanytoscan .= ','.$tmpproject->socid;\n\t\t\t\t}\n\t\t\t\tunset($tmpproject);\n\t\t\t}\n\n\t\t\t$possiblelinks = array(\n\t\t\t\t'propal'=>array('enabled'=>$conf->propal->enabled, 'perms'=>1, 'label'=>'LinkToProposal', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_client, t.total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"propal as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('propal').')'),\n\t\t\t\t'order'=>array('enabled'=>$conf->commande->enabled, 'perms'=>1, 'label'=>'LinkToOrder', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_client, t.total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"commande as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('commande').')'),\n\t\t\t\t'invoice'=>array('enabled'=>$conf->facture->enabled, 'perms'=>1, 'label'=>'LinkToInvoice', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_client, t.total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"facture as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('invoice').')'),\n\t\t\t\t'invoice_template'=>array('enabled'=>$conf->facture->enabled, 'perms'=>1, 'label'=>'LinkToTemplateInvoice', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.titre as ref, t.total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"facture_rec as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('invoice').')'),\n\t\t\t\t'contrat'=>array(\n\t\t\t\t\t'enabled'=>$conf->contrat->enabled,\n\t\t\t\t\t'perms'=>1,\n\t\t\t\t\t'label'=>'LinkToContract',\n\t\t\t\t\t'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_customer as ref_client, t.ref_supplier, SUM(td.total_ht) as total_ht\n\t\t\t\t\t\t\tFROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"contrat as t, \".$this->db->prefix().\"contratdet as td WHERE t.fk_soc = s.rowid AND td.fk_contrat = t.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('contract').') GROUP BY s.rowid, s.nom, s.client, t.rowid, t.ref, t.ref_customer, t.ref_supplier'\n\t\t\t\t),\n\t\t\t\t'fichinter'=>array('enabled'=>!empty($conf->ficheinter->enabled) ? $conf->ficheinter->enabled : 0, 'perms'=>1, 'label'=>'LinkToIntervention', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"fichinter as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('intervention').')'),\n\t\t\t\t'supplier_proposal'=>array('enabled'=>$conf->supplier_proposal->enabled, 'perms'=>1, 'label'=>'LinkToSupplierProposal', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, '' as ref_supplier, t.total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"supplier_proposal as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('supplier_proposal').')'),\n\t\t\t\t'order_supplier'=>array('enabled'=>$conf->supplier_order->enabled, 'perms'=>1, 'label'=>'LinkToSupplierOrder', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_supplier, t.total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"commande_fournisseur as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('commande_fournisseur').')'),\n\t\t\t\t'invoice_supplier'=>array('enabled'=>$conf->supplier_invoice->enabled, 'perms'=>1, 'label'=>'LinkToSupplierInvoice', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_supplier, t.total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"facture_fourn as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('facture_fourn').')'),\n\t\t\t\t'ticket'=>array('enabled'=>$conf->ticket->enabled, 'perms'=>1, 'label'=>'LinkToTicket', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.track_id, '0' as total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"ticket as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('ticket').')'),\n\t\t\t\t'mo'=>array('enabled'=>$conf->mrp->enabled, 'perms'=>1, 'label'=>'LinkToMo', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.rowid, '0' as total_ht FROM \".$this->db->prefix().\"societe as s INNER JOIN \".$this->db->prefix().\"mrp_mo as t ON t.fk_soc = s.rowid  WHERE  t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('mo').')')\n\t\t\t);\n\t\t}\n\n\t\t// Can complete the possiblelink array\n\t\t$hookmanager->initHooks(array('commonobject'));\n\t\t$parameters = array('listofidcompanytoscan' => $listofidcompanytoscan);\n\n\t\tif (!empty($listofidcompanytoscan)) {  // If empty, we don't have criteria to scan the object we can link to\n\t\t\t$reshook = $hookmanager->executeHooks('showLinkToObjectBlock', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\t}\n\n\t\tif (empty($reshook)) {\n\t\t\tif (is_array($hookmanager->resArray) && count($hookmanager->resArray)) {\n\t\t\t\t$possiblelinks = array_merge($possiblelinks, $hookmanager->resArray);\n\t\t\t}\n\t\t} elseif ($reshook > 0) {\n\t\t\tif (is_array($hookmanager->resArray) && count($hookmanager->resArray)) {\n\t\t\t\t$possiblelinks = $hookmanager->resArray;\n\t\t\t}\n\t\t}\n\n\t\tforeach ($possiblelinks as $key => $possiblelink) {\n\t\t\t$num = 0;\n\n\t\t\tif (empty($possiblelink['enabled'])) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!empty($possiblelink['perms']) && (empty($restrictlinksto) || in_array($key, $restrictlinksto)) && (empty($excludelinksto) || !in_array($key, $excludelinksto))) {\n\t\t\t\tprint '<div id=\"'.$key.'list\"'.(empty($conf->use_javascript_ajax) ? '' : ' style=\"display:none\"').'>';\n\n\t\t\t\tif (!empty($conf->global->MAIN_LINK_BY_REF_IN_LINKTO)) {\n\t\t\t\t\tprint '<br><form action=\"' . $_SERVER[\"PHP_SELF\"] . '\" method=\"POST\" name=\"formlinkedbyref' . $key . '\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"id\" value=\"' . $object->id . '\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"addlinkbyref\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"addlink\" value=\"' . $key . '\">';\n\t\t\t\t\tprint '<table class=\"noborder\">';\n\t\t\t\t\tprint '<tr>';\n\t\t\t\t\tprint '<td>' . $langs->trans(\"Ref\") . '</td>';\n\t\t\t\t\tprint '<td><input type=\"text\" name=\"reftolinkto\" value=\"' . dol_escape_htmltag(GETPOST('reftolinkto', 'alpha')) . '\">&nbsp;<input type=\"submit\" class=\"button valignmiddle\" value=\"' . $langs->trans('ToLink') . '\">&nbsp;<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"' . $langs->trans('Cancel') . '\"></td>';\n\t\t\t\t\tprint '</tr>';\n\t\t\t\t\tprint '</table>';\n\t\t\t\t\tprint '</form>';\n\t\t\t\t}\n\n\t\t\t\t$sql = $possiblelink['sql'];\n\n\t\t\t\t$resqllist = $this->db->query($sql);\n\t\t\t\tif ($resqllist) {\n\t\t\t\t\t$num = $this->db->num_rows($resqllist);\n\t\t\t\t\t$i = 0;\n\n\t\t\t\t\tprint '<br>';\n\t\t\t\t\tprint '<form action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"POST\" name=\"formlinked'.$key.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"addlink\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"id\" value=\"'.$object->id.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"addlink\" value=\"'.$key.'\">';\n\t\t\t\t\tprint '<table class=\"noborder\">';\n\t\t\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\t\t\tprint '<td class=\"nowrap\"></td>';\n\t\t\t\t\tprint '<td class=\"center\">'.$langs->trans(\"Ref\").'</td>';\n\t\t\t\t\tprint '<td class=\"left\">'.$langs->trans(\"RefCustomer\").'</td>';\n\t\t\t\t\tprint '<td class=\"right\">'.$langs->trans(\"AmountHTShort\").'</td>';\n\t\t\t\t\tprint '<td class=\"left\">'.$langs->trans(\"Company\").'</td>';\n\t\t\t\t\tprint '</tr>';\n\t\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t\t$objp = $this->db->fetch_object($resqllist);\n\n\t\t\t\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\t\t\t\tprint '<td class=\"left\">';\n\t\t\t\t\t\tprint '<input type=\"radio\" name=\"idtolinkto\" id=\"'.$key.'_'.$objp->rowid.'\" value=\"'.$objp->rowid.'\">';\n\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t\tprint '<td class=\"center\"><label for=\"'.$key.'_'.$objp->rowid.'\">'.$objp->ref.'</label></td>';\n\t\t\t\t\t\tprint '<td>'.(!empty($objp->ref_client) ? $objp->ref_client : (!empty($objp->ref_supplier) ? $objp->ref_supplier : '')).'</td>';\n\t\t\t\t\t\tprint '<td class=\"right\">';\n\t\t\t\t\t\tif ($possiblelink['label'] == 'LinkToContract') {\n\t\t\t\t\t\t\t$form = new Form($this->db);\n\t\t\t\t\t\t\tprint $form->textwithpicto('', $langs->trans(\"InformationOnLinkToContract\")).' ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint '<span class=\"amount\">'.price($objp->total_ht).'</span>';\n\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t\tprint '<td>'.$objp->name.'</td>';\n\t\t\t\t\t\tprint '</tr>';\n\t\t\t\t\t\t$i++;\n\t\t\t\t\t}\n\t\t\t\t\tprint '</table>';\n\t\t\t\t\tprint '<div class=\"center\">';\n\t\t\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle marginleftonly marginrightonly\" value=\"'.$langs->trans('ToLink').'\">';\n\t\t\t\t\tif (empty($conf->use_javascript_ajax)) {\n\t\t\t\t\t\tprint '<input type=\"submit\" class=\"button button-cancel marginleftonly marginrightonly\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\"></div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<input type=\"submit\"; onclick=\"javascript:jQuery(\\'#'.$key.'list\\').toggle(); return false;\" class=\"button button-cancel marginleftonly marginrightonly\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\"></div>';\n\t\t\t\t\t}\n\t\t\t\t\tprint '</form>';\n\t\t\t\t\t$this->db->free($resqllist);\n\t\t\t\t} else {\n\t\t\t\t\tdol_print_error($this->db);\n\t\t\t\t}\n\t\t\t\tprint '</div>';\n\n\t\t\t\t//$linktoelem.=($linktoelem?' &nbsp; ':'');\n\t\t\t\tif ($num > 0 || !empty($conf->global->MAIN_LINK_BY_REF_IN_LINKTO)) {\n\t\t\t\t\t$linktoelemlist .= '<li><a href=\"#linkto'.$key.'\" class=\"linkto dropdowncloseonclick\" rel=\"'.$key.'\">'.$langs->trans($possiblelink['label']).' ('.$num.')</a></li>';\n\t\t\t\t\t// } else $linktoelem.=$langs->trans($possiblelink['label']);\n\t\t\t\t} else {\n\t\t\t\t\t$linktoelemlist .= '<li><span class=\"linktodisabled\">'.$langs->trans($possiblelink['label']).' (0)</span></li>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($linktoelemlist) {\n\t\t\t$linktoelem = '\n    \t\t<dl class=\"dropdown\" id=\"linktoobjectname\">\n    \t\t';\n\t\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t\t$linktoelem .= '<dt><a href=\"#linktoobjectname\"><span class=\"fas fa-link paddingrightonly\"></span>'.$langs->trans(\"LinkTo\").'...</a></dt>';\n\t\t\t}\n\t\t\t$linktoelem .= '<dd>\n    \t\t<div class=\"multiselectlinkto\">\n    \t\t<ul class=\"ulselectedfields\">'.$linktoelemlist.'\n    \t\t</ul>\n    \t\t</div>\n    \t\t</dd>\n    \t\t</dl>';\n\t\t} else {\n\t\t\t$linktoelem = '';\n\t\t}\n\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\tprint '<!-- Add js to show linkto box -->\n\t\t\t\t<script>\n\t\t\t\tjQuery(document).ready(function() {\n\t\t\t\t\tjQuery(\".linkto\").click(function() {\n\t\t\t\t\t\tconsole.log(\"We choose to show/hide links for rel=\"+jQuery(this).attr(\\'rel\\')+\" so #\"+jQuery(this).attr(\\'rel\\')+\"list\");\n\t\t\t\t\t    jQuery(\"#\"+jQuery(this).attr(\\'rel\\')+\"list\").toggle();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t</script>\n\t\t    ';\n\t\t}\n\n\t\treturn $linktoelem;\n\t}\n\n\t/**\n\t *\tReturn an html string with a select combo box to choose yes or no\n\t *\n\t *\t@param\tstring\t\t$htmlname\t\tName of html select field\n\t *\t@param\tstring\t\t$value\t\t\tPre-selected value\n\t *\t@param\tint\t\t\t$option\t\t\t0 return yes/no, 1 return 1/0\n\t *\t@param\tbool\t\t$disabled\t\ttrue or false\n\t *  @param\tint      \t$useempty\t\t1=Add empty line\n\t *  @param\tint\t\t\t$addjscombo\t\t1=Add js beautifier on combo box\n\t *  @param\tstring\t\t$morecss\t\tMore CSS\n\t *\t@return\tstring\t\t\t\t\t\tSee option\n\t */\n\tpublic function selectyesno($htmlname, $value = '', $option = 0, $disabled = false, $useempty = 0, $addjscombo = 0, $morecss = '')\n\t{\n\t\tglobal $langs;\n\n\t\t$yes = \"yes\";\n\t\t$no = \"no\";\n\t\tif ($option) {\n\t\t\t$yes = \"1\";\n\t\t\t$no = \"0\";\n\t\t}\n\n\t\t$disabled = ($disabled ? ' disabled' : '');\n\n\t\t$resultyesno = '<select class=\"flat width75'.($morecss ? ' '.$morecss : '').'\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\"'.$disabled.'>'.\"\\n\";\n\t\tif ($useempty) {\n\t\t\t$resultyesno .= '<option value=\"-1\"'.(($value < 0) ? ' selected' : '').'>&nbsp;</option>'.\"\\n\";\n\t\t}\n\t\tif ((\"$value\" == 'yes') || ($value == 1)) {\n\t\t\t$resultyesno .= '<option value=\"'.$yes.'\" selected>'.$langs->trans(\"Yes\").'</option>'.\"\\n\";\n\t\t\t$resultyesno .= '<option value=\"'.$no.'\">'.$langs->trans(\"No\").'</option>'.\"\\n\";\n\t\t} else {\n\t\t\t$selected = (($useempty && $value != '0' && $value != 'no') ? '' : ' selected');\n\t\t\t$resultyesno .= '<option value=\"'.$yes.'\">'.$langs->trans(\"Yes\").'</option>'.\"\\n\";\n\t\t\t$resultyesno .= '<option value=\"'.$no.'\"'.$selected.'>'.$langs->trans(\"No\").'</option>'.\"\\n\";\n\t\t}\n\t\t$resultyesno .= '</select>'.\"\\n\";\n\n\t\tif ($addjscombo) {\n\t\t\t$resultyesno .= ajax_combobox($htmlname);\n\t\t}\n\n\t\treturn $resultyesno;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return list of export templates\n\t *\n\t *  @param\tstring\t$selected          Id modele pre-selectionne\n\t *  @param  string\t$htmlname          Name of HTML select\n\t *  @param  string\t$type              Type of searched templates\n\t *  @param  int\t\t$useempty          Affiche valeur vide dans liste\n\t *  @return\tvoid\n\t */\n\tpublic function select_export_model($selected = '', $htmlname = 'exportmodelid', $type = '', $useempty = 0)\n\t{\n\t\t// phpcs:enable\n\t\t$sql = \"SELECT rowid, label\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"export_model\";\n\t\t$sql .= \" WHERE type = '\".$this->db->escape($type).\"'\";\n\t\t$sql .= \" ORDER BY rowid\";\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\tprint '<select class=\"flat\" id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t\tif ($useempty) {\n\t\t\t\tprint '<option value=\"-1\">&nbsp;</option>';\n\t\t\t}\n\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\tif ($selected == $obj->rowid) {\n\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>';\n\t\t\t\t} else {\n\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">';\n\t\t\t\t}\n\t\t\t\tprint $obj->label;\n\t\t\t\tprint '</option>';\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tprint \"</select>\";\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *    Return a HTML area with the reference of object and a navigation bar for a business object\n\t *    Note: To complete search with a particular filter on select, you can set $object->next_prev_filter set to define SQL criterias.\n\t *\n\t *    @param\tobject\t$object\t\t\tObject to show.\n\t *    @param\tstring\t$paramid   \t\tName of parameter to use to name the id into the URL next/previous link.\n\t *    @param\tstring\t$morehtml  \t\tMore html content to output just before the nav bar.\n\t *    @param\tint\t\t$shownav\t  \tShow Condition (navigation is shown if value is 1).\n\t *    @param\tstring\t$fieldid   \t\tName of field id into database to use for select next and previous (we make the select max and min on this field compared to $object->ref). Use 'none' to disable next/prev.\n\t *    @param\tstring\t$fieldref   \tName of field ref of object (object->ref) to show or 'none' to not show ref.\n\t *    @param\tstring\t$morehtmlref  \tMore html to show after ref.\n\t *    @param\tstring\t$moreparam  \tMore param to add in nav link url. Must start with '&...'.\n\t *\t  @param\tint\t\t$nodbprefix\t\tDo not include DB prefix to forge table name.\n\t *\t  @param\tstring\t$morehtmlleft\tMore html code to show before ref.\n\t *\t  @param\tstring\t$morehtmlstatus\tMore html code to show under navigation arrows (status place).\n\t *\t  @param\tstring\t$morehtmlright\tMore html code to show after ref.\n\t * \t  @return\tstring    \t\t\t\tPortion HTML with ref + navigation buttons\n\t */\n\tpublic function showrefnav($object, $paramid, $morehtml = '', $shownav = 1, $fieldid = 'rowid', $fieldref = 'ref', $morehtmlref = '', $moreparam = '', $nodbprefix = 0, $morehtmlleft = '', $morehtmlstatus = '', $morehtmlright = '')\n\t{\n\t\tglobal $conf, $langs, $hookmanager, $extralanguages;\n\n\t\t$ret = '';\n\t\tif (empty($fieldid)) {\n\t\t\t$fieldid = 'rowid';\n\t\t}\n\t\tif (empty($fieldref)) {\n\t\t\t$fieldref = 'ref';\n\t\t}\n\n\t\t// Preparing gender's display if there is one\n\t\t$addgendertxt = '';\n\t\tif (property_exists($object, 'gender') && !empty($object->gender)) {\n\t\t\t$addgendertxt = ' ';\n\t\t\tswitch ($object->gender) {\n\t\t\t\tcase 'man':\n\t\t\t\t\t$addgendertxt .= '<i class=\"fas fa-mars\"></i>';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'woman':\n\t\t\t\t\t$addgendertxt .= '<i class=\"fas fa-venus\"></i>';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'other':\n\t\t\t\t\t$addgendertxt .= '<i class=\"fas fa-genderless\"></i>';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t$addadmin = '';\n\t\tif (property_exists($object, 'admin')) {\n\t\t\tif (!empty($conf->multicompany->enabled) && !empty($object->admin) && empty($object->entity)) {\n\t\t\t\t$addadmin .= img_picto($langs->trans(\"SuperAdministratorDesc\"), \"redstar\", 'class=\"paddingleft\"');\n\t\t\t} elseif (!empty($object->admin)) {\n\t\t\t\t$addadmin .= img_picto($langs->trans(\"AdministratorDesc\"), \"star\", 'class=\"paddingleft\"');\n\t\t\t}\n\t\t}*/\n\n\t\t// Add where from hooks\n\t\tif (is_object($hookmanager)) {\n\t\t\t$parameters = array();\n\t\t\t$reshook = $hookmanager->executeHooks('printFieldListWhere', $parameters, $object); // Note that $action and $object may have been modified by hook\n\t\t\t$object->next_prev_filter .= $hookmanager->resPrint;\n\t\t}\n\t\t$previous_ref = $next_ref = '';\n\t\tif ($shownav) {\n\t\t\t//print \"paramid=$paramid,morehtml=$morehtml,shownav=$shownav,$fieldid,$fieldref,$morehtmlref,$moreparam\";\n\t\t\t$object->load_previous_next_ref((isset($object->next_prev_filter) ? $object->next_prev_filter : ''), $fieldid, $nodbprefix);\n\n\t\t\t$navurl = $_SERVER[\"PHP_SELF\"];\n\t\t\t// Special case for project/task page\n\t\t\tif ($paramid == 'project_ref') {\n\t\t\t\tif (preg_match('/\\/tasks\\/(task|contact|note|document)\\.php/', $navurl)) {     // TODO Remove this when nav with project_ref on task pages are ok\n\t\t\t\t\t$navurl = preg_replace('/\\/tasks\\/(task|contact|time|note|document)\\.php/', '/tasks.php', $navurl);\n\t\t\t\t\t$paramid = 'ref';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// accesskey is for Windows or Linux:  ALT + key for chrome, ALT + SHIFT + KEY for firefox\n\t\t\t// accesskey is for Mac:               CTRL + key for all browsers\n\t\t\t$stringforfirstkey = $langs->trans(\"KeyboardShortcut\");\n\t\t\tif ($conf->browser->name == 'chrome') {\n\t\t\t\t$stringforfirstkey .= ' ALT +';\n\t\t\t} elseif ($conf->browser->name == 'firefox') {\n\t\t\t\t$stringforfirstkey .= ' ALT + SHIFT +';\n\t\t\t} else {\n\t\t\t\t$stringforfirstkey .= ' CTL +';\n\t\t\t}\n\n\t\t\t$previous_ref = $object->ref_previous ? '<a accesskey=\"p\" title=\"'.$stringforfirstkey.' p\" class=\"classfortooltip\" href=\"'.$navurl.'?'.$paramid.'='.urlencode($object->ref_previous).$moreparam.'\"><i class=\"fa fa-chevron-left\"></i></a>' : '<span class=\"inactive\"><i class=\"fa fa-chevron-left opacitymedium\"></i></span>';\n\t\t\t$next_ref     = $object->ref_next ? '<a accesskey=\"n\" title=\"'.$stringforfirstkey.' n\" class=\"classfortooltip\" href=\"'.$navurl.'?'.$paramid.'='.urlencode($object->ref_next).$moreparam.'\"><i class=\"fa fa-chevron-right\"></i></a>' : '<span class=\"inactive\"><i class=\"fa fa-chevron-right opacitymedium\"></i></span>';\n\t\t}\n\n\t\t//print \"xx\".$previous_ref.\"x\".$next_ref;\n\t\t$ret .= '<!-- Start banner content --><div style=\"vertical-align: middle\">';\n\n\t\t// Right part of banner\n\t\tif ($morehtmlright) {\n\t\t\t$ret .= '<div class=\"inline-block floatleft\">'.$morehtmlright.'</div>';\n\t\t}\n\n\t\tif ($previous_ref || $next_ref || $morehtml) {\n\t\t\t$ret .= '<div class=\"pagination paginationref\"><ul class=\"right\">';\n\t\t}\n\t\tif ($morehtml) {\n\t\t\t$ret .= '<li class=\"noborder litext'.(($shownav && $previous_ref && $next_ref) ? ' clearbothonsmartphone' : '').'\">'.$morehtml.'</li>';\n\t\t}\n\t\tif ($shownav && ($previous_ref || $next_ref)) {\n\t\t\t$ret .= '<li class=\"pagination\">'.$previous_ref.'</li>';\n\t\t\t$ret .= '<li class=\"pagination\">'.$next_ref.'</li>';\n\t\t}\n\t\tif ($previous_ref || $next_ref || $morehtml) {\n\t\t\t$ret .= '</ul></div>';\n\t\t}\n\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('moreHtmlStatus', $parameters, $object); // Note that $action and $object may have been modified by hook\n\t\tif (empty($reshook)) {\n\t\t\t$morehtmlstatus .= $hookmanager->resPrint;\n\t\t} else {\n\t\t\t$morehtmlstatus = $hookmanager->resPrint;\n\t\t}\n\t\tif ($morehtmlstatus) {\n\t\t\t$ret .= '<div class=\"statusref\">'.$morehtmlstatus.'</div>';\n\t\t}\n\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('moreHtmlRef', $parameters, $object); // Note that $action and $object may have been modified by hook\n\t\tif (empty($reshook)) {\n\t\t\t$morehtmlref .= $hookmanager->resPrint;\n\t\t} elseif ($reshook > 0) {\n\t\t\t$morehtmlref = $hookmanager->resPrint;\n\t\t}\n\n\t\t// Left part of banner\n\t\tif ($morehtmlleft) {\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\t$ret .= '<!-- morehtmlleft --><div class=\"floatleft\">'.$morehtmlleft.'</div>'; // class=\"center\" to have photo in middle\n\t\t\t} else {\n\t\t\t\t$ret .= '<!-- morehtmlleft --><div class=\"inline-block floatleft\">'.$morehtmlleft.'</div>';\n\t\t\t}\n\t\t}\n\n\t\t//if ($conf->browser->layout == 'phone') $ret.='<div class=\"clearboth\"></div>';\n\t\t$ret .= '<div class=\"inline-block floatleft valignmiddle maxwidth750 marginbottomonly refid'.(($shownav && ($previous_ref || $next_ref)) ? ' refidpadding' : '').'\">';\n\n\t\t// For thirdparty, contact, user, member, the ref is the id, so we show something else\n\t\tif ($object->element == 'societe') {\n\t\t\t$ret .= dol_htmlentities($object->name);\n\n\t\t\t// List of extra languages\n\t\t\t$arrayoflangcode = array();\n\t\t\tif (!empty($conf->global->PDF_USE_ALSO_LANGUAGE_CODE)) {\n\t\t\t\t$arrayoflangcode[] = $conf->global->PDF_USE_ALSO_LANGUAGE_CODE;\n\t\t\t}\n\n\t\t\tif (is_array($arrayoflangcode) && count($arrayoflangcode)) {\n\t\t\t\tif (!is_object($extralanguages)) {\n\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/extralanguages.class.php';\n\t\t\t\t\t$extralanguages = new ExtraLanguages($this->db);\n\t\t\t\t}\n\t\t\t\t$extralanguages->fetch_name_extralanguages('societe');\n\n\t\t\t\tif (!empty($extralanguages->attributes['societe']['name'])) {\n\t\t\t\t\t$object->fetchValuesForExtraLanguages();\n\n\t\t\t\t\t$htmltext = '';\n\t\t\t\t\t// If there is extra languages\n\t\t\t\t\tforeach ($arrayoflangcode as $extralangcode) {\n\t\t\t\t\t\t$htmltext .= picto_from_langcode($extralangcode, 'class=\"pictoforlang paddingright\"');\n\t\t\t\t\t\tif ($object->array_languages['name'][$extralangcode]) {\n\t\t\t\t\t\t\t$htmltext .= $object->array_languages['name'][$extralangcode];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$htmltext .= '<span class=\"opacitymedium\">'.$langs->trans(\"SwitchInEditModeToAddTranslation\").'</span>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$ret .= '<!-- Show translations of name -->'.\"\\n\";\n\t\t\t\t\t$ret .= $this->textwithpicto('', $htmltext, -1, 'language', 'opacitymedium paddingleft');\n\t\t\t\t}\n\t\t\t}\n\t\t} elseif ($object->element == 'member') {\n\t\t\t$ret .= $object->ref.'<br>';\n\t\t\t$fullname = $object->getFullName($langs);\n\t\t\tif ($object->morphy == 'mor' && $object->societe) {\n\t\t\t\t$ret .= dol_htmlentities($object->societe).((!empty($fullname) && $object->societe != $fullname) ? ' ('.dol_htmlentities($fullname).$addgendertxt.')' : '');\n\t\t\t} else {\n\t\t\t\t$ret .= dol_htmlentities($fullname).$addgendertxt.((!empty($object->societe) && $object->societe != $fullname) ? ' ('.dol_htmlentities($object->societe).')' : '');\n\t\t\t}\n\t\t} elseif (in_array($object->element, array('contact', 'user', 'usergroup'))) {\n\t\t\t$ret .= dol_htmlentities($object->getFullName($langs));\n\t\t} elseif (in_array($object->element, array('action', 'agenda'))) {\n\t\t\t$ret .= $object->ref.'<br>'.$object->label;\n\t\t} elseif (in_array($object->element, array('adherent_type'))) {\n\t\t\t$ret .= $object->label;\n\t\t} elseif ($object->element == 'ecm_directories') {\n\t\t\t$ret .= '';\n\t\t} elseif ($fieldref != 'none') {\n\t\t\t$ret .= dol_htmlentities($object->$fieldref);\n\t\t}\n\n\t\tif ($morehtmlref) {\n\t\t\t// don't add a additional space, when \"$morehtmlref\" starts with a HTML div tag\n\t\t\tif (substr($morehtmlref, 0, 4) != '<div') {\n\t\t\t\t$ret .= ' ';\n\t\t\t}\n\n\t\t\t$ret .= $morehtmlref;\n\t\t}\n\n\t\t$ret .= '</div>';\n\n\t\t$ret .= '</div><!-- End banner content -->';\n\n\t\treturn $ret;\n\t}\n\n\n\t/**\n\t *  Return HTML code to output a barcode\n\t *\n\t *  @param\tObject\t$object\t\t\tObject containing data to retrieve file name\n\t * \t@param\tint\t\t$width\t\t\tWidth of photo\n\t * \t@param\tstring\t$morecss\t\tMore CSS on img of barcode\n\t * \t@return string    \t\t\t\tHTML code to output barcode\n\t */\n\tpublic function showbarcode(&$object, $width = 100, $morecss = '')\n\t{\n\t\tglobal $conf;\n\n\t\t//Check if barcode is filled in the card\n\t\tif (empty($object->barcode)) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Complete object if not complete\n\t\tif (empty($object->barcode_type_code) || empty($object->barcode_type_coder)) {\n\t\t\t$result = $object->fetch_barcode();\n\t\t\t//Check if fetch_barcode() failed\n\t\t\tif ($result < 1) {\n\t\t\t\treturn '<!-- ErrorFetchBarcode -->';\n\t\t\t}\n\t\t}\n\n\t\t// Barcode image\n\t\t$url = DOL_URL_ROOT.'/viewimage.php?modulepart=barcode&generator='.urlencode($object->barcode_type_coder).'&code='.urlencode($object->barcode).'&encoding='.urlencode($object->barcode_type_code);\n\t\t$out = '<!-- url barcode = '.$url.' -->';\n\t\t$out .= '<img src=\"'.$url.'\"'.($morecss ? ' class=\"'.$morecss.'\"' : '').'>';\n\t\treturn $out;\n\t}\n\n\t/**\n\t *    \tReturn HTML code to output a photo\n\t *\n\t *    \t@param\tstring\t\t$modulepart\t\t\tKey to define module concerned ('societe', 'userphoto', 'memberphoto')\n\t *     \t@param  object\t\t$object\t\t\t\tObject containing data to retrieve file name\n\t * \t\t@param\tint\t\t\t$width\t\t\t\tWidth of photo\n\t * \t\t@param\tint\t\t\t$height\t\t\t\tHeight of photo (auto if 0)\n\t * \t\t@param\tint\t\t\t$caneditfield\t\tAdd edit fields\n\t * \t\t@param\tstring\t\t$cssclass\t\t\tCSS name to use on img for photo\n\t * \t\t@param\tstring\t\t$imagesize\t\t    'mini', 'small' or '' (original)\n\t *      @param  int         $addlinktofullsize  Add link to fullsize image\n\t *      @param  int         $cache              1=Accept to use image in cache\n\t *      @param\tstring\t\t$forcecapture\t\t'', 'user' or 'environment'. Force parameter capture on HTML input file element to ask a smartphone to allow to open camera to take photo. Auto if ''.\n\t *      @param\tint\t\t\t$noexternsourceoverwrite\tNo overwrite image with extern source (like 'gravatar' or other module)\n\t * \t  \t@return string    \t\t\t\t\t\tHTML code to output photo\n\t */\n\tpublic static function showphoto($modulepart, $object, $width = 100, $height = 0, $caneditfield = 0, $cssclass = 'photowithmargin', $imagesize = '', $addlinktofullsize = 1, $cache = 0, $forcecapture = '', $noexternsourceoverwrite = 0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$entity = (!empty($object->entity) ? $object->entity : $conf->entity);\n\t\t$id = (!empty($object->id) ? $object->id : $object->rowid);\n\n\t\t$ret = '';\n\t\t$dir = '';\n\t\t$file = '';\n\t\t$originalfile = '';\n\t\t$altfile = '';\n\t\t$email = '';\n\t\t$capture = '';\n\t\tif ($modulepart == 'societe') {\n\t\t\t$dir = $conf->societe->multidir_output[$entity];\n\t\t\tif (!empty($object->logo)) {\n\t\t\t\tif (dolIsAllowedForPreview($object->logo)) {\n\t\t\t\t\tif ((string) $imagesize == 'mini') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'thirdparty').'logos/'.getImageFileNameForSize($object->logo, '_mini'); // getImageFileNameForSize include the thumbs\n\t\t\t\t\t} elseif ((string) $imagesize == 'small') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'thirdparty').'logos/'.getImageFileNameForSize($object->logo, '_small');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'thirdparty').'logos/'.$object->logo;\n\t\t\t\t\t}\n\t\t\t\t\t$originalfile = get_exdir(0, 0, 0, 0, $object, 'thirdparty').'logos/'.$object->logo;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$email = $object->email;\n\t\t} elseif ($modulepart == 'contact')\t{\n\t\t\t$dir = $conf->societe->multidir_output[$entity].'/contact';\n\t\t\tif (!empty($object->photo)) {\n\t\t\t\tif (dolIsAllowedForPreview($object->photo)) {\n\t\t\t\t\tif ((string) $imagesize == 'mini') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'contact').'photos/'.getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\t\t} elseif ((string) $imagesize == 'small') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'contact').'photos/'.getImageFileNameForSize($object->photo, '_small');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'contact').'photos/'.$object->photo;\n\t\t\t\t\t}\n\t\t\t\t\t$originalfile = get_exdir(0, 0, 0, 0, $object, 'contact').'photos/'.$object->photo;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$email = $object->email;\n\t\t\t$capture = 'user';\n\t\t} elseif ($modulepart == 'userphoto') {\n\t\t\t$dir = $conf->user->dir_output;\n\t\t\tif (!empty($object->photo)) {\n\t\t\t\tif (dolIsAllowedForPreview($object->photo)) {\n\t\t\t\t\tif ((string) $imagesize == 'mini') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'user').getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\t\t} elseif ((string) $imagesize == 'small') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'user').getImageFileNameForSize($object->photo, '_small');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'user').$object->photo;\n\t\t\t\t\t}\n\t\t\t\t\t$originalfile = get_exdir(0, 0, 0, 0, $object, 'user').$object->photo;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!empty($conf->global->MAIN_OLD_IMAGE_LINKS)) {\n\t\t\t\t$altfile = $object->id.\".jpg\"; // For backward compatibility\n\t\t\t}\n\t\t\t$email = $object->email;\n\t\t\t$capture = 'user';\n\t\t} elseif ($modulepart == 'memberphoto')\t{\n\t\t\t$dir = $conf->adherent->dir_output;\n\t\t\tif (!empty($object->photo)) {\n\t\t\t\tif (dolIsAllowedForPreview($object->photo)) {\n\t\t\t\t\tif ((string) $imagesize == 'mini') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\t\t} elseif ((string) $imagesize == 'small') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.getImageFileNameForSize($object->photo, '_small');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.$object->photo;\n\t\t\t\t\t}\n\t\t\t\t\t$originalfile = get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.$object->photo;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!empty($conf->global->MAIN_OLD_IMAGE_LINKS)) {\n\t\t\t\t$altfile = $object->id.\".jpg\"; // For backward compatibility\n\t\t\t}\n\t\t\t$email = $object->email;\n\t\t\t$capture = 'user';\n\t\t} else {\n\t\t\t// Generic case to show photos\n\t\t\t$dir = $conf->$modulepart->dir_output;\n\t\t\tif (!empty($object->photo)) {\n\t\t\t\tif (dolIsAllowedForPreview($object->photo)) {\n\t\t\t\t\tif ((string) $imagesize == 'mini') {\n\t\t\t\t\t\t$file = get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\t\t} elseif ((string) $imagesize == 'small') {\n\t\t\t\t\t\t$file = get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.getImageFileNameForSize($object->photo, '_small');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$file = get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.$object->photo;\n\t\t\t\t\t}\n\t\t\t\t\t$originalfile = get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.$object->photo;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!empty($conf->global->MAIN_OLD_IMAGE_LINKS)) {\n\t\t\t\t$altfile = $object->id.\".jpg\"; // For backward compatibility\n\t\t\t}\n\t\t\t$email = $object->email;\n\t\t}\n\n\t\tif ($forcecapture) {\n\t\t\t$capture = $forcecapture;\n\t\t}\n\n\t\tif ($dir) {\n\t\t\tif ($file && file_exists($dir.\"/\".$file)) {\n\t\t\t\tif ($addlinktofullsize) {\n\t\t\t\t\t$urladvanced = getAdvancedPreviewUrl($modulepart, $originalfile, 0, '&entity='.$entity);\n\t\t\t\t\tif ($urladvanced) {\n\t\t\t\t\t\t$ret .= '<a href=\"'.$urladvanced.'\">';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$ret .= '<a href=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($originalfile).'&cache='.$cache.'\">';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$ret .= '<img alt=\"Photo\" class=\"photo'.$modulepart.($cssclass ? ' '.$cssclass : '').' photologo'.(preg_replace('/[^a-z]/i', '_', $file)).'\" '.($width ? ' width=\"'.$width.'\"' : '').($height ? ' height=\"'.$height.'\"' : '').' src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($file).'&cache='.$cache.'\">';\n\t\t\t\tif ($addlinktofullsize) {\n\t\t\t\t\t$ret .= '</a>';\n\t\t\t\t}\n\t\t\t} elseif ($altfile && file_exists($dir.\"/\".$altfile)) {\n\t\t\t\tif ($addlinktofullsize) {\n\t\t\t\t\t$urladvanced = getAdvancedPreviewUrl($modulepart, $originalfile, 0, '&entity='.$entity);\n\t\t\t\t\tif ($urladvanced) {\n\t\t\t\t\t\t$ret .= '<a href=\"'.$urladvanced.'\">';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$ret .= '<a href=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($originalfile).'&cache='.$cache.'\">';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$ret .= '<img class=\"photo'.$modulepart.($cssclass ? ' '.$cssclass : '').'\" alt=\"Photo alt\" id=\"photologo'.(preg_replace('/[^a-z]/i', '_', $file)).'\" class=\"'.$cssclass.'\" '.($width ? ' width=\"'.$width.'\"' : '').($height ? ' height=\"'.$height.'\"' : '').' src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($altfile).'&cache='.$cache.'\">';\n\t\t\t\tif ($addlinktofullsize) {\n\t\t\t\t\t$ret .= '</a>';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$nophoto = '/public/theme/common/nophoto.png';\n\t\t\t\t$defaultimg = 'identicon';\t\t// For gravatar\n\t\t\t\tif (in_array($modulepart, array('societe', 'userphoto', 'contact', 'memberphoto'))) {\t// For modules that need a special image when photo not found\n\t\t\t\t\tif ($modulepart == 'societe' || ($modulepart == 'memberphoto' && strpos($object->morphy, 'mor')) !== false) {\n\t\t\t\t\t\t$nophoto = 'company';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$nophoto = '/public/theme/common/user_anonymous.png';\n\t\t\t\t\t\tif (!empty($object->gender) && $object->gender == 'man') {\n\t\t\t\t\t\t\t$nophoto = '/public/theme/common/user_man.png';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!empty($object->gender) && $object->gender == 'woman') {\n\t\t\t\t\t\t\t$nophoto = '/public/theme/common/user_woman.png';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!empty($conf->gravatar->enabled) && $email && empty($noexternsourceoverwrite)) {\n\t\t\t\t\t// see https://gravatar.com/site/implement/images/php/\n\t\t\t\t\t$ret .= '<!-- Put link to gravatar -->';\n\t\t\t\t\t$ret .= '<img class=\"photo'.$modulepart.($cssclass ? ' '.$cssclass : '').'\" alt=\"Gravatar avatar\" title=\"'.$email.' Gravatar avatar\" '.($width ? ' width=\"'.$width.'\"' : '').($height ? ' height=\"'.$height.'\"' : '').' src=\"https://www.gravatar.com/avatar/'.md5(strtolower(trim($email))).'?s='.$width.'&d='.$defaultimg.'\">'; // gravatar need md5 hash\n\t\t\t\t} else {\n\t\t\t\t\tif ($nophoto == 'company') {\n\t\t\t\t\t\t$ret .= '<div class=\"photo'.$modulepart.($cssclass ? ' '.$cssclass : '').'\" alt=\"No photo\" '.($width ? ' width=\"'.$width.'\"' : '').($height ? ' height=\"'.$height.'\"' : '').'\">'.img_picto('', 'company').'</div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$ret .= '<img class=\"photo'.$modulepart.($cssclass ? ' '.$cssclass : '').'\" alt=\"No photo\" '.($width ? ' width=\"'.$width.'\"' : '').($height ? ' height=\"'.$height.'\"' : '').' src=\"'.DOL_URL_ROOT.$nophoto.'\">';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($caneditfield) {\n\t\t\t\tif ($object->photo) {\n\t\t\t\t\t$ret .= \"<br>\\n\";\n\t\t\t\t}\n\t\t\t\t$ret .= '<table class=\"nobordernopadding centpercent\">';\n\t\t\t\tif ($object->photo) {\n\t\t\t\t\t$ret .= '<tr><td><input type=\"checkbox\" class=\"flat photodelete\" name=\"deletephoto\" id=\"photodelete\"> <label for=\"photodelete\">'.$langs->trans(\"Delete\").'</label><br><br></td></tr>';\n\t\t\t\t}\n\t\t\t\t$ret .= '<tr><td class=\"tdoverflow\"><input type=\"file\" class=\"flat maxwidth200onsmartphone\" name=\"photo\" id=\"photoinput\" accept=\"image/*\"'.($capture ? ' capture=\"'.$capture.'\"' : '').'></td></tr>';\n\t\t\t\t$ret .= '</table>';\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error('', 'Call of showphoto with wrong parameters modulepart='.$modulepart);\n\t\t}\n\n\t\treturn $ret;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn select list of groups\n\t *\n\t *  @param\tstring\t$selected       Id group preselected\n\t *  @param  string\t$htmlname       Field name in form\n\t *  @param  int\t\t$show_empty     0=liste sans valeur nulle, 1=ajoute valeur inconnue\n\t *  @param  string\t$exclude        Array list of groups id to exclude\n\t * \t@param\tint\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  string\t$include        Array list of groups id to include\n\t * \t@param\tint\t\t$enableonly\t\tArray list of groups id to be enabled. All other must be disabled\n\t * \t@param\tstring\t$force_entity\t'0' or Ids of environment to force\n\t * \t@param\tbool\t$multiple\t\tadd [] in the name of element and add 'multiple' attribut (not working with ajax_autocompleter)\n\t *  @param  string\t$morecss\t\tMore css to add to html component\n\t *  @return\tstring\n\t *  @see select_dolusers()\n\t */\n\tpublic function select_dolgroups($selected = '', $htmlname = 'groupid', $show_empty = 0, $exclude = '', $disabled = 0, $include = '', $enableonly = '', $force_entity = '0', $multiple = false, $morecss = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $user, $langs;\n\n\t\t// Permettre l'exclusion de groupes\n\t\tif (is_array($exclude)) {\n\t\t\t$excludeGroups = implode(\",\", $exclude);\n\t\t}\n\t\t// Permettre l'inclusion de groupes\n\t\tif (is_array($include)) {\n\t\t\t$includeGroups = implode(\",\", $include);\n\t\t}\n\n\t\tif (!is_array($selected)) {\n\t\t\t$selected = array($selected);\n\t\t}\n\n\t\t$out = '';\n\n\t\t// On recherche les groupes\n\t\t$sql = \"SELECT ug.rowid, ug.nom as name\";\n\t\tif (!empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && !$user->entity) {\n\t\t\t$sql .= \", e.label\";\n\t\t}\n\t\t$sql .= \" FROM \".$this->db->prefix().\"usergroup as ug \";\n\t\tif (!empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && !$user->entity) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"entity as e ON e.rowid=ug.entity\";\n\t\t\tif ($force_entity) {\n\t\t\t\t$sql .= \" WHERE ug.entity IN (0, \".$force_entity.\")\";\n\t\t\t} else {\n\t\t\t\t$sql .= \" WHERE ug.entity IS NOT NULL\";\n\t\t\t}\n\t\t} else {\n\t\t\t$sql .= \" WHERE ug.entity IN (0, \".$conf->entity.\")\";\n\t\t}\n\t\tif (is_array($exclude) && $excludeGroups) {\n\t\t\t$sql .= \" AND ug.rowid NOT IN (\".$this->db->sanitize($excludeGroups).\")\";\n\t\t}\n\t\tif (is_array($include) && $includeGroups) {\n\t\t\t$sql .= \" AND ug.rowid IN (\".$this->db->sanitize($includeGroups).\")\";\n\t\t}\n\t\t$sql .= \" ORDER BY ug.nom ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_dolgroups\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t// Enhance with select2\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t$out .= ajax_combobox($htmlname);\n\n\t\t\t$out .= '<select class=\"flat minwidth200'.($morecss ? ' '.$morecss : '').'\" id=\"'.$htmlname.'\" name=\"'.$htmlname.($multiple ? '[]' : '').'\" '.($multiple ? 'multiple' : '').' '.($disabled ? ' disabled' : '').'>';\n\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\tif ($show_empty && !$multiple) {\n\t\t\t\t\t$out .= '<option value=\"-1\"'.(in_array(-1, $selected) ? ' selected' : '').'>&nbsp;</option>'.\"\\n\";\n\t\t\t\t}\n\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$disableline = 0;\n\t\t\t\t\tif (is_array($enableonly) && count($enableonly) && !in_array($obj->rowid, $enableonly)) {\n\t\t\t\t\t\t$disableline = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\tif ($disableline) {\n\t\t\t\t\t\t$out .= ' disabled';\n\t\t\t\t\t}\n\t\t\t\t\tif ((is_object($selected[0]) && $selected[0]->id == $obj->rowid) || (!is_object($selected[0]) && in_array($obj->rowid, $selected))) {\n\t\t\t\t\t\t$out .= ' selected';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= '>';\n\n\t\t\t\t\t$out .= $obj->name;\n\t\t\t\t\tif (!empty($conf->multicompany->enabled) && empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE) && $conf->entity == 1) {\n\t\t\t\t\t\t$out .= \" (\".$obj->label.\")\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$out .= '</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($show_empty) {\n\t\t\t\t\t$out .= '<option value=\"-1\"'.(in_array(-1, $selected) ? ' selected' : '').'></option>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\t$out .= '<option value=\"\" disabled>'.$langs->trans(\"NoUserGroupDefined\").'</option>';\n\t\t\t}\n\t\t\t$out .= '</select>';\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tReturn HTML to show the search and clear seach button\n\t *\n\t *  @return\tstring\n\t */\n\tpublic function showFilterButtons()\n\t{\n\t\t$out = '<div class=\"nowraponall\">';\n\t\t$out .= '<button type=\"submit\" class=\"liste_titre button_search reposition\" name=\"button_search_x\" value=\"x\"><span class=\"fa fa-search\"></span></button>';\n\t\t$out .= '<button type=\"submit\" class=\"liste_titre button_removefilter reposition\" name=\"button_removefilter_x\" value=\"x\"><span class=\"fa fa-remove\"></span></button>';\n\t\t$out .= '</div>';\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tReturn HTML to show the search and clear search button\n\t *\n\t *  @param  string  $cssclass                  CSS class\n\t *  @param  int     $calljsfunction            0=default. 1=call function initCheckForSelect() after changing status of checkboxes\n\t *  @param  string  $massactionname            Mass action button name that will launch an action on the selected items\n\t *  @return\tstring\n\t */\n\tpublic function showCheckAddButtons($cssclass = 'checkforaction', $calljsfunction = 0, $massactionname = \"massaction\")\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$out = '';\n\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t$out .= '<div class=\"inline-block checkallactions\"><input type=\"checkbox\" id=\"'.$cssclass.'s\" name=\"'.$cssclass.'s\" class=\"checkallactions\"></div>';\n\t\t}\n\t\t$out .= '<script>\n            $(document).ready(function() {\n                $(\"#' . $cssclass.'s\").click(function() {\n                    if($(this).is(\\':checked\\')){\n                        console.log(\"We check all '.$cssclass.' and trigger the change method\");\n                \t\t$(\".'.$cssclass.'\").prop(\\'checked\\', true).trigger(\\'change\\');\n                    }\n                    else\n                    {\n                        console.log(\"We uncheck all\");\n                \t\t$(\".'.$cssclass.'\").prop(\\'checked\\', false).trigger(\\'change\\');\n                    }'.\"\\n\";\n\t\tif ($calljsfunction) {\n\t\t\t$out .= 'if (typeof initCheckForSelect == \\'function\\') { initCheckForSelect(0, \"'.$massactionname.'\", \"'.$cssclass.'\"); } else { console.log(\"No function initCheckForSelect found. Call won\\'t be done.\"); }';\n\t\t}\n\t\t$out .= '         });\n        \t        $(\".' . $cssclass.'\").change(function() {\n\t\t\t\t\t$(this).closest(\"tr\").toggleClass(\"highlight\", this.checked);\n\t\t\t\t});\n\t\t \t});\n    \t</script>';\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tReturn HTML to show the search and clear seach button\n\t *\n\t *  @param\tint  \t$addcheckuncheckall        Add the check all/uncheck all checkbox (use javascript) and code to manage this\n\t *  @param  string  $cssclass                  CSS class\n\t *  @param  int     $calljsfunction            0=default. 1=call function initCheckForSelect() after changing status of checkboxes\n\t *  @param  string  $massactionname            Mass action name\n\t *  @return\tstring\n\t */\n\tpublic function showFilterAndCheckAddButtons($addcheckuncheckall = 0, $cssclass = 'checkforaction', $calljsfunction = 0, $massactionname = \"massaction\")\n\t{\n\t\t$out = $this->showFilterButtons();\n\t\tif ($addcheckuncheckall) {\n\t\t\t$out .= $this->showCheckAddButtons($cssclass, $calljsfunction, $massactionname);\n\t\t}\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Return HTML to show the select of expense categories\n\t *\n\t * @param\tstring\t$selected              preselected category\n\t * @param\tstring\t$htmlname              name of HTML select list\n\t * @param\tinteger\t$useempty              1=Add empty line\n\t * @param\tarray\t$excludeid             id to exclude\n\t * @param\tstring\t$target                htmlname of target select to bind event\n\t * @param\tint\t\t$default_selected      default category to select if fk_c_type_fees change = EX_KME\n\t * @param\tarray\t$params                param to give\n\t * @param\tint\t\t$info_admin\t\t\t   Show the tooltip help picto to setup list\n\t * @return\tstring\n\t */\n\tpublic function selectExpenseCategories($selected = '', $htmlname = 'fk_c_exp_tax_cat', $useempty = 0, $excludeid = array(), $target = '', $default_selected = 0, $params = array(), $info_admin = 1)\n\t{\n\t\tglobal $langs, $user;\n\n\t\t$out = '';\n\t\t$sql = \"SELECT rowid, label FROM \".$this->db->prefix().\"c_exp_tax_cat WHERE active = 1\";\n\t\t$sql .= \" AND entity IN (0,\".getEntity('exp_tax_cat').\")\";\n\t\tif (!empty($excludeid)) {\n\t\t\t$sql .= \" AND rowid NOT IN (\".$this->db->sanitize(implode(',', $excludeid)).\")\";\n\t\t}\n\t\t$sql .= \" ORDER BY label\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$out = '<select id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\" class=\"'.$htmlname.' flat minwidth75imp maxwidth200\">';\n\t\t\tif ($useempty) {\n\t\t\t\t$out .= '<option value=\"0\">&nbsp;</option>';\n\t\t\t}\n\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$out .= '<option '.($selected == $obj->rowid ? 'selected=\"selected\"' : '').' value=\"'.$obj->rowid.'\">'.$langs->trans($obj->label).'</option>';\n\t\t\t}\n\t\t\t$out .= '</select>';\n\t\t\t$out .= ajax_combobox('select_'.$htmlname);\n\n\t\t\tif (!empty($htmlname) && $user->admin && $info_admin) {\n\t\t\t\t$out .= ' '.info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t\t}\n\n\t\t\tif (!empty($target)) {\n\t\t\t\t$sql = \"SELECT c.id FROM \".$this->db->prefix().\"c_type_fees as c WHERE c.code = 'EX_KME' AND c.active = 1\";\n\t\t\t\t$resql = $this->db->query($sql);\n\t\t\t\tif ($resql) {\n\t\t\t\t\tif ($this->db->num_rows($resql) > 0) {\n\t\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t\t$out .= '<script>\n\t\t\t\t\t\t\t$(function() {\n\t\t\t\t\t\t\t\t$(\"select[name='.$target.']\").on(\"change\", function() {\n\t\t\t\t\t\t\t\t\tvar current_val = $(this).val();\n\t\t\t\t\t\t\t\t\tif (current_val == '.$obj->id.') {';\n\t\t\t\t\t\tif (!empty($default_selected) || !empty($selected)) {\n\t\t\t\t\t\t\t$out .= '$(\"select[name='.$htmlname.']\").val(\"'.($default_selected > 0 ? $default_selected : $selected).'\");';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$out .= '\n\t\t\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").change();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").change(function() {\n\n\t\t\t\t\t\t\t\t\tif ($(\"select[name='.$target.']\").val() == '.$obj->id.') {\n\t\t\t\t\t\t\t\t\t\t// get price of kilometer to fill the unit price\n\t\t\t\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\t\t\t\t\t\tdataType: \"json\",\n\t\t\t\t\t\t\t\t\t\t\tdata: { fk_c_exp_tax_cat: $(this).val(), token: \\''.currentToken().'\\' },\n\t\t\t\t\t\t\t\t\t\t\turl: \"'.(DOL_URL_ROOT.'/expensereport/ajax/ajaxik.php?'.$params).'\",\n\t\t\t\t\t\t\t\t\t\t}).done(function( data, textStatus, jqXHR ) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t\t\t\t\t\tif (typeof data.up != \"undefined\") {\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"input[name=value_unit]\").val(data.up);\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").attr(\"title\", data.title);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"input[name=value_unit]\").val(\"\");\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").attr(\"title\", \"\");\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t</script>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Return HTML to show the select ranges of expense range\n\t *\n\t * @param\tstring\t$selected    preselected category\n\t * @param\tstring\t$htmlname    name of HTML select list\n\t * @param\tinteger\t$useempty    1=Add empty line\n\t * @return\tstring\n\t */\n\tpublic function selectExpenseRanges($selected = '', $htmlname = 'fk_range', $useempty = 0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$out = '';\n\t\t$sql = \"SELECT rowid, range_ik FROM \".$this->db->prefix().\"c_exp_tax_range\";\n\t\t$sql .= \" WHERE entity = \".$conf->entity.\" AND active = 1\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$out = '<select id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\" class=\"'.$htmlname.' flat minwidth75imp\">';\n\t\t\tif ($useempty) {\n\t\t\t\t$out .= '<option value=\"0\"></option>';\n\t\t\t}\n\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$out .= '<option '.($selected == $obj->rowid ? 'selected=\"selected\"' : '').' value=\"'.$obj->rowid.'\">'.price($obj->range_ik, 0, $langs, 1, 0).'</option>';\n\t\t\t}\n\t\t\t$out .= '</select>';\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Return HTML to show a select of expense\n\t *\n\t * @param\tstring\t$selected    preselected category\n\t * @param\tstring\t$htmlname    name of HTML select list\n\t * @param\tinteger\t$useempty    1=Add empty choice\n\t * @param\tinteger\t$allchoice   1=Add all choice\n\t * @param\tinteger\t$useid       0=use 'code' as key, 1=use 'id' as key\n\t * @return\tstring\n\t */\n\tpublic function selectExpense($selected = '', $htmlname = 'fk_c_type_fees', $useempty = 0, $allchoice = 1, $useid = 0)\n\t{\n\t\tglobal $langs;\n\n\t\t$out = '';\n\t\t$sql = \"SELECT id, code, label FROM \".$this->db->prefix().\"c_type_fees\";\n\t\t$sql .= \" WHERE active = 1\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$out = '<select id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\" class=\"'.$htmlname.' flat minwidth75imp\">';\n\t\t\tif ($useempty) {\n\t\t\t\t$out .= '<option value=\"0\"></option>';\n\t\t\t}\n\t\t\tif ($allchoice) {\n\t\t\t\t$out .= '<option value=\"-1\">'.$langs->trans('AllExpenseReport').'</option>';\n\t\t\t}\n\n\t\t\t$field = 'code';\n\t\t\tif ($useid) {\n\t\t\t\t$field = 'id';\n\t\t\t}\n\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$key = $langs->trans($obj->code);\n\t\t\t\t$out .= '<option '.($selected == $obj->{$field} ? 'selected=\"selected\"' : '').' value=\"'.$obj->{$field}.'\">'.($key != $obj->code ? $key : $obj->label).'</option>';\n\t\t\t}\n\t\t\t$out .= '</select>';\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *  Output a combo list with invoices qualified for a third party\n\t *\n\t *  @param\tint\t\t$socid      \tId third party (-1=all, 0=only projects not linked to a third party, id=projects not linked or linked to third party id)\n\t *  @param  int\t\t$selected   \tId invoice preselected\n\t *  @param  string\t$htmlname   \tName of HTML select\n\t *\t@param\tint\t\t$maxlength\t\tMaximum length of label\n\t *\t@param\tint\t\t$option_only\tReturn only html options lines without the select tag\n\t *\t@param\tstring\t$show_empty\t\tAdd an empty line ('1' or string to show for empty line)\n\t *  @param\tint\t\t$discard_closed Discard closed projects (0=Keep,1=hide completely,2=Disable)\n\t *  @param\tint\t\t$forcefocus\t\tForce focus on field (works with javascript only)\n\t *  @param\tint\t\t$disabled\t\tDisabled\n\t *  @param\tstring\t$morecss        More css added to the select component\n\t *  @param\tstring\t$projectsListId ''=Automatic filter on project allowed. List of id=Filter on project ids.\n\t *  @param\tstring\t$showproject\t'all' = Show project info, ''=Hide project info\n\t *  @param\tUser\t$usertofilter\tUser object to use for filtering\n\t *\t@return int         \t\t\tNbr of project if OK, <0 if KO\n\t */\n\tpublic function selectInvoice($socid = -1, $selected = '', $htmlname = 'invoiceid', $maxlength = 24, $option_only = 0, $show_empty = '1', $discard_closed = 0, $forcefocus = 0, $disabled = 0, $morecss = 'maxwidth500', $projectsListId = '', $showproject = 'all', $usertofilter = null)\n\t{\n\t\tglobal $user, $conf, $langs;\n\n\t\trequire_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n\n\t\tif (is_null($usertofilter)) {\n\t\t\t$usertofilter = $user;\n\t\t}\n\n\t\t$out = '';\n\n\t\t$hideunselectables = false;\n\t\tif (!empty($conf->global->PROJECT_HIDE_UNSELECTABLES)) {\n\t\t\t$hideunselectables = true;\n\t\t}\n\n\t\tif (empty($projectsListId)) {\n\t\t\tif (empty($usertofilter->rights->projet->all->lire)) {\n\t\t\t\t$projectstatic = new Project($this->db);\n\t\t\t\t$projectsListId = $projectstatic->getProjectsAuthorizedForUser($usertofilter, 0, 1);\n\t\t\t}\n\t\t}\n\n\t\t// Search all projects\n\t\t$sql = \"SELECT f.rowid, f.ref as fref, 'nolabel' as flabel, p.rowid as pid, f.ref,\n            p.title, p.fk_soc, p.fk_statut, p.public,\";\n\t\t$sql .= ' s.nom as name';\n\t\t$sql .= ' FROM '.$this->db->prefix().'projet as p';\n\t\t$sql .= ' LEFT JOIN '.$this->db->prefix().'societe as s ON s.rowid = p.fk_soc,';\n\t\t$sql .= ' '.$this->db->prefix().'facture as f';\n\t\t$sql .= \" WHERE p.entity IN (\".getEntity('project').\")\";\n\t\t$sql .= \" AND f.fk_projet = p.rowid AND f.fk_statut=0\"; //Brouillons seulement\n\t\t//if ($projectsListId) $sql.= \" AND p.rowid IN (\".$this->db->sanitize($projectsListId).\")\";\n\t\t//if ($socid == 0) $sql.= \" AND (p.fk_soc=0 OR p.fk_soc IS NULL)\";\n\t\t//if ($socid > 0)  $sql.= \" AND (p.fk_soc=\".((int) $socid).\" OR p.fk_soc IS NULL)\";\n\t\t$sql .= \" ORDER BY p.ref, f.ref ASC\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t// Use select2 selector\n\t\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$comboenhancement = ajax_combobox($htmlname, '', 0, $forcefocus);\n\t\t\t\t$out .= $comboenhancement;\n\t\t\t\t$morecss = 'minwidth200imp maxwidth500';\n\t\t\t}\n\n\t\t\tif (empty($option_only)) {\n\t\t\t\t$out .= '<select class=\"valignmiddle flat'.($morecss ? ' '.$morecss : '').'\"'.($disabled ? ' disabled=\"disabled\"' : '').' id=\"'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t\t}\n\t\t\tif (!empty($show_empty)) {\n\t\t\t\t$out .= '<option value=\"0\" class=\"optiongrey\">';\n\t\t\t\tif (!is_numeric($show_empty)) {\n\t\t\t\t\t$out .= $show_empty;\n\t\t\t\t} else {\n\t\t\t\t\t$out .= '&nbsp;';\n\t\t\t\t}\n\t\t\t\t$out .= '</option>';\n\t\t\t}\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t// If we ask to filter on a company and user has no permission to see all companies and project is linked to another company, we hide project.\n\t\t\t\t\tif ($socid > 0 && (empty($obj->fk_soc) || $obj->fk_soc == $socid) && empty($usertofilter->rights->societe->lire)) {\n\t\t\t\t\t\t// Do nothing\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ($discard_closed == 1 && $obj->fk_statut == Project::STATUS_CLOSED) {\n\t\t\t\t\t\t\t$i++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$labeltoshow = '';\n\n\t\t\t\t\t\tif ($showproject == 'all') {\n\t\t\t\t\t\t\t$labeltoshow .= dol_trunc($obj->ref, 18); // Invoice ref\n\t\t\t\t\t\t\tif ($obj->name) {\n\t\t\t\t\t\t\t\t$labeltoshow .= ' - '.$obj->name; // Soc name\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$disabled = 0;\n\t\t\t\t\t\t\tif ($obj->fk_statut == Project::STATUS_DRAFT) {\n\t\t\t\t\t\t\t\t$disabled = 1;\n\t\t\t\t\t\t\t\t$labeltoshow .= ' - '.$langs->trans(\"Draft\");\n\t\t\t\t\t\t\t} elseif ($obj->fk_statut == Project::STATUS_CLOSED) {\n\t\t\t\t\t\t\t\tif ($discard_closed == 2) {\n\t\t\t\t\t\t\t\t\t$disabled = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$labeltoshow .= ' - '.$langs->trans(\"Closed\");\n\t\t\t\t\t\t\t} elseif ($socid > 0 && (!empty($obj->fk_soc) && $obj->fk_soc != $socid)) {\n\t\t\t\t\t\t\t\t$disabled = 1;\n\t\t\t\t\t\t\t\t$labeltoshow .= ' - '.$langs->trans(\"LinkedToAnotherCompany\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!empty($selected) && $selected == $obj->rowid) {\n\t\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\" selected';\n\t\t\t\t\t\t\t//if ($disabled) $out.=' disabled';\t\t\t\t\t\t// with select2, field can't be preselected if disabled\n\t\t\t\t\t\t\t$out .= '>'.$labeltoshow.'</option>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ($hideunselectables && $disabled && ($selected != $obj->rowid)) {\n\t\t\t\t\t\t\t\t$resultat = '';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$resultat = '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\t\t\t\tif ($disabled) {\n\t\t\t\t\t\t\t\t\t$resultat .= ' disabled';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//if ($obj->public) $labeltoshow.=' ('.$langs->trans(\"Public\").')';\n\t\t\t\t\t\t\t\t//else $labeltoshow.=' ('.$langs->trans(\"Private\").')';\n\t\t\t\t\t\t\t\t$resultat .= '>';\n\t\t\t\t\t\t\t\t$resultat .= $labeltoshow;\n\t\t\t\t\t\t\t\t$resultat .= '</option>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$out .= $resultat;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (empty($option_only)) {\n\t\t\t\t$out .= '</select>';\n\t\t\t}\n\n\t\t\tprint $out;\n\n\t\t\t$this->db->free($resql);\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t * Output the component to make advanced search criteries\n\t *\n\t * @param\tarray\t\t$arrayofcriterias\t\t\t          Array of available search criterias. Example: array($object->element => $object->fields, 'otherfamily' => otherarrayoffields, ...)\n\t * @param\tarray\t\t$search_component_params\t          Array of selected search criterias\n\t * @param   array       $arrayofinputfieldsalreadyoutput      Array of input fields already inform. The component will not generate a hidden input field if it is in this list.\n\t * @param\tstring\t\t$search_component_params_hidden\t\t  String with $search_component_params criterias\n\t * @return\tstring\t\t\t\t\t\t\t\t\t          HTML component for advanced search\n\t */\n\tpublic function searchComponent($arrayofcriterias, $search_component_params, $arrayofinputfieldsalreadyoutput = array(), $search_component_params_hidden = '')\n\t{\n\t\tglobal $langs;\n\n\t\t$ret = '';\n\n\t\t$ret .= '<div class=\"divadvancedsearchfieldcomp inline-block\">';\n\t\t//$ret .= '<button type=\"submit\" class=\"liste_titre button_removefilter\" name=\"button_removefilter_x\" value=\"x\"><span class=\"fa fa-remove\"></span></button>';\n\t\t$ret .= '<a href=\"#\" class=\"dropdownsearch-toggle unsetcolor\">';\n\t\t$ret .= '<span class=\"fas fa-filter linkobject boxfilter pictofixedwidth\" title=\"'.dol_escape_htmltag($langs->trans(\"Filters\")).'\" id=\"idsubimgproductdistribution\"></span>';\n\t\t//$ret .= $langs->trans(\"Filters\");\n\t\t$ret .= '</a>';\n\n\t\t$ret .= '<div class=\"divadvancedsearchfieldcompinput inline-block minwidth500 maxwidth300onsmartphone\">';\n\n\t\t// Show select fields as tags.\n\t\t$ret .= '<div name=\"divsearch_component_params\" class=\"noborderbottom search_component_params inline-block valignmiddle\">';\n\n\t\tif ($search_component_params_hidden) {\n\t\t\tif (!preg_match('/^\\(.*\\)$/', $search_component_params_hidden)) {\t// If $search_component_params_hidden does not start and end with ()\n\t\t\t\t$search_component_params_hidden .= '('.$search_component_params_hidden.')';\n\t\t\t}\n\t\t\t$errormessage = '';\n\t\t\tif (!dolCheckFilters($search_component_params_hidden, $errormessage)) {\n\t\t\t\tprint 'ERROR in parsing search string';\n\t\t\t}\n\t\t\t$regexstring = '\\(([^:\\'\\(\\)]+:[^:\\'\\(\\)]+:[^\\(\\)]+)\\)';\n\t\t\t//var_dump($search_component_params_hidden);\n\t\t\t$htmltags = preg_replace_callback('/'.$regexstring.'/', 'dolForgeCriteriaCallback', $search_component_params_hidden);\n\t\t\t//var_dump($htmltags);\n\t\t\t$ret .= '<span class=\"marginleftonlyshort valignmiddle tagsearch\"><span class=\"tagsearchdelete select2-selection__choice__remove\">x</span> '.$htmltags.'</span>';\n\t\t}\n\n\t\t//$ret .= '<button type=\"submit\" class=\"liste_titre button_search paddingleftonly\" name=\"button_search_x\" value=\"x\"><span class=\"fa fa-search\"></span></button>';\n\n\t\t//$ret .= search_component_params\n\t\t//$texttoshow = '<div class=\"opacitymedium inline-block search_component_searchtext\">'.$langs->trans(\"Search\").'</div>';\n\t\t//$ret .= '<div class=\"search_component inline-block valignmiddle\">'.$texttoshow.'</div>';\n\n\t\t$show_search_component_params_hidden = 1;\n\t\tif ($show_search_component_params_hidden) {\n\t\t\t$ret .= '<input type=\"hidden\" name=\"show_search_component_params_hidden\" value=\"1\">';\n\t\t}\n\t\t$ret .= \"<!-- We store the full search string into this field. For example: (t.ref:like:'SO-%') and ((t.ref:like:'CO-%') or (t.ref:like:'AA%')) -->\";\n\t\t$ret .= '<input type=\"hidden\" name=\"search_component_params_hidden\" value=\"'.dol_escape_htmltag($search_component_params_hidden).'\">';\n\t\t// For compatibility with forms that show themself the search criteria in addition of this component, we output the fields\n\t\tforeach ($arrayofcriterias as $criterias) {\n\t\t\tforeach ($criterias as $criteriafamilykey => $criteriafamilyval) {\n\t\t\t\tif (in_array('search_'.$criteriafamilykey, $arrayofinputfieldsalreadyoutput)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (in_array($criteriafamilykey, array('rowid', 'ref_ext', 'entity', 'extraparams'))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (in_array($criteriafamilyval['type'], array('date', 'datetime', 'timestamp'))) {\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_start\">';\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_startyear\">';\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_startmonth\">';\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_startday\">';\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_end\">';\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_endyear\">';\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_endmonth\">';\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_endday\">';\n\t\t\t\t} else {\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'\">';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$ret .= '</div>';\n\n\t\t$ret .= \"<!-- Syntax of Generic filter string: t.ref:like:'SO-%', t.date_creation:<:'20160101', t.date_creation:<:'2016-01-01 12:30:00', t.nature:is:NULL, t.field2:isnot:NULL -->\\n\";\n\t\t$ret .= '<input type=\"text\" placeholder=\"'.$langs->trans(\"Search\").'\" name=\"search_component_params_input\" class=\"noborderbottom search_component_input\" value=\"\">';\n\n\t\t$ret .= '</div>';\n\t\t$ret .= '</div>';\n\n\t\treturn $ret;\n\t}\n\n\t/**\n\t * selectModelMail\n\t *\n\t * @param   string   $prefix     \tPrefix\n\t * @param   string   $modelType  \tModel type\n\t * @param\tint\t\t $default\t \t1=Show also Default mail template\n\t * @param\tint\t\t $addjscombo\tAdd js combobox\n\t * @return  string               \tHTML select string\n\t */\n\tpublic function selectModelMail($prefix, $modelType = '', $default = 0, $addjscombo = 0)\n\t{\n\t\tglobal $langs, $user;\n\n\t\t$retstring = '';\n\n\t\t$TModels = array();\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n\t\t$formmail = new FormMail($this->db);\n\t\t$result = $formmail->fetchAllEMailTemplate($modelType, $user, $langs);\n\n\t\tif ($default) {\n\t\t\t$TModels[0] = $langs->trans('DefaultMailModel');\n\t\t}\n\t\tif ($result > 0) {\n\t\t\tforeach ($formmail->lines_model as $model) {\n\t\t\t\t$TModels[$model->id] = $model->label;\n\t\t\t}\n\t\t}\n\n\t\t$retstring .= '<select class=\"flat\" id=\"select_'.$prefix.'model_mail\" name=\"'.$prefix.'model_mail\">';\n\n\t\tforeach ($TModels as $id_model => $label_model) {\n\t\t\t$retstring .= '<option value=\"'.$id_model.'\"';\n\t\t\t$retstring .= \">\".$label_model.\"</option>\";\n\t\t}\n\n\t\t$retstring .= \"</select>\";\n\n\t\tif ($addjscombo) {\n\t\t\t$retstring .= ajax_combobox('select_'.$prefix.'model_mail');\n\t\t}\n\n\t\treturn $retstring;\n\t}\n\n\t/**\n\t * Output the buttons to submit a creation/edit form\n\t *\n\t * @param   string  $save_label     Alternative label for save button\n\t * @param   string  $cancel_label   Alternative label for cancel button\n\t * @param   array   $morebuttons    Add additional buttons between save and cancel\n\t * @param   bool    $withoutdiv     Option to remove enclosing centered div\n\t * @param\tstring\t$morecss\t\tMore CSS\n\t * @return \tstring\t\t\t\t\tHtml code with the buttons\n\t */\n\tpublic function buttonsSaveCancel($save_label = 'Save', $cancel_label = 'Cancel', $morebuttons = array(), $withoutdiv = 0, $morecss = '')\n\t{\n\t\tglobal $langs;\n\n\t\t$buttons = array();\n\n\t\t$save = array(\n\t\t\t'name' => 'save',\n\t\t\t'label_key' => $save_label,\n\t\t);\n\n\t\tif ($save_label == 'Create' || $save_label == 'Add' ) {\n\t\t\t$save['name'] = 'add';\n\t\t} elseif ($save_label == 'Modify') {\n\t\t\t$save['name'] = 'edit';\n\t\t}\n\n\t\t$cancel = array(\n\t\t\t\t'name' => 'cancel',\n\t\t\t\t'label_key' => 'Cancel',\n\t\t);\n\n\t\t!empty($save_label) ? $buttons[] = $save : '';\n\n\t\tif (!empty($morebuttons)) {\n\t\t\t$buttons[] = $morebuttons;\n\t\t}\n\n\t\t!empty($cancel_label) ? $buttons[] = $cancel : '';\n\n\t\t$retstring = $withoutdiv ? '': '<div class=\"center\">';\n\n\t\tforeach ($buttons as $button) {\n\t\t\t$addclass = empty($button['addclass']) ? '' : $button['addclass'];\n\t\t\t$retstring .= '<input type=\"submit\" class=\"button button-'.$button['name'].($morecss ? ' '.$morecss : '').' '.$addclass.'\" name=\"'.$button['name'].'\" value=\"'.dol_escape_htmltag($langs->trans($button['label_key'])).'\">';\n\t\t}\n\t\t$retstring .= $withoutdiv ? '': '</div>';\n\n\t\treturn $retstring;\n\t}\n}\n", "<?php\n/* Copyright (C) 2008-2012  Laurent Destailleur <eldy@users.sourceforge.net>\n * Copyright (C) 2012-2021  Regis Houssin       <regis.houssin@inodbox.com>\n * Copyright (C) 2012-2016  Juanjo Menent       <jmenent@2byte.es>\n * Copyright (C) 2015       Marcos Garc\u00eda       <marcosgdf@gmail.com>\n * Copyright (C) 2016       Rapha\u00ebl Doursenaud  <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2019       Fr\u00e9d\u00e9ric France     <frederic.france@netlogic.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n * or see https://www.gnu.org/\n */\n\n/**\n *  \\file\t\thtdocs/core/lib/files.lib.php\n *  \\brief\t\tLibrary for file managing functions\n */\n\n/**\n * Make a basename working with all page code (default PHP basenamed fails with cyrillic).\n * We supose dir separator for input is '/'.\n *\n * @param\tstring\t$pathfile\tString to find basename.\n * @return\tstring\t\t\t\tBasename of input\n */\nfunction dol_basename($pathfile)\n{\n\treturn preg_replace('/^.*\\/([^\\/]+)$/', '$1', rtrim($pathfile, '/'));\n}\n\n/**\n *  Scan a directory and return a list of files/directories.\n *  Content for string is UTF8 and dir separator is \"/\".\n *\n *  @param\tstring\t\t$path        \tStarting path from which to search. This is a full path.\n *  @param\tstring\t\t$types        \tCan be \"directories\", \"files\", or \"all\"\n *  @param\tint\t\t\t$recursive\t\tDetermines whether subdirectories are searched\n *  @param\tstring\t\t$filter        \tRegex filter to restrict list. This regex value must be escaped for '/' by doing preg_quote($var,'/'), since this char is used for preg_match function,\n *                                      but must not contains the start and end '/'. Filter is checked into basename only.\n *  @param\tarray\t\t$excludefilter  Array of Regex for exclude filter (example: array('(\\.meta|_preview.*\\.png)$','^\\.')). Exclude is checked both into fullpath and into basename (So '^xxx' may exclude 'xxx/dirscanned/...' and dirscanned/xxx').\n *  @param\tstring\t\t$sortcriteria\tSort criteria ('','fullname','relativename','name','date','size')\n *  @param\tstring\t\t$sortorder\t\tSort order (SORT_ASC, SORT_DESC)\n *\t@param\tint\t\t\t$mode\t\t\t0=Return array minimum keys loaded (faster), 1=Force all keys like date and size to be loaded (slower), 2=Force load of date only, 3=Force load of size only, 4=Force load of perm\n *  @param\tint\t\t\t$nohook\t\t\tDisable all hooks\n *  @param\tstring\t\t$relativename\tFor recursive purpose only. Must be \"\" at first call.\n *  @param\tstring\t\t$donotfollowsymlinks\tDo not follow symbolic links\n *  @return\tarray\t\t\t\t\t\tArray of array('name'=>'xxx','fullname'=>'/abc/xxx','date'=>'yyy','size'=>99,'type'=>'dir|file',...)\n *  @see dol_dir_list_in_database()\n */\nfunction dol_dir_list($path, $types = \"all\", $recursive = 0, $filter = \"\", $excludefilter = null, $sortcriteria = \"name\", $sortorder = SORT_ASC, $mode = 0, $nohook = 0, $relativename = \"\", $donotfollowsymlinks = 0)\n{\n\tglobal $db, $hookmanager;\n\tglobal $object;\n\n\tif ($recursive <= 1) {\t// Avoid too verbose log\n\t\tdol_syslog(\"files.lib.php::dol_dir_list path=\".$path.\" types=\".$types.\" recursive=\".$recursive.\" filter=\".$filter.\" excludefilter=\".json_encode($excludefilter));\n\t\t//print 'xxx'.\"files.lib.php::dol_dir_list path=\".$path.\" types=\".$types.\" recursive=\".$recursive.\" filter=\".$filter.\" excludefilter=\".json_encode($excludefilter);\n\t}\n\n\t$loaddate = ($mode == 1 || $mode == 2) ?true:false;\n\t$loadsize = ($mode == 1 || $mode == 3) ?true:false;\n\t$loadperm = ($mode == 1 || $mode == 4) ?true:false;\n\n\t// Clean parameters\n\t$path = preg_replace('/([\\\\/]+)$/i', '', $path);\n\t$newpath = dol_osencode($path);\n\n\t$reshook = 0;\n\t$file_list = array();\n\n\tif (is_object($hookmanager) && !$nohook) {\n\t\t$hookmanager->resArray = array();\n\n\t\t$hookmanager->initHooks(array('fileslib'));\n\n\t\t$parameters = array(\n\t\t\t'path' => $newpath,\n\t\t\t'types'=> $types,\n\t\t\t'recursive' => $recursive,\n\t\t\t'filter' => $filter,\n\t\t\t'excludefilter' => $excludefilter,\n\t\t\t'sortcriteria' => $sortcriteria,\n\t\t\t'sortorder' => $sortorder,\n\t\t\t'loaddate' => $loaddate,\n\t\t\t'loadsize' => $loadsize,\n\t\t\t'mode' => $mode\n\t\t);\n\t\t$reshook = $hookmanager->executeHooks('getDirList', $parameters, $object);\n\t}\n\n\t// $hookmanager->resArray may contain array stacked by other modules\n\tif (empty($reshook)) {\n\t\tif (!is_dir($newpath)) {\n\t\t\treturn array();\n\t\t}\n\n\t\tif ($dir = opendir($newpath)) {\n\t\t\t$filedate = '';\n\t\t\t$filesize = '';\n\t\t\t$fileperm = '';\n\t\t\twhile (false !== ($file = readdir($dir))) {        // $file is always a basename (into directory $newpath)\n\t\t\t\tif (!utf8_check($file)) {\n\t\t\t\t\t$file = utf8_encode($file); // To be sure data is stored in utf8 in memory\n\t\t\t\t}\n\t\t\t\t$fullpathfile = ($newpath ? $newpath.'/' : '').$file;\n\n\t\t\t\t$qualified = 1;\n\n\t\t\t\t// Define excludefilterarray\n\t\t\t\t$excludefilterarray = array('^\\.');\n\t\t\t\tif (is_array($excludefilter)) {\n\t\t\t\t\t$excludefilterarray = array_merge($excludefilterarray, $excludefilter);\n\t\t\t\t} elseif ($excludefilter) {\n\t\t\t\t\t$excludefilterarray[] = $excludefilter;\n\t\t\t\t}\n\t\t\t\t// Check if file is qualified\n\t\t\t\tforeach ($excludefilterarray as $filt) {\n\t\t\t\t\tif (preg_match('/'.$filt.'/i', $file) || preg_match('/'.$filt.'/i', $fullpathfile)) {\n\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//print $fullpathfile.' '.$file.' '.$qualified.'<br>';\n\n\t\t\t\tif ($qualified) {\n\t\t\t\t\t$isdir = is_dir(dol_osencode($path.\"/\".$file));\n\t\t\t\t\t// Check whether this is a file or directory and whether we're interested in that type\n\t\t\t\t\tif ($isdir && (($types == \"directories\") || ($types == \"all\") || $recursive > 0)) {\n\t\t\t\t\t\t// Add entry into file_list array\n\t\t\t\t\t\tif (($types == \"directories\") || ($types == \"all\")) {\n\t\t\t\t\t\t\tif ($loaddate || $sortcriteria == 'date') {\n\t\t\t\t\t\t\t\t$filedate = dol_filemtime($path.\"/\".$file);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ($loadsize || $sortcriteria == 'size') {\n\t\t\t\t\t\t\t\t$filesize = dol_filesize($path.\"/\".$file);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ($loadperm || $sortcriteria == 'perm') {\n\t\t\t\t\t\t\t\t$fileperm = dol_fileperm($path.\"/\".$file);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!$filter || preg_match('/'.$filter.'/i', $file)) {\t// We do not search key $filter into all $path, only into $file part\n\t\t\t\t\t\t\t\t$reg = array();\n\t\t\t\t\t\t\t\tpreg_match('/([^\\/]+)\\/[^\\/]+$/', $path.'/'.$file, $reg);\n\t\t\t\t\t\t\t\t$level1name = (isset($reg[1]) ? $reg[1] : '');\n\t\t\t\t\t\t\t\t$file_list[] = array(\n\t\t\t\t\t\t\t\t\t\"name\" => $file,\n\t\t\t\t\t\t\t\t\t\"path\" => $path,\n\t\t\t\t\t\t\t\t\t\"level1name\" => $level1name,\n\t\t\t\t\t\t\t\t\t\"relativename\" => ($relativename ? $relativename.'/' : '').$file,\n\t\t\t\t\t\t\t\t\t\"fullname\" => $path.'/'.$file,\n\t\t\t\t\t\t\t\t\t\"date\" => $filedate,\n\t\t\t\t\t\t\t\t\t\"size\" => $filesize,\n\t\t\t\t\t\t\t\t\t\"perm\" => $fileperm,\n\t\t\t\t\t\t\t\t\t\"type\" => 'dir'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if we're in a directory and we want recursive behavior, call this function again\n\t\t\t\t\t\tif ($recursive > 0) {\n\t\t\t\t\t\t\tif (empty($donotfollowsymlinks) || !is_link($path.\"/\".$file)) {\n\t\t\t\t\t\t\t\t//var_dump('eee '. $path.\"/\".$file. ' '.is_dir($path.\"/\".$file).' '.is_link($path.\"/\".$file));\n\t\t\t\t\t\t\t\t$file_list = array_merge($file_list, dol_dir_list($path.\"/\".$file, $types, $recursive + 1, $filter, $excludefilter, $sortcriteria, $sortorder, $mode, $nohook, ($relativename != '' ? $relativename.'/' : '').$file, $donotfollowsymlinks));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} elseif (!$isdir && (($types == \"files\") || ($types == \"all\"))) {\n\t\t\t\t\t\t// Add file into file_list array\n\t\t\t\t\t\tif ($loaddate || $sortcriteria == 'date') {\n\t\t\t\t\t\t\t$filedate = dol_filemtime($path.\"/\".$file);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($loadsize || $sortcriteria == 'size') {\n\t\t\t\t\t\t\t$filesize = dol_filesize($path.\"/\".$file);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!$filter || preg_match('/'.$filter.'/i', $file)) {\t// We do not search key $filter into $path, only into $file\n\t\t\t\t\t\t\tpreg_match('/([^\\/]+)\\/[^\\/]+$/', $path.'/'.$file, $reg);\n\t\t\t\t\t\t\t$level1name = (isset($reg[1]) ? $reg[1] : '');\n\t\t\t\t\t\t\t$file_list[] = array(\n\t\t\t\t\t\t\t\t\"name\" => $file,\n\t\t\t\t\t\t\t\t\"path\" => $path,\n\t\t\t\t\t\t\t\t\"level1name\" => $level1name,\n\t\t\t\t\t\t\t\t\"relativename\" => ($relativename ? $relativename.'/' : '').$file,\n\t\t\t\t\t\t\t\t\"fullname\" => $path.'/'.$file,\n\t\t\t\t\t\t\t\t\"date\" => $filedate,\n\t\t\t\t\t\t\t\t\"size\" => $filesize,\n\t\t\t\t\t\t\t\t\"type\" => 'file'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tclosedir($dir);\n\n\t\t\t// Obtain a list of columns\n\t\t\tif (!empty($sortcriteria) && $sortorder) {\n\t\t\t\t$file_list = dol_sort_array($file_list, $sortcriteria, ($sortorder == SORT_ASC ? 'asc' : 'desc'));\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_object($hookmanager) && is_array($hookmanager->resArray)) {\n\t\t$file_list = array_merge($file_list, $hookmanager->resArray);\n\t}\n\n\treturn $file_list;\n}\n\n\n/**\n *  Scan a directory and return a list of files/directories.\n *  Content for string is UTF8 and dir separator is \"/\".\n *\n *  @param\tstring\t\t$path        \tStarting path from which to search. Example: 'produit/MYPROD'\n *  @param\tstring\t\t$filter        \tRegex filter to restrict list. This regex value must be escaped for '/', since this char is used for preg_match function\n *  @param\tarray|null\t$excludefilter  Array of Regex for exclude filter (example: array('(\\.meta|_preview.*\\.png)$','^\\.'))\n *  @param\tstring\t\t$sortcriteria\tSort criteria (\"\",\"fullname\",\"name\",\"date\",\"size\")\n *  @param\tstring\t\t$sortorder\t\tSort order (SORT_ASC, SORT_DESC)\n *\t@param\tint\t\t\t$mode\t\t\t0=Return array minimum keys loaded (faster), 1=Force all keys like description\n *  @return\tarray\t\t\t\t\t\tArray of array('name'=>'xxx','fullname'=>'/abc/xxx','type'=>'dir|file',...)\n *  @see dol_dir_list()\n */\nfunction dol_dir_list_in_database($path, $filter = \"\", $excludefilter = null, $sortcriteria = \"name\", $sortorder = SORT_ASC, $mode = 0)\n{\n\tglobal $conf, $db;\n\n\t$sql = \" SELECT rowid, label, entity, filename, filepath, fullpath_orig, keywords, cover, gen_or_uploaded, extraparams,\";\n\t$sql .= \" date_c, tms as date_m, fk_user_c, fk_user_m, acl, position, share\";\n\tif ($mode) {\n\t\t$sql .= \", description\";\n\t}\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"ecm_files\";\n\t$sql .= \" WHERE entity = \".$conf->entity;\n\tif (preg_match('/%$/', $path)) {\n\t\t$sql .= \" AND filepath LIKE '\".$db->escape($path).\"'\";\n\t} else {\n\t\t$sql .= \" AND filepath = '\".$db->escape($path).\"'\";\n\t}\n\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$file_list = array();\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\twhile ($i < $num) {\n\t\t\t$obj = $db->fetch_object($resql);\n\t\t\tif ($obj) {\n\t\t\t\t$reg = array();\n\t\t\t\tpreg_match('/([^\\/]+)\\/[^\\/]+$/', DOL_DATA_ROOT.'/'.$obj->filepath.'/'.$obj->filename, $reg);\n\t\t\t\t$level1name = (isset($reg[1]) ? $reg[1] : '');\n\t\t\t\t$file_list[] = array(\n\t\t\t\t\t\"rowid\" => $obj->rowid,\n\t\t\t\t\t\"label\" => $obj->label, // md5\n\t\t\t\t\t\"name\" => $obj->filename,\n\t\t\t\t\t\"path\" => DOL_DATA_ROOT.'/'.$obj->filepath,\n\t\t\t\t\t\"level1name\" => $level1name,\n\t\t\t\t\t\"fullname\" => DOL_DATA_ROOT.'/'.$obj->filepath.'/'.$obj->filename,\n\t\t\t\t\t\"fullpath_orig\" => $obj->fullpath_orig,\n\t\t\t\t\t\"date_c\" => $db->jdate($obj->date_c),\n\t\t\t\t\t\"date_m\" => $db->jdate($obj->date_m),\n\t\t\t\t\t\"type\" => 'file',\n\t\t\t\t\t\"keywords\" => $obj->keywords,\n\t\t\t\t\t\"cover\" => $obj->cover,\n\t\t\t\t\t\"position\" => (int) $obj->position,\n\t\t\t\t\t\"acl\" => $obj->acl,\n\t\t\t\t\t\"share\" => $obj->share\n\t\t\t\t);\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\n\t\t// Obtain a list of columns\n\t\tif (!empty($sortcriteria)) {\n\t\t\t$myarray = array();\n\t\t\tforeach ($file_list as $key => $row) {\n\t\t\t\t$myarray[$key] = (isset($row[$sortcriteria]) ? $row[$sortcriteria] : '');\n\t\t\t}\n\t\t\t// Sort the data\n\t\t\tif ($sortorder) {\n\t\t\t\tarray_multisort($myarray, $sortorder, $file_list);\n\t\t\t}\n\t\t}\n\n\t\treturn $file_list;\n\t} else {\n\t\tdol_print_error($db);\n\t\treturn array();\n\t}\n}\n\n\n/**\n * Complete $filearray with data from database.\n * This will call doldir_list_indatabase to complate filearray.\n *\n * @param\tarray\t$filearray\t\t\tArray of files obtained using dol_dir_list\n * @param\tstring\t$relativedir\t\tRelative dir from DOL_DATA_ROOT\n * @return\tvoid\n */\nfunction completeFileArrayWithDatabaseInfo(&$filearray, $relativedir)\n{\n\tglobal $conf, $db, $user;\n\n\t$filearrayindatabase = dol_dir_list_in_database($relativedir, '', null, 'name', SORT_ASC);\n\n\t// TODO Remove this when PRODUCT_USE_OLD_PATH_FOR_PHOTO will be removed\n\tglobal $modulepart;\n\tif ($modulepart == 'produit' && !empty($conf->global->PRODUCT_USE_OLD_PATH_FOR_PHOTO)) {\n\t\tglobal $object;\n\t\tif (!empty($object->id)) {\n\t\t\tif (!empty($conf->product->enabled)) {\n\t\t\t\t$upload_dirold = $conf->product->multidir_output[$object->entity].'/'.substr(substr(\"000\".$object->id, -2), 1, 1).'/'.substr(substr(\"000\".$object->id, -2), 0, 1).'/'.$object->id.\"/photos\";\n\t\t\t} else {\n\t\t\t\t$upload_dirold = $conf->service->multidir_output[$object->entity].'/'.substr(substr(\"000\".$object->id, -2), 1, 1).'/'.substr(substr(\"000\".$object->id, -2), 0, 1).'/'.$object->id.\"/photos\";\n\t\t\t}\n\n\t\t\t$relativedirold = preg_replace('/^'.preg_quote(DOL_DATA_ROOT, '/').'/', '', $upload_dirold);\n\t\t\t$relativedirold = preg_replace('/^[\\\\/]/', '', $relativedirold);\n\n\t\t\t$filearrayindatabase = array_merge($filearrayindatabase, dol_dir_list_in_database($relativedirold, '', null, 'name', SORT_ASC));\n\t\t}\n\t}\n\n\t/*var_dump($relativedir);\n\tvar_dump($filearray);\n\tvar_dump($filearrayindatabase);*/\n\n\t// Complete filearray with properties found into $filearrayindatabase\n\tforeach ($filearray as $key => $val) {\n\t\t$tmpfilename = preg_replace('/\\.noexe$/', '', $filearray[$key]['name']);\n\t\t$found = 0;\n\t\t// Search if it exists into $filearrayindatabase\n\t\tforeach ($filearrayindatabase as $key2 => $val2) {\n\t\t\tif (($filearrayindatabase[$key2]['path'] == $filearray[$key]['path']) && ($filearrayindatabase[$key2]['name'] == $tmpfilename)) {\n\t\t\t\t$filearray[$key]['position_name'] = ($filearrayindatabase[$key2]['position'] ? $filearrayindatabase[$key2]['position'] : '0').'_'.$filearrayindatabase[$key2]['name'];\n\t\t\t\t$filearray[$key]['position'] = $filearrayindatabase[$key2]['position'];\n\t\t\t\t$filearray[$key]['cover'] = $filearrayindatabase[$key2]['cover'];\n\t\t\t\t$filearray[$key]['acl'] = $filearrayindatabase[$key2]['acl'];\n\t\t\t\t$filearray[$key]['rowid'] = $filearrayindatabase[$key2]['rowid'];\n\t\t\t\t$filearray[$key]['label'] = $filearrayindatabase[$key2]['label'];\n\t\t\t\t$filearray[$key]['share'] = $filearrayindatabase[$key2]['share'];\n\t\t\t\t$found = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!$found) {    // This happen in transition toward version 6, or if files were added manually into os dir.\n\t\t\t$filearray[$key]['position'] = '999999'; // File not indexed are at end. So if we add a file, it will not replace an existing position\n\t\t\t$filearray[$key]['cover'] = 0;\n\t\t\t$filearray[$key]['acl'] = '';\n\n\t\t\t$rel_filename = preg_replace('/^'.preg_quote(DOL_DATA_ROOT, '/').'/', '', $filearray[$key]['fullname']);\n\n\t\t\tif (!preg_match('/([\\\\/]temp[\\\\/]|[\\\\/]thumbs|\\.meta$)/', $rel_filename)) {     // If not a tmp file\n\t\t\t\tdol_syslog(\"list_of_documents We found a file called '\".$filearray[$key]['name'].\"' not indexed into database. We add it\");\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/ecm/class/ecmfiles.class.php';\n\t\t\t\t$ecmfile = new EcmFiles($db);\n\n\t\t\t\t// Add entry into database\n\t\t\t\t$filename = basename($rel_filename);\n\t\t\t\t$rel_dir = dirname($rel_filename);\n\t\t\t\t$rel_dir = preg_replace('/[\\\\/]$/', '', $rel_dir);\n\t\t\t\t$rel_dir = preg_replace('/^[\\\\/]/', '', $rel_dir);\n\n\t\t\t\t$ecmfile->filepath = $rel_dir;\n\t\t\t\t$ecmfile->filename = $filename;\n\t\t\t\t$ecmfile->label = md5_file(dol_osencode($filearray[$key]['fullname'])); // $destfile is a full path to file\n\t\t\t\t$ecmfile->fullpath_orig = $filearray[$key]['fullname'];\n\t\t\t\t$ecmfile->gen_or_uploaded = 'unknown';\n\t\t\t\t$ecmfile->description = ''; // indexed content\n\t\t\t\t$ecmfile->keywords = ''; // keyword content\n\t\t\t\t$result = $ecmfile->create($user);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\tsetEventMessages($ecmfile->error, $ecmfile->errors, 'warnings');\n\t\t\t\t} else {\n\t\t\t\t\t$filearray[$key]['rowid'] = $result;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$filearray[$key]['rowid'] = 0; // Should not happened\n\t\t\t}\n\t\t}\n\t}\n\t//var_dump($filearray); var_dump($relativedir.' - tmpfilename='.$tmpfilename.' - found='.$found);\n}\n\n\n/**\n * Fast compare of 2 files identified by their properties ->name, ->date and ->size\n *\n * @param\tstring \t$a\t\tFile 1\n * @param \tstring\t$b\t\tFile 2\n * @return \tint\t\t\t\t1, 0, 1\n */\nfunction dol_compare_file($a, $b)\n{\n\tglobal $sortorder;\n\tglobal $sortfield;\n\n\t$sortorder = strtoupper($sortorder);\n\n\tif ($sortorder == 'ASC') {\n\t\t$retup = -1;\n\t\t$retdown = 1;\n\t} else {\n\t\t$retup = 1;\n\t\t$retdown = -1;\n\t}\n\n\tif ($sortfield == 'name') {\n\t\tif ($a->name == $b->name) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn ($a->name < $b->name) ? $retup : $retdown;\n\t}\n\tif ($sortfield == 'date') {\n\t\tif ($a->date == $b->date) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn ($a->date < $b->date) ? $retup : $retdown;\n\t}\n\tif ($sortfield == 'size') {\n\t\tif ($a->size == $b->size) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn ($a->size < $b->size) ? $retup : $retdown;\n\t}\n}\n\n\n/**\n * Test if filename is a directory\n *\n * @param\tstring\t\t$folder     Name of folder\n * @return\tboolean     \t\t\tTrue if it's a directory, False if not found\n */\nfunction dol_is_dir($folder)\n{\n\t$newfolder = dol_osencode($folder);\n\tif (is_dir($newfolder)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * Return if path is empty\n *\n * @param   string\t\t$dir\t\tPath of Directory\n * @return  boolean     \t\t    True or false\n */\nfunction dol_is_dir_empty($dir)\n{\n\tif (!is_readable($dir)) {\n\t\treturn false;\n\t}\n\treturn (count(scandir($dir)) == 2);\n}\n\n/**\n * Return if path is a file\n *\n * @param   string\t\t$pathoffile\t\tPath of file\n * @return  boolean     \t\t\t    True or false\n */\nfunction dol_is_file($pathoffile)\n{\n\t$newpathoffile = dol_osencode($pathoffile);\n\treturn is_file($newpathoffile);\n}\n\n/**\n * Return if path is a symbolic link\n *\n * @param   string\t\t$pathoffile\t\tPath of file\n * @return  boolean     \t\t\t    True or false\n */\nfunction dol_is_link($pathoffile)\n{\n\t$newpathoffile = dol_osencode($pathoffile);\n\treturn is_link($newpathoffile);\n}\n\n/**\n * Return if path is an URL\n *\n * @param   string\t\t$url\tUrl\n * @return  boolean      \t   \tTrue or false\n */\nfunction dol_is_url($url)\n{\n\t$tmpprot = array('file', 'http', 'https', 'ftp', 'zlib', 'data', 'ssh', 'ssh2', 'ogg', 'expect');\n\tforeach ($tmpprot as $prot) {\n\t\tif (preg_match('/^'.$prot.':/i', $url)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * \tTest if a folder is empty\n *\n * \t@param\tstring\t$folder\t\tName of folder\n * \t@return boolean\t\t\t\tTrue if dir is empty or non-existing, False if it contains files\n */\nfunction dol_dir_is_emtpy($folder)\n{\n\t$newfolder = dol_osencode($folder);\n\tif (is_dir($newfolder)) {\n\t\t$handle = opendir($newfolder);\n\t\t$folder_content = '';\n\t\twhile ((gettype($name = readdir($handle)) != \"boolean\")) {\n\t\t\t$name_array[] = $name;\n\t\t}\n\t\tforeach ($name_array as $temp) {\n\t\t\t$folder_content .= $temp;\n\t\t}\n\n\t\tclosedir($handle);\n\n\t\tif ($folder_content == \"...\") {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn true; // Dir does not exists\n\t}\n}\n\n/**\n * \tCount number of lines in a file\n *\n * \t@param\tstring\t$file\t\tFilename\n * \t@return int\t\t\t\t\t<0 if KO, Number of lines in files if OK\n *  @see dol_nboflines()\n */\nfunction dol_count_nb_of_line($file)\n{\n\t$nb = 0;\n\n\t$newfile = dol_osencode($file);\n\t//print 'x'.$file;\n\t$fp = fopen($newfile, 'r');\n\tif ($fp) {\n\t\twhile (!feof($fp)) {\n\t\t\t$line = fgets($fp);\n\t\t\t// We increase count only if read was success. We need test because feof return true only after fgets so we do n+1 fgets for a file with n lines.\n\t\t\tif (!$line === false) {\n\t\t\t\t$nb++;\n\t\t\t}\n\t\t}\n\t\tfclose($fp);\n\t} else {\n\t\t$nb = -1;\n\t}\n\n\treturn $nb;\n}\n\n\n/**\n * Return size of a file\n *\n * @param \tstring\t\t$pathoffile\t\tPath of file\n * @return \tinteger\t\t\t\t\t\tFile size\n * @see dol_print_size()\n */\nfunction dol_filesize($pathoffile)\n{\n\t$newpathoffile = dol_osencode($pathoffile);\n\treturn filesize($newpathoffile);\n}\n\n/**\n * Return time of a file\n *\n * @param \tstring\t\t$pathoffile\t\tPath of file\n * @return \tint\t\t\t\t\tTime of file\n */\nfunction dol_filemtime($pathoffile)\n{\n\t$newpathoffile = dol_osencode($pathoffile);\n\treturn @filemtime($newpathoffile); // @Is to avoid errors if files does not exists\n}\n\n/**\n * Return permissions of a file\n *\n * @param \tstring\t\t$pathoffile\t\tPath of file\n * @return \tinteger\t\t\t\t\t\tFile permissions\n */\nfunction dol_fileperm($pathoffile)\n{\n\t$newpathoffile = dol_osencode($pathoffile);\n\treturn fileperms($newpathoffile);\n}\n\n/**\n * Make replacement of strings into a file.\n *\n * @param\tstring\t$srcfile\t\t\t       Source file (can't be a directory)\n * @param\tarray\t$arrayreplacement\t       Array with strings to replace. Example: array('valuebefore'=>'valueafter', ...)\n * @param\tstring\t$destfile\t\t\t       Destination file (can't be a directory). If empty, will be same than source file.\n * @param\tint\t\t$newmask\t\t\t       Mask for new file (0 by default means $conf->global->MAIN_UMASK). Example: '0666'\n * @param\tint\t\t$indexdatabase\t\t       1=index new file into database.\n * @param   int     $arrayreplacementisregex   1=Array of replacement is regex\n * @return\tint\t\t\t\t\t\t\t       <0 if error, 0 if nothing done (dest file already exists), >0 if OK\n * @see\t\tdol_copy()\n */\nfunction dolReplaceInFile($srcfile, $arrayreplacement, $destfile = '', $newmask = 0, $indexdatabase = 0, $arrayreplacementisregex = 0)\n{\n\tglobal $conf;\n\n\tdol_syslog(\"files.lib.php::dolReplaceInFile srcfile=\".$srcfile.\" destfile=\".$destfile.\" newmask=\".$newmask.\" indexdatabase=\".$indexdatabase.\" arrayreplacementisregex=\".$arrayreplacementisregex);\n\n\tif (empty($srcfile)) {\n\t\treturn -1;\n\t}\n\tif (empty($destfile)) {\n\t\t$destfile = $srcfile;\n\t}\n\n\t$destexists = dol_is_file($destfile);\n\tif (($destfile != $srcfile) && $destexists) {\n\t\treturn 0;\n\t}\n\n\t$tmpdestfile = $destfile.'.tmp';\n\n\t$newpathofsrcfile = dol_osencode($srcfile);\n\t$newpathoftmpdestfile = dol_osencode($tmpdestfile);\n\t$newpathofdestfile = dol_osencode($destfile);\n\t$newdirdestfile = dirname($newpathofdestfile);\n\n\tif ($destexists && !is_writable($newpathofdestfile)) {\n\t\tdol_syslog(\"files.lib.php::dolReplaceInFile failed Permission denied to overwrite target file\", LOG_WARNING);\n\t\treturn -1;\n\t}\n\tif (!is_writable($newdirdestfile)) {\n\t\tdol_syslog(\"files.lib.php::dolReplaceInFile failed Permission denied to write into target directory \".$newdirdestfile, LOG_WARNING);\n\t\treturn -2;\n\t}\n\n\tdol_delete_file($tmpdestfile);\n\n\t// Create $newpathoftmpdestfile from $newpathofsrcfile\n\t$content = file_get_contents($newpathofsrcfile, 'r');\n\n\tif (empty($arrayreplacementisregex)) {\n\t\t$content = make_substitutions($content, $arrayreplacement, null);\n\t} else {\n\t\tforeach ($arrayreplacement as $key => $value) {\n\t\t\t$content = preg_replace($key, $value, $content);\n\t\t}\n\t}\n\n\tfile_put_contents($newpathoftmpdestfile, $content);\n\t@chmod($newpathoftmpdestfile, octdec($newmask));\n\n\t// Rename\n\t$result = dol_move($newpathoftmpdestfile, $newpathofdestfile, $newmask, (($destfile == $srcfile) ? 1 : 0), 0, $indexdatabase);\n\tif (!$result) {\n\t\tdol_syslog(\"files.lib.php::dolReplaceInFile failed to move tmp file to final dest\", LOG_WARNING);\n\t\treturn -3;\n\t}\n\tif (empty($newmask) && !empty($conf->global->MAIN_UMASK)) {\n\t\t$newmask = $conf->global->MAIN_UMASK;\n\t}\n\tif (empty($newmask)) {\t// This should no happen\n\t\tdol_syslog(\"Warning: dolReplaceInFile called with empty value for newmask and no default value defined\", LOG_WARNING);\n\t\t$newmask = '0664';\n\t}\n\n\t@chmod($newpathofdestfile, octdec($newmask));\n\n\treturn 1;\n}\n\n\n/**\n * Copy a file to another file.\n *\n * @param\tstring\t$srcfile\t\t\tSource file (can't be a directory)\n * @param\tstring\t$destfile\t\t\tDestination file (can't be a directory)\n * @param\tint\t\t$newmask\t\t\tMask for new file (0 by default means $conf->global->MAIN_UMASK). Example: '0666'\n * @param \tint\t\t$overwriteifexists\tOverwrite file if exists (1 by default)\n * @return\tint\t\t\t\t\t\t\t<0 if error, 0 if nothing done (dest file already exists and overwriteifexists=0), >0 if OK\n * @see\t\tdol_delete_file() dolCopyDir()\n */\nfunction dol_copy($srcfile, $destfile, $newmask = 0, $overwriteifexists = 1)\n{\n\tglobal $conf;\n\n\tdol_syslog(\"files.lib.php::dol_copy srcfile=\".$srcfile.\" destfile=\".$destfile.\" newmask=\".$newmask.\" overwriteifexists=\".$overwriteifexists);\n\n\tif (empty($srcfile) || empty($destfile)) {\n\t\treturn -1;\n\t}\n\n\t$destexists = dol_is_file($destfile);\n\tif (!$overwriteifexists && $destexists) {\n\t\treturn 0;\n\t}\n\n\t$newpathofsrcfile = dol_osencode($srcfile);\n\t$newpathofdestfile = dol_osencode($destfile);\n\t$newdirdestfile = dirname($newpathofdestfile);\n\n\tif ($destexists && !is_writable($newpathofdestfile)) {\n\t\tdol_syslog(\"files.lib.php::dol_copy failed Permission denied to overwrite target file\", LOG_WARNING);\n\t\treturn -1;\n\t}\n\tif (!is_writable($newdirdestfile)) {\n\t\tdol_syslog(\"files.lib.php::dol_copy failed Permission denied to write into target directory \".$newdirdestfile, LOG_WARNING);\n\t\treturn -2;\n\t}\n\t// Copy with overwriting if exists\n\t$result = @copy($newpathofsrcfile, $newpathofdestfile);\n\t//$result=copy($newpathofsrcfile, $newpathofdestfile);\t// To see errors, remove @\n\tif (!$result) {\n\t\tdol_syslog(\"files.lib.php::dol_copy failed to copy\", LOG_WARNING);\n\t\treturn -3;\n\t}\n\tif (empty($newmask) && !empty($conf->global->MAIN_UMASK)) {\n\t\t$newmask = $conf->global->MAIN_UMASK;\n\t}\n\tif (empty($newmask)) {\t// This should no happen\n\t\tdol_syslog(\"Warning: dol_copy called with empty value for newmask and no default value defined\", LOG_WARNING);\n\t\t$newmask = '0664';\n\t}\n\n\t@chmod($newpathofdestfile, octdec($newmask));\n\n\treturn 1;\n}\n\n/**\n * Copy a dir to another dir. This include recursive subdirectories.\n *\n * @param\tstring\t$srcfile\t\t\tSource file (a directory)\n * @param\tstring\t$destfile\t\t\tDestination file (a directory)\n * @param\tint\t\t$newmask\t\t\tMask for new file (0 by default means $conf->global->MAIN_UMASK). Example: '0666'\n * @param \tint\t\t$overwriteifexists\tOverwrite file if exists (1 by default)\n * @param\tarray\t$arrayreplacement\tArray to use to replace filenames with another one during the copy (works only on file names, not on directory names).\n * @param\tint\t\t$excludesubdir\t\t0=Do not exclude subdirectories, 1=Exclude subdirectories, 2=Exclude subdirectories if name is not a 2 chars (used for country codes subdirectories).\n * @return\tint\t\t\t\t\t\t\t<0 if error, 0 if nothing done (all files already exists and overwriteifexists=0), >0 if OK\n * @see\t\tdol_copy()\n */\nfunction dolCopyDir($srcfile, $destfile, $newmask, $overwriteifexists, $arrayreplacement = null, $excludesubdir = 0)\n{\n\tglobal $conf;\n\n\t$result = 0;\n\n\tdol_syslog(\"files.lib.php::dolCopyDir srcfile=\".$srcfile.\" destfile=\".$destfile.\" newmask=\".$newmask.\" overwriteifexists=\".$overwriteifexists);\n\n\tif (empty($srcfile) || empty($destfile)) {\n\t\treturn -1;\n\t}\n\n\t$destexists = dol_is_dir($destfile);\n\t//if (! $overwriteifexists && $destexists) return 0;\t// The overwriteifexists is for files only, so propagated to dol_copy only.\n\n\tif (!$destexists) {\n\t\t// We must set mask just before creating dir, becaause it can be set differently by dol_copy\n\t\tumask(0);\n\t\t$dirmaskdec = octdec($newmask);\n\t\tif (empty($newmask) && !empty($conf->global->MAIN_UMASK)) {\n\t\t\t$dirmaskdec = octdec($conf->global->MAIN_UMASK);\n\t\t}\n\t\t$dirmaskdec |= octdec('0200'); // Set w bit required to be able to create content for recursive subdirs files\n\t\tdol_mkdir($destfile, '', decoct($dirmaskdec));\n\t}\n\n\t$ossrcfile = dol_osencode($srcfile);\n\t$osdestfile = dol_osencode($destfile);\n\n\t// Recursive function to copy all subdirectories and contents:\n\tif (is_dir($ossrcfile)) {\n\t\t$dir_handle = opendir($ossrcfile);\n\t\twhile ($file = readdir($dir_handle)) {\n\t\t\tif ($file != \".\" && $file != \"..\" && !is_link($ossrcfile.\"/\".$file)) {\n\t\t\t\tif (is_dir($ossrcfile.\"/\".$file)) {\n\t\t\t\t\tif (empty($excludesubdir) || ($excludesubdir == 2 && strlen($file) == 2)) {\n\t\t\t\t\t\t$newfile = $file;\n\t\t\t\t\t\t// Replace destination filename with a new one\n\t\t\t\t\t\tif (is_array($arrayreplacement)) {\n\t\t\t\t\t\t\tforeach ($arrayreplacement as $key => $val) {\n\t\t\t\t\t\t\t\t$newfile = str_replace($key, $val, $newfile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//var_dump(\"xxx dolCopyDir $srcfile/$file, $destfile/$file, $newmask, $overwriteifexists\");\n\t\t\t\t\t\t$tmpresult = dolCopyDir($srcfile.\"/\".$file, $destfile.\"/\".$newfile, $newmask, $overwriteifexists, $arrayreplacement, $excludesubdir);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$newfile = $file;\n\t\t\t\t\t// Replace destination filename with a new one\n\t\t\t\t\tif (is_array($arrayreplacement)) {\n\t\t\t\t\t\tforeach ($arrayreplacement as $key => $val) {\n\t\t\t\t\t\t\t$newfile = str_replace($key, $val, $newfile);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$tmpresult = dol_copy($srcfile.\"/\".$file, $destfile.\"/\".$newfile, $newmask, $overwriteifexists);\n\t\t\t\t}\n\t\t\t\t// Set result\n\t\t\t\tif ($result > 0 && $tmpresult >= 0) {\n\t\t\t\t\t// Do nothing, so we don't set result to 0 if tmpresult is 0 and result was success in a previous pass\n\t\t\t\t} else {\n\t\t\t\t\t$result = $tmpresult;\n\t\t\t\t}\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tclosedir($dir_handle);\n\t} else {\n\t\t// Source directory does not exists\n\t\t$result = -2;\n\t}\n\n\treturn $result;\n}\n\n\n/**\n * Move a file into another name.\n * Note:\n *  - This function differs from dol_move_uploaded_file, because it can be called in any context.\n *  - Database indexes for files are updated.\n *  - Test on antivirus is done only if param testvirus is provided and an antivirus was set.\n *\n * @param\tstring  $srcfile            Source file (can't be a directory. use native php @rename() to move a directory)\n * @param   string\t$destfile           Destination file (can't be a directory. use native php @rename() to move a directory)\n * @param   integer\t$newmask            Mask in octal string for new file (0 by default means $conf->global->MAIN_UMASK)\n * @param   int\t\t$overwriteifexists  Overwrite file if exists (1 by default)\n * @param   int     $testvirus          Do an antivirus test. Move is canceled if a virus is found.\n * @param\tint\t\t$indexdatabase\t\tIndex new file into database.\n * @return  boolean \t\t            True if OK, false if KO\n * @see dol_move_uploaded_file()\n */\nfunction dol_move($srcfile, $destfile, $newmask = 0, $overwriteifexists = 1, $testvirus = 0, $indexdatabase = 1)\n{\n\tglobal $user, $db, $conf;\n\t$result = false;\n\n\tdol_syslog(\"files.lib.php::dol_move srcfile=\".$srcfile.\" destfile=\".$destfile.\" newmask=\".$newmask.\" overwritifexists=\".$overwriteifexists);\n\t$srcexists = dol_is_file($srcfile);\n\t$destexists = dol_is_file($destfile);\n\n\tif (!$srcexists) {\n\t\tdol_syslog(\"files.lib.php::dol_move srcfile does not exists. we ignore the move request.\");\n\t\treturn false;\n\t}\n\n\tif ($overwriteifexists || !$destexists) {\n\t\t$newpathofsrcfile = dol_osencode($srcfile);\n\t\t$newpathofdestfile = dol_osencode($destfile);\n\n\t\t// Check virus\n\t\t$testvirusarray = array();\n\t\tif ($testvirus) {\n\t\t\t$testvirusarray = dolCheckVirus($newpathofsrcfile);\n\t\t\tif (count($testvirusarray)) {\n\t\t\t\tdol_syslog(\"files.lib.php::dol_move canceled because a virus was found into source file. we ignore the move request.\", LOG_WARNING);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t$result = @rename($newpathofsrcfile, $newpathofdestfile); // To see errors, remove @\n\t\tif (!$result) {\n\t\t\tif ($destexists) {\n\t\t\t\tdol_syslog(\"files.lib.php::dol_move Failed. We try to delete target first and move after.\", LOG_WARNING);\n\t\t\t\t// We force delete and try again. Rename function sometimes fails to replace dest file with some windows NTFS partitions.\n\t\t\t\tdol_delete_file($destfile);\n\t\t\t\t$result = @rename($newpathofsrcfile, $newpathofdestfile); // To see errors, remove @\n\t\t\t} else {\n\t\t\t\tdol_syslog(\"files.lib.php::dol_move Failed.\", LOG_WARNING);\n\t\t\t}\n\t\t}\n\n\t\t// Move ok\n\t\tif ($result && $indexdatabase) {\n\t\t\t// Rename entry into ecm database\n\t\t\t$rel_filetorenamebefore = preg_replace('/^'.preg_quote(DOL_DATA_ROOT, '/').'/', '', $srcfile);\n\t\t\t$rel_filetorenameafter = preg_replace('/^'.preg_quote(DOL_DATA_ROOT, '/').'/', '', $destfile);\n\t\t\tif (!preg_match('/([\\\\/]temp[\\\\/]|[\\\\/]thumbs|\\.meta$)/', $rel_filetorenameafter)) {     // If not a tmp file\n\t\t\t\t$rel_filetorenamebefore = preg_replace('/^[\\\\/]/', '', $rel_filetorenamebefore);\n\t\t\t\t$rel_filetorenameafter = preg_replace('/^[\\\\/]/', '', $rel_filetorenameafter);\n\t\t\t\t//var_dump($rel_filetorenamebefore.' - '.$rel_filetorenameafter);exit;\n\n\t\t\t\tdol_syslog(\"Try to rename also entries in database for full relative path before = \".$rel_filetorenamebefore.\" after = \".$rel_filetorenameafter, LOG_DEBUG);\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/ecm/class/ecmfiles.class.php';\n\n\t\t\t\t$ecmfiletarget = new EcmFiles($db);\n\t\t\t\t$resultecmtarget = $ecmfiletarget->fetch(0, '', $rel_filetorenameafter);\n\t\t\t\tif ($resultecmtarget > 0) {   // An entry for target name already exists for target, we delete it, a new one will be created.\n\t\t\t\t\t$ecmfiletarget->delete($user);\n\t\t\t\t}\n\n\t\t\t\t$ecmfile = new EcmFiles($db);\n\t\t\t\t$resultecm = $ecmfile->fetch(0, '', $rel_filetorenamebefore);\n\t\t\t\tif ($resultecm > 0) {   // If an entry was found for src file, we use it to move entry\n\t\t\t\t\t$filename = basename($rel_filetorenameafter);\n\t\t\t\t\t$rel_dir = dirname($rel_filetorenameafter);\n\t\t\t\t\t$rel_dir = preg_replace('/[\\\\/]$/', '', $rel_dir);\n\t\t\t\t\t$rel_dir = preg_replace('/^[\\\\/]/', '', $rel_dir);\n\n\t\t\t\t\t$ecmfile->filepath = $rel_dir;\n\t\t\t\t\t$ecmfile->filename = $filename;\n\n\t\t\t\t\t$resultecm = $ecmfile->update($user);\n\t\t\t\t} elseif ($resultecm == 0) {   // If no entry were found for src files, create/update target file\n\t\t\t\t\t$filename = basename($rel_filetorenameafter);\n\t\t\t\t\t$rel_dir = dirname($rel_filetorenameafter);\n\t\t\t\t\t$rel_dir = preg_replace('/[\\\\/]$/', '', $rel_dir);\n\t\t\t\t\t$rel_dir = preg_replace('/^[\\\\/]/', '', $rel_dir);\n\n\t\t\t\t\t$ecmfile->filepath = $rel_dir;\n\t\t\t\t\t$ecmfile->filename = $filename;\n\t\t\t\t\t$ecmfile->label = md5_file(dol_osencode($destfile)); // $destfile is a full path to file\n\t\t\t\t\t$ecmfile->fullpath_orig = $srcfile;\n\t\t\t\t\t$ecmfile->gen_or_uploaded = 'unknown';\n\t\t\t\t\t$ecmfile->description = ''; // indexed content\n\t\t\t\t\t$ecmfile->keywords = ''; // keyword content\n\t\t\t\t\t$resultecm = $ecmfile->create($user);\n\t\t\t\t\tif ($resultecm < 0) {\n\t\t\t\t\t\tsetEventMessages($ecmfile->error, $ecmfile->errors, 'warnings');\n\t\t\t\t\t}\n\t\t\t\t} elseif ($resultecm < 0) {\n\t\t\t\t\tsetEventMessages($ecmfile->error, $ecmfile->errors, 'warnings');\n\t\t\t\t}\n\n\t\t\t\tif ($resultecm > 0) {\n\t\t\t\t\t$result = true;\n\t\t\t\t} else {\n\t\t\t\t\t$result = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (empty($newmask)) {\n\t\t\t$newmask = empty($conf->global->MAIN_UMASK) ? '0755' : $conf->global->MAIN_UMASK;\n\t\t}\n\t\t$newmaskdec = octdec($newmask);\n\t\t// Currently method is restricted to files (dol_delete_files previously used is for files, and mask usage if for files too)\n\t\t// to allow mask usage for dir, we shoul introduce a new param \"isdir\" to 1 to complete newmask like this\n\t\t// if ($isdir) $newmaskdec |= octdec('0111');  // Set x bit required for directories\n\t\t@chmod($newpathofdestfile, $newmaskdec);\n\t}\n\n\treturn $result;\n}\n\n/**\n *\tUnescape a file submitted by upload.\n *  PHP escape char \" (%22) or char ' (%27) into $FILES.\n *\n *\t@param\tstring\t$filename\t\tFilename\n *\t@return\tstring\t\t\t\t\tFilename sanitized\n */\nfunction dol_unescapefile($filename)\n{\n\t// Remove path information and dots around the filename, to prevent uploading\n\t// into different directories or replacing hidden system files.\n\t// Also remove control characters and spaces (\\x00..\\x20) around the filename:\n\treturn trim(basename($filename), \".\\x00..\\x20\");\n}\n\n\n/**\n * Check virus into a file\n *\n * @param   string      $src_file       Source file to check\n * @return  array                       Array of errors or empty array if not virus found\n */\nfunction dolCheckVirus($src_file)\n{\n\tglobal $conf;\n\n\tif (!empty($conf->global->MAIN_ANTIVIRUS_COMMAND)) {\n\t\tif (!class_exists('AntiVir')) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/antivir.class.php';\n\t\t}\n\t\t$antivir = new AntiVir($db);\n\t\t$result = $antivir->dol_avscan_file($src_file);\n\t\tif ($result < 0) {\t// If virus or error, we stop here\n\t\t\t$reterrors = $antivir->errors;\n\t\t\treturn $reterrors;\n\t\t}\n\t}\n\treturn array();\n}\n\n\n/**\n *\tMake control on an uploaded file from an GUI page and move it to final destination.\n * \tIf there is errors (virus found, antivir in error, bad filename), file is not moved.\n *  Note:\n *  - This function can be used only into a HTML page context. Use dol_move if you are outside.\n *  - Test on antivirus is always done (if antivirus set).\n *  - Database of files is NOT updated (this is done by dol_add_file_process() that calls this function).\n *  - Extension .noexe may be added if file is executable and MAIN_DOCUMENT_IS_OUTSIDE_WEBROOT_SO_NOEXE_NOT_REQUIRED is not set.\n *\n *\t@param\tstring\t$src_file\t\t\tSource full path filename ($_FILES['field']['tmp_name'])\n *\t@param\tstring\t$dest_file\t\t\tTarget full path filename  ($_FILES['field']['name'])\n * \t@param\tint\t\t$allowoverwrite\t\t1=Overwrite target file if it already exists\n * \t@param\tint\t\t$disablevirusscan\t1=Disable virus scan\n * \t@param\tinteger\t$uploaderrorcode\tValue of PHP upload error code ($_FILES['field']['error'])\n * \t@param\tint\t\t$nohook\t\t\t\tDisable all hooks\n * \t@param\tstring\t$varfiles\t\t\t_FILES var name\n *  @param\tstring\t$upload_dir\t\t\tFor information. Already included into $dest_file.\n *\t@return int|string       \t\t\t1 if OK, 2 if OK and .noexe appended, <0 or string if KO\n *  @see    dol_move()\n */\nfunction dol_move_uploaded_file($src_file, $dest_file, $allowoverwrite, $disablevirusscan = 0, $uploaderrorcode = 0, $nohook = 0, $varfiles = 'addedfile', $upload_dir = '')\n{\n\tglobal $conf, $db, $user, $langs;\n\tglobal $object, $hookmanager;\n\n\t$reshook = 0;\n\t$file_name = $dest_file;\n\t$successcode = 1;\n\n\tif (empty($nohook)) {\n\t\t$reshook = $hookmanager->initHooks(array('fileslib'));\n\n\t\t$parameters = array('dest_file' => $dest_file, 'src_file' => $src_file, 'file_name' => $file_name, 'varfiles' => $varfiles, 'allowoverwrite' => $allowoverwrite);\n\t\t$reshook = $hookmanager->executeHooks('moveUploadedFile', $parameters, $object);\n\t}\n\n\tif (empty($reshook)) {\n\t\t// If an upload error has been reported\n\t\tif ($uploaderrorcode) {\n\t\t\tswitch ($uploaderrorcode) {\n\t\t\t\tcase UPLOAD_ERR_INI_SIZE:\t// 1\n\t\t\t\t\treturn 'ErrorFileSizeTooLarge';\n\t\t\t\tcase UPLOAD_ERR_FORM_SIZE:\t// 2\n\t\t\t\t\treturn 'ErrorFileSizeTooLarge';\n\t\t\t\tcase UPLOAD_ERR_PARTIAL:\t// 3\n\t\t\t\t\treturn 'ErrorPartialFile';\n\t\t\t\tcase UPLOAD_ERR_NO_TMP_DIR:\t//\n\t\t\t\t\treturn 'ErrorNoTmpDir';\n\t\t\t\tcase UPLOAD_ERR_CANT_WRITE:\n\t\t\t\t\treturn 'ErrorFailedToWriteInDir';\n\t\t\t\tcase UPLOAD_ERR_EXTENSION:\n\t\t\t\t\treturn 'ErrorUploadBlockedByAddon';\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If we need to make a virus scan\n\t\tif (empty($disablevirusscan) && file_exists($src_file)) {\n\t\t\t$checkvirusarray = dolCheckVirus($src_file);\n\t\t\tif (count($checkvirusarray)) {\n\t\t\t\tdol_syslog('Files.lib::dol_move_uploaded_file File \"'.$src_file.'\" (target name \"'.$dest_file.'\") KO with antivirus: errors='.join(',', $checkvirusarray), LOG_WARNING);\n\t\t\t\treturn 'ErrorFileIsInfectedWithAVirus: '.join(',', $checkvirusarray);\n\t\t\t}\n\t\t}\n\n\t\t// Security:\n\t\t// Disallow file with some extensions. We rename them.\n\t\t// Because if we put the documents directory into a directory inside web root (very bad), this allows to execute on demand arbitrary code.\n\t\tif (isAFileWithExecutableContent($dest_file) && empty($conf->global->MAIN_DOCUMENT_IS_OUTSIDE_WEBROOT_SO_NOEXE_NOT_REQUIRED)) {\n\t\t\t// $upload_dir ends with a slash, so be must be sure the medias dir to compare to ends with slash too.\n\t\t\t$publicmediasdirwithslash = $conf->medias->multidir_output[$conf->entity];\n\t\t\tif (!preg_match('/\\/$/', $publicmediasdirwithslash)) {\n\t\t\t\t$publicmediasdirwithslash .= '/';\n\t\t\t}\n\n\t\t\tif (strpos($upload_dir, $publicmediasdirwithslash) !== 0) {\t// We never add .noexe on files into media directory\n\t\t\t\t$file_name .= '.noexe';\n\t\t\t\t$successcode = 2;\n\t\t\t}\n\t\t}\n\n\t\t// Security:\n\t\t// We refuse cache files/dirs, upload using .. and pipes into filenames.\n\t\tif (preg_match('/^\\./', basename($src_file)) || preg_match('/\\.\\./', $src_file) || preg_match('/[<>|]/', $src_file)) {\n\t\t\tdol_syslog(\"Refused to deliver file \".$src_file, LOG_WARNING);\n\t\t\treturn -1;\n\t\t}\n\n\t\t// Security:\n\t\t// We refuse cache files/dirs, upload using .. and pipes into filenames.\n\t\tif (preg_match('/^\\./', basename($dest_file)) || preg_match('/\\.\\./', $dest_file) || preg_match('/[<>|]/', $dest_file)) {\n\t\t\tdol_syslog(\"Refused to deliver file \".$dest_file, LOG_WARNING);\n\t\t\treturn -2;\n\t\t}\n\t}\n\n\tif ($reshook < 0) {\t// At least one blocking error returned by one hook\n\t\t$errmsg = join(',', $hookmanager->errors);\n\t\tif (empty($errmsg)) {\n\t\t\t$errmsg = 'ErrorReturnedBySomeHooks'; // Should not occurs. Added if hook is bugged and does not set ->errors when there is error.\n\t\t}\n\t\treturn $errmsg;\n\t} elseif (empty($reshook)) {\n\t\t// The file functions must be in OS filesystem encoding.\n\t\t$src_file_osencoded = dol_osencode($src_file);\n\t\t$file_name_osencoded = dol_osencode($file_name);\n\n\t\t// Check if destination dir is writable\n\t\tif (!is_writable(dirname($file_name_osencoded))) {\n\t\t\tdol_syslog(\"Files.lib::dol_move_uploaded_file Dir \".dirname($file_name_osencoded).\" is not writable. Return 'ErrorDirNotWritable'\", LOG_WARNING);\n\t\t\treturn 'ErrorDirNotWritable';\n\t\t}\n\n\t\t// Check if destination file already exists\n\t\tif (!$allowoverwrite) {\n\t\t\tif (file_exists($file_name_osencoded)) {\n\t\t\t\tdol_syslog(\"Files.lib::dol_move_uploaded_file File \".$file_name.\" already exists. Return 'ErrorFileAlreadyExists'\", LOG_WARNING);\n\t\t\t\treturn 'ErrorFileAlreadyExists';\n\t\t\t}\n\t\t} else {\t// We are allowed to erase\n\t\t\tif (is_dir($file_name_osencoded)) {\t// If there is a directory with name of file to create\n\t\t\t\tdol_syslog(\"Files.lib::dol_move_uploaded_file A directory with name \".$file_name.\" already exists. Return 'ErrorDirWithFileNameAlreadyExists'\", LOG_WARNING);\n\t\t\t\treturn 'ErrorDirWithFileNameAlreadyExists';\n\t\t\t}\n\t\t}\n\n\t\t// Move file\n\t\t$return = move_uploaded_file($src_file_osencoded, $file_name_osencoded);\n\t\tif ($return) {\n\t\t\tif (!empty($conf->global->MAIN_UMASK)) {\n\t\t\t\t@chmod($file_name_osencoded, octdec($conf->global->MAIN_UMASK));\n\t\t\t}\n\t\t\tdol_syslog(\"Files.lib::dol_move_uploaded_file Success to move \".$src_file.\" to \".$file_name.\" - Umask=\".$conf->global->MAIN_UMASK, LOG_DEBUG);\n\t\t\treturn $successcode; // Success\n\t\t} else {\n\t\t\tdol_syslog(\"Files.lib::dol_move_uploaded_file Failed to move \".$src_file.\" to \".$file_name, LOG_ERR);\n\t\t\treturn -3; // Unknown error\n\t\t}\n\t}\n\n\treturn $successcode; // Success\n}\n\n/**\n *  Remove a file or several files with a mask.\n *  This delete file physically but also database indexes.\n *\n *  @param\tstring\t$file           File to delete or mask of files to delete\n *  @param  int\t\t$disableglob    Disable usage of glob like * so function is an exact delete function that will return error if no file found\n *  @param  int\t\t$nophperrors    Disable all PHP output errors\n *  @param\tint\t\t$nohook\t\t\tDisable all hooks\n *  @param\tobject\t$object\t\t\tCurrent object in use\n *  @param\tboolean\t$allowdotdot\tAllow to delete file path with .. inside. Never use this, it is reserved for migration purpose.\n *  @param\tint\t\t$indexdatabase\tTry to remove also index entries.\n *  @param\tint\t\t$nolog\t\t\tDisable log file\n *  @return boolean         \t\tTrue if no error (file is deleted or if glob is used and there's nothing to delete), False if error\n *  @see dol_delete_dir()\n */\nfunction dol_delete_file($file, $disableglob = 0, $nophperrors = 0, $nohook = 0, $object = null, $allowdotdot = false, $indexdatabase = 1, $nolog = 0)\n{\n\tglobal $db, $conf, $user, $langs;\n\tglobal $hookmanager;\n\n\t// Load translation files required by the page\n\t$langs->loadLangs(array('other', 'errors'));\n\n\tif (empty($nolog)) {\n\t\tdol_syslog(\"dol_delete_file file=\".$file.\" disableglob=\".$disableglob.\" nophperrors=\".$nophperrors.\" nohook=\".$nohook);\n\t}\n\n\t// Security:\n\t// We refuse transversal using .. and pipes into filenames.\n\tif ((!$allowdotdot && preg_match('/\\.\\./', $file)) || preg_match('/[<>|]/', $file)) {\n\t\tdol_syslog(\"Refused to delete file \".$file, LOG_WARNING);\n\t\treturn false;\n\t}\n\n\t$reshook = 0;\n\tif (empty($nohook)) {\n\t\t$hookmanager->initHooks(array('fileslib'));\n\n\t\t$parameters = array(\n\t\t\t'GET' => $_GET,\n\t\t\t'file' => $file,\n\t\t\t'disableglob'=> $disableglob,\n\t\t\t'nophperrors' => $nophperrors\n\t\t);\n\t\t$reshook = $hookmanager->executeHooks('deleteFile', $parameters, $object);\n\t}\n\n\tif (empty($nohook) && $reshook != 0) { // reshook = 0 to do standard actions, 1 = ok and replace, -1 = ko\n\t\tdol_syslog(\"reshook=\".$reshook);\n\t\tif ($reshook < 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} else {\n\t\t$file_osencoded = dol_osencode($file); // New filename encoded in OS filesystem encoding charset\n\t\tif (empty($disableglob) && !empty($file_osencoded)) {\n\t\t\t$ok = true;\n\t\t\t$globencoded = str_replace('[', '\\[', $file_osencoded);\n\t\t\t$globencoded = str_replace(']', '\\]', $globencoded);\n\t\t\t$listofdir = glob($globencoded);\n\t\t\tif (!empty($listofdir) && is_array($listofdir)) {\n\t\t\t\tforeach ($listofdir as $filename) {\n\t\t\t\t\tif ($nophperrors) {\n\t\t\t\t\t\t$ok = @unlink($filename);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$ok = unlink($filename);\n\t\t\t\t\t}\n\n\t\t\t\t\t// If it fails and it is because of the missing write permission on parent dir\n\t\t\t\t\tif (!$ok && file_exists(dirname($filename)) && !(fileperms(dirname($filename)) & 0200)) {\n\t\t\t\t\t\tdol_syslog(\"Error in deletion, but parent directory exists with no permission to write, we try to change permission on parent directory and retry...\", LOG_DEBUG);\n\t\t\t\t\t\t@chmod(dirname($filename), fileperms(dirname($filename)) | 0200);\n\t\t\t\t\t\t// Now we retry deletion\n\t\t\t\t\t\tif ($nophperrors) {\n\t\t\t\t\t\t\t$ok = @unlink($filename);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$ok = unlink($filename);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($ok) {\n\t\t\t\t\t\tif (empty($nolog)) {\n\t\t\t\t\t\t\tdol_syslog(\"Removed file \".$filename, LOG_DEBUG);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Delete entry into ecm database\n\t\t\t\t\t\t$rel_filetodelete = preg_replace('/^'.preg_quote(DOL_DATA_ROOT, '/').'/', '', $filename);\n\t\t\t\t\t\tif (!preg_match('/(\\/temp\\/|\\/thumbs\\/|\\.meta$)/', $rel_filetodelete)) {     // If not a tmp file\n\t\t\t\t\t\t\tif (is_object($db) && $indexdatabase) {\t\t// $db may not be defined when lib is in a context with define('NOREQUIREDB',1)\n\t\t\t\t\t\t\t\t$rel_filetodelete = preg_replace('/^[\\\\/]/', '', $rel_filetodelete);\n\t\t\t\t\t\t\t\t$rel_filetodelete = preg_replace('/\\.noexe$/', '', $rel_filetodelete);\n\n\t\t\t\t\t\t\t\tdol_syslog(\"Try to remove also entries in database for full relative path = \".$rel_filetodelete, LOG_DEBUG);\n\t\t\t\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/ecm/class/ecmfiles.class.php';\n\t\t\t\t\t\t\t\t$ecmfile = new EcmFiles($db);\n\t\t\t\t\t\t\t\t$result = $ecmfile->fetch(0, '', $rel_filetodelete);\n\t\t\t\t\t\t\t\tif ($result >= 0 && $ecmfile->id > 0) {\n\t\t\t\t\t\t\t\t\t$result = $ecmfile->delete($user);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t\t\t\tsetEventMessages($ecmfile->error, $ecmfile->errors, 'warnings');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdol_syslog(\"Failed to remove file \".$filename, LOG_WARNING);\n\t\t\t\t\t\t// TODO Failure to remove can be because file was already removed or because of permission\n\t\t\t\t\t\t// If error because it does not exists, we should return true, and we should return false if this is a permission problem\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdol_syslog(\"No files to delete found\", LOG_DEBUG);\n\t\t\t}\n\t\t} else {\n\t\t\t$ok = false;\n\t\t\tif ($nophperrors) {\n\t\t\t\t$ok = @unlink($file_osencoded);\n\t\t\t} else {\n\t\t\t\t$ok = unlink($file_osencoded);\n\t\t\t}\n\t\t\tif ($ok) {\n\t\t\t\tif (empty($nolog)) {\n\t\t\t\t\tdol_syslog(\"Removed file \".$file_osencoded, LOG_DEBUG);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdol_syslog(\"Failed to remove file \".$file_osencoded, LOG_WARNING);\n\t\t\t}\n\t\t}\n\n\t\treturn $ok;\n\t}\n}\n\n/**\n *  Remove a directory (not recursive, so content must be empty).\n *  If directory is not empty, return false\n *\n *  @param\tstring\t$dir            Directory to delete\n *  @param  int\t\t$nophperrors    Disable all PHP output errors\n *  @return boolean         \t\tTrue if success, false if error\n *  @see dol_delete_file() dolCopyDir()\n */\nfunction dol_delete_dir($dir, $nophperrors = 0)\n{\n\t// Security:\n\t// We refuse transversal using .. and pipes into filenames.\n\tif (preg_match('/\\.\\./', $dir) || preg_match('/[<>|]/', $dir)) {\n\t\tdol_syslog(\"Refused to delete dir \".$dir, LOG_WARNING);\n\t\treturn false;\n\t}\n\n\t$dir_osencoded = dol_osencode($dir);\n\treturn ($nophperrors ? @rmdir($dir_osencoded) : rmdir($dir_osencoded));\n}\n\n/**\n *  Remove a directory $dir and its subdirectories (or only files and subdirectories)\n *\n *  @param\tstring\t$dir            Dir to delete\n *  @param  int\t\t$count          Counter to count nb of elements found to delete\n *  @param  int\t\t$nophperrors    Disable all PHP output errors\n *  @param\tint\t\t$onlysub\t\tDelete only files and subdir, not main directory\n *  @param  int\t\t$countdeleted   Counter to count nb of elements found really deleted\n *  @param\tint\t\t$indexdatabase\tTry to remove also index entries.\n *  @param\tint\t\t$nolog\t\t\tDisable log files (too verbose when making recursive directories)\n *  @return int             \t\tNumber of files and directory we try to remove. NB really removed is returned into var by reference $countdeleted.\n */\nfunction dol_delete_dir_recursive($dir, $count = 0, $nophperrors = 0, $onlysub = 0, &$countdeleted = 0, $indexdatabase = 1, $nolog = 0)\n{\n\tif (empty($nolog)) {\n\t\tdol_syslog(\"functions.lib:dol_delete_dir_recursive \".$dir, LOG_DEBUG);\n\t}\n\tif (dol_is_dir($dir)) {\n\t\t$dir_osencoded = dol_osencode($dir);\n\t\tif ($handle = opendir(\"$dir_osencoded\")) {\n\t\t\twhile (false !== ($item = readdir($handle))) {\n\t\t\t\tif (!utf8_check($item)) {\n\t\t\t\t\t$item = utf8_encode($item); // should be useless\n\t\t\t\t}\n\n\t\t\t\tif ($item != \".\" && $item != \"..\") {\n\t\t\t\t\tif (is_dir(dol_osencode(\"$dir/$item\")) && !is_link(dol_osencode(\"$dir/$item\"))) {\n\t\t\t\t\t\t$count = dol_delete_dir_recursive(\"$dir/$item\", $count, $nophperrors, 0, $countdeleted, $indexdatabase, $nolog);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$result = dol_delete_file(\"$dir/$item\", 1, $nophperrors, 0, null, false, $indexdatabase, $nolog);\n\t\t\t\t\t\t$count++;\n\t\t\t\t\t\tif ($result) {\n\t\t\t\t\t\t\t$countdeleted++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//else print 'Error on '.$item.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tclosedir($handle);\n\n\t\t\t// Delete also the main directory\n\t\t\tif (empty($onlysub)) {\n\t\t\t\t$result = dol_delete_dir($dir, $nophperrors);\n\t\t\t\t$count++;\n\t\t\t\tif ($result) {\n\t\t\t\t\t$countdeleted++;\n\t\t\t\t}\n\t\t\t\t//else print 'Error on '.$dir.\"\\n\";\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $count;\n}\n\n\n/**\n *  Delete all preview files linked to object instance.\n *  Note that preview image of PDF files is generated when required, by dol_banner_tab() for example.\n *\n *  @param\tobject\t$object\t\tObject to clean\n *  @return\tint\t\t\t\t\t0 if error, 1 if OK\n *  @see dol_convert_file()\n */\nfunction dol_delete_preview($object)\n{\n\tglobal $langs, $conf;\n\n\t// Define parent dir of elements\n\t$element = $object->element;\n\n\tif ($object->element == 'order_supplier') {\n\t\t$dir = $conf->fournisseur->commande->dir_output;\n\t} elseif ($object->element == 'invoice_supplier') {\n\t\t$dir = $conf->fournisseur->facture->dir_output;\n\t} elseif ($object->element == 'project') {\n\t\t$dir = $conf->projet->dir_output;\n\t} elseif ($object->element == 'shipping') {\n\t\t$dir = $conf->expedition->dir_output.'/sending';\n\t} elseif ($object->element == 'delivery') {\n\t\t$dir = $conf->expedition->dir_output.'/receipt';\n\t} elseif ($object->element == 'fichinter') {\n\t\t$dir = $conf->ficheinter->dir_output;\n\t} else {\n\t\t$dir = empty($conf->$element->dir_output) ? '' : $conf->$element->dir_output;\n\t}\n\n\tif (empty($dir)) {\n\t\treturn 'ErrorObjectNoSupportedByFunction';\n\t}\n\n\t$refsan = dol_sanitizeFileName($object->ref);\n\t$dir = $dir.\"/\".$refsan;\n\t$filepreviewnew = $dir.\"/\".$refsan.\".pdf_preview.png\";\n\t$filepreviewnewbis = $dir.\"/\".$refsan.\".pdf_preview-0.png\";\n\t$filepreviewold = $dir.\"/\".$refsan.\".pdf.png\";\n\n\t// For new preview files\n\tif (file_exists($filepreviewnew) && is_writable($filepreviewnew)) {\n\t\tif (!dol_delete_file($filepreviewnew, 1)) {\n\t\t\t$object->error = $langs->trans(\"ErrorFailedToDeleteFile\", $filepreviewnew);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif (file_exists($filepreviewnewbis) && is_writable($filepreviewnewbis)) {\n\t\tif (!dol_delete_file($filepreviewnewbis, 1)) {\n\t\t\t$object->error = $langs->trans(\"ErrorFailedToDeleteFile\", $filepreviewnewbis);\n\t\t\treturn 0;\n\t\t}\n\t}\n\t// For old preview files\n\tif (file_exists($filepreviewold) && is_writable($filepreviewold)) {\n\t\tif (!dol_delete_file($filepreviewold, 1)) {\n\t\t\t$object->error = $langs->trans(\"ErrorFailedToDeleteFile\", $filepreviewold);\n\t\t\treturn 0;\n\t\t}\n\t} else {\n\t\t$multiple = $filepreviewold.\".\";\n\t\tfor ($i = 0; $i < 20; $i++) {\n\t\t\t$preview = $multiple.$i;\n\n\t\t\tif (file_exists($preview) && is_writable($preview)) {\n\t\t\t\tif (!dol_delete_file($preview, 1)) {\n\t\t\t\t\t$object->error = $langs->trans(\"ErrorFailedToOpenFile\", $preview);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 1;\n}\n\n/**\n *\tCreate a meta file with document file into same directory.\n *\tThis make \"grep\" search possible.\n *  This feature to generate the meta file is enabled only if option MAIN_DOC_CREATE_METAFILE is set.\n *\n *\t@param\tCommonObject\t$object\t\tObject\n *\t@return\tint\t\t\t\t\t\t\t0 if do nothing, >0 if we update meta file too, <0 if KO\n */\nfunction dol_meta_create($object)\n{\n\tglobal $conf;\n\n\t// Create meta file\n\tif (empty($conf->global->MAIN_DOC_CREATE_METAFILE)) {\n\t\treturn 0; // By default, no metafile.\n\t}\n\n\t// Define parent dir of elements\n\t$element = $object->element;\n\n\tif ($object->element == 'order_supplier') {\n\t\t$dir = $conf->fournisseur->dir_output.'/commande';\n\t} elseif ($object->element == 'invoice_supplier') {\n\t\t$dir = $conf->fournisseur->dir_output.'/facture';\n\t} elseif ($object->element == 'project') {\n\t\t$dir = $conf->projet->dir_output;\n\t} elseif ($object->element == 'shipping') {\n\t\t$dir = $conf->expedition->dir_output.'/sending';\n\t} elseif ($object->element == 'delivery') {\n\t\t$dir = $conf->expedition->dir_output.'/receipt';\n\t} elseif ($object->element == 'fichinter') {\n\t\t$dir = $conf->ficheinter->dir_output;\n\t} else {\n\t\t$dir = empty($conf->$element->dir_output) ? '' : $conf->$element->dir_output;\n\t}\n\n\tif ($dir) {\n\t\t$object->fetch_thirdparty();\n\n\t\t$objectref = dol_sanitizeFileName($object->ref);\n\t\t$dir = $dir.\"/\".$objectref;\n\t\t$file = $dir.\"/\".$objectref.\".meta\";\n\n\t\tif (!is_dir($dir)) {\n\t\t\tdol_mkdir($dir);\n\t\t}\n\n\t\tif (is_dir($dir)) {\n\t\t\t$nblines = count($object->lines);\n\t\t\t$client = $object->thirdparty->name.\" \".$object->thirdparty->address.\" \".$object->thirdparty->zip.\" \".$object->thirdparty->town;\n\t\t\t$meta = \"REFERENCE=\\\"\".$object->ref.\"\\\"\n\t\t\tDATE=\\\"\" . dol_print_date($object->date, '').\"\\\"\n\t\t\tNB_ITEMS=\\\"\" . $nblines.\"\\\"\n\t\t\tCLIENT=\\\"\" . $client.\"\\\"\n\t\t\tAMOUNT_EXCL_TAX=\\\"\" . $object->total_ht.\"\\\"\n\t\t\tAMOUNT=\\\"\" . $object->total_ttc.\"\\\"\\n\";\n\n\t\t\tfor ($i = 0; $i < $nblines; $i++) {\n\t\t\t\t//Pour les articles\n\t\t\t\t$meta .= \"ITEM_\".$i.\"_QUANTITY=\\\"\".$object->lines[$i]->qty.\"\\\"\n\t\t\t\tITEM_\" . $i.\"_AMOUNT_WO_TAX=\\\"\".$object->lines[$i]->total_ht.\"\\\"\n\t\t\t\tITEM_\" . $i.\"_VAT=\\\"\".$object->lines[$i]->tva_tx.\"\\\"\n\t\t\t\tITEM_\" . $i.\"_DESCRIPTION=\\\"\".str_replace(\"\\r\\n\", \"\", nl2br($object->lines[$i]->desc)).\"\\\"\n\t\t\t\t\";\n\t\t\t}\n\t\t}\n\n\t\t$fp = fopen($file, \"w\");\n\t\tfputs($fp, $meta);\n\t\tfclose($fp);\n\t\tif (!empty($conf->global->MAIN_UMASK)) {\n\t\t\t@chmod($file, octdec($conf->global->MAIN_UMASK));\n\t\t}\n\n\t\t\treturn 1;\n\t} else {\n\t\tdol_syslog('FailedToDetectDirInDolMetaCreateFor'.$object->element, LOG_WARNING);\n\t}\n\n\treturn 0;\n}\n\n\n\n/**\n * Scan a directory and init $_SESSION to manage uploaded files with list of all found files.\n * Note: Only email module seems to use this. Other feature initialize the $_SESSION doing $formmail->clear_attached_files(); $formmail->add_attached_files()\n *\n * @param\tstring\t$pathtoscan\t\t\t\tPath to scan\n * @param   string  $trackid                Track id (used to prefix name of session vars to avoid conflict)\n * @return\tvoid\n */\nfunction dol_init_file_process($pathtoscan = '', $trackid = '')\n{\n\t$listofpaths = array();\n\t$listofnames = array();\n\t$listofmimes = array();\n\n\tif ($pathtoscan) {\n\t\t$listoffiles = dol_dir_list($pathtoscan, 'files');\n\t\tforeach ($listoffiles as $key => $val) {\n\t\t\t$listofpaths[] = $val['fullname'];\n\t\t\t$listofnames[] = $val['name'];\n\t\t\t$listofmimes[] = dol_mimetype($val['name']);\n\t\t}\n\t}\n\t$keytoavoidconflict = empty($trackid) ? '' : '-'.$trackid;\n\t$_SESSION[\"listofpaths\".$keytoavoidconflict] = join(';', $listofpaths);\n\t$_SESSION[\"listofnames\".$keytoavoidconflict] = join(';', $listofnames);\n\t$_SESSION[\"listofmimes\".$keytoavoidconflict] = join(';', $listofmimes);\n}\n\n\n/**\n * Get and save an upload file (for example after submitting a new file a mail form). Database index of file is also updated if donotupdatesession is set.\n * All information used are in db, conf, langs, user and _FILES.\n * Note: This function can be used only into a HTML page context.\n *\n * @param\tstring\t$upload_dir\t\t\t\tDirectory where to store uploaded file (note: used to forge $destpath = $upload_dir + filename)\n * @param\tint\t\t$allowoverwrite\t\t\t1=Allow overwrite existing file\n * @param\tint\t\t$donotupdatesession\t\t1=Do no edit _SESSION variable but update database index. 0=Update _SESSION and not database index. -1=Do not update SESSION neither db.\n * @param\tstring\t$varfiles\t\t\t\t_FILES var name\n * @param\tstring\t$savingdocmask\t\t\tMask to use to define output filename. For example 'XXXXX-__YYYYMMDD__-__file__'\n * @param\tstring\t$link\t\t\t\t\tLink to add (to add a link instead of a file)\n * @param   string  $trackid                Track id (used to prefix name of session vars to avoid conflict)\n * @param\tint\t\t$generatethumbs\t\t\t1=Generate also thumbs for uploaded image files\n * @param   Object  $object                 Object used to set 'src_object_*' fields\n * @return\tint                             <=0 if KO, >0 if OK\n * @see dol_remove_file_process()\n */\nfunction dol_add_file_process($upload_dir, $allowoverwrite = 0, $donotupdatesession = 0, $varfiles = 'addedfile', $savingdocmask = '', $link = null, $trackid = '', $generatethumbs = 1, $object = null)\n{\n\tglobal $db, $user, $conf, $langs;\n\n\t$res = 0;\n\n\tif (!empty($_FILES[$varfiles])) { // For view $_FILES[$varfiles]['error']\n\t\tdol_syslog('dol_add_file_process upload_dir='.$upload_dir.' allowoverwrite='.$allowoverwrite.' donotupdatesession='.$donotupdatesession.' savingdocmask='.$savingdocmask, LOG_DEBUG);\n\n\t\t$result = dol_mkdir($upload_dir);\n\t\t//      var_dump($result);exit;\n\t\tif ($result >= 0) {\n\t\t\t$TFile = $_FILES[$varfiles];\n\t\t\tif (!is_array($TFile['name'])) {\n\t\t\t\tforeach ($TFile as $key => &$val) {\n\t\t\t\t\t$val = array($val);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$nbfile = count($TFile['name']);\n\t\t\t$nbok = 0;\n\t\t\tfor ($i = 0; $i < $nbfile; $i++) {\n\t\t\t\tif (empty($TFile['name'][$i])) {\n\t\t\t\t\tcontinue; // For example, when submitting a form with no file name\n\t\t\t\t}\n\n\t\t\t\t// Define $destfull (path to file including filename) and $destfile (only filename)\n\t\t\t\t$destfull = $upload_dir.\"/\".$TFile['name'][$i];\n\t\t\t\t$destfile = $TFile['name'][$i];\n\t\t\t\t$destfilewithoutext = preg_replace('/\\.[^\\.]+$/', '', $destfile);\n\n\t\t\t\tif ($savingdocmask && strpos($savingdocmask, $destfilewithoutext) !== 0) {\n\t\t\t\t\t$destfull = $upload_dir.\"/\".preg_replace('/__file__/', $TFile['name'][$i], $savingdocmask);\n\t\t\t\t\t$destfile = preg_replace('/__file__/', $TFile['name'][$i], $savingdocmask);\n\t\t\t\t}\n\n\t\t\t\t$filenameto = basename($destfile);\n\t\t\t\tif (preg_match('/^\\./', $filenameto)) {\n\t\t\t\t\t$langs->load(\"errors\"); // key must be loaded because we can't rely on loading during output, we need var substitution to be done now.\n\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorFilenameCantStartWithDot\", $filenameto), null, 'errors');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// dol_sanitizeFileName the file name and lowercase extension\n\t\t\t\t$info = pathinfo($destfull);\n\t\t\t\t$destfull = $info['dirname'].'/'.dol_sanitizeFileName($info['filename'].($info['extension'] != '' ? ('.'.strtolower($info['extension'])) : ''));\n\t\t\t\t$info = pathinfo($destfile);\n\n\t\t\t\t$destfile = dol_sanitizeFileName($info['filename'].($info['extension'] != '' ? ('.'.strtolower($info['extension'])) : ''));\n\n\t\t\t\t// We apply dol_string_nohtmltag also to clean file names (this remove duplicate spaces) because\n\t\t\t\t// this function is also applied when we rename and when we make try to download file (by the GETPOST(filename, 'alphanohtml') call).\n\t\t\t\t$destfile = dol_string_nohtmltag($destfile);\n\t\t\t\t$destfull = dol_string_nohtmltag($destfull);\n\n\t\t\t\t// Move file from temp directory to final directory. A .noexe may also be appended on file name.\n\t\t\t\t$resupload = dol_move_uploaded_file($TFile['tmp_name'][$i], $destfull, $allowoverwrite, 0, $TFile['error'][$i], 0, $varfiles, $upload_dir);\n\n\t\t\t\tif (is_numeric($resupload) && $resupload > 0) {   // $resupload can be 'ErrorFileAlreadyExists'\n\t\t\t\t\tglobal $maxwidthsmall, $maxheightsmall, $maxwidthmini, $maxheightmini;\n\n\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/images.lib.php';\n\n\t\t\t\t\t// Generate thumbs.\n\t\t\t\t\tif ($generatethumbs) {\n\t\t\t\t\t\tif (image_format_supported($destfull) == 1) {\n\t\t\t\t\t\t\t// Create thumbs\n\t\t\t\t\t\t\t// We can't use $object->addThumbs here because there is no $object known\n\n\t\t\t\t\t\t\t// Used on logon for example\n\t\t\t\t\t\t\t$imgThumbSmall = vignette($destfull, $maxwidthsmall, $maxheightsmall, '_small', 50, \"thumbs\");\n\t\t\t\t\t\t\t// Create mini thumbs for image (Ratio is near 16/9)\n\t\t\t\t\t\t\t// Used on menu or for setup page for example\n\t\t\t\t\t\t\t$imgThumbMini = vignette($destfull, $maxwidthmini, $maxheightmini, '_mini', 50, \"thumbs\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update session\n\t\t\t\t\tif (empty($donotupdatesession)) {\n\t\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n\t\t\t\t\t\t$formmail = new FormMail($db);\n\t\t\t\t\t\t$formmail->trackid = $trackid;\n\t\t\t\t\t\t$formmail->add_attached_files($destfull, $destfile, $TFile['type'][$i]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update index table of files (llx_ecm_files)\n\t\t\t\t\tif ($donotupdatesession == 1) {\n\t\t\t\t\t\t$result = addFileIntoDatabaseIndex($upload_dir, basename($destfile).($resupload == 2 ? '.noexe' : ''), $TFile['name'][$i], 'uploaded', 0, $object);\n\t\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t\tif ($allowoverwrite) {\n\t\t\t\t\t\t\t\t// Do not show error message. We can have an error due to DB_ERROR_RECORD_ALREADY_EXISTS\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetEventMessages('WarningFailedToAddFileIntoDatabaseIndex', '', 'warnings');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$nbok++;\n\t\t\t\t} else {\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\tif ($resupload < 0) {\t// Unknown error\n\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorFileNotUploaded\"), null, 'errors');\n\t\t\t\t\t} elseif (preg_match('/ErrorFileIsInfectedWithAVirus/', $resupload)) {\t// Files infected by a virus\n\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorFileIsInfectedWithAVirus\"), null, 'errors');\n\t\t\t\t\t} else // Known error\n\t\t\t\t\t{\n\t\t\t\t\t\tsetEventMessages($langs->trans($resupload), null, 'errors');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($nbok > 0) {\n\t\t\t\t$res = 1;\n\t\t\t\tsetEventMessages($langs->trans(\"FileTransferComplete\"), null, 'mesgs');\n\t\t\t}\n\t\t} else {\n\t\t\tsetEventMessages($langs->trans(\"ErrorFailedToCreateDir\", $upload_dir), null, 'errors');\n\t\t}\n\t} elseif ($link) {\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/link.class.php';\n\t\t$linkObject = new Link($db);\n\t\t$linkObject->entity = $conf->entity;\n\t\t$linkObject->url = $link;\n\t\t$linkObject->objecttype = GETPOST('objecttype', 'alpha');\n\t\t$linkObject->objectid = GETPOST('objectid', 'int');\n\t\t$linkObject->label = GETPOST('label', 'alpha');\n\t\t$res = $linkObject->create($user);\n\t\t$langs->load('link');\n\t\tif ($res > 0) {\n\t\t\tsetEventMessages($langs->trans(\"LinkComplete\"), null, 'mesgs');\n\t\t} else {\n\t\t\tsetEventMessages($langs->trans(\"ErrorFileNotLinked\"), null, 'errors');\n\t\t}\n\t} else {\n\t\t$langs->load(\"errors\");\n\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"File\")), null, 'errors');\n\t}\n\n\treturn $res;\n}\n\n\n/**\n * Remove an uploaded file (for example after submitting a new file a mail form).\n * All information used are in db, conf, langs, user and _FILES.\n *\n * @param\tint\t\t$filenb\t\t\t\t\tFile nb to delete\n * @param\tint\t\t$donotupdatesession\t\t-1 or 1 = Do not update _SESSION variable\n * @param   int\t\t$donotdeletefile        1=Do not delete physically file\n * @param   string  $trackid                Track id (used to prefix name of session vars to avoid conflict)\n * @return\tvoid\n * @see dol_add_file_process()\n */\nfunction dol_remove_file_process($filenb, $donotupdatesession = 0, $donotdeletefile = 1, $trackid = '')\n{\n\tglobal $db, $user, $conf, $langs, $_FILES;\n\n\t$keytodelete = $filenb;\n\t$keytodelete--;\n\n\t$listofpaths = array();\n\t$listofnames = array();\n\t$listofmimes = array();\n\t$keytoavoidconflict = empty($trackid) ? '' : '-'.$trackid;\n\tif (!empty($_SESSION[\"listofpaths\".$keytoavoidconflict])) {\n\t\t$listofpaths = explode(';', $_SESSION[\"listofpaths\".$keytoavoidconflict]);\n\t}\n\tif (!empty($_SESSION[\"listofnames\".$keytoavoidconflict])) {\n\t\t$listofnames = explode(';', $_SESSION[\"listofnames\".$keytoavoidconflict]);\n\t}\n\tif (!empty($_SESSION[\"listofmimes\".$keytoavoidconflict])) {\n\t\t$listofmimes = explode(';', $_SESSION[\"listofmimes\".$keytoavoidconflict]);\n\t}\n\n\tif ($keytodelete >= 0) {\n\t\t$pathtodelete = $listofpaths[$keytodelete];\n\t\t$filetodelete = $listofnames[$keytodelete];\n\t\tif (empty($donotdeletefile)) {\n\t\t\t$result = dol_delete_file($pathtodelete, 1); // The delete of ecm database is inside the function dol_delete_file\n\t\t} else {\n\t\t\t$result = 0;\n\t\t}\n\t\tif ($result >= 0) {\n\t\t\tif (empty($donotdeletefile)) {\n\t\t\t\t$langs->load(\"other\");\n\t\t\t\tsetEventMessages($langs->trans(\"FileWasRemoved\", $filetodelete), null, 'mesgs');\n\t\t\t}\n\t\t\tif (empty($donotupdatesession)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n\t\t\t\t$formmail = new FormMail($db);\n\t\t\t\t$formmail->trackid = $trackid;\n\t\t\t\t$formmail->remove_attached_files($keytodelete);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n *  Add a file into database index.\n *  Called by dol_add_file_process when uploading a file and on other cases.\n *  See also commonGenerateDocument that also add/update database index when a file is generated.\n *\n *  @param      string\t$dir\t\t\tDirectory name (full real path without ending /)\n *  @param\t\tstring\t$file\t\t\tFile name (May end with '.noexe')\n *  @param\t\tstring\t$fullpathorig\tFull path of origin for file (can be '')\n *  @param\t\tstring\t$mode\t\t\tHow file was created ('uploaded', 'generated', ...)\n *  @param\t\tint\t\t$setsharekey\tSet also the share key\n *  @param      Object  $object         Object used to set 'src_object_*' fields\n *\t@return\t\tint\t\t\t\t\t\t<0 if KO, 0 if nothing done, >0 if OK\n */\nfunction addFileIntoDatabaseIndex($dir, $file, $fullpathorig = '', $mode = 'uploaded', $setsharekey = 0, $object = null)\n{\n\tglobal $db, $user, $conf;\n\n\t$result = 0;\n\n\t$rel_dir = preg_replace('/^'.preg_quote(DOL_DATA_ROOT, '/').'/', '', $dir);\n\n\tif (!preg_match('/[\\\\/]temp[\\\\/]|[\\\\/]thumbs|\\.meta$/', $rel_dir)) {     // If not a tmp dir\n\t\t$filename = basename(preg_replace('/\\.noexe$/', '', $file));\n\t\t$rel_dir = preg_replace('/[\\\\/]$/', '', $rel_dir);\n\t\t$rel_dir = preg_replace('/^[\\\\/]/', '', $rel_dir);\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/ecm/class/ecmfiles.class.php';\n\t\t$ecmfile = new EcmFiles($db);\n\t\t$ecmfile->filepath = $rel_dir;\n\t\t$ecmfile->filename = $filename;\n\t\t$ecmfile->label = md5_file(dol_osencode($dir.'/'.$file)); // MD5 of file content\n\t\t$ecmfile->fullpath_orig = $fullpathorig;\n\t\t$ecmfile->gen_or_uploaded = $mode;\n\t\t$ecmfile->description = ''; // indexed content\n\t\t$ecmfile->keywords = ''; // keyword content\n\n\t\tif (is_object($object) && $object->id > 0) {\n\t\t\t$ecmfile->src_object_id = $object->id;\n\t\t\tif (isset($object->table_element)) {\n\t\t\t\t$ecmfile->src_object_type = $object->table_element;\n\t\t\t} else {\n\t\t\t\tdol_syslog('Error: object ' . get_class($object) . ' has no table_element attribute.');\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (isset($object->src_object_description)) $ecmfile->description = $object->src_object_description;\n\t\t\tif (isset($object->src_object_keywords)) $ecmfile->keywords = $object->src_object_keywords;\n\t\t}\n\n\t\tif (!empty($conf->global->MAIN_FORCE_SHARING_ON_ANY_UPLOADED_FILE)) {\n\t\t\t$setsharekey = 1;\n\t\t}\n\n\t\tif ($setsharekey) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/security2.lib.php';\n\t\t\t$ecmfile->share = getRandomPassword(true);\n\t\t}\n\n\t\t$result = $ecmfile->create($user);\n\t\tif ($result < 0) {\n\t\t\tdol_syslog($ecmfile->error);\n\t\t}\n\t}\n\n\treturn $result;\n}\n\n/**\n *  Delete files into database index using search criterias.\n *\n *  @param      string\t$dir\t\t\tDirectory name (full real path without ending /)\n *  @param\t\tstring\t$file\t\t\tFile name\n *  @param\t\tstring\t$mode\t\t\tHow file was created ('uploaded', 'generated', ...)\n *\t@return\t\tint\t\t\t\t\t\t<0 if KO, 0 if nothing done, >0 if OK\n */\nfunction deleteFilesIntoDatabaseIndex($dir, $file, $mode = 'uploaded')\n{\n\tglobal $conf, $db, $user;\n\n\t$error = 0;\n\n\tif (empty($dir)) {\n\t\tdol_syslog(\"deleteFilesIntoDatabaseIndex: dir parameter can't be empty\", LOG_ERR);\n\t\treturn -1;\n\t}\n\n\t$db->begin();\n\n\t$rel_dir = preg_replace('/^'.preg_quote(DOL_DATA_ROOT, '/').'/', '', $dir);\n\n\t$filename = basename($file);\n\t$rel_dir = preg_replace('/[\\\\/]$/', '', $rel_dir);\n\t$rel_dir = preg_replace('/^[\\\\/]/', '', $rel_dir);\n\n\tif (!$error) {\n\t\t$sql = 'DELETE FROM '.MAIN_DB_PREFIX.'ecm_files';\n\t\t$sql .= ' WHERE entity = '.$conf->entity;\n\t\t$sql .= \" AND filepath = '\".$db->escape($rel_dir).\"'\";\n\t\tif ($file) {\n\t\t\t$sql .= \" AND filename = '\".$db->escape($file).\"'\";\n\t\t}\n\t\tif ($mode) {\n\t\t\t$sql .= \" AND gen_or_uploaded = '\".$db->escape($mode).\"'\";\n\t\t}\n\n\t\t$resql = $db->query($sql);\n\t\tif (!$resql) {\n\t\t\t$error++;\n\t\t\tdol_syslog(__METHOD__.' '.$db->lasterror(), LOG_ERR);\n\t\t}\n\t}\n\n\t// Commit or rollback\n\tif ($error) {\n\t\t$db->rollback();\n\t\treturn -1 * $error;\n\t} else {\n\t\t$db->commit();\n\t\treturn 1;\n\t}\n}\n\n\n/**\n * \tConvert an image file or a PDF into another image format.\n *  This need Imagick php extension. You can use dol_imageResizeOrCrop() for a function that need GD.\n *\n *  @param\tstring\t$fileinput  Input file name\n *  @param  string\t$ext        Format of target file (It is also extension added to file if fileoutput is not provided).\n *  @param\tstring\t$fileoutput\tOutput filename\n *  @param  string  $page       Page number if we convert a PDF into png\n *  @return\tint\t\t\t\t\t<0 if KO, 0=Nothing done, >0 if OK\n *  @see dol_imageResizeOrCrop()\n */\nfunction dol_convert_file($fileinput, $ext = 'png', $fileoutput = '', $page = '')\n{\n\tglobal $langs;\n\tif (class_exists('Imagick')) {\n\t\t$image = new Imagick();\n\t\ttry {\n\t\t\t$filetoconvert = $fileinput.(($page != '') ? '['.$page.']' : '');\n\t\t\t//var_dump($filetoconvert);\n\t\t\t$ret = $image->readImage($filetoconvert);\n\t\t} catch (Exception $e) {\n\t\t\t$ext = pathinfo($fileinput, PATHINFO_EXTENSION);\n\t\t\tdol_syslog(\"Failed to read image using Imagick (Try to install package 'apt-get install php-imagick ghostscript' and check there is no policy to disable \".$ext.\" convertion in /etc/ImageMagick*/policy.xml): \".$e->getMessage(), LOG_WARNING);\n\t\t\treturn 0;\n\t\t}\n\t\tif ($ret) {\n\t\t\t$ret = $image->setImageFormat($ext);\n\t\t\tif ($ret) {\n\t\t\t\tif (empty($fileoutput)) {\n\t\t\t\t\t$fileoutput = $fileinput.\".\".$ext;\n\t\t\t\t}\n\n\t\t\t\t$count = $image->getNumberImages();\n\n\t\t\t\tif (!dol_is_file($fileoutput) || is_writeable($fileoutput)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t$ret = $image->writeImages($fileoutput, true);\n\t\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\t\tdol_syslog($e->getMessage(), LOG_WARNING);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdol_syslog(\"Warning: Failed to write cache preview file '.$fileoutput.'. Check permission on file/dir\", LOG_ERR);\n\t\t\t\t}\n\t\t\t\tif ($ret) {\n\t\t\t\t\treturn $count;\n\t\t\t\t} else {\n\t\t\t\t\treturn -3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn -2;\n\t\t\t}\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n\n/**\n * Compress a file.\n * An error string may be returned into parameters.\n *\n * @param \tstring\t$inputfile\t\tSource file name\n * @param \tstring\t$outputfile\t\tTarget file name\n * @param \tstring\t$mode\t\t\t'gz' or 'bz' or 'zip'\n * @param\tstring\t$errorstring\tError string\n * @return\tint\t\t\t\t\t\t<0 if KO, >0 if OK\n */\nfunction dol_compress_file($inputfile, $outputfile, $mode = \"gz\", &$errorstring = null)\n{\n\tglobal $conf;\n\n\t$foundhandler = 0;\n\n\ttry {\n\t\tdol_syslog(\"dol_compress_file mode=\".$mode.\" inputfile=\".$inputfile.\" outputfile=\".$outputfile);\n\n\t\t$data = implode(\"\", file(dol_osencode($inputfile)));\n\t\tif ($mode == 'gz') {\n\t\t\t$foundhandler = 1;\n\t\t\t$compressdata = gzencode($data, 9);\n\t\t} elseif ($mode == 'bz') {\n\t\t\t$foundhandler = 1;\n\t\t\t$compressdata = bzcompress($data, 9);\n\t\t} elseif ($mode == 'zstd') {\n\t\t\t$foundhandler = 1;\n\t\t\t$compressdata = zstd_compress($data, 9);\n\t\t} elseif ($mode == 'zip') {\n\t\t\tif (class_exists('ZipArchive') && !empty($conf->global->MAIN_USE_ZIPARCHIVE_FOR_ZIP_COMPRESS)) {\n\t\t\t\t$foundhandler = 1;\n\n\t\t\t\t$rootPath = realpath($inputfile);\n\n\t\t\t\tdol_syslog(\"Class ZipArchive is set so we zip using ZipArchive to zip into \".$outputfile.' rootPath='.$rootPath);\n\t\t\t\t$zip = new ZipArchive;\n\n\t\t\t\tif ($zip->open($outputfile, ZipArchive::CREATE) !== true) {\n\t\t\t\t\t$errorstring = \"dol_compress_file failure - Failed to open file \".$outputfile.\"\\n\";\n\t\t\t\t\tdol_syslog($errorstring, LOG_ERR);\n\n\t\t\t\t\tglobal $errormsg;\n\t\t\t\t\t$errormsg = $errorstring;\n\n\t\t\t\t\treturn -6;\n\t\t\t\t}\n\n\t\t\t\t// Create recursive directory iterator\n\t\t\t\t/** @var SplFileInfo[] $files */\n\t\t\t\t$files = new RecursiveIteratorIterator(\n\t\t\t\t\tnew RecursiveDirectoryIterator($rootPath),\n\t\t\t\t\tRecursiveIteratorIterator::LEAVES_ONLY\n\t\t\t\t);\n\n\t\t\t\tforeach ($files as $name => $file) {\n\t\t\t\t\t// Skip directories (they would be added automatically)\n\t\t\t\t\tif (!$file->isDir()) {\n\t\t\t\t\t\t// Get real and relative path for current file\n\t\t\t\t\t\t$filePath = $file->getPath();\t\t\t\t// the full path with filename using the $inputdir root.\n\t\t\t\t\t\t$fileName = $file->getFilename();\n\t\t\t\t\t\t$fileFullRealPath = $file->getRealPath();\t// the full path with name and transformed to use real path directory.\n\n\t\t\t\t\t\t//$relativePath = substr($fileFullRealPath, strlen($rootPath) + 1);\n\t\t\t\t\t\t$relativePath = substr(($filePath ? $filePath.'/' : '').$fileName, strlen($rootPath) + 1);\n\n\t\t\t\t\t\t// Add current file to archive\n\t\t\t\t\t\t$zip->addFile($fileFullRealPath, $relativePath);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Zip archive will be created only after closing object\n\t\t\t\t$zip->close();\n\n\t\t\t\tdol_syslog(\"dol_compress_file success - \".count($zip->numFiles).\" files\");\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif (defined('ODTPHP_PATHTOPCLZIP')) {\n\t\t\t\t$foundhandler = 1;\n\n\t\t\t\tinclude_once ODTPHP_PATHTOPCLZIP.'/pclzip.lib.php';\n\t\t\t\t$archive = new PclZip($outputfile);\n\t\t\t\t$result = $archive->add($inputfile, PCLZIP_OPT_REMOVE_PATH, dirname($inputfile));\n\n\t\t\t\tif ($result === 0) {\n\t\t\t\t\tglobal $errormsg;\n\t\t\t\t\t$errormsg = $archive->errorInfo(true);\n\n\t\t\t\t\tif ($archive->errorCode() == PCLZIP_ERR_WRITE_OPEN_FAIL) {\n\t\t\t\t\t\t$errorstring = \"PCLZIP_ERR_WRITE_OPEN_FAIL\";\n\t\t\t\t\t\tdol_syslog(\"dol_compress_file error - archive->errorCode() = PCLZIP_ERR_WRITE_OPEN_FAIL\", LOG_ERR);\n\t\t\t\t\t\treturn -4;\n\t\t\t\t\t}\n\n\t\t\t\t\t$errorstring = \"dol_compress_file error archive->errorCode = \".$archive->errorCode().\" errormsg=\".$errormsg;\n\t\t\t\t\tdol_syslog(\"dol_compress_file failure - \".$errormsg, LOG_ERR);\n\t\t\t\t\treturn -3;\n\t\t\t\t} else {\n\t\t\t\t\tdol_syslog(\"dol_compress_file success - \".count($result).\" files\");\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($foundhandler) {\n\t\t\t$fp = fopen($outputfile, \"w\");\n\t\t\tfwrite($fp, $compressdata);\n\t\t\tfclose($fp);\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$errorstring = \"Try to zip with format \".$mode.\" with no handler for this format\";\n\t\t\tdol_syslog($errorstring, LOG_ERR);\n\n\t\t\tglobal $errormsg;\n\t\t\t$errormsg = $errorstring;\n\t\t\treturn -2;\n\t\t}\n\t} catch (Exception $e) {\n\t\tglobal $langs, $errormsg;\n\t\t$langs->load(\"errors\");\n\t\t$errormsg = $langs->trans(\"ErrorFailedToWriteInDir\");\n\n\t\t$errorstring = \"Failed to open file \".$outputfile;\n\t\tdol_syslog($errorstring, LOG_ERR);\n\t\treturn -1;\n\t}\n}\n\n/**\n * Uncompress a file\n *\n * @param \tstring \t$inputfile\t\tFile to uncompress\n * @param \tstring\t$outputdir\t\tTarget dir name\n * @return \tarray\t\t\t\t\tarray('error'=>'Error code') or array() if no error\n */\nfunction dol_uncompress($inputfile, $outputdir)\n{\n\tglobal $conf, $langs;\n\n\tif (defined('ODTPHP_PATHTOPCLZIP') && empty($conf->global->MAIN_USE_ZIPARCHIVE_FOR_ZIP_UNCOMPRESS)) {\n\t\tdol_syslog(\"Constant ODTPHP_PATHTOPCLZIP for pclzip library is set to \".ODTPHP_PATHTOPCLZIP.\", so we use Pclzip to unzip into \".$outputdir);\n\t\tinclude_once ODTPHP_PATHTOPCLZIP.'/pclzip.lib.php';\n\t\t$archive = new PclZip($inputfile);\n\n\t\t// Extract into outputdir, but only files that match the regex '/^((?!\\.\\.).)*$/' that means \"does not include ..\"\n\t\t$result = $archive->extract(PCLZIP_OPT_PATH, $outputdir, PCLZIP_OPT_BY_PREG, '/^((?!\\.\\.).)*$/');\n\n\t\tif (!is_array($result) && $result <= 0) {\n\t\t\treturn array('error'=>$archive->errorInfo(true));\n\t\t} else {\n\t\t\t$ok = 1;\n\t\t\t$errmsg = '';\n\t\t\t// Loop on each file to check result for unzipping file\n\t\t\tforeach ($result as $key => $val) {\n\t\t\t\tif ($val['status'] == 'path_creation_fail') {\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t$ok = 0;\n\t\t\t\t\t$errmsg = $langs->trans(\"ErrorFailToCreateDir\", $val['filename']);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($ok) {\n\t\t\t\treturn array();\n\t\t\t} else {\n\t\t\t\treturn array('error'=>$errmsg);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (class_exists('ZipArchive')) {\t// Must install php-zip to have it\n\t\tdol_syslog(\"Class ZipArchive is set so we unzip using ZipArchive to unzip into \".$outputdir);\n\t\t$zip = new ZipArchive;\n\t\t$res = $zip->open($inputfile);\n\t\tif ($res === true) {\n\t\t\t//$zip->extractTo($outputdir.'/');\n\t\t\t// We must extract one file at time so we can check that file name does not contains '..' to avoid transversal path of zip built for example using\n\t\t\t// python3 path_traversal_archiver.py <Created_file_name> test.zip -l 10 -p tmp/\n\t\t\t// with -l is the range of dot to go back in path.\n\t\t\t// and path_traversal_archiver.py found at https://github.com/Alamot/code-snippets/blob/master/path_traversal/path_traversal_archiver.py\n\t\t\tfor ($i = 0; $i < $zip->numFiles; $i++) {\n\t\t\t\tif (preg_match('/\\.\\./', $zip->getNameIndex($i))) {\n\t\t\t\t\tdol_syslog(\"Warning: Try to unzip a file with a transversal path \".$zip->getNameIndex($i), LOG_WARNING);\n\t\t\t\t\tcontinue; // Discard the file\n\t\t\t\t}\n\t\t\t\t$zip->extractTo($outputdir.'/', array($zip->getNameIndex($i)));\n\t\t\t}\n\n\t\t\t$zip->close();\n\t\t\treturn array();\n\t\t} else {\n\t\t\treturn array('error'=>'ErrUnzipFails');\n\t\t}\n\t}\n\n\treturn array('error'=>'ErrNoZipEngine');\n}\n\n\n/**\n * Compress a directory and subdirectories into a package file.\n *\n * @param \tstring\t$inputdir\t\tSource dir name\n * @param \tstring\t$outputfile\t\tTarget file name (output directory must exists and be writable)\n * @param \tstring\t$mode\t\t\t'zip'\n * @param\tstring\t$excludefiles   A regex pattern. For example: '/\\.log$|\\/temp\\//'\n * @param\tstring\t$rootdirinzip\tAdd a root dir level in zip file\n * @return\tint\t\t\t\t\t\t<0 if KO, >0 if OK\n */\nfunction dol_compress_dir($inputdir, $outputfile, $mode = \"zip\", $excludefiles = '', $rootdirinzip = '')\n{\n\t$foundhandler = 0;\n\n\tdol_syslog(\"Try to zip dir \".$inputdir.\" into \".$outputfile.\" mode=\".$mode);\n\n\tif (!dol_is_dir(dirname($outputfile)) || !is_writable(dirname($outputfile))) {\n\t\tglobal $langs, $errormsg;\n\t\t$langs->load(\"errors\");\n\t\t$errormsg = $langs->trans(\"ErrorFailedToWriteInDir\", $outputfile);\n\t\treturn -3;\n\t}\n\n\ttry {\n\t\tif ($mode == 'gz') {\n\t\t\t$foundhandler = 0;\n\t\t} elseif ($mode == 'bz') {\n\t\t\t$foundhandler = 0;\n\t\t} elseif ($mode == 'zip') {\n\t\t\t/*if (defined('ODTPHP_PATHTOPCLZIP'))\n\t\t\t {\n\t\t\t $foundhandler=0;        // TODO implement this\n\n\t\t\t include_once ODTPHP_PATHTOPCLZIP.'/pclzip.lib.php';\n\t\t\t $archive = new PclZip($outputfile);\n\t\t\t $archive->add($inputfile, PCLZIP_OPT_REMOVE_PATH, dirname($inputfile));\n\t\t\t //$archive->add($inputfile);\n\t\t\t return 1;\n\t\t\t }\n\t\t\t else*/\n\t\t\t//if (class_exists('ZipArchive') && ! empty($conf->global->MAIN_USE_ZIPARCHIVE_FOR_ZIP_COMPRESS))\n\t\t\tif (class_exists('ZipArchive')) {\n\t\t\t\t$foundhandler = 1;\n\n\t\t\t\t// Initialize archive object\n\t\t\t\t$zip = new ZipArchive();\n\t\t\t\t$result = $zip->open($outputfile, ZipArchive::CREATE | ZipArchive::OVERWRITE);\n\t\t\t\tif (!$result) {\n\t\t\t\t\tglobal $langs, $errormsg;\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t$errormsg = $langs->trans(\"ErrorFailedToWriteInFile\", $outputfile);\n\t\t\t\t\treturn -4;\n\t\t\t\t}\n\n\t\t\t\t// Create recursive directory iterator\n\t\t\t\t// This does not return symbolic links\n\t\t\t\t/** @var SplFileInfo[] $files */\n\t\t\t\t$files = new RecursiveIteratorIterator(\n\t\t\t\t\tnew RecursiveDirectoryIterator($inputdir),\n\t\t\t\t\tRecursiveIteratorIterator::LEAVES_ONLY\n\t\t\t\t);\n\n\t\t\t\t//var_dump($inputdir);\n\t\t\t\tforeach ($files as $name => $file) {\n\t\t\t\t\t// Skip directories (they would be added automatically)\n\t\t\t\t\tif (!$file->isDir()) {\n\t\t\t\t\t\t// Get real and relative path for current file\n\t\t\t\t\t\t$filePath = $file->getPath();\t\t\t\t// the full path with filename using the $inputdir root.\n\t\t\t\t\t\t$fileName = $file->getFilename();\n\t\t\t\t\t\t$fileFullRealPath = $file->getRealPath();\t// the full path with name and transformed to use real path directory.\n\n\t\t\t\t\t\t//$relativePath = ($rootdirinzip ? $rootdirinzip.'/' : '').substr($fileFullRealPath, strlen($inputdir) + 1);\n\t\t\t\t\t\t$relativePath = ($rootdirinzip ? $rootdirinzip.'/' : '').substr(($filePath ? $filePath.'/' : '').$fileName, strlen($inputdir) + 1);\n\n\t\t\t\t\t\t//var_dump($filePath);var_dump($fileFullRealPath);var_dump($relativePath);\n\t\t\t\t\t\tif (empty($excludefiles) || !preg_match($excludefiles, $fileFullRealPath)) {\n\t\t\t\t\t\t\t// Add current file to archive\n\t\t\t\t\t\t\t$zip->addFile($fileFullRealPath, $relativePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Zip archive will be created only after closing object\n\t\t\t\t$zip->close();\n\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\n\t\tif (!$foundhandler) {\n\t\t\tdol_syslog(\"Try to zip with format \".$mode.\" with no handler for this format\", LOG_ERR);\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t} catch (Exception $e) {\n\t\tglobal $langs, $errormsg;\n\t\t$langs->load(\"errors\");\n\t\tdol_syslog(\"Failed to open file \".$outputfile, LOG_ERR);\n\t\tdol_syslog($e->getMessage(), LOG_ERR);\n\t\t$errormsg = $langs->trans(\"ErrorFailedToWriteInDir\", $outputfile);\n\t\treturn -1;\n\t}\n}\n\n\n\n/**\n * Return file(s) into a directory (by default most recent)\n *\n * @param \tstring\t\t$dir\t\t\tDirectory to scan\n * @param\tstring\t\t$regexfilter\tRegex filter to restrict list. This regex value must be escaped for '/', since this char is used for preg_match function\n * @param\tarray\t\t$excludefilter  Array of Regex for exclude filter (example: array('(\\.meta|_preview.*\\.png)$','^\\.')). This regex value must be escaped for '/', since this char is used for preg_match function\n * @param\tint\t\t\t$nohook\t\t\tDisable all hooks\n * @param\tint\t\t\t$mode\t\t\t0=Return array minimum keys loaded (faster), 1=Force all keys like date and size to be loaded (slower), 2=Force load of date only, 3=Force load of size only\n * @return\tstring\t\t\t\t\t\tFull path to most recent file\n */\nfunction dol_most_recent_file($dir, $regexfilter = '', $excludefilter = array('(\\.meta|_preview.*\\.png)$', '^\\.'), $nohook = false, $mode = '')\n{\n\t$tmparray = dol_dir_list($dir, 'files', 0, $regexfilter, $excludefilter, 'date', SORT_DESC, $mode, $nohook);\n\treturn $tmparray[0];\n}\n\n/**\n * Security check when accessing to a document (used by document.php, viewimage.php and webservices to get documents).\n * TODO Replace code that set $accessallowed by a call to restrictedArea()\n *\n * @param\tstring\t$modulepart\t\t\tModule of document ('module', 'module_user_temp', 'module_user' or 'module_temp'). Exemple: 'medias', 'invoice', 'logs', 'tax-vat', ...\n * @param\tstring\t$original_file\t\tRelative path with filename, relative to modulepart.\n * @param\tstring\t$entity\t\t\t\tRestrict onto entity (0=no restriction)\n * @param  \tUser\t$fuser\t\t\t\tUser object (forced)\n * @param\tstring\t$refname\t\t\tRef of object to check permission for external users (autodetect if not provided) or for hierarchy\n * @param   string  $mode               Check permission for 'read' or 'write'\n * @return\tmixed\t\t\t\t\t\tArray with access information : 'accessallowed' & 'sqlprotectagainstexternals' & 'original_file' (as a full path name)\n * @see restrictedArea()\n */\nfunction dol_check_secure_access_document($modulepart, $original_file, $entity, $fuser = '', $refname = '', $mode = 'read')\n{\n\tglobal $conf, $db, $user, $hookmanager;\n\tglobal $dolibarr_main_data_root, $dolibarr_main_document_root_alt;\n\tglobal $object;\n\n\tif (!is_object($fuser)) {\n\t\t$fuser = $user;\n\t}\n\n\tif (empty($modulepart)) {\n\t\treturn 'ErrorBadParameter';\n\t}\n\tif (empty($entity)) {\n\t\tif (empty($conf->multicompany->enabled)) {\n\t\t\t$entity = 1;\n\t\t} else {\n\t\t\t$entity = 0;\n\t\t}\n\t}\n\t// Fix modulepart for backward compatibility\n\tif ($modulepart == 'users') {\n\t\t$modulepart = 'user';\n\t}\n\tif ($modulepart == 'tva') {\n\t\t$modulepart = 'tax-vat';\n\t}\n\n\t//print 'dol_check_secure_access_document modulepart='.$modulepart.' original_file='.$original_file.' entity='.$entity;\n\tdol_syslog('dol_check_secure_access_document modulepart='.$modulepart.' original_file='.$original_file.' entity='.$entity);\n\n\t// We define $accessallowed and $sqlprotectagainstexternals\n\t$accessallowed = 0;\n\t$sqlprotectagainstexternals = '';\n\t$ret = array();\n\n\t// Find the subdirectory name as the reference. For example original_file='10/myfile.pdf' -> refname='10'\n\tif (empty($refname)) {\n\t\t$refname = basename(dirname($original_file).\"/\");\n\t\tif ($refname == 'thumbs') {\n\t\t\t// If we get the thumbns directory, we must go one step higher. For example original_file='10/thumbs/myfile_small.jpg' -> refname='10'\n\t\t\t$refname = basename(dirname(dirname($original_file)).\"/\");\n\t\t}\n\t}\n\n\t// Define possible keys to use for permission check\n\t$lire = 'lire';\n\t$read = 'read';\n\t$download = 'download';\n\tif ($mode == 'write') {\n\t\t$lire = 'creer';\n\t\t$read = 'write';\n\t\t$download = 'upload';\n\t}\n\n\t// Wrapping for miscellaneous medias files\n\tif ($modulepart == 'medias' && !empty($dolibarr_main_data_root)) {\n\t\tif (empty($entity) || empty($conf->medias->multidir_output[$entity])) {\n\t\t\treturn array('accessallowed'=>0, 'error'=>'Value entity must be provided');\n\t\t}\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->medias->multidir_output[$entity].'/'.$original_file;\n\t} elseif ($modulepart == 'logs' && !empty($dolibarr_main_data_root)) {\n\t\t// Wrapping for *.log files, like when used with url http://.../document.php?modulepart=logs&file=dolibarr.log\n\t\t$accessallowed = ($user->admin && basename($original_file) == $original_file && preg_match('/^dolibarr.*\\.log$/', basename($original_file)));\n\t\t$original_file = $dolibarr_main_data_root.'/'.$original_file;\n\t} elseif ($modulepart == 'doctemplates' && !empty($dolibarr_main_data_root)) {\n\t\t// Wrapping for *.log files, like when used with url http://.../document.php?modulepart=logs&file=dolibarr.log\n\t\t$accessallowed = $user->admin;\n\t\t$original_file = $dolibarr_main_data_root.'/doctemplates/'.$original_file;\n\t} elseif ($modulepart == 'doctemplateswebsite' && !empty($dolibarr_main_data_root)) {\n\t\t// Wrapping for *.zip files, like when used with url http://.../document.php?modulepart=packages&file=module_myfile.zip\n\t\t$accessallowed = ($fuser->rights->website->write && preg_match('/\\.jpg$/i', basename($original_file)));\n\t\t$original_file = $dolibarr_main_data_root.'/doctemplates/websites/'.$original_file;\n\t} elseif ($modulepart == 'packages' && !empty($dolibarr_main_data_root)) {\n\t\t// Wrapping for *.zip files, like when used with url http://.../document.php?modulepart=packages&file=module_myfile.zip\n\t\t// Dir for custom dirs\n\t\t$tmp = explode(',', $dolibarr_main_document_root_alt);\n\t\t$dirins = $tmp[0];\n\n\t\t$accessallowed = ($user->admin && preg_match('/^module_.*\\.zip$/', basename($original_file)));\n\t\t$original_file = $dirins.'/'.$original_file;\n\t} elseif ($modulepart == 'mycompany' && !empty($conf->mycompany->dir_output)) {\n\t\t// Wrapping for some images\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->mycompany->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'userphoto' && !empty($conf->user->dir_output)) {\n\t\t// Wrapping for users photos\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->user->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'memberphoto' && !empty($conf->adherent->dir_output)) {\n\t\t// Wrapping for members photos\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->adherent->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'apercufacture' && !empty($conf->facture->multidir_output[$entity])) {\n\t\t// Wrapping pour les apercu factures\n\t\tif ($fuser->rights->facture->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->facture->multidir_output[$entity].'/'.$original_file;\n\t} elseif ($modulepart == 'apercupropal' && !empty($conf->propal->multidir_output[$entity])) {\n\t\t// Wrapping pour les apercu propal\n\t\tif ($fuser->rights->propale->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->propal->multidir_output[$entity].'/'.$original_file;\n\t} elseif ($modulepart == 'apercucommande' && !empty($conf->commande->multidir_output[$entity])) {\n\t\t// Wrapping pour les apercu commande\n\t\tif ($fuser->rights->commande->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->commande->multidir_output[$entity].'/'.$original_file;\n\t} elseif (($modulepart == 'apercufichinter' || $modulepart == 'apercuficheinter') && !empty($conf->ficheinter->dir_output)) {\n\t\t// Wrapping pour les apercu intervention\n\t\tif ($fuser->rights->ficheinter->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->ficheinter->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'apercucontract') && !empty($conf->contrat->multidir_output[$entity])) {\n\t\t// Wrapping pour les apercu contrat\n\t\tif ($fuser->rights->contrat->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->contrat->multidir_output[$entity].'/'.$original_file;\n\t} elseif (($modulepart == 'apercusupplier_proposal' || $modulepart == 'apercusupplier_proposal') && !empty($conf->supplier_proposal->dir_output)) {\n\t\t// Wrapping pour les apercu supplier proposal\n\t\tif ($fuser->rights->supplier_proposal->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->supplier_proposal->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'apercusupplier_order' || $modulepart == 'apercusupplier_order') && !empty($conf->fournisseur->commande->dir_output)) {\n\t\t// Wrapping pour les apercu supplier order\n\t\tif ($fuser->rights->fournisseur->commande->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->commande->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'apercusupplier_invoice' || $modulepart == 'apercusupplier_invoice') && !empty($conf->fournisseur->facture->dir_output)) {\n\t\t// Wrapping pour les apercu supplier invoice\n\t\tif ($fuser->rights->fournisseur->facture->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->facture->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'holiday') && !empty($conf->holiday->dir_output)) {\n\t\tif ($fuser->rights->holiday->{$read} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t\t// If we known $id of holiday, call checkUserAccessToObject to check permission on properties and hierarchy of leave request\n\t\t\tif ($refname && !preg_match('/^specimen/i', $original_file)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/holiday/class/holiday.class.php';\n\t\t\t\t$tmpholiday = new Holiday($db);\n\t\t\t\t$tmpholiday->fetch('', $refname);\n\t\t\t\t$accessallowed = checkUserAccessToObject($user, array('holiday'), $tmpholiday, 'holiday', '', '', 'rowid', '');\n\t\t\t}\n\t\t}\n\t\t$original_file = $conf->holiday->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'expensereport') && !empty($conf->expensereport->dir_output)) {\n\t\tif ($fuser->rights->expensereport->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t\t// If we known $id of expensereport, call checkUserAccessToObject to check permission on properties and hierarchy of expense report\n\t\t\tif ($refname && !preg_match('/^specimen/i', $original_file)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/expensereport/class/expensereport.class.php';\n\t\t\t\t$tmpexpensereport = new ExpenseReport($db);\n\t\t\t\t$tmpexpensereport->fetch('', $refname);\n\t\t\t\t$accessallowed = checkUserAccessToObject($user, array('expensereport'), $tmpexpensereport, 'expensereport', '', '', 'rowid', '');\n\t\t\t}\n\t\t}\n\t\t$original_file = $conf->expensereport->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'apercuexpensereport') && !empty($conf->expensereport->dir_output)) {\n\t\t// Wrapping pour les apercu supplier invoice\n\t\tif ($fuser->rights->expensereport->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->expensereport->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'propalstats' && !empty($conf->propal->multidir_temp[$entity])) {\n\t\t// Wrapping pour les images des stats propales\n\t\tif ($fuser->rights->propale->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->propal->multidir_temp[$entity].'/'.$original_file;\n\t} elseif ($modulepart == 'orderstats' && !empty($conf->commande->dir_temp)) {\n\t\t// Wrapping pour les images des stats commandes\n\t\tif ($fuser->rights->commande->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->commande->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'orderstatssupplier' && !empty($conf->fournisseur->dir_output)) {\n\t\tif ($fuser->rights->fournisseur->commande->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->commande->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'billstats' && !empty($conf->facture->dir_temp)) {\n\t\t// Wrapping pour les images des stats factures\n\t\tif ($fuser->rights->facture->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->facture->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'billstatssupplier' && !empty($conf->fournisseur->dir_output)) {\n\t\tif ($fuser->rights->fournisseur->facture->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->facture->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'expeditionstats' && !empty($conf->expedition->dir_temp)) {\n\t\t// Wrapping pour les images des stats expeditions\n\t\tif ($fuser->rights->expedition->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->expedition->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'tripsexpensesstats' && !empty($conf->deplacement->dir_temp)) {\n\t\t// Wrapping pour les images des stats expeditions\n\t\tif ($fuser->rights->deplacement->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->deplacement->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'memberstats' && !empty($conf->adherent->dir_temp)) {\n\t\t// Wrapping pour les images des stats expeditions\n\t\tif ($fuser->rights->adherent->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->adherent->dir_temp.'/'.$original_file;\n\t} elseif (preg_match('/^productstats_/i', $modulepart) && !empty($conf->product->dir_temp)) {\n\t\t// Wrapping pour les images des stats produits\n\t\tif ($fuser->rights->produit->{$lire} || $fuser->rights->service->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = (!empty($conf->product->multidir_temp[$entity]) ? $conf->product->multidir_temp[$entity] : $conf->service->multidir_temp[$entity]).'/'.$original_file;\n\t} elseif (in_array($modulepart, array('tax', 'tax-vat', 'tva')) && !empty($conf->tax->dir_output)) {\n\t\t// Wrapping for taxes\n\t\tif ($fuser->rights->tax->charges->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$modulepartsuffix = str_replace('tax-', '', $modulepart);\n\t\t$original_file = $conf->tax->dir_output.'/'.($modulepartsuffix != 'tax' ? $modulepartsuffix.'/' : '').$original_file;\n\t} elseif ($modulepart == 'actions' && !empty($conf->agenda->dir_output)) {\n\t\t// Wrapping for events\n\t\tif ($fuser->rights->agenda->myactions->{$read}) {\n\t\t\t$accessallowed = 1;\n\t\t\t// If we known $id of project, call checkUserAccessToObject to check permission on the given agenda event on properties and assigned users\n\t\t\tif ($refname && !preg_match('/^specimen/i', $original_file)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/comm/action/class/actioncomm.class.php';\n\t\t\t\t$tmpobject = new ActionComm($db);\n\t\t\t\t$tmpobject->fetch((int) $refname);\n\t\t\t\t$accessallowed = checkUserAccessToObject($user, array('agenda'), $tmpobject->id, 'actioncomm&societe', 'myactions|allactions', 'fk_soc', 'id', '');\n\t\t\t\tif ($user->socid && $tmpobject->socid) {\n\t\t\t\t\t$accessallowed = checkUserAccessToObject($user, array('societe'), $tmpobject->socid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$original_file = $conf->agenda->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'category' && !empty($conf->categorie->multidir_output[$entity])) {\n\t\t// Wrapping for categories\n\t\tif (empty($entity) || empty($conf->categorie->multidir_output[$entity])) {\n\t\t\treturn array('accessallowed'=>0, 'error'=>'Value entity must be provided');\n\t\t}\n\t\tif ($fuser->rights->categorie->{$lire} || $fuser->rights->takepos->run) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->categorie->multidir_output[$entity].'/'.$original_file;\n\t} elseif ($modulepart == 'prelevement' && !empty($conf->prelevement->dir_output)) {\n\t\t// Wrapping pour les prelevements\n\t\tif ($fuser->rights->prelevement->bons->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->prelevement->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'graph_stock' && !empty($conf->stock->dir_temp)) {\n\t\t// Wrapping pour les graph energie\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->stock->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'graph_fourn' && !empty($conf->fournisseur->dir_temp)) {\n\t\t// Wrapping pour les graph fournisseurs\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->fournisseur->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'graph_product' && !empty($conf->product->dir_temp)) {\n\t\t// Wrapping pour les graph des produits\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->product->multidir_temp[$entity].'/'.$original_file;\n\t} elseif ($modulepart == 'barcode') {\n\t\t// Wrapping pour les code barre\n\t\t$accessallowed = 1;\n\t\t// If viewimage is called for barcode, we try to output an image on the fly, with no build of file on disk.\n\t\t//$original_file=$conf->barcode->dir_temp.'/'.$original_file;\n\t\t$original_file = '';\n\t} elseif ($modulepart == 'iconmailing' && !empty($conf->mailing->dir_temp)) {\n\t\t// Wrapping pour les icones de background des mailings\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->mailing->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'scanner_user_temp' && !empty($conf->scanner->dir_temp)) {\n\t\t// Wrapping pour le scanner\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->scanner->dir_temp.'/'.$fuser->id.'/'.$original_file;\n\t} elseif ($modulepart == 'fckeditor' && !empty($conf->fckeditor->dir_output)) {\n\t\t// Wrapping pour les images fckeditor\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->fckeditor->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'user' && !empty($conf->user->dir_output)) {\n\t\t// Wrapping for users\n\t\t$canreaduser = (!empty($fuser->admin) || $fuser->rights->user->user->{$lire});\n\t\tif ($fuser->id == (int) $refname) {\n\t\t\t$canreaduser = 1;\n\t\t} // A user can always read its own card\n\t\tif ($canreaduser || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->user->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'company' || $modulepart == 'societe' || $modulepart == 'thirdparty') && !empty($conf->societe->multidir_output[$entity])) {\n\t\t// Wrapping for third parties\n\t\tif (empty($entity) || empty($conf->societe->multidir_output[$entity])) {\n\t\t\treturn array('accessallowed'=>0, 'error'=>'Value entity must be provided');\n\t\t}\n\t\tif ($fuser->rights->societe->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->societe->multidir_output[$entity].'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT rowid as fk_soc FROM \".MAIN_DB_PREFIX.\"societe WHERE rowid='\".$db->escape($refname).\"' AND entity IN (\".getEntity('societe').\")\";\n\t} elseif ($modulepart == 'contact' && !empty($conf->societe->multidir_output[$entity])) {\n\t\t// Wrapping for contact\n\t\tif (empty($entity) || empty($conf->societe->multidir_output[$entity])) {\n\t\t\treturn array('accessallowed'=>0, 'error'=>'Value entity must be provided');\n\t\t}\n\t\tif ($fuser->rights->societe->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->societe->multidir_output[$entity].'/contact/'.$original_file;\n\t} elseif (($modulepart == 'facture' || $modulepart == 'invoice') && !empty($conf->facture->multidir_output[$entity])) {\n\t\t// Wrapping for invoices\n\t\tif ($fuser->rights->facture->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->facture->multidir_output[$entity].'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"facture WHERE ref='\".$db->escape($refname).\"' AND entity IN (\".getEntity('invoice').\")\";\n\t} elseif ($modulepart == 'massfilesarea_proposals' && !empty($conf->propal->multidir_output[$entity])) {\n\t\t// Wrapping for mass actions\n\t\tif ($fuser->rights->propal->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->propal->multidir_output[$entity].'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_orders') {\n\t\tif ($fuser->rights->commande->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->commande->multidir_output[$entity].'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_sendings') {\n\t\tif ($fuser->rights->expedition->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->expedition->dir_output.'/sending/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_invoices') {\n\t\tif ($fuser->rights->facture->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->facture->multidir_output[$entity].'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_expensereport') {\n\t\tif ($fuser->rights->facture->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->expensereport->dir_output.'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_interventions') {\n\t\tif ($fuser->rights->ficheinter->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->ficheinter->dir_output.'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_supplier_proposal' && !empty($conf->supplier_proposal->dir_output)) {\n\t\tif ($fuser->rights->supplier_proposal->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->supplier_proposal->dir_output.'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_supplier_order') {\n\t\tif ($fuser->rights->fournisseur->commande->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->commande->dir_output.'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_supplier_invoice') {\n\t\tif ($fuser->rights->fournisseur->facture->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->facture->dir_output.'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_contract' && !empty($conf->contrat->dir_output)) {\n\t\tif ($fuser->rights->contrat->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->contrat->dir_output.'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif (($modulepart == 'fichinter' || $modulepart == 'ficheinter') && !empty($conf->ficheinter->dir_output)) {\n\t\t// Wrapping for interventions\n\t\tif ($fuser->rights->ficheinter->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->ficheinter->dir_output.'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"fichinter WHERE ref='\".$db->escape($refname).\"' AND entity=\".$conf->entity;\n\t} elseif ($modulepart == 'deplacement' && !empty($conf->deplacement->dir_output)) {\n\t\t// Wrapping pour les deplacements et notes de frais\n\t\tif ($fuser->rights->deplacement->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->deplacement->dir_output.'/'.$original_file;\n\t\t//$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"fichinter WHERE ref='\".$db->escape($refname).\"' AND entity=\".$conf->entity;\n\t} elseif (($modulepart == 'propal' || $modulepart == 'propale') && !empty($conf->propal->multidir_output[$entity])) {\n\t\t// Wrapping pour les propales\n\t\tif ($fuser->rights->propale->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->propal->multidir_output[$entity].'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"propal WHERE ref='\".$db->escape($refname).\"' AND entity IN (\".getEntity('propal').\")\";\n\t} elseif (($modulepart == 'commande' || $modulepart == 'order') && !empty($conf->commande->multidir_output[$entity])) {\n\t\t// Wrapping pour les commandes\n\t\tif ($fuser->rights->commande->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->commande->multidir_output[$entity].'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"commande WHERE ref='\".$db->escape($refname).\"' AND entity IN (\".getEntity('order').\")\";\n\t} elseif ($modulepart == 'project' && !empty($conf->projet->dir_output)) {\n\t\t// Wrapping pour les projets\n\t\tif ($fuser->rights->projet->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t\t// If we known $id of project, call checkUserAccessToObject to check permission on properties and contact of project\n\t\t\tif ($refname && !preg_match('/^specimen/i', $original_file)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n\t\t\t\t$tmpproject = new Project($db);\n\t\t\t\t$tmpproject->fetch('', $refname);\n\t\t\t\t$accessallowed = checkUserAccessToObject($user, array('projet'), $tmpproject->id, 'projet&project', '', '', 'rowid', '');\n\t\t\t}\n\t\t}\n\t\t$original_file = $conf->projet->dir_output.'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"projet WHERE ref='\".$db->escape($refname).\"' AND entity IN (\".getEntity('project').\")\";\n\t} elseif ($modulepart == 'project_task' && !empty($conf->projet->dir_output)) {\n\t\tif ($fuser->rights->projet->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t\t// If we known $id of project, call checkUserAccessToObject to check permission on properties and contact of project\n\t\t\tif ($refname && !preg_match('/^specimen/i', $original_file)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/projet/class/task.class.php';\n\t\t\t\t$tmptask = new Task($db);\n\t\t\t\t$tmptask->fetch('', $refname);\n\t\t\t\t$accessallowed = checkUserAccessToObject($user, array('projet_task'), $tmptask->id, 'projet_task&project', '', '', 'rowid', '');\n\t\t\t}\n\t\t}\n\t\t$original_file = $conf->projet->dir_output.'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"projet WHERE ref='\".$db->escape($refname).\"' AND entity IN (\".getEntity('project').\")\";\n\t} elseif (($modulepart == 'commande_fournisseur' || $modulepart == 'order_supplier') && !empty($conf->fournisseur->commande->dir_output)) {\n\t\t// Wrapping pour les commandes fournisseurs\n\t\tif ($fuser->rights->fournisseur->commande->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->commande->dir_output.'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"commande_fournisseur WHERE ref='\".$db->escape($refname).\"' AND entity=\".$conf->entity;\n\t} elseif (($modulepart == 'facture_fournisseur' || $modulepart == 'invoice_supplier') && !empty($conf->fournisseur->facture->dir_output)) {\n\t\t// Wrapping pour les factures fournisseurs\n\t\tif ($fuser->rights->fournisseur->facture->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->facture->dir_output.'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"facture_fourn WHERE ref='\".$db->escape($refname).\"' AND entity=\".$conf->entity;\n\t} elseif ($modulepart == 'supplier_payment') {\n\t\t// Wrapping pour les rapport de paiements\n\t\tif ($fuser->rights->fournisseur->facture->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->payment->dir_output.'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"paiementfournisseur WHERE ref='\".$db->escape($refname).\"' AND entity=\".$conf->entity;\n\t} elseif ($modulepart == 'facture_paiement' && !empty($conf->facture->dir_output)) {\n\t\t// Wrapping pour les rapport de paiements\n\t\tif ($fuser->rights->facture->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\tif ($fuser->societe_id > 0) {\n\t\t\t$original_file = $conf->facture->dir_output.'/payments/private/'.$fuser->id.'/'.$original_file;\n\t\t} else {\n\t\t\t$original_file = $conf->facture->dir_output.'/payments/'.$original_file;\n\t\t}\n\t} elseif ($modulepart == 'export_compta' && !empty($conf->accounting->dir_output)) {\n\t\t// Wrapping for accounting exports\n\t\tif ($fuser->rights->accounting->bind->write || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->accounting->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'expedition' || $modulepart == 'shipment') && !empty($conf->expedition->dir_output)) {\n\t\t// Wrapping pour les expedition\n\t\tif ($fuser->rights->expedition->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->expedition->dir_output.\"/\".(strpos('sending/', $original_file) === 0 ? '' : 'sending/').$original_file;\n\t\t//$original_file = $conf->expedition->dir_output.\"/\".$original_file;\n\t} elseif (($modulepart == 'livraison' || $modulepart == 'delivery') && !empty($conf->expedition->dir_output)) {\n\t\t// Delivery Note Wrapping\n\t\tif ($fuser->rights->expedition->delivery->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->expedition->dir_output.\"/\".(strpos('receipt/', $original_file) === 0 ? '' : 'receipt/').$original_file;\n\t} elseif ($modulepart == 'actions' && !empty($conf->agenda->dir_output)) {\n\t\t// Wrapping pour les actions\n\t\tif ($fuser->rights->agenda->myactions->{$read} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->agenda->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'actionsreport' && !empty($conf->agenda->dir_temp)) {\n\t\t// Wrapping pour les actions\n\t\tif ($fuser->rights->agenda->allactions->{$read} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->agenda->dir_temp.\"/\".$original_file;\n\t} elseif ($modulepart == 'product' || $modulepart == 'produit' || $modulepart == 'service' || $modulepart == 'produit|service') {\n\t\t// Wrapping pour les produits et services\n\t\tif (empty($entity) || (empty($conf->product->multidir_output[$entity]) && empty($conf->service->multidir_output[$entity]))) {\n\t\t\treturn array('accessallowed'=>0, 'error'=>'Value entity must be provided');\n\t\t}\n\t\tif (($fuser->rights->produit->{$lire} || $fuser->rights->service->{$lire}) || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\tif (!empty($conf->product->enabled)) {\n\t\t\t$original_file = $conf->product->multidir_output[$entity].'/'.$original_file;\n\t\t} elseif (!empty($conf->service->enabled)) {\n\t\t\t$original_file = $conf->service->multidir_output[$entity].'/'.$original_file;\n\t\t}\n\t} elseif ($modulepart == 'product_batch' || $modulepart == 'produitlot') {\n\t\t// Wrapping pour les lots produits\n\t\tif (empty($entity) || (empty($conf->productbatch->multidir_output[$entity]))) {\n\t\t\treturn array('accessallowed'=>0, 'error'=>'Value entity must be provided');\n\t\t}\n\t\tif (($fuser->rights->produit->{$lire} ) || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\tif (!empty($conf->productbatch->enabled)) {\n\t\t\t$original_file = $conf->productbatch->multidir_output[$entity].'/'.$original_file;\n\t\t}\n\t} elseif ($modulepart == 'movement' || $modulepart == 'mouvement') {\n\t\t// Wrapping for stock movements\n\t\tif (empty($entity) || empty($conf->stock->multidir_output[$entity])) {\n\t\t\treturn array('accessallowed'=>0, 'error'=>'Value entity must be provided');\n\t\t}\n\t\tif (($fuser->rights->stock->{$lire} || $fuser->rights->stock->movement->{$lire} || $fuser->rights->stock->mouvement->{$lire}) || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\tif (!empty($conf->stock->enabled)) {\n\t\t\t$original_file = $conf->stock->multidir_output[$entity].'/movement/'.$original_file;\n\t\t}\n\t} elseif ($modulepart == 'contract' && !empty($conf->contrat->multidir_output[$entity])) {\n\t\t// Wrapping pour les contrats\n\t\tif ($fuser->rights->contrat->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->contrat->multidir_output[$entity].'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"contrat WHERE ref='\".$db->escape($refname).\"' AND entity IN (\".getEntity('contract').\")\";\n\t} elseif ($modulepart == 'donation' && !empty($conf->don->dir_output)) {\n\t\t// Wrapping pour les dons\n\t\tif ($fuser->rights->don->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->don->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'dolresource' && !empty($conf->resource->dir_output)) {\n\t\t// Wrapping pour les dons\n\t\tif ($fuser->rights->resource->{$read} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->resource->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'remisecheque' && !empty($conf->bank->dir_output)) {\n\t\t// Wrapping pour les remises de cheques\n\t\tif ($fuser->rights->banque->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\n\t\t$original_file = $conf->bank->dir_output.'/checkdeposits/'.$original_file; // original_file should contains relative path so include the get_exdir result\n\t} elseif (($modulepart == 'banque' || $modulepart == 'bank') && !empty($conf->bank->dir_output)) {\n\t\t// Wrapping for bank\n\t\tif ($fuser->rights->banque->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->bank->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'export' && !empty($conf->export->dir_temp)) {\n\t\t// Wrapping for export module\n\t\t// Note that a test may not be required because we force the dir of download on the directory of the user that export\n\t\t$accessallowed = $user->rights->export->lire;\n\t\t$original_file = $conf->export->dir_temp.'/'.$fuser->id.'/'.$original_file;\n\t} elseif ($modulepart == 'import' && !empty($conf->import->dir_temp)) {\n\t\t// Wrapping for import module\n\t\t$accessallowed = $user->rights->import->run;\n\t\t$original_file = $conf->import->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'editor' && !empty($conf->fckeditor->dir_output)) {\n\t\t// Wrapping for wysiwyg editor\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->fckeditor->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'systemtools' && !empty($conf->admin->dir_output)) {\n\t\t// Wrapping for backups\n\t\tif ($fuser->admin) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->admin->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'admin_temp' && !empty($conf->admin->dir_temp)) {\n\t\t// Wrapping for upload file test\n\t\tif ($fuser->admin) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->admin->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'bittorrent' && !empty($conf->bittorrent->dir_output)) {\n\t\t// Wrapping pour BitTorrent\n\t\t$accessallowed = 1;\n\t\t$dir = 'files';\n\t\tif (dol_mimetype($original_file) == 'application/x-bittorrent') {\n\t\t\t$dir = 'torrents';\n\t\t}\n\t\t$original_file = $conf->bittorrent->dir_output.'/'.$dir.'/'.$original_file;\n\t} elseif ($modulepart == 'member' && !empty($conf->adherent->dir_output)) {\n\t\t// Wrapping pour Foundation module\n\t\tif ($fuser->rights->adherent->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->adherent->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'scanner_user_temp' && !empty($conf->scanner->dir_temp)) {\n\t\t// Wrapping for Scanner\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->scanner->dir_temp.'/'.$fuser->id.'/'.$original_file;\n\t\t// If modulepart=module_user_temp\tAllows any module to open a file if file is in directory called DOL_DATA_ROOT/modulepart/temp/iduser\n\t\t// If modulepart=module_temp\t\tAllows any module to open a file if file is in directory called DOL_DATA_ROOT/modulepart/temp\n\t\t// If modulepart=module_user\t\tAllows any module to open a file if file is in directory called DOL_DATA_ROOT/modulepart/iduser\n\t\t// If modulepart=module\t\t\t\tAllows any module to open a file if file is in directory called DOL_DATA_ROOT/modulepart\n\t\t// If modulepart=module-abc\t\t\tAllows any module to open a file if file is in directory called DOL_DATA_ROOT/modulepart\n\t} else {\n\t\t// GENERIC Wrapping\n\t\t//var_dump($modulepart);\n\t\t//var_dump($original_file);\n\t\tif (preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1; // If link to a file called specimen. Test must be done before changing $original_file int full path.\n\t\t}\n\t\tif ($fuser->admin) {\n\t\t\t$accessallowed = 1; // If user is admin\n\t\t}\n\n\t\t$tmpmodulepart = explode('-', $modulepart);\n\t\tif (!empty($tmpmodulepart[1])) {\n\t\t\t\t$modulepart = $tmpmodulepart[0];\n\t\t\t\t$original_file = $tmpmodulepart[1].'/'.$original_file;\n\t\t}\n\n\t\t// Define $accessallowed\n\t\t$reg = array();\n\t\tif (preg_match('/^([a-z]+)_user_temp$/i', $modulepart, $reg)) {\n\t\t\tif (empty($conf->{$reg[1]}->dir_temp)) {\t// modulepart not supported\n\t\t\t\tdol_print_error('', 'Error call dol_check_secure_access_document with not supported value for modulepart parameter ('.$modulepart.')');\n\t\t\t\texit;\n\t\t\t}\n\t\t\tif ($fuser->rights->{$reg[1]}->{$lire} || $fuser->rights->{$reg[1]}->{$read} || ($fuser->rights->{$reg[1]}->{$download})) {\n\t\t\t\t$accessallowed = 1;\n\t\t\t}\n\t\t\t$original_file = $conf->{$reg[1]}->dir_temp.'/'.$fuser->id.'/'.$original_file;\n\t\t} elseif (preg_match('/^([a-z]+)_temp$/i', $modulepart, $reg)) {\n\t\t\tif (empty($conf->{$reg[1]}->dir_temp)) {\t// modulepart not supported\n\t\t\t\tdol_print_error('', 'Error call dol_check_secure_access_document with not supported value for modulepart parameter ('.$modulepart.')');\n\t\t\t\texit;\n\t\t\t}\n\t\t\tif ($fuser->rights->{$reg[1]}->{$lire} || $fuser->rights->{$reg[1]}->{$read} || ($fuser->rights->{$reg[1]}->{$download})) {\n\t\t\t\t$accessallowed = 1;\n\t\t\t}\n\t\t\t$original_file = $conf->{$reg[1]}->dir_temp.'/'.$original_file;\n\t\t} elseif (preg_match('/^([a-z]+)_user$/i', $modulepart, $reg)) {\n\t\t\tif (empty($conf->{$reg[1]}->dir_output)) {\t// modulepart not supported\n\t\t\t\tdol_print_error('', 'Error call dol_check_secure_access_document with not supported value for modulepart parameter ('.$modulepart.')');\n\t\t\t\texit;\n\t\t\t}\n\t\t\tif ($fuser->rights->{$reg[1]}->{$lire} || $fuser->rights->{$reg[1]}->{$read} || ($fuser->rights->{$reg[1]}->{$download})) {\n\t\t\t\t$accessallowed = 1;\n\t\t\t}\n\t\t\t$original_file = $conf->{$reg[1]}->dir_output.'/'.$fuser->id.'/'.$original_file;\n\t\t} elseif (preg_match('/^massfilesarea_([a-z]+)$/i', $modulepart, $reg)) {\n\t\t\tif (empty($conf->{$reg[1]}->dir_output)) {\t// modulepart not supported\n\t\t\t\tdol_print_error('', 'Error call dol_check_secure_access_document with not supported value for modulepart parameter ('.$modulepart.')');\n\t\t\t\texit;\n\t\t\t}\n\t\t\tif ($fuser->rights->{$reg[1]}->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t\t$accessallowed = 1;\n\t\t\t}\n\t\t\t$original_file = $conf->{$reg[1]}->dir_output.'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t\t} else {\n\t\t\tif (empty($conf->$modulepart->dir_output)) {\t// modulepart not supported\n\t\t\t\tdol_print_error('', 'Error call dol_check_secure_access_document with not supported value for modulepart parameter ('.$modulepart.'). The module for this modulepart value may not be activated.');\n\t\t\t\texit;\n\t\t\t}\n\n\t\t\t// Check fuser->rights->modulepart->myobject->read and fuser->rights->modulepart->read\n\t\t\t$partsofdirinoriginalfile = explode('/', $original_file);\n\t\t\tif (!empty($partsofdirinoriginalfile[1])) {\t// If original_file is xxx/filename (xxx is a part we will use)\n\t\t\t\t$partofdirinoriginalfile = $partsofdirinoriginalfile[0];\n\t\t\t\tif ($partofdirinoriginalfile && !empty($fuser->rights->$modulepart->$partofdirinoriginalfile) && ($fuser->rights->$modulepart->$partofdirinoriginalfile->{$lire} || $fuser->rights->$modulepart->$partofdirinoriginalfile->{$read})) {\n\t\t\t\t\t$accessallowed = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!empty($fuser->rights->$modulepart->{$lire}) || !empty($fuser->rights->$modulepart->{$read})) {\n\t\t\t\t$accessallowed = 1;\n\t\t\t}\n\n\t\t\tif (is_array($conf->$modulepart->multidir_output) && !empty($conf->$modulepart->multidir_output[$entity])) {\n\t\t\t\t$original_file = $conf->$modulepart->multidir_output[$entity].'/'.$original_file;\n\t\t\t} else {\n\t\t\t\t$original_file = $conf->$modulepart->dir_output.'/'.$original_file;\n\t\t\t}\n\t\t}\n\n\t\t$parameters = array(\n\t\t\t'modulepart' => $modulepart,\n\t\t\t'original_file' => $original_file,\n\t\t\t'entity' => $entity,\n\t\t\t'fuser' => $fuser,\n\t\t\t'refname' => '',\n\t\t\t'mode' => $mode\n\t\t);\n\t\t$reshook = $hookmanager->executeHooks('checkSecureAccess', $parameters, $object);\n\t\tif ($reshook > 0) {\n\t\t\tif (!empty($hookmanager->resArray['original_file'])) {\n\t\t\t\t$original_file = $hookmanager->resArray['original_file'];\n\t\t\t}\n\t\t\tif (!empty($hookmanager->resArray['accessallowed'])) {\n\t\t\t\t$accessallowed = $hookmanager->resArray['accessallowed'];\n\t\t\t}\n\t\t\tif (!empty($hookmanager->resArray['sqlprotectagainstexternals'])) {\n\t\t\t\t$sqlprotectagainstexternals = $hookmanager->resArray['sqlprotectagainstexternals'];\n\t\t\t}\n\t\t}\n\t}\n\n\t$ret = array(\n\t\t'accessallowed' => ($accessallowed ? 1 : 0),\n\t\t'sqlprotectagainstexternals' => $sqlprotectagainstexternals,\n\t\t'original_file' => $original_file\n\t);\n\n\treturn $ret;\n}\n\n/**\n * Store object in file.\n *\n * @param string $directory Directory of cache\n * @param string $filename Name of filecache\n * @param mixed $object Object to store in cachefile\n * @return void\n */\nfunction dol_filecache($directory, $filename, $object)\n{\n\tif (!dol_is_dir($directory)) {\n\t\tdol_mkdir($directory);\n\t}\n\t$cachefile = $directory.$filename;\n\tfile_put_contents($cachefile, serialize($object), LOCK_EX);\n\t@chmod($cachefile, 0644);\n}\n\n/**\n * Test if Refresh needed.\n *\n * @param string $directory Directory of cache\n * @param string $filename Name of filecache\n * @param int $cachetime Cachetime delay\n * @return boolean 0 no refresh 1 if refresh needed\n */\nfunction dol_cache_refresh($directory, $filename, $cachetime)\n{\n\t$now = dol_now();\n\t$cachefile = $directory.$filename;\n\t$refresh = !file_exists($cachefile) || ($now - $cachetime) > dol_filemtime($cachefile);\n\treturn $refresh;\n}\n\n/**\n * Read object from cachefile.\n *\n * @param string $directory Directory of cache\n * @param string $filename Name of filecache\n * @return mixed Unserialise from file\n */\nfunction dol_readcachefile($directory, $filename)\n{\n\t$cachefile = $directory.$filename;\n\t$object = unserialize(file_get_contents($cachefile));\n\treturn $object;\n}\n\n\n/**\n * Function to get list of updated or modified files.\n * $file_list is used as global variable\n *\n * @param\tarray\t\t\t\t$file_list\t        Array for response\n * @param   SimpleXMLElement\t$dir    \t        SimpleXMLElement of files to test\n * @param   string   \t\t\t$path   \t        Path of files relative to $pathref. We start with ''. Used by recursive calls.\n * @param   string              $pathref            Path ref (DOL_DOCUMENT_ROOT)\n * @param   array               $checksumconcat     Array of checksum\n * @return  array               \t\t\t        Array of filenames\n */\nfunction getFilesUpdated(&$file_list, SimpleXMLElement $dir, $path = '', $pathref = '', &$checksumconcat = array())\n{\n\tglobal $conffile;\n\n\t$exclude = 'install';\n\n\tforeach ($dir->md5file as $file) {    // $file is a simpleXMLElement\n\t\t$filename = $path.$file['name'];\n\t\t$file_list['insignature'][] = $filename;\n\t\t$expectedsize = (empty($file['size']) ? '' : $file['size']);\n\t\t$expectedmd5 = (string) $file;\n\n\t\t//if (preg_match('#'.$exclude.'#', $filename)) continue;\n\n\t\tif (!file_exists($pathref.'/'.$filename)) {\n\t\t\t$file_list['missing'][] = array('filename'=>$filename, 'expectedmd5'=>$expectedmd5, 'expectedsize'=>$expectedsize);\n\t\t} else {\n\t\t\t$md5_local = md5_file($pathref.'/'.$filename);\n\n\t\t\tif ($conffile == '/etc/dolibarr/conf.php' && $filename == '/filefunc.inc.php') {\t// For install with deb or rpm, we ignore test on filefunc.inc.php that was modified by package\n\t\t\t\t$checksumconcat[] = $expectedmd5;\n\t\t\t} else {\n\t\t\t\tif ($md5_local != $expectedmd5) {\n\t\t\t\t\t$file_list['updated'][] = array('filename'=>$filename, 'expectedmd5'=>$expectedmd5, 'expectedsize'=>$expectedsize, 'md5'=>(string) $md5_local);\n\t\t\t\t}\n\t\t\t\t$checksumconcat[] = $md5_local;\n\t\t\t}\n\t\t}\n\t}\n\n\tforeach ($dir->dir as $subdir) {\t\t\t// $subdir['name'] is  '' or '/accountancy/admin' for example\n\t\tgetFilesUpdated($file_list, $subdir, $path.$subdir['name'].'/', $pathref, $checksumconcat);\n\t}\n\n\treturn $file_list;\n}\n", "<?php\n/* Copyright (C) 2005       Marc Barilley / Ocebo   <marc@ocebo.com>\n * Copyright (C) 2005-2018  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2005-2011  Regis Houssin           <regis.houssin@inodbox.com>\n * Copyright (C) 2010       Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2015-2016  Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n *\n * Upgrade2 scripts can be ran from command line with syntax:\n *\n * cd htdocs/install\n * php upgrade.php 3.4.0 3.5.0 [dirmodule|ignoredbversion]\n * php upgrade2.php 3.4.0 3.5.0 [MAIN_MODULE_NAME1_TO_ENABLE,MAIN_MODULE_NAME2_TO_ENABLE]\n *\n * And for final step:\n * php step5.php 3.4.0 3.5.0\n *\n * Return code is 0 if OK, >0 if error\n *\n * Note: To just enable a module from command line, use this syntax:\n * php upgrade2.php 0.0.0 0.0.0 [MAIN_MODULE_NAME1_TO_ENABLE,MAIN_MODULE_NAME2_TO_ENABLE]\n */\n\n/**\n *\t\\file       htdocs/install/upgrade2.php\n *\t\\brief      Upgrade some data\n */\n\ninclude_once 'inc.php';\nif (!file_exists($conffile)) {\n\tprint 'Error: Dolibarr config file was not found. This may means that Dolibarr is not installed yet. Please call the page \"/install/index.php\" instead of \"/install/upgrade.php\").';\n}\nrequire_once $conffile;\nrequire_once $dolibarr_main_document_root.'/compta/facture/class/facture.class.php';\nrequire_once $dolibarr_main_document_root.'/comm/propal/class/propal.class.php';\nrequire_once $dolibarr_main_document_root.'/contrat/class/contrat.class.php';\nrequire_once $dolibarr_main_document_root.'/commande/class/commande.class.php';\nrequire_once $dolibarr_main_document_root.'/fourn/class/fournisseur.commande.class.php';\nrequire_once $dolibarr_main_document_root.'/core/lib/price.lib.php';\nrequire_once $dolibarr_main_document_root.'/core/class/menubase.class.php';\nrequire_once $dolibarr_main_document_root.'/core/lib/files.lib.php';\n\nglobal $langs;\n\n$grant_query = '';\n$step = 2;\n$error = 0;\n\n\n// Cette page peut etre longue. On augmente le delai autorise.\n// Ne fonctionne que si on est pas en safe_mode.\n$err = error_reporting();\nerror_reporting(0);\nif (!empty($conf->global->MAIN_OVERRIDE_TIME_LIMIT)) {\n\t@set_time_limit((int) $conf->global->MAIN_OVERRIDE_TIME_LIMIT);\n} else {\n\t@set_time_limit(600);\n}\nerror_reporting($err);\n\n$setuplang = GETPOST(\"selectlang\", 'aZ09', 3) ?GETPOST(\"selectlang\", 'aZ09', 3) : 'auto';\n$langs->setDefaultLang($setuplang);\n$versionfrom = GETPOST(\"versionfrom\", 'alpha', 3) ?GETPOST(\"versionfrom\", 'alpha', 3) : (empty($argv[1]) ? '' : $argv[1]);\n$versionto = GETPOST(\"versionto\", 'alpha', 3) ?GETPOST(\"versionto\", 'alpha', 3) : (empty($argv[2]) ? '' : $argv[2]);\n$enablemodules = GETPOST(\"enablemodules\", 'alpha', 3) ?GETPOST(\"enablemodules\", 'alpha', 3) : (empty($argv[3]) ? '' : $argv[3]);\n\n$langs->loadLangs(array(\"admin\", \"install\", \"bills\", \"suppliers\"));\n\nif ($dolibarr_main_db_type == 'mysqli') {\n\t$choix = 1;\n}\nif ($dolibarr_main_db_type == 'pgsql') {\n\t$choix = 2;\n}\nif ($dolibarr_main_db_type == 'mssql') {\n\t$choix = 3;\n}\n\n\ndolibarr_install_syslog(\"--- upgrade2: entering upgrade2.php page \".$versionfrom.\" \".$versionto.\" \".$enablemodules);\nif (!is_object($conf)) {\n\tdolibarr_install_syslog(\"upgrade2: conf file not initialized\", LOG_ERR);\n}\n\n\n\n/*\n * View\n */\n\nif ((!$versionfrom || preg_match('/version/', $versionfrom)) && (!$versionto || preg_match('/version/', $versionto))) {\n\tprint 'Error: Parameter versionfrom or versionto missing or having a bad format.'.\"\\n\";\n\tprint 'Upgrade must be ran from command line with parameters or called from page install/index.php (like a first install)'.\"\\n\";\n\t// Test if batch mode\n\t$sapi_type = php_sapi_name();\n\t$script_file = basename(__FILE__);\n\t$path = __DIR__.'/';\n\tif (substr($sapi_type, 0, 3) == 'cli') {\n\t\tprint 'Syntax from command line: '.$script_file.\" x.y.z a.b.c [MAIN_MODULE_NAME1_TO_ENABLE,MAIN_MODULE_NAME2_TO_ENABLE...]\\n\";\n\t}\n\texit;\n}\n\npHeader('', 'step5', GETPOST('action', 'aZ09') ?GETPOST('action', 'aZ09') : 'upgrade', 'versionfrom='.$versionfrom.'&versionto='.$versionto, '', 'main-inside main-inside-borderbottom');\n\n\nif (!GETPOST('action', 'aZ09') || preg_match('/upgrade/i', GETPOST('action', 'aZ09'))) {\n\tprint '<h3><img class=\"valignmiddle inline-block paddingright\" src=\"../theme/common/octicons/build/svg/database.svg\" width=\"20\" alt=\"Database\"> ';\n\tprint '<span class=\"inline-block\">'.$langs->trans('DataMigration').'</span></h3>';\n\n\tprint '<table border=\"0\" width=\"100%\">';\n\n\t// If password is encoded, we decode it\n\tif (preg_match('/crypted:/i', $dolibarr_main_db_pass) || !empty($dolibarr_main_db_encrypted_pass)) {\n\t\trequire_once $dolibarr_main_document_root.'/core/lib/security.lib.php';\n\t\tif (preg_match('/crypted:/i', $dolibarr_main_db_pass)) {\n\t\t\t$dolibarr_main_db_pass = preg_replace('/crypted:/i', '', $dolibarr_main_db_pass);\n\t\t\t$dolibarr_main_db_pass = dol_decode($dolibarr_main_db_pass);\n\t\t\t$dolibarr_main_db_encrypted_pass = $dolibarr_main_db_pass; // We need to set this as it is used to know the password was initially crypted\n\t\t} else {\n\t\t\t$dolibarr_main_db_pass = dol_decode($dolibarr_main_db_encrypted_pass);\n\t\t}\n\t}\n\n\t// $conf is already instancied inside inc.php\n\t$conf->db->type = $dolibarr_main_db_type;\n\t$conf->db->host = $dolibarr_main_db_host;\n\t$conf->db->port = $dolibarr_main_db_port;\n\t$conf->db->name = $dolibarr_main_db_name;\n\t$conf->db->user = $dolibarr_main_db_user;\n\t$conf->db->pass = $dolibarr_main_db_pass;\n\n\t$db = getDoliDBInstance($conf->db->type, $conf->db->host, $conf->db->user, $conf->db->pass, $conf->db->name, $conf->db->port);\n\n\tif (!$db->connected) {\n\t\tprint '<tr><td colspan=\"4\">'.$langs->trans(\"ErrorFailedToConnectToDatabase\", $conf->db->name).'</td><td class=\"right\">'.$langs->trans('Error').'</td></tr>';\n\t\tdolibarr_install_syslog('upgrade2: failed to connect to database :'.$conf->db->name.' on '.$conf->db->host.' for user '.$conf->db->user, LOG_ERR);\n\t\t$error++;\n\t}\n\n\tif (!$error) {\n\t\tif ($db->database_selected) {\n\t\t\tdolibarr_install_syslog('upgrade2: database connection successful :'.$dolibarr_main_db_name);\n\t\t} else {\n\t\t\t$error++;\n\t\t}\n\t}\n\n\tif (empty($dolibarr_main_db_encryption)) {\n\t\t$dolibarr_main_db_encryption = 0;\n\t}\n\t$conf->db->dolibarr_main_db_encryption = $dolibarr_main_db_encryption;\n\tif (empty($dolibarr_main_db_cryptkey)) {\n\t\t$dolibarr_main_db_cryptkey = '';\n\t}\n\t$conf->db->dolibarr_main_db_cryptkey = $dolibarr_main_db_cryptkey;\n\n\t// Chargement config\n\tif (!$error) {\n\t\t$conf->setValues($db);\n\t\t// Reset forced setup after the setValues\n\t\tif (defined('SYSLOG_FILE')) {\n\t\t\t$conf->global->SYSLOG_FILE = constant('SYSLOG_FILE');\n\t\t}\n\t\t$conf->global->MAIN_ENABLE_LOG_TO_HTML = 1;\n\t}\n\n\t// Create the global $hookmanager object\n\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/hookmanager.class.php';\n\t$hookmanager = new HookManager($db);\n\t$hookmanager->initHooks(array('upgrade'));\n\n\n\t/***************************************************************************************\n\t *\n\t * Migration of data\n\t *\n\t ***************************************************************************************/\n\t$db->begin();\n\n\tif (!$error) {\n\t\t// Current version is $conf->global->MAIN_VERSION_LAST_UPGRADE\n\t\t// Version to install is DOL_VERSION\n\t\t$dolibarrlastupgradeversionarray = preg_split('/[\\.-]/', isset($conf->global->MAIN_VERSION_LAST_UPGRADE) ? $conf->global->MAIN_VERSION_LAST_UPGRADE : (isset($conf->global->MAIN_VERSION_LAST_INSTALL) ? $conf->global->MAIN_VERSION_LAST_INSTALL : ''));\n\n\t\t// Chaque action de migration doit renvoyer une ligne sur 4 colonnes avec\n\t\t// dans la 1ere colonne, la description de l'action a faire\n\t\t// dans la 4eme colonne, le texte 'OK' si fait ou 'AlreadyDone' si rien n'est fait ou 'Error'\n\n\t\t$versiontoarray = explode('.', $versionto);\n\t\t$versionranarray = explode('.', DOL_VERSION);\n\n\n\t\t// Force to execute this at begin to avoid the new core code into Dolibarr to be broken.\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'user ADD COLUMN birth date';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'user ADD COLUMN dateemployment date';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'user ADD COLUMN dateemploymentend date';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'user ADD COLUMN default_range integer';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'user ADD COLUMN default_c_exp_tax_cat integer';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'extrafields ADD COLUMN langs varchar(24)';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'extrafields ADD COLUMN fieldcomputed text';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'extrafields ADD COLUMN fielddefault varchar(255)';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.\"extrafields ADD COLUMN enabled varchar(255) DEFAULT '1'\";\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'extrafields ADD COLUMN help text';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'user_rights ADD COLUMN entity integer DEFAULT 1 NOT NULL';\n\t\t$db->query($sql, 1);\n\n\n\t\t$afterversionarray = explode('.', '2.0.0');\n\t\t$beforeversionarray = explode('.', '2.7.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\t// Script pour V2 -> V2.1\n\t\t\tmigrate_paiements($db, $langs, $conf);\n\n\t\t\tmigrate_contracts_det($db, $langs, $conf);\n\n\t\t\tmigrate_contracts_date1($db, $langs, $conf);\n\n\t\t\tmigrate_contracts_date2($db, $langs, $conf);\n\n\t\t\tmigrate_contracts_date3($db, $langs, $conf);\n\n\t\t\tmigrate_contracts_open($db, $langs, $conf);\n\n\t\t\tmigrate_modeles($db, $langs, $conf);\n\n\t\t\tmigrate_price_propal($db, $langs, $conf);\n\n\t\t\tmigrate_price_commande($db, $langs, $conf);\n\n\t\t\tmigrate_price_commande_fournisseur($db, $langs, $conf);\n\n\t\t\tmigrate_price_contrat($db, $langs, $conf);\n\n\t\t\tmigrate_paiementfourn_facturefourn($db, $langs, $conf);\n\n\n\t\t\t// Script pour V2.1 -> V2.2\n\t\t\tmigrate_paiements_orphelins_1($db, $langs, $conf);\n\n\t\t\tmigrate_paiements_orphelins_2($db, $langs, $conf);\n\n\t\t\tmigrate_links_transfert($db, $langs, $conf);\n\n\n\t\t\t// Script pour V2.2 -> V2.4\n\t\t\tmigrate_commande_expedition($db, $langs, $conf);\n\n\t\t\tmigrate_commande_livraison($db, $langs, $conf);\n\n\t\t\tmigrate_detail_livraison($db, $langs, $conf);\n\n\n\t\t\t// Script pour V2.5 -> V2.6\n\t\t\tmigrate_stocks($db, $langs, $conf);\n\n\n\t\t\t// Script pour V2.6 -> V2.7\n\t\t\tmigrate_menus($db, $langs, $conf);\n\n\t\t\tmigrate_commande_deliveryaddress($db, $langs, $conf);\n\n\t\t\tmigrate_restore_missing_links($db, $langs, $conf);\n\n\t\t\tmigrate_rename_directories($db, $langs, $conf, '/compta', '/banque');\n\n\t\t\tmigrate_rename_directories($db, $langs, $conf, '/societe', '/mycompany');\n\t\t}\n\n\t\t// Script for 2.8\n\t\t$afterversionarray = explode('.', '2.7.9');\n\t\t$beforeversionarray = explode('.', '2.8.9');\n\t\t//print $versionto.' '.versioncompare($versiontoarray,$afterversionarray).' '.versioncompare($versiontoarray,$beforeversionarray);\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_price_facture($db, $langs, $conf); // Code of this function works for 2.8+ because need a field tva_tx\n\n\t\t\tmigrate_relationship_tables($db, $langs, $conf, 'co_exp', 'fk_commande', 'commande', 'fk_expedition', 'shipping');\n\n\t\t\tmigrate_relationship_tables($db, $langs, $conf, 'pr_exp', 'fk_propal', 'propal', 'fk_expedition', 'shipping');\n\n\t\t\tmigrate_relationship_tables($db, $langs, $conf, 'pr_liv', 'fk_propal', 'propal', 'fk_livraison', 'delivery');\n\n\t\t\tmigrate_relationship_tables($db, $langs, $conf, 'co_liv', 'fk_commande', 'commande', 'fk_livraison', 'delivery');\n\n\t\t\tmigrate_relationship_tables($db, $langs, $conf, 'co_pr', 'fk_propale', 'propal', 'fk_commande', 'commande');\n\n\t\t\tmigrate_relationship_tables($db, $langs, $conf, 'fa_pr', 'fk_propal', 'propal', 'fk_facture', 'facture');\n\n\t\t\tmigrate_relationship_tables($db, $langs, $conf, 'co_fa', 'fk_commande', 'commande', 'fk_facture', 'facture');\n\n\t\t\tmigrate_project_user_resp($db, $langs, $conf);\n\n\t\t\tmigrate_project_task_actors($db, $langs, $conf);\n\t\t}\n\n\t\t// Script for 2.9\n\t\t$afterversionarray = explode('.', '2.8.9');\n\t\t$beforeversionarray = explode('.', '2.9.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_project_task_time($db, $langs, $conf);\n\n\t\t\tmigrate_customerorder_shipping($db, $langs, $conf);\n\n\t\t\tmigrate_shipping_delivery($db, $langs, $conf);\n\n\t\t\tmigrate_shipping_delivery2($db, $langs, $conf);\n\t\t}\n\n\t\t// Script for 3.0\n\t\t$afterversionarray = explode('.', '2.9.9');\n\t\t$beforeversionarray = explode('.', '3.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\t// No particular code\n\t\t}\n\n\t\t// Script for 3.1\n\t\t$afterversionarray = explode('.', '3.0.9');\n\t\t$beforeversionarray = explode('.', '3.1.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_rename_directories($db, $langs, $conf, '/rss', '/externalrss');\n\n\t\t\tmigrate_actioncomm_element($db, $langs, $conf);\n\t\t}\n\n\t\t// Script for 3.2\n\t\t$afterversionarray = explode('.', '3.1.9');\n\t\t$beforeversionarray = explode('.', '3.2.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_price_contrat($db, $langs, $conf);\n\n\t\t\tmigrate_mode_reglement($db, $langs, $conf);\n\n\t\t\tmigrate_clean_association($db, $langs, $conf);\n\t\t}\n\n\t\t// Script for 3.3\n\t\t$afterversionarray = explode('.', '3.2.9');\n\t\t$beforeversionarray = explode('.', '3.3.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_categorie_association($db, $langs, $conf);\n\t\t}\n\n\t\t// Script for 3.4\n\t\t// No specific scripts\n\n\t\t// Tasks to do always and only into last targeted version\n\t\t$afterversionarray = explode('.', '3.6.9'); // target is after this\n\t\t$beforeversionarray = explode('.', '3.7.9'); // target is before this\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_event_assignement($db, $langs, $conf);\n\t\t}\n\n\t\t// Scripts for 3.9\n\t\t$afterversionarray = explode('.', '3.7.9');\n\t\t$beforeversionarray = explode('.', '3.8.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\t// No particular code\n\t\t}\n\n\t\t// Scripts for 4.0\n\t\t$afterversionarray = explode('.', '3.9.9');\n\t\t$beforeversionarray = explode('.', '4.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_rename_directories($db, $langs, $conf, '/fckeditor', '/medias');\n\t\t}\n\n\t\t// Scripts for 5.0\n\t\t$afterversionarray = explode('.', '4.0.9');\n\t\t$beforeversionarray = explode('.', '5.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\t// Migrate to add entity value into llx_societe_remise\n\t\t\tmigrate_remise_entity($db, $langs, $conf);\n\n\t\t\t// Migrate to add entity value into llx_societe_remise_except\n\t\t\tmigrate_remise_except_entity($db, $langs, $conf);\n\t\t}\n\n\t\t// Scripts for 6.0\n\t\t$afterversionarray = explode('.', '5.0.9');\n\t\t$beforeversionarray = explode('.', '6.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tif (!empty($conf->multicompany->enabled)) {\n\t\t\t\tglobal $multicompany_transverse_mode;\n\n\t\t\t\t// Only if the transverse mode is not used\n\t\t\t\tif (empty($multicompany_transverse_mode)) {\n\t\t\t\t\t// Migrate to add entity value into llx_user_rights\n\t\t\t\t\tmigrate_user_rights_entity($db, $langs, $conf);\n\n\t\t\t\t\t// Migrate to add entity value into llx_usergroup_rights\n\t\t\t\t\tmigrate_usergroup_rights_entity($db, $langs, $conf);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Scripts for 7.0\n\t\t$afterversionarray = explode('.', '6.0.9');\n\t\t$beforeversionarray = explode('.', '7.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\t// Migrate contact association\n\t\t\tmigrate_event_assignement_contact($db, $langs, $conf);\n\n\t\t\tmigrate_reset_blocked_log($db, $langs, $conf);\n\t\t}\n\n\t\t// Scripts for 8.0\n\t\t$afterversionarray = explode('.', '7.0.9');\n\t\t$beforeversionarray = explode('.', '8.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_rename_directories($db, $langs, $conf, '/contracts', '/contract');\n\t\t}\n\n\t\t// Scripts for 9.0\n\t\t$afterversionarray = explode('.', '8.0.9');\n\t\t$beforeversionarray = explode('.', '9.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_user_photospath();\n\t\t}\n\n\t\t// Scripts for 11.0\n\t\t$afterversionarray = explode('.', '10.0.9');\n\t\t$beforeversionarray = explode('.', '11.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_users_socialnetworks();\n\t\t\tmigrate_members_socialnetworks();\n\t\t\tmigrate_contacts_socialnetworks();\n\t\t\tmigrate_thirdparties_socialnetworks();\n\t\t}\n\n\t\t// Scripts for 14.0\n\t\t$afterversionarray = explode('.', '13.0.9');\n\t\t$beforeversionarray = explode('.', '14.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_export_import_profiles('export');\n\t\t\tmigrate_export_import_profiles('import');\n\t\t}\n\t}\n\n\n\t// Code executed only if migration is LAST ONE. Must always be done.\n\tif (versioncompare($versiontoarray, $versionranarray) >= 0 || versioncompare($versiontoarray, $versionranarray) <= -3) {\n\t\t// Reload modules (this must be always done and only into last targeted version, because code to reload module may need table structure of last version)\n\t\t$listofmodule = array(\n\t\t\t'MAIN_MODULE_ACCOUNTING'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_AGENDA'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_BOM'=>'menuonly',\n\t\t\t'MAIN_MODULE_BANQUE'=>'menuonly',\n\t\t\t'MAIN_MODULE_BARCODE'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_CRON'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_COMMANDE'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_BLOCKEDLOG'=>'noboxes',\n\t\t\t'MAIN_MODULE_DEPLACEMENT'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_DON'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_ECM'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_EXTERNALSITE'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_EXPENSEREPORT'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_FACTURE'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_FOURNISSEUR'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_HOLIDAY'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_MARGIN'=>'menuonly',\n\t\t\t'MAIN_MODULE_MRP'=>'menuonly',\n\t\t\t'MAIN_MODULE_OPENSURVEY'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_PAYBOX'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_PRINTING'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_PRODUIT'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_RECRUITMENT'=>'menuonly',\n\t\t\t'MAIN_MODULE_RESOURCE'=>'noboxes',\n\t\t\t'MAIN_MODULE_SALARIES'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_SERVICE'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_SYSLOG'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_SOCIETE'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_STRIPE'=>'menuonly',\n\t\t\t'MAIN_MODULE_TICKET'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_TAKEPOS'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_USER'=>'newboxdefonly', //This one must be always done and only into last targeted version)\n\t\t\t'MAIN_MODULE_VARIANTS'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_WEBSITE'=>'newboxdefonly',\n\t\t);\n\n\t\t$result = migrate_reload_modules($db, $langs, $conf, $listofmodule);\n\t\tif ($result < 0) {\n\t\t\t$error++;\n\t\t}\n\t\t// Reload menus (this must be always and only into last targeted version)\n\t\t$result = migrate_reload_menu($db, $langs, $conf);\n\t\tif ($result < 0) {\n\t\t\t$error++;\n\t\t}\n\t}\n\n\t// Can force activation of some module during migration with parameter 'enablemodules=MAIN_MODULE_XXX,MAIN_MODULE_YYY,...'\n\t// In most cases (online install or upgrade) $enablemodules is empty. Can be forced when ran from command line.\n\tif (!$error && $enablemodules) {\n\t\t// Reload modules (this must be always done and only into last targeted version)\n\t\t$listofmodules = array();\n\t\t$enablemodules = preg_replace('/enablemodules=/', '', $enablemodules);\n\t\t$tmplistofmodules = explode(',', $enablemodules);\n\t\tforeach ($tmplistofmodules as $value) {\n\t\t\t$listofmodules[$value] = 'forceactivate';\n\t\t}\n\n\t\t$resultreloadmodules = migrate_reload_modules($db, $langs, $conf, $listofmodules, 1);\n\t\tif ($resultreloadmodules < 0) {\n\t\t\t$error++;\n\t\t}\n\t}\n\n\n\t// Can call a dedicated external upgrade process\n\tif (!$error) {\n\t\t$parameters = array('versionfrom' => $versionfrom, 'versionto' => $versionto);\n\t\t$object = new stdClass();\n\t\t$action = \"upgrade\";\n\t\t$reshook = $hookmanager->executeHooks('doUpgrade2', $parameters, $object, $action); // Note that $action and $object may have been modified by some hooks\n\t\tif ($hookmanager->resNbOfHooks > 0) {\n\t\t\tif ($reshook < 0) {\n\t\t\t\tprint '<tr><td colspan=\"4\">';\n\t\t\t\tprint '<b>'.$langs->trans('UpgradeExternalModule').'</b>: ';\n\t\t\t\tprint $hookmanager->error;\n\t\t\t\tprint \"<!-- (\".$reshook.\") -->\";\n\t\t\t\tprint '</td></tr>';\n\t\t\t} else {\n\t\t\t\tprint '<tr class=\"trforrunsql\"><td colspan=\"4\">';\n\t\t\t\tprint '<b>'.$langs->trans('UpgradeExternalModule').'</b>: <span class=\"ok\">OK</span>';\n\t\t\t\tprint \"<!-- (\".$reshook.\") -->\";\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\t\t} else {\n\t\t\t//if (! empty($conf->modules))\n\t\t\tif (!empty($conf->modules_parts['hooks'])) {     // If there is at least one module with one hook, we show message to say nothing was done\n\t\t\t\tprint '<tr class=\"trforrunsql\"><td colspan=\"4\">';\n\t\t\t\tprint '<b>'.$langs->trans('UpgradeExternalModule').'</b>: '.$langs->trans(\"None\");\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\t\t}\n\t}\n\n\tprint '</table>';\n\n\n\tif (!$error) {\n\t\t// Set constant to ask to remake a new ping to inform about upgrade (if first ping was done and OK)\n\t\t$sql = 'UPDATE '.MAIN_DB_PREFIX.\"const SET VALUE = 'torefresh' WHERE name = 'MAIN_FIRST_PING_OK_ID'\";\n\t\t$db->query($sql, 1);\n\t}\n\n\t// We always commit.\n\t// Process is designed so we can run it several times whatever is situation.\n\t$db->commit();\n\t$db->close();\n\n\n\t// Copy directory medias\n\t$srcroot = DOL_DOCUMENT_ROOT.'/install/medias';\n\t$destroot = DOL_DATA_ROOT.'/medias';\n\tdolCopyDir($srcroot, $destroot, 0, 0);\n\n\n\t// Actions for all versions (no database change but delete some files and directories)\n\tmigrate_delete_old_files($db, $langs, $conf);\n\tmigrate_delete_old_dir($db, $langs, $conf);\n\t// Actions for all versions (no database change but create some directories)\n\tdol_mkdir(DOL_DATA_ROOT.'/bank');\n\t// Actions for all versions (no database change but rename some directories)\n\tmigrate_rename_directories($db, $langs, $conf, '/banque/bordereau', '/bank/checkdeposits');\n\n\t$silent = 0;\n\tif (!$silent) {\n\t\tprint '<table width=\"100%\">';\n\t\tprint '<tr><td style=\"width: 30%\">'.$langs->trans(\"MigrationFinished\").'</td>';\n\t\tprint '<td class=\"right\">';\n\t\tif ($error == 0) {\n\t\t\t//print '<span class=\"ok\">'.$langs->trans(\"OK\").'</span> - ';\t\t// $error = 0 does not mean there is no error (error are not always trapped)\n\t\t} else {\n\t\t\tprint '<span class=\"error\">'.$langs->trans(\"Error\").'</span> - ';\n\t\t}\n\n\t\t//if (!empty($conf->use_javascript_ajax)) {\t\t// use_javascript_ajax is not defined\n\t\tprint '<script type=\"text/javascript\">\n\t\tjQuery(document).ready(function() {\n\t\t\tfunction init_trrunsql()\n\t\t\t{\n\t\t\t\tconsole.log(\"toggle .trforrunsql\");\n\t\t\t\tjQuery(\".trforrunsql\").toggle();\n\t\t\t}\n\t\t\tinit_trrunsql();\n\t\t\tjQuery(\".trforrunsqlshowhide\").click(function() {\n\t\t\t\tinit_trrunsql();\n\t\t\t});\n\t\t});\n\t\t</script>';\n\t\tprint '<a class=\"trforrunsqlshowhide\" href=\"#\">'.$langs->trans(\"ShowHideDetails\").'</a>';\n\t\t//}\n\n\t\tprint '</td></tr>'.\"\\n\";\n\t\tprint '</table>';\n\t}\n\n\t//print '<div><br>'.$langs->trans(\"MigrationFinished\").'</div>';\n} else {\n\tprint '<div class=\"error\">'.$langs->trans('ErrorWrongParameters').'</div>';\n\t$error++;\n}\n\n$ret = 0;\nif ($error && isset($argv[1])) {\n\t$ret = 1;\n}\ndolibarr_install_syslog(\"Exit \".$ret);\n\ndolibarr_install_syslog(\"--- upgrade2: end\");\npFooter($error ? 2 : 0, $setuplang);\n\nif ($db->connected) {\n\t$db->close();\n}\n\n// Return code if ran from command line\nif ($ret) {\n\texit($ret);\n}\n\n\n\n/**\n * Reporte liens vers une facture de paiements sur table de jointure (lien n-n paiements factures)\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_paiements($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationPaymentsUpdate').\"</b><br>\\n\";\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"paiement\", \"fk_facture\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t$sql = \"SELECT p.rowid, p.fk_facture, p.amount\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"paiement as p\";\n\t\t$sql .= \" WHERE p.fk_facture > 0\";\n\n\t\t$resql = $db->query($sql);\n\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_paiements\");\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$row = array();\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t$row[$i][0] = $obj->rowid;\n\t\t\t\t$row[$i][1] = $obj->fk_facture;\n\t\t\t\t$row[$i][2] = $obj->amount;\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\n\t\tif ($num) {\n\t\t\tprint $langs->trans('MigrationPaymentsNumberToUpdate', $num).\"<br>\\n\";\n\t\t\tif ($db->begin()) {\n\t\t\t\t$res = 0;\n\t\t\t\t$num = count($row);\n\t\t\t\tfor ($i = 0; $i < $num; $i++) {\n\t\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"paiement_facture (fk_facture, fk_paiement, amount)\";\n\t\t\t\t\t$sql .= \" VALUES (\".((int) $row[$i][1]).\",\".((int) $row[$i][0]).\",\".((float) $row[$i][2]).\")\";\n\n\t\t\t\t\t$res += $db->query($sql);\n\n\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"paiement SET fk_facture = 0 WHERE rowid = \".((int) $row[$i][0]);\n\n\t\t\t\t\t$res += $db->query($sql);\n\n\t\t\t\t\tprint $langs->trans('MigrationProcessPaymentUpdate', $row[$i][0]).\"<br>\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($res == (2 * count($row))) {\n\t\t\t\t$db->commit();\n\t\t\t\tprint $langs->trans('MigrationSuccessfullUpdate').\"<br>\";\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t\tprint $langs->trans('MigrationUpdateFailed').'<br>';\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('MigrationPaymentsNothingToUpdate').\"<br>\\n\";\n\t\t}\n\t} else {\n\t\tprint $langs->trans('MigrationPaymentsNothingToUpdate').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Corrige paiement orphelins (liens paumes suite a bugs)\n * Pour verifier s'il reste des orphelins:\n * select * from llx_paiement as p left join llx_paiement_facture as pf on pf.fk_paiement=p.rowid WHERE pf.rowid IS NULL AND (p.fk_facture = 0 OR p.fk_facture IS NULL)\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_paiements_orphelins_1($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationPaymentsUpdate').\"</b><br>\\n\";\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"paiement\", \"fk_facture\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t// Tous les enregistrements qui sortent de cette requete devrait avoir un pere dans llx_paiement_facture\n\t\t$sql = \"SELECT distinct p.rowid, p.datec, p.amount as pamount, bu.fk_bank, b.amount as bamount,\";\n\t\t$sql .= \" bu2.url_id as socid\";\n\t\t$sql .= \" FROM (\".MAIN_DB_PREFIX.\"paiement as p, \".MAIN_DB_PREFIX.\"bank_url as bu, \".MAIN_DB_PREFIX.\"bank as b)\";\n\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"paiement_facture as pf ON pf.fk_paiement = p.rowid\";\n\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"bank_url as bu2 ON (bu.fk_bank=bu2.fk_bank AND bu2.type = 'company')\";\n\t\t$sql .= \" WHERE pf.rowid IS NULL AND (p.rowid=bu.url_id AND bu.type='payment') AND bu.fk_bank = b.rowid\";\n\t\t$sql .= \" AND b.rappro = 1\";\n\t\t$sql .= \" AND (p.fk_facture = 0 OR p.fk_facture IS NULL)\";\n\n\t\t$resql = $db->query($sql);\n\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_paiements_orphelins_1\");\n\t\t$row = array();\n\t\tif ($resql) {\n\t\t\t$i = $j = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\tif ($obj->pamount == $obj->bamount && $obj->socid) {\t// Pour etre sur d'avoir bon cas\n\t\t\t\t\t$row[$j]['paymentid'] = $obj->rowid; // paymentid\n\t\t\t\t\t$row[$j]['pamount'] = $obj->pamount;\n\t\t\t\t\t$row[$j]['fk_bank'] = $obj->fk_bank;\n\t\t\t\t\t$row[$j]['bamount'] = $obj->bamount;\n\t\t\t\t\t$row[$j]['socid'] = $obj->socid;\n\t\t\t\t\t$row[$j]['datec'] = $obj->datec;\n\t\t\t\t\t$j++;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\n\t\tif (count($row)) {\n\t\t\tprint $langs->trans('OrphelinsPaymentsDetectedByMethod', 1).': '.count($row).\"<br>\\n\";\n\t\t\t$db->begin();\n\n\t\t\t$res = 0;\n\t\t\t$num = count($row);\n\t\t\tfor ($i = 0; $i < $num; $i++) {\n\t\t\t\tif ($conf->global->MAIN_FEATURES_LEVEL == 2) {\n\t\t\t\t\tprint '* '.$row[$i]['datec'].' paymentid='.$row[$i]['paymentid'].' pamount='.$row[$i]['pamount'].' fk_bank='.$row[$i]['fk_bank'].' bamount='.$row[$i]['bamount'].' socid='.$row[$i]['socid'].'<br>';\n\t\t\t\t}\n\n\t\t\t\t// On cherche facture sans lien paiement et du meme montant et pour meme societe.\n\t\t\t\t$sql = \" SELECT distinct f.rowid from \".MAIN_DB_PREFIX.\"facture as f\";\n\t\t\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"paiement_facture as pf ON f.rowid = pf.fk_facture\";\n\t\t\t\t$sql .= \" WHERE f.fk_statut in (2,3) AND fk_soc = \".((int) $row[$i]['socid']).\" AND total_ttc = \".((float) $row[$i]['pamount']);\n\t\t\t\t$sql .= \" AND pf.fk_facture IS NULL\";\n\t\t\t\t$sql .= \" ORDER BY f.fk_statut\";\n\t\t\t\t//print $sql.'<br>';\n\t\t\t\t$resql = $db->query($sql);\n\t\t\t\tif ($resql) {\n\t\t\t\t\t$num = $db->num_rows($resql);\n\t\t\t\t\t//print 'Nb of invoice found for this amount and company :'.$num.'<br>';\n\t\t\t\t\tif ($num >= 1) {\n\t\t\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t\t\t$facid = $obj->rowid;\n\n\t\t\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"paiement_facture (fk_facture, fk_paiement, amount)\";\n\t\t\t\t\t\t$sql .= \" VALUES (\".((int) $facid).\",\".((int) $row[$i]['paymentid']).\", \".((float) $row[$i]['pamount']).\")\";\n\n\t\t\t\t\t\t$res += $db->query($sql);\n\n\t\t\t\t\t\tprint $langs->trans('MigrationProcessPaymentUpdate', 'facid='.$facid.'-paymentid='.$row[$i]['paymentid'].'-amount='.$row[$i]['pamount']).\"<br>\\n\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint 'ERROR';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($res > 0) {\n\t\t\t\tprint $langs->trans('MigrationSuccessfullUpdate').\"<br>\";\n\t\t\t} else {\n\t\t\t\tprint $langs->trans('MigrationPaymentsNothingUpdatable').\"<br>\\n\";\n\t\t\t}\n\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\tprint $langs->trans('MigrationPaymentsNothingUpdatable').\"<br>\\n\";\n\t\t}\n\t} else {\n\t\tprint $langs->trans('MigrationPaymentsNothingUpdatable').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Corrige paiement orphelins (liens paumes suite a bugs)\n * Pour verifier s'il reste des orphelins:\n * select * from llx_paiement as p left join llx_paiement_facture as pf on pf.fk_paiement=p.rowid WHERE pf.rowid IS NULL AND (p.fk_facture = 0 OR p.fk_facture IS NULL)\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_paiements_orphelins_2($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationPaymentsUpdate').\"</b><br>\\n\";\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"paiement\", \"fk_facture\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t// Tous les enregistrements qui sortent de cette requete devrait avoir un pere dans llx_paiement_facture\n\t\t$sql = \"SELECT distinct p.rowid, p.datec, p.amount as pamount, bu.fk_bank, b.amount as bamount,\";\n\t\t$sql .= \" bu2.url_id as socid\";\n\t\t$sql .= \" FROM (\".MAIN_DB_PREFIX.\"paiement as p, \".MAIN_DB_PREFIX.\"bank_url as bu, \".MAIN_DB_PREFIX.\"bank as b)\";\n\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"paiement_facture as pf ON pf.fk_paiement = p.rowid\";\n\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"bank_url as bu2 ON (bu.fk_bank = bu2.fk_bank AND bu2.type = 'company')\";\n\t\t$sql .= \" WHERE pf.rowid IS NULL AND (p.fk_bank = bu.fk_bank AND bu.type = 'payment') AND bu.fk_bank = b.rowid\";\n\t\t$sql .= \" AND (p.fk_facture = 0 OR p.fk_facture IS NULL)\";\n\n\t\t$resql = $db->query($sql);\n\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_paiements_orphelins_2\");\n\t\t$row = array();\n\t\tif ($resql) {\n\t\t\t$i = $j = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\tif ($obj->pamount == $obj->bamount && $obj->socid) {\t// Pour etre sur d'avoir bon cas\n\t\t\t\t\t$row[$j]['paymentid'] = $obj->rowid; // paymentid\n\t\t\t\t\t$row[$j]['pamount'] = $obj->pamount;\n\t\t\t\t\t$row[$j]['fk_bank'] = $obj->fk_bank;\n\t\t\t\t\t$row[$j]['bamount'] = $obj->bamount;\n\t\t\t\t\t$row[$j]['socid'] = $obj->socid;\n\t\t\t\t\t$row[$j]['datec'] = $obj->datec;\n\t\t\t\t\t$j++;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\n\t\t$nberr = 0;\n\n\t\t$num = count($row);\n\t\tif ($num) {\n\t\t\tprint $langs->trans('OrphelinsPaymentsDetectedByMethod', 2).': '.count($row).\"<br>\\n\";\n\t\t\t$db->begin();\n\n\t\t\t$res = 0;\n\t\t\tfor ($i = 0; $i < $num; $i++) {\n\t\t\t\tif ($conf->global->MAIN_FEATURES_LEVEL == 2) {\n\t\t\t\t\tprint '* '.$row[$i]['datec'].' paymentid='.$row[$i]['paymentid'].' pamount='.$row[$i]['pamount'].' fk_bank='.$row[$i]['fk_bank'].' '.$row[$i]['bamount'].' socid='.$row[$i]['socid'].'<br>';\n\t\t\t\t}\n\n\t\t\t\t// On cherche facture sans lien paiement et du meme montant et pour meme societe.\n\t\t\t\t$sql = \" SELECT distinct f.rowid from \".MAIN_DB_PREFIX.\"facture as f\";\n\t\t\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"paiement_facture as pf ON f.rowid = pf.fk_facture\";\n\t\t\t\t$sql .= \" WHERE f.fk_statut in (2,3) AND fk_soc = \".((int) $row[$i]['socid']).\" AND total_ttc = \".((float) $row[$i]['pamount']);\n\t\t\t\t$sql .= \" AND pf.fk_facture IS NULL\";\n\t\t\t\t$sql .= \" ORDER BY f.fk_statut\";\n\t\t\t\t//print $sql.'<br>';\n\t\t\t\t$resql = $db->query($sql);\n\t\t\t\tif ($resql) {\n\t\t\t\t\t$num = $db->num_rows($resql);\n\t\t\t\t\t//print 'Nb of invoice found for this amount and company :'.$num.'<br>';\n\t\t\t\t\tif ($num >= 1) {\n\t\t\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t\t\t$facid = $obj->rowid;\n\n\t\t\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"paiement_facture (fk_facture, fk_paiement, amount)\";\n\t\t\t\t\t\t$sql .= \" VALUES (\".((int) $facid).\",\".((int) $row[$i]['paymentid']).\", \".((float) $row[$i]['pamount']).\")\";\n\n\t\t\t\t\t\t$res += $db->query($sql);\n\n\t\t\t\t\t\tprint $langs->trans('MigrationProcessPaymentUpdate', 'facid='.$facid.'-paymentid='.$row[$i]['paymentid'].'-amount='.$row[$i]['pamount']).\"<br>\\n\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint 'ERROR';\n\t\t\t\t\t$nberr++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($res > 0) {\n\t\t\t\tprint $langs->trans('MigrationSuccessfullUpdate').\"<br>\";\n\t\t\t} else {\n\t\t\t\tprint $langs->trans('MigrationPaymentsNothingUpdatable').\"<br>\\n\";\n\t\t\t}\n\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\tprint $langs->trans('MigrationPaymentsNothingUpdatable').\"<br>\\n\";\n\t\t}\n\n\t\t// Delete obsolete fields fk_facture\n\t\t$db->begin();\n\n\t\t$sql = \"ALTER TABLE \".MAIN_DB_PREFIX.\"paiement DROP COLUMN fk_facture\";\n\t\t$db->query($sql);\n\n\t\tif (!$nberr) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\tprint 'ERROR';\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('MigrationPaymentsNothingUpdatable').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n\n/**\n * Mise a jour des contrats (gestion du contrat + detail de contrat)\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_contracts_det($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\t$nberr = 0;\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationContractsUpdate').\"</b><br>\\n\";\n\n\t$sql = \"SELECT c.rowid as cref, c.date_contrat, c.statut, c.fk_product, c.fk_facture, c.fk_user_author,\";\n\t$sql .= \" p.ref, p.label, p.description, p.price, p.tva_tx, p.duration, cd.rowid\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"contrat as c\";\n\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"product as p\";\n\t$sql .= \" ON c.fk_product = p.rowid\";\n\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"contratdet as cd\";\n\t$sql .= \" ON c.rowid=cd.fk_contrat\";\n\t$sql .= \" WHERE cd.rowid IS NULL AND p.rowid IS NOT NULL\";\n\t$resql = $db->query($sql);\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_contracts_det\");\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$row = array();\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\tprint $langs->trans('MigrationContractsNumberToUpdate', $num).\"<br>\\n\";\n\t\t\t$db->begin();\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"contratdet (\";\n\t\t\t\t$sql .= \"fk_contrat, fk_product, statut, label, description,\";\n\t\t\t\t$sql .= \"date_ouverture_prevue, date_ouverture, date_fin_validite, tva_tx, qty,\";\n\t\t\t\t$sql .= \"subprice, price_ht, fk_user_author, fk_user_ouverture)\";\n\t\t\t\t$sql .= \" VALUES (\";\n\t\t\t\t$sql .= ((int) $obj->cref).\", \".($obj->fk_product ? ((int) $obj->fk_product) : 0).\", \";\n\t\t\t\t$sql .= \"0, \";\n\t\t\t\t$sql .= \"'\".$db->escape($obj->label).\"', null, \";\n\t\t\t\t$sql .= ($obj->date_contrat ? \"'\".$db->idate($db->jdate($obj->date_contrat)).\"'\" : \"null\").\", \";\n\t\t\t\t$sql .= \"null, \";\n\t\t\t\t$sql .= \"null, \";\n\t\t\t\t$sql .= ((float) $obj->tva_tx).\", 1, \";\n\t\t\t\t$sql .= ((float) $obj->price).\", \".((float) $obj->price).\", \".((int) $obj->fk_user_author).\",\";\n\t\t\t\t$sql .= \"null\";\n\t\t\t\t$sql .= \")\";\n\n\t\t\t\tif ($db->query($sql)) {\n\t\t\t\t\tprint $langs->trans('MigrationContractsLineCreation', $obj->cref).\"<br>\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t$nberr++;\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tif (!$nberr) {\n\t\t\t\t//      $db->rollback();\n\t\t\t\t$db->commit();\n\t\t\t\tprint $langs->trans('MigrationSuccessfullUpdate').\"<br>\";\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t\tprint $langs->trans('MigrationUpdateFailed').'<br>';\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('MigrationContractsNothingToUpdate').\"<br>\\n\";\n\t\t}\n\t} else {\n\t\tprint $langs->trans('MigrationContractsFieldDontExist').\"<br>\\n\";\n\t\t//    dol_print_error($db);\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Function to migrate links into llx_bank_url\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_links_transfert($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\t$nberr = 0;\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationBankTransfertsUpdate').\"</b><br>\\n\";\n\n\t$sql = \"SELECT ba.rowid as barowid, bb.rowid as bbrowid\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank as bb, \".MAIN_DB_PREFIX.\"bank as ba\";\n\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"bank_url as bu ON bu.fk_bank = ba.rowid\";\n\t$sql .= \" WHERE ba.amount = -bb.amount AND ba.fk_account <> bb.fk_account\";\n\t$sql .= \" AND ba.datev = bb.datev AND ba.datec = bb.datec\";\n\t$sql .= \" AND bu.fk_bank IS NULL\";\n\t$resql = $db->query($sql);\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_links_transfert\");\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$row = array();\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\tprint $langs->trans('MigrationBankTransfertsToUpdate', $num).\"<br>\\n\";\n\t\t\t$db->begin();\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"bank_url (\";\n\t\t\t\t$sql .= \"fk_bank, url_id, url, label, type\";\n\t\t\t\t$sql .= \")\";\n\t\t\t\t$sql .= \" VALUES (\";\n\t\t\t\t$sql .= $obj->barowid.\",\".$obj->bbrowid.\", '/compta/bank/line.php?rowid=', '(banktransfert)', 'banktransfert'\";\n\t\t\t\t$sql .= \")\";\n\n\t\t\t\t//print $sql.'<br>';\n\t\t\t\tdolibarr_install_syslog(\"migrate_links_transfert\");\n\n\t\t\t\tif (!$db->query($sql)) {\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t$nberr++;\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tif (!$nberr) {\n\t\t\t\t//      $db->rollback();\n\t\t\t\t$db->commit();\n\t\t\t\tprint $langs->trans('MigrationSuccessfullUpdate').\"<br>\";\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t\tprint $langs->trans('MigrationUpdateFailed').'<br>';\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('MigrationBankTransfertsNothingToUpdate').\"<br>\\n\";\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Mise a jour des date de contrats non renseignees\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_contracts_date1($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationContractsEmptyDatesUpdate').\"</b><br>\\n\";\n\n\t$sql = \"update \".MAIN_DB_PREFIX.\"contrat set date_contrat=tms where date_contrat is null\";\n\tdolibarr_install_syslog(\"upgrade2::migrate_contracts_date1\");\n\t$resql = $db->query($sql);\n\tif (!$resql) {\n\t\tdol_print_error($db);\n\t}\n\tif ($db->affected_rows($resql) > 0) {\n\t\tprint $langs->trans('MigrationContractsEmptyDatesUpdateSuccess').\"<br>\\n\";\n\t} else {\n\t\tprint $langs->trans('MigrationContractsEmptyDatesNothingToUpdate').\"<br>\\n\";\n\t}\n\n\t$sql = \"update \".MAIN_DB_PREFIX.\"contrat set datec=tms where datec is null\";\n\tdolibarr_install_syslog(\"upgrade2::migrate_contracts_date1\");\n\t$resql = $db->query($sql);\n\tif (!$resql) {\n\t\tdol_print_error($db);\n\t}\n\tif ($db->affected_rows($resql) > 0) {\n\t\tprint $langs->trans('MigrationContractsEmptyCreationDatesUpdateSuccess').\"<br>\\n\";\n\t} else {\n\t\tprint $langs->trans('MigrationContractsEmptyCreationDatesNothingToUpdate').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Update contracts with date min real if service date is lower\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tLanguage\n * @param\tConf\t\t$conf\tConf\n * @return\tvoid\n */\nfunction migrate_contracts_date2($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\t$nberr = 0;\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationContractsInvalidDatesUpdate').\"</b><br>\\n\";\n\n\t$sql = \"SELECT c.rowid as cref, c.datec, c.date_contrat, MIN(cd.date_ouverture) as datemin\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"contrat as c,\";\n\t$sql .= \" \".MAIN_DB_PREFIX.\"contratdet as cd\";\n\t$sql .= \" WHERE c.rowid=cd.fk_contrat AND cd.date_ouverture IS NOT NULL\";\n\t$sql .= \" GROUP BY c.rowid, c.date_contrat\";\n\t$resql = $db->query($sql);\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_contracts_date2\");\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$row = array();\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\t$nbcontratsmodifie = 0;\n\t\t\t$db->begin();\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\tif ($obj->date_contrat > $obj->datemin) {\n\t\t\t\t\t$datemin = $db->jdate($obj->datemin);\n\n\t\t\t\t\tprint $langs->trans('MigrationContractsInvalidDateFix', $obj->cref, $obj->date_contrat, $obj->datemin).\"<br>\\n\";\n\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"contrat\";\n\t\t\t\t\t$sql .= \" SET date_contrat='\".$db->idate($datemin).\"'\";\n\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->cref);\n\t\t\t\t\t$resql2 = $db->query($sql);\n\t\t\t\t\tif (!$resql2) {\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\n\t\t\t\t\t$nbcontratsmodifie++;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$db->commit();\n\n\t\t\tif ($nbcontratsmodifie) {\n\t\t\t\tprint $langs->trans('MigrationContractsInvalidDatesNumber', $nbcontratsmodifie).\"<br>\\n\";\n\t\t\t} else {\n\t\t\t\tprint  $langs->trans('MigrationContractsInvalidDatesNothingToUpdate').\"<br>\\n\";\n\t\t\t}\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Mise a jour des dates de creation de contrat\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_contracts_date3($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationContractsIncoherentCreationDateUpdate').\"</b><br>\\n\";\n\n\t$sql = \"update \".MAIN_DB_PREFIX.\"contrat set datec=date_contrat where datec is null or datec > date_contrat\";\n\tdolibarr_install_syslog(\"upgrade2::migrate_contracts_date3\");\n\t$resql = $db->query($sql);\n\tif (!$resql) {\n\t\tdol_print_error($db);\n\t}\n\tif ($db->affected_rows($resql) > 0) {\n\t\tprint $langs->trans('MigrationContractsIncoherentCreationDateUpdateSuccess').\"<br>\\n\";\n\t} else {\n\t\tprint $langs->trans('MigrationContractsIncoherentCreationDateNothingToUpdate').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Reouverture des contrats qui ont au moins une ligne non fermee\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_contracts_open($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationReopeningContracts').\"</b><br>\\n\";\n\n\t$sql = \"SELECT c.rowid as cref FROM \".MAIN_DB_PREFIX.\"contrat as c, \".MAIN_DB_PREFIX.\"contratdet as cd\";\n\t$sql .= \" WHERE cd.statut = 4 AND c.statut=2 AND c.rowid=cd.fk_contrat\";\n\tdolibarr_install_syslog(\"upgrade2::migrate_contracts_open\");\n\t$resql = $db->query($sql);\n\tif (!$resql) {\n\t\tdol_print_error($db);\n\t}\n\tif ($db->affected_rows($resql) > 0) {\n\t\t$i = 0;\n\t\t$row = array();\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\t$nbcontratsmodifie = 0;\n\t\t\t$db->begin();\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\tprint $langs->trans('MigrationReopenThisContract', $obj->cref).\"<br>\\n\";\n\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"contrat\";\n\t\t\t\t$sql .= \" SET statut = 1\";\n\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->cref);\n\t\t\t\t$resql2 = $db->query($sql);\n\t\t\t\tif (!$resql2) {\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\n\t\t\t\t$nbcontratsmodifie++;\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$db->commit();\n\n\t\t\tif ($nbcontratsmodifie) {\n\t\t\t\tprint $langs->trans('MigrationReopenedContractsNumber', $nbcontratsmodifie).\"<br>\\n\";\n\t\t\t} else {\n\t\t\t\tprint $langs->trans('MigrationReopeningContractsNothingToUpdate').\"<br>\\n\";\n\t\t\t}\n\t\t}\n\t} else {\n\t\tprint $langs->trans('MigrationReopeningContractsNothingToUpdate').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Factures fournisseurs\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_paiementfourn_facturefourn($db, $langs, $conf)\n{\n\tglobal $bc;\n\n\tprint '<tr><td colspan=\"4\">';\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('SuppliersInvoices').\"</b><br>\\n\";\n\tprint '</td></tr>';\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"paiementfourn\", \"fk_facture_fourn\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t$error = 0;\n\t\t$nb = 0;\n\n\t\t$select_sql = 'SELECT rowid, fk_facture_fourn, amount';\n\t\t$select_sql .= ' FROM '.MAIN_DB_PREFIX.'paiementfourn';\n\t\t$select_sql .= ' WHERE fk_facture_fourn IS NOT NULL';\n\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_paiementfourn_facturefourn\");\n\t\t$select_resql = $db->query($select_sql);\n\t\tif ($select_resql) {\n\t\t\t$select_num = $db->num_rows($select_resql);\n\t\t\t$i = 0;\n\t\t\t$var = true;\n\n\t\t\t// Pour chaque paiement fournisseur, on insere une ligne dans paiementfourn_facturefourn\n\t\t\twhile (($i < $select_num) && (!$error)) {\n\t\t\t\t$var = !$var;\n\t\t\t\t$select_obj = $db->fetch_object($select_resql);\n\n\t\t\t\t// Verifier si la ligne est deja dans la nouvelle table. On ne veut pas inserer de doublons.\n\t\t\t\t$check_sql = 'SELECT fk_paiementfourn, fk_facturefourn';\n\t\t\t\t$check_sql .= ' FROM '.MAIN_DB_PREFIX.'paiementfourn_facturefourn';\n\t\t\t\t$check_sql .= ' WHERE fk_paiementfourn = '.((int) $select_obj->rowid).' AND fk_facturefourn = '.((int) $select_obj->fk_facture_fourn);\n\t\t\t\t$check_resql = $db->query($check_sql);\n\t\t\t\tif ($check_resql) {\n\t\t\t\t\t$check_num = $db->num_rows($check_resql);\n\t\t\t\t\tif ($check_num == 0) {\n\t\t\t\t\t\t$db->begin();\n\n\t\t\t\t\t\tif ($nb == 0) {\n\t\t\t\t\t\t\tprint '<tr><td colspan=\"4\" class=\"nowrap\"><b>'.$langs->trans('SuppliersInvoices').'</b></td></tr>';\n\t\t\t\t\t\t\tprint '<tr><td>fk_paiementfourn</td><td>fk_facturefourn</td><td>'.$langs->trans('Amount').'</td><td>&nbsp;</td></tr>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\t\t\t\tprint '<td>'.$select_obj->rowid.'</td><td>'.$select_obj->fk_facture_fourn.'</td><td>'.$select_obj->amount.'</td>';\n\n\t\t\t\t\t\t$insert_sql = 'INSERT INTO '.MAIN_DB_PREFIX.'paiementfourn_facturefourn SET ';\n\t\t\t\t\t\t$insert_sql .= ' fk_paiementfourn = \\''.$select_obj->rowid.'\\',';\n\t\t\t\t\t\t$insert_sql .= ' fk_facturefourn  = \\''.$select_obj->fk_facture_fourn.'\\',';\n\t\t\t\t\t\t$insert_sql .= ' amount           = \\''.$select_obj->amount.'\\'';\n\t\t\t\t\t\t$insert_resql = $db->query($insert_sql);\n\n\t\t\t\t\t\tif ($insert_resql) {\n\t\t\t\t\t\t\t$nb++;\n\t\t\t\t\t\t\tprint '<td><span class=\"ok\">'.$langs->trans(\"OK\").'</span></td>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprint '<td><span class=\"error\">Error on insert</span></td>';\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint '</tr>';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\t$error++;\n\t\t}\n\n\t\tif (!$error) {\n\t\t\tif (!$nb) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"AlreadyDone\").'</td></tr>';\n\t\t\t}\n\t\t\t$db->commit();\n\n\t\t\t$sql = \"ALTER TABLE \".MAIN_DB_PREFIX.\"paiementfourn DROP COLUMN fk_facture_fourn\";\n\t\t\t$db->query($sql);\n\t\t} else {\n\t\t\tprint '<tr><td>'.$langs->trans(\"Error\").'</td></tr>';\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint '<tr><td>'.$langs->trans(\"AlreadyDone\").'</td></tr>';\n\t}\n}\n\n/**\n * Update total of invoice lines\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_price_facture($db, $langs, $conf)\n{\n\t$err = 0;\n\n\t$tmpmysoc = new Societe($db);\n\t$tmpmysoc->setMysoc($conf);\n\n\t$db->begin();\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationInvoice').\"</b><br>\\n\";\n\n\t// List of invoice lines not up to date\n\t$sql = \"SELECT fd.rowid, fd.qty, fd.subprice, fd.remise_percent, fd.tva_tx as vatrate, fd.total_ttc, fd.info_bits,\";\n\t$sql .= \" f.rowid as facid, f.remise_percent as remise_percent_global, f.total_ttc as total_ttc_f\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"facturedet as fd, \".MAIN_DB_PREFIX.\"facture as f\";\n\t$sql .= \" WHERE fd.fk_facture = f.rowid\";\n\t$sql .= \" AND (((fd.total_ttc = 0 AND fd.remise_percent != 100) or fd.total_ttc IS NULL) or f.total_ttc IS NULL)\";\n\t//print $sql;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_price_facture\");\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$rowid = $obj->rowid;\n\t\t\t\t$qty = $obj->qty;\n\t\t\t\t$pu = $obj->subprice;\n\t\t\t\t$vatrate = $obj->vatrate;\n\t\t\t\t$remise_percent = $obj->remise_percent;\n\t\t\t\t$remise_percent_global = $obj->remise_percent_global;\n\t\t\t\t$total_ttc_f = $obj->total_ttc_f;\n\t\t\t\t$info_bits = $obj->info_bits;\n\n\t\t\t\t// On met a jour les 3 nouveaux champs\n\t\t\t\t$facligne = new FactureLigne($db);\n\t\t\t\t$facligne->fetch($rowid);\n\n\t\t\t\t$result = calcul_price_total($qty, $pu, $remise_percent, $vatrate, 0, 0, $remise_percent_global, 'HT', $info_bits, $facligne->product_type, $tmpmysoc);\n\t\t\t\t$total_ht  = $result[0];\n\t\t\t\t$total_tva = $result[1];\n\t\t\t\t$total_ttc = $result[2];\n\n\t\t\t\t$facligne->total_ht  = $total_ht;\n\t\t\t\t$facligne->total_tva = $total_tva;\n\t\t\t\t$facligne->total_ttc = $total_ttc;\n\n\t\t\t\tdolibarr_install_syslog(\"upgrade2: line \".$rowid.\": facid=\".$obj->facid.\" pu=\".$pu.\" qty=\".$qty.\" vatrate=\".$vatrate.\" remise_percent=\".$remise_percent.\" remise_global=\".$remise_percent_global.\" -> \".$total_ht.\", \".$total_tva.\", \".$total_ttc);\n\t\t\t\tprint \". \";\n\t\t\t\t$facligne->update_total();\n\n\n\t\t\t\t/* On touche a facture mere uniquement si total_ttc = 0 */\n\t\t\t\tif (!$total_ttc_f) {\n\t\t\t\t\t$facture = new Facture($db);\n\t\t\t\t\t$facture->id = $obj->facid;\n\n\t\t\t\t\tif ($facture->fetch($facture->id) >= 0) {\n\t\t\t\t\t\tif ($facture->update_price() > 0) {\n\t\t\t\t\t\t\t//print $facture->id;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprint \"Error id=\".$facture->id;\n\t\t\t\t\t\t\t$err++;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint \"Error #3\";\n\t\t\t\t\t\t$err++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprint \" \";\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans(\"AlreadyDone\");\n\t\t}\n\t\t$db->free($resql);\n\n\t\t$db->commit();\n\t} else {\n\t\tprint \"Error #1 \".$db->error();\n\t\t$err++;\n\n\t\t$db->rollback();\n\t}\n\n\tprint '<br>';\n\n\tprint '</td></tr>';\n}\n\n/**\n * Update total of proposal lines\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_price_propal($db, $langs, $conf)\n{\n\t$tmpmysoc = new Societe($db);\n\t$tmpmysoc->setMysoc($conf);\n\n\t$db->begin();\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationProposal').\"</b><br>\\n\";\n\n\t// List of proposal lines not up to date\n\t$sql = \"SELECT pd.rowid, pd.qty, pd.subprice, pd.remise_percent, pd.tva_tx as vatrate, pd.info_bits,\";\n\t$sql .= \" p.rowid as propalid, p.remise_percent as remise_percent_global\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"propaldet as pd, \".MAIN_DB_PREFIX.\"propal as p\";\n\t$sql .= \" WHERE pd.fk_propal = p.rowid\";\n\t$sql .= \" AND ((pd.total_ttc = 0 AND pd.remise_percent != 100) or pd.total_ttc IS NULL)\";\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_price_propal\");\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$rowid = $obj->rowid;\n\t\t\t\t$qty = $obj->qty;\n\t\t\t\t$pu = $obj->subprice;\n\t\t\t\t$vatrate = $obj->vatrate;\n\t\t\t\t$remise_percent = $obj->remise_percent;\n\t\t\t\t$remise_percent_global = $obj->remise_percent_global;\n\t\t\t\t$info_bits = $obj->info_bits;\n\n\t\t\t\t// On met a jour les 3 nouveaux champs\n\t\t\t\t$propalligne = new PropaleLigne($db);\n\t\t\t\t$propalligne->fetch($rowid);\n\n\t\t\t\t$result = calcul_price_total($qty, $pu, $remise_percent, $vatrate, 0, 0, $remise_percent_global, 'HT', $info_bits, $propalligne->product_type, $tmpmysoc);\n\t\t\t\t$total_ht  = $result[0];\n\t\t\t\t$total_tva = $result[1];\n\t\t\t\t$total_ttc = $result[2];\n\n\t\t\t\t$propalligne->total_ht  = $total_ht;\n\t\t\t\t$propalligne->total_tva = $total_tva;\n\t\t\t\t$propalligne->total_ttc = $total_ttc;\n\n\t\t\t\tdolibarr_install_syslog(\"upgrade2: Line \".$rowid.\": propalid=\".$obj->rowid.\" pu=\".$pu.\" qty=\".$qty.\" vatrate=\".$vatrate.\" remise_percent=\".$remise_percent.\" remise_global=\".$remise_percent_global.\" -> \".$total_ht.\", \".$total_tva.\", \".$total_ttc);\n\t\t\t\tprint \". \";\n\t\t\t\t$propalligne->update_total();\n\n\n\t\t\t\t/* On touche pas a propal mere\n\t\t\t\t $propal = new Propal($db);\n\t\t\t\t $propal->id=$obj->rowid;\n\t\t\t\t if ( $propal->fetch($propal->id) >= 0 )\n\t\t\t\t {\n\t\t\t\t if ( $propal->update_price() > 0 )\n\t\t\t\t {\n\t\t\t\t print \". \";\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t print \"Error id=\".$propal->id;\n\t\t\t\t }\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t print \"Error #3\";\n\t\t\t\t }\n\t\t\t\t */\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans(\"AlreadyDone\");\n\t\t}\n\n\t\t$db->free($resql);\n\n\t\t$db->commit();\n\t} else {\n\t\tprint \"Error #1 \".$db->error();\n\n\t\t$db->rollback();\n\t}\n\n\tprint '<br>';\n\n\tprint '</td></tr>';\n}\n\n/**\n * Update total of contract lines\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_price_contrat($db, $langs, $conf)\n{\n\t$db->begin();\n\n\t$tmpmysoc = new Societe($db);\n\t$tmpmysoc->setMysoc($conf);\n\tif (empty($tmpmysoc->country_id)) {\n\t\t$tmpmysoc->country_id = 0; // Ti not have this set to '' or will make sql syntax error.\n\t}\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationContract').\"</b><br>\\n\";\n\n\t// List of contract lines not up to date\n\t$sql = \"SELECT cd.rowid, cd.qty, cd.subprice, cd.remise_percent, cd.tva_tx as vatrate, cd.info_bits,\";\n\t$sql .= \" c.rowid as contratid\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"contratdet as cd, \".MAIN_DB_PREFIX.\"contrat as c\";\n\t$sql .= \" WHERE cd.fk_contrat = c.rowid\";\n\t$sql .= \" AND ((cd.total_ttc = 0 AND cd.remise_percent != 100 AND cd.subprice > 0) or cd.total_ttc IS NULL)\";\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_price_contrat\");\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$rowid = $obj->rowid;\n\t\t\t\t$qty = $obj->qty;\n\t\t\t\t$pu = $obj->subprice;\n\t\t\t\t$vatrate = $obj->vatrate;\n\t\t\t\t$remise_percent = $obj->remise_percent;\n\t\t\t\t$info_bits = $obj->info_bits;\n\n\t\t\t\t// On met a jour les 3 nouveaux champs\n\t\t\t\t$contratligne = new ContratLigne($db);\n\t\t\t\t//$contratligne->fetch($rowid); Non requis car le update_total ne met a jour que chp redefinis\n\t\t\t\t$contratligne->fetch($rowid);\n\n\t\t\t\t$result = calcul_price_total($qty, $pu, $remise_percent, $vatrate, 0, 0, 0, 'HT', $info_bits, $contratligne->product_type, $tmpmysoc);\n\t\t\t\t$total_ht  = $result[0];\n\t\t\t\t$total_tva = $result[1];\n\t\t\t\t$total_ttc = $result[2];\n\n\t\t\t\t$contratligne->total_ht  = $total_ht;\n\t\t\t\t$contratligne->total_tva = $total_tva;\n\t\t\t\t$contratligne->total_ttc = $total_ttc;\n\n\t\t\t\tdolibarr_install_syslog(\"upgrade2: Line \".$rowid.\": contratdetid=\".$obj->rowid.\" pu=\".$pu.\" qty=\".$qty.\" vatrate=\".$vatrate.\" remise_percent=\".$remise_percent.\"  -> \".$total_ht.\", \".$total_tva.\" , \".$total_ttc);\n\t\t\t\tprint \". \";\n\t\t\t\t$contratligne->update_total();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans(\"AlreadyDone\");\n\t\t}\n\n\t\t$db->free($resql);\n\n\t\t$db->commit();\n\t} else {\n\t\tprint \"Error #1 \".$db->error();\n\n\t\t$db->rollback();\n\t}\n\n\tprint '<br>';\n\n\tprint '</td></tr>';\n}\n\n/**\n * Update total of sales order lines\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_price_commande($db, $langs, $conf)\n{\n\t$db->begin();\n\n\t$tmpmysoc = new Societe($db);\n\t$tmpmysoc->setMysoc($conf);\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationOrder').\"</b><br>\\n\";\n\n\t// List of sales orders lines not up to date\n\t$sql = \"SELECT cd.rowid, cd.qty, cd.subprice, cd.remise_percent, cd.tva_tx as vatrate, cd.info_bits,\";\n\t$sql .= \" c.rowid as commandeid, c.remise_percent as remise_percent_global\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"commandedet as cd, \".MAIN_DB_PREFIX.\"commande as c\";\n\t$sql .= \" WHERE cd.fk_commande = c.rowid\";\n\t$sql .= \" AND ((cd.total_ttc = 0 AND cd.remise_percent != 100) or cd.total_ttc IS NULL)\";\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_price_commande\");\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$rowid = $obj->rowid;\n\t\t\t\t$qty = $obj->qty;\n\t\t\t\t$pu = $obj->subprice;\n\t\t\t\t$vatrate = $obj->vatrate;\n\t\t\t\t$remise_percent = $obj->remise_percent;\n\t\t\t\t$remise_percent_global = $obj->remise_percent_global;\n\t\t\t\t$info_bits = $obj->info_bits;\n\n\t\t\t\t// On met a jour les 3 nouveaux champs\n\t\t\t\t$commandeligne = new OrderLine($db);\n\t\t\t\t$commandeligne->fetch($rowid);\n\n\t\t\t\t$result = calcul_price_total($qty, $pu, $remise_percent, $vatrate, 0, 0, $remise_percent_global, 'HT', $info_bits, $commandeligne->product_type, $tmpmysoc);\n\t\t\t\t$total_ht  = $result[0];\n\t\t\t\t$total_tva = $result[1];\n\t\t\t\t$total_ttc = $result[2];\n\n\t\t\t\t$commandeligne->total_ht  = $total_ht;\n\t\t\t\t$commandeligne->total_tva = $total_tva;\n\t\t\t\t$commandeligne->total_ttc = $total_ttc;\n\n\t\t\t\tdolibarr_install_syslog(\"upgrade2: Line \".$rowid.\" : commandeid=\".$obj->rowid.\" pu=\".$pu.\" qty=\".$qty.\" vatrate=\".$vatrate.\" remise_percent=\".$remise_percent.\" remise_global=\".$remise_percent_global.\"  -> \".$total_ht.\", \".$total_tva.\", \".$total_ttc);\n\t\t\t\tprint \". \";\n\t\t\t\t$commandeligne->update_total();\n\n\t\t\t\t/* On touche pas a facture mere\n\t\t\t\t $commande = new Commande($db);\n\t\t\t\t $commande->id = $obj->rowid;\n\t\t\t\t if ( $commande->fetch($commande->id) >= 0 )\n\t\t\t\t {\n\t\t\t\t if ( $commande->update_price() > 0 )\n\t\t\t\t {\n\t\t\t\t print \". \";\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t print \"Error id=\".$commande->id;\n\t\t\t\t }\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t print \"Error #3\";\n\t\t\t\t }\n\t\t\t\t */\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans(\"AlreadyDone\");\n\t\t}\n\n\t\t$db->free($resql);\n\n\t\t/*\n\t\t $sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"commandedet\";\n\t\t $sql.= \" WHERE price = 0 and total_ttc = 0 and total_tva = 0 and total_ht = 0 AND remise_percent = 0\";\n\t\t $resql=$db->query($sql);\n\t\t if (! $resql)\n\t\t {\n\t\t dol_print_error($db);\n\t\t }\n\t\t */\n\n\t\t$db->commit();\n\t} else {\n\t\tprint \"Error #1 \".$db->error();\n\n\t\t$db->rollback();\n\t}\n\n\tprint '<br>';\n\n\tprint '</td></tr>';\n}\n\n/**\n * Update total of purchase order lines\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_price_commande_fournisseur($db, $langs, $conf)\n{\n\t$db->begin();\n\n\t$tmpmysoc = new Societe($db);\n\t$tmpmysoc->setMysoc($conf);\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationSupplierOrder').\"</b><br>\\n\";\n\n\t// List of purchase order lines not up to date\n\t$sql = \"SELECT cd.rowid, cd.qty, cd.subprice, cd.remise_percent, cd.tva_tx as vatrate, cd.info_bits,\";\n\t$sql .= \" c.rowid as commandeid, c.remise_percent as remise_percent_global\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"commande_fournisseurdet as cd, \".MAIN_DB_PREFIX.\"commande_fournisseur as c\";\n\t$sql .= \" WHERE cd.fk_commande = c.rowid\";\n\t$sql .= \" AND ((cd.total_ttc = 0 AND cd.remise_percent != 100) or cd.total_ttc IS NULL)\";\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_price_commande_fournisseur\");\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$rowid = $obj->rowid;\n\t\t\t\t$qty = $obj->qty;\n\t\t\t\t$pu = $obj->subprice;\n\t\t\t\t$vatrate = $obj->vatrate;\n\t\t\t\t$remise_percent = $obj->remise_percent;\n\t\t\t\t$remise_percent_global = $obj->remise_percent_global;\n\t\t\t\t$info_bits = $obj->info_bits;\n\n\t\t\t\t// On met a jour les 3 nouveaux champs\n\t\t\t\t$commandeligne = new CommandeFournisseurLigne($db);\n\t\t\t\t$commandeligne->fetch($rowid);\n\n\t\t\t\t$result = calcul_price_total($qty, $pu, $remise_percent, $vatrate, 0, 0, $remise_percent_global, 'HT', $info_bits, $commandeligne->product_type, $tmpsoc);\n\t\t\t\t$total_ht  = $result[0];\n\t\t\t\t$total_tva = $result[1];\n\t\t\t\t$total_ttc = $result[2];\n\n\t\t\t\t$commandeligne->total_ht  = $total_ht;\n\t\t\t\t$commandeligne->total_tva = $total_tva;\n\t\t\t\t$commandeligne->total_ttc = $total_ttc;\n\n\t\t\t\tdolibarr_install_syslog(\"upgrade2: Line \".$rowid.\": commandeid=\".$obj->rowid.\" pu=\".$pu.\"  qty=\".$qty.\" vatrate=\".$vatrate.\" remise_percent=\".$remise_percent.\" remise_global=\".$remise_percent_global.\" -> \".$total_ht.\", \".$total_tva.\", \".$total_ttc);\n\t\t\t\tprint \". \";\n\t\t\t\t$commandeligne->update_total();\n\n\t\t\t\t/* On touche pas a facture mere\n\t\t\t\t $commande = new Commande($db);\n\t\t\t\t $commande->id = $obj->rowid;\n\t\t\t\t if ( $commande->fetch($commande->id) >= 0 )\n\t\t\t\t {\n\t\t\t\t if ( $commande->update_price() > 0 )\n\t\t\t\t {\n\t\t\t\t print \". \";\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t print \"Error id=\".$commande->id;\n\t\t\t\t }\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t print \"Error #3\";\n\t\t\t\t }\n\t\t\t\t */\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans(\"AlreadyDone\");\n\t\t}\n\n\t\t$db->free($resql);\n\n\t\t/*\n\t\t $sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"commande_fournisseurdet\";\n\t\t $sql.= \" WHERE subprice = 0 and total_ttc = 0 and total_tva = 0 and total_ht = 0\";\n\t\t $resql=$db->query($sql);\n\t\t if (! $resql)\n\t\t {\n\t\t dol_print_error($db);\n\t\t }\n\t\t */\n\n\t\t$db->commit();\n\t} else {\n\t\tprint \"Error #1 \".$db->error();\n\n\t\t$db->rollback();\n\t}\n\n\tprint '<br>';\n\n\tprint '</td></tr>';\n}\n\n/**\n * Mise a jour des modeles selectionnes\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_modeles($db, $langs, $conf)\n{\n\t//print '<br>';\n\t//print '<b>'.$langs->trans('UpdateModelsTable').\"</b><br>\\n\";\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_modeles\");\n\n\tif (!empty($conf->facture->enabled)) {\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/modules/facture/modules_facture.php';\n\t\t$modellist = ModelePDFFactures::liste_modeles($db);\n\t\tif (count($modellist) == 0) {\n\t\t\t// Aucun model par defaut.\n\t\t\t$sql = \" insert into \".MAIN_DB_PREFIX.\"document_model(nom,type) values('crabe','invoice')\";\n\t\t\t$resql = $db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!empty($conf->commande->enabled)) {\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/modules/commande/modules_commande.php';\n\t\t$modellist = ModelePDFCommandes::liste_modeles($db);\n\t\tif (count($modellist) == 0) {\n\t\t\t// Aucun model par defaut.\n\t\t\t$sql = \" insert into \".MAIN_DB_PREFIX.\"document_model(nom,type) values('einstein','order')\";\n\t\t\t$resql = $db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!empty($conf->expedition->enabled)) {\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/modules/expedition/modules_expedition.php';\n\t\t$modellist = ModelePDFExpedition::liste_modeles($db);\n\t\tif (count($modellist) == 0) {\n\t\t\t// Aucun model par defaut.\n\t\t\t$sql = \" insert into \".MAIN_DB_PREFIX.\"document_model(nom,type) values('rouget','shipping')\";\n\t\t\t$resql = $db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t}\n\t}\n\n\t//print $langs->trans(\"AlreadyDone\");\n}\n\n\n/**\n * Correspondance des expeditions et des commandes clients dans la table llx_co_exp\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_commande_expedition($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_commande_expedition\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationShipmentOrderMatching').\"</b><br>\\n\";\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"expedition\", \"fk_commande\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t$error = 0;\n\n\t\t$db->begin();\n\n\t\t$sql = \"SELECT e.rowid, e.fk_commande FROM \".MAIN_DB_PREFIX.\"expedition as e\";\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"co_exp (fk_expedition,fk_commande)\";\n\t\t\t\t\t$sql .= \" VALUES (\".((int) $obj->rowid).\", \".((int) $obj->fk_commande).\")\";\n\t\t\t\t\t$resql2 = $db->query($sql);\n\n\t\t\t\t\tif (!$resql2) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$db->commit();\n\t\t\t\t$sql = \"ALTER TABLE \".MAIN_DB_PREFIX.\"expedition DROP COLUMN fk_commande\";\n\t\t\t\tprint $langs->trans('FieldRenamed').\"<br>\\n\";\n\t\t\t\t$db->query($sql);\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\tprint '</td></tr>';\n}\n\n/**\n * Correspondance des livraisons et des commandes clients dans la table llx_co_liv\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_commande_livraison($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_commande_livraison\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationDeliveryOrderMatching').\"</b><br>\\n\";\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"livraison\", \"fk_commande\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t$error = 0;\n\n\t\t$db->begin();\n\n\t\t$sql = \"SELECT l.rowid, l.fk_commande,\";\n\t\t$sql .= \" c.ref_client, c.date_livraison as delivery_date\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"livraison as l, \".MAIN_DB_PREFIX.\"commande as c\";\n\t\t$sql .= \" WHERE c.rowid = l.fk_commande\";\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"co_liv (fk_livraison,fk_commande)\";\n\t\t\t\t\t$sql .= \" VALUES (\".((int) $obj->rowid).\", \".((int) $obj->fk_commande).\")\";\n\t\t\t\t\t$resql2 = $db->query($sql);\n\n\t\t\t\t\tif ($resql2) {\n\t\t\t\t\t\t$delivery_date = $db->jdate($obj->delivery_date);\n\n\t\t\t\t\t\t$sqlu = \"UPDATE \".MAIN_DB_PREFIX.\"livraison SET\";\n\t\t\t\t\t\t$sqlu .= \" ref_client = '\".$db->escape($obj->ref_client).\"'\";\n\t\t\t\t\t\t$sqlu .= \", date_livraison = '\".$db->idate($delivery_date).\"'\";\n\t\t\t\t\t\t$sqlu .= \" WHERE rowid = \".((int) $obj->rowid);\n\t\t\t\t\t\t$resql3 = $db->query($sqlu);\n\t\t\t\t\t\tif (!$resql3) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$db->commit();\n\t\t\t\t$sql = \"ALTER TABLE \".MAIN_DB_PREFIX.\"livraison DROP COLUMN fk_commande\";\n\t\t\t\tprint $langs->trans('FieldRenamed').\"<br>\\n\";\n\t\t\t\t$db->query($sql);\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\tprint '</td></tr>';\n}\n\n/**\n * Migration des details commandes dans les details livraisons\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_detail_livraison($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_detail_livraison\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationDeliveryDetail').\"</b><br>\\n\";\n\n\t// This is done if field fk_commande_ligne exists.\n\t// If not this means migration was already done.\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"livraisondet\", \"fk_commande_ligne\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t$error = 0;\n\n\t\t$db->begin();\n\n\t\t$sql = \"SELECT cd.rowid, cd.fk_product, cd.description, cd.subprice, cd.total_ht\";\n\t\t$sql .= \", ld.fk_livraison\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"commandedet as cd, \".MAIN_DB_PREFIX.\"livraisondet as ld\";\n\t\t$sql .= \" WHERE ld.fk_commande_ligne = cd.rowid\";\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"livraisondet SET\";\n\t\t\t\t\t$sql .= \" fk_product = \".((int) $obj->fk_product);\n\t\t\t\t\t$sql .= \",description = '\".$db->escape($obj->description).\"'\";\n\t\t\t\t\t$sql .= \",subprice = \".price2num($obj->subprice);\n\t\t\t\t\t$sql .= \",total_ht = \".price2num($obj->total_ht);\n\t\t\t\t\t$sql .= \" WHERE fk_commande_ligne = \".((int) $obj->rowid);\n\t\t\t\t\t$resql2 = $db->query($sql);\n\n\t\t\t\t\tif ($resql2) {\n\t\t\t\t\t\t$sql = \"SELECT total_ht\";\n\t\t\t\t\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"livraison\";\n\t\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->fk_livraison);\n\t\t\t\t\t\t$resql3 = $db->query($sql);\n\n\t\t\t\t\t\tif ($resql3) {\n\t\t\t\t\t\t\t$obju = $db->fetch_object($resql3);\n\t\t\t\t\t\t\t$total_ht = $obju->total_ht + $obj->total_ht;\n\n\t\t\t\t\t\t\t$sqlu = \"UPDATE \".MAIN_DB_PREFIX.\"livraison SET\";\n\t\t\t\t\t\t\t$sqlu .= \" total_ht = \".price2num($total_ht, 'MT');\n\t\t\t\t\t\t\t$sqlu .= \" WHERE rowid = \".((int) $obj->fk_livraison);\n\t\t\t\t\t\t\t$resql4 = $db->query($sqlu);\n\t\t\t\t\t\t\tif (!$resql4) {\n\t\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$db->commit();\n\t\t\t\t$sql = \"ALTER TABLE \".MAIN_DB_PREFIX.\"livraisondet CHANGE fk_commande_ligne fk_origin_line integer\";\n\t\t\t\tprint $langs->trans('FieldRenamed').\"<br>\\n\";\n\t\t\t\t$db->query($sql);\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"livraisondet\", \"fk_origin_line\");\n\t\t$obj = $db->fetch_object($result);\n\t\tif (!$obj) {\n\t\t\t$sql = \"ALTER TABLE \".MAIN_DB_PREFIX.\"livraisondet ADD COLUMN fk_origin_line integer after fk_livraison\";\n\t\t\t$db->query($sql);\n\t\t}\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\tprint '</td></tr>';\n}\n\n/**\n * Migration du champ stock dans produits\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_stocks($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_stocks\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationStockDetail').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\t$db->begin();\n\n\t$sql = \"SELECT SUM(reel) as total, fk_product\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"product_stock as ps\";\n\t$sql .= \" GROUP BY fk_product\";\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"product SET\";\n\t\t\t\t$sql .= \" stock = \".price2num($obj->total, 'MS');\n\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->fk_product);\n\n\t\t\t\t$resql2 = $db->query($sql);\n\t\t\t\tif ($resql2) {\n\t\t\t\t} else {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\n\t\tif ($error == 0) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migration of menus (use only 1 table instead of 3)\n * 2.6 -> 2.7\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_menus($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_menus\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationMenusDetail').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tif ($db->DDLInfoTable(MAIN_DB_PREFIX.\"menu_constraint\")) {\n\t\t$db->begin();\n\n\t\t$sql = \"SELECT m.rowid, mc.action\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"menu_constraint as mc, \".MAIN_DB_PREFIX.\"menu_const as md, \".MAIN_DB_PREFIX.\"menu as m\";\n\t\t$sql .= \" WHERE md.fk_menu = m.rowid AND md.fk_constraint = mc.rowid\";\n\t\t$sql .= \" AND m.enabled = '1'\";\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"menu SET\";\n\t\t\t\t\t$sql .= \" enabled = '\".$db->escape($obj->action).\"'\";\n\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->rowid);\n\t\t\t\t\t$sql .= \" AND enabled = '1'\";\n\n\t\t\t\t\t$resql2 = $db->query($sql);\n\t\t\t\t\tif ($resql2) {\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$db->commit();\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migration du champ fk_adresse_livraison dans expedition\n * 2.6 -> 2.7\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_commande_deliveryaddress($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_commande_deliveryaddress\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationDeliveryAddress').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tif ($db->DDLInfoTable(MAIN_DB_PREFIX.\"co_exp\")) {\n\t\t$db->begin();\n\n\t\t$sql = \"SELECT c.fk_adresse_livraison, ce.fk_expedition\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"commande as c\";\n\t\t$sql .= \", \".MAIN_DB_PREFIX.\"co_exp as ce\";\n\t\t$sql .= \" WHERE c.rowid = ce.fk_commande\";\n\t\t$sql .= \" AND c.fk_adresse_livraison IS NOT NULL AND c.fk_adresse_livraison != 0\";\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"expedition SET\";\n\t\t\t\t\t$sql .= \" fk_adresse_livraison = '\".$db->escape($obj->fk_adresse_livraison).\"'\";\n\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->fk_expedition);\n\n\t\t\t\t\t$resql2 = $db->query($sql);\n\t\t\t\t\tif (!$resql2) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$db->commit();\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migration du champ fk_remise_except dans llx_facturedet doit correspondre a\n * lien dans llx_societe_remise_except vers llx_facturedet\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tinteger|null\n */\nfunction migrate_restore_missing_links($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_restore_missing_links\");\n\n\tif (($db->type == 'mysql' || $db->type == 'mysqli')) {\n\t\tif (versioncompare($db->getVersionArray(), array(4, 0)) < 0) {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_restore_missing_links Version of database too old to make this migrate action\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationFixData').\"</b> (1)<br>\\n\";\n\n\t$error = 0;\n\n\n\t// Restore missing link for this cross foreign key (link 1 <=> 1). Direction 1.\n\t$table1 = 'facturedet'; $field1 = 'fk_remise_except';\n\t$table2 = 'societe_remise_except'; $field2 = 'fk_facture_line';\n\n\t$db->begin();\n\n\t$sql = \"SELECT t1.rowid, t1.\".$field1.\" as field\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.$table1.\" as t1\";\n\t$sql .= \" WHERE t1.\".$field1.\" IS NOT NULL AND t1.\".$field1.\" NOT IN\";\n\t$sql .= \" (SELECT t2.rowid FROM \".MAIN_DB_PREFIX.$table2.\" as t2\";\n\t$sql .= \" WHERE t1.rowid = t2.\".$field2.\")\";\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_restore_missing_links DIRECTION 1\");\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\tprint 'Line '.$obj->rowid.' in '.$table1.' is linked to record '.$obj->field.' in '.$table2.' that has no link to '.$table1.'. We fix this.<br>';\n\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.$table2.\" SET\";\n\t\t\t\t$sql .= \" \".$field2.\" = '\".$db->escape($obj->rowid).\"'\";\n\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->field);\n\n\t\t\t\t$resql2 = $db->query($sql);\n\t\t\t\tif (!$resql2) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\t\t\t\t//print \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif ($error == 0) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\tprint '</td></tr>';\n\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationFixData').\"</b> (2)<br>\\n\";\n\n\t// Restore missing link for this cross foreign key (link 1 <=> 1). Direction 2.\n\t$table2 = 'facturedet'; $field2 = 'fk_remise_except';\n\t$table1 = 'societe_remise_except'; $field1 = 'fk_facture_line';\n\n\t$db->begin();\n\n\t$sql = \"SELECT t1.rowid, t1.\".$field1.\" as field\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.$table1.\" as t1\";\n\t$sql .= \" WHERE t1.\".$field1.\" IS NOT NULL AND t1.\".$field1.\" NOT IN\";\n\t$sql .= \" (SELECT t2.rowid FROM \".MAIN_DB_PREFIX.$table2.\" as t2\";\n\t$sql .= \" WHERE t1.rowid = t2.\".$field2.\")\";\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_restore_missing_links DIRECTION 2\");\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\tprint 'Line '.$obj->rowid.' in '.$table1.' is linked to record '.$obj->field.' in '.$table2.' that has no link to '.$table1.'. We fix this.<br>';\n\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.$table2.\" SET\";\n\t\t\t\t$sql .= \" \".$field2.\" = '\".$db->escape($obj->rowid).\"'\";\n\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->field);\n\n\t\t\t\t$resql2 = $db->query($sql);\n\t\t\t\tif (!$resql2) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\t\t\t\t//print \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif ($error == 0) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migration du champ fk_user_resp de llx_projet vers llx_element_contact\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_project_user_resp($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_project_user_resp\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationProjectUserResp').\"</b><br>\\n\";\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"projet\", \"fk_user_resp\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t$error = 0;\n\n\t\t$db->begin();\n\n\t\t$sql = \"SELECT rowid, fk_user_resp FROM \".MAIN_DB_PREFIX.\"projet\";\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sql2 = \"INSERT INTO \".MAIN_DB_PREFIX.\"element_contact (\";\n\t\t\t\t\t$sql2 .= \"datecreate\";\n\t\t\t\t\t$sql2 .= \", statut\";\n\t\t\t\t\t$sql2 .= \", element_id\";\n\t\t\t\t\t$sql2 .= \", fk_c_type_contact\";\n\t\t\t\t\t$sql2 .= \", fk_socpeople\";\n\t\t\t\t\t$sql2 .= \") VALUES (\";\n\t\t\t\t\t$sql2 .= \"'\".$db->idate(dol_now()).\"'\";\n\t\t\t\t\t$sql2 .= \", '4'\";\n\t\t\t\t\t$sql2 .= \", \".$obj->rowid;\n\t\t\t\t\t$sql2 .= \", '160'\";\n\t\t\t\t\t$sql2 .= \", \".$obj->fk_user_resp;\n\t\t\t\t\t$sql2 .= \")\";\n\n\t\t\t\t\tif ($obj->fk_user_resp > 0) {\n\t\t\t\t\t\t$resql2 = $db->query($sql2);\n\t\t\t\t\t\tif (!$resql2) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$sqlDrop = \"ALTER TABLE \".MAIN_DB_PREFIX.\"projet DROP COLUMN fk_user_resp\";\n\t\t\t\tif ($db->query($sqlDrop)) {\n\t\t\t\t\t$db->commit();\n\t\t\t\t} else {\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\tprint '</td></tr>';\n}\n\n/**\n * Migration de la table llx_projet_task_actors vers llx_element_contact\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_project_task_actors($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_project_task_actors\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationProjectTaskActors').\"</b><br>\\n\";\n\n\tif ($db->DDLInfoTable(MAIN_DB_PREFIX.\"projet_task_actors\")) {\n\t\t$error = 0;\n\n\t\t$db->begin();\n\n\t\t$sql = \"SELECT fk_projet_task as fk_project_task, fk_user FROM \".MAIN_DB_PREFIX.\"projet_task_actors\";\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sql2 = \"INSERT INTO \".MAIN_DB_PREFIX.\"element_contact (\";\n\t\t\t\t\t$sql2 .= \"datecreate\";\n\t\t\t\t\t$sql2 .= \", statut\";\n\t\t\t\t\t$sql2 .= \", element_id\";\n\t\t\t\t\t$sql2 .= \", fk_c_type_contact\";\n\t\t\t\t\t$sql2 .= \", fk_socpeople\";\n\t\t\t\t\t$sql2 .= \") VALUES (\";\n\t\t\t\t\t$sql2 .= \"'\".$db->idate(dol_now()).\"'\";\n\t\t\t\t\t$sql2 .= \", '4'\";\n\t\t\t\t\t$sql2 .= \", \".$obj->fk_project_task;\n\t\t\t\t\t$sql2 .= \", '180'\";\n\t\t\t\t\t$sql2 .= \", \".$obj->fk_user;\n\t\t\t\t\t$sql2 .= \")\";\n\n\t\t\t\t\t$resql2 = $db->query($sql2);\n\n\t\t\t\t\tif (!$resql2) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$sqlDrop = \"DROP TABLE \".MAIN_DB_PREFIX.\"projet_task_actors\";\n\t\t\t\tif ($db->query($sqlDrop)) {\n\t\t\t\t\t$db->commit();\n\t\t\t\t} else {\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\tprint '</td></tr>';\n}\n\n/**\n * Migration des tables de relation\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @param\tstring\t\t$table\t\t\tTable name\n * @param\tint\t\t\t$fk_source\t\tId of element source\n * @param\tstring\t\t$sourcetype\t\tType of element source\n * @param\tint\t\t\t$fk_target\t\tId of element target\n * @param\tstring\t\t$targettype\t\tType of element target\n * @return\tvoid\n */\nfunction migrate_relationship_tables($db, $langs, $conf, $table, $fk_source, $sourcetype, $fk_target, $targettype)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationRelationshipTables', MAIN_DB_PREFIX.$table).\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tif ($db->DDLInfoTable(MAIN_DB_PREFIX.$table)) {\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_relationship_tables table = \".MAIN_DB_PREFIX.$table);\n\n\t\t$db->begin();\n\n\t\t$sqlSelect = \"SELECT \".$fk_source.\", \".$fk_target;\n\t\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.$table;\n\n\t\t$resql = $db->query($sqlSelect);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sqlInsert = \"INSERT INTO \".MAIN_DB_PREFIX.\"element_element (\";\n\t\t\t\t\t$sqlInsert .= \"fk_source\";\n\t\t\t\t\t$sqlInsert .= \", sourcetype\";\n\t\t\t\t\t$sqlInsert .= \", fk_target\";\n\t\t\t\t\t$sqlInsert .= \", targettype\";\n\t\t\t\t\t$sqlInsert .= \") VALUES (\";\n\t\t\t\t\t$sqlInsert .= $obj->$fk_source;\n\t\t\t\t\t$sqlInsert .= \", '\".$db->escape($sourcetype).\"'\";\n\t\t\t\t\t$sqlInsert .= \", \".$obj->$fk_target;\n\t\t\t\t\t$sqlInsert .= \", '\".$db->escape($targettype).\"'\";\n\t\t\t\t\t$sqlInsert .= \")\";\n\n\t\t\t\t\t$result = $db->query($sqlInsert);\n\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$sqlDrop = \"DROP TABLE \".MAIN_DB_PREFIX.$table;\n\t\t\t\tif ($db->query($sqlDrop)) {\n\t\t\t\t\t$db->commit();\n\t\t\t\t} else {\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate duration in seconds\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_project_task_time($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_project_task_time\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationProjectTaskTime').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\t$db->begin();\n\n\t$sql = \"SELECT rowid, fk_task, task_duration\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"projet_task_time\";\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\t$totaltime = array();\n\t\t\t$oldtime = 0;\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\tif ($obj->task_duration > 0) {\n\t\t\t\t\t// convert to second\n\t\t\t\t\t// only for int time and float time ex: 1,75 for 1h45\n\t\t\t\t\tlist($hour, $min) = explode('.', $obj->task_duration);\n\t\t\t\t\t$hour = $hour * 60 * 60;\n\t\t\t\t\t$min = ($min / 100) * 60 * 60;\n\t\t\t\t\t$newtime = $hour + $min;\n\n\t\t\t\t\t$sql2 = \"UPDATE \".MAIN_DB_PREFIX.\"projet_task_time SET\";\n\t\t\t\t\t$sql2 .= \" task_duration = \".((int) $newtime);\n\t\t\t\t\t$sql2 .= \" WHERE rowid = \".((int) $obj->rowid);\n\n\t\t\t\t\t$resql2 = $db->query($sql2);\n\t\t\t\t\tif (!$resql2) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$oldtime++;\n\t\t\t\t\tif (!empty($totaltime[$obj->fk_task])) {\n\t\t\t\t\t\t$totaltime[$obj->fk_task] += $newtime;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$totaltime[$obj->fk_task] = $newtime;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($totaltime[$obj->fk_task])) {\n\t\t\t\t\t\t$totaltime[$obj->fk_task] += $obj->task_duration;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$totaltime[$obj->fk_task] = $obj->task_duration;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\tif ($oldtime > 0) {\n\t\t\t\t\tforeach ($totaltime as $taskid => $total_duration) {\n\t\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"projet_task SET\";\n\t\t\t\t\t\t$sql .= \" duration_effective = \".((int) $total_duration);\n\t\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $taskid);\n\n\t\t\t\t\t\t$resql = $db->query($sql);\n\t\t\t\t\t\tif (!$resql) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t}\n\n\tif ($error == 0) {\n\t\t$db->commit();\n\t} else {\n\t\t$db->rollback();\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate order ref_customer and date_delivery fields to llx_expedition\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_customerorder_shipping($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationCustomerOrderShipping').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\t$result1 = $db->DDLDescTable(MAIN_DB_PREFIX.\"expedition\", \"ref_customer\");\n\t$result2 = $db->DDLDescTable(MAIN_DB_PREFIX.\"expedition\", \"date_delivery\");\n\t$obj1 = $db->fetch_object($result1);\n\t$obj2 = $db->fetch_object($result2);\n\tif (!$obj1 && !$obj2) {\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_customerorder_shipping\");\n\n\t\t$db->begin();\n\n\t\t$sqlAdd1 = \"ALTER TABLE \".MAIN_DB_PREFIX.\"expedition ADD COLUMN ref_customer varchar(30) AFTER entity\";\n\t\t$sqlAdd2 = \"ALTER TABLE \".MAIN_DB_PREFIX.\"expedition ADD COLUMN date_delivery date DEFAULT NULL AFTER date_expedition\";\n\n\t\tif ($db->query($sqlAdd1) && $db->query($sqlAdd2)) {\n\t\t\t$sqlSelect = \"SELECT e.rowid as shipping_id, c.ref_client, c.date_livraison as delivery_date\";\n\t\t\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"expedition as e\";\n\t\t\t$sqlSelect .= \", \".MAIN_DB_PREFIX.\"element_element as el\";\n\t\t\t$sqlSelect .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"commande as c ON c.rowid = el.fk_source AND el.sourcetype = 'commande'\";\n\t\t\t$sqlSelect .= \" WHERE e.rowid = el.fk_target\";\n\t\t\t$sqlSelect .= \" AND el.targettype = 'shipping'\";\n\n\t\t\t$resql = $db->query($sqlSelect);\n\t\t\tif ($resql) {\n\t\t\t\t$i = 0;\n\t\t\t\t$num = $db->num_rows($resql);\n\n\t\t\t\tif ($num) {\n\t\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"expedition SET\";\n\t\t\t\t\t\t$sqlUpdate .= \" ref_customer = '\".$db->escape($obj->ref_client).\"'\";\n\t\t\t\t\t\t$sqlUpdate .= \", date_delivery = '\".$db->escape($obj->delivery_date ? $obj->delivery_date : 'null').\"'\";\n\t\t\t\t\t\t$sqlUpdate .= \" WHERE rowid = \".((int) $obj->shipping_id);\n\n\t\t\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint \". \";\n\t\t\t\t\t\t$i++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t\t\t}\n\n\t\t\t\tif ($error == 0) {\n\t\t\t\t\t$db->commit();\n\t\t\t\t} else {\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdol_print_error($db);\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate link stored into fk_expedition into llx_element_element\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_shipping_delivery($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationShippingDelivery').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"livraison\", \"fk_expedition\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_shipping_delivery\");\n\n\t\t$db->begin();\n\n\t\t$sqlSelect = \"SELECT rowid, fk_expedition\";\n\t\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"livraison\";\n\t\t$sqlSelect .= \" WHERE fk_expedition is not null\";\n\n\t\t$resql = $db->query($sqlSelect);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sqlInsert = \"INSERT INTO \".MAIN_DB_PREFIX.\"element_element (\";\n\t\t\t\t\t$sqlInsert .= \"fk_source\";\n\t\t\t\t\t$sqlInsert .= \", sourcetype\";\n\t\t\t\t\t$sqlInsert .= \", fk_target\";\n\t\t\t\t\t$sqlInsert .= \", targettype\";\n\t\t\t\t\t$sqlInsert .= \") VALUES (\";\n\t\t\t\t\t$sqlInsert .= $obj->fk_expedition;\n\t\t\t\t\t$sqlInsert .= \", 'shipping'\";\n\t\t\t\t\t$sqlInsert .= \", \".$obj->rowid;\n\t\t\t\t\t$sqlInsert .= \", 'delivery'\";\n\t\t\t\t\t$sqlInsert .= \")\";\n\n\t\t\t\t\t$result = $db->query($sqlInsert);\n\t\t\t\t\tif ($result) {\n\t\t\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"livraison SET fk_expedition = NULL\";\n\t\t\t\t\t\t$sqlUpdate .= \" WHERE rowid = \".((int) $obj->rowid);\n\n\t\t\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint \". \";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$sqlDelete = \"DELETE FROM \".MAIN_DB_PREFIX.\"element_element WHERE sourcetype = 'commande' AND targettype = 'delivery'\";\n\t\t\t\t$db->query($sqlDelete);\n\n\t\t\t\t$db->commit();\n\n\t\t\t\t// DDL commands must not be inside a transaction\n\t\t\t\t$sqlDrop = \"ALTER TABLE \".MAIN_DB_PREFIX.\"livraison DROP COLUMN fk_expedition\";\n\t\t\t\t$db->query($sqlDrop);\n\t\t\t} else {\n\t\t\t\tdol_print_error($db);\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * We try to complete field ref_customer and date_delivery that are empty into llx_livraison.\n * We set them with value from llx_expedition.\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_shipping_delivery2($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationShippingDelivery2').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_shipping_delivery2\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT l.rowid as delivery_id, e.ref_customer, e.date_delivery\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"livraison as l,\";\n\t$sqlSelect .= \" \".MAIN_DB_PREFIX.\"element_element as el,\";\n\t$sqlSelect .= \" \".MAIN_DB_PREFIX.\"expedition as e\";\n\t$sqlSelect .= \" WHERE l.rowid = el.fk_target\";\n\t$sqlSelect .= \" AND el.targettype = 'delivery'\";\n\t$sqlSelect .= \" AND e.rowid = el.fk_source AND el.sourcetype = 'shipping'\";\n\t$sqlSelect .= \" AND (e.ref_customer IS NOT NULL OR e.date_delivery IS NOT NULL)\"; // Useless to process this record if both are null\n\t// Add condition to know if we never migrate this record\n\t$sqlSelect .= \" AND (l.ref_customer IS NULL\".($db->type != 'pgsql' ? \" or l.ref_customer = ''\" : \"\").\")\";\n\t$sqlSelect .= \" AND (l.date_delivery IS NULL\".($db->type != 'pgsql' ? \" or l.date_delivery = ''\" : \"\").\")\";\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"livraison SET\";\n\t\t\t\t$sqlUpdate .= \" ref_customer = '\".$db->escape($obj->ref_customer).\"',\";\n\t\t\t\t$sqlUpdate .= \" date_delivery = \".($obj->date_delivery ? \"'\".$db->escape($obj->date_delivery).\"'\" : 'null');\n\t\t\t\t$sqlUpdate .= \" WHERE rowid = \".((int) $obj->delivery_id);\n\n\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\tif (!$result) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif ($error == 0) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate link stored into fk_xxxx into fk_element and elementtype\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_actioncomm_element($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationActioncommElement').\"</b><br>\\n\";\n\n\t$elements = array(\n\t\t'propal' => 'propalrowid',\n\t\t'order' => 'fk_commande',\n\t\t'invoice' => 'fk_facture',\n\t\t'contract' => 'fk_contract',\n\t\t'order_supplier' => 'fk_supplier_order',\n\t\t'invoice_supplier' => 'fk_supplier_invoice'\n\t);\n\n\tforeach ($elements as $type => $field) {\n\t\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"actioncomm\", $field);\n\t\t$obj = $db->fetch_object($result);\n\t\tif ($obj) {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_actioncomm_element field=\".$field);\n\n\t\t\t$db->begin();\n\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"actioncomm SET \";\n\t\t\t$sql .= \"fk_element = \".$field.\", elementtype = '\".$db->escape($type).\"'\";\n\t\t\t$sql .= \" WHERE \".$field.\" IS NOT NULL\";\n\t\t\t$sql .= \" AND fk_element IS NULL\";\n\t\t\t$sql .= \" AND elementtype IS NULL\";\n\n\t\t\t$resql = $db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$db->commit();\n\n\t\t\t\t// DDL commands must not be inside a transaction\n\t\t\t\t// We will drop at next version because a migrate should be runnable several times if it fails.\n\t\t\t\t//$sqlDrop = \"ALTER TABLE \".MAIN_DB_PREFIX.\"actioncomm DROP COLUMN \".$field;\n\t\t\t\t//$db->query($sqlDrop);\n\t\t\t\t//print \". \";\n\t\t\t} else {\n\t\t\t\tdol_print_error($db);\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate link stored into fk_mode_reglement\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_mode_reglement($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationPaymentMode').\"</b><br>\\n\";\n\n\t$elements = array(\n\t\t'old_id' => array(5, 8, 9, 10, 11),\n\t\t'new_id' => array(50, 51, 52, 53, 54),\n\t\t'code' => array('VAD', 'TRA', 'LCR', 'FAC', 'PRO'),\n\t\t'tables' => array('commande_fournisseur', 'commande', 'facture_rec', 'facture', 'propal')\n\t);\n\t$count = 0;\n\n\tforeach ($elements['old_id'] as $key => $old_id) {\n\t\t$error = 0;\n\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_mode_reglement code=\".$elements['code'][$key]);\n\n\t\t$sqlSelect = \"SELECT id\";\n\t\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"c_paiement\";\n\t\t$sqlSelect .= \" WHERE id = \".((int) $old_id);\n\t\t$sqlSelect .= \" AND code = '\".$db->escape($elements['code'][$key]).\"'\";\n\n\t\t$resql = $db->query($sqlSelect);\n\t\tif ($resql) {\n\t\t\t$num = $db->num_rows($resql);\n\t\t\tif ($num) {\n\t\t\t\t$count++;\n\n\t\t\t\t$db->begin();\n\n\t\t\t\t$sqla = \"UPDATE \".MAIN_DB_PREFIX.\"paiement SET\";\n\t\t\t\t$sqla .= \" fk_paiement = \".((int) $elements['new_id'][$key]);\n\t\t\t\t$sqla .= \" WHERE fk_paiement = \".((int) $old_id);\n\t\t\t\t$sqla .= \" AND fk_paiement IN (SELECT id FROM \".MAIN_DB_PREFIX.\"c_paiement WHERE id = \".((int) $old_id).\" AND code = '\".$db->escape($elements['code'][$key]).\"')\";\n\t\t\t\t$resqla = $db->query($sqla);\n\n\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"c_paiement SET\";\n\t\t\t\t$sql .= \" id = \".((int) $elements['new_id'][$key]);\n\t\t\t\t$sql .= \" WHERE id = \".((int) $old_id);\n\t\t\t\t$sql .= \" AND code = '\".$db->escape($elements['code'][$key]).\"'\";\n\t\t\t\t$resql = $db->query($sql);\n\n\t\t\t\tif ($resqla && $resql) {\n\t\t\t\t\tforeach ($elements['tables'] as $table) {\n\t\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.$table.\" SET \";\n\t\t\t\t\t\t$sql .= \"fk_mode_reglement = \".((int) $elements['new_id'][$key]);\n\t\t\t\t\t\t$sql .= \" WHERE fk_mode_reglement = \".((int) $old_id);\n\n\t\t\t\t\t\t$resql = $db->query($sql);\n\t\t\t\t\t\tif (!$resql) {\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint \". \";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!$error) {\n\t\t\t\t\t\t$db->commit();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t$db->rollback();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($count == 0) {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\n\n\tprint '</td></tr>';\n}\n\n\n/**\n * Delete duplicates in table categorie_association\n *\n * @param\tDoliDB\t\t$db\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\tObject langs\n * @param\tConf\t\t$conf\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_clean_association($db, $langs, $conf)\n{\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"categorie_association\");\n\tif ($result) {\t// result defined for version 3.2 or -\n\t\t$obj = $db->fetch_object($result);\n\t\tif ($obj) {\t// It table categorie_association exists\n\t\t\t$couples = array();\n\t\t\t$filles = array();\n\t\t\t$sql = \"SELECT fk_categorie_mere, fk_categorie_fille\";\n\t\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"categorie_association\";\n\t\t\tdolibarr_install_syslog(\"upgrade: search duplicate\");\n\t\t\t$resql = $db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$num = $db->num_rows($resql);\n\t\t\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t\t\tif (!isset($filles[$obj->fk_categorie_fille])) {\t// Only one record as child (a child has only on parent).\n\t\t\t\t\t\tif ($obj->fk_categorie_mere != $obj->fk_categorie_fille) {\n\t\t\t\t\t\t\t$filles[$obj->fk_categorie_fille] = 1; // Set record for this child\n\t\t\t\t\t\t\t$couples[$obj->fk_categorie_mere.'_'.$obj->fk_categorie_fille] = array('mere'=>$obj->fk_categorie_mere, 'fille'=>$obj->fk_categorie_fille);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdolibarr_install_syslog(\"upgrade: result is num=\".$num.\" count(couples)=\".count($couples));\n\n\t\t\t\t// If there is duplicates couples or child with two parents\n\t\t\t\tif (count($couples) > 0 && $num > count($couples)) {\n\t\t\t\t\t$error = 0;\n\n\t\t\t\t\t$db->begin();\n\n\t\t\t\t\t// We delete all\n\t\t\t\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"categorie_association\";\n\t\t\t\t\tdolibarr_install_syslog(\"upgrade: delete association\");\n\t\t\t\t\t$resqld = $db->query($sql);\n\t\t\t\t\tif ($resqld) {\n\t\t\t\t\t\t// And we insert only each record once\n\t\t\t\t\t\tforeach ($couples as $key => $val) {\n\t\t\t\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"categorie_association(fk_categorie_mere,fk_categorie_fille)\";\n\t\t\t\t\t\t\t$sql .= \" VALUES(\".((int) $val['mere']).\", \".((int) $val['fille']).\")\";\n\t\t\t\t\t\t\tdolibarr_install_syslog(\"upgrade: insert association\");\n\t\t\t\t\t\t\t$resqli = $db->query($sql);\n\t\t\t\t\t\t\tif (!$resqli) {\n\t\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!$error) {\n\t\t\t\t\t\tprint '<tr><td>'.$langs->trans(\"MigrationCategorieAssociation\").'</td>';\n\t\t\t\t\t\tprint '<td class=\"right\">'.$langs->trans(\"RemoveDuplicates\").' '.$langs->trans(\"Success\").' ('.$num.'=>'.count($couples).')</td></tr>';\n\t\t\t\t\t\t$db->commit();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<tr><td>'.$langs->trans(\"MigrationCategorieAssociation\").'</td>';\n\t\t\t\t\t\tprint '<td class=\"right\">'.$langs->trans(\"RemoveDuplicates\").' '.$langs->trans(\"Failed\").'</td></tr>';\n\t\t\t\t\t\t$db->rollback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"Error\").'</td>';\n\t\t\t\tprint '<td class=\"right\"><div class=\"error\">'.$db->lasterror().'</div></td></tr>';\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Migrate categorie association\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_categorie_association($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationCategorieAssociation').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tif ($db->DDLInfoTable(MAIN_DB_PREFIX.\"categorie_association\")) {\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_categorie_association\");\n\n\t\t$db->begin();\n\n\t\t$sqlSelect = \"SELECT fk_categorie_mere, fk_categorie_fille\";\n\t\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"categorie_association\";\n\n\t\t$resql = $db->query($sqlSelect);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"categorie SET \";\n\t\t\t\t\t$sqlUpdate .= \"fk_parent = \".((int) $obj->fk_categorie_mere);\n\t\t\t\t\t$sqlUpdate .= \" WHERE rowid = \".((int) $obj->fk_categorie_fille);\n\n\t\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t$db->commit();\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate event assignement to owner\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_event_assignement($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationEvents').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_event_assignement\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT a.id, a.fk_user_action\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"actioncomm as a\";\n\t$sqlSelect .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"actioncomm_resources as ar ON ar.fk_actioncomm = a.id AND ar.element_type = 'user' AND ar.fk_element = a.fk_user_action\";\n\t$sqlSelect .= \" WHERE fk_user_action > 0 AND fk_user_action NOT IN (SELECT fk_element FROM \".MAIN_DB_PREFIX.\"actioncomm_resources as ar WHERE ar.fk_actioncomm = a.id AND ar.element_type = 'user')\";\n\t$sqlSelect .= \" ORDER BY a.id\";\n\t//print $sqlSelect;\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sqlUpdate = \"INSERT INTO \".MAIN_DB_PREFIX.\"actioncomm_resources(fk_actioncomm, element_type, fk_element) \";\n\t\t\t\t$sqlUpdate .= \"VALUES(\".((int) $obj->id).\", 'user', \".((int) $obj->fk_user_action).\")\";\n\n\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\tif (!$result) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate event assignement to owner\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_event_assignement_contact($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationEventsContact').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_event_assignement\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT a.id, a.fk_contact\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"actioncomm as a\";\n\t$sqlSelect .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"actioncomm_resources as ar ON ar.fk_actioncomm = a.id AND ar.element_type = 'socpeople' AND ar.fk_element = a.fk_contact\";\n\t$sqlSelect .= \" WHERE fk_contact > 0 AND fk_contact NOT IN (SELECT fk_element FROM \".MAIN_DB_PREFIX.\"actioncomm_resources as ar WHERE ar.fk_actioncomm = a.id AND ar.element_type = 'socpeople')\";\n\t$sqlSelect .= \" ORDER BY a.id\";\n\t//print $sqlSelect;\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sqlUpdate = \"INSERT INTO \".MAIN_DB_PREFIX.\"actioncomm_resources(fk_actioncomm, element_type, fk_element) \";\n\t\t\t\t$sqlUpdate .= \"VALUES(\".((int) $obj->id).\", 'socpeople', \".((int) $obj->fk_contact).\")\";\n\n\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\tif (!$result) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\n\tprint '</td></tr>';\n}\n\n\n/**\n * Migrate to reset the blocked log for V7+ algorithm\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_reset_blocked_log($db, $langs, $conf)\n{\n\tglobal $user;\n\n\trequire_once DOL_DOCUMENT_ROOT.'/blockedlog/class/blockedlog.class.php';\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationResetBlockedLog').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_reset_blocked_log\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT DISTINCT entity\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"blockedlog\";\n\n\t//print $sqlSelect;\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\tprint 'Process entity '.$obj->entity;\n\n\t\t\t\t$sqlSearch = \"SELECT count(rowid) as nb FROM \".MAIN_DB_PREFIX.\"blockedlog WHERE action = 'MODULE_SET' and entity = \".((int) $obj->entity);\n\t\t\t\t$resqlSearch = $db->query($sqlSearch);\n\t\t\t\tif ($resqlSearch) {\n\t\t\t\t\t$objSearch = $db->fetch_object($resqlSearch);\n\t\t\t\t\t//var_dump($objSearch);\n\t\t\t\t\tif ($objSearch && $objSearch->nb == 0) {\n\t\t\t\t\t\tprint ' - Record for entity must be reset...';\n\n\t\t\t\t\t\t$sqlUpdate = \"DELETE FROM \".MAIN_DB_PREFIX.\"blockedlog\";\n\t\t\t\t\t\t$sqlUpdate .= \" WHERE entity = \".((int) $obj->entity);\n\t\t\t\t\t\t$resqlUpdate = $db->query($sqlUpdate);\n\t\t\t\t\t\tif (!$resqlUpdate) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Add set line\n\t\t\t\t\t\t\t$object = new stdClass();\n\t\t\t\t\t\t\t$object->id = 1;\n\t\t\t\t\t\t\t$object->element = 'module';\n\t\t\t\t\t\t\t$object->ref = 'systemevent';\n\t\t\t\t\t\t\t$object->entity = $obj->entity;\n\t\t\t\t\t\t\t$object->date = dol_now();\n\n\t\t\t\t\t\t\t$b = new BlockedLog($db);\n\t\t\t\t\t\t\t$b->setObjectData($object, 'MODULE_SET', 0);\n\n\t\t\t\t\t\t\t$res = $b->create($user);\n\t\t\t\t\t\t\tif ($res <= 0) {\n\t\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint ' - '.$langs->trans('AlreadyInV7').'<br>';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('NothingToDo').\"<br>\\n\";\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\tprint '</td></tr>';\n}\n\n\n/**\n * Migrate to add entity value into llx_societe_remise\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_remise_entity($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationRemiseEntity').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_remise_entity\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT sr.rowid, s.entity\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"societe_remise as sr, \".MAIN_DB_PREFIX.\"societe as s\";\n\t$sqlSelect .= \" WHERE sr.fk_soc = s.rowid and sr.entity != s.entity\";\n\n\t//print $sqlSelect;\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"societe_remise SET\";\n\t\t\t\t$sqlUpdate .= \" entity = \".$obj->entity;\n\t\t\t\t$sqlUpdate .= \" WHERE rowid = \".((int) $obj->rowid);\n\n\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\tif (!$result) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate to add entity value into llx_societe_remise_except\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_remise_except_entity($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationRemiseExceptEntity').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_remise_except_entity\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT sr.rowid, sr.fk_soc, sr.fk_facture_source, sr.fk_facture, sr.fk_facture_line\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"societe_remise_except as sr\";\n\t//print $sqlSelect;\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\tif (!empty($obj->fk_facture_source) || !empty($obj->fk_facture)) {\n\t\t\t\t\t$fk_facture = (!empty($obj->fk_facture_source) ? $obj->fk_facture_source : $obj->fk_facture);\n\n\t\t\t\t\t$sqlSelect2 = \"SELECT f.entity\";\n\t\t\t\t\t$sqlSelect2 .= \" FROM \".MAIN_DB_PREFIX.\"facture as f\";\n\t\t\t\t\t$sqlSelect2 .= \" WHERE f.rowid = \".((int) $fk_facture);\n\t\t\t\t} elseif (!empty($obj->fk_facture_line)) {\n\t\t\t\t\t$sqlSelect2 = \"SELECT f.entity\";\n\t\t\t\t\t$sqlSelect2 .= \" FROM \".MAIN_DB_PREFIX.\"facture as f, \".MAIN_DB_PREFIX.\"facturedet as fd\";\n\t\t\t\t\t$sqlSelect2 .= \" WHERE fd.rowid = \".((int) $obj->fk_facture_line);\n\t\t\t\t\t$sqlSelect2 .= \" AND fd.fk_facture = f.rowid\";\n\t\t\t\t} else {\n\t\t\t\t\t$sqlSelect2 = \"SELECT s.entity\";\n\t\t\t\t\t$sqlSelect2 .= \" FROM \".MAIN_DB_PREFIX.\"societe as s\";\n\t\t\t\t\t$sqlSelect2 .= \" WHERE s.rowid = \".((int) $obj->fk_soc);\n\t\t\t\t}\n\n\t\t\t\t$resql2 = $db->query($sqlSelect2);\n\t\t\t\tif ($resql2) {\n\t\t\t\t\tif ($db->num_rows($resql2) > 0) {\n\t\t\t\t\t\t$obj2 = $db->fetch_object($resql2);\n\n\t\t\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"societe_remise_except SET\";\n\t\t\t\t\t\t$sqlUpdate .= \" entity = \".((int) $obj2->entity);\n\t\t\t\t\t\t$sqlUpdate .= \" WHERE rowid = \".((int) $obj->rowid);\n\n\t\t\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate to add entity value into llx_user_rights\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_user_rights_entity($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<b>'.$langs->trans('MigrationUserRightsEntity').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_user_rights_entity\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT u.rowid, u.entity\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"user as u\";\n\t$sqlSelect .= \" WHERE u.entity > 1\";\n\t//print $sqlSelect;\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"user_rights SET\";\n\t\t\t\t$sqlUpdate .= \" entity = \".((int) $obj->entity);\n\t\t\t\t$sqlUpdate .= \" WHERE fk_user = \".((int) $obj->rowid);\n\n\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\tif (!$result) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate to add entity value into llx_usergroup_rights\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_usergroup_rights_entity($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<b>'.$langs->trans('MigrationUserGroupRightsEntity').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_usergroup_rights_entity\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT u.rowid, u.entity\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"usergroup as u\";\n\t$sqlSelect .= \" WHERE u.entity > 1\";\n\t//print $sqlSelect;\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"usergroup_rights SET\";\n\t\t\t\t$sqlUpdate .= \" entity = \".((int) $obj->entity);\n\t\t\t\t$sqlUpdate .= \" WHERE fk_usergroup = \".((int) $obj->rowid);\n\n\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\tif (!$result) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migration directory\n *\n * @param\tDoliDB\t\t$db\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\tObject langs\n * @param\tConf\t\t$conf\t\tObject conf\n * @param\tstring\t\t$oldname\tOld name (relative to DOL_DATA_ROOT)\n * @param\tstring\t\t$newname\tNew name (relative to DOL_DATA_ROOT)\n * @return\tvoid\n */\nfunction migrate_rename_directories($db, $langs, $conf, $oldname, $newname)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_rename_directories\");\n\n\tif (is_dir(DOL_DATA_ROOT.$oldname) && !file_exists(DOL_DATA_ROOT.$newname)) {\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_rename_directories move \".DOL_DATA_ROOT.$oldname.' into '.DOL_DATA_ROOT.$newname);\n\t\t@rename(DOL_DATA_ROOT.$oldname, DOL_DATA_ROOT.$newname);\n\t}\n}\n\n\n/**\n * Delete deprecated files\n *\n * @param\tDoliDB\t\t$db\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\tObject langs\n * @param\tConf\t\t$conf\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_delete_old_files($db, $langs, $conf)\n{\n\t$result = true;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_delete_old_files\");\n\n\t// List of files to delete\n\t$filetodeletearray = array(\n\t\t'/core/triggers/interface_demo.class.php',\n\t\t'/core/menus/barre_left/default.php',\n\t\t'/core/menus/barre_top/default.php',\n\t\t'/core/modules/modComptabiliteExpert.class.php',\n\t\t'/core/modules/modCommercial.class.php',\n\t\t'/core/modules/modProduit.class.php',\n\t\t'/core/modules/modSkype.class.php',\n\t\t'/phenix/inc/triggers/interface_modPhenix_Phenixsynchro.class.php',\n\t\t'/webcalendar/inc/triggers/interface_modWebcalendar_webcalsynchro.class.php',\n\t\t'/core/triggers/interface_modWebcalendar_Webcalsynchro.class.php',\n\t\t'/core/triggers/interface_modCommande_Ecotax.class.php',\n\t\t'/core/triggers/interface_modCommande_fraisport.class.php',\n\t\t'/core/triggers/interface_modPropale_PropalWorkflow.class.php',\n\t\t'/core/menus/smartphone/iphone.lib.php',\n\t\t'/core/menus/smartphone/iphone_backoffice.php',\n\t\t'/core/menus/smartphone/iphone_frontoffice.php',\n\t\t'/core/menus/standard/auguria_backoffice.php',\n\t\t'/core/menus/standard/auguria_frontoffice.php',\n\t\t'/core/menus/standard/eldy_backoffice.php',\n\t\t'/core/menus/standard/eldy_frontoffice.php',\n\t\t'/core/modules/mailings/contacts2.modules.php',\n\t\t'/core/modules/mailings/contacts3.modules.php',\n\t\t'/core/modules/mailings/contacts4.modules.php',\n\t\t'/core/modules/mailings/framboise.modules.php',\n\t\t'/core/modules/mailings/dolibarr_services_expired.modules.php',\n\t\t'/core/modules/mailings/peche.modules.php',\n\t\t'/core/modules/mailings/poire.modules.php',\n\t\t'/core/modules/mailings/kiwi.modules.php',\n\t\t'/core/modules/facture/pdf_crabe.modules.php',\n\t\t'/core/modules/facture/pdf_oursin.modules.php',\n\t\t'/core/modules/export/export_excel.modules.php',\n\t\t'/core/modules/export/export_excel2007new.modules.php',\n\n\t\t'/api/class/api_generic.class.php',\n\t\t'/categories/class/api_category.class.php',\n\t\t'/categories/class/api_deprecated_category.class.php',\n\t\t'/compta/facture/class/api_invoice.class.php',\n\t\t'/commande/class/api_commande.class.php',\n\t\t'/user/class/api_user.class.php',\n\t\t'/product/class/api_product.class.php',\n\t\t'/societe/class/api_contact.class.php',\n\t\t'/societe/class/api_thirdparty.class.php',\n\t\t'/support/online.php',\n\t\t'/takepos/class/actions_takepos.class.php',\n\n\t\t'/install/mysql/tables/llx_c_ticketsup_category.key.sql',\n\t\t'/install/mysql/tables/llx_c_ticketsup_category.sql',\n\t\t'/install/mysql/tables/llx_c_ticketsup_severity.key.sql',\n\t\t'/install/mysql/tables/llx_c_ticketsup_severity.sql',\n\t\t'/install/mysql/tables/llx_c_ticketsup_type.key.sql',\n\t\t'/install/mysql/tables/llx_c_ticketsup_type.sql'\n\t);\n\n\tforeach ($filetodeletearray as $filetodelete) {\n\t\t//print '<b>'DOL_DOCUMENT_ROOT.$filetodelete.\"</b><br>\\n\";\n\t\t$result = 1;\n\t\tif (file_exists(DOL_DOCUMENT_ROOT.$filetodelete)) {\n\t\t\t$result = dol_delete_file(DOL_DOCUMENT_ROOT.$filetodelete, 0, 0, 0, null, true, false);\n\t\t\tif (!$result) {\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tprint '<div class=\"error\">'.$langs->trans(\"Error\").': '.$langs->trans(\"ErrorFailToDeleteFile\", DOL_DOCUMENT_ROOT.$filetodelete);\n\t\t\t\tprint ' '.$langs->trans(\"RemoveItManuallyAndPressF5ToContinue\").'</div>';\n\t\t\t} else {\n\t\t\t\t//print $langs->trans(\"FileWasRemoved\", $filetodelete).'<br>';\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n\n/**\n * Remove deprecated directories\n *\n * @param\tDoliDB\t\t$db\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\tObject langs\n * @param\tConf\t\t$conf\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_delete_old_dir($db, $langs, $conf)\n{\n\t$result = true;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_delete_old_dir\");\n\n\t// List of files to delete\n\t$filetodeletearray = array(\n\t\tDOL_DOCUMENT_ROOT.'/core/modules/facture/terre',\n\t\tDOL_DOCUMENT_ROOT.'/core/modules/facture/mercure',\n\t);\n\n\t// On linux, we can also removed old directory with a different case than new directory.\n\tif (!empty($_SERVER[\"WINDIR\"])) {\n\t\t$filetodeletearray[] = DOL_DOCUMENT_ROOT.'/includes/phpoffice/PhpSpreadsheet';\n\t}\n\n\tforeach ($filetodeletearray as $filetodelete) {\n\t\t//print '<b>'.$filetodelete.\"</b><br>\\n\";\n\t\tif (file_exists($filetodelete)) {\n\t\t\t$result = dol_delete_dir_recursive($filetodelete);\n\t\t}\n\t\tif (!$result) {\n\t\t\t$langs->load(\"errors\");\n\t\t\tprint '<div class=\"error\">'.$langs->trans(\"Error\").': '.$langs->trans(\"ErrorFailToDeleteDir\", $filetodelete);\n\t\t\tprint ' '.$langs->trans(\"RemoveItManuallyAndPressF5ToContinue\").'</div>';\n\t\t}\n\t}\n\treturn $result;\n}\n\n\n/**\n * Disable/Reenable features modules.\n * We must do this when internal menu of module or permissions has changed\n * or when triggers have moved.\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @param\tarray\t\t$listofmodule\tList of modules, like array('MODULE_KEY_NAME'=>', $reloadmode)\n * @param   int         $force          1=Reload module even if not already loaded\n * @return\tint\t\t\t\t\t\t\t<0 if KO, >0 if OK\n */\nfunction migrate_reload_modules($db, $langs, $conf, $listofmodule = array(), $force = 0)\n{\n\tif (count($listofmodule) == 0) {\n\t\treturn;\n\t}\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules force=\".$force.\", listofmodule=\".join(',', array_keys($listofmodule)));\n\n\tforeach ($listofmodule as $moduletoreload => $reloadmode) {\t// reloadmodule can be 'noboxes', 'newboxdefonly', 'forceactivate'\n\t\tif (empty($moduletoreload) || (empty($conf->global->$moduletoreload) && !$force)) {\n\t\t\tcontinue; // Discard reload if module not enabled\n\t\t}\n\n\t\t$mod = null;\n\n\t\tif ($moduletoreload == 'MAIN_MODULE_AGENDA') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Agenda module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modAgenda.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modAgenda($db);\n\t\t\t\t$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_API') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Rest API module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modApi.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modApi($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_BARCODE') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Barcode module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modBarcode.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modBarcode($db);\n\t\t\t\t$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_BLOCKEDLOG') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate BlockedLog module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modBlockedLog.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modBlockedLog($db);\n\t\t\t\t// For this module we only reload menus.\n\t\t\t\t$mod->delete_menus();\n\t\t\t\t$mod->insert_menus();\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_CRON') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Cron module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modCron.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modCron($db);\n\t\t\t\t$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_EXTERNALSITE') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate ExternalSite module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modExternalSite.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modExternalSite($db);\n\t\t\t\t$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_SOCIETE') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Societe module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modSociete.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modSociete($db);\n\t\t\t\t$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_PRODUIT') {    // Permission has changed into 2.7\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Produit module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modProduct.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modProduct($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_SERVICE') {   // Permission has changed into 2.7\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Service module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modService.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modService($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_COMMANDE') {   // Permission has changed into 2.9\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Commande module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modCommande.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modCommande($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_FACTURE') {    // Permission has changed into 2.9\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Facture module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modFacture.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modFacture($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_FOURNISSEUR') {    // Permission has changed into 2.9\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Fournisseur module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modFournisseur.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modFournisseur($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_HOLIDAY') {   // Permission and tabs has changed into 3.8\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Leave Request module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modHoliday.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modHoliday($db);\n\t\t\t\t$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_DEPLACEMENT') {   // Permission has changed into 3.0\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Deplacement module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modDeplacement.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modDeplacement($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_EXPENSEREPORT') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Expense Report module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modExpenseReport.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modExpenseReport($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_DON') {   // Permission has changed into 3.0\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Don module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modDon.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modDon($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_ECM') {    // Permission has changed into 3.0 and 3.1\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate ECM module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modECM.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modECM($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because a permission id has been removed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_KNOWLEDGEMANAGEMENT') {    // Permission has changed into 3.0 and 3.1\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Knowledge Management\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modKnowledgeManagement.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modKnowledgeManagement($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because a permission id has been removed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_EVENTORGANIZATION') {    // Permission has changed into 3.0 and 3.1\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules EventOrganization\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modEventOrganization.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modEventOrganization($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because a permission id has been removed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_PAYBOX') {    // Permission has changed into 3.0\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Paybox module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modPaybox.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modPaybox($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because id of module has changed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_SUPPLIERPROPOSAL') {\t\t// Module after 3.5\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Supplier Proposal module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modSupplierProposal.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modSupplierProposal($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because id of module has changed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_OPENSURVEY') {   // Permission has changed into 3.0\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Opensurvey module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modOpenSurvey.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modOpenSurvey($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because menu entries has changed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_PRODUCTBATCH') {   // Permission has changed into 10.0\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules ProductBatch module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modProductBatch.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modProductBatch($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because menu entries has changed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_TAKEPOS') {   // Permission has changed into 10.0\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Takepos module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modTakePos.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modTakePos($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because menu entries has changed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} else {\t// Other generic cases/modules\n\t\t\t$reg = array();\n\t\t\t$tmp = preg_match('/MAIN_MODULE_([a-zA-Z0-9]+)/', $moduletoreload, $reg);\n\t\t\tif (!empty($reg[1])) {\n\t\t\t\tif (strtoupper($moduletoreload) == $moduletoreload) {\t// If key is un uppercase\n\t\t\t\t\t$moduletoreloadshort = ucfirst(strtolower($reg[1]));\n\t\t\t\t} else // If key is a mix of up and low case\n\t\t\t\t{\n\t\t\t\t\t$moduletoreloadshort = $reg[1];\n\t\t\t\t}\n\n\t\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate module \".$moduletoreloadshort.\" with mode \".$reloadmode);\n\t\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/mod'.$moduletoreloadshort.'.class.php';\n\t\t\t\tif ($res) {\n\t\t\t\t\t$classname = 'mod'.$moduletoreloadshort;\n\t\t\t\t\t$mod = new $classname($db);\n\n\t\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t\t$mod->delete_menus(); // We must delete to be sure it is inserted with new values\n\t\t\t\t\t$mod->init($reloadmode);\n\t\t\t\t} else {\n\t\t\t\t\tdolibarr_install_syslog('Failed to include '.DOL_DOCUMENT_ROOT.'/core/modules/mod'.$moduletoreloadshort.'.class.php');\n\n\t\t\t\t\t$res = @dol_include_once(strtolower($moduletoreloadshort).'/core/modules/mod'.$moduletoreloadshort.'.class.php');\n\t\t\t\t\tif ($res) {\n\t\t\t\t\t\t$classname = 'mod'.$moduletoreloadshort;\n\t\t\t\t\t\t$mod = new $classname($db);\n\t\t\t\t\t\t$mod->init($reloadmode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdolibarr_install_syslog('Failed to include '.strtolower($moduletoreloadshort).'/core/modules/mod'.$moduletoreloadshort.'.class.php', LOG_ERR);\n\t\t\t\t\t\tprint \"Error, can't find module with name \".$moduletoreload.\"\\n\";\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdolibarr_install_syslog(\"Error, can't find module with name \".$moduletoreload, LOG_ERR);\n\t\t\t\tprint \"Error, can't find module with name \".$moduletoreload.\"\\n\";\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($mod) && is_object($mod)) {\n\t\t\tprint '<tr class=\"trforrunsql\"><td colspan=\"4\">';\n\t\t\tprint '<b>'.$langs->trans('Upgrade').'</b>: ';\n\t\t\tprint $langs->trans('MigrationReloadModule').' '.$mod->getName(); // We keep getName outside of trans because getName is already encoded/translated\n\t\t\tprint \"<!-- (\".$reloadmode.\") -->\";\n\t\t\tprint \"<br>\\n\";\n\t\t\tprint '</td></tr>';\n\t\t}\n\t}\n\n\treturn 1;\n}\n\n\n\n/**\n * Reload SQL menu file (if dynamic menus, if modified by version)\n *\n * @param\tDoliDB\t\t$db\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\tObject langs\n * @param\tConf\t\t$conf\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_reload_menu($db, $langs, $conf)\n{\n\tglobal $conf;\n\tdolibarr_install_syslog(\"upgrade2::migrate_reload_menu\");\n\n\t// Define list of menu handlers to initialize\n\t$listofmenuhandler = array();\n\tif ($conf->global->MAIN_MENU_STANDARD == 'auguria_menu' || $conf->global->MAIN_MENU_SMARTPHONE == 'auguria_menu'\n\t\t|| $conf->global->MAIN_MENUFRONT_STANDARD == 'auguria_menu' || $conf->global->MAIN_MENUFRONT_SMARTPHONE == 'auguria_menu') {\n\t\t$listofmenuhandler['auguria'] = 1; // We set here only dynamic menu handlers\n\t}\n\n\tforeach ($listofmenuhandler as $key => $val) {\n\t\tprint '<tr class=\"trforrunsql\"><td colspan=\"4\">';\n\n\t\t//print \"x\".$key;\n\t\tprint '<br>';\n\t\tprint '<b>'.$langs->trans('Upgrade').'</b>: '.$langs->trans('MenuHandler').\" \".$key.\"<br>\\n\";\n\n\t\t// Load sql ini_menu_handler.sql file\n\t\t$dir = DOL_DOCUMENT_ROOT.\"/core/menus/\";\n\t\t$file = 'init_menu_'.$key.'.sql';\n\t\tif (file_exists($dir.$file)) {\n\t\t\t$result = run_sql($dir.$file, 1, '', 1, $key);\n\t\t}\n\n\t\tprint '</td></tr>';\n\t}\n}\n\n/**\n * Migrate file from old path to new one for users\n *\n * @return\tvoid\n */\nfunction migrate_user_photospath()\n{\n\tglobal $conf, $db, $langs, $user;\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<b>'.$langs->trans('MigrationUserPhotoPath').\"</b><br>\\n\";\n\n\tinclude_once DOL_DOCUMENT_ROOT.'/user/class/user.class.php';\n\t$fuser = new User($db);\n\n\tif (!is_object($user)) {\n\t\t$user = $fuser; // To avoid error during migration\n\t}\n\n\t$sql = \"SELECT rowid as uid from \".MAIN_DB_PREFIX.\"user\"; // Get list of all users\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$fuser->fetch($obj->uid);\n\t\t\t//echo '<hr>'.$fuser->id.' -> '.$fuser->entity;\n\t\t\t$entity = (empty($fuser->entity) ? 1 : $fuser->entity);\n\t\t\tif ($entity > 1) {\n\t\t\t\t$dir = DOL_DATA_ROOT.'/'.$entity.'/users';\n\t\t\t} else {\n\t\t\t\t$dir = $conf->user->multidir_output[$entity]; // $conf->user->multidir_output[] for each entity is construct by the multicompany module\n\t\t\t}\n\n\t\t\tif ($dir) {\n\t\t\t\t//print \"Process user id \".$fuser->id.\"<br>\\n\";\n\t\t\t\t$origin = $dir.'/'.get_exdir($fuser->id, 2, 0, 1, $fuser, 'user'); // Use old behaviour to get x/y path\n\t\t\t\t$destin = $dir.'/'.$fuser->id;\n\n\t\t\t\t$origin_osencoded = dol_osencode($origin);\n\n\t\t\t\tdol_mkdir($destin);\n\n\t\t\t\t//echo '<hr>'.$origin.' -> '.$destin;\n\t\t\t\tif (dol_is_dir($origin)) {\n\t\t\t\t\t$handle = opendir($origin_osencoded);\n\t\t\t\t\tif (is_resource($handle)) {\n\t\t\t\t\t\twhile (($file = readdir($handle)) !== false) {\n\t\t\t\t\t\t\tif ($file == '.' || $file == '..') {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (dol_is_dir($origin.'/'.$file)) {\t// it is a dir (like 'thumbs')\n\t\t\t\t\t\t\t\t$thumbs = opendir($origin_osencoded.'/'.$file);\n\t\t\t\t\t\t\t\tif (is_resource($thumbs)) {\n\t\t\t\t\t\t\t\t\tdol_mkdir($destin.'/'.$file);\n\t\t\t\t\t\t\t\t\twhile (($thumb = readdir($thumbs)) !== false) {\n\t\t\t\t\t\t\t\t\t\tif (!dol_is_file($destin.'/'.$file.'/'.$thumb)) {\n\t\t\t\t\t\t\t\t\t\t\tif ($thumb == '.' || $thumb == '..') {\n\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t//print $origin.'/'.$file.'/'.$thumb.' -> '.$destin.'/'.$file.'/'.$thumb.'<br>'.\"\\n\";\n\t\t\t\t\t\t\t\t\t\t\tprint '.';\n\t\t\t\t\t\t\t\t\t\t\tdol_copy($origin.'/'.$file.'/'.$thumb, $destin.'/'.$file.'/'.$thumb, 0, 0);\n\t\t\t\t\t\t\t\t\t\t\t//var_dump('aaa');exit;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// dol_delete_dir($origin.'/'.$file);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else // it is a file\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!dol_is_file($destin.'/'.$file)) {\n\t\t\t\t\t\t\t\t\t//print $origin.'/'.$file.' -> '.$destin.'/'.$file.'<br>'.\"\\n\";\n\t\t\t\t\t\t\t\t\tprint '.';\n\t\t\t\t\t\t\t\t\tdol_copy($origin.'/'.$file, $destin.'/'.$file, 0, 0);\n\t\t\t\t\t\t\t\t\t//var_dump('eee');exit;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprint '</td></tr>';\n}\n\n\n/* A faire egalement: Modif statut paye et fk_facture des factures payes completement\n\nOn recherche facture incorrecte:\nselect f.rowid, f.total_ttc as t1, sum(pf.amount) as t2 from llx_facture as f, llx_paiement_facture as pf where pf.fk_facture=f.rowid and f.fk_statut in(2,3) and paye=0 and close_code is null group by f.rowid\nhaving  f.total_ttc = sum(pf.amount)\n\nOn les corrige:\nupdate llx_facture set paye=1, fk_statut=2 where close_code is null\nand rowid in (...)\n*/\n\n/**\n * Migrate users fields facebook and co to socialnetworks.\n * Can be called only when version is 10.0.* or lower. Fields does not exists after.\n *\n * @return  void\n */\nfunction migrate_users_socialnetworks()\n{\n\tglobal $db, $langs;\n\t// skype,twitter,facebook,linkedin,instagram,snapchat,googleplus,youtube,whatsapp\n\t$error = 0;\n\t$db->begin();\n\tprint '<tr><td colspan=\"4\">';\n\t$sql = 'SELECT rowid, socialnetworks';\n\t$sql .= ', skype, twitter, facebook, linkedin, instagram, snapchat, googleplus, youtube, whatsapp FROM '.MAIN_DB_PREFIX.'user WHERE';\n\t$sql .= \" skype IS NOT NULL OR skype <> ''\";\n\t$sql .= \" OR twitter IS NOT NULL OR twitter <> ''\";\n\t$sql .= \" OR facebook IS NOT NULL OR facebook <> ''\";\n\t$sql .= \" OR linkedin IS NOT NULL OR linkedin <> ''\";\n\t$sql .= \" OR instagram IS NOT NULL OR instagram <> ''\";\n\t$sql .= \" OR snapchat IS NOT NULL OR snapchat <> ''\";\n\t$sql .= \" OR googleplus IS NOT NULL OR googleplus <> ''\";\n\t$sql .= \" OR youtube IS NOT NULL OR youtube <> ''\";\n\t$sql .= \" OR whatsapp IS NOT NULL OR whatsapp <> ''\";\n\t//print $sql;\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$arraysocialnetworks = array();\n\t\t\tif (!empty($obj->skype)) {\n\t\t\t\t$arraysocialnetworks['skype'] = $obj->skype;\n\t\t\t}\n\t\t\tif (!empty($obj->twitter)) {\n\t\t\t\t$arraysocialnetworks['twitter'] = $obj->twitter;\n\t\t\t}\n\t\t\tif (!empty($obj->facebook)) {\n\t\t\t\t$arraysocialnetworks['facebook'] = $obj->facebook;\n\t\t\t}\n\t\t\tif (!empty($obj->linkedin)) {\n\t\t\t\t$arraysocialnetworks['linkedin'] = $obj->linkedin;\n\t\t\t}\n\t\t\tif (!empty($obj->instagram)) {\n\t\t\t\t$arraysocialnetworks['instagram'] = $obj->instagram;\n\t\t\t}\n\t\t\tif (!empty($obj->snapchat)) {\n\t\t\t\t$arraysocialnetworks['snapchat'] = $obj->snapchat;\n\t\t\t}\n\t\t\tif (!empty($obj->googleplus)) {\n\t\t\t\t$arraysocialnetworks['googleplus'] = $obj->googleplus;\n\t\t\t}\n\t\t\tif (!empty($obj->youtube)) {\n\t\t\t\t$arraysocialnetworks['youtube'] = $obj->youtube;\n\t\t\t}\n\t\t\tif (!empty($obj->whatsapp)) {\n\t\t\t\t$arraysocialnetworks['whatsapp'] = $obj->whatsapp;\n\t\t\t}\n\t\t\tif ($obj->socialnetworks == '' || is_null($obj->socialnetworks)) {\n\t\t\t\t$obj->socialnetworks = '[]';\n\t\t\t}\n\t\t\t$socialnetworks = array_merge($arraysocialnetworks, json_decode($obj->socialnetworks, true));\n\t\t\t$sqlupd = 'UPDATE '.MAIN_DB_PREFIX.\"user SET socialnetworks='\".$db->escape(json_encode($socialnetworks, true)).\"'\";\n\t\t\t$sqlupd .= ', skype=null';\n\t\t\t$sqlupd .= ', twitter=null';\n\t\t\t$sqlupd .= ', facebook=null';\n\t\t\t$sqlupd .= ', linkedin=null';\n\t\t\t$sqlupd .= ', instagram=null';\n\t\t\t$sqlupd .= ', snapchat=null';\n\t\t\t$sqlupd .= ', googleplus=null';\n\t\t\t$sqlupd .= ', youtube=null';\n\t\t\t$sqlupd .= ', whatsapp=null';\n\t\t\t$sqlupd .= ' WHERE rowid = '.((int) $obj->rowid);\n\t\t\t//print $sqlupd.\"<br>\";\n\t\t\t$resqlupd = $db->query($sqlupd);\n\t\t\tif (!$resqlupd) {\n\t\t\t\tdol_print_error($db);\n\t\t\t\t$error++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$error++;\n\t}\n\tif (!$error) {\n\t\t$db->commit();\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\tprint '<b>'.$langs->trans('MigrationFieldsSocialNetworks', 'Users').\"</b><br>\\n\";\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate members fields facebook and co to socialnetworks\n * Can be called only when version is 10.0.* or lower. Fields does not exists after.\n *\n * @return  void\n */\nfunction migrate_members_socialnetworks()\n{\n\tglobal $db, $langs;\n\n\tprint '<tr><td colspan=\"4\">';\n\t$error = 0;\n\t$db->begin();\n\tprint '<tr><td colspan=\"4\">';\n\t$sql = 'SELECT rowid, socialnetworks';\n\t$sql .= ', skype, twitter, facebook, linkedin, instagram, snapchat, googleplus, youtube, whatsapp FROM '.MAIN_DB_PREFIX.'adherent WHERE ';\n\t$sql .= \" skype IS NOT NULL OR skype <> ''\";\n\t$sql .= \" OR twitter IS NOT NULL OR twitter <> ''\";\n\t$sql .= \" OR facebook IS NOT NULL OR facebook <> ''\";\n\t$sql .= \" OR linkedin IS NOT NULL OR linkedin <> ''\";\n\t$sql .= \" OR instagram IS NOT NULL OR instagram <> ''\";\n\t$sql .= \" OR snapchat IS NOT NULL OR snapchat <> ''\";\n\t$sql .= \" OR googleplus IS NOT NULL OR googleplus <> ''\";\n\t$sql .= \" OR youtube IS NOT NULL OR youtube <> ''\";\n\t$sql .= \" OR whatsapp IS NOT NULL OR whatsapp <> ''\";\n\t//print $sql;\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$arraysocialnetworks = array();\n\t\t\tif (!empty($obj->skype)) {\n\t\t\t\t$arraysocialnetworks['skype'] = $obj->skype;\n\t\t\t}\n\t\t\tif (!empty($obj->twitter)) {\n\t\t\t\t$arraysocialnetworks['twitter'] = $obj->twitter;\n\t\t\t}\n\t\t\tif (!empty($obj->facebook)) {\n\t\t\t\t$arraysocialnetworks['facebook'] = $obj->facebook;\n\t\t\t}\n\t\t\tif (!empty($obj->linkedin)) {\n\t\t\t\t$arraysocialnetworks['linkedin'] = $obj->linkedin;\n\t\t\t}\n\t\t\tif (!empty($obj->instagram)) {\n\t\t\t\t$arraysocialnetworks['instagram'] = $obj->instagram;\n\t\t\t}\n\t\t\tif (!empty($obj->snapchat)) {\n\t\t\t\t$arraysocialnetworks['snapchat'] = $obj->snapchat;\n\t\t\t}\n\t\t\tif (!empty($obj->googleplus)) {\n\t\t\t\t$arraysocialnetworks['googleplus'] = $obj->googleplus;\n\t\t\t}\n\t\t\tif (!empty($obj->youtube)) {\n\t\t\t\t$arraysocialnetworks['youtube'] = $obj->youtube;\n\t\t\t}\n\t\t\tif (!empty($obj->whatsapp)) {\n\t\t\t\t$arraysocialnetworks['whatsapp'] = $obj->whatsapp;\n\t\t\t}\n\t\t\tif ($obj->socialnetworks == '' || is_null($obj->socialnetworks)) {\n\t\t\t\t$obj->socialnetworks = '[]';\n\t\t\t}\n\t\t\t$socialnetworks = array_merge($arraysocialnetworks, json_decode($obj->socialnetworks, true));\n\t\t\t$sqlupd = 'UPDATE '.MAIN_DB_PREFIX.\"adherent SET socialnetworks='\".$db->escape(json_encode($socialnetworks, true)).\"'\";\n\t\t\t$sqlupd .= ', skype=null';\n\t\t\t$sqlupd .= ', twitter=null';\n\t\t\t$sqlupd .= ', facebook=null';\n\t\t\t$sqlupd .= ', linkedin=null';\n\t\t\t$sqlupd .= ', instagram=null';\n\t\t\t$sqlupd .= ', snapchat=null';\n\t\t\t$sqlupd .= ', googleplus=null';\n\t\t\t$sqlupd .= ', youtube=null';\n\t\t\t$sqlupd .= ', whatsapp=null';\n\t\t\t$sqlupd .= ' WHERE rowid = '.((int) $obj->rowid);\n\t\t\t//print $sqlupd.\"<br>\";\n\t\t\t$resqlupd = $db->query($sqlupd);\n\t\t\tif (!$resqlupd) {\n\t\t\t\tdol_print_error($db);\n\t\t\t\t$error++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$error++;\n\t}\n\tif (!$error) {\n\t\t$db->commit();\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\tprint '<b>'.$langs->trans('MigrationFieldsSocialNetworks', 'Members').\"</b><br>\\n\";\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate contacts fields facebook and co to socialnetworks\n * Can be called only when version is 10.0.* or lower. Fields does not exists after.\n *\n * @return  void\n */\nfunction migrate_contacts_socialnetworks()\n{\n\tglobal $db, $langs;\n\t// jabberid,skype,twitter,facebook,linkedin,instagram,snapchat,googleplus,youtube,whatsapp\n\t$error = 0;\n\t$db->begin();\n\tprint '<tr><td colspan=\"4\">';\n\t$sql = 'SELECT rowid, socialnetworks';\n\t$sql .= ', jabberid, skype, twitter, facebook, linkedin, instagram, snapchat, googleplus, youtube, whatsapp FROM '.MAIN_DB_PREFIX.'socpeople WHERE';\n\t$sql .= \" jabberid IS NOT NULL OR jabberid <> ''\";\n\t$sql .= \" OR skype IS NOT NULL OR skype <> ''\";\n\t$sql .= \" OR twitter IS NOT NULL OR twitter <> ''\";\n\t$sql .= \" OR facebook IS NOT NULL OR facebook <> ''\";\n\t$sql .= \" OR linkedin IS NOT NULL OR linkedin <> ''\";\n\t$sql .= \" OR instagram IS NOT NULL OR instagram <> ''\";\n\t$sql .= \" OR snapchat IS NOT NULL OR snapchat <> ''\";\n\t$sql .= \" OR googleplus IS NOT NULL OR googleplus <> ''\";\n\t$sql .= \" OR youtube IS NOT NULL OR youtube <> ''\";\n\t$sql .= \" OR whatsapp IS NOT NULL OR whatsapp <> ''\";\n\t//print $sql;\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$arraysocialnetworks = array();\n\t\t\tif (!empty($obj->jabberid)) {\n\t\t\t\t$arraysocialnetworks['jabber'] = $obj->jabberid;\n\t\t\t}\n\t\t\tif (!empty($obj->skype)) {\n\t\t\t\t$arraysocialnetworks['skype'] = $obj->skype;\n\t\t\t}\n\t\t\tif (!empty($obj->twitter)) {\n\t\t\t\t$arraysocialnetworks['twitter'] = $obj->twitter;\n\t\t\t}\n\t\t\tif (!empty($obj->facebook)) {\n\t\t\t\t$arraysocialnetworks['facebook'] = $obj->facebook;\n\t\t\t}\n\t\t\tif (!empty($obj->linkedin)) {\n\t\t\t\t$arraysocialnetworks['linkedin'] = $obj->linkedin;\n\t\t\t}\n\t\t\tif (!empty($obj->instagram)) {\n\t\t\t\t$arraysocialnetworks['instagram'] = $obj->instagram;\n\t\t\t}\n\t\t\tif (!empty($obj->snapchat)) {\n\t\t\t\t$arraysocialnetworks['snapchat'] = $obj->snapchat;\n\t\t\t}\n\t\t\tif (!empty($obj->googleplus)) {\n\t\t\t\t$arraysocialnetworks['googleplus'] = $obj->googleplus;\n\t\t\t}\n\t\t\tif (!empty($obj->youtube)) {\n\t\t\t\t$arraysocialnetworks['youtube'] = $obj->youtube;\n\t\t\t}\n\t\t\tif (!empty($obj->whatsapp)) {\n\t\t\t\t$arraysocialnetworks['whatsapp'] = $obj->whatsapp;\n\t\t\t}\n\t\t\tif ($obj->socialnetworks == '' || is_null($obj->socialnetworks)) {\n\t\t\t\t$obj->socialnetworks = '[]';\n\t\t\t}\n\t\t\t$socialnetworks = array_merge($arraysocialnetworks, json_decode($obj->socialnetworks, true));\n\t\t\t$sqlupd = 'UPDATE '.MAIN_DB_PREFIX.\"socpeople SET socialnetworks='\".$db->escape(json_encode($socialnetworks, true)).\"'\";\n\t\t\t$sqlupd .= ', jabberid=null';\n\t\t\t$sqlupd .= ', skype=null';\n\t\t\t$sqlupd .= ', twitter=null';\n\t\t\t$sqlupd .= ', facebook=null';\n\t\t\t$sqlupd .= ', linkedin=null';\n\t\t\t$sqlupd .= ', instagram=null';\n\t\t\t$sqlupd .= ', snapchat=null';\n\t\t\t$sqlupd .= ', googleplus=null';\n\t\t\t$sqlupd .= ', youtube=null';\n\t\t\t$sqlupd .= ', whatsapp=null';\n\t\t\t$sqlupd .= ' WHERE rowid = '.((int) $obj->rowid);\n\t\t\t//print $sqlupd.\"<br>\";\n\t\t\t$resqlupd = $db->query($sqlupd);\n\t\t\tif (!$resqlupd) {\n\t\t\t\tdol_print_error($db);\n\t\t\t\t$error++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$error++;\n\t}\n\tif (!$error) {\n\t\t$db->commit();\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\tprint '<b>'.$langs->trans('MigrationFieldsSocialNetworks', 'Contacts').\"</b><br>\\n\";\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate thirdparties fields facebook and co to socialnetworks\n * Can be called only when version is 10.0.* or lower. Fields does not exists after.\n *\n * @return  void\n */\nfunction migrate_thirdparties_socialnetworks()\n{\n\tglobal $db, $langs;\n\t// skype,twitter,facebook,linkedin,instagram,snapchat,googleplus,youtube,whatsapp\n\t$error = 0;\n\t$db->begin();\n\tprint '<tr><td colspan=\"4\">';\n\t$sql = 'SELECT rowid, socialnetworks';\n\t$sql .= ', skype, twitter, facebook, linkedin, instagram, snapchat, googleplus, youtube, whatsapp FROM '.MAIN_DB_PREFIX.'societe WHERE ';\n\t$sql .= \" skype IS NOT NULL OR skype <> ''\";\n\t$sql .= \" OR twitter IS NOT NULL OR twitter <> ''\";\n\t$sql .= \" OR facebook IS NOT NULL OR facebook <> ''\";\n\t$sql .= \" OR linkedin IS NOT NULL OR linkedin <> ''\";\n\t$sql .= \" OR instagram IS NOT NULL OR instagram <> ''\";\n\t$sql .= \" OR snapchat IS NOT NULL OR snapchat <> ''\";\n\t$sql .= \" OR googleplus IS NOT NULL OR googleplus <> ''\";\n\t$sql .= \" OR youtube IS NOT NULL OR youtube <> ''\";\n\t$sql .= \" OR whatsapp IS NOT NULL OR whatsapp <> ''\";\n\t//print $sql;\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$arraysocialnetworks = array();\n\t\t\tif (!empty($obj->skype)) {\n\t\t\t\t$arraysocialnetworks['skype'] = $obj->skype;\n\t\t\t}\n\t\t\tif (!empty($obj->twitter)) {\n\t\t\t\t$arraysocialnetworks['twitter'] = $obj->twitter;\n\t\t\t}\n\t\t\tif (!empty($obj->facebook)) {\n\t\t\t\t$arraysocialnetworks['facebook'] = $obj->facebook;\n\t\t\t}\n\t\t\tif (!empty($obj->linkedin)) {\n\t\t\t\t$arraysocialnetworks['linkedin'] = $obj->linkedin;\n\t\t\t}\n\t\t\tif (!empty($obj->instagram)) {\n\t\t\t\t$arraysocialnetworks['instagram'] = $obj->instagram;\n\t\t\t}\n\t\t\tif (!empty($obj->snapchat)) {\n\t\t\t\t$arraysocialnetworks['snapchat'] = $obj->snapchat;\n\t\t\t}\n\t\t\tif (!empty($obj->googleplus)) {\n\t\t\t\t$arraysocialnetworks['googleplus'] = $obj->googleplus;\n\t\t\t}\n\t\t\tif (!empty($obj->youtube)) {\n\t\t\t\t$arraysocialnetworks['youtube'] = $obj->youtube;\n\t\t\t}\n\t\t\tif (!empty($obj->whatsapp)) {\n\t\t\t\t$arraysocialnetworks['whatsapp'] = $obj->whatsapp;\n\t\t\t}\n\t\t\tif ($obj->socialnetworks == '' || is_null($obj->socialnetworks)) {\n\t\t\t\t$obj->socialnetworks = '[]';\n\t\t\t}\n\t\t\t$socialnetworks = array_merge($arraysocialnetworks, json_decode($obj->socialnetworks, true));\n\t\t\t$sqlupd = 'UPDATE '.MAIN_DB_PREFIX.\"societe SET socialnetworks='\".$db->escape(json_encode($socialnetworks, true)).\"'\";\n\t\t\t$sqlupd .= ', skype=null';\n\t\t\t$sqlupd .= ', twitter=null';\n\t\t\t$sqlupd .= ', facebook=null';\n\t\t\t$sqlupd .= ', linkedin=null';\n\t\t\t$sqlupd .= ', instagram=null';\n\t\t\t$sqlupd .= ', snapchat=null';\n\t\t\t$sqlupd .= ', googleplus=null';\n\t\t\t$sqlupd .= ', youtube=null';\n\t\t\t$sqlupd .= ', whatsapp=null';\n\t\t\t$sqlupd .= ' WHERE rowid = '.((int) $obj->rowid);\n\t\t\t//print $sqlupd.\"<br>\";\n\t\t\t$resqlupd = $db->query($sqlupd);\n\t\t\tif (!$resqlupd) {\n\t\t\t\tdol_print_error($db);\n\t\t\t\t$error++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$error++;\n\t}\n\tif (!$error) {\n\t\t$db->commit();\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\tprint '<b>'.$langs->trans('MigrationFieldsSocialNetworks', 'Thirdparties').\"</b><br>\\n\";\n\tprint '</td></tr>';\n}\n\n\n/**\n * Migrate export and import profiles to fix field name that was renamed\n *\n * @param\tstring\t\t$mode\t\t'export' or 'import'\n * @return  void\n */\nfunction migrate_export_import_profiles($mode = 'export')\n{\n\tglobal $db, $langs;\n\n\t$error = 0;\n\t$resultstring = '';\n\n\t$db->begin();\n\n\tprint '<tr class=\"trforrunsql\"><td colspan=\"4\">';\n\t$sql = 'SELECT rowid, field';\n\tif ($mode == 'export') {\n\t\t$sql .= ', filter';\n\t}\n\t$sql .= ' FROM '.MAIN_DB_PREFIX.$mode.'_model WHERE';\n\t$sql .= \" type LIKE 'propale_%' OR type LIKE 'commande_%' OR type LIKE 'facture_%'\";\n\t//print $sql;\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$oldfield = $obj->field;\n\t\t\t$newfield = str_replace(array(',f.facnumber', 'f.facnumber,', 'f.total,', 'f.tva,'), array(',f.ref', 'f.ref,', 'f.total_ht,', 'f.total_tva,'), $oldfield);\n\n\t\t\tif ($mode == 'export') {\n\t\t\t\t$oldfilter = $obj->filter;\n\t\t\t\t$newfilter = str_replace(array('f.facnumber=', 'f.total=', 'f.tva='), array('f.ref=', 'f.total_ht=', 'f.total_tva='), $oldfilter);\n\t\t\t} else {\n\t\t\t\t$oldfilter = '';\n\t\t\t\t$newfilter = '';\n\t\t\t}\n\n\t\t\tif ($oldfield != $newfield || $oldfilter != $newfilter) {\n\t\t\t\t$sqlupd = 'UPDATE '.MAIN_DB_PREFIX.$mode.\"_model SET field = '\".$db->escape($newfield).\"'\";\n\t\t\t\tif ($mode == 'export') {\n\t\t\t\t\t$sqlupd .= \", filter = '\".$db->escape($newfilter).\"'\";\n\t\t\t\t}\n\t\t\t\t$sqlupd .= ' WHERE rowid = '.((int) $obj->rowid);\n\t\t\t\t$resultstring .= '<tr class=\"trforrunsql\" style=\"\"><td class=\"wordbreak\" colspan=\"4\">'.$sqlupd.\"</td></tr>\\n\";\n\t\t\t\t$resqlupd = $db->query($sqlupd);\n\t\t\t\tif (!$resqlupd) {\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$error++;\n\t}\n\tif (!$error) {\n\t\t$db->commit();\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\tprint '<b>'.$langs->trans('MigrationImportOrExportProfiles', $mode).\"</b><br>\\n\";\n\tprint '</td></tr>';\n\n\tif ($resultstring) {\n\t\tprint $resultstring;\n\t} else {\n\t\tprint '<tr class=\"trforrunsql\" style=\"\"><td class=\"wordbreak\" colspan=\"4\">'.$langs->trans(\"NothingToDo\").\"</td></tr>\\n\";\n\t}\n}\n", "<?php\n/* Copyright (C) 2002-2006 Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2002-2003 Jean-Louis Bergamo   <jlb@j1b.org>\n * Copyright (C) 2004-2020 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2004      Eric Seigne          <eric.seigne@ryxeo.com>\n * Copyright (C) 2005-2021 Regis Houssin        <regis.houssin@inodbox.com>\n * Copyright (C) 2005      Lionel Cousteix      <etm_ltd@tiscali.co.uk>\n * Copyright (C) 2011      Herve Prot           <herve.prot@symeos.com>\n * Copyright (C) 2012-2018 Juanjo Menent        <jmenent@2byte.es>\n * Copyright (C) 2013      Florian Henry        <florian.henry@open-concept.pro>\n * Copyright (C) 2013-2016 Alexandre Spangaro   <aspangaro@open-dsi.fr>\n * Copyright (C) 2015-2017 Jean-Fran\u00e7ois Ferry  <jfefe@aternatik.fr>\n * Copyright (C) 2015      Ari Elbaz (elarifr)  <github@accedinfo.com>\n * Copyright (C) 2015-2018 Charlene Benke       <charlie@patas-monkey.com>\n * Copyright (C) 2016      Rapha\u00ebl Doursenaud   <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2018-2021  Fr\u00e9d\u00e9ric France     <frederic.france@netlogic.fr>\n * Copyright (C) 2018       David Beniamine     <David.Beniamine@Tetras-Libre.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *       \\file       htdocs/user/card.php\n *       \\brief      Tab of user card\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/user/class/user.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/user/class/usergroup.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formfile.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/images.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/usergroups.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/extrafields.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formother.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/security2.lib.php';\nif (!empty($conf->ldap->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/ldap.class.php';\n}\nif (!empty($conf->adherent->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\n}\nif (!empty($conf->categorie->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n}\nif (!empty($conf->stock->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/product/class/html.formproduct.class.php';\n}\n\n$id = GETPOST('id', 'int');\n$action\t\t= GETPOST('action', 'aZ09');\n$mode = GETPOST('mode', 'alpha');\n$confirm\t= GETPOST('confirm', 'alpha');\n$group = GETPOST(\"group\", \"int\", 3);\n$cancel\t\t= GETPOST('cancel', 'alpha');\n$contextpage = GETPOST('contextpage', 'aZ') ?GETPOST('contextpage', 'aZ') : 'useracard'; // To manage different context of search\n\n$dateemployment = dol_mktime(0, 0, 0, GETPOST('dateemploymentmonth', 'int'), GETPOST('dateemploymentday', 'int'), GETPOST('dateemploymentyear', 'int'));\n$dateemploymentend = dol_mktime(0, 0, 0, GETPOST('dateemploymentendmonth', 'int'), GETPOST('dateemploymentendday', 'int'), GETPOST('dateemploymentendyear', 'int'));\n$datestartvalidity = dol_mktime(0, 0, 0, GETPOST('datestartvaliditymonth', 'int'), GETPOST('datestartvalidityday', 'int'), GETPOST('datestartvalidityyear', 'int'));\n$dateendvalidity = dol_mktime(0, 0, 0, GETPOST('dateendvaliditymonth', 'int'), GETPOST('dateendvalidityday', 'int'), GETPOST('dateendvalidityyear', 'int'));\n$dateofbirth = dol_mktime(0, 0, 0, GETPOST('dateofbirthmonth', 'int'), GETPOST('dateofbirthday', 'int'), GETPOST('dateofbirthyear', 'int'));\n\n// Define value to know what current user can do on users\n$canadduser = (!empty($user->admin) || $user->rights->user->user->creer);\n$canreaduser = (!empty($user->admin) || $user->rights->user->user->lire);\n$canedituser = (!empty($user->admin) || $user->rights->user->user->creer);\n$candisableuser = (!empty($user->admin) || $user->rights->user->user->supprimer);\n$canreadgroup = $canreaduser;\n$caneditgroup = $canedituser;\nif (!empty($conf->global->MAIN_USE_ADVANCED_PERMS)) {\n\t$canreadgroup = (!empty($user->admin) || $user->rights->user->group_advance->read);\n\t$caneditgroup = (!empty($user->admin) || $user->rights->user->group_advance->write);\n}\n\n$childids = $user->getAllChildIds(1);\t// For later, test on salary visibility\n\n// Define value to know what current user can do on properties of edited user\nif ($id > 0) {\n\t// $user is the current logged user, $id is the user we want to edit\n\t$caneditfield = ((($user->id == $id) && $user->rights->user->self->creer) || (($user->id != $id) && $user->rights->user->user->creer));\n\t$caneditpassword = ((($user->id == $id) && $user->rights->user->self->password) || (($user->id != $id) && $user->rights->user->user->password));\n}\n\n// Security check\n$socid = 0;\nif ($user->socid > 0) {\n\t$socid = $user->socid;\n}\n$feature2 = 'user';\n$result = restrictedArea($user, 'user', $id, 'user', $feature2);\n\nif ($user->id != $id && !$canreaduser) {\n\taccessforbidden();\n}\n\n// Load translation files required by page\n$langs->loadLangs(array('users', 'companies', 'ldap', 'admin', 'hrm', 'stocks', 'other'));\n\n$object = new User($db);\n$extrafields = new ExtraFields($db);\n\n// fetch optionals attributes and labels\n$extrafields->fetch_name_optionals_label($object->table_element);\n\n$socialnetworks = getArrayOfSocialNetworks();\n\n// Initialize technical object to manage hooks. Note that conf->hooks_modules contains array\n$hookmanager->initHooks(array('usercard', 'globalcard'));\n\n$error = 0;\n\n\n/**\n * Actions\n */\n\n$parameters = array('id' => $id, 'socid' => $socid, 'group' => $group, 'caneditgroup' => $caneditgroup);\n$reshook = $hookmanager->executeHooks('doActions', $parameters, $object, $action); // Note that $action and $object may have been modified by some hooks\nif ($reshook < 0) {\n\tsetEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n}\n\nif (empty($reshook)) {\n\t$backurlforlist = DOL_URL_ROOT.'/user/list.php';\n\n\tif (empty($backtopage) || ($cancel && empty($id))) {\n\t\tif (empty($backtopage) || ($cancel && strpos($backtopage, '__ID__'))) {\n\t\t\tif (empty($id) && (($action != 'add' && $action != 'create') || $cancel)) {\n\t\t\t\t$backtopage = $backurlforlist;\n\t\t\t} else {\n\t\t\t\t$backtopage = DOL_URL_ROOT.'/user/card.php?id='.((!empty($id) && $id > 0) ? $id : '__ID__');\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($cancel) {\n\t\tif (!empty($backtopageforcancel)) {\n\t\t\theader(\"Location: \".$backtopageforcancel);\n\t\t\texit;\n\t\t} elseif (!empty($backtopage)) {\n\t\t\theader(\"Location: \".$backtopage);\n\t\t\texit;\n\t\t}\n\t\t$action = '';\n\t}\n\n\tif ($action == 'confirm_disable' && $confirm == \"yes\" && $candisableuser) {\n\t\tif ($id != $user->id) {\t\t// A user can't disable itself\n\t\t\t$object->fetch($id);\n\t\t\tif ($object->admin && empty($user->admin)) {\n\t\t\t\t// If user to delete is an admin user and if logged user is not admin, we deny the operation.\n\t\t\t\t$error++;\n\t\t\t\tsetEventMessages($langs->trans(\"OnlyAdminUsersCanDisableAdminUsers\"), null, 'errors');\n\t\t\t} else {\n\t\t\t\t$object->setstatus(0);\n\t\t\t\theader(\"Location: \".$_SERVER['PHP_SELF'].'?id='.$id);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($action == 'confirm_enable' && $confirm == \"yes\" && $candisableuser) {\n\t\t$error = 0;\n\n\t\tif ($id != $user->id) {\n\t\t\t$object->fetch($id);\n\n\t\t\tif (!empty($conf->file->main_limit_users)) {\n\t\t\t\t$nb = $object->getNbOfUsers(\"active\");\n\t\t\t\tif ($nb >= $conf->file->main_limit_users) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tsetEventMessages($langs->trans(\"YourQuotaOfUsersIsReached\"), null, 'errors');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t$object->setstatus(1);\n\t\t\t\theader(\"Location: \".$_SERVER['PHP_SELF'].'?id='.$id);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($action == 'confirm_delete' && $confirm == \"yes\" && $candisableuser) {\n\t\tif ($id != $user->id) {\n\t\t\tif (!GETPOSTISSET('token')) {\n\t\t\t\tprint 'Error, token required for this critical operation';\n\t\t\t\texit;\n\t\t\t}\n\n\t\t\t$object = new User($db);\n\t\t\t$object->fetch($id);\n\t\t\t$object->oldcopy = clone $object;\n\n\t\t\t$result = $object->delete($user);\n\t\t\tif ($result < 0) {\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tsetEventMessages($langs->trans(\"ErrorUserCannotBeDelete\"), null, 'errors');\n\t\t\t} else {\n\t\t\t\tsetEventMessages($langs->trans(\"RecordDeleted\"), null);\n\t\t\t\theader(\"Location: \".DOL_URL_ROOT.\"/user/list.php?restore_lastsearch_values=1\");\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Action Add user\n\tif ($action == 'add' && $canadduser) {\n\t\t$error = 0;\n\n\t\tif (!GETPOST(\"lastname\")) {\n\t\t\t$error++;\n\t\t\tsetEventMessages($langs->trans(\"NameNotDefined\"), null, 'errors');\n\t\t\t$action = \"create\"; // Go back to create page\n\t\t}\n\t\tif (!GETPOST(\"login\")) {\n\t\t\t$error++;\n\t\t\tsetEventMessages($langs->trans(\"LoginNotDefined\"), null, 'errors');\n\t\t\t$action = \"create\"; // Go back to create page\n\t\t}\n\n\t\tif (!empty($conf->file->main_limit_users)) { // If option to limit users is set\n\t\t\t$nb = $object->getNbOfUsers(\"active\");\n\t\t\tif ($nb >= $conf->file->main_limit_users) {\n\t\t\t\t$error++;\n\t\t\t\tsetEventMessages($langs->trans(\"YourQuotaOfUsersIsReached\"), null, 'errors');\n\t\t\t\t$action = \"create\"; // Go back to create page\n\t\t\t}\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$object->civility_code = GETPOST(\"civility_code\", 'aZ09');\n\t\t\t$object->lastname = GETPOST(\"lastname\", 'alphanohtml');\n\t\t\t$object->firstname = GETPOST(\"firstname\", 'alphanohtml');\n\t\t\t$object->login = GETPOST(\"login\", 'alphanohtml');\n\t\t\t$object->api_key = GETPOST(\"api_key\", 'alphanohtml');\n\t\t\t$object->gender = GETPOST(\"gender\", 'aZ09');\n\t\t\t$object->admin = GETPOST(\"admin\", 'int');\n\t\t\t$object->address = GETPOST('address', 'alphanohtml');\n\t\t\t$object->zip = GETPOST('zipcode', 'alphanohtml');\n\t\t\t$object->town = GETPOST('town', 'alphanohtml');\n\t\t\t$object->country_id = GETPOST('country_id', 'int');\n\t\t\t$object->state_id = GETPOST('state_id', 'int');\n\t\t\t$object->office_phone = GETPOST(\"office_phone\", 'alphanohtml');\n\t\t\t$object->office_fax = GETPOST(\"office_fax\", 'alphanohtml');\n\t\t\t$object->user_mobile = GETPOST(\"user_mobile\", 'alphanohtml');\n\n\t\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\t\t$object->socialnetworks = array();\n\t\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\t\tif (GETPOST($key, 'alphanohtml')) {\n\t\t\t\t\t\t$object->socialnetworks[$key] = GETPOST($key, 'alphanohtml');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$object->email = preg_replace('/\\s+/', '', GETPOST(\"email\", 'alphanohtml'));\n\t\t\t$object->job = GETPOST(\"job\", 'alphanohtml');\n\t\t\t$object->signature = GETPOST(\"signature\", 'restricthtml');\n\t\t\t$object->accountancy_code = GETPOST(\"accountancy_code\", 'alphanohtml');\n\t\t\t$object->note = GETPOST(\"note\", 'restricthtml');\n\t\t\t$object->note_private = GETPOST(\"note\", 'restricthtml');\n\t\t\t$object->ldap_sid = GETPOST(\"ldap_sid\", 'alphanohtml');\n\t\t\t$object->fk_user = GETPOST(\"fk_user\", 'int') > 0 ? GETPOST(\"fk_user\", 'int') : 0;\n\t\t\t$object->fk_user_expense_validator = GETPOST(\"fk_user_expense_validator\", 'int') > 0 ? GETPOST(\"fk_user_expense_validator\", 'int') : 0;\n\t\t\t$object->fk_user_holiday_validator = GETPOST(\"fk_user_holiday_validator\", 'int') > 0 ? GETPOST(\"fk_user_holiday_validator\", 'int') : 0;\n\t\t\t$object->employee = GETPOST('employee', 'alphanohtml');\n\n\t\t\t$object->thm = GETPOST(\"thm\", 'alphanohtml') != '' ? GETPOST(\"thm\", 'alphanohtml') : '';\n\t\t\t$object->thm = price2num($object->thm);\n\t\t\t$object->tjm = GETPOST(\"tjm\", 'alphanohtml') != '' ? GETPOST(\"tjm\", 'alphanohtml') : '';\n\t\t\t$object->tjm = price2num($object->tjm);\n\t\t\t$object->salary = GETPOST(\"salary\", 'alphanohtml') != '' ? GETPOST(\"salary\", 'alphanohtml') : '';\n\t\t\t$object->salary = price2num($object->salary);\n\t\t\t$object->salaryextra = GETPOST(\"salaryextra\", 'alphanohtml') != '' ? GETPOST(\"salaryextra\", 'alphanohtml') : '';\n\t\t\t$object->weeklyhours = GETPOST(\"weeklyhours\", 'alphanohtml') != '' ? GETPOST(\"weeklyhours\", 'alphanohtml') : '';\n\n\t\t\t$object->color = GETPOST(\"color\", 'alphanohtml') != '' ? GETPOST(\"color\", 'alphanohtml') : '';\n\n\t\t\t$object->dateemployment = $dateemployment;\n\t\t\t$object->dateemploymentend = $dateemploymentend;\n\t\t\t$object->datestartvalidity = $datestartvalidity;\n\t\t\t$object->dateendvalidity = $dateendvalidity;\n\t\t\t$object->birth = $dateofbirth;\n\n\t\t\t$object->fk_warehouse = GETPOST('fk_warehouse', 'int');\n\n\t\t\t$object->lang = GETPOST('default_lang', 'aZ09');\n\n\t\t\t// Fill array 'array_options' with data from add form\n\t\t\t$ret = $extrafields->setOptionalsFromPost(null, $object);\n\t\t\tif ($ret < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\n\t\t\t// Set entity property\n\t\t\t$entity = GETPOST('entity', 'int');\n\t\t\tif (!empty($conf->multicompany->enabled)) {\n\t\t\t\tif (GETPOST('superadmin', 'int')) {\n\t\t\t\t\t$object->entity = 0;\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE)) {\n\t\t\t\t\t\t$object->entity = 1; // all users are forced into master entity\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$object->entity = ($entity == '' ? 1 : $entity);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$object->entity = ($entity == '' ? 1 : $entity);\n\t\t\t\t/*if ($user->admin && $user->entity == 0 && GETPOST(\"admin\",'alpha'))\n\t\t\t\t{\n\t\t\t\t}*/\n\t\t\t}\n\n\t\t\t$db->begin();\n\n\t\t\t$id = $object->create($user);\n\t\t\tif ($id > 0) {\n\t\t\t\tif (GETPOST('password', 'none')) {\n\t\t\t\t\t$object->setPassword($user, GETPOST('password', 'none'));\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->categorie->enabled)) {\n\t\t\t\t\t// Categories association\n\t\t\t\t\t$usercats = GETPOST('usercats', 'array');\n\t\t\t\t\t$object->setCategories($usercats);\n\t\t\t\t}\n\t\t\t\t$db->commit();\n\n\t\t\t\theader(\"Location: \".$_SERVER['PHP_SELF'].'?id='.$id);\n\t\t\t\texit;\n\t\t\t} else {\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t$db->rollback();\n\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t$action = \"create\"; // Go back to create page\n\t\t\t}\n\t\t}\n\t}\n\n\t// Action add usergroup\n\tif (($action == 'addgroup' || $action == 'removegroup') && $caneditgroup) {\n\t\tif ($group) {\n\t\t\t$editgroup = new UserGroup($db);\n\t\t\t$editgroup->fetch($group);\n\t\t\t$editgroup->oldcopy = clone $editgroup;\n\n\t\t\t$object->fetch($id);\n\t\t\tif ($action == 'addgroup') {\n\t\t\t\t$result = $object->SetInGroup($group, $editgroup->entity);\n\t\t\t}\n\t\t\tif ($action == 'removegroup') {\n\t\t\t\t$result = $object->RemoveFromGroup($group, $editgroup->entity);\n\t\t\t}\n\n\t\t\tif ($result > 0) {\n\t\t\t\t$action = '';\n\t\t\t} else {\n\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($action == 'update' && !$cancel) {\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t\tif ($caneditfield) {    // Case we can edit all field\n\t\t\t$error = 0;\n\n\t\t\tif (!GETPOST(\"lastname\", 'alpha')) {\n\t\t\t\tsetEventMessages($langs->trans(\"NameNotDefined\"), null, 'errors');\n\t\t\t\t$action = \"edit\"; // Go back to create page\n\t\t\t\t$error++;\n\t\t\t}\n\t\t\tif (!GETPOST(\"login\", 'alpha')) {\n\t\t\t\tsetEventMessages($langs->trans(\"LoginNotDefined\"), null, 'errors');\n\t\t\t\t$action = \"edit\"; // Go back to create page\n\t\t\t\t$error++;\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t$object->fetch($id);\n\n\t\t\t\t$object->oldcopy = clone $object;\n\n\t\t\t\t$db->begin();\n\n\t\t\t\t$object->civility_code = GETPOST(\"civility_code\", 'aZ09');\n\t\t\t\t$object->lastname = GETPOST(\"lastname\", 'alphanohtml');\n\t\t\t\t$object->firstname = GETPOST(\"firstname\", 'alphanohtml');\n\t\t\t\t$object->login = GETPOST(\"login\", 'alphanohtml');\n\t\t\t\t$object->gender = GETPOST(\"gender\", 'aZ09');\n\t\t\t\t$object->pass = GETPOST(\"password\", 'none');\t// We can keep 'none' for password fields\n\t\t\t\t$object->api_key = (GETPOST(\"api_key\", 'alphanohtml')) ? GETPOST(\"api_key\", 'alphanohtml') : $object->api_key;\n\t\t\t\tif (!empty($user->admin)) {\n\t\t\t\t\t$object->admin = GETPOST(\"admin\", \"int\"); // admin flag can only be set/unset by an admin user. A test is also done later when forging sql request\n\t\t\t\t}\n\t\t\t\t$object->address = GETPOST('address', 'alphanohtml');\n\t\t\t\t$object->zip = GETPOST('zipcode', 'alphanohtml');\n\t\t\t\t$object->town = GETPOST('town', 'alphanohtml');\n\t\t\t\t$object->country_id = GETPOST('country_id', 'int');\n\t\t\t\t$object->state_id = GETPOST('state_id', 'int');\n\t\t\t\t$object->office_phone = GETPOST(\"office_phone\", 'alphanohtml');\n\t\t\t\t$object->office_fax = GETPOST(\"office_fax\", 'alphanohtml');\n\t\t\t\t$object->user_mobile = GETPOST(\"user_mobile\", 'alphanohtml');\n\n\t\t\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\t\t\t$object->socialnetworks = array();\n\t\t\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\t\t\tif (GETPOST($key, 'alphanohtml')) {\n\t\t\t\t\t\t\t$object->socialnetworks[$key] = GETPOST($key, 'alphanohtml');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$object->email = preg_replace('/\\s+/', '', GETPOST(\"email\", 'alphanohtml'));\n\t\t\t\t$object->job = GETPOST(\"job\", 'alphanohtml');\n\t\t\t\t$object->signature = GETPOST(\"signature\", 'restricthtml');\n\t\t\t\t$object->accountancy_code = GETPOST(\"accountancy_code\", 'alphanohtml');\n\t\t\t\t$object->openid = GETPOST(\"openid\", 'alphanohtml');\n\t\t\t\t$object->fk_user = GETPOST(\"fk_user\", 'int') > 0 ? GETPOST(\"fk_user\", 'int') : 0;\n\t\t\t\t$object->fk_user_expense_validator = GETPOST(\"fk_user_expense_validator\", 'int') > 0 ? GETPOST(\"fk_user_expense_validator\", 'int') : 0;\n\t\t\t\t$object->fk_user_holiday_validator = GETPOST(\"fk_user_holiday_validator\", 'int') > 0 ? GETPOST(\"fk_user_holiday_validator\", 'int') : 0;\n\t\t\t\t$object->employee = GETPOST('employee', 'int');\n\n\t\t\t\t$object->thm = GETPOST(\"thm\", 'alphanohtml') != '' ? GETPOST(\"thm\", 'alphanohtml') : '';\n\t\t\t\t$object->thm = price2num($object->thm);\n\t\t\t\t$object->tjm = GETPOST(\"tjm\", 'alphanohtml') != '' ? GETPOST(\"tjm\", 'alphanohtml') : '';\n\t\t\t\t$object->thm = price2num($object->thm);\n\t\t\t\t$object->salary = GETPOST(\"salary\", 'alphanohtml') != '' ? GETPOST(\"salary\", 'alphanohtml') : '';\n\t\t\t\t$object->salary = price2num($object->salary);\n\t\t\t\t$object->salaryextra = GETPOST(\"salaryextra\", 'alphanohtml') != '' ? GETPOST(\"salaryextra\", 'alphanohtml') : '';\n\t\t\t\t$object->salaryextra = price2num($object->salaryextra);\n\t\t\t\t$object->weeklyhours = GETPOST(\"weeklyhours\", 'alphanohtml') != '' ? GETPOST(\"weeklyhours\", 'alphanohtml') : '';\n\t\t\t\t$object->weeklyhours = price2num($object->weeklyhours);\n\n\t\t\t\t$object->color = GETPOST(\"color\", 'alphanohtml') != '' ? GETPOST(\"color\", 'alphanohtml') : '';\n\t\t\t\t$object->dateemployment = $dateemployment;\n\t\t\t\t$object->dateemploymentend = $dateemploymentend;\n\t\t\t\t$object->datestartvalidity = $datestartvalidity;\n\t\t\t\t$object->dateendvalidity = $dateendvalidity;\n\t\t\t\t$object->birth = $dateofbirth;\n\n\t\t\t\tif (!empty($conf->stock->enabled)) {\n\t\t\t\t\t$object->fk_warehouse = GETPOST('fk_warehouse', 'int');\n\t\t\t\t}\n\n\t\t\t\t$object->lang = GETPOST('default_lang', 'aZ09');\n\n\t\t\t\t// Do we update also ->entity ?\n\t\t\t\tif (!empty($conf->multicompany->enabled && $user->entity == 0 && !empty($user->admin))) {\t// If multicompany is not enabled, we never update the entity of a user.\n\t\t\t\t\tif (GETPOST('superadmin', 'int')) {\n\t\t\t\t\t\t$object->entity = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE)) {\n\t\t\t\t\t\t\t$object->entity = 1; // all users are in master entity\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// We try to change the entity of user\n\t\t\t\t\t\t\t$object->entity = (GETPOSTISSET('entity') ? GETPOSTINT('entity') : $object->entity);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Fill array 'array_options' with data from add form\n\t\t\t\t$ret = $extrafields->setOptionalsFromPost(null, $object, '@GETPOSTISSET');\n\t\t\t\tif ($ret < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\n\t\t\t\tif (GETPOST('deletephoto')) {\n\t\t\t\t\t$object->photo = '';\n\t\t\t\t}\n\t\t\t\tif (!empty($_FILES['photo']['name'])) {\n\t\t\t\t\t$isimage = image_format_supported($_FILES['photo']['name']);\n\t\t\t\t\tif ($isimage > 0) {\n\t\t\t\t\t\t$object->photo = dol_sanitizeFileName($_FILES['photo']['name']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorBadImageFormat\"), null, 'errors');\n\t\t\t\t\t\tdol_syslog($langs->transnoentities(\"ErrorBadImageFormat\"), LOG_INFO);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\t$ret = $object->update($user);\n\t\t\t\t\tif ($ret < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tif ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n\t\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorLoginAlreadyExists\", $object->login), null, 'errors');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t\t\t$action = 'edit';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error && GETPOSTISSET('contactid')) {\n\t\t\t\t\t$contactid = GETPOST('contactid', 'int');\n\t\t\t\t\t$socid = GETPOST('socid', 'int');\n\n\t\t\t\t\tif ($contactid > 0) {\t// The 'contactid' is used inpriority over the 'socid'\n\t\t\t\t\t\t$contact = new Contact($db);\n\t\t\t\t\t\t$contact->fetch($contactid);\n\n\t\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"user\";\n\t\t\t\t\t\t$sql .= \" SET fk_socpeople=\".((int) $contactid);\n\t\t\t\t\t\tif (!empty($contact->socid)) {\n\t\t\t\t\t\t\t$sql .= \", fk_soc=\".((int) $contact->socid);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $object->id);\n\t\t\t\t\t} elseif ($socid > 0) {\n\t\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"user\";\n\t\t\t\t\t\t$sql .= \" SET fk_socpeople=NULL, fk_soc=\".((int) $socid);\n\t\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $object->id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"user\";\n\t\t\t\t\t\t$sql .= \" SET fk_socpeople=NULL, fk_soc=NULL\";\n\t\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $object->id);\n\t\t\t\t\t}\n\t\t\t\t\tdol_syslog(\"usercard::update\", LOG_DEBUG);\n\t\t\t\t\t$resql = $db->query($sql);\n\t\t\t\t\tif (!$resql) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tsetEventMessages($db->lasterror(), null, 'errors');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error && !count($object->errors)) {\n\t\t\t\t\tif (GETPOST('deletephoto') && $object->oldcopy->photo) {\n\t\t\t\t\t\t$fileimg = $conf->user->dir_output.'/'.get_exdir(0, 0, 0, 0, $object, 'user').$object->oldcopy->photo;\n\t\t\t\t\t\t$dirthumbs = $conf->user->dir_output.'/'.get_exdir(0, 0, 0, 0, $object, 'user').'/thumbs';\n\t\t\t\t\t\tdol_delete_file($fileimg);\n\t\t\t\t\t\tdol_delete_dir_recursive($dirthumbs);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($_FILES['photo']['tmp_name']) && trim($_FILES['photo']['tmp_name'])) {\n\t\t\t\t\t\t$dir = $conf->user->dir_output.'/'.get_exdir(0, 0, 0, 1, $object, 'user');\n\n\t\t\t\t\t\tdol_mkdir($dir);\n\n\t\t\t\t\t\tif (@is_dir($dir)) {\n\t\t\t\t\t\t\t$newfile = $dir.'/'.dol_sanitizeFileName($_FILES['photo']['name']);\n\t\t\t\t\t\t\t$result = dol_move_uploaded_file($_FILES['photo']['tmp_name'], $newfile, 1, 0, $_FILES['photo']['error']);\n\n\t\t\t\t\t\t\tif (!$result > 0) {\n\t\t\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorFailedToSaveFile\"), null, 'errors');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Create thumbs\n\t\t\t\t\t\t\t\t$object->addThumbs($newfile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorFailedToCreateDir\", $dir), $mesgs, 'errors');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error && !count($object->errors)) {\n\t\t\t\t\t// Then we add the associated categories\n\t\t\t\t\t$categories = GETPOST('usercats', 'array');\n\t\t\t\t\t$object->setCategories($categories);\n\t\t\t\t}\n\n\t\t\t\tif (!$error && !count($object->errors)) {\n\t\t\t\t\tsetEventMessages($langs->trans(\"UserModified\"), null, 'mesgs');\n\t\t\t\t\t$db->commit();\n\n\t\t\t\t\t$login = $_SESSION[\"dol_login\"];\n\t\t\t\t\tif ($login && $login == $object->oldcopy->login && $object->oldcopy->login != $object->login) {    // Current user has changed its login\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\tsetEventMessages($langs->transnoentitiesnoconv(\"WarningYourLoginWasModifiedPleaseLogin\"), null, 'warnings');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif ($caneditpassword) {    // Case we can edit only password\n\t\t\t\tdol_syslog(\"Not allowed to change fields, only password\");\n\n\t\t\t\t$object->fetch($id);\n\n\t\t\t\tif (GETPOST(\"password\", \"none\")) {\t// If pass is empty, we do not change it.\n\t\t\t\t\t$object->oldcopy = clone $object;\n\n\t\t\t\t\t$ret = $object->setPassword($user, GETPOST(\"password\", \"none\"));\n\t\t\t\t\tif ($ret < 0) {\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Change password with a new generated one\n\tif ((($action == 'confirm_password' && $confirm == 'yes')\n\t\t\t|| ($action == 'confirm_passwordsend' && $confirm == 'yes')) && $caneditpassword\n\t) {\n\t\t$object->fetch($id);\n\n\t\t$newpassword = $object->setPassword($user, '');\t// This will generate a new password\n\t\tif ($newpassword < 0) {\n\t\t\t// Echec\n\t\t\tsetEventMessages($langs->trans(\"ErrorFailedToSetNewPassword\"), null, 'errors');\n\t\t} else {\n\t\t\t// Succes\n\t\t\tif ($action == 'confirm_passwordsend' && $confirm == 'yes') {\n\t\t\t\tif ($object->send_password($user, $newpassword) > 0) {\n\t\t\t\t\tsetEventMessages($langs->trans(\"PasswordChangedAndSentTo\", $object->email), null, 'mesgs');\n\t\t\t\t} else {\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetEventMessages($langs->trans(\"PasswordChangedTo\", $newpassword), null, 'warnings');\n\t\t\t}\n\t\t}\n\t}\n\n\t// Action initialisation donnees depuis record LDAP\n\tif ($action == 'adduserldap' && $canadduser) {\n\t\t$selecteduser = GETPOST('users');\n\n\t\t$required_fields = array(\n\t\t\t$conf->global->LDAP_KEY_USERS,\n\t\t\t$conf->global->LDAP_FIELD_NAME,\n\t\t\t$conf->global->LDAP_FIELD_FIRSTNAME,\n\t\t\t$conf->global->LDAP_FIELD_LOGIN,\n\t\t\t$conf->global->LDAP_FIELD_LOGIN_SAMBA,\n\t\t\t$conf->global->LDAP_FIELD_PASSWORD,\n\t\t\t$conf->global->LDAP_FIELD_PASSWORD_CRYPTED,\n\t\t\t$conf->global->LDAP_FIELD_PHONE,\n\t\t\t$conf->global->LDAP_FIELD_FAX,\n\t\t\t$conf->global->LDAP_FIELD_MOBILE,\n\t\t\t$conf->global->LDAP_FIELD_SKYPE,\n\t\t\t$conf->global->LDAP_FIELD_MAIL,\n\t\t\t$conf->global->LDAP_FIELD_TITLE,\n\t\t\t$conf->global->LDAP_FIELD_DESCRIPTION,\n\t\t\t$conf->global->LDAP_FIELD_SID\n\t\t);\n\n\t\t$ldap = new Ldap();\n\t\t$result = $ldap->connect_bind();\n\t\tif ($result >= 0) {\n\t\t\t// Remove from required_fields all entries not configured in LDAP (empty) and duplicated\n\t\t\t$required_fields = array_unique(array_values(array_filter($required_fields, \"dol_validElement\")));\n\n\t\t\t$ldapusers = $ldap->getRecords($selecteduser, $conf->global->LDAP_USER_DN, $conf->global->LDAP_KEY_USERS, $required_fields);\n\t\t\t//print_r($ldapusers);\n\n\t\t\tif (is_array($ldapusers)) {\n\t\t\t\tforeach ($ldapusers as $key => $attribute) {\n\t\t\t\t\t$ldap_lastname = $attribute[$conf->global->LDAP_FIELD_NAME];\n\t\t\t\t\t$ldap_firstname = $attribute[$conf->global->LDAP_FIELD_FIRSTNAME];\n\t\t\t\t\t$ldap_login = $attribute[$conf->global->LDAP_FIELD_LOGIN];\n\t\t\t\t\t$ldap_loginsmb = $attribute[$conf->global->LDAP_FIELD_LOGIN_SAMBA];\n\t\t\t\t\t$ldap_pass = $attribute[$conf->global->LDAP_FIELD_PASSWORD];\n\t\t\t\t\t$ldap_pass_crypted = $attribute[$conf->global->LDAP_FIELD_PASSWORD_CRYPTED];\n\t\t\t\t\t$ldap_phone = $attribute[$conf->global->LDAP_FIELD_PHONE];\n\t\t\t\t\t$ldap_fax = $attribute[$conf->global->LDAP_FIELD_FAX];\n\t\t\t\t\t$ldap_mobile = $attribute[$conf->global->LDAP_FIELD_MOBILE];\n\t\t\t\t\t$ldap_social['skype'] = $attribute[$conf->global->LDAP_FIELD_SKYPE];\n\t\t\t\t\t$ldap_social['twitter'] = $attribute[$conf->global->LDAP_FIELD_TWITTER];\n\t\t\t\t\t$ldap_social['facebook'] = $attribute[$conf->global->LDAP_FIELD_FACEBOOK];\n\t\t\t\t\t$ldap_social['linkedin'] = $attribute[$conf->global->LDAP_FIELD_LINKEDIN];\n\t\t\t\t\t$ldap_mail = $attribute[$conf->global->LDAP_FIELD_MAIL];\n\t\t\t\t\t$ldap_sid = $attribute[$conf->global->LDAP_FIELD_SID];\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tsetEventMessages($ldap->error, $ldap->errors, 'errors');\n\t\t}\n\t}\n\n\t// Actions to send emails\n\t$triggersendname = 'USER_SENTBYMAIL';\n\t$paramname = 'id'; // Name of param key to open the card\n\t$mode = 'emailfromuser';\n\t$trackid = 'use'.$id;\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_sendmails.inc.php';\n\n\t// Actions to build doc\n\t$upload_dir = $conf->user->dir_output;\n\t$permissiontoadd = $user->rights->user->user->creer;\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_builddoc.inc.php';\n}\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formother = new FormOther($db);\n$formcompany = new FormCompany($db);\n$formadmin = new FormAdmin($db);\n$formfile = new FormFile($db);\nif (!empty($conf->stock->enabled)) {\n\t$formproduct = new FormProduct($db);\n}\n\nllxHeader('', $langs->trans(\"UserCard\"));\n\nif ($action == 'create' || $action == 'adduserldap') {\n\tprint load_fiche_titre($langs->trans(\"NewUser\"), '', 'user');\n\n\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"CreateInternalUserDesc\").\"</span><br>\\n\";\n\tprint \"<br>\";\n\n\n\tif (!empty($conf->ldap->enabled) && (isset($conf->global->LDAP_SYNCHRO_ACTIVE) && getDolGlobalInt('LDAP_SYNCHRO_ACTIVE') === Ldap::SYNCHRO_LDAP_TO_DOLIBARR)) {\n\t\t// Show form to add an account from LDAP if sync LDAP -> Dolibarr is set\n\t\t$ldap = new Ldap();\n\t\t$result = $ldap->connect_bind();\n\t\tif ($result >= 0) {\n\t\t\t$required_fields = array(\n\t\t\t\t$conf->global->LDAP_KEY_USERS,\n\t\t\t\t$conf->global->LDAP_FIELD_FULLNAME,\n\t\t\t\t$conf->global->LDAP_FIELD_NAME,\n\t\t\t\t$conf->global->LDAP_FIELD_FIRSTNAME,\n\t\t\t\t$conf->global->LDAP_FIELD_LOGIN,\n\t\t\t\t$conf->global->LDAP_FIELD_LOGIN_SAMBA,\n\t\t\t\t$conf->global->LDAP_FIELD_PASSWORD,\n\t\t\t\t$conf->global->LDAP_FIELD_PASSWORD_CRYPTED,\n\t\t\t\t$conf->global->LDAP_FIELD_PHONE,\n\t\t\t\t$conf->global->LDAP_FIELD_FAX,\n\t\t\t\t$conf->global->LDAP_FIELD_MOBILE,\n\t\t\t\t$conf->global->LDAP_FIELD_SKYPE,\n\t\t\t\t$conf->global->LDAP_FIELD_MAIL,\n\t\t\t\t$conf->global->LDAP_FIELD_TITLE,\n\t\t\t\t$conf->global->LDAP_FIELD_DESCRIPTION,\n\t\t\t\t$conf->global->LDAP_FIELD_SID\n\t\t\t);\n\n\t\t\t// Remove from required_fields all entries not configured in LDAP (empty) and duplicated\n\t\t\t$required_fields = array_unique(array_values(array_filter($required_fields, \"dol_validElement\")));\n\n\t\t\t// Get from LDAP database an array of results\n\t\t\t$ldapusers = $ldap->getRecords('*', $conf->global->LDAP_USER_DN, $conf->global->LDAP_KEY_USERS, $required_fields, 1);\n\n\t\t\tif (is_array($ldapusers)) {\n\t\t\t\t$liste = array();\n\t\t\t\tforeach ($ldapusers as $key => $ldapuser) {\n\t\t\t\t\t// Define the label string for this user\n\t\t\t\t\t$label = '';\n\t\t\t\t\tforeach ($required_fields as $value) {\n\t\t\t\t\t\tif ($value === $conf->global->LDAP_FIELD_PASSWORD || $value === $conf->global->LDAP_FIELD_PASSWORD_CRYPTED) {\n\t\t\t\t\t\t\t$label .= $value.\"=******* \";\n\t\t\t\t\t\t} elseif ($value) {\n\t\t\t\t\t\t\t$label .= $value.\"=\".$ldapuser[$value].\" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$liste[$key] = $label;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetEventMessages($ldap->error, $ldap->errors, 'errors');\n\t\t\t}\n\t\t} else {\n\t\t\tsetEventMessages($ldap->error, $ldap->errors, 'errors');\n\t\t}\n\n\t\t// If user list is full, we show drop-down list\n\t\tprint \"\\n\\n<!-- Form liste LDAP debut -->\\n\";\n\n\t\tprint '<form name=\"add_user_ldap\" action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"post\">';\n\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\tprint '<table class=\"border centpercent\"><tr>';\n\t\tprint '<td width=\"160\">';\n\t\tprint $langs->trans(\"LDAPUsers\");\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tprint '<input type=\"hidden\" name=\"action\" value=\"adduserldap\">';\n\t\tif (is_array($liste) && count($liste)) {\n\t\t\tprint $form->selectarray('users', $liste, '', 1, 0, 0, '', 0, 0, 0, '', 'maxwidth500');\n\t\t\tprint ajax_combobox('users');\n\t\t}\n\t\tprint '</td><td class=\"center\">';\n\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.dol_escape_htmltag($langs->trans('Get')).'\"'.(count($liste) ? '' : ' disabled').'>';\n\t\tprint '</td></tr></table>';\n\t\tprint '</form>';\n\n\t\tprint \"\\n<!-- Form liste LDAP fin -->\\n\\n\";\n\t\tprint '<br>';\n\t}\n\n\n\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'\" method=\"POST\" name=\"createuser\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\tprint '<input type=\"hidden\" name=\"action\" value=\"add\">';\n\tif (!empty($ldap_sid)) {\n\t\tprint '<input type=\"hidden\" name=\"ldap_sid\" value=\"'.dol_escape_htmltag($ldap_sid).'\">';\n\t}\n\tprint '<input type=\"hidden\" name=\"entity\" value=\"'.$conf->entity.'\">';\n\n\tprint dol_get_fiche_head('', '', '', 0, '');\n\n\tdol_set_focus('#lastname');\n\n\tprint '<table class=\"border centpercent\">';\n\n\t// Civility\n\tprint '<tr><td><label for=\"civility_code\">'.$langs->trans(\"UserTitle\").'</label></td><td colspan=\"3\">';\n\tprint $formcompany->select_civility(GETPOSTISSET(\"civility_code\") ? GETPOST(\"civility_code\", 'aZ09') : $object->civility_code, 'civility_code');\n\tprint '</td></tr>';\n\n\t// Lastname\n\tprint '<tr>';\n\tprint '<td class=\"titlefieldcreate\"><span class=\"fieldrequired\">'.$langs->trans(\"Lastname\").'</span></td>';\n\tprint '<td>';\n\tif (!empty($ldap_lastname)) {\n\t\tprint '<input type=\"hidden\" id=\"lastname\" name=\"lastname\" value=\"'.dol_escape_htmltag($ldap_lastname).'\">';\n\t\tprint $ldap_lastname;\n\t} else {\n\t\tprint '<input class=\"minwidth100 maxwidth150onsmartphone\" type=\"text\" id=\"lastname\" name=\"lastname\" value=\"'.dol_escape_htmltag(GETPOST('lastname', 'alphanohtml')).'\">';\n\t}\n\tprint '</td></tr>';\n\n\t// Firstname\n\tprint '<tr><td>'.$langs->trans(\"Firstname\").'</td>';\n\tprint '<td>';\n\tif (!empty($ldap_firstname)) {\n\t\tprint '<input type=\"hidden\" name=\"firstname\" value=\"'.dol_escape_htmltag($ldap_firstname).'\">';\n\t\tprint $ldap_firstname;\n\t} else {\n\t\tprint '<input class=\"minwidth100 maxwidth150onsmartphone\" type=\"text\" name=\"firstname\" value=\"'.dol_escape_htmltag(GETPOST('firstname', 'alphanohtml')).'\">';\n\t}\n\tprint '</td></tr>';\n\n\t// Login\n\tprint '<tr><td><span class=\"fieldrequired\">'.$langs->trans(\"Login\").'</span></td>';\n\tprint '<td>';\n\tif (!empty($ldap_login)) {\n\t\tprint '<input type=\"hidden\" name=\"login\" value=\"'.dol_escape_htmltag($ldap_login).'\">';\n\t\tprint $ldap_login;\n\t} elseif (!empty($ldap_loginsmb)) {\n\t\tprint '<input type=\"hidden\" name=\"login\" value=\"'.dol_escape_htmltag($ldap_loginsmb).'\">';\n\t\tprint $ldap_loginsmb;\n\t} else {\n\t\tprint '<input class=\"maxwidth200 maxwidth150onsmartphone\" maxsize=\"24\" type=\"text\" name=\"login\" value=\"'.dol_escape_htmltag(GETPOST('login', 'alphanohtml')).'\">';\n\t}\n\tprint '</td></tr>';\n\n\t$generated_password = '';\n\tif (empty($ldap_sid)) {    // ldap_sid is for activedirectory\n\t\t$generated_password = getRandomPassword(false);\n\t}\n\t$password = (GETPOSTISSET('password') ?GETPOST('password') : $generated_password);\n\n\t// Administrator\n\tif (!empty($user->admin)) {\n\t\tprint '<tr><td>'.$langs->trans(\"Administrator\").'</td>';\n\t\tprint '<td>';\n\t\tprint $form->selectyesno('admin', GETPOST('admin'), 1);\n\n\t\tif (!empty($conf->multicompany->enabled) && !$user->entity) {\n\t\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t\tprint '<script type=\"text/javascript\">\n                            $(function() {\n                                $(\"select[name=admin]\").change(function() {\n                                     if ( $(this).val() == 0 ) {\n                                        $(\"input[name=superadmin]\")\n                                            .prop(\"disabled\", true)\n                                            .prop(\"checked\", false);\n                                        $(\"select[name=entity]\")\n                                            .prop(\"disabled\", false);\n                                     } else {\n                                        $(\"input[name=superadmin]\")\n                                            .prop(\"disabled\", false);\n                                     }\n                                });\n                                $(\"input[name=superadmin]\").change(function() {\n                                    if ( $(this).is(\":checked\") ) {\n                                        $(\"select[name=entity]\")\n                                            .prop(\"disabled\", true);\n                                    } else {\n                                        $(\"select[name=entity]\")\n                                            .prop(\"disabled\", false);\n                                    }\n                                });\n                            });\n                    </script>';\n\t\t\t}\n\t\t\t$checked = (GETPOST('superadmin', 'int') ? ' checked' : '');\n\t\t\t$disabled = (GETPOST('superadmin', 'int') ? '' : ' disabled');\n\t\t\tprint '<input type=\"checkbox\" name=\"superadmin\" id=\"superadmin\" value=\"1\"'.$checked.$disabled.' /> <label for=\"superadmin\">'.$langs->trans(\"SuperAdministrator\").'</span>';\n\t\t}\n\t\tprint \"</td></tr>\\n\";\n\t}\n\n\t// Gender\n\tprint '<tr><td>'.$langs->trans(\"Gender\").'</td>';\n\tprint '<td>';\n\t$arraygender = array('man'=>$langs->trans(\"Genderman\"), 'woman'=>$langs->trans(\"Genderwoman\"), 'other'=>$langs->trans(\"Genderother\"));\n\tprint $form->selectarray('gender', $arraygender, GETPOST('gender'), 1);\n\tprint '</td></tr>';\n\n\t// Employee\n\t$defaultemployee = '1';\n\tprint '<tr>';\n\tprint '<td>'.$langs->trans('Employee').'</td><td>';\n\tprint '<input type=\"checkbox\" name=\"employee\" value=\"1\"'.(GETPOST('employee') == '1' ? ' checked=\"checked\"' : ($defaultemployee ? ' checked=\"checked\"' : '')).'>';\n\t//print $form->selectyesno(\"employee\", (GETPOST('employee') != '' ?GETPOST('employee') : $defaultemployee), 1);\n\tprint '</td></tr>';\n\n\t// Hierarchy\n\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"HierarchicalResponsible\").'</td>';\n\tprint '<td>';\n\tprint img_picto('', 'user', 'class=\"pictofixedwidth\"').$form->select_dolusers($object->fk_user, 'fk_user', 1, array($object->id), 0, '', 0, $conf->entity, 0, 0, '', 0, '', 'maxwidth300 widthcentpercentminusx');\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\t// Expense report validator\n\tif (!empty($conf->expensereport->enabled)) {\n\t\tprint '<tr><td class=\"titlefieldcreate\">';\n\t\t$text = $langs->trans(\"ForceUserExpenseValidator\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tprint img_picto('', 'user', 'class=\"pictofixedwidth\"').$form->select_dolusers($object->fk_user_expense_validator, 'fk_user_expense_validator', 1, array($object->id), 0, '', 0, $conf->entity, 0, 0, '', 0, '', 'maxwidth300 widthcentpercentminusx');\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\n\t// Holiday request validator\n\tif (!empty($conf->holiday->enabled)) {\n\t\tprint '<tr><td class=\"titlefieldcreate\">';\n\t\t$text = $langs->trans(\"ForceUserHolidayValidator\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tprint img_picto('', 'user', 'class=\"pictofixedwidth\"').$form->select_dolusers($object->fk_user_holiday_validator, 'fk_user_holiday_validator', 1, array($object->id), 0, '', 0, $conf->entity, 0, 0, '', 0, '', 'maxwidth300 widthcentpercentminusx');\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\n\t// External user\n\tprint '<tr><td>'.$langs->trans(\"ExternalUser\").' ?</td>';\n\tprint '<td>';\n\tprint $form->textwithpicto($langs->trans(\"Internal\"), $langs->trans(\"InternalExternalDesc\"), 1, 'help', '', 0, 2);\n\tprint '</td></tr>';\n\n\n\tprint '</table><hr><table class=\"border centpercent\">';\n\n\n\t// Date validity\n\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"RangeOfLoginValidity\").'</td>';\n\tprint '<td>';\n\tprint $form->selectDate($datestartvalidity, 'datestartvalidity', 0, 0, 1, 'formdatestartvalidity', 1, 1);\n\n\tprint ' &nbsp; ';\n\n\tprint $form->selectDate($dateendvalidity, 'dateendvalidity', 0, 0, 1, 'formdateendvalidity', 1, 0);\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\t// Password\n\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Password\").'</td>';\n\tprint '<td>';\n\t$valuetoshow = '';\n\tif (preg_match('/ldap/', $dolibarr_main_authentication)) {\n\t\t$valuetoshow .= ($valuetoshow ? ', ' : '').$langs->trans(\"PasswordOfUserInLDAP\");\n\t}\n\tif (preg_match('/http/', $dolibarr_main_authentication)) {\n\t\t$valuetoshow .= ($valuetoshow ? ', ' : '').$langs->trans(\"HTTPBasicPassword\");\n\t}\n\tif (preg_match('/dolibarr/', $dolibarr_main_authentication)) {\n\t\tif (!empty($ldap_pass)) {\t// For very old system comaptibilty. Now clear password can't be viewed from LDAP read\n\t\t\t$valuetoshow .= ($valuetoshow ? ', ' : '').'<input type=\"hidden\" name=\"password\" value=\"'.$ldap_pass.'\">'; // Dolibarr password is preffiled with LDAP known password\n\t\t\t$valuetoshow .= preg_replace('/./i', '*', $ldap_pass);\n\t\t} else {\n\t\t\t// We do not use a field password but a field text to show new password to use.\n\t\t\t$valuetoshow .= ($valuetoshow ? ', ' : '').'<input maxsize=\"32\" type=\"text\" name=\"password\" value=\"'.$password.'\" autocomplete=\"new-password\">';\n\t\t}\n\t}\n\n\t// Other form for user password\n\t$parameters = array('valuetoshow' => $valuetoshow, 'password' => $password);\n\t$reshook = $hookmanager->executeHooks('printUserPasswordField', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\tif ($reshook > 0) {\n\t\t$valuetoshow = $hookmanager->resPrint; // to replace\n\t} else {\n\t\t$valuetoshow .= $hookmanager->resPrint; // to add\n\t}\n\n\tprint $valuetoshow;\n\tprint '</td></tr>';\n\n\tif (!empty($conf->api->enabled)) {\n\t\t// API key\n\t\t//$generated_password = getRandomPassword(false);\n\t\tprint '<tr><td>'.$langs->trans(\"ApiKey\").'</td>';\n\t\tprint '<td>';\n\t\tprint '<input class=\"minwidth300 widthcentpercentminusx\" maxsize=\"32\" type=\"text\" id=\"api_key\" name=\"api_key\" value=\"'.GETPOST('api_key', 'alphanohtml').'\" autocomplete=\"off\">';\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\tprint '&nbsp;'.img_picto($langs->trans('Generate'), 'refresh', 'id=\"generate_api_key\" class=\"linkobject\"');\n\t\t}\n\t\tprint '</td></tr>';\n\t} else {\n\t\t// PARTIAL WORKAROUND\n\t\t$generated_fake_api_key = getRandomPassword(false);\n\t\tprint '<input type=\"hidden\" name=\"api_key\" value=\"'.$generated_fake_api_key.'\">';\n\t}\n\n\n\tprint '</table><hr><table class=\"border centpercent\">';\n\n\n\t// Address\n\tprint '<tr><td class=\"tdtop titlefieldcreate\">'.$form->editfieldkey('Address', 'address', '', $object, 0).'</td>';\n\tprint '<td><textarea name=\"address\" id=\"address\" class=\"quatrevingtpercent\" rows=\"3\" wrap=\"soft\">';\n\tprint $object->address;\n\tprint '</textarea></td></tr>';\n\n\t// Zip\n\tprint '<tr><td>'.$form->editfieldkey('Zip', 'zipcode', '', $object, 0).'</td><td>';\n\tprint $formcompany->select_ziptown($object->zip, 'zipcode', array('town', 'selectcountry_id', 'state_id'), 6);\n\tprint '</td></tr>';\n\n\t// Town\n\tprint '<tr><td>'.$form->editfieldkey('Town', 'town', '', $object, 0).'</td><td>';\n\tprint $formcompany->select_ziptown($object->town, 'town', array('zipcode', 'selectcountry_id', 'state_id'));\n\tprint '</td></tr>';\n\n\t// Country\n\tprint '<tr><td>'.$form->editfieldkey('Country', 'selectcountry_id', '', $object, 0).'</td><td class=\"maxwidthonsmartphone\">';\n\tprint img_picto('', 'country', 'class=\"pictofixedwidth\"');\n\tprint $form->select_country((GETPOST('country_id') != '' ?GETPOST('country_id') : $object->country_id));\n\tif ($user->admin) {\n\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t}\n\tprint '</td></tr>';\n\n\t// State\n\tif (empty($conf->global->USER_DISABLE_STATE)) {\n\t\tprint '<tr><td>'.$form->editfieldkey('State', 'state_id', '', $object, 0).'</td><td class=\"maxwidthonsmartphone\">';\n\t\tprint img_picto('', 'state', 'class=\"pictofixedwidth\"');\n\t\tprint $formcompany->select_state($object->state_id, $object->country_code, 'state_id');\n\t\tprint '</td></tr>';\n\t}\n\n\t// Tel\n\tprint '<tr><td>'.$langs->trans(\"PhonePro\").'</td>';\n\tprint '<td>';\n\tprint img_picto('', 'object_phoning', 'class=\"pictofixedwidth\"');\n\tif (!empty($ldap_phone)) {\n\t\tprint '<input type=\"hidden\" name=\"office_phone\" value=\"'.dol_escape_htmltag($ldap_phone).'\">';\n\t\tprint $ldap_phone;\n\t} else {\n\t\tprint '<input class=\"maxwidth200 widthcentpercentminusx\" type=\"text\" name=\"office_phone\" value=\"'.dol_escape_htmltag(GETPOST('office_phone', 'alphanohtml')).'\">';\n\t}\n\tprint '</td></tr>';\n\n\t// Tel portable\n\tprint '<tr><td>'.$langs->trans(\"PhoneMobile\").'</td>';\n\tprint '<td>';\n\tprint img_picto('', 'object_phoning_mobile', 'class=\"pictofixedwidth\"');\n\tif (!empty($ldap_mobile)) {\n\t\tprint '<input type=\"hidden\" name=\"user_mobile\" value=\"'.dol_escape_htmltag($ldap_mobile).'\">';\n\t\tprint $ldap_mobile;\n\t} else {\n\t\tprint '<input class=\"maxwidth200 widthcentpercentminusx\" type=\"text\" name=\"user_mobile\" value=\"'.dol_escape_htmltag(GETPOST('user_mobile', 'alphanohtml')).'\">';\n\t}\n\tprint '</td></tr>';\n\n\t// Fax\n\tprint '<tr><td>'.$langs->trans(\"Fax\").'</td>';\n\tprint '<td>';\n\tprint img_picto('', 'object_phoning_fax', 'class=\"pictofixedwidth\"');\n\tif (!empty($ldap_fax)) {\n\t\tprint '<input type=\"hidden\" name=\"office_fax\" value=\"'.dol_escape_htmltag($ldap_fax).'\">';\n\t\tprint $ldap_fax;\n\t} else {\n\t\tprint '<input class=\"maxwidth200 widthcentpercentminusx\" type=\"text\" name=\"office_fax\" value=\"'.dol_escape_htmltag(GETPOST('office_fax', 'alphanohtml')).'\">';\n\t}\n\tprint '</td></tr>';\n\n\t// EMail\n\tprint '<tr><td'.(!empty($conf->global->USER_MAIL_REQUIRED) ? ' class=\"fieldrequired\"' : '').'>'.$langs->trans(\"EMail\").'</td>';\n\tprint '<td>';\n\tprint img_picto('', 'object_email', 'class=\"pictofixedwidth\"');\n\tif (!empty($ldap_mail)) {\n\t\tprint '<input type=\"hidden\" name=\"email\" value=\"'.dol_escape_htmltag($ldap_mail).'\">';\n\t\tprint $ldap_mail;\n\t} else {\n\t\tprint '<input type=\"text\" name=\"email\" class=\"maxwidth500 widthcentpercentminusx\" value=\"'.dol_escape_htmltag(GETPOST('email', 'alphanohtml')).'\">';\n\t}\n\tprint '</td></tr>';\n\n\t// Social networks\n\tif (!empty($conf->socialnetworks->enabled)) {\n\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\tif ($value['active']) {\n\t\t\t\tprint '<tr><td>'.$langs->trans($value['label']).'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif (!empty($value['icon'])) {\n\t\t\t\t\tprint '<span class=\"fa '.$value['icon'].' pictofixedwidth\"></span>';\n\t\t\t\t}\n\t\t\t\tif (!empty($ldap_social[$key])) {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"'.$key.'\" value=\"'.$ldap_social[$key].'\">';\n\t\t\t\t\tprint $ldap_social[$key];\n\t\t\t\t} else {\n\t\t\t\t\tprint '<input class=\"maxwidth200 widthcentpercentminusx\" type=\"text\" name=\"'.$key.'\" value=\"'.GETPOST($key, 'alphanohtml').'\">';\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t} else {\n\t\t\t\t// if social network is not active but value exist we do not want to loose it\n\t\t\t\tif (!empty($ldap_social[$key])) {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"'.$key.'\" value=\"'.$ldap_social[$key].'\">';\n\t\t\t\t} else {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"'.$key.'\" value=\"'.GETPOST($key, 'alphanohtml').'\">';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Accountancy code\n\tif (!empty($conf->accounting->enabled)) {\n\t\tprint '<tr><td>'.$langs->trans(\"AccountancyCode\").'</td>';\n\t\tprint '<td>';\n\t\tprint '<input type=\"text\" class=\"maxwidthonsmartphone\" name=\"accountancy_code\" value=\"'.dol_escape_htmltag(GETPOST('accountancy_code', 'alphanohtml')).'\">';\n\t\tprint '</td></tr>';\n\t}\n\n\t// User color\n\tif (!empty($conf->agenda->enabled)) {\n\t\tprint '<tr><td>'.$langs->trans(\"ColorUser\").'</td>';\n\t\tprint '<td>';\n\t\tprint $formother->selectColor(GETPOSTISSET('color') ?GETPOST('color', 'alphanohtml') : $object->color, 'color', null, 1, '', 'hideifnotset');\n\t\tprint '</td></tr>';\n\t}\n\n\t// Categories\n\tif (!empty($conf->categorie->enabled) && !empty($user->rights->categorie->lire)) {\n\t\tprint '<tr><td>'.$form->editfieldkey('Categories', 'usercats', '', $object, 0).'</td><td>';\n\t\t$cate_arbo = $form->select_all_categories('user', null, 'parent', null, null, 1);\n\t\tprint img_picto('', 'category', 'class=\"pictofixedwidth\"').$form->multiselectarray('usercats', $cate_arbo, GETPOST('usercats', 'array'), 0, 0, 'maxwdith300 widthcentpercentminusx', 0, '90%');\n\t\tprint \"</td></tr>\";\n\t}\n\n\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\tprint '<tr><td>'.$form->editfieldkey('DefaultLang', 'default_lang', '', $object, 0, 'string', '', 0, 0, 'id', $langs->trans(\"WarningNotLangOfInterface\", $langs->transnoentitiesnoconv(\"UserGUISetup\"))).'</td>';\n\t\tprint '<td class=\"maxwidthonsmartphone\">'.\"\\n\";\n\t\tprint img_picto('', 'language', 'class=\"pictofixedwidth\"').$formadmin->select_language(GETPOST('default_lang', 'alpha') ?GETPOST('default_lang', 'alpha') : ($object->lang ? $object->lang : ''), 'default_lang', 0, 0, 1, 0, 0, 'maxwidth200onsmartphone widthcentpercentminusx');\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\t}\n\n\t// Multicompany\n\tif (!empty($conf->multicompany->enabled) && is_object($mc)) {\n\t\t// This is now done with hook formObjectOptions. Keep this code for backward compatibility with old multicompany module\n\t\tif (!method_exists($mc, 'formObjectOptions')) {\n\t\t\tif (empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE) && $conf->entity == 1 && $user->admin && !$user->entity) {\t// condition must be same for create and edit mode\n\t\t\t\tprint \"<tr>\".'<td>'.$langs->trans(\"Entity\").'</td>';\n\t\t\t\t print \"<td>\".$mc->select_entities($conf->entity);\n\t\t\t\t print \"</td></tr>\\n\";\n\t\t\t} else {\n\t\t\t\t print '<input type=\"hidden\" name=\"entity\" value=\"'.$conf->entity.'\" />';\n\t\t\t}\n\t\t}\n\t}\n\n\t// Other attributes\n\t$parameters = array();\n\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_add.tpl.php';\n\n\t// Note\n\tprint '<tr><td class=\"tdtop\">';\n\tprint $langs->trans(\"Note\");\n\tprint '</td><td>';\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\t$doleditor = new DolEditor('note', GETPOSTISSET('note') ? GETPOST('note', 'restricthtml') : '', '', 120, 'dolibarr_notes', '', false, true, getDolGlobalString('FCKEDITOR_ENABLE_SOCIETE'), ROWS_3, '90%');\n\t$doleditor->Create();\n\tprint \"</td></tr>\\n\";\n\n\t// Signature\n\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"Signature\").'</td>';\n\tprint '<td class=\"wordbreak\">';\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\t$doleditor = new DolEditor('signature', GETPOST('signature', 'restricthtml'), '', 138, 'dolibarr_notes', 'In', true, true, empty($conf->global->FCKEDITOR_ENABLE_USERSIGN) ? 0 : 1, ROWS_4, '90%');\n\tprint $doleditor->Create(1);\n\tprint '</td></tr>';\n\n\n\tprint '</table><hr><table class=\"border centpercent\">';\n\n\n\t// TODO Move this into tab RH (HierarchicalResponsible must be on both tab)\n\n\t// Default warehouse\n\tif (!empty($conf->stock->enabled) && !empty($conf->global->MAIN_DEFAULT_WAREHOUSE_USER)) {\n\t\tprint '<tr><td>'.$langs->trans(\"DefaultWarehouse\").'</td><td>';\n\t\tprint $formproduct->selectWarehouses($object->fk_warehouse, 'fk_warehouse', 'warehouseopen', 1);\n\t\tprint '</td></tr>';\n\t}\n\n\t// Position/Job\n\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"PostOrFunction\").'</td>';\n\tprint '<td>';\n\tprint '<input class=\"maxwidth200 maxwidth150onsmartphone\" type=\"text\" name=\"job\" value=\"'.dol_escape_htmltag(GETPOST('job', 'alphanohtml')).'\">';\n\tprint '</td></tr>';\n\n\tif ((!empty($conf->salaries->enabled) && !empty($user->rights->salaries->read) && in_array($id, $childids))\n\t\t|| (!empty($conf->salaries->enabled) && !empty($user->rights->salaries->readall))\n\t\t|| (!empty($conf->hrm->enabled) && !empty($user->rights->hrm->employee->read))) {\n\t\t$langs->load(\"salaries\");\n\n\t\t// THM\n\t\tprint '<tr><td>';\n\t\t$text = $langs->trans(\"THM\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"THMDescription\"), 1, 'help', 'classthm');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tprint '<input size=\"8\" type=\"text\" name=\"thm\" value=\"'.dol_escape_htmltag(GETPOST('thm')).'\"> '.$langs->getCurrencySymbol($conf->currency);\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\n\t\t// TJM\n\t\tprint '<tr><td>';\n\t\t$text = $langs->trans(\"TJM\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"TJMDescription\"), 1, 'help', 'classtjm');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tprint '<input size=\"8\" type=\"text\" name=\"tjm\" value=\"'.dol_escape_htmltag(GETPOST('tjm')).'\"> '.$langs->getCurrencySymbol($conf->currency);\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\n\t\t// Salary\n\t\tprint '<tr><td>'.$langs->trans(\"Salary\").'</td>';\n\t\tprint '<td>';\n\t\tprint img_picto('', 'salary', 'class=\"pictofixedwidth paddingright\"').'<input size=\"8\" type=\"text\" name=\"salary\" value=\"'.dol_escape_htmltag(GETPOST('salary')).'\"> '.$langs->getCurrencySymbol($conf->currency);\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\n\t// Weeklyhours\n\tprint '<tr><td>'.$langs->trans(\"WeeklyHours\").'</td>';\n\tprint '<td>';\n\tprint '<input size=\"8\" type=\"text\" name=\"weeklyhours\" value=\"'.dol_escape_htmltag(GETPOST('weeklyhours')).'\">';\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\t// Date employment\n\tprint '<tr><td>'.$langs->trans(\"DateEmployment\").'</td>';\n\tprint '<td>';\n\tprint $form->selectDate($dateemployment, 'dateemployment', 0, 0, 1, 'formdateemployment', 1, 1);\n\n\tprint ' - ';\n\n\tprint $form->selectDate($dateemploymentend, 'dateemploymentend', 0, 0, 1, 'formdateemploymentend', 1, 0);\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\t// Date birth\n\tprint '<tr><td>'.$langs->trans(\"DateOfBirth\").'</td>';\n\tprint '<td>';\n\tprint $form->selectDate($dateofbirth, 'dateofbirth', 0, 0, 1, 'createuser', 1, 0);\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\tprint \"</table>\\n\";\n\n\tprint dol_get_fiche_end();\n\n\tprint $form->buttonsSaveCancel(\"CreateUser\");\n\n\tprint \"</form>\";\n} else {\n\t// View and edit mode\n\tif ($id > 0) {\n\t\t$res = $object->fetch($id, '', '', 1);\n\t\tif ($res < 0) {\n\t\t\tdol_print_error($db, $object->error);\n\t\t\texit;\n\t\t}\n\t\t$res = $object->fetch_optionals();\n\n\t\t// Check if user has rights\n\t\tif (empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE)) {\n\t\t\t$object->getrights();\n\t\t\tif (empty($object->nb_rights) && $object->statut != 0 && empty($object->admin)) {\n\t\t\t\tsetEventMessages($langs->trans('UserHasNoPermissions'), null, 'warnings');\n\t\t\t}\n\t\t}\n\n\t\t// Connexion ldap\n\t\t// pour recuperer passDoNotExpire et userChangePassNextLogon\n\t\tif (!empty($conf->ldap->enabled) && !empty($object->ldap_sid)) {\n\t\t\t$ldap = new Ldap();\n\t\t\t$result = $ldap->connect_bind();\n\t\t\tif ($result > 0) {\n\t\t\t\t$userSearchFilter = '('.$conf->global->LDAP_FILTER_CONNECTION.'('.$ldap->getUserIdentifier().'='.$object->login.'))';\n\t\t\t\t$entries = $ldap->fetch($object->login, $userSearchFilter);\n\t\t\t\tif (!$entries) {\n\t\t\t\t\tsetEventMessages($ldap->error, $ldap->errors, 'errors');\n\t\t\t\t}\n\n\t\t\t\t$passDoNotExpire = 0;\n\t\t\t\t$userChangePassNextLogon = 0;\n\t\t\t\t$userDisabled = 0;\n\t\t\t\t$statutUACF = '';\n\n\t\t\t\t// Check options of user account\n\t\t\t\tif (count($ldap->uacf) > 0) {\n\t\t\t\t\tforeach ($ldap->uacf as $key => $statut) {\n\t\t\t\t\t\tif ($key == 65536) {\n\t\t\t\t\t\t\t$passDoNotExpire = 1;\n\t\t\t\t\t\t\t$statutUACF = $statut;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$userDisabled = 1;\n\t\t\t\t\t$statutUACF = \"ACCOUNTDISABLE\";\n\t\t\t\t}\n\n\t\t\t\tif ($ldap->pwdlastset == 0) {\n\t\t\t\t\t$userChangePassNextLogon = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Show tabs\n\t\tif ($mode == 'employee') { // For HRM module development\n\t\t\t$title = $langs->trans(\"Employee\");\n\t\t\t$linkback = '<a href=\"'.DOL_URL_ROOT.'/hrm/employee/list.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\t\t} else {\n\t\t\t$title = $langs->trans(\"User\");\n\t\t\t$linkback = '';\n\n\t\t\tif ($user->rights->user->user->lire || $user->admin) {\n\t\t\t\t$linkback = '<a href=\"'.DOL_URL_ROOT.'/user/list.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\t\t\t}\n\t\t}\n\n\t\t$head = user_prepare_head($object);\n\n\t\t/*\n\t\t * Confirmation reinitialisation mot de passe\n\t\t */\n\t\tif ($action == 'password') {\n\t\t\tprint $form->formconfirm($_SERVER['PHP_SELF'].\"?id=$object->id\", $langs->trans(\"ReinitPassword\"), $langs->trans(\"ConfirmReinitPassword\", $object->login), \"confirm_password\", '', 0, 1);\n\t\t}\n\n\t\t/*\n\t\t * Confirmation envoi mot de passe\n\t\t */\n\t\tif ($action == 'passwordsend') {\n\t\t\tprint $form->formconfirm($_SERVER['PHP_SELF'].\"?id=$object->id\", $langs->trans(\"SendNewPassword\"), $langs->trans(\"ConfirmSendNewPassword\", $object->login), \"confirm_passwordsend\", '', 0, 1);\n\t\t}\n\n\t\t/*\n\t\t * Confirm deactivation\n\t\t */\n\t\tif ($action == 'disable') {\n\t\t\tprint $form->formconfirm($_SERVER['PHP_SELF'].\"?id=$object->id\", $langs->trans(\"DisableAUser\"), $langs->trans(\"ConfirmDisableUser\", $object->login), \"confirm_disable\", '', 0, 1);\n\t\t}\n\n\t\t/*\n\t\t * Confirm activation\n\t\t */\n\t\tif ($action == 'enable') {\n\t\t\tprint $form->formconfirm($_SERVER['PHP_SELF'].\"?id=$object->id\", $langs->trans(\"EnableAUser\"), $langs->trans(\"ConfirmEnableUser\", $object->login), \"confirm_enable\", '', 0, 1);\n\t\t}\n\n\t\t/*\n\t\t * Confirmation suppression\n\t\t */\n\t\tif ($action == 'delete') {\n\t\t\tprint $form->formconfirm($_SERVER['PHP_SELF'].\"?id=$object->id\", $langs->trans(\"DeleteAUser\"), $langs->trans(\"ConfirmDeleteUser\", $object->login), \"confirm_delete\", '', 0, 1);\n\t\t}\n\n\t\t/*\n\t\t * Fiche en mode visu\n\t\t */\n\t\tif ($action != 'edit') {\n\t\t\tprint dol_get_fiche_head($head, 'user', $title, -1, 'user');\n\n\t\t\tdol_banner_tab($object, 'id', $linkback, $user->rights->user->user->lire || $user->admin);\n\n\t\t\tprint '<div class=\"fichecenter\">';\n\t\t\tprint '<div class=\"fichehalfleft\">';\n\n\t\t\tprint '<div class=\"underbanner clearboth\"></div>';\n\t\t\tprint '<table class=\"border tableforfield\" width=\"100%\">';\n\n\t\t\t// Login\n\t\t\tprint '<tr><td class=\"titlefieldmiddle\">'.$langs->trans(\"Login\").'</td>';\n\t\t\tif (!empty($object->ldap_sid) && $object->statut == 0) {\n\t\t\t\tprint '<td class=\"error\">';\n\t\t\t\tprint $langs->trans(\"LoginAccountDisableInDolibarr\");\n\t\t\t\tprint '</td>';\n\t\t\t} else {\n\t\t\t\tprint '<td>';\n\t\t\t\t$addadmin = '';\n\t\t\t\tif (property_exists($object, 'admin')) {\n\t\t\t\t\tif (!empty($conf->multicompany->enabled) && !empty($object->admin) && empty($object->entity)) {\n\t\t\t\t\t\t$addadmin .= img_picto($langs->trans(\"SuperAdministratorDesc\"), \"redstar\", 'class=\"paddingleft\"');\n\t\t\t\t\t} elseif (!empty($object->admin)) {\n\t\t\t\t\t\t$addadmin .= img_picto($langs->trans(\"AdministratorDesc\"), \"star\", 'class=\"paddingleft\"');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprint showValueWithClipboardCPButton($object->login).$addadmin;\n\t\t\t\tprint '</td>';\n\t\t\t}\n\t\t\tprint '</tr>'.\"\\n\";\n\n\t\t\t// Type\n\t\t\tprint '<tr><td>';\n\t\t\t$text = $langs->trans(\"Type\");\n\t\t\tprint $form->textwithpicto($text, $langs->trans(\"InternalExternalDesc\"));\n\t\t\tprint '</td><td>';\n\t\t\t$type = $langs->trans(\"Internal\");\n\t\t\tif ($object->socid > 0) {\n\t\t\t\t$type = $langs->trans(\"External\");\n\t\t\t}\n\t\t\tprint '<span class=\"badgeneutral\">';\n\t\t\tprint $type;\n\t\t\tif ($object->ldap_sid) {\n\t\t\t\tprint ' ('.$langs->trans(\"DomainUser\").')';\n\t\t\t}\n\t\t\tprint '</span>';\n\t\t\tprint '</td></tr>'.\"\\n\";\n\n\t\t\t// Ldap sid\n\t\t\tif ($object->ldap_sid) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"Type\").'</td><td>';\n\t\t\t\tprint $langs->trans(\"DomainUser\", $ldap->domainFQDN);\n\t\t\t\tprint '</td></tr>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Employee\n\t\t\tprint '<tr><td>'.$langs->trans(\"Employee\").'</td><td>';\n\t\t\tprint '<input type=\"checkbox\" disabled name=\"employee\" value=\"1\"'.($object->employee ? ' checked=\"checked\"' : '').'>';\n\t\t\t//print yn($object->employee);\n\t\t\tprint '</td></tr>'.\"\\n\";\n\n\t\t\t// TODO This is also available into the tab RH\n\n\t\t\t// Hierarchy\n\t\t\tprint '<tr><td>'.$langs->trans(\"HierarchicalResponsible\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif (empty($object->fk_user)) {\n\t\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span>';\n\t\t\t} else {\n\t\t\t\t$huser = new User($db);\n\t\t\t\tif ($object->fk_user > 0) {\n\t\t\t\t\t$huser->fetch($object->fk_user);\n\t\t\t\t\tprint $huser->getNomUrl(1);\n\t\t\t\t} else {\n\t\t\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span>';\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Expense report validator\n\t\t\tif (!empty($conf->expensereport->enabled)) {\n\t\t\t\tprint '<tr><td>';\n\t\t\t\t$text = $langs->trans(\"ForceUserExpenseValidator\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif (!empty($object->fk_user_expense_validator)) {\n\t\t\t\t\t$evuser = new User($db);\n\t\t\t\t\t$evuser->fetch($object->fk_user_expense_validator);\n\t\t\t\t\tprint $evuser->getNomUrl(1);\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Holiday request validator\n\t\t\tif (!empty($conf->holiday->enabled)) {\n\t\t\t\tprint '<tr><td>';\n\t\t\t\t$text = $langs->trans(\"ForceUserHolidayValidator\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif (!empty($object->fk_user_holiday_validator)) {\n\t\t\t\t\t$hvuser = new User($db);\n\t\t\t\t\t$hvuser->fetch($object->fk_user_holiday_validator);\n\t\t\t\t\tprint $hvuser->getNomUrl(1);\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Position/Job\n\t\t\tprint '<tr><td>'.$langs->trans(\"PostOrFunction\").'</td>';\n\t\t\tprint '<td>'.dol_escape_htmltag($object->job).'</td>';\n\t\t\tprint '</tr>'.\"\\n\";\n\n\t\t\t// Weeklyhours\n\t\t\tprint '<tr><td>'.$langs->trans(\"WeeklyHours\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint price2num($object->weeklyhours);\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Sensitive salary/value information\n\t\t\tif ((empty($user->socid) && in_array($id, $childids))\t// A user can always see salary/value information for its subordinates\n\t\t\t\t|| (!empty($conf->salaries->enabled) && !empty($user->rights->salaries->readall))\n\t\t\t\t|| (!empty($conf->hrm->enabled) && !empty($user->rights->hrm->employee->read))) {\n\t\t\t\t$langs->load(\"salaries\");\n\n\t\t\t\t// Salary\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"Salary\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint ($object->salary != '' ? img_picto('', 'salary', 'class=\"pictofixedwidth paddingright\"').'<span class=\"amount\">'.price($object->salary, '', $langs, 1, -1, -1, $conf->currency) : '').'</span>';\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\n\t\t\t\t// THM\n\t\t\t\tprint '<tr><td>';\n\t\t\t\t$text = $langs->trans(\"THM\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"THMDescription\"), 1, 'help', 'classthm');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint ($object->thm != '' ?price($object->thm, '', $langs, 1, -1, -1, $conf->currency) : '');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\n\t\t\t\t// TJM\n\t\t\t\tprint '<tr><td>';\n\t\t\t\t$text = $langs->trans(\"TJM\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"TJMDescription\"), 1, 'help', 'classtjm');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint ($object->tjm != '' ?price($object->tjm, '', $langs, 1, -1, -1, $conf->currency) : '');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Date employment\n\t\t\tprint '<tr><td>'.$langs->trans(\"DateOfEmployment\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($object->dateemployment) {\n\t\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"FromDate\").'</span> ';\n\t\t\t\tprint dol_print_date($object->dateemployment, 'day');\n\t\t\t}\n\t\t\tif ($object->dateemploymentend) {\n\t\t\t\tprint '<span class=\"opacitymedium\"> - '.$langs->trans(\"To\").'</span> ';\n\t\t\t\tprint dol_print_date($object->dateemploymentend, 'day');\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Default warehouse\n\t\t\tif (!empty($conf->stock->enabled) && !empty($conf->global->MAIN_DEFAULT_WAREHOUSE_USER)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/stock/class/entrepot.class.php';\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"DefaultWarehouse\").'</td><td>';\n\t\t\t\tif ($object->fk_warehouse > 0) {\n\t\t\t\t\t$warehousestatic = new Entrepot($db);\n\t\t\t\t\t$warehousestatic->fetch($object->fk_warehouse);\n\t\t\t\t\tprint $warehousestatic->getNomUrl(1);\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Accountancy code\n\t\t\tif (!empty($conf->accounting->enabled)) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"AccountancyCode\").'</td>';\n\t\t\t\tprint '<td>'.$object->accountancy_code.'</td></tr>';\n\t\t\t}\n\n\t\t\tprint '</table>';\n\n\t\t\tprint '</div>';\n\t\t\tprint '<div class=\"fichehalfright\">';\n\n\t\t\tprint '<div class=\"underbanner clearboth\"></div>';\n\n\t\t\tprint '<table class=\"border tableforfield centpercent\">';\n\n\t\t\t// Color user\n\t\t\tif (!empty($conf->agenda->enabled)) {\n\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ColorUser\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint $formother->showColor($object->color, '');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Categories\n\t\t\tif (!empty($conf->categorie->enabled) && !empty($user->rights->categorie->lire)) {\n\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"Categories\").'</td>';\n\t\t\t\tprint '<td colspan=\"3\">';\n\t\t\t\tprint $form->showCategories($object->id, Categorie::TYPE_USER, 1);\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Default language\n\t\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t\t$langs->load(\"languages\");\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\t\t\t\tprint '<tr><td class=\"titlefield\">';\n\t\t\t\tprint $form->textwithpicto($langs->trans(\"DefaultLang\"), $langs->trans(\"WarningNotLangOfInterface\", $langs->transnoentitiesnoconv(\"UserGUISetup\")));\n\t\t\t\tprint '</td><td>';\n\t\t\t\t//$s=picto_from_langcode($object->default_lang);\n\t\t\t\t//print ($s?$s.' ':'');\n\t\t\t\t$labellang = ($object->lang ? $langs->trans('Language_'.$object->lang) : '');\n\t\t\t\tprint $labellang;\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\tif (isset($conf->file->main_authentication) && preg_match('/openid/', $conf->file->main_authentication) && !empty($conf->global->MAIN_OPENIDURL_PERUSER)) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"OpenIDURL\").'</td>';\n\t\t\t\tprint '<td>'.$object->openid.'</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Multicompany\n\t\t\tif (!empty($conf->multicompany->enabled) && is_object($mc)) {\n\t\t\t\t// This is now done with hook formObjectOptions. Keep this code for backward compatibility with old multicompany module\n\t\t\t\tif (!method_exists($mc, 'formObjectOptions')) {\n\t\t\t\t\tif (!empty($conf->multicompany->enabled) && empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE) && $conf->entity == 1 && $user->admin && !$user->entity) {\n\t\t\t\t\t\tprint '<tr><td>'.$langs->trans(\"Entity\").'</td><td>';\n\t\t\t\t\t\tif (empty($object->entity)) {\n\t\t\t\t\t\t\tprint $langs->trans(\"AllEntities\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$mc->getInfo($object->entity);\n\t\t\t\t\t\t\tprint $mc->label;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint \"</td></tr>\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Other attributes\n\t\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_view.tpl.php';\n\n\t\t\t// Company / Contact\n\t\t\tif (!empty($conf->societe->enabled)) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"LinkToCompanyContact\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\t$s = '';\n\t\t\t\tif (isset($object->socid) && $object->socid > 0) {\n\t\t\t\t\t$societe = new Societe($db);\n\t\t\t\t\t$societe->fetch($object->socid);\n\t\t\t\t\tif ($societe->id > 0) {\n\t\t\t\t\t\t$s .= $societe->getNomUrl(1, '');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$s .= '<span class=\"opacitymedium hideonsmartphone\">'.$langs->trans(\"ThisUserIsNot\").'</span>';\n\t\t\t\t}\n\t\t\t\tif (!empty($object->contact_id)) {\n\t\t\t\t\t$contact = new Contact($db);\n\t\t\t\t\t$contact->fetch($object->contact_id);\n\t\t\t\t\tif ($contact->id > 0) {\n\t\t\t\t\t\tif ($object->socid > 0 && $s) {\n\t\t\t\t\t\t\t$s .= ' / ';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$s .= '<br>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$s .= $contact->getNomUrl(1, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprint $s;\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '</tr>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Module Adherent\n\t\t\tif (!empty($conf->adherent->enabled)) {\n\t\t\t\t$langs->load(\"members\");\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"LinkedToDolibarrMember\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($object->fk_member) {\n\t\t\t\t\t$adh = new Adherent($db);\n\t\t\t\t\t$adh->fetch($object->fk_member);\n\t\t\t\t\t$adh->ref = $adh->getFullname($langs); // Force to show login instead of id\n\t\t\t\t\tprint $adh->getNomUrl(-1);\n\t\t\t\t} else {\n\t\t\t\t\tprint '<span class=\"opacitymedium hideonsmartphone\">'.$langs->trans(\"UserNotLinkedToMember\").'</span>';\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '</tr>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Signature\n\t\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans('Signature').'</td><td class=\"wordbreak\">';\n\t\t\tprint dol_htmlentitiesbr($object->signature);\n\t\t\tprint \"</td></tr>\\n\";\n\n\t\t\t// VCard\n\t\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"VCard\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint '<a href=\"'.DOL_URL_ROOT.'/user/vcard.php?id='.$object->id.'\">';\n\t\t\tprint img_picto($langs->trans(\"Download\"), 'vcard.png', 'class=\"paddingrightonly\"');\n\t\t\tprint $langs->trans(\"Download\");\n\t\t\tprint '</a>';\n\t\t\tprint \"</td></tr>\\n\";\n\n\t\t\tprint \"</table>\\n\";\n\n\t\t\t// Credentials\n\t\t\tprint '<div class=\"div-table-responsive-no-min\">';\n\t\t\tprint '<table class=\"border tableforfield margintable centpercent\">';\n\t\t\tprint '<tr class=\"liste_titre\"><td class=\"liste_titre\">';\n\t\t\tprint img_picto('', 'security', 'class=\"paddingleft pictofixedwidth\"').$langs->trans(\"Credentials\");\n\t\t\tprint '</td>';\n\t\t\tprint '<td class=\"liste_titre\"></td>';\n\t\t\tprint '</tr>';\n\n\t\t\t// Date login validity\n\t\t\tprint '<tr><td>'.$langs->trans(\"RangeOfLoginValidity\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($object->datestartvalidity) {\n\t\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"FromDate\").'</span> ';\n\t\t\t\tprint dol_print_date($object->datestartvalidity, 'day');\n\t\t\t}\n\t\t\tif ($object->dateendvalidity) {\n\t\t\t\tprint '<span class=\"opacitymedium\"> - '.$langs->trans(\"To\").'</span> ';\n\t\t\t\tprint dol_print_date($object->dateendvalidity, 'day');\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Password\n\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"Password\").'</td>';\n\n\t\t\tprint '<td class=\"wordbreak\">';\n\t\t\t$valuetoshow = '';\n\t\t\tif (preg_match('/ldap/', $dolibarr_main_authentication)) {\n\t\t\t\tif (!empty($object->ldap_sid)) {\n\t\t\t\t\tif ($passDoNotExpire) {\n\t\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').$langs->trans(\"LdapUacf_\".$statutUACF);\n\t\t\t\t\t} elseif ($userChangePassNextLogon) {\n\t\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').'<span class=\"warning\">'.$langs->trans(\"UserMustChangePassNextLogon\", $ldap->domainFQDN).'</span>';\n\t\t\t\t\t} elseif ($userDisabled) {\n\t\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').'<span class=\"warning\">'.$langs->trans(\"LdapUacf_\".$statutUACF, $ldap->domainFQDN).'</span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').$langs->trans(\"PasswordOfUserInLDAP\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').$langs->trans(\"PasswordOfUserInLDAP\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (preg_match('/http/', $dolibarr_main_authentication)) {\n\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').$langs->trans(\"HTTPBasicPassword\");\n\t\t\t}\n\t\t\tif (preg_match('/dolibarr/', $dolibarr_main_authentication)) {\n\t\t\t\tif ($object->pass) {\n\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '');\n\t\t\t\t\t$valuetoshow .= '<span class=\"opacitymedium\">'.$langs->trans(\"Hidden\").'</span>';\n\t\t\t\t} else {\n\t\t\t\t\tif ($user->admin && $user->id == $object->id) {\n\t\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '');\n\t\t\t\t\t\t//$valuetoshow .= '<span class=\"opacitymedium\">'.$langs->trans(\"Crypted\").' - </span>';\n\t\t\t\t\t\t$valuetoshow .= '<span class=\"opacitymedium\">'.$langs->trans(\"Hidden\").'</span>';\n\t\t\t\t\t\t// TODO Add a feature to reveal the hash\n\t\t\t\t\t\t$valuetoshow .= '<!-- Crypted into '.$object->pass_indatabase_crypted.' -->';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').'<span class=\"opacitymedium\">'.$langs->trans(\"Hidden\").'</span>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Other form for user password\n\t\t\t$parameters = array('valuetoshow' => $valuetoshow);\n\t\t\t$reshook = $hookmanager->executeHooks('printUserPasswordField', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\t\tif ($reshook > 0) {\n\t\t\t\t$valuetoshow = $hookmanager->resPrint; // to replace\n\t\t\t} else {\n\t\t\t\t$valuetoshow .= $hookmanager->resPrint; // to add\n\t\t\t}\n\n\t\t\tprint $valuetoshow;\n\t\t\tprint \"</td>\";\n\t\t\tprint '</tr>'.\"\\n\";\n\n\t\t\t// API key\n\t\t\tif (!empty($conf->api->enabled) && ($user->id == $id || $user->admin || $user->rights->api->apikey->generate)) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"ApiKey\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif (!empty($object->api_key)) {\n\t\t\t\t\tprint '<span class=\"opacitymedium\">';\n\t\t\t\t\tprint showValueWithClipboardCPButton($object->api_key, 1, $langs->trans(\"Hidden\"));\t\t// TODO Add an option to also reveal the hash, not only copy paste\n\t\t\t\t\tprint '</span>';\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"LastConnexion\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($object->datepreviouslogin) {\n\t\t\t\tprint dol_print_date($object->datepreviouslogin, \"dayhour\").' <span class=\"opacitymedium\">('.$langs->trans(\"Previous\").')</span>, ';\n\t\t\t}\n\t\t\tif ($object->datelastlogin) {\n\t\t\t\tprint dol_print_date($object->datelastlogin, \"dayhour\").' <span class=\"opacitymedium\">('.$langs->trans(\"Currently\").')</span>';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\tprint '</table></div>';\n\n\t\t\tprint '</div>';\n\n\t\t\tprint '</div>';\n\t\t\tprint '<div style=\"clear:both\"></div>';\n\n\n\t\t\tprint dol_get_fiche_end();\n\n\n\t\t\t/*\n\t\t\t * Buttons actions\n\t\t\t */\n\n\t\t\tprint '<div class=\"tabsAction\">';\n\n\t\t\t$parameters = array();\n\t\t\t$reshook = $hookmanager->executeHooks('addMoreActionsButtons', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\t\tif (empty($reshook)) {\n\t\t\t\tif (empty($user->socid)) {\n\t\t\t\t\tif (!empty($object->email)) {\n\t\t\t\t\t\t$langs->load(\"mails\");\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'&action=presend&mode=init#formmailbeforetitle\">'.$langs->trans('SendMail').'</a></div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$langs->load(\"mails\");\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NoEMail\")).'\">'.$langs->trans('SendMail').'</a></div>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($caneditfield && (empty($conf->multicompany->enabled) || !$user->entity || ($object->entity == $conf->entity) || ($conf->global->MULTICOMPANY_TRANSVERSE_MODE && $conf->entity == 1))) {\n\t\t\t\t\tif (!empty($conf->global->MAIN_ONLY_LOGIN_ALLOWED)) {\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"DisabledInMonoUserMode\")).'\">'.$langs->trans(\"Modify\").'</a></div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'&action=edit&token='.newToken().'\">'.$langs->trans(\"Modify\").'</a></div>';\n\t\t\t\t\t}\n\t\t\t\t} elseif ($caneditpassword && !$object->ldap_sid &&\n\t\t\t\t(empty($conf->multicompany->enabled) || !$user->entity || ($object->entity == $conf->entity) || ($conf->global->MULTICOMPANY_TRANSVERSE_MODE && $conf->entity == 1))) {\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'&action=edit&token='.newToken().'\">'.$langs->trans(\"EditPassword\").'</a></div>';\n\t\t\t\t}\n\n\t\t\t\t// Si on a un gestionnaire de generation de mot de passe actif\n\t\t\t\tif ($conf->global->USER_PASSWORD_GENERATED != 'none') {\n\t\t\t\t\tif ($object->statut == 0) {\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"UserDisabled\")).'\">'.$langs->trans(\"ReinitPassword\").'</a></div>';\n\t\t\t\t\t} elseif ($caneditpassword && $object->login && !$object->ldap_sid &&\n\t\t\t\t\t((empty($conf->multicompany->enabled) && $object->entity == $user->entity) || !$user->entity || ($object->entity == $conf->entity) || ($conf->global->MULTICOMPANY_TRANSVERSE_MODE && $conf->entity == 1))) {\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'&amp;action=password\">'.$langs->trans(\"ReinitPassword\").'</a></div>';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($object->statut == 0) {\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"UserDisabled\")).'\">'.$langs->trans(\"SendNewPassword\").'</a></div>';\n\t\t\t\t\t} elseif ($caneditpassword && $object->login && !$object->ldap_sid &&\n\t\t\t\t\t((empty($conf->multicompany->enabled) && $object->entity == $user->entity) || !$user->entity || ($object->entity == $conf->entity) || ($conf->global->MULTICOMPANY_TRANSVERSE_MODE && $conf->entity == 1))) {\n\t\t\t\t\t\tif ($object->email) {\n\t\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'&amp;action=passwordsend\">'.$langs->trans(\"SendNewPassword\").'</a></div>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NoEMail\")).'\">'.$langs->trans(\"SendNewPassword\").'</a></div>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Enable user\n\t\t\t\tif ($user->id <> $id && $candisableuser && $object->statut == 0 &&\n\t\t\t\t((empty($conf->multicompany->enabled) && $object->entity == $user->entity) || !$user->entity || ($object->entity == $conf->entity) || ($conf->global->MULTICOMPANY_TRANSVERSE_MODE && $conf->entity == 1))) {\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'&action=enable&token='.newToken().'\">'.$langs->trans(\"Reactivate\").'</a></div>';\n\t\t\t\t}\n\t\t\t\t// Disable user\n\t\t\t\tif ($user->id <> $id && $candisableuser && $object->statut == 1 &&\n\t\t\t\t((empty($conf->multicompany->enabled) && $object->entity == $user->entity) || !$user->entity || ($object->entity == $conf->entity) || ($conf->global->MULTICOMPANY_TRANSVERSE_MODE && $conf->entity == 1))) {\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionDelete\" href=\"'.$_SERVER['PHP_SELF'].'?action=disable&id='.$object->id.'&token='.newToken().'\">'.$langs->trans(\"DisableUser\").'</a></div>';\n\t\t\t\t} else {\n\t\t\t\t\tif ($user->id == $id) {\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.$langs->trans(\"CantDisableYourself\").'\">'.$langs->trans(\"DisableUser\").'</a></div>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Delete\n\t\t\t\tif ($user->id <> $id && $candisableuser &&\n\t\t\t\t((empty($conf->multicompany->enabled) && $object->entity == $user->entity) || !$user->entity || ($object->entity == $conf->entity) || ($conf->global->MULTICOMPANY_TRANSVERSE_MODE && $conf->entity == 1))) {\n\t\t\t\t\tif ($user->admin || !$object->admin) { // If user edited is admin, delete is possible on for an admin\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionDelete\" href=\"'.$_SERVER['PHP_SELF'].'?action=delete&token='.newToken().'&id='.$object->id.'\">'.$langs->trans(\"DeleteUser\").'</a></div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"MustBeAdminToDeleteOtherAdmin\")).'\">'.$langs->trans(\"DeleteUser\").'</a></div>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprint \"</div>\\n\";\n\n\n\n\t\t\t//Select mail models is same action as presend\n\t\t\tif (GETPOST('modelselected')) {\n\t\t\t\t$action = 'presend';\n\t\t\t}\n\n\t\t\t// Presend form\n\t\t\t$modelmail = 'user';\n\t\t\t$defaulttopic = 'Information';\n\t\t\t$diroutput = $conf->user->dir_output;\n\t\t\t$trackid = 'use'.$object->id;\n\n\t\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/card_presend.tpl.php';\n\n\t\t\tif ($action != 'presend' && $action != 'send') {\n\t\t\t\t/*\n\t\t\t\t * List of groups of user\n\t\t\t\t */\n\n\t\t\t\tif ($canreadgroup) {\n\t\t\t\t\tprint '<!-- Group section -->'.\"\\n\";\n\n\t\t\t\t\tprint load_fiche_titre($langs->trans(\"ListOfGroupsForUser\"), '', '');\n\n\t\t\t\t\t// On selectionne les groupes auquel fait parti le user\n\t\t\t\t\t$exclude = array();\n\n\t\t\t\t\t$usergroup = new UserGroup($db);\n\t\t\t\t\t$groupslist = $usergroup->listGroupsForUser($object->id, false);\n\n\t\t\t\t\tif (!empty($groupslist)) {\n\t\t\t\t\t\tforeach ($groupslist as $groupforuser) {\n\t\t\t\t\t\t\t$exclude[] = $groupforuser->id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Other form for add user to group\n\t\t\t\t\t$parameters = array('caneditgroup' => $caneditgroup, 'groupslist' => $groupslist, 'exclude' => $exclude);\n\t\t\t\t\t$reshook = $hookmanager->executeHooks('formAddUserToGroup', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\t\t\t\tprint $hookmanager->resPrint;\n\n\t\t\t\t\tif (empty($reshook)) {\n\t\t\t\t\t\tif ($caneditgroup) {\n\t\t\t\t\t\t\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">'.\"\\n\";\n\t\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\" />';\n\t\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"addgroup\" />';\n\t\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"page_y\" value=\"\" />';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprint '<table class=\"noborder centpercent\">'.\"\\n\";\n\t\t\t\t\t\tprint '<tr class=\"liste_titre\"><th class=\"liste_titre\">'.$langs->trans(\"Groups\").'</th>'.\"\\n\";\n\t\t\t\t\t\tprint '<th class=\"liste_titre right\">';\n\t\t\t\t\t\tif ($caneditgroup) {\n\t\t\t\t\t\t\tprint $form->select_dolgroups('', 'group', 1, $exclude, 0, '', '', $object->entity);\n\t\t\t\t\t\t\tprint ' &nbsp; ';\n\t\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"entity\" value=\"'.$conf->entity.'\" />';\n\t\t\t\t\t\t\tprint '<input type=\"submit\" class=\"button buttongen button-add reposition\" value=\"'.$langs->trans(\"Add\").'\" />';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint '</th></tr>'.\"\\n\";\n\n\t\t\t\t\t\t// List of groups of user\n\t\t\t\t\t\tif (!empty($groupslist)) {\n\t\t\t\t\t\t\tforeach ($groupslist as $group) {\n\t\t\t\t\t\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\t\t\t\t\t\tprint '<td>';\n\t\t\t\t\t\t\t\tif ($caneditgroup) {\n\t\t\t\t\t\t\t\t\tprint $group->getNomUrl(1);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tprint img_object($langs->trans(\"ShowGroup\"), \"group\").' '.$group->name;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t\t\t\tprint '<td class=\"right\">';\n\t\t\t\t\t\t\t\tif ($caneditgroup) {\n\t\t\t\t\t\t\t\t\tprint '<a class=\"reposition\" href=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'&action=removegroup&token='.newToken().'&group='.((int) $group->id).'\">';\n\t\t\t\t\t\t\t\t\tprint img_picto($langs->trans(\"RemoveFromGroup\"), 'unlink');\n\t\t\t\t\t\t\t\t\tprint '</a>';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tprint \"&nbsp;\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tprint \"</td></tr>\\n\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprint '<tr class=\"oddeven\"><td colspan=\"3\" class=\"opacitymedium\">'.$langs->trans(\"None\").'</td></tr>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprint \"</table>\";\n\n\t\t\t\t\t\tif ($caneditgroup) {\n\t\t\t\t\t\t\tprint '</form>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint \"<br>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t * Card in edit mode\n\t\t */\n\t\tif ($action == 'edit' && ($canedituser || $caneditfield || $caneditpassword || ($user->id == $object->id))) {\n\t\t\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'\" method=\"POST\" name=\"updateuser\" enctype=\"multipart/form-data\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"update\">';\n\t\t\tprint '<input type=\"hidden\" name=\"entity\" value=\"'.$object->entity.'\">';\n\n\t\t\tprint dol_get_fiche_head($head, 'user', $title, 0, 'user');\n\n\t\t\tprint '<table class=\"border centpercent\">';\n\n\t\t\t// Ref/ID\n\t\t\tif (!empty($conf->global->MAIN_SHOW_TECHNICAL_ID)) {\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"Ref\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint $object->id;\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '</tr>';\n\t\t\t}\n\n\t\t\t// Civility\n\t\t\tprint '<tr><td class=\"titlefieldcreate\"><label for=\"civility_code\">'.$langs->trans(\"UserTitle\").'</label></td><td colspan=\"3\">';\n\t\t\tif ($caneditfield && !$object->ldap_sid) {\n\t\t\t\tprint $formcompany->select_civility(GETPOSTISSET(\"civility_code\") ? GETPOST(\"civility_code\", 'aZ09') : $object->civility_code, 'civility_code');\n\t\t\t} elseif ($object->civility_code) {\n\t\t\t\tprint $langs->trans(\"Civility\".$object->civility_code);\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Lastname\n\t\t\tprint \"<tr>\";\n\t\t\tprint '<td class=\"titlefieldcreate fieldrequired\">'.$langs->trans(\"Lastname\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield && !$object->ldap_sid) {\n\t\t\t\tprint '<input class=\"minwidth100\" type=\"text\" class=\"flat\" name=\"lastname\" value=\"'.$object->lastname.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"lastname\" value=\"'.$object->lastname.'\">';\n\t\t\t\tprint $object->lastname;\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\n\t\t\t// Firstname\n\t\t\tprint \"<tr>\".'<td>'.$langs->trans(\"Firstname\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield && !$object->ldap_sid) {\n\t\t\t\tprint '<input class=\"minwidth100\" type=\"text\" class=\"flat\" name=\"firstname\" value=\"'.$object->firstname.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"firstname\" value=\"'.$object->firstname.'\">';\n\t\t\t\tprint $object->firstname;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Login\n\t\t\tprint \"<tr>\".'<td><span class=\"fieldrequired\">'.$langs->trans(\"Login\").'</span></td>';\n\t\t\tprint '<td>';\n\t\t\tif ($user->admin && !$object->ldap_sid) {\n\t\t\t\tprint '<input maxlength=\"50\" type=\"text\" class=\"flat\" name=\"login\" value=\"'.$object->login.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"login\" value=\"'.$object->login.'\">';\n\t\t\t\tprint $object->login;\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\n\t\t\t// Administrator\n\t\t\tprint '<tr><td>'.$langs->trans(\"Administrator\").'</td>';\n\t\t\tif ($object->socid > 0) {\n\t\t\t\t$langs->load(\"admin\");\n\t\t\t\tprint '<td>';\n\t\t\t\tprint '<input type=\"hidden\" name=\"admin\" value=\"'.$object->admin.'\">'.yn($object->admin);\n\t\t\t\tprint ' ('.$langs->trans(\"ExternalUser\").')';\n\t\t\t\tprint '</td></tr>';\n\t\t\t} else {\n\t\t\t\tprint '<td>';\n\t\t\t\t$nbAdmin = $user->getNbOfUsers('active', '', 1);\n\t\t\t\t$nbSuperAdmin = $user->getNbOfUsers('active', 'superadmin', 1);\n\t\t\t\t//var_dump($nbAdmin);\n\t\t\t\t//var_dump($nbSuperAdmin);\n\t\t\t\tif ($user->admin\t\t\t\t\t\t\t\t// Need to be admin to allow downgrade of an admin\n\t\t\t\t&& ($user->id != $object->id)                   // Don't downgrade ourself\n\t\t\t\t&& (\n\t\t\t\t\t(empty($conf->multicompany->enabled) && $nbAdmin >= 1)\n\t\t\t\t\t|| (!empty($conf->multicompany->enabled) && (($object->entity > 0 || ($user->entity == 0 && $object->entity == 0)) || $nbSuperAdmin > 1))    // Don't downgrade a superadmin if alone\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tprint $form->selectyesno('admin', $object->admin, 1);\n\n\t\t\t\t\tif (!empty($conf->multicompany->enabled) && !$user->entity) {\n\t\t\t\t\t\tif ($conf->use_javascript_ajax) {\n\t\t\t\t\t\t\tprint '<script type=\"text/javascript\">\n\t\t\t\t\t\t\t\t\t$(function() {\n\t\t\t\t\t\t\t\t\t\tvar admin = $(\"select[name=admin]\").val();\n\t\t\t\t\t\t\t\t\t\tif (admin == 0) {\n\t\t\t\t\t\t\t\t\t\t\t$(\"input[name=superadmin]\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"disabled\", true)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"checked\", false);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif ($(\"input[name=superadmin]\").is(\":checked\")) {\n\t\t\t\t\t\t\t\t\t\t\t$(\"select[name=entity]\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"disabled\", true);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t$(\"select[name=admin]\").change(function() {\n\t\t\t\t\t\t\t\t\t\t\t if ( $(this).val() == 0 ) {\n\t\t\t\t\t\t\t\t\t\t\t \t$(\"input[name=superadmin]\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"disabled\", true)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"checked\", false);\n\t\t\t\t\t\t\t\t\t\t\t \t$(\"select[name=entity]\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"disabled\", false);\n\t\t\t\t\t\t\t\t\t\t\t } else {\n\t\t\t\t\t\t\t\t\t\t\t \t$(\"input[name=superadmin]\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"disabled\", false);\n\t\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t$(\"input[name=superadmin]\").change(function() {\n\t\t\t\t\t\t\t\t\t\t\tif ( $(this).is(\":checked\")) {\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"select[name=entity]\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"disabled\", true);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"select[name=entity]\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"disabled\", false);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t</script>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$checked = (($object->admin && !$object->entity) ? ' checked' : '');\n\t\t\t\t\t\tprint '<input type=\"checkbox\" name=\"superadmin\" id=\"superadmin\" value=\"1\"'.$checked.' /> <label for=\"superadmin\">'.$langs->trans(\"SuperAdministrator\").'</span>';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$yn = yn($object->admin);\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"admin\" value=\"'.$object->admin.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"superadmin\" value=\"'.(empty($object->entity) ? 1 : 0).'\">';\n\t\t\t\t\tif (!empty($conf->multicompany->enabled) && empty($object->entity)) {\n\t\t\t\t\t\tprint $form->textwithpicto($yn, $langs->trans(\"DontDowngradeSuperAdmin\"), 1, 'warning');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint $yn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Gender\n\t\t\tprint '<tr><td>'.$langs->trans(\"Gender\").'</td>';\n\t\t\tprint '<td>';\n\t\t\t$arraygender = array('man'=>$langs->trans(\"Genderman\"), 'woman'=>$langs->trans(\"Genderwoman\"), 'other'=>$langs->trans(\"Genderother\"));\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $form->selectarray('gender', $arraygender, GETPOSTISSET('gender') ?GETPOST('gender') : $object->gender, 1);\n\t\t\t} else {\n\t\t\t\tprint $arraygender[$object->gender];\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Employee\n\t\t\tprint '<tr>';\n\t\t\tprint '<td>'.$form->editfieldkey('Employee', 'employee', '', $object, 0).'</td><td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint '<input type=\"checkbox\" name=\"employee\" value=\"1\"'.($object->employee ? ' checked=\"checked\"' : '').'>';\n\t\t\t\t//print $form->selectyesno(\"employee\", $object->employee, 1);\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"checkbox\" name=\"employee\" disabled value=\"1\"'.($object->employee ? ' checked=\"checked\"' : '').'>';\n\t\t\t\t/*if ($object->employee) {\n\t\t\t\t\tprint $langs->trans(\"Yes\");\n\t\t\t\t} else {\n\t\t\t\t\tprint $langs->trans(\"No\");\n\t\t\t\t}*/\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Hierarchy\n\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"HierarchicalResponsible\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint img_picto('', 'user').$form->select_dolusers($object->fk_user, 'fk_user', 1, array($object->id), 0, '', 0, $object->entity, 0, 0, '', 0, '', 'widthcentpercentminusx maxwidth300');\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"fk_user\" value=\"'.$object->fk_user.'\">';\n\t\t\t\t$huser = new User($db);\n\t\t\t\t$huser->fetch($object->fk_user);\n\t\t\t\tprint $huser->getNomUrl(1);\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Expense report validator\n\t\t\tif (!empty($conf->expensereport->enabled)) {\n\t\t\t\tprint '<tr><td class=\"titlefield\">';\n\t\t\t\t$text = $langs->trans(\"ForceUserExpenseValidator\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint img_picto('', 'user').$form->select_dolusers($object->fk_user_expense_validator, 'fk_user_expense_validator', 1, array($object->id), 0, '', 0, $object->entity, 0, 0, '', 0, '', 'widthcentpercentminusx maxwidth300');\n\t\t\t\t} else {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"fk_user_expense_validator\" value=\"'.$object->fk_user_expense_validator.'\">';\n\t\t\t\t\t$evuser = new User($db);\n\t\t\t\t\t$evuser->fetch($object->fk_user_expense_validator);\n\t\t\t\t\tprint $evuser->getNomUrl(1);\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Holiday request validator\n\t\t\tif (!empty($conf->holiday->enabled)) {\n\t\t\t\tprint '<tr><td class=\"titlefield\">';\n\t\t\t\t$text = $langs->trans(\"ForceUserHolidayValidator\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint img_picto('', 'user').$form->select_dolusers($object->fk_user_holiday_validator, 'fk_user_holiday_validator', 1, array($object->id), 0, '', 0, $object->entity, 0, 0, '', 0, '', 'widthcentpercentminusx maxwidth300');\n\t\t\t\t} else {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"fk_user_holiday_validator\" value=\"'.$object->fk_user_holiday_validator.'\">';\n\t\t\t\t\t$hvuser = new User($db);\n\t\t\t\t\t$hvuser->fetch($object->fk_user_holiday_validator);\n\t\t\t\t\tprint $hvuser->getNomUrl(1);\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// External user ?\n\t\t\tprint '<tr><td>'.$langs->trans(\"ExternalUser\").' ?</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($user->id == $object->id || !$user->admin) {\n\t\t\t\t// Read mode\n\t\t\t\t$type = $langs->trans(\"Internal\");\n\t\t\t\tif ($object->socid) {\n\t\t\t\t\t$type = $langs->trans(\"External\");\n\t\t\t\t}\n\t\t\t\tprint $form->textwithpicto($type, $langs->trans(\"InternalExternalDesc\"));\n\t\t\t\tif ($object->ldap_sid) {\n\t\t\t\t\tprint ' ('.$langs->trans(\"DomainUser\").')';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Select mode\n\t\t\t\t$type = 0;\n\t\t\t\tif ($object->contact_id) {\n\t\t\t\t\t$type = $object->contact_id;\n\t\t\t\t}\n\n\t\t\t\tif ($object->socid > 0 && !($object->contact_id > 0)) {\t// external user but no link to a contact\n\t\t\t\t\tprint img_picto('', 'company').$form->select_company($object->socid, 'socid', '', '&nbsp;');\n\t\t\t\t\tprint img_picto('', 'contact').$form->selectcontacts(0, 0, 'contactid', 1, '', '', 1, '', false, 1);\n\t\t\t\t\tif ($object->ldap_sid) {\n\t\t\t\t\t\tprint ' ('.$langs->trans(\"DomainUser\").')';\n\t\t\t\t\t}\n\t\t\t\t} elseif ($object->socid > 0 && $object->contact_id > 0) {\t// external user with a link to a contact\n\t\t\t\t\tprint img_picto('', 'company').$form->select_company(0, 'socid', '', '&nbsp;'); // We keep thirdparty empty, contact is already set\n\t\t\t\t\tprint img_picto('', 'contact').$form->selectcontacts(0, $object->contact_id, 'contactid', 1, '', '', 1, '', false, 1);\n\t\t\t\t\tif ($object->ldap_sid) {\n\t\t\t\t\t\tprint ' ('.$langs->trans(\"DomainUser\").')';\n\t\t\t\t\t}\n\t\t\t\t} else {\t// $object->socid is not > 0 here\n\t\t\t\t\tprint img_picto('', 'company').$form->select_company(0, 'socid', '', '&nbsp;'); // We keep thirdparty empty, contact is already set\n\t\t\t\t\tprint img_picto('', 'contact').$form->selectcontacts(0, 0, 'contactid', 1, '', '', 1, '', false, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\n\t\t\tprint '</table><hr><table class=\"border centpercent\">';\n\n\n\t\t\t// Date access validity\n\t\t\tprint '<tr><td>'.$langs->trans(\"RangeOfLoginValidity\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $form->selectDate($datestartvalidity ? $datestartvalidity : $object->datestartvalidity, 'datestartvalidity', 0, 0, 1, 'formdatestartvalidity', 1, 1, 0, '', '', '', '', 1, '', '');\n\t\t\t} else {\n\t\t\t\tprint dol_print_date($object->datestartvalidity, 'day');\n\t\t\t}\n\n\t\t\t/*if ($datestartvalidity && $dateendvalidity) {\n\t\t\t\tprint ' - ';\n\t\t\t}*/\n\t\t\tprint ' &nbsp; ';\n\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $form->selectDate($dateendvalidity ? $datendevalidity : $object->dateendvalidity, 'dateendvalidity', 0, 0, 1, 'formdateendvalidity', 1, 0, 0, '', '', '', '', 1, '', '');\n\t\t\t} else {\n\t\t\t\tprint dol_print_date($object->dateendvalidity, 'day');\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Pass\n\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"Password\").'</td>';\n\t\t\tprint '<td>';\n\t\t\t$valuetoshow = '';\n\t\t\tif (preg_match('/ldap/', $dolibarr_main_authentication)) {\n\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').$langs->trans(\"PasswordOfUserInLDAP\");\n\t\t\t}\n\t\t\tif (preg_match('/http/', $dolibarr_main_authentication)) {\n\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').$form->textwithpicto($text, $langs->trans(\"DolibarrInHttpAuthenticationSoPasswordUseless\", $dolibarr_main_authentication), 1, 'warning');\n\t\t\t}\n\t\t\tif (preg_match('/dolibarr/', $dolibarr_main_authentication)) {\n\t\t\t\tif ($caneditpassword) {\n\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').'<input maxlength=\"128\" type=\"password\" class=\"flat\" name=\"password\" value=\"'.$object->pass.'\" autocomplete=\"new-password\">';\n\t\t\t\t} else {\n\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').preg_replace('/./i', '*', $object->pass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Other form for user password\n\t\t\t$parameters = array('valuetoshow' => $valuetoshow, 'caneditpassword' => $caneditpassword);\n\t\t\t$reshook = $hookmanager->executeHooks('printUserPasswordField', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\t\tif ($reshook > 0) {\n\t\t\t\t$valuetoshow = $hookmanager->resPrint; // to replace\n\t\t\t} else {\n\t\t\t\t$valuetoshow .= $hookmanager->resPrint; // to add\n\t\t\t}\n\n\t\t\tprint $valuetoshow;\n\t\t\tprint \"</td></tr>\\n\";\n\n\t\t\t// API key\n\t\t\tif (!empty($conf->api->enabled) && ($user->id == $id || $user->admin || $user->rights->api->apikey->generate)) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"ApiKey\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint '<input class=\"minwidth300\" maxsize=\"32\" type=\"text\" id=\"api_key\" name=\"api_key\" value=\"'.$object->api_key.'\" autocomplete=\"off\">';\n\t\t\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t\t\tprint '&nbsp;'.img_picto($langs->trans('Generate'), 'refresh', 'id=\"generate_api_key\" class=\"linkobject\"');\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// OpenID url\n\t\t\tif (isset($conf->file->main_authentication) && preg_match('/openid/', $conf->file->main_authentication) && !empty($conf->global->MAIN_OPENIDURL_PERUSER)) {\n\t\t\t\tprint \"<tr>\".'<td>'.$langs->trans(\"OpenIDURL\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint '<input class=\"minwidth100\" type=\"url\" name=\"openid\" class=\"flat\" value=\"'.$object->openid.'\">';\n\t\t\t\t} else {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"openid\" value=\"'.$object->openid.'\">';\n\t\t\t\t\tprint $object->openid;\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\tprint '</table><hr><table class=\"border centpercent\">';\n\n\n\t\t\t// Address\n\t\t\tprint '<tr><td class=\"tdtop titlefieldcreate\">'.$form->editfieldkey('Address', 'address', '', $object, 0).'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint '<textarea name=\"address\" id=\"address\" class=\"quatrevingtpercent\" rows=\"3\" wrap=\"soft\">';\n\t\t\t}\n\t\t\tprint $object->address;\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint '</textarea>';\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Zip\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Zip', 'zipcode', '', $object, 0).'</td><td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $formcompany->select_ziptown($object->zip, 'zipcode', array('town', 'selectcountry_id', 'state_id'), 6);\n\t\t\t} else {\n\t\t\t\tprint $object->zip;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Town\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Town', 'town', '', $object, 0).'</td><td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $formcompany->select_ziptown($object->town, 'town', array('zipcode', 'selectcountry_id', 'state_id'));\n\t\t\t} else {\n\t\t\t\tprint $object->town;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Country\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Country', 'selectcounty_id', '', $object, 0).'</td><td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $form->select_country((GETPOST('country_id') != '' ?GETPOST('country_id') : $object->country_id), 'country_id');\n\t\t\t\tif ($user->admin) {\n\t\t\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$countrylabel = getCountry($object->country_id, '0');\n\t\t\t\tprint $countrylabel;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// State\n\t\t\tif (empty($conf->global->USER_DISABLE_STATE)) {\n\t\t\t\tprint '<tr><td class=\"tdoverflow\">'.$form->editfieldkey('State', 'state_id', '', $object, 0).'</td><td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint img_picto('', 'state', 'class=\"pictofixedwidth\"');\n\t\t\t\t\tprint $formcompany->select_state($object->state_id, $object->country_code, 'state_id');\n\t\t\t\t} else {\n\t\t\t\t\tprint $object->state_label;\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Tel pro\n\t\t\tprint \"<tr>\".'<td>'.$langs->trans(\"PhonePro\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint img_picto('', 'phoning', 'class=\"pictofixedwidth\"');\n\t\t\tif ($caneditfield && empty($object->ldap_sid)) {\n\t\t\t\tprint '<input type=\"text\" name=\"office_phone\" class=\"flat maxwidth200\" value=\"'.$object->office_phone.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"office_phone\" value=\"'.$object->office_phone.'\">';\n\t\t\t\tprint $object->office_phone;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Tel mobile\n\t\t\tprint \"<tr>\".'<td>'.$langs->trans(\"PhoneMobile\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint img_picto('', 'phoning_mobile', 'class=\"pictofixedwidth\"');\n\t\t\tif ($caneditfield && empty($object->ldap_sid)) {\n\t\t\t\tprint '<input type=\"text\" name=\"user_mobile\" class=\"flat maxwidth200\" value=\"'.$object->user_mobile.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"user_mobile\" value=\"'.$object->user_mobile.'\">';\n\t\t\t\tprint $object->user_mobile;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Fax\n\t\t\tprint \"<tr>\".'<td>'.$langs->trans(\"Fax\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint img_picto('', 'phoning_fax', 'class=\"pictofixedwidth\"');\n\t\t\tif ($caneditfield && empty($object->ldap_sid)) {\n\t\t\t\tprint '<input type=\"text\" name=\"office_fax\" class=\"flat maxwidth200\" value=\"'.$object->office_fax.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"office_fax\" value=\"'.$object->office_fax.'\">';\n\t\t\t\tprint $object->office_fax;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// EMail\n\t\t\tprint \"<tr>\".'<td'.(!empty($conf->global->USER_MAIL_REQUIRED) ? ' class=\"fieldrequired\"' : '').'>'.$langs->trans(\"EMail\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint img_picto('', 'object_email', 'class=\"pictofixedwidth\"');\n\t\t\tif ($caneditfield && empty($object->ldap_sid)) {\n\t\t\t\tprint '<input class=\"minwidth100 maxwidth500 widthcentpercentminusx\" type=\"text\" name=\"email\" class=\"flat\" value=\"'.$object->email.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"email\" value=\"'.$object->email.'\">';\n\t\t\t\tprint $object->email;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\t\tif ($value['active']) {\n\t\t\t\t\t\tprint '<tr><td>'.$langs->trans($value['label']).'</td>';\n\t\t\t\t\t\tprint '<td>';\n\t\t\t\t\t\tif (!empty($value['icon'])) {\n\t\t\t\t\t\t\tprint '<span class=\"fa '.$value['icon'].' pictofixedwidth\"></span>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($caneditfield && empty($object->ldap_sid)) {\n\t\t\t\t\t\t\tprint '<input type=\"text\" name=\"'.$key.'\" class=\"flat maxwidth200\" value=\"'.$object->socialnetworks[$key].'\">';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"'.$key.'\" value=\"'.$object->socialnetworks[$key].'\">';\n\t\t\t\t\t\t\tprint $object->socialnetworks[$key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if social network is not active but value exist we do not want to loose it\n\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"'.$key.'\" value=\"'.$object->socialnetworks[$key].'\">';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprint '</table><hr><table class=\"border centpercent\">';\n\n\t\t\t// Default warehouse\n\t\t\tif (!empty($conf->stock->enabled) && !empty($conf->global->MAIN_DEFAULT_WAREHOUSE_USER)) {\n\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"DefaultWarehouse\").'</td><td>';\n\t\t\t\tprint $formproduct->selectWarehouses($object->fk_warehouse, 'fk_warehouse', 'warehouseopen', 1);\n\t\t\t\tprint ' <a href=\"'.DOL_URL_ROOT.'/product/stock/card.php?action=create&token='.newToken().'&backtopage='.urlencode($_SERVER['PHP_SELF'].'?id='.$object->id.'&action=edit&token='.newToken()).'\"><span class=\"fa fa-plus-circle valignmiddle paddingleft\" title=\"'.$langs->trans(\"AddWarehouse\").'\"></span></a>';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Accountancy code\n\t\t\tif (!empty($conf->accounting->enabled)) {\n\t\t\t\tprint \"<tr>\";\n\t\t\t\tprint '<td class=\"titlefieldcreate\">'.$langs->trans(\"AccountancyCode\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint '<input type=\"text\" class=\"flat maxwidth300\" name=\"accountancy_code\" value=\"'.$object->accountancy_code.'\">';\n\t\t\t\t} else {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"accountancy_code\" value=\"'.$object->accountancy_code.'\">';\n\t\t\t\t\tprint $object->accountancy_code;\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\";\n\t\t\t}\n\n\t\t\t// User color\n\t\t\tif (!empty($conf->agenda->enabled)) {\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ColorUser\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint $formother->selectColor(GETPOSTISSET('color') ?GETPOST('color', 'alphanohtml') : $object->color, 'color', null, 1, '', 'hideifnotset');\n\t\t\t\t} else {\n\t\t\t\t\tprint $formother->showColor($object->color, '');\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Photo\n\t\t\tprint '<tr>';\n\t\t\tprint '<td class=\"titlefieldcreate\">'.$langs->trans(\"Photo\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint $form->showphoto('userphoto', $object, 60, 0, $caneditfield, 'photowithmargin', 'small', 1, 0, 'user', 1);\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\n\t\t\t// Categories\n\t\t\tif (!empty($conf->categorie->enabled) && !empty($user->rights->categorie->lire)) {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey('Categories', 'usercats', '', $object, 0).'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint img_picto('', 'category', 'class=\"pictofixedwidth\"');\n\t\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_USER, null, null, null, null, 1);\n\t\t\t\t$c = new Categorie($db);\n\t\t\t\t$cats = $c->containing($object->id, Categorie::TYPE_USER);\n\t\t\t\tforeach ($cats as $cat) {\n\t\t\t\t\t$arrayselected[] = $cat->id;\n\t\t\t\t}\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint $form->multiselectarray('usercats', $cate_arbo, $arrayselected, '', 0, '', 0, '90%');\n\t\t\t\t} else {\n\t\t\t\t\tprint $form->showCategories($object->id, Categorie::TYPE_USER, 1);\n\t\t\t\t}\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\n\t\t\t// Default language\n\t\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey('DefaultLang', 'default_lang', '', $object, 0, 'string', '', 0, 0, 'id', $langs->trans(\"WarningNotLangOfInterface\", $langs->transnoentitiesnoconv(\"UserGUISetup\"))).'</td><td colspan=\"3\">'.\"\\n\";\n\t\t\t\tprint img_picto('', 'language', 'class=\"pictofixedwidth\"').$formadmin->select_language($object->lang, 'default_lang', 0, null, '1', 0, 0, 'widthcentpercentminusx maxwidth300');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '</tr>';\n\t\t\t}\n\n\t\t\t// Status\n\t\t\tprint '<tr><td>'.$langs->trans(\"Status\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint $object->getLibStatut(4);\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Company / Contact\n\t\t\tif (!empty($conf->societe->enabled)) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"LinkToCompanyContact\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($object->socid > 0) {\n\t\t\t\t\t$societe = new Societe($db);\n\t\t\t\t\t$societe->fetch($object->socid);\n\t\t\t\t\tprint $societe->getNomUrl(1, '');\n\t\t\t\t\tif ($object->contact_id) {\n\t\t\t\t\t\t$contact = new Contact($db);\n\t\t\t\t\t\t$contact->fetch($object->contact_id);\n\t\t\t\t\t\tprint ' / <a href=\"'.DOL_URL_ROOT.'/contact/card.php?id='.$object->contact_id.'\">'.img_object($langs->trans(\"ShowContact\"), 'contact').' '.dol_trunc($contact->getFullName($langs), 32).'</a>';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint '<span class=\"opacitymedium hideonsmartphone\">'.$langs->trans(\"ThisUserIsNot\").'</span>';\n\t\t\t\t}\n\t\t\t\tprint ' <span class=\"opacitymedium hideonsmartphone\">('.$langs->trans(\"UseTypeFieldToChange\").')</span>';\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Module Adherent\n\t\t\tif (!empty($conf->adherent->enabled)) {\n\t\t\t\t$langs->load(\"members\");\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"LinkedToDolibarrMember\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($object->fk_member) {\n\t\t\t\t\t$adh = new Adherent($db);\n\t\t\t\t\t$adh->fetch($object->fk_member);\n\t\t\t\t\t$adh->ref = $adh->login; // Force to show login instead of id\n\t\t\t\t\tprint $adh->getNomUrl(1);\n\t\t\t\t} else {\n\t\t\t\t\tprint '<span class=\"opacitymedium hideonsmartphone\">'.$langs->trans(\"UserNotLinkedToMember\").'</span>';\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Multicompany\n\t\t\t// TODO check if user not linked with the current entity before change entity (thirdparty, invoice, etc.) !!\n\t\t\tif (!empty($conf->multicompany->enabled) && is_object($mc)) {\n\t\t\t\t// This is now done with hook formObjectOptions. Keep this code for backward compatibility with old multicompany module\n\t\t\t\tif (!method_exists($mc, 'formObjectOptions')) {\n\t\t\t\t\tif (empty($conf->multicompany->transverse_mode) && $conf->entity == 1 && $user->admin && !$user->entity) {\n\t\t\t\t\t\tprint \"<tr>\".'<td>'.$langs->trans(\"Entity\").'</td>';\n\t\t\t\t\t\tprint \"<td>\".$mc->select_entities($object->entity, 'entity', '', 0, 1, false, false, 1); // last parameter 1 means, show also a choice 0=>'all entities'\n\t\t\t\t\t\tprint \"</td></tr>\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"entity\" value=\"'.$conf->entity.'\" />';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Other attributes\n\t\t\t$parameters = array('colspan' => ' colspan=\"2\"');\n\t\t\t//include DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_edit.tpl.php';\t\t// We do not use common tpl here because we need a special test on $caneditfield\n\t\t\t$reshook = $hookmanager->executeHooks('formObjectOptions', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\t\tprint $hookmanager->resPrint;\n\t\t\tif (empty($reshook)) {\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint $object->showOptionals($extrafields, 'edit');\n\t\t\t\t} else {\n\t\t\t\t\tprint $object->showOptionals($extrafields, 'view');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Signature\n\t\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"Signature\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\t\t\t\t$doleditor = new DolEditor('signature', $object->signature, '', 138, 'dolibarr_notes', 'In', false, true, empty($conf->global->FCKEDITOR_ENABLE_USERSIGN) ? 0 : 1, ROWS_4, '90%');\n\t\t\t\tprint $doleditor->Create(1);\n\t\t\t} else {\n\t\t\t\tprint dol_htmlentitiesbr($object->signature);\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\n\t\t\tprint '</table>';\n\n\t\t\tprint '<hr>';\n\n\n\t\t\tprint '<table class=\"border centpercent\">';\n\n\n\t\t\t// TODO Move this into tab RH (HierarchicalResponsible must be on both tab)\n\n\t\t\t// Position/Job\n\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"PostOrFunction\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint '<input type=\"text\" class=\"minwidth300 maxwidth500\" name=\"job\" value=\"'.dol_escape_htmltag($object->job).'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"job\" value=\"'.dol_escape_htmltag($object->job).'\">';\n\t\t\t\tprint dol_escape_htmltag($object->job);\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Weeklyhours\n\t\t\tprint '<tr><td>'.$langs->trans(\"WeeklyHours\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint '<input size=\"8\" type=\"text\" name=\"weeklyhours\" value=\"'.price2num(GETPOST('weeklyhours') ?GETPOST('weeklyhours') : $object->weeklyhours).'\">';\n\t\t\t} else {\n\t\t\t\tprint price2num($object->weeklyhours);\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Sensitive salary/value information\n\t\t\tif ((empty($user->socid) && in_array($id, $childids))\t// A user can always see salary/value information for its subordinates\n\t\t\t\t|| (!empty($conf->salaries->enabled) && !empty($user->rights->salaries->readall))\n\t\t\t\t|| (!empty($conf->hrm->enabled) && !empty($user->rights->hrm->employee->read))) {\n\t\t\t\t\t$langs->load(\"salaries\");\n\n\t\t\t\t// Salary\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"Salary\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint img_picto('', 'salary', 'class=\"pictofixedwidth paddingright\"').'<input size=\"8\" type=\"text\" name=\"salary\" value=\"'.price2num(GETPOST('salary') ?GETPOST('salary') : $object->salary).'\">';\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\n\t\t\t\t// THM\n\t\t\t\tprint '<tr><td>';\n\t\t\t\t$text = $langs->trans(\"THM\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"THMDescription\"), 1, 'help', 'classthm');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint '<input size=\"8\" type=\"text\" name=\"thm\" value=\"'.price2num(GETPOST('thm') ?GETPOST('thm') : $object->thm).'\">';\n\t\t\t\t} else {\n\t\t\t\t\tprint ($object->thm != '' ?price($object->thm, '', $langs, 1, -1, -1, $conf->currency) : '');\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\n\t\t\t\t// TJM\n\t\t\t\tprint '<tr><td>';\n\t\t\t\t$text = $langs->trans(\"TJM\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"TJMDescription\"), 1, 'help', 'classthm');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint '<input size=\"8\" type=\"text\" name=\"tjm\" value=\"'.price2num(GETPOST('tjm') ?GETPOST('tjm') : $object->tjm).'\">';\n\t\t\t\t} else {\n\t\t\t\t\tprint ($object->tjm != '' ?price($object->tjm, '', $langs, 1, -1, -1, $conf->currency) : '');\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Date employment\n\t\t\tprint '<tr><td>'.$langs->trans(\"DateEmployment\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $form->selectDate($dateemployment ? $dateemployment : $object->dateemployment, 'dateemployment', 0, 0, 1, 'formdateemployment', 1, 1);\n\t\t\t} else {\n\t\t\t\tprint dol_print_date($object->dateemployment, 'day');\n\t\t\t}\n\n\t\t\tif ($dateemployment && $dateemploymentend) {\n\t\t\t\tprint ' - ';\n\t\t\t}\n\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $form->selectDate($dateemploymentend ? $dateemploymentend : $object->dateemploymentend, 'dateemploymentend', 0, 0, 1, 'formdateemploymentend', 1, 0);\n\t\t\t} else {\n\t\t\t\tprint dol_print_date($object->dateemploymentend, 'day');\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Date birth\n\t\t\tprint '<tr><td>'.$langs->trans(\"DateOfBirth\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\techo $form->selectDate($dateofbirth ? $dateofbirth : $object->birth, 'dateofbirth', 0, 0, 1, 'updateuser', 1, 0);\n\t\t\t} else {\n\t\t\t\tprint dol_print_date($object->birth, 'day');\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\tprint '</table>';\n\n\t\t\tprint dol_get_fiche_end();\n\n\t\t\tprint '<div class=\"center\">';\n\t\t\tprint '<input value=\"'.$langs->trans(\"Save\").'\" class=\"button button-save\" type=\"submit\" name=\"save\">';\n\t\t\tprint '&nbsp; &nbsp; &nbsp;';\n\t\t\tprint '<input value=\"'.$langs->trans(\"Cancel\").'\" class=\"button button-cancel\" type=\"submit\" name=\"cancel\">';\n\t\t\tprint '</div>';\n\n\t\t\tprint '</form>';\n\t\t}\n\n\t\tif ($action != 'edit' && $action != 'presend') {\n\t\t\tprint '<div class=\"fichecenter\"><div class=\"fichehalfleft\">';\n\n\t\t\t// Generated documents\n\t\t\t$filename = dol_sanitizeFileName($object->ref);\n\t\t\t$filedir = $conf->user->dir_output.\"/\".dol_sanitizeFileName($object->ref);\n\t\t\t$urlsource = $_SERVER[\"PHP_SELF\"].\"?id=\".$object->id;\n\t\t\t$genallowed = $user->rights->user->user->lire;\n\t\t\t$delallowed = $user->rights->user->user->creer;\n\n\t\t\tprint $formfile->showdocuments('user', $filename, $filedir, $urlsource, $genallowed, $delallowed, $object->model_pdf, 1, 0, 0, 28, 0, '', 0, '', empty($soc->default_lang) ? '' : $soc->default_lang);\n\t\t\t$somethingshown = $formfile->numoffiles;\n\n\t\t\t// Show links to link elements\n\t\t\t$linktoelem = $form->showLinkToObjectBlock($object, null, null);\n\t\t\t$somethingshown = $form->showLinkedObjectBlock($object, $linktoelem);\n\n\t\t\tprint '</div><div class=\"fichehalfright\">';\n\n\t\t\t// List of actions on element\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formactions.class.php';\n\t\t\t$formactions = new FormActions($db);\n\t\t\t$somethingshown = $formactions->showactions($object, 'user', $socid, 1);\n\n\t\t\tprint '</div></div>';\n\t\t}\n\n\t\tif (!empty($conf->ldap->enabled) && !empty($object->ldap_sid)) {\n\t\t\t$ldap->unbind();\n\t\t}\n\t}\n}\n\nif (!empty($conf->api->enabled) && !empty($conf->use_javascript_ajax)) {\n\tprint \"\\n\".'<script type=\"text/javascript\">';\n\tprint '$(document).ready(function () {\n            $(\"#generate_api_key\").click(function() {\n                $.get( \"'.DOL_URL_ROOT.'/core/ajax/security.php\", {\n                    action: \\'getrandompassword\\',\n                    generic: true\n                },\n                function(token) {\n                    $(\"#api_key\").val(token);\n                });\n            });\n    });';\n\tprint '</script>';\n}\n\n// End of page\nllxFooter();\n$db->close();\n"], "fixing_code": ["<?php\n/* Copyright (c) 2002-2007  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2012  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2004       Sebastien Di Cintio     <sdicintio@ressource-toi.org>\n * Copyright (C) 2004       Eric Seigne             <eric.seigne@ryxeo.com>\n * Copyright (C) 2005-2017  Regis Houssin           <regis.houssin@inodbox.com>\n * Copyright (C) 2006       Andre Cianfarani        <acianfa@free.fr>\n * Copyright (C) 2006       Marc Barilley/Ocebo     <marc@ocebo.com>\n * Copyright (C) 2007       Franky Van Liedekerke   <franky.van.liedekerker@telenet.be>\n * Copyright (C) 2007       Patrick Raguin          <patrick.raguin@gmail.com>\n * Copyright (C) 2010       Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2010-2021  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2011       Herve Prot              <herve.prot@symeos.com>\n * Copyright (C) 2012-2016  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2012       Cedric Salvador         <csalvador@gpcsolutions.fr>\n * Copyright (C) 2012-2015  Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2014-2020  Alexandre Spangaro      <aspangaro@open-dsi.fr>\n * Copyright (C) 2018-2021  Ferran Marcet           <fmarcet@2byte.es>\n * Copyright (C) 2018-2021  Fr\u00e9d\u00e9ric France         <frederic.france@netlogic.fr>\n * Copyright (C) 2018       Nicolas ZABOURI\t        <info@inovea-conseil.com>\n * Copyright (C) 2018       Christophe Battarel     <christophe@altairis.fr>\n * Copyright (C) 2018       Josep Lluis Amador      <joseplluis@lliuretic.cat>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/core/class/html.form.class.php\n *  \\ingroup    core\n *\t\\brief      File of class with all html predefined components\n */\n\n\n/**\n *\tClass to manage generation of HTML components\n *\tOnly common components must be here.\n *\n *  TODO Merge all function load_cache_* and loadCache* (except load_cache_vatrates) into one generic function loadCacheTable\n */\nclass Form\n{\n\t/**\n\t * @var DoliDB Database handler.\n\t */\n\tpublic $db;\n\n\t/**\n\t * @var string Error code (or message)\n\t */\n\tpublic $error = '';\n\n\t/**\n\t * @var string[]    Array of error strings\n\t */\n\tpublic $errors = array();\n\n\tpublic $num;\n\n\t// Cache arrays\n\tpublic $cache_types_paiements = array();\n\tpublic $cache_conditions_paiements = array();\n\tpublic $cache_transport_mode = array();\n\tpublic $cache_availability = array();\n\tpublic $cache_demand_reason = array();\n\tpublic $cache_types_fees = array();\n\tpublic $cache_vatrates = array();\n\n\n\t/**\n\t * Constructor\n\t *\n\t * @param\t\tDoliDB\t\t$db      Database handler\n\t */\n\tpublic function __construct($db)\n\t{\n\t\t$this->db = $db;\n\t}\n\n\t/**\n\t * Output key field for an editable field\n\t *\n\t * @param   string\t$text\t\t\tText of label or key to translate\n\t * @param   string\t$htmlname\t\tName of select field ('edit' prefix will be added)\n\t * @param   string\t$preselected    Value to show/edit (not used in this function)\n\t * @param\tobject\t$object\t\t\tObject\n\t * @param\tboolean\t$perm\t\t\tPermission to allow button to edit parameter. Set it to 0 to have a not edited field.\n\t * @param\tstring\t$typeofdata\t\tType of data ('string' by default, 'email', 'amount:99', 'numeric:99', 'text' or 'textarea:rows:cols', 'datepicker' ('day' do not work, don't know why), 'checkbox:ckeditor:dolibarr_zzz:width:height:savemethod:1:rows:cols', 'select;xxx[:class]'...)\n\t * @param\tstring\t$moreparam\t\tMore param to add on a href URL.\n\t * @param   int     $fieldrequired  1 if we want to show field as mandatory using the \"fieldrequired\" CSS.\n\t * @param   int     $notabletag     1=Do not output table tags but output a ':', 2=Do not output table tags and no ':', 3=Do not output table tags but output a ' '\n\t * @param\tstring\t$paramid\t\tKey of parameter for id ('id', 'socid')\n\t * @param\tstring\t$help\t\t\tTooltip help\n\t * @return\tstring\t\t\t\t\tHTML edit field\n\t */\n\tpublic function editfieldkey($text, $htmlname, $preselected, $object, $perm, $typeofdata = 'string', $moreparam = '', $fieldrequired = 0, $notabletag = 0, $paramid = 'id', $help = '')\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$ret = '';\n\n\t\t// TODO change for compatibility\n\t\tif (!empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && !preg_match('/^select;/', $typeofdata)) {\n\t\t\tif (!empty($perm)) {\n\t\t\t\t$tmp = explode(':', $typeofdata);\n\t\t\t\t$ret .= '<div class=\"editkey_'.$tmp[0].(!empty($tmp[1]) ? ' '.$tmp[1] : '').'\" id=\"'.$htmlname.'\">';\n\t\t\t\tif ($fieldrequired) {\n\t\t\t\t\t$ret .= '<span class=\"fieldrequired\">';\n\t\t\t\t}\n\t\t\t\tif ($help) {\n\t\t\t\t\t$ret .= $this->textwithpicto($langs->trans($text), $help);\n\t\t\t\t} else {\n\t\t\t\t\t$ret .= $langs->trans($text);\n\t\t\t\t}\n\t\t\t\tif ($fieldrequired) {\n\t\t\t\t\t$ret .= '</span>';\n\t\t\t\t}\n\t\t\t\t$ret .= '</div>'.\"\\n\";\n\t\t\t} else {\n\t\t\t\tif ($fieldrequired) {\n\t\t\t\t\t$ret .= '<span class=\"fieldrequired\">';\n\t\t\t\t}\n\t\t\t\tif ($help) {\n\t\t\t\t\t$ret .= $this->textwithpicto($langs->trans($text), $help);\n\t\t\t\t} else {\n\t\t\t\t\t$ret .= $langs->trans($text);\n\t\t\t\t}\n\t\t\t\tif ($fieldrequired) {\n\t\t\t\t\t$ret .= '</span>';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (empty($notabletag) && GETPOST('action', 'aZ09') != 'edit'.$htmlname && $perm) {\n\t\t\t\t$ret .= '<table class=\"nobordernopadding centpercent\"><tr><td class=\"nowrap\">';\n\t\t\t}\n\t\t\tif ($fieldrequired) {\n\t\t\t\t$ret .= '<span class=\"fieldrequired\">';\n\t\t\t}\n\t\t\tif ($help) {\n\t\t\t\t$ret .= $this->textwithpicto($langs->trans($text), $help);\n\t\t\t} else {\n\t\t\t\t$ret .= $langs->trans($text);\n\t\t\t}\n\t\t\tif ($fieldrequired) {\n\t\t\t\t$ret .= '</span>';\n\t\t\t}\n\t\t\tif (!empty($notabletag)) {\n\t\t\t\t$ret .= ' ';\n\t\t\t}\n\t\t\tif (empty($notabletag) && GETPOST('action', 'aZ09') != 'edit'.$htmlname && $perm) {\n\t\t\t\t$ret .= '</td>';\n\t\t\t}\n\t\t\tif (empty($notabletag) && GETPOST('action', 'aZ09') != 'edit'.$htmlname && $perm) {\n\t\t\t\t$ret .= '<td class=\"right\">';\n\t\t\t}\n\t\t\tif ($htmlname && GETPOST('action', 'aZ09') != 'edit'.$htmlname && $perm) {\n\t\t\t\t$ret .= '<a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=edit'.$htmlname.'&token='.newToken().'&'.$paramid.'='.$object->id.$moreparam.'\">'.img_edit($langs->trans('Edit'), ($notabletag ? 0 : 1)).'</a>';\n\t\t\t}\n\t\t\tif (!empty($notabletag) && $notabletag == 1) {\n\t\t\t\t$ret .= ' : ';\n\t\t\t}\n\t\t\tif (!empty($notabletag) && $notabletag == 3) {\n\t\t\t\t$ret .= ' ';\n\t\t\t}\n\t\t\tif (empty($notabletag) && GETPOST('action', 'aZ09') != 'edit'.$htmlname && $perm) {\n\t\t\t\t$ret .= '</td>';\n\t\t\t}\n\t\t\tif (empty($notabletag) && GETPOST('action', 'aZ09') != 'edit'.$htmlname && $perm) {\n\t\t\t\t$ret .= '</tr></table>';\n\t\t\t}\n\t\t}\n\n\t\treturn $ret;\n\t}\n\n\t/**\n\t * Output value of a field for an editable field\n\t *\n\t * @param\tstring\t$text\t\t\tText of label (not used in this function)\n\t * @param\tstring\t$htmlname\t\tName of select field\n\t * @param\tstring\t$value\t\t\tValue to show/edit\n\t * @param\tobject\t$object\t\t\tObject\n\t * @param\tboolean\t$perm\t\t\tPermission to allow button to edit parameter\n\t * @param\tstring\t$typeofdata\t\tType of data ('string' by default, 'email', 'amount:99', 'numeric:99', 'text' or 'textarea:rows:cols%', 'datepicker' ('day' do not work, don't know why), 'dayhour' or 'datepickerhour', 'ckeditor:dolibarr_zzz:width:height:savemethod:toolbarstartexpanded:rows:cols', 'select;xkey:xval,ykey:yval,...')\n\t * @param\tstring\t$editvalue\t\tWhen in edit mode, use this value as $value instead of value (for example, you can provide here a formated price instead of numeric value). Use '' to use same than $value\n\t * @param\tobject\t$extObject\t\tExternal object\n\t * @param\tmixed\t$custommsg\t\tString or Array of custom messages : eg array('success' => 'MyMessage', 'error' => 'MyMessage')\n\t * @param\tstring\t$moreparam\t\tMore param to add on the form action href URL\n\t * @param   int     $notabletag     Do no output table tags\n\t * @param\tstring\t$formatfunc\t\tCall a specific function to output field in view mode (For example: 'dol_print_email')\n\t * @param\tstring\t$paramid\t\tKey of parameter for id ('id', 'socid')\n\t * @return  string\t\t\t\t\tHTML edit field\n\t */\n\tpublic function editfieldval($text, $htmlname, $value, $object, $perm, $typeofdata = 'string', $editvalue = '', $extObject = null, $custommsg = null, $moreparam = '', $notabletag = 0, $formatfunc = '', $paramid = 'id')\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$ret = '';\n\n\t\t// Check parameters\n\t\tif (empty($typeofdata)) {\n\t\t\treturn 'ErrorBadParameter';\n\t\t}\n\n\t\t// When option to edit inline is activated\n\t\tif (!empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && !preg_match('/^select;|day|datepicker|dayhour|datehourpicker/', $typeofdata)) { // TODO add jquery timepicker and support select\n\t\t\t$ret .= $this->editInPlace($object, $value, $htmlname, $perm, $typeofdata, $editvalue, $extObject, $custommsg);\n\t\t} else {\n\t\t\t$editmode = (GETPOST('action', 'aZ09') == 'edit'.$htmlname);\n\t\t\tif ($editmode) {\n\t\t\t\t$ret .= \"\\n\";\n\t\t\t\t$ret .= '<form method=\"post\" action=\"'.$_SERVER[\"PHP_SELF\"].($moreparam ? '?'.$moreparam : '').'\">';\n\t\t\t\t$ret .= '<input type=\"hidden\" name=\"action\" value=\"set'.$htmlname.'\">';\n\t\t\t\t$ret .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t\t$ret .= '<input type=\"hidden\" name=\"'.$paramid.'\" value=\"'.$object->id.'\">';\n\t\t\t\tif (empty($notabletag)) {\n\t\t\t\t\t$ret .= '<table class=\"nobordernopadding centpercent\">';\n\t\t\t\t}\n\t\t\t\tif (empty($notabletag)) {\n\t\t\t\t\t$ret .= '<tr><td>';\n\t\t\t\t}\n\t\t\t\tif (preg_match('/^(string|safehtmlstring|email)/', $typeofdata)) {\n\t\t\t\t\t$tmp = explode(':', $typeofdata);\n\t\t\t\t\t$ret .= '<input type=\"text\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" value=\"'.($editvalue ? $editvalue : $value).'\"'.($tmp[1] ? ' size=\"'.$tmp[1].'\"' : '').' autofocus>';\n\t\t\t\t} elseif (preg_match('/^(numeric|amount)/', $typeofdata)) {\n\t\t\t\t\t$tmp = explode(':', $typeofdata);\n\t\t\t\t\t$valuetoshow = price2num($editvalue ? $editvalue : $value);\n\t\t\t\t\t$ret .= '<input type=\"text\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" value=\"'.($valuetoshow != '' ? price($valuetoshow) : '').'\"'.($tmp[1] ? ' size=\"'.$tmp[1].'\"' : '').' autofocus>';\n\t\t\t\t} elseif (preg_match('/^(checkbox)/', $typeofdata)) {\n\t\t\t\t\t$tmp = explode(':', $typeofdata);\n\t\t\t\t\t$ret .= '<input type=\"checkbox\" id=\"' . $htmlname . '\" name=\"' . $htmlname . '\" value=\"' . $value . '\"' . ($tmp[1] ? $tmp[1] : '') . '/>';\n\t\t\t\t} elseif (preg_match('/^text/', $typeofdata) || preg_match('/^note/', $typeofdata)) {\t// if wysiwyg is enabled $typeofdata = 'ckeditor'\n\t\t\t\t\t$tmp = explode(':', $typeofdata);\n\t\t\t\t\t$cols = $tmp[2];\n\t\t\t\t\t$morealt = '';\n\t\t\t\t\tif (preg_match('/%/', $cols)) {\n\t\t\t\t\t\t$morealt = ' style=\"width: '.$cols.'\"';\n\t\t\t\t\t\t$cols = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t$valuetoshow = ($editvalue ? $editvalue : $value);\n\t\t\t\t\t$ret .= '<textarea id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" wrap=\"soft\" rows=\"'.($tmp[1] ? $tmp[1] : '20').'\"'.($cols ? ' cols=\"'.$cols.'\"' : 'class=\"quatrevingtpercent\"').$morealt.'\" autofocus>';\n\t\t\t\t\t// textarea convert automatically entities chars into simple chars.\n\t\t\t\t\t// So we convert & into &amp; so a string like 'a &lt; <b>b</b><br>\u00e9<br>&lt;script&gt;alert('X');&lt;script&gt;' stay a correct html and is not converted by textarea component when wysiwig is off.\n\t\t\t\t\t$valuetoshow = str_replace('&', '&amp;', $valuetoshow);\n\t\t\t\t\t$ret .= dol_string_neverthesehtmltags($valuetoshow, array('textarea'));\n\t\t\t\t\t$ret .= '</textarea>';\n\t\t\t\t} elseif ($typeofdata == 'day' || $typeofdata == 'datepicker') {\n\t\t\t\t\t$ret .= $this->selectDate($value, $htmlname, 0, 0, 1, 'form'.$htmlname, 1, 0);\n\t\t\t\t} elseif ($typeofdata == 'dayhour' || $typeofdata == 'datehourpicker') {\n\t\t\t\t\t$ret .= $this->selectDate($value, $htmlname, 1, 1, 1, 'form'.$htmlname, 1, 0);\n\t\t\t\t} elseif (preg_match('/^select;/', $typeofdata)) {\n\t\t\t\t\t$arraydata = explode(',', preg_replace('/^select;/', '', $typeofdata));\n\t\t\t\t\t$arraylist = array();\n\t\t\t\t\tforeach ($arraydata as $val) {\n\t\t\t\t\t\t$tmp = explode(':', $val);\n\t\t\t\t\t\t$tmpkey = str_replace('|', ':', $tmp[0]);\n\t\t\t\t\t\t$arraylist[$tmpkey] = $tmp[1];\n\t\t\t\t\t}\n\t\t\t\t\t$ret .= $this->selectarray($htmlname, $arraylist, $value);\n\t\t\t\t} elseif (preg_match('/^ckeditor/', $typeofdata)) {\n\t\t\t\t\t$tmp = explode(':', $typeofdata); // Example: ckeditor:dolibarr_zzz:width:height:savemethod:toolbarstartexpanded:rows:cols:uselocalbrowser\n\t\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\t\t\t\t\t$doleditor = new DolEditor($htmlname, ($editvalue ? $editvalue : $value), ($tmp[2] ? $tmp[2] : ''), ($tmp[3] ? $tmp[3] : '100'), ($tmp[1] ? $tmp[1] : 'dolibarr_notes'), 'In', ($tmp[5] ? $tmp[5] : 0), (isset($tmp[8]) ? ($tmp[8] ?true:false) : true), true, ($tmp[6] ? $tmp[6] : '20'), ($tmp[7] ? $tmp[7] : '100'));\n\t\t\t\t\t$ret .= $doleditor->Create(1);\n\t\t\t\t}\n\t\t\t\tif (empty($notabletag)) {\n\t\t\t\t\t$ret .= '</td>';\n\t\t\t\t}\n\n\t\t\t\tif (empty($notabletag)) {\n\t\t\t\t\t$ret .= '<td class=\"left\">';\n\t\t\t\t}\n\t\t\t\t//else $ret.='<div class=\"clearboth\"></div>';\n\t\t\t\t$ret .= '<input type=\"submit\" class=\"smallpaddingimp button'.(empty($notabletag) ? '' : ' ').'\" name=\"modify\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t\tif (preg_match('/ckeditor|textarea/', $typeofdata) && empty($notabletag)) {\n\t\t\t\t\t$ret .= '<br>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\t$ret .= '<input type=\"submit\" class=\"smallpaddingimp button button-cancel'.(empty($notabletag) ? '' : ' ').'\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\t\tif (empty($notabletag)) {\n\t\t\t\t\t$ret .= '</td>';\n\t\t\t\t}\n\n\t\t\t\tif (empty($notabletag)) {\n\t\t\t\t\t$ret .= '</tr></table>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\t$ret .= '</form>'.\"\\n\";\n\t\t\t} else {\n\t\t\t\tif (preg_match('/^(email)/', $typeofdata)) {\n\t\t\t\t\t$ret .= dol_print_email($value, 0, 0, 0, 0, 1);\n\t\t\t\t} elseif (preg_match('/^(amount|numeric)/', $typeofdata)) {\n\t\t\t\t\t$ret .= ($value != '' ? price($value, '', $langs, 0, -1, -1, $conf->currency) : '');\n\t\t\t\t} elseif (preg_match('/^(checkbox)/', $typeofdata)) {\n\t\t\t\t\t$tmp = explode(':', $typeofdata);\n\t\t\t\t\t$ret .= '<input type=\"checkbox\" disabled id=\"' . $htmlname . '\" name=\"' . $htmlname . '\" value=\"' . $value . '\"' . ($tmp[1] ? $tmp[1] : '') . '/>';\n\t\t\t\t} elseif (preg_match('/^text/', $typeofdata) || preg_match('/^note/', $typeofdata)) {\n\t\t\t\t\t$ret .= dol_htmlentitiesbr($value);\n\t\t\t\t} elseif (preg_match('/^safehtmlstring/', $typeofdata)) {\n\t\t\t\t\t$ret .= dol_string_onlythesehtmltags($value);\n\t\t\t\t} elseif (preg_match('/^restricthtml/', $typeofdata)) {\n\t\t\t\t\t$ret .= dol_string_onlythesehtmltags($value);\n\t\t\t\t} elseif ($typeofdata == 'day' || $typeofdata == 'datepicker') {\n\t\t\t\t\t$ret .= '<span class=\"valuedate\">'.dol_print_date($value, 'day').'</span>';\n\t\t\t\t} elseif ($typeofdata == 'dayhour' || $typeofdata == 'datehourpicker') {\n\t\t\t\t\t$ret .= '<span class=\"valuedate\">'.dol_print_date($value, 'dayhour').'</span>';\n\t\t\t\t} elseif (preg_match('/^select;/', $typeofdata)) {\n\t\t\t\t\t$arraydata = explode(',', preg_replace('/^select;/', '', $typeofdata));\n\t\t\t\t\t$arraylist = array();\n\t\t\t\t\tforeach ($arraydata as $val) {\n\t\t\t\t\t\t$tmp = explode(':', $val);\n\t\t\t\t\t\t$arraylist[$tmp[0]] = $tmp[1];\n\t\t\t\t\t}\n\t\t\t\t\t$ret .= $arraylist[$value];\n\t\t\t\t\tif ($htmlname == 'fk_product_type') {\n\t\t\t\t\t\tif ($value == 0) {\n\t\t\t\t\t\t\t$ret = img_picto($langs->trans(\"Product\"), 'product', 'class=\"paddingleftonly paddingrightonly colorgrey\"').$ret;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$ret = img_picto($langs->trans(\"Service\"), 'service', 'class=\"paddingleftonly paddingrightonly colorgrey\"').$ret;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif (preg_match('/^ckeditor/', $typeofdata)) {\n\t\t\t\t\t$tmpcontent = dol_htmlentitiesbr($value);\n\t\t\t\t\tif (!empty($conf->global->MAIN_DISABLE_NOTES_TAB)) {\n\t\t\t\t\t\t$firstline = preg_replace('/<br>.*/', '', $tmpcontent);\n\t\t\t\t\t\t$firstline = preg_replace('/[\\n\\r].*/', '', $firstline);\n\t\t\t\t\t\t$tmpcontent = $firstline.((strlen($firstline) != strlen($tmpcontent)) ? '...' : '');\n\t\t\t\t\t}\n\t\t\t\t\t// We dont use dol_escape_htmltag to get the html formating active, but this need we must also\n\t\t\t\t\t// clean data from some dangerous html\n\t\t\t\t\t$ret .= dol_string_onlythesehtmltags(dol_htmlentitiesbr($tmpcontent));\n\t\t\t\t} else {\n\t\t\t\t\t$ret .= dol_escape_htmltag($value);\n\t\t\t\t}\n\n\t\t\t\tif ($formatfunc && method_exists($object, $formatfunc)) {\n\t\t\t\t\t$ret = $object->$formatfunc($ret);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $ret;\n\t}\n\n\t/**\n\t * Output edit in place form\n\t *\n\t * @param   string\t$fieldname\t\tName of the field\n\t * @param\tobject\t$object\t\t\tObject\n\t * @param\tboolean\t$perm\t\t\tPermission to allow button to edit parameter. Set it to 0 to have a not edited field.\n\t * @param\tstring\t$typeofdata\t\tType of data ('string' by default, 'email', 'amount:99', 'numeric:99', 'text' or 'textarea:rows:cols', 'datepicker' ('day' do not work, don't know why), 'ckeditor:dolibarr_zzz:width:height:savemethod:1:rows:cols', 'select;xxx[:class]'...)\n\t * @param\tstring\t$check\t\t\tSame coe than $check parameter of GETPOST()\n\t * @param\tstring\t$morecss\t\tMore CSS\n\t * @return\tstring   \t\t      \tHTML code for the edit of alternative language\n\t */\n\tpublic function widgetForTranslation($fieldname, $object, $perm, $typeofdata = 'string', $check = '', $morecss = '')\n\t{\n\t\tglobal $conf, $langs, $extralanguages;\n\n\t\t$result = '';\n\n\t\t// List of extra languages\n\t\t$arrayoflangcode = array();\n\t\tif (!empty($conf->global->PDF_USE_ALSO_LANGUAGE_CODE)) {\n\t\t\t$arrayoflangcode[] = $conf->global->PDF_USE_ALSO_LANGUAGE_CODE;\n\t\t}\n\n\t\tif (is_array($arrayoflangcode) && count($arrayoflangcode)) {\n\t\t\tif (!is_object($extralanguages)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/extralanguages.class.php';\n\t\t\t\t$extralanguages = new ExtraLanguages($this->db);\n\t\t\t}\n\t\t\t$extralanguages->fetch_name_extralanguages('societe');\n\n\t\t\tif (!is_array($extralanguages->attributes[$object->element]) || empty($extralanguages->attributes[$object->element][$fieldname])) {\n\t\t\t\treturn ''; // No extralang field to show\n\t\t\t}\n\n\t\t\t$result .= '<!-- Widget for translation -->'.\"\\n\";\n\t\t\t$result .= '<div class=\"inline-block paddingleft image-'.$object->element.'-'.$fieldname.'\">';\n\t\t\t$s = img_picto($langs->trans(\"ShowOtherLanguages\"), 'language', '', false, 0, 0, '', 'fa-15 editfieldlang');\n\t\t\t$result .= $s;\n\t\t\t$result .= '</div>';\n\n\t\t\t$result .= '<div class=\"inline-block hidden field-'.$object->element.'-'.$fieldname.'\">';\n\n\t\t\t$resultforextrlang = '';\n\t\t\tforeach ($arrayoflangcode as $langcode) {\n\t\t\t\t$valuetoshow = GETPOSTISSET('field-'.$object->element.\"-\".$fieldname.\"-\".$langcode) ? GETPOST('field-'.$object->element.'-'.$fieldname.\"-\".$langcode, $check) : '';\n\t\t\t\tif (empty($valuetoshow)) {\n\t\t\t\t\t$object->fetchValuesForExtraLanguages();\n\t\t\t\t\t//var_dump($object->array_languages);\n\t\t\t\t\t$valuetoshow = $object->array_languages[$fieldname][$langcode];\n\t\t\t\t}\n\n\t\t\t\t$s = picto_from_langcode($langcode, 'class=\"pictoforlang paddingright\"');\n\t\t\t\t$resultforextrlang .= $s;\n\n\t\t\t\t// TODO Use the showInputField() method of ExtraLanguages object\n\t\t\t\tif ($typeofdata == 'textarea') {\n\t\t\t\t\t$resultforextrlang .= '<textarea name=\"field-'.$object->element.\"-\".$fieldname.\"-\".$langcode.'\" id=\"'.$fieldname.\"-\".$langcode.'\" class=\"'.$morecss.'\" rows=\"'.ROWS_2.'\" wrap=\"soft\">';\n\t\t\t\t\t$resultforextrlang .= $valuetoshow;\n\t\t\t\t\t$resultforextrlang .= '</textarea>';\n\t\t\t\t} else {\n\t\t\t\t\t$resultforextrlang .= '<input type=\"text\" class=\"inputfieldforlang '.($morecss ? ' '.$morecss : '').'\" name=\"field-'.$object->element.'-'.$fieldname.'-'.$langcode.'\" value=\"'.$valuetoshow.'\">';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$result .= $resultforextrlang;\n\n\t\t\t$result .= '</div>';\n\t\t\t$result .= '<script>$(\".image-'.$object->element.'-'.$fieldname.'\").click(function() { console.log(\"Toggle lang widget\"); jQuery(\".field-'.$object->element.'-'.$fieldname.'\").toggle(); });</script>';\n\t\t}\n\n\t\treturn $result;\n\t}\n\n\t/**\n\t * Output edit in place form\n\t *\n\t * @param\tobject\t$object\t\t\tObject\n\t * @param\tstring\t$value\t\t\tValue to show/edit\n\t * @param\tstring\t$htmlname\t\tDIV ID (field name)\n\t * @param\tint\t\t$condition\t\tCondition to edit\n\t * @param\tstring\t$inputType\t\tType of input ('string', 'numeric', 'datepicker' ('day' do not work, don't know why), 'textarea:rows:cols', 'ckeditor:dolibarr_zzz:width:height:?:1:rows:cols', 'select:loadmethod:savemethod:buttononly')\n\t * @param\tstring\t$editvalue\t\tWhen in edit mode, use this value as $value instead of value\n\t * @param\tobject\t$extObject\t\tExternal object\n\t * @param\tmixed\t$custommsg\t\tString or Array of custom messages : eg array('success' => 'MyMessage', 'error' => 'MyMessage')\n\t * @return\tstring   \t\t      \tHTML edit in place\n\t */\n\tprotected function editInPlace($object, $value, $htmlname, $condition, $inputType = 'textarea', $editvalue = null, $extObject = null, $custommsg = null)\n\t{\n\t\tglobal $conf;\n\n\t\t$out = '';\n\n\t\t// Check parameters\n\t\tif (preg_match('/^text/', $inputType)) {\n\t\t\t$value = dol_nl2br($value);\n\t\t} elseif (preg_match('/^numeric/', $inputType)) {\n\t\t\t$value = price($value);\n\t\t} elseif ($inputType == 'day' || $inputType == 'datepicker') {\n\t\t\t$value = dol_print_date($value, 'day');\n\t\t}\n\n\t\tif ($condition) {\n\t\t\t$element = false;\n\t\t\t$table_element = false;\n\t\t\t$fk_element\t\t= false;\n\t\t\t$loadmethod\t\t= false;\n\t\t\t$savemethod\t\t= false;\n\t\t\t$ext_element\t= false;\n\t\t\t$button_only\t= false;\n\t\t\t$inputOption = '';\n\n\t\t\tif (is_object($object)) {\n\t\t\t\t$element = $object->element;\n\t\t\t\t$table_element = $object->table_element;\n\t\t\t\t$fk_element = $object->id;\n\t\t\t}\n\n\t\t\tif (is_object($extObject)) {\n\t\t\t\t$ext_element = $extObject->element;\n\t\t\t}\n\n\t\t\tif (preg_match('/^(string|email|numeric)/', $inputType)) {\n\t\t\t\t$tmp = explode(':', $inputType);\n\t\t\t\t$inputType = $tmp[0];\n\t\t\t\tif (!empty($tmp[1])) {\n\t\t\t\t\t$inputOption = $tmp[1];\n\t\t\t\t}\n\t\t\t\tif (!empty($tmp[2])) {\n\t\t\t\t\t$savemethod = $tmp[2];\n\t\t\t\t}\n\t\t\t\t$out .= '<input id=\"width_'.$htmlname.'\" value=\"'.$inputOption.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t} elseif ((preg_match('/^day$/', $inputType)) || (preg_match('/^datepicker/', $inputType)) || (preg_match('/^datehourpicker/', $inputType))) {\n\t\t\t\t$tmp = explode(':', $inputType);\n\t\t\t\t$inputType = $tmp[0];\n\t\t\t\tif (!empty($tmp[1])) {\n\t\t\t\t\t$inputOption = $tmp[1];\n\t\t\t\t}\n\t\t\t\tif (!empty($tmp[2])) {\n\t\t\t\t\t$savemethod = $tmp[2];\n\t\t\t\t}\n\n\t\t\t\t$out .= '<input id=\"timestamp\" type=\"hidden\"/>'.\"\\n\"; // Use for timestamp format\n\t\t\t} elseif (preg_match('/^(select|autocomplete)/', $inputType)) {\n\t\t\t\t$tmp = explode(':', $inputType);\n\t\t\t\t$inputType = $tmp[0];\n\t\t\t\t$loadmethod = $tmp[1];\n\t\t\t\tif (!empty($tmp[2])) {\n\t\t\t\t\t$savemethod = $tmp[2];\n\t\t\t\t}\n\t\t\t\tif (!empty($tmp[3])) {\n\t\t\t\t\t$button_only = true;\n\t\t\t\t}\n\t\t\t} elseif (preg_match('/^textarea/', $inputType)) {\n\t\t\t\t$tmp = explode(':', $inputType);\n\t\t\t\t$inputType = $tmp[0];\n\t\t\t\t$rows = (empty($tmp[1]) ? '8' : $tmp[1]);\n\t\t\t\t$cols = (empty($tmp[2]) ? '80' : $tmp[2]);\n\t\t\t} elseif (preg_match('/^ckeditor/', $inputType)) {\n\t\t\t\t$tmp = explode(':', $inputType);\n\t\t\t\t$inputType = $tmp[0];\n\t\t\t\t$toolbar = $tmp[1];\n\t\t\t\tif (!empty($tmp[2])) {\n\t\t\t\t\t$width = $tmp[2];\n\t\t\t\t}\n\t\t\t\tif (!empty($tmp[3])) {\n\t\t\t\t\t$heigth = $tmp[3];\n\t\t\t\t}\n\t\t\t\tif (!empty($tmp[4])) {\n\t\t\t\t\t$savemethod = $tmp[4];\n\t\t\t\t}\n\n\t\t\t\tif (!empty($conf->fckeditor->enabled)) {\n\t\t\t\t\t$out .= '<input id=\"ckeditor_toolbar\" value=\"'.$toolbar.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\t$inputType = 'textarea';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$out .= '<input id=\"element_'.$htmlname.'\" value=\"'.$element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t$out .= '<input id=\"table_element_'.$htmlname.'\" value=\"'.$table_element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t$out .= '<input id=\"fk_element_'.$htmlname.'\" value=\"'.$fk_element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t$out .= '<input id=\"loadmethod_'.$htmlname.'\" value=\"'.$loadmethod.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\tif (!empty($savemethod)) {\n\t\t\t\t$out .= '<input id=\"savemethod_'.$htmlname.'\" value=\"'.$savemethod.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t}\n\t\t\tif (!empty($ext_element)) {\n\t\t\t\t$out .= '<input id=\"ext_element_'.$htmlname.'\" value=\"'.$ext_element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t}\n\t\t\tif (!empty($custommsg)) {\n\t\t\t\tif (is_array($custommsg)) {\n\t\t\t\t\tif (!empty($custommsg['success'])) {\n\t\t\t\t\t\t$out .= '<input id=\"successmsg_'.$htmlname.'\" value=\"'.$custommsg['success'].'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t\tif (!empty($custommsg['error'])) {\n\t\t\t\t\t\t$out .= '<input id=\"errormsg_'.$htmlname.'\" value=\"'.$custommsg['error'].'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$out .= '<input id=\"successmsg_'.$htmlname.'\" value=\"'.$custommsg.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($inputType == 'textarea') {\n\t\t\t\t$out .= '<input id=\"textarea_'.$htmlname.'_rows\" value=\"'.$rows.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t$out .= '<input id=\"textarea_'.$htmlname.'_cols\" value=\"'.$cols.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t}\n\t\t\t$out .= '<span id=\"viewval_'.$htmlname.'\" class=\"viewval_'.$inputType.($button_only ? ' inactive' : ' active').'\">'.$value.'</span>'.\"\\n\";\n\t\t\t$out .= '<span id=\"editval_'.$htmlname.'\" class=\"editval_'.$inputType.($button_only ? ' inactive' : ' active').' hideobject\">'.(!empty($editvalue) ? $editvalue : $value).'</span>'.\"\\n\";\n\t\t} else {\n\t\t\t$out = $value;\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tShow a text and picto with tooltip on text or picto.\n\t *  Can be called by an instancied $form->textwithtooltip or by a static call Form::textwithtooltip\n\t *\n\t *\t@param\tstring\t\t$text\t\t\t\tText to show\n\t *\t@param\tstring\t\t$htmltext\t\t\tHTML content of tooltip. Must be HTML/UTF8 encoded.\n\t *\t@param\tint\t\t\t$tooltipon\t\t\t1=tooltip on text, 2=tooltip on image, 3=tooltip sur les 2\n\t *\t@param\tint\t\t\t$direction\t\t\t-1=image is before, 0=no image, 1=image is after\n\t *\t@param\tstring\t\t$img\t\t\t\tHtml code for image (use img_xxx() function to get it)\n\t *\t@param\tstring\t\t$extracss\t\t\tAdd a CSS style to td tags\n\t *\t@param\tint\t\t\t$notabs\t\t\t\t0=Include table and tr tags, 1=Do not include table and tr tags, 2=use div, 3=use span\n\t *\t@param\tstring\t\t$incbefore\t\t\tInclude code before the text\n\t *\t@param\tint\t\t\t$noencodehtmltext\tDo not encode into html entity the htmltext\n\t *  @param  string      $tooltiptrigger\t\t''=Tooltip on hover, 'abc'=Tooltip on click (abc is a unique key)\n\t *  @param\tint\t\t\t$forcenowrap\t\tForce no wrap between text and picto (works with notabs=2 only)\n\t *\t@return\tstring\t\t\t\t\t\t\tCode html du tooltip (texte+picto)\n\t *\t@see\ttextwithpicto() Use thisfunction if you can.\n\t */\n\tpublic function textwithtooltip($text, $htmltext, $tooltipon = 1, $direction = 0, $img = '', $extracss = '', $notabs = 3, $incbefore = '', $noencodehtmltext = 0, $tooltiptrigger = '', $forcenowrap = 0)\n\t{\n\t\tif ($incbefore) {\n\t\t\t$text = $incbefore.$text;\n\t\t}\n\t\tif (!$htmltext) {\n\t\t\treturn $text;\n\t\t}\n\t\t$direction = (int) $direction;\t// For backward compatibility when $direction was set to '' instead of 0\n\n\t\t$tag = 'td';\n\t\tif ($notabs == 2) {\n\t\t\t$tag = 'div';\n\t\t}\n\t\tif ($notabs == 3) {\n\t\t\t$tag = 'span';\n\t\t}\n\t\t// Sanitize tooltip\n\t\t$htmltext = str_replace(array(\"\\r\", \"\\n\"), '', $htmltext);\n\n\t\t$extrastyle = '';\n\t\tif ($direction < 0) {\n\t\t\t$extracss = ($extracss ? $extracss.' ' : '').($notabs != 3 ? 'inline-block' : '');\n\t\t\t$extrastyle = 'padding: 0px; padding-left: 3px !important;';\n\t\t}\n\t\tif ($direction > 0) {\n\t\t\t$extracss = ($extracss ? $extracss.' ' : '').($notabs != 3 ? 'inline-block' : '');\n\t\t\t$extrastyle = 'padding: 0px; padding-right: 3px !important;';\n\t\t}\n\n\t\t$classfortooltip = 'classfortooltip';\n\n\t\t$s = '';\n\t\t$textfordialog = '';\n\n\t\tif ($tooltiptrigger == '') {\n\t\t\t$htmltext = str_replace('\"', '&quot;', $htmltext);\n\t\t} else {\n\t\t\t$classfortooltip = 'classfortooltiponclick';\n\t\t\t$textfordialog .= '<div style=\"display: none;\" id=\"idfortooltiponclick_'.$tooltiptrigger.'\" class=\"classfortooltiponclicktext\">'.$htmltext.'</div>';\n\t\t}\n\t\tif ($tooltipon == 2 || $tooltipon == 3) {\n\t\t\t$paramfortooltipimg = ' class=\"'.$classfortooltip.($notabs != 3 ? ' inline-block' : '').($extracss ? ' '.$extracss : '').'\" style=\"padding: 0px;'.($extrastyle ? ' '.$extrastyle : '').'\"';\n\t\t\tif ($tooltiptrigger == '') {\n\t\t\t\t$paramfortooltipimg .= ' title=\"'.($noencodehtmltext ? $htmltext : dol_escape_htmltag($htmltext, 1)).'\"'; // Attribut to put on img tag to store tooltip\n\t\t\t} else {\n\t\t\t\t$paramfortooltipimg .= ' dolid=\"'.$tooltiptrigger.'\"';\n\t\t\t}\n\t\t} else {\n\t\t\t$paramfortooltipimg = ($extracss ? ' class=\"'.$extracss.'\"' : '').($extrastyle ? ' style=\"'.$extrastyle.'\"' : ''); // Attribut to put on td text tag\n\t\t}\n\t\tif ($tooltipon == 1 || $tooltipon == 3) {\n\t\t\t$paramfortooltiptd = ' class=\"'.($tooltipon == 3 ? 'cursorpointer ' : '').$classfortooltip.' inline-block'.($extracss ? ' '.$extracss : '').'\" style=\"padding: 0px;'.($extrastyle ? ' '.$extrastyle : '').'\" ';\n\t\t\tif ($tooltiptrigger == '') {\n\t\t\t\t$paramfortooltiptd .= ' title=\"'.($noencodehtmltext ? $htmltext : dol_escape_htmltag($htmltext, 1)).'\"'; // Attribut to put on td tag to store tooltip\n\t\t\t} else {\n\t\t\t\t$paramfortooltiptd .= ' dolid=\"'.$tooltiptrigger.'\"';\n\t\t\t}\n\t\t} else {\n\t\t\t$paramfortooltiptd = ($extracss ? ' class=\"'.$extracss.'\"' : '').($extrastyle ? ' style=\"'.$extrastyle.'\"' : ''); // Attribut to put on td text tag\n\t\t}\n\t\tif (empty($notabs)) {\n\t\t\t$s .= '<table class=\"nobordernopadding\"><tr style=\"height: auto;\">';\n\t\t} elseif ($notabs == 2) {\n\t\t\t$s .= '<div class=\"inline-block'.($forcenowrap ? ' nowrap' : '').'\">';\n\t\t}\n\t\t// Define value if value is before\n\t\tif ($direction < 0) {\n\t\t\t$s .= '<'.$tag.$paramfortooltipimg;\n\t\t\tif ($tag == 'td') {\n\t\t\t\t$s .= ' class=valigntop\" width=\"14\"';\n\t\t\t}\n\t\t\t$s .= '>'.$textfordialog.$img.'</'.$tag.'>';\n\t\t}\n\t\t// Use another method to help avoid having a space in value in order to use this value with jquery\n\t\t// Define label\n\t\tif ((string) $text != '') {\n\t\t\t$s .= '<'.$tag.$paramfortooltiptd.'>'.$text.'</'.$tag.'>';\n\t\t}\n\t\t// Define value if value is after\n\t\tif ($direction > 0) {\n\t\t\t$s .= '<'.$tag.$paramfortooltipimg;\n\t\t\tif ($tag == 'td') {\n\t\t\t\t$s .= ' class=\"valignmiddle\" width=\"14\"';\n\t\t\t}\n\t\t\t$s .= '>'.$textfordialog.$img.'</'.$tag.'>';\n\t\t}\n\t\tif (empty($notabs)) {\n\t\t\t$s .= '</tr></table>';\n\t\t} elseif ($notabs == 2) {\n\t\t\t$s .= '</div>';\n\t\t}\n\n\t\treturn $s;\n\t}\n\n\t/**\n\t *\tShow a text with a picto and a tooltip on picto\n\t *\n\t *\t@param\tstring\t$text\t\t\t\tText to show\n\t *\t@param  string\t$htmltext\t     \tContent of tooltip\n\t *\t@param\tint\t\t$direction\t\t\t1=Icon is after text, -1=Icon is before text, 0=no icon\n\t * \t@param\tstring\t$type\t\t\t\tType of picto ('info', 'infoclickable', 'help', 'helpclickable', 'warning', 'superadmin', 'mypicto@mymodule', ...) or image filepath or 'none'\n\t *  @param  string\t$extracss           Add a CSS style to td, div or span tag\n\t *  @param  int\t\t$noencodehtmltext   Do not encode into html entity the htmltext\n\t *  @param\tint\t\t$notabs\t\t\t\t0=Include table and tr tags, 1=Do not include table and tr tags, 2=use div, 3=use span\n\t *  @param  string  $tooltiptrigger     ''=Tooltip on hover, 'abc'=Tooltip on click (abc is a unique key, clickable link is on image or on link if param $type='none' or on both if $type='xxxclickable')\n\t *  @param\tint\t\t$forcenowrap\t\tForce no wrap between text and picto (works with notabs=2 only)\n\t * \t@return\tstring\t\t\t\t\t\tHTML code of text, picto, tooltip\n\t */\n\tpublic function textwithpicto($text, $htmltext, $direction = 1, $type = 'help', $extracss = '', $noencodehtmltext = 0, $notabs = 3, $tooltiptrigger = '', $forcenowrap = 0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$alt = '';\n\t\tif ($tooltiptrigger) {\n\t\t\t$alt = $langs->transnoentitiesnoconv(\"ClickToShowHelp\");\n\t\t}\n\n\t\t//For backwards compatibility\n\t\tif ($type == '0') {\n\t\t\t$type = 'info';\n\t\t} elseif ($type == '1') {\n\t\t\t$type = 'help';\n\t\t}\n\n\t\t// If info or help with no javascript, show only text\n\t\tif (empty($conf->use_javascript_ajax)) {\n\t\t\tif ($type == 'info' || $type == 'infoclickable' || $type == 'help' || $type == 'helpclickable') {\n\t\t\t\treturn $text;\n\t\t\t} else {\n\t\t\t\t$alt = $htmltext;\n\t\t\t\t$htmltext = '';\n\t\t\t}\n\t\t}\n\n\t\t// If info or help with smartphone, show only text (tooltip hover can't works)\n\t\tif (!empty($conf->dol_no_mouse_hover) && empty($tooltiptrigger)) {\n\t\t\tif ($type == 'info' || $type == 'infoclickable' || $type == 'help' || $type == 'helpclickable') {\n\t\t\t\treturn $text;\n\t\t\t}\n\t\t}\n\t\t// If info or help with smartphone, show only text (tooltip on click does not works with dialog on smaprtphone)\n\t\t//if (! empty($conf->dol_no_mouse_hover) && ! empty($tooltiptrigger))\n\t\t//{\n\t\t//if ($type == 'info' || $type == 'help') return '<a href=\"'..'\">'.$text.''</a>';\n\t\t//}\n\n\t\t$img = '';\n\t\tif ($type == 'info') {\n\t\t\t$img = img_help(0, $alt);\n\t\t} elseif ($type == 'help') {\n\t\t\t$img = img_help(($tooltiptrigger != '' ? 2 : 1), $alt);\n\t\t} elseif ($type == 'helpclickable') {\n\t\t\t$img = img_help(($tooltiptrigger != '' ? 2 : 1), $alt);\n\t\t} elseif ($type == 'superadmin') {\n\t\t\t$img = img_picto($alt, 'redstar');\n\t\t} elseif ($type == 'admin') {\n\t\t\t$img = img_picto($alt, 'star');\n\t\t} elseif ($type == 'warning') {\n\t\t\t$img = img_warning($alt);\n\t\t} elseif ($type != 'none') {\n\t\t\t$img = img_picto($alt, $type); // $type can be an image path\n\t\t}\n\n\t\treturn $this->textwithtooltip($text, $htmltext, ((($tooltiptrigger && !$img) || strpos($type, 'clickable')) ? 3 : 2), $direction, $img, $extracss, $notabs, '', $noencodehtmltext, $tooltiptrigger, $forcenowrap);\n\t}\n\n\t/**\n\t * Generate select HTML to choose massaction\n\t *\n\t * @param\tstring\t$selected\t\tValue auto selected when at least one record is selected. Not a preselected value. Use '0' by default.\n\t * @param\tarray\t$arrayofaction\tarray('code'=>'label', ...). The code is the key stored into the GETPOST('massaction') when submitting action.\n\t * @param   int     $alwaysvisible  1=select button always visible\n\t * @param   string  $name     \t\tName for massaction\n\t * @param   string  $cssclass \t\tCSS class used to check for select\n\t * @return\tstring|void\t\t\t\tSelect list\n\t */\n\tpublic function selectMassAction($selected, $arrayofaction, $alwaysvisible = 0, $name = 'massaction', $cssclass = 'checkforselect')\n\t{\n\t\tglobal $conf, $langs, $hookmanager;\n\n\n\t\t$disabled = 0;\n\t\t$ret = '<div class=\"centpercent center\">';\n\t\t$ret .= '<select class=\"flat'.(empty($conf->use_javascript_ajax) ? '' : ' hideobject').' '.$name.' '.$name.'select valignmiddle alignstart\" id=\"'.$name.'\" name=\"'.$name.'\"'.($disabled ? ' disabled=\"disabled\"' : '').'>';\n\n\t\t// Complete list with data from external modules. THe module can use $_SERVER['PHP_SELF'] to know on which page we are, or use the $parameters['currentcontext'] completed by executeHooks.\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('addMoreMassActions', $parameters); // Note that $action and $object may have been modified by hook\n\t\t// check if there is a mass action\n\t\tif (count($arrayofaction) == 0 && empty($hookmanager->resPrint)) {\n\t\t\treturn;\n\t\t}\n\t\tif (empty($reshook)) {\n\t\t\t$ret .= '<option value=\"0\"'.($disabled ? ' disabled=\"disabled\"' : '').'>-- '.$langs->trans(\"SelectAction\").' --</option>';\n\t\t\tforeach ($arrayofaction as $code => $label) {\n\t\t\t\t$ret .= '<option value=\"'.$code.'\"'.($disabled ? ' disabled=\"disabled\"' : '').' data-html=\"'.dol_escape_htmltag($label).'\">'.$label.'</option>';\n\t\t\t}\n\t\t}\n\t\t$ret .= $hookmanager->resPrint;\n\n\t\t$ret .= '</select>';\n\n\t\tif (empty($conf->dol_optimize_smallscreen)) {\n\t\t\t$ret .= ajax_combobox('.'.$name.'select');\n\t\t}\n\n\t\t// Warning: if you set submit button to disabled, post using 'Enter' will no more work if there is no another input submit. So we add a hidden button\n\t\t$ret .= '<input type=\"submit\" name=\"confirmmassactioninvisible\" style=\"display: none\" tabindex=\"-1\">'; // Hidden button BEFORE so it is the one used when we submit with ENTER.\n\t\t$ret .= '<input type=\"submit\" disabled name=\"confirmmassaction\"'.(empty($conf->use_javascript_ajax) ? '' : ' style=\"display: none\"').' class=\"button small'.(empty($conf->use_javascript_ajax) ? '' : ' hideobject').' '.$name.' '.$name.'confirmed\" value=\"'.dol_escape_htmltag($langs->trans(\"Confirm\")).'\">';\n\t\t$ret .= '</div>';\n\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t$ret .= '<!-- JS CODE TO ENABLE mass action select -->\n    \t\t<script>\n                        function initCheckForSelect(mode, name, cssclass)\t/* mode is 0 during init of page or click all, 1 when we click on 1 checkboxi, \"name\" refers to the class of the massaction button, \"cssclass\" to the class of the checkfor select boxes */\n        \t\t{\n        \t\t\tatleastoneselected=0;\n                                jQuery(\".\"+cssclass).each(function( index ) {\n    \t  \t\t\t\t/* console.log( index + \": \" + $( this ).text() ); */\n    \t  \t\t\t\tif ($(this).is(\\':checked\\')) atleastoneselected++;\n    \t  \t\t\t});\n\n\t\t\t\t\tconsole.log(\"initCheckForSelect mode=\"+mode+\" name=\"+name+\" cssclass=\"+cssclass+\" atleastoneselected=\"+atleastoneselected);\n\n    \t  \t\t\tif (atleastoneselected || '.$alwaysvisible.')\n    \t  \t\t\t{\n                                    jQuery(\".\"+name).show();\n        \t\t\t    '.($selected ? 'if (atleastoneselected) { jQuery(\".\"+name+\"select\").val(\"'.$selected.'\").trigger(\\'change\\'); jQuery(\".\"+name+\"confirmed\").prop(\\'disabled\\', false); }' : '').'\n        \t\t\t    '.($selected ? 'if (! atleastoneselected) { jQuery(\".\"+name+\"select\").val(\"0\").trigger(\\'change\\'); jQuery(\".\"+name+\"confirmed\").prop(\\'disabled\\', true); } ' : '').'\n    \t  \t\t\t}\n    \t  \t\t\telse\n    \t  \t\t\t{\n                                    jQuery(\".\"+name).hide();\n                                    jQuery(\".\"+name+\"other\").hide();\n    \t            }\n        \t\t}\n\n        \tjQuery(document).ready(function () {\n                    initCheckForSelect(0, \"' . $name.'\", \"'.$cssclass.'\");\n                    jQuery(\".' . $cssclass.'\").click(function() {\n                        initCheckForSelect(1, \"'.$name.'\", \"'.$cssclass.'\");\n                    });\n                        jQuery(\".' . $name.'select\").change(function() {\n        \t\t\tvar massaction = $( this ).val();\n        \t\t\tvar urlform = $( this ).closest(\"form\").attr(\"action\").replace(\"#show_files\",\"\");\n        \t\t\tif (massaction == \"builddoc\")\n                    {\n                        urlform = urlform + \"#show_files\";\n    \t            }\n        \t\t\t$( this ).closest(\"form\").attr(\"action\", urlform);\n                    console.log(\"we select a mass action name='.$name.' massaction=\"+massaction+\" - \"+urlform);\n        \t        /* Warning: if you set submit button to disabled, post using Enter will no more work if there is no other button */\n        \t\t\tif ($(this).val() != \\'0\\')\n    \t  \t\t\t{\n                                        jQuery(\".' . $name.'confirmed\").prop(\\'disabled\\', false);\n\t\t\t\t\t\t\t\t\t\tjQuery(\".' . $name.'other\").hide();\t/* To disable if another div was open */\n                                        jQuery(\".' . $name.'\"+massaction).show();\n    \t  \t\t\t}\n    \t  \t\t\telse\n    \t  \t\t\t{\n                                        jQuery(\".' . $name.'confirmed\").prop(\\'disabled\\', true);\n\t\t\t\t\t\t\t\t\t\tjQuery(\".' . $name.'other\").hide();\t/* To disable any div open */\n    \t  \t\t\t}\n    \t        });\n        \t});\n    \t\t</script>\n        \t';\n\t\t}\n\n\t\treturn $ret;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return combo list of activated countries, into language of user\n\t *\n\t *  @param\tstring\t$selected       \t\tId or Code or Label of preselected country\n\t *  @param  string\t$htmlname       \t\tName of html select object\n\t *  @param  string\t$htmloption     \t\tMore html options on select object\n\t *  @param\tinteger\t$maxlength\t\t\t\tMax length for labels (0=no limit)\n\t *  @param\tstring\t$morecss\t\t\t\tMore css class\n\t *  @param\tstring\t$usecodeaskey\t\t\t''=Use id as key (default), 'code3'=Use code on 3 alpha as key, 'code2\"=Use code on 2 alpha as key\n\t *  @param\tint\t\t$showempty\t\t\t\tShow empty choice\n\t *  @param\tint\t\t$disablefavorites\t\t1=Disable favorites,\n\t *  @param\tint\t\t$addspecialentries\t\t1=Add dedicated entries for group of countries (like 'European Economic Community', ...)\n\t *  @param\tarray\t$exclude_country_code\tArray of country code (iso2) to exclude\n\t *  @param\tint\t\t$hideflags\t\t\t\tHide flags\n\t *  @return string           \t\t\t\tHTML string with select\n\t */\n\tpublic function select_country($selected = '', $htmlname = 'country_id', $htmloption = '', $maxlength = 0, $morecss = 'minwidth300', $usecodeaskey = '', $showempty = 1, $disablefavorites = 0, $addspecialentries = 0, $exclude_country_code = array(), $hideflags = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs, $mysoc;\n\n\t\t$langs->load(\"dict\");\n\n\t\t$out = '';\n\t\t$countryArray = array();\n\t\t$favorite = array();\n\t\t$label = array();\n\t\t$atleastonefavorite = 0;\n\n\t\t$sql = \"SELECT rowid, code as code_iso, code_iso as code_iso3, label, favorite, eec\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"c_country\";\n\t\t$sql .= \" WHERE active > 0\";\n\t\t//$sql.= \" ORDER BY code ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_country\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$out .= '<select id=\"select'.$htmlname.'\" class=\"flat maxwidth200onsmartphone selectcountry'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\" '.$htmloption.'>';\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t\t$countryArray[$i]['rowid'] = $obj->rowid;\n\t\t\t\t\t$countryArray[$i]['code_iso'] = $obj->code_iso;\n\t\t\t\t\t$countryArray[$i]['code_iso3'] \t= $obj->code_iso3;\n\t\t\t\t\t$countryArray[$i]['label'] = ($obj->code_iso && $langs->transnoentitiesnoconv(\"Country\".$obj->code_iso) != \"Country\".$obj->code_iso ? $langs->transnoentitiesnoconv(\"Country\".$obj->code_iso) : ($obj->label != '-' ? $obj->label : ''));\n\t\t\t\t\t$countryArray[$i]['favorite'] = $obj->favorite;\n\t\t\t\t\t$countryArray[$i]['eec'] = $obj->eec;\n\t\t\t\t\t$favorite[$i] = $obj->favorite;\n\t\t\t\t\t$label[$i] = dol_string_unaccent($countryArray[$i]['label']);\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\n\t\t\t\tif (empty($disablefavorites)) {\n\t\t\t\t\tarray_multisort($favorite, SORT_DESC, $label, SORT_ASC, $countryArray);\n\t\t\t\t} else {\n\t\t\t\t\t$countryArray = dol_sort_array($countryArray, 'label');\n\t\t\t\t}\n\n\t\t\t\tif ($showempty) {\n\t\t\t\t\t$out .= '<option value=\"\">&nbsp;</option>'.\"\\n\";\n\t\t\t\t}\n\n\t\t\t\tif ($addspecialentries) {\t// Add dedicated entries for groups of countries\n\t\t\t\t\t//if ($showempty) $out.= '<option value=\"\" disabled class=\"selectoptiondisabledwhite\">--------------</option>';\n\t\t\t\t\t$out .= '<option value=\"special_allnotme\"'.($selected == 'special_allnotme' ? ' selected' : '').'>'.$langs->trans(\"CountriesExceptMe\", $langs->transnoentitiesnoconv(\"Country\".$mysoc->country_code)).'</option>';\n\t\t\t\t\t$out .= '<option value=\"special_eec\"'.($selected == 'special_eec' ? ' selected' : '').'>'.$langs->trans(\"CountriesInEEC\").'</option>';\n\t\t\t\t\tif ($mysoc->isInEEC()) {\n\t\t\t\t\t\t$out .= '<option value=\"special_eecnotme\"'.($selected == 'special_eecnotme' ? ' selected' : '').'>'.$langs->trans(\"CountriesInEECExceptMe\", $langs->transnoentitiesnoconv(\"Country\".$mysoc->country_code)).'</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= '<option value=\"special_noteec\"'.($selected == 'special_noteec' ? ' selected' : '').'>'.$langs->trans(\"CountriesNotInEEC\").'</option>';\n\t\t\t\t\t$out .= '<option value=\"\" disabled class=\"selectoptiondisabledwhite\">------------</option>';\n\t\t\t\t}\n\n\t\t\t\tforeach ($countryArray as $row) {\n\t\t\t\t\t//if (empty($showempty) && empty($row['rowid'])) continue;\n\t\t\t\t\tif (empty($row['rowid'])) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (is_array($exclude_country_code) && count($exclude_country_code) && in_array($row['code_iso'], $exclude_country_code)) {\n\t\t\t\t\t\tcontinue; // exclude some countries\n\t\t\t\t\t}\n\n\t\t\t\t\tif (empty($disablefavorites) && $row['favorite'] && $row['code_iso']) {\n\t\t\t\t\t\t$atleastonefavorite++;\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($row['favorite']) && $atleastonefavorite) {\n\t\t\t\t\t\t$atleastonefavorite = 0;\n\t\t\t\t\t\t$out .= '<option value=\"\" disabled class=\"selectoptiondisabledwhite\">------------</option>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$labeltoshow = '';\n\t\t\t\t\tif ($row['label']) {\n\t\t\t\t\t\t$labeltoshow .= dol_trunc($row['label'], $maxlength, 'middle');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$labeltoshow .= '&nbsp;';\n\t\t\t\t\t}\n\t\t\t\t\tif ($row['code_iso']) {\n\t\t\t\t\t\t$labeltoshow .= ' <span class=\"opacitymedium\">('.$row['code_iso'].')</span>';\n\t\t\t\t\t\tif (empty($hideflags)) {\n\t\t\t\t\t\t\t$tmpflag = picto_from_langcode($row['code_iso'], 'class=\"saturatemedium paddingrightonly\"', 1);\n\t\t\t\t\t\t\t$labeltoshow = $tmpflag.' '.$labeltoshow;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($selected && $selected != '-1' && ($selected == $row['rowid'] || $selected == $row['code_iso'] || $selected == $row['code_iso3'] || $selected == $row['label'])) {\n\t\t\t\t\t\t$out .= '<option value=\"'.($usecodeaskey ? ($usecodeaskey == 'code2' ? $row['code_iso'] : $row['code_iso3']) : $row['rowid']).'\" selected data-html=\"'.dol_escape_htmltag($labeltoshow).'\" data-eec=\"'.((int) $row['eec']).'\">';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$out .= '<option value=\"'.($usecodeaskey ? ($usecodeaskey == 'code2' ? $row['code_iso'] : $row['code_iso3']) : $row['rowid']).'\" data-html=\"'.dol_escape_htmltag($labeltoshow).'\" data-eec=\"'.((int) $row['eec']).'\">';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= $labeltoshow;\n\t\t\t\t\t$out .= '</option>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '</select>';\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\t// Make select dynamic\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t$out .= ajax_combobox('select'.$htmlname, array(), 0, 0, 'resolve');\n\n\t\treturn $out;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return select list of incoterms\n\t *\n\t *  @param\tstring\t$selected       \t\tId or Code of preselected incoterm\n\t *  @param\tstring\t$location_incoterms     Value of input location\n\t *  @param\tstring\t$page       \t\t\tDefined the form action\n\t *  @param  string\t$htmlname       \t\tName of html select object\n\t *  @param  string\t$htmloption     \t\tOptions html on select object\n\t * \t@param\tint\t\t$forcecombo\t\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t *  @param\tarray\t$events\t\t\t\t\tEvent options to run on change. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @return string           \t\t\t\tHTML string with select and input\n\t */\n\tpublic function select_incoterms($selected = '', $location_incoterms = '', $page = '', $htmlname = 'incoterm_id', $htmloption = '', $forcecombo = 1, $events = array())\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\n\t\t$langs->load(\"dict\");\n\n\t\t$out = '';\n\t\t$moreattrib = '';\n\t\t$incotermArray = array();\n\n\t\t$sql = \"SELECT rowid, code\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"c_incoterms\";\n\t\t$sql .= \" WHERE active > 0\";\n\t\t$sql .= \" ORDER BY code ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_incoterm\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\tif ($conf->use_javascript_ajax && !$forcecombo) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events);\n\t\t\t}\n\n\t\t\tif (!empty($page)) {\n\t\t\t\t$out .= '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\t\t$out .= '<input type=\"hidden\" name=\"action\" value=\"set_incoterms\">';\n\t\t\t\t$out .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t}\n\n\t\t\t$out .= '<select id=\"'.$htmlname.'\" class=\"flat selectincoterm width75\" name=\"'.$htmlname.'\" '.$htmloption.'>';\n\t\t\t$out .= '<option value=\"0\">&nbsp;</option>';\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\t$foundselected = false;\n\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$incotermArray[$i]['rowid'] = $obj->rowid;\n\t\t\t\t\t$incotermArray[$i]['code'] = $obj->code;\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\n\t\t\t\tforeach ($incotermArray as $row) {\n\t\t\t\t\tif ($selected && ($selected == $row['rowid'] || $selected == $row['code'])) {\n\t\t\t\t\t\t$out .= '<option value=\"'.$row['rowid'].'\" selected>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$out .= '<option value=\"'.$row['rowid'].'\">';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($row['code']) {\n\t\t\t\t\t\t$out .= $row['code'];\n\t\t\t\t\t}\n\n\t\t\t\t\t$out .= '</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '</select>';\n\n\t\t\tif ($conf->use_javascript_ajax && empty($disableautocomplete)) {\n\t\t\t\t$out .= ajax_multiautocompleter('location_incoterms', '', DOL_URL_ROOT.'/core/ajax/locationincoterms.php').\"\\n\";\n\t\t\t\t$moreattrib .= ' autocomplete=\"off\"';\n\t\t\t}\n\t\t\t$out .= '<input id=\"location_incoterms\" class=\"maxwidthonsmartphone type=\"text\" name=\"location_incoterms\" value=\"'.$location_incoterms.'\">'.\"\\n\";\n\n\t\t\tif (!empty($page)) {\n\t\t\t\t$out .= '<input type=\"submit\" class=\"button valignmiddle smallpaddingimp nomargintop nomarginbottom\" value=\"'.$langs->trans(\"Modify\").'\"></form>';\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn list of types of lines (product or service)\n\t * \tExample: 0=product, 1=service, 9=other (for external module)\n\t *\n\t *\t@param  string\t$selected       Preselected type\n\t *\t@param  string\t$htmlname       Name of field in html form\n\t * \t@param\tint\t\t$showempty\t\tAdd an empty field\n\t * \t@param\tint\t\t$hidetext\t\tDo not show label 'Type' before combo box (used only if there is at least 2 choices to select)\n\t * \t@param\tinteger\t$forceall\t\t1=Force to show products and services in combo list, whatever are activated modules, 0=No force, 2=Force to show only Products, 3=Force to show only services, -1=Force none (and set hidden field to 'service')\n\t *  @return\tvoid\n\t */\n\tpublic function select_type_of_lines($selected = '', $htmlname = 'type', $showempty = 0, $hidetext = 0, $forceall = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\n\t\t// If product & services are enabled or both disabled.\n\t\tif ($forceall == 1 || (empty($forceall) && !empty($conf->product->enabled) && !empty($conf->service->enabled))\n\t\t\t|| (empty($forceall) && empty($conf->product->enabled) && empty($conf->service->enabled))) {\n\t\t\tif (empty($hidetext)) {\n\t\t\t\tprint $langs->trans(\"Type\").': ';\n\t\t\t}\n\t\t\tprint '<select class=\"flat\" id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t\tif ($showempty) {\n\t\t\t\tprint '<option value=\"-1\"';\n\t\t\t\tif ($selected == -1) {\n\t\t\t\t\tprint ' selected';\n\t\t\t\t}\n\t\t\t\tprint '>&nbsp;</option>';\n\t\t\t}\n\n\t\t\tprint '<option value=\"0\"';\n\t\t\tif (0 == $selected || ($selected == -1 && getDolGlobalString('MAIN_FREE_PRODUCT_CHECKED_BY_DEFAULT') == 'product')) {\n\t\t\t\tprint ' selected';\n\t\t\t}\n\t\t\tprint '>'.$langs->trans(\"Product\");\n\n\t\t\tprint '<option value=\"1\"';\n\t\t\tif (1 == $selected || ($selected == -1 && getDolGlobalString('MAIN_FREE_PRODUCT_CHECKED_BY_DEFAULT') == 'service')) {\n\t\t\t\tprint ' selected';\n\t\t\t}\n\t\t\tprint '>'.$langs->trans(\"Service\");\n\n\t\t\tprint '</select>';\n\t\t\tprint ajax_combobox('select_'.$htmlname);\n\t\t\t//if ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t\t}\n\t\tif ((empty($forceall) && empty($conf->product->enabled) && !empty($conf->service->enabled)) || $forceall == 3) {\n\t\t\tprint $langs->trans(\"Service\");\n\t\t\tprint '<input type=\"hidden\" name=\"'.$htmlname.'\" value=\"1\">';\n\t\t}\n\t\tif ((empty($forceall) && !empty($conf->product->enabled) && empty($conf->service->enabled)) || $forceall == 2) {\n\t\t\tprint $langs->trans(\"Product\");\n\t\t\tprint '<input type=\"hidden\" name=\"'.$htmlname.'\" value=\"0\">';\n\t\t}\n\t\tif ($forceall < 0) {\t// This should happened only for contracts when both predefined product and service are disabled.\n\t\t\tprint '<input type=\"hidden\" name=\"'.$htmlname.'\" value=\"1\">'; // By default we set on service for contract. If CONTRACT_SUPPORT_PRODUCTS is set, forceall should be 1 not -1\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tLoad into cache cache_types_fees, array of types of fees\n\t *\n\t *\t@return     int             Nb of lines loaded, <0 if KO\n\t */\n\tpublic function load_cache_types_fees()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_types_fees);\n\t\tif ($num > 0) {\n\t\t\treturn 0; // Cache already loaded\n\t\t}\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$langs->load(\"trips\");\n\n\t\t$sql = \"SELECT c.code, c.label\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"c_type_fees as c\";\n\t\t$sql .= \" WHERE active > 0\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label = ($obj->code != $langs->trans($obj->code) ? $langs->trans($obj->code) : $langs->trans($obj->label));\n\t\t\t\t$this->cache_types_fees[$obj->code] = $label;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tasort($this->cache_types_fees);\n\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn list of types of notes\n\t *\n\t *\t@param\tstring\t\t$selected\t\tPreselected type\n\t *\t@param  string\t\t$htmlname\t\tName of field in form\n\t * \t@param\tint\t\t\t$showempty\t\tAdd an empty field\n\t * \t@return\tvoid\n\t */\n\tpublic function select_type_fees($selected = '', $htmlname = 'type', $showempty = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $user, $langs;\n\n\t\tdol_syslog(__METHOD__.\" selected=\".$selected.\", htmlname=\".$htmlname, LOG_DEBUG);\n\n\t\t$this->load_cache_types_fees();\n\n\t\tprint '<select id=\"select_'.$htmlname.'\" class=\"flat\" name=\"'.$htmlname.'\">';\n\t\tif ($showempty) {\n\t\t\tprint '<option value=\"-1\"';\n\t\t\tif ($selected == -1) {\n\t\t\t\tprint ' selected';\n\t\t\t}\n\t\t\tprint '>&nbsp;</option>';\n\t\t}\n\n\t\tforeach ($this->cache_types_fees as $key => $value) {\n\t\t\tprint '<option value=\"'.$key.'\"';\n\t\t\tif ($key == $selected) {\n\t\t\t\tprint ' selected';\n\t\t\t}\n\t\t\tprint '>';\n\t\t\tprint $value;\n\t\t\tprint '</option>';\n\t\t}\n\n\t\tprint '</select>';\n\t\tif ($user->admin) {\n\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Output html form to select a third party\n\t *\n\t *\t@param\tstring\t$selected       \t\tPreselected type\n\t *\t@param  string\t$htmlname       \t\tName of field in form\n\t *  @param  string\t$filter         \t\tOptional filters criteras. WARNING: To avoid SQL injection, only few chars [.a-z0-9 =<>] are allowed here (example: 's.rowid <> x', 's.client IN (1,3)')\n\t *\t@param\tstring\t$showempty\t\t\t\tAdd an empty field (Can be '1' or text key to use on empty line like 'SelectThirdParty')\n\t * \t@param\tint\t\t$showtype\t\t\t\tShow third party type in combolist (customer, prospect or supplier)\n\t * \t@param\tint\t\t$forcecombo\t\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t *  @param\tarray\t$events\t\t\t\t\tAjax event options to run on change. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *\t@param\tint\t\t$limit\t\t\t\t\tMaximum number of elements\n\t *  @param\tstring\t$morecss\t\t\t\tAdd more css styles to the SELECT component\n\t *\t@param  string\t$moreparam      \t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *\t@param\tstring\t$selected_input_value\tValue of preselected input text (for use with ajax)\n\t *  @param\tint\t\t$hidelabel\t\t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n\t *  @param\tarray\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t * \t@param  bool\t$multiple\t\t\t\tadd [] in the name of element and add 'multiple' attribut (not working with ajax_autocompleter)\n\t *  @param\tarray\t$excludeids\t\t\t\tExclude IDs from the select combo\n\t * \t@return\tstring\t\t\t\t\t\t\tHTML string with select box for thirdparty.\n\t */\n\tpublic function select_company($selected = '', $htmlname = 'socid', $filter = '', $showempty = '', $showtype = 0, $forcecombo = 0, $events = array(), $limit = 0, $morecss = 'minwidth100', $moreparam = '', $selected_input_value = '', $hidelabel = 1, $ajaxoptions = array(), $multiple = false, $excludeids = array())\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $user, $langs;\n\n\t\t$out = '';\n\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->COMPANY_USE_SEARCH_TO_SELECT) && !$forcecombo) {\n\t\t\tif (is_null($ajaxoptions)) {\n\t\t\t\t$ajaxoptions = array();\n\t\t\t}\n\n\t\t\trequire_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\n\t\t\t// No immediate load of all database\n\t\t\t$placeholder = '';\n\t\t\tif ($selected && empty($selected_input_value)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\n\t\t\t\t$societetmp = new Societe($this->db);\n\t\t\t\t$societetmp->fetch($selected);\n\t\t\t\t$selected_input_value = $societetmp->name;\n\t\t\t\tunset($societetmp);\n\t\t\t}\n\n\t\t\t// mode 1\n\t\t\t$urloption = 'htmlname='.urlencode($htmlname).'&outjson=1&filter='.urlencode($filter).(empty($excludeids) ? '' : '&excludeids='.join(',', $excludeids)).($showtype ? '&showtype='.urlencode($showtype) : '');\n\t\t\t$out .= ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/societe/ajax/company.php', $urloption, $conf->global->COMPANY_USE_SEARCH_TO_SELECT, 0, $ajaxoptions);\n\n\t\t\t$out .= '<style type=\"text/css\">.ui-autocomplete { z-index: 1003; }</style>';\n\t\t\tif (empty($hidelabel)) {\n\t\t\t\tprint $langs->trans(\"RefOrLabel\").' : ';\n\t\t\t} elseif ($hidelabel > 1) {\n\t\t\t\t$placeholder = $langs->trans(\"RefOrLabel\");\n\t\t\t\tif ($hidelabel == 2) {\n\t\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '<input type=\"text\" class=\"'.$morecss.'\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.($placeholder ? ' placeholder=\"'.dol_escape_htmltag($placeholder).'\"' : '').' '.(!empty($conf->global->THIRDPARTY_SEARCH_AUTOFOCUS) ? 'autofocus' : '').' />';\n\t\t\tif ($hidelabel == 3) {\n\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t}\n\t\t} else {\n\t\t\t// Immediate load of all database\n\t\t\t$out .= $this->select_thirdparty_list($selected, $htmlname, $filter, $showempty, $showtype, $forcecombo, $events, '', 0, $limit, $morecss, $moreparam, $multiple, $excludeids);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Output html form to select a third party.\n\t *  Note, you must use the select_company to get the component to select a third party. This function must only be called by select_company.\n\t *\n\t *\t@param\tstring\t$selected       Preselected type\n\t *\t@param  string\t$htmlname       Name of field in form\n\t *  @param  string\t$filter         Optional filters criteras (example: 's.rowid NOT IN (x)', 's.client IN (1,3)'). Do not use a filter coming from input of users.\n\t *\t@param\tstring\t$showempty\t\tAdd an empty field (Can be '1' or text to use on empty line like 'SelectThirdParty')\n\t * \t@param\tint\t\t$showtype\t\tShow third party type in combolist (customer, prospect or supplier)\n\t * \t@param\tint\t\t$forcecombo\t\tForce to use standard HTML select component without beautification\n\t *  @param\tarray\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @param\tstring\t$filterkey\t\tFilter on key value\n\t *  @param\tint\t\t$outputmode\t\t0=HTML select string, 1=Array\n\t *  @param\tint\t\t$limit\t\t\tLimit number of answers\n\t *  @param\tstring\t$morecss\t\tAdd more css styles to the SELECT component\n\t *\t@param  string\t$moreparam      Add more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *\t@param  bool\t$multiple       add [] in the name of element and add 'multiple' attribut\n\t *  @param\tarray\t$excludeids\t\tExclude IDs from the select combo\n\t * \t@return\tstring\t\t\t\t\tHTML string with\n\t */\n\tpublic function select_thirdparty_list($selected = '', $htmlname = 'socid', $filter = '', $showempty = '', $showtype = 0, $forcecombo = 0, $events = array(), $filterkey = '', $outputmode = 0, $limit = 0, $morecss = 'minwidth100', $moreparam = '', $multiple = false, $excludeids = array())\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $user, $langs;\n\n\t\t$out = '';\n\t\t$num = 0;\n\t\t$outarray = array();\n\n\t\tif ($selected === '') {\n\t\t\t$selected = array();\n\t\t} elseif (!is_array($selected)) {\n\t\t\t$selected = array($selected);\n\t\t}\n\n\t\t// Clean $filter that may contains sql conditions so sql code\n\t\tif (function_exists('testSqlAndScriptInject')) {\n\t\t\tif (testSqlAndScriptInject($filter, 3) > 0) {\n\t\t\t\t$filter = '';\n\t\t\t}\n\t\t}\n\n\t\t// We search companies\n\t\t$sql = \"SELECT s.rowid, s.nom as name, s.name_alias, s.tva_intra, s.client, s.fournisseur, s.code_client, s.code_fournisseur\";\n\t\tif (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n\t\t\t$sql .= \", s.address, s.zip, s.town\";\n\t\t\t$sql .= \", dictp.code as country_code\";\n\t\t}\n\t\t$sql .= \" FROM \".$this->db->prefix().\"societe as s\";\n\t\tif (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"c_country as dictp ON dictp.rowid = s.fk_pays\";\n\t\t}\n\t\tif (empty($user->rights->societe->client->voir) && !$user->socid) {\n\t\t\t$sql .= \", \".$this->db->prefix().\"societe_commerciaux as sc\";\n\t\t}\n\t\t$sql .= \" WHERE s.entity IN (\".getEntity('societe').\")\";\n\t\tif (!empty($user->socid)) {\n\t\t\t$sql .= \" AND s.rowid = \".((int) $user->socid);\n\t\t}\n\t\tif ($filter) {\n\t\t\t$sql .= \" AND (\".$filter.\")\";\n\t\t}\n\t\tif (empty($user->rights->societe->client->voir) && !$user->socid) {\n\t\t\t$sql .= \" AND s.rowid = sc.fk_soc AND sc.fk_user = \".((int) $user->id);\n\t\t}\n\t\tif (!empty($conf->global->COMPANY_HIDE_INACTIVE_IN_COMBOBOX)) {\n\t\t\t$sql .= \" AND s.status <> 0\";\n\t\t}\n\t\tif (!empty($excludeids)) {\n\t\t\t$sql .= \" AND s.rowid NOT IN (\".$this->db->sanitize(join(',', $excludeids)).\")\";\n\t\t}\n\t\t// Add criteria\n\t\tif ($filterkey && $filterkey != '') {\n\t\t\t$sql .= \" AND (\";\n\t\t\t$prefix = empty($conf->global->COMPANY_DONOTSEARCH_ANYWHERE) ? '%' : ''; // Can use index if COMPANY_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i = 0;\n\t\t\tif (count($scrit) > 1) {\n\t\t\t\t$sql .= \"(\";\n\t\t\t}\n\t\t\tforeach ($scrit as $crit) {\n\t\t\t\tif ($i > 0) {\n\t\t\t\t\t$sql .= \" AND \";\n\t\t\t\t}\n\t\t\t\t$sql .= \"(s.nom LIKE '\".$this->db->escape($prefix.$crit).\"%')\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) {\n\t\t\t\t$sql .= \")\";\n\t\t\t}\n\t\t\tif (!empty($conf->barcode->enabled)) {\n\t\t\t\t$sql .= \" OR s.barcode LIKE '\".$this->db->escape($prefix.$filterkey).\"%'\";\n\t\t\t}\n\t\t\t$sql .= \" OR s.code_client LIKE '\".$this->db->escape($prefix.$filterkey).\"%' OR s.code_fournisseur LIKE '\".$this->db->escape($prefix.$filterkey).\"%'\";\n\t\t\t$sql .= \" OR s.name_alias LIKE '\".$this->db->escape($prefix.$filterkey).\"%' OR s.tva_intra LIKE '\".$this->db->escape($prefix.$filterkey).\"%'\";\n\t\t\t$sql .= \")\";\n\t\t}\n\t\t$sql .= $this->db->order(\"nom\", \"ASC\");\n\t\t$sql .= $this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\tdol_syslog(get_class($this).\"::select_thirdparty_list\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\tif (!$forcecombo) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events, getDolGlobalString(\"COMPANY_USE_SEARCH_TO_SELECT\"));\n\t\t\t}\n\n\t\t\t// Construct $out and $outarray\n\t\t\t$out .= '<select id=\"'.$htmlname.'\" class=\"flat'.($morecss ? ' '.$morecss : '').'\"'.($moreparam ? ' '.$moreparam : '').' name=\"'.$htmlname.($multiple ? '[]' : '').'\" '.($multiple ? 'multiple' : '').'>'.\"\\n\";\n\n\t\t\t$textifempty = (($showempty && !is_numeric($showempty)) ? $langs->trans($showempty) : '');\n\t\t\tif (!empty($conf->global->COMPANY_USE_SEARCH_TO_SELECT)) {\n\t\t\t\t// Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'.\n\t\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\t\tif ($showempty && !is_numeric($showempty)) {\n\t\t\t\t\t$textifempty = $langs->trans($showempty);\n\t\t\t\t} else {\n\t\t\t\t\t$textifempty .= $langs->trans(\"All\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($showempty) {\n\t\t\t\t$out .= '<option value=\"-1\" data-html=\"'.dol_escape_htmltag('<span class=\"opacitymedium\">'.($textifempty ? $textifempty : '&nbsp;').'</span>').'\">'.$textifempty.'</option>'.\"\\n\";\n\t\t\t}\n\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$label = '';\n\t\t\t\t\tif ($conf->global->SOCIETE_ADD_REF_IN_LIST) {\n\t\t\t\t\t\tif (($obj->client) && (!empty($obj->code_client))) {\n\t\t\t\t\t\t\t$label = $obj->code_client.' - ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (($obj->fournisseur) && (!empty($obj->code_fournisseur))) {\n\t\t\t\t\t\t\t$label .= $obj->code_fournisseur.' - ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$label .= ' '.$obj->name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$label = $obj->name;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($obj->name_alias)) {\n\t\t\t\t\t\t$label .= ' ('.$obj->name_alias.')';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($conf->global->SOCIETE_SHOW_VAT_IN_LIST) && !empty($obj->tva_intra)) {\n\t\t\t\t\t\t$label .= ' - '.$obj->tva_intra.'';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($showtype) {\n\t\t\t\t\t\tif ($obj->client || $obj->fournisseur) {\n\t\t\t\t\t\t\t$label .= ' (';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($obj->client == 1 || $obj->client == 3) {\n\t\t\t\t\t\t\t$label .= $langs->trans(\"Customer\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($obj->client == 2 || $obj->client == 3) {\n\t\t\t\t\t\t\t$label .= ($obj->client == 3 ? ', ' : '').$langs->trans(\"Prospect\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($obj->fournisseur) {\n\t\t\t\t\t\t\t$label .= ($obj->client ? ', ' : '').$langs->trans(\"Supplier\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($obj->client || $obj->fournisseur) {\n\t\t\t\t\t\t\t$label .= ')';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n\t\t\t\t\t\t$label .= ($obj->address ? ' - '.$obj->address : '').($obj->zip ? ' - '.$obj->zip : '').($obj->town ? ' '.$obj->town : '');\n\t\t\t\t\t\tif (!empty($obj->country_code)) {\n\t\t\t\t\t\t\t$label .= ', '.$langs->trans('Country'.$obj->country_code);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (empty($outputmode)) {\n\t\t\t\t\t\tif (in_array($obj->rowid, $selected)) {\n\t\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\" selected>'.$label.'</option>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\">'.$label.'</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarray_push($outarray, array('key'=>$obj->rowid, 'value'=>$label, 'label'=>$label));\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\t\t\t\t\tif (($i % 10) == 0) {\n\t\t\t\t\t\t$out .= \"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '</select>'.\"\\n\";\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\t$this->result = array('nbofthirdparties'=>$num);\n\n\t\tif ($outputmode) {\n\t\t\treturn $outarray;\n\t\t}\n\t\treturn $out;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return HTML combo list of absolute discounts\n\t *\n\t *  @param\tstring\t$selected       Id remise fixe pre-selectionnee\n\t *  @param  string\t$htmlname       Nom champ formulaire\n\t *  @param  string\t$filter         Criteres optionnels de filtre\n\t *  @param\tint\t\t$socid\t\t\tId of thirdparty\n\t *  @param\tint\t\t$maxvalue\t\tMax value for lines that can be selected\n\t *  @return\tint\t\t\t\t\t\tReturn number of qualifed lines in list\n\t */\n\tpublic function select_remises($selected, $htmlname, $filter, $socid, $maxvalue = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\n\t\t// On recherche les remises\n\t\t$sql = \"SELECT re.rowid, re.amount_ht, re.amount_tva, re.amount_ttc,\";\n\t\t$sql .= \" re.description, re.fk_facture_source\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"societe_remise_except as re\";\n\t\t$sql .= \" WHERE re.fk_soc = \".(int) $socid;\n\t\t$sql .= \" AND re.entity = \".$conf->entity;\n\t\tif ($filter) {\n\t\t\t$sql .= \" AND \".$filter;\n\t\t}\n\t\t$sql .= \" ORDER BY re.description ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_remises\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\tprint '<select id=\"select_'.$htmlname.'\" class=\"flat maxwidthonsmartphone\" name=\"'.$htmlname.'\">';\n\t\t\t$num = $this->db->num_rows($resql);\n\n\t\t\t$qualifiedlines = $num;\n\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\tprint '<option value=\"0\">&nbsp;</option>';\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$desc = dol_trunc($obj->description, 40);\n\t\t\t\t\tif (preg_match('/\\(CREDIT_NOTE\\)/', $desc)) {\n\t\t\t\t\t\t$desc = preg_replace('/\\(CREDIT_NOTE\\)/', $langs->trans(\"CreditNote\"), $desc);\n\t\t\t\t\t}\n\t\t\t\t\tif (preg_match('/\\(DEPOSIT\\)/', $desc)) {\n\t\t\t\t\t\t$desc = preg_replace('/\\(DEPOSIT\\)/', $langs->trans(\"Deposit\"), $desc);\n\t\t\t\t\t}\n\t\t\t\t\tif (preg_match('/\\(EXCESS RECEIVED\\)/', $desc)) {\n\t\t\t\t\t\t$desc = preg_replace('/\\(EXCESS RECEIVED\\)/', $langs->trans(\"ExcessReceived\"), $desc);\n\t\t\t\t\t}\n\t\t\t\t\tif (preg_match('/\\(EXCESS PAID\\)/', $desc)) {\n\t\t\t\t\t\t$desc = preg_replace('/\\(EXCESS PAID\\)/', $langs->trans(\"ExcessPaid\"), $desc);\n\t\t\t\t\t}\n\n\t\t\t\t\t$selectstring = '';\n\t\t\t\t\tif ($selected > 0 && $selected == $obj->rowid) {\n\t\t\t\t\t\t$selectstring = ' selected';\n\t\t\t\t\t}\n\n\t\t\t\t\t$disabled = '';\n\t\t\t\t\tif ($maxvalue > 0 && $obj->amount_ttc > $maxvalue) {\n\t\t\t\t\t\t$qualifiedlines--;\n\t\t\t\t\t\t$disabled = ' disabled';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($conf->global->MAIN_SHOW_FACNUMBER_IN_DISCOUNT_LIST) && !empty($obj->fk_facture_source)) {\n\t\t\t\t\t\t$tmpfac = new Facture($this->db);\n\t\t\t\t\t\tif ($tmpfac->fetch($obj->fk_facture_source) > 0) {\n\t\t\t\t\t\t\t$desc = $desc.' - '.$tmpfac->ref;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\"'.$selectstring.$disabled.'>'.$desc.' ('.price($obj->amount_ht).' '.$langs->trans(\"HT\").' - '.price($obj->amount_ttc).' '.$langs->trans(\"TTC\").')</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '</select>';\n\t\t\treturn $qualifiedlines;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return list of all contacts (for a third party or all)\n\t *\n\t *  @param\tint\t\t$socid      \tId ot third party or 0 for all\n\t *  @param  string\t$selected   \tId contact pre-selectionne\n\t *  @param  string\t$htmlname  \t    Name of HTML field ('none' for a not editable field)\n\t *  @param  int\t\t$showempty      0=no empty value, 1=add an empty value, 2=add line 'Internal' (used by user edit), 3=add an empty value only if more than one record into list\n\t *  @param  string\t$exclude        List of contacts id to exclude\n\t *  @param\tstring\t$limitto\t\tDisable answers that are not id in this array list\n\t *  @param\tinteger\t$showfunction   Add function into label\n\t *  @param\tstring\t$moreclass\t\tAdd more class to class style\n\t *  @param\tinteger\t$showsoc\t    Add company into label\n\t *  @param\tint\t\t$forcecombo\t\tForce to use combo box\n\t *  @param\tarray\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @param\tbool\t$options_only\tReturn options only (for ajax treatment)\n\t *  @param\tstring\t$moreparam\t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *  @param\tstring\t$htmlid\t\t\tHtml id to use instead of htmlname\n\t *  @return\tint\t\t\t\t\t\t<0 if KO, Nb of contact in list if OK\n\t *  @deprecated\t\t\t\t\t\tYou can use selectcontacts directly (warning order of param was changed)\n\t */\n\tpublic function select_contacts($socid, $selected = '', $htmlname = 'contactid', $showempty = 0, $exclude = '', $limitto = '', $showfunction = 0, $moreclass = '', $showsoc = 0, $forcecombo = 0, $events = array(), $options_only = false, $moreparam = '', $htmlid = '')\n\t{\n\t\t// phpcs:enable\n\t\tprint $this->selectcontacts($socid, $selected, $htmlname, $showempty, $exclude, $limitto, $showfunction, $moreclass, $options_only, $showsoc, $forcecombo, $events, $moreparam, $htmlid);\n\t\treturn $this->num;\n\t}\n\n\t/**\n\t *\tReturn HTML code of the SELECT of list of all contacts (for a third party or all).\n\t *  This also set the number of contacts found into $this->num\n\t *\n\t * @since 9.0 Add afterSelectContactOptions hook\n\t *\n\t *\t@param\tint\t\t\t$socid      \tId ot third party or 0 for all or -1 for empty list\n\t *\t@param  array|int\t$selected   \tArray of ID of pre-selected contact id\n\t *\t@param  string\t\t$htmlname  \t    Name of HTML field ('none' for a not editable field)\n\t *\t@param  int\t\t\t$showempty     \t0=no empty value, 1=add an empty value, 2=add line 'Internal' (used by user edit), 3=add an empty value only if more than one record into list\n\t *\t@param  string\t\t$exclude        List of contacts id to exclude\n\t *\t@param\tstring\t\t$limitto\t\tDisable answers that are not id in this array list\n\t *\t@param\tinteger\t\t$showfunction   Add function into label\n\t *\t@param\tstring\t\t$moreclass\t\tAdd more class to class style\n\t *\t@param\tbool\t\t$options_only\tReturn options only (for ajax treatment)\n\t *\t@param\tinteger\t\t$showsoc\t    Add company into label\n\t * \t@param\tint\t\t\t$forcecombo\t\tForce to use combo box (so no ajax beautify effect)\n\t *  @param\tarray\t\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @param\tstring\t\t$moreparam\t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *  @param\tstring\t\t$htmlid\t\t\tHtml id to use instead of htmlname\n\t *  @param\tbool\t\t$multiple\t\tadd [] in the name of element and add 'multiple' attribut\n\t *  @param\tinteger\t\t$disableifempty Set tag 'disabled' on select if there is no choice\n\t *\t@return\t int|string\t\t\t\t\t<0 if KO, HTML with select string if OK.\n\t */\n\tpublic function selectcontacts($socid, $selected = '', $htmlname = 'contactid', $showempty = 0, $exclude = '', $limitto = '', $showfunction = 0, $moreclass = '', $options_only = false, $showsoc = 0, $forcecombo = 0, $events = array(), $moreparam = '', $htmlid = '', $multiple = false, $disableifempty = 0)\n\t{\n\t\tglobal $conf, $langs, $hookmanager, $action;\n\n\t\t$langs->load('companies');\n\n\t\tif (empty($htmlid)) {\n\t\t\t$htmlid = $htmlname;\n\t\t}\n\t\t$num = 0;\n\n\t\tif ($selected === '') {\n\t\t\t$selected = array();\n\t\t} elseif (!is_array($selected)) {\n\t\t\t$selected = array($selected);\n\t\t}\n\t\t$out = '';\n\n\t\tif (!is_object($hookmanager)) {\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/hookmanager.class.php';\n\t\t\t$hookmanager = new HookManager($this->db);\n\t\t}\n\n\t\t// We search third parties\n\t\t$sql = \"SELECT sp.rowid, sp.lastname, sp.statut, sp.firstname, sp.poste, sp.email, sp.phone, sp.phone_perso, sp.phone_mobile, sp.town AS contact_town\";\n\t\tif ($showsoc > 0 || !empty($conf->global->CONTACT_SHOW_EMAIL_PHONE_TOWN_SELECTLIST)) {\n\t\t\t$sql .= \", s.nom as company, s.town AS company_town\";\n\t\t}\n\t\t$sql .= \" FROM \".$this->db->prefix().\"socpeople as sp\";\n\t\tif ($showsoc > 0 || !empty($conf->global->CONTACT_SHOW_EMAIL_PHONE_TOWN_SELECTLIST)) {\n\t\t\t$sql .= \" LEFT OUTER JOIN  \".$this->db->prefix().\"societe as s ON s.rowid=sp.fk_soc\";\n\t\t}\n\t\t$sql .= \" WHERE sp.entity IN (\".getEntity('socpeople').\")\";\n\t\tif ($socid > 0 || $socid == -1) {\n\t\t\t$sql .= \" AND sp.fk_soc = \".((int) $socid);\n\t\t}\n\t\tif (!empty($conf->global->CONTACT_HIDE_INACTIVE_IN_COMBOBOX)) {\n\t\t\t$sql .= \" AND sp.statut <> 0\";\n\t\t}\n\t\t$sql .= \" ORDER BY sp.lastname ASC\";\n\n\t\tdol_syslog(get_class($this).\"::selectcontacts\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\n\t\t\tif ($htmlname != 'none' && !$options_only) {\n\t\t\t\t$out .= '<select class=\"flat'.($moreclass ? ' '.$moreclass : '').'\" id=\"'.$htmlid.'\" name=\"'.$htmlname.(($num || empty($disableifempty)) ? '' : ' disabled').($multiple ? '[]' : '').'\" '.($multiple ? 'multiple' : '').' '.(!empty($moreparam) ? $moreparam : '').'>';\n\t\t\t}\n\n\t\t\tif ($showempty && ! is_numeric($showempty)) {\n\t\t\t\t$textforempty = $showempty;\n\t\t\t\t$out .= '<option class=\"optiongrey\" value=\"-1\"'.(in_array(-1, $selected) ? ' selected' : '').'>'.$textforempty.'</option>';\n\t\t\t} else {\n\t\t\t\tif (($showempty == 1 || ($showempty == 3 && $num > 1)) && ! $multiple) {\n\t\t\t\t\t$out .= '<option value=\"0\"'.(in_array(0, $selected) ? ' selected' : '').'>&nbsp;</option>';\n\t\t\t\t}\n\t\t\t\tif ($showempty == 2) {\n\t\t\t\t\t$out .= '<option value=\"0\"'.(in_array(0, $selected) ? ' selected' : '').'>-- '.$langs->trans(\"Internal\").' --</option>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\n\t\t\t\t$contactstatic = new Contact($this->db);\n\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t\t// Set email (or phones) and town extended infos\n\t\t\t\t\t$extendedInfos = '';\n\t\t\t\t\tif (!empty($conf->global->CONTACT_SHOW_EMAIL_PHONE_TOWN_SELECTLIST)) {\n\t\t\t\t\t\t$extendedInfos = array();\n\t\t\t\t\t\t$email = trim($obj->email);\n\t\t\t\t\t\tif (!empty($email)) {\n\t\t\t\t\t\t\t$extendedInfos[] = $email;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$phone = trim($obj->phone);\n\t\t\t\t\t\t\t$phone_perso = trim($obj->phone_perso);\n\t\t\t\t\t\t\t$phone_mobile = trim($obj->phone_mobile);\n\t\t\t\t\t\t\tif (!empty($phone)) {\n\t\t\t\t\t\t\t\t$extendedInfos[] = $phone;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!empty($phone_perso)) {\n\t\t\t\t\t\t\t\t$extendedInfos[] = $phone_perso;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!empty($phone_mobile)) {\n\t\t\t\t\t\t\t\t$extendedInfos[] = $phone_mobile;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$contact_town = trim($obj->contact_town);\n\t\t\t\t\t\t$company_town = trim($obj->company_town);\n\t\t\t\t\t\tif (!empty($contact_town)) {\n\t\t\t\t\t\t\t$extendedInfos[] = $contact_town;\n\t\t\t\t\t\t} elseif (!empty($company_town)) {\n\t\t\t\t\t\t\t$extendedInfos[] = $company_town;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$extendedInfos = implode(' - ', $extendedInfos);\n\t\t\t\t\t\tif (!empty($extendedInfos)) {\n\t\t\t\t\t\t\t$extendedInfos = ' - '.$extendedInfos;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$contactstatic->id = $obj->rowid;\n\t\t\t\t\t$contactstatic->lastname = $obj->lastname;\n\t\t\t\t\t$contactstatic->firstname = $obj->firstname;\n\t\t\t\t\tif ($obj->statut == 1) {\n\t\t\t\t\t\tif ($htmlname != 'none') {\n\t\t\t\t\t\t\t$disabled = 0;\n\t\t\t\t\t\t\tif (is_array($exclude) && count($exclude) && in_array($obj->rowid, $exclude)) {\n\t\t\t\t\t\t\t\t$disabled = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (is_array($limitto) && count($limitto) && !in_array($obj->rowid, $limitto)) {\n\t\t\t\t\t\t\t\t$disabled = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!empty($selected) && in_array($obj->rowid, $selected)) {\n\t\t\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\t\t\t\tif ($disabled) {\n\t\t\t\t\t\t\t\t\t$out .= ' disabled';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$out .= ' selected>';\n\t\t\t\t\t\t\t\t$out .= $contactstatic->getFullName($langs).$extendedInfos;\n\t\t\t\t\t\t\t\tif ($showfunction && $obj->poste) {\n\t\t\t\t\t\t\t\t\t$out .= ' ('.$obj->poste.')';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (($showsoc > 0) && $obj->company) {\n\t\t\t\t\t\t\t\t\t$out .= ' - ('.$obj->company.')';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$out .= '</option>';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\t\t\t\tif ($disabled) {\n\t\t\t\t\t\t\t\t\t$out .= ' disabled';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$out .= '>';\n\t\t\t\t\t\t\t\t$out .= $contactstatic->getFullName($langs).$extendedInfos;\n\t\t\t\t\t\t\t\tif ($showfunction && $obj->poste) {\n\t\t\t\t\t\t\t\t\t$out .= ' ('.$obj->poste.')';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (($showsoc > 0) && $obj->company) {\n\t\t\t\t\t\t\t\t\t$out .= ' - ('.$obj->company.')';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$out .= '</option>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (in_array($obj->rowid, $selected)) {\n\t\t\t\t\t\t\t\t$out .= $contactstatic->getFullName($langs).$extendedInfos;\n\t\t\t\t\t\t\t\tif ($showfunction && $obj->poste) {\n\t\t\t\t\t\t\t\t\t$out .= ' ('.$obj->poste.')';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (($showsoc > 0) && $obj->company) {\n\t\t\t\t\t\t\t\t\t$out .= ' - ('.$obj->company.')';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$labeltoshow = ($socid != -1) ? ($langs->trans($socid ? \"NoContactDefinedForThirdParty\" : \"NoContactDefined\")) : $langs->trans('SelectAThirdPartyFirst');\n\t\t\t\t$out .= '<option class=\"disabled\" value=\"-1\"'.(($showempty == 2 || $multiple) ? '' : ' selected').' disabled=\"disabled\">';\n\t\t\t\t$out .= $labeltoshow;\n\t\t\t\t$out .= '</option>';\n\t\t\t}\n\n\t\t\t$parameters = array(\n\t\t\t\t'socid'=>$socid,\n\t\t\t\t'htmlname'=>$htmlname,\n\t\t\t\t'resql'=>$resql,\n\t\t\t\t'out'=>&$out,\n\t\t\t\t'showfunction'=>$showfunction,\n\t\t\t\t'showsoc'=>$showsoc,\n\t\t\t);\n\n\t\t\t$reshook = $hookmanager->executeHooks('afterSelectContactOptions', $parameters, $this, $action); // Note that $action and $object may have been modified by some hooks\n\n\t\t\tif ($htmlname != 'none' && !$options_only) {\n\t\t\t\t$out .= '</select>';\n\t\t\t}\n\n\t\t\tif ($conf->use_javascript_ajax && !$forcecombo && !$options_only) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlid, $events, getDolGlobalString(\"CONTACT_USE_SEARCH_TO_SELECT\"));\n\t\t\t}\n\n\t\t\t$this->num = $num;\n\t\t\treturn $out;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn the HTML select list of users\n\t *\n\t *  @param\tstring\t\t\t$selected       Id user preselected\n\t *  @param  string\t\t\t$htmlname       Field name in form\n\t *  @param  int\t\t\t\t$show_empty     0=liste sans valeur nulle, 1=ajoute valeur inconnue\n\t *  @param  array\t\t\t$exclude        Array list of users id to exclude\n\t * \t@param\tint\t\t\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  array|string\t$include        Array list of users id to include. User '' for all users or 'hierarchy' to have only supervised users or 'hierarchyme' to have supervised + me\n\t * \t@param\tint\t\t\t\t$enableonly\t\tArray list of users id to be enabled. All other must be disabled\n\t *  @param\tstring\t\t\t$force_entity\t'0' or Ids of environment to force\n\t * \t@return\tvoid\n\t *  @deprecated\t\tUse select_dolusers instead\n\t *  @see select_dolusers()\n\t */\n\tpublic function select_users($selected = '', $htmlname = 'userid', $show_empty = 0, $exclude = null, $disabled = 0, $include = '', $enableonly = '', $force_entity = '0')\n\t{\n\t\t// phpcs:enable\n\t\tprint $this->select_dolusers($selected, $htmlname, $show_empty, $exclude, $disabled, $include, $enableonly, $force_entity);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn select list of users\n\t *\n\t *  @param\tstring\t\t\t$selected       User id or user object of user preselected. If 0 or < -2, we use id of current user. If -1, keep unselected (if empty is allowed)\n\t *  @param  string\t\t\t$htmlname       Field name in form\n\t *  @param  int|string\t\t$show_empty     0=list with no empty value, 1=add also an empty value into list\n\t *  @param  array\t\t\t$exclude        Array list of users id to exclude\n\t * \t@param\tint\t\t\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  array|string\t$include        Array list of users id to include. User '' for all users or 'hierarchy' to have only supervised users or 'hierarchyme' to have supervised + me\n\t * \t@param\tarray\t\t\t$enableonly\t\tArray list of users id to be enabled. If defined, it means that others will be disabled\n\t *  @param\tstring\t\t\t$force_entity\t'0' or Ids of environment to force\n\t *  @param\tint\t\t\t\t$maxlength\t\tMaximum length of string into list (0=no limit)\n\t *  @param\tint\t\t\t\t$showstatus\t\t0=show user status only if status is disabled, 1=always show user status into label, -1=never show user status\n\t *  @param\tstring\t\t\t$morefilter\t\tAdd more filters into sql request (Example: 'employee = 1'). This value must not come from user input.\n\t *  @param\tinteger\t\t\t$show_every\t\t0=default list, 1=add also a value \"Everybody\" at beginning of list\n\t *  @param\tstring\t\t\t$enableonlytext\tIf option $enableonlytext is set, we use this text to explain into label why record is disabled. Not used if enableonly is empty.\n\t *  @param\tstring\t\t\t$morecss\t\tMore css\n\t *  @param  int     \t\t$noactive       Show only active users (this will also happened whatever is this option if USER_HIDE_INACTIVE_IN_COMBOBOX is on).\n\t *  @param  int\t\t\t\t$outputmode     0=HTML select string, 1=Array\n\t *  @param  bool\t\t\t$multiple       add [] in the name of element and add 'multiple' attribut\n\t * \t@return\tstring\t\t\t\t\t\t\tHTML select string\n\t *  @see select_dolgroups()\n\t */\n\tpublic function select_dolusers($selected = '', $htmlname = 'userid', $show_empty = 0, $exclude = null, $disabled = 0, $include = '', $enableonly = '', $force_entity = '0', $maxlength = 0, $showstatus = 0, $morefilter = '', $show_every = 0, $enableonlytext = '', $morecss = '', $noactive = 0, $outputmode = 0, $multiple = false)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $user, $langs, $hookmanager;\n\n\t\t// If no preselected user defined, we take current user\n\t\tif ((is_numeric($selected) && ($selected < -2 || empty($selected))) && empty($conf->global->SOCIETE_DISABLE_DEFAULT_SALESREPRESENTATIVE)) {\n\t\t\t$selected = $user->id;\n\t\t}\n\n\t\tif ($selected === '') {\n\t\t\t$selected = array();\n\t\t} elseif (!is_array($selected)) {\n\t\t\t$selected = array($selected);\n\t\t}\n\n\t\t$excludeUsers = null;\n\t\t$includeUsers = null;\n\n\t\t// Permettre l'exclusion d'utilisateurs\n\t\tif (is_array($exclude)) {\n\t\t\t$excludeUsers = implode(\",\", $exclude);\n\t\t}\n\t\t// Permettre l'inclusion d'utilisateurs\n\t\tif (is_array($include)) {\n\t\t\t$includeUsers = implode(\",\", $include);\n\t\t} elseif ($include == 'hierarchy') {\n\t\t\t// Build list includeUsers to have only hierarchy\n\t\t\t$includeUsers = implode(\",\", $user->getAllChildIds(0));\n\t\t} elseif ($include == 'hierarchyme') {\n\t\t\t// Build list includeUsers to have only hierarchy and current user\n\t\t\t$includeUsers = implode(\",\", $user->getAllChildIds(1));\n\t\t}\n\n\t\t$out = '';\n\t\t$outarray = array();\n\n\t\t// Forge request to select users\n\t\t$sql = \"SELECT DISTINCT u.rowid, u.lastname as lastname, u.firstname, u.statut as status, u.login, u.admin, u.entity, u.photo\";\n\t\tif (!empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && !$user->entity) {\n\t\t\t$sql .= \", e.label\";\n\t\t}\n\t\t$sql .= \" FROM \".$this->db->prefix().\"user as u\";\n\t\tif (!empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && !$user->entity) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"entity as e ON e.rowid = u.entity\";\n\t\t\tif ($force_entity) {\n\t\t\t\t$sql .= \" WHERE u.entity IN (0, \".$this->db->sanitize($force_entity).\")\";\n\t\t\t} else {\n\t\t\t\t$sql .= \" WHERE u.entity IS NOT NULL\";\n\t\t\t}\n\t\t} else {\n\t\t\tif (!empty($conf->multicompany->enabled) && !empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE)) {\n\t\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"usergroup_user as ug\";\n\t\t\t\t$sql .= \" ON ug.fk_user = u.rowid\";\n\t\t\t\t$sql .= \" WHERE ug.entity = \".$conf->entity;\n\t\t\t} else {\n\t\t\t\t$sql .= \" WHERE u.entity IN (0, \".$conf->entity.\")\";\n\t\t\t}\n\t\t}\n\t\tif (!empty($user->socid)) {\n\t\t\t$sql .= \" AND u.fk_soc = \".((int) $user->socid);\n\t\t}\n\t\tif (is_array($exclude) && $excludeUsers) {\n\t\t\t$sql .= \" AND u.rowid NOT IN (\".$this->db->sanitize($excludeUsers).\")\";\n\t\t}\n\t\tif ($includeUsers) {\n\t\t\t$sql .= \" AND u.rowid IN (\".$this->db->sanitize($includeUsers).\")\";\n\t\t}\n\t\tif (!empty($conf->global->USER_HIDE_INACTIVE_IN_COMBOBOX) || $noactive) {\n\t\t\t$sql .= \" AND u.statut <> 0\";\n\t\t}\n\t\tif (!empty($morefilter)) {\n\t\t\t$sql .= \" \".$morefilter;\n\t\t}\n\n\t\t//Add hook to filter on user (for exemple on usergroup define in custom modules)\n\t\t$reshook = $hookmanager->executeHooks('addSQLWhereFilterOnSelectUsers', array(), $this, $action);\n\t\tif (!empty($reshook)) {\n\t\t\t$sql .= $hookmanager->resPrint;\n\t\t}\n\n\t\tif (empty($conf->global->MAIN_FIRSTNAME_NAME_POSITION)) {\t// MAIN_FIRSTNAME_NAME_POSITION is 0 means firstname+lastname\n\t\t\t$sql .= \" ORDER BY u.statut DESC, u.firstname ASC, u.lastname ASC\";\n\t\t} else {\n\t\t\t$sql .= \" ORDER BY u.statut DESC, u.lastname ASC, u.firstname ASC\";\n\t\t}\n\n\t\tdol_syslog(get_class($this).\"::select_dolusers\", LOG_DEBUG);\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\t// do not use maxwidthonsmartphone by default. Set it by caller so auto size to 100% will work when not defined\n\t\t\t\t$out .= '<select class=\"flat'.($morecss ? ' '.$morecss : ' minwidth200').'\" id=\"'.$htmlname.'\" name=\"'.$htmlname.($multiple ? '[]' : '').'\" '.($multiple ? 'multiple' : '').' '.($disabled ? ' disabled' : '').'>';\n\t\t\t\tif ($show_empty && !$multiple) {\n\t\t\t\t\t$textforempty = ' ';\n\t\t\t\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t\t\t\t$textforempty = '&nbsp;'; // If we use ajaxcombo, we need &nbsp; here to avoid to have an empty element that is too small.\n\t\t\t\t\t}\n\t\t\t\t\tif (!is_numeric($show_empty)) {\n\t\t\t\t\t\t$textforempty = $show_empty;\n\t\t\t\t\t}\n\t\t\t\t\t$out .= '<option class=\"optiongrey\" value=\"'.($show_empty < 0 ? $show_empty : -1).'\"'.((empty($selected) || in_array(-1, $selected)) ? ' selected' : '').'>'.$textforempty.'</option>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\tif ($show_every) {\n\t\t\t\t\t$out .= '<option value=\"-2\"'.((in_array(-2, $selected)) ? ' selected' : '').'>-- '.$langs->trans(\"Everybody\").' --</option>'.\"\\n\";\n\t\t\t\t}\n\n\t\t\t\t$userstatic = new User($this->db);\n\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t\t$userstatic->id = $obj->rowid;\n\t\t\t\t\t$userstatic->lastname = $obj->lastname;\n\t\t\t\t\t$userstatic->firstname = $obj->firstname;\n\t\t\t\t\t$userstatic->photo = $obj->photo;\n\t\t\t\t\t$userstatic->statut = $obj->status;\n\t\t\t\t\t$userstatic->entity = $obj->entity;\n\t\t\t\t\t$userstatic->admin = $obj->admin;\n\n\t\t\t\t\t$disableline = '';\n\t\t\t\t\tif (is_array($enableonly) && count($enableonly) && !in_array($obj->rowid, $enableonly)) {\n\t\t\t\t\t\t$disableline = ($enableonlytext ? $enableonlytext : '1');\n\t\t\t\t\t}\n\n\t\t\t\t\t$labeltoshow = '';\n\n\t\t\t\t\t// $fullNameMode is 0=Lastname+Firstname (MAIN_FIRSTNAME_NAME_POSITION=1), 1=Firstname+Lastname (MAIN_FIRSTNAME_NAME_POSITION=0)\n\t\t\t\t\t$fullNameMode = 0;\n\t\t\t\t\tif (empty($conf->global->MAIN_FIRSTNAME_NAME_POSITION)) {\n\t\t\t\t\t\t$fullNameMode = 1; //Firstname+lastname\n\t\t\t\t\t}\n\t\t\t\t\t$labeltoshow .= $userstatic->getFullName($langs, $fullNameMode, -1, $maxlength);\n\t\t\t\t\tif (empty($obj->firstname) && empty($obj->lastname)) {\n\t\t\t\t\t\t$labeltoshow .= $obj->login;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Complete name with more info\n\t\t\t\t\t$moreinfo = '';\n\t\t\t\t\tif (!empty($conf->global->MAIN_SHOW_LOGIN)) {\n\t\t\t\t\t\t$moreinfo .= ($moreinfo ? ' - ' : ' (').$obj->login;\n\t\t\t\t\t}\n\t\t\t\t\tif ($showstatus >= 0) {\n\t\t\t\t\t\tif ($obj->status == 1 && $showstatus == 1) {\n\t\t\t\t\t\t\t$moreinfo .= ($moreinfo ? ' - ' : ' (').$langs->trans('Enabled');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($obj->status == 0 && $showstatus == 1) {\n\t\t\t\t\t\t\t$moreinfo .= ($moreinfo ? ' - ' : ' (').$langs->trans('Disabled');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!empty($conf->multicompany->enabled) && empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE) && $conf->entity == 1 && $user->admin && !$user->entity) {\n\t\t\t\t\t\tif (!$obj->entity) {\n\t\t\t\t\t\t\t$moreinfo .= ($moreinfo ? ' - ' : ' (').$langs->trans(\"AllEntities\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ($obj->entity != $conf->entity) {\n\t\t\t\t\t\t\t\t$moreinfo .= ($moreinfo ? ' - ' : ' (').($obj->label ? $obj->label : $langs->trans(\"EntityNameNotDefined\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$moreinfo .= ($moreinfo ? ')' : '');\n\t\t\t\t\tif ($disableline && $disableline != '1') {\n\t\t\t\t\t\t$moreinfo .= ' - '.$disableline; // This is text from $enableonlytext parameter\n\t\t\t\t\t}\n\t\t\t\t\t$labeltoshow .= $moreinfo;\n\n\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\tif ($disableline) {\n\t\t\t\t\t\t$out .= ' disabled';\n\t\t\t\t\t}\n\t\t\t\t\tif ((is_object($selected) && $selected->id == $obj->rowid) || (!is_object($selected) && in_array($obj->rowid, $selected))) {\n\t\t\t\t\t\t$out .= ' selected';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= ' data-html=\"';\n\t\t\t\t\t$outhtml = '';\n\t\t\t\t\t// if (!empty($obj->photo)) {\n\t\t\t\t\t$outhtml .= $userstatic->getNomUrl(-3, '', 0, 1, 24, 1, 'login', '', 1).' ';\n\t\t\t\t\t// }\n\t\t\t\t\tif ($showstatus >= 0 && $obj->status == 0) {\n\t\t\t\t\t\t$outhtml .= '<strike class=\"opacitymediumxxx\">';\n\t\t\t\t\t}\n\t\t\t\t\t$outhtml .= $labeltoshow;\n\t\t\t\t\tif ($showstatus >= 0 && $obj->status == 0) {\n\t\t\t\t\t\t$outhtml .= '</strike>';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= dol_escape_htmltag($outhtml);\n\t\t\t\t\t$out .= '\">';\n\t\t\t\t\t$out .= $labeltoshow;\n\t\t\t\t\t$out .= '</option>';\n\n\t\t\t\t\t$outarray[$userstatic->id] = $userstatic->getFullName($langs, $fullNameMode, -1, $maxlength).$moreinfo;\n\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$out .= '<select class=\"flat\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" disabled>';\n\t\t\t\t$out .= '<option value=\"\">'.$langs->trans(\"None\").'</option>';\n\t\t\t}\n\t\t\t$out .= '</select>';\n\n\t\t\tif ($num) {\n\t\t\t\t// Enhance with select2\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out = ajax_combobox($htmlname).$out;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\tif ($outputmode) {\n\t\t\treturn $outarray;\n\t\t}\n\t\treturn $out;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn select list of users. Selected users are stored into session.\n\t *  List of users are provided into $_SESSION['assignedtouser'].\n\t *\n\t *  @param  string\t$action         Value for $action\n\t *  @param  string\t$htmlname       Field name in form\n\t *  @param  int\t\t$show_empty     0=list without the empty value, 1=add empty value\n\t *  @param  array\t$exclude        Array list of users id to exclude\n\t * \t@param\tint\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  array\t$include        Array list of users id to include or 'hierarchy' to have only supervised users\n\t * \t@param\tarray\t$enableonly\t\tArray list of users id to be enabled. All other must be disabled\n\t *  @param\tint\t\t$force_entity\t'0' or Ids of environment to force\n\t *  @param\tint\t\t$maxlength\t\tMaximum length of string into list (0=no limit)\n\t *  @param\tint\t\t$showstatus\t\t0=show user status only if status is disabled, 1=always show user status into label, -1=never show user status\n\t *  @param\tstring\t$morefilter\t\tAdd more filters into sql request\n\t *  @param\tint\t\t$showproperties\t\tShow properties of each attendees\n\t *  @param\tarray\t$listofuserid\t\tArray with properties of each user\n\t *  @param\tarray\t$listofcontactid\tArray with properties of each contact\n\t *  @param\tarray\t$listofotherid\t\tArray with properties of each other contact\n\t * \t@return\tstring\t\t\t\t\tHTML select string\n\t *  @see select_dolgroups()\n\t */\n\tpublic function select_dolusers_forevent($action = '', $htmlname = 'userid', $show_empty = 0, $exclude = null, $disabled = 0, $include = '', $enableonly = '', $force_entity = '0', $maxlength = 0, $showstatus = 0, $morefilter = '', $showproperties = 0, $listofuserid = array(), $listofcontactid = array(), $listofotherid = array())\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $user, $langs;\n\n\t\t$userstatic = new User($this->db);\n\t\t$out = '';\n\n\n\t\t$assignedtouser = array();\n\t\tif (!empty($_SESSION['assignedtouser'])) {\n\t\t\t$assignedtouser = json_decode($_SESSION['assignedtouser'], true);\n\t\t}\n\t\t$nbassignetouser = count($assignedtouser);\n\n\t\t//if ($nbassignetouser && $action != 'view') $out .= '<br>';\n\t\tif ($nbassignetouser) {\n\t\t\t$out .= '<ul class=\"attendees\">';\n\t\t}\n\t\t$i = 0;\n\t\t$ownerid = 0;\n\t\tforeach ($assignedtouser as $key => $value) {\n\t\t\tif ($value['id'] == $ownerid) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$out .= '<li>';\n\t\t\t$userstatic->fetch($value['id']);\n\t\t\t$out .= $userstatic->getNomUrl(-1);\n\t\t\tif ($i == 0) {\n\t\t\t\t$ownerid = $value['id'];\n\t\t\t\t$out .= ' ('.$langs->trans(\"Owner\").')';\n\t\t\t}\n\t\t\tif ($nbassignetouser > 1 && $action != 'view') {\n\t\t\t\t$out .= ' <input type=\"image\" style=\"border: 0px;\" src=\"'.img_picto($langs->trans(\"Remove\"), 'delete', '', 0, 1).'\" value=\"'.$userstatic->id.'\" class=\"removedassigned reposition\" id=\"removedassigned_'.$userstatic->id.'\" name=\"removedassigned_'.$userstatic->id.'\">';\n\t\t\t}\n\t\t\t// Show my availability\n\t\t\tif ($showproperties) {\n\t\t\t\tif ($ownerid == $value['id'] && is_array($listofuserid) && count($listofuserid) && in_array($ownerid, array_keys($listofuserid))) {\n\t\t\t\t\t$out .= '<div class=\"myavailability inline-block\">';\n\t\t\t\t\t$out .= '<span class=\"hideonsmartphone\">&nbsp;-&nbsp;<span class=\"opacitymedium\">'.$langs->trans(\"Availability\").':</span>  </span><input id=\"transparency\" class=\"paddingrightonly\" '.($action == 'view' ? 'disabled' : '').' type=\"checkbox\" name=\"transparency\"'.($listofuserid[$ownerid]['transparency'] ? ' checked' : '').'><label for=\"transparency\">'.$langs->trans(\"Busy\").'</label>';\n\t\t\t\t\t$out .= '</div>';\n\t\t\t\t}\n\t\t\t}\n\t\t\t//$out.=' '.($value['mandatory']?$langs->trans(\"Mandatory\"):$langs->trans(\"Optional\"));\n\t\t\t//$out.=' '.($value['transparency']?$langs->trans(\"Busy\"):$langs->trans(\"NotBusy\"));\n\n\t\t\t$out .= '</li>';\n\t\t\t$i++;\n\t\t}\n\t\tif ($nbassignetouser) {\n\t\t\t$out .= '</ul>';\n\t\t}\n\n\t\t// Method with no ajax\n\t\tif ($action != 'view') {\n\t\t\t$out .= '<input type=\"hidden\" class=\"removedassignedhidden\" name=\"removedassigned\" value=\"\">';\n\t\t\t$out .= '<script type=\"text/javascript\">jQuery(document).ready(function () {';\n\t\t\t$out .= 'jQuery(\".removedassigned\").click(function() { jQuery(\".removedassignedhidden\").val(jQuery(this).val()); });';\n\t\t\t$out .= 'jQuery(\".assignedtouser\").change(function() { console.log(jQuery(\".assignedtouser option:selected\").val());';\n\t\t\t$out .= ' if (jQuery(\".assignedtouser option:selected\").val() > 0) { jQuery(\"#'.$action.'assignedtouser\").attr(\"disabled\", false); }';\n\t\t\t$out .= ' else { jQuery(\"#'.$action.'assignedtouser\").attr(\"disabled\", true); }';\n\t\t\t$out .= '});';\n\t\t\t$out .= '})</script>';\n\t\t\t$out .= $this->select_dolusers('', $htmlname, $show_empty, $exclude, $disabled, $include, $enableonly, $force_entity, $maxlength, $showstatus, $morefilter);\n\t\t\t$out .= ' <input type=\"submit\" disabled class=\"button valignmiddle smallpaddingimp reposition\" id=\"'.$action.'assignedtouser\" name=\"'.$action.'assignedtouser\" value=\"'.dol_escape_htmltag($langs->trans(\"Add\")).'\">';\n\t\t\t$out .= '<br>';\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return list of products for customer in Ajax if Ajax activated or go to select_produits_list\n\t *\n\t *  @param\t\tint\t\t\t$selected\t\t\t\tPreselected products\n\t *  @param\t\tstring\t\t$htmlname\t\t\t\tName of HTML select field (must be unique in page).\n\t *  @param\t\tint|string\t$filtertype\t\t\t\tFilter on product type (''=nofilter, 0=product, 1=service)\n\t *  @param\t\tint\t\t\t$limit\t\t\t\t\tLimit on number of returned lines\n\t *  @param\t\tint\t\t\t$price_level\t\t\tLevel of price to show\n\t *  @param\t\tint\t\t\t$status\t\t\t\t\tSell status -1=Return all products, 0=Products not on sell, 1=Products on sell\n\t *  @param\t\tint\t\t\t$finished\t\t\t\t2=all, 1=finished, 0=raw material\n\t *  @param\t\tstring\t\t$selected_input_value\tValue of preselected input text (for use with ajax)\n\t *  @param\t\tint\t\t\t$hidelabel\t\t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n\t *  @param\t\tarray\t\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t *  @param      int\t\t\t$socid\t\t\t\t\tThirdparty Id (to get also price dedicated to this customer)\n\t *  @param\t\tstring\t\t$showempty\t\t\t\t'' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t\t$forcecombo\t\t\t\tForce to use combo box\n\t *  @param      string      $morecss                Add more css on select\n\t *  @param      int         $hidepriceinlabel       1=Hide prices in label\n\t *  @param      string      $warehouseStatus        Warehouse status filter to count the quantity in stock. Following comma separated filter options can be used\n\t *\t\t\t\t\t\t\t\t\t\t            'warehouseopen' = count products from open warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t            'warehouseclosed' = count products from closed warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t            'warehouseinternal' = count products from warehouses for internal correct/transfer only\n\t *  @param \t\tarray \t\t$selected_combinations \tSelected combinations. Format: array([attrid] => attrval, [...])\n\t *  @param\t\tstring\t\t$nooutput\t\t\t\tNo print, return the output into a string\n\t *  @param\t\tint\t\t\t$status_purchase\t\tPurchase status -1=Return all products, 0=Products not on purchase, 1=Products on purchase\n\t *  @return\t\tvoid|string\n\t */\n\tpublic function select_produits($selected = '', $htmlname = 'productid', $filtertype = '', $limit = 0, $price_level = 0, $status = 1, $finished = 2, $selected_input_value = '', $hidelabel = 0, $ajaxoptions = array(), $socid = 0, $showempty = '1', $forcecombo = 0, $morecss = '', $hidepriceinlabel = 0, $warehouseStatus = '', $selected_combinations = null, $nooutput = 0, $status_purchase = -1)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\n\t\t// check parameters\n\t\t$price_level = (!empty($price_level) ? $price_level : 0);\n\t\tif (is_null($ajaxoptions)) {\n\t\t\t$ajaxoptions = array();\n\t\t}\n\n\t\tif (strval($filtertype) === '' && (!empty($conf->product->enabled) || !empty($conf->service->enabled))) {\n\t\t\tif (!empty($conf->product->enabled) && empty($conf->service->enabled)) {\n\t\t\t\t$filtertype = '0';\n\t\t\t} elseif (empty($conf->product->enabled) && !empty($conf->service->enabled)) {\n\t\t\t\t$filtertype = '1';\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->PRODUIT_USE_SEARCH_TO_SELECT)) {\n\t\t\t$placeholder = '';\n\n\t\t\tif ($selected && empty($selected_input_value)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t\t\t\t$producttmpselect = new Product($this->db);\n\t\t\t\t$producttmpselect->fetch($selected);\n\t\t\t\t$selected_input_value = $producttmpselect->ref;\n\t\t\t\tunset($producttmpselect);\n\t\t\t}\n\t\t\t// handle case where product or service module is disabled + no filter specified\n\t\t\tif ($filtertype == '') {\n\t\t\t\tif (empty($conf->product->enabled)) { // when product module is disabled, show services only\n\t\t\t\t\t$filtertype = 1;\n\t\t\t\t} elseif (empty($conf->service->enabled)) { // when service module is disabled, show products only\n\t\t\t\t\t$filtertype = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// mode=1 means customers products\n\t\t\t$urloption = 'htmlname='.$htmlname.'&outjson=1&price_level='.$price_level.'&type='.$filtertype.'&mode=1&status='.$status.'&status_purchase='.$status_purchase.'&finished='.$finished.'&hidepriceinlabel='.$hidepriceinlabel.'&warehousestatus='.$warehouseStatus;\n\t\t\t//Price by customer\n\t\t\tif (!empty($conf->global->PRODUIT_CUSTOMER_PRICES) && !empty($socid)) {\n\t\t\t\t$urloption .= '&socid='.$socid;\n\t\t\t}\n\t\t\t$out .= ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/product/ajax/products.php', $urloption, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT, 1, $ajaxoptions);\n\n\t\t\tif (!empty($conf->variants->enabled) && is_array($selected_combinations)) {\n\t\t\t\t// Code to automatically insert with javascript the select of attributes under the select of product\n\t\t\t\t// when a parent of variant has been selected.\n\t\t\t\t$out .= '\n\t\t\t\t<!-- script to auto show attributes select tags if a variant was selected -->\n\t\t\t\t<script>\n\t\t\t\t\t// auto show attributes fields\n\t\t\t\t\tselected = '.json_encode($selected_combinations).';\n\t\t\t\t\tcombvalues = {};\n\n\t\t\t\t\tjQuery(document).ready(function () {\n\n\t\t\t\t\t\tjQuery(\"input[name=\\'prod_entry_mode\\']\").change(function () {\n\t\t\t\t\t\t\tif (jQuery(this).val() == \\'free\\') {\n\t\t\t\t\t\t\t\tjQuery(\\'div#attributes_box\\').empty();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tjQuery(\"input#'.$htmlname.'\").change(function () {\n\n\t\t\t\t\t\t\tif (!jQuery(this).val()) {\n\t\t\t\t\t\t\t\tjQuery(\\'div#attributes_box\\').empty();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconsole.log(\"A change has started. We get variants fields to inject html select\");\n\n\t\t\t\t\t\t\tjQuery.getJSON(\"'.DOL_URL_ROOT.'/variants/ajax/getCombinations.php\", {\n\t\t\t\t\t\t\t\tid: jQuery(this).val()\n\t\t\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\t\t\tjQuery(\\'div#attributes_box\\').empty();\n\n\t\t\t\t\t\t\t\tjQuery.each(data, function (key, val) {\n\n\t\t\t\t\t\t\t\t\tcombvalues[val.id] = val.values;\n\n\t\t\t\t\t\t\t\t\tvar span = jQuery(document.createElement(\\'div\\')).css({\n\t\t\t\t\t\t\t\t\t\t\\'display\\': \\'table-row\\'\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tspan.append(\n\t\t\t\t\t\t\t\t\t\tjQuery(document.createElement(\\'div\\')).text(val.label).css({\n\t\t\t\t\t\t\t\t\t\t\t\\'font-weight\\': \\'bold\\',\n\t\t\t\t\t\t\t\t\t\t\t\\'display\\': \\'table-cell\\'\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tvar html = jQuery(document.createElement(\\'select\\')).attr(\\'name\\', \\'combinations[\\' + val.id + \\']\\').css({\n\t\t\t\t\t\t\t\t\t\t\\'margin-left\\': \\'15px\\',\n\t\t\t\t\t\t\t\t\t\t\\'white-space\\': \\'pre\\'\n\t\t\t\t\t\t\t\t\t}).append(\n\t\t\t\t\t\t\t\t\t\tjQuery(document.createElement(\\'option\\')).val(\\'\\')\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tjQuery.each(combvalues[val.id], function (key, val) {\n\t\t\t\t\t\t\t\t\t\tvar tag = jQuery(document.createElement(\\'option\\')).val(val.id).html(val.value);\n\n\t\t\t\t\t\t\t\t\t\tif (selected[val.fk_product_attribute] == val.id) {\n\t\t\t\t\t\t\t\t\t\t\ttag.attr(\\'selected\\', \\'selected\\');\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\thtml.append(tag);\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tspan.append(html);\n\t\t\t\t\t\t\t\t\tjQuery(\\'div#attributes_box\\').append(span);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t'.($selected ? 'jQuery(\"input#'.$htmlname.'\").change();' : '').'\n\t\t\t\t\t});\n\t\t\t\t</script>\n                ';\n\t\t\t}\n\n\t\t\tif (empty($hidelabel)) {\n\t\t\t\t$out .= $langs->trans(\"RefOrLabel\").' : ';\n\t\t\t} elseif ($hidelabel > 1) {\n\t\t\t\t$placeholder = ' placeholder=\"'.$langs->trans(\"RefOrLabel\").'\"';\n\t\t\t\tif ($hidelabel == 2) {\n\t\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '<input type=\"text\" class=\"minwidth100'.($morecss ? ' '.$morecss : '').'\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.$placeholder.' '.(!empty($conf->global->PRODUCT_SEARCH_AUTOFOCUS) ? 'autofocus' : '').' />';\n\t\t\tif ($hidelabel == 3) {\n\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t}\n\t\t} else {\n\t\t\t$out .= $this->select_produits_list($selected, $htmlname, $filtertype, $limit, $price_level, '', $status, $finished, 0, $socid, $showempty, $forcecombo, $morecss, $hidepriceinlabel, $warehouseStatus, $status_purchase);\n\t\t}\n\n\t\tif (empty($nooutput)) {\n\t\t\tprint $out;\n\t\t} else {\n\t\t\treturn $out;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\n\t/**\n\t *  Return list of BOM for customer in Ajax if Ajax activated or go to select_produits_list\n\t *\n\t * @param int $selected Preselected BOM id\n\t * @param string $htmlname Name of HTML select field (must be unique in page).\n\t * @param int $limit Limit on number of returned lines\n\t * @param int $status Sell status -1=Return all bom, 0=Draft BOM, 1=Validated BOM\n\t * @param int $type type of the BOM (-1=Return all BOM, 0=Return disassemble BOM, 1=Return manufacturing BOM)\n\t * @param string $showempty '' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * @param string $morecss Add more css on select\n\t * @param string $nooutput No print, return the output into a string\n\t * @param int $forcecombo Force to use combo box\n\t * @return        void|string\n\t */\n\tpublic function select_bom($selected = '', $htmlname = 'bom_id', $limit = 0, $status = 1, $type = 1, $showempty = '1', $morecss = '', $nooutput = '', $forcecombo = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $user, $langs, $db;\n\n\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\n\t\t$error = 0;\n\t\t$out = '';\n\n\t\tif (!$forcecombo) {\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t$out .= ajax_combobox($htmlname, $events, getDolGlobalInt(\"PRODUIT_USE_SEARCH_TO_SELECT\"));\n\t\t}\n\n\t\t$out .= '<select class=\"flat'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\n\t\t$sql = 'SELECT b.rowid, b.ref, b.label, b.fk_product';\n\t\t$sql.= ' FROM '.MAIN_DB_PREFIX.'bom_bom as b';\n\t\t$sql.= ' WHERE b.entity IN ('.getEntity('bom').')';\n\t\tif (!empty($status)) $sql.= ' AND status = '. (int) $status;\n\t\tif (!empty($type)) $sql.= ' AND status = '. (int) $type;\n\t\tif (!empty($limit)) $sql.= 'LIMIT '. (int) $limit;\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\tif ($showempty)\t{\n\t\t\t\t$out .= '<option value=\"-1\"';\n\t\t\t\tif (empty($selected)) $out .= ' selected';\n\t\t\t\t$out .= '>&nbsp;</option>';\n\t\t\t}\n\t\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t\t$product = new Product($db);\n\t\t\t\t$res = $product->fetch($obj->fk_product);\n\t\t\t\tif ($obj->rowid == $selected) $out .= '<option value=\"'.$obj->rowid.'\" selected>'.$obj->ref.' - '. $product->label .' - '.$obj->label.'</option>';\n\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\">'.$obj->ref.' - '.$product->label .' - '. $obj->label.'</option>';\n\t\t\t}\n\t\t} else {\n\t\t\t$error++;\n\t\t\tdol_print_error($db);\n\t\t}\n\t\tif (empty($nooutput)) {\n\t\t\tprint $out;\n\t\t} else {\n\t\t\treturn $out;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn list of products for a customer.\n\t *  Called by select_produits.\n\t *\n\t *\t@param      int\t\t$selected           Preselected product\n\t *\t@param      string\t$htmlname           Name of select html\n\t *  @param\t\tstring\t$filtertype         Filter on product type (''=nofilter, 0=product, 1=service)\n\t *\t@param      int\t\t$limit              Limit on number of returned lines\n\t *\t@param      int\t\t$price_level        Level of price to show\n\t * \t@param      string\t$filterkey          Filter on product\n\t *\t@param\t\tint\t\t$status             -1=Return all products, 0=Products not on sell, 1=Products on sell\n\t *  @param      int\t\t$finished           Filter on finished field: 2=No filter\n\t *  @param      int\t\t$outputmode         0=HTML select string, 1=Array\n\t *  @param      int\t\t$socid     \t\t    Thirdparty Id (to get also price dedicated to this customer)\n\t *  @param\t\tstring\t$showempty\t\t    '' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t$forcecombo\t\t    Force to use combo box\n\t *  @param      string  $morecss            Add more css on select\n\t *  @param      int     $hidepriceinlabel   1=Hide prices in label\n\t *  @param      string  $warehouseStatus    Warehouse status filter to group/count stock. Following comma separated filter options can be used.\n\t *\t\t\t\t\t\t\t\t\t\t    'warehouseopen' = count products from open warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t    'warehouseclosed' = count products from closed warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t    'warehouseinternal' = count products from warehouses for internal correct/transfer only\n\t *  @param\t\tint\t\t$status_purchase\tPurchase status -1=Return all products, 0=Products not on purchase, 1=Products on purchase\n\t *  @return     array    \t\t\t\t    Array of keys for json\n\t */\n\tpublic function select_produits_list($selected = '', $htmlname = 'productid', $filtertype = '', $limit = 20, $price_level = 0, $filterkey = '', $status = 1, $finished = 2, $outputmode = 0, $socid = 0, $showempty = '1', $forcecombo = 0, $morecss = '', $hidepriceinlabel = 0, $warehouseStatus = '', $status_purchase = -1)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\t\t$outarray = array();\n\n\t\t// Units\n\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\t$langs->load('other');\n\t\t}\n\n\t\t$warehouseStatusArray = array();\n\t\tif (!empty($warehouseStatus)) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/stock/class/entrepot.class.php';\n\t\t\tif (preg_match('/warehouseclosed/', $warehouseStatus)) {\n\t\t\t\t$warehouseStatusArray[] = Entrepot::STATUS_CLOSED;\n\t\t\t}\n\t\t\tif (preg_match('/warehouseopen/', $warehouseStatus)) {\n\t\t\t\t$warehouseStatusArray[] = Entrepot::STATUS_OPEN_ALL;\n\t\t\t}\n\t\t\tif (preg_match('/warehouseinternal/', $warehouseStatus)) {\n\t\t\t\t$warehouseStatusArray[] = Entrepot::STATUS_OPEN_INTERNAL;\n\t\t\t}\n\t\t}\n\n\t\t$selectFields = \" p.rowid, p.ref, p.label, p.description, p.barcode, p.fk_country, p.fk_product_type, p.price, p.price_ttc, p.price_base_type, p.tva_tx, p.default_vat_code, p.duration, p.fk_price_expression\";\n\t\tif (count($warehouseStatusArray)) {\n\t\t\t$selectFieldsGrouped = \", sum(\".$this->db->ifsql(\"e.statut IS NULL\", \"0\", \"ps.reel\").\") as stock\"; // e.statut is null if there is no record in stock\n\t\t} else {\n\t\t\t$selectFieldsGrouped = \", \".$this->db->ifsql(\"p.stock IS NULL\", 0, \"p.stock\").\" AS stock\";\n\t\t}\n\n\t\t$sql = \"SELECT \";\n\t\t$sql .= $selectFields.$selectFieldsGrouped;\n\n\t\tif (!empty($conf->global->PRODUCT_SORT_BY_CATEGORY)) {\n\t\t\t//Product category\n\t\t\t$sql .= \", (SELECT \".$this->db->prefix().\"categorie_product.fk_categorie\n\t\t\t\t\t\tFROM \".$this->db->prefix().\"categorie_product\n\t\t\t\t\t\tWHERE \".$this->db->prefix().\"categorie_product.fk_product=p.rowid\n\t\t\t\t\t\tLIMIT 1\n\t\t\t\t) AS categorie_product_id \";\n\t\t}\n\n\t\t//Price by customer\n\t\tif (!empty($conf->global->PRODUIT_CUSTOMER_PRICES) && !empty($socid)) {\n\t\t\t$sql .= ', pcp.rowid as idprodcustprice, pcp.price as custprice, pcp.price_ttc as custprice_ttc,';\n\t\t\t$sql .= ' pcp.price_base_type as custprice_base_type, pcp.tva_tx as custtva_tx, pcp.default_vat_code as custdefault_vat_code, pcp.ref_customer as custref';\n\t\t\t$selectFields .= \", idprodcustprice, custprice, custprice_ttc, custprice_base_type, custtva_tx, custdefault_vat_code, custref\";\n\t\t}\n\t\t// Units\n\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\t$sql .= \", u.label as unit_long, u.short_label as unit_short, p.weight, p.weight_units, p.length, p.length_units, p.width, p.width_units, p.height, p.height_units, p.surface, p.surface_units, p.volume, p.volume_units\";\n\t\t\t$selectFields .= ', unit_long, unit_short, p.weight, p.weight_units, p.length, p.length_units, p.width, p.width_units, p.height, p.height_units, p.surface, p.surface_units, p.volume, p.volume_units';\n\t\t}\n\n\t\t// Multilang : we add translation\n\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t$sql .= \", pl.label as label_translated\";\n\t\t\t$sql .= \", pl.description as description_translated\";\n\t\t\t$selectFields .= \", label_translated\";\n\t\t\t$selectFields .= \", description_translated\";\n\t\t}\n\t\t// Price by quantity\n\t\tif (!empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY) || !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES)) {\n\t\t\t$sql .= \", (SELECT pp.rowid FROM \".$this->db->prefix().\"product_price as pp WHERE pp.fk_product = p.rowid\";\n\t\t\tif ($price_level >= 1 && !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES)) {\n\t\t\t\t$sql .= \" AND price_level = \".((int) $price_level);\n\t\t\t}\n\t\t\t$sql .= \" ORDER BY date_price\";\n\t\t\t$sql .= \" DESC LIMIT 1) as price_rowid\";\n\t\t\t$sql .= \", (SELECT pp.price_by_qty FROM \".$this->db->prefix().\"product_price as pp WHERE pp.fk_product = p.rowid\"; // price_by_qty is 1 if some prices by qty exists in subtable\n\t\t\tif ($price_level >= 1 && !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES)) {\n\t\t\t\t$sql .= \" AND price_level = \".((int) $price_level);\n\t\t\t}\n\t\t\t$sql .= \" ORDER BY date_price\";\n\t\t\t$sql .= \" DESC LIMIT 1) as price_by_qty\";\n\t\t\t$selectFields .= \", price_rowid, price_by_qty\";\n\t\t}\n\t\t$sql .= \" FROM \".$this->db->prefix().\"product as p\";\n\t\tif (count($warehouseStatusArray)) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"product_stock as ps on ps.fk_product = p.rowid\";\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"entrepot as e on ps.fk_entrepot = e.rowid AND e.entity IN (\".getEntity('stock').\")\";\n\t\t\t$sql .= ' AND e.statut IN ('.$this->db->sanitize($this->db->escape(implode(',', $warehouseStatusArray))).')'; // Return line if product is inside the selected stock. If not, an empty line will be returned so we will count 0.\n\t\t}\n\n\t\t// include search in supplier ref\n\t\tif (!empty($conf->global->MAIN_SEARCH_PRODUCT_BY_FOURN_REF)) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"product_fournisseur_price as pfp ON p.rowid = pfp.fk_product\";\n\t\t}\n\n\t\t//Price by customer\n\t\tif (!empty($conf->global->PRODUIT_CUSTOMER_PRICES) && !empty($socid)) {\n\t\t\t$sql .= \" LEFT JOIN  \".$this->db->prefix().\"product_customer_price as pcp ON pcp.fk_soc=\".((int) $socid).\" AND pcp.fk_product=p.rowid\";\n\t\t}\n\t\t// Units\n\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"c_units u ON u.rowid = p.fk_unit\";\n\t\t}\n\t\t// Multilang : we add translation\n\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"product_lang as pl ON pl.fk_product = p.rowid \";\n\t\t\tif (!empty($conf->global->PRODUIT_TEXTS_IN_THIRDPARTY_LANGUAGE) && !empty($socid)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\n\t\t\t\t$soc = new Societe($this->db);\n\t\t\t\t$result = $soc->fetch($socid);\n\t\t\t\tif ($result > 0 && !empty($soc->default_lang)) {\n\t\t\t\t\t$sql .= \" AND pl.lang = '\".$this->db->escape($soc->default_lang).\"'\";\n\t\t\t\t} else {\n\t\t\t\t\t$sql .= \" AND pl.lang = '\".$this->db->escape($langs->getDefaultLang()).\"'\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$sql .= \" AND pl.lang = '\".$this->db->escape($langs->getDefaultLang()).\"'\";\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($conf->global->PRODUIT_ATTRIBUTES_HIDECHILD)) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"product_attribute_combination pac ON pac.fk_product_child = p.rowid\";\n\t\t}\n\n\t\t$sql .= ' WHERE p.entity IN ('.getEntity('product').')';\n\n\t\tif (!empty($conf->global->PRODUIT_ATTRIBUTES_HIDECHILD)) {\n\t\t\t$sql .= \" AND pac.rowid IS NULL\";\n\t\t}\n\n\t\tif ($finished == 0) {\n\t\t\t$sql .= \" AND p.finished = \".((int) $finished);\n\t\t} elseif ($finished == 1) {\n\t\t\t$sql .= \" AND p.finished = \".((int) $finished);\n\t\t\tif ($status >= 0) {\n\t\t\t\t$sql .= \" AND p.tosell = \".((int) $status);\n\t\t\t}\n\t\t} elseif ($status >= 0) {\n\t\t\t$sql .= \" AND p.tosell = \".((int) $status);\n\t\t}\n\t\tif ($status_purchase >= 0) {\n\t\t\t$sql .= \" AND p.tobuy = \".((int) $status_purchase);\n\t\t}\n\t\t// Filter by product type\n\t\tif (strval($filtertype) != '') {\n\t\t\t$sql .= \" AND p.fk_product_type = \".((int) $filtertype);\n\t\t} elseif (empty($conf->product->enabled)) { // when product module is disabled, show services only\n\t\t\t$sql .= \" AND p.fk_product_type = 1\";\n\t\t} elseif (empty($conf->service->enabled)) { // when service module is disabled, show products only\n\t\t\t$sql .= \" AND p.fk_product_type = 0\";\n\t\t}\n\t\t// Add criteria on ref/label\n\t\tif ($filterkey != '') {\n\t\t\t$sql .= ' AND (';\n\t\t\t$prefix = empty($conf->global->PRODUCT_DONOTSEARCH_ANYWHERE) ? '%' : ''; // Can use index if PRODUCT_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i = 0;\n\t\t\tif (count($scrit) > 1) {\n\t\t\t\t$sql .= \"(\";\n\t\t\t}\n\t\t\tforeach ($scrit as $crit) {\n\t\t\t\tif ($i > 0) {\n\t\t\t\t\t$sql .= \" AND \";\n\t\t\t\t}\n\t\t\t\t$sql .= \"(p.ref LIKE '\".$this->db->escape($prefix.$crit).\"%' OR p.label LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t\t\t$sql .= \" OR pl.label LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->global->PRODUIT_CUSTOMER_PRICES) && ! empty($socid)) {\n\t\t\t\t\t$sql .= \" OR pcp.ref_customer LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->global->PRODUCT_AJAX_SEARCH_ON_DESCRIPTION)) {\n\t\t\t\t\t$sql .= \" OR p.description LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t\t\t\t$sql .= \" OR pl.description LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->global->MAIN_SEARCH_PRODUCT_BY_FOURN_REF)) {\n\t\t\t\t\t$sql .= \" OR pfp.ref_fourn LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t}\n\t\t\t\t$sql .= \")\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) {\n\t\t\t\t$sql .= \")\";\n\t\t\t}\n\t\t\tif (!empty($conf->barcode->enabled)) {\n\t\t\t\t$sql .= \" OR p.barcode LIKE '\".$this->db->escape($prefix.$filterkey).\"%'\";\n\t\t\t}\n\t\t\t$sql .= ')';\n\t\t}\n\t\tif (count($warehouseStatusArray)) {\n\t\t\t$sql .= \" GROUP BY \".$selectFields;\n\t\t}\n\n\t\t//Sort by category\n\t\tif (!empty($conf->global->PRODUCT_SORT_BY_CATEGORY)) {\n\t\t\t$sql .= \" ORDER BY categorie_product_id \";\n\t\t\t//ASC OR DESC order\n\t\t\t($conf->global->PRODUCT_SORT_BY_CATEGORY == 1) ? $sql .= \"ASC\" : $sql .= \"DESC\";\n\t\t} else {\n\t\t\t$sql .= $this->db->order(\"p.ref\");\n\t\t}\n\n\t\t$sql .= $this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\tdol_syslog(get_class($this).\"::select_produits_list search products\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/dynamic_price/class/price_parser.class.php';\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/product.lib.php';\n\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t$events = null;\n\n\t\t\tif (!$forcecombo) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events, getDolGlobalInt(\"PRODUIT_USE_SEARCH_TO_SELECT\"));\n\t\t\t}\n\n\t\t\t$out .= '<select class=\"flat'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\n\t\t\t$textifempty = '';\n\t\t\t// Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'.\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (!empty($conf->global->PRODUIT_USE_SEARCH_TO_SELECT)) {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) {\n\t\t\t\t\t$textifempty = $langs->trans($showempty);\n\t\t\t\t} else {\n\t\t\t\t\t$textifempty .= $langs->trans(\"All\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) {\n\t\t\t\t\t$textifempty = $langs->trans($showempty);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($showempty) {\n\t\t\t\t$out .= '<option value=\"-1\" selected>'.($textifempty ? $textifempty : '&nbsp;').'</option>';\n\t\t\t}\n\n\t\t\t$i = 0;\n\t\t\twhile ($num && $i < $num) {\n\t\t\t\t$opt = '';\n\t\t\t\t$optJson = array();\n\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\tif ((!empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY) || !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES)) && !empty($objp->price_by_qty) && $objp->price_by_qty == 1) { // Price by quantity will return many prices for the same product\n\t\t\t\t\t$sql = \"SELECT rowid, quantity, price, unitprice, remise_percent, remise, price_base_type\";\n\t\t\t\t\t$sql .= \" FROM \".$this->db->prefix().\"product_price_by_qty\";\n\t\t\t\t\t$sql .= \" WHERE fk_product_price = \".((int) $objp->price_rowid);\n\t\t\t\t\t$sql .= \" ORDER BY quantity ASC\";\n\n\t\t\t\t\tdol_syslog(get_class($this).\"::select_produits_list search prices by qty\", LOG_DEBUG);\n\t\t\t\t\t$result2 = $this->db->query($sql);\n\t\t\t\t\tif ($result2) {\n\t\t\t\t\t\t$nb_prices = $this->db->num_rows($result2);\n\t\t\t\t\t\t$j = 0;\n\t\t\t\t\t\twhile ($nb_prices && $j < $nb_prices) {\n\t\t\t\t\t\t\t$objp2 = $this->db->fetch_object($result2);\n\n\t\t\t\t\t\t\t$objp->price_by_qty_rowid = $objp2->rowid;\n\t\t\t\t\t\t\t$objp->price_by_qty_price_base_type = $objp2->price_base_type;\n\t\t\t\t\t\t\t$objp->price_by_qty_quantity = $objp2->quantity;\n\t\t\t\t\t\t\t$objp->price_by_qty_unitprice = $objp2->unitprice;\n\t\t\t\t\t\t\t$objp->price_by_qty_remise_percent = $objp2->remise_percent;\n\t\t\t\t\t\t\t// For backward compatibility\n\t\t\t\t\t\t\t$objp->quantity = $objp2->quantity;\n\t\t\t\t\t\t\t$objp->price = $objp2->price;\n\t\t\t\t\t\t\t$objp->unitprice = $objp2->unitprice;\n\t\t\t\t\t\t\t$objp->remise_percent = $objp2->remise_percent;\n\t\t\t\t\t\t\t$objp->remise = $objp2->remise;\n\n\t\t\t\t\t\t\t//$objp->tva_tx is not overwritten by $objp2 value\n\t\t\t\t\t\t\t//$objp->default_vat_code is not overwritten by $objp2 value\n\n\t\t\t\t\t\t\t$this->constructProductListOption($objp, $opt, $optJson, 0, $selected, $hidepriceinlabel, $filterkey);\n\n\t\t\t\t\t\t\t$j++;\n\n\t\t\t\t\t\t\t// Add new entry\n\t\t\t\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t\t\t\t$out .= $opt;\n\t\t\t\t\t\t\tarray_push($outarray, $optJson);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($conf->dynamicprices->enabled) && !empty($objp->fk_price_expression)) {\n\t\t\t\t\t\t$price_product = new Product($this->db);\n\t\t\t\t\t\t$price_product->fetch($objp->rowid, '', '', 1);\n\t\t\t\t\t\t$priceparser = new PriceParser($this->db);\n\t\t\t\t\t\t$price_result = $priceparser->parseProduct($price_product);\n\t\t\t\t\t\tif ($price_result >= 0) {\n\t\t\t\t\t\t\t$objp->price = $price_result;\n\t\t\t\t\t\t\t$objp->unitprice = $price_result;\n\t\t\t\t\t\t\t//Calculate the VAT\n\t\t\t\t\t\t\t$objp->price_ttc = price2num($objp->price) * (1 + ($objp->tva_tx / 100));\n\t\t\t\t\t\t\t$objp->price_ttc = price2num($objp->price_ttc, 'MU');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$this->constructProductListOption($objp, $opt, $optJson, $price_level, $selected, $hidepriceinlabel, $filterkey);\n\t\t\t\t\t// Add new entry\n\t\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t\t$out .= $opt;\n\t\t\t\t\tarray_push($outarray, $optJson);\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$out .= '</select>';\n\n\t\t\t$this->db->free($result);\n\n\t\t\tif (empty($outputmode)) {\n\t\t\t\treturn $out;\n\t\t\t}\n\t\t\treturn $outarray;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t * Function to forge the string with OPTIONs of SELECT.\n\t * This define value for &$opt and &$optJson.\n\t * This function is called by select_produits_list().\n\t *\n\t * @param \tresource\t$objp\t\t\t    Resultset of fetch\n\t * @param \tstring\t\t$opt\t\t\t    Option (var used for returned value in string option format)\n\t * @param \tstring\t\t$optJson\t\t    Option (var used for returned value in json format)\n\t * @param \tint\t\t\t$price_level\t    Price level\n\t * @param \tstring\t\t$selected\t\t    Preselected value\n\t * @param   int         $hidepriceinlabel   Hide price in label\n\t * @param   string      $filterkey          Filter key to highlight\n\t * @param\tint\t\t\t$novirtualstock \tDo not load virtual stock, even if slow option STOCK_SHOW_VIRTUAL_STOCK_IN_PRODUCTS_COMBO is on.\n\t * @return\tvoid\n\t */\n\tprotected function constructProductListOption(&$objp, &$opt, &$optJson, $price_level, $selected, $hidepriceinlabel = 0, $filterkey = '', $novirtualstock = 0)\n\t{\n\t\tglobal $langs, $conf, $user;\n\n\t\t$outkey = '';\n\t\t$outval = '';\n\t\t$outref = '';\n\t\t$outlabel = '';\n\t\t$outlabel_translated = '';\n\t\t$outdesc = '';\n\t\t$outdesc_translated = '';\n\t\t$outbarcode = '';\n\t\t$outorigin = '';\n\t\t$outtype = '';\n\t\t$outprice_ht = '';\n\t\t$outprice_ttc = '';\n\t\t$outpricebasetype = '';\n\t\t$outtva_tx = '';\n\t\t$outdefault_vat_code = '';\n\t\t$outqty = 1;\n\t\t$outdiscount = 0;\n\n\t\t$maxlengtharticle = (empty($conf->global->PRODUCT_MAX_LENGTH_COMBO) ? 48 : $conf->global->PRODUCT_MAX_LENGTH_COMBO);\n\n\t\t$label = $objp->label;\n\t\tif (!empty($objp->label_translated)) {\n\t\t\t$label = $objp->label_translated;\n\t\t}\n\t\tif (!empty($filterkey) && $filterkey != '') {\n\t\t\t$label = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $label, 1);\n\t\t}\n\n\t\t$outkey = $objp->rowid;\n\t\t$outref = $objp->ref;\n\t\t$outrefcust = empty($objp->custref) ? '' : $objp->custref;\n\t\t$outlabel = $objp->label;\n\t\t$outdesc = $objp->description;\n\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t$outlabel_translated = $objp->label_translated;\n\t\t\t$outdesc_translated = $objp->description_translated;\n\t\t}\n\t\t$outbarcode = $objp->barcode;\n\t\t$outorigin = $objp->fk_country;\n\t\t$outpbq = empty($objp->price_by_qty_rowid) ? '' : $objp->price_by_qty_rowid;\n\n\t\t$outtype = $objp->fk_product_type;\n\t\t$outdurationvalue = $outtype == Product::TYPE_SERVICE ?substr($objp->duration, 0, dol_strlen($objp->duration) - 1) : '';\n\t\t$outdurationunit = $outtype == Product::TYPE_SERVICE ?substr($objp->duration, -1) : '';\n\n\t\tif ($outorigin && !empty($conf->global->PRODUCT_SHOW_ORIGIN_IN_COMBO)) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\t\t}\n\n\t\t// Units\n\t\t$outvalUnits = '';\n\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\tif (!empty($objp->unit_short)) {\n\t\t\t\t$outvalUnits .= ' - '.$objp->unit_short;\n\t\t\t}\n\t\t}\n\t\tif (!empty($conf->global->PRODUCT_SHOW_DIMENSIONS_IN_COMBO)) {\n\t\t\tif (!empty($objp->weight) && $objp->weight_units !== null) {\n\t\t\t\t$unitToShow = showDimensionInBestUnit($objp->weight, $objp->weight_units, 'weight', $langs);\n\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t}\n\t\t\tif ((!empty($objp->length) || !empty($objp->width) || !empty($objp->height)) && $objp->length_units !== null) {\n\t\t\t\t$unitToShow = $objp->length.' x '.$objp->width.' x '.$objp->height.' '.measuringUnitString(0, 'size', $objp->length_units);\n\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t}\n\t\t\tif (!empty($objp->surface) && $objp->surface_units !== null) {\n\t\t\t\t$unitToShow = showDimensionInBestUnit($objp->surface, $objp->surface_units, 'surface', $langs);\n\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t}\n\t\t\tif (!empty($objp->volume) && $objp->volume_units !== null) {\n\t\t\t\t$unitToShow = showDimensionInBestUnit($objp->volume, $objp->volume_units, 'volume', $langs);\n\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t}\n\t\t}\n\t\tif ($outdurationvalue && $outdurationunit) {\n\t\t\t$da = array(\n\t\t\t\t'h' => $langs->trans('Hour'),\n\t\t\t\t'd' => $langs->trans('Day'),\n\t\t\t\t'w' => $langs->trans('Week'),\n\t\t\t\t'm' => $langs->trans('Month'),\n\t\t\t\t'y' => $langs->trans('Year')\n\t\t\t);\n\t\t\tif (isset($da[$outdurationunit])) {\n\t\t\t\t$outvalUnits .= ' - '.$outdurationvalue.' '.$langs->transnoentities($da[$outdurationunit].($outdurationvalue > 1 ? 's' : ''));\n\t\t\t}\n\t\t}\n\n\t\t$opt = '<option value=\"'.$objp->rowid.'\"';\n\t\t$opt .= ($objp->rowid == $selected) ? ' selected' : '';\n\t\tif (!empty($objp->price_by_qty_rowid) && $objp->price_by_qty_rowid > 0) {\n\t\t\t$opt .= ' pbq=\"'.$objp->price_by_qty_rowid.'\" data-pbq=\"'.$objp->price_by_qty_rowid.'\" data-pbqup=\"'.$objp->price_by_qty_unitprice.'\" data-pbqbase=\"'.$objp->price_by_qty_price_base_type.'\" data-pbqqty=\"'.$objp->price_by_qty_quantity.'\" data-pbqpercent=\"'.$objp->price_by_qty_remise_percent.'\"';\n\t\t}\n\t\tif (!empty($conf->stock->enabled) && isset($objp->stock) && ($objp->fk_product_type == Product::TYPE_PRODUCT || !empty($conf->global->STOCK_SUPPORTS_SERVICES))) {\n\t\t\tif (!empty($user->rights->stock->lire)) {\n\t\t\t\tif ($objp->stock > 0) {\n\t\t\t\t\t$opt .= ' class=\"product_line_stock_ok\"';\n\t\t\t\t} elseif ($objp->stock <= 0) {\n\t\t\t\t\t$opt .= ' class=\"product_line_stock_too_low\"';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!empty($conf->global->PRODUIT_TEXTS_IN_THIRDPARTY_LANGUAGE)) {\n\t\t\t$opt .= ' data-labeltrans=\"'.$outlabel_translated.'\"';\n\t\t\t$opt .= ' data-desctrans=\"'.dol_escape_htmltag($outdesc_translated).'\"';\n\t\t}\n\t\t$opt .= '>';\n\t\t$opt .= $objp->ref;\n\t\tif (! empty($objp->custref)) {\n\t\t\t$opt.= ' (' . $objp->custref . ')';\n\t\t}\n\t\tif ($outbarcode) {\n\t\t\t$opt .= ' ('.$outbarcode.')';\n\t\t}\n\t\t$opt .= ' - '.dol_trunc($label, $maxlengtharticle);\n\t\tif ($outorigin && !empty($conf->global->PRODUCT_SHOW_ORIGIN_IN_COMBO)) {\n\t\t\t$opt .= ' ('.getCountry($outorigin, 1).')';\n\t\t}\n\n\t\t$objRef = $objp->ref;\n\t\tif (! empty($objp->custref)) {\n\t\t\t$objRef .= ' (' . $objp->custref . ')';\n\t\t}\n\t\tif (!empty($filterkey) && $filterkey != '') {\n\t\t\t$objRef = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $objRef, 1);\n\t\t}\n\t\t$outval .= $objRef;\n\t\tif ($outbarcode) {\n\t\t\t$outval .= ' ('.$outbarcode.')';\n\t\t}\n\t\t$outval .= ' - '.dol_trunc($label, $maxlengtharticle);\n\t\tif ($outorigin && !empty($conf->global->PRODUCT_SHOW_ORIGIN_IN_COMBO)) {\n\t\t\t$outval .= ' ('.getCountry($outorigin, 1).')';\n\t\t}\n\n\t\t// Units\n\t\t$opt .= $outvalUnits;\n\t\t$outval .= $outvalUnits;\n\n\t\t$found = 0;\n\n\t\t// Multiprice\n\t\t// If we need a particular price level (from 1 to n)\n\t\tif (empty($hidepriceinlabel) && $price_level >= 1 && (!empty($conf->global->PRODUIT_MULTIPRICES) || !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES))) {\n\t\t\t$sql = \"SELECT price, price_ttc, price_base_type, tva_tx, default_vat_code\";\n\t\t\t$sql .= \" FROM \".$this->db->prefix().\"product_price\";\n\t\t\t$sql .= \" WHERE fk_product = \".((int) $objp->rowid);\n\t\t\t$sql .= \" AND entity IN (\".getEntity('productprice').\")\";\n\t\t\t$sql .= \" AND price_level = \".((int) $price_level);\n\t\t\t$sql .= \" ORDER BY date_price DESC, rowid DESC\"; // Warning DESC must be both on date_price and rowid.\n\t\t\t$sql .= \" LIMIT 1\";\n\n\t\t\tdol_syslog(get_class($this).'::constructProductListOption search price for product '.$objp->rowid.' AND level '.$price_level.'', LOG_DEBUG);\n\t\t\t$result2 = $this->db->query($sql);\n\t\t\tif ($result2) {\n\t\t\t\t$objp2 = $this->db->fetch_object($result2);\n\t\t\t\tif ($objp2) {\n\t\t\t\t\t$found = 1;\n\t\t\t\t\tif ($objp2->price_base_type == 'HT') {\n\t\t\t\t\t\t$opt .= ' - '.price($objp2->price, 1, $langs, 0, 0, -1, $conf->currency).' '.$langs->trans(\"HT\");\n\t\t\t\t\t\t$outval .= ' - '.price($objp2->price, 0, $langs, 0, 0, -1, $conf->currency).' '.$langs->transnoentities(\"HT\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$opt .= ' - '.price($objp2->price_ttc, 1, $langs, 0, 0, -1, $conf->currency).' '.$langs->trans(\"TTC\");\n\t\t\t\t\t\t$outval .= ' - '.price($objp2->price_ttc, 0, $langs, 0, 0, -1, $conf->currency).' '.$langs->transnoentities(\"TTC\");\n\t\t\t\t\t}\n\t\t\t\t\t$outprice_ht = price($objp2->price);\n\t\t\t\t\t$outprice_ttc = price($objp2->price_ttc);\n\t\t\t\t\t$outpricebasetype = $objp2->price_base_type;\n\t\t\t\t\tif (!empty($conf->global->PRODUIT_MULTIPRICES_USE_VAT_PER_LEVEL)) {  // using this option is a bug. kept for backward compatibility\n\t\t\t\t\t\t$outtva_tx = $objp2->tva_tx;\t\t\t\t\t\t// We use the vat rate on line of multiprice\n\t\t\t\t\t\t$outdefault_vat_code = $objp2->default_vat_code;\t// We use the vat code on line of multiprice\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$outtva_tx = $objp->tva_tx;\t\t\t\t\t\t\t// We use the vat rate of product, not the one on line of multiprice\n\t\t\t\t\t\t$outdefault_vat_code = $objp->default_vat_code;\t\t// We use the vat code or product, not the one on line of multiprice\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdol_print_error($this->db);\n\t\t\t}\n\t\t}\n\n\t\t// Price by quantity\n\t\tif (empty($hidepriceinlabel) && !empty($objp->quantity) && $objp->quantity >= 1 && (!empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY) || !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES))) {\n\t\t\t$found = 1;\n\t\t\t$outqty = $objp->quantity;\n\t\t\t$outdiscount = $objp->remise_percent;\n\t\t\tif ($objp->quantity == 1) {\n\t\t\t\t$opt .= ' - '.price($objp->unitprice, 1, $langs, 0, 0, -1, $conf->currency).\"/\";\n\t\t\t\t$outval .= ' - '.price($objp->unitprice, 0, $langs, 0, 0, -1, $conf->currency).\"/\";\n\t\t\t\t$opt .= $langs->trans(\"Unit\"); // Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t$outval .= $langs->transnoentities(\"Unit\");\n\t\t\t} else {\n\t\t\t\t$opt .= ' - '.price($objp->price, 1, $langs, 0, 0, -1, $conf->currency).\"/\".$objp->quantity;\n\t\t\t\t$outval .= ' - '.price($objp->price, 0, $langs, 0, 0, -1, $conf->currency).\"/\".$objp->quantity;\n\t\t\t\t$opt .= $langs->trans(\"Units\"); // Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t$outval .= $langs->transnoentities(\"Units\");\n\t\t\t}\n\n\t\t\t$outprice_ht = price($objp->unitprice);\n\t\t\t$outprice_ttc = price($objp->unitprice * (1 + ($objp->tva_tx / 100)));\n\t\t\t$outpricebasetype = $objp->price_base_type;\n\t\t\t$outtva_tx = $objp->tva_tx;\t\t\t\t\t\t\t// This value is the value on product when constructProductListOption is called by select_produits_list even if other field $objp-> are from table price_by_qty\n\t\t\t$outdefault_vat_code = $objp->default_vat_code;\t\t// This value is the value on product when constructProductListOption is called by select_produits_list even if other field $objp-> are from table price_by_qty\n\t\t}\n\t\tif (empty($hidepriceinlabel) && !empty($objp->quantity) && $objp->quantity >= 1) {\n\t\t\t$opt .= \" (\".price($objp->unitprice, 1, $langs, 0, 0, -1, $conf->currency).\"/\".$langs->trans(\"Unit\").\")\"; // Do not use strtolower because it breaks utf8 encoding\n\t\t\t$outval .= \" (\".price($objp->unitprice, 0, $langs, 0, 0, -1, $conf->currency).\"/\".$langs->transnoentities(\"Unit\").\")\"; // Do not use strtolower because it breaks utf8 encoding\n\t\t}\n\t\tif (empty($hidepriceinlabel) && !empty($objp->remise_percent) && $objp->remise_percent >= 1) {\n\t\t\t$opt .= \" - \".$langs->trans(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t\t$outval .= \" - \".$langs->transnoentities(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t}\n\n\t\t// Price by customer\n\t\tif (empty($hidepriceinlabel) && !empty($conf->global->PRODUIT_CUSTOMER_PRICES)) {\n\t\t\tif (!empty($objp->idprodcustprice)) {\n\t\t\t\t$found = 1;\n\n\t\t\t\tif ($objp->custprice_base_type == 'HT') {\n\t\t\t\t\t$opt .= ' - '.price($objp->custprice, 1, $langs, 0, 0, -1, $conf->currency).' '.$langs->trans(\"HT\");\n\t\t\t\t\t$outval .= ' - '.price($objp->custprice, 0, $langs, 0, 0, -1, $conf->currency).' '.$langs->transnoentities(\"HT\");\n\t\t\t\t} else {\n\t\t\t\t\t$opt .= ' - '.price($objp->custprice_ttc, 1, $langs, 0, 0, -1, $conf->currency).' '.$langs->trans(\"TTC\");\n\t\t\t\t\t$outval .= ' - '.price($objp->custprice_ttc, 0, $langs, 0, 0, -1, $conf->currency).' '.$langs->transnoentities(\"TTC\");\n\t\t\t\t}\n\n\t\t\t\t$outprice_ht = price($objp->custprice);\n\t\t\t\t$outprice_ttc = price($objp->custprice_ttc);\n\t\t\t\t$outpricebasetype = $objp->custprice_base_type;\n\t\t\t\t$outtva_tx = $objp->custtva_tx;\n\t\t\t\t$outdefault_vat_code = $objp->custdefault_vat_code;\n\t\t\t}\n\t\t}\n\n\t\t// If level no defined or multiprice not found, we used the default price\n\t\tif (empty($hidepriceinlabel) && !$found) {\n\t\t\tif ($objp->price_base_type == 'HT') {\n\t\t\t\t$opt .= ' - '.price($objp->price, 1, $langs, 0, 0, -1, $conf->currency).' '.$langs->trans(\"HT\");\n\t\t\t\t$outval .= ' - '.price($objp->price, 0, $langs, 0, 0, -1, $conf->currency).' '.$langs->transnoentities(\"HT\");\n\t\t\t} else {\n\t\t\t\t$opt .= ' - '.price($objp->price_ttc, 1, $langs, 0, 0, -1, $conf->currency).' '.$langs->trans(\"TTC\");\n\t\t\t\t$outval .= ' - '.price($objp->price_ttc, 0, $langs, 0, 0, -1, $conf->currency).' '.$langs->transnoentities(\"TTC\");\n\t\t\t}\n\t\t\t$outprice_ht = price($objp->price);\n\t\t\t$outprice_ttc = price($objp->price_ttc);\n\t\t\t$outpricebasetype = $objp->price_base_type;\n\t\t\t$outtva_tx = $objp->tva_tx;\n\t\t\t$outdefault_vat_code = $objp->default_vat_code;\n\t\t}\n\n\t\tif (!empty($conf->stock->enabled) && isset($objp->stock) && ($objp->fk_product_type == Product::TYPE_PRODUCT || !empty($conf->global->STOCK_SUPPORTS_SERVICES))) {\n\t\t\tif (!empty($user->rights->stock->lire)) {\n\t\t\t\t$opt .= ' - '.$langs->trans(\"Stock\").': '.price(price2num($objp->stock, 'MS'));\n\n\t\t\t\tif ($objp->stock > 0) {\n\t\t\t\t\t$outval .= ' - <span class=\"product_line_stock_ok\">';\n\t\t\t\t} elseif ($objp->stock <= 0) {\n\t\t\t\t\t$outval .= ' - <span class=\"product_line_stock_too_low\">';\n\t\t\t\t}\n\t\t\t\t$outval .= $langs->transnoentities(\"Stock\").': '.price(price2num($objp->stock, 'MS'));\n\t\t\t\t$outval .= '</span>';\n\t\t\t\tif (empty($novirtualstock) && !empty($conf->global->STOCK_SHOW_VIRTUAL_STOCK_IN_PRODUCTS_COMBO)) {  // Warning, this option may slow down combo list generation\n\t\t\t\t\t$langs->load(\"stocks\");\n\n\t\t\t\t\t$tmpproduct = new Product($this->db);\n\t\t\t\t\t$tmpproduct->fetch($objp->rowid, '', '', '', 1, 1, 1); // Load product without lang and prices arrays (we just need to make ->virtual_stock() after)\n\t\t\t\t\t$tmpproduct->load_virtual_stock();\n\t\t\t\t\t$virtualstock = $tmpproduct->stock_theorique;\n\n\t\t\t\t\t$opt .= ' - '.$langs->trans(\"VirtualStock\").':'.$virtualstock;\n\n\t\t\t\t\t$outval .= ' - '.$langs->transnoentities(\"VirtualStock\").':';\n\t\t\t\t\tif ($virtualstock > 0) {\n\t\t\t\t\t\t$outval .= '<span class=\"product_line_stock_ok\">';\n\t\t\t\t\t} elseif ($virtualstock <= 0) {\n\t\t\t\t\t\t$outval .= '<span class=\"product_line_stock_too_low\">';\n\t\t\t\t\t}\n\t\t\t\t\t$outval .= $virtualstock;\n\t\t\t\t\t$outval .= '</span>';\n\n\t\t\t\t\tunset($tmpproduct);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$opt .= \"</option>\\n\";\n\t\t$optJson = array(\n\t\t\t'key'=>$outkey,\n\t\t\t'value'=>$outref,\n\t\t\t'label'=>$outval,\n\t\t\t'label2'=>$outlabel,\n\t\t\t'desc'=>$outdesc,\n\t\t\t'type'=>$outtype,\n\t\t\t'price_ht'=>price2num($outprice_ht),\n\t\t\t'price_ttc'=>price2num($outprice_ttc),\n\t\t\t'pricebasetype'=>$outpricebasetype,\n\t\t\t'tva_tx'=>$outtva_tx,\n\t\t\t'default_vat_code'=>$outdefault_vat_code,\n\t\t\t'qty'=>$outqty,\n\t\t\t'discount'=>$outdiscount,\n\t\t\t'duration_value'=>$outdurationvalue,\n\t\t\t'duration_unit'=>$outdurationunit,\n\t\t\t'pbq'=>$outpbq,\n\t\t\t'labeltrans'=>$outlabel_translated,\n\t\t\t'desctrans'=>$outdesc_translated,\n\t\t\t'ref_customer'=>$outrefcust\n\t\t);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn list of products for customer (in Ajax if Ajax activated or go to select_produits_fournisseurs_list)\n\t *\n\t *\t@param\tint\t\t$socid\t\t\tId third party\n\t *\t@param  string\t$selected       Preselected product\n\t *\t@param  string\t$htmlname       Name of HTML Select\n\t *  @param\tstring\t$filtertype     Filter on product type (''=nofilter, 0=product, 1=service)\n\t *\t@param  string\t$filtre\t\t\tFor a SQL filter\n\t *\t@param\tarray\t$ajaxoptions\tOptions for ajax_autocompleter\n\t *  @param\tint\t\t$hidelabel\t\tHide label (0=no, 1=yes)\n\t *  @param  int     $alsoproductwithnosupplierprice    1=Add also product without supplier prices\n\t *  @param\tstring\t$morecss\t\tMore CSS\n\t *  @param\tstring\t$placeholder\tPlaceholder\n\t *\t@return\tvoid\n\t */\n\tpublic function select_produits_fournisseurs($socid, $selected = '', $htmlname = 'productid', $filtertype = '', $filtre = '', $ajaxoptions = array(), $hidelabel = 0, $alsoproductwithnosupplierprice = 0, $morecss = '', $placeholder = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\t\tglobal $price_level, $status, $finished;\n\n\t\tif (!isset($status)) {\n\t\t\t$status = 1;\n\t\t}\n\n\t\t$selected_input_value = '';\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->PRODUIT_USE_SEARCH_TO_SELECT)) {\n\t\t\tif ($selected > 0) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t\t\t\t$producttmpselect = new Product($this->db);\n\t\t\t\t$producttmpselect->fetch($selected);\n\t\t\t\t$selected_input_value = $producttmpselect->ref;\n\t\t\t\tunset($producttmpselect);\n\t\t\t}\n\n\t\t\t// mode=2 means suppliers products\n\t\t\t$urloption = ($socid > 0 ? 'socid='.$socid.'&' : '').'htmlname='.$htmlname.'&outjson=1&price_level='.$price_level.'&type='.$filtertype.'&mode=2&status='.$status.'&finished='.$finished.'&alsoproductwithnosupplierprice='.$alsoproductwithnosupplierprice;\n\t\t\tprint ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/product/ajax/products.php', $urloption, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT, 0, $ajaxoptions);\n\t\t\tprint ($hidelabel ? '' : $langs->trans(\"RefOrLabel\").' : ').'<input type=\"text\" class=\"minwidth300\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.($placeholder ? ' placeholder=\"'.$placeholder.'\"' : '').'>';\n\t\t} else {\n\t\t\tprint $this->select_produits_fournisseurs_list($socid, $selected, $htmlname, $filtertype, $filtre, '', $status, 0, 0, $alsoproductwithnosupplierprice, $morecss, 0, $placeholder);\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn list of suppliers products\n\t *\n\t *\t@param\tint\t\t$socid   \t\t\tId of supplier thirdparty (0 = no filter)\n\t *\t@param  int\t\t$selected       \tProduct price pre-selected (must be 'id' in product_fournisseur_price or 'idprod_IDPROD')\n\t *\t@param  string\t$htmlname       \tName of HTML select\n\t *  @param\tstring\t$filtertype     \tFilter on product type (''=nofilter, 0=product, 1=service)\n\t *\t@param  string\t$filtre         \tGeneric filter. Data must not come from user input.\n\t *\t@param  string\t$filterkey      \tFilter of produdts\n\t *  @param  int\t\t$statut         \t-1=Return all products, 0=Products not on buy, 1=Products on buy\n\t *  @param  int\t\t$outputmode     \t0=HTML select string, 1=Array\n\t *  @param  int     $limit          \tLimit of line number\n\t *  @param  int     $alsoproductwithnosupplierprice    1=Add also product without supplier prices\n\t *  @param\tstring\t$morecss\t\t\tAdd more CSS\n\t *  @param\tint\t\t$showstockinlist\tShow stock information (slower).\n\t *  @param\tstring\t$placeholder\t\tPlaceholder\n\t *  @return array           \t\t\tArray of keys for json\n\t */\n\tpublic function select_produits_fournisseurs_list($socid, $selected = '', $htmlname = 'productid', $filtertype = '', $filtre = '', $filterkey = '', $statut = -1, $outputmode = 0, $limit = 100, $alsoproductwithnosupplierprice = 0, $morecss = '', $showstockinlist = 0, $placeholder = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf, $user;\n\n\t\t$out = '';\n\t\t$outarray = array();\n\n\t\t$maxlengtharticle = (empty($conf->global->PRODUCT_MAX_LENGTH_COMBO) ? 48 : $conf->global->PRODUCT_MAX_LENGTH_COMBO);\n\n\t\t$langs->load('stocks');\n\t\t// Units\n\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\t$langs->load('other');\n\t\t}\n\n\t\t$sql = \"SELECT p.rowid, p.ref, p.label, p.price, p.duration, p.fk_product_type, p.stock,\";\n\t\t$sql .= \" pfp.ref_fourn, pfp.rowid as idprodfournprice, pfp.price as fprice, pfp.quantity, pfp.remise_percent, pfp.remise, pfp.unitprice,\";\n\t\t$sql .= \" pfp.fk_supplier_price_expression, pfp.fk_product, pfp.tva_tx, pfp.default_vat_code, pfp.fk_soc, s.nom as name,\";\n\t\t$sql .= \" pfp.supplier_reputation\";\n\t\t// if we use supplier description of the products\n\t\tif (!empty($conf->global->PRODUIT_FOURN_TEXTS)) {\n\t\t\t$sql .= \" ,pfp.desc_fourn as description\";\n\t\t} else {\n\t\t\t$sql .= \" ,p.description\";\n\t\t}\n\t\t// Units\n\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\t$sql .= \", u.label as unit_long, u.short_label as unit_short, p.weight, p.weight_units, p.length, p.length_units, p.width, p.width_units, p.height, p.height_units, p.surface, p.surface_units, p.volume, p.volume_units\";\n\t\t}\n\t\tif (!empty($conf->barcode->enabled)) {\n\t\t\t$sql .= \", pfp.barcode\";\n\t\t}\n\t\t$sql .= \" FROM \".$this->db->prefix().\"product as p\";\n\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"product_fournisseur_price as pfp ON ( p.rowid = pfp.fk_product AND pfp.entity IN (\".getEntity('product').\") )\";\n\t\tif ($socid > 0) {\n\t\t\t$sql .= \" AND pfp.fk_soc = \".((int) $socid);\n\t\t}\n\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"societe as s ON pfp.fk_soc = s.rowid\";\n\t\t// Units\n\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"c_units u ON u.rowid = p.fk_unit\";\n\t\t}\n\t\t$sql .= \" WHERE p.entity IN (\".getEntity('product').\")\";\n\t\tif ($statut != -1) {\n\t\t\t$sql .= \" AND p.tobuy = \".((int) $statut);\n\t\t}\n\t\tif (strval($filtertype) != '') {\n\t\t\t$sql .= \" AND p.fk_product_type = \".((int) $filtertype);\n\t\t}\n\t\tif (!empty($filtre)) {\n\t\t\t$sql .= \" \".$filtre;\n\t\t}\n\t\t// Add criteria on ref/label\n\t\tif ($filterkey != '') {\n\t\t\t$sql .= ' AND (';\n\t\t\t$prefix = empty($conf->global->PRODUCT_DONOTSEARCH_ANYWHERE) ? '%' : ''; // Can use index if PRODUCT_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i = 0;\n\t\t\tif (count($scrit) > 1) {\n\t\t\t\t$sql .= \"(\";\n\t\t\t}\n\t\t\tforeach ($scrit as $crit) {\n\t\t\t\tif ($i > 0) {\n\t\t\t\t\t$sql .= \" AND \";\n\t\t\t\t}\n\t\t\t\t$sql .= \"(pfp.ref_fourn LIKE '\".$this->db->escape($prefix.$crit).\"%' OR p.ref LIKE '\".$this->db->escape($prefix.$crit).\"%' OR p.label LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\tif (!empty($conf->global->PRODUIT_FOURN_TEXTS)) {\n\t\t\t\t\t$sql .= \" OR pfp.desc_fourn LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t}\n\t\t\t\t$sql .= \")\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) {\n\t\t\t\t$sql .= \")\";\n\t\t\t}\n\t\t\tif (!empty($conf->barcode->enabled)) {\n\t\t\t\t$sql .= \" OR p.barcode LIKE '\".$this->db->escape($prefix.$filterkey).\"%'\";\n\t\t\t\t$sql .= \" OR pfp.barcode LIKE '\".$this->db->escape($prefix.$filterkey).\"%'\";\n\t\t\t}\n\t\t\t$sql .= ')';\n\t\t}\n\t\t$sql .= \" ORDER BY pfp.ref_fourn DESC, pfp.quantity ASC\";\n\t\t$sql .= $this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\n\t\tdol_syslog(get_class($this).\"::select_produits_fournisseurs_list\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/dynamic_price/class/price_parser.class.php';\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/product.lib.php';\n\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t//$out.='<select class=\"flat\" id=\"select'.$htmlname.'\" name=\"'.$htmlname.'\">';\t// remove select to have id same with combo and ajax\n\t\t\t$out .= '<select class=\"flat '.($morecss ? ' '.$morecss : '').'\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t\tif (!$selected) {\n\t\t\t\t$out .= '<option value=\"-1\" selected>'.($placeholder ? $placeholder : '&nbsp;').'</option>';\n\t\t\t} else {\n\t\t\t\t$out .= '<option value=\"-1\">'.($placeholder ? $placeholder : '&nbsp;').'</option>';\n\t\t\t}\n\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num) {\n\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\t$outkey = $objp->idprodfournprice; // id in table of price\n\t\t\t\tif (!$outkey && $alsoproductwithnosupplierprice) {\n\t\t\t\t\t$outkey = 'idprod_'.$objp->rowid; // id of product\n\t\t\t\t}\n\n\t\t\t\t$outref = $objp->ref;\n\t\t\t\t$outval = '';\n\t\t\t\t$outbarcode = $objp->barcode;\n\t\t\t\t$outqty = 1;\n\t\t\t\t$outdiscount = 0;\n\t\t\t\t$outtype = $objp->fk_product_type;\n\t\t\t\t$outdurationvalue = $outtype == Product::TYPE_SERVICE ?substr($objp->duration, 0, dol_strlen($objp->duration) - 1) : '';\n\t\t\t\t$outdurationunit = $outtype == Product::TYPE_SERVICE ?substr($objp->duration, -1) : '';\n\n\t\t\t\t// Units\n\t\t\t\t$outvalUnits = '';\n\t\t\t\tif (!empty($conf->global->PRODUCT_USE_UNITS)) {\n\t\t\t\t\tif (!empty($objp->unit_short)) {\n\t\t\t\t\t\t$outvalUnits .= ' - '.$objp->unit_short;\n\t\t\t\t\t}\n\t\t\t\t\tif (!empty($objp->weight) && $objp->weight_units !== null) {\n\t\t\t\t\t\t$unitToShow = showDimensionInBestUnit($objp->weight, $objp->weight_units, 'weight', $langs);\n\t\t\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t\t\t}\n\t\t\t\t\tif ((!empty($objp->length) || !empty($objp->width) || !empty($objp->height)) && $objp->length_units !== null) {\n\t\t\t\t\t\t$unitToShow = $objp->length.' x '.$objp->width.' x '.$objp->height.' '.measuringUnitString(0, 'size', $objp->length_units);\n\t\t\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t\t\t}\n\t\t\t\t\tif (!empty($objp->surface) && $objp->surface_units !== null) {\n\t\t\t\t\t\t$unitToShow = showDimensionInBestUnit($objp->surface, $objp->surface_units, 'surface', $langs);\n\t\t\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t\t\t}\n\t\t\t\t\tif (!empty($objp->volume) && $objp->volume_units !== null) {\n\t\t\t\t\t\t$unitToShow = showDimensionInBestUnit($objp->volume, $objp->volume_units, 'volume', $langs);\n\t\t\t\t\t\t$outvalUnits .= ' - '.$unitToShow;\n\t\t\t\t\t}\n\t\t\t\t\tif ($outdurationvalue && $outdurationunit) {\n\t\t\t\t\t\t$da = array(\n\t\t\t\t\t\t\t'h' => $langs->trans('Hour'),\n\t\t\t\t\t\t\t'd' => $langs->trans('Day'),\n\t\t\t\t\t\t\t'w' => $langs->trans('Week'),\n\t\t\t\t\t\t\t'm' => $langs->trans('Month'),\n\t\t\t\t\t\t\t'y' => $langs->trans('Year')\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (isset($da[$outdurationunit])) {\n\t\t\t\t\t\t\t$outvalUnits .= ' - '.$outdurationvalue.' '.$langs->transnoentities($da[$outdurationunit].($outdurationvalue > 1 ? 's' : ''));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$objRef = $objp->ref;\n\t\t\t\tif ($filterkey && $filterkey != '') {\n\t\t\t\t\t$objRef = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $objRef, 1);\n\t\t\t\t}\n\t\t\t\t$objRefFourn = $objp->ref_fourn;\n\t\t\t\tif ($filterkey && $filterkey != '') {\n\t\t\t\t\t$objRefFourn = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $objRefFourn, 1);\n\t\t\t\t}\n\t\t\t\t$label = $objp->label;\n\t\t\t\tif ($filterkey && $filterkey != '') {\n\t\t\t\t\t$label = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $label, 1);\n\t\t\t\t}\n\n\t\t\t\t$optlabel = $objp->ref;\n\t\t\t\tif (!empty($objp->idprodfournprice) && ($objp->ref != $objp->ref_fourn)) {\n\t\t\t\t\t$optlabel .= ' <span class=\"opacitymedium\">('.$objp->ref_fourn.')</span>';\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->barcode->enabled) && !empty($objp->barcode)) {\n\t\t\t\t\t$optlabel .= ' ('.$outbarcode.')';\n\t\t\t\t}\n\t\t\t\t$optlabel .= ' - '.dol_trunc($label, $maxlengtharticle);\n\n\t\t\t\t$outvallabel = $objRef;\n\t\t\t\tif (!empty($objp->idprodfournprice) && ($objp->ref != $objp->ref_fourn)) {\n\t\t\t\t\t$outvallabel .= ' ('.$objRefFourn.')';\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->barcode->enabled) && !empty($objp->barcode)) {\n\t\t\t\t\t$outvallabel .= ' ('.$outbarcode.')';\n\t\t\t\t}\n\t\t\t\t$outvallabel .= ' - '.dol_trunc($label, $maxlengtharticle);\n\n\t\t\t\t// Units\n\t\t\t\t$optlabel .= $outvalUnits;\n\t\t\t\t$outvallabel .= $outvalUnits;\n\n\t\t\t\tif (!empty($objp->idprodfournprice)) {\n\t\t\t\t\t$outqty = $objp->quantity;\n\t\t\t\t\t$outdiscount = $objp->remise_percent;\n\t\t\t\t\tif (!empty($conf->dynamicprices->enabled) && !empty($objp->fk_supplier_price_expression)) {\n\t\t\t\t\t\t$prod_supplier = new ProductFournisseur($this->db);\n\t\t\t\t\t\t$prod_supplier->product_fourn_price_id = $objp->idprodfournprice;\n\t\t\t\t\t\t$prod_supplier->id = $objp->fk_product;\n\t\t\t\t\t\t$prod_supplier->fourn_qty = $objp->quantity;\n\t\t\t\t\t\t$prod_supplier->fourn_tva_tx = $objp->tva_tx;\n\t\t\t\t\t\t$prod_supplier->fk_supplier_price_expression = $objp->fk_supplier_price_expression;\n\t\t\t\t\t\t$priceparser = new PriceParser($this->db);\n\t\t\t\t\t\t$price_result = $priceparser->parseProductSupplier($prod_supplier);\n\t\t\t\t\t\tif ($price_result >= 0) {\n\t\t\t\t\t\t\t$objp->fprice = $price_result;\n\t\t\t\t\t\t\tif ($objp->quantity >= 1) {\n\t\t\t\t\t\t\t\t$objp->unitprice = $objp->fprice / $objp->quantity; // Replace dynamically unitprice\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->quantity == 1) {\n\t\t\t\t\t\t$optlabel .= ' - '.price($objp->fprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 1, $langs, 0, 0, -1, $conf->currency).\"/\";\n\t\t\t\t\t\t$outvallabel .= ' - '.price($objp->fprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 0, $langs, 0, 0, -1, $conf->currency).\"/\";\n\t\t\t\t\t\t$optlabel .= $langs->trans(\"Unit\"); // Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t\t$outvallabel .= $langs->transnoentities(\"Unit\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$optlabel .= ' - '.price($objp->fprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 1, $langs, 0, 0, -1, $conf->currency).\"/\".$objp->quantity;\n\t\t\t\t\t\t$outvallabel .= ' - '.price($objp->fprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 0, $langs, 0, 0, -1, $conf->currency).\"/\".$objp->quantity;\n\t\t\t\t\t\t$optlabel .= ' '.$langs->trans(\"Units\"); // Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t\t$outvallabel .= ' '.$langs->transnoentities(\"Units\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($objp->quantity > 1) {\n\t\t\t\t\t\t$optlabel .= \" (\".price($objp->unitprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 1, $langs, 0, 0, -1, $conf->currency).\"/\".$langs->trans(\"Unit\").\")\"; // Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t\t$outvallabel .= \" (\".price($objp->unitprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 0, $langs, 0, 0, -1, $conf->currency).\"/\".$langs->transnoentities(\"Unit\").\")\"; // Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->remise_percent >= 1) {\n\t\t\t\t\t\t$optlabel .= \" - \".$langs->trans(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t\t\t\t\t$outvallabel .= \" - \".$langs->transnoentities(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->duration) {\n\t\t\t\t\t\t$optlabel .= \" - \".$objp->duration;\n\t\t\t\t\t\t$outvallabel .= \" - \".$objp->duration;\n\t\t\t\t\t}\n\t\t\t\t\tif (!$socid) {\n\t\t\t\t\t\t$optlabel .= \" - \".dol_trunc($objp->name, 8);\n\t\t\t\t\t\t$outvallabel .= \" - \".dol_trunc($objp->name, 8);\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->supplier_reputation) {\n\t\t\t\t\t\t//TODO dictionary\n\t\t\t\t\t\t$reputations = array(''=>$langs->trans('Standard'), 'FAVORITE'=>$langs->trans('Favorite'), 'NOTTHGOOD'=>$langs->trans('NotTheGoodQualitySupplier'), 'DONOTORDER'=>$langs->trans('DoNotOrderThisProductToThisSupplier'));\n\n\t\t\t\t\t\t$optlabel .= \" - \".$reputations[$objp->supplier_reputation];\n\t\t\t\t\t\t$outvallabel .= \" - \".$reputations[$objp->supplier_reputation];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (empty($alsoproductwithnosupplierprice)) {     // No supplier price defined for couple product/supplier\n\t\t\t\t\t\t$optlabel .= \" - <span class='opacitymedium'>\".$langs->trans(\"NoPriceDefinedForThisSupplier\").'</span>';\n\t\t\t\t\t\t$outvallabel .= ' - '.$langs->transnoentities(\"NoPriceDefinedForThisSupplier\");\n\t\t\t\t\t} else // No supplier price defined for product, even on other suppliers\n\t\t\t\t\t{\n\t\t\t\t\t\t$optlabel .= \" - <span class='opacitymedium'>\".$langs->trans(\"NoPriceDefinedForThisSupplier\").'</span>';\n\t\t\t\t\t\t$outvallabel .= ' - '.$langs->transnoentities(\"NoPriceDefinedForThisSupplier\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!empty($conf->stock->enabled) && $showstockinlist && isset($objp->stock) && ($objp->fk_product_type == Product::TYPE_PRODUCT || !empty($conf->global->STOCK_SUPPORTS_SERVICES))) {\n\t\t\t\t\t$novirtualstock = ($showstockinlist == 2);\n\n\t\t\t\t\tif (!empty($user->rights->stock->lire)) {\n\t\t\t\t\t\t$outvallabel .= ' - '.$langs->trans(\"Stock\").': '.price(price2num($objp->stock, 'MS'));\n\n\t\t\t\t\t\tif ($objp->stock > 0) {\n\t\t\t\t\t\t\t$optlabel .= ' - <span class=\"product_line_stock_ok\">';\n\t\t\t\t\t\t} elseif ($objp->stock <= 0) {\n\t\t\t\t\t\t\t$optlabel .= ' - <span class=\"product_line_stock_too_low\">';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$optlabel .= $langs->transnoentities(\"Stock\").':'.price(price2num($objp->stock, 'MS'));\n\t\t\t\t\t\t$optlabel .= '</span>';\n\t\t\t\t\t\tif (empty($novirtualstock) && !empty($conf->global->STOCK_SHOW_VIRTUAL_STOCK_IN_PRODUCTS_COMBO)) {  // Warning, this option may slow down combo list generation\n\t\t\t\t\t\t\t$langs->load(\"stocks\");\n\n\t\t\t\t\t\t\t$tmpproduct = new Product($this->db);\n\t\t\t\t\t\t\t$tmpproduct->fetch($objp->rowid, '', '', '', 1, 1, 1); // Load product without lang and prices arrays (we just need to make ->virtual_stock() after)\n\t\t\t\t\t\t\t$tmpproduct->load_virtual_stock();\n\t\t\t\t\t\t\t$virtualstock = $tmpproduct->stock_theorique;\n\n\t\t\t\t\t\t\t$outvallabel .= ' - '.$langs->trans(\"VirtualStock\").':'.$virtualstock;\n\n\t\t\t\t\t\t\t$optlabel .= ' - '.$langs->transnoentities(\"VirtualStock\").':';\n\t\t\t\t\t\t\tif ($virtualstock > 0) {\n\t\t\t\t\t\t\t\t$optlabel .= '<span class=\"product_line_stock_ok\">';\n\t\t\t\t\t\t\t} elseif ($virtualstock <= 0) {\n\t\t\t\t\t\t\t\t$optlabel .= '<span class=\"product_line_stock_too_low\">';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$optlabel .= $virtualstock;\n\t\t\t\t\t\t\t$optlabel .= '</span>';\n\n\t\t\t\t\t\t\tunset($tmpproduct);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$opt = '<option value=\"'.$outkey.'\"';\n\t\t\t\tif ($selected && $selected == $objp->idprodfournprice) {\n\t\t\t\t\t$opt .= ' selected';\n\t\t\t\t}\n\t\t\t\tif (empty($objp->idprodfournprice) && empty($alsoproductwithnosupplierprice)) {\n\t\t\t\t\t$opt .= ' disabled';\n\t\t\t\t}\n\t\t\t\tif (!empty($objp->idprodfournprice) && $objp->idprodfournprice > 0) {\n\t\t\t\t\t$opt .= ' data-product-id=\"'.$objp->rowid.'\" data-price-id=\"'.$objp->idprodfournprice.'\" data-qty=\"'.$objp->quantity.'\" data-up=\"'.$objp->unitprice.'\" data-discount=\"'.$outdiscount.'\"';\n\t\t\t\t}\n\t\t\t\t$opt .= ' data-description=\"'.dol_escape_htmltag($objp->description, 0, 1).'\"';\n\t\t\t\t$opt .= ' data-html=\"'.dol_escape_htmltag($optlabel).'\"';\n\t\t\t\t$opt .= '>';\n\n\t\t\t\t$opt .= $optlabel;\n\t\t\t\t$outval .= $outvallabel;\n\n\t\t\t\t$opt .= \"</option>\\n\";\n\n\t\t\t\t// Add new entry\n\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value. Example: 'type' = product or service, 'price_ht' = unit price without tax\n\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t$out .= $opt;\n\t\t\t\tarray_push(\n\t\t\t\t\t$outarray,\n\t\t\t\t\tarray('key'=>$outkey,\n\t\t\t\t\t\t'value'=>$outref,\n\t\t\t\t\t\t'label'=>$outval,\n\t\t\t\t\t\t'qty'=>$outqty,\n\t\t\t\t\t\t'price_qty_ht'=>price2num($objp->fprice, 'MU'),\t// Keep higher resolution for price for the min qty\n\t\t\t\t\t\t'price_unit_ht'=>price2num($objp->unitprice, 'MU'),\t// This is used to fill the Unit Price\n\t\t\t\t\t\t'price_ht'=>price2num($objp->unitprice, 'MU'),\t\t// This is used to fill the Unit Price (for compatibility)\n\t\t\t\t\t\t'tva_tx'=>$objp->tva_tx,\n\t\t\t\t\t\t'default_vat_code'=>$objp->default_vat_code,\n\t\t\t\t\t\t'discount'=>$outdiscount,\n\t\t\t\t\t\t'type'=>$outtype,\n\t\t\t\t\t\t'duration_value'=>$outdurationvalue,\n\t\t\t\t\t\t'duration_unit'=>$outdurationunit,\n\t\t\t\t\t\t'disabled'=>(empty($objp->idprodfournprice) ? true : false),\n\t\t\t\t\t\t'description'=>$objp->description\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\t// Exemple of var_dump $outarray\n\t\t\t\t// array(1) {[0]=>array(6) {[key\"]=>string(1) \"2\" [\"value\"]=>string(3) \"ppp\"\n\t\t\t\t//           [\"label\"]=>string(76) \"ppp (<strong>f</strong>ff2) - ppp - 20,00 Euros/1unit\u00e9 (20,00 Euros/unit\u00e9)\"\n\t\t\t\t//      \t [\"qty\"]=>string(1) \"1\" [\"discount\"]=>string(1) \"0\" [\"disabled\"]=>bool(false)\n\t\t\t\t//}\n\t\t\t\t//var_dump($outval); var_dump(utf8_check($outval)); var_dump(json_encode($outval));\n\t\t\t\t//$outval=array('label'=>'ppp (<strong>f</strong>ff2) - ppp - 20,00 Euros/ Unit\u00e9 (20,00 Euros/unit\u00e9)');\n\t\t\t\t//var_dump($outval); var_dump(utf8_check($outval)); var_dump(json_encode($outval));\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\t$out .= '</select>';\n\n\t\t\t$this->db->free($result);\n\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t$out .= ajax_combobox($htmlname);\n\n\t\t\tif (empty($outputmode)) {\n\t\t\t\treturn $out;\n\t\t\t}\n\t\t\treturn $outarray;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn list of suppliers prices for a product\n\t *\n\t *  @param\t    int\t\t$productid       \tId of product\n\t *  @param      string\t$htmlname        \tName of HTML field\n\t *  @param      int\t\t$selected_supplier  Pre-selected supplier if more than 1 result\n\t *  @return\t    string\n\t */\n\tpublic function select_product_fourn_price($productid, $htmlname = 'productfournpriceid', $selected_supplier = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\n\t\t$langs->load('stocks');\n\n\t\t$sql = \"SELECT p.rowid, p.ref, p.label, p.price, p.duration, pfp.fk_soc,\";\n\t\t$sql .= \" pfp.ref_fourn, pfp.rowid as idprodfournprice, pfp.price as fprice, pfp.remise_percent, pfp.quantity, pfp.unitprice,\";\n\t\t$sql .= \" pfp.fk_supplier_price_expression, pfp.fk_product, pfp.tva_tx, s.nom as name\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"product as p\";\n\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"product_fournisseur_price as pfp ON p.rowid = pfp.fk_product\";\n\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"societe as s ON pfp.fk_soc = s.rowid\";\n\t\t$sql .= \" WHERE pfp.entity IN (\".getEntity('productsupplierprice').\")\";\n\t\t$sql .= \" AND p.tobuy = 1\";\n\t\t$sql .= \" AND s.fournisseur = 1\";\n\t\t$sql .= \" AND p.rowid = \".((int) $productid);\n\t\t$sql .= \" ORDER BY s.nom, pfp.ref_fourn DESC\";\n\n\t\tdol_syslog(get_class($this).\"::select_product_fourn_price\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\n\t\tif ($result) {\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t$form = '<select class=\"flat\" id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\n\t\t\tif (!$num) {\n\t\t\t\t$form .= '<option value=\"0\">-- '.$langs->trans(\"NoSupplierPriceDefinedForThisProduct\").' --</option>';\n\t\t\t} else {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/dynamic_price/class/price_parser.class.php';\n\t\t\t\t$form .= '<option value=\"0\">&nbsp;</option>';\n\n\t\t\t\t$i = 0;\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\t\t$opt = '<option value=\"'.$objp->idprodfournprice.'\"';\n\t\t\t\t\t//if there is only one supplier, preselect it\n\t\t\t\t\tif ($num == 1 || ($selected_supplier > 0 && $objp->fk_soc == $selected_supplier)) {\n\t\t\t\t\t\t$opt .= ' selected';\n\t\t\t\t\t}\n\t\t\t\t\t$opt .= '>'.$objp->name.' - '.$objp->ref_fourn.' - ';\n\n\t\t\t\t\tif (!empty($conf->dynamicprices->enabled) && !empty($objp->fk_supplier_price_expression)) {\n\t\t\t\t\t\t$prod_supplier = new ProductFournisseur($this->db);\n\t\t\t\t\t\t$prod_supplier->product_fourn_price_id = $objp->idprodfournprice;\n\t\t\t\t\t\t$prod_supplier->id = $productid;\n\t\t\t\t\t\t$prod_supplier->fourn_qty = $objp->quantity;\n\t\t\t\t\t\t$prod_supplier->fourn_tva_tx = $objp->tva_tx;\n\t\t\t\t\t\t$prod_supplier->fk_supplier_price_expression = $objp->fk_supplier_price_expression;\n\t\t\t\t\t\t$priceparser = new PriceParser($this->db);\n\t\t\t\t\t\t$price_result = $priceparser->parseProductSupplier($prod_supplier);\n\t\t\t\t\t\tif ($price_result >= 0) {\n\t\t\t\t\t\t\t$objp->fprice = $price_result;\n\t\t\t\t\t\t\tif ($objp->quantity >= 1) {\n\t\t\t\t\t\t\t\t$objp->unitprice = $objp->fprice / $objp->quantity;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->quantity == 1) {\n\t\t\t\t\t\t$opt .= price($objp->fprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 1, $langs, 0, 0, -1, $conf->currency).\"/\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$opt .= $objp->quantity.' ';\n\n\t\t\t\t\tif ($objp->quantity == 1) {\n\t\t\t\t\t\t$opt .= $langs->trans(\"Unit\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$opt .= $langs->trans(\"Units\");\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->quantity > 1) {\n\t\t\t\t\t\t$opt .= \" - \";\n\t\t\t\t\t\t$opt .= price($objp->unitprice * (!empty($conf->global->DISPLAY_DISCOUNTED_SUPPLIER_PRICE) ? (1 - $objp->remise_percent / 100) : 1), 1, $langs, 0, 0, -1, $conf->currency).\"/\".$langs->trans(\"Unit\");\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->duration) {\n\t\t\t\t\t\t$opt .= \" - \".$objp->duration;\n\t\t\t\t\t}\n\t\t\t\t\t$opt .= \"</option>\\n\";\n\n\t\t\t\t\t$form .= $opt;\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$form .= '</select>';\n\t\t\t$this->db->free($result);\n\t\t\treturn $form;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Return list of delivery address\n\t *\n\t *    @param    string\t$selected          \tId contact pre-selectionn\n\t *    @param    int\t\t$socid\t\t\t\tId of company\n\t *    @param    string\t$htmlname          \tName of HTML field\n\t *    @param    int\t\t$showempty         \tAdd an empty field\n\t *    @return\tinteger|null\n\t */\n\tpublic function select_address($selected, $socid, $htmlname = 'address_id', $showempty = 0)\n\t{\n\t\t// phpcs:enable\n\t\t// looking for users\n\t\t$sql = \"SELECT a.rowid, a.label\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"societe_address as a\";\n\t\t$sql .= \" WHERE a.fk_soc = \".((int) $socid);\n\t\t$sql .= \" ORDER BY a.label ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_address\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\tprint '<select class=\"flat\" id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t\tif ($showempty) {\n\t\t\t\tprint '<option value=\"0\">&nbsp;</option>';\n\t\t\t}\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t\tif ($selected && $selected == $obj->rowid) {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>'.$obj->label.'</option>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">'.$obj->label.'</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '</select>';\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Load into cache list of payment terms\n\t *\n\t *      @return     int             Nb of lines loaded, <0 if KO\n\t */\n\tpublic function load_cache_conditions_paiements()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_conditions_paiements);\n\t\tif ($num > 0) {\n\t\t\treturn 0; // Cache already loaded\n\t\t}\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$sql = \"SELECT rowid, code, libelle as label\";\n\t\t$sql .= \" FROM \".$this->db->prefix().'c_payment_term';\n\t\t$sql .= \" WHERE entity IN (\".getEntity('c_payment_term').\")\";\n\t\t$sql .= \" AND active > 0\";\n\t\t$sql .= \" ORDER BY sortorder\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label = ($langs->trans(\"PaymentConditionShort\".$obj->code) != (\"PaymentConditionShort\".$obj->code) ? $langs->trans(\"PaymentConditionShort\".$obj->code) : ($obj->label != '-' ? $obj->label : ''));\n\t\t\t\t$this->cache_conditions_paiements[$obj->rowid]['code'] = $obj->code;\n\t\t\t\t$this->cache_conditions_paiements[$obj->rowid]['label'] = $label;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t//$this->cache_conditions_paiements=dol_sort_array($this->cache_conditions_paiements, 'label', 'asc', 0, 0, 1);\t\t// We use the field sortorder of table\n\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Load int a cache property th elist of possible delivery delays.\n\t *\n\t *      @return     int             Nb of lines loaded, <0 if KO\n\t */\n\tpublic function load_cache_availability()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_availability);\t// TODO Use $conf->cache['availability'] instead of $this->cache_availability\n\t\tif ($num > 0) {\n\t\t\treturn 0; // Cache already loaded\n\t\t}\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$langs->load('propal');\n\n\t\t$sql = \"SELECT rowid, code, label, position\";\n\t\t$sql .= \" FROM \".$this->db->prefix().'c_availability';\n\t\t$sql .= \" WHERE active > 0\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label = ($langs->trans(\"AvailabilityType\".$obj->code) != (\"AvailabilityType\".$obj->code) ? $langs->trans(\"AvailabilityType\".$obj->code) : ($obj->label != '-' ? $obj->label : ''));\n\t\t\t\t$this->cache_availability[$obj->rowid]['code'] = $obj->code;\n\t\t\t\t$this->cache_availability[$obj->rowid]['label'] = $label;\n\t\t\t\t$this->cache_availability[$obj->rowid]['position'] = $obj->position;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$this->cache_availability = dol_sort_array($this->cache_availability, 'position', 'asc', 0, 0, 1);\n\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *      Retourne la liste des types de delais de livraison possibles\n\t *\n\t *      @param\tint\t\t$selected       Id du type de delais pre-selectionne\n\t *      @param  string\t$htmlname       Nom de la zone select\n\t *      @param  string\t$filtertype     To add a filter\n\t *\t\t@param\tint\t\t$addempty\t\tAdd empty entry\n\t * \t\t@param\tstring\t$morecss\t\tMore CSS\n\t *\t\t@return\tvoid\n\t */\n\tpublic function selectAvailabilityDelay($selected = '', $htmlname = 'availid', $filtertype = '', $addempty = 0, $morecss = '')\n\t{\n\t\tglobal $langs, $user;\n\n\t\t$this->load_cache_availability();\n\n\t\tdol_syslog(__METHOD__.\" selected=\".$selected.\", htmlname=\".$htmlname, LOG_DEBUG);\n\n\t\tprint '<select id=\"'.$htmlname.'\" class=\"flat'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\">';\n\t\tif ($addempty) {\n\t\t\tprint '<option value=\"0\">&nbsp;</option>';\n\t\t}\n\t\tforeach ($this->cache_availability as $id => $arrayavailability) {\n\t\t\tif ($selected == $id) {\n\t\t\t\tprint '<option value=\"'.$id.'\" selected>';\n\t\t\t} else {\n\t\t\t\tprint '<option value=\"'.$id.'\">';\n\t\t\t}\n\t\t\tprint dol_escape_htmltag($arrayavailability['label']);\n\t\t\tprint '</option>';\n\t\t}\n\t\tprint '</select>';\n\t\tif ($user->admin) {\n\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t\tprint ajax_combobox($htmlname);\n\t}\n\n\t/**\n\t *      Load into cache cache_demand_reason, array of input reasons\n\t *\n\t *      @return     int             Nb of lines loaded, <0 if KO\n\t */\n\tpublic function loadCacheInputReason()\n\t{\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_demand_reason);\t// TODO Use $conf->cache['input_reason'] instead of $this->cache_demand_reason\n\t\tif ($num > 0) {\n\t\t\treturn 0; // Cache already loaded\n\t\t}\n\n\t\t$sql = \"SELECT rowid, code, label\";\n\t\t$sql .= \" FROM \".$this->db->prefix().'c_input_reason';\n\t\t$sql .= \" WHERE active > 0\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\t$tmparray = array();\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label = ($obj->label != '-' ? $obj->label : '');\n\t\t\t\tif ($langs->trans(\"DemandReasonType\".$obj->code) != (\"DemandReasonType\".$obj->code)) {\n\t\t\t\t\t$label = $langs->trans(\"DemandReasonType\".$obj->code); // So translation key DemandReasonTypeSRC_XXX will work\n\t\t\t\t}\n\t\t\t\tif ($langs->trans($obj->code) != $obj->code) {\n\t\t\t\t\t$label = $langs->trans($obj->code); // So translation key SRC_XXX will work\n\t\t\t\t}\n\n\t\t\t\t$tmparray[$obj->rowid]['id']   = $obj->rowid;\n\t\t\t\t$tmparray[$obj->rowid]['code'] = $obj->code;\n\t\t\t\t$tmparray[$obj->rowid]['label'] = $label;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$this->cache_demand_reason = dol_sort_array($tmparray, 'label', 'asc', 0, 0, 1);\n\n\t\t\tunset($tmparray);\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn list of input reason (events that triggered an object creation, like after sending an emailing, making an advert, ...)\n\t *  List found into table c_input_reason loaded by loadCacheInputReason\n\t *\n\t *  @param\tint\t\t$selected        Id or code of type origin to select by default\n\t *  @param  string\t$htmlname        Nom de la zone select\n\t *  @param  string\t$exclude         To exclude a code value (Example: SRC_PROP)\n\t *\t@param\tint\t\t$addempty\t\t Add an empty entry\n\t *  @param  string\t$morecss\t\t Add more css to the HTML select component\n\t *  @param\tint\t\t$notooltip\t\t Do not show the tooltip for admin\n\t *\t@return\tvoid\n\t */\n\tpublic function selectInputReason($selected = '', $htmlname = 'demandreasonid', $exclude = '', $addempty = 0, $morecss = '', $notooltip = 0)\n\t{\n\t\tglobal $langs, $user;\n\n\t\t$this->loadCacheInputReason();\n\n\t\tprint '<select class=\"flat'.($morecss ? ' '.$morecss : '').'\" id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\tif ($addempty) {\n\t\t\tprint '<option value=\"0\"'.(empty($selected) ? ' selected' : '').'>&nbsp;</option>';\n\t\t}\n\t\tforeach ($this->cache_demand_reason as $id => $arraydemandreason) {\n\t\t\tif ($arraydemandreason['code'] == $exclude) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ($selected && ($selected == $arraydemandreason['id'] || $selected == $arraydemandreason['code'])) {\n\t\t\t\tprint '<option value=\"'.$arraydemandreason['id'].'\" selected>';\n\t\t\t} else {\n\t\t\t\tprint '<option value=\"'.$arraydemandreason['id'].'\">';\n\t\t\t}\n\t\t\t$label = $arraydemandreason['label']; // Translation of label was already done into the ->loadCacheInputReason\n\t\t\tprint $langs->trans($label);\n\t\t\tprint '</option>';\n\t\t}\n\t\tprint '</select>';\n\t\tif ($user->admin && empty($notooltip)) {\n\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t\tprint ajax_combobox('select_'.$htmlname);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Charge dans cache la liste des types de paiements possibles\n\t *\n\t *      @return     int                 Nb of lines loaded, <0 if KO\n\t */\n\tpublic function load_cache_types_paiements()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_types_paiements);\t\t// TODO Use $conf->cache['payment_mode'] instead of $this->cache_types_paiements\n\t\tif ($num > 0) {\n\t\t\treturn $num; // Cache already loaded\n\t\t}\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$this->cache_types_paiements = array();\n\n\t\t$sql = \"SELECT id, code, libelle as label, type, active\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"c_paiement\";\n\t\t$sql .= \" WHERE entity IN (\".getEntity('c_paiement').\")\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label = ($langs->transnoentitiesnoconv(\"PaymentTypeShort\".$obj->code) != (\"PaymentTypeShort\".$obj->code) ? $langs->transnoentitiesnoconv(\"PaymentTypeShort\".$obj->code) : ($obj->label != '-' ? $obj->label : ''));\n\t\t\t\t$this->cache_types_paiements[$obj->id]['id'] = $obj->id;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['code'] = $obj->code;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['label'] = $label;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['type'] = $obj->type;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['active'] = $obj->active;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$this->cache_types_paiements = dol_sort_array($this->cache_types_paiements, 'label', 'asc', 0, 0, 1);\n\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      print list of payment modes.\n\t *      Constant MAIN_DEFAULT_PAYMENT_TERM_ID can used to set default value but scope is all application, probably not what you want.\n\t *      See instead to force the default value by the caller.\n\t *\n\t *      @param\tint\t\t$selected\t\tId of payment term to preselect by default\n\t *      @param\tstring\t$htmlname\t\tNom de la zone select\n\t *      @param\tint\t\t$filtertype\t\tNot used\n\t *\t\t@param\tint\t\t$addempty\t\tAdd an empty entry\n\t * \t\t@param\tint\t\t$noinfoadmin\t0=Add admin info, 1=Disable admin info\n\t * \t\t@param\tstring\t$morecss\t\tAdd more CSS on select tag\n\t *\t\t@return\tvoid\n\t */\n\tpublic function select_conditions_paiements($selected = 0, $htmlname = 'condid', $filtertype = -1, $addempty = 0, $noinfoadmin = 0, $morecss = '')\n\t{\n\t\t// phpcs:enable\n\t\tprint $this->getSelectConditionsPaiements($selected, $htmlname, $filtertype, $addempty, $noinfoadmin, $morecss);\n\t}\n\n\n\t/**\n\t *      Return list of payment modes.\n\t *      Constant MAIN_DEFAULT_PAYMENT_TERM_ID can used to set default value but scope is all application, probably not what you want.\n\t *      See instead to force the default value by the caller.\n\t *\n\t *      @param\tint\t\t$selected\t\tId of payment term to preselect by default\n\t *      @param\tstring\t$htmlname\t\tNom de la zone select\n\t *      @param\tint\t\t$filtertype\t\tNot used\n\t *\t\t@param\tint\t\t$addempty\t\tAdd an empty entry\n\t * \t\t@param\tint\t\t$noinfoadmin\t0=Add admin info, 1=Disable admin info\n\t * \t\t@param\tstring\t$morecss\t\tAdd more CSS on select tag\n\t *\t\t@return\tvoid\n\t */\n\tpublic function getSelectConditionsPaiements($selected = 0, $htmlname = 'condid', $filtertype = -1, $addempty = 0, $noinfoadmin = 0, $morecss = '')\n\t{\n\n\t\tglobal $langs, $user, $conf;\n\t\t$out = '';\n\t\tdol_syslog(__METHOD__.\" selected=\".$selected.\", htmlname=\".$htmlname, LOG_DEBUG);\n\n\t\t$this->load_cache_conditions_paiements();\n\n\t\t// Set default value if not already set by caller\n\t\tif (empty($selected) && !empty($conf->global->MAIN_DEFAULT_PAYMENT_TERM_ID)) {\n\t\t\t$selected = $conf->global->MAIN_DEFAULT_PAYMENT_TERM_ID;\n\t\t}\n\n\t\t$out.=  '<select id=\"'.$htmlname.'\" class=\"flat selectpaymentterms'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\">';\n\t\tif ($addempty) {\n\t\t\t$out.=  '<option value=\"0\">&nbsp;</option>';\n\t\t}\n\t\tforeach ($this->cache_conditions_paiements as $id => $arrayconditions) {\n\t\t\tif ($selected == $id) {\n\t\t\t\t$out.=  '<option value=\"'.$id.'\" selected>';\n\t\t\t} else {\n\t\t\t\t$out.=  '<option value=\"'.$id.'\">';\n\t\t\t}\n\t\t\t$out.=  $arrayconditions['label'];\n\t\t\t$out.=  '</option>';\n\t\t}\n\t\t$out.=  '</select>';\n\t\tif ($user->admin && empty($noinfoadmin)) {\n\t\t\t$out.=  info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t\t$out.=  ajax_combobox($htmlname);\n\t\treturn $out;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Return list of payment methods\n\t *      Constant MAIN_DEFAULT_PAYMENT_TYPE_ID can used to set default value but scope is all application, probably not what you want.\n\t *\n\t *      @param\tstring\t$selected       Id or code or preselected payment mode\n\t *      @param  string\t$htmlname       Name of select field\n\t *      @param  string\t$filtertype     To filter on field type in llx_c_paiement ('CRDT' or 'DBIT' or array('code'=>xx,'label'=>zz))\n\t *      @param  int\t\t$format         0=id+label, 1=code+code, 2=code+label, 3=id+code\n\t *      @param  int\t\t$empty\t\t\t1=can be empty, 0 otherwise\n\t * \t\t@param\tint\t\t$noadmininfo\t0=Add admin info, 1=Disable admin info\n\t *      @param  int\t\t$maxlength      Max length of label\n\t *      @param  int     $active         Active or not, -1 = all\n\t *      @param  string  $morecss        Add more CSS on select tag\n\t *      @param\tint\t\t$nooutput\t\t1=Return string, do not send to output\n\t * \t\t@return\tvoid\n\t */\n\tpublic function select_types_paiements($selected = '', $htmlname = 'paiementtype', $filtertype = '', $format = 0, $empty = 1, $noadmininfo = 0, $maxlength = 0, $active = 1, $morecss = '', $nooutput = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $user, $conf;\n\n\t\t$out = '';\n\n\t\tdol_syslog(__METHOD__.\" \".$selected.\", \".$htmlname.\", \".$filtertype.\", \".$format, LOG_DEBUG);\n\n\t\t$filterarray = array();\n\t\tif ($filtertype == 'CRDT') {\n\t\t\t$filterarray = array(0, 2, 3);\n\t\t} elseif ($filtertype == 'DBIT') {\n\t\t\t$filterarray = array(1, 2, 3);\n\t\t} elseif ($filtertype != '' && $filtertype != '-1') {\n\t\t\t$filterarray = explode(',', $filtertype);\n\t\t}\n\n\t\t$this->load_cache_types_paiements();\n\n\t\t// Set default value if not already set by caller\n\t\tif (empty($selected) && !empty($conf->global->MAIN_DEFAULT_PAYMENT_TYPE_ID)) {\n\t\t\t$selected = $conf->global->MAIN_DEFAULT_PAYMENT_TYPE_ID;\n\t\t}\n\n\t\t$out .= '<select id=\"select'.$htmlname.'\" class=\"flat selectpaymenttypes'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\">';\n\t\tif ($empty) {\n\t\t\t$out .= '<option value=\"\">&nbsp;</option>';\n\t\t}\n\t\tforeach ($this->cache_types_paiements as $id => $arraytypes) {\n\t\t\t// If not good status\n\t\t\tif ($active >= 0 && $arraytypes['active'] != $active) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// On passe si on a demande de filtrer sur des modes de paiments particuliers\n\t\t\tif (count($filterarray) && !in_array($arraytypes['type'], $filterarray)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// We discard empty line if showempty is on because an empty line has already been output.\n\t\t\tif ($empty && empty($arraytypes['code'])) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ($format == 0) {\n\t\t\t\t$out .= '<option value=\"'.$id.'\"';\n\t\t\t} elseif ($format == 1) {\n\t\t\t\t$out .= '<option value=\"'.$arraytypes['code'].'\"';\n\t\t\t} elseif ($format == 2) {\n\t\t\t\t$out .= '<option value=\"'.$arraytypes['code'].'\"';\n\t\t\t} elseif ($format == 3) {\n\t\t\t\t$out .= '<option value=\"'.$id.'\"';\n\t\t\t}\n\t\t\t// Print attribute selected or not\n\t\t\tif ($format == 1 || $format == 2) {\n\t\t\t\tif ($selected == $arraytypes['code']) {\n\t\t\t\t\t$out .= ' selected';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($selected == $id) {\n\t\t\t\t\t$out .= ' selected';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '>';\n\t\t\tif ($format == 0) {\n\t\t\t\t$value = ($maxlength ?dol_trunc($arraytypes['label'], $maxlength) : $arraytypes['label']);\n\t\t\t} elseif ($format == 1) {\n\t\t\t\t$value = $arraytypes['code'];\n\t\t\t} elseif ($format == 2) {\n\t\t\t\t$value = ($maxlength ?dol_trunc($arraytypes['label'], $maxlength) : $arraytypes['label']);\n\t\t\t} elseif ($format == 3) {\n\t\t\t\t$value = $arraytypes['code'];\n\t\t\t}\n\t\t\t$out .= $value ? $value : '&nbsp;';\n\t\t\t$out .= '</option>';\n\t\t}\n\t\t$out .= '</select>';\n\t\tif ($user->admin && !$noadmininfo) {\n\t\t\t$out .= info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t\t$out .= ajax_combobox('select'.$htmlname);\n\n\t\tif (empty($nooutput)) {\n\t\t\tprint $out;\n\t\t} else {\n\t\t\treturn $out;\n\t\t}\n\t}\n\n\n\t/**\n\t *  Selection HT or TTC\n\t *\n\t *  @param\tstring\t$selected       Id pre-selectionne\n\t *  @param  string\t$htmlname       Nom de la zone select\n\t *  @param\tstring\t$addjscombo\t\tAdd js combo\n\t * \t@return\tstring\t\t\t\t\tCode of HTML select to chose tax or not\n\t */\n\tpublic function selectPriceBaseType($selected = '', $htmlname = 'price_base_type', $addjscombo = 0)\n\t{\n\t\tglobal $langs;\n\n\t\t$return = '<select class=\"flat maxwidth100\" id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t$options = array(\n\t\t\t'HT'=>$langs->trans(\"HT\"),\n\t\t\t'TTC'=>$langs->trans(\"TTC\")\n\t\t);\n\t\tforeach ($options as $id => $value) {\n\t\t\tif ($selected == $id) {\n\t\t\t\t$return .= '<option value=\"'.$id.'\" selected>'.$value;\n\t\t\t} else {\n\t\t\t\t$return .= '<option value=\"'.$id.'\">'.$value;\n\t\t\t}\n\t\t\t$return .= '</option>';\n\t\t}\n\t\t$return .= '</select>';\n\t\tif ($addjscombo) {\n\t\t\t$return .= ajax_combobox('select_'.$htmlname);\n\t\t}\n\n\t\treturn $return;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Load in cache list of transport mode\n\t *\n\t *      @return     int                 Nb of lines loaded, <0 if KO\n\t */\n\tpublic function load_cache_transport_mode()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_transport_mode);\t\t// TODO Use $conf->cache['payment_mode'] instead of $this->cache_transport_mode\n\t\tif ($num > 0) {\n\t\t\treturn $num; // Cache already loaded\n\t\t}\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$this->cache_transport_mode = array();\n\n\t\t$sql = \"SELECT rowid, code, label, active\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"c_transport_mode\";\n\t\t$sql .= \" WHERE entity IN (\".getEntity('c_transport_mode').\")\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// If traduction exist, we use it else we take the default label\n\t\t\t\t$label = ($langs->transnoentitiesnoconv(\"PaymentTypeShort\".$obj->code) != (\"PaymentTypeShort\".$obj->code) ? $langs->transnoentitiesnoconv(\"PaymentTypeShort\".$obj->code) : ($obj->label != '-' ? $obj->label : ''));\n\t\t\t\t$this->cache_transport_mode[$obj->rowid]['rowid'] = $obj->rowid;\n\t\t\t\t$this->cache_transport_mode[$obj->rowid]['code'] = $obj->code;\n\t\t\t\t$this->cache_transport_mode[$obj->rowid]['label'] = $label;\n\t\t\t\t$this->cache_transport_mode[$obj->rowid]['active'] = $obj->active;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$this->cache_transport_mode = dol_sort_array($this->cache_transport_mode, 'label', 'asc', 0, 0, 1);\n\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *      Return list of transport mode for intracomm report\n\t *\n\t *      @param\tstring\t$selected       Id of the transport mode pre-selected\n\t *      @param  string\t$htmlname       Name of the select field\n\t *      @param  int\t\t$format         0=id+label, 1=code+code, 2=code+label, 3=id+code\n\t *      @param  int\t\t$empty\t\t\t1=can be empty, 0 else\n\t *      @param\tint\t\t$noadmininfo\t0=Add admin info, 1=Disable admin info\n\t *      @param  int\t\t$maxlength      Max length of label\n\t *      @param  int     $active         Active or not, -1 = all\n\t *      @param  string  $morecss        Add more CSS on select tag\n\t * \t\t@return\tvoid\n\t */\n\tpublic function selectTransportMode($selected = '', $htmlname = 'transportmode', $format = 0, $empty = 1, $noadmininfo = 0, $maxlength = 0, $active = 1, $morecss = '')\n\t{\n\t\tglobal $langs, $user;\n\n\t\tdol_syslog(__METHOD__.\" \".$selected.\", \".$htmlname.\", \".$format, LOG_DEBUG);\n\n\t\t$this->load_cache_transport_mode();\n\n\t\tprint '<select id=\"select'.$htmlname.'\" class=\"flat selectmodetransport'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\">';\n\t\tif ($empty) {\n\t\t\tprint '<option value=\"\">&nbsp;</option>';\n\t\t}\n\t\tforeach ($this->cache_transport_mode as $id => $arraytypes) {\n\t\t\t// If not good status\n\t\t\tif ($active >= 0 && $arraytypes['active'] != $active) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// We discard empty line if showempty is on because an empty line has already been output.\n\t\t\tif ($empty && empty($arraytypes['code'])) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ($format == 0) {\n\t\t\t\tprint '<option value=\"'.$id.'\"';\n\t\t\t} elseif ($format == 1) {\n\t\t\t\tprint '<option value=\"'.$arraytypes['code'].'\"';\n\t\t\t} elseif ($format == 2) {\n\t\t\t\tprint '<option value=\"'.$arraytypes['code'].'\"';\n\t\t\t} elseif ($format == 3) {\n\t\t\t\tprint '<option value=\"'.$id.'\"';\n\t\t\t}\n\t\t\t// If text is selected, we compare with code, else with id\n\t\t\tif (preg_match('/[a-z]/i', $selected) && $selected == $arraytypes['code']) {\n\t\t\t\tprint ' selected';\n\t\t\t} elseif ($selected == $id) {\n\t\t\t\tprint ' selected';\n\t\t\t}\n\t\t\tprint '>';\n\t\t\tif ($format == 0) {\n\t\t\t\t$value = ($maxlength ?dol_trunc($arraytypes['label'], $maxlength) : $arraytypes['label']);\n\t\t\t} elseif ($format == 1) {\n\t\t\t\t$value = $arraytypes['code'];\n\t\t\t} elseif ($format == 2) {\n\t\t\t\t$value = ($maxlength ?dol_trunc($arraytypes['label'], $maxlength) : $arraytypes['label']);\n\t\t\t} elseif ($format == 3) {\n\t\t\t\t$value = $arraytypes['code'];\n\t\t\t}\n\t\t\tprint $value ? $value : '&nbsp;';\n\t\t\tprint '</option>';\n\t\t}\n\t\tprint '</select>';\n\t\tif ($user->admin && !$noadmininfo) {\n\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t}\n\n\t/**\n\t *  Return a HTML select list of shipping mode\n\t *\n\t *  @param\tstring\t$selected           Id shipping mode pre-selected\n\t *  @param  string\t$htmlname           Name of select zone\n\t *  @param  string\t$filtre             To filter list. This parameter must not come from input of users\n\t *  @param  int\t\t$useempty           1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *  @param  string\t$moreattrib         To add more attribute on select\n\t *\t@param\tint\t\t$noinfoadmin\t\t0=Add admin info, 1=Disable admin info\n\t *  @param\tstring\t$morecss\t\t\tMore CSS\n\t * \t@return\tvoid\n\t */\n\tpublic function selectShippingMethod($selected = '', $htmlname = 'shipping_method_id', $filtre = '', $useempty = 0, $moreattrib = '', $noinfoadmin = 0, $morecss = '')\n\t{\n\t\tglobal $langs, $conf, $user;\n\n\t\t$langs->load(\"admin\");\n\t\t$langs->load(\"deliveries\");\n\n\t\t$sql = \"SELECT rowid, code, libelle as label\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"c_shipment_mode\";\n\t\t$sql .= \" WHERE active > 0\";\n\t\tif ($filtre) {\n\t\t\t$sql .= \" AND \".$filtre;\n\t\t}\n\t\t$sql .= \" ORDER BY libelle ASC\";\n\n\t\tdol_syslog(get_class($this).\"::selectShippingMode\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\tprint '<select id=\"select'.$htmlname.'\" class=\"flat selectshippingmethod'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\"'.($moreattrib ? ' '.$moreattrib : '').'>';\n\t\t\t\tif ($useempty == 1 || ($useempty == 2 && $num > 1)) {\n\t\t\t\t\tprint '<option value=\"-1\">&nbsp;</option>';\n\t\t\t\t}\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\t\tif ($selected == $obj->rowid) {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">';\n\t\t\t\t\t}\n\t\t\t\t\tprint ($langs->trans(\"SendingMethod\".strtoupper($obj->code)) != \"SendingMethod\".strtoupper($obj->code)) ? $langs->trans(\"SendingMethod\".strtoupper($obj->code)) : $obj->label;\n\t\t\t\t\tprint '</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\tprint \"</select>\";\n\t\t\t\tif ($user->admin  && empty($noinfoadmin)) {\n\t\t\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t\t\t}\n\n\t\t\t\tprint ajax_combobox('select'.$htmlname);\n\t\t\t} else {\n\t\t\t\tprint $langs->trans(\"NoShippingMethodDefined\");\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *    Display form to select shipping mode\n\t *\n\t *    @param\tstring\t$page        Page\n\t *    @param    int\t\t$selected    Id of shipping mode\n\t *    @param    string\t$htmlname    Name of select html field\n\t *    @param    int\t\t$addempty    1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *    @return\tvoid\n\t */\n\tpublic function formSelectShippingMethod($page, $selected = '', $htmlname = 'shipping_method_id', $addempty = 0)\n\t{\n\t\tglobal $langs;\n\n\t\t$langs->load(\"deliveries\");\n\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setshippingmethod\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$this->selectShippingMethod($selected, $htmlname, '', $addempty);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$code = $langs->getLabelFromKey($this->db, $selected, 'c_shipment_mode', 'rowid', 'code');\n\t\t\t\tprint $langs->trans(\"SendingMethod\".strtoupper($code));\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates HTML last in cycle situation invoices selector\n\t *\n\t * @param     string  $selected   \t\tPreselected ID\n\t * @param     int     $socid      \t\tCompany ID\n\t *\n\t * @return    string                     HTML select\n\t */\n\tpublic function selectSituationInvoices($selected = '', $socid = 0)\n\t{\n\t\tglobal $langs;\n\n\t\t$langs->load('bills');\n\n\t\t$opt = '<option value=\"\" selected></option>';\n\t\t$sql = \"SELECT rowid, ref, situation_cycle_ref, situation_counter, situation_final, fk_soc\";\n\t\t$sql .= ' FROM '.$this->db->prefix().'facture';\n\t\t$sql .= ' WHERE entity IN ('.getEntity('invoice').')';\n\t\t$sql .= ' AND situation_counter >= 1';\n\t\t$sql .= ' AND fk_soc = '.(int) $socid;\n\t\t$sql .= ' AND type <> 2';\n\t\t$sql .= ' ORDER by situation_cycle_ref, situation_counter desc';\n\t\t$resql = $this->db->query($sql);\n\n\t\tif ($resql && $this->db->num_rows($resql) > 0) {\n\t\t\t// Last seen cycle\n\t\t\t$ref = 0;\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t//Same cycle ?\n\t\t\t\tif ($obj->situation_cycle_ref != $ref) {\n\t\t\t\t\t// Just seen this cycle\n\t\t\t\t\t$ref = $obj->situation_cycle_ref;\n\t\t\t\t\t//not final ?\n\t\t\t\t\tif ($obj->situation_final != 1) {\n\t\t\t\t\t\t//Not prov?\n\t\t\t\t\t\tif (substr($obj->ref, 1, 4) != 'PROV') {\n\t\t\t\t\t\t\tif ($selected == $obj->rowid) {\n\t\t\t\t\t\t\t\t$opt .= '<option value=\"'.$obj->rowid.'\" selected>'.$obj->ref.'</option>';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$opt .= '<option value=\"'.$obj->rowid.'\">'.$obj->ref.'</option>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t\tdol_syslog(\"Error sql=\".$sql.\", error=\".$this->error, LOG_ERR);\n\t\t}\n\t\tif ($opt == '<option value =\"\" selected></option>') {\n\t\t\t$opt = '<option value =\"0\" selected>'.$langs->trans('NoSituations').'</option>';\n\t\t}\n\t\treturn $opt;\n\t}\n\n\t/**\n\t *      Creates HTML units selector (code => label)\n\t *\n\t *      @param\tstring\t$selected       Preselected Unit ID\n\t *      @param  string\t$htmlname       Select name\n\t *      @param\tint\t\t$showempty\t\tAdd a nempty line\n\t *      @param  string  $unit_type      Restrict to one given unit type\n\t * \t\t@return\tstring                  HTML select\n\t */\n\tpublic function selectUnits($selected = '', $htmlname = 'units', $showempty = 0, $unit_type = '')\n\t{\n\t\tglobal $langs;\n\n\t\t$langs->load('products');\n\n\t\t$return = '<select class=\"flat\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\n\t\t$sql = \"SELECT rowid, label, code FROM \".$this->db->prefix().\"c_units\";\n\t\t$sql .= ' WHERE active > 0';\n\t\tif (!empty($unit_type)) {\n\t\t\t$sql .= \" AND unit_type = '\".$this->db->escape($unit_type).\"'\";\n\t\t}\n\t\t$sql .= \" ORDER BY sortorder\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql && $this->db->num_rows($resql) > 0) {\n\t\t\tif ($showempty) {\n\t\t\t\t$return .= '<option value=\"none\"></option>';\n\t\t\t}\n\n\t\t\twhile ($res = $this->db->fetch_object($resql)) {\n\t\t\t\t$unitLabel = $res->label;\n\t\t\t\tif (!empty($langs->tab_translate['unit'.$res->code])) {\t// check if Translation is available before\n\t\t\t\t\t$unitLabel = $langs->trans('unit'.$res->code) != $res->label ? $langs->trans('unit'.$res->code) : $res->label;\n\t\t\t\t}\n\n\t\t\t\tif ($selected == $res->rowid) {\n\t\t\t\t\t$return .= '<option value=\"'.$res->rowid.'\" selected>'.$unitLabel.'</option>';\n\t\t\t\t} else {\n\t\t\t\t\t$return .= '<option value=\"'.$res->rowid.'\">'.$unitLabel.'</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$return .= '</select>';\n\t\t}\n\t\treturn $return;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return a HTML select list of bank accounts\n\t *\n\t *  @param\tstring\t$selected           Id account pre-selected\n\t *  @param  string\t$htmlname           Name of select zone\n\t *  @param  int\t\t$status             Status of searched accounts (0=open, 1=closed, 2=both)\n\t *  @param  string\t$filtre             To filter list. This parameter must not come from input of users\n\t *  @param  int\t\t$useempty           1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *  @param  string\t$moreattrib         To add more attribute on select\n\t *  @param\tint\t\t$showcurrency\t\tShow currency in label\n\t *  @param\tstring\t$morecss\t\t\tMore CSS\n\t *  @param\tint\t\t$nooutput\t\t\t1=Return string, do not send to output\n\t * \t@return\tint\t\t\t\t\t\t\t<0 if error, Num of bank account found if OK (0, 1, 2, ...)\n\t */\n\tpublic function select_comptes($selected = '', $htmlname = 'accountid', $status = 0, $filtre = '', $useempty = 0, $moreattrib = '', $showcurrency = 0, $morecss = '', $nooutput = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\n\t\t$langs->load(\"admin\");\n\t\t$num = 0;\n\n\t\t$sql = \"SELECT rowid, label, bank, clos as status, currency_code\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"bank_account\";\n\t\t$sql .= \" WHERE entity IN (\".getEntity('bank_account').\")\";\n\t\tif ($status != 2) {\n\t\t\t$sql .= \" AND clos = \".(int) $status;\n\t\t}\n\t\tif ($filtre) {\n\t\t\t$sql .= \" AND \".$filtre;\n\t\t}\n\t\t$sql .= \" ORDER BY label\";\n\n\t\tdol_syslog(get_class($this).\"::select_comptes\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\t$out .= '<select id=\"select'.$htmlname.'\" class=\"flat selectbankaccount'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\"'.($moreattrib ? ' '.$moreattrib : '').'>';\n\t\t\t\tif ($useempty == 1 || ($useempty == 2 && $num > 1)) {\n\t\t\t\t\t$out .= '<option value=\"-1\">&nbsp;</option>';\n\t\t\t\t}\n\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\t\tif ($selected == $obj->rowid || ($useempty == 2 && $num == 1 && empty($selected))) {\n\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\" data-currency-code=\"'.$obj->currency_code.'\" selected>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\" data-currency-code=\"'.$obj->currency_code.'\">';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= trim($obj->label);\n\t\t\t\t\tif ($showcurrency) {\n\t\t\t\t\t\t$out .= ' ('.$obj->currency_code.')';\n\t\t\t\t\t}\n\t\t\t\t\tif ($status == 2 && $obj->status == 1) {\n\t\t\t\t\t\t$out .= ' ('.$langs->trans(\"Closed\").')';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= '</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\t$out .= \"</select>\";\n\t\t\t\t$out .= ajax_combobox('select'.$htmlname);\n\t\t\t} else {\n\t\t\t\tif ($status == 0) {\n\t\t\t\t\t$out .= '<span class=\"opacitymedium\">'.$langs->trans(\"NoActiveBankAccountDefined\").'</span>';\n\t\t\t\t} else {\n\t\t\t\t\t$out .= '<span class=\"opacitymedium\">'.$langs->trans(\"NoBankAccountFound\").'</span>';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\t// Output or return\n\t\tif (empty($nooutput)) {\n\t\t\tprint $out;\n\t\t} else {\n\t\t\treturn $out;\n\t\t}\n\n\t\treturn $num;\n\t}\n\n\t/**\n\t *  Return a HTML select list of establishment\n\t *\n\t *  @param\tstring\t$selected           Id establishment pre-selected\n\t *  @param  string\t$htmlname           Name of select zone\n\t *  @param  int\t\t$status             Status of searched establishment (0=open, 1=closed, 2=both)\n\t *  @param  string\t$filtre             To filter list. This parameter must not come from input of users\n\t *  @param  int\t\t$useempty           1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *  @param  string\t$moreattrib         To add more attribute on select\n\t * \t@return\tint\t\t\t\t\t\t\t<0 if error, Num of establishment found if OK (0, 1, 2, ...)\n\t */\n\tpublic function selectEstablishments($selected = '', $htmlname = 'entity', $status = 0, $filtre = '', $useempty = 0, $moreattrib = '')\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$langs->load(\"admin\");\n\t\t$num = 0;\n\n\t\t$sql = \"SELECT rowid, name, fk_country, status, entity\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"establishment\";\n\t\t$sql .= \" WHERE 1=1\";\n\t\tif ($status != 2) {\n\t\t\t$sql .= \" AND status = \".(int) $status;\n\t\t}\n\t\tif ($filtre) {\n\t\t\t$sql .= \" AND \".$filtre;\n\t\t}\n\t\t$sql .= \" ORDER BY name\";\n\n\t\tdol_syslog(get_class($this).\"::select_establishment\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\tprint '<select id=\"select'.$htmlname.'\" class=\"flat selectestablishment\" name=\"'.$htmlname.'\"'.($moreattrib ? ' '.$moreattrib : '').'>';\n\t\t\t\tif ($useempty == 1 || ($useempty == 2 && $num > 1)) {\n\t\t\t\t\tprint '<option value=\"-1\">&nbsp;</option>';\n\t\t\t\t}\n\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\t\tif ($selected == $obj->rowid) {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">';\n\t\t\t\t\t}\n\t\t\t\t\tprint trim($obj->name);\n\t\t\t\t\tif ($status == 2 && $obj->status == 1) {\n\t\t\t\t\t\tprint ' ('.$langs->trans(\"Closed\").')';\n\t\t\t\t\t}\n\t\t\t\t\tprint '</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\tprint \"</select>\";\n\t\t\t} else {\n\t\t\t\tif ($status == 0) {\n\t\t\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"NoActiveEstablishmentDefined\").'</span>';\n\t\t\t\t} else {\n\t\t\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"NoEstablishmentFound\").'</span>';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *    Display form to select bank account\n\t *\n\t *    @param\tstring\t$page        Page\n\t *    @param    int\t\t$selected    Id of bank account\n\t *    @param    string\t$htmlname    Name of select html field\n\t *    @param    int\t\t$addempty    1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *    @return\tvoid\n\t */\n\tpublic function formSelectAccount($page, $selected = '', $htmlname = 'fk_account', $addempty = 0)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setbankaccount\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint img_picto('', 'bank_account', 'class=\"pictofixedwidth\"');\n\t\t\t$nbaccountfound = $this->select_comptes($selected, $htmlname, 0, '', $addempty);\n\t\t\tif ($nbaccountfound > 0) {\n\t\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t}\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\t$langs->load('banks');\n\n\t\t\tif ($selected) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/compta/bank/class/account.class.php';\n\t\t\t\t$bankstatic = new Account($this->db);\n\t\t\t\t$result = $bankstatic->fetch($selected);\n\t\t\t\tif ($result) {\n\t\t\t\t\tprint $bankstatic->getNomUrl(1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Return list of categories having choosed type\n\t *\n\t *    @param\tstring|int\t            $type\t\t\t\tType of category ('customer', 'supplier', 'contact', 'product', 'member'). Old mode (0, 1, 2, ...) is deprecated.\n\t *    @param    string\t\t            $selected    \t\tId of category preselected or 'auto' (autoselect category if there is only one element). Not used if $outputmode = 1.\n\t *    @param    string\t\t            $htmlname\t\t\tHTML field name\n\t *    @param    int\t\t\t            $maxlength      \tMaximum length for labels\n\t *    @param    int|string|array    \t$markafterid        Keep only or removed all categories including the leaf $markafterid in category tree (exclude) or Keep only of category is inside the leaf starting with this id.\n\t *                                                          $markafterid can be an :\n\t *                                                          - int (id of category)\n\t *                                                          - string (categories ids seprated by comma)\n\t *                                                          - array (list of categories ids)\n\t *    @param\tint\t\t\t            $outputmode\t\t\t0=HTML select string, 1=Array\n\t *    @param\tint\t\t\t            $include\t\t\t[=0] Removed or 1=Keep only\n\t *    @param\tstring\t\t\t\t\t$morecss\t\t\tMore CSS\n\t *    @return\tstring\n\t *    @see select_categories()\n\t */\n\tpublic function select_all_categories($type, $selected = '', $htmlname = \"parent\", $maxlength = 64, $markafterid = 0, $outputmode = 0, $include = 0, $morecss = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\t\t$langs->load(\"categories\");\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\n\t\t// For backward compatibility\n\t\tif (is_numeric($type)) {\n\t\t\tdol_syslog(__METHOD__.': using numeric value for parameter type is deprecated. Use string code instead.', LOG_WARNING);\n\t\t}\n\n\t\tif ($type === Categorie::TYPE_BANK_LINE) {\n\t\t\t// TODO Move this into common category feature\n\t\t\t$cate_arbo = array();\n\t\t\t$sql = \"SELECT c.label, c.rowid\";\n\t\t\t$sql .= \" FROM \".$this->db->prefix().\"bank_categ as c\";\n\t\t\t$sql .= \" WHERE entity = \".$conf->entity;\n\t\t\t$sql .= \" ORDER BY c.label\";\n\t\t\t$result = $this->db->query($sql);\n\t\t\tif ($result) {\n\t\t\t\t$num = $this->db->num_rows($result);\n\t\t\t\t$i = 0;\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$objp = $this->db->fetch_object($result);\n\t\t\t\t\tif ($objp) {\n\t\t\t\t\t\t$cate_arbo[$objp->rowid] = array('id'=>$objp->rowid, 'fulllabel'=>$objp->label);\n\t\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\t$this->db->free($result);\n\t\t\t} else {\n\t\t\t\tdol_print_error($this->db);\n\t\t\t}\n\t\t} else {\n\t\t\t$cat = new Categorie($this->db);\n\t\t\t$cate_arbo = $cat->get_full_arbo($type, $markafterid, $include);\n\t\t}\n\n\t\t$output = '<select class=\"flat'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\t\t$outarray = array();\n\t\tif (is_array($cate_arbo)) {\n\t\t\tif (!count($cate_arbo)) {\n\t\t\t\t$output .= '<option value=\"-1\" disabled>'.$langs->trans(\"NoCategoriesDefined\").'</option>';\n\t\t\t} else {\n\t\t\t\t$output .= '<option value=\"-1\">&nbsp;</option>';\n\t\t\t\tforeach ($cate_arbo as $key => $value) {\n\t\t\t\t\tif ($cate_arbo[$key]['id'] == $selected || ($selected === 'auto' && count($cate_arbo) == 1)) {\n\t\t\t\t\t\t$add = 'selected ';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$add = '';\n\t\t\t\t\t}\n\t\t\t\t\t$output .= '<option '.$add.'value=\"'.$cate_arbo[$key]['id'].'\">'.dol_trunc($cate_arbo[$key]['fulllabel'], $maxlength, 'middle').'</option>';\n\n\t\t\t\t\t$outarray[$cate_arbo[$key]['id']] = $cate_arbo[$key]['fulllabel'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$output .= '</select>';\n\t\t$output .= \"\\n\";\n\n\t\tif ($outputmode) {\n\t\t\treturn $outarray;\n\t\t}\n\t\treturn $output;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *     Show a confirmation HTML form or AJAX popup\n\t *\n\t *     @param\tstring\t\t$page        \t   \tUrl of page to call if confirmation is OK\n\t *     @param\tstring\t\t$title       \t   \tTitle\n\t *     @param\tstring\t\t$question    \t   \tQuestion\n\t *     @param \tstring\t\t$action      \t   \tAction\n\t *\t   @param\tarray\t\t$formquestion\t   \tAn array with forms complementary inputs\n\t * \t   @param\tstring\t\t$selectedchoice\t\t\"\" or \"no\" or \"yes\"\n\t * \t   @param\tint\t\t\t$useajax\t\t   \t0=No, 1=Yes, 2=Yes but submit page with &confirm=no if choice is No, 'xxx'=preoutput confirm box with div id=dialog-confirm-xxx\n\t *     @param\tint\t\t\t$height          \tForce height of box\n\t *     @param\tint\t\t\t$width\t\t\t\tForce width of box\n\t *     @return \tvoid\n\t *     @deprecated\n\t *     @see formconfirm()\n\t */\n\tpublic function form_confirm($page, $title, $question, $action, $formquestion = '', $selectedchoice = \"\", $useajax = 0, $height = 170, $width = 500)\n\t{\n\t\t// phpcs:enable\n\t\tdol_syslog(__METHOD__.': using form_confirm is deprecated. Use formconfim instead.', LOG_WARNING);\n\t\tprint $this->formconfirm($page, $title, $question, $action, $formquestion, $selectedchoice, $useajax, $height, $width);\n\t}\n\n\t/**\n\t *     Show a confirmation HTML form or AJAX popup.\n\t *     Easiest way to use this is with useajax=1.\n\t *     If you use useajax='xxx', you must also add jquery code to trigger opening of box (with correct parameters)\n\t *     just after calling this method. For example:\n\t *       print '<script type=\"text/javascript\">'.\"\\n\";\n\t *       print 'jQuery(document).ready(function() {'.\"\\n\";\n\t *       print 'jQuery(\".xxxlink\").click(function(e) { jQuery(\"#aparamid\").val(jQuery(this).attr(\"rel\")); jQuery(\"#dialog-confirm-xxx\").dialog(\"open\"); return false; });'.\"\\n\";\n\t *       print '});'.\"\\n\";\n\t *       print '</script>'.\"\\n\";\n\t *\n\t *     @param  \tstring\t\t\t$page        \t   \tUrl of page to call if confirmation is OK. Can contains parameters (param 'action' and 'confirm' will be reformated)\n\t *     @param\tstring\t\t\t$title       \t   \tTitle\n\t *     @param\tstring\t\t\t$question    \t   \tQuestion\n\t *     @param \tstring\t\t\t$action      \t   \tAction\n\t *\t   @param  \tarray|string\t$formquestion\t   \tAn array with complementary inputs to add into forms: array(array('label'=> ,'type'=> , 'size'=>, 'morecss'=>, 'moreattr'=>))\n\t *\t\t\t\t\t\t\t\t\t\t\t\t\ttype can be 'hidden', 'text', 'password', 'checkbox', 'radio', 'date', 'morecss', 'other' or 'onecolumn'...\n\t * \t   @param  \tstring\t\t\t$selectedchoice  \t'' or 'no', or 'yes' or '1' or '0'\n\t * \t   @param  \tint|string\t\t$useajax\t\t   \t0=No, 1=Yes, 2=Yes but submit page with &confirm=no if choice is No, 'xxx'=Yes and preoutput confirm box with div id=dialog-confirm-xxx\n\t *     @param  \tint|string\t\t$height          \tForce height of box (0 = auto)\n\t *     @param\tint\t\t\t\t$width\t\t\t\tForce width of box ('999' or '90%'). Ignored and forced to 90% on smartphones.\n\t *     @param\tint\t\t\t\t$disableformtag\t\t1=Disable form tag. Can be used if we are already inside a <form> section.\n\t *     @return \tstring      \t\t    \t\t\tHTML ajax code if a confirm ajax popup is required, Pure HTML code if it's an html form\n\t */\n\tpublic function formconfirm($page, $title, $question, $action, $formquestion = '', $selectedchoice = '', $useajax = 0, $height = 0, $width = 500, $disableformtag = 0)\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$more = '<!-- formconfirm before calling page='.dol_escape_htmltag($page).' -->';\n\t\t$formconfirm = '';\n\t\t$inputok = array();\n\t\t$inputko = array();\n\n\t\t// Clean parameters\n\t\t$newselectedchoice = empty($selectedchoice) ? \"no\" : $selectedchoice;\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t$width = '95%';\n\t\t}\n\n\t\t// Set height automatically if not defined\n\t\tif (empty($height)) {\n\t\t\t$height = 220;\n\t\t\tif (is_array($formquestion) && count($formquestion) > 2) {\n\t\t\t\t$height += ((count($formquestion) - 2) * 24);\n\t\t\t}\n\t\t}\n\n\t\tif (is_array($formquestion) && !empty($formquestion)) {\n\t\t\t// First add hidden fields and value\n\t\t\tforeach ($formquestion as $key => $input) {\n\t\t\t\tif (is_array($input) && !empty($input)) {\n\t\t\t\t\tif ($input['type'] == 'hidden') {\n\t\t\t\t\t\t$more .= '<input type=\"hidden\" id=\"'.dol_escape_htmltag($input['name']).'\" name=\"'.dol_escape_htmltag($input['name']).'\" value=\"'.dol_escape_htmltag($input['value']).'\">'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now add questions\n\t\t\t$moreonecolumn = '';\n\t\t\t$more .= '<div class=\"tagtable paddingtopbottomonly centpercent noborderspacing\">'.\"\\n\";\n\t\t\tforeach ($formquestion as $key => $input) {\n\t\t\t\tif (is_array($input) && !empty($input)) {\n\t\t\t\t\t$size = (!empty($input['size']) ? ' size=\"'.$input['size'].'\"' : '');\t// deprecated. Use morecss instead.\n\t\t\t\t\t$moreattr = (!empty($input['moreattr']) ? ' '.$input['moreattr'] : '');\n\t\t\t\t\t$morecss = (!empty($input['morecss']) ? ' '.$input['morecss'] : '');\n\n\t\t\t\t\tif ($input['type'] == 'text') {\n\t\t\t\t\t\t$more .= '<div class=\"tagtr\"><div class=\"tagtd'.(empty($input['tdclass']) ? '' : (' '.$input['tdclass'])).'\">'.$input['label'].'</div><div class=\"tagtd\"><input type=\"text\" class=\"flat'.$morecss.'\" id=\"'.dol_escape_htmltag($input['name']).'\" name=\"'.dol_escape_htmltag($input['name']).'\"'.$size.' value=\"'.$input['value'].'\"'.$moreattr.' /></div></div>'.\"\\n\";\n\t\t\t\t\t} elseif ($input['type'] == 'password')\t{\n\t\t\t\t\t\t$more .= '<div class=\"tagtr\"><div class=\"tagtd'.(empty($input['tdclass']) ? '' : (' '.$input['tdclass'])).'\">'.$input['label'].'</div><div class=\"tagtd\"><input type=\"password\" class=\"flat'.$morecss.'\" id=\"'.dol_escape_htmltag($input['name']).'\" name=\"'.dol_escape_htmltag($input['name']).'\"'.$size.' value=\"'.$input['value'].'\"'.$moreattr.' /></div></div>'.\"\\n\";\n\t\t\t\t\t} elseif ($input['type'] == 'textarea') {\n\t\t\t\t\t\t/*$more .= '<div class=\"tagtr\"><div class=\"tagtd'.(empty($input['tdclass']) ? '' : (' '.$input['tdclass'])).'\">'.$input['label'].'</div><div class=\"tagtd\">';\n\t\t\t\t\t\t$more .= '<textarea name=\"'.$input['name'].'\" class=\"'.$morecss.'\"'.$moreattr.'>';\n\t\t\t\t\t\t$more .= $input['value'];\n\t\t\t\t\t\t$more .= '</textarea>';\n\t\t\t\t\t\t$more .= '</div></div>'.\"\\n\";*/\n\t\t\t\t\t\t$moreonecolumn .= '<div class=\"margintoponly\">';\n\t\t\t\t\t\t$moreonecolumn .= $input['label'].'<br>';\n\t\t\t\t\t\t$moreonecolumn .= '<textarea name=\"'.dol_escape_htmltag($input['name']).'\" id=\"'.dol_escape_htmltag($input['name']).'\" class=\"'.$morecss.'\"'.$moreattr.'>';\n\t\t\t\t\t\t$moreonecolumn .= $input['value'];\n\t\t\t\t\t\t$moreonecolumn .= '</textarea>';\n\t\t\t\t\t\t$moreonecolumn .= '</div>';\n\t\t\t\t\t} elseif ($input['type'] == 'select') {\n\t\t\t\t\t\tif (empty($morecss)) {\n\t\t\t\t\t\t\t$morecss = 'minwidth100';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$show_empty = isset($input['select_show_empty']) ? $input['select_show_empty'] : 1;\n\t\t\t\t\t\t$key_in_label = isset($input['select_key_in_label']) ? $input['select_key_in_label'] : 0;\n\t\t\t\t\t\t$value_as_key = isset($input['select_value_as_key']) ? $input['select_value_as_key'] : 0;\n\t\t\t\t\t\t$translate = isset($input['select_translate']) ? $input['select_translate'] : 0;\n\t\t\t\t\t\t$maxlen = isset($input['select_maxlen']) ? $input['select_maxlen'] : 0;\n\t\t\t\t\t\t$disabled = isset($input['select_disabled']) ? $input['select_disabled'] : 0;\n\t\t\t\t\t\t$sort = isset($input['select_sort']) ? $input['select_sort'] : '';\n\n\t\t\t\t\t\t$more .= '<div class=\"tagtr\"><div class=\"tagtd'.(empty($input['tdclass']) ? '' : (' '.$input['tdclass'])).'\">';\n\t\t\t\t\t\tif (!empty($input['label'])) {\n\t\t\t\t\t\t\t$more .= $input['label'].'</div><div class=\"tagtd left\">';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$more .= $this->selectarray($input['name'], $input['values'], $input['default'], $show_empty, $key_in_label, $value_as_key, $moreattr, $translate, $maxlen, $disabled, $sort, $morecss);\n\t\t\t\t\t\t$more .= '</div></div>'.\"\\n\";\n\t\t\t\t\t} elseif ($input['type'] == 'checkbox') {\n\t\t\t\t\t\t$more .= '<div class=\"tagtr\">';\n\t\t\t\t\t\t$more .= '<div class=\"tagtd'.(empty($input['tdclass']) ? '' : (' '.$input['tdclass'])).'\">'.$input['label'].' </div><div class=\"tagtd\">';\n\t\t\t\t\t\t$more .= '<input type=\"checkbox\" class=\"flat'.$morecss.'\" id=\"'.dol_escape_htmltag($input['name']).'\" name=\"'.dol_escape_htmltag($input['name']).'\"'.$moreattr;\n\t\t\t\t\t\tif (!is_bool($input['value']) && $input['value'] != 'false' && $input['value'] != '0') {\n\t\t\t\t\t\t\t$more .= ' checked';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (is_bool($input['value']) && $input['value']) {\n\t\t\t\t\t\t\t$more .= ' checked';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isset($input['disabled'])) {\n\t\t\t\t\t\t\t$more .= ' disabled';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$more .= ' /></div>';\n\t\t\t\t\t\t$more .= '</div>'.\"\\n\";\n\t\t\t\t\t} elseif ($input['type'] == 'radio') {\n\t\t\t\t\t\t$i = 0;\n\t\t\t\t\t\tforeach ($input['values'] as $selkey => $selval) {\n\t\t\t\t\t\t\t$more .= '<div class=\"tagtr\">';\n\t\t\t\t\t\t\tif ($i == 0) {\n\t\t\t\t\t\t\t\t$more .= '<div class=\"tagtd'.(empty($input['tdclass']) ? ' tdtop' : (' tdtop '.$input['tdclass'])).'\">'.$input['label'].'</div>';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$more .= '<div clas=\"tagtd'.(empty($input['tdclass']) ? '' : (' \"'.$input['tdclass'])).'\">&nbsp;</div>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$more .= '<div class=\"tagtd'.($i == 0 ? ' tdtop' : '').'\"><input type=\"radio\" class=\"flat'.$morecss.'\" id=\"'.dol_escape_htmltag($input['name'].$selkey).'\" name=\"'.dol_escape_htmltag($input['name']).'\" value=\"'.$selkey.'\"'.$moreattr;\n\t\t\t\t\t\t\tif ($input['disabled']) {\n\t\t\t\t\t\t\t\t$more .= ' disabled';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (isset($input['default']) && $input['default'] === $selkey) {\n\t\t\t\t\t\t\t\t$more .= ' checked=\"checked\"';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$more .= ' /> ';\n\t\t\t\t\t\t\t$more .= '<label for=\"'.dol_escape_htmltag($input['name'].$selkey).'\">'.$selval.'</label>';\n\t\t\t\t\t\t\t$more .= '</div></div>'.\"\\n\";\n\t\t\t\t\t\t\t$i++;\n\t\t\t\t\t\t}\n\t\t\t\t\t} elseif ($input['type'] == 'date') {\n\t\t\t\t\t\t$more .= '<div class=\"tagtr\"><div class=\"tagtd'.(empty($input['tdclass']) ? '' : (' '.$input['tdclass'])).'\">'.$input['label'].'</div>';\n\t\t\t\t\t\t$more .= '<div class=\"tagtd\">';\n\t\t\t\t\t\t$addnowlink = (empty($input['datenow']) ? 0 : 1);\n\t\t\t\t\t\t$more .= $this->selectDate($input['value'], $input['name'], 0, 0, 0, '', 1, $addnowlink);\n\t\t\t\t\t\t$more .= '</div></div>'.\"\\n\";\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'day');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'month');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'year');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'hour');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'min');\n\t\t\t\t\t} elseif ($input['type'] == 'other') {\n\t\t\t\t\t\t$more .= '<div class=\"tagtr\"><div class=\"tagtd'.(empty($input['tdclass']) ? '' : (' '.$input['tdclass'])).'\">';\n\t\t\t\t\t\tif (!empty($input['label'])) {\n\t\t\t\t\t\t\t$more .= $input['label'].'</div><div class=\"tagtd\">';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$more .= $input['value'];\n\t\t\t\t\t\t$more .= '</div></div>'.\"\\n\";\n\t\t\t\t\t} elseif ($input['type'] == 'onecolumn') {\n\t\t\t\t\t\t$moreonecolumn .= '<div class=\"margintoponly\">';\n\t\t\t\t\t\t$moreonecolumn .= $input['value'];\n\t\t\t\t\t\t$moreonecolumn .= '</div>'.\"\\n\";\n\t\t\t\t\t} elseif ($input['type'] == 'hidden') {\n\t\t\t\t\t\t// Do nothing more, already added by a previous loop\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$more .= 'Error type '.$input['type'].' for the confirm box is not a supported type';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$more .= '</div>'.\"\\n\";\n\t\t\t$more .= $moreonecolumn;\n\t\t}\n\n\t\t// JQUERY method dialog is broken with smartphone, we use standard HTML.\n\t\t// Note: When using dol_use_jmobile or no js, you must also check code for button use a GET url with action=xxx and check that you also output the confirm code when action=xxx\n\t\t// See page product/card.php for example\n\t\tif (!empty($conf->dol_use_jmobile)) {\n\t\t\t$useajax = 0;\n\t\t}\n\t\tif (empty($conf->use_javascript_ajax)) {\n\t\t\t$useajax = 0;\n\t\t}\n\n\t\tif ($useajax) {\n\t\t\t$autoOpen = true;\n\t\t\t$dialogconfirm = 'dialog-confirm';\n\t\t\t$button = '';\n\t\t\tif (!is_numeric($useajax)) {\n\t\t\t\t$button = $useajax;\n\t\t\t\t$useajax = 1;\n\t\t\t\t$autoOpen = false;\n\t\t\t\t$dialogconfirm .= '-'.$button;\n\t\t\t}\n\t\t\t$pageyes = $page.(preg_match('/\\?/', $page) ? '&' : '?').'action='.$action.'&confirm=yes';\n\t\t\t$pageno = ($useajax == 2 ? $page.(preg_match('/\\?/', $page) ? '&' : '?').'confirm=no' : '');\n\n\t\t\t// Add input fields into list of fields to read during submit (inputok and inputko)\n\t\t\tif (is_array($formquestion)) {\n\t\t\t\tforeach ($formquestion as $key => $input) {\n\t\t\t\t\t//print \"xx \".$key.\" rr \".is_array($input).\"<br>\\n\";\n\t\t\t\t\t// Add name of fields to propagate with the GET when submitting the form with button OK.\n\t\t\t\t\tif (is_array($input) && isset($input['name'])) {\n\t\t\t\t\t\tif (strpos($input['name'], ',') > 0) {\n\t\t\t\t\t\t\t$inputok = array_merge($inputok, explode(',', $input['name']));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarray_push($inputok, $input['name']);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Add name of fields to propagate with the GET when submitting the form with button KO.\n\t\t\t\t\tif (isset($input['inputko']) && $input['inputko'] == 1) {\n\t\t\t\t\t\tarray_push($inputko, $input['name']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Show JQuery confirm box.\n\t\t\t$formconfirm .= '<div id=\"'.$dialogconfirm.'\" title=\"'.dol_escape_htmltag($title).'\" style=\"display: none;\">';\n\t\t\tif (is_array($formquestion) && !empty($formquestion['text'])) {\n\t\t\t\t$formconfirm .= '<div class=\"confirmtext\">'.$formquestion['text'].'</div>'.\"\\n\";\n\t\t\t}\n\t\t\tif (!empty($more)) {\n\t\t\t\t$formconfirm .= '<div class=\"confirmquestions\">'.$more.'</div>'.\"\\n\";\n\t\t\t}\n\t\t\t$formconfirm .= ($question ? '<div class=\"confirmmessage\">'.img_help('', '').' '.$question.'</div>' : '');\n\t\t\t$formconfirm .= '</div>'.\"\\n\";\n\n\t\t\t$formconfirm .= \"\\n<!-- begin code of popup for formconfirm page=\".$page.\" -->\\n\";\n\t\t\t$formconfirm .= '<script type=\"text/javascript\">'.\"\\n\";\n\t\t\t$formconfirm .= \"/* Code for the jQuery('#dialogforpopup').dialog() */\\n\";\n\t\t\t$formconfirm .= 'jQuery(document).ready(function() {\n            $(function() {\n            \t$( \"#'.$dialogconfirm.'\" ).dialog(\n            \t{\n                    autoOpen: '.($autoOpen ? \"true\" : \"false\").',';\n\t\t\tif ($newselectedchoice == 'no') {\n\t\t\t\t$formconfirm .= '\n\t\t\t\t\t\topen: function() {\n            \t\t\t\t$(this).parent().find(\"button.ui-button:eq(2)\").focus();\n\t\t\t\t\t\t},';\n\t\t\t}\n\t\t\t$formconfirm .= '\n                    resizable: false,\n                    height: \"'.$height.'\",\n                    width: \"'.$width.'\",\n                    modal: true,\n                    closeOnEscape: false,\n                    buttons: {\n                        \"'.dol_escape_js($langs->transnoentities(\"Yes\")).'\": function() {\n                        \tvar options = \"&token='.urlencode(newToken()).'\";\n                        \tvar inputok = '.json_encode($inputok).';\t/* List of fields into form */\n                         \tvar pageyes = \"'.dol_escape_js(!empty($pageyes) ? $pageyes : '').'\";\n                         \tif (inputok.length>0) {\n                         \t\t$.each(inputok, function(i, inputname) {\n                         \t\t\tvar more = \"\";\n\t\t\t\t\t\t\t\t\tvar inputvalue;\n                         \t\t\tif ($(\"input[name=\\'\" + inputname + \"\\']\").attr(\"type\") == \"radio\") {\n\t\t\t\t\t\t\t\t\t\tinputvalue = $(\"input[name=\\'\" + inputname + \"\\']:checked\").val();\n\t\t\t\t\t\t\t\t\t} else {\n                         \t\t    \tif ($(\"#\" + inputname).attr(\"type\") == \"checkbox\") { more = \":checked\"; }\n                         \t\t\t\tinputvalue = $(\"#\" + inputname + more).val();\n\t\t\t\t\t\t\t\t\t}\n                         \t\t\tif (typeof inputvalue == \"undefined\") { inputvalue=\"\"; }\n\t\t\t\t\t\t\t\t\tconsole.log(\"formconfirm check inputname=\"+inputname+\" inputvalue=\"+inputvalue);\n                         \t\t\toptions += \"&\" + inputname + \"=\" + encodeURIComponent(inputvalue);\n                         \t\t});\n                         \t}\n                         \tvar urljump = pageyes + (pageyes.indexOf(\"?\") < 0 ? \"?\" : \"\") + options;\n            \t\t\t\tif (pageyes.length > 0) { location.href = urljump; }\n                            $(this).dialog(\"close\");\n                        },\n                        \"'.dol_escape_js($langs->transnoentities(\"No\")).'\": function() {\n                        \tvar options = \"&token='.urlencode(newToken()).'\";\n                         \tvar inputko = '.json_encode($inputko).';\t/* List of fields into form */\n                         \tvar pageno=\"'.dol_escape_js(!empty($pageno) ? $pageno : '').'\";\n                         \tif (inputko.length>0) {\n                         \t\t$.each(inputko, function(i, inputname) {\n                         \t\t\tvar more = \"\";\n                         \t\t\tif ($(\"#\" + inputname).attr(\"type\") == \"checkbox\") { more = \":checked\"; }\n                         \t\t\tvar inputvalue = $(\"#\" + inputname + more).val();\n                         \t\t\tif (typeof inputvalue == \"undefined\") { inputvalue=\"\"; }\n                         \t\t\toptions += \"&\" + inputname + \"=\" + encodeURIComponent(inputvalue);\n                         \t\t});\n                         \t}\n                         \tvar urljump=pageno + (pageno.indexOf(\"?\") < 0 ? \"?\" : \"\") + options;\n                         \t//alert(urljump);\n            \t\t\t\tif (pageno.length > 0) { location.href = urljump; }\n                            $(this).dialog(\"close\");\n                        }\n                    }\n                }\n                );\n\n            \tvar button = \"'.$button.'\";\n            \tif (button.length > 0) {\n                \t$( \"#\" + button ).click(function() {\n                \t\t$(\"#'.$dialogconfirm.'\").dialog(\"open\");\n        \t\t\t});\n                }\n            });\n            });\n            </script>';\n\t\t\t$formconfirm .= \"<!-- end ajax formconfirm -->\\n\";\n\t\t} else {\n\t\t\t$formconfirm .= \"\\n<!-- begin formconfirm page=\".dol_escape_htmltag($page).\" -->\\n\";\n\n\t\t\tif (empty($disableformtag)) {\n\t\t\t\t$formconfirm .= '<form method=\"POST\" action=\"'.$page.'\" class=\"notoptoleftroright\">'.\"\\n\";\n\t\t\t}\n\n\t\t\t$formconfirm .= '<input type=\"hidden\" name=\"action\" value=\"'.$action.'\">'.\"\\n\";\n\t\t\t$formconfirm .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">'.\"\\n\";\n\n\t\t\t$formconfirm .= '<table class=\"valid centpercent\">'.\"\\n\";\n\n\t\t\t// Line title\n\t\t\t$formconfirm .= '<tr class=\"validtitre\"><td class=\"validtitre\" colspan=\"2\">';\n\t\t\t$formconfirm .= img_picto('', 'recent').' '.$title;\n\t\t\t$formconfirm .= '</td></tr>'.\"\\n\";\n\n\t\t\t// Line text\n\t\t\tif (is_array($formquestion) && !empty($formquestion['text'])) {\n\t\t\t\t$formconfirm .= '<tr class=\"valid\"><td class=\"valid\" colspan=\"2\">'.$formquestion['text'].'</td></tr>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Line form fields\n\t\t\tif ($more) {\n\t\t\t\t$formconfirm .= '<tr class=\"valid\"><td class=\"valid\" colspan=\"2\">'.\"\\n\";\n\t\t\t\t$formconfirm .= $more;\n\t\t\t\t$formconfirm .= '</td></tr>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Line with question\n\t\t\t$formconfirm .= '<tr class=\"valid\">';\n\t\t\t$formconfirm .= '<td class=\"valid\">'.$question.'</td>';\n\t\t\t$formconfirm .= '<td class=\"valid center\">';\n\t\t\t$formconfirm .= $this->selectyesno(\"confirm\", $newselectedchoice, 0, false, 0, 0, 'marginleftonly marginrightonly');\n\t\t\t$formconfirm .= '<input class=\"button valignmiddle confirmvalidatebutton\" type=\"submit\" value=\"'.$langs->trans(\"Validate\").'\">';\n\t\t\t$formconfirm .= '</td>';\n\t\t\t$formconfirm .= '</tr>'.\"\\n\";\n\n\t\t\t$formconfirm .= '</table>'.\"\\n\";\n\n\t\t\tif (empty($disableformtag)) {\n\t\t\t\t$formconfirm .= \"</form>\\n\";\n\t\t\t}\n\t\t\t$formconfirm .= '<br>';\n\n\t\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t\t$formconfirm .= '<!-- code to disable button to avoid double clic -->';\n\t\t\t\t$formconfirm .= '<script type=\"text/javascript\">'.\"\\n\";\n\t\t\t\t$formconfirm .= '\n\t\t\t\t$(document).ready(function () {\n\t\t\t\t\t$(\".confirmvalidatebutton\").on(\"click\", function() {\n\t\t\t\t\t\tconsole.log(\"We click on button\");\n\t\t\t\t\t\t$(this).attr(\"disabled\", \"disabled\");\n\t\t\t\t\t\tsetTimeout(\\'$(\".confirmvalidatebutton\").removeAttr(\"disabled\")\\', 3000);\n\t\t\t\t\t\t//console.log($(this).closest(\"form\"));\n\t\t\t\t\t\t$(this).closest(\"form\").submit();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t';\n\t\t\t\t$formconfirm .= '</script>'.\"\\n\";\n\t\t\t}\n\n\t\t\t$formconfirm .= \"<!-- end formconfirm -->\\n\";\n\t\t}\n\n\t\treturn $formconfirm;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Show a form to select a project\n\t *\n\t *    @param\tint\t\t$page        \t\tPage\n\t *    @param\tint\t\t$socid       \t\tId third party (-1=all, 0=only projects not linked to a third party, id=projects not linked or linked to third party id)\n\t *    @param    int\t\t$selected    \t\tId pre-selected project\n\t *    @param    string\t$htmlname    \t\tName of select field\n\t *    @param\tint\t\t$discard_closed\t\tDiscard closed projects (0=Keep,1=hide completely except $selected,2=Disable)\n\t *    @param\tint\t\t$maxlength\t\t\tMax length\n\t *    @param\tint\t\t$forcefocus\t\t\tForce focus on field (works with javascript only)\n\t *    @param    int     $nooutput           No print is done. String is returned.\n\t *    @return\tstring                      Return html content\n\t */\n\tpublic function form_project($page, $socid, $selected = '', $htmlname = 'projectid', $discard_closed = 0, $maxlength = 20, $forcefocus = 0, $nooutput = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/project.lib.php';\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formprojet.class.php';\n\n\t\t$out = '';\n\n\t\t$formproject = new FormProjets($this->db);\n\n\t\t$langs->load(\"project\");\n\t\tif ($htmlname != \"none\") {\n\t\t\t$out .= \"\\n\";\n\t\t\t$out .= '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\t$out .= '<input type=\"hidden\" name=\"action\" value=\"classin\">';\n\t\t\t$out .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$out .= $formproject->select_projects($socid, $selected, $htmlname, $maxlength, 0, 1, $discard_closed, $forcefocus, 0, 0, '', 1);\n\t\t\t$out .= '<input type=\"submit\" class=\"button smallpaddingimp\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t$out .= '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$projet = new Project($this->db);\n\t\t\t\t$projet->fetch($selected);\n\t\t\t\t$out .= $projet->getNomUrl(1, '', 1);\n\t\t\t} else {\n\t\t\t\t$out .= \"&nbsp;\";\n\t\t\t}\n\t\t}\n\n\t\tif (empty($nooutput)) {\n\t\t\tprint $out;\n\t\t\treturn '';\n\t\t}\n\t\treturn $out;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tShow a form to select payment conditions\n\t *\n\t *  @param\tint\t\t$page        \tPage\n\t *  @param  string\t$selected    \tId condition pre-selectionne\n\t *  @param  string\t$htmlname    \tName of select html field\n\t *\t@param\tint\t\t$addempty\t\tAdd empty entry\n\t *  @param\tstring\t$type\t\t\tType ('direct-debit' or 'bank-transfer')\n\t *  @return\tvoid\n\t */\n\tpublic function form_conditions_reglement($page, $selected = '', $htmlname = 'cond_reglement_id', $addempty = 0, $type = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setconditions\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tif ($type) {\n\t\t\t\tprint '<input type=\"hidden\" name=\"type\" value=\"'.dol_escape_htmltag($type).'\">';\n\t\t\t}\n\t\t\t$this->select_conditions_paiements($selected, $htmlname, -1, $addempty, 0, '');\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle smallpaddingimp\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$this->load_cache_conditions_paiements();\n\t\t\t\tif (isset($this->cache_conditions_paiements[$selected])) {\n\t\t\t\t\tprint $this->cache_conditions_paiements[$selected]['label'];\n\t\t\t\t} else {\n\t\t\t\t\t$langs->load('errors');\n\t\t\t\t\tprint $langs->trans('ErrorNotInDictionaryPaymentConditions');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Show a form to select a delivery delay\n\t *\n\t *  @param  int\t\t$page        \tPage\n\t *  @param  string\t$selected    \tId condition pre-selectionne\n\t *  @param  string\t$htmlname    \tName of select html field\n\t *\t@param\tint\t\t$addempty\t\tAjoute entree vide\n\t *  @return\tvoid\n\t */\n\tpublic function form_availability($page, $selected = '', $htmlname = 'availability', $addempty = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setavailability\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$this->selectAvailabilityDelay($selected, $htmlname, -1, $addempty);\n\t\t\tprint '<input type=\"submit\" name=\"modify\" class=\"button smallpaddingimp\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '<input type=\"submit\" name=\"cancel\" class=\"button smallpaddingimp\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$this->load_cache_availability();\n\t\t\t\tprint $this->cache_availability[$selected]['label'];\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *  Output HTML form to select list of input reason (events that triggered an object creation, like after sending an emailing, making an advert, ...)\n\t *  List found into table c_input_reason loaded by loadCacheInputReason\n\t *\n\t *  @param  string\t$page        \tPage\n\t *  @param  string\t$selected    \tId condition pre-selectionne\n\t *  @param  string\t$htmlname    \tName of select html field\n\t *  @param\tint\t\t$addempty\t\tAdd empty entry\n\t *  @return\tvoid\n\t */\n\tpublic function formInputReason($page, $selected = '', $htmlname = 'demandreason', $addempty = 0)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setdemandreason\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$this->selectInputReason($selected, $htmlname, -1, $addempty);\n\t\t\tprint '<input type=\"submit\" class=\"button smallpaddingimp\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$this->loadCacheInputReason();\n\t\t\t\tforeach ($this->cache_demand_reason as $key => $val) {\n\t\t\t\t\tif ($val['id'] == $selected) {\n\t\t\t\t\t\tprint $val['label'];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Show a form + html select a date\n\t *\n\t *    @param\tstring\t\t$page        \tPage\n\t *    @param\tstring\t\t$selected    \tDate preselected\n\t *    @param    string\t\t$htmlname    \tHtml name of date input fields or 'none'\n\t *    @param    int\t\t\t$displayhour \tDisplay hour selector\n\t *    @param    int\t\t\t$displaymin\t\tDisplay minutes selector\n\t *    @param\tint\t\t\t$nooutput\t\t1=No print output, return string\n\t *    @param\tstring\t\t$type\t\t\t'direct-debit' or 'bank-transfer'\n\t *    @return\tstring\n\t *    @see\t\tselectDate()\n\t */\n\tpublic function form_date($page, $selected, $htmlname, $displayhour = 0, $displaymin = 0, $nooutput = 0, $type = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$ret = '';\n\n\t\tif ($htmlname != \"none\") {\n\t\t\t$ret .= '<form method=\"POST\" action=\"'.$page.'\" name=\"form'.$htmlname.'\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"action\" value=\"set'.$htmlname.'\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tif ($type) {\n\t\t\t\t$ret .= '<input type=\"hidden\" name=\"type\" value=\"'.dol_escape_htmltag($type).'\">';\n\t\t\t}\n\t\t\t$ret .= '<table class=\"nobordernopadding\">';\n\t\t\t$ret .= '<tr><td>';\n\t\t\t$ret .= $this->selectDate($selected, $htmlname, $displayhour, $displaymin, 1, 'form'.$htmlname, 1, 0);\n\t\t\t$ret .= '</td>';\n\t\t\t$ret .= '<td class=\"left\"><input type=\"submit\" class=\"button smallpaddingimp\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\t$ret .= '</tr></table></form>';\n\t\t} else {\n\t\t\tif ($displayhour) {\n\t\t\t\t$ret .= dol_print_date($selected, 'dayhour');\n\t\t\t} else {\n\t\t\t\t$ret .= dol_print_date($selected, 'day');\n\t\t\t}\n\t\t}\n\n\t\tif (empty($nooutput)) {\n\t\t\tprint $ret;\n\t\t}\n\t\treturn $ret;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Show a select form to choose a user\n\t *\n\t *  @param\tstring\t$page        \tPage\n\t *  @param  string\t$selected    \tId of user preselected\n\t *  @param  string\t$htmlname    \tName of input html field. If 'none', we just output the user link.\n\t *  @param  array\t$exclude\t\tList of users id to exclude\n\t *  @param  array\t$include        List of users id to include\n\t *  @return\tvoid\n\t */\n\tpublic function form_users($page, $selected = '', $htmlname = 'userid', $exclude = '', $include = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\" name=\"form'.$htmlname.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set'.$htmlname.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint $this->select_dolusers($selected, $htmlname, 1, $exclude, 0, $include);\n\t\t\tprint '<input type=\"submit\" class=\"button smallpaddingimp valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/user/class/user.class.php';\n\t\t\t\t$theuser = new User($this->db);\n\t\t\t\t$theuser->fetch($selected);\n\t\t\t\tprint $theuser->getNomUrl(1);\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Show form with payment mode\n\t *\n\t *    @param\tstring\t$page        \tPage\n\t *    @param    int\t\t$selected    \tId mode pre-selectionne\n\t *    @param    string\t$htmlname    \tName of select html field\n\t *    @param  \tstring\t$filtertype\t\tTo filter on field type in llx_c_paiement ('CRDT' or 'DBIT' or array('code'=>xx,'label'=>zz))\n\t *    @param    int     $active         Active or not, -1 = all\n\t *    @param   \tint     $addempty       1=Add empty entry\n\t *    @param\tstring\t$type\t\t\tType ('direct-debit' or 'bank-transfer')\n\t *    @return\tvoid\n\t */\n\tpublic function form_modes_reglement($page, $selected = '', $htmlname = 'mode_reglement_id', $filtertype = '', $active = 1, $addempty = 0, $type = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setmode\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tif ($type) {\n\t\t\t\tprint '<input type=\"hidden\" name=\"type\" value=\"'.dol_escape_htmltag($type).'\">';\n\t\t\t}\n\t\t\tprint $this->select_types_paiements($selected, $htmlname, $filtertype, 0, $addempty, 0, 0, $active, '', 1);\n\t\t\tprint '<input type=\"submit\" class=\"button smallpaddingimp valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$this->load_cache_types_paiements();\n\t\t\t\tprint $this->cache_types_paiements[$selected]['label'];\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *    Show form with transport mode\n\t *\n\t *    @param\tstring\t$page        \tPage\n\t *    @param    int\t\t$selected    \tId mode pre-select\n\t *    @param    string\t$htmlname    \tName of select html field\n\t *    @param    int     $active         Active or not, -1 = all\n\t *    @param    int     $addempty       1=Add empty entry\n\t *    @return\tvoid\n\t */\n\tpublic function formSelectTransportMode($page, $selected = '', $htmlname = 'transport_mode_id', $active = 1, $addempty = 0)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"settransportmode\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$this->selectTransportMode($selected, $htmlname, 0, $addempty, 0, 0, $active);\n\t\t\tprint '<input type=\"submit\" class=\"button smallpaddingimp valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$this->load_cache_transport_mode();\n\t\t\t\tprint $this->cache_transport_mode[$selected]['label'];\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Show form with multicurrency code\n\t *\n\t *    @param\tstring\t$page        \tPage\n\t *    @param    string\t$selected    \tcode pre-selectionne\n\t *    @param    string\t$htmlname    \tName of select html field\n\t *    @return\tvoid\n\t */\n\tpublic function form_multicurrency_code($page, $selected = '', $htmlname = 'multicurrency_code')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setmulticurrencycode\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint $this->selectMultiCurrency($selected, $htmlname, 0);\n\t\t\tprint '<input type=\"submit\" class=\"button smallpaddingimp valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tdol_include_once('/core/lib/company.lib.php');\n\t\t\tprint !empty($selected) ? currency_name($selected, 1) : '&nbsp;';\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Show form with multicurrency rate\n\t *\n\t *    @param\tstring\t$page        \tPage\n\t *    @param    double\t$rate\t    \tCurrent rate\n\t *    @param    string\t$htmlname    \tName of select html field\n\t *    @param    string  $currency       Currency code to explain the rate\n\t *    @return\tvoid\n\t */\n\tpublic function form_multicurrency_rate($page, $rate = '', $htmlname = 'multicurrency_tx', $currency = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $mysoc, $conf;\n\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setmulticurrencyrate\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint '<input type=\"text\" class=\"maxwidth100\" name=\"'.$htmlname.'\" value=\"'.(!empty($rate) ? price(price2num($rate, 'CU')) : 1).'\" /> ';\n\t\t\tprint '<select name=\"calculation_mode\">';\n\t\t\tprint '<option value=\"1\">Change '.$langs->trans(\"PriceUHT\").' of lines</option>';\n\t\t\tprint '<option value=\"2\">Change '.$langs->trans(\"PriceUHTCurrency\").' of lines</option>';\n\t\t\tprint '</select> ';\n\t\t\tprint '<input type=\"submit\" class=\"button smallpaddingimp valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif (!empty($rate)) {\n\t\t\t\tprint price($rate, 1, $langs, 1, 0);\n\t\t\t\tif ($currency && $rate != 1) {\n\t\t\t\t\tprint ' &nbsp; ('.price($rate, 1, $langs, 1, 0).' '.$currency.' = 1 '.$conf->currency.')';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint 1;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tShow a select box with available absolute discounts\n\t *\n\t *  @param  string\t$page        \tPage URL where form is shown\n\t *  @param  int\t\t$selected    \tValue pre-selected\n\t *\t@param  string\t$htmlname    \tName of SELECT component. If 'none', not changeable. Example 'remise_id'.\n\t *\t@param\tint\t\t$socid\t\t\tThird party id\n\t * \t@param\tfloat\t$amount\t\t\tTotal amount available\n\t * \t@param\tstring\t$filter\t\t\tSQL filter on discounts\n\t * \t@param\tint\t\t$maxvalue\t\tMax value for lines that can be selected\n\t *  @param  string\t$more           More string to add\n\t *  @param  int     $hidelist       1=Hide list\n\t *  @param\tint\t\t$discount_type\t0 => customer discount, 1 => supplier discount\n\t *  @return\tvoid\n\t */\n\tpublic function form_remise_dispo($page, $selected, $htmlname, $socid, $amount, $filter = '', $maxvalue = 0, $more = '', $hidelist = 0, $discount_type = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setabsolutediscount\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint '<div class=\"inline-block\">';\n\t\t\tif (!empty($discount_type)) {\n\t\t\t\tif (!empty($conf->global->FACTURE_DEPOSITS_ARE_JUST_PAYMENTS)) {\n\t\t\t\t\tif (!$filter || $filter == \"fk_invoice_supplier_source IS NULL\") {\n\t\t\t\t\t\t$translationKey = 'HasAbsoluteDiscountFromSupplier'; // If we want deposit to be substracted to payments only and not to total of final invoice\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$translationKey = 'HasCreditNoteFromSupplier';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!$filter || $filter == \"fk_invoice_supplier_source IS NULL OR (description LIKE '(DEPOSIT)%' AND description NOT LIKE '(EXCESS PAID)%')\") {\n\t\t\t\t\t\t$translationKey = 'HasAbsoluteDiscountFromSupplier';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$translationKey = 'HasCreditNoteFromSupplier';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!empty($conf->global->FACTURE_DEPOSITS_ARE_JUST_PAYMENTS)) {\n\t\t\t\t\tif (!$filter || $filter == \"fk_facture_source IS NULL\") {\n\t\t\t\t\t\t$translationKey = 'CompanyHasAbsoluteDiscount'; // If we want deposit to be substracted to payments only and not to total of final invoice\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$translationKey = 'CompanyHasCreditNote';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!$filter || $filter == \"fk_facture_source IS NULL OR (description LIKE '(DEPOSIT)%' AND description NOT LIKE '(EXCESS RECEIVED)%')\") {\n\t\t\t\t\t\t$translationKey = 'CompanyHasAbsoluteDiscount';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$translationKey = 'CompanyHasCreditNote';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint $langs->trans($translationKey, price($amount, 0, $langs, 0, 0, -1, $conf->currency));\n\t\t\tif (empty($hidelist)) {\n\t\t\t\tprint ' ';\n\t\t\t}\n\t\t\tprint '</div>';\n\t\t\tif (empty($hidelist)) {\n\t\t\t\tprint '<div class=\"inline-block\" style=\"padding-right: 10px\">';\n\t\t\t\t$newfilter = 'discount_type='.intval($discount_type);\n\t\t\t\tif (!empty($discount_type)) {\n\t\t\t\t\t$newfilter .= ' AND fk_invoice_supplier IS NULL AND fk_invoice_supplier_line IS NULL'; // Supplier discounts available\n\t\t\t\t} else {\n\t\t\t\t\t$newfilter .= ' AND fk_facture IS NULL AND fk_facture_line IS NULL'; // Customer discounts available\n\t\t\t\t}\n\t\t\t\tif ($filter) {\n\t\t\t\t\t$newfilter .= ' AND ('.$filter.')';\n\t\t\t\t}\n\t\t\t\t$nbqualifiedlines = $this->select_remises($selected, $htmlname, $newfilter, $socid, $maxvalue);\n\t\t\t\tif ($nbqualifiedlines > 0) {\n\t\t\t\t\tprint ' &nbsp; <input type=\"submit\" class=\"button smallpaddingimp\" value=\"'.dol_escape_htmltag($langs->trans(\"UseLine\")).'\"';\n\t\t\t\t\tif (!empty($discount_type) && $filter && $filter != \"fk_invoice_supplier_source IS NULL OR (description LIKE '(DEPOSIT)%' AND description NOT LIKE '(EXCESS PAID)%')\") {\n\t\t\t\t\t\tprint ' title=\"'.$langs->trans(\"UseCreditNoteInInvoicePayment\").'\"';\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($discount_type) && $filter && $filter != \"fk_facture_source IS NULL OR (description LIKE '(DEPOSIT)%' AND description NOT LIKE '(EXCESS RECEIVED)%')\") {\n\t\t\t\t\t\tprint ' title=\"'.$langs->trans(\"UseCreditNoteInInvoicePayment\").'\"';\n\t\t\t\t\t}\n\n\t\t\t\t\tprint '>';\n\t\t\t\t}\n\t\t\t\tprint '</div>';\n\t\t\t}\n\t\t\tif ($more) {\n\t\t\t\tprint '<div class=\"inline-block\">';\n\t\t\t\tprint $more;\n\t\t\t\tprint '</div>';\n\t\t\t}\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\tprint $selected;\n\t\t\t} else {\n\t\t\t\tprint \"0\";\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Show forms to select a contact\n\t *\n\t *  @param\tstring\t\t$page        \tPage\n\t *  @param\tSociete\t\t$societe\t\tFilter on third party\n\t *  @param    int\t\t\t$selected    \tId contact pre-selectionne\n\t *  @param    string\t\t$htmlname    \tName of HTML select. If 'none', we just show contact link.\n\t *  @return\tvoid\n\t */\n\tpublic function form_contacts($page, $societe, $selected = '', $htmlname = 'contactid')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf;\n\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set_contact\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint '<table class=\"nobordernopadding\">';\n\t\t\tprint '<tr><td>';\n\t\t\tprint $this->selectcontacts($societe->id, $selected, $htmlname);\n\t\t\t$num = $this->num;\n\t\t\tif ($num == 0) {\n\t\t\t\t$addcontact = (!empty($conf->global->SOCIETE_ADDRESSES_MANAGEMENT) ? $langs->trans(\"AddContact\") : $langs->trans(\"AddContactAddress\"));\n\t\t\t\tprint '<a href=\"'.DOL_URL_ROOT.'/contact/card.php?socid='.$societe->id.'&amp;action=create&amp;backtoreferer=1\">'.$addcontact.'</a>';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '<td class=\"left\"><input type=\"submit\" class=\"button smallpaddingimp\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\tprint '</tr></table></form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\n\t\t\t\t$contact = new Contact($this->db);\n\t\t\t\t$contact->fetch($selected);\n\t\t\t\tprint $contact->getFullName($langs);\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Output html select to select thirdparty\n\t *\n\t *  @param\tstring\t$page       \tPage\n\t *  @param  string\t$selected   \tId preselected\n\t *  @param  string\t$htmlname\t\tName of HTML select\n\t *  @param  string\t$filter         Optional filters criteras. Do not use a filter coming from input of users.\n\t *\t@param\tint\t\t$showempty\t\tAdd an empty field\n\t * \t@param\tint\t\t$showtype\t\tShow third party type in combolist (customer, prospect or supplier)\n\t * \t@param\tint\t\t$forcecombo\t\tForce to use combo box\n\t *  @param\tarray\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @param  int     $nooutput       No print output. Return it only.\n\t *  @param\tarray\t$excludeids\t\tExclude IDs from the select combo\n\t *  @return\tvoid|string\n\t */\n\tpublic function form_thirdparty($page, $selected = '', $htmlname = 'socid', $filter = '', $showempty = 0, $showtype = 0, $forcecombo = 0, $events = array(), $nooutput = 0, $excludeids = array())\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$out = '';\n\t\tif ($htmlname != \"none\") {\n\t\t\t$out .= '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\t$out .= '<input type=\"hidden\" name=\"action\" value=\"set_thirdparty\">';\n\t\t\t$out .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$out .= $this->select_company($selected, $htmlname, $filter, $showempty, $showtype, $forcecombo, $events, 0, 'minwidth100', '', '', 1, array(), false, $excludeids);\n\t\t\t$out .= '<input type=\"submit\" class=\"button smallpaddingimp valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t$out .= '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\n\t\t\t\t$soc = new Societe($this->db);\n\t\t\t\t$soc->fetch($selected);\n\t\t\t\t$out .= $soc->getNomUrl($langs);\n\t\t\t} else {\n\t\t\t\t$out .= \"&nbsp;\";\n\t\t\t}\n\t\t}\n\n\t\tif ($nooutput) {\n\t\t\treturn $out;\n\t\t} else {\n\t\t\tprint $out;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Retourne la liste des devises, dans la langue de l'utilisateur\n\t *\n\t *    @param\tstring\t$selected    preselected currency code\n\t *    @param    string\t$htmlname    name of HTML select list\n\t *    @deprecated\n\t *    @return\tvoid\n\t */\n\tpublic function select_currency($selected = '', $htmlname = 'currency_id')\n\t{\n\t\t// phpcs:enable\n\t\tprint $this->selectCurrency($selected, $htmlname);\n\t}\n\n\t/**\n\t *  Retourne la liste des devises, dans la langue de l'utilisateur\n\t *\n\t *  @param\tstring\t$selected    preselected currency code\n\t *  @param  string\t$htmlname    name of HTML select list\n\t *  @param  string  $mode        0 = Add currency symbol into label, 1 = Add 3 letter iso code\n\t * \t@return\tstring\n\t */\n\tpublic function selectCurrency($selected = '', $htmlname = 'currency_id', $mode = 0)\n\t{\n\t\tglobal $conf, $langs, $user;\n\n\t\t$langs->loadCacheCurrencies('');\n\n\t\t$out = '';\n\n\t\tif ($selected == 'euro' || $selected == 'euros') {\n\t\t\t$selected = 'EUR'; // Pour compatibilite\n\t\t}\n\n\t\t$out .= '<select class=\"flat maxwidth200onsmartphone minwidth300\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\t\tforeach ($langs->cache_currencies as $code_iso => $currency) {\n\t\t\t$labeltoshow = $currency['label'];\n\t\t\tif ($mode == 1) {\n\t\t\t\t$labeltoshow .= ' <span class=\"opacitymedium\">('.$code_iso.')</span>';\n\t\t\t} else {\n\t\t\t\t$labeltoshow .= ' <span class=\"opacitymedium\">('.$langs->getCurrencySymbol($code_iso).')</span>';\n\t\t\t}\n\n\t\t\tif ($selected && $selected == $code_iso) {\n\t\t\t\t$out .= '<option value=\"'.$code_iso.'\" selected data-html=\"'.dol_escape_htmltag($labeltoshow).'\">';\n\t\t\t} else {\n\t\t\t\t$out .= '<option value=\"'.$code_iso.'\" data-html=\"'.dol_escape_htmltag($labeltoshow).'\">';\n\t\t\t}\n\t\t\t$out .= $labeltoshow;\n\t\t\t$out .= '</option>';\n\t\t}\n\t\t$out .= '</select>';\n\t\tif ($user->admin) {\n\t\t\t$out .= info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\n\t\t// Make select dynamic\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t$out .= ajax_combobox($htmlname);\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tReturn array of currencies in user language\n\t *\n\t *  @param\tstring\t$selected    preselected currency code\n\t *  @param  string\t$htmlname    name of HTML select list\n\t *  @param  integer\t$useempty    1=Add empty line\n\t *  @param string $filter Optional filters criteras (example: 'code <> x', ' in (1,3)')\n\t *  @param bool $excludeConfCurrency false  = If company current currency not in table, we add it into list. Should always be available.  true = we are in currency_rate update , we don't want to see conf->currency in select\n\t * \t@return\tstring\n\t */\n\tpublic function selectMultiCurrency($selected = '', $htmlname = 'multicurrency_code', $useempty = 0, $filter = '', $excludeConfCurrency = false)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$langs->loadCacheCurrencies(''); // Load ->cache_currencies\n\n\t\t$TCurrency = array();\n\n\t\t$sql = \"SELECT code FROM \".$this->db->prefix().\"multicurrency\";\n\t\t$sql .= \" WHERE entity IN ('\".getEntity('mutlicurrency').\"')\";\n\t\tif ($filter) {\n\t\t\t$sql .= \" AND \".$filter;\n\t\t}\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$TCurrency[$obj->code] = $obj->code;\n\t\t\t}\n\t\t}\n\n\t\t$out = '';\n\t\t$out .= '<select class=\"flat\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\t\tif ($useempty) {\n\t\t\t$out .= '<option value=\"\">&nbsp;</option>';\n\t\t}\n\t\t// If company current currency not in table, we add it into list. Should always be available.\n\t\tif (!in_array($conf->currency, $TCurrency) && !$excludeConfCurrency) {\n\t\t\t$TCurrency[$conf->currency] = $conf->currency;\n\t\t}\n\t\tif (count($TCurrency) > 0) {\n\t\t\tforeach ($langs->cache_currencies as $code_iso => $currency) {\n\t\t\t\tif (isset($TCurrency[$code_iso])) {\n\t\t\t\t\tif (!empty($selected) && $selected == $code_iso) {\n\t\t\t\t\t\t$out .= '<option value=\"'.$code_iso.'\" selected=\"selected\">';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$out .= '<option value=\"'.$code_iso.'\">';\n\t\t\t\t\t}\n\n\t\t\t\t\t$out .= $currency['label'];\n\t\t\t\t\t$out .= ' ('.$langs->getCurrencySymbol($code_iso).')';\n\t\t\t\t\t$out .= '</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$out .= '</select>';\n\t\t// Make select dynamic\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t$out .= ajax_combobox($htmlname);\n\n\t\treturn $out;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Load into the cache vat rates of a country\n\t *\n\t *  @param\tstring\t$country_code\t\tCountry code with quotes (\"'CA'\", or \"'CA,IN,...'\")\n\t *  @return\tint\t\t\t\t\t\t\tNb of loaded lines, 0 if already loaded, <0 if KO\n\t */\n\tpublic function load_cache_vatrates($country_code)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_vatrates);\n\t\tif ($num > 0) {\n\t\t\treturn $num; // Cache already loaded\n\t\t}\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$sql = \"SELECT DISTINCT t.rowid, t.code, t.taux, t.localtax1, t.localtax1_type, t.localtax2, t.localtax2_type, t.recuperableonly\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"c_tva as t, \".$this->db->prefix().\"c_country as c\";\n\t\t$sql .= \" WHERE t.fk_pays = c.rowid\";\n\t\t$sql .= \" AND t.active > 0\";\n\t\t$sql .= \" AND c.code IN (\".$this->db->sanitize($country_code, 1).\")\";\n\t\t$sql .= \" ORDER BY t.code ASC, t.taux ASC, t.recuperableonly ASC\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\tif ($num) {\n\t\t\t\tfor ($i = 0; $i < $num; $i++) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$this->cache_vatrates[$i]['rowid']\t= $obj->rowid;\n\t\t\t\t\t$this->cache_vatrates[$i]['code'] = $obj->code;\n\t\t\t\t\t$this->cache_vatrates[$i]['txtva']\t= $obj->taux;\n\t\t\t\t\t$this->cache_vatrates[$i]['nprtva'] = $obj->recuperableonly;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax1']\t    = $obj->localtax1;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax1_type']\t= $obj->localtax1_type;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax2']\t    = $obj->localtax2;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax2_type']\t= $obj->localtax1_type;\n\n\t\t\t\t\t$this->cache_vatrates[$i]['label'] = $obj->taux.'%'.($obj->code ? ' ('.$obj->code.')' : ''); // Label must contains only 0-9 , . % or *\n\t\t\t\t\t$this->cache_vatrates[$i]['labelallrates'] = $obj->taux.'/'.($obj->localtax1 ? $obj->localtax1 : '0').'/'.($obj->localtax2 ? $obj->localtax2 : '0').($obj->code ? ' ('.$obj->code.')' : ''); // Must never be used as key, only label\n\t\t\t\t\t$positiverates = '';\n\t\t\t\t\tif ($obj->taux) {\n\t\t\t\t\t\t$positiverates .= ($positiverates ? '/' : '').$obj->taux;\n\t\t\t\t\t}\n\t\t\t\t\tif ($obj->localtax1) {\n\t\t\t\t\t\t$positiverates .= ($positiverates ? '/' : '').$obj->localtax1;\n\t\t\t\t\t}\n\t\t\t\t\tif ($obj->localtax2) {\n\t\t\t\t\t\t$positiverates .= ($positiverates ? '/' : '').$obj->localtax2;\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($positiverates)) {\n\t\t\t\t\t\t$positiverates = '0';\n\t\t\t\t\t}\n\t\t\t\t\t$this->cache_vatrates[$i]['labelpositiverates'] = $positiverates.($obj->code ? ' ('.$obj->code.')' : ''); // Must never be used as key, only label\n\t\t\t\t}\n\n\t\t\t\treturn $num;\n\t\t\t} else {\n\t\t\t\t$this->error = '<span class=\"error\">'.$langs->trans(\"ErrorNoVATRateDefinedForSellerCountry\", $country_code).'</span>';\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t} else {\n\t\t\t$this->error = '<span class=\"error\">'.$this->db->error().'</span>';\n\t\t\treturn -2;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Output an HTML select vat rate.\n\t *  The name of this function should be selectVat. We keep bad name for compatibility purpose.\n\t *\n\t *  @param\tstring\t      $htmlname           Name of HTML select field\n\t *  @param  float|string  $selectedrate       Force preselected vat rate. Can be '8.5' or '8.5 (NOO)' for example. Use '' for no forcing.\n\t *  @param  Societe\t      $societe_vendeuse   Thirdparty seller\n\t *  @param  Societe\t      $societe_acheteuse  Thirdparty buyer\n\t *  @param  int\t\t      $idprod             Id product. O if unknown of NA.\n\t *  @param  int\t\t      $info_bits          Miscellaneous information on line (1 for NPR)\n\t *  @param  int|string    $type               ''=Unknown, 0=Product, 1=Service (Used if idprod not defined)\n\t *                  \t\t                  Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n\t *                  \t\t\t\t\t      Si le (pays vendeur = pays acheteur) alors la TVA par defaut=TVA du produit vendu. Fin de regle.\n\t *                  \t\t\t\t\t      Si (vendeur et acheteur dans Communaute europeenne) et bien vendu = moyen de transports neuf (auto, bateau, avion), TVA par defaut=0 (La TVA doit etre paye par l'acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n\t *                                            Si vendeur et acheteur dans Communaut\u00e9 europ\u00e9enne et acheteur= particulier alors TVA par d\u00e9faut=TVA du produit vendu. Fin de r\u00e8gle.\n\t *                                            Si vendeur et acheteur dans Communaut\u00e9 europ\u00e9enne et acheteur= entreprise alors TVA par d\u00e9faut=0. Fin de r\u00e8gle.\n\t *                  \t\t\t\t\t      Sinon la TVA proposee par defaut=0. Fin de regle.\n\t *  @param\tbool\t     $options_only\t\t  Return HTML options lines only (for ajax treatment)\n\t *  @param  int          $mode                0=Use vat rate as key in combo list, 1=Add VAT code after vat rate into key, -1=Use id of vat line as key\n\t *  @return\tstring\n\t */\n\tpublic function load_tva($htmlname = 'tauxtva', $selectedrate = '', $societe_vendeuse = '', $societe_acheteuse = '', $idprod = 0, $info_bits = 0, $type = '', $options_only = false, $mode = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs, $conf, $mysoc;\n\n\t\t$langs->load('errors');\n\n\t\t$return = '';\n\n\t\t// Define defaultnpr, defaultttx and defaultcode\n\t\t$defaultnpr = ($info_bits & 0x01);\n\t\t$defaultnpr = (preg_match('/\\*/', $selectedrate) ? 1 : $defaultnpr);\n\t\t$defaulttx = str_replace('*', '', $selectedrate);\n\t\t$defaultcode = '';\n\t\t$reg = array();\n\t\tif (preg_match('/\\((.*)\\)/', $defaulttx, $reg)) {\n\t\t\t$defaultcode = $reg[1];\n\t\t\t$defaulttx = preg_replace('/\\s*\\(.*\\)/', '', $defaulttx);\n\t\t}\n\t\t//var_dump($selectedrate.'-'.$defaulttx.'-'.$defaultnpr.'-'.$defaultcode);\n\n\t\t// Check parameters\n\t\tif (is_object($societe_vendeuse) && !$societe_vendeuse->country_code) {\n\t\t\tif ($societe_vendeuse->id == $mysoc->id) {\n\t\t\t\t$return .= '<span class=\"error\">'.$langs->trans(\"ErrorYourCountryIsNotDefined\").'</span>';\n\t\t\t} else {\n\t\t\t\t$return .= '<span class=\"error\">'.$langs->trans(\"ErrorSupplierCountryIsNotDefined\").'</span>';\n\t\t\t}\n\t\t\treturn $return;\n\t\t}\n\n\t\t//var_dump($societe_acheteuse);\n\t\t//print \"name=$name, selectedrate=$selectedrate, seller=\".$societe_vendeuse->country_code.\" buyer=\".$societe_acheteuse->country_code.\" buyer is company=\".$societe_acheteuse->isACompany().\" idprod=$idprod, info_bits=$info_bits type=$type\";\n\t\t//exit;\n\n\t\t// Define list of countries to use to search VAT rates to show\n\t\t// First we defined code_country to use to find list\n\t\tif (is_object($societe_vendeuse)) {\n\t\t\t$code_country = \"'\".$societe_vendeuse->country_code.\"'\";\n\t\t} else {\n\t\t\t$code_country = \"'\".$mysoc->country_code.\"'\"; // Pour compatibilite ascendente\n\t\t}\n\t\tif (!empty($conf->global->SERVICE_ARE_ECOMMERCE_200238EC)) {    // If option to have vat for end customer for services is on\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\t\t\tif (!isInEEC($societe_vendeuse) && (!is_object($societe_acheteuse) || (isInEEC($societe_acheteuse) && !$societe_acheteuse->isACompany()))) {\n\t\t\t\t// We also add the buyer\n\t\t\t\tif (is_numeric($type)) {\n\t\t\t\t\tif ($type == 1) { // We know product is a service\n\t\t\t\t\t\t$code_country .= \",'\".$societe_acheteuse->country_code.\"'\";\n\t\t\t\t\t}\n\t\t\t\t} elseif (!$idprod) {  // We don't know type of product\n\t\t\t\t\t$code_country .= \",'\".$societe_acheteuse->country_code.\"'\";\n\t\t\t\t} else {\n\t\t\t\t\t$prodstatic = new Product($this->db);\n\t\t\t\t\t$prodstatic->fetch($idprod);\n\t\t\t\t\tif ($prodstatic->type == Product::TYPE_SERVICE) {   // We know product is a service\n\t\t\t\t\t\t$code_country .= \",'\".$societe_acheteuse->country_code.\"'\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now we get list\n\t\t$num = $this->load_cache_vatrates($code_country); // If no vat defined, return -1 with message into this->error\n\n\t\tif ($num > 0) {\n\t\t\t// Definition du taux a pre-selectionner (si defaulttx non force et donc vaut -1 ou '')\n\t\t\tif ($defaulttx < 0 || dol_strlen($defaulttx) == 0) {\n\t\t\t\t$tmpthirdparty = new Societe($this->db);\n\t\t\t\t$defaulttx = get_default_tva($societe_vendeuse, (is_object($societe_acheteuse) ? $societe_acheteuse : $tmpthirdparty), $idprod);\n\t\t\t\t$defaultnpr = get_default_npr($societe_vendeuse, (is_object($societe_acheteuse) ? $societe_acheteuse : $tmpthirdparty), $idprod);\n\t\t\t\tif (preg_match('/\\((.*)\\)/', $defaulttx, $reg)) {\n\t\t\t\t\t$defaultcode = $reg[1];\n\t\t\t\t\t$defaulttx = preg_replace('/\\s*\\(.*\\)/', '', $defaulttx);\n\t\t\t\t}\n\t\t\t\tif (empty($defaulttx)) {\n\t\t\t\t\t$defaultnpr = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Si taux par defaut n'a pu etre determine, on prend dernier de la liste.\n\t\t\t// Comme ils sont tries par ordre croissant, dernier = plus eleve = taux courant\n\t\t\tif ($defaulttx < 0 || dol_strlen($defaulttx) == 0) {\n\t\t\t\tif (empty($conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS)) {\n\t\t\t\t\t$defaulttx = $this->cache_vatrates[$num - 1]['txtva'];\n\t\t\t\t} else {\n\t\t\t\t\t$defaulttx = ($conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS == 'none' ? '' : $conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Disabled if seller is not subject to VAT\n\t\t\t$disabled = false;\n\t\t\t$title = '';\n\t\t\tif (is_object($societe_vendeuse) && $societe_vendeuse->id == $mysoc->id && $societe_vendeuse->tva_assuj == \"0\") {\n\t\t\t\t// Override/enable VAT for expense report regardless of global setting - needed if expense report used for business expenses instead\n\t\t\t\t// of using supplier invoices (this is a very bad idea !)\n\t\t\t\tif (empty($conf->global->EXPENSEREPORT_OVERRIDE_VAT)) {\n\t\t\t\t\t$title = ' title=\"'.$langs->trans('VATIsNotUsed').'\"';\n\t\t\t\t\t$disabled = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$options_only) {\n\t\t\t\t$return .= '<select class=\"flat minwidth75imp\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\"'.($disabled ? ' disabled' : '').$title.'>';\n\t\t\t}\n\n\t\t\t$selectedfound = false;\n\t\t\tforeach ($this->cache_vatrates as $rate) {\n\t\t\t\t// Keep only 0 if seller is not subject to VAT\n\t\t\t\tif ($disabled && $rate['txtva'] != 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Define key to use into select list\n\t\t\t\t$key = $rate['txtva'];\n\t\t\t\t$key .= $rate['nprtva'] ? '*' : '';\n\t\t\t\tif ($mode > 0 && $rate['code']) {\n\t\t\t\t\t$key .= ' ('.$rate['code'].')';\n\t\t\t\t}\n\t\t\t\tif ($mode < 0) {\n\t\t\t\t\t$key = $rate['rowid'];\n\t\t\t\t}\n\n\t\t\t\t$return .= '<option value=\"'.$key.'\"';\n\t\t\t\tif (!$selectedfound) {\n\t\t\t\t\tif ($defaultcode) { // If defaultcode is defined, we used it in priority to select combo option instead of using rate+npr flag\n\t\t\t\t\t\tif ($defaultcode == $rate['code']) {\n\t\t\t\t\t\t\t$return .= ' selected';\n\t\t\t\t\t\t\t$selectedfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} elseif ($rate['txtva'] == $defaulttx && $rate['nprtva'] == $defaultnpr) {\n\t\t\t\t\t\t$return .= ' selected';\n\t\t\t\t\t\t$selectedfound = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$return .= '>';\n\t\t\t\t//if (! empty($conf->global->MAIN_VAT_SHOW_POSITIVE_RATES))\n\t\t\t\tif ($mysoc->country_code == 'IN' || !empty($conf->global->MAIN_VAT_LABEL_IS_POSITIVE_RATES)) {\n\t\t\t\t\t$return .= $rate['labelpositiverates'];\n\t\t\t\t} else {\n\t\t\t\t\t$return .= vatrate($rate['label']);\n\t\t\t\t}\n\t\t\t\t//$return.=($rate['code']?' '.$rate['code']:'');\n\t\t\t\t$return .= (empty($rate['code']) && $rate['nprtva']) ? ' *' : ''; // We show the *  (old behaviour only if new vat code is not used)\n\n\t\t\t\t$return .= '</option>';\n\t\t\t}\n\n\t\t\tif (!$options_only) {\n\t\t\t\t$return .= '</select>';\n\t\t\t}\n\t\t} else {\n\t\t\t$return .= $this->error;\n\t\t}\n\n\t\t$this->num = $num;\n\t\treturn $return;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Show a HTML widget to input a date or combo list for day, month, years and optionaly hours and minutes.\n\t *  Fields are preselected with :\n\t *            \t- set_time date (must be a local PHP server timestamp or string date with format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM')\n\t *            \t- local date in user area, if set_time is '' (so if set_time is '', output may differs when done from two different location)\n\t *            \t- Empty (fields empty), if set_time is -1 (in this case, parameter empty must also have value 1)\n\t *\n\t *\t@param\tinteger\t    $set_time \t\tPre-selected date (must be a local PHP server timestamp), -1 to keep date not preselected, '' to use current date with 00:00 hour (Parameter 'empty' must be 0 or 2).\n\t *\t@param\tstring\t\t$prefix\t\t\tPrefix for fields name\n\t *\t@param\tint\t\t\t$h\t\t\t\t1 or 2=Show also hours (2=hours on a new line), -1 has same effect but hour and minutes are prefilled with 23:59 if date is empty, 3 show hour always empty\n\t *\t@param\tint\t\t\t$m\t\t\t\t1=Show also minutes, -1 has same effect but hour and minutes are prefilled with 23:59 if date is empty, 3 show minutes always empty\n\t *\t@param\tint\t\t\t$empty\t\t\t0=Fields required, 1=Empty inputs are allowed, 2=Empty inputs are allowed for hours only\n\t *\t@param\tstring\t\t$form_name \t\tNot used\n\t *\t@param\tint\t\t\t$d\t\t\t\t1=Show days, month, years\n\t * \t@param\tint\t\t\t$addnowlink\t\tAdd a link \"Now\"\n\t * \t@param\tint\t\t\t$nooutput\t\tDo not output html string but return it\n\t * \t@param \tint\t\t\t$disabled\t\tDisable input fields\n\t *  @param  int\t\t\t$fullday        When a checkbox with this html name is on, hour and day are set with 00:00 or 23:59\n\t *  @param\tstring\t\t$addplusone\t\tAdd a link \"+1 hour\". Value must be name of another select_date field.\n\t *  @param  datetime    $adddateof      Add a link \"Date of invoice\" using the following date.\n\t *  @return\tstring|void\t\t\t\t\tNothing or string if nooutput is 1\n\t *  @deprecated\n\t *  @see    selectDate(), form_date(), select_month(), select_year(), select_dayofweek()\n\t */\n\tpublic function select_date($set_time = '', $prefix = 're', $h = 0, $m = 0, $empty = 0, $form_name = \"\", $d = 1, $addnowlink = 0, $nooutput = 0, $disabled = 0, $fullday = '', $addplusone = '', $adddateof = '')\n\t{\n\t\t// phpcs:enable\n\t\t$retstring = $this->selectDate($set_time, $prefix, $h, $m, $empty, $form_name, $d, $addnowlink, $disabled, $fullday, $addplusone, $adddateof);\n\t\tif (!empty($nooutput)) {\n\t\t\treturn $retstring;\n\t\t}\n\t\tprint $retstring;\n\t\treturn;\n\t}\n\n\t/**\n\t *  Show 2 HTML widget to input a date or combo list for day, month, years and optionaly hours and minutes.\n\t *  Fields are preselected with :\n\t *              - set_time date (must be a local PHP server timestamp or string date with format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM')\n\t *              - local date in user area, if set_time is '' (so if set_time is '', output may differs when done from two different location)\n\t *              - Empty (fields empty), if set_time is -1 (in this case, parameter empty must also have value 1)\n\t *\n\t *  @param  integer     $set_time       Pre-selected date (must be a local PHP server timestamp), -1 to keep date not preselected, '' to use current date with 00:00 hour (Parameter 'empty' must be 0 or 2).\n\t *  @param  integer     $set_time_end       Pre-selected date (must be a local PHP server timestamp), -1 to keep date not preselected, '' to use current date with 00:00 hour (Parameter 'empty' must be 0 or 2).\n\t *  @param\tstring\t\t$prefix\t\t\tPrefix for fields name\n\t *  @param\tstring\t\t$empty\t\t\t0=Fields required, 1=Empty inputs are allowed, 2=Empty inputs are allowed for hours only\n\t * \t@return string                      Html for selectDate\n\t *  @see    form_date(), select_month(), select_year(), select_dayofweek()\n\t */\n\tpublic function selectDateToDate($set_time = '', $set_time_end = '', $prefix = 're', $empty = 0)\n\t{\n\t\tglobal $langs;\n\n\t\t$ret = $this->selectDate($set_time, $prefix.'_start', 0, 0, $empty, '', 1, 0, 0, '', '', '', '', 1, '', $langs->trans(\"from\"), 'tzuserrel');\n\t\t$ret .= '<br>';\n\t\t$ret .= $this->selectDate($set_time_end, $prefix.'_end', 0, 0, $empty, '', 1, 0, 0, '', '', '', '', 1, '', $langs->trans(\"to\"), 'tzuserrel');\n\t\treturn $ret;\n\t}\n\n\t/**\n\t *  Show a HTML widget to input a date or combo list for day, month, years and optionaly hours and minutes.\n\t *  Fields are preselected with :\n\t *              - set_time date (must be a local PHP server timestamp or string date with format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM')\n\t *              - local date in user area, if set_time is '' (so if set_time is '', output may differs when done from two different location)\n\t *              - Empty (fields empty), if set_time is -1 (in this case, parameter empty must also have value 1)\n\t *\n\t *  @param  integer     $set_time       Pre-selected date (must be a local PHP server timestamp), -1 to keep date not preselected, '' to use current date with 00:00 hour (Parameter 'empty' must be 0 or 2).\n\t *  @param\tstring\t\t$prefix\t\t\tPrefix for fields name\n\t *  @param\tint\t\t\t$h\t\t\t\t1 or 2=Show also hours (2=hours on a new line), -1 has same effect but hour and minutes are prefilled with 23:59 if date is empty, 3 show hour always empty\n\t *\t@param\tint\t\t\t$m\t\t\t\t1=Show also minutes, -1 has same effect but hour and minutes are prefilled with 23:59 if date is empty, 3 show minutes always empty\n\t *\t@param\tint\t\t\t$empty\t\t\t0=Fields required, 1=Empty inputs are allowed, 2=Empty inputs are allowed for hours only\n\t *\t@param\tstring\t\t$form_name \t\tNot used\n\t *\t@param\tint\t\t\t$d\t\t\t\t1=Show days, month, years\n\t * \t@param\tint\t\t\t$addnowlink\t\tAdd a link \"Now\", 1 with server time, 2 with local computer time\n\t * \t@param \tint\t\t\t$disabled\t\tDisable input fields\n\t *  @param  int\t\t\t$fullday        When a checkbox with id #fullday is checked, hours are set with 00:00 (if value if 'fulldaystart') or 23:59 (if value is 'fulldayend')\n\t *  @param\tstring\t\t$addplusone\t\tAdd a link \"+1 hour\". Value must be name of another selectDate field.\n\t *  @param  datetime    $adddateof      Add a link \"Date of ...\" using the following date. See also $labeladddateof for the label used.\n\t *  @param  string      $openinghours   Specify hour start and hour end for the select ex 8,20\n\t *  @param  int         $stepminutes    Specify step for minutes between 1 and 30\n\t *  @param\tstring\t\t$labeladddateof Label to use for the $adddateof parameter.\n\t *  @param\tstring \t\t$placeholder    Placeholder\n\t *  @param\tmixed\t\t$gm\t\t\t\t'auto' (for backward compatibility, avoid this), 'gmt' or 'tzserver' or 'tzuserrel'\n\t * \t@return string                      Html for selectDate\n\t *  @see    form_date(), select_month(), select_year(), select_dayofweek()\n\t */\n\tpublic function selectDate($set_time = '', $prefix = 're', $h = 0, $m = 0, $empty = 0, $form_name = \"\", $d = 1, $addnowlink = 0, $disabled = 0, $fullday = '', $addplusone = '', $adddateof = '', $openinghours = '', $stepminutes = 1, $labeladddateof = '', $placeholder = '', $gm = 'auto')\n\t{\n\t\tglobal $conf, $langs;\n\n\t\tif ($gm === 'auto') {\n\t\t\t$gm = (empty($conf) ? 'tzserver' : $conf->tzuserinputkey);\n\t\t}\n\n\t\t$retstring = '';\n\n\t\tif ($prefix == '') {\n\t\t\t$prefix = 're';\n\t\t}\n\t\tif ($h == '') {\n\t\t\t$h = 0;\n\t\t}\n\t\tif ($m == '') {\n\t\t\t$m = 0;\n\t\t}\n\t\t$emptydate = 0;\n\t\t$emptyhours = 0;\n\t\tif ($stepminutes <= 0 || $stepminutes > 30) {\n\t\t\t$stepminutes = 1;\n\t\t}\n\t\tif ($empty == 1) {\n\t\t\t$emptydate = 1;\n\t\t\t$emptyhours = 1;\n\t\t}\n\t\tif ($empty == 2) {\n\t\t\t$emptydate = 0;\n\t\t\t$emptyhours = 1;\n\t\t}\n\t\t$orig_set_time = $set_time;\n\n\t\tif ($set_time === '' && $emptydate == 0) {\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t\tif ($gm == 'tzuser' || $gm == 'tzuserrel') {\n\t\t\t\t$set_time = dol_now($gm);\n\t\t\t} else {\n\t\t\t\t$set_time = dol_now('tzuser') - (getServerTimeZoneInt('now') * 3600); // set_time must be relative to PHP server timezone\n\t\t\t}\n\t\t}\n\n\t\t// Analysis of the pre-selection date\n\t\t$reg = array();\n\t\tif (preg_match('/^([0-9]+)\\-([0-9]+)\\-([0-9]+)\\s?([0-9]+)?:?([0-9]+)?/', $set_time, $reg)) {\t// deprecated usage\n\t\t\t// Date format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM:SS'\n\t\t\t$syear\t= (!empty($reg[1]) ? $reg[1] : '');\n\t\t\t$smonth = (!empty($reg[2]) ? $reg[2] : '');\n\t\t\t$sday\t= (!empty($reg[3]) ? $reg[3] : '');\n\t\t\t$shour\t= (!empty($reg[4]) ? $reg[4] : '');\n\t\t\t$smin\t= (!empty($reg[5]) ? $reg[5] : '');\n\t\t} elseif (strval($set_time) != '' && $set_time != -1) {\n\t\t\t// set_time est un timestamps (0 possible)\n\t\t\t$syear = dol_print_date($set_time, \"%Y\", $gm);\n\t\t\t$smonth = dol_print_date($set_time, \"%m\", $gm);\n\t\t\t$sday = dol_print_date($set_time, \"%d\", $gm);\n\t\t\tif ($orig_set_time != '') {\n\t\t\t\t$shour = dol_print_date($set_time, \"%H\", $gm);\n\t\t\t\t$smin = dol_print_date($set_time, \"%M\", $gm);\n\t\t\t\t$ssec = dol_print_date($set_time, \"%S\", $gm);\n\t\t\t} else {\n\t\t\t\t$shour = '';\n\t\t\t\t$smin = '';\n\t\t\t\t$ssec = '';\n\t\t\t}\n\t\t} else {\n\t\t\t// Date est '' ou vaut -1\n\t\t\t$syear = '';\n\t\t\t$smonth = '';\n\t\t\t$sday = '';\n\t\t\t$shour = !isset($conf->global->MAIN_DEFAULT_DATE_HOUR) ? ($h == -1 ? '23' : '') : $conf->global->MAIN_DEFAULT_DATE_HOUR;\n\t\t\t$smin = !isset($conf->global->MAIN_DEFAULT_DATE_MIN) ? ($h == -1 ? '59' : '') : $conf->global->MAIN_DEFAULT_DATE_MIN;\n\t\t\t$ssec = !isset($conf->global->MAIN_DEFAULT_DATE_SEC) ? ($h == -1 ? '59' : '') : $conf->global->MAIN_DEFAULT_DATE_SEC;\n\t\t}\n\t\tif ($h == 3) {\n\t\t\t$shour = '';\n\t\t}\n\t\tif ($m == 3) {\n\t\t\t$smin = '';\n\t\t}\n\n\t\t$nowgmt = dol_now('gmt');\n\t\t//var_dump(dol_print_date($nowgmt, 'dayhourinputnoreduce', 'tzuserrel'));\n\n\t\t// You can set MAIN_POPUP_CALENDAR to 'eldy' or 'jquery'\n\t\t$usecalendar = 'combo';\n\t\tif (!empty($conf->use_javascript_ajax) && (empty($conf->global->MAIN_POPUP_CALENDAR) || $conf->global->MAIN_POPUP_CALENDAR != \"none\")) {\n\t\t\t$usecalendar = ((empty($conf->global->MAIN_POPUP_CALENDAR) || $conf->global->MAIN_POPUP_CALENDAR == 'eldy') ? 'jquery' : $conf->global->MAIN_POPUP_CALENDAR);\n\t\t}\n\n\t\tif ($d) {\n\t\t\t// Show date with popup\n\t\t\tif ($usecalendar != 'combo') {\n\t\t\t\t$formated_date = '';\n\t\t\t\t//print \"e\".$set_time.\" t \".$conf->format_date_short;\n\t\t\t\tif (strval($set_time) != '' && $set_time != -1) {\n\t\t\t\t\t//$formated_date=dol_print_date($set_time,$conf->format_date_short);\n\t\t\t\t\t$formated_date = dol_print_date($set_time, $langs->trans(\"FormatDateShortInput\"), $gm); // FormatDateShortInput for dol_print_date / FormatDateShortJavaInput that is same for javascript\n\t\t\t\t}\n\n\t\t\t\t// Calendrier popup version eldy\n\t\t\t\tif ($usecalendar == \"eldy\") {\n\t\t\t\t\t// Input area to enter date manually\n\t\t\t\t\t$retstring .= '<input id=\"'.$prefix.'\" name=\"'.$prefix.'\" type=\"text\" class=\"maxwidthdate\" maxlength=\"11\" value=\"'.$formated_date.'\"';\n\t\t\t\t\t$retstring .= ($disabled ? ' disabled' : '');\n\t\t\t\t\t$retstring .= ' onChange=\"dpChangeDay(\\''.$prefix.'\\',\\''.$langs->trans(\"FormatDateShortJavaInput\").'\\'); \"'; // FormatDateShortInput for dol_print_date / FormatDateShortJavaInput that is same for javascript\n\t\t\t\t\t$retstring .= '>';\n\n\t\t\t\t\t// Icon calendar\n\t\t\t\t\t$retstringbuttom = '';\n\t\t\t\t\tif (!$disabled) {\n\t\t\t\t\t\t$retstringbuttom = '<button id=\"'.$prefix.'Button\" type=\"button\" class=\"dpInvisibleButtons\"';\n\t\t\t\t\t\t$base = DOL_URL_ROOT.'/core/';\n\t\t\t\t\t\t$retstringbuttom .= ' onClick=\"showDP(\\''.$base.'\\',\\''.$prefix.'\\',\\''.$langs->trans(\"FormatDateShortJavaInput\").'\\',\\''.$langs->defaultlang.'\\');\"';\n\t\t\t\t\t\t$retstringbuttom .= '>'.img_object($langs->trans(\"SelectDate\"), 'calendarday', 'class=\"datecallink\"').'</button>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$retstringbuttom = '<button id=\"'.$prefix.'Button\" type=\"button\" class=\"dpInvisibleButtons\">'.img_object($langs->trans(\"Disabled\"), 'calendarday', 'class=\"datecallink\"').'</button>';\n\t\t\t\t\t}\n\t\t\t\t\t$retstring = $retstringbuttom.$retstring;\n\n\t\t\t\t\t$retstring .= '<input type=\"hidden\" id=\"'.$prefix.'day\"   name=\"'.$prefix.'day\"   value=\"'.$sday.'\">'.\"\\n\";\n\t\t\t\t\t$retstring .= '<input type=\"hidden\" id=\"'.$prefix.'month\" name=\"'.$prefix.'month\" value=\"'.$smonth.'\">'.\"\\n\";\n\t\t\t\t\t$retstring .= '<input type=\"hidden\" id=\"'.$prefix.'year\"  name=\"'.$prefix.'year\"  value=\"'.$syear.'\">'.\"\\n\";\n\t\t\t\t} elseif ($usecalendar == 'jquery') {\n\t\t\t\t\tif (!$disabled) {\n\t\t\t\t\t\t// Output javascript for datepicker\n\t\t\t\t\t\t$retstring .= \"<script type='text/javascript'>\";\n\t\t\t\t\t\t$retstring .= \"$(function(){ $('#\".$prefix.\"').datepicker({\n\t\t\t\t\t\t\tdateFormat: '\".$langs->trans(\"FormatDateShortJQueryInput\").\"',\n\t\t\t\t\t\t\tautoclose: true,\n\t\t\t\t\t\t\ttodayHighlight: true,\";\n\t\t\t\t\t\tif (!empty($conf->dol_use_jmobile)) {\n\t\t\t\t\t\t\t$retstring .= \"\n\t\t\t\t\t\t\t\tbeforeShow: function (input, datePicker) {\n\t\t\t\t\t\t\t\t\tinput.disabled = true;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonClose: function (dateText, datePicker) {\n\t\t\t\t\t\t\t\t\tthis.disabled = false;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Note: We don't need monthNames, monthNamesShort, dayNames, dayNamesShort, dayNamesMin, they are set globally on datepicker component in lib_head.js.php\n\t\t\t\t\t\tif (empty($conf->global->MAIN_POPUP_CALENDAR_ON_FOCUS)) {\n\t\t\t\t\t\t\t$retstring .= \"\n\t\t\t\t\t\t\t\tshowOn: 'button',\t/* both has problem with autocompletion */\n\t\t\t\t\t\t\t\tbuttonImage: '\".DOL_URL_ROOT.\"/theme/\".dol_escape_js($conf->theme).\"/img/object_calendarday.png',\n\t\t\t\t\t\t\t\tbuttonImageOnly: true\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$retstring .= \"\n\t\t\t\t\t\t\t}) });\";\n\t\t\t\t\t\t$retstring .= \"</script>\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Zone de saisie manuelle de la date\n\t\t\t\t\t$retstring .= '<div class=\"nowrap inline-block divfordateinput\">';\n\t\t\t\t\t$retstring .= '<input id=\"'.$prefix.'\" name=\"'.$prefix.'\" type=\"text\" class=\"maxwidthdate\" maxlength=\"11\" value=\"'.$formated_date.'\"';\n\t\t\t\t\t$retstring .= ($disabled ? ' disabled' : '');\n\t\t\t\t\t$retstring .= ($placeholder ? ' placeholder=\"'.dol_escape_htmltag($placeholder).'\"' : '');\n\t\t\t\t\t$retstring .= ' onChange=\"dpChangeDay(\\''.dol_escape_js($prefix).'\\',\\''.dol_escape_js($langs->trans(\"FormatDateShortJavaInput\")).'\\'); \"'; // FormatDateShortInput for dol_print_date / FormatDateShortJavaInput that is same for javascript\n\t\t\t\t\t$retstring .= '>';\n\n\t\t\t\t\t// Icone calendrier\n\t\t\t\t\tif (!$disabled) {\n\t\t\t\t\t\t/* Not required. Managed by option buttonImage of jquery\n\t\t\t\t\t\t$retstring.=img_object($langs->trans(\"SelectDate\"),'calendarday','id=\"'.$prefix.'id\" class=\"datecallink\"');\n\t\t\t\t\t\t$retstring.=\"<script type='text/javascript'>\";\n\t\t\t\t\t\t$retstring.=\"jQuery(document).ready(function() {\";\n\t\t\t\t\t\t$retstring.='\tjQuery(\"#'.$prefix.'id\").click(function() {';\n\t\t\t\t\t\t$retstring.=\"    \tjQuery('#\".$prefix.\"').focus();\";\n\t\t\t\t\t\t$retstring.='    });';\n\t\t\t\t\t\t$retstring.='});';\n\t\t\t\t\t\t$retstring.=\"</script>\";*/\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$retstringbutton = '<button id=\"'.$prefix.'Button\" type=\"button\" class=\"dpInvisibleButtons\">'.img_object($langs->trans(\"Disabled\"), 'calendarday', 'class=\"datecallink\"').'</button>';\n\t\t\t\t\t\t$retsring = $retstringbutton.$retstring;\n\t\t\t\t\t}\n\n\t\t\t\t\t$retstring .= '</div>';\n\t\t\t\t\t$retstring .= '<input type=\"hidden\" id=\"'.$prefix.'day\"   name=\"'.$prefix.'day\"   value=\"'.$sday.'\">'.\"\\n\";\n\t\t\t\t\t$retstring .= '<input type=\"hidden\" id=\"'.$prefix.'month\" name=\"'.$prefix.'month\" value=\"'.$smonth.'\">'.\"\\n\";\n\t\t\t\t\t$retstring .= '<input type=\"hidden\" id=\"'.$prefix.'year\"  name=\"'.$prefix.'year\"  value=\"'.$syear.'\">'.\"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\t$retstring .= \"Bad value of MAIN_POPUP_CALENDAR\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Show date with combo selects\n\t\t\t\t// Day\n\t\t\t\t$retstring .= '<select'.($disabled ? ' disabled' : '').' class=\"flat valignmiddle maxwidth50imp\" id=\"'.$prefix.'day\" name=\"'.$prefix.'day\">';\n\n\t\t\t\tif ($emptydate || $set_time == -1) {\n\t\t\t\t\t$retstring .= '<option value=\"0\" selected>&nbsp;</option>';\n\t\t\t\t}\n\n\t\t\t\tfor ($day = 1; $day <= 31; $day++) {\n\t\t\t\t\t$retstring .= '<option value=\"'.$day.'\"'.($day == $sday ? ' selected' : '').'>'.$day.'</option>';\n\t\t\t\t}\n\n\t\t\t\t$retstring .= \"</select>\";\n\n\t\t\t\t$retstring .= '<select'.($disabled ? ' disabled' : '').' class=\"flat valignmiddle maxwidth75imp\" id=\"'.$prefix.'month\" name=\"'.$prefix.'month\">';\n\t\t\t\tif ($emptydate || $set_time == -1) {\n\t\t\t\t\t$retstring .= '<option value=\"0\" selected>&nbsp;</option>';\n\t\t\t\t}\n\n\t\t\t\t// Month\n\t\t\t\tfor ($month = 1; $month <= 12; $month++) {\n\t\t\t\t\t$retstring .= '<option value=\"'.$month.'\"'.($month == $smonth ? ' selected' : '').'>';\n\t\t\t\t\t$retstring .= dol_print_date(mktime(12, 0, 0, $month, 1, 2000), \"%b\");\n\t\t\t\t\t$retstring .= \"</option>\";\n\t\t\t\t}\n\t\t\t\t$retstring .= \"</select>\";\n\n\t\t\t\t// Year\n\t\t\t\tif ($emptydate || $set_time == -1) {\n\t\t\t\t\t$retstring .= '<input'.($disabled ? ' disabled' : '').' placeholder=\"'.dol_escape_htmltag($langs->trans(\"Year\")).'\" class=\"flat maxwidth50imp valignmiddle\" type=\"number\" min=\"0\" max=\"3000\" maxlength=\"4\" id=\"'.$prefix.'year\" name=\"'.$prefix.'year\" value=\"'.$syear.'\">';\n\t\t\t\t} else {\n\t\t\t\t\t$retstring .= '<select'.($disabled ? ' disabled' : '').' class=\"flat valignmiddle maxwidth75imp\" id=\"'.$prefix.'year\" name=\"'.$prefix.'year\">';\n\n\t\t\t\t\tfor ($year = $syear - 10; $year < $syear + 10; $year++) {\n\t\t\t\t\t\t$retstring .= '<option value=\"'.$year.'\"'.($year == $syear ? ' selected' : '').'>'.$year.'</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$retstring .= \"</select>\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($d && $h) {\n\t\t\t$retstring .= ($h == 2 ? '<br>' : ' ');\n\t\t\t$retstring .= '<span class=\"nowraponall\">';\n\t\t}\n\n\t\tif ($h) {\n\t\t\t$hourstart = 0;\n\t\t\t$hourend = 24;\n\t\t\tif ($openinghours != '') {\n\t\t\t\t$openinghours = explode(',', $openinghours);\n\t\t\t\t$hourstart = $openinghours[0];\n\t\t\t\t$hourend = $openinghours[1];\n\t\t\t\tif ($hourend < $hourstart) {\n\t\t\t\t\t$hourend = $hourstart;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Show hour\n\t\t\t$retstring .= '<select'.($disabled ? ' disabled' : '').' class=\"flat valignmiddle maxwidth50 '.($fullday ? $fullday.'hour' : '').'\" id=\"'.$prefix.'hour\" name=\"'.$prefix.'hour\">';\n\t\t\tif ($emptyhours) {\n\t\t\t\t$retstring .= '<option value=\"-1\">&nbsp;</option>';\n\t\t\t}\n\t\t\tfor ($hour = $hourstart; $hour < $hourend; $hour++) {\n\t\t\t\tif (strlen($hour) < 2) {\n\t\t\t\t\t$hour = \"0\".$hour;\n\t\t\t\t}\n\t\t\t\t$retstring .= '<option value=\"'.$hour.'\"'.(($hour == $shour) ? ' selected' : '').'>'.$hour;\n\t\t\t\t//$retstring .= (empty($conf->dol_optimize_smallscreen) ? '' : 'H');\n\t\t\t\t$retstring .= '</option>';\n\t\t\t}\n\t\t\t$retstring .= '</select>';\n\t\t\t//if ($m && empty($conf->dol_optimize_smallscreen)) $retstring .= \":\";\n\t\t\tif ($m) {\n\t\t\t\t$retstring .= \":\";\n\t\t\t}\n\t\t}\n\n\t\tif ($m) {\n\t\t\t// Show minutes\n\t\t\t$retstring .= '<select'.($disabled ? ' disabled' : '').' class=\"flat valignmiddle maxwidth50 '.($fullday ? $fullday.'min' : '').'\" id=\"'.$prefix.'min\" name=\"'.$prefix.'min\">';\n\t\t\tif ($emptyhours) {\n\t\t\t\t$retstring .= '<option value=\"-1\">&nbsp;</option>';\n\t\t\t}\n\t\t\tfor ($min = 0; $min < 60; $min += $stepminutes) {\n\t\t\t\tif (strlen($min) < 2) {\n\t\t\t\t\t$min = \"0\".$min;\n\t\t\t\t}\n\t\t\t\t$retstring .= '<option value=\"'.$min.'\"'.(($min == $smin) ? ' selected' : '').'>'.$min.(empty($conf->dol_optimize_smallscreen) ? '' : '').'</option>';\n\t\t\t}\n\t\t\t$retstring .= '</select>';\n\n\t\t\t$retstring .= '<input type=\"hidden\" name=\"'.$prefix.'sec\" value=\"'.$ssec.'\">';\n\t\t}\n\n\t\tif ($d && $h) {\n\t\t\t$retstring .= '</span>';\n\t\t}\n\n\t\t// Add a \"Now\" link\n\t\tif ($conf->use_javascript_ajax && $addnowlink) {\n\t\t\t// Script which will be inserted in the onClick of the \"Now\" link\n\t\t\t$reset_scripts = \"\";\n\t\t\tif ($addnowlink == 2) { // local computer time\n\t\t\t\t// pad add leading 0 on numbers\n\t\t\t\t$reset_scripts .= \"Number.prototype.pad = function(size) {\n                        var s = String(this);\n                        while (s.length < (size || 2)) {s = '0' + s;}\n                        return s;\n                    };\n                    var d = new Date();\";\n\t\t\t}\n\n\t\t\t// Generate the date part, depending on the use or not of the javascript calendar\n\t\t\tif ($addnowlink == 1) { // server time expressed in user time setup\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'\\').val(\\''.dol_print_date($nowgmt, 'day', 'tzuserrel').'\\');';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'day\\').val(\\''.dol_print_date($nowgmt, '%d', 'tzuserrel').'\\');';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'month\\').val(\\''.dol_print_date($nowgmt, '%m', 'tzuserrel').'\\');';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'year\\').val(\\''.dol_print_date($nowgmt, '%Y', 'tzuserrel').'\\');';\n\t\t\t} elseif ($addnowlink == 2) {\n\t\t\t\t/* Disabled because the output does not use the string format defined by FormatDateShort key to forge the value into #prefix.\n\t\t\t\t * This break application for foreign languages.\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'\\').val(d.toLocaleDateString(\\''.str_replace('_', '-', $langs->defaultlang).'\\'));';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'day\\').val(d.getDate().pad());';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'month\\').val(parseInt(d.getMonth().pad()) + 1);';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'year\\').val(d.getFullYear());';\n\t\t\t\t*/\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'\\').val(\\''.dol_print_date($nowgmt, 'day', 'tzuserrel').'\\');';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'day\\').val(\\''.dol_print_date($nowgmt, '%d', 'tzuserrel').'\\');';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'month\\').val(\\''.dol_print_date($nowgmt, '%m', 'tzuserrel').'\\');';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'year\\').val(\\''.dol_print_date($nowgmt, '%Y', 'tzuserrel').'\\');';\n\t\t\t}\n\t\t\t/*if ($usecalendar == \"eldy\")\n\t\t\t{\n\t\t\t\t$base=DOL_URL_ROOT.'/core/';\n\t\t\t\t$reset_scripts .= 'resetDP(\\''.$base.'\\',\\''.$prefix.'\\',\\''.$langs->trans(\"FormatDateShortJavaInput\").'\\',\\''.$langs->defaultlang.'\\');';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$reset_scripts .= 'this.form.elements[\\''.$prefix.'day\\'].value=formatDate(new Date(), \\'d\\'); ';\n\t\t\t\t$reset_scripts .= 'this.form.elements[\\''.$prefix.'month\\'].value=formatDate(new Date(), \\'M\\'); ';\n\t\t\t\t$reset_scripts .= 'this.form.elements[\\''.$prefix.'year\\'].value=formatDate(new Date(), \\'yyyy\\'); ';\n\t\t\t}*/\n\t\t\t// Update the hour part\n\t\t\tif ($h) {\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t}\n\t\t\t\t//$reset_scripts .= 'this.form.elements[\\''.$prefix.'hour\\'].value=formatDate(new Date(), \\'HH\\'); ';\n\t\t\t\tif ($addnowlink == 1) {\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'hour\\').val(\\''.dol_print_date($nowgmt, '%H', 'tzuserrel').'\\');';\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'hour\\').change();';\n\t\t\t\t} elseif ($addnowlink == 2) {\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'hour\\').val(d.getHours().pad());';\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'hour\\').change();';\n\t\t\t\t}\n\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= ' } ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Update the minute part\n\t\t\tif ($m) {\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t}\n\t\t\t\t//$reset_scripts .= 'this.form.elements[\\''.$prefix.'min\\'].value=formatDate(new Date(), \\'mm\\'); ';\n\t\t\t\tif ($addnowlink == 1) {\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'min\\').val(\\''.dol_print_date($nowgmt, '%M', 'tzuserrel').'\\');';\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'min\\').change();';\n\t\t\t\t} elseif ($addnowlink == 2) {\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'min\\').val(d.getMinutes().pad());';\n\t\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'min\\').change();';\n\t\t\t\t}\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= ' } ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If reset_scripts is not empty, print the link with the reset_scripts in the onClick\n\t\t\tif ($reset_scripts && empty($conf->dol_optimize_smallscreen)) {\n\t\t\t\t$retstring .= ' <button class=\"dpInvisibleButtons datenowlink\" id=\"'.$prefix.'ButtonNow\" type=\"button\" name=\"_useless\" value=\"now\" onClick=\"'.$reset_scripts.'\">';\n\t\t\t\t$retstring .= $langs->trans(\"Now\");\n\t\t\t\t$retstring .= '</button> ';\n\t\t\t}\n\t\t}\n\n\t\t// Add a \"Plus one hour\" link\n\t\tif ($conf->use_javascript_ajax && $addplusone) {\n\t\t\t// Script which will be inserted in the onClick of the \"Add plusone\" link\n\t\t\t$reset_scripts = \"\";\n\n\t\t\t// Generate the date part, depending on the use or not of the javascript calendar\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'\\').val(\\''.dol_print_date($nowgmt, 'dayinputnoreduce', 'tzuserrel').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'day\\').val(\\''.dol_print_date($nowgmt, '%d', 'tzuserrel').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'month\\').val(\\''.dol_print_date($nowgmt, '%m', 'tzuserrel').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'year\\').val(\\''.dol_print_date($nowgmt, '%Y', 'tzuserrel').'\\');';\n\t\t\t// Update the hour part\n\t\t\tif ($h) {\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t}\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'hour\\').val(\\''.dol_print_date($nowgmt, '%H', 'tzuserrel').'\\');';\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= ' } ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Update the minute part\n\t\t\tif ($m) {\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t}\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'min\\').val(\\''.dol_print_date($nowgmt, '%M', 'tzuserrel').'\\');';\n\t\t\t\tif ($fullday) {\n\t\t\t\t\t$reset_scripts .= ' } ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If reset_scripts is not empty, print the link with the reset_scripts in the onClick\n\t\t\tif ($reset_scripts && empty($conf->dol_optimize_smallscreen)) {\n\t\t\t\t$retstring .= ' <button class=\"dpInvisibleButtons datenowlink\" id=\"'.$prefix.'ButtonPlusOne\" type=\"button\" name=\"_useless2\" value=\"plusone\" onClick=\"'.$reset_scripts.'\">';\n\t\t\t\t$retstring .= $langs->trans(\"DateStartPlusOne\");\n\t\t\t\t$retstring .= '</button> ';\n\t\t\t}\n\t\t}\n\n\t\t// Add a link to set data\n\t\tif ($conf->use_javascript_ajax && $adddateof) {\n\t\t\t$tmparray = dol_getdate($adddateof);\n\t\t\tif (empty($labeladddateof)) {\n\t\t\t\t$labeladddateof = $langs->trans(\"DateInvoice\");\n\t\t\t}\n\t\t\t$retstring .= ' - <button class=\"dpInvisibleButtons datenowlink\" id=\"dateofinvoice\" type=\"button\" name=\"_dateofinvoice\" value=\"now\" onclick=\"console.log(\\'Click on now link\\'); jQuery(\\'#re\\').val(\\''.dol_print_date($adddateof, 'dayinputnoreduce').'\\');jQuery(\\'#reday\\').val(\\''.$tmparray['mday'].'\\');jQuery(\\'#remonth\\').val(\\''.$tmparray['mon'].'\\');jQuery(\\'#reyear\\').val(\\''.$tmparray['year'].'\\');\">'.$labeladddateof.'</a>';\n\t\t}\n\n\t\treturn $retstring;\n\t}\n\n\t/**\n\t * selectTypeDuration\n\t *\n\t * @param   string   \t$prefix     \tPrefix\n\t * @param   string   \t$selected   \tSelected duration type\n\t * @param\tarray\t\t$excludetypes\tArray of duration types to exclude. Example array('y', 'm')\n\t * @return  string      \t         \tHTML select string\n\t */\n\tpublic function selectTypeDuration($prefix, $selected = 'i', $excludetypes = array())\n\t{\n\t\tglobal $langs;\n\n\t\t$TDurationTypes = array(\n\t\t\t'y'=>$langs->trans('Years'),\n\t\t\t'm'=>$langs->trans('Month'),\n\t\t\t'w'=>$langs->trans('Weeks'),\n\t\t\t'd'=>$langs->trans('Days'),\n\t\t\t'h'=>$langs->trans('Hours'),\n\t\t\t'i'=>$langs->trans('Minutes')\n\t\t);\n\n\t\t// Removed undesired duration types\n\t\tforeach ($excludetypes as $value) {\n\t\t\tunset($TDurationTypes[$value]);\n\t\t}\n\n\t\t$retstring = '<select class=\"flat minwidth75 maxwidth100\" id=\"select_'.$prefix.'type_duration\" name=\"'.$prefix.'type_duration\">';\n\t\tforeach ($TDurationTypes as $key => $typeduration) {\n\t\t\t$retstring .= '<option value=\"'.$key.'\"';\n\t\t\tif ($key == $selected) {\n\t\t\t\t$retstring .= \" selected\";\n\t\t\t}\n\t\t\t$retstring .= \">\".$typeduration.\"</option>\";\n\t\t}\n\t\t$retstring .= \"</select>\";\n\n\t\t$retstring .= ajax_combobox('select_'.$prefix.'type_duration');\n\n\t\treturn $retstring;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Function to show a form to select a duration on a page\n\t *\n\t *\t@param\tstring\t\t$prefix   \t\tPrefix for input fields\n\t *\t@param  int\t\t\t$iSecond  \t\tDefault preselected duration (number of seconds or '')\n\t * \t@param\tint\t\t\t$disabled       Disable the combo box\n\t * \t@param\tstring\t\t$typehour\t\tIf 'select' then input hour and input min is a combo,\n\t *\t\t\t\t\t\t            \tIf 'text' input hour is in text and input min is a text,\n\t *\t\t\t\t\t\t            \tIf 'textselect' input hour is in text and input min is a combo\n\t *  @param\tinteger\t\t$minunderhours\tIf 1, show minutes selection under the hours\n\t * \t@param\tint\t\t\t$nooutput\t\tDo not output html string but return it\n\t *  @return\tstring|void\n\t */\n\tpublic function select_duration($prefix, $iSecond = '', $disabled = 0, $typehour = 'select', $minunderhours = 0, $nooutput = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$retstring = '';\n\n\t\t$hourSelected = 0;\n\t\t$minSelected = 0;\n\n\t\t// Hours\n\t\tif ($iSecond != '') {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\n\t\t\t$hourSelected = convertSecondToTime($iSecond, 'allhour');\n\t\t\t$minSelected = convertSecondToTime($iSecond, 'min');\n\t\t}\n\n\t\tif ($typehour == 'select') {\n\t\t\t$retstring .= '<select class=\"flat\" id=\"select_'.$prefix.'hour\" name=\"'.$prefix.'hour\"'.($disabled ? ' disabled' : '').'>';\n\t\t\tfor ($hour = 0; $hour < 25; $hour++) {\t// For a duration, we allow 24 hours\n\t\t\t\t$retstring .= '<option value=\"'.$hour.'\"';\n\t\t\t\tif ($hourSelected == $hour) {\n\t\t\t\t\t$retstring .= \" selected\";\n\t\t\t\t}\n\t\t\t\t$retstring .= \">\".$hour.\"</option>\";\n\t\t\t}\n\t\t\t$retstring .= \"</select>\";\n\t\t} elseif ($typehour == 'text' || $typehour == 'textselect') {\n\t\t\t$retstring .= '<input placeholder=\"'.$langs->trans('HourShort').'\" type=\"number\" min=\"0\" name=\"'.$prefix.'hour\"'.($disabled ? ' disabled' : '').' class=\"flat maxwidth50 inputhour\" value=\"'.(($hourSelected != '') ? ((int) $hourSelected) : '').'\">';\n\t\t} else {\n\t\t\treturn 'BadValueForParameterTypeHour';\n\t\t}\n\n\t\tif ($typehour != 'text') {\n\t\t\t$retstring .= ' '.$langs->trans('HourShort');\n\t\t} else {\n\t\t\t$retstring .= '<span class=\"hideonsmartphone\">:</span>';\n\t\t}\n\n\t\t// Minutes\n\t\tif ($minunderhours) {\n\t\t\t$retstring .= '<br>';\n\t\t} else {\n\t\t\t$retstring .= '<span class=\"hideonsmartphone\">&nbsp;</span>';\n\t\t}\n\n\t\tif ($typehour == 'select' || $typehour == 'textselect') {\n\t\t\t$retstring .= '<select class=\"flat\" id=\"select_'.$prefix.'min\" name=\"'.$prefix.'min\"'.($disabled ? ' disabled' : '').'>';\n\t\t\tfor ($min = 0; $min <= 55; $min = $min + 5) {\n\t\t\t\t$retstring .= '<option value=\"'.$min.'\"';\n\t\t\t\tif ($minSelected == $min) {\n\t\t\t\t\t$retstring .= ' selected';\n\t\t\t\t}\n\t\t\t\t$retstring .= '>'.$min.'</option>';\n\t\t\t}\n\t\t\t$retstring .= \"</select>\";\n\t\t} elseif ($typehour == 'text') {\n\t\t\t$retstring .= '<input placeholder=\"'.$langs->trans('MinuteShort').'\" type=\"number\" min=\"0\" name=\"'.$prefix.'min\"'.($disabled ? ' disabled' : '').' class=\"flat maxwidth50 inputminute\" value=\"'.(($minSelected != '') ? ((int) $minSelected) : '').'\">';\n\t\t}\n\n\t\tif ($typehour != 'text') {\n\t\t\t$retstring .= ' '.$langs->trans('MinuteShort');\n\t\t}\n\n\t\t//$retstring.=\"&nbsp;\";\n\n\t\tif (!empty($nooutput)) {\n\t\t\treturn $retstring;\n\t\t}\n\n\t\tprint $retstring;\n\t\treturn;\n\t}\n\n\t/**\n\t *  Return list of tickets in Ajax if Ajax activated or go to selectTicketsList\n\t *\n\t *  @param\t\tint\t\t\t$selected\t\t\t\tPreselected tickets\n\t *  @param\t\tstring\t\t$htmlname\t\t\t\tName of HTML select field (must be unique in page).\n\t *  @param  \tstring\t\t$filtertype     \t\tTo add a filter\n\t *  @param\t\tint\t\t\t$limit\t\t\t\t\tLimit on number of returned lines\n\t *  @param\t\tint\t\t\t$status\t\t\t\t\tTicket status\n\t *  @param\t\tstring\t\t$selected_input_value\tValue of preselected input text (for use with ajax)\n\t *  @param\t\tint\t\t\t$hidelabel\t\t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n\t *  @param\t\tarray\t\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t *  @param      int\t\t\t$socid\t\t\t\t\tThirdparty Id (to get also price dedicated to this customer)\n\t *  @param\t\tstring\t\t$showempty\t\t\t\t'' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t\t$forcecombo\t\t\t\tForce to use combo box\n\t *  @param      string      $morecss                Add more css on select\n\t *  @param \t\tarray \t\t$selected_combinations \tSelected combinations. Format: array([attrid] => attrval, [...])\n\t *  @param\t\tstring\t\t$nooutput\t\t\t\tNo print, return the output into a string\n\t *  @return\t\tvoid|string\n\t */\n\tpublic function selectTickets($selected = '', $htmlname = 'ticketid', $filtertype = '', $limit = 0, $status = 1, $selected_input_value = '', $hidelabel = 0, $ajaxoptions = array(), $socid = 0, $showempty = '1', $forcecombo = 0, $morecss = '', $selected_combinations = null, $nooutput = 0)\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\n\t\t// check parameters\n\t\tif (is_null($ajaxoptions)) $ajaxoptions = array();\n\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->TICKET_USE_SEARCH_TO_SELECT)) {\n\t\t\t$placeholder = '';\n\n\t\t\tif ($selected && empty($selected_input_value)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/ticket/class/ticket.class.php';\n\t\t\t\t$tickettmpselect = new Ticket($this->db);\n\t\t\t\t$tickettmpselect->fetch($selected);\n\t\t\t\t$selected_input_value = $tickettmpselect->ref;\n\t\t\t\tunset($tickettmpselect);\n\t\t\t}\n\n\t\t\t$out .= ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/ticket/ajax/tickets.php', $urloption, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT, 1, $ajaxoptions);\n\n\t\t\tif (empty($hidelabel)) $out .= $langs->trans(\"RefOrLabel\").' : ';\n\t\t\telseif ($hidelabel > 1) {\n\t\t\t\t$placeholder = ' placeholder=\"'.$langs->trans(\"RefOrLabel\").'\"';\n\t\t\t\tif ($hidelabel == 2) {\n\t\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '<input type=\"text\" class=\"minwidth100\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.$placeholder.' '.(!empty($conf->global->PRODUCT_SEARCH_AUTOFOCUS) ? 'autofocus' : '').' />';\n\t\t\tif ($hidelabel == 3) {\n\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t}\n\t\t} else {\n\t\t\t$out .= $this->selectTicketsList($selected, $htmlname, $filtertype, $limit, $status, 0, $socid, $showempty, $forcecombo, $morecss);\n\t\t}\n\n\t\tif (empty($nooutput)) print $out;\n\t\telse return $out;\n\t}\n\n\n\t/**\n\t *\tReturn list of tickets.\n\t *  Called by selectTickets.\n\t *\n\t *\t@param      int\t\t$selected           Preselected ticket\n\t *\t@param      string\t$htmlname           Name of select html\n\t *  @param\t\tstring\t$filtertype         Filter on ticket type\n\t *\t@param      int\t\t$limit              Limit on number of returned lines\n\t * \t@param      string\t$filterkey          Filter on ticket ref or subject\n\t *\t@param\t\tint\t\t$status             Ticket status\n\t *  @param      int\t\t$outputmode         0=HTML select string, 1=Array\n\t *  @param\t\tstring\t$showempty\t\t    '' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t$forcecombo\t\t    Force to use combo box\n\t *  @param      string  $morecss            Add more css on select\n\t *  @return     array    \t\t\t\t    Array of keys for json\n\t */\n\tpublic function selectTicketsList($selected = '', $htmlname = 'ticketid', $filtertype = '', $limit = 20, $filterkey = '', $status = 1, $outputmode = 0, $showempty = '1', $forcecombo = 0, $morecss = '')\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\t\t$outarray = array();\n\n\t\t$selectFields = \" p.rowid, p.ref, p.message\";\n\n\t\t$sql = \"SELECT \";\n\t\t$sql .= $selectFields;\n\t\t$sql .= \" FROM \".$this->db->prefix().\"ticket as p\";\n\t\t$sql .= ' WHERE p.entity IN ('.getEntity('ticket').')';\n\n\t\t// Add criteria on ref/label\n\t\tif ($filterkey != '') {\n\t\t\t$sql .= ' AND (';\n\t\t\t$prefix = empty($conf->global->TICKET_DONOTSEARCH_ANYWHERE) ? '%' : ''; // Can use index if PRODUCT_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i = 0;\n\t\t\tif (count($scrit) > 1) $sql .= \"(\";\n\t\t\tforeach ($scrit as $crit) {\n\t\t\t\tif ($i > 0) $sql .= \" AND \";\n\t\t\t\t$sql .= \"(p.ref LIKE '\".$this->db->escape($prefix.$crit).\"%' OR p.subject LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t$sql .= \")\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) $sql .= \")\";\n\t\t\t$sql .= ')';\n\t\t}\n\n\t\t$sql .= $this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\tdol_syslog(get_class($this).\"::selectTicketsList search tickets\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/ticket/class/ticket.class.php';\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/ticket.lib.php';\n\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t$events = null;\n\n\t\t\tif (!$forcecombo) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events, $conf->global->TICKET_USE_SEARCH_TO_SELECT);\n\t\t\t}\n\n\t\t\t$out .= '<select class=\"flat'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\n\t\t\t$textifempty = '';\n\t\t\t// Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'.\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (!empty($conf->global->TICKET_USE_SEARCH_TO_SELECT)) {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) $textifempty = $langs->trans($showempty);\n\t\t\t\telse $textifempty .= $langs->trans(\"All\");\n\t\t\t} else {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) $textifempty = $langs->trans($showempty);\n\t\t\t}\n\t\t\tif ($showempty) $out .= '<option value=\"0\" selected>'.$textifempty.'</option>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($num && $i < $num) {\n\t\t\t\t$opt = '';\n\t\t\t\t$optJson = array();\n\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\t$this->constructTicketListOption($objp, $opt, $optJson, $selected, $filterkey);\n\t\t\t\t// Add new entry\n\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t$out .= $opt;\n\t\t\t\tarray_push($outarray, $optJson);\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$out .= '</select>';\n\n\t\t\t$this->db->free($result);\n\n\t\t\tif (empty($outputmode)) return $out;\n\t\t\treturn $outarray;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t * constructTicketListOption.\n\t * This define value for &$opt and &$optJson.\n\t *\n\t * @param \tresource\t$objp\t\t\t    Result set of fetch\n\t * @param \tstring\t\t$opt\t\t\t    Option (var used for returned value in string option format)\n\t * @param \tstring\t\t$optJson\t\t    Option (var used for returned value in json format)\n\t * @param \tstring\t\t$selected\t\t    Preselected value\n\t * @param   string      $filterkey          Filter key to highlight\n\t * @return\tvoid\n\t */\n\tprotected function constructTicketListOption(&$objp, &$opt, &$optJson, $selected, $filterkey = '')\n\t{\n\t\t$outkey = '';\n\t\t$outval = '';\n\t\t$outref = '';\n\t\t$outlabel = '';\n\t\t$outtype = '';\n\n\t\t$label = $objp->label;\n\n\t\t$outkey = $objp->rowid;\n\t\t$outref = $objp->ref;\n\t\t$outlabel = $objp->label;\n\t\t$outtype = $objp->fk_product_type;\n\n\t\t$opt = '<option value=\"'.$objp->rowid.'\"';\n\t\t$opt .= ($objp->rowid == $selected) ? ' selected' : '';\n\t\t$opt .= '>';\n\t\t$opt .= $objp->ref;\n\t\t$objRef = $objp->ref;\n\t\tif (!empty($filterkey) && $filterkey != '') $objRef = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $objRef, 1);\n\t\t$outval .= $objRef;\n\n\t\t$opt .= \"</option>\\n\";\n\t\t$optJson = array('key'=>$outkey, 'value'=>$outref, 'type'=>$outtypem);\n\t}\n\n\t/**\n\t *  Return list of projects in Ajax if Ajax activated or go to selectTicketsList\n\t *\n\t *  @param\t\tint\t\t\t$selected\t\t\t\tPreselected tickets\n\t *  @param\t\tstring\t\t$htmlname\t\t\t\tName of HTML select field (must be unique in page).\n\t *  @param  \tstring\t\t$filtertype     \t\tTo add a filter\n\t *  @param\t\tint\t\t\t$limit\t\t\t\t\tLimit on number of returned lines\n\t *  @param\t\tint\t\t\t$status\t\t\t\t\tTicket status\n\t *  @param\t\tstring\t\t$selected_input_value\tValue of preselected input text (for use with ajax)\n\t *  @param\t\tint\t\t\t$hidelabel\t\t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n\t *  @param\t\tarray\t\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t *  @param      int\t\t\t$socid\t\t\t\t\tThirdparty Id (to get also price dedicated to this customer)\n\t *  @param\t\tstring\t\t$showempty\t\t\t\t'' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t\t$forcecombo\t\t\t\tForce to use combo box\n\t *  @param      string      $morecss                Add more css on select\n\t *  @param \t\tarray \t\t$selected_combinations \tSelected combinations. Format: array([attrid] => attrval, [...])\n\t *  @param\t\tstring\t\t$nooutput\t\t\t\tNo print, return the output into a string\n\t *  @return\t\tvoid|string\n\t */\n\tpublic function selectProjects($selected = '', $htmlname = 'projectid', $filtertype = '', $limit = 0, $status = 1, $selected_input_value = '', $hidelabel = 0, $ajaxoptions = array(), $socid = 0, $showempty = '1', $forcecombo = 0, $morecss = '', $selected_combinations = null, $nooutput = 0)\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\n\t\t// check parameters\n\t\tif (is_null($ajaxoptions)) $ajaxoptions = array();\n\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->TICKET_USE_SEARCH_TO_SELECT)) {\n\t\t\t$placeholder = '';\n\n\t\t\tif ($selected && empty($selected_input_value)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n\t\t\t\t$projecttmpselect = new Project($this->db);\n\t\t\t\t$projecttmpselect->fetch($selected);\n\t\t\t\t$selected_input_value = $projecttmpselect->ref;\n\t\t\t\tunset($projecttmpselect);\n\t\t\t}\n\n\t\t\t$out .= ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/projet/ajax/projects.php', $urloption, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT, 1, $ajaxoptions);\n\n\t\t\tif (empty($hidelabel)) $out .= $langs->trans(\"RefOrLabel\").' : ';\n\t\t\telseif ($hidelabel > 1) {\n\t\t\t\t$placeholder = ' placeholder=\"'.$langs->trans(\"RefOrLabel\").'\"';\n\t\t\t\tif ($hidelabel == 2) {\n\t\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '<input type=\"text\" class=\"minwidth100\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.$placeholder.' '.(!empty($conf->global->PRODUCT_SEARCH_AUTOFOCUS) ? 'autofocus' : '').' />';\n\t\t\tif ($hidelabel == 3) {\n\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t}\n\t\t} else {\n\t\t\t$out .= $this->selectProjectsList($selected, $htmlname, $filtertype, $limit, $status, 0, $socid, $showempty, $forcecombo, $morecss);\n\t\t}\n\n\t\tif (empty($nooutput)) print $out;\n\t\telse return $out;\n\t}\n\n\t/**\n\t *\tReturn list of projects.\n\t *  Called by selectProjects.\n\t *\n\t *\t@param      int\t\t$selected           Preselected project\n\t *\t@param      string\t$htmlname           Name of select html\n\t *  @param\t\tstring\t$filtertype         Filter on project type\n\t *\t@param      int\t\t$limit              Limit on number of returned lines\n\t * \t@param      string\t$filterkey          Filter on project ref or subject\n\t *\t@param\t\tint\t\t$status             Ticket status\n\t *  @param      int\t\t$outputmode         0=HTML select string, 1=Array\n\t *  @param\t\tstring\t$showempty\t\t    '' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t$forcecombo\t\t    Force to use combo box\n\t *  @param      string  $morecss            Add more css on select\n\t *  @return     array    \t\t\t\t    Array of keys for json\n\t */\n\tpublic function selectProjectsList($selected = '', $htmlname = 'projectid', $filtertype = '', $limit = 20, $filterkey = '', $status = 1, $outputmode = 0, $showempty = '1', $forcecombo = 0, $morecss = '')\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\t\t$outarray = array();\n\n\t\t$selectFields = \" p.rowid, p.ref\";\n\n\t\t$sql = \"SELECT \";\n\t\t$sql .= $selectFields;\n\t\t$sql .= \" FROM \".$this->db->prefix().\"projet as p\";\n\t\t$sql .= ' WHERE p.entity IN ('.getEntity('project').')';\n\n\t\t// Add criteria on ref/label\n\t\tif ($filterkey != '') {\n\t\t\t$sql .= ' AND (';\n\t\t\t$prefix = empty($conf->global->TICKET_DONOTSEARCH_ANYWHERE) ? '%' : ''; // Can use index if PRODUCT_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i = 0;\n\t\t\tif (count($scrit) > 1) $sql .= \"(\";\n\t\t\tforeach ($scrit as $crit) {\n\t\t\t\tif ($i > 0) $sql .= \" AND \";\n\t\t\t\t$sql .= \"p.ref LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t$sql .= \"\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) $sql .= \")\";\n\t\t\t$sql .= ')';\n\t\t}\n\n\t\t$sql .= $this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\tdol_syslog(get_class($this).\"::selectProjectsList search projects\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/project.lib.php';\n\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t$events = null;\n\n\t\t\tif (!$forcecombo) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events, $conf->global->PROJECT_USE_SEARCH_TO_SELECT);\n\t\t\t}\n\n\t\t\t$out .= '<select class=\"flat'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\n\t\t\t$textifempty = '';\n\t\t\t// Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'.\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (!empty($conf->global->PROJECT_USE_SEARCH_TO_SELECT)) {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) $textifempty = $langs->trans($showempty);\n\t\t\t\telse $textifempty .= $langs->trans(\"All\");\n\t\t\t} else {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) $textifempty = $langs->trans($showempty);\n\t\t\t}\n\t\t\tif ($showempty) $out .= '<option value=\"0\" selected>'.$textifempty.'</option>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($num && $i < $num) {\n\t\t\t\t$opt = '';\n\t\t\t\t$optJson = array();\n\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\t$this->constructProjectListOption($objp, $opt, $optJson, $selected, $filterkey);\n\t\t\t\t// Add new entry\n\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t$out .= $opt;\n\t\t\t\tarray_push($outarray, $optJson);\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$out .= '</select>';\n\n\t\t\t$this->db->free($result);\n\n\t\t\tif (empty($outputmode)) return $out;\n\t\t\treturn $outarray;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t * constructProjectListOption.\n\t * This define value for &$opt and &$optJson.\n\t *\n\t * @param \tresource\t$objp\t\t\t    Result set of fetch\n\t * @param \tstring\t\t$opt\t\t\t    Option (var used for returned value in string option format)\n\t * @param \tstring\t\t$optJson\t\t    Option (var used for returned value in json format)\n\t * @param \tstring\t\t$selected\t\t    Preselected value\n\t * @param   string      $filterkey          Filter key to highlight\n\t * @return\tvoid\n\t */\n\tprotected function constructProjectListOption(&$objp, &$opt, &$optJson, $selected, $filterkey = '')\n\t{\n\t\t$outkey = '';\n\t\t$outval = '';\n\t\t$outref = '';\n\t\t$outlabel = '';\n\t\t$outtype = '';\n\n\t\t$label = $objp->label;\n\n\t\t$outkey = $objp->rowid;\n\t\t$outref = $objp->ref;\n\t\t$outlabel = $objp->label;\n\t\t$outtype = $objp->fk_product_type;\n\n\t\t$opt = '<option value=\"'.$objp->rowid.'\"';\n\t\t$opt .= ($objp->rowid == $selected) ? ' selected' : '';\n\t\t$opt .= '>';\n\t\t$opt .= $objp->ref;\n\t\t$objRef = $objp->ref;\n\t\tif (!empty($filterkey) && $filterkey != '') $objRef = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $objRef, 1);\n\t\t$outval .= $objRef;\n\n\t\t$opt .= \"</option>\\n\";\n\t\t$optJson = array('key'=>$outkey, 'value'=>$outref, 'type'=>$outtype);\n\t}\n\n\n\t/**\n\t *  Return list of members in Ajax if Ajax activated or go to selectTicketsList\n\t *\n\t *  @param\t\tint\t\t\t$selected\t\t\t\tPreselected tickets\n\t *  @param\t\tstring\t\t$htmlname\t\t\t\tName of HTML select field (must be unique in page).\n\t *  @param  \tstring\t\t$filtertype     \t\tTo add a filter\n\t *  @param\t\tint\t\t\t$limit\t\t\t\t\tLimit on number of returned lines\n\t *  @param\t\tint\t\t\t$status\t\t\t\t\tTicket status\n\t *  @param\t\tstring\t\t$selected_input_value\tValue of preselected input text (for use with ajax)\n\t *  @param\t\tint\t\t\t$hidelabel\t\t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n\t *  @param\t\tarray\t\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t *  @param      int\t\t\t$socid\t\t\t\t\tThirdparty Id (to get also price dedicated to this customer)\n\t *  @param\t\tstring\t\t$showempty\t\t\t\t'' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t\t$forcecombo\t\t\t\tForce to use combo box\n\t *  @param      string      $morecss                Add more css on select\n\t *  @param \t\tarray \t\t$selected_combinations \tSelected combinations. Format: array([attrid] => attrval, [...])\n\t *  @param\t\tstring\t\t$nooutput\t\t\t\tNo print, return the output into a string\n\t *  @return\t\tvoid|string\n\t */\n\tpublic function selectMembers($selected = '', $htmlname = 'adherentid', $filtertype = '', $limit = 0, $status = 1, $selected_input_value = '', $hidelabel = 0, $ajaxoptions = array(), $socid = 0, $showempty = '1', $forcecombo = 0, $morecss = '', $selected_combinations = null, $nooutput = 0)\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\n\t\t// check parameters\n\t\tif (is_null($ajaxoptions)) $ajaxoptions = array();\n\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->TICKET_USE_SEARCH_TO_SELECT)) {\n\t\t\t$placeholder = '';\n\n\t\t\tif ($selected && empty($selected_input_value)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\n\t\t\t\t$adherenttmpselect = new Member($this->db);\n\t\t\t\t$adherenttmpselect->fetch($selected);\n\t\t\t\t$selected_input_value = $adherenttmpselect->ref;\n\t\t\t\tunset($adherenttmpselect);\n\t\t\t}\n\n\t\t\t$out .= ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/adherents/ajax/adherents.php', $urloption, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT, 1, $ajaxoptions);\n\n\t\t\tif (empty($hidelabel)) $out .= $langs->trans(\"RefOrLabel\").' : ';\n\t\t\telseif ($hidelabel > 1) {\n\t\t\t\t$placeholder = ' placeholder=\"'.$langs->trans(\"RefOrLabel\").'\"';\n\t\t\t\tif ($hidelabel == 2) {\n\t\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out .= '<input type=\"text\" class=\"minwidth100\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.$placeholder.' '.(!empty($conf->global->PRODUCT_SEARCH_AUTOFOCUS) ? 'autofocus' : '').' />';\n\t\t\tif ($hidelabel == 3) {\n\t\t\t\t$out .= img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t}\n\t\t} else {\n\t\t\t$out .= $this->selectMembersList($selected, $htmlname, $filtertype, $limit, $status, 0, $socid, $showempty, $forcecombo, $morecss);\n\t\t}\n\n\t\tif (empty($nooutput)) print $out;\n\t\telse return $out;\n\t}\n\n\t/**\n\t *\tReturn list of adherents.\n\t *  Called by selectMembers.\n\t *\n\t *\t@param      int\t\t$selected           Preselected adherent\n\t *\t@param      string\t$htmlname           Name of select html\n\t *  @param\t\tstring\t$filtertype         Filter on adherent type\n\t *\t@param      int\t\t$limit              Limit on number of returned lines\n\t * \t@param      string\t$filterkey          Filter on adherent ref or subject\n\t *\t@param\t\tint\t\t$status             Ticket status\n\t *  @param      int\t\t$outputmode         0=HTML select string, 1=Array\n\t *  @param\t\tstring\t$showempty\t\t    '' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t$forcecombo\t\t    Force to use combo box\n\t *  @param      string  $morecss            Add more css on select\n\t *  @return     array    \t\t\t\t    Array of keys for json\n\t */\n\tpublic function selectMembersList($selected = '', $htmlname = 'adherentid', $filtertype = '', $limit = 20, $filterkey = '', $status = 1, $outputmode = 0, $showempty = '1', $forcecombo = 0, $morecss = '')\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$out = '';\n\t\t$outarray = array();\n\n\t\t$selectFields = \" p.rowid, p.ref\";\n\n\t\t$sql = \"SELECT \";\n\t\t$sql .= $selectFields;\n\t\t$sql .= \" FROM \".$this->db->prefix().\"adherent as p\";\n\t\t$sql .= ' WHERE p.entity IN ('.getEntity('adherent').')';\n\n\t\t// Add criteria on ref/label\n\t\tif ($filterkey != '') {\n\t\t\t$sql .= ' AND (';\n\t\t\t$prefix = empty($conf->global->TICKET_DONOTSEARCH_ANYWHERE) ? '%' : ''; // Can use index if PRODUCT_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i = 0;\n\t\t\tif (count($scrit) > 1) $sql .= \"(\";\n\t\t\tforeach ($scrit as $crit) {\n\t\t\t\tif ($i > 0) $sql .= \" AND \";\n\t\t\t\t$sql .= \"p.ref LIKE '\".$this->db->escape($prefix.$crit).\"%'\";\n\t\t\t\t$sql .= \"\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) $sql .= \")\";\n\t\t\t$sql .= ')';\n\t\t}\n\n\t\t$sql .= $this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\tdol_syslog(get_class($this).\"::selectMembersList search adherents\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/member.lib.php';\n\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t$events = null;\n\n\t\t\tif (!$forcecombo) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events, $conf->global->PROJECT_USE_SEARCH_TO_SELECT);\n\t\t\t}\n\n\t\t\t$out .= '<select class=\"flat'.($morecss ? ' '.$morecss : '').'\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\n\t\t\t$textifempty = '';\n\t\t\t// Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'.\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (!empty($conf->global->PROJECT_USE_SEARCH_TO_SELECT)) {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) $textifempty = $langs->trans($showempty);\n\t\t\t\telse $textifempty .= $langs->trans(\"All\");\n\t\t\t} else {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) $textifempty = $langs->trans($showempty);\n\t\t\t}\n\t\t\tif ($showempty) $out .= '<option value=\"0\" selected>'.$textifempty.'</option>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($num && $i < $num) {\n\t\t\t\t$opt = '';\n\t\t\t\t$optJson = array();\n\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\t$this->constructMemberListOption($objp, $opt, $optJson, $selected, $filterkey);\n\t\t\t\t// Add new entry\n\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t$out .= $opt;\n\t\t\t\tarray_push($outarray, $optJson);\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$out .= '</select>';\n\n\t\t\t$this->db->free($result);\n\n\t\t\tif (empty($outputmode)) return $out;\n\t\t\treturn $outarray;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t * constructMemberListOption.\n\t * This define value for &$opt and &$optJson.\n\t *\n\t * @param \tresource\t$objp\t\t\t    Result set of fetch\n\t * @param \tstring\t\t$opt\t\t\t    Option (var used for returned value in string option format)\n\t * @param \tstring\t\t$optJson\t\t    Option (var used for returned value in json format)\n\t * @param \tstring\t\t$selected\t\t    Preselected value\n\t * @param   string      $filterkey          Filter key to highlight\n\t * @return\tvoid\n\t */\n\tprotected function constructMemberListOption(&$objp, &$opt, &$optJson, $selected, $filterkey = '')\n\t{\n\t\t$outkey = '';\n\t\t$outval = '';\n\t\t$outref = '';\n\t\t$outlabel = '';\n\t\t$outtype = '';\n\n\t\t$label = $objp->label;\n\n\t\t$outkey = $objp->rowid;\n\t\t$outref = $objp->ref;\n\t\t$outlabel = $objp->label;\n\t\t$outtype = $objp->fk_product_type;\n\n\t\t$opt = '<option value=\"'.$objp->rowid.'\"';\n\t\t$opt .= ($objp->rowid == $selected) ? ' selected' : '';\n\t\t$opt .= '>';\n\t\t$opt .= $objp->ref;\n\t\t$objRef = $objp->ref;\n\t\tif (!empty($filterkey) && $filterkey != '') $objRef = preg_replace('/('.preg_quote($filterkey, '/').')/i', '<strong>$1</strong>', $objRef, 1);\n\t\t$outval .= $objRef;\n\n\t\t$opt .= \"</option>\\n\";\n\t\t$optJson = array('key'=>$outkey, 'value'=>$outref, 'type'=>$outtype);\n\t}\n\n\t/**\n\t * Generic method to select a component from a combo list.\n\t * Can use autocomplete with ajax after x key pressed or a full combo, depending on setup.\n\t * This is the generic method that will replace all specific existing methods.\n\t *\n\t * @param \tstring\t\t\t$objectdesc\t\t\tObjectClass:PathToClass[:AddCreateButtonOrNot[:Filter[:Sortfield]]]\n\t * @param\tstring\t\t\t$htmlname\t\t\tName of HTML select component\n\t * @param\tint\t\t\t\t$preselectedvalue\tPreselected value (ID of element)\n\t * @param\tstring\t\t\t$showempty\t\t\t''=empty values not allowed, 'string'=value show if we allow empty values (for example 'All', ...)\n\t * @param\tstring\t\t\t$searchkey\t\t\tSearch criteria\n\t * @param\tstring\t\t\t$placeholder\t\tPlace holder\n\t * @param\tstring\t\t\t$morecss\t\t\tMore CSS\n\t * @param\tstring\t\t\t$moreparams\t\t\tMore params provided to ajax call\n\t * @param\tint\t\t\t\t$forcecombo\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t * @param\tint\t\t\t\t$disabled\t\t\t1=Html component is disabled\n\t * @param\tstring\t        $selected_input_value\tValue of preselected input text (for use with ajax)\n\t * @return\tstring\t\t\t\t\t\t\t\tReturn HTML string\n\t * @see selectForFormsList() select_thirdparty_list()\n\t */\n\tpublic function selectForForms($objectdesc, $htmlname, $preselectedvalue, $showempty = '', $searchkey = '', $placeholder = '', $morecss = '', $moreparams = '', $forcecombo = 0, $disabled = 0, $selected_input_value = '')\n\t{\n\t\tglobal $conf, $user;\n\n\t\t$objecttmp = null;\n\n\t\t// Example of value for $objectdec:\n\t\t// Bom:bom/class/bom.class.php:0:t.status=1\n\t\t// Bom:bom/class/bom.class.php:0:t.status=1:ref\n\t\t// Bom:bom/class/bom.class.php:0:(t.status:=:1):ref\n\t\t$InfoFieldList = explode(\":\", $objectdesc, 4);\n\t\t$vartmp = $InfoFieldList[3];\n\t\t$reg = array();\n\t\tif (preg_match('/^.*:(\\w*)$/', $vartmp, $reg)) {\n\t\t\t$InfoFieldList[4] = $reg[1];\t// take the sort field\n\t\t}\n\t\t$InfoFieldList[3] = preg_replace('/:\\w*$/', '', $vartmp);\t// take the filter field\n\n\t\t$classname = $InfoFieldList[0];\n\t\t$classpath = $InfoFieldList[1];\n\t\t$addcreatebuttonornot = empty($InfoFieldList[2]) ? 0 : $InfoFieldList[2];\n\t\t$filter = empty($InfoFieldList[3]) ? '' : $InfoFieldList[3];\n\t\t$sortfield = empty($InfoFieldList[4]) ? '' : $InfoFieldList[4];\n\n\t\tif (!empty($classpath)) {\n\t\t\tdol_include_once($classpath);\n\n\t\t\tif ($classname && class_exists($classname)) {\n\t\t\t\t$objecttmp = new $classname($this->db);\n\t\t\t\t// Make some replacement\n\t\t\t\t$sharedentities = getEntity(strtolower($classname));\n\t\t\t\t$objecttmp->filter = str_replace(\n\t\t\t\t\tarray('__ENTITY__', '__SHARED_ENTITIES__', '__USER_ID__'),\n\t\t\t\t\tarray($conf->entity, $sharedentities, $user->id),\n\t\t\t\t\t$filter\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (!is_object($objecttmp)) {\n\t\t\tdol_syslog('Error bad setup of type for field '.$InfoFieldList, LOG_WARNING);\n\t\t\treturn 'Error bad setup of type for field '.join(',', $InfoFieldList);\n\t\t}\n\n\t\t//var_dump($objecttmp->filter);\n\t\t$prefixforautocompletemode = $objecttmp->element;\n\t\tif ($prefixforautocompletemode == 'societe') {\n\t\t\t$prefixforautocompletemode = 'company';\n\t\t}\n\t\tif ($prefixforautocompletemode == 'product') {\n\t\t\t$prefixforautocompletemode = 'produit';\n\t\t}\n\t\t$confkeyforautocompletemode = strtoupper($prefixforautocompletemode).'_USE_SEARCH_TO_SELECT'; // For example COMPANY_USE_SEARCH_TO_SELECT\n\n\t\tdol_syslog(get_class($this).\"::selectForForms object->filter=\".$objecttmp->filter, LOG_DEBUG);\n\t\t$out = '';\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->$confkeyforautocompletemode) && !$forcecombo) {\n\t\t\t// No immediate load of all database\n\t\t\t$placeholder = '';\n\t\t\tif ($preselectedvalue && empty($selected_input_value)) {\n\t\t\t\t$objecttmp->fetch($preselectedvalue);\n\t\t\t\t$selected_input_value = ($prefixforautocompletemode == 'company' ? $objecttmp->name : $objecttmp->ref);\n\t\t\t\t//unset($objecttmp);\n\t\t\t}\n\n\t\t\t$objectdesc = $classname.':'.$classpath.':'.$addcreatebuttonornot.':'.$filter;\n\t\t\t$urlforajaxcall = DOL_URL_ROOT.'/core/ajax/selectobject.php';\n\n\t\t\t// No immediate load of all database\n\t\t\t$urloption = 'htmlname='.urlencode($htmlname).'&outjson=1&objectdesc='.urlencode($objectdesc).'&filter='.urlencode($objecttmp->filter).($sortfield ? '&sortfield='.urlencode($sortfield) : '');\n\t\t\t// Activate the auto complete using ajax call.\n\t\t\t$out .= ajax_autocompleter($preselectedvalue, $htmlname, $urlforajaxcall, $urloption, $conf->global->$confkeyforautocompletemode, 0, array());\n\t\t\t$out .= '<style type=\"text/css\">.ui-autocomplete { z-index: 1003; }</style>';\n\t\t\t$out .= '<input type=\"text\" class=\"'.$morecss.'\"'.($disabled ? ' disabled=\"disabled\"' : '').' name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.($placeholder ? ' placeholder=\"'.dol_escape_htmltag($placeholder).'\"' : '') .' />';\n\t\t} else {\n\t\t\t// Immediate load of table record. Note: filter is inside $objecttmp->filter\n\t\t\t$out .= $this->selectForFormsList($objecttmp, $htmlname, $preselectedvalue, $showempty, $searchkey, $placeholder, $morecss, $moreparams, $forcecombo, 0, $disabled, $sortfield);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Function to forge a SQL criteria\n\t *\n\t * @param  array    $matches       Array of found string by regex search. Example: \"t.ref:like:'SO-%'\" or \"t.date_creation:<:'20160101'\" or \"t.nature:is:NULL\"\n\t * @return string                  Forged criteria. Example: \"t.field like 'abc%'\"\n\t */\n\tprotected static function forgeCriteriaCallback($matches)\n\t{\n\t\tglobal $db;\n\n\t\t//dol_syslog(\"Convert matches \".$matches[1]);\n\t\tif (empty($matches[1])) {\n\t\t\treturn '';\n\t\t}\n\t\t$tmp = explode(':', $matches[1]);\n\t\tif (count($tmp) < 3) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$tmpescaped = $tmp[2];\n\t\t$regbis = array();\n\t\tif (preg_match('/^\\'(.*)\\'$/', $tmpescaped, $regbis)) {\n\t\t\t$tmpescaped = \"'\".$db->escape($regbis[1]).\"'\";\n\t\t} else {\n\t\t\t$tmpescaped = $db->escape($tmpescaped);\n\t\t}\n\t\treturn $db->escape($tmp[0]).' '.strtoupper($db->escape($tmp[1])).\" \".$tmpescaped;\n\t}\n\n\t/**\n\t * Output html form to select an object.\n\t * Note, this function is called by selectForForms or by ajax selectobject.php\n\t *\n\t * @param \tObject\t\t\t$objecttmp\t\t\tObject to knwo the table to scan for combo.\n\t * @param\tstring\t\t\t$htmlname\t\t\tName of HTML select component\n\t * @param\tint\t\t\t\t$preselectedvalue\tPreselected value (ID of element)\n\t * @param\tstring\t\t\t$showempty\t\t\t''=empty values not allowed, 'string'=value show if we allow empty values (for example 'All', ...)\n\t * @param\tstring\t\t\t$searchkey\t\t\tSearch value\n\t * @param\tstring\t\t\t$placeholder\t\tPlace holder\n\t * @param\tstring\t\t\t$morecss\t\t\tMore CSS\n\t * @param\tstring\t\t\t$moreparams\t\t\tMore params provided to ajax call\n\t * @param\tint\t\t\t\t$forcecombo\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t * @param\tint\t\t\t\t$outputmode\t\t\t0=HTML select string, 1=Array\n\t * @param\tint\t\t\t\t$disabled\t\t\t1=Html component is disabled\n\t * @param\tstring\t\t\t$sortfield\t\t\tSort field\n\t * @return\tstring|array\t\t\t\t\t\tReturn HTML string\n\t * @see selectForForms()\n\t */\n\tpublic function selectForFormsList($objecttmp, $htmlname, $preselectedvalue, $showempty = '', $searchkey = '', $placeholder = '', $morecss = '', $moreparams = '', $forcecombo = 0, $outputmode = 0, $disabled = 0, $sortfield = '')\n\t{\n\t\tglobal $conf, $langs, $user, $hookmanager;\n\n\t\t//print \"$objecttmp->filter, $htmlname, $preselectedvalue, $showempty = '', $searchkey = '', $placeholder = '', $morecss = '', $moreparams = '', $forcecombo = 0, $outputmode = 0, $disabled\";\n\n\t\t$prefixforautocompletemode = $objecttmp->element;\n\t\tif ($prefixforautocompletemode == 'societe') {\n\t\t\t$prefixforautocompletemode = 'company';\n\t\t}\n\t\t$confkeyforautocompletemode = strtoupper($prefixforautocompletemode).'_USE_SEARCH_TO_SELECT'; // For example COMPANY_USE_SEARCH_TO_SELECT\n\n\t\tif (!empty($objecttmp->fields)) {\t// For object that declare it, it is better to use declared fields (like societe, contact, ...)\n\t\t\t$tmpfieldstoshow = '';\n\t\t\tforeach ($objecttmp->fields as $key => $val) {\n\t\t\t\tif (!dol_eval($val['enabled'], 1, 1)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!empty($val['showoncombobox'])) {\n\t\t\t\t\t$tmpfieldstoshow .= ($tmpfieldstoshow ? ',' : '').'t.'.$key;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($tmpfieldstoshow) {\n\t\t\t\t$fieldstoshow = $tmpfieldstoshow;\n\t\t\t}\n\t\t} else {\n\t\t\t// For backward compatibility\n\t\t\t$objecttmp->fields['ref'] = array('type'=>'varchar(30)', 'label'=>'Ref', 'showoncombobox'=>1);\n\t\t}\n\n\t\tif (empty($fieldstoshow)) {\n\t\t\tif (isset($objecttmp->fields['ref'])) {\n\t\t\t\t$fieldstoshow = 't.ref';\n\t\t\t} else {\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t$this->error = $langs->trans(\"ErrorNoFieldWithAttributeShowoncombobox\");\n\t\t\t\treturn $langs->trans('ErrorNoFieldWithAttributeShowoncombobox');\n\t\t\t}\n\t\t}\n\n\t\t$out = '';\n\t\t$outarray = array();\n\n\t\t$num = 0;\n\n\t\t// Search data\n\t\t$sql = \"SELECT t.rowid, \".$fieldstoshow.\" FROM \".$this->db->prefix().$objecttmp->table_element.\" as t\";\n\t\tif (isset($objecttmp->ismultientitymanaged)) {\n\t\t\tif (!is_numeric($objecttmp->ismultientitymanaged)) {\n\t\t\t\t$tmparray = explode('@', $objecttmp->ismultientitymanaged);\n\t\t\t\t$sql .= \" INNER JOIN \".$this->db->prefix().$tmparray[1].\" as parenttable ON parenttable.rowid = t.\".$tmparray[0];\n\t\t\t}\n\t\t\tif ($objecttmp->ismultientitymanaged === 'fk_soc@societe') {\n\t\t\t\tif (empty($user->rights->societe->client->voir) && !$user->socid) {\n\t\t\t\t\t$sql .= \", \".$this->db->prefix().\"societe_commerciaux as sc\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add where from hooks\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('selectForFormsListWhere', $parameters); // Note that $action and $object may have been modified by hook\n\t\tif (!empty($hookmanager->resPrint)) {\n\t\t\t$sql .= $hookmanager->resPrint;\n\t\t} else {\n\t\t\t$sql .= \" WHERE 1=1\";\n\t\t\tif (isset($objecttmp->ismultientitymanaged)) {\n\t\t\t\tif ($objecttmp->ismultientitymanaged == 1) {\n\t\t\t\t\t$sql .= \" AND t.entity IN (\".getEntity($objecttmp->table_element).\")\";\n\t\t\t\t}\n\t\t\t\tif (!is_numeric($objecttmp->ismultientitymanaged)) {\n\t\t\t\t\t$sql .= \" AND parenttable.entity = t.\".$tmparray[0];\n\t\t\t\t}\n\t\t\t\tif ($objecttmp->ismultientitymanaged == 1 && !empty($user->socid)) {\n\t\t\t\t\tif ($objecttmp->element == 'societe') {\n\t\t\t\t\t\t$sql .= \" AND t.rowid = \".((int) $user->socid);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$sql .= \" AND t.fk_soc = \".((int) $user->socid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($objecttmp->ismultientitymanaged === 'fk_soc@societe') {\n\t\t\t\t\tif (empty($user->rights->societe->client->voir) && !$user->socid) {\n\t\t\t\t\t\t$sql .= \" AND t.rowid = sc.fk_soc AND sc.fk_user = \".((int) $user->id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($searchkey != '') {\n\t\t\t\t$sql .= natural_search(explode(',', $fieldstoshow), $searchkey);\n\t\t\t}\n\t\t\tif ($objecttmp->filter) {\t // Syntax example \"(t.ref:like:'SO-%') and (t.date_creation:<:'20160101')\"\n\t\t\t\t/*if (! DolibarrApi::_checkFilters($objecttmp->filter))\n\t\t\t\t{\n\t\t\t\t\tthrow new RestException(503, 'Error when validating parameter sqlfilters '.$objecttmp->filter);\n\t\t\t\t}*/\n\t\t\t\t$regexstring = '\\(([^:\\'\\(\\)]+:[^:\\'\\(\\)]+:[^\\(\\)]+)\\)';\n\t\t\t\t$sql .= \" AND (\".preg_replace_callback('/'.$regexstring.'/', 'Form::forgeCriteriaCallback', $objecttmp->filter).\")\";\n\t\t\t}\n\t\t}\n\t\t$sql .= $this->db->order($sortfield ? $sortfield : $fieldstoshow, \"ASC\");\n\t\t//$sql.=$this->db->plimit($limit, 0);\n\t\t//print $sql;\n\n\t\t// Build output string\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t// Construct $out and $outarray\n\t\t\t$out .= '<select id=\"'.$htmlname.'\" class=\"flat'.($morecss ? ' '.$morecss : '').'\"'.($disabled ? ' disabled=\"disabled\"' : '').($moreparams ? ' '.$moreparams : '').' name=\"'.$htmlname.'\">'.\"\\n\";\n\n\t\t\t// Warning: Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'. Seems it is no more true with selec2 v4\n\t\t\t$textifempty = '&nbsp;';\n\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (!empty($conf->global->$confkeyforautocompletemode)) {\n\t\t\t\tif ($showempty && !is_numeric($showempty)) {\n\t\t\t\t\t$textifempty = $langs->trans($showempty);\n\t\t\t\t} else {\n\t\t\t\t\t$textifempty .= $langs->trans(\"All\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($showempty) {\n\t\t\t\t$out .= '<option value=\"-1\">'.$textifempty.'</option>'.\"\\n\";\n\t\t\t}\n\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$label = '';\n\t\t\t\t\t$tmparray = explode(',', $fieldstoshow);\n\t\t\t\t\t$oldvalueforshowoncombobox = 0;\n\t\t\t\t\tforeach ($tmparray as $key => $val) {\n\t\t\t\t\t\t$val = preg_replace('/t\\./', '', $val);\n\t\t\t\t\t\t$label .= (($label && $obj->$val) ? ($oldvalueforshowoncombobox != $objecttmp->fields[$val]['showoncombobox'] ? ' - ' : ' ') : '');\n\t\t\t\t\t\t$label .= $obj->$val;\n\t\t\t\t\t\t$oldvalueforshowoncombobox = $objecttmp->fields[$val]['showoncombobox'];\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($outputmode)) {\n\t\t\t\t\t\tif ($preselectedvalue > 0 && $preselectedvalue == $obj->rowid) {\n\t\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\" selected>'.$label.'</option>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\">'.$label.'</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarray_push($outarray, array('key'=>$obj->rowid, 'value'=>$label, 'label'=>$label));\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\t\t\t\t\tif (($i % 10) == 0) {\n\t\t\t\t\t\t$out .= \"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$out .= '</select>'.\"\\n\";\n\n\t\t\tif (!$forcecombo) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, null, (!empty($conf->global->$confkeyforautocompletemode) ? $conf->global->$confkeyforautocompletemode : 0));\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\t$this->result = array('nbofelement'=>$num);\n\n\t\tif ($outputmode) {\n\t\t\treturn $outarray;\n\t\t}\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tReturn a HTML select string, built from an array of key+value.\n\t *  Note: Do not apply langs->trans function on returned content, content may be entity encoded twice.\n\t *\n\t *\t@param\tstring\t\t\t$htmlname\t\t\tName of html select area. Must start with \"multi\" if this is a multiselect\n\t *\t@param\tarray\t\t\t$array\t\t\t\tArray like array(key => value) or array(key=>array('label'=>..., 'data-...'=>..., 'disabled'=>..., 'css'=>...))\n\t *\t@param\tstring|string[]\t$id\t\t\t\t\tPreselected key or preselected keys for multiselect\n\t *\t@param\tint|string\t\t$show_empty\t\t\t0 no empty value allowed, 1 or string to add an empty value into list (If 1: key is -1 and value is '' or '&nbsp;', If placeholder string: key is -1 and value is the string), <0 to add an empty value with key that is this value.\n\t *\t@param\tint\t\t\t\t$key_in_label\t\t1 to show key into label with format \"[key] value\"\n\t *\t@param\tint\t\t\t\t$value_as_key\t\t1 to use value as key\n\t *\t@param  string\t\t\t$moreparam\t\t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *\t@param  int\t\t\t\t$translate\t\t\t1=Translate and encode value\n\t * \t@param\tint\t\t\t\t$maxlen\t\t\t\tLength maximum for labels\n\t * \t@param\tint\t\t\t\t$disabled\t\t\tHtml select box is disabled\n\t *  @param\tstring\t\t\t$sort\t\t\t\t'ASC' or 'DESC' = Sort on label, '' or 'NONE' or 'POS' = Do not sort, we keep original order\n\t *  @param\tstring\t\t\t$morecss\t\t\tAdd more class to css styles\n\t *  @param\tint\t\t\t\t$addjscombo\t\t\tAdd js combo\n\t *  @param  string          $moreparamonempty\tAdd more param on the empty option line. Not used if show_empty not set\n\t *  @param  int             $disablebademail\t1=Check if a not valid email, 2=Check string '---', and if found into value, disable and colorize entry\n\t *  @param  int             $nohtmlescape\t\tNo html escaping.\n\t * \t@return\tstring\t\t\t\t\t\t\t\tHTML select string.\n\t *  @see multiselectarray(), selectArrayAjax(), selectArrayFilter()\n\t */\n\tpublic static function selectarray($htmlname, $array, $id = '', $show_empty = 0, $key_in_label = 0, $value_as_key = 0, $moreparam = '', $translate = 0, $maxlen = 0, $disabled = 0, $sort = '', $morecss = '', $addjscombo = 1, $moreparamonempty = '', $disablebademail = 0, $nohtmlescape = 0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t// Do we want a multiselect ?\n\t\t//$jsbeautify = 0;\n\t\t//if (preg_match('/^multi/',$htmlname)) $jsbeautify = 1;\n\t\t$jsbeautify = 1;\n\n\t\tif ($value_as_key) {\n\t\t\t$array = array_combine($array, $array);\n\t\t}\n\n\t\t$out = '';\n\n\t\tif ($addjscombo < 0) {\n\t\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t\t$addjscombo = 1;\n\t\t\t} else {\n\t\t\t\t$addjscombo = 0;\n\t\t\t}\n\t\t}\n\n\t\t// Add code for jquery to use multiselect\n\t\tif ($addjscombo && $jsbeautify) {\n\t\t\t// Enhance with select2\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t$out .= ajax_combobox($htmlname, array(), 0, 0, 'resolve', $show_empty < 0 ? (string) $show_empty : '-1');\n\t\t}\n\n\t\t$out .= '<select id=\"'.preg_replace('/^\\./', '', $htmlname).'\" '.($disabled ? 'disabled=\"disabled\" ' : '').'class=\"flat '.(preg_replace('/^\\./', '', $htmlname)).($morecss ? ' '.$morecss : '').'\"';\n\t\t$out .= ' name=\"'.preg_replace('/^\\./', '', $htmlname).'\" '.($moreparam ? $moreparam : '');\n\t\t$out .= '>';\n\n\t\tif ($show_empty) {\n\t\t\t$textforempty = ' ';\n\t\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t\t$textforempty = '&nbsp;'; // If we use ajaxcombo, we need &nbsp; here to avoid to have an empty element that is too small.\n\t\t\t}\n\t\t\tif (!is_numeric($show_empty)) {\n\t\t\t\t$textforempty = $show_empty;\n\t\t\t}\n\t\t\t$out .= '<option class=\"optiongrey\" '.($moreparamonempty ? $moreparamonempty.' ' : '').'value=\"'.($show_empty < 0 ? $show_empty : -1).'\"'.($id == $show_empty ? ' selected' : '').'>'.$textforempty.'</option>'.\"\\n\";\n\t\t}\n\n\t\tif (is_array($array)) {\n\t\t\t// Translate\n\t\t\tif ($translate) {\n\t\t\t\tforeach ($array as $key => $value) {\n\t\t\t\t\tif (!is_array($value)) {\n\t\t\t\t\t\t$array[$key] = $langs->trans($value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$array[$key]['label'] = $langs->trans($value['label']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Sort\n\t\t\tif ($sort == 'ASC') {\n\t\t\t\tasort($array);\n\t\t\t} elseif ($sort == 'DESC') {\n\t\t\t\tarsort($array);\n\t\t\t}\n\n\t\t\tforeach ($array as $key => $tmpvalue) {\n\t\t\t\tif (is_array($tmpvalue)) {\n\t\t\t\t\t$value = $tmpvalue['label'];\n\t\t\t\t\t$disabled = empty($tmpvalue['disabled']) ? '' : ' disabled';\n\t\t\t\t\t$style = empty($tmpvalue['css']) ? ' class=\"'.$tmpvalue['css'].'\"' : '';\n\t\t\t\t} else {\n\t\t\t\t\t$value = $tmpvalue;\n\t\t\t\t\t$disabled = '';\n\t\t\t\t\t$style = '';\n\t\t\t\t}\n\t\t\t\tif (!empty($disablebademail)) {\n\t\t\t\t\tif (($disablebademail == 1 && !preg_match('/&lt;.+@.+&gt;/', $value))\n\t\t\t\t\t\t|| ($disablebademail == 2 && preg_match('/---/', $value))) {\n\t\t\t\t\t\t$disabled = ' disabled';\n\t\t\t\t\t\t$style = ' class=\"warning\"';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($key_in_label) {\n\t\t\t\t\tif (empty($nohtmlescape)) {\n\t\t\t\t\t\t$selectOptionValue = dol_escape_htmltag($key.' - '.($maxlen ?dol_trunc($value, $maxlen) : $value));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$selectOptionValue = $key.' - '.($maxlen ?dol_trunc($value, $maxlen) : $value);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (empty($nohtmlescape)) {\n\t\t\t\t\t\t$selectOptionValue = dol_escape_htmltag($maxlen ?dol_trunc($value, $maxlen) : $value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$selectOptionValue = $maxlen ?dol_trunc($value, $maxlen) : $value;\n\t\t\t\t\t}\n\t\t\t\t\tif ($value == '' || $value == '-') {\n\t\t\t\t\t\t$selectOptionValue = '&nbsp;';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$out .= '<option value=\"'.$key.'\"';\n\t\t\t\t$out .= $style.$disabled;\n\t\t\t\tif (is_array($id)) {\n\t\t\t\t\tif (in_array($key, $id) && !$disabled) {\n\t\t\t\t\t\t$out .= ' selected'; // To preselect a value\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$id = (string) $id; // if $id = 0, then $id = '0'\n\t\t\t\t\tif ($id != '' && $id == $key && !$disabled) {\n\t\t\t\t\t\t$out .= ' selected'; // To preselect a value\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($nohtmlescape) {\n\t\t\t\t\t$out .= ' data-html=\"'.dol_escape_htmltag($selectOptionValue).'\"';\n\t\t\t\t}\n\t\t\t\tif (is_array($tmpvalue)) {\n\t\t\t\t\tforeach ($tmpvalue as $keyforvalue => $valueforvalue) {\n\t\t\t\t\t\tif (preg_match('/^data-/', $keyforvalue)) {\n\t\t\t\t\t\t\t$out .= ' '.$keyforvalue.'=\"'.$valueforvalue.'\"';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$out .= '>';\n\t\t\t\t//var_dump($selectOptionValue);\n\t\t\t\t$out .= $selectOptionValue;\n\t\t\t\t$out .= \"</option>\\n\";\n\t\t\t}\n\t\t}\n\n\t\t$out .= \"</select>\";\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tReturn a HTML select string, built from an array of key+value, but content returned into select come from an Ajax call of an URL.\n\t *  Note: Do not apply langs->trans function on returned content of Ajax service, content may be entity encoded twice.\n\t *\n\t *\t@param\tstring\t$htmlname       \t\tName of html select area\n\t *\t@param\tstring\t$url\t\t\t\t\tUrl. Must return a json_encode of array(key=>array('text'=>'A text', 'url'=>'An url'), ...)\n\t *\t@param\tstring\t$id             \t\tPreselected key\n\t *\t@param  string\t$moreparam      \t\tAdd more parameters onto the select tag\n\t *\t@param  string\t$moreparamtourl \t\tAdd more parameters onto the Ajax called URL\n\t * \t@param\tint\t\t$disabled\t\t\t\tHtml select box is disabled\n\t *  @param\tint\t\t$minimumInputLength\t\tMinimum Input Length\n\t *  @param\tstring\t$morecss\t\t\t\tAdd more class to css styles\n\t *  @param  int     $callurlonselect        If set to 1, some code is added so an url return by the ajax is called when value is selected.\n\t *  @param  string  $placeholder            String to use as placeholder\n\t *  @param  integer $acceptdelayedhtml      1 = caller is requesting to have html js content not returned but saved into global $delayedhtmlcontent (so caller can show it at end of page to avoid flash FOUC effect)\n\t * \t@return\tstring   \t\t\t\t\t\tHTML select string\n\t *  @see selectArrayFilter(), ajax_combobox() in ajax.lib.php\n\t */\n\tpublic static function selectArrayAjax($htmlname, $url, $id = '', $moreparam = '', $moreparamtourl = '', $disabled = 0, $minimumInputLength = 1, $morecss = '', $callurlonselect = 0, $placeholder = '', $acceptdelayedhtml = 0)\n\t{\n\t\tglobal $conf, $langs;\n\t\tglobal $delayedhtmlcontent;\t// Will be used later outside of this function\n\n\t\t// TODO Use an internal dolibarr component instead of select2\n\t\tif (empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) && !defined('REQUIRE_JQUERY_MULTISELECT')) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$out = '<select type=\"text\" class=\"'.$htmlname.($morecss ? ' '.$morecss : '').'\" '.($moreparam ? $moreparam.' ' : '').'name=\"'.$htmlname.'\"></select>';\n\n\t\t$outdelayed = '';\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t$tmpplugin = 'select2';\n\t\t\t$outdelayed = \"\\n\".'<!-- JS CODE TO ENABLE '.$tmpplugin.' for id '.$htmlname.' -->\n\t\t    \t<script>\n\t\t    \t$(document).ready(function () {\n\n\t    \t        '.($callurlonselect ? 'var saveRemoteData = [];' : '').'\n\n\t                $(\".'.$htmlname.'\").select2({\n\t\t\t\t    \tajax: {\n\t\t\t\t\t    \tdir: \"ltr\",\n\t\t\t\t\t    \turl: \"'.$url.'\",\n\t\t\t\t\t    \tdataType: \\'json\\',\n\t\t\t\t\t    \tdelay: 250,\n\t\t\t\t\t    \tdata: function (params) {\n\t\t\t\t\t    \t\treturn {\n\t\t\t\t\t\t\t    \tq: params.term, \t// search term\n\t\t\t\t\t    \t\t\tpage: params.page\n\t\t\t\t\t    \t\t};\n\t\t\t\t    \t\t},\n\t\t\t\t    \t\tprocessResults: function (data) {\n\t\t\t\t    \t\t\t// parse the results into the format expected by Select2.\n\t\t\t\t    \t\t\t// since we are using custom formatting functions we do not need to alter the remote JSON data\n\t\t\t\t    \t\t\t//console.log(data);\n\t\t\t\t\t\t\t\tsaveRemoteData = data;\n\t\t\t\t\t    \t    /* format json result for select2 */\n\t\t\t\t\t    \t    result = []\n\t\t\t\t\t    \t    $.each( data, function( key, value ) {\n\t\t\t\t\t    \t       result.push({id: key, text: value.text});\n\t                            });\n\t\t\t\t    \t\t\t//return {results:[{id:\\'none\\', text:\\'aa\\'}, {id:\\'rrr\\', text:\\'Red\\'},{id:\\'bbb\\', text:\\'Search a into projects\\'}], more:false}\n\t\t\t\t    \t\t\t//console.log(result);\n\t\t\t\t    \t\t\treturn {results: result, more: false}\n\t\t\t\t    \t\t},\n\t\t\t\t    \t\tcache: true\n\t\t\t\t    \t},\n\t\t \t\t\t\tlanguage: select2arrayoflanguage,\n\t\t\t\t\t\tcontainerCssClass: \\':all:\\',\t\t\t\t\t/* Line to add class of origin SELECT propagated to the new <span class=\"select2-selection...> tag */\n\t\t\t\t\t    placeholder: \"'.dol_escape_js($placeholder).'\",\n\t\t\t\t    \tescapeMarkup: function (markup) { return markup; }, \t// let our custom formatter work\n\t\t\t\t    \tminimumInputLength: '.$minimumInputLength.',\n\t\t\t\t        formatResult: function(result, container, query, escapeMarkup) {\n\t                        return escapeMarkup(result.text);\n\t                    },\n\t\t\t\t    });\n\n\t                '.($callurlonselect ? '\n\t                /* Code to execute a GET when we select a value */\n\t                $(\".'.$htmlname.'\").change(function() {\n\t\t\t\t    \tvar selected = $(\".'.$htmlname.'\").val();\n\t                \tconsole.log(\"We select in selectArrayAjax the entry \"+selected)\n\t\t\t\t        $(\".'.$htmlname.'\").val(\"\");  /* reset visible combo value */\n\t    \t\t\t    $.each( saveRemoteData, function( key, value ) {\n\t    \t\t\t\t        if (key == selected)\n\t    \t\t\t            {\n\t    \t\t\t                 console.log(\"selectArrayAjax - Do a redirect to \"+value.url)\n\t    \t\t\t                 location.assign(value.url);\n\t    \t\t\t            }\n\t                    });\n\t    \t\t\t});' : '').'\n\n\t    \t   });\n\t\t       </script>';\n\t\t}\n\n\t\tif ($acceptdelayedhtml) {\n\t\t\t$delayedhtmlcontent .= $outdelayed;\n\t\t} else {\n\t\t\t$out .= $outdelayed;\n\t\t}\n\t\treturn $out;\n\t}\n\n\t/**\n\t *  Return a HTML select string, built from an array of key+value, but content returned into select is defined into $array parameter.\n\t *  Note: Do not apply langs->trans function on returned content of Ajax service, content may be entity encoded twice.\n\t *\n\t *  @param  string\t$htmlname               Name of html select area\n\t *\t@param\tarray\t$array\t\t\t\t\tArray (key=>array('text'=>'A text', 'url'=>'An url'), ...)\n\t *\t@param\tstring\t$id             \t\tPreselected key\n\t *\t@param  string\t$moreparam      \t\tAdd more parameters onto the select tag\n\t *\t@param\tint\t\t$disableFiltering\t\tIf set to 1, results are not filtered with searched string\n\t * \t@param\tint\t\t$disabled\t\t\t\tHtml select box is disabled\n\t *  @param\tint\t\t$minimumInputLength\t\tMinimum Input Length\n\t *  @param\tstring\t$morecss\t\t\t\tAdd more class to css styles\n\t *  @param  int     $callurlonselect        If set to 1, some code is added so an url return by the ajax is called when value is selected.\n\t *  @param  string  $placeholder            String to use as placeholder\n\t *  @param  integer $acceptdelayedhtml      1 = caller is requesting to have html js content not returned but saved into global $delayedhtmlcontent (so caller can show it at end of page to avoid flash FOUC effect)\n\t *  @return\tstring   \t\t\t\t\t\tHTML select string\n\t *  @see selectArrayAjax(), ajax_combobox() in ajax.lib.php\n\t */\n\tpublic static function selectArrayFilter($htmlname, $array, $id = '', $moreparam = '', $disableFiltering = 0, $disabled = 0, $minimumInputLength = 1, $morecss = '', $callurlonselect = 0, $placeholder = '', $acceptdelayedhtml = 0)\n\t{\n\t\tglobal $conf, $langs;\n\t\tglobal $delayedhtmlcontent;\t// Will be used later outside of this function\n\n\t\t// TODO Use an internal dolibarr component instead of select2\n\t\tif (empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) && !defined('REQUIRE_JQUERY_MULTISELECT')) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$out = '<select type=\"text\" class=\"'.$htmlname.($morecss ? ' '.$morecss : '').'\" '.($moreparam ? $moreparam.' ' : '').'name=\"'.$htmlname.'\"><option></option></select>';\n\n\t\t$formattedarrayresult = array();\n\n\t\tforeach ($array as $key => $value) {\n\t\t\t$o = new stdClass();\n\t\t\t$o->id = $key;\n\t\t\t$o->text = $value['text'];\n\t\t\t$o->url = $value['url'];\n\t\t\t$formattedarrayresult[] = $o;\n\t\t}\n\n\t\t$outdelayed = '';\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t$tmpplugin = 'select2';\n\t\t\t$outdelayed = \"\\n\".'<!-- JS CODE TO ENABLE '.$tmpplugin.' for id '.$htmlname.' -->\n\t\t\t\t<script>\n\t\t\t\t$(document).ready(function () {\n\t\t\t\t\tvar data = '.json_encode($formattedarrayresult).';\n\n\t\t\t\t\t'.($callurlonselect ? 'var saveRemoteData = '.json_encode($array).';' : '').'\n\n\t\t\t\t\t$(\".'.$htmlname.'\").select2({\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tlanguage: select2arrayoflanguage,\n\t\t\t\t\t\tcontainerCssClass: \\':all:\\',\t\t\t\t\t/* Line to add class of origin SELECT propagated to the new <span class=\"select2-selection...> tag */\n\t\t\t\t\t\tplaceholder: \"'.dol_escape_js($placeholder).'\",\n\t\t\t\t\t\tescapeMarkup: function (markup) { return markup; }, \t// let our custom formatter work\n\t\t\t\t\t\tminimumInputLength: '.$minimumInputLength.',\n\t\t\t\t\t\tformatResult: function(result, container, query, escapeMarkup) {\n\t\t\t\t\t\t\treturn escapeMarkup(result.text);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatcher: function (params, data) {\n\n\t\t\t\t\t\t\tif(! data.id) return null;';\n\n\t\t\tif ($callurlonselect) {\n\t\t\t\t$outdelayed .= '\n\n\t\t\t\t\t\t\tvar urlBase = data.url;\n\t\t\t\t\t\t\tvar separ = urlBase.indexOf(\"?\") >= 0 ? \"&\" : \"?\";\n\t\t\t\t\t\t\t/* console.log(\"params.term=\"+params.term); */\n\t\t\t\t\t\t\t/* console.log(\"params.term encoded=\"+encodeURIComponent(params.term)); */\n\t\t\t\t\t\t\tsaveRemoteData[data.id].url = urlBase + separ + \"sall=\" + encodeURIComponent(params.term.replace(/\\\"/g, \"\"));';\n\t\t\t}\n\n\t\t\tif (!$disableFiltering) {\n\t\t\t\t$outdelayed .= '\n\n\t\t\t\t\t\t\tif(data.text.match(new RegExp(params.term))) {\n\t\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn null;';\n\t\t\t} else {\n\t\t\t\t$outdelayed .= '\n\n\t\t\t\t\t\t\treturn data;';\n\t\t\t}\n\n\t\t\t$outdelayed .= '\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t'.($callurlonselect ? '\n\t\t\t\t\t/* Code to execute a GET when we select a value */\n\t\t\t\t\t$(\".'.$htmlname.'\").change(function() {\n\t\t\t\t\t\tvar selected = $(\".'.$htmlname.'\").val();\n\t\t\t\t\t\tconsole.log(\"We select \"+selected)\n\n\t\t\t\t\t\t$(\".'.$htmlname.'\").val(\"\");  /* reset visible combo value */\n\t\t\t\t\t\t$.each( saveRemoteData, function( key, value ) {\n\t\t\t\t\t\t\tif (key == selected)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(\"selectArrayFilter - Do a redirect to \"+value.url)\n\t\t\t\t\t\t\t\tlocation.assign(value.url);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});' : '').'\n\n\t\t\t\t});\n\t\t\t\t</script>';\n\t\t}\n\n\t\tif ($acceptdelayedhtml) {\n\t\t\t$delayedhtmlcontent .= $outdelayed;\n\t\t} else {\n\t\t\t$out .= $outdelayed;\n\t\t}\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tShow a multiselect form from an array. WARNING: Use this only for short lists.\n\t *\n\t *\t@param\tstring\t\t$htmlname\t\tName of select\n\t *\t@param\tarray\t\t$array\t\t\tArray with key+value\n\t *\t@param\tarray\t\t$selected\t\tArray with key+value preselected\n\t *\t@param\tint\t\t\t$key_in_label   1 to show key like in \"[key] value\"\n\t *\t@param\tint\t\t\t$value_as_key   1 to use value as key\n\t *\t@param  string\t\t$morecss        Add more css style\n\t *\t@param  int\t\t\t$translate\t\tTranslate and encode value\n\t *  @param\tint|string\t$width\t\t\tForce width of select box. May be used only when using jquery couch. Example: 250, '95%'\n\t *  @param\tstring\t\t$moreattrib\t\tAdd more options on select component. Example: 'disabled'\n\t *  @param\tstring\t\t$elemtype\t\tType of element we show ('category', ...). Will execute a formating function on it. To use in readonly mode if js component support HTML formatting.\n\t *  @param\tstring\t\t$placeholder\tString to use as placeholder\n\t *  @param\tint\t\t\t$addjscombo\t\tAdd js combo\n\t *\t@return\tstring\t\t\t\t\t\tHTML multiselect string\n\t *  @see selectarray(), selectArrayAjax(), selectArrayFilter()\n\t */\n\tpublic static function multiselectarray($htmlname, $array, $selected = array(), $key_in_label = 0, $value_as_key = 0, $morecss = '', $translate = 0, $width = 0, $moreattrib = '', $elemtype = '', $placeholder = '', $addjscombo = -1)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$out = '';\n\n\t\tif ($addjscombo < 0) {\n\t\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t\t$addjscombo = 1;\n\t\t\t} else {\n\t\t\t\t$addjscombo = 0;\n\t\t\t}\n\t\t}\n\n\t\t// Try also magic suggest\n\t\t$out .= '<select id=\"'.$htmlname.'\" class=\"multiselect'.($morecss ? ' '.$morecss : '').'\" multiple name=\"'.$htmlname.'[]\"'.($moreattrib ? ' '.$moreattrib : '').($width ? ' style=\"width: '.(preg_match('/%/', $width) ? $width : $width.'px').'\"' : '').'>'.\"\\n\";\n\t\tif (is_array($array) && !empty($array)) {\n\t\t\tif ($value_as_key) {\n\t\t\t\t$array = array_combine($array, $array);\n\t\t\t}\n\n\t\t\tif (!empty($array)) {\n\t\t\t\tforeach ($array as $key => $value) {\n\t\t\t\t\t$newval = ($translate ? $langs->trans($value) : $value);\n\t\t\t\t\t$newval = ($key_in_label ? $key.' - '.$newval : $newval);\n\n\t\t\t\t\t$out .= '<option value=\"'.$key.'\"';\n\t\t\t\t\tif (is_array($selected) && !empty($selected) && in_array((string) $key, $selected) && ((string) $key != '')) {\n\t\t\t\t\t\t$out .= ' selected';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= ' data-html=\"'.dol_escape_htmltag($newval).'\"';\n\t\t\t\t\t$out .= '>';\n\t\t\t\t\t$out .= dol_htmlentitiesbr($newval);\n\t\t\t\t\t$out .= '</option>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$out .= '</select>'.\"\\n\";\n\n\t\t// Add code for jquery to use multiselect\n\t\tif (!empty($conf->use_javascript_ajax) && !empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT')) {\n\t\t\t$out .= \"\\n\".'<!-- JS CODE TO ENABLE select for id '.$htmlname.', addjscombo='.$addjscombo.' -->';\n\t\t\t$out .= \"\\n\".'<script>'.\"\\n\";\n\t\t\tif ($addjscombo == 1) {\n\t\t\t\t$tmpplugin = empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) ?constant('REQUIRE_JQUERY_MULTISELECT') : $conf->global->MAIN_USE_JQUERY_MULTISELECT;\n\t\t\t\t$out .= 'function formatResult(record, container) {'.\"\\n\";\n\t\t\t\t$out .= '\tif ($(record.element).attr(\"data-html\") != undefined) return htmlEntityDecodeJs($(record.element).attr(\"data-html\"));\t\t// If property html set, we decode html entities and use this'.\"\\n\";\n\t\t\t\t$out .= '\treturn record.text;';\n\t\t\t\t$out .= '};'.\"\\n\";\n\t\t\t\t$out .= 'function formatSelection(record) {'.\"\\n\";\n\t\t\t\tif ($elemtype == 'category') {\n\t\t\t\t\t$out .= 'return \\'<span><img src=\"'.DOL_URL_ROOT.'/theme/eldy/img/object_category.png\"> \\'+record.text+\\'</span>\\';';\n\t\t\t\t} else {\n\t\t\t\t\t$out .= 'return record.text;';\n\t\t\t\t}\n\t\t\t\t$out .= '};'.\"\\n\";\n\t\t\t\t$out .= '$(document).ready(function () {\n\t\t\t\t\t\t\t$(\\'#'.$htmlname.'\\').'.$tmpplugin.'({';\n\t\t\t\tif ($placeholder) {\n\t\t\t\t\t$out .= '\n\t\t\t\t\t\t\t\tplaceholder: {\n\t\t\t\t\t\t\t\t    id: \\'-1\\',\n\t\t\t\t\t\t\t\t    text: \\''.dol_escape_js($placeholder).'\\'\n\t\t\t\t\t\t\t\t  },';\n\t\t\t\t}\n\t\t\t\t$out .= '\t\tdir: \\'ltr\\',\n\t\t\t\t\t\t\t\t// Specify format function for dropdown item\n\t\t\t\t\t\t\t\tformatResult: formatResult,\n\t\t\t\t\t\t\t \ttemplateResult: formatResult,\t\t/* For 4.0 */\n\t\t\t\t\t\t\t\tescapeMarkup: function (markup) { return markup; }, \t// let our custom formatter work\n\t\t\t\t\t\t\t\t// Specify format function for selected item\n\t\t\t\t\t\t\t\tformatSelection: formatSelection,\n\t\t\t\t\t\t\t \ttemplateSelection: formatSelection\t\t/* For 4.0 */\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t/* Add also morecss to the css .select2 that is after the #htmlname, for component that are show dynamically after load, because select2 set\n\t\t\t\t\t\t\t\t the size only if component is not hidden by default on load */\n\t\t\t\t\t\t\t$(\\'#'.$htmlname.' + .select2\\').addClass(\\''.$morecss.'\\');\n\t\t\t\t\t\t});'.\"\\n\";\n\t\t\t} elseif ($addjscombo == 2 && !defined('DISABLE_MULTISELECT')) {\n\t\t\t\t// Add other js lib\n\t\t\t\t// TODO external lib multiselect/jquery.multi-select.js must have been loaded to use this multiselect plugin\n\t\t\t\t// ...\n\t\t\t\t$out .= 'console.log(\\'addjscombo=2 for htmlname='.$htmlname.'\\');';\n\t\t\t\t$out .= '$(document).ready(function () {\n\t\t\t\t\t\t\t$(\\'#'.$htmlname.'\\').multiSelect({\n\t\t\t\t\t\t\t\tcontainerHTML: \\'<div class=\"multi-select-container\">\\',\n\t\t\t\t\t\t\t\tmenuHTML: \\'<div class=\"multi-select-menu\">\\',\n\t\t\t\t\t\t\t\tbuttonHTML: \\'<span class=\"multi-select-button '.$morecss.'\">\\',\n\t\t\t\t\t\t\t\tmenuItemHTML: \\'<label class=\"multi-select-menuitem\">\\',\n\t\t\t\t\t\t\t\tactiveClass: \\'multi-select-container--open\\',\n\t\t\t\t\t\t\t\tnoneText: \\''.$placeholder.'\\'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})';\n\t\t\t}\n\t\t\t$out .= '</script>';\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tShow a multiselect dropbox from an array. If a saved selection of fields exists for user (into $user->conf->MAIN_SELECTEDFIELDS_contextofpage), we use this one instead of default.\n\t *\n\t *\t@param\tstring\t$htmlname\t\tName of HTML field\n\t *\t@param\tarray\t$array\t\t\tArray with array of fields we could show. This array may be modified according to setup of user.\n\t *  @param  string  $varpage        Id of context for page. Can be set by caller with $varpage=(empty($contextpage)?$_SERVER[\"PHP_SELF\"]:$contextpage);\n\t *\t@return\tstring\t\t\t\t\tHTML multiselect string\n\t *  @see selectarray()\n\t */\n\tpublic static function multiSelectArrayWithCheckbox($htmlname, &$array, $varpage)\n\t{\n\t\tglobal $conf, $langs, $user, $extrafields;\n\n\t\tif (!empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$tmpvar = \"MAIN_SELECTEDFIELDS_\".$varpage; // To get list of saved selected fields to show\n\n\t\tif (!empty($user->conf->$tmpvar)) {\t\t// A list of fields was already customized for user\n\t\t\t$tmparray = explode(',', $user->conf->$tmpvar);\n\t\t\tforeach ($array as $key => $val) {\n\t\t\t\t//var_dump($key);\n\t\t\t\t//var_dump($tmparray);\n\t\t\t\tif (in_array($key, $tmparray)) {\n\t\t\t\t\t$array[$key]['checked'] = 1;\n\t\t\t\t} else {\n\t\t\t\t\t$array[$key]['checked'] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\t\t\t\t\t\t\t\t// There is no list of fields already customized for user\n\t\t\tforeach ($array as $key => $val) {\n\t\t\t\tif (!empty($array[$key]['checked']) && $array[$key]['checked'] < 0) {\n\t\t\t\t\t$array[$key]['checked'] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$listoffieldsforselection = '';\n\t\t$listcheckedstring = '';\n\n\t\tforeach ($array as $key => $val) {\n\t\t\t/* var_dump($val);\n\t\t\tvar_dump(array_key_exists('enabled', $val));\n\t\t\tvar_dump(!$val['enabled']);*/\n\t\t\tif (array_key_exists('enabled', $val) && isset($val['enabled']) && !$val['enabled']) {\n\t\t\t\tunset($array[$key]); // We don't want this field\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!empty($val['type']) && $val['type'] == 'separate') {\n\t\t\t\t// Field remains in array but we don't add it into $listoffieldsforselection\n\t\t\t\t//$listoffieldsforselection .= '<li>-----</li>';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ($val['label']) {\n\t\t\t\tif (!empty($val['langfile']) && is_object($langs)) {\n\t\t\t\t\t$langs->load($val['langfile']);\n\t\t\t\t}\n\n\t\t\t\t// Note: $val['checked'] <> 0 means we must show the field into the combo list\n\t\t\t\t$listoffieldsforselection .= '<li><input type=\"checkbox\" id=\"checkbox'.$key.'\" value=\"'.$key.'\"'.((empty($val['checked']) || $val['checked'] == '-1') ? '' : ' checked=\"checked\"').'/><label for=\"checkbox'.$key.'\">'.dol_escape_htmltag($langs->trans($val['label'])).'</label></li>';\n\t\t\t\t$listcheckedstring .= (empty($val['checked']) ? '' : $key.',');\n\t\t\t}\n\t\t}\n\n\t\t$out = '<!-- Component multiSelectArrayWithCheckbox '.$htmlname.' -->\n\n        <dl class=\"dropdown\">\n            <dt>\n            <a href=\"#'.$htmlname.'\">\n              '.img_picto('', 'list').'\n            </a>\n            <input type=\"hidden\" class=\"'.$htmlname.'\" name=\"'.$htmlname.'\" value=\"'.$listcheckedstring.'\">\n            </dt>\n            <dd class=\"dropdowndd\">\n                <div class=\"multiselectcheckbox'.$htmlname.'\">\n                    <ul class=\"ul'.$htmlname.'\">\n                    '.$listoffieldsforselection.'\n                    </ul>\n                </div>\n            </dd>\n        </dl>\n\n        <script type=\"text/javascript\">\n          jQuery(document).ready(function () {\n              $(\\'.multiselectcheckbox'.$htmlname.' input[type=\"checkbox\"]\\').on(\\'click\\', function () {\n                  console.log(\"A new field was added/removed, we edit field input[name=formfilteraction]\");\n\n                  $(\"input:hidden[name=formfilteraction]\").val(\\'listafterchangingselectedfields\\');\t// Update field so we know we changed something on selected fields after POST\n\n                  var title = $(this).val() + \",\";\n                  if ($(this).is(\\':checked\\')) {\n                      $(\\'.'.$htmlname.'\\').val(title + $(\\'.'.$htmlname.'\\').val());\n                  }\n                  else {\n                      $(\\'.'.$htmlname.'\\').val( $(\\'.'.$htmlname.'\\').val().replace(title, \\'\\') )\n                  }\n                  // Now, we submit page\n                  //$(this).parents(\\'form:first\\').submit();\n              });\n\n\n           });\n        </script>\n\n        ';\n\t\treturn $out;\n\t}\n\n\t/**\n\t * \tRender list of categories linked to object with id $id and type $type\n\t *\n\t * \t@param\t\tint\t\t$id\t\t\t\tId of object\n\t * \t@param\t\tstring\t$type\t\t\tType of category ('member', 'customer', 'supplier', 'product', 'contact'). Old mode (0, 1, 2, ...) is deprecated.\n\t *  @param\t\tint\t\t$rendermode\t\t0=Default, use multiselect. 1=Emulate multiselect (recommended)\n\t *  @param\t\tint\t\t$nolink\t\t\t1=Do not add html links\n\t * \t@return\t\tstring\t\t\t\t\tString with categories\n\t */\n\tpublic function showCategories($id, $type, $rendermode = 0, $nolink = 0)\n\t{\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\n\t\t$cat = new Categorie($this->db);\n\t\t$categories = $cat->containing($id, $type);\n\n\t\tif ($rendermode == 1) {\n\t\t\t$toprint = array();\n\t\t\tforeach ($categories as $c) {\n\t\t\t\t$ways = $c->print_all_ways(' &gt;&gt; ', ($nolink ? 'none' : ''), 0, 1); // $ways[0] = \"ccc2 >> ccc2a >> ccc2a1\" with html formated text\n\t\t\t\tforeach ($ways as $way) {\n\t\t\t\t\t$toprint[] = '<li class=\"select2-search-choice-dolibarr noborderoncategories\"'.($c->color ? ' style=\"background: #'.$c->color.';\"' : ' style=\"background: #bbb\"').'>'.$way.'</li>';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '<div class=\"select2-container-multi-dolibarr\"><ul class=\"select2-choices-dolibarr\">'.implode(' ', $toprint).'</ul></div>';\n\t\t}\n\n\t\tif ($rendermode == 0) {\n\t\t\t$arrayselected = array();\n\t\t\t$cate_arbo = $this->select_all_categories($type, '', 'parent', 64, 0, 1);\n\t\t\tforeach ($categories as $c) {\n\t\t\t\t$arrayselected[] = $c->id;\n\t\t\t}\n\n\t\t\treturn $this->multiselectarray('categories', $cate_arbo, $arrayselected, '', 0, '', 0, '100%', 'disabled', 'category');\n\t\t}\n\n\t\treturn 'ErrorBadValueForParameterRenderMode'; // Should not happened\n\t}\n\n\t/**\n\t *  Show linked object block.\n\t *\n\t *  @param\tCommonObject\t$object\t\t      Object we want to show links to\n\t *  @param  string          $morehtmlright    More html to show on right of title\n\t *  @param  array           $compatibleImportElementsList  Array of compatibles elements object for \"import from\" action\n\t *  @return\tint\t\t\t\t\t\t\t      <0 if KO, >=0 if OK\n\t */\n\tpublic function showLinkedObjectBlock($object, $morehtmlright = '', $compatibleImportElementsList = false)\n\t{\n\t\tglobal $conf, $langs, $hookmanager;\n\t\tglobal $bc, $action;\n\n\t\t$object->fetchObjectLinked();\n\n\t\t// Bypass the default method\n\t\t$hookmanager->initHooks(array('commonobject'));\n\t\t$parameters = array(\n\t\t\t'morehtmlright' => $morehtmlright,\n\t\t\t'compatibleImportElementsList' => &$compatibleImportElementsList,\n\t\t);\n\t\t$reshook = $hookmanager->executeHooks('showLinkedObjectBlock', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\n\t\tif (empty($reshook)) {\n\t\t\t$nbofdifferenttypes = count($object->linkedObjects);\n\n\t\t\tprint '<!-- showLinkedObjectBlock -->';\n\t\t\tprint load_fiche_titre($langs->trans('RelatedObjects'), $morehtmlright, '', 0, 0, 'showlinkedobjectblock');\n\n\n\t\t\tprint '<div class=\"div-table-responsive-no-min\">';\n\t\t\tprint '<table class=\"noborder allwidth\" data-block=\"showLinkedObject\" data-element=\"'.$object->element.'\"  data-elementid=\"'.$object->id.'\"   >';\n\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\tprint '<td>'.$langs->trans(\"Type\").'</td>';\n\t\t\tprint '<td>'.$langs->trans(\"Ref\").'</td>';\n\t\t\tprint '<td class=\"center\"></td>';\n\t\t\tprint '<td class=\"center\">'.$langs->trans(\"Date\").'</td>';\n\t\t\tprint '<td class=\"right\">'.$langs->trans(\"AmountHTShort\").'</td>';\n\t\t\tprint '<td class=\"right\">'.$langs->trans(\"Status\").'</td>';\n\t\t\tprint '<td></td>';\n\t\t\tprint '</tr>';\n\n\t\t\t$nboftypesoutput = 0;\n\n\t\t\tforeach ($object->linkedObjects as $objecttype => $objects) {\n\t\t\t\t$tplpath = $element = $subelement = $objecttype;\n\n\t\t\t\t// to display inport button on tpl\n\t\t\t\t$showImportButton = false;\n\t\t\t\tif (!empty($compatibleImportElementsList) && in_array($element, $compatibleImportElementsList)) {\n\t\t\t\t\t$showImportButton = true;\n\t\t\t\t}\n\n\t\t\t\t$regs = array();\n\t\t\t\tif ($objecttype != 'supplier_proposal' && preg_match('/^([^_]+)_([^_]+)/i', $objecttype, $regs)) {\n\t\t\t\t\t$element = $regs[1];\n\t\t\t\t\t$subelement = $regs[2];\n\t\t\t\t\t$tplpath = $element.'/'.$subelement;\n\t\t\t\t}\n\t\t\t\t$tplname = 'linkedobjectblock';\n\n\t\t\t\t// To work with non standard path\n\t\t\t\tif ($objecttype == 'facture') {\n\t\t\t\t\t$tplpath = 'compta/'.$element;\n\t\t\t\t\tif (empty($conf->facture->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'facturerec') {\n\t\t\t\t\t$tplpath = 'compta/facture';\n\t\t\t\t\t$tplname = 'linkedobjectblockForRec';\n\t\t\t\t\tif (empty($conf->facture->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'propal') {\n\t\t\t\t\t$tplpath = 'comm/'.$element;\n\t\t\t\t\tif (empty($conf->propal->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'supplier_proposal') {\n\t\t\t\t\tif (empty($conf->supplier_proposal->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'shipping' || $objecttype == 'shipment') {\n\t\t\t\t\t$tplpath = 'expedition';\n\t\t\t\t\tif (empty($conf->expedition->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'reception') {\n\t\t\t\t\t$tplpath = 'reception';\n\t\t\t\t\tif (empty($conf->reception->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'delivery') {\n\t\t\t\t\t$tplpath = 'delivery';\n\t\t\t\t\tif (empty($conf->expedition->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'mo') {\n\t\t\t\t\t$tplpath = 'mrp/mo';\n\t\t\t\t\tif (empty($conf->mrp->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'ficheinter') {\n\t\t\t\t\t$tplpath = 'fichinter';\n\t\t\t\t\tif (empty($conf->ficheinter->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t} elseif ($objecttype == 'invoice_supplier') {\n\t\t\t\t\t$tplpath = 'fourn/facture';\n\t\t\t\t} elseif ($objecttype == 'order_supplier') {\n\t\t\t\t\t$tplpath = 'fourn/commande';\n\t\t\t\t} elseif ($objecttype == 'expensereport') {\n\t\t\t\t\t$tplpath = 'expensereport';\n\t\t\t\t} elseif ($objecttype == 'subscription') {\n\t\t\t\t\t$tplpath = 'adherents';\n\t\t\t\t} elseif ($objecttype == 'conferenceorbooth') {\n\t\t\t\t\t$tplpath = 'eventorganization';\n\t\t\t\t} elseif ($objecttype == 'conferenceorboothattendee') {\n\t\t\t\t\t$tplpath = 'eventorganization';\n\t\t\t\t} elseif ($objecttype == 'mo') {\n\t\t\t\t\t$tplpath = 'mrp';\n\t\t\t\t\tif (empty($conf->mrp->enabled)) {\n\t\t\t\t\t\tcontinue; // Do not show if module disabled\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tglobal $linkedObjectBlock;\n\t\t\t\t$linkedObjectBlock = $objects;\n\n\t\t\t\t// Output template part (modules that overwrite templates must declare this into descriptor)\n\t\t\t\t$dirtpls = array_merge($conf->modules_parts['tpl'], array('/'.$tplpath.'/tpl'));\n\t\t\t\tforeach ($dirtpls as $reldir) {\n\t\t\t\t\tif ($nboftypesoutput == ($nbofdifferenttypes - 1)) {    // No more type to show after\n\t\t\t\t\t\tglobal $noMoreLinkedObjectBlockAfter;\n\t\t\t\t\t\t$noMoreLinkedObjectBlockAfter = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t$res = @include dol_buildpath($reldir.'/'.$tplname.'.tpl.php');\n\t\t\t\t\tif ($res) {\n\t\t\t\t\t\t$nboftypesoutput++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$nboftypesoutput) {\n\t\t\t\tprint '<tr><td class=\"impair\" colspan=\"7\"><span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span></td></tr>';\n\t\t\t}\n\n\t\t\tprint '</table>';\n\n\t\t\tif (!empty($compatibleImportElementsList)) {\n\t\t\t\t$res = @include dol_buildpath('core/tpl/ajax/objectlinked_lineimport.tpl.php');\n\t\t\t}\n\n\n\t\t\tprint '</div>';\n\n\t\t\treturn $nbofdifferenttypes;\n\t\t}\n\t}\n\n\t/**\n\t *  Show block with links to link to other objects.\n\t *\n\t *  @param\tCommonObject\t$object\t\t\t\tObject we want to show links to\n\t *  @param\tarray\t\t\t$restrictlinksto\tRestrict links to some elements, for exemple array('order') or array('supplier_order'). null or array() if no restriction.\n\t *  @param\tarray\t\t\t$excludelinksto\t\tDo not show links of this type, for exemple array('order') or array('supplier_order'). null or array() if no exclusion.\n\t *  @return\tstring\t\t\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function showLinkToObjectBlock($object, $restrictlinksto = array(), $excludelinksto = array())\n\t{\n\t\tglobal $conf, $langs, $hookmanager;\n\t\tglobal $bc, $action;\n\n\t\t$linktoelem = '';\n\t\t$linktoelemlist = '';\n\t\t$listofidcompanytoscan = '';\n\n\t\tif (!is_object($object->thirdparty)) {\n\t\t\t$object->fetch_thirdparty();\n\t\t}\n\n\t\t$possiblelinks = array();\n\t\tif (is_object($object->thirdparty) && !empty($object->thirdparty->id) && $object->thirdparty->id > 0) {\n\t\t\t$listofidcompanytoscan = $object->thirdparty->id;\n\t\t\tif (($object->thirdparty->parent > 0) && !empty($conf->global->THIRDPARTY_INCLUDE_PARENT_IN_LINKTO)) {\n\t\t\t\t$listofidcompanytoscan .= ','.$object->thirdparty->parent;\n\t\t\t}\n\t\t\tif (($object->fk_project > 0) && !empty($conf->global->THIRDPARTY_INCLUDE_PROJECT_THIRDPARY_IN_LINKTO)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n\t\t\t\t$tmpproject = new Project($this->db);\n\t\t\t\t$tmpproject->fetch($object->fk_project);\n\t\t\t\tif ($tmpproject->socid > 0 && ($tmpproject->socid != $object->thirdparty->id)) {\n\t\t\t\t\t$listofidcompanytoscan .= ','.$tmpproject->socid;\n\t\t\t\t}\n\t\t\t\tunset($tmpproject);\n\t\t\t}\n\n\t\t\t$possiblelinks = array(\n\t\t\t\t'propal'=>array('enabled'=>$conf->propal->enabled, 'perms'=>1, 'label'=>'LinkToProposal', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_client, t.total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"propal as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('propal').')'),\n\t\t\t\t'order'=>array('enabled'=>$conf->commande->enabled, 'perms'=>1, 'label'=>'LinkToOrder', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_client, t.total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"commande as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('commande').')'),\n\t\t\t\t'invoice'=>array('enabled'=>$conf->facture->enabled, 'perms'=>1, 'label'=>'LinkToInvoice', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_client, t.total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"facture as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('invoice').')'),\n\t\t\t\t'invoice_template'=>array('enabled'=>$conf->facture->enabled, 'perms'=>1, 'label'=>'LinkToTemplateInvoice', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.titre as ref, t.total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"facture_rec as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('invoice').')'),\n\t\t\t\t'contrat'=>array(\n\t\t\t\t\t'enabled'=>$conf->contrat->enabled,\n\t\t\t\t\t'perms'=>1,\n\t\t\t\t\t'label'=>'LinkToContract',\n\t\t\t\t\t'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_customer as ref_client, t.ref_supplier, SUM(td.total_ht) as total_ht\n\t\t\t\t\t\t\tFROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"contrat as t, \".$this->db->prefix().\"contratdet as td WHERE t.fk_soc = s.rowid AND td.fk_contrat = t.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('contract').') GROUP BY s.rowid, s.nom, s.client, t.rowid, t.ref, t.ref_customer, t.ref_supplier'\n\t\t\t\t),\n\t\t\t\t'fichinter'=>array('enabled'=>!empty($conf->ficheinter->enabled) ? $conf->ficheinter->enabled : 0, 'perms'=>1, 'label'=>'LinkToIntervention', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"fichinter as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('intervention').')'),\n\t\t\t\t'supplier_proposal'=>array('enabled'=>$conf->supplier_proposal->enabled, 'perms'=>1, 'label'=>'LinkToSupplierProposal', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, '' as ref_supplier, t.total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"supplier_proposal as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('supplier_proposal').')'),\n\t\t\t\t'order_supplier'=>array('enabled'=>$conf->supplier_order->enabled, 'perms'=>1, 'label'=>'LinkToSupplierOrder', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_supplier, t.total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"commande_fournisseur as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('commande_fournisseur').')'),\n\t\t\t\t'invoice_supplier'=>array('enabled'=>$conf->supplier_invoice->enabled, 'perms'=>1, 'label'=>'LinkToSupplierInvoice', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_supplier, t.total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"facture_fourn as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('facture_fourn').')'),\n\t\t\t\t'ticket'=>array('enabled'=>$conf->ticket->enabled, 'perms'=>1, 'label'=>'LinkToTicket', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.track_id, '0' as total_ht FROM \".$this->db->prefix().\"societe as s, \".$this->db->prefix().\"ticket as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('ticket').')'),\n\t\t\t\t'mo'=>array('enabled'=>$conf->mrp->enabled, 'perms'=>1, 'label'=>'LinkToMo', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.rowid, '0' as total_ht FROM \".$this->db->prefix().\"societe as s INNER JOIN \".$this->db->prefix().\"mrp_mo as t ON t.fk_soc = s.rowid  WHERE  t.fk_soc IN (\".$this->db->sanitize($listofidcompanytoscan).') AND t.entity IN ('.getEntity('mo').')')\n\t\t\t);\n\t\t}\n\n\t\t// Can complete the possiblelink array\n\t\t$hookmanager->initHooks(array('commonobject'));\n\t\t$parameters = array('listofidcompanytoscan' => $listofidcompanytoscan);\n\n\t\tif (!empty($listofidcompanytoscan)) {  // If empty, we don't have criteria to scan the object we can link to\n\t\t\t$reshook = $hookmanager->executeHooks('showLinkToObjectBlock', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\t}\n\n\t\tif (empty($reshook)) {\n\t\t\tif (is_array($hookmanager->resArray) && count($hookmanager->resArray)) {\n\t\t\t\t$possiblelinks = array_merge($possiblelinks, $hookmanager->resArray);\n\t\t\t}\n\t\t} elseif ($reshook > 0) {\n\t\t\tif (is_array($hookmanager->resArray) && count($hookmanager->resArray)) {\n\t\t\t\t$possiblelinks = $hookmanager->resArray;\n\t\t\t}\n\t\t}\n\n\t\tforeach ($possiblelinks as $key => $possiblelink) {\n\t\t\t$num = 0;\n\n\t\t\tif (empty($possiblelink['enabled'])) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!empty($possiblelink['perms']) && (empty($restrictlinksto) || in_array($key, $restrictlinksto)) && (empty($excludelinksto) || !in_array($key, $excludelinksto))) {\n\t\t\t\tprint '<div id=\"'.$key.'list\"'.(empty($conf->use_javascript_ajax) ? '' : ' style=\"display:none\"').'>';\n\n\t\t\t\tif (!empty($conf->global->MAIN_LINK_BY_REF_IN_LINKTO)) {\n\t\t\t\t\tprint '<br><form action=\"' . $_SERVER[\"PHP_SELF\"] . '\" method=\"POST\" name=\"formlinkedbyref' . $key . '\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"id\" value=\"' . $object->id . '\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"addlinkbyref\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"addlink\" value=\"' . $key . '\">';\n\t\t\t\t\tprint '<table class=\"noborder\">';\n\t\t\t\t\tprint '<tr>';\n\t\t\t\t\tprint '<td>' . $langs->trans(\"Ref\") . '</td>';\n\t\t\t\t\tprint '<td><input type=\"text\" name=\"reftolinkto\" value=\"' . dol_escape_htmltag(GETPOST('reftolinkto', 'alpha')) . '\">&nbsp;<input type=\"submit\" class=\"button valignmiddle\" value=\"' . $langs->trans('ToLink') . '\">&nbsp;<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"' . $langs->trans('Cancel') . '\"></td>';\n\t\t\t\t\tprint '</tr>';\n\t\t\t\t\tprint '</table>';\n\t\t\t\t\tprint '</form>';\n\t\t\t\t}\n\n\t\t\t\t$sql = $possiblelink['sql'];\n\n\t\t\t\t$resqllist = $this->db->query($sql);\n\t\t\t\tif ($resqllist) {\n\t\t\t\t\t$num = $this->db->num_rows($resqllist);\n\t\t\t\t\t$i = 0;\n\n\t\t\t\t\tprint '<br>';\n\t\t\t\t\tprint '<form action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"POST\" name=\"formlinked'.$key.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"addlink\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"id\" value=\"'.$object->id.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"addlink\" value=\"'.$key.'\">';\n\t\t\t\t\tprint '<table class=\"noborder\">';\n\t\t\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\t\t\tprint '<td class=\"nowrap\"></td>';\n\t\t\t\t\tprint '<td class=\"center\">'.$langs->trans(\"Ref\").'</td>';\n\t\t\t\t\tprint '<td class=\"left\">'.$langs->trans(\"RefCustomer\").'</td>';\n\t\t\t\t\tprint '<td class=\"right\">'.$langs->trans(\"AmountHTShort\").'</td>';\n\t\t\t\t\tprint '<td class=\"left\">'.$langs->trans(\"Company\").'</td>';\n\t\t\t\t\tprint '</tr>';\n\t\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t\t$objp = $this->db->fetch_object($resqllist);\n\n\t\t\t\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\t\t\t\tprint '<td class=\"left\">';\n\t\t\t\t\t\tprint '<input type=\"radio\" name=\"idtolinkto\" id=\"'.$key.'_'.$objp->rowid.'\" value=\"'.$objp->rowid.'\">';\n\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t\tprint '<td class=\"center\"><label for=\"'.$key.'_'.$objp->rowid.'\">'.$objp->ref.'</label></td>';\n\t\t\t\t\t\tprint '<td>'.(!empty($objp->ref_client) ? $objp->ref_client : (!empty($objp->ref_supplier) ? $objp->ref_supplier : '')).'</td>';\n\t\t\t\t\t\tprint '<td class=\"right\">';\n\t\t\t\t\t\tif ($possiblelink['label'] == 'LinkToContract') {\n\t\t\t\t\t\t\t$form = new Form($this->db);\n\t\t\t\t\t\t\tprint $form->textwithpicto('', $langs->trans(\"InformationOnLinkToContract\")).' ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint '<span class=\"amount\">'.price($objp->total_ht).'</span>';\n\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t\tprint '<td>'.$objp->name.'</td>';\n\t\t\t\t\t\tprint '</tr>';\n\t\t\t\t\t\t$i++;\n\t\t\t\t\t}\n\t\t\t\t\tprint '</table>';\n\t\t\t\t\tprint '<div class=\"center\">';\n\t\t\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle marginleftonly marginrightonly\" value=\"'.$langs->trans('ToLink').'\">';\n\t\t\t\t\tif (empty($conf->use_javascript_ajax)) {\n\t\t\t\t\t\tprint '<input type=\"submit\" class=\"button button-cancel marginleftonly marginrightonly\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\"></div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<input type=\"submit\"; onclick=\"javascript:jQuery(\\'#'.$key.'list\\').toggle(); return false;\" class=\"button button-cancel marginleftonly marginrightonly\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\"></div>';\n\t\t\t\t\t}\n\t\t\t\t\tprint '</form>';\n\t\t\t\t\t$this->db->free($resqllist);\n\t\t\t\t} else {\n\t\t\t\t\tdol_print_error($this->db);\n\t\t\t\t}\n\t\t\t\tprint '</div>';\n\n\t\t\t\t//$linktoelem.=($linktoelem?' &nbsp; ':'');\n\t\t\t\tif ($num > 0 || !empty($conf->global->MAIN_LINK_BY_REF_IN_LINKTO)) {\n\t\t\t\t\t$linktoelemlist .= '<li><a href=\"#linkto'.$key.'\" class=\"linkto dropdowncloseonclick\" rel=\"'.$key.'\">'.$langs->trans($possiblelink['label']).' ('.$num.')</a></li>';\n\t\t\t\t\t// } else $linktoelem.=$langs->trans($possiblelink['label']);\n\t\t\t\t} else {\n\t\t\t\t\t$linktoelemlist .= '<li><span class=\"linktodisabled\">'.$langs->trans($possiblelink['label']).' (0)</span></li>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($linktoelemlist) {\n\t\t\t$linktoelem = '\n    \t\t<dl class=\"dropdown\" id=\"linktoobjectname\">\n    \t\t';\n\t\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t\t$linktoelem .= '<dt><a href=\"#linktoobjectname\"><span class=\"fas fa-link paddingrightonly\"></span>'.$langs->trans(\"LinkTo\").'...</a></dt>';\n\t\t\t}\n\t\t\t$linktoelem .= '<dd>\n    \t\t<div class=\"multiselectlinkto\">\n    \t\t<ul class=\"ulselectedfields\">'.$linktoelemlist.'\n    \t\t</ul>\n    \t\t</div>\n    \t\t</dd>\n    \t\t</dl>';\n\t\t} else {\n\t\t\t$linktoelem = '';\n\t\t}\n\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\tprint '<!-- Add js to show linkto box -->\n\t\t\t\t<script>\n\t\t\t\tjQuery(document).ready(function() {\n\t\t\t\t\tjQuery(\".linkto\").click(function() {\n\t\t\t\t\t\tconsole.log(\"We choose to show/hide links for rel=\"+jQuery(this).attr(\\'rel\\')+\" so #\"+jQuery(this).attr(\\'rel\\')+\"list\");\n\t\t\t\t\t    jQuery(\"#\"+jQuery(this).attr(\\'rel\\')+\"list\").toggle();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t</script>\n\t\t    ';\n\t\t}\n\n\t\treturn $linktoelem;\n\t}\n\n\t/**\n\t *\tReturn an html string with a select combo box to choose yes or no\n\t *\n\t *\t@param\tstring\t\t$htmlname\t\tName of html select field\n\t *\t@param\tstring\t\t$value\t\t\tPre-selected value\n\t *\t@param\tint\t\t\t$option\t\t\t0 return yes/no, 1 return 1/0\n\t *\t@param\tbool\t\t$disabled\t\ttrue or false\n\t *  @param\tint      \t$useempty\t\t1=Add empty line\n\t *  @param\tint\t\t\t$addjscombo\t\t1=Add js beautifier on combo box\n\t *  @param\tstring\t\t$morecss\t\tMore CSS\n\t *\t@return\tstring\t\t\t\t\t\tSee option\n\t */\n\tpublic function selectyesno($htmlname, $value = '', $option = 0, $disabled = false, $useempty = 0, $addjscombo = 0, $morecss = '')\n\t{\n\t\tglobal $langs;\n\n\t\t$yes = \"yes\";\n\t\t$no = \"no\";\n\t\tif ($option) {\n\t\t\t$yes = \"1\";\n\t\t\t$no = \"0\";\n\t\t}\n\n\t\t$disabled = ($disabled ? ' disabled' : '');\n\n\t\t$resultyesno = '<select class=\"flat width75'.($morecss ? ' '.$morecss : '').'\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\"'.$disabled.'>'.\"\\n\";\n\t\tif ($useempty) {\n\t\t\t$resultyesno .= '<option value=\"-1\"'.(($value < 0) ? ' selected' : '').'>&nbsp;</option>'.\"\\n\";\n\t\t}\n\t\tif ((\"$value\" == 'yes') || ($value == 1)) {\n\t\t\t$resultyesno .= '<option value=\"'.$yes.'\" selected>'.$langs->trans(\"Yes\").'</option>'.\"\\n\";\n\t\t\t$resultyesno .= '<option value=\"'.$no.'\">'.$langs->trans(\"No\").'</option>'.\"\\n\";\n\t\t} else {\n\t\t\t$selected = (($useempty && $value != '0' && $value != 'no') ? '' : ' selected');\n\t\t\t$resultyesno .= '<option value=\"'.$yes.'\">'.$langs->trans(\"Yes\").'</option>'.\"\\n\";\n\t\t\t$resultyesno .= '<option value=\"'.$no.'\"'.$selected.'>'.$langs->trans(\"No\").'</option>'.\"\\n\";\n\t\t}\n\t\t$resultyesno .= '</select>'.\"\\n\";\n\n\t\tif ($addjscombo) {\n\t\t\t$resultyesno .= ajax_combobox($htmlname);\n\t\t}\n\n\t\treturn $resultyesno;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return list of export templates\n\t *\n\t *  @param\tstring\t$selected          Id modele pre-selectionne\n\t *  @param  string\t$htmlname          Name of HTML select\n\t *  @param  string\t$type              Type of searched templates\n\t *  @param  int\t\t$useempty          Affiche valeur vide dans liste\n\t *  @return\tvoid\n\t */\n\tpublic function select_export_model($selected = '', $htmlname = 'exportmodelid', $type = '', $useempty = 0)\n\t{\n\t\t// phpcs:enable\n\t\t$sql = \"SELECT rowid, label\";\n\t\t$sql .= \" FROM \".$this->db->prefix().\"export_model\";\n\t\t$sql .= \" WHERE type = '\".$this->db->escape($type).\"'\";\n\t\t$sql .= \" ORDER BY rowid\";\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\tprint '<select class=\"flat\" id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t\tif ($useempty) {\n\t\t\t\tprint '<option value=\"-1\">&nbsp;</option>';\n\t\t\t}\n\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\tif ($selected == $obj->rowid) {\n\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>';\n\t\t\t\t} else {\n\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">';\n\t\t\t\t}\n\t\t\t\tprint $obj->label;\n\t\t\t\tprint '</option>';\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tprint \"</select>\";\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *    Return a HTML area with the reference of object and a navigation bar for a business object\n\t *    Note: To complete search with a particular filter on select, you can set $object->next_prev_filter set to define SQL criterias.\n\t *\n\t *    @param\tobject\t$object\t\t\tObject to show.\n\t *    @param\tstring\t$paramid   \t\tName of parameter to use to name the id into the URL next/previous link.\n\t *    @param\tstring\t$morehtml  \t\tMore html content to output just before the nav bar.\n\t *    @param\tint\t\t$shownav\t  \tShow Condition (navigation is shown if value is 1).\n\t *    @param\tstring\t$fieldid   \t\tName of field id into database to use for select next and previous (we make the select max and min on this field compared to $object->ref). Use 'none' to disable next/prev.\n\t *    @param\tstring\t$fieldref   \tName of field ref of object (object->ref) to show or 'none' to not show ref.\n\t *    @param\tstring\t$morehtmlref  \tMore html to show after ref.\n\t *    @param\tstring\t$moreparam  \tMore param to add in nav link url. Must start with '&...'.\n\t *\t  @param\tint\t\t$nodbprefix\t\tDo not include DB prefix to forge table name.\n\t *\t  @param\tstring\t$morehtmlleft\tMore html code to show before ref.\n\t *\t  @param\tstring\t$morehtmlstatus\tMore html code to show under navigation arrows (status place).\n\t *\t  @param\tstring\t$morehtmlright\tMore html code to show after ref.\n\t * \t  @return\tstring    \t\t\t\tPortion HTML with ref + navigation buttons\n\t */\n\tpublic function showrefnav($object, $paramid, $morehtml = '', $shownav = 1, $fieldid = 'rowid', $fieldref = 'ref', $morehtmlref = '', $moreparam = '', $nodbprefix = 0, $morehtmlleft = '', $morehtmlstatus = '', $morehtmlright = '')\n\t{\n\t\tglobal $conf, $langs, $hookmanager, $extralanguages;\n\n\t\t$ret = '';\n\t\tif (empty($fieldid)) {\n\t\t\t$fieldid = 'rowid';\n\t\t}\n\t\tif (empty($fieldref)) {\n\t\t\t$fieldref = 'ref';\n\t\t}\n\n\t\t// Preparing gender's display if there is one\n\t\t$addgendertxt = '';\n\t\tif (property_exists($object, 'gender') && !empty($object->gender)) {\n\t\t\t$addgendertxt = ' ';\n\t\t\tswitch ($object->gender) {\n\t\t\t\tcase 'man':\n\t\t\t\t\t$addgendertxt .= '<i class=\"fas fa-mars\"></i>';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'woman':\n\t\t\t\t\t$addgendertxt .= '<i class=\"fas fa-venus\"></i>';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'other':\n\t\t\t\t\t$addgendertxt .= '<i class=\"fas fa-genderless\"></i>';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t$addadmin = '';\n\t\tif (property_exists($object, 'admin')) {\n\t\t\tif (!empty($conf->multicompany->enabled) && !empty($object->admin) && empty($object->entity)) {\n\t\t\t\t$addadmin .= img_picto($langs->trans(\"SuperAdministratorDesc\"), \"redstar\", 'class=\"paddingleft\"');\n\t\t\t} elseif (!empty($object->admin)) {\n\t\t\t\t$addadmin .= img_picto($langs->trans(\"AdministratorDesc\"), \"star\", 'class=\"paddingleft\"');\n\t\t\t}\n\t\t}*/\n\n\t\t// Add where from hooks\n\t\tif (is_object($hookmanager)) {\n\t\t\t$parameters = array();\n\t\t\t$reshook = $hookmanager->executeHooks('printFieldListWhere', $parameters, $object); // Note that $action and $object may have been modified by hook\n\t\t\t$object->next_prev_filter .= $hookmanager->resPrint;\n\t\t}\n\t\t$previous_ref = $next_ref = '';\n\t\tif ($shownav) {\n\t\t\t//print \"paramid=$paramid,morehtml=$morehtml,shownav=$shownav,$fieldid,$fieldref,$morehtmlref,$moreparam\";\n\t\t\t$object->load_previous_next_ref((isset($object->next_prev_filter) ? $object->next_prev_filter : ''), $fieldid, $nodbprefix);\n\n\t\t\t$navurl = $_SERVER[\"PHP_SELF\"];\n\t\t\t// Special case for project/task page\n\t\t\tif ($paramid == 'project_ref') {\n\t\t\t\tif (preg_match('/\\/tasks\\/(task|contact|note|document)\\.php/', $navurl)) {     // TODO Remove this when nav with project_ref on task pages are ok\n\t\t\t\t\t$navurl = preg_replace('/\\/tasks\\/(task|contact|time|note|document)\\.php/', '/tasks.php', $navurl);\n\t\t\t\t\t$paramid = 'ref';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// accesskey is for Windows or Linux:  ALT + key for chrome, ALT + SHIFT + KEY for firefox\n\t\t\t// accesskey is for Mac:               CTRL + key for all browsers\n\t\t\t$stringforfirstkey = $langs->trans(\"KeyboardShortcut\");\n\t\t\tif ($conf->browser->name == 'chrome') {\n\t\t\t\t$stringforfirstkey .= ' ALT +';\n\t\t\t} elseif ($conf->browser->name == 'firefox') {\n\t\t\t\t$stringforfirstkey .= ' ALT + SHIFT +';\n\t\t\t} else {\n\t\t\t\t$stringforfirstkey .= ' CTL +';\n\t\t\t}\n\n\t\t\t$previous_ref = $object->ref_previous ? '<a accesskey=\"p\" title=\"'.$stringforfirstkey.' p\" class=\"classfortooltip\" href=\"'.$navurl.'?'.$paramid.'='.urlencode($object->ref_previous).$moreparam.'\"><i class=\"fa fa-chevron-left\"></i></a>' : '<span class=\"inactive\"><i class=\"fa fa-chevron-left opacitymedium\"></i></span>';\n\t\t\t$next_ref     = $object->ref_next ? '<a accesskey=\"n\" title=\"'.$stringforfirstkey.' n\" class=\"classfortooltip\" href=\"'.$navurl.'?'.$paramid.'='.urlencode($object->ref_next).$moreparam.'\"><i class=\"fa fa-chevron-right\"></i></a>' : '<span class=\"inactive\"><i class=\"fa fa-chevron-right opacitymedium\"></i></span>';\n\t\t}\n\n\t\t//print \"xx\".$previous_ref.\"x\".$next_ref;\n\t\t$ret .= '<!-- Start banner content --><div style=\"vertical-align: middle\">';\n\n\t\t// Right part of banner\n\t\tif ($morehtmlright) {\n\t\t\t$ret .= '<div class=\"inline-block floatleft\">'.$morehtmlright.'</div>';\n\t\t}\n\n\t\tif ($previous_ref || $next_ref || $morehtml) {\n\t\t\t$ret .= '<div class=\"pagination paginationref\"><ul class=\"right\">';\n\t\t}\n\t\tif ($morehtml) {\n\t\t\t$ret .= '<li class=\"noborder litext'.(($shownav && $previous_ref && $next_ref) ? ' clearbothonsmartphone' : '').'\">'.$morehtml.'</li>';\n\t\t}\n\t\tif ($shownav && ($previous_ref || $next_ref)) {\n\t\t\t$ret .= '<li class=\"pagination\">'.$previous_ref.'</li>';\n\t\t\t$ret .= '<li class=\"pagination\">'.$next_ref.'</li>';\n\t\t}\n\t\tif ($previous_ref || $next_ref || $morehtml) {\n\t\t\t$ret .= '</ul></div>';\n\t\t}\n\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('moreHtmlStatus', $parameters, $object); // Note that $action and $object may have been modified by hook\n\t\tif (empty($reshook)) {\n\t\t\t$morehtmlstatus .= $hookmanager->resPrint;\n\t\t} else {\n\t\t\t$morehtmlstatus = $hookmanager->resPrint;\n\t\t}\n\t\tif ($morehtmlstatus) {\n\t\t\t$ret .= '<div class=\"statusref\">'.$morehtmlstatus.'</div>';\n\t\t}\n\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('moreHtmlRef', $parameters, $object); // Note that $action and $object may have been modified by hook\n\t\tif (empty($reshook)) {\n\t\t\t$morehtmlref .= $hookmanager->resPrint;\n\t\t} elseif ($reshook > 0) {\n\t\t\t$morehtmlref = $hookmanager->resPrint;\n\t\t}\n\n\t\t// Left part of banner\n\t\tif ($morehtmlleft) {\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\t$ret .= '<!-- morehtmlleft --><div class=\"floatleft\">'.$morehtmlleft.'</div>'; // class=\"center\" to have photo in middle\n\t\t\t} else {\n\t\t\t\t$ret .= '<!-- morehtmlleft --><div class=\"inline-block floatleft\">'.$morehtmlleft.'</div>';\n\t\t\t}\n\t\t}\n\n\t\t//if ($conf->browser->layout == 'phone') $ret.='<div class=\"clearboth\"></div>';\n\t\t$ret .= '<div class=\"inline-block floatleft valignmiddle maxwidth750 marginbottomonly refid'.(($shownav && ($previous_ref || $next_ref)) ? ' refidpadding' : '').'\">';\n\n\t\t// For thirdparty, contact, user, member, the ref is the id, so we show something else\n\t\tif ($object->element == 'societe') {\n\t\t\t$ret .= dol_htmlentities($object->name);\n\n\t\t\t// List of extra languages\n\t\t\t$arrayoflangcode = array();\n\t\t\tif (!empty($conf->global->PDF_USE_ALSO_LANGUAGE_CODE)) {\n\t\t\t\t$arrayoflangcode[] = $conf->global->PDF_USE_ALSO_LANGUAGE_CODE;\n\t\t\t}\n\n\t\t\tif (is_array($arrayoflangcode) && count($arrayoflangcode)) {\n\t\t\t\tif (!is_object($extralanguages)) {\n\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/extralanguages.class.php';\n\t\t\t\t\t$extralanguages = new ExtraLanguages($this->db);\n\t\t\t\t}\n\t\t\t\t$extralanguages->fetch_name_extralanguages('societe');\n\n\t\t\t\tif (!empty($extralanguages->attributes['societe']['name'])) {\n\t\t\t\t\t$object->fetchValuesForExtraLanguages();\n\n\t\t\t\t\t$htmltext = '';\n\t\t\t\t\t// If there is extra languages\n\t\t\t\t\tforeach ($arrayoflangcode as $extralangcode) {\n\t\t\t\t\t\t$htmltext .= picto_from_langcode($extralangcode, 'class=\"pictoforlang paddingright\"');\n\t\t\t\t\t\tif ($object->array_languages['name'][$extralangcode]) {\n\t\t\t\t\t\t\t$htmltext .= $object->array_languages['name'][$extralangcode];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$htmltext .= '<span class=\"opacitymedium\">'.$langs->trans(\"SwitchInEditModeToAddTranslation\").'</span>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$ret .= '<!-- Show translations of name -->'.\"\\n\";\n\t\t\t\t\t$ret .= $this->textwithpicto('', $htmltext, -1, 'language', 'opacitymedium paddingleft');\n\t\t\t\t}\n\t\t\t}\n\t\t} elseif ($object->element == 'member') {\n\t\t\t$ret .= $object->ref.'<br>';\n\t\t\t$fullname = $object->getFullName($langs);\n\t\t\tif ($object->morphy == 'mor' && $object->societe) {\n\t\t\t\t$ret .= dol_htmlentities($object->societe).((!empty($fullname) && $object->societe != $fullname) ? ' ('.dol_htmlentities($fullname).$addgendertxt.')' : '');\n\t\t\t} else {\n\t\t\t\t$ret .= dol_htmlentities($fullname).$addgendertxt.((!empty($object->societe) && $object->societe != $fullname) ? ' ('.dol_htmlentities($object->societe).')' : '');\n\t\t\t}\n\t\t} elseif (in_array($object->element, array('contact', 'user', 'usergroup'))) {\n\t\t\t$ret .= dol_htmlentities($object->getFullName($langs));\n\t\t} elseif (in_array($object->element, array('action', 'agenda'))) {\n\t\t\t$ret .= $object->ref.'<br>'.$object->label;\n\t\t} elseif (in_array($object->element, array('adherent_type'))) {\n\t\t\t$ret .= $object->label;\n\t\t} elseif ($object->element == 'ecm_directories') {\n\t\t\t$ret .= '';\n\t\t} elseif ($fieldref != 'none') {\n\t\t\t$ret .= dol_htmlentities($object->$fieldref);\n\t\t}\n\n\t\tif ($morehtmlref) {\n\t\t\t// don't add a additional space, when \"$morehtmlref\" starts with a HTML div tag\n\t\t\tif (substr($morehtmlref, 0, 4) != '<div') {\n\t\t\t\t$ret .= ' ';\n\t\t\t}\n\n\t\t\t$ret .= $morehtmlref;\n\t\t}\n\n\t\t$ret .= '</div>';\n\n\t\t$ret .= '</div><!-- End banner content -->';\n\n\t\treturn $ret;\n\t}\n\n\n\t/**\n\t *  Return HTML code to output a barcode\n\t *\n\t *  @param\tObject\t$object\t\t\tObject containing data to retrieve file name\n\t * \t@param\tint\t\t$width\t\t\tWidth of photo\n\t * \t@param\tstring\t$morecss\t\tMore CSS on img of barcode\n\t * \t@return string    \t\t\t\tHTML code to output barcode\n\t */\n\tpublic function showbarcode(&$object, $width = 100, $morecss = '')\n\t{\n\t\tglobal $conf;\n\n\t\t//Check if barcode is filled in the card\n\t\tif (empty($object->barcode)) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Complete object if not complete\n\t\tif (empty($object->barcode_type_code) || empty($object->barcode_type_coder)) {\n\t\t\t$result = $object->fetch_barcode();\n\t\t\t//Check if fetch_barcode() failed\n\t\t\tif ($result < 1) {\n\t\t\t\treturn '<!-- ErrorFetchBarcode -->';\n\t\t\t}\n\t\t}\n\n\t\t// Barcode image\n\t\t$url = DOL_URL_ROOT.'/viewimage.php?modulepart=barcode&generator='.urlencode($object->barcode_type_coder).'&code='.urlencode($object->barcode).'&encoding='.urlencode($object->barcode_type_code);\n\t\t$out = '<!-- url barcode = '.$url.' -->';\n\t\t$out .= '<img src=\"'.$url.'\"'.($morecss ? ' class=\"'.$morecss.'\"' : '').'>';\n\t\treturn $out;\n\t}\n\n\t/**\n\t *    \tReturn HTML code to output a photo\n\t *\n\t *    \t@param\tstring\t\t$modulepart\t\t\tKey to define module concerned ('societe', 'userphoto', 'memberphoto')\n\t *     \t@param  object\t\t$object\t\t\t\tObject containing data to retrieve file name\n\t * \t\t@param\tint\t\t\t$width\t\t\t\tWidth of photo\n\t * \t\t@param\tint\t\t\t$height\t\t\t\tHeight of photo (auto if 0)\n\t * \t\t@param\tint\t\t\t$caneditfield\t\tAdd edit fields\n\t * \t\t@param\tstring\t\t$cssclass\t\t\tCSS name to use on img for photo\n\t * \t\t@param\tstring\t\t$imagesize\t\t    'mini', 'small' or '' (original)\n\t *      @param  int         $addlinktofullsize  Add link to fullsize image\n\t *      @param  int         $cache              1=Accept to use image in cache\n\t *      @param\tstring\t\t$forcecapture\t\t'', 'user' or 'environment'. Force parameter capture on HTML input file element to ask a smartphone to allow to open camera to take photo. Auto if ''.\n\t *      @param\tint\t\t\t$noexternsourceoverwrite\tNo overwrite image with extern source (like 'gravatar' or other module)\n\t * \t  \t@return string    \t\t\t\t\t\tHTML code to output photo\n\t */\n\tpublic static function showphoto($modulepart, $object, $width = 100, $height = 0, $caneditfield = 0, $cssclass = 'photowithmargin', $imagesize = '', $addlinktofullsize = 1, $cache = 0, $forcecapture = '', $noexternsourceoverwrite = 0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$entity = (!empty($object->entity) ? $object->entity : $conf->entity);\n\t\t$id = (!empty($object->id) ? $object->id : $object->rowid);\n\n\t\t$ret = '';\n\t\t$dir = '';\n\t\t$file = '';\n\t\t$originalfile = '';\n\t\t$altfile = '';\n\t\t$email = '';\n\t\t$capture = '';\n\t\tif ($modulepart == 'societe') {\n\t\t\t$dir = $conf->societe->multidir_output[$entity];\n\t\t\tif (!empty($object->logo)) {\n\t\t\t\tif (dolIsAllowedForPreview($object->logo)) {\n\t\t\t\t\tif ((string) $imagesize == 'mini') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'thirdparty').'logos/'.getImageFileNameForSize($object->logo, '_mini'); // getImageFileNameForSize include the thumbs\n\t\t\t\t\t} elseif ((string) $imagesize == 'small') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'thirdparty').'logos/'.getImageFileNameForSize($object->logo, '_small');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'thirdparty').'logos/'.$object->logo;\n\t\t\t\t\t}\n\t\t\t\t\t$originalfile = get_exdir(0, 0, 0, 0, $object, 'thirdparty').'logos/'.$object->logo;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$email = $object->email;\n\t\t} elseif ($modulepart == 'contact')\t{\n\t\t\t$dir = $conf->societe->multidir_output[$entity].'/contact';\n\t\t\tif (!empty($object->photo)) {\n\t\t\t\tif (dolIsAllowedForPreview($object->photo)) {\n\t\t\t\t\tif ((string) $imagesize == 'mini') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'contact').'photos/'.getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\t\t} elseif ((string) $imagesize == 'small') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'contact').'photos/'.getImageFileNameForSize($object->photo, '_small');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'contact').'photos/'.$object->photo;\n\t\t\t\t\t}\n\t\t\t\t\t$originalfile = get_exdir(0, 0, 0, 0, $object, 'contact').'photos/'.$object->photo;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$email = $object->email;\n\t\t\t$capture = 'user';\n\t\t} elseif ($modulepart == 'userphoto') {\n\t\t\t$dir = $conf->user->dir_output;\n\t\t\tif (!empty($object->photo)) {\n\t\t\t\tif (dolIsAllowedForPreview($object->photo)) {\n\t\t\t\t\tif ((string) $imagesize == 'mini') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'user').'photos/'.getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\t\t} elseif ((string) $imagesize == 'small') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'user').'photos/'.getImageFileNameForSize($object->photo, '_small');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'user').'photos/'.$object->photo;\n\t\t\t\t\t}\n\t\t\t\t\t$originalfile = get_exdir(0, 0, 0, 0, $object, 'user').'photos/'.$object->photo;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!empty($conf->global->MAIN_OLD_IMAGE_LINKS)) {\n\t\t\t\t$altfile = $object->id.\".jpg\"; // For backward compatibility\n\t\t\t}\n\t\t\t$email = $object->email;\n\t\t\t$capture = 'user';\n\t\t} elseif ($modulepart == 'memberphoto')\t{\n\t\t\t$dir = $conf->adherent->dir_output;\n\t\t\tif (!empty($object->photo)) {\n\t\t\t\tif (dolIsAllowedForPreview($object->photo)) {\n\t\t\t\t\tif ((string) $imagesize == 'mini') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\t\t} elseif ((string) $imagesize == 'small') {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.getImageFileNameForSize($object->photo, '_small');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.$object->photo;\n\t\t\t\t\t}\n\t\t\t\t\t$originalfile = get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.$object->photo;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!empty($conf->global->MAIN_OLD_IMAGE_LINKS)) {\n\t\t\t\t$altfile = $object->id.\".jpg\"; // For backward compatibility\n\t\t\t}\n\t\t\t$email = $object->email;\n\t\t\t$capture = 'user';\n\t\t} else {\n\t\t\t// Generic case to show photos\n\t\t\t$dir = $conf->$modulepart->dir_output;\n\t\t\tif (!empty($object->photo)) {\n\t\t\t\tif (dolIsAllowedForPreview($object->photo)) {\n\t\t\t\t\tif ((string) $imagesize == 'mini') {\n\t\t\t\t\t\t$file = get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\t\t} elseif ((string) $imagesize == 'small') {\n\t\t\t\t\t\t$file = get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.getImageFileNameForSize($object->photo, '_small');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$file = get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.$object->photo;\n\t\t\t\t\t}\n\t\t\t\t\t$originalfile = get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.$object->photo;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!empty($conf->global->MAIN_OLD_IMAGE_LINKS)) {\n\t\t\t\t$altfile = $object->id.\".jpg\"; // For backward compatibility\n\t\t\t}\n\t\t\t$email = $object->email;\n\t\t}\n\n\t\tif ($forcecapture) {\n\t\t\t$capture = $forcecapture;\n\t\t}\n\n\t\tif ($dir) {\n\t\t\tif ($file && file_exists($dir.\"/\".$file)) {\n\t\t\t\tif ($addlinktofullsize) {\n\t\t\t\t\t$urladvanced = getAdvancedPreviewUrl($modulepart, $originalfile, 0, '&entity='.$entity);\n\t\t\t\t\tif ($urladvanced) {\n\t\t\t\t\t\t$ret .= '<a href=\"'.$urladvanced.'\">';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$ret .= '<a href=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($originalfile).'&cache='.$cache.'\">';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$ret .= '<img alt=\"Photo\" class=\"photo'.$modulepart.($cssclass ? ' '.$cssclass : '').' photologo'.(preg_replace('/[^a-z]/i', '_', $file)).'\" '.($width ? ' width=\"'.$width.'\"' : '').($height ? ' height=\"'.$height.'\"' : '').' src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($file).'&cache='.$cache.'\">';\n\t\t\t\tif ($addlinktofullsize) {\n\t\t\t\t\t$ret .= '</a>';\n\t\t\t\t}\n\t\t\t} elseif ($altfile && file_exists($dir.\"/\".$altfile)) {\n\t\t\t\tif ($addlinktofullsize) {\n\t\t\t\t\t$urladvanced = getAdvancedPreviewUrl($modulepart, $originalfile, 0, '&entity='.$entity);\n\t\t\t\t\tif ($urladvanced) {\n\t\t\t\t\t\t$ret .= '<a href=\"'.$urladvanced.'\">';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$ret .= '<a href=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($originalfile).'&cache='.$cache.'\">';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$ret .= '<img class=\"photo'.$modulepart.($cssclass ? ' '.$cssclass : '').'\" alt=\"Photo alt\" id=\"photologo'.(preg_replace('/[^a-z]/i', '_', $file)).'\" class=\"'.$cssclass.'\" '.($width ? ' width=\"'.$width.'\"' : '').($height ? ' height=\"'.$height.'\"' : '').' src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($altfile).'&cache='.$cache.'\">';\n\t\t\t\tif ($addlinktofullsize) {\n\t\t\t\t\t$ret .= '</a>';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$nophoto = '/public/theme/common/nophoto.png';\n\t\t\t\t$defaultimg = 'identicon';\t\t// For gravatar\n\t\t\t\tif (in_array($modulepart, array('societe', 'userphoto', 'contact', 'memberphoto'))) {\t// For modules that need a special image when photo not found\n\t\t\t\t\tif ($modulepart == 'societe' || ($modulepart == 'memberphoto' && strpos($object->morphy, 'mor')) !== false) {\n\t\t\t\t\t\t$nophoto = 'company';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$nophoto = '/public/theme/common/user_anonymous.png';\n\t\t\t\t\t\tif (!empty($object->gender) && $object->gender == 'man') {\n\t\t\t\t\t\t\t$nophoto = '/public/theme/common/user_man.png';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!empty($object->gender) && $object->gender == 'woman') {\n\t\t\t\t\t\t\t$nophoto = '/public/theme/common/user_woman.png';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!empty($conf->gravatar->enabled) && $email && empty($noexternsourceoverwrite)) {\n\t\t\t\t\t// see https://gravatar.com/site/implement/images/php/\n\t\t\t\t\t$ret .= '<!-- Put link to gravatar -->';\n\t\t\t\t\t$ret .= '<img class=\"photo'.$modulepart.($cssclass ? ' '.$cssclass : '').'\" alt=\"Gravatar avatar\" title=\"'.$email.' Gravatar avatar\" '.($width ? ' width=\"'.$width.'\"' : '').($height ? ' height=\"'.$height.'\"' : '').' src=\"https://www.gravatar.com/avatar/'.md5(strtolower(trim($email))).'?s='.$width.'&d='.$defaultimg.'\">'; // gravatar need md5 hash\n\t\t\t\t} else {\n\t\t\t\t\tif ($nophoto == 'company') {\n\t\t\t\t\t\t$ret .= '<div class=\"photo'.$modulepart.($cssclass ? ' '.$cssclass : '').'\" alt=\"No photo\" '.($width ? ' width=\"'.$width.'\"' : '').($height ? ' height=\"'.$height.'\"' : '').'\">'.img_picto('', 'company').'</div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$ret .= '<img class=\"photo'.$modulepart.($cssclass ? ' '.$cssclass : '').'\" alt=\"No photo\" '.($width ? ' width=\"'.$width.'\"' : '').($height ? ' height=\"'.$height.'\"' : '').' src=\"'.DOL_URL_ROOT.$nophoto.'\">';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($caneditfield) {\n\t\t\t\tif ($object->photo) {\n\t\t\t\t\t$ret .= \"<br>\\n\";\n\t\t\t\t}\n\t\t\t\t$ret .= '<table class=\"nobordernopadding centpercent\">';\n\t\t\t\tif ($object->photo) {\n\t\t\t\t\t$ret .= '<tr><td><input type=\"checkbox\" class=\"flat photodelete\" name=\"deletephoto\" id=\"photodelete\"> <label for=\"photodelete\">'.$langs->trans(\"Delete\").'</label><br><br></td></tr>';\n\t\t\t\t}\n\t\t\t\t$ret .= '<tr><td class=\"tdoverflow\"><input type=\"file\" class=\"flat maxwidth200onsmartphone\" name=\"photo\" id=\"photoinput\" accept=\"image/*\"'.($capture ? ' capture=\"'.$capture.'\"' : '').'></td></tr>';\n\t\t\t\t$ret .= '</table>';\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error('', 'Call of showphoto with wrong parameters modulepart='.$modulepart);\n\t\t}\n\n\t\treturn $ret;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tReturn select list of groups\n\t *\n\t *  @param\tstring\t$selected       Id group preselected\n\t *  @param  string\t$htmlname       Field name in form\n\t *  @param  int\t\t$show_empty     0=liste sans valeur nulle, 1=ajoute valeur inconnue\n\t *  @param  string\t$exclude        Array list of groups id to exclude\n\t * \t@param\tint\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  string\t$include        Array list of groups id to include\n\t * \t@param\tint\t\t$enableonly\t\tArray list of groups id to be enabled. All other must be disabled\n\t * \t@param\tstring\t$force_entity\t'0' or Ids of environment to force\n\t * \t@param\tbool\t$multiple\t\tadd [] in the name of element and add 'multiple' attribut (not working with ajax_autocompleter)\n\t *  @param  string\t$morecss\t\tMore css to add to html component\n\t *  @return\tstring\n\t *  @see select_dolusers()\n\t */\n\tpublic function select_dolgroups($selected = '', $htmlname = 'groupid', $show_empty = 0, $exclude = '', $disabled = 0, $include = '', $enableonly = '', $force_entity = '0', $multiple = false, $morecss = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $user, $langs;\n\n\t\t// Permettre l'exclusion de groupes\n\t\tif (is_array($exclude)) {\n\t\t\t$excludeGroups = implode(\",\", $exclude);\n\t\t}\n\t\t// Permettre l'inclusion de groupes\n\t\tif (is_array($include)) {\n\t\t\t$includeGroups = implode(\",\", $include);\n\t\t}\n\n\t\tif (!is_array($selected)) {\n\t\t\t$selected = array($selected);\n\t\t}\n\n\t\t$out = '';\n\n\t\t// On recherche les groupes\n\t\t$sql = \"SELECT ug.rowid, ug.nom as name\";\n\t\tif (!empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && !$user->entity) {\n\t\t\t$sql .= \", e.label\";\n\t\t}\n\t\t$sql .= \" FROM \".$this->db->prefix().\"usergroup as ug \";\n\t\tif (!empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && !$user->entity) {\n\t\t\t$sql .= \" LEFT JOIN \".$this->db->prefix().\"entity as e ON e.rowid=ug.entity\";\n\t\t\tif ($force_entity) {\n\t\t\t\t$sql .= \" WHERE ug.entity IN (0, \".$force_entity.\")\";\n\t\t\t} else {\n\t\t\t\t$sql .= \" WHERE ug.entity IS NOT NULL\";\n\t\t\t}\n\t\t} else {\n\t\t\t$sql .= \" WHERE ug.entity IN (0, \".$conf->entity.\")\";\n\t\t}\n\t\tif (is_array($exclude) && $excludeGroups) {\n\t\t\t$sql .= \" AND ug.rowid NOT IN (\".$this->db->sanitize($excludeGroups).\")\";\n\t\t}\n\t\tif (is_array($include) && $includeGroups) {\n\t\t\t$sql .= \" AND ug.rowid IN (\".$this->db->sanitize($includeGroups).\")\";\n\t\t}\n\t\t$sql .= \" ORDER BY ug.nom ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_dolgroups\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t// Enhance with select2\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t$out .= ajax_combobox($htmlname);\n\n\t\t\t$out .= '<select class=\"flat minwidth200'.($morecss ? ' '.$morecss : '').'\" id=\"'.$htmlname.'\" name=\"'.$htmlname.($multiple ? '[]' : '').'\" '.($multiple ? 'multiple' : '').' '.($disabled ? ' disabled' : '').'>';\n\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\tif ($show_empty && !$multiple) {\n\t\t\t\t\t$out .= '<option value=\"-1\"'.(in_array(-1, $selected) ? ' selected' : '').'>&nbsp;</option>'.\"\\n\";\n\t\t\t\t}\n\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$disableline = 0;\n\t\t\t\t\tif (is_array($enableonly) && count($enableonly) && !in_array($obj->rowid, $enableonly)) {\n\t\t\t\t\t\t$disableline = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\tif ($disableline) {\n\t\t\t\t\t\t$out .= ' disabled';\n\t\t\t\t\t}\n\t\t\t\t\tif ((is_object($selected[0]) && $selected[0]->id == $obj->rowid) || (!is_object($selected[0]) && in_array($obj->rowid, $selected))) {\n\t\t\t\t\t\t$out .= ' selected';\n\t\t\t\t\t}\n\t\t\t\t\t$out .= '>';\n\n\t\t\t\t\t$out .= $obj->name;\n\t\t\t\t\tif (!empty($conf->multicompany->enabled) && empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE) && $conf->entity == 1) {\n\t\t\t\t\t\t$out .= \" (\".$obj->label.\")\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$out .= '</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($show_empty) {\n\t\t\t\t\t$out .= '<option value=\"-1\"'.(in_array(-1, $selected) ? ' selected' : '').'></option>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\t$out .= '<option value=\"\" disabled>'.$langs->trans(\"NoUserGroupDefined\").'</option>';\n\t\t\t}\n\t\t\t$out .= '</select>';\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tReturn HTML to show the search and clear seach button\n\t *\n\t *  @return\tstring\n\t */\n\tpublic function showFilterButtons()\n\t{\n\t\t$out = '<div class=\"nowraponall\">';\n\t\t$out .= '<button type=\"submit\" class=\"liste_titre button_search reposition\" name=\"button_search_x\" value=\"x\"><span class=\"fa fa-search\"></span></button>';\n\t\t$out .= '<button type=\"submit\" class=\"liste_titre button_removefilter reposition\" name=\"button_removefilter_x\" value=\"x\"><span class=\"fa fa-remove\"></span></button>';\n\t\t$out .= '</div>';\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tReturn HTML to show the search and clear search button\n\t *\n\t *  @param  string  $cssclass                  CSS class\n\t *  @param  int     $calljsfunction            0=default. 1=call function initCheckForSelect() after changing status of checkboxes\n\t *  @param  string  $massactionname            Mass action button name that will launch an action on the selected items\n\t *  @return\tstring\n\t */\n\tpublic function showCheckAddButtons($cssclass = 'checkforaction', $calljsfunction = 0, $massactionname = \"massaction\")\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$out = '';\n\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t$out .= '<div class=\"inline-block checkallactions\"><input type=\"checkbox\" id=\"'.$cssclass.'s\" name=\"'.$cssclass.'s\" class=\"checkallactions\"></div>';\n\t\t}\n\t\t$out .= '<script>\n            $(document).ready(function() {\n                $(\"#' . $cssclass.'s\").click(function() {\n                    if($(this).is(\\':checked\\')){\n                        console.log(\"We check all '.$cssclass.' and trigger the change method\");\n                \t\t$(\".'.$cssclass.'\").prop(\\'checked\\', true).trigger(\\'change\\');\n                    }\n                    else\n                    {\n                        console.log(\"We uncheck all\");\n                \t\t$(\".'.$cssclass.'\").prop(\\'checked\\', false).trigger(\\'change\\');\n                    }'.\"\\n\";\n\t\tif ($calljsfunction) {\n\t\t\t$out .= 'if (typeof initCheckForSelect == \\'function\\') { initCheckForSelect(0, \"'.$massactionname.'\", \"'.$cssclass.'\"); } else { console.log(\"No function initCheckForSelect found. Call won\\'t be done.\"); }';\n\t\t}\n\t\t$out .= '         });\n        \t        $(\".' . $cssclass.'\").change(function() {\n\t\t\t\t\t$(this).closest(\"tr\").toggleClass(\"highlight\", this.checked);\n\t\t\t\t});\n\t\t \t});\n    \t</script>';\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tReturn HTML to show the search and clear seach button\n\t *\n\t *  @param\tint  \t$addcheckuncheckall        Add the check all/uncheck all checkbox (use javascript) and code to manage this\n\t *  @param  string  $cssclass                  CSS class\n\t *  @param  int     $calljsfunction            0=default. 1=call function initCheckForSelect() after changing status of checkboxes\n\t *  @param  string  $massactionname            Mass action name\n\t *  @return\tstring\n\t */\n\tpublic function showFilterAndCheckAddButtons($addcheckuncheckall = 0, $cssclass = 'checkforaction', $calljsfunction = 0, $massactionname = \"massaction\")\n\t{\n\t\t$out = $this->showFilterButtons();\n\t\tif ($addcheckuncheckall) {\n\t\t\t$out .= $this->showCheckAddButtons($cssclass, $calljsfunction, $massactionname);\n\t\t}\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Return HTML to show the select of expense categories\n\t *\n\t * @param\tstring\t$selected              preselected category\n\t * @param\tstring\t$htmlname              name of HTML select list\n\t * @param\tinteger\t$useempty              1=Add empty line\n\t * @param\tarray\t$excludeid             id to exclude\n\t * @param\tstring\t$target                htmlname of target select to bind event\n\t * @param\tint\t\t$default_selected      default category to select if fk_c_type_fees change = EX_KME\n\t * @param\tarray\t$params                param to give\n\t * @param\tint\t\t$info_admin\t\t\t   Show the tooltip help picto to setup list\n\t * @return\tstring\n\t */\n\tpublic function selectExpenseCategories($selected = '', $htmlname = 'fk_c_exp_tax_cat', $useempty = 0, $excludeid = array(), $target = '', $default_selected = 0, $params = array(), $info_admin = 1)\n\t{\n\t\tglobal $langs, $user;\n\n\t\t$out = '';\n\t\t$sql = \"SELECT rowid, label FROM \".$this->db->prefix().\"c_exp_tax_cat WHERE active = 1\";\n\t\t$sql .= \" AND entity IN (0,\".getEntity('exp_tax_cat').\")\";\n\t\tif (!empty($excludeid)) {\n\t\t\t$sql .= \" AND rowid NOT IN (\".$this->db->sanitize(implode(',', $excludeid)).\")\";\n\t\t}\n\t\t$sql .= \" ORDER BY label\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$out = '<select id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\" class=\"'.$htmlname.' flat minwidth75imp maxwidth200\">';\n\t\t\tif ($useempty) {\n\t\t\t\t$out .= '<option value=\"0\">&nbsp;</option>';\n\t\t\t}\n\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$out .= '<option '.($selected == $obj->rowid ? 'selected=\"selected\"' : '').' value=\"'.$obj->rowid.'\">'.$langs->trans($obj->label).'</option>';\n\t\t\t}\n\t\t\t$out .= '</select>';\n\t\t\t$out .= ajax_combobox('select_'.$htmlname);\n\n\t\t\tif (!empty($htmlname) && $user->admin && $info_admin) {\n\t\t\t\t$out .= ' '.info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t\t}\n\n\t\t\tif (!empty($target)) {\n\t\t\t\t$sql = \"SELECT c.id FROM \".$this->db->prefix().\"c_type_fees as c WHERE c.code = 'EX_KME' AND c.active = 1\";\n\t\t\t\t$resql = $this->db->query($sql);\n\t\t\t\tif ($resql) {\n\t\t\t\t\tif ($this->db->num_rows($resql) > 0) {\n\t\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t\t$out .= '<script>\n\t\t\t\t\t\t\t$(function() {\n\t\t\t\t\t\t\t\t$(\"select[name='.$target.']\").on(\"change\", function() {\n\t\t\t\t\t\t\t\t\tvar current_val = $(this).val();\n\t\t\t\t\t\t\t\t\tif (current_val == '.$obj->id.') {';\n\t\t\t\t\t\tif (!empty($default_selected) || !empty($selected)) {\n\t\t\t\t\t\t\t$out .= '$(\"select[name='.$htmlname.']\").val(\"'.($default_selected > 0 ? $default_selected : $selected).'\");';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$out .= '\n\t\t\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").change();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").change(function() {\n\n\t\t\t\t\t\t\t\t\tif ($(\"select[name='.$target.']\").val() == '.$obj->id.') {\n\t\t\t\t\t\t\t\t\t\t// get price of kilometer to fill the unit price\n\t\t\t\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\t\t\t\t\t\tdataType: \"json\",\n\t\t\t\t\t\t\t\t\t\t\tdata: { fk_c_exp_tax_cat: $(this).val(), token: \\''.currentToken().'\\' },\n\t\t\t\t\t\t\t\t\t\t\turl: \"'.(DOL_URL_ROOT.'/expensereport/ajax/ajaxik.php?'.$params).'\",\n\t\t\t\t\t\t\t\t\t\t}).done(function( data, textStatus, jqXHR ) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t\t\t\t\t\tif (typeof data.up != \"undefined\") {\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"input[name=value_unit]\").val(data.up);\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").attr(\"title\", data.title);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"input[name=value_unit]\").val(\"\");\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").attr(\"title\", \"\");\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t</script>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Return HTML to show the select ranges of expense range\n\t *\n\t * @param\tstring\t$selected    preselected category\n\t * @param\tstring\t$htmlname    name of HTML select list\n\t * @param\tinteger\t$useempty    1=Add empty line\n\t * @return\tstring\n\t */\n\tpublic function selectExpenseRanges($selected = '', $htmlname = 'fk_range', $useempty = 0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$out = '';\n\t\t$sql = \"SELECT rowid, range_ik FROM \".$this->db->prefix().\"c_exp_tax_range\";\n\t\t$sql .= \" WHERE entity = \".$conf->entity.\" AND active = 1\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$out = '<select id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\" class=\"'.$htmlname.' flat minwidth75imp\">';\n\t\t\tif ($useempty) {\n\t\t\t\t$out .= '<option value=\"0\"></option>';\n\t\t\t}\n\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$out .= '<option '.($selected == $obj->rowid ? 'selected=\"selected\"' : '').' value=\"'.$obj->rowid.'\">'.price($obj->range_ik, 0, $langs, 1, 0).'</option>';\n\t\t\t}\n\t\t\t$out .= '</select>';\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Return HTML to show a select of expense\n\t *\n\t * @param\tstring\t$selected    preselected category\n\t * @param\tstring\t$htmlname    name of HTML select list\n\t * @param\tinteger\t$useempty    1=Add empty choice\n\t * @param\tinteger\t$allchoice   1=Add all choice\n\t * @param\tinteger\t$useid       0=use 'code' as key, 1=use 'id' as key\n\t * @return\tstring\n\t */\n\tpublic function selectExpense($selected = '', $htmlname = 'fk_c_type_fees', $useempty = 0, $allchoice = 1, $useid = 0)\n\t{\n\t\tglobal $langs;\n\n\t\t$out = '';\n\t\t$sql = \"SELECT id, code, label FROM \".$this->db->prefix().\"c_type_fees\";\n\t\t$sql .= \" WHERE active = 1\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$out = '<select id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\" class=\"'.$htmlname.' flat minwidth75imp\">';\n\t\t\tif ($useempty) {\n\t\t\t\t$out .= '<option value=\"0\"></option>';\n\t\t\t}\n\t\t\tif ($allchoice) {\n\t\t\t\t$out .= '<option value=\"-1\">'.$langs->trans('AllExpenseReport').'</option>';\n\t\t\t}\n\n\t\t\t$field = 'code';\n\t\t\tif ($useid) {\n\t\t\t\t$field = 'id';\n\t\t\t}\n\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$key = $langs->trans($obj->code);\n\t\t\t\t$out .= '<option '.($selected == $obj->{$field} ? 'selected=\"selected\"' : '').' value=\"'.$obj->{$field}.'\">'.($key != $obj->code ? $key : $obj->label).'</option>';\n\t\t\t}\n\t\t\t$out .= '</select>';\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *  Output a combo list with invoices qualified for a third party\n\t *\n\t *  @param\tint\t\t$socid      \tId third party (-1=all, 0=only projects not linked to a third party, id=projects not linked or linked to third party id)\n\t *  @param  int\t\t$selected   \tId invoice preselected\n\t *  @param  string\t$htmlname   \tName of HTML select\n\t *\t@param\tint\t\t$maxlength\t\tMaximum length of label\n\t *\t@param\tint\t\t$option_only\tReturn only html options lines without the select tag\n\t *\t@param\tstring\t$show_empty\t\tAdd an empty line ('1' or string to show for empty line)\n\t *  @param\tint\t\t$discard_closed Discard closed projects (0=Keep,1=hide completely,2=Disable)\n\t *  @param\tint\t\t$forcefocus\t\tForce focus on field (works with javascript only)\n\t *  @param\tint\t\t$disabled\t\tDisabled\n\t *  @param\tstring\t$morecss        More css added to the select component\n\t *  @param\tstring\t$projectsListId ''=Automatic filter on project allowed. List of id=Filter on project ids.\n\t *  @param\tstring\t$showproject\t'all' = Show project info, ''=Hide project info\n\t *  @param\tUser\t$usertofilter\tUser object to use for filtering\n\t *\t@return int         \t\t\tNbr of project if OK, <0 if KO\n\t */\n\tpublic function selectInvoice($socid = -1, $selected = '', $htmlname = 'invoiceid', $maxlength = 24, $option_only = 0, $show_empty = '1', $discard_closed = 0, $forcefocus = 0, $disabled = 0, $morecss = 'maxwidth500', $projectsListId = '', $showproject = 'all', $usertofilter = null)\n\t{\n\t\tglobal $user, $conf, $langs;\n\n\t\trequire_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n\n\t\tif (is_null($usertofilter)) {\n\t\t\t$usertofilter = $user;\n\t\t}\n\n\t\t$out = '';\n\n\t\t$hideunselectables = false;\n\t\tif (!empty($conf->global->PROJECT_HIDE_UNSELECTABLES)) {\n\t\t\t$hideunselectables = true;\n\t\t}\n\n\t\tif (empty($projectsListId)) {\n\t\t\tif (empty($usertofilter->rights->projet->all->lire)) {\n\t\t\t\t$projectstatic = new Project($this->db);\n\t\t\t\t$projectsListId = $projectstatic->getProjectsAuthorizedForUser($usertofilter, 0, 1);\n\t\t\t}\n\t\t}\n\n\t\t// Search all projects\n\t\t$sql = \"SELECT f.rowid, f.ref as fref, 'nolabel' as flabel, p.rowid as pid, f.ref,\n            p.title, p.fk_soc, p.fk_statut, p.public,\";\n\t\t$sql .= ' s.nom as name';\n\t\t$sql .= ' FROM '.$this->db->prefix().'projet as p';\n\t\t$sql .= ' LEFT JOIN '.$this->db->prefix().'societe as s ON s.rowid = p.fk_soc,';\n\t\t$sql .= ' '.$this->db->prefix().'facture as f';\n\t\t$sql .= \" WHERE p.entity IN (\".getEntity('project').\")\";\n\t\t$sql .= \" AND f.fk_projet = p.rowid AND f.fk_statut=0\"; //Brouillons seulement\n\t\t//if ($projectsListId) $sql.= \" AND p.rowid IN (\".$this->db->sanitize($projectsListId).\")\";\n\t\t//if ($socid == 0) $sql.= \" AND (p.fk_soc=0 OR p.fk_soc IS NULL)\";\n\t\t//if ($socid > 0)  $sql.= \" AND (p.fk_soc=\".((int) $socid).\" OR p.fk_soc IS NULL)\";\n\t\t$sql .= \" ORDER BY p.ref, f.ref ASC\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t// Use select2 selector\n\t\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\n\t\t\t\t$comboenhancement = ajax_combobox($htmlname, '', 0, $forcefocus);\n\t\t\t\t$out .= $comboenhancement;\n\t\t\t\t$morecss = 'minwidth200imp maxwidth500';\n\t\t\t}\n\n\t\t\tif (empty($option_only)) {\n\t\t\t\t$out .= '<select class=\"valignmiddle flat'.($morecss ? ' '.$morecss : '').'\"'.($disabled ? ' disabled=\"disabled\"' : '').' id=\"'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t\t}\n\t\t\tif (!empty($show_empty)) {\n\t\t\t\t$out .= '<option value=\"0\" class=\"optiongrey\">';\n\t\t\t\tif (!is_numeric($show_empty)) {\n\t\t\t\t\t$out .= $show_empty;\n\t\t\t\t} else {\n\t\t\t\t\t$out .= '&nbsp;';\n\t\t\t\t}\n\t\t\t\t$out .= '</option>';\n\t\t\t}\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t// If we ask to filter on a company and user has no permission to see all companies and project is linked to another company, we hide project.\n\t\t\t\t\tif ($socid > 0 && (empty($obj->fk_soc) || $obj->fk_soc == $socid) && empty($usertofilter->rights->societe->lire)) {\n\t\t\t\t\t\t// Do nothing\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ($discard_closed == 1 && $obj->fk_statut == Project::STATUS_CLOSED) {\n\t\t\t\t\t\t\t$i++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$labeltoshow = '';\n\n\t\t\t\t\t\tif ($showproject == 'all') {\n\t\t\t\t\t\t\t$labeltoshow .= dol_trunc($obj->ref, 18); // Invoice ref\n\t\t\t\t\t\t\tif ($obj->name) {\n\t\t\t\t\t\t\t\t$labeltoshow .= ' - '.$obj->name; // Soc name\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$disabled = 0;\n\t\t\t\t\t\t\tif ($obj->fk_statut == Project::STATUS_DRAFT) {\n\t\t\t\t\t\t\t\t$disabled = 1;\n\t\t\t\t\t\t\t\t$labeltoshow .= ' - '.$langs->trans(\"Draft\");\n\t\t\t\t\t\t\t} elseif ($obj->fk_statut == Project::STATUS_CLOSED) {\n\t\t\t\t\t\t\t\tif ($discard_closed == 2) {\n\t\t\t\t\t\t\t\t\t$disabled = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$labeltoshow .= ' - '.$langs->trans(\"Closed\");\n\t\t\t\t\t\t\t} elseif ($socid > 0 && (!empty($obj->fk_soc) && $obj->fk_soc != $socid)) {\n\t\t\t\t\t\t\t\t$disabled = 1;\n\t\t\t\t\t\t\t\t$labeltoshow .= ' - '.$langs->trans(\"LinkedToAnotherCompany\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!empty($selected) && $selected == $obj->rowid) {\n\t\t\t\t\t\t\t$out .= '<option value=\"'.$obj->rowid.'\" selected';\n\t\t\t\t\t\t\t//if ($disabled) $out.=' disabled';\t\t\t\t\t\t// with select2, field can't be preselected if disabled\n\t\t\t\t\t\t\t$out .= '>'.$labeltoshow.'</option>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ($hideunselectables && $disabled && ($selected != $obj->rowid)) {\n\t\t\t\t\t\t\t\t$resultat = '';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$resultat = '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\t\t\t\tif ($disabled) {\n\t\t\t\t\t\t\t\t\t$resultat .= ' disabled';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//if ($obj->public) $labeltoshow.=' ('.$langs->trans(\"Public\").')';\n\t\t\t\t\t\t\t\t//else $labeltoshow.=' ('.$langs->trans(\"Private\").')';\n\t\t\t\t\t\t\t\t$resultat .= '>';\n\t\t\t\t\t\t\t\t$resultat .= $labeltoshow;\n\t\t\t\t\t\t\t\t$resultat .= '</option>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$out .= $resultat;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (empty($option_only)) {\n\t\t\t\t$out .= '</select>';\n\t\t\t}\n\n\t\t\tprint $out;\n\n\t\t\t$this->db->free($resql);\n\t\t\treturn $num;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t * Output the component to make advanced search criteries\n\t *\n\t * @param\tarray\t\t$arrayofcriterias\t\t\t          Array of available search criterias. Example: array($object->element => $object->fields, 'otherfamily' => otherarrayoffields, ...)\n\t * @param\tarray\t\t$search_component_params\t          Array of selected search criterias\n\t * @param   array       $arrayofinputfieldsalreadyoutput      Array of input fields already inform. The component will not generate a hidden input field if it is in this list.\n\t * @param\tstring\t\t$search_component_params_hidden\t\t  String with $search_component_params criterias\n\t * @return\tstring\t\t\t\t\t\t\t\t\t          HTML component for advanced search\n\t */\n\tpublic function searchComponent($arrayofcriterias, $search_component_params, $arrayofinputfieldsalreadyoutput = array(), $search_component_params_hidden = '')\n\t{\n\t\tglobal $langs;\n\n\t\t$ret = '';\n\n\t\t$ret .= '<div class=\"divadvancedsearchfieldcomp inline-block\">';\n\t\t//$ret .= '<button type=\"submit\" class=\"liste_titre button_removefilter\" name=\"button_removefilter_x\" value=\"x\"><span class=\"fa fa-remove\"></span></button>';\n\t\t$ret .= '<a href=\"#\" class=\"dropdownsearch-toggle unsetcolor\">';\n\t\t$ret .= '<span class=\"fas fa-filter linkobject boxfilter pictofixedwidth\" title=\"'.dol_escape_htmltag($langs->trans(\"Filters\")).'\" id=\"idsubimgproductdistribution\"></span>';\n\t\t//$ret .= $langs->trans(\"Filters\");\n\t\t$ret .= '</a>';\n\n\t\t$ret .= '<div class=\"divadvancedsearchfieldcompinput inline-block minwidth500 maxwidth300onsmartphone\">';\n\n\t\t// Show select fields as tags.\n\t\t$ret .= '<div name=\"divsearch_component_params\" class=\"noborderbottom search_component_params inline-block valignmiddle\">';\n\n\t\tif ($search_component_params_hidden) {\n\t\t\tif (!preg_match('/^\\(.*\\)$/', $search_component_params_hidden)) {\t// If $search_component_params_hidden does not start and end with ()\n\t\t\t\t$search_component_params_hidden .= '('.$search_component_params_hidden.')';\n\t\t\t}\n\t\t\t$errormessage = '';\n\t\t\tif (!dolCheckFilters($search_component_params_hidden, $errormessage)) {\n\t\t\t\tprint 'ERROR in parsing search string';\n\t\t\t}\n\t\t\t$regexstring = '\\(([^:\\'\\(\\)]+:[^:\\'\\(\\)]+:[^\\(\\)]+)\\)';\n\t\t\t//var_dump($search_component_params_hidden);\n\t\t\t$htmltags = preg_replace_callback('/'.$regexstring.'/', 'dolForgeCriteriaCallback', $search_component_params_hidden);\n\t\t\t//var_dump($htmltags);\n\t\t\t$ret .= '<span class=\"marginleftonlyshort valignmiddle tagsearch\"><span class=\"tagsearchdelete select2-selection__choice__remove\">x</span> '.$htmltags.'</span>';\n\t\t}\n\n\t\t//$ret .= '<button type=\"submit\" class=\"liste_titre button_search paddingleftonly\" name=\"button_search_x\" value=\"x\"><span class=\"fa fa-search\"></span></button>';\n\n\t\t//$ret .= search_component_params\n\t\t//$texttoshow = '<div class=\"opacitymedium inline-block search_component_searchtext\">'.$langs->trans(\"Search\").'</div>';\n\t\t//$ret .= '<div class=\"search_component inline-block valignmiddle\">'.$texttoshow.'</div>';\n\n\t\t$show_search_component_params_hidden = 1;\n\t\tif ($show_search_component_params_hidden) {\n\t\t\t$ret .= '<input type=\"hidden\" name=\"show_search_component_params_hidden\" value=\"1\">';\n\t\t}\n\t\t$ret .= \"<!-- We store the full search string into this field. For example: (t.ref:like:'SO-%') and ((t.ref:like:'CO-%') or (t.ref:like:'AA%')) -->\";\n\t\t$ret .= '<input type=\"hidden\" name=\"search_component_params_hidden\" value=\"'.dol_escape_htmltag($search_component_params_hidden).'\">';\n\t\t// For compatibility with forms that show themself the search criteria in addition of this component, we output the fields\n\t\tforeach ($arrayofcriterias as $criterias) {\n\t\t\tforeach ($criterias as $criteriafamilykey => $criteriafamilyval) {\n\t\t\t\tif (in_array('search_'.$criteriafamilykey, $arrayofinputfieldsalreadyoutput)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (in_array($criteriafamilykey, array('rowid', 'ref_ext', 'entity', 'extraparams'))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (in_array($criteriafamilyval['type'], array('date', 'datetime', 'timestamp'))) {\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_start\">';\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_startyear\">';\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_startmonth\">';\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_startday\">';\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_end\">';\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_endyear\">';\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_endmonth\">';\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'_endday\">';\n\t\t\t\t} else {\n\t\t\t\t\t$ret .= '<input type=\"hidden\" name=\"search_'.$criteriafamilykey.'\">';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$ret .= '</div>';\n\n\t\t$ret .= \"<!-- Syntax of Generic filter string: t.ref:like:'SO-%', t.date_creation:<:'20160101', t.date_creation:<:'2016-01-01 12:30:00', t.nature:is:NULL, t.field2:isnot:NULL -->\\n\";\n\t\t$ret .= '<input type=\"text\" placeholder=\"'.$langs->trans(\"Search\").'\" name=\"search_component_params_input\" class=\"noborderbottom search_component_input\" value=\"\">';\n\n\t\t$ret .= '</div>';\n\t\t$ret .= '</div>';\n\n\t\treturn $ret;\n\t}\n\n\t/**\n\t * selectModelMail\n\t *\n\t * @param   string   $prefix     \tPrefix\n\t * @param   string   $modelType  \tModel type\n\t * @param\tint\t\t $default\t \t1=Show also Default mail template\n\t * @param\tint\t\t $addjscombo\tAdd js combobox\n\t * @return  string               \tHTML select string\n\t */\n\tpublic function selectModelMail($prefix, $modelType = '', $default = 0, $addjscombo = 0)\n\t{\n\t\tglobal $langs, $user;\n\n\t\t$retstring = '';\n\n\t\t$TModels = array();\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n\t\t$formmail = new FormMail($this->db);\n\t\t$result = $formmail->fetchAllEMailTemplate($modelType, $user, $langs);\n\n\t\tif ($default) {\n\t\t\t$TModels[0] = $langs->trans('DefaultMailModel');\n\t\t}\n\t\tif ($result > 0) {\n\t\t\tforeach ($formmail->lines_model as $model) {\n\t\t\t\t$TModels[$model->id] = $model->label;\n\t\t\t}\n\t\t}\n\n\t\t$retstring .= '<select class=\"flat\" id=\"select_'.$prefix.'model_mail\" name=\"'.$prefix.'model_mail\">';\n\n\t\tforeach ($TModels as $id_model => $label_model) {\n\t\t\t$retstring .= '<option value=\"'.$id_model.'\"';\n\t\t\t$retstring .= \">\".$label_model.\"</option>\";\n\t\t}\n\n\t\t$retstring .= \"</select>\";\n\n\t\tif ($addjscombo) {\n\t\t\t$retstring .= ajax_combobox('select_'.$prefix.'model_mail');\n\t\t}\n\n\t\treturn $retstring;\n\t}\n\n\t/**\n\t * Output the buttons to submit a creation/edit form\n\t *\n\t * @param   string  $save_label     Alternative label for save button\n\t * @param   string  $cancel_label   Alternative label for cancel button\n\t * @param   array   $morebuttons    Add additional buttons between save and cancel\n\t * @param   bool    $withoutdiv     Option to remove enclosing centered div\n\t * @param\tstring\t$morecss\t\tMore CSS\n\t * @return \tstring\t\t\t\t\tHtml code with the buttons\n\t */\n\tpublic function buttonsSaveCancel($save_label = 'Save', $cancel_label = 'Cancel', $morebuttons = array(), $withoutdiv = 0, $morecss = '')\n\t{\n\t\tglobal $langs;\n\n\t\t$buttons = array();\n\n\t\t$save = array(\n\t\t\t'name' => 'save',\n\t\t\t'label_key' => $save_label,\n\t\t);\n\n\t\tif ($save_label == 'Create' || $save_label == 'Add' ) {\n\t\t\t$save['name'] = 'add';\n\t\t} elseif ($save_label == 'Modify') {\n\t\t\t$save['name'] = 'edit';\n\t\t}\n\n\t\t$cancel = array(\n\t\t\t\t'name' => 'cancel',\n\t\t\t\t'label_key' => 'Cancel',\n\t\t);\n\n\t\t!empty($save_label) ? $buttons[] = $save : '';\n\n\t\tif (!empty($morebuttons)) {\n\t\t\t$buttons[] = $morebuttons;\n\t\t}\n\n\t\t!empty($cancel_label) ? $buttons[] = $cancel : '';\n\n\t\t$retstring = $withoutdiv ? '': '<div class=\"center\">';\n\n\t\tforeach ($buttons as $button) {\n\t\t\t$addclass = empty($button['addclass']) ? '' : $button['addclass'];\n\t\t\t$retstring .= '<input type=\"submit\" class=\"button button-'.$button['name'].($morecss ? ' '.$morecss : '').' '.$addclass.'\" name=\"'.$button['name'].'\" value=\"'.dol_escape_htmltag($langs->trans($button['label_key'])).'\">';\n\t\t}\n\t\t$retstring .= $withoutdiv ? '': '</div>';\n\n\t\treturn $retstring;\n\t}\n}\n", "<?php\n/* Copyright (C) 2008-2012  Laurent Destailleur <eldy@users.sourceforge.net>\n * Copyright (C) 2012-2021  Regis Houssin       <regis.houssin@inodbox.com>\n * Copyright (C) 2012-2016  Juanjo Menent       <jmenent@2byte.es>\n * Copyright (C) 2015       Marcos Garc\u00eda       <marcosgdf@gmail.com>\n * Copyright (C) 2016       Rapha\u00ebl Doursenaud  <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2019       Fr\u00e9d\u00e9ric France     <frederic.france@netlogic.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n * or see https://www.gnu.org/\n */\n\n/**\n *  \\file\t\thtdocs/core/lib/files.lib.php\n *  \\brief\t\tLibrary for file managing functions\n */\n\n/**\n * Make a basename working with all page code (default PHP basenamed fails with cyrillic).\n * We supose dir separator for input is '/'.\n *\n * @param\tstring\t$pathfile\tString to find basename.\n * @return\tstring\t\t\t\tBasename of input\n */\nfunction dol_basename($pathfile)\n{\n\treturn preg_replace('/^.*\\/([^\\/]+)$/', '$1', rtrim($pathfile, '/'));\n}\n\n/**\n *  Scan a directory and return a list of files/directories.\n *  Content for string is UTF8 and dir separator is \"/\".\n *\n *  @param\tstring\t\t$path        \tStarting path from which to search. This is a full path.\n *  @param\tstring\t\t$types        \tCan be \"directories\", \"files\", or \"all\"\n *  @param\tint\t\t\t$recursive\t\tDetermines whether subdirectories are searched\n *  @param\tstring\t\t$filter        \tRegex filter to restrict list. This regex value must be escaped for '/' by doing preg_quote($var,'/'), since this char is used for preg_match function,\n *                                      but must not contains the start and end '/'. Filter is checked into basename only.\n *  @param\tarray\t\t$excludefilter  Array of Regex for exclude filter (example: array('(\\.meta|_preview.*\\.png)$','^\\.')). Exclude is checked both into fullpath and into basename (So '^xxx' may exclude 'xxx/dirscanned/...' and dirscanned/xxx').\n *  @param\tstring\t\t$sortcriteria\tSort criteria ('','fullname','relativename','name','date','size')\n *  @param\tstring\t\t$sortorder\t\tSort order (SORT_ASC, SORT_DESC)\n *\t@param\tint\t\t\t$mode\t\t\t0=Return array minimum keys loaded (faster), 1=Force all keys like date and size to be loaded (slower), 2=Force load of date only, 3=Force load of size only, 4=Force load of perm\n *  @param\tint\t\t\t$nohook\t\t\tDisable all hooks\n *  @param\tstring\t\t$relativename\tFor recursive purpose only. Must be \"\" at first call.\n *  @param\tstring\t\t$donotfollowsymlinks\tDo not follow symbolic links\n *  @return\tarray\t\t\t\t\t\tArray of array('name'=>'xxx','fullname'=>'/abc/xxx','date'=>'yyy','size'=>99,'type'=>'dir|file',...)\n *  @see dol_dir_list_in_database()\n */\nfunction dol_dir_list($path, $types = \"all\", $recursive = 0, $filter = \"\", $excludefilter = null, $sortcriteria = \"name\", $sortorder = SORT_ASC, $mode = 0, $nohook = 0, $relativename = \"\", $donotfollowsymlinks = 0)\n{\n\tglobal $db, $hookmanager;\n\tglobal $object;\n\n\tif ($recursive <= 1) {\t// Avoid too verbose log\n\t\tdol_syslog(\"files.lib.php::dol_dir_list path=\".$path.\" types=\".$types.\" recursive=\".$recursive.\" filter=\".$filter.\" excludefilter=\".json_encode($excludefilter));\n\t\t//print 'xxx'.\"files.lib.php::dol_dir_list path=\".$path.\" types=\".$types.\" recursive=\".$recursive.\" filter=\".$filter.\" excludefilter=\".json_encode($excludefilter);\n\t}\n\n\t$loaddate = ($mode == 1 || $mode == 2) ?true:false;\n\t$loadsize = ($mode == 1 || $mode == 3) ?true:false;\n\t$loadperm = ($mode == 1 || $mode == 4) ?true:false;\n\n\t// Clean parameters\n\t$path = preg_replace('/([\\\\/]+)$/i', '', $path);\n\t$newpath = dol_osencode($path);\n\n\t$reshook = 0;\n\t$file_list = array();\n\n\tif (is_object($hookmanager) && !$nohook) {\n\t\t$hookmanager->resArray = array();\n\n\t\t$hookmanager->initHooks(array('fileslib'));\n\n\t\t$parameters = array(\n\t\t\t'path' => $newpath,\n\t\t\t'types'=> $types,\n\t\t\t'recursive' => $recursive,\n\t\t\t'filter' => $filter,\n\t\t\t'excludefilter' => $excludefilter,\n\t\t\t'sortcriteria' => $sortcriteria,\n\t\t\t'sortorder' => $sortorder,\n\t\t\t'loaddate' => $loaddate,\n\t\t\t'loadsize' => $loadsize,\n\t\t\t'mode' => $mode\n\t\t);\n\t\t$reshook = $hookmanager->executeHooks('getDirList', $parameters, $object);\n\t}\n\n\t// $hookmanager->resArray may contain array stacked by other modules\n\tif (empty($reshook)) {\n\t\tif (!is_dir($newpath)) {\n\t\t\treturn array();\n\t\t}\n\n\t\tif ($dir = opendir($newpath)) {\n\t\t\t$filedate = '';\n\t\t\t$filesize = '';\n\t\t\t$fileperm = '';\n\t\t\twhile (false !== ($file = readdir($dir))) {        // $file is always a basename (into directory $newpath)\n\t\t\t\tif (!utf8_check($file)) {\n\t\t\t\t\t$file = utf8_encode($file); // To be sure data is stored in utf8 in memory\n\t\t\t\t}\n\t\t\t\t$fullpathfile = ($newpath ? $newpath.'/' : '').$file;\n\n\t\t\t\t$qualified = 1;\n\n\t\t\t\t// Define excludefilterarray\n\t\t\t\t$excludefilterarray = array('^\\.');\n\t\t\t\tif (is_array($excludefilter)) {\n\t\t\t\t\t$excludefilterarray = array_merge($excludefilterarray, $excludefilter);\n\t\t\t\t} elseif ($excludefilter) {\n\t\t\t\t\t$excludefilterarray[] = $excludefilter;\n\t\t\t\t}\n\t\t\t\t// Check if file is qualified\n\t\t\t\tforeach ($excludefilterarray as $filt) {\n\t\t\t\t\tif (preg_match('/'.$filt.'/i', $file) || preg_match('/'.$filt.'/i', $fullpathfile)) {\n\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//print $fullpathfile.' '.$file.' '.$qualified.'<br>';\n\n\t\t\t\tif ($qualified) {\n\t\t\t\t\t$isdir = is_dir(dol_osencode($path.\"/\".$file));\n\t\t\t\t\t// Check whether this is a file or directory and whether we're interested in that type\n\t\t\t\t\tif ($isdir && (($types == \"directories\") || ($types == \"all\") || $recursive > 0)) {\n\t\t\t\t\t\t// Add entry into file_list array\n\t\t\t\t\t\tif (($types == \"directories\") || ($types == \"all\")) {\n\t\t\t\t\t\t\tif ($loaddate || $sortcriteria == 'date') {\n\t\t\t\t\t\t\t\t$filedate = dol_filemtime($path.\"/\".$file);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ($loadsize || $sortcriteria == 'size') {\n\t\t\t\t\t\t\t\t$filesize = dol_filesize($path.\"/\".$file);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ($loadperm || $sortcriteria == 'perm') {\n\t\t\t\t\t\t\t\t$fileperm = dol_fileperm($path.\"/\".$file);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!$filter || preg_match('/'.$filter.'/i', $file)) {\t// We do not search key $filter into all $path, only into $file part\n\t\t\t\t\t\t\t\t$reg = array();\n\t\t\t\t\t\t\t\tpreg_match('/([^\\/]+)\\/[^\\/]+$/', $path.'/'.$file, $reg);\n\t\t\t\t\t\t\t\t$level1name = (isset($reg[1]) ? $reg[1] : '');\n\t\t\t\t\t\t\t\t$file_list[] = array(\n\t\t\t\t\t\t\t\t\t\"name\" => $file,\n\t\t\t\t\t\t\t\t\t\"path\" => $path,\n\t\t\t\t\t\t\t\t\t\"level1name\" => $level1name,\n\t\t\t\t\t\t\t\t\t\"relativename\" => ($relativename ? $relativename.'/' : '').$file,\n\t\t\t\t\t\t\t\t\t\"fullname\" => $path.'/'.$file,\n\t\t\t\t\t\t\t\t\t\"date\" => $filedate,\n\t\t\t\t\t\t\t\t\t\"size\" => $filesize,\n\t\t\t\t\t\t\t\t\t\"perm\" => $fileperm,\n\t\t\t\t\t\t\t\t\t\"type\" => 'dir'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if we're in a directory and we want recursive behavior, call this function again\n\t\t\t\t\t\tif ($recursive > 0) {\n\t\t\t\t\t\t\tif (empty($donotfollowsymlinks) || !is_link($path.\"/\".$file)) {\n\t\t\t\t\t\t\t\t//var_dump('eee '. $path.\"/\".$file. ' '.is_dir($path.\"/\".$file).' '.is_link($path.\"/\".$file));\n\t\t\t\t\t\t\t\t$file_list = array_merge($file_list, dol_dir_list($path.\"/\".$file, $types, $recursive + 1, $filter, $excludefilter, $sortcriteria, $sortorder, $mode, $nohook, ($relativename != '' ? $relativename.'/' : '').$file, $donotfollowsymlinks));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} elseif (!$isdir && (($types == \"files\") || ($types == \"all\"))) {\n\t\t\t\t\t\t// Add file into file_list array\n\t\t\t\t\t\tif ($loaddate || $sortcriteria == 'date') {\n\t\t\t\t\t\t\t$filedate = dol_filemtime($path.\"/\".$file);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($loadsize || $sortcriteria == 'size') {\n\t\t\t\t\t\t\t$filesize = dol_filesize($path.\"/\".$file);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!$filter || preg_match('/'.$filter.'/i', $file)) {\t// We do not search key $filter into $path, only into $file\n\t\t\t\t\t\t\tpreg_match('/([^\\/]+)\\/[^\\/]+$/', $path.'/'.$file, $reg);\n\t\t\t\t\t\t\t$level1name = (isset($reg[1]) ? $reg[1] : '');\n\t\t\t\t\t\t\t$file_list[] = array(\n\t\t\t\t\t\t\t\t\"name\" => $file,\n\t\t\t\t\t\t\t\t\"path\" => $path,\n\t\t\t\t\t\t\t\t\"level1name\" => $level1name,\n\t\t\t\t\t\t\t\t\"relativename\" => ($relativename ? $relativename.'/' : '').$file,\n\t\t\t\t\t\t\t\t\"fullname\" => $path.'/'.$file,\n\t\t\t\t\t\t\t\t\"date\" => $filedate,\n\t\t\t\t\t\t\t\t\"size\" => $filesize,\n\t\t\t\t\t\t\t\t\"type\" => 'file'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tclosedir($dir);\n\n\t\t\t// Obtain a list of columns\n\t\t\tif (!empty($sortcriteria) && $sortorder) {\n\t\t\t\t$file_list = dol_sort_array($file_list, $sortcriteria, ($sortorder == SORT_ASC ? 'asc' : 'desc'));\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_object($hookmanager) && is_array($hookmanager->resArray)) {\n\t\t$file_list = array_merge($file_list, $hookmanager->resArray);\n\t}\n\n\treturn $file_list;\n}\n\n\n/**\n *  Scan a directory and return a list of files/directories.\n *  Content for string is UTF8 and dir separator is \"/\".\n *\n *  @param\tstring\t\t$path        \tStarting path from which to search. Example: 'produit/MYPROD'\n *  @param\tstring\t\t$filter        \tRegex filter to restrict list. This regex value must be escaped for '/', since this char is used for preg_match function\n *  @param\tarray|null\t$excludefilter  Array of Regex for exclude filter (example: array('(\\.meta|_preview.*\\.png)$','^\\.'))\n *  @param\tstring\t\t$sortcriteria\tSort criteria (\"\",\"fullname\",\"name\",\"date\",\"size\")\n *  @param\tstring\t\t$sortorder\t\tSort order (SORT_ASC, SORT_DESC)\n *\t@param\tint\t\t\t$mode\t\t\t0=Return array minimum keys loaded (faster), 1=Force all keys like description\n *  @return\tarray\t\t\t\t\t\tArray of array('name'=>'xxx','fullname'=>'/abc/xxx','type'=>'dir|file',...)\n *  @see dol_dir_list()\n */\nfunction dol_dir_list_in_database($path, $filter = \"\", $excludefilter = null, $sortcriteria = \"name\", $sortorder = SORT_ASC, $mode = 0)\n{\n\tglobal $conf, $db;\n\n\t$sql = \" SELECT rowid, label, entity, filename, filepath, fullpath_orig, keywords, cover, gen_or_uploaded, extraparams,\";\n\t$sql .= \" date_c, tms as date_m, fk_user_c, fk_user_m, acl, position, share\";\n\tif ($mode) {\n\t\t$sql .= \", description\";\n\t}\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"ecm_files\";\n\t$sql .= \" WHERE entity = \".$conf->entity;\n\tif (preg_match('/%$/', $path)) {\n\t\t$sql .= \" AND filepath LIKE '\".$db->escape($path).\"'\";\n\t} else {\n\t\t$sql .= \" AND filepath = '\".$db->escape($path).\"'\";\n\t}\n\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$file_list = array();\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\twhile ($i < $num) {\n\t\t\t$obj = $db->fetch_object($resql);\n\t\t\tif ($obj) {\n\t\t\t\t$reg = array();\n\t\t\t\tpreg_match('/([^\\/]+)\\/[^\\/]+$/', DOL_DATA_ROOT.'/'.$obj->filepath.'/'.$obj->filename, $reg);\n\t\t\t\t$level1name = (isset($reg[1]) ? $reg[1] : '');\n\t\t\t\t$file_list[] = array(\n\t\t\t\t\t\"rowid\" => $obj->rowid,\n\t\t\t\t\t\"label\" => $obj->label, // md5\n\t\t\t\t\t\"name\" => $obj->filename,\n\t\t\t\t\t\"path\" => DOL_DATA_ROOT.'/'.$obj->filepath,\n\t\t\t\t\t\"level1name\" => $level1name,\n\t\t\t\t\t\"fullname\" => DOL_DATA_ROOT.'/'.$obj->filepath.'/'.$obj->filename,\n\t\t\t\t\t\"fullpath_orig\" => $obj->fullpath_orig,\n\t\t\t\t\t\"date_c\" => $db->jdate($obj->date_c),\n\t\t\t\t\t\"date_m\" => $db->jdate($obj->date_m),\n\t\t\t\t\t\"type\" => 'file',\n\t\t\t\t\t\"keywords\" => $obj->keywords,\n\t\t\t\t\t\"cover\" => $obj->cover,\n\t\t\t\t\t\"position\" => (int) $obj->position,\n\t\t\t\t\t\"acl\" => $obj->acl,\n\t\t\t\t\t\"share\" => $obj->share\n\t\t\t\t);\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\n\t\t// Obtain a list of columns\n\t\tif (!empty($sortcriteria)) {\n\t\t\t$myarray = array();\n\t\t\tforeach ($file_list as $key => $row) {\n\t\t\t\t$myarray[$key] = (isset($row[$sortcriteria]) ? $row[$sortcriteria] : '');\n\t\t\t}\n\t\t\t// Sort the data\n\t\t\tif ($sortorder) {\n\t\t\t\tarray_multisort($myarray, $sortorder, $file_list);\n\t\t\t}\n\t\t}\n\n\t\treturn $file_list;\n\t} else {\n\t\tdol_print_error($db);\n\t\treturn array();\n\t}\n}\n\n\n/**\n * Complete $filearray with data from database.\n * This will call doldir_list_indatabase to complate filearray.\n *\n * @param\tarray\t$filearray\t\t\tArray of files obtained using dol_dir_list\n * @param\tstring\t$relativedir\t\tRelative dir from DOL_DATA_ROOT\n * @return\tvoid\n */\nfunction completeFileArrayWithDatabaseInfo(&$filearray, $relativedir)\n{\n\tglobal $conf, $db, $user;\n\n\t$filearrayindatabase = dol_dir_list_in_database($relativedir, '', null, 'name', SORT_ASC);\n\n\t// TODO Remove this when PRODUCT_USE_OLD_PATH_FOR_PHOTO will be removed\n\tglobal $modulepart;\n\tif ($modulepart == 'produit' && !empty($conf->global->PRODUCT_USE_OLD_PATH_FOR_PHOTO)) {\n\t\tglobal $object;\n\t\tif (!empty($object->id)) {\n\t\t\tif (!empty($conf->product->enabled)) {\n\t\t\t\t$upload_dirold = $conf->product->multidir_output[$object->entity].'/'.substr(substr(\"000\".$object->id, -2), 1, 1).'/'.substr(substr(\"000\".$object->id, -2), 0, 1).'/'.$object->id.\"/photos\";\n\t\t\t} else {\n\t\t\t\t$upload_dirold = $conf->service->multidir_output[$object->entity].'/'.substr(substr(\"000\".$object->id, -2), 1, 1).'/'.substr(substr(\"000\".$object->id, -2), 0, 1).'/'.$object->id.\"/photos\";\n\t\t\t}\n\n\t\t\t$relativedirold = preg_replace('/^'.preg_quote(DOL_DATA_ROOT, '/').'/', '', $upload_dirold);\n\t\t\t$relativedirold = preg_replace('/^[\\\\/]/', '', $relativedirold);\n\n\t\t\t$filearrayindatabase = array_merge($filearrayindatabase, dol_dir_list_in_database($relativedirold, '', null, 'name', SORT_ASC));\n\t\t}\n\t}\n\n\t/*var_dump($relativedir);\n\tvar_dump($filearray);\n\tvar_dump($filearrayindatabase);*/\n\n\t// Complete filearray with properties found into $filearrayindatabase\n\tforeach ($filearray as $key => $val) {\n\t\t$tmpfilename = preg_replace('/\\.noexe$/', '', $filearray[$key]['name']);\n\t\t$found = 0;\n\t\t// Search if it exists into $filearrayindatabase\n\t\tforeach ($filearrayindatabase as $key2 => $val2) {\n\t\t\tif (($filearrayindatabase[$key2]['path'] == $filearray[$key]['path']) && ($filearrayindatabase[$key2]['name'] == $tmpfilename)) {\n\t\t\t\t$filearray[$key]['position_name'] = ($filearrayindatabase[$key2]['position'] ? $filearrayindatabase[$key2]['position'] : '0').'_'.$filearrayindatabase[$key2]['name'];\n\t\t\t\t$filearray[$key]['position'] = $filearrayindatabase[$key2]['position'];\n\t\t\t\t$filearray[$key]['cover'] = $filearrayindatabase[$key2]['cover'];\n\t\t\t\t$filearray[$key]['acl'] = $filearrayindatabase[$key2]['acl'];\n\t\t\t\t$filearray[$key]['rowid'] = $filearrayindatabase[$key2]['rowid'];\n\t\t\t\t$filearray[$key]['label'] = $filearrayindatabase[$key2]['label'];\n\t\t\t\t$filearray[$key]['share'] = $filearrayindatabase[$key2]['share'];\n\t\t\t\t$found = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!$found) {    // This happen in transition toward version 6, or if files were added manually into os dir.\n\t\t\t$filearray[$key]['position'] = '999999'; // File not indexed are at end. So if we add a file, it will not replace an existing position\n\t\t\t$filearray[$key]['cover'] = 0;\n\t\t\t$filearray[$key]['acl'] = '';\n\n\t\t\t$rel_filename = preg_replace('/^'.preg_quote(DOL_DATA_ROOT, '/').'/', '', $filearray[$key]['fullname']);\n\n\t\t\tif (!preg_match('/([\\\\/]temp[\\\\/]|[\\\\/]thumbs|\\.meta$)/', $rel_filename)) {     // If not a tmp file\n\t\t\t\tdol_syslog(\"list_of_documents We found a file called '\".$filearray[$key]['name'].\"' not indexed into database. We add it\");\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/ecm/class/ecmfiles.class.php';\n\t\t\t\t$ecmfile = new EcmFiles($db);\n\n\t\t\t\t// Add entry into database\n\t\t\t\t$filename = basename($rel_filename);\n\t\t\t\t$rel_dir = dirname($rel_filename);\n\t\t\t\t$rel_dir = preg_replace('/[\\\\/]$/', '', $rel_dir);\n\t\t\t\t$rel_dir = preg_replace('/^[\\\\/]/', '', $rel_dir);\n\n\t\t\t\t$ecmfile->filepath = $rel_dir;\n\t\t\t\t$ecmfile->filename = $filename;\n\t\t\t\t$ecmfile->label = md5_file(dol_osencode($filearray[$key]['fullname'])); // $destfile is a full path to file\n\t\t\t\t$ecmfile->fullpath_orig = $filearray[$key]['fullname'];\n\t\t\t\t$ecmfile->gen_or_uploaded = 'unknown';\n\t\t\t\t$ecmfile->description = ''; // indexed content\n\t\t\t\t$ecmfile->keywords = ''; // keyword content\n\t\t\t\t$result = $ecmfile->create($user);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\tsetEventMessages($ecmfile->error, $ecmfile->errors, 'warnings');\n\t\t\t\t} else {\n\t\t\t\t\t$filearray[$key]['rowid'] = $result;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$filearray[$key]['rowid'] = 0; // Should not happened\n\t\t\t}\n\t\t}\n\t}\n\t//var_dump($filearray); var_dump($relativedir.' - tmpfilename='.$tmpfilename.' - found='.$found);\n}\n\n\n/**\n * Fast compare of 2 files identified by their properties ->name, ->date and ->size\n *\n * @param\tstring \t$a\t\tFile 1\n * @param \tstring\t$b\t\tFile 2\n * @return \tint\t\t\t\t1, 0, 1\n */\nfunction dol_compare_file($a, $b)\n{\n\tglobal $sortorder;\n\tglobal $sortfield;\n\n\t$sortorder = strtoupper($sortorder);\n\n\tif ($sortorder == 'ASC') {\n\t\t$retup = -1;\n\t\t$retdown = 1;\n\t} else {\n\t\t$retup = 1;\n\t\t$retdown = -1;\n\t}\n\n\tif ($sortfield == 'name') {\n\t\tif ($a->name == $b->name) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn ($a->name < $b->name) ? $retup : $retdown;\n\t}\n\tif ($sortfield == 'date') {\n\t\tif ($a->date == $b->date) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn ($a->date < $b->date) ? $retup : $retdown;\n\t}\n\tif ($sortfield == 'size') {\n\t\tif ($a->size == $b->size) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn ($a->size < $b->size) ? $retup : $retdown;\n\t}\n}\n\n\n/**\n * Test if filename is a directory\n *\n * @param\tstring\t\t$folder     Name of folder\n * @return\tboolean     \t\t\tTrue if it's a directory, False if not found\n */\nfunction dol_is_dir($folder)\n{\n\t$newfolder = dol_osencode($folder);\n\tif (is_dir($newfolder)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * Return if path is empty\n *\n * @param   string\t\t$dir\t\tPath of Directory\n * @return  boolean     \t\t    True or false\n */\nfunction dol_is_dir_empty($dir)\n{\n\tif (!is_readable($dir)) {\n\t\treturn false;\n\t}\n\treturn (count(scandir($dir)) == 2);\n}\n\n/**\n * Return if path is a file\n *\n * @param   string\t\t$pathoffile\t\tPath of file\n * @return  boolean     \t\t\t    True or false\n */\nfunction dol_is_file($pathoffile)\n{\n\t$newpathoffile = dol_osencode($pathoffile);\n\treturn is_file($newpathoffile);\n}\n\n/**\n * Return if path is a symbolic link\n *\n * @param   string\t\t$pathoffile\t\tPath of file\n * @return  boolean     \t\t\t    True or false\n */\nfunction dol_is_link($pathoffile)\n{\n\t$newpathoffile = dol_osencode($pathoffile);\n\treturn is_link($newpathoffile);\n}\n\n/**\n * Return if path is an URL\n *\n * @param   string\t\t$url\tUrl\n * @return  boolean      \t   \tTrue or false\n */\nfunction dol_is_url($url)\n{\n\t$tmpprot = array('file', 'http', 'https', 'ftp', 'zlib', 'data', 'ssh', 'ssh2', 'ogg', 'expect');\n\tforeach ($tmpprot as $prot) {\n\t\tif (preg_match('/^'.$prot.':/i', $url)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * \tTest if a folder is empty\n *\n * \t@param\tstring\t$folder\t\tName of folder\n * \t@return boolean\t\t\t\tTrue if dir is empty or non-existing, False if it contains files\n */\nfunction dol_dir_is_emtpy($folder)\n{\n\t$newfolder = dol_osencode($folder);\n\tif (is_dir($newfolder)) {\n\t\t$handle = opendir($newfolder);\n\t\t$folder_content = '';\n\t\twhile ((gettype($name = readdir($handle)) != \"boolean\")) {\n\t\t\t$name_array[] = $name;\n\t\t}\n\t\tforeach ($name_array as $temp) {\n\t\t\t$folder_content .= $temp;\n\t\t}\n\n\t\tclosedir($handle);\n\n\t\tif ($folder_content == \"...\") {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn true; // Dir does not exists\n\t}\n}\n\n/**\n * \tCount number of lines in a file\n *\n * \t@param\tstring\t$file\t\tFilename\n * \t@return int\t\t\t\t\t<0 if KO, Number of lines in files if OK\n *  @see dol_nboflines()\n */\nfunction dol_count_nb_of_line($file)\n{\n\t$nb = 0;\n\n\t$newfile = dol_osencode($file);\n\t//print 'x'.$file;\n\t$fp = fopen($newfile, 'r');\n\tif ($fp) {\n\t\twhile (!feof($fp)) {\n\t\t\t$line = fgets($fp);\n\t\t\t// We increase count only if read was success. We need test because feof return true only after fgets so we do n+1 fgets for a file with n lines.\n\t\t\tif (!$line === false) {\n\t\t\t\t$nb++;\n\t\t\t}\n\t\t}\n\t\tfclose($fp);\n\t} else {\n\t\t$nb = -1;\n\t}\n\n\treturn $nb;\n}\n\n\n/**\n * Return size of a file\n *\n * @param \tstring\t\t$pathoffile\t\tPath of file\n * @return \tinteger\t\t\t\t\t\tFile size\n * @see dol_print_size()\n */\nfunction dol_filesize($pathoffile)\n{\n\t$newpathoffile = dol_osencode($pathoffile);\n\treturn filesize($newpathoffile);\n}\n\n/**\n * Return time of a file\n *\n * @param \tstring\t\t$pathoffile\t\tPath of file\n * @return \tint\t\t\t\t\tTime of file\n */\nfunction dol_filemtime($pathoffile)\n{\n\t$newpathoffile = dol_osencode($pathoffile);\n\treturn @filemtime($newpathoffile); // @Is to avoid errors if files does not exists\n}\n\n/**\n * Return permissions of a file\n *\n * @param \tstring\t\t$pathoffile\t\tPath of file\n * @return \tinteger\t\t\t\t\t\tFile permissions\n */\nfunction dol_fileperm($pathoffile)\n{\n\t$newpathoffile = dol_osencode($pathoffile);\n\treturn fileperms($newpathoffile);\n}\n\n/**\n * Make replacement of strings into a file.\n *\n * @param\tstring\t$srcfile\t\t\t       Source file (can't be a directory)\n * @param\tarray\t$arrayreplacement\t       Array with strings to replace. Example: array('valuebefore'=>'valueafter', ...)\n * @param\tstring\t$destfile\t\t\t       Destination file (can't be a directory). If empty, will be same than source file.\n * @param\tint\t\t$newmask\t\t\t       Mask for new file (0 by default means $conf->global->MAIN_UMASK). Example: '0666'\n * @param\tint\t\t$indexdatabase\t\t       1=index new file into database.\n * @param   int     $arrayreplacementisregex   1=Array of replacement is regex\n * @return\tint\t\t\t\t\t\t\t       <0 if error, 0 if nothing done (dest file already exists), >0 if OK\n * @see\t\tdol_copy()\n */\nfunction dolReplaceInFile($srcfile, $arrayreplacement, $destfile = '', $newmask = 0, $indexdatabase = 0, $arrayreplacementisregex = 0)\n{\n\tglobal $conf;\n\n\tdol_syslog(\"files.lib.php::dolReplaceInFile srcfile=\".$srcfile.\" destfile=\".$destfile.\" newmask=\".$newmask.\" indexdatabase=\".$indexdatabase.\" arrayreplacementisregex=\".$arrayreplacementisregex);\n\n\tif (empty($srcfile)) {\n\t\treturn -1;\n\t}\n\tif (empty($destfile)) {\n\t\t$destfile = $srcfile;\n\t}\n\n\t$destexists = dol_is_file($destfile);\n\tif (($destfile != $srcfile) && $destexists) {\n\t\treturn 0;\n\t}\n\n\t$tmpdestfile = $destfile.'.tmp';\n\n\t$newpathofsrcfile = dol_osencode($srcfile);\n\t$newpathoftmpdestfile = dol_osencode($tmpdestfile);\n\t$newpathofdestfile = dol_osencode($destfile);\n\t$newdirdestfile = dirname($newpathofdestfile);\n\n\tif ($destexists && !is_writable($newpathofdestfile)) {\n\t\tdol_syslog(\"files.lib.php::dolReplaceInFile failed Permission denied to overwrite target file\", LOG_WARNING);\n\t\treturn -1;\n\t}\n\tif (!is_writable($newdirdestfile)) {\n\t\tdol_syslog(\"files.lib.php::dolReplaceInFile failed Permission denied to write into target directory \".$newdirdestfile, LOG_WARNING);\n\t\treturn -2;\n\t}\n\n\tdol_delete_file($tmpdestfile);\n\n\t// Create $newpathoftmpdestfile from $newpathofsrcfile\n\t$content = file_get_contents($newpathofsrcfile, 'r');\n\n\tif (empty($arrayreplacementisregex)) {\n\t\t$content = make_substitutions($content, $arrayreplacement, null);\n\t} else {\n\t\tforeach ($arrayreplacement as $key => $value) {\n\t\t\t$content = preg_replace($key, $value, $content);\n\t\t}\n\t}\n\n\tfile_put_contents($newpathoftmpdestfile, $content);\n\t@chmod($newpathoftmpdestfile, octdec($newmask));\n\n\t// Rename\n\t$result = dol_move($newpathoftmpdestfile, $newpathofdestfile, $newmask, (($destfile == $srcfile) ? 1 : 0), 0, $indexdatabase);\n\tif (!$result) {\n\t\tdol_syslog(\"files.lib.php::dolReplaceInFile failed to move tmp file to final dest\", LOG_WARNING);\n\t\treturn -3;\n\t}\n\tif (empty($newmask) && !empty($conf->global->MAIN_UMASK)) {\n\t\t$newmask = $conf->global->MAIN_UMASK;\n\t}\n\tif (empty($newmask)) {\t// This should no happen\n\t\tdol_syslog(\"Warning: dolReplaceInFile called with empty value for newmask and no default value defined\", LOG_WARNING);\n\t\t$newmask = '0664';\n\t}\n\n\t@chmod($newpathofdestfile, octdec($newmask));\n\n\treturn 1;\n}\n\n\n/**\n * Copy a file to another file.\n *\n * @param\tstring\t$srcfile\t\t\tSource file (can't be a directory)\n * @param\tstring\t$destfile\t\t\tDestination file (can't be a directory)\n * @param\tint\t\t$newmask\t\t\tMask for new file (0 by default means $conf->global->MAIN_UMASK). Example: '0666'\n * @param \tint\t\t$overwriteifexists\tOverwrite file if exists (1 by default)\n * @return\tint\t\t\t\t\t\t\t<0 if error, 0 if nothing done (dest file already exists and overwriteifexists=0), >0 if OK\n * @see\t\tdol_delete_file() dolCopyDir()\n */\nfunction dol_copy($srcfile, $destfile, $newmask = 0, $overwriteifexists = 1)\n{\n\tglobal $conf;\n\n\tdol_syslog(\"files.lib.php::dol_copy srcfile=\".$srcfile.\" destfile=\".$destfile.\" newmask=\".$newmask.\" overwriteifexists=\".$overwriteifexists);\n\n\tif (empty($srcfile) || empty($destfile)) {\n\t\treturn -1;\n\t}\n\n\t$destexists = dol_is_file($destfile);\n\tif (!$overwriteifexists && $destexists) {\n\t\treturn 0;\n\t}\n\n\t$newpathofsrcfile = dol_osencode($srcfile);\n\t$newpathofdestfile = dol_osencode($destfile);\n\t$newdirdestfile = dirname($newpathofdestfile);\n\n\tif ($destexists && !is_writable($newpathofdestfile)) {\n\t\tdol_syslog(\"files.lib.php::dol_copy failed Permission denied to overwrite target file\", LOG_WARNING);\n\t\treturn -1;\n\t}\n\tif (!is_writable($newdirdestfile)) {\n\t\tdol_syslog(\"files.lib.php::dol_copy failed Permission denied to write into target directory \".$newdirdestfile, LOG_WARNING);\n\t\treturn -2;\n\t}\n\t// Copy with overwriting if exists\n\t$result = @copy($newpathofsrcfile, $newpathofdestfile);\n\t//$result=copy($newpathofsrcfile, $newpathofdestfile);\t// To see errors, remove @\n\tif (!$result) {\n\t\tdol_syslog(\"files.lib.php::dol_copy failed to copy\", LOG_WARNING);\n\t\treturn -3;\n\t}\n\tif (empty($newmask) && !empty($conf->global->MAIN_UMASK)) {\n\t\t$newmask = $conf->global->MAIN_UMASK;\n\t}\n\tif (empty($newmask)) {\t// This should no happen\n\t\tdol_syslog(\"Warning: dol_copy called with empty value for newmask and no default value defined\", LOG_WARNING);\n\t\t$newmask = '0664';\n\t}\n\n\t@chmod($newpathofdestfile, octdec($newmask));\n\n\treturn 1;\n}\n\n/**\n * Copy a dir to another dir. This include recursive subdirectories.\n *\n * @param\tstring\t$srcfile\t\t\tSource file (a directory)\n * @param\tstring\t$destfile\t\t\tDestination file (a directory)\n * @param\tint\t\t$newmask\t\t\tMask for new file (0 by default means $conf->global->MAIN_UMASK). Example: '0666'\n * @param \tint\t\t$overwriteifexists\tOverwrite file if exists (1 by default)\n * @param\tarray\t$arrayreplacement\tArray to use to replace filenames with another one during the copy (works only on file names, not on directory names).\n * @param\tint\t\t$excludesubdir\t\t0=Do not exclude subdirectories, 1=Exclude subdirectories, 2=Exclude subdirectories if name is not a 2 chars (used for country codes subdirectories).\n * @return\tint\t\t\t\t\t\t\t<0 if error, 0 if nothing done (all files already exists and overwriteifexists=0), >0 if OK\n * @see\t\tdol_copy()\n */\nfunction dolCopyDir($srcfile, $destfile, $newmask, $overwriteifexists, $arrayreplacement = null, $excludesubdir = 0)\n{\n\tglobal $conf;\n\n\t$result = 0;\n\n\tdol_syslog(\"files.lib.php::dolCopyDir srcfile=\".$srcfile.\" destfile=\".$destfile.\" newmask=\".$newmask.\" overwriteifexists=\".$overwriteifexists);\n\n\tif (empty($srcfile) || empty($destfile)) {\n\t\treturn -1;\n\t}\n\n\t$destexists = dol_is_dir($destfile);\n\t//if (! $overwriteifexists && $destexists) return 0;\t// The overwriteifexists is for files only, so propagated to dol_copy only.\n\n\tif (!$destexists) {\n\t\t// We must set mask just before creating dir, becaause it can be set differently by dol_copy\n\t\tumask(0);\n\t\t$dirmaskdec = octdec($newmask);\n\t\tif (empty($newmask) && !empty($conf->global->MAIN_UMASK)) {\n\t\t\t$dirmaskdec = octdec($conf->global->MAIN_UMASK);\n\t\t}\n\t\t$dirmaskdec |= octdec('0200'); // Set w bit required to be able to create content for recursive subdirs files\n\t\tdol_mkdir($destfile, '', decoct($dirmaskdec));\n\t}\n\n\t$ossrcfile = dol_osencode($srcfile);\n\t$osdestfile = dol_osencode($destfile);\n\n\t// Recursive function to copy all subdirectories and contents:\n\tif (is_dir($ossrcfile)) {\n\t\t$dir_handle = opendir($ossrcfile);\n\t\twhile ($file = readdir($dir_handle)) {\n\t\t\tif ($file != \".\" && $file != \"..\" && !is_link($ossrcfile.\"/\".$file)) {\n\t\t\t\tif (is_dir($ossrcfile.\"/\".$file)) {\n\t\t\t\t\tif (empty($excludesubdir) || ($excludesubdir == 2 && strlen($file) == 2)) {\n\t\t\t\t\t\t$newfile = $file;\n\t\t\t\t\t\t// Replace destination filename with a new one\n\t\t\t\t\t\tif (is_array($arrayreplacement)) {\n\t\t\t\t\t\t\tforeach ($arrayreplacement as $key => $val) {\n\t\t\t\t\t\t\t\t$newfile = str_replace($key, $val, $newfile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//var_dump(\"xxx dolCopyDir $srcfile/$file, $destfile/$file, $newmask, $overwriteifexists\");\n\t\t\t\t\t\t$tmpresult = dolCopyDir($srcfile.\"/\".$file, $destfile.\"/\".$newfile, $newmask, $overwriteifexists, $arrayreplacement, $excludesubdir);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$newfile = $file;\n\t\t\t\t\t// Replace destination filename with a new one\n\t\t\t\t\tif (is_array($arrayreplacement)) {\n\t\t\t\t\t\tforeach ($arrayreplacement as $key => $val) {\n\t\t\t\t\t\t\t$newfile = str_replace($key, $val, $newfile);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$tmpresult = dol_copy($srcfile.\"/\".$file, $destfile.\"/\".$newfile, $newmask, $overwriteifexists);\n\t\t\t\t}\n\t\t\t\t// Set result\n\t\t\t\tif ($result > 0 && $tmpresult >= 0) {\n\t\t\t\t\t// Do nothing, so we don't set result to 0 if tmpresult is 0 and result was success in a previous pass\n\t\t\t\t} else {\n\t\t\t\t\t$result = $tmpresult;\n\t\t\t\t}\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tclosedir($dir_handle);\n\t} else {\n\t\t// Source directory does not exists\n\t\t$result = -2;\n\t}\n\n\treturn $result;\n}\n\n\n/**\n * Move a file into another name.\n * Note:\n *  - This function differs from dol_move_uploaded_file, because it can be called in any context.\n *  - Database indexes for files are updated.\n *  - Test on antivirus is done only if param testvirus is provided and an antivirus was set.\n *\n * @param\tstring  $srcfile            Source file (can't be a directory. use native php @rename() to move a directory)\n * @param   string\t$destfile           Destination file (can't be a directory. use native php @rename() to move a directory)\n * @param   integer\t$newmask            Mask in octal string for new file (0 by default means $conf->global->MAIN_UMASK)\n * @param   int\t\t$overwriteifexists  Overwrite file if exists (1 by default)\n * @param   int     $testvirus          Do an antivirus test. Move is canceled if a virus is found.\n * @param\tint\t\t$indexdatabase\t\tIndex new file into database.\n * @return  boolean \t\t            True if OK, false if KO\n * @see dol_move_uploaded_file()\n */\nfunction dol_move($srcfile, $destfile, $newmask = 0, $overwriteifexists = 1, $testvirus = 0, $indexdatabase = 1)\n{\n\tglobal $user, $db, $conf;\n\t$result = false;\n\n\tdol_syslog(\"files.lib.php::dol_move srcfile=\".$srcfile.\" destfile=\".$destfile.\" newmask=\".$newmask.\" overwritifexists=\".$overwriteifexists);\n\t$srcexists = dol_is_file($srcfile);\n\t$destexists = dol_is_file($destfile);\n\n\tif (!$srcexists) {\n\t\tdol_syslog(\"files.lib.php::dol_move srcfile does not exists. we ignore the move request.\");\n\t\treturn false;\n\t}\n\n\tif ($overwriteifexists || !$destexists) {\n\t\t$newpathofsrcfile = dol_osencode($srcfile);\n\t\t$newpathofdestfile = dol_osencode($destfile);\n\n\t\t// Check virus\n\t\t$testvirusarray = array();\n\t\tif ($testvirus) {\n\t\t\t$testvirusarray = dolCheckVirus($newpathofsrcfile);\n\t\t\tif (count($testvirusarray)) {\n\t\t\t\tdol_syslog(\"files.lib.php::dol_move canceled because a virus was found into source file. we ignore the move request.\", LOG_WARNING);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t$result = @rename($newpathofsrcfile, $newpathofdestfile); // To see errors, remove @\n\t\tif (!$result) {\n\t\t\tif ($destexists) {\n\t\t\t\tdol_syslog(\"files.lib.php::dol_move Failed. We try to delete target first and move after.\", LOG_WARNING);\n\t\t\t\t// We force delete and try again. Rename function sometimes fails to replace dest file with some windows NTFS partitions.\n\t\t\t\tdol_delete_file($destfile);\n\t\t\t\t$result = @rename($newpathofsrcfile, $newpathofdestfile); // To see errors, remove @\n\t\t\t} else {\n\t\t\t\tdol_syslog(\"files.lib.php::dol_move Failed.\", LOG_WARNING);\n\t\t\t}\n\t\t}\n\n\t\t// Move ok\n\t\tif ($result && $indexdatabase) {\n\t\t\t// Rename entry into ecm database\n\t\t\t$rel_filetorenamebefore = preg_replace('/^'.preg_quote(DOL_DATA_ROOT, '/').'/', '', $srcfile);\n\t\t\t$rel_filetorenameafter = preg_replace('/^'.preg_quote(DOL_DATA_ROOT, '/').'/', '', $destfile);\n\t\t\tif (!preg_match('/([\\\\/]temp[\\\\/]|[\\\\/]thumbs|\\.meta$)/', $rel_filetorenameafter)) {     // If not a tmp file\n\t\t\t\t$rel_filetorenamebefore = preg_replace('/^[\\\\/]/', '', $rel_filetorenamebefore);\n\t\t\t\t$rel_filetorenameafter = preg_replace('/^[\\\\/]/', '', $rel_filetorenameafter);\n\t\t\t\t//var_dump($rel_filetorenamebefore.' - '.$rel_filetorenameafter);exit;\n\n\t\t\t\tdol_syslog(\"Try to rename also entries in database for full relative path before = \".$rel_filetorenamebefore.\" after = \".$rel_filetorenameafter, LOG_DEBUG);\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/ecm/class/ecmfiles.class.php';\n\n\t\t\t\t$ecmfiletarget = new EcmFiles($db);\n\t\t\t\t$resultecmtarget = $ecmfiletarget->fetch(0, '', $rel_filetorenameafter);\n\t\t\t\tif ($resultecmtarget > 0) {   // An entry for target name already exists for target, we delete it, a new one will be created.\n\t\t\t\t\t$ecmfiletarget->delete($user);\n\t\t\t\t}\n\n\t\t\t\t$ecmfile = new EcmFiles($db);\n\t\t\t\t$resultecm = $ecmfile->fetch(0, '', $rel_filetorenamebefore);\n\t\t\t\tif ($resultecm > 0) {   // If an entry was found for src file, we use it to move entry\n\t\t\t\t\t$filename = basename($rel_filetorenameafter);\n\t\t\t\t\t$rel_dir = dirname($rel_filetorenameafter);\n\t\t\t\t\t$rel_dir = preg_replace('/[\\\\/]$/', '', $rel_dir);\n\t\t\t\t\t$rel_dir = preg_replace('/^[\\\\/]/', '', $rel_dir);\n\n\t\t\t\t\t$ecmfile->filepath = $rel_dir;\n\t\t\t\t\t$ecmfile->filename = $filename;\n\n\t\t\t\t\t$resultecm = $ecmfile->update($user);\n\t\t\t\t} elseif ($resultecm == 0) {   // If no entry were found for src files, create/update target file\n\t\t\t\t\t$filename = basename($rel_filetorenameafter);\n\t\t\t\t\t$rel_dir = dirname($rel_filetorenameafter);\n\t\t\t\t\t$rel_dir = preg_replace('/[\\\\/]$/', '', $rel_dir);\n\t\t\t\t\t$rel_dir = preg_replace('/^[\\\\/]/', '', $rel_dir);\n\n\t\t\t\t\t$ecmfile->filepath = $rel_dir;\n\t\t\t\t\t$ecmfile->filename = $filename;\n\t\t\t\t\t$ecmfile->label = md5_file(dol_osencode($destfile)); // $destfile is a full path to file\n\t\t\t\t\t$ecmfile->fullpath_orig = $srcfile;\n\t\t\t\t\t$ecmfile->gen_or_uploaded = 'unknown';\n\t\t\t\t\t$ecmfile->description = ''; // indexed content\n\t\t\t\t\t$ecmfile->keywords = ''; // keyword content\n\t\t\t\t\t$resultecm = $ecmfile->create($user);\n\t\t\t\t\tif ($resultecm < 0) {\n\t\t\t\t\t\tsetEventMessages($ecmfile->error, $ecmfile->errors, 'warnings');\n\t\t\t\t\t}\n\t\t\t\t} elseif ($resultecm < 0) {\n\t\t\t\t\tsetEventMessages($ecmfile->error, $ecmfile->errors, 'warnings');\n\t\t\t\t}\n\n\t\t\t\tif ($resultecm > 0) {\n\t\t\t\t\t$result = true;\n\t\t\t\t} else {\n\t\t\t\t\t$result = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (empty($newmask)) {\n\t\t\t$newmask = empty($conf->global->MAIN_UMASK) ? '0755' : $conf->global->MAIN_UMASK;\n\t\t}\n\t\t$newmaskdec = octdec($newmask);\n\t\t// Currently method is restricted to files (dol_delete_files previously used is for files, and mask usage if for files too)\n\t\t// to allow mask usage for dir, we shoul introduce a new param \"isdir\" to 1 to complete newmask like this\n\t\t// if ($isdir) $newmaskdec |= octdec('0111');  // Set x bit required for directories\n\t\t@chmod($newpathofdestfile, $newmaskdec);\n\t}\n\n\treturn $result;\n}\n\n/**\n *\tUnescape a file submitted by upload.\n *  PHP escape char \" (%22) or char ' (%27) into $FILES.\n *\n *\t@param\tstring\t$filename\t\tFilename\n *\t@return\tstring\t\t\t\t\tFilename sanitized\n */\nfunction dol_unescapefile($filename)\n{\n\t// Remove path information and dots around the filename, to prevent uploading\n\t// into different directories or replacing hidden system files.\n\t// Also remove control characters and spaces (\\x00..\\x20) around the filename:\n\treturn trim(basename($filename), \".\\x00..\\x20\");\n}\n\n\n/**\n * Check virus into a file\n *\n * @param   string      $src_file       Source file to check\n * @return  array                       Array of errors or empty array if not virus found\n */\nfunction dolCheckVirus($src_file)\n{\n\tglobal $conf;\n\n\tif (!empty($conf->global->MAIN_ANTIVIRUS_COMMAND)) {\n\t\tif (!class_exists('AntiVir')) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/antivir.class.php';\n\t\t}\n\t\t$antivir = new AntiVir($db);\n\t\t$result = $antivir->dol_avscan_file($src_file);\n\t\tif ($result < 0) {\t// If virus or error, we stop here\n\t\t\t$reterrors = $antivir->errors;\n\t\t\treturn $reterrors;\n\t\t}\n\t}\n\treturn array();\n}\n\n\n/**\n *\tMake control on an uploaded file from an GUI page and move it to final destination.\n * \tIf there is errors (virus found, antivir in error, bad filename), file is not moved.\n *  Note:\n *  - This function can be used only into a HTML page context. Use dol_move if you are outside.\n *  - Test on antivirus is always done (if antivirus set).\n *  - Database of files is NOT updated (this is done by dol_add_file_process() that calls this function).\n *  - Extension .noexe may be added if file is executable and MAIN_DOCUMENT_IS_OUTSIDE_WEBROOT_SO_NOEXE_NOT_REQUIRED is not set.\n *\n *\t@param\tstring\t$src_file\t\t\tSource full path filename ($_FILES['field']['tmp_name'])\n *\t@param\tstring\t$dest_file\t\t\tTarget full path filename  ($_FILES['field']['name'])\n * \t@param\tint\t\t$allowoverwrite\t\t1=Overwrite target file if it already exists\n * \t@param\tint\t\t$disablevirusscan\t1=Disable virus scan\n * \t@param\tinteger\t$uploaderrorcode\tValue of PHP upload error code ($_FILES['field']['error'])\n * \t@param\tint\t\t$nohook\t\t\t\tDisable all hooks\n * \t@param\tstring\t$varfiles\t\t\t_FILES var name\n *  @param\tstring\t$upload_dir\t\t\tFor information. Already included into $dest_file.\n *\t@return int|string       \t\t\t1 if OK, 2 if OK and .noexe appended, <0 or string if KO\n *  @see    dol_move()\n */\nfunction dol_move_uploaded_file($src_file, $dest_file, $allowoverwrite, $disablevirusscan = 0, $uploaderrorcode = 0, $nohook = 0, $varfiles = 'addedfile', $upload_dir = '')\n{\n\tglobal $conf, $db, $user, $langs;\n\tglobal $object, $hookmanager;\n\n\t$reshook = 0;\n\t$file_name = $dest_file;\n\t$successcode = 1;\n\n\tif (empty($nohook)) {\n\t\t$reshook = $hookmanager->initHooks(array('fileslib'));\n\n\t\t$parameters = array('dest_file' => $dest_file, 'src_file' => $src_file, 'file_name' => $file_name, 'varfiles' => $varfiles, 'allowoverwrite' => $allowoverwrite);\n\t\t$reshook = $hookmanager->executeHooks('moveUploadedFile', $parameters, $object);\n\t}\n\n\tif (empty($reshook)) {\n\t\t// If an upload error has been reported\n\t\tif ($uploaderrorcode) {\n\t\t\tswitch ($uploaderrorcode) {\n\t\t\t\tcase UPLOAD_ERR_INI_SIZE:\t// 1\n\t\t\t\t\treturn 'ErrorFileSizeTooLarge';\n\t\t\t\tcase UPLOAD_ERR_FORM_SIZE:\t// 2\n\t\t\t\t\treturn 'ErrorFileSizeTooLarge';\n\t\t\t\tcase UPLOAD_ERR_PARTIAL:\t// 3\n\t\t\t\t\treturn 'ErrorPartialFile';\n\t\t\t\tcase UPLOAD_ERR_NO_TMP_DIR:\t//\n\t\t\t\t\treturn 'ErrorNoTmpDir';\n\t\t\t\tcase UPLOAD_ERR_CANT_WRITE:\n\t\t\t\t\treturn 'ErrorFailedToWriteInDir';\n\t\t\t\tcase UPLOAD_ERR_EXTENSION:\n\t\t\t\t\treturn 'ErrorUploadBlockedByAddon';\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If we need to make a virus scan\n\t\tif (empty($disablevirusscan) && file_exists($src_file)) {\n\t\t\t$checkvirusarray = dolCheckVirus($src_file);\n\t\t\tif (count($checkvirusarray)) {\n\t\t\t\tdol_syslog('Files.lib::dol_move_uploaded_file File \"'.$src_file.'\" (target name \"'.$dest_file.'\") KO with antivirus: errors='.join(',', $checkvirusarray), LOG_WARNING);\n\t\t\t\treturn 'ErrorFileIsInfectedWithAVirus: '.join(',', $checkvirusarray);\n\t\t\t}\n\t\t}\n\n\t\t// Security:\n\t\t// Disallow file with some extensions. We rename them.\n\t\t// Because if we put the documents directory into a directory inside web root (very bad), this allows to execute on demand arbitrary code.\n\t\tif (isAFileWithExecutableContent($dest_file) && empty($conf->global->MAIN_DOCUMENT_IS_OUTSIDE_WEBROOT_SO_NOEXE_NOT_REQUIRED)) {\n\t\t\t// $upload_dir ends with a slash, so be must be sure the medias dir to compare to ends with slash too.\n\t\t\t$publicmediasdirwithslash = $conf->medias->multidir_output[$conf->entity];\n\t\t\tif (!preg_match('/\\/$/', $publicmediasdirwithslash)) {\n\t\t\t\t$publicmediasdirwithslash .= '/';\n\t\t\t}\n\n\t\t\tif (strpos($upload_dir, $publicmediasdirwithslash) !== 0) {\t// We never add .noexe on files into media directory\n\t\t\t\t$file_name .= '.noexe';\n\t\t\t\t$successcode = 2;\n\t\t\t}\n\t\t}\n\n\t\t// Security:\n\t\t// We refuse cache files/dirs, upload using .. and pipes into filenames.\n\t\tif (preg_match('/^\\./', basename($src_file)) || preg_match('/\\.\\./', $src_file) || preg_match('/[<>|]/', $src_file)) {\n\t\t\tdol_syslog(\"Refused to deliver file \".$src_file, LOG_WARNING);\n\t\t\treturn -1;\n\t\t}\n\n\t\t// Security:\n\t\t// We refuse cache files/dirs, upload using .. and pipes into filenames.\n\t\tif (preg_match('/^\\./', basename($dest_file)) || preg_match('/\\.\\./', $dest_file) || preg_match('/[<>|]/', $dest_file)) {\n\t\t\tdol_syslog(\"Refused to deliver file \".$dest_file, LOG_WARNING);\n\t\t\treturn -2;\n\t\t}\n\t}\n\n\tif ($reshook < 0) {\t// At least one blocking error returned by one hook\n\t\t$errmsg = join(',', $hookmanager->errors);\n\t\tif (empty($errmsg)) {\n\t\t\t$errmsg = 'ErrorReturnedBySomeHooks'; // Should not occurs. Added if hook is bugged and does not set ->errors when there is error.\n\t\t}\n\t\treturn $errmsg;\n\t} elseif (empty($reshook)) {\n\t\t// The file functions must be in OS filesystem encoding.\n\t\t$src_file_osencoded = dol_osencode($src_file);\n\t\t$file_name_osencoded = dol_osencode($file_name);\n\n\t\t// Check if destination dir is writable\n\t\tif (!is_writable(dirname($file_name_osencoded))) {\n\t\t\tdol_syslog(\"Files.lib::dol_move_uploaded_file Dir \".dirname($file_name_osencoded).\" is not writable. Return 'ErrorDirNotWritable'\", LOG_WARNING);\n\t\t\treturn 'ErrorDirNotWritable';\n\t\t}\n\n\t\t// Check if destination file already exists\n\t\tif (!$allowoverwrite) {\n\t\t\tif (file_exists($file_name_osencoded)) {\n\t\t\t\tdol_syslog(\"Files.lib::dol_move_uploaded_file File \".$file_name.\" already exists. Return 'ErrorFileAlreadyExists'\", LOG_WARNING);\n\t\t\t\treturn 'ErrorFileAlreadyExists';\n\t\t\t}\n\t\t} else {\t// We are allowed to erase\n\t\t\tif (is_dir($file_name_osencoded)) {\t// If there is a directory with name of file to create\n\t\t\t\tdol_syslog(\"Files.lib::dol_move_uploaded_file A directory with name \".$file_name.\" already exists. Return 'ErrorDirWithFileNameAlreadyExists'\", LOG_WARNING);\n\t\t\t\treturn 'ErrorDirWithFileNameAlreadyExists';\n\t\t\t}\n\t\t}\n\n\t\t// Move file\n\t\t$return = move_uploaded_file($src_file_osencoded, $file_name_osencoded);\n\t\tif ($return) {\n\t\t\tif (!empty($conf->global->MAIN_UMASK)) {\n\t\t\t\t@chmod($file_name_osencoded, octdec($conf->global->MAIN_UMASK));\n\t\t\t}\n\t\t\tdol_syslog(\"Files.lib::dol_move_uploaded_file Success to move \".$src_file.\" to \".$file_name.\" - Umask=\".$conf->global->MAIN_UMASK, LOG_DEBUG);\n\t\t\treturn $successcode; // Success\n\t\t} else {\n\t\t\tdol_syslog(\"Files.lib::dol_move_uploaded_file Failed to move \".$src_file.\" to \".$file_name, LOG_ERR);\n\t\t\treturn -3; // Unknown error\n\t\t}\n\t}\n\n\treturn $successcode; // Success\n}\n\n/**\n *  Remove a file or several files with a mask.\n *  This delete file physically but also database indexes.\n *\n *  @param\tstring\t$file           File to delete or mask of files to delete\n *  @param  int\t\t$disableglob    Disable usage of glob like * so function is an exact delete function that will return error if no file found\n *  @param  int\t\t$nophperrors    Disable all PHP output errors\n *  @param\tint\t\t$nohook\t\t\tDisable all hooks\n *  @param\tobject\t$object\t\t\tCurrent object in use\n *  @param\tboolean\t$allowdotdot\tAllow to delete file path with .. inside. Never use this, it is reserved for migration purpose.\n *  @param\tint\t\t$indexdatabase\tTry to remove also index entries.\n *  @param\tint\t\t$nolog\t\t\tDisable log file\n *  @return boolean         \t\tTrue if no error (file is deleted or if glob is used and there's nothing to delete), False if error\n *  @see dol_delete_dir()\n */\nfunction dol_delete_file($file, $disableglob = 0, $nophperrors = 0, $nohook = 0, $object = null, $allowdotdot = false, $indexdatabase = 1, $nolog = 0)\n{\n\tglobal $db, $conf, $user, $langs;\n\tglobal $hookmanager;\n\n\t// Load translation files required by the page\n\t$langs->loadLangs(array('other', 'errors'));\n\n\tif (empty($nolog)) {\n\t\tdol_syslog(\"dol_delete_file file=\".$file.\" disableglob=\".$disableglob.\" nophperrors=\".$nophperrors.\" nohook=\".$nohook);\n\t}\n\n\t// Security:\n\t// We refuse transversal using .. and pipes into filenames.\n\tif ((!$allowdotdot && preg_match('/\\.\\./', $file)) || preg_match('/[<>|]/', $file)) {\n\t\tdol_syslog(\"Refused to delete file \".$file, LOG_WARNING);\n\t\treturn false;\n\t}\n\n\t$reshook = 0;\n\tif (empty($nohook)) {\n\t\t$hookmanager->initHooks(array('fileslib'));\n\n\t\t$parameters = array(\n\t\t\t'GET' => $_GET,\n\t\t\t'file' => $file,\n\t\t\t'disableglob'=> $disableglob,\n\t\t\t'nophperrors' => $nophperrors\n\t\t);\n\t\t$reshook = $hookmanager->executeHooks('deleteFile', $parameters, $object);\n\t}\n\n\tif (empty($nohook) && $reshook != 0) { // reshook = 0 to do standard actions, 1 = ok and replace, -1 = ko\n\t\tdol_syslog(\"reshook=\".$reshook);\n\t\tif ($reshook < 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} else {\n\t\t$file_osencoded = dol_osencode($file); // New filename encoded in OS filesystem encoding charset\n\t\tif (empty($disableglob) && !empty($file_osencoded)) {\n\t\t\t$ok = true;\n\t\t\t$globencoded = str_replace('[', '\\[', $file_osencoded);\n\t\t\t$globencoded = str_replace(']', '\\]', $globencoded);\n\t\t\t$listofdir = glob($globencoded);\n\t\t\tif (!empty($listofdir) && is_array($listofdir)) {\n\t\t\t\tforeach ($listofdir as $filename) {\n\t\t\t\t\tif ($nophperrors) {\n\t\t\t\t\t\t$ok = @unlink($filename);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$ok = unlink($filename);\n\t\t\t\t\t}\n\n\t\t\t\t\t// If it fails and it is because of the missing write permission on parent dir\n\t\t\t\t\tif (!$ok && file_exists(dirname($filename)) && !(fileperms(dirname($filename)) & 0200)) {\n\t\t\t\t\t\tdol_syslog(\"Error in deletion, but parent directory exists with no permission to write, we try to change permission on parent directory and retry...\", LOG_DEBUG);\n\t\t\t\t\t\t@chmod(dirname($filename), fileperms(dirname($filename)) | 0200);\n\t\t\t\t\t\t// Now we retry deletion\n\t\t\t\t\t\tif ($nophperrors) {\n\t\t\t\t\t\t\t$ok = @unlink($filename);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$ok = unlink($filename);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($ok) {\n\t\t\t\t\t\tif (empty($nolog)) {\n\t\t\t\t\t\t\tdol_syslog(\"Removed file \".$filename, LOG_DEBUG);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Delete entry into ecm database\n\t\t\t\t\t\t$rel_filetodelete = preg_replace('/^'.preg_quote(DOL_DATA_ROOT, '/').'/', '', $filename);\n\t\t\t\t\t\tif (!preg_match('/(\\/temp\\/|\\/thumbs\\/|\\.meta$)/', $rel_filetodelete)) {     // If not a tmp file\n\t\t\t\t\t\t\tif (is_object($db) && $indexdatabase) {\t\t// $db may not be defined when lib is in a context with define('NOREQUIREDB',1)\n\t\t\t\t\t\t\t\t$rel_filetodelete = preg_replace('/^[\\\\/]/', '', $rel_filetodelete);\n\t\t\t\t\t\t\t\t$rel_filetodelete = preg_replace('/\\.noexe$/', '', $rel_filetodelete);\n\n\t\t\t\t\t\t\t\tdol_syslog(\"Try to remove also entries in database for full relative path = \".$rel_filetodelete, LOG_DEBUG);\n\t\t\t\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/ecm/class/ecmfiles.class.php';\n\t\t\t\t\t\t\t\t$ecmfile = new EcmFiles($db);\n\t\t\t\t\t\t\t\t$result = $ecmfile->fetch(0, '', $rel_filetodelete);\n\t\t\t\t\t\t\t\tif ($result >= 0 && $ecmfile->id > 0) {\n\t\t\t\t\t\t\t\t\t$result = $ecmfile->delete($user);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t\t\t\tsetEventMessages($ecmfile->error, $ecmfile->errors, 'warnings');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdol_syslog(\"Failed to remove file \".$filename, LOG_WARNING);\n\t\t\t\t\t\t// TODO Failure to remove can be because file was already removed or because of permission\n\t\t\t\t\t\t// If error because it does not exists, we should return true, and we should return false if this is a permission problem\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdol_syslog(\"No files to delete found\", LOG_DEBUG);\n\t\t\t}\n\t\t} else {\n\t\t\t$ok = false;\n\t\t\tif ($nophperrors) {\n\t\t\t\t$ok = @unlink($file_osencoded);\n\t\t\t} else {\n\t\t\t\t$ok = unlink($file_osencoded);\n\t\t\t}\n\t\t\tif ($ok) {\n\t\t\t\tif (empty($nolog)) {\n\t\t\t\t\tdol_syslog(\"Removed file \".$file_osencoded, LOG_DEBUG);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdol_syslog(\"Failed to remove file \".$file_osencoded, LOG_WARNING);\n\t\t\t}\n\t\t}\n\n\t\treturn $ok;\n\t}\n}\n\n/**\n *  Remove a directory (not recursive, so content must be empty).\n *  If directory is not empty, return false\n *\n *  @param\tstring\t$dir            Directory to delete\n *  @param  int\t\t$nophperrors    Disable all PHP output errors\n *  @return boolean         \t\tTrue if success, false if error\n *  @see dol_delete_file() dolCopyDir()\n */\nfunction dol_delete_dir($dir, $nophperrors = 0)\n{\n\t// Security:\n\t// We refuse transversal using .. and pipes into filenames.\n\tif (preg_match('/\\.\\./', $dir) || preg_match('/[<>|]/', $dir)) {\n\t\tdol_syslog(\"Refused to delete dir \".$dir, LOG_WARNING);\n\t\treturn false;\n\t}\n\n\t$dir_osencoded = dol_osencode($dir);\n\treturn ($nophperrors ? @rmdir($dir_osencoded) : rmdir($dir_osencoded));\n}\n\n/**\n *  Remove a directory $dir and its subdirectories (or only files and subdirectories)\n *\n *  @param\tstring\t$dir            Dir to delete\n *  @param  int\t\t$count          Counter to count nb of elements found to delete\n *  @param  int\t\t$nophperrors    Disable all PHP output errors\n *  @param\tint\t\t$onlysub\t\tDelete only files and subdir, not main directory\n *  @param  int\t\t$countdeleted   Counter to count nb of elements found really deleted\n *  @param\tint\t\t$indexdatabase\tTry to remove also index entries.\n *  @param\tint\t\t$nolog\t\t\tDisable log files (too verbose when making recursive directories)\n *  @return int             \t\tNumber of files and directory we try to remove. NB really removed is returned into var by reference $countdeleted.\n */\nfunction dol_delete_dir_recursive($dir, $count = 0, $nophperrors = 0, $onlysub = 0, &$countdeleted = 0, $indexdatabase = 1, $nolog = 0)\n{\n\tif (empty($nolog)) {\n\t\tdol_syslog(\"functions.lib:dol_delete_dir_recursive \".$dir, LOG_DEBUG);\n\t}\n\tif (dol_is_dir($dir)) {\n\t\t$dir_osencoded = dol_osencode($dir);\n\t\tif ($handle = opendir(\"$dir_osencoded\")) {\n\t\t\twhile (false !== ($item = readdir($handle))) {\n\t\t\t\tif (!utf8_check($item)) {\n\t\t\t\t\t$item = utf8_encode($item); // should be useless\n\t\t\t\t}\n\n\t\t\t\tif ($item != \".\" && $item != \"..\") {\n\t\t\t\t\tif (is_dir(dol_osencode(\"$dir/$item\")) && !is_link(dol_osencode(\"$dir/$item\"))) {\n\t\t\t\t\t\t$count = dol_delete_dir_recursive(\"$dir/$item\", $count, $nophperrors, 0, $countdeleted, $indexdatabase, $nolog);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$result = dol_delete_file(\"$dir/$item\", 1, $nophperrors, 0, null, false, $indexdatabase, $nolog);\n\t\t\t\t\t\t$count++;\n\t\t\t\t\t\tif ($result) {\n\t\t\t\t\t\t\t$countdeleted++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//else print 'Error on '.$item.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tclosedir($handle);\n\n\t\t\t// Delete also the main directory\n\t\t\tif (empty($onlysub)) {\n\t\t\t\t$result = dol_delete_dir($dir, $nophperrors);\n\t\t\t\t$count++;\n\t\t\t\tif ($result) {\n\t\t\t\t\t$countdeleted++;\n\t\t\t\t}\n\t\t\t\t//else print 'Error on '.$dir.\"\\n\";\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $count;\n}\n\n\n/**\n *  Delete all preview files linked to object instance.\n *  Note that preview image of PDF files is generated when required, by dol_banner_tab() for example.\n *\n *  @param\tobject\t$object\t\tObject to clean\n *  @return\tint\t\t\t\t\t0 if error, 1 if OK\n *  @see dol_convert_file()\n */\nfunction dol_delete_preview($object)\n{\n\tglobal $langs, $conf;\n\n\t// Define parent dir of elements\n\t$element = $object->element;\n\n\tif ($object->element == 'order_supplier') {\n\t\t$dir = $conf->fournisseur->commande->dir_output;\n\t} elseif ($object->element == 'invoice_supplier') {\n\t\t$dir = $conf->fournisseur->facture->dir_output;\n\t} elseif ($object->element == 'project') {\n\t\t$dir = $conf->projet->dir_output;\n\t} elseif ($object->element == 'shipping') {\n\t\t$dir = $conf->expedition->dir_output.'/sending';\n\t} elseif ($object->element == 'delivery') {\n\t\t$dir = $conf->expedition->dir_output.'/receipt';\n\t} elseif ($object->element == 'fichinter') {\n\t\t$dir = $conf->ficheinter->dir_output;\n\t} else {\n\t\t$dir = empty($conf->$element->dir_output) ? '' : $conf->$element->dir_output;\n\t}\n\n\tif (empty($dir)) {\n\t\treturn 'ErrorObjectNoSupportedByFunction';\n\t}\n\n\t$refsan = dol_sanitizeFileName($object->ref);\n\t$dir = $dir.\"/\".$refsan;\n\t$filepreviewnew = $dir.\"/\".$refsan.\".pdf_preview.png\";\n\t$filepreviewnewbis = $dir.\"/\".$refsan.\".pdf_preview-0.png\";\n\t$filepreviewold = $dir.\"/\".$refsan.\".pdf.png\";\n\n\t// For new preview files\n\tif (file_exists($filepreviewnew) && is_writable($filepreviewnew)) {\n\t\tif (!dol_delete_file($filepreviewnew, 1)) {\n\t\t\t$object->error = $langs->trans(\"ErrorFailedToDeleteFile\", $filepreviewnew);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif (file_exists($filepreviewnewbis) && is_writable($filepreviewnewbis)) {\n\t\tif (!dol_delete_file($filepreviewnewbis, 1)) {\n\t\t\t$object->error = $langs->trans(\"ErrorFailedToDeleteFile\", $filepreviewnewbis);\n\t\t\treturn 0;\n\t\t}\n\t}\n\t// For old preview files\n\tif (file_exists($filepreviewold) && is_writable($filepreviewold)) {\n\t\tif (!dol_delete_file($filepreviewold, 1)) {\n\t\t\t$object->error = $langs->trans(\"ErrorFailedToDeleteFile\", $filepreviewold);\n\t\t\treturn 0;\n\t\t}\n\t} else {\n\t\t$multiple = $filepreviewold.\".\";\n\t\tfor ($i = 0; $i < 20; $i++) {\n\t\t\t$preview = $multiple.$i;\n\n\t\t\tif (file_exists($preview) && is_writable($preview)) {\n\t\t\t\tif (!dol_delete_file($preview, 1)) {\n\t\t\t\t\t$object->error = $langs->trans(\"ErrorFailedToOpenFile\", $preview);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 1;\n}\n\n/**\n *\tCreate a meta file with document file into same directory.\n *\tThis make \"grep\" search possible.\n *  This feature to generate the meta file is enabled only if option MAIN_DOC_CREATE_METAFILE is set.\n *\n *\t@param\tCommonObject\t$object\t\tObject\n *\t@return\tint\t\t\t\t\t\t\t0 if do nothing, >0 if we update meta file too, <0 if KO\n */\nfunction dol_meta_create($object)\n{\n\tglobal $conf;\n\n\t// Create meta file\n\tif (empty($conf->global->MAIN_DOC_CREATE_METAFILE)) {\n\t\treturn 0; // By default, no metafile.\n\t}\n\n\t// Define parent dir of elements\n\t$element = $object->element;\n\n\tif ($object->element == 'order_supplier') {\n\t\t$dir = $conf->fournisseur->dir_output.'/commande';\n\t} elseif ($object->element == 'invoice_supplier') {\n\t\t$dir = $conf->fournisseur->dir_output.'/facture';\n\t} elseif ($object->element == 'project') {\n\t\t$dir = $conf->projet->dir_output;\n\t} elseif ($object->element == 'shipping') {\n\t\t$dir = $conf->expedition->dir_output.'/sending';\n\t} elseif ($object->element == 'delivery') {\n\t\t$dir = $conf->expedition->dir_output.'/receipt';\n\t} elseif ($object->element == 'fichinter') {\n\t\t$dir = $conf->ficheinter->dir_output;\n\t} else {\n\t\t$dir = empty($conf->$element->dir_output) ? '' : $conf->$element->dir_output;\n\t}\n\n\tif ($dir) {\n\t\t$object->fetch_thirdparty();\n\n\t\t$objectref = dol_sanitizeFileName($object->ref);\n\t\t$dir = $dir.\"/\".$objectref;\n\t\t$file = $dir.\"/\".$objectref.\".meta\";\n\n\t\tif (!is_dir($dir)) {\n\t\t\tdol_mkdir($dir);\n\t\t}\n\n\t\tif (is_dir($dir)) {\n\t\t\t$nblines = count($object->lines);\n\t\t\t$client = $object->thirdparty->name.\" \".$object->thirdparty->address.\" \".$object->thirdparty->zip.\" \".$object->thirdparty->town;\n\t\t\t$meta = \"REFERENCE=\\\"\".$object->ref.\"\\\"\n\t\t\tDATE=\\\"\" . dol_print_date($object->date, '').\"\\\"\n\t\t\tNB_ITEMS=\\\"\" . $nblines.\"\\\"\n\t\t\tCLIENT=\\\"\" . $client.\"\\\"\n\t\t\tAMOUNT_EXCL_TAX=\\\"\" . $object->total_ht.\"\\\"\n\t\t\tAMOUNT=\\\"\" . $object->total_ttc.\"\\\"\\n\";\n\n\t\t\tfor ($i = 0; $i < $nblines; $i++) {\n\t\t\t\t//Pour les articles\n\t\t\t\t$meta .= \"ITEM_\".$i.\"_QUANTITY=\\\"\".$object->lines[$i]->qty.\"\\\"\n\t\t\t\tITEM_\" . $i.\"_AMOUNT_WO_TAX=\\\"\".$object->lines[$i]->total_ht.\"\\\"\n\t\t\t\tITEM_\" . $i.\"_VAT=\\\"\".$object->lines[$i]->tva_tx.\"\\\"\n\t\t\t\tITEM_\" . $i.\"_DESCRIPTION=\\\"\".str_replace(\"\\r\\n\", \"\", nl2br($object->lines[$i]->desc)).\"\\\"\n\t\t\t\t\";\n\t\t\t}\n\t\t}\n\n\t\t$fp = fopen($file, \"w\");\n\t\tfputs($fp, $meta);\n\t\tfclose($fp);\n\t\tif (!empty($conf->global->MAIN_UMASK)) {\n\t\t\t@chmod($file, octdec($conf->global->MAIN_UMASK));\n\t\t}\n\n\t\t\treturn 1;\n\t} else {\n\t\tdol_syslog('FailedToDetectDirInDolMetaCreateFor'.$object->element, LOG_WARNING);\n\t}\n\n\treturn 0;\n}\n\n\n\n/**\n * Scan a directory and init $_SESSION to manage uploaded files with list of all found files.\n * Note: Only email module seems to use this. Other feature initialize the $_SESSION doing $formmail->clear_attached_files(); $formmail->add_attached_files()\n *\n * @param\tstring\t$pathtoscan\t\t\t\tPath to scan\n * @param   string  $trackid                Track id (used to prefix name of session vars to avoid conflict)\n * @return\tvoid\n */\nfunction dol_init_file_process($pathtoscan = '', $trackid = '')\n{\n\t$listofpaths = array();\n\t$listofnames = array();\n\t$listofmimes = array();\n\n\tif ($pathtoscan) {\n\t\t$listoffiles = dol_dir_list($pathtoscan, 'files');\n\t\tforeach ($listoffiles as $key => $val) {\n\t\t\t$listofpaths[] = $val['fullname'];\n\t\t\t$listofnames[] = $val['name'];\n\t\t\t$listofmimes[] = dol_mimetype($val['name']);\n\t\t}\n\t}\n\t$keytoavoidconflict = empty($trackid) ? '' : '-'.$trackid;\n\t$_SESSION[\"listofpaths\".$keytoavoidconflict] = join(';', $listofpaths);\n\t$_SESSION[\"listofnames\".$keytoavoidconflict] = join(';', $listofnames);\n\t$_SESSION[\"listofmimes\".$keytoavoidconflict] = join(';', $listofmimes);\n}\n\n\n/**\n * Get and save an upload file (for example after submitting a new file a mail form). Database index of file is also updated if donotupdatesession is set.\n * All information used are in db, conf, langs, user and _FILES.\n * Note: This function can be used only into a HTML page context.\n *\n * @param\tstring\t$upload_dir\t\t\t\tDirectory where to store uploaded file (note: used to forge $destpath = $upload_dir + filename)\n * @param\tint\t\t$allowoverwrite\t\t\t1=Allow overwrite existing file\n * @param\tint\t\t$donotupdatesession\t\t1=Do no edit _SESSION variable but update database index. 0=Update _SESSION and not database index. -1=Do not update SESSION neither db.\n * @param\tstring\t$varfiles\t\t\t\t_FILES var name\n * @param\tstring\t$savingdocmask\t\t\tMask to use to define output filename. For example 'XXXXX-__YYYYMMDD__-__file__'\n * @param\tstring\t$link\t\t\t\t\tLink to add (to add a link instead of a file)\n * @param   string  $trackid                Track id (used to prefix name of session vars to avoid conflict)\n * @param\tint\t\t$generatethumbs\t\t\t1=Generate also thumbs for uploaded image files\n * @param   Object  $object                 Object used to set 'src_object_*' fields\n * @return\tint                             <=0 if KO, >0 if OK\n * @see dol_remove_file_process()\n */\nfunction dol_add_file_process($upload_dir, $allowoverwrite = 0, $donotupdatesession = 0, $varfiles = 'addedfile', $savingdocmask = '', $link = null, $trackid = '', $generatethumbs = 1, $object = null)\n{\n\tglobal $db, $user, $conf, $langs;\n\n\t$res = 0;\n\n\tif (!empty($_FILES[$varfiles])) { // For view $_FILES[$varfiles]['error']\n\t\tdol_syslog('dol_add_file_process upload_dir='.$upload_dir.' allowoverwrite='.$allowoverwrite.' donotupdatesession='.$donotupdatesession.' savingdocmask='.$savingdocmask, LOG_DEBUG);\n\n\t\t$result = dol_mkdir($upload_dir);\n\t\t//      var_dump($result);exit;\n\t\tif ($result >= 0) {\n\t\t\t$TFile = $_FILES[$varfiles];\n\t\t\tif (!is_array($TFile['name'])) {\n\t\t\t\tforeach ($TFile as $key => &$val) {\n\t\t\t\t\t$val = array($val);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$nbfile = count($TFile['name']);\n\t\t\t$nbok = 0;\n\t\t\tfor ($i = 0; $i < $nbfile; $i++) {\n\t\t\t\tif (empty($TFile['name'][$i])) {\n\t\t\t\t\tcontinue; // For example, when submitting a form with no file name\n\t\t\t\t}\n\n\t\t\t\t// Define $destfull (path to file including filename) and $destfile (only filename)\n\t\t\t\t$destfull = $upload_dir.\"/\".$TFile['name'][$i];\n\t\t\t\t$destfile = $TFile['name'][$i];\n\t\t\t\t$destfilewithoutext = preg_replace('/\\.[^\\.]+$/', '', $destfile);\n\n\t\t\t\tif ($savingdocmask && strpos($savingdocmask, $destfilewithoutext) !== 0) {\n\t\t\t\t\t$destfull = $upload_dir.\"/\".preg_replace('/__file__/', $TFile['name'][$i], $savingdocmask);\n\t\t\t\t\t$destfile = preg_replace('/__file__/', $TFile['name'][$i], $savingdocmask);\n\t\t\t\t}\n\n\t\t\t\t$filenameto = basename($destfile);\n\t\t\t\tif (preg_match('/^\\./', $filenameto)) {\n\t\t\t\t\t$langs->load(\"errors\"); // key must be loaded because we can't rely on loading during output, we need var substitution to be done now.\n\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorFilenameCantStartWithDot\", $filenameto), null, 'errors');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// dol_sanitizeFileName the file name and lowercase extension\n\t\t\t\t$info = pathinfo($destfull);\n\t\t\t\t$destfull = $info['dirname'].'/'.dol_sanitizeFileName($info['filename'].($info['extension'] != '' ? ('.'.strtolower($info['extension'])) : ''));\n\t\t\t\t$info = pathinfo($destfile);\n\n\t\t\t\t$destfile = dol_sanitizeFileName($info['filename'].($info['extension'] != '' ? ('.'.strtolower($info['extension'])) : ''));\n\n\t\t\t\t// We apply dol_string_nohtmltag also to clean file names (this remove duplicate spaces) because\n\t\t\t\t// this function is also applied when we rename and when we make try to download file (by the GETPOST(filename, 'alphanohtml') call).\n\t\t\t\t$destfile = dol_string_nohtmltag($destfile);\n\t\t\t\t$destfull = dol_string_nohtmltag($destfull);\n\n\t\t\t\t// Move file from temp directory to final directory. A .noexe may also be appended on file name.\n\t\t\t\t$resupload = dol_move_uploaded_file($TFile['tmp_name'][$i], $destfull, $allowoverwrite, 0, $TFile['error'][$i], 0, $varfiles, $upload_dir);\n\n\t\t\t\tif (is_numeric($resupload) && $resupload > 0) {   // $resupload can be 'ErrorFileAlreadyExists'\n\t\t\t\t\tglobal $maxwidthsmall, $maxheightsmall, $maxwidthmini, $maxheightmini;\n\n\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/images.lib.php';\n\n\t\t\t\t\t// Generate thumbs.\n\t\t\t\t\tif ($generatethumbs) {\n\t\t\t\t\t\tif (image_format_supported($destfull) == 1) {\n\t\t\t\t\t\t\t// Create thumbs\n\t\t\t\t\t\t\t// We can't use $object->addThumbs here because there is no $object known\n\n\t\t\t\t\t\t\t// Used on logon for example\n\t\t\t\t\t\t\t$imgThumbSmall = vignette($destfull, $maxwidthsmall, $maxheightsmall, '_small', 50, \"thumbs\");\n\t\t\t\t\t\t\t// Create mini thumbs for image (Ratio is near 16/9)\n\t\t\t\t\t\t\t// Used on menu or for setup page for example\n\t\t\t\t\t\t\t$imgThumbMini = vignette($destfull, $maxwidthmini, $maxheightmini, '_mini', 50, \"thumbs\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update session\n\t\t\t\t\tif (empty($donotupdatesession)) {\n\t\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n\t\t\t\t\t\t$formmail = new FormMail($db);\n\t\t\t\t\t\t$formmail->trackid = $trackid;\n\t\t\t\t\t\t$formmail->add_attached_files($destfull, $destfile, $TFile['type'][$i]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update index table of files (llx_ecm_files)\n\t\t\t\t\tif ($donotupdatesession == 1) {\n\t\t\t\t\t\t$result = addFileIntoDatabaseIndex($upload_dir, basename($destfile).($resupload == 2 ? '.noexe' : ''), $TFile['name'][$i], 'uploaded', 0, $object);\n\t\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t\tif ($allowoverwrite) {\n\t\t\t\t\t\t\t\t// Do not show error message. We can have an error due to DB_ERROR_RECORD_ALREADY_EXISTS\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetEventMessages('WarningFailedToAddFileIntoDatabaseIndex', '', 'warnings');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$nbok++;\n\t\t\t\t} else {\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\tif ($resupload < 0) {\t// Unknown error\n\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorFileNotUploaded\"), null, 'errors');\n\t\t\t\t\t} elseif (preg_match('/ErrorFileIsInfectedWithAVirus/', $resupload)) {\t// Files infected by a virus\n\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorFileIsInfectedWithAVirus\"), null, 'errors');\n\t\t\t\t\t} else // Known error\n\t\t\t\t\t{\n\t\t\t\t\t\tsetEventMessages($langs->trans($resupload), null, 'errors');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($nbok > 0) {\n\t\t\t\t$res = 1;\n\t\t\t\tsetEventMessages($langs->trans(\"FileTransferComplete\"), null, 'mesgs');\n\t\t\t}\n\t\t} else {\n\t\t\tsetEventMessages($langs->trans(\"ErrorFailedToCreateDir\", $upload_dir), null, 'errors');\n\t\t}\n\t} elseif ($link) {\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/link.class.php';\n\t\t$linkObject = new Link($db);\n\t\t$linkObject->entity = $conf->entity;\n\t\t$linkObject->url = $link;\n\t\t$linkObject->objecttype = GETPOST('objecttype', 'alpha');\n\t\t$linkObject->objectid = GETPOST('objectid', 'int');\n\t\t$linkObject->label = GETPOST('label', 'alpha');\n\t\t$res = $linkObject->create($user);\n\t\t$langs->load('link');\n\t\tif ($res > 0) {\n\t\t\tsetEventMessages($langs->trans(\"LinkComplete\"), null, 'mesgs');\n\t\t} else {\n\t\t\tsetEventMessages($langs->trans(\"ErrorFileNotLinked\"), null, 'errors');\n\t\t}\n\t} else {\n\t\t$langs->load(\"errors\");\n\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"File\")), null, 'errors');\n\t}\n\n\treturn $res;\n}\n\n\n/**\n * Remove an uploaded file (for example after submitting a new file a mail form).\n * All information used are in db, conf, langs, user and _FILES.\n *\n * @param\tint\t\t$filenb\t\t\t\t\tFile nb to delete\n * @param\tint\t\t$donotupdatesession\t\t-1 or 1 = Do not update _SESSION variable\n * @param   int\t\t$donotdeletefile        1=Do not delete physically file\n * @param   string  $trackid                Track id (used to prefix name of session vars to avoid conflict)\n * @return\tvoid\n * @see dol_add_file_process()\n */\nfunction dol_remove_file_process($filenb, $donotupdatesession = 0, $donotdeletefile = 1, $trackid = '')\n{\n\tglobal $db, $user, $conf, $langs, $_FILES;\n\n\t$keytodelete = $filenb;\n\t$keytodelete--;\n\n\t$listofpaths = array();\n\t$listofnames = array();\n\t$listofmimes = array();\n\t$keytoavoidconflict = empty($trackid) ? '' : '-'.$trackid;\n\tif (!empty($_SESSION[\"listofpaths\".$keytoavoidconflict])) {\n\t\t$listofpaths = explode(';', $_SESSION[\"listofpaths\".$keytoavoidconflict]);\n\t}\n\tif (!empty($_SESSION[\"listofnames\".$keytoavoidconflict])) {\n\t\t$listofnames = explode(';', $_SESSION[\"listofnames\".$keytoavoidconflict]);\n\t}\n\tif (!empty($_SESSION[\"listofmimes\".$keytoavoidconflict])) {\n\t\t$listofmimes = explode(';', $_SESSION[\"listofmimes\".$keytoavoidconflict]);\n\t}\n\n\tif ($keytodelete >= 0) {\n\t\t$pathtodelete = $listofpaths[$keytodelete];\n\t\t$filetodelete = $listofnames[$keytodelete];\n\t\tif (empty($donotdeletefile)) {\n\t\t\t$result = dol_delete_file($pathtodelete, 1); // The delete of ecm database is inside the function dol_delete_file\n\t\t} else {\n\t\t\t$result = 0;\n\t\t}\n\t\tif ($result >= 0) {\n\t\t\tif (empty($donotdeletefile)) {\n\t\t\t\t$langs->load(\"other\");\n\t\t\t\tsetEventMessages($langs->trans(\"FileWasRemoved\", $filetodelete), null, 'mesgs');\n\t\t\t}\n\t\t\tif (empty($donotupdatesession)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n\t\t\t\t$formmail = new FormMail($db);\n\t\t\t\t$formmail->trackid = $trackid;\n\t\t\t\t$formmail->remove_attached_files($keytodelete);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n *  Add a file into database index.\n *  Called by dol_add_file_process when uploading a file and on other cases.\n *  See also commonGenerateDocument that also add/update database index when a file is generated.\n *\n *  @param      string\t$dir\t\t\tDirectory name (full real path without ending /)\n *  @param\t\tstring\t$file\t\t\tFile name (May end with '.noexe')\n *  @param\t\tstring\t$fullpathorig\tFull path of origin for file (can be '')\n *  @param\t\tstring\t$mode\t\t\tHow file was created ('uploaded', 'generated', ...)\n *  @param\t\tint\t\t$setsharekey\tSet also the share key\n *  @param      Object  $object         Object used to set 'src_object_*' fields\n *\t@return\t\tint\t\t\t\t\t\t<0 if KO, 0 if nothing done, >0 if OK\n */\nfunction addFileIntoDatabaseIndex($dir, $file, $fullpathorig = '', $mode = 'uploaded', $setsharekey = 0, $object = null)\n{\n\tglobal $db, $user, $conf;\n\n\t$result = 0;\n\n\t$rel_dir = preg_replace('/^'.preg_quote(DOL_DATA_ROOT, '/').'/', '', $dir);\n\n\tif (!preg_match('/[\\\\/]temp[\\\\/]|[\\\\/]thumbs|\\.meta$/', $rel_dir)) {     // If not a tmp dir\n\t\t$filename = basename(preg_replace('/\\.noexe$/', '', $file));\n\t\t$rel_dir = preg_replace('/[\\\\/]$/', '', $rel_dir);\n\t\t$rel_dir = preg_replace('/^[\\\\/]/', '', $rel_dir);\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/ecm/class/ecmfiles.class.php';\n\t\t$ecmfile = new EcmFiles($db);\n\t\t$ecmfile->filepath = $rel_dir;\n\t\t$ecmfile->filename = $filename;\n\t\t$ecmfile->label = md5_file(dol_osencode($dir.'/'.$file)); // MD5 of file content\n\t\t$ecmfile->fullpath_orig = $fullpathorig;\n\t\t$ecmfile->gen_or_uploaded = $mode;\n\t\t$ecmfile->description = ''; // indexed content\n\t\t$ecmfile->keywords = ''; // keyword content\n\n\t\tif (is_object($object) && $object->id > 0) {\n\t\t\t$ecmfile->src_object_id = $object->id;\n\t\t\tif (isset($object->table_element)) {\n\t\t\t\t$ecmfile->src_object_type = $object->table_element;\n\t\t\t} else {\n\t\t\t\tdol_syslog('Error: object ' . get_class($object) . ' has no table_element attribute.');\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (isset($object->src_object_description)) $ecmfile->description = $object->src_object_description;\n\t\t\tif (isset($object->src_object_keywords)) $ecmfile->keywords = $object->src_object_keywords;\n\t\t}\n\n\t\tif (!empty($conf->global->MAIN_FORCE_SHARING_ON_ANY_UPLOADED_FILE)) {\n\t\t\t$setsharekey = 1;\n\t\t}\n\n\t\tif ($setsharekey) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/security2.lib.php';\n\t\t\t$ecmfile->share = getRandomPassword(true);\n\t\t}\n\n\t\t$result = $ecmfile->create($user);\n\t\tif ($result < 0) {\n\t\t\tdol_syslog($ecmfile->error);\n\t\t}\n\t}\n\n\treturn $result;\n}\n\n/**\n *  Delete files into database index using search criterias.\n *\n *  @param      string\t$dir\t\t\tDirectory name (full real path without ending /)\n *  @param\t\tstring\t$file\t\t\tFile name\n *  @param\t\tstring\t$mode\t\t\tHow file was created ('uploaded', 'generated', ...)\n *\t@return\t\tint\t\t\t\t\t\t<0 if KO, 0 if nothing done, >0 if OK\n */\nfunction deleteFilesIntoDatabaseIndex($dir, $file, $mode = 'uploaded')\n{\n\tglobal $conf, $db, $user;\n\n\t$error = 0;\n\n\tif (empty($dir)) {\n\t\tdol_syslog(\"deleteFilesIntoDatabaseIndex: dir parameter can't be empty\", LOG_ERR);\n\t\treturn -1;\n\t}\n\n\t$db->begin();\n\n\t$rel_dir = preg_replace('/^'.preg_quote(DOL_DATA_ROOT, '/').'/', '', $dir);\n\n\t$filename = basename($file);\n\t$rel_dir = preg_replace('/[\\\\/]$/', '', $rel_dir);\n\t$rel_dir = preg_replace('/^[\\\\/]/', '', $rel_dir);\n\n\tif (!$error) {\n\t\t$sql = 'DELETE FROM '.MAIN_DB_PREFIX.'ecm_files';\n\t\t$sql .= ' WHERE entity = '.$conf->entity;\n\t\t$sql .= \" AND filepath = '\".$db->escape($rel_dir).\"'\";\n\t\tif ($file) {\n\t\t\t$sql .= \" AND filename = '\".$db->escape($file).\"'\";\n\t\t}\n\t\tif ($mode) {\n\t\t\t$sql .= \" AND gen_or_uploaded = '\".$db->escape($mode).\"'\";\n\t\t}\n\n\t\t$resql = $db->query($sql);\n\t\tif (!$resql) {\n\t\t\t$error++;\n\t\t\tdol_syslog(__METHOD__.' '.$db->lasterror(), LOG_ERR);\n\t\t}\n\t}\n\n\t// Commit or rollback\n\tif ($error) {\n\t\t$db->rollback();\n\t\treturn -1 * $error;\n\t} else {\n\t\t$db->commit();\n\t\treturn 1;\n\t}\n}\n\n\n/**\n * \tConvert an image file or a PDF into another image format.\n *  This need Imagick php extension. You can use dol_imageResizeOrCrop() for a function that need GD.\n *\n *  @param\tstring\t$fileinput  Input file name\n *  @param  string\t$ext        Format of target file (It is also extension added to file if fileoutput is not provided).\n *  @param\tstring\t$fileoutput\tOutput filename\n *  @param  string  $page       Page number if we convert a PDF into png\n *  @return\tint\t\t\t\t\t<0 if KO, 0=Nothing done, >0 if OK\n *  @see dol_imageResizeOrCrop()\n */\nfunction dol_convert_file($fileinput, $ext = 'png', $fileoutput = '', $page = '')\n{\n\tglobal $langs;\n\tif (class_exists('Imagick')) {\n\t\t$image = new Imagick();\n\t\ttry {\n\t\t\t$filetoconvert = $fileinput.(($page != '') ? '['.$page.']' : '');\n\t\t\t//var_dump($filetoconvert);\n\t\t\t$ret = $image->readImage($filetoconvert);\n\t\t} catch (Exception $e) {\n\t\t\t$ext = pathinfo($fileinput, PATHINFO_EXTENSION);\n\t\t\tdol_syslog(\"Failed to read image using Imagick (Try to install package 'apt-get install php-imagick ghostscript' and check there is no policy to disable \".$ext.\" convertion in /etc/ImageMagick*/policy.xml): \".$e->getMessage(), LOG_WARNING);\n\t\t\treturn 0;\n\t\t}\n\t\tif ($ret) {\n\t\t\t$ret = $image->setImageFormat($ext);\n\t\t\tif ($ret) {\n\t\t\t\tif (empty($fileoutput)) {\n\t\t\t\t\t$fileoutput = $fileinput.\".\".$ext;\n\t\t\t\t}\n\n\t\t\t\t$count = $image->getNumberImages();\n\n\t\t\t\tif (!dol_is_file($fileoutput) || is_writeable($fileoutput)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t$ret = $image->writeImages($fileoutput, true);\n\t\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\t\tdol_syslog($e->getMessage(), LOG_WARNING);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdol_syslog(\"Warning: Failed to write cache preview file '.$fileoutput.'. Check permission on file/dir\", LOG_ERR);\n\t\t\t\t}\n\t\t\t\tif ($ret) {\n\t\t\t\t\treturn $count;\n\t\t\t\t} else {\n\t\t\t\t\treturn -3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn -2;\n\t\t\t}\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n\n/**\n * Compress a file.\n * An error string may be returned into parameters.\n *\n * @param \tstring\t$inputfile\t\tSource file name\n * @param \tstring\t$outputfile\t\tTarget file name\n * @param \tstring\t$mode\t\t\t'gz' or 'bz' or 'zip'\n * @param\tstring\t$errorstring\tError string\n * @return\tint\t\t\t\t\t\t<0 if KO, >0 if OK\n */\nfunction dol_compress_file($inputfile, $outputfile, $mode = \"gz\", &$errorstring = null)\n{\n\tglobal $conf;\n\n\t$foundhandler = 0;\n\n\ttry {\n\t\tdol_syslog(\"dol_compress_file mode=\".$mode.\" inputfile=\".$inputfile.\" outputfile=\".$outputfile);\n\n\t\t$data = implode(\"\", file(dol_osencode($inputfile)));\n\t\tif ($mode == 'gz') {\n\t\t\t$foundhandler = 1;\n\t\t\t$compressdata = gzencode($data, 9);\n\t\t} elseif ($mode == 'bz') {\n\t\t\t$foundhandler = 1;\n\t\t\t$compressdata = bzcompress($data, 9);\n\t\t} elseif ($mode == 'zstd') {\n\t\t\t$foundhandler = 1;\n\t\t\t$compressdata = zstd_compress($data, 9);\n\t\t} elseif ($mode == 'zip') {\n\t\t\tif (class_exists('ZipArchive') && !empty($conf->global->MAIN_USE_ZIPARCHIVE_FOR_ZIP_COMPRESS)) {\n\t\t\t\t$foundhandler = 1;\n\n\t\t\t\t$rootPath = realpath($inputfile);\n\n\t\t\t\tdol_syslog(\"Class ZipArchive is set so we zip using ZipArchive to zip into \".$outputfile.' rootPath='.$rootPath);\n\t\t\t\t$zip = new ZipArchive;\n\n\t\t\t\tif ($zip->open($outputfile, ZipArchive::CREATE) !== true) {\n\t\t\t\t\t$errorstring = \"dol_compress_file failure - Failed to open file \".$outputfile.\"\\n\";\n\t\t\t\t\tdol_syslog($errorstring, LOG_ERR);\n\n\t\t\t\t\tglobal $errormsg;\n\t\t\t\t\t$errormsg = $errorstring;\n\n\t\t\t\t\treturn -6;\n\t\t\t\t}\n\n\t\t\t\t// Create recursive directory iterator\n\t\t\t\t/** @var SplFileInfo[] $files */\n\t\t\t\t$files = new RecursiveIteratorIterator(\n\t\t\t\t\tnew RecursiveDirectoryIterator($rootPath),\n\t\t\t\t\tRecursiveIteratorIterator::LEAVES_ONLY\n\t\t\t\t);\n\n\t\t\t\tforeach ($files as $name => $file) {\n\t\t\t\t\t// Skip directories (they would be added automatically)\n\t\t\t\t\tif (!$file->isDir()) {\n\t\t\t\t\t\t// Get real and relative path for current file\n\t\t\t\t\t\t$filePath = $file->getPath();\t\t\t\t// the full path with filename using the $inputdir root.\n\t\t\t\t\t\t$fileName = $file->getFilename();\n\t\t\t\t\t\t$fileFullRealPath = $file->getRealPath();\t// the full path with name and transformed to use real path directory.\n\n\t\t\t\t\t\t//$relativePath = substr($fileFullRealPath, strlen($rootPath) + 1);\n\t\t\t\t\t\t$relativePath = substr(($filePath ? $filePath.'/' : '').$fileName, strlen($rootPath) + 1);\n\n\t\t\t\t\t\t// Add current file to archive\n\t\t\t\t\t\t$zip->addFile($fileFullRealPath, $relativePath);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Zip archive will be created only after closing object\n\t\t\t\t$zip->close();\n\n\t\t\t\tdol_syslog(\"dol_compress_file success - \".count($zip->numFiles).\" files\");\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif (defined('ODTPHP_PATHTOPCLZIP')) {\n\t\t\t\t$foundhandler = 1;\n\n\t\t\t\tinclude_once ODTPHP_PATHTOPCLZIP.'/pclzip.lib.php';\n\t\t\t\t$archive = new PclZip($outputfile);\n\t\t\t\t$result = $archive->add($inputfile, PCLZIP_OPT_REMOVE_PATH, dirname($inputfile));\n\n\t\t\t\tif ($result === 0) {\n\t\t\t\t\tglobal $errormsg;\n\t\t\t\t\t$errormsg = $archive->errorInfo(true);\n\n\t\t\t\t\tif ($archive->errorCode() == PCLZIP_ERR_WRITE_OPEN_FAIL) {\n\t\t\t\t\t\t$errorstring = \"PCLZIP_ERR_WRITE_OPEN_FAIL\";\n\t\t\t\t\t\tdol_syslog(\"dol_compress_file error - archive->errorCode() = PCLZIP_ERR_WRITE_OPEN_FAIL\", LOG_ERR);\n\t\t\t\t\t\treturn -4;\n\t\t\t\t\t}\n\n\t\t\t\t\t$errorstring = \"dol_compress_file error archive->errorCode = \".$archive->errorCode().\" errormsg=\".$errormsg;\n\t\t\t\t\tdol_syslog(\"dol_compress_file failure - \".$errormsg, LOG_ERR);\n\t\t\t\t\treturn -3;\n\t\t\t\t} else {\n\t\t\t\t\tdol_syslog(\"dol_compress_file success - \".count($result).\" files\");\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($foundhandler) {\n\t\t\t$fp = fopen($outputfile, \"w\");\n\t\t\tfwrite($fp, $compressdata);\n\t\t\tfclose($fp);\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$errorstring = \"Try to zip with format \".$mode.\" with no handler for this format\";\n\t\t\tdol_syslog($errorstring, LOG_ERR);\n\n\t\t\tglobal $errormsg;\n\t\t\t$errormsg = $errorstring;\n\t\t\treturn -2;\n\t\t}\n\t} catch (Exception $e) {\n\t\tglobal $langs, $errormsg;\n\t\t$langs->load(\"errors\");\n\t\t$errormsg = $langs->trans(\"ErrorFailedToWriteInDir\");\n\n\t\t$errorstring = \"Failed to open file \".$outputfile;\n\t\tdol_syslog($errorstring, LOG_ERR);\n\t\treturn -1;\n\t}\n}\n\n/**\n * Uncompress a file\n *\n * @param \tstring \t$inputfile\t\tFile to uncompress\n * @param \tstring\t$outputdir\t\tTarget dir name\n * @return \tarray\t\t\t\t\tarray('error'=>'Error code') or array() if no error\n */\nfunction dol_uncompress($inputfile, $outputdir)\n{\n\tglobal $conf, $langs;\n\n\tif (defined('ODTPHP_PATHTOPCLZIP') && empty($conf->global->MAIN_USE_ZIPARCHIVE_FOR_ZIP_UNCOMPRESS)) {\n\t\tdol_syslog(\"Constant ODTPHP_PATHTOPCLZIP for pclzip library is set to \".ODTPHP_PATHTOPCLZIP.\", so we use Pclzip to unzip into \".$outputdir);\n\t\tinclude_once ODTPHP_PATHTOPCLZIP.'/pclzip.lib.php';\n\t\t$archive = new PclZip($inputfile);\n\n\t\t// Extract into outputdir, but only files that match the regex '/^((?!\\.\\.).)*$/' that means \"does not include ..\"\n\t\t$result = $archive->extract(PCLZIP_OPT_PATH, $outputdir, PCLZIP_OPT_BY_PREG, '/^((?!\\.\\.).)*$/');\n\n\t\tif (!is_array($result) && $result <= 0) {\n\t\t\treturn array('error'=>$archive->errorInfo(true));\n\t\t} else {\n\t\t\t$ok = 1;\n\t\t\t$errmsg = '';\n\t\t\t// Loop on each file to check result for unzipping file\n\t\t\tforeach ($result as $key => $val) {\n\t\t\t\tif ($val['status'] == 'path_creation_fail') {\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t$ok = 0;\n\t\t\t\t\t$errmsg = $langs->trans(\"ErrorFailToCreateDir\", $val['filename']);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($ok) {\n\t\t\t\treturn array();\n\t\t\t} else {\n\t\t\t\treturn array('error'=>$errmsg);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (class_exists('ZipArchive')) {\t// Must install php-zip to have it\n\t\tdol_syslog(\"Class ZipArchive is set so we unzip using ZipArchive to unzip into \".$outputdir);\n\t\t$zip = new ZipArchive;\n\t\t$res = $zip->open($inputfile);\n\t\tif ($res === true) {\n\t\t\t//$zip->extractTo($outputdir.'/');\n\t\t\t// We must extract one file at time so we can check that file name does not contains '..' to avoid transversal path of zip built for example using\n\t\t\t// python3 path_traversal_archiver.py <Created_file_name> test.zip -l 10 -p tmp/\n\t\t\t// with -l is the range of dot to go back in path.\n\t\t\t// and path_traversal_archiver.py found at https://github.com/Alamot/code-snippets/blob/master/path_traversal/path_traversal_archiver.py\n\t\t\tfor ($i = 0; $i < $zip->numFiles; $i++) {\n\t\t\t\tif (preg_match('/\\.\\./', $zip->getNameIndex($i))) {\n\t\t\t\t\tdol_syslog(\"Warning: Try to unzip a file with a transversal path \".$zip->getNameIndex($i), LOG_WARNING);\n\t\t\t\t\tcontinue; // Discard the file\n\t\t\t\t}\n\t\t\t\t$zip->extractTo($outputdir.'/', array($zip->getNameIndex($i)));\n\t\t\t}\n\n\t\t\t$zip->close();\n\t\t\treturn array();\n\t\t} else {\n\t\t\treturn array('error'=>'ErrUnzipFails');\n\t\t}\n\t}\n\n\treturn array('error'=>'ErrNoZipEngine');\n}\n\n\n/**\n * Compress a directory and subdirectories into a package file.\n *\n * @param \tstring\t$inputdir\t\tSource dir name\n * @param \tstring\t$outputfile\t\tTarget file name (output directory must exists and be writable)\n * @param \tstring\t$mode\t\t\t'zip'\n * @param\tstring\t$excludefiles   A regex pattern. For example: '/\\.log$|\\/temp\\//'\n * @param\tstring\t$rootdirinzip\tAdd a root dir level in zip file\n * @return\tint\t\t\t\t\t\t<0 if KO, >0 if OK\n */\nfunction dol_compress_dir($inputdir, $outputfile, $mode = \"zip\", $excludefiles = '', $rootdirinzip = '')\n{\n\t$foundhandler = 0;\n\n\tdol_syslog(\"Try to zip dir \".$inputdir.\" into \".$outputfile.\" mode=\".$mode);\n\n\tif (!dol_is_dir(dirname($outputfile)) || !is_writable(dirname($outputfile))) {\n\t\tglobal $langs, $errormsg;\n\t\t$langs->load(\"errors\");\n\t\t$errormsg = $langs->trans(\"ErrorFailedToWriteInDir\", $outputfile);\n\t\treturn -3;\n\t}\n\n\ttry {\n\t\tif ($mode == 'gz') {\n\t\t\t$foundhandler = 0;\n\t\t} elseif ($mode == 'bz') {\n\t\t\t$foundhandler = 0;\n\t\t} elseif ($mode == 'zip') {\n\t\t\t/*if (defined('ODTPHP_PATHTOPCLZIP'))\n\t\t\t {\n\t\t\t $foundhandler=0;        // TODO implement this\n\n\t\t\t include_once ODTPHP_PATHTOPCLZIP.'/pclzip.lib.php';\n\t\t\t $archive = new PclZip($outputfile);\n\t\t\t $archive->add($inputfile, PCLZIP_OPT_REMOVE_PATH, dirname($inputfile));\n\t\t\t //$archive->add($inputfile);\n\t\t\t return 1;\n\t\t\t }\n\t\t\t else*/\n\t\t\t//if (class_exists('ZipArchive') && ! empty($conf->global->MAIN_USE_ZIPARCHIVE_FOR_ZIP_COMPRESS))\n\t\t\tif (class_exists('ZipArchive')) {\n\t\t\t\t$foundhandler = 1;\n\n\t\t\t\t// Initialize archive object\n\t\t\t\t$zip = new ZipArchive();\n\t\t\t\t$result = $zip->open($outputfile, ZipArchive::CREATE | ZipArchive::OVERWRITE);\n\t\t\t\tif (!$result) {\n\t\t\t\t\tglobal $langs, $errormsg;\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t$errormsg = $langs->trans(\"ErrorFailedToWriteInFile\", $outputfile);\n\t\t\t\t\treturn -4;\n\t\t\t\t}\n\n\t\t\t\t// Create recursive directory iterator\n\t\t\t\t// This does not return symbolic links\n\t\t\t\t/** @var SplFileInfo[] $files */\n\t\t\t\t$files = new RecursiveIteratorIterator(\n\t\t\t\t\tnew RecursiveDirectoryIterator($inputdir),\n\t\t\t\t\tRecursiveIteratorIterator::LEAVES_ONLY\n\t\t\t\t);\n\n\t\t\t\t//var_dump($inputdir);\n\t\t\t\tforeach ($files as $name => $file) {\n\t\t\t\t\t// Skip directories (they would be added automatically)\n\t\t\t\t\tif (!$file->isDir()) {\n\t\t\t\t\t\t// Get real and relative path for current file\n\t\t\t\t\t\t$filePath = $file->getPath();\t\t\t\t// the full path with filename using the $inputdir root.\n\t\t\t\t\t\t$fileName = $file->getFilename();\n\t\t\t\t\t\t$fileFullRealPath = $file->getRealPath();\t// the full path with name and transformed to use real path directory.\n\n\t\t\t\t\t\t//$relativePath = ($rootdirinzip ? $rootdirinzip.'/' : '').substr($fileFullRealPath, strlen($inputdir) + 1);\n\t\t\t\t\t\t$relativePath = ($rootdirinzip ? $rootdirinzip.'/' : '').substr(($filePath ? $filePath.'/' : '').$fileName, strlen($inputdir) + 1);\n\n\t\t\t\t\t\t//var_dump($filePath);var_dump($fileFullRealPath);var_dump($relativePath);\n\t\t\t\t\t\tif (empty($excludefiles) || !preg_match($excludefiles, $fileFullRealPath)) {\n\t\t\t\t\t\t\t// Add current file to archive\n\t\t\t\t\t\t\t$zip->addFile($fileFullRealPath, $relativePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Zip archive will be created only after closing object\n\t\t\t\t$zip->close();\n\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\n\t\tif (!$foundhandler) {\n\t\t\tdol_syslog(\"Try to zip with format \".$mode.\" with no handler for this format\", LOG_ERR);\n\t\t\treturn -2;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t} catch (Exception $e) {\n\t\tglobal $langs, $errormsg;\n\t\t$langs->load(\"errors\");\n\t\tdol_syslog(\"Failed to open file \".$outputfile, LOG_ERR);\n\t\tdol_syslog($e->getMessage(), LOG_ERR);\n\t\t$errormsg = $langs->trans(\"ErrorFailedToWriteInDir\", $outputfile);\n\t\treturn -1;\n\t}\n}\n\n\n\n/**\n * Return file(s) into a directory (by default most recent)\n *\n * @param \tstring\t\t$dir\t\t\tDirectory to scan\n * @param\tstring\t\t$regexfilter\tRegex filter to restrict list. This regex value must be escaped for '/', since this char is used for preg_match function\n * @param\tarray\t\t$excludefilter  Array of Regex for exclude filter (example: array('(\\.meta|_preview.*\\.png)$','^\\.')). This regex value must be escaped for '/', since this char is used for preg_match function\n * @param\tint\t\t\t$nohook\t\t\tDisable all hooks\n * @param\tint\t\t\t$mode\t\t\t0=Return array minimum keys loaded (faster), 1=Force all keys like date and size to be loaded (slower), 2=Force load of date only, 3=Force load of size only\n * @return\tstring\t\t\t\t\t\tFull path to most recent file\n */\nfunction dol_most_recent_file($dir, $regexfilter = '', $excludefilter = array('(\\.meta|_preview.*\\.png)$', '^\\.'), $nohook = false, $mode = '')\n{\n\t$tmparray = dol_dir_list($dir, 'files', 0, $regexfilter, $excludefilter, 'date', SORT_DESC, $mode, $nohook);\n\treturn $tmparray[0];\n}\n\n/**\n * Security check when accessing to a document (used by document.php, viewimage.php and webservices to get documents).\n * TODO Replace code that set $accessallowed by a call to restrictedArea()\n *\n * @param\tstring\t$modulepart\t\t\tModule of document ('module', 'module_user_temp', 'module_user' or 'module_temp'). Exemple: 'medias', 'invoice', 'logs', 'tax-vat', ...\n * @param\tstring\t$original_file\t\tRelative path with filename, relative to modulepart.\n * @param\tstring\t$entity\t\t\t\tRestrict onto entity (0=no restriction)\n * @param  \tUser\t$fuser\t\t\t\tUser object (forced)\n * @param\tstring\t$refname\t\t\tRef of object to check permission for external users (autodetect if not provided) or for hierarchy\n * @param   string  $mode               Check permission for 'read' or 'write'\n * @return\tmixed\t\t\t\t\t\tArray with access information : 'accessallowed' & 'sqlprotectagainstexternals' & 'original_file' (as a full path name)\n * @see restrictedArea()\n */\nfunction dol_check_secure_access_document($modulepart, $original_file, $entity, $fuser = '', $refname = '', $mode = 'read')\n{\n\tglobal $conf, $db, $user, $hookmanager;\n\tglobal $dolibarr_main_data_root, $dolibarr_main_document_root_alt;\n\tglobal $object;\n\n\tif (!is_object($fuser)) {\n\t\t$fuser = $user;\n\t}\n\n\tif (empty($modulepart)) {\n\t\treturn 'ErrorBadParameter';\n\t}\n\tif (empty($entity)) {\n\t\tif (empty($conf->multicompany->enabled)) {\n\t\t\t$entity = 1;\n\t\t} else {\n\t\t\t$entity = 0;\n\t\t}\n\t}\n\t// Fix modulepart for backward compatibility\n\tif ($modulepart == 'users') {\n\t\t$modulepart = 'user';\n\t}\n\tif ($modulepart == 'tva') {\n\t\t$modulepart = 'tax-vat';\n\t}\n\n\t//print 'dol_check_secure_access_document modulepart='.$modulepart.' original_file='.$original_file.' entity='.$entity;\n\tdol_syslog('dol_check_secure_access_document modulepart='.$modulepart.' original_file='.$original_file.' entity='.$entity);\n\n\t// We define $accessallowed and $sqlprotectagainstexternals\n\t$accessallowed = 0;\n\t$sqlprotectagainstexternals = '';\n\t$ret = array();\n\n\t// Find the subdirectory name as the reference. For example original_file='10/myfile.pdf' -> refname='10'\n\tif (empty($refname)) {\n\t\t$refname = basename(dirname($original_file).\"/\");\n\t\tif ($refname == 'thumbs') {\n\t\t\t// If we get the thumbns directory, we must go one step higher. For example original_file='10/thumbs/myfile_small.jpg' -> refname='10'\n\t\t\t$refname = basename(dirname(dirname($original_file)).\"/\");\n\t\t}\n\t}\n\n\t// Define possible keys to use for permission check\n\t$lire = 'lire';\n\t$read = 'read';\n\t$download = 'download';\n\tif ($mode == 'write') {\n\t\t$lire = 'creer';\n\t\t$read = 'write';\n\t\t$download = 'upload';\n\t}\n\n\t// Wrapping for miscellaneous medias files\n\tif ($modulepart == 'medias' && !empty($dolibarr_main_data_root)) {\n\t\tif (empty($entity) || empty($conf->medias->multidir_output[$entity])) {\n\t\t\treturn array('accessallowed'=>0, 'error'=>'Value entity must be provided');\n\t\t}\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->medias->multidir_output[$entity].'/'.$original_file;\n\t} elseif ($modulepart == 'logs' && !empty($dolibarr_main_data_root)) {\n\t\t// Wrapping for *.log files, like when used with url http://.../document.php?modulepart=logs&file=dolibarr.log\n\t\t$accessallowed = ($user->admin && basename($original_file) == $original_file && preg_match('/^dolibarr.*\\.log$/', basename($original_file)));\n\t\t$original_file = $dolibarr_main_data_root.'/'.$original_file;\n\t} elseif ($modulepart == 'doctemplates' && !empty($dolibarr_main_data_root)) {\n\t\t// Wrapping for doctemplates\n\t\t$accessallowed = $user->admin;\n\t\t$original_file = $dolibarr_main_data_root.'/doctemplates/'.$original_file;\n\t} elseif ($modulepart == 'doctemplateswebsite' && !empty($dolibarr_main_data_root)) {\n\t\t// Wrapping for doctemplates of websites\n\t\t$accessallowed = ($fuser->rights->website->write && preg_match('/\\.jpg$/i', basename($original_file)));\n\t\t$original_file = $dolibarr_main_data_root.'/doctemplates/websites/'.$original_file;\n\t} elseif ($modulepart == 'packages' && !empty($dolibarr_main_data_root)) {\n\t\t// Wrapping for *.zip package files, like when used with url http://.../document.php?modulepart=packages&file=module_myfile.zip\n\t\t// Dir for custom dirs\n\t\t$tmp = explode(',', $dolibarr_main_document_root_alt);\n\t\t$dirins = $tmp[0];\n\n\t\t$accessallowed = ($user->admin && preg_match('/^module_.*\\.zip$/', basename($original_file)));\n\t\t$original_file = $dirins.'/'.$original_file;\n\t} elseif ($modulepart == 'mycompany' && !empty($conf->mycompany->dir_output)) {\n\t\t// Wrapping for some images\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->mycompany->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'userphoto' && !empty($conf->user->dir_output)) {\n\t\t// Wrapping for users photos\n\t\t$accessallowed = 0;\n\t\tif (preg_match('/^\\d+\\/photos\\//', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->user->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'memberphoto' && !empty($conf->adherent->dir_output)) {\n\t\t// Wrapping for members photos\n\t\t$accessallowed = 0;\n\t\tif (preg_match('/^\\d+\\/photos\\//', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->adherent->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'apercufacture' && !empty($conf->facture->multidir_output[$entity])) {\n\t\t// Wrapping pour les apercu factures\n\t\tif ($fuser->rights->facture->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->facture->multidir_output[$entity].'/'.$original_file;\n\t} elseif ($modulepart == 'apercupropal' && !empty($conf->propal->multidir_output[$entity])) {\n\t\t// Wrapping pour les apercu propal\n\t\tif ($fuser->rights->propale->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->propal->multidir_output[$entity].'/'.$original_file;\n\t} elseif ($modulepart == 'apercucommande' && !empty($conf->commande->multidir_output[$entity])) {\n\t\t// Wrapping pour les apercu commande\n\t\tif ($fuser->rights->commande->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->commande->multidir_output[$entity].'/'.$original_file;\n\t} elseif (($modulepart == 'apercufichinter' || $modulepart == 'apercuficheinter') && !empty($conf->ficheinter->dir_output)) {\n\t\t// Wrapping pour les apercu intervention\n\t\tif ($fuser->rights->ficheinter->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->ficheinter->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'apercucontract') && !empty($conf->contrat->multidir_output[$entity])) {\n\t\t// Wrapping pour les apercu contrat\n\t\tif ($fuser->rights->contrat->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->contrat->multidir_output[$entity].'/'.$original_file;\n\t} elseif (($modulepart == 'apercusupplier_proposal' || $modulepart == 'apercusupplier_proposal') && !empty($conf->supplier_proposal->dir_output)) {\n\t\t// Wrapping pour les apercu supplier proposal\n\t\tif ($fuser->rights->supplier_proposal->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->supplier_proposal->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'apercusupplier_order' || $modulepart == 'apercusupplier_order') && !empty($conf->fournisseur->commande->dir_output)) {\n\t\t// Wrapping pour les apercu supplier order\n\t\tif ($fuser->rights->fournisseur->commande->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->commande->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'apercusupplier_invoice' || $modulepart == 'apercusupplier_invoice') && !empty($conf->fournisseur->facture->dir_output)) {\n\t\t// Wrapping pour les apercu supplier invoice\n\t\tif ($fuser->rights->fournisseur->facture->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->facture->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'holiday') && !empty($conf->holiday->dir_output)) {\n\t\tif ($fuser->rights->holiday->{$read} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t\t// If we known $id of holiday, call checkUserAccessToObject to check permission on properties and hierarchy of leave request\n\t\t\tif ($refname && !preg_match('/^specimen/i', $original_file)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/holiday/class/holiday.class.php';\n\t\t\t\t$tmpholiday = new Holiday($db);\n\t\t\t\t$tmpholiday->fetch('', $refname);\n\t\t\t\t$accessallowed = checkUserAccessToObject($user, array('holiday'), $tmpholiday, 'holiday', '', '', 'rowid', '');\n\t\t\t}\n\t\t}\n\t\t$original_file = $conf->holiday->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'expensereport') && !empty($conf->expensereport->dir_output)) {\n\t\tif ($fuser->rights->expensereport->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t\t// If we known $id of expensereport, call checkUserAccessToObject to check permission on properties and hierarchy of expense report\n\t\t\tif ($refname && !preg_match('/^specimen/i', $original_file)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/expensereport/class/expensereport.class.php';\n\t\t\t\t$tmpexpensereport = new ExpenseReport($db);\n\t\t\t\t$tmpexpensereport->fetch('', $refname);\n\t\t\t\t$accessallowed = checkUserAccessToObject($user, array('expensereport'), $tmpexpensereport, 'expensereport', '', '', 'rowid', '');\n\t\t\t}\n\t\t}\n\t\t$original_file = $conf->expensereport->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'apercuexpensereport') && !empty($conf->expensereport->dir_output)) {\n\t\t// Wrapping pour les apercu expense report\n\t\tif ($fuser->rights->expensereport->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->expensereport->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'propalstats' && !empty($conf->propal->multidir_temp[$entity])) {\n\t\t// Wrapping pour les images des stats propales\n\t\tif ($fuser->rights->propale->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->propal->multidir_temp[$entity].'/'.$original_file;\n\t} elseif ($modulepart == 'orderstats' && !empty($conf->commande->dir_temp)) {\n\t\t// Wrapping pour les images des stats commandes\n\t\tif ($fuser->rights->commande->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->commande->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'orderstatssupplier' && !empty($conf->fournisseur->dir_output)) {\n\t\tif ($fuser->rights->fournisseur->commande->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->commande->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'billstats' && !empty($conf->facture->dir_temp)) {\n\t\t// Wrapping pour les images des stats factures\n\t\tif ($fuser->rights->facture->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->facture->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'billstatssupplier' && !empty($conf->fournisseur->dir_output)) {\n\t\tif ($fuser->rights->fournisseur->facture->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->facture->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'expeditionstats' && !empty($conf->expedition->dir_temp)) {\n\t\t// Wrapping pour les images des stats expeditions\n\t\tif ($fuser->rights->expedition->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->expedition->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'tripsexpensesstats' && !empty($conf->deplacement->dir_temp)) {\n\t\t// Wrapping pour les images des stats expeditions\n\t\tif ($fuser->rights->deplacement->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->deplacement->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'memberstats' && !empty($conf->adherent->dir_temp)) {\n\t\t// Wrapping pour les images des stats expeditions\n\t\tif ($fuser->rights->adherent->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->adherent->dir_temp.'/'.$original_file;\n\t} elseif (preg_match('/^productstats_/i', $modulepart) && !empty($conf->product->dir_temp)) {\n\t\t// Wrapping pour les images des stats produits\n\t\tif ($fuser->rights->produit->{$lire} || $fuser->rights->service->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = (!empty($conf->product->multidir_temp[$entity]) ? $conf->product->multidir_temp[$entity] : $conf->service->multidir_temp[$entity]).'/'.$original_file;\n\t} elseif (in_array($modulepart, array('tax', 'tax-vat', 'tva')) && !empty($conf->tax->dir_output)) {\n\t\t// Wrapping for taxes\n\t\tif ($fuser->rights->tax->charges->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$modulepartsuffix = str_replace('tax-', '', $modulepart);\n\t\t$original_file = $conf->tax->dir_output.'/'.($modulepartsuffix != 'tax' ? $modulepartsuffix.'/' : '').$original_file;\n\t} elseif ($modulepart == 'actions' && !empty($conf->agenda->dir_output)) {\n\t\t// Wrapping for events\n\t\tif ($fuser->rights->agenda->myactions->{$read}) {\n\t\t\t$accessallowed = 1;\n\t\t\t// If we known $id of project, call checkUserAccessToObject to check permission on the given agenda event on properties and assigned users\n\t\t\tif ($refname && !preg_match('/^specimen/i', $original_file)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/comm/action/class/actioncomm.class.php';\n\t\t\t\t$tmpobject = new ActionComm($db);\n\t\t\t\t$tmpobject->fetch((int) $refname);\n\t\t\t\t$accessallowed = checkUserAccessToObject($user, array('agenda'), $tmpobject->id, 'actioncomm&societe', 'myactions|allactions', 'fk_soc', 'id', '');\n\t\t\t\tif ($user->socid && $tmpobject->socid) {\n\t\t\t\t\t$accessallowed = checkUserAccessToObject($user, array('societe'), $tmpobject->socid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$original_file = $conf->agenda->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'category' && !empty($conf->categorie->multidir_output[$entity])) {\n\t\t// Wrapping for categories\n\t\tif (empty($entity) || empty($conf->categorie->multidir_output[$entity])) {\n\t\t\treturn array('accessallowed'=>0, 'error'=>'Value entity must be provided');\n\t\t}\n\t\tif ($fuser->rights->categorie->{$lire} || $fuser->rights->takepos->run) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->categorie->multidir_output[$entity].'/'.$original_file;\n\t} elseif ($modulepart == 'prelevement' && !empty($conf->prelevement->dir_output)) {\n\t\t// Wrapping pour les prelevements\n\t\tif ($fuser->rights->prelevement->bons->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->prelevement->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'graph_stock' && !empty($conf->stock->dir_temp)) {\n\t\t// Wrapping pour les graph energie\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->stock->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'graph_fourn' && !empty($conf->fournisseur->dir_temp)) {\n\t\t// Wrapping pour les graph fournisseurs\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->fournisseur->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'graph_product' && !empty($conf->product->dir_temp)) {\n\t\t// Wrapping pour les graph des produits\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->product->multidir_temp[$entity].'/'.$original_file;\n\t} elseif ($modulepart == 'barcode') {\n\t\t// Wrapping pour les code barre\n\t\t$accessallowed = 1;\n\t\t// If viewimage is called for barcode, we try to output an image on the fly, with no build of file on disk.\n\t\t//$original_file=$conf->barcode->dir_temp.'/'.$original_file;\n\t\t$original_file = '';\n\t} elseif ($modulepart == 'iconmailing' && !empty($conf->mailing->dir_temp)) {\n\t\t// Wrapping pour les icones de background des mailings\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->mailing->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'scanner_user_temp' && !empty($conf->scanner->dir_temp)) {\n\t\t// Wrapping pour le scanner\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->scanner->dir_temp.'/'.$fuser->id.'/'.$original_file;\n\t} elseif ($modulepart == 'fckeditor' && !empty($conf->fckeditor->dir_output)) {\n\t\t// Wrapping pour les images fckeditor\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->fckeditor->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'user' && !empty($conf->user->dir_output)) {\n\t\t// Wrapping for users\n\t\t$canreaduser = (!empty($fuser->admin) || $fuser->rights->user->user->{$lire});\n\t\tif ($fuser->id == (int) $refname) {\n\t\t\t$canreaduser = 1;\n\t\t} // A user can always read its own card\n\t\tif ($canreaduser || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->user->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'company' || $modulepart == 'societe' || $modulepart == 'thirdparty') && !empty($conf->societe->multidir_output[$entity])) {\n\t\t// Wrapping for third parties\n\t\tif (empty($entity) || empty($conf->societe->multidir_output[$entity])) {\n\t\t\treturn array('accessallowed'=>0, 'error'=>'Value entity must be provided');\n\t\t}\n\t\tif ($fuser->rights->societe->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->societe->multidir_output[$entity].'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT rowid as fk_soc FROM \".MAIN_DB_PREFIX.\"societe WHERE rowid='\".$db->escape($refname).\"' AND entity IN (\".getEntity('societe').\")\";\n\t} elseif ($modulepart == 'contact' && !empty($conf->societe->multidir_output[$entity])) {\n\t\t// Wrapping for contact\n\t\tif (empty($entity) || empty($conf->societe->multidir_output[$entity])) {\n\t\t\treturn array('accessallowed'=>0, 'error'=>'Value entity must be provided');\n\t\t}\n\t\tif ($fuser->rights->societe->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->societe->multidir_output[$entity].'/contact/'.$original_file;\n\t} elseif (($modulepart == 'facture' || $modulepart == 'invoice') && !empty($conf->facture->multidir_output[$entity])) {\n\t\t// Wrapping for invoices\n\t\tif ($fuser->rights->facture->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->facture->multidir_output[$entity].'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"facture WHERE ref='\".$db->escape($refname).\"' AND entity IN (\".getEntity('invoice').\")\";\n\t} elseif ($modulepart == 'massfilesarea_proposals' && !empty($conf->propal->multidir_output[$entity])) {\n\t\t// Wrapping for mass actions\n\t\tif ($fuser->rights->propal->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->propal->multidir_output[$entity].'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_orders') {\n\t\tif ($fuser->rights->commande->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->commande->multidir_output[$entity].'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_sendings') {\n\t\tif ($fuser->rights->expedition->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->expedition->dir_output.'/sending/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_invoices') {\n\t\tif ($fuser->rights->facture->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->facture->multidir_output[$entity].'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_expensereport') {\n\t\tif ($fuser->rights->facture->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->expensereport->dir_output.'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_interventions') {\n\t\tif ($fuser->rights->ficheinter->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->ficheinter->dir_output.'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_supplier_proposal' && !empty($conf->supplier_proposal->dir_output)) {\n\t\tif ($fuser->rights->supplier_proposal->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->supplier_proposal->dir_output.'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_supplier_order') {\n\t\tif ($fuser->rights->fournisseur->commande->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->commande->dir_output.'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_supplier_invoice') {\n\t\tif ($fuser->rights->fournisseur->facture->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->facture->dir_output.'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif ($modulepart == 'massfilesarea_contract' && !empty($conf->contrat->dir_output)) {\n\t\tif ($fuser->rights->contrat->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->contrat->dir_output.'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t} elseif (($modulepart == 'fichinter' || $modulepart == 'ficheinter') && !empty($conf->ficheinter->dir_output)) {\n\t\t// Wrapping for interventions\n\t\tif ($fuser->rights->ficheinter->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->ficheinter->dir_output.'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"fichinter WHERE ref='\".$db->escape($refname).\"' AND entity=\".$conf->entity;\n\t} elseif ($modulepart == 'deplacement' && !empty($conf->deplacement->dir_output)) {\n\t\t// Wrapping pour les deplacements et notes de frais\n\t\tif ($fuser->rights->deplacement->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->deplacement->dir_output.'/'.$original_file;\n\t\t//$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"fichinter WHERE ref='\".$db->escape($refname).\"' AND entity=\".$conf->entity;\n\t} elseif (($modulepart == 'propal' || $modulepart == 'propale') && !empty($conf->propal->multidir_output[$entity])) {\n\t\t// Wrapping pour les propales\n\t\tif ($fuser->rights->propale->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->propal->multidir_output[$entity].'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"propal WHERE ref='\".$db->escape($refname).\"' AND entity IN (\".getEntity('propal').\")\";\n\t} elseif (($modulepart == 'commande' || $modulepart == 'order') && !empty($conf->commande->multidir_output[$entity])) {\n\t\t// Wrapping pour les commandes\n\t\tif ($fuser->rights->commande->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->commande->multidir_output[$entity].'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"commande WHERE ref='\".$db->escape($refname).\"' AND entity IN (\".getEntity('order').\")\";\n\t} elseif ($modulepart == 'project' && !empty($conf->projet->dir_output)) {\n\t\t// Wrapping pour les projets\n\t\tif ($fuser->rights->projet->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t\t// If we known $id of project, call checkUserAccessToObject to check permission on properties and contact of project\n\t\t\tif ($refname && !preg_match('/^specimen/i', $original_file)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n\t\t\t\t$tmpproject = new Project($db);\n\t\t\t\t$tmpproject->fetch('', $refname);\n\t\t\t\t$accessallowed = checkUserAccessToObject($user, array('projet'), $tmpproject->id, 'projet&project', '', '', 'rowid', '');\n\t\t\t}\n\t\t}\n\t\t$original_file = $conf->projet->dir_output.'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"projet WHERE ref='\".$db->escape($refname).\"' AND entity IN (\".getEntity('project').\")\";\n\t} elseif ($modulepart == 'project_task' && !empty($conf->projet->dir_output)) {\n\t\tif ($fuser->rights->projet->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t\t// If we known $id of project, call checkUserAccessToObject to check permission on properties and contact of project\n\t\t\tif ($refname && !preg_match('/^specimen/i', $original_file)) {\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/projet/class/task.class.php';\n\t\t\t\t$tmptask = new Task($db);\n\t\t\t\t$tmptask->fetch('', $refname);\n\t\t\t\t$accessallowed = checkUserAccessToObject($user, array('projet_task'), $tmptask->id, 'projet_task&project', '', '', 'rowid', '');\n\t\t\t}\n\t\t}\n\t\t$original_file = $conf->projet->dir_output.'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"projet WHERE ref='\".$db->escape($refname).\"' AND entity IN (\".getEntity('project').\")\";\n\t} elseif (($modulepart == 'commande_fournisseur' || $modulepart == 'order_supplier') && !empty($conf->fournisseur->commande->dir_output)) {\n\t\t// Wrapping pour les commandes fournisseurs\n\t\tif ($fuser->rights->fournisseur->commande->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->commande->dir_output.'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"commande_fournisseur WHERE ref='\".$db->escape($refname).\"' AND entity=\".$conf->entity;\n\t} elseif (($modulepart == 'facture_fournisseur' || $modulepart == 'invoice_supplier') && !empty($conf->fournisseur->facture->dir_output)) {\n\t\t// Wrapping pour les factures fournisseurs\n\t\tif ($fuser->rights->fournisseur->facture->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->facture->dir_output.'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"facture_fourn WHERE ref='\".$db->escape($refname).\"' AND entity=\".$conf->entity;\n\t} elseif ($modulepart == 'supplier_payment') {\n\t\t// Wrapping pour les rapport de paiements\n\t\tif ($fuser->rights->fournisseur->facture->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->fournisseur->payment->dir_output.'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"paiementfournisseur WHERE ref='\".$db->escape($refname).\"' AND entity=\".$conf->entity;\n\t} elseif ($modulepart == 'facture_paiement' && !empty($conf->facture->dir_output)) {\n\t\t// Wrapping pour les rapport de paiements\n\t\tif ($fuser->rights->facture->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\tif ($fuser->societe_id > 0) {\n\t\t\t$original_file = $conf->facture->dir_output.'/payments/private/'.$fuser->id.'/'.$original_file;\n\t\t} else {\n\t\t\t$original_file = $conf->facture->dir_output.'/payments/'.$original_file;\n\t\t}\n\t} elseif ($modulepart == 'export_compta' && !empty($conf->accounting->dir_output)) {\n\t\t// Wrapping for accounting exports\n\t\tif ($fuser->rights->accounting->bind->write || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->accounting->dir_output.'/'.$original_file;\n\t} elseif (($modulepart == 'expedition' || $modulepart == 'shipment') && !empty($conf->expedition->dir_output)) {\n\t\t// Wrapping pour les expedition\n\t\tif ($fuser->rights->expedition->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->expedition->dir_output.\"/\".(strpos('sending/', $original_file) === 0 ? '' : 'sending/').$original_file;\n\t\t//$original_file = $conf->expedition->dir_output.\"/\".$original_file;\n\t} elseif (($modulepart == 'livraison' || $modulepart == 'delivery') && !empty($conf->expedition->dir_output)) {\n\t\t// Delivery Note Wrapping\n\t\tif ($fuser->rights->expedition->delivery->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->expedition->dir_output.\"/\".(strpos('receipt/', $original_file) === 0 ? '' : 'receipt/').$original_file;\n\t} elseif ($modulepart == 'actions' && !empty($conf->agenda->dir_output)) {\n\t\t// Wrapping pour les actions\n\t\tif ($fuser->rights->agenda->myactions->{$read} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->agenda->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'actionsreport' && !empty($conf->agenda->dir_temp)) {\n\t\t// Wrapping pour les actions\n\t\tif ($fuser->rights->agenda->allactions->{$read} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->agenda->dir_temp.\"/\".$original_file;\n\t} elseif ($modulepart == 'product' || $modulepart == 'produit' || $modulepart == 'service' || $modulepart == 'produit|service') {\n\t\t// Wrapping pour les produits et services\n\t\tif (empty($entity) || (empty($conf->product->multidir_output[$entity]) && empty($conf->service->multidir_output[$entity]))) {\n\t\t\treturn array('accessallowed'=>0, 'error'=>'Value entity must be provided');\n\t\t}\n\t\tif (($fuser->rights->produit->{$lire} || $fuser->rights->service->{$lire}) || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\tif (!empty($conf->product->enabled)) {\n\t\t\t$original_file = $conf->product->multidir_output[$entity].'/'.$original_file;\n\t\t} elseif (!empty($conf->service->enabled)) {\n\t\t\t$original_file = $conf->service->multidir_output[$entity].'/'.$original_file;\n\t\t}\n\t} elseif ($modulepart == 'product_batch' || $modulepart == 'produitlot') {\n\t\t// Wrapping pour les lots produits\n\t\tif (empty($entity) || (empty($conf->productbatch->multidir_output[$entity]))) {\n\t\t\treturn array('accessallowed'=>0, 'error'=>'Value entity must be provided');\n\t\t}\n\t\tif (($fuser->rights->produit->{$lire} ) || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\tif (!empty($conf->productbatch->enabled)) {\n\t\t\t$original_file = $conf->productbatch->multidir_output[$entity].'/'.$original_file;\n\t\t}\n\t} elseif ($modulepart == 'movement' || $modulepart == 'mouvement') {\n\t\t// Wrapping for stock movements\n\t\tif (empty($entity) || empty($conf->stock->multidir_output[$entity])) {\n\t\t\treturn array('accessallowed'=>0, 'error'=>'Value entity must be provided');\n\t\t}\n\t\tif (($fuser->rights->stock->{$lire} || $fuser->rights->stock->movement->{$lire} || $fuser->rights->stock->mouvement->{$lire}) || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\tif (!empty($conf->stock->enabled)) {\n\t\t\t$original_file = $conf->stock->multidir_output[$entity].'/movement/'.$original_file;\n\t\t}\n\t} elseif ($modulepart == 'contract' && !empty($conf->contrat->multidir_output[$entity])) {\n\t\t// Wrapping pour les contrats\n\t\tif ($fuser->rights->contrat->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->contrat->multidir_output[$entity].'/'.$original_file;\n\t\t$sqlprotectagainstexternals = \"SELECT fk_soc as fk_soc FROM \".MAIN_DB_PREFIX.\"contrat WHERE ref='\".$db->escape($refname).\"' AND entity IN (\".getEntity('contract').\")\";\n\t} elseif ($modulepart == 'donation' && !empty($conf->don->dir_output)) {\n\t\t// Wrapping pour les dons\n\t\tif ($fuser->rights->don->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->don->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'dolresource' && !empty($conf->resource->dir_output)) {\n\t\t// Wrapping pour les dons\n\t\tif ($fuser->rights->resource->{$read} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->resource->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'remisecheque' && !empty($conf->bank->dir_output)) {\n\t\t// Wrapping pour les remises de cheques\n\t\tif ($fuser->rights->banque->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\n\t\t$original_file = $conf->bank->dir_output.'/checkdeposits/'.$original_file; // original_file should contains relative path so include the get_exdir result\n\t} elseif (($modulepart == 'banque' || $modulepart == 'bank') && !empty($conf->bank->dir_output)) {\n\t\t// Wrapping for bank\n\t\tif ($fuser->rights->banque->{$lire}) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->bank->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'export' && !empty($conf->export->dir_temp)) {\n\t\t// Wrapping for export module\n\t\t// Note that a test may not be required because we force the dir of download on the directory of the user that export\n\t\t$accessallowed = $user->rights->export->lire;\n\t\t$original_file = $conf->export->dir_temp.'/'.$fuser->id.'/'.$original_file;\n\t} elseif ($modulepart == 'import' && !empty($conf->import->dir_temp)) {\n\t\t// Wrapping for import module\n\t\t$accessallowed = $user->rights->import->run;\n\t\t$original_file = $conf->import->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'editor' && !empty($conf->fckeditor->dir_output)) {\n\t\t// Wrapping for wysiwyg editor\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->fckeditor->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'systemtools' && !empty($conf->admin->dir_output)) {\n\t\t// Wrapping for backups\n\t\tif ($fuser->admin) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->admin->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'admin_temp' && !empty($conf->admin->dir_temp)) {\n\t\t// Wrapping for upload file test\n\t\tif ($fuser->admin) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->admin->dir_temp.'/'.$original_file;\n\t} elseif ($modulepart == 'bittorrent' && !empty($conf->bittorrent->dir_output)) {\n\t\t// Wrapping pour BitTorrent\n\t\t$accessallowed = 1;\n\t\t$dir = 'files';\n\t\tif (dol_mimetype($original_file) == 'application/x-bittorrent') {\n\t\t\t$dir = 'torrents';\n\t\t}\n\t\t$original_file = $conf->bittorrent->dir_output.'/'.$dir.'/'.$original_file;\n\t} elseif ($modulepart == 'member' && !empty($conf->adherent->dir_output)) {\n\t\t// Wrapping pour Foundation module\n\t\tif ($fuser->rights->adherent->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1;\n\t\t}\n\t\t$original_file = $conf->adherent->dir_output.'/'.$original_file;\n\t} elseif ($modulepart == 'scanner_user_temp' && !empty($conf->scanner->dir_temp)) {\n\t\t// Wrapping for Scanner\n\t\t$accessallowed = 1;\n\t\t$original_file = $conf->scanner->dir_temp.'/'.$fuser->id.'/'.$original_file;\n\t\t// If modulepart=module_user_temp\tAllows any module to open a file if file is in directory called DOL_DATA_ROOT/modulepart/temp/iduser\n\t\t// If modulepart=module_temp\t\tAllows any module to open a file if file is in directory called DOL_DATA_ROOT/modulepart/temp\n\t\t// If modulepart=module_user\t\tAllows any module to open a file if file is in directory called DOL_DATA_ROOT/modulepart/iduser\n\t\t// If modulepart=module\t\t\t\tAllows any module to open a file if file is in directory called DOL_DATA_ROOT/modulepart\n\t\t// If modulepart=module-abc\t\t\tAllows any module to open a file if file is in directory called DOL_DATA_ROOT/modulepart\n\t} else {\n\t\t// GENERIC Wrapping\n\t\t//var_dump($modulepart);\n\t\t//var_dump($original_file);\n\t\tif (preg_match('/^specimen/i', $original_file)) {\n\t\t\t$accessallowed = 1; // If link to a file called specimen. Test must be done before changing $original_file int full path.\n\t\t}\n\t\tif ($fuser->admin) {\n\t\t\t$accessallowed = 1; // If user is admin\n\t\t}\n\n\t\t$tmpmodulepart = explode('-', $modulepart);\n\t\tif (!empty($tmpmodulepart[1])) {\n\t\t\t\t$modulepart = $tmpmodulepart[0];\n\t\t\t\t$original_file = $tmpmodulepart[1].'/'.$original_file;\n\t\t}\n\n\t\t// Define $accessallowed\n\t\t$reg = array();\n\t\tif (preg_match('/^([a-z]+)_user_temp$/i', $modulepart, $reg)) {\n\t\t\tif (empty($conf->{$reg[1]}->dir_temp)) {\t// modulepart not supported\n\t\t\t\tdol_print_error('', 'Error call dol_check_secure_access_document with not supported value for modulepart parameter ('.$modulepart.')');\n\t\t\t\texit;\n\t\t\t}\n\t\t\tif ($fuser->rights->{$reg[1]}->{$lire} || $fuser->rights->{$reg[1]}->{$read} || ($fuser->rights->{$reg[1]}->{$download})) {\n\t\t\t\t$accessallowed = 1;\n\t\t\t}\n\t\t\t$original_file = $conf->{$reg[1]}->dir_temp.'/'.$fuser->id.'/'.$original_file;\n\t\t} elseif (preg_match('/^([a-z]+)_temp$/i', $modulepart, $reg)) {\n\t\t\tif (empty($conf->{$reg[1]}->dir_temp)) {\t// modulepart not supported\n\t\t\t\tdol_print_error('', 'Error call dol_check_secure_access_document with not supported value for modulepart parameter ('.$modulepart.')');\n\t\t\t\texit;\n\t\t\t}\n\t\t\tif ($fuser->rights->{$reg[1]}->{$lire} || $fuser->rights->{$reg[1]}->{$read} || ($fuser->rights->{$reg[1]}->{$download})) {\n\t\t\t\t$accessallowed = 1;\n\t\t\t}\n\t\t\t$original_file = $conf->{$reg[1]}->dir_temp.'/'.$original_file;\n\t\t} elseif (preg_match('/^([a-z]+)_user$/i', $modulepart, $reg)) {\n\t\t\tif (empty($conf->{$reg[1]}->dir_output)) {\t// modulepart not supported\n\t\t\t\tdol_print_error('', 'Error call dol_check_secure_access_document with not supported value for modulepart parameter ('.$modulepart.')');\n\t\t\t\texit;\n\t\t\t}\n\t\t\tif ($fuser->rights->{$reg[1]}->{$lire} || $fuser->rights->{$reg[1]}->{$read} || ($fuser->rights->{$reg[1]}->{$download})) {\n\t\t\t\t$accessallowed = 1;\n\t\t\t}\n\t\t\t$original_file = $conf->{$reg[1]}->dir_output.'/'.$fuser->id.'/'.$original_file;\n\t\t} elseif (preg_match('/^massfilesarea_([a-z]+)$/i', $modulepart, $reg)) {\n\t\t\tif (empty($conf->{$reg[1]}->dir_output)) {\t// modulepart not supported\n\t\t\t\tdol_print_error('', 'Error call dol_check_secure_access_document with not supported value for modulepart parameter ('.$modulepart.')');\n\t\t\t\texit;\n\t\t\t}\n\t\t\tif ($fuser->rights->{$reg[1]}->{$lire} || preg_match('/^specimen/i', $original_file)) {\n\t\t\t\t$accessallowed = 1;\n\t\t\t}\n\t\t\t$original_file = $conf->{$reg[1]}->dir_output.'/temp/massgeneration/'.$user->id.'/'.$original_file;\n\t\t} else {\n\t\t\tif (empty($conf->$modulepart->dir_output)) {\t// modulepart not supported\n\t\t\t\tdol_print_error('', 'Error call dol_check_secure_access_document with not supported value for modulepart parameter ('.$modulepart.'). The module for this modulepart value may not be activated.');\n\t\t\t\texit;\n\t\t\t}\n\n\t\t\t// Check fuser->rights->modulepart->myobject->read and fuser->rights->modulepart->read\n\t\t\t$partsofdirinoriginalfile = explode('/', $original_file);\n\t\t\tif (!empty($partsofdirinoriginalfile[1])) {\t// If original_file is xxx/filename (xxx is a part we will use)\n\t\t\t\t$partofdirinoriginalfile = $partsofdirinoriginalfile[0];\n\t\t\t\tif ($partofdirinoriginalfile && !empty($fuser->rights->$modulepart->$partofdirinoriginalfile) && ($fuser->rights->$modulepart->$partofdirinoriginalfile->{$lire} || $fuser->rights->$modulepart->$partofdirinoriginalfile->{$read})) {\n\t\t\t\t\t$accessallowed = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!empty($fuser->rights->$modulepart->{$lire}) || !empty($fuser->rights->$modulepart->{$read})) {\n\t\t\t\t$accessallowed = 1;\n\t\t\t}\n\n\t\t\tif (is_array($conf->$modulepart->multidir_output) && !empty($conf->$modulepart->multidir_output[$entity])) {\n\t\t\t\t$original_file = $conf->$modulepart->multidir_output[$entity].'/'.$original_file;\n\t\t\t} else {\n\t\t\t\t$original_file = $conf->$modulepart->dir_output.'/'.$original_file;\n\t\t\t}\n\t\t}\n\n\t\t$parameters = array(\n\t\t\t'modulepart' => $modulepart,\n\t\t\t'original_file' => $original_file,\n\t\t\t'entity' => $entity,\n\t\t\t'fuser' => $fuser,\n\t\t\t'refname' => '',\n\t\t\t'mode' => $mode\n\t\t);\n\t\t$reshook = $hookmanager->executeHooks('checkSecureAccess', $parameters, $object);\n\t\tif ($reshook > 0) {\n\t\t\tif (!empty($hookmanager->resArray['original_file'])) {\n\t\t\t\t$original_file = $hookmanager->resArray['original_file'];\n\t\t\t}\n\t\t\tif (!empty($hookmanager->resArray['accessallowed'])) {\n\t\t\t\t$accessallowed = $hookmanager->resArray['accessallowed'];\n\t\t\t}\n\t\t\tif (!empty($hookmanager->resArray['sqlprotectagainstexternals'])) {\n\t\t\t\t$sqlprotectagainstexternals = $hookmanager->resArray['sqlprotectagainstexternals'];\n\t\t\t}\n\t\t}\n\t}\n\n\t$ret = array(\n\t\t'accessallowed' => ($accessallowed ? 1 : 0),\n\t\t'sqlprotectagainstexternals' => $sqlprotectagainstexternals,\n\t\t'original_file' => $original_file\n\t);\n\n\treturn $ret;\n}\n\n/**\n * Store object in file.\n *\n * @param string $directory Directory of cache\n * @param string $filename Name of filecache\n * @param mixed $object Object to store in cachefile\n * @return void\n */\nfunction dol_filecache($directory, $filename, $object)\n{\n\tif (!dol_is_dir($directory)) {\n\t\tdol_mkdir($directory);\n\t}\n\t$cachefile = $directory.$filename;\n\tfile_put_contents($cachefile, serialize($object), LOCK_EX);\n\t@chmod($cachefile, 0644);\n}\n\n/**\n * Test if Refresh needed.\n *\n * @param string $directory Directory of cache\n * @param string $filename Name of filecache\n * @param int $cachetime Cachetime delay\n * @return boolean 0 no refresh 1 if refresh needed\n */\nfunction dol_cache_refresh($directory, $filename, $cachetime)\n{\n\t$now = dol_now();\n\t$cachefile = $directory.$filename;\n\t$refresh = !file_exists($cachefile) || ($now - $cachetime) > dol_filemtime($cachefile);\n\treturn $refresh;\n}\n\n/**\n * Read object from cachefile.\n *\n * @param string $directory Directory of cache\n * @param string $filename Name of filecache\n * @return mixed Unserialise from file\n */\nfunction dol_readcachefile($directory, $filename)\n{\n\t$cachefile = $directory.$filename;\n\t$object = unserialize(file_get_contents($cachefile));\n\treturn $object;\n}\n\n\n/**\n * Function to get list of updated or modified files.\n * $file_list is used as global variable\n *\n * @param\tarray\t\t\t\t$file_list\t        Array for response\n * @param   SimpleXMLElement\t$dir    \t        SimpleXMLElement of files to test\n * @param   string   \t\t\t$path   \t        Path of files relative to $pathref. We start with ''. Used by recursive calls.\n * @param   string              $pathref            Path ref (DOL_DOCUMENT_ROOT)\n * @param   array               $checksumconcat     Array of checksum\n * @return  array               \t\t\t        Array of filenames\n */\nfunction getFilesUpdated(&$file_list, SimpleXMLElement $dir, $path = '', $pathref = '', &$checksumconcat = array())\n{\n\tglobal $conffile;\n\n\t$exclude = 'install';\n\n\tforeach ($dir->md5file as $file) {    // $file is a simpleXMLElement\n\t\t$filename = $path.$file['name'];\n\t\t$file_list['insignature'][] = $filename;\n\t\t$expectedsize = (empty($file['size']) ? '' : $file['size']);\n\t\t$expectedmd5 = (string) $file;\n\n\t\t//if (preg_match('#'.$exclude.'#', $filename)) continue;\n\n\t\tif (!file_exists($pathref.'/'.$filename)) {\n\t\t\t$file_list['missing'][] = array('filename'=>$filename, 'expectedmd5'=>$expectedmd5, 'expectedsize'=>$expectedsize);\n\t\t} else {\n\t\t\t$md5_local = md5_file($pathref.'/'.$filename);\n\n\t\t\tif ($conffile == '/etc/dolibarr/conf.php' && $filename == '/filefunc.inc.php') {\t// For install with deb or rpm, we ignore test on filefunc.inc.php that was modified by package\n\t\t\t\t$checksumconcat[] = $expectedmd5;\n\t\t\t} else {\n\t\t\t\tif ($md5_local != $expectedmd5) {\n\t\t\t\t\t$file_list['updated'][] = array('filename'=>$filename, 'expectedmd5'=>$expectedmd5, 'expectedsize'=>$expectedsize, 'md5'=>(string) $md5_local);\n\t\t\t\t}\n\t\t\t\t$checksumconcat[] = $md5_local;\n\t\t\t}\n\t\t}\n\t}\n\n\tforeach ($dir->dir as $subdir) {\t\t\t// $subdir['name'] is  '' or '/accountancy/admin' for example\n\t\tgetFilesUpdated($file_list, $subdir, $path.$subdir['name'].'/', $pathref, $checksumconcat);\n\t}\n\n\treturn $file_list;\n}\n", "<?php\n/* Copyright (C) 2005       Marc Barilley / Ocebo   <marc@ocebo.com>\n * Copyright (C) 2005-2018  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2005-2011  Regis Houssin           <regis.houssin@inodbox.com>\n * Copyright (C) 2010       Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2015-2016  Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n *\n * Upgrade2 scripts can be ran from command line with syntax:\n *\n * cd htdocs/install\n * php upgrade.php 3.4.0 3.5.0 [dirmodule|ignoredbversion]\n * php upgrade2.php 3.4.0 3.5.0 [MAIN_MODULE_NAME1_TO_ENABLE,MAIN_MODULE_NAME2_TO_ENABLE]\n *\n * And for final step:\n * php step5.php 3.4.0 3.5.0\n *\n * Return code is 0 if OK, >0 if error\n *\n * Note: To just enable a module from command line, use this syntax:\n * php upgrade2.php 0.0.0 0.0.0 [MAIN_MODULE_NAME1_TO_ENABLE,MAIN_MODULE_NAME2_TO_ENABLE]\n */\n\n/**\n *\t\\file       htdocs/install/upgrade2.php\n *\t\\brief      Upgrade some data\n */\n\ninclude_once 'inc.php';\nif (!file_exists($conffile)) {\n\tprint 'Error: Dolibarr config file was not found. This may means that Dolibarr is not installed yet. Please call the page \"/install/index.php\" instead of \"/install/upgrade.php\").';\n}\nrequire_once $conffile;\nrequire_once $dolibarr_main_document_root.'/compta/facture/class/facture.class.php';\nrequire_once $dolibarr_main_document_root.'/comm/propal/class/propal.class.php';\nrequire_once $dolibarr_main_document_root.'/contrat/class/contrat.class.php';\nrequire_once $dolibarr_main_document_root.'/commande/class/commande.class.php';\nrequire_once $dolibarr_main_document_root.'/fourn/class/fournisseur.commande.class.php';\nrequire_once $dolibarr_main_document_root.'/core/lib/price.lib.php';\nrequire_once $dolibarr_main_document_root.'/core/class/menubase.class.php';\nrequire_once $dolibarr_main_document_root.'/core/lib/files.lib.php';\n\nglobal $langs;\n\n$grant_query = '';\n$step = 2;\n$error = 0;\n\n\n// Cette page peut etre longue. On augmente le delai autorise.\n// Ne fonctionne que si on est pas en safe_mode.\n$err = error_reporting();\nerror_reporting(0);\nif (!empty($conf->global->MAIN_OVERRIDE_TIME_LIMIT)) {\n\t@set_time_limit((int) $conf->global->MAIN_OVERRIDE_TIME_LIMIT);\n} else {\n\t@set_time_limit(600);\n}\nerror_reporting($err);\n\n$setuplang = GETPOST(\"selectlang\", 'aZ09', 3) ?GETPOST(\"selectlang\", 'aZ09', 3) : 'auto';\n$langs->setDefaultLang($setuplang);\n$versionfrom = GETPOST(\"versionfrom\", 'alpha', 3) ?GETPOST(\"versionfrom\", 'alpha', 3) : (empty($argv[1]) ? '' : $argv[1]);\n$versionto = GETPOST(\"versionto\", 'alpha', 3) ?GETPOST(\"versionto\", 'alpha', 3) : (empty($argv[2]) ? '' : $argv[2]);\n$enablemodules = GETPOST(\"enablemodules\", 'alpha', 3) ?GETPOST(\"enablemodules\", 'alpha', 3) : (empty($argv[3]) ? '' : $argv[3]);\n\n$langs->loadLangs(array(\"admin\", \"install\", \"bills\", \"suppliers\"));\n\nif ($dolibarr_main_db_type == 'mysqli') {\n\t$choix = 1;\n}\nif ($dolibarr_main_db_type == 'pgsql') {\n\t$choix = 2;\n}\nif ($dolibarr_main_db_type == 'mssql') {\n\t$choix = 3;\n}\n\n\ndolibarr_install_syslog(\"--- upgrade2: entering upgrade2.php page \".$versionfrom.\" \".$versionto.\" \".$enablemodules);\nif (!is_object($conf)) {\n\tdolibarr_install_syslog(\"upgrade2: conf file not initialized\", LOG_ERR);\n}\n\n\n\n/*\n * View\n */\n\nif ((!$versionfrom || preg_match('/version/', $versionfrom)) && (!$versionto || preg_match('/version/', $versionto))) {\n\tprint 'Error: Parameter versionfrom or versionto missing or having a bad format.'.\"\\n\";\n\tprint 'Upgrade must be ran from command line with parameters or called from page install/index.php (like a first install)'.\"\\n\";\n\t// Test if batch mode\n\t$sapi_type = php_sapi_name();\n\t$script_file = basename(__FILE__);\n\t$path = __DIR__.'/';\n\tif (substr($sapi_type, 0, 3) == 'cli') {\n\t\tprint 'Syntax from command line: '.$script_file.\" x.y.z a.b.c [MAIN_MODULE_NAME1_TO_ENABLE,MAIN_MODULE_NAME2_TO_ENABLE...]\\n\";\n\t}\n\texit;\n}\n\npHeader('', 'step5', GETPOST('action', 'aZ09') ?GETPOST('action', 'aZ09') : 'upgrade', 'versionfrom='.$versionfrom.'&versionto='.$versionto, '', 'main-inside main-inside-borderbottom');\n\n\nif (!GETPOST('action', 'aZ09') || preg_match('/upgrade/i', GETPOST('action', 'aZ09'))) {\n\tprint '<h3><img class=\"valignmiddle inline-block paddingright\" src=\"../theme/common/octicons/build/svg/database.svg\" width=\"20\" alt=\"Database\"> ';\n\tprint '<span class=\"inline-block\">'.$langs->trans('DataMigration').'</span></h3>';\n\n\tprint '<table border=\"0\" width=\"100%\">';\n\n\t// If password is encoded, we decode it\n\tif (preg_match('/crypted:/i', $dolibarr_main_db_pass) || !empty($dolibarr_main_db_encrypted_pass)) {\n\t\trequire_once $dolibarr_main_document_root.'/core/lib/security.lib.php';\n\t\tif (preg_match('/crypted:/i', $dolibarr_main_db_pass)) {\n\t\t\t$dolibarr_main_db_pass = preg_replace('/crypted:/i', '', $dolibarr_main_db_pass);\n\t\t\t$dolibarr_main_db_pass = dol_decode($dolibarr_main_db_pass);\n\t\t\t$dolibarr_main_db_encrypted_pass = $dolibarr_main_db_pass; // We need to set this as it is used to know the password was initially crypted\n\t\t} else {\n\t\t\t$dolibarr_main_db_pass = dol_decode($dolibarr_main_db_encrypted_pass);\n\t\t}\n\t}\n\n\t// $conf is already instancied inside inc.php\n\t$conf->db->type = $dolibarr_main_db_type;\n\t$conf->db->host = $dolibarr_main_db_host;\n\t$conf->db->port = $dolibarr_main_db_port;\n\t$conf->db->name = $dolibarr_main_db_name;\n\t$conf->db->user = $dolibarr_main_db_user;\n\t$conf->db->pass = $dolibarr_main_db_pass;\n\n\t$db = getDoliDBInstance($conf->db->type, $conf->db->host, $conf->db->user, $conf->db->pass, $conf->db->name, $conf->db->port);\n\n\tif (!$db->connected) {\n\t\tprint '<tr><td colspan=\"4\">'.$langs->trans(\"ErrorFailedToConnectToDatabase\", $conf->db->name).'</td><td class=\"right\">'.$langs->trans('Error').'</td></tr>';\n\t\tdolibarr_install_syslog('upgrade2: failed to connect to database :'.$conf->db->name.' on '.$conf->db->host.' for user '.$conf->db->user, LOG_ERR);\n\t\t$error++;\n\t}\n\n\tif (!$error) {\n\t\tif ($db->database_selected) {\n\t\t\tdolibarr_install_syslog('upgrade2: database connection successful :'.$dolibarr_main_db_name);\n\t\t} else {\n\t\t\t$error++;\n\t\t}\n\t}\n\n\tif (empty($dolibarr_main_db_encryption)) {\n\t\t$dolibarr_main_db_encryption = 0;\n\t}\n\t$conf->db->dolibarr_main_db_encryption = $dolibarr_main_db_encryption;\n\tif (empty($dolibarr_main_db_cryptkey)) {\n\t\t$dolibarr_main_db_cryptkey = '';\n\t}\n\t$conf->db->dolibarr_main_db_cryptkey = $dolibarr_main_db_cryptkey;\n\n\t// Chargement config\n\tif (!$error) {\n\t\t$conf->setValues($db);\n\t\t// Reset forced setup after the setValues\n\t\tif (defined('SYSLOG_FILE')) {\n\t\t\t$conf->global->SYSLOG_FILE = constant('SYSLOG_FILE');\n\t\t}\n\t\t$conf->global->MAIN_ENABLE_LOG_TO_HTML = 1;\n\t}\n\n\t// Create the global $hookmanager object\n\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/hookmanager.class.php';\n\t$hookmanager = new HookManager($db);\n\t$hookmanager->initHooks(array('upgrade'));\n\n\n\t/***************************************************************************************\n\t *\n\t * Migration of data\n\t *\n\t ***************************************************************************************/\n\t$db->begin();\n\n\tif (!$error) {\n\t\t// Current version is $conf->global->MAIN_VERSION_LAST_UPGRADE\n\t\t// Version to install is DOL_VERSION\n\t\t$dolibarrlastupgradeversionarray = preg_split('/[\\.-]/', isset($conf->global->MAIN_VERSION_LAST_UPGRADE) ? $conf->global->MAIN_VERSION_LAST_UPGRADE : (isset($conf->global->MAIN_VERSION_LAST_INSTALL) ? $conf->global->MAIN_VERSION_LAST_INSTALL : ''));\n\n\t\t// Chaque action de migration doit renvoyer une ligne sur 4 colonnes avec\n\t\t// dans la 1ere colonne, la description de l'action a faire\n\t\t// dans la 4eme colonne, le texte 'OK' si fait ou 'AlreadyDone' si rien n'est fait ou 'Error'\n\n\t\t$versiontoarray = explode('.', $versionto);\n\t\t$versionranarray = explode('.', DOL_VERSION);\n\n\n\t\t// Force to execute this at begin to avoid the new core code into Dolibarr to be broken.\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'user ADD COLUMN birth date';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'user ADD COLUMN dateemployment date';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'user ADD COLUMN dateemploymentend date';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'user ADD COLUMN default_range integer';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'user ADD COLUMN default_c_exp_tax_cat integer';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'extrafields ADD COLUMN langs varchar(24)';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'extrafields ADD COLUMN fieldcomputed text';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'extrafields ADD COLUMN fielddefault varchar(255)';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.\"extrafields ADD COLUMN enabled varchar(255) DEFAULT '1'\";\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'extrafields ADD COLUMN help text';\n\t\t$db->query($sql, 1);\n\t\t$sql = 'ALTER TABLE '.MAIN_DB_PREFIX.'user_rights ADD COLUMN entity integer DEFAULT 1 NOT NULL';\n\t\t$db->query($sql, 1);\n\n\n\t\t$afterversionarray = explode('.', '2.0.0');\n\t\t$beforeversionarray = explode('.', '2.7.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\t// Script pour V2 -> V2.1\n\t\t\tmigrate_paiements($db, $langs, $conf);\n\n\t\t\tmigrate_contracts_det($db, $langs, $conf);\n\n\t\t\tmigrate_contracts_date1($db, $langs, $conf);\n\n\t\t\tmigrate_contracts_date2($db, $langs, $conf);\n\n\t\t\tmigrate_contracts_date3($db, $langs, $conf);\n\n\t\t\tmigrate_contracts_open($db, $langs, $conf);\n\n\t\t\tmigrate_modeles($db, $langs, $conf);\n\n\t\t\tmigrate_price_propal($db, $langs, $conf);\n\n\t\t\tmigrate_price_commande($db, $langs, $conf);\n\n\t\t\tmigrate_price_commande_fournisseur($db, $langs, $conf);\n\n\t\t\tmigrate_price_contrat($db, $langs, $conf);\n\n\t\t\tmigrate_paiementfourn_facturefourn($db, $langs, $conf);\n\n\n\t\t\t// Script pour V2.1 -> V2.2\n\t\t\tmigrate_paiements_orphelins_1($db, $langs, $conf);\n\n\t\t\tmigrate_paiements_orphelins_2($db, $langs, $conf);\n\n\t\t\tmigrate_links_transfert($db, $langs, $conf);\n\n\n\t\t\t// Script pour V2.2 -> V2.4\n\t\t\tmigrate_commande_expedition($db, $langs, $conf);\n\n\t\t\tmigrate_commande_livraison($db, $langs, $conf);\n\n\t\t\tmigrate_detail_livraison($db, $langs, $conf);\n\n\n\t\t\t// Script pour V2.5 -> V2.6\n\t\t\tmigrate_stocks($db, $langs, $conf);\n\n\n\t\t\t// Script pour V2.6 -> V2.7\n\t\t\tmigrate_menus($db, $langs, $conf);\n\n\t\t\tmigrate_commande_deliveryaddress($db, $langs, $conf);\n\n\t\t\tmigrate_restore_missing_links($db, $langs, $conf);\n\n\t\t\tmigrate_rename_directories($db, $langs, $conf, '/compta', '/banque');\n\n\t\t\tmigrate_rename_directories($db, $langs, $conf, '/societe', '/mycompany');\n\t\t}\n\n\t\t// Script for 2.8\n\t\t$afterversionarray = explode('.', '2.7.9');\n\t\t$beforeversionarray = explode('.', '2.8.9');\n\t\t//print $versionto.' '.versioncompare($versiontoarray,$afterversionarray).' '.versioncompare($versiontoarray,$beforeversionarray);\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_price_facture($db, $langs, $conf); // Code of this function works for 2.8+ because need a field tva_tx\n\n\t\t\tmigrate_relationship_tables($db, $langs, $conf, 'co_exp', 'fk_commande', 'commande', 'fk_expedition', 'shipping');\n\n\t\t\tmigrate_relationship_tables($db, $langs, $conf, 'pr_exp', 'fk_propal', 'propal', 'fk_expedition', 'shipping');\n\n\t\t\tmigrate_relationship_tables($db, $langs, $conf, 'pr_liv', 'fk_propal', 'propal', 'fk_livraison', 'delivery');\n\n\t\t\tmigrate_relationship_tables($db, $langs, $conf, 'co_liv', 'fk_commande', 'commande', 'fk_livraison', 'delivery');\n\n\t\t\tmigrate_relationship_tables($db, $langs, $conf, 'co_pr', 'fk_propale', 'propal', 'fk_commande', 'commande');\n\n\t\t\tmigrate_relationship_tables($db, $langs, $conf, 'fa_pr', 'fk_propal', 'propal', 'fk_facture', 'facture');\n\n\t\t\tmigrate_relationship_tables($db, $langs, $conf, 'co_fa', 'fk_commande', 'commande', 'fk_facture', 'facture');\n\n\t\t\tmigrate_project_user_resp($db, $langs, $conf);\n\n\t\t\tmigrate_project_task_actors($db, $langs, $conf);\n\t\t}\n\n\t\t// Script for 2.9\n\t\t$afterversionarray = explode('.', '2.8.9');\n\t\t$beforeversionarray = explode('.', '2.9.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_project_task_time($db, $langs, $conf);\n\n\t\t\tmigrate_customerorder_shipping($db, $langs, $conf);\n\n\t\t\tmigrate_shipping_delivery($db, $langs, $conf);\n\n\t\t\tmigrate_shipping_delivery2($db, $langs, $conf);\n\t\t}\n\n\t\t// Script for 3.0\n\t\t$afterversionarray = explode('.', '2.9.9');\n\t\t$beforeversionarray = explode('.', '3.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\t// No particular code\n\t\t}\n\n\t\t// Script for 3.1\n\t\t$afterversionarray = explode('.', '3.0.9');\n\t\t$beforeversionarray = explode('.', '3.1.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_rename_directories($db, $langs, $conf, '/rss', '/externalrss');\n\n\t\t\tmigrate_actioncomm_element($db, $langs, $conf);\n\t\t}\n\n\t\t// Script for 3.2\n\t\t$afterversionarray = explode('.', '3.1.9');\n\t\t$beforeversionarray = explode('.', '3.2.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_price_contrat($db, $langs, $conf);\n\n\t\t\tmigrate_mode_reglement($db, $langs, $conf);\n\n\t\t\tmigrate_clean_association($db, $langs, $conf);\n\t\t}\n\n\t\t// Script for 3.3\n\t\t$afterversionarray = explode('.', '3.2.9');\n\t\t$beforeversionarray = explode('.', '3.3.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_categorie_association($db, $langs, $conf);\n\t\t}\n\n\t\t// Script for 3.4\n\t\t// No specific scripts\n\n\t\t// Tasks to do always and only into last targeted version\n\t\t$afterversionarray = explode('.', '3.6.9'); // target is after this\n\t\t$beforeversionarray = explode('.', '3.7.9'); // target is before this\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_event_assignement($db, $langs, $conf);\n\t\t}\n\n\t\t// Scripts for 3.9\n\t\t$afterversionarray = explode('.', '3.7.9');\n\t\t$beforeversionarray = explode('.', '3.8.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\t// No particular code\n\t\t}\n\n\t\t// Scripts for 4.0\n\t\t$afterversionarray = explode('.', '3.9.9');\n\t\t$beforeversionarray = explode('.', '4.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_rename_directories($db, $langs, $conf, '/fckeditor', '/medias');\n\t\t}\n\n\t\t// Scripts for 5.0\n\t\t$afterversionarray = explode('.', '4.0.9');\n\t\t$beforeversionarray = explode('.', '5.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\t// Migrate to add entity value into llx_societe_remise\n\t\t\tmigrate_remise_entity($db, $langs, $conf);\n\n\t\t\t// Migrate to add entity value into llx_societe_remise_except\n\t\t\tmigrate_remise_except_entity($db, $langs, $conf);\n\t\t}\n\n\t\t// Scripts for 6.0\n\t\t$afterversionarray = explode('.', '5.0.9');\n\t\t$beforeversionarray = explode('.', '6.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tif (!empty($conf->multicompany->enabled)) {\n\t\t\t\tglobal $multicompany_transverse_mode;\n\n\t\t\t\t// Only if the transverse mode is not used\n\t\t\t\tif (empty($multicompany_transverse_mode)) {\n\t\t\t\t\t// Migrate to add entity value into llx_user_rights\n\t\t\t\t\tmigrate_user_rights_entity($db, $langs, $conf);\n\n\t\t\t\t\t// Migrate to add entity value into llx_usergroup_rights\n\t\t\t\t\tmigrate_usergroup_rights_entity($db, $langs, $conf);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Scripts for 7.0\n\t\t$afterversionarray = explode('.', '6.0.9');\n\t\t$beforeversionarray = explode('.', '7.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\t// Migrate contact association\n\t\t\tmigrate_event_assignement_contact($db, $langs, $conf);\n\n\t\t\tmigrate_reset_blocked_log($db, $langs, $conf);\n\t\t}\n\n\t\t// Scripts for 8.0\n\t\t$afterversionarray = explode('.', '7.0.9');\n\t\t$beforeversionarray = explode('.', '8.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_rename_directories($db, $langs, $conf, '/contracts', '/contract');\n\t\t}\n\n\t\t// Scripts for 9.0\n\t\t$afterversionarray = explode('.', '8.0.9');\n\t\t$beforeversionarray = explode('.', '9.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_user_photospath();\n\t\t}\n\n\t\t// Scripts for 11.0\n\t\t$afterversionarray = explode('.', '10.0.9');\n\t\t$beforeversionarray = explode('.', '11.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_users_socialnetworks();\n\t\t\tmigrate_members_socialnetworks();\n\t\t\tmigrate_contacts_socialnetworks();\n\t\t\tmigrate_thirdparties_socialnetworks();\n\t\t}\n\n\t\t// Scripts for 14.0\n\t\t$afterversionarray = explode('.', '13.0.9');\n\t\t$beforeversionarray = explode('.', '14.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_export_import_profiles('export');\n\t\t\tmigrate_export_import_profiles('import');\n\t\t}\n\n\t\t// Scripts for 16.0\n\t\t$afterversionarray = explode('.', '15.0.9');\n\t\t$beforeversionarray = explode('.', '16.0.9');\n\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n\t\t\tmigrate_user_photospath2();\n\t\t}\n\t}\n\n\n\t// Code executed only if migration is LAST ONE. Must always be done.\n\tif (versioncompare($versiontoarray, $versionranarray) >= 0 || versioncompare($versiontoarray, $versionranarray) <= -3) {\n\t\t// Reload modules (this must be always done and only into last targeted version, because code to reload module may need table structure of last version)\n\t\t$listofmodule = array(\n\t\t\t'MAIN_MODULE_ACCOUNTING'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_AGENDA'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_BOM'=>'menuonly',\n\t\t\t'MAIN_MODULE_BANQUE'=>'menuonly',\n\t\t\t'MAIN_MODULE_BARCODE'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_CRON'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_COMMANDE'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_BLOCKEDLOG'=>'noboxes',\n\t\t\t'MAIN_MODULE_DEPLACEMENT'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_DON'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_ECM'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_EXTERNALSITE'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_EXPENSEREPORT'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_FACTURE'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_FOURNISSEUR'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_HOLIDAY'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_MARGIN'=>'menuonly',\n\t\t\t'MAIN_MODULE_MRP'=>'menuonly',\n\t\t\t'MAIN_MODULE_OPENSURVEY'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_PAYBOX'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_PRINTING'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_PRODUIT'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_RECRUITMENT'=>'menuonly',\n\t\t\t'MAIN_MODULE_RESOURCE'=>'noboxes',\n\t\t\t'MAIN_MODULE_SALARIES'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_SERVICE'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_SYSLOG'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_SOCIETE'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_STRIPE'=>'menuonly',\n\t\t\t'MAIN_MODULE_TICKET'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_TAKEPOS'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_USER'=>'newboxdefonly', //This one must be always done and only into last targeted version)\n\t\t\t'MAIN_MODULE_VARIANTS'=>'newboxdefonly',\n\t\t\t'MAIN_MODULE_WEBSITE'=>'newboxdefonly',\n\t\t);\n\n\t\t$result = migrate_reload_modules($db, $langs, $conf, $listofmodule);\n\t\tif ($result < 0) {\n\t\t\t$error++;\n\t\t}\n\t\t// Reload menus (this must be always and only into last targeted version)\n\t\t$result = migrate_reload_menu($db, $langs, $conf);\n\t\tif ($result < 0) {\n\t\t\t$error++;\n\t\t}\n\t}\n\n\t// Can force activation of some module during migration with parameter 'enablemodules=MAIN_MODULE_XXX,MAIN_MODULE_YYY,...'\n\t// In most cases (online install or upgrade) $enablemodules is empty. Can be forced when ran from command line.\n\tif (!$error && $enablemodules) {\n\t\t// Reload modules (this must be always done and only into last targeted version)\n\t\t$listofmodules = array();\n\t\t$enablemodules = preg_replace('/enablemodules=/', '', $enablemodules);\n\t\t$tmplistofmodules = explode(',', $enablemodules);\n\t\tforeach ($tmplistofmodules as $value) {\n\t\t\t$listofmodules[$value] = 'forceactivate';\n\t\t}\n\n\t\t$resultreloadmodules = migrate_reload_modules($db, $langs, $conf, $listofmodules, 1);\n\t\tif ($resultreloadmodules < 0) {\n\t\t\t$error++;\n\t\t}\n\t}\n\n\n\t// Can call a dedicated external upgrade process\n\tif (!$error) {\n\t\t$parameters = array('versionfrom' => $versionfrom, 'versionto' => $versionto);\n\t\t$object = new stdClass();\n\t\t$action = \"upgrade\";\n\t\t$reshook = $hookmanager->executeHooks('doUpgrade2', $parameters, $object, $action); // Note that $action and $object may have been modified by some hooks\n\t\tif ($hookmanager->resNbOfHooks > 0) {\n\t\t\tif ($reshook < 0) {\n\t\t\t\tprint '<tr><td colspan=\"4\">';\n\t\t\t\tprint '<b>'.$langs->trans('UpgradeExternalModule').'</b>: ';\n\t\t\t\tprint $hookmanager->error;\n\t\t\t\tprint \"<!-- (\".$reshook.\") -->\";\n\t\t\t\tprint '</td></tr>';\n\t\t\t} else {\n\t\t\t\tprint '<tr class=\"trforrunsql\"><td colspan=\"4\">';\n\t\t\t\tprint '<b>'.$langs->trans('UpgradeExternalModule').'</b>: <span class=\"ok\">OK</span>';\n\t\t\t\tprint \"<!-- (\".$reshook.\") -->\";\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\t\t} else {\n\t\t\t//if (! empty($conf->modules))\n\t\t\tif (!empty($conf->modules_parts['hooks'])) {     // If there is at least one module with one hook, we show message to say nothing was done\n\t\t\t\tprint '<tr class=\"trforrunsql\"><td colspan=\"4\">';\n\t\t\t\tprint '<b>'.$langs->trans('UpgradeExternalModule').'</b>: '.$langs->trans(\"None\");\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\t\t}\n\t}\n\n\tprint '</table>';\n\n\n\tif (!$error) {\n\t\t// Set constant to ask to remake a new ping to inform about upgrade (if first ping was done and OK)\n\t\t$sql = 'UPDATE '.MAIN_DB_PREFIX.\"const SET VALUE = 'torefresh' WHERE name = 'MAIN_FIRST_PING_OK_ID'\";\n\t\t$db->query($sql, 1);\n\t}\n\n\t// We always commit.\n\t// Process is designed so we can run it several times whatever is situation.\n\t$db->commit();\n\t$db->close();\n\n\n\t// Copy directory medias\n\t$srcroot = DOL_DOCUMENT_ROOT.'/install/medias';\n\t$destroot = DOL_DATA_ROOT.'/medias';\n\tdolCopyDir($srcroot, $destroot, 0, 0);\n\n\n\t// Actions for all versions (no database change but delete some files and directories)\n\tmigrate_delete_old_files($db, $langs, $conf);\n\tmigrate_delete_old_dir($db, $langs, $conf);\n\t// Actions for all versions (no database change but create some directories)\n\tdol_mkdir(DOL_DATA_ROOT.'/bank');\n\t// Actions for all versions (no database change but rename some directories)\n\tmigrate_rename_directories($db, $langs, $conf, '/banque/bordereau', '/bank/checkdeposits');\n\n\t$silent = 0;\n\tif (!$silent) {\n\t\tprint '<table width=\"100%\">';\n\t\tprint '<tr><td style=\"width: 30%\">'.$langs->trans(\"MigrationFinished\").'</td>';\n\t\tprint '<td class=\"right\">';\n\t\tif ($error == 0) {\n\t\t\t//print '<span class=\"ok\">'.$langs->trans(\"OK\").'</span> - ';\t\t// $error = 0 does not mean there is no error (error are not always trapped)\n\t\t} else {\n\t\t\tprint '<span class=\"error\">'.$langs->trans(\"Error\").'</span> - ';\n\t\t}\n\n\t\t//if (!empty($conf->use_javascript_ajax)) {\t\t// use_javascript_ajax is not defined\n\t\tprint '<script type=\"text/javascript\">\n\t\tjQuery(document).ready(function() {\n\t\t\tfunction init_trrunsql()\n\t\t\t{\n\t\t\t\tconsole.log(\"toggle .trforrunsql\");\n\t\t\t\tjQuery(\".trforrunsql\").toggle();\n\t\t\t}\n\t\t\tinit_trrunsql();\n\t\t\tjQuery(\".trforrunsqlshowhide\").click(function() {\n\t\t\t\tinit_trrunsql();\n\t\t\t});\n\t\t});\n\t\t</script>';\n\t\tprint '<a class=\"trforrunsqlshowhide\" href=\"#\">'.$langs->trans(\"ShowHideDetails\").'</a>';\n\t\t//}\n\n\t\tprint '</td></tr>'.\"\\n\";\n\t\tprint '</table>';\n\t}\n\n\t//print '<div><br>'.$langs->trans(\"MigrationFinished\").'</div>';\n} else {\n\tprint '<div class=\"error\">'.$langs->trans('ErrorWrongParameters').'</div>';\n\t$error++;\n}\n\n$ret = 0;\nif ($error && isset($argv[1])) {\n\t$ret = 1;\n}\ndolibarr_install_syslog(\"Exit \".$ret);\n\ndolibarr_install_syslog(\"--- upgrade2: end\");\npFooter($error ? 2 : 0, $setuplang);\n\nif ($db->connected) {\n\t$db->close();\n}\n\n// Return code if ran from command line\nif ($ret) {\n\texit($ret);\n}\n\n\n\n/**\n * Reporte liens vers une facture de paiements sur table de jointure (lien n-n paiements factures)\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_paiements($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationPaymentsUpdate').\"</b><br>\\n\";\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"paiement\", \"fk_facture\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t$sql = \"SELECT p.rowid, p.fk_facture, p.amount\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"paiement as p\";\n\t\t$sql .= \" WHERE p.fk_facture > 0\";\n\n\t\t$resql = $db->query($sql);\n\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_paiements\");\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$row = array();\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t$row[$i][0] = $obj->rowid;\n\t\t\t\t$row[$i][1] = $obj->fk_facture;\n\t\t\t\t$row[$i][2] = $obj->amount;\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\n\t\tif ($num) {\n\t\t\tprint $langs->trans('MigrationPaymentsNumberToUpdate', $num).\"<br>\\n\";\n\t\t\tif ($db->begin()) {\n\t\t\t\t$res = 0;\n\t\t\t\t$num = count($row);\n\t\t\t\tfor ($i = 0; $i < $num; $i++) {\n\t\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"paiement_facture (fk_facture, fk_paiement, amount)\";\n\t\t\t\t\t$sql .= \" VALUES (\".((int) $row[$i][1]).\",\".((int) $row[$i][0]).\",\".((float) $row[$i][2]).\")\";\n\n\t\t\t\t\t$res += $db->query($sql);\n\n\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"paiement SET fk_facture = 0 WHERE rowid = \".((int) $row[$i][0]);\n\n\t\t\t\t\t$res += $db->query($sql);\n\n\t\t\t\t\tprint $langs->trans('MigrationProcessPaymentUpdate', $row[$i][0]).\"<br>\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($res == (2 * count($row))) {\n\t\t\t\t$db->commit();\n\t\t\t\tprint $langs->trans('MigrationSuccessfullUpdate').\"<br>\";\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t\tprint $langs->trans('MigrationUpdateFailed').'<br>';\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('MigrationPaymentsNothingToUpdate').\"<br>\\n\";\n\t\t}\n\t} else {\n\t\tprint $langs->trans('MigrationPaymentsNothingToUpdate').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Corrige paiement orphelins (liens paumes suite a bugs)\n * Pour verifier s'il reste des orphelins:\n * select * from llx_paiement as p left join llx_paiement_facture as pf on pf.fk_paiement=p.rowid WHERE pf.rowid IS NULL AND (p.fk_facture = 0 OR p.fk_facture IS NULL)\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_paiements_orphelins_1($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationPaymentsUpdate').\"</b><br>\\n\";\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"paiement\", \"fk_facture\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t// Tous les enregistrements qui sortent de cette requete devrait avoir un pere dans llx_paiement_facture\n\t\t$sql = \"SELECT distinct p.rowid, p.datec, p.amount as pamount, bu.fk_bank, b.amount as bamount,\";\n\t\t$sql .= \" bu2.url_id as socid\";\n\t\t$sql .= \" FROM (\".MAIN_DB_PREFIX.\"paiement as p, \".MAIN_DB_PREFIX.\"bank_url as bu, \".MAIN_DB_PREFIX.\"bank as b)\";\n\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"paiement_facture as pf ON pf.fk_paiement = p.rowid\";\n\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"bank_url as bu2 ON (bu.fk_bank=bu2.fk_bank AND bu2.type = 'company')\";\n\t\t$sql .= \" WHERE pf.rowid IS NULL AND (p.rowid=bu.url_id AND bu.type='payment') AND bu.fk_bank = b.rowid\";\n\t\t$sql .= \" AND b.rappro = 1\";\n\t\t$sql .= \" AND (p.fk_facture = 0 OR p.fk_facture IS NULL)\";\n\n\t\t$resql = $db->query($sql);\n\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_paiements_orphelins_1\");\n\t\t$row = array();\n\t\tif ($resql) {\n\t\t\t$i = $j = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\tif ($obj->pamount == $obj->bamount && $obj->socid) {\t// Pour etre sur d'avoir bon cas\n\t\t\t\t\t$row[$j]['paymentid'] = $obj->rowid; // paymentid\n\t\t\t\t\t$row[$j]['pamount'] = $obj->pamount;\n\t\t\t\t\t$row[$j]['fk_bank'] = $obj->fk_bank;\n\t\t\t\t\t$row[$j]['bamount'] = $obj->bamount;\n\t\t\t\t\t$row[$j]['socid'] = $obj->socid;\n\t\t\t\t\t$row[$j]['datec'] = $obj->datec;\n\t\t\t\t\t$j++;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\n\t\tif (count($row)) {\n\t\t\tprint $langs->trans('OrphelinsPaymentsDetectedByMethod', 1).': '.count($row).\"<br>\\n\";\n\t\t\t$db->begin();\n\n\t\t\t$res = 0;\n\t\t\t$num = count($row);\n\t\t\tfor ($i = 0; $i < $num; $i++) {\n\t\t\t\tif ($conf->global->MAIN_FEATURES_LEVEL == 2) {\n\t\t\t\t\tprint '* '.$row[$i]['datec'].' paymentid='.$row[$i]['paymentid'].' pamount='.$row[$i]['pamount'].' fk_bank='.$row[$i]['fk_bank'].' bamount='.$row[$i]['bamount'].' socid='.$row[$i]['socid'].'<br>';\n\t\t\t\t}\n\n\t\t\t\t// On cherche facture sans lien paiement et du meme montant et pour meme societe.\n\t\t\t\t$sql = \" SELECT distinct f.rowid from \".MAIN_DB_PREFIX.\"facture as f\";\n\t\t\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"paiement_facture as pf ON f.rowid = pf.fk_facture\";\n\t\t\t\t$sql .= \" WHERE f.fk_statut in (2,3) AND fk_soc = \".((int) $row[$i]['socid']).\" AND total_ttc = \".((float) $row[$i]['pamount']);\n\t\t\t\t$sql .= \" AND pf.fk_facture IS NULL\";\n\t\t\t\t$sql .= \" ORDER BY f.fk_statut\";\n\t\t\t\t//print $sql.'<br>';\n\t\t\t\t$resql = $db->query($sql);\n\t\t\t\tif ($resql) {\n\t\t\t\t\t$num = $db->num_rows($resql);\n\t\t\t\t\t//print 'Nb of invoice found for this amount and company :'.$num.'<br>';\n\t\t\t\t\tif ($num >= 1) {\n\t\t\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t\t\t$facid = $obj->rowid;\n\n\t\t\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"paiement_facture (fk_facture, fk_paiement, amount)\";\n\t\t\t\t\t\t$sql .= \" VALUES (\".((int) $facid).\",\".((int) $row[$i]['paymentid']).\", \".((float) $row[$i]['pamount']).\")\";\n\n\t\t\t\t\t\t$res += $db->query($sql);\n\n\t\t\t\t\t\tprint $langs->trans('MigrationProcessPaymentUpdate', 'facid='.$facid.'-paymentid='.$row[$i]['paymentid'].'-amount='.$row[$i]['pamount']).\"<br>\\n\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint 'ERROR';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($res > 0) {\n\t\t\t\tprint $langs->trans('MigrationSuccessfullUpdate').\"<br>\";\n\t\t\t} else {\n\t\t\t\tprint $langs->trans('MigrationPaymentsNothingUpdatable').\"<br>\\n\";\n\t\t\t}\n\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\tprint $langs->trans('MigrationPaymentsNothingUpdatable').\"<br>\\n\";\n\t\t}\n\t} else {\n\t\tprint $langs->trans('MigrationPaymentsNothingUpdatable').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Corrige paiement orphelins (liens paumes suite a bugs)\n * Pour verifier s'il reste des orphelins:\n * select * from llx_paiement as p left join llx_paiement_facture as pf on pf.fk_paiement=p.rowid WHERE pf.rowid IS NULL AND (p.fk_facture = 0 OR p.fk_facture IS NULL)\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_paiements_orphelins_2($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationPaymentsUpdate').\"</b><br>\\n\";\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"paiement\", \"fk_facture\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t// Tous les enregistrements qui sortent de cette requete devrait avoir un pere dans llx_paiement_facture\n\t\t$sql = \"SELECT distinct p.rowid, p.datec, p.amount as pamount, bu.fk_bank, b.amount as bamount,\";\n\t\t$sql .= \" bu2.url_id as socid\";\n\t\t$sql .= \" FROM (\".MAIN_DB_PREFIX.\"paiement as p, \".MAIN_DB_PREFIX.\"bank_url as bu, \".MAIN_DB_PREFIX.\"bank as b)\";\n\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"paiement_facture as pf ON pf.fk_paiement = p.rowid\";\n\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"bank_url as bu2 ON (bu.fk_bank = bu2.fk_bank AND bu2.type = 'company')\";\n\t\t$sql .= \" WHERE pf.rowid IS NULL AND (p.fk_bank = bu.fk_bank AND bu.type = 'payment') AND bu.fk_bank = b.rowid\";\n\t\t$sql .= \" AND (p.fk_facture = 0 OR p.fk_facture IS NULL)\";\n\n\t\t$resql = $db->query($sql);\n\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_paiements_orphelins_2\");\n\t\t$row = array();\n\t\tif ($resql) {\n\t\t\t$i = $j = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\tif ($obj->pamount == $obj->bamount && $obj->socid) {\t// Pour etre sur d'avoir bon cas\n\t\t\t\t\t$row[$j]['paymentid'] = $obj->rowid; // paymentid\n\t\t\t\t\t$row[$j]['pamount'] = $obj->pamount;\n\t\t\t\t\t$row[$j]['fk_bank'] = $obj->fk_bank;\n\t\t\t\t\t$row[$j]['bamount'] = $obj->bamount;\n\t\t\t\t\t$row[$j]['socid'] = $obj->socid;\n\t\t\t\t\t$row[$j]['datec'] = $obj->datec;\n\t\t\t\t\t$j++;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\n\t\t$nberr = 0;\n\n\t\t$num = count($row);\n\t\tif ($num) {\n\t\t\tprint $langs->trans('OrphelinsPaymentsDetectedByMethod', 2).': '.count($row).\"<br>\\n\";\n\t\t\t$db->begin();\n\n\t\t\t$res = 0;\n\t\t\tfor ($i = 0; $i < $num; $i++) {\n\t\t\t\tif ($conf->global->MAIN_FEATURES_LEVEL == 2) {\n\t\t\t\t\tprint '* '.$row[$i]['datec'].' paymentid='.$row[$i]['paymentid'].' pamount='.$row[$i]['pamount'].' fk_bank='.$row[$i]['fk_bank'].' '.$row[$i]['bamount'].' socid='.$row[$i]['socid'].'<br>';\n\t\t\t\t}\n\n\t\t\t\t// On cherche facture sans lien paiement et du meme montant et pour meme societe.\n\t\t\t\t$sql = \" SELECT distinct f.rowid from \".MAIN_DB_PREFIX.\"facture as f\";\n\t\t\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"paiement_facture as pf ON f.rowid = pf.fk_facture\";\n\t\t\t\t$sql .= \" WHERE f.fk_statut in (2,3) AND fk_soc = \".((int) $row[$i]['socid']).\" AND total_ttc = \".((float) $row[$i]['pamount']);\n\t\t\t\t$sql .= \" AND pf.fk_facture IS NULL\";\n\t\t\t\t$sql .= \" ORDER BY f.fk_statut\";\n\t\t\t\t//print $sql.'<br>';\n\t\t\t\t$resql = $db->query($sql);\n\t\t\t\tif ($resql) {\n\t\t\t\t\t$num = $db->num_rows($resql);\n\t\t\t\t\t//print 'Nb of invoice found for this amount and company :'.$num.'<br>';\n\t\t\t\t\tif ($num >= 1) {\n\t\t\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t\t\t$facid = $obj->rowid;\n\n\t\t\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"paiement_facture (fk_facture, fk_paiement, amount)\";\n\t\t\t\t\t\t$sql .= \" VALUES (\".((int) $facid).\",\".((int) $row[$i]['paymentid']).\", \".((float) $row[$i]['pamount']).\")\";\n\n\t\t\t\t\t\t$res += $db->query($sql);\n\n\t\t\t\t\t\tprint $langs->trans('MigrationProcessPaymentUpdate', 'facid='.$facid.'-paymentid='.$row[$i]['paymentid'].'-amount='.$row[$i]['pamount']).\"<br>\\n\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint 'ERROR';\n\t\t\t\t\t$nberr++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($res > 0) {\n\t\t\t\tprint $langs->trans('MigrationSuccessfullUpdate').\"<br>\";\n\t\t\t} else {\n\t\t\t\tprint $langs->trans('MigrationPaymentsNothingUpdatable').\"<br>\\n\";\n\t\t\t}\n\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\tprint $langs->trans('MigrationPaymentsNothingUpdatable').\"<br>\\n\";\n\t\t}\n\n\t\t// Delete obsolete fields fk_facture\n\t\t$db->begin();\n\n\t\t$sql = \"ALTER TABLE \".MAIN_DB_PREFIX.\"paiement DROP COLUMN fk_facture\";\n\t\t$db->query($sql);\n\n\t\tif (!$nberr) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\tprint 'ERROR';\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('MigrationPaymentsNothingUpdatable').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n\n/**\n * Mise a jour des contrats (gestion du contrat + detail de contrat)\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_contracts_det($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\t$nberr = 0;\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationContractsUpdate').\"</b><br>\\n\";\n\n\t$sql = \"SELECT c.rowid as cref, c.date_contrat, c.statut, c.fk_product, c.fk_facture, c.fk_user_author,\";\n\t$sql .= \" p.ref, p.label, p.description, p.price, p.tva_tx, p.duration, cd.rowid\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"contrat as c\";\n\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"product as p\";\n\t$sql .= \" ON c.fk_product = p.rowid\";\n\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"contratdet as cd\";\n\t$sql .= \" ON c.rowid=cd.fk_contrat\";\n\t$sql .= \" WHERE cd.rowid IS NULL AND p.rowid IS NOT NULL\";\n\t$resql = $db->query($sql);\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_contracts_det\");\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$row = array();\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\tprint $langs->trans('MigrationContractsNumberToUpdate', $num).\"<br>\\n\";\n\t\t\t$db->begin();\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"contratdet (\";\n\t\t\t\t$sql .= \"fk_contrat, fk_product, statut, label, description,\";\n\t\t\t\t$sql .= \"date_ouverture_prevue, date_ouverture, date_fin_validite, tva_tx, qty,\";\n\t\t\t\t$sql .= \"subprice, price_ht, fk_user_author, fk_user_ouverture)\";\n\t\t\t\t$sql .= \" VALUES (\";\n\t\t\t\t$sql .= ((int) $obj->cref).\", \".($obj->fk_product ? ((int) $obj->fk_product) : 0).\", \";\n\t\t\t\t$sql .= \"0, \";\n\t\t\t\t$sql .= \"'\".$db->escape($obj->label).\"', null, \";\n\t\t\t\t$sql .= ($obj->date_contrat ? \"'\".$db->idate($db->jdate($obj->date_contrat)).\"'\" : \"null\").\", \";\n\t\t\t\t$sql .= \"null, \";\n\t\t\t\t$sql .= \"null, \";\n\t\t\t\t$sql .= ((float) $obj->tva_tx).\", 1, \";\n\t\t\t\t$sql .= ((float) $obj->price).\", \".((float) $obj->price).\", \".((int) $obj->fk_user_author).\",\";\n\t\t\t\t$sql .= \"null\";\n\t\t\t\t$sql .= \")\";\n\n\t\t\t\tif ($db->query($sql)) {\n\t\t\t\t\tprint $langs->trans('MigrationContractsLineCreation', $obj->cref).\"<br>\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t$nberr++;\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tif (!$nberr) {\n\t\t\t\t//      $db->rollback();\n\t\t\t\t$db->commit();\n\t\t\t\tprint $langs->trans('MigrationSuccessfullUpdate').\"<br>\";\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t\tprint $langs->trans('MigrationUpdateFailed').'<br>';\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('MigrationContractsNothingToUpdate').\"<br>\\n\";\n\t\t}\n\t} else {\n\t\tprint $langs->trans('MigrationContractsFieldDontExist').\"<br>\\n\";\n\t\t//    dol_print_error($db);\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Function to migrate links into llx_bank_url\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_links_transfert($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\t$nberr = 0;\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationBankTransfertsUpdate').\"</b><br>\\n\";\n\n\t$sql = \"SELECT ba.rowid as barowid, bb.rowid as bbrowid\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank as bb, \".MAIN_DB_PREFIX.\"bank as ba\";\n\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"bank_url as bu ON bu.fk_bank = ba.rowid\";\n\t$sql .= \" WHERE ba.amount = -bb.amount AND ba.fk_account <> bb.fk_account\";\n\t$sql .= \" AND ba.datev = bb.datev AND ba.datec = bb.datec\";\n\t$sql .= \" AND bu.fk_bank IS NULL\";\n\t$resql = $db->query($sql);\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_links_transfert\");\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$row = array();\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\tprint $langs->trans('MigrationBankTransfertsToUpdate', $num).\"<br>\\n\";\n\t\t\t$db->begin();\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"bank_url (\";\n\t\t\t\t$sql .= \"fk_bank, url_id, url, label, type\";\n\t\t\t\t$sql .= \")\";\n\t\t\t\t$sql .= \" VALUES (\";\n\t\t\t\t$sql .= $obj->barowid.\",\".$obj->bbrowid.\", '/compta/bank/line.php?rowid=', '(banktransfert)', 'banktransfert'\";\n\t\t\t\t$sql .= \")\";\n\n\t\t\t\t//print $sql.'<br>';\n\t\t\t\tdolibarr_install_syslog(\"migrate_links_transfert\");\n\n\t\t\t\tif (!$db->query($sql)) {\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t$nberr++;\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tif (!$nberr) {\n\t\t\t\t//      $db->rollback();\n\t\t\t\t$db->commit();\n\t\t\t\tprint $langs->trans('MigrationSuccessfullUpdate').\"<br>\";\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t\tprint $langs->trans('MigrationUpdateFailed').'<br>';\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('MigrationBankTransfertsNothingToUpdate').\"<br>\\n\";\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Mise a jour des date de contrats non renseignees\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_contracts_date1($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationContractsEmptyDatesUpdate').\"</b><br>\\n\";\n\n\t$sql = \"update \".MAIN_DB_PREFIX.\"contrat set date_contrat=tms where date_contrat is null\";\n\tdolibarr_install_syslog(\"upgrade2::migrate_contracts_date1\");\n\t$resql = $db->query($sql);\n\tif (!$resql) {\n\t\tdol_print_error($db);\n\t}\n\tif ($db->affected_rows($resql) > 0) {\n\t\tprint $langs->trans('MigrationContractsEmptyDatesUpdateSuccess').\"<br>\\n\";\n\t} else {\n\t\tprint $langs->trans('MigrationContractsEmptyDatesNothingToUpdate').\"<br>\\n\";\n\t}\n\n\t$sql = \"update \".MAIN_DB_PREFIX.\"contrat set datec=tms where datec is null\";\n\tdolibarr_install_syslog(\"upgrade2::migrate_contracts_date1\");\n\t$resql = $db->query($sql);\n\tif (!$resql) {\n\t\tdol_print_error($db);\n\t}\n\tif ($db->affected_rows($resql) > 0) {\n\t\tprint $langs->trans('MigrationContractsEmptyCreationDatesUpdateSuccess').\"<br>\\n\";\n\t} else {\n\t\tprint $langs->trans('MigrationContractsEmptyCreationDatesNothingToUpdate').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Update contracts with date min real if service date is lower\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tLanguage\n * @param\tConf\t\t$conf\tConf\n * @return\tvoid\n */\nfunction migrate_contracts_date2($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\t$nberr = 0;\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationContractsInvalidDatesUpdate').\"</b><br>\\n\";\n\n\t$sql = \"SELECT c.rowid as cref, c.datec, c.date_contrat, MIN(cd.date_ouverture) as datemin\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"contrat as c,\";\n\t$sql .= \" \".MAIN_DB_PREFIX.\"contratdet as cd\";\n\t$sql .= \" WHERE c.rowid=cd.fk_contrat AND cd.date_ouverture IS NOT NULL\";\n\t$sql .= \" GROUP BY c.rowid, c.date_contrat\";\n\t$resql = $db->query($sql);\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_contracts_date2\");\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$row = array();\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\t$nbcontratsmodifie = 0;\n\t\t\t$db->begin();\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\tif ($obj->date_contrat > $obj->datemin) {\n\t\t\t\t\t$datemin = $db->jdate($obj->datemin);\n\n\t\t\t\t\tprint $langs->trans('MigrationContractsInvalidDateFix', $obj->cref, $obj->date_contrat, $obj->datemin).\"<br>\\n\";\n\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"contrat\";\n\t\t\t\t\t$sql .= \" SET date_contrat='\".$db->idate($datemin).\"'\";\n\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->cref);\n\t\t\t\t\t$resql2 = $db->query($sql);\n\t\t\t\t\tif (!$resql2) {\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\n\t\t\t\t\t$nbcontratsmodifie++;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$db->commit();\n\n\t\t\tif ($nbcontratsmodifie) {\n\t\t\t\tprint $langs->trans('MigrationContractsInvalidDatesNumber', $nbcontratsmodifie).\"<br>\\n\";\n\t\t\t} else {\n\t\t\t\tprint  $langs->trans('MigrationContractsInvalidDatesNothingToUpdate').\"<br>\\n\";\n\t\t\t}\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Mise a jour des dates de creation de contrat\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_contracts_date3($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationContractsIncoherentCreationDateUpdate').\"</b><br>\\n\";\n\n\t$sql = \"update \".MAIN_DB_PREFIX.\"contrat set datec=date_contrat where datec is null or datec > date_contrat\";\n\tdolibarr_install_syslog(\"upgrade2::migrate_contracts_date3\");\n\t$resql = $db->query($sql);\n\tif (!$resql) {\n\t\tdol_print_error($db);\n\t}\n\tif ($db->affected_rows($resql) > 0) {\n\t\tprint $langs->trans('MigrationContractsIncoherentCreationDateUpdateSuccess').\"<br>\\n\";\n\t} else {\n\t\tprint $langs->trans('MigrationContractsIncoherentCreationDateNothingToUpdate').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Reouverture des contrats qui ont au moins une ligne non fermee\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_contracts_open($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationReopeningContracts').\"</b><br>\\n\";\n\n\t$sql = \"SELECT c.rowid as cref FROM \".MAIN_DB_PREFIX.\"contrat as c, \".MAIN_DB_PREFIX.\"contratdet as cd\";\n\t$sql .= \" WHERE cd.statut = 4 AND c.statut=2 AND c.rowid=cd.fk_contrat\";\n\tdolibarr_install_syslog(\"upgrade2::migrate_contracts_open\");\n\t$resql = $db->query($sql);\n\tif (!$resql) {\n\t\tdol_print_error($db);\n\t}\n\tif ($db->affected_rows($resql) > 0) {\n\t\t$i = 0;\n\t\t$row = array();\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\t$nbcontratsmodifie = 0;\n\t\t\t$db->begin();\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\tprint $langs->trans('MigrationReopenThisContract', $obj->cref).\"<br>\\n\";\n\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"contrat\";\n\t\t\t\t$sql .= \" SET statut = 1\";\n\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->cref);\n\t\t\t\t$resql2 = $db->query($sql);\n\t\t\t\tif (!$resql2) {\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\n\t\t\t\t$nbcontratsmodifie++;\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$db->commit();\n\n\t\t\tif ($nbcontratsmodifie) {\n\t\t\t\tprint $langs->trans('MigrationReopenedContractsNumber', $nbcontratsmodifie).\"<br>\\n\";\n\t\t\t} else {\n\t\t\t\tprint $langs->trans('MigrationReopeningContractsNothingToUpdate').\"<br>\\n\";\n\t\t\t}\n\t\t}\n\t} else {\n\t\tprint $langs->trans('MigrationReopeningContractsNothingToUpdate').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Factures fournisseurs\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_paiementfourn_facturefourn($db, $langs, $conf)\n{\n\tglobal $bc;\n\n\tprint '<tr><td colspan=\"4\">';\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('SuppliersInvoices').\"</b><br>\\n\";\n\tprint '</td></tr>';\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"paiementfourn\", \"fk_facture_fourn\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t$error = 0;\n\t\t$nb = 0;\n\n\t\t$select_sql = 'SELECT rowid, fk_facture_fourn, amount';\n\t\t$select_sql .= ' FROM '.MAIN_DB_PREFIX.'paiementfourn';\n\t\t$select_sql .= ' WHERE fk_facture_fourn IS NOT NULL';\n\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_paiementfourn_facturefourn\");\n\t\t$select_resql = $db->query($select_sql);\n\t\tif ($select_resql) {\n\t\t\t$select_num = $db->num_rows($select_resql);\n\t\t\t$i = 0;\n\t\t\t$var = true;\n\n\t\t\t// Pour chaque paiement fournisseur, on insere une ligne dans paiementfourn_facturefourn\n\t\t\twhile (($i < $select_num) && (!$error)) {\n\t\t\t\t$var = !$var;\n\t\t\t\t$select_obj = $db->fetch_object($select_resql);\n\n\t\t\t\t// Verifier si la ligne est deja dans la nouvelle table. On ne veut pas inserer de doublons.\n\t\t\t\t$check_sql = 'SELECT fk_paiementfourn, fk_facturefourn';\n\t\t\t\t$check_sql .= ' FROM '.MAIN_DB_PREFIX.'paiementfourn_facturefourn';\n\t\t\t\t$check_sql .= ' WHERE fk_paiementfourn = '.((int) $select_obj->rowid).' AND fk_facturefourn = '.((int) $select_obj->fk_facture_fourn);\n\t\t\t\t$check_resql = $db->query($check_sql);\n\t\t\t\tif ($check_resql) {\n\t\t\t\t\t$check_num = $db->num_rows($check_resql);\n\t\t\t\t\tif ($check_num == 0) {\n\t\t\t\t\t\t$db->begin();\n\n\t\t\t\t\t\tif ($nb == 0) {\n\t\t\t\t\t\t\tprint '<tr><td colspan=\"4\" class=\"nowrap\"><b>'.$langs->trans('SuppliersInvoices').'</b></td></tr>';\n\t\t\t\t\t\t\tprint '<tr><td>fk_paiementfourn</td><td>fk_facturefourn</td><td>'.$langs->trans('Amount').'</td><td>&nbsp;</td></tr>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\t\t\t\tprint '<td>'.$select_obj->rowid.'</td><td>'.$select_obj->fk_facture_fourn.'</td><td>'.$select_obj->amount.'</td>';\n\n\t\t\t\t\t\t$insert_sql = 'INSERT INTO '.MAIN_DB_PREFIX.'paiementfourn_facturefourn SET ';\n\t\t\t\t\t\t$insert_sql .= ' fk_paiementfourn = \\''.$select_obj->rowid.'\\',';\n\t\t\t\t\t\t$insert_sql .= ' fk_facturefourn  = \\''.$select_obj->fk_facture_fourn.'\\',';\n\t\t\t\t\t\t$insert_sql .= ' amount           = \\''.$select_obj->amount.'\\'';\n\t\t\t\t\t\t$insert_resql = $db->query($insert_sql);\n\n\t\t\t\t\t\tif ($insert_resql) {\n\t\t\t\t\t\t\t$nb++;\n\t\t\t\t\t\t\tprint '<td><span class=\"ok\">'.$langs->trans(\"OK\").'</span></td>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprint '<td><span class=\"error\">Error on insert</span></td>';\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint '</tr>';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\t$error++;\n\t\t}\n\n\t\tif (!$error) {\n\t\t\tif (!$nb) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"AlreadyDone\").'</td></tr>';\n\t\t\t}\n\t\t\t$db->commit();\n\n\t\t\t$sql = \"ALTER TABLE \".MAIN_DB_PREFIX.\"paiementfourn DROP COLUMN fk_facture_fourn\";\n\t\t\t$db->query($sql);\n\t\t} else {\n\t\t\tprint '<tr><td>'.$langs->trans(\"Error\").'</td></tr>';\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint '<tr><td>'.$langs->trans(\"AlreadyDone\").'</td></tr>';\n\t}\n}\n\n/**\n * Update total of invoice lines\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_price_facture($db, $langs, $conf)\n{\n\t$err = 0;\n\n\t$tmpmysoc = new Societe($db);\n\t$tmpmysoc->setMysoc($conf);\n\n\t$db->begin();\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationInvoice').\"</b><br>\\n\";\n\n\t// List of invoice lines not up to date\n\t$sql = \"SELECT fd.rowid, fd.qty, fd.subprice, fd.remise_percent, fd.tva_tx as vatrate, fd.total_ttc, fd.info_bits,\";\n\t$sql .= \" f.rowid as facid, f.remise_percent as remise_percent_global, f.total_ttc as total_ttc_f\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"facturedet as fd, \".MAIN_DB_PREFIX.\"facture as f\";\n\t$sql .= \" WHERE fd.fk_facture = f.rowid\";\n\t$sql .= \" AND (((fd.total_ttc = 0 AND fd.remise_percent != 100) or fd.total_ttc IS NULL) or f.total_ttc IS NULL)\";\n\t//print $sql;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_price_facture\");\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$rowid = $obj->rowid;\n\t\t\t\t$qty = $obj->qty;\n\t\t\t\t$pu = $obj->subprice;\n\t\t\t\t$vatrate = $obj->vatrate;\n\t\t\t\t$remise_percent = $obj->remise_percent;\n\t\t\t\t$remise_percent_global = $obj->remise_percent_global;\n\t\t\t\t$total_ttc_f = $obj->total_ttc_f;\n\t\t\t\t$info_bits = $obj->info_bits;\n\n\t\t\t\t// On met a jour les 3 nouveaux champs\n\t\t\t\t$facligne = new FactureLigne($db);\n\t\t\t\t$facligne->fetch($rowid);\n\n\t\t\t\t$result = calcul_price_total($qty, $pu, $remise_percent, $vatrate, 0, 0, $remise_percent_global, 'HT', $info_bits, $facligne->product_type, $tmpmysoc);\n\t\t\t\t$total_ht  = $result[0];\n\t\t\t\t$total_tva = $result[1];\n\t\t\t\t$total_ttc = $result[2];\n\n\t\t\t\t$facligne->total_ht  = $total_ht;\n\t\t\t\t$facligne->total_tva = $total_tva;\n\t\t\t\t$facligne->total_ttc = $total_ttc;\n\n\t\t\t\tdolibarr_install_syslog(\"upgrade2: line \".$rowid.\": facid=\".$obj->facid.\" pu=\".$pu.\" qty=\".$qty.\" vatrate=\".$vatrate.\" remise_percent=\".$remise_percent.\" remise_global=\".$remise_percent_global.\" -> \".$total_ht.\", \".$total_tva.\", \".$total_ttc);\n\t\t\t\tprint \". \";\n\t\t\t\t$facligne->update_total();\n\n\n\t\t\t\t/* On touche a facture mere uniquement si total_ttc = 0 */\n\t\t\t\tif (!$total_ttc_f) {\n\t\t\t\t\t$facture = new Facture($db);\n\t\t\t\t\t$facture->id = $obj->facid;\n\n\t\t\t\t\tif ($facture->fetch($facture->id) >= 0) {\n\t\t\t\t\t\tif ($facture->update_price() > 0) {\n\t\t\t\t\t\t\t//print $facture->id;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprint \"Error id=\".$facture->id;\n\t\t\t\t\t\t\t$err++;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint \"Error #3\";\n\t\t\t\t\t\t$err++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprint \" \";\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans(\"AlreadyDone\");\n\t\t}\n\t\t$db->free($resql);\n\n\t\t$db->commit();\n\t} else {\n\t\tprint \"Error #1 \".$db->error();\n\t\t$err++;\n\n\t\t$db->rollback();\n\t}\n\n\tprint '<br>';\n\n\tprint '</td></tr>';\n}\n\n/**\n * Update total of proposal lines\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_price_propal($db, $langs, $conf)\n{\n\t$tmpmysoc = new Societe($db);\n\t$tmpmysoc->setMysoc($conf);\n\n\t$db->begin();\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationProposal').\"</b><br>\\n\";\n\n\t// List of proposal lines not up to date\n\t$sql = \"SELECT pd.rowid, pd.qty, pd.subprice, pd.remise_percent, pd.tva_tx as vatrate, pd.info_bits,\";\n\t$sql .= \" p.rowid as propalid, p.remise_percent as remise_percent_global\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"propaldet as pd, \".MAIN_DB_PREFIX.\"propal as p\";\n\t$sql .= \" WHERE pd.fk_propal = p.rowid\";\n\t$sql .= \" AND ((pd.total_ttc = 0 AND pd.remise_percent != 100) or pd.total_ttc IS NULL)\";\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_price_propal\");\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$rowid = $obj->rowid;\n\t\t\t\t$qty = $obj->qty;\n\t\t\t\t$pu = $obj->subprice;\n\t\t\t\t$vatrate = $obj->vatrate;\n\t\t\t\t$remise_percent = $obj->remise_percent;\n\t\t\t\t$remise_percent_global = $obj->remise_percent_global;\n\t\t\t\t$info_bits = $obj->info_bits;\n\n\t\t\t\t// On met a jour les 3 nouveaux champs\n\t\t\t\t$propalligne = new PropaleLigne($db);\n\t\t\t\t$propalligne->fetch($rowid);\n\n\t\t\t\t$result = calcul_price_total($qty, $pu, $remise_percent, $vatrate, 0, 0, $remise_percent_global, 'HT', $info_bits, $propalligne->product_type, $tmpmysoc);\n\t\t\t\t$total_ht  = $result[0];\n\t\t\t\t$total_tva = $result[1];\n\t\t\t\t$total_ttc = $result[2];\n\n\t\t\t\t$propalligne->total_ht  = $total_ht;\n\t\t\t\t$propalligne->total_tva = $total_tva;\n\t\t\t\t$propalligne->total_ttc = $total_ttc;\n\n\t\t\t\tdolibarr_install_syslog(\"upgrade2: Line \".$rowid.\": propalid=\".$obj->rowid.\" pu=\".$pu.\" qty=\".$qty.\" vatrate=\".$vatrate.\" remise_percent=\".$remise_percent.\" remise_global=\".$remise_percent_global.\" -> \".$total_ht.\", \".$total_tva.\", \".$total_ttc);\n\t\t\t\tprint \". \";\n\t\t\t\t$propalligne->update_total();\n\n\n\t\t\t\t/* On touche pas a propal mere\n\t\t\t\t $propal = new Propal($db);\n\t\t\t\t $propal->id=$obj->rowid;\n\t\t\t\t if ( $propal->fetch($propal->id) >= 0 )\n\t\t\t\t {\n\t\t\t\t if ( $propal->update_price() > 0 )\n\t\t\t\t {\n\t\t\t\t print \". \";\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t print \"Error id=\".$propal->id;\n\t\t\t\t }\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t print \"Error #3\";\n\t\t\t\t }\n\t\t\t\t */\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans(\"AlreadyDone\");\n\t\t}\n\n\t\t$db->free($resql);\n\n\t\t$db->commit();\n\t} else {\n\t\tprint \"Error #1 \".$db->error();\n\n\t\t$db->rollback();\n\t}\n\n\tprint '<br>';\n\n\tprint '</td></tr>';\n}\n\n/**\n * Update total of contract lines\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_price_contrat($db, $langs, $conf)\n{\n\t$db->begin();\n\n\t$tmpmysoc = new Societe($db);\n\t$tmpmysoc->setMysoc($conf);\n\tif (empty($tmpmysoc->country_id)) {\n\t\t$tmpmysoc->country_id = 0; // Ti not have this set to '' or will make sql syntax error.\n\t}\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationContract').\"</b><br>\\n\";\n\n\t// List of contract lines not up to date\n\t$sql = \"SELECT cd.rowid, cd.qty, cd.subprice, cd.remise_percent, cd.tva_tx as vatrate, cd.info_bits,\";\n\t$sql .= \" c.rowid as contratid\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"contratdet as cd, \".MAIN_DB_PREFIX.\"contrat as c\";\n\t$sql .= \" WHERE cd.fk_contrat = c.rowid\";\n\t$sql .= \" AND ((cd.total_ttc = 0 AND cd.remise_percent != 100 AND cd.subprice > 0) or cd.total_ttc IS NULL)\";\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_price_contrat\");\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$rowid = $obj->rowid;\n\t\t\t\t$qty = $obj->qty;\n\t\t\t\t$pu = $obj->subprice;\n\t\t\t\t$vatrate = $obj->vatrate;\n\t\t\t\t$remise_percent = $obj->remise_percent;\n\t\t\t\t$info_bits = $obj->info_bits;\n\n\t\t\t\t// On met a jour les 3 nouveaux champs\n\t\t\t\t$contratligne = new ContratLigne($db);\n\t\t\t\t//$contratligne->fetch($rowid); Non requis car le update_total ne met a jour que chp redefinis\n\t\t\t\t$contratligne->fetch($rowid);\n\n\t\t\t\t$result = calcul_price_total($qty, $pu, $remise_percent, $vatrate, 0, 0, 0, 'HT', $info_bits, $contratligne->product_type, $tmpmysoc);\n\t\t\t\t$total_ht  = $result[0];\n\t\t\t\t$total_tva = $result[1];\n\t\t\t\t$total_ttc = $result[2];\n\n\t\t\t\t$contratligne->total_ht  = $total_ht;\n\t\t\t\t$contratligne->total_tva = $total_tva;\n\t\t\t\t$contratligne->total_ttc = $total_ttc;\n\n\t\t\t\tdolibarr_install_syslog(\"upgrade2: Line \".$rowid.\": contratdetid=\".$obj->rowid.\" pu=\".$pu.\" qty=\".$qty.\" vatrate=\".$vatrate.\" remise_percent=\".$remise_percent.\"  -> \".$total_ht.\", \".$total_tva.\" , \".$total_ttc);\n\t\t\t\tprint \". \";\n\t\t\t\t$contratligne->update_total();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans(\"AlreadyDone\");\n\t\t}\n\n\t\t$db->free($resql);\n\n\t\t$db->commit();\n\t} else {\n\t\tprint \"Error #1 \".$db->error();\n\n\t\t$db->rollback();\n\t}\n\n\tprint '<br>';\n\n\tprint '</td></tr>';\n}\n\n/**\n * Update total of sales order lines\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_price_commande($db, $langs, $conf)\n{\n\t$db->begin();\n\n\t$tmpmysoc = new Societe($db);\n\t$tmpmysoc->setMysoc($conf);\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationOrder').\"</b><br>\\n\";\n\n\t// List of sales orders lines not up to date\n\t$sql = \"SELECT cd.rowid, cd.qty, cd.subprice, cd.remise_percent, cd.tva_tx as vatrate, cd.info_bits,\";\n\t$sql .= \" c.rowid as commandeid, c.remise_percent as remise_percent_global\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"commandedet as cd, \".MAIN_DB_PREFIX.\"commande as c\";\n\t$sql .= \" WHERE cd.fk_commande = c.rowid\";\n\t$sql .= \" AND ((cd.total_ttc = 0 AND cd.remise_percent != 100) or cd.total_ttc IS NULL)\";\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_price_commande\");\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$rowid = $obj->rowid;\n\t\t\t\t$qty = $obj->qty;\n\t\t\t\t$pu = $obj->subprice;\n\t\t\t\t$vatrate = $obj->vatrate;\n\t\t\t\t$remise_percent = $obj->remise_percent;\n\t\t\t\t$remise_percent_global = $obj->remise_percent_global;\n\t\t\t\t$info_bits = $obj->info_bits;\n\n\t\t\t\t// On met a jour les 3 nouveaux champs\n\t\t\t\t$commandeligne = new OrderLine($db);\n\t\t\t\t$commandeligne->fetch($rowid);\n\n\t\t\t\t$result = calcul_price_total($qty, $pu, $remise_percent, $vatrate, 0, 0, $remise_percent_global, 'HT', $info_bits, $commandeligne->product_type, $tmpmysoc);\n\t\t\t\t$total_ht  = $result[0];\n\t\t\t\t$total_tva = $result[1];\n\t\t\t\t$total_ttc = $result[2];\n\n\t\t\t\t$commandeligne->total_ht  = $total_ht;\n\t\t\t\t$commandeligne->total_tva = $total_tva;\n\t\t\t\t$commandeligne->total_ttc = $total_ttc;\n\n\t\t\t\tdolibarr_install_syslog(\"upgrade2: Line \".$rowid.\" : commandeid=\".$obj->rowid.\" pu=\".$pu.\" qty=\".$qty.\" vatrate=\".$vatrate.\" remise_percent=\".$remise_percent.\" remise_global=\".$remise_percent_global.\"  -> \".$total_ht.\", \".$total_tva.\", \".$total_ttc);\n\t\t\t\tprint \". \";\n\t\t\t\t$commandeligne->update_total();\n\n\t\t\t\t/* On touche pas a facture mere\n\t\t\t\t $commande = new Commande($db);\n\t\t\t\t $commande->id = $obj->rowid;\n\t\t\t\t if ( $commande->fetch($commande->id) >= 0 )\n\t\t\t\t {\n\t\t\t\t if ( $commande->update_price() > 0 )\n\t\t\t\t {\n\t\t\t\t print \". \";\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t print \"Error id=\".$commande->id;\n\t\t\t\t }\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t print \"Error #3\";\n\t\t\t\t }\n\t\t\t\t */\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans(\"AlreadyDone\");\n\t\t}\n\n\t\t$db->free($resql);\n\n\t\t/*\n\t\t $sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"commandedet\";\n\t\t $sql.= \" WHERE price = 0 and total_ttc = 0 and total_tva = 0 and total_ht = 0 AND remise_percent = 0\";\n\t\t $resql=$db->query($sql);\n\t\t if (! $resql)\n\t\t {\n\t\t dol_print_error($db);\n\t\t }\n\t\t */\n\n\t\t$db->commit();\n\t} else {\n\t\tprint \"Error #1 \".$db->error();\n\n\t\t$db->rollback();\n\t}\n\n\tprint '<br>';\n\n\tprint '</td></tr>';\n}\n\n/**\n * Update total of purchase order lines\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_price_commande_fournisseur($db, $langs, $conf)\n{\n\t$db->begin();\n\n\t$tmpmysoc = new Societe($db);\n\t$tmpmysoc->setMysoc($conf);\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationSupplierOrder').\"</b><br>\\n\";\n\n\t// List of purchase order lines not up to date\n\t$sql = \"SELECT cd.rowid, cd.qty, cd.subprice, cd.remise_percent, cd.tva_tx as vatrate, cd.info_bits,\";\n\t$sql .= \" c.rowid as commandeid, c.remise_percent as remise_percent_global\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"commande_fournisseurdet as cd, \".MAIN_DB_PREFIX.\"commande_fournisseur as c\";\n\t$sql .= \" WHERE cd.fk_commande = c.rowid\";\n\t$sql .= \" AND ((cd.total_ttc = 0 AND cd.remise_percent != 100) or cd.total_ttc IS NULL)\";\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_price_commande_fournisseur\");\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$rowid = $obj->rowid;\n\t\t\t\t$qty = $obj->qty;\n\t\t\t\t$pu = $obj->subprice;\n\t\t\t\t$vatrate = $obj->vatrate;\n\t\t\t\t$remise_percent = $obj->remise_percent;\n\t\t\t\t$remise_percent_global = $obj->remise_percent_global;\n\t\t\t\t$info_bits = $obj->info_bits;\n\n\t\t\t\t// On met a jour les 3 nouveaux champs\n\t\t\t\t$commandeligne = new CommandeFournisseurLigne($db);\n\t\t\t\t$commandeligne->fetch($rowid);\n\n\t\t\t\t$result = calcul_price_total($qty, $pu, $remise_percent, $vatrate, 0, 0, $remise_percent_global, 'HT', $info_bits, $commandeligne->product_type, $tmpsoc);\n\t\t\t\t$total_ht  = $result[0];\n\t\t\t\t$total_tva = $result[1];\n\t\t\t\t$total_ttc = $result[2];\n\n\t\t\t\t$commandeligne->total_ht  = $total_ht;\n\t\t\t\t$commandeligne->total_tva = $total_tva;\n\t\t\t\t$commandeligne->total_ttc = $total_ttc;\n\n\t\t\t\tdolibarr_install_syslog(\"upgrade2: Line \".$rowid.\": commandeid=\".$obj->rowid.\" pu=\".$pu.\"  qty=\".$qty.\" vatrate=\".$vatrate.\" remise_percent=\".$remise_percent.\" remise_global=\".$remise_percent_global.\" -> \".$total_ht.\", \".$total_tva.\", \".$total_ttc);\n\t\t\t\tprint \". \";\n\t\t\t\t$commandeligne->update_total();\n\n\t\t\t\t/* On touche pas a facture mere\n\t\t\t\t $commande = new Commande($db);\n\t\t\t\t $commande->id = $obj->rowid;\n\t\t\t\t if ( $commande->fetch($commande->id) >= 0 )\n\t\t\t\t {\n\t\t\t\t if ( $commande->update_price() > 0 )\n\t\t\t\t {\n\t\t\t\t print \". \";\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t print \"Error id=\".$commande->id;\n\t\t\t\t }\n\t\t\t\t }\n\t\t\t\t else\n\t\t\t\t {\n\t\t\t\t print \"Error #3\";\n\t\t\t\t }\n\t\t\t\t */\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans(\"AlreadyDone\");\n\t\t}\n\n\t\t$db->free($resql);\n\n\t\t/*\n\t\t $sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"commande_fournisseurdet\";\n\t\t $sql.= \" WHERE subprice = 0 and total_ttc = 0 and total_tva = 0 and total_ht = 0\";\n\t\t $resql=$db->query($sql);\n\t\t if (! $resql)\n\t\t {\n\t\t dol_print_error($db);\n\t\t }\n\t\t */\n\n\t\t$db->commit();\n\t} else {\n\t\tprint \"Error #1 \".$db->error();\n\n\t\t$db->rollback();\n\t}\n\n\tprint '<br>';\n\n\tprint '</td></tr>';\n}\n\n/**\n * Mise a jour des modeles selectionnes\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_modeles($db, $langs, $conf)\n{\n\t//print '<br>';\n\t//print '<b>'.$langs->trans('UpdateModelsTable').\"</b><br>\\n\";\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_modeles\");\n\n\tif (!empty($conf->facture->enabled)) {\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/modules/facture/modules_facture.php';\n\t\t$modellist = ModelePDFFactures::liste_modeles($db);\n\t\tif (count($modellist) == 0) {\n\t\t\t// Aucun model par defaut.\n\t\t\t$sql = \" insert into \".MAIN_DB_PREFIX.\"document_model(nom,type) values('crabe','invoice')\";\n\t\t\t$resql = $db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!empty($conf->commande->enabled)) {\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/modules/commande/modules_commande.php';\n\t\t$modellist = ModelePDFCommandes::liste_modeles($db);\n\t\tif (count($modellist) == 0) {\n\t\t\t// Aucun model par defaut.\n\t\t\t$sql = \" insert into \".MAIN_DB_PREFIX.\"document_model(nom,type) values('einstein','order')\";\n\t\t\t$resql = $db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!empty($conf->expedition->enabled)) {\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/modules/expedition/modules_expedition.php';\n\t\t$modellist = ModelePDFExpedition::liste_modeles($db);\n\t\tif (count($modellist) == 0) {\n\t\t\t// Aucun model par defaut.\n\t\t\t$sql = \" insert into \".MAIN_DB_PREFIX.\"document_model(nom,type) values('rouget','shipping')\";\n\t\t\t$resql = $db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t}\n\t}\n\n\t//print $langs->trans(\"AlreadyDone\");\n}\n\n\n/**\n * Correspondance des expeditions et des commandes clients dans la table llx_co_exp\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_commande_expedition($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_commande_expedition\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationShipmentOrderMatching').\"</b><br>\\n\";\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"expedition\", \"fk_commande\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t$error = 0;\n\n\t\t$db->begin();\n\n\t\t$sql = \"SELECT e.rowid, e.fk_commande FROM \".MAIN_DB_PREFIX.\"expedition as e\";\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"co_exp (fk_expedition,fk_commande)\";\n\t\t\t\t\t$sql .= \" VALUES (\".((int) $obj->rowid).\", \".((int) $obj->fk_commande).\")\";\n\t\t\t\t\t$resql2 = $db->query($sql);\n\n\t\t\t\t\tif (!$resql2) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$db->commit();\n\t\t\t\t$sql = \"ALTER TABLE \".MAIN_DB_PREFIX.\"expedition DROP COLUMN fk_commande\";\n\t\t\t\tprint $langs->trans('FieldRenamed').\"<br>\\n\";\n\t\t\t\t$db->query($sql);\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\tprint '</td></tr>';\n}\n\n/**\n * Correspondance des livraisons et des commandes clients dans la table llx_co_liv\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_commande_livraison($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_commande_livraison\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationDeliveryOrderMatching').\"</b><br>\\n\";\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"livraison\", \"fk_commande\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t$error = 0;\n\n\t\t$db->begin();\n\n\t\t$sql = \"SELECT l.rowid, l.fk_commande,\";\n\t\t$sql .= \" c.ref_client, c.date_livraison as delivery_date\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"livraison as l, \".MAIN_DB_PREFIX.\"commande as c\";\n\t\t$sql .= \" WHERE c.rowid = l.fk_commande\";\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"co_liv (fk_livraison,fk_commande)\";\n\t\t\t\t\t$sql .= \" VALUES (\".((int) $obj->rowid).\", \".((int) $obj->fk_commande).\")\";\n\t\t\t\t\t$resql2 = $db->query($sql);\n\n\t\t\t\t\tif ($resql2) {\n\t\t\t\t\t\t$delivery_date = $db->jdate($obj->delivery_date);\n\n\t\t\t\t\t\t$sqlu = \"UPDATE \".MAIN_DB_PREFIX.\"livraison SET\";\n\t\t\t\t\t\t$sqlu .= \" ref_client = '\".$db->escape($obj->ref_client).\"'\";\n\t\t\t\t\t\t$sqlu .= \", date_livraison = '\".$db->idate($delivery_date).\"'\";\n\t\t\t\t\t\t$sqlu .= \" WHERE rowid = \".((int) $obj->rowid);\n\t\t\t\t\t\t$resql3 = $db->query($sqlu);\n\t\t\t\t\t\tif (!$resql3) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$db->commit();\n\t\t\t\t$sql = \"ALTER TABLE \".MAIN_DB_PREFIX.\"livraison DROP COLUMN fk_commande\";\n\t\t\t\tprint $langs->trans('FieldRenamed').\"<br>\\n\";\n\t\t\t\t$db->query($sql);\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\tprint '</td></tr>';\n}\n\n/**\n * Migration des details commandes dans les details livraisons\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_detail_livraison($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_detail_livraison\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationDeliveryDetail').\"</b><br>\\n\";\n\n\t// This is done if field fk_commande_ligne exists.\n\t// If not this means migration was already done.\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"livraisondet\", \"fk_commande_ligne\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t$error = 0;\n\n\t\t$db->begin();\n\n\t\t$sql = \"SELECT cd.rowid, cd.fk_product, cd.description, cd.subprice, cd.total_ht\";\n\t\t$sql .= \", ld.fk_livraison\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"commandedet as cd, \".MAIN_DB_PREFIX.\"livraisondet as ld\";\n\t\t$sql .= \" WHERE ld.fk_commande_ligne = cd.rowid\";\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"livraisondet SET\";\n\t\t\t\t\t$sql .= \" fk_product = \".((int) $obj->fk_product);\n\t\t\t\t\t$sql .= \",description = '\".$db->escape($obj->description).\"'\";\n\t\t\t\t\t$sql .= \",subprice = \".price2num($obj->subprice);\n\t\t\t\t\t$sql .= \",total_ht = \".price2num($obj->total_ht);\n\t\t\t\t\t$sql .= \" WHERE fk_commande_ligne = \".((int) $obj->rowid);\n\t\t\t\t\t$resql2 = $db->query($sql);\n\n\t\t\t\t\tif ($resql2) {\n\t\t\t\t\t\t$sql = \"SELECT total_ht\";\n\t\t\t\t\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"livraison\";\n\t\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->fk_livraison);\n\t\t\t\t\t\t$resql3 = $db->query($sql);\n\n\t\t\t\t\t\tif ($resql3) {\n\t\t\t\t\t\t\t$obju = $db->fetch_object($resql3);\n\t\t\t\t\t\t\t$total_ht = $obju->total_ht + $obj->total_ht;\n\n\t\t\t\t\t\t\t$sqlu = \"UPDATE \".MAIN_DB_PREFIX.\"livraison SET\";\n\t\t\t\t\t\t\t$sqlu .= \" total_ht = \".price2num($total_ht, 'MT');\n\t\t\t\t\t\t\t$sqlu .= \" WHERE rowid = \".((int) $obj->fk_livraison);\n\t\t\t\t\t\t\t$resql4 = $db->query($sqlu);\n\t\t\t\t\t\t\tif (!$resql4) {\n\t\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$db->commit();\n\t\t\t\t$sql = \"ALTER TABLE \".MAIN_DB_PREFIX.\"livraisondet CHANGE fk_commande_ligne fk_origin_line integer\";\n\t\t\t\tprint $langs->trans('FieldRenamed').\"<br>\\n\";\n\t\t\t\t$db->query($sql);\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"livraisondet\", \"fk_origin_line\");\n\t\t$obj = $db->fetch_object($result);\n\t\tif (!$obj) {\n\t\t\t$sql = \"ALTER TABLE \".MAIN_DB_PREFIX.\"livraisondet ADD COLUMN fk_origin_line integer after fk_livraison\";\n\t\t\t$db->query($sql);\n\t\t}\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\tprint '</td></tr>';\n}\n\n/**\n * Migration du champ stock dans produits\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_stocks($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_stocks\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationStockDetail').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\t$db->begin();\n\n\t$sql = \"SELECT SUM(reel) as total, fk_product\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"product_stock as ps\";\n\t$sql .= \" GROUP BY fk_product\";\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"product SET\";\n\t\t\t\t$sql .= \" stock = \".price2num($obj->total, 'MS');\n\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->fk_product);\n\n\t\t\t\t$resql2 = $db->query($sql);\n\t\t\t\tif ($resql2) {\n\t\t\t\t} else {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\n\t\tif ($error == 0) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migration of menus (use only 1 table instead of 3)\n * 2.6 -> 2.7\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_menus($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_menus\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationMenusDetail').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tif ($db->DDLInfoTable(MAIN_DB_PREFIX.\"menu_constraint\")) {\n\t\t$db->begin();\n\n\t\t$sql = \"SELECT m.rowid, mc.action\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"menu_constraint as mc, \".MAIN_DB_PREFIX.\"menu_const as md, \".MAIN_DB_PREFIX.\"menu as m\";\n\t\t$sql .= \" WHERE md.fk_menu = m.rowid AND md.fk_constraint = mc.rowid\";\n\t\t$sql .= \" AND m.enabled = '1'\";\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"menu SET\";\n\t\t\t\t\t$sql .= \" enabled = '\".$db->escape($obj->action).\"'\";\n\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->rowid);\n\t\t\t\t\t$sql .= \" AND enabled = '1'\";\n\n\t\t\t\t\t$resql2 = $db->query($sql);\n\t\t\t\t\tif ($resql2) {\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$db->commit();\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migration du champ fk_adresse_livraison dans expedition\n * 2.6 -> 2.7\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_commande_deliveryaddress($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_commande_deliveryaddress\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationDeliveryAddress').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tif ($db->DDLInfoTable(MAIN_DB_PREFIX.\"co_exp\")) {\n\t\t$db->begin();\n\n\t\t$sql = \"SELECT c.fk_adresse_livraison, ce.fk_expedition\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"commande as c\";\n\t\t$sql .= \", \".MAIN_DB_PREFIX.\"co_exp as ce\";\n\t\t$sql .= \" WHERE c.rowid = ce.fk_commande\";\n\t\t$sql .= \" AND c.fk_adresse_livraison IS NOT NULL AND c.fk_adresse_livraison != 0\";\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"expedition SET\";\n\t\t\t\t\t$sql .= \" fk_adresse_livraison = '\".$db->escape($obj->fk_adresse_livraison).\"'\";\n\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->fk_expedition);\n\n\t\t\t\t\t$resql2 = $db->query($sql);\n\t\t\t\t\tif (!$resql2) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$db->commit();\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migration du champ fk_remise_except dans llx_facturedet doit correspondre a\n * lien dans llx_societe_remise_except vers llx_facturedet\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tinteger|null\n */\nfunction migrate_restore_missing_links($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_restore_missing_links\");\n\n\tif (($db->type == 'mysql' || $db->type == 'mysqli')) {\n\t\tif (versioncompare($db->getVersionArray(), array(4, 0)) < 0) {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_restore_missing_links Version of database too old to make this migrate action\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationFixData').\"</b> (1)<br>\\n\";\n\n\t$error = 0;\n\n\n\t// Restore missing link for this cross foreign key (link 1 <=> 1). Direction 1.\n\t$table1 = 'facturedet'; $field1 = 'fk_remise_except';\n\t$table2 = 'societe_remise_except'; $field2 = 'fk_facture_line';\n\n\t$db->begin();\n\n\t$sql = \"SELECT t1.rowid, t1.\".$field1.\" as field\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.$table1.\" as t1\";\n\t$sql .= \" WHERE t1.\".$field1.\" IS NOT NULL AND t1.\".$field1.\" NOT IN\";\n\t$sql .= \" (SELECT t2.rowid FROM \".MAIN_DB_PREFIX.$table2.\" as t2\";\n\t$sql .= \" WHERE t1.rowid = t2.\".$field2.\")\";\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_restore_missing_links DIRECTION 1\");\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\tprint 'Line '.$obj->rowid.' in '.$table1.' is linked to record '.$obj->field.' in '.$table2.' that has no link to '.$table1.'. We fix this.<br>';\n\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.$table2.\" SET\";\n\t\t\t\t$sql .= \" \".$field2.\" = '\".$db->escape($obj->rowid).\"'\";\n\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->field);\n\n\t\t\t\t$resql2 = $db->query($sql);\n\t\t\t\tif (!$resql2) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\t\t\t\t//print \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif ($error == 0) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\tprint '</td></tr>';\n\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationFixData').\"</b> (2)<br>\\n\";\n\n\t// Restore missing link for this cross foreign key (link 1 <=> 1). Direction 2.\n\t$table2 = 'facturedet'; $field2 = 'fk_remise_except';\n\t$table1 = 'societe_remise_except'; $field1 = 'fk_facture_line';\n\n\t$db->begin();\n\n\t$sql = \"SELECT t1.rowid, t1.\".$field1.\" as field\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.$table1.\" as t1\";\n\t$sql .= \" WHERE t1.\".$field1.\" IS NOT NULL AND t1.\".$field1.\" NOT IN\";\n\t$sql .= \" (SELECT t2.rowid FROM \".MAIN_DB_PREFIX.$table2.\" as t2\";\n\t$sql .= \" WHERE t1.rowid = t2.\".$field2.\")\";\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_restore_missing_links DIRECTION 2\");\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\tprint 'Line '.$obj->rowid.' in '.$table1.' is linked to record '.$obj->field.' in '.$table2.' that has no link to '.$table1.'. We fix this.<br>';\n\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.$table2.\" SET\";\n\t\t\t\t$sql .= \" \".$field2.\" = '\".$db->escape($obj->rowid).\"'\";\n\t\t\t\t$sql .= \" WHERE rowid = \".((int) $obj->field);\n\n\t\t\t\t$resql2 = $db->query($sql);\n\t\t\t\tif (!$resql2) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\t\t\t\t//print \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif ($error == 0) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migration du champ fk_user_resp de llx_projet vers llx_element_contact\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_project_user_resp($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_project_user_resp\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationProjectUserResp').\"</b><br>\\n\";\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"projet\", \"fk_user_resp\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\t$error = 0;\n\n\t\t$db->begin();\n\n\t\t$sql = \"SELECT rowid, fk_user_resp FROM \".MAIN_DB_PREFIX.\"projet\";\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sql2 = \"INSERT INTO \".MAIN_DB_PREFIX.\"element_contact (\";\n\t\t\t\t\t$sql2 .= \"datecreate\";\n\t\t\t\t\t$sql2 .= \", statut\";\n\t\t\t\t\t$sql2 .= \", element_id\";\n\t\t\t\t\t$sql2 .= \", fk_c_type_contact\";\n\t\t\t\t\t$sql2 .= \", fk_socpeople\";\n\t\t\t\t\t$sql2 .= \") VALUES (\";\n\t\t\t\t\t$sql2 .= \"'\".$db->idate(dol_now()).\"'\";\n\t\t\t\t\t$sql2 .= \", '4'\";\n\t\t\t\t\t$sql2 .= \", \".$obj->rowid;\n\t\t\t\t\t$sql2 .= \", '160'\";\n\t\t\t\t\t$sql2 .= \", \".$obj->fk_user_resp;\n\t\t\t\t\t$sql2 .= \")\";\n\n\t\t\t\t\tif ($obj->fk_user_resp > 0) {\n\t\t\t\t\t\t$resql2 = $db->query($sql2);\n\t\t\t\t\t\tif (!$resql2) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$sqlDrop = \"ALTER TABLE \".MAIN_DB_PREFIX.\"projet DROP COLUMN fk_user_resp\";\n\t\t\t\tif ($db->query($sqlDrop)) {\n\t\t\t\t\t$db->commit();\n\t\t\t\t} else {\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\tprint '</td></tr>';\n}\n\n/**\n * Migration de la table llx_projet_task_actors vers llx_element_contact\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_project_task_actors($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_project_task_actors\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationProjectTaskActors').\"</b><br>\\n\";\n\n\tif ($db->DDLInfoTable(MAIN_DB_PREFIX.\"projet_task_actors\")) {\n\t\t$error = 0;\n\n\t\t$db->begin();\n\n\t\t$sql = \"SELECT fk_projet_task as fk_project_task, fk_user FROM \".MAIN_DB_PREFIX.\"projet_task_actors\";\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sql2 = \"INSERT INTO \".MAIN_DB_PREFIX.\"element_contact (\";\n\t\t\t\t\t$sql2 .= \"datecreate\";\n\t\t\t\t\t$sql2 .= \", statut\";\n\t\t\t\t\t$sql2 .= \", element_id\";\n\t\t\t\t\t$sql2 .= \", fk_c_type_contact\";\n\t\t\t\t\t$sql2 .= \", fk_socpeople\";\n\t\t\t\t\t$sql2 .= \") VALUES (\";\n\t\t\t\t\t$sql2 .= \"'\".$db->idate(dol_now()).\"'\";\n\t\t\t\t\t$sql2 .= \", '4'\";\n\t\t\t\t\t$sql2 .= \", \".$obj->fk_project_task;\n\t\t\t\t\t$sql2 .= \", '180'\";\n\t\t\t\t\t$sql2 .= \", \".$obj->fk_user;\n\t\t\t\t\t$sql2 .= \")\";\n\n\t\t\t\t\t$resql2 = $db->query($sql2);\n\n\t\t\t\t\tif (!$resql2) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$sqlDrop = \"DROP TABLE \".MAIN_DB_PREFIX.\"projet_task_actors\";\n\t\t\t\tif ($db->query($sqlDrop)) {\n\t\t\t\t\t$db->commit();\n\t\t\t\t} else {\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\tprint '</td></tr>';\n}\n\n/**\n * Migration des tables de relation\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @param\tstring\t\t$table\t\t\tTable name\n * @param\tint\t\t\t$fk_source\t\tId of element source\n * @param\tstring\t\t$sourcetype\t\tType of element source\n * @param\tint\t\t\t$fk_target\t\tId of element target\n * @param\tstring\t\t$targettype\t\tType of element target\n * @return\tvoid\n */\nfunction migrate_relationship_tables($db, $langs, $conf, $table, $fk_source, $sourcetype, $fk_target, $targettype)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationRelationshipTables', MAIN_DB_PREFIX.$table).\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tif ($db->DDLInfoTable(MAIN_DB_PREFIX.$table)) {\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_relationship_tables table = \".MAIN_DB_PREFIX.$table);\n\n\t\t$db->begin();\n\n\t\t$sqlSelect = \"SELECT \".$fk_source.\", \".$fk_target;\n\t\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.$table;\n\n\t\t$resql = $db->query($sqlSelect);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sqlInsert = \"INSERT INTO \".MAIN_DB_PREFIX.\"element_element (\";\n\t\t\t\t\t$sqlInsert .= \"fk_source\";\n\t\t\t\t\t$sqlInsert .= \", sourcetype\";\n\t\t\t\t\t$sqlInsert .= \", fk_target\";\n\t\t\t\t\t$sqlInsert .= \", targettype\";\n\t\t\t\t\t$sqlInsert .= \") VALUES (\";\n\t\t\t\t\t$sqlInsert .= $obj->$fk_source;\n\t\t\t\t\t$sqlInsert .= \", '\".$db->escape($sourcetype).\"'\";\n\t\t\t\t\t$sqlInsert .= \", \".$obj->$fk_target;\n\t\t\t\t\t$sqlInsert .= \", '\".$db->escape($targettype).\"'\";\n\t\t\t\t\t$sqlInsert .= \")\";\n\n\t\t\t\t\t$result = $db->query($sqlInsert);\n\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$sqlDrop = \"DROP TABLE \".MAIN_DB_PREFIX.$table;\n\t\t\t\tif ($db->query($sqlDrop)) {\n\t\t\t\t\t$db->commit();\n\t\t\t\t} else {\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate duration in seconds\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_project_task_time($db, $langs, $conf)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_project_task_time\");\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationProjectTaskTime').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\t$db->begin();\n\n\t$sql = \"SELECT rowid, fk_task, task_duration\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"projet_task_time\";\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\t$totaltime = array();\n\t\t\t$oldtime = 0;\n\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\tif ($obj->task_duration > 0) {\n\t\t\t\t\t// convert to second\n\t\t\t\t\t// only for int time and float time ex: 1,75 for 1h45\n\t\t\t\t\tlist($hour, $min) = explode('.', $obj->task_duration);\n\t\t\t\t\t$hour = $hour * 60 * 60;\n\t\t\t\t\t$min = ($min / 100) * 60 * 60;\n\t\t\t\t\t$newtime = $hour + $min;\n\n\t\t\t\t\t$sql2 = \"UPDATE \".MAIN_DB_PREFIX.\"projet_task_time SET\";\n\t\t\t\t\t$sql2 .= \" task_duration = \".((int) $newtime);\n\t\t\t\t\t$sql2 .= \" WHERE rowid = \".((int) $obj->rowid);\n\n\t\t\t\t\t$resql2 = $db->query($sql2);\n\t\t\t\t\tif (!$resql2) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$oldtime++;\n\t\t\t\t\tif (!empty($totaltime[$obj->fk_task])) {\n\t\t\t\t\t\t$totaltime[$obj->fk_task] += $newtime;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$totaltime[$obj->fk_task] = $newtime;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($totaltime[$obj->fk_task])) {\n\t\t\t\t\t\t$totaltime[$obj->fk_task] += $obj->task_duration;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$totaltime[$obj->fk_task] = $obj->task_duration;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\tif ($oldtime > 0) {\n\t\t\t\t\tforeach ($totaltime as $taskid => $total_duration) {\n\t\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"projet_task SET\";\n\t\t\t\t\t\t$sql .= \" duration_effective = \".((int) $total_duration);\n\t\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $taskid);\n\n\t\t\t\t\t\t$resql = $db->query($sql);\n\t\t\t\t\t\tif (!$resql) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t}\n\n\tif ($error == 0) {\n\t\t$db->commit();\n\t} else {\n\t\t$db->rollback();\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate order ref_customer and date_delivery fields to llx_expedition\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_customerorder_shipping($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationCustomerOrderShipping').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\t$result1 = $db->DDLDescTable(MAIN_DB_PREFIX.\"expedition\", \"ref_customer\");\n\t$result2 = $db->DDLDescTable(MAIN_DB_PREFIX.\"expedition\", \"date_delivery\");\n\t$obj1 = $db->fetch_object($result1);\n\t$obj2 = $db->fetch_object($result2);\n\tif (!$obj1 && !$obj2) {\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_customerorder_shipping\");\n\n\t\t$db->begin();\n\n\t\t$sqlAdd1 = \"ALTER TABLE \".MAIN_DB_PREFIX.\"expedition ADD COLUMN ref_customer varchar(30) AFTER entity\";\n\t\t$sqlAdd2 = \"ALTER TABLE \".MAIN_DB_PREFIX.\"expedition ADD COLUMN date_delivery date DEFAULT NULL AFTER date_expedition\";\n\n\t\tif ($db->query($sqlAdd1) && $db->query($sqlAdd2)) {\n\t\t\t$sqlSelect = \"SELECT e.rowid as shipping_id, c.ref_client, c.date_livraison as delivery_date\";\n\t\t\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"expedition as e\";\n\t\t\t$sqlSelect .= \", \".MAIN_DB_PREFIX.\"element_element as el\";\n\t\t\t$sqlSelect .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"commande as c ON c.rowid = el.fk_source AND el.sourcetype = 'commande'\";\n\t\t\t$sqlSelect .= \" WHERE e.rowid = el.fk_target\";\n\t\t\t$sqlSelect .= \" AND el.targettype = 'shipping'\";\n\n\t\t\t$resql = $db->query($sqlSelect);\n\t\t\tif ($resql) {\n\t\t\t\t$i = 0;\n\t\t\t\t$num = $db->num_rows($resql);\n\n\t\t\t\tif ($num) {\n\t\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"expedition SET\";\n\t\t\t\t\t\t$sqlUpdate .= \" ref_customer = '\".$db->escape($obj->ref_client).\"'\";\n\t\t\t\t\t\t$sqlUpdate .= \", date_delivery = '\".$db->escape($obj->delivery_date ? $obj->delivery_date : 'null').\"'\";\n\t\t\t\t\t\t$sqlUpdate .= \" WHERE rowid = \".((int) $obj->shipping_id);\n\n\t\t\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint \". \";\n\t\t\t\t\t\t$i++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t\t\t}\n\n\t\t\t\tif ($error == 0) {\n\t\t\t\t\t$db->commit();\n\t\t\t\t} else {\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdol_print_error($db);\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate link stored into fk_expedition into llx_element_element\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_shipping_delivery($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationShippingDelivery').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"livraison\", \"fk_expedition\");\n\t$obj = $db->fetch_object($result);\n\tif ($obj) {\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_shipping_delivery\");\n\n\t\t$db->begin();\n\n\t\t$sqlSelect = \"SELECT rowid, fk_expedition\";\n\t\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"livraison\";\n\t\t$sqlSelect .= \" WHERE fk_expedition is not null\";\n\n\t\t$resql = $db->query($sqlSelect);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sqlInsert = \"INSERT INTO \".MAIN_DB_PREFIX.\"element_element (\";\n\t\t\t\t\t$sqlInsert .= \"fk_source\";\n\t\t\t\t\t$sqlInsert .= \", sourcetype\";\n\t\t\t\t\t$sqlInsert .= \", fk_target\";\n\t\t\t\t\t$sqlInsert .= \", targettype\";\n\t\t\t\t\t$sqlInsert .= \") VALUES (\";\n\t\t\t\t\t$sqlInsert .= $obj->fk_expedition;\n\t\t\t\t\t$sqlInsert .= \", 'shipping'\";\n\t\t\t\t\t$sqlInsert .= \", \".$obj->rowid;\n\t\t\t\t\t$sqlInsert .= \", 'delivery'\";\n\t\t\t\t\t$sqlInsert .= \")\";\n\n\t\t\t\t\t$result = $db->query($sqlInsert);\n\t\t\t\t\tif ($result) {\n\t\t\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"livraison SET fk_expedition = NULL\";\n\t\t\t\t\t\t$sqlUpdate .= \" WHERE rowid = \".((int) $obj->rowid);\n\n\t\t\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint \". \";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t\t}\n\n\t\t\tif ($error == 0) {\n\t\t\t\t$sqlDelete = \"DELETE FROM \".MAIN_DB_PREFIX.\"element_element WHERE sourcetype = 'commande' AND targettype = 'delivery'\";\n\t\t\t\t$db->query($sqlDelete);\n\n\t\t\t\t$db->commit();\n\n\t\t\t\t// DDL commands must not be inside a transaction\n\t\t\t\t$sqlDrop = \"ALTER TABLE \".MAIN_DB_PREFIX.\"livraison DROP COLUMN fk_expedition\";\n\t\t\t\t$db->query($sqlDrop);\n\t\t\t} else {\n\t\t\t\tdol_print_error($db);\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * We try to complete field ref_customer and date_delivery that are empty into llx_livraison.\n * We set them with value from llx_expedition.\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_shipping_delivery2($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationShippingDelivery2').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_shipping_delivery2\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT l.rowid as delivery_id, e.ref_customer, e.date_delivery\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"livraison as l,\";\n\t$sqlSelect .= \" \".MAIN_DB_PREFIX.\"element_element as el,\";\n\t$sqlSelect .= \" \".MAIN_DB_PREFIX.\"expedition as e\";\n\t$sqlSelect .= \" WHERE l.rowid = el.fk_target\";\n\t$sqlSelect .= \" AND el.targettype = 'delivery'\";\n\t$sqlSelect .= \" AND e.rowid = el.fk_source AND el.sourcetype = 'shipping'\";\n\t$sqlSelect .= \" AND (e.ref_customer IS NOT NULL OR e.date_delivery IS NOT NULL)\"; // Useless to process this record if both are null\n\t// Add condition to know if we never migrate this record\n\t$sqlSelect .= \" AND (l.ref_customer IS NULL\".($db->type != 'pgsql' ? \" or l.ref_customer = ''\" : \"\").\")\";\n\t$sqlSelect .= \" AND (l.date_delivery IS NULL\".($db->type != 'pgsql' ? \" or l.date_delivery = ''\" : \"\").\")\";\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"livraison SET\";\n\t\t\t\t$sqlUpdate .= \" ref_customer = '\".$db->escape($obj->ref_customer).\"',\";\n\t\t\t\t$sqlUpdate .= \" date_delivery = \".($obj->date_delivery ? \"'\".$db->escape($obj->date_delivery).\"'\" : 'null');\n\t\t\t\t$sqlUpdate .= \" WHERE rowid = \".((int) $obj->delivery_id);\n\n\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\tif (!$result) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif ($error == 0) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate link stored into fk_xxxx into fk_element and elementtype\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_actioncomm_element($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationActioncommElement').\"</b><br>\\n\";\n\n\t$elements = array(\n\t\t'propal' => 'propalrowid',\n\t\t'order' => 'fk_commande',\n\t\t'invoice' => 'fk_facture',\n\t\t'contract' => 'fk_contract',\n\t\t'order_supplier' => 'fk_supplier_order',\n\t\t'invoice_supplier' => 'fk_supplier_invoice'\n\t);\n\n\tforeach ($elements as $type => $field) {\n\t\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"actioncomm\", $field);\n\t\t$obj = $db->fetch_object($result);\n\t\tif ($obj) {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_actioncomm_element field=\".$field);\n\n\t\t\t$db->begin();\n\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"actioncomm SET \";\n\t\t\t$sql .= \"fk_element = \".$field.\", elementtype = '\".$db->escape($type).\"'\";\n\t\t\t$sql .= \" WHERE \".$field.\" IS NOT NULL\";\n\t\t\t$sql .= \" AND fk_element IS NULL\";\n\t\t\t$sql .= \" AND elementtype IS NULL\";\n\n\t\t\t$resql = $db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$db->commit();\n\n\t\t\t\t// DDL commands must not be inside a transaction\n\t\t\t\t// We will drop at next version because a migrate should be runnable several times if it fails.\n\t\t\t\t//$sqlDrop = \"ALTER TABLE \".MAIN_DB_PREFIX.\"actioncomm DROP COLUMN \".$field;\n\t\t\t\t//$db->query($sqlDrop);\n\t\t\t\t//print \". \";\n\t\t\t} else {\n\t\t\t\tdol_print_error($db);\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate link stored into fk_mode_reglement\n *\n * @param\tDoliDB\t\t$db\t\tDatabase handler\n * @param\tTranslate\t$langs\tObject langs\n * @param\tConf\t\t$conf\tObject conf\n * @return\tvoid\n */\nfunction migrate_mode_reglement($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationPaymentMode').\"</b><br>\\n\";\n\n\t$elements = array(\n\t\t'old_id' => array(5, 8, 9, 10, 11),\n\t\t'new_id' => array(50, 51, 52, 53, 54),\n\t\t'code' => array('VAD', 'TRA', 'LCR', 'FAC', 'PRO'),\n\t\t'tables' => array('commande_fournisseur', 'commande', 'facture_rec', 'facture', 'propal')\n\t);\n\t$count = 0;\n\n\tforeach ($elements['old_id'] as $key => $old_id) {\n\t\t$error = 0;\n\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_mode_reglement code=\".$elements['code'][$key]);\n\n\t\t$sqlSelect = \"SELECT id\";\n\t\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"c_paiement\";\n\t\t$sqlSelect .= \" WHERE id = \".((int) $old_id);\n\t\t$sqlSelect .= \" AND code = '\".$db->escape($elements['code'][$key]).\"'\";\n\n\t\t$resql = $db->query($sqlSelect);\n\t\tif ($resql) {\n\t\t\t$num = $db->num_rows($resql);\n\t\t\tif ($num) {\n\t\t\t\t$count++;\n\n\t\t\t\t$db->begin();\n\n\t\t\t\t$sqla = \"UPDATE \".MAIN_DB_PREFIX.\"paiement SET\";\n\t\t\t\t$sqla .= \" fk_paiement = \".((int) $elements['new_id'][$key]);\n\t\t\t\t$sqla .= \" WHERE fk_paiement = \".((int) $old_id);\n\t\t\t\t$sqla .= \" AND fk_paiement IN (SELECT id FROM \".MAIN_DB_PREFIX.\"c_paiement WHERE id = \".((int) $old_id).\" AND code = '\".$db->escape($elements['code'][$key]).\"')\";\n\t\t\t\t$resqla = $db->query($sqla);\n\n\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"c_paiement SET\";\n\t\t\t\t$sql .= \" id = \".((int) $elements['new_id'][$key]);\n\t\t\t\t$sql .= \" WHERE id = \".((int) $old_id);\n\t\t\t\t$sql .= \" AND code = '\".$db->escape($elements['code'][$key]).\"'\";\n\t\t\t\t$resql = $db->query($sql);\n\n\t\t\t\tif ($resqla && $resql) {\n\t\t\t\t\tforeach ($elements['tables'] as $table) {\n\t\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.$table.\" SET \";\n\t\t\t\t\t\t$sql .= \"fk_mode_reglement = \".((int) $elements['new_id'][$key]);\n\t\t\t\t\t\t$sql .= \" WHERE fk_mode_reglement = \".((int) $old_id);\n\n\t\t\t\t\t\t$resql = $db->query($sql);\n\t\t\t\t\t\tif (!$resql) {\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint \". \";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!$error) {\n\t\t\t\t\t\t$db->commit();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t$db->rollback();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($count == 0) {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\n\n\tprint '</td></tr>';\n}\n\n\n/**\n * Delete duplicates in table categorie_association\n *\n * @param\tDoliDB\t\t$db\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\tObject langs\n * @param\tConf\t\t$conf\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_clean_association($db, $langs, $conf)\n{\n\t$result = $db->DDLDescTable(MAIN_DB_PREFIX.\"categorie_association\");\n\tif ($result) {\t// result defined for version 3.2 or -\n\t\t$obj = $db->fetch_object($result);\n\t\tif ($obj) {\t// It table categorie_association exists\n\t\t\t$couples = array();\n\t\t\t$filles = array();\n\t\t\t$sql = \"SELECT fk_categorie_mere, fk_categorie_fille\";\n\t\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"categorie_association\";\n\t\t\tdolibarr_install_syslog(\"upgrade: search duplicate\");\n\t\t\t$resql = $db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$num = $db->num_rows($resql);\n\t\t\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t\t\tif (!isset($filles[$obj->fk_categorie_fille])) {\t// Only one record as child (a child has only on parent).\n\t\t\t\t\t\tif ($obj->fk_categorie_mere != $obj->fk_categorie_fille) {\n\t\t\t\t\t\t\t$filles[$obj->fk_categorie_fille] = 1; // Set record for this child\n\t\t\t\t\t\t\t$couples[$obj->fk_categorie_mere.'_'.$obj->fk_categorie_fille] = array('mere'=>$obj->fk_categorie_mere, 'fille'=>$obj->fk_categorie_fille);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdolibarr_install_syslog(\"upgrade: result is num=\".$num.\" count(couples)=\".count($couples));\n\n\t\t\t\t// If there is duplicates couples or child with two parents\n\t\t\t\tif (count($couples) > 0 && $num > count($couples)) {\n\t\t\t\t\t$error = 0;\n\n\t\t\t\t\t$db->begin();\n\n\t\t\t\t\t// We delete all\n\t\t\t\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"categorie_association\";\n\t\t\t\t\tdolibarr_install_syslog(\"upgrade: delete association\");\n\t\t\t\t\t$resqld = $db->query($sql);\n\t\t\t\t\tif ($resqld) {\n\t\t\t\t\t\t// And we insert only each record once\n\t\t\t\t\t\tforeach ($couples as $key => $val) {\n\t\t\t\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"categorie_association(fk_categorie_mere,fk_categorie_fille)\";\n\t\t\t\t\t\t\t$sql .= \" VALUES(\".((int) $val['mere']).\", \".((int) $val['fille']).\")\";\n\t\t\t\t\t\t\tdolibarr_install_syslog(\"upgrade: insert association\");\n\t\t\t\t\t\t\t$resqli = $db->query($sql);\n\t\t\t\t\t\t\tif (!$resqli) {\n\t\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!$error) {\n\t\t\t\t\t\tprint '<tr><td>'.$langs->trans(\"MigrationCategorieAssociation\").'</td>';\n\t\t\t\t\t\tprint '<td class=\"right\">'.$langs->trans(\"RemoveDuplicates\").' '.$langs->trans(\"Success\").' ('.$num.'=>'.count($couples).')</td></tr>';\n\t\t\t\t\t\t$db->commit();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<tr><td>'.$langs->trans(\"MigrationCategorieAssociation\").'</td>';\n\t\t\t\t\t\tprint '<td class=\"right\">'.$langs->trans(\"RemoveDuplicates\").' '.$langs->trans(\"Failed\").'</td></tr>';\n\t\t\t\t\t\t$db->rollback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"Error\").'</td>';\n\t\t\t\tprint '<td class=\"right\"><div class=\"error\">'.$db->lasterror().'</div></td></tr>';\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Migrate categorie association\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_categorie_association($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationCategorieAssociation').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tif ($db->DDLInfoTable(MAIN_DB_PREFIX.\"categorie_association\")) {\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_categorie_association\");\n\n\t\t$db->begin();\n\n\t\t$sqlSelect = \"SELECT fk_categorie_mere, fk_categorie_fille\";\n\t\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"categorie_association\";\n\n\t\t$resql = $db->query($sqlSelect);\n\t\tif ($resql) {\n\t\t\t$i = 0;\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tif ($num) {\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"categorie SET \";\n\t\t\t\t\t$sqlUpdate .= \"fk_parent = \".((int) $obj->fk_categorie_mere);\n\t\t\t\t\t$sqlUpdate .= \" WHERE rowid = \".((int) $obj->fk_categorie_fille);\n\n\t\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t}\n\t\t\t\t\tprint \". \";\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t$db->commit();\n\t\t\t} else {\n\t\t\t\t$db->rollback();\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate event assignement to owner\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_event_assignement($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationEvents').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_event_assignement\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT a.id, a.fk_user_action\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"actioncomm as a\";\n\t$sqlSelect .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"actioncomm_resources as ar ON ar.fk_actioncomm = a.id AND ar.element_type = 'user' AND ar.fk_element = a.fk_user_action\";\n\t$sqlSelect .= \" WHERE fk_user_action > 0 AND fk_user_action NOT IN (SELECT fk_element FROM \".MAIN_DB_PREFIX.\"actioncomm_resources as ar WHERE ar.fk_actioncomm = a.id AND ar.element_type = 'user')\";\n\t$sqlSelect .= \" ORDER BY a.id\";\n\t//print $sqlSelect;\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sqlUpdate = \"INSERT INTO \".MAIN_DB_PREFIX.\"actioncomm_resources(fk_actioncomm, element_type, fk_element) \";\n\t\t\t\t$sqlUpdate .= \"VALUES(\".((int) $obj->id).\", 'user', \".((int) $obj->fk_user_action).\")\";\n\n\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\tif (!$result) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate event assignement to owner\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_event_assignement_contact($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationEventsContact').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_event_assignement\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT a.id, a.fk_contact\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"actioncomm as a\";\n\t$sqlSelect .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"actioncomm_resources as ar ON ar.fk_actioncomm = a.id AND ar.element_type = 'socpeople' AND ar.fk_element = a.fk_contact\";\n\t$sqlSelect .= \" WHERE fk_contact > 0 AND fk_contact NOT IN (SELECT fk_element FROM \".MAIN_DB_PREFIX.\"actioncomm_resources as ar WHERE ar.fk_actioncomm = a.id AND ar.element_type = 'socpeople')\";\n\t$sqlSelect .= \" ORDER BY a.id\";\n\t//print $sqlSelect;\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sqlUpdate = \"INSERT INTO \".MAIN_DB_PREFIX.\"actioncomm_resources(fk_actioncomm, element_type, fk_element) \";\n\t\t\t\t$sqlUpdate .= \"VALUES(\".((int) $obj->id).\", 'socpeople', \".((int) $obj->fk_contact).\")\";\n\n\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\tif (!$result) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\n\tprint '</td></tr>';\n}\n\n\n/**\n * Migrate to reset the blocked log for V7+ algorithm\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_reset_blocked_log($db, $langs, $conf)\n{\n\tglobal $user;\n\n\trequire_once DOL_DOCUMENT_ROOT.'/blockedlog/class/blockedlog.class.php';\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationResetBlockedLog').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_reset_blocked_log\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT DISTINCT entity\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"blockedlog\";\n\n\t//print $sqlSelect;\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\tprint 'Process entity '.$obj->entity;\n\n\t\t\t\t$sqlSearch = \"SELECT count(rowid) as nb FROM \".MAIN_DB_PREFIX.\"blockedlog WHERE action = 'MODULE_SET' and entity = \".((int) $obj->entity);\n\t\t\t\t$resqlSearch = $db->query($sqlSearch);\n\t\t\t\tif ($resqlSearch) {\n\t\t\t\t\t$objSearch = $db->fetch_object($resqlSearch);\n\t\t\t\t\t//var_dump($objSearch);\n\t\t\t\t\tif ($objSearch && $objSearch->nb == 0) {\n\t\t\t\t\t\tprint ' - Record for entity must be reset...';\n\n\t\t\t\t\t\t$sqlUpdate = \"DELETE FROM \".MAIN_DB_PREFIX.\"blockedlog\";\n\t\t\t\t\t\t$sqlUpdate .= \" WHERE entity = \".((int) $obj->entity);\n\t\t\t\t\t\t$resqlUpdate = $db->query($sqlUpdate);\n\t\t\t\t\t\tif (!$resqlUpdate) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Add set line\n\t\t\t\t\t\t\t$object = new stdClass();\n\t\t\t\t\t\t\t$object->id = 1;\n\t\t\t\t\t\t\t$object->element = 'module';\n\t\t\t\t\t\t\t$object->ref = 'systemevent';\n\t\t\t\t\t\t\t$object->entity = $obj->entity;\n\t\t\t\t\t\t\t$object->date = dol_now();\n\n\t\t\t\t\t\t\t$b = new BlockedLog($db);\n\t\t\t\t\t\t\t$b->setObjectData($object, 'MODULE_SET', 0);\n\n\t\t\t\t\t\t\t$res = $b->create($user);\n\t\t\t\t\t\t\tif ($res <= 0) {\n\t\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint ' - '.$langs->trans('AlreadyInV7').'<br>';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('NothingToDo').\"<br>\\n\";\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\tprint '</td></tr>';\n}\n\n\n/**\n * Migrate to add entity value into llx_societe_remise\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_remise_entity($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationRemiseEntity').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_remise_entity\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT sr.rowid, s.entity\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"societe_remise as sr, \".MAIN_DB_PREFIX.\"societe as s\";\n\t$sqlSelect .= \" WHERE sr.fk_soc = s.rowid and sr.entity != s.entity\";\n\n\t//print $sqlSelect;\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"societe_remise SET\";\n\t\t\t\t$sqlUpdate .= \" entity = \".$obj->entity;\n\t\t\t\t$sqlUpdate .= \" WHERE rowid = \".((int) $obj->rowid);\n\n\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\tif (!$result) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate to add entity value into llx_societe_remise_except\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_remise_except_entity($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<br>';\n\tprint '<b>'.$langs->trans('MigrationRemiseExceptEntity').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_remise_except_entity\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT sr.rowid, sr.fk_soc, sr.fk_facture_source, sr.fk_facture, sr.fk_facture_line\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"societe_remise_except as sr\";\n\t//print $sqlSelect;\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\tif (!empty($obj->fk_facture_source) || !empty($obj->fk_facture)) {\n\t\t\t\t\t$fk_facture = (!empty($obj->fk_facture_source) ? $obj->fk_facture_source : $obj->fk_facture);\n\n\t\t\t\t\t$sqlSelect2 = \"SELECT f.entity\";\n\t\t\t\t\t$sqlSelect2 .= \" FROM \".MAIN_DB_PREFIX.\"facture as f\";\n\t\t\t\t\t$sqlSelect2 .= \" WHERE f.rowid = \".((int) $fk_facture);\n\t\t\t\t} elseif (!empty($obj->fk_facture_line)) {\n\t\t\t\t\t$sqlSelect2 = \"SELECT f.entity\";\n\t\t\t\t\t$sqlSelect2 .= \" FROM \".MAIN_DB_PREFIX.\"facture as f, \".MAIN_DB_PREFIX.\"facturedet as fd\";\n\t\t\t\t\t$sqlSelect2 .= \" WHERE fd.rowid = \".((int) $obj->fk_facture_line);\n\t\t\t\t\t$sqlSelect2 .= \" AND fd.fk_facture = f.rowid\";\n\t\t\t\t} else {\n\t\t\t\t\t$sqlSelect2 = \"SELECT s.entity\";\n\t\t\t\t\t$sqlSelect2 .= \" FROM \".MAIN_DB_PREFIX.\"societe as s\";\n\t\t\t\t\t$sqlSelect2 .= \" WHERE s.rowid = \".((int) $obj->fk_soc);\n\t\t\t\t}\n\n\t\t\t\t$resql2 = $db->query($sqlSelect2);\n\t\t\t\tif ($resql2) {\n\t\t\t\t\tif ($db->num_rows($resql2) > 0) {\n\t\t\t\t\t\t$obj2 = $db->fetch_object($resql2);\n\n\t\t\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"societe_remise_except SET\";\n\t\t\t\t\t\t$sqlUpdate .= \" entity = \".((int) $obj2->entity);\n\t\t\t\t\t\t$sqlUpdate .= \" WHERE rowid = \".((int) $obj->rowid);\n\n\t\t\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate to add entity value into llx_user_rights\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_user_rights_entity($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<b>'.$langs->trans('MigrationUserRightsEntity').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_user_rights_entity\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT u.rowid, u.entity\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"user as u\";\n\t$sqlSelect .= \" WHERE u.entity > 1\";\n\t//print $sqlSelect;\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"user_rights SET\";\n\t\t\t\t$sqlUpdate .= \" entity = \".((int) $obj->entity);\n\t\t\t\t$sqlUpdate .= \" WHERE fk_user = \".((int) $obj->rowid);\n\n\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\tif (!$result) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate to add entity value into llx_usergroup_rights\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_usergroup_rights_entity($db, $langs, $conf)\n{\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<b>'.$langs->trans('MigrationUserGroupRightsEntity').\"</b><br>\\n\";\n\n\t$error = 0;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_usergroup_rights_entity\");\n\n\t$db->begin();\n\n\t$sqlSelect = \"SELECT u.rowid, u.entity\";\n\t$sqlSelect .= \" FROM \".MAIN_DB_PREFIX.\"usergroup as u\";\n\t$sqlSelect .= \" WHERE u.entity > 1\";\n\t//print $sqlSelect;\n\n\t$resql = $db->query($sqlSelect);\n\tif ($resql) {\n\t\t$i = 0;\n\t\t$num = $db->num_rows($resql);\n\n\t\tif ($num) {\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\t$sqlUpdate = \"UPDATE \".MAIN_DB_PREFIX.\"usergroup_rights SET\";\n\t\t\t\t$sqlUpdate .= \" entity = \".((int) $obj->entity);\n\t\t\t\t$sqlUpdate .= \" WHERE fk_usergroup = \".((int) $obj->rowid);\n\n\t\t\t\t$result = $db->query($sqlUpdate);\n\t\t\t\tif (!$result) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t}\n\n\t\t\t\tprint \". \";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint $langs->trans('AlreadyDone').\"<br>\\n\";\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$db->commit();\n\t\t} else {\n\t\t\t$db->rollback();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migration directory\n *\n * @param\tDoliDB\t\t$db\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\tObject langs\n * @param\tConf\t\t$conf\t\tObject conf\n * @param\tstring\t\t$oldname\tOld name (relative to DOL_DATA_ROOT)\n * @param\tstring\t\t$newname\tNew name (relative to DOL_DATA_ROOT)\n * @return\tvoid\n */\nfunction migrate_rename_directories($db, $langs, $conf, $oldname, $newname)\n{\n\tdolibarr_install_syslog(\"upgrade2::migrate_rename_directories\");\n\n\tif (is_dir(DOL_DATA_ROOT.$oldname) && !file_exists(DOL_DATA_ROOT.$newname)) {\n\t\tdolibarr_install_syslog(\"upgrade2::migrate_rename_directories move \".DOL_DATA_ROOT.$oldname.' into '.DOL_DATA_ROOT.$newname);\n\t\t@rename(DOL_DATA_ROOT.$oldname, DOL_DATA_ROOT.$newname);\n\t}\n}\n\n\n/**\n * Delete deprecated files\n *\n * @param\tDoliDB\t\t$db\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\tObject langs\n * @param\tConf\t\t$conf\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_delete_old_files($db, $langs, $conf)\n{\n\t$result = true;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_delete_old_files\");\n\n\t// List of files to delete\n\t$filetodeletearray = array(\n\t\t'/core/triggers/interface_demo.class.php',\n\t\t'/core/menus/barre_left/default.php',\n\t\t'/core/menus/barre_top/default.php',\n\t\t'/core/modules/modComptabiliteExpert.class.php',\n\t\t'/core/modules/modCommercial.class.php',\n\t\t'/core/modules/modProduit.class.php',\n\t\t'/core/modules/modSkype.class.php',\n\t\t'/phenix/inc/triggers/interface_modPhenix_Phenixsynchro.class.php',\n\t\t'/webcalendar/inc/triggers/interface_modWebcalendar_webcalsynchro.class.php',\n\t\t'/core/triggers/interface_modWebcalendar_Webcalsynchro.class.php',\n\t\t'/core/triggers/interface_modCommande_Ecotax.class.php',\n\t\t'/core/triggers/interface_modCommande_fraisport.class.php',\n\t\t'/core/triggers/interface_modPropale_PropalWorkflow.class.php',\n\t\t'/core/menus/smartphone/iphone.lib.php',\n\t\t'/core/menus/smartphone/iphone_backoffice.php',\n\t\t'/core/menus/smartphone/iphone_frontoffice.php',\n\t\t'/core/menus/standard/auguria_backoffice.php',\n\t\t'/core/menus/standard/auguria_frontoffice.php',\n\t\t'/core/menus/standard/eldy_backoffice.php',\n\t\t'/core/menus/standard/eldy_frontoffice.php',\n\t\t'/core/modules/mailings/contacts2.modules.php',\n\t\t'/core/modules/mailings/contacts3.modules.php',\n\t\t'/core/modules/mailings/contacts4.modules.php',\n\t\t'/core/modules/mailings/framboise.modules.php',\n\t\t'/core/modules/mailings/dolibarr_services_expired.modules.php',\n\t\t'/core/modules/mailings/peche.modules.php',\n\t\t'/core/modules/mailings/poire.modules.php',\n\t\t'/core/modules/mailings/kiwi.modules.php',\n\t\t'/core/modules/facture/pdf_crabe.modules.php',\n\t\t'/core/modules/facture/pdf_oursin.modules.php',\n\t\t'/core/modules/export/export_excel.modules.php',\n\t\t'/core/modules/export/export_excel2007new.modules.php',\n\n\t\t'/api/class/api_generic.class.php',\n\t\t'/categories/class/api_category.class.php',\n\t\t'/categories/class/api_deprecated_category.class.php',\n\t\t'/compta/facture/class/api_invoice.class.php',\n\t\t'/commande/class/api_commande.class.php',\n\t\t'/user/class/api_user.class.php',\n\t\t'/product/class/api_product.class.php',\n\t\t'/societe/class/api_contact.class.php',\n\t\t'/societe/class/api_thirdparty.class.php',\n\t\t'/support/online.php',\n\t\t'/takepos/class/actions_takepos.class.php',\n\n\t\t'/install/mysql/tables/llx_c_ticketsup_category.key.sql',\n\t\t'/install/mysql/tables/llx_c_ticketsup_category.sql',\n\t\t'/install/mysql/tables/llx_c_ticketsup_severity.key.sql',\n\t\t'/install/mysql/tables/llx_c_ticketsup_severity.sql',\n\t\t'/install/mysql/tables/llx_c_ticketsup_type.key.sql',\n\t\t'/install/mysql/tables/llx_c_ticketsup_type.sql'\n\t);\n\n\tforeach ($filetodeletearray as $filetodelete) {\n\t\t//print '<b>'DOL_DOCUMENT_ROOT.$filetodelete.\"</b><br>\\n\";\n\t\t$result = 1;\n\t\tif (file_exists(DOL_DOCUMENT_ROOT.$filetodelete)) {\n\t\t\t$result = dol_delete_file(DOL_DOCUMENT_ROOT.$filetodelete, 0, 0, 0, null, true, false);\n\t\t\tif (!$result) {\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tprint '<div class=\"error\">'.$langs->trans(\"Error\").': '.$langs->trans(\"ErrorFailToDeleteFile\", DOL_DOCUMENT_ROOT.$filetodelete);\n\t\t\t\tprint ' '.$langs->trans(\"RemoveItManuallyAndPressF5ToContinue\").'</div>';\n\t\t\t} else {\n\t\t\t\t//print $langs->trans(\"FileWasRemoved\", $filetodelete).'<br>';\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n\n/**\n * Remove deprecated directories\n *\n * @param\tDoliDB\t\t$db\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\tObject langs\n * @param\tConf\t\t$conf\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_delete_old_dir($db, $langs, $conf)\n{\n\t$result = true;\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_delete_old_dir\");\n\n\t// List of files to delete\n\t$filetodeletearray = array(\n\t\tDOL_DOCUMENT_ROOT.'/core/modules/facture/terre',\n\t\tDOL_DOCUMENT_ROOT.'/core/modules/facture/mercure',\n\t);\n\n\t// On linux, we can also removed old directory with a different case than new directory.\n\tif (!empty($_SERVER[\"WINDIR\"])) {\n\t\t$filetodeletearray[] = DOL_DOCUMENT_ROOT.'/includes/phpoffice/PhpSpreadsheet';\n\t}\n\n\tforeach ($filetodeletearray as $filetodelete) {\n\t\t//print '<b>'.$filetodelete.\"</b><br>\\n\";\n\t\tif (file_exists($filetodelete)) {\n\t\t\t$result = dol_delete_dir_recursive($filetodelete);\n\t\t}\n\t\tif (!$result) {\n\t\t\t$langs->load(\"errors\");\n\t\t\tprint '<div class=\"error\">'.$langs->trans(\"Error\").': '.$langs->trans(\"ErrorFailToDeleteDir\", $filetodelete);\n\t\t\tprint ' '.$langs->trans(\"RemoveItManuallyAndPressF5ToContinue\").'</div>';\n\t\t}\n\t}\n\treturn $result;\n}\n\n\n/**\n * Disable/Reenable features modules.\n * We must do this when internal menu of module or permissions has changed\n * or when triggers have moved.\n *\n * @param\tDoliDB\t\t$db\t\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\t\tObject langs\n * @param\tConf\t\t$conf\t\t\tObject conf\n * @param\tarray\t\t$listofmodule\tList of modules, like array('MODULE_KEY_NAME'=>', $reloadmode)\n * @param   int         $force          1=Reload module even if not already loaded\n * @return\tint\t\t\t\t\t\t\t<0 if KO, >0 if OK\n */\nfunction migrate_reload_modules($db, $langs, $conf, $listofmodule = array(), $force = 0)\n{\n\tif (count($listofmodule) == 0) {\n\t\treturn;\n\t}\n\n\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules force=\".$force.\", listofmodule=\".join(',', array_keys($listofmodule)));\n\n\tforeach ($listofmodule as $moduletoreload => $reloadmode) {\t// reloadmodule can be 'noboxes', 'newboxdefonly', 'forceactivate'\n\t\tif (empty($moduletoreload) || (empty($conf->global->$moduletoreload) && !$force)) {\n\t\t\tcontinue; // Discard reload if module not enabled\n\t\t}\n\n\t\t$mod = null;\n\n\t\tif ($moduletoreload == 'MAIN_MODULE_AGENDA') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Agenda module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modAgenda.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modAgenda($db);\n\t\t\t\t$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_API') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Rest API module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modApi.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modApi($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_BARCODE') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Barcode module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modBarcode.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modBarcode($db);\n\t\t\t\t$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_BLOCKEDLOG') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate BlockedLog module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modBlockedLog.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modBlockedLog($db);\n\t\t\t\t// For this module we only reload menus.\n\t\t\t\t$mod->delete_menus();\n\t\t\t\t$mod->insert_menus();\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_CRON') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Cron module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modCron.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modCron($db);\n\t\t\t\t$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_EXTERNALSITE') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate ExternalSite module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modExternalSite.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modExternalSite($db);\n\t\t\t\t$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_SOCIETE') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Societe module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modSociete.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modSociete($db);\n\t\t\t\t$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_PRODUIT') {    // Permission has changed into 2.7\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Produit module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modProduct.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modProduct($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_SERVICE') {   // Permission has changed into 2.7\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Service module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modService.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modService($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_COMMANDE') {   // Permission has changed into 2.9\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Commande module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modCommande.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modCommande($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_FACTURE') {    // Permission has changed into 2.9\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Facture module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modFacture.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modFacture($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_FOURNISSEUR') {    // Permission has changed into 2.9\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Fournisseur module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modFournisseur.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modFournisseur($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_HOLIDAY') {   // Permission and tabs has changed into 3.8\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Leave Request module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modHoliday.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modHoliday($db);\n\t\t\t\t$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_DEPLACEMENT') {   // Permission has changed into 3.0\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Deplacement module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modDeplacement.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modDeplacement($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_EXPENSEREPORT') {\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Expense Report module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modExpenseReport.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modExpenseReport($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_DON') {   // Permission has changed into 3.0\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Don module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modDon.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modDon($db);\n\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_ECM') {    // Permission has changed into 3.0 and 3.1\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate ECM module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modECM.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modECM($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because a permission id has been removed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_KNOWLEDGEMANAGEMENT') {    // Permission has changed into 3.0 and 3.1\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Knowledge Management\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modKnowledgeManagement.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modKnowledgeManagement($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because a permission id has been removed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_EVENTORGANIZATION') {    // Permission has changed into 3.0 and 3.1\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules EventOrganization\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modEventOrganization.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modEventOrganization($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because a permission id has been removed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_PAYBOX') {    // Permission has changed into 3.0\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Paybox module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modPaybox.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modPaybox($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because id of module has changed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_SUPPLIERPROPOSAL') {\t\t// Module after 3.5\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Supplier Proposal module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modSupplierProposal.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modSupplierProposal($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because id of module has changed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_OPENSURVEY') {   // Permission has changed into 3.0\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Opensurvey module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modOpenSurvey.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modOpenSurvey($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because menu entries has changed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_PRODUCTBATCH') {   // Permission has changed into 10.0\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules ProductBatch module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modProductBatch.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modProductBatch($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because menu entries has changed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} elseif ($moduletoreload == 'MAIN_MODULE_TAKEPOS') {   // Permission has changed into 10.0\n\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate Takepos module\");\n\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/modTakePos.class.php';\n\t\t\tif ($res) {\n\t\t\t\t$mod = new modTakePos($db);\n\t\t\t\t$mod->remove('noboxes'); // We need to remove because menu entries has changed\n\t\t\t\t$mod->init($reloadmode);\n\t\t\t}\n\t\t} else {\t// Other generic cases/modules\n\t\t\t$reg = array();\n\t\t\t$tmp = preg_match('/MAIN_MODULE_([a-zA-Z0-9]+)/', $moduletoreload, $reg);\n\t\t\tif (!empty($reg[1])) {\n\t\t\t\tif (strtoupper($moduletoreload) == $moduletoreload) {\t// If key is un uppercase\n\t\t\t\t\t$moduletoreloadshort = ucfirst(strtolower($reg[1]));\n\t\t\t\t} else // If key is a mix of up and low case\n\t\t\t\t{\n\t\t\t\t\t$moduletoreloadshort = $reg[1];\n\t\t\t\t}\n\n\t\t\t\tdolibarr_install_syslog(\"upgrade2::migrate_reload_modules Reactivate module \".$moduletoreloadshort.\" with mode \".$reloadmode);\n\t\t\t\t$res = @include_once DOL_DOCUMENT_ROOT.'/core/modules/mod'.$moduletoreloadshort.'.class.php';\n\t\t\t\tif ($res) {\n\t\t\t\t\t$classname = 'mod'.$moduletoreloadshort;\n\t\t\t\t\t$mod = new $classname($db);\n\n\t\t\t\t\t//$mod->remove('noboxes');\n\t\t\t\t\t$mod->delete_menus(); // We must delete to be sure it is inserted with new values\n\t\t\t\t\t$mod->init($reloadmode);\n\t\t\t\t} else {\n\t\t\t\t\tdolibarr_install_syslog('Failed to include '.DOL_DOCUMENT_ROOT.'/core/modules/mod'.$moduletoreloadshort.'.class.php');\n\n\t\t\t\t\t$res = @dol_include_once(strtolower($moduletoreloadshort).'/core/modules/mod'.$moduletoreloadshort.'.class.php');\n\t\t\t\t\tif ($res) {\n\t\t\t\t\t\t$classname = 'mod'.$moduletoreloadshort;\n\t\t\t\t\t\t$mod = new $classname($db);\n\t\t\t\t\t\t$mod->init($reloadmode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdolibarr_install_syslog('Failed to include '.strtolower($moduletoreloadshort).'/core/modules/mod'.$moduletoreloadshort.'.class.php', LOG_ERR);\n\t\t\t\t\t\tprint \"Error, can't find module with name \".$moduletoreload.\"\\n\";\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdolibarr_install_syslog(\"Error, can't find module with name \".$moduletoreload, LOG_ERR);\n\t\t\t\tprint \"Error, can't find module with name \".$moduletoreload.\"\\n\";\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($mod) && is_object($mod)) {\n\t\t\tprint '<tr class=\"trforrunsql\"><td colspan=\"4\">';\n\t\t\tprint '<b>'.$langs->trans('Upgrade').'</b>: ';\n\t\t\tprint $langs->trans('MigrationReloadModule').' '.$mod->getName(); // We keep getName outside of trans because getName is already encoded/translated\n\t\t\tprint \"<!-- (\".$reloadmode.\") -->\";\n\t\t\tprint \"<br>\\n\";\n\t\t\tprint '</td></tr>';\n\t\t}\n\t}\n\n\treturn 1;\n}\n\n\n\n/**\n * Reload SQL menu file (if dynamic menus, if modified by version)\n *\n * @param\tDoliDB\t\t$db\t\t\tDatabase handler\n * @param\tTranslate\t$langs\t\tObject langs\n * @param\tConf\t\t$conf\t\tObject conf\n * @return\tvoid\n */\nfunction migrate_reload_menu($db, $langs, $conf)\n{\n\tglobal $conf;\n\tdolibarr_install_syslog(\"upgrade2::migrate_reload_menu\");\n\n\t// Define list of menu handlers to initialize\n\t$listofmenuhandler = array();\n\tif ($conf->global->MAIN_MENU_STANDARD == 'auguria_menu' || $conf->global->MAIN_MENU_SMARTPHONE == 'auguria_menu'\n\t\t|| $conf->global->MAIN_MENUFRONT_STANDARD == 'auguria_menu' || $conf->global->MAIN_MENUFRONT_SMARTPHONE == 'auguria_menu') {\n\t\t$listofmenuhandler['auguria'] = 1; // We set here only dynamic menu handlers\n\t}\n\n\tforeach ($listofmenuhandler as $key => $val) {\n\t\tprint '<tr class=\"trforrunsql\"><td colspan=\"4\">';\n\n\t\t//print \"x\".$key;\n\t\tprint '<br>';\n\t\tprint '<b>'.$langs->trans('Upgrade').'</b>: '.$langs->trans('MenuHandler').\" \".$key.\"<br>\\n\";\n\n\t\t// Load sql ini_menu_handler.sql file\n\t\t$dir = DOL_DOCUMENT_ROOT.\"/core/menus/\";\n\t\t$file = 'init_menu_'.$key.'.sql';\n\t\tif (file_exists($dir.$file)) {\n\t\t\t$result = run_sql($dir.$file, 1, '', 1, $key);\n\t\t}\n\n\t\tprint '</td></tr>';\n\t}\n}\n\n/**\n * Migrate file from old path to new one for users\n *\n * @return\tvoid\n */\nfunction migrate_user_photospath()\n{\n\tglobal $conf, $db, $langs, $user;\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<b>'.$langs->trans('MigrationUserPhotoPath').\"</b><br>\\n\";\n\n\tinclude_once DOL_DOCUMENT_ROOT.'/user/class/user.class.php';\n\t$fuser = new User($db);\n\n\tif (!is_object($user)) {\n\t\t$user = $fuser; // To avoid error during migration\n\t}\n\n\t$sql = \"SELECT rowid as uid from \".MAIN_DB_PREFIX.\"user\"; // Get list of all users\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$fuser->fetch($obj->uid);\n\t\t\t//echo '<hr>'.$fuser->id.' -> '.$fuser->entity;\n\t\t\t$entity = (empty($fuser->entity) ? 1 : $fuser->entity);\n\t\t\tif ($entity > 1) {\n\t\t\t\t$dir = DOL_DATA_ROOT.'/'.$entity.'/users';\n\t\t\t} else {\n\t\t\t\t$dir = $conf->user->multidir_output[$entity]; // $conf->user->multidir_output[] for each entity is construct by the multicompany module\n\t\t\t}\n\n\t\t\tif ($dir) {\n\t\t\t\t//print \"Process user id \".$fuser->id.\"<br>\\n\";\n\t\t\t\t$origin = $dir.'/'.get_exdir($fuser->id, 2, 0, 1, $fuser, 'user'); // Use old behaviour to get x/y path\n\t\t\t\t$destin = $dir.'/'.$fuser->id;\n\n\t\t\t\t$origin_osencoded = dol_osencode($origin);\n\n\t\t\t\tdol_mkdir($destin);\n\n\t\t\t\t//echo '<hr>'.$origin.' -> '.$destin;\n\t\t\t\tif (dol_is_dir($origin)) {\n\t\t\t\t\t$handle = opendir($origin_osencoded);\n\t\t\t\t\tif (is_resource($handle)) {\n\t\t\t\t\t\twhile (($file = readdir($handle)) !== false) {\n\t\t\t\t\t\t\tif ($file == '.' || $file == '..') {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (dol_is_dir($origin.'/'.$file)) {\t// it is a dir (like 'thumbs')\n\t\t\t\t\t\t\t\t$thumbs = opendir($origin_osencoded.'/'.$file);\n\t\t\t\t\t\t\t\tif (is_resource($thumbs)) {\n\t\t\t\t\t\t\t\t\tdol_mkdir($destin.'/'.$file);\n\t\t\t\t\t\t\t\t\twhile (($thumb = readdir($thumbs)) !== false) {\n\t\t\t\t\t\t\t\t\t\tif (!dol_is_file($destin.'/'.$file.'/'.$thumb)) {\n\t\t\t\t\t\t\t\t\t\t\tif ($thumb == '.' || $thumb == '..') {\n\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t//print $origin.'/'.$file.'/'.$thumb.' -> '.$destin.'/'.$file.'/'.$thumb.'<br>'.\"\\n\";\n\t\t\t\t\t\t\t\t\t\t\tprint '.';\n\t\t\t\t\t\t\t\t\t\t\tdol_copy($origin.'/'.$file.'/'.$thumb, $destin.'/'.$file.'/'.$thumb, 0, 0);\n\t\t\t\t\t\t\t\t\t\t\t//var_dump('aaa');exit;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// dol_delete_dir($origin.'/'.$file);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else { // it is a file\n\t\t\t\t\t\t\t\tif (!dol_is_file($destin.'/'.$file)) {\n\t\t\t\t\t\t\t\t\t//print $origin.'/'.$file.' -> '.$destin.'/'.$file.'<br>'.\"\\n\";\n\t\t\t\t\t\t\t\t\tprint '.';\n\t\t\t\t\t\t\t\t\tdol_copy($origin.'/'.$file, $destin.'/'.$file, 0, 0);\n\t\t\t\t\t\t\t\t\t//var_dump('eee');exit;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate file from old path users/99/file.jpg into users/99/photos/file.jpg\n *\n * @return\tvoid\n */\nfunction migrate_user_photospath2()\n{\n\tglobal $conf, $db, $langs, $user;\n\n\tprint '<tr><td colspan=\"4\">';\n\n\tprint '<b>'.$langs->trans('MigrationUserPhotoPath').\"</b><br>\\n\";\n\n\tinclude_once DOL_DOCUMENT_ROOT.'/user/class/user.class.php';\n\t$fuser = new User($db);\n\n\tif (!is_object($user)) {\n\t\t$user = $fuser; // To avoid error during migration\n\t}\n\n\t$sql = \"SELECT rowid as uid from \".MAIN_DB_PREFIX.\"user\"; // Get list of all users\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$fuser->fetch($obj->uid);\n\t\t\t//echo '<hr>'.$fuser->id.' -> '.$fuser->entity;\n\t\t\t$entity = (empty($fuser->entity) ? 1 : $fuser->entity);\n\t\t\tif ($entity > 1) {\n\t\t\t\t$dir = DOL_DATA_ROOT.'/'.$entity.'/users';\n\t\t\t} else {\n\t\t\t\t$dir = $conf->user->multidir_output[$entity]; // $conf->user->multidir_output[] for each entity is construct by the multicompany module\n\t\t\t}\n\n\t\t\tif ($dir) {\n\t\t\t\t//print \"Process user id \".$fuser->id.\"<br>\\n\";\n\t\t\t\t$origin = $dir.'/'.$fuser->id;\n\t\t\t\t$destin = $dir.'/'.$fuser->id.'/photos';\n\n\t\t\t\t$origin_osencoded = dol_osencode($origin);\n\n\t\t\t\tdol_mkdir($destin);\n\n\t\t\t\t//echo '<hr>'.$origin.' -> '.$destin;\n\t\t\t\tif (dol_is_dir($origin)) {\n\t\t\t\t\t$handle = opendir($origin_osencoded);\n\t\t\t\t\tif (is_resource($handle)) {\n\t\t\t\t\t\twhile (($file = readdir($handle)) !== false) {\n\t\t\t\t\t\t\tif ($file == '.' || $file == '..' || $file == 'photos') {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!empty($fuser->photo) && ($file != $fuser->photo && $file != 'thumbs')) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (dol_is_dir($origin.'/'.$file)) {\t// it is a dir (like 'thumbs')\n\t\t\t\t\t\t\t\t$thumbs = opendir($origin_osencoded.'/'.$file);\n\t\t\t\t\t\t\t\tif (is_resource($thumbs)) {\n\t\t\t\t\t\t\t\t\tdol_mkdir($destin.'/'.$file);\n\t\t\t\t\t\t\t\t\twhile (($thumb = readdir($thumbs)) !== false) {\n\t\t\t\t\t\t\t\t\t\tif (!dol_is_file($destin.'/'.$file.'/'.$thumb)) {\n\t\t\t\t\t\t\t\t\t\t\tif ($thumb == '.' || $thumb == '..') {\n\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t//print $origin.'/'.$file.'/'.$thumb.' -> '.$destin.'/'.$file.'/'.$thumb.'<br>'.\"\\n\";\n\t\t\t\t\t\t\t\t\t\t\tprint '.';\n\t\t\t\t\t\t\t\t\t\t\tdol_copy($origin.'/'.$file.'/'.$thumb, $destin.'/'.$file.'/'.$thumb, 0, 0);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// dol_delete_dir($origin.'/'.$file);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else { // it is a file\n\t\t\t\t\t\t\t\tif (!dol_is_file($destin.'/'.$file)) {\n\t\t\t\t\t\t\t\t\t//print $origin.'/'.$file.' -> '.$destin.'/'.$file.'<br>'.\"\\n\";\n\t\t\t\t\t\t\t\t\tprint '.';\n\t\t\t\t\t\t\t\t\tdol_copy($origin.'/'.$file, $destin.'/'.$file, 0, 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprint '</td></tr>';\n}\n\n\n/* A faire egalement: Modif statut paye et fk_facture des factures payes completement\n\nOn recherche facture incorrecte:\nselect f.rowid, f.total_ttc as t1, sum(pf.amount) as t2 from llx_facture as f, llx_paiement_facture as pf where pf.fk_facture=f.rowid and f.fk_statut in(2,3) and paye=0 and close_code is null group by f.rowid\nhaving  f.total_ttc = sum(pf.amount)\n\nOn les corrige:\nupdate llx_facture set paye=1, fk_statut=2 where close_code is null\nand rowid in (...)\n*/\n\n/**\n * Migrate users fields facebook and co to socialnetworks.\n * Can be called only when version is 10.0.* or lower. Fields does not exists after.\n *\n * @return  void\n */\nfunction migrate_users_socialnetworks()\n{\n\tglobal $db, $langs;\n\t// skype,twitter,facebook,linkedin,instagram,snapchat,googleplus,youtube,whatsapp\n\t$error = 0;\n\t$db->begin();\n\tprint '<tr><td colspan=\"4\">';\n\t$sql = 'SELECT rowid, socialnetworks';\n\t$sql .= ', skype, twitter, facebook, linkedin, instagram, snapchat, googleplus, youtube, whatsapp FROM '.MAIN_DB_PREFIX.'user WHERE';\n\t$sql .= \" skype IS NOT NULL OR skype <> ''\";\n\t$sql .= \" OR twitter IS NOT NULL OR twitter <> ''\";\n\t$sql .= \" OR facebook IS NOT NULL OR facebook <> ''\";\n\t$sql .= \" OR linkedin IS NOT NULL OR linkedin <> ''\";\n\t$sql .= \" OR instagram IS NOT NULL OR instagram <> ''\";\n\t$sql .= \" OR snapchat IS NOT NULL OR snapchat <> ''\";\n\t$sql .= \" OR googleplus IS NOT NULL OR googleplus <> ''\";\n\t$sql .= \" OR youtube IS NOT NULL OR youtube <> ''\";\n\t$sql .= \" OR whatsapp IS NOT NULL OR whatsapp <> ''\";\n\t//print $sql;\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$arraysocialnetworks = array();\n\t\t\tif (!empty($obj->skype)) {\n\t\t\t\t$arraysocialnetworks['skype'] = $obj->skype;\n\t\t\t}\n\t\t\tif (!empty($obj->twitter)) {\n\t\t\t\t$arraysocialnetworks['twitter'] = $obj->twitter;\n\t\t\t}\n\t\t\tif (!empty($obj->facebook)) {\n\t\t\t\t$arraysocialnetworks['facebook'] = $obj->facebook;\n\t\t\t}\n\t\t\tif (!empty($obj->linkedin)) {\n\t\t\t\t$arraysocialnetworks['linkedin'] = $obj->linkedin;\n\t\t\t}\n\t\t\tif (!empty($obj->instagram)) {\n\t\t\t\t$arraysocialnetworks['instagram'] = $obj->instagram;\n\t\t\t}\n\t\t\tif (!empty($obj->snapchat)) {\n\t\t\t\t$arraysocialnetworks['snapchat'] = $obj->snapchat;\n\t\t\t}\n\t\t\tif (!empty($obj->googleplus)) {\n\t\t\t\t$arraysocialnetworks['googleplus'] = $obj->googleplus;\n\t\t\t}\n\t\t\tif (!empty($obj->youtube)) {\n\t\t\t\t$arraysocialnetworks['youtube'] = $obj->youtube;\n\t\t\t}\n\t\t\tif (!empty($obj->whatsapp)) {\n\t\t\t\t$arraysocialnetworks['whatsapp'] = $obj->whatsapp;\n\t\t\t}\n\t\t\tif ($obj->socialnetworks == '' || is_null($obj->socialnetworks)) {\n\t\t\t\t$obj->socialnetworks = '[]';\n\t\t\t}\n\t\t\t$socialnetworks = array_merge($arraysocialnetworks, json_decode($obj->socialnetworks, true));\n\t\t\t$sqlupd = 'UPDATE '.MAIN_DB_PREFIX.\"user SET socialnetworks='\".$db->escape(json_encode($socialnetworks, true)).\"'\";\n\t\t\t$sqlupd .= ', skype=null';\n\t\t\t$sqlupd .= ', twitter=null';\n\t\t\t$sqlupd .= ', facebook=null';\n\t\t\t$sqlupd .= ', linkedin=null';\n\t\t\t$sqlupd .= ', instagram=null';\n\t\t\t$sqlupd .= ', snapchat=null';\n\t\t\t$sqlupd .= ', googleplus=null';\n\t\t\t$sqlupd .= ', youtube=null';\n\t\t\t$sqlupd .= ', whatsapp=null';\n\t\t\t$sqlupd .= ' WHERE rowid = '.((int) $obj->rowid);\n\t\t\t//print $sqlupd.\"<br>\";\n\t\t\t$resqlupd = $db->query($sqlupd);\n\t\t\tif (!$resqlupd) {\n\t\t\t\tdol_print_error($db);\n\t\t\t\t$error++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$error++;\n\t}\n\tif (!$error) {\n\t\t$db->commit();\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\tprint '<b>'.$langs->trans('MigrationFieldsSocialNetworks', 'Users').\"</b><br>\\n\";\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate members fields facebook and co to socialnetworks\n * Can be called only when version is 10.0.* or lower. Fields does not exists after.\n *\n * @return  void\n */\nfunction migrate_members_socialnetworks()\n{\n\tglobal $db, $langs;\n\n\tprint '<tr><td colspan=\"4\">';\n\t$error = 0;\n\t$db->begin();\n\tprint '<tr><td colspan=\"4\">';\n\t$sql = 'SELECT rowid, socialnetworks';\n\t$sql .= ', skype, twitter, facebook, linkedin, instagram, snapchat, googleplus, youtube, whatsapp FROM '.MAIN_DB_PREFIX.'adherent WHERE ';\n\t$sql .= \" skype IS NOT NULL OR skype <> ''\";\n\t$sql .= \" OR twitter IS NOT NULL OR twitter <> ''\";\n\t$sql .= \" OR facebook IS NOT NULL OR facebook <> ''\";\n\t$sql .= \" OR linkedin IS NOT NULL OR linkedin <> ''\";\n\t$sql .= \" OR instagram IS NOT NULL OR instagram <> ''\";\n\t$sql .= \" OR snapchat IS NOT NULL OR snapchat <> ''\";\n\t$sql .= \" OR googleplus IS NOT NULL OR googleplus <> ''\";\n\t$sql .= \" OR youtube IS NOT NULL OR youtube <> ''\";\n\t$sql .= \" OR whatsapp IS NOT NULL OR whatsapp <> ''\";\n\t//print $sql;\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$arraysocialnetworks = array();\n\t\t\tif (!empty($obj->skype)) {\n\t\t\t\t$arraysocialnetworks['skype'] = $obj->skype;\n\t\t\t}\n\t\t\tif (!empty($obj->twitter)) {\n\t\t\t\t$arraysocialnetworks['twitter'] = $obj->twitter;\n\t\t\t}\n\t\t\tif (!empty($obj->facebook)) {\n\t\t\t\t$arraysocialnetworks['facebook'] = $obj->facebook;\n\t\t\t}\n\t\t\tif (!empty($obj->linkedin)) {\n\t\t\t\t$arraysocialnetworks['linkedin'] = $obj->linkedin;\n\t\t\t}\n\t\t\tif (!empty($obj->instagram)) {\n\t\t\t\t$arraysocialnetworks['instagram'] = $obj->instagram;\n\t\t\t}\n\t\t\tif (!empty($obj->snapchat)) {\n\t\t\t\t$arraysocialnetworks['snapchat'] = $obj->snapchat;\n\t\t\t}\n\t\t\tif (!empty($obj->googleplus)) {\n\t\t\t\t$arraysocialnetworks['googleplus'] = $obj->googleplus;\n\t\t\t}\n\t\t\tif (!empty($obj->youtube)) {\n\t\t\t\t$arraysocialnetworks['youtube'] = $obj->youtube;\n\t\t\t}\n\t\t\tif (!empty($obj->whatsapp)) {\n\t\t\t\t$arraysocialnetworks['whatsapp'] = $obj->whatsapp;\n\t\t\t}\n\t\t\tif ($obj->socialnetworks == '' || is_null($obj->socialnetworks)) {\n\t\t\t\t$obj->socialnetworks = '[]';\n\t\t\t}\n\t\t\t$socialnetworks = array_merge($arraysocialnetworks, json_decode($obj->socialnetworks, true));\n\t\t\t$sqlupd = 'UPDATE '.MAIN_DB_PREFIX.\"adherent SET socialnetworks='\".$db->escape(json_encode($socialnetworks, true)).\"'\";\n\t\t\t$sqlupd .= ', skype=null';\n\t\t\t$sqlupd .= ', twitter=null';\n\t\t\t$sqlupd .= ', facebook=null';\n\t\t\t$sqlupd .= ', linkedin=null';\n\t\t\t$sqlupd .= ', instagram=null';\n\t\t\t$sqlupd .= ', snapchat=null';\n\t\t\t$sqlupd .= ', googleplus=null';\n\t\t\t$sqlupd .= ', youtube=null';\n\t\t\t$sqlupd .= ', whatsapp=null';\n\t\t\t$sqlupd .= ' WHERE rowid = '.((int) $obj->rowid);\n\t\t\t//print $sqlupd.\"<br>\";\n\t\t\t$resqlupd = $db->query($sqlupd);\n\t\t\tif (!$resqlupd) {\n\t\t\t\tdol_print_error($db);\n\t\t\t\t$error++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$error++;\n\t}\n\tif (!$error) {\n\t\t$db->commit();\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\tprint '<b>'.$langs->trans('MigrationFieldsSocialNetworks', 'Members').\"</b><br>\\n\";\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate contacts fields facebook and co to socialnetworks\n * Can be called only when version is 10.0.* or lower. Fields does not exists after.\n *\n * @return  void\n */\nfunction migrate_contacts_socialnetworks()\n{\n\tglobal $db, $langs;\n\t// jabberid,skype,twitter,facebook,linkedin,instagram,snapchat,googleplus,youtube,whatsapp\n\t$error = 0;\n\t$db->begin();\n\tprint '<tr><td colspan=\"4\">';\n\t$sql = 'SELECT rowid, socialnetworks';\n\t$sql .= ', jabberid, skype, twitter, facebook, linkedin, instagram, snapchat, googleplus, youtube, whatsapp FROM '.MAIN_DB_PREFIX.'socpeople WHERE';\n\t$sql .= \" jabberid IS NOT NULL OR jabberid <> ''\";\n\t$sql .= \" OR skype IS NOT NULL OR skype <> ''\";\n\t$sql .= \" OR twitter IS NOT NULL OR twitter <> ''\";\n\t$sql .= \" OR facebook IS NOT NULL OR facebook <> ''\";\n\t$sql .= \" OR linkedin IS NOT NULL OR linkedin <> ''\";\n\t$sql .= \" OR instagram IS NOT NULL OR instagram <> ''\";\n\t$sql .= \" OR snapchat IS NOT NULL OR snapchat <> ''\";\n\t$sql .= \" OR googleplus IS NOT NULL OR googleplus <> ''\";\n\t$sql .= \" OR youtube IS NOT NULL OR youtube <> ''\";\n\t$sql .= \" OR whatsapp IS NOT NULL OR whatsapp <> ''\";\n\t//print $sql;\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$arraysocialnetworks = array();\n\t\t\tif (!empty($obj->jabberid)) {\n\t\t\t\t$arraysocialnetworks['jabber'] = $obj->jabberid;\n\t\t\t}\n\t\t\tif (!empty($obj->skype)) {\n\t\t\t\t$arraysocialnetworks['skype'] = $obj->skype;\n\t\t\t}\n\t\t\tif (!empty($obj->twitter)) {\n\t\t\t\t$arraysocialnetworks['twitter'] = $obj->twitter;\n\t\t\t}\n\t\t\tif (!empty($obj->facebook)) {\n\t\t\t\t$arraysocialnetworks['facebook'] = $obj->facebook;\n\t\t\t}\n\t\t\tif (!empty($obj->linkedin)) {\n\t\t\t\t$arraysocialnetworks['linkedin'] = $obj->linkedin;\n\t\t\t}\n\t\t\tif (!empty($obj->instagram)) {\n\t\t\t\t$arraysocialnetworks['instagram'] = $obj->instagram;\n\t\t\t}\n\t\t\tif (!empty($obj->snapchat)) {\n\t\t\t\t$arraysocialnetworks['snapchat'] = $obj->snapchat;\n\t\t\t}\n\t\t\tif (!empty($obj->googleplus)) {\n\t\t\t\t$arraysocialnetworks['googleplus'] = $obj->googleplus;\n\t\t\t}\n\t\t\tif (!empty($obj->youtube)) {\n\t\t\t\t$arraysocialnetworks['youtube'] = $obj->youtube;\n\t\t\t}\n\t\t\tif (!empty($obj->whatsapp)) {\n\t\t\t\t$arraysocialnetworks['whatsapp'] = $obj->whatsapp;\n\t\t\t}\n\t\t\tif ($obj->socialnetworks == '' || is_null($obj->socialnetworks)) {\n\t\t\t\t$obj->socialnetworks = '[]';\n\t\t\t}\n\t\t\t$socialnetworks = array_merge($arraysocialnetworks, json_decode($obj->socialnetworks, true));\n\t\t\t$sqlupd = 'UPDATE '.MAIN_DB_PREFIX.\"socpeople SET socialnetworks='\".$db->escape(json_encode($socialnetworks, true)).\"'\";\n\t\t\t$sqlupd .= ', jabberid=null';\n\t\t\t$sqlupd .= ', skype=null';\n\t\t\t$sqlupd .= ', twitter=null';\n\t\t\t$sqlupd .= ', facebook=null';\n\t\t\t$sqlupd .= ', linkedin=null';\n\t\t\t$sqlupd .= ', instagram=null';\n\t\t\t$sqlupd .= ', snapchat=null';\n\t\t\t$sqlupd .= ', googleplus=null';\n\t\t\t$sqlupd .= ', youtube=null';\n\t\t\t$sqlupd .= ', whatsapp=null';\n\t\t\t$sqlupd .= ' WHERE rowid = '.((int) $obj->rowid);\n\t\t\t//print $sqlupd.\"<br>\";\n\t\t\t$resqlupd = $db->query($sqlupd);\n\t\t\tif (!$resqlupd) {\n\t\t\t\tdol_print_error($db);\n\t\t\t\t$error++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$error++;\n\t}\n\tif (!$error) {\n\t\t$db->commit();\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\tprint '<b>'.$langs->trans('MigrationFieldsSocialNetworks', 'Contacts').\"</b><br>\\n\";\n\tprint '</td></tr>';\n}\n\n/**\n * Migrate thirdparties fields facebook and co to socialnetworks\n * Can be called only when version is 10.0.* or lower. Fields does not exists after.\n *\n * @return  void\n */\nfunction migrate_thirdparties_socialnetworks()\n{\n\tglobal $db, $langs;\n\t// skype,twitter,facebook,linkedin,instagram,snapchat,googleplus,youtube,whatsapp\n\t$error = 0;\n\t$db->begin();\n\tprint '<tr><td colspan=\"4\">';\n\t$sql = 'SELECT rowid, socialnetworks';\n\t$sql .= ', skype, twitter, facebook, linkedin, instagram, snapchat, googleplus, youtube, whatsapp FROM '.MAIN_DB_PREFIX.'societe WHERE ';\n\t$sql .= \" skype IS NOT NULL OR skype <> ''\";\n\t$sql .= \" OR twitter IS NOT NULL OR twitter <> ''\";\n\t$sql .= \" OR facebook IS NOT NULL OR facebook <> ''\";\n\t$sql .= \" OR linkedin IS NOT NULL OR linkedin <> ''\";\n\t$sql .= \" OR instagram IS NOT NULL OR instagram <> ''\";\n\t$sql .= \" OR snapchat IS NOT NULL OR snapchat <> ''\";\n\t$sql .= \" OR googleplus IS NOT NULL OR googleplus <> ''\";\n\t$sql .= \" OR youtube IS NOT NULL OR youtube <> ''\";\n\t$sql .= \" OR whatsapp IS NOT NULL OR whatsapp <> ''\";\n\t//print $sql;\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$arraysocialnetworks = array();\n\t\t\tif (!empty($obj->skype)) {\n\t\t\t\t$arraysocialnetworks['skype'] = $obj->skype;\n\t\t\t}\n\t\t\tif (!empty($obj->twitter)) {\n\t\t\t\t$arraysocialnetworks['twitter'] = $obj->twitter;\n\t\t\t}\n\t\t\tif (!empty($obj->facebook)) {\n\t\t\t\t$arraysocialnetworks['facebook'] = $obj->facebook;\n\t\t\t}\n\t\t\tif (!empty($obj->linkedin)) {\n\t\t\t\t$arraysocialnetworks['linkedin'] = $obj->linkedin;\n\t\t\t}\n\t\t\tif (!empty($obj->instagram)) {\n\t\t\t\t$arraysocialnetworks['instagram'] = $obj->instagram;\n\t\t\t}\n\t\t\tif (!empty($obj->snapchat)) {\n\t\t\t\t$arraysocialnetworks['snapchat'] = $obj->snapchat;\n\t\t\t}\n\t\t\tif (!empty($obj->googleplus)) {\n\t\t\t\t$arraysocialnetworks['googleplus'] = $obj->googleplus;\n\t\t\t}\n\t\t\tif (!empty($obj->youtube)) {\n\t\t\t\t$arraysocialnetworks['youtube'] = $obj->youtube;\n\t\t\t}\n\t\t\tif (!empty($obj->whatsapp)) {\n\t\t\t\t$arraysocialnetworks['whatsapp'] = $obj->whatsapp;\n\t\t\t}\n\t\t\tif ($obj->socialnetworks == '' || is_null($obj->socialnetworks)) {\n\t\t\t\t$obj->socialnetworks = '[]';\n\t\t\t}\n\t\t\t$socialnetworks = array_merge($arraysocialnetworks, json_decode($obj->socialnetworks, true));\n\t\t\t$sqlupd = 'UPDATE '.MAIN_DB_PREFIX.\"societe SET socialnetworks='\".$db->escape(json_encode($socialnetworks, true)).\"'\";\n\t\t\t$sqlupd .= ', skype=null';\n\t\t\t$sqlupd .= ', twitter=null';\n\t\t\t$sqlupd .= ', facebook=null';\n\t\t\t$sqlupd .= ', linkedin=null';\n\t\t\t$sqlupd .= ', instagram=null';\n\t\t\t$sqlupd .= ', snapchat=null';\n\t\t\t$sqlupd .= ', googleplus=null';\n\t\t\t$sqlupd .= ', youtube=null';\n\t\t\t$sqlupd .= ', whatsapp=null';\n\t\t\t$sqlupd .= ' WHERE rowid = '.((int) $obj->rowid);\n\t\t\t//print $sqlupd.\"<br>\";\n\t\t\t$resqlupd = $db->query($sqlupd);\n\t\t\tif (!$resqlupd) {\n\t\t\t\tdol_print_error($db);\n\t\t\t\t$error++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$error++;\n\t}\n\tif (!$error) {\n\t\t$db->commit();\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\tprint '<b>'.$langs->trans('MigrationFieldsSocialNetworks', 'Thirdparties').\"</b><br>\\n\";\n\tprint '</td></tr>';\n}\n\n\n/**\n * Migrate export and import profiles to fix field name that was renamed\n *\n * @param\tstring\t\t$mode\t\t'export' or 'import'\n * @return  void\n */\nfunction migrate_export_import_profiles($mode = 'export')\n{\n\tglobal $db, $langs;\n\n\t$error = 0;\n\t$resultstring = '';\n\n\t$db->begin();\n\n\tprint '<tr class=\"trforrunsql\"><td colspan=\"4\">';\n\t$sql = 'SELECT rowid, field';\n\tif ($mode == 'export') {\n\t\t$sql .= ', filter';\n\t}\n\t$sql .= ' FROM '.MAIN_DB_PREFIX.$mode.'_model WHERE';\n\t$sql .= \" type LIKE 'propale_%' OR type LIKE 'commande_%' OR type LIKE 'facture_%'\";\n\t//print $sql;\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$oldfield = $obj->field;\n\t\t\t$newfield = str_replace(array(',f.facnumber', 'f.facnumber,', 'f.total,', 'f.tva,'), array(',f.ref', 'f.ref,', 'f.total_ht,', 'f.total_tva,'), $oldfield);\n\n\t\t\tif ($mode == 'export') {\n\t\t\t\t$oldfilter = $obj->filter;\n\t\t\t\t$newfilter = str_replace(array('f.facnumber=', 'f.total=', 'f.tva='), array('f.ref=', 'f.total_ht=', 'f.total_tva='), $oldfilter);\n\t\t\t} else {\n\t\t\t\t$oldfilter = '';\n\t\t\t\t$newfilter = '';\n\t\t\t}\n\n\t\t\tif ($oldfield != $newfield || $oldfilter != $newfilter) {\n\t\t\t\t$sqlupd = 'UPDATE '.MAIN_DB_PREFIX.$mode.\"_model SET field = '\".$db->escape($newfield).\"'\";\n\t\t\t\tif ($mode == 'export') {\n\t\t\t\t\t$sqlupd .= \", filter = '\".$db->escape($newfilter).\"'\";\n\t\t\t\t}\n\t\t\t\t$sqlupd .= ' WHERE rowid = '.((int) $obj->rowid);\n\t\t\t\t$resultstring .= '<tr class=\"trforrunsql\" style=\"\"><td class=\"wordbreak\" colspan=\"4\">'.$sqlupd.\"</td></tr>\\n\";\n\t\t\t\t$resqlupd = $db->query($sqlupd);\n\t\t\t\tif (!$resqlupd) {\n\t\t\t\t\tdol_print_error($db);\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$error++;\n\t}\n\tif (!$error) {\n\t\t$db->commit();\n\t} else {\n\t\tdol_print_error($db);\n\t\t$db->rollback();\n\t}\n\tprint '<b>'.$langs->trans('MigrationImportOrExportProfiles', $mode).\"</b><br>\\n\";\n\tprint '</td></tr>';\n\n\tif ($resultstring) {\n\t\tprint $resultstring;\n\t} else {\n\t\tprint '<tr class=\"trforrunsql\" style=\"\"><td class=\"wordbreak\" colspan=\"4\">'.$langs->trans(\"NothingToDo\").\"</td></tr>\\n\";\n\t}\n}\n", "<?php\n/* Copyright (C) 2002-2006 Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2002-2003 Jean-Louis Bergamo   <jlb@j1b.org>\n * Copyright (C) 2004-2020 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2004      Eric Seigne          <eric.seigne@ryxeo.com>\n * Copyright (C) 2005-2021 Regis Houssin        <regis.houssin@inodbox.com>\n * Copyright (C) 2005      Lionel Cousteix      <etm_ltd@tiscali.co.uk>\n * Copyright (C) 2011      Herve Prot           <herve.prot@symeos.com>\n * Copyright (C) 2012-2018 Juanjo Menent        <jmenent@2byte.es>\n * Copyright (C) 2013      Florian Henry        <florian.henry@open-concept.pro>\n * Copyright (C) 2013-2016 Alexandre Spangaro   <aspangaro@open-dsi.fr>\n * Copyright (C) 2015-2017 Jean-Fran\u00e7ois Ferry  <jfefe@aternatik.fr>\n * Copyright (C) 2015      Ari Elbaz (elarifr)  <github@accedinfo.com>\n * Copyright (C) 2015-2018 Charlene Benke       <charlie@patas-monkey.com>\n * Copyright (C) 2016      Rapha\u00ebl Doursenaud   <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2018-2021  Fr\u00e9d\u00e9ric France     <frederic.france@netlogic.fr>\n * Copyright (C) 2018       David Beniamine     <David.Beniamine@Tetras-Libre.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *       \\file       htdocs/user/card.php\n *       \\brief      Tab of user card\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/user/class/user.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/user/class/usergroup.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formfile.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/images.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/usergroups.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/extrafields.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formother.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/security2.lib.php';\nif (!empty($conf->ldap->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/ldap.class.php';\n}\nif (!empty($conf->adherent->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\n}\nif (!empty($conf->categorie->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n}\nif (!empty($conf->stock->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/product/class/html.formproduct.class.php';\n}\n\n$id = GETPOST('id', 'int');\n$action\t\t= GETPOST('action', 'aZ09');\n$mode = GETPOST('mode', 'alpha');\n$confirm\t= GETPOST('confirm', 'alpha');\n$group = GETPOST(\"group\", \"int\", 3);\n$cancel\t\t= GETPOST('cancel', 'alpha');\n$contextpage = GETPOST('contextpage', 'aZ') ?GETPOST('contextpage', 'aZ') : 'useracard'; // To manage different context of search\n\n$dateemployment = dol_mktime(0, 0, 0, GETPOST('dateemploymentmonth', 'int'), GETPOST('dateemploymentday', 'int'), GETPOST('dateemploymentyear', 'int'));\n$dateemploymentend = dol_mktime(0, 0, 0, GETPOST('dateemploymentendmonth', 'int'), GETPOST('dateemploymentendday', 'int'), GETPOST('dateemploymentendyear', 'int'));\n$datestartvalidity = dol_mktime(0, 0, 0, GETPOST('datestartvaliditymonth', 'int'), GETPOST('datestartvalidityday', 'int'), GETPOST('datestartvalidityyear', 'int'));\n$dateendvalidity = dol_mktime(0, 0, 0, GETPOST('dateendvaliditymonth', 'int'), GETPOST('dateendvalidityday', 'int'), GETPOST('dateendvalidityyear', 'int'));\n$dateofbirth = dol_mktime(0, 0, 0, GETPOST('dateofbirthmonth', 'int'), GETPOST('dateofbirthday', 'int'), GETPOST('dateofbirthyear', 'int'));\n\n// Define value to know what current user can do on users\n$canadduser = (!empty($user->admin) || $user->rights->user->user->creer);\n$canreaduser = (!empty($user->admin) || $user->rights->user->user->lire);\n$canedituser = (!empty($user->admin) || $user->rights->user->user->creer);\n$candisableuser = (!empty($user->admin) || $user->rights->user->user->supprimer);\n$canreadgroup = $canreaduser;\n$caneditgroup = $canedituser;\nif (!empty($conf->global->MAIN_USE_ADVANCED_PERMS)) {\n\t$canreadgroup = (!empty($user->admin) || $user->rights->user->group_advance->read);\n\t$caneditgroup = (!empty($user->admin) || $user->rights->user->group_advance->write);\n}\n\n$childids = $user->getAllChildIds(1);\t// For later, test on salary visibility\n\n// Define value to know what current user can do on properties of edited user\nif ($id > 0) {\n\t// $user is the current logged user, $id is the user we want to edit\n\t$caneditfield = ((($user->id == $id) && $user->rights->user->self->creer) || (($user->id != $id) && $user->rights->user->user->creer));\n\t$caneditpassword = ((($user->id == $id) && $user->rights->user->self->password) || (($user->id != $id) && $user->rights->user->user->password));\n}\n\n// Security check\n$socid = 0;\nif ($user->socid > 0) {\n\t$socid = $user->socid;\n}\n$feature2 = 'user';\n$result = restrictedArea($user, 'user', $id, 'user', $feature2);\n\nif ($user->id != $id && !$canreaduser) {\n\taccessforbidden();\n}\n\n// Load translation files required by page\n$langs->loadLangs(array('users', 'companies', 'ldap', 'admin', 'hrm', 'stocks', 'other'));\n\n$object = new User($db);\n$extrafields = new ExtraFields($db);\n\n// fetch optionals attributes and labels\n$extrafields->fetch_name_optionals_label($object->table_element);\n\n$socialnetworks = getArrayOfSocialNetworks();\n\n// Initialize technical object to manage hooks. Note that conf->hooks_modules contains array\n$hookmanager->initHooks(array('usercard', 'globalcard'));\n\n$error = 0;\n\n\n/**\n * Actions\n */\n\n$parameters = array('id' => $id, 'socid' => $socid, 'group' => $group, 'caneditgroup' => $caneditgroup);\n$reshook = $hookmanager->executeHooks('doActions', $parameters, $object, $action); // Note that $action and $object may have been modified by some hooks\nif ($reshook < 0) {\n\tsetEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n}\n\nif (empty($reshook)) {\n\t$backurlforlist = DOL_URL_ROOT.'/user/list.php';\n\n\tif (empty($backtopage) || ($cancel && empty($id))) {\n\t\tif (empty($backtopage) || ($cancel && strpos($backtopage, '__ID__'))) {\n\t\t\tif (empty($id) && (($action != 'add' && $action != 'create') || $cancel)) {\n\t\t\t\t$backtopage = $backurlforlist;\n\t\t\t} else {\n\t\t\t\t$backtopage = DOL_URL_ROOT.'/user/card.php?id='.((!empty($id) && $id > 0) ? $id : '__ID__');\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($cancel) {\n\t\tif (!empty($backtopageforcancel)) {\n\t\t\theader(\"Location: \".$backtopageforcancel);\n\t\t\texit;\n\t\t} elseif (!empty($backtopage)) {\n\t\t\theader(\"Location: \".$backtopage);\n\t\t\texit;\n\t\t}\n\t\t$action = '';\n\t}\n\n\tif ($action == 'confirm_disable' && $confirm == \"yes\" && $candisableuser) {\n\t\tif ($id != $user->id) {\t\t// A user can't disable itself\n\t\t\t$object->fetch($id);\n\t\t\tif ($object->admin && empty($user->admin)) {\n\t\t\t\t// If user to delete is an admin user and if logged user is not admin, we deny the operation.\n\t\t\t\t$error++;\n\t\t\t\tsetEventMessages($langs->trans(\"OnlyAdminUsersCanDisableAdminUsers\"), null, 'errors');\n\t\t\t} else {\n\t\t\t\t$object->setstatus(0);\n\t\t\t\theader(\"Location: \".$_SERVER['PHP_SELF'].'?id='.$id);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($action == 'confirm_enable' && $confirm == \"yes\" && $candisableuser) {\n\t\t$error = 0;\n\n\t\tif ($id != $user->id) {\n\t\t\t$object->fetch($id);\n\n\t\t\tif (!empty($conf->file->main_limit_users)) {\n\t\t\t\t$nb = $object->getNbOfUsers(\"active\");\n\t\t\t\tif ($nb >= $conf->file->main_limit_users) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tsetEventMessages($langs->trans(\"YourQuotaOfUsersIsReached\"), null, 'errors');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t$object->setstatus(1);\n\t\t\t\theader(\"Location: \".$_SERVER['PHP_SELF'].'?id='.$id);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($action == 'confirm_delete' && $confirm == \"yes\" && $candisableuser) {\n\t\tif ($id != $user->id) {\n\t\t\tif (!GETPOSTISSET('token')) {\n\t\t\t\tprint 'Error, token required for this critical operation';\n\t\t\t\texit;\n\t\t\t}\n\n\t\t\t$object = new User($db);\n\t\t\t$object->fetch($id);\n\t\t\t$object->oldcopy = clone $object;\n\n\t\t\t$result = $object->delete($user);\n\t\t\tif ($result < 0) {\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tsetEventMessages($langs->trans(\"ErrorUserCannotBeDelete\"), null, 'errors');\n\t\t\t} else {\n\t\t\t\tsetEventMessages($langs->trans(\"RecordDeleted\"), null);\n\t\t\t\theader(\"Location: \".DOL_URL_ROOT.\"/user/list.php?restore_lastsearch_values=1\");\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Action Add user\n\tif ($action == 'add' && $canadduser) {\n\t\t$error = 0;\n\n\t\tif (!GETPOST(\"lastname\")) {\n\t\t\t$error++;\n\t\t\tsetEventMessages($langs->trans(\"NameNotDefined\"), null, 'errors');\n\t\t\t$action = \"create\"; // Go back to create page\n\t\t}\n\t\tif (!GETPOST(\"login\")) {\n\t\t\t$error++;\n\t\t\tsetEventMessages($langs->trans(\"LoginNotDefined\"), null, 'errors');\n\t\t\t$action = \"create\"; // Go back to create page\n\t\t}\n\n\t\tif (!empty($conf->file->main_limit_users)) { // If option to limit users is set\n\t\t\t$nb = $object->getNbOfUsers(\"active\");\n\t\t\tif ($nb >= $conf->file->main_limit_users) {\n\t\t\t\t$error++;\n\t\t\t\tsetEventMessages($langs->trans(\"YourQuotaOfUsersIsReached\"), null, 'errors');\n\t\t\t\t$action = \"create\"; // Go back to create page\n\t\t\t}\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$object->civility_code = GETPOST(\"civility_code\", 'aZ09');\n\t\t\t$object->lastname = GETPOST(\"lastname\", 'alphanohtml');\n\t\t\t$object->firstname = GETPOST(\"firstname\", 'alphanohtml');\n\t\t\t$object->login = GETPOST(\"login\", 'alphanohtml');\n\t\t\t$object->api_key = GETPOST(\"api_key\", 'alphanohtml');\n\t\t\t$object->gender = GETPOST(\"gender\", 'aZ09');\n\t\t\t$object->admin = GETPOST(\"admin\", 'int');\n\t\t\t$object->address = GETPOST('address', 'alphanohtml');\n\t\t\t$object->zip = GETPOST('zipcode', 'alphanohtml');\n\t\t\t$object->town = GETPOST('town', 'alphanohtml');\n\t\t\t$object->country_id = GETPOST('country_id', 'int');\n\t\t\t$object->state_id = GETPOST('state_id', 'int');\n\t\t\t$object->office_phone = GETPOST(\"office_phone\", 'alphanohtml');\n\t\t\t$object->office_fax = GETPOST(\"office_fax\", 'alphanohtml');\n\t\t\t$object->user_mobile = GETPOST(\"user_mobile\", 'alphanohtml');\n\n\t\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\t\t$object->socialnetworks = array();\n\t\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\t\tif (GETPOST($key, 'alphanohtml')) {\n\t\t\t\t\t\t$object->socialnetworks[$key] = GETPOST($key, 'alphanohtml');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$object->email = preg_replace('/\\s+/', '', GETPOST(\"email\", 'alphanohtml'));\n\t\t\t$object->job = GETPOST(\"job\", 'alphanohtml');\n\t\t\t$object->signature = GETPOST(\"signature\", 'restricthtml');\n\t\t\t$object->accountancy_code = GETPOST(\"accountancy_code\", 'alphanohtml');\n\t\t\t$object->note = GETPOST(\"note\", 'restricthtml');\n\t\t\t$object->note_private = GETPOST(\"note\", 'restricthtml');\n\t\t\t$object->ldap_sid = GETPOST(\"ldap_sid\", 'alphanohtml');\n\t\t\t$object->fk_user = GETPOST(\"fk_user\", 'int') > 0 ? GETPOST(\"fk_user\", 'int') : 0;\n\t\t\t$object->fk_user_expense_validator = GETPOST(\"fk_user_expense_validator\", 'int') > 0 ? GETPOST(\"fk_user_expense_validator\", 'int') : 0;\n\t\t\t$object->fk_user_holiday_validator = GETPOST(\"fk_user_holiday_validator\", 'int') > 0 ? GETPOST(\"fk_user_holiday_validator\", 'int') : 0;\n\t\t\t$object->employee = GETPOST('employee', 'alphanohtml');\n\n\t\t\t$object->thm = GETPOST(\"thm\", 'alphanohtml') != '' ? GETPOST(\"thm\", 'alphanohtml') : '';\n\t\t\t$object->thm = price2num($object->thm);\n\t\t\t$object->tjm = GETPOST(\"tjm\", 'alphanohtml') != '' ? GETPOST(\"tjm\", 'alphanohtml') : '';\n\t\t\t$object->tjm = price2num($object->tjm);\n\t\t\t$object->salary = GETPOST(\"salary\", 'alphanohtml') != '' ? GETPOST(\"salary\", 'alphanohtml') : '';\n\t\t\t$object->salary = price2num($object->salary);\n\t\t\t$object->salaryextra = GETPOST(\"salaryextra\", 'alphanohtml') != '' ? GETPOST(\"salaryextra\", 'alphanohtml') : '';\n\t\t\t$object->weeklyhours = GETPOST(\"weeklyhours\", 'alphanohtml') != '' ? GETPOST(\"weeklyhours\", 'alphanohtml') : '';\n\n\t\t\t$object->color = GETPOST(\"color\", 'alphanohtml') != '' ? GETPOST(\"color\", 'alphanohtml') : '';\n\n\t\t\t$object->dateemployment = $dateemployment;\n\t\t\t$object->dateemploymentend = $dateemploymentend;\n\t\t\t$object->datestartvalidity = $datestartvalidity;\n\t\t\t$object->dateendvalidity = $dateendvalidity;\n\t\t\t$object->birth = $dateofbirth;\n\n\t\t\t$object->fk_warehouse = GETPOST('fk_warehouse', 'int');\n\n\t\t\t$object->lang = GETPOST('default_lang', 'aZ09');\n\n\t\t\t// Fill array 'array_options' with data from add form\n\t\t\t$ret = $extrafields->setOptionalsFromPost(null, $object);\n\t\t\tif ($ret < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\n\t\t\t// Set entity property\n\t\t\t$entity = GETPOST('entity', 'int');\n\t\t\tif (!empty($conf->multicompany->enabled)) {\n\t\t\t\tif (GETPOST('superadmin', 'int')) {\n\t\t\t\t\t$object->entity = 0;\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE)) {\n\t\t\t\t\t\t$object->entity = 1; // all users are forced into master entity\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$object->entity = ($entity == '' ? 1 : $entity);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$object->entity = ($entity == '' ? 1 : $entity);\n\t\t\t\t/*if ($user->admin && $user->entity == 0 && GETPOST(\"admin\",'alpha'))\n\t\t\t\t{\n\t\t\t\t}*/\n\t\t\t}\n\n\t\t\t$db->begin();\n\n\t\t\t$id = $object->create($user);\n\t\t\tif ($id > 0) {\n\t\t\t\tif (GETPOST('password', 'none')) {\n\t\t\t\t\t$object->setPassword($user, GETPOST('password', 'none'));\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->categorie->enabled)) {\n\t\t\t\t\t// Categories association\n\t\t\t\t\t$usercats = GETPOST('usercats', 'array');\n\t\t\t\t\t$object->setCategories($usercats);\n\t\t\t\t}\n\t\t\t\t$db->commit();\n\n\t\t\t\theader(\"Location: \".$_SERVER['PHP_SELF'].'?id='.$id);\n\t\t\t\texit;\n\t\t\t} else {\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t$db->rollback();\n\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t$action = \"create\"; // Go back to create page\n\t\t\t}\n\t\t}\n\t}\n\n\t// Action add usergroup\n\tif (($action == 'addgroup' || $action == 'removegroup') && $caneditgroup) {\n\t\tif ($group) {\n\t\t\t$editgroup = new UserGroup($db);\n\t\t\t$editgroup->fetch($group);\n\t\t\t$editgroup->oldcopy = clone $editgroup;\n\n\t\t\t$object->fetch($id);\n\t\t\tif ($action == 'addgroup') {\n\t\t\t\t$result = $object->SetInGroup($group, $editgroup->entity);\n\t\t\t}\n\t\t\tif ($action == 'removegroup') {\n\t\t\t\t$result = $object->RemoveFromGroup($group, $editgroup->entity);\n\t\t\t}\n\n\t\t\tif ($result > 0) {\n\t\t\t\t$action = '';\n\t\t\t} else {\n\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($action == 'update' && !$cancel) {\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t\tif ($caneditfield) {    // Case we can edit all field\n\t\t\t$error = 0;\n\n\t\t\tif (!GETPOST(\"lastname\", 'alpha')) {\n\t\t\t\tsetEventMessages($langs->trans(\"NameNotDefined\"), null, 'errors');\n\t\t\t\t$action = \"edit\"; // Go back to create page\n\t\t\t\t$error++;\n\t\t\t}\n\t\t\tif (!GETPOST(\"login\", 'alpha')) {\n\t\t\t\tsetEventMessages($langs->trans(\"LoginNotDefined\"), null, 'errors');\n\t\t\t\t$action = \"edit\"; // Go back to create page\n\t\t\t\t$error++;\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t$object->fetch($id);\n\n\t\t\t\t$object->oldcopy = clone $object;\n\n\t\t\t\t$db->begin();\n\n\t\t\t\t$object->civility_code = GETPOST(\"civility_code\", 'aZ09');\n\t\t\t\t$object->lastname = GETPOST(\"lastname\", 'alphanohtml');\n\t\t\t\t$object->firstname = GETPOST(\"firstname\", 'alphanohtml');\n\t\t\t\t$object->login = GETPOST(\"login\", 'alphanohtml');\n\t\t\t\t$object->gender = GETPOST(\"gender\", 'aZ09');\n\t\t\t\t$object->pass = GETPOST(\"password\", 'none');\t// We can keep 'none' for password fields\n\t\t\t\t$object->api_key = (GETPOST(\"api_key\", 'alphanohtml')) ? GETPOST(\"api_key\", 'alphanohtml') : $object->api_key;\n\t\t\t\tif (!empty($user->admin)) {\n\t\t\t\t\t$object->admin = GETPOST(\"admin\", \"int\"); // admin flag can only be set/unset by an admin user. A test is also done later when forging sql request\n\t\t\t\t}\n\t\t\t\t$object->address = GETPOST('address', 'alphanohtml');\n\t\t\t\t$object->zip = GETPOST('zipcode', 'alphanohtml');\n\t\t\t\t$object->town = GETPOST('town', 'alphanohtml');\n\t\t\t\t$object->country_id = GETPOST('country_id', 'int');\n\t\t\t\t$object->state_id = GETPOST('state_id', 'int');\n\t\t\t\t$object->office_phone = GETPOST(\"office_phone\", 'alphanohtml');\n\t\t\t\t$object->office_fax = GETPOST(\"office_fax\", 'alphanohtml');\n\t\t\t\t$object->user_mobile = GETPOST(\"user_mobile\", 'alphanohtml');\n\n\t\t\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\t\t\t$object->socialnetworks = array();\n\t\t\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\t\t\tif (GETPOST($key, 'alphanohtml')) {\n\t\t\t\t\t\t\t$object->socialnetworks[$key] = GETPOST($key, 'alphanohtml');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$object->email = preg_replace('/\\s+/', '', GETPOST(\"email\", 'alphanohtml'));\n\t\t\t\t$object->job = GETPOST(\"job\", 'alphanohtml');\n\t\t\t\t$object->signature = GETPOST(\"signature\", 'restricthtml');\n\t\t\t\t$object->accountancy_code = GETPOST(\"accountancy_code\", 'alphanohtml');\n\t\t\t\t$object->openid = GETPOST(\"openid\", 'alphanohtml');\n\t\t\t\t$object->fk_user = GETPOST(\"fk_user\", 'int') > 0 ? GETPOST(\"fk_user\", 'int') : 0;\n\t\t\t\t$object->fk_user_expense_validator = GETPOST(\"fk_user_expense_validator\", 'int') > 0 ? GETPOST(\"fk_user_expense_validator\", 'int') : 0;\n\t\t\t\t$object->fk_user_holiday_validator = GETPOST(\"fk_user_holiday_validator\", 'int') > 0 ? GETPOST(\"fk_user_holiday_validator\", 'int') : 0;\n\t\t\t\t$object->employee = GETPOST('employee', 'int');\n\n\t\t\t\t$object->thm = GETPOST(\"thm\", 'alphanohtml') != '' ? GETPOST(\"thm\", 'alphanohtml') : '';\n\t\t\t\t$object->thm = price2num($object->thm);\n\t\t\t\t$object->tjm = GETPOST(\"tjm\", 'alphanohtml') != '' ? GETPOST(\"tjm\", 'alphanohtml') : '';\n\t\t\t\t$object->thm = price2num($object->thm);\n\t\t\t\t$object->salary = GETPOST(\"salary\", 'alphanohtml') != '' ? GETPOST(\"salary\", 'alphanohtml') : '';\n\t\t\t\t$object->salary = price2num($object->salary);\n\t\t\t\t$object->salaryextra = GETPOST(\"salaryextra\", 'alphanohtml') != '' ? GETPOST(\"salaryextra\", 'alphanohtml') : '';\n\t\t\t\t$object->salaryextra = price2num($object->salaryextra);\n\t\t\t\t$object->weeklyhours = GETPOST(\"weeklyhours\", 'alphanohtml') != '' ? GETPOST(\"weeklyhours\", 'alphanohtml') : '';\n\t\t\t\t$object->weeklyhours = price2num($object->weeklyhours);\n\n\t\t\t\t$object->color = GETPOST(\"color\", 'alphanohtml') != '' ? GETPOST(\"color\", 'alphanohtml') : '';\n\t\t\t\t$object->dateemployment = $dateemployment;\n\t\t\t\t$object->dateemploymentend = $dateemploymentend;\n\t\t\t\t$object->datestartvalidity = $datestartvalidity;\n\t\t\t\t$object->dateendvalidity = $dateendvalidity;\n\t\t\t\t$object->birth = $dateofbirth;\n\n\t\t\t\tif (!empty($conf->stock->enabled)) {\n\t\t\t\t\t$object->fk_warehouse = GETPOST('fk_warehouse', 'int');\n\t\t\t\t}\n\n\t\t\t\t$object->lang = GETPOST('default_lang', 'aZ09');\n\n\t\t\t\t// Do we update also ->entity ?\n\t\t\t\tif (!empty($conf->multicompany->enabled && $user->entity == 0 && !empty($user->admin))) {\t// If multicompany is not enabled, we never update the entity of a user.\n\t\t\t\t\tif (GETPOST('superadmin', 'int')) {\n\t\t\t\t\t\t$object->entity = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE)) {\n\t\t\t\t\t\t\t$object->entity = 1; // all users are in master entity\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// We try to change the entity of user\n\t\t\t\t\t\t\t$object->entity = (GETPOSTISSET('entity') ? GETPOSTINT('entity') : $object->entity);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Fill array 'array_options' with data from add form\n\t\t\t\t$ret = $extrafields->setOptionalsFromPost(null, $object, '@GETPOSTISSET');\n\t\t\t\tif ($ret < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\n\t\t\t\tif (GETPOST('deletephoto')) {\n\t\t\t\t\t$object->photo = '';\n\t\t\t\t}\n\t\t\t\tif (!empty($_FILES['photo']['name'])) {\n\t\t\t\t\t$isimage = image_format_supported($_FILES['photo']['name']);\n\t\t\t\t\tif ($isimage > 0) {\n\t\t\t\t\t\t$object->photo = dol_sanitizeFileName($_FILES['photo']['name']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorBadImageFormat\"), null, 'errors');\n\t\t\t\t\t\tdol_syslog($langs->transnoentities(\"ErrorBadImageFormat\"), LOG_INFO);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\t$ret = $object->update($user);\n\t\t\t\t\tif ($ret < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tif ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n\t\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorLoginAlreadyExists\", $object->login), null, 'errors');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t\t\t$action = 'edit';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error && GETPOSTISSET('contactid')) {\n\t\t\t\t\t$contactid = GETPOST('contactid', 'int');\n\t\t\t\t\t$socid = GETPOST('socid', 'int');\n\n\t\t\t\t\tif ($contactid > 0) {\t// The 'contactid' is used inpriority over the 'socid'\n\t\t\t\t\t\t$contact = new Contact($db);\n\t\t\t\t\t\t$contact->fetch($contactid);\n\n\t\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"user\";\n\t\t\t\t\t\t$sql .= \" SET fk_socpeople=\".((int) $contactid);\n\t\t\t\t\t\tif (!empty($contact->socid)) {\n\t\t\t\t\t\t\t$sql .= \", fk_soc=\".((int) $contact->socid);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $object->id);\n\t\t\t\t\t} elseif ($socid > 0) {\n\t\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"user\";\n\t\t\t\t\t\t$sql .= \" SET fk_socpeople=NULL, fk_soc=\".((int) $socid);\n\t\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $object->id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"user\";\n\t\t\t\t\t\t$sql .= \" SET fk_socpeople=NULL, fk_soc=NULL\";\n\t\t\t\t\t\t$sql .= \" WHERE rowid = \".((int) $object->id);\n\t\t\t\t\t}\n\t\t\t\t\tdol_syslog(\"usercard::update\", LOG_DEBUG);\n\t\t\t\t\t$resql = $db->query($sql);\n\t\t\t\t\tif (!$resql) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tsetEventMessages($db->lasterror(), null, 'errors');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error && !count($object->errors)) {\n\t\t\t\t\tif (GETPOST('deletephoto') && $object->oldcopy->photo) {\n\t\t\t\t\t\t$fileimg = $conf->user->dir_output.'/'.get_exdir(0, 0, 0, 0, $object, 'user').'photos/'.$object->oldcopy->photo;\n\t\t\t\t\t\t$dirthumbs = $conf->user->dir_output.'/'.get_exdir(0, 0, 0, 0, $object, 'user').'photos/thumbs';\n\t\t\t\t\t\tdol_delete_file($fileimg);\n\t\t\t\t\t\tdol_delete_dir_recursive($dirthumbs);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($_FILES['photo']['tmp_name']) && trim($_FILES['photo']['tmp_name'])) {\n\t\t\t\t\t\t$dir = $conf->user->dir_output.'/'.get_exdir(0, 0, 0, 1, $object, 'user').'/photos';\n\n\t\t\t\t\t\tdol_mkdir($dir);\n\n\t\t\t\t\t\tif (@is_dir($dir)) {\n\t\t\t\t\t\t\t$newfile = $dir.'/'.dol_sanitizeFileName($_FILES['photo']['name']);\n\t\t\t\t\t\t\t$result = dol_move_uploaded_file($_FILES['photo']['tmp_name'], $newfile, 1, 0, $_FILES['photo']['error']);\n\n\t\t\t\t\t\t\tif (!$result > 0) {\n\t\t\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorFailedToSaveFile\"), null, 'errors');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Create thumbs\n\t\t\t\t\t\t\t\t$object->addThumbs($newfile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorFailedToCreateDir\", $dir), $mesgs, 'errors');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error && !count($object->errors)) {\n\t\t\t\t\t// Then we add the associated categories\n\t\t\t\t\t$categories = GETPOST('usercats', 'array');\n\t\t\t\t\t$object->setCategories($categories);\n\t\t\t\t}\n\n\t\t\t\tif (!$error && !count($object->errors)) {\n\t\t\t\t\tsetEventMessages($langs->trans(\"UserModified\"), null, 'mesgs');\n\t\t\t\t\t$db->commit();\n\n\t\t\t\t\t$login = $_SESSION[\"dol_login\"];\n\t\t\t\t\tif ($login && $login == $object->oldcopy->login && $object->oldcopy->login != $object->login) {    // Current user has changed its login\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\tsetEventMessages($langs->transnoentitiesnoconv(\"WarningYourLoginWasModifiedPleaseLogin\"), null, 'warnings');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif ($caneditpassword) {    // Case we can edit only password\n\t\t\t\tdol_syslog(\"Not allowed to change fields, only password\");\n\n\t\t\t\t$object->fetch($id);\n\n\t\t\t\tif (GETPOST(\"password\", \"none\")) {\t// If pass is empty, we do not change it.\n\t\t\t\t\t$object->oldcopy = clone $object;\n\n\t\t\t\t\t$ret = $object->setPassword($user, GETPOST(\"password\", \"none\"));\n\t\t\t\t\tif ($ret < 0) {\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Change password with a new generated one\n\tif ((($action == 'confirm_password' && $confirm == 'yes')\n\t\t\t|| ($action == 'confirm_passwordsend' && $confirm == 'yes')) && $caneditpassword\n\t) {\n\t\t$object->fetch($id);\n\n\t\t$newpassword = $object->setPassword($user, '');\t// This will generate a new password\n\t\tif ($newpassword < 0) {\n\t\t\t// Echec\n\t\t\tsetEventMessages($langs->trans(\"ErrorFailedToSetNewPassword\"), null, 'errors');\n\t\t} else {\n\t\t\t// Succes\n\t\t\tif ($action == 'confirm_passwordsend' && $confirm == 'yes') {\n\t\t\t\tif ($object->send_password($user, $newpassword) > 0) {\n\t\t\t\t\tsetEventMessages($langs->trans(\"PasswordChangedAndSentTo\", $object->email), null, 'mesgs');\n\t\t\t\t} else {\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetEventMessages($langs->trans(\"PasswordChangedTo\", $newpassword), null, 'warnings');\n\t\t\t}\n\t\t}\n\t}\n\n\t// Action initialisation donnees depuis record LDAP\n\tif ($action == 'adduserldap' && $canadduser) {\n\t\t$selecteduser = GETPOST('users');\n\n\t\t$required_fields = array(\n\t\t\t$conf->global->LDAP_KEY_USERS,\n\t\t\t$conf->global->LDAP_FIELD_NAME,\n\t\t\t$conf->global->LDAP_FIELD_FIRSTNAME,\n\t\t\t$conf->global->LDAP_FIELD_LOGIN,\n\t\t\t$conf->global->LDAP_FIELD_LOGIN_SAMBA,\n\t\t\t$conf->global->LDAP_FIELD_PASSWORD,\n\t\t\t$conf->global->LDAP_FIELD_PASSWORD_CRYPTED,\n\t\t\t$conf->global->LDAP_FIELD_PHONE,\n\t\t\t$conf->global->LDAP_FIELD_FAX,\n\t\t\t$conf->global->LDAP_FIELD_MOBILE,\n\t\t\t$conf->global->LDAP_FIELD_SKYPE,\n\t\t\t$conf->global->LDAP_FIELD_MAIL,\n\t\t\t$conf->global->LDAP_FIELD_TITLE,\n\t\t\t$conf->global->LDAP_FIELD_DESCRIPTION,\n\t\t\t$conf->global->LDAP_FIELD_SID\n\t\t);\n\n\t\t$ldap = new Ldap();\n\t\t$result = $ldap->connect_bind();\n\t\tif ($result >= 0) {\n\t\t\t// Remove from required_fields all entries not configured in LDAP (empty) and duplicated\n\t\t\t$required_fields = array_unique(array_values(array_filter($required_fields, \"dol_validElement\")));\n\n\t\t\t$ldapusers = $ldap->getRecords($selecteduser, $conf->global->LDAP_USER_DN, $conf->global->LDAP_KEY_USERS, $required_fields);\n\t\t\t//print_r($ldapusers);\n\n\t\t\tif (is_array($ldapusers)) {\n\t\t\t\tforeach ($ldapusers as $key => $attribute) {\n\t\t\t\t\t$ldap_lastname = $attribute[$conf->global->LDAP_FIELD_NAME];\n\t\t\t\t\t$ldap_firstname = $attribute[$conf->global->LDAP_FIELD_FIRSTNAME];\n\t\t\t\t\t$ldap_login = $attribute[$conf->global->LDAP_FIELD_LOGIN];\n\t\t\t\t\t$ldap_loginsmb = $attribute[$conf->global->LDAP_FIELD_LOGIN_SAMBA];\n\t\t\t\t\t$ldap_pass = $attribute[$conf->global->LDAP_FIELD_PASSWORD];\n\t\t\t\t\t$ldap_pass_crypted = $attribute[$conf->global->LDAP_FIELD_PASSWORD_CRYPTED];\n\t\t\t\t\t$ldap_phone = $attribute[$conf->global->LDAP_FIELD_PHONE];\n\t\t\t\t\t$ldap_fax = $attribute[$conf->global->LDAP_FIELD_FAX];\n\t\t\t\t\t$ldap_mobile = $attribute[$conf->global->LDAP_FIELD_MOBILE];\n\t\t\t\t\t$ldap_social['skype'] = $attribute[$conf->global->LDAP_FIELD_SKYPE];\n\t\t\t\t\t$ldap_social['twitter'] = $attribute[$conf->global->LDAP_FIELD_TWITTER];\n\t\t\t\t\t$ldap_social['facebook'] = $attribute[$conf->global->LDAP_FIELD_FACEBOOK];\n\t\t\t\t\t$ldap_social['linkedin'] = $attribute[$conf->global->LDAP_FIELD_LINKEDIN];\n\t\t\t\t\t$ldap_mail = $attribute[$conf->global->LDAP_FIELD_MAIL];\n\t\t\t\t\t$ldap_sid = $attribute[$conf->global->LDAP_FIELD_SID];\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tsetEventMessages($ldap->error, $ldap->errors, 'errors');\n\t\t}\n\t}\n\n\t// Actions to send emails\n\t$triggersendname = 'USER_SENTBYMAIL';\n\t$paramname = 'id'; // Name of param key to open the card\n\t$mode = 'emailfromuser';\n\t$trackid = 'use'.$id;\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_sendmails.inc.php';\n\n\t// Actions to build doc\n\t$upload_dir = $conf->user->dir_output;\n\t$permissiontoadd = $user->rights->user->user->creer;\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_builddoc.inc.php';\n}\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formother = new FormOther($db);\n$formcompany = new FormCompany($db);\n$formadmin = new FormAdmin($db);\n$formfile = new FormFile($db);\nif (!empty($conf->stock->enabled)) {\n\t$formproduct = new FormProduct($db);\n}\n\nllxHeader('', $langs->trans(\"UserCard\"));\n\nif ($action == 'create' || $action == 'adduserldap') {\n\tprint load_fiche_titre($langs->trans(\"NewUser\"), '', 'user');\n\n\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"CreateInternalUserDesc\").\"</span><br>\\n\";\n\tprint \"<br>\";\n\n\n\tif (!empty($conf->ldap->enabled) && (isset($conf->global->LDAP_SYNCHRO_ACTIVE) && getDolGlobalInt('LDAP_SYNCHRO_ACTIVE') === Ldap::SYNCHRO_LDAP_TO_DOLIBARR)) {\n\t\t// Show form to add an account from LDAP if sync LDAP -> Dolibarr is set\n\t\t$ldap = new Ldap();\n\t\t$result = $ldap->connect_bind();\n\t\tif ($result >= 0) {\n\t\t\t$required_fields = array(\n\t\t\t\t$conf->global->LDAP_KEY_USERS,\n\t\t\t\t$conf->global->LDAP_FIELD_FULLNAME,\n\t\t\t\t$conf->global->LDAP_FIELD_NAME,\n\t\t\t\t$conf->global->LDAP_FIELD_FIRSTNAME,\n\t\t\t\t$conf->global->LDAP_FIELD_LOGIN,\n\t\t\t\t$conf->global->LDAP_FIELD_LOGIN_SAMBA,\n\t\t\t\t$conf->global->LDAP_FIELD_PASSWORD,\n\t\t\t\t$conf->global->LDAP_FIELD_PASSWORD_CRYPTED,\n\t\t\t\t$conf->global->LDAP_FIELD_PHONE,\n\t\t\t\t$conf->global->LDAP_FIELD_FAX,\n\t\t\t\t$conf->global->LDAP_FIELD_MOBILE,\n\t\t\t\t$conf->global->LDAP_FIELD_SKYPE,\n\t\t\t\t$conf->global->LDAP_FIELD_MAIL,\n\t\t\t\t$conf->global->LDAP_FIELD_TITLE,\n\t\t\t\t$conf->global->LDAP_FIELD_DESCRIPTION,\n\t\t\t\t$conf->global->LDAP_FIELD_SID\n\t\t\t);\n\n\t\t\t// Remove from required_fields all entries not configured in LDAP (empty) and duplicated\n\t\t\t$required_fields = array_unique(array_values(array_filter($required_fields, \"dol_validElement\")));\n\n\t\t\t// Get from LDAP database an array of results\n\t\t\t$ldapusers = $ldap->getRecords('*', $conf->global->LDAP_USER_DN, $conf->global->LDAP_KEY_USERS, $required_fields, 1);\n\n\t\t\tif (is_array($ldapusers)) {\n\t\t\t\t$liste = array();\n\t\t\t\tforeach ($ldapusers as $key => $ldapuser) {\n\t\t\t\t\t// Define the label string for this user\n\t\t\t\t\t$label = '';\n\t\t\t\t\tforeach ($required_fields as $value) {\n\t\t\t\t\t\tif ($value === $conf->global->LDAP_FIELD_PASSWORD || $value === $conf->global->LDAP_FIELD_PASSWORD_CRYPTED) {\n\t\t\t\t\t\t\t$label .= $value.\"=******* \";\n\t\t\t\t\t\t} elseif ($value) {\n\t\t\t\t\t\t\t$label .= $value.\"=\".$ldapuser[$value].\" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$liste[$key] = $label;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetEventMessages($ldap->error, $ldap->errors, 'errors');\n\t\t\t}\n\t\t} else {\n\t\t\tsetEventMessages($ldap->error, $ldap->errors, 'errors');\n\t\t}\n\n\t\t// If user list is full, we show drop-down list\n\t\tprint \"\\n\\n<!-- Form liste LDAP debut -->\\n\";\n\n\t\tprint '<form name=\"add_user_ldap\" action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"post\">';\n\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\tprint '<table class=\"border centpercent\"><tr>';\n\t\tprint '<td width=\"160\">';\n\t\tprint $langs->trans(\"LDAPUsers\");\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tprint '<input type=\"hidden\" name=\"action\" value=\"adduserldap\">';\n\t\tif (is_array($liste) && count($liste)) {\n\t\t\tprint $form->selectarray('users', $liste, '', 1, 0, 0, '', 0, 0, 0, '', 'maxwidth500');\n\t\t\tprint ajax_combobox('users');\n\t\t}\n\t\tprint '</td><td class=\"center\">';\n\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.dol_escape_htmltag($langs->trans('Get')).'\"'.(count($liste) ? '' : ' disabled').'>';\n\t\tprint '</td></tr></table>';\n\t\tprint '</form>';\n\n\t\tprint \"\\n<!-- Form liste LDAP fin -->\\n\\n\";\n\t\tprint '<br>';\n\t}\n\n\n\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'\" method=\"POST\" name=\"createuser\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\tprint '<input type=\"hidden\" name=\"action\" value=\"add\">';\n\tif (!empty($ldap_sid)) {\n\t\tprint '<input type=\"hidden\" name=\"ldap_sid\" value=\"'.dol_escape_htmltag($ldap_sid).'\">';\n\t}\n\tprint '<input type=\"hidden\" name=\"entity\" value=\"'.$conf->entity.'\">';\n\n\tprint dol_get_fiche_head('', '', '', 0, '');\n\n\tdol_set_focus('#lastname');\n\n\tprint '<table class=\"border centpercent\">';\n\n\t// Civility\n\tprint '<tr><td><label for=\"civility_code\">'.$langs->trans(\"UserTitle\").'</label></td><td colspan=\"3\">';\n\tprint $formcompany->select_civility(GETPOSTISSET(\"civility_code\") ? GETPOST(\"civility_code\", 'aZ09') : $object->civility_code, 'civility_code');\n\tprint '</td></tr>';\n\n\t// Lastname\n\tprint '<tr>';\n\tprint '<td class=\"titlefieldcreate\"><span class=\"fieldrequired\">'.$langs->trans(\"Lastname\").'</span></td>';\n\tprint '<td>';\n\tif (!empty($ldap_lastname)) {\n\t\tprint '<input type=\"hidden\" id=\"lastname\" name=\"lastname\" value=\"'.dol_escape_htmltag($ldap_lastname).'\">';\n\t\tprint $ldap_lastname;\n\t} else {\n\t\tprint '<input class=\"minwidth100 maxwidth150onsmartphone\" type=\"text\" id=\"lastname\" name=\"lastname\" value=\"'.dol_escape_htmltag(GETPOST('lastname', 'alphanohtml')).'\">';\n\t}\n\tprint '</td></tr>';\n\n\t// Firstname\n\tprint '<tr><td>'.$langs->trans(\"Firstname\").'</td>';\n\tprint '<td>';\n\tif (!empty($ldap_firstname)) {\n\t\tprint '<input type=\"hidden\" name=\"firstname\" value=\"'.dol_escape_htmltag($ldap_firstname).'\">';\n\t\tprint $ldap_firstname;\n\t} else {\n\t\tprint '<input class=\"minwidth100 maxwidth150onsmartphone\" type=\"text\" name=\"firstname\" value=\"'.dol_escape_htmltag(GETPOST('firstname', 'alphanohtml')).'\">';\n\t}\n\tprint '</td></tr>';\n\n\t// Login\n\tprint '<tr><td><span class=\"fieldrequired\">'.$langs->trans(\"Login\").'</span></td>';\n\tprint '<td>';\n\tif (!empty($ldap_login)) {\n\t\tprint '<input type=\"hidden\" name=\"login\" value=\"'.dol_escape_htmltag($ldap_login).'\">';\n\t\tprint $ldap_login;\n\t} elseif (!empty($ldap_loginsmb)) {\n\t\tprint '<input type=\"hidden\" name=\"login\" value=\"'.dol_escape_htmltag($ldap_loginsmb).'\">';\n\t\tprint $ldap_loginsmb;\n\t} else {\n\t\tprint '<input class=\"maxwidth200 maxwidth150onsmartphone\" maxsize=\"24\" type=\"text\" name=\"login\" value=\"'.dol_escape_htmltag(GETPOST('login', 'alphanohtml')).'\">';\n\t}\n\tprint '</td></tr>';\n\n\t$generated_password = '';\n\tif (empty($ldap_sid)) {    // ldap_sid is for activedirectory\n\t\t$generated_password = getRandomPassword(false);\n\t}\n\t$password = (GETPOSTISSET('password') ?GETPOST('password') : $generated_password);\n\n\t// Administrator\n\tif (!empty($user->admin)) {\n\t\tprint '<tr><td>'.$langs->trans(\"Administrator\").'</td>';\n\t\tprint '<td>';\n\t\tprint $form->selectyesno('admin', GETPOST('admin'), 1);\n\n\t\tif (!empty($conf->multicompany->enabled) && !$user->entity) {\n\t\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t\tprint '<script type=\"text/javascript\">\n                            $(function() {\n                                $(\"select[name=admin]\").change(function() {\n                                     if ( $(this).val() == 0 ) {\n                                        $(\"input[name=superadmin]\")\n                                            .prop(\"disabled\", true)\n                                            .prop(\"checked\", false);\n                                        $(\"select[name=entity]\")\n                                            .prop(\"disabled\", false);\n                                     } else {\n                                        $(\"input[name=superadmin]\")\n                                            .prop(\"disabled\", false);\n                                     }\n                                });\n                                $(\"input[name=superadmin]\").change(function() {\n                                    if ( $(this).is(\":checked\") ) {\n                                        $(\"select[name=entity]\")\n                                            .prop(\"disabled\", true);\n                                    } else {\n                                        $(\"select[name=entity]\")\n                                            .prop(\"disabled\", false);\n                                    }\n                                });\n                            });\n                    </script>';\n\t\t\t}\n\t\t\t$checked = (GETPOST('superadmin', 'int') ? ' checked' : '');\n\t\t\t$disabled = (GETPOST('superadmin', 'int') ? '' : ' disabled');\n\t\t\tprint '<input type=\"checkbox\" name=\"superadmin\" id=\"superadmin\" value=\"1\"'.$checked.$disabled.' /> <label for=\"superadmin\">'.$langs->trans(\"SuperAdministrator\").'</span>';\n\t\t}\n\t\tprint \"</td></tr>\\n\";\n\t}\n\n\t// Gender\n\tprint '<tr><td>'.$langs->trans(\"Gender\").'</td>';\n\tprint '<td>';\n\t$arraygender = array('man'=>$langs->trans(\"Genderman\"), 'woman'=>$langs->trans(\"Genderwoman\"), 'other'=>$langs->trans(\"Genderother\"));\n\tprint $form->selectarray('gender', $arraygender, GETPOST('gender'), 1);\n\tprint '</td></tr>';\n\n\t// Employee\n\t$defaultemployee = '1';\n\tprint '<tr>';\n\tprint '<td>'.$langs->trans('Employee').'</td><td>';\n\tprint '<input type=\"checkbox\" name=\"employee\" value=\"1\"'.(GETPOST('employee') == '1' ? ' checked=\"checked\"' : ($defaultemployee ? ' checked=\"checked\"' : '')).'>';\n\t//print $form->selectyesno(\"employee\", (GETPOST('employee') != '' ?GETPOST('employee') : $defaultemployee), 1);\n\tprint '</td></tr>';\n\n\t// Hierarchy\n\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"HierarchicalResponsible\").'</td>';\n\tprint '<td>';\n\tprint img_picto('', 'user', 'class=\"pictofixedwidth\"').$form->select_dolusers($object->fk_user, 'fk_user', 1, array($object->id), 0, '', 0, $conf->entity, 0, 0, '', 0, '', 'maxwidth300 widthcentpercentminusx');\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\t// Expense report validator\n\tif (!empty($conf->expensereport->enabled)) {\n\t\tprint '<tr><td class=\"titlefieldcreate\">';\n\t\t$text = $langs->trans(\"ForceUserExpenseValidator\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tprint img_picto('', 'user', 'class=\"pictofixedwidth\"').$form->select_dolusers($object->fk_user_expense_validator, 'fk_user_expense_validator', 1, array($object->id), 0, '', 0, $conf->entity, 0, 0, '', 0, '', 'maxwidth300 widthcentpercentminusx');\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\n\t// Holiday request validator\n\tif (!empty($conf->holiday->enabled)) {\n\t\tprint '<tr><td class=\"titlefieldcreate\">';\n\t\t$text = $langs->trans(\"ForceUserHolidayValidator\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tprint img_picto('', 'user', 'class=\"pictofixedwidth\"').$form->select_dolusers($object->fk_user_holiday_validator, 'fk_user_holiday_validator', 1, array($object->id), 0, '', 0, $conf->entity, 0, 0, '', 0, '', 'maxwidth300 widthcentpercentminusx');\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\n\t// External user\n\tprint '<tr><td>'.$langs->trans(\"ExternalUser\").' ?</td>';\n\tprint '<td>';\n\tprint $form->textwithpicto($langs->trans(\"Internal\"), $langs->trans(\"InternalExternalDesc\"), 1, 'help', '', 0, 2);\n\tprint '</td></tr>';\n\n\n\tprint '</table><hr><table class=\"border centpercent\">';\n\n\n\t// Date validity\n\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"RangeOfLoginValidity\").'</td>';\n\tprint '<td>';\n\tprint $form->selectDate($datestartvalidity, 'datestartvalidity', 0, 0, 1, 'formdatestartvalidity', 1, 1);\n\n\tprint ' &nbsp; ';\n\n\tprint $form->selectDate($dateendvalidity, 'dateendvalidity', 0, 0, 1, 'formdateendvalidity', 1, 0);\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\t// Password\n\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Password\").'</td>';\n\tprint '<td>';\n\t$valuetoshow = '';\n\tif (preg_match('/ldap/', $dolibarr_main_authentication)) {\n\t\t$valuetoshow .= ($valuetoshow ? ', ' : '').$langs->trans(\"PasswordOfUserInLDAP\");\n\t}\n\tif (preg_match('/http/', $dolibarr_main_authentication)) {\n\t\t$valuetoshow .= ($valuetoshow ? ', ' : '').$langs->trans(\"HTTPBasicPassword\");\n\t}\n\tif (preg_match('/dolibarr/', $dolibarr_main_authentication)) {\n\t\tif (!empty($ldap_pass)) {\t// For very old system comaptibilty. Now clear password can't be viewed from LDAP read\n\t\t\t$valuetoshow .= ($valuetoshow ? ', ' : '').'<input type=\"hidden\" name=\"password\" value=\"'.$ldap_pass.'\">'; // Dolibarr password is preffiled with LDAP known password\n\t\t\t$valuetoshow .= preg_replace('/./i', '*', $ldap_pass);\n\t\t} else {\n\t\t\t// We do not use a field password but a field text to show new password to use.\n\t\t\t$valuetoshow .= ($valuetoshow ? ', ' : '').'<input maxsize=\"32\" type=\"text\" name=\"password\" value=\"'.$password.'\" autocomplete=\"new-password\">';\n\t\t}\n\t}\n\n\t// Other form for user password\n\t$parameters = array('valuetoshow' => $valuetoshow, 'password' => $password);\n\t$reshook = $hookmanager->executeHooks('printUserPasswordField', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\tif ($reshook > 0) {\n\t\t$valuetoshow = $hookmanager->resPrint; // to replace\n\t} else {\n\t\t$valuetoshow .= $hookmanager->resPrint; // to add\n\t}\n\n\tprint $valuetoshow;\n\tprint '</td></tr>';\n\n\tif (!empty($conf->api->enabled)) {\n\t\t// API key\n\t\t//$generated_password = getRandomPassword(false);\n\t\tprint '<tr><td>'.$langs->trans(\"ApiKey\").'</td>';\n\t\tprint '<td>';\n\t\tprint '<input class=\"minwidth300 widthcentpercentminusx\" maxsize=\"32\" type=\"text\" id=\"api_key\" name=\"api_key\" value=\"'.GETPOST('api_key', 'alphanohtml').'\" autocomplete=\"off\">';\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\tprint '&nbsp;'.img_picto($langs->trans('Generate'), 'refresh', 'id=\"generate_api_key\" class=\"linkobject\"');\n\t\t}\n\t\tprint '</td></tr>';\n\t} else {\n\t\t// PARTIAL WORKAROUND\n\t\t$generated_fake_api_key = getRandomPassword(false);\n\t\tprint '<input type=\"hidden\" name=\"api_key\" value=\"'.$generated_fake_api_key.'\">';\n\t}\n\n\n\tprint '</table><hr><table class=\"border centpercent\">';\n\n\n\t// Address\n\tprint '<tr><td class=\"tdtop titlefieldcreate\">'.$form->editfieldkey('Address', 'address', '', $object, 0).'</td>';\n\tprint '<td><textarea name=\"address\" id=\"address\" class=\"quatrevingtpercent\" rows=\"3\" wrap=\"soft\">';\n\tprint $object->address;\n\tprint '</textarea></td></tr>';\n\n\t// Zip\n\tprint '<tr><td>'.$form->editfieldkey('Zip', 'zipcode', '', $object, 0).'</td><td>';\n\tprint $formcompany->select_ziptown($object->zip, 'zipcode', array('town', 'selectcountry_id', 'state_id'), 6);\n\tprint '</td></tr>';\n\n\t// Town\n\tprint '<tr><td>'.$form->editfieldkey('Town', 'town', '', $object, 0).'</td><td>';\n\tprint $formcompany->select_ziptown($object->town, 'town', array('zipcode', 'selectcountry_id', 'state_id'));\n\tprint '</td></tr>';\n\n\t// Country\n\tprint '<tr><td>'.$form->editfieldkey('Country', 'selectcountry_id', '', $object, 0).'</td><td class=\"maxwidthonsmartphone\">';\n\tprint img_picto('', 'country', 'class=\"pictofixedwidth\"');\n\tprint $form->select_country((GETPOST('country_id') != '' ?GETPOST('country_id') : $object->country_id));\n\tif ($user->admin) {\n\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t}\n\tprint '</td></tr>';\n\n\t// State\n\tif (empty($conf->global->USER_DISABLE_STATE)) {\n\t\tprint '<tr><td>'.$form->editfieldkey('State', 'state_id', '', $object, 0).'</td><td class=\"maxwidthonsmartphone\">';\n\t\tprint img_picto('', 'state', 'class=\"pictofixedwidth\"');\n\t\tprint $formcompany->select_state($object->state_id, $object->country_code, 'state_id');\n\t\tprint '</td></tr>';\n\t}\n\n\t// Tel\n\tprint '<tr><td>'.$langs->trans(\"PhonePro\").'</td>';\n\tprint '<td>';\n\tprint img_picto('', 'object_phoning', 'class=\"pictofixedwidth\"');\n\tif (!empty($ldap_phone)) {\n\t\tprint '<input type=\"hidden\" name=\"office_phone\" value=\"'.dol_escape_htmltag($ldap_phone).'\">';\n\t\tprint $ldap_phone;\n\t} else {\n\t\tprint '<input class=\"maxwidth200 widthcentpercentminusx\" type=\"text\" name=\"office_phone\" value=\"'.dol_escape_htmltag(GETPOST('office_phone', 'alphanohtml')).'\">';\n\t}\n\tprint '</td></tr>';\n\n\t// Tel portable\n\tprint '<tr><td>'.$langs->trans(\"PhoneMobile\").'</td>';\n\tprint '<td>';\n\tprint img_picto('', 'object_phoning_mobile', 'class=\"pictofixedwidth\"');\n\tif (!empty($ldap_mobile)) {\n\t\tprint '<input type=\"hidden\" name=\"user_mobile\" value=\"'.dol_escape_htmltag($ldap_mobile).'\">';\n\t\tprint $ldap_mobile;\n\t} else {\n\t\tprint '<input class=\"maxwidth200 widthcentpercentminusx\" type=\"text\" name=\"user_mobile\" value=\"'.dol_escape_htmltag(GETPOST('user_mobile', 'alphanohtml')).'\">';\n\t}\n\tprint '</td></tr>';\n\n\t// Fax\n\tprint '<tr><td>'.$langs->trans(\"Fax\").'</td>';\n\tprint '<td>';\n\tprint img_picto('', 'object_phoning_fax', 'class=\"pictofixedwidth\"');\n\tif (!empty($ldap_fax)) {\n\t\tprint '<input type=\"hidden\" name=\"office_fax\" value=\"'.dol_escape_htmltag($ldap_fax).'\">';\n\t\tprint $ldap_fax;\n\t} else {\n\t\tprint '<input class=\"maxwidth200 widthcentpercentminusx\" type=\"text\" name=\"office_fax\" value=\"'.dol_escape_htmltag(GETPOST('office_fax', 'alphanohtml')).'\">';\n\t}\n\tprint '</td></tr>';\n\n\t// EMail\n\tprint '<tr><td'.(!empty($conf->global->USER_MAIL_REQUIRED) ? ' class=\"fieldrequired\"' : '').'>'.$langs->trans(\"EMail\").'</td>';\n\tprint '<td>';\n\tprint img_picto('', 'object_email', 'class=\"pictofixedwidth\"');\n\tif (!empty($ldap_mail)) {\n\t\tprint '<input type=\"hidden\" name=\"email\" value=\"'.dol_escape_htmltag($ldap_mail).'\">';\n\t\tprint $ldap_mail;\n\t} else {\n\t\tprint '<input type=\"text\" name=\"email\" class=\"maxwidth500 widthcentpercentminusx\" value=\"'.dol_escape_htmltag(GETPOST('email', 'alphanohtml')).'\">';\n\t}\n\tprint '</td></tr>';\n\n\t// Social networks\n\tif (!empty($conf->socialnetworks->enabled)) {\n\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\tif ($value['active']) {\n\t\t\t\tprint '<tr><td>'.$langs->trans($value['label']).'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif (!empty($value['icon'])) {\n\t\t\t\t\tprint '<span class=\"fa '.$value['icon'].' pictofixedwidth\"></span>';\n\t\t\t\t}\n\t\t\t\tif (!empty($ldap_social[$key])) {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"'.$key.'\" value=\"'.$ldap_social[$key].'\">';\n\t\t\t\t\tprint $ldap_social[$key];\n\t\t\t\t} else {\n\t\t\t\t\tprint '<input class=\"maxwidth200 widthcentpercentminusx\" type=\"text\" name=\"'.$key.'\" value=\"'.GETPOST($key, 'alphanohtml').'\">';\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t} else {\n\t\t\t\t// if social network is not active but value exist we do not want to loose it\n\t\t\t\tif (!empty($ldap_social[$key])) {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"'.$key.'\" value=\"'.$ldap_social[$key].'\">';\n\t\t\t\t} else {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"'.$key.'\" value=\"'.GETPOST($key, 'alphanohtml').'\">';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Accountancy code\n\tif (!empty($conf->accounting->enabled)) {\n\t\tprint '<tr><td>'.$langs->trans(\"AccountancyCode\").'</td>';\n\t\tprint '<td>';\n\t\tprint '<input type=\"text\" class=\"maxwidthonsmartphone\" name=\"accountancy_code\" value=\"'.dol_escape_htmltag(GETPOST('accountancy_code', 'alphanohtml')).'\">';\n\t\tprint '</td></tr>';\n\t}\n\n\t// User color\n\tif (!empty($conf->agenda->enabled)) {\n\t\tprint '<tr><td>'.$langs->trans(\"ColorUser\").'</td>';\n\t\tprint '<td>';\n\t\tprint $formother->selectColor(GETPOSTISSET('color') ?GETPOST('color', 'alphanohtml') : $object->color, 'color', null, 1, '', 'hideifnotset');\n\t\tprint '</td></tr>';\n\t}\n\n\t// Categories\n\tif (!empty($conf->categorie->enabled) && !empty($user->rights->categorie->lire)) {\n\t\tprint '<tr><td>'.$form->editfieldkey('Categories', 'usercats', '', $object, 0).'</td><td>';\n\t\t$cate_arbo = $form->select_all_categories('user', null, 'parent', null, null, 1);\n\t\tprint img_picto('', 'category', 'class=\"pictofixedwidth\"').$form->multiselectarray('usercats', $cate_arbo, GETPOST('usercats', 'array'), 0, 0, 'maxwdith300 widthcentpercentminusx', 0, '90%');\n\t\tprint \"</td></tr>\";\n\t}\n\n\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\tprint '<tr><td>'.$form->editfieldkey('DefaultLang', 'default_lang', '', $object, 0, 'string', '', 0, 0, 'id', $langs->trans(\"WarningNotLangOfInterface\", $langs->transnoentitiesnoconv(\"UserGUISetup\"))).'</td>';\n\t\tprint '<td class=\"maxwidthonsmartphone\">'.\"\\n\";\n\t\tprint img_picto('', 'language', 'class=\"pictofixedwidth\"').$formadmin->select_language(GETPOST('default_lang', 'alpha') ?GETPOST('default_lang', 'alpha') : ($object->lang ? $object->lang : ''), 'default_lang', 0, 0, 1, 0, 0, 'maxwidth200onsmartphone widthcentpercentminusx');\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\t}\n\n\t// Multicompany\n\tif (!empty($conf->multicompany->enabled) && is_object($mc)) {\n\t\t// This is now done with hook formObjectOptions. Keep this code for backward compatibility with old multicompany module\n\t\tif (!method_exists($mc, 'formObjectOptions')) {\n\t\t\tif (empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE) && $conf->entity == 1 && $user->admin && !$user->entity) {\t// condition must be same for create and edit mode\n\t\t\t\tprint \"<tr>\".'<td>'.$langs->trans(\"Entity\").'</td>';\n\t\t\t\t print \"<td>\".$mc->select_entities($conf->entity);\n\t\t\t\t print \"</td></tr>\\n\";\n\t\t\t} else {\n\t\t\t\t print '<input type=\"hidden\" name=\"entity\" value=\"'.$conf->entity.'\" />';\n\t\t\t}\n\t\t}\n\t}\n\n\t// Other attributes\n\t$parameters = array();\n\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_add.tpl.php';\n\n\t// Note\n\tprint '<tr><td class=\"tdtop\">';\n\tprint $langs->trans(\"Note\");\n\tprint '</td><td>';\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\t$doleditor = new DolEditor('note', GETPOSTISSET('note') ? GETPOST('note', 'restricthtml') : '', '', 120, 'dolibarr_notes', '', false, true, getDolGlobalString('FCKEDITOR_ENABLE_SOCIETE'), ROWS_3, '90%');\n\t$doleditor->Create();\n\tprint \"</td></tr>\\n\";\n\n\t// Signature\n\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"Signature\").'</td>';\n\tprint '<td class=\"wordbreak\">';\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\t$doleditor = new DolEditor('signature', GETPOST('signature', 'restricthtml'), '', 138, 'dolibarr_notes', 'In', true, true, empty($conf->global->FCKEDITOR_ENABLE_USERSIGN) ? 0 : 1, ROWS_4, '90%');\n\tprint $doleditor->Create(1);\n\tprint '</td></tr>';\n\n\n\tprint '</table><hr><table class=\"border centpercent\">';\n\n\n\t// TODO Move this into tab RH (HierarchicalResponsible must be on both tab)\n\n\t// Default warehouse\n\tif (!empty($conf->stock->enabled) && !empty($conf->global->MAIN_DEFAULT_WAREHOUSE_USER)) {\n\t\tprint '<tr><td>'.$langs->trans(\"DefaultWarehouse\").'</td><td>';\n\t\tprint $formproduct->selectWarehouses($object->fk_warehouse, 'fk_warehouse', 'warehouseopen', 1);\n\t\tprint '</td></tr>';\n\t}\n\n\t// Position/Job\n\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"PostOrFunction\").'</td>';\n\tprint '<td>';\n\tprint '<input class=\"maxwidth200 maxwidth150onsmartphone\" type=\"text\" name=\"job\" value=\"'.dol_escape_htmltag(GETPOST('job', 'alphanohtml')).'\">';\n\tprint '</td></tr>';\n\n\tif ((!empty($conf->salaries->enabled) && !empty($user->rights->salaries->read) && in_array($id, $childids))\n\t\t|| (!empty($conf->salaries->enabled) && !empty($user->rights->salaries->readall))\n\t\t|| (!empty($conf->hrm->enabled) && !empty($user->rights->hrm->employee->read))) {\n\t\t$langs->load(\"salaries\");\n\n\t\t// THM\n\t\tprint '<tr><td>';\n\t\t$text = $langs->trans(\"THM\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"THMDescription\"), 1, 'help', 'classthm');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tprint '<input size=\"8\" type=\"text\" name=\"thm\" value=\"'.dol_escape_htmltag(GETPOST('thm')).'\"> '.$langs->getCurrencySymbol($conf->currency);\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\n\t\t// TJM\n\t\tprint '<tr><td>';\n\t\t$text = $langs->trans(\"TJM\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"TJMDescription\"), 1, 'help', 'classtjm');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tprint '<input size=\"8\" type=\"text\" name=\"tjm\" value=\"'.dol_escape_htmltag(GETPOST('tjm')).'\"> '.$langs->getCurrencySymbol($conf->currency);\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\n\t\t// Salary\n\t\tprint '<tr><td>'.$langs->trans(\"Salary\").'</td>';\n\t\tprint '<td>';\n\t\tprint img_picto('', 'salary', 'class=\"pictofixedwidth paddingright\"').'<input size=\"8\" type=\"text\" name=\"salary\" value=\"'.dol_escape_htmltag(GETPOST('salary')).'\"> '.$langs->getCurrencySymbol($conf->currency);\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\n\t// Weeklyhours\n\tprint '<tr><td>'.$langs->trans(\"WeeklyHours\").'</td>';\n\tprint '<td>';\n\tprint '<input size=\"8\" type=\"text\" name=\"weeklyhours\" value=\"'.dol_escape_htmltag(GETPOST('weeklyhours')).'\">';\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\t// Date employment\n\tprint '<tr><td>'.$langs->trans(\"DateEmployment\").'</td>';\n\tprint '<td>';\n\tprint $form->selectDate($dateemployment, 'dateemployment', 0, 0, 1, 'formdateemployment', 1, 1);\n\n\tprint ' - ';\n\n\tprint $form->selectDate($dateemploymentend, 'dateemploymentend', 0, 0, 1, 'formdateemploymentend', 1, 0);\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\t// Date birth\n\tprint '<tr><td>'.$langs->trans(\"DateOfBirth\").'</td>';\n\tprint '<td>';\n\tprint $form->selectDate($dateofbirth, 'dateofbirth', 0, 0, 1, 'createuser', 1, 0);\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\tprint \"</table>\\n\";\n\n\tprint dol_get_fiche_end();\n\n\tprint $form->buttonsSaveCancel(\"CreateUser\");\n\n\tprint \"</form>\";\n} else {\n\t// View and edit mode\n\tif ($id > 0) {\n\t\t$res = $object->fetch($id, '', '', 1);\n\t\tif ($res < 0) {\n\t\t\tdol_print_error($db, $object->error);\n\t\t\texit;\n\t\t}\n\t\t$res = $object->fetch_optionals();\n\n\t\t// Check if user has rights\n\t\tif (empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE)) {\n\t\t\t$object->getrights();\n\t\t\tif (empty($object->nb_rights) && $object->statut != 0 && empty($object->admin)) {\n\t\t\t\tsetEventMessages($langs->trans('UserHasNoPermissions'), null, 'warnings');\n\t\t\t}\n\t\t}\n\n\t\t// Connexion ldap\n\t\t// pour recuperer passDoNotExpire et userChangePassNextLogon\n\t\tif (!empty($conf->ldap->enabled) && !empty($object->ldap_sid)) {\n\t\t\t$ldap = new Ldap();\n\t\t\t$result = $ldap->connect_bind();\n\t\t\tif ($result > 0) {\n\t\t\t\t$userSearchFilter = '('.$conf->global->LDAP_FILTER_CONNECTION.'('.$ldap->getUserIdentifier().'='.$object->login.'))';\n\t\t\t\t$entries = $ldap->fetch($object->login, $userSearchFilter);\n\t\t\t\tif (!$entries) {\n\t\t\t\t\tsetEventMessages($ldap->error, $ldap->errors, 'errors');\n\t\t\t\t}\n\n\t\t\t\t$passDoNotExpire = 0;\n\t\t\t\t$userChangePassNextLogon = 0;\n\t\t\t\t$userDisabled = 0;\n\t\t\t\t$statutUACF = '';\n\n\t\t\t\t// Check options of user account\n\t\t\t\tif (count($ldap->uacf) > 0) {\n\t\t\t\t\tforeach ($ldap->uacf as $key => $statut) {\n\t\t\t\t\t\tif ($key == 65536) {\n\t\t\t\t\t\t\t$passDoNotExpire = 1;\n\t\t\t\t\t\t\t$statutUACF = $statut;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$userDisabled = 1;\n\t\t\t\t\t$statutUACF = \"ACCOUNTDISABLE\";\n\t\t\t\t}\n\n\t\t\t\tif ($ldap->pwdlastset == 0) {\n\t\t\t\t\t$userChangePassNextLogon = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Show tabs\n\t\tif ($mode == 'employee') { // For HRM module development\n\t\t\t$title = $langs->trans(\"Employee\");\n\t\t\t$linkback = '<a href=\"'.DOL_URL_ROOT.'/hrm/employee/list.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\t\t} else {\n\t\t\t$title = $langs->trans(\"User\");\n\t\t\t$linkback = '';\n\n\t\t\tif ($user->rights->user->user->lire || $user->admin) {\n\t\t\t\t$linkback = '<a href=\"'.DOL_URL_ROOT.'/user/list.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\t\t\t}\n\t\t}\n\n\t\t$head = user_prepare_head($object);\n\n\t\t/*\n\t\t * Confirmation reinitialisation mot de passe\n\t\t */\n\t\tif ($action == 'password') {\n\t\t\tprint $form->formconfirm($_SERVER['PHP_SELF'].\"?id=$object->id\", $langs->trans(\"ReinitPassword\"), $langs->trans(\"ConfirmReinitPassword\", $object->login), \"confirm_password\", '', 0, 1);\n\t\t}\n\n\t\t/*\n\t\t * Confirmation envoi mot de passe\n\t\t */\n\t\tif ($action == 'passwordsend') {\n\t\t\tprint $form->formconfirm($_SERVER['PHP_SELF'].\"?id=$object->id\", $langs->trans(\"SendNewPassword\"), $langs->trans(\"ConfirmSendNewPassword\", $object->login), \"confirm_passwordsend\", '', 0, 1);\n\t\t}\n\n\t\t/*\n\t\t * Confirm deactivation\n\t\t */\n\t\tif ($action == 'disable') {\n\t\t\tprint $form->formconfirm($_SERVER['PHP_SELF'].\"?id=$object->id\", $langs->trans(\"DisableAUser\"), $langs->trans(\"ConfirmDisableUser\", $object->login), \"confirm_disable\", '', 0, 1);\n\t\t}\n\n\t\t/*\n\t\t * Confirm activation\n\t\t */\n\t\tif ($action == 'enable') {\n\t\t\tprint $form->formconfirm($_SERVER['PHP_SELF'].\"?id=$object->id\", $langs->trans(\"EnableAUser\"), $langs->trans(\"ConfirmEnableUser\", $object->login), \"confirm_enable\", '', 0, 1);\n\t\t}\n\n\t\t/*\n\t\t * Confirmation suppression\n\t\t */\n\t\tif ($action == 'delete') {\n\t\t\tprint $form->formconfirm($_SERVER['PHP_SELF'].\"?id=$object->id\", $langs->trans(\"DeleteAUser\"), $langs->trans(\"ConfirmDeleteUser\", $object->login), \"confirm_delete\", '', 0, 1);\n\t\t}\n\n\t\t/*\n\t\t * Fiche en mode visu\n\t\t */\n\t\tif ($action != 'edit') {\n\t\t\tprint dol_get_fiche_head($head, 'user', $title, -1, 'user');\n\n\t\t\tdol_banner_tab($object, 'id', $linkback, $user->rights->user->user->lire || $user->admin);\n\n\t\t\tprint '<div class=\"fichecenter\">';\n\t\t\tprint '<div class=\"fichehalfleft\">';\n\n\t\t\tprint '<div class=\"underbanner clearboth\"></div>';\n\t\t\tprint '<table class=\"border tableforfield\" width=\"100%\">';\n\n\t\t\t// Login\n\t\t\tprint '<tr><td class=\"titlefieldmiddle\">'.$langs->trans(\"Login\").'</td>';\n\t\t\tif (!empty($object->ldap_sid) && $object->statut == 0) {\n\t\t\t\tprint '<td class=\"error\">';\n\t\t\t\tprint $langs->trans(\"LoginAccountDisableInDolibarr\");\n\t\t\t\tprint '</td>';\n\t\t\t} else {\n\t\t\t\tprint '<td>';\n\t\t\t\t$addadmin = '';\n\t\t\t\tif (property_exists($object, 'admin')) {\n\t\t\t\t\tif (!empty($conf->multicompany->enabled) && !empty($object->admin) && empty($object->entity)) {\n\t\t\t\t\t\t$addadmin .= img_picto($langs->trans(\"SuperAdministratorDesc\"), \"redstar\", 'class=\"paddingleft\"');\n\t\t\t\t\t} elseif (!empty($object->admin)) {\n\t\t\t\t\t\t$addadmin .= img_picto($langs->trans(\"AdministratorDesc\"), \"star\", 'class=\"paddingleft\"');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprint showValueWithClipboardCPButton($object->login).$addadmin;\n\t\t\t\tprint '</td>';\n\t\t\t}\n\t\t\tprint '</tr>'.\"\\n\";\n\n\t\t\t// Type\n\t\t\tprint '<tr><td>';\n\t\t\t$text = $langs->trans(\"Type\");\n\t\t\tprint $form->textwithpicto($text, $langs->trans(\"InternalExternalDesc\"));\n\t\t\tprint '</td><td>';\n\t\t\t$type = $langs->trans(\"Internal\");\n\t\t\tif ($object->socid > 0) {\n\t\t\t\t$type = $langs->trans(\"External\");\n\t\t\t}\n\t\t\tprint '<span class=\"badgeneutral\">';\n\t\t\tprint $type;\n\t\t\tif ($object->ldap_sid) {\n\t\t\t\tprint ' ('.$langs->trans(\"DomainUser\").')';\n\t\t\t}\n\t\t\tprint '</span>';\n\t\t\tprint '</td></tr>'.\"\\n\";\n\n\t\t\t// Ldap sid\n\t\t\tif ($object->ldap_sid) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"Type\").'</td><td>';\n\t\t\t\tprint $langs->trans(\"DomainUser\", $ldap->domainFQDN);\n\t\t\t\tprint '</td></tr>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Employee\n\t\t\tprint '<tr><td>'.$langs->trans(\"Employee\").'</td><td>';\n\t\t\tprint '<input type=\"checkbox\" disabled name=\"employee\" value=\"1\"'.($object->employee ? ' checked=\"checked\"' : '').'>';\n\t\t\t//print yn($object->employee);\n\t\t\tprint '</td></tr>'.\"\\n\";\n\n\t\t\t// TODO This is also available into the tab RH\n\n\t\t\t// Hierarchy\n\t\t\tprint '<tr><td>'.$langs->trans(\"HierarchicalResponsible\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif (empty($object->fk_user)) {\n\t\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span>';\n\t\t\t} else {\n\t\t\t\t$huser = new User($db);\n\t\t\t\tif ($object->fk_user > 0) {\n\t\t\t\t\t$huser->fetch($object->fk_user);\n\t\t\t\t\tprint $huser->getNomUrl(1);\n\t\t\t\t} else {\n\t\t\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span>';\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Expense report validator\n\t\t\tif (!empty($conf->expensereport->enabled)) {\n\t\t\t\tprint '<tr><td>';\n\t\t\t\t$text = $langs->trans(\"ForceUserExpenseValidator\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif (!empty($object->fk_user_expense_validator)) {\n\t\t\t\t\t$evuser = new User($db);\n\t\t\t\t\t$evuser->fetch($object->fk_user_expense_validator);\n\t\t\t\t\tprint $evuser->getNomUrl(1);\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Holiday request validator\n\t\t\tif (!empty($conf->holiday->enabled)) {\n\t\t\t\tprint '<tr><td>';\n\t\t\t\t$text = $langs->trans(\"ForceUserHolidayValidator\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif (!empty($object->fk_user_holiday_validator)) {\n\t\t\t\t\t$hvuser = new User($db);\n\t\t\t\t\t$hvuser->fetch($object->fk_user_holiday_validator);\n\t\t\t\t\tprint $hvuser->getNomUrl(1);\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Position/Job\n\t\t\tprint '<tr><td>'.$langs->trans(\"PostOrFunction\").'</td>';\n\t\t\tprint '<td>'.dol_escape_htmltag($object->job).'</td>';\n\t\t\tprint '</tr>'.\"\\n\";\n\n\t\t\t// Weeklyhours\n\t\t\tprint '<tr><td>'.$langs->trans(\"WeeklyHours\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint price2num($object->weeklyhours);\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Sensitive salary/value information\n\t\t\tif ((empty($user->socid) && in_array($id, $childids))\t// A user can always see salary/value information for its subordinates\n\t\t\t\t|| (!empty($conf->salaries->enabled) && !empty($user->rights->salaries->readall))\n\t\t\t\t|| (!empty($conf->hrm->enabled) && !empty($user->rights->hrm->employee->read))) {\n\t\t\t\t$langs->load(\"salaries\");\n\n\t\t\t\t// Salary\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"Salary\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint ($object->salary != '' ? img_picto('', 'salary', 'class=\"pictofixedwidth paddingright\"').'<span class=\"amount\">'.price($object->salary, '', $langs, 1, -1, -1, $conf->currency) : '').'</span>';\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\n\t\t\t\t// THM\n\t\t\t\tprint '<tr><td>';\n\t\t\t\t$text = $langs->trans(\"THM\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"THMDescription\"), 1, 'help', 'classthm');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint ($object->thm != '' ?price($object->thm, '', $langs, 1, -1, -1, $conf->currency) : '');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\n\t\t\t\t// TJM\n\t\t\t\tprint '<tr><td>';\n\t\t\t\t$text = $langs->trans(\"TJM\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"TJMDescription\"), 1, 'help', 'classtjm');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint ($object->tjm != '' ?price($object->tjm, '', $langs, 1, -1, -1, $conf->currency) : '');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Date employment\n\t\t\tprint '<tr><td>'.$langs->trans(\"DateOfEmployment\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($object->dateemployment) {\n\t\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"FromDate\").'</span> ';\n\t\t\t\tprint dol_print_date($object->dateemployment, 'day');\n\t\t\t}\n\t\t\tif ($object->dateemploymentend) {\n\t\t\t\tprint '<span class=\"opacitymedium\"> - '.$langs->trans(\"To\").'</span> ';\n\t\t\t\tprint dol_print_date($object->dateemploymentend, 'day');\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Default warehouse\n\t\t\tif (!empty($conf->stock->enabled) && !empty($conf->global->MAIN_DEFAULT_WAREHOUSE_USER)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/stock/class/entrepot.class.php';\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"DefaultWarehouse\").'</td><td>';\n\t\t\t\tif ($object->fk_warehouse > 0) {\n\t\t\t\t\t$warehousestatic = new Entrepot($db);\n\t\t\t\t\t$warehousestatic->fetch($object->fk_warehouse);\n\t\t\t\t\tprint $warehousestatic->getNomUrl(1);\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Accountancy code\n\t\t\tif (!empty($conf->accounting->enabled)) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"AccountancyCode\").'</td>';\n\t\t\t\tprint '<td>'.$object->accountancy_code.'</td></tr>';\n\t\t\t}\n\n\t\t\tprint '</table>';\n\n\t\t\tprint '</div>';\n\t\t\tprint '<div class=\"fichehalfright\">';\n\n\t\t\tprint '<div class=\"underbanner clearboth\"></div>';\n\n\t\t\tprint '<table class=\"border tableforfield centpercent\">';\n\n\t\t\t// Color user\n\t\t\tif (!empty($conf->agenda->enabled)) {\n\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ColorUser\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint $formother->showColor($object->color, '');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Categories\n\t\t\tif (!empty($conf->categorie->enabled) && !empty($user->rights->categorie->lire)) {\n\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"Categories\").'</td>';\n\t\t\t\tprint '<td colspan=\"3\">';\n\t\t\t\tprint $form->showCategories($object->id, Categorie::TYPE_USER, 1);\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Default language\n\t\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t\t$langs->load(\"languages\");\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\t\t\t\tprint '<tr><td class=\"titlefield\">';\n\t\t\t\tprint $form->textwithpicto($langs->trans(\"DefaultLang\"), $langs->trans(\"WarningNotLangOfInterface\", $langs->transnoentitiesnoconv(\"UserGUISetup\")));\n\t\t\t\tprint '</td><td>';\n\t\t\t\t//$s=picto_from_langcode($object->default_lang);\n\t\t\t\t//print ($s?$s.' ':'');\n\t\t\t\t$labellang = ($object->lang ? $langs->trans('Language_'.$object->lang) : '');\n\t\t\t\tprint $labellang;\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\tif (isset($conf->file->main_authentication) && preg_match('/openid/', $conf->file->main_authentication) && !empty($conf->global->MAIN_OPENIDURL_PERUSER)) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"OpenIDURL\").'</td>';\n\t\t\t\tprint '<td>'.$object->openid.'</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Multicompany\n\t\t\tif (!empty($conf->multicompany->enabled) && is_object($mc)) {\n\t\t\t\t// This is now done with hook formObjectOptions. Keep this code for backward compatibility with old multicompany module\n\t\t\t\tif (!method_exists($mc, 'formObjectOptions')) {\n\t\t\t\t\tif (!empty($conf->multicompany->enabled) && empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE) && $conf->entity == 1 && $user->admin && !$user->entity) {\n\t\t\t\t\t\tprint '<tr><td>'.$langs->trans(\"Entity\").'</td><td>';\n\t\t\t\t\t\tif (empty($object->entity)) {\n\t\t\t\t\t\t\tprint $langs->trans(\"AllEntities\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$mc->getInfo($object->entity);\n\t\t\t\t\t\t\tprint $mc->label;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint \"</td></tr>\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Other attributes\n\t\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_view.tpl.php';\n\n\t\t\t// Company / Contact\n\t\t\tif (!empty($conf->societe->enabled)) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"LinkToCompanyContact\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\t$s = '';\n\t\t\t\tif (isset($object->socid) && $object->socid > 0) {\n\t\t\t\t\t$societe = new Societe($db);\n\t\t\t\t\t$societe->fetch($object->socid);\n\t\t\t\t\tif ($societe->id > 0) {\n\t\t\t\t\t\t$s .= $societe->getNomUrl(1, '');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$s .= '<span class=\"opacitymedium hideonsmartphone\">'.$langs->trans(\"ThisUserIsNot\").'</span>';\n\t\t\t\t}\n\t\t\t\tif (!empty($object->contact_id)) {\n\t\t\t\t\t$contact = new Contact($db);\n\t\t\t\t\t$contact->fetch($object->contact_id);\n\t\t\t\t\tif ($contact->id > 0) {\n\t\t\t\t\t\tif ($object->socid > 0 && $s) {\n\t\t\t\t\t\t\t$s .= ' / ';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$s .= '<br>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$s .= $contact->getNomUrl(1, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprint $s;\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '</tr>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Module Adherent\n\t\t\tif (!empty($conf->adherent->enabled)) {\n\t\t\t\t$langs->load(\"members\");\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"LinkedToDolibarrMember\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($object->fk_member) {\n\t\t\t\t\t$adh = new Adherent($db);\n\t\t\t\t\t$adh->fetch($object->fk_member);\n\t\t\t\t\t$adh->ref = $adh->getFullname($langs); // Force to show login instead of id\n\t\t\t\t\tprint $adh->getNomUrl(-1);\n\t\t\t\t} else {\n\t\t\t\t\tprint '<span class=\"opacitymedium hideonsmartphone\">'.$langs->trans(\"UserNotLinkedToMember\").'</span>';\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '</tr>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Signature\n\t\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans('Signature').'</td><td class=\"wordbreak\">';\n\t\t\tprint dol_htmlentitiesbr($object->signature);\n\t\t\tprint \"</td></tr>\\n\";\n\n\t\t\t// VCard\n\t\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"VCard\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint '<a href=\"'.DOL_URL_ROOT.'/user/vcard.php?id='.$object->id.'\">';\n\t\t\tprint img_picto($langs->trans(\"Download\"), 'vcard.png', 'class=\"paddingrightonly\"');\n\t\t\tprint $langs->trans(\"Download\");\n\t\t\tprint '</a>';\n\t\t\tprint \"</td></tr>\\n\";\n\n\t\t\tprint \"</table>\\n\";\n\n\t\t\t// Credentials\n\t\t\tprint '<div class=\"div-table-responsive-no-min\">';\n\t\t\tprint '<table class=\"border tableforfield margintable centpercent\">';\n\t\t\tprint '<tr class=\"liste_titre\"><td class=\"liste_titre\">';\n\t\t\tprint img_picto('', 'security', 'class=\"paddingleft pictofixedwidth\"').$langs->trans(\"Credentials\");\n\t\t\tprint '</td>';\n\t\t\tprint '<td class=\"liste_titre\"></td>';\n\t\t\tprint '</tr>';\n\n\t\t\t// Date login validity\n\t\t\tprint '<tr><td>'.$langs->trans(\"RangeOfLoginValidity\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($object->datestartvalidity) {\n\t\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"FromDate\").'</span> ';\n\t\t\t\tprint dol_print_date($object->datestartvalidity, 'day');\n\t\t\t}\n\t\t\tif ($object->dateendvalidity) {\n\t\t\t\tprint '<span class=\"opacitymedium\"> - '.$langs->trans(\"To\").'</span> ';\n\t\t\t\tprint dol_print_date($object->dateendvalidity, 'day');\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Password\n\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"Password\").'</td>';\n\n\t\t\tprint '<td class=\"wordbreak\">';\n\t\t\t$valuetoshow = '';\n\t\t\tif (preg_match('/ldap/', $dolibarr_main_authentication)) {\n\t\t\t\tif (!empty($object->ldap_sid)) {\n\t\t\t\t\tif ($passDoNotExpire) {\n\t\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').$langs->trans(\"LdapUacf_\".$statutUACF);\n\t\t\t\t\t} elseif ($userChangePassNextLogon) {\n\t\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').'<span class=\"warning\">'.$langs->trans(\"UserMustChangePassNextLogon\", $ldap->domainFQDN).'</span>';\n\t\t\t\t\t} elseif ($userDisabled) {\n\t\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').'<span class=\"warning\">'.$langs->trans(\"LdapUacf_\".$statutUACF, $ldap->domainFQDN).'</span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').$langs->trans(\"PasswordOfUserInLDAP\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').$langs->trans(\"PasswordOfUserInLDAP\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (preg_match('/http/', $dolibarr_main_authentication)) {\n\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').$langs->trans(\"HTTPBasicPassword\");\n\t\t\t}\n\t\t\tif (preg_match('/dolibarr/', $dolibarr_main_authentication)) {\n\t\t\t\tif ($object->pass) {\n\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '');\n\t\t\t\t\t$valuetoshow .= '<span class=\"opacitymedium\">'.$langs->trans(\"Hidden\").'</span>';\n\t\t\t\t} else {\n\t\t\t\t\tif ($user->admin && $user->id == $object->id) {\n\t\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '');\n\t\t\t\t\t\t//$valuetoshow .= '<span class=\"opacitymedium\">'.$langs->trans(\"Crypted\").' - </span>';\n\t\t\t\t\t\t$valuetoshow .= '<span class=\"opacitymedium\">'.$langs->trans(\"Hidden\").'</span>';\n\t\t\t\t\t\t// TODO Add a feature to reveal the hash\n\t\t\t\t\t\t$valuetoshow .= '<!-- Crypted into '.$object->pass_indatabase_crypted.' -->';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').'<span class=\"opacitymedium\">'.$langs->trans(\"Hidden\").'</span>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Other form for user password\n\t\t\t$parameters = array('valuetoshow' => $valuetoshow);\n\t\t\t$reshook = $hookmanager->executeHooks('printUserPasswordField', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\t\tif ($reshook > 0) {\n\t\t\t\t$valuetoshow = $hookmanager->resPrint; // to replace\n\t\t\t} else {\n\t\t\t\t$valuetoshow .= $hookmanager->resPrint; // to add\n\t\t\t}\n\n\t\t\tprint $valuetoshow;\n\t\t\tprint \"</td>\";\n\t\t\tprint '</tr>'.\"\\n\";\n\n\t\t\t// API key\n\t\t\tif (!empty($conf->api->enabled) && ($user->id == $id || $user->admin || $user->rights->api->apikey->generate)) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"ApiKey\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif (!empty($object->api_key)) {\n\t\t\t\t\tprint '<span class=\"opacitymedium\">';\n\t\t\t\t\tprint showValueWithClipboardCPButton($object->api_key, 1, $langs->trans(\"Hidden\"));\t\t// TODO Add an option to also reveal the hash, not only copy paste\n\t\t\t\t\tprint '</span>';\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"LastConnexion\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($object->datepreviouslogin) {\n\t\t\t\tprint dol_print_date($object->datepreviouslogin, \"dayhour\").' <span class=\"opacitymedium\">('.$langs->trans(\"Previous\").')</span>, ';\n\t\t\t}\n\t\t\tif ($object->datelastlogin) {\n\t\t\t\tprint dol_print_date($object->datelastlogin, \"dayhour\").' <span class=\"opacitymedium\">('.$langs->trans(\"Currently\").')</span>';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\tprint '</table></div>';\n\n\t\t\tprint '</div>';\n\n\t\t\tprint '</div>';\n\t\t\tprint '<div style=\"clear:both\"></div>';\n\n\n\t\t\tprint dol_get_fiche_end();\n\n\n\t\t\t/*\n\t\t\t * Buttons actions\n\t\t\t */\n\n\t\t\tprint '<div class=\"tabsAction\">';\n\n\t\t\t$parameters = array();\n\t\t\t$reshook = $hookmanager->executeHooks('addMoreActionsButtons', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\t\tif (empty($reshook)) {\n\t\t\t\tif (empty($user->socid)) {\n\t\t\t\t\tif (!empty($object->email)) {\n\t\t\t\t\t\t$langs->load(\"mails\");\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'&action=presend&mode=init#formmailbeforetitle\">'.$langs->trans('SendMail').'</a></div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$langs->load(\"mails\");\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NoEMail\")).'\">'.$langs->trans('SendMail').'</a></div>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($caneditfield && (empty($conf->multicompany->enabled) || !$user->entity || ($object->entity == $conf->entity) || ($conf->global->MULTICOMPANY_TRANSVERSE_MODE && $conf->entity == 1))) {\n\t\t\t\t\tif (!empty($conf->global->MAIN_ONLY_LOGIN_ALLOWED)) {\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"DisabledInMonoUserMode\")).'\">'.$langs->trans(\"Modify\").'</a></div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'&action=edit&token='.newToken().'\">'.$langs->trans(\"Modify\").'</a></div>';\n\t\t\t\t\t}\n\t\t\t\t} elseif ($caneditpassword && !$object->ldap_sid &&\n\t\t\t\t(empty($conf->multicompany->enabled) || !$user->entity || ($object->entity == $conf->entity) || ($conf->global->MULTICOMPANY_TRANSVERSE_MODE && $conf->entity == 1))) {\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'&action=edit&token='.newToken().'\">'.$langs->trans(\"EditPassword\").'</a></div>';\n\t\t\t\t}\n\n\t\t\t\t// Si on a un gestionnaire de generation de mot de passe actif\n\t\t\t\tif ($conf->global->USER_PASSWORD_GENERATED != 'none') {\n\t\t\t\t\tif ($object->statut == 0) {\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"UserDisabled\")).'\">'.$langs->trans(\"ReinitPassword\").'</a></div>';\n\t\t\t\t\t} elseif ($caneditpassword && $object->login && !$object->ldap_sid &&\n\t\t\t\t\t((empty($conf->multicompany->enabled) && $object->entity == $user->entity) || !$user->entity || ($object->entity == $conf->entity) || ($conf->global->MULTICOMPANY_TRANSVERSE_MODE && $conf->entity == 1))) {\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'&amp;action=password\">'.$langs->trans(\"ReinitPassword\").'</a></div>';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($object->statut == 0) {\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"UserDisabled\")).'\">'.$langs->trans(\"SendNewPassword\").'</a></div>';\n\t\t\t\t\t} elseif ($caneditpassword && $object->login && !$object->ldap_sid &&\n\t\t\t\t\t((empty($conf->multicompany->enabled) && $object->entity == $user->entity) || !$user->entity || ($object->entity == $conf->entity) || ($conf->global->MULTICOMPANY_TRANSVERSE_MODE && $conf->entity == 1))) {\n\t\t\t\t\t\tif ($object->email) {\n\t\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'&amp;action=passwordsend\">'.$langs->trans(\"SendNewPassword\").'</a></div>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NoEMail\")).'\">'.$langs->trans(\"SendNewPassword\").'</a></div>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Enable user\n\t\t\t\tif ($user->id <> $id && $candisableuser && $object->statut == 0 &&\n\t\t\t\t((empty($conf->multicompany->enabled) && $object->entity == $user->entity) || !$user->entity || ($object->entity == $conf->entity) || ($conf->global->MULTICOMPANY_TRANSVERSE_MODE && $conf->entity == 1))) {\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'&action=enable&token='.newToken().'\">'.$langs->trans(\"Reactivate\").'</a></div>';\n\t\t\t\t}\n\t\t\t\t// Disable user\n\t\t\t\tif ($user->id <> $id && $candisableuser && $object->statut == 1 &&\n\t\t\t\t((empty($conf->multicompany->enabled) && $object->entity == $user->entity) || !$user->entity || ($object->entity == $conf->entity) || ($conf->global->MULTICOMPANY_TRANSVERSE_MODE && $conf->entity == 1))) {\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionDelete\" href=\"'.$_SERVER['PHP_SELF'].'?action=disable&id='.$object->id.'&token='.newToken().'\">'.$langs->trans(\"DisableUser\").'</a></div>';\n\t\t\t\t} else {\n\t\t\t\t\tif ($user->id == $id) {\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.$langs->trans(\"CantDisableYourself\").'\">'.$langs->trans(\"DisableUser\").'</a></div>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Delete\n\t\t\t\tif ($user->id <> $id && $candisableuser &&\n\t\t\t\t((empty($conf->multicompany->enabled) && $object->entity == $user->entity) || !$user->entity || ($object->entity == $conf->entity) || ($conf->global->MULTICOMPANY_TRANSVERSE_MODE && $conf->entity == 1))) {\n\t\t\t\t\tif ($user->admin || !$object->admin) { // If user edited is admin, delete is possible on for an admin\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionDelete\" href=\"'.$_SERVER['PHP_SELF'].'?action=delete&token='.newToken().'&id='.$object->id.'\">'.$langs->trans(\"DeleteUser\").'</a></div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"MustBeAdminToDeleteOtherAdmin\")).'\">'.$langs->trans(\"DeleteUser\").'</a></div>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprint \"</div>\\n\";\n\n\n\n\t\t\t//Select mail models is same action as presend\n\t\t\tif (GETPOST('modelselected')) {\n\t\t\t\t$action = 'presend';\n\t\t\t}\n\n\t\t\t// Presend form\n\t\t\t$modelmail = 'user';\n\t\t\t$defaulttopic = 'Information';\n\t\t\t$diroutput = $conf->user->dir_output;\n\t\t\t$trackid = 'use'.$object->id;\n\n\t\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/card_presend.tpl.php';\n\n\t\t\tif ($action != 'presend' && $action != 'send') {\n\t\t\t\t/*\n\t\t\t\t * List of groups of user\n\t\t\t\t */\n\n\t\t\t\tif ($canreadgroup) {\n\t\t\t\t\tprint '<!-- Group section -->'.\"\\n\";\n\n\t\t\t\t\tprint load_fiche_titre($langs->trans(\"ListOfGroupsForUser\"), '', '');\n\n\t\t\t\t\t// On selectionne les groupes auquel fait parti le user\n\t\t\t\t\t$exclude = array();\n\n\t\t\t\t\t$usergroup = new UserGroup($db);\n\t\t\t\t\t$groupslist = $usergroup->listGroupsForUser($object->id, false);\n\n\t\t\t\t\tif (!empty($groupslist)) {\n\t\t\t\t\t\tforeach ($groupslist as $groupforuser) {\n\t\t\t\t\t\t\t$exclude[] = $groupforuser->id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Other form for add user to group\n\t\t\t\t\t$parameters = array('caneditgroup' => $caneditgroup, 'groupslist' => $groupslist, 'exclude' => $exclude);\n\t\t\t\t\t$reshook = $hookmanager->executeHooks('formAddUserToGroup', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\t\t\t\tprint $hookmanager->resPrint;\n\n\t\t\t\t\tif (empty($reshook)) {\n\t\t\t\t\t\tif ($caneditgroup) {\n\t\t\t\t\t\t\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">'.\"\\n\";\n\t\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\" />';\n\t\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"addgroup\" />';\n\t\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"page_y\" value=\"\" />';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprint '<table class=\"noborder centpercent\">'.\"\\n\";\n\t\t\t\t\t\tprint '<tr class=\"liste_titre\"><th class=\"liste_titre\">'.$langs->trans(\"Groups\").'</th>'.\"\\n\";\n\t\t\t\t\t\tprint '<th class=\"liste_titre right\">';\n\t\t\t\t\t\tif ($caneditgroup) {\n\t\t\t\t\t\t\tprint $form->select_dolgroups('', 'group', 1, $exclude, 0, '', '', $object->entity);\n\t\t\t\t\t\t\tprint ' &nbsp; ';\n\t\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"entity\" value=\"'.$conf->entity.'\" />';\n\t\t\t\t\t\t\tprint '<input type=\"submit\" class=\"button buttongen button-add reposition\" value=\"'.$langs->trans(\"Add\").'\" />';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint '</th></tr>'.\"\\n\";\n\n\t\t\t\t\t\t// List of groups of user\n\t\t\t\t\t\tif (!empty($groupslist)) {\n\t\t\t\t\t\t\tforeach ($groupslist as $group) {\n\t\t\t\t\t\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\t\t\t\t\t\tprint '<td>';\n\t\t\t\t\t\t\t\tif ($caneditgroup) {\n\t\t\t\t\t\t\t\t\tprint $group->getNomUrl(1);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tprint img_object($langs->trans(\"ShowGroup\"), \"group\").' '.$group->name;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t\t\t\tprint '<td class=\"right\">';\n\t\t\t\t\t\t\t\tif ($caneditgroup) {\n\t\t\t\t\t\t\t\t\tprint '<a class=\"reposition\" href=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'&action=removegroup&token='.newToken().'&group='.((int) $group->id).'\">';\n\t\t\t\t\t\t\t\t\tprint img_picto($langs->trans(\"RemoveFromGroup\"), 'unlink');\n\t\t\t\t\t\t\t\t\tprint '</a>';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tprint \"&nbsp;\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tprint \"</td></tr>\\n\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprint '<tr class=\"oddeven\"><td colspan=\"3\" class=\"opacitymedium\">'.$langs->trans(\"None\").'</td></tr>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprint \"</table>\";\n\n\t\t\t\t\t\tif ($caneditgroup) {\n\t\t\t\t\t\t\tprint '</form>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint \"<br>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t * Card in edit mode\n\t\t */\n\t\tif ($action == 'edit' && ($canedituser || $caneditfield || $caneditpassword || ($user->id == $object->id))) {\n\t\t\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'\" method=\"POST\" name=\"updateuser\" enctype=\"multipart/form-data\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"update\">';\n\t\t\tprint '<input type=\"hidden\" name=\"entity\" value=\"'.$object->entity.'\">';\n\n\t\t\tprint dol_get_fiche_head($head, 'user', $title, 0, 'user');\n\n\t\t\tprint '<table class=\"border centpercent\">';\n\n\t\t\t// Ref/ID\n\t\t\tif (!empty($conf->global->MAIN_SHOW_TECHNICAL_ID)) {\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"Ref\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint $object->id;\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '</tr>';\n\t\t\t}\n\n\t\t\t// Civility\n\t\t\tprint '<tr><td class=\"titlefieldcreate\"><label for=\"civility_code\">'.$langs->trans(\"UserTitle\").'</label></td><td colspan=\"3\">';\n\t\t\tif ($caneditfield && !$object->ldap_sid) {\n\t\t\t\tprint $formcompany->select_civility(GETPOSTISSET(\"civility_code\") ? GETPOST(\"civility_code\", 'aZ09') : $object->civility_code, 'civility_code');\n\t\t\t} elseif ($object->civility_code) {\n\t\t\t\tprint $langs->trans(\"Civility\".$object->civility_code);\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Lastname\n\t\t\tprint \"<tr>\";\n\t\t\tprint '<td class=\"titlefieldcreate fieldrequired\">'.$langs->trans(\"Lastname\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield && !$object->ldap_sid) {\n\t\t\t\tprint '<input class=\"minwidth100\" type=\"text\" class=\"flat\" name=\"lastname\" value=\"'.$object->lastname.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"lastname\" value=\"'.$object->lastname.'\">';\n\t\t\t\tprint $object->lastname;\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\n\t\t\t// Firstname\n\t\t\tprint \"<tr>\".'<td>'.$langs->trans(\"Firstname\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield && !$object->ldap_sid) {\n\t\t\t\tprint '<input class=\"minwidth100\" type=\"text\" class=\"flat\" name=\"firstname\" value=\"'.$object->firstname.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"firstname\" value=\"'.$object->firstname.'\">';\n\t\t\t\tprint $object->firstname;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Login\n\t\t\tprint \"<tr>\".'<td><span class=\"fieldrequired\">'.$langs->trans(\"Login\").'</span></td>';\n\t\t\tprint '<td>';\n\t\t\tif ($user->admin && !$object->ldap_sid) {\n\t\t\t\tprint '<input maxlength=\"50\" type=\"text\" class=\"flat\" name=\"login\" value=\"'.$object->login.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"login\" value=\"'.$object->login.'\">';\n\t\t\t\tprint $object->login;\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\n\t\t\t// Administrator\n\t\t\tprint '<tr><td>'.$langs->trans(\"Administrator\").'</td>';\n\t\t\tif ($object->socid > 0) {\n\t\t\t\t$langs->load(\"admin\");\n\t\t\t\tprint '<td>';\n\t\t\t\tprint '<input type=\"hidden\" name=\"admin\" value=\"'.$object->admin.'\">'.yn($object->admin);\n\t\t\t\tprint ' ('.$langs->trans(\"ExternalUser\").')';\n\t\t\t\tprint '</td></tr>';\n\t\t\t} else {\n\t\t\t\tprint '<td>';\n\t\t\t\t$nbAdmin = $user->getNbOfUsers('active', '', 1);\n\t\t\t\t$nbSuperAdmin = $user->getNbOfUsers('active', 'superadmin', 1);\n\t\t\t\t//var_dump($nbAdmin);\n\t\t\t\t//var_dump($nbSuperAdmin);\n\t\t\t\tif ($user->admin\t\t\t\t\t\t\t\t// Need to be admin to allow downgrade of an admin\n\t\t\t\t&& ($user->id != $object->id)                   // Don't downgrade ourself\n\t\t\t\t&& (\n\t\t\t\t\t(empty($conf->multicompany->enabled) && $nbAdmin >= 1)\n\t\t\t\t\t|| (!empty($conf->multicompany->enabled) && (($object->entity > 0 || ($user->entity == 0 && $object->entity == 0)) || $nbSuperAdmin > 1))    // Don't downgrade a superadmin if alone\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tprint $form->selectyesno('admin', $object->admin, 1);\n\n\t\t\t\t\tif (!empty($conf->multicompany->enabled) && !$user->entity) {\n\t\t\t\t\t\tif ($conf->use_javascript_ajax) {\n\t\t\t\t\t\t\tprint '<script type=\"text/javascript\">\n\t\t\t\t\t\t\t\t\t$(function() {\n\t\t\t\t\t\t\t\t\t\tvar admin = $(\"select[name=admin]\").val();\n\t\t\t\t\t\t\t\t\t\tif (admin == 0) {\n\t\t\t\t\t\t\t\t\t\t\t$(\"input[name=superadmin]\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"disabled\", true)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"checked\", false);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif ($(\"input[name=superadmin]\").is(\":checked\")) {\n\t\t\t\t\t\t\t\t\t\t\t$(\"select[name=entity]\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"disabled\", true);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t$(\"select[name=admin]\").change(function() {\n\t\t\t\t\t\t\t\t\t\t\t if ( $(this).val() == 0 ) {\n\t\t\t\t\t\t\t\t\t\t\t \t$(\"input[name=superadmin]\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"disabled\", true)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"checked\", false);\n\t\t\t\t\t\t\t\t\t\t\t \t$(\"select[name=entity]\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"disabled\", false);\n\t\t\t\t\t\t\t\t\t\t\t } else {\n\t\t\t\t\t\t\t\t\t\t\t \t$(\"input[name=superadmin]\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"disabled\", false);\n\t\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t$(\"input[name=superadmin]\").change(function() {\n\t\t\t\t\t\t\t\t\t\t\tif ( $(this).is(\":checked\")) {\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"select[name=entity]\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"disabled\", true);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"select[name=entity]\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.prop(\"disabled\", false);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t</script>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$checked = (($object->admin && !$object->entity) ? ' checked' : '');\n\t\t\t\t\t\tprint '<input type=\"checkbox\" name=\"superadmin\" id=\"superadmin\" value=\"1\"'.$checked.' /> <label for=\"superadmin\">'.$langs->trans(\"SuperAdministrator\").'</span>';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$yn = yn($object->admin);\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"admin\" value=\"'.$object->admin.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"superadmin\" value=\"'.(empty($object->entity) ? 1 : 0).'\">';\n\t\t\t\t\tif (!empty($conf->multicompany->enabled) && empty($object->entity)) {\n\t\t\t\t\t\tprint $form->textwithpicto($yn, $langs->trans(\"DontDowngradeSuperAdmin\"), 1, 'warning');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint $yn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Gender\n\t\t\tprint '<tr><td>'.$langs->trans(\"Gender\").'</td>';\n\t\t\tprint '<td>';\n\t\t\t$arraygender = array('man'=>$langs->trans(\"Genderman\"), 'woman'=>$langs->trans(\"Genderwoman\"), 'other'=>$langs->trans(\"Genderother\"));\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $form->selectarray('gender', $arraygender, GETPOSTISSET('gender') ?GETPOST('gender') : $object->gender, 1);\n\t\t\t} else {\n\t\t\t\tprint $arraygender[$object->gender];\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Employee\n\t\t\tprint '<tr>';\n\t\t\tprint '<td>'.$form->editfieldkey('Employee', 'employee', '', $object, 0).'</td><td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint '<input type=\"checkbox\" name=\"employee\" value=\"1\"'.($object->employee ? ' checked=\"checked\"' : '').'>';\n\t\t\t\t//print $form->selectyesno(\"employee\", $object->employee, 1);\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"checkbox\" name=\"employee\" disabled value=\"1\"'.($object->employee ? ' checked=\"checked\"' : '').'>';\n\t\t\t\t/*if ($object->employee) {\n\t\t\t\t\tprint $langs->trans(\"Yes\");\n\t\t\t\t} else {\n\t\t\t\t\tprint $langs->trans(\"No\");\n\t\t\t\t}*/\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Hierarchy\n\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"HierarchicalResponsible\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint img_picto('', 'user').$form->select_dolusers($object->fk_user, 'fk_user', 1, array($object->id), 0, '', 0, $object->entity, 0, 0, '', 0, '', 'widthcentpercentminusx maxwidth300');\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"fk_user\" value=\"'.$object->fk_user.'\">';\n\t\t\t\t$huser = new User($db);\n\t\t\t\t$huser->fetch($object->fk_user);\n\t\t\t\tprint $huser->getNomUrl(1);\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Expense report validator\n\t\t\tif (!empty($conf->expensereport->enabled)) {\n\t\t\t\tprint '<tr><td class=\"titlefield\">';\n\t\t\t\t$text = $langs->trans(\"ForceUserExpenseValidator\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint img_picto('', 'user').$form->select_dolusers($object->fk_user_expense_validator, 'fk_user_expense_validator', 1, array($object->id), 0, '', 0, $object->entity, 0, 0, '', 0, '', 'widthcentpercentminusx maxwidth300');\n\t\t\t\t} else {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"fk_user_expense_validator\" value=\"'.$object->fk_user_expense_validator.'\">';\n\t\t\t\t\t$evuser = new User($db);\n\t\t\t\t\t$evuser->fetch($object->fk_user_expense_validator);\n\t\t\t\t\tprint $evuser->getNomUrl(1);\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Holiday request validator\n\t\t\tif (!empty($conf->holiday->enabled)) {\n\t\t\t\tprint '<tr><td class=\"titlefield\">';\n\t\t\t\t$text = $langs->trans(\"ForceUserHolidayValidator\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint img_picto('', 'user').$form->select_dolusers($object->fk_user_holiday_validator, 'fk_user_holiday_validator', 1, array($object->id), 0, '', 0, $object->entity, 0, 0, '', 0, '', 'widthcentpercentminusx maxwidth300');\n\t\t\t\t} else {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"fk_user_holiday_validator\" value=\"'.$object->fk_user_holiday_validator.'\">';\n\t\t\t\t\t$hvuser = new User($db);\n\t\t\t\t\t$hvuser->fetch($object->fk_user_holiday_validator);\n\t\t\t\t\tprint $hvuser->getNomUrl(1);\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// External user ?\n\t\t\tprint '<tr><td>'.$langs->trans(\"ExternalUser\").' ?</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($user->id == $object->id || !$user->admin) {\n\t\t\t\t// Read mode\n\t\t\t\t$type = $langs->trans(\"Internal\");\n\t\t\t\tif ($object->socid) {\n\t\t\t\t\t$type = $langs->trans(\"External\");\n\t\t\t\t}\n\t\t\t\tprint $form->textwithpicto($type, $langs->trans(\"InternalExternalDesc\"));\n\t\t\t\tif ($object->ldap_sid) {\n\t\t\t\t\tprint ' ('.$langs->trans(\"DomainUser\").')';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Select mode\n\t\t\t\t$type = 0;\n\t\t\t\tif ($object->contact_id) {\n\t\t\t\t\t$type = $object->contact_id;\n\t\t\t\t}\n\n\t\t\t\tif ($object->socid > 0 && !($object->contact_id > 0)) {\t// external user but no link to a contact\n\t\t\t\t\tprint img_picto('', 'company').$form->select_company($object->socid, 'socid', '', '&nbsp;');\n\t\t\t\t\tprint img_picto('', 'contact').$form->selectcontacts(0, 0, 'contactid', 1, '', '', 1, '', false, 1);\n\t\t\t\t\tif ($object->ldap_sid) {\n\t\t\t\t\t\tprint ' ('.$langs->trans(\"DomainUser\").')';\n\t\t\t\t\t}\n\t\t\t\t} elseif ($object->socid > 0 && $object->contact_id > 0) {\t// external user with a link to a contact\n\t\t\t\t\tprint img_picto('', 'company').$form->select_company(0, 'socid', '', '&nbsp;'); // We keep thirdparty empty, contact is already set\n\t\t\t\t\tprint img_picto('', 'contact').$form->selectcontacts(0, $object->contact_id, 'contactid', 1, '', '', 1, '', false, 1);\n\t\t\t\t\tif ($object->ldap_sid) {\n\t\t\t\t\t\tprint ' ('.$langs->trans(\"DomainUser\").')';\n\t\t\t\t\t}\n\t\t\t\t} else {\t// $object->socid is not > 0 here\n\t\t\t\t\tprint img_picto('', 'company').$form->select_company(0, 'socid', '', '&nbsp;'); // We keep thirdparty empty, contact is already set\n\t\t\t\t\tprint img_picto('', 'contact').$form->selectcontacts(0, 0, 'contactid', 1, '', '', 1, '', false, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\n\t\t\tprint '</table><hr><table class=\"border centpercent\">';\n\n\n\t\t\t// Date access validity\n\t\t\tprint '<tr><td>'.$langs->trans(\"RangeOfLoginValidity\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $form->selectDate($datestartvalidity ? $datestartvalidity : $object->datestartvalidity, 'datestartvalidity', 0, 0, 1, 'formdatestartvalidity', 1, 1, 0, '', '', '', '', 1, '', '');\n\t\t\t} else {\n\t\t\t\tprint dol_print_date($object->datestartvalidity, 'day');\n\t\t\t}\n\n\t\t\t/*if ($datestartvalidity && $dateendvalidity) {\n\t\t\t\tprint ' - ';\n\t\t\t}*/\n\t\t\tprint ' &nbsp; ';\n\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $form->selectDate($dateendvalidity ? $datendevalidity : $object->dateendvalidity, 'dateendvalidity', 0, 0, 1, 'formdateendvalidity', 1, 0, 0, '', '', '', '', 1, '', '');\n\t\t\t} else {\n\t\t\t\tprint dol_print_date($object->dateendvalidity, 'day');\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Pass\n\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"Password\").'</td>';\n\t\t\tprint '<td>';\n\t\t\t$valuetoshow = '';\n\t\t\tif (preg_match('/ldap/', $dolibarr_main_authentication)) {\n\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').$langs->trans(\"PasswordOfUserInLDAP\");\n\t\t\t}\n\t\t\tif (preg_match('/http/', $dolibarr_main_authentication)) {\n\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').$form->textwithpicto($text, $langs->trans(\"DolibarrInHttpAuthenticationSoPasswordUseless\", $dolibarr_main_authentication), 1, 'warning');\n\t\t\t}\n\t\t\tif (preg_match('/dolibarr/', $dolibarr_main_authentication)) {\n\t\t\t\tif ($caneditpassword) {\n\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').'<input maxlength=\"128\" type=\"password\" class=\"flat\" name=\"password\" value=\"'.$object->pass.'\" autocomplete=\"new-password\">';\n\t\t\t\t} else {\n\t\t\t\t\t$valuetoshow .= ($valuetoshow ? (' '.$langs->trans(\"or\").' ') : '').preg_replace('/./i', '*', $object->pass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Other form for user password\n\t\t\t$parameters = array('valuetoshow' => $valuetoshow, 'caneditpassword' => $caneditpassword);\n\t\t\t$reshook = $hookmanager->executeHooks('printUserPasswordField', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\t\tif ($reshook > 0) {\n\t\t\t\t$valuetoshow = $hookmanager->resPrint; // to replace\n\t\t\t} else {\n\t\t\t\t$valuetoshow .= $hookmanager->resPrint; // to add\n\t\t\t}\n\n\t\t\tprint $valuetoshow;\n\t\t\tprint \"</td></tr>\\n\";\n\n\t\t\t// API key\n\t\t\tif (!empty($conf->api->enabled) && ($user->id == $id || $user->admin || $user->rights->api->apikey->generate)) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"ApiKey\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint '<input class=\"minwidth300\" maxsize=\"32\" type=\"text\" id=\"api_key\" name=\"api_key\" value=\"'.$object->api_key.'\" autocomplete=\"off\">';\n\t\t\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\t\t\tprint '&nbsp;'.img_picto($langs->trans('Generate'), 'refresh', 'id=\"generate_api_key\" class=\"linkobject\"');\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// OpenID url\n\t\t\tif (isset($conf->file->main_authentication) && preg_match('/openid/', $conf->file->main_authentication) && !empty($conf->global->MAIN_OPENIDURL_PERUSER)) {\n\t\t\t\tprint \"<tr>\".'<td>'.$langs->trans(\"OpenIDURL\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint '<input class=\"minwidth100\" type=\"url\" name=\"openid\" class=\"flat\" value=\"'.$object->openid.'\">';\n\t\t\t\t} else {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"openid\" value=\"'.$object->openid.'\">';\n\t\t\t\t\tprint $object->openid;\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\tprint '</table><hr><table class=\"border centpercent\">';\n\n\n\t\t\t// Address\n\t\t\tprint '<tr><td class=\"tdtop titlefieldcreate\">'.$form->editfieldkey('Address', 'address', '', $object, 0).'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint '<textarea name=\"address\" id=\"address\" class=\"quatrevingtpercent\" rows=\"3\" wrap=\"soft\">';\n\t\t\t}\n\t\t\tprint $object->address;\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint '</textarea>';\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Zip\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Zip', 'zipcode', '', $object, 0).'</td><td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $formcompany->select_ziptown($object->zip, 'zipcode', array('town', 'selectcountry_id', 'state_id'), 6);\n\t\t\t} else {\n\t\t\t\tprint $object->zip;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Town\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Town', 'town', '', $object, 0).'</td><td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $formcompany->select_ziptown($object->town, 'town', array('zipcode', 'selectcountry_id', 'state_id'));\n\t\t\t} else {\n\t\t\t\tprint $object->town;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Country\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Country', 'selectcounty_id', '', $object, 0).'</td><td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $form->select_country((GETPOST('country_id') != '' ?GETPOST('country_id') : $object->country_id), 'country_id');\n\t\t\t\tif ($user->admin) {\n\t\t\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$countrylabel = getCountry($object->country_id, '0');\n\t\t\t\tprint $countrylabel;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// State\n\t\t\tif (empty($conf->global->USER_DISABLE_STATE)) {\n\t\t\t\tprint '<tr><td class=\"tdoverflow\">'.$form->editfieldkey('State', 'state_id', '', $object, 0).'</td><td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint img_picto('', 'state', 'class=\"pictofixedwidth\"');\n\t\t\t\t\tprint $formcompany->select_state($object->state_id, $object->country_code, 'state_id');\n\t\t\t\t} else {\n\t\t\t\t\tprint $object->state_label;\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Tel pro\n\t\t\tprint \"<tr>\".'<td>'.$langs->trans(\"PhonePro\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint img_picto('', 'phoning', 'class=\"pictofixedwidth\"');\n\t\t\tif ($caneditfield && empty($object->ldap_sid)) {\n\t\t\t\tprint '<input type=\"text\" name=\"office_phone\" class=\"flat maxwidth200\" value=\"'.$object->office_phone.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"office_phone\" value=\"'.$object->office_phone.'\">';\n\t\t\t\tprint $object->office_phone;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Tel mobile\n\t\t\tprint \"<tr>\".'<td>'.$langs->trans(\"PhoneMobile\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint img_picto('', 'phoning_mobile', 'class=\"pictofixedwidth\"');\n\t\t\tif ($caneditfield && empty($object->ldap_sid)) {\n\t\t\t\tprint '<input type=\"text\" name=\"user_mobile\" class=\"flat maxwidth200\" value=\"'.$object->user_mobile.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"user_mobile\" value=\"'.$object->user_mobile.'\">';\n\t\t\t\tprint $object->user_mobile;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Fax\n\t\t\tprint \"<tr>\".'<td>'.$langs->trans(\"Fax\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint img_picto('', 'phoning_fax', 'class=\"pictofixedwidth\"');\n\t\t\tif ($caneditfield && empty($object->ldap_sid)) {\n\t\t\t\tprint '<input type=\"text\" name=\"office_fax\" class=\"flat maxwidth200\" value=\"'.$object->office_fax.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"office_fax\" value=\"'.$object->office_fax.'\">';\n\t\t\t\tprint $object->office_fax;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// EMail\n\t\t\tprint \"<tr>\".'<td'.(!empty($conf->global->USER_MAIL_REQUIRED) ? ' class=\"fieldrequired\"' : '').'>'.$langs->trans(\"EMail\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint img_picto('', 'object_email', 'class=\"pictofixedwidth\"');\n\t\t\tif ($caneditfield && empty($object->ldap_sid)) {\n\t\t\t\tprint '<input class=\"minwidth100 maxwidth500 widthcentpercentminusx\" type=\"text\" name=\"email\" class=\"flat\" value=\"'.$object->email.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"email\" value=\"'.$object->email.'\">';\n\t\t\t\tprint $object->email;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\t\tif ($value['active']) {\n\t\t\t\t\t\tprint '<tr><td>'.$langs->trans($value['label']).'</td>';\n\t\t\t\t\t\tprint '<td>';\n\t\t\t\t\t\tif (!empty($value['icon'])) {\n\t\t\t\t\t\t\tprint '<span class=\"fa '.$value['icon'].' pictofixedwidth\"></span>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($caneditfield && empty($object->ldap_sid)) {\n\t\t\t\t\t\t\tprint '<input type=\"text\" name=\"'.$key.'\" class=\"flat maxwidth200\" value=\"'.$object->socialnetworks[$key].'\">';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"'.$key.'\" value=\"'.$object->socialnetworks[$key].'\">';\n\t\t\t\t\t\t\tprint $object->socialnetworks[$key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if social network is not active but value exist we do not want to loose it\n\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"'.$key.'\" value=\"'.$object->socialnetworks[$key].'\">';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprint '</table><hr><table class=\"border centpercent\">';\n\n\t\t\t// Default warehouse\n\t\t\tif (!empty($conf->stock->enabled) && !empty($conf->global->MAIN_DEFAULT_WAREHOUSE_USER)) {\n\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"DefaultWarehouse\").'</td><td>';\n\t\t\t\tprint $formproduct->selectWarehouses($object->fk_warehouse, 'fk_warehouse', 'warehouseopen', 1);\n\t\t\t\tprint ' <a href=\"'.DOL_URL_ROOT.'/product/stock/card.php?action=create&token='.newToken().'&backtopage='.urlencode($_SERVER['PHP_SELF'].'?id='.$object->id.'&action=edit&token='.newToken()).'\"><span class=\"fa fa-plus-circle valignmiddle paddingleft\" title=\"'.$langs->trans(\"AddWarehouse\").'\"></span></a>';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Accountancy code\n\t\t\tif (!empty($conf->accounting->enabled)) {\n\t\t\t\tprint \"<tr>\";\n\t\t\t\tprint '<td class=\"titlefieldcreate\">'.$langs->trans(\"AccountancyCode\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint '<input type=\"text\" class=\"flat maxwidth300\" name=\"accountancy_code\" value=\"'.$object->accountancy_code.'\">';\n\t\t\t\t} else {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"accountancy_code\" value=\"'.$object->accountancy_code.'\">';\n\t\t\t\t\tprint $object->accountancy_code;\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\";\n\t\t\t}\n\n\t\t\t// User color\n\t\t\tif (!empty($conf->agenda->enabled)) {\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ColorUser\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint $formother->selectColor(GETPOSTISSET('color') ?GETPOST('color', 'alphanohtml') : $object->color, 'color', null, 1, '', 'hideifnotset');\n\t\t\t\t} else {\n\t\t\t\t\tprint $formother->showColor($object->color, '');\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Photo\n\t\t\tprint '<tr>';\n\t\t\tprint '<td class=\"titlefieldcreate\">'.$langs->trans(\"Photo\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint $form->showphoto('userphoto', $object, 60, 0, $caneditfield, 'photowithmargin', 'small', 1, 0, 'user', 1);\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\n\t\t\t// Categories\n\t\t\tif (!empty($conf->categorie->enabled) && !empty($user->rights->categorie->lire)) {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey('Categories', 'usercats', '', $object, 0).'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint img_picto('', 'category', 'class=\"pictofixedwidth\"');\n\t\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_USER, null, null, null, null, 1);\n\t\t\t\t$c = new Categorie($db);\n\t\t\t\t$cats = $c->containing($object->id, Categorie::TYPE_USER);\n\t\t\t\tforeach ($cats as $cat) {\n\t\t\t\t\t$arrayselected[] = $cat->id;\n\t\t\t\t}\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint $form->multiselectarray('usercats', $cate_arbo, $arrayselected, '', 0, '', 0, '90%');\n\t\t\t\t} else {\n\t\t\t\t\tprint $form->showCategories($object->id, Categorie::TYPE_USER, 1);\n\t\t\t\t}\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\n\t\t\t// Default language\n\t\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey('DefaultLang', 'default_lang', '', $object, 0, 'string', '', 0, 0, 'id', $langs->trans(\"WarningNotLangOfInterface\", $langs->transnoentitiesnoconv(\"UserGUISetup\"))).'</td><td colspan=\"3\">'.\"\\n\";\n\t\t\t\tprint img_picto('', 'language', 'class=\"pictofixedwidth\"').$formadmin->select_language($object->lang, 'default_lang', 0, null, '1', 0, 0, 'widthcentpercentminusx maxwidth300');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '</tr>';\n\t\t\t}\n\n\t\t\t// Status\n\t\t\tprint '<tr><td>'.$langs->trans(\"Status\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint $object->getLibStatut(4);\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Company / Contact\n\t\t\tif (!empty($conf->societe->enabled)) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"LinkToCompanyContact\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($object->socid > 0) {\n\t\t\t\t\t$societe = new Societe($db);\n\t\t\t\t\t$societe->fetch($object->socid);\n\t\t\t\t\tprint $societe->getNomUrl(1, '');\n\t\t\t\t\tif ($object->contact_id) {\n\t\t\t\t\t\t$contact = new Contact($db);\n\t\t\t\t\t\t$contact->fetch($object->contact_id);\n\t\t\t\t\t\tprint ' / <a href=\"'.DOL_URL_ROOT.'/contact/card.php?id='.$object->contact_id.'\">'.img_object($langs->trans(\"ShowContact\"), 'contact').' '.dol_trunc($contact->getFullName($langs), 32).'</a>';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint '<span class=\"opacitymedium hideonsmartphone\">'.$langs->trans(\"ThisUserIsNot\").'</span>';\n\t\t\t\t}\n\t\t\t\tprint ' <span class=\"opacitymedium hideonsmartphone\">('.$langs->trans(\"UseTypeFieldToChange\").')</span>';\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Module Adherent\n\t\t\tif (!empty($conf->adherent->enabled)) {\n\t\t\t\t$langs->load(\"members\");\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"LinkedToDolibarrMember\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($object->fk_member) {\n\t\t\t\t\t$adh = new Adherent($db);\n\t\t\t\t\t$adh->fetch($object->fk_member);\n\t\t\t\t\t$adh->ref = $adh->login; // Force to show login instead of id\n\t\t\t\t\tprint $adh->getNomUrl(1);\n\t\t\t\t} else {\n\t\t\t\t\tprint '<span class=\"opacitymedium hideonsmartphone\">'.$langs->trans(\"UserNotLinkedToMember\").'</span>';\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Multicompany\n\t\t\t// TODO check if user not linked with the current entity before change entity (thirdparty, invoice, etc.) !!\n\t\t\tif (!empty($conf->multicompany->enabled) && is_object($mc)) {\n\t\t\t\t// This is now done with hook formObjectOptions. Keep this code for backward compatibility with old multicompany module\n\t\t\t\tif (!method_exists($mc, 'formObjectOptions')) {\n\t\t\t\t\tif (empty($conf->multicompany->transverse_mode) && $conf->entity == 1 && $user->admin && !$user->entity) {\n\t\t\t\t\t\tprint \"<tr>\".'<td>'.$langs->trans(\"Entity\").'</td>';\n\t\t\t\t\t\tprint \"<td>\".$mc->select_entities($object->entity, 'entity', '', 0, 1, false, false, 1); // last parameter 1 means, show also a choice 0=>'all entities'\n\t\t\t\t\t\tprint \"</td></tr>\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"entity\" value=\"'.$conf->entity.'\" />';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Other attributes\n\t\t\t$parameters = array('colspan' => ' colspan=\"2\"');\n\t\t\t//include DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_edit.tpl.php';\t\t// We do not use common tpl here because we need a special test on $caneditfield\n\t\t\t$reshook = $hookmanager->executeHooks('formObjectOptions', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\t\tprint $hookmanager->resPrint;\n\t\t\tif (empty($reshook)) {\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint $object->showOptionals($extrafields, 'edit');\n\t\t\t\t} else {\n\t\t\t\t\tprint $object->showOptionals($extrafields, 'view');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Signature\n\t\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"Signature\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\t\t\t\t$doleditor = new DolEditor('signature', $object->signature, '', 138, 'dolibarr_notes', 'In', false, true, empty($conf->global->FCKEDITOR_ENABLE_USERSIGN) ? 0 : 1, ROWS_4, '90%');\n\t\t\t\tprint $doleditor->Create(1);\n\t\t\t} else {\n\t\t\t\tprint dol_htmlentitiesbr($object->signature);\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\n\t\t\tprint '</table>';\n\n\t\t\tprint '<hr>';\n\n\n\t\t\tprint '<table class=\"border centpercent\">';\n\n\n\t\t\t// TODO Move this into tab RH (HierarchicalResponsible must be on both tab)\n\n\t\t\t// Position/Job\n\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"PostOrFunction\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint '<input type=\"text\" class=\"minwidth300 maxwidth500\" name=\"job\" value=\"'.dol_escape_htmltag($object->job).'\">';\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"job\" value=\"'.dol_escape_htmltag($object->job).'\">';\n\t\t\t\tprint dol_escape_htmltag($object->job);\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Weeklyhours\n\t\t\tprint '<tr><td>'.$langs->trans(\"WeeklyHours\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint '<input size=\"8\" type=\"text\" name=\"weeklyhours\" value=\"'.price2num(GETPOST('weeklyhours') ?GETPOST('weeklyhours') : $object->weeklyhours).'\">';\n\t\t\t} else {\n\t\t\t\tprint price2num($object->weeklyhours);\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Sensitive salary/value information\n\t\t\tif ((empty($user->socid) && in_array($id, $childids))\t// A user can always see salary/value information for its subordinates\n\t\t\t\t|| (!empty($conf->salaries->enabled) && !empty($user->rights->salaries->readall))\n\t\t\t\t|| (!empty($conf->hrm->enabled) && !empty($user->rights->hrm->employee->read))) {\n\t\t\t\t\t$langs->load(\"salaries\");\n\n\t\t\t\t// Salary\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"Salary\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint img_picto('', 'salary', 'class=\"pictofixedwidth paddingright\"').'<input size=\"8\" type=\"text\" name=\"salary\" value=\"'.price2num(GETPOST('salary') ?GETPOST('salary') : $object->salary).'\">';\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\n\t\t\t\t// THM\n\t\t\t\tprint '<tr><td>';\n\t\t\t\t$text = $langs->trans(\"THM\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"THMDescription\"), 1, 'help', 'classthm');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint '<input size=\"8\" type=\"text\" name=\"thm\" value=\"'.price2num(GETPOST('thm') ?GETPOST('thm') : $object->thm).'\">';\n\t\t\t\t} else {\n\t\t\t\t\tprint ($object->thm != '' ?price($object->thm, '', $langs, 1, -1, -1, $conf->currency) : '');\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\n\t\t\t\t// TJM\n\t\t\t\tprint '<tr><td>';\n\t\t\t\t$text = $langs->trans(\"TJM\");\n\t\t\t\tprint $form->textwithpicto($text, $langs->trans(\"TJMDescription\"), 1, 'help', 'classthm');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tif ($caneditfield) {\n\t\t\t\t\tprint '<input size=\"8\" type=\"text\" name=\"tjm\" value=\"'.price2num(GETPOST('tjm') ?GETPOST('tjm') : $object->tjm).'\">';\n\t\t\t\t} else {\n\t\t\t\t\tprint ($object->tjm != '' ?price($object->tjm, '', $langs, 1, -1, -1, $conf->currency) : '');\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\n\t\t\t// Date employment\n\t\t\tprint '<tr><td>'.$langs->trans(\"DateEmployment\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $form->selectDate($dateemployment ? $dateemployment : $object->dateemployment, 'dateemployment', 0, 0, 1, 'formdateemployment', 1, 1);\n\t\t\t} else {\n\t\t\t\tprint dol_print_date($object->dateemployment, 'day');\n\t\t\t}\n\n\t\t\tif ($dateemployment && $dateemploymentend) {\n\t\t\t\tprint ' - ';\n\t\t\t}\n\n\t\t\tif ($caneditfield) {\n\t\t\t\tprint $form->selectDate($dateemploymentend ? $dateemploymentend : $object->dateemploymentend, 'dateemploymentend', 0, 0, 1, 'formdateemploymentend', 1, 0);\n\t\t\t} else {\n\t\t\t\tprint dol_print_date($object->dateemploymentend, 'day');\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\t// Date birth\n\t\t\tprint '<tr><td>'.$langs->trans(\"DateOfBirth\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tif ($caneditfield) {\n\t\t\t\techo $form->selectDate($dateofbirth ? $dateofbirth : $object->birth, 'dateofbirth', 0, 0, 1, 'updateuser', 1, 0);\n\t\t\t} else {\n\t\t\t\tprint dol_print_date($object->birth, 'day');\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\tprint '</table>';\n\n\t\t\tprint dol_get_fiche_end();\n\n\t\t\tprint '<div class=\"center\">';\n\t\t\tprint '<input value=\"'.$langs->trans(\"Save\").'\" class=\"button button-save\" type=\"submit\" name=\"save\">';\n\t\t\tprint '&nbsp; &nbsp; &nbsp;';\n\t\t\tprint '<input value=\"'.$langs->trans(\"Cancel\").'\" class=\"button button-cancel\" type=\"submit\" name=\"cancel\">';\n\t\t\tprint '</div>';\n\n\t\t\tprint '</form>';\n\t\t}\n\n\t\tif ($action != 'edit' && $action != 'presend') {\n\t\t\tprint '<div class=\"fichecenter\"><div class=\"fichehalfleft\">';\n\n\t\t\t// Generated documents\n\t\t\t$filename = dol_sanitizeFileName($object->ref);\n\t\t\t$filedir = $conf->user->dir_output.\"/\".dol_sanitizeFileName($object->ref);\n\t\t\t$urlsource = $_SERVER[\"PHP_SELF\"].\"?id=\".$object->id;\n\t\t\t$genallowed = $user->rights->user->user->lire;\n\t\t\t$delallowed = $user->rights->user->user->creer;\n\n\t\t\tprint $formfile->showdocuments('user', $filename, $filedir, $urlsource, $genallowed, $delallowed, $object->model_pdf, 1, 0, 0, 28, 0, '', 0, '', empty($soc->default_lang) ? '' : $soc->default_lang);\n\t\t\t$somethingshown = $formfile->numoffiles;\n\n\t\t\t// Show links to link elements\n\t\t\t$linktoelem = $form->showLinkToObjectBlock($object, null, null);\n\t\t\t$somethingshown = $form->showLinkedObjectBlock($object, $linktoelem);\n\n\t\t\tprint '</div><div class=\"fichehalfright\">';\n\n\t\t\t// List of actions on element\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formactions.class.php';\n\t\t\t$formactions = new FormActions($db);\n\t\t\t$somethingshown = $formactions->showactions($object, 'user', $socid, 1);\n\n\t\t\tprint '</div></div>';\n\t\t}\n\n\t\tif (!empty($conf->ldap->enabled) && !empty($object->ldap_sid)) {\n\t\t\t$ldap->unbind();\n\t\t}\n\t}\n}\n\nif (!empty($conf->api->enabled) && !empty($conf->use_javascript_ajax)) {\n\tprint \"\\n\".'<script type=\"text/javascript\">';\n\tprint '$(document).ready(function () {\n            $(\"#generate_api_key\").click(function() {\n                $.get( \"'.DOL_URL_ROOT.'/core/ajax/security.php\", {\n                    action: \\'getrandompassword\\',\n                    generic: true\n                },\n                function(token) {\n                    $(\"#api_key\").val(token);\n                });\n            });\n    });';\n\tprint '</script>';\n}\n\n// End of page\nllxFooter();\n$db->close();\n"], "filenames": ["htdocs/core/class/html.form.class.php", "htdocs/core/lib/files.lib.php", "htdocs/install/upgrade2.php", "htdocs/user/card.php"], "buggy_code_start_loc": [9098, 2351, 457, 546], "buggy_code_end_loc": [9105, 2452, 4514, 554], "fixing_code_start_loc": [9098, 2351, 458, 546], "fixing_code_end_loc": [9105, 2458, 4609, 554], "type": "CWE-639", "message": "Improper Access Control (IDOR) in GitHub repository dolibarr/dolibarr prior to 16.0.", "other": {"cve": {"id": "CVE-2022-0731", "sourceIdentifier": "security@huntr.dev", "published": "2022-02-23T19:15:08.520", "lastModified": "2022-11-17T17:39:03.413", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Improper Access Control (IDOR) in GitHub repository dolibarr/dolibarr prior to 16.0."}, {"lang": "es", "value": "Un Control de Acceso Inapropiado (IDOR) en el repositorio de GitHub dolibarr/dolibarr versiones anteriores a 16.0"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.5}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-639"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-284"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dolibarr:dolibarr_erp\\/crm:*:*:*:*:*:*:*:*", "versionEndExcluding": "16.0.0", "matchCriteriaId": "2A8BD8F5-3FDF-4FF2-8291-C5C9F6C2310A"}]}]}], "references": [{"url": "https://github.com/dolibarr/dolibarr/commit/209ab708d4b65fbd88ba4340d60b7822cb72651a", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/e242ab4e-fc70-4b2c-a42d-5b3ee4895de8", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/dolibarr/dolibarr/commit/209ab708d4b65fbd88ba4340d60b7822cb72651a"}}