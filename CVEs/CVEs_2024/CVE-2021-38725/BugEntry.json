{"buggy_code": ["<?php\nclass Login extends CI_Controller {\n\n\tpublic function __construct()\n\t{\n\t\tparent::__construct();\n\n\t\t// for flash data\n\t\t$this->load->library('session');\n\n\t\tif (!$this->fuel->config('admin_enabled')) show_404();\n\n\t\t$this->load->vars(array(\n\t\t\t'js' => '', \n\t\t\t'css' => css($this->fuel->config('xtra_css')), // use CSS function here because of the asset library path changes below\n\t\t\t'js_controller_params' => array(), \n\t\t\t'keyboard_shortcuts' => $this->fuel->config('keyboard_shortcuts')));\n\n\t\t// change assets path to admin\n\t\t$this->asset->assets_path = $this->fuel->config('fuel_assets_path');\n\n\t\t// set asset output settings\n\t\t$this->asset->assets_output = $this->fuel->config('fuel_assets_output');\n\t\t\n\t\t$this->lang->load('fuel');\n\t\t$this->load->helper('ajax');\n\t\t$this->load->library('form_builder');\n\n\t\t$this->load->module_model(FUEL_FOLDER, 'fuel_users_model');\n\n\t\t// set configuration paths for assets in case they are different from front end\n\t\t$this->asset->assets_module ='fuel';\n\t\t$this->asset->assets_folders = array(\n\t\t\t\t'images' => 'images/',\n\t\t\t\t'css' => 'css/',\n\t\t\t\t'js' => 'js/',\n\t\t\t);\n\n\t}\n\n\tpublic function index()\n\t{\n\t\t// check if it's a password request and redirect'\n\t\tif ($this->uri->segment(3) == 'pwd_reset')\n\t\t{\n\t\t\t$this->pwd_reset();\n\t\t\treturn;\n\t\t}\n\t\telse if ($this->uri->segment(3) == 'dev')\n\t\t{\n\t\t\t$this->dev();\n\t\t\treturn;\n\t\t}\n\t\telse if ($this->uri->segment(3) == 'reset')\n\t\t{\n\t\t\t$this->reset_password();\n\t\t\treturn;\n\t\t}\n\n\t\t$this->js_controller_params['method'] = 'add_edit';\n\n\t\t$this->load->helper('convert');\n\t\t$this->load->helper('cookie');\n\n\t\t$session_key = $this->fuel->auth->get_session_namespace();\n\n\t\t$user_data = $this->session->userdata($session_key);\n\n\t\tif ( ! empty($_POST))\n\t\t{\n\t\t\t// check if they are locked out out or not\n\t\t\tif (isset($user_data['failed_login_timer']) AND (time() - $user_data['failed_login_timer']) < (int)$this->fuel->config('seconds_to_unlock'))\n\t\t\t{\n \t\t\t\t$this->fuel_users_model->add_error(lang('error_max_attempts', $this->fuel->config('seconds_to_unlock')));\n\t\t\t\t$user_data['failed_login_timer'] = time();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ($this->input->post('user_name') AND $this->input->post('password'))\n\t\t\t\t{\n\t\t\t\t\tif ($this->fuel->auth->login($this->input->post('user_name', TRUE), $this->input->post('password', TRUE)))\n\t\t\t\t\t{\n\t\t\t\t\t\t// reset failed login attempts\n\t\t\t\t\t\t$user_data['failed_login_timer'] = 0;\n\t\t\t\t\t\t// set the cookie for viewing the live site with added FUEL capabilities\n\t\t\t\t\t\t$config = array(\n\t\t\t\t\t\t\t'name' => $this->fuel->auth->get_fuel_trigger_cookie_name(), \n\t\t\t\t\t\t\t'value' => serialize(array('id' => $this->fuel->auth->user_data('id'), 'language' => $this->fuel->auth->user_data('language'))),\n\t\t\t\t\t\t\t'expire' => 0,\n\t\t\t\t\t\t\t//'path' => WEB_PATH\n\t\t\t\t\t\t\t'path' => $this->fuel->config('fuel_cookie_path')\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tset_cookie($config);\n\n\t\t\t\t\t\t$forward = $this->input->post('forward');\n\t\t\t\t\t\t$forward_uri = uri_safe_decode($forward);\n\n\t\t\t\t\t\t# Check URL for naughty forwarding\n\t\t\t\t\t\t$parsed_url = parse_url($forward_uri); \n\t\t\t\t\t\t$host = array_key_exists('host', $parsed_url) ? $parsed_url['host'] : null;\n\n\t\t\t\t\t\tif ($forward AND ($forward_uri != $this->fuel->config('login_redirect')) AND ($host === null))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tredirect($forward_uri);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tredirect($this->fuel->config('login_redirect'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// check if they are no longer in the locked out state and reset variables\n\t\t\t\t\t\tif (isset($user_data['failed_login_timer']) AND (time() - $user_data['failed_login_timer']) > (int)$this->fuel->config('seconds_to_unlock'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$user_data['failed_login_attempts'] = 0;\n\t\t\t\t\t\t\t$this->session->unset_userdata('failed_login_timer');\n\t\t\t\t\t\t\tunset($user_data['failed_login_timer']);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// add to the number of attempts if it's an invalid login'\n\t\t\t\t\t\t\t$num_attempts = (!isset($user_data['failed_login_attempts'])) ? 0 : $user_data['failed_login_attempts'] + 1;\n\t\t\t\t\t\t\t$user_data['failed_login_attempts'] = $num_attempts;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// check if they should be locked out\n\t\t\t\t\t\tif (isset($user_data['failed_login_attempts']) AND $user_data['failed_login_attempts'] >= (int)$this->fuel->config('num_logins_before_lock') -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$this->fuel_users_model->add_error(lang('error_max_attempts', $this->fuel->config('seconds_to_unlock')));\n\t\t\t\t\t\t\t$user_data['failed_login_timer'] = time();\n\t\t\t\t\t\t\t$this->fuel->logs->write(lang('auth_log_account_lockout', $this->input->post('user_name', TRUE), $this->input->ip_address()), 'debug');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$this->fuel_users_model->add_error(lang('error_invalid_login'));\n\t\t\t\t\t\t\t$this->fuel->logs->write(lang('auth_log_failed_login', $this->input->post('user_name', TRUE), $this->input->ip_address(), ($user_data['failed_login_attempts'] + 1)), 'debug');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$this->fuel_users_model->add_error(lang('error_empty_user_pwd'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$this->session->set_userdata($session_key, $user_data);\n\t\t}\n\t\t\n\t\t// build form\n\t\t$this->form_builder->set_validator($this->fuel_users_model->get_validation());\n\t\t$fields['user_name'] = array('size' => 25, 'placeholder' => 'username', 'display_label' => FALSE);\n\t\t$fields['password'] = array('type' => 'password', 'size' => 25, 'placeholder' => 'password', 'display_label' => FALSE);\n\t\t$fields['forward'] = array('type' => 'hidden', 'value' => fuel_uri_segment(2));\n\t\t$this->form_builder->show_required = FALSE;\n\t\t$this->form_builder->submit_value = lang('login_btn');\n\t\t$this->form_builder->set_fields($fields);\n\t\t$this->form_builder->remove_js();\n\t\tif (!empty($_POST)) $this->form_builder->set_field_values($this->input->post(NULL, TRUE));\n\t\t$vars['form'] = $this->form_builder->render();\n\t\t\n\t\t// set any errors that \n\t\tif ($this->session->flashdata('error'))\n\t\t{\n\t\t\t$errors = array($this->session->flashdata('error'));\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$errors =  $this->fuel_users_model->get_errors();\n\t\t}\n\t\t\n\t\t$vars['error'] = $errors;\n\n\t\t// notifications template\n\t\t$notifications = $this->load->view('_blocks/notifications', $vars, TRUE);\n\t\t$vars['notifications'] = $notifications;\n\t\t$vars['display_forgotten_pwd'] = $this->fuel->config('allow_forgotten_password');\n\t\t$vars['page_title'] = lang('fuel_page_title');\n\n\t\t$this->load_view('login', $vars);\n\t}\n\n\t// THIS IS A PASSWORD RESET TOKEN CREATION EMAIL SENDING \n\tpublic function pwd_reset()\n\t{\n\t\tif ( ! $this->fuel->config('allow_forgotten_password')) show_404();\n\n\t\t$this->js_controller_params['method'] = 'add_edit';\n\n\t\tif ( ! empty($_POST))\n\t\t{\n\t\t\tif ($this->input->post('email'))\n\t\t\t{\n\t\t\t\t$user = $this->fuel_users_model->find_one_array(array('email' => $this->input->post('email')));\n\n\t\t\t\tif ( ! empty($user['email']))\n\t\t\t\t{\n\t\t\t\t\t// This generates and saves a token to the user model, returns the token string.\n\t\t\t\t\t$token = $this->fuel_users_model->get_reset_password_token($user['email']);\n\n\t\t\t\t\tif ($token !== FALSE)\n\t\t\t\t\t{\n\t\t\t\t\t\t$url = 'login/reset/' . $token;\n\t\t\t\t\t\t$msg = lang('pwd_reset_email', fuel_url($url));\n\t\t\t\t\t\t$params['to'] = $this->input->post('email');\n\t\t\t\t\t\t$params['subject'] = lang('pwd_reset_subject');\n\t\t\t\t\t\t$params['message'] = $msg;\n\t\t\t\t\t\t$params['use_dev_mode'] = FALSE;\n\t\t\t\t\t\tif ($this->fuel->notification->send($params))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$this->session->set_flashdata('success', lang('pwd_reset_email_success'));\n\t\t\t\t\t\t\t$this->fuel->logs->write(lang('auth_log_pass_reset_request', $user['email'], $this->input->ip_address()), 'debug');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Reset the key back to empty if not successful send\n\t\t\t\t\t\t\t$user['reset_key'] = '';\n\t\t\t\t\t\t\t$this->fuel_users_model->save($user);\n\t\t\t\t\t\t\t$user['reset_key'] = $token;\n\t\t\t\t\t\t\t$this->session->set_flashdata('error', lang('error_pwd_reset'));\n\t\t\t\t\t\t\t$this->fuel->logs->write($this->fuel->notification->last_error(), 'debug');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tredirect(fuel_uri('login'));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$this->fuel_users_model->add_error(lang('error_invalid_email'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$this->fuel_users_model->add_error(lang('error_invalid_email'));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$this->fuel_users_model->add_error(lang('error_empty_email'));\n\t\t\t}\n\t\t}\n\n\t\t$this->form_builder->set_validator($this->fuel_users_model->get_validation());\n\t\t\n\t\t// build form\n\t\t$fields['Reset Password'] = array('type' => 'section', 'label' => lang('login_reset_pwd'));\n\t\t$fields['email'] = array('required' => TRUE, 'size' => 30, 'placeholder' => 'email', 'display_label' => FALSE);\n\n\t\t$this->form_builder->show_required = FALSE;\n\t\t$this->form_builder->set_fields($fields);\n\n\t\t$vars['form'] = $this->form_builder->render();\n\t\t\n\t\t// notifications template\n\t\t$vars['error'] = $this->fuel_users_model->get_errors();\n\t\t$vars['notifications'] = $this->load->module_view(FUEL_FOLDER, '_blocks/notifications', $vars, TRUE);\n\t\t$vars['page_title'] = lang('fuel_page_title');\n\n\t\t$this->load_view('pwd_reset', $vars);\n\n\t}\n\n\t// THIS HANDLES A POST REQUEST FOR USER SETTING A NEW PASSWORD\n\tpublic function reset_password() \n\t{\n\t\t$token = $this->uri->segment(4);\n\n\t\tif (empty($token))\n\t\t{\n\t\t\t$this->session->set_flashdata('error', lang('pwd_reset_missing_token'));\n\t\t\tredirect(site_url('fuel/login'));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif( ! $this->fuel_users_model->validate_reset_token($token))\n\t\t\t{\n\t\t\t\t$this->session->set_flashdata('error', lang('pwd_reset_missing_token'));\n\t\t\t\tredirect(site_url('fuel/login'));\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ( ! empty($_POST))\n\t\t{\n\t\t\tif ($this->input->post('email') && $this->input->post('password') && $this->input->post('password_confirm') && $this->input->post('_token'))\n\t\t\t{\n\t\t\t\t$this->load->library('user_agent');\n\t\t\t\n\t\t\t\tif ($this->input->post('password') == $this->input->post('password_confirm'))\n\t\t\t\t{\n\t\t\t\t   \t$reset = $this->fuel_users_model->reset_password_from_token($this->input->post('email'), $this->input->post('_token'), $this->input->post('password'));\n\n\t\t\t\t\tif ($reset)\n\t\t\t\t\t{\n\t\t\t\t\t\t$this->session->set_flashdata('success', lang('pwd_reset_success'));\n\t\t\t\t\t\tredirect(site_url('fuel/login'));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($this->fuel_users_model->has_error())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$errors = $this->fuel_users_model->get_errors();\n\t\t\t\t\t\t\t$this->session->set_flashdata('error',$errors[0]);\n\t\t\t\t\t\t\tredirect($this->agent->referrer());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$this->session->set_flashdata('error', lang('pwd_reset_error'));\n\t\t\t\t\t\tredirect(site_url('fuel/login/pwd_reset'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$this->session->set_flashdata('error', lang('pwd_reset_error_not_match'));\n\t\t\t\t\tredirect($this->agent->referrer());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t$fields['Reset Password'] = array('type' => 'section', 'label' => lang('login_reset_pwd'));\n\t\t$fields['Directions'] = array('type' => 'copy', 'label' => $this->fuel->users->get_password_strength_text());\n\t\t$fields['email'] = array('required' => TRUE, 'size' => 30, 'placeholder' => 'email', 'display_label' => FALSE);\n\t\t$fields['password'] = array('type' => 'password', 'required' => TRUE, 'size' => 30, 'placeholder' => 'password', 'display_label' => FALSE);\n\t\t$fields['password_confirm'] = array('type' => 'password', 'required' => TRUE, 'size' => 30, 'placeholder' => 'confirm password', 'display_label' => FALSE);\n\t\t$fields['_token'] = array('type' => 'hidden', 'value' => $token);\n\n\t\t$this->form_builder->show_required = FALSE;\n\t\t$this->form_builder->set_fields($fields);\n\n\t\t$vars['form'] = $this->form_builder->render();\n\t\t\n\t\t// notifications template\n\t\t$vars['error'] = $this->fuel_users_model->get_errors();\n\t\t$vars['notifications'] = $this->load->module_view(FUEL_FOLDER, '_blocks/notifications', $vars, TRUE);\n\t\t$vars['page_title'] = lang('fuel_page_title');\n\n\t\t$this->load_view('reset', $vars);\n\t}\n\n\tpublic function dev()\n\t{\n\t\t$this->config->set_item('allow_forgotten_password', FALSE);\n\n\t\tif ( ! empty($_POST))\n\t\t{\n\t\t\tif ( ! $this->fuel->config('dev_password'))\n\t\t\t{\n\t\t\t\tredirect('');\n\t\t\t}\n\t\t\telse if ($this->fuel->config('dev_password') == $this->input->post('password', TRUE))\n\t\t\t{\n\t\t\t\t$this->load->helper('convert');\n\t\t\t\t$this->session->set_userdata('dev_password', TRUE);\n\t\t\t\t$forward = uri_safe_decode($this->input->post('forward'));\n\t\t\t\tredirect($forward);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tadd_error(lang('error_invalid_login'));\n\t\t\t}\n\t\t}\n\n\t\t$fields['password'] = array('type' => 'password', 'placeholder' => 'password', 'display_label' => FALSE, 'size' => 25);\n\t\t$fields['forward'] = array('type' => 'hidden', 'value' => fuel_uri_segment(2));\n\n\t\t$this->form_builder->show_required = FALSE;\n\t\t$this->form_builder->submit_value = 'Login';\n\t\t$this->form_builder->set_fields($fields);\n\n\t\tif ( ! empty($_POST)) $this->form_builder->set_field_values($this->input->post(NULL, TRUE));\n\n\t\t$vars['form'] = $this->form_builder->render();\n\t\t$vars['notifications'] = $this->load->module_view(FUEL_FOLDER, '_blocks/notifications', $vars, TRUE);\n\t\t$vars['display_forgotten_pwd'] = FALSE;\n\t\t$vars['instructions'] = lang('dev_pwd_instructions');\n\t\t$vars['page_title'] = lang('fuel_page_title');\n\n\t\t$this->load_view('login', $vars);\n\t}\n\n\tprotected function load_view($view, $vars = array())\n\t{\n\t\tif (file_exists(APPPATH.'views/_admin/'.$view.'.php'))\n\t\t{\n\t\t\t$this->load->module_view('app', '_admin/'.$view, $vars);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$this->load->module_view(FUEL_FOLDER, $view, $vars);\n\t\t}\n\t}\n}\n"], "fixing_code": ["<?php\nclass Login extends CI_Controller {\n\n\tpublic function __construct()\n\t{\n\t\tparent::__construct();\n\n\t\t// for flash data\n\t\t$this->load->library('session');\n\n\t\tif (!$this->fuel->config('admin_enabled')) show_404();\n\n\t\t$this->load->vars(array(\n\t\t\t'js' => '', \n\t\t\t'css' => css($this->fuel->config('xtra_css')), // use CSS function here because of the asset library path changes below\n\t\t\t'js_controller_params' => array(), \n\t\t\t'keyboard_shortcuts' => $this->fuel->config('keyboard_shortcuts')));\n\n\t\t// change assets path to admin\n\t\t$this->asset->assets_path = $this->fuel->config('fuel_assets_path');\n\n\t\t// set asset output settings\n\t\t$this->asset->assets_output = $this->fuel->config('fuel_assets_output');\n\t\t\n\t\t$this->lang->load('fuel');\n\t\t$this->load->helper('ajax');\n\t\t$this->load->library('form_builder');\n\n\t\t$this->load->module_model(FUEL_FOLDER, 'fuel_users_model');\n\n\t\t// set configuration paths for assets in case they are different from front end\n\t\t$this->asset->assets_module ='fuel';\n\t\t$this->asset->assets_folders = array(\n\t\t\t\t'images' => 'images/',\n\t\t\t\t'css' => 'css/',\n\t\t\t\t'js' => 'js/',\n\t\t\t);\n\n\t}\n\n\tpublic function index()\n\t{\n\t\t// check if it's a password request and redirect'\n\t\tif ($this->uri->segment(3) == 'pwd_reset')\n\t\t{\n\t\t\t$this->pwd_reset();\n\t\t\treturn;\n\t\t}\n\t\telse if ($this->uri->segment(3) == 'dev')\n\t\t{\n\t\t\t$this->dev();\n\t\t\treturn;\n\t\t}\n\t\telse if ($this->uri->segment(3) == 'reset')\n\t\t{\n\t\t\t$this->reset_password();\n\t\t\treturn;\n\t\t}\n\n\t\t$this->js_controller_params['method'] = 'add_edit';\n\n\t\t$this->load->helper('convert');\n\t\t$this->load->helper('cookie');\n\n\t\t$session_key = $this->fuel->auth->get_session_namespace();\n\n\t\t$user_data = $this->session->userdata($session_key);\n\n\t\tif ( ! empty($_POST))\n\t\t{\n\t\t\t// check if they are locked out out or not\n\t\t\tif (isset($user_data['failed_login_timer']) AND (time() - $user_data['failed_login_timer']) < (int)$this->fuel->config('seconds_to_unlock'))\n\t\t\t{\n \t\t\t\t$this->fuel_users_model->add_error(lang('error_max_attempts', $this->fuel->config('seconds_to_unlock')));\n\t\t\t\t$user_data['failed_login_timer'] = time();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ($this->input->post('user_name') AND $this->input->post('password'))\n\t\t\t\t{\n\t\t\t\t\tif ($this->fuel->auth->login($this->input->post('user_name', TRUE), $this->input->post('password', TRUE)))\n\t\t\t\t\t{\n\t\t\t\t\t\t// reset failed login attempts\n\t\t\t\t\t\t$user_data['failed_login_timer'] = 0;\n\t\t\t\t\t\t// set the cookie for viewing the live site with added FUEL capabilities\n\t\t\t\t\t\t$config = array(\n\t\t\t\t\t\t\t'name' => $this->fuel->auth->get_fuel_trigger_cookie_name(), \n\t\t\t\t\t\t\t'value' => serialize(array('id' => $this->fuel->auth->user_data('id'), 'language' => $this->fuel->auth->user_data('language'))),\n\t\t\t\t\t\t\t'expire' => 0,\n\t\t\t\t\t\t\t//'path' => WEB_PATH\n\t\t\t\t\t\t\t'path' => $this->fuel->config('fuel_cookie_path')\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tset_cookie($config);\n\n\t\t\t\t\t\t$forward = $this->input->post('forward');\n\t\t\t\t\t\t$forward_uri = uri_safe_decode($forward);\n\n\t\t\t\t\t\t# Check URL for naughty forwarding\n\t\t\t\t\t\t$parsed_url = parse_url($forward_uri); \n\t\t\t\t\t\t$host = array_key_exists('host', $parsed_url) ? $parsed_url['host'] : null;\n\n\t\t\t\t\t\tif ($forward AND ($forward_uri != $this->fuel->config('login_redirect')) AND ($host === null))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tredirect($forward_uri);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tredirect($this->fuel->config('login_redirect'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$this->check_login_attempts($user_data, 'username');\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$this->fuel_users_model->add_error(lang('error_empty_user_pwd'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$this->session->set_userdata($session_key, $user_data);\n\t\t}\n\t\t\n\t\t// build form\n\t\t$this->form_builder->set_validator($this->fuel_users_model->get_validation());\n\t\t$fields['user_name'] = array('size' => 25, 'placeholder' => 'username', 'display_label' => FALSE);\n\t\t$fields['password'] = array('type' => 'password', 'size' => 25, 'placeholder' => 'password', 'display_label' => FALSE);\n\t\t$fields['forward'] = array('type' => 'hidden', 'value' => fuel_uri_segment(2));\n\t\t$this->form_builder->show_required = FALSE;\n\t\t$this->form_builder->submit_value = lang('login_btn');\n\t\t$this->form_builder->set_fields($fields);\n\t\t$this->form_builder->remove_js();\n\t\tif (!empty($_POST)) $this->form_builder->set_field_values($this->input->post(NULL, TRUE));\n\t\t$vars['form'] = $this->form_builder->render();\n\t\t\n\t\t// set any errors that \n\t\tif ($this->session->flashdata('error'))\n\t\t{\n\t\t\t$errors = array($this->session->flashdata('error'));\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$errors =  $this->fuel_users_model->get_errors();\n\t\t}\n\t\t\n\t\t$vars['error'] = $errors;\n\n\t\t// notifications template\n\t\t$notifications = $this->load->view('_blocks/notifications', $vars, TRUE);\n\t\t$vars['notifications'] = $notifications;\n\t\t$vars['display_forgotten_pwd'] = $this->fuel->config('allow_forgotten_password');\n\t\t$vars['page_title'] = lang('fuel_page_title');\n\n\t\t$this->load_view('login', $vars);\n\t}\n\n\t// THIS IS A PASSWORD RESET TOKEN CREATION EMAIL SENDING \n\tpublic function pwd_reset()\n\t{\n\t\tif ( ! $this->fuel->config('allow_forgotten_password')) show_404();\n\n\t\t$this->js_controller_params['method'] = 'add_edit';\n\n\t\t$session_key = $this->fuel->auth->get_session_namespace();\n\n\t\t$user_data = $this->session->userdata($session_key);\n\n\t\tif ( ! empty($_POST))\n\t\t{\n\t\t\tif (isset($user_data['failed_login_timer']) AND (time() - $user_data['failed_login_timer']) < (int)$this->fuel->config('seconds_to_unlock'))\n\t\t\t{\n \t\t\t\t$this->fuel_users_model->add_error(lang('error_max_attempts', $this->fuel->config('seconds_to_unlock')));\n\t\t\t\t$user_data['failed_login_timer'] = time();\n\t\t\t}\n\t\t\telseif ($this->input->post('email'))\n\t\t\t{\n\t\t\t\t$user = $this->fuel_users_model->find_one_array(array('email' => $this->input->post('email')));\n\n\t\t\t\tif ( ! empty($user['email']))\n\t\t\t\t{\n\t\t\t\t\t// reset failed login attempts\n\t\t\t\t\t$user_data['failed_login_timer'] = 0;\n\n\t\t\t\t\t// This generates and saves a token to the user model, returns the token string.\n\t\t\t\t\t$token = $this->fuel_users_model->get_reset_password_token($user['email']);\n\n\t\t\t\t\tif ($token !== FALSE)\n\t\t\t\t\t{\n\t\t\t\t\t\t$url = 'login/reset/' . $token;\n\t\t\t\t\t\t$msg = lang('pwd_reset_email', fuel_url($url));\n\t\t\t\t\t\t$params['to'] = $this->input->post('email');\n\t\t\t\t\t\t$params['subject'] = lang('pwd_reset_subject');\n\t\t\t\t\t\t$params['message'] = $msg;\n\t\t\t\t\t\t$params['use_dev_mode'] = FALSE;\n\t\t\t\t\t\tif ($this->fuel->notification->send($params))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$this->session->set_flashdata('success', lang('pwd_reset_email_success'));\n\t\t\t\t\t\t\t$this->fuel->logs->write(lang('auth_log_pass_reset_request', $user['email'], $this->input->ip_address()), 'debug');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Reset the key back to empty if not successful send\n\t\t\t\t\t\t\t$user['reset_key'] = '';\n\t\t\t\t\t\t\t$this->fuel_users_model->save($user);\n\t\t\t\t\t\t\t$user['reset_key'] = $token;\n\t\t\t\t\t\t\t$this->session->set_flashdata('error', lang('error_pwd_reset'));\n\t\t\t\t\t\t\t$this->fuel->logs->write($this->fuel->notification->last_error(), 'debug');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tredirect(fuel_uri('login'));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$this->fuel_users_model->add_error(lang('error_invalid_email'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$this->check_login_attempts($user_data, 'email');\n\t\t\t\t}\n\n\t\t\t\t$this->session->set_userdata($session_key, $user_data);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$this->fuel_users_model->add_error(lang('error_empty_email'));\n\t\t\t}\n\t\t}\n\n\t\t$this->form_builder->set_validator($this->fuel_users_model->get_validation());\n\t\t\n\t\t// build form\n\t\t$fields['Reset Password'] = array('type' => 'section', 'label' => lang('login_reset_pwd'));\n\t\t$fields['email'] = array('required' => TRUE, 'size' => 30, 'placeholder' => 'email', 'display_label' => FALSE);\n\n\t\t$this->form_builder->show_required = FALSE;\n\t\t$this->form_builder->set_fields($fields);\n\n\t\t$vars['form'] = $this->form_builder->render();\n\t\t\n\t\t// notifications template\n\t\t$vars['error'] = $this->fuel_users_model->get_errors();\n\t\t$vars['notifications'] = $this->load->module_view(FUEL_FOLDER, '_blocks/notifications', $vars, TRUE);\n\t\t$vars['page_title'] = lang('fuel_page_title');\n\n\t\t$this->load_view('pwd_reset', $vars);\n\n\t}\n\n\tprotected function check_login_attempts(&$user_data, $field)\n\t{\n\t\tif (isset($user_data['failed_login_timer']) AND (time() - $user_data['failed_login_timer']) > (int)$this->fuel->config('seconds_to_unlock'))\n\t\t{\n\t\t\t$user_data['failed_login_attempts'] = 0;\n\t\t\t$this->session->unset_userdata('failed_login_timer');\n\t\t\tunset($user_data['failed_login_timer']);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// add to the number of attempts if it's an invalid login'\n\t\t\t$num_attempts = (!isset($user_data['failed_login_attempts'])) ? 0 : $user_data['failed_login_attempts'] + 1;\n\t\t\t$user_data['failed_login_attempts'] = $num_attempts;\n\t\t}\n\n\t\t// check if they should be locked out\n\t\tif (isset($user_data['failed_login_attempts']) AND $user_data['failed_login_attempts'] >= (int)$this->fuel->config('num_logins_before_lock') -1)\n\t\t{\n\t\t\t$this->fuel_users_model->add_error(lang('error_max_attempts', $this->fuel->config('seconds_to_unlock')));\n\t\t\t$user_data['failed_login_timer'] = time();\n\t\t\t$this->fuel->logs->write(lang('auth_log_account_lockout', $this->input->post($field, TRUE), $this->input->ip_address()), 'debug');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($field == 'email')\n\t\t\t{\n\t\t\t\t$this->fuel_users_model->add_error(lang('error_invalid_email'));\n\t\t\t\t$this->fuel->logs->write(lang('error_invalid_email', $this->input->post('email', TRUE), $this->input->ip_address(), ($user_data['failed_login_attempts'] + 1)), 'debug');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$this->fuel_users_model->add_error(lang('error_invalid_login'));\n\t\t\t\t$this->fuel->logs->write(lang('auth_log_failed_login', $this->input->post('user_name', TRUE), $this->input->ip_address(), ($user_data['failed_login_attempts'] + 1)), 'debug');\n\t\t\t}\n\t\t}\n\t}\n\n\t// THIS HANDLES A POST REQUEST FOR USER SETTING A NEW PASSWORD\n\tpublic function reset_password() \n\t{\n\t\t$token = $this->uri->segment(4);\n\n\t\tif (empty($token))\n\t\t{\n\t\t\t$this->session->set_flashdata('error', lang('pwd_reset_missing_token'));\n\t\t\tredirect(site_url('fuel/login'));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif( ! $this->fuel_users_model->validate_reset_token($token))\n\t\t\t{\n\t\t\t\t$this->session->set_flashdata('error', lang('pwd_reset_missing_token'));\n\t\t\t\tredirect(site_url('fuel/login'));\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ( ! empty($_POST))\n\t\t{\n\t\t\tif ($this->input->post('email') && $this->input->post('password') && $this->input->post('password_confirm') && $this->input->post('_token'))\n\t\t\t{\n\t\t\t\t$this->load->library('user_agent');\n\t\t\t\n\t\t\t\tif ($this->input->post('password') == $this->input->post('password_confirm'))\n\t\t\t\t{\n\t\t\t\t   \t$reset = $this->fuel_users_model->reset_password_from_token($this->input->post('email'), $this->input->post('_token'), $this->input->post('password'));\n\n\t\t\t\t\tif ($reset)\n\t\t\t\t\t{\n\t\t\t\t\t\t$this->session->set_flashdata('success', lang('pwd_reset_success'));\n\t\t\t\t\t\tredirect(site_url('fuel/login'));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($this->fuel_users_model->has_error())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$errors = $this->fuel_users_model->get_errors();\n\t\t\t\t\t\t\t$this->session->set_flashdata('error',$errors[0]);\n\t\t\t\t\t\t\tredirect($this->agent->referrer());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$this->session->set_flashdata('error', lang('pwd_reset_error'));\n\t\t\t\t\t\tredirect(site_url('fuel/login/pwd_reset'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$this->session->set_flashdata('error', lang('pwd_reset_error_not_match'));\n\t\t\t\t\tredirect($this->agent->referrer());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t$fields['Reset Password'] = array('type' => 'section', 'label' => lang('login_reset_pwd'));\n\t\t$fields['Directions'] = array('type' => 'copy', 'label' => $this->fuel->users->get_password_strength_text());\n\t\t$fields['email'] = array('required' => TRUE, 'size' => 30, 'placeholder' => 'email', 'display_label' => FALSE);\n\t\t$fields['password'] = array('type' => 'password', 'required' => TRUE, 'size' => 30, 'placeholder' => 'password', 'display_label' => FALSE);\n\t\t$fields['password_confirm'] = array('type' => 'password', 'required' => TRUE, 'size' => 30, 'placeholder' => 'confirm password', 'display_label' => FALSE);\n\t\t$fields['_token'] = array('type' => 'hidden', 'value' => $token);\n\n\t\t$this->form_builder->show_required = FALSE;\n\t\t$this->form_builder->set_fields($fields);\n\n\t\t$vars['form'] = $this->form_builder->render();\n\t\t\n\t\t// notifications template\n\t\t$vars['error'] = $this->fuel_users_model->get_errors();\n\t\t$vars['notifications'] = $this->load->module_view(FUEL_FOLDER, '_blocks/notifications', $vars, TRUE);\n\t\t$vars['page_title'] = lang('fuel_page_title');\n\n\t\t$this->load_view('reset', $vars);\n\t}\n\n\tpublic function dev()\n\t{\n\t\t$this->config->set_item('allow_forgotten_password', FALSE);\n\n\t\tif ( ! empty($_POST))\n\t\t{\n\t\t\tif ( ! $this->fuel->config('dev_password'))\n\t\t\t{\n\t\t\t\tredirect('');\n\t\t\t}\n\t\t\telse if ($this->fuel->config('dev_password') == $this->input->post('password', TRUE))\n\t\t\t{\n\t\t\t\t$this->load->helper('convert');\n\t\t\t\t$this->session->set_userdata('dev_password', TRUE);\n\t\t\t\t$forward = uri_safe_decode($this->input->post('forward'));\n\t\t\t\tredirect($forward);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tadd_error(lang('error_invalid_login'));\n\t\t\t}\n\t\t}\n\n\t\t$fields['password'] = array('type' => 'password', 'placeholder' => 'password', 'display_label' => FALSE, 'size' => 25);\n\t\t$fields['forward'] = array('type' => 'hidden', 'value' => fuel_uri_segment(2));\n\n\t\t$this->form_builder->show_required = FALSE;\n\t\t$this->form_builder->submit_value = 'Login';\n\t\t$this->form_builder->set_fields($fields);\n\n\t\tif ( ! empty($_POST)) $this->form_builder->set_field_values($this->input->post(NULL, TRUE));\n\n\t\t$vars['form'] = $this->form_builder->render();\n\t\t$vars['notifications'] = $this->load->module_view(FUEL_FOLDER, '_blocks/notifications', $vars, TRUE);\n\t\t$vars['display_forgotten_pwd'] = FALSE;\n\t\t$vars['instructions'] = lang('dev_pwd_instructions');\n\t\t$vars['page_title'] = lang('fuel_page_title');\n\n\t\t$this->load_view('login', $vars);\n\t}\n\n\tprotected function load_view($view, $vars = array())\n\t{\n\t\tif (file_exists(APPPATH.'views/_admin/'.$view.'.php'))\n\t\t{\n\t\t\t$this->load->module_view('app', '_admin/'.$view, $vars);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$this->load->module_view(FUEL_FOLDER, $view, $vars);\n\t\t}\n\t}\n}\n"], "filenames": ["fuel/modules/fuel/controllers/Login.php"], "buggy_code_start_loc": [114], "buggy_code_end_loc": [260], "fixing_code_start_loc": [114], "fixing_code_end_loc": [288], "type": "CWE-307", "message": "Fuel CMS 1.5.0 has a brute force vulnerability in fuel/modules/fuel/controllers/Login.php", "other": {"cve": {"id": "CVE-2021-38725", "sourceIdentifier": "cve@mitre.org", "published": "2021-09-09T15:15:09.470", "lastModified": "2021-09-20T17:14:13.067", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Fuel CMS 1.5.0 has a brute force vulnerability in fuel/modules/fuel/controllers/Login.php"}, {"lang": "es", "value": "Fuel CMS versi\u00f3n 1.5.0, presenta una vulnerabilidad de fuerza bruta en el archivo fuel/modules/fuel/controllers/Login.php"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-307"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:thedaylightstudio:fuel_cms:1.5.0:*:*:*:*:*:*:*", "matchCriteriaId": "824FE41F-1596-45D3-8949-AC4C9CC02949"}]}]}], "references": [{"url": "https://github.com/daylightstudio/FUEL-CMS/commit/15934fdd309408640d1f2be18f93a8beadaa5e9b", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/daylightstudio/FUEL-CMS/issues/581", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/daylightstudio/FUEL-CMS/commit/15934fdd309408640d1f2be18f93a8beadaa5e9b"}}