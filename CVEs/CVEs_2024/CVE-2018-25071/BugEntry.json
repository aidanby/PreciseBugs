{"buggy_code": ["<?php\n\n// CORS proxy\n// https://web.ccpgamescdn.com/ccpwgl/res/   dx9/model/lensflare/orange.red\\\n//\n// use: proxy.php?fetch=dx9/model/lensflare/orange.red\n//\n//use proxy for CCP WebGL assets\n//$LM_CCPWGL_USEPROXY=FALSE;\n//cache files proxied by WebGL proxy\n//$LM_CCPWGL_PROXYCACHE=FALSE;\n//log every and all attempts to use proxy\n//$LM_CCPWGL_PROXYAUDIT=FALSE;\n//database schema for WebGL proxy cache\n//$LM_CCPWGL_CACHESCHEMA='lmeve-cache';\ninclude_once(dirname(__FILE__).'/../../config/config.php');\ninclude_once(dirname(__FILE__).'/../../include/db.php');\n\nfunction file_header($mime) {\n    //browser cache\n    $days=90;\n    if (isset($_SERVER['HTTP_IF_MODIFIED_SINCE'])) {\n      $if_modified_since = preg_replace('/;.*$/', '',   $_SERVER['HTTP_IF_MODIFIED_SINCE']);\n    } else {\n      $if_modified_since = '';\n    }\n    $gmdate_mod = gmdate('D, d M Y H:i:s') . ' GMT';\n\n    if ($if_modified_since == $gmdate_mod) {\n      header(\"HTTP/1.0 304 Not Modified\");\n      exit;\n    }\n    header(\"Last-Modified: $gmdate_mod\");\n    header('Expires: ' . gmdate('D, d M Y H:i:s', time() + (60*60*24*$days)) . ' GMT');\n    \n    //Add CORS header in header so API can be used with web apps on other servers\n    header(\"Access-Control-Allow-Origin: *\");\n\n    //Add proper content-type header\n    header(\"Content-type: $mime\");\n}\n\nfunction insert_log($ip,$fetch,$ok,$ref,$cacheInUse,$url,$http_code,$size) {\n    global $LM_CCPWGL_PROXYAUDIT, $LM_CCPWGL_CACHESCHEMA;\n    \n    if ($LM_CCPWGL_PROXYAUDIT) {\n        if (is_null($url)) $url='NULL'; else $url=\"'\".mysql_escape_string($url).\"'\";\n        if (is_null($http_code)) $http_code='NULL';\n        switch($cacheInUse) {\n            case 0: \n                break;\n            case 1: \n                break;\n            default:\n                $cacheInUse=0;\n        }\n        db_uquery(\"INSERT INTO `$LM_CCPWGL_CACHESCHEMA`.`lmproxylog` VALUES(DEFAULT,NOW(),\n            '\".mysql_escape_string($ip).\"',\n            '\".mysql_escape_string($fetch).\"',\n            '\".mysql_escape_string($ok).\"',\n            '\".mysql_escape_string($ref).\"',\n            $cacheInUse,\n            \".$url.\",\n            $http_code,\n            $size\n        );\");\n    }\n}\n\n//get fetch var\n$addr=$_GET['fetch'];\n\n//prepare logging vars\nif ($LM_CCPWGL_PROXYAUDIT) {\n    $ip=$_SERVER['REMOTE_ADDR'];\n    $ref = $_SERVER['HTTP_REFERER'];\n    $fetch=secureGETstr('fetch',256);\n    db_uquery(\"CREATE TABLE IF NOT EXISTS `$LM_CCPWGL_CACHESCHEMA`.`lmproxylog` (\n      `logID` bigint(11) NOT NULL AUTO_INCREMENT,\n      `timestamp` datetime NOT NULL,\n      `ip` varchar(23) NOT NULL,\n      `fetch` varchar(256) NOT NULL,\n      `status` varchar(24) NOT NULL,\n      `referer` varchar(256) NOT NULL,\n      `cacheUsed` int(11) NOT NULL,\n      `url` varchar(256) NULL,\n      `http_code` int(11) NULL,\n      `bytes` bigint(11) NOT NULL,\n      PRIMARY KEY (`logID`),\n      KEY `status_key` (`status`),\n      KEY `referer_key` (`referer`),\n      KEY `url_key` (`url`),\n      KEY `fetch_key` (`fetch`)\n    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;\");\n}\n//validate input using regexp\nif ( !preg_match('/^[\\w\\d\\.\\/\\-\\_]+$/',$addr) || preg_match('/\\.\\./',$addr) ) {\n    if ($LM_CCPWGL_PROXYAUDIT) {\n        insert_log($ip,$fetch,\"INVALID_FETCH\",$ref,0,null,null,0);\n    }\n    die('Error: Filter error.');\n}\n\n$url = $LM_CCPWGL_URL.$addr;\n\nif (!$LM_CCPWGL_USEPROXY) {\n    header(\"Location: $url\");\n    if ($LM_CCPWGL_PROXYAUDIT) {\n        insert_log($ip,$fetch,\"PROXY_DISABLED\",$ref,0,null,null,0);\n    }\n    die('Error: WebGL Proxy is disabled.');\n}\n\nif ($LM_CCPWGL_PROXYCACHE) {\n    //we use proxy cache.\n    db_uquery(\"CREATE TABLE IF NOT EXISTS `$LM_CCPWGL_CACHESCHEMA`.`lmproxyfiles` (\n      `fileID` bigint(11) NOT NULL AUTO_INCREMENT,\n      `timestamp` datetime NOT NULL,\n      `url` varchar(256) NOT NULL,\n      `mime` varchar(256) NOT NULL,\n      `data` MEDIUMBLOB NOT NULL,\n      PRIMARY KEY (`fileID`),\n      KEY `url_key` (`url`)\n    ) ENGINE=MyISAM DEFAULT CHARSET=utf8;\");\n    // Check if we have that file already in DB\n    $cache=db_asocquery(\"SELECT * FROM `$LM_CCPWGL_CACHESCHEMA`.`lmproxyfiles` WHERE `url`='$url'\");\n    if (count($cache)>0) {\n        //CACHE HIT! we have the file in cache\n        $data=$cache[0]['data'];\n        $info=$cache[0]['mime'];\n        if ($LM_CCPWGL_PROXYAUDIT) {\n          $size=strlen($data);\n          insert_log($ip,$fetch,\"OK\",$ref,1,$url,200,$size);\n        }\n        file_header($info);\n        echo($data);\n        die();\n    }\n    //otherwise we do nothing, proxy will fall back to downloading the file using CURL\n}\n\n\n//download the file using CURL\n\n  $ch = curl_init();\n  curl_setopt($ch, CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);\n  curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);\n  curl_setopt($ch, CURLOPT_USERAGENT, \"LMeve/1.0 API Poller/WebGL-Proxy\");\n\n  $data = curl_exec($ch);\n  $info = curl_getinfo($ch,CURLINFO_CONTENT_TYPE);\n  $http_code = curl_getinfo($ch,CURLINFO_HTTP_CODE);\n  \n  if ($info=='text/plain; charset=UTF-8') $info='text/xml; charset=UTF-8';\n  $errno=curl_errno($ch);\n        \n  curl_close($ch);\n  \n  if ($data===FALSE) {\n      //CURL error occured\n\n      switch ($errno) {\n          case 78:\n              http_response_code(404);\n              break;\n          case 9:\n              http_response_code(403);\n              break;\n          default:\n              http_response_code(404);\n              break;\n      }\n      if ($LM_CCPWGL_PROXYAUDIT) {\n          insert_log($ip,$fetch,\"CURL_ERROR_$errno\",$ref,0,$url,$http_code,0);\n      }\n  } else {\n      //no error\n      //if we use cache, we should save the retrieved file to the database\n      if ($LM_CCPWGL_PROXYCACHE) {\n          db_uquery(\"INSERT INTO `$LM_CCPWGL_CACHESCHEMA`.`lmproxyfiles` VALUES(DEFAULT,NOW(),'$url','$info','\". mysql_escape_string($data) .\"');\");\n      }\n      //output!\n      file_header($info);\n\n      if ($LM_CCPWGL_PROXYAUDIT) {\n          $size=strlen($data);\n          $http_code == '200' ? $ok='OK' : $ok='HTTP_ERROR';\n          insert_log($ip,$fetch,$ok,$ref,0,$url,$http_code,$size);\n      }\n      echo $data;\n  }\n\n\n\n?>"], "fixing_code": ["<?php\n\n// CORS proxy\n// https://web.ccpgamescdn.com/ccpwgl/res/   dx9/model/lensflare/orange.red\\\n//\n// use: proxy.php?fetch=dx9/model/lensflare/orange.red\n//\n//use proxy for CCP WebGL assets\n//$LM_CCPWGL_USEPROXY=FALSE;\n//cache files proxied by WebGL proxy\n//$LM_CCPWGL_PROXYCACHE=FALSE;\n//log every and all attempts to use proxy\n//$LM_CCPWGL_PROXYAUDIT=FALSE;\n//database schema for WebGL proxy cache\n//$LM_CCPWGL_CACHESCHEMA='lmeve-cache';\ninclude_once(dirname(__FILE__).'/../../config/config.php');\ninclude_once(dirname(__FILE__).'/../../include/db.php');\n\nfunction file_header($mime) {\n    //browser cache\n    $days=90;\n    if (isset($_SERVER['HTTP_IF_MODIFIED_SINCE'])) {\n      $if_modified_since = preg_replace('/;.*$/', '',   $_SERVER['HTTP_IF_MODIFIED_SINCE']);\n    } else {\n      $if_modified_since = '';\n    }\n    $gmdate_mod = gmdate('D, d M Y H:i:s') . ' GMT';\n\n    if ($if_modified_since == $gmdate_mod) {\n      header(\"HTTP/1.0 304 Not Modified\");\n      exit;\n    }\n    header(\"Last-Modified: $gmdate_mod\");\n    header('Expires: ' . gmdate('D, d M Y H:i:s', time() + (60*60*24*$days)) . ' GMT');\n    \n    //Add CORS header in header so API can be used with web apps on other servers\n    header(\"Access-Control-Allow-Origin: *\");\n\n    //Add proper content-type header\n    header(\"Content-type: $mime\");\n}\n\nfunction insert_log($ip,$fetch,$ok,$ref,$cacheInUse,$url,$http_code,$size) {\n    global $LM_CCPWGL_PROXYAUDIT, $LM_CCPWGL_CACHESCHEMA;\n    \n    if ($LM_CCPWGL_PROXYAUDIT) {\n        if (is_null($url)) $url='NULL'; else $url=\"'\".mysql_escape_string($url).\"'\";\n        if (is_null($http_code)) $http_code='NULL';\n        switch($cacheInUse) {\n            case 0: \n                break;\n            case 1: \n                break;\n            default:\n                $cacheInUse=0;\n        }\n        db_uquery(\"INSERT INTO `$LM_CCPWGL_CACHESCHEMA`.`lmproxylog` VALUES(DEFAULT,NOW(),\n            '\".mysql_escape_string($ip).\"',\n            '\".mysql_escape_string($fetch).\"',\n            '\".mysql_escape_string($ok).\"',\n            '\".mysql_escape_string($ref).\"',\n            $cacheInUse,\n            \".$url.\",\n            $http_code,\n            $size\n        );\");\n    }\n}\n\n//get fetch var\n$addr = secureGETstr('fetch');\n\n//prepare logging vars\nif ($LM_CCPWGL_PROXYAUDIT) {\n    $ip=$_SERVER['REMOTE_ADDR'];\n    $ref = $_SERVER['HTTP_REFERER'];\n    $fetch=secureGETstr('fetch',256);\n    db_uquery(\"CREATE TABLE IF NOT EXISTS `$LM_CCPWGL_CACHESCHEMA`.`lmproxylog` (\n      `logID` bigint(11) NOT NULL AUTO_INCREMENT,\n      `timestamp` datetime NOT NULL,\n      `ip` varchar(23) NOT NULL,\n      `fetch` varchar(256) NOT NULL,\n      `status` varchar(24) NOT NULL,\n      `referer` varchar(256) NOT NULL,\n      `cacheUsed` int(11) NOT NULL,\n      `url` varchar(256) NULL,\n      `http_code` int(11) NULL,\n      `bytes` bigint(11) NOT NULL,\n      PRIMARY KEY (`logID`),\n      KEY `status_key` (`status`),\n      KEY `referer_key` (`referer`),\n      KEY `url_key` (`url`),\n      KEY `fetch_key` (`fetch`)\n    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;\");\n}\n//validate input using regexp\nif ( !preg_match('/^[\\w\\d\\.\\/\\-\\_]+$/',$addr) || preg_match('/\\.\\./',$addr) ) {\n    if ($LM_CCPWGL_PROXYAUDIT) {\n        insert_log($ip,$fetch,\"INVALID_FETCH\",$ref,0,null,null,0);\n    }\n    die('Error: Filter error.');\n}\n\n$url = $LM_CCPWGL_URL.$addr;\n\nif (!$LM_CCPWGL_USEPROXY) {\n    header(\"Location: $url\");\n    if ($LM_CCPWGL_PROXYAUDIT) {\n        insert_log($ip,$fetch,\"PROXY_DISABLED\",$ref,0,null,null,0);\n    }\n    die('Error: WebGL Proxy is disabled.');\n}\n\nif ($LM_CCPWGL_PROXYCACHE) {\n    //we use proxy cache.\n    db_uquery(\"CREATE TABLE IF NOT EXISTS `$LM_CCPWGL_CACHESCHEMA`.`lmproxyfiles` (\n      `fileID` bigint(11) NOT NULL AUTO_INCREMENT,\n      `timestamp` datetime NOT NULL,\n      `url` varchar(256) NOT NULL,\n      `mime` varchar(256) NOT NULL,\n      `data` MEDIUMBLOB NOT NULL,\n      PRIMARY KEY (`fileID`),\n      KEY `url_key` (`url`)\n    ) ENGINE=MyISAM DEFAULT CHARSET=utf8;\");\n    // Check if we have that file already in DB\n    $cache=db_asocquery(\"SELECT * FROM `$LM_CCPWGL_CACHESCHEMA`.`lmproxyfiles` WHERE `url`='$url'\");\n    if (count($cache)>0) {\n        //CACHE HIT! we have the file in cache\n        $data=$cache[0]['data'];\n        $info=$cache[0]['mime'];\n        if ($LM_CCPWGL_PROXYAUDIT) {\n          $size=strlen($data);\n          insert_log($ip,$fetch,\"OK\",$ref,1,$url,200,$size);\n        }\n        file_header($info);\n        echo($data);\n        die();\n    }\n    //otherwise we do nothing, proxy will fall back to downloading the file using CURL\n}\n\n\n//download the file using CURL\n\n  $ch = curl_init();\n  curl_setopt($ch, CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);\n  curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);\n  curl_setopt($ch, CURLOPT_USERAGENT, \"LMeve/1.0 API Poller/WebGL-Proxy\");\n\n  $data = curl_exec($ch);\n  $info = curl_getinfo($ch,CURLINFO_CONTENT_TYPE);\n  $http_code = curl_getinfo($ch,CURLINFO_HTTP_CODE);\n  \n  if ($info=='text/plain; charset=UTF-8') $info='text/xml; charset=UTF-8';\n  $errno=curl_errno($ch);\n        \n  curl_close($ch);\n  \n  if ($data===FALSE) {\n      //CURL error occured\n\n      switch ($errno) {\n          case 78:\n              http_response_code(404);\n              break;\n          case 9:\n              http_response_code(403);\n              break;\n          default:\n              http_response_code(404);\n              break;\n      }\n      if ($LM_CCPWGL_PROXYAUDIT) {\n          insert_log($ip,$fetch,\"CURL_ERROR_$errno\",$ref,0,$url,$http_code,0);\n      }\n  } else {\n      //no error\n      //if we use cache, we should save the retrieved file to the database\n      if ($LM_CCPWGL_PROXYCACHE) {\n          db_uquery(\"INSERT INTO `$LM_CCPWGL_CACHESCHEMA`.`lmproxyfiles` VALUES(DEFAULT,NOW(),'$url','$info','\". mysql_escape_string($data) .\"');\");\n      }\n      //output!\n      file_header($info);\n\n      if ($LM_CCPWGL_PROXYAUDIT) {\n          $size=strlen($data);\n          $http_code == '200' ? $ok='OK' : $ok='HTTP_ERROR';\n          insert_log($ip,$fetch,$ok,$ref,0,$url,$http_code,$size);\n      }\n      echo $data;\n  }\n\n\n\n?>"], "filenames": ["wwwroot/ccpwgl/proxy.php"], "buggy_code_start_loc": [71], "buggy_code_end_loc": [72], "fixing_code_start_loc": [71], "fixing_code_end_loc": [72], "type": "CWE-89", "message": "A vulnerability was found in roxlukas LMeve up to 0.1.58. It has been rated as critical. Affected by this issue is the function insert_log of the file wwwroot/ccpwgl/proxy.php. The manipulation of the argument fetch leads to sql injection. Upgrading to version 0.1.59-beta is able to address this issue. The name of the patch is c25ff7fe83a2cda1fcb365b182365adc3ffae332. It is recommended to upgrade the affected component. VDB-217610 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2018-25071", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-07T12:15:08.900", "lastModified": "2023-01-12T17:31:20.330", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in roxlukas LMeve up to 0.1.58. It has been rated as critical. Affected by this issue is the function insert_log of the file wwwroot/ccpwgl/proxy.php. The manipulation of the argument fetch leads to sql injection. Upgrading to version 0.1.59-beta is able to address this issue. The name of the patch is c25ff7fe83a2cda1fcb365b182365adc3ffae332. It is recommended to upgrade the affected component. VDB-217610 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.2}, "baseSeverity": "MEDIUM", "exploitabilityScore": 5.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:lmeve_project:lmeve:*:*:*:*:*:*:*:*", "versionEndIncluding": "0.1.58", "matchCriteriaId": "46999301-778F-4D41-BC0F-2E9485F37231"}]}]}], "references": [{"url": "https://github.com/roxlukas/lmeve/commit/c25ff7fe83a2cda1fcb365b182365adc3ffae332", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/roxlukas/lmeve/releases/tag/0.1.59-beta", "source": "cna@vuldb.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217610", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217610", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/roxlukas/lmeve/commit/c25ff7fe83a2cda1fcb365b182365adc3ffae332"}}