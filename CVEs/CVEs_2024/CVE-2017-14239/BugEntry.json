{"buggy_code": ["<?php\n/* Copyright (C) 2001-2007\tRodolphe Quiedeville\t<rodolphe@quiedeville.org>\n * Copyright (C) 2004-2013\tLaurent Destailleur\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2005-2012\tRegis Houssin\t\t\t<regis.houssin@capnetworks.com>\n * Copyright (C) 2010-2014\tJuanjo Menent\t\t\t<jmenent@2byte.es>\n * Copyright (C) 2011-2017\tPhilippe Grand\t\t\t<philippe.grand@atoo-net.com>\n * Copyright (C) 2015       Alexandre Spangaro      <aspangaro.dolibarr@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/admin/company.php\n *\t\\ingroup    company\n *\t\\brief      Setup page to configure company/foundation\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/images.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formother.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\n\n$action=GETPOST('action','aZ09');\n\n$langs->load(\"admin\");\n$langs->load(\"companies\");\n\nif (! $user->admin) accessforbidden();\n\n$error=0;\n\n/*\n * Actions\n */\n\nif ( ($action == 'update' && empty($_POST[\"cancel\"]))\n|| ($action == 'updateedit') )\n{\n\t$tmparray=getCountry(GETPOST('country_id','int'),'all',$db,$langs,0);\n\tif (! empty($tmparray['id']))\n\t{\n\t\t$mysoc->country_id   =$tmparray['id'];\n\t\t$mysoc->country_code =$tmparray['code'];\n\t\t$mysoc->country_label=$tmparray['label'];\n\n\t\t$s=$mysoc->country_id.':'.$mysoc->country_code.':'.$mysoc->country_label;\n\t\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_COUNTRY\", $s,'chaine',0,'',$conf->entity);\n\t}\n\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_NOM\",$_POST[\"nom\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_ADDRESS\",$_POST[\"address\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_TOWN\",$_POST[\"town\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_ZIP\",$_POST[\"zipcode\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_STATE\",$_POST[\"state_id\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_MONNAIE\",$_POST[\"currency\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_TEL\",$_POST[\"tel\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_FAX\",$_POST[\"fax\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_MAIL\",$_POST[\"mail\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_WEB\",$_POST[\"web\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_NOTE\",$_POST[\"note\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_GENCOD\",$_POST[\"barcode\"],'chaine',0,'',$conf->entity);\n\t\n\t$varforimage='logo'; $dirforimage=$conf->mycompany->dir_output.'/logos/';\n\tif ($_FILES[$varforimage][\"tmp_name\"])\n\t{\n\t\tif (preg_match('/([^\\\\/:]+)$/i',$_FILES[$varforimage][\"name\"],$reg))\n\t\t{\n\t\t\t$original_file=$reg[1];\n\n\t\t\t$isimage=image_format_supported($original_file);\n\t\t\tif ($isimage >= 0)\n\t\t\t{\n\t\t\t\tdol_syslog(\"Move file \".$_FILES[$varforimage][\"tmp_name\"].\" to \".$dirforimage.$original_file);\n\t\t\t\tif (! is_dir($dirforimage))\n\t\t\t\t{\n\t\t\t\t\tdol_mkdir($dirforimage);\n\t\t\t\t}\n\t\t\t\t$result=dol_move_uploaded_file($_FILES[$varforimage][\"tmp_name\"],$dirforimage.$original_file,1,0,$_FILES[$varforimage]['error']);\n\t\t\t\tif ($result > 0)\n\t\t\t\t{\n\t\t\t\t\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_LOGO\",$original_file,'chaine',0,'',$conf->entity);\n\n\t\t\t\t\t// Create thumbs of logo (Note that PDF use original file and not thumbs)\n\t\t\t\t\tif ($isimage > 0)\n\t\t\t\t\t{\n\t\t\t\t\t    // Create thumbs\n\t\t\t\t\t    //$object->addThumbs($newfile);    // We can't use addThumbs here yet because we need name of generated thumbs to add them into constants. TODO Check if need such constants. We should be able to retreive value with get... \n\t\t\t\t\t    \t\n\t\t\t\t\t\t// Create small thumb, Used on logon for example\n\t\t\t\t\t\t$imgThumbSmall = vignette($dirforimage.$original_file, $maxwidthsmall, $maxheightsmall, '_small', $quality);\n\t\t\t\t\t\tif (image_format_supported($imgThumbSmall) >= 0 && preg_match('/([^\\\\/:]+)$/i',$imgThumbSmall,$reg))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$imgThumbSmall = $reg[1];    // Save only basename\n\t\t\t\t\t\t\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_LOGO_SMALL\",$imgThumbSmall,'chaine',0,'',$conf->entity);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse dol_syslog($imgThumbSmall);\n\n\t\t\t\t\t\t// Create mini thumb, Used on menu or for setup page for example\n\t\t\t\t\t\t$imgThumbMini = vignette($dirforimage.$original_file, $maxwidthmini, $maxheightmini, '_mini', $quality);\n\t\t\t\t\t\tif (image_format_supported($imgThumbMini) >= 0 && preg_match('/([^\\\\/:]+)$/i',$imgThumbMini,$reg))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$imgThumbMini = $reg[1];     // Save only basename\n\t\t\t\t\t\t\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_LOGO_MINI\",$imgThumbMini,'chaine',0,'',$conf->entity);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse dol_syslog($imgThumbMini);\n\t\t\t\t\t}\n\t\t\t\t\telse dol_syslog(\"ErrorImageFormatNotSupported\",LOG_WARNING);\n\t\t\t\t}\n\t\t\t\telse if (preg_match('/^ErrorFileIsInfectedWithAVirus/',$result))\n\t\t\t\t{\n\t\t\t\t\t$error++;\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t$tmparray=explode(':',$result);\n\t\t\t\t\tsetEventMessages($langs->trans('ErrorFileIsInfectedWithAVirus',$tmparray[1]), null, 'errors');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$error++;\n\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorFailedToSaveFile\"), null, 'errors');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$error++;\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tsetEventMessages($langs->trans(\"ErrorBadImageFormat\"), null, 'errors');\n\t\t\t}\n\t\t}\n\t}\n\t\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_MANAGERS\",$_POST[\"MAIN_INFO_SOCIETE_MANAGERS\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_CAPITAL\",$_POST[\"capital\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_FORME_JURIDIQUE\",$_POST[\"forme_juridique_code\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SIREN\",$_POST[\"siren\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SIRET\",$_POST[\"siret\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_APE\",$_POST[\"ape\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_RCS\",$_POST[\"rcs\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_PROFID5\",$_POST[\"MAIN_INFO_PROFID5\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_PROFID6\",$_POST[\"MAIN_INFO_PROFID6\"],'chaine',0,'',$conf->entity);\n\n\tdolibarr_set_const($db, \"MAIN_INFO_TVAINTRA\",$_POST[\"tva\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_OBJECT\",$_POST[\"object\"],'chaine',0,'',$conf->entity);\n\n\tdolibarr_set_const($db, \"SOCIETE_FISCAL_MONTH_START\",$_POST[\"fiscalmonthstart\"],'chaine',0,'',$conf->entity);\n\n\tdolibarr_set_const($db, \"FACTURE_TVAOPTION\",$_POST[\"optiontva\"],'chaine',0,'',$conf->entity);\n\n\t// Local taxes\n\tdolibarr_set_const($db, \"FACTURE_LOCAL_TAX1_OPTION\",$_POST[\"optionlocaltax1\"],'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"FACTURE_LOCAL_TAX2_OPTION\",$_POST[\"optionlocaltax2\"],'chaine',0,'',$conf->entity);\n\n\tif($_POST[\"optionlocaltax1\"]==\"localtax1on\")\n\t{\n\t\tif(!isset($_REQUEST['lt1']))\n\t\t{\n\t\t\tdolibarr_set_const($db, \"MAIN_INFO_VALUE_LOCALTAX1\", 0,'chaine',0,'',$conf->entity);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdolibarr_set_const($db, \"MAIN_INFO_VALUE_LOCALTAX1\", GETPOST('lt1'),'chaine',0,'',$conf->entity);\n\t\t}\n\t\tdolibarr_set_const($db,\"MAIN_INFO_LOCALTAX_CALC1\", $_POST[\"clt1\"],'chaine',0,'',$conf->entity);\n\t}\n\tif($_POST[\"optionlocaltax2\"]==\"localtax2on\")\n\t{\n\t\tif(!isset($_REQUEST['lt2']))\n\t\t{\n\t\t\tdolibarr_set_const($db, \"MAIN_INFO_VALUE_LOCALTAX2\", 0,'chaine',0,'',$conf->entity);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdolibarr_set_const($db, \"MAIN_INFO_VALUE_LOCALTAX2\", GETPOST('lt2'),'chaine',0,'',$conf->entity);\n\t\t}\n\t\tdolibarr_set_const($db,\"MAIN_INFO_LOCALTAX_CALC2\", $_POST[\"clt2\"],'chaine',0,'',$conf->entity);\n\t}\n\n\tif ($action != 'updateedit' && ! $error)\n\t{\n\t\theader(\"Location: \".$_SERVER[\"PHP_SELF\"]);\n\t\texit;\n\t}\n}\n\nif ($action == 'addthumb')  // Regenerate thumbs\n{\n\tif (file_exists($conf->mycompany->dir_output.'/logos/'.$_GET[\"file\"]))\n\t{\n\t\t$isimage=image_format_supported($_GET[\"file\"]);\n\n\t\t// Create thumbs of logo\n\t\tif ($isimage > 0)\n\t\t{\n\t\t    // Create thumbs\n\t\t    //$object->addThumbs($newfile);    // We can't use addThumbs here yet because we need name of generated thumbs to add them into constants. TODO Check if need such constants. We should be able to retreive value with get... \n\n\t\t\t// Create small thumb. Used on logon for example\n\t\t\t$imgThumbSmall = vignette($conf->mycompany->dir_output.'/logos/'.$_GET[\"file\"], $maxwidthsmall, $maxheightsmall, '_small',$quality);\n\t\t\tif (image_format_supported($imgThumbSmall) >= 0 && preg_match('/([^\\\\/:]+)$/i',$imgThumbSmall,$reg))\n\t\t\t{\n\t\t\t\t$imgThumbSmall = $reg[1];   // Save only basename\n\t\t\t\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_LOGO_SMALL\",$imgThumbSmall,'chaine',0,'',$conf->entity);\n\t\t\t}\n\t\t\telse dol_syslog($imgThumbSmall);\n\n\t\t\t// Create mini thumbs. Used on menu or for setup page for example\n\t\t\t$imgThumbMini = vignette($conf->mycompany->dir_output.'/logos/'.$_GET[\"file\"], $maxwidthmini, $maxheightmini, '_mini',$quality);\n\t\t\tif (image_format_supported($imgThumbSmall) >= 0 && preg_match('/([^\\\\/:]+)$/i',$imgThumbMini,$reg))\n\t\t\t{\n\t\t\t\t$imgThumbMini = $reg[1];   // Save only basename\n\t\t\t\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_LOGO_MINI\",$imgThumbMini,'chaine',0,'',$conf->entity);\n\t\t\t}\n\t\t\telse dol_syslog($imgThumbMini);\n\n\t\t\theader(\"Location: \".$_SERVER[\"PHP_SELF\"]);\n\t\t\texit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorBadImageFormat\"), null, 'errors');\n\t\t\tdol_syslog($langs->transnoentities(\"ErrorBadImageFormat\"),LOG_WARNING);\n\t\t}\n\t}\n\telse\n\t{\n\t\t$error++;\n\t\t$langs->load(\"errors\");\n\t\tsetEventMessages($langs->trans(\"ErrorFileDoesNotExists\",$_GET[\"file\"]), null, 'errors');\n\t\tdol_syslog($langs->transnoentities(\"ErrorFileDoesNotExists\",$_GET[\"file\"]),LOG_WARNING);\n\t}\n}\n\nif ($action == 'removelogo')\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t$logofile=$conf->mycompany->dir_output.'/logos/'.$mysoc->logo;\n\tdol_delete_file($logofile);\n\tdolibarr_del_const($db, \"MAIN_INFO_SOCIETE_LOGO\",$conf->entity);\n\t$mysoc->logo='';\n\n\t$logosmallfile=$conf->mycompany->dir_output.'/logos/thumbs/'.$mysoc->logo_small;\n\tdol_delete_file($logosmallfile);\n\tdolibarr_del_const($db, \"MAIN_INFO_SOCIETE_LOGO_SMALL\",$conf->entity);\n\t$mysoc->logo_small='';\n\n\t$logominifile=$conf->mycompany->dir_output.'/logos/thumbs/'.$mysoc->logo_mini;\n\tdol_delete_file($logominifile);\n\tdolibarr_del_const($db, \"MAIN_INFO_SOCIETE_LOGO_MINI\",$conf->entity);\n\t$mysoc->logo_mini='';\n}\n\n\n/*\n * View\n */\n\n$wikihelp='EN:First_setup|FR:Premiers_param\u00e9trages|ES:Primeras_configuraciones';\nllxHeader('',$langs->trans(\"Setup\"),$wikihelp);\n\n$form=new Form($db);\n$formother=new FormOther($db);\n$formcompany=new FormCompany($db);\n\n$countrynotdefined='<font class=\"error\">'.$langs->trans(\"ErrorSetACountryFirst\").' ('.$langs->trans(\"SeeAbove\").')</font>';\n\nprint load_fiche_titre($langs->trans(\"CompanyFoundation\"),'','title_setup');\n\nprint $langs->trans(\"CompanyFundationDesc\").\"<br>\\n\";\nprint \"<br>\\n\";\n\nif ($action == 'edit' || $action == 'updateedit')\n{\n\t/**\n\t * Edition des parametres\n\t */\n\tprint \"\\n\".'<script type=\"text/javascript\" language=\"javascript\">';\n\tprint '$(document).ready(function () {\n\t\t\t  $(\"#selectcountry_id\").change(function() {\n\t\t\t\tdocument.form_index.action.value=\"updateedit\";\n\t\t\t\tdocument.form_index.submit();\n\t\t\t  });\n\t\t  });';\n\tprint '</script>'.\"\\n\";\n\n\tprint '<form enctype=\"multipart/form-data\" method=\"POST\" action=\"'.$_SERVER[\"PHP_SELF\"].'\" name=\"form_index\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\tprint '<input type=\"hidden\" name=\"action\" value=\"update\">';\n\t$var=true;\n\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\"><th class=\"titlefield\">'.$langs->trans(\"CompanyInfo\").'</th><th>'.$langs->trans(\"Value\").'</th></tr>'.\"\\n\";\n\n\t// Name\n\t\n\tprint '<tr class=\"oddeven\"><td class=\"fieldrequired\"><label for=\"name\">'.$langs->trans(\"CompanyName\").'</label></td><td>';\n\tprint '<input name=\"nom\" id=\"name\" class=\"minwidth200\" value=\"'. ($conf->global->MAIN_INFO_SOCIETE_NOM?$conf->global->MAIN_INFO_SOCIETE_NOM:$_POST[\"nom\"]) . '\" autofocus=\"autofocus\"></td></tr>'.\"\\n\";\n\n\t// Addresse\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"address\">'.$langs->trans(\"CompanyAddress\").'</label></td><td>';\n\tprint '<textarea name=\"address\" id=\"address\" class=\"quatrevingtpercent\" rows=\"'.ROWS_3.'\">'. ($conf->global->MAIN_INFO_SOCIETE_ADDRESS?$conf->global->MAIN_INFO_SOCIETE_ADDRESS:$_POST[\"address\"]) . '</textarea></td></tr>'.\"\\n\";\n\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"zipcode\">'.$langs->trans(\"CompanyZip\").'</label></td><td>';\n\tprint '<input class=\"minwidth100\" name=\"zipcode\" id=\"zipcode\" value=\"'. ($conf->global->MAIN_INFO_SOCIETE_ZIP?$conf->global->MAIN_INFO_SOCIETE_ZIP:$_POST[\"zipcode\"]) . '\"></td></tr>'.\"\\n\";\n\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"town\">'.$langs->trans(\"CompanyTown\").'</label></td><td>';\n\tprint '<input name=\"town\" class=\"minwidth100\" id=\"town\" value=\"'. ($conf->global->MAIN_INFO_SOCIETE_TOWN?$conf->global->MAIN_INFO_SOCIETE_TOWN:$_POST[\"town\"]) . '\"></td></tr>'.\"\\n\";\n\n\t// Country\n\t\n\tprint '<tr class=\"oddeven\"><td class=\"fieldrequired\"><label for=\"selectcountry_id\">'.$langs->trans(\"Country\").'</label></td><td class=\"maxwidthonsmartphone\">';\n\t//if (empty($country_selected)) $country_selected=substr($langs->defaultlang,-2);    // By default, country of localization\n\tprint $form->select_country($mysoc->country_id,'country_id');\n\tif ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\tprint '</td></tr>'.\"\\n\";\n\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"state_id\">'.$langs->trans(\"State\").'</label></td><td class=\"maxwidthonsmartphone\">';\n\t$formcompany->select_departement($conf->global->MAIN_INFO_SOCIETE_STATE,$mysoc->country_code,'state_id');\n\tprint '</td></tr>'.\"\\n\";\n\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"currency\">'.$langs->trans(\"CompanyCurrency\").'</label></td><td>';\n\tprint $form->selectCurrency($conf->currency,\"currency\");\n\tprint '</td></tr>'.\"\\n\";\n\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"phone\">'.$langs->trans(\"Phone\").'</label></td><td>';\n\tprint '<input name=\"tel\" id=\"phone\" value=\"'. $conf->global->MAIN_INFO_SOCIETE_TEL . '\"></td></tr>';\n\tprint '</td></tr>'.\"\\n\";\n\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"fax\">'.$langs->trans(\"Fax\").'</label></td><td>';\n\tprint '<input name=\"fax\" id=\"fax\" value=\"'. $conf->global->MAIN_INFO_SOCIETE_FAX . '\"></td></tr>';\n\tprint '</td></tr>'.\"\\n\";\n\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"email\">'.$langs->trans(\"EMail\").'</label></td><td>';\n\tprint '<input name=\"mail\" id=\"email\" class=\"minwidth200\" value=\"'. $conf->global->MAIN_INFO_SOCIETE_MAIL . '\"></td></tr>';\n\tprint '</td></tr>'.\"\\n\";\n\n\t// Web\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"web\">'.$langs->trans(\"Web\").'</label></td><td>';\n\tprint '<input name=\"web\" id=\"web\" class=\"minwidth300\" value=\"'. $conf->global->MAIN_INFO_SOCIETE_WEB . '\"></td></tr>';\n\tprint '</td></tr>'.\"\\n\";\n\n\t// Barcode\n\tif (! empty($conf->barcode->enabled)) {\n\t\t\n\t\tprint '<tr class=\"oddeven\"><td><label for=\"barcode\">'.$langs->trans(\"Gencod\").'</label></td><td>';\n\t\tprint '<input name=\"barcode\" id=\"barcode\" class=\"minwidth150\" value=\"'. $conf->global->MAIN_INFO_SOCIETE_GENCOD . '\"></td></tr>';\n\t\tprint '</td></tr>';\n\t}\n\n\t// Logo\n\t\n\tprint '<tr'.dol_bc($var,'hideonsmartphone').'><td><label for=\"logo\">'.$langs->trans(\"Logo\").' (png,jpg)</label></td><td>';\n\tprint '<table width=\"100%\" class=\"nobordernopadding\"><tr class=\"nocellnopadd\"><td valign=\"middle\" class=\"nocellnopadd\">';\n\tprint '<input type=\"file\" class=\"flat class=minwidth200\" name=\"logo\" id=\"logo\">';\n\tprint '</td><td class=\"nocellnopadd\" valign=\"middle\" align=\"right\">';\n\tif (! empty($mysoc->logo_mini)) {\n\t\tprint '<a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=removelogo\">'.img_delete($langs->trans(\"Delete\")).'</a>';\n\t\tif (file_exists($conf->mycompany->dir_output.'/logos/thumbs/'.$mysoc->logo_mini)) {\n\t\t\tprint ' &nbsp; ';\n\t\t\tprint '<img src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart=mycompany&amp;file='.urlencode('/thumbs/'.$mysoc->logo_mini).'\">';\n\t\t}\n\t} else {\n\t\tprint '<img height=\"30\" src=\"'.DOL_URL_ROOT.'/public/theme/common/nophoto.png\">';\n\t}\n\tprint '</td></tr></table>';\n\tprint '</td></tr>';\n\n\t// Note\n\t\n\tprint '<tr class=\"oddeven\"><td class=\"tdtop\"><label for=\"note\">'.$langs->trans(\"Note\").'</label></td><td>';\n\tprint '<textarea class=\"flat quatrevingtpercent\" name=\"note\" id=\"note\" rows=\"'.ROWS_5.'\">'.(! empty($conf->global->MAIN_INFO_SOCIETE_NOTE) ? $conf->global->MAIN_INFO_SOCIETE_NOTE : '').'</textarea></td></tr>';\n\tprint '</td></tr>';\n\n\tprint '</table>';\n\n\tprint '<br>';\n\n\t// IDs of the company (country-specific)\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\"><td>'.$langs->trans(\"CompanyIds\").'</td><td>'.$langs->trans(\"Value\").'</td></tr>';\n\t$var=true;\n\n\t$langs->load(\"companies\");\n\n\t// Managing Director(s)\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"director\">'.$langs->trans(\"ManagingDirectors\").'</label></td><td>';\n\tprint '<input name=\"MAIN_INFO_SOCIETE_MANAGERS\" id=\"director\" class=\"minwidth200\" value=\"' . $conf->global->MAIN_INFO_SOCIETE_MANAGERS . '\"></td></tr>';\n\n\t// Capital\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"capital\">'.$langs->trans(\"Capital\").'</label></td><td>';\n\tprint '<input name=\"capital\" id=\"capital\" class=\"minwidth100\" value=\"' . $conf->global->MAIN_INFO_CAPITAL . '\"></td></tr>';\n\n\t// Juridical Status\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"forme_juridique_code\">'.$langs->trans(\"JuridicalStatus\").'</label></td><td>';\n\tif ($mysoc->country_code) {\n\t\tprint $formcompany->select_juridicalstatus($conf->global->MAIN_INFO_SOCIETE_FORME_JURIDIQUE, $mysoc->country_code, '', 'forme_juridique_code');\n\t} else {\n\t\tprint $countrynotdefined;\n\t}\n\tprint '</td></tr>';\n\n\t// ProfID1\n\tif ($langs->transcountry(\"ProfId1\",$mysoc->country_code) != '-')\n\t{\n\t\t\n\t\tprint '<tr class=\"oddeven\"><td><label for=\"profid1\">'.$langs->transcountry(\"ProfId1\",$mysoc->country_code).'</label></td><td>';\n\t\tif (! empty($mysoc->country_code))\n\t\t{\n\t\t\tprint '<input name=\"siren\" id=\"profid1\" class=\"minwidth200\" value=\"' . (! empty($conf->global->MAIN_INFO_SIREN) ? $conf->global->MAIN_INFO_SIREN : '') . '\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $countrynotdefined;\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId2\n\tif ($langs->transcountry(\"ProfId2\",$mysoc->country_code) != '-')\n\t{\n\t\t\n\t\tprint '<tr class=\"oddeven\"><td><label for=\"profid2\">'.$langs->transcountry(\"ProfId2\",$mysoc->country_code).'</label></td><td>';\n\t\tif (! empty($mysoc->country_code))\n\t\t{\n\t\t\tprint '<input name=\"siret\" id=\"profid2\" class=\"minwidth200\" value=\"' . (! empty($conf->global->MAIN_INFO_SIRET) ? $conf->global->MAIN_INFO_SIRET : '' ) . '\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $countrynotdefined;\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId3\n\tif ($langs->transcountry(\"ProfId3\",$mysoc->country_code) != '-')\n\t{\n\t\t\n\t\tprint '<tr class=\"oddeven\"><td><label for=\"profid3\">'.$langs->transcountry(\"ProfId3\",$mysoc->country_code).'</label></td><td>';\n\t\tif (! empty($mysoc->country_code))\n\t\t{\n\t\t\tprint '<input name=\"ape\" id=\"profid3\" class=\"minwidth200\" value=\"' . (! empty($conf->global->MAIN_INFO_APE) ? $conf->global->MAIN_INFO_APE : '') . '\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $countrynotdefined;\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId4\n\tif ($langs->transcountry(\"ProfId4\",$mysoc->country_code) != '-')\n\t{\n\t\t\n\t\tprint '<tr class=\"oddeven\"><td><label for=\"profid4\">'.$langs->transcountry(\"ProfId4\",$mysoc->country_code).'</label></td><td>';\n\t\tif (! empty($mysoc->country_code))\n\t\t{\n\t\t\tprint '<input name=\"rcs\" id=\"profid4\" class=\"minwidth200\" value=\"' . (! empty($conf->global->MAIN_INFO_RCS) ? $conf->global->MAIN_INFO_RCS : '') . '\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $countrynotdefined;\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId5\n\tif ($langs->transcountry(\"ProfId5\",$mysoc->country_code) != '-')\n\t{\n\t\t\n\t\tprint '<tr class=\"oddeven\"><td><label for=\"profid5\">'.$langs->transcountry(\"ProfId5\",$mysoc->country_code).'</label></td><td>';\n\t\tif (! empty($mysoc->country_code))\n\t\t{\n\t\t\tprint '<input name=\"MAIN_INFO_PROFID5\" id=\"profid5\" class=\"minwidth200\" value=\"' . (! empty($conf->global->MAIN_INFO_PROFID5) ? $conf->global->MAIN_INFO_PROFID5 : '') . '\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $countrynotdefined;\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId6\n\tif ($langs->transcountry(\"ProfId6\",$mysoc->country_code) != '-')\n\t{\n\t\t\n\t\tprint '<tr class=\"oddeven\"><td><label for=\"profid6\">'.$langs->transcountry(\"ProfId6\",$mysoc->country_code).'</label></td><td>';\n\t\tif (! empty($mysoc->country_code))\n\t\t{\n\t\t\tprint '<input name=\"MAIN_INFO_PROFID6\" id=\"profid6\" class=\"minwidth200\" value=\"' . (! empty($conf->global->MAIN_INFO_PROFID6) ? $conf->global->MAIN_INFO_PROFID6 : '') . '\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $countrynotdefined;\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// TVA Intra\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"intra_vat\">'.$langs->trans(\"VATIntra\").'</label></td><td>';\n\tprint '<input name=\"tva\" id=\"intra_vat\" class=\"minwidth200\" value=\"' . (! empty($conf->global->MAIN_INFO_TVAINTRA) ? $conf->global->MAIN_INFO_TVAINTRA : '') . '\">';\n\tprint '</td></tr>';\n\t\n\t// Object of the company\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"object\">'.$langs->trans(\"CompanyObject\").'</label></td><td>';\n\tprint '<textarea class=\"flat quatrevingtpercent\" name=\"object\" id=\"object\" rows=\"'.ROWS_5.'\">'.(! empty($conf->global->MAIN_INFO_SOCIETE_OBJECT) ? $conf->global->MAIN_INFO_SOCIETE_OBJECT : '').'</textarea></td></tr>';\n\tprint '</td></tr>';\n\n\tprint '</table>';\n\n\n\t// Fiscal year start\n\tprint '<br>';\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\">';\n\tprint '<td class=\"titlefield\">'.$langs->trans(\"FiscalYearInformation\").'</td><td>'.$langs->trans(\"Value\").'</td>';\n\tprint \"</tr>\\n\";\n\n\t\n\tprint '<tr class=\"oddeven\"><td><label for=\"fiscalmonthstart\">'.$langs->trans(\"FiscalMonthStart\").'</label></td><td>';\n\tprint $formother->select_month($conf->global->SOCIETE_FISCAL_MONTH_START,'fiscalmonthstart',0,1) . '</td></tr>';\n\n\tprint \"</table>\";\n\n\n\t// Fiscal options\n\tprint '<br>';\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\">';\n\tprint '<td class=\"titlefield\">'.$langs->trans(\"VATManagement\").'</td><td>'.$langs->trans(\"Description\").'</td>';\n\tprint '<td align=\"right\">&nbsp;</td>';\n\tprint \"</tr>\\n\";\n\n\t\n\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"140\\\"><label><input type=\\\"radio\\\" name=\\\"optiontva\\\" id=\\\"use_vat\\\" value=\\\"1\\\"\".(empty($conf->global->FACTURE_TVAOPTION)?\"\":\" checked\").\"> \".$langs->trans(\"VATIsUsed\").\"</label></td>\";\n\tprint '<td colspan=\"2\">';\n\tprint \"<table>\";\n\tprint \"<tr><td><label for=\\\"use_vat\\\">\".$langs->trans(\"VATIsUsedDesc\").\"</label></td></tr>\";\n\tprint \"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->trans(\"VATIsUsedExampleFR\").\"</i></td></tr>\\n\";\n\tprint \"</table>\";\n\tprint \"</td></tr>\\n\";\n\n\t\n\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"140\\\"><label><input type=\\\"radio\\\" name=\\\"optiontva\\\" id=\\\"no_vat\\\" value=\\\"0\\\"\".(empty($conf->global->FACTURE_TVAOPTION)?\" checked\":\"\").\"> \".$langs->trans(\"VATIsNotUsed\").\"</label></td>\";\n\tprint '<td colspan=\"2\">';\n\tprint \"<table>\";\n\tprint \"<tr><td><label for=\\\"no_vat\\\">\".$langs->trans(\"VATIsNotUsedDesc\").\"</label></td></tr>\";\n\tprint \"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->trans(\"VATIsNotUsedExampleFR\").\"</i></td></tr>\\n\";\n\tprint \"</table>\";\n\tprint \"</td></tr>\\n\";\n\n\tprint \"</table>\";\n\n\t/*\n\t *  Local Taxes\n\t */\n\tif ($mysoc->useLocalTax(1))\n\t{\n\t\t// Local Tax 1\n\t\tprint '<br>';\n\t\tprint '<table class=\"noborder\" width=\"100%\">';\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tprint '<td>'.$langs->transcountry(\"LocalTax1Management\",$mysoc->country_code).'</td><td>'.$langs->trans(\"Description\").'</td>';\n\t\tprint '<td align=\"right\">&nbsp;</td>';\n\t\tprint \"</tr>\\n\";\n\t\t\n\t\t// Note: When option is not set, it must not appears as set on on, because there is no default value for this option\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"140\\\"><input type=\\\"radio\\\" name=\\\"optionlocaltax1\\\" id=\\\"lt1\\\" value=\\\"localtax1on\\\"\".(($conf->global->FACTURE_LOCAL_TAX1_OPTION == '1' || $conf->global->FACTURE_LOCAL_TAX1_OPTION == \"localtax1on\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax1IsUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint '<table class=\"nobordernopadding\">';\n\t\tprint \"<tr><td><label for=\\\"lt1\\\">\".$langs->transcountry(\"LocalTax1IsUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax1IsUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax1IsUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax1IsUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tif(! isOnlyOneLocalTax(1))\n\t\t{\n\t\t\tprint '<tr><td align=\"left\"><label for=\"lt1\">'.$langs->trans(\"LTRate\").'</label>: ';\n\t\t\t$formcompany->select_localtax(1,$conf->global->MAIN_INFO_VALUE_LOCALTAX1, \"lt1\");\n\t\t    print '</td></tr>';\n\t\t}\n\n\t\t$opcions=array($langs->trans(\"CalcLocaltax1\").' '.$langs->trans(\"CalcLocaltax1Desc\"),$langs->trans(\"CalcLocaltax2\").' - '.$langs->trans(\"CalcLocaltax2Desc\"),$langs->trans(\"CalcLocaltax3\").' - '.$langs->trans(\"CalcLocaltax3Desc\"));\n\n\t\tprint '<tr><td align=\"left\"></label for=\"clt1\">'.$langs->trans(\"CalcLocaltax\").'</label>: ';\n\t\tprint $form->selectarray(\"clt1\", $opcions, $conf->global->MAIN_INFO_LOCALTAX_CALC1);\n\t\tprint '</td></tr>';\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\n\t\t\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"140\\\"><input type=\\\"radio\\\" name=\\\"optionlocaltax1\\\" id=\\\"nolt1\\\" value=\\\"localtax1off\\\"\".((empty($conf->global->FACTURE_LOCAL_TAX1_OPTION) || $conf->global->FACTURE_LOCAL_TAX1_OPTION == \"localtax1off\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax1IsNotUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint \"<table>\";\n\t\tprint \"<tr><td><label for=\\\"nolt1\\\">\".$langs->transcountry(\"LocalTax1IsNotUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax1IsNotUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax1IsNotUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax1IsNotUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\t\tprint \"</table>\";\n\t}\n\tif ($mysoc->useLocalTax(2))\n\t{\n\t\t// Local Tax 2\n\t\tprint '<br>';\n\t\tprint '<table class=\"noborder\" width=\"100%\">';\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tprint '<td>'.$langs->transcountry(\"LocalTax2Management\",$mysoc->country_code).'</td><td>'.$langs->trans(\"Description\").'</td>';\n\t\tprint '<td align=\"right\">&nbsp;</td>';\n\t\tprint \"</tr>\\n\";\n\n\t\t\n\t\t// Note: When option is not set, it must not appears as set on on, because there is no default value for this option\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"140\\\"><input type=\\\"radio\\\" name=\\\"optionlocaltax2\\\" id=\\\"lt2\\\" value=\\\"localtax2on\\\"\".(($conf->global->FACTURE_LOCAL_TAX2_OPTION == '1' || $conf->global->FACTURE_LOCAL_TAX2_OPTION == \"localtax2on\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax2IsUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint '<table class=\"nobordernopadding\">';\n\t\tprint \"<tr><td><label for=\\\"lt2\\\">\".$langs->transcountry(\"LocalTax2IsUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax2IsUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax2IsUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax2IsUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tif(! isOnlyOneLocalTax(2))\n\t\t{\n\t\t    print '<tr><td align=\"left\"><label for=\"lt2\">'.$langs->trans(\"LTRate\").'</label>: ';\n\t\t    $formcompany->select_localtax(2,$conf->global->MAIN_INFO_VALUE_LOCALTAX2, \"lt2\");\n\t\t\tprint '</td></tr>';\n\t\t}\n\t\tprint '<tr><td align=\"left\"><label for=\"clt2\">'.$langs->trans(\"CalcLocaltax\").'</label>: ';\n\t\tprint $form->selectarray(\"clt2\", $opcions, $conf->global->MAIN_INFO_LOCALTAX_CALC2);\n\t\tprint '</td></tr>';\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\n\t\t\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"140\\\"><input type=\\\"radio\\\" name=\\\"optionlocaltax2\\\" id=\\\"nolt2\\\" value=\\\"localtax2off\\\"\".((empty($conf->global->FACTURE_LOCAL_TAX2_OPTION) || $conf->global->FACTURE_LOCAL_TAX2_OPTION == \"localtax2off\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax2IsNotUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint \"<table>\";\n\t\tprint \"<tr><td><label for=\\\"nolt2\\\">\".$langs->transcountry(\"LocalTax2IsNotUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax2IsNotUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax2IsNotUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax2IsNotUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\t\tprint \"</table>\";\n\t}\n\n\n\tprint '<br><div class=\"center\">';\n\tprint '<input type=\"submit\" class=\"button\" name=\"save\" value=\"'.$langs->trans(\"Save\").'\">';\n\tprint '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';\n\tprint '<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\tprint '</div>';\n\tprint '<br>';\n\n\tprint '</form>';\n}\nelse\n{\n\t/*\n\t * Show parameters\n\t */\n\n\t// Actions buttons\n\t//print '<div class=\"tabsAction\">';\n\t//print '<a class=\"butAction\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=edit\">'.$langs->trans(\"Modify\").'</a>';\n\t//print '</div><br>';\n\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\"><td>'.$langs->trans(\"CompanyInfo\").'</td><td>'.$langs->trans(\"Value\").'</td></tr>';\n\n\t\n\tprint '<tr class=\"oddeven\"><td class=\"titlefield\">'.$langs->trans(\"CompanyName\").'</td><td>';\n\tif (! empty($conf->global->MAIN_INFO_SOCIETE_NOM)) print $conf->global->MAIN_INFO_SOCIETE_NOM;\n\telse print img_warning().' <font class=\"error\">'.$langs->trans(\"ErrorFieldRequired\",$langs->transnoentitiesnoconv(\"CompanyName\")).'</font>';\n\tprint '</td></tr>';\n\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"CompanyAddress\").'</td><td>' . nl2br(empty($conf->global->MAIN_INFO_SOCIETE_ADDRESS)?'':$conf->global->MAIN_INFO_SOCIETE_ADDRESS) . '</td></tr>';\n\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"CompanyZip\").'</td><td>' . (empty($conf->global->MAIN_INFO_SOCIETE_ZIP)?'':$conf->global->MAIN_INFO_SOCIETE_ZIP) . '</td></tr>';\n\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"CompanyTown\").'</td><td>' . (empty($conf->global->MAIN_INFO_SOCIETE_TOWN)?'':$conf->global->MAIN_INFO_SOCIETE_TOWN) . '</td></tr>';\n\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"CompanyCountry\").'</td><td>';\n\tif ($mysoc->country_code)\n\t{\n\t\t$img=picto_from_langcode($mysoc->country_code);\n\t\tprint $img?$img.' ':'';\n\t\tprint getCountry($mysoc->country_code,1);\n\t}\n\telse print img_warning().' <font class=\"error\">'.$langs->trans(\"ErrorFieldRequired\",$langs->transnoentitiesnoconv(\"CompanyCountry\")).'</font>';\n\tprint '</td></tr>';\n\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"State\").'</td><td>';\n\tif (! empty($conf->global->MAIN_INFO_SOCIETE_STATE)) print getState($conf->global->MAIN_INFO_SOCIETE_STATE);\n\telse print '&nbsp;';\n\tprint '</td></tr>';\n\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"CompanyCurrency\").'</td><td>';\n\tprint currency_name($conf->currency,1);\n\tprint ' ('.$conf->currency;\n\tprint ($conf->currency != $langs->getCurrencySymbol($conf->currency) ? ' - '.$langs->getCurrencySymbol($conf->currency) : '');\n\tprint ')';\n\tprint '</td></tr>';\n\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"Phone\").'</td><td>' . dol_print_phone($conf->global->MAIN_INFO_SOCIETE_TEL,$mysoc->country_code) . '</td></tr>';\n\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"Fax\").'</td><td>' . dol_print_phone($conf->global->MAIN_INFO_SOCIETE_FAX,$mysoc->country_code) . '</td></tr>';\n\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"Mail\").'</td><td>' . dol_print_email($conf->global->MAIN_INFO_SOCIETE_MAIL,0,0,0,80) . '</td></tr>';\n\n\t// Web\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"Web\").'</td><td>' . dol_print_url($conf->global->MAIN_INFO_SOCIETE_WEB,'_blank',80) . '</td></tr>';\n\n\t// Barcode\n\tif (! empty($conf->barcode->enabled))\n\t{\n\t\t\n\t\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"Gencod\").'</td><td>' . $conf->global->MAIN_INFO_SOCIETE_GENCOD . '</td></tr>';\n\t}\n\n\t// Logo\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"Logo\").'</td><td>';\n\n\t$tagtd='tagtd ';\n\tif ($conf->browser->layout == 'phone') $tagtd='';\n\tprint '<div class=\"tagtable centpercent\"><div class=\"tagtr inline-block centpercent valignmiddle\"><div class=\"'.$tagtd.'inline-block valignmiddle left\">';\n\tprint $mysoc->logo;\n\tprint '</div><div class=\"'.$tagtd.'inline-block valignmiddle left\">';\n\n\t// It offers the generation of the thumbnail if it does not exist\n\tif (!is_file($conf->mycompany->dir_output.'/logos/thumbs/'.$mysoc->logo_mini) && preg_match('/(\\.jpg|\\.jpeg|\\.png)$/i',$mysoc->logo))\n\t{\n\t\tprint '<a class=\"img_logo\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=addthumb&amp;file='.urlencode($mysoc->logo).'\">'.img_picto($langs->trans('GenerateThumb'),'refresh').'</a>&nbsp;&nbsp;';\n\t}\n\telse if ($mysoc->logo_mini && is_file($conf->mycompany->dir_output.'/logos/thumbs/'.$mysoc->logo_mini))\n\t{\n\t\tprint '<img class=\"img_logo\" src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart=mycompany&amp;file='.urlencode('/thumbs/'.$mysoc->logo_mini).'\">';\n\t}\n\telse\n\t{\n\t\tprint '<img class=\"img_logo\" src=\"'.DOL_URL_ROOT.'/public/theme/common/nophoto.png\">';\n\t}\n\tprint '</div></div></div>';\n\n\tprint '</td></tr>';\n\n\t\n\tprint '<tr class=\"oddeven\"><td class=\"tdtop\">'.$langs->trans(\"Note\").'</td><td>' . (! empty($conf->global->MAIN_INFO_SOCIETE_NOTE) ? nl2br($conf->global->MAIN_INFO_SOCIETE_NOTE) : '') . '</td></tr>';\n\n\tprint '</table>';\n\n\n\tprint '<br>';\n\n\n\t// IDs of the company (country-specific)\n\tprint '<form name=\"formsoc\" method=\"post\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\"><td class=\"titlefield\">'.$langs->trans(\"CompanyIds\").'</td><td>'.$langs->trans(\"Value\").'</td></tr>';\n\n\t// Managing Director(s)\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"ManagingDirectors\").'</td><td>';\n\tprint $conf->global->MAIN_INFO_SOCIETE_MANAGERS . '</td></tr>';\n\n\t// Capital\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"Capital\").'</td><td>';\n\tprint $conf->global->MAIN_INFO_CAPITAL . '</td></tr>';\n\n\t// Juridical Status\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"JuridicalStatus\").'</td><td>';\n\tprint getFormeJuridiqueLabel($conf->global->MAIN_INFO_SOCIETE_FORME_JURIDIQUE);\n\tprint '</td></tr>';\n\n\t// ProfId1\n\tif ($langs->transcountry(\"ProfId1\",$mysoc->country_code) != '-')\n\t{\n\t\t\n\t\tprint '<tr class=\"oddeven\"><td>'.$langs->transcountry(\"ProfId1\",$mysoc->country_code).'</td><td>';\n\t\tif (! empty($conf->global->MAIN_INFO_SIREN))\n\t\t{\n\t\t\tprint $conf->global->MAIN_INFO_SIREN;\n\t\t\t$s = $mysoc->id_prof_url(1,$mysoc);\n\t\t\tif ($s) print ' - '.$s;\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId2\n\tif ($langs->transcountry(\"ProfId2\",$mysoc->country_code) != '-')\n\t{\n\t\t\n\t\tprint '<tr class=\"oddeven\"><td>'.$langs->transcountry(\"ProfId2\",$mysoc->country_code).'</td><td>';\n\t\tif (! empty($conf->global->MAIN_INFO_SIRET))\n\t\t{\n\t\t\tprint $conf->global->MAIN_INFO_SIRET;\n\t\t\t$s = $mysoc->id_prof_url(2,$mysoc);\n\t\t\tif ($s) print ' - '.$s;\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId3\n\tif ($langs->transcountry(\"ProfId3\",$mysoc->country_code) != '-')\n\t{\n\t\t\n\t\tprint '<tr class=\"oddeven\"><td>'.$langs->transcountry(\"ProfId3\",$mysoc->country_code).'</td><td>';\n\t\tif (! empty($conf->global->MAIN_INFO_APE))\n\t\t{\n\t\t\tprint $conf->global->MAIN_INFO_APE;\n\t\t\t$s = $mysoc->id_prof_url(3,$mysoc);\n\t\t\tif ($s) print ' - '.$s;\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId4\n\tif ($langs->transcountry(\"ProfId4\",$mysoc->country_code) != '-')\n\t{\n\t\t\n\t\tprint '<tr class=\"oddeven\"><td>'.$langs->transcountry(\"ProfId4\",$mysoc->country_code).'</td><td>';\n\t\tif (! empty($conf->global->MAIN_INFO_RCS))\n\t\t{\n\t\t\tprint $conf->global->MAIN_INFO_RCS;\n\t\t\t$s = $mysoc->id_prof_url(4,$mysoc);\n\t\t\tif ($s) print ' - '.$s;\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId5\n\tif ($langs->transcountry(\"ProfId5\",$mysoc->country_code) != '-')\n\t{\n\t\t\n\t\tprint '<tr class=\"oddeven\"><td>'.$langs->transcountry(\"ProfId5\",$mysoc->country_code).'</td><td>';\n\t\tif (! empty($conf->global->MAIN_INFO_PROFID5))\n\t\t{\n\t\t\tprint $conf->global->MAIN_INFO_PROFID5;\n\t\t\t$s = $mysoc->id_prof_url(5,$mysoc);\n\t\t\tif ($s) print ' - '.$s;\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId6\n\tif ($langs->transcountry(\"ProfId6\",$mysoc->country_code) != '-')\n\t{\n\t\t\n\t\tprint '<tr class=\"oddeven\"><td>'.$langs->transcountry(\"ProfId6\",$mysoc->country_code).'</td><td>';\n\t\tif (! empty($conf->global->MAIN_INFO_PROFID6))\n\t\t{\n\t\t\tprint $conf->global->MAIN_INFO_PROFID6;\n\t\t\t$s = $mysoc->id_prof_url(6,$mysoc);\n\t\t\tif ($s) print ' - '.$s;\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// VAT\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"VATIntra\").'</td>';\n\tprint '<td>';\n\tif (! empty($conf->global->MAIN_INFO_TVAINTRA))\n\t{\n\t\t$s='';\n\t\t$s.=$conf->global->MAIN_INFO_TVAINTRA;\n\t\t$s.='<input type=\"hidden\" name=\"tva_intra\" size=\"12\" maxlength=\"20\" value=\"'.$conf->global->MAIN_INFO_TVAINTRA.'\">';\n\t\tif (empty($conf->global->MAIN_DISABLEVATCHECK) && $mysoc->isInEEC())\n\t\t{\n\t\t\t$s.=' - ';\n\t\t\tif (! empty($conf->use_javascript_ajax))\n\t\t\t{\n\t\t\t\tprint \"\\n\";\n\t\t\t\tprint '<script language=\"JavaScript\" type=\"text/javascript\">';\n\t\t\t\tprint \"function CheckVAT(a) {\\n\";\n\t\t\t\tprint \"newpopup('\".DOL_URL_ROOT.\"/societe/checkvat/checkVatPopup.php?vatNumber='+a,'\".dol_escape_js($langs->trans(\"VATIntraCheckableOnEUSite\")).\"',500,285);\\n\";\n\t\t\t\tprint \"}\\n\";\n\t\t\t\tprint '</script>';\n\t\t\t\tprint \"\\n\";\n\t\t\t\t$s.='<a href=\"#\" onClick=\"javascript: CheckVAT(document.formsoc.tva_intra.value);\">'.$langs->trans(\"VATIntraCheck\").'</a>';\n\t\t\t\t$s = $form->textwithpicto($s,$langs->trans(\"VATIntraCheckDesc\",$langs->trans(\"VATIntraCheck\")),1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$s.='<a href=\"'.$langs->transcountry(\"VATIntraCheckURL\",$soc->id_country).'\" target=\"_blank\">'.img_picto($langs->trans(\"VATIntraCheckableOnEUSite\"),'help').'</a>';\n\t\t\t}\n\t\t}\n\t\tprint $s;\n\t}\n\telse\n\t{\n\t\tprint '&nbsp;';\n\t}\n\tprint '</td>';\n\tprint '</tr>';\n\t\n\t\n\tprint '<tr class=\"oddeven\"><td class=\"tdtop\">'.$langs->trans(\"CompanyObject\").'</td><td>' . (! empty($conf->global->MAIN_INFO_SOCIETE_OBJECT) ? nl2br($conf->global->MAIN_INFO_SOCIETE_OBJECT) : '') . '</td></tr>';\n\n\tprint '</table>';\n\tprint '</form>';\n\n\t/*\n\t *  fiscal year beginning\n\t */\n\tprint '<br>';\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\">';\n\tprint '<td class=\"titlefield\">'.$langs->trans(\"FiscalYearInformation\").'</td><td>'.$langs->trans(\"Value\").'</td>';\n\tprint \"</tr>\\n\";\n\n\t\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"FiscalMonthStart\").'</td><td>';\n\t$monthstart=(! empty($conf->global->SOCIETE_FISCAL_MONTH_START)) ? $conf->global->SOCIETE_FISCAL_MONTH_START : 1;\n\tprint dol_print_date(dol_mktime(12,0,0,$monthstart,1,2000,1),'%B','gm') . '</td></tr>';\n\n\tprint \"</table>\";\n\n\t/*\n\t *  tax options\n\t */\n\tprint '<br>';\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\">';\n\tprint '<td>'.$langs->trans(\"VATManagement\").'</td><td>'.$langs->trans(\"Description\").'</td>';\n\tprint '<td align=\"right\">&nbsp;</td>';\n\tprint \"</tr>\\n\";\n\n\t\n\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"160\\\"><input class=\\\"oddeven\\\" type=\\\"radio\\\" name=\\\"optiontva\\\" id=\\\"use_vat\\\" disabled value=\\\"1\\\"\".(empty($conf->global->FACTURE_TVAOPTION)?\"\":\" checked\").\"> \".$langs->trans(\"VATIsUsed\").\"</td>\";\n\tprint '<td colspan=\"2\">';\n\tprint \"<table>\";\n\tprint \"<tr><td><label for=\\\"use_vat\\\">\".$langs->trans(\"VATIsUsedDesc\").\"</label></td></tr>\";\n\tprint \"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->trans(\"VATIsUsedExampleFR\").\"</i></td></tr>\\n\";\n\tprint \"</table>\";\n\tprint \"</td></tr>\\n\";\n\n\t\n\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"160\\\"><input class=\\\"oddeven\\\" type=\\\"radio\\\" name=\\\"optiontva\\\" id=\\\"no_vat\\\" disabled value=\\\"0\\\"\".(empty($conf->global->FACTURE_TVAOPTION)?\" checked\":\"\").\"> \".$langs->trans(\"VATIsNotUsed\").\"</td>\";\n\tprint '<td colspan=\"2\">';\n\tprint \"<table>\";\n\tprint \"<tr><td><label=\\\"no_vat\\\">\".$langs->trans(\"VATIsNotUsedDesc\").\"</label></td></tr>\";\n\tprint \"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->trans(\"VATIsNotUsedExampleFR\").\"</i></td></tr>\\n\";\n\tprint \"</table>\";\n\tprint \"</td></tr>\\n\";\n\n\tprint \"</table>\";\n\n\n\t/*\n\t *  Local Taxes\n\t */\n\tif ($mysoc->useLocalTax(1))    // True if we found at least on vat with a setup adding a localtax 1\n\t{\n\t\t// Local Tax 1\n\t\tprint '<br>';\n\t\tprint '<table class=\"noborder\" width=\"100%\">';\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tprint '<td>'.$langs->transcountry(\"LocalTax1Management\",$mysoc->country_code).'</td><td>'.$langs->trans(\"Description\").'</td>';\n\t\tprint '<td align=\"right\">&nbsp;</td>';\n\t\tprint \"</tr>\\n\";\n\n\t\t\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"160\\\"><input class=\\\"oddeven\\\" type=\\\"radio\\\" name=\\\"optionlocaltax1\\\" id=\\\"lt1\\\" disabled value=\\\"localtax1on\\\"\".(($conf->global->FACTURE_LOCAL_TAX1_OPTION == '1' || $conf->global->FACTURE_LOCAL_TAX1_OPTION == \"localtax1on\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax1IsUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint \"<table>\";\n\t\tprint \"<tr><td></label for=\\\"lt1\\\">\".$langs->transcountry(\"LocalTax1IsUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax1IsUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax1IsUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax1IsUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tif($conf->global->MAIN_INFO_VALUE_LOCALTAX1!=0)\n\t\t{\n\t\t\tprint '<tr><td>'.$langs->trans(\"LTRate\").': '. $conf->global->MAIN_INFO_VALUE_LOCALTAX1 .'</td></tr>';\n\t\t}\n\t\tprint '<tr><td align=\"left\">'.$langs->trans(\"CalcLocaltax\").': ';\n\t\tif($conf->global->MAIN_INFO_LOCALTAX_CALC1==0)\n\t\t{\n\t\t\tprint $langs->trans(\"CalcLocaltax1\").' - '.$langs->trans(\"CalcLocaltax1Desc\");\n\t\t}\n\t\telse if($conf->global->MAIN_INFO_LOCALTAX_CALC1==1)\n\t\t{\n\t\t\tprint $langs->trans(\"CalcLocaltax2\").' - '.$langs->trans(\"CalcLocaltax2Desc\");\n\t\t}\n\t\telse if($conf->global->MAIN_INFO_LOCALTAX_CALC1==2){\n\t\t\tprint $langs->trans(\"CalcLocaltax3\").' - '.$langs->trans(\"CalcLocaltax3Desc\");\n\t\t}\n\n\t\tprint '</td></tr>';\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\n\t\t\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"160\\\"><input class=\\\"oddeven\\\" type=\\\"radio\\\" name=\\\"optionlocaltax1\\\" id=\\\"nolt1\\\" disabled value=\\\"localtax1off\\\"\".((empty($conf->global->FACTURE_LOCAL_TAX1_OPTION) || $conf->global->FACTURE_LOCAL_TAX1_OPTION == \"localtax1off\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax1IsNotUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint \"<table>\";\n\t\tprint \"<tr><td><label for=\\\"no_lt1\\\">\".$langs->transcountry(\"LocalTax1IsNotUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax1IsNotUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax1IsNotUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax1IsNotUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\n\t\tprint \"</table>\";\n\t}\n\tif ($mysoc->useLocalTax(2))    // True if we found at least on vat with a setup adding a localtax 1\n\t{\n\t\t// Local Tax 2\n\t\tprint '<br>';\n\t\tprint '<table class=\"noborder\" width=\"100%\">';\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tprint '<td>'.$langs->transcountry(\"LocalTax2Management\",$mysoc->country_code).'</td><td>'.$langs->trans(\"Description\").'</td>';\n\t\tprint '<td align=\"right\">&nbsp;</td>';\n\t\tprint \"</tr>\\n\";\n\n\t\t\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"160\\\"><input class=\\\"oddeven\\\" type=\\\"radio\\\" name=\\\"optionlocaltax2\\\" id=\\\"lt2\\\" disabled value=\\\"localtax2on\\\"\".(($conf->global->FACTURE_LOCAL_TAX2_OPTION == '1' || $conf->global->FACTURE_LOCAL_TAX2_OPTION == \"localtax2on\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax2IsUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint \"<table>\";\n\t\tprint \"<tr><td><label for=\\\"lt2\\\">\".$langs->transcountry(\"LocalTax2IsUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax2IsUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax2IsUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax2IsUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tif($conf->global->MAIN_INFO_VALUE_LOCALTAX2!=0)\n\t\t{\n\t\t\tprint '<tr><td>'.$langs->trans(\"LTRate\").': '. $conf->global->MAIN_INFO_VALUE_LOCALTAX2 .'</td></tr>';\n\t\t}\n\t\tprint '<tr><td align=\"left\">'.$langs->trans(\"CalcLocaltax\").': ';\n\t\tif($conf->global->MAIN_INFO_LOCALTAX_CALC2==0)\n\t\t{\n\t\t\tprint $langs->trans(\"CalcLocaltax1\").' - '.$langs->trans(\"CalcLocaltax1Desc\");\n\t\t}\n\t\telse if($conf->global->MAIN_INFO_LOCALTAX_CALC2==1)\n\t\t{\n\t\t\tprint $langs->trans(\"CalcLocaltax2\").' - '.$langs->trans(\"CalcLocaltax2Desc\");\n\t\t}\n\t\telse if($conf->global->MAIN_INFO_LOCALTAX_CALC2==2)\n\t\t{\n\t\t\tprint $langs->trans(\"CalcLocaltax3\").' - '.$langs->trans(\"CalcLocaltax3Desc\");\n\t\t}\n\n\t\tprint '</td></tr>';\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\n\t\t\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"160\\\"><input class=\\\"oddeven\\\" type=\\\"radio\\\" name=\\\"optionlocaltax2\\\" id=\\\"nolt2\\\" disabled value=\\\"localtax2off\\\"\".((empty($conf->global->FACTURE_LOCAL_TAX2_OPTION) || $conf->global->FACTURE_LOCAL_TAX2_OPTION == \"localtax2off\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax2IsNotUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint \"<table>\";\n\t\tprint \"<tr><td><label for=\\\"nolt2\\\">\".$langs->transcountry(\"LocalTax2IsNotUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax2IsNotUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax2IsNotUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax2IsNotUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\n\t\tprint \"</table>\";\n\t}\n\n\n\t// Actions buttons\n\tprint '<div class=\"tabsAction\">';\n\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=edit\">'.$langs->trans(\"Modify\").'</a></div>';\n\tprint '</div>';\n\n\tprint '<br>';\n}\n\n\nllxFooter();\n\n$db->close();\n", "<?php\n/* Copyright (C) 2007      Patrick Raguin       <patrick.raguin@gmail.com>\n * Copyright (C) 2007-2012 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2009-2011 Regis Houssin        <regis.houssin@capnetworks.com>\n * Copyright (C) 2016      Meziane Sof          <virtualsof@yahoo.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\t\\file       htdocs/admin/menus/edit.php\n *\t\t\\ingroup    core\n *\t\t\\brief      Tool to edit menus\n */\n\nrequire '../../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/menubase.class.php';\n\n\n$langs->load(\"admin\");\n$langs->load('other');\n\nif (! $user->admin) accessforbidden();\n\n$dirstandard = array();\n$dirsmartphone = array();\n$dirmenus=array_merge(array(\"/core/menus/\"),(array) $conf->modules_parts['menus']);\nforeach($dirmenus as $dirmenu)\n{\n    $dirstandard[]=$dirmenu.'standard';\n    $dirsmartphone[]=$dirmenu.'smartphone';\n}\n\n$action=GETPOST('action','aZ09');\n\n$menu_handler_top=$conf->global->MAIN_MENU_STANDARD;\n$menu_handler_smartphone=$conf->global->MAIN_MENU_SMARTPHONE;\n$menu_handler_top=preg_replace('/_backoffice.php/i','',$menu_handler_top);\n$menu_handler_top=preg_replace('/_frontoffice.php/i','',$menu_handler_top);\n$menu_handler_smartphone=preg_replace('/_backoffice.php/i','',$menu_handler_smartphone);\n$menu_handler_smartphone=preg_replace('/_frontoffice.php/i','',$menu_handler_smartphone);\n\n$menu_handler=$menu_handler_top;\n\nif (GETPOST(\"handler_origine\")) $menu_handler=GETPOST(\"handler_origine\");\nif (GETPOST(\"menu_handler\"))    $menu_handler=GETPOST(\"menu_handler\");\n\n\n\n/*\n * Actions\n */\n\nif ($action == 'update')\n{\n    if (! $_POST['cancel'])\n    {\n        $leftmenu=''; $mainmenu='';\n        if (! empty($_POST['menuIdParent']) && ! is_numeric($_POST['menuIdParent']))\n        {\n            $tmp=explode('&',$_POST['menuIdParent']);\n            foreach($tmp as $s)\n            {\n                if (preg_match('/fk_mainmenu=/',$s))\n                {\n                    $mainmenu=preg_replace('/fk_mainmenu=/','',$s);\n                }\n                if (preg_match('/fk_leftmenu=/',$s))\n                {\n                    $leftmenu=preg_replace('/fk_leftmenu=/','',$s);\n                }\n            }\n        }\n        \n        $menu = new Menubase($db);\n        $result=$menu->fetch($_POST['menuId']);\n        if ($result > 0)\n        {\n            $menu->titre=$_POST['titre'];\n            $menu->leftmenu=$_POST['leftmenu'];\n            $menu->url=$_POST['url'];\n            $menu->langs=$_POST['langs'];\n            $menu->position=$_POST['position'];\n            $menu->enabled=$_POST['enabled'];\n            $menu->perms=$_POST['perms'];\n            $menu->target=$_POST['target'];\n            $menu->user=$_POST['user'];\n            if (is_numeric($_POST['menuIdParent']))\n            {\n            \t$menu->fk_menu=$_POST['menuIdParent'];\n            }\n            else\n            {\n    \t       \tif ($_POST['type'] == 'top') $menu->fk_menu=0;\n    \t       \telse $menu->fk_menu=-1;\n            \t$menu->fk_mainmenu=$mainmenu;\n            \t$menu->fk_leftmenu=$leftmenu;\n            }\n\n            $result=$menu->update($user);\n            if ($result > 0)\n            {\n\t            setEventMessages($langs->trans(\"RecordModifiedSuccessfully\"), null, 'mesgs');\n            }\n            else\n            {\n\t            setEventMessages($menu->error, $menu->errors, 'errors');\n            }\n        }\n        else\n        {\n\t        setEventMessages($menu->error, $menu->errors, 'errors');\n        }\n        $_GET[\"menuId\"] = $_POST['menuId'];\n        $action = \"edit\";\n    }\n    else\n    {\n        header(\"Location: \".DOL_URL_ROOT.\"/admin/menus/index.php?menu_handler=\".$menu_handler);\n        exit;\n    }\n\n    if ($_GET['return'])\n    {\n        header(\"Location: \".DOL_URL_ROOT.\"/admin/menus/index.php?menu_handler=\".$menu_handler);\n        exit;\n    }\n}\n\nif ($action == 'add')\n{\n    if ($_POST['cancel'])\n    {\n        header(\"Location: \".DOL_URL_ROOT.\"/admin/menus/index.php?menu_handler=\".$menu_handler);\n        exit;\n    }\n\n    $leftmenu=''; $mainmenu='';\n    if (! empty($_POST['menuId']) && ! is_numeric($_POST['menuId']))\n    {\n\t    $tmp=explode('&',$_POST['menuId']);\n\t    foreach($tmp as $s)\n\t    {\n\t    \tif (preg_match('/fk_mainmenu=/',$s))\n\t    \t{\n\t\t\t\t$mainmenu=preg_replace('/fk_mainmenu=/','',$s);\n\t    \t}\n\t    \tif (preg_match('/fk_leftmenu=/',$s))\n\t    \t{\n\t    \t\t$leftmenu=preg_replace('/fk_leftmenu=/','',$s);\n\t    \t}\n\t    }\n    }\n\n    $langs->load(\"errors\");\n\n    $error=0;\n    if (! $error && ! $_POST['menu_handler'])\n    {\n\t    setEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"MenuHandler\")), null, 'errors');\n        $action = 'create';\n        $error++;\n    }\n    if (! $error && ! $_POST['type'])\n    {\n\t    setEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Type\")), null, 'errors');\n        $action = 'create';\n        $error++;\n    }\n    if (! $error && ! $_POST['url'])\n    {\n\t    setEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->trans(\"URL\")), null, 'errors');\n        $action = 'create';\n        $error++;\n    }\n    if (! $error && ! $_POST['titre'])\n    {\n\t    setEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->trans(\"Title\")), null, 'errors');\n        $action = 'create';\n        $error++;\n    }\n    if (! $error && $_POST['menuId'] && $_POST['type'] == 'top')\n    {\n\t    setEventMessages($langs->trans(\"ErrorTopMenuMustHaveAParentWithId0\"), null, 'errors');\n        $action = 'create';\n        $error++;\n    }\n    if (! $error && empty($_POST['menuId']) && $_POST['type'] == 'left')\n    {\n\t    setEventMessages($langs->trans(\"ErrorLeftMenuMustHaveAParentId\"), null, 'errors');\n        $action = 'create';\n        $error++;\n    }\n\n    if (! $error)\n    {\n        $menu = new Menubase($db);\n        $menu->menu_handler=preg_replace('/_menu$/','',$_POST['menu_handler']);\n        $menu->type=$_POST['type'];\n        $menu->titre=$_POST['titre'];\n        $menu->url=$_POST['url'];\n        $menu->langs=$_POST['langs'];\n        $menu->position=$_POST['position'];\n        $menu->enabled=$_POST['enabled'];\n        $menu->perms=$_POST['perms'];\n        $menu->target=$_POST['target'];\n        $menu->user=$_POST['user'];\n        if (is_numeric($_POST['menuId']))\n        {\n        \t$menu->fk_menu=$_POST['menuId'];\n        }\n        else\n       {\n\t       \tif ($_POST['type'] == 'top') $menu->fk_menu=0;\n\t       \telse $menu->fk_menu=-1;\n        \t$menu->fk_mainmenu=$mainmenu;\n        \t$menu->fk_leftmenu=$leftmenu;\n       }\n\n        $result=$menu->create($user);\n        if ($result > 0)\n        {\n            header(\"Location: \".DOL_URL_ROOT.\"/admin/menus/index.php?menu_handler=\".$_POST['menu_handler']);\n            exit;\n        }\n        else\n        {\n            $action = 'create';\n\t        setEventMessages($menu->error, $menu->errors, 'errors');\n        }\n    }\n}\n\n// delete\nif ($action == 'confirm_delete' && $_POST[\"confirm\"] == 'yes')\n{\n    $this->db->begin();\n\n    $sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"menu WHERE rowid = \".GETPOST('menuId', 'int');\n    $result=$db->query($sql);\n\n    if ($result == 0)\n    {\n        $this->db->commit();\n\n        llxHeader();\n\t    setEventMessages($langs->trans(\"MenuDeleted\"), null, 'mesgs');\n        llxFooter();\n        exit ;\n    }\n    else\n    {\n        $this->db->rollback();\n\n        $reload = 0;\n        $_GET[\"action\"]='';\n    }\n}\n\n\n\n/*\n * View\n */\n\n$form=new Form($db);\n$formadmin=new FormAdmin($db);\n\nllxHeader('',$langs->trans(\"Menu\"));\n\n\nif ($action == 'create')\n{\n    print '<script type=\"text/javascript\" language=\"javascript\">\n    jQuery(document).ready(function() {\n    \tfunction init_topleft()\n    \t{\n    \t\tif (jQuery(\"#topleft\").val() == \\'top\\')\n    \t\t{\n\t\t\t\tjQuery(\"#menuId\").prop(\"disabled\", true);\n\t    \t\tjQuery(\"#menuId\").val(\\'\\');\n\t\t\t}\n    \t\telse\n    \t\t{\n\t\t\t\tjQuery(\"#menuId\").removeAttr(\"disabled\");\n    \t\t}\n    \t}\n    \tinit_topleft();\n    \tjQuery(\"#topleft\").click(function() {\n    \t\tinit_topleft();\n    \t});\n    });\n    </script>';\n\n    print load_fiche_titre($langs->trans(\"NewMenu\"),'','title_setup');\n    \n    print '<form action=\"./edit.php?action=add&menuId='.$_GET['menuId'].'\" method=\"post\" name=\"formmenucreate\">';\n    print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\n    dol_fiche_head();\n    \n    print '<table class=\"border\" width=\"100%\">';\n\n    // Id\n    $parent_rowid = $_GET['menuId'];\n    if ($_GET['menuId'])\n    {\n        $sql = \"SELECT m.rowid, m.mainmenu, m.leftmenu, m.level, m.langs FROM \".MAIN_DB_PREFIX.\"menu as m WHERE m.rowid = \".GETPOST('menuId', 'int');\n        $res  = $db->query($sql);\n        if ($res)\n        {\n\n            while ($menu = $db->fetch_array($res))\n            {\n                $parent_rowid = $menu['rowid'];\n                $parent_mainmenu = $menu['mainmenu'];\n                $parent_leftmenu = $menu['leftmenu'];\n                $parent_langs = $menu['langs'];\n                $parent_level = $menu['level'];\n            }\n        }\n    }\n\n    // Handler\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('MenuHandler').'</td>';\n    print '<td>';\n    $formadmin->select_menu_families($menu_handler.(preg_match('/_menu/',$menu_handler)?'':'_menu'),'menu_handler',array_merge($dirstandard,$dirsmartphone));\n    print '</td>';\n    print '<td>'.$langs->trans('DetailMenuHandler').'</td></tr>';\n\n    //User\n    print '<tr><td class=\"nowrap fieldrequired\">'.$langs->trans('MenuForUsers').'</td>';\n    print '<td><select class=\"flat\" name=\"user\">';\n    print '<option value=\"2\" selected>'.$langs->trans(\"AllMenus\").'</option>';\n    print '<option value=\"0\">'.$langs->trans('Internal').'</option>';\n    print '<option value=\"1\">'.$langs->trans('External').'</option>';\n    print '</select></td>';\n    print '<td>'.$langs->trans('DetailUser').'</td></tr>';\n\n    // Type\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('Type').'</td><td>';\n    if ($parent_rowid)\n    {\n        print $langs->trans('Left');\n        print '<input type=\"hidden\" name=\"type\" value=\"left\">';\n    }\n    else\n    {\n        print '<select name=\"type\" class=\"flat\" id=\"topleft\">';\n        print '<option value=\"\">&nbsp;</option>';\n        print '<option value=\"top\"'.($_POST[\"type\"] && $_POST[\"type\"]=='top'?' selected':'').'>'.$langs->trans('Top').'</option>';\n        print '<option value=\"left\"'.($_POST[\"type\"] && $_POST[\"type\"]=='left'?' selected':'').'>'.$langs->trans('Left').'</option>';\n        print '</select>';\n    }\n    //\tprint '<input type=\"text\" size=\"50\" name=\"type\" value=\"'.$type.'\">';\n    print '</td><td>'.$langs->trans('DetailType').'</td></tr>';\n\n    // MenuId Parent\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('MenuIdParent').'</td>';\n    if ($parent_rowid)\n    {\n        print '<td>'.$parent_rowid.'<input type=\"hidden\" name=\"menuId\" value=\"'.$parent_rowid.'\"></td>';\n    }\n    else\n    {\n        print '<td><input type=\"text\" size=\"48\" id=\"menuId\" name=\"menuId\" value=\"'.($_POST[\"menuId\"]?$_POST[\"menuId\"]:'').'\"></td>';\n    }\n    print '<td>'.$langs->trans('DetailMenuIdParent');\n    print ', '.$langs->trans(\"Example\").': fk_mainmenu=abc&fk_leftmenu=def';\n    print '</td></tr>';\n\n    // Title\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('Title').'</td><td><input type=\"text\" size=\"30\" name=\"titre\" value=\"'.$_POST[\"titre\"].'\"></td><td>'.$langs->trans('DetailTitre').'</td></tr>';\n\n    // URL\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('URL').'</td><td><input type=\"text\" size=\"60\" name=\"url\" value=\"'.$_POST[\"url\"].'\"></td><td>'.$langs->trans('DetailUrl').'</td></tr>';\n\n    // Langs\n    print '<tr><td>'.$langs->trans('LangFile').'</td><td><input type=\"text\" size=\"30\" name=\"langs\" value=\"'.$parent_langs.'\"></td><td>'.$langs->trans('DetailLangs').'</td></tr>';\n\n    // Position\n    print '<tr><td>'.$langs->trans('Position').'</td><td><input type=\"text\" size=\"5\" name=\"position\" value=\"'.(isset($_POST[\"position\"])?$_POST[\"position\"]:100).'\"></td><td>'.$langs->trans('DetailPosition').'</td></tr>';\n\n    // Target\n    print '<tr><td>'.$langs->trans('Target').'</td><td><select class=\"flat\" name=\"target\">';\n    print '<option value=\"\"'.($menu->target==\"\"?' selected':'').'>'.$langs->trans('').'</option>';\n    print '<option value=\"_blank\"'.($menu->target==\"_blank\"?' selected':'').'>'.$langs->trans('_blank').'</option>';\n    print '</select></td></td><td>'.$langs->trans('DetailTarget').'</td></tr>';\n\n    // Enabled\n    print '<tr><td>'.$langs->trans('Enabled').'</td><td><input type=\"text\" size=\"60\" name=\"enabled\" value=\"'.$_POST[\"enabled\"].'\"></td><td>'.$langs->trans('DetailEnabled').'</td></tr>';\n\n    // Perms\n    print '<tr><td>'.$langs->trans('Rights').'</td><td><input type=\"text\" size=\"60\" name=\"perms\" value=\"'.$_POST[\"perms\"].'\"></td><td>'.$langs->trans('DetailRight').'</td></tr>';\n\n    print '</table>';\n\n    dol_fiche_end();\n    \n    // Boutons\n    print '<div class=\"center\">';\n\tprint '<input type=\"submit\" class=\"button\" name=\"save\" value=\"'.$langs->trans(\"Save\").'\">';\n    print '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';\n    print '<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\tprint '</div>';\n\n    print '</form>';\n}\nelseif ($action == 'edit')\n{\n    print load_fiche_titre($langs->trans(\"ModifMenu\"),'','title_setup');\n    print '<br>';\n\n    print '<form action=\"./edit.php?action=update\" method=\"POST\" name=\"formmenuedit\">';\n    print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    print '<input type=\"hidden\" name=\"handler_origine\" value=\"'.$menu_handler.'\">';\n    print '<input type=\"hidden\" name=\"menuId\" value=\"'.$_GET['menuId'].'\">';\n\n    dol_fiche_head();\n    \n    print '<table class=\"border\" width=\"100%\">';\n\n    $menu = new Menubase($db);\n    $result=$menu->fetch($_GET['menuId']);\n    //var_dump($menu);\n\n    // Id\n    print '<tr><td>'.$langs->trans('Id').'</td><td>'.$menu->id.'</td><td>'.$langs->trans('DetailId').'</td></tr>';\n\n    // Module\n    print '<tr><td>'.$langs->trans('MenuModule').'</td><td>'.$menu->module.'</td><td>'.$langs->trans('DetailMenuModule').'</td></tr>';\n\n    // Handler\n    if ($menu->menu_handler == 'all') $handler = $langs->trans('AllMenus');\n    else $handler = $menu->menu_handler;\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('MenuHandler').'</td><td>'.$handler.'</td><td>'.$langs->trans('DetailMenuHandler').'</td></tr>';\n\n    // User\n    print '<tr><td class=\"nowrap fieldrequired\">'.$langs->trans('MenuForUsers').'</td><td><select class=\"flat\" name=\"user\">';\n    print '<option value=\"2\"'.($menu->user==2?' selected':'').'>'.$langs->trans(\"AllMenus\").'</option>';\n    print '<option value=\"0\"'.($menu->user==0?' selected':'').'>'.$langs->trans('Internal').'</option>';\n    print '<option value=\"1\"'.($menu->user==1?' selected':'').'>'.$langs->trans('External').'</option>';\n    print '</select></td><td>'.$langs->trans('DetailUser').'</td></tr>';\n\n    // Type\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('Type').'</td><td>'.$langs->trans(ucfirst($menu->type)).'</td><td>'.$langs->trans('DetailType').'</td></tr>';\n\n    // MenuId Parent\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('MenuIdParent');\n    print '</td>';\n    $valtouse=$menu->fk_menu;\n    if ($menu->fk_mainmenu) $valtouse='fk_mainmenu='.$menu->fk_mainmenu;\n    if ($menu->fk_leftmenu) $valtouse.='&fk_leftmenu='.$menu->fk_leftmenu;\n    print '<td><input type=\"text\" name=\"menuIdParent\" value=\"'.$valtouse.'\" size=\"48\"></td>';\n    print '<td>'.$langs->trans('DetailMenuIdParent');\n    print ', '.$langs->trans(\"Example\").': fk_mainmenu=abc&fk_leftmenu=def';\n    print '</td></tr>';\n\n    // Niveau\n    //print '<tr><td>'.$langs->trans('Level').'</td><td>'.$menu->level.'</td><td>'.$langs->trans('DetailLevel').'</td></tr>';\n\n    // Title\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('Title').'</td><td><input type=\"text\" size=\"30\" name=\"titre\" value=\"'.$menu->titre.'\"></td><td>'.$langs->trans('DetailTitre').'</td></tr>';\n\n    // Url\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('URL').'</td><td><input type=\"text\" class=\"quatrevingtpercent\" name=\"url\" value=\"'.$menu->url.'\"></td><td>'.$langs->trans('DetailUrl').'</td></tr>';\n\n    // Langs\n    print '<tr><td>'.$langs->trans('LangFile').'</td><td><input type=\"text\" size=\"30\" name=\"langs\" value=\"'.$menu->langs.'\"></td><td>'.$langs->trans('DetailLangs').'</td></tr>';\n\n    // Position\n    print '<tr><td>'.$langs->trans('Position').'</td><td><input type=\"text\" size=\"5\" name=\"position\" value=\"'.$menu->position.'\"></td><td>'.$langs->trans('DetailPosition').'</td></tr>';\n\n    // Target\n    print '<tr><td>'.$langs->trans('Target').'</td><td><select class=\"flat\" name=\"target\">';\n    print '<option value=\"\"'.($menu->target==\"\"?' selected':'').'>'.$langs->trans('').'</option>';\n    print '<option value=\"_blank\"'.($menu->target==\"_blank\"?' selected':'').'>'.$langs->trans('_blank').'</option>';\n    print '</select></td><td>'.$langs->trans('DetailTarget').'</td></tr>';\n\n    // Enabled\n    print '<tr><td>'.$langs->trans('Enabled').'</td><td><input type=\"text\" size=\"60\" name=\"enabled\" value=\"'.dol_escape_htmltag($menu->enabled).'\"></td><td>'.$langs->trans('DetailEnabled');\n    if (! empty($menu->enabled)) print ' ('.$langs->trans(\"ConditionIsCurrently\").': '.yn(dol_eval($menu->enabled,1)).')';\n    print '</td></tr>';\n\n    // Perms\n    print '<tr><td>'.$langs->trans('Rights').'</td><td><input type=\"text\" size=\"60\" name=\"perms\" value=\"'.dol_escape_htmltag($menu->perms).'\"></td><td>'.$langs->trans('DetailRight');\n    if (! empty($menu->perms)) print ' ('.$langs->trans(\"ConditionIsCurrently\").': '.yn(dol_eval($menu->perms,1)).')';\n    print '</td></tr>';\n\n    print '</table>';\n\n    dol_fiche_end();\n    \n    // Bouton\n    print '<div class=\"center\">';\n\tprint '<input type=\"submit\" class=\"button\" name=\"save\" value=\"'.$langs->trans(\"Save\").'\">';\n    print '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';\n    print '<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\tprint '</div>';\n\n    print '</form>';\n\n    print '<br>';\n}\n\nllxFooter();\n$db->close();\n", "<?php\n/* Copyright (C) 2000-2007\tRodolphe Quiedeville\t\t\t<rodolphe@quiedeville.org>\n * Copyright (C) 2003\t\tJean-Louis Bergamo\t\t\t<jlb@j1b.org>\n * Copyright (C) 2004-2013\tLaurent Destailleur\t\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2004\t\tSebastien Di Cintio\t\t\t<sdicintio@ressource-toi.org>\n * Copyright (C) 2004\t\tBenoit Mortier\t\t\t\t<benoit.mortier@opensides.be>\n * Copyright (C) 2004\t\tChristophe Combelles\t\t\t<ccomb@free.fr>\n * Copyright (C) 2005-2017\tRegis Houssin\t\t\t\t<regis.houssin@capnetworks.com>\n * Copyright (C) 2008\t\tRaphael Bertrand (Resultic)\t<raphael.bertrand@resultic.fr>\n * Copyright (C) 2010-2016\tJuanjo Menent\t\t\t\t<jmenent@2byte.es>\n * Copyright (C) 2013\t\tC\u00e9dric Salvador\t\t\t\t<csalvador@gpcsolutions.fr>\n * Copyright (C) 2013-2017\tAlexandre Spangaro\t\t\t<aspangaro@zendsi.com>\n * Copyright (C) 2014\t\tC\u00e9dric GROSS\t\t\t\t\t<c.gross@kreiz-it.fr>\n * Copyright (C) 2014-2015\tMarcos Garc\u00eda\t\t\t\t<marcosgdf@gmail.com>\n * Copyright (C) 2015\t\tJean-Fran\u00e7ois Ferry\t\t\t<jfefe@aternatik.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n * or see http://www.gnu.org/\n */\n\n/**\n *\t\\file\t\t\thtdocs/core/lib/functions.lib.php\n *\t\\brief\t\t\tA set of functions for Dolibarr\n *\t\t\t\t\tThis file contains all frequently used functions.\n */\n\ninclude_once DOL_DOCUMENT_ROOT .'/core/lib/json.lib.php';\n\n/**\n * Function to return value of a static property when class\n * name is dynamically defined (not hard coded).\n * This is because $myclass::$myvar works from PHP 5.3.0+ only\n *\n * @param\tstring \t$class\t\tClass name\n * @param \tstring \t$member\t\tName of property\n * @return \tmixed\t\t\t\tReturn value of static property\n * @deprecated Dolibarr now requires 5.3.0+, use $class::$property syntax\n * @see https://php.net/manual/language.oop5.static.php\n */\nfunction getStaticMember($class, $member)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\t// This part is deprecated. Uncomment if for php 5.2.*, and comment next isset class::member\n\t/*if (version_compare(phpversion(), '5.3.0', '<'))\n\t{\n\t\tif (is_object($class)) $class = get_class($class);\n\t\t$classObj = new ReflectionClass($class);\n\t\t$result = null;\n\n\t\t$found=0;\n\t\tforeach($classObj->getStaticProperties() as $prop => $value)\n\t\t{\n\t\t\tif ($prop == $member)\n\t\t\t{\n\t\t\t\t$result = $value;\n\t\t\t\t$found++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ($found) return $result;\n\t}*/\n\n\tif (isset($class::$member)) return $class::$member;\n\tdol_print_error('','Try to get a static member \"'.$member.'\" in class \"'.$class.'\" that does not exists or is not static.');\n\treturn null;\n}\n\n\n/**\n * Return a DoliDB instance (database handler).\n *\n * @param   string\t$type\t\tType of database (mysql, pgsql...)\n * @param\tstring\t$host\t\tAddress of database server\n * @param\tstring\t$user\t\tNom de l'utilisateur autorise\n * @param\tstring\t$pass\t\tMot de passe\n * @param\tstring\t$name\t\tNom de la database\n * @param\tint\t\t$port\t\tPort of database server\n * @return\tDoliDB\t\t\t\tA DoliDB instance\n */\nfunction getDoliDBInstance($type, $host, $user, $pass, $name, $port)\n{\n\trequire_once DOL_DOCUMENT_ROOT .\"/core/db/\".$type.'.class.php';\n\n\t$class='DoliDB'.ucfirst($type);\n\t$dolidb=new $class($type, $host, $user, $pass, $name, $port);\n\treturn $dolidb;\n}\n\n/**\n * \tGet list of entity id to use.\n *\n * \t@param\tstring\t$element\tCurrent element\n *                              'societe', 'socpeople', 'actioncomm', 'agenda', 'resource',\n *                              'product', 'productprice', 'stock',\n *                              'propal', 'supplier_proposal', 'facture', 'facture_fourn',\n *                              'categorie', 'bank_account', 'bank_account', 'adherent', 'user',\n *                              'commande', 'commande_fournisseur', 'expedition', 'intervention', 'survey',\n *                              'contract', 'tax', 'expensereport', 'holiday', 'multicurrency', 'project',\n *                              'email_template', 'event',\n * \t@param\tint\t     $shared\t1=Return id of current entity + shared entities (default), 0=Return id of current entity only\n * \t@return\tmixed\t\t\t\tEntity id(s) to use\n */\nfunction getEntity($element, $shared=1)\n{\n\tglobal $conf, $mc;\n\n\t// For backward compatibilty\n\tif ($element == 'actioncomm') $element='agenda';\n\tif ($element == 'fichinter')  $element='intervention';\n\tif ($element == 'categorie')  $element='category';\n\n\tif (is_object($mc))\n\t{\n\t\treturn $mc->getEntity($element, $shared);\n\t}\n\telse\n\t{\n\t\t$out='';\n\t\t$addzero = array('user', 'usergroup', 'email_template', 'default_values');\n\t\tif (in_array($element, $addzero)) $out.= '0,';\n\t\t$out.= $conf->entity;\n\t\treturn $out;\n\t}\n}\n\n/**\n * Return information about user browser\n *\n * Returns array with the following format:\n * array(\n *  'browsername' => Browser name (firefox|chrome|iceweasel|epiphany|safari|opera|ie|unknown)\n *  'browserversion' => Browser version. Empty if unknown\n *  'browseros' => Set with mobile OS (android|blackberry|ios|palm|symbian|webos|maemo|windows|unknown)\n *  'layout' => (tablet|phone|classic)\n *  'phone' => empty if not mobile, (android|blackberry|ios|palm|unknown) if mobile\n *  'tablet' => true/false\n * )\n *\n * @param string $user_agent Content of $_SERVER[\"HTTP_USER_AGENT\"] variable\n * @return\tarray Check function documentation\n */\nfunction getBrowserInfo($user_agent)\n{\n\tinclude_once DOL_DOCUMENT_ROOT.'/includes/mobiledetect/mobiledetectlib/Mobile_Detect.php';\n\n\t$name='unknown';\n\t$version='';\n\t$os='unknown';\n\t$phone = '';\n\n\t$detectmobile = new Mobile_Detect(null, $user_agent);\n\t$tablet = $detectmobile->isTablet();\n\n\tif ($detectmobile->isMobile()) {\n\n\t\t$phone = 'unknown';\n\n\t\t// If phone/smartphone, we set phone os name.\n\t\tif ($detectmobile->is('AndroidOS')) {\n\t\t\t$os = $phone = 'android';\n\t\t} elseif ($detectmobile->is('BlackBerryOS')) {\n\t\t\t$os = $phone = 'blackberry';\n\t\t} elseif ($detectmobile->is('iOS')) {\n\t\t\t$os = 'ios';\n\t\t\t$phone = 'iphone';\n\t\t} elseif ($detectmobile->is('PalmOS')) {\n\t\t\t$os = $phone = 'palm';\n\t\t} elseif ($detectmobile->is('SymbianOS')) {\n\t\t\t$os = 'symbian';\n\t\t} elseif ($detectmobile->is('webOS')) {\n\t\t\t$os = 'webos';\n\t\t} elseif ($detectmobile->is('MaemoOS')) {\n\t\t\t$os = 'maemo';\n\t\t} elseif ($detectmobile->is('WindowsMobileOS') || $detectmobile->is('WindowsPhoneOS')) {\n\t\t\t$os = 'windows';\n\t\t}\n\t}\n\n\t// OS\n\tif (preg_match('/linux/i', $user_agent))\t\t\t{ $os='linux'; }\n\telseif (preg_match('/macintosh/i', $user_agent))\t{ $os='macintosh'; }\n\telseif (preg_match('/windows/i', $user_agent))\t\t{ $os='windows'; }\n\n\t// Name\n\tif (preg_match('/firefox(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg))      { $name='firefox';   $version=$reg[2]; }\n\telseif (preg_match('/chrome(\\/|\\s)([\\d\\.]+)/i', $user_agent, $reg))   { $name='chrome';    $version=$reg[2]; }    // we can have 'chrome (Mozilla...) chrome x.y' in one string\n\telseif (preg_match('/chrome/i', $user_agent, $reg))                   { $name='chrome'; }\n\telseif (preg_match('/iceweasel/i', $user_agent))                      { $name='iceweasel'; }\n\telseif (preg_match('/epiphany/i', $user_agent))                       { $name='epiphany';  }\n\telseif (preg_match('/safari(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg))   { $name='safari';    $version=$reg[2]; }\t// Safari is often present in string for mobile but its not.\n\telseif (preg_match('/opera(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg))    { $name='opera';     $version=$reg[2]; }\n\telseif (preg_match('/(MSIE\\s([0-9]+\\.[0-9]))|.*(Trident\\/[0-9]+.[0-9];.*rv:([0-9]+\\.[0-9]+))/i', $user_agent, $reg))  { $name='ie'; $version=end($reg); }    // MS products at end\n\telseif (preg_match('/(Windows NT\\s([0-9]+\\.[0-9])).*(Trident\\/[0-9]+.[0-9];.*rv:([0-9]+\\.[0-9]+))/i', $user_agent, $reg))  { $name='ie'; $version=end($reg); }    // MS products at end\n\telseif (preg_match('/l(i|y)n(x|ks)(\\(|\\/|\\s)*([\\d\\.]+)/i', $user_agent, $reg)) { $name='lynxlinks'; $version=$reg[4]; }\n\n\tif ($tablet) {\n\t\t$layout = 'tablet';\n\t} elseif ($phone) {\n\t\t$layout = 'phone';\n\t} else {\n\t\t$layout = 'classic';\n\t}\n\n\treturn array(\n\t\t'browsername' => $name,\n\t\t'browserversion' => $version,\n\t\t'browseros' => $os,\n\t\t'layout' => $layout,\n\t\t'phone' => $phone,\n\t\t'tablet' => $tablet\n\t);\n}\n\n/**\n *  Function called at end of web php process\n *\n *  @return\tvoid\n */\nfunction dol_shutdown()\n{\n\tglobal $conf,$user,$langs,$db;\n\t$disconnectdone=false; $depth=0;\n\tif (is_object($db) && ! empty($db->connected)) { $depth=$db->transaction_opened; $disconnectdone=$db->close(); }\n\tdol_syslog(\"--- End access to \".$_SERVER[\"PHP_SELF\"].(($disconnectdone && $depth)?' (Warn: db disconnection forced, transaction depth was '.$depth.')':''), (($disconnectdone && $depth)?LOG_WARNING:LOG_INFO));\n}\n\n\n/**\n *  Return value of a param into GET or POST supervariable.\n *  Use the property $user->default_values[path]['creatform'] and/or $user->default_values[path]['filters'] and/or $user->default_values[path]['sortorder']\n *  Note: The property $user->default_values is loaded by main.php when loading the user.\n *\n *  @param\tstring\t$paramname   Name of parameter to found\n *  @param\tstring\t$check\t     Type of check\n *                                  ''=no check (deprecated)\n *                                  'none'=no check (only for param that should have very rich content)\n *                                  'int'=check it's numeric (integer or float)\n *                                  'alpha'=check it's text and sign\n *                                  'aZ'=check it's a-z only\n *                                  'aZ09'=check it's simple alpha string (recommended for keys)\n *                                  'array'=check it's array\n *                                  'san_alpha'=Use filter_var with FILTER_SANITIZE_STRING (do not use this for free text string)\n *                                  'nohtml', 'alphanohtml'=check there is no html content\n *                                  'custom'= custom filter specify $filter and $options)\n *  @param\tint\t\t$method\t     Type of method (0 = get then post, 1 = only get, 2 = only post, 3 = post then get, 4 = post then get then cookie)\n *  @param  int     $filter      Filter to apply when $check is set to 'custom'. (See http://php.net/manual/en/filter.filters.php for d\u00e9tails)\n *  @param  mixed   $options     Options to pass to filter_var when $check is set to 'custom'.\n *  @return string|string[]      Value found (string or array), or '' if check fails\n *\n *  @TODO Set default value for check to alpha. Check all WYSIWYG edition (email and description...) is still ok with rich text.\n */\nfunction GETPOST($paramname, $check='', $method=0, $filter=NULL, $options=NULL)\n{\n    global $mysoc,$user,$conf;\n\n    if (empty($paramname)) return 'BadFirstParameterForGETPOST';\n\n    if (empty($method)) $out = isset($_GET[$paramname])?$_GET[$paramname]:(isset($_POST[$paramname])?$_POST[$paramname]:'');\n\telseif ($method==1) $out = isset($_GET[$paramname])?$_GET[$paramname]:'';\n\telseif ($method==2) $out = isset($_POST[$paramname])?$_POST[$paramname]:'';\n\telseif ($method==3) $out = isset($_POST[$paramname])?$_POST[$paramname]:(isset($_GET[$paramname])?$_GET[$paramname]:'');\n\telseif ($method==4) $out = isset($_POST[$paramname])?$_POST[$paramname]:(isset($_GET[$paramname])?$_GET[$paramname]:(isset($_COOKIE[$paramname])?$_COOKIE[$paramname]:''));\n\telse return 'BadThirdParameterForGETPOST';\n\n\tif (empty($method) || $method == 3 || $method == 4)\n\t{\n    \t$relativepathstring = $_SERVER[\"PHP_SELF\"];\n    \t// Clean $relativepathstring\n    \tif (constant('DOL_URL_ROOT')) $relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'),'/').'/', '', $relativepathstring);\n    \t$relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n    \t$relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n    \t//var_dump($relativepathstring);\n\n        // Code for search criteria persistence.\n    \t// Retrieve values if restore_lastsearch_values is set and there is saved values\n    \tif (! empty($_GET['restore_lastsearch_values']) && ! empty($_SESSION['lastsearch_values_'.$relativepathstring]))        // Keep $_GET here\n    \t{\n\t        $tmp=json_decode($_SESSION['lastsearch_values_'.$relativepathstring], true);\n\t        if (is_array($tmp))\n\t        {\n\t            foreach($tmp as $key => $val)\n\t            {\n\t                if ($key == $paramname)\n\t                {\n\t                    $out=$val;\n\t                    break;\n\t                }\n\t            }\n\t        }\n    \t}\n\t    // Else, retreive default values if we are not doing a sort\n\t    elseif (! isset($_GET['sortfield']) && ! empty($conf->global->MAIN_ENABLE_DEFAULT_VALUES))\t// If we did a click on a field to sort, we do no apply default values. Same if option MAIN_ENABLE_DEFAULT_VALUES is not set\n\t    {\n\t        if (! empty($_GET['action']) && $_GET['action'] == 'create' && ! isset($_GET[$paramname]) && ! isset($_POST[$paramname]))\n\t        {\n\t            if (! empty($user->default_values))\t\t// $user->default_values defined from menu default values\n\t            {\n\t                //var_dump($user->default_values[$relativepathstring]['createform']);\n\t                if (isset($user->default_values[$relativepathstring]['createform'][$paramname])) $out = $user->default_values[$relativepathstring]['createform'][$paramname];\n\t            }\n\t        }\n\t        // Management of default search_filters and sort order\n\t        //elseif (preg_match('/list.php$/', $_SERVER[\"PHP_SELF\"]) && ! empty($paramname) && ! isset($_GET[$paramname]) && ! isset($_POST[$paramname]))\n\t        elseif (! empty($paramname) && ! isset($_GET[$paramname]) && ! isset($_POST[$paramname]))\n\t        {\n\t            if (! empty($user->default_values))\t\t// $user->default_values defined from menu default values\n\t            {\n\t                //var_dump($user->default_values[$relativepathstring]);\n\t                if ($paramname == 'sortfield')\n\t                {\n\t                    if (isset($user->default_values[$relativepathstring]['sortorder']))    // We will use the key of $user->default_values[path][sortorder]\n\t                    {\n\t                        $forbidden_chars_to_replace=array(\" \",\"'\",\"/\",\"\\\\\",\":\",\"*\",\"?\",\"\\\"\",\"<\",\">\",\"|\",\"[\",\"]\",\";\",\"=\");  // we accept _, -, . and ,\n\t                        foreach($user->default_values[$relativepathstring]['sortorder'] as $key => $val)\n\t                        {\n\t                            if ($out) $out.=', ';\n\t                            $out.=dol_string_nospecial($key, '', $forbidden_chars_to_replace);\n\t                        }\n\t                    }\n\t                }\n\t                elseif ($paramname == 'sortorder')\n\t                {\n\t                    if (isset($user->default_values[$relativepathstring]['sortorder']))    // We will use the val of $user->default_values[path][sortorder]\n\t                    {\n\t                        $forbidden_chars_to_replace=array(\" \",\"'\",\"/\",\"\\\\\",\":\",\"*\",\"?\",\"\\\"\",\"<\",\">\",\"|\",\"[\",\"]\",\";\",\"=\");  // we accept _, -, . and ,\n\t                        foreach($user->default_values[$relativepathstring]['sortorder'] as $key => $val)\n\t                        {\n\t                            if ($out) $out.=', ';\n\t                            $out.=dol_string_nospecial($val, '', $forbidden_chars_to_replace);\n\t                        }\n\t                    }\n\t                }\n\t                elseif (isset($user->default_values[$relativepathstring]['filters'][$paramname]))\n\t                {\n\t                    $forbidden_chars_to_replace=array(\" \",\"'\",\"/\",\"\\\\\",\":\",\"*\",\"?\",\"\\\"\",\"<\",\">\",\"|\",\"[\",\"]\",\";\",\"=\");  // we accept _, -, . and ,\n\t                    $out = dol_string_nospecial($user->default_values[$relativepathstring]['filters'][$paramname], '', $forbidden_chars_to_replace);\n\t                }\n\t            }\n\t        }\n\t    }\n\n\t}\n\n\tif (empty($check) && ! empty($conf->global->MAIN_FEATURES_LEVEL) && $conf->global->MAIN_FEATURES_LEVEL >= 2)\n\t{\n\t   dol_syslog(\"Deprecated use of GETPOST, called with 1st param = \".$paramname.\" and 2nd param not defined, when calling page \".$_SERVER[\"PHP_SELF\"], LOG_WARNING);\n\t   // Enable this line to know who call the GETPOST with empty $check parameter.\n\t   //var_dump(debug_backtrace()[0]);\n\t}\n\n\tif (! empty($check))\n\t{\n\t    // Substitution variables for GETPOST (used to get final url with variable parameters or final default value with variable paramaters)\n\t    // Example of variables: __DAY__, __MONTH__, __YEAR__, __MYCOUNTRYID__, __USERID__, __ENTITYID__, ...\n\t    // We do this only if var is a GET. If it is a POST, may be we want to post the text with vars as the setup text.\n\t    if (! is_array($out) && empty($_POST[$paramname]))\n\t    {\n\t        $maxloop=20; $loopnb=0;    // Protection against infinite loop\n\t        while (preg_match('/__([A-Z0-9]+_?[A-Z0-9]+)__/i', $out, $reg) && ($loopnb < $maxloop))    // Detect '__ABCDEF__' as key 'ABCDEF' and '__ABC_DEF__' as key 'ABC_DEF'. Detection is also correct when 2 vars are side by side.\n\t        {\n\t            $loopnb++; $newout = '';\n\n    \t        if ($reg[1] == 'DAY')                { $tmp=dol_getdate(dol_now(), true); $newout = $tmp['mday']; }\n    \t        elseif ($reg[1] == 'MONTH')          { $tmp=dol_getdate(dol_now(), true); $newout = $tmp['mon'];  }\n    \t        elseif ($reg[1] == 'YEAR')           { $tmp=dol_getdate(dol_now(), true); $newout = $tmp['year']; }\n    \t    \telseif ($reg[1] == 'PREVIOUS_DAY')   { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_prev_day($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['day']; }\n    \t        elseif ($reg[1] == 'PREVIOUS_MONTH') { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_prev_month($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['month']; }\n    \t        elseif ($reg[1] == 'PREVIOUS_YEAR')  { $tmp=dol_getdate(dol_now(), true); $newout = ($tmp['year'] - 1); }\n    \t    \telseif ($reg[1] == 'NEXT_DAY')       { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_next_day($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['day']; }\n    \t        elseif ($reg[1] == 'NEXT_MONTH')     { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_next_month($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['month']; }\n    \t        elseif ($reg[1] == 'NEXT_YEAR')      { $tmp=dol_getdate(dol_now(), true); $newout = ($tmp['year'] + 1); }\n    \t        elseif ($reg[1] == 'MYCOUNTRY_ID' || $reg[1] == 'MYCOUNTRYID')\n    \t        {\n    \t            $newout = $mysoc->country_id;\n    \t        }\n    \t        elseif ($reg[1] == 'USER_ID' || $reg[1] == 'USERID')\n    \t        {\n    \t            $newout = $user->id;\n    \t        }\n    \t    \telseif ($reg[1] == 'SUPERVISOR_ID' || $reg[1] == 'SUPERVISORID')\n    \t        {\n    \t            $newout = $user->fk_user;\n    \t        }\n    \t        elseif ($reg[1] == 'ENTITYID')\n    \t        {\n    \t            $newout = $conf->entity;\n    \t        }\n    \t        else $newout = '';     // Key not found, we replace with empty string\n    \t        //var_dump('__'.$reg[1].'__ -> '.$newout);\n    \t        $out = preg_replace('/__'.preg_quote($reg[1],'/').'__/', $newout, $out);\n\t        }\n\t    }\n\n\t    // Check is done after replacement\n\t    switch ($check)\n\t    {\n\t        case 'none':\n\t            break;\n\t        case 'int':    // Check param is a numeric value (integer but also float or hexadecimal)\n\t            if (! is_numeric($out)) { $out=''; }\n\t            break;\n\t        case 'intcomma':\n\t            if (preg_match('/[^0-9,]+/i',$out)) $out='';\n\t            break;\n\t        case 'alpha':\n\t            $out=trim($out);\n\t            // '\"' is dangerous because param in url can close the href= or src= and add javascript functions.\n\t            // '../' is dangerous because it allows dir transversals\n\t            if (preg_match('/\"/',$out)) $out='';\n\t            else if (preg_match('/\\.\\.\\//',$out)) $out='';\n\t            break;\n\t        case 'san_alpha':\n\t            $out=filter_var($out,FILTER_SANITIZE_STRING);\n\t            break;\n\t        case 'aZ':\n\t            $out=trim($out);\n\t            if (preg_match('/[^a-z]+/i',$out)) $out='';\n\t            break;\n\t        case 'aZ09':\n\t            $out=trim($out);\n\t            if (preg_match('/[^a-z0-9_\\-\\.]+/i',$out)) $out='';\n\t            break;\n\t        case 'array':\n\t            if (! is_array($out) || empty($out)) $out=array();\n\t            break;\n\t\t\tcase 'nohtml':\n\t\t\t    $out=dol_string_nohtmltag($out);\n\t\t\t\tbreak;\n\t\t\tcase 'alphanohtml':\t// Recommended for search params\n\t            $out=trim($out);\n\t            // '\"' is dangerous because param in url can close the href= or src= and add javascript functions.\n\t            // '../' is dangerous because it allows dir transversals\n\t            if (preg_match('/\"/',$out)) $out='';\n\t            else if (preg_match('/\\.\\.\\//',$out)) $out='';\n\t\t\t    $out=dol_string_nohtmltag($out);\n\t\t\t\tbreak;\n\t\t\tcase 'custom':\n\t            if (empty($filter)) return 'BadFourthParameterForGETPOST';\n\t            $out=filter_var($out, $filter, $options);\n\t            break;\n\t    }\n\t}\n\n    // Code for search criteria persistence.\n\t// Save data into session if key start with 'search_' or is 'smonth', 'syear', 'month', 'year'\n\tif (empty($method) || $method == 3 || $method == 4)\n\t{\n\t    //if (preg_match('/^search_/', $paramname) || in_array($paramname, array('sortorder', 'sortfield\", 'smonth', 'syear', 'month', 'year')))\n\t    if (preg_match('/^search_/', $paramname) || in_array($paramname, array('sortorder','sortfield')))\n\t    {\n\t        //var_dump($paramname.' - '.$out.' '.$user->default_values[$relativepathstring]['filters'][$paramname]);\n\n\t        // We save search key only if:\n\t        // - not empty, or\n\t        // - if value is empty and a default value exists that is not empty (it means we did a filter to an empty value when default was not).\n\n\t        //if (! empty($out) || ! empty($user->default_values[$relativepathstring]['filters'][$paramname]))\n\t        if (! empty($out))\n\t        {\n                $user->lastsearch_values_tmp[$relativepathstring][$paramname]=$out;\n\t        }\n\t    }\n\t}\n\n\treturn $out;\n}\n\n\n/**\n *  Return a prefix to use for this Dolibarr instance, for session/cookie names or email id.\n *  This prefix is unique for instance and avoid conflict between multi-instances,\n *  even when having two instances with one root dir or two instances in virtual servers.\n *\n *  @param  string  $mode       '' (prefix for session name) or 'email' (prefix for email id)\n *  @return\tstring      \t\tA calculated prefix\n */\nfunction dol_getprefix($mode='')\n{\n    global $conf;\n\n    // If MAIL_PREFIX_FOR_EMAIL_ID is set and prefix is for email\n    if ($mode == 'email' && ! empty($conf->global->MAIL_PREFIX_FOR_EMAIL_ID))\n    {\n        if ($conf->global->MAIL_PREFIX_FOR_EMAIL_ID != 'SERVER_NAME') return $conf->global->MAIL_PREFIX_FOR_EMAIL_ID;\n        else if (isset($_SERVER[\"SERVER_NAME\"])) return $_SERVER[\"SERVER_NAME\"];\n    }\n\n\tif (isset($_SERVER[\"SERVER_NAME\"]) && isset($_SERVER[\"DOCUMENT_ROOT\"]))\n\t{\n\t\treturn dol_hash($_SERVER[\"SERVER_NAME\"].$_SERVER[\"DOCUMENT_ROOT\"].DOL_DOCUMENT_ROOT.DOL_URL_ROOT);\n\t\t// Use this for a \"clear\" cookie name\n\t\t//return dol_sanitizeFileName($_SERVER[\"SERVER_NAME\"].$_SERVER[\"DOCUMENT_ROOT\"].DOL_DOCUMENT_ROOT.DOL_URL_ROOT);\n\t}\n\telse return dol_hash(DOL_DOCUMENT_ROOT.DOL_URL_ROOT);\n}\n\n/**\n *\tMake an include_once using default root and alternate root if it fails.\n *  To link to a core file, use include(DOL_DOCUMENT_ROOT.'/pathtofile')\n *  To link to a module file from a module file, use include './mymodulefile';\n *  To link to a module file from a core file, then this function can be used (call by hook / trigger / speciales pages)\n *\n * \t@param\tstring\t$relpath\tRelative path to file (Ie: mydir/myfile, ../myfile, ...)\n * \t@param\tstring\t$classname\tClass name (deprecated)\n *  @return bool                True if load is a success, False if it fails\n */\nfunction dol_include_once($relpath, $classname='')\n{\n\tglobal $conf,$langs,$user,$mysoc;   // Do not remove this. They must be defined for files we include. Other globals var must be retreived with $GLOBALS['var']\n\n\t$fullpath = dol_buildpath($relpath);\n\n\tif (!file_exists($fullpath)) {\n\t\tdol_syslog('functions::dol_include_once Tried to load unexisting file: '.$relpath, LOG_ERR);\n\t\treturn false;\n\t}\n\n\tif (! empty($classname) && ! class_exists($classname)) {\n\t\treturn include $fullpath;\n\t} else {\n\t\treturn include_once $fullpath;\n\t}\n}\n\n\n/**\n *\tReturn path of url or filesystem. Return alternate root if exists.\n *\n * \t@param\tstring\t$path\t\tRelative path to file (if mode=0) or relative url (if mode=1). Ie: mydir/myfile, ../myfile\n *  @param\tint\t\t$type\t\t0=Used for a Filesystem path, 1=Used for an URL path (output relative), 2=Used for an URL path (output full path using same host that current url), 3=Used for an URL path (output full path using host defined into $dolibarr_main_url_root of conf file)\n *  @return string\t\t\t\tFull filesystem path (if mode=0), Full url path (if mode=1)\n */\nfunction dol_buildpath($path, $type=0)\n{\n\tglobal $conf;\n\n\t$path=preg_replace('/^\\//','',$path);\n\n\tif (empty($type))\t// For a filesystem path\n\t{\n\t\t$res = DOL_DOCUMENT_ROOT.'/'.$path;\t// Standard value\n\t\tforeach ($conf->file->dol_document_root as $key => $dirroot)\t// ex: array([\"main\"]=>\"/home/main/htdocs\", [\"alt0\"]=>\"/home/dirmod/htdocs\", ...)\n\t\t{\n\t\t\tif ($key == 'main') continue;\n\t\t\tif (file_exists($dirroot.'/'.$path))\n\t\t\t{\n\t\t\t\t$res=$dirroot.'/'.$path;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\telse\t\t\t\t// For an url path\n\t{\n\t\t// We try to get local path of file on filesystem from url\n\t\t// Note that trying to know if a file on disk exist by forging path on disk from url\n\t\t// works only for some web server and some setup. This is bugged when\n\t\t// using proxy, rewriting, virtual path, etc...\n\t\t$res='';\n\t\tif ($type == 1) $res = DOL_URL_ROOT.'/'.$path;\t\t\t// Standard value\n\t\tif ($type == 2) $res = DOL_MAIN_URL_ROOT.'/'.$path;\t\t// Standard value\n\t\tif ($type == 3) $res = DOL_URL_ROOT.'/'.$path;\n\n\t\tforeach ($conf->file->dol_document_root as $key => $dirroot)\t// ex: array([\"main\"]=>\"/home/main/htdocs\", [\"alt0\"]=>\"/home/dirmod/htdocs\", ...)\n\t\t{\n\t\t\tif ($key == 'main')\n\t\t\t{\n\t\t\t    if ($type == 3)\n\t\t\t    {\n\t\t\t        global $dolibarr_main_url_root;\n\n\t\t\t        // Define $urlwithroot\n\t\t\t        $urlwithouturlroot=preg_replace('/'.preg_quote(DOL_URL_ROOT,'/').'$/i','',trim($dolibarr_main_url_root));\n\t\t\t        $urlwithroot=$urlwithouturlroot.DOL_URL_ROOT;\t\t// This is to use external domain name found into config file\n\t\t\t        //$urlwithroot=DOL_MAIN_URL_ROOT;\t\t\t\t\t// This is to use same domain name than current\n\n\t\t\t        $res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':$urlwithroot).'/'.$path;     // Test on start with http is for old conf syntax\n\t\t\t    }\n\t\t\t    continue;\n\t\t\t}\n\t\t\tpreg_match('/^([^\\?]+(\\.css\\.php|\\.css|\\.js\\.php|\\.js|\\.png|\\.jpg|\\.php)?)/i',$path,$regs);    // Take part before '?'\n\t\t\tif (! empty($regs[1]))\n\t\t\t{\n\t\t\t\t//print $key.'-'.$dirroot.'/'.$path.'-'.$conf->file->dol_url_root[$type].'<br>'.\"\\n\";\n\t\t\t\tif (file_exists($dirroot.'/'.$regs[1]))\n\t\t\t\t{\n\t\t\t\t\tif ($type == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':DOL_URL_ROOT).$conf->file->dol_url_root[$key].'/'.$path;\n\t\t\t\t\t}\n\t\t\t\t\tif ($type == 2)\n\t\t\t\t\t{\n\t\t\t\t\t    $res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':DOL_MAIN_URL_ROOT).$conf->file->dol_url_root[$key].'/'.$path;\n\t\t\t\t\t}\n\t\t\t\t\tif ($type == 3)\n\t\t\t\t\t{\n\t\t\t\t\t    global $dolibarr_main_url_root;\n\n\t\t\t\t\t    // Define $urlwithroot\n\t\t\t\t\t    $urlwithouturlroot=preg_replace('/'.preg_quote(DOL_URL_ROOT,'/').'$/i','',trim($dolibarr_main_url_root));\n\t\t\t\t\t    $urlwithroot=$urlwithouturlroot.DOL_URL_ROOT;\t\t// This is to use external domain name found into config file\n\t\t\t\t\t    //$urlwithroot=DOL_MAIN_URL_ROOT;\t\t\t\t\t// This is to use same domain name than current\n\n\t\t\t\t\t    $res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':$urlwithroot).$conf->file->dol_url_root[$key].'/'.$path;     // Test on start with http is for old conf syntax\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $res;\n}\n\n/**\n *\tCreate a clone of instance of object (new instance with same value for properties)\n *  With native = 0: Property that are reference are also new object (true clone). This means $this->db is not valid.\n *  With native = 1: Use PHP clone. Property that are reference are same pointer. This means $this->db is still valid.\n *\n * \t@param\tobject\t$object\t\tObject to clone\n *  @param\tint\t\t$native\t\tNative method or true method\n *\t@return object\t\t\t\tObject clone\n *  @see https://php.net/manual/language.oop5.cloning.php\n */\nfunction dol_clone($object, $native=0)\n{\n\t//dol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tif (empty($native))\n\t{\n\t\t$myclone=unserialize(serialize($object));\n\t}\n\telse\n\t{\n\t\t$myclone = clone $object;     // PHP clone is a shallow copy only, not a real clone, so properties of references will keep references (refer to the same target/variable)\n\t}\n\n\treturn $myclone;\n}\n\n/**\n *\tOptimize a size for some browsers (phone, smarphone, ...)\n *\n * \t@param\tint\t\t$size\t\tSize we want\n * \t@param\tstring\t$type\t\tType of optimizing:\n * \t\t\t\t\t\t\t\t'' = function used to define a size for truncation\n * \t\t\t\t\t\t\t\t'width' = function is used to define a width\n *\t@return int\t\t\t\t\tNew size after optimizing\n */\nfunction dol_size($size,$type='')\n{\n\tglobal $conf;\n\tif (empty($conf->dol_optimize_smallscreen)) return $size;\n\tif ($type == 'width' && $size > 250) return 250;\n\telse return 10;\n}\n\n\n/**\n *\tClean a string to use it as a file name\n *\n *\t@param\tstring\t$str            String to clean\n * \t@param\tstring\t$newstr\t\t\tString to replace bad chars with\n *  @param\tint\t    $unaccent\t\t1=Remove also accent (default), 0 do not remove them\n *\t@return string          \t\tString cleaned (a-zA-Z_)\n *\n * \t@see        \tdol_string_nospecial, dol_string_unaccent, dol_sanitizePathName\n */\nfunction dol_sanitizeFileName($str,$newstr='_',$unaccent=1)\n{\n\t$filesystem_forbidden_chars = array('<','>',':','/','\\\\','?','*','|','\"','\u00b0');\n\treturn dol_string_nospecial($unaccent?dol_string_unaccent($str):$str, $newstr, $filesystem_forbidden_chars);\n}\n\n/**\n *\tClean a string to use it as a path name\n *\n *\t@param\tstring\t$str            String to clean\n * \t@param\tstring\t$newstr\t\t\tString to replace bad chars with\n *  @param\tint\t    $unaccent\t\t1=Remove also accent (default), 0 do not remove them\n *\t@return string          \t\tString cleaned (a-zA-Z_)\n *\n * \t@see        \tdol_string_nospecial, dol_string_unaccent, dol_sanitizeFileName\n */\nfunction dol_sanitizePathName($str,$newstr='_',$unaccent=1)\n{\n    $filesystem_forbidden_chars = array('<','>','?','*','|','\"','\u00b0');\n    return dol_string_nospecial($unaccent?dol_string_unaccent($str):$str, $newstr, $filesystem_forbidden_chars);\n}\n\n/**\n *\tClean a string from all accent characters to be used as ref, login or by dol_sanitizeFileName\n *\n *\t@param\tstring\t$str\t\t\tString to clean\n *\t@return string   \t       \t\tCleaned string\n *\n * \t@see    \t\tdol_sanitizeFilename, dol_string_nospecial\n */\nfunction dol_string_unaccent($str)\n{\n\tif (utf8_check($str))\n\t{\n\t\t// See http://www.utf8-chartable.de/\n\t\t$string = rawurlencode($str);\n\t\t$replacements = array(\n\t\t'%C3%80' => 'A','%C3%81' => 'A','%C3%82' => 'A','%C3%83' => 'A','%C3%84' => 'A','%C3%85' => 'A',\n\t\t'%C3%88' => 'E','%C3%89' => 'E','%C3%8A' => 'E','%C3%8B' => 'E',\n\t\t'%C3%8C' => 'I','%C3%8D' => 'I','%C3%8E' => 'I','%C3%8F' => 'I',\n\t\t'%C3%92' => 'O','%C3%93' => 'O','%C3%94' => 'O','%C3%95' => 'O','%C3%96' => 'O',\n\t\t'%C3%99' => 'U','%C3%9A' => 'U','%C3%9B' => 'U','%C3%9C' => 'U',\n\t\t'%C3%A0' => 'a','%C3%A1' => 'a','%C3%A2' => 'a','%C3%A3' => 'a','%C3%A4' => 'a','%C3%A5' => 'a',\n\t\t'%C3%A7' => 'c',\n\t\t'%C3%A8' => 'e','%C3%A9' => 'e','%C3%AA' => 'e','%C3%AB' => 'e',\n\t\t'%C3%AC' => 'i','%C3%AD' => 'i','%C3%AE' => 'i','%C3%AF' => 'i',\n\t\t'%C3%B1' => 'n',\n\t\t'%C3%B2' => 'o','%C3%B3' => 'o','%C3%B4' => 'o','%C3%B5' => 'o','%C3%B6' => 'o',\n\t\t'%C3%B9' => 'u','%C3%BA' => 'u','%C3%BB' => 'u','%C3%BC' => 'u',\n\t\t'%C3%BF' => 'y'\n\t\t);\n\t\t$string=strtr($string, $replacements);\n\t\treturn rawurldecode($string);\n\t}\n\telse\n\t{\n\t\t// See http://www.ascii-code.com/\n\t\t$string = strtr(\n\t\t\t$str,\n\t\t\t\"\\xC0\\xC1\\xC2\\xC3\\xC4\\xC5\\xC7\n\t\t\t\\xC8\\xC9\\xCA\\xCB\\xCC\\xCD\\xCE\\xCF\\xD0\\xD1\n\t\t\t\\xD2\\xD3\\xD4\\xD5\\xD8\\xD9\\xDA\\xDB\\xDD\n\t\t\t\\xE0\\xE1\\xE2\\xE3\\xE4\\xE5\\xE7\\xE8\\xE9\\xEA\\xEB\n\t\t\t\\xEC\\xED\\xEE\\xEF\\xF0\\xF1\\xF2\\xF3\\xF4\\xF5\\xF8\n\t\t\t\\xF9\\xFA\\xFB\\xFC\\xFD\\xFF\",\n\t\t\t\"AAAAAAC\n\t\t\tEEEEIIIIDN\n\t\t\tOOOOOUUUY\n\t\t\taaaaaaceeee\n\t\t\tiiiidnooooo\n\t\t\tuuuuyy\"\n\t\t);\n\t\t$string = strtr($string, array(\"\\xC4\"=>\"Ae\", \"\\xC6\"=>\"AE\", \"\\xD6\"=>\"Oe\", \"\\xDC\"=>\"Ue\", \"\\xDE\"=>\"TH\", \"\\xDF\"=>\"ss\", \"\\xE4\"=>\"ae\", \"\\xE6\"=>\"ae\", \"\\xF6\"=>\"oe\", \"\\xFC\"=>\"ue\", \"\\xFE\"=>\"th\"));\n\t\treturn $string;\n\t}\n}\n\n/**\n *\tClean a string from all punctuation characters to use it as a ref or login.\n *  This is a more complete function than dol_sanitizeFileName.\n *\n *\t@param\tstring\t$str            \tString to clean\n * \t@param\tstring\t$newstr\t\t\t\tString to replace forbidden chars with\n *  @param  array\t$badcharstoreplace  List of forbidden characters\n * \t@return string          \t\t\tCleaned string\n *\n * \t@see    \t\tdol_sanitizeFilename, dol_string_unaccent\n */\nfunction dol_string_nospecial($str,$newstr='_',$badcharstoreplace='')\n{\n\t$forbidden_chars_to_replace=array(\" \", \"'\", \"/\", \"\\\\\", \":\", \"*\", \"?\", \"\\\"\", \"<\", \">\", \"|\", \"[\", \"]\", \",\", \";\", \"=\", '\u00b0');  // more complete than dol_sanitizeFileName\n\t$forbidden_chars_to_remove=array();\n\tif (is_array($badcharstoreplace)) $forbidden_chars_to_replace=$badcharstoreplace;\n\t//$forbidden_chars_to_remove=array(\"(\",\")\");\n\n\treturn str_replace($forbidden_chars_to_replace,$newstr,str_replace($forbidden_chars_to_remove,\"\",$str));\n}\n\n\n/**\n * Encode string for xml usage\n *\n * @param \tstring\t$string\t\tString to encode\n * @return\tstring\t\t\t\tString encoded\n */\nfunction dolEscapeXML($string)\n{\n\treturn strtr($string, array('\\''=>'&apos;','\"'=>'&quot;','&'=>'&amp;','<'=>'&lt;','>'=>'&gt;'));\n}\n\n/**\n *  Returns text escaped for inclusion into javascript code\n *\n *  @param      string\t\t$stringtoescape\t\tString to escape\n *  @param\t\tint\t\t$mode\t\t\t\t0=Escape also ' and \" into ', 1=Escape ' but not \" for usage into 'string', 2=Escape \" but not ' for usage into \"string\", 3=Escape ' and \" with \\\n *  @param\t\tint\t\t$noescapebackslashn\t0=Escape also \\n. 1=Do not escape \\n.\n *  @return     string     \t\t \t\t\t\tEscaped string. Both ' and \" are escaped into ' if they are escaped.\n */\nfunction dol_escape_js($stringtoescape, $mode=0, $noescapebackslashn=0)\n{\n\t// escape quotes and backslashes, newlines, etc.\n\t$substitjs=array(\"&#039;\"=>\"\\\\'\",\"\\r\"=>'\\\\r');\n\t//$substitjs['</']='<\\/';\t// We removed this. Should be useless.\n\tif (empty($noescapebackslashn)) { $substitjs[\"\\n\"]='\\\\n'; $substitjs['\\\\']='\\\\\\\\'; }\n\tif (empty($mode)) { $substitjs[\"'\"]=\"\\\\'\"; $substitjs['\"']=\"\\\\'\"; }\n\telse if ($mode == 1) $substitjs[\"'\"]=\"\\\\'\";\n\telse if ($mode == 2) { $substitjs['\"']='\\\\\"'; }\n\telse if ($mode == 3) { $substitjs[\"'\"]=\"\\\\'\"; $substitjs['\"']=\"\\\\\\\"\"; }\n\treturn strtr($stringtoescape, $substitjs);\n}\n\n\n/**\n *  Returns text escaped for inclusion in HTML alt or title tags, or into values of HTML input fields.\n *\n *  @param      string\t\t$stringtoescape\t\tString to escape\n *  @param\t\tint\t\t\t$keepb\t\t\t\t1=Preserve b tags (otherwise, remove them)\n *  @param      int         $keepn              1=Preserve \\r\\n strings (otherwise, remove them)\n *  @return     string     \t\t\t\t \t\tEscaped string\n *\n *  @see\t\tdol_string_nohtmltag\n */\nfunction dol_escape_htmltag($stringtoescape, $keepb=0, $keepn=0)\n{\n\t// escape quotes and backslashes, newlines, etc.\n\t$tmp=dol_html_entity_decode($stringtoescape,ENT_COMPAT,'UTF-8');\n\tif (! $keepb) $tmp=strtr($tmp, array(\"<b>\"=>'','</b>'=>''));\n\tif (! $keepn) $tmp=strtr($tmp, array(\"\\r\"=>'\\\\r',\"\\n\"=>'\\\\n'));\n\treturn dol_htmlentities($tmp,ENT_COMPAT,'UTF-8');\n}\n\n\n/**\n * Convert a string to lower. Never use strtolower because it does not works with UTF8 strings.\n *\n * @param \tstring\t\t$utf8_string\t\tString to encode\n * @return \tstring\t\t\t\t\t\t\tString converted\n */\nfunction dol_strtolower($utf8_string)\n{\n\treturn mb_strtolower($utf8_string, \"UTF-8\");\n}\n\n/**\n * Convert a string to upper. Never use strtolower because it does not works with UTF8 strings.\n *\n * @param \tstring\t\t$utf8_string\t\tString to encode\n * @return \tstring\t\t\t\t\t\t\tString converted\n */\nfunction dol_strtoupper($utf8_string)\n{\n\treturn mb_strtoupper($utf8_string, \"UTF-8\");\n}\n\n\n/**\n *\tWrite log message into outputs. Possible outputs can be:\n *\tSYSLOG_HANDLERS = [\"mod_syslog_file\"]  \t\tfile name is then defined by SYSLOG_FILE\n *\tSYSLOG_HANDLERS = [\"mod_syslog_syslog\"]  \tfacility is then defined by SYSLOG_FACILITY\n *  Warning, syslog functions are bugged on Windows, generating memory protection faults. To solve\n *  this, use logging to files instead of syslog (see setup of module).\n *  Note: If constant 'SYSLOG_FILE_NO_ERROR' defined, we never output any error message when writing to log fails.\n *  Note: You can get log message into html sources by adding parameter &logtohtml=1 (constant MAIN_LOGTOHTML must be set)\n *  This function works only if syslog module is enabled.\n * \tThis must not use any call to other function calling dol_syslog (avoid infinite loop).\n *\n * \t@param  string\t\t$message\t\t\t\tLine to log. ''=Show nothing\n *  @param  int\t\t\t$level\t\t\t\t\tLog level\n *\t\t\t\t\t\t\t\t\t\t\t\tOn Windows LOG_ERR=4, LOG_WARNING=5, LOG_NOTICE=LOG_INFO=6, LOG_DEBUG=6 si define_syslog_variables ou PHP 5.3+, 7 si dolibarr\n *\t\t\t\t\t\t\t\t\t\t\t\tOn Linux   LOG_ERR=3, LOG_WARNING=4, LOG_INFO=6, LOG_DEBUG=7\n *  @param\tint\t\t\t$ident\t\t\t\t\t1=Increase ident of 1, -1=Decrease ident of 1\n *  @param\tstring\t\t$suffixinfilename\t\tWhen output is a file, append this suffix into default log filename.\n *  @param\tstring\t\t$restricttologhandler\tOutput log only for this log handler\n *  @return\tvoid\n */\nfunction dol_syslog($message, $level = LOG_INFO, $ident = 0, $suffixinfilename='', $restricttologhandler='')\n{\n\tglobal $conf, $user;\n\n\t// If syslog module enabled\n\tif (empty($conf->syslog->enabled)) return;\n\n\tif (! empty($message))\n\t{\n    \t// Test log level\n    \t$logLevels = array(LOG_EMERG, LOG_ALERT, LOG_CRIT, LOG_ERR, LOG_WARNING, LOG_NOTICE, LOG_INFO, LOG_DEBUG);\n    \tif (!in_array($level, $logLevels, true))\n    \t{\n    \t\tthrow new Exception('Incorrect log level');\n    \t}\n    \tif ($level > $conf->global->SYSLOG_LEVEL) return;\n\n    \t// If adding log inside HTML page is required\n    \tif (! empty($_REQUEST['logtohtml']) && (! empty($conf->global->MAIN_ENABLE_LOG_TO_HTML) || ! empty($conf->global->MAIN_LOGTOHTML)))   // MAIN_LOGTOHTML kept for backward compatibility\n    \t{\n    \t\t$conf->logbuffer[] = dol_print_date(time(),\"%Y-%m-%d %H:%M:%S\").\" \".$message;\n    \t}\n\n    \t//TODO: Remove this. MAIN_ENABLE_LOG_INLINE_HTML should be deprecated and use a log handler dedicated to HTML output\n    \t// If enable html log tag enabled and url parameter log defined, we show output log on HTML comments\n    \tif (! empty($conf->global->MAIN_ENABLE_LOG_INLINE_HTML) && ! empty($_GET[\"log\"]))\n    \t{\n    \t\tprint \"\\n\\n<!-- Log start\\n\";\n    \t\tprint $message.\"\\n\";\n    \t\tprint \"Log end -->\\n\";\n    \t}\n\n    \t$data = array(\n    \t\t'message' => $message,\n    \t\t'script' => (isset($_SERVER['PHP_SELF'])? basename($_SERVER['PHP_SELF'],'.php') : false),\n    \t\t'level' => $level,\n    \t\t'user' => ((is_object($user) && $user->id) ? $user->login : false),\n    \t\t'ip' => false\n    \t);\n\n    \t// This is when server run behind a reverse proxy\n    \tif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) $data['ip'] = $_SERVER['HTTP_X_FORWARDED_FOR'].(empty($_SERVER[\"REMOTE_ADDR\"])?'':'->'.$_SERVER['REMOTE_ADDR']);\n    \t// This is when server run normally on a server\n    \telse if (! empty($_SERVER[\"REMOTE_ADDR\"])) $data['ip'] = $_SERVER['REMOTE_ADDR'];\n    \t// This is when PHP session is ran inside a web server but not inside a client request (example: init code of apache)\n    \telse if (! empty($_SERVER['SERVER_ADDR'])) $data['ip'] = $_SERVER['SERVER_ADDR'];\n    \t// This is when PHP session is ran outside a web server, like from Windows command line (Not always defined, but useful if OS defined it).\n    \telse if (! empty($_SERVER['COMPUTERNAME'])) $data['ip'] = $_SERVER['COMPUTERNAME'].(empty($_SERVER['USERNAME'])?'':'@'.$_SERVER['USERNAME']);\n    \t// This is when PHP session is ran outside a web server, like from Linux command line (Not always defined, but usefull if OS defined it).\n    \telse if (! empty($_SERVER['LOGNAME'])) $data['ip'] = '???@'.$_SERVER['LOGNAME'];\n    \t// Loop on each log handler and send output\n    \tforeach ($conf->loghandlers as $loghandlerinstance)\n    \t{\n    \t\tif ($restricttologhandler && $loghandlerinstance->code != $restricttologhandler) continue;\n    \t\t$loghandlerinstance->export($data,$suffixinfilename);\n    \t}\n    \tunset($data);\n\t}\n\n\tif (! empty($ident))\n\t{\n\t\tforeach ($conf->loghandlers as $loghandlerinstance)\n\t\t{\n\t\t\t$loghandlerinstance->setIdent($ident);\n\t\t}\n\t}\n}\n\n\n/**\n *\tShow tab header of a card\n *\n *\t@param\tarray\t$links\t\t\t\tArray of tabs. Currently initialized by calling a function xxx_admin_prepare_head\n *\t@param\tstring\t$active     \t\tActive tab name (document', 'info', 'ldap', ....)\n *\t@param  string\t$title      \t\tTitle\n *\t@param  int\t\t$notab\t\t\t\t-1 or 0=Add tab header, 1=no tab header. If you set this to 1, using dol_fiche_end() to close tab is not required.\n * \t@param\tstring\t$picto\t\t\t\tAdd a picto on tab title\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path. If you set this to 1, you can use url returned by dol_buildpath('/mymodyle/img/myimg.png',1) for $picto.\n * \t@return\tvoid\n */\nfunction dol_fiche_head($links=array(), $active='0', $title='', $notab=0, $picto='', $pictoisfullpath=0)\n{\n\tprint dol_get_fiche_head($links, $active, $title, $notab, $picto, $pictoisfullpath);\n}\n\n/**\n *  Show tab header of a card\n *\n *\t@param\tarray\t$links\t\t\t\tArray of tabs\n *\t@param\tstring\t$active     \t\tActive tab name\n *\t@param  string\t$title      \t\tTitle\n *\t@param  int\t\t$notab\t\t\t\t-1 or 0=Add tab header, 1=no tab header. If you set this to 1, using dol_fiche_end() to close tab is not required.\n * \t@param\tstring\t$picto\t\t\t\tAdd a picto on tab title\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path. If you set this to 1, you can use url returned by dol_buildpath('/mymodyle/img/myimg.png',1) for $picto.\n * \t@return\tstring\n */\nfunction dol_get_fiche_head($links=array(), $active='', $title='', $notab=0, $picto='', $pictoisfullpath=0)\n{\n\tglobal $conf, $langs, $hookmanager;\n\n\t$out=\"\\n\".'<div class=\"tabs\" data-role=\"controlgroup\" data-type=\"horizontal\">'.\"\\n\";\n\n\t// Show title\n\t$showtitle=1;\n\tif (! empty($conf->dol_optimize_smallscreen)) $showtitle=0;\n\tif (! empty($title) && $showtitle)\n\t{\n\t\t$limittitle=30;\n\t\t$out.='<a class=\"tabTitle\">';\n\t\tif ($picto) $out.=img_picto($title,($pictoisfullpath?'':'object_').$picto,'',$pictoisfullpath).' ';\n\t\t$out.='<span class=\"tabTitleText\">'.dol_trunc($title,$limittitle).'</span>';\n\t\t$out.='</a>';\n\t}\n\n\t// Define max of key (max may be higher than sizeof because of hole due to module disabling some tabs).\n\t$maxkey=-1;\n\tif (is_array($links) && ! empty($links))\n\t{\n\t\t$keys=array_keys($links);\n\t\tif (count($keys)) $maxkey=max($keys);\n\t}\n\n\t// Show tabs\n\t$bactive=false;\n\t// if =0 we don't use the feature\n\t$limittoshow=(empty($conf->global->MAIN_MAXTABS_IN_CARD)?99:$conf->global->MAIN_MAXTABS_IN_CARD);\n\t$displaytab=0;\n\t$nbintab=0;\n    $popuptab=0; $outmore='';\n\tfor ($i = 0 ; $i <= $maxkey ; $i++)\n\t{\n\t\tif ((is_numeric($active) && $i == $active) || (! empty($links[$i][2]) && ! is_numeric($active) && $active == $links[$i][2]))\n\t\t{\n\t\t\t// si l'active est pr\u00e9sent dans la box\n\t\t\tif ($i >= $limittoshow)\n\t\t\t\t$limittoshow--;\n\t\t}\n\t}\n\n\tfor ($i = 0 ; $i <= $maxkey ; $i++)\n\t{\n\t\tif ((is_numeric($active) && $i == $active) || (! empty($links[$i][2]) && ! is_numeric($active) && $active == $links[$i][2]))\n\t\t{\n\t\t\t$isactive=true;\n\t\t\t$bactive=true;\n\t\t}\n\t\telse\n\t\t\t$isactive=false;\n\n\t\tif ($i < $limittoshow || $isactive)\n\t\t{\n\t\t\t$out.='<div class=\"inline-block tabsElem'.($isactive ? ' tabsElemActive' : '').((! $isactive && ! empty($conf->global->MAIN_HIDE_INACTIVETAB_ON_PRINT))?' hideonprint':'').'\"><!-- id tab = '.(empty($links[$i][2])?'':$links[$i][2]).' -->';\n\t\t\tif (isset($links[$i][2]) && $links[$i][2] == 'image')\n\t\t\t{\n\t\t\t\tif (!empty($links[$i][0]))\n\t\t\t\t{\n\t\t\t\t\t$out.='<a data-role=\"button\" class=\"tabimage\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$out.='<span data-role=\"button\" class=\"tabspan\">'.$links[$i][1].'</span>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (! empty($links[$i][1]))\n\t\t\t{\n\t\t\t\t//print \"x $i $active \".$links[$i][2].\" z\";\n\t\t\t\tif ($isactive)\n\t\t\t\t{\n\t\t\t\t\t$out.='<a data-role=\"button\"'.(! empty($links[$i][2])?' id=\"'.$links[$i][2].'\"':'').' class=\"tabactive tab inline-block\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$out.='<a data-role=\"button\"'.(! empty($links[$i][2])?' id=\"'.$links[$i][2].'\"':'').' class=\"tabunactive tab inline-block\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out.='</div>';\n\t\t}\n\t\telse\n\t\t{\n\t\t    // The popup with the other tabs\n\t\t\tif (! $popuptab)\n\t\t\t{\n\t\t\t    $popuptab=1;\n\t\t\t    $outmore.='<div class=\"popuptabset\">';\n\t\t\t}\n\t\t    $outmore.='<div class=\"popuptab\" style=\"display:inherit;\">';\n\t\t\tif (isset($links[$i][2]) && $links[$i][2] == 'image')\n\t\t\t{\n\t\t\t\tif (!empty($links[$i][0]))\n\t\t\t\t\t$outmore.='<a class=\"tabimage\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\telse\n\t\t\t\t\t$outmore.='<span class=\"tabspan\">'.$links[$i][1].'</span>'.\"\\n\";\n\n\t\t\t}\n\t\t\telse if (! empty($links[$i][1]))\n\t\t\t\t$outmore.='<a'.(! empty($links[$i][2])?' id=\"'.$links[$i][2].'\"':'').' class=\"inline-block\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\n\t\t\t$outmore.='</div>';\n\n\t\t\t$nbintab++;\n\t\t}\n\t\t$displaytab=$i;\n\t}\n\tif ($popuptab) $outmore.='</div>';\n\n\tif ($displaytab > $limittoshow)\n\t{\n\t\t$tabsname=str_replace(\"@\", \"\", $picto);\n\t\t$out.='<div id=\"moretabs'.$tabsname.'\" class=\"inline-block tabsElem\">';\n\t\t$out.='<a href=\"#\" data-role=\"button\" class=\"tab moretab inline-block\">'.$langs->trans(\"More\").'... ('.$nbintab.')</a>';\n\t\t$out.='<div id=\"moretabsList'.$tabsname.'\" style=\"position: absolute; left: -999em;text-align: left;margin:0px;padding:2px\">'.$outmore.'</div>';\n\t\t$out.=\"</div>\\n\";\n\n\t\t$out.=\"<script>\";\n\t\t$out.=\"$('#moretabs\".$tabsname.\"').mouseenter( function() { $('#moretabsList\".$tabsname.\"').css('left','auto');});\";\n\t\t$out.=\"$('#moretabs\".$tabsname.\"').mouseleave( function() { $('#moretabsList\".$tabsname.\"').css('left','-999em');});\";\n\t\t$out.=\"</script>\";\n\t}\n\n\t$out.=\"</div>\\n\";\n\n\tif (! $notab || $notab == -1) $out.=\"\\n\".'<div class=\"tabBar'.($notab == -1 ? '' : ' tabBarWithBottom').'\">'.\"\\n\";\n\n\t$parameters=array('tabname' => $active, 'out' => $out);\n\t$reshook=$hookmanager->executeHooks('printTabsHead',$parameters);\t// This hook usage is called just before output the head of tabs. Take also a look at \"completeTabsHead\"\n\tif ($reshook > 0)\n\t{\n\t\t$out = $hookmanager->resPrint;\n\t}\n\n\treturn $out;\n}\n\n/**\n *  Show tab footer of a card\n *\n *  @param\tint\t\t$notab       -1 or 0=Add tab footer, 1=no tab footer\n *  @return\tvoid\n */\nfunction dol_fiche_end($notab=0)\n{\n\tprint dol_get_fiche_end($notab);\n}\n\n/**\n *\tReturn tab footer of a card\n *\n *\t@param  int\t\t$notab\t\t-1 or 0=Add tab footer, 1=no tab footer\n *  @return\tstring\n */\nfunction dol_get_fiche_end($notab=0)\n{\n\tif (! $notab || $notab == -1) return \"\\n</div>\\n\";\n\telse return '';\n}\n\n/**\n *  Show tab footer of a card.\n *  Note: $object->next_prev_filter can be set to restrict select to find next or previous record by $form->showrefnav.\n *\n *  @param\tobject\t$object\t\t\tObject to show\n *  @param\tstring\t$paramid   \t\tName of parameter to use to name the id into the URL next/previous link\n *  @param\tstring\t$morehtml  \t\tMore html content to output just before the nav bar\n *  @param\tint\t\t$shownav\t  \tShow Condition (navigation is shown if value is 1)\n *  @param\tstring\t$fieldid   \t\tNom du champ en base a utiliser pour select next et previous (we make the select max and min on this field)\n *  @param\tstring\t$fieldref   \tNom du champ objet ref (object->ref) a utiliser pour select next et previous\n *  @param\tstring\t$morehtmlref  \tMore html to show after ref\n *  @param\tstring\t$moreparam  \tMore param to add in nav link url.\n *\t@param\tint\t\t$nodbprefix\t\tDo not include DB prefix to forge table name\n *\t@param\tstring\t$morehtmlleft\tMore html code to show before ref\n *\t@param\tstring\t$morehtmlstatus\tMore html code to show under navigation arrows\n *  @param  int     $onlybanner     Put this to 1, if the card will contains only a banner (add css 'arearefnobottom' on div)\n *\t@param\tstring\t$morehtmlright\tMore html code to show before navigation arrows\n *  @return\tvoid\n */\nfunction dol_banner_tab($object, $paramid, $morehtml='', $shownav=1, $fieldid='rowid', $fieldref='ref', $morehtmlref='', $moreparam='', $nodbprefix=0, $morehtmlleft='', $morehtmlstatus='', $onlybanner=0, $morehtmlright='')\n{\n\tglobal $conf, $form, $user, $langs;\n\n\t$error = 0;\n\n\t$maxvisiblephotos=1;\n\t$showimage=1;\n\t$showbarcode=empty($conf->barcode->enabled)?0:($object->barcode?1:0);\n\tif (! empty($conf->global->MAIN_USE_ADVANCED_PERMS) && empty($user->rights->barcode->lire_advance)) $showbarcode=0;\n\t$modulepart='unknown';\n\n\tif ($object->element == 'societe')         $modulepart='societe';\n\tif ($object->element == 'contact')         $modulepart='contact';\n\tif ($object->element == 'member')          $modulepart='memberphoto';\n\tif ($object->element == 'user')            $modulepart='userphoto';\n\tif ($object->element == 'product')         $modulepart='product';\n\n\tif (class_exists(\"Imagick\"))\n\t{\n\t    if ($object->element == 'propal')            $modulepart='propal';\n\t\tif ($object->element == 'commande')          $modulepart='commande';\n\t\tif ($object->element == 'facture')           $modulepart='facture';\n\t\tif ($object->element == 'fichinter')         $modulepart='ficheinter';\n\t\tif ($object->element == 'contrat')           $modulepart='contract';\n\t    if ($object->element == 'supplier_proposal') $modulepart='supplier_proposal';\n\t\tif ($object->element == 'order_supplier')    $modulepart='supplier_order';\n\t    if ($object->element == 'invoice_supplier')  $modulepart='supplier_invoice';\n\t\tif ($object->element == 'expensereport')     $modulepart='expensereport';\n\t}\n\n\tif ($object->element == 'product')\n\t{\n\t    $width=80; $cssclass='photoref';\n        $showimage=$object->is_photo_available($conf->product->multidir_output[$object->entity]);\n\t    $maxvisiblephotos=(isset($conf->global->PRODUCT_MAX_VISIBLE_PHOTO)?$conf->global->PRODUCT_MAX_VISIBLE_PHOTO:5);\n\t\tif ($conf->browser->phone) $maxvisiblephotos=1;\n\t\tif ($showimage) $morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">'.$object->show_photos($conf->product->multidir_output[$object->entity],'small',$maxvisiblephotos,0,0,0,$width,0).'</div>';\n        else\n        {\n\t\t\tif (!empty($conf->global->PRODUCT_NODISPLAYIFNOPHOTO)) {\n\t\t\t\t$nophoto='';\n\t\t\t\t$morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\"></div>';\n\t\t\t}\n\t\t\t//elseif ($conf->browser->layout != 'phone') {    // Show no photo link\n\t\t\t\t$nophoto='/public/theme/common/nophoto.png';\n\t\t\t\t$morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\"><img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"No photo\" border=\"0\"'.($width?' width=\"'.$width.'\"':'').' src=\"'.DOL_URL_ROOT.$nophoto.'\"></div>';\n\t\t\t//}\n        }\n\t}\n\telse\n\t{\n\t\tif ($showimage)\n        {\n            if ($modulepart != 'unknown')\n            {\n                $phototoshow='';\n                // Check if a preview file is available\n                if (in_array($modulepart, array('propal', 'commande', 'facture', 'ficheinter', 'contract', 'supplier_order', 'supplier_proposal', 'supplier_invoice', 'expensereport')) && class_exists(\"Imagick\"))\n                {\n                    $objectref = dol_sanitizeFileName($object->ref);\n                    $dir_output = $conf->$modulepart->dir_output . \"/\";\n                    if (in_array($modulepart, array('invoice_supplier', 'supplier_invoice')))\n                    {\n                        $subdir = get_exdir($object->id, 2, 0, 0, $object, $modulepart).$objectref;\n                    }\n                    else\n                    {\n                        $subdir = get_exdir($object->id, 0, 0, 0, $object, $modulepart).$objectref;\n                    }\n                    $filepath = $dir_output . $subdir . \"/\";\n                    $file = $filepath . $objectref . \".pdf\";\n                    $relativepath = $subdir.'/'.$objectref.'.pdf';\n\n                    // Define path to preview pdf file (preview precompiled \"file.ext\" are \"file.ext_preview.png\")\n                    $fileimage = $file.'_preview.png';              // If PDF has 1 page\n                    $fileimagebis = $file.'_preview-0.png';         // If PDF has more than one page\n                    $relativepathimage = $relativepath.'_preview.png';\n\n                    // Si fichier PDF existe\n                    if (file_exists($file))\n                    {\n                        $encfile = urlencode($file);\n                        // Conversion du PDF en image png si fichier png non existant\n                        if ( (! file_exists($fileimage) || (filemtime($fileimage) < filemtime($file)))\n                          && (! file_exists($fileimagebis) || (filemtime($fileimagebis) < filemtime($file)))\n                           )\n                        {\n                        \tif (empty($conf->global->MAIN_DISABLE_PDF_THUMBS))\t\t// If you experienc trouble with pdf thumb generation and imagick, you can disable here.\n                        \t{\n                            \t$ret = dol_convert_file($file, 'png', $fileimage);\n                            \tif ($ret < 0) $error++;\n                        \t}\n                        }\n\n                        $heightforphotref=70;\n                        if (! empty($conf->dol_optimize_smallscreen)) $heightforphotref=60;\n                        // Si fichier png PDF d'1 page trouve\n                        if (file_exists($fileimage))\n                        {\n                            $phototoshow = '<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\">';\n                            $phototoshow.= '<img height=\"'.$heightforphotref.'\" class=\"photo photowithmargin photowithborder\" src=\"'.DOL_URL_ROOT . '/viewimage.php?modulepart=apercu'.$modulepart.'&amp;file='.urlencode($relativepathimage).'\">';\n                            $phototoshow.= '</div></div>';\n                        }\n                        // Si fichier png PDF de plus d'1 page trouve\n                        elseif (file_exists($fileimagebis))\n                        {\n                            $preview = preg_replace('/\\.png/','',$relativepathimage) . \"-0.png\";\n                            $phototoshow = '<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\">';\n                            $phototoshow.= '<img height=\"'.$heightforphotref.'\" class=\"photo photowithmargin photowithborder\" src=\"'.DOL_URL_ROOT . '/viewimage.php?modulepart=apercu'.$modulepart.'&amp;file='.urlencode($preview).'\"><p>';\n                            $phototoshow.= '</div></div>';\n                        }\n                    }\n                }\n                else if (! $phototoshow)\n                {\n                    $phototoshow = $form->showphoto($modulepart,$object,0,0,0,'photoref','small',1,0,$maxvisiblephotos);\n                }\n\n                if ($phototoshow)\n                {\n                    $morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">';\n                    $morehtmlleft.=$phototoshow;\n                    $morehtmlleft.='</div>';\n                }\n            }\n\n            if (! $phototoshow)      // Show No photo link (picto of pbject)\n            {\n                $morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">';\n                if ($object->element == 'action')\n                {\n                    $width=80;\n                    $cssclass='photorefcenter';\n                    $nophoto=img_picto('', 'title_agenda', '', false, 1);\n                }\n                else\n                {\n                    $width=14; $cssclass='photorefcenter';\n                    $picto = $object->picto;\n                    if ($object->element == 'project' && ! $object->public) $picto = 'project'; // instead of projectpub\n    \t\t\t\t$nophoto=img_picto('', 'object_'.$picto, '', false, 1);\n                }\n                $morehtmlleft.='<!-- No photo to show -->';\n                $morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\"><img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"No photo\" border=\"0\"'.($width?' width=\"'.$width.'\"':'').' src=\"'.$nophoto.'\"></div></div>';\n\n                $morehtmlleft.='</div>';\n            }\n        }\n\t}\n\n\tif ($showbarcode) $morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">'.$form->showbarcode($object).'</div>';\n\n\tif ($object->element == 'societe')\n\t{\n\t    if (! empty($conf->use_javascript_ajax) && $user->rights->societe->creer && ! empty($conf->global->MAIN_DIRECT_STATUS_UPDATE))\n    \t{\n\t       \t$morehtmlstatus.=ajax_object_onoff($object, 'status', 'status', 'InActivity', 'ActivityCeased');\n    \t}\n\t}\n\telseif ($object->element == 'product')\n\t{\n\t    //$morehtmlstatus.=$langs->trans(\"Status\").' ('.$langs->trans(\"Sell\").') ';\n        if (! empty($conf->use_javascript_ajax) && $user->rights->produit->creer && ! empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n            $morehtmlstatus.=ajax_object_onoff($object, 'status', 'tosell', 'ProductStatusOnSell', 'ProductStatusNotOnSell');\n        } else {\n            $morehtmlstatus.='<span class=\"statusrefsell\">'.$object->getLibStatut(5,0).'</span>';\n        }\n        $morehtmlstatus.=' &nbsp; ';\n        //$morehtmlstatus.=$langs->trans(\"Status\").' ('.$langs->trans(\"Buy\").') ';\n\t    if (! empty($conf->use_javascript_ajax) && $user->rights->produit->creer && ! empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n            $morehtmlstatus.=ajax_object_onoff($object, 'status_buy', 'tobuy', 'ProductStatusOnBuy', 'ProductStatusNotOnBuy');\n        } else {\n            $morehtmlstatus.='<span class=\"statusrefbuy\">'.$object->getLibStatut(5,1).'</span>';\n        }\n\t}\n\telseif (in_array($object->element, array('facture', 'invoice', 'invoice_supplier', 'chargesociales', 'loan')))\n\t{\n\t    $tmptxt=$object->getLibStatut(6, $object->totalpaye);\n\t    if (empty($tmptxt) || $tmptxt == $object->getLibStatut(3) || $conf->browser->layout=='phone') $tmptxt=$object->getLibStatut(5, $object->totalpaye);\n\t\t$morehtmlstatus.=$tmptxt;\n\t}\n\telseif ($object->element == 'contrat' || $object->element == 'contract')\n\t{\n        if ($object->statut==0) $morehtmlstatus.=$object->getLibStatut(2);\n        else $morehtmlstatus.=$object->getLibStatut(4);\n\t}\n\telse { // Generic case\n\t    $tmptxt=$object->getLibStatut(6);\n\t    if (empty($tmptxt) || $tmptxt == $object->getLibStatut(3) || $conf->browser->layout=='phone') $tmptxt=$object->getLibStatut(5);\n\t\t$morehtmlstatus.=$tmptxt;\n\t}\n\tif (! empty($object->name_alias)) $morehtmlref.='<div class=\"refidno\">'.$object->name_alias.'</div>';      // For thirdparty\n\n\t// Add label\n\tif ($object->element == 'product' || $object->element == 'bank_account' || $object->element == 'project_task')\n\t{\n\t\tif (! empty($object->label)) $morehtmlref.='<div class=\"refidno\">'.$object->label.'</div>';\n\t}\n\n\tif ($object->element != 'product' && $object->element != 'bookmark' && $object->element != 'ecm_directories')\n\t{\n    \t$morehtmlref.='<div class=\"refidno\">';\n    \t$morehtmlref.=$object->getBannerAddress('refaddress',$object);\n    \t$morehtmlref.='</div>';\n\t}\n\tif (! empty($conf->global->MAIN_SHOW_TECHNICAL_ID) && in_array($object->element, array('societe', 'contact', 'member', 'product')))\n\t{\n\t\t$morehtmlref.='<div style=\"clear: both;\"></div><div class=\"refidno\">';\n\t\t$morehtmlref.=$langs->trans(\"TechnicalID\").': '.$object->id;\n\t\t$morehtmlref.='</div>';\n\t}\n\n\tprint '<div class=\"'.($onlybanner?'arearefnobottom ':'arearef ').'heightref valignmiddle\" width=\"100%\">';\n\tprint $form->showrefnav($object, $paramid, $morehtml, $shownav, $fieldid, $fieldref, $morehtmlref, $moreparam, $nodbprefix, $morehtmlleft, $morehtmlstatus, $morehtmlright);\n\tprint '</div>';\n\tprint '<div class=\"underrefbanner clearboth\"></div>';\n}\n\n/**\n * Show a string with the label tag dedicated to the HTML edit field.\n *\n * @param\tstring\t$langkey\t\tTranslation key\n * @param \tstring\t$fieldkey\t\tKey of the html select field the text refers to\n * @param\tint\t\t$fieldrequired\t1=Field is mandatory\n * @deprecated Form::editfieldkey\n */\nfunction fieldLabel($langkey, $fieldkey, $fieldrequired=0)\n{\n\tglobal $conf, $langs;\n\t$ret='';\n\tif ($fieldrequired) $ret.='<span class=\"fieldrequired\">';\n\tif (($conf->dol_use_jmobile != 4)) $ret.='<label for=\"'.$fieldkey.'\">';\n\t$ret.=$langs->trans($langkey);\n\tif (($conf->dol_use_jmobile != 4)) $ret.='</label>';\n\tif ($fieldrequired) $ret.='</span>';\n\treturn $ret;\n}\n\n/**\n * Return string to add class property on html element with pair/impair.\n *\n * @param\tstring\t$var\t\t\t0 or 1\n * @param\tstring\t$moreclass\t\tMore class to add\n * @return\tstring\t\t\t\t\tString to add class onto HTML element\n */\nfunction dol_bc($var,$moreclass='')\n{\n\tglobal $bc;\n\t$ret=' '.$bc[$var];\n\tif ($moreclass) $ret=preg_replace('/class=\\\"/','class=\"'.$moreclass.' ',$ret);\n\treturn $ret;\n}\n\n/**\n *      Return a formated address (part address/zip/town/state) according to country rules\n *\n *      @param  Object\t\t$object         A company or contact object\n * \t    @param\tint\t\t\t$withcountry\t1=Add country into address string\n *      @param\tstring\t\t$sep\t\t\tSeparator to use to build string\n *      @param\tTranslate\t$outputlangs\tObject lang that contains language for text translation.\n *      @return string          \t\t\tFormated string\n *      @see dol_print_address\n */\nfunction dol_format_address($object,$withcountry=0,$sep=\"\\n\",$outputlangs='')\n{\n\tglobal $conf,$langs;\n\n\t$ret='';\n\t$countriesusingstate=array('AU','CA','US','IN','GB','ES','UK','TR');    // See also MAIN_FORCE_STATE_INTO_ADDRESS\n\n\t// Address\n\t$ret .= $object->address;\n\t// Zip/Town/State\n\tif (in_array($object->country_code,array('AU', 'CA', 'US')) || ! empty($conf->global->MAIN_FORCE_STATE_INTO_ADDRESS))   \t// US: title firstname name \\n address lines \\n town, state, zip \\n country\n\t{\n\t\t$ret .= ($ret ? $sep : '' ).$object->town;\n\t\tif ($object->state)\n\t\t{\n\t\t\t$ret.=($ret?\", \":'').$object->state;\n\t\t}\n\t\tif ($object->zip) $ret .= ($ret?\", \":'').$object->zip;\n\t}\n\telse if (in_array($object->country_code,array('GB','UK'))) // UK: title firstname name \\n address lines \\n town state \\n zip \\n country\n\t{\n\t\t$ret .= ($ret ? $sep : '' ).$object->town;\n\t\tif ($object->state)\n\t\t{\n\t\t\t$ret.=($ret?\", \":'').$object->state;\n\t\t}\n\t\tif ($object->zip) $ret .= ($ret ? $sep : '' ).$object->zip;\n\t}\n\telse if (in_array($object->country_code,array('ES','TR'))) // ES: title firstname name \\n address lines \\n zip town \\n state \\n country\n\t{\n\t\t$ret .= ($ret ? $sep : '' ).$object->zip;\n\t\t$ret .= ($object->town?(($object->zip?' ':'').$object->town):'');\n\t\tif ($object->state)\n\t\t{\n\t\t\t$ret.=\"\\n\".$object->state;\n\t\t}\n\t}\n\telse                                        \t\t// Other: title firstname name \\n address lines \\n zip town \\n country\n\t{\n\t\t$ret .= $object->zip ? (($ret ? $sep : '' ).$object->zip) : '';\n\t\t$ret .= ($object->town?(($object->zip?' ':($ret ? $sep : '' )).$object->town):'');\n\t\tif ($object->state && in_array($object->country_code,$countriesusingstate))\n\t\t{\n\t\t\t$ret.=($ret?\", \":'').$object->state;\n\t\t}\n\t}\n\tif (! is_object($outputlangs)) $outputlangs=$langs;\n\tif ($withcountry) $ret.=($object->country_code?($ret?$sep:'').$outputlangs->convToOutputCharset($outputlangs->transnoentitiesnoconv(\"Country\".$object->country_code)):'');\n\n\treturn $ret;\n}\n\n\n\n/**\n *\tFormat a string.\n *\n *\t@param\tstring\t$fmt\t\tFormat of strftime function (http://php.net/manual/fr/function.strftime.php)\n *  @param\tint\t\t$ts\t\t\tTimesamp (If is_gmt is true, timestamp is already includes timezone and daylight saving offset, if is_gmt is false, timestamp is a GMT timestamp and we must compensate with server PHP TZ)\n *  @param\tint\t\t$is_gmt\t\tSee comment of timestamp parameter\n *\t@return\tstring\t\t\t\tA formatted string\n */\nfunction dol_strftime($fmt, $ts=false, $is_gmt=false)\n{\n\tif ((abs($ts) <= 0x7FFFFFFF)) { // check if number in 32-bit signed range\n\t\treturn ($is_gmt)? @gmstrftime($fmt,$ts): @strftime($fmt,$ts);\n\t}\n\telse return 'Error date into a not supported range';\n}\n\n/**\n *\tOutput date in a string format according to outputlangs (or langs if not defined).\n * \tReturn charset is always UTF-8, except if encodetoouput is defined. In this case charset is output charset\n *\n *\t@param\tint\t\t\t$time\t\t\tGM Timestamps date\n *\t@param\tstring\t\t$format      \tOutput date format (tag of strftime function)\n *\t\t\t\t\t\t\t\t\t\t\"%d %b %Y\",\n *\t\t\t\t\t\t\t\t\t\t\"%d/%m/%Y %H:%M\",\n *\t\t\t\t\t\t\t\t\t\t\"%d/%m/%Y %H:%M:%S\",\n *                                      \"%B\"=Long text of month, \"%A\"=Long text of day, \"%b\"=Short text of month, \"%a\"=Short text of day\n *\t\t\t\t\t\t\t\t\t\t\"day\", \"daytext\", \"dayhour\", \"dayhourldap\", \"dayhourtext\", \"dayrfc\", \"dayhourrfc\", \"...reduceformat\"\n * \t@param\tstring\t\t$tzoutput\t\ttrue or 'gmt' => string is for Greenwich location\n * \t\t\t\t\t\t\t\t\t\tfalse or 'tzserver' => output string is for local PHP server TZ usage\n * \t\t\t\t\t\t\t\t\t\t'tzuser' => output string is for user TZ (current browser TZ with current dst)\n *                                      'tzuserrel' => output string is for user TZ (current browser TZ with dst or not, depending on date position)\n *\t@param\tTranslate\t$outputlangs\tObject lang that contains language for text translation.\n *  @param  boolean\t\t$encodetooutput false=no convert into output pagecode\n * \t@return string      \t\t\t\tFormated date or '' if time is null\n *\n *  @see        dol_mktime, dol_stringtotime, dol_getdate\n */\nfunction dol_print_date($time,$format='',$tzoutput='tzserver',$outputlangs='',$encodetooutput=false)\n{\n\tglobal $conf,$langs;\n\n\t// Clean parameters\n\t$to_gmt=false;\n\t$offsettz=$offsetdst=0;\n\tif ($tzoutput)\n\t{\n\t\t$to_gmt=true;\t// For backward compatibility\n\t\tif (is_string($tzoutput))\n\t\t{\n\t\t\tif ($tzoutput == 'tzserver')\n\t\t\t{\n\t\t\t\t$to_gmt=false;\n\t\t\t\t$offsettzstring=@date_default_timezone_get();\t\t// Example 'Europe/Berlin' or 'Indian/Reunion'\n\t\t\t\t$offsettz=0;\n\t\t\t\t$offsetdst=0;\n\t\t\t}\n\t\t\telseif ($tzoutput == 'tzuser')\n\t\t\t{\n\t\t\t\t$to_gmt=true;\n\t\t\t\t$offsettzstring=(empty($_SESSION['dol_tz_string'])?'UTC':$_SESSION['dol_tz_string']);\t// Example 'Europe/Berlin' or 'Indian/Reunion'\n\t\t\t\t$offsettz=(empty($_SESSION['dol_tz'])?0:$_SESSION['dol_tz'])*60*60;\n\t\t\t\t$offsetdst=(empty($_SESSION['dol_dst'])?0:$_SESSION['dol_dst'])*60*60;\n\t\t\t}\n\t\t}\n\t}\n\tif (! is_object($outputlangs)) $outputlangs=$langs;\n\tif (! $format) $format='daytextshort';\n\t$reduceformat=(! empty($conf->dol_optimize_smallscreen) && in_array($format,array('day','dayhour')))?1:0;\n\t$formatwithoutreduce = preg_replace('/reduceformat/','',$format);\n\tif ($formatwithoutreduce != $format) { $format = $formatwithoutreduce; $reduceformat=1; }  // so format 'dayreduceformat' is processed like day\n\n\t// Change predefined format into computer format. If found translation in lang file we use it, otherwise we use default.\n\t// TODO Add format daysmallyear and dayhoursmallyear\n\tif ($format == 'day')\t\t\t\t$format=($outputlangs->trans(\"FormatDateShort\")!=\"FormatDateShort\"?$outputlangs->trans(\"FormatDateShort\"):$conf->format_date_short);\n\telse if ($format == 'hour')\t\t\t$format=($outputlangs->trans(\"FormatHourShort\")!=\"FormatHourShort\"?$outputlangs->trans(\"FormatHourShort\"):$conf->format_hour_short);\n\telse if ($format == 'hourduration')\t$format=($outputlangs->trans(\"FormatHourShortDuration\")!=\"FormatHourShortDuration\"?$outputlangs->trans(\"FormatHourShortDuration\"):$conf->format_hour_short_duration);\n\telse if ($format == 'daytext')\t\t\t $format=($outputlangs->trans(\"FormatDateText\")!=\"FormatDateText\"?$outputlangs->trans(\"FormatDateText\"):$conf->format_date_text);\n\telse if ($format == 'daytextshort')\t$format=($outputlangs->trans(\"FormatDateTextShort\")!=\"FormatDateTextShort\"?$outputlangs->trans(\"FormatDateTextShort\"):$conf->format_date_text_short);\n\telse if ($format == 'dayhour')\t\t\t $format=($outputlangs->trans(\"FormatDateHourShort\")!=\"FormatDateHourShort\"?$outputlangs->trans(\"FormatDateHourShort\"):$conf->format_date_hour_short);\n\telse if ($format == 'dayhoursec')\t\t $format=($outputlangs->trans(\"FormatDateHourSecShort\")!=\"FormatDateHourSecShort\"?$outputlangs->trans(\"FormatDateHourSecShort\"):$conf->format_date_hour_sec_short);\n\telse if ($format == 'dayhourtext')\t\t $format=($outputlangs->trans(\"FormatDateHourText\")!=\"FormatDateHourText\"?$outputlangs->trans(\"FormatDateHourText\"):$conf->format_date_hour_text);\n\telse if ($format == 'dayhourtextshort') $format=($outputlangs->trans(\"FormatDateHourTextShort\")!=\"FormatDateHourTextShort\"?$outputlangs->trans(\"FormatDateHourTextShort\"):$conf->format_date_hour_text_short);\n\t// Format not sensitive to language\n\telse if ($format == 'dayhourlog')\t\t $format='%Y%m%d%H%M%S';\n\telse if ($format == 'dayhourldap')\t\t $format='%Y%m%d%H%M%SZ';\n\telse if ($format == 'dayhourxcard')\t$format='%Y%m%dT%H%M%SZ';\n\telse if ($format == 'dayxcard')\t \t$format='%Y%m%d';\n\telse if ($format == 'dayrfc')\t\t\t $format='%Y-%m-%d';             // DATE_RFC3339\n\telse if ($format == 'dayhourrfc')\t\t $format='%Y-%m-%dT%H:%M:%SZ';   // DATETIME RFC3339\n\telse if ($format == 'standard')\t\t$format='%Y-%m-%d %H:%M:%S';\n\n\tif ($reduceformat)\n\t{\n\t\t$format=str_replace('%Y','%y',$format);\n\t\t$format=str_replace('yyyy','yy',$format);\n\t}\n\n\t// If date undefined or \"\", we return \"\"\n\tif (dol_strlen($time) == 0) return '';\t\t// $time=0 allowed (it means 01/01/1970 00:00:00)\n\n\t// Clean format\n\tif (preg_match('/%b/i',$format))\t\t// There is some text to translate\n\t{\n\t\t// We inhibate translation to text made by strftime functions. We will use trans instead later.\n\t\t$format=str_replace('%b','__b__',$format);\n\t\t$format=str_replace('%B','__B__',$format);\n\t}\n\tif (preg_match('/%a/i',$format))\t\t// There is some text to translate\n\t{\n\t\t// We inhibate translation to text made by strftime functions. We will use trans instead later.\n\t\t$format=str_replace('%a','__a__',$format);\n\t\t$format=str_replace('%A','__A__',$format);\n\t}\n\n\t// Analyze date\n\tif (preg_match('/^([0-9]+)\\-([0-9]+)\\-([0-9]+) ?([0-9]+)?:?([0-9]+)?:?([0-9]+)?/i',$time,$reg)\n\t|| preg_match('/^([0-9][0-9][0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])$/i',$time,$reg))\t// Deprecated. Ex: 1970-01-01, 1970-01-01 01:00:00, 19700101010000\n\t{\n\t\t// This part of code should not be used. TODO Remove this.\n\t\tdol_syslog(\"Functions.lib::dol_print_date function call with deprecated value of time in page \".$_SERVER[\"PHP_SELF\"], LOG_WARNING);\n\t\t// Date has format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM:SS' or 'YYYYMMDDHHMMSS'\n\t\t$syear\t= (! empty($reg[1]) ? $reg[1] : '');\n\t\t$smonth\t= (! empty($reg[2]) ? $reg[2] : '');\n\t\t$sday\t= (! empty($reg[3]) ? $reg[3] : '');\n\t\t$shour\t= (! empty($reg[4]) ? $reg[4] : '');\n\t\t$smin\t= (! empty($reg[5]) ? $reg[5] : '');\n\t\t$ssec\t= (! empty($reg[6]) ? $reg[6] : '');\n\n\t\t$time=dol_mktime($shour,$smin,$ssec,$smonth,$sday,$syear,true);\n\t\t$ret=adodb_strftime($format,$time+$offsettz+$offsetdst,$to_gmt);\n\t}\n\telse\n\t{\n\t\t// Date is a timestamps\n\t\tif ($time < 100000000000)\t// Protection against bad date values\n\t\t{\n\t\t\t$ret=adodb_strftime($format,$time+$offsettz+$offsetdst,$to_gmt);\t// TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\t\t}\n\t\telse $ret='Bad value '.$time.' for date';\n\t}\n\n\tif (preg_match('/__b__/i',$format))\n\t{\n\t\t// Here ret is string in PHP setup language (strftime was used). Now we convert to $outputlangs.\n\t\t$month=adodb_strftime('%m',$time+$offsettz+$offsetdst);\t\t\t\t\t// TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n        $month=sprintf(\"%02d\", $month);                             // $month may be return with format '06' on some installation and '6' on other, so we force it to '06'.\n\t\tif ($encodetooutput)\n\t\t{\n\t\t\t$monthtext=$outputlangs->transnoentities('Month'.$month);\n\t\t\t$monthtextshort=$outputlangs->transnoentities('MonthShort'.$month);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$monthtext=$outputlangs->transnoentitiesnoconv('Month'.$month);\n\t\t\t$monthtextshort=$outputlangs->transnoentitiesnoconv('MonthShort'.$month);\n\t\t}\n\t\t//print 'monthtext='.$monthtext.' monthtextshort='.$monthtextshort;\n\t\t$ret=str_replace('__b__',$monthtextshort,$ret);\n\t\t$ret=str_replace('__B__',$monthtext,$ret);\n\t\t//print 'x'.$outputlangs->charset_output.'-'.$ret.'x';\n\t\t//return $ret;\n\t}\n\tif (preg_match('/__a__/i',$format))\n\t{\n\t\t$w=adodb_strftime('%w',$time+$offsettz+$offsetdst);\t\t\t\t\t\t// TODO Remove this\n\t\t$dayweek=$outputlangs->transnoentitiesnoconv('Day'.$w);\n\t\t$ret=str_replace('__A__',$dayweek,$ret);\n\t\t$ret=str_replace('__a__',dol_substr($dayweek,0,3),$ret);\n\t}\n\n\treturn $ret;\n}\n\n\n/**\n *\tReturn an array with locale date info.\n *  PHP getdate is restricted to the years 1901-2038 on Unix and 1970-2038 on Windows\n *  WARNING: This function always use PHP server timezone to return locale informations !!!\n *  Usage must be avoid.\n *  FIXME: Replace this with PHP date function and a parameter $gm\n *\n *\t@param\tint\t\t\t$timestamp      Timestamp\n *\t@param\tboolean\t\t$fast           Fast mode\n *\t@return\tarray\t\t\t\t\t\tArray of informations\n *\t\t\t\t\t\t\t\t\t\tIf no fast mode:\n *\t\t\t\t\t\t\t\t\t\t'seconds' => $secs,\n *\t\t\t\t\t\t\t\t\t\t'minutes' => $min,\n *\t\t\t\t\t\t\t\t\t\t'hours' => $hour,\n *\t\t\t\t\t\t\t\t\t\t'mday' => $day,\n *\t\t\t\t\t\t\t\t\t\t'wday' => $dow,\t\t0=sunday, 6=saturday\n *\t\t\t\t\t\t\t\t\t\t'mon' => $month,\n *\t\t\t\t\t\t\t\t\t\t'year' => $year,\n *\t\t\t\t\t\t\t\t\t\t'yday' => floor($secsInYear/$_day_power),\n *\t\t\t\t\t\t\t\t\t\t'weekday' => gmdate('l',$_day_power*(3+$dow)),\n *\t\t\t\t\t\t\t\t\t\t'month' => gmdate('F',mktime(0,0,0,$month,2,1971)),\n *\t\t\t\t\t\t\t\t\t\tIf fast mode:\n *\t\t\t\t\t\t\t\t\t\t'seconds' => $secs,\n *\t\t\t\t\t\t\t\t\t\t'minutes' => $min,\n *\t\t\t\t\t\t\t\t\t\t'hours' => $hour,\n *\t\t\t\t\t\t\t\t\t\t'mday' => $day,\n *\t\t\t\t\t\t\t\t\t\t'mon' => $month,\n *\t\t\t\t\t\t\t\t\t\t'year' => $year,\n *\t\t\t\t\t\t\t\t\t\t'yday' => floor($secsInYear/$_day_power),\n *\t\t\t\t\t\t\t\t\t\t'leap' => $leaf,\n *\t\t\t\t\t\t\t\t\t\t'ndays' => $ndays\n * \t@see \t\t\t\t\t\t\t\tdol_print_date, dol_stringtotime, dol_mktime\n */\nfunction dol_getdate($timestamp,$fast=false)\n{\n\tglobal $conf;\n\n\t$usealternatemethod=false;\n\tif ($timestamp <= 0) $usealternatemethod=true;\t\t\t\t// <= 1970\n\tif ($timestamp >= 2145913200) $usealternatemethod=true;\t\t// >= 2038\n\n\tif ($usealternatemethod)\n\t{\n\t\t$arrayinfo=adodb_getdate($timestamp,$fast);\n\t}\n\telse\n\t{\n\t\t$arrayinfo=getdate($timestamp);\n\t}\n\n\treturn $arrayinfo;\n}\n\n/**\n *\tReturn a timestamp date built from detailed informations (by default a local PHP server timestamp)\n * \tReplace function mktime not available under Windows if year < 1970\n *\tPHP mktime is restricted to the years 1901-2038 on Unix and 1970-2038 on Windows\n *\n * \t@param\tint\t\t\t$hour\t\t\tHour\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$minute\t\t\tMinute\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$second\t\t\tSecond\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$month\t\t\tMonth (1 to 12)\n *\t@param\tint\t\t\t$day\t\t\tDay (1 to 31)\n *\t@param\tint\t\t\t$year\t\t\tYear\n *\t@param\tmixed\t\t$gm\t\t\t\tTrue or 1 or 'gmt'=Input informations are GMT values\n *\t\t\t\t\t\t\t\t\t\tFalse or 0 or 'server' = local to server TZ\n *\t\t\t\t\t\t\t\t\t\t'user' = local to user TZ\n *\t\t\t\t\t\t\t\t\t\t'tz,TimeZone' = use specified timezone\n *\t@param\tint\t\t\t$check\t\t\t0=No check on parameters (Can use day 32, etc...)\n *\t@return\tint|string\t\t\t\t\tDate as a timestamp, '' or false if error\n * \t@see \t\t\t\t\t\t\t\tdol_print_date, dol_stringtotime, dol_getdate\n */\nfunction dol_mktime($hour,$minute,$second,$month,$day,$year,$gm=false,$check=1)\n{\n\tglobal $conf;\n\t//print \"- \".$hour.\",\".$minute.\",\".$second.\",\".$month.\",\".$day.\",\".$year.\",\".$_SERVER[\"WINDIR\"].\" -\";\n\n\t// Clean parameters\n\tif ($hour   == -1 || empty($hour)) $hour=0;\n\tif ($minute == -1 || empty($minute)) $minute=0;\n\tif ($second == -1 || empty($second)) $second=0;\n\n\t// Check parameters\n\tif ($check)\n\t{\n\t\tif (! $month || ! $day)  return '';\n\t\tif ($day   > 31) return '';\n\t\tif ($month > 12) return '';\n\t\tif ($hour  < 0 || $hour   > 24) return '';\n\t\tif ($minute< 0 || $minute > 60) return '';\n\t\tif ($second< 0 || $second > 60) return '';\n\t}\n\n\tif (method_exists('DateTime','getTimestamp'))\n\t{\n\t\tif (empty($gm) || $gm === 'server')\n\t\t{\n\t\t\t$default_timezone=@date_default_timezone_get();\t\t// Example 'Europe/Berlin'\n\t\t\t$localtz = new DateTimeZone($default_timezone);\n\t\t}\n\t\telse if ($gm === 'user')\n\t\t{\n\t\t\t// We use dol_tz_string first because it is more reliable.\n\t\t\t$default_timezone=(empty($_SESSION[\"dol_tz_string\"])?@date_default_timezone_get():$_SESSION[\"dol_tz_string\"]);\t\t// Example 'Europe/Berlin'\n\t\t\ttry {\n\t\t\t\t$localtz = new DateTimeZone($default_timezone);\n\t\t\t}\n\t\t\tcatch(Exception $e)\n\t\t\t{\n\t\t\t\tdol_syslog(\"Warning dol_tz_string contains an invalid value \".$_SESSION[\"dol_tz_string\"], LOG_WARNING);\n\t\t\t\t$default_timezone=@date_default_timezone_get();\n\t\t\t}\n\t\t}\n\t\telse if (strrpos($gm, \"tz,\") !== false)\n\t\t{\n\t\t\t$timezone=str_replace(\"tz,\", \"\", $gm);  // Example 'tz,Europe/Berlin'\n\t\t\ttry\n\t\t\t{\n\t\t\t\t$localtz = new DateTimeZone($timezone);\n\t\t\t}\n\t\t\tcatch(Exception $e)\n\t\t\t{\n\t\t\t\tdol_syslog(\"Warning passed timezone contains an invalid value \".$timezone, LOG_WARNING);\n\t\t\t}\n\t\t}\n\n\t\tif (empty($localtz)) {\n\t\t\t$localtz = new DateTimeZone('UTC');\n\t\t}\n\n\t\t$dt = new DateTime(null,$localtz);\n\t\t$dt->setDate($year,$month,$day);\n\t\t$dt->setTime((int) $hour, (int) $minute, (int) $second);\n\t\t$date=$dt->getTimestamp();\t// should include daylight saving time\n\t\treturn $date;\n\t}\n\telse\n\t{\n\t\tdol_print_error('','PHP version must be 5.3+');\n\t\treturn '';\n\t}\n}\n\n\n/**\n *\tReturn date for now. In mot cases, we use this function without parameters (that means GMT time).\n *\n * \t@param\tstring\t\t$mode\t'gmt' => we return GMT timestamp,\n * \t\t\t\t\t\t\t\t'tzserver' => we add the PHP server timezone\n *  \t\t\t\t\t\t\t'tzref' => we add the company timezone\n * \t\t\t\t\t\t\t\t'tzuser' => we add the user timezone\n *\t@return int   $date\tTimestamp\n */\nfunction dol_now($mode='gmt')\n{\n    $ret='';\n\t// Note that gmmktime and mktime return same value (GMT) when used without parameters\n\t//if ($mode == 'gmt') $ret=gmmktime(); // Strict Standards: gmmktime(): You should be using the time() function instead\n\tif ($mode == 'gmt') $ret=time();\t// Time for now at greenwich.\n\telse if ($mode == 'tzserver')\t\t// Time for now with PHP server timezone added\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t$tzsecond=getServerTimeZoneInt('now');    // Contains tz+dayling saving time\n\t\t$ret=dol_now('gmt')+($tzsecond*3600);\n\t}\n\t/*else if ($mode == 'tzref')\t\t\t\t// Time for now with parent company timezone is added\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t$tzsecond=getParentCompanyTimeZoneInt();    // Contains tz+dayling saving time\n\t\t$ret=dol_now('gmt')+($tzsecond*3600);\n\t}*/\n\telse if ($mode == 'tzuser')\t\t\t\t// Time for now with user timezone added\n\t{\n\t\t//print 'eeee'.time().'-'.mktime().'-'.gmmktime();\n\t\t$offsettz=(empty($_SESSION['dol_tz'])?0:$_SESSION['dol_tz'])*60*60;\n\t\t$offsetdst=(empty($_SESSION['dol_dst'])?0:$_SESSION['dol_dst'])*60*60;\n\t\t$ret=dol_now('gmt')+($offsettz+$offsetdst);\n\t}\n\treturn $ret;\n}\n\n\n/**\n * Return string with formated size\n *\n * @param\tint\t\t$size\t\tSize to print\n * @param\tint\t\t$shortvalue\tTell if we want long value to use another unit (Ex: 1.5Kb instead of 1500b)\n * @param\tint\t\t$shortunit\tUse short value of size unit\n * @return\tstring\t\t\t\tLink\n */\nfunction dol_print_size($size,$shortvalue=0,$shortunit=0)\n{\n\tglobal $conf,$langs;\n\t$level=1024;\n\n\tif (! empty($conf->dol_optimize_smallscreen)) $shortunit=1;\n\n\t// Set value text\n\tif (empty($shortvalue) || $size < ($level*10))\n\t{\n\t\t$ret=$size;\n\t\t$textunitshort=$langs->trans(\"b\");\n\t\t$textunitlong=$langs->trans(\"Bytes\");\n\t}\n\telse\n\t{\n\t\t$ret=round($size/$level,0);\n\t\t$textunitshort=$langs->trans(\"Kb\");\n\t\t$textunitlong=$langs->trans(\"KiloBytes\");\n\t}\n\t// Use long or short text unit\n\tif (empty($shortunit)) { $ret.=' '.$textunitlong; }\n\telse { $ret.=' '.$textunitshort; }\n\n\treturn $ret;\n}\n\n/**\n * Show Url link\n *\n * @param\tstring\t\t$url\t\tUrl to show\n * @param\tstring\t\t$target\t\tTarget for link\n * @param\tint\t\t\t$max\t\tMax number of characters to show\n * @param\tint\t\t\t$withpicto\tWith picto\n * @return\tstring\t\t\t\t\tHTML Link\n */\nfunction dol_print_url($url,$target='_blank',$max=32,$withpicto=0)\n{\n\tglobal $langs;\n\n\tif (empty($url)) return '';\n\n\t$link='<a href=\"';\n\tif (! preg_match('/^http/i',$url)) $link.='http://';\n\t$link.=$url;\n\t$link.='\"';\n\tif ($target) $link.=' target=\"'.$target.'\"';\n\t$link.='>';\n\tif (! preg_match('/^http/i',$url)) $link.='http://';\n\t$link.=dol_trunc($url,$max);\n\t$link.='</a>';\n\treturn '<div class=\"nospan float\" style=\"margin-right: 10px\">'.($withpicto?img_picto($langs->trans(\"Url\"), 'object_globe.png').' ':'').$link.'</div>';\n}\n\n/**\n * Show EMail link\n *\n * @param\tstring\t\t$email\t\t\tEMail to show (only email, without 'Name of recipient' before)\n * @param \tint\t\t\t$cid \t\t\tId of contact if known\n * @param \tint\t\t\t$socid \t\t\tId of third party if known\n * @param \tint\t\t\t$addlink\t\t0=no link, 1=email has a html email link (+ link to create action if constant AGENDA_ADDACTIONFOREMAIL is on)\n * @param\tint\t\t\t$max\t\t\tMax number of characters to show\n * @param\tint\t\t\t$showinvalid\tShow warning if syntax email is wrong\n * @param\tint\t\t\t$withpicto\t\tShow picto\n * @return\tstring\t\t\t\t\t\tHTML Link\n */\nfunction dol_print_email($email,$cid=0,$socid=0,$addlink=0,$max=64,$showinvalid=1,$withpicto=0)\n{\n\tglobal $conf,$user,$langs;\n\n\t$newemail=$email;\n\n\tif (empty($email)) return '&nbsp;';\n\n\tif (! empty($addlink))\n\t{\n\t\t$newemail='<a style=\"text-overflow: ellipsis;\" href=\"';\n\t\tif (! preg_match('/^mailto:/i',$email)) $newemail.='mailto:';\n\t\t$newemail.=$email;\n\t\t$newemail.='\">';\n\t\t$newemail.=dol_trunc($email,$max);\n\t\t$newemail.='</a>';\n\t\tif ($showinvalid && ! isValidEmail($email))\n\t\t{\n\t\t\t$langs->load(\"errors\");\n\t\t\t$newemail.=img_warning($langs->trans(\"ErrorBadEMail\",$email));\n\t\t}\n\n\t\tif (($cid || $socid) && ! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\t{\n\t\t\t$type='AC_EMAIL'; $link='';\n\t\t\tif (! empty($conf->global->AGENDA_ADDACTIONFOREMAIL)) $link='<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.'&amp;contactid='.$cid.'&amp;socid='.$socid.'\">'.img_object($langs->trans(\"AddAction\"),\"calendar\").'</a>';\n\t\t\tif ($link) $newemail='<div>'.$newemail.' '.$link.'</div>';\n\t\t}\n\t}\n\telse\n\t{\n\t\tif ($showinvalid && ! isValidEmail($email))\n\t\t{\n\t\t\t$langs->load(\"errors\");\n\t\t\t$newemail.=img_warning($langs->trans(\"ErrorBadEMail\",$email));\n\t\t}\n\t}\n\treturn '<div class=\"nospan float\" style=\"margin-right: 10px\">'.($withpicto?img_picto($langs->trans(\"EMail\"), 'object_email.png').' ':'').$newemail.'</div>';\n}\n\n/**\n * Show Skype link\n *\n * @param\tstring\t\t$skype\t\t\tSkype to show (only skype, without 'Name of recipient' before)\n * @param\tint \t\t$cid \t\t\tId of contact if known\n * @param\tint \t\t$socid \t\t\tId of third party if known\n * @param\tint \t\t$addlink\t\t0=no link to create action\n * @param\tint\t\t\t$max\t\t\tMax number of characters to show\n * @return\tstring\t\t\t\t\t\tHTML Link\n */\nfunction dol_print_skype($skype,$cid=0,$socid=0,$addlink=0,$max=64)\n{\n\tglobal $conf,$user,$langs;\n\n\t$newskype=$skype;\n\n\tif (empty($skype)) return '&nbsp;';\n\n\tif (! empty($addlink))\n\t{\n\t\t$newskype =img_picto($langs->trans(\"Skype\"), 'object_skype.png');\n\t\t$newskype.= '&nbsp;';\n\t\t$newskype.=dol_trunc($skype,$max);\n\t\t$newskype.= '&nbsp;';\n\t\t$newskype.='<a href=\"skype:';\n\t\t$newskype.=dol_trunc($skype,$max);\n\t\t$newskype.='?call\" alt=\"'.$langs->trans(\"Call\").'&nbsp;'.$skype.'\" title=\"'.$langs->trans(\"Call\").'&nbsp;'.$skype.'\">';\n\t\t$newskype.='<img src=\"'.DOL_URL_ROOT.'/theme/common/skype_callbutton.png\" border=\"0\">';\n\t\t$newskype.='</a>&nbsp;&nbsp;&nbsp;<a href=\"skype:';\n\t\t$newskype.=dol_trunc($skype,$max);\n\t\t$newskype.='?chat\" alt=\"'.$langs->trans(\"Chat\").'&nbsp;'.$skype.'\" title=\"'.$langs->trans(\"Chat\").'&nbsp;'.$skype.'\">';\n\t\t$newskype.='<img src=\"'.DOL_URL_ROOT.'/theme/common/skype_chatbutton.png\" border=\"0\">';\n\t\t$newskype.='</a>';\n\n\t\tif (($cid || $socid) && ! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\t{\n\t\t\t$type='AC_SKYPE'; $link='';\n\t\t\tif (! empty($conf->global->AGENDA_ADDACTIONFORSKYPE)) $link='<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.'&amp;contactid='.$cid.'&amp;socid='.$socid.'\">'.img_object($langs->trans(\"AddAction\"),\"calendar\").'</a>';\n\t\t\t$newskype='<div class=\"divskype nowrap\">'.$newskype.($link?' '.$link:'').'</div>';\n\t\t}\n\t}\n\telse\n\t{\n\t\t$langs->load(\"errors\");\n\t\t$newskype.=img_warning($langs->trans(\"ErrorBadSkype\",$skype));\n\t}\n\treturn $newskype;\n}\n\n/**\n * \tFormat phone numbers according to country\n *\n * \t@param  string  $phone          Phone number to format\n * \t@param  string  $countrycode    Country code to use for formatting\n * \t@param \tint\t\t$cid \t\t    Id of contact if known\n * \t@param \tint\t\t$socid          Id of third party if known\n * \t@param \tstring\t$addlink\t    ''=no link to create action, 'AC_TEL'=add link to clicktodial (if module enabled) and add link to create event (if conf->global->AGENDA_ADDACTIONFORPHONE set)\n * \t@param \tstring\t$separ \t\t    Separation between numbers for a better visibility example : xx.xx.xx.xx.xx\n *  @param\tstring  $withpicto      Show picto\n *  @param\tstring\t$titlealt\t    Text to show on alt\n *  @param  int     $adddivfloat    Add div float around phone.\n * \t@return string \t\t\t\t    Formated phone number\n */\nfunction dol_print_phone($phone,$countrycode='',$cid=0,$socid=0,$addlink='',$separ=\"&nbsp;\",$withpicto='',$titlealt='',$adddivfloat=0)\n{\n\tglobal $conf,$user,$langs,$mysoc;\n\n\t// Clean phone parameter\n\t$phone = preg_replace(\"/[\\s.-]/\",\"\",trim($phone));\n\tif (empty($phone)) { return ''; }\n\tif (empty($countrycode)) $countrycode=$mysoc->country_code;\n\n\t// Short format for small screens\n\tif ($conf->dol_optimize_smallscreen) $separ='';\n\n\t$newphone=$phone;\n\tif (strtoupper($countrycode) == \"FR\")\n\t{\n\t\t// France\n\t\tif (dol_strlen($phone) == 10) {\n\t\t\t$newphone=substr($newphone,0,2).$separ.substr($newphone,2,2).$separ.substr($newphone,4,2).$separ.substr($newphone,6,2).$separ.substr($newphone,8,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 7)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,3).$separ.substr($newphone,3,2).$separ.substr($newphone,5,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 9)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,2).$separ.substr($newphone,2,3).$separ.substr($newphone,5,2).$separ.substr($newphone,7,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 11)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,3).$separ.substr($newphone,3,2).$separ.substr($newphone,5,2).$separ.substr($newphone,7,2).$separ.substr($newphone,9,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 12)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,4).$separ.substr($newphone,4,2).$separ.substr($newphone,6,2).$separ.substr($newphone,8,2).$separ.substr($newphone,10,2);\n\t\t}\n\t}\n\n\tif (strtoupper($countrycode) == \"CA\")\n\t{\n\t    if (dol_strlen($phone) == 10) {\n\t        $newphone=($separ!=''?'(':'').substr($newphone,0,3).($separ!=''?')':'').$separ.substr($newphone,3,3).($separ!=''?'-':'').substr($newphone,6,4);\n\t    }\n\t}\n\n\tif (! empty($addlink))\t// Link on phone number (+ link to add action if conf->global->AGENDA_ADDACTIONFORPHONE set)\n\t{\n\t\tif (! empty($conf->browser->phone) || (! empty($conf->clicktodial->enabled) && ! empty($conf->global->CLICKTODIAL_USE_TEL_LINK_ON_PHONE_NUMBERS)))\t// If phone or option for, we use link of phone\n\t\t{\n\t\t\t$newphone ='<a href=\"tel:'.$phone.'\"';\n\t\t\t$newphone.='>'.$phone.'</a>';\n\t\t}\n\t\telse if (! empty($conf->clicktodial->enabled) && $addlink == 'AC_TEL')\t\t// If click to dial, we use click to dial url\n\t\t{\n\t\t\tif (empty($user->clicktodial_loaded)) $user->fetch_clicktodial();\n\n\t\t\t// Define urlmask\n\t\t\t$urlmask='ErrorClickToDialModuleNotConfigured';\n\t\t\tif (! empty($conf->global->CLICKTODIAL_URL)) $urlmask=$conf->global->CLICKTODIAL_URL;\n\t\t\tif (! empty($user->clicktodial_url)) $urlmask=$user->clicktodial_url;\n\n\t\t\t$clicktodial_poste=(! empty($user->clicktodial_poste)?urlencode($user->clicktodial_poste):'');\n\t\t\t$clicktodial_login=(! empty($user->clicktodial_login)?urlencode($user->clicktodial_login):'');\n\t\t\t$clicktodial_password=(! empty($user->clicktodial_password)?urlencode($user->clicktodial_password):'');\n\t\t\t// This line is for backward compatibility\n\t\t\t$url = sprintf($urlmask, urlencode($phone), $clicktodial_poste, $clicktodial_login, $clicktodial_password);\n\t\t\t// Thoose lines are for substitution\n\t\t\t$substitarray=array('__PHONEFROM__'=>$clicktodial_poste,\n\t\t\t\t\t\t\t\t'__PHONETO__'=>urlencode($phone),\n\t\t\t\t\t\t\t\t'__LOGIN__'=>$clicktodial_login,\n\t\t\t\t\t\t\t\t'__PASS__'=>$clicktodial_password);\n\t\t\t$url = make_substitutions($url, $substitarray);\n\t\t\t$newphonesav=$newphone;\n\t\t\t$newphone ='<a href=\"'.$url.'\"';\n\t\t\tif (! empty($conf->global->CLICKTODIAL_FORCENEWTARGET)) $newphone.=' target=\"_blank\"';\n\t\t\t$newphone.='>'.$newphonesav.'</a>';\n\t\t}\n\n\t\t//if (($cid || $socid) && ! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\tif (! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\t{\n\t\t\t$type='AC_TEL'; $link='';\n\t\t\tif ($addlink == 'AC_FAX') $type='AC_FAX';\n\t\t\tif (! empty($conf->global->AGENDA_ADDACTIONFORPHONE)) $link='<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.($cid?'&amp;contactid='.$cid:'').($socid?'&amp;socid='.$socid:'').'\">'.img_object($langs->trans(\"AddAction\"),\"calendar\").'</a>';\n\t\t\tif ($link) $newphone='<div>'.$newphone.' '.$link.'</div>';\n\t\t}\n\t}\n\n\tif (empty($titlealt))\n\t{\n\t\t$titlealt=($withpicto=='fax'?$langs->trans(\"Fax\"):$langs->trans(\"Phone\"));\n\t}\n\t$rep='';\n\tif ($adddivfloat) $rep.='<div class=\"nospan float\" style=\"margin-right: 10px\">';\n\telse $rep.='<span style=\"margin-right: 10px;\">';\n\t$rep.=($withpicto?img_picto($titlealt, 'object_'.($withpicto=='fax'?'phoning_fax':'phoning').'.png').' ':'').$newphone;\n\tif ($adddivfloat) $rep.='</div>';\n\telse $rep.='</span>';\n\treturn $rep;\n}\n\n/**\n * \tReturn an IP formated to be shown on screen\n *\n * \t@param\tstring\t$ip\t\t\tIP\n * \t@param\tint\t\t$mode\t\t0=return IP + country/flag, 1=return only country/flag, 2=return only IP\n * \t@return string \t\t\t\tFormated IP, with country if GeoIP module is enabled\n */\nfunction dol_print_ip($ip,$mode=0)\n{\n\tglobal $conf,$langs;\n\n\t$ret='';\n\n\tif (empty($mode)) $ret.=$ip;\n\n\tif (! empty($conf->geoipmaxmind->enabled) && $mode != 2)\n\t{\n\t\t$datafile=$conf->global->GEOIPMAXMIND_COUNTRY_DATAFILE;\n\t\t//$ip='24.24.24.24';\n\t\t//$datafile='E:\\Mes Sites\\Web\\Admin1\\awstats\\maxmind\\GeoIP.dat';    Note that this must be downloaded datafile (not same than datafile provided with ubuntu packages)\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/dolgeoip.class.php';\n\t\t$geoip=new DolGeoIP('country',$datafile);\n\t\t//print 'ip='.$ip.' databaseType='.$geoip->gi->databaseType.\" GEOIP_CITY_EDITION_REV1=\".GEOIP_CITY_EDITION_REV1.\"\\n\";\n\t\t//print \"geoip_country_id_by_addr=\".geoip_country_id_by_addr($geoip->gi,$ip).\"\\n\";\n\t\t$countrycode=$geoip->getCountryCodeFromIP($ip);\n\t\tif ($countrycode)\t// If success, countrycode is us, fr, ...\n\t\t{\n\t\t\tif (file_exists(DOL_DOCUMENT_ROOT.'/theme/common/flags/'.$countrycode.'.png'))\n\t\t\t{\n\t\t\t\t$ret.=' '.img_picto($countrycode.' '.$langs->trans(\"AccordingToGeoIPDatabase\"),DOL_URL_ROOT.'/theme/common/flags/'.$countrycode.'.png','',1);\n\t\t\t}\n\t\t\telse $ret.=' ('.$countrycode.')';\n\t\t}\n\t}\n\n\treturn $ret;\n}\n\n/**\n *  Return country code for current user.\n *  If software is used inside a local network, detection may fails (we need a public ip)\n *\n *  @return     string      Country code (fr, es, it, us, ...)\n */\nfunction dol_user_country()\n{\n\tglobal $conf,$langs,$user;\n\n\t//$ret=$user->xxx;\n\t$ret='';\n\tif (! empty($conf->geoipmaxmind->enabled))\n\t{\n\t\t$ip=$_SERVER[\"REMOTE_ADDR\"];\n\t\t$datafile=$conf->global->GEOIPMAXMIND_COUNTRY_DATAFILE;\n\t\t//$ip='24.24.24.24';\n\t\t//$datafile='E:\\Mes Sites\\Web\\Admin1\\awstats\\maxmind\\GeoIP.dat';\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/dolgeoip.class.php';\n\t\t$geoip=new DolGeoIP('country',$datafile);\n\t\t$countrycode=$geoip->getCountryCodeFromIP($ip);\n\t\t$ret=$countrycode;\n\t}\n\treturn $ret;\n}\n\n/**\n *  Format address string\n *\n *  @param\tstring\t$address    Address\n *  @param  int\t\t$htmlid     Html ID (for example 'gmap')\n *  @param  int\t\t$mode       thirdparty|contact|member|other\n *  @param  int\t\t$id         Id of object\n *  @param\tint\t\t$noprint\tNo output. Result is the function return\n *  @param  string  $charfornl  Char to use instead of nl2br. '' means we use a standad nl2br.\n *  @return string|void\t\t\tNothing if noprint is 0, formatted address if noprint is 1\n *  @see dol_format_address\n */\nfunction dol_print_address($address, $htmlid, $mode, $id, $noprint=0, $charfornl='')\n{\n\tglobal $conf, $user, $langs, $hookmanager;\n\n\t$out = '';\n\n\tif ($address)\n\t{\n        if ($hookmanager) {\n            $parameters = array('element' => $mode, 'id' => $id);\n            $reshook = $hookmanager->executeHooks('printAddress', $parameters, $address);\n            $out.=$hookmanager->resPrint;\n        }\n        if (empty($reshook))\n        {\n            if (empty($charfornl)) $out.=nl2br($address);\n            else $out.=preg_replace('/[\\r\\n]+/', $charfornl, $address);\n\n            $showgmap=$showomap=0;\n\n            // TODO Add a hook here\n            if (($mode=='thirdparty' || $mode =='societe') && ! empty($conf->google->enabled) && ! empty($conf->global->GOOGLE_ENABLE_GMAPS)) $showgmap=1;\n            if ($mode=='contact' && ! empty($conf->google->enabled) && ! empty($conf->global->GOOGLE_ENABLE_GMAPS_CONTACTS)) $showgmap=1;\n            if ($mode=='member' && ! empty($conf->google->enabled) && ! empty($conf->global->GOOGLE_ENABLE_GMAPS_MEMBERS)) $showgmap=1;\n            if (($mode=='thirdparty' || $mode =='societe') && ! empty($conf->openstreetmap->enabled) && ! empty($conf->global->OPENSTREETMAP_ENABLE_MAPS)) $showomap=1;\n            if ($mode=='contact' && ! empty($conf->openstreetmap->enabled) && ! empty($conf->global->OPENSTREETMAP_ENABLE_MAPS_CONTACTS)) $showomap=1;\n            if ($mode=='member' && ! empty($conf->openstreetmap->enabled) && ! empty($conf->global->OPENSTREETMAP_ENABLE_MAPS_MEMBERS)) $showomap=1;\n\n            if ($showgmap)\n            {\n                $url=dol_buildpath('/google/gmaps.php?mode='.$mode.'&id='.$id,1);\n                $out.=' <a href=\"'.$url.'\" target=\"_gmaps\"><img id=\"'.$htmlid.'\" class=\"valigntextbottom\" src=\"'.DOL_URL_ROOT.'/theme/common/gmap.png\"></a>';\n            }\n            if ($showomap)\n            {\n                $url=dol_buildpath('/openstreetmap/maps.php?mode='.$mode.'&id='.$id,1);\n                $out.=' <a href=\"'.$url.'\" target=\"_gmaps\"><img id=\"'.$htmlid.'_openstreetmap\" class=\"valigntextbottom\" src=\"'.DOL_URL_ROOT.'/theme/common/gmap.png\"></a>';\n            }\n        }\n\t}\n\tif ($noprint) return $out;\n\telse print $out;\n}\n\n\n/**\n *\tReturn true if email syntax is ok\n *\n *\t@param\t    string\t\t$address    \t\t\temail (Ex: \"toto@examle.com\", \"John Do <johndo@example.com>\")\n *  @param\t\tint\t\t\t$acceptsupervisorkey\tIf 1, the special string '__SUPERVISOREMAIL__' is also accepted as valid\n *\t@return     boolean     \t\t\t\t\t\ttrue if email syntax is OK, false if KO or empty string\n */\nfunction isValidEmail($address, $acceptsupervisorkey=0)\n{\n\tif ($acceptsupervisorkey && $address == '__SUPERVISOREMAIL__') return true;\n\tif (filter_var($address, FILTER_VALIDATE_EMAIL)) return true;\n\n\treturn false;\n}\n\n/**\n *  Return true if phone number syntax is ok\n *  TODO Decide what to do with this\n *\n *  @param\tstring\t\t$phone\t\tphone (Ex: \"0601010101\")\n *  @return boolean     \t\t\ttrue if phone syntax is OK, false if KO or empty string\n */\nfunction isValidPhone($phone)\n{\n\treturn true;\n}\n\n\n/**\n * Make a strlen call. Works even if mbstring module not enabled\n *\n * @param   string\t\t$string\t\t\t\tString to calculate length\n * @param   string\t\t$stringencoding\t\tEncoding of string\n * @return  int\t\t\t\t\t\t\t\tLength of string\n */\nfunction dol_strlen($string,$stringencoding='UTF-8')\n{\n\tif (function_exists('mb_strlen')) return mb_strlen($string,$stringencoding);\n\telse return strlen($string);\n}\n\n/**\n * Make a substring. Works even in mbstring module is not enabled.\n *\n * @param\tstring\t$string\t\t\t\tString to scan\n * @param\tstring\t$start\t\t\t\tStart position\n * @param\tint\t\t$length\t\t\t\tLength\n * @param   string\t$stringencoding\t\tPage code used for input string encoding\n * @return  string\t\t\t\t\t\tsubstring\n */\nfunction dol_substr($string,$start,$length,$stringencoding='')\n{\n\tglobal $langs;\n\n\tif (empty($stringencoding)) $stringencoding=$langs->charset_output;\n\n\t$ret='';\n\tif (function_exists('mb_substr'))\n\t{\n\t\t$ret=mb_substr($string,$start,$length,$stringencoding);\n\t}\n\telse\n\t{\n\t\t$ret=substr($string,$start,$length);\n\t}\n\treturn $ret;\n}\n\n\n/**\n *  Show a javascript graph.\n *  Do not use this function anymore. Use DolGraph class instead.\n *\n *  @param\t\tstring\t$htmlid\t\t\tHtml id name\n *  @param\t\tint\t\t$width\t\t\tWidth in pixel\n *  @param\t\tint\t\t$height\t\t\tHeight in pixel\n *  @param\t\tarray\t$data\t\t\tData array\n *  @param\t\tint\t\t$showlegend\t\t1 to show legend, 0 otherwise\n *  @param\t\tstring\t$type\t\t\tType of graph ('pie', 'barline')\n *  @param\t\tint\t\t$showpercent\tShow percent (with type='pie' only)\n *  @param\t\tstring\t$url\t\t\tParam to add an url to click values\n *  @param\t\tint\t\t$combineother\t0=No combine, 0.05=Combine if lower than 5%\n *  @param      int     $shownographyet Show graph to say there is not enough data\n *  @return\t\tvoid\n *  @deprecated\n *  @see DolGraph\n */\nfunction dol_print_graph($htmlid,$width,$height,$data,$showlegend=0,$type='pie',$showpercent=0,$url='',$combineother=0.05,$shownographyet=0)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tglobal $conf,$langs;\n\tglobal $theme_datacolor;    // To have var kept when function is called several times\n\n\tif ($shownographyet)\n\t{\n\t    print '<div class=\"nographyet\" style=\"width:'.$width.'px;height:'.$height.'px;\"></div>';\n\t    print '<div class=\"nographyettext\">'.$langs->trans(\"NotEnoughDataYet\").'</div>';\n\t    return;\n\t}\n\n\tif (empty($conf->use_javascript_ajax)) return;\n\t$jsgraphlib='flot';\n\t$datacolor=array();\n\n\t// Load colors of theme into $datacolor array\n\t$color_file = DOL_DOCUMENT_ROOT.\"/theme/\".$conf->theme.\"/graph-color.php\";\n\tif (is_readable($color_file))\n\t{\n\t\tinclude_once $color_file;\n\t\tif (isset($theme_datacolor))\n\t\t{\n\t\t\t$datacolor=array();\n\t\t\tforeach($theme_datacolor as $val)\n\t\t\t{\n\t\t\t\t$datacolor[]=\"#\".sprintf(\"%02x\",$val[0]).sprintf(\"%02x\",$val[1]).sprintf(\"%02x\",$val[2]);\n\t\t\t}\n\t\t}\n\t}\n\tprint '<div id=\"'.$htmlid.'\" style=\"width:'.$width.'px;height:'.$height.'px;\"></div>';\n\n\t// We use Flot js lib\n\tif ($jsgraphlib == 'flot')\n\t{\n\t\tif ($type == 'pie')\n\t\t{\n\t\t\t// data is   array('series'=>array(serie1,serie2,...),\n\t\t\t//                 'seriestype'=>array('bar','line',...),\n\t\t\t//                 'seriescolor'=>array(0=>'#999999',1=>'#999999',...)\n\t\t\t//                 'xlabel'=>array(0=>labelx1,1=>labelx2,...));\n\t\t\t// serieX is array('label'=>'label', data=>val)\n\t\t\tprint '\n\t\t\t<script type=\"text/javascript\">\n\t\t\t$(function () {\n\t\t\t\tvar data = '.json_encode($data['series']).';\n\n\t\t\t\tfunction plotWithOptions() {\n\t\t\t\t\t$.plot($(\"#'.$htmlid.'\"), data,\n\t\t\t\t\t{\n\t\t\t\t\t\tseries: {\n\t\t\t\t\t\t\tpie: {\n\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\tradius: 0.8,';\n\t\t\tif ($combineother)\n\t\t\t{\n\t\t\t\tprint '\n\t\t\t\t\t\t\t\tcombine: {\n\t\t\t\t\t\t\t\t \tthreshold: '.$combineother.'\n\t\t\t\t\t\t\t\t},';\n\t\t\t}\n\t\t\tprint '\n\t\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\t\tradius: 0.9,\n\t\t\t\t\t\t\t\t\tformatter: function(label, series) {\n\t\t\t\t\t\t\t\t\t\tvar percent=Math.round(series.percent);\n\t\t\t\t\t\t\t\t\t\tvar number=series.data[0][1];\n\t\t\t\t\t\t\t\t\t\treturn \\'';\n\t\t\t\t\t\t\t\t\t\tprint '<div style=\"font-size:8pt;text-align:center;padding:2px;color:black;\">';\n\t\t\t\t\t\t\t\t\t\tif ($url) print '<a style=\"color: #FFFFFF;\" border=\"0\" href=\"'.$url.'=\">';\n\t\t\t\t\t\t\t\t\t\tprint '\\'+'.($showlegend?'number':'label+\\' \\'+number');\n\t\t\t\t\t\t\t\t\t\tif (! empty($showpercent)) print '+\\'<br/>\\'+percent+\\'%\\'';\n\t\t\t\t\t\t\t\t\t\tprint '+\\'';\n\t\t\t\t\t\t\t\t\t\tif ($url) print '</a>';\n\t\t\t\t\t\t\t\t\t\tprint '</div>\\';\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tbackground: {\n\t\t\t\t\t\t\t\t\t\topacity: 0.0,\n\t\t\t\t\t\t\t\t\t\tcolor: \\'#000000\\'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tzoom: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpan: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},';\n\t\t\t\t\t\tif (count($datacolor))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprint 'colors: '.(! empty($data['seriescolor']) ? json_encode($data['seriescolor']) : json_encode($datacolor)).',';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint 'legend: {show: '.($showlegend?'true':'false').', position: \\'ne\\' }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tplotWithOptions();\n\t\t\t});\n\t\t\t</script>';\n\t\t}\n\t\telse if ($type == 'barline')\n\t\t{\n\t\t\t// data is   array('series'=>array(serie1,serie2,...),\n\t\t\t//                 'seriestype'=>array('bar','line',...),\n\t\t\t//                 'seriescolor'=>array(0=>'#999999',1=>'#999999',...)\n\t\t\t//                 'xlabel'=>array(0=>labelx1,1=>labelx2,...));\n\t\t\t// serieX is array('label'=>'label', data=>array(0=>y1,1=>y2,...)) with same nb of value than into xlabel\n\t\t\tprint '\n\t\t\t<script type=\"text/javascript\">\n\t\t\t$(function () {\n\t\t\t\tvar data = [';\n\t\t\t\t$i=0; $outputserie=0;\n\t\t\t\tforeach($data['series'] as $serie)\n\t\t\t\t{\n\t\t\t\t\tif ($data['seriestype'][$i]=='line') { $i++; continue; };\n\t\t\t\t\tif ($outputserie > 0) print ',';\n\t\t\t\t\tprint '{ bars: { stack: 0, show: true, barWidth: 0.9, align: \\'center\\' }, label: \\''.dol_escape_js($serie['label']).'\\', data: '.json_encode($serie['data']).'}'.\"\\n\";\n\t\t\t\t\t$outputserie++; $i++;\n\t\t\t\t}\n\t\t\t\tif ($outputserie) print ', ';\n\t\t\t\t//print '];\n\t\t\t\t//var datalines = [';\n\t\t\t\t$i=0; $outputserie=0;\n\t\t\t\tforeach($data['series'] as $serie)\n\t\t\t\t{\n\t\t\t\t\tif (empty($data['seriestype'][$i]) || $data['seriestype'][$i]=='bar') { $i++; continue; };\n\t\t\t\t\tif ($outputserie > 0) print ',';\n\t\t\t\t\tprint '{ lines: { show: true }, label: \\''.dol_escape_js($serie['label']).'\\', data: '.json_encode($serie['data']).'}'.\"\\n\";\n\t\t\t\t\t$outputserie++; $i++;\n\t\t\t\t}\n\t\t\t\tprint '];\n\t\t\t\tvar dataticks = '.json_encode($data['xlabel']).'\n\n\t\t\t\tfunction plotWithOptions() {\n\t\t\t\t\t$.plot(jQuery(\"#'.$htmlid.'\"), data,\n\t\t\t\t\t{\n\t\t\t\t\t\tseries: {\n\t\t\t\t\t\t\tstack: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\tzoom: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpan: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},';\n\t\t\t\t\t\tif (count($datacolor))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprint 'colors: '.json_encode($datacolor).',';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint 'legend: {show: '.($showlegend?'true':'false').'},\n\t\t\t\t\t\txaxis: {ticks: dataticks}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tplotWithOptions();\n\t\t\t});\n\t\t\t</script>';\n\t\t}\n\t\telse print 'BadValueForParameterType';\n\t}\n}\n\n/**\n *\tTruncate a string to a particular length adding '...' if string larger than length.\n * \tIf length = max length+1, we do no truncate to avoid having just 1 char replaced with '...'.\n *  MAIN_DISABLE_TRUNC=1 can disable all truncings\n *\n *\t@param\tstring\t$string\t\t\t\tString to truncate\n *\t@param  int\t\t$size\t\t\t\tMax string size visible (excluding ...). 0 for no limit. WARNING: Final string size can have 3 more chars (if we added ..., or if size was max+1 or max+2 or max+3 so it does not worse to replace with ...)\n *\t@param\tstring\t$trunc\t\t\t\tWhere to trunc: right, left, middle (size must be a 2 power), wrap\n * \t@param\tstring\t$stringencoding\t\tTell what is source string encoding\n *  @param\tint\t\t$nodot\t\t\t\tTruncation do not add ... after truncation. So it's an exact truncation.\n *  @param  int     $display            Trunc is use to display and can be changed for small screen. TODO Remove this param (must be dealt with CSS)\n *\t@return string\t\t\t\t\t\tTruncated string. WARNING: length is never higher than $size if $nodot is set, but can be 3 chars higher otherwise.\n */\nfunction dol_trunc($string,$size=40,$trunc='right',$stringencoding='UTF-8',$nodot=0, $display=0)\n{\n\tglobal $conf;\n\n\tif ($size==0 || ! empty($conf->global->MAIN_DISABLE_TRUNC)) return $string;\n\n\tif (empty($stringencoding)) $stringencoding='UTF-8';\n\t// reduce for small screen\n\tif ($conf->dol_optimize_smallscreen==1 && $display==1) $size = round($size/3);\n\n\t// We go always here\n\tif ($trunc == 'right')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > ($size+($nodot?0:3)))    // If nodot is 0 and size is 1,2 or 3 chars more, we don't trunc and don't add ...\n\t\treturn dol_substr($newstring,0,$size,$stringencoding).($nodot?'':'...');\n\t\telse\n\t\t//return 'u'.$size.'-'.$newstring.'-'.dol_strlen($newstring,$stringencoding).'-'.$string;\n\t\treturn $string;\n\t}\n\telseif ($trunc == 'middle')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > 2 && dol_strlen($newstring,$stringencoding) > ($size+1))\n\t\t{\n\t\t\t$size1=round($size/2);\n\t\t\t$size2=round($size/2);\n\t\t\treturn dol_substr($newstring,0,$size1,$stringencoding).'...'.dol_substr($newstring,dol_strlen($newstring,$stringencoding) - $size2,$size2,$stringencoding);\n\t\t}\n\t\telse\n\t\treturn $string;\n\t}\n\telseif ($trunc == 'left')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > ($size+($nodot?0:3)))    // If nodot is 0 and size is 1,2 or 3 chars more, we don't trunc and don't add ...\n\t\treturn '...'.dol_substr($newstring,dol_strlen($newstring,$stringencoding) - $size,$size,$stringencoding);\n\t\telse\n\t\treturn $string;\n\t}\n\telseif ($trunc == 'wrap')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > ($size+1))\n\t\treturn dol_substr($newstring,0,$size,$stringencoding).\"\\n\".dol_trunc(dol_substr($newstring,$size,dol_strlen($newstring,$stringencoding)-$size,$stringencoding),$size,$trunc);\n\t\telse\n\t\treturn $string;\n\t}\n\telse return 'BadParam3CallingDolTrunc';\n}\n\n/**\n *\tShow picto whatever it's its name (generic function)\n *\n *\t@param      string\t\t$titlealt         \tText on title and alt. If text is \"TextA:TextB\", use Text A on alt and Text B on title. Alt only if param notitle is set to 1.\n *\t@param      string\t\t$picto       \t\tName of image file to show ('filenew', ...)\n *\t\t\t\t\t\t\t\t\t\t\t\tIf no extension provided, we use '.png'. Image must be stored into theme/xxx/img directory.\n *                                  \t\t\tExample: picto.png                  if picto.png is stored into htdocs/theme/mytheme/img\n *                                  \t\t\tExample: picto.png@mymodule         if picto.png is stored into htdocs/mymodule/img\n *                                  \t\t\tExample: /mydir/mysubdir/picto.png  if picto.png is stored into htdocs/mydir/mysubdir (pictoisfullpath must be set to 1)\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@param\t\tint\t\t\t$srconly\t\t\tReturn only content of the src attribute of img.\n *  @param\t\tint\t\t\t$notitle\t\t\t1=Disable tag title. Use it if you add js tooltip, to avoid duplicate tooltip.\n *  @return     string       \t\t\t\t    Return img tag\n *  @see        #img_object, #img_picto_common\n */\nfunction img_picto($titlealt, $picto, $moreatt = '', $pictoisfullpath = false, $srconly=0, $notitle=0)\n{\n\tglobal $conf;\n\n\t// Define fullpathpicto to use into src\n\tif ($pictoisfullpath)\n\t{\n\t\t// Clean parameters\n\t\tif (! preg_match('/(\\.png|\\.gif|\\.svg)$/i',$picto)) $picto .= '.png';\n\t\t$fullpathpicto = $picto;\n\t}\n\telse\n\t{\n\t\t// We forge fullpathpicto for image to $path/img/$picto. By default, we take DOL_URL_ROOT/theme/$conf->theme/img/$picto\n\t\t$url = DOL_URL_ROOT;\n\t\t$theme = $conf->theme;\n\n\t\t$path = 'theme/'.$theme;\n\t\tif (! empty($conf->global->MAIN_OVERWRITE_THEME_PATH)) $path = $conf->global->MAIN_OVERWRITE_THEME_PATH.'/theme/'.$theme;\t// If the theme does not have the same name as the module\n\t\telse if (! empty($conf->global->MAIN_OVERWRITE_THEME_RES)) $path = $conf->global->MAIN_OVERWRITE_THEME_RES.'/theme/'.$conf->global->MAIN_OVERWRITE_THEME_RES;  // To allow an external module to overwrite image resources whatever is activated theme\n\t\telse if (! empty($conf->modules_parts['theme']) && array_key_exists($theme, $conf->modules_parts['theme'])) $path = $theme.'/theme/'.$theme;\t// If the theme have the same name as the module\n\n\t\t// If we ask an image into $url/$mymodule/img (instead of default path)\n\t\tif (preg_match('/^([^@]+)@([^@]+)$/i',$picto,$regs))\n\t\t{\n\t\t\t$picto = $regs[1];\n\t\t\t$path = $regs[2];\t// $path is $mymodule\n\t\t}\n\n\t\t// Clean parameters\n\t\tif (! preg_match('/(\\.png|\\.gif|\\.svg)$/i',$picto)) $picto .= '.png';\n\t\t// If alt path are defined, define url where img file is, according to physical path\n\t\tforeach ($conf->file->dol_document_root as $type => $dirroot)\t// ex: array([\"main\"]=>\"/home/maindir/htdocs\", [\"alt0\"]=>\"/home/moddir0/htdocs\", ...)\n\t\t{\n\t\t\tif ($type == 'main') continue;\n\t\t\tif (file_exists($dirroot.'/'.$path.'/img/'.$picto))\t// This need a lot of time, that's why enabling alternative dir like \"custom\" dir is not recommanded\n\t\t\t{\n\t\t\t\t$url=DOL_URL_ROOT.$conf->file->dol_url_root[$type];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// $url is '' or '/custom', $path is current theme or\n\t\t$fullpathpicto = $url.'/'.$path.'/img/'.$picto;\n\t}\n\n\tif ($srconly) return $fullpathpicto;\n\telse\n\t{\n\t\t$tmparray=array(0=>$titlealt);\n\t\tif (preg_match('/:[^\\s0-9]/',$titlealt)) $tmparray=explode(':',$titlealt);\t\t// We explode if we have TextA:TextB. Not if we have TextA: TextB\n\t\t$title=$tmparray[0];\n\t\t$alt=empty($tmparray[1])?'':$tmparray[1];\n\t\treturn '<img src=\"'.$fullpathpicto.'\" alt=\"'.dol_escape_htmltag($alt).'\"'.($notitle?'':' title=\"'.dol_escape_htmltag($title).'\"').($moreatt?' '.$moreatt:' class=\"inline-block valigntextbottom\"').'>';\t// Alt is used for accessibility, title for popup\n\t}\n}\n\n/**\n *\tShow a picto called object_picto (generic function)\n *\n *\t@param\tstring\t$titlealt\t\t\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$picto\t\t\t\tName of image to show object_picto (example: user, group, action, bill, contract, propal, product, ...)\n *\t\t\t\t\t\t\t\t\t\tFor external modules use imagename@mymodule to search into directory \"img\" of module.\n *\t@param\tstring\t$moreatt\t\t\tAdd more attribute on img tag (ie: class=\"datecallink\")\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@param\tint\t\t$srconly\t\t\tReturn only content of the src attribute of img.\n *  @param\tint\t\t$notitle\t\t\t1=Disable tag title. Use it if you add js tooltip, to avoid duplicate tooltip.\n *\t@return\tstring\t\t\t\t\t\tReturn img tag\n *\t@see\t#img_picto, #img_picto_common\n */\nfunction img_object($titlealt, $picto, $moreatt = '', $pictoisfullpath = false, $srconly=0, $notitle=0)\n{\n\treturn img_picto($titlealt, 'object_'.$picto, $moreatt, $pictoisfullpath, $srconly, $notitle);\n}\n\n/**\n *\tShow weather picto\n *\n *\t@param      string\t\t$titlealt         \tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param      string\t\t$picto       \t\tName of image file to show (If no extension provided, we use '.png'). Image must be stored into htdocs/theme/common directory.\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@return     string      \t\t\t\t\tReturn img tag\n *  @see        #img_object, #img_picto\n */\nfunction img_weather($titlealt, $picto, $moreatt = '', $pictoisfullpath = 0)\n{\n\tglobal $conf;\n\n\tif (! preg_match('/(\\.png|\\.gif)$/i', $picto)) $picto .= '.png';\n\n\t$path = DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/weather/'.$picto;\n\n\treturn img_picto($titlealt, $path, $moreatt, 1);\n}\n\n/**\n *\tShow picto (generic function)\n *\n *\t@param      string\t\t$titlealt         \tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param      string\t\t$picto       \t\tName of image file to show (If no extension provided, we use '.png'). Image must be stored into htdocs/theme/common directory.\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@return     string      \t\t\t\t\tReturn img tag\n *  @see        #img_object, #img_picto\n */\nfunction img_picto_common($titlealt, $picto, $moreatt = '', $pictoisfullpath = 0)\n{\n\tglobal $conf;\n\n\tif (! preg_match('/(\\.png|\\.gif)$/i', $picto)) $picto .= '.png';\n\n\tif ($pictoisfullpath) $path = $picto;\n\telse\n\t{\n\t\t$path = DOL_URL_ROOT.'/theme/common/'.$picto;\n\n\t\tif (! empty($conf->global->MAIN_MODULE_CAN_OVERWRITE_COMMONICONS))\n\t\t{\n\t\t\t$themepath = DOL_DOCUMENT_ROOT.'/theme/'.$conf->theme.'/img/'.$picto;\n\n\t\t\tif (file_exists($themepath)) $path = $themepath;\n\t\t}\n\t}\n\n\treturn img_picto($titlealt, $path, $moreatt, 1);\n}\n\n/**\n *\tShow logo action\n *\n *\t@param\tstring\t\t$titlealt       Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t\t$numaction   \tAction id or code to show\n *\t@return string      \t\t\t\tReturn an img tag\n */\nfunction img_action($titlealt, $numaction)\n{\n\tglobal $conf, $langs;\n\n\tif (empty($titlealt) || $titlealt == 'default')\n\t{\n\t\tif ($numaction == '-1' || $numaction == 'ST_NO')\t\t\t{ $numaction = -1; $titlealt = $langs->transnoentitiesnoconv('ChangeDoNotContact'); }\n\t\telseif ($numaction ==  '0' || $numaction == 'ST_NEVER') \t{ $numaction = 0; $titlealt = $langs->transnoentitiesnoconv('ChangeNeverContacted'); }\n\t\telseif ($numaction ==  '1' || $numaction == 'ST_TODO')  \t{ $numaction = 1; $titlealt = $langs->transnoentitiesnoconv('ChangeToContact'); }\n\t\telseif ($numaction ==  '2' || $numaction == 'ST_PEND')  \t{ $numaction = 2; $titlealt = $langs->transnoentitiesnoconv('ChangeContactInProcess'); }\n\t\telseif ($numaction ==  '3' || $numaction == 'ST_DONE')  \t{ $numaction = 3; $titlealt = $langs->transnoentitiesnoconv('ChangeContactDone'); }\n\t\telse { $titlealt = $langs->transnoentitiesnoconv('ChangeStatus '.$numaction); $numaction = 0; }\n\t}\n\tif (! is_numeric($numaction)) $numaction=0;\n\n\treturn img_picto($titlealt, 'stcomm'.$numaction.'.png');\n}\n\n/**\n *  Show pdf logo\n *\n *  @param\tstring\t\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param  int\t\t    $size       Taille de l'icone : 3 = 16x16px , 2 = 14x14px\n *  @return string      \t\t\tRetourne tag img\n */\nfunction img_pdf($titlealt = 'default', $size = 3)\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Show');\n\n\treturn img_picto($titlealt, 'pdf'.$size.'.png');\n}\n\n/**\n *\tShow logo +\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit_add($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Add');\n\n\treturn img_picto($titlealt, 'edit_add.png', $other);\n}\n/**\n *\tShow logo -\n *\n *\t@param\tstring\t$titlealt\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit_remove($titlealt = 'default', $other='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Remove');\n\n\treturn img_picto($titlealt, 'edit_remove.png', $other);\n}\n\n/**\n *\tShow logo editer/modifier fiche\n *\n *\t@param  string\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  integer\t$float      Si il faut y mettre le style \"float: right\"\n *\t@param  string\t$other\t\tAdd more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit($titlealt = 'default', $float = 0, $other = 'class=\"pictoedit\"')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Modify');\n\n\treturn img_picto($titlealt, 'edit.png', ($float ? 'style=\"float: '.($langs->tab_translate[\"DIRECTION\"] == 'rtl'?'left':'right').'\"' : \"\") . ($other?' '.$other:''));\n}\n\n/**\n *\tShow logo view card\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  integer\t$float      Si il faut y mettre le style \"float: right\"\n *\t@param  string\t$other\t\tAdd more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_view($titlealt = 'default', $float = 0, $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('View');\n\n\t$moreatt = ($float ? 'style=\"float: right\" ' : '').$other;\n\n\treturn img_picto($titlealt, 'view.png', $moreatt);\n}\n\n/**\n *  Show delete logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_delete($titlealt = 'default', $other = 'class=\"pictodelete\"')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Delete');\n\n\treturn img_picto($titlealt, 'delete.png', $other);\n}\n\n/**\n *  Show printer logo\n *\n *  @param  string  $titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param  string  $other      Add more attributes on img\n *  @return string              Retourne tag img\n */\nfunction img_printer($titlealt = \"default\", $other='')\n{\n    global $conf,$langs;\n    if ($titlealt==\"default\") $titlealt=$langs->trans(\"Print\");\n    return img_picto($titlealt,'printer.png',$other);\n}\n\n/**\n *  Show split logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_split($titlealt = 'default', $other = 'class=\"pictosplit\"')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Split');\n\n\treturn img_picto($titlealt, 'split.png', $other);\n}\n\n/**\n *\tShow help logo with cursor \"?\"\n *\n * \t@param\tint              \t$usehelpcursor\t\t1=Use help cursor, 2=Use click pointer cursor, 0=No specific cursor\n * \t@param\tint|string\t        $usealttitle\t\tText to use as alt title\n * \t@return string            \t           \t\t\tReturn tag img\n */\nfunction img_help($usehelpcursor = 1, $usealttitle = 1)\n{\n\tglobal $conf, $langs;\n\n\tif ($usealttitle)\n\t{\n\t\tif (is_string($usealttitle)) $usealttitle = dol_escape_htmltag($usealttitle);\n\t\telse $usealttitle = $langs->trans('Info');\n\t}\n\n\treturn img_picto($usealttitle, 'info.png', 'style=\"vertical-align: middle;'.($usehelpcursor == 1 ? ' cursor: help': ($usehelpcursor == 2 ? ' cursor: pointer':'')).'\"');\n}\n\n/**\n *\tShow info logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_info($titlealt = 'default')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Informations');\n\n\treturn img_picto($titlealt, 'info.png', 'style=\"vertical-align: middle;\"');\n}\n\n/**\n *\tShow warning logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"'). If 1\n *\t@return string      \t\tReturn img tag\n */\nfunction img_warning($titlealt = 'default', $moreatt = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Warning');\n\n\t//return '<div class=\"imglatecoin\">'.img_picto($titlealt, 'warning_white.png', 'class=\"pictowarning valignmiddle\"'.($moreatt ? ($moreatt == '1' ? ' style=\"float: right\"' : ' '.$moreatt): '')).'</div>';\n\treturn img_picto($titlealt, 'warning.png', 'class=\"pictowarning valignmiddle\"'.($moreatt ? ($moreatt == '1' ? ' style=\"float: right\"' : ' '.$moreatt): ''));\n}\n\n/**\n *  Show error logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_error($titlealt = 'default')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Error');\n\n\treturn img_picto($titlealt, 'error.png', 'class=\"valigntextbottom\"');\n}\n\n/**\n *\tShow next logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n*\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n  *\t@return string      \t\tReturn img tag\n */\nfunction img_next($titlealt = 'default', $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Next');\n\n\t//return img_picto($titlealt, 'next.png', $moreatt);\n\treturn '<span class=\"fa fa-chevron-right paddingright paddingleft\" title=\"'.dol_escape_htmltag($titlealt).'\"></span>';\n}\n\n/**\n *\tShow previous logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_previous($titlealt = 'default', $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Previous');\n\n\t//return img_picto($titlealt, 'previous.png', $moreatt);\n\treturn '<span class=\"fa fa-chevron-left paddingright paddingleft\" title=\"'.dol_escape_htmltag($titlealt).'\"></span>';\n}\n\n/**\n *\tShow down arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected   Selected\n *  @param\tstring\t$moreclass\tAdd more CSS classes\n *\t@return string      \t\tReturn img tag\n */\nfunction img_down($titlealt = 'default', $selected = 0, $moreclass='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Down');\n\n\treturn img_picto($titlealt, ($selected ? '1downarrow_selected.png' : '1downarrow.png'), 'class=\"imgdown'.($moreclass?\" \".$moreclass:\"\").'\"');\n}\n\n/**\n *\tShow top arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *  @param\tstring\t$moreclass\tAdd more CSS classes\n *\t@return string      \t\tReturn img tag\n */\nfunction img_up($titlealt = 'default', $selected = 0, $moreclass='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Up');\n\n\treturn img_picto($titlealt, ($selected ? '1uparrow_selected.png' : '1uparrow.png'), 'class=\"imgup'.($moreclass?\" \".$moreclass:\"\").'\"');\n}\n\n/**\n *\tShow left arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_left($titlealt = 'default', $selected = 0, $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Left');\n\n\treturn img_picto($titlealt, ($selected ? '1leftarrow_selected.png' : '1leftarrow.png'), $moreatt);\n}\n\n/**\n *\tShow right arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_right($titlealt = 'default', $selected = 0, $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Right');\n\n\treturn img_picto($titlealt, ($selected ? '1rightarrow_selected.png' : '1rightarrow.png'), $moreatt);\n}\n\n/**\n *\tShow tick logo if allowed\n *\n *\t@param\tstring\t$allow\t\tAllow\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_allow($allow, $titlealt = 'default')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Active');\n\n\tif ($allow == 1) return img_picto($titlealt, 'tick.png');\n\n\treturn '-';\n}\n\n\n/**\n *\tShow MIME img of a file\n *\n *\t@param\tstring\t$file\t\tFilename\n * \t@param\tstring\t$titlealt\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string     \t\t\tReturn img tag\n */\nfunction img_mime($file, $titlealt = '')\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t$mimetype = dol_mimetype($file, '', 1);\n\t$mimeimg = dol_mimetype($file, '', 2);\n\n\tif (empty($titlealt)) $titlealt = 'Mime type: '.$mimetype;\n\n\treturn img_picto_common($titlealt, 'mime/'.$mimeimg);\n}\n\n\n/**\n *\tShow phone logo.\n *  Use img_picto instead.\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$option\t\tOption\n *\t@return string      \t\tReturn img tag\n *  @deprecated\n *  @see img_picto\n */\nfunction img_phone($titlealt = 'default', $option = 0)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tglobal $conf,$langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Call');\n\n\tif ($option == 1) $img = 'call';\n\telse $img = 'call_out';\n\n\treturn img_picto($titlealt, $img);\n}\n\n/**\n *  Show search logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_search($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Search');\n\n\t$img = img_picto($titlealt, 'search.png', $other, false, 1);\n\n\t$input = '<input type=\"image\" class=\"liste_titre\" name=\"button_search\" src=\"'.$img.'\" ';\n\t$input.= 'value=\"'.dol_escape_htmltag($titlealt).'\" title=\"'.dol_escape_htmltag($titlealt).'\" >';\n\n\treturn $input;\n}\n\n/**\n *  Show search logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_searchclear($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Search');\n\n\t$img = img_picto($titlealt, 'searchclear.png', $other, false, 1);\n\n\t$input = '<input type=\"image\" class=\"liste_titre\" name=\"button_removefilter\" src=\"'.$img.'\" ';\n\t$input.= 'value=\"'.dol_escape_htmltag($titlealt).'\" title=\"'.dol_escape_htmltag($titlealt).'\" >';\n\n\treturn $input;\n}\n\n/**\n *\tShow information for admin users or standard users\n *\n *\t@param\tstring\t$text\t\t\tText info\n *\t@param  integer\t$infoonimgalt\tInfo is shown only on alt of star picto, otherwise it is show on output after the star picto\n *\t@param\tint\t\t$nodiv\t\t\tNo div\n *  @param  string  $admin          '1'=Info for admin users. '0'=Info for standard users (change only the look), 'xxx'=Other\n *\t@return\tstring\t\t\t\t\tString with info text\n */\nfunction info_admin($text, $infoonimgalt = 0, $nodiv=0, $admin='1')\n{\n\tglobal $conf, $langs;\n\n\tif ($infoonimgalt)\n\t{\n\t\treturn img_picto($text, 'info', 'class=\"hideonsmartphone\"');\n\t}\n\n\treturn ($nodiv?'':'<div class=\"'.(empty($admin)?'':($admin=='1'?'info':$admin)).' hideonsmartphone\">').'<span class=\"fa fa-info-circle\" title=\"'.dol_escape_htmltag($admin?$langs->trans('InfoAdmin'):$langs->trans('Note')).'\"></span> '.$text.($nodiv?'':'</div>');\n}\n\n\n/**\n *\tAffiche message erreur system avec toutes les informations pour faciliter le diagnostic et la remontee des bugs.\n *\tOn doit appeler cette fonction quand une erreur technique bloquante est rencontree.\n *\tToutefois, il faut essayer de ne l'appeler qu'au sein de pages php, les classes devant\n *\trenvoyer leur erreur par l'intermediaire de leur propriete \"error\".\n *\n *\t@param\t \tDoliDB\t$db      \tDatabase handler\n *\t@param  \tmixed\t$error\t\tString or array of errors strings to show\n *  @param\t\tarray\t$errors\t\tArray of errors\n *\t@return \tvoid\n *  @see    \tdol_htmloutput_errors\n */\nfunction dol_print_error($db='',$error='',$errors=null)\n{\n\tglobal $conf,$langs,$argv;\n\tglobal $dolibarr_main_prod;\n\n\t$out = '';\n\t$syslog = '';\n\n\t// Si erreur intervenue avant chargement langue\n\tif (! $langs)\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT .'/core/class/translate.class.php';\n\t\t$langs = new Translate('', $conf);\n\t\t$langs->load(\"main\");\n\t}\n\t$langs->load(\"main\");\n\t$langs->load(\"errors\");\n\n\tif ($_SERVER['DOCUMENT_ROOT'])    // Mode web\n\t{\n\t\t$out.=$langs->trans(\"DolibarrHasDetectedError\").\".<br>\\n\";\n\t\tif (! empty($conf->global->MAIN_FEATURES_LEVEL)) $out.=\"You use an experimental or develop level of features, so please do NOT report any bugs, except if problem is confirmed moving option MAIN_FEATURES_LEVEL back to 0.<br>\\n\";\n\t\t$out.=$langs->trans(\"InformationToHelpDiagnose\").\":<br>\\n\";\n\n\t\t$out.=\"<b>\".$langs->trans(\"Date\").\":</b> \".dol_print_date(time(),'dayhourlog').\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"Dolibarr\").\":</b> \".DOL_VERSION.\"<br>\\n\";\n\t\tif (isset($conf->global->MAIN_FEATURES_LEVEL)) $out.=\"<b>\".$langs->trans(\"LevelOfFeature\").\":</b> \".$conf->global->MAIN_FEATURES_LEVEL.\"<br>\\n\";\n\t\tif (function_exists(\"phpversion\"))\n\t\t{\n\t\t\t$out.=\"<b>\".$langs->trans(\"PHP\").\":</b> \".phpversion().\"<br>\\n\";\n\t\t}\n\t\t$out.=\"<b>\".$langs->trans(\"Server\").\":</b> \".$_SERVER[\"SERVER_SOFTWARE\"].\"<br>\\n\";\n\t\tif (function_exists(\"php_uname\"))\n\t\t{\n\t\t\t$out.=\"<b>\".$langs->trans(\"OS\").\":</b> \".php_uname().\"<br>\\n\";\n\t\t}\n\t\t$out.=\"<b>\".$langs->trans(\"UserAgent\").\":</b> \".$_SERVER[\"HTTP_USER_AGENT\"].\"<br>\\n\";\n\t\t$out.=\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"RequestedUrl\").\":</b> \".dol_htmlentities($_SERVER[\"REQUEST_URI\"],ENT_COMPAT,'UTF-8').\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"Referer\").\":</b> \".(isset($_SERVER[\"HTTP_REFERER\"])?dol_htmlentities($_SERVER[\"HTTP_REFERER\"],ENT_COMPAT,'UTF-8'):'').\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"MenuManager\").\":</b> \".(isset($conf->standard_menu)?$conf->standard_menu:'').\"<br>\\n\";\n\t\t$out.=\"<br>\\n\";\n\t\t$syslog.=\"url=\".dol_escape_htmltag($_SERVER[\"REQUEST_URI\"]);\n\t\t$syslog.=\", query_string=\".dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]);\n\t}\n\telse                              // Mode CLI\n\t{\n\t\t$out.='> '.$langs->transnoentities(\"ErrorInternalErrorDetected\").\":\\n\".$argv[0].\"\\n\";\n\t\t$syslog.=\"pid=\".dol_getmypid();\n\t}\n\n\tif (is_object($db))\n\t{\n\t\tif ($_SERVER['DOCUMENT_ROOT'])  // Mode web\n\t\t{\n\t\t\t$out.=\"<b>\".$langs->trans(\"DatabaseTypeManager\").\":</b> \".$db->type.\"<br>\\n\";\n\t\t\t$out.=\"<b>\".$langs->trans(\"RequestLastAccessInError\").\":</b> \".($db->lastqueryerror()?dol_escape_htmltag($db->lastqueryerror()):$langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out.=\"<b>\".$langs->trans(\"ReturnCodeLastAccessInError\").\":</b> \".($db->lasterrno()?dol_escape_htmltag($db->lasterrno()):$langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out.=\"<b>\".$langs->trans(\"InformationLastAccessInError\").\":</b> \".($db->lasterror()?dol_escape_htmltag($db->lasterror()):$langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out.=\"<br>\\n\";\n\t\t}\n\t\telse                            // Mode CLI\n\t\t{\n\t\t    // No dol_escape_htmltag for output, we are in CLI mode\n\t\t    $out.='> '.$langs->transnoentities(\"DatabaseTypeManager\").\":\\n\".$db->type.\"\\n\";\n\t\t\t$out.='> '.$langs->transnoentities(\"RequestLastAccessInError\").\":\\n\".($db->lastqueryerror()?$db->lastqueryerror():$langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\t\t\t$out.='> '.$langs->transnoentities(\"ReturnCodeLastAccessInError\").\":\\n\".($db->lasterrno()?$db->lasterrno():$langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\t\t\t$out.='> '.$langs->transnoentities(\"InformationLastAccessInError\").\":\\n\".($db->lasterror()?$db->lasterror():$langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\n\t\t}\n\t\t$syslog.=\", sql=\".$db->lastquery();\n\t\t$syslog.=\", db_error=\".$db->lasterror();\n\t}\n\n\tif ($error || $errors)\n\t{\n\t\t$langs->load(\"errors\");\n\n\t\t// Merge all into $errors array\n\t\tif (is_array($error) && is_array($errors)) $errors=array_merge($error,$errors);\n\t\telseif (is_array($error)) $errors=$error;\n\t\telseif (is_array($errors)) $errors=array_merge(array($error),$errors);\n\t\telse $errors=array_merge(array($error));\n\n\t\tforeach($errors as $msg)\n\t\t{\n\t\t\tif (empty($msg)) continue;\n\t\t\tif ($_SERVER['DOCUMENT_ROOT'])  // Mode web\n\t\t\t{\n\t\t\t\t$out.=\"<b>\".$langs->trans(\"Message\").\":</b> \".dol_escape_htmltag($msg).\"<br>\\n\" ;\n\t\t\t}\n\t\t\telse                        // Mode CLI\n\t\t\t{\n\t\t\t\t$out.='> '.$langs->transnoentities(\"Message\").\":\\n\".$msg.\"\\n\" ;\n\t\t\t}\n\t\t\t$syslog.=\", msg=\".$msg;\n\t\t}\n\t}\n\tif (empty($dolibarr_main_prod) && $_SERVER['DOCUMENT_ROOT'] && function_exists('xdebug_print_function_stack') && function_exists('xdebug_call_file'))\n\t{\n\t\txdebug_print_function_stack();\n\t\t$out.='<b>XDebug informations:</b>'.\"<br>\\n\";\n\t\t$out.='File: '.xdebug_call_file().\"<br>\\n\";\n\t\t$out.='Line: '.xdebug_call_line().\"<br>\\n\";\n\t\t$out.='Function: '.xdebug_call_function().\"<br>\\n\";\n\t\t$out.=\"<br>\\n\";\n\t}\n\n\tif (empty($dolibarr_main_prod)) print $out;\n\telse define(\"MAIN_CORE_ERROR\", 1);\n\t//else print 'Sorry, an error occured but the parameter $dolibarr_main_prod is defined in conf file so no message is reported to your browser. Please read the log file for error message.';\n\tdol_syslog(\"Error \".$syslog, LOG_ERR);\n}\n\n/**\n * Show a public email and error code to contact if technical error\n *\n * @param\tstring\t$prefixcode\t\tPrefix of public error code\n * @param   string  $errormessage   Complete error message\n * @return\tvoid\n */\nfunction dol_print_error_email($prefixcode, $errormessage='')\n{\n\tglobal $langs,$conf;\n\n\t$langs->load(\"errors\");\n\t$now=dol_now();\n\tprint '<br><div class=\"center login_main_message\"><div class=\"error\">';\n\tprint $langs->trans(\"ErrorContactEMail\", $conf->global->MAIN_INFO_SOCIETE_MAIL, $prefixcode.dol_print_date($now,'%Y%m%d'));\n\tif ($errormessage) print '<br><br>'.$errormessage;\n\tprint '</div></div>';\n}\n\n/**\n *\tShow title line of an array\n *\n *\t@param\tstring\t$name        Label of field\n *\t@param\tstring\t$file        Url used when we click on sort picto\n *\t@param\tstring\t$field       Field to use for new sorting\n *\t@param\tstring\t$begin       (\"\" by defaut)\n *\t@param\tstring\t$moreparam   Add more parameters on sort url links (\"\" by default)\n *\t@param  string\t$td          Options of attribute td (\"\" by defaut, example: 'align=\"center\"')\n *\t@param  string\t$sortfield   Current field used to sort\n *\t@param  string\t$sortorder   Current sort order\n *  @param\tstring\t$prefix\t\t Prefix for css. Use space after prefix to add your own CSS tag.\n *\t@return\tvoid\n */\nfunction print_liste_field_titre($name, $file=\"\", $field=\"\", $begin=\"\", $moreparam=\"\", $td=\"\", $sortfield=\"\", $sortorder=\"\", $prefix=\"\")\n{\n\tprint getTitleFieldOfList($name, 0, $file, $field, $begin, $moreparam, $td, $sortfield, $sortorder, $prefix);\n}\n\n/**\n *\tGet title line of an array\n *\n *\t@param\tstring\t$name        Translation key of field\n *\t@param\tint\t\t$thead\t\t 0=To use with standard table format, 1=To use inside <thead><tr>, 2=To use with <div>\n *\t@param\tstring\t$file        Url used when we click on sort picto\n *\t@param\tstring\t$field       Field to use for new sorting. Empty if this field is not sortable.\n *\t@param\tstring\t$begin       (\"\" by defaut)\n *\t@param\tstring\t$moreparam   Add more parameters on sort url links (\"\" by default)\n *\t@param  string\t$moreattrib  Add more attributes on th (\"\" by defaut). To add more css class, use param $prefix.\n *\t@param  string\t$sortfield   Current field used to sort (Ex: 'd.datep,d.id')\n *\t@param  string\t$sortorder   Current sort order (Ex: 'asc,desc')\n *  @param\tstring\t$prefix\t\t Prefix for css. Use space after prefix to add your own CSS tag.\n *  @param\tstring\t$disablesortlink\t1=Disable sort link\n *\t@return\tstring\n */\nfunction getTitleFieldOfList($name, $thead=0, $file=\"\", $field=\"\", $begin=\"\", $moreparam=\"\", $moreattrib=\"\", $sortfield=\"\", $sortorder=\"\", $prefix=\"\", $disablesortlink=0)\n{\n\tglobal $conf, $langs;\n\t//print \"$name, $file, $field, $begin, $options, $moreattrib, $sortfield, $sortorder<br>\\n\";\n\n\t$sortorder=strtoupper($sortorder);\n\t$out='';\n    $sortimg='';\n\n\t$tag='th';\n\tif ($thead==2) $tag='div';\n\n\t$tmpsortfield=explode(',',$sortfield);\n\t$sortfield1=trim($tmpsortfield[0]);    // If $sortfield is 'd.datep,d.id', it becomes 'd.datep'\n\t$tmpfield=explode(',',$field);\n\t$field1=trim($tmpfield[0]);            // If $field is 'd.datep,d.id', it becomes 'd.datep'\n\n\t//var_dump('field='.$field.' field1='.$field1.' sortfield='.$sortfield.' sortfield1='.$sortfield1);\n\n\t// If field is used as sort criteria we use a specific css class liste_titre_sel\n\t// Example if (sortfield,field)=(\"nom\",\"xxx.nom\") or (sortfield,field)=(\"nom\",\"nom\")\n\tif ($field1 && ($sortfield1 == $field1 || $sortfield1 == preg_replace(\"/^[^\\.]+\\./\",\"\",$field1))) $out.= '<'.$tag.' class=\"'.$prefix.'liste_titre_sel\" '. $moreattrib.'>';\n\telse $out.= '<'.$tag.' class=\"'.$prefix.'liste_titre\" '. $moreattrib.'>';\n\n\tif (empty($thead) && $field && empty($disablesortlink))    // If this is a sort field\n\t{\n\t\t$options=preg_replace('/sortfield=([a-zA-Z0-9,\\s\\.]+)/i','',$moreparam);\n\t\t$options=preg_replace('/sortorder=([a-zA-Z0-9,\\s\\.]+)/i','',$options);\n\t\t$options=preg_replace('/&+/i','&',$options);\n\t\tif (! preg_match('/^&/',$options)) $options='&'.$options;\n\n\t\tif ($field1 != $sortfield1) // We are on another field\n\t\t{\n            if (preg_match('/^DESC/', $sortorder)) $out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">';\n            else $out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">';\n\t\t}\n\t\telse                      // We are of first sorting criteria\n\t\t{\n            if (preg_match('/^ASC/', $sortorder)) $out.= '<a href=\"'.$file.'?sortfield='.$sortfield.'&sortorder=desc&begin='.$begin.$options.'\">';\n\t\t    else $out.= '<a href=\"'.$file.'?sortfield='.$sortfield.'&sortorder=asc&begin='.$begin.$options.'\">';\n\t\t}\n\t}\n\n\t$out.=$langs->trans($name);\n\n\tif (empty($thead) && $field && empty($disablesortlink))    // If this is a sort field\n\t{\n\t\t$out.='</a>';\n\t}\n\n\tif (empty($thead) && $field)    // If this is a sort field\n\t{\n\t\t$options=preg_replace('/sortfield=([a-zA-Z0-9,\\s\\.]+)/i','',$moreparam);\n\t\t$options=preg_replace('/sortorder=([a-zA-Z0-9,\\s\\.]+)/i','',$options);\n\t\t$options=preg_replace('/&+/i','&',$options);\n\t\tif (! preg_match('/^&/',$options)) $options='&'.$options;\n\n\t\t//print \"&nbsp;\";\n\t\t//$sortimg.= '<img width=\"2\" src=\"'.DOL_URL_ROOT.'/theme/common/transparent.png\" alt=\"\">';\n\t\t//$sortimg.= '<span class=\"nowrap\">';\n\n\t\tif (! $sortorder || $field1 != $sortfield1)\n\t\t{\n\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",0).'</a>';\n\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",0).'</a>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (preg_match('/^DESC/', $sortorder)) {\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",0).'</a>';\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",1).'</a>';\n\t\t\t\t$sortimg.= '<span class=\"nowrap\">'.img_up(\"Z-A\",0).'</span>';\n\t\t\t}\n\t\t\tif (preg_match('/^ASC/', $sortorder)) {\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",1).'</a>';\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",0).'</a>';\n\t\t\t\t$sortimg.= '<span class=\"nowrap\">'.img_down(\"A-Z\",0).'</span>';\n\t\t\t}\n\t\t}\n\n\t\t//$sortimg.= '</span>';\n\t}\n\n\t$out.=$sortimg;\n\n\t$out.='</'.$tag.'>';\n\n\treturn $out;\n}\n\n/**\n *\tShow a title.\n *\n *\t@param\tstring\t$title\t\t\tTitle to show\n *\t@return\tstring\t\t\t\t\tTitle to show\n *  @deprecated\t\t\t\t\t\tUse load_fiche_titre instead\n *  @see load_fiche_titre\n */\nfunction print_titre($title)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tprint '<div class=\"titre\">'.$title.'</div>';\n}\n\n/**\n *\tShow a title with picto\n *\n *\t@param\tstring\t$title\t\t\t\tTitle to show\n *\t@param\tstring\t$mesg\t\t\t\tAdded message to show on right\n *\t@param\tstring\t$picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t$pictoisfullpath\t1=Icon name is a full absolute url of image\n * \t@param\tint\t\t$id\t\t\t\t\tTo force an id on html objects\n * \t@return\tvoid\n *  @deprecated Use print load_fiche_titre instead\n */\nfunction print_fiche_titre($title, $mesg='', $picto='title_generic.png', $pictoisfullpath=0, $id='')\n{\n\tprint load_fiche_titre($title, $mesg, $picto, $pictoisfullpath, $id);\n}\n\n/**\n *\tLoad a title with picto\n *\n *\t@param\tstring\t$titre\t\t\t\tTitle to show\n *\t@param\tstring\t$morehtmlright\t\tAdded message to show on right\n *\t@param\tstring\t$picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t$pictoisfullpath\t1=Icon name is a full absolute url of image\n * \t@param\tint\t\t$id\t\t\t\t\tTo force an id on html objects\n *  @param  string  $morecssontable     More css on table\n * \t@return\tstring\n *  @see print_barre_liste\n */\nfunction load_fiche_titre($titre, $morehtmlright='', $picto='title_generic.png', $pictoisfullpath=0, $id=0, $morecssontable='')\n{\n\tglobal $conf;\n\n\t$return='';\n\n\tif ($picto == 'setup') $picto='title.png';\n\tif (($conf->browser->name == 'ie') && $picto=='title.png') $picto='title.gif';\n\n\t$return.= \"\\n\";\n\t$return.= '<table '.($id?'id=\"'.$id.'\" ':'').'summary=\"\" class=\"centpercent notopnoleftnoright'.($morecssontable?' '.$morecssontable:'').'\" style=\"margin-bottom: 2px;\"><tr>';\n\tif ($picto) $return.= '<td class=\"nobordernopadding widthpictotitle\" valign=\"middle\">'.img_picto('',$picto, 'class=\"valignmiddle\" id=\"pictotitle\"', $pictoisfullpath).'</td>';\n\t$return.= '<td class=\"nobordernopadding\" valign=\"middle\">';\n\t$return.= '<div class=\"titre\">'.$titre.'</div>';\n\t$return.= '</td>';\n\tif (dol_strlen($morehtmlright))\n\t{\n\t\t$return.= '<td class=\"nobordernopadding titre_right\" align=\"right\" valign=\"middle\">'.$morehtmlright.'</td>';\n\t}\n\t$return.= '</tr></table>'.\"\\n\";\n\n\treturn $return;\n}\n\n/**\n *\tPrint a title with navigation controls for pagination\n *\n *\t@param\tstring\t    $titre\t\t\t\tTitle to show (required)\n *\t@param\tint   \t    $page\t\t\t\tNumero of page to show in navigation links (required)\n *\t@param\tstring\t    $file\t\t\t\tUrl of page (required)\n *\t@param\tstring\t    $options         \tMore parameters for links ('' by default, does not include sortfield neither sortorder). Value must be 'urlencoded' before calling function.\n *\t@param\tstring    \t$sortfield       \tField to sort on ('' by default)\n *\t@param\tstring\t    $sortorder       \tOrder to sort ('' by default)\n *\t@param\tstring\t    $center          \tString in the middle ('' by default). We often find here string $massaction comming from $form->selectMassAction()\n *\t@param\tint\t\t    $num\t\t\t\tNumber of records found by select with limit+1\n *\t@param\tint|string  $totalnboflines\t\tTotal number of records/lines for all pages (if known). Use a negative value of number to not show number. Use '' if unknown.\n *\t@param\tstring\t    $picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t    $pictoisfullpath\t1=Icon name is a full absolute url of image\n *  @param\tstring\t    $morehtml\t\t\tMore html to show\n *  @param  string      $morecss            More css to the table\n *  @param  int         $limit              Max number of lines (-1 = use default, 0 = no limit, > 0 = limit).\n *  @param  int         $hideselectlimit    Force to hide select limit\n *\t@return\tvoid\n */\nfunction print_barre_liste($titre, $page, $file, $options='', $sortfield='', $sortorder='', $center='', $num=-1, $totalnboflines='', $picto='title_generic.png', $pictoisfullpath=0, $morehtml='', $morecss='', $limit=-1, $hideselectlimit=0)\n{\n\tglobal $conf,$langs;\n\n\t$savlimit = $limit;\n    $savtotalnboflines = $totalnboflines;\n    $totalnboflines=abs($totalnboflines);\n\n\tif ($picto == 'setup') $picto='title_setup.png';\n\tif (($conf->browser->name == 'ie') && $picto=='title_generic.png') $picto='title.gif';\n\tif ($limit < 0) $limit = $conf->liste_limit;\n\tif ($savlimit != 0 && (($num > $limit) || ($num == -1) || ($limit == 0)))\n\t{\n\t\t$nextpage = 1;\n\t}\n\telse\n\t{\n\t\t$nextpage = 0;\n\t}\n\t//print 'totalnboflines='.$totalnboflines.'-savlimit='.$savlimit.'-limit='.$limit.'-num='.$num.'-nextpage='.$nextpage;\n\n\tprint \"\\n\";\n\tprint \"<!-- Begin title '\".$titre.\"' -->\\n\";\n\tprint '<table width=\"100%\" border=\"0\" class=\"notopnoleftnoright'.($morecss?' '.$morecss:'').'\" style=\"margin-bottom: 6px;\"><tr>';\n\n\t// Left\n\t//if ($picto && $titre) print '<td class=\"nobordernopadding hideonsmartphone\" width=\"40\" align=\"left\" valign=\"middle\">'.img_picto('', $picto, 'id=\"pictotitle\"', $pictoisfullpath).'</td>';\n\tprint '<td class=\"nobordernopadding valignmiddle\">';\n\tif ($picto && $titre) print img_picto('', $picto, 'class=\"hideonsmartphone valignmiddle\" id=\"pictotitle\"', $pictoisfullpath);\n\tprint '<div class=\"titre inline-block\">'.$titre;\n\tif (!empty($titre) && $savtotalnboflines >= 0 && (string) $savtotalnboflines != '') print ' ('.$totalnboflines.')';\n\tprint '</div></td>';\n\n\t// Center\n\tif ($center)\n\t{\n\t\tprint '<td class=\"nobordernopadding center valignmiddle\">'.$center.'</td>';\n\t}\n\n\t// Right\n\tprint '<td class=\"nobordernopadding valignmiddle\" align=\"right\">';\n\tif ($sortfield) $options .= \"&amp;sortfield=\".$sortfield;\n\tif ($sortorder) $options .= \"&amp;sortorder=\".$sortorder;\n\t// Show navigation bar\n\t$pagelist = '';\n\tif ($savlimit != 0 && ($page > 0 || $num > $limit))\n\t{\n\t\tif ($totalnboflines)\t// If we know total nb of lines\n\t\t{\n\t\t\t$maxnbofpage=(empty($conf->dol_optimize_smallscreen) ? 4 : 1);\t\t// page nb before and after selected page + ... + first or last\n\n\t\t\tif ($limit > 0) $nbpages=ceil($totalnboflines/$limit);\n\t\t\telse $nbpages=1;\n\t\t\t$cpt=($page-$maxnbofpage);\n\t\t\tif ($cpt < 0) { $cpt=0; }\n\n\t\t\tif ($cpt>=1)\n\t\t\t{\n\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page=0'.$options.'\">1</a></li>';\n\t\t\t\tif ($cpt > 2) $pagelist.='<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"inactive\"':'').'>...</span></li>';\n\t\t\t\telse if ($cpt == 2) $pagelist.='<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page=1'.$options.'\">2</a></li>';\n\t\t\t}\n\n\t\t\tdo\n\t\t\t{\n\t\t\t\tif ($cpt==$page)\n\t\t\t\t{\n\t\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"active\"':'').'>'.($page+1).'</span></li>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page='.$cpt.$options.'\">'.($cpt+1).'</a></li>';\n\t\t\t\t}\n\t\t\t\t$cpt++;\n\t\t\t}\n\t\t\twhile ($cpt < $nbpages && $cpt<=$page+$maxnbofpage);\n\n\t\t\tif ($cpt<$nbpages)\n\t\t\t{\n\t\t\t\tif ($cpt<$nbpages-2) $pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"inactive\"':'').'>...</span></li>';\n\t\t\t\telse if ($cpt == $nbpages-2) $pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page='.($nbpages-2).$options.'\">'.($nbpages - 1).'</a></li>';\n\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page='.($nbpages-1).$options.'\">'.$nbpages.'</a></li>';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"active\"':'').'>'.($page+1).\"</li>\";\n\t\t}\n\t}\n\tprint_fleche_navigation($page, $file, $options, $nextpage, $pagelist, $morehtml, $savlimit, $totalnboflines, $hideselectlimit);\t\t// output the div and ul for previous/last completed with page numbers into $pagelist\n\tprint '</td>';\n\n\tprint '</tr></table>'.\"\\n\";\n\tprint \"<!-- End title -->\\n\\n\";\n}\n\n/**\n *\tFunction to show navigation arrows into lists\n *\n *\t@param\tint\t\t\t\t$page\t\t\t\tNumber of page\n *\t@param\tstring\t\t\t$file\t\t\t\tPage URL (in most cases provided with $_SERVER[\"PHP_SELF\"])\n *\t@param\tstring\t\t\t$options         \tOther url paramaters to propagate (\"\" by default, may include sortfield and sortorder)\n *\t@param\tinteger\t\t\t$nextpage\t    \tDo we show a next page button\n *\t@param\tstring\t\t\t$betweenarrows\t\tHTML content to show between arrows. MUST contains '<li> </li>' tags or '<li><span> </span></li>'.\n *  @param\tstring\t\t\t$afterarrows\t\tHTML content to show after arrows. Must NOT contains '<li> </li>' tags.\n *  @param  int             $limit              Max nb of record to show  (-1 = no combo with limit, 0 = no limit, > 0 = limit)\n *\t@param\tint\t\t        $totalnboflines\t\tTotal number of records/lines for all pages (if known)\n *  @param  int             $hideselectlimit    Force to hide select limit\n *\t@return\tvoid\n */\nfunction print_fleche_navigation($page, $file, $options='', $nextpage=0, $betweenarrows='', $afterarrows='', $limit=-1, $totalnboflines=0, $hideselectlimit=0)\n{\n\tglobal $conf, $langs;\n\n\tprint '<div class=\"pagination\"><ul>';\n\tif ((int) $limit >= 0 && empty($hideselectlimit))\n\t{\n\t    $pagesizechoices='10:10,20:20,30:30,40:40,50:50,100:100,250:250,500:500,1000:1000,5000:5000';\n\t    //$pagesizechoices.=',0:'.$langs->trans(\"All\");     // Not yet supported\n\t    //$pagesizechoices.=',2:2';\n\t    if (! empty($conf->global->MAIN_PAGESIZE_CHOICES)) $pagesizechoices=$conf->global->MAIN_PAGESIZE_CHOICES;\n\n        print '<li class=\"pagination\">';\n        print '<select class=\"flat selectlimit\" name=\"limit\" title=\"'.dol_escape_htmltag($langs->trans(\"MaxNbOfRecordPerPage\")).'\">';\n        $tmpchoice=explode(',',$pagesizechoices);\n        $tmpkey=$limit.':'.$limit;\n        if (! in_array($tmpkey, $tmpchoice)) $tmpchoice[]=$tmpkey;\n        $tmpkey=$conf->liste_limit.':'.$conf->liste_limit;\n        if (! in_array($tmpkey, $tmpchoice)) $tmpchoice[]=$tmpkey;\n        asort($tmpchoice, SORT_NUMERIC);\n        $found=false;\n        foreach($tmpchoice as $val)\n        {\n            $selected='';\n            $tmp=explode(':',$val);\n            $key=$tmp[0];\n            $val=$tmp[1];\n            if ($key != '' && $val != '')\n            {\n                if ((int) $key == (int) $limit)\n                {\n                    $selected = ' selected=\"selected\"';\n                    $found = true;\n                }\n                print '<option name=\"'.$key.'\"'.$selected.'>'.dol_escape_htmltag($val).'</option>'.\"\\n\";\n            }\n        }\n        print '</select>';\n        if ($conf->use_javascript_ajax)\n        {\n            print '<!-- JS CODE TO ENABLE select limit to launch submit of page -->\n            \t\t<script type=\"text/javascript\">\n                \tjQuery(document).ready(function () {\n            \t  \t\tjQuery(\".selectlimit\").change(function() {\n                            console.log(\"Change limit. Send submit\");\n                            $(this).parents(\\'form:first\\').submit();\n            \t  \t\t});\n                \t});\n            \t\t</script>\n                ';\n        }\n        print '</li>';\n\t}\n\tif ($page > 0)\n\t{\n\t\tprint '<li class=\"pagination\"><a class=\"paginationprevious\" href=\"'.$file.'?page='.($page-1).$options.'\"><i class=\"fa fa-chevron-left\" title=\"'.dol_escape_htmltag($langs->trans(\"Previous\")).'\"></i></a></li>';\n\t}\n\tif ($betweenarrows)\n\t{\n\t\tprint $betweenarrows;\n\t}\n\tif ($nextpage > 0)\n\t{\n\t\tprint '<li class=\"pagination\"><a class=\"paginationnext\" href=\"'.$file.'?page='.($page+1).$options.'\"><i class=\"fa fa-chevron-right\" title=\"'.dol_escape_htmltag($langs->trans(\"Next\")).'\"></i></a></li>';\n\t}\n\tif ($afterarrows)\n\t{\n\t\tprint '<li class=\"paginationafterarrows\">';\n\t\tprint $afterarrows;\n\t\tprint '</li>';\n\t}\n\tprint '</ul></div>'.\"\\n\";\n}\n\n\n/**\n *\tReturn a string with VAT rate label formated for view output\n *\tUsed into pdf and HTML pages\n *\n *\t@param\tstring\t$rate\t\t\tRate value to format ('19.6', '19,6', '19.6%', '19,6%', '19.6 (CODEX)', ...)\n *  @param\tboolean\t$addpercent\t\tAdd a percent % sign in output\n *\t@param\tint\t\t$info_bits\t\tMiscellaneous information on vat (0=Default, 1=French NPR vat)\n *\t@param\tint\t\t$usestarfornpr\t1=Use '*' for NPR vat rate intead of MAIN_LABEL_MENTION_NPR\n *  @return\tstring\t\t\t\t\tString with formated amounts ('19,6' or '19,6%' or '8.5% (NPR)' or '8.5% *' or '19,6 (CODEX)')\n */\nfunction vatrate($rate, $addpercent=false, $info_bits=0, $usestarfornpr=0)\n{\n    $morelabel='';\n\n    if (preg_match('/%/',$rate))\n\t{\n\t\t$rate=str_replace('%','',$rate);\n\t\t$addpercent=true;\n\t}\n\tif (preg_match('/\\((.*)\\)/',$rate,$reg))\n\t{\n\t    $morelabel=' ('.$reg[1].')';\n\t    $rate=preg_replace('/\\s*'.preg_quote($morelabel,'/').'/','',$rate);\n\t}\n\tif (preg_match('/\\*/',$rate))\n\t{\n\t\t$rate=str_replace('*','',$rate);\n\t\t$info_bits |= 1;\n\t}\n\n\t// If rate is '9/9/9' we don't change it.  If rate is '9.000' we apply price()\n\tif (! preg_match('/\\//', $rate)) $ret=price($rate,0,'',0,0).($addpercent?'%':'');\n\telse\n\t{\n\t\t// TODO Split on / and output with a price2num to have clean numbers with ton of 000.\n\t\t$ret=$rate.($addpercent?'%':'');\n\t}\n\tif ($info_bits & 1) $ret.=' *';\n\t$ret.=$morelabel;\n\treturn $ret;\n}\n\n\n/**\n *\t\tFunction to format a value into an amount for visual output\n *\t\tFunction used into PDF and HTML pages\n *\n *\t\t@param\tfloat\t\t$amount\t\t\tAmount to format\n *\t\t@param\tinteger\t\t$form\t\t\tType of format, HTML or not (not by default)\n *\t\t@param\tTranslate\t$outlangs\t\tObject langs for output\n *\t\t@param\tint\t\t\t$trunc\t\t\t1=Truncate if there is more decimals than MAIN_MAX_DECIMALS_SHOWN (default), 0=Does not truncate. Deprecated because amount are rounded (to unit or total amount accurancy) before inserted into database or after a computation, so this parameter should be useless.\n *\t\t@param\tint\t\t\t$rounding\t\tMinimum number of decimal to show. If 0, no change, if -1, we use min($conf->global->MAIN_MAX_DECIMALS_UNIT,$conf->global->MAIN_MAX_DECIMALS_TOTAL)\n *\t\t@param\tint\t\t\t$forcerounding\tForce the number of decimal to forcerounding decimal (-1=do not force)\n *\t\t@param\tstring\t\t$currency_code\tTo add currency symbol (''=add nothing, 'auto'=Use default currency, 'XXX'=add currency symbols for XXX currency)\n *\t\t@return\tstring\t\t\t\t\t\tChaine avec montant formate\n *\n *\t\t@see\tprice2num\t\t\t\t\tRevert function of price\n */\nfunction price($amount, $form=0, $outlangs='', $trunc=1, $rounding=-1, $forcerounding=-1, $currency_code='')\n{\n\tglobal $langs,$conf;\n\n\t// Clean parameters\n\tif (empty($amount)) $amount=0;\t// To have a numeric value if amount not defined or = ''\n\t$amount = (is_numeric($amount)?$amount:0); // Check if amount is numeric, for example, an error occured when amount value = o (letter) instead 0 (number)\n\tif ($rounding < 0) $rounding=min($conf->global->MAIN_MAX_DECIMALS_UNIT,$conf->global->MAIN_MAX_DECIMALS_TOT);\n\t$nbdecimal=$rounding;\n\n\t// Output separators by default (french)\n\t$dec=','; $thousand=' ';\n\n\t// If $outlangs not forced, we use use language\n\tif (! is_object($outlangs)) $outlangs=$langs;\n\n\tif ($outlangs->transnoentitiesnoconv(\"SeparatorDecimal\") != \"SeparatorDecimal\")  $dec=$outlangs->transnoentitiesnoconv(\"SeparatorDecimal\");\n\tif ($outlangs->transnoentitiesnoconv(\"SeparatorThousand\")!= \"SeparatorThousand\") $thousand=$outlangs->transnoentitiesnoconv(\"SeparatorThousand\");\n\tif ($thousand == 'None') $thousand='';\n\telse if ($thousand == 'Space') $thousand=' ';\n\t//print \"outlangs=\".$outlangs->defaultlang.\" amount=\".$amount.\" html=\".$form.\" trunc=\".$trunc.\" nbdecimal=\".$nbdecimal.\" dec='\".$dec.\"' thousand='\".$thousand.\"'<br>\";\n\n\t//print \"amount=\".$amount.\"-\";\n\t$amount = str_replace(',','.',$amount);\t// should be useless\n\t//print $amount.\"-\";\n\t$datas = explode('.',$amount);\n\t$decpart = isset($datas[1])?$datas[1]:'';\n\t$decpart = preg_replace('/0+$/i','',$decpart);\t// Supprime les 0 de fin de partie decimale\n\t//print \"decpart=\".$decpart.\"<br>\";\n\t$end='';\n\n\t// We increase nbdecimal if there is more decimal than asked (to not loose information)\n\tif (dol_strlen($decpart) > $nbdecimal) $nbdecimal=dol_strlen($decpart);\n\t// Si on depasse max\n\tif ($trunc && $nbdecimal > $conf->global->MAIN_MAX_DECIMALS_SHOWN)\n\t{\n\t\t$nbdecimal=$conf->global->MAIN_MAX_DECIMALS_SHOWN;\n\t\tif (preg_match('/\\.\\.\\./i',$conf->global->MAIN_MAX_DECIMALS_SHOWN))\n\t\t{\n\t\t\t// Si un affichage est tronque, on montre des ...\n\t\t\t$end='...';\n\t\t}\n\t}\n\n\t// If force rounding\n\tif ($forcerounding >= 0) $nbdecimal = $forcerounding;\n\n\t// Format number\n\t$output=number_format($amount, $nbdecimal, $dec, $thousand);\n\tif ($form)\n\t{\n\t\t$output=preg_replace('/\\s/','&nbsp;',$output);\n\t\t$output=preg_replace('/\\'/','&#039;',$output);\n\t}\n\t// Add symbol of currency if requested\n\t$cursymbolbefore=$cursymbolafter='';\n\tif ($currency_code)\n\t{\n\t\tif ($currency_code == 'auto') $currency_code=$conf->currency;\n\n\t\t$listofcurrenciesbefore=array('USD','GBP','AUD','MXN','PEN');\n\t\tif (in_array($currency_code,$listofcurrenciesbefore)) $cursymbolbefore.=$outlangs->getCurrencySymbol($currency_code);\n\t\telse\n\t\t{\n\t\t\t$tmpcur=$outlangs->getCurrencySymbol($currency_code);\n\t\t\t$cursymbolafter.=($tmpcur == $currency_code ? ' '.$tmpcur : $tmpcur);\n\t\t}\n\t}\n\t$output=$cursymbolbefore.$output.$end.($cursymbolafter?' ':'').$cursymbolafter;\n\n\treturn $output;\n}\n\n/**\n *\tFunction that return a number with universal decimal format (decimal separator is '.') from an amount typed by a user.\n *\tFunction to use on each input amount before any numeric test or database insert\n *\n *\t@param\tfloat\t$amount\t\t\tAmount to convert/clean\n *\t@param\tstring\t$rounding\t\t''=No rounding\n * \t\t\t\t\t\t\t\t\t'MU'=Round to Max unit price (MAIN_MAX_DECIMALS_UNIT)\n *\t\t\t\t\t\t\t\t\t'MT'=Round to Max for totals with Tax (MAIN_MAX_DECIMALS_TOT)\n *\t\t\t\t\t\t\t\t\t'MS'=Round to Max for stock quantity (MAIN_MAX_DECIMALS_STOCK)\n * \t@param\tint\t\t$alreadysqlnb\tPut 1 if you know that content is already universal format number\n *\t@return\tstring\t\t\t\t\tAmount with universal numeric format (Example: '99.99999') or unchanged text if conversion fails.\n *\n *\t@see    price\t\t\t\t\tOpposite function of price2num\n */\nfunction price2num($amount,$rounding='',$alreadysqlnb=0)\n{\n\tglobal $langs,$conf;\n\n\t// Round PHP function does not allow number like '1,234.56' nor '1.234,56' nor '1 234,56'\n\t// Numbers must be '1234.56'\n\t// Decimal delimiter for PHP and database SQL requests must be '.'\n\t$dec=','; $thousand=' ';\n\tif ($langs->transnoentitiesnoconv(\"SeparatorDecimal\") != \"SeparatorDecimal\")  $dec=$langs->transnoentitiesnoconv(\"SeparatorDecimal\");\n\tif ($langs->transnoentitiesnoconv(\"SeparatorThousand\")!= \"SeparatorThousand\") $thousand=$langs->transnoentitiesnoconv(\"SeparatorThousand\");\n\tif ($thousand == 'None') $thousand='';\n\telseif ($thousand == 'Space') $thousand=' ';\n\t//print \"amount=\".$amount.\" html=\".$form.\" trunc=\".$trunc.\" nbdecimal=\".$nbdecimal.\" dec='\".$dec.\"' thousand='\".$thousand.\"'<br>\";\n\n\t// Convert value to universal number format (no thousand separator, '.' as decimal separator)\n\tif ($alreadysqlnb != 1)\t// If not a PHP number or unknown, we change format\n\t{\n\t\t//print 'PP'.$amount.' - '.$dec.' - '.$thousand.' - '.intval($amount).'<br>';\n\n\t\t// Convert amount to format with dolibarr dec and thousand (this is because PHP convert a number\n\t\t// to format defined by LC_NUMERIC after a calculation and we want source format to be like defined by Dolibarr setup.\n\t\tif (is_numeric($amount))\n\t\t{\n\t\t\t// We put in temps value of decimal (\"0.00001\"). Works with 0 and 2.0E-5 and 9999.10\n\t\t\t$temps=sprintf(\"%0.10F\",$amount-intval($amount));\t// temps=0.0000000000 or 0.0000200000 or 9999.1000000000\n\t\t\t$temps=preg_replace('/([\\.1-9])0+$/','\\\\1',$temps); // temps=0. or 0.00002 or 9999.1\n\t\t\t$nbofdec=max(0,dol_strlen($temps)-2);\t// -2 to remove \"0.\"\n\t\t\t$amount=number_format($amount,$nbofdec,$dec,$thousand);\n\t\t}\n\t\t//print \"QQ\".$amount.'<br>';\n\n\t\t// Now make replace (the main goal of function)\n\t\tif ($thousand != ',' && $thousand != '.') $amount=str_replace(',','.',$amount);\t// To accept 2 notations for french users\n\t\t$amount=str_replace(' ','',$amount);\t\t// To avoid spaces\n\t\t$amount=str_replace($thousand,'',$amount);\t// Replace of thousand before replace of dec to avoid pb if thousand is .\n\t\t$amount=str_replace($dec,'.',$amount);\n\t}\n\n\t// Now, make a rounding if required\n\tif ($rounding)\n\t{\n\t\t$nbofdectoround='';\n\t\tif ($rounding == 'MU')     $nbofdectoround=$conf->global->MAIN_MAX_DECIMALS_UNIT;\n\t\telseif ($rounding == 'MT') $nbofdectoround=$conf->global->MAIN_MAX_DECIMALS_TOT;\n\t\telseif ($rounding == 'MS') $nbofdectoround=empty($conf->global->MAIN_MAX_DECIMALS_STOCK)?5:$conf->global->MAIN_MAX_DECIMALS_STOCK;\n\t\telseif (is_numeric($rounding))  $nbofdectoround=$rounding; \t// For admin info page\n\t\t//print \"RR\".$amount.' - '.$nbofdectoround.'<br>';\n\t\tif (dol_strlen($nbofdectoround)) $amount = round($amount,$nbofdectoround);\t// $nbofdectoround can be 0.\n\t\telse return 'ErrorBadParameterProvidedToFunction';\n\t\t//print 'SS'.$amount.' - '.$nbofdec.' - '.$dec.' - '.$thousand.' - '.$nbofdectoround.'<br>';\n\n\t\t// Convert amount to format with dolibarr dec and thousand (this is because PHP convert a number\n\t\t// to format defined by LC_NUMERIC after a calculation and we want source format to be defined by Dolibarr setup.\n\t\tif (is_numeric($amount))\n\t\t{\n\t\t\t// We put in temps value of decimal (\"0.00001\"). Works with 0 and 2.0E-5 and 9999.10\n\t\t\t$temps=sprintf(\"%0.10F\",$amount-intval($amount));\t// temps=0.0000000000 or 0.0000200000 or 9999.1000000000\n\t\t\t$temps=preg_replace('/([\\.1-9])0+$/','\\\\1',$temps); // temps=0. or 0.00002 or 9999.1\n\t\t\t$nbofdec=max(0,dol_strlen($temps)-2);\t// -2 to remove \"0.\"\n\t\t\t$amount=number_format($amount,min($nbofdec,$nbofdectoround),$dec,$thousand);\t\t// Convert amount to format with dolibarr dec and thousand\n\t\t}\n\t\t//print \"TT\".$amount.'<br>';\n\n\t\t// Always make replace because each math function (like round) replace\n\t\t// with local values and we want a number that has a SQL string format x.y\n\t\tif ($thousand != ',' && $thousand != '.') $amount=str_replace(',','.',$amount);\t// To accept 2 notations for french users\n\t\t$amount=str_replace(' ','',$amount);\t\t// To avoid spaces\n\t\t$amount=str_replace($thousand,'',$amount);\t// Replace of thousand before replace of dec to avoid pb if thousand is .\n\t\t$amount=str_replace($dec,'.',$amount);\n\t}\n\n\treturn $amount;\n}\n\n\n/**\n * Output a dimension with best unit\n *\n * @param   float       $dimension      Dimension\n * @param   int         $unit           Unit of dimension (0, -3, ...)\n * @param   string      $type           'weight', 'volume', ...\n * @param   Translate   $outputlangs    Translate language object\n * @param   int         $round          -1 = non rounding, x = number of decimal\n * @param   string      $forceunitoutput    'no' or numeric (-3, -6, ...) compared to $unit\n * @return  string                      String to show dimensions\n */\nfunction showDimensionInBestUnit($dimension, $unit, $type, $outputlangs, $round=-1, $forceunitoutput='no')\n{\n    require_once DOL_DOCUMENT_ROOT.'/core/lib/product.lib.php';\n\n    if (($forceunitoutput == 'no' && $dimension < 1/10000) || (is_numeric($forceunitoutput) && $forceunitoutput == -6))\n    {\n        $dimension = $dimension * 1000000;\n        $unit = $unit - 6;\n    }\n    elseif (($forceunitoutput == 'no' && $dimension < 1/10) || (is_numeric($forceunitoutput) && $forceunitoutput == -3))\n    {\n        $dimension = $dimension * 1000;\n        $unit = $unit - 3;\n    }\n    elseif (($forceunitoutput == 'no' && $dimension > 100000000) || (is_numeric($forceunitoutput) && $forceunitoutput == 6))\n    {\n        $dimension = $dimension / 1000000;\n        $unit = $unit + 6;\n    }\n    elseif (($forceunitoutput == 'no' && $dimension > 100000) || (is_numeric($forceunitoutput) && $forceunitoutput == 3))\n    {\n        $dimension = $dimension / 1000;\n        $unit = $unit + 3;\n    }\n\n    $ret=price($dimension, 0, $outputlangs, 0, 0, $round).' '.measuring_units_string($unit, $type);\n\n    return $ret;\n}\n\n\n/**\n *\tReturn localtax rate for a particular vat, when selling a product with vat $vatrate, from a $thirdparty_buyer to a $thirdparty_seller\n *  Note: This function applies same rules than get_default_tva\n *\n * \t@param\tfloat\t\t$vatrate\t\t        Vat rate. Can be '8.5' or '8.5 (VATCODEX)' for example\n * \t@param  int\t\t\t$local\t\t         \tLocal tax to search and return (1 or 2 return only tax rate 1 or tax rate 2)\n *  @param  Societe\t\t$thirdparty_buyer    \tObject of buying third party\n *  @param\tSociete\t\t$thirdparty_seller\t\tObject of selling third party ($mysoc if not defined)\n *  @param\tint\t\t\t$vatnpr\t\t\t\t\tIf vat rate is NPR or not\n * \t@return\tmixed\t\t\t   \t\t\t\t\t0 if not found, localtax rate if found\n *  @see get_default_tva\n */\nfunction get_localtax($vatrate, $local, $thirdparty_buyer=\"\", $thirdparty_seller=\"\", $vatnpr=0)\n{\n\tglobal $db, $conf, $mysoc;\n\n\tif (empty($thirdparty_seller) || ! is_object($thirdparty_seller)) $thirdparty_seller=$mysoc;\n\n\tdol_syslog(\"get_localtax tva=\".$vatrate.\" local=\".$local.\" thirdparty_buyer id=\".(is_object($thirdparty_buyer)?$thirdparty_buyer->id:'').\"/country_code=\".(is_object($thirdparty_buyer)?$thirdparty_buyer->country_code:'').\" thirdparty_seller id=\".$thirdparty_seller->id.\"/country_code=\".$thirdparty_seller->country_code.\" thirdparty_seller localtax1_assuj=\".$thirdparty_seller->localtax1_assuj.\"  thirdparty_seller localtax2_assuj=\".$thirdparty_seller->localtax2_assuj);\n\n\t$vatratecleaned = $vatrate;\n\tif (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg))      // If vat is \"xx (yy)\"\n\t{\n        $vatratecleaned = trim($reg[1]);\n\t    $vatratecode = $reg[2];\n\t}\n\n\t/*if ($thirdparty_buyer->country_code != $thirdparty_seller->country_code)\n\t{\n\t\treturn 0;\n\t}*/\n\n\t// Some test to guess with no need to make database access\n\tif ($mysoc->country_code == 'ES') // For spain localtaxes 1 and 2, tax is qualified if buyer use local taxe\n\t{\n\t\tif ($local == 1)\n\t\t{\n\t\t\tif (! $mysoc->localtax1_assuj || (string) $vatratecleaned == \"0\") return 0;\n\t\t\tif ($thirdparty_seller->id == $mysoc->id)\n\t\t\t{\n\t\t\t\tif (! $thirdparty_buyer->localtax1_assuj) return 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (! $thirdparty_seller->localtax1_assuj) return 0;\n\t\t\t}\n\t\t}\n\n\t\tif ($local == 2)\n\t\t{\n\t\t\tif (! $mysoc->localtax2_assuj || (string) $vatratecleaned == \"0\") return 0;\n\t\t\tif ($thirdparty_seller->id == $mysoc->id)\n\t\t\t{\n\t\t\t\tif (! $thirdparty_buyer->localtax2_assuj) return 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (! $thirdparty_seller->localtax2_assuj) return 0;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif ($local == 1 && ! $thirdparty_seller->localtax1_assuj) return 0;\n\t\tif ($local == 2 && ! $thirdparty_seller->localtax2_assuj) return 0;\n\t}\n\n\t// For some country MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY is forced to on.\n\tif (in_array($mysoc->country_code, array('ES')))\n\t{\n\t    $conf->global->MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY = 1;\n\t}\n\n\t// Search local taxes\n\tif (! empty($conf->global->MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY))\n\t{\n    \tif ($local==1)\n    \t{\n    \t\tif ($thirdparty_seller != $mysoc)\n    \t\t{\n    \t\t\tif (!isOnlyOneLocalTax($local))  // TODO We should provide $vatrate to search on correct line and not always on line with highest vat rate\n    \t\t\t{\n    \t\t\t\treturn $thirdparty_seller->localtax1_value;\n    \t\t\t}\n    \t\t}\n    \t\telse  // i am the seller\n    \t\t{\n    \t\t\tif (!isOnlyOneLocalTax($local))  // TODO If seller is me, why not always returning this, even if there is only one locatax vat.\n    \t\t\t{\n    \t\t\t\treturn $conf->global->MAIN_INFO_VALUE_LOCALTAX1;\n    \t\t\t}\n    \t\t}\n    \t}\n    \tif ($local==2)\n    \t{\n    \t\tif ($thirdparty_seller != $mysoc)\n    \t\t{\n    \t\t\tif (!isOnlyOneLocalTax($local))  // TODO We should provide $vatrate to search on correct line and not always on line with highest vat rate\n    \t\t\t// TODO We should also return value defined on thirdparty only if defined\n    \t\t\t{\n    \t\t\t\treturn $thirdparty_seller->localtax2_value;\n    \t\t\t}\n    \t\t}\n    \t\telse  // i am the seller\n    \t\t{\n    \t\t\tif (!isOnlyOneLocalTax($local))  // This is for spain only, we don't return value found into datbase even if there is only one locatax vat.\n    \t\t\t{\n    \t\t\t\treturn $conf->global->MAIN_INFO_VALUE_LOCALTAX2;\n    \t\t\t}\n    \t\t}\n    \t}\n\t}\n\n\t// By default, search value of local tax on line of common tax\n\t$sql  = \"SELECT t.localtax1, t.localtax2, t.localtax1_type, t.localtax2_type\";\n   \t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n   \t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$thirdparty_seller->country_code.\"'\";\n   \t$sql .= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n   \tif ($vatratecode) $sql.= \" AND t.code ='\".$vatratecode.\"'\";\t\t// If we have the code, we use it in priority\n   \telse $sql.= \" AND t.recuperableonly ='\".$vatnpr.\"'\";\n   \tdol_syslog(\"get_localtax\", LOG_DEBUG);\n   \t$resql=$db->query($sql);\n\n   \tif ($resql)\n   \t{\n   \t\t$obj = $db->fetch_object($resql);\n   \t\tif ($local==1) return $obj->localtax1;\n   \t\telseif ($local==2) return $obj->localtax2;\n\t}\n\n\treturn 0;\n}\n\n\n/**\n * Return true if LocalTax (1 or 2) is unique.\n * Example: If localtax1 is 5 on line with highest common vat rate, return true\n * Example: If localtax1 is 5:8:15 on line with highest common vat rate, return false\n *\n * @param   int \t$local\tLocal tax to test (1 or 2)\n * @return  boolean \t\tTrue if LocalTax have multiple values, False if not\n */\nfunction isOnlyOneLocalTax($local)\n{\n\t$tax=get_localtax_by_third($local);\n\n\t$valors=explode(\":\", $tax);\n\n\tif (count($valors)>1)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\n\n/**\n * Get values of localtaxes (1 or 2) for company country for the common vat with the highest value\n *\n * @param\tint\t\t$local \tLocalTax to get\n * @return\tnumber\t\t\tValues of localtax\n */\nfunction get_localtax_by_third($local)\n{\n\tglobal $db, $mysoc;\n\t$sql =\"SELECT t.localtax1, t.localtax2 \";\n\t$sql.=\" FROM \".MAIN_DB_PREFIX.\"c_tva as t inner join \".MAIN_DB_PREFIX.\"c_country as c ON c.rowid=t.fk_pays\";\n\t$sql.=\" WHERE c.code = '\".$mysoc->country_code.\"' AND t.active = 1 AND t.taux=(\";\n\t$sql.=\"  SELECT max(tt.taux) FROM \".MAIN_DB_PREFIX.\"c_tva as tt inner join \".MAIN_DB_PREFIX.\"c_country as c ON c.rowid=tt.fk_pays\";\n\t$sql.=\"  WHERE c.code = '\".$mysoc->country_code.\"' AND tt.active = 1\";\n\t$sql.=\"  )\";\n\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($local==1) return $obj->localtax1;\n\t\telseif ($local==2) return $obj->localtax2;\n\t}\n\n\treturn 0;\n\n}\n\n\n/**\n *  Get vat main information from Id.\n *  You can call getLocalTaxesFromRate after to get other fields.\n *\n *  @param\tint|string  $vatrate\t\t    VAT ID or Rate. Value can be value or the string with code into parenthesis or rowid if $firstparamisid is 1. Example: '8.5' or '8.5 (8.5NPR)' or 123.\n *  @param\tSociete\t    $buyer         \t\tCompany object\n *  @param\tSociete\t    $seller        \t\tCompany object\n *  @param  int         $firstparamisid     1 if first param is id into table (use this if you can)\n *  @return\tarray       \t  \t\t\t\tarray('rowid'=> , 'code'=> ...)\n *  @see getLocalTaxesFromRate\n */\nfunction getTaxesFromId($vatrate, $buyer=null, $seller=null, $firstparamisid=1)\n{\n    global $db, $mysoc;\n\n    dol_syslog(\"getTaxesFromId vatrowid=\".$vatrate);\n\n    // Search local taxes\n    $sql = \"SELECT t.rowid, t.code, t.taux as rate, t.recuperableonly as npr, t.accountancy_code_sell, t.accountancy_code_buy\";\n    $sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t\";\n    if ($firstparamisid) $sql.= \" WHERE t.rowid = \".(int) $vatrate;\n    else\n    {\n        $vatratecleaned = $vatrate;\n        $vatratecode = '';\n        if (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg))      // If vat is \"xx (yy)\"\n        {\n            $vatratecleaned = $reg[1];\n            $vatratecode = $reg[2];\n        }\n\n        $sql.=\", \".MAIN_DB_PREFIX.\"c_country as c\";\n        if ($mysoc->country_code == 'ES') $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$buyer->country_code.\"'\";    // local tax in spain use the buyer country ??\n        else $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$seller->country_code.\"'\";\n        $sql.= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n        if ($vatratecode) $sql.= \" AND t.code = '\".$vatratecode.\"'\";\n    }\n\n    $resql=$db->query($sql);\n    if ($resql)\n    {\n        $obj = $db->fetch_object($resql);\n        if ($obj) return array('rowid'=>$obj->rowid, 'code'=>$obj->code, 'rate'=>$obj->rate, 'npr'=>$obj->npr, 'accountancy_code_sell'=>$obj->accountancy_code_sell, 'accountancy_code_buy'=>$obj->accountancy_code_buy);\n        else return array();\n    }\n    else dol_print_error($db);\n\n    return array();\n}\n\n/**\n *  Get type and rate of localtaxes for a particular vat rate/country fo thirdparty\n *  TODO\n *  This function is ALSO called to retrieve type for building PDF. Such call of function must be removed.\n *  Instead this function must be called when adding a line to get the array of localtax and type, and then\n *  provide it to the function calcul_price_total.\n *\n *  @param\tint|string  $vatrate\t\t\tVAT ID or Rate. Value can be value or the string with code into parenthesis or rowid if $firstparamisid is 1. Example: '8.5' or '8.5 (8.5NPR)' or 123.\n *  @param\tint\t\t    $local              Number of localtax (1 or 2, or 0 to return 1 & 2)\n *  @param\tSociete\t    $buyer         \t\tCompany object\n *  @param\tSociete\t    $seller        \t\tCompany object\n *  @param  int         $firstparamisid     1 if first param is id into table (use this if you can)\n *  @return\tarray    \t    \t\t\t\tarray(localtax_type1(1-6/0 if not found), rate localtax1, localtax_type2, rate localtax2, accountancycodecust, accountancycodesupp)\n *  @see getTaxesFromId\n */\nfunction getLocalTaxesFromRate($vatrate, $local, $buyer, $seller, $firstparamisid=0)\n{\n\tglobal $db, $mysoc;\n\n\tdol_syslog(\"getLocalTaxesFromRate vatrate=\".$vatrate.\" local=\".$local);\n\n\t// Search local taxes\n\t$sql  = \"SELECT t.localtax1, t.localtax1_type, t.localtax2, t.localtax2_type, t.accountancy_code_sell, t.accountancy_code_buy\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t\";\n\tif ($firstparamisid) $sql.= \" WHERE t.rowid = \".(int) $vatrate;\n\telse\n\t{\n\t    $vatratecleaned = $vatrate;\n\t    $vatratecode = '';\n\t    if (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg))      // If vat is \"xx (yy)\"\n\t    {\n\t        $vatratecleaned = $reg[1];\n\t        $vatratecode = $reg[2];\n\t    }\n\n\t    $sql.=\", \".MAIN_DB_PREFIX.\"c_country as c\";\n    \tif ($mysoc->country_code == 'ES') $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$buyer->country_code.\"'\";    // local tax in spain use the buyer country ??\n    \telse $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$seller->country_code.\"'\";\n    \t$sql.= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n    \tif ($vatratecode) $sql.= \" AND t.code = '\".$vatratecode.\"'\";\n\t}\n\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($local == 1)\n\t\t{\n\t\t\tif (! isOnlyOneLocalTax(1))\n\t\t\t{\n\t\t\t\treturn array($obj->localtax1_type, get_localtax($vatrate, $local, $buyer, $seller), $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn array($obj->localtax1_type, $obj->localtax1,$obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t}\n\t\t}\n\t\telseif ($local == 2)\n\t\t{\n\t\t\tif (! isOnlyOneLocalTax(2))\n\t\t\t{\n\t\t\t\treturn array($obj->localtax2_type, get_localtax($vatrate, $local, $buyer, $seller),$obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn array($obj->localtax2_type, $obj->localtax2,$obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(! isOnlyOneLocalTax(1))\n\t\t\t{\n\t\t\t\tif(! isOnlyOneLocalTax(2))\n\t\t\t\t{\n\t\t\t\t\treturn array($obj->localtax1_type, get_localtax($vatrate, 1, $buyer, $seller), $obj->localtax2_type, get_localtax($vatrate, 2, $buyer, $seller), $obj->accountancy_code_sell,$obj->accountancy_code_buy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn array($obj->localtax1_type, get_localtax($vatrate, 1, $buyer, $seller), $obj->localtax2_type, $obj->localtax2, $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(! isOnlyOneLocalTax(2))\n\t\t\t\t{\n\t\t\t\t\treturn array($obj->localtax1_type, $obj->localtax1, $obj->localtax2_type, get_localtax($vatrate, 2, $buyer, $seller), $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn array($obj->localtax1_type, $obj->localtax1, $obj->localtax2_type, $obj->localtax2, $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tReturn vat rate of a product in a particular selling country or default country vat if product is unknown\n *  Function called by get_default_tva\n *\n *  @param\tint\t\t\t$idprod          \tId of product or 0 if not a predefined product\n *  @param  Societe\t\t$thirdparty_seller  Thirdparty with a ->country_code defined (FR, US, IT, ...)\n *\t@param\tint\t\t\t$idprodfournprice\tId product_fournisseur_price (for \"supplier\" order/invoice)\n *  @return float|string   \t\t\t\t    Vat rate to use with format 5.0 or '5.0 (XXX)'\n *  @see get_product_localtax_for_country\n */\nfunction get_product_vat_for_country($idprod, $thirdparty_seller, $idprodfournprice=0)\n{\n\tglobal $db,$conf,$mysoc;\n\n\trequire_once DOL_DOCUMENT_ROOT . '/product/class/product.class.php';\n\n\t$ret=0;\n\t$found=0;\n\n\tif ($idprod > 0)\n\t{\n\t\t// Load product\n\t\t$product=new Product($db);\n\t\t$result=$product->fetch($idprod);\n\n\t\tif ($mysoc->country_code == $thirdparty_seller->country_code) // If selling country is ours\n\t\t{\n\t\t\tif ($idprodfournprice > 0)     // We want vat for product for a \"supplier\" order or invoice\n\t\t\t{\n\t\t\t\t$product->get_buyprice($idprodfournprice,0,0,0);\n\t\t\t\t$ret=$product->vatrate_supplier;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$ret=$product->tva_tx;    // Default vat of product we defined\n\t\t\t\tif ($product->default_vat_code) $ret.=' ('.$product->default_vat_code.')';\n\t\t\t}\n\t\t\t$found=1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// TODO Read default product vat according to countrycode and product. Vat for couple countrycode/product is a feature not implemeted yet.\n\t\t\t// May be usefull/required if hidden option SERVICE_ARE_ECOMMERCE_200238EC is on\n\t\t}\n\t}\n\n\tif (! $found)\n\t{\n\t\tif (empty($conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS))\n\t\t{\n\t\t\t// If vat of product for the country not found or not defined, we return the first higher vat of country.\n\t\t\t$sql = \"SELECT taux as vat_rate\";\n\t\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t\t$sql.= \" WHERE t.active=1 AND t.fk_pays = c.rowid AND c.code='\".$thirdparty_seller->country_code.\"'\";\n\t\t\t$sql.= \" ORDER BY t.taux DESC, t.code ASC, t.recuperableonly ASC\";\n\t\t\t$sql.= $db->plimit(1);\n\n\t\t\t$resql=$db->query($sql);\n\t\t\tif ($resql)\n\t\t\t{\n\t\t\t\t$obj=$db->fetch_object($resql);\n\t\t\t\tif ($obj)\n\t\t\t\t{\n\t\t\t\t\t$ret=$obj->vat_rate;\n\t\t\t\t}\n\t\t\t\t$db->free($sql);\n\t\t\t}\n\t\t\telse dol_print_error($db);\n\t\t}\n\t\telse $ret=$conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS;    // Forced value if autodetect fails\n\t}\n\n\tdol_syslog(\"get_product_vat_for_country: ret=\".$ret);\n\treturn $ret;\n}\n\n/**\n *\tReturn localtax vat rate of a product in a particular selling country or default country vat if product is unknown\n *\n *  @param\tint\t\t$idprod         \t\tId of product\n *  @param  int\t\t$local          \t\t1 for localtax1, 2 for localtax 2\n *  @param  Societe\t$thirdparty_seller    \tThirdparty with a ->country_code defined (FR, US, IT, ...)\n *  @return int             \t\t\t\t<0 if KO, Vat rate if OK\n *  @see get_product_vat_for_country\n */\nfunction get_product_localtax_for_country($idprod, $local, $thirdparty_seller)\n{\n\tglobal $db,$mysoc;\n\n\tif (! class_exists('Product')) {\n\t\trequire_once DOL_DOCUMENT_ROOT . '/product/class/product.class.php';\n\t}\n\n\t$ret=0;\n\t$found=0;\n\n\tif ($idprod > 0)\n\t{\n\t\t// Load product\n\t\t$product=new Product($db);\n\t\t$result=$product->fetch($idprod);\n\n\t\tif ($mysoc->country_code == $thirdparty_seller->country_code) // If selling country is ours\n\t\t{\n\t\t\t/* Not defined yet, so we don't use this\n\t\t\tif ($local==1) $ret=$product->localtax1_tx;\n\t\t\telseif ($local==2) $ret=$product->localtax2_tx;\n\t\t\t$found=1;\n\t\t\t*/\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// TODO Read default product vat according to countrycode and product\n\n\n\t\t}\n\t}\n\n\tif (! $found)\n\t{\n\t\t// If vat of product for the country not found or not defined, we return higher vat of country.\n\t\t$sql = \"SELECT taux as vat_rate, localtax1, localtax2\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t$sql.= \" WHERE t.active=1 AND t.fk_pays = c.rowid AND c.code='\".$thirdparty_seller->country_code.\"'\";\n\t\t$sql.= \" ORDER BY t.taux DESC, t.recuperableonly ASC\";\n\t\t$sql.= $db->plimit(1);\n\n\t\t$resql=$db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$obj=$db->fetch_object($resql);\n\t\t\tif ($obj)\n\t\t\t{\n\t\t\t\tif ($local==1) $ret=$obj->localtax1;\n\t\t\t\telseif ($local==2) $ret=$obj->localtax2;\n\t\t\t}\n\t\t}\n\t\telse dol_print_error($db);\n\t}\n\n\tdol_syslog(\"get_product_localtax_for_country: ret=\".$ret);\n\treturn $ret;\n}\n\n/**\n *\tFunction that return vat rate of a product line (according to seller, buyer and product vat rate)\n *   Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n *\t Si le (pays vendeur = pays acheteur) alors TVA par defaut=TVA du produit vendu. Fin de regle.\n *\t Si (vendeur et acheteur dans Communaute europeenne) et (bien vendu = moyen de transports neuf comme auto, bateau, avion) alors TVA par defaut=0 (La TVA doit etre paye par acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n *\t Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = particulier ou entreprise sans num TVA intra) alors TVA par defaut=TVA du produit vendu. Fin de regle\n *\t Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = entreprise avec num TVA) intra alors TVA par defaut=0. Fin de regle\n *\t Sinon TVA proposee par defaut=0. Fin de regle.\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tObjet societe vendeuse\n *\t@param  Societe\t\t$thirdparty_buyer   \tObjet societe acheteuse\n *\t@param  int\t\t\t$idprod\t\t\t\t\tId product\n *\t@param\tint\t\t\t$idprodfournprice\t\tId product_fournisseur_price (for supplier order/invoice)\n *\t@return float|string   \t\t\t\t      \tVat rate to use with format 5.0 or '5.0 (XXX)', -1 if we can't guess it\n *  @see get_default_npr, get_default_localtax\n */\nfunction get_default_tva(Societe $thirdparty_seller, Societe $thirdparty_buyer, $idprod=0, $idprodfournprice=0)\n{\n\tglobal $conf;\n\n\t// Note: possible values for tva_assuj are 0/1 or franchise/reel\n\t$seller_use_vat=((is_numeric($thirdparty_seller->tva_assuj) && ! $thirdparty_seller->tva_assuj) || (! is_numeric($thirdparty_seller->tva_assuj) && $thirdparty_seller->tva_assuj=='franchise'))?0:1;\n\n\t$seller_country_code=$thirdparty_seller->country_code;\n\t$seller_in_cee=$thirdparty_seller->isInEEC();\n\n\t$buyer_country_code=$thirdparty_buyer->country_code;\n\t$buyer_in_cee=$thirdparty_buyer->isInEEC();\n\n\tdol_syslog(\"get_default_tva: seller use vat=\".$seller_use_vat.\", seller country=\".$seller_country_code.\", seller in cee=\".$seller_in_cee.\", buyer country=\".$buyer_country_code.\", buyer in cee=\".$buyer_in_cee.\", idprod=\".$idprod.\", idprodfournprice=\".$idprodfournprice.\", SERVICE_ARE_ECOMMERCE_200238EC=\".(! empty($conf->global->SERVICES_ARE_ECOMMERCE_200238EC)?$conf->global->SERVICES_ARE_ECOMMERCE_200238EC:''));\n\n\t// If services are eServices according to EU Council Directive 2002/38/EC (http://ec.europa.eu/taxation_customs/taxation/vat/traders/e-commerce/article_1610_en.htm)\n\t// we use the buyer VAT.\n\tif (! empty($conf->global->SERVICE_ARE_ECOMMERCE_200238EC))\n\t{\n\t\tif ($seller_in_cee && $buyer_in_cee && ! $thirdparty_buyer->isACompany())\n\t\t{\n\t\t\t//print 'VATRULE 0';\n\t\t\treturn get_product_vat_for_country($idprod,$thirdparty_buyer,$idprodfournprice);\n\t\t}\n\t}\n\n\t// If seller does not use VAT\n\tif (! $seller_use_vat)\n\t{\n\t\t//print 'VATRULE 1';\n\t\treturn 0;\n\t}\n\n\t// Le test ci-dessus ne devrait pas etre necessaire. Me signaler l'exemple du cas juridique concerne si le test suivant n'est pas suffisant.\n\n\t// Si le (pays vendeur = pays acheteur) alors la TVA par defaut=TVA du produit vendu. Fin de regle.\n\tif (($seller_country_code == $buyer_country_code)\n\t|| (in_array($seller_country_code,array('FR,MC')) && in_array($buyer_country_code,array('FR','MC')))) // Warning ->country_code not always defined\n\t{\n\t\t//print 'VATRULE 2';\n\t\treturn get_product_vat_for_country($idprod,$thirdparty_seller,$idprodfournprice);\n\t}\n\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (bien vendu = moyen de transports neuf comme auto, bateau, avion) alors TVA par defaut=0 (La TVA doit etre paye par l'acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n\t// Not supported\n\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = entreprise) alors TVA par defaut=0. Fin de regle\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = particulier) alors TVA par defaut=TVA du produit vendu. Fin de regle\n\tif (($seller_in_cee && $buyer_in_cee))\n\t{\n\t\t$isacompany=$thirdparty_buyer->isACompany();\n\t\tif ($isacompany)\n\t\t{\n\t\t\t//print 'VATRULE 3';\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//print 'VATRULE 4';\n\t\t\treturn get_product_vat_for_country($idprod,$thirdparty_seller,$idprodfournprice);\n\t\t}\n\t}\n\n\t// Sinon la TVA proposee par defaut=0. Fin de regle.\n\t// Rem: Cela signifie qu'au moins un des 2 est hors Communaute europeenne et que le pays differe\n\t//print 'VATRULE 5';\n\treturn 0;\n}\n\n\n/**\n *\tFonction qui renvoie si tva doit etre tva percue recuperable\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tThirdparty seller\n *\t@param  Societe\t\t$thirdparty_buyer   \tThirdparty buyer\n *  @param  int\t\t\t$idprod                 Id product\n *  @param\tint\t\t\t$idprodfournprice\t\tId supplier price for product\n *\t@return float       \t\t\t        \t0 or 1\n *  @see get_default_tva, get_default_localtax\n */\nfunction get_default_npr(Societe $thirdparty_seller, Societe $thirdparty_buyer, $idprod=0, $idprodfournprice=0)\n{\n\tglobal $db;\n\n\tif ($idprodfournprice > 0)\n\t{\n\t\tif (! class_exists('ProductFournisseur'))\n\t\t\trequire_once DOL_DOCUMENT_ROOT . '/fourn/class/fournisseur.product.class.php';\n\t\t$prodprice = new ProductFournisseur($db);\n\t\t$prodprice->fetch_product_fournisseur_price($idprodfournprice);\n\t\treturn $prodprice->fourn_tva_npr;\n\t}\n\telseif ($idprod > 0)\n\t{\n\t\tif (! class_exists('Product'))\n\t\t\trequire_once DOL_DOCUMENT_ROOT . '/product/class/product.class.php';\n\t\t$prod = new Product($db);\n\t\t$prod->fetch($idprod);\n\t\treturn $prod->tva_npr;\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tFunction that return localtax of a product line (according to seller, buyer and product vat rate)\n *   Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n *\t Si le (pays vendeur = pays acheteur) alors TVA par defaut=TVA du produit vendu. Fin de regle.\n *\t Sinon TVA proposee par defaut=0. Fin de regle.\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tThirdparty seller\n *\t@param  Societe\t\t$thirdparty_buyer   \tThirdparty buyer\n *  @param\tint\t\t\t$local\t\t\t\t\tLocaltax to process (1 or 2)\n *\t@param  int\t\t\t$idprod\t\t\t\t\tId product\n *\t@return integer        \t\t\t\t       \tlocaltax, -1 si ne peut etre determine\n *  @see get_default_tva, get_default_npr\n */\nfunction get_default_localtax($thirdparty_seller, $thirdparty_buyer, $local, $idprod=0)\n{\n\tglobal $mysoc;\n\n\tif (!is_object($thirdparty_seller)) return -1;\n\tif (!is_object($thirdparty_buyer)) return -1;\n\n\tif ($local==1) // Localtax 1\n\t{\n\t\tif ($mysoc->country_code == 'ES')\n\t\t{\n\t\t\tif (is_numeric($thirdparty_buyer->localtax1_assuj) && ! $thirdparty_buyer->localtax1_assuj) return 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Si vendeur non assujeti a Localtax1, localtax1 par default=0\n\t\t\tif (is_numeric($thirdparty_seller->localtax1_assuj) && ! $thirdparty_seller->localtax1_assuj) return 0;\n\t\t\tif (! is_numeric($thirdparty_seller->localtax1_assuj) && $thirdparty_seller->localtax1_assuj=='localtax1off') return 0;\n\t\t}\n\t}\n\telseif ($local==2) //I Localtax 2\n\t{\n\t\t// Si vendeur non assujeti a Localtax2, localtax2 par default=0\n\t\tif (is_numeric($thirdparty_seller->localtax2_assuj) && ! $thirdparty_seller->localtax2_assuj) return 0;\n\t\tif (! is_numeric($thirdparty_seller->localtax2_assuj) && $thirdparty_seller->localtax2_assuj=='localtax2off') return 0;\n\t}\n\n\tif ($thirdparty_seller->country_code == $thirdparty_buyer->country_code)\n\t{\n\t\treturn get_product_localtax_for_country($idprod, $local, $thirdparty_seller);\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tReturn yes or no in current language\n *\n *\t@param\tstring\t$yesno\t\t\tValue to test (1, 'yes', 'true' or 0, 'no', 'false')\n *\t@param\tinteger\t$case\t\t\t1=Yes/No, 0=yes/no, 2=Disabled checkbox, 3=Disabled checkbox + Yes/No\n *\t@param\tint\t\t$color\t\t\t0=texte only, 1=Text is formated with a color font style ('ok' or 'error'), 2=Text is formated with 'ok' color.\n *\t@return\tstring\t\t\t\t\tHTML string\n */\nfunction yn($yesno, $case=1, $color=0)\n{\n\tglobal $langs;\n\t$result='unknown'; $classname='';\n\tif ($yesno == 1 || strtolower($yesno) == 'yes' || strtolower($yesno) == 'true') \t// A mettre avant test sur no a cause du == 0\n\t{\n\t\t$result=$langs->trans('yes');\n\t\tif ($case == 1 || $case == 3) $result=$langs->trans(\"Yes\");\n\t\tif ($case == 2) $result='<input type=\"checkbox\" value=\"1\" checked disabled>';\n\t\tif ($case == 3) $result='<input type=\"checkbox\" value=\"1\" checked disabled> '.$result;\n\n\t\t$classname='ok';\n\t}\n\telseif ($yesno == 0 || strtolower($yesno) == 'no' || strtolower($yesno) == 'false')\n\t{\n\t\t$result=$langs->trans(\"no\");\n\t\tif ($case == 1 || $case == 3) $result=$langs->trans(\"No\");\n\t\tif ($case == 2) $result='<input type=\"checkbox\" value=\"0\" disabled>';\n\t\tif ($case == 3) $result='<input type=\"checkbox\" value=\"0\" disabled> '.$result;\n\n\t\tif ($color == 2) $classname='ok';\n\t\telse $classname='error';\n\t}\n\tif ($color) return '<font class=\"'.$classname.'\">'.$result.'</font>';\n\treturn $result;\n}\n\n\n/**\n *\tReturn a path to have a directory according to object.\n *  New usage:       $conf->module->multidir_output[$object->entity].'/'.get_exdir(0, 0, 0, 1, $object, $modulepart)\n *         or:       $conf->module->dir_output.'/'.get_exdir(0, 0, 0, 1, $object, $modulepart)     if multidir_output not defined.\n *  Old usage:       '015' with level 3->\"0/1/5/\", '015' with level 1->\"5/\", 'ABC-1' with level 3 ->\"0/0/1/\"\n *\n *\t@param\tstring\t$num            Id of object (deprecated, $object will be used in future)\n *\t@param  int\t\t$level\t\t    Level of subdirs to return (1, 2 or 3 levels). (deprecated, global option will be used in future)\n * \t@param\tint\t\t$alpha\t\t    0=Keep number only to forge path, 1=Use alpha part afer the - (By default, use 0). (deprecated, global option will be used in future)\n *  @param  int\t\t$withoutslash   0=With slash at end (except if '/', we return ''), 1=without slash at end\n *  @param\tObject\t$object\t\t\tObject\n *  @param\tstring\t$modulepart\t\tType of object ('invoice_supplier, 'donation', 'invoice', ...')\n *  @return\tstring\t\t\t\t\tDir to use ending. Example '' or '1/' or '1/2/'\n */\nfunction get_exdir($num, $level, $alpha, $withoutslash, $object, $modulepart)\n{\n\tglobal $conf;\n\n\t$path = '';\n\n\t$arrayforoldpath=array('cheque','user','category','holiday','shipment','supplier_invoice','invoice_supplier','mailing','supplier_payment');\n\tif (! empty($conf->global->PRODUCT_USE_OLD_PATH_FOR_PHOTO)) $arrayforoldpath[]='product';\n\tif (! empty($level) && in_array($modulepart, $arrayforoldpath))\n\t{\n\t\t// This part should be removed once all code is using \"get_exdir\" to forge path, with all parameters provided.\n\t\tif (empty($alpha)) $num = preg_replace('/([^0-9])/i','',$num);\n\t\telse $num = preg_replace('/^.*\\-/i','',$num);\n\t\t$num = substr(\"000\".$num, -$level);\n\t\tif ($level == 1) $path = substr($num,0,1);\n\t\tif ($level == 2) $path = substr($num,1,1).'/'.substr($num,0,1);\n\t\tif ($level == 3) $path = substr($num,2,1).'/'.substr($num,1,1).'/'.substr($num,0,1);\n\t}\n\telse\n\t{\n\t\t// TODO\n\t\t// We will enhance here a common way of forging path for document storage\n\t\t// Here, object->id, object->ref and object->modulepart are required.\n        if (in_array($modulepart, array('thirdparty','contact','member')))\n        {\n            $path=$object->ref?$object->ref:$object->id;\n        }\n\t}\n\n\tif (empty($withoutslash) && ! empty($path)) $path.='/';\n\treturn $path;\n}\n\n/**\n *\tCreation of a directory (this can create recursive subdir)\n *\n *\t@param\tstring\t$dir\t\tDirectory to create (Separator must be '/'. Example: '/mydir/mysubdir')\n *\t@param\tstring\t$dataroot\tData root directory (To avoid having the data root in the loop. Using this will also lost the warning on first dir PHP has no permission when open_basedir is used)\n *  @param\tint\t\t$newmask\tMask for new file (Defaults to $conf->global->MAIN_UMASK or 0755 if unavailable). Example: '0444'\n *\t@return int         \t\t< 0 if KO, 0 = already exists, > 0 if OK\n */\nfunction dol_mkdir($dir, $dataroot='', $newmask=null)\n{\n\tglobal $conf;\n\n\tdol_syslog(\"functions.lib::dol_mkdir: dir=\".$dir,LOG_INFO);\n\n\t$dir_osencoded=dol_osencode($dir);\n\tif (@is_dir($dir_osencoded)) return 0;\n\n\t$nberr=0;\n\t$nbcreated=0;\n\n\t$ccdir='';\n\tif (! empty($dataroot)) {\n\t\t// Remove data root from loop\n\t\t$dir = str_replace($dataroot.'/', '', $dir);\n\t\t$ccdir = $dataroot.'/';\n\t}\n\n\t$cdir = explode(\"/\", $dir);\n\t$num=count($cdir);\n\tfor ($i = 0; $i < $num; $i++)\n\t{\n\t\tif ($i > 0) $ccdir .= '/'.$cdir[$i];\n\t\telse $ccdir .= $cdir[$i];\n\t\tif (preg_match(\"/^.:$/\",$ccdir,$regs)) continue;\t// Si chemin Windows incomplet, on poursuit par rep suivant\n\n\t\t// Attention, le is_dir() peut echouer bien que le rep existe.\n\t\t// (ex selon config de open_basedir)\n\t\tif ($ccdir)\n\t\t{\n\t\t\t$ccdir_osencoded=dol_osencode($ccdir);\n\t\t\tif (! @is_dir($ccdir_osencoded))\n\t\t\t{\n\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Directory '\".$ccdir.\"' does not exists or is outside open_basedir PHP setting.\",LOG_DEBUG);\n\n\t\t\t\tumask(0);\n\t\t\t\t$dirmaskdec=octdec($newmask);\n\t\t\t\tif (empty($newmask)) {\n\t\t\t\t\t$dirmaskdec = empty( $conf->global->MAIN_UMASK ) ? octdec( '0755' ) : octdec( $conf->global->MAIN_UMASK );\n\t\t\t\t}\n\t\t\t\t$dirmaskdec |= octdec('0111');  // Set x bit required for directories\n\t\t\t\tif (! @mkdir($ccdir_osencoded, $dirmaskdec))\n\t\t\t\t{\n\t\t\t\t\t// Si le is_dir a renvoye une fausse info, alors on passe ici.\n\t\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Fails to create directory '\".$ccdir.\"' or directory already exists.\",LOG_WARNING);\n\t\t\t\t\t$nberr++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Directory '\".$ccdir.\"' created\",LOG_DEBUG);\n\t\t\t\t\t$nberr=0;\t// On remet a zero car si on arrive ici, cela veut dire que les echecs precedents peuvent etre ignore\n\t\t\t\t\t$nbcreated++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$nberr=0;\t// On remet a zero car si on arrive ici, cela veut dire que les echecs precedents peuvent etre ignores\n\t\t\t}\n\t\t}\n\t}\n\treturn ($nberr ? -$nberr : $nbcreated);\n}\n\n\n/**\n *\tReturn picto saying a field is required\n *\n *\t@return  string\t\tChaine avec picto obligatoire\n */\nfunction picto_required()\n{\n\treturn '<span class=\"fieldrequired\">*</span>';\n}\n\n\n/**\n *\tClean a string from all HTML tags and entities\n *\n *\t@param\tstring\t$StringHtml\t\t\tString to clean\n *\t@param\tinteger\t$removelinefeed\t\t1=Replace also new lines by a space, 0=Only last one are removed\n *  @param  string\t$pagecodeto      \tEncoding of input/output string\n *\t@return string\t    \t\t\t\tString cleaned\n *\n * \t@see\t\tdol_escape_htmltag\n */\nfunction dol_string_nohtmltag($StringHtml,$removelinefeed=1,$pagecodeto='UTF-8')\n{\n\t$pattern = \"/<[^<>]+>/\";\n\t$StringHtml = preg_replace('/<br[^>]*>/', \"\\n\", $StringHtml);\n\t$temp = dol_html_entity_decode($StringHtml,ENT_COMPAT,$pagecodeto);\n\n    // Exemple of $temp: <a href=\"/myurl\" title=\"<u>A title</u>\">0000-021</a>\n    $temp = preg_replace($pattern,\"\",$temp);    // pass 1\n    // $temp after pass 1: <a href=\"/myurl\" title=\"A title\">0000-021\n    $temp = preg_replace($pattern,\"\",$temp);    // pass 2\n    // $temp after pass 2: 0000-021\n\n\t// Supprime aussi les retours\n\tif ($removelinefeed) $temp=str_replace(array(\"\\r\\n\",\"\\r\",\"\\n\"),\" \",$temp);\n\n\t// et les espaces doubles\n\twhile(strpos($temp,\"  \"))\n\t{\n\t\t$temp = str_replace(\"  \",\" \",$temp);\n\t}\n\t$CleanString = trim($temp);\n\treturn $CleanString;\n}\n\n\n/**\n * Return first line of text. Cut will depends if content is HTML or not.\n *\n * @param \tstring\t$text\t\tInput text\n * @param\tint\t\t$nboflines  Nb of lines to get (default is 1 = first line only)\n * @return\tstring\t\t\t\tOutput text\n * @see dol_nboflines_bis, dol_string_nohtmltag, dol_escape_htmltag\n */\nfunction dolGetFirstLineOfText($text, $nboflines=1)\n{\n\tif ($nboflines == 1)\n\t{\n\t\tif (dol_textishtml($text))\n\t\t{\n\t\t\t$firstline=preg_replace('/<br[^>]*>.*$/s','',$text);\t\t// The s pattern modifier means the . can match newline characters\n\t\t\t$firstline=preg_replace('/<div[^>]*>.*$/s','',$firstline);\t// The s pattern modifier means the . can match newline characters\n\n\t\t}\n\t\telse\n\t\t{\n\t    \t$firstline=preg_replace('/[\\n\\r].*/','',$text);\n\t\t}\n    \treturn $firstline.((strlen($firstline) != strlen($text))?'...':'');\n\t}\n\telse\n\t{\n\t\t$ishtml=0;\n\t\tif (dol_textishtml($text))\n\t\t{\n\t\t\t$text=preg_replace('/\\n/','',$text);\n\t\t\t$ishtml=1;\n\t\t\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \" \", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \"<br>\", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\t\t}\n\n\t\t$text = strtr($text, $repTable);\n\t\tif ($charset == 'UTF-8') { $pattern = '/(<br[^>]*>)/Uu'; }\t// /U is to have UNGREEDY regex to limit to one html tag. /u is for UTF8 support\n\t\telse $pattern = '/(<br[^>]*>)/U';\t\t\t\t\t\t\t// /U is to have UNGREEDY regex to limit to one html tag.\n\t\t$a = preg_split($pattern, $text, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t\t$firstline='';\n\t\t$i=0;\n\t\t$nba = count($a);\t// 2x nb of lines in $a because $a contains also a line for each new line separator\n\t\twhile (($i < $nba) && ($i < ($nboflines * 2)))\n\t\t{\n\t\t\tif ($i % 2 == 0) $firstline .= $a[$i];\n\t\t\telseif (($i < (($nboflines * 2) - 1)) && ($i < ($nba - 1))) $firstline .= ($ishtml?\"<br>\\n\":\"\\n\");\n\t\t\t$i++;\n\t\t}\n\t\tunset($a);\n    \treturn $firstline.(($i < $nba)?'...':'');\n\t}\n}\n\n\n/**\n * Replace CRLF in string with a HTML BR tag\n *\n * @param\tstring\t$stringtoencode\t\tString to encode\n * @param\tint     $nl2brmode\t\t\t0=Adding br before \\n, 1=Replacing \\n by br\n * @param   bool\t$forxml             false=Use <br>, true=Use <br />\n * @return\tstring\t\t\t\t\t\tString encoded\n * @see dol_nboflines, dolGetFirstLineOfText\n */\nfunction dol_nl2br($stringtoencode,$nl2brmode=0,$forxml=false)\n{\n\tif (!$nl2brmode) {\n\t\treturn nl2br($stringtoencode, $forxml);\n\t} else {\n\t\t$ret=preg_replace('/(\\r\\n|\\r|\\n)/i', ($forxml?'<br />':'<br>'), $stringtoencode);\n\t\treturn $ret;\n\t}\n}\n\n\n/**\n *\tThis function is called to encode a string into a HTML string but differs from htmlentities because\n * \ta detection is done before to see if text is already HTML or not. Also, all entities but &,<,> are converted.\n *  This permits to encode special chars to entities with no double encoding for already encoded HTML strings.\n * \tThis function also remove last EOL or BR if $removelasteolbr=1 (default).\n *  For PDF usage, you can show text by 2 ways:\n *              - writeHTMLCell -> param must be encoded into HTML.\n *              - MultiCell -> param must not be encoded into HTML.\n *              Because writeHTMLCell convert also \\n into <br>, if function\n *              is used to build PDF, nl2brmode must be 1.\n *\n *\t@param\tstring\t$stringtoencode\t\tString to encode\n *\t@param\tint\t\t$nl2brmode\t\t\t0=Adding br before \\n, 1=Replacing \\n by br (for use with FPDF writeHTMLCell function for example)\n *  @param  string\t$pagecodefrom       Pagecode stringtoencode is encoded\n *  @param\tint\t\t$removelasteolbr\t1=Remove last br or lasts \\n (default), 0=Do nothing\n *  @return\tstring\t\t\t\t\t\tString encoded\n */\nfunction dol_htmlentitiesbr($stringtoencode,$nl2brmode=0,$pagecodefrom='UTF-8',$removelasteolbr=1)\n{\n\t$newstring=$stringtoencode;\n\tif (dol_textishtml($stringtoencode))\t// Check if text is already HTML or not\n\t{\n\t\t$newstring=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i','<br>',$newstring);\t// Replace \"<br type=\"_moz\" />\" by \"<br>\". It's same and avoid pb with FPDF.\n\t\tif ($removelasteolbr) $newstring=preg_replace('/<br>$/i','',$newstring);\t// Remove last <br> (remove only last one)\n\t\t$newstring=strtr($newstring,array('&'=>'__and__','<'=>'__lt__','>'=>'__gt__','\"'=>'__dquot__'));\n\t\t$newstring=dol_htmlentities($newstring,ENT_COMPAT,$pagecodefrom);\t// Make entity encoding\n\t\t$newstring=strtr($newstring,array('__and__'=>'&','__lt__'=>'<','__gt__'=>'>','__dquot__'=>'\"'));\n\t}\n\telse\n\t{\n\t\tif ($removelasteolbr) $newstring=preg_replace('/(\\r\\n|\\r|\\n)$/i','',$newstring);\t// Remove last \\n (may remove several)\n\t\t$newstring=dol_nl2br(dol_htmlentities($newstring,ENT_COMPAT,$pagecodefrom),$nl2brmode);\n\t}\n\t// Other substitutions that htmlentities does not do\n\t//$newstring=str_replace(chr(128),'&euro;',$newstring);\t// 128 = 0x80. Not in html entity table.     // Seems useles with TCPDF. Make bug with UTF8 languages\n\treturn $newstring;\n}\n\n/**\n *\tThis function is called to decode a HTML string (it decodes entities and br tags)\n *\n *\t@param\tstring\t$stringtodecode\t\tString to decode\n *\t@param\tstring\t$pagecodeto\t\t\tPage code for result\n *\t@return\tstring\t\t\t\t\t\tString decoded\n */\nfunction dol_htmlentitiesbr_decode($stringtodecode,$pagecodeto='UTF-8')\n{\n\t$ret=dol_html_entity_decode($stringtodecode,ENT_COMPAT,$pagecodeto);\n\t$ret=preg_replace('/'.\"\\r\\n\".'<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i',\"<br>\",$ret);\n\t$ret=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>'.\"\\r\\n\".'/i',\"\\r\\n\",$ret);\n\t$ret=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>'.\"\\n\".'/i',\"\\n\",$ret);\n\t$ret=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i',\"\\n\",$ret);\n\treturn $ret;\n}\n\n/**\n *\tThis function remove all ending \\n and br at end\n *\n *\t@param\tstring\t$stringtodecode\t\tString to decode\n *\t@return\tstring\t\t\t\t\t\tString decoded\n */\nfunction dol_htmlcleanlastbr($stringtodecode)\n{\n\t$ret=preg_replace('/(<br>|<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>|'.\"\\n\".'|'.\"\\r\".')+$/i',\"\",$stringtodecode);\n\treturn $ret;\n}\n\n/**\n * Replace html_entity_decode functions to manage errors\n *\n * @param   string\t$a\t\tOperand a\n * @param   string\t$b\t\tOperand b (ENT_QUOTES=convert simple and double quotes)\n * @param   string\t$c\t\tOperand c\n * @return  string\t\t\tString decoded\n */\nfunction dol_html_entity_decode($a,$b,$c='UTF-8')\n{\n\treturn html_entity_decode($a,$b,$c);\n}\n\n/**\n * Replace htmlentities functions to manage errors http://php.net/manual/en/function.htmlentities.php\n * Goal of this function is to be sure to have default values of htmlentities that match what we need.\n *\n * @param   string  $string         The input string.\n * @param   int     $flags          Flags(see PHP doc above)\n * @param   string  $encoding       Encoding\n * @param   bool    $double_encode  When double_encode is turned off PHP will not encode existing html entities\n * @return  string  $ret            Encoded string\n */\nfunction dol_htmlentities($string, $flags=null, $encoding='UTF-8', $double_encode=false)\n{\n\treturn htmlentities($string, $flags, $encoding, $double_encode);\n}\n\n\n/**\n *\tCheck if a string is a correct iso string\n *\tIf not, it will we considered not HTML encoded even if it is by FPDF.\n *\tExample, if string contains euro symbol that has ascii code 128\n *\n *\t@param\tstring\t$s      String to check\n *\t@return\tint     \t\t0 if bad iso, 1 if good iso\n */\nfunction dol_string_is_good_iso($s)\n{\n\t$len=dol_strlen($s);\n\t$ok=1;\n\tfor($scursor=0;$scursor<$len;$scursor++)\n\t{\n\t\t$ordchar=ord($s{$scursor});\n\t\t//print $scursor.'-'.$ordchar.'<br>';\n\t\tif ($ordchar < 32 && $ordchar != 13 && $ordchar != 10) { $ok=0; break; }\n\t\tif ($ordchar > 126 && $ordchar < 160) { $ok=0; break; }\n\t}\n\treturn $ok;\n}\n\n\n/**\n *\tReturn nb of lines of a clear text\n *\n *\t@param\tstring\t$s\t\t\tString to check\n * \t@param\tint     $maxchar\tNot yet used\n *\t@return\tint\t\t\t\t\tNumber of lines\n *  @see\tdol_nboflines_bis, dolGetFirstLineOfText\n */\nfunction dol_nboflines($s,$maxchar=0)\n{\n\tif ($s == '') return 0;\n\t$arraystring=explode(\"\\n\",$s);\n\t$nb=count($arraystring);\n\n\treturn $nb;\n}\n\n\n/**\n *\tReturn nb of lines of a formated text with \\n and <br> (WARNING: string must not have mixed \\n and br separators)\n *\n *\t@param\tstring\t$text      \t\tText\n *\t@param\tint\t\t$maxlinesize  \tLargeur de ligne en caracteres (ou 0 si pas de limite - defaut)\n * \t@param\tstring\t$charset\t\tGive the charset used to encode the $text variable in memory.\n *\t@return int\t\t\t\t\t\tNumber of lines\n *\t@see\tdol_nboflines, dolGetFirstLineOfText\n */\nfunction dol_nboflines_bis($text,$maxlinesize=0,$charset='UTF-8')\n{\n\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \"<br>\", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\tif (dol_textishtml($text)) $repTable = array(\"\\t\" => \" \", \"\\n\" => \" \", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\n\t$text = strtr($text, $repTable);\n\tif ($charset == 'UTF-8') { $pattern = '/(<br[^>]*>)/Uu'; }\t// /U is to have UNGREEDY regex to limit to one html tag. /u is for UTF8 support\n\telse $pattern = '/(<br[^>]*>)/U';\t\t\t\t\t\t\t// /U is to have UNGREEDY regex to limit to one html tag.\n\t$a = preg_split($pattern, $text, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t$nblines = (int) floor((count($a)+1)/2);\n\t// count possible auto line breaks\n\tif($maxlinesize)\n\t{\n\t\tforeach ($a as $line)\n\t\t{\n\t\t\tif (dol_strlen($line)>$maxlinesize)\n\t\t\t{\n\t\t\t\t//$line_dec = html_entity_decode(strip_tags($line));\n\t\t\t\t$line_dec = html_entity_decode($line);\n\t\t\t\tif(dol_strlen($line_dec)>$maxlinesize)\n\t\t\t\t{\n\t\t\t\t\t$line_dec=wordwrap($line_dec,$maxlinesize,'\\n',true);\n\t\t\t\t\t$nblines+=substr_count($line_dec,'\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tunset($a);\n\treturn $nblines;\n}\n\n/**\n *\t Same function than microtime in PHP 5 but compatible with PHP4\n *\n * @return\t\tfloat\t\tTime (millisecondes) with microsecondes in decimal part\n * @deprecated Dolibarr does not support PHP4, you should use native function\n * @see microtime()\n */\nfunction dol_microtime_float()\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\treturn microtime(true);\n}\n\n/**\n *\tReturn if a text is a html content\n *\n *\t@param\tstring\t$msg\t\tContent to check\n *\t@param\tint\t\t$option\t\t0=Full detection, 1=Fast check\n *\t@return\tboolean\t\t\t\ttrue/false\n *\t@see\tdol_concatdesc\n */\nfunction dol_textishtml($msg,$option=0)\n{\n\tif ($option == 1)\n\t{\n\t\tif (preg_match('/<html/i',$msg))\t\t\t\treturn true;\n\t\telseif (preg_match('/<body/i',$msg))\t\t\treturn true;\n\t\telseif (preg_match('/<br/i',$msg))\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\tif (preg_match('/<html/i',$msg))\t\t\t\treturn true;\n\t\telseif (preg_match('/<body/i',$msg))\t\t\treturn true;\n\t\telseif (preg_match('/<(b|em|i|u)>/i',$msg))\t\treturn true;\n\t\telseif (preg_match('/<(br|div|font|li|p|span|strong|table)>/i',$msg)) \t  return true;\n\t\telseif (preg_match('/<(br|div|font|li|p|span|strong|table)\\s+[^<>\\/]*>/i',$msg)) return true;\n\t\telseif (preg_match('/<(br|div|font|li|p|span|strong|table)\\s+[^<>\\/]*\\/>/i',$msg)) return true;\n\t\telseif (preg_match('/<img\\s+[^<>]*src[^<>]*>/i',$msg)) return true;\t// must accept <img src=\"http://example.com/aaa.png\" />\n\t\telseif (preg_match('/<a\\s+[^<>]*href[^<>]*>/i',$msg)) return true;\t// must accept <a href=\"http://example.com/aaa.png\" />\n\t\telseif (preg_match('/<h[0-9]>/i',$msg))\t\t\treturn true;\n\t\telseif (preg_match('/&[A-Z0-9]{1,6};/i',$msg))\treturn true;    // Html entities names (http://www.w3schools.com/tags/ref_entities.asp)\n\t\telseif (preg_match('/&#[0-9]{2,3};/i',$msg))\treturn true;    // Html entities numbers (http://www.w3schools.com/tags/ref_entities.asp)\n\t\treturn false;\n\t}\n}\n\n/**\n *  Concat 2 descriptions with a new line between them (second operand after first one with appropriate new line separator)\n *  text1 html + text2 html => text1 + '<br>' + text2\n *  text1 html + text2 txt  => text1 + '<br>' + dol_nl2br(text2)\n *  text1 txt  + text2 html => dol_nl2br(text1) + '<br>' + text2\n *  text1 txt  + text2 txt  => text1 + '\\n' + text2\n *\n *  @param\tstring\t$text1\t\tText 1\n *  @param\tstring\t$text2\t\tText 2\n *  @param  bool\t$forxml     false=Use <br>, true=Use <br />\n *  @return\tstring\t\t\t\tText 1 + new line + Text2\n *  @see    dol_textishtml\n */\nfunction dol_concatdesc($text1,$text2,$forxml=false)\n{\n\t$ret='';\n\t$ret.= (! dol_textishtml($text1) && dol_textishtml($text2))?dol_nl2br($text1, 0, $forxml):$text1;\n\t$ret.= (! empty($text1) && ! empty($text2)) ? ((dol_textishtml($text1) || dol_textishtml($text2))?($forxml?\"<br \\>\\n\":\"<br>\\n\") : \"\\n\") : \"\";\n\t$ret.= (dol_textishtml($text1) && ! dol_textishtml($text2))?dol_nl2br($text2, 0, $forxml):$text2;\n\treturn $ret;\n}\n\n\n/**\n * Return array of possible common substitutions.\n *\n * @param\tTranslate\t$outputlangs\tOutput language\n * @param   int         $onlykey        Do not calculate heavy values of keys (performance enhancement when we need only the keys)\n * @param   array       $exclude        Array of family keys we want to exclude. For example array('mycompany', 'objectamount', 'date', 'user', ...)\n * @param   Object      $object         Object for keys on object\n * @return\tarray\t\t\t\t\t\tArray of substitutions\n */\nfunction getCommonSubstitutionArray($outputlangs, $onlykey=0, $exclude=null, $object=null)\n{\n    global $conf, $mysoc, $user;\n\n    $substitutionarray=array();\n\n    if (empty($exclude) || ! in_array('mycompany', $exclude))\n    {\n        $substitutionarray=array_merge($substitutionarray, array(\n            '__MYCOMPANY_NAME__' => $mysoc->name,\n            '__MYCOMPANY_EMAIL__' => $mysoc->email,\n            '__MYCOMPANY_PROFID1__' => $mysoc->idprof1,\n            '__MYCOMPANY_PROFID2__' => $mysoc->idprof2,\n            '__MYCOMPANY_PROFID3__' => $mysoc->idprof3,\n            '__MYCOMPANY_PROFID4__' => $mysoc->idprof4,\n            '__MYCOMPANY_PROFID5__' => $mysoc->idprof5,\n            '__MYCOMPANY_PROFID6__' => $mysoc->idprof6,\n            '__MYCOMPANY_CAPITAL__' => $mysoc->capital,\n            '__MYCOMPANY_COUNTRY_ID__' => $mysoc->country_id\n        ));\n    }\n    if (empty($exclude) || ! in_array('objectamount', $exclude))\n    {\n        if (is_object($object))       // For backward compatibility\n        {\n            $substitutionarray['__TOTAL_TTC__']    =is_object($object)?$object->total_ttc:'';\n            $substitutionarray['__TOTAL_HT__']     =is_object($object)?$object->total_ht:'';\n            $substitutionarray['__TOTAL_VAT__']    =is_object($object)?($object->total_vat?$object->total_vat:$object->total_tva):'';\n        }\n        $substitutionarray['__AMOUNT__']       =is_object($object)?$object->total_ttc:'';\n        $substitutionarray['__AMOUNT_WO_TAX__']=is_object($object)?$object->total_ht:'';\n        $substitutionarray['__AMOUNT_VAT__']   =is_object($object)?($object->total_vat?$object->total_vat:$object->total_tva):'';\n    }\n\n    if (empty($exclude) || ! in_array('date', $exclude))\n    {\n        include_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\n        if (! empty($onlykey))\n        {\n            $tmp=$tmp2=$tmp3=$tmp4=$tmp5=array();\n        }\n        else\n        {\n            $tmp=dol_getdate(dol_now(), true);\n            $tmp2=dol_get_prev_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n            $tmp3=dol_get_prev_month($tmp['mday'], $tmp['mon'], $tmp['year']);\n            $tmp4=dol_get_next_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n            $tmp5=dol_get_next_month($tmp['mday'], $tmp['mon'], $tmp['year']);\n        }\n        $substitutionarray=array_merge($substitutionarray, array(\n            '__DAY__' => $tmp['mday'],\n            '__MONTH__' => $tmp['mon'],\n            '__YEAR__' => $tmp['year'],\n            '__PREVIOUS_DAY__' => $tmp2['day'],\n            '__PREVIOUS_MONTH__' => $tmp3['month'],\n            '__PREVIOUS_YEAR__' => ($tmp['year'] - 1),\n            '__NEXT_DAY__' => $tmp4['day'],\n            '__NEXT_MONTH__' => $tmp5['month'],\n            '__NEXT_YEAR__' => ($tmp['year'] + 1),\n        ));\n    }\n\n    if (empty($exclude) || ! in_array('user', $exclude))\n    {\n        $substitutionarray=array_merge($substitutionarray, array(\n            '__USER_ID__' => $user->id,\n            '__USER_LOGIN__' => $user->login,\n            '__USER_LASTNAME__' => $user->lastname,\n            '__USER_FIRSTNAME__' => $user->firstname,\n            '__USER_FULLNAME__' => $user->getFullName($outputlangs),\n            '__USER_SUPERVISOR_ID__' => $user->fk_user\n        ));\n    }\n    if (! empty($conf->multicompany->enabled))\n    {\n        $substitutionarray=array_merge($substitutionarray, array('__ENTITY_ID__' => $conf->entity));\n    }\n\n    return $substitutionarray;\n}\n\n/**\n *  Make substition into a text string, replacing keys with vals from $substitutionarray (oldval=>newval).\n *\n *  @param\tstring\t\t$text\t      \t\t\tSource string in which we must do substitution\n *  @param  array\t\t$substitutionarray\t\tArray with key->val to substitute\n *  @param\tTranslate\t$outputlangs\t\t\tOutput language\n * \t@return string  \t\t    \t\t\t\tOutput string after substitutions\n *  @see\tcomplete_substitutions_array\n */\nfunction make_substitutions($text, $substitutionarray, $outputlangs=null)\n{\n\tglobal $conf, $langs;\n\n\tif (! is_array($substitutionarray)) return 'ErrorBadParameterSubstitutionArrayWhenCalling_make_substitutions';\n\n\tif (empty($outputlangs)) $outputlangs=$langs;\n\n\t// Make substitution for language keys\n\tif (is_object($outputlangs))\n\t{\n\t\twhile (preg_match('/__\\(([^\\)]*)\\)__/', $text, $reg))\n\t\t{\n\t\t    // If key is __(TranslationKey|langfile)__, then force load of langfile.lang\n\t\t\t$tmp=explode('|',$reg[1]);\n\t\t\tif (! empty($tmp[1])) $outputlangs->load($tmp[1]);\n\n\t\t\t$msgishtml = 0;\n\t\t\tif (dol_textishtml($text,1)) $msgishtml = 1;\n\n\t\t\t$text = preg_replace('/__\\('.preg_quote($reg[1], '/').'\\)__/', $msgishtml?dol_htmlentitiesbr($outputlangs->transnoentitiesnoconv($reg[1])):$outputlangs->transnoentitiesnoconv($reg[1]), $text);\n\t\t}\n\t}\n\n\t// Make substitition for array $substitutionarray\n\tforeach ($substitutionarray as $key => $value)\n\t{\n\t\tif ($key == '__SIGNATURE__' && (! empty($conf->global->MAIN_MAIL_DO_NOT_USE_SIGN))) $value='';\n\t\t$text=str_replace(\"$key\",\"$value\",$text);\t// We must keep the \" to work when value is 123.5 for example\n\t}\n\n\treturn $text;\n}\n\n/**\n *  Complete the $substitutionarray with more entries.\n *  Can also add substitution keys coming from external module that had set the \"substitutions=1\" into module_part array. In this case, method completesubstitutionarray provided by module is called.\n *\n *  @param  array\t\t$substitutionarray\t\tArray substitution old value => new value value\n *  @param  Translate\t$outputlangs            Output language\n *  @param  Object\t\t$object                 Source object\n *  @param  mixed\t\t$parameters       \t\tAdd more parameters (useful to pass product lines)\n *  @param  string      $callfunc               What is the name of the custom function that will be called? (default: completesubstitutionarray)\n *  @return\tvoid\n *  @see \tmake_substitutions\n */\nfunction complete_substitutions_array(&$substitutionarray, $outputlangs, $object=null, $parameters=null, $callfunc=\"completesubstitutionarray\")\n{\n\tglobal $conf,$user;\n\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t// Add a substitution key for each object property\n\tif (is_object($object))\n\t{\n\t\t// TODO\n\t}\n\n\t// Add a substitution key for each extrafields, using key __EXTRA_XXX__\n\tif (is_object($object) && is_array($object->array_options))\n\t{\n\t\tforeach($object->array_options as $key => $val)\n\t\t{\n\t\t\t$keyshort=preg_replace('/^(options|extra)_/','',$key);\n\t\t\t$substitutionarray['__EXTRA_'.$keyshort.'__']=$val;\n\t\t\t// For backward compatibiliy\n\t\t\t$substitutionarray['%EXTRA_'.$keyshort.'%']=$val;\n\t\t}\n\t}\n\n\t// Check if there is external substitution to do, requested by plugins\n\t$dirsubstitutions=array_merge(array(),(array) $conf->modules_parts['substitutions']);\n\n\tforeach($dirsubstitutions as $reldir)\n\t{\n\t\t$dir=dol_buildpath($reldir,0);\n\n\t\t// Check if directory exists\n\t\tif (! dol_is_dir($dir)) continue;\n\n\t\t$substitfiles=dol_dir_list($dir,'files',0,'functions_');\n\t\tforeach($substitfiles as $substitfile)\n\t\t{\n\t\t\tif (preg_match('/functions_(.*)\\.lib\\.php/i',$substitfile['name'],$reg))\n\t\t\t{\n\t\t\t\t$module=$reg[1];\n\n\t\t\t\tdol_syslog(\"Library functions_\".$substitfile['name'].\" found into \".$dir);\n\t\t\t\t// Include the user's functions file\n\t\t\t\trequire_once $dir.$substitfile['name'];\n\t\t\t\t// Call the user's function, and only if it is defined\n\t\t\t\t$function_name=$module.\"_\".$callfunc;\n\t\t\t\tif (function_exists($function_name)) $function_name($substitutionarray,$outputlangs,$object,$parameters);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n *    Format output for start and end date\n *\n *    @param\tint\t$date_start    Start date\n *    @param    int\t$date_end      End date\n *    @param    string\t\t$format        Output format\n *    @param\tTranslate\t$outputlangs   Output language\n *    @return\tvoid\n */\nfunction print_date_range($date_start,$date_end,$format = '',$outputlangs='')\n{\n\tprint get_date_range($date_start,$date_end,$format,$outputlangs);\n}\n\n/**\n *    Format output for start and end date\n *\n *    @param\tint\t\t\t$date_start    \t\tStart date\n *    @param    int\t\t\t$date_end      \t\tEnd date\n *    @param    string\t\t$format        \t\tOutput format\n *    @param\tTranslate\t$outputlangs   \t\tOutput language\n *    @param\tinteger\t\t$withparenthesis\t1=Add parenthesis, 0=non parenthesis\n *    @return\tstring\t\t\t\t\t\t\tString\n */\nfunction get_date_range($date_start,$date_end,$format = '',$outputlangs='', $withparenthesis=1)\n{\n\tglobal $langs;\n\n\t$out='';\n\n\tif (! is_object($outputlangs)) $outputlangs=$langs;\n\n\tif ($date_start && $date_end)\n\t{\n\t\t$out.= ($withparenthesis?' (':'').$outputlangs->transnoentitiesnoconv('DateFromTo',dol_print_date($date_start, $format, false, $outputlangs),dol_print_date($date_end, $format, false, $outputlangs)).($withparenthesis?')':'');\n\t}\n\tif ($date_start && ! $date_end)\n\t{\n\t\t$out.= ($withparenthesis?' (':'').$outputlangs->transnoentitiesnoconv('DateFrom',dol_print_date($date_start, $format, false, $outputlangs)).($withparenthesis?')':'');\n\t}\n\tif (! $date_start && $date_end)\n\t{\n\t\t$out.= ($withparenthesis?' (':'').$outputlangs->transnoentitiesnoconv('DateUntil',dol_print_date($date_end, $format, false, $outputlangs)).($withparenthesis?')':'');\n\t}\n\n\treturn $out;\n}\n\n/**\n * Return firstname and lastname in correct order\n *\n * @param\tstring\t$firstname\t\tFirstname\n * @param\tstring\t$lastname\t\tLastname\n * @param\tint\t\t$nameorder\t\t-1=Auto, 0=Lastname+Firstname, 1=Firstname+Lastname, 2=Firstname\n * @return\tstring\t\t\t\t\tFirstname + lastname or Lastname + firstname\n */\nfunction dolGetFirstLastname($firstname,$lastname,$nameorder=-1)\n{\n\tglobal $conf;\n\n\t$ret='';\n\t// If order not defined, we use the setup\n\tif ($nameorder < 0) $nameorder=(empty($conf->global->MAIN_FIRSTNAME_NAME_POSITION));\n\tif ($nameorder && ((string) $nameorder != '2'))\n\t{\n        $ret.=$firstname;\n\t\tif ($firstname && $lastname) $ret.=' ';\n\t\t$ret.=$lastname;\n\t}\n\telse if ($nameorder == 2)\n\t{\n\t   $ret.=$firstname;\n\t}\n\telse\n\t{\n\t\t$ret.=$lastname;\n\t\tif ($firstname && $lastname) $ret.=' ';\n\t\t$ret.=$firstname;\n\t}\n\treturn $ret;\n}\n\n\n/**\n *\tSet event message in dol_events session object. Will be output by calling dol_htmloutput_events.\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function.\n *  Note: Prefer to use setEventMessages instead.\n *\n *\t@param\tmixed\t$mesgs\t\t\tMessage string or array\n *  @param  string\t$style      \tWhich style to use ('mesgs' by default, 'warnings', 'errors')\n *  @return\tvoid\n *  @see\tdol_htmloutput_events\n */\nfunction setEventMessage($mesgs, $style='mesgs')\n{\n\t//dol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\t\tThis is not deprecated, it is used by setEventMessages function\n\tif (! is_array($mesgs))\t\t// If mesgs is a string\n\t{\n\t\tif ($mesgs) $_SESSION['dol_events'][$style][] = $mesgs;\n\t}\n\telse\t\t\t\t\t\t// If mesgs is an array\n\t{\n\t\tforeach($mesgs as $mesg)\n\t\t{\n\t\t\tif ($mesg) $_SESSION['dol_events'][$style][] = $mesg;\n\t\t}\n\t}\n}\n\n/**\n *\tSet event messages in dol_events session object. Will be output by calling dol_htmloutput_events.\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function.\n *\n *\t@param\tstring\t$mesg\t\t\tMessage string\n *\t@param\tarray\t$mesgs\t\t\tMessage array\n *  @param  string\t$style      \tWhich style to use ('mesgs' by default, 'warnings', 'errors')\n *  @return\tvoid\n *  @see\tdol_htmloutput_events\n */\nfunction setEventMessages($mesg, $mesgs, $style='mesgs')\n{\n\tif (! in_array((string) $style, array('mesgs','warnings','errors'))) dol_print_error('','Bad parameter style='.$style.' for setEventMessages');\n\tif (empty($mesgs)) setEventMessage($mesg, $style);\n\telse\n\t{\n\t\tif (! empty($mesg) && ! in_array($mesg, $mesgs)) setEventMessage($mesg, $style);\t// Add message string if not already into array\n\t\tsetEventMessage($mesgs, $style);\n\t}\n}\n\n/**\n *\tPrint formated messages to output (Used to show messages on html output).\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function, so there is\n *  no need to call it explicitely.\n *\n *  @return\tvoid\n *  @see    dol_htmloutput_mesg\n */\nfunction dol_htmloutput_events()\n{\n\t// Show mesgs\n\tif (isset($_SESSION['dol_events']['mesgs'])) {\n\t\tdol_htmloutput_mesg('', $_SESSION['dol_events']['mesgs']);\n\t\tunset($_SESSION['dol_events']['mesgs']);\n\t}\n\n\t// Show errors\n\tif (isset($_SESSION['dol_events']['errors'])) {\n\t\tdol_htmloutput_mesg('', $_SESSION['dol_events']['errors'], 'error');\n\t\tunset($_SESSION['dol_events']['errors']);\n\t}\n\n\t// Show warnings\n\tif (isset($_SESSION['dol_events']['warnings'])) {\n\t\tdol_htmloutput_mesg('', $_SESSION['dol_events']['warnings'], 'warning');\n\t\tunset($_SESSION['dol_events']['warnings']);\n\t}\n}\n\n/**\n *\tGet formated messages to output (Used to show messages on html output).\n *  This include also the translation of the message key.\n *\n *\t@param\tstring\t\t$mesgstring\t\tMessage string or message key\n *\t@param\tstring[]\t$mesgarray      Array of message strings or message keys\n *  @param  string\t\t$style          Style of message output ('ok' or 'error')\n *  @param  int\t\t\t$keepembedded   Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *\t@return\tstring\t\t\t\t\t\tReturn html output\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_errors\n *  @see    setEventMessages\n */\nfunction get_htmloutput_mesg($mesgstring='',$mesgarray='', $style='ok', $keepembedded=0)\n{\n\tglobal $conf, $langs;\n\n\t$ret=0; $return='';\n\t$out='';\n\t$divstart=$divend='';\n\n\t// If inline message with no format, we add it.\n\tif ((empty($conf->use_javascript_ajax) || ! empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) || $keepembedded) && ! preg_match('/<div class=\".*\">/i',$out))\n\t{\n\t\t$divstart='<div class=\"'.$style.'\">';\n\t\t$divend='</div>';\n\t}\n\n\tif ((is_array($mesgarray) && count($mesgarray)) || $mesgstring)\n\t{\n\t\t$langs->load(\"errors\");\n\t\t$out.=$divstart;\n\t\tif (is_array($mesgarray) && count($mesgarray))\n\t\t{\n\t\t\tforeach($mesgarray as $message)\n\t\t\t{\n\t\t\t\t$ret++;\n\t\t\t\t$out.= $langs->trans($message);\n\t\t\t\tif ($ret < count($mesgarray)) $out.= \"<br>\\n\";\n\t\t\t}\n\t\t}\n\t\tif ($mesgstring)\n\t\t{\n\t\t\t$langs->load(\"errors\");\n\t\t\t$ret++;\n\t\t\t$out.= $langs->trans($mesgstring);\n\t\t}\n\t\t$out.=$divend;\n\t}\n\n\tif ($out)\n\t{\n\t\tif (! empty($conf->use_javascript_ajax) && empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) && empty($keepembedded))\n\t\t{\n\t\t\t$return = '<script type=\"text/javascript\">\n\t\t\t\t\t$(document).ready(function() {\n\t\t\t\t\t\tvar block = '.(! empty($conf->global->MAIN_USE_JQUERY_BLOCKUI)?\"true\":\"false\").'\n\t\t\t\t\t\tif (block) {\n\t\t\t\t\t\t\t$.dolEventValid(\"\",\"'.dol_escape_js($out).'\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* jnotify(message, preset of message type, keepmessage) */\n\t\t\t\t\t\t\t$.jnotify(\"'.dol_escape_js($out).'\",\n\t\t\t\t\t\t\t\"'.($style==\"ok\" ? 3000 : $style).'\",\n\t\t\t\t\t\t\t'.($style==\"ok\" ? \"false\" : \"true\").',\n\t\t\t\t\t\t\t{ remove: function (){} } );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t</script>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$return = $out;\n\t\t}\n\t}\n\n\treturn $return;\n}\n\n/**\n *  Get formated error messages to output (Used to show messages on html output).\n *\n *  @param\tstring\t$mesgstring         Error message\n *  @param  array\t$mesgarray          Error messages array\n *  @param  int\t\t$keepembedded       Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *  @return string                \t\tReturn html output\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_mesg\n */\nfunction get_htmloutput_errors($mesgstring='', $mesgarray='', $keepembedded=0)\n{\n\treturn get_htmloutput_mesg($mesgstring, $mesgarray,'error',$keepembedded);\n}\n\n/**\n *\tPrint formated messages to output (Used to show messages on html output).\n *\n *\t@param\tstring\t\t$mesgstring\t\tMessage string or message key\n *\t@param\tstring[]\t$mesgarray      Array of message strings or message keys\n *  @param  string      $style          Which style to use ('ok', 'warning', 'error')\n *  @param  int         $keepembedded   Set to 1 if message must be kept embedded into its html place (this disable jnotify)\n *  @return\tvoid\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_errors\n *  @see    setEventMessages\n */\nfunction dol_htmloutput_mesg($mesgstring='',$mesgarray='', $style='ok', $keepembedded=0)\n{\n\tif (empty($mesgstring) && (! is_array($mesgarray) || count($mesgarray) == 0)) return;\n\n\t$iserror=0;\n\t$iswarning=0;\n\tif (is_array($mesgarray))\n\t{\n\t\tforeach($mesgarray as $val)\n\t\t{\n\t\t\tif ($val && preg_match('/class=\"error\"/i',$val)) { $iserror++; break; }\n\t\t\tif ($val && preg_match('/class=\"warning\"/i',$val)) { $iswarning++; break; }\n\t\t}\n\t}\n\telse if ($mesgstring && preg_match('/class=\"error\"/i',$mesgstring)) $iserror++;\n\telse if ($mesgstring && preg_match('/class=\"warning\"/i',$mesgstring)) $iswarning++;\n\tif ($style=='error') $iserror++;\n\tif ($style=='warning') $iswarning++;\n\n\tif ($iserror || $iswarning)\n\t{\n\t\t// Remove div from texts\n\t\t$mesgstring=preg_replace('/<\\/div><div class=\"(error|warning)\">/','<br>',$mesgstring);\n\t\t$mesgstring=preg_replace('/<div class=\"(error|warning)\">/','',$mesgstring);\n\t\t$mesgstring=preg_replace('/<\\/div>/','',$mesgstring);\n\t\t// Remove div from texts array\n\t\tif (is_array($mesgarray))\n\t\t{\n\t\t\t$newmesgarray=array();\n\t\t\tforeach($mesgarray as $val)\n\t\t\t{\n\t\t\t\t$tmpmesgstring=preg_replace('/<\\/div><div class=\"(error|warning)\">/','<br>',$val);\n\t\t\t\t$tmpmesgstring=preg_replace('/<div class=\"(error|warning)\">/','',$tmpmesgstring);\n\t\t\t\t$tmpmesgstring=preg_replace('/<\\/div>/','',$tmpmesgstring);\n\t\t\t\t$newmesgarray[]=$tmpmesgstring;\n\t\t\t}\n\t\t\t$mesgarray=$newmesgarray;\n\t\t}\n\t\tprint get_htmloutput_mesg($mesgstring,$mesgarray,($iserror?'error':'warning'),$keepembedded);\n\t}\n\telse print get_htmloutput_mesg($mesgstring,$mesgarray,'ok',$keepembedded);\n}\n\n/**\n *  Print formated error messages to output (Used to show messages on html output).\n *\n *  @param\tstring\t$mesgstring          Error message\n *  @param  array\t$mesgarray           Error messages array\n *  @param  int\t\t$keepembedded        Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *  @return\tvoid\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_mesg\n */\nfunction dol_htmloutput_errors($mesgstring='', $mesgarray='', $keepembedded=0)\n{\n\tdol_htmloutput_mesg($mesgstring, $mesgarray, 'error', $keepembedded);\n}\n\n/**\n * \tAdvanced sort array by second index function, which produces ascending (default)\n *  or descending output and uses optionally natural case insensitive sorting (which\n *  can be optionally case sensitive as well).\n *\n *  @param      array\t\t$array      \t\tArray to sort (array of array('key','otherkey1','otherkey2'...))\n *  @param      string\t\t$index\t\t\t\tKey in array to use for sorting criteria\n *  @param      int\t\t\t$order\t\t\t\tSort order ('asc' or 'desc')\n *  @param      int\t\t\t$natsort\t\t\t1=use \"natural\" sort (natsort), 0=use \"standard\" sort (asort)\n *  @param      int\t\t\t$case_sensitive\t\t1=sort is case sensitive, 0=not case sensitive\n *  @param\t\tint\t\t\t$keepindex\t\t\tIf 0 and index key of array to sort is a numeric, than index will be rewrote. If 1 or index key is not numeric, key for index is kept after sorting.\n *  @return     array\t\t\t\t\t\t\tSorted array\n */\nfunction dol_sort_array(&$array, $index, $order='asc', $natsort=0, $case_sensitive=0, $keepindex=0)\n{\n\t// Clean parameters\n\t$order=strtolower($order);\n\n\t$sizearray=count($array);\n\tif (is_array($array) && $sizearray>0)\n\t{\n        $temp = array();\n        foreach(array_keys($array) as $key) $temp[$key]=$array[$key][$index];\n\n\t\tif (!$natsort) ($order=='asc') ? asort($temp) : arsort($temp);\n\t\telse\n\t\t{\n\t\t\t($case_sensitive) ? natsort($temp) : natcasesort($temp);\n\t\t\tif($order!='asc') $temp=array_reverse($temp,TRUE);\n\t\t}\n\n\t\t$sorted = array();\n\n\t\tforeach(array_keys($temp) as $key)\n\t\t{\n\t\t\t(is_numeric($key) && empty($keepindex)) ? $sorted[]=$array[$key] : $sorted[$key]=$array[$key];\n\t\t}\n\n\t\treturn $sorted;\n\t}\n\treturn $array;\n}\n\n\n/**\n *      Check if a string is in UTF8\n *\n *      @param\tstring\t$str        String to check\n * \t\t@return\tboolean\t\t\t\tTrue if string is UTF8 or ISO compatible with UTF8, False if not (ISO with special char or Binary)\n */\nfunction utf8_check($str)\n{\n\t// We must use here a binary strlen function (so not dol_strlen)\n\t$strLength = dol_strlen($str);\n\tfor ($i=0; $i<$strLength; $i++)\n\t{\n\t\tif (ord($str[$i]) < 0x80) continue; // 0bbbbbbb\n\t\telseif ((ord($str[$i]) & 0xE0) == 0xC0) $n=1; // 110bbbbb\n\t\telseif ((ord($str[$i]) & 0xF0) == 0xE0) $n=2; // 1110bbbb\n\t\telseif ((ord($str[$i]) & 0xF8) == 0xF0) $n=3; // 11110bbb\n\t\telseif ((ord($str[$i]) & 0xFC) == 0xF8) $n=4; // 111110bb\n\t\telseif ((ord($str[$i]) & 0xFE) == 0xFC) $n=5; // 1111110b\n\t\telse return false; // Does not match any model\n\t\tfor ($j=0; $j<$n; $j++) { // n bytes matching 10bbbbbb follow ?\n\t\t\tif ((++$i == strlen($str)) || ((ord($str[$i]) & 0xC0) != 0x80))\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n/**\n *      Return a string encoded into OS filesystem encoding. This function is used to define\n * \t    value to pass to filesystem PHP functions.\n *\n *      @param\tstring\t$str        String to encode (UTF-8)\n * \t\t@return\tstring\t\t\t\tEncoded string (UTF-8, ISO-8859-1)\n */\nfunction dol_osencode($str)\n{\n\tglobal $conf;\n\n\t$tmp=ini_get(\"unicode.filesystem_encoding\");\t\t\t\t\t\t// Disponible avec PHP 6.0\n\tif (empty($tmp) && ! empty($_SERVER[\"WINDIR\"])) $tmp='iso-8859-1';\t// By default for windows\n\tif (empty($tmp)) $tmp='utf-8';\t\t\t\t\t\t\t\t\t\t// By default for other\n\tif (! empty($conf->global->MAIN_FILESYSTEM_ENCODING)) $tmp=$conf->global->MAIN_FILESYSTEM_ENCODING;\n\n\tif ($tmp == 'iso-8859-1') return utf8_decode($str);\n\treturn $str;\n}\n\n\n/**\n *      Return an id or code from a code or id.\n *      Store also Code-Id into a cache to speed up next request on same key.\n *\n * \t\t@param\tDoliDB\t$db\t\t\tDatabase handler\n * \t\t@param\tstring\t$key\t\tCode or Id to get Id or Code\n * \t\t@param\tstring\t$tablename\tTable name without prefix\n * \t\t@param\tstring\t$fieldkey\tField for code\n * \t\t@param\tstring\t$fieldid\tField for id\n *      @return int\t\t\t\t\t<0 if KO, Id of code if OK\n *      @see $langs->getLabelFromKey\n */\nfunction dol_getIdFromCode($db,$key,$tablename,$fieldkey='code',$fieldid='id')\n{\n\tglobal $cache_codes;\n\n\t// If key empty\n\tif ($key == '') return '';\n\n\t// Check in cache\n\tif (isset($cache_codes[$tablename][$key]))\t// Can be defined to 0 or ''\n\t{\n\t\treturn $cache_codes[$tablename][$key];   // Found in cache\n\t}\n\n\t$sql = \"SELECT \".$fieldid.\" as valuetoget\";\n\t$sql.= \" FROM \".MAIN_DB_PREFIX.$tablename;\n\t$sql.= \" WHERE \".$fieldkey.\" = '\".$db->escape($key).\"'\";\n\tdol_syslog('dol_getIdFromCode', LOG_DEBUG);\n\t$resql = $db->query($sql);\n\tif ($resql)\n\t{\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($obj) $cache_codes[$tablename][$key]=$obj->valuetoget;\n\t\telse $cache_codes[$tablename][$key]='';\n\t\t$db->free($resql);\n\t\treturn $cache_codes[$tablename][$key];\n\t}\n\telse\n\t{\n\t\treturn -1;\n\t}\n}\n\n/**\n * Verify if condition in string is ok or not\n *\n * @param \tstring\t\t$strRights\t\tString with condition to check\n * @return \tboolean\t\t\t\t\t\tTrue or False. Return true if strRights is ''\n */\nfunction verifCond($strRights)\n{\n\tglobal $user,$conf,$langs;\n\tglobal $leftmenu;\n\tglobal $rights;    // To export to dol_eval function\n\n\t//print $strRights.\"<br>\\n\";\n\t$rights = true;\n\tif ($strRights != '')\n\t{\n\t\t//$tab_rights = explode('&&', $strRights);\n\t\t//$i = 0;\n\t\t//while (($i < count($tab_rights)) && ($rights == true)) {\n\t\t$str = 'if(!(' . $strRights . ')) { $rights = false; }';\n\t\tdol_eval($str);\n\t\t//\t$i++;\n\t\t//}\n\t}\n\treturn $rights;\n}\n\n/**\n * Replace eval function to add more security.\n * This function is called by verifCond() or trans() and transnoentitiesnoconv().\n *\n * @param \tstring\t$s\t\t\t\tString to evaluate\n * @param\tint\t\t$returnvalue\t0=No return (used to execute eval($a=something)). 1=Value of eval is returned (used to eval($something)).\n * @param   int     $hideerrors     1=Hide errors\n * @return\tmixed\t\t\t\t\tNothing or return of eval\n */\nfunction dol_eval($s, $returnvalue=0, $hideerrors=1)\n{\n\t// Only global variables can be changed by eval function and returned to caller\n\tglobal $db, $langs, $user, $conf;\n\tglobal $mainmenu, $leftmenu;\n\tglobal $rights;\n\tglobal $object;\n\tglobal $mysoc;\n\n\tglobal $obj;       // To get $obj used into list when dol_eval is used for computed fields and $obj is not yet $object\n\tglobal $soc;       // For backward compatibility\n\n\t//print $s.\"<br>\\n\";\n\tif ($returnvalue)\n\t{\n\t    if ($hideerrors) return @eval('return '.$s.';');\n\t    else return eval('return '.$s.';');\n\t}\n\telse\n\t{\n\t    if ($hideerrors) @eval($s);\n\t    else eval($s);\n\t}\n}\n\n/**\n * Return if var element is ok\n *\n * @param   string      $element    Variable to check\n * @return  boolean                 Return true of variable is not empty\n */\nfunction dol_validElement($element)\n{\n\treturn (trim($element) != '');\n}\n\n/**\n * \tReturn img flag of country for a language code or country code\n *\n * \t@param\tstring\t$codelang\tLanguage code (en_IN, fr_CA...) or Country code (IN, FR)\n * \t@return\tstring\t\t\t\tHTML img string with flag.\n */\nfunction picto_from_langcode($codelang)\n{\n\tglobal $langs;\n\n\tif (empty($codelang)) return '';\n\n\tif (empty($codelang)) return '';\n\n\tif ($codelang == 'auto')\n\t{\n\t\treturn img_picto_common($langs->trans('AutoDetectLang'), 'flags/int.png');\n\t}\n\n\t$langtocountryflag = array(\n\t\t'ar_AR' => '',\n\t\t'ca_ES' => 'catalonia',\n\t\t'da_DA' => 'dk',\n\t\t'fr_CA' => 'mq',\n\t\t'sv_SV' => 'se'\n\t);\n\n\tif (isset($langtocountryflag[$codelang])) $flagImage = $langtocountryflag[$codelang];\n\telse\n\t{\n\t\t$tmparray = explode('_', $codelang);\n\t\t$flagImage = empty($tmparray[1]) ? $tmparray[0] : $tmparray[1];\n\t}\n\n\treturn img_picto_common($codelang, 'flags/'.strtolower($flagImage).'.png');\n}\n\n/**\n *  Complete or removed entries into a head array (used to build tabs).\n *  For example, with value added by external modules. Such values are declared into $conf->modules_parts['tab'].\n *  Or by change using hook completeTabsHead\n *\n *  @param\tConf\t\t\t$conf           Object conf\n *  @param  Translate\t\t$langs          Object langs\n *  @param  object|null\t\t$object         Object object\n *  @param  array\t\t\t$head          \tObject head\n *  @param  int\t\t\t\t$h\t\t\t\tNew position to fill\n *  @param  string\t\t\t$type           Value for object where objectvalue can be\n *                              \t\t\t'thirdparty'       to add a tab in third party view\n *\t\t                        \t      \t'intervention'     to add a tab in intervention view\n *     \t\t                    \t     \t'supplier_order'   to add a tab in supplier order view\n *          \t\t            \t        'supplier_invoice' to add a tab in supplier invoice view\n *                  \t\t    \t        'invoice'          to add a tab in customer invoice view\n *                          \t\t\t    'order'            to add a tab in customer order view\n *                      \t\t\t        'product'          to add a tab in product view\n *                              \t\t\t'propal'           to add a tab in propal view\n *                              \t\t\t'user'             to add a tab in user view\n *                              \t\t\t'group'            to add a tab in group view\n * \t\t        \t               \t     \t'member'           to add a tab in fundation member view\n *      \t\t                        \t'categories_x'\t   to add a tab in category view ('x': type of category (0=product, 1=supplier, 2=customer, 3=member)\n *      \t\t\t\t\t\t\t\t\t'ecm'\t\t\t   to add a tab for another ecm view\n *                                          'stock'            to add a tab for warehouse view\n *  @param  string\t\t$mode  \t        \t'add' to complete head, 'remove' to remove entries\n *\t@return\tvoid\n */\nfunction complete_head_from_modules($conf,$langs,$object,&$head,&$h,$type,$mode='add')\n{\n\tglobal $hookmanager;\n\n\tif (isset($conf->modules_parts['tabs'][$type]) && is_array($conf->modules_parts['tabs'][$type]))\n\t{\n\t\tforeach ($conf->modules_parts['tabs'][$type] as $value)\n\t\t{\n\t\t\t$values=explode(':',$value);\n\n\t\t\tif ($mode == 'add' && ! preg_match('/^\\-/',$values[1]))\n\t\t\t{\n\t\t\t\tif (count($values) == 6)       // new declaration with permissions:  $value='objecttype:+tabname1:Title1:langfile@mymodule:$user->rights->mymodule->read:/mymodule/mynewtab1.php?id=__ID__'\n\t\t\t\t{\n\t\t\t\t\tif ($values[0] != $type) continue;\n\n\t\t\t\t\tif (verifCond($values[4]))\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($values[3]) $langs->load($values[3]);\n\t\t\t\t\t\tif (preg_match('/SUBSTITUTION_([^_]+)/i',$values[2],$reg))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$substitutionarray=array();\n\t\t\t\t\t\t\tcomplete_substitutions_array($substitutionarray,$langs,$object,array('needforkey'=>$values[2]));\n\t\t\t\t\t\t\t$label=make_substitutions($reg[1], $substitutionarray);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse $label=$langs->trans($values[2]);\n\n\t\t\t\t\t\t$head[$h][0] = dol_buildpath(preg_replace('/__ID__/i', ((is_object($object) && ! empty($object->id))?$object->id:''), $values[5]), 1);\n\t\t\t\t\t\t$head[$h][1] = $label;\n\t\t\t\t\t\t$head[$h][2] = str_replace('+','',$values[1]);\n\t\t\t\t\t\t$h++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (count($values) == 5)       // deprecated\n\t\t\t\t{\n\t\t\t\t\tdol_syslog('Passing 5\u00a0values in tabs module_parts is deprecated. Please update to 6 with permissions.', LOG_WARNING);\n\n\t\t\t\t\tif ($values[0] != $type) continue;\n\t\t\t\t\tif ($values[3]) $langs->load($values[3]);\n\t\t\t\t\tif (preg_match('/SUBSTITUTION_([^_]+)/i',$values[2],$reg))\n\t\t\t\t\t{\n\t\t\t\t\t\t$substitutionarray=array();\n\t\t\t\t\t\tcomplete_substitutions_array($substitutionarray,$langs,$object,array('needforkey'=>$values[2]));\n\t\t\t\t\t\t$label=make_substitutions($reg[1], $substitutionarray);\n\t\t\t\t\t}\n\t\t\t\t\telse $label=$langs->trans($values[2]);\n\n\t\t\t\t\t$head[$h][0] = dol_buildpath(preg_replace('/__ID__/i', ((is_object($object) && ! empty($object->id))?$object->id:''), $values[4]), 1);\n\t\t\t\t\t$head[$h][1] = $label;\n\t\t\t\t\t$head[$h][2] = str_replace('+','',$values[1]);\n\t\t\t\t\t$h++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ($mode == 'remove' && preg_match('/^\\-/',$values[1]))\n\t\t\t{\n\t\t\t\tif ($values[0] != $type) continue;\n\t\t\t\t$tabname=str_replace('-','',$values[1]);\n\t\t\t\tforeach($head as $key => $val)\n\t\t\t\t{\n\t\t\t\t\t$condition = (! empty($values[3]) ? verifCond($values[3]) : 1);\n\t\t\t\t\tif ($head[$key][2]==$tabname && $condition)\n\t\t\t\t\t{\n\t\t\t\t\t\tunset($head[$key]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// No need to make a return $head. Var is modified as a reference\n\tif (! empty($hookmanager))\n\t{\n\t\t$parameters=array('object' => $object, 'mode' => $mode, 'head'=>$head);\n\t\t$reshook=$hookmanager->executeHooks('completeTabsHead',$parameters);\n\t\tif ($reshook > 0)\n\t\t{\n\t\t\t$head = $hookmanager->resArray;\n\t\t}\n\t}\n}\n\n/**\n * Print common footer :\n * \t\tconf->global->MAIN_HTML_FOOTER\n * \t\tconf->global->MAIN_GOOGLE_AN_ID\n * \t\tconf->global->MAIN_SHOW_TUNING_INFO or $_SERVER[\"MAIN_SHOW_TUNING_INFO\"]\n * \t\tconf->logbuffer\n *\n * @param\tstring\t$zone\t'private' (for private pages) or 'public' (for public pages)\n * @return\tvoid\n */\nfunction printCommonFooter($zone='private')\n{\n\tglobal $conf, $hookmanager;\n\tglobal $micro_start_time;\n\n\tif ($zone == 'private') print \"\\n\".'<!-- Common footer for private page -->'.\"\\n\";\n\telse print \"\\n\".'<!-- Common footer for public page -->'.\"\\n\";\n\n\tif (! empty($conf->global->MAIN_HTML_FOOTER)) print $conf->global->MAIN_HTML_FOOTER.\"\\n\";\n\n\tprint \"\\n\";\n\tif (! empty($conf->use_javascript_ajax))\n\t{\n\t\tprint '<!-- Reposition management (does not work if a redirect is done after action of submission) -->'.\"\\n\";\n    \tprint '<script type=\"text/javascript\" language=\"javascript\">jQuery(document).ready(function() {'.\"\\n\";\n\n    \tprint '<!-- If page_y set, we set scollbar with it -->'.\"\\n\";\n    \tprint \"page_y=getParameterByName('page_y', 0);\";\n    \tprint \"if (page_y > 0) $('html, body').scrollTop(page_y);\\n\";\n\n    \tprint '<!-- Set handler to add page_y param on some a href links -->'.\"\\n\";\n    \tprint 'jQuery(\".reposition\").click(function() {\n    \t           var page_y = $(document).scrollTop();\n    \t           /*alert(page_y);*/\n    \t           this.href=this.href+\\'&page_y=\\'+page_y;\n    \t           });'.\"\\n\";\n    \tprint '});'.\"\\n\";\n\n    \tif (empty($conf->dol_use_jmobile))\n    \t{\n        \tprint '<!-- Set handler to switch left menu page (menuhider) -->'.\"\\n\";\n        \tprint 'jQuery(\".menuhider\").click(function() {';\n        \tprint '  console.log(\"We click on .menuhider\");'.\"\\n\";\n        \t//print \"  $('.side-nav').animate({width:'toggle'},200);\\n\";     // OK with eldy theme but not with md\n        \tprint \"  $('.side-nav').toggle()\\n\";\n        \tprint \"  $('.login_block').toggle()\\n\";\n        \tprint '});'.\"\\n\";\n    \t}\n\n    \tprint '</script>'.\"\\n\";\n\t}\n\n\t// Google Analytics (need Google module)\n\tif (! empty($conf->google->enabled) && ! empty($conf->global->MAIN_GOOGLE_AN_ID))\n\t{\n\t\tif (($conf->dol_use_jmobile != 4))\n\t\t{\n\t\t\tprint \"\\n\";\n\t\t\tprint '<script type=\"text/javascript\">'.\"\\n\";\n\t\t\tprint '  var _gaq = _gaq || [];'.\"\\n\";\n\t\t\tprint '  _gaq.push([\\'_setAccount\\', \\''.$conf->global->MAIN_GOOGLE_AN_ID.'\\']);'.\"\\n\";\n\t\t\tprint '  _gaq.push([\\'_trackPageview\\']);'.\"\\n\";\n\t\t\tprint ''.\"\\n\";\n\t\t\tprint '  (function() {'.\"\\n\";\n\t\t\tprint '    var ga = document.createElement(\\'script\\'); ga.type = \\'text/javascript\\'; ga.async = true;'.\"\\n\";\n\t\t\tprint '    ga.src = (\\'https:\\' == document.location.protocol ? \\'https://ssl\\' : \\'http://www\\') + \\'.google-analytics.com/ga.js\\';'.\"\\n\";\n\t\t\tprint '    var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(ga, s);'.\"\\n\";\n\t\t\tprint '  })();'.\"\\n\";\n\t\t\tprint '</script>'.\"\\n\";\n\t\t}\n\t}\n\n\t// End of tuning\n\tif (! empty($_SERVER['MAIN_SHOW_TUNING_INFO']) || ! empty($conf->global->MAIN_SHOW_TUNING_INFO))\n\t{\n\t\tprint \"\\n\".'<script type=\"text/javascript\">'.\"\\n\";\n\t\tprint 'window.console && console.log(\"';\n\t\tif (! empty($conf->global->MEMCACHED_SERVER)) print 'MEMCACHED_SERVER='.$conf->global->MEMCACHED_SERVER.' - ';\n\t\tprint 'MAIN_OPTIMIZE_SPEED='.(isset($conf->global->MAIN_OPTIMIZE_SPEED)?$conf->global->MAIN_OPTIMIZE_SPEED:'off');\n\t\tif (! empty($micro_start_time))   // Works only if MAIN_SHOW_TUNING_INFO is defined at $_SERVER level. Not in global variable.\n\t\t{\n\t\t\t$micro_end_time = microtime(true);\n\t\t\tprint ' - Build time: '.ceil(1000*($micro_end_time-$micro_start_time)).' ms';\n\t\t}\n\t\tif (function_exists(\"memory_get_usage\"))\n\t\t{\n\t\t\tprint ' - Mem: '.memory_get_usage();\n\t\t}\n\t\tif (function_exists(\"xdebug_memory_usage\"))\n\t\t{\n\t\t\tprint ' - XDebug time: '.ceil(1000*xdebug_time_index()).' ms';\n\t\t\tprint ' - XDebug mem: '.xdebug_memory_usage();\n\t\t\tprint ' - XDebug mem peak: '.xdebug_peak_memory_usage();\n\t\t}\n\t\tif (function_exists(\"zend_loader_file_encoded\"))\n\t\t{\n\t\t\tprint ' - Zend encoded file: '.(zend_loader_file_encoded()?'yes':'no');\n\t\t}\n\t\tprint '\");'.\"\\n\";\n\t\tprint '</script>'.\"\\n\";\n\n\t\t// Add Xdebug coverage of code\n\t\tif (defined('XDEBUGCOVERAGE'))\n\t\t{\n\t\t\tprint_r(xdebug_get_code_coverage());\n\t\t}\n\t}\n\n\t// If there is some logs in buffer to show\n\tif (count($conf->logbuffer))\n\t{\n\t\tprint \"\\n\";\n\t\tprint \"<!-- Start of log output\\n\";\n\t\t//print '<div class=\"hidden\">'.\"\\n\";\n\t\tforeach($conf->logbuffer as $logline)\n\t\t{\n\t\t\tprint $logline.\"<br>\\n\";\n\t\t}\n\t\t//print '</div>'.\"\\n\";\n\t\tprint \"End of log output -->\\n\";\n\t}\n\n\t$parameters=array();\n\t$reshook=$hookmanager->executeHooks('printCommonFooter',$parameters);    // Note that $action and $object may have been modified by some hooks\n}\n\n/**\n * Split a string with 2 keys into key array.\n * For example: \"A=1;B=2;C=2\" is exploded into array('A'=>1,'B'=>2,'C'=>3)\n *\n * @param \tstring\t$string\t\tString to explode\n * @param \tstring\t$delimiter\tDelimiter between each couple of data\n * @param \tstring\t$kv\t\t\tDelimiter between key and value\n * @return\tarray\t\t\t\tArray of data exploded\n */\nfunction dolExplodeIntoArray($string, $delimiter = ';', $kv = '=')\n{\n\tif ($a = explode($delimiter, $string))\n\t{\n\t    $ka = array();\n\t\tforeach ($a as $s) { // each part\n\t\t\tif ($s) {\n\t\t\t\tif ($pos = strpos($s, $kv)) { // key/value delimiter\n\t\t\t\t\t$ka[trim(substr($s, 0, $pos))] = trim(substr($s, $pos + strlen($kv)));\n\t\t\t\t} else { // key delimiter not found\n\t\t\t\t\t$ka[] = trim($s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $ka;\n\t}\n\treturn array();\n}\n\n\n/**\n * Set focus onto field with selector\n *\n * @param \tstring\t$selector\tSelector ('#id' or 'input[name=\"ref\"]') to use to find the HTML input field that must get the autofocus. You must use a CSS selector, so unique id preceding with the '#' char.\n * @return\tstring\t\t\t\tHTML code to set focus\n */\nfunction dol_set_focus($selector)\n{\n\tprint \"\\n\".'<!-- Set focus onto a specific field -->'.\"\\n\";\n\tprint '<script type=\"text/javascript\" language=\"javascript\">jQuery(document).ready(function() { jQuery(\"'.dol_escape_js($selector).'\").focus(); });</script>'.\"\\n\";\n}\n\n\n/**\n * Return getmypid() or random PID when function is disabled\n * Some web hosts disable this php function for security reasons\n * and sometimes we can't redeclare function\n *\n * @return\tint\n */\nfunction dol_getmypid()\n{\n    if (! function_exists('getmypid')) {\n        return mt_rand(1,32768);\n    } else {\n        return getmypid();\n    }\n}\n\n\n/**\n * Generate natural SQL search string for a criteria (this criteria can be tested on one or several fields)\n *\n * @param \tstring|string[]\t$fields \tString or array of strings, filled with the name of all fields in the SQL query we must check (combined with a OR)\n * @param \tstring \t\t\t$value \t\tThe value to look for.\n *                          \t\t    If param $mode is 0, can contains several keywords separated with a space or |\n *                                         like \"keyword1 keyword2\" = We want record field like keyword1 AND field like keyword2\n *                                         or like \"keyword1|keyword2\" = We want record field like keyword1 OR field like keyword2\n *                             \t\t\tIf param $mode is 1, can contains an operator <, > or = like \"<10\" or \">=100.5 < 1000\"\n *                             \t\t\tIf param $mode is 2, can contains a list of id separated by comma like \"1,3,4\"\n * @param\tinteger\t\t\t$mode\t\t0=value is list of keyword strings, 1=value is a numeric test (Example \">5.5 <10\"), 2=value is a list of id separated with comma (Example '1,3,4')\n * @param\tinteger\t\t\t$nofirstand\t1=Do not output the first 'AND'\n * @return \tstring \t\t\t$res \t\tThe statement to append to the SQL query\n */\nfunction natural_search($fields, $value, $mode=0, $nofirstand=0)\n{\n    global $db,$langs;\n\n    if ($mode == 0)\n    {\n    \t$value=preg_replace('/\\*/','%',$value);\t// Replace * with %\n    }\n    if ($mode == 1)\n    {\n    \t$value=preg_replace('/([<>=]+)\\s+([0-9'.preg_quote($langs->trans(\"DecimalSeparator\"),'/').'\\-])/','\\1\\2',$value);\t// Clean string '< 10' into '<10' so we can the explode on space to get all tests to do\n    }\n\n    $value = preg_replace('/\\s*\\|\\s*/','|', $value);\n\n    $crits = explode(' ', $value);\n    $res = '';\n    if (! is_array($fields)) $fields = array($fields);\n\n    $nboffields = count($fields);\n    $end2 = count($crits);\n    $j = 0;\n    foreach ($crits as $crit)\n    {\n        $i = 0; $i2 = 0;\n        $newres = '';\n        foreach ($fields as $field)\n        {\n            if ($mode == 1)\n            {\n            \t$operator='=';\n            \t$newcrit = preg_replace('/([<>=]+)/','',trim($crit));\n\n            \tpreg_match('/([<>=]+)/',trim($crit), $reg);\n            \tif ($reg[1])\n            \t{\n            \t\t$operator = $reg[1];\n            \t}\n            \tif ($newcrit != '')\n            \t{\n            \t\t$numnewcrit = price2num($newcrit);\n            \t\tif (is_numeric($numnewcrit))\n            \t\t{\n            \t\t\t$newres .= ($i2 > 0 ? ' OR ' : '') . $field . ' '.$operator.' '.$numnewcrit;\n            \t\t}\n            \t\telse\n            \t\t{\n            \t\t\t$newres .= ($i2 > 0 ? ' OR ' : '') . '1 = 2';\t// force false\n            \t\t}\n            \t\t$i2++;\t// a criteria was added to string\n            \t}\n            }\n            else if ($mode == 2)\n            {\n\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '') . $field . \" IN (\" . $db->escape(trim($crit)) . \")\";\n            \t$i2++;\t// a criteria was added to string\n            }\n            else    // $mode=0\n\t\t\t{\n\t\t\t\t$textcrit = '';\n\t\t\t\t$tmpcrits = explode('|',$crit);\n\t\t\t\t$i3 = 0;\n\t\t\t\tforeach($tmpcrits as $tmpcrit)\n\t\t\t\t{\n\t            \t$newres .= (($i2 > 0 || $i3 > 0) ? ' OR ' : '') . $field . \" LIKE '\";\n\n\t            \t$tmpcrit=trim($tmpcrit);\n\t            \t$tmpcrit2=$tmpcrit;\n\t            \t$tmpbefore='%'; $tmpafter='%';\n\t            \tif (preg_match('/^[\\^\\$]/', $tmpcrit))\n\t            \t{\n\t            \t    $tmpbefore='';\n\t            \t    $tmpcrit2 = preg_replace('/^[\\^\\$]/', '', $tmpcrit2);\n\t            \t}\n\t\t\t\t\tif (preg_match('/[\\^\\$]$/', $tmpcrit))\n\t            \t{\n\t            \t    $tmpafter='';\n\t            \t    $tmpcrit2 = preg_replace('/[\\^\\$]$/', '', $tmpcrit2);\n\t            \t}\n\t            \t$newres .= $tmpbefore;\n\t            \t$newres .= $db->escape($tmpcrit2);\n\t            \t$newres .= $tmpafter;\n\t            \t$newres .= \"'\";\n\t            \tif ($tmpcrit2 == '')\n\t            \t{\n\t            \t    $newres .= ' OR ' . $field . \" IS NULL\";\n\t            \t}\n\t            \t$i3++;\n\t\t\t\t}\n\t\t\t\t$i2++;\t// a criteria was added to string\n            }\n            $i++;\n        }\n        if ($newres) $res = $res . ($res ? ' AND ' : '') . ($i2 > 1 ? '(' : '') .$newres . ($i2 > 1 ? ')' : '');\n        $j++;\n    }\n    $res = ($nofirstand?\"\":\" AND \").\"(\" . $res . \")\";\n    //print 'xx'.$res.'yy';\n    return $res;\n}\n\n/**\n * Return the filename of file to get the thumbs\n *\n * @param   string  $file           Original filename (full or relative path)\n * @param   string  $extName        Extension to differenciate thumb file name ('', '_small', '_mini')\n * @param   string  $extImgTarget   Force image extension for thumbs. Use '' to keep same extension than original image (default).\n * @return  string                  New file name (full or relative path, including the thumbs/)\n */\nfunction getImageFileNameForSize($file, $extName, $extImgTarget='')\n{\n\t$dirName = dirname($file);\n\tif ($dirName == '.') $dirName='';\n\n    $fileName = preg_replace('/(\\.gif|\\.jpeg|\\.jpg|\\.png|\\.bmp)$/i','',$file);\t// We remove extension, whatever is its case\n\t$fileName = basename($fileName);\n\n\tif (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.jpg$/i',$file)?'.jpg':'');\n    if (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.jpeg$/i',$file)?'.jpeg':'');\n    if (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.gif$/i',$file)?'.gif':'');\n    if (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.png$/i',$file)?'.png':'');\n    if (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.bmp$/i',$file)?'.bmp':'');\n\n    if (! $extImgTarget) return $file;\n\n    $subdir='';\n    if ($extName) $subdir = 'thumbs/';\n\n    return ($dirName?$dirName.'/':'').$subdir.$fileName.$extName.$extImgTarget; // New filename for thumb\n}\n\n\n/**\n * Return URL we can use for advanced preview links\n *\n * @param   string    $modulepart     propal, facture, facture_fourn, ...\n * @param   string    $relativepath   Relative path of docs.\n * @param\tint\t\t  $alldata\t\t  Return array with all components (1 is recommended, then use a simple a href link with the class, target and mime attribute added. 'documentpreview' css class is handled by jquery code into main.inc.php)\n * @param\tstring\t  $param\t\t  More param on http links\n * @return  string|array              Output string with href link or array with all components of link\n */\nfunction getAdvancedPreviewUrl($modulepart, $relativepath, $alldata=0, $param='')\n{\n    global $conf, $langs;\n\n    if (empty($conf->use_javascript_ajax)) return '';\n\n    $mime_preview = array('bmp', 'jpeg', 'png', 'gif', 'tiff', 'pdf', 'plain', 'css');\n    //$mime_preview[]='vnd.oasis.opendocument.presentation';\n    //$mime_preview[]='archive';\n    $num_mime = array_search(dol_mimetype($relativepath, '', 1), $mime_preview);\n\n    if ($alldata == 1)\n    {\n    \tif ($num_mime !== false) return array('target'=>'_blank', 'css'=>'documentpreview', 'url'=>DOL_URL_ROOT.'/document.php?modulepart='.$modulepart.'&attachment=0&file='.urlencode($relativepath), 'mime'=>dol_mimetype($relativepath), );\n    \telse return array();\n    }\n\n    // old behavior\n    if ($num_mime !== false) return 'javascript:document_preview(\\''.dol_escape_js(DOL_URL_ROOT.'/document.php?modulepart='.$modulepart.'&attachment=0&file='.urlencode($relativepath).($param?'&'.$param:'')).'\\', \\''.dol_mimetype($relativepath).'\\', \\''.dol_escape_js($langs->trans('Preview')).'\\')';\n    else return '';\n}\n\n\n/**\n *\tReturn mime type of a file\n *\n *\t@param\tstring\t$file\t\tFilename we looking for MIME type\n *  @param  string\t$default    Default mime type if extension not found in known list\n * \t@param\tint\t\t$mode    \t0=Return full mime, 1=otherwise short mime string, 2=image for mime type, 3=source language\n *\t@return string \t\t    \tReturn a mime type family (text/xxx, application/xxx, image/xxx, audio, video, archive)\n *  @see    image_format_supported (images.lib.php)\n */\nfunction dol_mimetype($file,$default='application/octet-stream',$mode=0)\n{\n    $mime=$default;\n    $imgmime='other.png';\n    $srclang='';\n\n    $tmpfile=preg_replace('/\\.noexe$/','',$file);\n\n    // Text files\n    if (preg_match('/\\.txt$/i',$tmpfile))         \t\t\t   { $mime='text/plain'; $imgmime='text.png'; }\n    if (preg_match('/\\.rtx$/i',$tmpfile))                      { $mime='text/richtext'; $imgmime='text.png'; }\n    if (preg_match('/\\.csv$/i',$tmpfile))\t\t\t\t\t   { $mime='text/csv'; $imgmime='text.png'; }\n    if (preg_match('/\\.tsv$/i',$tmpfile))\t\t\t\t\t   { $mime='text/tab-separated-values'; $imgmime='text.png'; }\n    if (preg_match('/\\.(cf|conf|log)$/i',$tmpfile))            { $mime='text/plain'; $imgmime='text.png'; }\n    if (preg_match('/\\.ini$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='ini'; }\n    if (preg_match('/\\.css$/i',$tmpfile))                      { $mime='text/css'; $imgmime='css.png'; $srclang='css'; }\n    // Certificate files\n    if (preg_match('/\\.(crt|cer|key|pub)$/i',$tmpfile))        { $mime='text/plain'; $imgmime='text.png'; }\n    // HTML/XML\n    if (preg_match('/\\.(html|htm|shtml)$/i',$tmpfile))         { $mime='text/html'; $imgmime='html.png'; $srclang='html'; }\n    if (preg_match('/\\.(xml|xhtml)$/i',$tmpfile))              { $mime='text/xml'; $imgmime='other.png'; $srclang='xml'; }\n    // Languages\n    if (preg_match('/\\.bas$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='bas'; }\n    if (preg_match('/\\.(c)$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='c'; }\n    if (preg_match('/\\.(cpp)$/i',$tmpfile))                    { $mime='text/plain'; $imgmime='text.png'; $srclang='cpp'; }\n    if (preg_match('/\\.(h)$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='h'; }\n    if (preg_match('/\\.(java|jsp)$/i',$tmpfile))               { $mime='text/plain'; $imgmime='text.png'; $srclang='java'; }\n    if (preg_match('/\\.php([0-9]{1})?$/i',$tmpfile))           { $mime='text/plain'; $imgmime='php.png'; $srclang='php'; }\n    if (preg_match('/\\.phtml$/i',$tmpfile))                    { $mime='text/plain'; $imgmime='php.png'; $srclang='php'; }\n    if (preg_match('/\\.(pl|pm)$/i',$tmpfile))                  { $mime='text/plain'; $imgmime='pl.png'; $srclang='perl'; }\n    if (preg_match('/\\.sql$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='sql'; }\n    if (preg_match('/\\.js$/i',$tmpfile))                       { $mime='text/x-javascript'; $imgmime='jscript.png'; $srclang='js'; }\n    // Open office\n    if (preg_match('/\\.odp$/i',$tmpfile))                      { $mime='application/vnd.oasis.opendocument.presentation'; $imgmime='ooffice.png'; }\n    if (preg_match('/\\.ods$/i',$tmpfile))                      { $mime='application/vnd.oasis.opendocument.spreadsheet'; $imgmime='ooffice.png'; }\n    if (preg_match('/\\.odt$/i',$tmpfile))                      { $mime='application/vnd.oasis.opendocument.text'; $imgmime='ooffice.png'; }\n    // MS Office\n    if (preg_match('/\\.mdb$/i',$tmpfile))\t\t\t\t\t   { $mime='application/msaccess'; $imgmime='mdb.png'; }\n    if (preg_match('/\\.doc(x|m)?$/i',$tmpfile))\t\t\t\t   { $mime='application/msword'; $imgmime='doc.png'; }\n    if (preg_match('/\\.dot(x|m)?$/i',$tmpfile))\t\t\t\t   { $mime='application/msword'; $imgmime='doc.png'; }\n    if (preg_match('/\\.xlt(x)?$/i',$tmpfile))\t\t\t\t   { $mime='application/vnd.ms-excel'; $imgmime='xls.png'; }\n    if (preg_match('/\\.xla(m)?$/i',$tmpfile))\t\t\t\t   { $mime='application/vnd.ms-excel'; $imgmime='xls.png'; }\n    if (preg_match('/\\.xls$/i',$tmpfile))\t\t\t           { $mime='application/vnd.ms-excel'; $imgmime='xls.png'; }\n    if (preg_match('/\\.xls(b|m|x)$/i',$tmpfile))\t\t\t   { $mime='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'; $imgmime='xls.png'; }\n    if (preg_match('/\\.pps(m|x)?$/i',$tmpfile))\t\t\t\t   { $mime='application/vnd.ms-powerpoint'; $imgmime='ppt.png'; }\n    if (preg_match('/\\.ppt(m|x)?$/i',$tmpfile))\t\t\t\t   { $mime='application/x-mspowerpoint'; $imgmime='ppt.png'; }\n    // Other\n    if (preg_match('/\\.pdf$/i',$tmpfile))                      { $mime='application/pdf'; $imgmime='pdf.png'; }\n    // Scripts\n    if (preg_match('/\\.bat$/i',$tmpfile))                      { $mime='text/x-bat'; $imgmime='script.png'; $srclang='dos'; }\n    if (preg_match('/\\.sh$/i',$tmpfile))                       { $mime='text/x-sh'; $imgmime='script.png'; $srclang='bash'; }\n    if (preg_match('/\\.ksh$/i',$tmpfile))                      { $mime='text/x-ksh'; $imgmime='script.png'; $srclang='bash'; }\n    if (preg_match('/\\.bash$/i',$tmpfile))                     { $mime='text/x-bash'; $imgmime='script.png'; $srclang='bash'; }\n    // Images\n    if (preg_match('/\\.ico$/i',$tmpfile))                      { $mime='image/x-icon'; $imgmime='image.png'; }\n    if (preg_match('/\\.(jpg|jpeg)$/i',$tmpfile))\t\t\t   { $mime='image/jpeg'; $imgmime='image.png'; }\n    if (preg_match('/\\.png$/i',$tmpfile))\t\t\t\t\t   { $mime='image/png'; $imgmime='image.png'; }\n    if (preg_match('/\\.gif$/i',$tmpfile))\t\t\t\t\t   { $mime='image/gif'; $imgmime='image.png'; }\n    if (preg_match('/\\.bmp$/i',$tmpfile))\t\t\t\t\t   { $mime='image/bmp'; $imgmime='image.png'; }\n    if (preg_match('/\\.(tif|tiff)$/i',$tmpfile))\t\t\t   { $mime='image/tiff'; $imgmime='image.png'; }\n    // Calendar\n    if (preg_match('/\\.vcs$/i',$tmpfile))\t\t\t\t\t   { $mime='text/calendar'; $imgmime='other.png'; }\n    if (preg_match('/\\.ics$/i',$tmpfile))\t\t\t\t\t   { $mime='text/calendar'; $imgmime='other.png'; }\n    // Other\n    if (preg_match('/\\.torrent$/i',$tmpfile))\t\t\t\t   { $mime='application/x-bittorrent'; $imgmime='other.png'; }\n    // Audio\n    if (preg_match('/\\.(mp3|ogg|au|wav|wma|mid)$/i',$tmpfile)) { $mime='audio'; $imgmime='audio.png'; }\n    // Video\n    if (preg_match('/\\.ogv$/i',$tmpfile))                      { $mime='video/ogg'; $imgmime='video.png'; }\n    if (preg_match('/\\.webm$/i',$tmpfile))                     { $mime='video/webm'; $imgmime='video.png'; }\n    if (preg_match('/\\.avi$/i',$tmpfile))                      { $mime='video/x-msvideo'; $imgmime='video.png'; }\n    if (preg_match('/\\.divx$/i',$tmpfile))                     { $mime='video/divx'; $imgmime='video.png'; }\n    if (preg_match('/\\.xvid$/i',$tmpfile))                     { $mime='video/xvid'; $imgmime='video.png'; }\n    if (preg_match('/\\.(wmv|mpg|mpeg)$/i',$tmpfile))           { $mime='video'; $imgmime='video.png'; }\n    // Archive\n    if (preg_match('/\\.(zip|rar|gz|tgz|z|cab|bz2|7z|tar|lzh)$/i',$tmpfile))   { $mime='archive'; $imgmime='archive.png'; }    // application/xxx where zzz is zip, ...\n    // Exe\n    if (preg_match('/\\.(exe|com)$/i',$tmpfile))                { $mime='application/octet-stream'; $imgmime='other.png'; }\n    // Lib\n    if (preg_match('/\\.(dll|lib|o|so|a)$/i',$tmpfile))         { $mime='library'; $imgmime='library.png'; }\n    // Err\n    if (preg_match('/\\.err$/i',$tmpfile))                      { $mime='error'; $imgmime='error.png'; }\n\n    // Return string\n    if ($mode == 1)\n    {\n        $tmp=explode('/',$mime);\n        return (! empty($tmp[1])?$tmp[1]:$tmp[0]);\n    }\n    if ($mode == 2)\n    {\n        return $imgmime;\n    }\n    if ($mode == 3)\n    {\n        return $srclang;\n    }\n\n    return $mime;\n}\n\n", "<?php\n/* Copyright (C) 2004-2007 Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2013 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2005      Simon Tosser         <simon@kornog-computing.com>\n * Copyright (C) 2005-2012 Regis Houssin        <regis.houssin@capnetworks.com>\n * Copyright (C) 2010\t   Pierre Morin         <pierre.morin@auguria.net>\n * Copyright (C) 2010\t   Juanjo Menent        <jmenent@2byte.es>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n * or see http://www.gnu.org/\n */\n\n/**\n *\t\\file       htdocs/document.php\n *  \\brief      Wrapper to download data files\n *  \\remarks    Call of this wrapper is made with URL:\n * \t\t\t\tdocument.php?modulepart=repfichierconcerne&file=pathrelatifdufichier\n * \t\t\t\tdocument.php?modulepart=logs&file=dolibarr.log\n */\n\ndefine('NOTOKENRENEWAL',1); // Disables token renewal\n// Pour autre que bittorrent, on charge environnement + info issus de logon (comme le user)\nif (isset($_GET[\"modulepart\"]) && $_GET[\"modulepart\"] == 'bittorrent' && ! defined(\"NOLOGIN\"))\n{\n\tdefine(\"NOLOGIN\",1);\n\tdefine(\"NOCSRFCHECK\",1);\t// We accept to go on this page from external web site.\n}\nif (! defined('NOREQUIREMENU')) define('NOREQUIREMENU','1');\nif (! defined('NOREQUIREHTML')) define('NOREQUIREHTML','1');\nif (! defined('NOREQUIREAJAX')) define('NOREQUIREAJAX','1');\n\n/**\n * Header empty\n *\n * @return\tvoid\n */\nfunction llxHeader() { }\n/**\n * Footer empty\n *\n * @return\tvoid\n */\nfunction llxFooter() { }\n\n\nrequire 'main.inc.php';\t// Load $user and permissions\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n$encoding = '';\n$action=GETPOST('action','alpha');\n$original_file=GETPOST('file','alpha');\t// Do not use urldecode here ($_GET are already decoded by PHP).\n$modulepart=GETPOST('modulepart','alpha');\n$urlsource=GETPOST('urlsource','alpha');\n$entity=GETPOST('entity','int')?GETPOST('entity','int'):$conf->entity;\n\n// Security check\nif (empty($modulepart)) accessforbidden('Bad value for parameter modulepart');\nif ($modulepart == 'fckeditor') $modulepart='medias';   // For backward compatibility\n\n$socid=0;\nif ($user->societe_id > 0) $socid = $user->societe_id;\n\n// For some module part, dir may be privates\nif (in_array($modulepart,array('facture_paiement','unpaid')))\n{\n\tif (! $user->rights->societe->client->voir || $socid) $original_file='private/'.$user->id.'/'.$original_file;\t// If user has no permission to see all, output dir is specific to user\n}\n\n/*\n * Action\n */\n\n// None\n\n\n/*\n * View\n */\n\n// Define mime type\n$type = 'application/octet-stream';\nif (GETPOST('type','alpha')) $type=GETPOST('type','alpha');\nelse $type=dol_mimetype($original_file);\n\n// Define attachment (attachment=true to force choice popup 'open'/'save as')\n$attachment = true;\nif (preg_match('/\\.(html|htm)$/i',$original_file)) $attachment = false;\nif (isset($_GET[\"attachment\"])) $attachment = GETPOST(\"attachment\",'alpha')?true:false;\nif (! empty($conf->global->MAIN_DISABLE_FORCE_SAVEAS)) $attachment=false;\n\n// Security: Delete string ../ into $original_file\n$original_file = str_replace(\"../\",\"/\", $original_file);\n\n// Find the subdirectory name as the reference\n$refname=basename(dirname($original_file).\"/\");\n\n// Security check\nif (empty($modulepart)) accessforbidden('Bad value for parameter modulepart');\n$check_access = dol_check_secure_access_document($modulepart, $original_file, $entity, $refname);\n$accessallowed              = $check_access['accessallowed'];\n$sqlprotectagainstexternals = $check_access['sqlprotectagainstexternals'];\n$original_file              = $check_access['original_file'];               // original_file is now a full path name\n\n// Basic protection (against external users only)\nif ($user->societe_id > 0)\n{\n\tif ($sqlprotectagainstexternals)\n\t{\n\t\t$resql = $db->query($sqlprotectagainstexternals);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num=$db->num_rows($resql);\n\t\t\t$i=0;\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\tif ($user->societe_id != $obj->fk_soc)\n\t\t\t\t{\n\t\t\t\t\t$accessallowed=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Security:\n// Limite acces si droits non corrects\nif (! $accessallowed)\n{\n\taccessforbidden();\n}\n\n// Security:\n// On interdit les remontees de repertoire ainsi que les pipe dans\n// les noms de fichiers.\nif (preg_match('/\\.\\./',$original_file) || preg_match('/[<>|]/',$original_file))\n{\n\tdol_syslog(\"Refused to deliver file \".$original_file);\n\t$file=basename($original_file);\t\t// Do no show plain path of original_file in shown error message\n\tdol_print_error(0,$langs->trans(\"ErrorFileNameInvalid\",$file));\n\texit;\n}\n\n\nclearstatcache();\n\n$filename = basename($original_file);\n\n// Output file on browser\ndol_syslog(\"document.php download $original_file $filename content-type=$type\");\n$original_file_osencoded=dol_osencode($original_file);\t// New file name encoded in OS encoding charset\n\n// This test if file exists should be useless. We keep it to find bug more easily\nif (! file_exists($original_file_osencoded))\n{\n\tdol_print_error(0,$langs->trans(\"ErrorFileDoesNotExists\",$original_file));\n\texit;\n}\n\n// Permissions are ok and file found, so we return it\ntop_httphead($type);\nheader('Content-Description: File Transfer');\nif ($encoding)   header('Content-Encoding: '.$encoding);\n// Add MIME Content-Disposition from RFC 2183 (inline=automatically displayed, atachment=need user action to open)\nif ($attachment) header('Content-Disposition: attachment; filename=\"'.$filename.'\"');\nelse header('Content-Disposition: inline; filename=\"'.$filename.'\"');\nheader('Content-Length: ' . dol_filesize($original_file));\n// Ajout directives pour resoudre bug IE\nheader('Cache-Control: Public, must-revalidate');\nheader('Pragma: public');\n\n//ob_clean();\n//flush();\n\nreadfile($original_file_osencoded);\n\nif (is_object($db)) $db->close();\n", "# Dolibarr language file - Source file is en_US - main\nDIRECTION=ltr\n# Note for Chinese:\n# msungstdlight or cid0ct are for traditional Chinese (traditional does not render with Ubuntu pdf reader)\n# stsongstdlight or cid0cs are for simplified Chinese\n# To read Chinese pdf with Linux: sudo apt-get install poppler-data\nFONTFORPDF=helvetica\nFONTSIZEFORPDF=10\nSeparatorDecimal=.\nSeparatorThousand=,\nFormatDateShort=%m/%d/%Y\nFormatDateShortInput=%m/%d/%Y\nFormatDateShortJava=MM/dd/yyyy\nFormatDateShortJavaInput=MM/dd/yyyy\nFormatDateShortJQuery=mm/dd/yy\nFormatDateShortJQueryInput=mm/dd/yy\nFormatHourShortJQuery=HH:MI\nFormatHourShort=%I:%M %p\nFormatHourShortDuration=%H:%M\nFormatDateTextShort=%b %d, %Y\nFormatDateText=%B %d, %Y\nFormatDateHourShort=%m/%d/%Y %I:%M %p\nFormatDateHourSecShort=%m/%d/%Y %I:%M:%S %p\nFormatDateHourTextShort=%b %d, %Y, %I:%M %p\nFormatDateHourText=%B %d, %Y, %I:%M %p\nDatabaseConnection=Database connection\nNoTemplateDefined=No template defined for this email type\nAvailableVariables=Available substitution variables\nNoTranslation=No translation\nNoRecordFound=No record found\nNoRecordDeleted=No record deleted\nNotEnoughDataYet=Not enough data\nNoError=No error\nError=Error\nErrors=Errors\nErrorFieldRequired=Field '%s' is required\nErrorFieldFormat=Field '%s' has a bad value\nErrorFileDoesNotExists=File %s does not exist\nErrorFailedToOpenFile=Failed to open file %s\nErrorCanNotCreateDir=Cannot create dir %s\nErrorCanNotReadDir=Cannot read dir %s\nErrorConstantNotDefined=Parameter %s not defined\nErrorUnknown=Unknown error\nErrorSQL=SQL Error\nErrorLogoFileNotFound=Logo file '%s' was not found\nErrorGoToGlobalSetup=Go to 'Company/Organisation' setup to fix this\nErrorGoToModuleSetup=Go to Module setup to fix this\nErrorFailedToSendMail=Failed to send mail (sender=%s, receiver=%s)\nErrorFileNotUploaded=File was not uploaded. Check that size does not exceed maximum allowed, that free space is available on disk and that there is not already a file with same name in this directory.\nErrorInternalErrorDetected=Error detected\nErrorWrongHostParameter=Wrong host parameter\nErrorYourCountryIsNotDefined=Your country is not defined. Go to Home-Setup-Edit and post again the form.\nErrorRecordIsUsedByChild=Failed to delete this record. This record is used by at least one child records.\nErrorWrongValue=Wrong value\nErrorWrongValueForParameterX=Wrong value for parameter %s\nErrorNoRequestInError=No request in error\nErrorServiceUnavailableTryLater=Service not available for the moment. Try again later.\nErrorDuplicateField=Duplicate value in a unique field\nErrorSomeErrorWereFoundRollbackIsDone=Some errors were found. We rollback changes.\nErrorConfigParameterNotDefined=Parameter <b>%s</b> is not defined inside Dolibarr config file <b>conf.php</b>.\nErrorCantLoadUserFromDolibarrDatabase=Failed to find user <b>%s</b> in Dolibarr database.\nErrorNoVATRateDefinedForSellerCountry=Error, no vat rates defined for country '%s'.\nErrorNoSocialContributionForSellerCountry=Error, no social/fiscal taxes type defined for country '%s'.\nErrorFailedToSaveFile=Error, failed to save file.\nErrorCannotAddThisParentWarehouse=You are trying to add a parent warehouse which is already a child of current one\nMaxNbOfRecordPerPage=Max nb of record per page\nNotAuthorized=You are not authorized to do that.\nSetDate=Set date\nSelectDate=Select a date\nSeeAlso=See also %s\nSeeHere=See here\nApply=Apply\nBackgroundColorByDefault=Default background color\nFileRenamed=The file was successfully renamed\nFileGenerated=The file was successfully generated\nFileSaved=The file was successfully saved\nFileUploaded=The file was successfully uploaded\nFileTransferComplete=File(s) was uploaded successfully\nFilesDeleted=File(s) successfully deleted\nFileWasNotUploaded=A file is selected for attachment but was not yet uploaded. Click on \"Attach file\" for this.\nNbOfEntries=Nb of entries\nGoToWikiHelpPage=Read online help (Internet access needed)\nGoToHelpPage=Read help\nRecordSaved=Record saved\nRecordDeleted=Record deleted\nLevelOfFeature=Level of features\nNotDefined=Not defined\nDolibarrInHttpAuthenticationSoPasswordUseless=Dolibarr authentication mode is set to <b>%s</b> in configuration file <b>conf.php</b>.<br>This means that the password database is external to Dolibarr, so changing this field may have no effect.\nAdministrator=Administrator\nUndefined=Undefined\nPasswordForgotten=Password forgotten?\nSeeAbove=See above\nHomeArea=Home area\nLastConnexion=Latest connection\nPreviousConnexion=Previous connection\nPreviousValue=Previous value\nConnectedOnMultiCompany=Connected on environment\nConnectedSince=Connected since\nAuthenticationMode=Authentication mode\nRequestedUrl=Requested URL\nDatabaseTypeManager=Database type manager\nRequestLastAccessInError=Latest database access request error\nReturnCodeLastAccessInError=Return code for latest database access request error\nInformationLastAccessInError=Information for latest database access request error\nDolibarrHasDetectedError=Dolibarr has detected a technical error\nInformationToHelpDiagnose=This information can be useful for diagnostic purposes\nMoreInformation=More information\nTechnicalInformation=Technical information\nTechnicalID=Technical ID\nNotePublic=Note (public)\nNotePrivate=Note (private)\nPrecisionUnitIsLimitedToXDecimals=Dolibarr was setup to limit precision of unit prices to <b>%s</b> decimals.\nDoTest=Test\nToFilter=Filter\nNoFilter=No filter\nWarningYouHaveAtLeastOneTaskLate=Warning, you have at least one element that has exceeded the tolerance delay.\nyes=yes\nYes=Yes\nno=no\nNo=No\nAll=All\nHome=Home\nHelp=Help\nOnlineHelp=Online help\nPageWiki=Wiki page\nMediaBrowser=Media browser\nAlways=Always\nNever=Never\nUnder=under\nPeriod=Period\nPeriodEndDate=End date for period\nActivate=Activate\nActivated=Activated\nClosed=Closed\nClosed2=Closed\nNotClosed=Not closed\nEnabled=Enabled\nDeprecated=Deprecated\nDisable=Disable\nDisabled=Disabled\nAdd=Add\nAddLink=Add link\nRemoveLink=Remove link\nAddToDraft=Add to draft\nUpdate=Update\nClose=Close\nCloseBox=Remove widget from your dashboard\nConfirm=Confirm\nConfirmSendCardByMail=Do you really want to send content of this card by mail to <b>%s</b>?\nDelete=Delete\nRemove=Remove\nResiliate=Terminate\nCancel=Cancel\nModify=Modify\nEdit=Edit\nValidate=Validate\nValidateAndApprove=Validate and Approve\nToValidate=To validate\nNotValidated=Not validated\nSave=Save\nSaveAs=Save As\nTestConnection=Test connection\nToClone=Clone\nConfirmClone=Choose data you want to clone :\nNoCloneOptionsSpecified=No data to clone defined.\nOf=of\nGo=Go\nRun=Run\nCopyOf=Copy of\nShow=Show\nHide=Hide\nShowCardHere=Show card\nSearch=Search\nSearchOf=Search\nValid=Valid\nApprove=Approve\nDisapprove=Disapprove\nReOpen=Re-Open\nUpload=Send file\nToLink=Link\nSelect=Select\nChoose=Choose\nResize=Resize\nRecenter=Recenter\nAuthor=Author\nUser=User\nUsers=Users\nGroup=Group\nGroups=Groups\nNoUserGroupDefined=No user group defined\nPassword=Password\nPasswordRetype=Retype your password\nNoteSomeFeaturesAreDisabled=Note that a lot of features/modules are disabled in this demonstration.\nName=Name\nPerson=Person\nParameter=Parameter\nParameters=Parameters\nValue=Value\nPersonalValue=Personal value\nNewObject=New %s\nNewValue=New value\nCurrentValue=Current value\nCode=Code\nType=Type\nLanguage=Language\nMultiLanguage=Multi-language\nNote=Note\nTitle=Title\nLabel=Label\nRefOrLabel=Ref. or label\nInfo=Log\nFamily=Family\nDescription=Description\nDesignation=Description\nModel=Doc template\nDefaultModel=Default doc template\nAction=Event\nAbout=About\nNumber=Number\nNumberByMonth=Number by month\nAmountByMonth=Amount by month\nNumero=Number\nLimit=Limit\nLimits=Limits\nLogout=Logout\nNoLogoutProcessWithAuthMode=No applicative disconnect feature with authentication mode <b>%s</b> \nConnection=Connection\nSetup=Setup\nAlert=Alert\nMenuWarnings=Alerts\nPrevious=Previous\nNext=Next\nCards=Cards\nCard=Card\nNow=Now\nHourStart=Start hour\nDate=Date\nDateAndHour=Date and hour\nDateToday=Today's date\nDateReference=Reference date\nDateStart=Start date\nDateEnd=End date\nDateCreation=Creation date\nDateCreationShort=Creat. date\nDateModification=Modification date\nDateModificationShort=Modif. date\nDateLastModification=Latest modification date\nDateValidation=Validation date\nDateClosing=Closing date\nDateDue=Due date\nDateValue=Value date\nDateValueShort=Value date\nDateOperation=Operation date\nDateOperationShort=Oper. Date\nDateLimit=Limit date\nDateRequest=Request date\nDateProcess=Process date\nDateBuild=Report build date\nDatePayment=Date of payment\nDateApprove=Approving date\nDateApprove2=Approving date (second approval)\nUserCreation=Creation user\nUserModification=Modification user\nUserCreationShort=Creat. user\nUserModificationShort=Modif. user\nDurationYear=year\nDurationMonth=month\nDurationWeek=week\nDurationDay=day\nDurationYears=years\nDurationMonths=months\nDurationWeeks=weeks\nDurationDays=days\nYear=Year\nMonth=Month\nWeek=Week\nWeekShort=Week\nDay=Day\nHour=Hour\nMinute=Minute\nSecond=Second\nYears=Years\nMonths=Months\nDays=Days\ndays=days\nHours=Hours\nMinutes=Minutes\nSeconds=Seconds\nWeeks=Weeks\nToday=Today\nYesterday=Yesterday\nTomorrow=Tomorrow\nMorning=Morning\nAfternoon=Afternoon\nQuadri=Quadri\nMonthOfDay=Month of the day\nHourShort=H\nMinuteShort=mn\nRate=Rate\nCurrencyRate=Currency conversion rate\nUseLocalTax=Include tax\nBytes=Bytes\nKiloBytes=Kilobytes\nMegaBytes=Megabytes\nGigaBytes=Gigabytes\nTeraBytes=Terabytes\nb=b.\nKb=Kb\nMb=Mb\nGb=Gb\nTb=Tb\nCut=Cut\nCopy=Copy\nPaste=Paste\nDefault=Default\nDefaultValue=Default value\nDefaultValues=Default values\nPrice=Price\nUnitPrice=Unit price\nUnitPriceHT=Unit price (net)\nUnitPriceTTC=Unit price\nPriceU=U.P.\nPriceUHT=U.P. (net)\nPriceUHTCurrency=U.P (currency)\nPriceUTTC=U.P. (inc. tax)\nAmount=Amount\nAmountInvoice=Invoice amount\nAmountPayment=Payment amount\nAmountHTShort=Amount (net)\nAmountTTCShort=Amount (inc. tax)\nAmountHT=Amount (net of tax)\nAmountTTC=Amount (inc. tax)\nAmountVAT=Amount tax\nMulticurrencyAlreadyPaid=Already payed, original currency\nMulticurrencyRemainderToPay=Remain to pay, original currency\nMulticurrencyPaymentAmount=Payment amount, original currency\nMulticurrencyAmountHT=Amount (net of tax), original currency\nMulticurrencyAmountTTC=Amount (inc. of tax), original currency\nMulticurrencyAmountVAT=Amount tax, original currency\nAmountLT1=Amount tax 2\nAmountLT2=Amount tax 3\nAmountLT1ES=Amount RE\nAmountLT2ES=Amount IRPF\nAmountTotal=Total amount\nAmountAverage=Average amount\nPriceQtyMinHT=Price quantity min. (net of tax)\nPercentage=Percentage\nTotal=Total\nSubTotal=Subtotal\nTotalHTShort=Total (net)\nTotalHTShortCurrency=Total (net in currency)\nTotalTTCShort=Total (inc. tax)\nTotalHT=Total (net of tax)\nTotalHTforthispage=Total (net of tax) for this page\nTotalforthispage=Total for this page\nTotalTTC=Total (inc. tax)\nTotalTTCToYourCredit=Total (inc. tax) to your credit\nTotalVAT=Total tax\nTotalVATIN=Total IGST\nTotalLT1=Total tax 2\nTotalLT2=Total tax 3\nTotalLT1ES=Total RE\nTotalLT2ES=Total IRPF\nTotalLT1IN=Total CGST\nTotalLT2IN=Total SGST\nHT=Net of tax\nTTC=Inc. tax\nINCT=Inc. all taxes\nVAT=Sales tax\nVATIN=IGST\nVATs=Sales taxes\nVATINs=IGST taxes\nLT1=Sales tax 2\nLT2=Sales tax 3\nLT1ES=RE\nLT2ES=IRPF\nLT1IN=CGST\nLT2IN=SGST\nVATRate=Tax Rate\nAverage=Average\nSum=Sum\nDelta=Delta\nModule=Module/Application\nModules=Modules/Applications\nOption=Option\nList=List\nFullList=Full list\nStatistics=Statistics\nOtherStatistics=Other statistics\nStatus=Status\nFavorite=Favorite\nShortInfo=Info.\nRef=Ref.\nExternalRef=Ref. extern\nRefSupplier=Ref. supplier\nRefPayment=Ref. payment\nCommercialProposalsShort=Commercial proposals\nComment=Comment\nComments=Comments\nActionsToDo=Events to do\nActionsToDoShort=To do\nActionsDoneShort=Done\nActionNotApplicable=Not applicable\nActionRunningNotStarted=To start\nActionRunningShort=In progress\nActionDoneShort=Finished\nActionUncomplete=Uncomplete\nCompanyFoundation=Company/Organisation\nContactsForCompany=Contacts for this third party\nContactsAddressesForCompany=Contacts/addresses for this third party\nAddressesForCompany=Addresses for this third party\nActionsOnCompany=Events about this third party\nActionsOnMember=Events about this member\nNActionsLate=%s late\nRequestAlreadyDone=Request already recorded\nFilter=Filter\nFilterOnInto=Search criteria '<strong>%s</strong>' into fields %s \nRemoveFilter=Remove filter\nChartGenerated=Chart generated\nChartNotGenerated=Chart not generated\nGeneratedOn=Build on %s\nGenerate=Generate\nDuration=Duration\nTotalDuration=Total duration\nSummary=Summary\nDolibarrStateBoard=Database statistics\nDolibarrWorkBoard=Open items dashboard \nNoOpenedElementToProcess=No opened element to process\nAvailable=Available\nNotYetAvailable=Not yet available\nNotAvailable=Not available\nCategories=Tags/categories\nCategory=Tag/category\nBy=By\nFrom=From\nto=to\nand=and\nor=or\nOther=Other\nOthers=Others\nOtherInformations=Other informations\nQuantity=Quantity\nQty=Qty\nChangedBy=Changed by\nApprovedBy=Approved by\nApprovedBy2=Approved by (second approval)\nApproved=Approved\nRefused=Refused\nReCalculate=Recalculate\nResultKo=Failure\nReporting=Reporting\nReportings=Reporting\nDraft=Draft\nDrafts=Drafts\nValidated=Validated\nOpened=Open\nNew=New\nDiscount=Discount\nUnknown=Unknown\nGeneral=General\nSize=Size\nReceived=Received\nPaid=Paid\nTopic=Subject\nByCompanies=By third parties\nByUsers=By users\nLinks=Links\nLink=Link\nRejects=Rejects\nPreview=Preview\nNextStep=Next step\nDatas=Data\nNone=None\nNoneF=None\nNoneOrSeveral=None or several\nLate=Late\nLateDesc=Delay to define if a record is late or not depends on your setup. Ask your admin to change delay from menu Home - Setup - Alerts.\nPhoto=Picture\nPhotos=Pictures\nAddPhoto=Add picture\nDeletePicture=Picture delete\nConfirmDeletePicture=Confirm picture deletion?\nLogin=Login\nCurrentLogin=Current login\nEnterLoginDetail=Enter login details\nJanuary=January\nFebruary=February\nMarch=March\nApril=April\nMay=May\nJune=June\nJuly=July\nAugust=August\nSeptember=September\nOctober=October\nNovember=November\nDecember=December\nJanuaryMin=Jan\nFebruaryMin=Feb\nMarchMin=Mar\nAprilMin=Apr\nMayMin=May\nJuneMin=Jun\nJulyMin=Jul\nAugustMin=Aug\nSeptemberMin=Sep\nOctoberMin=Oct\nNovemberMin=Nov\nDecemberMin=Dec\nMonth01=January\nMonth02=February\nMonth03=March\nMonth04=April\nMonth05=May\nMonth06=June\nMonth07=July\nMonth08=August\nMonth09=September\nMonth10=October\nMonth11=November\nMonth12=December\nMonthShort01=Jan\nMonthShort02=Feb\nMonthShort03=Mar\nMonthShort04=Apr\nMonthShort05=May\nMonthShort06=Jun\nMonthShort07=Jul\nMonthShort08=Aug\nMonthShort09=Sep\nMonthShort10=Oct\nMonthShort11=Nov\nMonthShort12=Dec\nAttachedFiles=Attached files and documents\nDateFormatYYYYMM=YYYY-MM\nDateFormatYYYYMMDD=YYYY-MM-DD\nDateFormatYYYYMMDDHHMM=YYYY-MM-DD HH:SS\nReportName=Report name\nReportPeriod=Report period\nReportDescription=Description\nReport=Report\nKeyword=Keyword\nOrigin=Origin\nLegend=Legend\nFill=Fill\nReset=Reset\nFile=File\nFiles=Files\nNotAllowed=Not allowed\nReadPermissionNotAllowed=Read permission not allowed\nAmountInCurrency=Amount in %s currency\nExample=Example\nExamples=Examples\nNoExample=No example\nFindBug=Report a bug\nNbOfThirdParties=Number of third parties\nNbOfLines=Number of lines\nNbOfObjects=Number of objects\nNbOfObjectReferers=Number of related items\nReferers=Related items\nTotalQuantity=Total quantity\nDateFromTo=From %s to %s\nDateFrom=From %s\nDateUntil=Until %s\nCheck=Check\nUncheck=Uncheck\nInternal=Internal\nExternal=External\nInternals=Internal\nExternals=External\nWarning=Warning\nWarnings=Warnings\nBuildDoc=Build Doc\nEntity=Environment\nEntities=Entities\nCustomerPreview=Customer preview\nSupplierPreview=Supplier preview\nShowCustomerPreview=Show customer preview\nShowSupplierPreview=Show supplier preview\nRefCustomer=Ref. customer\nCurrency=Currency\nInfoAdmin=Information for administrators\nUndo=Undo\nRedo=Redo\nExpandAll=Expand all\nUndoExpandAll=Undo expand\nReason=Reason\nFeatureNotYetSupported=Feature not yet supported\nCloseWindow=Close window\nResponse=Response\nPriority=Priority\nSendByMail=Send by EMail\nMailSentBy=Email sent by\nTextUsedInTheMessageBody=Email body\nSendAcknowledgementByMail=Send confirmation email\nEMail=E-mail\nNoEMail=No email\nEmail=Email\nNoMobilePhone=No mobile phone\nOwner=Owner\nFollowingConstantsWillBeSubstituted=The following constants will be replaced with the corresponding value.\nRefresh=Refresh\nBackToList=Back to list\nGoBack=Go back\nCanBeModifiedIfOk=Can be modified if valid\nCanBeModifiedIfKo=Can be modified if not valid\nValueIsValid=Value is valid\nValueIsNotValid=Value is not valid\nRecordCreatedSuccessfully=Record created successfully\nRecordModifiedSuccessfully=Record modified successfully\nRecordsModified=%s record modified\nRecordsDeleted=%s record deleted\nAutomaticCode=Automatic code\nFeatureDisabled=Feature disabled\nMoveBox=Move widget\nOffered=Offered\nNotEnoughPermissions=You don't have permission for this action\nSessionName=Session name\nMethod=Method\nReceive=Receive\nCompleteOrNoMoreReceptionExpected=Complete or nothing more expected\nExpectedValue=Expected Value\nCurrentValue=Current Value\nPartialWoman=Partial\nTotalWoman=Total\nNeverReceived=Never received\nCanceled=Canceled\nYouCanChangeValuesForThisListFromDictionarySetup=You can change values for this list from menu Setup - Dictionaries\nYouCanChangeValuesForThisListFrom=You can change values for this list from menu %s\nYouCanSetDefaultValueInModuleSetup=You can set the default value used when creating a new record into module setup\nColor=Color\nDocuments=Linked files\nDocuments2=Documents\nUploadDisabled=Upload disabled\nMenuECM=Documents\nMenuAWStats=AWStats\nMenuMembers=Members\nMenuAgendaGoogle=Google agenda\nThisLimitIsDefinedInSetup=Dolibarr limit (Menu home-setup-security): %s Kb, PHP limit: %s Kb\nNoFileFound=No documents saved in this directory\nCurrentUserLanguage=Current language\nCurrentTheme=Current theme\nCurrentMenuManager=Current menu manager\nBrowser=Browser\nLayout=Layout\nScreen=Screen\nDisabledModules=Disabled modules\nFor=For\nForCustomer=For customer\nSignature=Signature\nDateOfSignature=Date of signature\nHidePassword=Show command with password hidden\nUnHidePassword=Show real command with clear password\nRoot=Root\nInformations=Informations\nPage=Page\nNotes=Notes\nAddNewLine=Add new line\nAddFile=Add file\nFreeZone=Not a predefined product/service\nFreeLineOfType=Not a predefined entry of type\nCloneMainAttributes=Clone object with its main attributes\nPDFMerge=PDF Merge\nMerge=Merge\nDocumentModelStandardPDF=Standard PDF template\nPrintContentArea=Show page to print main content area\nMenuManager=Menu manager\nWarningYouAreInMaintenanceMode=Warning, you are in a maintenance mode, so only login <b>%s</b> is allowed to use application at the moment.\nCoreErrorTitle=System error\nCoreErrorMessage=Sorry, an error occurred. Contact your system administrator to check the logs or disable $dolibarr_main_prod=1 to get more information.\nCreditCard=Credit card\nFieldsWithAreMandatory=Fields with <b>%s</b> are mandatory\nFieldsWithIsForPublic=Fields with <b>%s</b> are shown on public list of members. If you don't want this, check off the \"public\" box.\nAccordingToGeoIPDatabase=(according to GeoIP convertion)\nLine=Line\nNotSupported=Not supported\nRequiredField=Required field\nResult=Result\nToTest=Test\nValidateBefore=Card must be validated before using this feature\nVisibility=Visibility\nPrivate=Private\nHidden=Hidden\nResources=Resources\nSource=Source\nPrefix=Prefix\nBefore=Before\nAfter=After\nIPAddress=IP address\nFrequency=Frequency\nIM=Instant messaging\nNewAttribute=New attribute\nAttributeCode=Attribute code\nURLPhoto=URL of photo/logo\nSetLinkToAnotherThirdParty=Link to another third party\nLinkTo=Link to\nLinkToProposal=Link to proposal\nLinkToOrder=Link to order\nLinkToInvoice=Link to invoice\nLinkToSupplierOrder=Link to supplier order\nLinkToSupplierProposal=Link to supplier proposal\nLinkToSupplierInvoice=Link to supplier invoice\nLinkToContract=Link to contract\nLinkToIntervention=Link to intervention\nCreateDraft=Create draft\nSetToDraft=Back to draft\nClickToEdit=Click to edit\nObjectDeleted=Object %s deleted\nByCountry=By country\nByTown=By town\nByDate=By date\nByMonthYear=By month/year\nByYear=By year\nByMonth=By month\nByDay=By day\nBySalesRepresentative=By sales representative\nLinkedToSpecificUsers=Linked to a particular user contact\nNoResults=No results\nAdminTools=Admin tools\nSystemTools=System tools\nModulesSystemTools=Modules tools\nTest=Test\nElement=Element\nNoPhotoYet=No pictures available yet\nDashboard=Dashboard\nMyDashboard=My dashboard\nDeductible=Deductible\nfrom=from\ntoward=toward\nAccess=Access\nSelectAction=Select action\nSelectTargetUser=Select target user/employee\nHelpCopyToClipboard=Use Ctrl+C to copy to clipboard\nSaveUploadedFileWithMask=Save file on server with name \"<strong>%s</strong>\" (otherwise \"%s\")\nOriginFileName=Original filename\nSetDemandReason=Set source\nSetBankAccount=Define Bank Account\nAccountCurrency=Account Currency\nViewPrivateNote=View notes\nXMoreLines=%s line(s) hidden\nPublicUrl=Public URL\nAddBox=Add box\nSelectElementAndClick=Select an element and click %s\nPrintFile=Print File %s\nShowTransaction=Show entry on bank account\nGoIntoSetupToChangeLogo=Go into Home - Setup - Company to change logo or go into Home - Setup - Display to hide.\nDeny=Deny\nDenied=Denied\nListOf=List of %s\nListOfTemplates=List of templates\nGender=Gender\nGenderman=Man\nGenderwoman=Woman\nViewList=List view\nMandatory=Mandatory\nHello=Hello\nSincerely=Sincerely\nDeleteLine=Delete line\nConfirmDeleteLine=Are you sure you want to delete this line?\nNoPDFAvailableForDocGenAmongChecked=No PDF were available for the document generation among checked record\nTooManyRecordForMassAction=Too many record selected for mass action. The action is restricted to a list of %s record.\nNoRecordSelected=No record selected\nMassFilesArea=Area for files built by mass actions\nShowTempMassFilesArea=Show area of files built by mass actions\nRelatedObjects=Related Objects\nClassifyBilled=Classify billed\nProgress=Progress\nClickHere=Click here\nFrontOffice=Front office\nBackOffice=Back office\nView=View\nExport=Export\nExports=Exports\nExportFilteredList=Export filtered list\nExportList=Export list\nMiscellaneous=Miscellaneous\nCalendar=Calendar\nGroupBy=Group by...\nViewFlatList=View flat list\nRemoveString=Remove string '%s'\nSomeTranslationAreUncomplete=Some languages may be partially translated or may contains errors. If you detect some, you can fix language files registering to <a href=\"https://transifex.com/projects/p/dolibarr/\" target=\"_blank\">https://transifex.com/projects/p/dolibarr/</a>. \nDirectDownloadLink=Direct download link\nDownload=Download\nActualizeCurrency=Update currency rate\nFiscalyear=Fiscal year\nModuleBuilder=Module Builder\nSetMultiCurrencyCode=Set currency\nBulkActions=Bulk actions\nClickToShowHelp=Click to show tooltip help\nHR=HR\nHRAndBank=HR and Bank\nAutomaticallyCalculated=Automatically calculated\nTitleSetToDraft=Go back to draft\nConfirmSetToDraft=Are you sure you want to go back to Draft status ?\nImportId=Import id\nWebsites=Web sites\nEvents=Events\n# Week day\nMonday=Monday\nTuesday=Tuesday\nWednesday=Wednesday\nThursday=Thursday\nFriday=Friday\nSaturday=Saturday\nSunday=Sunday\nMondayMin=Mo\nTuesdayMin=Tu\nWednesdayMin=We\nThursdayMin=Th\nFridayMin=Fr\nSaturdayMin=Sa\nSundayMin=Su\nDay1=Monday\nDay2=Tuesday\nDay3=Wednesday\nDay4=Thursday\nDay5=Friday\nDay6=Saturday\nDay0=Sunday\nShortMonday=M\nShortTuesday=T\nShortWednesday=W\nShortThursday=T\nShortFriday=F\nShortSaturday=S\nShortSunday=S\nSelectMailModel=Select email template\nSetRef=Set ref\nSelect2ResultFoundUseArrows=Some results found. Use arrows to select.\nSelect2NotFound=No result found\nSelect2Enter=Enter\nSelect2MoreCharacter=or more character\nSelect2MoreCharacters=or more characters\nSelect2MoreCharactersMore=<strong>Search syntax:</strong><br /><kbd><strong> |</strong></kbd><kbd> OR</kbd> (a|b)<br /><kbd><strong>*</strong></kbd><kbd> Any character</kbd> (a*b)<br /><kbd><strong>^</strong></kbd><kbd> Start with</kbd> (^ab)<br /><kbd><strong>$</strong></kbd><kbd> End with</kbd> (ab$)<br />\nSelect2LoadingMoreResults=Loading more results...\nSelect2SearchInProgress=Search in progress...\nSearchIntoThirdparties=Thirdparties\nSearchIntoContacts=Contacts\nSearchIntoMembers=Members\nSearchIntoUsers=Users\nSearchIntoProductsOrServices=Products or services\nSearchIntoProjects=Projects\nSearchIntoTasks=Tasks\nSearchIntoCustomerInvoices=Customer invoices\nSearchIntoSupplierInvoices=Supplier invoices\nSearchIntoCustomerOrders=Customer orders\nSearchIntoSupplierOrders=Supplier orders\nSearchIntoCustomerProposals=Customer proposals\nSearchIntoSupplierProposals=Supplier proposals\nSearchIntoInterventions=Interventions\nSearchIntoContracts=Contracts\nSearchIntoCustomerShipments=Customer shipments\nSearchIntoExpenseReports=Expense reports\nSearchIntoLeaves=Leaves", "<?php\n/* Copyright (C) 2002-2007  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2003       Xavier Dutoit           <doli@sydesy.com>\n * Copyright (C) 2004-2015  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Sebastien Di Cintio     <sdicintio@ressource-toi.org>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2005-2015  Regis Houssin           <regis.houssin@capnetworks.com>\n * Copyright (C) 2011-2014  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2008       Matteli\n * Copyright (C) 2011-2016  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2012       Christophe Battarel     <christophe.battarel@altairis.fr>\n * Copyright (C) 2014-2015  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2015       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/main.inc.php\n *\t\\ingroup\tcore\n *\t\\brief      File that defines environment for Dolibarr GUI pages only (file not required by scripts)\n */\n\n//@ini_set('memory_limit', '128M');\t// This may be useless if memory is hard limited by your PHP\n\n// For optional tuning. Enabled if environment variable MAIN_SHOW_TUNING_INFO is defined.\n$micro_start_time=0;\nif (! empty($_SERVER['MAIN_SHOW_TUNING_INFO']))\n{\n    list($usec, $sec) = explode(\" \", microtime());\n    $micro_start_time=((float) $usec + (float) $sec);\n    // Add Xdebug code coverage\n    //define('XDEBUGCOVERAGE',1);\n    if (defined('XDEBUGCOVERAGE')) {\n        xdebug_start_code_coverage();\n    }\n}\n\n// Removed magic_quotes\nif (function_exists('get_magic_quotes_gpc'))\t// magic_quotes_* deprecated in PHP 5.0 and removed in PHP 5.5\n{\n    if (get_magic_quotes_gpc())\n    {\n        // Forcing parameter setting magic_quotes_gpc and cleaning parameters\n        // (Otherwise he would have for each position, condition\n        // Reading stripslashes variable according to state get_magic_quotes_gpc).\n        // Off mode recommended (just do $db->escape for insert / update).\n        function stripslashes_deep($value)\n        {\n            return (is_array($value) ? array_map('stripslashes_deep', $value) : stripslashes($value));\n        }\n        $_GET     = array_map('stripslashes_deep', $_GET);\n        $_POST    = array_map('stripslashes_deep', $_POST);\n        $_FILES   = array_map('stripslashes_deep', $_FILES);\n        //$_COOKIE  = array_map('stripslashes_deep', $_COOKIE); // Useless because a cookie should never be outputed on screen nor used into sql\n        @set_magic_quotes_runtime(0);\n    }\n}\n\n/**\n * Security: SQL Injection and XSS Injection (scripts) protection (Filters on GET, POST, PHP_SELF).\n *\n * @param\t\tstring\t\t$val\t\tValue\n * @param\t\tstring\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF\n * @return\t\tint\t\t\t\t\t\t>0 if there is an injection\n */\nfunction test_sql_and_script_inject($val, $type)\n{\n    $sql_inj = 0;\n    // For SQL Injection (only GET and POST are used to be included into bad escaped SQL requests)\n    if ($type != 2)\n    {\n        $sql_inj += preg_match('/delete\\s+from/i',\t $val);\n        $sql_inj += preg_match('/create\\s+table/i',\t $val);\n        $sql_inj += preg_match('/update.+set.+=/i',  $val);\n        $sql_inj += preg_match('/insert\\s+into/i', \t $val);\n        $sql_inj += preg_match('/select.+from/i', \t $val);\n        $sql_inj += preg_match('/union.+select/i', \t $val);\n        $sql_inj += preg_match('/into\\s+(outfile|dumpfile)/i',  $val);\n        $sql_inj += preg_match('/(\\.\\.%2f)+/i',\t\t $val);\n    }\n    // For XSS Injection done by adding javascript with script\n    // This is all cases a browser consider text is javascript:\n    // When it found '<script', 'javascript:', '<style', 'onload\\s=' on body tag, '=\"&' on a tag size with old browsers\n    // All examples on page: http://ha.ckers.org/xss.html#XSScalc\n    $sql_inj += preg_match('/<script/i', $val);\n    if (! defined('NOSTYLECHECK')) $sql_inj += preg_match('/<style/i', $val);\n    $sql_inj += preg_match('/base[\\s]+href/si', $val);\n    $sql_inj += preg_match('/<.*onmouse/si', $val);       // onmousexxx can be set on img or any html tag like <img title='...' onmouseover=alert(1)>\n    $sql_inj += preg_match('/onerror\\s*=/i', $val);       // onerror can be set on img or any html tag like <img title='...' onerror = alert(1)>\n    $sql_inj += preg_match('/onfocus\\s*=/i', $val);       // onfocus can be set on input text html tag like <input type='text' value='...' onfocus = alert(1)>\n    if ($type == 1)\n    {\n        $sql_inj += preg_match('/javascript:/i', $val);\n        $sql_inj += preg_match('/vbscript:/i', $val);\n    }\n    // For XSS Injection done by adding javascript closing html tags like with onmousemove, etc... (closing a src or href tag with not cleaned param)\n    if ($type == 1) $sql_inj += preg_match('/\"/i', $val);\t\t// We refused \" in GET parameters value\n    if ($type == 2) $sql_inj += preg_match('/[;\"]/', $val);\t\t// PHP_SELF is a file system path. It can contains spaces.\n    return $sql_inj;\n}\n\n/**\n * Return true if security check on parameters are OK, false otherwise.\n *\n * @param\t\tstring\t\t\t$var\t\tVariable name\n * @param\t\tstring\t\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF\n * @return\t\tboolean||null\t\t\t\ttrue if there is an injection. Stop code if injection found.\n */\nfunction analyseVarsForSqlAndScriptsInjection(&$var, $type)\n{\n    if (is_array($var))\n    {\n        foreach ($var as $key => $value)\n        {\n            if (analyseVarsForSqlAndScriptsInjection($value,$type))\n            {\n                $var[$key] = $value;\n            }\n            else\n\t\t\t{\n                print 'Access refused by SQL/Script injection protection in main.inc.php (type='.htmlentities($type).' key='.htmlentities($key).' value='.htmlentities($value).' page='.htmlentities($_SERVER[\"REQUEST_URI\"]).')';\n                exit;\n            }\n        }\n        return true;\n    }\n    else\n    {\n        return (test_sql_and_script_inject($var,$type) <= 0);\n    }\n}\n\n\n// Check consistency of NOREQUIREXXX DEFINES\nif ((defined('NOREQUIREDB') || defined('NOREQUIRETRAN')) && ! defined('NOREQUIREMENU')) dol_print_error('','If define NOREQUIREDB or NOREQUIRETRAN are set, you must also set NOREQUIREMENU or not use them');\n\n// Sanity check on URL\nif (! empty($_SERVER[\"PHP_SELF\"]))\n{\n    $morevaltochecklikepost=array($_SERVER[\"PHP_SELF\"]);\n    analyseVarsForSqlAndScriptsInjection($morevaltochecklikepost,2);\n}\n// Sanity check on GET parameters\nif (! defined('NOSCANGETFORINJECTION') && ! empty($_SERVER[\"QUERY_STRING\"]))\n{\n    $morevaltochecklikeget=array($_SERVER[\"QUERY_STRING\"]);\n    analyseVarsForSqlAndScriptsInjection($morevaltochecklikeget,1);\n}\n// Sanity check on POST\nif (! defined('NOSCANPOSTFORINJECTION'))\n{\n\tanalyseVarsForSqlAndScriptsInjection($_POST,0);\n}\n\n// This is to make Dolibarr working with Plesk\nif (! empty($_SERVER['DOCUMENT_ROOT']) && substr($_SERVER['DOCUMENT_ROOT'], -6) !== 'htdocs')\n{\n\tset_include_path($_SERVER['DOCUMENT_ROOT'] . '/htdocs');\n}\n\n// Include the conf.php and functions.lib.php\nrequire_once 'filefunc.inc.php';\n\n// If there is a POST parameter to tell to save automatically some POST parameters into cookies, we do it\nif (! empty($_POST[\"DOL_AUTOSET_COOKIE\"]))\n{\n\t$tmpautoset=explode(':',$_POST[\"DOL_AUTOSET_COOKIE\"],2);\n\t$tmplist=explode(',',$tmpautoset[1]);\n\t$cookiearrayvalue='';\n\tforeach ($tmplist as $tmpkey)\n\t{\n\t\t$postkey=$tmpautoset[0].'_'.$tmpkey;\n\t\t//var_dump('tmpkey='.$tmpkey.' postkey='.$postkey.' value='.$_POST[$postkey]);\n\t\tif (! empty($_POST[$postkey])) $cookiearrayvalue[$tmpkey]=$_POST[$postkey];\n\t}\n\t$cookiename=$tmpautoset[0];\n\t$cookievalue=json_encode($cookiearrayvalue);\n\t//var_dump('setcookie cookiename='.$cookiename.' cookievalue='.$cookievalue);\n\tsetcookie($cookiename, empty($cookievalue)?'':$cookievalue, empty($cookievalue)?0:(time()+(86400*354)), '/');\t// keep cookie 1 year\n\tif (empty($cookievalue)) unset($_COOKIE[$cookiename]);\n}\n\n// Init session. Name of session is specific to Dolibarr instance.\n$prefix=dol_getprefix();\n$sessionname='DOLSESSID_'.$prefix;\n$sessiontimeout='DOLSESSTIMEOUT_'.$prefix;\nif (! empty($_COOKIE[$sessiontimeout])) ini_set('session.gc_maxlifetime',$_COOKIE[$sessiontimeout]);\nsession_name($sessionname);\nsession_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n// This create lock released until session_write_close() or end of page.\n// We need this lock as long as we read/write $_SESSION ['vars']. We can close released when finished.\nif (! defined('NOSESSION'))\n{\n    session_start();\n    if (ini_get('register_globals'))    // Deprecated in 5.3 and removed in 5.4. To solve bug in using $_SESSION\n    {\n        foreach ($_SESSION as $key=>$value)\n        {\n            if (isset($GLOBALS[$key])) unset($GLOBALS[$key]);\n        }\n    }\n}\n\n// Init the 5 global objects, this include will make the new and set properties for: $conf, $db, $langs, $user, $mysoc\nrequire_once 'master.inc.php';\n\n// Activate end of page function\nregister_shutdown_function('dol_shutdown');\n\n// Detection browser\nif (isset($_SERVER[\"HTTP_USER_AGENT\"]))\n{\n    $tmp=getBrowserInfo($_SERVER[\"HTTP_USER_AGENT\"]);\n    $conf->browser->name=$tmp['browsername'];\n    $conf->browser->os=$tmp['browseros'];\n    $conf->browser->version=$tmp['browserversion'];\n    $conf->browser->layout=$tmp['layout'];     // 'classic', 'phone', 'tablet'\n    $conf->browser->phone=$tmp['phone'];\t   // TODO deprecated, use ->layout\n    $conf->browser->tablet=$tmp['tablet'];\t   // TODO deprecated, use ->layout\n    //var_dump($conf->browser);\n\n    if ($conf->browser->layout == 'phone') $conf->dol_no_mouse_hover=1;\n    if ($conf->browser->layout == 'phone') $conf->global->MAIN_TESTMENUHIDER=1;\n}\n\n// Force HTTPS if required ($conf->file->main_force_https is 0/1 or https dolibarr root url)\n// $_SERVER[\"HTTPS\"] is 'on' when link is https, otherwise $_SERVER[\"HTTPS\"] is empty or 'off'\nif (! empty($conf->file->main_force_https) && (empty($_SERVER[\"HTTPS\"]) || $_SERVER[\"HTTPS\"] != 'on'))\n{\n    $newurl='';\n    if (is_numeric($conf->file->main_force_https))\n    {\n        if ($conf->file->main_force_https == '1' && ! empty($_SERVER[\"SCRIPT_URI\"]))\t// If SCRIPT_URI supported by server\n        {\n            if (preg_match('/^http:/i',$_SERVER[\"SCRIPT_URI\"]) && ! preg_match('/^https:/i',$_SERVER[\"SCRIPT_URI\"]))\t// If link is http\n            {\n                $newurl=preg_replace('/^http:/i','https:',$_SERVER[\"SCRIPT_URI\"]);\n            }\n        }\n        else\t// Check HTTPS environment variable (Apache/mod_ssl only)\n        {\n            $newurl=preg_replace('/^http:/i','https:',DOL_MAIN_URL_ROOT).$_SERVER[\"REQUEST_URI\"];\n        }\n    }\n    else\n    {\n        // Check HTTPS environment variable (Apache/mod_ssl only)\n        $newurl=$conf->file->main_force_https.$_SERVER[\"REQUEST_URI\"];\n    }\n    // Start redirect\n    if ($newurl)\n    {\n        dol_syslog(\"main.inc: dolibarr_main_force_https is on, we make a redirect to \".$newurl);\n        header(\"Location: \".$newurl);\n        exit;\n    }\n    else\n    {\n        dol_syslog(\"main.inc: dolibarr_main_force_https is on but we failed to forge new https url so no redirect is done\", LOG_WARNING);\n    }\n}\n\n\n// Loading of additional presentation includes\nif (! defined('NOREQUIREHTML')) require_once DOL_DOCUMENT_ROOT .'/core/class/html.form.class.php';\t    // Need 660ko memory (800ko in 2.2)\nif (! defined('NOREQUIREAJAX') && $conf->use_javascript_ajax) require_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\t// Need 22ko memory\n\n// If install or upgrade process not done or not completely finished, we call the install page.\nif (! empty($conf->global->MAIN_NOT_INSTALLED) || ! empty($conf->global->MAIN_NOT_UPGRADED))\n{\n    dol_syslog(\"main.inc: A previous install or upgrade was not complete. Redirect to install page.\", LOG_WARNING);\n    header(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n    exit;\n}\n// If an upgrade process is required, we call the install page.\nif ((! empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ($conf->global->MAIN_VERSION_LAST_UPGRADE != DOL_VERSION))\n|| (empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ! empty($conf->global->MAIN_VERSION_LAST_INSTALL) && ($conf->global->MAIN_VERSION_LAST_INSTALL != DOL_VERSION)))\n{\n    $versiontocompare=empty($conf->global->MAIN_VERSION_LAST_UPGRADE)?$conf->global->MAIN_VERSION_LAST_INSTALL:$conf->global->MAIN_VERSION_LAST_UPGRADE;\n    require_once DOL_DOCUMENT_ROOT .'/core/lib/admin.lib.php';\n    $dolibarrversionlastupgrade=preg_split('/[.-]/',$versiontocompare);\n    $dolibarrversionprogram=preg_split('/[.-]/',DOL_VERSION);\n    $rescomp=versioncompare($dolibarrversionprogram,$dolibarrversionlastupgrade);\n    if ($rescomp > 0)   // Programs have a version higher than database. We did not add \"&& $rescomp < 3\" because we want upgrade process for build upgrades\n    {\n        dol_syslog(\"main.inc: database version \".$versiontocompare.\" is lower than programs version \".DOL_VERSION.\". Redirect to install page.\", LOG_WARNING);\n        header(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n        exit;\n    }\n}\n\n// Creation of a token against CSRF vulnerabilities\nif (! defined('NOTOKENRENEWAL'))\n{\n    // roulement des jetons car cree a chaque appel\n    if (isset($_SESSION['newtoken'])) $_SESSION['token'] = $_SESSION['newtoken'];\n\n    // Save in $_SESSION['newtoken'] what will be next token. Into forms, we will add param token = $_SESSION['newtoken']\n    $token = dol_hash(uniqid(mt_rand(),TRUE)); // Generates a hash of a random number\n    $_SESSION['newtoken'] = $token;\n}\nif (! defined('NOCSRFCHECK') && empty($dolibarr_nocsrfcheck) && ! empty($conf->global->MAIN_SECURITY_CSRF_WITH_TOKEN))\t// Check validity of token, only if option enabled (this option breaks some features sometimes)\n{\n    if ($_SERVER['REQUEST_METHOD'] == 'POST' && ! GETPOST('token','alpha')) // Note, offender can still send request by GET\n    {\n        print \"Access refused by CSRF protection in main.inc.php. Token not provided.\\n\";\n        print \"If you access your server behind a proxy using url rewriting, you might check that all HTTP header is propagated (or add the line \\$dolibarr_nocsrfcheck=1 into your conf.php file).\\n\";\n        die;\n    }\n    if ($_SERVER['REQUEST_METHOD'] === 'POST')  // This test must be after loading $_SESSION['token'].\n    {\n        if (GETPOST('token', 'alpha') != $_SESSION['token'])\n        {\n            dol_syslog(\"Invalid token in \".$_SERVER['HTTP_REFERER'].\", action=\".GETPOST('action','aZ09').\", _POST['token']=\".GETPOST('token','alpha').\", _SESSION['token']=\".$_SESSION['token'], LOG_WARNING);\n            //print 'Unset POST by CSRF protection in main.inc.php.';\t// Do not output anything because this create problems when using the BACK button on browsers.\n            unset($_POST);\n        }\n    }\n}\n\n// Disable modules (this must be after session_start and after conf has been loaded)\nif (GETPOST('disablemodules','alpha'))  $_SESSION[\"disablemodules\"]=GETPOST('disablemodules','alpha');\nif (! empty($_SESSION[\"disablemodules\"]))\n{\n    $disabled_modules=explode(',',$_SESSION[\"disablemodules\"]);\n    foreach($disabled_modules as $module)\n    {\n        if ($module)\n        {\n        \tif (empty($conf->$module)) $conf->$module=new stdClass();\n        \t$conf->$module->enabled=false;\n        \tif ($module == 'fournisseur')\t\t// Special case\n        \t{\n        \t\t$conf->supplier_order->enabled=0;\n        \t\t$conf->supplier_invoice->enabled=0;\n        \t}\n        }\n    }\n}\n\n\n/*\n * Phase authentication / login\n */\n$login='';\nif (! defined('NOLOGIN'))\n{\n    // $authmode lists the different means of identification to be tested in order of preference.\n    // Example: 'http', 'dolibarr', 'ldap', 'http,forceuser'\n\n    // Authentication mode\n    if (empty($dolibarr_main_authentication)) $dolibarr_main_authentication='http,dolibarr';\n    // Authentication mode: forceuser\n    if ($dolibarr_main_authentication == 'forceuser' && empty($dolibarr_auto_user)) $dolibarr_auto_user='auto';\n    // Set authmode\n    $authmode=explode(',',$dolibarr_main_authentication);\n\n    // No authentication mode\n    if (! count($authmode))\n    {\n        $langs->load('main');\n        dol_print_error('',$langs->trans(\"ErrorConfigParameterNotDefined\",'dolibarr_main_authentication'));\n        exit;\n    }\n\n    // If login request was already post, we retrieve login from the session\n    // Call module if not realized that his request.\n    // At the end of this phase, the variable $login is defined.\n    $resultFetchUser='';\n    $test=true;\n    if (! isset($_SESSION[\"dol_login\"]))\n    {\n        // It is not already authenticated and it requests the login / password\n        include_once DOL_DOCUMENT_ROOT.'/core/lib/security2.lib.php';\n\n        $dol_dst_observed=GETPOST(\"dst_observed\",'int',3);\n        $dol_dst_first=GETPOST(\"dst_first\",'int',3);\n        $dol_dst_second=GETPOST(\"dst_second\",'int',3);\n        $dol_screenwidth=GETPOST(\"screenwidth\",'int',3);\n        $dol_screenheight=GETPOST(\"screenheight\",'int',3);\n        $dol_hide_topmenu=GETPOST('dol_hide_topmenu','int',3);\n        $dol_hide_leftmenu=GETPOST('dol_hide_leftmenu','int',3);\n        $dol_optimize_smallscreen=GETPOST('dol_optimize_smallscreen','int',3);\n        $dol_no_mouse_hover=GETPOST('dol_no_mouse_hover','int',3);\n        $dol_use_jmobile=GETPOST('dol_use_jmobile','int',3);\n        //dol_syslog(\"POST key=\".join(array_keys($_POST),',').' value='.join($_POST,','));\n\n        // If in demo mode, we check we go to home page through the public/demo/index.php page\n        if (! empty($dolibarr_main_demo) && $_SERVER['PHP_SELF'] == DOL_URL_ROOT.'/index.php')  // We ask index page\n        {\n            if (empty($_SERVER['HTTP_REFERER']) || ! preg_match('/public/',$_SERVER['HTTP_REFERER']))\n            {\n                dol_syslog(\"Call index page from another url than demo page (call is done from page \".$_SERVER['HTTP_REFERER'].\")\");\n                $url='';\n                $url.=($url?'&':'').($dol_hide_topmenu?'dol_hide_topmenu='.$dol_hide_topmenu:'');\n                $url.=($url?'&':'').($dol_hide_leftmenu?'dol_hide_leftmenu='.$dol_hide_leftmenu:'');\n                $url.=($url?'&':'').($dol_optimize_smallscreen?'dol_optimize_smallscreen='.$dol_optimize_smallscreen:'');\n                $url.=($url?'&':'').($dol_no_mouse_hover?'dol_no_mouse_hover='.$dol_no_mouse_hover:'');\n                $url.=($url?'&':'').($dol_use_jmobile?'dol_use_jmobile='.$dol_use_jmobile:'');\n                $url=DOL_URL_ROOT.'/public/demo/index.php'.($url?'?'.$url:'');\n                header(\"Location: \".$url);\n                exit;\n            }\n        }\n\n        // Verification security graphic code\n        if (GETPOST(\"username\",\"alpha\",2) && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))\n        {\n            $sessionkey = 'dol_antispam_value';\n            $ok=(array_key_exists($sessionkey, $_SESSION) === TRUE && (strtolower($_SESSION[$sessionkey]) == strtolower($_POST['code'])));\n\n            // Check code\n            if (! $ok)\n            {\n                dol_syslog('Bad value for code, connexion refused');\n                $langs->load('main');\n                $langs->load('errors');\n\n                $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadValueForCode\");\n                $test=false;\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg='ErrorBadValueForCode - login='.GETPOST(\"username\",\"alpha\",2);\n                // Call of triggers\n                include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n                $interface=new Interfaces($db);\n                $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n                if ($result < 0) {\n                    $error++;\n                }\n                // End Call of triggers\n\n                // Hooks on failed login\n\t\t        $action='';\n\t\t        $hookmanager->initHooks(array('login'));\n\t\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t        if ($reshook < 0) $error++;\n\n\t\t        // Note: exit is done later\n            }\n        }\n\n        $usertotest\t\t= (! empty($_COOKIE['login_dolibarr']) ? $_COOKIE['login_dolibarr'] : GETPOST(\"username\",\"alpha\",2));\n        $passwordtotest\t= GETPOST('password','none',2);\n        $entitytotest\t= (GETPOST('entity','int') ? GETPOST('entity','int') : (!empty($conf->entity) ? $conf->entity : 1));\n\n        // Define if we received data to test the login.\n        $goontestloop=false;\n        if (isset($_SERVER[\"REMOTE_USER\"]) && in_array('http',$authmode)) $goontestloop=true;\n        if ($dolibarr_main_authentication == 'forceuser' && ! empty($dolibarr_auto_user)) $goontestloop=true;\n        if (GETPOST(\"username\",\"alpha\",2) || ! empty($_COOKIE['login_dolibarr']) || GETPOST('openid_mode','alpha',1)) $goontestloop=true;\n\n        if (! is_object($langs)) // This can occurs when calling page with NOREQUIRETRAN defined, however we need langs for error messages.\n        {\n            include_once DOL_DOCUMENT_ROOT.'/core/class/translate.class.php';\n            $langs=new Translate(\"\",$conf);\n    \t\t$langcode=(GETPOST('lang','aZ09',1)?GETPOST('lang','aZ09',1):(empty($conf->global->MAIN_LANG_DEFAULT)?'auto':$conf->global->MAIN_LANG_DEFAULT));\n        \t$langs->setDefaultLang($langcode);\n        }\n\n        // Validation of login/pass/entity\n        // If ok, the variable login will be returned\n        // If error, we will put error message in session under the name dol_loginmesg\n        if ($test && $goontestloop)\n        {\n        \t$login = checkLoginPassEntity($usertotest,$passwordtotest,$entitytotest,$authmode);\n        \tif ($login)\n            {\n                $dol_authmode=$conf->authmode;\t// This properties is defined only when logged, to say what mode was successfully used\n                $dol_tz=$_POST[\"tz\"];\n                $dol_tz_string=$_POST[\"tz_string\"];\n                $dol_tz_string=preg_replace('/\\s*\\(.+\\)$/','',$dol_tz_string);\n                $dol_tz_string=preg_replace('/,/','/',$dol_tz_string);\n                $dol_tz_string=preg_replace('/\\s/','_',$dol_tz_string);\n                $dol_dst=0;\n                if (isset($_POST[\"dst_first\"]) && isset($_POST[\"dst_second\"]))\n                {\n                    include_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n                    $datenow=dol_now();\n                    $datefirst=dol_stringtotime($_POST[\"dst_first\"]);\n                    $datesecond=dol_stringtotime($_POST[\"dst_second\"]);\n                    if ($datenow >= $datefirst && $datenow < $datesecond) $dol_dst=1;\n                }\n                //print $datefirst.'-'.$datesecond.'-'.$datenow.'-'.$dol_tz.'-'.$dol_tzstring.'-'.$dol_dst; exit;\n            }\n\n            if (! $login)\n            {\n                dol_syslog('Bad password, connexion refused',LOG_DEBUG);\n                $langs->load('main');\n                $langs->load('errors');\n\n                // Bad password. No authmode has found a good password.\n                // We set a generic message if not defined inside function checkLoginPassEntity or subfunctions\n                if (empty($_SESSION[\"dol_loginmesg\"])) $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadLoginPassword\");\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg=$langs->trans(\"ErrorBadLoginPassword\").' - login='.GETPOST(\"username\",\"alpha\",2);\n                // Call of triggers\n                include_once DOL_DOCUMENT_ROOT.'/core/class/interfaces.class.php';\n                $interface=new Interfaces($db);\n                $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,GETPOST(\"username\",\"alpha\",2));\n                if ($result < 0) {\n                    $error++;\n                }\n                // End Call of triggers\n\n                // Hooks on failed login\n\t\t        $action='';\n\t\t        $hookmanager->initHooks(array('login'));\n\t\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t        if ($reshook < 0) $error++;\n\n\t\t        // Note: exit is done in next chapter\n            }\n        }\n\n        // End test login / passwords\n        if (! $login || (in_array('ldap',$authmode) && empty($passwordtotest)))\t// With LDAP we refused empty password because some LDAP are \"opened\" for anonymous access so connexion is a success.\n        {\n            // No data to test login, so we show the login page\n\t\t\tdol_syslog(\"--- Access to \".$_SERVER[\"PHP_SELF\"].\" showing the login form and exit\");\n\t\t\tif (defined('NOREDIRECTBYMAINTOLOGIN')) return 'ERROR_NOT_LOGGED';\n        \telse dol_loginfunction($langs,$conf,(! empty($mysoc)?$mysoc:''));\n            exit;\n        }\n\n        $resultFetchUser=$user->fetch('', $login, '', 1, ($entitytotest > 0 ? $entitytotest : -1));\n        if ($resultFetchUser <= 0)\n        {\n            dol_syslog('User not found, connexion refused');\n            session_destroy();\n            session_name($sessionname);\n            session_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n            session_start();    // Fixing the bug of register_globals here is useless since session is empty\n\n            if ($resultFetchUser == 0)\n            {\n                $langs->load('main');\n                $langs->load('errors');\n\n                $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n            }\n            if ($resultFetchUser < 0)\n            {\n                $_SESSION[\"dol_loginmesg\"]=$user->error;\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg=$user->error;\n            }\n\n            // Call triggers\n            include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n            $interface=new Interfaces($db);\n            $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n            if ($result < 0) {\n                $error++;\n            }\n            // End call triggers\n\n\t        // Hooks on failed login\n\t        $action='';\n\t        $hookmanager->initHooks(array('login'));\n\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t        if ($reshook < 0) $error++;\n\n\t        $paramsurl=array();\n\t        if (GETPOST('textbrowser','int')) $paramsurl[]='textbrowser='.GETPOST('textbrowser','int');\n\t        if (GETPOST('nojs','int'))        $paramsurl[]='nojs='.GETPOST('nojs','int');\n\t        if (GETPOST('lang','aZ09'))       $paramsurl[]='lang='.GETPOST('lang','aZ09');\n            header('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl)?'?'.implode('&',$paramsurl):''));\n            exit;\n        }\n    }\n    else\n    {\n        // We are already into an authenticated session\n        $login=$_SESSION[\"dol_login\"];\n        $entity=$_SESSION[\"dol_entity\"];\n        dol_syslog(\"- This is an already logged session. _SESSION['dol_login']=\".$login.\" _SESSION['dol_entity']=\".$entity, LOG_DEBUG);\n\n        $resultFetchUser=$user->fetch('', $login, '', 1, ($entity > 0 ? $entity : -1));\n        if ($resultFetchUser <= 0)\n        {\n            // Account has been removed after login\n            dol_syslog(\"Can't load user even if session logged. _SESSION['dol_login']=\".$login, LOG_WARNING);\n            session_destroy();\n            session_name($sessionname);\n            session_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n            session_start();    // Fixing the bug of register_globals here is useless since session is empty\n\n            if ($resultFetchUser == 0)\n            {\n                $langs->load('main');\n                $langs->load('errors');\n\n                $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n            }\n            if ($resultFetchUser < 0)\n            {\n                $_SESSION[\"dol_loginmesg\"]=$user->error;\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg=$user->error;\n            }\n\n            // TODO @deprecated Remove this. Hook must be used, not this trigger.\n            // Call triggers\n            include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n            $interface=new Interfaces($db);\n            $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n            if ($result < 0) {\n                $error++;\n            }\n            // End call triggers\n\n\t        // Hooks on failed login\n\t        $action='';\n\t        $hookmanager->initHooks(array('login'));\n\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t        if ($reshook < 0) $error++;\n\n\t        $paramsurl=array();\n\t        if (GETPOST('textbrowser','int')) $paramsurl[]='textbrowser='.GETPOST('textbrowser','int');\n\t        if (GETPOST('nojs','int'))        $paramsurl[]='nojs='.GETPOST('nojs','int');\n\t        if (GETPOST('lang','aZ09'))       $paramsurl[]='lang='.GETPOST('lang','aZ09');\n            header('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl)?'?'.implode('&',$paramsurl):''));\n            exit;\n        }\n        else\n\t\t{\n\t       // Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n\t       $hookmanager->initHooks(array('main'));\n\n\t       // Code for search criteria persistence.\n\t       if (! empty($_GET['save_lastsearch_values']))    // Keep $_GET here\n\t       {\n               $relativepathstring = preg_replace('/\\?.*$/','',$_SERVER[\"HTTP_REFERER\"]);\n               $relativepathstring = preg_replace('/^https?:\\/\\/[^\\/]*/','',$relativepathstring);     // Get full path except host server\n               // Clean $relativepathstring\n   \t           if (constant('DOL_URL_ROOT')) $relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'),'/').'/', '', $relativepathstring);\n               $relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n               $relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n               //var_dump($relativepathstring);\n\n               if (! empty($_SESSION['lastsearch_values_tmp_'.$relativepathstring]))\n               {\n                   $_SESSION['lastsearch_values_'.$relativepathstring]=$_SESSION['lastsearch_values_tmp_'.$relativepathstring];\n                   unset($_SESSION['lastsearch_values_tmp_'.$relativepathstring]);\n               }\n\t       }\n\n\t       $action = '';\n\t       $reshook = $hookmanager->executeHooks('updateSession', array(), $user, $action);\n\t       if ($reshook < 0) {\n\t\t       setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\t       }\n        }\n    }\n\n    // Is it a new session that has started ?\n    // If we are here, this means authentication was successfull.\n    if (! isset($_SESSION[\"dol_login\"]))\n    {\n        // New session for this login has started.\n    \t$error=0;\n\n    \t// Store value into session (values always stored)\n        $_SESSION[\"dol_login\"]=$user->login;\n        $_SESSION[\"dol_authmode\"]=isset($dol_authmode)?$dol_authmode:'';\n        $_SESSION[\"dol_tz\"]=isset($dol_tz)?$dol_tz:'';\n        $_SESSION[\"dol_tz_string\"]=isset($dol_tz_string)?$dol_tz_string:'';\n        $_SESSION[\"dol_dst\"]=isset($dol_dst)?$dol_dst:'';\n        $_SESSION[\"dol_dst_observed\"]=isset($dol_dst_observed)?$dol_dst_observed:'';\n        $_SESSION[\"dol_dst_first\"]=isset($dol_dst_first)?$dol_dst_first:'';\n        $_SESSION[\"dol_dst_second\"]=isset($dol_dst_second)?$dol_dst_second:'';\n        $_SESSION[\"dol_screenwidth\"]=isset($dol_screenwidth)?$dol_screenwidth:'';\n        $_SESSION[\"dol_screenheight\"]=isset($dol_screenheight)?$dol_screenheight:'';\n        $_SESSION[\"dol_company\"]=$conf->global->MAIN_INFO_SOCIETE_NOM;\n        $_SESSION[\"dol_entity\"]=$conf->entity;\n    \t// Store value into session (values stored only if defined)\n        if (! empty($dol_hide_topmenu))         $_SESSION['dol_hide_topmenu']=$dol_hide_topmenu;\n        if (! empty($dol_hide_leftmenu))        $_SESSION['dol_hide_leftmenu']=$dol_hide_leftmenu;\n        if (! empty($dol_optimize_smallscreen)) $_SESSION['dol_optimize_smallscreen']=$dol_optimize_smallscreen;\n        if (! empty($dol_no_mouse_hover))       $_SESSION['dol_no_mouse_hover']=$dol_no_mouse_hover;\n        if (! empty($dol_use_jmobile))          $_SESSION['dol_use_jmobile']=$dol_use_jmobile;\n\n        dol_syslog(\"This is a new started user session. _SESSION['dol_login']=\".$_SESSION[\"dol_login\"].\" Session id=\".session_id());\n\n        $db->begin();\n\n        $user->update_last_login_date();\n\n        $loginfo = 'TZ='.$_SESSION[\"dol_tz\"].';TZString='.$_SESSION[\"dol_tz_string\"].';Screen='.$_SESSION[\"dol_screenwidth\"].'x'.$_SESSION[\"dol_screenheight\"];\n\n        // TODO @deprecated Remove this. Hook must be used, not this trigger.\n        $user->trigger_mesg = $loginfo;\n        // Call triggers\n        include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n        $interface=new Interfaces($db);\n        $result=$interface->run_triggers('USER_LOGIN',$user,$user,$langs,$conf);\n        if ($result < 0) {\n            $error++;\n        }\n        // End call triggers\n\n        // Hooks on successfull login\n        $action='';\n        $hookmanager->initHooks(array('login'));\n        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginfo'=>$loginfo);\n        $reshook=$hookmanager->executeHooks('afterLogin',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n        if ($reshook < 0) $error++;\n\n        if ($error)\n        {\n            $db->rollback();\n            session_destroy();\n            dol_print_error($db,'Error in some hooks afterLogin (or old trigger USER_LOGIN)');\n            exit;\n        }\n        else\n\t\t{\n            $db->commit();\n        }\n\n        // Change landing page if defined.\n        $landingpage=(empty($user->conf->MAIN_LANDING_PAGE)?(empty($conf->global->MAIN_LANDING_PAGE)?'':$conf->global->MAIN_LANDING_PAGE):$user->conf->MAIN_LANDING_PAGE);\n        if (! empty($landingpage))    // Example: /index.php\n        {\n            $newpath=dol_buildpath($landingpage, 1);\n            if ($_SERVER[\"PHP_SELF\"] != $newpath)   // not already on landing page (avoid infinite loop)\n            {\n                header('Location: '.$newpath);\n                exit;\n            }\n        }\n    }\n\n\n    // If user admin, we force the rights-based modules\n    if ($user->admin)\n    {\n        $user->rights->user->user->lire=1;\n        $user->rights->user->user->creer=1;\n        $user->rights->user->user->password=1;\n        $user->rights->user->user->supprimer=1;\n        $user->rights->user->self->creer=1;\n        $user->rights->user->self->password=1;\n    }\n\n    /*\n     * Overwrite some configs globals (try to avoid this and have code to use instead $user->conf->xxx)\n     */\n\n    // Set liste_limit\n    if (isset($user->conf->MAIN_SIZE_LISTE_LIMIT))\t$conf->liste_limit = $user->conf->MAIN_SIZE_LISTE_LIMIT;\t// Can be 0\n    if (isset($user->conf->PRODUIT_LIMIT_SIZE))\t$conf->product->limit_size = $user->conf->PRODUIT_LIMIT_SIZE;\t// Can be 0\n\n    // Replace conf->css by personalized value if theme not forced\n    if (empty($conf->global->MAIN_FORCETHEME) && ! empty($user->conf->MAIN_THEME))\n    {\n        $conf->theme=$user->conf->MAIN_THEME;\n        $conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n    }\n}\n\n// Case forcing style from url\nif (GETPOST('theme','alpha'))\n{\n\t$conf->theme=GETPOST('theme','alpha',1);\n\t$conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n\n\n// Set javascript option\nif (! GETPOST('nojs','int'))   // If javascript was not disabled on URL\n{\n\tif (! empty($user->conf->MAIN_DISABLE_JAVASCRIPT))\n\t{\n\t\t$conf->use_javascript_ajax=! $user->conf->MAIN_DISABLE_JAVASCRIPT;\n\t}\n}\nelse $conf->use_javascript_ajax=0;\n// Set MAIN_OPTIMIZEFORTEXTBROWSER\nif (GETPOST('textbrowser','int') || (! empty($conf->browser->name) && $conf->browser->name == 'lynxlinks') || ! empty($user->conf->MAIN_OPTIMIZEFORTEXTBROWSER))   // If we must enable text browser\n{\n    $conf->global->MAIN_OPTIMIZEFORTEXTBROWSER=1;\n}\n\n// Set terminal output option according to conf->browser.\nif (GETPOST('dol_hide_leftmenu','int') || ! empty($_SESSION['dol_hide_leftmenu']))               $conf->dol_hide_leftmenu=1;\nif (GETPOST('dol_hide_topmenu','int') || ! empty($_SESSION['dol_hide_topmenu']))                 $conf->dol_hide_topmenu=1;\nif (GETPOST('dol_optimize_smallscreen','int') || ! empty($_SESSION['dol_optimize_smallscreen'])) $conf->dol_optimize_smallscreen=1;\nif (GETPOST('dol_no_mouse_hover','int') || ! empty($_SESSION['dol_no_mouse_hover']))             $conf->dol_no_mouse_hover=1;\nif (GETPOST('dol_use_jmobile','int') || ! empty($_SESSION['dol_use_jmobile']))                   $conf->dol_use_jmobile=1;\nif (! empty($conf->browser->layout) && $conf->browser->layout != 'classic') $conf->dol_no_mouse_hover=1;\nif ((! empty($conf->browser->layout) && $conf->browser->layout == 'phone')\n\t|| (! empty($_SESSION['dol_screenwidth']) && $_SESSION['dol_screenwidth'] < 400)\n\t|| (! empty($_SESSION['dol_screenheight']) && $_SESSION['dol_screenheight'] < 400)\n)\n{\n\t$conf->dol_optimize_smallscreen=1;\n}\n// If we force to use jmobile, then we reenable javascript\nif (! empty($conf->dol_use_jmobile)) $conf->use_javascript_ajax=1;\n// Replace themes bugged with jmobile with eldy\nif (! empty($conf->dol_use_jmobile) && in_array($conf->theme,array('bureau2crea','cameleo','amarok')))\n{\n\t$conf->theme='eldy';\n\t$conf->css  =  \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n//var_dump($conf->browser->phone);\n\nif (! defined('NOREQUIRETRAN'))\n{\n    if (! GETPOST('lang','aZ09'))\t// If language was not forced on URL\n    {\n        // If user has chosen its own language\n        if (! empty($user->conf->MAIN_LANG_DEFAULT))\n        {\n            // If different than current language\n            //print \">>>\".$langs->getDefaultLang().\"-\".$user->conf->MAIN_LANG_DEFAULT;\n            if ($langs->getDefaultLang() != $user->conf->MAIN_LANG_DEFAULT)\n            {\n                $langs->setDefaultLang($user->conf->MAIN_LANG_DEFAULT);\n            }\n        }\n    }\n}\n\nif (! defined('NOLOGIN'))\n{\n    // If the login is not recovered, it is identified with an account that does not exist.\n    // Hacking attempt?\n    if (! $user->login) accessforbidden();\n\n    // Check if user is active\n    if ($user->statut < 1)\n    {\n        // If not active, we refuse the user\n        $langs->load(\"other\");\n        dol_syslog(\"Authentification ko as login is disabled\");\n        accessforbidden($langs->trans(\"ErrorLoginDisabled\"));\n        exit;\n    }\n\n    // Load permissions\n    $user->getrights();\n}\n\n\ndol_syslog(\"--- Access to \".$_SERVER[\"PHP_SELF\"].' - action='.GETPOST('action','az09').', massaction='.GETPOST('massaction','az09'));\n//Another call for easy debugg\n//dol_syslog(\"Access to \".$_SERVER[\"PHP_SELF\"].' GET='.join(',',array_keys($_GET)).'->'.join(',',$_GET).' POST:'.join(',',array_keys($_POST)).'->'.join(',',$_POST));\n\n// Load main languages files\nif (! defined('NOREQUIRETRAN'))\n{\n    $langs->load(\"main\");\n    $langs->load(\"dict\");\n}\n\n// Define some constants used for style of arrays\n$bc=array(0=>'class=\"impair\"',1=>'class=\"pair\"');\n$bcdd=array(0=>'class=\"drag drop oddeven\"',1=>'class=\"drag drop oddeven\"');\n$bcnd=array(0=>'class=\"nodrag nodrop nohover\"',1=>'class=\"nodrag nodrop nohoverpair\"');\t\t// Used for tr to add new lines\n$bctag=array(0=>'class=\"impair tagtr\"',1=>'class=\"pair tagtr\"');\n\n// Define messages variables\n$mesg=''; $warning=''; $error=0;\n// deprecated, see setEventMessages() and dol_htmloutput_events()\n$mesgs=array(); $warnings=array(); $errors=array();\n\n// Constants used to defined number of lines in textarea\nif (empty($conf->browser->firefox))\n{\n    define('ROWS_1',1);\n    define('ROWS_2',2);\n    define('ROWS_3',3);\n    define('ROWS_4',4);\n    define('ROWS_5',5);\n    define('ROWS_6',6);\n    define('ROWS_7',7);\n    define('ROWS_8',8);\n    define('ROWS_9',9);\n}\nelse\n{\n    define('ROWS_1',0);\n    define('ROWS_2',1);\n    define('ROWS_3',2);\n    define('ROWS_4',3);\n    define('ROWS_5',4);\n    define('ROWS_6',5);\n    define('ROWS_7',6);\n    define('ROWS_8',7);\n    define('ROWS_9',8);\n}\n\n$heightforframes=48;\n\n// Init menu manager\nif (! defined('NOREQUIREMENU'))\n{\n\tif (empty($user->societe_id))    // If internal user or not defined\n\t{\n\t\t$conf->standard_menu=(empty($conf->global->MAIN_MENU_STANDARD_FORCED)?(empty($conf->global->MAIN_MENU_STANDARD)?'eldy_menu.php':$conf->global->MAIN_MENU_STANDARD):$conf->global->MAIN_MENU_STANDARD_FORCED);\n\t}\n\telse                        // If external user\n\t{\n\t\t$conf->standard_menu=(empty($conf->global->MAIN_MENUFRONT_STANDARD_FORCED)?(empty($conf->global->MAIN_MENUFRONT_STANDARD)?'eldy_menu.php':$conf->global->MAIN_MENUFRONT_STANDARD):$conf->global->MAIN_MENUFRONT_STANDARD_FORCED);\n\t}\n\n\t// Load the menu manager (only if not already done)\n\t$file_menu=$conf->standard_menu;\n\tif (GETPOST('menu','alpha')) $file_menu=GETPOST('menu','alpha');     // example: menu=eldy_menu.php\n\tif (! class_exists('MenuManager'))\n\t{\n\t\t$menufound=0;\n\t\t$dirmenus=array_merge(array(\"/core/menus/\"),(array) $conf->modules_parts['menus']);\n\t\tforeach($dirmenus as $dirmenu)\n\t\t{\n\t\t\t$menufound=dol_include_once($dirmenu.\"standard/\".$file_menu);\n\t\t\tif (class_exists('MenuManager')) break;\n\t\t}\n\t\tif (! class_exists('MenuManager'))\t// If failed to include, we try with standard eldy_menu.php\n\t\t{\n\t\t\tdol_syslog(\"You define a menu manager '\".$file_menu.\"' that can not be loaded.\", LOG_WARNING);\n\t\t\t$file_menu='eldy_menu.php';\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.\"/core/menus/standard/\".$file_menu;\n\t\t}\n\t}\n\t$menumanager = new MenuManager($db, empty($user->societe_id)?0:1);\n\t$menumanager->loadMenu();\n}\n\n\n\n// Functions\n\nif (! function_exists(\"llxHeader\"))\n{\n    /**\n     *\tShow HTML header HTML + BODY + Top menu + left menu + DIV\n     *\n     * @param \tstring \t$head\t\t\t\tOptionnal head lines\n     * @param \tstring \t$title\t\t\t\tHTML title\n     * @param\tstring\t$help_url\t\t\tUrl links to help page\n     * \t\t                            \tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n     *                                  \tFor other external page: http://server/url\n     * @param\tstring\t$target\t\t\t\tTarget to use on links\n     * @param \tint    \t$disablejs\t\t\tMore content into html header\n     * @param \tint    \t$disablehead\t\tMore content into html header\n     * @param \tarray  \t$arrayofjs\t\t\tArray of complementary js files\n     * @param \tarray  \t$arrayofcss\t\t\tArray of complementary css files\n     * @param\tstring\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n     * @param   string  $morecssonbody      More CSS on body tag.\n     * @return\tvoid\n     */\n\tfunction llxHeader($head='', $title='', $help_url='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='', $morecssonbody='')\n\t{\n\t    global $conf;\n\n\t    // html header\n\t\ttop_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\n\n        print '<body id=\"mainbody\"'.($morecssonbody?' class=\"'.$morecssonbody.'\"':'').'>' . \"\\n\";\n\n\t\t// top menu and left menu area\n\t\tif (empty($conf->dol_hide_topmenu))\n\t\t{\n\t\t\ttop_menu($head, $title, $target, $disablejs, $disablehead, $arrayofjs, $arrayofcss, $morequerystring, $help_url);\n\t\t}\n\n\t\tif (empty($conf->dol_hide_leftmenu))\n\t\t{\n\t\t\tleft_menu('', $help_url, '', '', 1, $title, 1);\n\t\t}\n\n\t\t// main area\n\t\tmain_area($title);\n\t}\n}\n\n\n/**\n *  Show HTTP header\n *\n *  @param  string  $contenttype    Content type. For example, 'text/html'\n *  @return\tvoid\n */\nfunction top_httphead($contenttype='text/html')\n{\n    global $conf;\n\n    if ($contenttype == 'text/html' ) header(\"Content-Type: text/html; charset=\".$conf->file->character_set_client);\n    else header(\"Content-Type: \".$contenttype);\n    // Security options\n    header(\"X-Content-Type-Options: nosniff\");  // With the nosniff option, if the server says the content is text/html, the browser will render it as text/html (note that most browsers now force this option to on)\n    header(\"X-Frame-Options: SAMEORIGIN\");      // Frames allowed only if on same domain (stop some XSS attacks)\n    if (! empty($conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY))\n    {\n        // For example, to restrict script, object, frames or img to some domains\n        // script-src https://api.google.com https://anotherhost.com; object-src https://youtube.com; child-src https://youtube.com; img-src: https://static.example.com\n        // For example, to restrict everything to one domain, except object, ...\n        // default-src https://cdn.example.net; object-src 'none'\n        header(\"Content-Security-Policy: \".$conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY);\n    }\n\n\n    // On the fly GZIP compression for all pages (if browser support it). Must set the bit 3 of constant to 1.\n    /*if (isset($conf->global->MAIN_OPTIMIZE_SPEED) && ($conf->global->MAIN_OPTIMIZE_SPEED & 0x04)) {\n        ob_start(\"ob_gzhandler\");\n    }*/\n}\n\n/**\n * Ouput html header of a page.\n * This code is also duplicated into security2.lib.php::dol_loginfunction\n *\n * @param \tstring \t$head\t\t\t Optionnal head lines\n * @param \tstring \t$title\t\t\t HTML title\n * @param \tint    \t$disablejs\t\t Disable js output\n * @param \tint    \t$disablehead\t Disable head output\n * @param \tarray  \t$arrayofjs\t\t Array of complementary js files\n * @param \tarray  \t$arrayofcss\t\t Array of complementary css files\n * @param \tint    \t$disablejmobile\t Disable jmobile (No more used)\n * @param   int     $disablenofollow Disable no follow tag\n * @return\tvoid\n */\nfunction top_htmlhead($head, $title='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $disablejmobile=0, $disablenofollow=0)\n{\n    global $user, $conf, $langs, $db;\n\n    top_httphead();\n\n    if (empty($conf->css)) $conf->css = '/theme/eldy/style.css.php';\t// If not defined, eldy by default\n\n    if (! empty($conf->global->MAIN_ACTIVATE_HTML4)) {\n        $doctype = '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">';\n    }else {\n        $doctype = '<!doctype html>';\n    }\n    print $doctype.\"\\n\";\n    if (! empty($conf->global->MAIN_USE_CACHE_MANIFEST)) print '<html lang=\"'.substr($langs->defaultlang,0,2).'\" manifest=\"'.DOL_URL_ROOT.'/cache.manifest\">'.\"\\n\";\n    else print '<html lang=\"'.substr($langs->defaultlang,0,2).'\">'.\"\\n\";\n    //print '<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"fr\">'.\"\\n\";\n    if (empty($disablehead))\n    {\n        print \"<head>\\n\";\n\t\tif (GETPOST('dol_basehref','alpha')) print '<base href=\"'.dol_escape_htmltag(GETPOST('dol_basehref','alpha')).'\">'.\"\\n\";\n        // Displays meta\n        print '<meta name=\"robots\" content=\"noindex'.($disablenofollow?'':',nofollow').'\">'.\"\\n\";      \t\t\t\t// Do not index\n        print '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">';\t// Scale for mobile device\n        print '<meta name=\"author\" content=\"Dolibarr Development Team\">'.\"\\n\";\n        // Favicon\n\t\t$favicon=dol_buildpath('/theme/'.$conf->theme.'/img/favicon.ico',1);\n        if (! empty($conf->global->MAIN_FAVICON_URL)) $favicon=$conf->global->MAIN_FAVICON_URL;\n        if (empty($conf->dol_use_jmobile)) print '<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"'.$favicon.'\"/>'.\"\\n\";\t// Not required into an Android webview\n        //if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && ! GETPOST('textbrowser','int')) print '<link rel=\"top\" title=\"'.$langs->trans(\"Home\").'\" href=\"'.(DOL_URL_ROOT?DOL_URL_ROOT:'/').'\">'.\"\\n\";\n        if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && ! GETPOST('textbrowser','int')) print '<link rel=\"copyright\" title=\"GNU General Public License\" href=\"http://www.gnu.org/copyleft/gpl.html#SEC1\">'.\"\\n\";\n        if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && ! GETPOST('textbrowser','int')) print '<link rel=\"author\" title=\"Dolibarr Development Team\" href=\"https://www.dolibarr.org\">'.\"\\n\";\n\n        // Displays title\n        $appli=constant('DOL_APPLICATION_TITLE');\n        if (!empty($conf->global->MAIN_APPLICATION_TITLE)) $appli=$conf->global->MAIN_APPLICATION_TITLE;\n\n        if ($title && ! empty($conf->global->MAIN_HTML_TITLE) && preg_match('/noapp/',$conf->global->MAIN_HTML_TITLE)) print '<title>'.dol_htmlentities($title).'</title>';\n        else if ($title) print '<title>'.dol_htmlentities($appli.' - '.$title).'</title>';\n        else print \"<title>\".dol_htmlentities($appli).\"</title>\";\n        print \"\\n\";\n\n        //$ext='';\n        //if (! empty($conf->dol_use_jmobile)) $ext='version='.urlencode(DOL_VERSION);\n        $ext='version='.urlencode(DOL_VERSION);\n\n        if (GETPOST('version','int')) $ext='version='.GETPOST('version','int');\t// usefull to force no cache on css/js\n        if (GETPOST('testmenuhider','int') || ! empty($conf->global->MAIN_TESTMENUHIDER)) $ext.='&testmenuhider='.(GETPOST('testmenuhider','int')?GETPOST('testmenuhider','int'):$conf->global->MAIN_TESTMENUHIDER);\n\n        $themeparam='?lang='.$langs->defaultlang.'&amp;theme='.$conf->theme.(GETPOST('optioncss','aZ09')?'&amp;optioncss='.GETPOST('optioncss','aZ09',1):'').'&amp;userid='.$user->id.'&amp;entity='.$conf->entity;\n        $themeparam.=($ext?'&amp;'.$ext:'');\n        if (! empty($_SESSION['dol_resetcache'])) $themeparam.='&amp;dol_resetcache='.$_SESSION['dol_resetcache'];\n        if (GETPOST('dol_hide_topmenu','int'))           { $themeparam.='&amp;dol_hide_topmenu='.GETPOST('dol_hide_topmenu','int'); }\n        if (GETPOST('dol_hide_leftmenu','int'))          { $themeparam.='&amp;dol_hide_leftmenu='.GETPOST('dol_hide_leftmenu','int'); }\n        if (GETPOST('dol_optimize_smallscreen','int'))   { $themeparam.='&amp;dol_optimize_smallscreen='.GETPOST('dol_optimize_smallscreen','int'); }\n        if (GETPOST('dol_no_mouse_hover','int'))         { $themeparam.='&amp;dol_no_mouse_hover='.GETPOST('dol_no_mouse_hover','int'); }\n        if (GETPOST('dol_use_jmobile','int'))            { $themeparam.='&amp;dol_use_jmobile='.GETPOST('dol_use_jmobile','int'); $conf->dol_use_jmobile=GETPOST('dol_use_jmobile','int'); }\n\n        if (! defined('DISABLE_JQUERY') && ! $disablejs && $conf->use_javascript_ajax)\n        {\n            print '<!-- Includes CSS for JQuery (Ajax library) -->'.\"\\n\";\n            $jquerytheme = 'smoothness';\n            if (!empty($conf->global->MAIN_USE_JQUERY_THEME)) $jquerytheme = $conf->global->MAIN_USE_JQUERY_THEME;\n            if (constant('JS_JQUERY_UI')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.JS_JQUERY_UI.'css/'.$jquerytheme.'/jquery-ui.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";  // JQuery\n            else print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/css/'.$jquerytheme.'/jquery-ui.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";    // JQuery\n            if (! defined('DISABLE_JQUERY_TIPTIP')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tiptip/tipTip.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";                           // Tooltip\n            if (! defined('DISABLE_JQUERY_JNOTIFY')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify-alt.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";          // JNotify\n            /* Removed a old hidden problematic feature never used in Dolibarr. If an external module need datatable, the module must provide all lib it needs and manage version problems with other dolibarr components\n            if (! empty($conf->global->MAIN_USE_JQUERY_DATATABLES) || (defined('REQUIRE_JQUERY_DATATABLES') && constant('REQUIRE_JQUERY_DATATABLES')))     // jQuery datatables\n            {\n                print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/media/css/jquery.dataTables.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n                print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/css/buttons.dataTables.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n                print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/ColReorder/css/colReorder.dataTables.min.css'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }*/\n            if (! defined('DISABLE_SELECT2') && (! empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT')))     // jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\"...\n            {\n            \t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?constant('REQUIRE_JQUERY_MULTISELECT'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n            \tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/'.$tmpplugin.'.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n            }\n            // jQuery Timepicker\n            if (! empty($conf->global->MAIN_USE_JQUERY_TIMEPICKER) || defined('REQUIRE_JQUERY_TIMEPICKER'))\n            {\n            \tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/timepicker/jquery-ui-timepicker-addon.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n            }\n        }\n\n        if (! defined('DISABLE_FONT_AWSOME'))\n        {\n            print '<!-- Includes CSS for font awesome -->'.\"\\n\";\n            print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/theme/common/fontawesome/css/font-awesome.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n        }\n\n        print '<!-- Includes CSS for Dolibarr theme -->'.\"\\n\";\n        // Output style sheets (optioncss='print' or ''). Note: $conf->css looks like '/theme/eldy/style.css.php'\n        $themepath=dol_buildpath($conf->css,1);\n        $themesubdir='';\n        if (! empty($conf->modules_parts['theme']))\t// This slow down\n        {\n\t        foreach($conf->modules_parts['theme'] as $reldir)\n\t        {\n\t        \tif (file_exists(dol_buildpath($reldir.$conf->css, 0)))\n\t        \t{\n\t\t\t\t\t$themepath=dol_buildpath($reldir.$conf->css, 1);\n\t\t\t\t\t$themesubdir=$reldir;\n\t\t\t\t\tbreak;\n\t        \t}\n\t        }\n        }\n        //print 'themepath='.$themepath.' themeparam='.$themeparam;exit;\n        print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.$themepath.$themeparam.'\">'.\"\\n\";\n\t    if (! empty($conf->global->MAIN_FIX_FLASH_ON_CHROME)) print '<!-- Includes CSS that does not exists as a workaround of flash bug of chrome -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"filethatdoesnotexiststosolvechromeflashbug\">'.\"\\n\";\n\n        // CSS forced by modules (relative url starting with /)\n        if (! empty($conf->modules_parts['css']))\n        {\n        \t$arraycss=(array) $conf->modules_parts['css'];\n        \tforeach($arraycss as $modcss => $filescss)\n        \t{\n        \t\t$filescss=(array) $filescss;\t// To be sure filecss is an array\n        \t\tforeach($filescss as $cssfile)\n        \t\t{\n        \t\t\tif (empty($cssfile)) dol_syslog(\"Warning: module \".$modcss.\" declared a css path file into its descriptor that is empty.\", LOG_WARNING);\n        \t\t\t// cssfile is a relative path\n\t        \t\tprint '<!-- Includes CSS added by module '.$modcss. ' -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"'.dol_buildpath($cssfile,1);\n\t        \t\t// We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters, so browser cache is not used.\n\t        \t\tif (!preg_match('/\\.css$/i',$cssfile)) print $themeparam;\n\t        \t\tprint '\">'.\"\\n\";\n        \t\t}\n        \t}\n        }\n        // CSS forced by page in top_htmlhead call (relative url starting with /)\n        if (is_array($arrayofcss))\n        {\n            foreach($arrayofcss as $cssfile)\n            {\n            \tprint '<!-- Includes CSS added by page -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" title=\"default\" href=\"'.dol_buildpath($cssfile,1);\n                // We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters and browser cache is not used.\n                if (!preg_match('/\\.css$/i',$cssfile)) print $themeparam;\n                print '\">'.\"\\n\";\n            }\n        }\n\n        // Output standard javascript links\n        if (! defined('DISABLE_JQUERY') && ! $disablejs && ! empty($conf->use_javascript_ajax))\n        {\n            // JQuery. Must be before other includes\n            print '<!-- Includes JS for JQuery -->'.\"\\n\";\n            if (defined('JS_JQUERY') && constant('JS_JQUERY')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY.'jquery.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            else print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            if (! empty($conf->global->MAIN_FEATURES_LEVEL) && ! defined('JS_JQUERY_MIGRATE_DISABLED'))\n            {\n                if (defined('JS_JQUERY_MIGRATE') && constant('JS_JQUERY_MIGRATE')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_MIGRATE.'jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                else print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            if (defined('JS_JQUERY_UI') && constant('JS_JQUERY_UI')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_UI.'jquery-ui.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            else print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-ui.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            if (! defined('DISABLE_JQUERY_TABLEDND')) print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tablednd/jquery.tablednd.0.6.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            if (! defined('DISABLE_JQUERY_TIPTIP')) print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tiptip/jquery.tipTip.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            // jQuery jnotify\n            if (empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) && ! defined('DISABLE_JQUERY_JNOTIFY'))\n            {\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/jnotify.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            // jQuery blockUI\n            if (! empty($conf->global->MAIN_USE_JQUERY_BLOCKUI) || defined('REQUIRE_JQUERY_BLOCKUI'))\n            {\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/blockUI/jquery.blockUI.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            \tprint '<script type=\"text/javascript\">'.\"\\n\";\n            \tprint 'var indicatorBlockUI = \\''.DOL_URL_ROOT.\"/theme/\".$conf->theme.\"/img/working2.gif\".'\\';'.\"\\n\";\n            \tprint '</script>'.\"\\n\";\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/blockUI.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            // Flot\n            if (empty($conf->global->MAIN_DISABLE_JQUERY_FLOT) && ! defined('DISABLE_JQUERY_FLOT'))\n            {\n                if (constant('JS_JQUERY_FLOT'))\n                {\n                    print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.pie.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.stack.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                }\n                else\n                {\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.pie.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.stack.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                }\n            }\n            // jQuery jeditable\n            if (! empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && ! defined('DISABLE_JQUERY_JEDITABLE'))\n            {\n            \tprint '<!-- JS to manage editInPlace feature -->'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-datepicker.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-autocomplete.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\">'.\"\\n\";\n                print 'var urlSaveInPlace = \\''.DOL_URL_ROOT.'/core/ajax/saveinplace.php\\';'.\"\\n\";\n                print 'var urlLoadInPlace = \\''.DOL_URL_ROOT.'/core/ajax/loadinplace.php\\';'.\"\\n\";\n                print 'var tooltipInPlace = \\''.$langs->transnoentities('ClickToEdit').'\\';'.\"\\n\";\t// Added in title attribute of span\n                print 'var placeholderInPlace = \\'&nbsp;\\';'.\"\\n\";\t// If we put another string than $langs->trans(\"ClickToEdit\") here, nothing is shown. If we put empty string, there is error, Why ?\n                print 'var cancelInPlace = \\''.$langs->trans('Cancel').'\\';'.\"\\n\";\n                print 'var submitInPlace = \\''.$langs->trans('Ok').'\\';'.\"\\n\";\n                print 'var indicatorInPlace = \\'<img src=\"'.DOL_URL_ROOT.\"/theme/\".$conf->theme.\"/img/working.gif\".'\">\\';'.\"\\n\";\n                print 'var withInPlace = 300;';\t\t// width in pixel for default string edit\n                print '</script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/editinplace.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ckeditor.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            // jQuery DataTables\n            /* Removed a old hidden problematic feature never used in Dolibarr. If an external module need datatable, the module must provide all lib it needs and manage version problems with other dolibarr components\n            if (! empty($conf->global->MAIN_USE_JQUERY_DATATABLES) || (defined('REQUIRE_JQUERY_DATATABLES') && constant('REQUIRE_JQUERY_DATATABLES')))\n            {\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/media/js/jquery.dataTables.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/dataTables.buttons.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.colVis.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.html5.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.flash.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.print.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/ColReorder/js/dataTables.colReorder.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jszip/jszip.min.js\"></script>'.\"\\n\";\n            }*/\n            // jQuery Timepicker\n            if (! empty($conf->global->MAIN_USE_JQUERY_TIMEPICKER) || defined('REQUIRE_JQUERY_TIMEPICKER'))\n            {\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/timepicker/jquery-ui-timepicker-addon.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/timepicker.js.php?lang='.$langs->defaultlang.($ext?'&amp;'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            if (! defined('DISABLE_SELECT2') && (! empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT')))     // jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\", ...\n            {\n            \t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?constant('REQUIRE_JQUERY_MULTISELECT'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/'.$tmpplugin.'.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/select2_locale.js.php?lang='.$langs->defaultlang.($ext?'&amp;'.$ext:'').'\"></script>'.\"\\n\";\n            }\n        }\n\n        if (! $disablejs && ! empty($conf->use_javascript_ajax))\n        {\n            // CKEditor\n            if (! empty($conf->fckeditor->enabled) && (empty($conf->global->FCKEDITOR_EDITORNAME) || $conf->global->FCKEDITOR_EDITORNAME == 'ckeditor') && ! defined('DISABLE_CKEDITOR'))\n            {\n                print '<!-- Includes JS for CKEditor -->'.\"\\n\";\n                $pathckeditor = DOL_URL_ROOT . '/includes/ckeditor/ckeditor/';\n                $jsckeditor='ckeditor.js';\n                if (constant('JS_CKEDITOR'))\t// To use external ckeditor 4 js lib\n                {\n                \t$pathckeditor=constant('JS_CKEDITOR');\n                }\n                print '<script type=\"text/javascript\">';\n                print 'var CKEDITOR_BASEPATH = \\''.$pathckeditor.'\\';'.\"\\n\";\n                print 'var ckeditorConfig = \\''.dol_buildpath($themesubdir.'/theme/'.$conf->theme.'/ckeditor/config.js'.($ext?'?'.$ext:''),1).'\\';'.\"\\n\";\t\t// $themesubdir='' in standard usage\n                print 'var ckeditorFilebrowserBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n                print 'var ckeditorFilebrowserImageBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Type=Image&Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n                print '</script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.$pathckeditor.$jsckeditor.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n\n            // Browser notifications\n            if (! defined('DISABLE_BROWSER_NOTIF'))\n            {\n                $enablebrowsernotif=false;\n                if (! empty($conf->agenda->enabled) && ! empty($conf->global->AGENDA_NOTIFICATION)) $enablebrowsernotif=true;\n                if ($conf->browser->layout == 'phone') $enablebrowsernotif=false;\n                if ($enablebrowsernotif)\n                {\n                    print '<!-- Includes JS of Dolibarr (brwoser layout = '.$conf->browser->layout.')-->'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/lib_notification.js.php'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                }\n            }\n\n            // Global js function\n            print '<!-- Includes JS of Dolibarr -->'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/lib_head.js.php'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\n            // Add datepicker default options\n            if (! defined('DISABLE_DATE_PICKER'))\n            {\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/datepicker.js.php'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n\n            // JS forced by modules (relative url starting with /)\n            if (! empty($conf->modules_parts['js']))\t\t// $conf->modules_parts['js'] is array('module'=>array('file1','file2'))\n        \t{\n        \t\t$arrayjs=(array) $conf->modules_parts['js'];\n\t            foreach($arrayjs as $modjs => $filesjs)\n\t            {\n        \t\t\t$filesjs=(array) $filesjs;\t// To be sure filejs is an array\n\t\t            foreach($filesjs as $jsfile)\n\t\t            {\n\t    \t    \t\t// jsfile is a relative path\n\t        \t    \tprint '<!-- Include JS added by module '.$modjs. '-->'.\"\\n\".'<script type=\"text/javascript\" src=\"'.dol_buildpath($jsfile,1).'\"></script>'.\"\\n\";\n\t\t            }\n\t            }\n        \t}\n            // JS forced by page in top_htmlhead (relative url starting with /)\n            if (is_array($arrayofjs))\n            {\n                print '<!-- Includes JS added by page -->'.\"\\n\";\n                foreach($arrayofjs as $jsfile)\n                {\n                    if (preg_match('/^http/i',$jsfile))\n                    {\n                        print '<script type=\"text/javascript\" src=\"'.$jsfile.'\"></script>'.\"\\n\";\n                    }\n                    else\n                    {\n                        if (! preg_match('/^\\//',$jsfile)) $jsfile='/'.$jsfile;\t// For backward compatibility\n                        print '<script type=\"text/javascript\" src=\"'.dol_buildpath($jsfile,1).'\"></script>'.\"\\n\";\n                    }\n                }\n            }\n        }\n\n        if (! empty($head)) print $head.\"\\n\";\n        if (! empty($conf->global->MAIN_HTML_HEADER)) print $conf->global->MAIN_HTML_HEADER.\"\\n\";\n\n        print \"</head>\\n\\n\";\n    }\n\n    $conf->headerdone=1;\t// To tell header was output\n}\n\n\n/**\n *  Show an HTML header + a BODY + The top menu bar\n *\n *  @param      string\t$head    \t\t\tLines in the HEAD\n *  @param      string\t$title   \t\t\tTitle of web page\n *  @param      string\t$target  \t\t\tTarget to use in menu links (Example: '' or '_top')\n *\t@param\t\tint\t\t$disablejs\t\t\tDo not output links to js (Ex: qd fonction utilisee par sous formulaire Ajax)\n *\t@param\t\tint\t\t$disablehead\t\tDo not output head section\n *\t@param\t\tarray\t$arrayofjs\t\t\tArray of js files to add in header\n *\t@param\t\tarray\t$arrayofcss\t\t\tArray of css files to add in header\n *  @param\t\tstring\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n *  @param      string\t$helppagename    \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                Syntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t                   For other external page: http://server/url\n *  @return\t\tvoid\n */\nfunction top_menu($head, $title='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='', $helppagename='')\n{\n    global $user, $conf, $langs, $db;\n    global $dolibarr_main_authentication, $dolibarr_main_demo;\n    global $hookmanager,$menumanager;\n\n    $searchform='';\n    $bookmarks='';\n\n    // Instantiate hooks of thirdparty module\n    $hookmanager->initHooks(array('toprightmenu'));\n\n    $toprightmenu='';\n\n    // For backward compatibility with old modules\n    if (empty($conf->headerdone))\n    {\n        top_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\n        print '<body id=\"mainbody\">';\n    }\n\n    /*\n     * Top menu\n     */\n    if (empty($conf->dol_hide_topmenu) && (! defined('NOREQUIREMENU') || ! constant('NOREQUIREMENU')))\n    {\n        print \"\\n\".'<!-- Start top horizontal -->'.\"\\n\";\n\n        print '<div class=\"side-nav-vert\"><div id=\"id-top\">';\n\n\t    // Show menu entries\n    \tprint '<div id=\"tmenu_tooltip'.(empty($conf->global->MAIN_MENU_INVERT)?'':'invert').'\" class=\"tmenu\">'.\"\\n\";\n    \t$menumanager->atarget=$target;\n\t    $menumanager->showmenu('top', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks));      // This contains a \\n\n\t    print \"</div>\\n\";\n\n\t    // Define link to login card\n        $appli=constant('DOL_APPLICATION_TITLE');\n\t    if (! empty($conf->global->MAIN_APPLICATION_TITLE))\n\t    {\n\t    \t$appli=$conf->global->MAIN_APPLICATION_TITLE;\n\t    \tif (preg_match('/\\d\\.\\d/', $appli))\n\t    \t{\n\t\t\t\tif (! preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) $appli.=\" (\".DOL_VERSION.\")\";\t// If new title contains a version that is different than core\n\t    \t}\n\t    \telse $appli.=\" \".DOL_VERSION;\n\t    }\n\t    else $appli.=\" \".DOL_VERSION;\n\n\t    if (! empty($conf->global->MAIN_FEATURES_LEVEL)) $appli.=\"<br>\".$langs->trans(\"LevelOfFeature\").': '.$conf->global->MAIN_FEATURES_LEVEL;\n\n\t    $logouttext='';\n\t    if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER))\n\t    {\n    \t    //$logouthtmltext=$appli.'<br>';\n    \t    if ($_SESSION[\"dol_authmode\"] != 'forceuser' && $_SESSION[\"dol_authmode\"] != 'http')\n    \t    {\n    \t    \t$logouthtmltext.=$langs->trans(\"Logout\").'<br>';\n\n    \t    \t$logouttext .='<a href=\"'.DOL_URL_ROOT.'/user/logout.php\">';\n    \t        //$logouttext .= img_picto($langs->trans('Logout').\":\".$langs->trans('Logout'), 'logout_top.png', 'class=\"login\"', 0, 0, 1);\n    \t    \t$logouttext .='<span class=\"fa fa-sign-out atoplogin\"></span>';\n    \t        $logouttext .='</a>';\n    \t    }\n    \t    else\n    \t    {\n    \t    \t$logouthtmltext.=$langs->trans(\"NoLogoutProcessWithAuthMode\",$_SESSION[\"dol_authmode\"]);\n    \t        $logouttext .= img_picto($langs->trans('Logout').\":\".$langs->trans('Logout'), 'logout_top.png', 'class=\"login\"', 0, 0, 1);\n    \t    }\n\t    }\n\n\t    print '<div class=\"login_block\">'.\"\\n\";\n\n\t    // Add login user link\n\t    $toprightmenu.='<div class=\"login_block_user\">';\n\n\t    // Login name with photo and tooltip\n\t\t$mode=-1;\n\t    $toprightmenu.='<div class=\"inline-block nowrap\"><div class=\"inline-block login_block_elem login_block_elem_name\" style=\"padding: 0px;\">';\n        $toprightmenu.=$user->getNomUrl($mode, '', true, 0, 11, 0, ($user->firstname ? 'firstname' : -1),'atoplogin');\n        $toprightmenu.='</div></div>';\n\n\t\t$toprightmenu.='</div>';\n\n\t    $toprightmenu.='<div class=\"login_block_other\">';\n\n\t\t// Execute hook printTopRightMenu (hooks should output string like '<div class=\"login\"><a href=\"\">mylink</a></div>')\n\t    $parameters=array();\n\t    $result=$hookmanager->executeHooks('printTopRightMenu',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t\tif (is_numeric($result))\n\t\t{\n\t\t\tif (empty($result)) $toprightmenu.=$hookmanager->resPrint;\t\t// add\n\t\t\telse  $toprightmenu=$hookmanager->resPrint;\t\t\t\t\t\t// replace\n\t\t}\n\t\telse $toprightmenu.=$result;\t// For backward compatibility\n\n    \t// Link to module builder\n\t    if (! empty($conf->modulebuilder->enabled))\n\t    {\n\t        $text ='<a href=\"'.DOL_URL_ROOT.'/modulebuilder/index.php?mainmenu=home&leftmenu=admintools\" target=\"_modulebuilder\">';\n\t        //$text.= img_picto(\":\".$langs->trans(\"ModuleBuilder\"), 'printer_top.png', 'class=\"printer\"');\n\t        $text.='<span class=\"fa fa-bug atoplogin\"></span>';\n\t        $text.='</a>';\n\t        $toprightmenu.=@Form::textwithtooltip('',$langs->trans(\"ModuleBuilder\"),2,1,$text,'login_block_elem',2);\n\t    }\n\n\t\t// Link to print main content area\n\t    if (empty($conf->global->MAIN_PRINT_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && empty($conf->browser->phone))\n\t    {\n\t        $qs=dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]);\n\n\t        if (is_array($_POST))\n\t        {\n    \t\t\tforeach($_POST as $key=>$value) {\n    \t\t\t\tif ($key!=='action' && !is_array($value)) $qs.='&'.$key.'='.urlencode($value);\n    \t\t\t}\n\t        }\n\t\t\t$qs.=(($qs && $morequerystring)?'&':'').$morequerystring;\n\t        $text ='<a href=\"'.dol_escape_htmltag($_SERVER[\"PHP_SELF\"]).'?'.$qs.($qs?'&':'').'optioncss=print\" target=\"_blank\">';\n\t        //$text.= img_picto(\":\".$langs->trans(\"PrintContentArea\"), 'printer_top.png', 'class=\"printer\"');\n\t        $text.='<span class=\"fa fa-print atoplogin\"></span>';\n\t        $text.='</a>';\n\t        $toprightmenu.=@Form::textwithtooltip('',$langs->trans(\"PrintContentArea\"),2,1,$text,'login_block_elem',2);\n\t    }\n\n\t    // Link to Dolibarr wiki pages\n\t    if (empty($conf->global->MAIN_HELP_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER))\n\t    {\n\t        $langs->load(\"help\");\n\n\t        $helpbaseurl='';\n\t        $helppage='';\n\t        $mode='';\n\n\t        if (empty($helppagename)) $helppagename='EN:User_documentation|FR:Documentation_utilisateur|ES:Documentaci\u00f3n_usuarios';\n\n\t        // Get helpbaseurl, helppage and mode from helppagename and langs\n\t        $arrayres=getHelpParamFor($helppagename,$langs);\n\t        $helpbaseurl=$arrayres['helpbaseurl'];\n\t        $helppage=$arrayres['helppage'];\n\t        $mode=$arrayres['mode'];\n\n\t        // Link to help pages\n\t        if ($helpbaseurl && $helppage)\n\t        {\n\t            $text='';\n\t            $title=$appli.'<br>';\n\t            $title.=$langs->trans($mode == 'wiki' ? 'GoToWikiHelpPage': 'GoToHelpPage');\n\t            if ($mode == 'wiki') $title.=' - '.$langs->trans(\"PageWiki\").' &quot;'.dol_escape_htmltag(strtr($helppage,'_',' ')).'&quot;';\n\t            $text.='<a class=\"help\" target=\"_blank\" href=\"';\n\t            if ($mode == 'wiki') $text.=sprintf($helpbaseurl,urlencode(html_entity_decode($helppage)));\n\t            else $text.=sprintf($helpbaseurl,$helppage);\n\t            $text.='\">';\n\t            //$text.=img_picto('', 'helpdoc_top').' ';\n\t            $text.='<span class=\"fa fa-question-circle atoplogin\"></span>';\n\t            //$toprightmenu.=$langs->trans($mode == 'wiki' ? 'OnlineHelp': 'Help');\n\t            //if ($mode == 'wiki') $text.=' ('.dol_trunc(strtr($helppage,'_',' '),8).')';\n\t            $text.='</a>';\n\t            //$toprightmenu.='</div>'.\"\\n\";\n\t            $toprightmenu.=@Form::textwithtooltip('',$title,2,1,$text,'login_block_elem',2);\n\t        }\n\t    }\n\n\t\t// Logout link\n\t    $toprightmenu.=@Form::textwithtooltip('',$logouthtmltext,2,1,$logouttext,'login_block_elem',2);\n\n\t    $toprightmenu.='</div>';\n\n\t    print $toprightmenu;\n\n\t    print \"</div>\\n\";\n\t\tprint '</div></div>';\n\n\t    //unset($form);\n\n\t\tprint '<div style=\"clear: both;\"></div>';\n        print \"<!-- End top horizontal menu -->\\n\\n\";\n    }\n\n    if (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) print '<!-- Begin div id-container --><div id=\"id-container\" class=\"id-container'.($morecss?' '.$morecss:'').'\">';\n}\n\n\n/**\n *  Show left menu bar\n *\n *  @param  array\t$menu_array_before \t       \tTable of menu entries to show before entries of menu handler. This param is deprectaed and must be provided to ''.\n *  @param  string\t$helppagename    \t       \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                   \tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t         \t\t       For other external page: http://server/url\n *  @param  string\t$notused             \t\tDeprecated. Used in past to add content into left menu. Hooks can be used now.\n *  @param  array\t$menu_array_after           Table of menu entries to show after entries of menu handler\n *  @param  int\t\t$leftmenuwithoutmainarea    Must be set to 1. 0 by default for backward compatibility with old modules.\n *  @param  string\t$title                      Title of web page\n *  @param  string  $acceptdelayedhtml          1 if caller request to have html delayed content not returned but saved into global $delayedhtmlcontent (so caller can show it at end of page to avoid flash FOUC effect)\n *  @return\tvoid\n */\nfunction left_menu($menu_array_before, $helppagename='', $notused='', $menu_array_after='', $leftmenuwithoutmainarea=0, $title='', $acceptdelayedhtml=0)\n{\n    global $user, $conf, $langs, $db, $form;\n    global $hookmanager, $menumanager;\n\n    $searchform='';\n    $bookmarks='';\n\n    if (! empty($menu_array_before)) dol_syslog(\"Deprecated parameter menu_array_before was used when calling main::left_menu function. Menu entries of module should now be defined into module descriptor and not provided when calling left_menu.\", LOG_WARNING);\n\n    if (empty($conf->dol_hide_leftmenu) && (! defined('NOREQUIREMENU') || ! constant('NOREQUIREMENU')))\n    {\n\t    // Instantiate hooks of thirdparty module\n\t    $hookmanager->initHooks(array('searchform','leftblock'));\n\n\t\tprint \"\\n\".'<!-- Begin side-nav id-left -->'.\"\\n\".'<div class=\"side-nav\"><div id=\"id-left\">'.\"\\n\";\n\n\t    print \"\\n\";\n\n\t    if ($conf->use_javascript_ajax && $conf->browser->layout != 'phone' && empty($conf->global->MAIN_USE_OLD_SEARCH_FORM))\n\t    {\n    \t    if (! is_object($form)) $form=new Form($db);\n    \t    $selected=-1;\n            $searchform.=$form->selectArrayAjax('searchselectcombo', DOL_URL_ROOT.'/core/ajax/selectsearchbox.php', $selected, '', '', 0, 1, 'vmenusearchselectcombo', 1, $langs->trans(\"Search\"), 1);\n\t    }\n\t    else\n\t    {\n    \t    // Define $searchform\n    \t    if ((( ! empty($conf->societe->enabled) && (empty($conf->global->SOCIETE_DISABLE_PROSPECTS) || empty($conf->global->SOCIETE_DISABLE_CUSTOMERS))) || ! empty($conf->fournisseur->enabled)) && $user->rights->societe->lire)\n    \t    {\n    \t        $langs->load(\"companies\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/societe/list.php', DOL_URL_ROOT.'/societe/list.php', $langs->trans(\"ThirdParties\"), 'maxwidth100', 'sall', 'T', 'searchleftt', img_object('','company'));\n    \t    }\n\n    \t    if (! empty($conf->societe->enabled) && $user->rights->societe->lire)\n    \t    {\n    \t        $langs->load(\"companies\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/contact/list.php', DOL_URL_ROOT.'/contact/list.php', $langs->trans(\"Contacts\"), 'maxwidth100', 'sall', 'A', 'searchleftc', img_object('','contact'));\n    \t    }\n\n    \t    if (((! empty($conf->product->enabled) && $user->rights->produit->lire) || (! empty($conf->service->enabled) && $user->rights->service->lire))\n    \t    )\n    \t    {\n    \t        $langs->load(\"products\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/product/list.php', DOL_URL_ROOT.'/product/list.php', $langs->trans(\"Products\").\"/\".$langs->trans(\"Services\"), 'maxwidth100', 'sall', 'P', 'searchleftp', img_object('','product'));\n    \t    }\n\n            if (! empty($conf->projet->enabled) && $user->rights->projet->lire)\n    \t    {\n    \t        $langs->load(\"projects\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/projet/list.php', DOL_URL_ROOT.'/projet/list.php', $langs->trans(\"Projects\"), 'maxwidth100', 'search_all', 'Q', 'searchleftproj', img_object('','projectpub'));\n    \t    }\n\n    \t    if (! empty($conf->adherent->enabled) && $user->rights->adherent->lire)\n    \t    {\n    \t        $langs->load(\"members\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/adherents/list.php', DOL_URL_ROOT.'/adherents/list.php', $langs->trans(\"Members\"), 'maxwidth100', 'sall', 'M', 'searchleftm', img_object('','user'));\n    \t    }\n\n    \t\tif (! empty($conf->user->enabled) && $user->rights->user->user->lire)\n    \t    {\n    \t        $langs->load(\"users\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/user/list.php', DOL_URL_ROOT.'/user/list.php', $langs->trans(\"Users\"), 'maxwidth100', 'sall', 'M', 'searchleftuser', img_object('','user'));\n    \t    }\n\t    }\n\n\t    // Execute hook printSearchForm\n\t    $parameters=array('searchform'=>$searchform);\n\t    $reshook=$hookmanager->executeHooks('printSearchForm',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t\tif (empty($reshook))\n\t\t{\n\t\t\t$searchform.=$hookmanager->resPrint;\n\t\t}\n\t\telse $searchform=$hookmanager->resPrint;\n\n\t\tif ($conf->use_javascript_ajax && $conf->browser->layout == 'phone')\n\t    {\n\t        $searchform='<div class=\"blockvmenuimpair blockvmenusearchphone\"><div id=\"divsearchforms1\"><a href=\"#\" alt=\"'.dol_escape_htmltag($langs->trans(\"ShowSearchFields\")).'\">'.$langs->trans(\"Search\").'...</a></div><div id=\"divsearchforms2\" style=\"display: none\">'.$searchform.'</div>';\n\t        $searchform.='<script type=\"text/javascript\">\n            \tjQuery(document).ready(function () {\n            \t\tjQuery(\"#divsearchforms1\").click(function(){\n\t                   jQuery(\"#divsearchforms2\").toggle();\n\t               });\n            \t});\n                </script>' . \"\\n\";\n\t        $searchform.='</div>';\n\t    }\n\n\t    // Define $bookmarks\n\t    if (! empty($conf->bookmark->enabled) && $user->rights->bookmark->lire)\n\t    {\n\t        include_once (DOL_DOCUMENT_ROOT.'/bookmarks/bookmarks.lib.php');\n\t        $langs->load(\"bookmarks\");\n\n\t        $bookmarks=printBookmarksList($db, $langs);\n\t    }\n\n\t    // Left column\n\t    print '<!-- Begin left menu -->'.\"\\n\";\n\n\t    print '<div class=\"vmenu\"'.(empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)?'':' title=\"Left menu\"').'>'.\"\\n\\n\";\n\n    \t// Show left menu with other forms\n\t    $menumanager->menu_array = $menu_array_before;\n    \t$menumanager->menu_array_after = $menu_array_after;\n\t    $menumanager->showmenu('left', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks)); // output menu_array and menu found in database\n\n        // Dolibarr version + help + bug report link\n\t\tprint \"\\n\";\n\t    print \"<!-- Begin Help Block-->\\n\";\n        print '<div id=\"blockvmenuhelp\" class=\"blockvmenuhelp\">'.\"\\n\";\n\n        // Version\n        if (empty($conf->global->MAIN_HIDE_VERSION))    // Version is already on help picto and on login page.\n        {\n            $doliurl='https://www.dolibarr.org';\n    \t\t//local communities\n    \t\tif (preg_match('/fr/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.fr';\n    \t\tif (preg_match('/es/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.es';\n    \t\tif (preg_match('/de/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.de';\n    \t\tif (preg_match('/it/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.it';\n    \t\tif (preg_match('/gr/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.gr';\n\n            $appli=constant('DOL_APPLICATION_TITLE');\n    \t    if (! empty($conf->global->MAIN_APPLICATION_TITLE))\n    \t    {\n    \t    \t$appli=$conf->global->MAIN_APPLICATION_TITLE; $doliurl='';\n    \t    \tif (preg_match('/\\d\\.\\d/', $appli))\n    \t    \t{\n    \t\t\t\tif (! preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) $appli.=\" (\".DOL_VERSION.\")\";\t// If new title contains a version that is different than core\n    \t    \t}\n    \t    \telse $appli.=\" \".DOL_VERSION;\n    \t    }\n    \t    else $appli.=\" \".DOL_VERSION;\n    \t    print '<div id=\"blockvmenuhelpapp\" class=\"blockvmenuhelp\">';\n    \t    if ($doliurl) print '<a class=\"help\" target=\"_blank\" href=\"'.$doliurl.'\">';\n    \t    else print '<span class=\"help\">';\n    \t    print $appli;\n    \t    if ($doliurl) print '</a>';\n    \t    else print '</span>';\n    \t    print '</div>'.\"\\n\";\n        }\n\n\t\t// Link to bugtrack\n\t\tif (! empty($conf->global->MAIN_BUGTRACK_ENABLELINK))\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\n\t\t\t$bugbaseurl = 'https://github.com/Dolibarr/dolibarr/issues/new';\n\t\t\t$bugbaseurl.= '?title=';\n\t\t\t$bugbaseurl.= urlencode(\"Bug: \");\n\t\t\t$bugbaseurl.= '&body=';\n\t\t\t// TODO use .github/ISSUE_TEMPLATE.md to generate?\n\t\t\t$bugbaseurl .= urlencode(\"# Bug\\n\");\n\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"## Environment\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Version**: \" . DOL_VERSION . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **OS**: \" . php_uname('s') . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Web server**: \" . $_SERVER[\"SERVER_SOFTWARE\"] . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **PHP**: \" . php_sapi_name() . ' ' . phpversion() . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Database**: \" . $db::LABEL . ' ' . $db->getVersion() . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **URL**: \" . $_SERVER[\"REQUEST_URI\"] . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"## Report\\n\");\n\t\t\tprint '<div id=\"blockvmenuhelpbugreport\" class=\"blockvmenuhelp\">';\n\t\t\tprint '<a class=\"help\" target=\"_blank\" href=\"'.$bugbaseurl.'\">'.$langs->trans(\"FindBug\").'</a>';\n\t\t\tprint '</div>';\n\t\t}\n\n        print \"</div>\\n\";\n        print \"<!-- End Help Block-->\\n\";\n        print \"\\n\";\n\n        print \"</div>\\n\";\n        print \"<!-- End left menu -->\\n\";\n        print \"\\n\";\n\n\t    // Execute hook printLeftBlock\n\t    $parameters=array();\n\t    $reshook=$hookmanager->executeHooks('printLeftBlock',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t    print $hookmanager->resPrint;\n\n\t    print '</div></div> <!-- End side-nav id-left -->';\t// End div id=\"side-nav\" div id=\"id-left\"\n    }\n\n    print \"\\n\";\n    print '<!-- Begin right area -->'.\"\\n\";\n\n    if (empty($leftmenuwithoutmainarea)) main_area($title);\n}\n\n\n/**\n *  Begin main area\n *\n *  @param\tstring\t$title\t\tTitle\n *  @return\tvoid\n */\nfunction main_area($title='')\n{\n    global $conf, $langs;\n\n\tif (empty($conf->dol_hide_leftmenu)) print '<div id=\"id-right\">';\n\n    print \"\\n\";\n\n    print '<!-- Begin div class=\"fiche\" -->'.\"\\n\".'<div class=\"fiche\">'.\"\\n\";\n\n    if (! empty($conf->global->MAIN_ONLY_LOGIN_ALLOWED)) print info_admin($langs->trans(\"WarningYouAreInMaintenanceMode\",$conf->global->MAIN_ONLY_LOGIN_ALLOWED));\n}\n\n\n/**\n *  Return helpbaseurl, helppage and mode\n *\n *  @param\tstring\t\t$helppagename\t\tPage name ('EN:xxx,ES:eee,FR:fff...' or 'http://localpage')\n *  @param  Translate\t$langs\t\t\t\tLanguage\n *  @return\tarray\t\tArray of help urls\n */\nfunction getHelpParamFor($helppagename,$langs)\n{\n\t$helpbaseurl='';\n\t$helppage='';\n\t$mode='';\n\n    if (preg_match('/^http/i',$helppagename))\n    {\n        // If complete URL\n        $helpbaseurl='%s';\n        $helppage=$helppagename;\n        $mode='local';\n    }\n    else\n    {\n        // If WIKI URL\n        if (preg_match('/^es/i',$langs->defaultlang))\n        {\n            $helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n            if (preg_match('/ES:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n        }\n        if (preg_match('/^fr/i',$langs->defaultlang))\n        {\n            $helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n            if (preg_match('/FR:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n        }\n        if (empty($helppage))\t// If help page not already found\n        {\n            $helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n            if (preg_match('/EN:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n        }\n        $mode='wiki';\n    }\n    return array('helpbaseurl'=>$helpbaseurl,'helppage'=>$helppage,'mode'=>$mode);\n}\n\n\n/**\n *  Show a search area\n *\n *  @param  string\t$urlaction          Url post\n *  @param  string\t$urlobject          Url of the link under the search box\n *  @param  string\t$title              Title search area\n *  @param  string\t$htmlmorecss        Add more css\n *  @param  string\t$htmlinputname      Field Name input form\n *  @param\tstring\t$accesskey\t\t\tAccesskey\n *  @param  string  $prefhtmlinputname  Complement for id to avoid multiple same id in the page\n *  @param\tstring\t$img\t\t\t\tImage to use\n *  @return\tstring\n */\nfunction printSearchForm($urlaction, $urlobject, $title, $htmlmorecss, $htmlinputname, $accesskey='', $prefhtmlinputname='',$img='')\n{\n    global $conf,$langs;\n\n    if (empty($htmlinputid)) {\n        $htmlinputid = $htmlinputname;\n    }\n\n    $ret='';\n    $ret.='<form action=\"'.$urlaction.'\" method=\"post\" class=\"searchform\">';\n\tif (empty($conf->global->MAIN_HTML5_PLACEHOLDER))\n\t{\n        $ret.='<div class=\"menu_titre menu_titre_search\"';\n    \tif (! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=' style=\"display: inline-block\"';\n    \t$ret.='>';\n    \t$ret.='<label for=\"'.$prefhtmlinputname.$htmlinputname.'\">';\n    \t$ret.='<a class=\"vsmenu\" href=\"'.$urlobject.'\">';\n       \tif ($img && ! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=$img;\n       \telse if ($img || $title) $ret.=$img.' '.$title;\n    \t$ret.='</a>';\n    \t$ret.='</label>';\n    \t$ret.='</div>';\n\t}\n    $ret.='<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    $ret.='<input type=\"hidden\" name=\"mode\" value=\"search\">';\n    $ret.='<input type=\"text\" class=\"flat '.$htmlmorecss.'\"';\n    if (! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=' style=\"text-indent: 22px; background-image: url(\\''.$img.'\\'); background-repeat: no-repeat; background-position: 3px;\"';\n    $ret.=($accesskey?' accesskey=\"'.$accesskey.'\"':'');\n    if (! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=' placeholder=\"'.strip_tags($title).'\"';\t\t// Will work only if MAIN_HTML5_PLACEHOLDER is set to 1\n    else $ret.=' title=\"'.$langs->trans(\"SearchOf\").''.strip_tags($title).'\"';\n    $ret.=' name=\"'.$htmlinputname.'\" id=\"'.$prefhtmlinputname.$htmlinputname.'\" />';\n    $ret.='<input type=\"submit\" class=\"button\" style=\"padding-top: 4px; padding-bottom: 4px; padding-left: 6px; padding-right: 6px\" value=\"'.$langs->trans(\"Go\").'\">';\n    $ret.=\"</form>\\n\";\n    return $ret;\n}\n\n\nif (! function_exists(\"llxFooter\"))\n{\n    /**\n     * Show HTML footer\n     * Close div /DIV class=fiche + /DIV id-right + /DIV id-container + /BODY + /HTML.\n     * If global var $delayedhtmlcontent was filled, we output it just before closing the body.\n     *\n     * @param\tstring\t$comment    A text to add as HTML comment into HTML generated page\n\t * @param\tstring\t$zone\t\t'private' (for private pages) or 'public' (for public pages)\n     * @return\tvoid\n     */\n    function llxFooter($comment='',$zone='private')\n    {\n        global $conf, $langs, $user, $object;\n        global $delayedhtmlcontent;\n\n        // Global html output events ($mesgs, $errors, $warnings)\n        dol_htmloutput_events();\n\n        // Code for search criteria persistence.\n        // Save $user->lastsearch_values if defined (define on list pages when a form field search_xxx exists)\n        if (is_object($user) && ! empty($user->lastsearch_values_tmp) && is_array($user->lastsearch_values_tmp))\n        {\n            // Clean data\n            foreach($user->lastsearch_values_tmp as $key => $val)\n            {\n                unset($_SESSION['lastsearch_values_tmp_'.$key]);\n                if (count($val))\n                {\n                    if (empty($val['sortfield'])) unset($val['sortfield']);\n                    if (empty($val['sortorder'])) unset($val['sortorder']);\n                    dol_syslog('Save lastsearch_values_tmp_'.$key.'='.json_encode($val, 0).\" (systematic recording of last search criteria)\");\n                    $_SESSION['lastsearch_values_tmp_'.$key]=json_encode($val);\n                    unset($_SESSION['lastsearch_values_'.$key]);\n                }\n            }\n        }\n\n        // Core error message\n        if (! empty($conf->global->MAIN_CORE_ERROR))\n        {\n            // Ajax version\n            if ($conf->use_javascript_ajax)\n            {\n                $title = img_warning().' '.$langs->trans('CoreErrorTitle');\n                print ajax_dialog($title, $langs->trans('CoreErrorMessage'));\n            }\n            // html version\n            else\n            {\n                $msg = img_warning().' '.$langs->trans('CoreErrorMessage');\n                print '<div class=\"error\">'.$msg.'</div>';\n            }\n\n            //define(\"MAIN_CORE_ERROR\",0);      // Constant was defined and we can't change value of a constant\n        }\n\n        print \"\\n\\n\";\n\n        print '</div> <!-- End div class=\"fiche\" -->'.\"\\n\"; // End div fiche\n\n\t\tif (empty($conf->dol_hide_leftmenu)) print '</div> <!-- End div id-right -->'; // End div id-right\n\n        print \"\\n\";\n        if ($comment) print '<!-- '.$comment.' -->'.\"\\n\";\n\n        printCommonFooter($zone);\n\n        if (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) print '</div> <!-- End div id-container -->'.\"\\n\";\t// End div container\n\n        if (! empty($delayedhtmlcontent)) print $delayedhtmlcontent;\n\n        // TODO Move this in lib_head.js.php\n\n        // Wrapper to show tooltips (html or onclick popup)\n        if (! empty($conf->use_javascript_ajax) && empty($conf->dol_no_mouse_hover))\n        {\n    \t\tprint \"\\n<!-- JS CODE TO ENABLE tipTip on all object with class classfortooltip -->\\n\";\n    \t\tprint '<script type=\"text/javascript\">\n            \tjQuery(document).ready(function () {\n            \t\tjQuery(\".classfortooltip\").tipTip({maxWidth: \"'.dol_size(($conf->browser->layout == 'phone' ? 400 : 700),'width').'px\", edgeOffset: 10, delay: 50, fadeIn: 50, fadeOut: 50});\n            \t\tjQuery(\".classfortooltiponclicktext\").dialog({ width: 500, autoOpen: false });\n            \t\tjQuery(\".classfortooltiponclick\").click(function () {\n            \t\t    console.log(\"We click on tooltip for element with dolid=\"+$(this).attr(\\'dolid\\'));\n            \t\t    if ($(this).attr(\\'dolid\\'))\n            \t\t    {\n                            obj=$(\"#idfortooltiponclick_\"+$(this).attr(\\'dolid\\'));\n            \t\t        obj.dialog(\"open\");\n            \t\t    }\n            \t\t});\n                });\n            </script>' . \"\\n\";\n        }\n\n        // Wrapper to manage document_preview\n        if (! empty($conf->use_javascript_ajax) && ($conf->browser->layout != 'phone'))\n        {\n            print \"\\n<!-- JS CODE TO ENABLE document_preview -->\\n\";\n            print '<script type=\"text/javascript\">\n                jQuery(document).ready(function () {\n\t\t\t        jQuery(\".documentpreview\").click(function () {\n            \t\t    console.log(\"We click on preview for element with href=\"+$(this).attr(\\'href\\')+\" mime=\"+$(this).attr(\\'mime\\'));\n            \t\t    document_preview($(this).attr(\\'href\\'), $(this).attr(\\'mime\\'), \\''.dol_escape_js($langs->transnoentities(\"Preview\")).'\\');\n                \t\treturn false;\n        \t\t\t});\n        \t\t});\n            </script>' . \"\\n\";\n        }\n\n        // Wrapper to manage dropdown\n        if (! empty($conf->use_javascript_ajax) && ! defined('JS_JQUERY_DISABLE_DROPDOWN'))\n        {\n            print \"\\n<!-- JS CODE TO ENABLE dropdown -->\\n\";\n            print '<script type=\"text/javascript\">\n                jQuery(document).ready(function () {\n                  $(\".dropdown dt a\").on(\\'click\\', function () {\n                      //console.log($(this).parent().parent().find(\\'dd ul\\'));\n                      $(this).parent().parent().find(\\'dd ul\\').slideToggle(\\'fast\\');\n                      // Note: Did not find a way to get exact height (value is update at exit) so i calculate a generic from nb of lines\n                      heigthofcontent = 21 * $(this).parent().parent().find(\\'dd div ul li\\').length;\n                      if (heigthofcontent > 300) heigthofcontent = 300; // limited by max-height on css .dropdown dd ul\n                      posbottom = $(this).parent().parent().find(\\'dd\\').offset().top + heigthofcontent + 8;\n                      //console.log(posbottom);\n                      var scrollBottom = $(window).scrollTop() + $(window).height();\n                      //console.log(scrollBottom);\n                      diffoutsidebottom = (posbottom - scrollBottom);\n                      console.log(\"heigthofcontent=\"+heigthofcontent+\", diffoutsidebottom (posbottom=\"+posbottom+\" - scrollBottom=\"+scrollBottom+\") = \"+diffoutsidebottom);\n                      if (diffoutsidebottom > 0)\n                      {\n                            pix = \"-\"+(diffoutsidebottom+8)+\"px\";\n                            console.log(\"We reposition top by \"+pix);\n                            $(this).parent().parent().find(\\'dd\\').css(\"top\", pix);\n                      }\n                      // $(\".dropdown dd ul\").slideToggle(\\'fast\\');\n                  });\n                  $(\".dropdowncloseonclick\").on(\\'click\\', function () {\n                     console.log(\"Link has class dropdowncloseonclick, so we close/hide the popup ul\");\n                     $(this).parent().parent().hide();\n                  });\n\n                  $(document).bind(\\'click\\', function (e) {\n                      var $clicked = $(e.target);\n                      if (!$clicked.parents().hasClass(\"dropdown\")) $(\".dropdown dd ul\").hide();\n                  });\n                });\n                </script>';\n        }\n\n        // Wrapper to add log when clicking on download or preview\n        if (! empty($conf->blockedlog->enabled) && is_object($object) && $object->id > 0 && $object->statut > 0)\n        {\n            if (in_array($object->element, array('facture')))       // Restrict for the moment to element 'facture'\n            {\n                print \"\\n<!-- JS CODE TO ENABLE log when making a download or a preview of a document -->\\n\";\n                ?>\n    \t\t\t<script type=\"text/javascript\">\n    \t\t\tjQuery(document).ready(function () {\n    \t\t\t\t$('a.documentpreview').click(function() {\n    \t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n    \t\t\t\t\t\t\t, {\n    \t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n    \t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n    \t\t\t\t\t\t\t\t, action:'DOC_PREVIEW'\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t);\n    \t\t\t\t});\n    \t\t\t\t$('a.documentdownload').click(function() {\n    \t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n    \t\t\t\t\t\t\t, {\n    \t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n    \t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n    \t\t\t\t\t\t\t\t, action:'DOC_DOWNLOAD'\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t);\n    \t\t\t\t});\n    \t\t\t});\n    \t\t\t</script>\n\t\t\t\t<?php\n    \t\t}\n       \t}\n\n\n\t\t// A div for the address popup\n\t\tprint \"\\n<!-- A div to allow dialog popup -->\\n\";\n\t\tprint '<div id=\"dialogforpopup\" style=\"display: none;\"></div>'.\"\\n\";\n\n        print \"</body>\\n\";\n        print \"</html>\\n\";\n    }\n}\n\n", "<?php\n/* Copyright (C) 2004-2005 Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2005-2016 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2005-2016 Regis Houssin        <regis.houssin@capnetworks.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n * or see http://www.gnu.org/\n */\n\n/**\n *\t\t\\file       htdocs/viewimage.php\n *\t\t\\brief      Wrapper to show images into Dolibarr screens\n *      \\remarks    Call to wrapper is '<img src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart=diroffile&file=relativepathofofile&cache=0\">'\n */\n\n//if (! defined('NOREQUIREUSER'))\tdefine('NOREQUIREUSER','1');\t// Not disabled cause need to load personalized language\n//if (! defined('NOREQUIREDB'))\t\tdefine('NOREQUIREDB','1');\t\t// Not disabled cause need to load personalized language\nif (! defined('NOREQUIRESOC'))\t\tdefine('NOREQUIRESOC','1');\nif (! defined('NOREQUIRETRAN'))\t\tdefine('NOREQUIRETRAN','1');\nif (! defined('NOCSRFCHECK'))\t\tdefine('NOCSRFCHECK','1');\nif (! defined('NOTOKENRENEWAL'))\tdefine('NOTOKENRENEWAL','1');\nif (! defined('NOREQUIREMENU'))\t\tdefine('NOREQUIREMENU','1');\nif (! defined('NOREQUIREHTML'))\t\tdefine('NOREQUIREHTML','1');\nif (! defined('NOREQUIREAJAX'))\t\tdefine('NOREQUIREAJAX','1');\nif (! defined('NOREQUIREHOOK'))\t\tdefine('NOREQUIREHOOK','1');\t// Disable \"main.inc.php\" hooks\n// Some value of modulepart can be used to get resources that are public so no login are required.\nif ((isset($_GET[\"modulepart\"]) && ($_GET[\"modulepart\"] == 'mycompany' || $_GET[\"modulepart\"] == 'companylogo')) && ! defined(\"NOLOGIN\")) define(\"NOLOGIN\",'1');\nif ((isset($_GET[\"modulepart\"]) && $_GET[\"modulepart\"] == 'medias') && ! defined(\"NOLOGIN\"))\n{\n\tdefine(\"NOLOGIN\",'1');\n\t// For multicompany\n\t$entity=(! empty($_GET['entity']) ? (int) $_GET['entity'] : (! empty($_POST['entity']) ? (int) $_POST['entity'] : 1));\n\tif (is_numeric($entity)) define(\"DOLENTITY\", $entity);\n}\n\n/**\n * Header empty\n *\n * @return\tvoid\n */\nfunction llxHeader() { }\n/**\n * Footer empty\n *\n * @return\tvoid\n */\nfunction llxFooter() { }\n\nrequire 'main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\n$action=GETPOST('action','alpha');\n$original_file=GETPOST(\"file\",'alpha');\n$modulepart=GETPOST('modulepart','alpha');\n$urlsource=GETPOST(\"urlsource\",'alpha');\n$entity=GETPOST('entity','int')?GETPOST('entity','int'):$conf->entity;\n\n// Security check\nif (empty($modulepart)) accessforbidden('Bad value for parameter modulepart');\nif ($modulepart == 'fckeditor') $modulepart='medias';   // For backward compatibility\n\n\n/*\n * Actions\n */\n\n// None\n\n\n\n/*\n * View\n */\n\nif (GETPOST(\"cache\",'alpha'))\n{\n    // Important: Following code is to avoid page request by browser and PHP CPU at\n    // each Dolibarr page access.\n    if (empty($dolibarr_nocache))\n    {\n        header('Cache-Control: max-age=3600, public, must-revalidate');\n        header('Pragma: cache');       // This is to avoid having Pragma: no-cache\n    }\n    else header('Cache-Control: no-cache');\n    //print $dolibarr_nocache; exit;\n}\n\n// Define mime type\n$type = 'application/octet-stream';\nif (! empty($_GET[\"type\"])) $type=$_GET[\"type\"];\nelse $type=dol_mimetype($original_file);\n\n// Security: Delete string ../ into $original_file\n$original_file = str_replace(\"../\",\"/\", $original_file);\n\n// Find the subdirectory name as the reference\n$refname=basename(dirname($original_file).\"/\");\n\n// Security check\nif (empty($modulepart)) accessforbidden('Bad value for parameter modulepart');\n$check_access = dol_check_secure_access_document($modulepart,$original_file,$entity,$refname);\n$accessallowed              = $check_access['accessallowed'];\n$sqlprotectagainstexternals = $check_access['sqlprotectagainstexternals'];\n$original_file              = $check_access['original_file'];\n\n// Security:\n// Limit access if permissions are wrong\nif (! $accessallowed)\n{\n    accessforbidden();\n}\n\n// Security:\n// On interdit les remontees de repertoire ainsi que les pipe dans les noms de fichiers.\nif (preg_match('/\\.\\./',$original_file) || preg_match('/[<>|]/',$original_file))\n{\n    dol_syslog(\"Refused to deliver file \".$original_file, LOG_WARNING);\n    // Do no show plain path in shown error message\n    dol_print_error(0,'Error: File '.$_GET[\"file\"].' does not exists');\n    exit;\n}\n\n\n\nif ($modulepart == 'barcode')\n{\n    $generator=GETPOST(\"generator\",\"alpha\");\n    $code=GETPOST(\"code\",'alpha');\n    $encoding=GETPOST(\"encoding\",\"alpha\");\n    $readable=GETPOST(\"readable\",'alpha')?GETPOST(\"readable\",\"alpha\"):\"Y\";\n\n    if (empty($generator) || empty($encoding))\n    {\n        dol_print_error(0,'Error, parameter \"generator\" or \"encoding\" not defined');\n        exit;\n    }\n\n    $dirbarcode=array_merge(array(\"/core/modules/barcode/doc/\"),$conf->modules_parts['barcode']);\n\n    $result=0;\n\n    foreach($dirbarcode as $reldir)\n    {\n        $dir=dol_buildpath($reldir,0);\n        $newdir=dol_osencode($dir);\n\n        // Check if directory exists (we do not use dol_is_dir to avoid loading files.lib.php)\n        if (! is_dir($newdir)) continue;\n\n        $result=@include_once $newdir.$generator.'.modules.php';\n        if ($result) break;\n    }\n\n    // Load barcode class\n    $classname = \"mod\".ucfirst($generator);\n    $module = new $classname($db);\n    if ($module->encodingIsSupported($encoding))\n    {\n        $result=$module->buildBarCode($code,$encoding,$readable);\n    }\n}\nelse\t\t\t\t\t// Open and return file\n{\n    clearstatcache();\n\n    // Output files on browser\n    dol_syslog(\"viewimage.php return file $original_file content-type=$type\");\n\n    // This test is to avoid error images when image is not available (for example thumbs).\n    if (! dol_is_file($original_file) && empty($_GET[\"noalt\"]))\n    {\n        $original_file=DOL_DOCUMENT_ROOT.'/public/theme/common/nophoto.png';\n        /*$error='Error: File '.$_GET[\"file\"].' does not exists or filesystems permissions are not allowed';\n        dol_print_error(0,$error);\n        print $error;\n        exit;*/\n    }\n\n    // Les drois sont ok et fichier trouve\n    if ($type)\n    {\n        top_httphead($type);\n        header('Content-Disposition: inline; filename=\"'.basename($original_file).'\"');\n    }\n    else\n    {\n        top_httphead('image/png');\n        header('Content-Disposition: inline; filename=\"'.basename($original_file).'\"');\n    }\n\n    $original_file_osencoded=dol_osencode($original_file);\n    readfile($original_file_osencoded);\n}\n\n\nif (is_object($db)) $db->close();\n"], "fixing_code": ["<?php\n/* Copyright (C) 2001-2007\tRodolphe Quiedeville\t<rodolphe@quiedeville.org>\n * Copyright (C) 2004-2013\tLaurent Destailleur\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2005-2012\tRegis Houssin\t\t\t<regis.houssin@capnetworks.com>\n * Copyright (C) 2010-2014\tJuanjo Menent\t\t\t<jmenent@2byte.es>\n * Copyright (C) 2011-2017\tPhilippe Grand\t\t\t<philippe.grand@atoo-net.com>\n * Copyright (C) 2015       Alexandre Spangaro      <aspangaro.dolibarr@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/admin/company.php\n *\t\\ingroup    company\n *\t\\brief      Setup page to configure company/foundation\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/images.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formother.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\n\n$action=GETPOST('action','aZ09');\n\n$langs->load(\"admin\");\n$langs->load(\"companies\");\n\nif (! $user->admin) accessforbidden();\n\n$error=0;\n\n/*\n * Actions\n */\n\nif ( ($action == 'update' && ! GETPOST(\"cancel\",'alpha'))\n|| ($action == 'updateedit') )\n{\n\t$tmparray=getCountry(GETPOST('country_id','int'),'all',$db,$langs,0);\n\tif (! empty($tmparray['id']))\n\t{\n\t\t$mysoc->country_id   =$tmparray['id'];\n\t\t$mysoc->country_code =$tmparray['code'];\n\t\t$mysoc->country_label=$tmparray['label'];\n\n\t\t$s=$mysoc->country_id.':'.$mysoc->country_code.':'.$mysoc->country_label;\n\t\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_COUNTRY\", $s,'chaine',0,'',$conf->entity);\n\t}\n\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_NOM\", GETPOST(\"nom\",'nohtml'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_ADDRESS\", GETPOST(\"address\",'nohtml'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_TOWN\", GETPOST(\"town\",'nohtml'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_ZIP\", GETPOST(\"zipcode\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_STATE\", GETPOST(\"state_id\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_MONNAIE\", GETPOST(\"currency\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_TEL\", GETPOST(\"tel\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_FAX\", GETPOST(\"fax\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_MAIL\", GETPOST(\"mail\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_WEB\", GETPOST(\"web\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_NOTE\", GETPOST(\"note\",'none'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_GENCOD\", GETPOST(\"barcode\",'alpha'),'chaine',0,'',$conf->entity);\n\n\t$varforimage='logo'; $dirforimage=$conf->mycompany->dir_output.'/logos/';\n\tif ($_FILES[$varforimage][\"tmp_name\"])\n\t{\n\t\tif (preg_match('/([^\\\\/:]+)$/i',$_FILES[$varforimage][\"name\"],$reg))\n\t\t{\n\t\t\t$original_file=$reg[1];\n\n\t\t\t$isimage=image_format_supported($original_file);\n\t\t\tif ($isimage >= 0)\n\t\t\t{\n\t\t\t\tdol_syslog(\"Move file \".$_FILES[$varforimage][\"tmp_name\"].\" to \".$dirforimage.$original_file);\n\t\t\t\tif (! is_dir($dirforimage))\n\t\t\t\t{\n\t\t\t\t\tdol_mkdir($dirforimage);\n\t\t\t\t}\n\t\t\t\t$result=dol_move_uploaded_file($_FILES[$varforimage][\"tmp_name\"],$dirforimage.$original_file,1,0,$_FILES[$varforimage]['error']);\n\t\t\t\tif ($result > 0)\n\t\t\t\t{\n\t\t\t\t\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_LOGO\",$original_file,'chaine',0,'',$conf->entity);\n\n\t\t\t\t\t// Create thumbs of logo (Note that PDF use original file and not thumbs)\n\t\t\t\t\tif ($isimage > 0)\n\t\t\t\t\t{\n\t\t\t\t\t    // Create thumbs\n\t\t\t\t\t    //$object->addThumbs($newfile);    // We can't use addThumbs here yet because we need name of generated thumbs to add them into constants. TODO Check if need such constants. We should be able to retreive value with get...\n\n\t\t\t\t\t\t// Create small thumb, Used on logon for example\n\t\t\t\t\t\t$imgThumbSmall = vignette($dirforimage.$original_file, $maxwidthsmall, $maxheightsmall, '_small', $quality);\n\t\t\t\t\t\tif (image_format_supported($imgThumbSmall) >= 0 && preg_match('/([^\\\\/:]+)$/i',$imgThumbSmall,$reg))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$imgThumbSmall = $reg[1];    // Save only basename\n\t\t\t\t\t\t\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_LOGO_SMALL\",$imgThumbSmall,'chaine',0,'',$conf->entity);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse dol_syslog($imgThumbSmall);\n\n\t\t\t\t\t\t// Create mini thumb, Used on menu or for setup page for example\n\t\t\t\t\t\t$imgThumbMini = vignette($dirforimage.$original_file, $maxwidthmini, $maxheightmini, '_mini', $quality);\n\t\t\t\t\t\tif (image_format_supported($imgThumbMini) >= 0 && preg_match('/([^\\\\/:]+)$/i',$imgThumbMini,$reg))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$imgThumbMini = $reg[1];     // Save only basename\n\t\t\t\t\t\t\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_LOGO_MINI\",$imgThumbMini,'chaine',0,'',$conf->entity);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse dol_syslog($imgThumbMini);\n\t\t\t\t\t}\n\t\t\t\t\telse dol_syslog(\"ErrorImageFormatNotSupported\",LOG_WARNING);\n\t\t\t\t}\n\t\t\t\telse if (preg_match('/^ErrorFileIsInfectedWithAVirus/',$result))\n\t\t\t\t{\n\t\t\t\t\t$error++;\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t$tmparray=explode(':',$result);\n\t\t\t\t\tsetEventMessages($langs->trans('ErrorFileIsInfectedWithAVirus',$tmparray[1]), null, 'errors');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$error++;\n\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorFailedToSaveFile\"), null, 'errors');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$error++;\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tsetEventMessages($langs->trans(\"ErrorBadImageFormat\"), null, 'errors');\n\t\t\t}\n\t\t}\n\t}\n\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_MANAGERS\", GETPOST(\"MAIN_INFO_SOCIETE_MANAGERS\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_CAPITAL\", GETPOST(\"capital\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_FORME_JURIDIQUE\", GETPOST(\"forme_juridique_code\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SIREN\", GETPOST(\"siren\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SIRET\", GETPOST(\"siret\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_APE\", GETPOST(\"ape\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_RCS\", GETPOST(\"rcs\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_PROFID5\", GETPOST(\"MAIN_INFO_PROFID5\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_PROFID6\", GETPOST(\"MAIN_INFO_PROFID6\",'alpha'),'chaine',0,'',$conf->entity);\n\n\tdolibarr_set_const($db, \"MAIN_INFO_TVAINTRA\", GETPOST(\"tva\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_OBJECT\", GETPOST(\"object\",'nohtml'),'chaine',0,'',$conf->entity);\n\n\tdolibarr_set_const($db, \"SOCIETE_FISCAL_MONTH_START\", GETPOST(\"fiscalmonthstart\",'alpha'),'chaine',0,'',$conf->entity);\n\n\tdolibarr_set_const($db, \"FACTURE_TVAOPTION\", GETPOST(\"optiontva\",'alpha'),'chaine',0,'',$conf->entity);\n\n\t// Local taxes\n\tdolibarr_set_const($db, \"FACTURE_LOCAL_TAX1_OPTION\", GETPOST(\"optionlocaltax1\",'alpha'),'chaine',0,'',$conf->entity);\n\tdolibarr_set_const($db, \"FACTURE_LOCAL_TAX2_OPTION\", GETPOST(\"optionlocaltax2\",'alpha'),'chaine',0,'',$conf->entity);\n\n\tif($_POST[\"optionlocaltax1\"]==\"localtax1on\")\n\t{\n\t\tif(!isset($_REQUEST['lt1']))\n\t\t{\n\t\t\tdolibarr_set_const($db, \"MAIN_INFO_VALUE_LOCALTAX1\", 0,'chaine',0,'',$conf->entity);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdolibarr_set_const($db, \"MAIN_INFO_VALUE_LOCALTAX1\", GETPOST('lt1','alpha'),'chaine',0,'',$conf->entity);\n\t\t}\n\t\tdolibarr_set_const($db,\"MAIN_INFO_LOCALTAX_CALC1\",  GETPOST(\"clt1\",'alpha'),'chaine',0,'',$conf->entity);\n\t}\n\tif($_POST[\"optionlocaltax2\"]==\"localtax2on\")\n\t{\n\t\tif(!isset($_REQUEST['lt2']))\n\t\t{\n\t\t\tdolibarr_set_const($db, \"MAIN_INFO_VALUE_LOCALTAX2\", 0,'chaine',0,'',$conf->entity);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdolibarr_set_const($db, \"MAIN_INFO_VALUE_LOCALTAX2\", GETPOST('lt2','alpha'),'chaine',0,'',$conf->entity);\n\t\t}\n\t\tdolibarr_set_const($db,\"MAIN_INFO_LOCALTAX_CALC2\",  GETPOST(\"clt2\",'alpha'),'chaine',0,'',$conf->entity);\n\t}\n\n\tif ($action != 'updateedit' && ! $error)\n\t{\n\t\theader(\"Location: \".$_SERVER[\"PHP_SELF\"]);\n\t\texit;\n\t}\n}\n\nif ($action == 'addthumb')  // Regenerate thumbs\n{\n\tif (file_exists($conf->mycompany->dir_output.'/logos/'.$_GET[\"file\"]))\n\t{\n\t\t$isimage=image_format_supported($_GET[\"file\"]);\n\n\t\t// Create thumbs of logo\n\t\tif ($isimage > 0)\n\t\t{\n\t\t    // Create thumbs\n\t\t    //$object->addThumbs($newfile);    // We can't use addThumbs here yet because we need name of generated thumbs to add them into constants. TODO Check if need such constants. We should be able to retreive value with get...\n\n\t\t\t// Create small thumb. Used on logon for example\n\t\t\t$imgThumbSmall = vignette($conf->mycompany->dir_output.'/logos/'.$_GET[\"file\"], $maxwidthsmall, $maxheightsmall, '_small',$quality);\n\t\t\tif (image_format_supported($imgThumbSmall) >= 0 && preg_match('/([^\\\\/:]+)$/i',$imgThumbSmall,$reg))\n\t\t\t{\n\t\t\t\t$imgThumbSmall = $reg[1];   // Save only basename\n\t\t\t\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_LOGO_SMALL\",$imgThumbSmall,'chaine',0,'',$conf->entity);\n\t\t\t}\n\t\t\telse dol_syslog($imgThumbSmall);\n\n\t\t\t// Create mini thumbs. Used on menu or for setup page for example\n\t\t\t$imgThumbMini = vignette($conf->mycompany->dir_output.'/logos/'.$_GET[\"file\"], $maxwidthmini, $maxheightmini, '_mini',$quality);\n\t\t\tif (image_format_supported($imgThumbSmall) >= 0 && preg_match('/([^\\\\/:]+)$/i',$imgThumbMini,$reg))\n\t\t\t{\n\t\t\t\t$imgThumbMini = $reg[1];   // Save only basename\n\t\t\t\tdolibarr_set_const($db, \"MAIN_INFO_SOCIETE_LOGO_MINI\",$imgThumbMini,'chaine',0,'',$conf->entity);\n\t\t\t}\n\t\t\telse dol_syslog($imgThumbMini);\n\n\t\t\theader(\"Location: \".$_SERVER[\"PHP_SELF\"]);\n\t\t\texit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorBadImageFormat\"), null, 'errors');\n\t\t\tdol_syslog($langs->transnoentities(\"ErrorBadImageFormat\"),LOG_WARNING);\n\t\t}\n\t}\n\telse\n\t{\n\t\t$error++;\n\t\t$langs->load(\"errors\");\n\t\tsetEventMessages($langs->trans(\"ErrorFileDoesNotExists\",$_GET[\"file\"]), null, 'errors');\n\t\tdol_syslog($langs->transnoentities(\"ErrorFileDoesNotExists\",$_GET[\"file\"]),LOG_WARNING);\n\t}\n}\n\nif ($action == 'removelogo')\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t$logofile=$conf->mycompany->dir_output.'/logos/'.$mysoc->logo;\n\tdol_delete_file($logofile);\n\tdolibarr_del_const($db, \"MAIN_INFO_SOCIETE_LOGO\",$conf->entity);\n\t$mysoc->logo='';\n\n\t$logosmallfile=$conf->mycompany->dir_output.'/logos/thumbs/'.$mysoc->logo_small;\n\tdol_delete_file($logosmallfile);\n\tdolibarr_del_const($db, \"MAIN_INFO_SOCIETE_LOGO_SMALL\",$conf->entity);\n\t$mysoc->logo_small='';\n\n\t$logominifile=$conf->mycompany->dir_output.'/logos/thumbs/'.$mysoc->logo_mini;\n\tdol_delete_file($logominifile);\n\tdolibarr_del_const($db, \"MAIN_INFO_SOCIETE_LOGO_MINI\",$conf->entity);\n\t$mysoc->logo_mini='';\n}\n\n\n/*\n * View\n */\n\n$wikihelp='EN:First_setup|FR:Premiers_param\u00e9trages|ES:Primeras_configuraciones';\nllxHeader('',$langs->trans(\"Setup\"),$wikihelp);\n\n$form=new Form($db);\n$formother=new FormOther($db);\n$formcompany=new FormCompany($db);\n\n$countrynotdefined='<font class=\"error\">'.$langs->trans(\"ErrorSetACountryFirst\").' ('.$langs->trans(\"SeeAbove\").')</font>';\n\nprint load_fiche_titre($langs->trans(\"CompanyFoundation\"),'','title_setup');\n\nprint $langs->trans(\"CompanyFundationDesc\").\"<br>\\n\";\nprint \"<br>\\n\";\n\nif ($action == 'edit' || $action == 'updateedit')\n{\n\t/**\n\t * Edition des parametres\n\t */\n\tprint \"\\n\".'<script type=\"text/javascript\" language=\"javascript\">';\n\tprint '$(document).ready(function () {\n\t\t\t  $(\"#selectcountry_id\").change(function() {\n\t\t\t\tdocument.form_index.action.value=\"updateedit\";\n\t\t\t\tdocument.form_index.submit();\n\t\t\t  });\n\t\t  });';\n\tprint '</script>'.\"\\n\";\n\n\tprint '<form enctype=\"multipart/form-data\" method=\"POST\" action=\"'.$_SERVER[\"PHP_SELF\"].'\" name=\"form_index\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\tprint '<input type=\"hidden\" name=\"action\" value=\"update\">';\n\t$var=true;\n\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\"><th class=\"titlefield\">'.$langs->trans(\"CompanyInfo\").'</th><th>'.$langs->trans(\"Value\").'</th></tr>'.\"\\n\";\n\n\t// Name\n\n\tprint '<tr class=\"oddeven\"><td class=\"fieldrequired\"><label for=\"name\">'.$langs->trans(\"CompanyName\").'</label></td><td>';\n\tprint '<input name=\"nom\" id=\"name\" class=\"minwidth200\" value=\"'. ($conf->global->MAIN_INFO_SOCIETE_NOM?$conf->global->MAIN_INFO_SOCIETE_NOM: GETPOST(\"nom\",'nohtml')) . '\" autofocus=\"autofocus\"></td></tr>'.\"\\n\";\n\n\t// Addresse\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"address\">'.$langs->trans(\"CompanyAddress\").'</label></td><td>';\n\tprint '<textarea name=\"address\" id=\"address\" class=\"quatrevingtpercent\" rows=\"'.ROWS_3.'\">'. ($conf->global->MAIN_INFO_SOCIETE_ADDRESS?$conf->global->MAIN_INFO_SOCIETE_ADDRESS: GETPOST(\"address\",'nohtml')) . '</textarea></td></tr>'.\"\\n\";\n\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"zipcode\">'.$langs->trans(\"CompanyZip\").'</label></td><td>';\n\tprint '<input class=\"minwidth100\" name=\"zipcode\" id=\"zipcode\" value=\"'. ($conf->global->MAIN_INFO_SOCIETE_ZIP?$conf->global->MAIN_INFO_SOCIETE_ZIP: GETPOST(\"zipcode\",'alpha')) . '\"></td></tr>'.\"\\n\";\n\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"town\">'.$langs->trans(\"CompanyTown\").'</label></td><td>';\n\tprint '<input name=\"town\" class=\"minwidth100\" id=\"town\" value=\"'. ($conf->global->MAIN_INFO_SOCIETE_TOWN?$conf->global->MAIN_INFO_SOCIETE_TOWN: GETPOST(\"town\",'nohtml')) . '\"></td></tr>'.\"\\n\";\n\n\t// Country\n\n\tprint '<tr class=\"oddeven\"><td class=\"fieldrequired\"><label for=\"selectcountry_id\">'.$langs->trans(\"Country\").'</label></td><td class=\"maxwidthonsmartphone\">';\n\t//if (empty($country_selected)) $country_selected=substr($langs->defaultlang,-2);    // By default, country of localization\n\tprint $form->select_country($mysoc->country_id,'country_id');\n\tif ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\tprint '</td></tr>'.\"\\n\";\n\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"state_id\">'.$langs->trans(\"State\").'</label></td><td class=\"maxwidthonsmartphone\">';\n\t$formcompany->select_departement($conf->global->MAIN_INFO_SOCIETE_STATE,$mysoc->country_code,'state_id');\n\tprint '</td></tr>'.\"\\n\";\n\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"currency\">'.$langs->trans(\"CompanyCurrency\").'</label></td><td>';\n\tprint $form->selectCurrency($conf->currency,\"currency\");\n\tprint '</td></tr>'.\"\\n\";\n\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"phone\">'.$langs->trans(\"Phone\").'</label></td><td>';\n\tprint '<input name=\"tel\" id=\"phone\" value=\"'. $conf->global->MAIN_INFO_SOCIETE_TEL . '\"></td></tr>';\n\tprint '</td></tr>'.\"\\n\";\n\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"fax\">'.$langs->trans(\"Fax\").'</label></td><td>';\n\tprint '<input name=\"fax\" id=\"fax\" value=\"'. $conf->global->MAIN_INFO_SOCIETE_FAX . '\"></td></tr>';\n\tprint '</td></tr>'.\"\\n\";\n\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"email\">'.$langs->trans(\"EMail\").'</label></td><td>';\n\tprint '<input name=\"mail\" id=\"email\" class=\"minwidth200\" value=\"'. $conf->global->MAIN_INFO_SOCIETE_MAIL . '\"></td></tr>';\n\tprint '</td></tr>'.\"\\n\";\n\n\t// Web\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"web\">'.$langs->trans(\"Web\").'</label></td><td>';\n\tprint '<input name=\"web\" id=\"web\" class=\"minwidth300\" value=\"'. $conf->global->MAIN_INFO_SOCIETE_WEB . '\"></td></tr>';\n\tprint '</td></tr>'.\"\\n\";\n\n\t// Barcode\n\tif (! empty($conf->barcode->enabled)) {\n\n\t\tprint '<tr class=\"oddeven\"><td><label for=\"barcode\">'.$langs->trans(\"Gencod\").'</label></td><td>';\n\t\tprint '<input name=\"barcode\" id=\"barcode\" class=\"minwidth150\" value=\"'. $conf->global->MAIN_INFO_SOCIETE_GENCOD . '\"></td></tr>';\n\t\tprint '</td></tr>';\n\t}\n\n\t// Logo\n\n\tprint '<tr'.dol_bc($var,'hideonsmartphone').'><td><label for=\"logo\">'.$langs->trans(\"Logo\").' (png,jpg)</label></td><td>';\n\tprint '<table width=\"100%\" class=\"nobordernopadding\"><tr class=\"nocellnopadd\"><td valign=\"middle\" class=\"nocellnopadd\">';\n\tprint '<input type=\"file\" class=\"flat class=minwidth200\" name=\"logo\" id=\"logo\">';\n\tprint '</td><td class=\"nocellnopadd\" valign=\"middle\" align=\"right\">';\n\tif (! empty($mysoc->logo_mini)) {\n\t\tprint '<a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=removelogo\">'.img_delete($langs->trans(\"Delete\")).'</a>';\n\t\tif (file_exists($conf->mycompany->dir_output.'/logos/thumbs/'.$mysoc->logo_mini)) {\n\t\t\tprint ' &nbsp; ';\n\t\t\tprint '<img src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart=mycompany&amp;file='.urlencode('/thumbs/'.$mysoc->logo_mini).'\">';\n\t\t}\n\t} else {\n\t\tprint '<img height=\"30\" src=\"'.DOL_URL_ROOT.'/public/theme/common/nophoto.png\">';\n\t}\n\tprint '</td></tr></table>';\n\tprint '</td></tr>';\n\n\t// Note\n\n\tprint '<tr class=\"oddeven\"><td class=\"tdtop\"><label for=\"note\">'.$langs->trans(\"Note\").'</label></td><td>';\n\tprint '<textarea class=\"flat quatrevingtpercent\" name=\"note\" id=\"note\" rows=\"'.ROWS_5.'\">'.(GETPOST('note','none') ? GETPOST('note','none') : $conf->global->MAIN_INFO_SOCIETE_NOTE).'</textarea></td></tr>';\n\tprint '</td></tr>';\n\n\tprint '</table>';\n\n\tprint '<br>';\n\n\t// IDs of the company (country-specific)\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\"><td>'.$langs->trans(\"CompanyIds\").'</td><td>'.$langs->trans(\"Value\").'</td></tr>';\n\t$var=true;\n\n\t$langs->load(\"companies\");\n\n\t// Managing Director(s)\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"director\">'.$langs->trans(\"ManagingDirectors\").'</label></td><td>';\n\tprint '<input name=\"MAIN_INFO_SOCIETE_MANAGERS\" id=\"director\" class=\"minwidth200\" value=\"' . $conf->global->MAIN_INFO_SOCIETE_MANAGERS . '\"></td></tr>';\n\n\t// Capital\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"capital\">'.$langs->trans(\"Capital\").'</label></td><td>';\n\tprint '<input name=\"capital\" id=\"capital\" class=\"minwidth100\" value=\"' . $conf->global->MAIN_INFO_CAPITAL . '\"></td></tr>';\n\n\t// Juridical Status\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"forme_juridique_code\">'.$langs->trans(\"JuridicalStatus\").'</label></td><td>';\n\tif ($mysoc->country_code) {\n\t\tprint $formcompany->select_juridicalstatus($conf->global->MAIN_INFO_SOCIETE_FORME_JURIDIQUE, $mysoc->country_code, '', 'forme_juridique_code');\n\t} else {\n\t\tprint $countrynotdefined;\n\t}\n\tprint '</td></tr>';\n\n\t// ProfID1\n\tif ($langs->transcountry(\"ProfId1\",$mysoc->country_code) != '-')\n\t{\n\n\t\tprint '<tr class=\"oddeven\"><td><label for=\"profid1\">'.$langs->transcountry(\"ProfId1\",$mysoc->country_code).'</label></td><td>';\n\t\tif (! empty($mysoc->country_code))\n\t\t{\n\t\t\tprint '<input name=\"siren\" id=\"profid1\" class=\"minwidth200\" value=\"' . (! empty($conf->global->MAIN_INFO_SIREN) ? $conf->global->MAIN_INFO_SIREN : '') . '\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $countrynotdefined;\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId2\n\tif ($langs->transcountry(\"ProfId2\",$mysoc->country_code) != '-')\n\t{\n\n\t\tprint '<tr class=\"oddeven\"><td><label for=\"profid2\">'.$langs->transcountry(\"ProfId2\",$mysoc->country_code).'</label></td><td>';\n\t\tif (! empty($mysoc->country_code))\n\t\t{\n\t\t\tprint '<input name=\"siret\" id=\"profid2\" class=\"minwidth200\" value=\"' . (! empty($conf->global->MAIN_INFO_SIRET) ? $conf->global->MAIN_INFO_SIRET : '' ) . '\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $countrynotdefined;\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId3\n\tif ($langs->transcountry(\"ProfId3\",$mysoc->country_code) != '-')\n\t{\n\n\t\tprint '<tr class=\"oddeven\"><td><label for=\"profid3\">'.$langs->transcountry(\"ProfId3\",$mysoc->country_code).'</label></td><td>';\n\t\tif (! empty($mysoc->country_code))\n\t\t{\n\t\t\tprint '<input name=\"ape\" id=\"profid3\" class=\"minwidth200\" value=\"' . (! empty($conf->global->MAIN_INFO_APE) ? $conf->global->MAIN_INFO_APE : '') . '\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $countrynotdefined;\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId4\n\tif ($langs->transcountry(\"ProfId4\",$mysoc->country_code) != '-')\n\t{\n\n\t\tprint '<tr class=\"oddeven\"><td><label for=\"profid4\">'.$langs->transcountry(\"ProfId4\",$mysoc->country_code).'</label></td><td>';\n\t\tif (! empty($mysoc->country_code))\n\t\t{\n\t\t\tprint '<input name=\"rcs\" id=\"profid4\" class=\"minwidth200\" value=\"' . (! empty($conf->global->MAIN_INFO_RCS) ? $conf->global->MAIN_INFO_RCS : '') . '\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $countrynotdefined;\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId5\n\tif ($langs->transcountry(\"ProfId5\",$mysoc->country_code) != '-')\n\t{\n\n\t\tprint '<tr class=\"oddeven\"><td><label for=\"profid5\">'.$langs->transcountry(\"ProfId5\",$mysoc->country_code).'</label></td><td>';\n\t\tif (! empty($mysoc->country_code))\n\t\t{\n\t\t\tprint '<input name=\"MAIN_INFO_PROFID5\" id=\"profid5\" class=\"minwidth200\" value=\"' . (! empty($conf->global->MAIN_INFO_PROFID5) ? $conf->global->MAIN_INFO_PROFID5 : '') . '\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $countrynotdefined;\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId6\n\tif ($langs->transcountry(\"ProfId6\",$mysoc->country_code) != '-')\n\t{\n\n\t\tprint '<tr class=\"oddeven\"><td><label for=\"profid6\">'.$langs->transcountry(\"ProfId6\",$mysoc->country_code).'</label></td><td>';\n\t\tif (! empty($mysoc->country_code))\n\t\t{\n\t\t\tprint '<input name=\"MAIN_INFO_PROFID6\" id=\"profid6\" class=\"minwidth200\" value=\"' . (! empty($conf->global->MAIN_INFO_PROFID6) ? $conf->global->MAIN_INFO_PROFID6 : '') . '\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $countrynotdefined;\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// TVA Intra\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"intra_vat\">'.$langs->trans(\"VATIntra\").'</label></td><td>';\n\tprint '<input name=\"tva\" id=\"intra_vat\" class=\"minwidth200\" value=\"' . (! empty($conf->global->MAIN_INFO_TVAINTRA) ? $conf->global->MAIN_INFO_TVAINTRA : '') . '\">';\n\tprint '</td></tr>';\n\n\t// Object of the company\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"object\">'.$langs->trans(\"CompanyObject\").'</label></td><td>';\n\tprint '<textarea class=\"flat quatrevingtpercent\" name=\"object\" id=\"object\" rows=\"'.ROWS_5.'\">'.(! empty($conf->global->MAIN_INFO_SOCIETE_OBJECT) ? $conf->global->MAIN_INFO_SOCIETE_OBJECT : '').'</textarea></td></tr>';\n\tprint '</td></tr>';\n\n\tprint '</table>';\n\n\n\t// Fiscal year start\n\tprint '<br>';\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\">';\n\tprint '<td class=\"titlefield\">'.$langs->trans(\"FiscalYearInformation\").'</td><td>'.$langs->trans(\"Value\").'</td>';\n\tprint \"</tr>\\n\";\n\n\n\tprint '<tr class=\"oddeven\"><td><label for=\"fiscalmonthstart\">'.$langs->trans(\"FiscalMonthStart\").'</label></td><td>';\n\tprint $formother->select_month($conf->global->SOCIETE_FISCAL_MONTH_START,'fiscalmonthstart',0,1) . '</td></tr>';\n\n\tprint \"</table>\";\n\n\n\t// Fiscal options\n\tprint '<br>';\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\">';\n\tprint '<td class=\"titlefield\">'.$langs->trans(\"VATManagement\").'</td><td>'.$langs->trans(\"Description\").'</td>';\n\tprint '<td align=\"right\">&nbsp;</td>';\n\tprint \"</tr>\\n\";\n\n\n\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"140\\\"><label><input type=\\\"radio\\\" name=\\\"optiontva\\\" id=\\\"use_vat\\\" value=\\\"1\\\"\".(empty($conf->global->FACTURE_TVAOPTION)?\"\":\" checked\").\"> \".$langs->trans(\"VATIsUsed\").\"</label></td>\";\n\tprint '<td colspan=\"2\">';\n\tprint \"<table>\";\n\tprint \"<tr><td><label for=\\\"use_vat\\\">\".$langs->trans(\"VATIsUsedDesc\").\"</label></td></tr>\";\n\tprint \"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->trans(\"VATIsUsedExampleFR\").\"</i></td></tr>\\n\";\n\tprint \"</table>\";\n\tprint \"</td></tr>\\n\";\n\n\n\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"140\\\"><label><input type=\\\"radio\\\" name=\\\"optiontva\\\" id=\\\"no_vat\\\" value=\\\"0\\\"\".(empty($conf->global->FACTURE_TVAOPTION)?\" checked\":\"\").\"> \".$langs->trans(\"VATIsNotUsed\").\"</label></td>\";\n\tprint '<td colspan=\"2\">';\n\tprint \"<table>\";\n\tprint \"<tr><td><label for=\\\"no_vat\\\">\".$langs->trans(\"VATIsNotUsedDesc\").\"</label></td></tr>\";\n\tprint \"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->trans(\"VATIsNotUsedExampleFR\").\"</i></td></tr>\\n\";\n\tprint \"</table>\";\n\tprint \"</td></tr>\\n\";\n\n\tprint \"</table>\";\n\n\t/*\n\t *  Local Taxes\n\t */\n\tif ($mysoc->useLocalTax(1))\n\t{\n\t\t// Local Tax 1\n\t\tprint '<br>';\n\t\tprint '<table class=\"noborder\" width=\"100%\">';\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tprint '<td>'.$langs->transcountry(\"LocalTax1Management\",$mysoc->country_code).'</td><td>'.$langs->trans(\"Description\").'</td>';\n\t\tprint '<td align=\"right\">&nbsp;</td>';\n\t\tprint \"</tr>\\n\";\n\n\t\t// Note: When option is not set, it must not appears as set on on, because there is no default value for this option\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"140\\\"><input type=\\\"radio\\\" name=\\\"optionlocaltax1\\\" id=\\\"lt1\\\" value=\\\"localtax1on\\\"\".(($conf->global->FACTURE_LOCAL_TAX1_OPTION == '1' || $conf->global->FACTURE_LOCAL_TAX1_OPTION == \"localtax1on\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax1IsUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint '<table class=\"nobordernopadding\">';\n\t\tprint \"<tr><td><label for=\\\"lt1\\\">\".$langs->transcountry(\"LocalTax1IsUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax1IsUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax1IsUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax1IsUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tif(! isOnlyOneLocalTax(1))\n\t\t{\n\t\t\tprint '<tr><td align=\"left\"><label for=\"lt1\">'.$langs->trans(\"LTRate\").'</label>: ';\n\t\t\t$formcompany->select_localtax(1,$conf->global->MAIN_INFO_VALUE_LOCALTAX1, \"lt1\");\n\t\t    print '</td></tr>';\n\t\t}\n\n\t\t$opcions=array($langs->trans(\"CalcLocaltax1\").' '.$langs->trans(\"CalcLocaltax1Desc\"),$langs->trans(\"CalcLocaltax2\").' - '.$langs->trans(\"CalcLocaltax2Desc\"),$langs->trans(\"CalcLocaltax3\").' - '.$langs->trans(\"CalcLocaltax3Desc\"));\n\n\t\tprint '<tr><td align=\"left\"></label for=\"clt1\">'.$langs->trans(\"CalcLocaltax\").'</label>: ';\n\t\tprint $form->selectarray(\"clt1\", $opcions, $conf->global->MAIN_INFO_LOCALTAX_CALC1);\n\t\tprint '</td></tr>';\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\n\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"140\\\"><input type=\\\"radio\\\" name=\\\"optionlocaltax1\\\" id=\\\"nolt1\\\" value=\\\"localtax1off\\\"\".((empty($conf->global->FACTURE_LOCAL_TAX1_OPTION) || $conf->global->FACTURE_LOCAL_TAX1_OPTION == \"localtax1off\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax1IsNotUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint \"<table>\";\n\t\tprint \"<tr><td><label for=\\\"nolt1\\\">\".$langs->transcountry(\"LocalTax1IsNotUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax1IsNotUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax1IsNotUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax1IsNotUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\t\tprint \"</table>\";\n\t}\n\tif ($mysoc->useLocalTax(2))\n\t{\n\t\t// Local Tax 2\n\t\tprint '<br>';\n\t\tprint '<table class=\"noborder\" width=\"100%\">';\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tprint '<td>'.$langs->transcountry(\"LocalTax2Management\",$mysoc->country_code).'</td><td>'.$langs->trans(\"Description\").'</td>';\n\t\tprint '<td align=\"right\">&nbsp;</td>';\n\t\tprint \"</tr>\\n\";\n\n\n\t\t// Note: When option is not set, it must not appears as set on on, because there is no default value for this option\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"140\\\"><input type=\\\"radio\\\" name=\\\"optionlocaltax2\\\" id=\\\"lt2\\\" value=\\\"localtax2on\\\"\".(($conf->global->FACTURE_LOCAL_TAX2_OPTION == '1' || $conf->global->FACTURE_LOCAL_TAX2_OPTION == \"localtax2on\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax2IsUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint '<table class=\"nobordernopadding\">';\n\t\tprint \"<tr><td><label for=\\\"lt2\\\">\".$langs->transcountry(\"LocalTax2IsUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax2IsUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax2IsUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax2IsUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tif(! isOnlyOneLocalTax(2))\n\t\t{\n\t\t    print '<tr><td align=\"left\"><label for=\"lt2\">'.$langs->trans(\"LTRate\").'</label>: ';\n\t\t    $formcompany->select_localtax(2,$conf->global->MAIN_INFO_VALUE_LOCALTAX2, \"lt2\");\n\t\t\tprint '</td></tr>';\n\t\t}\n\t\tprint '<tr><td align=\"left\"><label for=\"clt2\">'.$langs->trans(\"CalcLocaltax\").'</label>: ';\n\t\tprint $form->selectarray(\"clt2\", $opcions, $conf->global->MAIN_INFO_LOCALTAX_CALC2);\n\t\tprint '</td></tr>';\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\n\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"140\\\"><input type=\\\"radio\\\" name=\\\"optionlocaltax2\\\" id=\\\"nolt2\\\" value=\\\"localtax2off\\\"\".((empty($conf->global->FACTURE_LOCAL_TAX2_OPTION) || $conf->global->FACTURE_LOCAL_TAX2_OPTION == \"localtax2off\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax2IsNotUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint \"<table>\";\n\t\tprint \"<tr><td><label for=\\\"nolt2\\\">\".$langs->transcountry(\"LocalTax2IsNotUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax2IsNotUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax2IsNotUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax2IsNotUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\t\tprint \"</table>\";\n\t}\n\n\n\tprint '<br><div class=\"center\">';\n\tprint '<input type=\"submit\" class=\"button\" name=\"save\" value=\"'.$langs->trans(\"Save\").'\">';\n\tprint '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';\n\tprint '<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\tprint '</div>';\n\tprint '<br>';\n\n\tprint '</form>';\n}\nelse\n{\n\t/*\n\t * Show parameters\n\t */\n\n\t// Actions buttons\n\t//print '<div class=\"tabsAction\">';\n\t//print '<a class=\"butAction\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=edit\">'.$langs->trans(\"Modify\").'</a>';\n\t//print '</div><br>';\n\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\"><td>'.$langs->trans(\"CompanyInfo\").'</td><td>'.$langs->trans(\"Value\").'</td></tr>';\n\n\n\tprint '<tr class=\"oddeven\"><td class=\"titlefield\">'.$langs->trans(\"CompanyName\").'</td><td>';\n\tif (! empty($conf->global->MAIN_INFO_SOCIETE_NOM)) print $conf->global->MAIN_INFO_SOCIETE_NOM;\n\telse print img_warning().' <font class=\"error\">'.$langs->trans(\"ErrorFieldRequired\",$langs->transnoentitiesnoconv(\"CompanyName\")).'</font>';\n\tprint '</td></tr>';\n\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"CompanyAddress\").'</td><td>' . nl2br(empty($conf->global->MAIN_INFO_SOCIETE_ADDRESS)?'':$conf->global->MAIN_INFO_SOCIETE_ADDRESS) . '</td></tr>';\n\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"CompanyZip\").'</td><td>' . (empty($conf->global->MAIN_INFO_SOCIETE_ZIP)?'':$conf->global->MAIN_INFO_SOCIETE_ZIP) . '</td></tr>';\n\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"CompanyTown\").'</td><td>' . (empty($conf->global->MAIN_INFO_SOCIETE_TOWN)?'':$conf->global->MAIN_INFO_SOCIETE_TOWN) . '</td></tr>';\n\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"CompanyCountry\").'</td><td>';\n\tif ($mysoc->country_code)\n\t{\n\t\t$img=picto_from_langcode($mysoc->country_code);\n\t\tprint $img?$img.' ':'';\n\t\tprint getCountry($mysoc->country_code,1);\n\t}\n\telse print img_warning().' <font class=\"error\">'.$langs->trans(\"ErrorFieldRequired\",$langs->transnoentitiesnoconv(\"CompanyCountry\")).'</font>';\n\tprint '</td></tr>';\n\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"State\").'</td><td>';\n\tif (! empty($conf->global->MAIN_INFO_SOCIETE_STATE)) print getState($conf->global->MAIN_INFO_SOCIETE_STATE);\n\telse print '&nbsp;';\n\tprint '</td></tr>';\n\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"CompanyCurrency\").'</td><td>';\n\tprint currency_name($conf->currency,1);\n\tprint ' ('.$conf->currency;\n\tprint ($conf->currency != $langs->getCurrencySymbol($conf->currency) ? ' - '.$langs->getCurrencySymbol($conf->currency) : '');\n\tprint ')';\n\tprint '</td></tr>';\n\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"Phone\").'</td><td>' . dol_print_phone($conf->global->MAIN_INFO_SOCIETE_TEL,$mysoc->country_code) . '</td></tr>';\n\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"Fax\").'</td><td>' . dol_print_phone($conf->global->MAIN_INFO_SOCIETE_FAX,$mysoc->country_code) . '</td></tr>';\n\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"Mail\").'</td><td>' . dol_print_email($conf->global->MAIN_INFO_SOCIETE_MAIL,0,0,0,80) . '</td></tr>';\n\n\t// Web\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"Web\").'</td><td>' . dol_print_url($conf->global->MAIN_INFO_SOCIETE_WEB,'_blank',80) . '</td></tr>';\n\n\t// Barcode\n\tif (! empty($conf->barcode->enabled))\n\t{\n\n\t\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"Gencod\").'</td><td>' . $conf->global->MAIN_INFO_SOCIETE_GENCOD . '</td></tr>';\n\t}\n\n\t// Logo\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"Logo\").'</td><td>';\n\n\t$tagtd='tagtd ';\n\tif ($conf->browser->layout == 'phone') $tagtd='';\n\tprint '<div class=\"tagtable centpercent\"><div class=\"tagtr inline-block centpercent valignmiddle\"><div class=\"'.$tagtd.'inline-block valignmiddle left\">';\n\tprint $mysoc->logo;\n\tprint '</div><div class=\"'.$tagtd.'inline-block valignmiddle left\">';\n\n\t// It offers the generation of the thumbnail if it does not exist\n\tif (!is_file($conf->mycompany->dir_output.'/logos/thumbs/'.$mysoc->logo_mini) && preg_match('/(\\.jpg|\\.jpeg|\\.png)$/i',$mysoc->logo))\n\t{\n\t\tprint '<a class=\"img_logo\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=addthumb&amp;file='.urlencode($mysoc->logo).'\">'.img_picto($langs->trans('GenerateThumb'),'refresh').'</a>&nbsp;&nbsp;';\n\t}\n\telse if ($mysoc->logo_mini && is_file($conf->mycompany->dir_output.'/logos/thumbs/'.$mysoc->logo_mini))\n\t{\n\t\tprint '<img class=\"img_logo\" src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart=mycompany&amp;file='.urlencode('/thumbs/'.$mysoc->logo_mini).'\">';\n\t}\n\telse\n\t{\n\t\tprint '<img class=\"img_logo\" src=\"'.DOL_URL_ROOT.'/public/theme/common/nophoto.png\">';\n\t}\n\tprint '</div></div></div>';\n\n\tprint '</td></tr>';\n\n\n\tprint '<tr class=\"oddeven\"><td class=\"tdtop\">'.$langs->trans(\"Note\").'</td><td>' . (! empty($conf->global->MAIN_INFO_SOCIETE_NOTE) ? nl2br($conf->global->MAIN_INFO_SOCIETE_NOTE) : '') . '</td></tr>';\n\n\tprint '</table>';\n\n\n\tprint '<br>';\n\n\n\t// IDs of the company (country-specific)\n\tprint '<form name=\"formsoc\" method=\"post\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\"><td class=\"titlefield\">'.$langs->trans(\"CompanyIds\").'</td><td>'.$langs->trans(\"Value\").'</td></tr>';\n\n\t// Managing Director(s)\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"ManagingDirectors\").'</td><td>';\n\tprint $conf->global->MAIN_INFO_SOCIETE_MANAGERS . '</td></tr>';\n\n\t// Capital\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"Capital\").'</td><td>';\n\tprint $conf->global->MAIN_INFO_CAPITAL . '</td></tr>';\n\n\t// Juridical Status\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"JuridicalStatus\").'</td><td>';\n\tprint getFormeJuridiqueLabel($conf->global->MAIN_INFO_SOCIETE_FORME_JURIDIQUE);\n\tprint '</td></tr>';\n\n\t// ProfId1\n\tif ($langs->transcountry(\"ProfId1\",$mysoc->country_code) != '-')\n\t{\n\n\t\tprint '<tr class=\"oddeven\"><td>'.$langs->transcountry(\"ProfId1\",$mysoc->country_code).'</td><td>';\n\t\tif (! empty($conf->global->MAIN_INFO_SIREN))\n\t\t{\n\t\t\tprint $conf->global->MAIN_INFO_SIREN;\n\t\t\t$s = $mysoc->id_prof_url(1,$mysoc);\n\t\t\tif ($s) print ' - '.$s;\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId2\n\tif ($langs->transcountry(\"ProfId2\",$mysoc->country_code) != '-')\n\t{\n\n\t\tprint '<tr class=\"oddeven\"><td>'.$langs->transcountry(\"ProfId2\",$mysoc->country_code).'</td><td>';\n\t\tif (! empty($conf->global->MAIN_INFO_SIRET))\n\t\t{\n\t\t\tprint $conf->global->MAIN_INFO_SIRET;\n\t\t\t$s = $mysoc->id_prof_url(2,$mysoc);\n\t\t\tif ($s) print ' - '.$s;\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId3\n\tif ($langs->transcountry(\"ProfId3\",$mysoc->country_code) != '-')\n\t{\n\n\t\tprint '<tr class=\"oddeven\"><td>'.$langs->transcountry(\"ProfId3\",$mysoc->country_code).'</td><td>';\n\t\tif (! empty($conf->global->MAIN_INFO_APE))\n\t\t{\n\t\t\tprint $conf->global->MAIN_INFO_APE;\n\t\t\t$s = $mysoc->id_prof_url(3,$mysoc);\n\t\t\tif ($s) print ' - '.$s;\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId4\n\tif ($langs->transcountry(\"ProfId4\",$mysoc->country_code) != '-')\n\t{\n\n\t\tprint '<tr class=\"oddeven\"><td>'.$langs->transcountry(\"ProfId4\",$mysoc->country_code).'</td><td>';\n\t\tif (! empty($conf->global->MAIN_INFO_RCS))\n\t\t{\n\t\t\tprint $conf->global->MAIN_INFO_RCS;\n\t\t\t$s = $mysoc->id_prof_url(4,$mysoc);\n\t\t\tif ($s) print ' - '.$s;\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId5\n\tif ($langs->transcountry(\"ProfId5\",$mysoc->country_code) != '-')\n\t{\n\n\t\tprint '<tr class=\"oddeven\"><td>'.$langs->transcountry(\"ProfId5\",$mysoc->country_code).'</td><td>';\n\t\tif (! empty($conf->global->MAIN_INFO_PROFID5))\n\t\t{\n\t\t\tprint $conf->global->MAIN_INFO_PROFID5;\n\t\t\t$s = $mysoc->id_prof_url(5,$mysoc);\n\t\t\tif ($s) print ' - '.$s;\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// ProfId6\n\tif ($langs->transcountry(\"ProfId6\",$mysoc->country_code) != '-')\n\t{\n\n\t\tprint '<tr class=\"oddeven\"><td>'.$langs->transcountry(\"ProfId6\",$mysoc->country_code).'</td><td>';\n\t\tif (! empty($conf->global->MAIN_INFO_PROFID6))\n\t\t{\n\t\t\tprint $conf->global->MAIN_INFO_PROFID6;\n\t\t\t$s = $mysoc->id_prof_url(6,$mysoc);\n\t\t\tif ($s) print ' - '.$s;\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\t}\n\n\t// VAT\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"VATIntra\").'</td>';\n\tprint '<td>';\n\tif (! empty($conf->global->MAIN_INFO_TVAINTRA))\n\t{\n\t\t$s='';\n\t\t$s.=$conf->global->MAIN_INFO_TVAINTRA;\n\t\t$s.='<input type=\"hidden\" name=\"tva_intra\" size=\"12\" maxlength=\"20\" value=\"'.$conf->global->MAIN_INFO_TVAINTRA.'\">';\n\t\tif (empty($conf->global->MAIN_DISABLEVATCHECK) && $mysoc->isInEEC())\n\t\t{\n\t\t\t$s.=' - ';\n\t\t\tif (! empty($conf->use_javascript_ajax))\n\t\t\t{\n\t\t\t\tprint \"\\n\";\n\t\t\t\tprint '<script language=\"JavaScript\" type=\"text/javascript\">';\n\t\t\t\tprint \"function CheckVAT(a) {\\n\";\n\t\t\t\tprint \"newpopup('\".DOL_URL_ROOT.\"/societe/checkvat/checkVatPopup.php?vatNumber='+a,'\".dol_escape_js($langs->trans(\"VATIntraCheckableOnEUSite\")).\"',500,285);\\n\";\n\t\t\t\tprint \"}\\n\";\n\t\t\t\tprint '</script>';\n\t\t\t\tprint \"\\n\";\n\t\t\t\t$s.='<a href=\"#\" onClick=\"javascript: CheckVAT(document.formsoc.tva_intra.value);\">'.$langs->trans(\"VATIntraCheck\").'</a>';\n\t\t\t\t$s = $form->textwithpicto($s,$langs->trans(\"VATIntraCheckDesc\",$langs->trans(\"VATIntraCheck\")),1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$s.='<a href=\"'.$langs->transcountry(\"VATIntraCheckURL\",$soc->id_country).'\" target=\"_blank\">'.img_picto($langs->trans(\"VATIntraCheckableOnEUSite\"),'help').'</a>';\n\t\t\t}\n\t\t}\n\t\tprint $s;\n\t}\n\telse\n\t{\n\t\tprint '&nbsp;';\n\t}\n\tprint '</td>';\n\tprint '</tr>';\n\n\n\tprint '<tr class=\"oddeven\"><td class=\"tdtop\">'.$langs->trans(\"CompanyObject\").'</td><td>' . (! empty($conf->global->MAIN_INFO_SOCIETE_OBJECT) ? nl2br($conf->global->MAIN_INFO_SOCIETE_OBJECT) : '') . '</td></tr>';\n\n\tprint '</table>';\n\tprint '</form>';\n\n\t/*\n\t *  fiscal year beginning\n\t */\n\tprint '<br>';\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\">';\n\tprint '<td class=\"titlefield\">'.$langs->trans(\"FiscalYearInformation\").'</td><td>'.$langs->trans(\"Value\").'</td>';\n\tprint \"</tr>\\n\";\n\n\n\tprint '<tr class=\"oddeven\"><td>'.$langs->trans(\"FiscalMonthStart\").'</td><td>';\n\t$monthstart=(! empty($conf->global->SOCIETE_FISCAL_MONTH_START)) ? $conf->global->SOCIETE_FISCAL_MONTH_START : 1;\n\tprint dol_print_date(dol_mktime(12,0,0,$monthstart,1,2000,1),'%B','gm') . '</td></tr>';\n\n\tprint \"</table>\";\n\n\t/*\n\t *  tax options\n\t */\n\tprint '<br>';\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\">';\n\tprint '<td>'.$langs->trans(\"VATManagement\").'</td><td>'.$langs->trans(\"Description\").'</td>';\n\tprint '<td align=\"right\">&nbsp;</td>';\n\tprint \"</tr>\\n\";\n\n\n\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"160\\\"><input class=\\\"oddeven\\\" type=\\\"radio\\\" name=\\\"optiontva\\\" id=\\\"use_vat\\\" disabled value=\\\"1\\\"\".(empty($conf->global->FACTURE_TVAOPTION)?\"\":\" checked\").\"> \".$langs->trans(\"VATIsUsed\").\"</td>\";\n\tprint '<td colspan=\"2\">';\n\tprint \"<table>\";\n\tprint \"<tr><td><label for=\\\"use_vat\\\">\".$langs->trans(\"VATIsUsedDesc\").\"</label></td></tr>\";\n\tprint \"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->trans(\"VATIsUsedExampleFR\").\"</i></td></tr>\\n\";\n\tprint \"</table>\";\n\tprint \"</td></tr>\\n\";\n\n\n\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"160\\\"><input class=\\\"oddeven\\\" type=\\\"radio\\\" name=\\\"optiontva\\\" id=\\\"no_vat\\\" disabled value=\\\"0\\\"\".(empty($conf->global->FACTURE_TVAOPTION)?\" checked\":\"\").\"> \".$langs->trans(\"VATIsNotUsed\").\"</td>\";\n\tprint '<td colspan=\"2\">';\n\tprint \"<table>\";\n\tprint \"<tr><td><label=\\\"no_vat\\\">\".$langs->trans(\"VATIsNotUsedDesc\").\"</label></td></tr>\";\n\tprint \"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->trans(\"VATIsNotUsedExampleFR\").\"</i></td></tr>\\n\";\n\tprint \"</table>\";\n\tprint \"</td></tr>\\n\";\n\n\tprint \"</table>\";\n\n\n\t/*\n\t *  Local Taxes\n\t */\n\tif ($mysoc->useLocalTax(1))    // True if we found at least on vat with a setup adding a localtax 1\n\t{\n\t\t// Local Tax 1\n\t\tprint '<br>';\n\t\tprint '<table class=\"noborder\" width=\"100%\">';\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tprint '<td>'.$langs->transcountry(\"LocalTax1Management\",$mysoc->country_code).'</td><td>'.$langs->trans(\"Description\").'</td>';\n\t\tprint '<td align=\"right\">&nbsp;</td>';\n\t\tprint \"</tr>\\n\";\n\n\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"160\\\"><input class=\\\"oddeven\\\" type=\\\"radio\\\" name=\\\"optionlocaltax1\\\" id=\\\"lt1\\\" disabled value=\\\"localtax1on\\\"\".(($conf->global->FACTURE_LOCAL_TAX1_OPTION == '1' || $conf->global->FACTURE_LOCAL_TAX1_OPTION == \"localtax1on\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax1IsUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint \"<table>\";\n\t\tprint \"<tr><td></label for=\\\"lt1\\\">\".$langs->transcountry(\"LocalTax1IsUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax1IsUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax1IsUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax1IsUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tif($conf->global->MAIN_INFO_VALUE_LOCALTAX1!=0)\n\t\t{\n\t\t\tprint '<tr><td>'.$langs->trans(\"LTRate\").': '. $conf->global->MAIN_INFO_VALUE_LOCALTAX1 .'</td></tr>';\n\t\t}\n\t\tprint '<tr><td align=\"left\">'.$langs->trans(\"CalcLocaltax\").': ';\n\t\tif($conf->global->MAIN_INFO_LOCALTAX_CALC1==0)\n\t\t{\n\t\t\tprint $langs->trans(\"CalcLocaltax1\").' - '.$langs->trans(\"CalcLocaltax1Desc\");\n\t\t}\n\t\telse if($conf->global->MAIN_INFO_LOCALTAX_CALC1==1)\n\t\t{\n\t\t\tprint $langs->trans(\"CalcLocaltax2\").' - '.$langs->trans(\"CalcLocaltax2Desc\");\n\t\t}\n\t\telse if($conf->global->MAIN_INFO_LOCALTAX_CALC1==2){\n\t\t\tprint $langs->trans(\"CalcLocaltax3\").' - '.$langs->trans(\"CalcLocaltax3Desc\");\n\t\t}\n\n\t\tprint '</td></tr>';\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\n\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"160\\\"><input class=\\\"oddeven\\\" type=\\\"radio\\\" name=\\\"optionlocaltax1\\\" id=\\\"nolt1\\\" disabled value=\\\"localtax1off\\\"\".((empty($conf->global->FACTURE_LOCAL_TAX1_OPTION) || $conf->global->FACTURE_LOCAL_TAX1_OPTION == \"localtax1off\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax1IsNotUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint \"<table>\";\n\t\tprint \"<tr><td><label for=\\\"no_lt1\\\">\".$langs->transcountry(\"LocalTax1IsNotUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax1IsNotUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax1IsNotUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax1IsNotUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\n\t\tprint \"</table>\";\n\t}\n\tif ($mysoc->useLocalTax(2))    // True if we found at least on vat with a setup adding a localtax 1\n\t{\n\t\t// Local Tax 2\n\t\tprint '<br>';\n\t\tprint '<table class=\"noborder\" width=\"100%\">';\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tprint '<td>'.$langs->transcountry(\"LocalTax2Management\",$mysoc->country_code).'</td><td>'.$langs->trans(\"Description\").'</td>';\n\t\tprint '<td align=\"right\">&nbsp;</td>';\n\t\tprint \"</tr>\\n\";\n\n\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"160\\\"><input class=\\\"oddeven\\\" type=\\\"radio\\\" name=\\\"optionlocaltax2\\\" id=\\\"lt2\\\" disabled value=\\\"localtax2on\\\"\".(($conf->global->FACTURE_LOCAL_TAX2_OPTION == '1' || $conf->global->FACTURE_LOCAL_TAX2_OPTION == \"localtax2on\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax2IsUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint \"<table>\";\n\t\tprint \"<tr><td><label for=\\\"lt2\\\">\".$langs->transcountry(\"LocalTax2IsUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax2IsUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax2IsUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax2IsUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tif($conf->global->MAIN_INFO_VALUE_LOCALTAX2!=0)\n\t\t{\n\t\t\tprint '<tr><td>'.$langs->trans(\"LTRate\").': '. $conf->global->MAIN_INFO_VALUE_LOCALTAX2 .'</td></tr>';\n\t\t}\n\t\tprint '<tr><td align=\"left\">'.$langs->trans(\"CalcLocaltax\").': ';\n\t\tif($conf->global->MAIN_INFO_LOCALTAX_CALC2==0)\n\t\t{\n\t\t\tprint $langs->trans(\"CalcLocaltax1\").' - '.$langs->trans(\"CalcLocaltax1Desc\");\n\t\t}\n\t\telse if($conf->global->MAIN_INFO_LOCALTAX_CALC2==1)\n\t\t{\n\t\t\tprint $langs->trans(\"CalcLocaltax2\").' - '.$langs->trans(\"CalcLocaltax2Desc\");\n\t\t}\n\t\telse if($conf->global->MAIN_INFO_LOCALTAX_CALC2==2)\n\t\t{\n\t\t\tprint $langs->trans(\"CalcLocaltax3\").' - '.$langs->trans(\"CalcLocaltax3Desc\");\n\t\t}\n\n\t\tprint '</td></tr>';\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\n\n\t\tprint \"<tr class=\\\"oddeven\\\"><td width=\\\"160\\\"><input class=\\\"oddeven\\\" type=\\\"radio\\\" name=\\\"optionlocaltax2\\\" id=\\\"nolt2\\\" disabled value=\\\"localtax2off\\\"\".((empty($conf->global->FACTURE_LOCAL_TAX2_OPTION) || $conf->global->FACTURE_LOCAL_TAX2_OPTION == \"localtax2off\")?\" checked\":\"\").\"> \".$langs->transcountry(\"LocalTax2IsNotUsed\",$mysoc->country_code).\"</td>\";\n\t\tprint '<td colspan=\"2\">';\n\t\tprint \"<table>\";\n\t\tprint \"<tr><td><label for=\\\"nolt2\\\">\".$langs->transcountry(\"LocalTax2IsNotUsedDesc\",$mysoc->country_code).\"</label></td></tr>\";\n\t\t$example=$langs->transcountry(\"LocalTax2IsNotUsedExample\",$mysoc->country_code);\n\t\tprint ($example!=\"LocalTax2IsNotUsedExample\"?\"<tr><td><i>\".$langs->trans(\"Example\").': '.$langs->transcountry(\"LocalTax2IsNotUsedExample\",$mysoc->country_code).\"</i></td></tr>\\n\":\"\");\n\t\tprint \"</table>\";\n\t\tprint \"</td></tr>\\n\";\n\n\t\tprint \"</table>\";\n\t}\n\n\n\t// Actions buttons\n\tprint '<div class=\"tabsAction\">';\n\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=edit\">'.$langs->trans(\"Modify\").'</a></div>';\n\tprint '</div>';\n\n\tprint '<br>';\n}\n\n\nllxFooter();\n\n$db->close();\n", "<?php\n/* Copyright (C) 2007      Patrick Raguin       <patrick.raguin@gmail.com>\n * Copyright (C) 2007-2012 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2009-2011 Regis Houssin        <regis.houssin@capnetworks.com>\n * Copyright (C) 2016      Meziane Sof          <virtualsof@yahoo.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\t\\file       htdocs/admin/menus/edit.php\n *\t\t\\ingroup    core\n *\t\t\\brief      Tool to edit menus\n */\n\nrequire '../../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/menubase.class.php';\n\n\n$langs->load(\"admin\");\n$langs->load('other');\n\nif (! $user->admin) accessforbidden();\n\n$dirstandard = array();\n$dirsmartphone = array();\n$dirmenus=array_merge(array(\"/core/menus/\"),(array) $conf->modules_parts['menus']);\nforeach($dirmenus as $dirmenu)\n{\n    $dirstandard[]=$dirmenu.'standard';\n    $dirsmartphone[]=$dirmenu.'smartphone';\n}\n\n$action=GETPOST('action','aZ09');\n\n$menu_handler_top=$conf->global->MAIN_MENU_STANDARD;\n$menu_handler_smartphone=$conf->global->MAIN_MENU_SMARTPHONE;\n$menu_handler_top=preg_replace('/_backoffice.php/i','',$menu_handler_top);\n$menu_handler_top=preg_replace('/_frontoffice.php/i','',$menu_handler_top);\n$menu_handler_smartphone=preg_replace('/_backoffice.php/i','',$menu_handler_smartphone);\n$menu_handler_smartphone=preg_replace('/_frontoffice.php/i','',$menu_handler_smartphone);\n\n$menu_handler=$menu_handler_top;\n\nif (GETPOST(\"handler_origine\")) $menu_handler=GETPOST(\"handler_origine\");\nif (GETPOST(\"menu_handler\"))    $menu_handler=GETPOST(\"menu_handler\");\n\n\n\n/*\n * Actions\n */\n\nif ($action == 'update')\n{\n    if (! $_POST['cancel'])\n    {\n        $leftmenu=''; $mainmenu='';\n        if (! empty($_POST['menuIdParent']) && ! is_numeric($_POST['menuIdParent']))\n        {\n            $tmp=explode('&',$_POST['menuIdParent']);\n            foreach($tmp as $s)\n            {\n                if (preg_match('/fk_mainmenu=/',$s))\n                {\n                    $mainmenu=preg_replace('/fk_mainmenu=/','',$s);\n                }\n                if (preg_match('/fk_leftmenu=/',$s))\n                {\n                    $leftmenu=preg_replace('/fk_leftmenu=/','',$s);\n                }\n            }\n        }\n\n        $menu = new Menubase($db);\n        $result=$menu->fetch(GETPOST('menuId', 'int'));\n        if ($result > 0)\n        {\n            $menu->titre=GETPOST('titre', 'alpha');\n            $menu->leftmenu=GETPOST('leftmenu', 'alpha');\n            $menu->url=GETPOST('url','alpha');\n            $menu->langs=GETPOST('langs','alpha');\n            $menu->position=GETPOST('position','int');\n            $menu->enabled=GETPOST('enabled','alpha');\n            $menu->perms=GETPOST('perms','alpha');\n            $menu->target=GETPOST('target','alpha');\n            $menu->user=GETPOST('user','alpha');\n            if (is_numeric(GETPOST('menuIdParent','alpha')))\n            {\n            \t$menu->fk_menu=GETPOST('menuIdParent','alpha');\n            }\n            else\n            {\n    \t       \tif (GETPOST('type','alpha') == 'top') $menu->fk_menu=0;\n    \t       \telse $menu->fk_menu=-1;\n            \t$menu->fk_mainmenu=$mainmenu;\n            \t$menu->fk_leftmenu=$leftmenu;\n            }\n\n            $result=$menu->update($user);\n            if ($result > 0)\n            {\n\t            setEventMessages($langs->trans(\"RecordModifiedSuccessfully\"), null, 'mesgs');\n            }\n            else\n            {\n\t            setEventMessages($menu->error, $menu->errors, 'errors');\n            }\n        }\n        else\n        {\n\t        setEventMessages($menu->error, $menu->errors, 'errors');\n        }\n        $action = \"edit\";\n    }\n    else\n    {\n        header(\"Location: \".DOL_URL_ROOT.\"/admin/menus/index.php?menu_handler=\".$menu_handler);\n        exit;\n    }\n\n    if ($_GET['return'])\n    {\n        header(\"Location: \".DOL_URL_ROOT.\"/admin/menus/index.php?menu_handler=\".$menu_handler);\n        exit;\n    }\n}\n\nif ($action == 'add')\n{\n    if ($_POST['cancel'])\n    {\n        header(\"Location: \".DOL_URL_ROOT.\"/admin/menus/index.php?menu_handler=\".$menu_handler);\n        exit;\n    }\n\n    $leftmenu=''; $mainmenu='';\n    if (GETPOST('menuId','int') && ! is_numeric(GETPOST('menuId','int')))\n    {\n\t    $tmp=explode('&',GETPOST('menuId','int'));\n\t    foreach($tmp as $s)\n\t    {\n\t    \tif (preg_match('/fk_mainmenu=/',$s))\n\t    \t{\n\t\t\t\t$mainmenu=preg_replace('/fk_mainmenu=/','',$s);\n\t    \t}\n\t    \tif (preg_match('/fk_leftmenu=/',$s))\n\t    \t{\n\t    \t\t$leftmenu=preg_replace('/fk_leftmenu=/','',$s);\n\t    \t}\n\t    }\n    }\n\n    $langs->load(\"errors\");\n\n    $error=0;\n    if (! $error && ! $_POST['menu_handler'])\n    {\n\t    setEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"MenuHandler\")), null, 'errors');\n        $action = 'create';\n        $error++;\n    }\n    if (! $error && ! $_POST['type'])\n    {\n\t    setEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Type\")), null, 'errors');\n        $action = 'create';\n        $error++;\n    }\n    if (! $error && ! $_POST['url'])\n    {\n\t    setEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->trans(\"URL\")), null, 'errors');\n        $action = 'create';\n        $error++;\n    }\n    if (! $error && ! $_POST['titre'])\n    {\n\t    setEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->trans(\"Title\")), null, 'errors');\n        $action = 'create';\n        $error++;\n    }\n    if (! $error && $_POST['menuId'] && $_POST['type'] == 'top')\n    {\n\t    setEventMessages($langs->trans(\"ErrorTopMenuMustHaveAParentWithId0\"), null, 'errors');\n        $action = 'create';\n        $error++;\n    }\n    if (! $error && ! $_POST['menuId'] && $_POST['type'] == 'left')\n    {\n\t    setEventMessages($langs->trans(\"ErrorLeftMenuMustHaveAParentId\"), null, 'errors');\n        $action = 'create';\n        $error++;\n    }\n\n    if (! $error)\n    {\n        $menu = new Menubase($db);\n        $menu->menu_handler=preg_replace('/_menu$/','',GETPOST('menu_handler','aZ09'));\n        $menu->type=GETPOST('type','alpha');\n        $menu->titre=GETPOST('titre','alpha');\n        $menu->url=GETPOST('url','alpha');\n        $menu->langs=GETPOST('langs','alpha');\n        $menu->position=GETPOST('position','int');\n        $menu->enabled=GETPOST('enabled','alpha');\n        $menu->perms=GETPOST('perms','alpha');\n        $menu->target=GETPOST('target','alpha');\n        $menu->user=GETPOST('user','alpha');\n        if (is_numeric(GETPOST('menuId','int')))\n        {\n        \t$menu->fk_menu=GETPOST('menuId','int');\n        }\n        else\n       {\n\t       \tif (GETPOST('type','alpha') == 'top') $menu->fk_menu=0;\n\t       \telse $menu->fk_menu=-1;\n        \t$menu->fk_mainmenu=$mainmenu;\n        \t$menu->fk_leftmenu=$leftmenu;\n       }\n\n        $result=$menu->create($user);\n        if ($result > 0)\n        {\n            header(\"Location: \".DOL_URL_ROOT.\"/admin/menus/index.php?menu_handler=\".GETPOST('menu_handler','aZ09'));\n            exit;\n        }\n        else\n        {\n            $action = 'create';\n\t        setEventMessages($menu->error, $menu->errors, 'errors');\n        }\n    }\n}\n\n// delete\nif ($action == 'confirm_delete' && $_POST[\"confirm\"] == 'yes')\n{\n    $this->db->begin();\n\n    $sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"menu WHERE rowid = \".GETPOST('menuId', 'int');\n    $result=$db->query($sql);\n\n    if ($result == 0)\n    {\n        $this->db->commit();\n\n        llxHeader();\n\t    setEventMessages($langs->trans(\"MenuDeleted\"), null, 'mesgs');\n        llxFooter();\n        exit ;\n    }\n    else\n    {\n        $this->db->rollback();\n\n        $reload = 0;\n        $_GET[\"action\"]='';\n    }\n}\n\n\n\n/*\n * View\n */\n\n$form=new Form($db);\n$formadmin=new FormAdmin($db);\n\nllxHeader('',$langs->trans(\"Menu\"));\n\n\nif ($action == 'create')\n{\n    print '<script type=\"text/javascript\" language=\"javascript\">\n    jQuery(document).ready(function() {\n    \tfunction init_topleft()\n    \t{\n    \t\tif (jQuery(\"#topleft\").val() == \\'top\\')\n    \t\t{\n\t\t\t\tjQuery(\"#menuId\").prop(\"disabled\", true);\n\t    \t\tjQuery(\"#menuId\").val(\\'\\');\n\t\t\t}\n    \t\telse\n    \t\t{\n\t\t\t\tjQuery(\"#menuId\").removeAttr(\"disabled\");\n    \t\t}\n    \t}\n    \tinit_topleft();\n    \tjQuery(\"#topleft\").click(function() {\n    \t\tinit_topleft();\n    \t});\n    });\n    </script>';\n\n    print load_fiche_titre($langs->trans(\"NewMenu\"),'','title_setup');\n\n    print '<form action=\"./edit.php?action=add&menuId='.GETPOST('menuId', 'int').'\" method=\"post\" name=\"formmenucreate\">';\n    print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\n    dol_fiche_head();\n\n    print '<table class=\"border\" width=\"100%\">';\n\n    // Id\n    $parent_rowid = GETPOST('menuId', 'int');\n    if (GETPOST('menuId', 'int'))\n    {\n        $sql = \"SELECT m.rowid, m.mainmenu, m.leftmenu, m.level, m.langs FROM \".MAIN_DB_PREFIX.\"menu as m WHERE m.rowid = \".GETPOST('menuId', 'int');\n        $res  = $db->query($sql);\n        if ($res)\n        {\n\n            while ($menu = $db->fetch_array($res))\n            {\n                $parent_rowid = $menu['rowid'];\n                $parent_mainmenu = $menu['mainmenu'];\n                $parent_leftmenu = $menu['leftmenu'];\n                $parent_langs = $menu['langs'];\n                $parent_level = $menu['level'];\n            }\n        }\n    }\n\n    // Handler\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('MenuHandler').'</td>';\n    print '<td>';\n    $formadmin->select_menu_families($menu_handler.(preg_match('/_menu/',$menu_handler)?'':'_menu'),'menu_handler',array_merge($dirstandard,$dirsmartphone));\n    print '</td>';\n    print '<td>'.$langs->trans('DetailMenuHandler').'</td></tr>';\n\n    //User\n    print '<tr><td class=\"nowrap fieldrequired\">'.$langs->trans('MenuForUsers').'</td>';\n    print '<td><select class=\"flat\" name=\"user\">';\n    print '<option value=\"2\" selected>'.$langs->trans(\"AllMenus\").'</option>';\n    print '<option value=\"0\">'.$langs->trans('Internal').'</option>';\n    print '<option value=\"1\">'.$langs->trans('External').'</option>';\n    print '</select></td>';\n    print '<td>'.$langs->trans('DetailUser').'</td></tr>';\n\n    // Type\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('Type').'</td><td>';\n    if ($parent_rowid)\n    {\n        print $langs->trans('Left');\n        print '<input type=\"hidden\" name=\"type\" value=\"left\">';\n    }\n    else\n    {\n        print '<select name=\"type\" class=\"flat\" id=\"topleft\">';\n        print '<option value=\"\">&nbsp;</option>';\n        print '<option value=\"top\"'.($_POST[\"type\"] && $_POST[\"type\"]=='top'?' selected':'').'>'.$langs->trans('Top').'</option>';\n        print '<option value=\"left\"'.($_POST[\"type\"] && $_POST[\"type\"]=='left'?' selected':'').'>'.$langs->trans('Left').'</option>';\n        print '</select>';\n    }\n    //\tprint '<input type=\"text\" size=\"50\" name=\"type\" value=\"'.$type.'\">';\n    print '</td><td>'.$langs->trans('DetailType').'</td></tr>';\n\n    // MenuId Parent\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('MenuIdParent').'</td>';\n    if ($parent_rowid)\n    {\n        print '<td>'.$parent_rowid.'<input type=\"hidden\" name=\"menuId\" value=\"'.$parent_rowid.'\"></td>';\n    }\n    else\n    {\n        print '<td><input type=\"text\" size=\"48\" id=\"menuId\" name=\"menuId\" value=\"'.(GETPOST(\"menuId\", 'int')?GETPOST(\"menuId\", 'int'):'').'\"></td>';\n    }\n    print '<td>'.$langs->trans('DetailMenuIdParent');\n    print ', '.$langs->trans(\"Example\").': fk_mainmenu=abc&fk_leftmenu=def';\n    print '</td></tr>';\n\n    // Title\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('Title').'</td><td><input type=\"text\" size=\"30\" name=\"titre\" value=\"'.dol_escape_htmltag(GETPOST(\"titre\",'alpha')).'\"></td><td>'.$langs->trans('DetailTitre').'</td></tr>';\n\n    // URL\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('URL').'</td><td><input type=\"text\" size=\"60\" name=\"url\" value=\"'.GETPOST(\"url\",'alpha').'\"></td><td>'.$langs->trans('DetailUrl').'</td></tr>';\n\n    // Langs\n    print '<tr><td>'.$langs->trans('LangFile').'</td><td><input type=\"text\" size=\"30\" name=\"langs\" value=\"'.$parent_langs.'\"></td><td>'.$langs->trans('DetailLangs').'</td></tr>';\n\n    // Position\n    print '<tr><td>'.$langs->trans('Position').'</td><td><input type=\"text\" size=\"5\" name=\"position\" value=\"'.dol_escape_htmltag(isset($_POST[\"position\"])?$_POST[\"position\"]:100).'\"></td><td>'.$langs->trans('DetailPosition').'</td></tr>';\n\n    // Target\n    print '<tr><td>'.$langs->trans('Target').'</td><td><select class=\"flat\" name=\"target\">';\n    print '<option value=\"\"'.($menu->target==\"\"?' selected':'').'>&nbsp;</option>';\n    print '<option value=\"_blank\"'.($menu->target==\"_blank\"?' selected':'').'>'.$langs->trans('_blank').'</option>';\n    print '</select></td></td><td>'.$langs->trans('DetailTarget').'</td></tr>';\n\n    // Enabled\n    print '<tr><td>'.$langs->trans('Enabled').'</td><td><input type=\"text\" size=\"60\" name=\"enabled\" value=\"'.GETPOST(\"enabled\",'alpha').'\"></td><td>'.$langs->trans('DetailEnabled').'</td></tr>';\n\n    // Perms\n    print '<tr><td>'.$langs->trans('Rights').'</td><td><input type=\"text\" size=\"60\" name=\"perms\" value=\"'.GETPOST('perms','alpha').'\"></td><td>'.$langs->trans('DetailRight').'</td></tr>';\n\n    print '</table>';\n\n    dol_fiche_end();\n\n    // Boutons\n    print '<div class=\"center\">';\n\tprint '<input type=\"submit\" class=\"button\" name=\"save\" value=\"'.$langs->trans(\"Save\").'\">';\n    print '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';\n    print '<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\tprint '</div>';\n\n    print '</form>';\n}\nelseif ($action == 'edit')\n{\n    print load_fiche_titre($langs->trans(\"ModifMenu\"),'','title_setup');\n    print '<br>';\n\n    print '<form action=\"./edit.php?action=update\" method=\"POST\" name=\"formmenuedit\">';\n    print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    print '<input type=\"hidden\" name=\"handler_origine\" value=\"'.$menu_handler.'\">';\n    print '<input type=\"hidden\" name=\"menuId\" value=\"'.GETPOST('menuId', 'int').'\">';\n\n    dol_fiche_head();\n\n    print '<table class=\"border\" width=\"100%\">';\n\n    $menu = new Menubase($db);\n    $result=$menu->fetch(GETPOST('menuId', 'int'));\n    //var_dump($menu);\n\n    // Id\n    print '<tr><td>'.$langs->trans('Id').'</td><td>'.$menu->id.'</td><td>'.$langs->trans('DetailId').'</td></tr>';\n\n    // Module\n    print '<tr><td>'.$langs->trans('MenuModule').'</td><td>'.$menu->module.'</td><td>'.$langs->trans('DetailMenuModule').'</td></tr>';\n\n    // Handler\n    if ($menu->menu_handler == 'all') $handler = $langs->trans('AllMenus');\n    else $handler = $menu->menu_handler;\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('MenuHandler').'</td><td>'.$handler.'</td><td>'.$langs->trans('DetailMenuHandler').'</td></tr>';\n\n    // User\n    print '<tr><td class=\"nowrap fieldrequired\">'.$langs->trans('MenuForUsers').'</td><td><select class=\"flat\" name=\"user\">';\n    print '<option value=\"2\"'.($menu->user==2?' selected':'').'>'.$langs->trans(\"AllMenus\").'</option>';\n    print '<option value=\"0\"'.($menu->user==0?' selected':'').'>'.$langs->trans('Internal').'</option>';\n    print '<option value=\"1\"'.($menu->user==1?' selected':'').'>'.$langs->trans('External').'</option>';\n    print '</select></td><td>'.$langs->trans('DetailUser').'</td></tr>';\n\n    // Type\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('Type').'</td><td>'.$langs->trans(ucfirst($menu->type)).'</td><td>'.$langs->trans('DetailType').'</td></tr>';\n\n    // MenuId Parent\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('MenuIdParent');\n    print '</td>';\n    $valtouse=$menu->fk_menu;\n    if ($menu->fk_mainmenu) $valtouse='fk_mainmenu='.$menu->fk_mainmenu;\n    if ($menu->fk_leftmenu) $valtouse.='&fk_leftmenu='.$menu->fk_leftmenu;\n    print '<td><input type=\"text\" name=\"menuIdParent\" value=\"'.$valtouse.'\" size=\"48\"></td>';\n    print '<td>'.$langs->trans('DetailMenuIdParent');\n    print ', '.$langs->trans(\"Example\").': fk_mainmenu=abc&fk_leftmenu=def';\n    print '</td></tr>';\n\n    // Niveau\n    //print '<tr><td>'.$langs->trans('Level').'</td><td>'.$menu->level.'</td><td>'.$langs->trans('DetailLevel').'</td></tr>';\n\n    // Title\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('Title').'</td><td><input type=\"text\" size=\"30\" name=\"titre\" value=\"'.dol_escape_htmltag($menu->titre).'\"></td><td>'.$langs->trans('DetailTitre').'</td></tr>';\n\n    // Url\n    print '<tr><td class=\"fieldrequired\">'.$langs->trans('URL').'</td><td><input type=\"text\" class=\"quatrevingtpercent\" name=\"url\" value=\"'.$menu->url.'\"></td><td>'.$langs->trans('DetailUrl').'</td></tr>';\n\n    // Langs\n    print '<tr><td>'.$langs->trans('LangFile').'</td><td><input type=\"text\" size=\"30\" name=\"langs\" value=\"'.dol_escape_htmltag($menu->langs).'\"></td><td>'.$langs->trans('DetailLangs').'</td></tr>';\n\n    // Position\n    print '<tr><td>'.$langs->trans('Position').'</td><td><input type=\"text\" size=\"5\" name=\"position\" value=\"'.$menu->position.'\"></td><td>'.$langs->trans('DetailPosition').'</td></tr>';\n\n    // Target\n    print '<tr><td>'.$langs->trans('Target').'</td><td><select class=\"flat\" name=\"target\">';\n    print '<option value=\"\"'.($menu->target==\"\"?' selected':'').'>&nbsp;</option>';\n    print '<option value=\"_blank\"'.($menu->target==\"_blank\"?' selected':'').'>'.$langs->trans('_blank').'</option>';\n    print '</select></td><td>'.$langs->trans('DetailTarget').'</td></tr>';\n\n    // Enabled\n    print '<tr><td>'.$langs->trans('Enabled').'</td><td><input type=\"text\" size=\"60\" name=\"enabled\" value=\"'.dol_escape_htmltag($menu->enabled).'\"></td><td>'.$langs->trans('DetailEnabled');\n    if (! empty($menu->enabled)) print ' ('.$langs->trans(\"ConditionIsCurrently\").': '.yn(dol_eval($menu->enabled,1)).')';\n    print '</td></tr>';\n\n    // Perms\n    print '<tr><td>'.$langs->trans('Rights').'</td><td><input type=\"text\" size=\"60\" name=\"perms\" value=\"'.dol_escape_htmltag($menu->perms).'\"></td><td>'.$langs->trans('DetailRight');\n    if (! empty($menu->perms)) print ' ('.$langs->trans(\"ConditionIsCurrently\").': '.yn(dol_eval($menu->perms,1)).')';\n    print '</td></tr>';\n\n    print '</table>';\n\n    dol_fiche_end();\n\n    // Bouton\n    print '<div class=\"center\">';\n\tprint '<input type=\"submit\" class=\"button\" name=\"save\" value=\"'.$langs->trans(\"Save\").'\">';\n    print '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';\n    print '<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\tprint '</div>';\n\n    print '</form>';\n\n    print '<br>';\n}\n\nllxFooter();\n$db->close();\n", "<?php\n/* Copyright (C) 2000-2007\tRodolphe Quiedeville\t\t\t<rodolphe@quiedeville.org>\n * Copyright (C) 2003\t\tJean-Louis Bergamo\t\t\t<jlb@j1b.org>\n * Copyright (C) 2004-2013\tLaurent Destailleur\t\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2004\t\tSebastien Di Cintio\t\t\t<sdicintio@ressource-toi.org>\n * Copyright (C) 2004\t\tBenoit Mortier\t\t\t\t<benoit.mortier@opensides.be>\n * Copyright (C) 2004\t\tChristophe Combelles\t\t\t<ccomb@free.fr>\n * Copyright (C) 2005-2017\tRegis Houssin\t\t\t\t<regis.houssin@capnetworks.com>\n * Copyright (C) 2008\t\tRaphael Bertrand (Resultic)\t<raphael.bertrand@resultic.fr>\n * Copyright (C) 2010-2016\tJuanjo Menent\t\t\t\t<jmenent@2byte.es>\n * Copyright (C) 2013\t\tC\u00e9dric Salvador\t\t\t\t<csalvador@gpcsolutions.fr>\n * Copyright (C) 2013-2017\tAlexandre Spangaro\t\t\t<aspangaro@zendsi.com>\n * Copyright (C) 2014\t\tC\u00e9dric GROSS\t\t\t\t\t<c.gross@kreiz-it.fr>\n * Copyright (C) 2014-2015\tMarcos Garc\u00eda\t\t\t\t<marcosgdf@gmail.com>\n * Copyright (C) 2015\t\tJean-Fran\u00e7ois Ferry\t\t\t<jfefe@aternatik.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n * or see http://www.gnu.org/\n */\n\n/**\n *\t\\file\t\t\thtdocs/core/lib/functions.lib.php\n *\t\\brief\t\t\tA set of functions for Dolibarr\n *\t\t\t\t\tThis file contains all frequently used functions.\n */\n\ninclude_once DOL_DOCUMENT_ROOT .'/core/lib/json.lib.php';\n\n/**\n * Function to return value of a static property when class\n * name is dynamically defined (not hard coded).\n * This is because $myclass::$myvar works from PHP 5.3.0+ only\n *\n * @param\tstring \t$class\t\tClass name\n * @param \tstring \t$member\t\tName of property\n * @return \tmixed\t\t\t\tReturn value of static property\n * @deprecated Dolibarr now requires 5.3.0+, use $class::$property syntax\n * @see https://php.net/manual/language.oop5.static.php\n */\nfunction getStaticMember($class, $member)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\t// This part is deprecated. Uncomment if for php 5.2.*, and comment next isset class::member\n\t/*if (version_compare(phpversion(), '5.3.0', '<'))\n\t{\n\t\tif (is_object($class)) $class = get_class($class);\n\t\t$classObj = new ReflectionClass($class);\n\t\t$result = null;\n\n\t\t$found=0;\n\t\tforeach($classObj->getStaticProperties() as $prop => $value)\n\t\t{\n\t\t\tif ($prop == $member)\n\t\t\t{\n\t\t\t\t$result = $value;\n\t\t\t\t$found++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ($found) return $result;\n\t}*/\n\n\tif (isset($class::$member)) return $class::$member;\n\tdol_print_error('','Try to get a static member \"'.$member.'\" in class \"'.$class.'\" that does not exists or is not static.');\n\treturn null;\n}\n\n\n/**\n * Return a DoliDB instance (database handler).\n *\n * @param   string\t$type\t\tType of database (mysql, pgsql...)\n * @param\tstring\t$host\t\tAddress of database server\n * @param\tstring\t$user\t\tNom de l'utilisateur autorise\n * @param\tstring\t$pass\t\tMot de passe\n * @param\tstring\t$name\t\tNom de la database\n * @param\tint\t\t$port\t\tPort of database server\n * @return\tDoliDB\t\t\t\tA DoliDB instance\n */\nfunction getDoliDBInstance($type, $host, $user, $pass, $name, $port)\n{\n\trequire_once DOL_DOCUMENT_ROOT .\"/core/db/\".$type.'.class.php';\n\n\t$class='DoliDB'.ucfirst($type);\n\t$dolidb=new $class($type, $host, $user, $pass, $name, $port);\n\treturn $dolidb;\n}\n\n/**\n * \tGet list of entity id to use.\n *\n * \t@param\tstring\t$element\tCurrent element\n *                              'societe', 'socpeople', 'actioncomm', 'agenda', 'resource',\n *                              'product', 'productprice', 'stock',\n *                              'propal', 'supplier_proposal', 'facture', 'facture_fourn',\n *                              'categorie', 'bank_account', 'bank_account', 'adherent', 'user',\n *                              'commande', 'commande_fournisseur', 'expedition', 'intervention', 'survey',\n *                              'contract', 'tax', 'expensereport', 'holiday', 'multicurrency', 'project',\n *                              'email_template', 'event',\n * \t@param\tint\t     $shared\t1=Return id of current entity + shared entities (default), 0=Return id of current entity only\n * \t@return\tmixed\t\t\t\tEntity id(s) to use\n */\nfunction getEntity($element, $shared=1)\n{\n\tglobal $conf, $mc;\n\n\t// For backward compatibilty\n\tif ($element == 'actioncomm') $element='agenda';\n\tif ($element == 'fichinter')  $element='intervention';\n\tif ($element == 'categorie')  $element='category';\n\n\tif (is_object($mc))\n\t{\n\t\treturn $mc->getEntity($element, $shared);\n\t}\n\telse\n\t{\n\t\t$out='';\n\t\t$addzero = array('user', 'usergroup', 'email_template', 'default_values');\n\t\tif (in_array($element, $addzero)) $out.= '0,';\n\t\t$out.= $conf->entity;\n\t\treturn $out;\n\t}\n}\n\n/**\n * Return information about user browser\n *\n * Returns array with the following format:\n * array(\n *  'browsername' => Browser name (firefox|chrome|iceweasel|epiphany|safari|opera|ie|unknown)\n *  'browserversion' => Browser version. Empty if unknown\n *  'browseros' => Set with mobile OS (android|blackberry|ios|palm|symbian|webos|maemo|windows|unknown)\n *  'layout' => (tablet|phone|classic)\n *  'phone' => empty if not mobile, (android|blackberry|ios|palm|unknown) if mobile\n *  'tablet' => true/false\n * )\n *\n * @param string $user_agent Content of $_SERVER[\"HTTP_USER_AGENT\"] variable\n * @return\tarray Check function documentation\n */\nfunction getBrowserInfo($user_agent)\n{\n\tinclude_once DOL_DOCUMENT_ROOT.'/includes/mobiledetect/mobiledetectlib/Mobile_Detect.php';\n\n\t$name='unknown';\n\t$version='';\n\t$os='unknown';\n\t$phone = '';\n\n\t$detectmobile = new Mobile_Detect(null, $user_agent);\n\t$tablet = $detectmobile->isTablet();\n\n\tif ($detectmobile->isMobile()) {\n\n\t\t$phone = 'unknown';\n\n\t\t// If phone/smartphone, we set phone os name.\n\t\tif ($detectmobile->is('AndroidOS')) {\n\t\t\t$os = $phone = 'android';\n\t\t} elseif ($detectmobile->is('BlackBerryOS')) {\n\t\t\t$os = $phone = 'blackberry';\n\t\t} elseif ($detectmobile->is('iOS')) {\n\t\t\t$os = 'ios';\n\t\t\t$phone = 'iphone';\n\t\t} elseif ($detectmobile->is('PalmOS')) {\n\t\t\t$os = $phone = 'palm';\n\t\t} elseif ($detectmobile->is('SymbianOS')) {\n\t\t\t$os = 'symbian';\n\t\t} elseif ($detectmobile->is('webOS')) {\n\t\t\t$os = 'webos';\n\t\t} elseif ($detectmobile->is('MaemoOS')) {\n\t\t\t$os = 'maemo';\n\t\t} elseif ($detectmobile->is('WindowsMobileOS') || $detectmobile->is('WindowsPhoneOS')) {\n\t\t\t$os = 'windows';\n\t\t}\n\t}\n\n\t// OS\n\tif (preg_match('/linux/i', $user_agent))\t\t\t{ $os='linux'; }\n\telseif (preg_match('/macintosh/i', $user_agent))\t{ $os='macintosh'; }\n\telseif (preg_match('/windows/i', $user_agent))\t\t{ $os='windows'; }\n\n\t// Name\n\tif (preg_match('/firefox(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg))      { $name='firefox';   $version=$reg[2]; }\n\telseif (preg_match('/chrome(\\/|\\s)([\\d\\.]+)/i', $user_agent, $reg))   { $name='chrome';    $version=$reg[2]; }    // we can have 'chrome (Mozilla...) chrome x.y' in one string\n\telseif (preg_match('/chrome/i', $user_agent, $reg))                   { $name='chrome'; }\n\telseif (preg_match('/iceweasel/i', $user_agent))                      { $name='iceweasel'; }\n\telseif (preg_match('/epiphany/i', $user_agent))                       { $name='epiphany';  }\n\telseif (preg_match('/safari(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg))   { $name='safari';    $version=$reg[2]; }\t// Safari is often present in string for mobile but its not.\n\telseif (preg_match('/opera(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg))    { $name='opera';     $version=$reg[2]; }\n\telseif (preg_match('/(MSIE\\s([0-9]+\\.[0-9]))|.*(Trident\\/[0-9]+.[0-9];.*rv:([0-9]+\\.[0-9]+))/i', $user_agent, $reg))  { $name='ie'; $version=end($reg); }    // MS products at end\n\telseif (preg_match('/(Windows NT\\s([0-9]+\\.[0-9])).*(Trident\\/[0-9]+.[0-9];.*rv:([0-9]+\\.[0-9]+))/i', $user_agent, $reg))  { $name='ie'; $version=end($reg); }    // MS products at end\n\telseif (preg_match('/l(i|y)n(x|ks)(\\(|\\/|\\s)*([\\d\\.]+)/i', $user_agent, $reg)) { $name='lynxlinks'; $version=$reg[4]; }\n\n\tif ($tablet) {\n\t\t$layout = 'tablet';\n\t} elseif ($phone) {\n\t\t$layout = 'phone';\n\t} else {\n\t\t$layout = 'classic';\n\t}\n\n\treturn array(\n\t\t'browsername' => $name,\n\t\t'browserversion' => $version,\n\t\t'browseros' => $os,\n\t\t'layout' => $layout,\n\t\t'phone' => $phone,\n\t\t'tablet' => $tablet\n\t);\n}\n\n/**\n *  Function called at end of web php process\n *\n *  @return\tvoid\n */\nfunction dol_shutdown()\n{\n\tglobal $conf,$user,$langs,$db;\n\t$disconnectdone=false; $depth=0;\n\tif (is_object($db) && ! empty($db->connected)) { $depth=$db->transaction_opened; $disconnectdone=$db->close(); }\n\tdol_syslog(\"--- End access to \".$_SERVER[\"PHP_SELF\"].(($disconnectdone && $depth)?' (Warn: db disconnection forced, transaction depth was '.$depth.')':''), (($disconnectdone && $depth)?LOG_WARNING:LOG_INFO));\n}\n\n\n/**\n *  Return value of a param into GET or POST supervariable.\n *  Use the property $user->default_values[path]['creatform'] and/or $user->default_values[path]['filters'] and/or $user->default_values[path]['sortorder']\n *  Note: The property $user->default_values is loaded by main.php when loading the user.\n *\n *  @param\tstring\t$paramname   Name of parameter to found\n *  @param\tstring\t$check\t     Type of check\n *                                  ''=no check (deprecated)\n *                                  'none'=no check (only for param that should have very rich content)\n *                                  'int'=check it's numeric (integer or float)\n *                                  'alpha'=check it's text and sign\n *                                  'aZ'=check it's a-z only\n *                                  'aZ09'=check it's simple alpha string (recommended for keys)\n *                                  'array'=check it's array\n *                                  'san_alpha'=Use filter_var with FILTER_SANITIZE_STRING (do not use this for free text string)\n *                                  'nohtml', 'alphanohtml'=check there is no html content\n *                                  'custom'= custom filter specify $filter and $options)\n *  @param\tint\t\t$method\t     Type of method (0 = get then post, 1 = only get, 2 = only post, 3 = post then get, 4 = post then get then cookie)\n *  @param  int     $filter      Filter to apply when $check is set to 'custom'. (See http://php.net/manual/en/filter.filters.php for d\u00e9tails)\n *  @param  mixed   $options     Options to pass to filter_var when $check is set to 'custom'.\n *  @return string|string[]      Value found (string or array), or '' if check fails\n *\n *  @TODO Set default value for check to alpha. Check all WYSIWYG edition (email and description...) is still ok with rich text.\n */\nfunction GETPOST($paramname, $check='', $method=0, $filter=NULL, $options=NULL)\n{\n    global $mysoc,$user,$conf;\n\n    if (empty($paramname)) return 'BadFirstParameterForGETPOST';\n\n    if (empty($method)) $out = isset($_GET[$paramname])?$_GET[$paramname]:(isset($_POST[$paramname])?$_POST[$paramname]:'');\n\telseif ($method==1) $out = isset($_GET[$paramname])?$_GET[$paramname]:'';\n\telseif ($method==2) $out = isset($_POST[$paramname])?$_POST[$paramname]:'';\n\telseif ($method==3) $out = isset($_POST[$paramname])?$_POST[$paramname]:(isset($_GET[$paramname])?$_GET[$paramname]:'');\n\telseif ($method==4) $out = isset($_POST[$paramname])?$_POST[$paramname]:(isset($_GET[$paramname])?$_GET[$paramname]:(isset($_COOKIE[$paramname])?$_COOKIE[$paramname]:''));\n\telse return 'BadThirdParameterForGETPOST';\n\n\tif (empty($method) || $method == 3 || $method == 4)\n\t{\n    \t$relativepathstring = $_SERVER[\"PHP_SELF\"];\n    \t// Clean $relativepathstring\n    \tif (constant('DOL_URL_ROOT')) $relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'),'/').'/', '', $relativepathstring);\n    \t$relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n    \t$relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n    \t//var_dump($relativepathstring);\n\n        // Code for search criteria persistence.\n    \t// Retrieve values if restore_lastsearch_values is set and there is saved values\n    \tif (! empty($_GET['restore_lastsearch_values']) && ! empty($_SESSION['lastsearch_values_'.$relativepathstring]))        // Keep $_GET here\n    \t{\n\t        $tmp=json_decode($_SESSION['lastsearch_values_'.$relativepathstring], true);\n\t        if (is_array($tmp))\n\t        {\n\t            foreach($tmp as $key => $val)\n\t            {\n\t                if ($key == $paramname)\n\t                {\n\t                    $out=$val;\n\t                    break;\n\t                }\n\t            }\n\t        }\n    \t}\n\t    // Else, retreive default values if we are not doing a sort\n\t    elseif (! isset($_GET['sortfield']) && ! empty($conf->global->MAIN_ENABLE_DEFAULT_VALUES))\t// If we did a click on a field to sort, we do no apply default values. Same if option MAIN_ENABLE_DEFAULT_VALUES is not set\n\t    {\n\t        if (! empty($_GET['action']) && $_GET['action'] == 'create' && ! isset($_GET[$paramname]) && ! isset($_POST[$paramname]))\n\t        {\n\t            if (! empty($user->default_values))\t\t// $user->default_values defined from menu default values\n\t            {\n\t                //var_dump($user->default_values[$relativepathstring]['createform']);\n\t                if (isset($user->default_values[$relativepathstring]['createform'][$paramname])) $out = $user->default_values[$relativepathstring]['createform'][$paramname];\n\t            }\n\t        }\n\t        // Management of default search_filters and sort order\n\t        //elseif (preg_match('/list.php$/', $_SERVER[\"PHP_SELF\"]) && ! empty($paramname) && ! isset($_GET[$paramname]) && ! isset($_POST[$paramname]))\n\t        elseif (! empty($paramname) && ! isset($_GET[$paramname]) && ! isset($_POST[$paramname]))\n\t        {\n\t            if (! empty($user->default_values))\t\t// $user->default_values defined from menu default values\n\t            {\n\t                //var_dump($user->default_values[$relativepathstring]);\n\t                if ($paramname == 'sortfield')\n\t                {\n\t                    if (isset($user->default_values[$relativepathstring]['sortorder']))    // We will use the key of $user->default_values[path][sortorder]\n\t                    {\n\t                        $forbidden_chars_to_replace=array(\" \",\"'\",\"/\",\"\\\\\",\":\",\"*\",\"?\",\"\\\"\",\"<\",\">\",\"|\",\"[\",\"]\",\";\",\"=\");  // we accept _, -, . and ,\n\t                        foreach($user->default_values[$relativepathstring]['sortorder'] as $key => $val)\n\t                        {\n\t                            if ($out) $out.=', ';\n\t                            $out.=dol_string_nospecial($key, '', $forbidden_chars_to_replace);\n\t                        }\n\t                    }\n\t                }\n\t                elseif ($paramname == 'sortorder')\n\t                {\n\t                    if (isset($user->default_values[$relativepathstring]['sortorder']))    // We will use the val of $user->default_values[path][sortorder]\n\t                    {\n\t                        $forbidden_chars_to_replace=array(\" \",\"'\",\"/\",\"\\\\\",\":\",\"*\",\"?\",\"\\\"\",\"<\",\">\",\"|\",\"[\",\"]\",\";\",\"=\");  // we accept _, -, . and ,\n\t                        foreach($user->default_values[$relativepathstring]['sortorder'] as $key => $val)\n\t                        {\n\t                            if ($out) $out.=', ';\n\t                            $out.=dol_string_nospecial($val, '', $forbidden_chars_to_replace);\n\t                        }\n\t                    }\n\t                }\n\t                elseif (isset($user->default_values[$relativepathstring]['filters'][$paramname]))\n\t                {\n\t                    $forbidden_chars_to_replace=array(\" \",\"'\",\"/\",\"\\\\\",\":\",\"*\",\"?\",\"\\\"\",\"<\",\">\",\"|\",\"[\",\"]\",\";\",\"=\");  // we accept _, -, . and ,\n\t                    $out = dol_string_nospecial($user->default_values[$relativepathstring]['filters'][$paramname], '', $forbidden_chars_to_replace);\n\t                }\n\t            }\n\t        }\n\t    }\n\n\t}\n\n\tif (empty($check) && ! empty($conf->global->MAIN_FEATURES_LEVEL) && $conf->global->MAIN_FEATURES_LEVEL >= 2)\n\t{\n\t   dol_syslog(\"Deprecated use of GETPOST, called with 1st param = \".$paramname.\" and 2nd param not defined, when calling page \".$_SERVER[\"PHP_SELF\"], LOG_WARNING);\n\t   // Enable this line to know who call the GETPOST with empty $check parameter.\n\t   //var_dump(debug_backtrace()[0]);\n\t}\n\n\tif (! empty($check))\n\t{\n\t    // Substitution variables for GETPOST (used to get final url with variable parameters or final default value with variable paramaters)\n\t    // Example of variables: __DAY__, __MONTH__, __YEAR__, __MYCOUNTRYID__, __USERID__, __ENTITYID__, ...\n\t    // We do this only if var is a GET. If it is a POST, may be we want to post the text with vars as the setup text.\n\t    if (! is_array($out) && empty($_POST[$paramname]))\n\t    {\n\t        $maxloop=20; $loopnb=0;    // Protection against infinite loop\n\t        while (preg_match('/__([A-Z0-9]+_?[A-Z0-9]+)__/i', $out, $reg) && ($loopnb < $maxloop))    // Detect '__ABCDEF__' as key 'ABCDEF' and '__ABC_DEF__' as key 'ABC_DEF'. Detection is also correct when 2 vars are side by side.\n\t        {\n\t            $loopnb++; $newout = '';\n\n    \t        if ($reg[1] == 'DAY')                { $tmp=dol_getdate(dol_now(), true); $newout = $tmp['mday']; }\n    \t        elseif ($reg[1] == 'MONTH')          { $tmp=dol_getdate(dol_now(), true); $newout = $tmp['mon'];  }\n    \t        elseif ($reg[1] == 'YEAR')           { $tmp=dol_getdate(dol_now(), true); $newout = $tmp['year']; }\n    \t    \telseif ($reg[1] == 'PREVIOUS_DAY')   { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_prev_day($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['day']; }\n    \t        elseif ($reg[1] == 'PREVIOUS_MONTH') { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_prev_month($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['month']; }\n    \t        elseif ($reg[1] == 'PREVIOUS_YEAR')  { $tmp=dol_getdate(dol_now(), true); $newout = ($tmp['year'] - 1); }\n    \t    \telseif ($reg[1] == 'NEXT_DAY')       { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_next_day($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['day']; }\n    \t        elseif ($reg[1] == 'NEXT_MONTH')     { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_next_month($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['month']; }\n    \t        elseif ($reg[1] == 'NEXT_YEAR')      { $tmp=dol_getdate(dol_now(), true); $newout = ($tmp['year'] + 1); }\n    \t        elseif ($reg[1] == 'MYCOUNTRY_ID' || $reg[1] == 'MYCOUNTRYID')\n    \t        {\n    \t            $newout = $mysoc->country_id;\n    \t        }\n    \t        elseif ($reg[1] == 'USER_ID' || $reg[1] == 'USERID')\n    \t        {\n    \t            $newout = $user->id;\n    \t        }\n    \t    \telseif ($reg[1] == 'SUPERVISOR_ID' || $reg[1] == 'SUPERVISORID')\n    \t        {\n    \t            $newout = $user->fk_user;\n    \t        }\n    \t        elseif ($reg[1] == 'ENTITYID')\n    \t        {\n    \t            $newout = $conf->entity;\n    \t        }\n    \t        else $newout = '';     // Key not found, we replace with empty string\n    \t        //var_dump('__'.$reg[1].'__ -> '.$newout);\n    \t        $out = preg_replace('/__'.preg_quote($reg[1],'/').'__/', $newout, $out);\n\t        }\n\t    }\n\n\t    // Check is done after replacement\n\t    switch ($check)\n\t    {\n\t        case 'none':\n\t            break;\n\t        case 'int':    // Check param is a numeric value (integer but also float or hexadecimal)\n\t            if (! is_numeric($out)) { $out=''; }\n\t            break;\n\t        case 'intcomma':\n\t            if (preg_match('/[^0-9,]+/i',$out)) $out='';\n\t            break;\n\t        case 'alpha':\n\t            $out=trim($out);\n\t            // '\"' is dangerous because param in url can close the href= or src= and add javascript functions.\n\t            // '../' is dangerous because it allows dir transversals\n\t            if (preg_match('/\"/',$out)) $out='';\n\t            else if (preg_match('/\\.\\.\\//',$out)) $out='';\n\t            break;\n\t        case 'san_alpha':\n\t            $out=filter_var($out,FILTER_SANITIZE_STRING);\n\t            break;\n\t        case 'aZ':\n\t            $out=trim($out);\n\t            if (preg_match('/[^a-z]+/i',$out)) $out='';\n\t            break;\n\t        case 'aZ09':\n\t            $out=trim($out);\n\t            if (preg_match('/[^a-z0-9_\\-\\.]+/i',$out)) $out='';\n\t            break;\n\t        case 'array':\n\t            if (! is_array($out) || empty($out)) $out=array();\n\t            break;\n\t\t\tcase 'nohtml':\n\t\t\t    $out=dol_string_nohtmltag($out);\n\t\t\t\tbreak;\n\t\t\tcase 'alphanohtml':\t// Recommended for search params\n\t            $out=trim($out);\n\t            // '\"' is dangerous because param in url can close the href= or src= and add javascript functions.\n\t            // '../' is dangerous because it allows dir transversals\n\t            if (preg_match('/\"/',$out)) $out='';\n\t            else if (preg_match('/\\.\\.\\//',$out)) $out='';\n\t\t\t    $out=dol_string_nohtmltag($out);\n\t\t\t\tbreak;\n\t\t\tcase 'custom':\n\t            if (empty($filter)) return 'BadFourthParameterForGETPOST';\n\t            $out=filter_var($out, $filter, $options);\n\t            break;\n\t    }\n\t}\n\n    // Code for search criteria persistence.\n\t// Save data into session if key start with 'search_' or is 'smonth', 'syear', 'month', 'year'\n\tif (empty($method) || $method == 3 || $method == 4)\n\t{\n\t    //if (preg_match('/^search_/', $paramname) || in_array($paramname, array('sortorder', 'sortfield\", 'smonth', 'syear', 'month', 'year')))\n\t    if (preg_match('/^search_/', $paramname) || in_array($paramname, array('sortorder','sortfield')))\n\t    {\n\t        //var_dump($paramname.' - '.$out.' '.$user->default_values[$relativepathstring]['filters'][$paramname]);\n\n\t        // We save search key only if:\n\t        // - not empty, or\n\t        // - if value is empty and a default value exists that is not empty (it means we did a filter to an empty value when default was not).\n\n\t        //if (! empty($out) || ! empty($user->default_values[$relativepathstring]['filters'][$paramname]))\n\t        if (! empty($out))\n\t        {\n                $user->lastsearch_values_tmp[$relativepathstring][$paramname]=$out;\n\t        }\n\t    }\n\t}\n\n\treturn $out;\n}\n\n\n/**\n *  Return a prefix to use for this Dolibarr instance, for session/cookie names or email id.\n *  This prefix is unique for instance and avoid conflict between multi-instances,\n *  even when having two instances with one root dir or two instances in virtual servers.\n *\n *  @param  string  $mode       '' (prefix for session name) or 'email' (prefix for email id)\n *  @return\tstring      \t\tA calculated prefix\n */\nfunction dol_getprefix($mode='')\n{\n    global $conf;\n\n    // If MAIL_PREFIX_FOR_EMAIL_ID is set and prefix is for email\n    if ($mode == 'email' && ! empty($conf->global->MAIL_PREFIX_FOR_EMAIL_ID))\n    {\n        if ($conf->global->MAIL_PREFIX_FOR_EMAIL_ID != 'SERVER_NAME') return $conf->global->MAIL_PREFIX_FOR_EMAIL_ID;\n        else if (isset($_SERVER[\"SERVER_NAME\"])) return $_SERVER[\"SERVER_NAME\"];\n    }\n\n\tif (isset($_SERVER[\"SERVER_NAME\"]) && isset($_SERVER[\"DOCUMENT_ROOT\"]))\n\t{\n\t\treturn dol_hash($_SERVER[\"SERVER_NAME\"].$_SERVER[\"DOCUMENT_ROOT\"].DOL_DOCUMENT_ROOT.DOL_URL_ROOT);\n\t\t// Use this for a \"clear\" cookie name\n\t\t//return dol_sanitizeFileName($_SERVER[\"SERVER_NAME\"].$_SERVER[\"DOCUMENT_ROOT\"].DOL_DOCUMENT_ROOT.DOL_URL_ROOT);\n\t}\n\telse return dol_hash(DOL_DOCUMENT_ROOT.DOL_URL_ROOT);\n}\n\n/**\n *\tMake an include_once using default root and alternate root if it fails.\n *  To link to a core file, use include(DOL_DOCUMENT_ROOT.'/pathtofile')\n *  To link to a module file from a module file, use include './mymodulefile';\n *  To link to a module file from a core file, then this function can be used (call by hook / trigger / speciales pages)\n *\n * \t@param\tstring\t$relpath\tRelative path to file (Ie: mydir/myfile, ../myfile, ...)\n * \t@param\tstring\t$classname\tClass name (deprecated)\n *  @return bool                True if load is a success, False if it fails\n */\nfunction dol_include_once($relpath, $classname='')\n{\n\tglobal $conf,$langs,$user,$mysoc;   // Do not remove this. They must be defined for files we include. Other globals var must be retreived with $GLOBALS['var']\n\n\t$fullpath = dol_buildpath($relpath);\n\n\tif (!file_exists($fullpath)) {\n\t\tdol_syslog('functions::dol_include_once Tried to load unexisting file: '.$relpath, LOG_ERR);\n\t\treturn false;\n\t}\n\n\tif (! empty($classname) && ! class_exists($classname)) {\n\t\treturn include $fullpath;\n\t} else {\n\t\treturn include_once $fullpath;\n\t}\n}\n\n\n/**\n *\tReturn path of url or filesystem. Return alternate root if exists.\n *\n * \t@param\tstring\t$path\t\tRelative path to file (if mode=0) or relative url (if mode=1). Ie: mydir/myfile, ../myfile\n *  @param\tint\t\t$type\t\t0=Used for a Filesystem path, 1=Used for an URL path (output relative), 2=Used for an URL path (output full path using same host that current url), 3=Used for an URL path (output full path using host defined into $dolibarr_main_url_root of conf file)\n *  @return string\t\t\t\tFull filesystem path (if mode=0), Full url path (if mode=1)\n */\nfunction dol_buildpath($path, $type=0)\n{\n\tglobal $conf;\n\n\t$path=preg_replace('/^\\//','',$path);\n\n\tif (empty($type))\t// For a filesystem path\n\t{\n\t\t$res = DOL_DOCUMENT_ROOT.'/'.$path;\t// Standard value\n\t\tforeach ($conf->file->dol_document_root as $key => $dirroot)\t// ex: array([\"main\"]=>\"/home/main/htdocs\", [\"alt0\"]=>\"/home/dirmod/htdocs\", ...)\n\t\t{\n\t\t\tif ($key == 'main') continue;\n\t\t\tif (file_exists($dirroot.'/'.$path))\n\t\t\t{\n\t\t\t\t$res=$dirroot.'/'.$path;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\telse\t\t\t\t// For an url path\n\t{\n\t\t// We try to get local path of file on filesystem from url\n\t\t// Note that trying to know if a file on disk exist by forging path on disk from url\n\t\t// works only for some web server and some setup. This is bugged when\n\t\t// using proxy, rewriting, virtual path, etc...\n\t\t$res='';\n\t\tif ($type == 1) $res = DOL_URL_ROOT.'/'.$path;\t\t\t// Standard value\n\t\tif ($type == 2) $res = DOL_MAIN_URL_ROOT.'/'.$path;\t\t// Standard value\n\t\tif ($type == 3) $res = DOL_URL_ROOT.'/'.$path;\n\n\t\tforeach ($conf->file->dol_document_root as $key => $dirroot)\t// ex: array([\"main\"]=>\"/home/main/htdocs\", [\"alt0\"]=>\"/home/dirmod/htdocs\", ...)\n\t\t{\n\t\t\tif ($key == 'main')\n\t\t\t{\n\t\t\t    if ($type == 3)\n\t\t\t    {\n\t\t\t        global $dolibarr_main_url_root;\n\n\t\t\t        // Define $urlwithroot\n\t\t\t        $urlwithouturlroot=preg_replace('/'.preg_quote(DOL_URL_ROOT,'/').'$/i','',trim($dolibarr_main_url_root));\n\t\t\t        $urlwithroot=$urlwithouturlroot.DOL_URL_ROOT;\t\t// This is to use external domain name found into config file\n\t\t\t        //$urlwithroot=DOL_MAIN_URL_ROOT;\t\t\t\t\t// This is to use same domain name than current\n\n\t\t\t        $res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':$urlwithroot).'/'.$path;     // Test on start with http is for old conf syntax\n\t\t\t    }\n\t\t\t    continue;\n\t\t\t}\n\t\t\tpreg_match('/^([^\\?]+(\\.css\\.php|\\.css|\\.js\\.php|\\.js|\\.png|\\.jpg|\\.php)?)/i',$path,$regs);    // Take part before '?'\n\t\t\tif (! empty($regs[1]))\n\t\t\t{\n\t\t\t\t//print $key.'-'.$dirroot.'/'.$path.'-'.$conf->file->dol_url_root[$type].'<br>'.\"\\n\";\n\t\t\t\tif (file_exists($dirroot.'/'.$regs[1]))\n\t\t\t\t{\n\t\t\t\t\tif ($type == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':DOL_URL_ROOT).$conf->file->dol_url_root[$key].'/'.$path;\n\t\t\t\t\t}\n\t\t\t\t\tif ($type == 2)\n\t\t\t\t\t{\n\t\t\t\t\t    $res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':DOL_MAIN_URL_ROOT).$conf->file->dol_url_root[$key].'/'.$path;\n\t\t\t\t\t}\n\t\t\t\t\tif ($type == 3)\n\t\t\t\t\t{\n\t\t\t\t\t    global $dolibarr_main_url_root;\n\n\t\t\t\t\t    // Define $urlwithroot\n\t\t\t\t\t    $urlwithouturlroot=preg_replace('/'.preg_quote(DOL_URL_ROOT,'/').'$/i','',trim($dolibarr_main_url_root));\n\t\t\t\t\t    $urlwithroot=$urlwithouturlroot.DOL_URL_ROOT;\t\t// This is to use external domain name found into config file\n\t\t\t\t\t    //$urlwithroot=DOL_MAIN_URL_ROOT;\t\t\t\t\t// This is to use same domain name than current\n\n\t\t\t\t\t    $res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':$urlwithroot).$conf->file->dol_url_root[$key].'/'.$path;     // Test on start with http is for old conf syntax\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $res;\n}\n\n/**\n *\tCreate a clone of instance of object (new instance with same value for properties)\n *  With native = 0: Property that are reference are also new object (true clone). This means $this->db is not valid.\n *  With native = 1: Use PHP clone. Property that are reference are same pointer. This means $this->db is still valid.\n *\n * \t@param\tobject\t$object\t\tObject to clone\n *  @param\tint\t\t$native\t\tNative method or true method\n *\t@return object\t\t\t\tObject clone\n *  @see https://php.net/manual/language.oop5.cloning.php\n */\nfunction dol_clone($object, $native=0)\n{\n\t//dol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tif (empty($native))\n\t{\n\t\t$myclone=unserialize(serialize($object));\n\t}\n\telse\n\t{\n\t\t$myclone = clone $object;     // PHP clone is a shallow copy only, not a real clone, so properties of references will keep references (refer to the same target/variable)\n\t}\n\n\treturn $myclone;\n}\n\n/**\n *\tOptimize a size for some browsers (phone, smarphone, ...)\n *\n * \t@param\tint\t\t$size\t\tSize we want\n * \t@param\tstring\t$type\t\tType of optimizing:\n * \t\t\t\t\t\t\t\t'' = function used to define a size for truncation\n * \t\t\t\t\t\t\t\t'width' = function is used to define a width\n *\t@return int\t\t\t\t\tNew size after optimizing\n */\nfunction dol_size($size,$type='')\n{\n\tglobal $conf;\n\tif (empty($conf->dol_optimize_smallscreen)) return $size;\n\tif ($type == 'width' && $size > 250) return 250;\n\telse return 10;\n}\n\n\n/**\n *\tClean a string to use it as a file name\n *\n *\t@param\tstring\t$str            String to clean\n * \t@param\tstring\t$newstr\t\t\tString to replace bad chars with\n *  @param\tint\t    $unaccent\t\t1=Remove also accent (default), 0 do not remove them\n *\t@return string          \t\tString cleaned (a-zA-Z_)\n *\n * \t@see        \tdol_string_nospecial, dol_string_unaccent, dol_sanitizePathName\n */\nfunction dol_sanitizeFileName($str,$newstr='_',$unaccent=1)\n{\n\t$filesystem_forbidden_chars = array('<','>',':','/','\\\\','?','*','|','\"','\u00b0');\n\treturn dol_string_nospecial($unaccent?dol_string_unaccent($str):$str, $newstr, $filesystem_forbidden_chars);\n}\n\n/**\n *\tClean a string to use it as a path name\n *\n *\t@param\tstring\t$str            String to clean\n * \t@param\tstring\t$newstr\t\t\tString to replace bad chars with\n *  @param\tint\t    $unaccent\t\t1=Remove also accent (default), 0 do not remove them\n *\t@return string          \t\tString cleaned (a-zA-Z_)\n *\n * \t@see        \tdol_string_nospecial, dol_string_unaccent, dol_sanitizeFileName\n */\nfunction dol_sanitizePathName($str,$newstr='_',$unaccent=1)\n{\n    $filesystem_forbidden_chars = array('<','>','?','*','|','\"','\u00b0');\n    return dol_string_nospecial($unaccent?dol_string_unaccent($str):$str, $newstr, $filesystem_forbidden_chars);\n}\n\n/**\n *\tClean a string from all accent characters to be used as ref, login or by dol_sanitizeFileName\n *\n *\t@param\tstring\t$str\t\t\tString to clean\n *\t@return string   \t       \t\tCleaned string\n *\n * \t@see    \t\tdol_sanitizeFilename, dol_string_nospecial\n */\nfunction dol_string_unaccent($str)\n{\n\tif (utf8_check($str))\n\t{\n\t\t// See http://www.utf8-chartable.de/\n\t\t$string = rawurlencode($str);\n\t\t$replacements = array(\n\t\t'%C3%80' => 'A','%C3%81' => 'A','%C3%82' => 'A','%C3%83' => 'A','%C3%84' => 'A','%C3%85' => 'A',\n\t\t'%C3%88' => 'E','%C3%89' => 'E','%C3%8A' => 'E','%C3%8B' => 'E',\n\t\t'%C3%8C' => 'I','%C3%8D' => 'I','%C3%8E' => 'I','%C3%8F' => 'I',\n\t\t'%C3%92' => 'O','%C3%93' => 'O','%C3%94' => 'O','%C3%95' => 'O','%C3%96' => 'O',\n\t\t'%C3%99' => 'U','%C3%9A' => 'U','%C3%9B' => 'U','%C3%9C' => 'U',\n\t\t'%C3%A0' => 'a','%C3%A1' => 'a','%C3%A2' => 'a','%C3%A3' => 'a','%C3%A4' => 'a','%C3%A5' => 'a',\n\t\t'%C3%A7' => 'c',\n\t\t'%C3%A8' => 'e','%C3%A9' => 'e','%C3%AA' => 'e','%C3%AB' => 'e',\n\t\t'%C3%AC' => 'i','%C3%AD' => 'i','%C3%AE' => 'i','%C3%AF' => 'i',\n\t\t'%C3%B1' => 'n',\n\t\t'%C3%B2' => 'o','%C3%B3' => 'o','%C3%B4' => 'o','%C3%B5' => 'o','%C3%B6' => 'o',\n\t\t'%C3%B9' => 'u','%C3%BA' => 'u','%C3%BB' => 'u','%C3%BC' => 'u',\n\t\t'%C3%BF' => 'y'\n\t\t);\n\t\t$string=strtr($string, $replacements);\n\t\treturn rawurldecode($string);\n\t}\n\telse\n\t{\n\t\t// See http://www.ascii-code.com/\n\t\t$string = strtr(\n\t\t\t$str,\n\t\t\t\"\\xC0\\xC1\\xC2\\xC3\\xC4\\xC5\\xC7\n\t\t\t\\xC8\\xC9\\xCA\\xCB\\xCC\\xCD\\xCE\\xCF\\xD0\\xD1\n\t\t\t\\xD2\\xD3\\xD4\\xD5\\xD8\\xD9\\xDA\\xDB\\xDD\n\t\t\t\\xE0\\xE1\\xE2\\xE3\\xE4\\xE5\\xE7\\xE8\\xE9\\xEA\\xEB\n\t\t\t\\xEC\\xED\\xEE\\xEF\\xF0\\xF1\\xF2\\xF3\\xF4\\xF5\\xF8\n\t\t\t\\xF9\\xFA\\xFB\\xFC\\xFD\\xFF\",\n\t\t\t\"AAAAAAC\n\t\t\tEEEEIIIIDN\n\t\t\tOOOOOUUUY\n\t\t\taaaaaaceeee\n\t\t\tiiiidnooooo\n\t\t\tuuuuyy\"\n\t\t);\n\t\t$string = strtr($string, array(\"\\xC4\"=>\"Ae\", \"\\xC6\"=>\"AE\", \"\\xD6\"=>\"Oe\", \"\\xDC\"=>\"Ue\", \"\\xDE\"=>\"TH\", \"\\xDF\"=>\"ss\", \"\\xE4\"=>\"ae\", \"\\xE6\"=>\"ae\", \"\\xF6\"=>\"oe\", \"\\xFC\"=>\"ue\", \"\\xFE\"=>\"th\"));\n\t\treturn $string;\n\t}\n}\n\n/**\n *\tClean a string from all punctuation characters to use it as a ref or login.\n *  This is a more complete function than dol_sanitizeFileName.\n *\n *\t@param\tstring\t$str            \tString to clean\n * \t@param\tstring\t$newstr\t\t\t\tString to replace forbidden chars with\n *  @param  array\t$badcharstoreplace  List of forbidden characters\n * \t@return string          \t\t\tCleaned string\n *\n * \t@see    \t\tdol_sanitizeFilename, dol_string_unaccent\n */\nfunction dol_string_nospecial($str,$newstr='_',$badcharstoreplace='')\n{\n\t$forbidden_chars_to_replace=array(\" \", \"'\", \"/\", \"\\\\\", \":\", \"*\", \"?\", \"\\\"\", \"<\", \">\", \"|\", \"[\", \"]\", \",\", \";\", \"=\", '\u00b0');  // more complete than dol_sanitizeFileName\n\t$forbidden_chars_to_remove=array();\n\tif (is_array($badcharstoreplace)) $forbidden_chars_to_replace=$badcharstoreplace;\n\t//$forbidden_chars_to_remove=array(\"(\",\")\");\n\n\treturn str_replace($forbidden_chars_to_replace,$newstr,str_replace($forbidden_chars_to_remove,\"\",$str));\n}\n\n\n/**\n * Encode string for xml usage\n *\n * @param \tstring\t$string\t\tString to encode\n * @return\tstring\t\t\t\tString encoded\n */\nfunction dolEscapeXML($string)\n{\n\treturn strtr($string, array('\\''=>'&apos;','\"'=>'&quot;','&'=>'&amp;','<'=>'&lt;','>'=>'&gt;'));\n}\n\n/**\n *  Returns text escaped for inclusion into javascript code\n *\n *  @param      string\t\t$stringtoescape\t\tString to escape\n *  @param\t\tint\t\t$mode\t\t\t\t0=Escape also ' and \" into ', 1=Escape ' but not \" for usage into 'string', 2=Escape \" but not ' for usage into \"string\", 3=Escape ' and \" with \\\n *  @param\t\tint\t\t$noescapebackslashn\t0=Escape also \\n. 1=Do not escape \\n.\n *  @return     string     \t\t \t\t\t\tEscaped string. Both ' and \" are escaped into ' if they are escaped.\n */\nfunction dol_escape_js($stringtoescape, $mode=0, $noescapebackslashn=0)\n{\n\t// escape quotes and backslashes, newlines, etc.\n\t$substitjs=array(\"&#039;\"=>\"\\\\'\",\"\\r\"=>'\\\\r');\n\t//$substitjs['</']='<\\/';\t// We removed this. Should be useless.\n\tif (empty($noescapebackslashn)) { $substitjs[\"\\n\"]='\\\\n'; $substitjs['\\\\']='\\\\\\\\'; }\n\tif (empty($mode)) { $substitjs[\"'\"]=\"\\\\'\"; $substitjs['\"']=\"\\\\'\"; }\n\telse if ($mode == 1) $substitjs[\"'\"]=\"\\\\'\";\n\telse if ($mode == 2) { $substitjs['\"']='\\\\\"'; }\n\telse if ($mode == 3) { $substitjs[\"'\"]=\"\\\\'\"; $substitjs['\"']=\"\\\\\\\"\"; }\n\treturn strtr($stringtoescape, $substitjs);\n}\n\n\n/**\n *  Returns text escaped for inclusion in HTML alt or title tags, or into values of HTML input fields.\n *\n *  @param      string\t\t$stringtoescape\t\tString to escape\n *  @param\t\tint\t\t\t$keepb\t\t\t\t1=Preserve b tags (otherwise, remove them)\n *  @param      int         $keepn              1=Preserve \\r\\n strings (otherwise, remove them)\n *  @return     string     \t\t\t\t \t\tEscaped string\n *\n *  @see\t\tdol_string_nohtmltag\n */\nfunction dol_escape_htmltag($stringtoescape, $keepb=0, $keepn=0)\n{\n\t// escape quotes and backslashes, newlines, etc.\n\t$tmp=dol_html_entity_decode($stringtoescape,ENT_COMPAT,'UTF-8');\n\tif (! $keepb) $tmp=strtr($tmp, array(\"<b>\"=>'','</b>'=>''));\n\tif (! $keepn) $tmp=strtr($tmp, array(\"\\r\"=>'\\\\r',\"\\n\"=>'\\\\n'));\n\treturn dol_htmlentities($tmp,ENT_COMPAT,'UTF-8');\n}\n\n\n/**\n * Convert a string to lower. Never use strtolower because it does not works with UTF8 strings.\n *\n * @param \tstring\t\t$utf8_string\t\tString to encode\n * @return \tstring\t\t\t\t\t\t\tString converted\n */\nfunction dol_strtolower($utf8_string)\n{\n\treturn mb_strtolower($utf8_string, \"UTF-8\");\n}\n\n/**\n * Convert a string to upper. Never use strtolower because it does not works with UTF8 strings.\n *\n * @param \tstring\t\t$utf8_string\t\tString to encode\n * @return \tstring\t\t\t\t\t\t\tString converted\n */\nfunction dol_strtoupper($utf8_string)\n{\n\treturn mb_strtoupper($utf8_string, \"UTF-8\");\n}\n\n\n/**\n *\tWrite log message into outputs. Possible outputs can be:\n *\tSYSLOG_HANDLERS = [\"mod_syslog_file\"]  \t\tfile name is then defined by SYSLOG_FILE\n *\tSYSLOG_HANDLERS = [\"mod_syslog_syslog\"]  \tfacility is then defined by SYSLOG_FACILITY\n *  Warning, syslog functions are bugged on Windows, generating memory protection faults. To solve\n *  this, use logging to files instead of syslog (see setup of module).\n *  Note: If constant 'SYSLOG_FILE_NO_ERROR' defined, we never output any error message when writing to log fails.\n *  Note: You can get log message into html sources by adding parameter &logtohtml=1 (constant MAIN_LOGTOHTML must be set)\n *  This function works only if syslog module is enabled.\n * \tThis must not use any call to other function calling dol_syslog (avoid infinite loop).\n *\n * \t@param  string\t\t$message\t\t\t\tLine to log. ''=Show nothing\n *  @param  int\t\t\t$level\t\t\t\t\tLog level\n *\t\t\t\t\t\t\t\t\t\t\t\tOn Windows LOG_ERR=4, LOG_WARNING=5, LOG_NOTICE=LOG_INFO=6, LOG_DEBUG=6 si define_syslog_variables ou PHP 5.3+, 7 si dolibarr\n *\t\t\t\t\t\t\t\t\t\t\t\tOn Linux   LOG_ERR=3, LOG_WARNING=4, LOG_INFO=6, LOG_DEBUG=7\n *  @param\tint\t\t\t$ident\t\t\t\t\t1=Increase ident of 1, -1=Decrease ident of 1\n *  @param\tstring\t\t$suffixinfilename\t\tWhen output is a file, append this suffix into default log filename.\n *  @param\tstring\t\t$restricttologhandler\tOutput log only for this log handler\n *  @return\tvoid\n */\nfunction dol_syslog($message, $level = LOG_INFO, $ident = 0, $suffixinfilename='', $restricttologhandler='')\n{\n\tglobal $conf, $user;\n\n\t// If syslog module enabled\n\tif (empty($conf->syslog->enabled)) return;\n\n\tif (! empty($message))\n\t{\n    \t// Test log level\n    \t$logLevels = array(LOG_EMERG, LOG_ALERT, LOG_CRIT, LOG_ERR, LOG_WARNING, LOG_NOTICE, LOG_INFO, LOG_DEBUG);\n    \tif (!in_array($level, $logLevels, true))\n    \t{\n    \t\tthrow new Exception('Incorrect log level');\n    \t}\n    \tif ($level > $conf->global->SYSLOG_LEVEL) return;\n\n    \t// If adding log inside HTML page is required\n    \tif (! empty($_REQUEST['logtohtml']) && (! empty($conf->global->MAIN_ENABLE_LOG_TO_HTML) || ! empty($conf->global->MAIN_LOGTOHTML)))   // MAIN_LOGTOHTML kept for backward compatibility\n    \t{\n    \t\t$conf->logbuffer[] = dol_print_date(time(),\"%Y-%m-%d %H:%M:%S\").\" \".$message;\n    \t}\n\n    \t//TODO: Remove this. MAIN_ENABLE_LOG_INLINE_HTML should be deprecated and use a log handler dedicated to HTML output\n    \t// If enable html log tag enabled and url parameter log defined, we show output log on HTML comments\n    \tif (! empty($conf->global->MAIN_ENABLE_LOG_INLINE_HTML) && ! empty($_GET[\"log\"]))\n    \t{\n    \t\tprint \"\\n\\n<!-- Log start\\n\";\n    \t\tprint $message.\"\\n\";\n    \t\tprint \"Log end -->\\n\";\n    \t}\n\n    \t$data = array(\n    \t\t'message' => $message,\n    \t\t'script' => (isset($_SERVER['PHP_SELF'])? basename($_SERVER['PHP_SELF'],'.php') : false),\n    \t\t'level' => $level,\n    \t\t'user' => ((is_object($user) && $user->id) ? $user->login : false),\n    \t\t'ip' => false\n    \t);\n\n    \t// This is when server run behind a reverse proxy\n    \tif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) $data['ip'] = $_SERVER['HTTP_X_FORWARDED_FOR'].(empty($_SERVER[\"REMOTE_ADDR\"])?'':'->'.$_SERVER['REMOTE_ADDR']);\n    \t// This is when server run normally on a server\n    \telse if (! empty($_SERVER[\"REMOTE_ADDR\"])) $data['ip'] = $_SERVER['REMOTE_ADDR'];\n    \t// This is when PHP session is ran inside a web server but not inside a client request (example: init code of apache)\n    \telse if (! empty($_SERVER['SERVER_ADDR'])) $data['ip'] = $_SERVER['SERVER_ADDR'];\n    \t// This is when PHP session is ran outside a web server, like from Windows command line (Not always defined, but useful if OS defined it).\n    \telse if (! empty($_SERVER['COMPUTERNAME'])) $data['ip'] = $_SERVER['COMPUTERNAME'].(empty($_SERVER['USERNAME'])?'':'@'.$_SERVER['USERNAME']);\n    \t// This is when PHP session is ran outside a web server, like from Linux command line (Not always defined, but usefull if OS defined it).\n    \telse if (! empty($_SERVER['LOGNAME'])) $data['ip'] = '???@'.$_SERVER['LOGNAME'];\n    \t// Loop on each log handler and send output\n    \tforeach ($conf->loghandlers as $loghandlerinstance)\n    \t{\n    \t\tif ($restricttologhandler && $loghandlerinstance->code != $restricttologhandler) continue;\n    \t\t$loghandlerinstance->export($data,$suffixinfilename);\n    \t}\n    \tunset($data);\n\t}\n\n\tif (! empty($ident))\n\t{\n\t\tforeach ($conf->loghandlers as $loghandlerinstance)\n\t\t{\n\t\t\t$loghandlerinstance->setIdent($ident);\n\t\t}\n\t}\n}\n\n\n/**\n *\tShow tab header of a card\n *\n *\t@param\tarray\t$links\t\t\t\tArray of tabs. Currently initialized by calling a function xxx_admin_prepare_head\n *\t@param\tstring\t$active     \t\tActive tab name (document', 'info', 'ldap', ....)\n *\t@param  string\t$title      \t\tTitle\n *\t@param  int\t\t$notab\t\t\t\t-1 or 0=Add tab header, 1=no tab header. If you set this to 1, using dol_fiche_end() to close tab is not required.\n * \t@param\tstring\t$picto\t\t\t\tAdd a picto on tab title\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path. If you set this to 1, you can use url returned by dol_buildpath('/mymodyle/img/myimg.png',1) for $picto.\n * \t@return\tvoid\n */\nfunction dol_fiche_head($links=array(), $active='0', $title='', $notab=0, $picto='', $pictoisfullpath=0)\n{\n\tprint dol_get_fiche_head($links, $active, $title, $notab, $picto, $pictoisfullpath);\n}\n\n/**\n *  Show tab header of a card\n *\n *\t@param\tarray\t$links\t\t\t\tArray of tabs\n *\t@param\tstring\t$active     \t\tActive tab name\n *\t@param  string\t$title      \t\tTitle\n *\t@param  int\t\t$notab\t\t\t\t-1 or 0=Add tab header, 1=no tab header. If you set this to 1, using dol_fiche_end() to close tab is not required.\n * \t@param\tstring\t$picto\t\t\t\tAdd a picto on tab title\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path. If you set this to 1, you can use url returned by dol_buildpath('/mymodyle/img/myimg.png',1) for $picto.\n * \t@return\tstring\n */\nfunction dol_get_fiche_head($links=array(), $active='', $title='', $notab=0, $picto='', $pictoisfullpath=0)\n{\n\tglobal $conf, $langs, $hookmanager;\n\n\t$out=\"\\n\".'<div class=\"tabs\" data-role=\"controlgroup\" data-type=\"horizontal\">'.\"\\n\";\n\n\t// Show title\n\t$showtitle=1;\n\tif (! empty($conf->dol_optimize_smallscreen)) $showtitle=0;\n\tif (! empty($title) && $showtitle)\n\t{\n\t\t$limittitle=30;\n\t\t$out.='<a class=\"tabTitle\">';\n\t\tif ($picto) $out.=img_picto($title,($pictoisfullpath?'':'object_').$picto,'',$pictoisfullpath).' ';\n\t\t$out.='<span class=\"tabTitleText\">'.dol_trunc($title,$limittitle).'</span>';\n\t\t$out.='</a>';\n\t}\n\n\t// Define max of key (max may be higher than sizeof because of hole due to module disabling some tabs).\n\t$maxkey=-1;\n\tif (is_array($links) && ! empty($links))\n\t{\n\t\t$keys=array_keys($links);\n\t\tif (count($keys)) $maxkey=max($keys);\n\t}\n\n\t// Show tabs\n\t$bactive=false;\n\t// if =0 we don't use the feature\n\t$limittoshow=(empty($conf->global->MAIN_MAXTABS_IN_CARD)?99:$conf->global->MAIN_MAXTABS_IN_CARD);\n\t$displaytab=0;\n\t$nbintab=0;\n    $popuptab=0; $outmore='';\n\tfor ($i = 0 ; $i <= $maxkey ; $i++)\n\t{\n\t\tif ((is_numeric($active) && $i == $active) || (! empty($links[$i][2]) && ! is_numeric($active) && $active == $links[$i][2]))\n\t\t{\n\t\t\t// si l'active est pr\u00e9sent dans la box\n\t\t\tif ($i >= $limittoshow)\n\t\t\t\t$limittoshow--;\n\t\t}\n\t}\n\n\tfor ($i = 0 ; $i <= $maxkey ; $i++)\n\t{\n\t\tif ((is_numeric($active) && $i == $active) || (! empty($links[$i][2]) && ! is_numeric($active) && $active == $links[$i][2]))\n\t\t{\n\t\t\t$isactive=true;\n\t\t\t$bactive=true;\n\t\t}\n\t\telse\n\t\t\t$isactive=false;\n\n\t\tif ($i < $limittoshow || $isactive)\n\t\t{\n\t\t\t$out.='<div class=\"inline-block tabsElem'.($isactive ? ' tabsElemActive' : '').((! $isactive && ! empty($conf->global->MAIN_HIDE_INACTIVETAB_ON_PRINT))?' hideonprint':'').'\"><!-- id tab = '.(empty($links[$i][2])?'':$links[$i][2]).' -->';\n\t\t\tif (isset($links[$i][2]) && $links[$i][2] == 'image')\n\t\t\t{\n\t\t\t\tif (!empty($links[$i][0]))\n\t\t\t\t{\n\t\t\t\t\t$out.='<a data-role=\"button\" class=\"tabimage\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$out.='<span data-role=\"button\" class=\"tabspan\">'.$links[$i][1].'</span>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (! empty($links[$i][1]))\n\t\t\t{\n\t\t\t\t//print \"x $i $active \".$links[$i][2].\" z\";\n\t\t\t\tif ($isactive)\n\t\t\t\t{\n\t\t\t\t\t$out.='<a data-role=\"button\"'.(! empty($links[$i][2])?' id=\"'.$links[$i][2].'\"':'').' class=\"tabactive tab inline-block\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$out.='<a data-role=\"button\"'.(! empty($links[$i][2])?' id=\"'.$links[$i][2].'\"':'').' class=\"tabunactive tab inline-block\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out.='</div>';\n\t\t}\n\t\telse\n\t\t{\n\t\t    // The popup with the other tabs\n\t\t\tif (! $popuptab)\n\t\t\t{\n\t\t\t    $popuptab=1;\n\t\t\t    $outmore.='<div class=\"popuptabset\">';\n\t\t\t}\n\t\t    $outmore.='<div class=\"popuptab\" style=\"display:inherit;\">';\n\t\t\tif (isset($links[$i][2]) && $links[$i][2] == 'image')\n\t\t\t{\n\t\t\t\tif (!empty($links[$i][0]))\n\t\t\t\t\t$outmore.='<a class=\"tabimage\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\telse\n\t\t\t\t\t$outmore.='<span class=\"tabspan\">'.$links[$i][1].'</span>'.\"\\n\";\n\n\t\t\t}\n\t\t\telse if (! empty($links[$i][1]))\n\t\t\t\t$outmore.='<a'.(! empty($links[$i][2])?' id=\"'.$links[$i][2].'\"':'').' class=\"inline-block\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\n\t\t\t$outmore.='</div>';\n\n\t\t\t$nbintab++;\n\t\t}\n\t\t$displaytab=$i;\n\t}\n\tif ($popuptab) $outmore.='</div>';\n\n\tif ($displaytab > $limittoshow)\n\t{\n\t\t$tabsname=str_replace(\"@\", \"\", $picto);\n\t\t$out.='<div id=\"moretabs'.$tabsname.'\" class=\"inline-block tabsElem\">';\n\t\t$out.='<a href=\"#\" data-role=\"button\" class=\"tab moretab inline-block\">'.$langs->trans(\"More\").'... ('.$nbintab.')</a>';\n\t\t$out.='<div id=\"moretabsList'.$tabsname.'\" style=\"position: absolute; left: -999em;text-align: left;margin:0px;padding:2px\">'.$outmore.'</div>';\n\t\t$out.=\"</div>\\n\";\n\n\t\t$out.=\"<script>\";\n\t\t$out.=\"$('#moretabs\".$tabsname.\"').mouseenter( function() { $('#moretabsList\".$tabsname.\"').css('left','auto');});\";\n\t\t$out.=\"$('#moretabs\".$tabsname.\"').mouseleave( function() { $('#moretabsList\".$tabsname.\"').css('left','-999em');});\";\n\t\t$out.=\"</script>\";\n\t}\n\n\t$out.=\"</div>\\n\";\n\n\tif (! $notab || $notab == -1) $out.=\"\\n\".'<div class=\"tabBar'.($notab == -1 ? '' : ' tabBarWithBottom').'\">'.\"\\n\";\n\n\t$parameters=array('tabname' => $active, 'out' => $out);\n\t$reshook=$hookmanager->executeHooks('printTabsHead',$parameters);\t// This hook usage is called just before output the head of tabs. Take also a look at \"completeTabsHead\"\n\tif ($reshook > 0)\n\t{\n\t\t$out = $hookmanager->resPrint;\n\t}\n\n\treturn $out;\n}\n\n/**\n *  Show tab footer of a card\n *\n *  @param\tint\t\t$notab       -1 or 0=Add tab footer, 1=no tab footer\n *  @return\tvoid\n */\nfunction dol_fiche_end($notab=0)\n{\n\tprint dol_get_fiche_end($notab);\n}\n\n/**\n *\tReturn tab footer of a card\n *\n *\t@param  int\t\t$notab\t\t-1 or 0=Add tab footer, 1=no tab footer\n *  @return\tstring\n */\nfunction dol_get_fiche_end($notab=0)\n{\n\tif (! $notab || $notab == -1) return \"\\n</div>\\n\";\n\telse return '';\n}\n\n/**\n *  Show tab footer of a card.\n *  Note: $object->next_prev_filter can be set to restrict select to find next or previous record by $form->showrefnav.\n *\n *  @param\tobject\t$object\t\t\tObject to show\n *  @param\tstring\t$paramid   \t\tName of parameter to use to name the id into the URL next/previous link\n *  @param\tstring\t$morehtml  \t\tMore html content to output just before the nav bar\n *  @param\tint\t\t$shownav\t  \tShow Condition (navigation is shown if value is 1)\n *  @param\tstring\t$fieldid   \t\tNom du champ en base a utiliser pour select next et previous (we make the select max and min on this field)\n *  @param\tstring\t$fieldref   \tNom du champ objet ref (object->ref) a utiliser pour select next et previous\n *  @param\tstring\t$morehtmlref  \tMore html to show after ref\n *  @param\tstring\t$moreparam  \tMore param to add in nav link url.\n *\t@param\tint\t\t$nodbprefix\t\tDo not include DB prefix to forge table name\n *\t@param\tstring\t$morehtmlleft\tMore html code to show before ref\n *\t@param\tstring\t$morehtmlstatus\tMore html code to show under navigation arrows\n *  @param  int     $onlybanner     Put this to 1, if the card will contains only a banner (add css 'arearefnobottom' on div)\n *\t@param\tstring\t$morehtmlright\tMore html code to show before navigation arrows\n *  @return\tvoid\n */\nfunction dol_banner_tab($object, $paramid, $morehtml='', $shownav=1, $fieldid='rowid', $fieldref='ref', $morehtmlref='', $moreparam='', $nodbprefix=0, $morehtmlleft='', $morehtmlstatus='', $onlybanner=0, $morehtmlright='')\n{\n\tglobal $conf, $form, $user, $langs;\n\n\t$error = 0;\n\n\t$maxvisiblephotos=1;\n\t$showimage=1;\n\t$showbarcode=empty($conf->barcode->enabled)?0:($object->barcode?1:0);\n\tif (! empty($conf->global->MAIN_USE_ADVANCED_PERMS) && empty($user->rights->barcode->lire_advance)) $showbarcode=0;\n\t$modulepart='unknown';\n\n\tif ($object->element == 'societe')         $modulepart='societe';\n\tif ($object->element == 'contact')         $modulepart='contact';\n\tif ($object->element == 'member')          $modulepart='memberphoto';\n\tif ($object->element == 'user')            $modulepart='userphoto';\n\tif ($object->element == 'product')         $modulepart='product';\n\n\tif (class_exists(\"Imagick\"))\n\t{\n\t    if ($object->element == 'propal')            $modulepart='propal';\n\t\tif ($object->element == 'commande')          $modulepart='commande';\n\t\tif ($object->element == 'facture')           $modulepart='facture';\n\t\tif ($object->element == 'fichinter')         $modulepart='ficheinter';\n\t\tif ($object->element == 'contrat')           $modulepart='contract';\n\t    if ($object->element == 'supplier_proposal') $modulepart='supplier_proposal';\n\t\tif ($object->element == 'order_supplier')    $modulepart='supplier_order';\n\t    if ($object->element == 'invoice_supplier')  $modulepart='supplier_invoice';\n\t\tif ($object->element == 'expensereport')     $modulepart='expensereport';\n\t}\n\n\tif ($object->element == 'product')\n\t{\n\t    $width=80; $cssclass='photoref';\n        $showimage=$object->is_photo_available($conf->product->multidir_output[$object->entity]);\n\t    $maxvisiblephotos=(isset($conf->global->PRODUCT_MAX_VISIBLE_PHOTO)?$conf->global->PRODUCT_MAX_VISIBLE_PHOTO:5);\n\t\tif ($conf->browser->phone) $maxvisiblephotos=1;\n\t\tif ($showimage) $morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">'.$object->show_photos($conf->product->multidir_output[$object->entity],'small',$maxvisiblephotos,0,0,0,$width,0).'</div>';\n        else\n        {\n\t\t\tif (!empty($conf->global->PRODUCT_NODISPLAYIFNOPHOTO)) {\n\t\t\t\t$nophoto='';\n\t\t\t\t$morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\"></div>';\n\t\t\t}\n\t\t\t//elseif ($conf->browser->layout != 'phone') {    // Show no photo link\n\t\t\t\t$nophoto='/public/theme/common/nophoto.png';\n\t\t\t\t$morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\"><img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"No photo\" border=\"0\"'.($width?' width=\"'.$width.'\"':'').' src=\"'.DOL_URL_ROOT.$nophoto.'\"></div>';\n\t\t\t//}\n        }\n\t}\n\telse\n\t{\n\t\tif ($showimage)\n        {\n            if ($modulepart != 'unknown')\n            {\n                $phototoshow='';\n                // Check if a preview file is available\n                if (in_array($modulepart, array('propal', 'commande', 'facture', 'ficheinter', 'contract', 'supplier_order', 'supplier_proposal', 'supplier_invoice', 'expensereport')) && class_exists(\"Imagick\"))\n                {\n                    $objectref = dol_sanitizeFileName($object->ref);\n                    $dir_output = $conf->$modulepart->dir_output . \"/\";\n                    if (in_array($modulepart, array('invoice_supplier', 'supplier_invoice')))\n                    {\n                        $subdir = get_exdir($object->id, 2, 0, 0, $object, $modulepart).$objectref;\n                    }\n                    else\n                    {\n                        $subdir = get_exdir($object->id, 0, 0, 0, $object, $modulepart).$objectref;\n                    }\n                    $filepath = $dir_output . $subdir . \"/\";\n                    $file = $filepath . $objectref . \".pdf\";\n                    $relativepath = $subdir.'/'.$objectref.'.pdf';\n\n                    // Define path to preview pdf file (preview precompiled \"file.ext\" are \"file.ext_preview.png\")\n                    $fileimage = $file.'_preview.png';              // If PDF has 1 page\n                    $fileimagebis = $file.'_preview-0.png';         // If PDF has more than one page\n                    $relativepathimage = $relativepath.'_preview.png';\n\n                    // Si fichier PDF existe\n                    if (file_exists($file))\n                    {\n                        $encfile = urlencode($file);\n                        // Conversion du PDF en image png si fichier png non existant\n                        if ( (! file_exists($fileimage) || (filemtime($fileimage) < filemtime($file)))\n                          && (! file_exists($fileimagebis) || (filemtime($fileimagebis) < filemtime($file)))\n                           )\n                        {\n                        \tif (empty($conf->global->MAIN_DISABLE_PDF_THUMBS))\t\t// If you experienc trouble with pdf thumb generation and imagick, you can disable here.\n                        \t{\n                            \t$ret = dol_convert_file($file, 'png', $fileimage);\n                            \tif ($ret < 0) $error++;\n                        \t}\n                        }\n\n                        $heightforphotref=70;\n                        if (! empty($conf->dol_optimize_smallscreen)) $heightforphotref=60;\n                        // Si fichier png PDF d'1 page trouve\n                        if (file_exists($fileimage))\n                        {\n                            $phototoshow = '<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\">';\n                            $phototoshow.= '<img height=\"'.$heightforphotref.'\" class=\"photo photowithmargin photowithborder\" src=\"'.DOL_URL_ROOT . '/viewimage.php?modulepart=apercu'.$modulepart.'&amp;file='.urlencode($relativepathimage).'\">';\n                            $phototoshow.= '</div></div>';\n                        }\n                        // Si fichier png PDF de plus d'1 page trouve\n                        elseif (file_exists($fileimagebis))\n                        {\n                            $preview = preg_replace('/\\.png/','',$relativepathimage) . \"-0.png\";\n                            $phototoshow = '<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\">';\n                            $phototoshow.= '<img height=\"'.$heightforphotref.'\" class=\"photo photowithmargin photowithborder\" src=\"'.DOL_URL_ROOT . '/viewimage.php?modulepart=apercu'.$modulepart.'&amp;file='.urlencode($preview).'\"><p>';\n                            $phototoshow.= '</div></div>';\n                        }\n                    }\n                }\n                else if (! $phototoshow)\n                {\n                    $phototoshow = $form->showphoto($modulepart,$object,0,0,0,'photoref','small',1,0,$maxvisiblephotos);\n                }\n\n                if ($phototoshow)\n                {\n                    $morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">';\n                    $morehtmlleft.=$phototoshow;\n                    $morehtmlleft.='</div>';\n                }\n            }\n\n            if (! $phototoshow)      // Show No photo link (picto of pbject)\n            {\n                $morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">';\n                if ($object->element == 'action')\n                {\n                    $width=80;\n                    $cssclass='photorefcenter';\n                    $nophoto=img_picto('', 'title_agenda', '', false, 1);\n                }\n                else\n                {\n                    $width=14; $cssclass='photorefcenter';\n                    $picto = $object->picto;\n                    if ($object->element == 'project' && ! $object->public) $picto = 'project'; // instead of projectpub\n    \t\t\t\t$nophoto=img_picto('', 'object_'.$picto, '', false, 1);\n                }\n                $morehtmlleft.='<!-- No photo to show -->';\n                $morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\"><img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"No photo\" border=\"0\"'.($width?' width=\"'.$width.'\"':'').' src=\"'.$nophoto.'\"></div></div>';\n\n                $morehtmlleft.='</div>';\n            }\n        }\n\t}\n\n\tif ($showbarcode) $morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">'.$form->showbarcode($object).'</div>';\n\n\tif ($object->element == 'societe')\n\t{\n\t    if (! empty($conf->use_javascript_ajax) && $user->rights->societe->creer && ! empty($conf->global->MAIN_DIRECT_STATUS_UPDATE))\n    \t{\n\t       \t$morehtmlstatus.=ajax_object_onoff($object, 'status', 'status', 'InActivity', 'ActivityCeased');\n    \t}\n\t}\n\telseif ($object->element == 'product')\n\t{\n\t    //$morehtmlstatus.=$langs->trans(\"Status\").' ('.$langs->trans(\"Sell\").') ';\n        if (! empty($conf->use_javascript_ajax) && $user->rights->produit->creer && ! empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n            $morehtmlstatus.=ajax_object_onoff($object, 'status', 'tosell', 'ProductStatusOnSell', 'ProductStatusNotOnSell');\n        } else {\n            $morehtmlstatus.='<span class=\"statusrefsell\">'.$object->getLibStatut(5,0).'</span>';\n        }\n        $morehtmlstatus.=' &nbsp; ';\n        //$morehtmlstatus.=$langs->trans(\"Status\").' ('.$langs->trans(\"Buy\").') ';\n\t    if (! empty($conf->use_javascript_ajax) && $user->rights->produit->creer && ! empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n            $morehtmlstatus.=ajax_object_onoff($object, 'status_buy', 'tobuy', 'ProductStatusOnBuy', 'ProductStatusNotOnBuy');\n        } else {\n            $morehtmlstatus.='<span class=\"statusrefbuy\">'.$object->getLibStatut(5,1).'</span>';\n        }\n\t}\n\telseif (in_array($object->element, array('facture', 'invoice', 'invoice_supplier', 'chargesociales', 'loan')))\n\t{\n\t    $tmptxt=$object->getLibStatut(6, $object->totalpaye);\n\t    if (empty($tmptxt) || $tmptxt == $object->getLibStatut(3) || $conf->browser->layout=='phone') $tmptxt=$object->getLibStatut(5, $object->totalpaye);\n\t\t$morehtmlstatus.=$tmptxt;\n\t}\n\telseif ($object->element == 'contrat' || $object->element == 'contract')\n\t{\n        if ($object->statut==0) $morehtmlstatus.=$object->getLibStatut(2);\n        else $morehtmlstatus.=$object->getLibStatut(4);\n\t}\n\telse { // Generic case\n\t    $tmptxt=$object->getLibStatut(6);\n\t    if (empty($tmptxt) || $tmptxt == $object->getLibStatut(3) || $conf->browser->layout=='phone') $tmptxt=$object->getLibStatut(5);\n\t\t$morehtmlstatus.=$tmptxt;\n\t}\n\tif (! empty($object->name_alias)) $morehtmlref.='<div class=\"refidno\">'.$object->name_alias.'</div>';      // For thirdparty\n\n\t// Add label\n\tif ($object->element == 'product' || $object->element == 'bank_account' || $object->element == 'project_task')\n\t{\n\t\tif (! empty($object->label)) $morehtmlref.='<div class=\"refidno\">'.$object->label.'</div>';\n\t}\n\n\tif ($object->element != 'product' && $object->element != 'bookmark' && $object->element != 'ecm_directories')\n\t{\n    \t$morehtmlref.='<div class=\"refidno\">';\n    \t$morehtmlref.=$object->getBannerAddress('refaddress',$object);\n    \t$morehtmlref.='</div>';\n\t}\n\tif (! empty($conf->global->MAIN_SHOW_TECHNICAL_ID) && in_array($object->element, array('societe', 'contact', 'member', 'product')))\n\t{\n\t\t$morehtmlref.='<div style=\"clear: both;\"></div><div class=\"refidno\">';\n\t\t$morehtmlref.=$langs->trans(\"TechnicalID\").': '.$object->id;\n\t\t$morehtmlref.='</div>';\n\t}\n\n\tprint '<div class=\"'.($onlybanner?'arearefnobottom ':'arearef ').'heightref valignmiddle\" width=\"100%\">';\n\tprint $form->showrefnav($object, $paramid, $morehtml, $shownav, $fieldid, $fieldref, $morehtmlref, $moreparam, $nodbprefix, $morehtmlleft, $morehtmlstatus, $morehtmlright);\n\tprint '</div>';\n\tprint '<div class=\"underrefbanner clearboth\"></div>';\n}\n\n/**\n * Show a string with the label tag dedicated to the HTML edit field.\n *\n * @param\tstring\t$langkey\t\tTranslation key\n * @param \tstring\t$fieldkey\t\tKey of the html select field the text refers to\n * @param\tint\t\t$fieldrequired\t1=Field is mandatory\n * @deprecated Form::editfieldkey\n */\nfunction fieldLabel($langkey, $fieldkey, $fieldrequired=0)\n{\n\tglobal $conf, $langs;\n\t$ret='';\n\tif ($fieldrequired) $ret.='<span class=\"fieldrequired\">';\n\tif (($conf->dol_use_jmobile != 4)) $ret.='<label for=\"'.$fieldkey.'\">';\n\t$ret.=$langs->trans($langkey);\n\tif (($conf->dol_use_jmobile != 4)) $ret.='</label>';\n\tif ($fieldrequired) $ret.='</span>';\n\treturn $ret;\n}\n\n/**\n * Return string to add class property on html element with pair/impair.\n *\n * @param\tstring\t$var\t\t\t0 or 1\n * @param\tstring\t$moreclass\t\tMore class to add\n * @return\tstring\t\t\t\t\tString to add class onto HTML element\n */\nfunction dol_bc($var,$moreclass='')\n{\n\tglobal $bc;\n\t$ret=' '.$bc[$var];\n\tif ($moreclass) $ret=preg_replace('/class=\\\"/','class=\"'.$moreclass.' ',$ret);\n\treturn $ret;\n}\n\n/**\n *      Return a formated address (part address/zip/town/state) according to country rules\n *\n *      @param  Object\t\t$object         A company or contact object\n * \t    @param\tint\t\t\t$withcountry\t1=Add country into address string\n *      @param\tstring\t\t$sep\t\t\tSeparator to use to build string\n *      @param\tTranslate\t$outputlangs\tObject lang that contains language for text translation.\n *      @return string          \t\t\tFormated string\n *      @see dol_print_address\n */\nfunction dol_format_address($object,$withcountry=0,$sep=\"\\n\",$outputlangs='')\n{\n\tglobal $conf,$langs;\n\n\t$ret='';\n\t$countriesusingstate=array('AU','CA','US','IN','GB','ES','UK','TR');    // See also MAIN_FORCE_STATE_INTO_ADDRESS\n\n\t// Address\n\t$ret .= $object->address;\n\t// Zip/Town/State\n\tif (in_array($object->country_code,array('AU', 'CA', 'US')) || ! empty($conf->global->MAIN_FORCE_STATE_INTO_ADDRESS))   \t// US: title firstname name \\n address lines \\n town, state, zip \\n country\n\t{\n\t\t$ret .= ($ret ? $sep : '' ).$object->town;\n\t\tif ($object->state)\n\t\t{\n\t\t\t$ret.=($ret?\", \":'').$object->state;\n\t\t}\n\t\tif ($object->zip) $ret .= ($ret?\", \":'').$object->zip;\n\t}\n\telse if (in_array($object->country_code,array('GB','UK'))) // UK: title firstname name \\n address lines \\n town state \\n zip \\n country\n\t{\n\t\t$ret .= ($ret ? $sep : '' ).$object->town;\n\t\tif ($object->state)\n\t\t{\n\t\t\t$ret.=($ret?\", \":'').$object->state;\n\t\t}\n\t\tif ($object->zip) $ret .= ($ret ? $sep : '' ).$object->zip;\n\t}\n\telse if (in_array($object->country_code,array('ES','TR'))) // ES: title firstname name \\n address lines \\n zip town \\n state \\n country\n\t{\n\t\t$ret .= ($ret ? $sep : '' ).$object->zip;\n\t\t$ret .= ($object->town?(($object->zip?' ':'').$object->town):'');\n\t\tif ($object->state)\n\t\t{\n\t\t\t$ret.=\"\\n\".$object->state;\n\t\t}\n\t}\n\telse                                        \t\t// Other: title firstname name \\n address lines \\n zip town \\n country\n\t{\n\t\t$ret .= $object->zip ? (($ret ? $sep : '' ).$object->zip) : '';\n\t\t$ret .= ($object->town?(($object->zip?' ':($ret ? $sep : '' )).$object->town):'');\n\t\tif ($object->state && in_array($object->country_code,$countriesusingstate))\n\t\t{\n\t\t\t$ret.=($ret?\", \":'').$object->state;\n\t\t}\n\t}\n\tif (! is_object($outputlangs)) $outputlangs=$langs;\n\tif ($withcountry) $ret.=($object->country_code?($ret?$sep:'').$outputlangs->convToOutputCharset($outputlangs->transnoentitiesnoconv(\"Country\".$object->country_code)):'');\n\n\treturn $ret;\n}\n\n\n\n/**\n *\tFormat a string.\n *\n *\t@param\tstring\t$fmt\t\tFormat of strftime function (http://php.net/manual/fr/function.strftime.php)\n *  @param\tint\t\t$ts\t\t\tTimesamp (If is_gmt is true, timestamp is already includes timezone and daylight saving offset, if is_gmt is false, timestamp is a GMT timestamp and we must compensate with server PHP TZ)\n *  @param\tint\t\t$is_gmt\t\tSee comment of timestamp parameter\n *\t@return\tstring\t\t\t\tA formatted string\n */\nfunction dol_strftime($fmt, $ts=false, $is_gmt=false)\n{\n\tif ((abs($ts) <= 0x7FFFFFFF)) { // check if number in 32-bit signed range\n\t\treturn ($is_gmt)? @gmstrftime($fmt,$ts): @strftime($fmt,$ts);\n\t}\n\telse return 'Error date into a not supported range';\n}\n\n/**\n *\tOutput date in a string format according to outputlangs (or langs if not defined).\n * \tReturn charset is always UTF-8, except if encodetoouput is defined. In this case charset is output charset\n *\n *\t@param\tint\t\t\t$time\t\t\tGM Timestamps date\n *\t@param\tstring\t\t$format      \tOutput date format (tag of strftime function)\n *\t\t\t\t\t\t\t\t\t\t\"%d %b %Y\",\n *\t\t\t\t\t\t\t\t\t\t\"%d/%m/%Y %H:%M\",\n *\t\t\t\t\t\t\t\t\t\t\"%d/%m/%Y %H:%M:%S\",\n *                                      \"%B\"=Long text of month, \"%A\"=Long text of day, \"%b\"=Short text of month, \"%a\"=Short text of day\n *\t\t\t\t\t\t\t\t\t\t\"day\", \"daytext\", \"dayhour\", \"dayhourldap\", \"dayhourtext\", \"dayrfc\", \"dayhourrfc\", \"...reduceformat\"\n * \t@param\tstring\t\t$tzoutput\t\ttrue or 'gmt' => string is for Greenwich location\n * \t\t\t\t\t\t\t\t\t\tfalse or 'tzserver' => output string is for local PHP server TZ usage\n * \t\t\t\t\t\t\t\t\t\t'tzuser' => output string is for user TZ (current browser TZ with current dst)\n *                                      'tzuserrel' => output string is for user TZ (current browser TZ with dst or not, depending on date position)\n *\t@param\tTranslate\t$outputlangs\tObject lang that contains language for text translation.\n *  @param  boolean\t\t$encodetooutput false=no convert into output pagecode\n * \t@return string      \t\t\t\tFormated date or '' if time is null\n *\n *  @see        dol_mktime, dol_stringtotime, dol_getdate\n */\nfunction dol_print_date($time,$format='',$tzoutput='tzserver',$outputlangs='',$encodetooutput=false)\n{\n\tglobal $conf,$langs;\n\n\t// Clean parameters\n\t$to_gmt=false;\n\t$offsettz=$offsetdst=0;\n\tif ($tzoutput)\n\t{\n\t\t$to_gmt=true;\t// For backward compatibility\n\t\tif (is_string($tzoutput))\n\t\t{\n\t\t\tif ($tzoutput == 'tzserver')\n\t\t\t{\n\t\t\t\t$to_gmt=false;\n\t\t\t\t$offsettzstring=@date_default_timezone_get();\t\t// Example 'Europe/Berlin' or 'Indian/Reunion'\n\t\t\t\t$offsettz=0;\n\t\t\t\t$offsetdst=0;\n\t\t\t}\n\t\t\telseif ($tzoutput == 'tzuser')\n\t\t\t{\n\t\t\t\t$to_gmt=true;\n\t\t\t\t$offsettzstring=(empty($_SESSION['dol_tz_string'])?'UTC':$_SESSION['dol_tz_string']);\t// Example 'Europe/Berlin' or 'Indian/Reunion'\n\t\t\t\t$offsettz=(empty($_SESSION['dol_tz'])?0:$_SESSION['dol_tz'])*60*60;\n\t\t\t\t$offsetdst=(empty($_SESSION['dol_dst'])?0:$_SESSION['dol_dst'])*60*60;\n\t\t\t}\n\t\t}\n\t}\n\tif (! is_object($outputlangs)) $outputlangs=$langs;\n\tif (! $format) $format='daytextshort';\n\t$reduceformat=(! empty($conf->dol_optimize_smallscreen) && in_array($format,array('day','dayhour')))?1:0;\n\t$formatwithoutreduce = preg_replace('/reduceformat/','',$format);\n\tif ($formatwithoutreduce != $format) { $format = $formatwithoutreduce; $reduceformat=1; }  // so format 'dayreduceformat' is processed like day\n\n\t// Change predefined format into computer format. If found translation in lang file we use it, otherwise we use default.\n\t// TODO Add format daysmallyear and dayhoursmallyear\n\tif ($format == 'day')\t\t\t\t$format=($outputlangs->trans(\"FormatDateShort\")!=\"FormatDateShort\"?$outputlangs->trans(\"FormatDateShort\"):$conf->format_date_short);\n\telse if ($format == 'hour')\t\t\t$format=($outputlangs->trans(\"FormatHourShort\")!=\"FormatHourShort\"?$outputlangs->trans(\"FormatHourShort\"):$conf->format_hour_short);\n\telse if ($format == 'hourduration')\t$format=($outputlangs->trans(\"FormatHourShortDuration\")!=\"FormatHourShortDuration\"?$outputlangs->trans(\"FormatHourShortDuration\"):$conf->format_hour_short_duration);\n\telse if ($format == 'daytext')\t\t\t $format=($outputlangs->trans(\"FormatDateText\")!=\"FormatDateText\"?$outputlangs->trans(\"FormatDateText\"):$conf->format_date_text);\n\telse if ($format == 'daytextshort')\t$format=($outputlangs->trans(\"FormatDateTextShort\")!=\"FormatDateTextShort\"?$outputlangs->trans(\"FormatDateTextShort\"):$conf->format_date_text_short);\n\telse if ($format == 'dayhour')\t\t\t $format=($outputlangs->trans(\"FormatDateHourShort\")!=\"FormatDateHourShort\"?$outputlangs->trans(\"FormatDateHourShort\"):$conf->format_date_hour_short);\n\telse if ($format == 'dayhoursec')\t\t $format=($outputlangs->trans(\"FormatDateHourSecShort\")!=\"FormatDateHourSecShort\"?$outputlangs->trans(\"FormatDateHourSecShort\"):$conf->format_date_hour_sec_short);\n\telse if ($format == 'dayhourtext')\t\t $format=($outputlangs->trans(\"FormatDateHourText\")!=\"FormatDateHourText\"?$outputlangs->trans(\"FormatDateHourText\"):$conf->format_date_hour_text);\n\telse if ($format == 'dayhourtextshort') $format=($outputlangs->trans(\"FormatDateHourTextShort\")!=\"FormatDateHourTextShort\"?$outputlangs->trans(\"FormatDateHourTextShort\"):$conf->format_date_hour_text_short);\n\t// Format not sensitive to language\n\telse if ($format == 'dayhourlog')\t\t $format='%Y%m%d%H%M%S';\n\telse if ($format == 'dayhourldap')\t\t $format='%Y%m%d%H%M%SZ';\n\telse if ($format == 'dayhourxcard')\t$format='%Y%m%dT%H%M%SZ';\n\telse if ($format == 'dayxcard')\t \t$format='%Y%m%d';\n\telse if ($format == 'dayrfc')\t\t\t $format='%Y-%m-%d';             // DATE_RFC3339\n\telse if ($format == 'dayhourrfc')\t\t $format='%Y-%m-%dT%H:%M:%SZ';   // DATETIME RFC3339\n\telse if ($format == 'standard')\t\t$format='%Y-%m-%d %H:%M:%S';\n\n\tif ($reduceformat)\n\t{\n\t\t$format=str_replace('%Y','%y',$format);\n\t\t$format=str_replace('yyyy','yy',$format);\n\t}\n\n\t// If date undefined or \"\", we return \"\"\n\tif (dol_strlen($time) == 0) return '';\t\t// $time=0 allowed (it means 01/01/1970 00:00:00)\n\n\t// Clean format\n\tif (preg_match('/%b/i',$format))\t\t// There is some text to translate\n\t{\n\t\t// We inhibate translation to text made by strftime functions. We will use trans instead later.\n\t\t$format=str_replace('%b','__b__',$format);\n\t\t$format=str_replace('%B','__B__',$format);\n\t}\n\tif (preg_match('/%a/i',$format))\t\t// There is some text to translate\n\t{\n\t\t// We inhibate translation to text made by strftime functions. We will use trans instead later.\n\t\t$format=str_replace('%a','__a__',$format);\n\t\t$format=str_replace('%A','__A__',$format);\n\t}\n\n\t// Analyze date\n\tif (preg_match('/^([0-9]+)\\-([0-9]+)\\-([0-9]+) ?([0-9]+)?:?([0-9]+)?:?([0-9]+)?/i',$time,$reg)\n\t|| preg_match('/^([0-9][0-9][0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])$/i',$time,$reg))\t// Deprecated. Ex: 1970-01-01, 1970-01-01 01:00:00, 19700101010000\n\t{\n\t\t// This part of code should not be used. TODO Remove this.\n\t\tdol_syslog(\"Functions.lib::dol_print_date function call with deprecated value of time in page \".$_SERVER[\"PHP_SELF\"], LOG_WARNING);\n\t\t// Date has format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM:SS' or 'YYYYMMDDHHMMSS'\n\t\t$syear\t= (! empty($reg[1]) ? $reg[1] : '');\n\t\t$smonth\t= (! empty($reg[2]) ? $reg[2] : '');\n\t\t$sday\t= (! empty($reg[3]) ? $reg[3] : '');\n\t\t$shour\t= (! empty($reg[4]) ? $reg[4] : '');\n\t\t$smin\t= (! empty($reg[5]) ? $reg[5] : '');\n\t\t$ssec\t= (! empty($reg[6]) ? $reg[6] : '');\n\n\t\t$time=dol_mktime($shour,$smin,$ssec,$smonth,$sday,$syear,true);\n\t\t$ret=adodb_strftime($format,$time+$offsettz+$offsetdst,$to_gmt);\n\t}\n\telse\n\t{\n\t\t// Date is a timestamps\n\t\tif ($time < 100000000000)\t// Protection against bad date values\n\t\t{\n\t\t\t$ret=adodb_strftime($format,$time+$offsettz+$offsetdst,$to_gmt);\t// TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\t\t}\n\t\telse $ret='Bad value '.$time.' for date';\n\t}\n\n\tif (preg_match('/__b__/i',$format))\n\t{\n\t\t// Here ret is string in PHP setup language (strftime was used). Now we convert to $outputlangs.\n\t\t$month=adodb_strftime('%m',$time+$offsettz+$offsetdst);\t\t\t\t\t// TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n        $month=sprintf(\"%02d\", $month);                             // $month may be return with format '06' on some installation and '6' on other, so we force it to '06'.\n\t\tif ($encodetooutput)\n\t\t{\n\t\t\t$monthtext=$outputlangs->transnoentities('Month'.$month);\n\t\t\t$monthtextshort=$outputlangs->transnoentities('MonthShort'.$month);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$monthtext=$outputlangs->transnoentitiesnoconv('Month'.$month);\n\t\t\t$monthtextshort=$outputlangs->transnoentitiesnoconv('MonthShort'.$month);\n\t\t}\n\t\t//print 'monthtext='.$monthtext.' monthtextshort='.$monthtextshort;\n\t\t$ret=str_replace('__b__',$monthtextshort,$ret);\n\t\t$ret=str_replace('__B__',$monthtext,$ret);\n\t\t//print 'x'.$outputlangs->charset_output.'-'.$ret.'x';\n\t\t//return $ret;\n\t}\n\tif (preg_match('/__a__/i',$format))\n\t{\n\t\t$w=adodb_strftime('%w',$time+$offsettz+$offsetdst);\t\t\t\t\t\t// TODO Remove this\n\t\t$dayweek=$outputlangs->transnoentitiesnoconv('Day'.$w);\n\t\t$ret=str_replace('__A__',$dayweek,$ret);\n\t\t$ret=str_replace('__a__',dol_substr($dayweek,0,3),$ret);\n\t}\n\n\treturn $ret;\n}\n\n\n/**\n *\tReturn an array with locale date info.\n *  PHP getdate is restricted to the years 1901-2038 on Unix and 1970-2038 on Windows\n *  WARNING: This function always use PHP server timezone to return locale informations !!!\n *  Usage must be avoid.\n *  FIXME: Replace this with PHP date function and a parameter $gm\n *\n *\t@param\tint\t\t\t$timestamp      Timestamp\n *\t@param\tboolean\t\t$fast           Fast mode\n *\t@return\tarray\t\t\t\t\t\tArray of informations\n *\t\t\t\t\t\t\t\t\t\tIf no fast mode:\n *\t\t\t\t\t\t\t\t\t\t'seconds' => $secs,\n *\t\t\t\t\t\t\t\t\t\t'minutes' => $min,\n *\t\t\t\t\t\t\t\t\t\t'hours' => $hour,\n *\t\t\t\t\t\t\t\t\t\t'mday' => $day,\n *\t\t\t\t\t\t\t\t\t\t'wday' => $dow,\t\t0=sunday, 6=saturday\n *\t\t\t\t\t\t\t\t\t\t'mon' => $month,\n *\t\t\t\t\t\t\t\t\t\t'year' => $year,\n *\t\t\t\t\t\t\t\t\t\t'yday' => floor($secsInYear/$_day_power),\n *\t\t\t\t\t\t\t\t\t\t'weekday' => gmdate('l',$_day_power*(3+$dow)),\n *\t\t\t\t\t\t\t\t\t\t'month' => gmdate('F',mktime(0,0,0,$month,2,1971)),\n *\t\t\t\t\t\t\t\t\t\tIf fast mode:\n *\t\t\t\t\t\t\t\t\t\t'seconds' => $secs,\n *\t\t\t\t\t\t\t\t\t\t'minutes' => $min,\n *\t\t\t\t\t\t\t\t\t\t'hours' => $hour,\n *\t\t\t\t\t\t\t\t\t\t'mday' => $day,\n *\t\t\t\t\t\t\t\t\t\t'mon' => $month,\n *\t\t\t\t\t\t\t\t\t\t'year' => $year,\n *\t\t\t\t\t\t\t\t\t\t'yday' => floor($secsInYear/$_day_power),\n *\t\t\t\t\t\t\t\t\t\t'leap' => $leaf,\n *\t\t\t\t\t\t\t\t\t\t'ndays' => $ndays\n * \t@see \t\t\t\t\t\t\t\tdol_print_date, dol_stringtotime, dol_mktime\n */\nfunction dol_getdate($timestamp,$fast=false)\n{\n\tglobal $conf;\n\n\t$usealternatemethod=false;\n\tif ($timestamp <= 0) $usealternatemethod=true;\t\t\t\t// <= 1970\n\tif ($timestamp >= 2145913200) $usealternatemethod=true;\t\t// >= 2038\n\n\tif ($usealternatemethod)\n\t{\n\t\t$arrayinfo=adodb_getdate($timestamp,$fast);\n\t}\n\telse\n\t{\n\t\t$arrayinfo=getdate($timestamp);\n\t}\n\n\treturn $arrayinfo;\n}\n\n/**\n *\tReturn a timestamp date built from detailed informations (by default a local PHP server timestamp)\n * \tReplace function mktime not available under Windows if year < 1970\n *\tPHP mktime is restricted to the years 1901-2038 on Unix and 1970-2038 on Windows\n *\n * \t@param\tint\t\t\t$hour\t\t\tHour\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$minute\t\t\tMinute\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$second\t\t\tSecond\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$month\t\t\tMonth (1 to 12)\n *\t@param\tint\t\t\t$day\t\t\tDay (1 to 31)\n *\t@param\tint\t\t\t$year\t\t\tYear\n *\t@param\tmixed\t\t$gm\t\t\t\tTrue or 1 or 'gmt'=Input informations are GMT values\n *\t\t\t\t\t\t\t\t\t\tFalse or 0 or 'server' = local to server TZ\n *\t\t\t\t\t\t\t\t\t\t'user' = local to user TZ\n *\t\t\t\t\t\t\t\t\t\t'tz,TimeZone' = use specified timezone\n *\t@param\tint\t\t\t$check\t\t\t0=No check on parameters (Can use day 32, etc...)\n *\t@return\tint|string\t\t\t\t\tDate as a timestamp, '' or false if error\n * \t@see \t\t\t\t\t\t\t\tdol_print_date, dol_stringtotime, dol_getdate\n */\nfunction dol_mktime($hour,$minute,$second,$month,$day,$year,$gm=false,$check=1)\n{\n\tglobal $conf;\n\t//print \"- \".$hour.\",\".$minute.\",\".$second.\",\".$month.\",\".$day.\",\".$year.\",\".$_SERVER[\"WINDIR\"].\" -\";\n\n\t// Clean parameters\n\tif ($hour   == -1 || empty($hour)) $hour=0;\n\tif ($minute == -1 || empty($minute)) $minute=0;\n\tif ($second == -1 || empty($second)) $second=0;\n\n\t// Check parameters\n\tif ($check)\n\t{\n\t\tif (! $month || ! $day)  return '';\n\t\tif ($day   > 31) return '';\n\t\tif ($month > 12) return '';\n\t\tif ($hour  < 0 || $hour   > 24) return '';\n\t\tif ($minute< 0 || $minute > 60) return '';\n\t\tif ($second< 0 || $second > 60) return '';\n\t}\n\n\tif (method_exists('DateTime','getTimestamp'))\n\t{\n\t\tif (empty($gm) || $gm === 'server')\n\t\t{\n\t\t\t$default_timezone=@date_default_timezone_get();\t\t// Example 'Europe/Berlin'\n\t\t\t$localtz = new DateTimeZone($default_timezone);\n\t\t}\n\t\telse if ($gm === 'user')\n\t\t{\n\t\t\t// We use dol_tz_string first because it is more reliable.\n\t\t\t$default_timezone=(empty($_SESSION[\"dol_tz_string\"])?@date_default_timezone_get():$_SESSION[\"dol_tz_string\"]);\t\t// Example 'Europe/Berlin'\n\t\t\ttry {\n\t\t\t\t$localtz = new DateTimeZone($default_timezone);\n\t\t\t}\n\t\t\tcatch(Exception $e)\n\t\t\t{\n\t\t\t\tdol_syslog(\"Warning dol_tz_string contains an invalid value \".$_SESSION[\"dol_tz_string\"], LOG_WARNING);\n\t\t\t\t$default_timezone=@date_default_timezone_get();\n\t\t\t}\n\t\t}\n\t\telse if (strrpos($gm, \"tz,\") !== false)\n\t\t{\n\t\t\t$timezone=str_replace(\"tz,\", \"\", $gm);  // Example 'tz,Europe/Berlin'\n\t\t\ttry\n\t\t\t{\n\t\t\t\t$localtz = new DateTimeZone($timezone);\n\t\t\t}\n\t\t\tcatch(Exception $e)\n\t\t\t{\n\t\t\t\tdol_syslog(\"Warning passed timezone contains an invalid value \".$timezone, LOG_WARNING);\n\t\t\t}\n\t\t}\n\n\t\tif (empty($localtz)) {\n\t\t\t$localtz = new DateTimeZone('UTC');\n\t\t}\n\n\t\t$dt = new DateTime(null,$localtz);\n\t\t$dt->setDate($year,$month,$day);\n\t\t$dt->setTime((int) $hour, (int) $minute, (int) $second);\n\t\t$date=$dt->getTimestamp();\t// should include daylight saving time\n\t\treturn $date;\n\t}\n\telse\n\t{\n\t\tdol_print_error('','PHP version must be 5.3+');\n\t\treturn '';\n\t}\n}\n\n\n/**\n *\tReturn date for now. In mot cases, we use this function without parameters (that means GMT time).\n *\n * \t@param\tstring\t\t$mode\t'gmt' => we return GMT timestamp,\n * \t\t\t\t\t\t\t\t'tzserver' => we add the PHP server timezone\n *  \t\t\t\t\t\t\t'tzref' => we add the company timezone\n * \t\t\t\t\t\t\t\t'tzuser' => we add the user timezone\n *\t@return int   $date\tTimestamp\n */\nfunction dol_now($mode='gmt')\n{\n    $ret='';\n\t// Note that gmmktime and mktime return same value (GMT) when used without parameters\n\t//if ($mode == 'gmt') $ret=gmmktime(); // Strict Standards: gmmktime(): You should be using the time() function instead\n\tif ($mode == 'gmt') $ret=time();\t// Time for now at greenwich.\n\telse if ($mode == 'tzserver')\t\t// Time for now with PHP server timezone added\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t$tzsecond=getServerTimeZoneInt('now');    // Contains tz+dayling saving time\n\t\t$ret=dol_now('gmt')+($tzsecond*3600);\n\t}\n\t/*else if ($mode == 'tzref')\t\t\t\t// Time for now with parent company timezone is added\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t$tzsecond=getParentCompanyTimeZoneInt();    // Contains tz+dayling saving time\n\t\t$ret=dol_now('gmt')+($tzsecond*3600);\n\t}*/\n\telse if ($mode == 'tzuser')\t\t\t\t// Time for now with user timezone added\n\t{\n\t\t//print 'eeee'.time().'-'.mktime().'-'.gmmktime();\n\t\t$offsettz=(empty($_SESSION['dol_tz'])?0:$_SESSION['dol_tz'])*60*60;\n\t\t$offsetdst=(empty($_SESSION['dol_dst'])?0:$_SESSION['dol_dst'])*60*60;\n\t\t$ret=dol_now('gmt')+($offsettz+$offsetdst);\n\t}\n\treturn $ret;\n}\n\n\n/**\n * Return string with formated size\n *\n * @param\tint\t\t$size\t\tSize to print\n * @param\tint\t\t$shortvalue\tTell if we want long value to use another unit (Ex: 1.5Kb instead of 1500b)\n * @param\tint\t\t$shortunit\tUse short value of size unit\n * @return\tstring\t\t\t\tLink\n */\nfunction dol_print_size($size,$shortvalue=0,$shortunit=0)\n{\n\tglobal $conf,$langs;\n\t$level=1024;\n\n\tif (! empty($conf->dol_optimize_smallscreen)) $shortunit=1;\n\n\t// Set value text\n\tif (empty($shortvalue) || $size < ($level*10))\n\t{\n\t\t$ret=$size;\n\t\t$textunitshort=$langs->trans(\"b\");\n\t\t$textunitlong=$langs->trans(\"Bytes\");\n\t}\n\telse\n\t{\n\t\t$ret=round($size/$level,0);\n\t\t$textunitshort=$langs->trans(\"Kb\");\n\t\t$textunitlong=$langs->trans(\"KiloBytes\");\n\t}\n\t// Use long or short text unit\n\tif (empty($shortunit)) { $ret.=' '.$textunitlong; }\n\telse { $ret.=' '.$textunitshort; }\n\n\treturn $ret;\n}\n\n/**\n * Show Url link\n *\n * @param\tstring\t\t$url\t\tUrl to show\n * @param\tstring\t\t$target\t\tTarget for link\n * @param\tint\t\t\t$max\t\tMax number of characters to show\n * @param\tint\t\t\t$withpicto\tWith picto\n * @return\tstring\t\t\t\t\tHTML Link\n */\nfunction dol_print_url($url,$target='_blank',$max=32,$withpicto=0)\n{\n\tglobal $langs;\n\n\tif (empty($url)) return '';\n\n\t$link='<a href=\"';\n\tif (! preg_match('/^http/i',$url)) $link.='http://';\n\t$link.=$url;\n\t$link.='\"';\n\tif ($target) $link.=' target=\"'.$target.'\"';\n\t$link.='>';\n\tif (! preg_match('/^http/i',$url)) $link.='http://';\n\t$link.=dol_trunc($url,$max);\n\t$link.='</a>';\n\treturn '<div class=\"nospan float\" style=\"margin-right: 10px\">'.($withpicto?img_picto($langs->trans(\"Url\"), 'object_globe.png').' ':'').$link.'</div>';\n}\n\n/**\n * Show EMail link\n *\n * @param\tstring\t\t$email\t\t\tEMail to show (only email, without 'Name of recipient' before)\n * @param \tint\t\t\t$cid \t\t\tId of contact if known\n * @param \tint\t\t\t$socid \t\t\tId of third party if known\n * @param \tint\t\t\t$addlink\t\t0=no link, 1=email has a html email link (+ link to create action if constant AGENDA_ADDACTIONFOREMAIL is on)\n * @param\tint\t\t\t$max\t\t\tMax number of characters to show\n * @param\tint\t\t\t$showinvalid\tShow warning if syntax email is wrong\n * @param\tint\t\t\t$withpicto\t\tShow picto\n * @return\tstring\t\t\t\t\t\tHTML Link\n */\nfunction dol_print_email($email,$cid=0,$socid=0,$addlink=0,$max=64,$showinvalid=1,$withpicto=0)\n{\n\tglobal $conf,$user,$langs;\n\n\t$newemail=$email;\n\n\tif (empty($email)) return '&nbsp;';\n\n\tif (! empty($addlink))\n\t{\n\t\t$newemail='<a style=\"text-overflow: ellipsis;\" href=\"';\n\t\tif (! preg_match('/^mailto:/i',$email)) $newemail.='mailto:';\n\t\t$newemail.=$email;\n\t\t$newemail.='\">';\n\t\t$newemail.=dol_trunc($email,$max);\n\t\t$newemail.='</a>';\n\t\tif ($showinvalid && ! isValidEmail($email))\n\t\t{\n\t\t\t$langs->load(\"errors\");\n\t\t\t$newemail.=img_warning($langs->trans(\"ErrorBadEMail\",$email));\n\t\t}\n\n\t\tif (($cid || $socid) && ! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\t{\n\t\t\t$type='AC_EMAIL'; $link='';\n\t\t\tif (! empty($conf->global->AGENDA_ADDACTIONFOREMAIL)) $link='<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.'&amp;contactid='.$cid.'&amp;socid='.$socid.'\">'.img_object($langs->trans(\"AddAction\"),\"calendar\").'</a>';\n\t\t\tif ($link) $newemail='<div>'.$newemail.' '.$link.'</div>';\n\t\t}\n\t}\n\telse\n\t{\n\t\tif ($showinvalid && ! isValidEmail($email))\n\t\t{\n\t\t\t$langs->load(\"errors\");\n\t\t\t$newemail.=img_warning($langs->trans(\"ErrorBadEMail\",$email));\n\t\t}\n\t}\n\treturn '<div class=\"nospan float\" style=\"margin-right: 10px\">'.($withpicto?img_picto($langs->trans(\"EMail\"), 'object_email.png').' ':'').$newemail.'</div>';\n}\n\n/**\n * Show Skype link\n *\n * @param\tstring\t\t$skype\t\t\tSkype to show (only skype, without 'Name of recipient' before)\n * @param\tint \t\t$cid \t\t\tId of contact if known\n * @param\tint \t\t$socid \t\t\tId of third party if known\n * @param\tint \t\t$addlink\t\t0=no link to create action\n * @param\tint\t\t\t$max\t\t\tMax number of characters to show\n * @return\tstring\t\t\t\t\t\tHTML Link\n */\nfunction dol_print_skype($skype,$cid=0,$socid=0,$addlink=0,$max=64)\n{\n\tglobal $conf,$user,$langs;\n\n\t$newskype=$skype;\n\n\tif (empty($skype)) return '&nbsp;';\n\n\tif (! empty($addlink))\n\t{\n\t\t$newskype =img_picto($langs->trans(\"Skype\"), 'object_skype.png');\n\t\t$newskype.= '&nbsp;';\n\t\t$newskype.=dol_trunc($skype,$max);\n\t\t$newskype.= '&nbsp;';\n\t\t$newskype.='<a href=\"skype:';\n\t\t$newskype.=dol_trunc($skype,$max);\n\t\t$newskype.='?call\" alt=\"'.$langs->trans(\"Call\").'&nbsp;'.$skype.'\" title=\"'.$langs->trans(\"Call\").'&nbsp;'.$skype.'\">';\n\t\t$newskype.='<img src=\"'.DOL_URL_ROOT.'/theme/common/skype_callbutton.png\" border=\"0\">';\n\t\t$newskype.='</a>&nbsp;&nbsp;&nbsp;<a href=\"skype:';\n\t\t$newskype.=dol_trunc($skype,$max);\n\t\t$newskype.='?chat\" alt=\"'.$langs->trans(\"Chat\").'&nbsp;'.$skype.'\" title=\"'.$langs->trans(\"Chat\").'&nbsp;'.$skype.'\">';\n\t\t$newskype.='<img src=\"'.DOL_URL_ROOT.'/theme/common/skype_chatbutton.png\" border=\"0\">';\n\t\t$newskype.='</a>';\n\n\t\tif (($cid || $socid) && ! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\t{\n\t\t\t$type='AC_SKYPE'; $link='';\n\t\t\tif (! empty($conf->global->AGENDA_ADDACTIONFORSKYPE)) $link='<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.'&amp;contactid='.$cid.'&amp;socid='.$socid.'\">'.img_object($langs->trans(\"AddAction\"),\"calendar\").'</a>';\n\t\t\t$newskype='<div class=\"divskype nowrap\">'.$newskype.($link?' '.$link:'').'</div>';\n\t\t}\n\t}\n\telse\n\t{\n\t\t$langs->load(\"errors\");\n\t\t$newskype.=img_warning($langs->trans(\"ErrorBadSkype\",$skype));\n\t}\n\treturn $newskype;\n}\n\n/**\n * \tFormat phone numbers according to country\n *\n * \t@param  string  $phone          Phone number to format\n * \t@param  string  $countrycode    Country code to use for formatting\n * \t@param \tint\t\t$cid \t\t    Id of contact if known\n * \t@param \tint\t\t$socid          Id of third party if known\n * \t@param \tstring\t$addlink\t    ''=no link to create action, 'AC_TEL'=add link to clicktodial (if module enabled) and add link to create event (if conf->global->AGENDA_ADDACTIONFORPHONE set)\n * \t@param \tstring\t$separ \t\t    Separation between numbers for a better visibility example : xx.xx.xx.xx.xx\n *  @param\tstring  $withpicto      Show picto\n *  @param\tstring\t$titlealt\t    Text to show on alt\n *  @param  int     $adddivfloat    Add div float around phone.\n * \t@return string \t\t\t\t    Formated phone number\n */\nfunction dol_print_phone($phone,$countrycode='',$cid=0,$socid=0,$addlink='',$separ=\"&nbsp;\",$withpicto='',$titlealt='',$adddivfloat=0)\n{\n\tglobal $conf,$user,$langs,$mysoc;\n\n\t// Clean phone parameter\n\t$phone = preg_replace(\"/[\\s.-]/\",\"\",trim($phone));\n\tif (empty($phone)) { return ''; }\n\tif (empty($countrycode)) $countrycode=$mysoc->country_code;\n\n\t// Short format for small screens\n\tif ($conf->dol_optimize_smallscreen) $separ='';\n\n\t$newphone=$phone;\n\tif (strtoupper($countrycode) == \"FR\")\n\t{\n\t\t// France\n\t\tif (dol_strlen($phone) == 10) {\n\t\t\t$newphone=substr($newphone,0,2).$separ.substr($newphone,2,2).$separ.substr($newphone,4,2).$separ.substr($newphone,6,2).$separ.substr($newphone,8,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 7)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,3).$separ.substr($newphone,3,2).$separ.substr($newphone,5,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 9)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,2).$separ.substr($newphone,2,3).$separ.substr($newphone,5,2).$separ.substr($newphone,7,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 11)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,3).$separ.substr($newphone,3,2).$separ.substr($newphone,5,2).$separ.substr($newphone,7,2).$separ.substr($newphone,9,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 12)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,4).$separ.substr($newphone,4,2).$separ.substr($newphone,6,2).$separ.substr($newphone,8,2).$separ.substr($newphone,10,2);\n\t\t}\n\t}\n\n\tif (strtoupper($countrycode) == \"CA\")\n\t{\n\t    if (dol_strlen($phone) == 10) {\n\t        $newphone=($separ!=''?'(':'').substr($newphone,0,3).($separ!=''?')':'').$separ.substr($newphone,3,3).($separ!=''?'-':'').substr($newphone,6,4);\n\t    }\n\t}\n\n\tif (! empty($addlink))\t// Link on phone number (+ link to add action if conf->global->AGENDA_ADDACTIONFORPHONE set)\n\t{\n\t\tif (! empty($conf->browser->phone) || (! empty($conf->clicktodial->enabled) && ! empty($conf->global->CLICKTODIAL_USE_TEL_LINK_ON_PHONE_NUMBERS)))\t// If phone or option for, we use link of phone\n\t\t{\n\t\t\t$newphone ='<a href=\"tel:'.$phone.'\"';\n\t\t\t$newphone.='>'.$phone.'</a>';\n\t\t}\n\t\telse if (! empty($conf->clicktodial->enabled) && $addlink == 'AC_TEL')\t\t// If click to dial, we use click to dial url\n\t\t{\n\t\t\tif (empty($user->clicktodial_loaded)) $user->fetch_clicktodial();\n\n\t\t\t// Define urlmask\n\t\t\t$urlmask='ErrorClickToDialModuleNotConfigured';\n\t\t\tif (! empty($conf->global->CLICKTODIAL_URL)) $urlmask=$conf->global->CLICKTODIAL_URL;\n\t\t\tif (! empty($user->clicktodial_url)) $urlmask=$user->clicktodial_url;\n\n\t\t\t$clicktodial_poste=(! empty($user->clicktodial_poste)?urlencode($user->clicktodial_poste):'');\n\t\t\t$clicktodial_login=(! empty($user->clicktodial_login)?urlencode($user->clicktodial_login):'');\n\t\t\t$clicktodial_password=(! empty($user->clicktodial_password)?urlencode($user->clicktodial_password):'');\n\t\t\t// This line is for backward compatibility\n\t\t\t$url = sprintf($urlmask, urlencode($phone), $clicktodial_poste, $clicktodial_login, $clicktodial_password);\n\t\t\t// Thoose lines are for substitution\n\t\t\t$substitarray=array('__PHONEFROM__'=>$clicktodial_poste,\n\t\t\t\t\t\t\t\t'__PHONETO__'=>urlencode($phone),\n\t\t\t\t\t\t\t\t'__LOGIN__'=>$clicktodial_login,\n\t\t\t\t\t\t\t\t'__PASS__'=>$clicktodial_password);\n\t\t\t$url = make_substitutions($url, $substitarray);\n\t\t\t$newphonesav=$newphone;\n\t\t\t$newphone ='<a href=\"'.$url.'\"';\n\t\t\tif (! empty($conf->global->CLICKTODIAL_FORCENEWTARGET)) $newphone.=' target=\"_blank\"';\n\t\t\t$newphone.='>'.$newphonesav.'</a>';\n\t\t}\n\n\t\t//if (($cid || $socid) && ! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\tif (! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\t{\n\t\t\t$type='AC_TEL'; $link='';\n\t\t\tif ($addlink == 'AC_FAX') $type='AC_FAX';\n\t\t\tif (! empty($conf->global->AGENDA_ADDACTIONFORPHONE)) $link='<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.($cid?'&amp;contactid='.$cid:'').($socid?'&amp;socid='.$socid:'').'\">'.img_object($langs->trans(\"AddAction\"),\"calendar\").'</a>';\n\t\t\tif ($link) $newphone='<div>'.$newphone.' '.$link.'</div>';\n\t\t}\n\t}\n\n\tif (empty($titlealt))\n\t{\n\t\t$titlealt=($withpicto=='fax'?$langs->trans(\"Fax\"):$langs->trans(\"Phone\"));\n\t}\n\t$rep='';\n\tif ($adddivfloat) $rep.='<div class=\"nospan float\" style=\"margin-right: 10px\">';\n\telse $rep.='<span style=\"margin-right: 10px;\">';\n\t$rep.=($withpicto?img_picto($titlealt, 'object_'.($withpicto=='fax'?'phoning_fax':'phoning').'.png').' ':'').$newphone;\n\tif ($adddivfloat) $rep.='</div>';\n\telse $rep.='</span>';\n\treturn $rep;\n}\n\n/**\n * \tReturn an IP formated to be shown on screen\n *\n * \t@param\tstring\t$ip\t\t\tIP\n * \t@param\tint\t\t$mode\t\t0=return IP + country/flag, 1=return only country/flag, 2=return only IP\n * \t@return string \t\t\t\tFormated IP, with country if GeoIP module is enabled\n */\nfunction dol_print_ip($ip,$mode=0)\n{\n\tglobal $conf,$langs;\n\n\t$ret='';\n\n\tif (empty($mode)) $ret.=$ip;\n\n\tif (! empty($conf->geoipmaxmind->enabled) && $mode != 2)\n\t{\n\t\t$datafile=$conf->global->GEOIPMAXMIND_COUNTRY_DATAFILE;\n\t\t//$ip='24.24.24.24';\n\t\t//$datafile='E:\\Mes Sites\\Web\\Admin1\\awstats\\maxmind\\GeoIP.dat';    Note that this must be downloaded datafile (not same than datafile provided with ubuntu packages)\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/dolgeoip.class.php';\n\t\t$geoip=new DolGeoIP('country',$datafile);\n\t\t//print 'ip='.$ip.' databaseType='.$geoip->gi->databaseType.\" GEOIP_CITY_EDITION_REV1=\".GEOIP_CITY_EDITION_REV1.\"\\n\";\n\t\t//print \"geoip_country_id_by_addr=\".geoip_country_id_by_addr($geoip->gi,$ip).\"\\n\";\n\t\t$countrycode=$geoip->getCountryCodeFromIP($ip);\n\t\tif ($countrycode)\t// If success, countrycode is us, fr, ...\n\t\t{\n\t\t\tif (file_exists(DOL_DOCUMENT_ROOT.'/theme/common/flags/'.$countrycode.'.png'))\n\t\t\t{\n\t\t\t\t$ret.=' '.img_picto($countrycode.' '.$langs->trans(\"AccordingToGeoIPDatabase\"),DOL_URL_ROOT.'/theme/common/flags/'.$countrycode.'.png','',1);\n\t\t\t}\n\t\t\telse $ret.=' ('.$countrycode.')';\n\t\t}\n\t}\n\n\treturn $ret;\n}\n\n/**\n *  Return country code for current user.\n *  If software is used inside a local network, detection may fails (we need a public ip)\n *\n *  @return     string      Country code (fr, es, it, us, ...)\n */\nfunction dol_user_country()\n{\n\tglobal $conf,$langs,$user;\n\n\t//$ret=$user->xxx;\n\t$ret='';\n\tif (! empty($conf->geoipmaxmind->enabled))\n\t{\n\t\t$ip=$_SERVER[\"REMOTE_ADDR\"];\n\t\t$datafile=$conf->global->GEOIPMAXMIND_COUNTRY_DATAFILE;\n\t\t//$ip='24.24.24.24';\n\t\t//$datafile='E:\\Mes Sites\\Web\\Admin1\\awstats\\maxmind\\GeoIP.dat';\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/dolgeoip.class.php';\n\t\t$geoip=new DolGeoIP('country',$datafile);\n\t\t$countrycode=$geoip->getCountryCodeFromIP($ip);\n\t\t$ret=$countrycode;\n\t}\n\treturn $ret;\n}\n\n/**\n *  Format address string\n *\n *  @param\tstring\t$address    Address\n *  @param  int\t\t$htmlid     Html ID (for example 'gmap')\n *  @param  int\t\t$mode       thirdparty|contact|member|other\n *  @param  int\t\t$id         Id of object\n *  @param\tint\t\t$noprint\tNo output. Result is the function return\n *  @param  string  $charfornl  Char to use instead of nl2br. '' means we use a standad nl2br.\n *  @return string|void\t\t\tNothing if noprint is 0, formatted address if noprint is 1\n *  @see dol_format_address\n */\nfunction dol_print_address($address, $htmlid, $mode, $id, $noprint=0, $charfornl='')\n{\n\tglobal $conf, $user, $langs, $hookmanager;\n\n\t$out = '';\n\n\tif ($address)\n\t{\n        if ($hookmanager) {\n            $parameters = array('element' => $mode, 'id' => $id);\n            $reshook = $hookmanager->executeHooks('printAddress', $parameters, $address);\n            $out.=$hookmanager->resPrint;\n        }\n        if (empty($reshook))\n        {\n            if (empty($charfornl)) $out.=nl2br($address);\n            else $out.=preg_replace('/[\\r\\n]+/', $charfornl, $address);\n\n            $showgmap=$showomap=0;\n\n            // TODO Add a hook here\n            if (($mode=='thirdparty' || $mode =='societe') && ! empty($conf->google->enabled) && ! empty($conf->global->GOOGLE_ENABLE_GMAPS)) $showgmap=1;\n            if ($mode=='contact' && ! empty($conf->google->enabled) && ! empty($conf->global->GOOGLE_ENABLE_GMAPS_CONTACTS)) $showgmap=1;\n            if ($mode=='member' && ! empty($conf->google->enabled) && ! empty($conf->global->GOOGLE_ENABLE_GMAPS_MEMBERS)) $showgmap=1;\n            if (($mode=='thirdparty' || $mode =='societe') && ! empty($conf->openstreetmap->enabled) && ! empty($conf->global->OPENSTREETMAP_ENABLE_MAPS)) $showomap=1;\n            if ($mode=='contact' && ! empty($conf->openstreetmap->enabled) && ! empty($conf->global->OPENSTREETMAP_ENABLE_MAPS_CONTACTS)) $showomap=1;\n            if ($mode=='member' && ! empty($conf->openstreetmap->enabled) && ! empty($conf->global->OPENSTREETMAP_ENABLE_MAPS_MEMBERS)) $showomap=1;\n\n            if ($showgmap)\n            {\n                $url=dol_buildpath('/google/gmaps.php?mode='.$mode.'&id='.$id,1);\n                $out.=' <a href=\"'.$url.'\" target=\"_gmaps\"><img id=\"'.$htmlid.'\" class=\"valigntextbottom\" src=\"'.DOL_URL_ROOT.'/theme/common/gmap.png\"></a>';\n            }\n            if ($showomap)\n            {\n                $url=dol_buildpath('/openstreetmap/maps.php?mode='.$mode.'&id='.$id,1);\n                $out.=' <a href=\"'.$url.'\" target=\"_gmaps\"><img id=\"'.$htmlid.'_openstreetmap\" class=\"valigntextbottom\" src=\"'.DOL_URL_ROOT.'/theme/common/gmap.png\"></a>';\n            }\n        }\n\t}\n\tif ($noprint) return $out;\n\telse print $out;\n}\n\n\n/**\n *\tReturn true if email syntax is ok\n *\n *\t@param\t    string\t\t$address    \t\t\temail (Ex: \"toto@examle.com\", \"John Do <johndo@example.com>\")\n *  @param\t\tint\t\t\t$acceptsupervisorkey\tIf 1, the special string '__SUPERVISOREMAIL__' is also accepted as valid\n *\t@return     boolean     \t\t\t\t\t\ttrue if email syntax is OK, false if KO or empty string\n */\nfunction isValidEmail($address, $acceptsupervisorkey=0)\n{\n\tif ($acceptsupervisorkey && $address == '__SUPERVISOREMAIL__') return true;\n\tif (filter_var($address, FILTER_VALIDATE_EMAIL)) return true;\n\n\treturn false;\n}\n\n/**\n *  Return true if phone number syntax is ok\n *  TODO Decide what to do with this\n *\n *  @param\tstring\t\t$phone\t\tphone (Ex: \"0601010101\")\n *  @return boolean     \t\t\ttrue if phone syntax is OK, false if KO or empty string\n */\nfunction isValidPhone($phone)\n{\n\treturn true;\n}\n\n\n/**\n * Make a strlen call. Works even if mbstring module not enabled\n *\n * @param   string\t\t$string\t\t\t\tString to calculate length\n * @param   string\t\t$stringencoding\t\tEncoding of string\n * @return  int\t\t\t\t\t\t\t\tLength of string\n */\nfunction dol_strlen($string,$stringencoding='UTF-8')\n{\n\tif (function_exists('mb_strlen')) return mb_strlen($string,$stringencoding);\n\telse return strlen($string);\n}\n\n/**\n * Make a substring. Works even in mbstring module is not enabled.\n *\n * @param\tstring\t$string\t\t\t\tString to scan\n * @param\tstring\t$start\t\t\t\tStart position\n * @param\tint\t\t$length\t\t\t\tLength\n * @param   string\t$stringencoding\t\tPage code used for input string encoding\n * @return  string\t\t\t\t\t\tsubstring\n */\nfunction dol_substr($string,$start,$length,$stringencoding='')\n{\n\tglobal $langs;\n\n\tif (empty($stringencoding)) $stringencoding=$langs->charset_output;\n\n\t$ret='';\n\tif (function_exists('mb_substr'))\n\t{\n\t\t$ret=mb_substr($string,$start,$length,$stringencoding);\n\t}\n\telse\n\t{\n\t\t$ret=substr($string,$start,$length);\n\t}\n\treturn $ret;\n}\n\n\n/**\n *  Show a javascript graph.\n *  Do not use this function anymore. Use DolGraph class instead.\n *\n *  @param\t\tstring\t$htmlid\t\t\tHtml id name\n *  @param\t\tint\t\t$width\t\t\tWidth in pixel\n *  @param\t\tint\t\t$height\t\t\tHeight in pixel\n *  @param\t\tarray\t$data\t\t\tData array\n *  @param\t\tint\t\t$showlegend\t\t1 to show legend, 0 otherwise\n *  @param\t\tstring\t$type\t\t\tType of graph ('pie', 'barline')\n *  @param\t\tint\t\t$showpercent\tShow percent (with type='pie' only)\n *  @param\t\tstring\t$url\t\t\tParam to add an url to click values\n *  @param\t\tint\t\t$combineother\t0=No combine, 0.05=Combine if lower than 5%\n *  @param      int     $shownographyet Show graph to say there is not enough data\n *  @return\t\tvoid\n *  @deprecated\n *  @see DolGraph\n */\nfunction dol_print_graph($htmlid,$width,$height,$data,$showlegend=0,$type='pie',$showpercent=0,$url='',$combineother=0.05,$shownographyet=0)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tglobal $conf,$langs;\n\tglobal $theme_datacolor;    // To have var kept when function is called several times\n\n\tif ($shownographyet)\n\t{\n\t    print '<div class=\"nographyet\" style=\"width:'.$width.'px;height:'.$height.'px;\"></div>';\n\t    print '<div class=\"nographyettext\">'.$langs->trans(\"NotEnoughDataYet\").'</div>';\n\t    return;\n\t}\n\n\tif (empty($conf->use_javascript_ajax)) return;\n\t$jsgraphlib='flot';\n\t$datacolor=array();\n\n\t// Load colors of theme into $datacolor array\n\t$color_file = DOL_DOCUMENT_ROOT.\"/theme/\".$conf->theme.\"/graph-color.php\";\n\tif (is_readable($color_file))\n\t{\n\t\tinclude_once $color_file;\n\t\tif (isset($theme_datacolor))\n\t\t{\n\t\t\t$datacolor=array();\n\t\t\tforeach($theme_datacolor as $val)\n\t\t\t{\n\t\t\t\t$datacolor[]=\"#\".sprintf(\"%02x\",$val[0]).sprintf(\"%02x\",$val[1]).sprintf(\"%02x\",$val[2]);\n\t\t\t}\n\t\t}\n\t}\n\tprint '<div id=\"'.$htmlid.'\" style=\"width:'.$width.'px;height:'.$height.'px;\"></div>';\n\n\t// We use Flot js lib\n\tif ($jsgraphlib == 'flot')\n\t{\n\t\tif ($type == 'pie')\n\t\t{\n\t\t\t// data is   array('series'=>array(serie1,serie2,...),\n\t\t\t//                 'seriestype'=>array('bar','line',...),\n\t\t\t//                 'seriescolor'=>array(0=>'#999999',1=>'#999999',...)\n\t\t\t//                 'xlabel'=>array(0=>labelx1,1=>labelx2,...));\n\t\t\t// serieX is array('label'=>'label', data=>val)\n\t\t\tprint '\n\t\t\t<script type=\"text/javascript\">\n\t\t\t$(function () {\n\t\t\t\tvar data = '.json_encode($data['series']).';\n\n\t\t\t\tfunction plotWithOptions() {\n\t\t\t\t\t$.plot($(\"#'.$htmlid.'\"), data,\n\t\t\t\t\t{\n\t\t\t\t\t\tseries: {\n\t\t\t\t\t\t\tpie: {\n\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\tradius: 0.8,';\n\t\t\tif ($combineother)\n\t\t\t{\n\t\t\t\tprint '\n\t\t\t\t\t\t\t\tcombine: {\n\t\t\t\t\t\t\t\t \tthreshold: '.$combineother.'\n\t\t\t\t\t\t\t\t},';\n\t\t\t}\n\t\t\tprint '\n\t\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\t\tradius: 0.9,\n\t\t\t\t\t\t\t\t\tformatter: function(label, series) {\n\t\t\t\t\t\t\t\t\t\tvar percent=Math.round(series.percent);\n\t\t\t\t\t\t\t\t\t\tvar number=series.data[0][1];\n\t\t\t\t\t\t\t\t\t\treturn \\'';\n\t\t\t\t\t\t\t\t\t\tprint '<div style=\"font-size:8pt;text-align:center;padding:2px;color:black;\">';\n\t\t\t\t\t\t\t\t\t\tif ($url) print '<a style=\"color: #FFFFFF;\" border=\"0\" href=\"'.$url.'=\">';\n\t\t\t\t\t\t\t\t\t\tprint '\\'+'.($showlegend?'number':'label+\\' \\'+number');\n\t\t\t\t\t\t\t\t\t\tif (! empty($showpercent)) print '+\\'<br/>\\'+percent+\\'%\\'';\n\t\t\t\t\t\t\t\t\t\tprint '+\\'';\n\t\t\t\t\t\t\t\t\t\tif ($url) print '</a>';\n\t\t\t\t\t\t\t\t\t\tprint '</div>\\';\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tbackground: {\n\t\t\t\t\t\t\t\t\t\topacity: 0.0,\n\t\t\t\t\t\t\t\t\t\tcolor: \\'#000000\\'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tzoom: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpan: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},';\n\t\t\t\t\t\tif (count($datacolor))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprint 'colors: '.(! empty($data['seriescolor']) ? json_encode($data['seriescolor']) : json_encode($datacolor)).',';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint 'legend: {show: '.($showlegend?'true':'false').', position: \\'ne\\' }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tplotWithOptions();\n\t\t\t});\n\t\t\t</script>';\n\t\t}\n\t\telse if ($type == 'barline')\n\t\t{\n\t\t\t// data is   array('series'=>array(serie1,serie2,...),\n\t\t\t//                 'seriestype'=>array('bar','line',...),\n\t\t\t//                 'seriescolor'=>array(0=>'#999999',1=>'#999999',...)\n\t\t\t//                 'xlabel'=>array(0=>labelx1,1=>labelx2,...));\n\t\t\t// serieX is array('label'=>'label', data=>array(0=>y1,1=>y2,...)) with same nb of value than into xlabel\n\t\t\tprint '\n\t\t\t<script type=\"text/javascript\">\n\t\t\t$(function () {\n\t\t\t\tvar data = [';\n\t\t\t\t$i=0; $outputserie=0;\n\t\t\t\tforeach($data['series'] as $serie)\n\t\t\t\t{\n\t\t\t\t\tif ($data['seriestype'][$i]=='line') { $i++; continue; };\n\t\t\t\t\tif ($outputserie > 0) print ',';\n\t\t\t\t\tprint '{ bars: { stack: 0, show: true, barWidth: 0.9, align: \\'center\\' }, label: \\''.dol_escape_js($serie['label']).'\\', data: '.json_encode($serie['data']).'}'.\"\\n\";\n\t\t\t\t\t$outputserie++; $i++;\n\t\t\t\t}\n\t\t\t\tif ($outputserie) print ', ';\n\t\t\t\t//print '];\n\t\t\t\t//var datalines = [';\n\t\t\t\t$i=0; $outputserie=0;\n\t\t\t\tforeach($data['series'] as $serie)\n\t\t\t\t{\n\t\t\t\t\tif (empty($data['seriestype'][$i]) || $data['seriestype'][$i]=='bar') { $i++; continue; };\n\t\t\t\t\tif ($outputserie > 0) print ',';\n\t\t\t\t\tprint '{ lines: { show: true }, label: \\''.dol_escape_js($serie['label']).'\\', data: '.json_encode($serie['data']).'}'.\"\\n\";\n\t\t\t\t\t$outputserie++; $i++;\n\t\t\t\t}\n\t\t\t\tprint '];\n\t\t\t\tvar dataticks = '.json_encode($data['xlabel']).'\n\n\t\t\t\tfunction plotWithOptions() {\n\t\t\t\t\t$.plot(jQuery(\"#'.$htmlid.'\"), data,\n\t\t\t\t\t{\n\t\t\t\t\t\tseries: {\n\t\t\t\t\t\t\tstack: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\tzoom: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpan: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},';\n\t\t\t\t\t\tif (count($datacolor))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprint 'colors: '.json_encode($datacolor).',';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint 'legend: {show: '.($showlegend?'true':'false').'},\n\t\t\t\t\t\txaxis: {ticks: dataticks}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tplotWithOptions();\n\t\t\t});\n\t\t\t</script>';\n\t\t}\n\t\telse print 'BadValueForParameterType';\n\t}\n}\n\n/**\n *\tTruncate a string to a particular length adding '...' if string larger than length.\n * \tIf length = max length+1, we do no truncate to avoid having just 1 char replaced with '...'.\n *  MAIN_DISABLE_TRUNC=1 can disable all truncings\n *\n *\t@param\tstring\t$string\t\t\t\tString to truncate\n *\t@param  int\t\t$size\t\t\t\tMax string size visible (excluding ...). 0 for no limit. WARNING: Final string size can have 3 more chars (if we added ..., or if size was max+1 or max+2 or max+3 so it does not worse to replace with ...)\n *\t@param\tstring\t$trunc\t\t\t\tWhere to trunc: right, left, middle (size must be a 2 power), wrap\n * \t@param\tstring\t$stringencoding\t\tTell what is source string encoding\n *  @param\tint\t\t$nodot\t\t\t\tTruncation do not add ... after truncation. So it's an exact truncation.\n *  @param  int     $display            Trunc is use to display and can be changed for small screen. TODO Remove this param (must be dealt with CSS)\n *\t@return string\t\t\t\t\t\tTruncated string. WARNING: length is never higher than $size if $nodot is set, but can be 3 chars higher otherwise.\n */\nfunction dol_trunc($string,$size=40,$trunc='right',$stringencoding='UTF-8',$nodot=0, $display=0)\n{\n\tglobal $conf;\n\n\tif ($size==0 || ! empty($conf->global->MAIN_DISABLE_TRUNC)) return $string;\n\n\tif (empty($stringencoding)) $stringencoding='UTF-8';\n\t// reduce for small screen\n\tif ($conf->dol_optimize_smallscreen==1 && $display==1) $size = round($size/3);\n\n\t// We go always here\n\tif ($trunc == 'right')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > ($size+($nodot?0:3)))    // If nodot is 0 and size is 1,2 or 3 chars more, we don't trunc and don't add ...\n\t\treturn dol_substr($newstring,0,$size,$stringencoding).($nodot?'':'...');\n\t\telse\n\t\t//return 'u'.$size.'-'.$newstring.'-'.dol_strlen($newstring,$stringencoding).'-'.$string;\n\t\treturn $string;\n\t}\n\telseif ($trunc == 'middle')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > 2 && dol_strlen($newstring,$stringencoding) > ($size+1))\n\t\t{\n\t\t\t$size1=round($size/2);\n\t\t\t$size2=round($size/2);\n\t\t\treturn dol_substr($newstring,0,$size1,$stringencoding).'...'.dol_substr($newstring,dol_strlen($newstring,$stringencoding) - $size2,$size2,$stringencoding);\n\t\t}\n\t\telse\n\t\treturn $string;\n\t}\n\telseif ($trunc == 'left')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > ($size+($nodot?0:3)))    // If nodot is 0 and size is 1,2 or 3 chars more, we don't trunc and don't add ...\n\t\treturn '...'.dol_substr($newstring,dol_strlen($newstring,$stringencoding) - $size,$size,$stringencoding);\n\t\telse\n\t\treturn $string;\n\t}\n\telseif ($trunc == 'wrap')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > ($size+1))\n\t\treturn dol_substr($newstring,0,$size,$stringencoding).\"\\n\".dol_trunc(dol_substr($newstring,$size,dol_strlen($newstring,$stringencoding)-$size,$stringencoding),$size,$trunc);\n\t\telse\n\t\treturn $string;\n\t}\n\telse return 'BadParam3CallingDolTrunc';\n}\n\n/**\n *\tShow picto whatever it's its name (generic function)\n *\n *\t@param      string\t\t$titlealt         \tText on title and alt. If text is \"TextA:TextB\", use Text A on alt and Text B on title. Alt only if param notitle is set to 1.\n *\t@param      string\t\t$picto       \t\tName of image file to show ('filenew', ...)\n *\t\t\t\t\t\t\t\t\t\t\t\tIf no extension provided, we use '.png'. Image must be stored into theme/xxx/img directory.\n *                                  \t\t\tExample: picto.png                  if picto.png is stored into htdocs/theme/mytheme/img\n *                                  \t\t\tExample: picto.png@mymodule         if picto.png is stored into htdocs/mymodule/img\n *                                  \t\t\tExample: /mydir/mysubdir/picto.png  if picto.png is stored into htdocs/mydir/mysubdir (pictoisfullpath must be set to 1)\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@param\t\tint\t\t\t$srconly\t\t\tReturn only content of the src attribute of img.\n *  @param\t\tint\t\t\t$notitle\t\t\t1=Disable tag title. Use it if you add js tooltip, to avoid duplicate tooltip.\n *  @return     string       \t\t\t\t    Return img tag\n *  @see        #img_object, #img_picto_common\n */\nfunction img_picto($titlealt, $picto, $moreatt = '', $pictoisfullpath = false, $srconly=0, $notitle=0)\n{\n\tglobal $conf;\n\n\t// Define fullpathpicto to use into src\n\tif ($pictoisfullpath)\n\t{\n\t\t// Clean parameters\n\t\tif (! preg_match('/(\\.png|\\.gif|\\.svg)$/i',$picto)) $picto .= '.png';\n\t\t$fullpathpicto = $picto;\n\t}\n\telse\n\t{\n\t\t// We forge fullpathpicto for image to $path/img/$picto. By default, we take DOL_URL_ROOT/theme/$conf->theme/img/$picto\n\t\t$url = DOL_URL_ROOT;\n\t\t$theme = $conf->theme;\n\n\t\t$path = 'theme/'.$theme;\n\t\tif (! empty($conf->global->MAIN_OVERWRITE_THEME_PATH)) $path = $conf->global->MAIN_OVERWRITE_THEME_PATH.'/theme/'.$theme;\t// If the theme does not have the same name as the module\n\t\telse if (! empty($conf->global->MAIN_OVERWRITE_THEME_RES)) $path = $conf->global->MAIN_OVERWRITE_THEME_RES.'/theme/'.$conf->global->MAIN_OVERWRITE_THEME_RES;  // To allow an external module to overwrite image resources whatever is activated theme\n\t\telse if (! empty($conf->modules_parts['theme']) && array_key_exists($theme, $conf->modules_parts['theme'])) $path = $theme.'/theme/'.$theme;\t// If the theme have the same name as the module\n\n\t\t// If we ask an image into $url/$mymodule/img (instead of default path)\n\t\tif (preg_match('/^([^@]+)@([^@]+)$/i',$picto,$regs))\n\t\t{\n\t\t\t$picto = $regs[1];\n\t\t\t$path = $regs[2];\t// $path is $mymodule\n\t\t}\n\n\t\t// Clean parameters\n\t\tif (! preg_match('/(\\.png|\\.gif|\\.svg)$/i',$picto)) $picto .= '.png';\n\t\t// If alt path are defined, define url where img file is, according to physical path\n\t\tforeach ($conf->file->dol_document_root as $type => $dirroot)\t// ex: array([\"main\"]=>\"/home/maindir/htdocs\", [\"alt0\"]=>\"/home/moddir0/htdocs\", ...)\n\t\t{\n\t\t\tif ($type == 'main') continue;\n\t\t\tif (file_exists($dirroot.'/'.$path.'/img/'.$picto))\t// This need a lot of time, that's why enabling alternative dir like \"custom\" dir is not recommanded\n\t\t\t{\n\t\t\t\t$url=DOL_URL_ROOT.$conf->file->dol_url_root[$type];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// $url is '' or '/custom', $path is current theme or\n\t\t$fullpathpicto = $url.'/'.$path.'/img/'.$picto;\n\t}\n\n\tif ($srconly) return $fullpathpicto;\n\telse\n\t{\n\t\t$tmparray=array(0=>$titlealt);\n\t\tif (preg_match('/:[^\\s0-9]/',$titlealt)) $tmparray=explode(':',$titlealt);\t\t// We explode if we have TextA:TextB. Not if we have TextA: TextB\n\t\t$title=$tmparray[0];\n\t\t$alt=empty($tmparray[1])?'':$tmparray[1];\n\t\treturn '<img src=\"'.$fullpathpicto.'\" alt=\"'.dol_escape_htmltag($alt).'\"'.($notitle?'':' title=\"'.dol_escape_htmltag($title).'\"').($moreatt?' '.$moreatt:' class=\"inline-block valigntextbottom\"').'>';\t// Alt is used for accessibility, title for popup\n\t}\n}\n\n/**\n *\tShow a picto called object_picto (generic function)\n *\n *\t@param\tstring\t$titlealt\t\t\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$picto\t\t\t\tName of image to show object_picto (example: user, group, action, bill, contract, propal, product, ...)\n *\t\t\t\t\t\t\t\t\t\tFor external modules use imagename@mymodule to search into directory \"img\" of module.\n *\t@param\tstring\t$moreatt\t\t\tAdd more attribute on img tag (ie: class=\"datecallink\")\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@param\tint\t\t$srconly\t\t\tReturn only content of the src attribute of img.\n *  @param\tint\t\t$notitle\t\t\t1=Disable tag title. Use it if you add js tooltip, to avoid duplicate tooltip.\n *\t@return\tstring\t\t\t\t\t\tReturn img tag\n *\t@see\t#img_picto, #img_picto_common\n */\nfunction img_object($titlealt, $picto, $moreatt = '', $pictoisfullpath = false, $srconly=0, $notitle=0)\n{\n\treturn img_picto($titlealt, 'object_'.$picto, $moreatt, $pictoisfullpath, $srconly, $notitle);\n}\n\n/**\n *\tShow weather picto\n *\n *\t@param      string\t\t$titlealt         \tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param      string\t\t$picto       \t\tName of image file to show (If no extension provided, we use '.png'). Image must be stored into htdocs/theme/common directory.\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@return     string      \t\t\t\t\tReturn img tag\n *  @see        #img_object, #img_picto\n */\nfunction img_weather($titlealt, $picto, $moreatt = '', $pictoisfullpath = 0)\n{\n\tglobal $conf;\n\n\tif (! preg_match('/(\\.png|\\.gif)$/i', $picto)) $picto .= '.png';\n\n\t$path = DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/weather/'.$picto;\n\n\treturn img_picto($titlealt, $path, $moreatt, 1);\n}\n\n/**\n *\tShow picto (generic function)\n *\n *\t@param      string\t\t$titlealt         \tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param      string\t\t$picto       \t\tName of image file to show (If no extension provided, we use '.png'). Image must be stored into htdocs/theme/common directory.\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@return     string      \t\t\t\t\tReturn img tag\n *  @see        #img_object, #img_picto\n */\nfunction img_picto_common($titlealt, $picto, $moreatt = '', $pictoisfullpath = 0)\n{\n\tglobal $conf;\n\n\tif (! preg_match('/(\\.png|\\.gif)$/i', $picto)) $picto .= '.png';\n\n\tif ($pictoisfullpath) $path = $picto;\n\telse\n\t{\n\t\t$path = DOL_URL_ROOT.'/theme/common/'.$picto;\n\n\t\tif (! empty($conf->global->MAIN_MODULE_CAN_OVERWRITE_COMMONICONS))\n\t\t{\n\t\t\t$themepath = DOL_DOCUMENT_ROOT.'/theme/'.$conf->theme.'/img/'.$picto;\n\n\t\t\tif (file_exists($themepath)) $path = $themepath;\n\t\t}\n\t}\n\n\treturn img_picto($titlealt, $path, $moreatt, 1);\n}\n\n/**\n *\tShow logo action\n *\n *\t@param\tstring\t\t$titlealt       Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t\t$numaction   \tAction id or code to show\n *\t@return string      \t\t\t\tReturn an img tag\n */\nfunction img_action($titlealt, $numaction)\n{\n\tglobal $conf, $langs;\n\n\tif (empty($titlealt) || $titlealt == 'default')\n\t{\n\t\tif ($numaction == '-1' || $numaction == 'ST_NO')\t\t\t{ $numaction = -1; $titlealt = $langs->transnoentitiesnoconv('ChangeDoNotContact'); }\n\t\telseif ($numaction ==  '0' || $numaction == 'ST_NEVER') \t{ $numaction = 0; $titlealt = $langs->transnoentitiesnoconv('ChangeNeverContacted'); }\n\t\telseif ($numaction ==  '1' || $numaction == 'ST_TODO')  \t{ $numaction = 1; $titlealt = $langs->transnoentitiesnoconv('ChangeToContact'); }\n\t\telseif ($numaction ==  '2' || $numaction == 'ST_PEND')  \t{ $numaction = 2; $titlealt = $langs->transnoentitiesnoconv('ChangeContactInProcess'); }\n\t\telseif ($numaction ==  '3' || $numaction == 'ST_DONE')  \t{ $numaction = 3; $titlealt = $langs->transnoentitiesnoconv('ChangeContactDone'); }\n\t\telse { $titlealt = $langs->transnoentitiesnoconv('ChangeStatus '.$numaction); $numaction = 0; }\n\t}\n\tif (! is_numeric($numaction)) $numaction=0;\n\n\treturn img_picto($titlealt, 'stcomm'.$numaction.'.png');\n}\n\n/**\n *  Show pdf logo\n *\n *  @param\tstring\t\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param  int\t\t    $size       Taille de l'icone : 3 = 16x16px , 2 = 14x14px\n *  @return string      \t\t\tRetourne tag img\n */\nfunction img_pdf($titlealt = 'default', $size = 3)\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Show');\n\n\treturn img_picto($titlealt, 'pdf'.$size.'.png');\n}\n\n/**\n *\tShow logo +\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit_add($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Add');\n\n\treturn img_picto($titlealt, 'edit_add.png', $other);\n}\n/**\n *\tShow logo -\n *\n *\t@param\tstring\t$titlealt\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit_remove($titlealt = 'default', $other='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Remove');\n\n\treturn img_picto($titlealt, 'edit_remove.png', $other);\n}\n\n/**\n *\tShow logo editer/modifier fiche\n *\n *\t@param  string\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  integer\t$float      Si il faut y mettre le style \"float: right\"\n *\t@param  string\t$other\t\tAdd more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit($titlealt = 'default', $float = 0, $other = 'class=\"pictoedit\"')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Modify');\n\n\treturn img_picto($titlealt, 'edit.png', ($float ? 'style=\"float: '.($langs->tab_translate[\"DIRECTION\"] == 'rtl'?'left':'right').'\"' : \"\") . ($other?' '.$other:''));\n}\n\n/**\n *\tShow logo view card\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  integer\t$float      Si il faut y mettre le style \"float: right\"\n *\t@param  string\t$other\t\tAdd more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_view($titlealt = 'default', $float = 0, $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('View');\n\n\t$moreatt = ($float ? 'style=\"float: right\" ' : '').$other;\n\n\treturn img_picto($titlealt, 'view.png', $moreatt);\n}\n\n/**\n *  Show delete logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_delete($titlealt = 'default', $other = 'class=\"pictodelete\"')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Delete');\n\n\treturn img_picto($titlealt, 'delete.png', $other);\n}\n\n/**\n *  Show printer logo\n *\n *  @param  string  $titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param  string  $other      Add more attributes on img\n *  @return string              Retourne tag img\n */\nfunction img_printer($titlealt = \"default\", $other='')\n{\n    global $conf,$langs;\n    if ($titlealt==\"default\") $titlealt=$langs->trans(\"Print\");\n    return img_picto($titlealt,'printer.png',$other);\n}\n\n/**\n *  Show split logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_split($titlealt = 'default', $other = 'class=\"pictosplit\"')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Split');\n\n\treturn img_picto($titlealt, 'split.png', $other);\n}\n\n/**\n *\tShow help logo with cursor \"?\"\n *\n * \t@param\tint              \t$usehelpcursor\t\t1=Use help cursor, 2=Use click pointer cursor, 0=No specific cursor\n * \t@param\tint|string\t        $usealttitle\t\tText to use as alt title\n * \t@return string            \t           \t\t\tReturn tag img\n */\nfunction img_help($usehelpcursor = 1, $usealttitle = 1)\n{\n\tglobal $conf, $langs;\n\n\tif ($usealttitle)\n\t{\n\t\tif (is_string($usealttitle)) $usealttitle = dol_escape_htmltag($usealttitle);\n\t\telse $usealttitle = $langs->trans('Info');\n\t}\n\n\treturn img_picto($usealttitle, 'info.png', 'style=\"vertical-align: middle;'.($usehelpcursor == 1 ? ' cursor: help': ($usehelpcursor == 2 ? ' cursor: pointer':'')).'\"');\n}\n\n/**\n *\tShow info logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_info($titlealt = 'default')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Informations');\n\n\treturn img_picto($titlealt, 'info.png', 'style=\"vertical-align: middle;\"');\n}\n\n/**\n *\tShow warning logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"'). If 1\n *\t@return string      \t\tReturn img tag\n */\nfunction img_warning($titlealt = 'default', $moreatt = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Warning');\n\n\t//return '<div class=\"imglatecoin\">'.img_picto($titlealt, 'warning_white.png', 'class=\"pictowarning valignmiddle\"'.($moreatt ? ($moreatt == '1' ? ' style=\"float: right\"' : ' '.$moreatt): '')).'</div>';\n\treturn img_picto($titlealt, 'warning.png', 'class=\"pictowarning valignmiddle\"'.($moreatt ? ($moreatt == '1' ? ' style=\"float: right\"' : ' '.$moreatt): ''));\n}\n\n/**\n *  Show error logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_error($titlealt = 'default')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Error');\n\n\treturn img_picto($titlealt, 'error.png', 'class=\"valigntextbottom\"');\n}\n\n/**\n *\tShow next logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n*\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n  *\t@return string      \t\tReturn img tag\n */\nfunction img_next($titlealt = 'default', $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Next');\n\n\t//return img_picto($titlealt, 'next.png', $moreatt);\n\treturn '<span class=\"fa fa-chevron-right paddingright paddingleft\" title=\"'.dol_escape_htmltag($titlealt).'\"></span>';\n}\n\n/**\n *\tShow previous logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_previous($titlealt = 'default', $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Previous');\n\n\t//return img_picto($titlealt, 'previous.png', $moreatt);\n\treturn '<span class=\"fa fa-chevron-left paddingright paddingleft\" title=\"'.dol_escape_htmltag($titlealt).'\"></span>';\n}\n\n/**\n *\tShow down arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected   Selected\n *  @param\tstring\t$moreclass\tAdd more CSS classes\n *\t@return string      \t\tReturn img tag\n */\nfunction img_down($titlealt = 'default', $selected = 0, $moreclass='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Down');\n\n\treturn img_picto($titlealt, ($selected ? '1downarrow_selected.png' : '1downarrow.png'), 'class=\"imgdown'.($moreclass?\" \".$moreclass:\"\").'\"');\n}\n\n/**\n *\tShow top arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *  @param\tstring\t$moreclass\tAdd more CSS classes\n *\t@return string      \t\tReturn img tag\n */\nfunction img_up($titlealt = 'default', $selected = 0, $moreclass='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Up');\n\n\treturn img_picto($titlealt, ($selected ? '1uparrow_selected.png' : '1uparrow.png'), 'class=\"imgup'.($moreclass?\" \".$moreclass:\"\").'\"');\n}\n\n/**\n *\tShow left arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_left($titlealt = 'default', $selected = 0, $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Left');\n\n\treturn img_picto($titlealt, ($selected ? '1leftarrow_selected.png' : '1leftarrow.png'), $moreatt);\n}\n\n/**\n *\tShow right arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_right($titlealt = 'default', $selected = 0, $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Right');\n\n\treturn img_picto($titlealt, ($selected ? '1rightarrow_selected.png' : '1rightarrow.png'), $moreatt);\n}\n\n/**\n *\tShow tick logo if allowed\n *\n *\t@param\tstring\t$allow\t\tAllow\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_allow($allow, $titlealt = 'default')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Active');\n\n\tif ($allow == 1) return img_picto($titlealt, 'tick.png');\n\n\treturn '-';\n}\n\n\n/**\n *\tShow MIME img of a file\n *\n *\t@param\tstring\t$file\t\tFilename\n * \t@param\tstring\t$titlealt\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string     \t\t\tReturn img tag\n */\nfunction img_mime($file, $titlealt = '')\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t$mimetype = dol_mimetype($file, '', 1);\n\t$mimeimg = dol_mimetype($file, '', 2);\n\n\tif (empty($titlealt)) $titlealt = 'Mime type: '.$mimetype;\n\n\treturn img_picto_common($titlealt, 'mime/'.$mimeimg);\n}\n\n\n/**\n *\tShow phone logo.\n *  Use img_picto instead.\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$option\t\tOption\n *\t@return string      \t\tReturn img tag\n *  @deprecated\n *  @see img_picto\n */\nfunction img_phone($titlealt = 'default', $option = 0)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tglobal $conf,$langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Call');\n\n\tif ($option == 1) $img = 'call';\n\telse $img = 'call_out';\n\n\treturn img_picto($titlealt, $img);\n}\n\n/**\n *  Show search logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_search($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Search');\n\n\t$img = img_picto($titlealt, 'search.png', $other, false, 1);\n\n\t$input = '<input type=\"image\" class=\"liste_titre\" name=\"button_search\" src=\"'.$img.'\" ';\n\t$input.= 'value=\"'.dol_escape_htmltag($titlealt).'\" title=\"'.dol_escape_htmltag($titlealt).'\" >';\n\n\treturn $input;\n}\n\n/**\n *  Show search logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_searchclear($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Search');\n\n\t$img = img_picto($titlealt, 'searchclear.png', $other, false, 1);\n\n\t$input = '<input type=\"image\" class=\"liste_titre\" name=\"button_removefilter\" src=\"'.$img.'\" ';\n\t$input.= 'value=\"'.dol_escape_htmltag($titlealt).'\" title=\"'.dol_escape_htmltag($titlealt).'\" >';\n\n\treturn $input;\n}\n\n/**\n *\tShow information for admin users or standard users\n *\n *\t@param\tstring\t$text\t\t\tText info\n *\t@param  integer\t$infoonimgalt\tInfo is shown only on alt of star picto, otherwise it is show on output after the star picto\n *\t@param\tint\t\t$nodiv\t\t\tNo div\n *  @param  string  $admin          '1'=Info for admin users. '0'=Info for standard users (change only the look), 'xxx'=Other\n *\t@return\tstring\t\t\t\t\tString with info text\n */\nfunction info_admin($text, $infoonimgalt = 0, $nodiv=0, $admin='1')\n{\n\tglobal $conf, $langs;\n\n\tif ($infoonimgalt)\n\t{\n\t\treturn img_picto($text, 'info', 'class=\"hideonsmartphone\"');\n\t}\n\n\treturn ($nodiv?'':'<div class=\"'.(empty($admin)?'':($admin=='1'?'info':$admin)).' hideonsmartphone\">').'<span class=\"fa fa-info-circle\" title=\"'.dol_escape_htmltag($admin?$langs->trans('InfoAdmin'):$langs->trans('Note')).'\"></span> '.$text.($nodiv?'':'</div>');\n}\n\n\n/**\n *\tAffiche message erreur system avec toutes les informations pour faciliter le diagnostic et la remontee des bugs.\n *\tOn doit appeler cette fonction quand une erreur technique bloquante est rencontree.\n *\tToutefois, il faut essayer de ne l'appeler qu'au sein de pages php, les classes devant\n *\trenvoyer leur erreur par l'intermediaire de leur propriete \"error\".\n *\n *\t@param\t \tDoliDB\t$db      \tDatabase handler\n *\t@param  \tmixed\t$error\t\tString or array of errors strings to show\n *  @param\t\tarray\t$errors\t\tArray of errors\n *\t@return \tvoid\n *  @see    \tdol_htmloutput_errors\n */\nfunction dol_print_error($db='',$error='',$errors=null)\n{\n\tglobal $conf,$langs,$argv;\n\tglobal $dolibarr_main_prod;\n\n\t$out = '';\n\t$syslog = '';\n\n\t// Si erreur intervenue avant chargement langue\n\tif (! $langs)\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT .'/core/class/translate.class.php';\n\t\t$langs = new Translate('', $conf);\n\t\t$langs->load(\"main\");\n\t}\n\t$langs->load(\"main\");\n\t$langs->load(\"errors\");\n\n\tif ($_SERVER['DOCUMENT_ROOT'])    // Mode web\n\t{\n\t\t$out.=$langs->trans(\"DolibarrHasDetectedError\").\".<br>\\n\";\n\t\tif (! empty($conf->global->MAIN_FEATURES_LEVEL)) $out.=\"You use an experimental or develop level of features, so please do NOT report any bugs, except if problem is confirmed moving option MAIN_FEATURES_LEVEL back to 0.<br>\\n\";\n\t\t$out.=$langs->trans(\"InformationToHelpDiagnose\").\":<br>\\n\";\n\n\t\t$out.=\"<b>\".$langs->trans(\"Date\").\":</b> \".dol_print_date(time(),'dayhourlog').\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"Dolibarr\").\":</b> \".DOL_VERSION.\"<br>\\n\";\n\t\tif (isset($conf->global->MAIN_FEATURES_LEVEL)) $out.=\"<b>\".$langs->trans(\"LevelOfFeature\").\":</b> \".$conf->global->MAIN_FEATURES_LEVEL.\"<br>\\n\";\n\t\tif (function_exists(\"phpversion\"))\n\t\t{\n\t\t\t$out.=\"<b>\".$langs->trans(\"PHP\").\":</b> \".phpversion().\"<br>\\n\";\n\t\t}\n\t\t$out.=\"<b>\".$langs->trans(\"Server\").\":</b> \".$_SERVER[\"SERVER_SOFTWARE\"].\"<br>\\n\";\n\t\tif (function_exists(\"php_uname\"))\n\t\t{\n\t\t\t$out.=\"<b>\".$langs->trans(\"OS\").\":</b> \".php_uname().\"<br>\\n\";\n\t\t}\n\t\t$out.=\"<b>\".$langs->trans(\"UserAgent\").\":</b> \".$_SERVER[\"HTTP_USER_AGENT\"].\"<br>\\n\";\n\t\t$out.=\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"RequestedUrl\").\":</b> \".dol_htmlentities($_SERVER[\"REQUEST_URI\"],ENT_COMPAT,'UTF-8').\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"Referer\").\":</b> \".(isset($_SERVER[\"HTTP_REFERER\"])?dol_htmlentities($_SERVER[\"HTTP_REFERER\"],ENT_COMPAT,'UTF-8'):'').\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"MenuManager\").\":</b> \".(isset($conf->standard_menu)?$conf->standard_menu:'').\"<br>\\n\";\n\t\t$out.=\"<br>\\n\";\n\t\t$syslog.=\"url=\".dol_escape_htmltag($_SERVER[\"REQUEST_URI\"]);\n\t\t$syslog.=\", query_string=\".dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]);\n\t}\n\telse                              // Mode CLI\n\t{\n\t\t$out.='> '.$langs->transnoentities(\"ErrorInternalErrorDetected\").\":\\n\".$argv[0].\"\\n\";\n\t\t$syslog.=\"pid=\".dol_getmypid();\n\t}\n\n\tif (is_object($db))\n\t{\n\t\tif ($_SERVER['DOCUMENT_ROOT'])  // Mode web\n\t\t{\n\t\t\t$out.=\"<b>\".$langs->trans(\"DatabaseTypeManager\").\":</b> \".$db->type.\"<br>\\n\";\n\t\t\t$out.=\"<b>\".$langs->trans(\"RequestLastAccessInError\").\":</b> \".($db->lastqueryerror()?dol_escape_htmltag($db->lastqueryerror()):$langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out.=\"<b>\".$langs->trans(\"ReturnCodeLastAccessInError\").\":</b> \".($db->lasterrno()?dol_escape_htmltag($db->lasterrno()):$langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out.=\"<b>\".$langs->trans(\"InformationLastAccessInError\").\":</b> \".($db->lasterror()?dol_escape_htmltag($db->lasterror()):$langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out.=\"<br>\\n\";\n\t\t}\n\t\telse                            // Mode CLI\n\t\t{\n\t\t    // No dol_escape_htmltag for output, we are in CLI mode\n\t\t    $out.='> '.$langs->transnoentities(\"DatabaseTypeManager\").\":\\n\".$db->type.\"\\n\";\n\t\t\t$out.='> '.$langs->transnoentities(\"RequestLastAccessInError\").\":\\n\".($db->lastqueryerror()?$db->lastqueryerror():$langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\t\t\t$out.='> '.$langs->transnoentities(\"ReturnCodeLastAccessInError\").\":\\n\".($db->lasterrno()?$db->lasterrno():$langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\t\t\t$out.='> '.$langs->transnoentities(\"InformationLastAccessInError\").\":\\n\".($db->lasterror()?$db->lasterror():$langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\n\t\t}\n\t\t$syslog.=\", sql=\".$db->lastquery();\n\t\t$syslog.=\", db_error=\".$db->lasterror();\n\t}\n\n\tif ($error || $errors)\n\t{\n\t\t$langs->load(\"errors\");\n\n\t\t// Merge all into $errors array\n\t\tif (is_array($error) && is_array($errors)) $errors=array_merge($error,$errors);\n\t\telseif (is_array($error)) $errors=$error;\n\t\telseif (is_array($errors)) $errors=array_merge(array($error),$errors);\n\t\telse $errors=array_merge(array($error));\n\n\t\tforeach($errors as $msg)\n\t\t{\n\t\t\tif (empty($msg)) continue;\n\t\t\tif ($_SERVER['DOCUMENT_ROOT'])  // Mode web\n\t\t\t{\n\t\t\t\t$out.=\"<b>\".$langs->trans(\"Message\").\":</b> \".dol_escape_htmltag($msg).\"<br>\\n\" ;\n\t\t\t}\n\t\t\telse                        // Mode CLI\n\t\t\t{\n\t\t\t\t$out.='> '.$langs->transnoentities(\"Message\").\":\\n\".$msg.\"\\n\" ;\n\t\t\t}\n\t\t\t$syslog.=\", msg=\".$msg;\n\t\t}\n\t}\n\tif (empty($dolibarr_main_prod) && $_SERVER['DOCUMENT_ROOT'] && function_exists('xdebug_print_function_stack') && function_exists('xdebug_call_file'))\n\t{\n\t\txdebug_print_function_stack();\n\t\t$out.='<b>XDebug informations:</b>'.\"<br>\\n\";\n\t\t$out.='File: '.xdebug_call_file().\"<br>\\n\";\n\t\t$out.='Line: '.xdebug_call_line().\"<br>\\n\";\n\t\t$out.='Function: '.xdebug_call_function().\"<br>\\n\";\n\t\t$out.=\"<br>\\n\";\n\t}\n\n\tif (empty($dolibarr_main_prod)) print $out;\n\telse\n\t{\n\t\tprint $langs->trans(\"DolibarrHasDetectedError\").'. ';\n\t\tprint $langs->trans(\"YouCanSetOptionDolibarrMainProdToZero\");\n\t\tdefine(\"MAIN_CORE_ERROR\", 1);\n\t}\n\t//else print 'Sorry, an error occured but the parameter $dolibarr_main_prod is defined in conf file so no message is reported to your browser. Please read the log file for error message.';\n\tdol_syslog(\"Error \".$syslog, LOG_ERR);\n}\n\n/**\n * Show a public email and error code to contact if technical error\n *\n * @param\tstring\t$prefixcode\t\tPrefix of public error code\n * @param   string  $errormessage   Complete error message\n * @return\tvoid\n */\nfunction dol_print_error_email($prefixcode, $errormessage='')\n{\n\tglobal $langs,$conf;\n\n\t$langs->load(\"errors\");\n\t$now=dol_now();\n\tprint '<br><div class=\"center login_main_message\"><div class=\"error\">';\n\tprint $langs->trans(\"ErrorContactEMail\", $conf->global->MAIN_INFO_SOCIETE_MAIL, $prefixcode.dol_print_date($now,'%Y%m%d'));\n\tif ($errormessage) print '<br><br>'.$errormessage;\n\tprint '</div></div>';\n}\n\n/**\n *\tShow title line of an array\n *\n *\t@param\tstring\t$name        Label of field\n *\t@param\tstring\t$file        Url used when we click on sort picto\n *\t@param\tstring\t$field       Field to use for new sorting\n *\t@param\tstring\t$begin       (\"\" by defaut)\n *\t@param\tstring\t$moreparam   Add more parameters on sort url links (\"\" by default)\n *\t@param  string\t$td          Options of attribute td (\"\" by defaut, example: 'align=\"center\"')\n *\t@param  string\t$sortfield   Current field used to sort\n *\t@param  string\t$sortorder   Current sort order\n *  @param\tstring\t$prefix\t\t Prefix for css. Use space after prefix to add your own CSS tag.\n *\t@return\tvoid\n */\nfunction print_liste_field_titre($name, $file=\"\", $field=\"\", $begin=\"\", $moreparam=\"\", $td=\"\", $sortfield=\"\", $sortorder=\"\", $prefix=\"\")\n{\n\tprint getTitleFieldOfList($name, 0, $file, $field, $begin, $moreparam, $td, $sortfield, $sortorder, $prefix);\n}\n\n/**\n *\tGet title line of an array\n *\n *\t@param\tstring\t$name        Translation key of field\n *\t@param\tint\t\t$thead\t\t 0=To use with standard table format, 1=To use inside <thead><tr>, 2=To use with <div>\n *\t@param\tstring\t$file        Url used when we click on sort picto\n *\t@param\tstring\t$field       Field to use for new sorting. Empty if this field is not sortable.\n *\t@param\tstring\t$begin       (\"\" by defaut)\n *\t@param\tstring\t$moreparam   Add more parameters on sort url links (\"\" by default)\n *\t@param  string\t$moreattrib  Add more attributes on th (\"\" by defaut). To add more css class, use param $prefix.\n *\t@param  string\t$sortfield   Current field used to sort (Ex: 'd.datep,d.id')\n *\t@param  string\t$sortorder   Current sort order (Ex: 'asc,desc')\n *  @param\tstring\t$prefix\t\t Prefix for css. Use space after prefix to add your own CSS tag.\n *  @param\tstring\t$disablesortlink\t1=Disable sort link\n *\t@return\tstring\n */\nfunction getTitleFieldOfList($name, $thead=0, $file=\"\", $field=\"\", $begin=\"\", $moreparam=\"\", $moreattrib=\"\", $sortfield=\"\", $sortorder=\"\", $prefix=\"\", $disablesortlink=0)\n{\n\tglobal $conf, $langs;\n\t//print \"$name, $file, $field, $begin, $options, $moreattrib, $sortfield, $sortorder<br>\\n\";\n\n\t$sortorder=strtoupper($sortorder);\n\t$out='';\n    $sortimg='';\n\n\t$tag='th';\n\tif ($thead==2) $tag='div';\n\n\t$tmpsortfield=explode(',',$sortfield);\n\t$sortfield1=trim($tmpsortfield[0]);    // If $sortfield is 'd.datep,d.id', it becomes 'd.datep'\n\t$tmpfield=explode(',',$field);\n\t$field1=trim($tmpfield[0]);            // If $field is 'd.datep,d.id', it becomes 'd.datep'\n\n\t//var_dump('field='.$field.' field1='.$field1.' sortfield='.$sortfield.' sortfield1='.$sortfield1);\n\n\t// If field is used as sort criteria we use a specific css class liste_titre_sel\n\t// Example if (sortfield,field)=(\"nom\",\"xxx.nom\") or (sortfield,field)=(\"nom\",\"nom\")\n\tif ($field1 && ($sortfield1 == $field1 || $sortfield1 == preg_replace(\"/^[^\\.]+\\./\",\"\",$field1))) $out.= '<'.$tag.' class=\"'.$prefix.'liste_titre_sel\" '. $moreattrib.'>';\n\telse $out.= '<'.$tag.' class=\"'.$prefix.'liste_titre\" '. $moreattrib.'>';\n\n\tif (empty($thead) && $field && empty($disablesortlink))    // If this is a sort field\n\t{\n\t\t$options=preg_replace('/sortfield=([a-zA-Z0-9,\\s\\.]+)/i','',$moreparam);\n\t\t$options=preg_replace('/sortorder=([a-zA-Z0-9,\\s\\.]+)/i','',$options);\n\t\t$options=preg_replace('/&+/i','&',$options);\n\t\tif (! preg_match('/^&/',$options)) $options='&'.$options;\n\n\t\tif ($field1 != $sortfield1) // We are on another field\n\t\t{\n            if (preg_match('/^DESC/', $sortorder)) $out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">';\n            else $out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">';\n\t\t}\n\t\telse                      // We are of first sorting criteria\n\t\t{\n            if (preg_match('/^ASC/', $sortorder)) $out.= '<a href=\"'.$file.'?sortfield='.$sortfield.'&sortorder=desc&begin='.$begin.$options.'\">';\n\t\t    else $out.= '<a href=\"'.$file.'?sortfield='.$sortfield.'&sortorder=asc&begin='.$begin.$options.'\">';\n\t\t}\n\t}\n\n\t$out.=$langs->trans($name);\n\n\tif (empty($thead) && $field && empty($disablesortlink))    // If this is a sort field\n\t{\n\t\t$out.='</a>';\n\t}\n\n\tif (empty($thead) && $field)    // If this is a sort field\n\t{\n\t\t$options=preg_replace('/sortfield=([a-zA-Z0-9,\\s\\.]+)/i','',$moreparam);\n\t\t$options=preg_replace('/sortorder=([a-zA-Z0-9,\\s\\.]+)/i','',$options);\n\t\t$options=preg_replace('/&+/i','&',$options);\n\t\tif (! preg_match('/^&/',$options)) $options='&'.$options;\n\n\t\t//print \"&nbsp;\";\n\t\t//$sortimg.= '<img width=\"2\" src=\"'.DOL_URL_ROOT.'/theme/common/transparent.png\" alt=\"\">';\n\t\t//$sortimg.= '<span class=\"nowrap\">';\n\n\t\tif (! $sortorder || $field1 != $sortfield1)\n\t\t{\n\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",0).'</a>';\n\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",0).'</a>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (preg_match('/^DESC/', $sortorder)) {\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",0).'</a>';\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",1).'</a>';\n\t\t\t\t$sortimg.= '<span class=\"nowrap\">'.img_up(\"Z-A\",0).'</span>';\n\t\t\t}\n\t\t\tif (preg_match('/^ASC/', $sortorder)) {\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",1).'</a>';\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",0).'</a>';\n\t\t\t\t$sortimg.= '<span class=\"nowrap\">'.img_down(\"A-Z\",0).'</span>';\n\t\t\t}\n\t\t}\n\n\t\t//$sortimg.= '</span>';\n\t}\n\n\t$out.=$sortimg;\n\n\t$out.='</'.$tag.'>';\n\n\treturn $out;\n}\n\n/**\n *\tShow a title.\n *\n *\t@param\tstring\t$title\t\t\tTitle to show\n *\t@return\tstring\t\t\t\t\tTitle to show\n *  @deprecated\t\t\t\t\t\tUse load_fiche_titre instead\n *  @see load_fiche_titre\n */\nfunction print_titre($title)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tprint '<div class=\"titre\">'.$title.'</div>';\n}\n\n/**\n *\tShow a title with picto\n *\n *\t@param\tstring\t$title\t\t\t\tTitle to show\n *\t@param\tstring\t$mesg\t\t\t\tAdded message to show on right\n *\t@param\tstring\t$picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t$pictoisfullpath\t1=Icon name is a full absolute url of image\n * \t@param\tint\t\t$id\t\t\t\t\tTo force an id on html objects\n * \t@return\tvoid\n *  @deprecated Use print load_fiche_titre instead\n */\nfunction print_fiche_titre($title, $mesg='', $picto='title_generic.png', $pictoisfullpath=0, $id='')\n{\n\tprint load_fiche_titre($title, $mesg, $picto, $pictoisfullpath, $id);\n}\n\n/**\n *\tLoad a title with picto\n *\n *\t@param\tstring\t$titre\t\t\t\tTitle to show\n *\t@param\tstring\t$morehtmlright\t\tAdded message to show on right\n *\t@param\tstring\t$picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t$pictoisfullpath\t1=Icon name is a full absolute url of image\n * \t@param\tint\t\t$id\t\t\t\t\tTo force an id on html objects\n *  @param  string  $morecssontable     More css on table\n * \t@return\tstring\n *  @see print_barre_liste\n */\nfunction load_fiche_titre($titre, $morehtmlright='', $picto='title_generic.png', $pictoisfullpath=0, $id=0, $morecssontable='')\n{\n\tglobal $conf;\n\n\t$return='';\n\n\tif ($picto == 'setup') $picto='title.png';\n\tif (($conf->browser->name == 'ie') && $picto=='title.png') $picto='title.gif';\n\n\t$return.= \"\\n\";\n\t$return.= '<table '.($id?'id=\"'.$id.'\" ':'').'summary=\"\" class=\"centpercent notopnoleftnoright'.($morecssontable?' '.$morecssontable:'').'\" style=\"margin-bottom: 2px;\"><tr>';\n\tif ($picto) $return.= '<td class=\"nobordernopadding widthpictotitle\" valign=\"middle\">'.img_picto('',$picto, 'class=\"valignmiddle\" id=\"pictotitle\"', $pictoisfullpath).'</td>';\n\t$return.= '<td class=\"nobordernopadding\" valign=\"middle\">';\n\t$return.= '<div class=\"titre\">'.$titre.'</div>';\n\t$return.= '</td>';\n\tif (dol_strlen($morehtmlright))\n\t{\n\t\t$return.= '<td class=\"nobordernopadding titre_right\" align=\"right\" valign=\"middle\">'.$morehtmlright.'</td>';\n\t}\n\t$return.= '</tr></table>'.\"\\n\";\n\n\treturn $return;\n}\n\n/**\n *\tPrint a title with navigation controls for pagination\n *\n *\t@param\tstring\t    $titre\t\t\t\tTitle to show (required)\n *\t@param\tint   \t    $page\t\t\t\tNumero of page to show in navigation links (required)\n *\t@param\tstring\t    $file\t\t\t\tUrl of page (required)\n *\t@param\tstring\t    $options         \tMore parameters for links ('' by default, does not include sortfield neither sortorder). Value must be 'urlencoded' before calling function.\n *\t@param\tstring    \t$sortfield       \tField to sort on ('' by default)\n *\t@param\tstring\t    $sortorder       \tOrder to sort ('' by default)\n *\t@param\tstring\t    $center          \tString in the middle ('' by default). We often find here string $massaction comming from $form->selectMassAction()\n *\t@param\tint\t\t    $num\t\t\t\tNumber of records found by select with limit+1\n *\t@param\tint|string  $totalnboflines\t\tTotal number of records/lines for all pages (if known). Use a negative value of number to not show number. Use '' if unknown.\n *\t@param\tstring\t    $picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t    $pictoisfullpath\t1=Icon name is a full absolute url of image\n *  @param\tstring\t    $morehtml\t\t\tMore html to show\n *  @param  string      $morecss            More css to the table\n *  @param  int         $limit              Max number of lines (-1 = use default, 0 = no limit, > 0 = limit).\n *  @param  int         $hideselectlimit    Force to hide select limit\n *\t@return\tvoid\n */\nfunction print_barre_liste($titre, $page, $file, $options='', $sortfield='', $sortorder='', $center='', $num=-1, $totalnboflines='', $picto='title_generic.png', $pictoisfullpath=0, $morehtml='', $morecss='', $limit=-1, $hideselectlimit=0)\n{\n\tglobal $conf,$langs;\n\n\t$savlimit = $limit;\n    $savtotalnboflines = $totalnboflines;\n    $totalnboflines=abs($totalnboflines);\n\n\tif ($picto == 'setup') $picto='title_setup.png';\n\tif (($conf->browser->name == 'ie') && $picto=='title_generic.png') $picto='title.gif';\n\tif ($limit < 0) $limit = $conf->liste_limit;\n\tif ($savlimit != 0 && (($num > $limit) || ($num == -1) || ($limit == 0)))\n\t{\n\t\t$nextpage = 1;\n\t}\n\telse\n\t{\n\t\t$nextpage = 0;\n\t}\n\t//print 'totalnboflines='.$totalnboflines.'-savlimit='.$savlimit.'-limit='.$limit.'-num='.$num.'-nextpage='.$nextpage;\n\n\tprint \"\\n\";\n\tprint \"<!-- Begin title '\".$titre.\"' -->\\n\";\n\tprint '<table width=\"100%\" border=\"0\" class=\"notopnoleftnoright'.($morecss?' '.$morecss:'').'\" style=\"margin-bottom: 6px;\"><tr>';\n\n\t// Left\n\t//if ($picto && $titre) print '<td class=\"nobordernopadding hideonsmartphone\" width=\"40\" align=\"left\" valign=\"middle\">'.img_picto('', $picto, 'id=\"pictotitle\"', $pictoisfullpath).'</td>';\n\tprint '<td class=\"nobordernopadding valignmiddle\">';\n\tif ($picto && $titre) print img_picto('', $picto, 'class=\"hideonsmartphone valignmiddle\" id=\"pictotitle\"', $pictoisfullpath);\n\tprint '<div class=\"titre inline-block\">'.$titre;\n\tif (!empty($titre) && $savtotalnboflines >= 0 && (string) $savtotalnboflines != '') print ' ('.$totalnboflines.')';\n\tprint '</div></td>';\n\n\t// Center\n\tif ($center)\n\t{\n\t\tprint '<td class=\"nobordernopadding center valignmiddle\">'.$center.'</td>';\n\t}\n\n\t// Right\n\tprint '<td class=\"nobordernopadding valignmiddle\" align=\"right\">';\n\tif ($sortfield) $options .= \"&amp;sortfield=\".$sortfield;\n\tif ($sortorder) $options .= \"&amp;sortorder=\".$sortorder;\n\t// Show navigation bar\n\t$pagelist = '';\n\tif ($savlimit != 0 && ($page > 0 || $num > $limit))\n\t{\n\t\tif ($totalnboflines)\t// If we know total nb of lines\n\t\t{\n\t\t\t$maxnbofpage=(empty($conf->dol_optimize_smallscreen) ? 4 : 1);\t\t// page nb before and after selected page + ... + first or last\n\n\t\t\tif ($limit > 0) $nbpages=ceil($totalnboflines/$limit);\n\t\t\telse $nbpages=1;\n\t\t\t$cpt=($page-$maxnbofpage);\n\t\t\tif ($cpt < 0) { $cpt=0; }\n\n\t\t\tif ($cpt>=1)\n\t\t\t{\n\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page=0'.$options.'\">1</a></li>';\n\t\t\t\tif ($cpt > 2) $pagelist.='<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"inactive\"':'').'>...</span></li>';\n\t\t\t\telse if ($cpt == 2) $pagelist.='<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page=1'.$options.'\">2</a></li>';\n\t\t\t}\n\n\t\t\tdo\n\t\t\t{\n\t\t\t\tif ($cpt==$page)\n\t\t\t\t{\n\t\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"active\"':'').'>'.($page+1).'</span></li>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page='.$cpt.$options.'\">'.($cpt+1).'</a></li>';\n\t\t\t\t}\n\t\t\t\t$cpt++;\n\t\t\t}\n\t\t\twhile ($cpt < $nbpages && $cpt<=$page+$maxnbofpage);\n\n\t\t\tif ($cpt<$nbpages)\n\t\t\t{\n\t\t\t\tif ($cpt<$nbpages-2) $pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"inactive\"':'').'>...</span></li>';\n\t\t\t\telse if ($cpt == $nbpages-2) $pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page='.($nbpages-2).$options.'\">'.($nbpages - 1).'</a></li>';\n\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page='.($nbpages-1).$options.'\">'.$nbpages.'</a></li>';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"active\"':'').'>'.($page+1).\"</li>\";\n\t\t}\n\t}\n\tprint_fleche_navigation($page, $file, $options, $nextpage, $pagelist, $morehtml, $savlimit, $totalnboflines, $hideselectlimit);\t\t// output the div and ul for previous/last completed with page numbers into $pagelist\n\tprint '</td>';\n\n\tprint '</tr></table>'.\"\\n\";\n\tprint \"<!-- End title -->\\n\\n\";\n}\n\n/**\n *\tFunction to show navigation arrows into lists\n *\n *\t@param\tint\t\t\t\t$page\t\t\t\tNumber of page\n *\t@param\tstring\t\t\t$file\t\t\t\tPage URL (in most cases provided with $_SERVER[\"PHP_SELF\"])\n *\t@param\tstring\t\t\t$options         \tOther url paramaters to propagate (\"\" by default, may include sortfield and sortorder)\n *\t@param\tinteger\t\t\t$nextpage\t    \tDo we show a next page button\n *\t@param\tstring\t\t\t$betweenarrows\t\tHTML content to show between arrows. MUST contains '<li> </li>' tags or '<li><span> </span></li>'.\n *  @param\tstring\t\t\t$afterarrows\t\tHTML content to show after arrows. Must NOT contains '<li> </li>' tags.\n *  @param  int             $limit              Max nb of record to show  (-1 = no combo with limit, 0 = no limit, > 0 = limit)\n *\t@param\tint\t\t        $totalnboflines\t\tTotal number of records/lines for all pages (if known)\n *  @param  int             $hideselectlimit    Force to hide select limit\n *\t@return\tvoid\n */\nfunction print_fleche_navigation($page, $file, $options='', $nextpage=0, $betweenarrows='', $afterarrows='', $limit=-1, $totalnboflines=0, $hideselectlimit=0)\n{\n\tglobal $conf, $langs;\n\n\tprint '<div class=\"pagination\"><ul>';\n\tif ((int) $limit >= 0 && empty($hideselectlimit))\n\t{\n\t    $pagesizechoices='10:10,20:20,30:30,40:40,50:50,100:100,250:250,500:500,1000:1000,5000:5000';\n\t    //$pagesizechoices.=',0:'.$langs->trans(\"All\");     // Not yet supported\n\t    //$pagesizechoices.=',2:2';\n\t    if (! empty($conf->global->MAIN_PAGESIZE_CHOICES)) $pagesizechoices=$conf->global->MAIN_PAGESIZE_CHOICES;\n\n        print '<li class=\"pagination\">';\n        print '<select class=\"flat selectlimit\" name=\"limit\" title=\"'.dol_escape_htmltag($langs->trans(\"MaxNbOfRecordPerPage\")).'\">';\n        $tmpchoice=explode(',',$pagesizechoices);\n        $tmpkey=$limit.':'.$limit;\n        if (! in_array($tmpkey, $tmpchoice)) $tmpchoice[]=$tmpkey;\n        $tmpkey=$conf->liste_limit.':'.$conf->liste_limit;\n        if (! in_array($tmpkey, $tmpchoice)) $tmpchoice[]=$tmpkey;\n        asort($tmpchoice, SORT_NUMERIC);\n        $found=false;\n        foreach($tmpchoice as $val)\n        {\n            $selected='';\n            $tmp=explode(':',$val);\n            $key=$tmp[0];\n            $val=$tmp[1];\n            if ($key != '' && $val != '')\n            {\n                if ((int) $key == (int) $limit)\n                {\n                    $selected = ' selected=\"selected\"';\n                    $found = true;\n                }\n                print '<option name=\"'.$key.'\"'.$selected.'>'.dol_escape_htmltag($val).'</option>'.\"\\n\";\n            }\n        }\n        print '</select>';\n        if ($conf->use_javascript_ajax)\n        {\n            print '<!-- JS CODE TO ENABLE select limit to launch submit of page -->\n            \t\t<script type=\"text/javascript\">\n                \tjQuery(document).ready(function () {\n            \t  \t\tjQuery(\".selectlimit\").change(function() {\n                            console.log(\"Change limit. Send submit\");\n                            $(this).parents(\\'form:first\\').submit();\n            \t  \t\t});\n                \t});\n            \t\t</script>\n                ';\n        }\n        print '</li>';\n\t}\n\tif ($page > 0)\n\t{\n\t\tprint '<li class=\"pagination\"><a class=\"paginationprevious\" href=\"'.$file.'?page='.($page-1).$options.'\"><i class=\"fa fa-chevron-left\" title=\"'.dol_escape_htmltag($langs->trans(\"Previous\")).'\"></i></a></li>';\n\t}\n\tif ($betweenarrows)\n\t{\n\t\tprint $betweenarrows;\n\t}\n\tif ($nextpage > 0)\n\t{\n\t\tprint '<li class=\"pagination\"><a class=\"paginationnext\" href=\"'.$file.'?page='.($page+1).$options.'\"><i class=\"fa fa-chevron-right\" title=\"'.dol_escape_htmltag($langs->trans(\"Next\")).'\"></i></a></li>';\n\t}\n\tif ($afterarrows)\n\t{\n\t\tprint '<li class=\"paginationafterarrows\">';\n\t\tprint $afterarrows;\n\t\tprint '</li>';\n\t}\n\tprint '</ul></div>'.\"\\n\";\n}\n\n\n/**\n *\tReturn a string with VAT rate label formated for view output\n *\tUsed into pdf and HTML pages\n *\n *\t@param\tstring\t$rate\t\t\tRate value to format ('19.6', '19,6', '19.6%', '19,6%', '19.6 (CODEX)', ...)\n *  @param\tboolean\t$addpercent\t\tAdd a percent % sign in output\n *\t@param\tint\t\t$info_bits\t\tMiscellaneous information on vat (0=Default, 1=French NPR vat)\n *\t@param\tint\t\t$usestarfornpr\t1=Use '*' for NPR vat rate intead of MAIN_LABEL_MENTION_NPR\n *  @return\tstring\t\t\t\t\tString with formated amounts ('19,6' or '19,6%' or '8.5% (NPR)' or '8.5% *' or '19,6 (CODEX)')\n */\nfunction vatrate($rate, $addpercent=false, $info_bits=0, $usestarfornpr=0)\n{\n    $morelabel='';\n\n    if (preg_match('/%/',$rate))\n\t{\n\t\t$rate=str_replace('%','',$rate);\n\t\t$addpercent=true;\n\t}\n\tif (preg_match('/\\((.*)\\)/',$rate,$reg))\n\t{\n\t    $morelabel=' ('.$reg[1].')';\n\t    $rate=preg_replace('/\\s*'.preg_quote($morelabel,'/').'/','',$rate);\n\t}\n\tif (preg_match('/\\*/',$rate))\n\t{\n\t\t$rate=str_replace('*','',$rate);\n\t\t$info_bits |= 1;\n\t}\n\n\t// If rate is '9/9/9' we don't change it.  If rate is '9.000' we apply price()\n\tif (! preg_match('/\\//', $rate)) $ret=price($rate,0,'',0,0).($addpercent?'%':'');\n\telse\n\t{\n\t\t// TODO Split on / and output with a price2num to have clean numbers with ton of 000.\n\t\t$ret=$rate.($addpercent?'%':'');\n\t}\n\tif ($info_bits & 1) $ret.=' *';\n\t$ret.=$morelabel;\n\treturn $ret;\n}\n\n\n/**\n *\t\tFunction to format a value into an amount for visual output\n *\t\tFunction used into PDF and HTML pages\n *\n *\t\t@param\tfloat\t\t$amount\t\t\tAmount to format\n *\t\t@param\tinteger\t\t$form\t\t\tType of format, HTML or not (not by default)\n *\t\t@param\tTranslate\t$outlangs\t\tObject langs for output\n *\t\t@param\tint\t\t\t$trunc\t\t\t1=Truncate if there is more decimals than MAIN_MAX_DECIMALS_SHOWN (default), 0=Does not truncate. Deprecated because amount are rounded (to unit or total amount accurancy) before inserted into database or after a computation, so this parameter should be useless.\n *\t\t@param\tint\t\t\t$rounding\t\tMinimum number of decimal to show. If 0, no change, if -1, we use min($conf->global->MAIN_MAX_DECIMALS_UNIT,$conf->global->MAIN_MAX_DECIMALS_TOTAL)\n *\t\t@param\tint\t\t\t$forcerounding\tForce the number of decimal to forcerounding decimal (-1=do not force)\n *\t\t@param\tstring\t\t$currency_code\tTo add currency symbol (''=add nothing, 'auto'=Use default currency, 'XXX'=add currency symbols for XXX currency)\n *\t\t@return\tstring\t\t\t\t\t\tChaine avec montant formate\n *\n *\t\t@see\tprice2num\t\t\t\t\tRevert function of price\n */\nfunction price($amount, $form=0, $outlangs='', $trunc=1, $rounding=-1, $forcerounding=-1, $currency_code='')\n{\n\tglobal $langs,$conf;\n\n\t// Clean parameters\n\tif (empty($amount)) $amount=0;\t// To have a numeric value if amount not defined or = ''\n\t$amount = (is_numeric($amount)?$amount:0); // Check if amount is numeric, for example, an error occured when amount value = o (letter) instead 0 (number)\n\tif ($rounding < 0) $rounding=min($conf->global->MAIN_MAX_DECIMALS_UNIT,$conf->global->MAIN_MAX_DECIMALS_TOT);\n\t$nbdecimal=$rounding;\n\n\t// Output separators by default (french)\n\t$dec=','; $thousand=' ';\n\n\t// If $outlangs not forced, we use use language\n\tif (! is_object($outlangs)) $outlangs=$langs;\n\n\tif ($outlangs->transnoentitiesnoconv(\"SeparatorDecimal\") != \"SeparatorDecimal\")  $dec=$outlangs->transnoentitiesnoconv(\"SeparatorDecimal\");\n\tif ($outlangs->transnoentitiesnoconv(\"SeparatorThousand\")!= \"SeparatorThousand\") $thousand=$outlangs->transnoentitiesnoconv(\"SeparatorThousand\");\n\tif ($thousand == 'None') $thousand='';\n\telse if ($thousand == 'Space') $thousand=' ';\n\t//print \"outlangs=\".$outlangs->defaultlang.\" amount=\".$amount.\" html=\".$form.\" trunc=\".$trunc.\" nbdecimal=\".$nbdecimal.\" dec='\".$dec.\"' thousand='\".$thousand.\"'<br>\";\n\n\t//print \"amount=\".$amount.\"-\";\n\t$amount = str_replace(',','.',$amount);\t// should be useless\n\t//print $amount.\"-\";\n\t$datas = explode('.',$amount);\n\t$decpart = isset($datas[1])?$datas[1]:'';\n\t$decpart = preg_replace('/0+$/i','',$decpart);\t// Supprime les 0 de fin de partie decimale\n\t//print \"decpart=\".$decpart.\"<br>\";\n\t$end='';\n\n\t// We increase nbdecimal if there is more decimal than asked (to not loose information)\n\tif (dol_strlen($decpart) > $nbdecimal) $nbdecimal=dol_strlen($decpart);\n\t// Si on depasse max\n\tif ($trunc && $nbdecimal > $conf->global->MAIN_MAX_DECIMALS_SHOWN)\n\t{\n\t\t$nbdecimal=$conf->global->MAIN_MAX_DECIMALS_SHOWN;\n\t\tif (preg_match('/\\.\\.\\./i',$conf->global->MAIN_MAX_DECIMALS_SHOWN))\n\t\t{\n\t\t\t// Si un affichage est tronque, on montre des ...\n\t\t\t$end='...';\n\t\t}\n\t}\n\n\t// If force rounding\n\tif ($forcerounding >= 0) $nbdecimal = $forcerounding;\n\n\t// Format number\n\t$output=number_format($amount, $nbdecimal, $dec, $thousand);\n\tif ($form)\n\t{\n\t\t$output=preg_replace('/\\s/','&nbsp;',$output);\n\t\t$output=preg_replace('/\\'/','&#039;',$output);\n\t}\n\t// Add symbol of currency if requested\n\t$cursymbolbefore=$cursymbolafter='';\n\tif ($currency_code)\n\t{\n\t\tif ($currency_code == 'auto') $currency_code=$conf->currency;\n\n\t\t$listofcurrenciesbefore=array('USD','GBP','AUD','MXN','PEN');\n\t\tif (in_array($currency_code,$listofcurrenciesbefore)) $cursymbolbefore.=$outlangs->getCurrencySymbol($currency_code);\n\t\telse\n\t\t{\n\t\t\t$tmpcur=$outlangs->getCurrencySymbol($currency_code);\n\t\t\t$cursymbolafter.=($tmpcur == $currency_code ? ' '.$tmpcur : $tmpcur);\n\t\t}\n\t}\n\t$output=$cursymbolbefore.$output.$end.($cursymbolafter?' ':'').$cursymbolafter;\n\n\treturn $output;\n}\n\n/**\n *\tFunction that return a number with universal decimal format (decimal separator is '.') from an amount typed by a user.\n *\tFunction to use on each input amount before any numeric test or database insert\n *\n *\t@param\tfloat\t$amount\t\t\tAmount to convert/clean\n *\t@param\tstring\t$rounding\t\t''=No rounding\n * \t\t\t\t\t\t\t\t\t'MU'=Round to Max unit price (MAIN_MAX_DECIMALS_UNIT)\n *\t\t\t\t\t\t\t\t\t'MT'=Round to Max for totals with Tax (MAIN_MAX_DECIMALS_TOT)\n *\t\t\t\t\t\t\t\t\t'MS'=Round to Max for stock quantity (MAIN_MAX_DECIMALS_STOCK)\n * \t@param\tint\t\t$alreadysqlnb\tPut 1 if you know that content is already universal format number\n *\t@return\tstring\t\t\t\t\tAmount with universal numeric format (Example: '99.99999') or unchanged text if conversion fails.\n *\n *\t@see    price\t\t\t\t\tOpposite function of price2num\n */\nfunction price2num($amount,$rounding='',$alreadysqlnb=0)\n{\n\tglobal $langs,$conf;\n\n\t// Round PHP function does not allow number like '1,234.56' nor '1.234,56' nor '1 234,56'\n\t// Numbers must be '1234.56'\n\t// Decimal delimiter for PHP and database SQL requests must be '.'\n\t$dec=','; $thousand=' ';\n\tif ($langs->transnoentitiesnoconv(\"SeparatorDecimal\") != \"SeparatorDecimal\")  $dec=$langs->transnoentitiesnoconv(\"SeparatorDecimal\");\n\tif ($langs->transnoentitiesnoconv(\"SeparatorThousand\")!= \"SeparatorThousand\") $thousand=$langs->transnoentitiesnoconv(\"SeparatorThousand\");\n\tif ($thousand == 'None') $thousand='';\n\telseif ($thousand == 'Space') $thousand=' ';\n\t//print \"amount=\".$amount.\" html=\".$form.\" trunc=\".$trunc.\" nbdecimal=\".$nbdecimal.\" dec='\".$dec.\"' thousand='\".$thousand.\"'<br>\";\n\n\t// Convert value to universal number format (no thousand separator, '.' as decimal separator)\n\tif ($alreadysqlnb != 1)\t// If not a PHP number or unknown, we change format\n\t{\n\t\t//print 'PP'.$amount.' - '.$dec.' - '.$thousand.' - '.intval($amount).'<br>';\n\n\t\t// Convert amount to format with dolibarr dec and thousand (this is because PHP convert a number\n\t\t// to format defined by LC_NUMERIC after a calculation and we want source format to be like defined by Dolibarr setup.\n\t\tif (is_numeric($amount))\n\t\t{\n\t\t\t// We put in temps value of decimal (\"0.00001\"). Works with 0 and 2.0E-5 and 9999.10\n\t\t\t$temps=sprintf(\"%0.10F\",$amount-intval($amount));\t// temps=0.0000000000 or 0.0000200000 or 9999.1000000000\n\t\t\t$temps=preg_replace('/([\\.1-9])0+$/','\\\\1',$temps); // temps=0. or 0.00002 or 9999.1\n\t\t\t$nbofdec=max(0,dol_strlen($temps)-2);\t// -2 to remove \"0.\"\n\t\t\t$amount=number_format($amount,$nbofdec,$dec,$thousand);\n\t\t}\n\t\t//print \"QQ\".$amount.'<br>';\n\n\t\t// Now make replace (the main goal of function)\n\t\tif ($thousand != ',' && $thousand != '.') $amount=str_replace(',','.',$amount);\t// To accept 2 notations for french users\n\t\t$amount=str_replace(' ','',$amount);\t\t// To avoid spaces\n\t\t$amount=str_replace($thousand,'',$amount);\t// Replace of thousand before replace of dec to avoid pb if thousand is .\n\t\t$amount=str_replace($dec,'.',$amount);\n\t}\n\n\t// Now, make a rounding if required\n\tif ($rounding)\n\t{\n\t\t$nbofdectoround='';\n\t\tif ($rounding == 'MU')     $nbofdectoround=$conf->global->MAIN_MAX_DECIMALS_UNIT;\n\t\telseif ($rounding == 'MT') $nbofdectoround=$conf->global->MAIN_MAX_DECIMALS_TOT;\n\t\telseif ($rounding == 'MS') $nbofdectoround=empty($conf->global->MAIN_MAX_DECIMALS_STOCK)?5:$conf->global->MAIN_MAX_DECIMALS_STOCK;\n\t\telseif (is_numeric($rounding))  $nbofdectoround=$rounding; \t// For admin info page\n\t\t//print \"RR\".$amount.' - '.$nbofdectoround.'<br>';\n\t\tif (dol_strlen($nbofdectoround)) $amount = round($amount,$nbofdectoround);\t// $nbofdectoround can be 0.\n\t\telse return 'ErrorBadParameterProvidedToFunction';\n\t\t//print 'SS'.$amount.' - '.$nbofdec.' - '.$dec.' - '.$thousand.' - '.$nbofdectoround.'<br>';\n\n\t\t// Convert amount to format with dolibarr dec and thousand (this is because PHP convert a number\n\t\t// to format defined by LC_NUMERIC after a calculation and we want source format to be defined by Dolibarr setup.\n\t\tif (is_numeric($amount))\n\t\t{\n\t\t\t// We put in temps value of decimal (\"0.00001\"). Works with 0 and 2.0E-5 and 9999.10\n\t\t\t$temps=sprintf(\"%0.10F\",$amount-intval($amount));\t// temps=0.0000000000 or 0.0000200000 or 9999.1000000000\n\t\t\t$temps=preg_replace('/([\\.1-9])0+$/','\\\\1',$temps); // temps=0. or 0.00002 or 9999.1\n\t\t\t$nbofdec=max(0,dol_strlen($temps)-2);\t// -2 to remove \"0.\"\n\t\t\t$amount=number_format($amount,min($nbofdec,$nbofdectoround),$dec,$thousand);\t\t// Convert amount to format with dolibarr dec and thousand\n\t\t}\n\t\t//print \"TT\".$amount.'<br>';\n\n\t\t// Always make replace because each math function (like round) replace\n\t\t// with local values and we want a number that has a SQL string format x.y\n\t\tif ($thousand != ',' && $thousand != '.') $amount=str_replace(',','.',$amount);\t// To accept 2 notations for french users\n\t\t$amount=str_replace(' ','',$amount);\t\t// To avoid spaces\n\t\t$amount=str_replace($thousand,'',$amount);\t// Replace of thousand before replace of dec to avoid pb if thousand is .\n\t\t$amount=str_replace($dec,'.',$amount);\n\t}\n\n\treturn $amount;\n}\n\n\n/**\n * Output a dimension with best unit\n *\n * @param   float       $dimension      Dimension\n * @param   int         $unit           Unit of dimension (0, -3, ...)\n * @param   string      $type           'weight', 'volume', ...\n * @param   Translate   $outputlangs    Translate language object\n * @param   int         $round          -1 = non rounding, x = number of decimal\n * @param   string      $forceunitoutput    'no' or numeric (-3, -6, ...) compared to $unit\n * @return  string                      String to show dimensions\n */\nfunction showDimensionInBestUnit($dimension, $unit, $type, $outputlangs, $round=-1, $forceunitoutput='no')\n{\n    require_once DOL_DOCUMENT_ROOT.'/core/lib/product.lib.php';\n\n    if (($forceunitoutput == 'no' && $dimension < 1/10000) || (is_numeric($forceunitoutput) && $forceunitoutput == -6))\n    {\n        $dimension = $dimension * 1000000;\n        $unit = $unit - 6;\n    }\n    elseif (($forceunitoutput == 'no' && $dimension < 1/10) || (is_numeric($forceunitoutput) && $forceunitoutput == -3))\n    {\n        $dimension = $dimension * 1000;\n        $unit = $unit - 3;\n    }\n    elseif (($forceunitoutput == 'no' && $dimension > 100000000) || (is_numeric($forceunitoutput) && $forceunitoutput == 6))\n    {\n        $dimension = $dimension / 1000000;\n        $unit = $unit + 6;\n    }\n    elseif (($forceunitoutput == 'no' && $dimension > 100000) || (is_numeric($forceunitoutput) && $forceunitoutput == 3))\n    {\n        $dimension = $dimension / 1000;\n        $unit = $unit + 3;\n    }\n\n    $ret=price($dimension, 0, $outputlangs, 0, 0, $round).' '.measuring_units_string($unit, $type);\n\n    return $ret;\n}\n\n\n/**\n *\tReturn localtax rate for a particular vat, when selling a product with vat $vatrate, from a $thirdparty_buyer to a $thirdparty_seller\n *  Note: This function applies same rules than get_default_tva\n *\n * \t@param\tfloat\t\t$vatrate\t\t        Vat rate. Can be '8.5' or '8.5 (VATCODEX)' for example\n * \t@param  int\t\t\t$local\t\t         \tLocal tax to search and return (1 or 2 return only tax rate 1 or tax rate 2)\n *  @param  Societe\t\t$thirdparty_buyer    \tObject of buying third party\n *  @param\tSociete\t\t$thirdparty_seller\t\tObject of selling third party ($mysoc if not defined)\n *  @param\tint\t\t\t$vatnpr\t\t\t\t\tIf vat rate is NPR or not\n * \t@return\tmixed\t\t\t   \t\t\t\t\t0 if not found, localtax rate if found\n *  @see get_default_tva\n */\nfunction get_localtax($vatrate, $local, $thirdparty_buyer=\"\", $thirdparty_seller=\"\", $vatnpr=0)\n{\n\tglobal $db, $conf, $mysoc;\n\n\tif (empty($thirdparty_seller) || ! is_object($thirdparty_seller)) $thirdparty_seller=$mysoc;\n\n\tdol_syslog(\"get_localtax tva=\".$vatrate.\" local=\".$local.\" thirdparty_buyer id=\".(is_object($thirdparty_buyer)?$thirdparty_buyer->id:'').\"/country_code=\".(is_object($thirdparty_buyer)?$thirdparty_buyer->country_code:'').\" thirdparty_seller id=\".$thirdparty_seller->id.\"/country_code=\".$thirdparty_seller->country_code.\" thirdparty_seller localtax1_assuj=\".$thirdparty_seller->localtax1_assuj.\"  thirdparty_seller localtax2_assuj=\".$thirdparty_seller->localtax2_assuj);\n\n\t$vatratecleaned = $vatrate;\n\tif (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg))      // If vat is \"xx (yy)\"\n\t{\n        $vatratecleaned = trim($reg[1]);\n\t    $vatratecode = $reg[2];\n\t}\n\n\t/*if ($thirdparty_buyer->country_code != $thirdparty_seller->country_code)\n\t{\n\t\treturn 0;\n\t}*/\n\n\t// Some test to guess with no need to make database access\n\tif ($mysoc->country_code == 'ES') // For spain localtaxes 1 and 2, tax is qualified if buyer use local taxe\n\t{\n\t\tif ($local == 1)\n\t\t{\n\t\t\tif (! $mysoc->localtax1_assuj || (string) $vatratecleaned == \"0\") return 0;\n\t\t\tif ($thirdparty_seller->id == $mysoc->id)\n\t\t\t{\n\t\t\t\tif (! $thirdparty_buyer->localtax1_assuj) return 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (! $thirdparty_seller->localtax1_assuj) return 0;\n\t\t\t}\n\t\t}\n\n\t\tif ($local == 2)\n\t\t{\n\t\t\tif (! $mysoc->localtax2_assuj || (string) $vatratecleaned == \"0\") return 0;\n\t\t\tif ($thirdparty_seller->id == $mysoc->id)\n\t\t\t{\n\t\t\t\tif (! $thirdparty_buyer->localtax2_assuj) return 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (! $thirdparty_seller->localtax2_assuj) return 0;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif ($local == 1 && ! $thirdparty_seller->localtax1_assuj) return 0;\n\t\tif ($local == 2 && ! $thirdparty_seller->localtax2_assuj) return 0;\n\t}\n\n\t// For some country MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY is forced to on.\n\tif (in_array($mysoc->country_code, array('ES')))\n\t{\n\t    $conf->global->MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY = 1;\n\t}\n\n\t// Search local taxes\n\tif (! empty($conf->global->MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY))\n\t{\n    \tif ($local==1)\n    \t{\n    \t\tif ($thirdparty_seller != $mysoc)\n    \t\t{\n    \t\t\tif (!isOnlyOneLocalTax($local))  // TODO We should provide $vatrate to search on correct line and not always on line with highest vat rate\n    \t\t\t{\n    \t\t\t\treturn $thirdparty_seller->localtax1_value;\n    \t\t\t}\n    \t\t}\n    \t\telse  // i am the seller\n    \t\t{\n    \t\t\tif (!isOnlyOneLocalTax($local))  // TODO If seller is me, why not always returning this, even if there is only one locatax vat.\n    \t\t\t{\n    \t\t\t\treturn $conf->global->MAIN_INFO_VALUE_LOCALTAX1;\n    \t\t\t}\n    \t\t}\n    \t}\n    \tif ($local==2)\n    \t{\n    \t\tif ($thirdparty_seller != $mysoc)\n    \t\t{\n    \t\t\tif (!isOnlyOneLocalTax($local))  // TODO We should provide $vatrate to search on correct line and not always on line with highest vat rate\n    \t\t\t// TODO We should also return value defined on thirdparty only if defined\n    \t\t\t{\n    \t\t\t\treturn $thirdparty_seller->localtax2_value;\n    \t\t\t}\n    \t\t}\n    \t\telse  // i am the seller\n    \t\t{\n    \t\t\tif (!isOnlyOneLocalTax($local))  // This is for spain only, we don't return value found into datbase even if there is only one locatax vat.\n    \t\t\t{\n    \t\t\t\treturn $conf->global->MAIN_INFO_VALUE_LOCALTAX2;\n    \t\t\t}\n    \t\t}\n    \t}\n\t}\n\n\t// By default, search value of local tax on line of common tax\n\t$sql  = \"SELECT t.localtax1, t.localtax2, t.localtax1_type, t.localtax2_type\";\n   \t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n   \t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$thirdparty_seller->country_code.\"'\";\n   \t$sql .= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n   \tif ($vatratecode) $sql.= \" AND t.code ='\".$vatratecode.\"'\";\t\t// If we have the code, we use it in priority\n   \telse $sql.= \" AND t.recuperableonly ='\".$vatnpr.\"'\";\n   \tdol_syslog(\"get_localtax\", LOG_DEBUG);\n   \t$resql=$db->query($sql);\n\n   \tif ($resql)\n   \t{\n   \t\t$obj = $db->fetch_object($resql);\n   \t\tif ($local==1) return $obj->localtax1;\n   \t\telseif ($local==2) return $obj->localtax2;\n\t}\n\n\treturn 0;\n}\n\n\n/**\n * Return true if LocalTax (1 or 2) is unique.\n * Example: If localtax1 is 5 on line with highest common vat rate, return true\n * Example: If localtax1 is 5:8:15 on line with highest common vat rate, return false\n *\n * @param   int \t$local\tLocal tax to test (1 or 2)\n * @return  boolean \t\tTrue if LocalTax have multiple values, False if not\n */\nfunction isOnlyOneLocalTax($local)\n{\n\t$tax=get_localtax_by_third($local);\n\n\t$valors=explode(\":\", $tax);\n\n\tif (count($valors)>1)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\n\n/**\n * Get values of localtaxes (1 or 2) for company country for the common vat with the highest value\n *\n * @param\tint\t\t$local \tLocalTax to get\n * @return\tnumber\t\t\tValues of localtax\n */\nfunction get_localtax_by_third($local)\n{\n\tglobal $db, $mysoc;\n\t$sql =\"SELECT t.localtax1, t.localtax2 \";\n\t$sql.=\" FROM \".MAIN_DB_PREFIX.\"c_tva as t inner join \".MAIN_DB_PREFIX.\"c_country as c ON c.rowid=t.fk_pays\";\n\t$sql.=\" WHERE c.code = '\".$mysoc->country_code.\"' AND t.active = 1 AND t.taux=(\";\n\t$sql.=\"  SELECT max(tt.taux) FROM \".MAIN_DB_PREFIX.\"c_tva as tt inner join \".MAIN_DB_PREFIX.\"c_country as c ON c.rowid=tt.fk_pays\";\n\t$sql.=\"  WHERE c.code = '\".$mysoc->country_code.\"' AND tt.active = 1\";\n\t$sql.=\"  )\";\n\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($local==1) return $obj->localtax1;\n\t\telseif ($local==2) return $obj->localtax2;\n\t}\n\n\treturn 0;\n\n}\n\n\n/**\n *  Get vat main information from Id.\n *  You can call getLocalTaxesFromRate after to get other fields.\n *\n *  @param\tint|string  $vatrate\t\t    VAT ID or Rate. Value can be value or the string with code into parenthesis or rowid if $firstparamisid is 1. Example: '8.5' or '8.5 (8.5NPR)' or 123.\n *  @param\tSociete\t    $buyer         \t\tCompany object\n *  @param\tSociete\t    $seller        \t\tCompany object\n *  @param  int         $firstparamisid     1 if first param is id into table (use this if you can)\n *  @return\tarray       \t  \t\t\t\tarray('rowid'=> , 'code'=> ...)\n *  @see getLocalTaxesFromRate\n */\nfunction getTaxesFromId($vatrate, $buyer=null, $seller=null, $firstparamisid=1)\n{\n    global $db, $mysoc;\n\n    dol_syslog(\"getTaxesFromId vatrowid=\".$vatrate);\n\n    // Search local taxes\n    $sql = \"SELECT t.rowid, t.code, t.taux as rate, t.recuperableonly as npr, t.accountancy_code_sell, t.accountancy_code_buy\";\n    $sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t\";\n    if ($firstparamisid) $sql.= \" WHERE t.rowid = \".(int) $vatrate;\n    else\n    {\n        $vatratecleaned = $vatrate;\n        $vatratecode = '';\n        if (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg))      // If vat is \"xx (yy)\"\n        {\n            $vatratecleaned = $reg[1];\n            $vatratecode = $reg[2];\n        }\n\n        $sql.=\", \".MAIN_DB_PREFIX.\"c_country as c\";\n        if ($mysoc->country_code == 'ES') $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$buyer->country_code.\"'\";    // local tax in spain use the buyer country ??\n        else $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$seller->country_code.\"'\";\n        $sql.= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n        if ($vatratecode) $sql.= \" AND t.code = '\".$vatratecode.\"'\";\n    }\n\n    $resql=$db->query($sql);\n    if ($resql)\n    {\n        $obj = $db->fetch_object($resql);\n        if ($obj) return array('rowid'=>$obj->rowid, 'code'=>$obj->code, 'rate'=>$obj->rate, 'npr'=>$obj->npr, 'accountancy_code_sell'=>$obj->accountancy_code_sell, 'accountancy_code_buy'=>$obj->accountancy_code_buy);\n        else return array();\n    }\n    else dol_print_error($db);\n\n    return array();\n}\n\n/**\n *  Get type and rate of localtaxes for a particular vat rate/country fo thirdparty\n *  TODO\n *  This function is ALSO called to retrieve type for building PDF. Such call of function must be removed.\n *  Instead this function must be called when adding a line to get the array of localtax and type, and then\n *  provide it to the function calcul_price_total.\n *\n *  @param\tint|string  $vatrate\t\t\tVAT ID or Rate. Value can be value or the string with code into parenthesis or rowid if $firstparamisid is 1. Example: '8.5' or '8.5 (8.5NPR)' or 123.\n *  @param\tint\t\t    $local              Number of localtax (1 or 2, or 0 to return 1 & 2)\n *  @param\tSociete\t    $buyer         \t\tCompany object\n *  @param\tSociete\t    $seller        \t\tCompany object\n *  @param  int         $firstparamisid     1 if first param is id into table (use this if you can)\n *  @return\tarray    \t    \t\t\t\tarray(localtax_type1(1-6/0 if not found), rate localtax1, localtax_type2, rate localtax2, accountancycodecust, accountancycodesupp)\n *  @see getTaxesFromId\n */\nfunction getLocalTaxesFromRate($vatrate, $local, $buyer, $seller, $firstparamisid=0)\n{\n\tglobal $db, $mysoc;\n\n\tdol_syslog(\"getLocalTaxesFromRate vatrate=\".$vatrate.\" local=\".$local);\n\n\t// Search local taxes\n\t$sql  = \"SELECT t.localtax1, t.localtax1_type, t.localtax2, t.localtax2_type, t.accountancy_code_sell, t.accountancy_code_buy\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t\";\n\tif ($firstparamisid) $sql.= \" WHERE t.rowid = \".(int) $vatrate;\n\telse\n\t{\n\t    $vatratecleaned = $vatrate;\n\t    $vatratecode = '';\n\t    if (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg))      // If vat is \"xx (yy)\"\n\t    {\n\t        $vatratecleaned = $reg[1];\n\t        $vatratecode = $reg[2];\n\t    }\n\n\t    $sql.=\", \".MAIN_DB_PREFIX.\"c_country as c\";\n    \tif ($mysoc->country_code == 'ES') $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$buyer->country_code.\"'\";    // local tax in spain use the buyer country ??\n    \telse $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$seller->country_code.\"'\";\n    \t$sql.= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n    \tif ($vatratecode) $sql.= \" AND t.code = '\".$vatratecode.\"'\";\n\t}\n\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($local == 1)\n\t\t{\n\t\t\tif (! isOnlyOneLocalTax(1))\n\t\t\t{\n\t\t\t\treturn array($obj->localtax1_type, get_localtax($vatrate, $local, $buyer, $seller), $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn array($obj->localtax1_type, $obj->localtax1,$obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t}\n\t\t}\n\t\telseif ($local == 2)\n\t\t{\n\t\t\tif (! isOnlyOneLocalTax(2))\n\t\t\t{\n\t\t\t\treturn array($obj->localtax2_type, get_localtax($vatrate, $local, $buyer, $seller),$obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn array($obj->localtax2_type, $obj->localtax2,$obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(! isOnlyOneLocalTax(1))\n\t\t\t{\n\t\t\t\tif(! isOnlyOneLocalTax(2))\n\t\t\t\t{\n\t\t\t\t\treturn array($obj->localtax1_type, get_localtax($vatrate, 1, $buyer, $seller), $obj->localtax2_type, get_localtax($vatrate, 2, $buyer, $seller), $obj->accountancy_code_sell,$obj->accountancy_code_buy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn array($obj->localtax1_type, get_localtax($vatrate, 1, $buyer, $seller), $obj->localtax2_type, $obj->localtax2, $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(! isOnlyOneLocalTax(2))\n\t\t\t\t{\n\t\t\t\t\treturn array($obj->localtax1_type, $obj->localtax1, $obj->localtax2_type, get_localtax($vatrate, 2, $buyer, $seller), $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn array($obj->localtax1_type, $obj->localtax1, $obj->localtax2_type, $obj->localtax2, $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tReturn vat rate of a product in a particular selling country or default country vat if product is unknown\n *  Function called by get_default_tva\n *\n *  @param\tint\t\t\t$idprod          \tId of product or 0 if not a predefined product\n *  @param  Societe\t\t$thirdparty_seller  Thirdparty with a ->country_code defined (FR, US, IT, ...)\n *\t@param\tint\t\t\t$idprodfournprice\tId product_fournisseur_price (for \"supplier\" order/invoice)\n *  @return float|string   \t\t\t\t    Vat rate to use with format 5.0 or '5.0 (XXX)'\n *  @see get_product_localtax_for_country\n */\nfunction get_product_vat_for_country($idprod, $thirdparty_seller, $idprodfournprice=0)\n{\n\tglobal $db,$conf,$mysoc;\n\n\trequire_once DOL_DOCUMENT_ROOT . '/product/class/product.class.php';\n\n\t$ret=0;\n\t$found=0;\n\n\tif ($idprod > 0)\n\t{\n\t\t// Load product\n\t\t$product=new Product($db);\n\t\t$result=$product->fetch($idprod);\n\n\t\tif ($mysoc->country_code == $thirdparty_seller->country_code) // If selling country is ours\n\t\t{\n\t\t\tif ($idprodfournprice > 0)     // We want vat for product for a \"supplier\" order or invoice\n\t\t\t{\n\t\t\t\t$product->get_buyprice($idprodfournprice,0,0,0);\n\t\t\t\t$ret=$product->vatrate_supplier;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$ret=$product->tva_tx;    // Default vat of product we defined\n\t\t\t\tif ($product->default_vat_code) $ret.=' ('.$product->default_vat_code.')';\n\t\t\t}\n\t\t\t$found=1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// TODO Read default product vat according to countrycode and product. Vat for couple countrycode/product is a feature not implemeted yet.\n\t\t\t// May be usefull/required if hidden option SERVICE_ARE_ECOMMERCE_200238EC is on\n\t\t}\n\t}\n\n\tif (! $found)\n\t{\n\t\tif (empty($conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS))\n\t\t{\n\t\t\t// If vat of product for the country not found or not defined, we return the first higher vat of country.\n\t\t\t$sql = \"SELECT taux as vat_rate\";\n\t\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t\t$sql.= \" WHERE t.active=1 AND t.fk_pays = c.rowid AND c.code='\".$thirdparty_seller->country_code.\"'\";\n\t\t\t$sql.= \" ORDER BY t.taux DESC, t.code ASC, t.recuperableonly ASC\";\n\t\t\t$sql.= $db->plimit(1);\n\n\t\t\t$resql=$db->query($sql);\n\t\t\tif ($resql)\n\t\t\t{\n\t\t\t\t$obj=$db->fetch_object($resql);\n\t\t\t\tif ($obj)\n\t\t\t\t{\n\t\t\t\t\t$ret=$obj->vat_rate;\n\t\t\t\t}\n\t\t\t\t$db->free($sql);\n\t\t\t}\n\t\t\telse dol_print_error($db);\n\t\t}\n\t\telse $ret=$conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS;    // Forced value if autodetect fails\n\t}\n\n\tdol_syslog(\"get_product_vat_for_country: ret=\".$ret);\n\treturn $ret;\n}\n\n/**\n *\tReturn localtax vat rate of a product in a particular selling country or default country vat if product is unknown\n *\n *  @param\tint\t\t$idprod         \t\tId of product\n *  @param  int\t\t$local          \t\t1 for localtax1, 2 for localtax 2\n *  @param  Societe\t$thirdparty_seller    \tThirdparty with a ->country_code defined (FR, US, IT, ...)\n *  @return int             \t\t\t\t<0 if KO, Vat rate if OK\n *  @see get_product_vat_for_country\n */\nfunction get_product_localtax_for_country($idprod, $local, $thirdparty_seller)\n{\n\tglobal $db,$mysoc;\n\n\tif (! class_exists('Product')) {\n\t\trequire_once DOL_DOCUMENT_ROOT . '/product/class/product.class.php';\n\t}\n\n\t$ret=0;\n\t$found=0;\n\n\tif ($idprod > 0)\n\t{\n\t\t// Load product\n\t\t$product=new Product($db);\n\t\t$result=$product->fetch($idprod);\n\n\t\tif ($mysoc->country_code == $thirdparty_seller->country_code) // If selling country is ours\n\t\t{\n\t\t\t/* Not defined yet, so we don't use this\n\t\t\tif ($local==1) $ret=$product->localtax1_tx;\n\t\t\telseif ($local==2) $ret=$product->localtax2_tx;\n\t\t\t$found=1;\n\t\t\t*/\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// TODO Read default product vat according to countrycode and product\n\n\n\t\t}\n\t}\n\n\tif (! $found)\n\t{\n\t\t// If vat of product for the country not found or not defined, we return higher vat of country.\n\t\t$sql = \"SELECT taux as vat_rate, localtax1, localtax2\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t$sql.= \" WHERE t.active=1 AND t.fk_pays = c.rowid AND c.code='\".$thirdparty_seller->country_code.\"'\";\n\t\t$sql.= \" ORDER BY t.taux DESC, t.recuperableonly ASC\";\n\t\t$sql.= $db->plimit(1);\n\n\t\t$resql=$db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$obj=$db->fetch_object($resql);\n\t\t\tif ($obj)\n\t\t\t{\n\t\t\t\tif ($local==1) $ret=$obj->localtax1;\n\t\t\t\telseif ($local==2) $ret=$obj->localtax2;\n\t\t\t}\n\t\t}\n\t\telse dol_print_error($db);\n\t}\n\n\tdol_syslog(\"get_product_localtax_for_country: ret=\".$ret);\n\treturn $ret;\n}\n\n/**\n *\tFunction that return vat rate of a product line (according to seller, buyer and product vat rate)\n *   Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n *\t Si le (pays vendeur = pays acheteur) alors TVA par defaut=TVA du produit vendu. Fin de regle.\n *\t Si (vendeur et acheteur dans Communaute europeenne) et (bien vendu = moyen de transports neuf comme auto, bateau, avion) alors TVA par defaut=0 (La TVA doit etre paye par acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n *\t Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = particulier ou entreprise sans num TVA intra) alors TVA par defaut=TVA du produit vendu. Fin de regle\n *\t Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = entreprise avec num TVA) intra alors TVA par defaut=0. Fin de regle\n *\t Sinon TVA proposee par defaut=0. Fin de regle.\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tObjet societe vendeuse\n *\t@param  Societe\t\t$thirdparty_buyer   \tObjet societe acheteuse\n *\t@param  int\t\t\t$idprod\t\t\t\t\tId product\n *\t@param\tint\t\t\t$idprodfournprice\t\tId product_fournisseur_price (for supplier order/invoice)\n *\t@return float|string   \t\t\t\t      \tVat rate to use with format 5.0 or '5.0 (XXX)', -1 if we can't guess it\n *  @see get_default_npr, get_default_localtax\n */\nfunction get_default_tva(Societe $thirdparty_seller, Societe $thirdparty_buyer, $idprod=0, $idprodfournprice=0)\n{\n\tglobal $conf;\n\n\t// Note: possible values for tva_assuj are 0/1 or franchise/reel\n\t$seller_use_vat=((is_numeric($thirdparty_seller->tva_assuj) && ! $thirdparty_seller->tva_assuj) || (! is_numeric($thirdparty_seller->tva_assuj) && $thirdparty_seller->tva_assuj=='franchise'))?0:1;\n\n\t$seller_country_code=$thirdparty_seller->country_code;\n\t$seller_in_cee=$thirdparty_seller->isInEEC();\n\n\t$buyer_country_code=$thirdparty_buyer->country_code;\n\t$buyer_in_cee=$thirdparty_buyer->isInEEC();\n\n\tdol_syslog(\"get_default_tva: seller use vat=\".$seller_use_vat.\", seller country=\".$seller_country_code.\", seller in cee=\".$seller_in_cee.\", buyer country=\".$buyer_country_code.\", buyer in cee=\".$buyer_in_cee.\", idprod=\".$idprod.\", idprodfournprice=\".$idprodfournprice.\", SERVICE_ARE_ECOMMERCE_200238EC=\".(! empty($conf->global->SERVICES_ARE_ECOMMERCE_200238EC)?$conf->global->SERVICES_ARE_ECOMMERCE_200238EC:''));\n\n\t// If services are eServices according to EU Council Directive 2002/38/EC (http://ec.europa.eu/taxation_customs/taxation/vat/traders/e-commerce/article_1610_en.htm)\n\t// we use the buyer VAT.\n\tif (! empty($conf->global->SERVICE_ARE_ECOMMERCE_200238EC))\n\t{\n\t\tif ($seller_in_cee && $buyer_in_cee && ! $thirdparty_buyer->isACompany())\n\t\t{\n\t\t\t//print 'VATRULE 0';\n\t\t\treturn get_product_vat_for_country($idprod,$thirdparty_buyer,$idprodfournprice);\n\t\t}\n\t}\n\n\t// If seller does not use VAT\n\tif (! $seller_use_vat)\n\t{\n\t\t//print 'VATRULE 1';\n\t\treturn 0;\n\t}\n\n\t// Le test ci-dessus ne devrait pas etre necessaire. Me signaler l'exemple du cas juridique concerne si le test suivant n'est pas suffisant.\n\n\t// Si le (pays vendeur = pays acheteur) alors la TVA par defaut=TVA du produit vendu. Fin de regle.\n\tif (($seller_country_code == $buyer_country_code)\n\t|| (in_array($seller_country_code,array('FR,MC')) && in_array($buyer_country_code,array('FR','MC')))) // Warning ->country_code not always defined\n\t{\n\t\t//print 'VATRULE 2';\n\t\treturn get_product_vat_for_country($idprod,$thirdparty_seller,$idprodfournprice);\n\t}\n\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (bien vendu = moyen de transports neuf comme auto, bateau, avion) alors TVA par defaut=0 (La TVA doit etre paye par l'acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n\t// Not supported\n\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = entreprise) alors TVA par defaut=0. Fin de regle\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = particulier) alors TVA par defaut=TVA du produit vendu. Fin de regle\n\tif (($seller_in_cee && $buyer_in_cee))\n\t{\n\t\t$isacompany=$thirdparty_buyer->isACompany();\n\t\tif ($isacompany)\n\t\t{\n\t\t\t//print 'VATRULE 3';\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//print 'VATRULE 4';\n\t\t\treturn get_product_vat_for_country($idprod,$thirdparty_seller,$idprodfournprice);\n\t\t}\n\t}\n\n\t// Sinon la TVA proposee par defaut=0. Fin de regle.\n\t// Rem: Cela signifie qu'au moins un des 2 est hors Communaute europeenne et que le pays differe\n\t//print 'VATRULE 5';\n\treturn 0;\n}\n\n\n/**\n *\tFonction qui renvoie si tva doit etre tva percue recuperable\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tThirdparty seller\n *\t@param  Societe\t\t$thirdparty_buyer   \tThirdparty buyer\n *  @param  int\t\t\t$idprod                 Id product\n *  @param\tint\t\t\t$idprodfournprice\t\tId supplier price for product\n *\t@return float       \t\t\t        \t0 or 1\n *  @see get_default_tva, get_default_localtax\n */\nfunction get_default_npr(Societe $thirdparty_seller, Societe $thirdparty_buyer, $idprod=0, $idprodfournprice=0)\n{\n\tglobal $db;\n\n\tif ($idprodfournprice > 0)\n\t{\n\t\tif (! class_exists('ProductFournisseur'))\n\t\t\trequire_once DOL_DOCUMENT_ROOT . '/fourn/class/fournisseur.product.class.php';\n\t\t$prodprice = new ProductFournisseur($db);\n\t\t$prodprice->fetch_product_fournisseur_price($idprodfournprice);\n\t\treturn $prodprice->fourn_tva_npr;\n\t}\n\telseif ($idprod > 0)\n\t{\n\t\tif (! class_exists('Product'))\n\t\t\trequire_once DOL_DOCUMENT_ROOT . '/product/class/product.class.php';\n\t\t$prod = new Product($db);\n\t\t$prod->fetch($idprod);\n\t\treturn $prod->tva_npr;\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tFunction that return localtax of a product line (according to seller, buyer and product vat rate)\n *   Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n *\t Si le (pays vendeur = pays acheteur) alors TVA par defaut=TVA du produit vendu. Fin de regle.\n *\t Sinon TVA proposee par defaut=0. Fin de regle.\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tThirdparty seller\n *\t@param  Societe\t\t$thirdparty_buyer   \tThirdparty buyer\n *  @param\tint\t\t\t$local\t\t\t\t\tLocaltax to process (1 or 2)\n *\t@param  int\t\t\t$idprod\t\t\t\t\tId product\n *\t@return integer        \t\t\t\t       \tlocaltax, -1 si ne peut etre determine\n *  @see get_default_tva, get_default_npr\n */\nfunction get_default_localtax($thirdparty_seller, $thirdparty_buyer, $local, $idprod=0)\n{\n\tglobal $mysoc;\n\n\tif (!is_object($thirdparty_seller)) return -1;\n\tif (!is_object($thirdparty_buyer)) return -1;\n\n\tif ($local==1) // Localtax 1\n\t{\n\t\tif ($mysoc->country_code == 'ES')\n\t\t{\n\t\t\tif (is_numeric($thirdparty_buyer->localtax1_assuj) && ! $thirdparty_buyer->localtax1_assuj) return 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Si vendeur non assujeti a Localtax1, localtax1 par default=0\n\t\t\tif (is_numeric($thirdparty_seller->localtax1_assuj) && ! $thirdparty_seller->localtax1_assuj) return 0;\n\t\t\tif (! is_numeric($thirdparty_seller->localtax1_assuj) && $thirdparty_seller->localtax1_assuj=='localtax1off') return 0;\n\t\t}\n\t}\n\telseif ($local==2) //I Localtax 2\n\t{\n\t\t// Si vendeur non assujeti a Localtax2, localtax2 par default=0\n\t\tif (is_numeric($thirdparty_seller->localtax2_assuj) && ! $thirdparty_seller->localtax2_assuj) return 0;\n\t\tif (! is_numeric($thirdparty_seller->localtax2_assuj) && $thirdparty_seller->localtax2_assuj=='localtax2off') return 0;\n\t}\n\n\tif ($thirdparty_seller->country_code == $thirdparty_buyer->country_code)\n\t{\n\t\treturn get_product_localtax_for_country($idprod, $local, $thirdparty_seller);\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tReturn yes or no in current language\n *\n *\t@param\tstring\t$yesno\t\t\tValue to test (1, 'yes', 'true' or 0, 'no', 'false')\n *\t@param\tinteger\t$case\t\t\t1=Yes/No, 0=yes/no, 2=Disabled checkbox, 3=Disabled checkbox + Yes/No\n *\t@param\tint\t\t$color\t\t\t0=texte only, 1=Text is formated with a color font style ('ok' or 'error'), 2=Text is formated with 'ok' color.\n *\t@return\tstring\t\t\t\t\tHTML string\n */\nfunction yn($yesno, $case=1, $color=0)\n{\n\tglobal $langs;\n\t$result='unknown'; $classname='';\n\tif ($yesno == 1 || strtolower($yesno) == 'yes' || strtolower($yesno) == 'true') \t// A mettre avant test sur no a cause du == 0\n\t{\n\t\t$result=$langs->trans('yes');\n\t\tif ($case == 1 || $case == 3) $result=$langs->trans(\"Yes\");\n\t\tif ($case == 2) $result='<input type=\"checkbox\" value=\"1\" checked disabled>';\n\t\tif ($case == 3) $result='<input type=\"checkbox\" value=\"1\" checked disabled> '.$result;\n\n\t\t$classname='ok';\n\t}\n\telseif ($yesno == 0 || strtolower($yesno) == 'no' || strtolower($yesno) == 'false')\n\t{\n\t\t$result=$langs->trans(\"no\");\n\t\tif ($case == 1 || $case == 3) $result=$langs->trans(\"No\");\n\t\tif ($case == 2) $result='<input type=\"checkbox\" value=\"0\" disabled>';\n\t\tif ($case == 3) $result='<input type=\"checkbox\" value=\"0\" disabled> '.$result;\n\n\t\tif ($color == 2) $classname='ok';\n\t\telse $classname='error';\n\t}\n\tif ($color) return '<font class=\"'.$classname.'\">'.$result.'</font>';\n\treturn $result;\n}\n\n\n/**\n *\tReturn a path to have a directory according to object.\n *  New usage:       $conf->module->multidir_output[$object->entity].'/'.get_exdir(0, 0, 0, 1, $object, $modulepart)\n *         or:       $conf->module->dir_output.'/'.get_exdir(0, 0, 0, 1, $object, $modulepart)     if multidir_output not defined.\n *  Old usage:       '015' with level 3->\"0/1/5/\", '015' with level 1->\"5/\", 'ABC-1' with level 3 ->\"0/0/1/\"\n *\n *\t@param\tstring\t$num            Id of object (deprecated, $object will be used in future)\n *\t@param  int\t\t$level\t\t    Level of subdirs to return (1, 2 or 3 levels). (deprecated, global option will be used in future)\n * \t@param\tint\t\t$alpha\t\t    0=Keep number only to forge path, 1=Use alpha part afer the - (By default, use 0). (deprecated, global option will be used in future)\n *  @param  int\t\t$withoutslash   0=With slash at end (except if '/', we return ''), 1=without slash at end\n *  @param\tObject\t$object\t\t\tObject\n *  @param\tstring\t$modulepart\t\tType of object ('invoice_supplier, 'donation', 'invoice', ...')\n *  @return\tstring\t\t\t\t\tDir to use ending. Example '' or '1/' or '1/2/'\n */\nfunction get_exdir($num, $level, $alpha, $withoutslash, $object, $modulepart)\n{\n\tglobal $conf;\n\n\t$path = '';\n\n\t$arrayforoldpath=array('cheque','user','category','holiday','shipment','supplier_invoice','invoice_supplier','mailing','supplier_payment');\n\tif (! empty($conf->global->PRODUCT_USE_OLD_PATH_FOR_PHOTO)) $arrayforoldpath[]='product';\n\tif (! empty($level) && in_array($modulepart, $arrayforoldpath))\n\t{\n\t\t// This part should be removed once all code is using \"get_exdir\" to forge path, with all parameters provided.\n\t\tif (empty($alpha)) $num = preg_replace('/([^0-9])/i','',$num);\n\t\telse $num = preg_replace('/^.*\\-/i','',$num);\n\t\t$num = substr(\"000\".$num, -$level);\n\t\tif ($level == 1) $path = substr($num,0,1);\n\t\tif ($level == 2) $path = substr($num,1,1).'/'.substr($num,0,1);\n\t\tif ($level == 3) $path = substr($num,2,1).'/'.substr($num,1,1).'/'.substr($num,0,1);\n\t}\n\telse\n\t{\n\t\t// TODO\n\t\t// We will enhance here a common way of forging path for document storage\n\t\t// Here, object->id, object->ref and object->modulepart are required.\n        if (in_array($modulepart, array('thirdparty','contact','member')))\n        {\n            $path=$object->ref?$object->ref:$object->id;\n        }\n\t}\n\n\tif (empty($withoutslash) && ! empty($path)) $path.='/';\n\treturn $path;\n}\n\n/**\n *\tCreation of a directory (this can create recursive subdir)\n *\n *\t@param\tstring\t$dir\t\tDirectory to create (Separator must be '/'. Example: '/mydir/mysubdir')\n *\t@param\tstring\t$dataroot\tData root directory (To avoid having the data root in the loop. Using this will also lost the warning on first dir PHP has no permission when open_basedir is used)\n *  @param\tint\t\t$newmask\tMask for new file (Defaults to $conf->global->MAIN_UMASK or 0755 if unavailable). Example: '0444'\n *\t@return int         \t\t< 0 if KO, 0 = already exists, > 0 if OK\n */\nfunction dol_mkdir($dir, $dataroot='', $newmask=null)\n{\n\tglobal $conf;\n\n\tdol_syslog(\"functions.lib::dol_mkdir: dir=\".$dir,LOG_INFO);\n\n\t$dir_osencoded=dol_osencode($dir);\n\tif (@is_dir($dir_osencoded)) return 0;\n\n\t$nberr=0;\n\t$nbcreated=0;\n\n\t$ccdir='';\n\tif (! empty($dataroot)) {\n\t\t// Remove data root from loop\n\t\t$dir = str_replace($dataroot.'/', '', $dir);\n\t\t$ccdir = $dataroot.'/';\n\t}\n\n\t$cdir = explode(\"/\", $dir);\n\t$num=count($cdir);\n\tfor ($i = 0; $i < $num; $i++)\n\t{\n\t\tif ($i > 0) $ccdir .= '/'.$cdir[$i];\n\t\telse $ccdir .= $cdir[$i];\n\t\tif (preg_match(\"/^.:$/\",$ccdir,$regs)) continue;\t// Si chemin Windows incomplet, on poursuit par rep suivant\n\n\t\t// Attention, le is_dir() peut echouer bien que le rep existe.\n\t\t// (ex selon config de open_basedir)\n\t\tif ($ccdir)\n\t\t{\n\t\t\t$ccdir_osencoded=dol_osencode($ccdir);\n\t\t\tif (! @is_dir($ccdir_osencoded))\n\t\t\t{\n\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Directory '\".$ccdir.\"' does not exists or is outside open_basedir PHP setting.\",LOG_DEBUG);\n\n\t\t\t\tumask(0);\n\t\t\t\t$dirmaskdec=octdec($newmask);\n\t\t\t\tif (empty($newmask)) {\n\t\t\t\t\t$dirmaskdec = empty( $conf->global->MAIN_UMASK ) ? octdec( '0755' ) : octdec( $conf->global->MAIN_UMASK );\n\t\t\t\t}\n\t\t\t\t$dirmaskdec |= octdec('0111');  // Set x bit required for directories\n\t\t\t\tif (! @mkdir($ccdir_osencoded, $dirmaskdec))\n\t\t\t\t{\n\t\t\t\t\t// Si le is_dir a renvoye une fausse info, alors on passe ici.\n\t\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Fails to create directory '\".$ccdir.\"' or directory already exists.\",LOG_WARNING);\n\t\t\t\t\t$nberr++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Directory '\".$ccdir.\"' created\",LOG_DEBUG);\n\t\t\t\t\t$nberr=0;\t// On remet a zero car si on arrive ici, cela veut dire que les echecs precedents peuvent etre ignore\n\t\t\t\t\t$nbcreated++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$nberr=0;\t// On remet a zero car si on arrive ici, cela veut dire que les echecs precedents peuvent etre ignores\n\t\t\t}\n\t\t}\n\t}\n\treturn ($nberr ? -$nberr : $nbcreated);\n}\n\n\n/**\n *\tReturn picto saying a field is required\n *\n *\t@return  string\t\tChaine avec picto obligatoire\n */\nfunction picto_required()\n{\n\treturn '<span class=\"fieldrequired\">*</span>';\n}\n\n\n/**\n *\tClean a string from all HTML tags and entities\n *\n *\t@param\tstring\t$StringHtml\t\t\tString to clean\n *\t@param\tinteger\t$removelinefeed\t\t1=Replace also new lines by a space, 0=Only last one are removed\n *  @param  string\t$pagecodeto      \tEncoding of input/output string\n *\t@return string\t    \t\t\t\tString cleaned\n *\n * \t@see\t\tdol_escape_htmltag\n */\nfunction dol_string_nohtmltag($StringHtml,$removelinefeed=1,$pagecodeto='UTF-8')\n{\n\t$pattern = \"/<[^<>]+>/\";\n\t$StringHtml = preg_replace('/<br[^>]*>/', \"\\n\", $StringHtml);\n\t$temp = dol_html_entity_decode($StringHtml,ENT_COMPAT,$pagecodeto);\n\n    // Exemple of $temp: <a href=\"/myurl\" title=\"<u>A title</u>\">0000-021</a>\n    $temp = preg_replace($pattern,\"\",$temp);    // pass 1\n    // $temp after pass 1: <a href=\"/myurl\" title=\"A title\">0000-021\n    $temp = preg_replace($pattern,\"\",$temp);    // pass 2\n    // $temp after pass 2: 0000-021\n\n\t// Supprime aussi les retours\n\tif ($removelinefeed) $temp=str_replace(array(\"\\r\\n\",\"\\r\",\"\\n\"),\" \",$temp);\n\n\t// et les espaces doubles\n\twhile(strpos($temp,\"  \"))\n\t{\n\t\t$temp = str_replace(\"  \",\" \",$temp);\n\t}\n\t$CleanString = trim($temp);\n\treturn $CleanString;\n}\n\n\n/**\n * Return first line of text. Cut will depends if content is HTML or not.\n *\n * @param \tstring\t$text\t\tInput text\n * @param\tint\t\t$nboflines  Nb of lines to get (default is 1 = first line only)\n * @return\tstring\t\t\t\tOutput text\n * @see dol_nboflines_bis, dol_string_nohtmltag, dol_escape_htmltag\n */\nfunction dolGetFirstLineOfText($text, $nboflines=1)\n{\n\tif ($nboflines == 1)\n\t{\n\t\tif (dol_textishtml($text))\n\t\t{\n\t\t\t$firstline=preg_replace('/<br[^>]*>.*$/s','',$text);\t\t// The s pattern modifier means the . can match newline characters\n\t\t\t$firstline=preg_replace('/<div[^>]*>.*$/s','',$firstline);\t// The s pattern modifier means the . can match newline characters\n\n\t\t}\n\t\telse\n\t\t{\n\t    \t$firstline=preg_replace('/[\\n\\r].*/','',$text);\n\t\t}\n    \treturn $firstline.((strlen($firstline) != strlen($text))?'...':'');\n\t}\n\telse\n\t{\n\t\t$ishtml=0;\n\t\tif (dol_textishtml($text))\n\t\t{\n\t\t\t$text=preg_replace('/\\n/','',$text);\n\t\t\t$ishtml=1;\n\t\t\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \" \", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \"<br>\", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\t\t}\n\n\t\t$text = strtr($text, $repTable);\n\t\tif ($charset == 'UTF-8') { $pattern = '/(<br[^>]*>)/Uu'; }\t// /U is to have UNGREEDY regex to limit to one html tag. /u is for UTF8 support\n\t\telse $pattern = '/(<br[^>]*>)/U';\t\t\t\t\t\t\t// /U is to have UNGREEDY regex to limit to one html tag.\n\t\t$a = preg_split($pattern, $text, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t\t$firstline='';\n\t\t$i=0;\n\t\t$nba = count($a);\t// 2x nb of lines in $a because $a contains also a line for each new line separator\n\t\twhile (($i < $nba) && ($i < ($nboflines * 2)))\n\t\t{\n\t\t\tif ($i % 2 == 0) $firstline .= $a[$i];\n\t\t\telseif (($i < (($nboflines * 2) - 1)) && ($i < ($nba - 1))) $firstline .= ($ishtml?\"<br>\\n\":\"\\n\");\n\t\t\t$i++;\n\t\t}\n\t\tunset($a);\n    \treturn $firstline.(($i < $nba)?'...':'');\n\t}\n}\n\n\n/**\n * Replace CRLF in string with a HTML BR tag\n *\n * @param\tstring\t$stringtoencode\t\tString to encode\n * @param\tint     $nl2brmode\t\t\t0=Adding br before \\n, 1=Replacing \\n by br\n * @param   bool\t$forxml             false=Use <br>, true=Use <br />\n * @return\tstring\t\t\t\t\t\tString encoded\n * @see dol_nboflines, dolGetFirstLineOfText\n */\nfunction dol_nl2br($stringtoencode,$nl2brmode=0,$forxml=false)\n{\n\tif (!$nl2brmode) {\n\t\treturn nl2br($stringtoencode, $forxml);\n\t} else {\n\t\t$ret=preg_replace('/(\\r\\n|\\r|\\n)/i', ($forxml?'<br />':'<br>'), $stringtoencode);\n\t\treturn $ret;\n\t}\n}\n\n\n/**\n *\tThis function is called to encode a string into a HTML string but differs from htmlentities because\n * \ta detection is done before to see if text is already HTML or not. Also, all entities but &,<,> are converted.\n *  This permits to encode special chars to entities with no double encoding for already encoded HTML strings.\n * \tThis function also remove last EOL or BR if $removelasteolbr=1 (default).\n *  For PDF usage, you can show text by 2 ways:\n *              - writeHTMLCell -> param must be encoded into HTML.\n *              - MultiCell -> param must not be encoded into HTML.\n *              Because writeHTMLCell convert also \\n into <br>, if function\n *              is used to build PDF, nl2brmode must be 1.\n *\n *\t@param\tstring\t$stringtoencode\t\tString to encode\n *\t@param\tint\t\t$nl2brmode\t\t\t0=Adding br before \\n, 1=Replacing \\n by br (for use with FPDF writeHTMLCell function for example)\n *  @param  string\t$pagecodefrom       Pagecode stringtoencode is encoded\n *  @param\tint\t\t$removelasteolbr\t1=Remove last br or lasts \\n (default), 0=Do nothing\n *  @return\tstring\t\t\t\t\t\tString encoded\n */\nfunction dol_htmlentitiesbr($stringtoencode,$nl2brmode=0,$pagecodefrom='UTF-8',$removelasteolbr=1)\n{\n\t$newstring=$stringtoencode;\n\tif (dol_textishtml($stringtoencode))\t// Check if text is already HTML or not\n\t{\n\t\t$newstring=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i','<br>',$newstring);\t// Replace \"<br type=\"_moz\" />\" by \"<br>\". It's same and avoid pb with FPDF.\n\t\tif ($removelasteolbr) $newstring=preg_replace('/<br>$/i','',$newstring);\t// Remove last <br> (remove only last one)\n\t\t$newstring=strtr($newstring,array('&'=>'__and__','<'=>'__lt__','>'=>'__gt__','\"'=>'__dquot__'));\n\t\t$newstring=dol_htmlentities($newstring,ENT_COMPAT,$pagecodefrom);\t// Make entity encoding\n\t\t$newstring=strtr($newstring,array('__and__'=>'&','__lt__'=>'<','__gt__'=>'>','__dquot__'=>'\"'));\n\t}\n\telse\n\t{\n\t\tif ($removelasteolbr) $newstring=preg_replace('/(\\r\\n|\\r|\\n)$/i','',$newstring);\t// Remove last \\n (may remove several)\n\t\t$newstring=dol_nl2br(dol_htmlentities($newstring,ENT_COMPAT,$pagecodefrom),$nl2brmode);\n\t}\n\t// Other substitutions that htmlentities does not do\n\t//$newstring=str_replace(chr(128),'&euro;',$newstring);\t// 128 = 0x80. Not in html entity table.     // Seems useles with TCPDF. Make bug with UTF8 languages\n\treturn $newstring;\n}\n\n/**\n *\tThis function is called to decode a HTML string (it decodes entities and br tags)\n *\n *\t@param\tstring\t$stringtodecode\t\tString to decode\n *\t@param\tstring\t$pagecodeto\t\t\tPage code for result\n *\t@return\tstring\t\t\t\t\t\tString decoded\n */\nfunction dol_htmlentitiesbr_decode($stringtodecode,$pagecodeto='UTF-8')\n{\n\t$ret=dol_html_entity_decode($stringtodecode,ENT_COMPAT,$pagecodeto);\n\t$ret=preg_replace('/'.\"\\r\\n\".'<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i',\"<br>\",$ret);\n\t$ret=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>'.\"\\r\\n\".'/i',\"\\r\\n\",$ret);\n\t$ret=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>'.\"\\n\".'/i',\"\\n\",$ret);\n\t$ret=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i',\"\\n\",$ret);\n\treturn $ret;\n}\n\n/**\n *\tThis function remove all ending \\n and br at end\n *\n *\t@param\tstring\t$stringtodecode\t\tString to decode\n *\t@return\tstring\t\t\t\t\t\tString decoded\n */\nfunction dol_htmlcleanlastbr($stringtodecode)\n{\n\t$ret=preg_replace('/(<br>|<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>|'.\"\\n\".'|'.\"\\r\".')+$/i',\"\",$stringtodecode);\n\treturn $ret;\n}\n\n/**\n * Replace html_entity_decode functions to manage errors\n *\n * @param   string\t$a\t\tOperand a\n * @param   string\t$b\t\tOperand b (ENT_QUOTES=convert simple and double quotes)\n * @param   string\t$c\t\tOperand c\n * @return  string\t\t\tString decoded\n */\nfunction dol_html_entity_decode($a,$b,$c='UTF-8')\n{\n\treturn html_entity_decode($a,$b,$c);\n}\n\n/**\n * Replace htmlentities functions to manage errors http://php.net/manual/en/function.htmlentities.php\n * Goal of this function is to be sure to have default values of htmlentities that match what we need.\n *\n * @param   string  $string         The input string.\n * @param   int     $flags          Flags(see PHP doc above)\n * @param   string  $encoding       Encoding\n * @param   bool    $double_encode  When double_encode is turned off PHP will not encode existing html entities\n * @return  string  $ret            Encoded string\n */\nfunction dol_htmlentities($string, $flags=null, $encoding='UTF-8', $double_encode=false)\n{\n\treturn htmlentities($string, $flags, $encoding, $double_encode);\n}\n\n\n/**\n *\tCheck if a string is a correct iso string\n *\tIf not, it will we considered not HTML encoded even if it is by FPDF.\n *\tExample, if string contains euro symbol that has ascii code 128\n *\n *\t@param\tstring\t$s      String to check\n *\t@return\tint     \t\t0 if bad iso, 1 if good iso\n */\nfunction dol_string_is_good_iso($s)\n{\n\t$len=dol_strlen($s);\n\t$ok=1;\n\tfor($scursor=0;$scursor<$len;$scursor++)\n\t{\n\t\t$ordchar=ord($s{$scursor});\n\t\t//print $scursor.'-'.$ordchar.'<br>';\n\t\tif ($ordchar < 32 && $ordchar != 13 && $ordchar != 10) { $ok=0; break; }\n\t\tif ($ordchar > 126 && $ordchar < 160) { $ok=0; break; }\n\t}\n\treturn $ok;\n}\n\n\n/**\n *\tReturn nb of lines of a clear text\n *\n *\t@param\tstring\t$s\t\t\tString to check\n * \t@param\tint     $maxchar\tNot yet used\n *\t@return\tint\t\t\t\t\tNumber of lines\n *  @see\tdol_nboflines_bis, dolGetFirstLineOfText\n */\nfunction dol_nboflines($s,$maxchar=0)\n{\n\tif ($s == '') return 0;\n\t$arraystring=explode(\"\\n\",$s);\n\t$nb=count($arraystring);\n\n\treturn $nb;\n}\n\n\n/**\n *\tReturn nb of lines of a formated text with \\n and <br> (WARNING: string must not have mixed \\n and br separators)\n *\n *\t@param\tstring\t$text      \t\tText\n *\t@param\tint\t\t$maxlinesize  \tLargeur de ligne en caracteres (ou 0 si pas de limite - defaut)\n * \t@param\tstring\t$charset\t\tGive the charset used to encode the $text variable in memory.\n *\t@return int\t\t\t\t\t\tNumber of lines\n *\t@see\tdol_nboflines, dolGetFirstLineOfText\n */\nfunction dol_nboflines_bis($text,$maxlinesize=0,$charset='UTF-8')\n{\n\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \"<br>\", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\tif (dol_textishtml($text)) $repTable = array(\"\\t\" => \" \", \"\\n\" => \" \", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\n\t$text = strtr($text, $repTable);\n\tif ($charset == 'UTF-8') { $pattern = '/(<br[^>]*>)/Uu'; }\t// /U is to have UNGREEDY regex to limit to one html tag. /u is for UTF8 support\n\telse $pattern = '/(<br[^>]*>)/U';\t\t\t\t\t\t\t// /U is to have UNGREEDY regex to limit to one html tag.\n\t$a = preg_split($pattern, $text, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t$nblines = (int) floor((count($a)+1)/2);\n\t// count possible auto line breaks\n\tif($maxlinesize)\n\t{\n\t\tforeach ($a as $line)\n\t\t{\n\t\t\tif (dol_strlen($line)>$maxlinesize)\n\t\t\t{\n\t\t\t\t//$line_dec = html_entity_decode(strip_tags($line));\n\t\t\t\t$line_dec = html_entity_decode($line);\n\t\t\t\tif(dol_strlen($line_dec)>$maxlinesize)\n\t\t\t\t{\n\t\t\t\t\t$line_dec=wordwrap($line_dec,$maxlinesize,'\\n',true);\n\t\t\t\t\t$nblines+=substr_count($line_dec,'\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tunset($a);\n\treturn $nblines;\n}\n\n/**\n *\t Same function than microtime in PHP 5 but compatible with PHP4\n *\n * @return\t\tfloat\t\tTime (millisecondes) with microsecondes in decimal part\n * @deprecated Dolibarr does not support PHP4, you should use native function\n * @see microtime()\n */\nfunction dol_microtime_float()\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\treturn microtime(true);\n}\n\n/**\n *\tReturn if a text is a html content\n *\n *\t@param\tstring\t$msg\t\tContent to check\n *\t@param\tint\t\t$option\t\t0=Full detection, 1=Fast check\n *\t@return\tboolean\t\t\t\ttrue/false\n *\t@see\tdol_concatdesc\n */\nfunction dol_textishtml($msg,$option=0)\n{\n\tif ($option == 1)\n\t{\n\t\tif (preg_match('/<html/i',$msg))\t\t\t\treturn true;\n\t\telseif (preg_match('/<body/i',$msg))\t\t\treturn true;\n\t\telseif (preg_match('/<br/i',$msg))\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\tif (preg_match('/<html/i',$msg))\t\t\t\treturn true;\n\t\telseif (preg_match('/<body/i',$msg))\t\t\treturn true;\n\t\telseif (preg_match('/<(b|em|i|u)>/i',$msg))\t\treturn true;\n\t\telseif (preg_match('/<(br|div|font|li|p|span|strong|table)>/i',$msg)) \t  return true;\n\t\telseif (preg_match('/<(br|div|font|li|p|span|strong|table)\\s+[^<>\\/]*>/i',$msg)) return true;\n\t\telseif (preg_match('/<(br|div|font|li|p|span|strong|table)\\s+[^<>\\/]*\\/>/i',$msg)) return true;\n\t\telseif (preg_match('/<img\\s+[^<>]*src[^<>]*>/i',$msg)) return true;\t// must accept <img src=\"http://example.com/aaa.png\" />\n\t\telseif (preg_match('/<a\\s+[^<>]*href[^<>]*>/i',$msg)) return true;\t// must accept <a href=\"http://example.com/aaa.png\" />\n\t\telseif (preg_match('/<h[0-9]>/i',$msg))\t\t\treturn true;\n\t\telseif (preg_match('/&[A-Z0-9]{1,6};/i',$msg))\treturn true;    // Html entities names (http://www.w3schools.com/tags/ref_entities.asp)\n\t\telseif (preg_match('/&#[0-9]{2,3};/i',$msg))\treturn true;    // Html entities numbers (http://www.w3schools.com/tags/ref_entities.asp)\n\t\treturn false;\n\t}\n}\n\n/**\n *  Concat 2 descriptions with a new line between them (second operand after first one with appropriate new line separator)\n *  text1 html + text2 html => text1 + '<br>' + text2\n *  text1 html + text2 txt  => text1 + '<br>' + dol_nl2br(text2)\n *  text1 txt  + text2 html => dol_nl2br(text1) + '<br>' + text2\n *  text1 txt  + text2 txt  => text1 + '\\n' + text2\n *\n *  @param\tstring\t$text1\t\tText 1\n *  @param\tstring\t$text2\t\tText 2\n *  @param  bool\t$forxml     false=Use <br>, true=Use <br />\n *  @return\tstring\t\t\t\tText 1 + new line + Text2\n *  @see    dol_textishtml\n */\nfunction dol_concatdesc($text1,$text2,$forxml=false)\n{\n\t$ret='';\n\t$ret.= (! dol_textishtml($text1) && dol_textishtml($text2))?dol_nl2br($text1, 0, $forxml):$text1;\n\t$ret.= (! empty($text1) && ! empty($text2)) ? ((dol_textishtml($text1) || dol_textishtml($text2))?($forxml?\"<br \\>\\n\":\"<br>\\n\") : \"\\n\") : \"\";\n\t$ret.= (dol_textishtml($text1) && ! dol_textishtml($text2))?dol_nl2br($text2, 0, $forxml):$text2;\n\treturn $ret;\n}\n\n\n/**\n * Return array of possible common substitutions.\n *\n * @param\tTranslate\t$outputlangs\tOutput language\n * @param   int         $onlykey        Do not calculate heavy values of keys (performance enhancement when we need only the keys)\n * @param   array       $exclude        Array of family keys we want to exclude. For example array('mycompany', 'objectamount', 'date', 'user', ...)\n * @param   Object      $object         Object for keys on object\n * @return\tarray\t\t\t\t\t\tArray of substitutions\n */\nfunction getCommonSubstitutionArray($outputlangs, $onlykey=0, $exclude=null, $object=null)\n{\n    global $conf, $mysoc, $user;\n\n    $substitutionarray=array();\n\n    if (empty($exclude) || ! in_array('mycompany', $exclude))\n    {\n        $substitutionarray=array_merge($substitutionarray, array(\n            '__MYCOMPANY_NAME__' => $mysoc->name,\n            '__MYCOMPANY_EMAIL__' => $mysoc->email,\n            '__MYCOMPANY_PROFID1__' => $mysoc->idprof1,\n            '__MYCOMPANY_PROFID2__' => $mysoc->idprof2,\n            '__MYCOMPANY_PROFID3__' => $mysoc->idprof3,\n            '__MYCOMPANY_PROFID4__' => $mysoc->idprof4,\n            '__MYCOMPANY_PROFID5__' => $mysoc->idprof5,\n            '__MYCOMPANY_PROFID6__' => $mysoc->idprof6,\n            '__MYCOMPANY_CAPITAL__' => $mysoc->capital,\n            '__MYCOMPANY_COUNTRY_ID__' => $mysoc->country_id\n        ));\n    }\n    if (empty($exclude) || ! in_array('objectamount', $exclude))\n    {\n        if (is_object($object))       // For backward compatibility\n        {\n            $substitutionarray['__TOTAL_TTC__']    =is_object($object)?$object->total_ttc:'';\n            $substitutionarray['__TOTAL_HT__']     =is_object($object)?$object->total_ht:'';\n            $substitutionarray['__TOTAL_VAT__']    =is_object($object)?($object->total_vat?$object->total_vat:$object->total_tva):'';\n        }\n        $substitutionarray['__AMOUNT__']       =is_object($object)?$object->total_ttc:'';\n        $substitutionarray['__AMOUNT_WO_TAX__']=is_object($object)?$object->total_ht:'';\n        $substitutionarray['__AMOUNT_VAT__']   =is_object($object)?($object->total_vat?$object->total_vat:$object->total_tva):'';\n    }\n\n    if (empty($exclude) || ! in_array('date', $exclude))\n    {\n        include_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\n        if (! empty($onlykey))\n        {\n            $tmp=$tmp2=$tmp3=$tmp4=$tmp5=array();\n        }\n        else\n        {\n            $tmp=dol_getdate(dol_now(), true);\n            $tmp2=dol_get_prev_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n            $tmp3=dol_get_prev_month($tmp['mday'], $tmp['mon'], $tmp['year']);\n            $tmp4=dol_get_next_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n            $tmp5=dol_get_next_month($tmp['mday'], $tmp['mon'], $tmp['year']);\n        }\n        $substitutionarray=array_merge($substitutionarray, array(\n            '__DAY__' => $tmp['mday'],\n            '__MONTH__' => $tmp['mon'],\n            '__YEAR__' => $tmp['year'],\n            '__PREVIOUS_DAY__' => $tmp2['day'],\n            '__PREVIOUS_MONTH__' => $tmp3['month'],\n            '__PREVIOUS_YEAR__' => ($tmp['year'] - 1),\n            '__NEXT_DAY__' => $tmp4['day'],\n            '__NEXT_MONTH__' => $tmp5['month'],\n            '__NEXT_YEAR__' => ($tmp['year'] + 1),\n        ));\n    }\n\n    if (empty($exclude) || ! in_array('user', $exclude))\n    {\n        $substitutionarray=array_merge($substitutionarray, array(\n            '__USER_ID__' => $user->id,\n            '__USER_LOGIN__' => $user->login,\n            '__USER_LASTNAME__' => $user->lastname,\n            '__USER_FIRSTNAME__' => $user->firstname,\n            '__USER_FULLNAME__' => $user->getFullName($outputlangs),\n            '__USER_SUPERVISOR_ID__' => $user->fk_user\n        ));\n    }\n    if (! empty($conf->multicompany->enabled))\n    {\n        $substitutionarray=array_merge($substitutionarray, array('__ENTITY_ID__' => $conf->entity));\n    }\n\n    return $substitutionarray;\n}\n\n/**\n *  Make substition into a text string, replacing keys with vals from $substitutionarray (oldval=>newval).\n *\n *  @param\tstring\t\t$text\t      \t\t\tSource string in which we must do substitution\n *  @param  array\t\t$substitutionarray\t\tArray with key->val to substitute\n *  @param\tTranslate\t$outputlangs\t\t\tOutput language\n * \t@return string  \t\t    \t\t\t\tOutput string after substitutions\n *  @see\tcomplete_substitutions_array\n */\nfunction make_substitutions($text, $substitutionarray, $outputlangs=null)\n{\n\tglobal $conf, $langs;\n\n\tif (! is_array($substitutionarray)) return 'ErrorBadParameterSubstitutionArrayWhenCalling_make_substitutions';\n\n\tif (empty($outputlangs)) $outputlangs=$langs;\n\n\t// Make substitution for language keys\n\tif (is_object($outputlangs))\n\t{\n\t\twhile (preg_match('/__\\(([^\\)]*)\\)__/', $text, $reg))\n\t\t{\n\t\t    // If key is __(TranslationKey|langfile)__, then force load of langfile.lang\n\t\t\t$tmp=explode('|',$reg[1]);\n\t\t\tif (! empty($tmp[1])) $outputlangs->load($tmp[1]);\n\n\t\t\t$msgishtml = 0;\n\t\t\tif (dol_textishtml($text,1)) $msgishtml = 1;\n\n\t\t\t$text = preg_replace('/__\\('.preg_quote($reg[1], '/').'\\)__/', $msgishtml?dol_htmlentitiesbr($outputlangs->transnoentitiesnoconv($reg[1])):$outputlangs->transnoentitiesnoconv($reg[1]), $text);\n\t\t}\n\t}\n\n\t// Make substitition for array $substitutionarray\n\tforeach ($substitutionarray as $key => $value)\n\t{\n\t\tif ($key == '__SIGNATURE__' && (! empty($conf->global->MAIN_MAIL_DO_NOT_USE_SIGN))) $value='';\n\t\t$text=str_replace(\"$key\",\"$value\",$text);\t// We must keep the \" to work when value is 123.5 for example\n\t}\n\n\treturn $text;\n}\n\n/**\n *  Complete the $substitutionarray with more entries.\n *  Can also add substitution keys coming from external module that had set the \"substitutions=1\" into module_part array. In this case, method completesubstitutionarray provided by module is called.\n *\n *  @param  array\t\t$substitutionarray\t\tArray substitution old value => new value value\n *  @param  Translate\t$outputlangs            Output language\n *  @param  Object\t\t$object                 Source object\n *  @param  mixed\t\t$parameters       \t\tAdd more parameters (useful to pass product lines)\n *  @param  string      $callfunc               What is the name of the custom function that will be called? (default: completesubstitutionarray)\n *  @return\tvoid\n *  @see \tmake_substitutions\n */\nfunction complete_substitutions_array(&$substitutionarray, $outputlangs, $object=null, $parameters=null, $callfunc=\"completesubstitutionarray\")\n{\n\tglobal $conf,$user;\n\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t// Add a substitution key for each object property\n\tif (is_object($object))\n\t{\n\t\t// TODO\n\t}\n\n\t// Add a substitution key for each extrafields, using key __EXTRA_XXX__\n\tif (is_object($object) && is_array($object->array_options))\n\t{\n\t\tforeach($object->array_options as $key => $val)\n\t\t{\n\t\t\t$keyshort=preg_replace('/^(options|extra)_/','',$key);\n\t\t\t$substitutionarray['__EXTRA_'.$keyshort.'__']=$val;\n\t\t\t// For backward compatibiliy\n\t\t\t$substitutionarray['%EXTRA_'.$keyshort.'%']=$val;\n\t\t}\n\t}\n\n\t// Check if there is external substitution to do, requested by plugins\n\t$dirsubstitutions=array_merge(array(),(array) $conf->modules_parts['substitutions']);\n\n\tforeach($dirsubstitutions as $reldir)\n\t{\n\t\t$dir=dol_buildpath($reldir,0);\n\n\t\t// Check if directory exists\n\t\tif (! dol_is_dir($dir)) continue;\n\n\t\t$substitfiles=dol_dir_list($dir,'files',0,'functions_');\n\t\tforeach($substitfiles as $substitfile)\n\t\t{\n\t\t\tif (preg_match('/functions_(.*)\\.lib\\.php/i',$substitfile['name'],$reg))\n\t\t\t{\n\t\t\t\t$module=$reg[1];\n\n\t\t\t\tdol_syslog(\"Library functions_\".$substitfile['name'].\" found into \".$dir);\n\t\t\t\t// Include the user's functions file\n\t\t\t\trequire_once $dir.$substitfile['name'];\n\t\t\t\t// Call the user's function, and only if it is defined\n\t\t\t\t$function_name=$module.\"_\".$callfunc;\n\t\t\t\tif (function_exists($function_name)) $function_name($substitutionarray,$outputlangs,$object,$parameters);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n *    Format output for start and end date\n *\n *    @param\tint\t$date_start    Start date\n *    @param    int\t$date_end      End date\n *    @param    string\t\t$format        Output format\n *    @param\tTranslate\t$outputlangs   Output language\n *    @return\tvoid\n */\nfunction print_date_range($date_start,$date_end,$format = '',$outputlangs='')\n{\n\tprint get_date_range($date_start,$date_end,$format,$outputlangs);\n}\n\n/**\n *    Format output for start and end date\n *\n *    @param\tint\t\t\t$date_start    \t\tStart date\n *    @param    int\t\t\t$date_end      \t\tEnd date\n *    @param    string\t\t$format        \t\tOutput format\n *    @param\tTranslate\t$outputlangs   \t\tOutput language\n *    @param\tinteger\t\t$withparenthesis\t1=Add parenthesis, 0=non parenthesis\n *    @return\tstring\t\t\t\t\t\t\tString\n */\nfunction get_date_range($date_start,$date_end,$format = '',$outputlangs='', $withparenthesis=1)\n{\n\tglobal $langs;\n\n\t$out='';\n\n\tif (! is_object($outputlangs)) $outputlangs=$langs;\n\n\tif ($date_start && $date_end)\n\t{\n\t\t$out.= ($withparenthesis?' (':'').$outputlangs->transnoentitiesnoconv('DateFromTo',dol_print_date($date_start, $format, false, $outputlangs),dol_print_date($date_end, $format, false, $outputlangs)).($withparenthesis?')':'');\n\t}\n\tif ($date_start && ! $date_end)\n\t{\n\t\t$out.= ($withparenthesis?' (':'').$outputlangs->transnoentitiesnoconv('DateFrom',dol_print_date($date_start, $format, false, $outputlangs)).($withparenthesis?')':'');\n\t}\n\tif (! $date_start && $date_end)\n\t{\n\t\t$out.= ($withparenthesis?' (':'').$outputlangs->transnoentitiesnoconv('DateUntil',dol_print_date($date_end, $format, false, $outputlangs)).($withparenthesis?')':'');\n\t}\n\n\treturn $out;\n}\n\n/**\n * Return firstname and lastname in correct order\n *\n * @param\tstring\t$firstname\t\tFirstname\n * @param\tstring\t$lastname\t\tLastname\n * @param\tint\t\t$nameorder\t\t-1=Auto, 0=Lastname+Firstname, 1=Firstname+Lastname, 2=Firstname\n * @return\tstring\t\t\t\t\tFirstname + lastname or Lastname + firstname\n */\nfunction dolGetFirstLastname($firstname,$lastname,$nameorder=-1)\n{\n\tglobal $conf;\n\n\t$ret='';\n\t// If order not defined, we use the setup\n\tif ($nameorder < 0) $nameorder=(empty($conf->global->MAIN_FIRSTNAME_NAME_POSITION));\n\tif ($nameorder && ((string) $nameorder != '2'))\n\t{\n        $ret.=$firstname;\n\t\tif ($firstname && $lastname) $ret.=' ';\n\t\t$ret.=$lastname;\n\t}\n\telse if ($nameorder == 2)\n\t{\n\t   $ret.=$firstname;\n\t}\n\telse\n\t{\n\t\t$ret.=$lastname;\n\t\tif ($firstname && $lastname) $ret.=' ';\n\t\t$ret.=$firstname;\n\t}\n\treturn $ret;\n}\n\n\n/**\n *\tSet event message in dol_events session object. Will be output by calling dol_htmloutput_events.\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function.\n *  Note: Prefer to use setEventMessages instead.\n *\n *\t@param\tmixed\t$mesgs\t\t\tMessage string or array\n *  @param  string\t$style      \tWhich style to use ('mesgs' by default, 'warnings', 'errors')\n *  @return\tvoid\n *  @see\tdol_htmloutput_events\n */\nfunction setEventMessage($mesgs, $style='mesgs')\n{\n\t//dol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\t\tThis is not deprecated, it is used by setEventMessages function\n\tif (! is_array($mesgs))\t\t// If mesgs is a string\n\t{\n\t\tif ($mesgs) $_SESSION['dol_events'][$style][] = $mesgs;\n\t}\n\telse\t\t\t\t\t\t// If mesgs is an array\n\t{\n\t\tforeach($mesgs as $mesg)\n\t\t{\n\t\t\tif ($mesg) $_SESSION['dol_events'][$style][] = $mesg;\n\t\t}\n\t}\n}\n\n/**\n *\tSet event messages in dol_events session object. Will be output by calling dol_htmloutput_events.\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function.\n *\n *\t@param\tstring\t$mesg\t\t\tMessage string\n *\t@param\tarray\t$mesgs\t\t\tMessage array\n *  @param  string\t$style      \tWhich style to use ('mesgs' by default, 'warnings', 'errors')\n *  @return\tvoid\n *  @see\tdol_htmloutput_events\n */\nfunction setEventMessages($mesg, $mesgs, $style='mesgs')\n{\n\tif (! in_array((string) $style, array('mesgs','warnings','errors'))) dol_print_error('','Bad parameter style='.$style.' for setEventMessages');\n\tif (empty($mesgs)) setEventMessage($mesg, $style);\n\telse\n\t{\n\t\tif (! empty($mesg) && ! in_array($mesg, $mesgs)) setEventMessage($mesg, $style);\t// Add message string if not already into array\n\t\tsetEventMessage($mesgs, $style);\n\t}\n}\n\n/**\n *\tPrint formated messages to output (Used to show messages on html output).\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function, so there is\n *  no need to call it explicitely.\n *\n *  @return\tvoid\n *  @see    dol_htmloutput_mesg\n */\nfunction dol_htmloutput_events()\n{\n\t// Show mesgs\n\tif (isset($_SESSION['dol_events']['mesgs'])) {\n\t\tdol_htmloutput_mesg('', $_SESSION['dol_events']['mesgs']);\n\t\tunset($_SESSION['dol_events']['mesgs']);\n\t}\n\n\t// Show errors\n\tif (isset($_SESSION['dol_events']['errors'])) {\n\t\tdol_htmloutput_mesg('', $_SESSION['dol_events']['errors'], 'error');\n\t\tunset($_SESSION['dol_events']['errors']);\n\t}\n\n\t// Show warnings\n\tif (isset($_SESSION['dol_events']['warnings'])) {\n\t\tdol_htmloutput_mesg('', $_SESSION['dol_events']['warnings'], 'warning');\n\t\tunset($_SESSION['dol_events']['warnings']);\n\t}\n}\n\n/**\n *\tGet formated messages to output (Used to show messages on html output).\n *  This include also the translation of the message key.\n *\n *\t@param\tstring\t\t$mesgstring\t\tMessage string or message key\n *\t@param\tstring[]\t$mesgarray      Array of message strings or message keys\n *  @param  string\t\t$style          Style of message output ('ok' or 'error')\n *  @param  int\t\t\t$keepembedded   Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *\t@return\tstring\t\t\t\t\t\tReturn html output\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_errors\n *  @see    setEventMessages\n */\nfunction get_htmloutput_mesg($mesgstring='',$mesgarray='', $style='ok', $keepembedded=0)\n{\n\tglobal $conf, $langs;\n\n\t$ret=0; $return='';\n\t$out='';\n\t$divstart=$divend='';\n\n\t// If inline message with no format, we add it.\n\tif ((empty($conf->use_javascript_ajax) || ! empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) || $keepembedded) && ! preg_match('/<div class=\".*\">/i',$out))\n\t{\n\t\t$divstart='<div class=\"'.$style.'\">';\n\t\t$divend='</div>';\n\t}\n\n\tif ((is_array($mesgarray) && count($mesgarray)) || $mesgstring)\n\t{\n\t\t$langs->load(\"errors\");\n\t\t$out.=$divstart;\n\t\tif (is_array($mesgarray) && count($mesgarray))\n\t\t{\n\t\t\tforeach($mesgarray as $message)\n\t\t\t{\n\t\t\t\t$ret++;\n\t\t\t\t$out.= $langs->trans($message);\n\t\t\t\tif ($ret < count($mesgarray)) $out.= \"<br>\\n\";\n\t\t\t}\n\t\t}\n\t\tif ($mesgstring)\n\t\t{\n\t\t\t$langs->load(\"errors\");\n\t\t\t$ret++;\n\t\t\t$out.= $langs->trans($mesgstring);\n\t\t}\n\t\t$out.=$divend;\n\t}\n\n\tif ($out)\n\t{\n\t\tif (! empty($conf->use_javascript_ajax) && empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) && empty($keepembedded))\n\t\t{\n\t\t\t$return = '<script type=\"text/javascript\">\n\t\t\t\t\t$(document).ready(function() {\n\t\t\t\t\t\tvar block = '.(! empty($conf->global->MAIN_USE_JQUERY_BLOCKUI)?\"true\":\"false\").'\n\t\t\t\t\t\tif (block) {\n\t\t\t\t\t\t\t$.dolEventValid(\"\",\"'.dol_escape_js($out).'\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* jnotify(message, preset of message type, keepmessage) */\n\t\t\t\t\t\t\t$.jnotify(\"'.dol_escape_js($out).'\",\n\t\t\t\t\t\t\t\"'.($style==\"ok\" ? 3000 : $style).'\",\n\t\t\t\t\t\t\t'.($style==\"ok\" ? \"false\" : \"true\").',\n\t\t\t\t\t\t\t{ remove: function (){} } );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t</script>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$return = $out;\n\t\t}\n\t}\n\n\treturn $return;\n}\n\n/**\n *  Get formated error messages to output (Used to show messages on html output).\n *\n *  @param\tstring\t$mesgstring         Error message\n *  @param  array\t$mesgarray          Error messages array\n *  @param  int\t\t$keepembedded       Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *  @return string                \t\tReturn html output\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_mesg\n */\nfunction get_htmloutput_errors($mesgstring='', $mesgarray='', $keepembedded=0)\n{\n\treturn get_htmloutput_mesg($mesgstring, $mesgarray,'error',$keepembedded);\n}\n\n/**\n *\tPrint formated messages to output (Used to show messages on html output).\n *\n *\t@param\tstring\t\t$mesgstring\t\tMessage string or message key\n *\t@param\tstring[]\t$mesgarray      Array of message strings or message keys\n *  @param  string      $style          Which style to use ('ok', 'warning', 'error')\n *  @param  int         $keepembedded   Set to 1 if message must be kept embedded into its html place (this disable jnotify)\n *  @return\tvoid\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_errors\n *  @see    setEventMessages\n */\nfunction dol_htmloutput_mesg($mesgstring='',$mesgarray='', $style='ok', $keepembedded=0)\n{\n\tif (empty($mesgstring) && (! is_array($mesgarray) || count($mesgarray) == 0)) return;\n\n\t$iserror=0;\n\t$iswarning=0;\n\tif (is_array($mesgarray))\n\t{\n\t\tforeach($mesgarray as $val)\n\t\t{\n\t\t\tif ($val && preg_match('/class=\"error\"/i',$val)) { $iserror++; break; }\n\t\t\tif ($val && preg_match('/class=\"warning\"/i',$val)) { $iswarning++; break; }\n\t\t}\n\t}\n\telse if ($mesgstring && preg_match('/class=\"error\"/i',$mesgstring)) $iserror++;\n\telse if ($mesgstring && preg_match('/class=\"warning\"/i',$mesgstring)) $iswarning++;\n\tif ($style=='error') $iserror++;\n\tif ($style=='warning') $iswarning++;\n\n\tif ($iserror || $iswarning)\n\t{\n\t\t// Remove div from texts\n\t\t$mesgstring=preg_replace('/<\\/div><div class=\"(error|warning)\">/','<br>',$mesgstring);\n\t\t$mesgstring=preg_replace('/<div class=\"(error|warning)\">/','',$mesgstring);\n\t\t$mesgstring=preg_replace('/<\\/div>/','',$mesgstring);\n\t\t// Remove div from texts array\n\t\tif (is_array($mesgarray))\n\t\t{\n\t\t\t$newmesgarray=array();\n\t\t\tforeach($mesgarray as $val)\n\t\t\t{\n\t\t\t\t$tmpmesgstring=preg_replace('/<\\/div><div class=\"(error|warning)\">/','<br>',$val);\n\t\t\t\t$tmpmesgstring=preg_replace('/<div class=\"(error|warning)\">/','',$tmpmesgstring);\n\t\t\t\t$tmpmesgstring=preg_replace('/<\\/div>/','',$tmpmesgstring);\n\t\t\t\t$newmesgarray[]=$tmpmesgstring;\n\t\t\t}\n\t\t\t$mesgarray=$newmesgarray;\n\t\t}\n\t\tprint get_htmloutput_mesg($mesgstring,$mesgarray,($iserror?'error':'warning'),$keepembedded);\n\t}\n\telse print get_htmloutput_mesg($mesgstring,$mesgarray,'ok',$keepembedded);\n}\n\n/**\n *  Print formated error messages to output (Used to show messages on html output).\n *\n *  @param\tstring\t$mesgstring          Error message\n *  @param  array\t$mesgarray           Error messages array\n *  @param  int\t\t$keepembedded        Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *  @return\tvoid\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_mesg\n */\nfunction dol_htmloutput_errors($mesgstring='', $mesgarray='', $keepembedded=0)\n{\n\tdol_htmloutput_mesg($mesgstring, $mesgarray, 'error', $keepembedded);\n}\n\n/**\n * \tAdvanced sort array by second index function, which produces ascending (default)\n *  or descending output and uses optionally natural case insensitive sorting (which\n *  can be optionally case sensitive as well).\n *\n *  @param      array\t\t$array      \t\tArray to sort (array of array('key','otherkey1','otherkey2'...))\n *  @param      string\t\t$index\t\t\t\tKey in array to use for sorting criteria\n *  @param      int\t\t\t$order\t\t\t\tSort order ('asc' or 'desc')\n *  @param      int\t\t\t$natsort\t\t\t1=use \"natural\" sort (natsort), 0=use \"standard\" sort (asort)\n *  @param      int\t\t\t$case_sensitive\t\t1=sort is case sensitive, 0=not case sensitive\n *  @param\t\tint\t\t\t$keepindex\t\t\tIf 0 and index key of array to sort is a numeric, than index will be rewrote. If 1 or index key is not numeric, key for index is kept after sorting.\n *  @return     array\t\t\t\t\t\t\tSorted array\n */\nfunction dol_sort_array(&$array, $index, $order='asc', $natsort=0, $case_sensitive=0, $keepindex=0)\n{\n\t// Clean parameters\n\t$order=strtolower($order);\n\n\t$sizearray=count($array);\n\tif (is_array($array) && $sizearray>0)\n\t{\n        $temp = array();\n        foreach(array_keys($array) as $key) $temp[$key]=$array[$key][$index];\n\n\t\tif (!$natsort) ($order=='asc') ? asort($temp) : arsort($temp);\n\t\telse\n\t\t{\n\t\t\t($case_sensitive) ? natsort($temp) : natcasesort($temp);\n\t\t\tif($order!='asc') $temp=array_reverse($temp,TRUE);\n\t\t}\n\n\t\t$sorted = array();\n\n\t\tforeach(array_keys($temp) as $key)\n\t\t{\n\t\t\t(is_numeric($key) && empty($keepindex)) ? $sorted[]=$array[$key] : $sorted[$key]=$array[$key];\n\t\t}\n\n\t\treturn $sorted;\n\t}\n\treturn $array;\n}\n\n\n/**\n *      Check if a string is in UTF8\n *\n *      @param\tstring\t$str        String to check\n * \t\t@return\tboolean\t\t\t\tTrue if string is UTF8 or ISO compatible with UTF8, False if not (ISO with special char or Binary)\n */\nfunction utf8_check($str)\n{\n\t// We must use here a binary strlen function (so not dol_strlen)\n\t$strLength = dol_strlen($str);\n\tfor ($i=0; $i<$strLength; $i++)\n\t{\n\t\tif (ord($str[$i]) < 0x80) continue; // 0bbbbbbb\n\t\telseif ((ord($str[$i]) & 0xE0) == 0xC0) $n=1; // 110bbbbb\n\t\telseif ((ord($str[$i]) & 0xF0) == 0xE0) $n=2; // 1110bbbb\n\t\telseif ((ord($str[$i]) & 0xF8) == 0xF0) $n=3; // 11110bbb\n\t\telseif ((ord($str[$i]) & 0xFC) == 0xF8) $n=4; // 111110bb\n\t\telseif ((ord($str[$i]) & 0xFE) == 0xFC) $n=5; // 1111110b\n\t\telse return false; // Does not match any model\n\t\tfor ($j=0; $j<$n; $j++) { // n bytes matching 10bbbbbb follow ?\n\t\t\tif ((++$i == strlen($str)) || ((ord($str[$i]) & 0xC0) != 0x80))\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n/**\n *      Return a string encoded into OS filesystem encoding. This function is used to define\n * \t    value to pass to filesystem PHP functions.\n *\n *      @param\tstring\t$str        String to encode (UTF-8)\n * \t\t@return\tstring\t\t\t\tEncoded string (UTF-8, ISO-8859-1)\n */\nfunction dol_osencode($str)\n{\n\tglobal $conf;\n\n\t$tmp=ini_get(\"unicode.filesystem_encoding\");\t\t\t\t\t\t// Disponible avec PHP 6.0\n\tif (empty($tmp) && ! empty($_SERVER[\"WINDIR\"])) $tmp='iso-8859-1';\t// By default for windows\n\tif (empty($tmp)) $tmp='utf-8';\t\t\t\t\t\t\t\t\t\t// By default for other\n\tif (! empty($conf->global->MAIN_FILESYSTEM_ENCODING)) $tmp=$conf->global->MAIN_FILESYSTEM_ENCODING;\n\n\tif ($tmp == 'iso-8859-1') return utf8_decode($str);\n\treturn $str;\n}\n\n\n/**\n *      Return an id or code from a code or id.\n *      Store also Code-Id into a cache to speed up next request on same key.\n *\n * \t\t@param\tDoliDB\t$db\t\t\tDatabase handler\n * \t\t@param\tstring\t$key\t\tCode or Id to get Id or Code\n * \t\t@param\tstring\t$tablename\tTable name without prefix\n * \t\t@param\tstring\t$fieldkey\tField for code\n * \t\t@param\tstring\t$fieldid\tField for id\n *      @return int\t\t\t\t\t<0 if KO, Id of code if OK\n *      @see $langs->getLabelFromKey\n */\nfunction dol_getIdFromCode($db,$key,$tablename,$fieldkey='code',$fieldid='id')\n{\n\tglobal $cache_codes;\n\n\t// If key empty\n\tif ($key == '') return '';\n\n\t// Check in cache\n\tif (isset($cache_codes[$tablename][$key]))\t// Can be defined to 0 or ''\n\t{\n\t\treturn $cache_codes[$tablename][$key];   // Found in cache\n\t}\n\n\t$sql = \"SELECT \".$fieldid.\" as valuetoget\";\n\t$sql.= \" FROM \".MAIN_DB_PREFIX.$tablename;\n\t$sql.= \" WHERE \".$fieldkey.\" = '\".$db->escape($key).\"'\";\n\tdol_syslog('dol_getIdFromCode', LOG_DEBUG);\n\t$resql = $db->query($sql);\n\tif ($resql)\n\t{\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($obj) $cache_codes[$tablename][$key]=$obj->valuetoget;\n\t\telse $cache_codes[$tablename][$key]='';\n\t\t$db->free($resql);\n\t\treturn $cache_codes[$tablename][$key];\n\t}\n\telse\n\t{\n\t\treturn -1;\n\t}\n}\n\n/**\n * Verify if condition in string is ok or not\n *\n * @param \tstring\t\t$strRights\t\tString with condition to check\n * @return \tboolean\t\t\t\t\t\tTrue or False. Return true if strRights is ''\n */\nfunction verifCond($strRights)\n{\n\tglobal $user,$conf,$langs;\n\tglobal $leftmenu;\n\tglobal $rights;    // To export to dol_eval function\n\n\t//print $strRights.\"<br>\\n\";\n\t$rights = true;\n\tif ($strRights != '')\n\t{\n\t\t//$tab_rights = explode('&&', $strRights);\n\t\t//$i = 0;\n\t\t//while (($i < count($tab_rights)) && ($rights == true)) {\n\t\t$str = 'if(!(' . $strRights . ')) { $rights = false; }';\n\t\tdol_eval($str);\n\t\t//\t$i++;\n\t\t//}\n\t}\n\treturn $rights;\n}\n\n/**\n * Replace eval function to add more security.\n * This function is called by verifCond() or trans() and transnoentitiesnoconv().\n *\n * @param \tstring\t$s\t\t\t\tString to evaluate\n * @param\tint\t\t$returnvalue\t0=No return (used to execute eval($a=something)). 1=Value of eval is returned (used to eval($something)).\n * @param   int     $hideerrors     1=Hide errors\n * @return\tmixed\t\t\t\t\tNothing or return of eval\n */\nfunction dol_eval($s, $returnvalue=0, $hideerrors=1)\n{\n\t// Only global variables can be changed by eval function and returned to caller\n\tglobal $db, $langs, $user, $conf;\n\tglobal $mainmenu, $leftmenu;\n\tglobal $rights;\n\tglobal $object;\n\tglobal $mysoc;\n\n\tglobal $obj;       // To get $obj used into list when dol_eval is used for computed fields and $obj is not yet $object\n\tglobal $soc;       // For backward compatibility\n\n\t//print $s.\"<br>\\n\";\n\tif ($returnvalue)\n\t{\n\t    if ($hideerrors) return @eval('return '.$s.';');\n\t    else return eval('return '.$s.';');\n\t}\n\telse\n\t{\n\t    if ($hideerrors) @eval($s);\n\t    else eval($s);\n\t}\n}\n\n/**\n * Return if var element is ok\n *\n * @param   string      $element    Variable to check\n * @return  boolean                 Return true of variable is not empty\n */\nfunction dol_validElement($element)\n{\n\treturn (trim($element) != '');\n}\n\n/**\n * \tReturn img flag of country for a language code or country code\n *\n * \t@param\tstring\t$codelang\tLanguage code (en_IN, fr_CA...) or Country code (IN, FR)\n * \t@return\tstring\t\t\t\tHTML img string with flag.\n */\nfunction picto_from_langcode($codelang)\n{\n\tglobal $langs;\n\n\tif (empty($codelang)) return '';\n\n\tif (empty($codelang)) return '';\n\n\tif ($codelang == 'auto')\n\t{\n\t\treturn img_picto_common($langs->trans('AutoDetectLang'), 'flags/int.png');\n\t}\n\n\t$langtocountryflag = array(\n\t\t'ar_AR' => '',\n\t\t'ca_ES' => 'catalonia',\n\t\t'da_DA' => 'dk',\n\t\t'fr_CA' => 'mq',\n\t\t'sv_SV' => 'se'\n\t);\n\n\tif (isset($langtocountryflag[$codelang])) $flagImage = $langtocountryflag[$codelang];\n\telse\n\t{\n\t\t$tmparray = explode('_', $codelang);\n\t\t$flagImage = empty($tmparray[1]) ? $tmparray[0] : $tmparray[1];\n\t}\n\n\treturn img_picto_common($codelang, 'flags/'.strtolower($flagImage).'.png');\n}\n\n/**\n *  Complete or removed entries into a head array (used to build tabs).\n *  For example, with value added by external modules. Such values are declared into $conf->modules_parts['tab'].\n *  Or by change using hook completeTabsHead\n *\n *  @param\tConf\t\t\t$conf           Object conf\n *  @param  Translate\t\t$langs          Object langs\n *  @param  object|null\t\t$object         Object object\n *  @param  array\t\t\t$head          \tObject head\n *  @param  int\t\t\t\t$h\t\t\t\tNew position to fill\n *  @param  string\t\t\t$type           Value for object where objectvalue can be\n *                              \t\t\t'thirdparty'       to add a tab in third party view\n *\t\t                        \t      \t'intervention'     to add a tab in intervention view\n *     \t\t                    \t     \t'supplier_order'   to add a tab in supplier order view\n *          \t\t            \t        'supplier_invoice' to add a tab in supplier invoice view\n *                  \t\t    \t        'invoice'          to add a tab in customer invoice view\n *                          \t\t\t    'order'            to add a tab in customer order view\n *                      \t\t\t        'product'          to add a tab in product view\n *                              \t\t\t'propal'           to add a tab in propal view\n *                              \t\t\t'user'             to add a tab in user view\n *                              \t\t\t'group'            to add a tab in group view\n * \t\t        \t               \t     \t'member'           to add a tab in fundation member view\n *      \t\t                        \t'categories_x'\t   to add a tab in category view ('x': type of category (0=product, 1=supplier, 2=customer, 3=member)\n *      \t\t\t\t\t\t\t\t\t'ecm'\t\t\t   to add a tab for another ecm view\n *                                          'stock'            to add a tab for warehouse view\n *  @param  string\t\t$mode  \t        \t'add' to complete head, 'remove' to remove entries\n *\t@return\tvoid\n */\nfunction complete_head_from_modules($conf,$langs,$object,&$head,&$h,$type,$mode='add')\n{\n\tglobal $hookmanager;\n\n\tif (isset($conf->modules_parts['tabs'][$type]) && is_array($conf->modules_parts['tabs'][$type]))\n\t{\n\t\tforeach ($conf->modules_parts['tabs'][$type] as $value)\n\t\t{\n\t\t\t$values=explode(':',$value);\n\n\t\t\tif ($mode == 'add' && ! preg_match('/^\\-/',$values[1]))\n\t\t\t{\n\t\t\t\tif (count($values) == 6)       // new declaration with permissions:  $value='objecttype:+tabname1:Title1:langfile@mymodule:$user->rights->mymodule->read:/mymodule/mynewtab1.php?id=__ID__'\n\t\t\t\t{\n\t\t\t\t\tif ($values[0] != $type) continue;\n\n\t\t\t\t\tif (verifCond($values[4]))\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($values[3]) $langs->load($values[3]);\n\t\t\t\t\t\tif (preg_match('/SUBSTITUTION_([^_]+)/i',$values[2],$reg))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$substitutionarray=array();\n\t\t\t\t\t\t\tcomplete_substitutions_array($substitutionarray,$langs,$object,array('needforkey'=>$values[2]));\n\t\t\t\t\t\t\t$label=make_substitutions($reg[1], $substitutionarray);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse $label=$langs->trans($values[2]);\n\n\t\t\t\t\t\t$head[$h][0] = dol_buildpath(preg_replace('/__ID__/i', ((is_object($object) && ! empty($object->id))?$object->id:''), $values[5]), 1);\n\t\t\t\t\t\t$head[$h][1] = $label;\n\t\t\t\t\t\t$head[$h][2] = str_replace('+','',$values[1]);\n\t\t\t\t\t\t$h++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (count($values) == 5)       // deprecated\n\t\t\t\t{\n\t\t\t\t\tdol_syslog('Passing 5\u00a0values in tabs module_parts is deprecated. Please update to 6 with permissions.', LOG_WARNING);\n\n\t\t\t\t\tif ($values[0] != $type) continue;\n\t\t\t\t\tif ($values[3]) $langs->load($values[3]);\n\t\t\t\t\tif (preg_match('/SUBSTITUTION_([^_]+)/i',$values[2],$reg))\n\t\t\t\t\t{\n\t\t\t\t\t\t$substitutionarray=array();\n\t\t\t\t\t\tcomplete_substitutions_array($substitutionarray,$langs,$object,array('needforkey'=>$values[2]));\n\t\t\t\t\t\t$label=make_substitutions($reg[1], $substitutionarray);\n\t\t\t\t\t}\n\t\t\t\t\telse $label=$langs->trans($values[2]);\n\n\t\t\t\t\t$head[$h][0] = dol_buildpath(preg_replace('/__ID__/i', ((is_object($object) && ! empty($object->id))?$object->id:''), $values[4]), 1);\n\t\t\t\t\t$head[$h][1] = $label;\n\t\t\t\t\t$head[$h][2] = str_replace('+','',$values[1]);\n\t\t\t\t\t$h++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ($mode == 'remove' && preg_match('/^\\-/',$values[1]))\n\t\t\t{\n\t\t\t\tif ($values[0] != $type) continue;\n\t\t\t\t$tabname=str_replace('-','',$values[1]);\n\t\t\t\tforeach($head as $key => $val)\n\t\t\t\t{\n\t\t\t\t\t$condition = (! empty($values[3]) ? verifCond($values[3]) : 1);\n\t\t\t\t\tif ($head[$key][2]==$tabname && $condition)\n\t\t\t\t\t{\n\t\t\t\t\t\tunset($head[$key]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// No need to make a return $head. Var is modified as a reference\n\tif (! empty($hookmanager))\n\t{\n\t\t$parameters=array('object' => $object, 'mode' => $mode, 'head'=>$head);\n\t\t$reshook=$hookmanager->executeHooks('completeTabsHead',$parameters);\n\t\tif ($reshook > 0)\n\t\t{\n\t\t\t$head = $hookmanager->resArray;\n\t\t}\n\t}\n}\n\n/**\n * Print common footer :\n * \t\tconf->global->MAIN_HTML_FOOTER\n * \t\tconf->global->MAIN_GOOGLE_AN_ID\n * \t\tconf->global->MAIN_SHOW_TUNING_INFO or $_SERVER[\"MAIN_SHOW_TUNING_INFO\"]\n * \t\tconf->logbuffer\n *\n * @param\tstring\t$zone\t'private' (for private pages) or 'public' (for public pages)\n * @return\tvoid\n */\nfunction printCommonFooter($zone='private')\n{\n\tglobal $conf, $hookmanager;\n\tglobal $micro_start_time;\n\n\tif ($zone == 'private') print \"\\n\".'<!-- Common footer for private page -->'.\"\\n\";\n\telse print \"\\n\".'<!-- Common footer for public page -->'.\"\\n\";\n\n\tif (! empty($conf->global->MAIN_HTML_FOOTER)) print $conf->global->MAIN_HTML_FOOTER.\"\\n\";\n\n\tprint \"\\n\";\n\tif (! empty($conf->use_javascript_ajax))\n\t{\n\t\tprint '<!-- Reposition management (does not work if a redirect is done after action of submission) -->'.\"\\n\";\n    \tprint '<script type=\"text/javascript\" language=\"javascript\">jQuery(document).ready(function() {'.\"\\n\";\n\n    \tprint '<!-- If page_y set, we set scollbar with it -->'.\"\\n\";\n    \tprint \"page_y=getParameterByName('page_y', 0);\";\n    \tprint \"if (page_y > 0) $('html, body').scrollTop(page_y);\\n\";\n\n    \tprint '<!-- Set handler to add page_y param on some a href links -->'.\"\\n\";\n    \tprint 'jQuery(\".reposition\").click(function() {\n    \t           var page_y = $(document).scrollTop();\n    \t           /*alert(page_y);*/\n    \t           this.href=this.href+\\'&page_y=\\'+page_y;\n    \t           });'.\"\\n\";\n    \tprint '});'.\"\\n\";\n\n    \tif (empty($conf->dol_use_jmobile))\n    \t{\n        \tprint '<!-- Set handler to switch left menu page (menuhider) -->'.\"\\n\";\n        \tprint 'jQuery(\".menuhider\").click(function() {';\n        \tprint '  console.log(\"We click on .menuhider\");'.\"\\n\";\n        \t//print \"  $('.side-nav').animate({width:'toggle'},200);\\n\";     // OK with eldy theme but not with md\n        \tprint \"  $('.side-nav').toggle()\\n\";\n        \tprint \"  $('.login_block').toggle()\\n\";\n        \tprint '});'.\"\\n\";\n    \t}\n\n    \tprint '</script>'.\"\\n\";\n\t}\n\n\t// Google Analytics (need Google module)\n\tif (! empty($conf->google->enabled) && ! empty($conf->global->MAIN_GOOGLE_AN_ID))\n\t{\n\t\tif (($conf->dol_use_jmobile != 4))\n\t\t{\n\t\t\tprint \"\\n\";\n\t\t\tprint '<script type=\"text/javascript\">'.\"\\n\";\n\t\t\tprint '  var _gaq = _gaq || [];'.\"\\n\";\n\t\t\tprint '  _gaq.push([\\'_setAccount\\', \\''.$conf->global->MAIN_GOOGLE_AN_ID.'\\']);'.\"\\n\";\n\t\t\tprint '  _gaq.push([\\'_trackPageview\\']);'.\"\\n\";\n\t\t\tprint ''.\"\\n\";\n\t\t\tprint '  (function() {'.\"\\n\";\n\t\t\tprint '    var ga = document.createElement(\\'script\\'); ga.type = \\'text/javascript\\'; ga.async = true;'.\"\\n\";\n\t\t\tprint '    ga.src = (\\'https:\\' == document.location.protocol ? \\'https://ssl\\' : \\'http://www\\') + \\'.google-analytics.com/ga.js\\';'.\"\\n\";\n\t\t\tprint '    var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(ga, s);'.\"\\n\";\n\t\t\tprint '  })();'.\"\\n\";\n\t\t\tprint '</script>'.\"\\n\";\n\t\t}\n\t}\n\n\t// End of tuning\n\tif (! empty($_SERVER['MAIN_SHOW_TUNING_INFO']) || ! empty($conf->global->MAIN_SHOW_TUNING_INFO))\n\t{\n\t\tprint \"\\n\".'<script type=\"text/javascript\">'.\"\\n\";\n\t\tprint 'window.console && console.log(\"';\n\t\tif (! empty($conf->global->MEMCACHED_SERVER)) print 'MEMCACHED_SERVER='.$conf->global->MEMCACHED_SERVER.' - ';\n\t\tprint 'MAIN_OPTIMIZE_SPEED='.(isset($conf->global->MAIN_OPTIMIZE_SPEED)?$conf->global->MAIN_OPTIMIZE_SPEED:'off');\n\t\tif (! empty($micro_start_time))   // Works only if MAIN_SHOW_TUNING_INFO is defined at $_SERVER level. Not in global variable.\n\t\t{\n\t\t\t$micro_end_time = microtime(true);\n\t\t\tprint ' - Build time: '.ceil(1000*($micro_end_time-$micro_start_time)).' ms';\n\t\t}\n\t\tif (function_exists(\"memory_get_usage\"))\n\t\t{\n\t\t\tprint ' - Mem: '.memory_get_usage();\n\t\t}\n\t\tif (function_exists(\"xdebug_memory_usage\"))\n\t\t{\n\t\t\tprint ' - XDebug time: '.ceil(1000*xdebug_time_index()).' ms';\n\t\t\tprint ' - XDebug mem: '.xdebug_memory_usage();\n\t\t\tprint ' - XDebug mem peak: '.xdebug_peak_memory_usage();\n\t\t}\n\t\tif (function_exists(\"zend_loader_file_encoded\"))\n\t\t{\n\t\t\tprint ' - Zend encoded file: '.(zend_loader_file_encoded()?'yes':'no');\n\t\t}\n\t\tprint '\");'.\"\\n\";\n\t\tprint '</script>'.\"\\n\";\n\n\t\t// Add Xdebug coverage of code\n\t\tif (defined('XDEBUGCOVERAGE'))\n\t\t{\n\t\t\tprint_r(xdebug_get_code_coverage());\n\t\t}\n\t}\n\n\t// If there is some logs in buffer to show\n\tif (count($conf->logbuffer))\n\t{\n\t\tprint \"\\n\";\n\t\tprint \"<!-- Start of log output\\n\";\n\t\t//print '<div class=\"hidden\">'.\"\\n\";\n\t\tforeach($conf->logbuffer as $logline)\n\t\t{\n\t\t\tprint $logline.\"<br>\\n\";\n\t\t}\n\t\t//print '</div>'.\"\\n\";\n\t\tprint \"End of log output -->\\n\";\n\t}\n\n\t$parameters=array();\n\t$reshook=$hookmanager->executeHooks('printCommonFooter',$parameters);    // Note that $action and $object may have been modified by some hooks\n}\n\n/**\n * Split a string with 2 keys into key array.\n * For example: \"A=1;B=2;C=2\" is exploded into array('A'=>1,'B'=>2,'C'=>3)\n *\n * @param \tstring\t$string\t\tString to explode\n * @param \tstring\t$delimiter\tDelimiter between each couple of data\n * @param \tstring\t$kv\t\t\tDelimiter between key and value\n * @return\tarray\t\t\t\tArray of data exploded\n */\nfunction dolExplodeIntoArray($string, $delimiter = ';', $kv = '=')\n{\n\tif ($a = explode($delimiter, $string))\n\t{\n\t    $ka = array();\n\t\tforeach ($a as $s) { // each part\n\t\t\tif ($s) {\n\t\t\t\tif ($pos = strpos($s, $kv)) { // key/value delimiter\n\t\t\t\t\t$ka[trim(substr($s, 0, $pos))] = trim(substr($s, $pos + strlen($kv)));\n\t\t\t\t} else { // key delimiter not found\n\t\t\t\t\t$ka[] = trim($s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $ka;\n\t}\n\treturn array();\n}\n\n\n/**\n * Set focus onto field with selector\n *\n * @param \tstring\t$selector\tSelector ('#id' or 'input[name=\"ref\"]') to use to find the HTML input field that must get the autofocus. You must use a CSS selector, so unique id preceding with the '#' char.\n * @return\tstring\t\t\t\tHTML code to set focus\n */\nfunction dol_set_focus($selector)\n{\n\tprint \"\\n\".'<!-- Set focus onto a specific field -->'.\"\\n\";\n\tprint '<script type=\"text/javascript\" language=\"javascript\">jQuery(document).ready(function() { jQuery(\"'.dol_escape_js($selector).'\").focus(); });</script>'.\"\\n\";\n}\n\n\n/**\n * Return getmypid() or random PID when function is disabled\n * Some web hosts disable this php function for security reasons\n * and sometimes we can't redeclare function\n *\n * @return\tint\n */\nfunction dol_getmypid()\n{\n    if (! function_exists('getmypid')) {\n        return mt_rand(1,32768);\n    } else {\n        return getmypid();\n    }\n}\n\n\n/**\n * Generate natural SQL search string for a criteria (this criteria can be tested on one or several fields)\n *\n * @param \tstring|string[]\t$fields \tString or array of strings, filled with the name of all fields in the SQL query we must check (combined with a OR)\n * @param \tstring \t\t\t$value \t\tThe value to look for.\n *                          \t\t    If param $mode is 0, can contains several keywords separated with a space or |\n *                                         like \"keyword1 keyword2\" = We want record field like keyword1 AND field like keyword2\n *                                         or like \"keyword1|keyword2\" = We want record field like keyword1 OR field like keyword2\n *                             \t\t\tIf param $mode is 1, can contains an operator <, > or = like \"<10\" or \">=100.5 < 1000\"\n *                             \t\t\tIf param $mode is 2, can contains a list of id separated by comma like \"1,3,4\"\n * @param\tinteger\t\t\t$mode\t\t0=value is list of keyword strings, 1=value is a numeric test (Example \">5.5 <10\"), 2=value is a list of id separated with comma (Example '1,3,4')\n * @param\tinteger\t\t\t$nofirstand\t1=Do not output the first 'AND'\n * @return \tstring \t\t\t$res \t\tThe statement to append to the SQL query\n */\nfunction natural_search($fields, $value, $mode=0, $nofirstand=0)\n{\n    global $db,$langs;\n\n    if ($mode == 0)\n    {\n    \t$value=preg_replace('/\\*/','%',$value);\t// Replace * with %\n    }\n    if ($mode == 1)\n    {\n    \t$value=preg_replace('/([<>=]+)\\s+([0-9'.preg_quote($langs->trans(\"DecimalSeparator\"),'/').'\\-])/','\\1\\2',$value);\t// Clean string '< 10' into '<10' so we can the explode on space to get all tests to do\n    }\n\n    $value = preg_replace('/\\s*\\|\\s*/','|', $value);\n\n    $crits = explode(' ', $value);\n    $res = '';\n    if (! is_array($fields)) $fields = array($fields);\n\n    $nboffields = count($fields);\n    $end2 = count($crits);\n    $j = 0;\n    foreach ($crits as $crit)\n    {\n        $i = 0; $i2 = 0;\n        $newres = '';\n        foreach ($fields as $field)\n        {\n            if ($mode == 1)\n            {\n            \t$operator='=';\n            \t$newcrit = preg_replace('/([<>=]+)/','',trim($crit));\n\n            \tpreg_match('/([<>=]+)/',trim($crit), $reg);\n            \tif ($reg[1])\n            \t{\n            \t\t$operator = $reg[1];\n            \t}\n            \tif ($newcrit != '')\n            \t{\n            \t\t$numnewcrit = price2num($newcrit);\n            \t\tif (is_numeric($numnewcrit))\n            \t\t{\n            \t\t\t$newres .= ($i2 > 0 ? ' OR ' : '') . $field . ' '.$operator.' '.$numnewcrit;\n            \t\t}\n            \t\telse\n            \t\t{\n            \t\t\t$newres .= ($i2 > 0 ? ' OR ' : '') . '1 = 2';\t// force false\n            \t\t}\n            \t\t$i2++;\t// a criteria was added to string\n            \t}\n            }\n            else if ($mode == 2)\n            {\n\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '') . $field . \" IN (\" . $db->escape(trim($crit)) . \")\";\n            \t$i2++;\t// a criteria was added to string\n            }\n            else    // $mode=0\n\t\t\t{\n\t\t\t\t$textcrit = '';\n\t\t\t\t$tmpcrits = explode('|',$crit);\n\t\t\t\t$i3 = 0;\n\t\t\t\tforeach($tmpcrits as $tmpcrit)\n\t\t\t\t{\n\t            \t$newres .= (($i2 > 0 || $i3 > 0) ? ' OR ' : '') . $field . \" LIKE '\";\n\n\t            \t$tmpcrit=trim($tmpcrit);\n\t            \t$tmpcrit2=$tmpcrit;\n\t            \t$tmpbefore='%'; $tmpafter='%';\n\t            \tif (preg_match('/^[\\^\\$]/', $tmpcrit))\n\t            \t{\n\t            \t    $tmpbefore='';\n\t            \t    $tmpcrit2 = preg_replace('/^[\\^\\$]/', '', $tmpcrit2);\n\t            \t}\n\t\t\t\t\tif (preg_match('/[\\^\\$]$/', $tmpcrit))\n\t            \t{\n\t            \t    $tmpafter='';\n\t            \t    $tmpcrit2 = preg_replace('/[\\^\\$]$/', '', $tmpcrit2);\n\t            \t}\n\t            \t$newres .= $tmpbefore;\n\t            \t$newres .= $db->escape($tmpcrit2);\n\t            \t$newres .= $tmpafter;\n\t            \t$newres .= \"'\";\n\t            \tif ($tmpcrit2 == '')\n\t            \t{\n\t            \t    $newres .= ' OR ' . $field . \" IS NULL\";\n\t            \t}\n\t            \t$i3++;\n\t\t\t\t}\n\t\t\t\t$i2++;\t// a criteria was added to string\n            }\n            $i++;\n        }\n        if ($newres) $res = $res . ($res ? ' AND ' : '') . ($i2 > 1 ? '(' : '') .$newres . ($i2 > 1 ? ')' : '');\n        $j++;\n    }\n    $res = ($nofirstand?\"\":\" AND \").\"(\" . $res . \")\";\n    //print 'xx'.$res.'yy';\n    return $res;\n}\n\n/**\n * Return the filename of file to get the thumbs\n *\n * @param   string  $file           Original filename (full or relative path)\n * @param   string  $extName        Extension to differenciate thumb file name ('', '_small', '_mini')\n * @param   string  $extImgTarget   Force image extension for thumbs. Use '' to keep same extension than original image (default).\n * @return  string                  New file name (full or relative path, including the thumbs/)\n */\nfunction getImageFileNameForSize($file, $extName, $extImgTarget='')\n{\n\t$dirName = dirname($file);\n\tif ($dirName == '.') $dirName='';\n\n    $fileName = preg_replace('/(\\.gif|\\.jpeg|\\.jpg|\\.png|\\.bmp)$/i','',$file);\t// We remove extension, whatever is its case\n\t$fileName = basename($fileName);\n\n\tif (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.jpg$/i',$file)?'.jpg':'');\n    if (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.jpeg$/i',$file)?'.jpeg':'');\n    if (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.gif$/i',$file)?'.gif':'');\n    if (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.png$/i',$file)?'.png':'');\n    if (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.bmp$/i',$file)?'.bmp':'');\n\n    if (! $extImgTarget) return $file;\n\n    $subdir='';\n    if ($extName) $subdir = 'thumbs/';\n\n    return ($dirName?$dirName.'/':'').$subdir.$fileName.$extName.$extImgTarget; // New filename for thumb\n}\n\n\n/**\n * Return URL we can use for advanced preview links\n *\n * @param   string    $modulepart     propal, facture, facture_fourn, ...\n * @param   string    $relativepath   Relative path of docs.\n * @param\tint\t\t  $alldata\t\t  Return array with all components (1 is recommended, then use a simple a href link with the class, target and mime attribute added. 'documentpreview' css class is handled by jquery code into main.inc.php)\n * @param\tstring\t  $param\t\t  More param on http links\n * @return  string|array              Output string with href link or array with all components of link\n */\nfunction getAdvancedPreviewUrl($modulepart, $relativepath, $alldata=0, $param='')\n{\n    global $conf, $langs;\n\n    if (empty($conf->use_javascript_ajax)) return '';\n\n    $mime_preview = array('bmp', 'jpeg', 'png', 'gif', 'tiff', 'pdf', 'plain', 'css');\n    //$mime_preview[]='vnd.oasis.opendocument.presentation';\n    //$mime_preview[]='archive';\n    $num_mime = array_search(dol_mimetype($relativepath, '', 1), $mime_preview);\n\n    if ($alldata == 1)\n    {\n    \tif ($num_mime !== false) return array('target'=>'_blank', 'css'=>'documentpreview', 'url'=>DOL_URL_ROOT.'/document.php?modulepart='.$modulepart.'&attachment=0&file='.urlencode($relativepath), 'mime'=>dol_mimetype($relativepath), );\n    \telse return array();\n    }\n\n    // old behavior\n    if ($num_mime !== false) return 'javascript:document_preview(\\''.dol_escape_js(DOL_URL_ROOT.'/document.php?modulepart='.$modulepart.'&attachment=0&file='.urlencode($relativepath).($param?'&'.$param:'')).'\\', \\''.dol_mimetype($relativepath).'\\', \\''.dol_escape_js($langs->trans('Preview')).'\\')';\n    else return '';\n}\n\n\n/**\n *\tReturn mime type of a file\n *\n *\t@param\tstring\t$file\t\tFilename we looking for MIME type\n *  @param  string\t$default    Default mime type if extension not found in known list\n * \t@param\tint\t\t$mode    \t0=Return full mime, 1=otherwise short mime string, 2=image for mime type, 3=source language\n *\t@return string \t\t    \tReturn a mime type family (text/xxx, application/xxx, image/xxx, audio, video, archive)\n *  @see    image_format_supported (images.lib.php)\n */\nfunction dol_mimetype($file,$default='application/octet-stream',$mode=0)\n{\n    $mime=$default;\n    $imgmime='other.png';\n    $srclang='';\n\n    $tmpfile=preg_replace('/\\.noexe$/','',$file);\n\n    // Text files\n    if (preg_match('/\\.txt$/i',$tmpfile))         \t\t\t   { $mime='text/plain'; $imgmime='text.png'; }\n    if (preg_match('/\\.rtx$/i',$tmpfile))                      { $mime='text/richtext'; $imgmime='text.png'; }\n    if (preg_match('/\\.csv$/i',$tmpfile))\t\t\t\t\t   { $mime='text/csv'; $imgmime='text.png'; }\n    if (preg_match('/\\.tsv$/i',$tmpfile))\t\t\t\t\t   { $mime='text/tab-separated-values'; $imgmime='text.png'; }\n    if (preg_match('/\\.(cf|conf|log)$/i',$tmpfile))            { $mime='text/plain'; $imgmime='text.png'; }\n    if (preg_match('/\\.ini$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='ini'; }\n    if (preg_match('/\\.css$/i',$tmpfile))                      { $mime='text/css'; $imgmime='css.png'; $srclang='css'; }\n    // Certificate files\n    if (preg_match('/\\.(crt|cer|key|pub)$/i',$tmpfile))        { $mime='text/plain'; $imgmime='text.png'; }\n    // HTML/XML\n    if (preg_match('/\\.(html|htm|shtml)$/i',$tmpfile))         { $mime='text/html'; $imgmime='html.png'; $srclang='html'; }\n    if (preg_match('/\\.(xml|xhtml)$/i',$tmpfile))              { $mime='text/xml'; $imgmime='other.png'; $srclang='xml'; }\n    // Languages\n    if (preg_match('/\\.bas$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='bas'; }\n    if (preg_match('/\\.(c)$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='c'; }\n    if (preg_match('/\\.(cpp)$/i',$tmpfile))                    { $mime='text/plain'; $imgmime='text.png'; $srclang='cpp'; }\n    if (preg_match('/\\.(h)$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='h'; }\n    if (preg_match('/\\.(java|jsp)$/i',$tmpfile))               { $mime='text/plain'; $imgmime='text.png'; $srclang='java'; }\n    if (preg_match('/\\.php([0-9]{1})?$/i',$tmpfile))           { $mime='text/plain'; $imgmime='php.png'; $srclang='php'; }\n    if (preg_match('/\\.phtml$/i',$tmpfile))                    { $mime='text/plain'; $imgmime='php.png'; $srclang='php'; }\n    if (preg_match('/\\.(pl|pm)$/i',$tmpfile))                  { $mime='text/plain'; $imgmime='pl.png'; $srclang='perl'; }\n    if (preg_match('/\\.sql$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='sql'; }\n    if (preg_match('/\\.js$/i',$tmpfile))                       { $mime='text/x-javascript'; $imgmime='jscript.png'; $srclang='js'; }\n    // Open office\n    if (preg_match('/\\.odp$/i',$tmpfile))                      { $mime='application/vnd.oasis.opendocument.presentation'; $imgmime='ooffice.png'; }\n    if (preg_match('/\\.ods$/i',$tmpfile))                      { $mime='application/vnd.oasis.opendocument.spreadsheet'; $imgmime='ooffice.png'; }\n    if (preg_match('/\\.odt$/i',$tmpfile))                      { $mime='application/vnd.oasis.opendocument.text'; $imgmime='ooffice.png'; }\n    // MS Office\n    if (preg_match('/\\.mdb$/i',$tmpfile))\t\t\t\t\t   { $mime='application/msaccess'; $imgmime='mdb.png'; }\n    if (preg_match('/\\.doc(x|m)?$/i',$tmpfile))\t\t\t\t   { $mime='application/msword'; $imgmime='doc.png'; }\n    if (preg_match('/\\.dot(x|m)?$/i',$tmpfile))\t\t\t\t   { $mime='application/msword'; $imgmime='doc.png'; }\n    if (preg_match('/\\.xlt(x)?$/i',$tmpfile))\t\t\t\t   { $mime='application/vnd.ms-excel'; $imgmime='xls.png'; }\n    if (preg_match('/\\.xla(m)?$/i',$tmpfile))\t\t\t\t   { $mime='application/vnd.ms-excel'; $imgmime='xls.png'; }\n    if (preg_match('/\\.xls$/i',$tmpfile))\t\t\t           { $mime='application/vnd.ms-excel'; $imgmime='xls.png'; }\n    if (preg_match('/\\.xls(b|m|x)$/i',$tmpfile))\t\t\t   { $mime='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'; $imgmime='xls.png'; }\n    if (preg_match('/\\.pps(m|x)?$/i',$tmpfile))\t\t\t\t   { $mime='application/vnd.ms-powerpoint'; $imgmime='ppt.png'; }\n    if (preg_match('/\\.ppt(m|x)?$/i',$tmpfile))\t\t\t\t   { $mime='application/x-mspowerpoint'; $imgmime='ppt.png'; }\n    // Other\n    if (preg_match('/\\.pdf$/i',$tmpfile))                      { $mime='application/pdf'; $imgmime='pdf.png'; }\n    // Scripts\n    if (preg_match('/\\.bat$/i',$tmpfile))                      { $mime='text/x-bat'; $imgmime='script.png'; $srclang='dos'; }\n    if (preg_match('/\\.sh$/i',$tmpfile))                       { $mime='text/x-sh'; $imgmime='script.png'; $srclang='bash'; }\n    if (preg_match('/\\.ksh$/i',$tmpfile))                      { $mime='text/x-ksh'; $imgmime='script.png'; $srclang='bash'; }\n    if (preg_match('/\\.bash$/i',$tmpfile))                     { $mime='text/x-bash'; $imgmime='script.png'; $srclang='bash'; }\n    // Images\n    if (preg_match('/\\.ico$/i',$tmpfile))                      { $mime='image/x-icon'; $imgmime='image.png'; }\n    if (preg_match('/\\.(jpg|jpeg)$/i',$tmpfile))\t\t\t   { $mime='image/jpeg'; $imgmime='image.png'; }\n    if (preg_match('/\\.png$/i',$tmpfile))\t\t\t\t\t   { $mime='image/png'; $imgmime='image.png'; }\n    if (preg_match('/\\.gif$/i',$tmpfile))\t\t\t\t\t   { $mime='image/gif'; $imgmime='image.png'; }\n    if (preg_match('/\\.bmp$/i',$tmpfile))\t\t\t\t\t   { $mime='image/bmp'; $imgmime='image.png'; }\n    if (preg_match('/\\.(tif|tiff)$/i',$tmpfile))\t\t\t   { $mime='image/tiff'; $imgmime='image.png'; }\n    // Calendar\n    if (preg_match('/\\.vcs$/i',$tmpfile))\t\t\t\t\t   { $mime='text/calendar'; $imgmime='other.png'; }\n    if (preg_match('/\\.ics$/i',$tmpfile))\t\t\t\t\t   { $mime='text/calendar'; $imgmime='other.png'; }\n    // Other\n    if (preg_match('/\\.torrent$/i',$tmpfile))\t\t\t\t   { $mime='application/x-bittorrent'; $imgmime='other.png'; }\n    // Audio\n    if (preg_match('/\\.(mp3|ogg|au|wav|wma|mid)$/i',$tmpfile)) { $mime='audio'; $imgmime='audio.png'; }\n    // Video\n    if (preg_match('/\\.ogv$/i',$tmpfile))                      { $mime='video/ogg'; $imgmime='video.png'; }\n    if (preg_match('/\\.webm$/i',$tmpfile))                     { $mime='video/webm'; $imgmime='video.png'; }\n    if (preg_match('/\\.avi$/i',$tmpfile))                      { $mime='video/x-msvideo'; $imgmime='video.png'; }\n    if (preg_match('/\\.divx$/i',$tmpfile))                     { $mime='video/divx'; $imgmime='video.png'; }\n    if (preg_match('/\\.xvid$/i',$tmpfile))                     { $mime='video/xvid'; $imgmime='video.png'; }\n    if (preg_match('/\\.(wmv|mpg|mpeg)$/i',$tmpfile))           { $mime='video'; $imgmime='video.png'; }\n    // Archive\n    if (preg_match('/\\.(zip|rar|gz|tgz|z|cab|bz2|7z|tar|lzh)$/i',$tmpfile))   { $mime='archive'; $imgmime='archive.png'; }    // application/xxx where zzz is zip, ...\n    // Exe\n    if (preg_match('/\\.(exe|com)$/i',$tmpfile))                { $mime='application/octet-stream'; $imgmime='other.png'; }\n    // Lib\n    if (preg_match('/\\.(dll|lib|o|so|a)$/i',$tmpfile))         { $mime='library'; $imgmime='library.png'; }\n    // Err\n    if (preg_match('/\\.err$/i',$tmpfile))                      { $mime='error'; $imgmime='error.png'; }\n\n    // Return string\n    if ($mode == 1)\n    {\n        $tmp=explode('/',$mime);\n        return (! empty($tmp[1])?$tmp[1]:$tmp[0]);\n    }\n    if ($mode == 2)\n    {\n        return $imgmime;\n    }\n    if ($mode == 3)\n    {\n        return $srclang;\n    }\n\n    return $mime;\n}\n\n", "<?php\n/* Copyright (C) 2004-2007 Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2013 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2005      Simon Tosser         <simon@kornog-computing.com>\n * Copyright (C) 2005-2012 Regis Houssin        <regis.houssin@capnetworks.com>\n * Copyright (C) 2010\t   Pierre Morin         <pierre.morin@auguria.net>\n * Copyright (C) 2010\t   Juanjo Menent        <jmenent@2byte.es>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n * or see http://www.gnu.org/\n */\n\n/**\n *\t\\file       htdocs/document.php\n *  \\brief      Wrapper to download data files\n *  \\remarks    Call of this wrapper is made with URL:\n * \t\t\t\tdocument.php?modulepart=repfichierconcerne&file=pathrelatifdufichier\n * \t\t\t\tdocument.php?modulepart=logs&file=dolibarr.log\n */\n\ndefine('NOTOKENRENEWAL',1); // Disables token renewal\n// Pour autre que bittorrent, on charge environnement + info issus de logon (comme le user)\nif (isset($_GET[\"modulepart\"]) && $_GET[\"modulepart\"] == 'bittorrent' && ! defined(\"NOLOGIN\"))\n{\n\tdefine(\"NOLOGIN\",1);\n\tdefine(\"NOCSRFCHECK\",1);\t// We accept to go on this page from external web site.\n}\nif (! defined('NOREQUIREMENU')) define('NOREQUIREMENU','1');\nif (! defined('NOREQUIREHTML')) define('NOREQUIREHTML','1');\nif (! defined('NOREQUIREAJAX')) define('NOREQUIREAJAX','1');\n\n/**\n * Header empty\n *\n * @return\tvoid\n */\nfunction llxHeader() { }\n/**\n * Footer empty\n *\n * @return\tvoid\n */\nfunction llxFooter() { }\n\n\nrequire 'main.inc.php';\t// Load $user and permissions\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n$encoding = '';\n$action=GETPOST('action','alpha');\n$original_file=GETPOST('file','alpha');\t// Do not use urldecode here ($_GET are already decoded by PHP).\n$modulepart=GETPOST('modulepart','alpha');\n$urlsource=GETPOST('urlsource','alpha');\n$entity=GETPOST('entity','int')?GETPOST('entity','int'):$conf->entity;\n\n// Security check\nif (empty($modulepart)) accessforbidden('Bad value for parameter modulepart');\nif ($modulepart == 'fckeditor') $modulepart='medias';   // For backward compatibility\n\n$socid=0;\nif ($user->societe_id > 0) $socid = $user->societe_id;\n\n// For some module part, dir may be privates\nif (in_array($modulepart,array('facture_paiement','unpaid')))\n{\n\tif (! $user->rights->societe->client->voir || $socid) $original_file='private/'.$user->id.'/'.$original_file;\t// If user has no permission to see all, output dir is specific to user\n}\n\n/*\n * Action\n */\n\n// None\n\n\n/*\n * View\n */\n\n// Define mime type\n$type = 'application/octet-stream';\nif (GETPOST('type','alpha')) $type=GETPOST('type','alpha');\nelse $type=dol_mimetype($original_file);\n\n// Define attachment (attachment=true to force choice popup 'open'/'save as')\n$attachment = true;\nif (preg_match('/\\.(html|htm)$/i',$original_file)) $attachment = false;\nif (isset($_GET[\"attachment\"])) $attachment = GETPOST(\"attachment\",'alpha')?true:false;\nif (! empty($conf->global->MAIN_DISABLE_FORCE_SAVEAS)) $attachment=false;\n\n// Security: Delete string ../ into $original_file\n$original_file = str_replace(\"../\",\"/\", $original_file);\n\n// Find the subdirectory name as the reference\n$refname=basename(dirname($original_file).\"/\");\n\n// Security check\nif (empty($modulepart)) accessforbidden('Bad value for parameter modulepart');\n$check_access = dol_check_secure_access_document($modulepart, $original_file, $entity, $refname);\n$accessallowed              = $check_access['accessallowed'];\n$sqlprotectagainstexternals = $check_access['sqlprotectagainstexternals'];\n$fullpath_original_file     = $check_access['original_file'];               // $fullpath_original_file is now a full path name\n\n// Basic protection (against external users only)\nif ($user->societe_id > 0)\n{\n\tif ($sqlprotectagainstexternals)\n\t{\n\t\t$resql = $db->query($sqlprotectagainstexternals);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num=$db->num_rows($resql);\n\t\t\t$i=0;\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\tif ($user->societe_id != $obj->fk_soc)\n\t\t\t\t{\n\t\t\t\t\t$accessallowed=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Security:\n// Limit access if permissions are wrong\nif (! $accessallowed)\n{\n\taccessforbidden();\n}\n\n// Security:\n// On interdit les remontees de repertoire ainsi que les pipe dans les noms de fichiers.\nif (preg_match('/\\.\\./',$fullpath_original_file) || preg_match('/[<>|]/',$fullpath_original_file))\n{\n\tdol_syslog(\"Refused to deliver file \".$fullpath_original_file);\n\tprint \"ErrorFileNameInvalid: \".$original_file;\n\texit;\n}\n\n\nclearstatcache();\n\n$filename = basename($fullpath_original_file);\n\n// Output file on browser\ndol_syslog(\"document.php download $fullpath_original_file filename=$filename content-type=$type\");\n$fullpath_original_file_osencoded=dol_osencode($fullpath_original_file);\t// New file name encoded in OS encoding charset\n\n// This test if file exists should be useless. We keep it to find bug more easily\nif (! file_exists($fullpath_original_file_osencoded))\n{\n\tdol_syslog(\"ErrorFileDoesNotExists: \".$fullpath_original_file);\n\tprint \"ErrorFileDoesNotExists: \".$original_file;\n\texit;\n}\n\n// Permissions are ok and file found, so we return it\ntop_httphead($type);\nheader('Content-Description: File Transfer');\nif ($encoding)   header('Content-Encoding: '.$encoding);\n// Add MIME Content-Disposition from RFC 2183 (inline=automatically displayed, atachment=need user action to open)\nif ($attachment) header('Content-Disposition: attachment; filename=\"'.$filename.'\"');\nelse header('Content-Disposition: inline; filename=\"'.$filename.'\"');\nheader('Content-Length: ' . dol_filesize($fullpath_original_file));\n// Ajout directives pour resoudre bug IE\nheader('Cache-Control: Public, must-revalidate');\nheader('Pragma: public');\n\n//ob_clean();\n//flush();\n\nreadfile($fullpath_original_file_osencoded);\n\nif (is_object($db)) $db->close();\n", "# Dolibarr language file - Source file is en_US - main\nDIRECTION=ltr\n# Note for Chinese:\n# msungstdlight or cid0ct are for traditional Chinese (traditional does not render with Ubuntu pdf reader)\n# stsongstdlight or cid0cs are for simplified Chinese\n# To read Chinese pdf with Linux: sudo apt-get install poppler-data\nFONTFORPDF=helvetica\nFONTSIZEFORPDF=10\nSeparatorDecimal=.\nSeparatorThousand=,\nFormatDateShort=%m/%d/%Y\nFormatDateShortInput=%m/%d/%Y\nFormatDateShortJava=MM/dd/yyyy\nFormatDateShortJavaInput=MM/dd/yyyy\nFormatDateShortJQuery=mm/dd/yy\nFormatDateShortJQueryInput=mm/dd/yy\nFormatHourShortJQuery=HH:MI\nFormatHourShort=%I:%M %p\nFormatHourShortDuration=%H:%M\nFormatDateTextShort=%b %d, %Y\nFormatDateText=%B %d, %Y\nFormatDateHourShort=%m/%d/%Y %I:%M %p\nFormatDateHourSecShort=%m/%d/%Y %I:%M:%S %p\nFormatDateHourTextShort=%b %d, %Y, %I:%M %p\nFormatDateHourText=%B %d, %Y, %I:%M %p\nDatabaseConnection=Database connection\nNoTemplateDefined=No template defined for this email type\nAvailableVariables=Available substitution variables\nNoTranslation=No translation\nNoRecordFound=No record found\nNoRecordDeleted=No record deleted\nNotEnoughDataYet=Not enough data\nNoError=No error\nError=Error\nErrors=Errors\nErrorFieldRequired=Field '%s' is required\nErrorFieldFormat=Field '%s' has a bad value\nErrorFileDoesNotExists=File %s does not exist\nErrorFailedToOpenFile=Failed to open file %s\nErrorCanNotCreateDir=Cannot create dir %s\nErrorCanNotReadDir=Cannot read dir %s\nErrorConstantNotDefined=Parameter %s not defined\nErrorUnknown=Unknown error\nErrorSQL=SQL Error\nErrorLogoFileNotFound=Logo file '%s' was not found\nErrorGoToGlobalSetup=Go to 'Company/Organisation' setup to fix this\nErrorGoToModuleSetup=Go to Module setup to fix this\nErrorFailedToSendMail=Failed to send mail (sender=%s, receiver=%s)\nErrorFileNotUploaded=File was not uploaded. Check that size does not exceed maximum allowed, that free space is available on disk and that there is not already a file with same name in this directory.\nErrorInternalErrorDetected=Error detected\nErrorWrongHostParameter=Wrong host parameter\nErrorYourCountryIsNotDefined=Your country is not defined. Go to Home-Setup-Edit and post again the form.\nErrorRecordIsUsedByChild=Failed to delete this record. This record is used by at least one child records.\nErrorWrongValue=Wrong value\nErrorWrongValueForParameterX=Wrong value for parameter %s\nErrorNoRequestInError=No request in error\nErrorServiceUnavailableTryLater=Service not available for the moment. Try again later.\nErrorDuplicateField=Duplicate value in a unique field\nErrorSomeErrorWereFoundRollbackIsDone=Some errors were found. We rollback changes.\nErrorConfigParameterNotDefined=Parameter <b>%s</b> is not defined inside Dolibarr config file <b>conf.php</b>.\nErrorCantLoadUserFromDolibarrDatabase=Failed to find user <b>%s</b> in Dolibarr database.\nErrorNoVATRateDefinedForSellerCountry=Error, no vat rates defined for country '%s'.\nErrorNoSocialContributionForSellerCountry=Error, no social/fiscal taxes type defined for country '%s'.\nErrorFailedToSaveFile=Error, failed to save file.\nErrorCannotAddThisParentWarehouse=You are trying to add a parent warehouse which is already a child of current one\nMaxNbOfRecordPerPage=Max nb of record per page\nNotAuthorized=You are not authorized to do that.\nSetDate=Set date\nSelectDate=Select a date\nSeeAlso=See also %s\nSeeHere=See here\nApply=Apply\nBackgroundColorByDefault=Default background color\nFileRenamed=The file was successfully renamed\nFileGenerated=The file was successfully generated\nFileSaved=The file was successfully saved\nFileUploaded=The file was successfully uploaded\nFileTransferComplete=File(s) was uploaded successfully\nFilesDeleted=File(s) successfully deleted\nFileWasNotUploaded=A file is selected for attachment but was not yet uploaded. Click on \"Attach file\" for this.\nNbOfEntries=Nb of entries\nGoToWikiHelpPage=Read online help (Internet access needed)\nGoToHelpPage=Read help\nRecordSaved=Record saved\nRecordDeleted=Record deleted\nLevelOfFeature=Level of features\nNotDefined=Not defined\nDolibarrInHttpAuthenticationSoPasswordUseless=Dolibarr authentication mode is set to <b>%s</b> in configuration file <b>conf.php</b>.<br>This means that the password database is external to Dolibarr, so changing this field may have no effect.\nAdministrator=Administrator\nUndefined=Undefined\nPasswordForgotten=Password forgotten?\nSeeAbove=See above\nHomeArea=Home area\nLastConnexion=Latest connection\nPreviousConnexion=Previous connection\nPreviousValue=Previous value\nConnectedOnMultiCompany=Connected on environment\nConnectedSince=Connected since\nAuthenticationMode=Authentication mode\nRequestedUrl=Requested URL\nDatabaseTypeManager=Database type manager\nRequestLastAccessInError=Latest database access request error\nReturnCodeLastAccessInError=Return code for latest database access request error\nInformationLastAccessInError=Information for latest database access request error\nDolibarrHasDetectedError=Dolibarr has detected a technical error\nYouCanSetOptionDolibarrMainProdToZero=You can read log file or set option $dolibarr_main_prod to '0' in your config file to get more information.\nInformationToHelpDiagnose=This information can be useful for diagnostic purposes (you can set option $dolibarr_main_prod to '1' to remove such notices)\nMoreInformation=More information\nTechnicalInformation=Technical information\nTechnicalID=Technical ID\nNotePublic=Note (public)\nNotePrivate=Note (private)\nPrecisionUnitIsLimitedToXDecimals=Dolibarr was setup to limit precision of unit prices to <b>%s</b> decimals.\nDoTest=Test\nToFilter=Filter\nNoFilter=No filter\nWarningYouHaveAtLeastOneTaskLate=Warning, you have at least one element that has exceeded the tolerance delay.\nyes=yes\nYes=Yes\nno=no\nNo=No\nAll=All\nHome=Home\nHelp=Help\nOnlineHelp=Online help\nPageWiki=Wiki page\nMediaBrowser=Media browser\nAlways=Always\nNever=Never\nUnder=under\nPeriod=Period\nPeriodEndDate=End date for period\nActivate=Activate\nActivated=Activated\nClosed=Closed\nClosed2=Closed\nNotClosed=Not closed\nEnabled=Enabled\nDeprecated=Deprecated\nDisable=Disable\nDisabled=Disabled\nAdd=Add\nAddLink=Add link\nRemoveLink=Remove link\nAddToDraft=Add to draft\nUpdate=Update\nClose=Close\nCloseBox=Remove widget from your dashboard\nConfirm=Confirm\nConfirmSendCardByMail=Do you really want to send content of this card by mail to <b>%s</b>?\nDelete=Delete\nRemove=Remove\nResiliate=Terminate\nCancel=Cancel\nModify=Modify\nEdit=Edit\nValidate=Validate\nValidateAndApprove=Validate and Approve\nToValidate=To validate\nNotValidated=Not validated\nSave=Save\nSaveAs=Save As\nTestConnection=Test connection\nToClone=Clone\nConfirmClone=Choose data you want to clone :\nNoCloneOptionsSpecified=No data to clone defined.\nOf=of\nGo=Go\nRun=Run\nCopyOf=Copy of\nShow=Show\nHide=Hide\nShowCardHere=Show card\nSearch=Search\nSearchOf=Search\nValid=Valid\nApprove=Approve\nDisapprove=Disapprove\nReOpen=Re-Open\nUpload=Send file\nToLink=Link\nSelect=Select\nChoose=Choose\nResize=Resize\nRecenter=Recenter\nAuthor=Author\nUser=User\nUsers=Users\nGroup=Group\nGroups=Groups\nNoUserGroupDefined=No user group defined\nPassword=Password\nPasswordRetype=Retype your password\nNoteSomeFeaturesAreDisabled=Note that a lot of features/modules are disabled in this demonstration.\nName=Name\nPerson=Person\nParameter=Parameter\nParameters=Parameters\nValue=Value\nPersonalValue=Personal value\nNewObject=New %s\nNewValue=New value\nCurrentValue=Current value\nCode=Code\nType=Type\nLanguage=Language\nMultiLanguage=Multi-language\nNote=Note\nTitle=Title\nLabel=Label\nRefOrLabel=Ref. or label\nInfo=Log\nFamily=Family\nDescription=Description\nDesignation=Description\nModel=Doc template\nDefaultModel=Default doc template\nAction=Event\nAbout=About\nNumber=Number\nNumberByMonth=Number by month\nAmountByMonth=Amount by month\nNumero=Number\nLimit=Limit\nLimits=Limits\nLogout=Logout\nNoLogoutProcessWithAuthMode=No applicative disconnect feature with authentication mode <b>%s</b> \nConnection=Connection\nSetup=Setup\nAlert=Alert\nMenuWarnings=Alerts\nPrevious=Previous\nNext=Next\nCards=Cards\nCard=Card\nNow=Now\nHourStart=Start hour\nDate=Date\nDateAndHour=Date and hour\nDateToday=Today's date\nDateReference=Reference date\nDateStart=Start date\nDateEnd=End date\nDateCreation=Creation date\nDateCreationShort=Creat. date\nDateModification=Modification date\nDateModificationShort=Modif. date\nDateLastModification=Latest modification date\nDateValidation=Validation date\nDateClosing=Closing date\nDateDue=Due date\nDateValue=Value date\nDateValueShort=Value date\nDateOperation=Operation date\nDateOperationShort=Oper. Date\nDateLimit=Limit date\nDateRequest=Request date\nDateProcess=Process date\nDateBuild=Report build date\nDatePayment=Date of payment\nDateApprove=Approving date\nDateApprove2=Approving date (second approval)\nUserCreation=Creation user\nUserModification=Modification user\nUserCreationShort=Creat. user\nUserModificationShort=Modif. user\nDurationYear=year\nDurationMonth=month\nDurationWeek=week\nDurationDay=day\nDurationYears=years\nDurationMonths=months\nDurationWeeks=weeks\nDurationDays=days\nYear=Year\nMonth=Month\nWeek=Week\nWeekShort=Week\nDay=Day\nHour=Hour\nMinute=Minute\nSecond=Second\nYears=Years\nMonths=Months\nDays=Days\ndays=days\nHours=Hours\nMinutes=Minutes\nSeconds=Seconds\nWeeks=Weeks\nToday=Today\nYesterday=Yesterday\nTomorrow=Tomorrow\nMorning=Morning\nAfternoon=Afternoon\nQuadri=Quadri\nMonthOfDay=Month of the day\nHourShort=H\nMinuteShort=mn\nRate=Rate\nCurrencyRate=Currency conversion rate\nUseLocalTax=Include tax\nBytes=Bytes\nKiloBytes=Kilobytes\nMegaBytes=Megabytes\nGigaBytes=Gigabytes\nTeraBytes=Terabytes\nb=b.\nKb=Kb\nMb=Mb\nGb=Gb\nTb=Tb\nCut=Cut\nCopy=Copy\nPaste=Paste\nDefault=Default\nDefaultValue=Default value\nDefaultValues=Default values\nPrice=Price\nUnitPrice=Unit price\nUnitPriceHT=Unit price (net)\nUnitPriceTTC=Unit price\nPriceU=U.P.\nPriceUHT=U.P. (net)\nPriceUHTCurrency=U.P (currency)\nPriceUTTC=U.P. (inc. tax)\nAmount=Amount\nAmountInvoice=Invoice amount\nAmountPayment=Payment amount\nAmountHTShort=Amount (net)\nAmountTTCShort=Amount (inc. tax)\nAmountHT=Amount (net of tax)\nAmountTTC=Amount (inc. tax)\nAmountVAT=Amount tax\nMulticurrencyAlreadyPaid=Already payed, original currency\nMulticurrencyRemainderToPay=Remain to pay, original currency\nMulticurrencyPaymentAmount=Payment amount, original currency\nMulticurrencyAmountHT=Amount (net of tax), original currency\nMulticurrencyAmountTTC=Amount (inc. of tax), original currency\nMulticurrencyAmountVAT=Amount tax, original currency\nAmountLT1=Amount tax 2\nAmountLT2=Amount tax 3\nAmountLT1ES=Amount RE\nAmountLT2ES=Amount IRPF\nAmountTotal=Total amount\nAmountAverage=Average amount\nPriceQtyMinHT=Price quantity min. (net of tax)\nPercentage=Percentage\nTotal=Total\nSubTotal=Subtotal\nTotalHTShort=Total (net)\nTotalHTShortCurrency=Total (net in currency)\nTotalTTCShort=Total (inc. tax)\nTotalHT=Total (net of tax)\nTotalHTforthispage=Total (net of tax) for this page\nTotalforthispage=Total for this page\nTotalTTC=Total (inc. tax)\nTotalTTCToYourCredit=Total (inc. tax) to your credit\nTotalVAT=Total tax\nTotalVATIN=Total IGST\nTotalLT1=Total tax 2\nTotalLT2=Total tax 3\nTotalLT1ES=Total RE\nTotalLT2ES=Total IRPF\nTotalLT1IN=Total CGST\nTotalLT2IN=Total SGST\nHT=Net of tax\nTTC=Inc. tax\nINCT=Inc. all taxes\nVAT=Sales tax\nVATIN=IGST\nVATs=Sales taxes\nVATINs=IGST taxes\nLT1=Sales tax 2\nLT2=Sales tax 3\nLT1ES=RE\nLT2ES=IRPF\nLT1IN=CGST\nLT2IN=SGST\nVATRate=Tax Rate\nAverage=Average\nSum=Sum\nDelta=Delta\nModule=Module/Application\nModules=Modules/Applications\nOption=Option\nList=List\nFullList=Full list\nStatistics=Statistics\nOtherStatistics=Other statistics\nStatus=Status\nFavorite=Favorite\nShortInfo=Info.\nRef=Ref.\nExternalRef=Ref. extern\nRefSupplier=Ref. supplier\nRefPayment=Ref. payment\nCommercialProposalsShort=Commercial proposals\nComment=Comment\nComments=Comments\nActionsToDo=Events to do\nActionsToDoShort=To do\nActionsDoneShort=Done\nActionNotApplicable=Not applicable\nActionRunningNotStarted=To start\nActionRunningShort=In progress\nActionDoneShort=Finished\nActionUncomplete=Uncomplete\nCompanyFoundation=Company/Organisation\nContactsForCompany=Contacts for this third party\nContactsAddressesForCompany=Contacts/addresses for this third party\nAddressesForCompany=Addresses for this third party\nActionsOnCompany=Events about this third party\nActionsOnMember=Events about this member\nNActionsLate=%s late\nRequestAlreadyDone=Request already recorded\nFilter=Filter\nFilterOnInto=Search criteria '<strong>%s</strong>' into fields %s \nRemoveFilter=Remove filter\nChartGenerated=Chart generated\nChartNotGenerated=Chart not generated\nGeneratedOn=Build on %s\nGenerate=Generate\nDuration=Duration\nTotalDuration=Total duration\nSummary=Summary\nDolibarrStateBoard=Database statistics\nDolibarrWorkBoard=Open items dashboard \nNoOpenedElementToProcess=No opened element to process\nAvailable=Available\nNotYetAvailable=Not yet available\nNotAvailable=Not available\nCategories=Tags/categories\nCategory=Tag/category\nBy=By\nFrom=From\nto=to\nand=and\nor=or\nOther=Other\nOthers=Others\nOtherInformations=Other informations\nQuantity=Quantity\nQty=Qty\nChangedBy=Changed by\nApprovedBy=Approved by\nApprovedBy2=Approved by (second approval)\nApproved=Approved\nRefused=Refused\nReCalculate=Recalculate\nResultKo=Failure\nReporting=Reporting\nReportings=Reporting\nDraft=Draft\nDrafts=Drafts\nValidated=Validated\nOpened=Open\nNew=New\nDiscount=Discount\nUnknown=Unknown\nGeneral=General\nSize=Size\nReceived=Received\nPaid=Paid\nTopic=Subject\nByCompanies=By third parties\nByUsers=By users\nLinks=Links\nLink=Link\nRejects=Rejects\nPreview=Preview\nNextStep=Next step\nDatas=Data\nNone=None\nNoneF=None\nNoneOrSeveral=None or several\nLate=Late\nLateDesc=Delay to define if a record is late or not depends on your setup. Ask your admin to change delay from menu Home - Setup - Alerts.\nPhoto=Picture\nPhotos=Pictures\nAddPhoto=Add picture\nDeletePicture=Picture delete\nConfirmDeletePicture=Confirm picture deletion?\nLogin=Login\nCurrentLogin=Current login\nEnterLoginDetail=Enter login details\nJanuary=January\nFebruary=February\nMarch=March\nApril=April\nMay=May\nJune=June\nJuly=July\nAugust=August\nSeptember=September\nOctober=October\nNovember=November\nDecember=December\nJanuaryMin=Jan\nFebruaryMin=Feb\nMarchMin=Mar\nAprilMin=Apr\nMayMin=May\nJuneMin=Jun\nJulyMin=Jul\nAugustMin=Aug\nSeptemberMin=Sep\nOctoberMin=Oct\nNovemberMin=Nov\nDecemberMin=Dec\nMonth01=January\nMonth02=February\nMonth03=March\nMonth04=April\nMonth05=May\nMonth06=June\nMonth07=July\nMonth08=August\nMonth09=September\nMonth10=October\nMonth11=November\nMonth12=December\nMonthShort01=Jan\nMonthShort02=Feb\nMonthShort03=Mar\nMonthShort04=Apr\nMonthShort05=May\nMonthShort06=Jun\nMonthShort07=Jul\nMonthShort08=Aug\nMonthShort09=Sep\nMonthShort10=Oct\nMonthShort11=Nov\nMonthShort12=Dec\nAttachedFiles=Attached files and documents\nDateFormatYYYYMM=YYYY-MM\nDateFormatYYYYMMDD=YYYY-MM-DD\nDateFormatYYYYMMDDHHMM=YYYY-MM-DD HH:SS\nReportName=Report name\nReportPeriod=Report period\nReportDescription=Description\nReport=Report\nKeyword=Keyword\nOrigin=Origin\nLegend=Legend\nFill=Fill\nReset=Reset\nFile=File\nFiles=Files\nNotAllowed=Not allowed\nReadPermissionNotAllowed=Read permission not allowed\nAmountInCurrency=Amount in %s currency\nExample=Example\nExamples=Examples\nNoExample=No example\nFindBug=Report a bug\nNbOfThirdParties=Number of third parties\nNbOfLines=Number of lines\nNbOfObjects=Number of objects\nNbOfObjectReferers=Number of related items\nReferers=Related items\nTotalQuantity=Total quantity\nDateFromTo=From %s to %s\nDateFrom=From %s\nDateUntil=Until %s\nCheck=Check\nUncheck=Uncheck\nInternal=Internal\nExternal=External\nInternals=Internal\nExternals=External\nWarning=Warning\nWarnings=Warnings\nBuildDoc=Build Doc\nEntity=Environment\nEntities=Entities\nCustomerPreview=Customer preview\nSupplierPreview=Supplier preview\nShowCustomerPreview=Show customer preview\nShowSupplierPreview=Show supplier preview\nRefCustomer=Ref. customer\nCurrency=Currency\nInfoAdmin=Information for administrators\nUndo=Undo\nRedo=Redo\nExpandAll=Expand all\nUndoExpandAll=Undo expand\nReason=Reason\nFeatureNotYetSupported=Feature not yet supported\nCloseWindow=Close window\nResponse=Response\nPriority=Priority\nSendByMail=Send by EMail\nMailSentBy=Email sent by\nTextUsedInTheMessageBody=Email body\nSendAcknowledgementByMail=Send confirmation email\nEMail=E-mail\nNoEMail=No email\nEmail=Email\nNoMobilePhone=No mobile phone\nOwner=Owner\nFollowingConstantsWillBeSubstituted=The following constants will be replaced with the corresponding value.\nRefresh=Refresh\nBackToList=Back to list\nGoBack=Go back\nCanBeModifiedIfOk=Can be modified if valid\nCanBeModifiedIfKo=Can be modified if not valid\nValueIsValid=Value is valid\nValueIsNotValid=Value is not valid\nRecordCreatedSuccessfully=Record created successfully\nRecordModifiedSuccessfully=Record modified successfully\nRecordsModified=%s record modified\nRecordsDeleted=%s record deleted\nAutomaticCode=Automatic code\nFeatureDisabled=Feature disabled\nMoveBox=Move widget\nOffered=Offered\nNotEnoughPermissions=You don't have permission for this action\nSessionName=Session name\nMethod=Method\nReceive=Receive\nCompleteOrNoMoreReceptionExpected=Complete or nothing more expected\nExpectedValue=Expected Value\nCurrentValue=Current Value\nPartialWoman=Partial\nTotalWoman=Total\nNeverReceived=Never received\nCanceled=Canceled\nYouCanChangeValuesForThisListFromDictionarySetup=You can change values for this list from menu Setup - Dictionaries\nYouCanChangeValuesForThisListFrom=You can change values for this list from menu %s\nYouCanSetDefaultValueInModuleSetup=You can set the default value used when creating a new record into module setup\nColor=Color\nDocuments=Linked files\nDocuments2=Documents\nUploadDisabled=Upload disabled\nMenuECM=Documents\nMenuAWStats=AWStats\nMenuMembers=Members\nMenuAgendaGoogle=Google agenda\nThisLimitIsDefinedInSetup=Dolibarr limit (Menu home-setup-security): %s Kb, PHP limit: %s Kb\nNoFileFound=No documents saved in this directory\nCurrentUserLanguage=Current language\nCurrentTheme=Current theme\nCurrentMenuManager=Current menu manager\nBrowser=Browser\nLayout=Layout\nScreen=Screen\nDisabledModules=Disabled modules\nFor=For\nForCustomer=For customer\nSignature=Signature\nDateOfSignature=Date of signature\nHidePassword=Show command with password hidden\nUnHidePassword=Show real command with clear password\nRoot=Root\nInformations=Informations\nPage=Page\nNotes=Notes\nAddNewLine=Add new line\nAddFile=Add file\nFreeZone=Not a predefined product/service\nFreeLineOfType=Not a predefined entry of type\nCloneMainAttributes=Clone object with its main attributes\nPDFMerge=PDF Merge\nMerge=Merge\nDocumentModelStandardPDF=Standard PDF template\nPrintContentArea=Show page to print main content area\nMenuManager=Menu manager\nWarningYouAreInMaintenanceMode=Warning, you are in a maintenance mode, so only login <b>%s</b> is allowed to use application at the moment.\nCoreErrorTitle=System error\nCoreErrorMessage=Sorry, an error occurred. Contact your system administrator to check the logs or disable $dolibarr_main_prod=1 to get more information.\nCreditCard=Credit card\nFieldsWithAreMandatory=Fields with <b>%s</b> are mandatory\nFieldsWithIsForPublic=Fields with <b>%s</b> are shown on public list of members. If you don't want this, check off the \"public\" box.\nAccordingToGeoIPDatabase=(according to GeoIP convertion)\nLine=Line\nNotSupported=Not supported\nRequiredField=Required field\nResult=Result\nToTest=Test\nValidateBefore=Card must be validated before using this feature\nVisibility=Visibility\nPrivate=Private\nHidden=Hidden\nResources=Resources\nSource=Source\nPrefix=Prefix\nBefore=Before\nAfter=After\nIPAddress=IP address\nFrequency=Frequency\nIM=Instant messaging\nNewAttribute=New attribute\nAttributeCode=Attribute code\nURLPhoto=URL of photo/logo\nSetLinkToAnotherThirdParty=Link to another third party\nLinkTo=Link to\nLinkToProposal=Link to proposal\nLinkToOrder=Link to order\nLinkToInvoice=Link to invoice\nLinkToSupplierOrder=Link to supplier order\nLinkToSupplierProposal=Link to supplier proposal\nLinkToSupplierInvoice=Link to supplier invoice\nLinkToContract=Link to contract\nLinkToIntervention=Link to intervention\nCreateDraft=Create draft\nSetToDraft=Back to draft\nClickToEdit=Click to edit\nObjectDeleted=Object %s deleted\nByCountry=By country\nByTown=By town\nByDate=By date\nByMonthYear=By month/year\nByYear=By year\nByMonth=By month\nByDay=By day\nBySalesRepresentative=By sales representative\nLinkedToSpecificUsers=Linked to a particular user contact\nNoResults=No results\nAdminTools=Admin tools\nSystemTools=System tools\nModulesSystemTools=Modules tools\nTest=Test\nElement=Element\nNoPhotoYet=No pictures available yet\nDashboard=Dashboard\nMyDashboard=My dashboard\nDeductible=Deductible\nfrom=from\ntoward=toward\nAccess=Access\nSelectAction=Select action\nSelectTargetUser=Select target user/employee\nHelpCopyToClipboard=Use Ctrl+C to copy to clipboard\nSaveUploadedFileWithMask=Save file on server with name \"<strong>%s</strong>\" (otherwise \"%s\")\nOriginFileName=Original filename\nSetDemandReason=Set source\nSetBankAccount=Define Bank Account\nAccountCurrency=Account Currency\nViewPrivateNote=View notes\nXMoreLines=%s line(s) hidden\nPublicUrl=Public URL\nAddBox=Add box\nSelectElementAndClick=Select an element and click %s\nPrintFile=Print File %s\nShowTransaction=Show entry on bank account\nGoIntoSetupToChangeLogo=Go into Home - Setup - Company to change logo or go into Home - Setup - Display to hide.\nDeny=Deny\nDenied=Denied\nListOf=List of %s\nListOfTemplates=List of templates\nGender=Gender\nGenderman=Man\nGenderwoman=Woman\nViewList=List view\nMandatory=Mandatory\nHello=Hello\nSincerely=Sincerely\nDeleteLine=Delete line\nConfirmDeleteLine=Are you sure you want to delete this line?\nNoPDFAvailableForDocGenAmongChecked=No PDF were available for the document generation among checked record\nTooManyRecordForMassAction=Too many record selected for mass action. The action is restricted to a list of %s record.\nNoRecordSelected=No record selected\nMassFilesArea=Area for files built by mass actions\nShowTempMassFilesArea=Show area of files built by mass actions\nRelatedObjects=Related Objects\nClassifyBilled=Classify billed\nProgress=Progress\nClickHere=Click here\nFrontOffice=Front office\nBackOffice=Back office\nView=View\nExport=Export\nExports=Exports\nExportFilteredList=Export filtered list\nExportList=Export list\nMiscellaneous=Miscellaneous\nCalendar=Calendar\nGroupBy=Group by...\nViewFlatList=View flat list\nRemoveString=Remove string '%s'\nSomeTranslationAreUncomplete=Some languages may be partially translated or may contains errors. If you detect some, you can fix language files registering to <a href=\"https://transifex.com/projects/p/dolibarr/\" target=\"_blank\">https://transifex.com/projects/p/dolibarr/</a>. \nDirectDownloadLink=Direct download link\nDownload=Download\nActualizeCurrency=Update currency rate\nFiscalyear=Fiscal year\nModuleBuilder=Module Builder\nSetMultiCurrencyCode=Set currency\nBulkActions=Bulk actions\nClickToShowHelp=Click to show tooltip help\nHR=HR\nHRAndBank=HR and Bank\nAutomaticallyCalculated=Automatically calculated\nTitleSetToDraft=Go back to draft\nConfirmSetToDraft=Are you sure you want to go back to Draft status ?\nImportId=Import id\nWebsites=Web sites\nEvents=Events\n# Week day\nMonday=Monday\nTuesday=Tuesday\nWednesday=Wednesday\nThursday=Thursday\nFriday=Friday\nSaturday=Saturday\nSunday=Sunday\nMondayMin=Mo\nTuesdayMin=Tu\nWednesdayMin=We\nThursdayMin=Th\nFridayMin=Fr\nSaturdayMin=Sa\nSundayMin=Su\nDay1=Monday\nDay2=Tuesday\nDay3=Wednesday\nDay4=Thursday\nDay5=Friday\nDay6=Saturday\nDay0=Sunday\nShortMonday=M\nShortTuesday=T\nShortWednesday=W\nShortThursday=T\nShortFriday=F\nShortSaturday=S\nShortSunday=S\nSelectMailModel=Select email template\nSetRef=Set ref\nSelect2ResultFoundUseArrows=Some results found. Use arrows to select.\nSelect2NotFound=No result found\nSelect2Enter=Enter\nSelect2MoreCharacter=or more character\nSelect2MoreCharacters=or more characters\nSelect2MoreCharactersMore=<strong>Search syntax:</strong><br /><kbd><strong> |</strong></kbd><kbd> OR</kbd> (a|b)<br /><kbd><strong>*</strong></kbd><kbd> Any character</kbd> (a*b)<br /><kbd><strong>^</strong></kbd><kbd> Start with</kbd> (^ab)<br /><kbd><strong>$</strong></kbd><kbd> End with</kbd> (ab$)<br />\nSelect2LoadingMoreResults=Loading more results...\nSelect2SearchInProgress=Search in progress...\nSearchIntoThirdparties=Thirdparties\nSearchIntoContacts=Contacts\nSearchIntoMembers=Members\nSearchIntoUsers=Users\nSearchIntoProductsOrServices=Products or services\nSearchIntoProjects=Projects\nSearchIntoTasks=Tasks\nSearchIntoCustomerInvoices=Customer invoices\nSearchIntoSupplierInvoices=Supplier invoices\nSearchIntoCustomerOrders=Customer orders\nSearchIntoSupplierOrders=Supplier orders\nSearchIntoCustomerProposals=Customer proposals\nSearchIntoSupplierProposals=Supplier proposals\nSearchIntoInterventions=Interventions\nSearchIntoContracts=Contracts\nSearchIntoCustomerShipments=Customer shipments\nSearchIntoExpenseReports=Expense reports\nSearchIntoLeaves=Leaves", "<?php\n/* Copyright (C) 2002-2007  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2003       Xavier Dutoit           <doli@sydesy.com>\n * Copyright (C) 2004-2015  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Sebastien Di Cintio     <sdicintio@ressource-toi.org>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2005-2015  Regis Houssin           <regis.houssin@capnetworks.com>\n * Copyright (C) 2011-2014  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2008       Matteli\n * Copyright (C) 2011-2016  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2012       Christophe Battarel     <christophe.battarel@altairis.fr>\n * Copyright (C) 2014-2015  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2015       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/main.inc.php\n *\t\\ingroup\tcore\n *\t\\brief      File that defines environment for Dolibarr GUI pages only (file not required by scripts)\n */\n\n//@ini_set('memory_limit', '128M');\t// This may be useless if memory is hard limited by your PHP\n\n// For optional tuning. Enabled if environment variable MAIN_SHOW_TUNING_INFO is defined.\n$micro_start_time=0;\nif (! empty($_SERVER['MAIN_SHOW_TUNING_INFO']))\n{\n    list($usec, $sec) = explode(\" \", microtime());\n    $micro_start_time=((float) $usec + (float) $sec);\n    // Add Xdebug code coverage\n    //define('XDEBUGCOVERAGE',1);\n    if (defined('XDEBUGCOVERAGE')) {\n        xdebug_start_code_coverage();\n    }\n}\n\n// Removed magic_quotes\nif (function_exists('get_magic_quotes_gpc'))\t// magic_quotes_* deprecated in PHP 5.0 and removed in PHP 5.5\n{\n    if (get_magic_quotes_gpc())\n    {\n        // Forcing parameter setting magic_quotes_gpc and cleaning parameters\n        // (Otherwise he would have for each position, condition\n        // Reading stripslashes variable according to state get_magic_quotes_gpc).\n        // Off mode recommended (just do $db->escape for insert / update).\n        function stripslashes_deep($value)\n        {\n            return (is_array($value) ? array_map('stripslashes_deep', $value) : stripslashes($value));\n        }\n        $_GET     = array_map('stripslashes_deep', $_GET);\n        $_POST    = array_map('stripslashes_deep', $_POST);\n        $_FILES   = array_map('stripslashes_deep', $_FILES);\n        //$_COOKIE  = array_map('stripslashes_deep', $_COOKIE); // Useless because a cookie should never be outputed on screen nor used into sql\n        @set_magic_quotes_runtime(0);\n    }\n}\n\n/**\n * Security: SQL Injection and XSS Injection (scripts) protection (Filters on GET, POST, PHP_SELF).\n *\n * @param\t\tstring\t\t$val\t\tValue\n * @param\t\tstring\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF\n * @return\t\tint\t\t\t\t\t\t>0 if there is an injection\n */\nfunction test_sql_and_script_inject($val, $type)\n{\n    $inj = 0;\n    // For SQL Injection (only GET and POST are used to be included into bad escaped SQL requests)\n    if ($type != 2)\n    {\n        $inj += preg_match('/delete\\s+from/i',\t $val);\n        $inj += preg_match('/create\\s+table/i',\t $val);\n        $inj += preg_match('/update.+set.+=/i',  $val);\n        $inj += preg_match('/insert\\s+into/i', \t $val);\n        $inj += preg_match('/select.+from/i', \t $val);\n        $inj += preg_match('/union.+select/i', \t $val);\n        $inj += preg_match('/into\\s+(outfile|dumpfile)/i',  $val);\n        $inj += preg_match('/(\\.\\.%2f)+/i',\t\t $val);\n    }\n    // For XSS Injection done by adding javascript with script\n    // This is all cases a browser consider text is javascript:\n    // When it found '<script', 'javascript:', '<style', 'onload\\s=' on body tag, '=\"&' on a tag size with old browsers\n    // All examples on page: http://ha.ckers.org/xss.html#XSScalc\n    $inj += preg_match('/<script/i', $val);\n    if (! defined('NOSTYLECHECK')) $inj += preg_match('/<style/i', $val);\n    $inj += preg_match('/base[\\s]+href/si', $val);\n    $inj += preg_match('/<.*onmouse/si', $val);       // onmousexxx can be set on img or any html tag like <img title='...' onmouseover=alert(1)>\n    $inj += preg_match('/onerror\\s*=/i', $val);       // onerror can be set on img or any html tag like <img title='...' onerror = alert(1)>\n    $inj += preg_match('/onfocus\\s*=/i', $val);       // onfocus can be set on input text html tag like <input type='text' value='...' onfocus = alert(1)>\n    $inj += preg_match('/onload\\s*=/i', $val);        // onload can be set on input text html tag like <input type='text' value='...' onfocus = alert(1)>\n    if ($type == 1)\n    {\n        $inj += preg_match('/javascript:/i', $val);\n        $inj += preg_match('/vbscript:/i', $val);\n    }\n    // For XSS Injection done by adding javascript closing html tags like with onmousemove, etc... (closing a src or href tag with not cleaned param)\n    if ($type == 1) $inj += preg_match('/\"/i', $val);\t\t// We refused \" in GET parameters value\n    if ($type == 2) $inj += preg_match('/[;\"]/', $val);\t\t// PHP_SELF is a file system path. It can contains spaces.\n    return $inj;\n}\n\n/**\n * Return true if security check on parameters are OK, false otherwise.\n *\n * @param\t\tstring\t\t\t$var\t\tVariable name\n * @param\t\tstring\t\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF\n * @return\t\tboolean||null\t\t\t\ttrue if there is an injection. Stop code if injection found.\n */\nfunction analyseVarsForSqlAndScriptsInjection(&$var, $type)\n{\n    if (is_array($var))\n    {\n        foreach ($var as $key => $value)\n        {\n            if (analyseVarsForSqlAndScriptsInjection($value,$type))\n            {\n                $var[$key] = $value;\n            }\n            else\n\t\t\t{\n                print 'Access refused by SQL/Script injection protection in main.inc.php (type='.htmlentities($type).' key='.htmlentities($key).' value='.htmlentities($value).' page='.htmlentities($_SERVER[\"REQUEST_URI\"]).')';\n                exit;\n            }\n        }\n        return true;\n    }\n    else\n    {\n        return (test_sql_and_script_inject($var,$type) <= 0);\n    }\n}\n\n\n// Check consistency of NOREQUIREXXX DEFINES\nif ((defined('NOREQUIREDB') || defined('NOREQUIRETRAN')) && ! defined('NOREQUIREMENU')) dol_print_error('','If define NOREQUIREDB or NOREQUIRETRAN are set, you must also set NOREQUIREMENU or not use them');\n\n// Sanity check on URL\nif (! empty($_SERVER[\"PHP_SELF\"]))\n{\n    $morevaltochecklikepost=array($_SERVER[\"PHP_SELF\"]);\n    analyseVarsForSqlAndScriptsInjection($morevaltochecklikepost,2);\n}\n// Sanity check on GET parameters\nif (! defined('NOSCANGETFORINJECTION') && ! empty($_SERVER[\"QUERY_STRING\"]))\n{\n    $morevaltochecklikeget=array($_SERVER[\"QUERY_STRING\"]);\n    analyseVarsForSqlAndScriptsInjection($morevaltochecklikeget,1);\n}\n// Sanity check on POST\nif (! defined('NOSCANPOSTFORINJECTION'))\n{\n\tanalyseVarsForSqlAndScriptsInjection($_POST,0);\n}\n\n// This is to make Dolibarr working with Plesk\nif (! empty($_SERVER['DOCUMENT_ROOT']) && substr($_SERVER['DOCUMENT_ROOT'], -6) !== 'htdocs')\n{\n\tset_include_path($_SERVER['DOCUMENT_ROOT'] . '/htdocs');\n}\n\n// Include the conf.php and functions.lib.php\nrequire_once 'filefunc.inc.php';\n\n// If there is a POST parameter to tell to save automatically some POST parameters into cookies, we do it\nif (! empty($_POST[\"DOL_AUTOSET_COOKIE\"]))\n{\n\t$tmpautoset=explode(':',$_POST[\"DOL_AUTOSET_COOKIE\"],2);\n\t$tmplist=explode(',',$tmpautoset[1]);\n\t$cookiearrayvalue='';\n\tforeach ($tmplist as $tmpkey)\n\t{\n\t\t$postkey=$tmpautoset[0].'_'.$tmpkey;\n\t\t//var_dump('tmpkey='.$tmpkey.' postkey='.$postkey.' value='.$_POST[$postkey]);\n\t\tif (! empty($_POST[$postkey])) $cookiearrayvalue[$tmpkey]=$_POST[$postkey];\n\t}\n\t$cookiename=$tmpautoset[0];\n\t$cookievalue=json_encode($cookiearrayvalue);\n\t//var_dump('setcookie cookiename='.$cookiename.' cookievalue='.$cookievalue);\n\tsetcookie($cookiename, empty($cookievalue)?'':$cookievalue, empty($cookievalue)?0:(time()+(86400*354)), '/');\t// keep cookie 1 year\n\tif (empty($cookievalue)) unset($_COOKIE[$cookiename]);\n}\n\n// Init session. Name of session is specific to Dolibarr instance.\n$prefix=dol_getprefix();\n$sessionname='DOLSESSID_'.$prefix;\n$sessiontimeout='DOLSESSTIMEOUT_'.$prefix;\nif (! empty($_COOKIE[$sessiontimeout])) ini_set('session.gc_maxlifetime',$_COOKIE[$sessiontimeout]);\nsession_name($sessionname);\nsession_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n// This create lock released until session_write_close() or end of page.\n// We need this lock as long as we read/write $_SESSION ['vars']. We can close released when finished.\nif (! defined('NOSESSION'))\n{\n    session_start();\n    if (ini_get('register_globals'))    // Deprecated in 5.3 and removed in 5.4. To solve bug in using $_SESSION\n    {\n        foreach ($_SESSION as $key=>$value)\n        {\n            if (isset($GLOBALS[$key])) unset($GLOBALS[$key]);\n        }\n    }\n}\n\n// Init the 5 global objects, this include will make the new and set properties for: $conf, $db, $langs, $user, $mysoc\nrequire_once 'master.inc.php';\n\n// Activate end of page function\nregister_shutdown_function('dol_shutdown');\n\n// Detection browser\nif (isset($_SERVER[\"HTTP_USER_AGENT\"]))\n{\n    $tmp=getBrowserInfo($_SERVER[\"HTTP_USER_AGENT\"]);\n    $conf->browser->name=$tmp['browsername'];\n    $conf->browser->os=$tmp['browseros'];\n    $conf->browser->version=$tmp['browserversion'];\n    $conf->browser->layout=$tmp['layout'];     // 'classic', 'phone', 'tablet'\n    $conf->browser->phone=$tmp['phone'];\t   // TODO deprecated, use ->layout\n    $conf->browser->tablet=$tmp['tablet'];\t   // TODO deprecated, use ->layout\n    //var_dump($conf->browser);\n\n    if ($conf->browser->layout == 'phone') $conf->dol_no_mouse_hover=1;\n    if ($conf->browser->layout == 'phone') $conf->global->MAIN_TESTMENUHIDER=1;\n}\n\n// Force HTTPS if required ($conf->file->main_force_https is 0/1 or https dolibarr root url)\n// $_SERVER[\"HTTPS\"] is 'on' when link is https, otherwise $_SERVER[\"HTTPS\"] is empty or 'off'\nif (! empty($conf->file->main_force_https) && (empty($_SERVER[\"HTTPS\"]) || $_SERVER[\"HTTPS\"] != 'on'))\n{\n    $newurl='';\n    if (is_numeric($conf->file->main_force_https))\n    {\n        if ($conf->file->main_force_https == '1' && ! empty($_SERVER[\"SCRIPT_URI\"]))\t// If SCRIPT_URI supported by server\n        {\n            if (preg_match('/^http:/i',$_SERVER[\"SCRIPT_URI\"]) && ! preg_match('/^https:/i',$_SERVER[\"SCRIPT_URI\"]))\t// If link is http\n            {\n                $newurl=preg_replace('/^http:/i','https:',$_SERVER[\"SCRIPT_URI\"]);\n            }\n        }\n        else\t// Check HTTPS environment variable (Apache/mod_ssl only)\n        {\n            $newurl=preg_replace('/^http:/i','https:',DOL_MAIN_URL_ROOT).$_SERVER[\"REQUEST_URI\"];\n        }\n    }\n    else\n    {\n        // Check HTTPS environment variable (Apache/mod_ssl only)\n        $newurl=$conf->file->main_force_https.$_SERVER[\"REQUEST_URI\"];\n    }\n    // Start redirect\n    if ($newurl)\n    {\n        dol_syslog(\"main.inc: dolibarr_main_force_https is on, we make a redirect to \".$newurl);\n        header(\"Location: \".$newurl);\n        exit;\n    }\n    else\n    {\n        dol_syslog(\"main.inc: dolibarr_main_force_https is on but we failed to forge new https url so no redirect is done\", LOG_WARNING);\n    }\n}\n\n\n// Loading of additional presentation includes\nif (! defined('NOREQUIREHTML')) require_once DOL_DOCUMENT_ROOT .'/core/class/html.form.class.php';\t    // Need 660ko memory (800ko in 2.2)\nif (! defined('NOREQUIREAJAX') && $conf->use_javascript_ajax) require_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\t// Need 22ko memory\n\n// If install or upgrade process not done or not completely finished, we call the install page.\nif (! empty($conf->global->MAIN_NOT_INSTALLED) || ! empty($conf->global->MAIN_NOT_UPGRADED))\n{\n    dol_syslog(\"main.inc: A previous install or upgrade was not complete. Redirect to install page.\", LOG_WARNING);\n    header(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n    exit;\n}\n// If an upgrade process is required, we call the install page.\nif ((! empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ($conf->global->MAIN_VERSION_LAST_UPGRADE != DOL_VERSION))\n|| (empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ! empty($conf->global->MAIN_VERSION_LAST_INSTALL) && ($conf->global->MAIN_VERSION_LAST_INSTALL != DOL_VERSION)))\n{\n    $versiontocompare=empty($conf->global->MAIN_VERSION_LAST_UPGRADE)?$conf->global->MAIN_VERSION_LAST_INSTALL:$conf->global->MAIN_VERSION_LAST_UPGRADE;\n    require_once DOL_DOCUMENT_ROOT .'/core/lib/admin.lib.php';\n    $dolibarrversionlastupgrade=preg_split('/[.-]/',$versiontocompare);\n    $dolibarrversionprogram=preg_split('/[.-]/',DOL_VERSION);\n    $rescomp=versioncompare($dolibarrversionprogram,$dolibarrversionlastupgrade);\n    if ($rescomp > 0)   // Programs have a version higher than database. We did not add \"&& $rescomp < 3\" because we want upgrade process for build upgrades\n    {\n        dol_syslog(\"main.inc: database version \".$versiontocompare.\" is lower than programs version \".DOL_VERSION.\". Redirect to install page.\", LOG_WARNING);\n        header(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n        exit;\n    }\n}\n\n// Creation of a token against CSRF vulnerabilities\nif (! defined('NOTOKENRENEWAL'))\n{\n    // roulement des jetons car cree a chaque appel\n    if (isset($_SESSION['newtoken'])) $_SESSION['token'] = $_SESSION['newtoken'];\n\n    // Save in $_SESSION['newtoken'] what will be next token. Into forms, we will add param token = $_SESSION['newtoken']\n    $token = dol_hash(uniqid(mt_rand(),TRUE)); // Generates a hash of a random number\n    $_SESSION['newtoken'] = $token;\n}\nif (! defined('NOCSRFCHECK') && empty($dolibarr_nocsrfcheck) && ! empty($conf->global->MAIN_SECURITY_CSRF_WITH_TOKEN))\t// Check validity of token, only if option enabled (this option breaks some features sometimes)\n{\n    if ($_SERVER['REQUEST_METHOD'] == 'POST' && ! GETPOST('token','alpha')) // Note, offender can still send request by GET\n    {\n        print \"Access refused by CSRF protection in main.inc.php. Token not provided.\\n\";\n        print \"If you access your server behind a proxy using url rewriting, you might check that all HTTP header is propagated (or add the line \\$dolibarr_nocsrfcheck=1 into your conf.php file).\\n\";\n        die;\n    }\n    if ($_SERVER['REQUEST_METHOD'] === 'POST')  // This test must be after loading $_SESSION['token'].\n    {\n        if (GETPOST('token', 'alpha') != $_SESSION['token'])\n        {\n            dol_syslog(\"Invalid token in \".$_SERVER['HTTP_REFERER'].\", action=\".GETPOST('action','aZ09').\", _POST['token']=\".GETPOST('token','alpha').\", _SESSION['token']=\".$_SESSION['token'], LOG_WARNING);\n            //print 'Unset POST by CSRF protection in main.inc.php.';\t// Do not output anything because this create problems when using the BACK button on browsers.\n            unset($_POST);\n        }\n    }\n}\n\n// Disable modules (this must be after session_start and after conf has been loaded)\nif (GETPOST('disablemodules','alpha'))  $_SESSION[\"disablemodules\"]=GETPOST('disablemodules','alpha');\nif (! empty($_SESSION[\"disablemodules\"]))\n{\n    $disabled_modules=explode(',',$_SESSION[\"disablemodules\"]);\n    foreach($disabled_modules as $module)\n    {\n        if ($module)\n        {\n        \tif (empty($conf->$module)) $conf->$module=new stdClass();\n        \t$conf->$module->enabled=false;\n        \tif ($module == 'fournisseur')\t\t// Special case\n        \t{\n        \t\t$conf->supplier_order->enabled=0;\n        \t\t$conf->supplier_invoice->enabled=0;\n        \t}\n        }\n    }\n}\n\n\n/*\n * Phase authentication / login\n */\n$login='';\nif (! defined('NOLOGIN'))\n{\n    // $authmode lists the different means of identification to be tested in order of preference.\n    // Example: 'http', 'dolibarr', 'ldap', 'http,forceuser'\n\n    // Authentication mode\n    if (empty($dolibarr_main_authentication)) $dolibarr_main_authentication='http,dolibarr';\n    // Authentication mode: forceuser\n    if ($dolibarr_main_authentication == 'forceuser' && empty($dolibarr_auto_user)) $dolibarr_auto_user='auto';\n    // Set authmode\n    $authmode=explode(',',$dolibarr_main_authentication);\n\n    // No authentication mode\n    if (! count($authmode))\n    {\n        $langs->load('main');\n        dol_print_error('',$langs->trans(\"ErrorConfigParameterNotDefined\",'dolibarr_main_authentication'));\n        exit;\n    }\n\n    // If login request was already post, we retrieve login from the session\n    // Call module if not realized that his request.\n    // At the end of this phase, the variable $login is defined.\n    $resultFetchUser='';\n    $test=true;\n    if (! isset($_SESSION[\"dol_login\"]))\n    {\n        // It is not already authenticated and it requests the login / password\n        include_once DOL_DOCUMENT_ROOT.'/core/lib/security2.lib.php';\n\n        $dol_dst_observed=GETPOST(\"dst_observed\",'int',3);\n        $dol_dst_first=GETPOST(\"dst_first\",'int',3);\n        $dol_dst_second=GETPOST(\"dst_second\",'int',3);\n        $dol_screenwidth=GETPOST(\"screenwidth\",'int',3);\n        $dol_screenheight=GETPOST(\"screenheight\",'int',3);\n        $dol_hide_topmenu=GETPOST('dol_hide_topmenu','int',3);\n        $dol_hide_leftmenu=GETPOST('dol_hide_leftmenu','int',3);\n        $dol_optimize_smallscreen=GETPOST('dol_optimize_smallscreen','int',3);\n        $dol_no_mouse_hover=GETPOST('dol_no_mouse_hover','int',3);\n        $dol_use_jmobile=GETPOST('dol_use_jmobile','int',3);\n        //dol_syslog(\"POST key=\".join(array_keys($_POST),',').' value='.join($_POST,','));\n\n        // If in demo mode, we check we go to home page through the public/demo/index.php page\n        if (! empty($dolibarr_main_demo) && $_SERVER['PHP_SELF'] == DOL_URL_ROOT.'/index.php')  // We ask index page\n        {\n            if (empty($_SERVER['HTTP_REFERER']) || ! preg_match('/public/',$_SERVER['HTTP_REFERER']))\n            {\n                dol_syslog(\"Call index page from another url than demo page (call is done from page \".$_SERVER['HTTP_REFERER'].\")\");\n                $url='';\n                $url.=($url?'&':'').($dol_hide_topmenu?'dol_hide_topmenu='.$dol_hide_topmenu:'');\n                $url.=($url?'&':'').($dol_hide_leftmenu?'dol_hide_leftmenu='.$dol_hide_leftmenu:'');\n                $url.=($url?'&':'').($dol_optimize_smallscreen?'dol_optimize_smallscreen='.$dol_optimize_smallscreen:'');\n                $url.=($url?'&':'').($dol_no_mouse_hover?'dol_no_mouse_hover='.$dol_no_mouse_hover:'');\n                $url.=($url?'&':'').($dol_use_jmobile?'dol_use_jmobile='.$dol_use_jmobile:'');\n                $url=DOL_URL_ROOT.'/public/demo/index.php'.($url?'?'.$url:'');\n                header(\"Location: \".$url);\n                exit;\n            }\n        }\n\n        // Verification security graphic code\n        if (GETPOST(\"username\",\"alpha\",2) && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))\n        {\n            $sessionkey = 'dol_antispam_value';\n            $ok=(array_key_exists($sessionkey, $_SESSION) === TRUE && (strtolower($_SESSION[$sessionkey]) == strtolower($_POST['code'])));\n\n            // Check code\n            if (! $ok)\n            {\n                dol_syslog('Bad value for code, connexion refused');\n                $langs->load('main');\n                $langs->load('errors');\n\n                $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadValueForCode\");\n                $test=false;\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg='ErrorBadValueForCode - login='.GETPOST(\"username\",\"alpha\",2);\n                // Call of triggers\n                include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n                $interface=new Interfaces($db);\n                $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n                if ($result < 0) {\n                    $error++;\n                }\n                // End Call of triggers\n\n                // Hooks on failed login\n\t\t        $action='';\n\t\t        $hookmanager->initHooks(array('login'));\n\t\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t        if ($reshook < 0) $error++;\n\n\t\t        // Note: exit is done later\n            }\n        }\n\n        $usertotest\t\t= (! empty($_COOKIE['login_dolibarr']) ? $_COOKIE['login_dolibarr'] : GETPOST(\"username\",\"alpha\",2));\n        $passwordtotest\t= GETPOST('password','none',2);\n        $entitytotest\t= (GETPOST('entity','int') ? GETPOST('entity','int') : (!empty($conf->entity) ? $conf->entity : 1));\n\n        // Define if we received data to test the login.\n        $goontestloop=false;\n        if (isset($_SERVER[\"REMOTE_USER\"]) && in_array('http',$authmode)) $goontestloop=true;\n        if ($dolibarr_main_authentication == 'forceuser' && ! empty($dolibarr_auto_user)) $goontestloop=true;\n        if (GETPOST(\"username\",\"alpha\",2) || ! empty($_COOKIE['login_dolibarr']) || GETPOST('openid_mode','alpha',1)) $goontestloop=true;\n\n        if (! is_object($langs)) // This can occurs when calling page with NOREQUIRETRAN defined, however we need langs for error messages.\n        {\n            include_once DOL_DOCUMENT_ROOT.'/core/class/translate.class.php';\n            $langs=new Translate(\"\",$conf);\n    \t\t$langcode=(GETPOST('lang','aZ09',1)?GETPOST('lang','aZ09',1):(empty($conf->global->MAIN_LANG_DEFAULT)?'auto':$conf->global->MAIN_LANG_DEFAULT));\n        \t$langs->setDefaultLang($langcode);\n        }\n\n        // Validation of login/pass/entity\n        // If ok, the variable login will be returned\n        // If error, we will put error message in session under the name dol_loginmesg\n        if ($test && $goontestloop)\n        {\n        \t$login = checkLoginPassEntity($usertotest,$passwordtotest,$entitytotest,$authmode);\n        \tif ($login)\n            {\n                $dol_authmode=$conf->authmode;\t// This properties is defined only when logged, to say what mode was successfully used\n                $dol_tz=$_POST[\"tz\"];\n                $dol_tz_string=$_POST[\"tz_string\"];\n                $dol_tz_string=preg_replace('/\\s*\\(.+\\)$/','',$dol_tz_string);\n                $dol_tz_string=preg_replace('/,/','/',$dol_tz_string);\n                $dol_tz_string=preg_replace('/\\s/','_',$dol_tz_string);\n                $dol_dst=0;\n                if (isset($_POST[\"dst_first\"]) && isset($_POST[\"dst_second\"]))\n                {\n                    include_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n                    $datenow=dol_now();\n                    $datefirst=dol_stringtotime($_POST[\"dst_first\"]);\n                    $datesecond=dol_stringtotime($_POST[\"dst_second\"]);\n                    if ($datenow >= $datefirst && $datenow < $datesecond) $dol_dst=1;\n                }\n                //print $datefirst.'-'.$datesecond.'-'.$datenow.'-'.$dol_tz.'-'.$dol_tzstring.'-'.$dol_dst; exit;\n            }\n\n            if (! $login)\n            {\n                dol_syslog('Bad password, connexion refused',LOG_DEBUG);\n                $langs->load('main');\n                $langs->load('errors');\n\n                // Bad password. No authmode has found a good password.\n                // We set a generic message if not defined inside function checkLoginPassEntity or subfunctions\n                if (empty($_SESSION[\"dol_loginmesg\"])) $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadLoginPassword\");\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg=$langs->trans(\"ErrorBadLoginPassword\").' - login='.GETPOST(\"username\",\"alpha\",2);\n                // Call of triggers\n                include_once DOL_DOCUMENT_ROOT.'/core/class/interfaces.class.php';\n                $interface=new Interfaces($db);\n                $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,GETPOST(\"username\",\"alpha\",2));\n                if ($result < 0) {\n                    $error++;\n                }\n                // End Call of triggers\n\n                // Hooks on failed login\n\t\t        $action='';\n\t\t        $hookmanager->initHooks(array('login'));\n\t\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t        if ($reshook < 0) $error++;\n\n\t\t        // Note: exit is done in next chapter\n            }\n        }\n\n        // End test login / passwords\n        if (! $login || (in_array('ldap',$authmode) && empty($passwordtotest)))\t// With LDAP we refused empty password because some LDAP are \"opened\" for anonymous access so connexion is a success.\n        {\n            // No data to test login, so we show the login page\n\t\t\tdol_syslog(\"--- Access to \".$_SERVER[\"PHP_SELF\"].\" showing the login form and exit\");\n\t\t\tif (defined('NOREDIRECTBYMAINTOLOGIN')) return 'ERROR_NOT_LOGGED';\n        \telse dol_loginfunction($langs,$conf,(! empty($mysoc)?$mysoc:''));\n            exit;\n        }\n\n        $resultFetchUser=$user->fetch('', $login, '', 1, ($entitytotest > 0 ? $entitytotest : -1));\n        if ($resultFetchUser <= 0)\n        {\n            dol_syslog('User not found, connexion refused');\n            session_destroy();\n            session_name($sessionname);\n            session_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n            session_start();    // Fixing the bug of register_globals here is useless since session is empty\n\n            if ($resultFetchUser == 0)\n            {\n                $langs->load('main');\n                $langs->load('errors');\n\n                $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n            }\n            if ($resultFetchUser < 0)\n            {\n                $_SESSION[\"dol_loginmesg\"]=$user->error;\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg=$user->error;\n            }\n\n            // Call triggers\n            include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n            $interface=new Interfaces($db);\n            $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n            if ($result < 0) {\n                $error++;\n            }\n            // End call triggers\n\n\t        // Hooks on failed login\n\t        $action='';\n\t        $hookmanager->initHooks(array('login'));\n\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t        if ($reshook < 0) $error++;\n\n\t        $paramsurl=array();\n\t        if (GETPOST('textbrowser','int')) $paramsurl[]='textbrowser='.GETPOST('textbrowser','int');\n\t        if (GETPOST('nojs','int'))        $paramsurl[]='nojs='.GETPOST('nojs','int');\n\t        if (GETPOST('lang','aZ09'))       $paramsurl[]='lang='.GETPOST('lang','aZ09');\n            header('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl)?'?'.implode('&',$paramsurl):''));\n            exit;\n        }\n    }\n    else\n    {\n        // We are already into an authenticated session\n        $login=$_SESSION[\"dol_login\"];\n        $entity=$_SESSION[\"dol_entity\"];\n        dol_syslog(\"- This is an already logged session. _SESSION['dol_login']=\".$login.\" _SESSION['dol_entity']=\".$entity, LOG_DEBUG);\n\n        $resultFetchUser=$user->fetch('', $login, '', 1, ($entity > 0 ? $entity : -1));\n        if ($resultFetchUser <= 0)\n        {\n            // Account has been removed after login\n            dol_syslog(\"Can't load user even if session logged. _SESSION['dol_login']=\".$login, LOG_WARNING);\n            session_destroy();\n            session_name($sessionname);\n            session_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n            session_start();    // Fixing the bug of register_globals here is useless since session is empty\n\n            if ($resultFetchUser == 0)\n            {\n                $langs->load('main');\n                $langs->load('errors');\n\n                $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n            }\n            if ($resultFetchUser < 0)\n            {\n                $_SESSION[\"dol_loginmesg\"]=$user->error;\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg=$user->error;\n            }\n\n            // TODO @deprecated Remove this. Hook must be used, not this trigger.\n            // Call triggers\n            include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n            $interface=new Interfaces($db);\n            $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n            if ($result < 0) {\n                $error++;\n            }\n            // End call triggers\n\n\t        // Hooks on failed login\n\t        $action='';\n\t        $hookmanager->initHooks(array('login'));\n\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t        if ($reshook < 0) $error++;\n\n\t        $paramsurl=array();\n\t        if (GETPOST('textbrowser','int')) $paramsurl[]='textbrowser='.GETPOST('textbrowser','int');\n\t        if (GETPOST('nojs','int'))        $paramsurl[]='nojs='.GETPOST('nojs','int');\n\t        if (GETPOST('lang','aZ09'))       $paramsurl[]='lang='.GETPOST('lang','aZ09');\n            header('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl)?'?'.implode('&',$paramsurl):''));\n            exit;\n        }\n        else\n\t\t{\n\t       // Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n\t       $hookmanager->initHooks(array('main'));\n\n\t       // Code for search criteria persistence.\n\t       if (! empty($_GET['save_lastsearch_values']))    // Keep $_GET here\n\t       {\n               $relativepathstring = preg_replace('/\\?.*$/','',$_SERVER[\"HTTP_REFERER\"]);\n               $relativepathstring = preg_replace('/^https?:\\/\\/[^\\/]*/','',$relativepathstring);     // Get full path except host server\n               // Clean $relativepathstring\n   \t           if (constant('DOL_URL_ROOT')) $relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'),'/').'/', '', $relativepathstring);\n               $relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n               $relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n               //var_dump($relativepathstring);\n\n               if (! empty($_SESSION['lastsearch_values_tmp_'.$relativepathstring]))\n               {\n                   $_SESSION['lastsearch_values_'.$relativepathstring]=$_SESSION['lastsearch_values_tmp_'.$relativepathstring];\n                   unset($_SESSION['lastsearch_values_tmp_'.$relativepathstring]);\n               }\n\t       }\n\n\t       $action = '';\n\t       $reshook = $hookmanager->executeHooks('updateSession', array(), $user, $action);\n\t       if ($reshook < 0) {\n\t\t       setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\t       }\n        }\n    }\n\n    // Is it a new session that has started ?\n    // If we are here, this means authentication was successfull.\n    if (! isset($_SESSION[\"dol_login\"]))\n    {\n        // New session for this login has started.\n    \t$error=0;\n\n    \t// Store value into session (values always stored)\n        $_SESSION[\"dol_login\"]=$user->login;\n        $_SESSION[\"dol_authmode\"]=isset($dol_authmode)?$dol_authmode:'';\n        $_SESSION[\"dol_tz\"]=isset($dol_tz)?$dol_tz:'';\n        $_SESSION[\"dol_tz_string\"]=isset($dol_tz_string)?$dol_tz_string:'';\n        $_SESSION[\"dol_dst\"]=isset($dol_dst)?$dol_dst:'';\n        $_SESSION[\"dol_dst_observed\"]=isset($dol_dst_observed)?$dol_dst_observed:'';\n        $_SESSION[\"dol_dst_first\"]=isset($dol_dst_first)?$dol_dst_first:'';\n        $_SESSION[\"dol_dst_second\"]=isset($dol_dst_second)?$dol_dst_second:'';\n        $_SESSION[\"dol_screenwidth\"]=isset($dol_screenwidth)?$dol_screenwidth:'';\n        $_SESSION[\"dol_screenheight\"]=isset($dol_screenheight)?$dol_screenheight:'';\n        $_SESSION[\"dol_company\"]=$conf->global->MAIN_INFO_SOCIETE_NOM;\n        $_SESSION[\"dol_entity\"]=$conf->entity;\n    \t// Store value into session (values stored only if defined)\n        if (! empty($dol_hide_topmenu))         $_SESSION['dol_hide_topmenu']=$dol_hide_topmenu;\n        if (! empty($dol_hide_leftmenu))        $_SESSION['dol_hide_leftmenu']=$dol_hide_leftmenu;\n        if (! empty($dol_optimize_smallscreen)) $_SESSION['dol_optimize_smallscreen']=$dol_optimize_smallscreen;\n        if (! empty($dol_no_mouse_hover))       $_SESSION['dol_no_mouse_hover']=$dol_no_mouse_hover;\n        if (! empty($dol_use_jmobile))          $_SESSION['dol_use_jmobile']=$dol_use_jmobile;\n\n        dol_syslog(\"This is a new started user session. _SESSION['dol_login']=\".$_SESSION[\"dol_login\"].\" Session id=\".session_id());\n\n        $db->begin();\n\n        $user->update_last_login_date();\n\n        $loginfo = 'TZ='.$_SESSION[\"dol_tz\"].';TZString='.$_SESSION[\"dol_tz_string\"].';Screen='.$_SESSION[\"dol_screenwidth\"].'x'.$_SESSION[\"dol_screenheight\"];\n\n        // TODO @deprecated Remove this. Hook must be used, not this trigger.\n        $user->trigger_mesg = $loginfo;\n        // Call triggers\n        include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n        $interface=new Interfaces($db);\n        $result=$interface->run_triggers('USER_LOGIN',$user,$user,$langs,$conf);\n        if ($result < 0) {\n            $error++;\n        }\n        // End call triggers\n\n        // Hooks on successfull login\n        $action='';\n        $hookmanager->initHooks(array('login'));\n        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginfo'=>$loginfo);\n        $reshook=$hookmanager->executeHooks('afterLogin',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n        if ($reshook < 0) $error++;\n\n        if ($error)\n        {\n            $db->rollback();\n            session_destroy();\n            dol_print_error($db,'Error in some hooks afterLogin (or old trigger USER_LOGIN)');\n            exit;\n        }\n        else\n\t\t{\n            $db->commit();\n        }\n\n        // Change landing page if defined.\n        $landingpage=(empty($user->conf->MAIN_LANDING_PAGE)?(empty($conf->global->MAIN_LANDING_PAGE)?'':$conf->global->MAIN_LANDING_PAGE):$user->conf->MAIN_LANDING_PAGE);\n        if (! empty($landingpage))    // Example: /index.php\n        {\n            $newpath=dol_buildpath($landingpage, 1);\n            if ($_SERVER[\"PHP_SELF\"] != $newpath)   // not already on landing page (avoid infinite loop)\n            {\n                header('Location: '.$newpath);\n                exit;\n            }\n        }\n    }\n\n\n    // If user admin, we force the rights-based modules\n    if ($user->admin)\n    {\n        $user->rights->user->user->lire=1;\n        $user->rights->user->user->creer=1;\n        $user->rights->user->user->password=1;\n        $user->rights->user->user->supprimer=1;\n        $user->rights->user->self->creer=1;\n        $user->rights->user->self->password=1;\n    }\n\n    /*\n     * Overwrite some configs globals (try to avoid this and have code to use instead $user->conf->xxx)\n     */\n\n    // Set liste_limit\n    if (isset($user->conf->MAIN_SIZE_LISTE_LIMIT))\t$conf->liste_limit = $user->conf->MAIN_SIZE_LISTE_LIMIT;\t// Can be 0\n    if (isset($user->conf->PRODUIT_LIMIT_SIZE))\t$conf->product->limit_size = $user->conf->PRODUIT_LIMIT_SIZE;\t// Can be 0\n\n    // Replace conf->css by personalized value if theme not forced\n    if (empty($conf->global->MAIN_FORCETHEME) && ! empty($user->conf->MAIN_THEME))\n    {\n        $conf->theme=$user->conf->MAIN_THEME;\n        $conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n    }\n}\n\n// Case forcing style from url\nif (GETPOST('theme','alpha'))\n{\n\t$conf->theme=GETPOST('theme','alpha',1);\n\t$conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n\n\n// Set javascript option\nif (! GETPOST('nojs','int'))   // If javascript was not disabled on URL\n{\n\tif (! empty($user->conf->MAIN_DISABLE_JAVASCRIPT))\n\t{\n\t\t$conf->use_javascript_ajax=! $user->conf->MAIN_DISABLE_JAVASCRIPT;\n\t}\n}\nelse $conf->use_javascript_ajax=0;\n// Set MAIN_OPTIMIZEFORTEXTBROWSER\nif (GETPOST('textbrowser','int') || (! empty($conf->browser->name) && $conf->browser->name == 'lynxlinks') || ! empty($user->conf->MAIN_OPTIMIZEFORTEXTBROWSER))   // If we must enable text browser\n{\n    $conf->global->MAIN_OPTIMIZEFORTEXTBROWSER=1;\n}\n\n// Set terminal output option according to conf->browser.\nif (GETPOST('dol_hide_leftmenu','int') || ! empty($_SESSION['dol_hide_leftmenu']))               $conf->dol_hide_leftmenu=1;\nif (GETPOST('dol_hide_topmenu','int') || ! empty($_SESSION['dol_hide_topmenu']))                 $conf->dol_hide_topmenu=1;\nif (GETPOST('dol_optimize_smallscreen','int') || ! empty($_SESSION['dol_optimize_smallscreen'])) $conf->dol_optimize_smallscreen=1;\nif (GETPOST('dol_no_mouse_hover','int') || ! empty($_SESSION['dol_no_mouse_hover']))             $conf->dol_no_mouse_hover=1;\nif (GETPOST('dol_use_jmobile','int') || ! empty($_SESSION['dol_use_jmobile']))                   $conf->dol_use_jmobile=1;\nif (! empty($conf->browser->layout) && $conf->browser->layout != 'classic') $conf->dol_no_mouse_hover=1;\nif ((! empty($conf->browser->layout) && $conf->browser->layout == 'phone')\n\t|| (! empty($_SESSION['dol_screenwidth']) && $_SESSION['dol_screenwidth'] < 400)\n\t|| (! empty($_SESSION['dol_screenheight']) && $_SESSION['dol_screenheight'] < 400)\n)\n{\n\t$conf->dol_optimize_smallscreen=1;\n}\n// If we force to use jmobile, then we reenable javascript\nif (! empty($conf->dol_use_jmobile)) $conf->use_javascript_ajax=1;\n// Replace themes bugged with jmobile with eldy\nif (! empty($conf->dol_use_jmobile) && in_array($conf->theme,array('bureau2crea','cameleo','amarok')))\n{\n\t$conf->theme='eldy';\n\t$conf->css  =  \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n//var_dump($conf->browser->phone);\n\nif (! defined('NOREQUIRETRAN'))\n{\n    if (! GETPOST('lang','aZ09'))\t// If language was not forced on URL\n    {\n        // If user has chosen its own language\n        if (! empty($user->conf->MAIN_LANG_DEFAULT))\n        {\n            // If different than current language\n            //print \">>>\".$langs->getDefaultLang().\"-\".$user->conf->MAIN_LANG_DEFAULT;\n            if ($langs->getDefaultLang() != $user->conf->MAIN_LANG_DEFAULT)\n            {\n                $langs->setDefaultLang($user->conf->MAIN_LANG_DEFAULT);\n            }\n        }\n    }\n}\n\nif (! defined('NOLOGIN'))\n{\n    // If the login is not recovered, it is identified with an account that does not exist.\n    // Hacking attempt?\n    if (! $user->login) accessforbidden();\n\n    // Check if user is active\n    if ($user->statut < 1)\n    {\n        // If not active, we refuse the user\n        $langs->load(\"other\");\n        dol_syslog(\"Authentification ko as login is disabled\");\n        accessforbidden($langs->trans(\"ErrorLoginDisabled\"));\n        exit;\n    }\n\n    // Load permissions\n    $user->getrights();\n}\n\n\ndol_syslog(\"--- Access to \".$_SERVER[\"PHP_SELF\"].' - action='.GETPOST('action','az09').', massaction='.GETPOST('massaction','az09'));\n//Another call for easy debugg\n//dol_syslog(\"Access to \".$_SERVER[\"PHP_SELF\"].' GET='.join(',',array_keys($_GET)).'->'.join(',',$_GET).' POST:'.join(',',array_keys($_POST)).'->'.join(',',$_POST));\n\n// Load main languages files\nif (! defined('NOREQUIRETRAN'))\n{\n    $langs->load(\"main\");\n    $langs->load(\"dict\");\n}\n\n// Define some constants used for style of arrays\n$bc=array(0=>'class=\"impair\"',1=>'class=\"pair\"');\n$bcdd=array(0=>'class=\"drag drop oddeven\"',1=>'class=\"drag drop oddeven\"');\n$bcnd=array(0=>'class=\"nodrag nodrop nohover\"',1=>'class=\"nodrag nodrop nohoverpair\"');\t\t// Used for tr to add new lines\n$bctag=array(0=>'class=\"impair tagtr\"',1=>'class=\"pair tagtr\"');\n\n// Define messages variables\n$mesg=''; $warning=''; $error=0;\n// deprecated, see setEventMessages() and dol_htmloutput_events()\n$mesgs=array(); $warnings=array(); $errors=array();\n\n// Constants used to defined number of lines in textarea\nif (empty($conf->browser->firefox))\n{\n    define('ROWS_1',1);\n    define('ROWS_2',2);\n    define('ROWS_3',3);\n    define('ROWS_4',4);\n    define('ROWS_5',5);\n    define('ROWS_6',6);\n    define('ROWS_7',7);\n    define('ROWS_8',8);\n    define('ROWS_9',9);\n}\nelse\n{\n    define('ROWS_1',0);\n    define('ROWS_2',1);\n    define('ROWS_3',2);\n    define('ROWS_4',3);\n    define('ROWS_5',4);\n    define('ROWS_6',5);\n    define('ROWS_7',6);\n    define('ROWS_8',7);\n    define('ROWS_9',8);\n}\n\n$heightforframes=48;\n\n// Init menu manager\nif (! defined('NOREQUIREMENU'))\n{\n\tif (empty($user->societe_id))    // If internal user or not defined\n\t{\n\t\t$conf->standard_menu=(empty($conf->global->MAIN_MENU_STANDARD_FORCED)?(empty($conf->global->MAIN_MENU_STANDARD)?'eldy_menu.php':$conf->global->MAIN_MENU_STANDARD):$conf->global->MAIN_MENU_STANDARD_FORCED);\n\t}\n\telse                        // If external user\n\t{\n\t\t$conf->standard_menu=(empty($conf->global->MAIN_MENUFRONT_STANDARD_FORCED)?(empty($conf->global->MAIN_MENUFRONT_STANDARD)?'eldy_menu.php':$conf->global->MAIN_MENUFRONT_STANDARD):$conf->global->MAIN_MENUFRONT_STANDARD_FORCED);\n\t}\n\n\t// Load the menu manager (only if not already done)\n\t$file_menu=$conf->standard_menu;\n\tif (GETPOST('menu','alpha')) $file_menu=GETPOST('menu','alpha');     // example: menu=eldy_menu.php\n\tif (! class_exists('MenuManager'))\n\t{\n\t\t$menufound=0;\n\t\t$dirmenus=array_merge(array(\"/core/menus/\"),(array) $conf->modules_parts['menus']);\n\t\tforeach($dirmenus as $dirmenu)\n\t\t{\n\t\t\t$menufound=dol_include_once($dirmenu.\"standard/\".$file_menu);\n\t\t\tif (class_exists('MenuManager')) break;\n\t\t}\n\t\tif (! class_exists('MenuManager'))\t// If failed to include, we try with standard eldy_menu.php\n\t\t{\n\t\t\tdol_syslog(\"You define a menu manager '\".$file_menu.\"' that can not be loaded.\", LOG_WARNING);\n\t\t\t$file_menu='eldy_menu.php';\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.\"/core/menus/standard/\".$file_menu;\n\t\t}\n\t}\n\t$menumanager = new MenuManager($db, empty($user->societe_id)?0:1);\n\t$menumanager->loadMenu();\n}\n\n\n\n// Functions\n\nif (! function_exists(\"llxHeader\"))\n{\n    /**\n     *\tShow HTML header HTML + BODY + Top menu + left menu + DIV\n     *\n     * @param \tstring \t$head\t\t\t\tOptionnal head lines\n     * @param \tstring \t$title\t\t\t\tHTML title\n     * @param\tstring\t$help_url\t\t\tUrl links to help page\n     * \t\t                            \tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n     *                                  \tFor other external page: http://server/url\n     * @param\tstring\t$target\t\t\t\tTarget to use on links\n     * @param \tint    \t$disablejs\t\t\tMore content into html header\n     * @param \tint    \t$disablehead\t\tMore content into html header\n     * @param \tarray  \t$arrayofjs\t\t\tArray of complementary js files\n     * @param \tarray  \t$arrayofcss\t\t\tArray of complementary css files\n     * @param\tstring\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n     * @param   string  $morecssonbody      More CSS on body tag.\n     * @return\tvoid\n     */\n\tfunction llxHeader($head='', $title='', $help_url='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='', $morecssonbody='')\n\t{\n\t    global $conf;\n\n\t    // html header\n\t\ttop_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\n\n        print '<body id=\"mainbody\"'.($morecssonbody?' class=\"'.$morecssonbody.'\"':'').'>' . \"\\n\";\n\n\t\t// top menu and left menu area\n\t\tif (empty($conf->dol_hide_topmenu))\n\t\t{\n\t\t\ttop_menu($head, $title, $target, $disablejs, $disablehead, $arrayofjs, $arrayofcss, $morequerystring, $help_url);\n\t\t}\n\n\t\tif (empty($conf->dol_hide_leftmenu))\n\t\t{\n\t\t\tleft_menu('', $help_url, '', '', 1, $title, 1);\n\t\t}\n\n\t\t// main area\n\t\tmain_area($title);\n\t}\n}\n\n\n/**\n *  Show HTTP header\n *\n *  @param  string  $contenttype    Content type. For example, 'text/html'\n *  @return\tvoid\n */\nfunction top_httphead($contenttype='text/html')\n{\n    global $conf;\n\n    if ($contenttype == 'text/html' ) header(\"Content-Type: text/html; charset=\".$conf->file->character_set_client);\n    else header(\"Content-Type: \".$contenttype);\n    // Security options\n    header(\"X-Content-Type-Options: nosniff\");  // With the nosniff option, if the server says the content is text/html, the browser will render it as text/html (note that most browsers now force this option to on)\n    header(\"X-Frame-Options: SAMEORIGIN\");      // Frames allowed only if on same domain (stop some XSS attacks)\n    if (! empty($conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY))\n    {\n        // For example, to restrict script, object, frames or img to some domains\n        // script-src https://api.google.com https://anotherhost.com; object-src https://youtube.com; child-src https://youtube.com; img-src: https://static.example.com\n        // For example, to restrict everything to one domain, except object, ...\n        // default-src https://cdn.example.net; object-src 'none'\n        header(\"Content-Security-Policy: \".$conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY);\n    }\n\n\n    // On the fly GZIP compression for all pages (if browser support it). Must set the bit 3 of constant to 1.\n    /*if (isset($conf->global->MAIN_OPTIMIZE_SPEED) && ($conf->global->MAIN_OPTIMIZE_SPEED & 0x04)) {\n        ob_start(\"ob_gzhandler\");\n    }*/\n}\n\n/**\n * Ouput html header of a page.\n * This code is also duplicated into security2.lib.php::dol_loginfunction\n *\n * @param \tstring \t$head\t\t\t Optionnal head lines\n * @param \tstring \t$title\t\t\t HTML title\n * @param \tint    \t$disablejs\t\t Disable js output\n * @param \tint    \t$disablehead\t Disable head output\n * @param \tarray  \t$arrayofjs\t\t Array of complementary js files\n * @param \tarray  \t$arrayofcss\t\t Array of complementary css files\n * @param \tint    \t$disablejmobile\t Disable jmobile (No more used)\n * @param   int     $disablenofollow Disable no follow tag\n * @return\tvoid\n */\nfunction top_htmlhead($head, $title='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $disablejmobile=0, $disablenofollow=0)\n{\n    global $user, $conf, $langs, $db;\n\n    top_httphead();\n\n    if (empty($conf->css)) $conf->css = '/theme/eldy/style.css.php';\t// If not defined, eldy by default\n\n    if (! empty($conf->global->MAIN_ACTIVATE_HTML4)) {\n        $doctype = '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">';\n    }else {\n        $doctype = '<!doctype html>';\n    }\n    print $doctype.\"\\n\";\n    if (! empty($conf->global->MAIN_USE_CACHE_MANIFEST)) print '<html lang=\"'.substr($langs->defaultlang,0,2).'\" manifest=\"'.DOL_URL_ROOT.'/cache.manifest\">'.\"\\n\";\n    else print '<html lang=\"'.substr($langs->defaultlang,0,2).'\">'.\"\\n\";\n    //print '<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"fr\">'.\"\\n\";\n    if (empty($disablehead))\n    {\n        print \"<head>\\n\";\n\t\tif (GETPOST('dol_basehref','alpha')) print '<base href=\"'.dol_escape_htmltag(GETPOST('dol_basehref','alpha')).'\">'.\"\\n\";\n        // Displays meta\n        print '<meta name=\"robots\" content=\"noindex'.($disablenofollow?'':',nofollow').'\">'.\"\\n\";      \t\t\t\t// Do not index\n        print '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">';\t// Scale for mobile device\n        print '<meta name=\"author\" content=\"Dolibarr Development Team\">'.\"\\n\";\n        // Favicon\n\t\t$favicon=dol_buildpath('/theme/'.$conf->theme.'/img/favicon.ico',1);\n        if (! empty($conf->global->MAIN_FAVICON_URL)) $favicon=$conf->global->MAIN_FAVICON_URL;\n        if (empty($conf->dol_use_jmobile)) print '<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"'.$favicon.'\"/>'.\"\\n\";\t// Not required into an Android webview\n        //if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && ! GETPOST('textbrowser','int')) print '<link rel=\"top\" title=\"'.$langs->trans(\"Home\").'\" href=\"'.(DOL_URL_ROOT?DOL_URL_ROOT:'/').'\">'.\"\\n\";\n        if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && ! GETPOST('textbrowser','int')) print '<link rel=\"copyright\" title=\"GNU General Public License\" href=\"http://www.gnu.org/copyleft/gpl.html#SEC1\">'.\"\\n\";\n        if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && ! GETPOST('textbrowser','int')) print '<link rel=\"author\" title=\"Dolibarr Development Team\" href=\"https://www.dolibarr.org\">'.\"\\n\";\n\n        // Displays title\n        $appli=constant('DOL_APPLICATION_TITLE');\n        if (!empty($conf->global->MAIN_APPLICATION_TITLE)) $appli=$conf->global->MAIN_APPLICATION_TITLE;\n\n        if ($title && ! empty($conf->global->MAIN_HTML_TITLE) && preg_match('/noapp/',$conf->global->MAIN_HTML_TITLE)) print '<title>'.dol_htmlentities($title).'</title>';\n        else if ($title) print '<title>'.dol_htmlentities($appli.' - '.$title).'</title>';\n        else print \"<title>\".dol_htmlentities($appli).\"</title>\";\n        print \"\\n\";\n\n        //$ext='';\n        //if (! empty($conf->dol_use_jmobile)) $ext='version='.urlencode(DOL_VERSION);\n        $ext='version='.urlencode(DOL_VERSION);\n\n        if (GETPOST('version','int')) $ext='version='.GETPOST('version','int');\t// usefull to force no cache on css/js\n        if (GETPOST('testmenuhider','int') || ! empty($conf->global->MAIN_TESTMENUHIDER)) $ext.='&testmenuhider='.(GETPOST('testmenuhider','int')?GETPOST('testmenuhider','int'):$conf->global->MAIN_TESTMENUHIDER);\n\n        $themeparam='?lang='.$langs->defaultlang.'&amp;theme='.$conf->theme.(GETPOST('optioncss','aZ09')?'&amp;optioncss='.GETPOST('optioncss','aZ09',1):'').'&amp;userid='.$user->id.'&amp;entity='.$conf->entity;\n        $themeparam.=($ext?'&amp;'.$ext:'');\n        if (! empty($_SESSION['dol_resetcache'])) $themeparam.='&amp;dol_resetcache='.$_SESSION['dol_resetcache'];\n        if (GETPOST('dol_hide_topmenu','int'))           { $themeparam.='&amp;dol_hide_topmenu='.GETPOST('dol_hide_topmenu','int'); }\n        if (GETPOST('dol_hide_leftmenu','int'))          { $themeparam.='&amp;dol_hide_leftmenu='.GETPOST('dol_hide_leftmenu','int'); }\n        if (GETPOST('dol_optimize_smallscreen','int'))   { $themeparam.='&amp;dol_optimize_smallscreen='.GETPOST('dol_optimize_smallscreen','int'); }\n        if (GETPOST('dol_no_mouse_hover','int'))         { $themeparam.='&amp;dol_no_mouse_hover='.GETPOST('dol_no_mouse_hover','int'); }\n        if (GETPOST('dol_use_jmobile','int'))            { $themeparam.='&amp;dol_use_jmobile='.GETPOST('dol_use_jmobile','int'); $conf->dol_use_jmobile=GETPOST('dol_use_jmobile','int'); }\n\n        if (! defined('DISABLE_JQUERY') && ! $disablejs && $conf->use_javascript_ajax)\n        {\n            print '<!-- Includes CSS for JQuery (Ajax library) -->'.\"\\n\";\n            $jquerytheme = 'smoothness';\n            if (!empty($conf->global->MAIN_USE_JQUERY_THEME)) $jquerytheme = $conf->global->MAIN_USE_JQUERY_THEME;\n            if (constant('JS_JQUERY_UI')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.JS_JQUERY_UI.'css/'.$jquerytheme.'/jquery-ui.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";  // JQuery\n            else print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/css/'.$jquerytheme.'/jquery-ui.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";    // JQuery\n            if (! defined('DISABLE_JQUERY_TIPTIP')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tiptip/tipTip.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";                           // Tooltip\n            if (! defined('DISABLE_JQUERY_JNOTIFY')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify-alt.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";          // JNotify\n            /* Removed a old hidden problematic feature never used in Dolibarr. If an external module need datatable, the module must provide all lib it needs and manage version problems with other dolibarr components\n            if (! empty($conf->global->MAIN_USE_JQUERY_DATATABLES) || (defined('REQUIRE_JQUERY_DATATABLES') && constant('REQUIRE_JQUERY_DATATABLES')))     // jQuery datatables\n            {\n                print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/media/css/jquery.dataTables.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n                print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/css/buttons.dataTables.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n                print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/ColReorder/css/colReorder.dataTables.min.css'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }*/\n            if (! defined('DISABLE_SELECT2') && (! empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT')))     // jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\"...\n            {\n            \t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?constant('REQUIRE_JQUERY_MULTISELECT'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n            \tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/'.$tmpplugin.'.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n            }\n            // jQuery Timepicker\n            if (! empty($conf->global->MAIN_USE_JQUERY_TIMEPICKER) || defined('REQUIRE_JQUERY_TIMEPICKER'))\n            {\n            \tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/timepicker/jquery-ui-timepicker-addon.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n            }\n        }\n\n        if (! defined('DISABLE_FONT_AWSOME'))\n        {\n            print '<!-- Includes CSS for font awesome -->'.\"\\n\";\n            print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/theme/common/fontawesome/css/font-awesome.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n        }\n\n        print '<!-- Includes CSS for Dolibarr theme -->'.\"\\n\";\n        // Output style sheets (optioncss='print' or ''). Note: $conf->css looks like '/theme/eldy/style.css.php'\n        $themepath=dol_buildpath($conf->css,1);\n        $themesubdir='';\n        if (! empty($conf->modules_parts['theme']))\t// This slow down\n        {\n\t        foreach($conf->modules_parts['theme'] as $reldir)\n\t        {\n\t        \tif (file_exists(dol_buildpath($reldir.$conf->css, 0)))\n\t        \t{\n\t\t\t\t\t$themepath=dol_buildpath($reldir.$conf->css, 1);\n\t\t\t\t\t$themesubdir=$reldir;\n\t\t\t\t\tbreak;\n\t        \t}\n\t        }\n        }\n        //print 'themepath='.$themepath.' themeparam='.$themeparam;exit;\n        print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.$themepath.$themeparam.'\">'.\"\\n\";\n\t    if (! empty($conf->global->MAIN_FIX_FLASH_ON_CHROME)) print '<!-- Includes CSS that does not exists as a workaround of flash bug of chrome -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"filethatdoesnotexiststosolvechromeflashbug\">'.\"\\n\";\n\n        // CSS forced by modules (relative url starting with /)\n        if (! empty($conf->modules_parts['css']))\n        {\n        \t$arraycss=(array) $conf->modules_parts['css'];\n        \tforeach($arraycss as $modcss => $filescss)\n        \t{\n        \t\t$filescss=(array) $filescss;\t// To be sure filecss is an array\n        \t\tforeach($filescss as $cssfile)\n        \t\t{\n        \t\t\tif (empty($cssfile)) dol_syslog(\"Warning: module \".$modcss.\" declared a css path file into its descriptor that is empty.\", LOG_WARNING);\n        \t\t\t// cssfile is a relative path\n\t        \t\tprint '<!-- Includes CSS added by module '.$modcss. ' -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"'.dol_buildpath($cssfile,1);\n\t        \t\t// We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters, so browser cache is not used.\n\t        \t\tif (!preg_match('/\\.css$/i',$cssfile)) print $themeparam;\n\t        \t\tprint '\">'.\"\\n\";\n        \t\t}\n        \t}\n        }\n        // CSS forced by page in top_htmlhead call (relative url starting with /)\n        if (is_array($arrayofcss))\n        {\n            foreach($arrayofcss as $cssfile)\n            {\n            \tprint '<!-- Includes CSS added by page -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" title=\"default\" href=\"'.dol_buildpath($cssfile,1);\n                // We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters and browser cache is not used.\n                if (!preg_match('/\\.css$/i',$cssfile)) print $themeparam;\n                print '\">'.\"\\n\";\n            }\n        }\n\n        // Output standard javascript links\n        if (! defined('DISABLE_JQUERY') && ! $disablejs && ! empty($conf->use_javascript_ajax))\n        {\n            // JQuery. Must be before other includes\n            print '<!-- Includes JS for JQuery -->'.\"\\n\";\n            if (defined('JS_JQUERY') && constant('JS_JQUERY')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY.'jquery.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            else print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            if (! empty($conf->global->MAIN_FEATURES_LEVEL) && ! defined('JS_JQUERY_MIGRATE_DISABLED'))\n            {\n                if (defined('JS_JQUERY_MIGRATE') && constant('JS_JQUERY_MIGRATE')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_MIGRATE.'jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                else print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            if (defined('JS_JQUERY_UI') && constant('JS_JQUERY_UI')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_UI.'jquery-ui.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            else print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-ui.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            if (! defined('DISABLE_JQUERY_TABLEDND')) print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tablednd/jquery.tablednd.0.6.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            if (! defined('DISABLE_JQUERY_TIPTIP')) print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tiptip/jquery.tipTip.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            // jQuery jnotify\n            if (empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) && ! defined('DISABLE_JQUERY_JNOTIFY'))\n            {\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/jnotify.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            // jQuery blockUI\n            if (! empty($conf->global->MAIN_USE_JQUERY_BLOCKUI) || defined('REQUIRE_JQUERY_BLOCKUI'))\n            {\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/blockUI/jquery.blockUI.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            \tprint '<script type=\"text/javascript\">'.\"\\n\";\n            \tprint 'var indicatorBlockUI = \\''.DOL_URL_ROOT.\"/theme/\".$conf->theme.\"/img/working2.gif\".'\\';'.\"\\n\";\n            \tprint '</script>'.\"\\n\";\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/blockUI.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            // Flot\n            if (empty($conf->global->MAIN_DISABLE_JQUERY_FLOT) && ! defined('DISABLE_JQUERY_FLOT'))\n            {\n                if (constant('JS_JQUERY_FLOT'))\n                {\n                    print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.pie.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.stack.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                }\n                else\n                {\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.pie.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.stack.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                }\n            }\n            // jQuery jeditable\n            if (! empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && ! defined('DISABLE_JQUERY_JEDITABLE'))\n            {\n            \tprint '<!-- JS to manage editInPlace feature -->'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-datepicker.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-autocomplete.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\">'.\"\\n\";\n                print 'var urlSaveInPlace = \\''.DOL_URL_ROOT.'/core/ajax/saveinplace.php\\';'.\"\\n\";\n                print 'var urlLoadInPlace = \\''.DOL_URL_ROOT.'/core/ajax/loadinplace.php\\';'.\"\\n\";\n                print 'var tooltipInPlace = \\''.$langs->transnoentities('ClickToEdit').'\\';'.\"\\n\";\t// Added in title attribute of span\n                print 'var placeholderInPlace = \\'&nbsp;\\';'.\"\\n\";\t// If we put another string than $langs->trans(\"ClickToEdit\") here, nothing is shown. If we put empty string, there is error, Why ?\n                print 'var cancelInPlace = \\''.$langs->trans('Cancel').'\\';'.\"\\n\";\n                print 'var submitInPlace = \\''.$langs->trans('Ok').'\\';'.\"\\n\";\n                print 'var indicatorInPlace = \\'<img src=\"'.DOL_URL_ROOT.\"/theme/\".$conf->theme.\"/img/working.gif\".'\">\\';'.\"\\n\";\n                print 'var withInPlace = 300;';\t\t// width in pixel for default string edit\n                print '</script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/editinplace.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ckeditor.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            // jQuery DataTables\n            /* Removed a old hidden problematic feature never used in Dolibarr. If an external module need datatable, the module must provide all lib it needs and manage version problems with other dolibarr components\n            if (! empty($conf->global->MAIN_USE_JQUERY_DATATABLES) || (defined('REQUIRE_JQUERY_DATATABLES') && constant('REQUIRE_JQUERY_DATATABLES')))\n            {\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/media/js/jquery.dataTables.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/dataTables.buttons.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.colVis.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.html5.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.flash.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.print.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/ColReorder/js/dataTables.colReorder.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jszip/jszip.min.js\"></script>'.\"\\n\";\n            }*/\n            // jQuery Timepicker\n            if (! empty($conf->global->MAIN_USE_JQUERY_TIMEPICKER) || defined('REQUIRE_JQUERY_TIMEPICKER'))\n            {\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/timepicker/jquery-ui-timepicker-addon.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/timepicker.js.php?lang='.$langs->defaultlang.($ext?'&amp;'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            if (! defined('DISABLE_SELECT2') && (! empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT')))     // jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\", ...\n            {\n            \t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?constant('REQUIRE_JQUERY_MULTISELECT'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/'.$tmpplugin.'.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/select2_locale.js.php?lang='.$langs->defaultlang.($ext?'&amp;'.$ext:'').'\"></script>'.\"\\n\";\n            }\n        }\n\n        if (! $disablejs && ! empty($conf->use_javascript_ajax))\n        {\n            // CKEditor\n            if (! empty($conf->fckeditor->enabled) && (empty($conf->global->FCKEDITOR_EDITORNAME) || $conf->global->FCKEDITOR_EDITORNAME == 'ckeditor') && ! defined('DISABLE_CKEDITOR'))\n            {\n                print '<!-- Includes JS for CKEditor -->'.\"\\n\";\n                $pathckeditor = DOL_URL_ROOT . '/includes/ckeditor/ckeditor/';\n                $jsckeditor='ckeditor.js';\n                if (constant('JS_CKEDITOR'))\t// To use external ckeditor 4 js lib\n                {\n                \t$pathckeditor=constant('JS_CKEDITOR');\n                }\n                print '<script type=\"text/javascript\">';\n                print 'var CKEDITOR_BASEPATH = \\''.$pathckeditor.'\\';'.\"\\n\";\n                print 'var ckeditorConfig = \\''.dol_buildpath($themesubdir.'/theme/'.$conf->theme.'/ckeditor/config.js'.($ext?'?'.$ext:''),1).'\\';'.\"\\n\";\t\t// $themesubdir='' in standard usage\n                print 'var ckeditorFilebrowserBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n                print 'var ckeditorFilebrowserImageBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Type=Image&Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n                print '</script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.$pathckeditor.$jsckeditor.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n\n            // Browser notifications\n            if (! defined('DISABLE_BROWSER_NOTIF'))\n            {\n                $enablebrowsernotif=false;\n                if (! empty($conf->agenda->enabled) && ! empty($conf->global->AGENDA_NOTIFICATION)) $enablebrowsernotif=true;\n                if ($conf->browser->layout == 'phone') $enablebrowsernotif=false;\n                if ($enablebrowsernotif)\n                {\n                    print '<!-- Includes JS of Dolibarr (brwoser layout = '.$conf->browser->layout.')-->'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/lib_notification.js.php'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                }\n            }\n\n            // Global js function\n            print '<!-- Includes JS of Dolibarr -->'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/lib_head.js.php'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\n            // Add datepicker default options\n            if (! defined('DISABLE_DATE_PICKER'))\n            {\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/datepicker.js.php'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n\n            // JS forced by modules (relative url starting with /)\n            if (! empty($conf->modules_parts['js']))\t\t// $conf->modules_parts['js'] is array('module'=>array('file1','file2'))\n        \t{\n        \t\t$arrayjs=(array) $conf->modules_parts['js'];\n\t            foreach($arrayjs as $modjs => $filesjs)\n\t            {\n        \t\t\t$filesjs=(array) $filesjs;\t// To be sure filejs is an array\n\t\t            foreach($filesjs as $jsfile)\n\t\t            {\n\t    \t    \t\t// jsfile is a relative path\n\t        \t    \tprint '<!-- Include JS added by module '.$modjs. '-->'.\"\\n\".'<script type=\"text/javascript\" src=\"'.dol_buildpath($jsfile,1).'\"></script>'.\"\\n\";\n\t\t            }\n\t            }\n        \t}\n            // JS forced by page in top_htmlhead (relative url starting with /)\n            if (is_array($arrayofjs))\n            {\n                print '<!-- Includes JS added by page -->'.\"\\n\";\n                foreach($arrayofjs as $jsfile)\n                {\n                    if (preg_match('/^http/i',$jsfile))\n                    {\n                        print '<script type=\"text/javascript\" src=\"'.$jsfile.'\"></script>'.\"\\n\";\n                    }\n                    else\n                    {\n                        if (! preg_match('/^\\//',$jsfile)) $jsfile='/'.$jsfile;\t// For backward compatibility\n                        print '<script type=\"text/javascript\" src=\"'.dol_buildpath($jsfile,1).'\"></script>'.\"\\n\";\n                    }\n                }\n            }\n        }\n\n        if (! empty($head)) print $head.\"\\n\";\n        if (! empty($conf->global->MAIN_HTML_HEADER)) print $conf->global->MAIN_HTML_HEADER.\"\\n\";\n\n        print \"</head>\\n\\n\";\n    }\n\n    $conf->headerdone=1;\t// To tell header was output\n}\n\n\n/**\n *  Show an HTML header + a BODY + The top menu bar\n *\n *  @param      string\t$head    \t\t\tLines in the HEAD\n *  @param      string\t$title   \t\t\tTitle of web page\n *  @param      string\t$target  \t\t\tTarget to use in menu links (Example: '' or '_top')\n *\t@param\t\tint\t\t$disablejs\t\t\tDo not output links to js (Ex: qd fonction utilisee par sous formulaire Ajax)\n *\t@param\t\tint\t\t$disablehead\t\tDo not output head section\n *\t@param\t\tarray\t$arrayofjs\t\t\tArray of js files to add in header\n *\t@param\t\tarray\t$arrayofcss\t\t\tArray of css files to add in header\n *  @param\t\tstring\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n *  @param      string\t$helppagename    \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                Syntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t                   For other external page: http://server/url\n *  @return\t\tvoid\n */\nfunction top_menu($head, $title='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='', $helppagename='')\n{\n    global $user, $conf, $langs, $db;\n    global $dolibarr_main_authentication, $dolibarr_main_demo;\n    global $hookmanager,$menumanager;\n\n    $searchform='';\n    $bookmarks='';\n\n    // Instantiate hooks of thirdparty module\n    $hookmanager->initHooks(array('toprightmenu'));\n\n    $toprightmenu='';\n\n    // For backward compatibility with old modules\n    if (empty($conf->headerdone))\n    {\n        top_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\n        print '<body id=\"mainbody\">';\n    }\n\n    /*\n     * Top menu\n     */\n    if (empty($conf->dol_hide_topmenu) && (! defined('NOREQUIREMENU') || ! constant('NOREQUIREMENU')))\n    {\n        print \"\\n\".'<!-- Start top horizontal -->'.\"\\n\";\n\n        print '<div class=\"side-nav-vert\"><div id=\"id-top\">';\n\n\t    // Show menu entries\n    \tprint '<div id=\"tmenu_tooltip'.(empty($conf->global->MAIN_MENU_INVERT)?'':'invert').'\" class=\"tmenu\">'.\"\\n\";\n    \t$menumanager->atarget=$target;\n\t    $menumanager->showmenu('top', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks));      // This contains a \\n\n\t    print \"</div>\\n\";\n\n\t    // Define link to login card\n        $appli=constant('DOL_APPLICATION_TITLE');\n\t    if (! empty($conf->global->MAIN_APPLICATION_TITLE))\n\t    {\n\t    \t$appli=$conf->global->MAIN_APPLICATION_TITLE;\n\t    \tif (preg_match('/\\d\\.\\d/', $appli))\n\t    \t{\n\t\t\t\tif (! preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) $appli.=\" (\".DOL_VERSION.\")\";\t// If new title contains a version that is different than core\n\t    \t}\n\t    \telse $appli.=\" \".DOL_VERSION;\n\t    }\n\t    else $appli.=\" \".DOL_VERSION;\n\n\t    if (! empty($conf->global->MAIN_FEATURES_LEVEL)) $appli.=\"<br>\".$langs->trans(\"LevelOfFeature\").': '.$conf->global->MAIN_FEATURES_LEVEL;\n\n\t    $logouttext='';\n\t    if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER))\n\t    {\n    \t    //$logouthtmltext=$appli.'<br>';\n    \t    if ($_SESSION[\"dol_authmode\"] != 'forceuser' && $_SESSION[\"dol_authmode\"] != 'http')\n    \t    {\n    \t    \t$logouthtmltext.=$langs->trans(\"Logout\").'<br>';\n\n    \t    \t$logouttext .='<a href=\"'.DOL_URL_ROOT.'/user/logout.php\">';\n    \t        //$logouttext .= img_picto($langs->trans('Logout').\":\".$langs->trans('Logout'), 'logout_top.png', 'class=\"login\"', 0, 0, 1);\n    \t    \t$logouttext .='<span class=\"fa fa-sign-out atoplogin\"></span>';\n    \t        $logouttext .='</a>';\n    \t    }\n    \t    else\n    \t    {\n    \t    \t$logouthtmltext.=$langs->trans(\"NoLogoutProcessWithAuthMode\",$_SESSION[\"dol_authmode\"]);\n    \t        $logouttext .= img_picto($langs->trans('Logout').\":\".$langs->trans('Logout'), 'logout_top.png', 'class=\"login\"', 0, 0, 1);\n    \t    }\n\t    }\n\n\t    print '<div class=\"login_block\">'.\"\\n\";\n\n\t    // Add login user link\n\t    $toprightmenu.='<div class=\"login_block_user\">';\n\n\t    // Login name with photo and tooltip\n\t\t$mode=-1;\n\t    $toprightmenu.='<div class=\"inline-block nowrap\"><div class=\"inline-block login_block_elem login_block_elem_name\" style=\"padding: 0px;\">';\n        $toprightmenu.=$user->getNomUrl($mode, '', true, 0, 11, 0, ($user->firstname ? 'firstname' : -1),'atoplogin');\n        $toprightmenu.='</div></div>';\n\n\t\t$toprightmenu.='</div>';\n\n\t    $toprightmenu.='<div class=\"login_block_other\">';\n\n\t\t// Execute hook printTopRightMenu (hooks should output string like '<div class=\"login\"><a href=\"\">mylink</a></div>')\n\t    $parameters=array();\n\t    $result=$hookmanager->executeHooks('printTopRightMenu',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t\tif (is_numeric($result))\n\t\t{\n\t\t\tif (empty($result)) $toprightmenu.=$hookmanager->resPrint;\t\t// add\n\t\t\telse  $toprightmenu=$hookmanager->resPrint;\t\t\t\t\t\t// replace\n\t\t}\n\t\telse $toprightmenu.=$result;\t// For backward compatibility\n\n    \t// Link to module builder\n\t    if (! empty($conf->modulebuilder->enabled))\n\t    {\n\t        $text ='<a href=\"'.DOL_URL_ROOT.'/modulebuilder/index.php?mainmenu=home&leftmenu=admintools\" target=\"_modulebuilder\">';\n\t        //$text.= img_picto(\":\".$langs->trans(\"ModuleBuilder\"), 'printer_top.png', 'class=\"printer\"');\n\t        $text.='<span class=\"fa fa-bug atoplogin\"></span>';\n\t        $text.='</a>';\n\t        $toprightmenu.=@Form::textwithtooltip('',$langs->trans(\"ModuleBuilder\"),2,1,$text,'login_block_elem',2);\n\t    }\n\n\t\t// Link to print main content area\n\t    if (empty($conf->global->MAIN_PRINT_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && empty($conf->browser->phone))\n\t    {\n\t        $qs=dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]);\n\n\t        if (is_array($_POST))\n\t        {\n    \t\t\tforeach($_POST as $key=>$value) {\n    \t\t\t\tif ($key!=='action' && !is_array($value)) $qs.='&'.$key.'='.urlencode($value);\n    \t\t\t}\n\t        }\n\t\t\t$qs.=(($qs && $morequerystring)?'&':'').$morequerystring;\n\t        $text ='<a href=\"'.dol_escape_htmltag($_SERVER[\"PHP_SELF\"]).'?'.$qs.($qs?'&':'').'optioncss=print\" target=\"_blank\">';\n\t        //$text.= img_picto(\":\".$langs->trans(\"PrintContentArea\"), 'printer_top.png', 'class=\"printer\"');\n\t        $text.='<span class=\"fa fa-print atoplogin\"></span>';\n\t        $text.='</a>';\n\t        $toprightmenu.=@Form::textwithtooltip('',$langs->trans(\"PrintContentArea\"),2,1,$text,'login_block_elem',2);\n\t    }\n\n\t    // Link to Dolibarr wiki pages\n\t    if (empty($conf->global->MAIN_HELP_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER))\n\t    {\n\t        $langs->load(\"help\");\n\n\t        $helpbaseurl='';\n\t        $helppage='';\n\t        $mode='';\n\n\t        if (empty($helppagename)) $helppagename='EN:User_documentation|FR:Documentation_utilisateur|ES:Documentaci\u00f3n_usuarios';\n\n\t        // Get helpbaseurl, helppage and mode from helppagename and langs\n\t        $arrayres=getHelpParamFor($helppagename,$langs);\n\t        $helpbaseurl=$arrayres['helpbaseurl'];\n\t        $helppage=$arrayres['helppage'];\n\t        $mode=$arrayres['mode'];\n\n\t        // Link to help pages\n\t        if ($helpbaseurl && $helppage)\n\t        {\n\t            $text='';\n\t            $title=$appli.'<br>';\n\t            $title.=$langs->trans($mode == 'wiki' ? 'GoToWikiHelpPage': 'GoToHelpPage');\n\t            if ($mode == 'wiki') $title.=' - '.$langs->trans(\"PageWiki\").' &quot;'.dol_escape_htmltag(strtr($helppage,'_',' ')).'&quot;';\n\t            $text.='<a class=\"help\" target=\"_blank\" href=\"';\n\t            if ($mode == 'wiki') $text.=sprintf($helpbaseurl,urlencode(html_entity_decode($helppage)));\n\t            else $text.=sprintf($helpbaseurl,$helppage);\n\t            $text.='\">';\n\t            //$text.=img_picto('', 'helpdoc_top').' ';\n\t            $text.='<span class=\"fa fa-question-circle atoplogin\"></span>';\n\t            //$toprightmenu.=$langs->trans($mode == 'wiki' ? 'OnlineHelp': 'Help');\n\t            //if ($mode == 'wiki') $text.=' ('.dol_trunc(strtr($helppage,'_',' '),8).')';\n\t            $text.='</a>';\n\t            //$toprightmenu.='</div>'.\"\\n\";\n\t            $toprightmenu.=@Form::textwithtooltip('',$title,2,1,$text,'login_block_elem',2);\n\t        }\n\t    }\n\n\t\t// Logout link\n\t    $toprightmenu.=@Form::textwithtooltip('',$logouthtmltext,2,1,$logouttext,'login_block_elem',2);\n\n\t    $toprightmenu.='</div>';\n\n\t    print $toprightmenu;\n\n\t    print \"</div>\\n\";\n\t\tprint '</div></div>';\n\n\t    //unset($form);\n\n\t\tprint '<div style=\"clear: both;\"></div>';\n        print \"<!-- End top horizontal menu -->\\n\\n\";\n    }\n\n    if (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) print '<!-- Begin div id-container --><div id=\"id-container\" class=\"id-container'.($morecss?' '.$morecss:'').'\">';\n}\n\n\n/**\n *  Show left menu bar\n *\n *  @param  array\t$menu_array_before \t       \tTable of menu entries to show before entries of menu handler. This param is deprectaed and must be provided to ''.\n *  @param  string\t$helppagename    \t       \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                   \tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t         \t\t       For other external page: http://server/url\n *  @param  string\t$notused             \t\tDeprecated. Used in past to add content into left menu. Hooks can be used now.\n *  @param  array\t$menu_array_after           Table of menu entries to show after entries of menu handler\n *  @param  int\t\t$leftmenuwithoutmainarea    Must be set to 1. 0 by default for backward compatibility with old modules.\n *  @param  string\t$title                      Title of web page\n *  @param  string  $acceptdelayedhtml          1 if caller request to have html delayed content not returned but saved into global $delayedhtmlcontent (so caller can show it at end of page to avoid flash FOUC effect)\n *  @return\tvoid\n */\nfunction left_menu($menu_array_before, $helppagename='', $notused='', $menu_array_after='', $leftmenuwithoutmainarea=0, $title='', $acceptdelayedhtml=0)\n{\n    global $user, $conf, $langs, $db, $form;\n    global $hookmanager, $menumanager;\n\n    $searchform='';\n    $bookmarks='';\n\n    if (! empty($menu_array_before)) dol_syslog(\"Deprecated parameter menu_array_before was used when calling main::left_menu function. Menu entries of module should now be defined into module descriptor and not provided when calling left_menu.\", LOG_WARNING);\n\n    if (empty($conf->dol_hide_leftmenu) && (! defined('NOREQUIREMENU') || ! constant('NOREQUIREMENU')))\n    {\n\t    // Instantiate hooks of thirdparty module\n\t    $hookmanager->initHooks(array('searchform','leftblock'));\n\n\t\tprint \"\\n\".'<!-- Begin side-nav id-left -->'.\"\\n\".'<div class=\"side-nav\"><div id=\"id-left\">'.\"\\n\";\n\n\t    print \"\\n\";\n\n\t    if ($conf->use_javascript_ajax && $conf->browser->layout != 'phone' && empty($conf->global->MAIN_USE_OLD_SEARCH_FORM))\n\t    {\n    \t    if (! is_object($form)) $form=new Form($db);\n    \t    $selected=-1;\n            $searchform.=$form->selectArrayAjax('searchselectcombo', DOL_URL_ROOT.'/core/ajax/selectsearchbox.php', $selected, '', '', 0, 1, 'vmenusearchselectcombo', 1, $langs->trans(\"Search\"), 1);\n\t    }\n\t    else\n\t    {\n    \t    // Define $searchform\n    \t    if ((( ! empty($conf->societe->enabled) && (empty($conf->global->SOCIETE_DISABLE_PROSPECTS) || empty($conf->global->SOCIETE_DISABLE_CUSTOMERS))) || ! empty($conf->fournisseur->enabled)) && $user->rights->societe->lire)\n    \t    {\n    \t        $langs->load(\"companies\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/societe/list.php', DOL_URL_ROOT.'/societe/list.php', $langs->trans(\"ThirdParties\"), 'maxwidth100', 'sall', 'T', 'searchleftt', img_object('','company'));\n    \t    }\n\n    \t    if (! empty($conf->societe->enabled) && $user->rights->societe->lire)\n    \t    {\n    \t        $langs->load(\"companies\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/contact/list.php', DOL_URL_ROOT.'/contact/list.php', $langs->trans(\"Contacts\"), 'maxwidth100', 'sall', 'A', 'searchleftc', img_object('','contact'));\n    \t    }\n\n    \t    if (((! empty($conf->product->enabled) && $user->rights->produit->lire) || (! empty($conf->service->enabled) && $user->rights->service->lire))\n    \t    )\n    \t    {\n    \t        $langs->load(\"products\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/product/list.php', DOL_URL_ROOT.'/product/list.php', $langs->trans(\"Products\").\"/\".$langs->trans(\"Services\"), 'maxwidth100', 'sall', 'P', 'searchleftp', img_object('','product'));\n    \t    }\n\n            if (! empty($conf->projet->enabled) && $user->rights->projet->lire)\n    \t    {\n    \t        $langs->load(\"projects\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/projet/list.php', DOL_URL_ROOT.'/projet/list.php', $langs->trans(\"Projects\"), 'maxwidth100', 'search_all', 'Q', 'searchleftproj', img_object('','projectpub'));\n    \t    }\n\n    \t    if (! empty($conf->adherent->enabled) && $user->rights->adherent->lire)\n    \t    {\n    \t        $langs->load(\"members\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/adherents/list.php', DOL_URL_ROOT.'/adherents/list.php', $langs->trans(\"Members\"), 'maxwidth100', 'sall', 'M', 'searchleftm', img_object('','user'));\n    \t    }\n\n    \t\tif (! empty($conf->user->enabled) && $user->rights->user->user->lire)\n    \t    {\n    \t        $langs->load(\"users\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/user/list.php', DOL_URL_ROOT.'/user/list.php', $langs->trans(\"Users\"), 'maxwidth100', 'sall', 'M', 'searchleftuser', img_object('','user'));\n    \t    }\n\t    }\n\n\t    // Execute hook printSearchForm\n\t    $parameters=array('searchform'=>$searchform);\n\t    $reshook=$hookmanager->executeHooks('printSearchForm',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t\tif (empty($reshook))\n\t\t{\n\t\t\t$searchform.=$hookmanager->resPrint;\n\t\t}\n\t\telse $searchform=$hookmanager->resPrint;\n\n\t\tif ($conf->use_javascript_ajax && $conf->browser->layout == 'phone')\n\t    {\n\t        $searchform='<div class=\"blockvmenuimpair blockvmenusearchphone\"><div id=\"divsearchforms1\"><a href=\"#\" alt=\"'.dol_escape_htmltag($langs->trans(\"ShowSearchFields\")).'\">'.$langs->trans(\"Search\").'...</a></div><div id=\"divsearchforms2\" style=\"display: none\">'.$searchform.'</div>';\n\t        $searchform.='<script type=\"text/javascript\">\n            \tjQuery(document).ready(function () {\n            \t\tjQuery(\"#divsearchforms1\").click(function(){\n\t                   jQuery(\"#divsearchforms2\").toggle();\n\t               });\n            \t});\n                </script>' . \"\\n\";\n\t        $searchform.='</div>';\n\t    }\n\n\t    // Define $bookmarks\n\t    if (! empty($conf->bookmark->enabled) && $user->rights->bookmark->lire)\n\t    {\n\t        include_once (DOL_DOCUMENT_ROOT.'/bookmarks/bookmarks.lib.php');\n\t        $langs->load(\"bookmarks\");\n\n\t        $bookmarks=printBookmarksList($db, $langs);\n\t    }\n\n\t    // Left column\n\t    print '<!-- Begin left menu -->'.\"\\n\";\n\n\t    print '<div class=\"vmenu\"'.(empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)?'':' title=\"Left menu\"').'>'.\"\\n\\n\";\n\n    \t// Show left menu with other forms\n\t    $menumanager->menu_array = $menu_array_before;\n    \t$menumanager->menu_array_after = $menu_array_after;\n\t    $menumanager->showmenu('left', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks)); // output menu_array and menu found in database\n\n        // Dolibarr version + help + bug report link\n\t\tprint \"\\n\";\n\t    print \"<!-- Begin Help Block-->\\n\";\n        print '<div id=\"blockvmenuhelp\" class=\"blockvmenuhelp\">'.\"\\n\";\n\n        // Version\n        if (empty($conf->global->MAIN_HIDE_VERSION))    // Version is already on help picto and on login page.\n        {\n            $doliurl='https://www.dolibarr.org';\n    \t\t//local communities\n    \t\tif (preg_match('/fr/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.fr';\n    \t\tif (preg_match('/es/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.es';\n    \t\tif (preg_match('/de/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.de';\n    \t\tif (preg_match('/it/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.it';\n    \t\tif (preg_match('/gr/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.gr';\n\n            $appli=constant('DOL_APPLICATION_TITLE');\n    \t    if (! empty($conf->global->MAIN_APPLICATION_TITLE))\n    \t    {\n    \t    \t$appli=$conf->global->MAIN_APPLICATION_TITLE; $doliurl='';\n    \t    \tif (preg_match('/\\d\\.\\d/', $appli))\n    \t    \t{\n    \t\t\t\tif (! preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) $appli.=\" (\".DOL_VERSION.\")\";\t// If new title contains a version that is different than core\n    \t    \t}\n    \t    \telse $appli.=\" \".DOL_VERSION;\n    \t    }\n    \t    else $appli.=\" \".DOL_VERSION;\n    \t    print '<div id=\"blockvmenuhelpapp\" class=\"blockvmenuhelp\">';\n    \t    if ($doliurl) print '<a class=\"help\" target=\"_blank\" href=\"'.$doliurl.'\">';\n    \t    else print '<span class=\"help\">';\n    \t    print $appli;\n    \t    if ($doliurl) print '</a>';\n    \t    else print '</span>';\n    \t    print '</div>'.\"\\n\";\n        }\n\n\t\t// Link to bugtrack\n\t\tif (! empty($conf->global->MAIN_BUGTRACK_ENABLELINK))\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\n\t\t\t$bugbaseurl = 'https://github.com/Dolibarr/dolibarr/issues/new';\n\t\t\t$bugbaseurl.= '?title=';\n\t\t\t$bugbaseurl.= urlencode(\"Bug: \");\n\t\t\t$bugbaseurl.= '&body=';\n\t\t\t// TODO use .github/ISSUE_TEMPLATE.md to generate?\n\t\t\t$bugbaseurl .= urlencode(\"# Bug\\n\");\n\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"## Environment\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Version**: \" . DOL_VERSION . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **OS**: \" . php_uname('s') . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Web server**: \" . $_SERVER[\"SERVER_SOFTWARE\"] . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **PHP**: \" . php_sapi_name() . ' ' . phpversion() . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Database**: \" . $db::LABEL . ' ' . $db->getVersion() . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **URL**: \" . $_SERVER[\"REQUEST_URI\"] . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"## Report\\n\");\n\t\t\tprint '<div id=\"blockvmenuhelpbugreport\" class=\"blockvmenuhelp\">';\n\t\t\tprint '<a class=\"help\" target=\"_blank\" href=\"'.$bugbaseurl.'\">'.$langs->trans(\"FindBug\").'</a>';\n\t\t\tprint '</div>';\n\t\t}\n\n        print \"</div>\\n\";\n        print \"<!-- End Help Block-->\\n\";\n        print \"\\n\";\n\n        print \"</div>\\n\";\n        print \"<!-- End left menu -->\\n\";\n        print \"\\n\";\n\n\t    // Execute hook printLeftBlock\n\t    $parameters=array();\n\t    $reshook=$hookmanager->executeHooks('printLeftBlock',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t    print $hookmanager->resPrint;\n\n\t    print '</div></div> <!-- End side-nav id-left -->';\t// End div id=\"side-nav\" div id=\"id-left\"\n    }\n\n    print \"\\n\";\n    print '<!-- Begin right area -->'.\"\\n\";\n\n    if (empty($leftmenuwithoutmainarea)) main_area($title);\n}\n\n\n/**\n *  Begin main area\n *\n *  @param\tstring\t$title\t\tTitle\n *  @return\tvoid\n */\nfunction main_area($title='')\n{\n    global $conf, $langs;\n\n\tif (empty($conf->dol_hide_leftmenu)) print '<div id=\"id-right\">';\n\n    print \"\\n\";\n\n    print '<!-- Begin div class=\"fiche\" -->'.\"\\n\".'<div class=\"fiche\">'.\"\\n\";\n\n    if (! empty($conf->global->MAIN_ONLY_LOGIN_ALLOWED)) print info_admin($langs->trans(\"WarningYouAreInMaintenanceMode\",$conf->global->MAIN_ONLY_LOGIN_ALLOWED));\n}\n\n\n/**\n *  Return helpbaseurl, helppage and mode\n *\n *  @param\tstring\t\t$helppagename\t\tPage name ('EN:xxx,ES:eee,FR:fff...' or 'http://localpage')\n *  @param  Translate\t$langs\t\t\t\tLanguage\n *  @return\tarray\t\tArray of help urls\n */\nfunction getHelpParamFor($helppagename,$langs)\n{\n\t$helpbaseurl='';\n\t$helppage='';\n\t$mode='';\n\n    if (preg_match('/^http/i',$helppagename))\n    {\n        // If complete URL\n        $helpbaseurl='%s';\n        $helppage=$helppagename;\n        $mode='local';\n    }\n    else\n    {\n        // If WIKI URL\n        if (preg_match('/^es/i',$langs->defaultlang))\n        {\n            $helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n            if (preg_match('/ES:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n        }\n        if (preg_match('/^fr/i',$langs->defaultlang))\n        {\n            $helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n            if (preg_match('/FR:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n        }\n        if (empty($helppage))\t// If help page not already found\n        {\n            $helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n            if (preg_match('/EN:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n        }\n        $mode='wiki';\n    }\n    return array('helpbaseurl'=>$helpbaseurl,'helppage'=>$helppage,'mode'=>$mode);\n}\n\n\n/**\n *  Show a search area\n *\n *  @param  string\t$urlaction          Url post\n *  @param  string\t$urlobject          Url of the link under the search box\n *  @param  string\t$title              Title search area\n *  @param  string\t$htmlmorecss        Add more css\n *  @param  string\t$htmlinputname      Field Name input form\n *  @param\tstring\t$accesskey\t\t\tAccesskey\n *  @param  string  $prefhtmlinputname  Complement for id to avoid multiple same id in the page\n *  @param\tstring\t$img\t\t\t\tImage to use\n *  @return\tstring\n */\nfunction printSearchForm($urlaction, $urlobject, $title, $htmlmorecss, $htmlinputname, $accesskey='', $prefhtmlinputname='',$img='')\n{\n    global $conf,$langs;\n\n    if (empty($htmlinputid)) {\n        $htmlinputid = $htmlinputname;\n    }\n\n    $ret='';\n    $ret.='<form action=\"'.$urlaction.'\" method=\"post\" class=\"searchform\">';\n\tif (empty($conf->global->MAIN_HTML5_PLACEHOLDER))\n\t{\n        $ret.='<div class=\"menu_titre menu_titre_search\"';\n    \tif (! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=' style=\"display: inline-block\"';\n    \t$ret.='>';\n    \t$ret.='<label for=\"'.$prefhtmlinputname.$htmlinputname.'\">';\n    \t$ret.='<a class=\"vsmenu\" href=\"'.$urlobject.'\">';\n       \tif ($img && ! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=$img;\n       \telse if ($img || $title) $ret.=$img.' '.$title;\n    \t$ret.='</a>';\n    \t$ret.='</label>';\n    \t$ret.='</div>';\n\t}\n    $ret.='<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    $ret.='<input type=\"hidden\" name=\"mode\" value=\"search\">';\n    $ret.='<input type=\"text\" class=\"flat '.$htmlmorecss.'\"';\n    if (! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=' style=\"text-indent: 22px; background-image: url(\\''.$img.'\\'); background-repeat: no-repeat; background-position: 3px;\"';\n    $ret.=($accesskey?' accesskey=\"'.$accesskey.'\"':'');\n    if (! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=' placeholder=\"'.strip_tags($title).'\"';\t\t// Will work only if MAIN_HTML5_PLACEHOLDER is set to 1\n    else $ret.=' title=\"'.$langs->trans(\"SearchOf\").''.strip_tags($title).'\"';\n    $ret.=' name=\"'.$htmlinputname.'\" id=\"'.$prefhtmlinputname.$htmlinputname.'\" />';\n    $ret.='<input type=\"submit\" class=\"button\" style=\"padding-top: 4px; padding-bottom: 4px; padding-left: 6px; padding-right: 6px\" value=\"'.$langs->trans(\"Go\").'\">';\n    $ret.=\"</form>\\n\";\n    return $ret;\n}\n\n\nif (! function_exists(\"llxFooter\"))\n{\n    /**\n     * Show HTML footer\n     * Close div /DIV class=fiche + /DIV id-right + /DIV id-container + /BODY + /HTML.\n     * If global var $delayedhtmlcontent was filled, we output it just before closing the body.\n     *\n     * @param\tstring\t$comment    A text to add as HTML comment into HTML generated page\n\t * @param\tstring\t$zone\t\t'private' (for private pages) or 'public' (for public pages)\n     * @return\tvoid\n     */\n    function llxFooter($comment='',$zone='private')\n    {\n        global $conf, $langs, $user, $object;\n        global $delayedhtmlcontent;\n\n        // Global html output events ($mesgs, $errors, $warnings)\n        dol_htmloutput_events();\n\n        // Code for search criteria persistence.\n        // Save $user->lastsearch_values if defined (define on list pages when a form field search_xxx exists)\n        if (is_object($user) && ! empty($user->lastsearch_values_tmp) && is_array($user->lastsearch_values_tmp))\n        {\n            // Clean data\n            foreach($user->lastsearch_values_tmp as $key => $val)\n            {\n                unset($_SESSION['lastsearch_values_tmp_'.$key]);\n                if (count($val))\n                {\n                    if (empty($val['sortfield'])) unset($val['sortfield']);\n                    if (empty($val['sortorder'])) unset($val['sortorder']);\n                    dol_syslog('Save lastsearch_values_tmp_'.$key.'='.json_encode($val, 0).\" (systematic recording of last search criteria)\");\n                    $_SESSION['lastsearch_values_tmp_'.$key]=json_encode($val);\n                    unset($_SESSION['lastsearch_values_'.$key]);\n                }\n            }\n        }\n\n        // Core error message\n        if (! empty($conf->global->MAIN_CORE_ERROR))\n        {\n            // Ajax version\n            if ($conf->use_javascript_ajax)\n            {\n                $title = img_warning().' '.$langs->trans('CoreErrorTitle');\n                print ajax_dialog($title, $langs->trans('CoreErrorMessage'));\n            }\n            // html version\n            else\n            {\n                $msg = img_warning().' '.$langs->trans('CoreErrorMessage');\n                print '<div class=\"error\">'.$msg.'</div>';\n            }\n\n            //define(\"MAIN_CORE_ERROR\",0);      // Constant was defined and we can't change value of a constant\n        }\n\n        print \"\\n\\n\";\n\n        print '</div> <!-- End div class=\"fiche\" -->'.\"\\n\"; // End div fiche\n\n\t\tif (empty($conf->dol_hide_leftmenu)) print '</div> <!-- End div id-right -->'; // End div id-right\n\n        print \"\\n\";\n        if ($comment) print '<!-- '.$comment.' -->'.\"\\n\";\n\n        printCommonFooter($zone);\n\n        if (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) print '</div> <!-- End div id-container -->'.\"\\n\";\t// End div container\n\n        if (! empty($delayedhtmlcontent)) print $delayedhtmlcontent;\n\n        // TODO Move this in lib_head.js.php\n\n        // Wrapper to show tooltips (html or onclick popup)\n        if (! empty($conf->use_javascript_ajax) && empty($conf->dol_no_mouse_hover))\n        {\n    \t\tprint \"\\n<!-- JS CODE TO ENABLE tipTip on all object with class classfortooltip -->\\n\";\n    \t\tprint '<script type=\"text/javascript\">\n            \tjQuery(document).ready(function () {\n            \t\tjQuery(\".classfortooltip\").tipTip({maxWidth: \"'.dol_size(($conf->browser->layout == 'phone' ? 400 : 700),'width').'px\", edgeOffset: 10, delay: 50, fadeIn: 50, fadeOut: 50});\n            \t\tjQuery(\".classfortooltiponclicktext\").dialog({ width: 500, autoOpen: false });\n            \t\tjQuery(\".classfortooltiponclick\").click(function () {\n            \t\t    console.log(\"We click on tooltip for element with dolid=\"+$(this).attr(\\'dolid\\'));\n            \t\t    if ($(this).attr(\\'dolid\\'))\n            \t\t    {\n                            obj=$(\"#idfortooltiponclick_\"+$(this).attr(\\'dolid\\'));\n            \t\t        obj.dialog(\"open\");\n            \t\t    }\n            \t\t});\n                });\n            </script>' . \"\\n\";\n        }\n\n        // Wrapper to manage document_preview\n        if (! empty($conf->use_javascript_ajax) && ($conf->browser->layout != 'phone'))\n        {\n            print \"\\n<!-- JS CODE TO ENABLE document_preview -->\\n\";\n            print '<script type=\"text/javascript\">\n                jQuery(document).ready(function () {\n\t\t\t        jQuery(\".documentpreview\").click(function () {\n            \t\t    console.log(\"We click on preview for element with href=\"+$(this).attr(\\'href\\')+\" mime=\"+$(this).attr(\\'mime\\'));\n            \t\t    document_preview($(this).attr(\\'href\\'), $(this).attr(\\'mime\\'), \\''.dol_escape_js($langs->transnoentities(\"Preview\")).'\\');\n                \t\treturn false;\n        \t\t\t});\n        \t\t});\n            </script>' . \"\\n\";\n        }\n\n        // Wrapper to manage dropdown\n        if (! empty($conf->use_javascript_ajax) && ! defined('JS_JQUERY_DISABLE_DROPDOWN'))\n        {\n            print \"\\n<!-- JS CODE TO ENABLE dropdown -->\\n\";\n            print '<script type=\"text/javascript\">\n                jQuery(document).ready(function () {\n                  $(\".dropdown dt a\").on(\\'click\\', function () {\n                      //console.log($(this).parent().parent().find(\\'dd ul\\'));\n                      $(this).parent().parent().find(\\'dd ul\\').slideToggle(\\'fast\\');\n                      // Note: Did not find a way to get exact height (value is update at exit) so i calculate a generic from nb of lines\n                      heigthofcontent = 21 * $(this).parent().parent().find(\\'dd div ul li\\').length;\n                      if (heigthofcontent > 300) heigthofcontent = 300; // limited by max-height on css .dropdown dd ul\n                      posbottom = $(this).parent().parent().find(\\'dd\\').offset().top + heigthofcontent + 8;\n                      //console.log(posbottom);\n                      var scrollBottom = $(window).scrollTop() + $(window).height();\n                      //console.log(scrollBottom);\n                      diffoutsidebottom = (posbottom - scrollBottom);\n                      console.log(\"heigthofcontent=\"+heigthofcontent+\", diffoutsidebottom (posbottom=\"+posbottom+\" - scrollBottom=\"+scrollBottom+\") = \"+diffoutsidebottom);\n                      if (diffoutsidebottom > 0)\n                      {\n                            pix = \"-\"+(diffoutsidebottom+8)+\"px\";\n                            console.log(\"We reposition top by \"+pix);\n                            $(this).parent().parent().find(\\'dd\\').css(\"top\", pix);\n                      }\n                      // $(\".dropdown dd ul\").slideToggle(\\'fast\\');\n                  });\n                  $(\".dropdowncloseonclick\").on(\\'click\\', function () {\n                     console.log(\"Link has class dropdowncloseonclick, so we close/hide the popup ul\");\n                     $(this).parent().parent().hide();\n                  });\n\n                  $(document).bind(\\'click\\', function (e) {\n                      var $clicked = $(e.target);\n                      if (!$clicked.parents().hasClass(\"dropdown\")) $(\".dropdown dd ul\").hide();\n                  });\n                });\n                </script>';\n        }\n\n        // Wrapper to add log when clicking on download or preview\n        if (! empty($conf->blockedlog->enabled) && is_object($object) && $object->id > 0 && $object->statut > 0)\n        {\n            if (in_array($object->element, array('facture')))       // Restrict for the moment to element 'facture'\n            {\n                print \"\\n<!-- JS CODE TO ENABLE log when making a download or a preview of a document -->\\n\";\n                ?>\n    \t\t\t<script type=\"text/javascript\">\n    \t\t\tjQuery(document).ready(function () {\n    \t\t\t\t$('a.documentpreview').click(function() {\n    \t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n    \t\t\t\t\t\t\t, {\n    \t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n    \t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n    \t\t\t\t\t\t\t\t, action:'DOC_PREVIEW'\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t);\n    \t\t\t\t});\n    \t\t\t\t$('a.documentdownload').click(function() {\n    \t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n    \t\t\t\t\t\t\t, {\n    \t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n    \t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n    \t\t\t\t\t\t\t\t, action:'DOC_DOWNLOAD'\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t);\n    \t\t\t\t});\n    \t\t\t});\n    \t\t\t</script>\n\t\t\t\t<?php\n    \t\t}\n       \t}\n\n\n\t\t// A div for the address popup\n\t\tprint \"\\n<!-- A div to allow dialog popup -->\\n\";\n\t\tprint '<div id=\"dialogforpopup\" style=\"display: none;\"></div>'.\"\\n\";\n\n        print \"</body>\\n\";\n        print \"</html>\\n\";\n    }\n}\n\n", "<?php\n/* Copyright (C) 2004-2005 Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2005-2016 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2005-2016 Regis Houssin        <regis.houssin@capnetworks.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n * or see http://www.gnu.org/\n */\n\n/**\n *\t\t\\file       htdocs/viewimage.php\n *\t\t\\brief      Wrapper to show images into Dolibarr screens\n *      \\remarks    Call to wrapper is '<img src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart=diroffile&file=relativepathofofile&cache=0\">'\n */\n\n//if (! defined('NOREQUIREUSER'))\tdefine('NOREQUIREUSER','1');\t// Not disabled cause need to load personalized language\n//if (! defined('NOREQUIREDB'))\t\tdefine('NOREQUIREDB','1');\t\t// Not disabled cause need to load personalized language\nif (! defined('NOREQUIRESOC'))\t\tdefine('NOREQUIRESOC','1');\nif (! defined('NOREQUIRETRAN'))\t\tdefine('NOREQUIRETRAN','1');\nif (! defined('NOCSRFCHECK'))\t\tdefine('NOCSRFCHECK','1');\nif (! defined('NOTOKENRENEWAL'))\tdefine('NOTOKENRENEWAL','1');\nif (! defined('NOREQUIREMENU'))\t\tdefine('NOREQUIREMENU','1');\nif (! defined('NOREQUIREHTML'))\t\tdefine('NOREQUIREHTML','1');\nif (! defined('NOREQUIREAJAX'))\t\tdefine('NOREQUIREAJAX','1');\nif (! defined('NOREQUIREHOOK'))\t\tdefine('NOREQUIREHOOK','1');\t// Disable \"main.inc.php\" hooks\n// Some value of modulepart can be used to get resources that are public so no login are required.\nif ((isset($_GET[\"modulepart\"]) && ($_GET[\"modulepart\"] == 'mycompany' || $_GET[\"modulepart\"] == 'companylogo')) && ! defined(\"NOLOGIN\")) define(\"NOLOGIN\",'1');\nif ((isset($_GET[\"modulepart\"]) && $_GET[\"modulepart\"] == 'medias') && ! defined(\"NOLOGIN\"))\n{\n\tdefine(\"NOLOGIN\",'1');\n\t// For multicompany\n\t$entity=(! empty($_GET['entity']) ? (int) $_GET['entity'] : (! empty($_POST['entity']) ? (int) $_POST['entity'] : 1));\n\tif (is_numeric($entity)) define(\"DOLENTITY\", $entity);\n}\n\n/**\n * Header empty\n *\n * @return\tvoid\n */\nfunction llxHeader() { }\n/**\n * Footer empty\n *\n * @return\tvoid\n */\nfunction llxFooter() { }\n\nrequire 'main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\n$action=GETPOST('action','alpha');\n$original_file=GETPOST(\"file\",'alpha');\n$modulepart=GETPOST('modulepart','alpha');\n$urlsource=GETPOST(\"urlsource\",'alpha');\n$entity=GETPOST('entity','int')?GETPOST('entity','int'):$conf->entity;\n\n// Security check\nif (empty($modulepart)) accessforbidden('Bad value for parameter modulepart');\nif ($modulepart == 'fckeditor') $modulepart='medias';   // For backward compatibility\n\n\n/*\n * Actions\n */\n\n// None\n\n\n\n/*\n * View\n */\n\nif (GETPOST(\"cache\",'alpha'))\n{\n    // Important: Following code is to avoid page request by browser and PHP CPU at\n    // each Dolibarr page access.\n    if (empty($dolibarr_nocache))\n    {\n        header('Cache-Control: max-age=3600, public, must-revalidate');\n        header('Pragma: cache');       // This is to avoid having Pragma: no-cache\n    }\n    else header('Cache-Control: no-cache');\n    //print $dolibarr_nocache; exit;\n}\n\n// Define mime type\n$type = 'application/octet-stream';\nif (! empty($_GET[\"type\"])) $type=$_GET[\"type\"];\nelse $type=dol_mimetype($original_file);\n\n// Security: Delete string ../ into $original_file\n$original_file = str_replace(\"../\",\"/\", $original_file);\n\n// Find the subdirectory name as the reference\n$refname=basename(dirname($original_file).\"/\");\n\n// Security check\nif (empty($modulepart)) accessforbidden('Bad value for parameter modulepart');\n$check_access = dol_check_secure_access_document($modulepart,$original_file,$entity,$refname);\n$accessallowed              = $check_access['accessallowed'];\n$sqlprotectagainstexternals = $check_access['sqlprotectagainstexternals'];\n$fullpath_original_file     = $check_access['original_file'];\n\n// Security:\n// Limit access if permissions are wrong\nif (! $accessallowed)\n{\n    accessforbidden();\n}\n\n// Security:\n// On interdit les remontees de repertoire ainsi que les pipe dans les noms de fichiers.\nif (preg_match('/\\.\\./',$fullpath_original_file) || preg_match('/[<>|]/',$fullpath_original_file))\n{\n\tdol_syslog(\"Refused to deliver file \".$fullpath_original_file);\n\tprint \"ErrorFileNameInvalid: \".$original_file;\n    exit;\n}\n\n\n\nif ($modulepart == 'barcode')\n{\n    $generator=GETPOST(\"generator\",\"alpha\");\n    $code=GETPOST(\"code\",'alpha');\n    $encoding=GETPOST(\"encoding\",\"alpha\");\n    $readable=GETPOST(\"readable\",'alpha')?GETPOST(\"readable\",\"alpha\"):\"Y\";\n\n    if (empty($generator) || empty($encoding))\n    {\n        print 'Error: Parameter \"generator\" or \"encoding\" not defined';\n        exit;\n    }\n\n    $dirbarcode=array_merge(array(\"/core/modules/barcode/doc/\"),$conf->modules_parts['barcode']);\n\n    $result=0;\n\n    foreach($dirbarcode as $reldir)\n    {\n        $dir=dol_buildpath($reldir,0);\n        $newdir=dol_osencode($dir);\n\n        // Check if directory exists (we do not use dol_is_dir to avoid loading files.lib.php)\n        if (! is_dir($newdir)) continue;\n\n        $result=@include_once $newdir.$generator.'.modules.php';\n        if ($result) break;\n    }\n\n    // Load barcode class\n    $classname = \"mod\".ucfirst($generator);\n    $module = new $classname($db);\n    if ($module->encodingIsSupported($encoding))\n    {\n        $result=$module->buildBarCode($code,$encoding,$readable);\n    }\n}\nelse\t\t\t\t\t// Open and return file\n{\n    clearstatcache();\n\n    // Output files on browser\n    dol_syslog(\"viewimage.php return file $fullpath_original_file content-type=$type\");\n\n    // This test is to avoid error images when image is not available (for example thumbs).\n    if (! dol_is_file($fullpath_original_file) && empty($_GET[\"noalt\"]))\n    {\n        $fullpath_original_file=DOL_DOCUMENT_ROOT.'/public/theme/common/nophoto.png';\n        /*$error='Error: File '.$_GET[\"file\"].' does not exists or filesystems permissions are not allowed';\n        print $error;\n        exit;*/\n    }\n\n    // Les drois sont ok et fichier trouve\n    if ($type)\n    {\n        top_httphead($type);\n        header('Content-Disposition: inline; filename=\"'.basename($fullpath_original_file).'\"');\n    }\n    else\n    {\n        top_httphead('image/png');\n        header('Content-Disposition: inline; filename=\"'.basename($fullpath_original_file).'\"');\n    }\n\n    $fullpath_original_file_osencoded=dol_osencode($fullpath_original_file);\n\n    readfile($fullpath_original_file_osencoded);\n}\n\n\nif (is_object($db)) $db->close();\n"], "filenames": ["htdocs/admin/company.php", "htdocs/admin/menus/edit.php", "htdocs/core/lib/functions.lib.php", "htdocs/document.php", "htdocs/langs/en_US/main.lang", "htdocs/main.inc.php", "htdocs/viewimage.php"], "buggy_code_start_loc": [52, 86, 3254, 113, 106, 80, 116], "buggy_code_end_loc": [1094, 506, 3255, 189, 107, 112, 205], "fixing_code_start_loc": [52, 86, 3254, 113, 106, 80, 116], "fixing_code_end_loc": [1094, 505, 3260, 188, 108, 113, 204], "type": "CWE-79", "message": "Multiple cross-site scripting (XSS) vulnerabilities in Dolibarr ERP/CRM 6.0.0 allow remote authenticated users to inject arbitrary web script or HTML via the (1) CompanyName, (2) CompanyAddress, (3) CompanyZip, (4) CompanyTown, (5) Fax, (6) EMail, (7) Web, (8) ManagingDirectors, (9) Note, (10) Capital, (11) ProfId1, (12) ProfId2, (13) ProfId3, (14) ProfId4, (15) ProfId5, or (16) ProfId6 parameter to htdocs/admin/company.php.", "other": {"cve": {"id": "CVE-2017-14239", "sourceIdentifier": "cve@mitre.org", "published": "2017-09-11T09:29:00.233", "lastModified": "2017-09-19T17:22:36.470", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Multiple cross-site scripting (XSS) vulnerabilities in Dolibarr ERP/CRM 6.0.0 allow remote authenticated users to inject arbitrary web script or HTML via the (1) CompanyName, (2) CompanyAddress, (3) CompanyZip, (4) CompanyTown, (5) Fax, (6) EMail, (7) Web, (8) ManagingDirectors, (9) Note, (10) Capital, (11) ProfId1, (12) ProfId2, (13) ProfId3, (14) ProfId4, (15) ProfId5, or (16) ProfId6 parameter to htdocs/admin/company.php."}, {"lang": "es", "value": "Existen m\u00faltiples vulnerabilidades de tipo Cross-Site Scripting (XSS) en Dolibarr ERP/CRM 6.0.0 que permiten a usuarios autenticados remotos inyectar scripts web o HTML arbitrarios mediante los par\u00e1metros (1) CompanyName, (2) CompanyAddress, (3) CompanyZip, (4) CompanyTown, (5) Fax, (6) EMail, (7) Web, (8) ManagingDirectors, (9) Note, (10) Capital, (11) ProfId1, (12) ProfId2, (13) ProfId3, (14) ProfId4, (15) ProfId5 o (16) ProfId6 en htdocs/admin/company.php."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dolibarr:dolibarr:6.0.0:*:*:*:*:*:*:*", "matchCriteriaId": "DB7E0AC9-13AB-4343-BFB6-6338B66E323B"}]}]}], "references": [{"url": "https://github.com/Dolibarr/dolibarr/commit/d26b2a694de30f95e46ea54ea72cc54f0d38e548", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Dolibarr/dolibarr/commit/d26b2a694de30f95e46ea54ea72cc54f0d38e548"}}