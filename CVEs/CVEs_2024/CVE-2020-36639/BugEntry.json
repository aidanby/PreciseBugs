{"buggy_code": ["// vim: set ts=4 sw=4 tw=99 noet:\n//\n// AMX Mod X, based on AMX Mod by Aleksander Naszko (\"OLO\").\n// Copyright (C) The AMX Mod X Development Team.\n//\n// This software is licensed under the GNU General Public License, version 3 or higher.\n// Additional exceptions apply. For full license details, see LICENSE.txt or visit:\n//     https://alliedmods.net/amxmodx-license\n\n//\n// Admin Votes Plugin\n//\n\n#include <amxmodx>\n#include <amxmisc>\n\n\nnew g_Answer[128]\nnew g_optionName[4][64]\nnew g_voteCount[4]\nnew g_validMaps\nnew g_yesNoVote\nnew g_coloredMenus\nnew g_voteCaller\nnew g_Execute[256]\nnew g_execLen\n\nnew bool:g_execResult\nnew Float:g_voteRatio\n\npublic plugin_init()\n{\n\tregister_plugin(\"Admin Votes\", AMXX_VERSION_STR, \"AMXX Dev Team\")\n\tregister_dictionary(\"adminvote.txt\")\n\tregister_dictionary(\"common.txt\")\n\tregister_dictionary(\"mapsmenu.txt\")\n\tregister_menucmd(register_menuid(\"Change map to \"), MENU_KEY_1|MENU_KEY_2, \"voteCount\")\n\tregister_menucmd(register_menuid(\"Choose map: \"), MENU_KEY_1|MENU_KEY_2|MENU_KEY_3|MENU_KEY_4, \"voteCount\")\n\tregister_menucmd(register_menuid(\"Kick \"), MENU_KEY_1|MENU_KEY_2, \"voteCount\")\n\tregister_menucmd(register_menuid(\"Ban \"), MENU_KEY_1|MENU_KEY_2, \"voteCount\")\n\tregister_menucmd(register_menuid(\"Vote: \"), MENU_KEY_1|MENU_KEY_2|MENU_KEY_3|MENU_KEY_4, \"voteCount\")\n\tregister_menucmd(register_menuid(\"The result: \"), MENU_KEY_1|MENU_KEY_2, \"actionResult\")\n\tregister_concmd(\"amx_votemap\", \"cmdVoteMap\", ADMIN_VOTE, \"<map> [map] [map] [map]\")\n\tregister_concmd(\"amx_votekick\", \"cmdVoteKickBan\", ADMIN_VOTE, \"<name or #userid>\")\n\tregister_concmd(\"amx_voteban\", \"cmdVoteKickBan\", ADMIN_VOTE, \"<name or #userid>\")\n\tregister_concmd(\"amx_vote\", \"cmdVote\", ADMIN_VOTE, \"<question> <answer#1> <answer#2>\")\n\tregister_concmd(\"amx_cancelvote\", \"cmdCancelVote\", ADMIN_VOTE, \"- cancels last vote\")\n\t\n\tg_coloredMenus = colored_menus()\n}\n\npublic cmdCancelVote(id, level, cid)\n{\n\tif (!cmd_access(id, level, cid, 0))\n\t\treturn PLUGIN_HANDLED\n\n\tif (task_exists(99889988, 1))\n\t{\n\t\tnew authid[32], name[MAX_NAME_LENGTH]\n\t\t\n\t\tget_user_authid(id, authid, charsmax(authid))\n\t\tget_user_name(id, name, charsmax(name))\n\t\tlog_amx(\"Vote: ^\"%s<%d><%s><>^\" cancel vote session\", name, get_user_userid(id), authid)\n\t\n\t\tnew msg[256];\n\t\tfor (new i = 1; i <= MaxClients; i++)\n\t\t{\n\t\t\tif (is_user_connected(i) && !is_user_bot(i))\n\t\t\t{\n\t\t\t\t// HACK: ADMIN_CANC_VOTE_{1,2} keys were designed very poorly.  Remove all : and %s in it.\n\t\t\t\tLookupLangKey(msg, charsmax(msg), \"ADMIN_CANC_VOTE_1\", i);\n\t\t\t\treplace_all(msg, charsmax(msg), \"%s\", \"\");\n\t\t\t\treplace_all(msg, charsmax(msg), \":\", \"\");\n\t\t\t\ttrim(msg);\n\t\t\t\tshow_activity_id(i, id, name, msg);\n\t\t\t}\n\t\t}\n\t\t\n\t\tconsole_print(id, \"%L\", id, \"VOTING_CANC\")\n\t\tclient_print(0,print_chat,\"%L\",LANG_PLAYER,\"VOTING_CANC\")\n\t\tremove_task(99889988, 1)\n\t\tset_cvar_float(\"amx_last_voting\", get_gametime())\n\t}\n\telse\n\t\tconsole_print(id, \"%L\", id, \"NO_VOTE_CANC\")\n\n\treturn PLUGIN_HANDLED\n}\n\npublic delayedExec(cmd[])\n\tserver_cmd(\"%s\", cmd)\n\npublic autoRefuse()\n{\n\tlog_amx(\"Vote: %L\", \"en\", \"RES_REF\")\n\tclient_print(0, print_chat, \"%L\", LANG_PLAYER, \"RES_REF\")\n}\n\npublic actionResult(id, key)\n{\n\tremove_task(4545454)\n\t\n\tswitch (key)\n\t{\n\t\tcase 0:\n\t\t{\n\t\t\tset_task(2.0, \"delayedExec\", 0, g_Execute, g_execLen)\n\t\t\tlog_amx(\"Vote: %L\", \"en\", \"RES_ACCEPTED\")\n\t\t\tclient_print(0, print_chat, \"%L\", LANG_PLAYER, \"RES_ACCEPTED\")\n\t\t}\n\t\tcase 1: autoRefuse()\n\t}\n\t\n\treturn PLUGIN_HANDLED\n}\n\npublic checkVotes()\n{\n\tnew best = 0\n\t\n\tif (!g_yesNoVote)\n\t{\n\t\tfor (new a = 0; a < 4; ++a)\n\t\t\tif (g_voteCount[a] > g_voteCount[best])\n\t\t\n\t\tbest = a\n\t}\n\n\tnew votesNum = g_voteCount[0] + g_voteCount[1] + g_voteCount[2] + g_voteCount[3]\n\tnew iRatio = votesNum ? floatround(g_voteRatio * float(votesNum), floatround_ceil) : 1\n\tnew iResult = g_voteCount[best]\n\tnew players[MAX_PLAYERS], pnum, i\n\t\n\tget_players(players, pnum, \"c\")\n\t\n\tif (iResult < iRatio)\n\t{\n\t\tnew lVotingFailed[64]\n\t\t\n\t\tfor (i = 0; i < pnum; i++)\n\t\t{\n\t\t\tformat(lVotingFailed, 63, \"%L\", players[i], \"VOTING_FAILED\")\n\t\t\tif (g_yesNoVote)\n\t\t\t\tclient_print(players[i], print_chat, \"%L\", players[i], \"VOTING_RES_1\", lVotingFailed, g_voteCount[0], g_voteCount[1], iRatio)\n\t\t\telse\n\t\t\t\tclient_print(players[i], print_chat, \"%L\", players[i], \"VOTING_RES_2\", lVotingFailed, iResult, iRatio)\n\t\t}\n\t\t\n\t\tformat(lVotingFailed, 63, \"%L\", \"en\", \"VOTING_FAILED\")\n\t\tlog_amx(\"Vote: %s (got ^\"%d^\") (needed ^\"%d^\")\", lVotingFailed, iResult, iRatio)\n\t\t\n\t\treturn PLUGIN_CONTINUE\n\t}\n\n\tg_execLen = format(g_Execute, charsmax(g_Execute), g_Answer, g_optionName[best]) + 1\n\t\n\tif (g_execResult)\n\t{\n\t\tg_execResult = false\n\t\t\n\t\tif (is_user_connected(g_voteCaller))\n\t\t{\n\t\t\tnew menuBody[512], lTheResult[32], lYes[16], lNo[16]\n\t\t\t\n\t\t\tformat(lTheResult, charsmax(lTheResult), \"%L\", g_voteCaller, \"THE_RESULT\")\n\t\t\tformat(lYes, charsmax(lYes), \"%L\", g_voteCaller, \"YES\")\n\t\t\tformat(lNo, charsmax(lNo), \"%L\", g_voteCaller, \"NO\")\n\t\t\t\n\t\t\tnew len = format(menuBody, charsmax(menuBody), g_coloredMenus ? \"\\y%s: \\w%s^n^n\" : \"%s: %s^n^n\", lTheResult, g_Execute)\n\t\t\t\n\t\t\tlen += format(menuBody[len], charsmax(menuBody) - len, g_coloredMenus ? \"\\y%L^n\\w\" : \"%L^n\", g_voteCaller, \"WANT_CONTINUE\")\n\t\t\tformat(menuBody[len], charsmax(menuBody) - len, \"^n1. %s^n2. %s\", lYes, lNo)\n\t\t\tshow_menu(g_voteCaller, 0x03, menuBody, 10, \"The result: \")\n\t\t\tset_task(10.0, \"autoRefuse\", 4545454)\n\t\t}\n\t\telse\n\t\t\tset_task(2.0, \"delayedExec\", 0, g_Execute, g_execLen)\n\t}\n\t\n\tnew lVotingSuccess[32]\n\t\n\tfor (i = 0; i < pnum; i++)\n\t{\n\t\tformat(lVotingSuccess, charsmax(lVotingSuccess), \"%L\", players[i], \"VOTING_SUCCESS\")\n\t\tclient_print(players[i], print_chat, \"%L\", players[i], \"VOTING_RES_3\", lVotingSuccess, iResult, iRatio, g_Execute)\n\t}\n\t\n\tformat(lVotingSuccess, charsmax(lVotingSuccess), \"%L\", \"en\", \"VOTING_SUCCESS\")\n\tlog_amx(\"Vote: %s (got ^\"%d^\") (needed ^\"%d^\") (result ^\"%s^\")\", lVotingSuccess, iResult, iRatio, g_Execute)\n\t\n\treturn PLUGIN_CONTINUE\n}\n\npublic voteCount(id, key)\n{\n\tif (get_cvar_num(\"amx_vote_answers\"))\n\t{\n\t\tnew name[MAX_NAME_LENGTH]\n\t\tget_user_name(id, name, charsmax(name))\n\t\t\n\t\tif (g_yesNoVote)\n\t\t\tclient_print(0, print_chat, \"%L\", LANG_PLAYER, key ? \"VOTED_AGAINST\" : \"VOTED_FOR\", name)\n\t\telse\n\t\t\tclient_print(0, print_chat, \"%L\", LANG_PLAYER, \"VOTED_FOR_OPT\", name, key + 1)\n\t}\n\t++g_voteCount[key]\n\t\n\treturn PLUGIN_HANDLED\n}\n\npublic cmdVoteMap(id, level, cid)\n{\n\tif (!cmd_access(id, level, cid, 2))\n\t\treturn PLUGIN_HANDLED\n\t\n\tnew Float:voting = get_cvar_float(\"amx_last_voting\")\n\tif (voting > get_gametime())\n\t{\n\t\tconsole_print(id, \"%L\", id, \"ALREADY_VOTING\")\n\t\treturn PLUGIN_HANDLED\n\t}\n\t\n\tif (voting && voting + get_cvar_float(\"amx_vote_delay\") > get_gametime())\n\t{\n\t\tconsole_print(id, \"%L\", id, \"VOTING_NOT_ALLOW\")\n\t\treturn PLUGIN_HANDLED\n\t}\n\n\tnew argc = read_argc()\n\tif (argc > 5) argc = 5\n\t\n\tg_validMaps = 0\n\tg_optionName[0][0] = 0\n\tg_optionName[1][0] = 0\n\tg_optionName[2][0] = 0\n\tg_optionName[3][0] = 0\n\t\n\tfor (new i = 1; i < argc; ++i)\n\t{\n\t\tread_argv(i, g_optionName[g_validMaps], 31)\n\t\t\n\t\tif (is_map_valid(g_optionName[g_validMaps]))\n\t\t\tg_validMaps++\n\t}\n\t\n\tif (g_validMaps == 0)\n\t{\n\t\tnew lMaps[16]\n\t\t\n\t\tformat(lMaps, charsmax(lMaps), \"%L\", id, (argc == 2) ? \"MAP_IS\" : \"MAPS_ARE\")\n\t\tconsole_print(id, \"%L\", id, \"GIVEN_NOT_VALID\", lMaps)\n\t\treturn PLUGIN_HANDLED\n\t}\n\n\tnew menu_msg[256], len = 0\n\tnew keys = 0\n\t\n\tif (g_validMaps > 1)\n\t{\n\t\tkeys = MENU_KEY_0\n\t\tlen = format(menu_msg, charsmax(menu_msg), g_coloredMenus ? \"\\y%L: \\w^n^n\" : \"%L: ^n^n\", LANG_SERVER, \"CHOOSE_MAP\")\n\t\tnew temp[128]\n\t\t\n\t\tfor (new a = 0; a < g_validMaps; ++a)\n\t\t{\n\t\t\tformat(temp, charsmax(temp), \"%d.  %s^n\", a+1, g_optionName[a])\n\t\t\tlen += copy(menu_msg[len], charsmax(menu_msg) - len, temp)\n\t\t\tkeys |= (1<<a)\n\t\t}\n\t\t\n\t\tformat(menu_msg[len], charsmax(menu_msg) - len, \"^n0.  %L\", LANG_SERVER, \"NONE\")\n\t\tg_yesNoVote = 0\n\t} else {\n\t\tnew lChangeMap[32], lYes[16], lNo[16]\n\t\t\n\t\tformat(lChangeMap, charsmax(lChangeMap), \"%L\", LANG_SERVER, \"CHANGE_MAP_TO\")\n\t\tformat(lYes, charsmax(lYes), \"%L\", LANG_SERVER, \"YES\")\n\t\tformat(lNo, charsmax(lNo), \"%L\", LANG_SERVER, \"NO\")\n\t\tformat(menu_msg, charsmax(menu_msg), g_coloredMenus ? \"\\y%s %s?\\w^n^n1.  %s^n2.  %s\" : \"%s %s?^n^n1.  %s^n2.  %s\", lChangeMap, g_optionName[0], lYes, lNo)\n\t\tkeys = MENU_KEY_1|MENU_KEY_2\n\t\tg_yesNoVote = 1\n\t}\n\t\n\tnew authid[32], name[MAX_NAME_LENGTH]\n\t\n\tget_user_authid(id, authid, charsmax(authid))\n\tget_user_name(id, name, charsmax(name))\n\t\n\tif (argc == 2)\n\t\tlog_amx(\"Vote: ^\"%s<%d><%s><>^\" vote map (map ^\"%s^\")\", name, get_user_userid(id), authid, g_optionName[0])\n\telse\n\t\tlog_amx(\"Vote: ^\"%s<%d><%s><>^\" vote maps (map#1 ^\"%s^\") (map#2 ^\"%s^\") (map#3 ^\"%s^\") (map#4 ^\"%s^\")\", name, get_user_userid(id), authid, g_optionName[0], g_optionName[1], g_optionName[2], g_optionName[3])\n\n\tnew msg[256];\n\tfor (new i = 1; i <= MaxClients; i++)\n\t{\n\t\tif (is_user_connected(i) && !is_user_bot(i))\n\t\t{\n\t\t\t// HACK: ADMIN_VOTE_MAP_{1,2} keys were designed very poorly.  Remove all : and %s in it.\n\t\t\tLookupLangKey(msg, charsmax(msg), \"ADMIN_VOTE_MAP_1\", i);\n\t\t\treplace_all(msg, charsmax(msg), \"%s\", \"\");\n\t\t\treplace_all(msg, charsmax(msg), \":\", \"\");\n\t\t\ttrim(msg);\n\t\t\tshow_activity_id(i, id, name, msg);\n\t\t}\n\t}\n\n\tg_execResult = true\n\tnew Float:vote_time = get_cvar_float(\"amx_vote_time\") + 2.0\n\t\n\tset_cvar_float(\"amx_last_voting\", get_gametime() + vote_time)\n\tg_voteRatio = get_cvar_float(\"amx_votemap_ratio\")\n\tg_Answer = \"changelevel %s\"\n\tshow_menu(0, keys, menu_msg, floatround(vote_time), (g_validMaps > 1) ? \"Choose map: \" : \"Change map to \")\n\tset_task(vote_time, \"checkVotes\", 99889988)\n\tg_voteCaller = id\n\tconsole_print(id, \"%L\", id, \"VOTING_STARTED\")\n\tg_voteCount = {0, 0, 0, 0}\n\t\n\treturn PLUGIN_HANDLED\n}\n\npublic cmdVote(id, level, cid)\n{\n\tif (!cmd_access(id, level, cid, 4))\n\t\treturn PLUGIN_HANDLED\n\t\n\tnew Float:voting = get_cvar_float(\"amx_last_voting\")\n\tif (voting > get_gametime())\n\t{\n\t\tconsole_print(id, \"%L\", id, \"ALREADY_VOTING\")\n\t\treturn PLUGIN_HANDLED\n\t}\n\t\n\tif (voting && voting + get_cvar_float(\"amx_vote_delay\") > get_gametime())\n\t{\n\t\tconsole_print(id, \"%L\", id, \"VOTING_NOT_ALLOW\")\n\t\treturn PLUGIN_HANDLED\n\t}\n\n\tnew quest[48]\n\tread_argv(1, quest, charsmax(quest))\n\t\n\ttrim(quest);\n\t\n\tif (containi(quest, \"sv_password\") != -1 || containi(quest, \"rcon_password\") != -1)\n\t{\n\t\tconsole_print(id, \"%L\", id, \"VOTING_FORBIDDEN\")\n\t\treturn PLUGIN_HANDLED\n\t}\n\t\n\tnew count=read_argc();\n\n\tfor (new i=0;i<4 && (i+2)<count;i++)\n\t{\n\t\tread_argv(i+2, g_optionName[i], charsmax(g_optionName[]));\n\t}\n\n\tnew authid[32], name[MAX_NAME_LENGTH]\n\t\n\tget_user_authid(id, authid, charsmax(authid))\n\tget_user_name(id, name, charsmax(name))\n\tlog_amx(\"Vote: ^\"%s<%d><%s><>^\" vote custom (question ^\"%s^\") (option#1 ^\"%s^\") (option#2 ^\"%s^\")\", name, get_user_userid(id), authid, quest, g_optionName[0], g_optionName[1])\n\n\tnew msg[256];\n\tfor (new i = 1; i <= MaxClients; i++)\n\t{\n\t\tif (is_user_connected(i) && !is_user_bot(i))\n\t\t{\n\t\t\t// HACK: ADMIN_VOTE_CUS_{1,2} keys were designed very poorly.  Remove all : and %s in it.\n\t\t\tLookupLangKey(msg, charsmax(msg), \"ADMIN_VOTE_CUS_1\", i);\n\t\t\treplace_all(msg, charsmax(msg), \"%s\", \"\");\n\t\t\treplace_all(msg, charsmax(msg), \":\", \"\");\n\t\t\ttrim(msg);\n\t\t\tshow_activity_id(i, id, name, msg);\n\t\t}\n\t}\n\n\tnew menu_msg[512], lVote[16]\n\t\n\tformat(lVote, charsmax(lVote), \"%L\", LANG_SERVER, \"VOTE\")\n\t\n\tcount-=2;\n\tif (count>4)\n\t{\n\t\tcount=4;\n\t}\n\t// count now shows how many options were listed\n\tnew keys=0;\n\tfor (new i=0;i<count;i++)\n\t{\n\t\tkeys |= (1<<i);\n\t}\n\t\n\tnew len=formatex(menu_msg, charsmax(menu_msg), g_coloredMenus ? \"\\y%s: %s\\w^n^n\" : \"%s: %s^n^n\", lVote, quest);\n\t\n\tfor (new i=0;i<count;i++)\n\t{\n\t\tlen+=formatex(menu_msg[len], charsmax(menu_msg) - len ,\"%d.  %s^n\",i+1,g_optionName[i]);\n\t}\n\tg_execResult = false\n\t\n\tnew Float:vote_time = get_cvar_float(\"amx_vote_time\") + 2.0\n\t\n\tset_cvar_float(\"amx_last_voting\", get_gametime() + vote_time)\n\tg_voteRatio = get_cvar_float(\"amx_vote_ratio\")\n\treplace_all(quest, charsmax(quest), \"%\", \"\");\n\tformat(g_Answer, charsmax(g_Answer), \"%s - ^\"%%s^\"\", quest)\n\tshow_menu(0, keys, menu_msg, floatround(vote_time), \"Vote: \")\n\tset_task(vote_time, \"checkVotes\", 99889988)\n\tg_voteCaller = id\n\tconsole_print(id, \"%L\", id, \"VOTING_STARTED\")\n\tg_voteCount = {0, 0, 0, 0}\n\tg_yesNoVote = 0\n\t\n\treturn PLUGIN_HANDLED\n}\n\npublic cmdVoteKickBan(id, level, cid)\n{\n\tif (!cmd_access(id, level, cid, 2))\n\t\treturn PLUGIN_HANDLED\n\t\n\tnew Float:voting = get_cvar_float(\"amx_last_voting\")\n\tif (voting > get_gametime())\n\t{\n\t\tconsole_print(id, \"%L\", id, \"ALREADY_VOTING\")\n\t\treturn PLUGIN_HANDLED\n\t}\n\n\tif (voting && voting + get_cvar_float(\"amx_vote_delay\") > get_gametime())\n\t{\n\t\tconsole_print(id, \"%L\", id, \"VOTING_NOT_ALLOW\")\n\t\treturn PLUGIN_HANDLED\n\t}\n\n\tnew cmd[32]\n\t\n\tread_argv(0, cmd, charsmax(cmd))\n\t\n\tnew voteban = equal(cmd, \"amx_voteban\")\n\tnew arg[32]\n\tread_argv(1, arg, charsmax(arg))\n\t\n\tnew player = cmd_target(id, arg, CMDTARGET_OBEY_IMMUNITY | CMDTARGET_ALLOW_SELF)\n\t\n\tif (!player)\n\t\treturn PLUGIN_HANDLED\n\t\n\tif (voteban && is_user_bot(player))\n\t{\n\t\tnew imname[MAX_NAME_LENGTH]\n\t\t\n\t\tget_user_name(player, imname, charsmax(imname))\n\t\tconsole_print(id, \"%L\", id, \"ACTION_PERFORMED\", imname)\n\t\treturn PLUGIN_HANDLED\n\t}\n\n\tnew keys = MENU_KEY_1|MENU_KEY_2\n\tnew menu_msg[256], lYes[16], lNo[16], lKickBan[16]\n\t\n\tformat(lYes, charsmax(lYes), \"%L\", LANG_SERVER, \"YES\") \n\tformat(lNo, charsmax(lNo), \"%L\", LANG_SERVER, \"NO\")\n\tformat(lKickBan, charsmax(lKickBan), \"%L\", LANG_SERVER, voteban ? \"BAN\" : \"KICK\")\n\tucfirst(lKickBan)\n\tget_user_name(player, arg, charsmax(arg))\n\tformat(menu_msg, charsmax(menu_msg), g_coloredMenus ? \"\\y%s %s?\\w^n^n1.  %s^n2.  %s\" : \"%s %s?^n^n1.  %s^n2.  %s\", lKickBan, arg, lYes, lNo)\n\tg_yesNoVote = 1\n\t\n\tnew bool:ipban=false;\n\t\n\tif (voteban)\n\t{\n\t\tget_user_authid(player, g_optionName[0], charsmax(g_optionName[]));\n\t\t\n\t\t// Do the same check that's in plmenu to determine if this should be an IP ban instead\n\t\tif (equal(\"4294967295\", g_optionName[0])\n\t\t\t|| equal(\"HLTV\", g_optionName[0])\n\t\t\t|| equal(\"STEAM_ID_LAN\", g_optionName[0])\n\t\t\t|| equali(\"VALVE_ID_LAN\", g_optionName[0]))\n\t\t{\n\t\t\tget_user_ip(player, g_optionName[0], charsmax(g_optionName[]), 1);\n\t\t\t\n\t\t\tipban=true;\n\t\t}\n\n\t}\n\telse\n\t{\n\t\tnum_to_str(get_user_userid(player), g_optionName[0], charsmax(g_optionName[]))\n\t}\n\t\n\tnew authid[32], name[MAX_NAME_LENGTH]\n\t\n\tget_user_authid(id, authid, charsmax(authid))\n\tget_user_name(id, name, charsmax(name))\n\tlog_amx(\"Vote: ^\"%s<%d><%s><>^\" vote %s (target ^\"%s^\")\", name, get_user_userid(id), authid, voteban ? \"ban\" : \"kick\", arg)\n\n\tnew msg[256];\n\tnew right[256];\n\tnew dummy[1];\n\tfor (new i = 1; i <= MaxClients; i++)\n\t{\n\t\tif (is_user_connected(i) && !is_user_bot(i))\n\t\t{\n\t\t\tformatex(lKickBan, charsmax(lKickBan), \"%L\", i, voteban ? \"BAN\" : \"KICK\");\n\t\t\t\n\t\t\t// HACK: ADMIN_VOTE_FOR{1,2} keys are really weird.  Tokenize and ignore the text before the :\n\t\t\tLookupLangKey(msg, charsmax(msg), \"ADMIN_VOTE_FOR_1\", i);\n\t\t\tstrtok(msg, dummy, 0, right, charsmax(right), ':');\n\t\t\ttrim(right);\n\t\t\tshow_activity_id(i, id, name, right, lKickBan, arg);\n\t\t}\n\t}\n\n\tg_execResult = true\n\t\n\tnew Float:vote_time = get_cvar_float(\"amx_vote_time\") + 2.0\n\t\n\tset_cvar_float(\"amx_last_voting\", get_gametime() + vote_time)\n\tg_voteRatio = get_cvar_float(voteban ? \"amx_voteban_ratio\" : \"amx_votekick_ratio\")\n\n\tif (voteban)\n\t{\n\t\tif (ipban==true)\n\t\t{\n\t\t\tg_Answer = \"addip 30.0 %s\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tg_Answer = \"banid 30.0 %s kick\";\n\n\t\t}\n\t}\n\telse\n\t{\n\t\tg_Answer = \"kick #%s\";\n\t}\n\tshow_menu(0, keys, menu_msg, floatround(vote_time), voteban ? \"Ban \" : \"Kick \")\n\tset_task(vote_time, \"checkVotes\", 99889988)\n\tg_voteCaller = id\n\tconsole_print(id, \"%L\", id, \"VOTING_STARTED\")\n\tg_voteCount = {0, 0, 0, 0}\n\t\n\treturn PLUGIN_HANDLED\n}\n"], "fixing_code": ["// vim: set ts=4 sw=4 tw=99 noet:\n//\n// AMX Mod X, based on AMX Mod by Aleksander Naszko (\"OLO\").\n// Copyright (C) The AMX Mod X Development Team.\n//\n// This software is licensed under the GNU General Public License, version 3 or higher.\n// Additional exceptions apply. For full license details, see LICENSE.txt or visit:\n//     https://alliedmods.net/amxmodx-license\n\n//\n// Admin Votes Plugin\n//\n\n#include <amxmodx>\n#include <amxmisc>\n\n\nnew g_Answer[128]\nnew g_optionName[4][64]\nnew g_voteCount[4]\nnew g_validMaps\nnew g_yesNoVote\nnew g_coloredMenus\nnew g_voteCaller\nnew g_Execute[256]\nnew g_execLen\n\nnew bool:g_execResult\nnew Float:g_voteRatio\n\npublic plugin_init()\n{\n\tregister_plugin(\"Admin Votes\", AMXX_VERSION_STR, \"AMXX Dev Team\")\n\tregister_dictionary(\"adminvote.txt\")\n\tregister_dictionary(\"common.txt\")\n\tregister_dictionary(\"mapsmenu.txt\")\n\tregister_menucmd(register_menuid(\"Change map to \"), MENU_KEY_1|MENU_KEY_2, \"voteCount\")\n\tregister_menucmd(register_menuid(\"Choose map: \"), MENU_KEY_1|MENU_KEY_2|MENU_KEY_3|MENU_KEY_4, \"voteCount\")\n\tregister_menucmd(register_menuid(\"Kick \"), MENU_KEY_1|MENU_KEY_2, \"voteCount\")\n\tregister_menucmd(register_menuid(\"Ban \"), MENU_KEY_1|MENU_KEY_2, \"voteCount\")\n\tregister_menucmd(register_menuid(\"Vote: \"), MENU_KEY_1|MENU_KEY_2|MENU_KEY_3|MENU_KEY_4, \"voteCount\")\n\tregister_menucmd(register_menuid(\"The result: \"), MENU_KEY_1|MENU_KEY_2, \"actionResult\")\n\tregister_concmd(\"amx_votemap\", \"cmdVoteMap\", ADMIN_VOTE, \"<map> [map] [map] [map]\")\n\tregister_concmd(\"amx_votekick\", \"cmdVoteKickBan\", ADMIN_VOTE, \"<name or #userid>\")\n\tregister_concmd(\"amx_voteban\", \"cmdVoteKickBan\", ADMIN_VOTE, \"<name or #userid>\")\n\tregister_concmd(\"amx_vote\", \"cmdVote\", ADMIN_VOTE, \"<question> <answer#1> <answer#2>\")\n\tregister_concmd(\"amx_cancelvote\", \"cmdCancelVote\", ADMIN_VOTE, \"- cancels last vote\")\n\t\n\tg_coloredMenus = colored_menus()\n}\n\npublic cmdCancelVote(id, level, cid)\n{\n\tif (!cmd_access(id, level, cid, 0))\n\t\treturn PLUGIN_HANDLED\n\n\tif (task_exists(99889988, 1))\n\t{\n\t\tnew authid[32], name[MAX_NAME_LENGTH]\n\t\t\n\t\tget_user_authid(id, authid, charsmax(authid))\n\t\tget_user_name(id, name, charsmax(name))\n\t\tlog_amx(\"Vote: ^\"%s<%d><%s><>^\" cancel vote session\", name, get_user_userid(id), authid)\n\t\n\t\tnew msg[256];\n\t\tfor (new i = 1; i <= MaxClients; i++)\n\t\t{\n\t\t\tif (is_user_connected(i) && !is_user_bot(i))\n\t\t\t{\n\t\t\t\t// HACK: ADMIN_CANC_VOTE_{1,2} keys were designed very poorly.  Remove all : and %s in it.\n\t\t\t\tLookupLangKey(msg, charsmax(msg), \"ADMIN_CANC_VOTE_1\", i);\n\t\t\t\treplace_all(msg, charsmax(msg), \"%s\", \"\");\n\t\t\t\treplace_all(msg, charsmax(msg), \":\", \"\");\n\t\t\t\ttrim(msg);\n\t\t\t\tshow_activity_id(i, id, name, msg);\n\t\t\t}\n\t\t}\n\t\t\n\t\tconsole_print(id, \"%L\", id, \"VOTING_CANC\")\n\t\tclient_print(0,print_chat,\"%L\",LANG_PLAYER,\"VOTING_CANC\")\n\t\tremove_task(99889988, 1)\n\t\tset_cvar_float(\"amx_last_voting\", get_gametime())\n\t}\n\telse\n\t\tconsole_print(id, \"%L\", id, \"NO_VOTE_CANC\")\n\n\treturn PLUGIN_HANDLED\n}\n\npublic delayedExec(cmd[])\n\tserver_cmd(\"%s\", cmd)\n\npublic autoRefuse()\n{\n\tlog_amx(\"Vote: %L\", \"en\", \"RES_REF\")\n\tclient_print(0, print_chat, \"%L\", LANG_PLAYER, \"RES_REF\")\n}\n\npublic actionResult(id, key)\n{\n\tremove_task(4545454)\n\t\n\tswitch (key)\n\t{\n\t\tcase 0:\n\t\t{\n\t\t\tset_task(2.0, \"delayedExec\", 0, g_Execute, g_execLen)\n\t\t\tlog_amx(\"Vote: %L\", \"en\", \"RES_ACCEPTED\")\n\t\t\tclient_print(0, print_chat, \"%L\", LANG_PLAYER, \"RES_ACCEPTED\")\n\t\t}\n\t\tcase 1: autoRefuse()\n\t}\n\t\n\treturn PLUGIN_HANDLED\n}\n\npublic checkVotes()\n{\n\tnew best = 0\n\t\n\tif (!g_yesNoVote)\n\t{\n\t\tfor (new a = 0; a < 4; ++a)\n\t\t\tif (g_voteCount[a] > g_voteCount[best])\n\t\t\n\t\tbest = a\n\t}\n\n\tnew votesNum = g_voteCount[0] + g_voteCount[1] + g_voteCount[2] + g_voteCount[3]\n\tnew iRatio = votesNum ? floatround(g_voteRatio * float(votesNum), floatround_ceil) : 1\n\tnew iResult = g_voteCount[best]\n\tnew players[MAX_PLAYERS], pnum, i\n\t\n\tget_players(players, pnum, \"c\")\n\t\n\tif (iResult < iRatio)\n\t{\n\t\tnew lVotingFailed[64]\n\t\t\n\t\tfor (i = 0; i < pnum; i++)\n\t\t{\n\t\t\tformat(lVotingFailed, 63, \"%L\", players[i], \"VOTING_FAILED\")\n\t\t\tif (g_yesNoVote)\n\t\t\t\tclient_print(players[i], print_chat, \"%L\", players[i], \"VOTING_RES_1\", lVotingFailed, g_voteCount[0], g_voteCount[1], iRatio)\n\t\t\telse\n\t\t\t\tclient_print(players[i], print_chat, \"%L\", players[i], \"VOTING_RES_2\", lVotingFailed, iResult, iRatio)\n\t\t}\n\t\t\n\t\tformat(lVotingFailed, 63, \"%L\", \"en\", \"VOTING_FAILED\")\n\t\tlog_amx(\"Vote: %s (got ^\"%d^\") (needed ^\"%d^\")\", lVotingFailed, iResult, iRatio)\n\t\t\n\t\treturn PLUGIN_CONTINUE\n\t}\n\n\tg_execLen = format(g_Execute, charsmax(g_Execute), g_Answer, g_optionName[best]) + 1\n\t\n\tif (g_execResult)\n\t{\n\t\tg_execResult = false\n\t\t\n\t\tif (is_user_connected(g_voteCaller))\n\t\t{\n\t\t\tnew menuBody[512], lTheResult[32], lYes[16], lNo[16]\n\t\t\t\n\t\t\tformat(lTheResult, charsmax(lTheResult), \"%L\", g_voteCaller, \"THE_RESULT\")\n\t\t\tformat(lYes, charsmax(lYes), \"%L\", g_voteCaller, \"YES\")\n\t\t\tformat(lNo, charsmax(lNo), \"%L\", g_voteCaller, \"NO\")\n\t\t\t\n\t\t\tnew len = format(menuBody, charsmax(menuBody), g_coloredMenus ? \"\\y%s: \\w%s^n^n\" : \"%s: %s^n^n\", lTheResult, g_Execute)\n\t\t\t\n\t\t\tlen += format(menuBody[len], charsmax(menuBody) - len, g_coloredMenus ? \"\\y%L^n\\w\" : \"%L^n\", g_voteCaller, \"WANT_CONTINUE\")\n\t\t\tformat(menuBody[len], charsmax(menuBody) - len, \"^n1. %s^n2. %s\", lYes, lNo)\n\t\t\tshow_menu(g_voteCaller, 0x03, menuBody, 10, \"The result: \")\n\t\t\tset_task(10.0, \"autoRefuse\", 4545454)\n\t\t}\n\t\telse\n\t\t\tset_task(2.0, \"delayedExec\", 0, g_Execute, g_execLen)\n\t}\n\t\n\tnew lVotingSuccess[32]\n\t\n\tfor (i = 0; i < pnum; i++)\n\t{\n\t\tformat(lVotingSuccess, charsmax(lVotingSuccess), \"%L\", players[i], \"VOTING_SUCCESS\")\n\t\tclient_print(players[i], print_chat, \"%L\", players[i], \"VOTING_RES_3\", lVotingSuccess, iResult, iRatio, g_Execute)\n\t}\n\t\n\tformat(lVotingSuccess, charsmax(lVotingSuccess), \"%L\", \"en\", \"VOTING_SUCCESS\")\n\tlog_amx(\"Vote: %s (got ^\"%d^\") (needed ^\"%d^\") (result ^\"%s^\")\", lVotingSuccess, iResult, iRatio, g_Execute)\n\t\n\treturn PLUGIN_CONTINUE\n}\n\npublic voteCount(id, key)\n{\n\tif (get_cvar_num(\"amx_vote_answers\"))\n\t{\n\t\tnew name[MAX_NAME_LENGTH]\n\t\tget_user_name(id, name, charsmax(name))\n\t\t\n\t\tif (g_yesNoVote)\n\t\t\tclient_print(0, print_chat, \"%L\", LANG_PLAYER, key ? \"VOTED_AGAINST\" : \"VOTED_FOR\", name)\n\t\telse\n\t\t\tclient_print(0, print_chat, \"%L\", LANG_PLAYER, \"VOTED_FOR_OPT\", name, key + 1)\n\t}\n\t++g_voteCount[key]\n\t\n\treturn PLUGIN_HANDLED\n}\n\npublic cmdVoteMap(id, level, cid)\n{\n\tif (!cmd_access(id, level, cid, 2))\n\t\treturn PLUGIN_HANDLED\n\t\n\tnew Float:voting = get_cvar_float(\"amx_last_voting\")\n\tif (voting > get_gametime())\n\t{\n\t\tconsole_print(id, \"%L\", id, \"ALREADY_VOTING\")\n\t\treturn PLUGIN_HANDLED\n\t}\n\t\n\tif (voting && voting + get_cvar_float(\"amx_vote_delay\") > get_gametime())\n\t{\n\t\tconsole_print(id, \"%L\", id, \"VOTING_NOT_ALLOW\")\n\t\treturn PLUGIN_HANDLED\n\t}\n\n\tnew argc = read_argc()\n\tif (argc > 5) argc = 5\n\t\n\tg_validMaps = 0\n\tg_optionName[0][0] = 0\n\tg_optionName[1][0] = 0\n\tg_optionName[2][0] = 0\n\tg_optionName[3][0] = 0\n\t\n\tfor (new i = 1; i < argc; ++i)\n\t{\n\t\tread_argv(i, g_optionName[g_validMaps], 31)\n\n\t\tif (contain(g_optionName[g_validMaps], \"..\") != -1)\n\t\t\tcontinue\n\n\t\tif (is_map_valid(g_optionName[g_validMaps]))\n\t\t\tg_validMaps++\n\t}\n\t\n\tif (g_validMaps == 0)\n\t{\n\t\tnew lMaps[16]\n\t\t\n\t\tformat(lMaps, charsmax(lMaps), \"%L\", id, (argc == 2) ? \"MAP_IS\" : \"MAPS_ARE\")\n\t\tconsole_print(id, \"%L\", id, \"GIVEN_NOT_VALID\", lMaps)\n\t\treturn PLUGIN_HANDLED\n\t}\n\n\tnew menu_msg[256], len = 0\n\tnew keys = 0\n\t\n\tif (g_validMaps > 1)\n\t{\n\t\tkeys = MENU_KEY_0\n\t\tlen = format(menu_msg, charsmax(menu_msg), g_coloredMenus ? \"\\y%L: \\w^n^n\" : \"%L: ^n^n\", LANG_SERVER, \"CHOOSE_MAP\")\n\t\tnew temp[128]\n\t\t\n\t\tfor (new a = 0; a < g_validMaps; ++a)\n\t\t{\n\t\t\tformat(temp, charsmax(temp), \"%d.  %s^n\", a+1, g_optionName[a])\n\t\t\tlen += copy(menu_msg[len], charsmax(menu_msg) - len, temp)\n\t\t\tkeys |= (1<<a)\n\t\t}\n\t\t\n\t\tformat(menu_msg[len], charsmax(menu_msg) - len, \"^n0.  %L\", LANG_SERVER, \"NONE\")\n\t\tg_yesNoVote = 0\n\t} else {\n\t\tnew lChangeMap[32], lYes[16], lNo[16]\n\t\t\n\t\tformat(lChangeMap, charsmax(lChangeMap), \"%L\", LANG_SERVER, \"CHANGE_MAP_TO\")\n\t\tformat(lYes, charsmax(lYes), \"%L\", LANG_SERVER, \"YES\")\n\t\tformat(lNo, charsmax(lNo), \"%L\", LANG_SERVER, \"NO\")\n\t\tformat(menu_msg, charsmax(menu_msg), g_coloredMenus ? \"\\y%s %s?\\w^n^n1.  %s^n2.  %s\" : \"%s %s?^n^n1.  %s^n2.  %s\", lChangeMap, g_optionName[0], lYes, lNo)\n\t\tkeys = MENU_KEY_1|MENU_KEY_2\n\t\tg_yesNoVote = 1\n\t}\n\t\n\tnew authid[32], name[MAX_NAME_LENGTH]\n\t\n\tget_user_authid(id, authid, charsmax(authid))\n\tget_user_name(id, name, charsmax(name))\n\t\n\tif (argc == 2)\n\t\tlog_amx(\"Vote: ^\"%s<%d><%s><>^\" vote map (map ^\"%s^\")\", name, get_user_userid(id), authid, g_optionName[0])\n\telse\n\t\tlog_amx(\"Vote: ^\"%s<%d><%s><>^\" vote maps (map#1 ^\"%s^\") (map#2 ^\"%s^\") (map#3 ^\"%s^\") (map#4 ^\"%s^\")\", name, get_user_userid(id), authid, g_optionName[0], g_optionName[1], g_optionName[2], g_optionName[3])\n\n\tnew msg[256];\n\tfor (new i = 1; i <= MaxClients; i++)\n\t{\n\t\tif (is_user_connected(i) && !is_user_bot(i))\n\t\t{\n\t\t\t// HACK: ADMIN_VOTE_MAP_{1,2} keys were designed very poorly.  Remove all : and %s in it.\n\t\t\tLookupLangKey(msg, charsmax(msg), \"ADMIN_VOTE_MAP_1\", i);\n\t\t\treplace_all(msg, charsmax(msg), \"%s\", \"\");\n\t\t\treplace_all(msg, charsmax(msg), \":\", \"\");\n\t\t\ttrim(msg);\n\t\t\tshow_activity_id(i, id, name, msg);\n\t\t}\n\t}\n\n\tg_execResult = true\n\tnew Float:vote_time = get_cvar_float(\"amx_vote_time\") + 2.0\n\t\n\tset_cvar_float(\"amx_last_voting\", get_gametime() + vote_time)\n\tg_voteRatio = get_cvar_float(\"amx_votemap_ratio\")\n\tg_Answer = \"changelevel %s\"\n\tshow_menu(0, keys, menu_msg, floatround(vote_time), (g_validMaps > 1) ? \"Choose map: \" : \"Change map to \")\n\tset_task(vote_time, \"checkVotes\", 99889988)\n\tg_voteCaller = id\n\tconsole_print(id, \"%L\", id, \"VOTING_STARTED\")\n\tg_voteCount = {0, 0, 0, 0}\n\t\n\treturn PLUGIN_HANDLED\n}\n\npublic cmdVote(id, level, cid)\n{\n\tif (!cmd_access(id, level, cid, 4))\n\t\treturn PLUGIN_HANDLED\n\t\n\tnew Float:voting = get_cvar_float(\"amx_last_voting\")\n\tif (voting > get_gametime())\n\t{\n\t\tconsole_print(id, \"%L\", id, \"ALREADY_VOTING\")\n\t\treturn PLUGIN_HANDLED\n\t}\n\t\n\tif (voting && voting + get_cvar_float(\"amx_vote_delay\") > get_gametime())\n\t{\n\t\tconsole_print(id, \"%L\", id, \"VOTING_NOT_ALLOW\")\n\t\treturn PLUGIN_HANDLED\n\t}\n\n\tnew quest[48]\n\tread_argv(1, quest, charsmax(quest))\n\t\n\ttrim(quest);\n\t\n\tif (containi(quest, \"sv_password\") != -1 || containi(quest, \"rcon_password\") != -1)\n\t{\n\t\tconsole_print(id, \"%L\", id, \"VOTING_FORBIDDEN\")\n\t\treturn PLUGIN_HANDLED\n\t}\n\t\n\tnew count=read_argc();\n\n\tfor (new i=0;i<4 && (i+2)<count;i++)\n\t{\n\t\tread_argv(i+2, g_optionName[i], charsmax(g_optionName[]));\n\t}\n\n\tnew authid[32], name[MAX_NAME_LENGTH]\n\t\n\tget_user_authid(id, authid, charsmax(authid))\n\tget_user_name(id, name, charsmax(name))\n\tlog_amx(\"Vote: ^\"%s<%d><%s><>^\" vote custom (question ^\"%s^\") (option#1 ^\"%s^\") (option#2 ^\"%s^\")\", name, get_user_userid(id), authid, quest, g_optionName[0], g_optionName[1])\n\n\tnew msg[256];\n\tfor (new i = 1; i <= MaxClients; i++)\n\t{\n\t\tif (is_user_connected(i) && !is_user_bot(i))\n\t\t{\n\t\t\t// HACK: ADMIN_VOTE_CUS_{1,2} keys were designed very poorly.  Remove all : and %s in it.\n\t\t\tLookupLangKey(msg, charsmax(msg), \"ADMIN_VOTE_CUS_1\", i);\n\t\t\treplace_all(msg, charsmax(msg), \"%s\", \"\");\n\t\t\treplace_all(msg, charsmax(msg), \":\", \"\");\n\t\t\ttrim(msg);\n\t\t\tshow_activity_id(i, id, name, msg);\n\t\t}\n\t}\n\n\tnew menu_msg[512], lVote[16]\n\t\n\tformat(lVote, charsmax(lVote), \"%L\", LANG_SERVER, \"VOTE\")\n\t\n\tcount-=2;\n\tif (count>4)\n\t{\n\t\tcount=4;\n\t}\n\t// count now shows how many options were listed\n\tnew keys=0;\n\tfor (new i=0;i<count;i++)\n\t{\n\t\tkeys |= (1<<i);\n\t}\n\t\n\tnew len=formatex(menu_msg, charsmax(menu_msg), g_coloredMenus ? \"\\y%s: %s\\w^n^n\" : \"%s: %s^n^n\", lVote, quest);\n\t\n\tfor (new i=0;i<count;i++)\n\t{\n\t\tlen+=formatex(menu_msg[len], charsmax(menu_msg) - len ,\"%d.  %s^n\",i+1,g_optionName[i]);\n\t}\n\tg_execResult = false\n\t\n\tnew Float:vote_time = get_cvar_float(\"amx_vote_time\") + 2.0\n\t\n\tset_cvar_float(\"amx_last_voting\", get_gametime() + vote_time)\n\tg_voteRatio = get_cvar_float(\"amx_vote_ratio\")\n\treplace_all(quest, charsmax(quest), \"%\", \"\");\n\tformat(g_Answer, charsmax(g_Answer), \"%s - ^\"%%s^\"\", quest)\n\tshow_menu(0, keys, menu_msg, floatround(vote_time), \"Vote: \")\n\tset_task(vote_time, \"checkVotes\", 99889988)\n\tg_voteCaller = id\n\tconsole_print(id, \"%L\", id, \"VOTING_STARTED\")\n\tg_voteCount = {0, 0, 0, 0}\n\tg_yesNoVote = 0\n\t\n\treturn PLUGIN_HANDLED\n}\n\npublic cmdVoteKickBan(id, level, cid)\n{\n\tif (!cmd_access(id, level, cid, 2))\n\t\treturn PLUGIN_HANDLED\n\t\n\tnew Float:voting = get_cvar_float(\"amx_last_voting\")\n\tif (voting > get_gametime())\n\t{\n\t\tconsole_print(id, \"%L\", id, \"ALREADY_VOTING\")\n\t\treturn PLUGIN_HANDLED\n\t}\n\n\tif (voting && voting + get_cvar_float(\"amx_vote_delay\") > get_gametime())\n\t{\n\t\tconsole_print(id, \"%L\", id, \"VOTING_NOT_ALLOW\")\n\t\treturn PLUGIN_HANDLED\n\t}\n\n\tnew cmd[32]\n\t\n\tread_argv(0, cmd, charsmax(cmd))\n\t\n\tnew voteban = equal(cmd, \"amx_voteban\")\n\tnew arg[32]\n\tread_argv(1, arg, charsmax(arg))\n\t\n\tnew player = cmd_target(id, arg, CMDTARGET_OBEY_IMMUNITY | CMDTARGET_ALLOW_SELF)\n\t\n\tif (!player)\n\t\treturn PLUGIN_HANDLED\n\t\n\tif (voteban && is_user_bot(player))\n\t{\n\t\tnew imname[MAX_NAME_LENGTH]\n\t\t\n\t\tget_user_name(player, imname, charsmax(imname))\n\t\tconsole_print(id, \"%L\", id, \"ACTION_PERFORMED\", imname)\n\t\treturn PLUGIN_HANDLED\n\t}\n\n\tnew keys = MENU_KEY_1|MENU_KEY_2\n\tnew menu_msg[256], lYes[16], lNo[16], lKickBan[16]\n\t\n\tformat(lYes, charsmax(lYes), \"%L\", LANG_SERVER, \"YES\") \n\tformat(lNo, charsmax(lNo), \"%L\", LANG_SERVER, \"NO\")\n\tformat(lKickBan, charsmax(lKickBan), \"%L\", LANG_SERVER, voteban ? \"BAN\" : \"KICK\")\n\tucfirst(lKickBan)\n\tget_user_name(player, arg, charsmax(arg))\n\tformat(menu_msg, charsmax(menu_msg), g_coloredMenus ? \"\\y%s %s?\\w^n^n1.  %s^n2.  %s\" : \"%s %s?^n^n1.  %s^n2.  %s\", lKickBan, arg, lYes, lNo)\n\tg_yesNoVote = 1\n\t\n\tnew bool:ipban=false;\n\t\n\tif (voteban)\n\t{\n\t\tget_user_authid(player, g_optionName[0], charsmax(g_optionName[]));\n\t\t\n\t\t// Do the same check that's in plmenu to determine if this should be an IP ban instead\n\t\tif (equal(\"4294967295\", g_optionName[0])\n\t\t\t|| equal(\"HLTV\", g_optionName[0])\n\t\t\t|| equal(\"STEAM_ID_LAN\", g_optionName[0])\n\t\t\t|| equali(\"VALVE_ID_LAN\", g_optionName[0]))\n\t\t{\n\t\t\tget_user_ip(player, g_optionName[0], charsmax(g_optionName[]), 1);\n\t\t\t\n\t\t\tipban=true;\n\t\t}\n\n\t}\n\telse\n\t{\n\t\tnum_to_str(get_user_userid(player), g_optionName[0], charsmax(g_optionName[]))\n\t}\n\t\n\tnew authid[32], name[MAX_NAME_LENGTH]\n\t\n\tget_user_authid(id, authid, charsmax(authid))\n\tget_user_name(id, name, charsmax(name))\n\tlog_amx(\"Vote: ^\"%s<%d><%s><>^\" vote %s (target ^\"%s^\")\", name, get_user_userid(id), authid, voteban ? \"ban\" : \"kick\", arg)\n\n\tnew msg[256];\n\tnew right[256];\n\tnew dummy[1];\n\tfor (new i = 1; i <= MaxClients; i++)\n\t{\n\t\tif (is_user_connected(i) && !is_user_bot(i))\n\t\t{\n\t\t\tformatex(lKickBan, charsmax(lKickBan), \"%L\", i, voteban ? \"BAN\" : \"KICK\");\n\t\t\t\n\t\t\t// HACK: ADMIN_VOTE_FOR{1,2} keys are really weird.  Tokenize and ignore the text before the :\n\t\t\tLookupLangKey(msg, charsmax(msg), \"ADMIN_VOTE_FOR_1\", i);\n\t\t\tstrtok(msg, dummy, 0, right, charsmax(right), ':');\n\t\t\ttrim(right);\n\t\t\tshow_activity_id(i, id, name, right, lKickBan, arg);\n\t\t}\n\t}\n\n\tg_execResult = true\n\t\n\tnew Float:vote_time = get_cvar_float(\"amx_vote_time\") + 2.0\n\t\n\tset_cvar_float(\"amx_last_voting\", get_gametime() + vote_time)\n\tg_voteRatio = get_cvar_float(voteban ? \"amx_voteban_ratio\" : \"amx_votekick_ratio\")\n\n\tif (voteban)\n\t{\n\t\tif (ipban==true)\n\t\t{\n\t\t\tg_Answer = \"addip 30.0 %s\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tg_Answer = \"banid 30.0 %s kick\";\n\n\t\t}\n\t}\n\telse\n\t{\n\t\tg_Answer = \"kick #%s\";\n\t}\n\tshow_menu(0, keys, menu_msg, floatround(vote_time), voteban ? \"Ban \" : \"Kick \")\n\tset_task(vote_time, \"checkVotes\", 99889988)\n\tg_voteCaller = id\n\tconsole_print(id, \"%L\", id, \"VOTING_STARTED\")\n\tg_voteCount = {0, 0, 0, 0}\n\t\n\treturn PLUGIN_HANDLED\n}\n"], "filenames": ["plugins/adminvote.sma"], "buggy_code_start_loc": [241], "buggy_code_end_loc": [242], "fixing_code_start_loc": [241], "fixing_code_end_loc": [245], "type": "CWE-22", "message": "A vulnerability has been found in AlliedModders AMX Mod X and classified as critical. This vulnerability affects the function cmdVoteMap of the file plugins/adminvote.sma of the component Console Command Handler. The manipulation of the argument amx_votemap leads to path traversal. The name of the patch is a5f2b5539f6d61050b68df8b22ebb343a2862681. It is recommended to apply a patch to fix this issue. VDB-217354 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2020-36639", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-04T10:15:10.383", "lastModified": "2023-01-10T17:38:58.630", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability has been found in AlliedModders AMX Mod X and classified as critical. This vulnerability affects the function cmdVoteMap of the file plugins/adminvote.sma of the component Console Command Handler. The manipulation of the argument amx_votemap leads to path traversal. The name of the patch is a5f2b5539f6d61050b68df8b22ebb343a2862681. It is recommended to apply a patch to fix this issue. VDB-217354 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 0.9, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:M/C:P/I:P/A:P", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "MULTIPLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.7}, "baseSeverity": "MEDIUM", "exploitabilityScore": 4.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:alliedmods:amx_mod_x:*:*:*:*:*:*:*:*", "versionEndExcluding": "2020-05-28", "matchCriteriaId": "F7B90C05-64BA-4745-BAF1-D3E887C38FF1"}]}]}], "references": [{"url": "https://github.com/alliedmodders/amxmodx/commit/a5f2b5539f6d61050b68df8b22ebb343a2862681", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/alliedmodders/amxmodx/pull/823", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217354", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217354", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/alliedmodders/amxmodx/commit/a5f2b5539f6d61050b68df8b22ebb343a2862681"}}