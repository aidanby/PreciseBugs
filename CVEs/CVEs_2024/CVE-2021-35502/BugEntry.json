{"buggy_code": ["<?php\n    $data = Hash::extract($row, $field['data_path']);\n    if (is_array($data)) {\n        if (count($data) > 1) {\n            $implodeGlue = isset($field['array_implode_glue']) ? $field['array_implode_glue'] : ', ';\n            $data = implode($implodeGlue, array_map(function($entry) {\n                return h($entry);\n            }, $data));\n        } else {\n            if (count($data) > 0) {\n                $data = $data[0];\n            } else {\n                $data = '';\n            }\n        }\n    } else if (is_bool($data)) {\n        $data = sprintf(\n            '<i class=\"black fa fa-%s\"></i>',\n            $data ? 'check' : 'times'\n        );\n        $data = '';\n    } else {\n        $data = h($data);\n        if (!empty($field['privacy'])) {\n            $data = sprintf(\n                '<span class=\"privacy-value quickSelect\" data-hidden-value=\"%s\">****************************************</span>&nbsp;<i class=\"privacy-toggle fas fa-eye useCursorPointer\" title=\"%s\"></i>',\n                $data,\n                __('Reveal hidden value')\n            );\n        }\n    }\n    if (!empty($field['onClick'])) {\n        $data = sprintf(\n            '<span onClick=\"%s\">%s</span>',\n            $field['onClick'],\n            $data\n        );\n    }\n    echo $data;\n?>\n"], "fixing_code": ["<?php\n    $data = Hash::extract($row, $field['data_path']);\n    if (is_array($data)) {\n        if (count($data) > 1) {\n            $implodeGlue = isset($field['array_implode_glue']) ? $field['array_implode_glue'] : ', ';\n            $data = implode($implodeGlue, array_map(function($entry) {\n                return h($entry);\n            }, $data));\n        } else {\n            if (count($data) > 0) {\n                $data = h($data[0]);\n            } else {\n                $data = '';\n            }\n        }\n    } else if (is_bool($data)) {\n        $data = sprintf(\n            '<i class=\"black fa fa-%s\"></i>',\n            $data ? 'check' : 'times'\n        );\n        $data = '';\n    } else {\n        $data = h($data);\n        if (!empty($field['privacy'])) {\n            $data = sprintf(\n                '<span class=\"privacy-value quickSelect\" data-hidden-value=\"%s\">****************************************</span>&nbsp;<i class=\"privacy-toggle fas fa-eye useCursorPointer\" title=\"%s\"></i>',\n                $data,\n                __('Reveal hidden value')\n            );\n        }\n    }\n    if (!empty($field['onClick'])) {\n        $data = sprintf(\n            '<span onClick=\"%s\">%s</span>',\n            $field['onClick'],\n            $data\n        );\n    }\n    echo $data;\n?>\n"], "filenames": ["app/View/Elements/genericElements/IndexTable/Fields/generic_field.ctp"], "buggy_code_start_loc": [11], "buggy_code_end_loc": [12], "fixing_code_start_loc": [11], "fixing_code_end_loc": [12], "type": "NVD-CWE-noinfo", "message": "app/View/Elements/genericElements/IndexTable/Fields/generic_field.ctp in MISP 2.4.144 does not sanitize certain data related to generic-template:index.", "other": {"cve": {"id": "CVE-2021-35502", "sourceIdentifier": "cve@mitre.org", "published": "2021-06-25T21:15:07.593", "lastModified": "2021-07-01T19:52:03.843", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "app/View/Elements/genericElements/IndexTable/Fields/generic_field.ctp in MISP 2.4.144 does not sanitize certain data related to generic-template:index."}, {"lang": "es", "value": "El archivo app/View/Elements/genericElements/IndexTable/Fields/generic_field.ctp en MISP versi\u00f3n 2.4.144, no sanea determinados datos relacionados con generic-template:index"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:misp:misp:2.4.144:*:*:*:*:*:*:*", "matchCriteriaId": "47CC0F42-920F-4213-8290-92DF0D701267"}]}]}], "references": [{"url": "https://github.com/MISP/MISP/commit/2fde6476dc3173affc61874ba2adb35400a8fda5", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/MISP/MISP/commit/2fde6476dc3173affc61874ba2adb35400a8fda5"}}