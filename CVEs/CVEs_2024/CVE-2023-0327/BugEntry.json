{"buggy_code": ["<?php\nsession_start();\nrequire ('_sessioninfo.php');\n\nfunction redirect() {\n\theader(\"Location: search.php\");\n\texit();\n}\n\nif (!isExpired()) {\n\t// Session is valid\n\tredirect();\n}\n\n// Check for submission post\n// http://www.formget.com/login-form-in-php/\nif (isset($_POST['login'])) {\n\t// Missing fields\n\tif (empty($_POST['user']) || empty($_POST['pass'])) {\n\t\t$message = \"Invalid username/password\";\n\t\t$msg_class = 'error';\n\t} else {\n\t\t// Require a connection to the database.\n\t\trequire ('_database.php');\n\t\t$user = $_POST['user'];\n\t\t$pass = $_POST['pass'];\n\t\t// <-- Bad.\n\n\t\t$query = \"SELECT user_name, class, person_id FROM users WHERE user_name = '$user' AND password = '$pass'\";\n\t\t\n\t\t$statement = oci_parse($connection, $query);\n\t\t$results = oci_execute($statement);\n\n\t\t// Did we get a valid result?\n\t\tif ($results) {\n\t\t\t// Are credentials valid?\n\t\t\tif (oci_fetch($statement)) {\n\t\t\t\t// Yes.\n\t\t\t\t// Store user details in the session\n\t\t\t\t$_SESSION['user_name'] = oci_result($statement, 'USER_NAME');\n\t\t\t\t$_SESSION['class'] = oci_result($statement, 'CLASS');\n\t\t\t\t$_SESSION['person_id'] = oci_result($statement, 'PERSON_ID');\n\t\t\t\t\n\t\t\t\t// Create session and redirect\n\t\t\t\t$_SESSION['_user_session'] = true;\n\t\t\t\t$_SESSION['us_created_time'] = time();\n\t\t\t\t$_SESSION['us_last_activity'] = time();\n\n\t\t\t\t// Clean up database objects\n\t\t\t\toci_free_statement($statement);\n\t\t\t\toci_close($connection);\n\n\t\t\t\t// Redirect to home page\n\t\t\t\tredirect();\n\t\t\t} else {\n\t\t\t\t// No.\n\t\t\t\t// Clean up database objects\n\t\t\t\toci_free_statement($statement);\n\t\t\t\toci_close($connection);\n\t\t\t\t\n\t\t\t\t// Inform the user\n\t\t\t\t$message = 'Incorrect username/password';\n\t\t\t\t$msg_class = 'error';\n\t\t\t}\n\n\t\t} else {\n\t\t\t$message = 'Database error. Please try again later.';\n\t\t\t$msg_class = 'error';\n\t\t\t\n\t\t\t// Clean up database objects\n\t\t\toci_free_statement($statement);\n\t\t\toci_close($connection);\n\t\t}\n\t}\n} else {\n\t// Check if we received info about the error\n\tif (isset($_SESSION['err_message'])) {\n\t\t$message = $_SESSION['err_message'];\n\t\t$msg_class = 'error';\n\t\tunset($_SESSION['err_message']);\n\t} else {\n\t\t$message = 'Login is required.';\n\t\t$msg_class = 'normal';\n\t}\n}\n?>", "/*\n *  File name:  setup.sql\n *  Function:   to create the initial database schema for the CMPUT 391 project,\n *              Winter Term, 2015\n *  Author:     Prof. Li-Yan Yuan\n */\nDROP TABLE family_doctor;\nDROP TABLE pacs_images;\nDROP TABLE radiology_record;\nDROP TABLE users;\nDROP TABLE persons;\nDROP SEQUENCE record_id_seq;\nDROP SEQUENCE image_id_seq;\n\n/*\n *  To store the personal information\n */\nCREATE TABLE persons (\n   person_id int,\n   first_name varchar(24),\n   last_name  varchar(24),\n   address    varchar(128),\n   email      varchar(128),\n   phone      char(10),\n   PRIMARY KEY(person_id),\n   UNIQUE (email)\n);\n\nCREATE SEQUENCE person_id_seq;\n\n/*\n *  To store the log-in information\n *  Note that a person may have been assigned different user_name(s), depending\n *  on his/her role in the log-in  \n */\nCREATE TABLE users (\n   user_name varchar(24),\n   password  varchar(24),\n   class     char(1),\n   person_id int,\n   date_registered date,\n   CHECK (class in ('a','p','d','r')),\n   PRIMARY KEY(user_name),\n   FOREIGN KEY (person_id) REFERENCES persons\n);\n\n/*\n *  to indicate who is whose family doctor.\n */\nCREATE TABLE family_doctor (\n   doctor_id    int,\n   patient_id   int,\n   FOREIGN KEY(doctor_id) REFERENCES persons,\n   FOREIGN KEY(patient_id) REFERENCES persons,\n   PRIMARY KEY(doctor_id,patient_id)\n);\n\n/*\n *  to store the radiology records\n */\nCREATE TABLE radiology_record (\n   record_id   int NOT NULL, \n   patient_id  int,\n   doctor_id   int,\n   radiologist_id int,\n   test_type   varchar(24),\n   prescribing_date date,\n   test_date    date,\n   diagnosis    varchar(128),\n   description   varchar(1024),\n   PRIMARY KEY(record_id),\n   FOREIGN KEY(patient_id) REFERENCES persons,\n   FOREIGN KEY(doctor_id) REFERENCES  persons,\n   FOREIGN KEY(radiologist_id) REFERENCES  persons\n);\n\nCREATE SEQUENCE record_id_seq;\n\n\n/*\n *  to store the pacs images\n */\nCREATE TABLE pacs_images (\n   record_id   int,\n   image_id    int NOT NULL,\n   thumbnail   blob,\n   regular_size blob,\n   full_size    blob,\n   PRIMARY KEY(record_id,image_id),\n   FOREIGN KEY(record_id) REFERENCES radiology_record\n);\n\nCREATE SEQUENCE image_id_seq;\n\nCREATE INDEX descriptionIndex ON radiology_record(description) INDEXTYPE IS CTXSYS.CONTEXT;\n\nCREATE INDEX diagnosisIndex ON radiology_record(diagnosis) INDEXTYPE IS CTXSYS.CONTEXT;\n\nCREATE INDEX testTypeIndex On radiology_record(test_type) INDEXTYPE IS CTXSYS.CONTEXT;\n\nCREATE INDEX firstNameIndex ON persons(first_name) INDEXTYPE IS CTXSYS.CONTEXT;\n\nCREATE INDEX lastNameIndex ON persons(last_name) INDEXTYPE IS CTXSYS.CONTEXT;\n\n/*\n * Insert into the database an admin account to allow initial set up of acounts\n */\n INSERT INTO persons values (000000, 'admin', 'admin', 'admin', 'admin', 'admin');\n INSERT INTO users values ('admin', 'admin', 'a', '0', to_date('2015-04-02', 'YYYY-MM-DD')); \n", "<?php\nrequire_once ('session.php');\nrequireUserClass('a');\n?>\n\n<html>\n\t<body>\n\t\t<a href='index.php'>Home</a>\n\t\t<h1> Users </h1>\n\t\t<p>\n\t\t\t<a href=\"register.php\">Add Account</a>\n\t\t</p>\n\t\t<div>\n\t\t\t<form id=\"searchform\" required=\"1\" name=\"search_users\" method=\"get\" action=\"<?php $PHP_SELF ?>\" >\n\t\t\t\t<input type=\"text\" name=\"q\" />\n\t\t\t\t<input type=\"submit\" value=\"Search\"  />\n\t\t\t</form>\n\t\t</div>\n\t\t<div>\n\t\t\t<?php\n\t\t\tif (isset($_GET['q']) && $_GET['q'] != '') {\n\t\t\t\t$search = $_GET['q'];\n\t\t\t\t$max = 5;\n\t\t\t\t$keys = preg_split(\"/\\s/\", $search, $max);\n\t\t\t\t\n\t\t\t\t$count = count($keys);\n\t\t\t\t\n\t\t\t\t// Build up a query\n\t\t\t\t$query = \"SELECT persons.person_id, user_name, class, date_registered, first_name, last_name, address, email, phone \".\n\t\t\t\t\"FROM users, persons WHERE users.person_id = persons.person_id AND (\";\n\t\t\t\t\n\t\t\t\t// These are the terms we're searching through\n\t\t\t\t$terms = array(\n\t\t\t\t\t\"user_name\",\n\t\t\t\t\t\"first_name\",\n\t\t\t\t\t\"last_name\",\n\t\t\t\t\t\"address\",\n\t\t\t\t\t\"email\",\n\t\t\t\t\t\"phone\"\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\t$operator = \"\";\n\t\t\t\tforeach ($terms as $term) {\n\t\t\t\t\t$query .= $operator.\" UPPER($term) IN (\";\n\t\t\t\t\t$comma = \"\";\n\t\t\t\t\t// Build binding values\n\t\t\t\t\tfor ($i = 0; $i < min($count, $max); $i++) {\n\t\t\t\t\t\t$query .= \"$comma :key$i\";\n\t\t\t\t\t\t$comma = \", \";\n\t\t\t\t\t}\n\t\t\t\t\t$query .= \") \";\n\t\t\t\t\t$operator = \"OR\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$query .= \")\";\n\t\t\t\t\n\t\t\t\trequire('_database.php');\n\t\t\t\t\n\t\t\t\t$statement = oci_parse($connection, $query);\n\t\t\t\t\n\t\t\t\t// Bind keys\n\t\t\t\tfor ($i = 0; $i < min($count, $max); $i++) {\n\t\t\t\t\toci_bind_by_name($statement, \":key$i\", strtoupper($keys[$i]));\n\t\t\t\t}\n\t\t\t\toci_execute($statement);\n\t\t\t\t\n\t\t\t\t$num = 0;\n\n\n\t\t\t?>\n\t\t\t<table border=\"1\">\n\t\t\t\t<?php\n\t\t\t\twhile (oci_fetch($statement)) {\n\t\t\t\t\tif ($num == 0) {\n\t\t\t\t\t\techo \"<tr>\";\n\t\t\t\t\t\tfor ($field = 1; $field <= oci_num_fields($statement); $field++) {\n\t\t\t\t\t\t\techo \"<th>\" . oci_field_name($statement, $field) . \"</th>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\techo \"</tr>\\n\";\n\t\t\t\t\t}\n\t\t\t\t\techo \"<tr>\";\n\t\t\t\t\t$num++;\n\t\t\t\t\t// Link jumps to edit_user div with user id\n\t\t\t\t\techo \"<td><a href='edituser.php?user=\".oci_result($statement, \"USER_NAME\").\"'>\";\n\t\t\t\t\techo oci_result($statement, 1).\"</a></td>\";\n\t\t\t\t\tfor ($field = 2; $field <= oci_num_fields($statement); $field++) {\n\t\t\t\t\t\techo \"<td>\", oci_result($statement, $field), \"</td>\";\n\t\t\t\t\t}\n\n\t\t\t\t\techo \"</tr>\\n\";\n\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</table>\n\t\t\t<?php oci_free_statement($statement);\n\t\t\toci_close($connection);\n\n\t\t\tif ($num == 1) {\n\t\t\t\techo \"<p>Found 1 user</p>\";\n\t\t\t} else {\n\t\t\t\techo \"<p>Found $num users</p>\";\n\t\t\t}\n\t\t\t} else {\n\t\t\t?>\n\t\t\t<p>\n\t\t\t\tUse the search feature above to find users.\n\t\t\t</p>\n\t\t\t<?php } ?>\n\t\t\t\n\t\t</div>\n\t</body>\n</html>\n"], "fixing_code": ["<?php\nsession_start();\nrequire ('_sessioninfo.php');\n\nfunction redirect() {\n\theader(\"Location: search.php\");\n\texit();\n}\n\nif (!isExpired()) {\n\t// Session is valid\n\tredirect();\n}\n\n// Check for submission post\n// http://www.formget.com/login-form-in-php/\nif (isset($_POST['login'])) {\n\t// Missing fields\n\tif (empty($_POST['user']) || empty($_POST['pass'])) {\n\t\t$message = \"Invalid username/password\";\n\t\t$msg_class = 'error';\n\t} else {\n\t\t// Require a connection to the database.\n\t\trequire ('_database.php');\n\t\t$user = $_POST['user'];\n\t\t$pass = $_POST['pass'];\n\n\t\t$query = \"SELECT user_name, class, person_id FROM users WHERE user_name = :username AND password = :password\";\n\t\t\n\t\t$statement = oci_parse($connection, $query);\n\t\toci_bind_by_name($statement, ':username', $user);\n\t\toci_bind_by_name($statement, ':password', $pass);\n\t\t$results = oci_execute($statement);\n\n\t\t// Did we get a valid result?\n\t\tif ($results) {\n\t\t\t// Are credentials valid?\n\t\t\tif (oci_fetch($statement)) {\n\t\t\t\t// Yes.\n\t\t\t\t// Store user details in the session\n\t\t\t\t$_SESSION['user_name'] = oci_result($statement, 'USER_NAME');\n\t\t\t\t$_SESSION['class'] = oci_result($statement, 'CLASS');\n\t\t\t\t$_SESSION['person_id'] = oci_result($statement, 'PERSON_ID');\n\t\t\t\t\n\t\t\t\t// Create session and redirect\n\t\t\t\t$_SESSION['_user_session'] = true;\n\t\t\t\t$_SESSION['us_created_time'] = time();\n\t\t\t\t$_SESSION['us_last_activity'] = time();\n\n\t\t\t\t// Clean up database objects\n\t\t\t\toci_free_statement($statement);\n\t\t\t\toci_close($connection);\n\n\t\t\t\t// Redirect to home page\n\t\t\t\tredirect();\n\t\t\t} else {\n\t\t\t\t// No.\n\t\t\t\t// Clean up database objects\n\t\t\t\toci_free_statement($statement);\n\t\t\t\toci_close($connection);\n\t\t\t\t\n\t\t\t\t// Inform the user\n\t\t\t\t$message = 'Incorrect username/password';\n\t\t\t\t$msg_class = 'error';\n\t\t\t}\n\n\t\t} else {\n\t\t\t$message = 'Database error. Please try again later.';\n\t\t\t$msg_class = 'error';\n\t\t\t\n\t\t\t// Clean up database objects\n\t\t\toci_free_statement($statement);\n\t\t\toci_close($connection);\n\t\t}\n\t}\n} else {\n\t// Check if we received info about the error\n\tif (isset($_SESSION['err_message'])) {\n\t\t$message = $_SESSION['err_message'];\n\t\t$msg_class = 'error';\n\t\tunset($_SESSION['err_message']);\n\t} else {\n\t\t$message = 'Login is required.';\n\t\t$msg_class = 'normal';\n\t}\n}\n?>", "/*\n *  File name:  setup.sql\n *  Function:   to create the initial database schema for the CMPUT 391 project,\n *              Winter Term, 2015\n *  Author:     Prof. Li-Yan Yuan\n */\nDROP TABLE family_doctor;\nDROP TABLE pacs_images;\nDROP TABLE radiology_record;\nDROP TABLE users;\nDROP TABLE persons;\nDROP SEQUENCE record_id_seq;\nDROP SEQUENCE image_id_seq;\nDROP SEQUENCE person_id_seq;\n\n/*\n *  To store the personal information\n */\nCREATE TABLE persons (\n   person_id int,\n   first_name varchar(24),\n   last_name  varchar(24),\n   address    varchar(128),\n   email      varchar(128),\n   phone      char(10),\n   PRIMARY KEY(person_id),\n   UNIQUE (email)\n);\n\nCREATE SEQUENCE person_id_seq;\n\n/*\n *  To store the log-in information\n *  Note that a person may have been assigned different user_name(s), depending\n *  on his/her role in the log-in  \n */\nCREATE TABLE users (\n   user_name varchar(24),\n   password  varchar(24),\n   class     char(1),\n   person_id int,\n   date_registered date,\n   CHECK (class in ('a','p','d','r')),\n   PRIMARY KEY(user_name),\n   FOREIGN KEY (person_id) REFERENCES persons\n);\n\n/*\n *  to indicate who is whose family doctor.\n */\nCREATE TABLE family_doctor (\n   doctor_id    int,\n   patient_id   int,\n   FOREIGN KEY(doctor_id) REFERENCES persons,\n   FOREIGN KEY(patient_id) REFERENCES persons,\n   PRIMARY KEY(doctor_id,patient_id)\n);\n\n/*\n *  to store the radiology records\n */\nCREATE TABLE radiology_record (\n   record_id   int NOT NULL, \n   patient_id  int,\n   doctor_id   int,\n   radiologist_id int,\n   test_type   varchar(24),\n   prescribing_date date,\n   test_date    date,\n   diagnosis    varchar(128),\n   description   varchar(1024),\n   PRIMARY KEY(record_id),\n   FOREIGN KEY(patient_id) REFERENCES persons,\n   FOREIGN KEY(doctor_id) REFERENCES  persons,\n   FOREIGN KEY(radiologist_id) REFERENCES  persons\n);\n\nCREATE SEQUENCE record_id_seq;\n\n\n/*\n *  to store the pacs images\n */\nCREATE TABLE pacs_images (\n   record_id   int,\n   image_id    int NOT NULL,\n   thumbnail   blob,\n   regular_size blob,\n   full_size    blob,\n   PRIMARY KEY(record_id,image_id),\n   FOREIGN KEY(record_id) REFERENCES radiology_record\n);\n\nCREATE SEQUENCE image_id_seq;\n\nCREATE INDEX descriptionIndex ON radiology_record(description) INDEXTYPE IS CTXSYS.CONTEXT;\n\nCREATE INDEX diagnosisIndex ON radiology_record(diagnosis) INDEXTYPE IS CTXSYS.CONTEXT;\n\nCREATE INDEX testTypeIndex On radiology_record(test_type) INDEXTYPE IS CTXSYS.CONTEXT;\n\nCREATE INDEX firstNameIndex ON persons(first_name) INDEXTYPE IS CTXSYS.CONTEXT;\n\nCREATE INDEX lastNameIndex ON persons(last_name) INDEXTYPE IS CTXSYS.CONTEXT;\n\n/*\n * Insert into the database an admin account to allow initial set up of acounts\n */\n INSERT INTO persons values (000000, 'admin', 'admin', 'admin', 'admin', 'admin');\n INSERT INTO users values ('admin', 'admin', 'a', '0', to_date('2015-04-02', 'YYYY-MM-DD')); \n", "<?php\nrequire_once ('session.php');\nrequireUserClass('a');\n?>\n\n<html>\n\t<body>\n\t\t<a href='index.php'>Home</a>\n\t\t<h1> Users </h1>\n\t\t<p>\n\t\t\t<a href=\"register.php\">Add Account</a>\n\t\t</p>\n\t\t<div>\n\t\t\t<form id=\"searchform\" required=\"1\" name=\"search_users\" method=\"get\" action=\"<?php $PHP_SELF ?>\" >\n\t\t\t\t<input type=\"text\" name=\"q\" value=\"<?php echo $_GET['q']; ?>\" />\n\t\t\t\t<input type=\"submit\" value=\"Search\"  />\n\t\t\t</form>\n\t\t</div>\n\t\t<div>\n\t\t\t<?php\n\t\t\tif (isset($_GET['q']) && $_GET['q'] != '') {\n\t\t\t\t$search = $_GET['q'];\n\t\t\t\t$max = 5;\n\t\t\t\t$keys = preg_split(\"/\\s/\", $search, $max);\n\t\t\t\t\n\t\t\t\t$count = count($keys);\n\t\t\t\t\n\t\t\t\t// Build up a query\n\t\t\t\t$query = \"SELECT persons.person_id, user_name, class, date_registered, first_name, last_name, address, email, phone \".\n\t\t\t\t\"FROM users, persons WHERE users.person_id = persons.person_id AND (\";\n\t\t\t\t\n\t\t\t\t// These are the terms we're searching through\n\t\t\t\t$terms = array(\n\t\t\t\t\t\"user_name\",\n\t\t\t\t\t\"first_name\",\n\t\t\t\t\t\"last_name\",\n\t\t\t\t\t\"address\",\n\t\t\t\t\t\"email\",\n\t\t\t\t\t\"phone\"\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\t$operator = \"\";\n\t\t\t\tforeach ($terms as $term) {\n\t\t\t\t\t$query .= $operator.\" UPPER($term) IN (\";\n\t\t\t\t\t$comma = \"\";\n\t\t\t\t\t// Build binding values\n\t\t\t\t\tfor ($i = 0; $i < min($count, $max); $i++) {\n\t\t\t\t\t\t$query .= \"$comma :key$i\";\n\t\t\t\t\t\t$comma = \", \";\n\t\t\t\t\t}\n\t\t\t\t\t$query .= \") \";\n\t\t\t\t\t$operator = \"OR\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$query .= \")\";\n\t\t\t\t\n\t\t\t\trequire('_database.php');\n\t\t\t\t\n\t\t\t\t$statement = oci_parse($connection, $query);\n\t\t\t\t\n\t\t\t\t// Bind keys\n\t\t\t\tfor ($i = 0; $i < min($count, $max); $i++) {\n\t\t\t\t\toci_bind_by_name($statement, \":key$i\", strtoupper($keys[$i]));\n\t\t\t\t}\n\t\t\t\toci_execute($statement);\n\t\t\t\t\n\t\t\t\t$num = 0;\n\n\n\t\t\t?>\n\t\t\t<table border=\"1\">\n\t\t\t\t<?php\n\t\t\t\twhile (oci_fetch($statement)) {\n\t\t\t\t\tif ($num == 0) {\n\t\t\t\t\t\techo \"<tr>\";\n\t\t\t\t\t\tfor ($field = 1; $field <= oci_num_fields($statement); $field++) {\n\t\t\t\t\t\t\techo \"<th>\" . oci_field_name($statement, $field) . \"</th>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\techo \"</tr>\\n\";\n\t\t\t\t\t}\n\t\t\t\t\techo \"<tr>\";\n\t\t\t\t\t$num++;\n\t\t\t\t\t// Link jumps to edit_user div with user id\n\t\t\t\t\techo \"<td><a href='edituser.php?user=\".oci_result($statement, \"USER_NAME\").\"'>\";\n\t\t\t\t\techo oci_result($statement, 1).\"</a></td>\";\n\t\t\t\t\tfor ($field = 2; $field <= oci_num_fields($statement); $field++) {\n\t\t\t\t\t\techo \"<td>\", oci_result($statement, $field), \"</td>\";\n\t\t\t\t\t}\n\n\t\t\t\t\techo \"</tr>\\n\";\n\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</table>\n\t\t\t<?php oci_free_statement($statement);\n\t\t\toci_close($connection);\n\n\t\t\tif ($num == 1) {\n\t\t\t\techo \"<p>Found 1 user</p>\";\n\t\t\t} else {\n\t\t\t\techo \"<p>Found $num users</p>\";\n\t\t\t}\n\t\t\t} else {\n\t\t\t?>\n\t\t\t<p>\n\t\t\t\tUse the search feature above to find users.\n\t\t\t</p>\n\t\t\t<?php } ?>\n\t\t\t\n\t\t</div>\n\t</body>\n</html>\n"], "filenames": ["_login.php", "setup.sql", "users.php"], "buggy_code_start_loc": [27, 13, 15], "buggy_code_end_loc": [31, 13, 16], "fixing_code_start_loc": [26, 14, 15], "fixing_code_end_loc": [33, 15, 16], "type": "CWE-79", "message": "A vulnerability was found in saemorris TheRadSystem. It has been classified as problematic. Affected is an unknown function of the file users.php. The manipulation of the argument q leads to cross site scripting. It is possible to launch the attack remotely. VDB-218454 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2023-0327", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-16T19:15:10.433", "lastModified": "2023-01-24T20:01:40.793", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in saemorris TheRadSystem. It has been classified as problematic. Affected is an unknown function of the file users.php. The manipulation of the argument q leads to cross site scripting. It is possible to launch the attack remotely. VDB-218454 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:theradsystem_project:theradsystem:*:*:*:*:*:*:*:*", "versionEndExcluding": "2015-04-03", "matchCriteriaId": "670CD729-A733-4C42-A60C-3C21F185958C"}]}]}], "references": [{"url": "https://github.com/saemorris/TheRadSystem/commit/bfba26bd34af31648a11af35a0bb66f1948752a6", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.218454", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.218454", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/saemorris/TheRadSystem/commit/bfba26bd34af31648a11af35a0bb66f1948752a6"}}