{"buggy_code": ["/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.appwithinminutes.test.ui;\n\nimport java.util.Arrays;\n\nimport org.apache.commons.lang3.RandomStringUtils;\nimport org.junit.jupiter.api.BeforeAll;\nimport org.junit.jupiter.api.Test;\nimport org.xwiki.appwithinminutes.test.po.ApplicationClassEditPage;\nimport org.xwiki.appwithinminutes.test.po.ApplicationCreatePage;\nimport org.xwiki.appwithinminutes.test.po.ApplicationHomeEditPage;\nimport org.xwiki.appwithinminutes.test.po.ApplicationHomePage;\nimport org.xwiki.appwithinminutes.test.po.ClassFieldEditPane;\nimport org.xwiki.appwithinminutes.test.po.EntryEditPage;\nimport org.xwiki.appwithinminutes.test.po.EntryNamePane;\nimport org.xwiki.model.reference.LocalDocumentReference;\nimport org.xwiki.test.docker.junit5.UITest;\nimport org.xwiki.test.ui.TestUtils;\nimport org.xwiki.test.ui.po.EditablePropertyPane;\nimport org.xwiki.test.ui.po.LiveTableElement;\nimport org.xwiki.test.ui.po.ViewPage;\nimport org.xwiki.test.ui.po.editor.WikiEditPage;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\n/**\n * Tests the special document fields available in the class editor, such as Title and Content.\n * \n * @version $Id$\n * @since 12.10.11\n * @since 13.4.6\n * @since 13.10RC1\n */\n@UITest(properties = {\n    // Exclude the AppWithinMinutes.ClassEditSheet and AppWithinMinutes.DynamicMessageTool from the PR checker since \n    // they use the groovy macro which requires PR rights.\n    // TODO: Should be removed once XWIKI-20529 is closed.\n    // Exclude AppWithinMinutes.LiveTableEditSheet because it calls com.xpn.xwiki.api.Document.saveWithProgrammingRights\n    \"xwikiPropertiesAdditionalProperties=test.prchecker.excludePattern=.*:AppWithinMinutes\\\\.(ClassEditSheet|DynamicMessageTool|LiveTableEditSheet)\"\n})\nclass DocumentFieldsIT\n{\n    @BeforeAll\n    static void beforeAll(TestUtils setup)\n    {\n        // By default the minimal distribution used for the tests doesn't have any rights setup. Let's create an Admin\n        // user part of the Admin Group and make sure that this Admin Group has admin rights in the wiki. We could also\n        // have given that Admin user the admin right directly but the solution we chose is closer to the XS\n        // distribution.\n        setup.loginAsSuperAdmin();\n        setup.setGlobalRights(\"XWiki.XWikiAdminGroup\", \"\", \"admin\", true);\n        setup.createAdminUser();\n        setup.loginAsAdmin();\n    }\n\n    @Test\n    void titleAndContent(TestUtils setup)\n    {\n        setup.loginAsAdmin();\n\n        // Create a new application.\n        String appName = RandomStringUtils.randomAlphabetic(6);\n        ApplicationCreatePage appCreatePage = ApplicationCreatePage.gotoPage();\n        appCreatePage.setApplicationName(appName);\n        ApplicationClassEditPage classEditPage = appCreatePage.clickNextStep();\n\n        // Add a standard field.\n        ClassFieldEditPane numberField = classEditPage.addField(\"Number\");\n\n        // Add the Title and Content fields.\n        ClassFieldEditPane titleField = classEditPage.addField(\"Title\");\n        ClassFieldEditPane contentField = classEditPage.addField(\"Content\");\n\n        // Change the default field pretty names.\n        // See XWIKI-9154: The application live table uses the standard 'Page title' heading instead of the pretty name\n        // set for the Title field\n        titleField.setPrettyName(\"My Title\");\n        contentField.setPrettyName(\"My Content\");\n\n        // Set the default values that will be saved in the template.\n        numberField.setDefaultValue(\"13\");\n        String defaultTitle = \"Enter title here\";\n        titleField.setDefaultValue(defaultTitle);\n        String defaultContent = \"Enter content here\";\n        contentField.setDefaultValue(defaultContent);\n\n        // Add live table columns for Title and Content.\n        ApplicationHomeEditPage homeEditPage = classEditPage.clickNextStep().clickNextStep();\n        homeEditPage.addLiveTableColumn(\"My Title\");\n        homeEditPage.addLiveTableColumn(\"My Content\");\n\n        // Add an application entry.\n        EntryNamePane entryNamePane = homeEditPage.clickFinish().clickAddNewEntry();\n        entryNamePane.setName(\"Test\");\n        EntryEditPage entryEditPage = entryNamePane.clickAdd();\n        assertEquals(\"13\", entryEditPage.getValue(\"number1\"));\n        // The page name is used as the default value for the title field.\n        assertEquals(\"Test\", entryEditPage.getDocumentTitle());\n        assertEquals(\"Test\", entryEditPage.getTitle());\n        entryEditPage.setTitle(\"Foo\");\n        assertEquals(defaultContent, entryEditPage.getContent());\n        entryEditPage.setContent(\"Bar\");\n\n        // Check that the title and the content of the entry have been updated.\n        ViewPage entryViewPage = entryEditPage.clickSaveAndView();\n        assertEquals(\"Foo\", entryViewPage.getDocumentTitle());\n        assertTrue(entryViewPage.getContent().contains(\"Bar\"));\n\n        // Verify that we can edit the document fields in-place.\n        String propertyReference = String.format(\"%s.Code.%1$sClass[0].title1\", appName);\n        EditablePropertyPane<String> titleProperty = new EditablePropertyPane<>(propertyReference);\n        assertEquals(\"Foo\", titleProperty.clickEdit().getValue());\n        titleProperty.setValue(\"Book\").clickSave();\n        assertEquals(\"Book\", titleProperty.getDisplayValue());\n\n        // Check the entries live table.\n        entryViewPage.clickBreadcrumbLink(appName);\n        LiveTableElement liveTable = new ApplicationHomePage().getEntriesLiveTable();\n        liveTable.waitUntilReady();\n        assertEquals(1, liveTable.getRowCount());\n        assertTrue(liveTable.hasRow(\"My Title\", \"Book\"));\n        assertTrue(liveTable.hasRow(\"My Content\", \"Bar\"));\n\n        // Check that the title and the content of the class have not been changed.\n        setup.gotoPage(new LocalDocumentReference(Arrays.asList(appName, \"Code\"), appName + \"Class\"), \"edit\",\n            \"editor=wiki\");\n        WikiEditPage editPage = new WikiEditPage();\n        assertEquals(appName + \" Class\", editPage.getTitle());\n        assertEquals(\"\", editPage.getContent());\n\n        // Now edit the class and check if the default values for title and content are taken from the template.\n        editPage.edit();\n        assertEquals(defaultTitle, new ClassFieldEditPane(\"title1\").getDefaultValue());\n        assertEquals(defaultContent, new ClassFieldEditPane(\"content1\").getDefaultValue());\n    }\n}\n", "<?xml version=\"1.1\" encoding=\"UTF-8\"?>\n\n<!--\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n-->\n\n<xwikidoc version=\"1.2\" reference=\"AppWithinMinutes.Content\" locale=\"\">\n  <web>AppWithinMinutes</web>\n  <name>Content</name>\n  <language/>\n  <defaultLanguage/>\n  <translation>0</translation>\n  <creator>xwiki:XWiki.Admin</creator>\n  <parent>AppWithinMinutes.FormFieldClass</parent>\n  <author>xwiki:XWiki.Admin</author>\n  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>\n  <version>1.1</version>\n  <title>$services.localization.render('platform.appwithinminutes.classEditorContentFieldName')</title>\n  <comment/>\n  <minorEdit>false</minorEdit>\n  <syntaxId>xwiki/2.1</syntaxId>\n  <hidden>true</hidden>\n  <content>{{velocity}}\n#if ($type == 'edit')\n  #set ($className = $object.getxWikiClass().name)\n  #if ($doc.fullName == $className)\n    ## We are editing the class so the content must be read from / written to the template document.\n    #set ($name = 'templateContent')\n    #set ($editedDocument = $xwiki.getDocument(\"$stringtool.removeEnd($className, 'Class')Template\"))\n    ## Don't load the WYSIWYG editor when editing the class, because it's too heavy.\n    #set ($useWysiwygEditor = false)\n  #else\n    ## We are editing an application entry so the content must be read from / written to the current document.\n    #set ($name = 'content')\n    #set ($editedDocument = $tdoc)\n    ## Use the preferred content editor.\n    #set ($useWysiwygEditor = $xwiki.getUserPreference('editor') == 'Wysiwyg')\n  #end\n  {{html clean=\"false\"}}\n  ## The \"content\" id is expected by some JavaScript and CSS code.\n  #set ($id = 'content')\n  #if (!$useWysiwygEditor)\n    &lt;div id=\"xwikieditcontentinner\"&gt;\n      ## The tool bar may have an entry to insert an HTML macro. Make sure it doesn't break the HTML macro we are currently in.\n      #set ($toolBar = \"#template('simpleedittoolbar.vm')\")\n      $!toolBar.replace('{{', '&amp;#123;&amp;#123;')\n      ## Display a simple textarea.\n      &lt;textarea id=\"$id\" cols=\"80\" rows=\"25\" name=\"$name\"&gt;$escapetool.xml($editedDocument.content)&lt;/textarea&gt;\n  #end\n  #if ($useWysiwygEditor)\n    $!services.edit.syntaxContent.wysiwyg($editedDocument.content, $editedDocument.syntax, {\n      'id': \"$id\",\n      'name': \"$name\",\n      'rows': 25,\n      'cols': 80,\n      'full': true\n    })\n  #else\n    &lt;/div&gt;\n  #end\n  {{/html}}\n#elseif (\"$!type\" != '')\n  ## Include the content of the current document.\n  ## Escape {{ in the rendered content to be sure that the HTML macro is not closed unintentionally.\n  {{html}}$tdoc.getRenderedContent($tdoc.content, $tdoc.syntax.toIdString()).replace('{{', '&amp;amp;#123;&amp;amp;#123;'){{/html}}\n#else\n  The display mode is not specified!\n#end\n{{/velocity}}</content>\n  <class>\n    <name>AppWithinMinutes.Content</name>\n    <customClass/>\n    <customMapping/>\n    <defaultViewSheet/>\n    <defaultEditSheet/>\n    <defaultWeb/>\n    <nameField/>\n    <validationScript/>\n    <content>\n      <customDisplay>{{include reference=\"AppWithinMinutes.Content\"/}}</customDisplay>\n      <disabled>0</disabled>\n      <name>content</name>\n      <number>1</number>\n      <prettyName>Content</prettyName>\n      <script/>\n      <unmodifiable>0</unmodifiable>\n      <validationMessage/>\n      <validationRegExp/>\n      <classType>com.xpn.xwiki.objects.classes.ComputedFieldClass</classType>\n    </content>\n  </class>\n  <object>\n    <name>AppWithinMinutes.Content</name>\n    <number>0</number>\n    <className>AppWithinMinutes.FormFieldClass</className>\n    <guid>1fc40ef2-e504-46e2-a651-ec26727d2f93</guid>\n    <class>\n      <name>AppWithinMinutes.FormFieldClass</name>\n      <customClass/>\n      <customMapping/>\n      <defaultViewSheet/>\n      <defaultEditSheet/>\n      <defaultWeb/>\n      <nameField/>\n      <validationScript/>\n      <category>\n        <cache>0</cache>\n        <classname>AppWithinMinutes.FormFieldCategoryClass</classname>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <displayType>select</displayType>\n        <idField/>\n        <multiSelect>0</multiSelect>\n        <name>category</name>\n        <number>2</number>\n        <picker>0</picker>\n        <prettyName>Category</prettyName>\n        <relationalStorage>0</relationalStorage>\n        <separator> </separator>\n        <separators/>\n        <size>1</size>\n        <sort>none</sort>\n        <sql/>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <valueField/>\n        <classType>com.xpn.xwiki.objects.classes.DBListClass</classType>\n      </category>\n      <icon>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <name>icon</name>\n        <number>2</number>\n        <picker>0</picker>\n        <prettyName>Icon</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </icon>\n      <priority>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <name>priority</name>\n        <number>3</number>\n        <numberType>long</numberType>\n        <prettyName>Priority</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.NumberClass</classType>\n      </priority>\n      <properties>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <name>properties</name>\n        <number>5</number>\n        <picker>0</picker>\n        <prettyName>Properties</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </properties>\n    </class>\n    <property>\n      <category>AppWithinMinutes.Document</category>\n    </property>\n    <property>\n      <icon>edit</icon>\n    </property>\n    <property>\n      <priority>0</priority>\n    </property>\n    <property>\n      <properties/>\n    </property>\n  </object>\n</xwikidoc>\n"], "fixing_code": ["/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.appwithinminutes.test.ui;\n\nimport java.util.Arrays;\n\nimport org.apache.commons.lang3.RandomStringUtils;\nimport org.junit.jupiter.api.BeforeAll;\nimport org.junit.jupiter.api.Order;\nimport org.junit.jupiter.api.Test;\nimport org.xwiki.appwithinminutes.test.po.ApplicationClassEditPage;\nimport org.xwiki.appwithinminutes.test.po.ApplicationCreatePage;\nimport org.xwiki.appwithinminutes.test.po.ApplicationHomeEditPage;\nimport org.xwiki.appwithinminutes.test.po.ApplicationHomePage;\nimport org.xwiki.appwithinminutes.test.po.ClassFieldEditPane;\nimport org.xwiki.appwithinminutes.test.po.EntryEditPage;\nimport org.xwiki.appwithinminutes.test.po.EntryNamePane;\nimport org.xwiki.model.reference.LocalDocumentReference;\nimport org.xwiki.test.docker.junit5.UITest;\nimport org.xwiki.test.ui.TestUtils;\nimport org.xwiki.test.ui.po.EditablePropertyPane;\nimport org.xwiki.test.ui.po.LiveTableElement;\nimport org.xwiki.test.ui.po.ViewPage;\nimport org.xwiki.test.ui.po.editor.WikiEditPage;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\n/**\n * Tests the special document fields available in the class editor, such as Title and Content.\n * \n * @version $Id$\n * @since 12.10.11\n * @since 13.4.6\n * @since 13.10RC1\n */\n@UITest(properties = {\n    // Exclude the AppWithinMinutes.ClassEditSheet and AppWithinMinutes.DynamicMessageTool from the PR checker since\n    // they use the groovy macro which requires PR rights.\n    // TODO: Should be removed once XWIKI-20529 is closed.\n    // Exclude AppWithinMinutes.LiveTableEditSheet because it calls com.xpn.xwiki.api.Document.saveWithProgrammingRights\n    \"xwikiPropertiesAdditionalProperties=test.prchecker.excludePattern=.*:AppWithinMinutes\\\\.(ClassEditSheet|DynamicMessageTool|LiveTableEditSheet)\"})\nclass DocumentFieldsIT\n{\n    private String appName = RandomStringUtils.randomAlphabetic(6);\n\n    @BeforeAll\n    static void beforeAll(TestUtils setup)\n    {\n        // By default the minimal distribution used for the tests doesn't have any rights setup. Let's create an Admin\n        // user part of the Admin Group and make sure that this Admin Group has admin rights in the wiki. We could also\n        // have given that Admin user the admin right directly but the solution we chose is closer to the XS\n        // distribution.\n        setup.loginAsSuperAdmin();\n        setup.setGlobalRights(\"XWiki.XWikiAdminGroup\", \"\", \"admin\", true);\n        setup.createAdminUser();\n        setup.loginAsAdmin();\n    }\n\n    @Test\n    @Order(1)\n    void titleAndContent(TestUtils setup)\n    {\n        // Create a new application.\n        ApplicationCreatePage appCreatePage = ApplicationCreatePage.gotoPage();\n        appCreatePage.setApplicationName(this.appName);\n        ApplicationClassEditPage classEditPage = appCreatePage.clickNextStep();\n\n        // Add a standard field.\n        ClassFieldEditPane numberField = classEditPage.addField(\"Number\");\n\n        // Add the Title and Content fields.\n        ClassFieldEditPane titleField = classEditPage.addField(\"Title\");\n        ClassFieldEditPane contentField = classEditPage.addField(\"Content\");\n\n        // Change the default field pretty names.\n        // See XWIKI-9154: The application live table uses the standard 'Page title' heading instead of the pretty name\n        // set for the Title field\n        titleField.setPrettyName(\"My Title\");\n        contentField.setPrettyName(\"My Content\");\n\n        // Set the default values that will be saved in the template.\n        numberField.setDefaultValue(\"13\");\n        String defaultTitle = \"Enter title here\";\n        titleField.setDefaultValue(defaultTitle);\n        String defaultContent = \"Enter content here\";\n        contentField.setDefaultValue(defaultContent);\n\n        // Add live table columns for Title and Content.\n        ApplicationHomeEditPage homeEditPage = classEditPage.clickNextStep().clickNextStep();\n        homeEditPage.addLiveTableColumn(\"My Title\");\n        homeEditPage.addLiveTableColumn(\"My Content\");\n\n        // Add an application entry.\n        EntryNamePane entryNamePane = homeEditPage.clickFinish().clickAddNewEntry();\n        entryNamePane.setName(\"Test\");\n        EntryEditPage entryEditPage = entryNamePane.clickAdd();\n        assertEquals(\"13\", entryEditPage.getValue(\"number1\"));\n        // The page name is used as the default value for the title field.\n        assertEquals(\"Test\", entryEditPage.getDocumentTitle());\n        assertEquals(\"Test\", entryEditPage.getTitle());\n        entryEditPage.setTitle(\"Foo\");\n        assertEquals(defaultContent, entryEditPage.getContent());\n        entryEditPage.setContent(\"Bar\");\n\n        // Check that the title and the content of the entry have been updated.\n        ViewPage entryViewPage = entryEditPage.clickSaveAndView();\n        assertEquals(\"Foo\", entryViewPage.getDocumentTitle());\n        assertTrue(entryViewPage.getContent().contains(\"Bar\"));\n\n        // Verify that we can edit the document fields in-place.\n        String propertyReference = String.format(\"%s.Code.%1$sClass[0].title1\", this.appName);\n        EditablePropertyPane<String> titleProperty = new EditablePropertyPane<>(propertyReference);\n        assertEquals(\"Foo\", titleProperty.clickEdit().getValue());\n        titleProperty.setValue(\"Book\").clickSave();\n        assertEquals(\"Book\", titleProperty.getDisplayValue());\n\n        // Check the entries live table.\n        entryViewPage.clickBreadcrumbLink(this.appName);\n        LiveTableElement liveTable = new ApplicationHomePage().getEntriesLiveTable();\n        liveTable.waitUntilReady();\n        assertEquals(1, liveTable.getRowCount());\n        assertTrue(liveTable.hasRow(\"My Title\", \"Book\"));\n        assertTrue(liveTable.hasRow(\"My Content\", \"Bar\"));\n\n        // Check that the title and the content of the class have not been changed.\n        setup.gotoPage(new LocalDocumentReference(Arrays.asList(this.appName, \"Code\"), this.appName + \"Class\"), \"edit\",\n            \"editor=wiki\");\n        WikiEditPage editPage = new WikiEditPage();\n        assertEquals(this.appName + \" Class\", editPage.getTitle());\n        assertEquals(\"\", editPage.getContent());\n\n        // Now edit the class and check if the default values for title and content are taken from the template.\n        editPage.edit();\n        assertEquals(defaultTitle, new ClassFieldEditPane(\"title1\").getDefaultValue());\n        assertEquals(defaultContent, new ClassFieldEditPane(\"content1\").getDefaultValue());\n    }\n\n    @Test\n    @Order(2)\n    void contentFromSimpleUser(TestUtils setup)\n    {\n        // Create an application entry with a simple user that doesn't have script rights.\n        setup.createUserAndLogin(\"Alice\", \"pass\");\n\n        ApplicationHomePage appHomePage = ApplicationHomePage.gotoPage(this.appName);\n        appHomePage.getEntriesLiveTable().waitUntilReady();\n\n        EntryNamePane entryNamePage = appHomePage.clickAddNewEntry();\n        entryNamePage.setName(\"ByAlice\");\n\n        EntryEditPage entryEditPage = entryNamePage.clickAdd();\n        entryEditPage.setTitle(\"Title by $services.localization.render('Alice')\");\n        entryEditPage.setContent(\"Content by {{velocity}}$services.localization.render('Alice'){{/velocity}}\");\n\n        ViewPage entryViewPage = entryEditPage.clickSaveAndView();\n        assertEquals(\"Title by $services.localization.render('Alice')\", entryViewPage.getDocumentTitle());\n        assertTrue(entryViewPage.getContent().contains(\"Content by\"));\n        assertTrue(entryViewPage.getContent().contains(\"The execution of the [velocity] script macro is not allowed\"));\n    }\n}\n", "<?xml version=\"1.1\" encoding=\"UTF-8\"?>\n\n<!--\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n-->\n\n<xwikidoc version=\"1.5\" reference=\"AppWithinMinutes.Content\" locale=\"\">\n  <web>AppWithinMinutes</web>\n  <name>Content</name>\n  <language/>\n  <defaultLanguage/>\n  <translation>0</translation>\n  <creator>xwiki:XWiki.Admin</creator>\n  <parent>AppWithinMinutes.FormFieldClass</parent>\n  <author>xwiki:XWiki.Admin</author>\n  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>\n  <version>1.1</version>\n  <title>$services.localization.render('platform.appwithinminutes.classEditorContentFieldName')</title>\n  <comment/>\n  <minorEdit>false</minorEdit>\n  <syntaxId>xwiki/2.1</syntaxId>\n  <hidden>true</hidden>\n  <content>{{velocity}}\n#if ($type == 'edit')\n  #set ($className = $object.getxWikiClass().name)\n  #if ($doc.fullName == $className)\n    ## We are editing the class so the content must be read from / written to the template document.\n    #set ($name = 'templateContent')\n    #set ($editedDocument = $xwiki.getDocument(\"$stringtool.removeEnd($className, 'Class')Template\"))\n    ## Don't load the WYSIWYG editor when editing the class, because it's too heavy.\n    #set ($useWysiwygEditor = false)\n  #else\n    ## We are editing an application entry so the content must be read from / written to the current document.\n    #set ($name = 'content')\n    #set ($editedDocument = $tdoc)\n    ## Use the preferred content editor.\n    #set ($useWysiwygEditor = $xwiki.getUserPreference('editor') == 'Wysiwyg')\n  #end\n  {{html clean=\"false\"}}\n  ## The \"content\" id is expected by some JavaScript and CSS code.\n  #set ($id = 'content')\n  #if (!$useWysiwygEditor)\n    &lt;div id=\"xwikieditcontentinner\"&gt;\n      ## The tool bar may have an entry to insert an HTML macro. Make sure it doesn't break the HTML macro we are currently in.\n      #set ($toolBar = \"#template('simpleedittoolbar.vm')\")\n      $!toolBar.replace('{{', '&amp;#123;&amp;#123;')\n      ## Display a simple textarea.\n      &lt;textarea id=\"$id\" cols=\"80\" rows=\"25\" name=\"$name\"&gt;$escapetool.xml($editedDocument.content)&lt;/textarea&gt;\n  #end\n  #if ($useWysiwygEditor)\n    $!services.edit.syntaxContent.wysiwyg($editedDocument.content, $editedDocument.syntax, {\n      'id': \"$id\",\n      'name': \"$name\",\n      'rows': 25,\n      'cols': 80,\n      'full': true\n    })\n  #else\n    &lt;/div&gt;\n  #end\n  {{/html}}\n#elseif (\"$!type\" != '')\n  ## Display the content of the current document without using any sheet. We can't use the include macro here (with the\n  ## author parameter) because the content may have unsaved changes (e.g. on preview action). We make sure that the HTML\n  ## macro is not closed unintentionally, even though the XHTML printer protects us against this, just to be extra safe.\n  {{html}}$services.display.content($tdoc, {\n    'displayerHint': 'default'\n  }).replace('{{/html}}', '&amp;amp;#123;&amp;amp;#123;/html&amp;amp;#125;&amp;amp;#125;'){{/html}}\n#else\n  The display mode is not specified!\n#end\n{{/velocity}}</content>\n  <class>\n    <name>AppWithinMinutes.Content</name>\n    <customClass/>\n    <customMapping/>\n    <defaultViewSheet/>\n    <defaultEditSheet/>\n    <defaultWeb/>\n    <nameField/>\n    <validationScript/>\n    <content>\n      <customDisplay>{{include reference=\"AppWithinMinutes.Content\"/}}</customDisplay>\n      <disabled>0</disabled>\n      <name>content</name>\n      <number>1</number>\n      <prettyName>Content</prettyName>\n      <script/>\n      <unmodifiable>0</unmodifiable>\n      <validationMessage/>\n      <validationRegExp/>\n      <classType>com.xpn.xwiki.objects.classes.ComputedFieldClass</classType>\n    </content>\n  </class>\n  <object>\n    <name>AppWithinMinutes.Content</name>\n    <number>0</number>\n    <className>AppWithinMinutes.FormFieldClass</className>\n    <guid>1fc40ef2-e504-46e2-a651-ec26727d2f93</guid>\n    <class>\n      <name>AppWithinMinutes.FormFieldClass</name>\n      <customClass/>\n      <customMapping/>\n      <defaultViewSheet/>\n      <defaultEditSheet/>\n      <defaultWeb/>\n      <nameField/>\n      <validationScript/>\n      <category>\n        <cache>0</cache>\n        <classname>AppWithinMinutes.FormFieldCategoryClass</classname>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <displayType>select</displayType>\n        <idField/>\n        <multiSelect>0</multiSelect>\n        <name>category</name>\n        <number>2</number>\n        <picker>0</picker>\n        <prettyName>Category</prettyName>\n        <relationalStorage>0</relationalStorage>\n        <separator> </separator>\n        <separators/>\n        <size>1</size>\n        <sort>none</sort>\n        <sql/>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <valueField/>\n        <classType>com.xpn.xwiki.objects.classes.DBListClass</classType>\n      </category>\n      <icon>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <name>icon</name>\n        <number>2</number>\n        <picker>0</picker>\n        <prettyName>Icon</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </icon>\n      <priority>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <name>priority</name>\n        <number>3</number>\n        <numberType>long</numberType>\n        <prettyName>Priority</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.NumberClass</classType>\n      </priority>\n      <properties>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <name>properties</name>\n        <number>5</number>\n        <picker>0</picker>\n        <prettyName>Properties</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </properties>\n    </class>\n    <property>\n      <category>AppWithinMinutes.Document</category>\n    </property>\n    <property>\n      <icon>edit</icon>\n    </property>\n    <property>\n      <priority>0</priority>\n    </property>\n    <property>\n      <properties/>\n    </property>\n  </object>\n</xwikidoc>\n"], "filenames": ["xwiki-platform-core/xwiki-platform-appwithinminutes/xwiki-platform-appwithinminutes-test/xwiki-platform-appwithinminutes-test-docker/src/test/it/org/xwiki/appwithinminutes/test/ui/DocumentFieldsIT.java", "xwiki-platform-core/xwiki-platform-appwithinminutes/xwiki-platform-appwithinminutes-ui/src/main/resources/AppWithinMinutes/Content.xml"], "buggy_code_start_loc": [25, 23], "buggy_code_end_loc": [154, 82], "fixing_code_start_loc": [26, 23], "fixing_code_end_loc": [178, 85], "type": "CWE-94", "message": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Any registered user can use the content field of their user profile page to execute arbitrary scripts with programming rights, thus effectively performing rights escalation. This issue is present since version 4.3M2 when AppWithinMinutes Application added support for the Content field, allowing any wiki page (including the user profile page) to use its content as an AWM Content field, which has a custom displayer that executes the content with the rights of the ``AppWithinMinutes.Content`` author, rather than the rights of the content author. The vulnerability has been fixed in XWiki 14.10.5 and 15.1RC1. The fix is in the content of the AppWithinMinutes.Content page that defines the custom displayer. By using the ``display`` script service to render the content we make sure that the proper author is used for access rights checks.", "other": {"cve": {"id": "CVE-2023-40177", "sourceIdentifier": "security-advisories@github.com", "published": "2023-08-23T21:15:08.670", "lastModified": "2023-08-29T15:23:24.887", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Any registered user can use the content field of their user profile page to execute arbitrary scripts with programming rights, thus effectively performing rights escalation. This issue is present since version 4.3M2 when AppWithinMinutes Application added support for the Content field, allowing any wiki page (including the user profile page) to use its content as an AWM Content field, which has a custom displayer that executes the content with the rights of the ``AppWithinMinutes.Content`` author, rather than the rights of the content author. The vulnerability has been fixed in XWiki 14.10.5 and 15.1RC1. The fix is in the content of the AppWithinMinutes.Content page that defines the custom displayer. By using the ``display`` script service to render the content we make sure that the proper author is used for access rights checks."}, {"lang": "es", "value": "XWiki Platform es una plataforma wiki gen\u00e9rica que ofrece servicios de ejecuci\u00f3n para aplicaciones construidas sobre ella. Cualquier usuario registrado puede utilizar el campo de contenido de su p\u00e1gina de perfil de usuario para ejecutar scripts arbitrarios con derechos de programaci\u00f3n, realizando as\u00ed una escalada de derechos. Este problema est\u00e1 presente desde la versi\u00f3n 4.3M2 cuando la aplicaci\u00f3n AppWithinMinutes a\u00f1adi\u00f3 soporte para el campo Content, permitiendo a cualquier p\u00e1gina wiki (incluyendo la p\u00e1gina de perfil de usuario) utilizar su contenido como un campo AWM Content, que tiene un visualizador personalizado que ejecuta el contenido con los derechos del autor ``AppWithinMinutes.Content``, en lugar de los derechos del autor del contenido. La vulnerabilidad ha sido corregida en XWiki 14.10.5 y 15.1RC1. La soluci\u00f3n se encuentra en el contenido de la p\u00e1gina AppWithinMinutes.Content que define el visualizador personalizado. Al utilizar el servicio de script ``display`` para mostrar el contenido, nos aseguramos de que se utiliza el autor adecuado para comprobar los derechos de acceso."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "LOW", "baseScore": 9.9, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.1, "impactScore": 6.0}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-94"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-95"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:*:*:*:*:*:*:*:*", "versionStartIncluding": "4.3.1", "versionEndExcluding": "14.10.5", "matchCriteriaId": "822BD56F-3510-457D-81E0-8F29597FC352"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:4.3:milestone2:*:*:*:*:*:*", "matchCriteriaId": "F3AAC6FA-548D-4A38-A8FA-67E6D79641D4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:15.0:-:*:*:*:*:*:*", "matchCriteriaId": "99329652-2907-4903-AAB1-1038F225C020"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:15.0:rc1:*:*:*:*:*:*", "matchCriteriaId": "88E41345-F81E-401A-BD67-66AF4B3925D4"}]}]}], "references": [{"url": "https://github.com/xwiki/xwiki-platform/commit/dfb1cde173e363ca5c12eb3654869f9719820262", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-5mf8-v43w-mfxp", "source": "security-advisories@github.com", "tags": ["Mitigation", "Patch", "Vendor Advisory"]}, {"url": "https://jira.xwiki.org/browse/XWIKI-7369", "source": "security-advisories@github.com", "tags": ["Issue Tracking", "Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/xwiki/xwiki-platform/commit/dfb1cde173e363ca5c12eb3654869f9719820262"}}