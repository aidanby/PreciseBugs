{"buggy_code": ["module.exports = function gopher_parsedir (dirent) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/gopher_parsedir/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  //   example 1: var entry = gopher_parsedir('0All about my gopher site.\\t/allabout.txt\\tgopher.example.com\\t70\\u000d\\u000a')\n  //   example 1: entry.title\n  //   returns 1: 'All about my gopher site.'\n\n  /* Types\n   * 0 = plain text file\n   * 1 = directory menu listing\n   * 2 = CSO search query\n   * 3 = error message\n   * 4 = BinHex encoded text file\n   * 5 = binary archive file\n   * 6 = UUEncoded text file\n   * 7 = search engine query\n   * 8 = telnet session pointer\n   * 9 = binary file\n   * g = Graphics file format, primarily a GIF file\n   * h = HTML file\n   * i = informational message\n   * s = Audio file format, primarily a WAV file\n   */\n\n  const entryPattern = /^(.)(.*?)\\t(.*?)\\t(.*?)\\t(.*?)\\u000d\\u000a$/\n  const entry = dirent.match(entryPattern)\n\n  if (entry === null) {\n    throw new Error('Could not parse the directory entry')\n    // return false;\n  }\n\n  let type = entry[1]\n  switch (type) {\n    case 'i':\n    // GOPHER_INFO\n      type = 255\n      break\n    case '1':\n    // GOPHER_DIRECTORY\n      type = 1\n      break\n    case '0':\n    // GOPHER_DOCUMENT\n      type = 0\n      break\n    case '4':\n    // GOPHER_BINHEX\n      type = 4\n      break\n    case '5':\n    // GOPHER_DOSBINARY\n      type = 5\n      break\n    case '6':\n    // GOPHER_UUENCODED\n      type = 6\n      break\n    case '9':\n    // GOPHER_BINARY\n      type = 9\n      break\n    case 'h':\n    // GOPHER_HTTP\n      type = 254\n      break\n    default:\n      return {\n        type: -1,\n        data: dirent\n      } // GOPHER_UNKNOWN\n  }\n  return {\n    type: type,\n    title: entry[2],\n    path: entry[3],\n    host: entry[4],\n    port: entry[5]\n  }\n}\n"], "fixing_code": ["module.exports = function gopher_parsedir (dirent) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/gopher_parsedir/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  //   example 1: var entry = gopher_parsedir('0All about my gopher site.\\t/allabout.txt\\tgopher.example.com\\t70\\u000d\\u000a')\n  //   example 1: entry.title\n  //   returns 1: 'All about my gopher site.'\n\n  /* Types\n   * 0 = plain text file\n   * 1 = directory menu listing\n   * 2 = CSO search query\n   * 3 = error message\n   * 4 = BinHex encoded text file\n   * 5 = binary archive file\n   * 6 = UUEncoded text file\n   * 7 = search engine query\n   * 8 = telnet session pointer\n   * 9 = binary file\n   * g = Graphics file format, primarily a GIF file\n   * h = HTML file\n   * i = informational message\n   * s = Audio file format, primarily a WAV file\n   */\n\n  const entryPattern = /^(.)([^\\t]*)\\t([^\\t]*)\\t([^\\t]*)\\t([^\\t]*)\\r\\n$/\n  const entry = dirent.match(entryPattern)\n\n  if (entry === null) {\n    throw new Error('Could not parse the directory entry')\n    // return false;\n  }\n\n  let type = entry[1]\n  switch (type) {\n    case 'i':\n    // GOPHER_INFO\n      type = 255\n      break\n    case '1':\n    // GOPHER_DIRECTORY\n      type = 1\n      break\n    case '0':\n    // GOPHER_DOCUMENT\n      type = 0\n      break\n    case '4':\n    // GOPHER_BINHEX\n      type = 4\n      break\n    case '5':\n    // GOPHER_DOSBINARY\n      type = 5\n      break\n    case '6':\n    // GOPHER_UUENCODED\n      type = 6\n      break\n    case '9':\n    // GOPHER_BINARY\n      type = 9\n      break\n    case 'h':\n    // GOPHER_HTTP\n      type = 254\n      break\n    default:\n      return {\n        type: -1,\n        data: dirent\n      } // GOPHER_UNKNOWN\n  }\n  return {\n    type: type,\n    title: entry[2],\n    path: entry[3],\n    host: entry[4],\n    port: entry[5]\n  }\n}\n"], "filenames": ["src/php/net-gopher/gopher_parsedir.js"], "buggy_code_start_loc": [25], "buggy_code_end_loc": [26], "fixing_code_start_loc": [25], "fixing_code_end_loc": [26], "type": "NVD-CWE-noinfo", "message": "The package locutus before 2.0.15 are vulnerable to Regular Expression Denial of Service (ReDoS) via the gopher_parsedir function.", "other": {"cve": {"id": "CVE-2021-23392", "sourceIdentifier": "report@snyk.io", "published": "2021-06-08T08:15:06.980", "lastModified": "2021-06-15T14:52:19.927", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The package locutus before 2.0.15 are vulnerable to Regular Expression Denial of Service (ReDoS) via the gopher_parsedir function."}, {"lang": "es", "value": "El paquete locutus versiones anteriores a 2.0.15 es vulnerable a una Denegaci\u00f3n de Servicio por Expresi\u00f3n Regular (ReDoS) por medio de la funci\u00f3n gopher_parsedir"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "report@snyk.io", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "LOW", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:locutus:locutus:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "2.0.15", "matchCriteriaId": "DCB21876-4169-4229-9B45-ACFAD0E951DB"}]}]}], "references": [{"url": "https://github.com/locutusjs/locutus/commit/eb863321990e7e5514aa14f68b8d9978ece9e65e", "source": "report@snyk.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/locutusjs/locutus/pull/446", "source": "report@snyk.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://snyk.io/vuln/SNYK-JS-LOCUTUS-1090597", "source": "report@snyk.io", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/locutusjs/locutus/commit/eb863321990e7e5514aa14f68b8d9978ece9e65e"}}