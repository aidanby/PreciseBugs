{"buggy_code": ["const path = require('path');\nconst config = require('../../../shared/config');\nconst constants = require('@tryghost/constants');\nconst themeEngine = require('../../services/theme-engine');\nconst express = require('../../../shared/express');\n\nfunction isDeniedFile(file) {\n    const deniedFileTypes = ['.hbs', '.md', '.json', '.lock', '.log'];\n    const deniedFiles = ['gulpfile.js', 'gruntfile.js'];\n\n    const ext = path.extname(file);\n    const base = path.basename(file);\n\n    return deniedFiles.includes(base) || deniedFileTypes.includes(ext);\n}\n\nfunction isAllowedFile(file) {\n    const allowedFiles = ['manifest.json'];\n    const allowedPath = '/assets/';\n    const alwaysDeny = ['.hbs'];\n\n    const ext = path.extname(file);\n    const base = path.basename(file);\n\n    return allowedFiles.includes(base) || (file.startsWith(allowedPath) && !alwaysDeny.includes(ext));\n}\n\nfunction forwardToExpressStatic(req, res, next) {\n    if (!themeEngine.getActive()) {\n        return next();\n    }\n\n    const configMaxAge = config.get('caching:theme:maxAge');\n\n    // @NOTE: the maxAge config passed below are in milliseconds and the config\n    //        is specified in seconds. See https://github.com/expressjs/serve-static/issues/150 for more context\n    express.static(themeEngine.getActive().path, {\n        maxAge: (configMaxAge || configMaxAge === 0) ? configMaxAge : constants.ONE_YEAR_MS\n    }\n    )(req, res, next);\n}\n\nfunction staticTheme() {\n    return function denyStatic(req, res, next) {\n        if (!isAllowedFile(req.path.toLowerCase()) && isDeniedFile(req.path.toLowerCase())) {\n            return next();\n        }\n\n        return forwardToExpressStatic(req, res, next);\n    };\n}\n\nmodule.exports = staticTheme;\n", "const should = require('should');\nconst sinon = require('sinon');\n\nconst express = require('../../../../../core/shared/express');\nconst themeEngine = require('../../../../../core/frontend/services/theme-engine');\nconst staticTheme = require('../../../../../core/frontend/web/middleware/static-theme');\n\ndescribe('staticTheme', function () {\n    let expressStaticStub;\n    let activeThemeStub;\n    let req;\n    let res;\n\n    beforeEach(function () {\n        req = {};\n        res = {};\n\n        activeThemeStub = sinon.stub(themeEngine, 'getActive').returns({\n            path: 'my/fake/path'\n        });\n\n        expressStaticStub = sinon.spy(express, 'static');\n    });\n\n    afterEach(function () {\n        sinon.restore();\n    });\n\n    it('should skip for .hbs file', function (done) {\n        req.path = 'mytemplate.hbs';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should skip for .md file', function (done) {\n        req.path = 'README.md';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should skip for .json file', function (done) {\n        req.path = 'sample.json';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should skip for .lock file', function (done) {\n        req.path = 'yarn.lock';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should skip for gulp file', function (done) {\n        req.path = 'gulpfile.js';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should skip for Grunt file', function (done) {\n        req.path = 'Gulpfile.js';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should call express.static for .css file', function (done) {\n        req.path = 'myvalidfile.css';\n\n        staticTheme()(req, res, function next() {\n            // Specifically gets called twice\n            activeThemeStub.calledTwice.should.be.true();\n            expressStaticStub.called.should.be.true();\n\n            // Check that express static gets called with the theme path + maxAge\n            should.exist(expressStaticStub.firstCall.args);\n            expressStaticStub.firstCall.args[0].should.eql('my/fake/path');\n            expressStaticStub.firstCall.args[1].should.be.an.Object().with.property('maxAge');\n\n            done();\n        });\n    });\n\n    it('should call express.static for .js file', function (done) {\n        req.path = 'myvalidfile.js';\n\n        staticTheme()(req, res, function next() {\n            // Specifically gets called twice\n            activeThemeStub.calledTwice.should.be.true();\n            expressStaticStub.called.should.be.true();\n\n            // Check that express static gets called with the theme path + maxAge\n            should.exist(expressStaticStub.firstCall.args);\n            expressStaticStub.firstCall.args[0].should.eql('my/fake/path');\n            expressStaticStub.firstCall.args[1].should.be.an.Object().with.property('maxAge');\n\n            done();\n        });\n    });\n\n    it('should not error if active theme is missing', function (done) {\n        req.path = 'myvalidfile.css';\n\n        // make the active theme not exist\n        activeThemeStub.returns(undefined);\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.calledOnce.should.be.true();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should NOT skip if file is allowed', function (done) {\n        req.path = 'manifest.json';\n\n        staticTheme()(req, res, function next() {\n            // Specifically gets called twice\n            activeThemeStub.calledTwice.should.be.true();\n            expressStaticStub.called.should.be.true();\n\n            // Check that express static gets called with the theme path + maxAge\n            should.exist(expressStaticStub.firstCall.args);\n            expressStaticStub.firstCall.args[0].should.eql('my/fake/path');\n            expressStaticStub.firstCall.args[1].should.be.an.Object().with.property('maxAge');\n\n            done();\n        });\n    });\n\n    it('should NOT skip if file is in assets', function (done) {\n        req.path = '/assets/whatever.json';\n\n        staticTheme()(req, res, function next() {\n            // Specifically gets called twice\n            activeThemeStub.calledTwice.should.be.true();\n            expressStaticStub.called.should.be.true();\n\n            // Check that express static gets called with the theme path + maxAge\n            should.exist(expressStaticStub.firstCall.args);\n            expressStaticStub.firstCall.args[0].should.eql('my/fake/path');\n            expressStaticStub.firstCall.args[1].should.be.an.Object().with.property('maxAge');\n\n            done();\n        });\n    });\n\n    it('should skip for .hbs file EVEN in /assets', function (done) {\n        req.path = '/assets/mytemplate.hbs';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n});\n"], "fixing_code": ["const path = require('path');\nconst config = require('../../../shared/config');\nconst constants = require('@tryghost/constants');\nconst themeEngine = require('../../services/theme-engine');\nconst express = require('../../../shared/express');\n\nfunction isDeniedFile(file) {\n    const deniedFileTypes = ['.hbs', '.md', '.json', '.lock', '.log'];\n    const deniedFiles = ['gulpfile.js', 'gruntfile.js'];\n\n    const ext = path.extname(file);\n    const base = path.basename(file);\n\n    return deniedFiles.includes(base) || deniedFileTypes.includes(ext);\n}\n\n/**\n * Copy from:\n * https://github.com/pillarjs/send/blob/b69cbb3dc4c09c37917d08a4c13fcd1bac97ade5/index.js#L987-L1003\n *\n * Allows V8 to only deoptimize this fn instead of all\n * of send().\n *\n * @param {string} filePath\n * @returns {string|number} returns -1 number if decode decodeURIComponent throws\n */\nfunction decode(filePath) {\n    try {\n        return decodeURIComponent(filePath);\n    } catch (err) {\n        return -1;\n    }\n}\n\n/**\n *\n * @param {string} file path to a requested file\n * @returns {boolean}\n */\nfunction isAllowedFile(file) {\n    const decodedFilePath = decode(file);\n    if (decodedFilePath === -1) {\n        return false;\n    }\n\n    const normalizedFilePath = path.normalize(decodedFilePath);\n\n    const allowedFiles = ['manifest.json'];\n    const allowedPath = '/assets/';\n    const alwaysDeny = ['.hbs'];\n\n    const ext = path.extname(normalizedFilePath);\n    const base = path.basename(normalizedFilePath);\n\n    return allowedFiles.includes(base) || (normalizedFilePath.startsWith(allowedPath) && !alwaysDeny.includes(ext));\n}\n\nfunction forwardToExpressStatic(req, res, next) {\n    if (!themeEngine.getActive()) {\n        return next();\n    }\n\n    const configMaxAge = config.get('caching:theme:maxAge');\n\n    // @NOTE: the maxAge config passed below are in milliseconds and the config\n    //        is specified in seconds. See https://github.com/expressjs/serve-static/issues/150 for more context\n    express.static(themeEngine.getActive().path, {\n        maxAge: (configMaxAge || configMaxAge === 0) ? configMaxAge : constants.ONE_YEAR_MS\n    }\n    )(req, res, next);\n}\n\nfunction staticTheme() {\n    return function denyStatic(req, res, next) {\n        if (!isAllowedFile(req.path.toLowerCase()) && isDeniedFile(req.path.toLowerCase())) {\n            return next();\n        }\n\n        return forwardToExpressStatic(req, res, next);\n    };\n}\n\nmodule.exports = staticTheme;\n", "const should = require('should');\nconst sinon = require('sinon');\n\nconst express = require('../../../../../core/shared/express');\nconst themeEngine = require('../../../../../core/frontend/services/theme-engine');\nconst staticTheme = require('../../../../../core/frontend/web/middleware/static-theme');\n\ndescribe('staticTheme', function () {\n    let expressStaticStub;\n    let activeThemeStub;\n    let req;\n    let res;\n\n    beforeEach(function () {\n        req = {};\n        res = {};\n\n        activeThemeStub = sinon.stub(themeEngine, 'getActive').returns({\n            path: 'my/fake/path'\n        });\n\n        expressStaticStub = sinon.spy(express, 'static');\n    });\n\n    afterEach(function () {\n        sinon.restore();\n    });\n\n    it('should skip for .hbs file', function (done) {\n        req.path = 'mytemplate.hbs';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should skip for .md file', function (done) {\n        req.path = 'README.md';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should skip for .json file', function (done) {\n        req.path = 'sample.json';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should skip for .lock file', function (done) {\n        req.path = 'yarn.lock';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should skip for gulp file', function (done) {\n        req.path = 'gulpfile.js';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should skip for Grunt file', function (done) {\n        req.path = 'Gulpfile.js';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should call express.static for .css file', function (done) {\n        req.path = 'myvalidfile.css';\n\n        staticTheme()(req, res, function next() {\n            // Specifically gets called twice\n            activeThemeStub.calledTwice.should.be.true();\n            expressStaticStub.called.should.be.true();\n\n            // Check that express static gets called with the theme path + maxAge\n            should.exist(expressStaticStub.firstCall.args);\n            expressStaticStub.firstCall.args[0].should.eql('my/fake/path');\n            expressStaticStub.firstCall.args[1].should.be.an.Object().with.property('maxAge');\n\n            done();\n        });\n    });\n\n    it('should call express.static for .js file', function (done) {\n        req.path = 'myvalidfile.js';\n\n        staticTheme()(req, res, function next() {\n            // Specifically gets called twice\n            activeThemeStub.calledTwice.should.be.true();\n            expressStaticStub.called.should.be.true();\n\n            // Check that express static gets called with the theme path + maxAge\n            should.exist(expressStaticStub.firstCall.args);\n            expressStaticStub.firstCall.args[0].should.eql('my/fake/path');\n            expressStaticStub.firstCall.args[1].should.be.an.Object().with.property('maxAge');\n\n            done();\n        });\n    });\n\n    it('should not error if active theme is missing', function (done) {\n        req.path = 'myvalidfile.css';\n\n        // make the active theme not exist\n        activeThemeStub.returns(undefined);\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.calledOnce.should.be.true();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should NOT skip if file is allowed', function (done) {\n        req.path = 'manifest.json';\n\n        staticTheme()(req, res, function next() {\n            // Specifically gets called twice\n            activeThemeStub.calledTwice.should.be.true();\n            expressStaticStub.called.should.be.true();\n\n            // Check that express static gets called with the theme path + maxAge\n            should.exist(expressStaticStub.firstCall.args);\n            expressStaticStub.firstCall.args[0].should.eql('my/fake/path');\n            expressStaticStub.firstCall.args[1].should.be.an.Object().with.property('maxAge');\n\n            done();\n        });\n    });\n\n    it('should NOT skip if file is in assets', function (done) {\n        req.path = '/assets/whatever.json';\n\n        staticTheme()(req, res, function next() {\n            // Specifically gets called twice\n            activeThemeStub.calledTwice.should.be.true();\n            expressStaticStub.called.should.be.true();\n\n            // Check that express static gets called with the theme path + maxAge\n            should.exist(expressStaticStub.firstCall.args);\n            expressStaticStub.firstCall.args[0].should.eql('my/fake/path');\n            expressStaticStub.firstCall.args[1].should.be.an.Object().with.property('maxAge');\n\n            done();\n        });\n    });\n\n    it('should skip for .hbs file EVEN in /assets', function (done) {\n        req.path = '/assets/mytemplate.hbs';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should disallow path traversal', function (done) {\n        req.path = '/assets/built%2F..%2F..%2F/package.json';\n        req.method = 'GET';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n\n    it('should not crash when malformatted URL sequence is passed', function (done) {\n        req.path = '/assets/built%2F..%2F..%2F%E0%A4%A/package.json';\n        req.method = 'GET';\n\n        staticTheme()(req, res, function next() {\n            activeThemeStub.called.should.be.false();\n            expressStaticStub.called.should.be.false();\n\n            done();\n        });\n    });\n});\n"], "filenames": ["ghost/core/core/frontend/web/middleware/static-theme.js", "ghost/core/test/unit/frontend/web/middleware/static-theme.test.js"], "buggy_code_start_loc": [16, 186], "buggy_code_end_loc": [26, 186], "fixing_code_start_loc": [17, 187], "fixing_code_end_loc": [56, 211], "type": "CWE-22", "message": "Ghost before 5.42.1 allows remote attackers to read arbitrary files within the active theme's folder via /assets/built%2F..%2F..%2F/ directory traversal. This occurs in frontend/web/middleware/static-theme.js.", "other": {"cve": {"id": "CVE-2023-32235", "sourceIdentifier": "cve@mitre.org", "published": "2023-05-05T05:15:09.293", "lastModified": "2023-05-11T14:19:32.100", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Ghost before 5.42.1 allows remote attackers to read arbitrary files within the active theme's folder via /assets/built%2F..%2F..%2F/ directory traversal. This occurs in frontend/web/middleware/static-theme.js."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:ghost:ghost:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "5.42.1", "matchCriteriaId": "94A4053D-FF36-4B2A-937B-A94C8DEF67AD"}]}]}], "references": [{"url": "https://github.com/TryGhost/Ghost/commit/378dd913aa8d0fd0da29b0ffced8884579598b0f", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://github.com/TryGhost/Ghost/compare/v5.42.0...v5.42.1", "source": "cve@mitre.org", "tags": ["Release Notes"]}]}, "github_commit_url": "https://github.com/TryGhost/Ghost/commit/378dd913aa8d0fd0da29b0ffced8884579598b0f"}}