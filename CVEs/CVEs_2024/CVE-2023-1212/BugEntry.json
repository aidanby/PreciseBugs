{"buggy_code": ["<?php\n\n/**\n * HomePage display script\n *  \tshow somw statistics, links, help,...\n *******************************************/\n\n# verify that user is logged in\n$User->check_user_session();\n\n# create csrf token\n$csrf = $User->Crypto->csrf_cookie (\"create\", \"user-menu\");\n\n?>\n<script>\n//show clock\n$(function($) {\n\t$('span.jclock').jclock();\n});\n</script>\n\n\n<script>\n$(document).ready(function() {\n\t// initialize sortable\n\t$(document).on(\"click\",'.w-lock', function() {\n\t\t//remove class\n\t\t$(this).removeClass('w-lock').addClass('w-unlock');\n\t\t$(this).find('i').removeClass('fa fa-dashboard').addClass('fa fa-check');\t//change icon\n\t\t$(this).find('a').addClass('btn-success');\t//add success class\n\t\t$(this).find('a').attr('data-original-title','Click to save widgets order');\n\t\t$('#dashboard .inner i').fadeIn('fast');\n\t\t$('#dashboard .add-widgets').fadeIn('fast');\n\t\t$('#dashboard .inner').addClass('movable');\n\t\t//start\n\t\t$('#dashboard .row-fluid').sortable({\n\t\t\tconnectWith: \".row-fluid\",\n\t\t\tstart: function( event, ui ) {\n\t\t\t\tvar iid = $(ui.item).attr('id');\n\t\t\t\t$('#'+iid).addClass('drag');\n\t\t\t},\n\t\t\tstop: function( event, ui ) {\n\t\t\t\tvar iid = $(ui.item).attr('id');\n\t\t\t\t$('#'+iid).removeClass('drag');\n\t\t\t}\n\t\t});\n\t\treturn false;\n\t});\n\t//lock sortable back\n\t$(document).on(\"click\",'.w-unlock', function() {\n\t\t//remove class\n\t\t$(this).removeClass('w-unlock').addClass('w-lock');\n\t\t$(this).find('i').removeClass('fa fa-check').addClass('fa fa-dashboard');\t//change icon\n\t\t$(this).find('a').removeClass('btn-success');\t//remove success class\n\t\t$(this).find('a').attr('data-original-title','Click to reorder widgets');\n\t\t$('#dashboard .inner .icon-action').fadeOut('fast');\n\t\t$('#dashboard .add-widgets').fadeOut('fast');\n\t\t$('#dashboard .inner').removeClass('movable');\n\n\t\t//get all ids that are checked\n\t\tvar widgets = $('#dashboard .widget-dash').map(function(i,n) {\n\t\t\t//only checked\n\t\t\treturn $(n).attr('id').slice(2);\n\t\t}).get().join(';');\n\n\t\t//save user widgets\n\t\t$.post('app/tools/user-menu/user-widgets-set.php', {widgets:widgets, csrf_cookie:\"<?php print $csrf; ?>\"}, function(data) {});\n\n\t\t//remove sortable class\n\t\t$('#dashboard .row-fluid').sortable(\"destroy\");\n\n\t\treturn false;\n\t});\n});\n</script>\n\n\n\n<!-- charts -->\n<script src=\"js/flot/jquery.flot.js?v=<?php print SCRIPT_PREFIX; ?>\"></script>\n<script src=\"js/flot/jquery.flot.categories.js?v=<?php print SCRIPT_PREFIX; ?>\"></script>\n<!--[if lte IE 8]><script src=\"js/flot/excanvas.min.js?v=<?php print SCRIPT_PREFIX; ?>\"></script><![endif]-->\n\n\n<div class=\"welcome\" style=\"text-align:right\">\n\t<span class=\"jclock\"></span>\n</div>\n\n<?php\n\n# fetch all widgets\n$widgets = $Tools->fetch_widgets ($User->is_admin(false), false);\n$widgets = (array) $widgets;\n\n# show user-selected widgets\n$uwidgets = array_filter(pf_explode(\";\",$User->user->widgets));\n\n# if user has no groups and is not admin print warning\nif ($User->is_admin(false)!==true && (is_blank($User->user->groups) || $User->user->groups===\"null\") ) {\n\tprint '<div class=\"row-fluid\">';\n\tprint \"\t<div class='col-xs-12 col-sm-12 col-md-12 col-lg-12' style='min-height:10px'>\";\n\tprint \"\t<div class='inner' style='min-height:10px'>\";\n\tprint \" <h4>\"._(\"No groups\").\"</h4>\";\n\tprint \"\t<div class='hContent'>\";\n\tprint \"\t\t<div class='alert alert-info' style='margin:10px;'>\"._(\"You are not member of any group. Please contact system administrator!\").\"</div>\";\n\tprint \"\t</div>\";\n\tprint \"\t</div>\";\n\tprint \"\t</div>\";\n\tprint \"</div>\";\n\tprint \"<div class='clearfix'></div>\";\n\n\t// reset uwidgets\n\t$uwidgets = array(\"tools\", \"ipcalc\");\n}\n\n# split widgets to rows (chunks)\n$currSize = 0;\t\t\t\t\t//to calculate size\n$m=0;\t\t\t\t\t\t\t//to calculate chunk index\n\nforeach($uwidgets as $uk=>$uv) {\n\t//get fetails\n\t$wdet = (array) $widgets[$uv];\n\tif(is_blank($wdet['wsize']))\t{ $wsize = 6; }\n\telse\t\t\t\t\t\t\t{ $wsize = $wdet['wsize']; }\n\n\t//calculate current size\n\t$currSize = $currSize + $wsize;\n\n\t//ok, we have sizes, we need to split them into chunks of 12\n\tif($currSize > 12) {\n\t\t$m++; \t\t\t\t\t//new index\n\t\t$currSize = $wsize; \t//reset size\n\t}\n\n\t//add to array\n\t$uwidgetschunk[$m][] = $uv;\n}\n\n# print\nprint \"<div class='add-widgets' style='display:none;padding-left:20px;'>\";\nprint \"\t<a class='btn btn-sm btn-default btn-success open_popup' data-script='app/dashboard/widget-popup.php' data-class='700'><i class='fa fa-plus'></i> \"._('Add new widget').\"</a>\";\nprint \"</div>\";\n\nif(sizeof($uwidgets)>1) {\n\n\tprint '<div class=\"row-fluid\">';\n\n\tforeach($uwidgetschunk as $w) {\n\t\t# print itams in a row\n\t\tforeach($w as $c) {\n\n\t\t\t/* print items */\n\t\t\t$wdet = (array) $widgets[$c];\n\t\t\tif(array_key_exists($c, $widgets)) {\n\t\t\t\t//reset size if not set\n\t\t\t\tif(is_blank($wdet['wsize']))\t{ $wdet['wsize'] = 6; }\n\n\t\t\t\tprint \"\t<div class='col-xs-12 col-sm-12 col-md-12 col-lg-$wdet[wsize] widget-dash' id='w-$wdet[wfile]'>\";\n\t\t\t\tprint \"\t<div class='inner'><i class='fa fa-times remove-widget icon-action fa-gray pull-right'></i>\";\n\t\t\t\t// href?\n\t\t\t\tif($wdet['whref']==\"yes\")\t{ print \"<a href='\".create_link(\"widgets\",$wdet['wfile']).\"'> <h4>\"._($wdet['wtitle']).\"<i class='fa fa-external-link fa-gray pull-right'></i></h4></a>\"; }\n\t\t\t\telse\t\t\t\t\t\t{ print \"<h4>\"._($wdet['wtitle']).\"</h4>\"; }\n\t\t\t\tprint \"\t\t<div class='hContent'>\";\n\t\t\t\tprint \"\t\t\t<div style='text-align:center;padding-top:50px;'><strong>\"._('Loading widget').\"</strong><br><i class='fa fa-spinner fa-spin'></i></div>\";\n\t\t\t\tprint \"\t\t</div>\";\n\t\t\t\tprint \"\t</div>\";\n\t\t\t\tprint \"\t</div>\";\n\n\t\t\t}\n\t\t\t# invalid widget\n\t\t\telse {\n\t\t\t\tprint \"\t<div class='col-xs-12 col-sm-12 col-md-12 col-lg-6' id='w-$c'>\";\n\t\t\t\tprint \"\t<div class='inner'>\";\n\t\t\t\tprint \"\t\t<blockquote style='margin-top:20px;margin-left:20px;'><p>Invalid widget $c</p></blockquote>\";\n\t\t\t\tprint \"\t</div>\";\n\t\t\t\tprint \"\t</div>\";\n\t\t\t}\n\n\t\t}\n\t}\n\tprint \"</div>\";\n}\n# empty\nelse {\n\tprint \"<br><div class='alert alert-warning'><strong>\"._('No widgets selected').\"!</strong> <hr>\"._('Please select widgets to be displayed on dashboard on user menu page').\"!</div>\";\n}\n?>\n<hr>", "<?php\n\n/**\n * phpIPAM class with common functions, used in all other classes\n *\n * @author: Miha Petkovsek <miha.petkovsek@gmail.com>\n */\nclass Common_functions  {\n\n\t/**\n     * from api flag\n     *\n     * (default value: false)\n     *\n     * @var bool\n     */\n    public $api = false;\n\n\t/**\n\t * settings\n\t *\n\t * (default value: null)\n\t *\n\t * @var mixed\n\t * @access public\n\t */\n\tpublic $settings = null;\n\n\t/**\n\t * If Jdon validation error occurs it will be saved here\n\t *\n\t * (default value: false)\n\t *\n\t * @var bool\n\t * @access public\n\t */\n\tpublic $json_error = false;\n\n    /**\n     * Default font\n     *\n     * (default value: \"<font face='Helvetica, Verdana, Arial, sans-serif' style='font-size:12px)\n     *\n     * @var string\n     * @access public\n     */\n    public $mail_font_style = \"<font face='Helvetica, Verdana, Arial, sans-serif' style='font-size:12px;color:#333;'>\";\n\n    /**\n     * Default font\n     *\n     * (default value: \"<font face='Helvetica, Verdana, Arial, sans-serif' style='font-size:12px)\n     *\n     * @var string\n     * @access public\n     */\n    public $mail_font_style_light = \"<font face='Helvetica, Verdana, Arial, sans-serif' style='font-size:11px;color:#777;'>\";\n\n    /**\n     * Default font for links\n     *\n     * (default value: \"<font face='Helvetica, Verdana, Arial, sans-serif' style='font-size:12px)\n     *\n     * @var string\n     * @access public\n     */\n    public $mail_font_style_href = \"<font face='Helvetica, Verdana, Arial, sans-serif' style='font-size:12px;color:#a0ce4e;'>\";\n\n\t/**\n\t * Database\n\t *\n\t * @var Database_PDO\n\t * @access protected\n\t */\n\tprotected $Database;\n\n\t/**\n\t * Result\n\t *\n\t * @var Result\n\t * @access public\n\t */\n\tpublic $Result;\n\n\t/**\n\t * Log\n\t *\n\t * @var Logging\n\t * @access public\n\t */\n\tpublic $Log;\n\n\t/**\n\t * Net_IPv4\n\t *\n\t * @var Net_IPv4\n\t * @access protected\n\t */\n\tprotected $Net_IPv4;\n\n\t/**\n\t * Net_IPv6\n\t *\n\t * @var Net_IPv6\n\t * @access protected\n\t */\n\tprotected $Net_IPv6;\n\n\t/**\n\t * (array) IP address types from Addresses object\n\t *\n\t * (default value: null)\n\t *\n\t * @var mixed\n\t * @access public\n\t */\n\tpublic $address_types = null;\n\n\t/**\n\t * NET_DNS object\n\t *\n\t * @var NET_DNS\n\t * @access protected\n\t */\n\tprotected $DNS2;\n\n\t/**\n\t * debugging flag\n\t *\n\t * @var bool\n\t * @access protected\n\t */\n\tprotected $debugging;\n\n\t/**\n\t * Cache mac vendor objects\n\t * @var array|null\n\t */\n\tprivate $mac_address_vendors = null;\n\n\n\n\t/**\n\t * __construct function\n\t *\n\t * @access public\n\t */\n\tpublic function __construct () {\n\t\t# debugging\n\t\t$this->set_debugging( Config::ValueOf('debugging') );\n\t}\n\n\t/**\n\t *\t@version handling\n\t *\t--------------------------------\n\t */\n\n\t /**\n\t * Compare dotted version numbers 1.21.0 <=> 1.4.10\n\t *\n\t * @access public\n\t * @param string $verA\n\t * @param mixed $verB\n\t * @return int\n\t */\n\tpublic function cmp_version_strings($verA, $verB) {\n\t\t$a = array_pad(pf_explode('.', $verA), 3, 0);\n\t\t$b = array_pad(pf_explode('.', $verB), 3, 0);\n\n\t\tif ($a[0] != $b[0]) return $a[0] < $b[0] ? -1 : 1;\t\t\t// 1.x.y is less than 2.x.y\n\t\tif (strcmp($a[1], $b[1]) != 0) return strcmp($a[1], $b[1]);\t// 1.21.y is less than 1.3.y\n\t\tif ($a[2] != $b[2]) return $a[2] < $b[2] ? -1 : 1;\t\t\t// 1.4.9 is less than 1.4.10\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Fetch mysql version info\n\t *\n\t * @access public\n\t * @return string\n\t */\n\tpublic function fetch_mysql_version () {\n\t\t# fetch\n\t\ttry { $result = $this->Database->getObjectQuery(\"SELECT VERSION() AS 'version';\"); }\n\t\tcatch (Exception $e) {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn is_object($result) ? $result->version : \"\";\n\t}\n\n\n\n\n\n\n\n\t/**\n\t *\t@general fetch methods\n\t *\t--------------------------------\n\t */\n\n\n\t/**\n\t * Fetch all objects from specified table in database\n\t *\n\t * @access public\n\t * @param mixed $table\n\t * @param mixed $sortField (default:id)\n\t * @param mixed bool (default:true)\n\t * @return false|array\n\t */\n\tpublic function fetch_all_objects ($table=null, $sortField=\"id\", $sortAsc=true) {\n\t\t# null table\n\t\tif(is_null($table)||is_blank($table)) return false;\n\n\t\t$cached_item = $this->cache_check(\"fetch_all_objects\", \"t=$table f=$sortField o=$sortAsc\");\n\t\tif(is_object($cached_item)) return $cached_item->result;\n\n\t\t# fetch\n\t\ttry { $res = $this->Database->getObjects($table, $sortField, $sortAsc); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage());\n\t\t\treturn false;\n\t\t}\n\t\t# save\n\t\tif (is_array($res)) {\n\t\t\tforeach ($res as $r) {\n\t\t\t\t$this->cache_write ($table, $r);\n\t\t\t}\n\t\t}\n\t\t# result\n\t\t$result = (is_array($res) && sizeof($res)>0) ? $res : false;\n\t\t$this->cache_write (\"fetch_all_objects\", (object) [\"id\"=>\"t=$table f=$sortField o=$sortAsc\", \"result\" => $result]);\n\t\treturn $result;\n\t}\n\n\t/**\n\t * Fetches specified object specified table in database\n\t *\n\t * @access public\n\t * @param mixed $table\n\t * @param mixed $method\n\t * @param mixed $value\n\t * @return object|false\n\t */\n\tpublic function fetch_object ($table, $method, $value) {\n\t\t// checks\n\t\tif(!is_string($table)) return false;\n\t\tif(is_blank($table))  return false;\n\t\tif(is_null($method))   return false;\n\t\tif(is_null($value))    return false;\n\t\tif($value===0)         return false;\n\n\t\t# check cache\n\t\t$cached_item = $this->cache_check($table, $value);\n\t\tif(is_object($cached_item))\n\t\t\treturn $cached_item;\n\n\t\t# null method\n\t\t$method = is_null($method) ? \"id\" : $this->Database->escape($method);\n\n\t\ttry { $res = $this->Database->getObjectQuery(\"SELECT * from `$table` where `$method` = ? limit 1;\", array($value)); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage());\n\t\t\treturn false;\n\t\t}\n\n\t\t# save to cache array\n\t\t$this->cache_write ($table, $res);\n\n\t\treturn is_object($res) ? $res : false;\n\t}\n\n\t/**\n\t * Fetches multiple objects in specified table in database\n\t *\n\t *\tdoesnt cache\n\t *\n\t * @access public\n\t * @param mixed $table\n\t * @param mixed $field\n\t * @param mixed $value\n\t * @param string $sortField (default: 'id')\n\t * @param bool $sortAsc (default: true)\n\t * @param bool $like (default: false)\n\t * @param array|mixed $result_fields (default: *)\n\t * @return array|false\n\t */\n\tpublic function fetch_multiple_objects ($table, $field, $value, $sortField = 'id', $sortAsc = true, $like = false, $result_fields = \"*\") {\n\t\t# null table\n\t\tif(is_null($table)||is_blank($table)) return false;\n\t\telse {\n\t\t\ttry { $res = $this->Database->findObjects($table, $field, $value, $sortField, $sortAsc, $like, false, $result_fields); }\n\t\t\tcatch (Exception $e) {\n\t\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage());\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t# save to cache\n\t\t\tif ($result_fields===\"*\" && is_array($res)) { // Only cache objects containing all fields\n\t\t\t\tforeach ($res as $r) {\n\t\t\t\t\t$this->cache_write ($table, $r);\n\t\t\t\t}\n\t\t\t}\n\t\t\t# result\n\t\t\treturn (is_array($res) && sizeof($res)>0) ? $res : false;\n\t\t}\n\t}\n\n\t/**\n\t * Count objects in database.\n\t *\n\t * @access public\n\t * @param mixed $table\n\t * @param mixed $field\n\t * @param mixed $val (default: null)\n\t * @param bool $like (default: false)\n\t * @return int\n\t */\n\tpublic function count_database_objects ($table, $field, $val=null, $like = false) {\n\t\t# if null\n\t\ttry { $cnt = $this->Database->numObjectsFilter($table, $field, $val, $like); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage());\n\t\t\treturn false;\n\t\t}\n\t\treturn $cnt;\n\t}\n\n\t/**\n\t * Count all objects in database.\n\t *\n\t * @param  string $table\n\t * @param  string $field\n\t * @return array|false\n\t */\n\tpublic function count_all_database_objects ($table, $field) {\n\t\ttry { $cnt = $this->Database->getGroupBy($table, $field); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage());\n\t\t\treturn false;\n\t\t}\n\t\treturn $cnt;\n\t}\n\n\t/**\n\t * Returns table schema information\n\t *\n\t * @param  string $tableName\n\t * @return array\n\t */\n\tpublic function getTableSchemaByField($tableName) {\n\t\t$results = [];\n\n\t\tif (!is_string($tableName)) return $results;\n\n\t\t$tableName = $this->Database->escape($tableName);\n\n\t\t$cached_item = $this->cache_check(\"getTableSchemaByField\", \"t=$tableName\");\n\t\tif(is_object($cached_item)) return $cached_item->result;\n\n\t\ttry {\n\t\t\t$query = \"SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ?;\";\n\t\t\t$schema = $this->Database->getObjectsQuery($query, [$this->Database->dbname, $tableName]);\n\t\t} catch (\\Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage());\n\t\t\treturn $results;\n\t\t}\n\n\t\tif (is_array($schema)) {\n\t\t\tforeach ($schema as $col) {\n\t\t\t\t$results[$col->COLUMN_NAME] = $col;\n\t\t\t}\n\t\t}\n\t\t$this->cache_write(\"getTableSchemaByField\", (object) [\"id\"=>\"t=$tableName\", \"result\" => $results]);\n\t\treturn $results;\n\t}\n\n\t/**\n\t * Get all admins that are set to receive changelog\n\t *\n\t * @access public\n\t * @param bool|mixed $subnetId\n\t * @return array|false\n\t */\n\tpublic function changelog_mail_get_recipients ($subnetId = false) {\n    \t// fetch all users with mailNotify\n        $notification_users = $this->fetch_multiple_objects (\"users\", \"mailChangelog\", \"Yes\", \"id\", true);\n        // recipients array\n        $recipients = array();\n        // any ?\n        if (is_array($notification_users)) {\n        \tif(sizeof($notification_users)>0) {\n\t         \t// if subnetId is set check who has permissions\n\t        \tif (isset($subnetId)) {\n\t             \tforeach ($notification_users as $u) {\n\t                \t// inti object\n\t                \t$Subnets = new Subnets ($this->Database);\n\t                \t//check permissions\n\t                \t$subnet_permission = $Subnets->check_permission($u, $subnetId);\n\t                \t// if 3 than add\n\t                \tif ($subnet_permission==3) {\n\t                    \t$recipients[] = $u;\n\t                \t}\n\t            \t}\n\t        \t}\n\t        \telse {\n\t            \tforeach ($notification_users as $u) {\n\t                \tif($u->role==\"Administrator\") {\n\t                    \t$recipients[] = $u;\n\t                \t}\n\t            \t}\n\t        \t}\n\t        }\n        \treturn sizeof($recipients)>0 ? $recipients : false;\n        }\n        else {\n            return false;\n        }\n\t}\n\n\n\n\n\t/**\n\t * fetches settings from database\n\t *\n\t * @access private\n\t * @return object|false\n\t */\n\tpublic function get_settings () {\n\t\tif (is_object($this->settings))\n\t\t\treturn $this->settings;\n\n\t\t// fetch_object results are cached in $Database->cache.\n\t\t$settings = $this->fetch_object(\"settings\", \"id\", 1);\n\n\t\tif (!is_object($settings))\n\t\t\treturn false;\n\n\t\t// Escape ' & \" charaters\n\t\tif (property_exists($settings, 'siteTitle'))\n\t\t\t$settings->siteTitle = escape_input($settings->siteTitle);\n\n\t\t// default dbversion for older releases\n\t\tif (!property_exists($settings, 'dbversion'))\n\t\t\t$settings->dbversion = 0;\n\n\t\t#save\n\t\t$this->settings = $settings;\n\n\t\treturn $this->settings;\n\t}\n\n\n    /**\n     * Write result to cache.\n     *\n     * @access protected\n     * @param string $table\n     * @param mixed $object\n     * @return void\n     */\n    protected function cache_write ($table, $object) {\n        if (!is_object($object))\n            return;\n\n        // Exclude exceptions from caching\n        if ($this->cache_check_exceptions($table))\n            return;\n\n        // get and check id property\n        $identifier = $this->cache_set_identifier ($table);\n\n        if (!property_exists($object, $identifier))\n            return;\n\n        $id = $object->{$identifier};\n\n        // already set\n        if (isset($this->Database->cache[$table][$identifier][$id]))\n            return;\n\n        // add ip ?\n        $ip_check = $this->cache_check_add_ip($table);\n        if ($ip_check!==false) {\n            $object->ip = $this->transform_address ($object->{$ip_check}, \"dotted\");\n        }\n\n        // save\n        $this->Database->cache[$table][$identifier][$id] = clone $object;\n    }\n\n    /**\n     * Check if caching is not needed\n     *\n     * @access protected\n     * @param mixed $table\n     * @return bool\n     */\n    protected function cache_check_exceptions ($table) {\n        $exceptions = [\n            \"firewallZoneSubnet\"=>1,\n            \"circuitsLogicalMapping\" =>1,\n            \"php_sessions\"=>1];\n\n        // check\n        return isset($exceptions[$table]) ? true : false;\n    }\n\n    /**\n     * Check if ip is to be added to result\n     *\n     * @access protected\n     * @param mixed $table\n     * @return bool|mixed\n     */\n    protected function cache_check_add_ip ($table) {\n        $ip_tables = [\"subnets\"=>\"subnet\", \"ipaddresses\"=>\"ip_addr\"];\n\n        // check\n        return array_key_exists ($table, $ip_tables) ? $ip_tables[$table] : false;\n    }\n\n    /**\n     * Set identifier for table - exceptions.\n     *\n     * @access protected\n     * @param string $table\n     * @return string\n     */\n    protected function cache_set_identifier ($table) {\n        // Tables with different primary keys\n        $mapings = [\n            'userGroups'=>'g_id',\n            'lang'=>'l_id',\n            'vlans'=>'vlanId',\n            'vrf'=>'vrfId',\n            'changelog'=>'cid',\n            'widgets'=>'wid',\n            'deviceTypes'=>'tid',\n            'nominatim_cache'=>'sha256'];\n\n        return isset($mapings[$table]) ? $mapings[$table] : 'id';\n    }\n\n    /**\n     * Checks if object alreay exists in cache..\n     *\n     * @access protected\n     * @param mixed $table\n     * @param mixed $id\n     * @return object|false\n     */\n    protected function cache_check ($table, $id) {\n        // get identifier\n        $identifier = $this->cache_set_identifier ($table);\n\n        // check if cache is already set, otherwise return false\n        if (isset($this->Database->cache[$table][$identifier][$id]))\n            return clone $this->Database->cache[$table][$identifier][$id];\n\n        return false;\n    }\n\n\t/**\n\t * Sets debugging\n\t *\n\t * @access public\n\t * @param bool $debug (default: false)\n\t * @return bool\n\t */\n\tpublic function set_debugging ($debug = false) {\n\t\t$this->debugging = $debug==true ? true : false;\n\t}\n\n\t/**\n\t * Gets debugging\n\t *\n\t * @access public\n\t * @return bool\n\t */\n\tpublic function get_debugging () {\n\t\treturn $this->debugging;\n\t}\n\n\t/**\n\t * Initializes PEAR Net IPv4 object\n\t *\n\t * @access public\n\t * @return void\n\t */\n\tpublic function initialize_pear_net_IPv4 () {\n\t\t//initialize NET object\n\t\tif(!is_object($this->Net_IPv4)) {\n\t\t\trequire_once( dirname(__FILE__) . '/../../functions/PEAR/Net/IPv4.php' );\n\t\t\t//initialize object\n\t\t\t$this->Net_IPv4 = new Net_IPv4();\n\t\t}\n\t}\n\n\t/**\n\t * Initializes PEAR Net IPv6 object\n\t *\n\t * @access public\n\t * @return void\n\t */\n\tpublic function initialize_pear_net_IPv6 () {\n\t\t//initialize NET object\n\t\tif(!is_object($this->Net_IPv6)) {\n\t\t\trequire_once( dirname(__FILE__) . '/../../functions/PEAR/Net/IPv6.php' );\n\t\t\t//initialize object\n\t\t\t$this->Net_IPv6 = new Net_IPv6();\n\t\t}\n\t}\n\n\t/**\n\t * Initializes PEAR Net IPv6 object\n\t *\n\t * @access public\n\t * @return void\n\t */\n\tpublic function initialize_pear_net_DNS2 () {\n\t\t//initialize NET object\n\t\tif(!is_object($this->DNS2)) {\n\t\t\trequire_once( dirname(__FILE__) . '/../../functions/PEAR/Net/DNS2.php' );\n\t\t\t//initialize object\n\t\t\t$this->DNS2 = new Net_DNS2_Resolver(array(\"timeout\"=>2));\n\t\t}\n\t}\n\n\t/**\n\t * Strip tags from array or field to protect from XSS\n\t *\n\t * @access public\n\t * @param array|string $input\n\t * @return array|string\n\t */\n\tpublic function strip_input_tags ($input) {\n\t\tif(is_array($input)) {\n\t\t\tforeach($input as $k=>$v) {\n\t\t\t\tif(is_array($v)) {\n\t\t\t\t\t$input[$k] = $this->strip_input_tags($v);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t$input[$k] = is_null($v) ? NULL : strip_tags($v);\n\t\t\t}\n\t\t\t# stripped array\n\t\t\treturn $input;\n\t\t}\n\n\t\t// not array\n\t\treturn is_null($input) ? NULL : strip_tags($input);\n\t}\n\n\t/**\n\t * Remove <script>, <iframe> and JS HTML event attributes from HTML to protect from XSS\n\t *\n\t * @param   string  $html\n\t * @return  string\n\t */\n\tpublic function noxss_html($html) {\n\t\tif (!is_string($html) || is_blank($html))\n\t\t\treturn \"\";\n\n\t\t// Convert encoding to UTF-8\n\t\t$html = mb_convert_encoding($html, 'HTML-ENTITIES', 'UTF-8');\n\n\t\t// Throw loadHTML() parsing errors\n\t\t$err_mode = libxml_use_internal_errors(false);\n\t\t$php_reporting = error_reporting(0);\n\n\t\ttry {\n\t\t\t$dom = new \\DOMDocument();\n\t\t\tif ($dom->loadHTML(\"<html>\".$html.\"</html>\", LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD | LIBXML_NOBLANKS | LIBXML_NOWARNING | LIBXML_NOERROR) === false)\n\t\t\t\treturn \"\";\n\n\t\t\t$banned_elements = ['script', 'iframe', 'embed'];\n\t\t\t$remove_elements = [];\n\n\t\t\t$elements = $dom->getElementsByTagName('*');\n\n\t\t\tif (is_object($elements) && $elements->length>0) {\n\t\t\t\tforeach($elements as $e) {\n\t\t\t\t\tif (in_array($e->nodeName, $banned_elements)) {\n\t\t\t\t\t\t$remove_elements[] = $e;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!$e->hasAttributes())\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t// remove on* HTML event attributes\n\t\t\t\t\tforeach ($e->attributes as $attr) {\n\t\t\t\t\t\tif (substr($attr->nodeName,0,2) == \"on\")\n\t\t\t\t\t\t\t$e->removeAttribute($attr->nodeName);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Remove banned elements\n\t\t\t\tforeach($remove_elements as $e)\n\t\t\t\t\t$e->parentNode->removeChild($e);\n\n\t\t\t\t// Return sanitised HTML\n\t\t\t\t$html = str_replace(['<html>', '</html>'], '', $dom->saveHTML());\n\t\t\t}\n\t\t} catch (Exception $e) {\n\t\t\t$html = \"\";\n\t\t}\n\n\t\t// restore error mode\n\t\tlibxml_use_internal_errors($err_mode);\n\t\terror_reporting($php_reporting);\n\n\t\treturn is_string($html) ? $html : \"\";\n\t}\n\n\t/**\n\t * Changes empty array fields to specified character\n\t *\n\t * @access public\n\t * @param array|object $fields\n\t * @param string $char (default: \"/\")\n\t * @return array\n\t */\n\tpublic function reformat_empty_array_fields ($fields, $char = \"/\") {\n    \t$out = array();\n    \t// loop\n\t\tforeach($fields as $k=>$v) {\n    \t\tif(is_array($v)) {\n        \t\t$out[$k] = $v;\n    \t\t}\n    \t\telse {\n    \t\t\tif(is_null($v) || is_blank($v)) {\n    \t\t\t\t$out[$k] = \t$char;\n    \t\t\t} else {\n    \t\t\t\t$out[$k] = $v;\n    \t\t\t}\n    \t\t}\n\t\t}\n\t\t# result\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Removes empty array fields\n\t *\n\t * @access public\n\t * @param array $fields\n\t * @return array\n\t */\n\tpublic function remove_empty_array_fields ($fields) {\n    \t// init\n    \t$out = array();\n    \t// loop\n    \tif(is_array($fields)) {\n\t\t\tforeach($fields as $k=>$v) {\n\t\t\t\tif(is_null($v) || is_blank($v)) {\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$out[$k] = $v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t# result\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Trim whitespace form array objects\n\t *\n\t * @method trim_array_objects\n\t * @param  string|array $fields\n\t * @return string|array\n\t */\n\tpublic function trim_array_objects ($fields) {\n\t\tif(is_array($fields)) {\n\t    \t// init\n\t    \t$out = array();\n\t    \t// loop\n\t\t\tforeach($fields as $k=>$v) {\n\t\t\t\t$out[$k] = trim($v);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t$out = trim($fields);\n\t\t}\n\t\t# result\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Strip XSS on value print\n\t *\n\t * @method strip_xss\n\t *\n\t * @param  string $input\n\t *\n\t * @return string\n\t */\n\tpublic function strip_xss ($input) {\n\t\treturn htmlspecialchars($input ?: '', ENT_QUOTES, 'UTF-8');\n\t}\n\n\t/**\n\t * Detect the encoding used for a string and convert to UTF-8\n\t *\n\t * @method convert_encoding_to_UTF8\n\t * @param  string $string\n\t * @return string\n\t */\n\tpublic function convert_encoding_to_UTF8($string) {\n\t\t//convert encoding if necessary\n\t\treturn mb_convert_encoding($string, 'UTF-8', mb_detect_encoding($string, 'ASCII, UTF-8, ISO-8859-1, auto', true));\n\t}\n\n\t/**\n\t * Function to verify checkbox if 0 length\n\t *\n\t * @access public\n\t * @param mixed $field\n\t * @return int|mixed\n\t */\n\tpublic function verify_checkbox ($field) {\n\t\treturn (!isset($field) || is_blank($field)) ? 0 : escape_input($field);\n\t}\n\n\t/**\n\t * identify ip address type - ipv4 or ipv6\n\t *\n\t * @access public\n\t * @param mixed $address\n\t * @return mixed IP version\n\t */\n\tpublic function identify_address ($address) {\n\t\t# dotted representation\n\t\tif (strpos($address, ':') !== false) return 'IPv6';\n\t\tif (strpos($address, '.') !== false) return 'IPv4';\n\t\t# numeric representation\n\t\tif (is_numeric($address)) {\n\t\t\tif($address <= 4294967295) return 'IPv4'; // 4294967295 = '255.255.255.255'\n\t\t\treturn 'IPv6';\n\t\t} else {\n\t\t\t# decimal representation\n\t\t\tif(strlen($address) < 12) return 'IPv4';\n\t\t\treturn 'IPv6';\n\t\t}\n\t}\n\n\t/**\n\t * Alias of identify_address_format function\n\t *\n\t * @access public\n\t * @param mixed $address\n\t * @return mixed\n\t */\n\tpublic function get_ip_version ($address) {\n\t\treturn $this->identify_address ($address);\n\t}\n\n\t/**\n\t * Transforms array to log format\n\t *\n\t * @access public\n\t * @param mixed $logs\n\t * @param bool $changelog\n\t * @return mixed\n\t */\n\tpublic function array_to_log ($logs, $changelog = false) {\n\t\t$result = \"\";\n\n\t\tif(!is_array($logs))\n\t\t\treturn $result;\n\n\t\tforeach($logs as $key=>$req) {\n\t\t\t# ignore __ and PHPSESSID\n\t\t\tif( substr($key,0,2)=='__' || substr($key,0,9)=='PHPSESSID' || substr($key,0,4)=='pass' || $key=='plainpass' || $key=='values')\n\t\t\t\tcontinue;\n\n\t\t\t// NOTE The colon character \":\" is reserved as it used in array_to_log for implode/explode.\n\t\t\t// Replace colon (U+003A) with alternative characters.\n\t\t\t// Using JSON encode/decode would be more appropiate but we need to maintain backwards compatibility with historical changelog/logs data in the database.\n\t\t\tif ($req == \"mac\")\n\t\t\t\t$req = strtr($req, ':', '-'); # Mac-addresses, replace Colon U+003A with hyphen U+002D\n\n\t\t\tif (is_string($req) && strpos($req, ':')!==false)\n\t\t\t\t$req = strtr($req, ':', '.'); # Default, replace Colon U+003A with Full Stop U+002E.\n\n\t\t\t$result .= ($changelog===true) ? \"[$key]: $req<br>\" : \" \". $key . \": \" . $req . \"<br>\";\n\t\t}\n\t\treturn $result;\n\t}\n\n\t/**\n\t * Transforms seconds to hms\n\t *\n\t * @access public\n\t * @param mixed $sec\n\t * @param bool $padHours (default: false)\n\t * @return mixed\n\t */\n\tpublic function sec2hms($sec, $padHours = false) {\n\t    // holds formatted string\n\t    $hms = \"\";\n\n\t    // get the number of hours\n\t    $hours = intval($sec / 3600);\n\n\t    // add to $hms, with a leading 0 if asked for\n\t    $hms .= ($padHours)\n\t          ? str_pad($hours, 2, \"0\", STR_PAD_LEFT). ':'\n\t          : $hours. ':';\n\n\t    // get the seconds\n\t    $minutes = intval($sec / 60) % 60;\n\n\t    // then add to $hms (with a leading 0 if needed)\n\t    $hms .= str_pad($minutes, 2, \"0\", STR_PAD_LEFT). ':';\n\n\t    // seconds\n\t    $seconds = intval($sec) % 60;\n\n\t    // add to $hms, again with a leading 0 if needed\n\t    $hms .= str_pad($seconds, 2, \"0\", STR_PAD_LEFT);\n\n\t    // return hms\n\t    return $hms;\n\t}\n\n\t/**\n\t * Shortens text to max chars\n\t *\n\t * @access public\n\t * @param mixed $text\n\t * @param int $chars (default: 25)\n\t * @return mixed\n\t */\n\tpublic function shorten_text($text, $chars = 25) {\n\t\tif (is_blank($text))\n\t\t\treturn '';\n\n\t\t// minimum length = 8\n\t\tif ($chars < 8) $chars = 8;\n\t\t// count input text size\n\t\t$origLen = mb_strlen($text);\n\t\t// cut unwanted chars\n\t\tif ($origLen > $chars) {\n\t\t\t$text = mb_substr($text, 0, $chars-3) . '...';\n\t\t}\n\t\treturn $text;\n\t}\n\n\t/**\n\t * Reformats MAC address to requested format\n\t *\n\t * @access public\n\t * @param mixed $mac\n\t * @param string $format (default: 1)\n\t *      1 : 00:66:23:33:55:66\n\t *      2 : 00-66-23-33-55-66\n\t *      3 : 0066.2333.5566\n\t *      4 : 006623335566\n\t * @return string\n\t */\n\tpublic function reformat_mac_address ($mac, $format = 1) {\n    \t// strip al tags first\n    \t$mac = strtolower(str_replace(array(\":\",\".\",\"-\"), \"\", $mac));\n    \t// format 4\n    \tif ($format==4) {\n        \treturn $mac;\n    \t}\n    \t// format 3\n    \tif ($format==3) {\n        \t$mac = str_split($mac, 4);\n        \t$mac = implode(\".\", $mac);\n    \t}\n    \t// format 2\n    \telseif ($format==2) {\n        \t$mac = str_split($mac, 2);\n        \t$mac = implode(\"-\", $mac);\n    \t}\n    \t// format 1\n    \telse {\n        \t$mac = str_split($mac, 2);\n        \t$mac = implode(\":\", $mac);\n    \t}\n    \t// return\n    \treturn $mac;\n\t}\n\n\t/**\n\t * Return port number used to access the site\n\t *\n\t * @access  private\n\t * @return  int\n\t */\n\tprivate function httpPort() {\n\t\t// If only HTTP_X_FORWARDED_PROTO='https' is set assume port=443. Override if required by setting HTTP_X_FORWARDED_PORT\n\t\tif (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && !isset($_SERVER['HTTP_X_FORWARDED_PORT'])) {\n\t\t\treturn ($_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') ? 443 : 80;\n\t\t}\n\t\telseif (isset($_SERVER['HTTP_X_FORWARDED_PORT'])) {\n\t\t\treturn $_SERVER['HTTP_X_FORWARDED_PORT'];\n\t\t}\n\t\telseif (isset($_SERVER['SERVER_PORT'])) {\n\t\t\treturn $_SERVER['SERVER_PORT'];\n\t\t}\n\t\telse {\n\t\t\treturn 80;\n\t\t}\n\t}\n\n\t/**\n\t* Returns true if site is accessed with https\n\t*\n\t* @access public\n\t* @return bool\n\t*/\n\tpublic function isHttps () {\n\t\tif (isset($_SERVER['HTTP_X_FORWARDED_PROTO'])) {\n\t\t\treturn ($_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https');\n\t\t}\n\t\telseif (isset($_SERVER['HTTP_X_FORWARDED_SSL']) && $_SERVER['HTTP_X_FORWARDED_SSL'] == 'on') {\n\t\t\treturn true;\n\t\t}\n\t\telseif(isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') {\n\t\t\treturn true;\n\t\t}\n\t\telseif($this->httpPort() == 443) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Get IP address of connected user\n\t *\n\t * @return string|null\n\t */\n\tprotected function get_user_ip() {\n\t\tif (php_sapi_name() === \"cli\")\n\t\t\treturn null;\n\n\t\tif (isset($_SERVER['HTTP_X_FORWARDED_FOR']) && filter_var($_SERVER['HTTP_X_FORWARDED_FOR'], FILTER_VALIDATE_IP))\n\t\t\treturn $_SERVER['HTTP_X_FORWARDED_FOR'];\n\n\t\tif (isset($_SERVER['REMOTE_ADDR']) && filter_var($_SERVER['REMOTE_ADDR'], FILTER_VALIDATE_IP))\n\t\t\treturn $_SERVER['REMOTE_ADDR'];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Create URL for base\n\t *\n\t * @access public\n\t * @return string\n\t */\n\tpublic function createURL () {\n\t\t$proto = $this->isHttps() ? 'https' : 'http';\n\n\t\tif (isset($_SERVER['HTTP_X_FORWARDED_HOST'])) {\n\t\t\t$url = $_SERVER['HTTP_X_FORWARDED_HOST'];\n\t\t}\n\t\telseif (isset($_SERVER['HTTP_HOST'])) {\n\t\t\t$url = $_SERVER['HTTP_HOST'];\n\t\t}\n\t\telseif (isset($_SERVER['SERVER_NAME'])) {\n\t\t\t$url = $_SERVER['SERVER_NAME'];\n\t\t}\n\t\telse {\n\t\t\t$url = \"localhost\";\n\t\t}\n\t\t$host = parse_url(\"$proto://$url\", PHP_URL_HOST) ?: \"localhost\";\n\n\t\t$port = $this->httpPort();\n\n\t\tif (($proto == \"http\" && $port == 80) || ($proto == \"https\" && $port == 443)) {\n\t\t\treturn \"$proto://$host\";\n\t\t} else {\n\t\t\treturn \"$proto://$host:$port\";\n\t\t}\n\t}\n\n\t/**\n\t * Creates links from text fields if link is present\n\t *\n\t *\tsource: https://css-tricks.com/snippets/php/find-urls-in-text-make-links/\n\t *\n\t * @access public\n \t * @param string $text\n\t * @param string $field_type\n\t * @return string\n\t */\n\tpublic function create_links ($text, $field_type = \"varchar\") {\n\t\tif (!is_string($text))\n\t\t\treturn '';\n\n\t\t// create links only for varchar fields\n\t\tif (strpos($field_type, \"varchar\")!==false) {\n\t\t\t// regular expression\n\t\t\t$reg_exUrl = \"#((http|https|ftp|ftps|telnet|ssh|rdp)://\\S+[^\\s.,>)\\];'\\\"!?])#\";\n\n\t\t\t// Check if there is a url in the text, make the urls hyper links\n\t\t\t$text = preg_replace($reg_exUrl, \"<a href='$0' target='_blank'>$0</a>\", $text);\n\t\t}\n\t\t// return text\n\t\treturn $text;\n\t}\n\n\t/**\n\t * Sets valid actions\n\t *\n\t * @access private\n\t * @return string[]\n\t */\n\tprivate function get_valid_actions () {\n\t\treturn array(\n\t\t        \"add\",\n\t\t        \"all-add\",\n\t\t        \"edit\",\n\t\t        \"all-edit\",\n\t\t        \"delete\",\n\t\t        \"truncate\",\n\t\t        \"split\",\n\t\t        \"resize\",\n\t\t        \"move\",\n\t\t        \"remove\",\n\t\t        \"assign\"\n\t\t      );\n\t}\n\n\t/**\n\t * Validate posted action on scripts\n\t *\n\t * @access public\n\t * @param mixed $action\n\t * @param bool $popup\n\t * @return mixed|bool\n\t */\n\tpublic function validate_action ($action, $popup = false) {\n\t\t# get valid actions\n\t\t$valid_actions = $this->get_valid_actions ();\n\t\t# check\n\t\tin_array($action, $valid_actions) ?: $this->Result->show(\"danger\", _(\"Invalid action!\"), true, $popup);\n\t}\n\n\t/**\n\t * Validates email address.\n\t *\n\t * @access public\n\t * @param mixed $email\n\t * @return bool\n\t */\n\tpublic function validate_email($email) {\n\t\treturn filter_var($email, FILTER_VALIDATE_EMAIL);\n\t}\n\n\t/**\n\t * Validate hostname\n\t *\n\t * @access public\n\t * @param mixed $hostname\n\t * @param bool $permit_root_domain\n\t * @return bool|mixed\n\t */\n\tpublic function validate_hostname($hostname, $permit_root_domain=true) {\n    \t// first validate hostname\n    \t$valid =  (preg_match(\"/^([a-z_\\d](-*[a-z_\\d])*)(\\.([a-z_\\d](-*[a-z_\\d])*))*$/i\", $hostname) \t//valid chars check\n\t            && preg_match(\"/^.{1,253}$/\", $hostname) \t\t\t\t\t\t\t\t\t\t//overall length check\n\t            && preg_match(\"/^[^\\.]{1,63}(\\.[^\\.]{1,63})*$/\", $hostname)   ); \t\t\t\t//length of each label\n\t    // if it fails return immediately\n\t    if (!$valid) {\n    \t    return $valid;\n\t    }\n\t    // than validate root_domain if requested\n\t    elseif ($permit_root_domain)    {\n    \t    return $valid;\n\t    }\n\t    else {\n    \t    if(strpos($hostname, \".\")!==false)  { return $valid; }\n    \t    else                                { return false; }\n\t    }\n\t}\n\n\t/**\n\t * Validates IP address\n\t *\n\t * @access public\n\t * @param mixed $ip\n\t * @return bool\n\t */\n\tpublic function validate_ip ($ip) {\n    \tif(filter_var($ip, FILTER_VALIDATE_IP)===false) { return false; }\n    \telse                                            { return true; }\n\t}\n\n\t/**\n\t * Validates MAC address\n\t *\n\t * @access public\n\t * @param mixed $mac\n\t * @return bool\n\t */\n\tpublic function validate_mac ($mac) {\n    \t// first put it to common format (1)\n    \t$mac = $this->reformat_mac_address ($mac);\n    \t// we permit empty\n        if (is_blank($mac))                                                            { return true; }\n    \telseif (preg_match('/^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/', $mac) != 1)   { return false; }\n    \telse                                                                            { return true; }\n\t}\n\n    /**\n     * Validates json from provided string.\n     *\n     * @access public\n     * @param mixed $string\n     * @return mixed\n     */\n    public function validate_json_string($string) {\n        // try to decode\n        pf_json_decode($string);\n        // check for error\n        $parse_result = json_last_error_msg();\n        // save possible error\n        if($parse_result!==\"No error\") {\n            $this->json_error = $parse_result;\n        }\n        // return true / false\n        return (json_last_error() == JSON_ERROR_NONE);\n    }\n\n\t/**\n\t * Validate a postal code.\n\t *\n\t * https://gist.github.com/mpezzi/1171590\n\t *\n\t * @param $value\n\t * @param $country\n     * @return bool\n\t */\n\tpublic function validate_postcode ($value = \"\", $country = 'united kingdom') {\n\t\t// to lower\n\t\t$country = strtolower($country);\n\t\t// set regexes\n\t\t$country_regex = array(\n\t\t\t'united kingdom' => '/\\\\A\\\\b[A-Z]{1,2}[0-9][A-Z0-9]? [0-9][ABD-HJLNP-UW-Z]{2}\\\\b\\\\z/i',\n\t\t\t'england'        => '/\\\\A\\\\b[A-Z]{1,2}[0-9][A-Z0-9]? [0-9][ABD-HJLNP-UW-Z]{2}\\\\b\\\\z/i',\n\t\t\t'canada'         => '/\\\\A\\\\b[ABCEGHJKLMNPRSTVXY][0-9][A-Z][ ]?[0-9][A-Z][0-9]\\\\b\\\\z/i',\n\t\t\t'italy'          => '/^[0-9]{5}$/i',\n\t\t\t'deutschland'    => '/^[0-9]{5}$/i',\n\t\t\t'germany'        => '/^[0-9]{5}$/i',\n\t\t\t'belgium'        => '/^[1-9]{1}[0-9]{3}$/i',\n\t\t\t'united states'  => '/\\\\A\\\\b[0-9]{5}(?:-[0-9]{4})?\\\\b\\\\z/i',\n\t\t\t'default'        => '/^[0-9]/i',\n\t\t);\n\n\t\t// check for country\n\t\tif ( isset($country_regex[$country]) ) {\n\t\t\treturn preg_match($country_regex[$country], $value);\n\t\t}\n\t\t// default\n\t\treturn preg_match($country_regex['default'], $value);\n\t}\n\n\t/**\n\t * Transforms ipv6 to nt\n\t *\n\t * @access public\n\t * @param mixed $ipv6\n\t * @return mixed\n\t */\n\tpublic function ip2long6 ($ipv6) {\n\t\tif($ipv6 == \".255.255.255\") {\n\t\t\treturn false;\n\t\t}\n\t    $ip_n = inet_pton($ipv6);\n\t    $bits = 15; // 16 x 8 bit = 128bit\n\t    $ipv6long = \"\";\n\n\t    while ($bits >= 0)\n\t    {\n\t        $bin = sprintf(\"%08b\",(ord($ip_n[$bits])));\n\t        $ipv6long = $bin.$ipv6long;\n\t        $bits--;\n\t    }\n\t    return gmp_strval(gmp_init($ipv6long,2),10);\n\t}\n\n\t/**\n\t * Transforms int to ipv4\n\t *\n\t * @access private\n\t * @param mixed $ipv4long\n\t * @return mixed\n\t */\n\tprivate function long2ip4($ipv4long) {\n\t\tif (PHP_INT_SIZE==4) {\n\t\t\t// As of php7.1 long2ip() no longer accepts strings.\n\t\t\t// Convert unsigned int IPv4 to signed integer.\n\t\t\t$ipv4long = (int) ($ipv4long + 0);\n\t\t}\n\t\treturn long2ip($ipv4long);\n\t}\n\n\t/**\n\t * Transforms int to ipv6\n\t *\n\t * @access private\n\t * @param mixed $ipv6long\n\t * @return mixed\n\t */\n\tprivate function long2ip6($ipv6long) {\n\t\t$hex = sprintf('%032s', gmp_strval(gmp_init($ipv6long, 10), 16));\n\t\t$ipv6 = implode(':', str_split($hex, 4));\n\t\t// compress result\n\t\treturn inet_ntop(inet_pton($ipv6));\n\t}\n\n\t/**\n\t * Identifies IP address format\n\t *\n\t *\t0 = decimal\n\t *\t1 = dotted\n\t *\n\t * @access public\n\t * @param mixed $address\n\t * @return mixed decimal or dotted\n\t */\n\tpublic function identify_address_format ($address) {\n\t\treturn is_numeric($address) ? \"decimal\" : \"dotted\";\n\t}\n\n\t/**\n\t * Transforms IP address to required format\n\t *\n\t *\tformat can be decimal (1678323323) or dotted (10.10.0.0)\n\t *\n\t * @access public\n\t * @param mixed $address\n\t * @param string $format (default: \"dotted\")\n\t * @return mixed requested format\n\t */\n\tpublic function transform_address ($address, $format = \"dotted\") {\n\t\t# no change\n\t\tif($this->identify_address_format ($address) == $format)\t\t{ return $address; }\n\t\telse {\n\t\t\tif($this->identify_address_format ($address) == \"dotted\")\t{ return $this->transform_to_decimal ($address); }\n\t\t\telse\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ return $this->transform_to_dotted ($address); }\n\t\t}\n\t}\n\n\t/**\n\t * Transform IP address from decimal to dotted (167903488 -> 10.2.1.0)\n\t *\n\t * @access public\n\t * @param mixed $address\n\t * @return mixed dotted format\n\t */\n\tpublic function transform_to_dotted ($address) {\n\t    if ($this->identify_address ($address) == \"IPv4\" ) \t\t\t\t{ return($this->long2ip4($address)); }\n\t    else \t\t\t\t\t\t\t\t \t\t\t  \t\t\t\t{ return($this->long2ip6($address)); }\n\t}\n\n\t/**\n\t * Transform IP address from dotted to decimal (10.2.1.0 -> 167903488)\n\t *\n\t * @access public\n\t * @param mixed $address\n\t * @return int IP address\n\t */\n\tpublic function transform_to_decimal ($address) {\n\t    if ($this->identify_address ($address) == \"IPv4\" ) \t\t\t\t{ return( sprintf(\"%u\", ip2long($address)) ); }\n\t    else \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t{ return($this->ip2long6($address)); }\n\t}\n\n\t/**\n\t * Returns array of address types\n\t *\n\t * @access protected\n\t * @return void\n\t */\n\tprotected function get_addresses_types () {\n\t\t# from cache\n\t\tif($this->address_types == null) {\n\t\t\t# fetch\n\t\t\t$types = $this->fetch_all_objects (\"ipTags\", \"id\");\n\t\t\tif (!is_array($types))\n\t\t\t\treturn;\n\n\t\t\t# save to array\n\t\t\t$types_out = array();\n\t\t\tforeach($types as $t) {\n\t\t\t\t$types_out[$t->id] = (array) $t;\n\t\t\t}\n\t\t\t# save to cache\n\t\t\t$this->address_types = $types_out;\n\t\t}\n\t}\n\n\t/**\n\t * Translates address type from index (int) to type\n\t *\n\t *\te.g.: 0 > offline\n\t *\n\t * @access protected\n\t * @param mixed $index\n\t * @return mixed\n\t */\n\tprotected function translate_address_type ($index) {\n\t\treturn isset($this->address_types[$index][\"type\"]) ? $this->address_types[$index][\"type\"] : \"Used\";\n\t}\n\n\t/**\n\t * Returns text representation of json errors\n\t *\n\t * @access public\n\t * @param mixed $error_int\n\t * @return mixed\n\t */\n\tpublic function json_error_decode ($error_int) {\n    \t// init\n    \t$error = array();\n\t\t// error definitions\n\t\t$error[0] = \"JSON_ERROR_NONE\";\n\t\t$error[1] = \"JSON_ERROR_DEPTH\";\n\t\t$error[2] = \"JSON_ERROR_STATE_MISMATCH\";\n\t\t$error[3] = \"JSON_ERROR_CTRL_CHAR\";\n\t\t$error[4] = \"JSON_ERROR_SYNTAX\";\n\t\t$error[5] = \"JSON_ERROR_UTF8\";\n\t\t$error[6] = \"JSON_ERROR_RECURSION\";\n\t\t$error[7] = \"JSON_ERROR_INF_OR_NAN\";\n\t\t$error[8] = \"JSON_ERROR_UNSUPPORTED_TYPE\";\n\t\t$error[9] = \"JSON_ERROR_INVALID_PROPERTY_NAME\";\n\t\t$error[10] = \"JSON_ERROR_UTF16\";\n\t\t// return def\n\t\tif (isset($error[$error_int]))\t{ return $error[$error_int]; }\n\t\telse\t\t\t\t\t\t\t{ return \"JSON_ERROR_UNKNOWN\"; }\n\t}\n\n\t/**\n\t * Download URL via CURL\n\t * @param  string $url\n\t * @param  array|boolean $headers (default:false)\n\t * @param  integer $timeout (default:30)\n\t */\n\tpublic function curl_fetch_url($url, $headers=false, $timeout=30) {\n\t\t$result = ['result'=>false, 'result_code'=>503, 'error_msg'=>''];\n\n\t\tif (Config::ValueOf('offline_mode')) {\n\t\t\t$result['error_msg'] = _('Internet access disabled in config.php');\n\t\t\treturn $result;\n\t\t}\n\n\t\ttry {\n\t\t\t$curl = curl_init();\n\t\t\tcurl_setopt($curl, CURLOPT_URL, $url);\n\t\t\tcurl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);\n\t\t\tcurl_setopt($curl, CURLOPT_MAXREDIRS, 4);\n\t\t\tcurl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n\t\t\tcurl_setopt($curl, CURLOPT_FAILONERROR, true);\n\t\t\tcurl_setopt($curl, CURLOPT_SSL_VERIFYPEER, true);\n\t\t\tcurl_setopt($curl, CURLOPT_CONNECTTIMEOUT, $timeout);\n\t\t\tif (is_array($headers))\n\t\t\tcurl_setopt($curl, CURLOPT_HTTPHEADER, $headers);\n\n\t\t\t// configure proxy settings\n\t\t\tif (Config::ValueOf('proxy_enabled') == true) {\n\t\t\t\tcurl_setopt($curl, CURLOPT_PROXY, Config::ValueOf('proxy_server'));\n\t\t\t\tcurl_setopt($curl, CURLOPT_PROXYPORT, Config::ValueOf('proxy_port'));\n\t\t\t\tif (Config::ValueOf('proxy_use_auth') == true) {\n\t\t\t\tcurl_setopt($curl, CURLOPT_PROXYUSERPWD, Config::ValueOf('proxy_user').':'.Config::ValueOf('proxy_pass'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$result['result']      = curl_exec($curl);\n\t\t\t$result['result_code'] = curl_getinfo($curl, CURLINFO_HTTP_CODE);\n\t\t\t$result['error_msg']   = curl_error($curl);\n\n\t\t\t// close\n\t\t\tcurl_close ($curl);\n\n\t\t} catch (Exception $e) {\n\t\t\t$result['error_msg'] = $e->getMessage();\n\t\t}\n\n\t\treturn $result;\n\t}\n\n    /**\n     * Updates location to latlng from address\n     *\n     * @access public\n     * @param mixed $id\n     * @param mixed $lat\n     * @param mixed $lng\n     * @return bool\n     */\n    public function update_latlng ($id, $lat, $lng) {\n\t\t# execute\n\t\ttry { $this->Database->updateObject(\"locations\", array(\"id\"=>$id, \"lat\"=>$lat, \"long\"=>$lng), \"id\"); }\n\t\tcatch (Exception $e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n    }\n\n    /**\n     * Creates form input field for custom fields.\n     *\n     * @access public\n     * @param mixed $field\n     * @param mixed $object\n     * @param mixed $timepicker_index\n     * @param bool $disabled\n     * @param string $set_delimiter\n     * @param string $nameSuffix\n     * @return array\n     */\n    public function create_custom_field_input ($field, $object, $timepicker_index, $disabled = false, $set_delimiter = \"\", $nameSuffix = \"\") {\n        # make sure it is array\n\t\t$field  = (array) $field;\n\t\t$object = (object) $object;\n\n        // disabled\n        $disabled_text = $disabled ? \"readonly\" : \"\";\n        // replace spaces with |\n        $field['nameNew'] = str_replace(\" \", \"___\", $field['name']);\n        // required\n        $required = $field['Null']==\"NO\" ? \"*\" : \"\";\n\t\t// set default value if adding new object\n\t\tif (!property_exists($object, $field['name'])) {\n\t\t\t$object->{$field['name']} = $field['Default'];\n\t\t}\n\n        //set, enum\n        if(substr($field['type'], 0,3) == \"set\" || substr($field['type'], 0,4) == \"enum\") {\n        \t$html = $this->create_custom_field_input_set_enum ($field, $object, $disabled_text, $set_delimiter, $nameSuffix);\n        }\n        //date and time picker\n        elseif($field['type'] == \"date\" || $field['type'] == \"datetime\") {\n        \t$html = $this->create_custom_field_input_date ($field, $object, $timepicker_index, $disabled_text, $nameSuffix);\n        }\n        //boolean\n        elseif($field['type'] == \"tinyint(1)\") {\n        \t$html = $this->create_custom_field_input_boolean ($field, $object, $disabled_text, $nameSuffix);\n        }\n        //text\n        elseif($field['type'] == \"text\") {\n        \t$html = $this->create_custom_field_input_textarea ($field, $object, $disabled_text, $nameSuffix);\n        }\n\t\t//default - input field\n\t\telse {\n            $html = $this->create_custom_field_input_input ($field, $object, $disabled_text, $nameSuffix);\n\t\t}\n\n        # result\n        return array(\n\t\t\t\"required\"         => $required,\n\t\t\t\"field\"            => implode(\"\\n\", $html),\n\t\t\t\"timepicker_index\" => $timepicker_index\n        );\n\t}\n\n    /**\n     * Creates form input field for set and enum values\n     *\n     * @access private\n     * @param mixed $field\n     * @param mixed $object\n     * @param string $disabled_text\n     * @param string $set_delimiter\n     * @param string $nameSuffix\n     * @return array\n     */\n    private function create_custom_field_input_set_enum ($field, $object, $disabled_text, $set_delimiter = \"\", $nameSuffix = \"\") {\n\t\t$html = array();\n    \t//parse values\n    \t$field['type'] = trim(substr($field['type'],0,-1));\n    \t$tmp = substr($field['type'], 0,3)==\"set\" ? pf_explode(\",\", str_replace(array(\"set(\", \"'\"), \"\", $field['type'])) : pf_explode(\",\", str_replace(array(\"enum(\", \"'\"), \"\", $field['type']));\n    \t//null\n    \tif($field['Null']!=\"NO\") { array_unshift($tmp, \"\"); }\n\n    \t$html[] = \"<select name='$field[nameNew]$nameSuffix' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]' $disabled_text>\";\n    \tforeach($tmp as $v) {\n    \t\t// set selected\n\t\t\t$selected = $v==$object->{$field['name']} ? \"selected='selected'\" : \"\";\n\t\t\t// parse delimiter\n\t\t\tif(is_blank($set_delimiter)) {\n\t\t\t\t// save\n\t\t        $html[] = \"<option value='$v' $selected>$v</option>\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// explode by delimiter\n\t\t\t\t$tmp2 = explode ($set_delimiter, $v);\n\t    \t\t// reset selected\n\t\t\t\t$selected = $tmp2[0]==$object->{$field['name']} ? \"selected='selected'\" : \"\";\n\t\t\t\t// save\n\t\t        $html[] = \"<option value='$tmp2[0]' $selected>$tmp2[1]</option>\";\n\t\t\t}\n\n    \t}\n    \t$html[] = \"</select>\";\n\n    \t// result\n    \treturn $html;\n\t}\n\n    /**\n     * Creates form input field for date fields.\n     *\n     * @access private\n     * @param mixed $field\n     * @param mixed $object\n     * @param mixed $timepicker_index\n     * @param string $disabled_text\n     * @param string $nameSuffix\n     * @return array\n     */\n    private function create_custom_field_input_date ($field, $object, &$timepicker_index, $disabled_text, $nameSuffix = \"\") {\n   \t\t$html = array ();\n    \t// just for first\n    \tif($timepicker_index==0) {\n    \t\t$html[] =  '<link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap/bootstrap-datetimepicker.min.css?v='.SCRIPT_PREFIX.'\">';\n    \t\t$html[] =  '<script src=\"js/bootstrap-datetimepicker.min.js?v='.SCRIPT_PREFIX.'\"></script>';\n    \t\t$html[] =  '<script>';\n    \t\t$html[] =  '$(document).ready(function() {';\n    \t\t//date only\n    \t\t$html[] =  '\t$(\".datepicker\").datetimepicker( {pickDate: true, pickTime: false, pickSeconds: false });';\n    \t\t//date + time\n    \t\t$html[] =  '\t$(\".datetimepicker\").datetimepicker( { pickDate: true, pickTime: true } );';\n    \t\t$html[] =  '})';\n    \t\t$html[] =  '</script>';\n    \t}\n    \t$timepicker_index++;\n\n    \t//set size\n    \tif($field['type'] == \"date\")\t{ $size = 10; $class='datepicker';\t\t$format = \"yyyy-MM-dd\"; }\n    \telse\t\t\t\t\t\t\t{ $size = 19; $class='datetimepicker';\t$format = \"yyyy-MM-dd\"; }\n\n    \t//field\n    \tif(!isset($object->{$field['name']}))\t{ $html[] = ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$nameSuffix .'\" maxlength=\"'.$size.'\" rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\" '.$disabled_text.'>'. \"\\n\"; }\n    \telse\t\t\t\t\t\t\t\t    { $html[] = ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$nameSuffix .'\" maxlength=\"'.$size.'\" value=\"'. $this->strip_xss($object->{$field['name']}). '\" rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\" '.$disabled_text.'>'. \"\\n\"; }\n\n    \t// result\n\t\treturn $html;\n\t}\n\n    /**\n     * Creates form input field for boolean fields.\n     *\n     * @access private\n     * @param mixed $field\n     * @param mixed $object\n     * @param string $disabled_text\n     * @param string $nameSuffix\n     * @return array\n     */\n    private function create_custom_field_input_boolean ($field, $object, $disabled_text, $nameSuffix = \"\") {\n    \t$html = array ();\n    \t$html[] =  \"<select name='$field[nameNew]$nameSuffix' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]' $disabled_text>\";\n    \t$tmp = array(0=>\"No\",1=>\"Yes\");\n    \t//null\n    \tif($field['Null']!=\"NO\") { $tmp[2] = \"\"; }\n\n    \tforeach($tmp as $k=>$v) {\n    \t\tif(is_blank($object->{$field['name']}) && $k==2)\t{ $html[] = \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n    \t\telseif($k==$object->{$field['name']})\t\t\t\t{ $html[] = \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n    \t\telse\t\t\t\t\t\t\t\t\t\t\t    { $html[] = \"<option value='$k'>\"._($v).\"</option>\"; }\n    \t}\n    \t$html[] = \"</select>\";\n    \t// result\n    \treturn $html;\n\t}\n\n    /**\n     * Creates form input field for text fields.\n     *\n     * @access private\n     * @param mixed $field\n     * @param mixed $object\n     * @param string $disabled_text\n     * @param string $nameSuffix\n     * @return array\n     */\n    private function create_custom_field_input_textarea ($field, $object, $disabled_text, $nameSuffix = \"\") {\n    \t$html = array ();\n    \t$html[] = ' <textarea class=\"form-control input-sm\" name=\"'. $field['nameNew'].$nameSuffix .'\" placeholder=\"'. $this->print_custom_field_name ($field['name']) .'\" rowspan=3 rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\" '.$disabled_text.'>'. $object->{$field['name']}. '</textarea>'. \"\\n\";\n    \t// result\n    \treturn $html;\n\t}\n\n    /**\n     * Creates form input field for date fields.\n     *\n     * @access private\n     * @param mixed $field\n     * @param mixed $object\n     * @param string $disabled_text\n     * @param string $nameSuffix\n     * @return array\n     */\n    private function create_custom_field_input_input ($field, $object, $disabled_text, $nameSuffix = \"\") {\n        $html = array ();\n        // max length\n        $maxlength = 100;\n        if(strpos($field['type'],\"varchar\")!==false) {\n            $maxlength = str_replace(array(\"varchar\",\"(\",\")\"),\"\", $field['type']);\n        }\n        if(strpos($field['type'],\"int\")!==false) {\n            $maxlength = str_replace(array(\"int\",\"(\",\")\"),\"\", $field['type']);\n        }\n        // print\n\t\t$html[] = ' <input type=\"text\" class=\"form-control input-sm\" name=\"'. $field['nameNew'].$nameSuffix .'\" placeholder=\"'. $this->print_custom_field_name ($field['name']) .'\" value=\"'. $this->strip_xss($object->{$field['name']}). '\" size=\"30\" rel=\"tooltip\" data-placement=\"right\" maxlength=\"'.$maxlength.'\" title=\"'.$field['Comment'].'\" '.$disabled_text.'>'. \"\\n\";\n    \t// result\n    \treturn $html;\n\t}\n\n\t/**\n\t * Prints custom field\n\t *\n\t * @method print_custom_field\n\t *\n\t * @param  string $type\n\t * @param  string $value\n\t * @param  string $delimiter\n\t *\n\t * @return void\n\t */\n\tpublic function print_custom_field ($type, $value, $delimiter = false, $replacement = false) {\n\t\t// create links\n\t\t$value = $this->create_links ($value, $type);\n\n\t\t// delimiter ?\n\t\tif($delimiter !== false && $replacement !== false) {\n\t\t\t$value = str_replace($delimiter, $replacement, $value);\n\t\t}\n\n\t\t//booleans\n\t\tif($type==\"tinyint(1)\")\t{\n\t\t\tif($value == \"1\")\t\t\t{ print _(\"Yes\"); }\n\t\t\telseif(is_blank($value)) \t{ print \"/\"; }\n\t\t\telse\t\t\t\t\t\t{ print _(\"No\"); }\n\t\t}\n\t\t//text\n\t\telseif($type==\"text\") {\n\t\t\tif(!is_blank($value))\t{ print \"<i class='fa fa-gray fa-comment' rel='tooltip' data-container='body' data-html='true' title='\".str_replace(\"\\n\", \"<br>\", escape_input($value)).\"'>\"; }\n\t\t\telse\t\t\t\t\t{ print \"\"; }\n\t\t}\n\t\telse {\n\t\t\tprint $value;\n\t\t}\n\t}\n\n\t/**\n\t * Print custom field name, strip out custom_ prefix\n\t *\n\t * @method print_custom_field_name\n\t *\n\t * @param  string $name\n\t *\n\t * @return string\n\t */\n\tpublic function print_custom_field_name ($name) {\n\t\treturn strpos($name, \"custom_\")===0 ? substr($name, 7) : $name;\n\t}\n\n\t/**\n\t * Creates image link to rack.\n\t *\n\t * @method create_rack_link\n\t *\n\t * @param  bool|int $rackId\n\t * @param  bool|int $deviceId\n\t * @param  bool $is_back\n\t *\n\t * @return [type]\n\t */\n\tpublic function create_rack_link ($rackId = false, $deviceId = false, $is_back = false) {\n    \tif($rackId===false) {\n        \t    return false;\n    \t}\n    \telse {\n        \t//device ?\n        \tif ($deviceId!==false) {\n            \treturn $this->createURL ().BASE.\"app/tools/racks/draw_rack.php?rackId=$rackId&deviceId=$deviceId&is_back=$is_back\";\n        \t}\n        \telse {\n            \treturn $this->createURL ().BASE.\"app/tools/racks/draw_rack.php?rackId=$rackId&is_back=$is_back\";\n        \t}\n    \t}\n\t}\n\n\t/**\n\t * Show MAC address and vendor details\n\t *\n\t * @param string $mac\n\t * @return string\n\t */\n\tpublic function show_mac_and_vendor($mac) {\n\t\t// Check if MAC decoding is enabled\n\t\t$this->get_settings();\n\t\tif (is_object($this->settings) && $this->settings->decodeMAC) {\n\t\t\t$vendor = $this->get_mac_address_vendor_details($mac);\n\n\t\t\tif (!empty($vendor)) {\n\t\t\t\treturn  _(\"MAC\") . \": \" . escape_input($mac) . \"<hr>\" . _(\"Vendor\") . \": \" . escape_input($vendor);\n\t\t\t}\n\t\t}\n\n\t\treturn _(\"MAC\") . \": \" . escape_input($mac);\n\t}\n\n\t/**\n\t * Get MAC address vendor details\n\t *\n\t * https://www.macvendorlookup.com/vendormacs-xml-download\n\t *\n\t * @method get_mac_address_vendor\n\t * @param  string $mac\n\t * @param  string &$prefix\n\t * @return string\n\t */\n\tpublic function get_mac_address_vendor_details($mac, &$prefix=null) {\n\t\tif (strlen($mac) < 4 || !$this->validate_mac($mac)) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tif (empty($this->mac_address_vendors)) {\n\t\t\t// Generated from vendorMac.xml\n\t\t\t// Unique MAC address: 45344\n\t\t\t// Updated: 12 March 2022\n\t\t\t$data = file_get_contents(dirname(__FILE__) . \"/../vendormacs.json\");\n\t\t\t$this->mac_address_vendors = pf_json_decode($data, true);\n\t\t}\n\n\t\t// Find longest prefix match in $this->mac_address_vendors array (max 9)\n\t\t$search_mac = substr($this->reformat_mac_address($mac, 4), 0, 9);\n\n\t\twhile (!is_blank($search_mac)) {\n\t\t\tif (isset($this->mac_address_vendors[$search_mac])) {\n\t\t\t\t$prefix = implode(\":\", str_split(strtoupper($search_mac), 2));\n\t\t\t\treturn $this->mac_address_vendors[$search_mac];\n\t\t\t}\n\n\t\t\t$search_mac = substr($search_mac, 0, -1);\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Read user supplied permissions ($_POST) and calculate deltas from old_permissions\n\t *\n\t * @access public\n\t * @param  array $post_permissions\n\t * @param  array $old_permissions\n\t * @return array\n\t */\n\tpublic function get_permission_changes ($post_permissions, $old_permissions) {\n\t\t$new_permissions = array();\n\t\t$removed_permissions = array();\n\t\t$changed_permissions = array();\n\n\t\t# set new posted permissions\n\t\tforeach($post_permissions as $key=>$val) {\n\t\t\tif(substr($key, 0,5) == \"group\") {\n\t\t\t\tif($val != \"0\") $new_permissions[substr($key,5)] = $val;\n\t\t\t}\n\t\t}\n\n\t\t// calculate diff\n\t\tif(is_array($old_permissions)) {\n\t\t\tforeach ($old_permissions as $k1=>$p1) {\n\t\t\t\t// if there is not permisison in new that remove old\n\t\t\t\t// if change than save\n\t\t\t\tif (!array_key_exists($k1, $new_permissions)) {\n\t\t\t\t\t$removed_permissions[$k1] = 0;\n\t\t\t\t} elseif ($old_permissions[$k1]!==$new_permissions[$k1]) {\n\t\t\t\t\t$changed_permissions[$k1] = $new_permissions[$k1];\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$old_permissions = array();  // fix for adding\n\t\t}\n\t\t// add also new groups if available\n\t\tif(is_array($new_permissions)) {\n\t\t\tforeach ($new_permissions as $k1=>$p1) {\n\t\t\t\tif(!array_key_exists($k1, $old_permissions)) {\n\t\t\t\t\t$changed_permissions[$k1] = $new_permissions[$k1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn array($removed_permissions, $changed_permissions, $new_permissions);\n\t}\n\n\t/**\n\t * Parse subnet permissions to user readable format\n\t *\n\t * @access public\n\t * @param mixed $permissions\n\t * @return string\n\t */\n\tpublic function parse_permissions ($permissions) {\n\t\tswitch($permissions) {\n\t\t\tcase 0: \t$r = _(\"No access\");\tbreak;\n\t\t\tcase 1: \t$r = _(\"Read\");\t\t\tbreak;\n\t\t\tcase 2: \t$r = _(\"Write\");\t\tbreak;\n\t\t\tcase 3: \t$r = _(\"Admin\");\t\tbreak;\n\t\t\tdefault:\t$r = _(\"error\");\n\t\t}\n\t\treturn $r;\n\t}\n\n\n\n\n\n\n\t/**\n\t *\t@breadcrumbs functions\n\t * ------------------------\n\t */\n\n\t/**\n\t * print_breadcrumbs function.\n\t *\n\t * @access public\n\t * @param mixed $Section\n\t * @param mixed $Subnet\n\t * @param mixed $req\n\t * @param mixed $Address (default: null)\n\t * @return void\n\t */\n\tpublic function print_breadcrumbs ($Section, $Subnet, $req, $Address=null) {\n\t\t# subnets\n\t\tif($req['page'] == \"subnets\")\t\t{ $this->print_subnet_breadcrumbs ($Subnet, $req, $Address); }\n\t\t# folders\n\t\telseif($req['page'] == \"folder\")\t{ $this->print_folder_breadcrumbs ($Section, $Subnet, $req); }\n\t\t# tools\n\t\telseif ($req['page'] == \"tools\") \t{ $this->print_tools_breadcrumbs ($req); }\n\t}\n\n\t/**\n\t * Print address breadcrumbs\n\t *\n\t * @access private\n\t * @param mixed $Subnet\n\t * @param mixed $req\n\t * @param mixed $Address\n\t * @return void\n\t */\n\tprivate function print_subnet_breadcrumbs ($Subnet, $req, $Address) {\n\t\tif(isset($req['subnetId'])) {\n\t\t\t# get all parents\n\t\t\t$parents = $Subnet->fetch_parents_recursive ($req['subnetId']);\n\n\t\t\tprint \"<ul class='breadcrumb'>\";\n\t\t\t# remove root - 0\n\t\t\t//array_shift($parents);\n\n\t\t\t# section details\n\t\t\t$section = (array) $this->fetch_object (\"sections\", \"id\", $req['section']);\n\n\t\t\t# section name\n\t\t\tprint \"\t<li><a href='\".create_link(\"subnets\",$section['id']).\"'>$section[name]</a> <span class='divider'></span></li>\";\n\n\t\t\t# all parents\n\t\t\tforeach($parents as $parent) {\n\t\t\t\t$subnet = (array) $Subnet->fetch_subnet(\"id\",$parent);\n\t\t\t\tif($subnet['isFolder']==1) {\n\t\t\t\t\tprint \"\t<li><a href='\".create_link(\"folder\",$section['id'],$parent).\"'><i class='icon-folder-open icon-gray'></i> $subnet[description]</a> <span class='divider'></span></li>\";\n\t\t\t\t} else {\n\t\t\t\t\tprint \"\t<li><a href='\".create_link(\"subnets\",$section['id'],$parent).\"'>$subnet[description] ($subnet[ip]/$subnet[mask])</a> <span class='divider'></span></li>\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t# parent subnet\n\t\t\t$subnet = (array) $Subnet->fetch_subnet(\"id\",$req['subnetId']);\n\t\t\t# ip set\n\t\t\tif(isset($req['ipaddrid'])) {\n\t\t\t\t$ip = (array) $Address->fetch_address (\"id\", $req['ipaddrid']);\n\t\t\t\tprint \"\t<li><a href='\".create_link(\"subnets\",$section['id'],$subnet['id']).\"'>$subnet[description] ($subnet[ip]/$subnet[mask])</a> <span class='divider'></span></li>\";\n\t\t\t\tprint \"\t<li class='active'>$ip[ip]</li>\";\t\t\t//IP address\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprint \"\t<li class='active'>$subnet[description] ($subnet[ip]/$subnet[mask])</li>\";\t\t//active subnet\n\n\t\t\t}\n\t\t\tprint \"</ul>\";\n\t\t}\n\t}\n\n\t/**\n\t * Print folder breadcrumbs\n\t *\n\t * @access private\n\t * @param obj $Section\n\t * @param obj $Subnet\n\t * @param mixed $req\n\t * @return void\n\t */\n\tprivate function print_folder_breadcrumbs ($Section, $Subnet, $req) {\n\t\tif(isset($req['subnetId'])) {\n\t\t\t# get all parents\n\t\t\t$parents = $Subnet->fetch_parents_recursive ($req['subnetId']);\n\t\t\tprint \"<ul class='breadcrumb'>\";\n\t\t\t# remove root - 0\n\t\t\tarray_shift($parents);\n\n\t\t\t# section details\n\t\t\t$section = (array) $Section->fetch_section(null, $req['section']);\n\n\t\t\t# section name\n\t\t\tprint \"\t<li><a href='\".create_link(\"subnets\",$section['id']).\"'>$section[name]</a> <span class='divider'></span></li>\";\n\n\t\t\t# all parents\n\t\t\tforeach($parents as $parent) {\n\t\t\t\t$parent = (array) $parent;\n\t\t\t\t$subnet = (array) $Subnet->fetch_subnet(null,$parent[0]);\n\t\t\t\tif ($subnet['isFolder']==\"1\")\n\t\t\t\tprint \"\t<li><a href='\".create_link(\"folder\",$section['id'],$parent[0]).\"'><i class='icon-folder-open icon-gray'></i> $subnet[description]</a> <span class='divider'></span></li>\";\n\t\t\t\telse\n\t\t\t\tprint \"\t<li><a href='\".create_link(\"subnets\",$section['id'],$parent[0]).\"'><i class='icon-folder-open icon-gray'></i> $subnet[description]</a> <span class='divider'></span></li>\";\n\t\t\t}\n\t\t\t# parent subnet\n\t\t\t$subnet = (array) $Subnet->fetch_subnet(null,$req['subnetId']);\n\t\t\tprint \"\t<li>$subnet[description]</li>\";\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# active subnet\n\t\t\tprint \"</ul>\";\n\t\t}\n\t}\n\n\t/**\n\t * Prints tools breadcrumbs\n\t *\n\t * @access public\n\t * @param mixed $req\n\t * @return void\n\t */\n\tprivate function print_tools_breadcrumbs ($req) {\n\t\tprint \"<ul class='breadcrumb'>\";\n\t\tprint \"\t<li><a href='\".create_link(\"tools\").\"'>\"._('Tools').\"</a> <span class='divider'></span></li>\";\n\t\tif(!isset($req['subnetId'])) {\n\t\t    print \"\t<li class='active'>$req[section]</li>\";\n\t\t}\n\t\telse {\n\t\t    print \"\t<li class='active'><a href='\".create_link(\"tools\", $req['section']).\"'>$req[section]</a> <span class='divider'></span></li>\";\n\n\t\t    # pstn\n\t\t    if ($_GET['section']==\"pstn-prefixes\") {\n    \t\t\t# get all parents\n    \t\t\t$Tools = new Tools ($this->Database);\n    \t\t\t$parents = $Tools->fetch_prefix_parents_recursive ($req['subnetId']);\n    \t\t\t# all parents\n    \t\t\tforeach($parents as $parent) {\n    \t\t\t\t$prefix = $this->fetch_object(\"pstnPrefixes\", \"id\", $parent[0]);\n    \t\t\t\tprint \"\t<li><a href='\".create_link(\"tools\",$req['section'],$parent[0]).\"'><i class='icon-folder-open icon-gray'></i> $prefix->name</a> <span class='divider'></span></li>\";\n    \t\t\t}\n\n\t\t    \t$prefix = $this->fetch_object(\"pstnPrefixes\", \"id\", $req['subnetId']);\n\t\t    \tprint \"\t<li class='active'>$prefix->name</li>\";\n\t\t\t}\n\t\t}\n\t\tprint \"</ul>\";\n\t}\n\n\t/**\n\t * Print documentation link\n\t *\n\t * @param string $doc  document path/file\n\t * @return void\n\t */\n\tpublic function print_doc_link($doc) {\n\t\tprint \"<a style='float:right' target=_ href='\".create_link(\"tools/documentation/$doc\").\"'>\"._(\"Documentation\").\" <i class='fa fa-book'></i></a>\";\n\t}\n\n\t/**\n\t * Prints site title\n\t *\n\t * @access public\n\t * @param mixed $get\n\t * @return string\n\t */\n\tpublic function get_site_title ($get) {\n    \t// remove html tags\n    \t$get = $this->strip_input_tags ($get);\n    \t// init\n    \t$title = array ();\n    \t$title[] = $this->settings->siteTitle;\n\n    \t// page\n    \tif (isset($get['page'])) {\n        \t// dashboard\n        \tif ($get['page']==\"dashboard\") {\n            \treturn $this->settings->siteTitle.\" \"._(\"Dashboard\");\n        \t}\n        \t// install, upgrade\n        \telseif ($get['page']==\"temp_share\" || $get['page']==\"request_ip\" || $get['page']==\"opensearch\") {\n            \t$title[] = ucwords(escape_input($get['page']));\n        \t}\n        \t// sections, subnets\n        \telseif ($get['page']==\"subnets\" || $get['page']==\"folder\") {\n            \t// subnets\n            \t$title[] = _(\"Subnets\");\n\n            \t// section\n            \tif (isset($get['section'])) {\n                 \t$se = $this->fetch_object (\"sections\", \"id\", escape_input($get['section']));\n                \tif($se!==false) {\n                    \t$title[] = $se->name;\n                \t}\n            \t}\n            \t// subnet\n            \tif (isset($get['subnetId'])) {\n                 \t$sn = $this->fetch_object (\"subnets\", \"id\", escape_input($get['subnetId']));\n                \tif($sn!==false) {\n                    \tif($sn->isFolder) {\n                        \t$title[] = $sn->description;\n                    \t}\n                    \telse {\n                        \t$sn->description = !is_blank($sn->description) ? \" (\".$sn->description.\")\" : \"\";\n                        \t$title[] = $this->transform_address($sn->subnet, \"dotted\").\"/\".$sn->mask.$sn->description;\n                        }\n                \t}\n            \t}\n            \t// ip address\n            \tif (isset($get['ipaddrid'])) {\n                    $ip = $this->fetch_object (\"ipaddresses\", \"id\", escape_input($get['ipaddrid']));\n                    if($ip!==false) {\n                        $title[] = $this->transform_address($ip->ip_addr, \"dotted\");\n                    }\n            \t}\n        \t}\n        \t// tools, admin\n        \telseif ($get['page']==\"tools\" || $get['page']==\"administration\") {\n            \t$title[] = ucwords(escape_input($get['page']));\n            \t// subpage\n            \tif (isset($get['section'])) {\n                \t$title[] = ucwords(escape_input($get['section']));\n            \t}\n            \tif (isset($get['subnetId'])) {\n                \t// vland domain\n                \tif($get['section']==\"vlan\") {\n                     \t$se = $this->fetch_object (\"vlanDomains\", \"id\", escape_input($get['subnetId']));\n                    \tif($se!==false) {\n                        \t$title[] = $se->name.\" domain\";\n                    \t}\n                \t}\n                \telse {\n                    \t$title[] = ucwords(escape_input($get['subnetId']));\n                    }\n            \t}\n        \t}\n        \telse {\n            \t$title[] = ucwords(escape_input($get['page']));\n            }\n    \t}\n        // return title\n    \treturn implode(\" / \", $title);\n\t}\n\n\n\n\n\t/**\n\t * Print action wrapper\n\t *\n\t * Provided items can have following items:\n\t *     type: link, divider, header\n\t *     text: text to print\n\t *     href: ''\n\t *     class: classes to be added to item\n\t *     dataparams: params to be added (e.g. data-deviceid='0')\n\t *     icon: name for icon\n\t *     visible: where it should be visible\n\t *\n\t *\n\t * @method print_actions\n\t * @param  string $type\n\t * @param  array $items [array of items]\n\t * @param  bool $left_align\n\t * @param  bool $print_text\n\t * @return [type]\n\t */\n\tpublic function print_actions ($compress = \"1\", $items = [], $left_align = false, $print_text = false) {\n\t    if (sizeof($items)>0) {\n\t        return $compress==\"1\" ? $this->print_actions_dropdown($items, $left_align, $print_text) : $this->print_actions_buttons ($items);\n\t    }\n\t    else {\n\t        return \"\";\n\t    }\n\t}\n\n\t/**\n\t * Prints action dropdown\n\t *\n\t * @method print_actions_buttons\n\t * @param  array $items [array of items]\n\t * @param  bool $left_align\n\t * @param  bool $print_text\n\t * @return string\n\t */\n\tprivate function print_actions_dropdown ($items = [], $left_align = false, $print_text = false) {\n\t    // init\n\t    $html   = [];\n\t    // alignment\n\t    $alignment = $left_align ? \"dropdown-menu-left\" : \"dropdown-menu-right\";\n\t    // text\n\t    $action_text = $print_text ? \" <i class='fa fa-cogs'></i> \"._(\"Actions\").\" \" : \" <i class='fa fa-cogs'></i> \";\n\n\t    $html[] = \"<div class='dropdown'>\";\n\t    $html[] = \"  <button class='btn btn-xs btn-default dropdown-toggle ' type='button' id='dropdownMenu' data-toggle='dropdown' aria-haspopup='true' aria-expanded='true' rel='tooltip' title='\"._(\"Actions\").\"'> \".$action_text.\" <span class='caret'></span></button>\";\n\t    $html[] = \"  <ul class='dropdown-menu $alignment' aria-labelledby='dropdownMenu'>\";\n\n\t    // loop items\n\t    foreach ($items as $i) {\n\t\t\t$i = array_merge(['class'=>null, 'dataparams'=>null], $i);\n\n\t        // visible\n\t        if (isset($i['visible'])) {\n\t            if ($i['visible']!=\"dropdown\") {\n\t                continue;\n\t            }\n\t        }\n\t        // title\n\t        if ($i['type']==\"header\") {\n\t            $html[] = \"   <li class='dropdown-header'>\".($i['text']).\"</li>\";\n\n\t        }\n\t        // separator\n\t        elseif ($i['type']==\"divider\") {\n\t            $html[] = \"   <li role='separator' class='divider'></li>\";\n\t        }\n\t        // item\n\t        else {\n\t            $html[] = \"   <li><a class='$i[class]' href='$i[href]' $i[dataparams]><i class='fa fa-$i[icon]'></i> \".$i['text'].\"</a></li>\";\n\t        }\n\t    }\n\t    // remove last divider if present\n\t    if (strpos(end($html),\"divider\")!==false) {\n\t        array_pop($html);\n\t    }\n\t    // end\n\t    $html[] = \" </ul>\";\n\t    $html[] = \"</div>\";\n\t    // result\n\t    return implode(\"\\n\", $html);\n\t}\n\n\n\t/**\n\t * Prints icons btn-group\n\t *\n\t * @method print_actions_buttons\n\t * @param  array $items [array of items]\n\t * @return string\n\t */\n\tprivate function print_actions_buttons ($items = []) {\n\t    // init\n\t    $html   = [];\n\t    // structure\n\t    $html[] = \" <div class='btn-group'>\";\n\t    // irems\n\t    foreach ($items as $i) {\n\t        // visible\n\t        if (isset($i['visible'])) {\n\t            if ($i['visible']!=\"buttons\") {\n\t                continue;\n\t            }\n\t        }\n\t        // save only links\n\t        if($i['type']==\"link\") {\n\t            $html[] = \" <a href='$i[href]' class='btn btn-xs btn-default $i[class]' $i[dataparams] rel='tooltip' title='\".$i['text'].\"'><i class='fa fa-$i[icon]'></i></a>\";\n\t        }\n\t    }\n\t    // end\n\t    $html[] =  \" </div>\";\n\t    // result\n\t    return implode(\"\\n\", $html);\n\t}\n}\n", "== 1.6.0\n\n    Enhancements, changes:\n    ----------------------------\n    + php8.1 compatibility (php8.x support is work-in-progress);\n    + MySQL 5.5.3+ is now required (support for utf8mb4);\n\n    Security Fixes:\n    ----------------------------\n    + SQL injection in custom field enum/set types;\n    + Directory traversal possible in RIPE query;\n    + XSS (reflected) in 'bw-calulator-result.php';\n    + XSS (reflected) by invalid email address response;\n    + XSS (reflected) by /app/tools/subnet-masks/popup.php (#3738);\n    + XSS and LDAP injection in ad-search-result.php;\n    + XSS and LDAP injection in ad-search-group-result.php;\n    + Restrict find_full_subnets.php to CLI;\n    + Ensure confidentiality of database password;\n\n== 1.5.0\n\n    New features:\n    ------------\n    + Mark subnet as isPool to allocate network and broadcast addresses;\n    + Optionally hide section subnet menus;\n    + L2 Domains user permissions;\n    + Add scanPingType==\"none\" option to disable scanning;\n    + Custom fields on IP request forms (#2956);\n    + Added subnet free space map for each possible subnet mask;\n    + Added Vaults (Certificate andf password storing);\n    + Added Tools->Duplicate subnets & IP page;\n    + Added config.php offline_mode to disable server-side Internet lookups (#3462);\n    + Added MAC vendor lookup widget;\n\n    Enhancements, changes:\n    ----------------------------\n    + php7.4 compatibility;\n    + SameSite attribute enabled for site cookies;\n    + SAML2\n        + php-saml updated to 3.4.1 (#3055);\n        + Removal of php-mcrypt dependancy;\n        + Drop support for idpcertfingerprint;\n        + MAP_SAML_USER and SAML_USERNAME config.php configuration moved to db;\n        + php-saml protocol debugging;\n        + Support for signed assertions;\n        + SAML usernames can be extracted from assertion attributes (#2948);\n        + JIT auto-provisioning of accounts (#3389);\n    + Selectable mask for number of subnets/hosts in subnet masks;\n    + Switch from Google Maps to OpenStreeMap and Nominatim;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed upgrade queries issues from 1.3.x to 1.4+ (#3130);\n    + Fixed boolean printout in footer (#2625);\n    + Fixed BGP Admin isn't working (#2631);\n    + do not show statistics in dashboard widget for disabled modules (#2602);\n    + MySQL 8.0 compatibility. (#2646,#2239,#3036);\n    + MariaDB Galera Cluster compatibility (#2498,#3413);\n    + Permit non-numeric postcodes for customers (#2393);\n    + Bandwidth calculator - 400 Bad Request (#1807,#2648);\n    + Table layout not aligned (#2656,#3105,#3113);\n    + Improve scanning requirement checks (#1183);\n    + Date picker hidden (#2673);\n    + PDNS Add/Edit DNS record not working for normal users (#2686);\n    + Unable to save settings with link addresses = text custom field (#2702);\n    + Kea MAC address display issue (#2704);\n    + Returned custom fields to devices table (#2572);\n    + Invalid scan agent key warning;\n    + Subnet filter issue when IP contains 0 octet. (#2748);\n    + Add VLAN button not working (#2741);\n    + Incorrect subnet links in /tools/vrf/ view. (#2774);\n    + Location data missing in exports. (#2833);\n    + Check mysqldump path when exporting database;\n    + Current rack position missing when editing a device. (#2545);\n    + Permit colon in firewall zone interface names (#2737);\n    + Fixed PowerDNS txt SPF editing (#1641);\n    + Blank 'MAC' on SNMP-ARP and SNMP-MAC scans (#2911);\n    + Incorrect network/broadcast calculation for IPv6 (#2879);\n    + Increase allowed email and password lengths (#3021);\n    + Wrong unit location for dual-sided racks (#3086);\n    + Linked ip_addr shows integer notation (#3100);\n    + Invalid scan type () error (#2785);\n    + Invalid CSRF cookie editing rack items (#2556);\n    + FPing discovery marks all addresses as alive (#2888);\n    + Subnet usage calculation updated for nested subnets;\n    + SNMP, number of discovered hosts exceed maximum warning (#3279);\n    + Exclude IPv6 from Ping and Discovery scans (#3354);\n    + Fix for SAML/2FA/login redirections (#3492, #3435, #3517);\n    + php_sessions table doesn't exist error when upgrading (#3417);\n    + Changelog data too long for column errors (#3376,#3398);\n    + RFC 6265 compliant cookies (#3452);\n    + Require unique subnets not working as intended (#3529);\n    + API:\n        + Fixed /user/ calls for SSL with app code (static app code);\n        + Address IP field not displayed when using filter_by (#2934);\n        + Addresses first_free & Subnets first/last_subnet thread safety (#2960);\n\n    Security Fixes:\n    ----------------------------\n    + SQL injections processing `tableName` (#2738);\n    + SQL injections processing `ftype` (#2751);\n    + All circuits map, PHP object injection (#2937);\n    + Upgraded jQuery to 3.5.1 (#3119);\n    + Stored XSS in instructions widgets (#3025, #3360);\n    + PHP session ID fixation (#3342);\n    + XSS (reflected) in IP calculator (#3351);\n    + XSS in pass-change/result.php (#3373);\n    + SQL injection in edit-bgp-mapping-search.php;\n    + Stored XSS in the \"Site title\" parameter;\n    + XSS while uploading CVS files;\n    + XSS (reflected) in 'find subnets';\n    + Incorrect privilege assignments (#3506);\n    + XXS (reflected) in ripe-arin-query;\n    + XSS (reflected) in import previews;\n\n    Translations:\n    ----------------------------\n    + Update Traditional Chinese support to version 1.5 (#2658);\n    + Update Simplified Chinese Translation (#2725);\n    + Italian (it_IT) translation added (#2813);\n    + Updated German translation (#2970, #3065);\n    + Updated Russian translation (#3028, #3367);\n\n== 1.4.0\n\n    New features:\n    ------------\n    + Configurable password policy;\n    + Sessions can be now stored in database (#516);\n    + Two-factor authentication - otp (Google Authenticator);\n    + Customers module (#694);\n    + Routing module (BGP) (#2135);\n    + Search for free subnet inside whole section;\n\n    Enhancements, changes:\n    ----------------------------\n    + Circuits enhancements (Virtual Circuits);\n    + Dropped support for 32bit systems;\n    + PHP 5.4 is now required;\n    + Added compressed actions dropdown;\n    + SNMP module no longer requires MIB files;\n    + Performance enhancements running under Azure/Amazon;\n    + Added option to disable user (#1327);\n    + Added policy NAT option;\n    + Added custom NAT fields;\n    + Rack module enhancements (#1325):\n        + Dynamic rack sizes;\n        + Top-down / Bottom-up racks;\n        + Custom rack devices independent of devices (power, patch panel);\n    + Customized user permissions for modules:\n        + VLAN module;\n        + VRF module;\n        + PowerDNS module;\n        + Circuits module;\n        + Customers module;\n        + Devices module;\n        + Rack module;\n        + NAT module;\n        + PSTN module;\n        + Locations module;\n    + API:\n        + New API security type - SSL with app code (static app code);\n        + New config.php option $api_allow_unsafe to allow non-SSL API queries;\n        + Added last access field to api;\n        + Add Mac Search for Addresses controller (#2005);\n        + New overlapping API call;\n        + New global API parameter filter_match = full,partial,regex;\n        + Add Tools API customers submodule;\n        + Fix filtered results to always return data as array (#2558);\n    + Widgets:\n        + New user instruction widget (#2383);\n\n    Translations:\n    ----------------------------\n    + Japanese (ja_JP) translation added;\n    + Traditional Chinese (zh_TW) translation added;\n\n    Bugfixes:\n    ----------------------------\n    + Fix appended \" U\" in Rack description (#2046);\n    + Fix Bandwidth calculator - 400 Bad Request. (#1807);\n    + Fix bad DNS reverse zone for /23 subnet (#666);\n    + Fix Add missing standard field (#2153);\n    + Fix Consistency of VARCHAR Size on 'owner' column across tables (#2136);\n    + Fix Subnet details - Filter button missing when compressed range is used (#2353);\n    + Fix slow page load times with linked addresses (#2324);\n    + Fix \" - is required\" error when adding IPs with an empty IP filter set (#2334);\n    + Fix column 'masterSubnetId' cannot be null error when adding subnets (#1977);\n    + Fix logical circuits add/delete errors (#2381);\n    + Fix adding new VLANs to an empty L2Domain (#2400);\n    + Fix Nested child subnets with \"na\" permissions visible (#2223);\n    + Fix translations containing apostrophes break functionality (#2504);\n    + Set requestedAuthnContext to false for SAML (#2457);\n    + API:\n        + Fix inconsistent API success value returned (#2045);\n        + Fix filter_by functionality (#2392);\n        + Fix PATCH functionality (#2470, #2481);\n\n    Security Fixes:\n    ----------------------------\n    + Hide SNMP community (#2197);\n    + Hide LDAP/AD/Radius username / password and secret from logs and syslog (#2006);\n    + XSS in phpipamredirect cookie (#2338);\n    + XSS in print-user.php, CSRF in user-edit.php (#2326);\n    + Possible SQL injection in nat/item-add-submit.php (#2344);\n    + Fixed possible file inclusion in editing authentication methods;\n    + XSS in subnet-scan-telnet.php, CSRF in subnet-scan-execute.php (#2327);\n\n== 1.3.2\n\n    Enhancements, changes:\n    ----------------------------\n    + Dark theme added;\n    + Full php7.2 compatibility;\n    + url_rewrite has changed, please use new rewrite scheme (https://phpipam.net/news/new_rewrite_scheme/);\n    + Search for matching subnet in all VRFs feature enabled when importing addresses;\n    + Added new config option to show custom fields separated from standard fields when editing IP address;\n    + Added Required fields subpage to define IP address fields that must be filled in;\n    + Performance + bug fixes (#1660, #1657);\n    + MasterSubnet dropdown list is dynamically generated via AJAX call;\n    + Bandwidth calculator;\n    + Support 8U rack sizes. (#1891);\n    + API:\n        + New last_subnet API calls (#1655);\n\n    Translations:\n    ----------------------------\n    + German translation updated to verson 1.3.1;\n    + French translations updated. (#1881);\n\n    Bugfixes:\n    ----------------------------\n    + Fixed uncaught error if vlan number exceeds max permitted (#1455);\n    + Fixed Illegal string offset 'dns_name' in pingCheck.php errors (#1461);\n    + Performance fix for subnet_dropdown_print_available (#1562);\n    + Fixed logo updater for apache v2.4 (#1582);\n    + Fixed section names containing spaces are not included in exports (#1566);\n    + Allow DNS wildcard records (#1571);\n    + Fixed slow mac address vendor decoding for subnet detail view (#1658);\n    + Performance fix for detecting overlapping subnets. (#1052, #1426, #1533);\n    + Performance fix for slow mac address vendor decoding (#1658);\n    + Performance fix for subnet API first_subnet & all_subnets calls;\n    + Performance fix for delegating subnet permissions;\n    + Convert to UTF-8 encoding on import/export to preserve dialectics (#1659, #1700, #1728);\n    + Importing IPs loose Mac Addresses (#1607);\n    + Section names containing spaces are not included in exports. (#1566);\n    + Bug with section and dashboard (#1593);\n    + Fixed improper contents in plain text part of notification e-mails (#1707);\n    + Reduce size of email notifications (#1643);\n    + PHP 5.3 compatibility fixes (#1594, #1730);\n    + PHP 7.2 compatibility fixes (#1683, #1714);\n    + Fixed notification e-mails contain a broken link. (#1708);\n    + Allow dots to be used in domain names. (#1747);\n    + Use multi-byte compatible functions when shortening text. (#1753);\n    + Scan subnet reports/selects invalid php path. (#1757);\n    + Small code refactoring (#1699);\n    + Rack device start position overwritten. (#1545);\n    + Sections with folders returns no subnets using API. (#1883);\n    + Add custom_ prefix to Prefix controller custom fields. (#1836);\n    + Non-Admins missing the button to Add circuit. (#1902);\n    + Wrong field name of deviceTypes table when checking device type. (#1910);\n    + SNMPv3 improvements;\n    + Misc IPv6 fixes;\n\n    Security Fixes:\n    ----------------------------\n    + Code injection in Name field. (#1667);\n    + XSS (reflected) in SubnetID param. (#1702);\n    + CSRF enables open mail relay. (#1703);\n    + Reflected XSS requiring user interaction on search. (#1705);\n    + XSS reflected via CSRF in preview.php. (#1706);\n    + Reflected XSS via CSV upload. (#1742);\n    + Reflected XSS on 'mac' parameter. (#1903);\n\n== 1.3.1\n\n    New features:\n    ------------\n    + Circuits module (circuits, providers, map, ...) (#731);\n\n    Enhancements, changes:\n    ----------------------------\n    + Racks:\n        + Automatic location assignment when device added to rack (#1230);\n        + Rack map showing map of all racks in location;\n        + Rack back side;\n    + Compact menu layout (per-user setting, showing only icons);\n    + Network to network static nat;\n    + Selectable logo size (from config.php) (#952);\n    + Added default option for permissions propagations (#1351);\n    + API:\n        + Added Circuits controller;\n        + Encrypyted requests can now also be form-encoded (#1191);\n        + Introduce mcrypt AES compatibility (#1516);\n        + Fixed field ip not displayed when filters applied (#1529);\n    + New resolve hostnames option for subnet (#1222):\n        + Updates hostnames via pingCheck.php script (if parameter set for subnet);\n        + Updates hostnames via resolveIPaddresses.php script (if parameter set for subnet);\n        + On-the-fly empty hostname update if resolved (if parameter set for subnet and enabled globally);\n        + Added this infor to tools > scanned networks;\n    + Added custom_ prefix to custom field names to avoid duplication with custom fields (#1387);\n    + Added option to hide IP requests for unauthenticated users on login page (#1394);\n    + Performance optimizations for locations and subnet usage calculation;\n    + Added user groups custom fields;\n\n    Translations:\n    ----------------------------\n    + French translation updated to verson 1.3;\n    + German translation updated to verson 1.3;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed RACK images not displayed if not root location (#1204);\n    + Fixed import gateway ip (#1240);\n    + Fixed JSON_UNESCAPED_UNICODE for PHP 5.3 (#1135, #1245);\n    + Rename class Thread to PingThread to avoid naming conflict with pthreads Thread class (#1254);\n    + Fixed custom fields integer on subnet (#1266);\n    + Fixed Import Ip-adress doesnt update location (#1284);\n    + Fixed json_error for logo upload (#1256);\n    + Fixed CSRF error when moving orphaned addresses (#1303);\n    + Fixed VRF fetching via API by Id;\n    + Fixed map issues when quotes are in name/description (#1384);\n    + Fixed item not removed from NAT when deleted (#1378);\n    + Fixed Error when error_reporting = E_ALL about strict standards when importing IP addresses (#1372);\n    + Fixed Apostrophe errors in text custom fields (#1375);\n    + Fixed API error when creating address under folder (#1507);\n    + Fixed SNMPv3 (#1119);\n\n    Security Fixes:\n    ----------------------------\n    + Fixed XSS issues (#1403, #1521, #1500);\n\n== 1.3.0\n\n    New features:\n    ------------\n    + Multicast module (RFC1112, RFC2464) with IP to MAC mapping and multicast networks overview;\n    + Threshold module for subnets;\n    + Racks module (Rack drawing) for devices;\n    + Address linking by selected field;\n    + Custom logo for site and mails;\n    + PSTN number management module;\n    + SNMP module:\n        + Subnets discovery from route table (all subnets, nested subnets, add new subnet);\n        + Hosts discovery scans via ARP check/interface check;\n        + Hosts discovery scans via ARP + MAC address check (detects interface);\n        + VLAN discovery;\n        + VRF discovery;\n        + Status update scans via ARP check;\n    + NAT module\n        + Source / static / destination NAT;\n        + Linking subnet to NAT\n        + Show bindings under tools and next to IP address / subnet\n    + Locations module\n        + Map devices / racks / subnets to location;\n        + Google maps integration;\n    + SAML2 authentication (SSO)\n\n    Enhancements, changes:\n    ----------------------------\n    + Folders can now contain addresses;\n    + API:\n        - Api v1 removed;\n        + If subnet gateway defined gatewayId is returned in subnet details;\n        + Automatically added nameservers to subnet results;\n        + Added subnet usage result for each subnet in section;\n        + Added custom fields for all controllers;\n        + New subnets automatically get parent permissions;\n        + Added IP calculation to subnet;\n        + Changed all not_found when searching objects to 404 and all invalid parameters to 409 (conflict);\n        + If new item is created id will be available in response field \u201cid\u201d;\n        + New parameter $time_response in api/index.php that will return execution time in field \u201ctime\";\n        + Extensive first_free subnet calls search speedup;\n        + POST transaction locking;\n        + All first_free and first_address responses are now \"data\" instead of \"ip\" and \"subnet\" for consistency;\n        + Subnet splitting now copies over custom fields values by default (user custom_fields=no to revert);\n        + Added API option to nest custom_fields to assure correct structure;\n        + Added option to show/hide links in api by default for each app;\n        + Changed API http response codes;\n        + New methods:\n            + users:\n                GET    /user/expires/                         // returns token expiration date\n                GET    /user/token-expires/                   // returns token expiration date\n                GET    /user/users/                           // returns all users (rwa app permissions required)\n                GET    /user/admins/                          // returns all admin users (rwa app permissions required)\n            + addresses:\n                GET    /addresses/first_free/{subnetId}/      // returns first available address (subnetId can be provided with parameters)\n                GET    /addresses/{ip}/{subnetId}/            // returns IP address from subnet\n                GET    /addresses/search/{hostname}/          // Will search addresses by hostname\n                DELETE /addresses/{ip}/{subnetId}/            // deletes IP address from subnet\n                POST   /addresses/first_free/{subnetId}/      // will search for first free address in subnet, creating new address\n            + subnets:\n                GET    /subnets/{id}/addresses/{ip}/          // returns IP address from subnet\n                GET    /subnets/{id}/first_free/              // returns first free address in subnet\n                GET    /subnets/{id}/first_subnet/{mask}/     // returns first available subnets with specified mask\n                GET    /subnets/{id}/all_subnets/{mask}/      // returns all available subnets with specified mask\n                POST   /subnets/{id}/first_subnet/{mask}/     // creates first free subnet under master with specified mask\n                DELETE /subnets/{id}/permissions/             // removes permissions\n                PATCH  /subnets/{id}/permissions/             // sets subnet permissions (?grouname1=ro&groupname2=3&43=1)\n        + New controller Prefix;\n        + New controller Devices;\n        + New subcontrollers:\n            + /tools/nat/\n            + /tools/racks/\n            + /tools/locations/\n    + Widgets:\n        + New threshold widget;\n        + New inactive hosts widget;\n        + New Locations widget;\n    + PowerDNS:\n        + Default domain for PTR records (if hostname is not set);\n        + When removing IP address additional option that removes all associated PDNS records (ip and hostname);\n    + Permit normal users to manage VLANs / VRFs;\n    + Inactive (offline) hosts tools page;\n    + MAC address normalization;\n    + jQuery tables;\n    + Permission delegation now only delegates changes not whole permission set;\n    + Users with RWA permission can manage IP requests and receive IP request mails + changelog mails for subnet;\n    + IPv4 subnet link to IPv6 for dual-stack info;\n    + Removed inacessible DNS servers if timeout to prevent page load timeouts;\n    + Added option to only show supernets to limit pageload [#844 #816 #736];\n    + Added last scan info to subnet details;\n    + Added option to update address tags when address state change occurs (pingCheck) [#840];\n    + Added mantaneance mode;\n    + Added inactive addresses removal script;\n    + Subnet overlapping now checked also inside folders to prevernt duplicates;\n    + Subnet overlapping now checked also between sections if VRF defined;\n    + Added new settings directive that requires unique subnets accross sections;\n    + Added index check in verify database to detect and fix possible missing DB indexes;\n    + Added MAC address vendor display option;\n\n    Bugfixes:\n    ----------------------------\n    + PowerDNS regenerate PTR records now only updates current subnet (before whole zone);\n    + Fixed visual bug on 32-bit systems;\n    + Normal users with RWA permissions can scan subnets;\n    + Changed default timestamp from 0000-00-00 00:00:00 to 1970-01-01 00:00:01 to avoid SQL install errors if strict mode;\n    + Fixed https access on non-standard ports;\n    + Extended username to 255 chars for LDAP logins;\n    + Fixed search export invalid encoding and data may have been lost XLS file error;\n    + Fixed invalid character encoding in API responses;\n    + PowerDNS records cannot be created on slave zone;\n    + Fixed subnet resizing bug if subnet contained slaves;\n    + Added separate CSRF cookies for each address/subnet/pstn object;\n    + Deleted items are now shown and searchable from changelog;\n\n== 1.20.1\n\n    Translations:\n    ----------------------------\n    + French translation updated to verson 1.2;\n    + German translation updated to verson 1.2;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed upgrade bug that selected invalid auth method for AD/LDAP users;\n    + Fixed LDAP problems after 1.2 upgrade;\n    + Fixed PowerDNS Slave with multiple masters delimiter error;\n    + Fixed PowerDNS PTR records not being updated automatically;\n    + Fixed csrf cookie bug when editing folder;\n    + Fixed csrf cookie bug when truncationg subnet;\n    + Fixed invalid code for API crypt method;\n    + Fixed strange headings font display in Firefox;\n    + Fixed invalid proxy settings in config.dist.php;\n    + Fixed search same hostnames in db link form address table;\n    + Fixed import subnet bug caused by fw object;\n    + Fixed Subnet Import (Preview button > no action);\n\n== 1.20\n\n    New features:\n    ------------\n    + Added multiple simultaneous authentication methods (Apache, AD, LDAP, Radius, NetIQ);\n    + Added fping scanning support;\n    + Added selectable scanning type (ping/pear/fping);\n    + Added L2 domains;\n    + Added option to define address as default GW for subnet;\n    + Added customizable address tags with compressed option;\n    + Added temporary subnet / address shares;\n    + Added quick subnet masks;\n    + Added nameserver sets per subnets (jonashauge);\n    + Added optional syslog as log location;\n    + REST API:\n        + documentation: http://phpipam.net/api-documentation/\n        + API v2, old v1 support added\n        + Complete rewrite of all API calls;\n        + New security models (crypt, ssl, none);\n        + Support for custom fields;\n        + JSON / XML output\n        + Full read/write controllers (Sections, Subnets/Folders, Addresses, Vlans, Vrfs);\n    + PowerDNS integration:\n        + Automatic reverse records creation (PTR) - IPv4 and IPv6;\n        + Automatic SOA, NS record creation;\n        + DNS domain management;\n    + Added Scan agents to scan subnets remotely;\n    + Added firewall zone mappings and module;\n    + Added per-subnet DNS resolvers;\n    + Added option to mark subnet as utilized (full);\n\n    Enhancements:\n    ----------------------------\n    + All tables are now InnoDB by default;\n    + Upgraded jQuery to 2.1.3;\n    + All functions rewritten to classes/methods;\n    + Parametized all SQL queries, moved from MySQLI to PDO;\n    + Added VLAN/VRF to search and to search results export;\n    + Redesigned admin and tools menu;\n    + Added scanned/discovered subnets to tools for faster overview;\n    + Per-user display settings;\n    + New widget - tools shortcuts;\n    + New widget - IP calculator;\n    + New widget - request IP address;\n    + Clickable links for subnet fields;\n    + Custom VRF fields;\n    + Subnets can be now linked to devices;\n    + Import/export enhancements;\n    + Fast user switching for admins to impersonate user;\n    + Opened folders and subnets in tree menu are saved on page reload;\n    + RWA users can now process IP requests;\n    + Added auto-suggest for possible slave subnets;\n    + SSL option for MySQL connections;\n    + Enum custom field support;\n    + Added password reset script;\n    + Set sections to display VRF in;\n\n    Security Fixes:\n    ----------------------------\n    + Parametized all MySQL querries;\n    + Fixed plainpass being logged on user update;\n    + Fixed XSS exploit on /error/;\n    + Added CSRF protection to forms;\n\n    Translations:\n    ----------------------------\n    + Added Czech translation;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed bug with SSL/TLS smtp servers;\n    + Fixed visual subnet display issues on 32bit systems;\n    + Fixed IPv6 split subnets bug;\n    + Fixed /31 ping bug scanning out of boundaries;\n    + Fixed nested broadcast not counted to used percentage;\n    + Fixed invalid redirect after timeout;\n    + Fixed discovery script index overridden;\n    + Fixed dashboard graphs links to subnets;\n    + Fixed Invalid ID on subnet scan of large subnets;\n\n== 1.1.010\n\n    Bugfixes:\n    ----------------------------\n    + Fixed login fails with LDAP when escape characters are in password;\n    + Fixed login not working with spaces in password for AD login;\n    + Fixed Ivalid action when adding vlans from subnet popup menu;\n    + Fixed custom fields not appearing properly on IP request editing;\n    + Fixed Invalid ID error for IP address details on sorting;\n    + Fixed warnings if no VLAN search results are present;\n    + Fixed test mail not sending;\n    + Fixed unable to login if $phpsessname not defined;\n    + Fixed unable to login after upgrade;\n\n== 1.1\n\n    Enhancements:\n    ----------------------------\n    + Caching of SQL results to avoid multiple queries;\n    + Reduced number of DB queries;\n    + Added selected mail notifications to admins to be notified on IP/subnet change;\n    + Added new subnetId index to ipaddresses table that significantly improves network loading;\n    + Now using only 1 network connection towards MySQL server;\n    + Updated pagination;\n    + mod_rewrite no longer required, selectable URL structure under settings;\n    + Added option not to display free ranges;\n    + Added option to set maximum VLAN number;\n    + Selectable custom fields to be visible/hidden in tables view and updated device/VLAN view;\n    + Added additional confirmation before section, subnet, folder and IP address deletion;\n    + New script added for cron checks that discovers new hosts for selected networks;\n    + Added inactivity timeout to settings;\n    + Changed install procedure and updated install scripts;\n    + Added PEAR check for installation;\n    + Added free range disaply for VLANs;\n    + Addes SSL/TLS option for SMTP mail;\n    + API:\n        + Bugfixes;\n        + Added API admin permissions;\n        + read/delete actions for IP addresses;\n        + read/delete actions for Vlans;\n        + read/delete actions for VRFs;\n\n    Security Fixes:\n    ----------------------------\n    + Fixed known command injection vulnerabilities in the scan functions;\n    + Fixed known SQL injection vulnerabilities;\n    + Fixed known XSS vulnerabilities;\n    + Fixed known action XSS events;\n    + Moved to crypt method for storing password in database with salting;\n    + Added option to force user to change pass after first login;\n    + Admin password must be changed after installation;\n    + Added captcha code request after 5x unsuccesfull login to prevent brute-force attacks;\n\n    Translations:\n    ----------------------------\n    + Added es_ES translation;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed top 10 widgets not escaping strings;\n    + Fixed section parent can be set to self that caused section to disapear;\n    + Fixed username instead of password being sent to smtp server;\n    + Fixed IE search bug with workaround;\n    + Fixed subnet and bcast not showing on strict mode disabled;\n    + Fixed top subnets missing on dashboard for non-admin users;\n    + Fixed bug when installation was silently failing bacause pf missing _() function (missing gettext extension)\n    + Fixed device custom field not populated on adding device;\n    + Fixed XLS export silently failed when description longer than 31 characters;\n    + Fixed overlapping check not working;\n    + Fixed subnet free space calcultation;\n    + Fixed visual subnet display not showing on /31 and /32 networks;\n    + Fixed custom fields display on folder edit;\n    + Fixed unable to edit IP addresses when fields are sorted;\n    + Fixde ordering of custom fields defaults to varchar 256;\n    + Fixed IPv6 subnet / broadcast calculation bug and next subnet suggestion;\n\n== 1.0\n\n    New features:\n    ----------------------------\n    + IP address page with IP address details and IP history (Changelog);\n    + IP address changelog, subnet and section changelogs with full changelog under tools;\n    + Favourite subnets for quick access;\n    + Adding subnets from free space with automatic mask provided;\n    + Automatic database validity check after upgrading and automatic field/table fix under administration;\n    + Automatic weekly check for new phpipam version;\n\n    Enhancements:\n    ----------------------------\n    + Bootstrap 3;\n    + UI enhancements;\n    + Improved views based on browser width;\n    + Widget order can now be set;\n    + Widgets can be reordered (dragged) directly on dashboard;\n    + Subnet can now be splitted to max 256 new subnets (16 before);\n    + Scan settings are moved to Administration;\n    + Widget management has moved to administration, which allows creation of new widgets;\n    + Improved ICMP error detection;\n    + Mail settings can now be set on gui (localhost / smtp);\n    + Popup windows are now draggable;\n    + VLAN adding in the fly enhancements;\n    + Master section now shows all subnets in subsections;\n    + Tools > devices redone;\n    + DeviceTypes can now be edited/set/added;\n    + Ping subnet enhancements;\n    + Custom field types are now defineable (int/varchar/date/datetime/text/bool/set);\n    + Date and timepicker popups if type = date/datetime;\n    + For `set` and boolean custom fields dropdown is presented that users can pick;\n\n    + Favourite subnets widget;\n    + IP requests widget;\n    + Changelog widget;\n\n    Translations:\n    ----------------------------\n    + Added Brazil translation (Michel Braga Guimar\u00e3es);\n\n    Bugfixes:\n    --------\n    + UI fixes;\n    + Fixed bug where last page of IP addresses was inaccessible;\n    + IP address state change is now sent to all admins;\n    + Fixed subnet displaying as 0.0.0.0/0 in details;\n    + Fixed links to subnets form vlans and vrfs;\n    + Fixed search result showing all folders if searched item is not IP address;\n    + Fixed disapearing section when L2 section was selected as master section;\n    + Fixed device ID showing in mail notification instead of hostname;\n    + Fixed device ID showing in search results and export instead of hostname;\n    + Fixed search for subnet name returned no results;\n    + Fixed apostophe in IP address description throws SQL error for scan results and XLS import;\n    + Fixed requester email gets cut if longer than 32 chars;\n    + Fixed admin folder edit appearing as subnet;\n    + Fixed missing device/port in import;\n    + Fixed master section delete did not delete subsections and belonging subnets/ips;\n    + Fixed online status was not updated when running Ping status scans;\n    + Fixed Folder name not appearing when deleting folder;\n\n== 0.9\n\n    New features:\n    ----------------------------\n    + Support for ICMP network discovery;\n    + Cron script to check status for selected subnets/hosts with threading suport (pcntl php extension required);\n    + ICMP check IP status in demand;\n    + Compressed (grouped) DHCP IP ranges;\n    + API server version 0.1;\n    + Option to show and group subnets by VLAN in subnets list;\n    + Option to show and group subnets by VRF in subnets list;\n    + Added subsections;\n    + Added AD username search;\n    + Added folders;\n\n    Enhancements:\n    ----------------------------\n    + Added error catching/displaying for ajax-loaded php scripts;\n    + Added default language for login/requests display and new users;\n    + Added direct links to different pages in IP address table;\n    + Subnets can now be edited directly from nested subnets list;\n    + When adding nested subnets default vlan/vrf is selected from parent;\n    + Added Section ordering;\n    + Added per/section subnet ordering (overrides dafault form settings);\n    + Clicking on section now shows all subnets and belonging details;\n    + If session timeouts after re-login last requested page will be opened;\n    + Searh for IP address now returns also subnet, even if IP is not existing;\n    + Per-user selection of widgets to display;\n    + Added description and required field checkbox for custom IP/Subnet Fields;\n    + Added custom device fields;\n    + Mails are now sent through phpmailer;\n    + Admin user cannot be deleted;\n\n    Translations:\n    ----------------------------\n    + Added French translation (Denis Darr\u00e9);\n    + Added Dutch translation (Michiel Visser);\n    + Added German translation (Carsten Br\u00fcckner);\n\n    Bugfixes:\n    ----------------------------\n    + Fixed wrong VLAN display in tools;\n    + Fixed subnet/section links from VLANS if base not /;\n    + Fixed warning in apache log on subnet editing if no VRFs are configured;\n    + Fixed admin menu off-screen overflow;\n    + Fixed firefox error when selectiong rights for section/subnets was not possible;\n    + Fixed subnet description in Cyrillic problem;\n    + Fixed errors on no permissions for user;\n    + Fixed Inaccurate Free Space Calculation (and Chart);\n    + Fixed VLAN permissions where VLAN was not displayed;\n\n== 0.8\n\n    New features:\n    ----------------------------\n    + New group and permission management;\n    + Support for translations;\n    + Subnet resizing;\n    + Subnet splitting into smaller subnets;\n    + Added free space display for nested subnets;\n    + Added visual display of subnet usage per IP address;\n    + Added truncate network option that deletes all IP addresses in subnet;\n    + Added button the updates subnet with RIPE information;\n\n    Enhancements:\n    ----------------------------\n    + Added add nested subnet under subnet details to simplify master subnet selection in hierarchy;\n    + Added edit subnet link from search results;\n    + Added reverse IPv6 DNS entries to IPCalc (Vincent Boisard);\n    + Added option for plain-text emails;\n    + Added ckEditor to write instructions;\n    + StrictMode is not set globally anymore but set per section;\n    + Added custom user fields;\n    + Added option to verify that hostname is unique;\n    + Improved MySQL exception handling;\n    + Added mod_rewrite error detection on installation and upgrade;\n    + Added hostname validation;\n    + Added Hostfile dump of IP addresses;\n    + Search also searches in custom fields;\n    + jQuery updated to v 1.9.1;\n\n    Bugfixes:\n    ------------------------\n    + Fixed overlay on second popup;\n    + Fixed IE search bug;\n    + Fixed support for non-standard ports;\n    + Fixed permitting overlapping subnets if vrfs are different;\n    + Fixed dates in logging appearing in 12h format;\n    + Fixed broken subnets link in tools > subnets if installation is not at document root;\n    + Fixed error when adding new subnet if checkboxes are not selected in newer MySQL servers;\n    + Fixed bad display of multilined navigation bar;\n    + Fixed wrong output of tools > VLAN list when using Duplicate VLANs;\n    + Fixed wrong link for upgrade script;\n    + On VRF change all child subnets are updated also;\n    + Fixed wrong maximum on dashboard top10 percentage;\n    + Fixed Adding a vlan while editing a subnet resets the edit subnet form;\n    + Fixed wrong free space calculation for nested subnets;\n    + Fixed IP use statistics not cumulative up the hierarchy if subnes has slaves;\n\n== 0.7\n\n    New features:\n    ----------------------------\n    + Completely rewritten UI using twitter's bootstrap as base;\n    + Using mod_rewrite apache module to handle GET requests (new install requitements!);\n    + Unlimited number of subnetting levels;\n    + OpenLDAP authentication support;\n    + New URL structure;\n    + Sorting of IP addresses;\n    + Custom subnet fields;\n    + Custom VLAN fields and admin option to allow duplicate VLAN names (metro area VLANs);\n    + Script to automatically update IP <-> hostname, run via cron (functions/scripts/resolveIPaddresses.php);\n    + Show Subnet name instead of subnet IP address option;\n    + Strict mode option in config files that controlls overlapping checks;\n    + New subnet menu;\n    + Added printLimit feature to break IP addresses into pages;\n\n    Enhancements:\n    ----------------------------\n    + Lots of UI changes;\n    + Less Ajax usage to display websites and details;\n    + Hierarchy display under subnet details (breadcrumbs);\n    + Search results covering VLANs;\n    + Custom IP fields ordering;\n    + VLAN creation from adding/editing subnets;\n    + IP addresses can now be edited;\n    + Collapsed switch list;\n    + Removing VLANs also removes references from subnet list;\n    + Removing VRFs also removes references from subnet list;\n    + Logs for admin on dashboard;\n    + Search via GET;\n    + Support for range networks (allows use of subnet and broadcast as IP);\n    + Import of custom IP fields;\n    + Abiility to move subnets between sections;\n    + Improved display of nested subnets now shows all IP addresses from nested subnets and orphaned IPs;\n    + Hides display of custom fields in subnet if none is filled in whole subnet;\n    + Replaced Highcharts with Flot because of licencing issues;\n\n    Bugfixes:\n    ------------------------\n    + Fixed error with missing custom IP fields when adding new IP address;\n    + Fixed bug when deleteing root subnet only deleted directly nested subnets (now whole tree);\n    + Fixed checkboxes not working in various browsers;\n    + Fixed change in switch details causing IP address associations to switch to be lost;\n    + Fixed subnet description display in under subnet administration;\n    + Fixed depricated error when showing XLS files;\n    + Fixed error when custom fields were not updated on adding IP address;\n    + Fixed error when custom fields were with spaces in name were not updated;\n    + Fixed error when providing already requested IP address;\n    + Search available also to viewer user types;\n    + Fixed /127 and /128 IPv6 subnets;\n    + Fixed /31 and /32 IPv4 subnets;\n    + Significally reduced php processing for dashboard statistics;\n    + Fixed importing of if quote is present;\n\n== 0.6\n\n    New features:\n    ----------------------------\n    + Selectable IP address list display fields;\n    + Custom IP address fields;\n    + Search and replace IP fields function;\n    + Full page width theme;\n\n    Enhancements:\n    ----------------------------\n    + Independant VLAN management;\n    + Added additional level of subnet nesting;\n    + Added option to clear and export log files;\n    + Export of search results to XLS;\n    + Clickable search results;\n    + Selectable export fields when exporting subnet;\n    + Subnet can be deleted from ip address edit subnet;\n    + IP Requests for locked subnets and viewer users can be placed from ip address list;\n    + jQuery updated to v 1.7.1;\n    + HighCharts updated to v 2.2.0;\n\n    Bugfixes:\n    ------------------------\n    + Upgrade is supported only for versions 0.4 and higher;\n    + Fixed broken UTF-8 support;\n    + Fixed wrong logging when authenticating via AD;\n    + Fixed issues where external attacker might get information about internal hosts through resolvedns script;\n    + Fixed wrong subnet nesting under administration/manage subnets;\n    + Fixed editing subnet can be outside of its own root subnet;\n    + Fixed errors when adding new switch auto-adds itselt to all hosts without no switch defined;\n    + Fixed removing switch not removed in ip address list;\n    + Vlan1 can now be used;\n    + Fixed mail sending settings with missing information;\n    + Fixed errors on adding switch with no sections;\n    + Fixed version check;\n    + Removed masterSubnets from subnets available for IP requests;\n    + Fixed error when non-admin user could not open dashboard;\n    + Added how subnet list switch when list hidden;\n\n== 0.5\n\n    New features:\n    -------------\n    + Importing subnets from RIPE by AS in admin section;\n    + Added switch management and changed switch logic;\n    + Added VRF support;\n    + Added AD domain authentication;\n    + Added MAC address field to ip address;\n    + Added database table and belonging fields check under admin;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + Added DNS resolving when editing/adding IP address;\n    + Added IE compatibility meta tag and IE UI improvements for IE >= 8;\n    + Search returns also subnets and MAC searches;\n    + Added mac address and IP status to XLS import/export scripts;\n    + jQuery update from 1.6.2 to 1.7;\n    + Highcharts update from 2.1.2 to 2.1.8;\n\n    + Fixed dashboard errors if no IPv4/IPv6 subnets configured;\n    + Fixed errors with viewing / modifying IP addresses for Operator users;\n    + Fixed session cookie error on hosts;\n    + Fixed error when saving settings;\n    + Fixed instructions errors when inserting html code;\n    + Fixed first free IP address not displaying in IP request;\n\n\n== 0.4\n\n    New features:\n    -------------\n    + Massive add / edit / delete by specifying IP range (e.g. 10.10.0.1 - 10.10.0.254);\n    + Database upgrade / install from browser -> simplified installation/update procedure;\n    + New usertype viewer - can only view IP address list;\n    + Subnets can now be edited directly from IP address list;\n    + Option to lock subnet for writing to no-admin users;\n    + Device and Host list;\n    + Option to specify which subnet can have IP requests when editing / adding subnet if module is enabled;\n    + Latest version check on admin page;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + Fixed overspanning of multiple sections;\n    + Admin menu and add subnet now shown only to admins;\n    + Fixed VLAN table to show nesting and IP request option and statistics;\n    + Fixed subnet table to show nesting and IP request option;\n    + Subnet Adding shows only master subnets in section not in all sections;\n    + Tooltips and button hovers are now in separate javascript file;\n    + Graphs show only subnets with non-0 ip addresses;\n    + Various code enhancements + improved error handling;\n    + Fixed URL links not updating after few clicks;\n    + If loading slave subnet directly the subnet menu drops down and shows active slave subnet;\n    + Clicking on master shubnet shows all nested subnets and statistics;\n    + Redesigned log table;\n    + Fixed search;\n\n== 0.3\n\n    New features:\n    -------------\n    + Subnet nesting - you can now have master subnet and normal subnets belonging to it;\n    + Server settings are now moved to database and can be set under admin menu (database settings & debugging remain in config.php);\n    + Request IP module on login page with email notification;\n    + Confirm/reject IP address request from admin page with mail notification;\n    + Admin dashboard notification of new requests;\n    + Autocomplete of owner and Switch name from all available when adding/editing IP address;\n    + New settings quick access on button hover;\n    + Option to export each subnet indivudually;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + jQuery update from 1.6 to 1.6.2;\n    + VLANs are now grouped by section;\n    + Direct access to subnet from vlan table;\n    + UI enhancements;\n    + Fixed user editing bug where user update broke password;\n    + Fixed password in new account notification;\n    + Fixed percentage display on Dashboard;\n    + IPv6 calculator /64 limit fixed;\n    + Changed tooltip effect to appear instantly for smoother display;\n    + Login functions are now separate file;\n\n\n== 0.2 (First public version)\n\n    Bugfixes / enhancements:\n    ------------------------\n    + now also works with php 5.2;\n    + fixed empty fields in xls import;\n    + passwords are now stored in md5 hash;\n    + high numbers for free/used IP addresses (mainly IPv6) are now represented in k/m/G values to improve readibility;\n    + fixed log search bug;\n    + cursor not displayed as link on images and non-href links;\n    + same add image on all pages;\n    + fixed IP mail notification apperance;\n    + UI enhancements and bugfixes;\n    + Fixed some javascript bugs;\n    + Minified javascript to make loading faster;\n    + adding new ip address now automatically provides first available IP address in subnet;\n\n    New features:\n    -------------\n    + added switch / port fields to IP addresses;\n    + hide subets on request to get better view;\n    + Informational tooltips added + option to disable them in config file if someone finds them annoying;\n    + export whole IP address database to XLS file from admin menu;\n    + create MySQL database dump from admin menu;\n    + added IP instructions for users, that can be edited from admin menu;\n\n\n== 0.1 (First test version)\n"], "fixing_code": ["<?php\n\n/**\n * HomePage display script\n *  \tshow somw statistics, links, help,...\n *******************************************/\n\n# verify that user is logged in\n$User->check_user_session();\n\n# create csrf token\n$csrf = $User->Crypto->csrf_cookie (\"create\", \"user-menu\");\n\n?>\n<script>\n//show clock\n$(function($) {\n\t$('span.jclock').jclock();\n});\n</script>\n\n\n<script>\n$(document).ready(function() {\n\t// initialize sortable\n\t$(document).on(\"click\",'.w-lock', function() {\n\t\t//remove class\n\t\t$(this).removeClass('w-lock').addClass('w-unlock');\n\t\t$(this).find('i').removeClass('fa fa-dashboard').addClass('fa fa-check');\t//change icon\n\t\t$(this).find('a').addClass('btn-success');\t//add success class\n\t\t$(this).find('a').attr('data-original-title','Click to save widgets order');\n\t\t$('#dashboard .inner i').fadeIn('fast');\n\t\t$('#dashboard .add-widgets').fadeIn('fast');\n\t\t$('#dashboard .inner').addClass('movable');\n\t\t//start\n\t\t$('#dashboard .row-fluid').sortable({\n\t\t\tconnectWith: \".row-fluid\",\n\t\t\tstart: function( event, ui ) {\n\t\t\t\tvar iid = $(ui.item).attr('id');\n\t\t\t\t$('#'+iid).addClass('drag');\n\t\t\t},\n\t\t\tstop: function( event, ui ) {\n\t\t\t\tvar iid = $(ui.item).attr('id');\n\t\t\t\t$('#'+iid).removeClass('drag');\n\t\t\t}\n\t\t});\n\t\treturn false;\n\t});\n\t//lock sortable back\n\t$(document).on(\"click\",'.w-unlock', function() {\n\t\t//remove class\n\t\t$(this).removeClass('w-unlock').addClass('w-lock');\n\t\t$(this).find('i').removeClass('fa fa-check').addClass('fa fa-dashboard');\t//change icon\n\t\t$(this).find('a').removeClass('btn-success');\t//remove success class\n\t\t$(this).find('a').attr('data-original-title','Click to reorder widgets');\n\t\t$('#dashboard .inner .icon-action').fadeOut('fast');\n\t\t$('#dashboard .add-widgets').fadeOut('fast');\n\t\t$('#dashboard .inner').removeClass('movable');\n\n\t\t//get all ids that are checked\n\t\tvar widgets = $('#dashboard .widget-dash').map(function(i,n) {\n\t\t\t//only checked\n\t\t\treturn $(n).attr('id').slice(2);\n\t\t}).get().join(';');\n\n\t\t//save user widgets\n\t\t$.post('app/tools/user-menu/user-widgets-set.php', {widgets:widgets, csrf_cookie:\"<?php print $csrf; ?>\"}, function(data) {});\n\n\t\t//remove sortable class\n\t\t$('#dashboard .row-fluid').sortable(\"destroy\");\n\n\t\treturn false;\n\t});\n});\n</script>\n\n\n\n<!-- charts -->\n<script src=\"js/flot/jquery.flot.js?v=<?php print SCRIPT_PREFIX; ?>\"></script>\n<script src=\"js/flot/jquery.flot.categories.js?v=<?php print SCRIPT_PREFIX; ?>\"></script>\n<!--[if lte IE 8]><script src=\"js/flot/excanvas.min.js?v=<?php print SCRIPT_PREFIX; ?>\"></script><![endif]-->\n\n\n<div class=\"welcome\" style=\"text-align:right\">\n\t<span class=\"jclock\"></span>\n</div>\n\n<?php\n\n# fetch all widgets\n$widgets = $Tools->fetch_widgets ($User->is_admin(false), false);\n$widgets = (array) $widgets;\n\n# show user-selected widgets\n$uwidgets = array_filter(pf_explode(\";\",$User->user->widgets));\n\n# if user has no groups and is not admin print warning\nif ($User->is_admin(false)!==true && (is_blank($User->user->groups) || $User->user->groups===\"null\") ) {\n\tprint '<div class=\"row-fluid\">';\n\tprint \"\t<div class='col-xs-12 col-sm-12 col-md-12 col-lg-12' style='min-height:10px'>\";\n\tprint \"\t<div class='inner' style='min-height:10px'>\";\n\tprint \" <h4>\"._(\"No groups\").\"</h4>\";\n\tprint \"\t<div class='hContent'>\";\n\tprint \"\t\t<div class='alert alert-info' style='margin:10px;'>\"._(\"You are not member of any group. Please contact system administrator!\").\"</div>\";\n\tprint \"\t</div>\";\n\tprint \"\t</div>\";\n\tprint \"\t</div>\";\n\tprint \"</div>\";\n\tprint \"<div class='clearfix'></div>\";\n\n\t// reset uwidgets\n\t$uwidgets = array(\"tools\", \"ipcalc\");\n}\n\n# split widgets to rows (chunks)\n$currSize = 0;\t\t\t\t\t//to calculate size\n$m=0;\t\t\t\t\t\t\t//to calculate chunk index\n\nforeach($uwidgets as $uk=>$uv) {\n\t//get details\n\t$wdet = isset($widgets[$uv]) ? (array) $widgets[$uv] : ['wsize' => 6];\n\tif(is_blank($wdet['wsize']))\t{ $wsize = 6; }\n\telse\t\t\t\t\t\t\t{ $wsize = $wdet['wsize']; }\n\n\t//calculate current size\n\t$currSize = $currSize + $wsize;\n\n\t//ok, we have sizes, we need to split them into chunks of 12\n\tif($currSize > 12) {\n\t\t$m++; \t\t\t\t\t//new index\n\t\t$currSize = $wsize; \t//reset size\n\t}\n\n\t//add to array\n\t$uwidgetschunk[$m][] = $uv;\n}\n\n# print\nprint \"<div class='add-widgets' style='display:none;padding-left:20px;'>\";\nprint \"\t<a class='btn btn-sm btn-default btn-success open_popup' data-script='app/dashboard/widget-popup.php' data-class='700'><i class='fa fa-plus'></i> \"._('Add new widget').\"</a>\";\nprint \"</div>\";\n\nif(sizeof($uwidgets)>1) {\n\n\tprint '<div class=\"row-fluid\">';\n\n\tforeach($uwidgetschunk as $w) {\n\t\t# print itams in a row\n\t\tforeach($w as $c) {\n\t\t\t/* print items */\n\t\t\tif(array_key_exists($c, $widgets)) {\n\t\t\t\t$wdet = (array) $widgets[$c];\n\n\t\t\t\t//reset size if not set\n\t\t\t\tif(is_blank($wdet['wsize']))\t{ $wdet['wsize'] = 6; }\n\n\t\t\t\tprint \"\t<div class='col-xs-12 col-sm-12 col-md-12 col-lg-\".escape_input($wdet['wsize']).\" widget-dash' id='w-\".escape_input($wdet['wfile']).\"'>\";\n\t\t\t\tprint \"\t<div class='inner'><i class='fa fa-times remove-widget icon-action fa-gray pull-right'></i>\";\n\t\t\t\t// href?\n\t\t\t\tif($wdet['whref']==\"yes\")\t{ print \"<a href='\".create_link(\"widgets\",$wdet['wfile']).\"'> <h4>\"._(escape_input($wdet['wtitle'])).\"<i class='fa fa-external-link fa-gray pull-right'></i></h4></a>\"; }\n\t\t\t\telse\t\t\t\t\t\t{ print \"<h4>\"._(escape_input($wdet['wtitle'])).\"</h4>\"; }\n\t\t\t\tprint \"\t\t<div class='hContent'>\";\n\t\t\t\tprint \"\t\t\t<div style='text-align:center;padding-top:50px;'><strong>\"._('Loading widget').\"</strong><br><i class='fa fa-spinner fa-spin'></i></div>\";\n\t\t\t\tprint \"\t\t</div>\";\n\t\t\t\tprint \"\t</div>\";\n\t\t\t\tprint \"\t</div>\";\n\n\t\t\t}\n\t\t\t# invalid widget\n\t\t\telse {\n\t\t\t\tprint \"\t<div class='col-xs-12 col-sm-12 col-md-12 col-lg-6' id='w-\".escape_input($c).\"'>\";\n\t\t\t\tprint \"\t<div class='inner'>\";\n\t\t\t\tprint \"\t\t<blockquote style='margin-top:20px;margin-left:20px;'><p>Invalid widget \".escape_input($c).\"</p></blockquote>\";\n\t\t\t\tprint \"\t</div>\";\n\t\t\t\tprint \"\t</div>\";\n\t\t\t}\n\n\t\t}\n\t}\n\tprint \"</div>\";\n}\n# empty\nelse {\n\tprint \"<br><div class='alert alert-warning'><strong>\"._('No widgets selected').\"!</strong> <hr>\"._('Please select widgets to be displayed on dashboard on user menu page').\"!</div>\";\n}\n?>\n<hr>", "<?php\n\n/**\n * phpIPAM class with common functions, used in all other classes\n *\n * @author: Miha Petkovsek <miha.petkovsek@gmail.com>\n */\nclass Common_functions  {\n\n\t/**\n     * from api flag\n     *\n     * (default value: false)\n     *\n     * @var bool\n     */\n    public $api = false;\n\n\t/**\n\t * settings\n\t *\n\t * (default value: null)\n\t *\n\t * @var mixed\n\t * @access public\n\t */\n\tpublic $settings = null;\n\n\t/**\n\t * If Jdon validation error occurs it will be saved here\n\t *\n\t * (default value: false)\n\t *\n\t * @var bool\n\t * @access public\n\t */\n\tpublic $json_error = false;\n\n    /**\n     * Default font\n     *\n     * (default value: \"<font face='Helvetica, Verdana, Arial, sans-serif' style='font-size:12px)\n     *\n     * @var string\n     * @access public\n     */\n    public $mail_font_style = \"<font face='Helvetica, Verdana, Arial, sans-serif' style='font-size:12px;color:#333;'>\";\n\n    /**\n     * Default font\n     *\n     * (default value: \"<font face='Helvetica, Verdana, Arial, sans-serif' style='font-size:12px)\n     *\n     * @var string\n     * @access public\n     */\n    public $mail_font_style_light = \"<font face='Helvetica, Verdana, Arial, sans-serif' style='font-size:11px;color:#777;'>\";\n\n    /**\n     * Default font for links\n     *\n     * (default value: \"<font face='Helvetica, Verdana, Arial, sans-serif' style='font-size:12px)\n     *\n     * @var string\n     * @access public\n     */\n    public $mail_font_style_href = \"<font face='Helvetica, Verdana, Arial, sans-serif' style='font-size:12px;color:#a0ce4e;'>\";\n\n\t/**\n\t * Database\n\t *\n\t * @var Database_PDO\n\t * @access protected\n\t */\n\tprotected $Database;\n\n\t/**\n\t * Result\n\t *\n\t * @var Result\n\t * @access public\n\t */\n\tpublic $Result;\n\n\t/**\n\t * Log\n\t *\n\t * @var Logging\n\t * @access public\n\t */\n\tpublic $Log;\n\n\t/**\n\t * Net_IPv4\n\t *\n\t * @var Net_IPv4\n\t * @access protected\n\t */\n\tprotected $Net_IPv4;\n\n\t/**\n\t * Net_IPv6\n\t *\n\t * @var Net_IPv6\n\t * @access protected\n\t */\n\tprotected $Net_IPv6;\n\n\t/**\n\t * (array) IP address types from Addresses object\n\t *\n\t * (default value: null)\n\t *\n\t * @var mixed\n\t * @access public\n\t */\n\tpublic $address_types = null;\n\n\t/**\n\t * NET_DNS object\n\t *\n\t * @var NET_DNS\n\t * @access protected\n\t */\n\tprotected $DNS2;\n\n\t/**\n\t * debugging flag\n\t *\n\t * @var bool\n\t * @access protected\n\t */\n\tprotected $debugging;\n\n\t/**\n\t * Cache mac vendor objects\n\t * @var array|null\n\t */\n\tprivate $mac_address_vendors = null;\n\n\n\n\t/**\n\t * __construct function\n\t *\n\t * @access public\n\t */\n\tpublic function __construct () {\n\t\t# debugging\n\t\t$this->set_debugging( Config::ValueOf('debugging') );\n\t}\n\n\t/**\n\t *\t@version handling\n\t *\t--------------------------------\n\t */\n\n\t /**\n\t * Compare dotted version numbers 1.21.0 <=> 1.4.10\n\t *\n\t * @access public\n\t * @param string $verA\n\t * @param mixed $verB\n\t * @return int\n\t */\n\tpublic function cmp_version_strings($verA, $verB) {\n\t\t$a = array_pad(pf_explode('.', $verA), 3, 0);\n\t\t$b = array_pad(pf_explode('.', $verB), 3, 0);\n\n\t\tif ($a[0] != $b[0]) return $a[0] < $b[0] ? -1 : 1;\t\t\t// 1.x.y is less than 2.x.y\n\t\tif (strcmp($a[1], $b[1]) != 0) return strcmp($a[1], $b[1]);\t// 1.21.y is less than 1.3.y\n\t\tif ($a[2] != $b[2]) return $a[2] < $b[2] ? -1 : 1;\t\t\t// 1.4.9 is less than 1.4.10\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Fetch mysql version info\n\t *\n\t * @access public\n\t * @return string\n\t */\n\tpublic function fetch_mysql_version () {\n\t\t# fetch\n\t\ttry { $result = $this->Database->getObjectQuery(\"SELECT VERSION() AS 'version';\"); }\n\t\tcatch (Exception $e) {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn is_object($result) ? $result->version : \"\";\n\t}\n\n\n\n\n\n\n\n\t/**\n\t *\t@general fetch methods\n\t *\t--------------------------------\n\t */\n\n\n\t/**\n\t * Fetch all objects from specified table in database\n\t *\n\t * @access public\n\t * @param mixed $table\n\t * @param mixed $sortField (default:id)\n\t * @param mixed bool (default:true)\n\t * @return false|array\n\t */\n\tpublic function fetch_all_objects ($table=null, $sortField=\"id\", $sortAsc=true) {\n\t\t# null table\n\t\tif(is_null($table)||is_blank($table)) return false;\n\n\t\t$cached_item = $this->cache_check(\"fetch_all_objects\", \"t=$table f=$sortField o=$sortAsc\");\n\t\tif(is_object($cached_item)) return $cached_item->result;\n\n\t\t# fetch\n\t\ttry { $res = $this->Database->getObjects($table, $sortField, $sortAsc); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage());\n\t\t\treturn false;\n\t\t}\n\t\t# save\n\t\tif (is_array($res)) {\n\t\t\tforeach ($res as $r) {\n\t\t\t\t$this->cache_write ($table, $r);\n\t\t\t}\n\t\t}\n\t\t# result\n\t\t$result = (is_array($res) && sizeof($res)>0) ? $res : false;\n\t\t$this->cache_write (\"fetch_all_objects\", (object) [\"id\"=>\"t=$table f=$sortField o=$sortAsc\", \"result\" => $result]);\n\t\treturn $result;\n\t}\n\n\t/**\n\t * Fetches specified object specified table in database\n\t *\n\t * @access public\n\t * @param mixed $table\n\t * @param mixed $method\n\t * @param mixed $value\n\t * @return object|false\n\t */\n\tpublic function fetch_object ($table, $method, $value) {\n\t\t// checks\n\t\tif(!is_string($table)) return false;\n\t\tif(is_blank($table))  return false;\n\t\tif(is_null($method))   return false;\n\t\tif(is_null($value))    return false;\n\t\tif($value===0)         return false;\n\n\t\t# check cache\n\t\t$cached_item = $this->cache_check($table, $value);\n\t\tif(is_object($cached_item))\n\t\t\treturn $cached_item;\n\n\t\t# null method\n\t\t$method = is_null($method) ? \"id\" : $this->Database->escape($method);\n\n\t\ttry { $res = $this->Database->getObjectQuery(\"SELECT * from `$table` where `$method` = ? limit 1;\", array($value)); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage());\n\t\t\treturn false;\n\t\t}\n\n\t\t# save to cache array\n\t\t$this->cache_write ($table, $res);\n\n\t\treturn is_object($res) ? $res : false;\n\t}\n\n\t/**\n\t * Fetches multiple objects in specified table in database\n\t *\n\t *\tdoesnt cache\n\t *\n\t * @access public\n\t * @param mixed $table\n\t * @param mixed $field\n\t * @param mixed $value\n\t * @param string $sortField (default: 'id')\n\t * @param bool $sortAsc (default: true)\n\t * @param bool $like (default: false)\n\t * @param array|mixed $result_fields (default: *)\n\t * @return array|false\n\t */\n\tpublic function fetch_multiple_objects ($table, $field, $value, $sortField = 'id', $sortAsc = true, $like = false, $result_fields = \"*\") {\n\t\t# null table\n\t\tif(is_null($table)||is_blank($table)) return false;\n\t\telse {\n\t\t\ttry { $res = $this->Database->findObjects($table, $field, $value, $sortField, $sortAsc, $like, false, $result_fields); }\n\t\t\tcatch (Exception $e) {\n\t\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage());\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t# save to cache\n\t\t\tif ($result_fields===\"*\" && is_array($res)) { // Only cache objects containing all fields\n\t\t\t\tforeach ($res as $r) {\n\t\t\t\t\t$this->cache_write ($table, $r);\n\t\t\t\t}\n\t\t\t}\n\t\t\t# result\n\t\t\treturn (is_array($res) && sizeof($res)>0) ? $res : false;\n\t\t}\n\t}\n\n\t/**\n\t * Count objects in database.\n\t *\n\t * @access public\n\t * @param mixed $table\n\t * @param mixed $field\n\t * @param mixed $val (default: null)\n\t * @param bool $like (default: false)\n\t * @return int\n\t */\n\tpublic function count_database_objects ($table, $field, $val=null, $like = false) {\n\t\t# if null\n\t\ttry { $cnt = $this->Database->numObjectsFilter($table, $field, $val, $like); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage());\n\t\t\treturn false;\n\t\t}\n\t\treturn $cnt;\n\t}\n\n\t/**\n\t * Count all objects in database.\n\t *\n\t * @param  string $table\n\t * @param  string $field\n\t * @return array|false\n\t */\n\tpublic function count_all_database_objects ($table, $field) {\n\t\ttry { $cnt = $this->Database->getGroupBy($table, $field); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage());\n\t\t\treturn false;\n\t\t}\n\t\treturn $cnt;\n\t}\n\n\t/**\n\t * Returns table schema information\n\t *\n\t * @param  string $tableName\n\t * @return array\n\t */\n\tpublic function getTableSchemaByField($tableName) {\n\t\t$results = [];\n\n\t\tif (!is_string($tableName)) return $results;\n\n\t\t$tableName = $this->Database->escape($tableName);\n\n\t\t$cached_item = $this->cache_check(\"getTableSchemaByField\", \"t=$tableName\");\n\t\tif(is_object($cached_item)) return $cached_item->result;\n\n\t\ttry {\n\t\t\t$query = \"SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ?;\";\n\t\t\t$schema = $this->Database->getObjectsQuery($query, [$this->Database->dbname, $tableName]);\n\t\t} catch (\\Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage());\n\t\t\treturn $results;\n\t\t}\n\n\t\tif (is_array($schema)) {\n\t\t\tforeach ($schema as $col) {\n\t\t\t\t$results[$col->COLUMN_NAME] = $col;\n\t\t\t}\n\t\t}\n\t\t$this->cache_write(\"getTableSchemaByField\", (object) [\"id\"=>\"t=$tableName\", \"result\" => $results]);\n\t\treturn $results;\n\t}\n\n\t/**\n\t * Get all admins that are set to receive changelog\n\t *\n\t * @access public\n\t * @param bool|mixed $subnetId\n\t * @return array|false\n\t */\n\tpublic function changelog_mail_get_recipients ($subnetId = false) {\n    \t// fetch all users with mailNotify\n        $notification_users = $this->fetch_multiple_objects (\"users\", \"mailChangelog\", \"Yes\", \"id\", true);\n        // recipients array\n        $recipients = array();\n        // any ?\n        if (is_array($notification_users)) {\n        \tif(sizeof($notification_users)>0) {\n\t         \t// if subnetId is set check who has permissions\n\t        \tif (isset($subnetId)) {\n\t             \tforeach ($notification_users as $u) {\n\t                \t// inti object\n\t                \t$Subnets = new Subnets ($this->Database);\n\t                \t//check permissions\n\t                \t$subnet_permission = $Subnets->check_permission($u, $subnetId);\n\t                \t// if 3 than add\n\t                \tif ($subnet_permission==3) {\n\t                    \t$recipients[] = $u;\n\t                \t}\n\t            \t}\n\t        \t}\n\t        \telse {\n\t            \tforeach ($notification_users as $u) {\n\t                \tif($u->role==\"Administrator\") {\n\t                    \t$recipients[] = $u;\n\t                \t}\n\t            \t}\n\t        \t}\n\t        }\n        \treturn sizeof($recipients)>0 ? $recipients : false;\n        }\n        else {\n            return false;\n        }\n\t}\n\n\n\n\n\t/**\n\t * fetches settings from database\n\t *\n\t * @access private\n\t * @return object|false\n\t */\n\tpublic function get_settings () {\n\t\tif (is_object($this->settings))\n\t\t\treturn $this->settings;\n\n\t\t// fetch_object results are cached in $Database->cache.\n\t\t$settings = $this->fetch_object(\"settings\", \"id\", 1);\n\n\t\tif (!is_object($settings))\n\t\t\treturn false;\n\n\t\t// Escape ' & \" charaters\n\t\tif (property_exists($settings, 'siteTitle'))\n\t\t\t$settings->siteTitle = escape_input($settings->siteTitle);\n\n\t\t// default dbversion for older releases\n\t\tif (!property_exists($settings, 'dbversion'))\n\t\t\t$settings->dbversion = 0;\n\n\t\t#save\n\t\t$this->settings = $settings;\n\n\t\treturn $this->settings;\n\t}\n\n\n    /**\n     * Write result to cache.\n     *\n     * @access protected\n     * @param string $table\n     * @param mixed $object\n     * @return void\n     */\n    protected function cache_write ($table, $object) {\n        if (!is_object($object))\n            return;\n\n        // Exclude exceptions from caching\n        if ($this->cache_check_exceptions($table))\n            return;\n\n        // get and check id property\n        $identifier = $this->cache_set_identifier ($table);\n\n        if (!property_exists($object, $identifier))\n            return;\n\n        $id = $object->{$identifier};\n\n        // already set\n        if (isset($this->Database->cache[$table][$identifier][$id]))\n            return;\n\n        // add ip ?\n        $ip_check = $this->cache_check_add_ip($table);\n        if ($ip_check!==false) {\n            $object->ip = $this->transform_address ($object->{$ip_check}, \"dotted\");\n        }\n\n        // save\n        $this->Database->cache[$table][$identifier][$id] = clone $object;\n    }\n\n    /**\n     * Check if caching is not needed\n     *\n     * @access protected\n     * @param mixed $table\n     * @return bool\n     */\n    protected function cache_check_exceptions ($table) {\n        $exceptions = [\n            \"firewallZoneSubnet\"=>1,\n            \"circuitsLogicalMapping\" =>1,\n            \"php_sessions\"=>1];\n\n        // check\n        return isset($exceptions[$table]) ? true : false;\n    }\n\n    /**\n     * Check if ip is to be added to result\n     *\n     * @access protected\n     * @param mixed $table\n     * @return bool|mixed\n     */\n    protected function cache_check_add_ip ($table) {\n        $ip_tables = [\"subnets\"=>\"subnet\", \"ipaddresses\"=>\"ip_addr\"];\n\n        // check\n        return array_key_exists ($table, $ip_tables) ? $ip_tables[$table] : false;\n    }\n\n    /**\n     * Set identifier for table - exceptions.\n     *\n     * @access protected\n     * @param string $table\n     * @return string\n     */\n    protected function cache_set_identifier ($table) {\n        // Tables with different primary keys\n        $mapings = [\n            'userGroups'=>'g_id',\n            'lang'=>'l_id',\n            'vlans'=>'vlanId',\n            'vrf'=>'vrfId',\n            'changelog'=>'cid',\n            'widgets'=>'wid',\n            'deviceTypes'=>'tid',\n            'nominatim_cache'=>'sha256'];\n\n        return isset($mapings[$table]) ? $mapings[$table] : 'id';\n    }\n\n    /**\n     * Checks if object alreay exists in cache..\n     *\n     * @access protected\n     * @param mixed $table\n     * @param mixed $id\n     * @return object|false\n     */\n    protected function cache_check ($table, $id) {\n        // get identifier\n        $identifier = $this->cache_set_identifier ($table);\n\n        // check if cache is already set, otherwise return false\n        if (isset($this->Database->cache[$table][$identifier][$id]))\n            return clone $this->Database->cache[$table][$identifier][$id];\n\n        return false;\n    }\n\n\t/**\n\t * Sets debugging\n\t *\n\t * @access public\n\t * @param bool $debug (default: false)\n\t * @return bool\n\t */\n\tpublic function set_debugging ($debug = false) {\n\t\t$this->debugging = $debug==true ? true : false;\n\t}\n\n\t/**\n\t * Gets debugging\n\t *\n\t * @access public\n\t * @return bool\n\t */\n\tpublic function get_debugging () {\n\t\treturn $this->debugging;\n\t}\n\n\t/**\n\t * Initializes PEAR Net IPv4 object\n\t *\n\t * @access public\n\t * @return void\n\t */\n\tpublic function initialize_pear_net_IPv4 () {\n\t\t//initialize NET object\n\t\tif(!is_object($this->Net_IPv4)) {\n\t\t\trequire_once( dirname(__FILE__) . '/../../functions/PEAR/Net/IPv4.php' );\n\t\t\t//initialize object\n\t\t\t$this->Net_IPv4 = new Net_IPv4();\n\t\t}\n\t}\n\n\t/**\n\t * Initializes PEAR Net IPv6 object\n\t *\n\t * @access public\n\t * @return void\n\t */\n\tpublic function initialize_pear_net_IPv6 () {\n\t\t//initialize NET object\n\t\tif(!is_object($this->Net_IPv6)) {\n\t\t\trequire_once( dirname(__FILE__) . '/../../functions/PEAR/Net/IPv6.php' );\n\t\t\t//initialize object\n\t\t\t$this->Net_IPv6 = new Net_IPv6();\n\t\t}\n\t}\n\n\t/**\n\t * Initializes PEAR Net IPv6 object\n\t *\n\t * @access public\n\t * @return void\n\t */\n\tpublic function initialize_pear_net_DNS2 () {\n\t\t//initialize NET object\n\t\tif(!is_object($this->DNS2)) {\n\t\t\trequire_once( dirname(__FILE__) . '/../../functions/PEAR/Net/DNS2.php' );\n\t\t\t//initialize object\n\t\t\t$this->DNS2 = new Net_DNS2_Resolver(array(\"timeout\"=>2));\n\t\t}\n\t}\n\n\t/**\n\t * Strip tags from array or field to protect from XSS\n\t *\n\t * @access public\n\t * @param array|string $input\n\t * @return array|string\n\t */\n\tpublic function strip_input_tags ($input) {\n\t\tif(is_array($input)) {\n\t\t\tforeach($input as $k=>$v) {\n\t\t\t\tif(is_array($v)) {\n\t\t\t\t\t$input[$k] = $this->strip_input_tags($v);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t$input[$k] = is_null($v) ? NULL : strip_tags($v);\n\t\t\t}\n\t\t\t# stripped array\n\t\t\treturn $input;\n\t\t}\n\n\t\t// not array\n\t\treturn is_null($input) ? NULL : strip_tags($input);\n\t}\n\n\t/**\n\t * Remove <script>, <iframe> and JS HTML event attributes from HTML to protect from XSS\n\t *\n\t * @param   string  $html\n\t * @return  string\n\t */\n\tpublic function noxss_html($html) {\n\t\tif (!is_string($html) || is_blank($html))\n\t\t\treturn \"\";\n\n\t\t// Convert encoding to UTF-8\n\t\t$html = mb_convert_encoding($html, 'HTML-ENTITIES', 'UTF-8');\n\n\t\t// Throw loadHTML() parsing errors\n\t\t$err_mode = libxml_use_internal_errors(false);\n\t\t$php_reporting = error_reporting(0);\n\n\t\ttry {\n\t\t\t$dom = new \\DOMDocument();\n\t\t\tif ($dom->loadHTML(\"<html>\".$html.\"</html>\", LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD | LIBXML_NOBLANKS | LIBXML_NOWARNING | LIBXML_NOERROR) === false)\n\t\t\t\treturn \"\";\n\n\t\t\t$banned_elements = ['script', 'iframe', 'embed', 'object'];\n\t\t\t$remove_elements = [];\n\n\t\t\t$elements = $dom->getElementsByTagName('*');\n\n\t\t\tif (is_object($elements) && $elements->length>0) {\n\t\t\t\tforeach($elements as $e) {\n\t\t\t\t\tif (in_array($e->nodeName, $banned_elements)) {\n\t\t\t\t\t\t$remove_elements[] = $e;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!$e->hasAttributes())\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t// remove on* HTML event attributes\n\t\t\t\t\tforeach ($e->attributes as $attr) {\n\t\t\t\t\t\tif (substr($attr->nodeName,0,2) == \"on\")\n\t\t\t\t\t\t\t$e->removeAttribute($attr->nodeName);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Remove banned elements\n\t\t\t\tforeach($remove_elements as $e)\n\t\t\t\t\t$e->parentNode->removeChild($e);\n\n\t\t\t\t// Return sanitised HTML\n\t\t\t\t$html = str_replace(['<html>', '</html>'], '', $dom->saveHTML());\n\t\t\t}\n\t\t} catch (Exception $e) {\n\t\t\t$html = \"\";\n\t\t}\n\n\t\t// restore error mode\n\t\tlibxml_use_internal_errors($err_mode);\n\t\terror_reporting($php_reporting);\n\n\t\treturn is_string($html) ? $html : \"\";\n\t}\n\n\t/**\n\t * Changes empty array fields to specified character\n\t *\n\t * @access public\n\t * @param array|object $fields\n\t * @param string $char (default: \"/\")\n\t * @return array\n\t */\n\tpublic function reformat_empty_array_fields ($fields, $char = \"/\") {\n    \t$out = array();\n    \t// loop\n\t\tforeach($fields as $k=>$v) {\n    \t\tif(is_array($v)) {\n        \t\t$out[$k] = $v;\n    \t\t}\n    \t\telse {\n    \t\t\tif(is_null($v) || is_blank($v)) {\n    \t\t\t\t$out[$k] = \t$char;\n    \t\t\t} else {\n    \t\t\t\t$out[$k] = $v;\n    \t\t\t}\n    \t\t}\n\t\t}\n\t\t# result\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Removes empty array fields\n\t *\n\t * @access public\n\t * @param array $fields\n\t * @return array\n\t */\n\tpublic function remove_empty_array_fields ($fields) {\n    \t// init\n    \t$out = array();\n    \t// loop\n    \tif(is_array($fields)) {\n\t\t\tforeach($fields as $k=>$v) {\n\t\t\t\tif(is_null($v) || is_blank($v)) {\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$out[$k] = $v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t# result\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Trim whitespace form array objects\n\t *\n\t * @method trim_array_objects\n\t * @param  string|array $fields\n\t * @return string|array\n\t */\n\tpublic function trim_array_objects ($fields) {\n\t\tif(is_array($fields)) {\n\t    \t// init\n\t    \t$out = array();\n\t    \t// loop\n\t\t\tforeach($fields as $k=>$v) {\n\t\t\t\t$out[$k] = trim($v);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t$out = trim($fields);\n\t\t}\n\t\t# result\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Strip XSS on value print\n\t *\n\t * @method strip_xss\n\t *\n\t * @param  string $input\n\t *\n\t * @return string\n\t */\n\tpublic function strip_xss ($input) {\n\t\treturn htmlspecialchars($input ?: '', ENT_QUOTES, 'UTF-8');\n\t}\n\n\t/**\n\t * Detect the encoding used for a string and convert to UTF-8\n\t *\n\t * @method convert_encoding_to_UTF8\n\t * @param  string $string\n\t * @return string\n\t */\n\tpublic function convert_encoding_to_UTF8($string) {\n\t\t//convert encoding if necessary\n\t\treturn mb_convert_encoding($string, 'UTF-8', mb_detect_encoding($string, 'ASCII, UTF-8, ISO-8859-1, auto', true));\n\t}\n\n\t/**\n\t * Function to verify checkbox if 0 length\n\t *\n\t * @access public\n\t * @param mixed $field\n\t * @return int|mixed\n\t */\n\tpublic function verify_checkbox ($field) {\n\t\treturn (!isset($field) || is_blank($field)) ? 0 : escape_input($field);\n\t}\n\n\t/**\n\t * identify ip address type - ipv4 or ipv6\n\t *\n\t * @access public\n\t * @param mixed $address\n\t * @return mixed IP version\n\t */\n\tpublic function identify_address ($address) {\n\t\t# dotted representation\n\t\tif (strpos($address, ':') !== false) return 'IPv6';\n\t\tif (strpos($address, '.') !== false) return 'IPv4';\n\t\t# numeric representation\n\t\tif (is_numeric($address)) {\n\t\t\tif($address <= 4294967295) return 'IPv4'; // 4294967295 = '255.255.255.255'\n\t\t\treturn 'IPv6';\n\t\t} else {\n\t\t\t# decimal representation\n\t\t\tif(strlen($address) < 12) return 'IPv4';\n\t\t\treturn 'IPv6';\n\t\t}\n\t}\n\n\t/**\n\t * Alias of identify_address_format function\n\t *\n\t * @access public\n\t * @param mixed $address\n\t * @return mixed\n\t */\n\tpublic function get_ip_version ($address) {\n\t\treturn $this->identify_address ($address);\n\t}\n\n\t/**\n\t * Transforms array to log format\n\t *\n\t * @access public\n\t * @param mixed $logs\n\t * @param bool $changelog\n\t * @return mixed\n\t */\n\tpublic function array_to_log ($logs, $changelog = false) {\n\t\t$result = \"\";\n\n\t\tif(!is_array($logs))\n\t\t\treturn $result;\n\n\t\tforeach($logs as $key=>$req) {\n\t\t\t# ignore __ and PHPSESSID\n\t\t\tif( substr($key,0,2)=='__' || substr($key,0,9)=='PHPSESSID' || substr($key,0,4)=='pass' || $key=='plainpass' || $key=='values')\n\t\t\t\tcontinue;\n\n\t\t\t// NOTE The colon character \":\" is reserved as it used in array_to_log for implode/explode.\n\t\t\t// Replace colon (U+003A) with alternative characters.\n\t\t\t// Using JSON encode/decode would be more appropiate but we need to maintain backwards compatibility with historical changelog/logs data in the database.\n\t\t\tif ($req == \"mac\")\n\t\t\t\t$req = strtr($req, ':', '-'); # Mac-addresses, replace Colon U+003A with hyphen U+002D\n\n\t\t\tif (is_string($req) && strpos($req, ':')!==false)\n\t\t\t\t$req = strtr($req, ':', '.'); # Default, replace Colon U+003A with Full Stop U+002E.\n\n\t\t\t$result .= ($changelog===true) ? \"[$key]: $req<br>\" : \" \". $key . \": \" . $req . \"<br>\";\n\t\t}\n\t\treturn $result;\n\t}\n\n\t/**\n\t * Transforms seconds to hms\n\t *\n\t * @access public\n\t * @param mixed $sec\n\t * @param bool $padHours (default: false)\n\t * @return mixed\n\t */\n\tpublic function sec2hms($sec, $padHours = false) {\n\t    // holds formatted string\n\t    $hms = \"\";\n\n\t    // get the number of hours\n\t    $hours = intval($sec / 3600);\n\n\t    // add to $hms, with a leading 0 if asked for\n\t    $hms .= ($padHours)\n\t          ? str_pad($hours, 2, \"0\", STR_PAD_LEFT). ':'\n\t          : $hours. ':';\n\n\t    // get the seconds\n\t    $minutes = intval($sec / 60) % 60;\n\n\t    // then add to $hms (with a leading 0 if needed)\n\t    $hms .= str_pad($minutes, 2, \"0\", STR_PAD_LEFT). ':';\n\n\t    // seconds\n\t    $seconds = intval($sec) % 60;\n\n\t    // add to $hms, again with a leading 0 if needed\n\t    $hms .= str_pad($seconds, 2, \"0\", STR_PAD_LEFT);\n\n\t    // return hms\n\t    return $hms;\n\t}\n\n\t/**\n\t * Shortens text to max chars\n\t *\n\t * @access public\n\t * @param mixed $text\n\t * @param int $chars (default: 25)\n\t * @return mixed\n\t */\n\tpublic function shorten_text($text, $chars = 25) {\n\t\tif (is_blank($text))\n\t\t\treturn '';\n\n\t\t// minimum length = 8\n\t\tif ($chars < 8) $chars = 8;\n\t\t// count input text size\n\t\t$origLen = mb_strlen($text);\n\t\t// cut unwanted chars\n\t\tif ($origLen > $chars) {\n\t\t\t$text = mb_substr($text, 0, $chars-3) . '...';\n\t\t}\n\t\treturn $text;\n\t}\n\n\t/**\n\t * Reformats MAC address to requested format\n\t *\n\t * @access public\n\t * @param mixed $mac\n\t * @param string $format (default: 1)\n\t *      1 : 00:66:23:33:55:66\n\t *      2 : 00-66-23-33-55-66\n\t *      3 : 0066.2333.5566\n\t *      4 : 006623335566\n\t * @return string\n\t */\n\tpublic function reformat_mac_address ($mac, $format = 1) {\n    \t// strip al tags first\n    \t$mac = strtolower(str_replace(array(\":\",\".\",\"-\"), \"\", $mac));\n    \t// format 4\n    \tif ($format==4) {\n        \treturn $mac;\n    \t}\n    \t// format 3\n    \tif ($format==3) {\n        \t$mac = str_split($mac, 4);\n        \t$mac = implode(\".\", $mac);\n    \t}\n    \t// format 2\n    \telseif ($format==2) {\n        \t$mac = str_split($mac, 2);\n        \t$mac = implode(\"-\", $mac);\n    \t}\n    \t// format 1\n    \telse {\n        \t$mac = str_split($mac, 2);\n        \t$mac = implode(\":\", $mac);\n    \t}\n    \t// return\n    \treturn $mac;\n\t}\n\n\t/**\n\t * Return port number used to access the site\n\t *\n\t * @access  private\n\t * @return  int\n\t */\n\tprivate function httpPort() {\n\t\t// If only HTTP_X_FORWARDED_PROTO='https' is set assume port=443. Override if required by setting HTTP_X_FORWARDED_PORT\n\t\tif (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && !isset($_SERVER['HTTP_X_FORWARDED_PORT'])) {\n\t\t\treturn ($_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') ? 443 : 80;\n\t\t}\n\t\telseif (isset($_SERVER['HTTP_X_FORWARDED_PORT'])) {\n\t\t\treturn $_SERVER['HTTP_X_FORWARDED_PORT'];\n\t\t}\n\t\telseif (isset($_SERVER['SERVER_PORT'])) {\n\t\t\treturn $_SERVER['SERVER_PORT'];\n\t\t}\n\t\telse {\n\t\t\treturn 80;\n\t\t}\n\t}\n\n\t/**\n\t* Returns true if site is accessed with https\n\t*\n\t* @access public\n\t* @return bool\n\t*/\n\tpublic function isHttps () {\n\t\tif (isset($_SERVER['HTTP_X_FORWARDED_PROTO'])) {\n\t\t\treturn ($_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https');\n\t\t}\n\t\telseif (isset($_SERVER['HTTP_X_FORWARDED_SSL']) && $_SERVER['HTTP_X_FORWARDED_SSL'] == 'on') {\n\t\t\treturn true;\n\t\t}\n\t\telseif(isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') {\n\t\t\treturn true;\n\t\t}\n\t\telseif($this->httpPort() == 443) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Get IP address of connected user\n\t *\n\t * @return string|null\n\t */\n\tprotected function get_user_ip() {\n\t\tif (php_sapi_name() === \"cli\")\n\t\t\treturn null;\n\n\t\tif (isset($_SERVER['HTTP_X_FORWARDED_FOR']) && filter_var($_SERVER['HTTP_X_FORWARDED_FOR'], FILTER_VALIDATE_IP))\n\t\t\treturn $_SERVER['HTTP_X_FORWARDED_FOR'];\n\n\t\tif (isset($_SERVER['REMOTE_ADDR']) && filter_var($_SERVER['REMOTE_ADDR'], FILTER_VALIDATE_IP))\n\t\t\treturn $_SERVER['REMOTE_ADDR'];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Create URL for base\n\t *\n\t * @access public\n\t * @return string\n\t */\n\tpublic function createURL () {\n\t\t$proto = $this->isHttps() ? 'https' : 'http';\n\n\t\tif (isset($_SERVER['HTTP_X_FORWARDED_HOST'])) {\n\t\t\t$url = $_SERVER['HTTP_X_FORWARDED_HOST'];\n\t\t}\n\t\telseif (isset($_SERVER['HTTP_HOST'])) {\n\t\t\t$url = $_SERVER['HTTP_HOST'];\n\t\t}\n\t\telseif (isset($_SERVER['SERVER_NAME'])) {\n\t\t\t$url = $_SERVER['SERVER_NAME'];\n\t\t}\n\t\telse {\n\t\t\t$url = \"localhost\";\n\t\t}\n\t\t$host = parse_url(\"$proto://$url\", PHP_URL_HOST) ?: \"localhost\";\n\n\t\t$port = $this->httpPort();\n\n\t\tif (($proto == \"http\" && $port == 80) || ($proto == \"https\" && $port == 443)) {\n\t\t\treturn \"$proto://$host\";\n\t\t} else {\n\t\t\treturn \"$proto://$host:$port\";\n\t\t}\n\t}\n\n\t/**\n\t * Creates links from text fields if link is present\n\t *\n\t *\tsource: https://css-tricks.com/snippets/php/find-urls-in-text-make-links/\n\t *\n\t * @access public\n \t * @param string $text\n\t * @param string $field_type\n\t * @return string\n\t */\n\tpublic function create_links ($text, $field_type = \"varchar\") {\n\t\tif (!is_string($text))\n\t\t\treturn '';\n\n\t\t// create links only for varchar fields\n\t\tif (strpos($field_type, \"varchar\")!==false) {\n\t\t\t// regular expression\n\t\t\t$reg_exUrl = \"#((http|https|ftp|ftps|telnet|ssh|rdp)://\\S+[^\\s.,>)\\];'\\\"!?])#\";\n\n\t\t\t// Check if there is a url in the text, make the urls hyper links\n\t\t\t$text = preg_replace($reg_exUrl, \"<a href='$0' target='_blank'>$0</a>\", $text);\n\t\t}\n\t\t// return text\n\t\treturn $text;\n\t}\n\n\t/**\n\t * Sets valid actions\n\t *\n\t * @access private\n\t * @return string[]\n\t */\n\tprivate function get_valid_actions () {\n\t\treturn array(\n\t\t        \"add\",\n\t\t        \"all-add\",\n\t\t        \"edit\",\n\t\t        \"all-edit\",\n\t\t        \"delete\",\n\t\t        \"truncate\",\n\t\t        \"split\",\n\t\t        \"resize\",\n\t\t        \"move\",\n\t\t        \"remove\",\n\t\t        \"assign\"\n\t\t      );\n\t}\n\n\t/**\n\t * Validate posted action on scripts\n\t *\n\t * @access public\n\t * @param mixed $action\n\t * @param bool $popup\n\t * @return mixed|bool\n\t */\n\tpublic function validate_action ($action, $popup = false) {\n\t\t# get valid actions\n\t\t$valid_actions = $this->get_valid_actions ();\n\t\t# check\n\t\tin_array($action, $valid_actions) ?: $this->Result->show(\"danger\", _(\"Invalid action!\"), true, $popup);\n\t}\n\n\t/**\n\t * Validates email address.\n\t *\n\t * @access public\n\t * @param mixed $email\n\t * @return bool\n\t */\n\tpublic function validate_email($email) {\n\t\treturn filter_var($email, FILTER_VALIDATE_EMAIL);\n\t}\n\n\t/**\n\t * Validate hostname\n\t *\n\t * @access public\n\t * @param mixed $hostname\n\t * @param bool $permit_root_domain\n\t * @return bool|mixed\n\t */\n\tpublic function validate_hostname($hostname, $permit_root_domain=true) {\n    \t// first validate hostname\n    \t$valid =  (preg_match(\"/^([a-z_\\d](-*[a-z_\\d])*)(\\.([a-z_\\d](-*[a-z_\\d])*))*$/i\", $hostname) \t//valid chars check\n\t            && preg_match(\"/^.{1,253}$/\", $hostname) \t\t\t\t\t\t\t\t\t\t//overall length check\n\t            && preg_match(\"/^[^\\.]{1,63}(\\.[^\\.]{1,63})*$/\", $hostname)   ); \t\t\t\t//length of each label\n\t    // if it fails return immediately\n\t    if (!$valid) {\n    \t    return $valid;\n\t    }\n\t    // than validate root_domain if requested\n\t    elseif ($permit_root_domain)    {\n    \t    return $valid;\n\t    }\n\t    else {\n    \t    if(strpos($hostname, \".\")!==false)  { return $valid; }\n    \t    else                                { return false; }\n\t    }\n\t}\n\n\t/**\n\t * Validates IP address\n\t *\n\t * @access public\n\t * @param mixed $ip\n\t * @return bool\n\t */\n\tpublic function validate_ip ($ip) {\n    \tif(filter_var($ip, FILTER_VALIDATE_IP)===false) { return false; }\n    \telse                                            { return true; }\n\t}\n\n\t/**\n\t * Validates MAC address\n\t *\n\t * @access public\n\t * @param mixed $mac\n\t * @return bool\n\t */\n\tpublic function validate_mac ($mac) {\n    \t// first put it to common format (1)\n    \t$mac = $this->reformat_mac_address ($mac);\n    \t// we permit empty\n        if (is_blank($mac))                                                            { return true; }\n    \telseif (preg_match('/^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/', $mac) != 1)   { return false; }\n    \telse                                                                            { return true; }\n\t}\n\n    /**\n     * Validates json from provided string.\n     *\n     * @access public\n     * @param mixed $string\n     * @return mixed\n     */\n    public function validate_json_string($string) {\n        // try to decode\n        pf_json_decode($string);\n        // check for error\n        $parse_result = json_last_error_msg();\n        // save possible error\n        if($parse_result!==\"No error\") {\n            $this->json_error = $parse_result;\n        }\n        // return true / false\n        return (json_last_error() == JSON_ERROR_NONE);\n    }\n\n\t/**\n\t * Validate a postal code.\n\t *\n\t * https://gist.github.com/mpezzi/1171590\n\t *\n\t * @param $value\n\t * @param $country\n     * @return bool\n\t */\n\tpublic function validate_postcode ($value = \"\", $country = 'united kingdom') {\n\t\t// to lower\n\t\t$country = strtolower($country);\n\t\t// set regexes\n\t\t$country_regex = array(\n\t\t\t'united kingdom' => '/\\\\A\\\\b[A-Z]{1,2}[0-9][A-Z0-9]? [0-9][ABD-HJLNP-UW-Z]{2}\\\\b\\\\z/i',\n\t\t\t'england'        => '/\\\\A\\\\b[A-Z]{1,2}[0-9][A-Z0-9]? [0-9][ABD-HJLNP-UW-Z]{2}\\\\b\\\\z/i',\n\t\t\t'canada'         => '/\\\\A\\\\b[ABCEGHJKLMNPRSTVXY][0-9][A-Z][ ]?[0-9][A-Z][0-9]\\\\b\\\\z/i',\n\t\t\t'italy'          => '/^[0-9]{5}$/i',\n\t\t\t'deutschland'    => '/^[0-9]{5}$/i',\n\t\t\t'germany'        => '/^[0-9]{5}$/i',\n\t\t\t'belgium'        => '/^[1-9]{1}[0-9]{3}$/i',\n\t\t\t'united states'  => '/\\\\A\\\\b[0-9]{5}(?:-[0-9]{4})?\\\\b\\\\z/i',\n\t\t\t'default'        => '/^[0-9]/i',\n\t\t);\n\n\t\t// check for country\n\t\tif ( isset($country_regex[$country]) ) {\n\t\t\treturn preg_match($country_regex[$country], $value);\n\t\t}\n\t\t// default\n\t\treturn preg_match($country_regex['default'], $value);\n\t}\n\n\t/**\n\t * Transforms ipv6 to nt\n\t *\n\t * @access public\n\t * @param mixed $ipv6\n\t * @return mixed\n\t */\n\tpublic function ip2long6 ($ipv6) {\n\t\tif($ipv6 == \".255.255.255\") {\n\t\t\treturn false;\n\t\t}\n\t    $ip_n = inet_pton($ipv6);\n\t    $bits = 15; // 16 x 8 bit = 128bit\n\t    $ipv6long = \"\";\n\n\t    while ($bits >= 0)\n\t    {\n\t        $bin = sprintf(\"%08b\",(ord($ip_n[$bits])));\n\t        $ipv6long = $bin.$ipv6long;\n\t        $bits--;\n\t    }\n\t    return gmp_strval(gmp_init($ipv6long,2),10);\n\t}\n\n\t/**\n\t * Transforms int to ipv4\n\t *\n\t * @access private\n\t * @param mixed $ipv4long\n\t * @return mixed\n\t */\n\tprivate function long2ip4($ipv4long) {\n\t\tif (PHP_INT_SIZE==4) {\n\t\t\t// As of php7.1 long2ip() no longer accepts strings.\n\t\t\t// Convert unsigned int IPv4 to signed integer.\n\t\t\t$ipv4long = (int) ($ipv4long + 0);\n\t\t}\n\t\treturn long2ip($ipv4long);\n\t}\n\n\t/**\n\t * Transforms int to ipv6\n\t *\n\t * @access private\n\t * @param mixed $ipv6long\n\t * @return mixed\n\t */\n\tprivate function long2ip6($ipv6long) {\n\t\t$hex = sprintf('%032s', gmp_strval(gmp_init($ipv6long, 10), 16));\n\t\t$ipv6 = implode(':', str_split($hex, 4));\n\t\t// compress result\n\t\treturn inet_ntop(inet_pton($ipv6));\n\t}\n\n\t/**\n\t * Identifies IP address format\n\t *\n\t *\t0 = decimal\n\t *\t1 = dotted\n\t *\n\t * @access public\n\t * @param mixed $address\n\t * @return mixed decimal or dotted\n\t */\n\tpublic function identify_address_format ($address) {\n\t\treturn is_numeric($address) ? \"decimal\" : \"dotted\";\n\t}\n\n\t/**\n\t * Transforms IP address to required format\n\t *\n\t *\tformat can be decimal (1678323323) or dotted (10.10.0.0)\n\t *\n\t * @access public\n\t * @param mixed $address\n\t * @param string $format (default: \"dotted\")\n\t * @return mixed requested format\n\t */\n\tpublic function transform_address ($address, $format = \"dotted\") {\n\t\t# no change\n\t\tif($this->identify_address_format ($address) == $format)\t\t{ return $address; }\n\t\telse {\n\t\t\tif($this->identify_address_format ($address) == \"dotted\")\t{ return $this->transform_to_decimal ($address); }\n\t\t\telse\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ return $this->transform_to_dotted ($address); }\n\t\t}\n\t}\n\n\t/**\n\t * Transform IP address from decimal to dotted (167903488 -> 10.2.1.0)\n\t *\n\t * @access public\n\t * @param mixed $address\n\t * @return mixed dotted format\n\t */\n\tpublic function transform_to_dotted ($address) {\n\t    if ($this->identify_address ($address) == \"IPv4\" ) \t\t\t\t{ return($this->long2ip4($address)); }\n\t    else \t\t\t\t\t\t\t\t \t\t\t  \t\t\t\t{ return($this->long2ip6($address)); }\n\t}\n\n\t/**\n\t * Transform IP address from dotted to decimal (10.2.1.0 -> 167903488)\n\t *\n\t * @access public\n\t * @param mixed $address\n\t * @return int IP address\n\t */\n\tpublic function transform_to_decimal ($address) {\n\t    if ($this->identify_address ($address) == \"IPv4\" ) \t\t\t\t{ return( sprintf(\"%u\", ip2long($address)) ); }\n\t    else \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t{ return($this->ip2long6($address)); }\n\t}\n\n\t/**\n\t * Returns array of address types\n\t *\n\t * @access protected\n\t * @return void\n\t */\n\tprotected function get_addresses_types () {\n\t\t# from cache\n\t\tif($this->address_types == null) {\n\t\t\t# fetch\n\t\t\t$types = $this->fetch_all_objects (\"ipTags\", \"id\");\n\t\t\tif (!is_array($types))\n\t\t\t\treturn;\n\n\t\t\t# save to array\n\t\t\t$types_out = array();\n\t\t\tforeach($types as $t) {\n\t\t\t\t$types_out[$t->id] = (array) $t;\n\t\t\t}\n\t\t\t# save to cache\n\t\t\t$this->address_types = $types_out;\n\t\t}\n\t}\n\n\t/**\n\t * Translates address type from index (int) to type\n\t *\n\t *\te.g.: 0 > offline\n\t *\n\t * @access protected\n\t * @param mixed $index\n\t * @return mixed\n\t */\n\tprotected function translate_address_type ($index) {\n\t\treturn isset($this->address_types[$index][\"type\"]) ? $this->address_types[$index][\"type\"] : \"Used\";\n\t}\n\n\t/**\n\t * Returns text representation of json errors\n\t *\n\t * @access public\n\t * @param mixed $error_int\n\t * @return mixed\n\t */\n\tpublic function json_error_decode ($error_int) {\n    \t// init\n    \t$error = array();\n\t\t// error definitions\n\t\t$error[0] = \"JSON_ERROR_NONE\";\n\t\t$error[1] = \"JSON_ERROR_DEPTH\";\n\t\t$error[2] = \"JSON_ERROR_STATE_MISMATCH\";\n\t\t$error[3] = \"JSON_ERROR_CTRL_CHAR\";\n\t\t$error[4] = \"JSON_ERROR_SYNTAX\";\n\t\t$error[5] = \"JSON_ERROR_UTF8\";\n\t\t$error[6] = \"JSON_ERROR_RECURSION\";\n\t\t$error[7] = \"JSON_ERROR_INF_OR_NAN\";\n\t\t$error[8] = \"JSON_ERROR_UNSUPPORTED_TYPE\";\n\t\t$error[9] = \"JSON_ERROR_INVALID_PROPERTY_NAME\";\n\t\t$error[10] = \"JSON_ERROR_UTF16\";\n\t\t// return def\n\t\tif (isset($error[$error_int]))\t{ return $error[$error_int]; }\n\t\telse\t\t\t\t\t\t\t{ return \"JSON_ERROR_UNKNOWN\"; }\n\t}\n\n\t/**\n\t * Download URL via CURL\n\t * @param  string $url\n\t * @param  array|boolean $headers (default:false)\n\t * @param  integer $timeout (default:30)\n\t */\n\tpublic function curl_fetch_url($url, $headers=false, $timeout=30) {\n\t\t$result = ['result'=>false, 'result_code'=>503, 'error_msg'=>''];\n\n\t\tif (Config::ValueOf('offline_mode')) {\n\t\t\t$result['error_msg'] = _('Internet access disabled in config.php');\n\t\t\treturn $result;\n\t\t}\n\n\t\ttry {\n\t\t\t$curl = curl_init();\n\t\t\tcurl_setopt($curl, CURLOPT_URL, $url);\n\t\t\tcurl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);\n\t\t\tcurl_setopt($curl, CURLOPT_MAXREDIRS, 4);\n\t\t\tcurl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n\t\t\tcurl_setopt($curl, CURLOPT_FAILONERROR, true);\n\t\t\tcurl_setopt($curl, CURLOPT_SSL_VERIFYPEER, true);\n\t\t\tcurl_setopt($curl, CURLOPT_CONNECTTIMEOUT, $timeout);\n\t\t\tif (is_array($headers))\n\t\t\tcurl_setopt($curl, CURLOPT_HTTPHEADER, $headers);\n\n\t\t\t// configure proxy settings\n\t\t\tif (Config::ValueOf('proxy_enabled') == true) {\n\t\t\t\tcurl_setopt($curl, CURLOPT_PROXY, Config::ValueOf('proxy_server'));\n\t\t\t\tcurl_setopt($curl, CURLOPT_PROXYPORT, Config::ValueOf('proxy_port'));\n\t\t\t\tif (Config::ValueOf('proxy_use_auth') == true) {\n\t\t\t\tcurl_setopt($curl, CURLOPT_PROXYUSERPWD, Config::ValueOf('proxy_user').':'.Config::ValueOf('proxy_pass'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$result['result']      = curl_exec($curl);\n\t\t\t$result['result_code'] = curl_getinfo($curl, CURLINFO_HTTP_CODE);\n\t\t\t$result['error_msg']   = curl_error($curl);\n\n\t\t\t// close\n\t\t\tcurl_close ($curl);\n\n\t\t} catch (Exception $e) {\n\t\t\t$result['error_msg'] = $e->getMessage();\n\t\t}\n\n\t\treturn $result;\n\t}\n\n    /**\n     * Updates location to latlng from address\n     *\n     * @access public\n     * @param mixed $id\n     * @param mixed $lat\n     * @param mixed $lng\n     * @return bool\n     */\n    public function update_latlng ($id, $lat, $lng) {\n\t\t# execute\n\t\ttry { $this->Database->updateObject(\"locations\", array(\"id\"=>$id, \"lat\"=>$lat, \"long\"=>$lng), \"id\"); }\n\t\tcatch (Exception $e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n    }\n\n    /**\n     * Creates form input field for custom fields.\n     *\n     * @access public\n     * @param mixed $field\n     * @param mixed $object\n     * @param mixed $timepicker_index\n     * @param bool $disabled\n     * @param string $set_delimiter\n     * @param string $nameSuffix\n     * @return array\n     */\n    public function create_custom_field_input ($field, $object, $timepicker_index, $disabled = false, $set_delimiter = \"\", $nameSuffix = \"\") {\n        # make sure it is array\n\t\t$field  = (array) $field;\n\t\t$object = (object) $object;\n\n        // disabled\n        $disabled_text = $disabled ? \"readonly\" : \"\";\n        // replace spaces with |\n        $field['nameNew'] = str_replace(\" \", \"___\", $field['name']);\n        // required\n        $required = $field['Null']==\"NO\" ? \"*\" : \"\";\n\t\t// set default value if adding new object\n\t\tif (!property_exists($object, $field['name'])) {\n\t\t\t$object->{$field['name']} = $field['Default'];\n\t\t}\n\n        //set, enum\n        if(substr($field['type'], 0,3) == \"set\" || substr($field['type'], 0,4) == \"enum\") {\n        \t$html = $this->create_custom_field_input_set_enum ($field, $object, $disabled_text, $set_delimiter, $nameSuffix);\n        }\n        //date and time picker\n        elseif($field['type'] == \"date\" || $field['type'] == \"datetime\") {\n        \t$html = $this->create_custom_field_input_date ($field, $object, $timepicker_index, $disabled_text, $nameSuffix);\n        }\n        //boolean\n        elseif($field['type'] == \"tinyint(1)\") {\n        \t$html = $this->create_custom_field_input_boolean ($field, $object, $disabled_text, $nameSuffix);\n        }\n        //text\n        elseif($field['type'] == \"text\") {\n        \t$html = $this->create_custom_field_input_textarea ($field, $object, $disabled_text, $nameSuffix);\n        }\n\t\t//default - input field\n\t\telse {\n            $html = $this->create_custom_field_input_input ($field, $object, $disabled_text, $nameSuffix);\n\t\t}\n\n        # result\n        return array(\n\t\t\t\"required\"         => $required,\n\t\t\t\"field\"            => implode(\"\\n\", $html),\n\t\t\t\"timepicker_index\" => $timepicker_index\n        );\n\t}\n\n    /**\n     * Creates form input field for set and enum values\n     *\n     * @access private\n     * @param mixed $field\n     * @param mixed $object\n     * @param string $disabled_text\n     * @param string $set_delimiter\n     * @param string $nameSuffix\n     * @return array\n     */\n    private function create_custom_field_input_set_enum ($field, $object, $disabled_text, $set_delimiter = \"\", $nameSuffix = \"\") {\n\t\t$html = array();\n    \t//parse values\n    \t$field['type'] = trim(substr($field['type'],0,-1));\n    \t$tmp = substr($field['type'], 0,3)==\"set\" ? pf_explode(\",\", str_replace(array(\"set(\", \"'\"), \"\", $field['type'])) : pf_explode(\",\", str_replace(array(\"enum(\", \"'\"), \"\", $field['type']));\n    \t//null\n    \tif($field['Null']!=\"NO\") { array_unshift($tmp, \"\"); }\n\n    \t$html[] = \"<select name='$field[nameNew]$nameSuffix' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]' $disabled_text>\";\n    \tforeach($tmp as $v) {\n    \t\t// set selected\n\t\t\t$selected = $v==$object->{$field['name']} ? \"selected='selected'\" : \"\";\n\t\t\t// parse delimiter\n\t\t\tif(is_blank($set_delimiter)) {\n\t\t\t\t// save\n\t\t        $html[] = \"<option value='$v' $selected>$v</option>\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// explode by delimiter\n\t\t\t\t$tmp2 = explode ($set_delimiter, $v);\n\t    \t\t// reset selected\n\t\t\t\t$selected = $tmp2[0]==$object->{$field['name']} ? \"selected='selected'\" : \"\";\n\t\t\t\t// save\n\t\t        $html[] = \"<option value='$tmp2[0]' $selected>$tmp2[1]</option>\";\n\t\t\t}\n\n    \t}\n    \t$html[] = \"</select>\";\n\n    \t// result\n    \treturn $html;\n\t}\n\n    /**\n     * Creates form input field for date fields.\n     *\n     * @access private\n     * @param mixed $field\n     * @param mixed $object\n     * @param mixed $timepicker_index\n     * @param string $disabled_text\n     * @param string $nameSuffix\n     * @return array\n     */\n    private function create_custom_field_input_date ($field, $object, &$timepicker_index, $disabled_text, $nameSuffix = \"\") {\n   \t\t$html = array ();\n    \t// just for first\n    \tif($timepicker_index==0) {\n    \t\t$html[] =  '<link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap/bootstrap-datetimepicker.min.css?v='.SCRIPT_PREFIX.'\">';\n    \t\t$html[] =  '<script src=\"js/bootstrap-datetimepicker.min.js?v='.SCRIPT_PREFIX.'\"></script>';\n    \t\t$html[] =  '<script>';\n    \t\t$html[] =  '$(document).ready(function() {';\n    \t\t//date only\n    \t\t$html[] =  '\t$(\".datepicker\").datetimepicker( {pickDate: true, pickTime: false, pickSeconds: false });';\n    \t\t//date + time\n    \t\t$html[] =  '\t$(\".datetimepicker\").datetimepicker( { pickDate: true, pickTime: true } );';\n    \t\t$html[] =  '})';\n    \t\t$html[] =  '</script>';\n    \t}\n    \t$timepicker_index++;\n\n    \t//set size\n    \tif($field['type'] == \"date\")\t{ $size = 10; $class='datepicker';\t\t$format = \"yyyy-MM-dd\"; }\n    \telse\t\t\t\t\t\t\t{ $size = 19; $class='datetimepicker';\t$format = \"yyyy-MM-dd\"; }\n\n    \t//field\n    \tif(!isset($object->{$field['name']}))\t{ $html[] = ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$nameSuffix .'\" maxlength=\"'.$size.'\" rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\" '.$disabled_text.'>'. \"\\n\"; }\n    \telse\t\t\t\t\t\t\t\t    { $html[] = ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$nameSuffix .'\" maxlength=\"'.$size.'\" value=\"'. $this->strip_xss($object->{$field['name']}). '\" rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\" '.$disabled_text.'>'. \"\\n\"; }\n\n    \t// result\n\t\treturn $html;\n\t}\n\n    /**\n     * Creates form input field for boolean fields.\n     *\n     * @access private\n     * @param mixed $field\n     * @param mixed $object\n     * @param string $disabled_text\n     * @param string $nameSuffix\n     * @return array\n     */\n    private function create_custom_field_input_boolean ($field, $object, $disabled_text, $nameSuffix = \"\") {\n    \t$html = array ();\n    \t$html[] =  \"<select name='$field[nameNew]$nameSuffix' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]' $disabled_text>\";\n    \t$tmp = array(0=>\"No\",1=>\"Yes\");\n    \t//null\n    \tif($field['Null']!=\"NO\") { $tmp[2] = \"\"; }\n\n    \tforeach($tmp as $k=>$v) {\n    \t\tif(is_blank($object->{$field['name']}) && $k==2)\t{ $html[] = \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n    \t\telseif($k==$object->{$field['name']})\t\t\t\t{ $html[] = \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n    \t\telse\t\t\t\t\t\t\t\t\t\t\t    { $html[] = \"<option value='$k'>\"._($v).\"</option>\"; }\n    \t}\n    \t$html[] = \"</select>\";\n    \t// result\n    \treturn $html;\n\t}\n\n    /**\n     * Creates form input field for text fields.\n     *\n     * @access private\n     * @param mixed $field\n     * @param mixed $object\n     * @param string $disabled_text\n     * @param string $nameSuffix\n     * @return array\n     */\n    private function create_custom_field_input_textarea ($field, $object, $disabled_text, $nameSuffix = \"\") {\n    \t$html = array ();\n    \t$html[] = ' <textarea class=\"form-control input-sm\" name=\"'. $field['nameNew'].$nameSuffix .'\" placeholder=\"'. $this->print_custom_field_name ($field['name']) .'\" rowspan=3 rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\" '.$disabled_text.'>'. $object->{$field['name']}. '</textarea>'. \"\\n\";\n    \t// result\n    \treturn $html;\n\t}\n\n    /**\n     * Creates form input field for date fields.\n     *\n     * @access private\n     * @param mixed $field\n     * @param mixed $object\n     * @param string $disabled_text\n     * @param string $nameSuffix\n     * @return array\n     */\n    private function create_custom_field_input_input ($field, $object, $disabled_text, $nameSuffix = \"\") {\n        $html = array ();\n        // max length\n        $maxlength = 100;\n        if(strpos($field['type'],\"varchar\")!==false) {\n            $maxlength = str_replace(array(\"varchar\",\"(\",\")\"),\"\", $field['type']);\n        }\n        if(strpos($field['type'],\"int\")!==false) {\n            $maxlength = str_replace(array(\"int\",\"(\",\")\"),\"\", $field['type']);\n        }\n        // print\n\t\t$html[] = ' <input type=\"text\" class=\"form-control input-sm\" name=\"'. $field['nameNew'].$nameSuffix .'\" placeholder=\"'. $this->print_custom_field_name ($field['name']) .'\" value=\"'. $this->strip_xss($object->{$field['name']}). '\" size=\"30\" rel=\"tooltip\" data-placement=\"right\" maxlength=\"'.$maxlength.'\" title=\"'.$field['Comment'].'\" '.$disabled_text.'>'. \"\\n\";\n    \t// result\n    \treturn $html;\n\t}\n\n\t/**\n\t * Prints custom field\n\t *\n\t * @method print_custom_field\n\t *\n\t * @param  string $type\n\t * @param  string $value\n\t * @param  string $delimiter\n\t *\n\t * @return void\n\t */\n\tpublic function print_custom_field ($type, $value, $delimiter = false, $replacement = false) {\n\t\t// create links\n\t\t$value = $this->create_links ($value, $type);\n\n\t\t// delimiter ?\n\t\tif($delimiter !== false && $replacement !== false) {\n\t\t\t$value = str_replace($delimiter, $replacement, $value);\n\t\t}\n\n\t\t//booleans\n\t\tif($type==\"tinyint(1)\")\t{\n\t\t\tif($value == \"1\")\t\t\t{ print _(\"Yes\"); }\n\t\t\telseif(is_blank($value)) \t{ print \"/\"; }\n\t\t\telse\t\t\t\t\t\t{ print _(\"No\"); }\n\t\t}\n\t\t//text\n\t\telseif($type==\"text\") {\n\t\t\tif(!is_blank($value))\t{ print \"<i class='fa fa-gray fa-comment' rel='tooltip' data-container='body' data-html='true' title='\".str_replace(\"\\n\", \"<br>\", escape_input($value)).\"'>\"; }\n\t\t\telse\t\t\t\t\t{ print \"\"; }\n\t\t}\n\t\telse {\n\t\t\tprint $value;\n\t\t}\n\t}\n\n\t/**\n\t * Print custom field name, strip out custom_ prefix\n\t *\n\t * @method print_custom_field_name\n\t *\n\t * @param  string $name\n\t *\n\t * @return string\n\t */\n\tpublic function print_custom_field_name ($name) {\n\t\treturn strpos($name, \"custom_\")===0 ? substr($name, 7) : $name;\n\t}\n\n\t/**\n\t * Creates image link to rack.\n\t *\n\t * @method create_rack_link\n\t *\n\t * @param  bool|int $rackId\n\t * @param  bool|int $deviceId\n\t * @param  bool $is_back\n\t *\n\t * @return [type]\n\t */\n\tpublic function create_rack_link ($rackId = false, $deviceId = false, $is_back = false) {\n    \tif($rackId===false) {\n        \t    return false;\n    \t}\n    \telse {\n        \t//device ?\n        \tif ($deviceId!==false) {\n            \treturn $this->createURL ().BASE.\"app/tools/racks/draw_rack.php?rackId=$rackId&deviceId=$deviceId&is_back=$is_back\";\n        \t}\n        \telse {\n            \treturn $this->createURL ().BASE.\"app/tools/racks/draw_rack.php?rackId=$rackId&is_back=$is_back\";\n        \t}\n    \t}\n\t}\n\n\t/**\n\t * Show MAC address and vendor details\n\t *\n\t * @param string $mac\n\t * @return string\n\t */\n\tpublic function show_mac_and_vendor($mac) {\n\t\t// Check if MAC decoding is enabled\n\t\t$this->get_settings();\n\t\tif (is_object($this->settings) && $this->settings->decodeMAC) {\n\t\t\t$vendor = $this->get_mac_address_vendor_details($mac);\n\n\t\t\tif (!empty($vendor)) {\n\t\t\t\treturn  _(\"MAC\") . \": \" . escape_input($mac) . \"<hr>\" . _(\"Vendor\") . \": \" . escape_input($vendor);\n\t\t\t}\n\t\t}\n\n\t\treturn _(\"MAC\") . \": \" . escape_input($mac);\n\t}\n\n\t/**\n\t * Get MAC address vendor details\n\t *\n\t * https://www.macvendorlookup.com/vendormacs-xml-download\n\t *\n\t * @method get_mac_address_vendor\n\t * @param  string $mac\n\t * @param  string &$prefix\n\t * @return string\n\t */\n\tpublic function get_mac_address_vendor_details($mac, &$prefix=null) {\n\t\tif (strlen($mac) < 4 || !$this->validate_mac($mac)) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tif (empty($this->mac_address_vendors)) {\n\t\t\t// Generated from vendorMac.xml\n\t\t\t// Unique MAC address: 45344\n\t\t\t// Updated: 12 March 2022\n\t\t\t$data = file_get_contents(dirname(__FILE__) . \"/../vendormacs.json\");\n\t\t\t$this->mac_address_vendors = pf_json_decode($data, true);\n\t\t}\n\n\t\t// Find longest prefix match in $this->mac_address_vendors array (max 9)\n\t\t$search_mac = substr($this->reformat_mac_address($mac, 4), 0, 9);\n\n\t\twhile (!is_blank($search_mac)) {\n\t\t\tif (isset($this->mac_address_vendors[$search_mac])) {\n\t\t\t\t$prefix = implode(\":\", str_split(strtoupper($search_mac), 2));\n\t\t\t\treturn $this->mac_address_vendors[$search_mac];\n\t\t\t}\n\n\t\t\t$search_mac = substr($search_mac, 0, -1);\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Read user supplied permissions ($_POST) and calculate deltas from old_permissions\n\t *\n\t * @access public\n\t * @param  array $post_permissions\n\t * @param  array $old_permissions\n\t * @return array\n\t */\n\tpublic function get_permission_changes ($post_permissions, $old_permissions) {\n\t\t$new_permissions = array();\n\t\t$removed_permissions = array();\n\t\t$changed_permissions = array();\n\n\t\t# set new posted permissions\n\t\tforeach($post_permissions as $key=>$val) {\n\t\t\tif(substr($key, 0,5) == \"group\") {\n\t\t\t\tif($val != \"0\") $new_permissions[substr($key,5)] = $val;\n\t\t\t}\n\t\t}\n\n\t\t// calculate diff\n\t\tif(is_array($old_permissions)) {\n\t\t\tforeach ($old_permissions as $k1=>$p1) {\n\t\t\t\t// if there is not permisison in new that remove old\n\t\t\t\t// if change than save\n\t\t\t\tif (!array_key_exists($k1, $new_permissions)) {\n\t\t\t\t\t$removed_permissions[$k1] = 0;\n\t\t\t\t} elseif ($old_permissions[$k1]!==$new_permissions[$k1]) {\n\t\t\t\t\t$changed_permissions[$k1] = $new_permissions[$k1];\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$old_permissions = array();  // fix for adding\n\t\t}\n\t\t// add also new groups if available\n\t\tif(is_array($new_permissions)) {\n\t\t\tforeach ($new_permissions as $k1=>$p1) {\n\t\t\t\tif(!array_key_exists($k1, $old_permissions)) {\n\t\t\t\t\t$changed_permissions[$k1] = $new_permissions[$k1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn array($removed_permissions, $changed_permissions, $new_permissions);\n\t}\n\n\t/**\n\t * Parse subnet permissions to user readable format\n\t *\n\t * @access public\n\t * @param mixed $permissions\n\t * @return string\n\t */\n\tpublic function parse_permissions ($permissions) {\n\t\tswitch($permissions) {\n\t\t\tcase 0: \t$r = _(\"No access\");\tbreak;\n\t\t\tcase 1: \t$r = _(\"Read\");\t\t\tbreak;\n\t\t\tcase 2: \t$r = _(\"Write\");\t\tbreak;\n\t\t\tcase 3: \t$r = _(\"Admin\");\t\tbreak;\n\t\t\tdefault:\t$r = _(\"error\");\n\t\t}\n\t\treturn $r;\n\t}\n\n\n\n\n\n\n\t/**\n\t *\t@breadcrumbs functions\n\t * ------------------------\n\t */\n\n\t/**\n\t * print_breadcrumbs function.\n\t *\n\t * @access public\n\t * @param mixed $Section\n\t * @param mixed $Subnet\n\t * @param mixed $req\n\t * @param mixed $Address (default: null)\n\t * @return void\n\t */\n\tpublic function print_breadcrumbs ($Section, $Subnet, $req, $Address=null) {\n\t\t# subnets\n\t\tif($req['page'] == \"subnets\")\t\t{ $this->print_subnet_breadcrumbs ($Subnet, $req, $Address); }\n\t\t# folders\n\t\telseif($req['page'] == \"folder\")\t{ $this->print_folder_breadcrumbs ($Section, $Subnet, $req); }\n\t\t# tools\n\t\telseif ($req['page'] == \"tools\") \t{ $this->print_tools_breadcrumbs ($req); }\n\t}\n\n\t/**\n\t * Print address breadcrumbs\n\t *\n\t * @access private\n\t * @param mixed $Subnet\n\t * @param mixed $req\n\t * @param mixed $Address\n\t * @return void\n\t */\n\tprivate function print_subnet_breadcrumbs ($Subnet, $req, $Address) {\n\t\tif(isset($req['subnetId'])) {\n\t\t\t# get all parents\n\t\t\t$parents = $Subnet->fetch_parents_recursive ($req['subnetId']);\n\n\t\t\tprint \"<ul class='breadcrumb'>\";\n\t\t\t# remove root - 0\n\t\t\t//array_shift($parents);\n\n\t\t\t# section details\n\t\t\t$section = (array) $this->fetch_object (\"sections\", \"id\", $req['section']);\n\n\t\t\t# section name\n\t\t\tprint \"\t<li><a href='\".create_link(\"subnets\",$section['id']).\"'>$section[name]</a> <span class='divider'></span></li>\";\n\n\t\t\t# all parents\n\t\t\tforeach($parents as $parent) {\n\t\t\t\t$subnet = (array) $Subnet->fetch_subnet(\"id\",$parent);\n\t\t\t\tif($subnet['isFolder']==1) {\n\t\t\t\t\tprint \"\t<li><a href='\".create_link(\"folder\",$section['id'],$parent).\"'><i class='icon-folder-open icon-gray'></i> $subnet[description]</a> <span class='divider'></span></li>\";\n\t\t\t\t} else {\n\t\t\t\t\tprint \"\t<li><a href='\".create_link(\"subnets\",$section['id'],$parent).\"'>$subnet[description] ($subnet[ip]/$subnet[mask])</a> <span class='divider'></span></li>\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t# parent subnet\n\t\t\t$subnet = (array) $Subnet->fetch_subnet(\"id\",$req['subnetId']);\n\t\t\t# ip set\n\t\t\tif(isset($req['ipaddrid'])) {\n\t\t\t\t$ip = (array) $Address->fetch_address (\"id\", $req['ipaddrid']);\n\t\t\t\tprint \"\t<li><a href='\".create_link(\"subnets\",$section['id'],$subnet['id']).\"'>$subnet[description] ($subnet[ip]/$subnet[mask])</a> <span class='divider'></span></li>\";\n\t\t\t\tprint \"\t<li class='active'>$ip[ip]</li>\";\t\t\t//IP address\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprint \"\t<li class='active'>$subnet[description] ($subnet[ip]/$subnet[mask])</li>\";\t\t//active subnet\n\n\t\t\t}\n\t\t\tprint \"</ul>\";\n\t\t}\n\t}\n\n\t/**\n\t * Print folder breadcrumbs\n\t *\n\t * @access private\n\t * @param obj $Section\n\t * @param obj $Subnet\n\t * @param mixed $req\n\t * @return void\n\t */\n\tprivate function print_folder_breadcrumbs ($Section, $Subnet, $req) {\n\t\tif(isset($req['subnetId'])) {\n\t\t\t# get all parents\n\t\t\t$parents = $Subnet->fetch_parents_recursive ($req['subnetId']);\n\t\t\tprint \"<ul class='breadcrumb'>\";\n\t\t\t# remove root - 0\n\t\t\tarray_shift($parents);\n\n\t\t\t# section details\n\t\t\t$section = (array) $Section->fetch_section(null, $req['section']);\n\n\t\t\t# section name\n\t\t\tprint \"\t<li><a href='\".create_link(\"subnets\",$section['id']).\"'>$section[name]</a> <span class='divider'></span></li>\";\n\n\t\t\t# all parents\n\t\t\tforeach($parents as $parent) {\n\t\t\t\t$parent = (array) $parent;\n\t\t\t\t$subnet = (array) $Subnet->fetch_subnet(null,$parent[0]);\n\t\t\t\tif ($subnet['isFolder']==\"1\")\n\t\t\t\tprint \"\t<li><a href='\".create_link(\"folder\",$section['id'],$parent[0]).\"'><i class='icon-folder-open icon-gray'></i> $subnet[description]</a> <span class='divider'></span></li>\";\n\t\t\t\telse\n\t\t\t\tprint \"\t<li><a href='\".create_link(\"subnets\",$section['id'],$parent[0]).\"'><i class='icon-folder-open icon-gray'></i> $subnet[description]</a> <span class='divider'></span></li>\";\n\t\t\t}\n\t\t\t# parent subnet\n\t\t\t$subnet = (array) $Subnet->fetch_subnet(null,$req['subnetId']);\n\t\t\tprint \"\t<li>$subnet[description]</li>\";\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# active subnet\n\t\t\tprint \"</ul>\";\n\t\t}\n\t}\n\n\t/**\n\t * Prints tools breadcrumbs\n\t *\n\t * @access public\n\t * @param mixed $req\n\t * @return void\n\t */\n\tprivate function print_tools_breadcrumbs ($req) {\n\t\tprint \"<ul class='breadcrumb'>\";\n\t\tprint \"\t<li><a href='\".create_link(\"tools\").\"'>\"._('Tools').\"</a> <span class='divider'></span></li>\";\n\t\tif(!isset($req['subnetId'])) {\n\t\t    print \"\t<li class='active'>$req[section]</li>\";\n\t\t}\n\t\telse {\n\t\t    print \"\t<li class='active'><a href='\".create_link(\"tools\", $req['section']).\"'>$req[section]</a> <span class='divider'></span></li>\";\n\n\t\t    # pstn\n\t\t    if ($_GET['section']==\"pstn-prefixes\") {\n    \t\t\t# get all parents\n    \t\t\t$Tools = new Tools ($this->Database);\n    \t\t\t$parents = $Tools->fetch_prefix_parents_recursive ($req['subnetId']);\n    \t\t\t# all parents\n    \t\t\tforeach($parents as $parent) {\n    \t\t\t\t$prefix = $this->fetch_object(\"pstnPrefixes\", \"id\", $parent[0]);\n    \t\t\t\tprint \"\t<li><a href='\".create_link(\"tools\",$req['section'],$parent[0]).\"'><i class='icon-folder-open icon-gray'></i> $prefix->name</a> <span class='divider'></span></li>\";\n    \t\t\t}\n\n\t\t    \t$prefix = $this->fetch_object(\"pstnPrefixes\", \"id\", $req['subnetId']);\n\t\t    \tprint \"\t<li class='active'>$prefix->name</li>\";\n\t\t\t}\n\t\t}\n\t\tprint \"</ul>\";\n\t}\n\n\t/**\n\t * Print documentation link\n\t *\n\t * @param string $doc  document path/file\n\t * @return void\n\t */\n\tpublic function print_doc_link($doc) {\n\t\tprint \"<a style='float:right' target=_ href='\".create_link(\"tools/documentation/$doc\").\"'>\"._(\"Documentation\").\" <i class='fa fa-book'></i></a>\";\n\t}\n\n\t/**\n\t * Prints site title\n\t *\n\t * @access public\n\t * @param mixed $get\n\t * @return string\n\t */\n\tpublic function get_site_title ($get) {\n    \t// remove html tags\n    \t$get = $this->strip_input_tags ($get);\n    \t// init\n    \t$title = array ();\n    \t$title[] = $this->settings->siteTitle;\n\n    \t// page\n    \tif (isset($get['page'])) {\n        \t// dashboard\n        \tif ($get['page']==\"dashboard\") {\n            \treturn $this->settings->siteTitle.\" \"._(\"Dashboard\");\n        \t}\n        \t// install, upgrade\n        \telseif ($get['page']==\"temp_share\" || $get['page']==\"request_ip\" || $get['page']==\"opensearch\") {\n            \t$title[] = ucwords(escape_input($get['page']));\n        \t}\n        \t// sections, subnets\n        \telseif ($get['page']==\"subnets\" || $get['page']==\"folder\") {\n            \t// subnets\n            \t$title[] = _(\"Subnets\");\n\n            \t// section\n            \tif (isset($get['section'])) {\n                 \t$se = $this->fetch_object (\"sections\", \"id\", escape_input($get['section']));\n                \tif($se!==false) {\n                    \t$title[] = $se->name;\n                \t}\n            \t}\n            \t// subnet\n            \tif (isset($get['subnetId'])) {\n                 \t$sn = $this->fetch_object (\"subnets\", \"id\", escape_input($get['subnetId']));\n                \tif($sn!==false) {\n                    \tif($sn->isFolder) {\n                        \t$title[] = $sn->description;\n                    \t}\n                    \telse {\n                        \t$sn->description = !is_blank($sn->description) ? \" (\".$sn->description.\")\" : \"\";\n                        \t$title[] = $this->transform_address($sn->subnet, \"dotted\").\"/\".$sn->mask.$sn->description;\n                        }\n                \t}\n            \t}\n            \t// ip address\n            \tif (isset($get['ipaddrid'])) {\n                    $ip = $this->fetch_object (\"ipaddresses\", \"id\", escape_input($get['ipaddrid']));\n                    if($ip!==false) {\n                        $title[] = $this->transform_address($ip->ip_addr, \"dotted\");\n                    }\n            \t}\n        \t}\n        \t// tools, admin\n        \telseif ($get['page']==\"tools\" || $get['page']==\"administration\") {\n            \t$title[] = ucwords(escape_input($get['page']));\n            \t// subpage\n            \tif (isset($get['section'])) {\n                \t$title[] = ucwords(escape_input($get['section']));\n            \t}\n            \tif (isset($get['subnetId'])) {\n                \t// vland domain\n                \tif($get['section']==\"vlan\") {\n                     \t$se = $this->fetch_object (\"vlanDomains\", \"id\", escape_input($get['subnetId']));\n                    \tif($se!==false) {\n                        \t$title[] = $se->name.\" domain\";\n                    \t}\n                \t}\n                \telse {\n                    \t$title[] = ucwords(escape_input($get['subnetId']));\n                    }\n            \t}\n        \t}\n        \telse {\n            \t$title[] = ucwords(escape_input($get['page']));\n            }\n    \t}\n        // return title\n    \treturn implode(\" / \", $title);\n\t}\n\n\n\n\n\t/**\n\t * Print action wrapper\n\t *\n\t * Provided items can have following items:\n\t *     type: link, divider, header\n\t *     text: text to print\n\t *     href: ''\n\t *     class: classes to be added to item\n\t *     dataparams: params to be added (e.g. data-deviceid='0')\n\t *     icon: name for icon\n\t *     visible: where it should be visible\n\t *\n\t *\n\t * @method print_actions\n\t * @param  string $type\n\t * @param  array $items [array of items]\n\t * @param  bool $left_align\n\t * @param  bool $print_text\n\t * @return [type]\n\t */\n\tpublic function print_actions ($compress = \"1\", $items = [], $left_align = false, $print_text = false) {\n\t    if (sizeof($items)>0) {\n\t        return $compress==\"1\" ? $this->print_actions_dropdown($items, $left_align, $print_text) : $this->print_actions_buttons ($items);\n\t    }\n\t    else {\n\t        return \"\";\n\t    }\n\t}\n\n\t/**\n\t * Prints action dropdown\n\t *\n\t * @method print_actions_buttons\n\t * @param  array $items [array of items]\n\t * @param  bool $left_align\n\t * @param  bool $print_text\n\t * @return string\n\t */\n\tprivate function print_actions_dropdown ($items = [], $left_align = false, $print_text = false) {\n\t    // init\n\t    $html   = [];\n\t    // alignment\n\t    $alignment = $left_align ? \"dropdown-menu-left\" : \"dropdown-menu-right\";\n\t    // text\n\t    $action_text = $print_text ? \" <i class='fa fa-cogs'></i> \"._(\"Actions\").\" \" : \" <i class='fa fa-cogs'></i> \";\n\n\t    $html[] = \"<div class='dropdown'>\";\n\t    $html[] = \"  <button class='btn btn-xs btn-default dropdown-toggle ' type='button' id='dropdownMenu' data-toggle='dropdown' aria-haspopup='true' aria-expanded='true' rel='tooltip' title='\"._(\"Actions\").\"'> \".$action_text.\" <span class='caret'></span></button>\";\n\t    $html[] = \"  <ul class='dropdown-menu $alignment' aria-labelledby='dropdownMenu'>\";\n\n\t    // loop items\n\t    foreach ($items as $i) {\n\t\t\t$i = array_merge(['class'=>null, 'dataparams'=>null], $i);\n\n\t        // visible\n\t        if (isset($i['visible'])) {\n\t            if ($i['visible']!=\"dropdown\") {\n\t                continue;\n\t            }\n\t        }\n\t        // title\n\t        if ($i['type']==\"header\") {\n\t            $html[] = \"   <li class='dropdown-header'>\".($i['text']).\"</li>\";\n\n\t        }\n\t        // separator\n\t        elseif ($i['type']==\"divider\") {\n\t            $html[] = \"   <li role='separator' class='divider'></li>\";\n\t        }\n\t        // item\n\t        else {\n\t            $html[] = \"   <li><a class='$i[class]' href='$i[href]' $i[dataparams]><i class='fa fa-$i[icon]'></i> \".$i['text'].\"</a></li>\";\n\t        }\n\t    }\n\t    // remove last divider if present\n\t    if (strpos(end($html),\"divider\")!==false) {\n\t        array_pop($html);\n\t    }\n\t    // end\n\t    $html[] = \" </ul>\";\n\t    $html[] = \"</div>\";\n\t    // result\n\t    return implode(\"\\n\", $html);\n\t}\n\n\n\t/**\n\t * Prints icons btn-group\n\t *\n\t * @method print_actions_buttons\n\t * @param  array $items [array of items]\n\t * @return string\n\t */\n\tprivate function print_actions_buttons ($items = []) {\n\t    // init\n\t    $html   = [];\n\t    // structure\n\t    $html[] = \" <div class='btn-group'>\";\n\t    // irems\n\t    foreach ($items as $i) {\n\t        // visible\n\t        if (isset($i['visible'])) {\n\t            if ($i['visible']!=\"buttons\") {\n\t                continue;\n\t            }\n\t        }\n\t        // save only links\n\t        if($i['type']==\"link\") {\n\t            $html[] = \" <a href='$i[href]' class='btn btn-xs btn-default $i[class]' $i[dataparams] rel='tooltip' title='\".$i['text'].\"'><i class='fa fa-$i[icon]'></i></a>\";\n\t        }\n\t    }\n\t    // end\n\t    $html[] =  \" </div>\";\n\t    // result\n\t    return implode(\"\\n\", $html);\n\t}\n}\n", "== 1.6.0\n\n    Enhancements, changes:\n    ----------------------------\n    + php8.1 compatibility (php8.x support is work-in-progress);\n    + MySQL 5.5.3+ is now required (support for utf8mb4);\n\n    Security Fixes:\n    ----------------------------\n    + SQL injection in custom field enum/set types;\n    + Directory traversal possible in RIPE query;\n    + XSS (reflected) in 'bw-calulator-result.php';\n    + XSS (reflected) by invalid email address response;\n    + XSS (reflected) by /app/tools/subnet-masks/popup.php (#3738);\n    + XSS (stored) in user widget settings;\n    + XSS and LDAP injection in ad-search-result.php;\n    + XSS and LDAP injection in ad-search-group-result.php;\n    + Restrict find_full_subnets.php to CLI;\n    + Ensure confidentiality of database password;\n\n== 1.5.0\n\n    New features:\n    ------------\n    + Mark subnet as isPool to allocate network and broadcast addresses;\n    + Optionally hide section subnet menus;\n    + L2 Domains user permissions;\n    + Add scanPingType==\"none\" option to disable scanning;\n    + Custom fields on IP request forms (#2956);\n    + Added subnet free space map for each possible subnet mask;\n    + Added Vaults (Certificate andf password storing);\n    + Added Tools->Duplicate subnets & IP page;\n    + Added config.php offline_mode to disable server-side Internet lookups (#3462);\n    + Added MAC vendor lookup widget;\n\n    Enhancements, changes:\n    ----------------------------\n    + php7.4 compatibility;\n    + SameSite attribute enabled for site cookies;\n    + SAML2\n        + php-saml updated to 3.4.1 (#3055);\n        + Removal of php-mcrypt dependancy;\n        + Drop support for idpcertfingerprint;\n        + MAP_SAML_USER and SAML_USERNAME config.php configuration moved to db;\n        + php-saml protocol debugging;\n        + Support for signed assertions;\n        + SAML usernames can be extracted from assertion attributes (#2948);\n        + JIT auto-provisioning of accounts (#3389);\n    + Selectable mask for number of subnets/hosts in subnet masks;\n    + Switch from Google Maps to OpenStreeMap and Nominatim;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed upgrade queries issues from 1.3.x to 1.4+ (#3130);\n    + Fixed boolean printout in footer (#2625);\n    + Fixed BGP Admin isn't working (#2631);\n    + do not show statistics in dashboard widget for disabled modules (#2602);\n    + MySQL 8.0 compatibility. (#2646,#2239,#3036);\n    + MariaDB Galera Cluster compatibility (#2498,#3413);\n    + Permit non-numeric postcodes for customers (#2393);\n    + Bandwidth calculator - 400 Bad Request (#1807,#2648);\n    + Table layout not aligned (#2656,#3105,#3113);\n    + Improve scanning requirement checks (#1183);\n    + Date picker hidden (#2673);\n    + PDNS Add/Edit DNS record not working for normal users (#2686);\n    + Unable to save settings with link addresses = text custom field (#2702);\n    + Kea MAC address display issue (#2704);\n    + Returned custom fields to devices table (#2572);\n    + Invalid scan agent key warning;\n    + Subnet filter issue when IP contains 0 octet. (#2748);\n    + Add VLAN button not working (#2741);\n    + Incorrect subnet links in /tools/vrf/ view. (#2774);\n    + Location data missing in exports. (#2833);\n    + Check mysqldump path when exporting database;\n    + Current rack position missing when editing a device. (#2545);\n    + Permit colon in firewall zone interface names (#2737);\n    + Fixed PowerDNS txt SPF editing (#1641);\n    + Blank 'MAC' on SNMP-ARP and SNMP-MAC scans (#2911);\n    + Incorrect network/broadcast calculation for IPv6 (#2879);\n    + Increase allowed email and password lengths (#3021);\n    + Wrong unit location for dual-sided racks (#3086);\n    + Linked ip_addr shows integer notation (#3100);\n    + Invalid scan type () error (#2785);\n    + Invalid CSRF cookie editing rack items (#2556);\n    + FPing discovery marks all addresses as alive (#2888);\n    + Subnet usage calculation updated for nested subnets;\n    + SNMP, number of discovered hosts exceed maximum warning (#3279);\n    + Exclude IPv6 from Ping and Discovery scans (#3354);\n    + Fix for SAML/2FA/login redirections (#3492, #3435, #3517);\n    + php_sessions table doesn't exist error when upgrading (#3417);\n    + Changelog data too long for column errors (#3376,#3398);\n    + RFC 6265 compliant cookies (#3452);\n    + Require unique subnets not working as intended (#3529);\n    + API:\n        + Fixed /user/ calls for SSL with app code (static app code);\n        + Address IP field not displayed when using filter_by (#2934);\n        + Addresses first_free & Subnets first/last_subnet thread safety (#2960);\n\n    Security Fixes:\n    ----------------------------\n    + SQL injections processing `tableName` (#2738);\n    + SQL injections processing `ftype` (#2751);\n    + All circuits map, PHP object injection (#2937);\n    + Upgraded jQuery to 3.5.1 (#3119);\n    + Stored XSS in instructions widgets (#3025, #3360);\n    + PHP session ID fixation (#3342);\n    + XSS (reflected) in IP calculator (#3351);\n    + XSS in pass-change/result.php (#3373);\n    + SQL injection in edit-bgp-mapping-search.php;\n    + Stored XSS in the \"Site title\" parameter;\n    + XSS while uploading CVS files;\n    + XSS (reflected) in 'find subnets';\n    + Incorrect privilege assignments (#3506);\n    + XXS (reflected) in ripe-arin-query;\n    + XSS (reflected) in import previews;\n\n    Translations:\n    ----------------------------\n    + Update Traditional Chinese support to version 1.5 (#2658);\n    + Update Simplified Chinese Translation (#2725);\n    + Italian (it_IT) translation added (#2813);\n    + Updated German translation (#2970, #3065);\n    + Updated Russian translation (#3028, #3367);\n\n== 1.4.0\n\n    New features:\n    ------------\n    + Configurable password policy;\n    + Sessions can be now stored in database (#516);\n    + Two-factor authentication - otp (Google Authenticator);\n    + Customers module (#694);\n    + Routing module (BGP) (#2135);\n    + Search for free subnet inside whole section;\n\n    Enhancements, changes:\n    ----------------------------\n    + Circuits enhancements (Virtual Circuits);\n    + Dropped support for 32bit systems;\n    + PHP 5.4 is now required;\n    + Added compressed actions dropdown;\n    + SNMP module no longer requires MIB files;\n    + Performance enhancements running under Azure/Amazon;\n    + Added option to disable user (#1327);\n    + Added policy NAT option;\n    + Added custom NAT fields;\n    + Rack module enhancements (#1325):\n        + Dynamic rack sizes;\n        + Top-down / Bottom-up racks;\n        + Custom rack devices independent of devices (power, patch panel);\n    + Customized user permissions for modules:\n        + VLAN module;\n        + VRF module;\n        + PowerDNS module;\n        + Circuits module;\n        + Customers module;\n        + Devices module;\n        + Rack module;\n        + NAT module;\n        + PSTN module;\n        + Locations module;\n    + API:\n        + New API security type - SSL with app code (static app code);\n        + New config.php option $api_allow_unsafe to allow non-SSL API queries;\n        + Added last access field to api;\n        + Add Mac Search for Addresses controller (#2005);\n        + New overlapping API call;\n        + New global API parameter filter_match = full,partial,regex;\n        + Add Tools API customers submodule;\n        + Fix filtered results to always return data as array (#2558);\n    + Widgets:\n        + New user instruction widget (#2383);\n\n    Translations:\n    ----------------------------\n    + Japanese (ja_JP) translation added;\n    + Traditional Chinese (zh_TW) translation added;\n\n    Bugfixes:\n    ----------------------------\n    + Fix appended \" U\" in Rack description (#2046);\n    + Fix Bandwidth calculator - 400 Bad Request. (#1807);\n    + Fix bad DNS reverse zone for /23 subnet (#666);\n    + Fix Add missing standard field (#2153);\n    + Fix Consistency of VARCHAR Size on 'owner' column across tables (#2136);\n    + Fix Subnet details - Filter button missing when compressed range is used (#2353);\n    + Fix slow page load times with linked addresses (#2324);\n    + Fix \" - is required\" error when adding IPs with an empty IP filter set (#2334);\n    + Fix column 'masterSubnetId' cannot be null error when adding subnets (#1977);\n    + Fix logical circuits add/delete errors (#2381);\n    + Fix adding new VLANs to an empty L2Domain (#2400);\n    + Fix Nested child subnets with \"na\" permissions visible (#2223);\n    + Fix translations containing apostrophes break functionality (#2504);\n    + Set requestedAuthnContext to false for SAML (#2457);\n    + API:\n        + Fix inconsistent API success value returned (#2045);\n        + Fix filter_by functionality (#2392);\n        + Fix PATCH functionality (#2470, #2481);\n\n    Security Fixes:\n    ----------------------------\n    + Hide SNMP community (#2197);\n    + Hide LDAP/AD/Radius username / password and secret from logs and syslog (#2006);\n    + XSS in phpipamredirect cookie (#2338);\n    + XSS in print-user.php, CSRF in user-edit.php (#2326);\n    + Possible SQL injection in nat/item-add-submit.php (#2344);\n    + Fixed possible file inclusion in editing authentication methods;\n    + XSS in subnet-scan-telnet.php, CSRF in subnet-scan-execute.php (#2327);\n\n== 1.3.2\n\n    Enhancements, changes:\n    ----------------------------\n    + Dark theme added;\n    + Full php7.2 compatibility;\n    + url_rewrite has changed, please use new rewrite scheme (https://phpipam.net/news/new_rewrite_scheme/);\n    + Search for matching subnet in all VRFs feature enabled when importing addresses;\n    + Added new config option to show custom fields separated from standard fields when editing IP address;\n    + Added Required fields subpage to define IP address fields that must be filled in;\n    + Performance + bug fixes (#1660, #1657);\n    + MasterSubnet dropdown list is dynamically generated via AJAX call;\n    + Bandwidth calculator;\n    + Support 8U rack sizes. (#1891);\n    + API:\n        + New last_subnet API calls (#1655);\n\n    Translations:\n    ----------------------------\n    + German translation updated to verson 1.3.1;\n    + French translations updated. (#1881);\n\n    Bugfixes:\n    ----------------------------\n    + Fixed uncaught error if vlan number exceeds max permitted (#1455);\n    + Fixed Illegal string offset 'dns_name' in pingCheck.php errors (#1461);\n    + Performance fix for subnet_dropdown_print_available (#1562);\n    + Fixed logo updater for apache v2.4 (#1582);\n    + Fixed section names containing spaces are not included in exports (#1566);\n    + Allow DNS wildcard records (#1571);\n    + Fixed slow mac address vendor decoding for subnet detail view (#1658);\n    + Performance fix for detecting overlapping subnets. (#1052, #1426, #1533);\n    + Performance fix for slow mac address vendor decoding (#1658);\n    + Performance fix for subnet API first_subnet & all_subnets calls;\n    + Performance fix for delegating subnet permissions;\n    + Convert to UTF-8 encoding on import/export to preserve dialectics (#1659, #1700, #1728);\n    + Importing IPs loose Mac Addresses (#1607);\n    + Section names containing spaces are not included in exports. (#1566);\n    + Bug with section and dashboard (#1593);\n    + Fixed improper contents in plain text part of notification e-mails (#1707);\n    + Reduce size of email notifications (#1643);\n    + PHP 5.3 compatibility fixes (#1594, #1730);\n    + PHP 7.2 compatibility fixes (#1683, #1714);\n    + Fixed notification e-mails contain a broken link. (#1708);\n    + Allow dots to be used in domain names. (#1747);\n    + Use multi-byte compatible functions when shortening text. (#1753);\n    + Scan subnet reports/selects invalid php path. (#1757);\n    + Small code refactoring (#1699);\n    + Rack device start position overwritten. (#1545);\n    + Sections with folders returns no subnets using API. (#1883);\n    + Add custom_ prefix to Prefix controller custom fields. (#1836);\n    + Non-Admins missing the button to Add circuit. (#1902);\n    + Wrong field name of deviceTypes table when checking device type. (#1910);\n    + SNMPv3 improvements;\n    + Misc IPv6 fixes;\n\n    Security Fixes:\n    ----------------------------\n    + Code injection in Name field. (#1667);\n    + XSS (reflected) in SubnetID param. (#1702);\n    + CSRF enables open mail relay. (#1703);\n    + Reflected XSS requiring user interaction on search. (#1705);\n    + XSS reflected via CSRF in preview.php. (#1706);\n    + Reflected XSS via CSV upload. (#1742);\n    + Reflected XSS on 'mac' parameter. (#1903);\n\n== 1.3.1\n\n    New features:\n    ------------\n    + Circuits module (circuits, providers, map, ...) (#731);\n\n    Enhancements, changes:\n    ----------------------------\n    + Racks:\n        + Automatic location assignment when device added to rack (#1230);\n        + Rack map showing map of all racks in location;\n        + Rack back side;\n    + Compact menu layout (per-user setting, showing only icons);\n    + Network to network static nat;\n    + Selectable logo size (from config.php) (#952);\n    + Added default option for permissions propagations (#1351);\n    + API:\n        + Added Circuits controller;\n        + Encrypyted requests can now also be form-encoded (#1191);\n        + Introduce mcrypt AES compatibility (#1516);\n        + Fixed field ip not displayed when filters applied (#1529);\n    + New resolve hostnames option for subnet (#1222):\n        + Updates hostnames via pingCheck.php script (if parameter set for subnet);\n        + Updates hostnames via resolveIPaddresses.php script (if parameter set for subnet);\n        + On-the-fly empty hostname update if resolved (if parameter set for subnet and enabled globally);\n        + Added this infor to tools > scanned networks;\n    + Added custom_ prefix to custom field names to avoid duplication with custom fields (#1387);\n    + Added option to hide IP requests for unauthenticated users on login page (#1394);\n    + Performance optimizations for locations and subnet usage calculation;\n    + Added user groups custom fields;\n\n    Translations:\n    ----------------------------\n    + French translation updated to verson 1.3;\n    + German translation updated to verson 1.3;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed RACK images not displayed if not root location (#1204);\n    + Fixed import gateway ip (#1240);\n    + Fixed JSON_UNESCAPED_UNICODE for PHP 5.3 (#1135, #1245);\n    + Rename class Thread to PingThread to avoid naming conflict with pthreads Thread class (#1254);\n    + Fixed custom fields integer on subnet (#1266);\n    + Fixed Import Ip-adress doesnt update location (#1284);\n    + Fixed json_error for logo upload (#1256);\n    + Fixed CSRF error when moving orphaned addresses (#1303);\n    + Fixed VRF fetching via API by Id;\n    + Fixed map issues when quotes are in name/description (#1384);\n    + Fixed item not removed from NAT when deleted (#1378);\n    + Fixed Error when error_reporting = E_ALL about strict standards when importing IP addresses (#1372);\n    + Fixed Apostrophe errors in text custom fields (#1375);\n    + Fixed API error when creating address under folder (#1507);\n    + Fixed SNMPv3 (#1119);\n\n    Security Fixes:\n    ----------------------------\n    + Fixed XSS issues (#1403, #1521, #1500);\n\n== 1.3.0\n\n    New features:\n    ------------\n    + Multicast module (RFC1112, RFC2464) with IP to MAC mapping and multicast networks overview;\n    + Threshold module for subnets;\n    + Racks module (Rack drawing) for devices;\n    + Address linking by selected field;\n    + Custom logo for site and mails;\n    + PSTN number management module;\n    + SNMP module:\n        + Subnets discovery from route table (all subnets, nested subnets, add new subnet);\n        + Hosts discovery scans via ARP check/interface check;\n        + Hosts discovery scans via ARP + MAC address check (detects interface);\n        + VLAN discovery;\n        + VRF discovery;\n        + Status update scans via ARP check;\n    + NAT module\n        + Source / static / destination NAT;\n        + Linking subnet to NAT\n        + Show bindings under tools and next to IP address / subnet\n    + Locations module\n        + Map devices / racks / subnets to location;\n        + Google maps integration;\n    + SAML2 authentication (SSO)\n\n    Enhancements, changes:\n    ----------------------------\n    + Folders can now contain addresses;\n    + API:\n        - Api v1 removed;\n        + If subnet gateway defined gatewayId is returned in subnet details;\n        + Automatically added nameservers to subnet results;\n        + Added subnet usage result for each subnet in section;\n        + Added custom fields for all controllers;\n        + New subnets automatically get parent permissions;\n        + Added IP calculation to subnet;\n        + Changed all not_found when searching objects to 404 and all invalid parameters to 409 (conflict);\n        + If new item is created id will be available in response field \u201cid\u201d;\n        + New parameter $time_response in api/index.php that will return execution time in field \u201ctime\";\n        + Extensive first_free subnet calls search speedup;\n        + POST transaction locking;\n        + All first_free and first_address responses are now \"data\" instead of \"ip\" and \"subnet\" for consistency;\n        + Subnet splitting now copies over custom fields values by default (user custom_fields=no to revert);\n        + Added API option to nest custom_fields to assure correct structure;\n        + Added option to show/hide links in api by default for each app;\n        + Changed API http response codes;\n        + New methods:\n            + users:\n                GET    /user/expires/                         // returns token expiration date\n                GET    /user/token-expires/                   // returns token expiration date\n                GET    /user/users/                           // returns all users (rwa app permissions required)\n                GET    /user/admins/                          // returns all admin users (rwa app permissions required)\n            + addresses:\n                GET    /addresses/first_free/{subnetId}/      // returns first available address (subnetId can be provided with parameters)\n                GET    /addresses/{ip}/{subnetId}/            // returns IP address from subnet\n                GET    /addresses/search/{hostname}/          // Will search addresses by hostname\n                DELETE /addresses/{ip}/{subnetId}/            // deletes IP address from subnet\n                POST   /addresses/first_free/{subnetId}/      // will search for first free address in subnet, creating new address\n            + subnets:\n                GET    /subnets/{id}/addresses/{ip}/          // returns IP address from subnet\n                GET    /subnets/{id}/first_free/              // returns first free address in subnet\n                GET    /subnets/{id}/first_subnet/{mask}/     // returns first available subnets with specified mask\n                GET    /subnets/{id}/all_subnets/{mask}/      // returns all available subnets with specified mask\n                POST   /subnets/{id}/first_subnet/{mask}/     // creates first free subnet under master with specified mask\n                DELETE /subnets/{id}/permissions/             // removes permissions\n                PATCH  /subnets/{id}/permissions/             // sets subnet permissions (?grouname1=ro&groupname2=3&43=1)\n        + New controller Prefix;\n        + New controller Devices;\n        + New subcontrollers:\n            + /tools/nat/\n            + /tools/racks/\n            + /tools/locations/\n    + Widgets:\n        + New threshold widget;\n        + New inactive hosts widget;\n        + New Locations widget;\n    + PowerDNS:\n        + Default domain for PTR records (if hostname is not set);\n        + When removing IP address additional option that removes all associated PDNS records (ip and hostname);\n    + Permit normal users to manage VLANs / VRFs;\n    + Inactive (offline) hosts tools page;\n    + MAC address normalization;\n    + jQuery tables;\n    + Permission delegation now only delegates changes not whole permission set;\n    + Users with RWA permission can manage IP requests and receive IP request mails + changelog mails for subnet;\n    + IPv4 subnet link to IPv6 for dual-stack info;\n    + Removed inacessible DNS servers if timeout to prevent page load timeouts;\n    + Added option to only show supernets to limit pageload [#844 #816 #736];\n    + Added last scan info to subnet details;\n    + Added option to update address tags when address state change occurs (pingCheck) [#840];\n    + Added mantaneance mode;\n    + Added inactive addresses removal script;\n    + Subnet overlapping now checked also inside folders to prevernt duplicates;\n    + Subnet overlapping now checked also between sections if VRF defined;\n    + Added new settings directive that requires unique subnets accross sections;\n    + Added index check in verify database to detect and fix possible missing DB indexes;\n    + Added MAC address vendor display option;\n\n    Bugfixes:\n    ----------------------------\n    + PowerDNS regenerate PTR records now only updates current subnet (before whole zone);\n    + Fixed visual bug on 32-bit systems;\n    + Normal users with RWA permissions can scan subnets;\n    + Changed default timestamp from 0000-00-00 00:00:00 to 1970-01-01 00:00:01 to avoid SQL install errors if strict mode;\n    + Fixed https access on non-standard ports;\n    + Extended username to 255 chars for LDAP logins;\n    + Fixed search export invalid encoding and data may have been lost XLS file error;\n    + Fixed invalid character encoding in API responses;\n    + PowerDNS records cannot be created on slave zone;\n    + Fixed subnet resizing bug if subnet contained slaves;\n    + Added separate CSRF cookies for each address/subnet/pstn object;\n    + Deleted items are now shown and searchable from changelog;\n\n== 1.20.1\n\n    Translations:\n    ----------------------------\n    + French translation updated to verson 1.2;\n    + German translation updated to verson 1.2;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed upgrade bug that selected invalid auth method for AD/LDAP users;\n    + Fixed LDAP problems after 1.2 upgrade;\n    + Fixed PowerDNS Slave with multiple masters delimiter error;\n    + Fixed PowerDNS PTR records not being updated automatically;\n    + Fixed csrf cookie bug when editing folder;\n    + Fixed csrf cookie bug when truncationg subnet;\n    + Fixed invalid code for API crypt method;\n    + Fixed strange headings font display in Firefox;\n    + Fixed invalid proxy settings in config.dist.php;\n    + Fixed search same hostnames in db link form address table;\n    + Fixed import subnet bug caused by fw object;\n    + Fixed Subnet Import (Preview button > no action);\n\n== 1.20\n\n    New features:\n    ------------\n    + Added multiple simultaneous authentication methods (Apache, AD, LDAP, Radius, NetIQ);\n    + Added fping scanning support;\n    + Added selectable scanning type (ping/pear/fping);\n    + Added L2 domains;\n    + Added option to define address as default GW for subnet;\n    + Added customizable address tags with compressed option;\n    + Added temporary subnet / address shares;\n    + Added quick subnet masks;\n    + Added nameserver sets per subnets (jonashauge);\n    + Added optional syslog as log location;\n    + REST API:\n        + documentation: http://phpipam.net/api-documentation/\n        + API v2, old v1 support added\n        + Complete rewrite of all API calls;\n        + New security models (crypt, ssl, none);\n        + Support for custom fields;\n        + JSON / XML output\n        + Full read/write controllers (Sections, Subnets/Folders, Addresses, Vlans, Vrfs);\n    + PowerDNS integration:\n        + Automatic reverse records creation (PTR) - IPv4 and IPv6;\n        + Automatic SOA, NS record creation;\n        + DNS domain management;\n    + Added Scan agents to scan subnets remotely;\n    + Added firewall zone mappings and module;\n    + Added per-subnet DNS resolvers;\n    + Added option to mark subnet as utilized (full);\n\n    Enhancements:\n    ----------------------------\n    + All tables are now InnoDB by default;\n    + Upgraded jQuery to 2.1.3;\n    + All functions rewritten to classes/methods;\n    + Parametized all SQL queries, moved from MySQLI to PDO;\n    + Added VLAN/VRF to search and to search results export;\n    + Redesigned admin and tools menu;\n    + Added scanned/discovered subnets to tools for faster overview;\n    + Per-user display settings;\n    + New widget - tools shortcuts;\n    + New widget - IP calculator;\n    + New widget - request IP address;\n    + Clickable links for subnet fields;\n    + Custom VRF fields;\n    + Subnets can be now linked to devices;\n    + Import/export enhancements;\n    + Fast user switching for admins to impersonate user;\n    + Opened folders and subnets in tree menu are saved on page reload;\n    + RWA users can now process IP requests;\n    + Added auto-suggest for possible slave subnets;\n    + SSL option for MySQL connections;\n    + Enum custom field support;\n    + Added password reset script;\n    + Set sections to display VRF in;\n\n    Security Fixes:\n    ----------------------------\n    + Parametized all MySQL querries;\n    + Fixed plainpass being logged on user update;\n    + Fixed XSS exploit on /error/;\n    + Added CSRF protection to forms;\n\n    Translations:\n    ----------------------------\n    + Added Czech translation;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed bug with SSL/TLS smtp servers;\n    + Fixed visual subnet display issues on 32bit systems;\n    + Fixed IPv6 split subnets bug;\n    + Fixed /31 ping bug scanning out of boundaries;\n    + Fixed nested broadcast not counted to used percentage;\n    + Fixed invalid redirect after timeout;\n    + Fixed discovery script index overridden;\n    + Fixed dashboard graphs links to subnets;\n    + Fixed Invalid ID on subnet scan of large subnets;\n\n== 1.1.010\n\n    Bugfixes:\n    ----------------------------\n    + Fixed login fails with LDAP when escape characters are in password;\n    + Fixed login not working with spaces in password for AD login;\n    + Fixed Ivalid action when adding vlans from subnet popup menu;\n    + Fixed custom fields not appearing properly on IP request editing;\n    + Fixed Invalid ID error for IP address details on sorting;\n    + Fixed warnings if no VLAN search results are present;\n    + Fixed test mail not sending;\n    + Fixed unable to login if $phpsessname not defined;\n    + Fixed unable to login after upgrade;\n\n== 1.1\n\n    Enhancements:\n    ----------------------------\n    + Caching of SQL results to avoid multiple queries;\n    + Reduced number of DB queries;\n    + Added selected mail notifications to admins to be notified on IP/subnet change;\n    + Added new subnetId index to ipaddresses table that significantly improves network loading;\n    + Now using only 1 network connection towards MySQL server;\n    + Updated pagination;\n    + mod_rewrite no longer required, selectable URL structure under settings;\n    + Added option not to display free ranges;\n    + Added option to set maximum VLAN number;\n    + Selectable custom fields to be visible/hidden in tables view and updated device/VLAN view;\n    + Added additional confirmation before section, subnet, folder and IP address deletion;\n    + New script added for cron checks that discovers new hosts for selected networks;\n    + Added inactivity timeout to settings;\n    + Changed install procedure and updated install scripts;\n    + Added PEAR check for installation;\n    + Added free range disaply for VLANs;\n    + Addes SSL/TLS option for SMTP mail;\n    + API:\n        + Bugfixes;\n        + Added API admin permissions;\n        + read/delete actions for IP addresses;\n        + read/delete actions for Vlans;\n        + read/delete actions for VRFs;\n\n    Security Fixes:\n    ----------------------------\n    + Fixed known command injection vulnerabilities in the scan functions;\n    + Fixed known SQL injection vulnerabilities;\n    + Fixed known XSS vulnerabilities;\n    + Fixed known action XSS events;\n    + Moved to crypt method for storing password in database with salting;\n    + Added option to force user to change pass after first login;\n    + Admin password must be changed after installation;\n    + Added captcha code request after 5x unsuccesfull login to prevent brute-force attacks;\n\n    Translations:\n    ----------------------------\n    + Added es_ES translation;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed top 10 widgets not escaping strings;\n    + Fixed section parent can be set to self that caused section to disapear;\n    + Fixed username instead of password being sent to smtp server;\n    + Fixed IE search bug with workaround;\n    + Fixed subnet and bcast not showing on strict mode disabled;\n    + Fixed top subnets missing on dashboard for non-admin users;\n    + Fixed bug when installation was silently failing bacause pf missing _() function (missing gettext extension)\n    + Fixed device custom field not populated on adding device;\n    + Fixed XLS export silently failed when description longer than 31 characters;\n    + Fixed overlapping check not working;\n    + Fixed subnet free space calcultation;\n    + Fixed visual subnet display not showing on /31 and /32 networks;\n    + Fixed custom fields display on folder edit;\n    + Fixed unable to edit IP addresses when fields are sorted;\n    + Fixde ordering of custom fields defaults to varchar 256;\n    + Fixed IPv6 subnet / broadcast calculation bug and next subnet suggestion;\n\n== 1.0\n\n    New features:\n    ----------------------------\n    + IP address page with IP address details and IP history (Changelog);\n    + IP address changelog, subnet and section changelogs with full changelog under tools;\n    + Favourite subnets for quick access;\n    + Adding subnets from free space with automatic mask provided;\n    + Automatic database validity check after upgrading and automatic field/table fix under administration;\n    + Automatic weekly check for new phpipam version;\n\n    Enhancements:\n    ----------------------------\n    + Bootstrap 3;\n    + UI enhancements;\n    + Improved views based on browser width;\n    + Widget order can now be set;\n    + Widgets can be reordered (dragged) directly on dashboard;\n    + Subnet can now be splitted to max 256 new subnets (16 before);\n    + Scan settings are moved to Administration;\n    + Widget management has moved to administration, which allows creation of new widgets;\n    + Improved ICMP error detection;\n    + Mail settings can now be set on gui (localhost / smtp);\n    + Popup windows are now draggable;\n    + VLAN adding in the fly enhancements;\n    + Master section now shows all subnets in subsections;\n    + Tools > devices redone;\n    + DeviceTypes can now be edited/set/added;\n    + Ping subnet enhancements;\n    + Custom field types are now defineable (int/varchar/date/datetime/text/bool/set);\n    + Date and timepicker popups if type = date/datetime;\n    + For `set` and boolean custom fields dropdown is presented that users can pick;\n\n    + Favourite subnets widget;\n    + IP requests widget;\n    + Changelog widget;\n\n    Translations:\n    ----------------------------\n    + Added Brazil translation (Michel Braga Guimar\u00e3es);\n\n    Bugfixes:\n    --------\n    + UI fixes;\n    + Fixed bug where last page of IP addresses was inaccessible;\n    + IP address state change is now sent to all admins;\n    + Fixed subnet displaying as 0.0.0.0/0 in details;\n    + Fixed links to subnets form vlans and vrfs;\n    + Fixed search result showing all folders if searched item is not IP address;\n    + Fixed disapearing section when L2 section was selected as master section;\n    + Fixed device ID showing in mail notification instead of hostname;\n    + Fixed device ID showing in search results and export instead of hostname;\n    + Fixed search for subnet name returned no results;\n    + Fixed apostophe in IP address description throws SQL error for scan results and XLS import;\n    + Fixed requester email gets cut if longer than 32 chars;\n    + Fixed admin folder edit appearing as subnet;\n    + Fixed missing device/port in import;\n    + Fixed master section delete did not delete subsections and belonging subnets/ips;\n    + Fixed online status was not updated when running Ping status scans;\n    + Fixed Folder name not appearing when deleting folder;\n\n== 0.9\n\n    New features:\n    ----------------------------\n    + Support for ICMP network discovery;\n    + Cron script to check status for selected subnets/hosts with threading suport (pcntl php extension required);\n    + ICMP check IP status in demand;\n    + Compressed (grouped) DHCP IP ranges;\n    + API server version 0.1;\n    + Option to show and group subnets by VLAN in subnets list;\n    + Option to show and group subnets by VRF in subnets list;\n    + Added subsections;\n    + Added AD username search;\n    + Added folders;\n\n    Enhancements:\n    ----------------------------\n    + Added error catching/displaying for ajax-loaded php scripts;\n    + Added default language for login/requests display and new users;\n    + Added direct links to different pages in IP address table;\n    + Subnets can now be edited directly from nested subnets list;\n    + When adding nested subnets default vlan/vrf is selected from parent;\n    + Added Section ordering;\n    + Added per/section subnet ordering (overrides dafault form settings);\n    + Clicking on section now shows all subnets and belonging details;\n    + If session timeouts after re-login last requested page will be opened;\n    + Searh for IP address now returns also subnet, even if IP is not existing;\n    + Per-user selection of widgets to display;\n    + Added description and required field checkbox for custom IP/Subnet Fields;\n    + Added custom device fields;\n    + Mails are now sent through phpmailer;\n    + Admin user cannot be deleted;\n\n    Translations:\n    ----------------------------\n    + Added French translation (Denis Darr\u00e9);\n    + Added Dutch translation (Michiel Visser);\n    + Added German translation (Carsten Br\u00fcckner);\n\n    Bugfixes:\n    ----------------------------\n    + Fixed wrong VLAN display in tools;\n    + Fixed subnet/section links from VLANS if base not /;\n    + Fixed warning in apache log on subnet editing if no VRFs are configured;\n    + Fixed admin menu off-screen overflow;\n    + Fixed firefox error when selectiong rights for section/subnets was not possible;\n    + Fixed subnet description in Cyrillic problem;\n    + Fixed errors on no permissions for user;\n    + Fixed Inaccurate Free Space Calculation (and Chart);\n    + Fixed VLAN permissions where VLAN was not displayed;\n\n== 0.8\n\n    New features:\n    ----------------------------\n    + New group and permission management;\n    + Support for translations;\n    + Subnet resizing;\n    + Subnet splitting into smaller subnets;\n    + Added free space display for nested subnets;\n    + Added visual display of subnet usage per IP address;\n    + Added truncate network option that deletes all IP addresses in subnet;\n    + Added button the updates subnet with RIPE information;\n\n    Enhancements:\n    ----------------------------\n    + Added add nested subnet under subnet details to simplify master subnet selection in hierarchy;\n    + Added edit subnet link from search results;\n    + Added reverse IPv6 DNS entries to IPCalc (Vincent Boisard);\n    + Added option for plain-text emails;\n    + Added ckEditor to write instructions;\n    + StrictMode is not set globally anymore but set per section;\n    + Added custom user fields;\n    + Added option to verify that hostname is unique;\n    + Improved MySQL exception handling;\n    + Added mod_rewrite error detection on installation and upgrade;\n    + Added hostname validation;\n    + Added Hostfile dump of IP addresses;\n    + Search also searches in custom fields;\n    + jQuery updated to v 1.9.1;\n\n    Bugfixes:\n    ------------------------\n    + Fixed overlay on second popup;\n    + Fixed IE search bug;\n    + Fixed support for non-standard ports;\n    + Fixed permitting overlapping subnets if vrfs are different;\n    + Fixed dates in logging appearing in 12h format;\n    + Fixed broken subnets link in tools > subnets if installation is not at document root;\n    + Fixed error when adding new subnet if checkboxes are not selected in newer MySQL servers;\n    + Fixed bad display of multilined navigation bar;\n    + Fixed wrong output of tools > VLAN list when using Duplicate VLANs;\n    + Fixed wrong link for upgrade script;\n    + On VRF change all child subnets are updated also;\n    + Fixed wrong maximum on dashboard top10 percentage;\n    + Fixed Adding a vlan while editing a subnet resets the edit subnet form;\n    + Fixed wrong free space calculation for nested subnets;\n    + Fixed IP use statistics not cumulative up the hierarchy if subnes has slaves;\n\n== 0.7\n\n    New features:\n    ----------------------------\n    + Completely rewritten UI using twitter's bootstrap as base;\n    + Using mod_rewrite apache module to handle GET requests (new install requitements!);\n    + Unlimited number of subnetting levels;\n    + OpenLDAP authentication support;\n    + New URL structure;\n    + Sorting of IP addresses;\n    + Custom subnet fields;\n    + Custom VLAN fields and admin option to allow duplicate VLAN names (metro area VLANs);\n    + Script to automatically update IP <-> hostname, run via cron (functions/scripts/resolveIPaddresses.php);\n    + Show Subnet name instead of subnet IP address option;\n    + Strict mode option in config files that controlls overlapping checks;\n    + New subnet menu;\n    + Added printLimit feature to break IP addresses into pages;\n\n    Enhancements:\n    ----------------------------\n    + Lots of UI changes;\n    + Less Ajax usage to display websites and details;\n    + Hierarchy display under subnet details (breadcrumbs);\n    + Search results covering VLANs;\n    + Custom IP fields ordering;\n    + VLAN creation from adding/editing subnets;\n    + IP addresses can now be edited;\n    + Collapsed switch list;\n    + Removing VLANs also removes references from subnet list;\n    + Removing VRFs also removes references from subnet list;\n    + Logs for admin on dashboard;\n    + Search via GET;\n    + Support for range networks (allows use of subnet and broadcast as IP);\n    + Import of custom IP fields;\n    + Abiility to move subnets between sections;\n    + Improved display of nested subnets now shows all IP addresses from nested subnets and orphaned IPs;\n    + Hides display of custom fields in subnet if none is filled in whole subnet;\n    + Replaced Highcharts with Flot because of licencing issues;\n\n    Bugfixes:\n    ------------------------\n    + Fixed error with missing custom IP fields when adding new IP address;\n    + Fixed bug when deleteing root subnet only deleted directly nested subnets (now whole tree);\n    + Fixed checkboxes not working in various browsers;\n    + Fixed change in switch details causing IP address associations to switch to be lost;\n    + Fixed subnet description display in under subnet administration;\n    + Fixed depricated error when showing XLS files;\n    + Fixed error when custom fields were not updated on adding IP address;\n    + Fixed error when custom fields were with spaces in name were not updated;\n    + Fixed error when providing already requested IP address;\n    + Search available also to viewer user types;\n    + Fixed /127 and /128 IPv6 subnets;\n    + Fixed /31 and /32 IPv4 subnets;\n    + Significally reduced php processing for dashboard statistics;\n    + Fixed importing of if quote is present;\n\n== 0.6\n\n    New features:\n    ----------------------------\n    + Selectable IP address list display fields;\n    + Custom IP address fields;\n    + Search and replace IP fields function;\n    + Full page width theme;\n\n    Enhancements:\n    ----------------------------\n    + Independant VLAN management;\n    + Added additional level of subnet nesting;\n    + Added option to clear and export log files;\n    + Export of search results to XLS;\n    + Clickable search results;\n    + Selectable export fields when exporting subnet;\n    + Subnet can be deleted from ip address edit subnet;\n    + IP Requests for locked subnets and viewer users can be placed from ip address list;\n    + jQuery updated to v 1.7.1;\n    + HighCharts updated to v 2.2.0;\n\n    Bugfixes:\n    ------------------------\n    + Upgrade is supported only for versions 0.4 and higher;\n    + Fixed broken UTF-8 support;\n    + Fixed wrong logging when authenticating via AD;\n    + Fixed issues where external attacker might get information about internal hosts through resolvedns script;\n    + Fixed wrong subnet nesting under administration/manage subnets;\n    + Fixed editing subnet can be outside of its own root subnet;\n    + Fixed errors when adding new switch auto-adds itselt to all hosts without no switch defined;\n    + Fixed removing switch not removed in ip address list;\n    + Vlan1 can now be used;\n    + Fixed mail sending settings with missing information;\n    + Fixed errors on adding switch with no sections;\n    + Fixed version check;\n    + Removed masterSubnets from subnets available for IP requests;\n    + Fixed error when non-admin user could not open dashboard;\n    + Added how subnet list switch when list hidden;\n\n== 0.5\n\n    New features:\n    -------------\n    + Importing subnets from RIPE by AS in admin section;\n    + Added switch management and changed switch logic;\n    + Added VRF support;\n    + Added AD domain authentication;\n    + Added MAC address field to ip address;\n    + Added database table and belonging fields check under admin;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + Added DNS resolving when editing/adding IP address;\n    + Added IE compatibility meta tag and IE UI improvements for IE >= 8;\n    + Search returns also subnets and MAC searches;\n    + Added mac address and IP status to XLS import/export scripts;\n    + jQuery update from 1.6.2 to 1.7;\n    + Highcharts update from 2.1.2 to 2.1.8;\n\n    + Fixed dashboard errors if no IPv4/IPv6 subnets configured;\n    + Fixed errors with viewing / modifying IP addresses for Operator users;\n    + Fixed session cookie error on hosts;\n    + Fixed error when saving settings;\n    + Fixed instructions errors when inserting html code;\n    + Fixed first free IP address not displaying in IP request;\n\n\n== 0.4\n\n    New features:\n    -------------\n    + Massive add / edit / delete by specifying IP range (e.g. 10.10.0.1 - 10.10.0.254);\n    + Database upgrade / install from browser -> simplified installation/update procedure;\n    + New usertype viewer - can only view IP address list;\n    + Subnets can now be edited directly from IP address list;\n    + Option to lock subnet for writing to no-admin users;\n    + Device and Host list;\n    + Option to specify which subnet can have IP requests when editing / adding subnet if module is enabled;\n    + Latest version check on admin page;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + Fixed overspanning of multiple sections;\n    + Admin menu and add subnet now shown only to admins;\n    + Fixed VLAN table to show nesting and IP request option and statistics;\n    + Fixed subnet table to show nesting and IP request option;\n    + Subnet Adding shows only master subnets in section not in all sections;\n    + Tooltips and button hovers are now in separate javascript file;\n    + Graphs show only subnets with non-0 ip addresses;\n    + Various code enhancements + improved error handling;\n    + Fixed URL links not updating after few clicks;\n    + If loading slave subnet directly the subnet menu drops down and shows active slave subnet;\n    + Clicking on master shubnet shows all nested subnets and statistics;\n    + Redesigned log table;\n    + Fixed search;\n\n== 0.3\n\n    New features:\n    -------------\n    + Subnet nesting - you can now have master subnet and normal subnets belonging to it;\n    + Server settings are now moved to database and can be set under admin menu (database settings & debugging remain in config.php);\n    + Request IP module on login page with email notification;\n    + Confirm/reject IP address request from admin page with mail notification;\n    + Admin dashboard notification of new requests;\n    + Autocomplete of owner and Switch name from all available when adding/editing IP address;\n    + New settings quick access on button hover;\n    + Option to export each subnet indivudually;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + jQuery update from 1.6 to 1.6.2;\n    + VLANs are now grouped by section;\n    + Direct access to subnet from vlan table;\n    + UI enhancements;\n    + Fixed user editing bug where user update broke password;\n    + Fixed password in new account notification;\n    + Fixed percentage display on Dashboard;\n    + IPv6 calculator /64 limit fixed;\n    + Changed tooltip effect to appear instantly for smoother display;\n    + Login functions are now separate file;\n\n\n== 0.2 (First public version)\n\n    Bugfixes / enhancements:\n    ------------------------\n    + now also works with php 5.2;\n    + fixed empty fields in xls import;\n    + passwords are now stored in md5 hash;\n    + high numbers for free/used IP addresses (mainly IPv6) are now represented in k/m/G values to improve readibility;\n    + fixed log search bug;\n    + cursor not displayed as link on images and non-href links;\n    + same add image on all pages;\n    + fixed IP mail notification apperance;\n    + UI enhancements and bugfixes;\n    + Fixed some javascript bugs;\n    + Minified javascript to make loading faster;\n    + adding new ip address now automatically provides first available IP address in subnet;\n\n    New features:\n    -------------\n    + added switch / port fields to IP addresses;\n    + hide subets on request to get better view;\n    + Informational tooltips added + option to disable them in config file if someone finds them annoying;\n    + export whole IP address database to XLS file from admin menu;\n    + create MySQL database dump from admin menu;\n    + added IP instructions for users, that can be edited from admin menu;\n\n\n== 0.1 (First test version)\n"], "filenames": ["app/dashboard/index.php", "functions/classes/class.Common.php", "misc/CHANGELOG"], "buggy_code_start_loc": [121, 677, 14], "buggy_code_end_loc": [175, 678, 14], "fixing_code_start_loc": [121, 677, 15], "fixing_code_end_loc": [175, 678, 16], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository phpipam/phpipam prior to v1.5.2.", "other": {"cve": {"id": "CVE-2023-1212", "sourceIdentifier": "security@huntr.dev", "published": "2023-03-07T00:15:09.300", "lastModified": "2023-03-11T02:52:25.743", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository phpipam/phpipam prior to v1.5.2."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.6, "impactScore": 4.2}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpipam:phpipam:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.5.2", "matchCriteriaId": "46DA6678-DF2A-4E72-8CC6-C70CA607810B"}]}]}], "references": [{"url": "https://github.com/phpipam/phpipam/commit/78e0470100a6cb143fe9af2e336dce80e4620960", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/3d5199d6-9bb2-4f7b-bd81-bded704da499", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/phpipam/phpipam/commit/78e0470100a6cb143fe9af2e336dce80e4620960"}}