{"buggy_code": ["def try_get_cached(domain, dict):\n    import ast\n    import json\n\n    import requests\n\n    title = dict[\"title\"]\n    singer = dict[\"singer\"]\n    album = dict[\"album\"]\n\n    api = f\"http://{domain}:7873/Y2hlY2tfY2FjaGVkX2ZpbGVz\"\n    headers = {\"Content-type\": \"application/json\", \"Accept\": \"text/plain\"}\n    payload = json.dumps({\"title\": title, \"singer\": singer, \"album\": album})\n    response = requests.post(api, data=payload, headers=headers)\n\n    status = ast.literal_eval(response.text)\n\n    return status\n\n\ndef get(image_file, domain, title, singer, album):\n    import ast\n    import base64\n    import json\n    import os\n    from html import unescape\n\n    import requests\n\n    api = f\"http://{domain}:7873/bGVhdmVfcmlnaHRfbm93\"\n\n    with open(image_file, \"rb\") as f:\n        im_bytes = f.read()\n        f.close()\n    im_b64 = base64.b64encode(im_bytes).decode(\"utf8\")\n\n    headers = {\"Content-type\": \"application/json\", \"Accept\": \"text/plain\"}\n\n    status = try_get_cached(domain, {\"title\": title, \"singer\": singer, \"album\": album})\n    status = ast.literal_eval(str(status))\n\n    if status is None:\n        print(\"Cached version not found. Uploading image with song metadata.\")\n        payload = json.dumps(\n            {\"image\": im_b64, \"title\": title, \"singer\": singer, \"album\": album}\n        )\n        response = requests.post(api, data=payload, headers=headers)\n\n        data = unescape(response.text)\n        print(data)\n\n        data = ast.literal_eval(data)[\"entry\"]\n        print(data)\n\n    else:\n        data = status\n\n    # data = [{\"title\": title, \"singer\": singer, \"album\": album}, file_name, file_ending]\n\n    cmd = \"del \" + image_file\n    os.system(cmd)\n\n    return data\n\n\n# print(get(\"sample_image.jpg\", \"localhost\", \"title\", \"artist\", \"album\"))\n\n# try_get_cached(\"localhost\", {\"title\": \"title\", \"singer\": \"singer\", \"album\": \"album\"})\n\n# print(get(\"sample_image.png\", \"localhost\", \"not_title\", \"singer\", \"album\"))\n"], "fixing_code": ["def try_get_cached(domain, dict):\n    import ast\n    import json\n\n    import requests\n\n    title = dict[\"title\"]\n    singer = dict[\"singer\"]\n    album = dict[\"album\"]\n\n    api = f\"http://{domain}:7873/Y2hlY2tfY2FjaGVkX2ZpbGVz\"\n    headers = {\"Content-type\": \"application/json\", \"Accept\": \"text/plain\"}\n    payload = json.dumps({\"title\": title, \"singer\": singer, \"album\": album})\n    response = requests.post(api, data=payload, headers=headers)\n\n    status = ast.literal_eval(response.text)\n\n    return status\n\n\ndef get(image_file, domain, title, singer, album):\n    import ast\n    import base64\n    import json\n    import os\n    from html import unescape\n    import werkzeug.utils\n    import requests\n\n    image_file = werkzeug.utils.secure_filename(ast.literal_eval(image_file))\n\n    api = f\"http://{domain}:7873/bGVhdmVfcmlnaHRfbm93\"\n\n    with open(image_file, \"rb\") as f:\n        im_bytes = f.read()\n        f.close()\n    im_b64 = base64.b64encode(im_bytes).decode(\"utf8\")\n\n    headers = {\"Content-type\": \"application/json\", \"Accept\": \"text/plain\"}\n\n    status = try_get_cached(domain, {\"title\": title, \"singer\": singer, \"album\": album})\n    status = ast.literal_eval(str(status))\n\n    if status is None:\n        print(\"Cached version not found. Uploading image with song metadata.\")\n        payload = json.dumps(\n            {\"image\": im_b64, \"title\": title, \"singer\": singer, \"album\": album}\n        )\n        response = requests.post(api, data=payload, headers=headers)\n\n        data = unescape(response.text)\n        print(data)\n\n        data = ast.literal_eval(data)[\"entry\"]\n        print(data)\n\n    else:\n        data = status\n\n    # data = [{\"title\": title, \"singer\": singer, \"album\": album}, file_name, file_ending]\n\n    cmd = \"del \" + image_file\n    os.system(cmd)\n\n    return data\n\n\n# print(get(\"sample_image.jpg\", \"localhost\", \"title\", \"artist\", \"album\"))\n\n# try_get_cached(\"localhost\", {\"title\": \"title\", \"singer\": \"singer\", \"album\": \"album\"})\n\n# print(get(\"sample_image.png\", \"localhost\", \"not_title\", \"singer\", \"album\"))\n"], "filenames": ["module/connect_to_server.py"], "buggy_code_start_loc": [26], "buggy_code_end_loc": [29], "fixing_code_start_loc": [27], "fixing_code_end_loc": [31], "type": "CWE-78", "message": "iTunesRPC-Remastered is a Discord Rich Presence for iTunes on Windows utility. In affected versions iTunesRPC-Remastered did not properly sanitize image file paths leading to OS level command injection. This issue has been patched in commit cdcd48b. Users are advised to upgrade.", "other": {"cve": {"id": "CVE-2022-23611", "sourceIdentifier": "security-advisories@github.com", "published": "2022-02-04T23:15:15.670", "lastModified": "2022-02-11T03:11:43.760", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "iTunesRPC-Remastered is a Discord Rich Presence for iTunes on Windows utility. In affected versions iTunesRPC-Remastered did not properly sanitize image file paths leading to OS level command injection. This issue has been patched in commit cdcd48b. Users are advised to upgrade."}, {"lang": "es", "value": "iTunesRPC-Remastered es una utilidad de Discord Rich Presence para iTunes en Windows. En las versiones afectadas, iTunesRPC-Remastered no saneaba correctamente las rutas de los archivos de imagen, conllevando a una inyecci\u00f3n de comandos a nivel del Sistema Operativo. Este problema ha sido parcheado en el commit cdcd48b. Es recomendado a usuarios actualizar"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "HIGH", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.2, "impactScore": 5.3}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-78"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-78"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:itunesrpc-remastered_project:itunesrpc-remastered:-:*:*:*:*:*:*:*", "matchCriteriaId": "C6C22451-4974-430A-85CC-E266A4A5FB19"}]}]}], "references": [{"url": "https://github.com/bildsben/iTunesRPC-Remastered/commit/cdcd48bbc44009ddcbd07a809b87376dc9ce37f4", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/bildsben/iTunesRPC-Remastered/security/advisories/GHSA-mjv7-r62p-vhhg", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/bildsben/iTunesRPC-Remastered/commit/cdcd48bbc44009ddcbd07a809b87376dc9ce37f4"}}