{"buggy_code": ["<?php\n/**\n * Copyright (c) Enalean, 2011 - Present. All Rights Reserved.\n * Copyright (c) Xerox Corporation, Codendi Team, 2001-2009. All rights reserved\n *\n * This file is a part of Tuleap.\n *\n * Tuleap is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * Tuleap is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.\n */\n\nuse Tuleap\\Dashboard\\Project\\ProjectDashboardController;\n\nabstract class HudsonJobWidget extends HudsonWidget\n{\n\n    public $widget_id;\n    public $group_id;\n\n    public $job_id;\n\n    public function isUnique()\n    {\n        return false;\n    }\n\n    public function create(Codendi_Request $request)\n    {\n        $content_id = false;\n        $vId = new Valid_UInt($this->widget_id . '_job_id');\n        $vId->setErrorMessage(\"Can't add empty job id\");\n        $vId->required();\n        if ($request->valid($vId)) {\n            $job_id = $request->get($this->widget_id . '_job_id');\n            $sql = 'INSERT INTO plugin_hudson_widget (widget_name, owner_id, owner_type, job_id) VALUES (\"' . $this->id . '\", ' . $this->owner_id . \", '\" . $this->owner_type . \"', \" . db_escape_int($job_id) . \" )\";\n            $res = db_query($sql);\n            $content_id = db_insertid($res);\n        }\n        return $content_id;\n    }\n\n    public function destroy($id)\n    {\n        $sql = 'DELETE FROM plugin_hudson_widget WHERE id = ' . $id . ' AND owner_id = ' . $this->owner_id . \" AND owner_type = '\" . $this->owner_type . \"'\";\n        db_query($sql);\n    }\n\n    public function getPreferences($widget_id)\n    {\n        $select_id = 'job-' . (int) $widget_id;\n\n        return $this->buildPreferencesForm($select_id);\n    }\n\n    public function hasPreferences($widget_id)\n    {\n        return true;\n    }\n\n    public function getInstallPreferences()\n    {\n        $select_id = 'widget-job-id';\n\n        return $this->buildPreferencesForm($select_id);\n    }\n\n    private function buildPreferencesForm($select_id)\n    {\n        $this->initContent();\n        $purifier = Codendi_HTMLPurifier::instance();\n\n        $jobs = $this->getAvailableJobs();\n        if (count($jobs) > 0) {\n            $html = '<div class=\"tlp-form-element\">\n                <label class=\"tlp-label\" for=\"' . $select_id . '\">\n                    ' . $purifier->purify($GLOBALS['Language']->getText('plugin_hudson', 'monitored_job')) . '\n                </label>\n                <select class=\"tlp-select\"\n                    id=\"' . $select_id . '\"\n                    name=\"' . $purifier->purify($this->widget_id) . '_job_id\">';\n\n            foreach ($jobs as $job_id => $job) {\n                $selected = ($job_id == $this->job_id) ? 'selected=\"seleceted\"' : '';\n\n                $html .= '<option value=\"' . $purifier->purify($job_id) . '\" ' . $selected . '>\n                ' . $purifier->purify($job->getName()) . '\n                </option>';\n            }\n            $html .= '</select>\n                </div>';\n        } elseif ($this->owner_type == ProjectDashboardController::LEGACY_DASHBOARD_TYPE) {\n            $html = '<div class=\"tlp-alert-warning\">' . $GLOBALS['Language']->getText(\n                'plugin_hudson',\n                'widget_no_job_project',\n                array($this->group_id)\n            ) . '</div>';\n        } else {\n            $message = $this->owner_type == ProjectDashboardController::LEGACY_DASHBOARD_TYPE ?\n                $GLOBALS['Language']->getText('plugin_hudson', 'widget_no_job_project', array($this->group_id)) :\n                $GLOBALS['Language']->getText('plugin_hudson', 'widget_no_job_my');\n\n            $html = '<div class=\"tlp-alert-warning\">' . $message . '</div>';\n        }\n\n        return $html;\n    }\n\n    public function updatePreferences(Codendi_Request $request)\n    {\n        $request->valid(new Valid_String('cancel'));\n        if (!$request->exist('cancel')) {\n            $job_id = $request->get($this->widget_id . '_job_id');\n            $sql = \"UPDATE plugin_hudson_widget SET job_id=\" . $job_id . \" WHERE owner_id = \" . $this->owner_id . \" AND owner_type = '\" . $this->owner_type . \"' AND id = \" . (int) $request->get('content_id');\n            $res = db_query($sql);\n        }\n        return true;\n    }\n\n    abstract protected function initContent();\n\n    /**\n     * @return int|null\n     */\n    protected function getJobIdFromWidgetConfiguration()\n    {\n        $sql = \"SELECT *\n                    FROM plugin_hudson_widget\n                    WHERE widget_name = '\" . db_es($this->widget_id) . \"'\n                      AND owner_id = \" . db_ei($this->owner_id) . \"\n                      AND owner_type = '\" . db_es($this->owner_type) . \"'\n                      AND id = \" . db_ei($this->content_id);\n\n        $res = db_query($sql);\n        if ($res && db_numrows($res)) {\n            $data   = db_fetch_array($res);\n            return $data['job_id'];\n        }\n\n        return null;\n    }\n}\n"], "fixing_code": ["<?php\n/**\n * Copyright (c) Enalean, 2011 - Present. All Rights Reserved.\n * Copyright (c) Xerox Corporation, Codendi Team, 2001-2009. All rights reserved\n *\n * This file is a part of Tuleap.\n *\n * Tuleap is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * Tuleap is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.\n */\n\nuse Tuleap\\Dashboard\\Project\\ProjectDashboardController;\n\nabstract class HudsonJobWidget extends HudsonWidget\n{\n\n    public $widget_id;\n    public $group_id;\n\n    public $job_id;\n\n    public function isUnique()\n    {\n        return false;\n    }\n\n    public function create(Codendi_Request $request)\n    {\n        $content_id = false;\n        $vId = new Valid_UInt($this->widget_id . '_job_id');\n        $vId->setErrorMessage(\"Can't add empty job id\");\n        $vId->required();\n        if ($request->valid($vId)) {\n            $job_id = $request->get($this->widget_id . '_job_id');\n            $db = \\Tuleap\\DB\\DBFactory::getMainTuleapDBConnection()->getDB();\n            $content_id = (int) $db->insertReturnId(\n                'plugin_hudson_widget',\n                [\n                    'widget_name' => $this->id,\n                    'owner_id'    => $this->owner_id,\n                    'owner_type'  => $this->owner_type,\n                    'job_id'      => $job_id\n                ]\n            );\n        }\n        return $content_id;\n    }\n\n    public function destroy($id)\n    {\n        $db = \\Tuleap\\DB\\DBFactory::getMainTuleapDBConnection()->getDB();\n        $db->run(\n            'DELETE FROM plugin_hudson_widget WHERE id = ? AND owner_id = ? AND owner_type = ?',\n            $id,\n            $this->owner_id,\n            $this->owner_type,\n        );\n    }\n\n    public function getPreferences($widget_id)\n    {\n        $select_id = 'job-' . (int) $widget_id;\n\n        return $this->buildPreferencesForm($select_id);\n    }\n\n    public function hasPreferences($widget_id)\n    {\n        return true;\n    }\n\n    public function getInstallPreferences()\n    {\n        $select_id = 'widget-job-id';\n\n        return $this->buildPreferencesForm($select_id);\n    }\n\n    private function buildPreferencesForm($select_id)\n    {\n        $this->initContent();\n        $purifier = Codendi_HTMLPurifier::instance();\n\n        $jobs = $this->getAvailableJobs();\n        if (count($jobs) > 0) {\n            $html = '<div class=\"tlp-form-element\">\n                <label class=\"tlp-label\" for=\"' . $select_id . '\">\n                    ' . $purifier->purify($GLOBALS['Language']->getText('plugin_hudson', 'monitored_job')) . '\n                </label>\n                <select class=\"tlp-select\"\n                    id=\"' . $select_id . '\"\n                    name=\"' . $purifier->purify($this->widget_id) . '_job_id\">';\n\n            foreach ($jobs as $job_id => $job) {\n                $selected = ($job_id == $this->job_id) ? 'selected=\"seleceted\"' : '';\n\n                $html .= '<option value=\"' . $purifier->purify($job_id) . '\" ' . $selected . '>\n                ' . $purifier->purify($job->getName()) . '\n                </option>';\n            }\n            $html .= '</select>\n                </div>';\n        } elseif ($this->owner_type == ProjectDashboardController::LEGACY_DASHBOARD_TYPE) {\n            $html = '<div class=\"tlp-alert-warning\">' . $GLOBALS['Language']->getText(\n                'plugin_hudson',\n                'widget_no_job_project',\n                array($this->group_id)\n            ) . '</div>';\n        } else {\n            $message = $this->owner_type == ProjectDashboardController::LEGACY_DASHBOARD_TYPE ?\n                $GLOBALS['Language']->getText('plugin_hudson', 'widget_no_job_project', array($this->group_id)) :\n                $GLOBALS['Language']->getText('plugin_hudson', 'widget_no_job_my');\n\n            $html = '<div class=\"tlp-alert-warning\">' . $message . '</div>';\n        }\n\n        return $html;\n    }\n\n    public function updatePreferences(Codendi_Request $request)\n    {\n        $request->valid(new Valid_String('cancel'));\n        if (!$request->exist('cancel')) {\n            $job_id = $request->get($this->widget_id . '_job_id');\n            $db = \\Tuleap\\DB\\DBFactory::getMainTuleapDBConnection()->getDB();\n            $db->run(\n                'UPDATE plugin_hudson_widget SET job_id=? WHERE owner_id = ? AND owner_type = ? AND id = ?',\n                $job_id,\n                $this->owner_id,\n                $this->owner_type,\n                $this->content_id,\n            );\n        }\n        return true;\n    }\n\n    abstract protected function initContent();\n\n    /**\n     * @return int|null\n     */\n    protected function getJobIdFromWidgetConfiguration()\n    {\n        $db = \\Tuleap\\DB\\DBFactory::getMainTuleapDBConnection()->getDB();\n        $job_id = $db->cell(\n            'SELECT job_id FROM plugin_hudson_widget WHERE widget_name = ? AND owner_id = ? AND owner_type = ? AND id = ?',\n            $this->widget_id,\n            $this->owner_id,\n            $this->owner_type,\n            $this->content_id,\n        );\n\n        if ($job_id === false) {\n            return null;\n        }\n\n        return $job_id;\n    }\n}\n"], "filenames": ["plugins/hudson/include/HudsonJobWidget.class.php"], "buggy_code_start_loc": [45], "buggy_code_end_loc": [150], "fixing_code_start_loc": [45], "fixing_code_end_loc": [168], "type": "CWE-89", "message": "Tuleap Open ALM is a libre and open source tool for end to end traceability of application and system developments. Prior to version 11.16.99.173 of Community Edition and versions 11.16-6 and 11.15-8 of Enterprise Edition, an attacker with the ability to add one the CI widget to its personal dashboard could execute arbitrary SQL queries. Tuleap Community Edition 11.16.99.173, Tuleap Enterprise Edition 11.16-6, and Tuleap Enterprise Edition 11.15-8 contain a patch for this issue.", "other": {"cve": {"id": "CVE-2021-41148", "sourceIdentifier": "security-advisories@github.com", "published": "2021-10-15T14:15:08.307", "lastModified": "2021-10-21T17:14:14.173", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Tuleap Open ALM is a libre and open source tool for end to end traceability of application and system developments. Prior to version 11.16.99.173 of Community Edition and versions 11.16-6 and 11.15-8 of Enterprise Edition, an attacker with the ability to add one the CI widget to its personal dashboard could execute arbitrary SQL queries. Tuleap Community Edition 11.16.99.173, Tuleap Enterprise Edition 11.16-6, and Tuleap Enterprise Edition 11.15-8 contain a patch for this issue."}, {"lang": "es", "value": "Tuleap Open ALM es una herramienta libre y de c\u00f3digo abierto para la trazabilidad de extremo a extremo de los desarrollos de aplicaciones y sistemas. En versiones anteriores a 11.16.99.173 de Community Edition y versiones 11.16-6 y 11.15-8 de Enterprise Edition, un atacante con la capacidad de a\u00f1adir un widget de CI a su tablero personal pod\u00eda ejecutar consultas SQL arbitrarias. Tuleap Community Edition versi\u00f3n 11.16.99.173, Tuleap Enterprise Edition versi\u00f3n 11.16-6 y Tuleap Enterprise Edition versi\u00f3n 11.15-8 contienen un parche para este problema"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:enalean:tuleap:*:*:*:*:community:*:*:*", "versionEndExcluding": "11.16.99.173", "matchCriteriaId": "8B915FD8-6D43-4E50-8969-92697EEF5E27"}, {"vulnerable": true, "criteria": "cpe:2.3:a:enalean:tuleap:*:*:*:*:enterprise:*:*:*", "versionStartIncluding": "11.15-1", "versionEndExcluding": "11.15-8", "matchCriteriaId": "A27A3110-C7F5-4618-A28D-09898CB6608B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:enalean:tuleap:*:*:*:*:enterprise:*:*:*", "versionStartIncluding": "11.16-1", "versionEndExcluding": "11.16-6", "matchCriteriaId": "34E67CE9-C542-43FD-B473-D70F96CED515"}]}]}], "references": [{"url": "https://github.com/Enalean/tuleap/commit/91535add59f4b3a04b6b8eab123c002cd5af180d", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/Enalean/tuleap/security/advisories/GHSA-3c4q-8c35-cp63", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://tuleap.net/plugins/git/tuleap/tuleap/stable?a=commit&h=91535add59f4b3a04b6b8eab123c002cd5af180d", "source": "security-advisories@github.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://tuleap.net/plugins/tracker/?aid=15028", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}]}, "github_commit_url": "https://github.com/Enalean/tuleap/commit/91535add59f4b3a04b6b8eab123c002cd5af180d"}}