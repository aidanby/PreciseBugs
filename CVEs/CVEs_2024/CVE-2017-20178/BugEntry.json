{"buggy_code": ["<?php\n\n/*\n*  Copyright (c) Codiad & Kent Safranski (codiad.com), distributed\n*  as-is and without warranty under the MIT License. See\n*  [root]/license.txt for more. This information must remain intact.\n*/\n\n//////////////////////////////////////////////////////////////////////\n// Paths\n//////////////////////////////////////////////////////////////////////\n\n    $path = $_POST['path'];\n\n    $rel = str_replace('/components/install/process.php', '', $_SERVER['REQUEST_URI']);\n\n    $workspace = $path . \"/workspace\";\n    $users = $path . \"/data/users.php\";\n    $projects = $path . \"/data/projects.php\";\n    $active = $path . \"/data/active.php\";\n    $config = $path . \"/config.php\";\n\n//////////////////////////////////////////////////////////////////////\n// Functions\n//////////////////////////////////////////////////////////////////////\n\nfunction saveFile($file, $data)\n{\n    $write = fopen($file, 'w') or die(\"can't open file\");\n    fwrite($write, $data);\n    fclose($write);\n}\n\nfunction saveJSON($file, $data)\n{\n    $data = \"<?php/*|\" . json_encode($data) . \"|*/?>\";\n    saveFile($file, $data);\n}\n\nfunction encryptPassword($p)\n{\n    return sha1(md5($p));\n}\n\nfunction cleanUsername($username)\n{\n    return preg_replace('#[^A-Za-z0-9'.preg_quote('-_@. ').']#', '', $username);\n}\n\nfunction isAbsPath($path)\n{\n    return $path[0] === '/';\n}\n\nfunction cleanPath($path)\n{\n\n    // prevent Poison Null Byte injections\n    $path = str_replace(chr(0), '', $path);\n\n    // prevent go out of the workspace\n    while (strpos($path, '../') !== false) {\n        $path = str_replace('../', '', $path);\n    }\n\n    return $path;\n}\n\n//////////////////////////////////////////////////////////////////////\n// Verify no overwrites\n//////////////////////////////////////////////////////////////////////\n\nif (!file_exists($users) && !file_exists($projects) && !file_exists($active)) {\n    //////////////////////////////////////////////////////////////////\n    // Get POST responses\n    //////////////////////////////////////////////////////////////////\n\n    $username = cleanUsername($_POST['username']);\n    $password = encryptPassword($_POST['password']);\n    $project_name = $_POST['project_name'];\n    if (isset($_POST['project_path'])) {\n        $project_path = $_POST['project_path'];\n    } else {\n        $project_path = $project_name;\n    }\n    $timezone = $_POST['timezone'];\n\n    //////////////////////////////////////////////////////////////////\n    // Create Projects files\n    //////////////////////////////////////////////////////////////////\n\n    $project_path = cleanPath($project_path);\n\n    if (!isAbsPath($project_path)) {\n        $project_path = str_replace(\" \", \"_\", preg_replace('/[^\\w-\\.]/', '', $project_path));\n        mkdir($workspace . \"/\" . $project_path);\n    } else {\n        $project_path = cleanPath($project_path);\n        if (substr($project_path, -1) == '/') {\n            $project_path = substr($project_path, 0, strlen($project_path)-1);\n        }\n        if (!file_exists($project_path)) {\n            if (!mkdir($project_path.'/', 0755, true)) {\n                die(\"Unable to create Absolute Path\");\n            }\n        } else {\n            if (!is_writable($project_path) || !is_readable($project_path)) {\n                die(\"No Read/Write Permission\");\n            }\n        }\n    }\n    $project_data = array(\"name\"=>$project_name,\"path\"=>$project_path);\n\n    saveJSON($projects, array($project_data));\n\n    //////////////////////////////////////////////////////////////////\n    // Create Users file\n    //////////////////////////////////////////////////////////////////\n\n    $user_data = array(\"username\"=>$username,\"password\"=>$password,\"project\"=>$project_path);\n\n    saveJSON($users, array($user_data));\n\n    //////////////////////////////////////////////////////////////////\n    // Create Active file\n    //////////////////////////////////////////////////////////////////\n\n    saveJSON($active, array(''));\n    \n    //////////////////////////////////////////////////////////////////\n    // Create Config\n    //////////////////////////////////////////////////////////////////\n\n\n    $config_data = '<?php\n\n/*\n*  Copyright (c) Codiad & Kent Safranski (codiad.com), distributed\n*  as-is and without warranty under the MIT License. See\n*  [root]/license.txt for more. This information must remain intact.\n*/\n\n//////////////////////////////////////////////////////////////////\n// CONFIG\n//////////////////////////////////////////////////////////////////\n\n// PATH TO CODIAD\ndefine(\"BASE_PATH\", \"' . $path . '\");\n\n// BASE URL TO CODIAD (without trailing slash)\ndefine(\"BASE_URL\", \"' . $_SERVER[\"HTTP_HOST\"] . $rel . '\");\n\n// THEME : default, modern or clear (look at /themes)\ndefine(\"THEME\", \"default\");\n\n// ABSOLUTE PATH\ndefine(\"WHITEPATHS\", BASE_PATH . \",/home\");\n\n// SESSIONS (e.g. 7200)\n$cookie_lifetime = \"0\";\n\n// TIMEZONE\ndate_default_timezone_set(\"' . $_POST['timezone'] . '\");\n\n// External Authentification\n//define(\"AUTH_PATH\", \"/path/to/customauth.php\");\n\n//////////////////////////////////////////////////////////////////\n// ** DO NOT EDIT CONFIG BELOW **\n//////////////////////////////////////////////////////////////////\n\n// PATHS\ndefine(\"COMPONENTS\", BASE_PATH . \"/components\");\ndefine(\"PLUGINS\", BASE_PATH . \"/plugins\");\ndefine(\"THEMES\", BASE_PATH . \"/themes\");\ndefine(\"DATA\", BASE_PATH . \"/data\");\ndefine(\"WORKSPACE\", BASE_PATH . \"/workspace\");\n\n// URLS\ndefine(\"WSURL\", BASE_URL . \"/workspace\");\n\n// Marketplace\n//define(\"MARKETURL\", \"http://market.codiad.com/json\");\n\n// Update Check\n//define(\"UPDATEURL\", \"http://update.codiad.com/?v={VER}&o={OS}&p={PHP}&w={WEB}&a={ACT}\");\n//define(\"ARCHIVEURL\", \"https://github.com/Codiad/Codiad/archive/master.zip\");\n//define(\"COMMITURL\", \"https://api.github.com/repos/Codiad/Codiad/commits\");\n';\n\n    saveFile($config, $config_data);\n\n    echo(\"success\");\n}\n"], "fixing_code": ["<?php\n\n/*\n*  Copyright (c) Codiad & Kent Safranski (codiad.com), distributed\n*  as-is and without warranty under the MIT License. See\n*  [root]/license.txt for more. This information must remain intact.\n*/\n\n//////////////////////////////////////////////////////////////////////\n// Paths\n//////////////////////////////////////////////////////////////////////\n\n    $path = $_POST['path'];\n\n    $rel = str_replace('/components/install/process.php', '', $_SERVER['REQUEST_URI']);\n\n    $workspace = $path . \"/workspace\";\n    $users = $path . \"/data/users.php\";\n    $projects = $path . \"/data/projects.php\";\n    $active = $path . \"/data/active.php\";\n    $config = $path . \"/config.php\";\n\n//////////////////////////////////////////////////////////////////////\n// Functions\n//////////////////////////////////////////////////////////////////////\n\nfunction saveFile($file, $data)\n{\n    $write = fopen($file, 'w') or die(\"can't open file\");\n    fwrite($write, $data);\n    fclose($write);\n}\n\nfunction saveJSON($file, $data)\n{\n    $data = \"<?php/*|\\r\\n\" . json_encode($data) . \"\\r\\n|*/?>\";\n    saveFile($file, $data);\n}\n\nfunction encryptPassword($p)\n{\n    return sha1(md5($p));\n}\n\nfunction cleanUsername($username)\n{\n    return preg_replace('#[^A-Za-z0-9'.preg_quote('-_@. ').']#', '', $username);\n}\n\nfunction isAbsPath($path)\n{\n    return $path[0] === '/';\n}\n\nfunction cleanPath($path)\n{\n\n    // prevent Poison Null Byte injections\n    $path = str_replace(chr(0), '', $path);\n\n    // prevent go out of the workspace\n    while (strpos($path, '../') !== false) {\n        $path = str_replace('../', '', $path);\n    }\n\n    return $path;\n}\n\n//////////////////////////////////////////////////////////////////////\n// Verify no overwrites\n//////////////////////////////////////////////////////////////////////\n\nif (!file_exists($users) && !file_exists($projects) && !file_exists($active)) {\n    //////////////////////////////////////////////////////////////////\n    // Get POST responses\n    //////////////////////////////////////////////////////////////////\n\n    $username = cleanUsername($_POST['username']);\n    $password = encryptPassword($_POST['password']);\n    $project_name = $_POST['project_name'];\n    if (isset($_POST['project_path'])) {\n        $project_path = $_POST['project_path'];\n    } else {\n        $project_path = $project_name;\n    }\n    $timezone = $_POST['timezone'];\n\n    //////////////////////////////////////////////////////////////////\n    // Create Projects files\n    //////////////////////////////////////////////////////////////////\n\n    $project_path = cleanPath($project_path);\n\n    if (!isAbsPath($project_path)) {\n        $project_path = str_replace(\" \", \"_\", preg_replace('/[^\\w-\\.]/', '', $project_path));\n        mkdir($workspace . \"/\" . $project_path);\n    } else {\n        $project_path = cleanPath($project_path);\n        if (substr($project_path, -1) == '/') {\n            $project_path = substr($project_path, 0, strlen($project_path)-1);\n        }\n        if (!file_exists($project_path)) {\n            if (!mkdir($project_path.'/', 0755, true)) {\n                die(\"Unable to create Absolute Path\");\n            }\n        } else {\n            if (!is_writable($project_path) || !is_readable($project_path)) {\n                die(\"No Read/Write Permission\");\n            }\n        }\n    }\n    $project_data = array(\"name\"=>$project_name,\"path\"=>$project_path);\n\n    saveJSON($projects, array($project_data));\n\n    //////////////////////////////////////////////////////////////////\n    // Create Users file\n    //////////////////////////////////////////////////////////////////\n\n    $user_data = array(\"username\"=>$username,\"password\"=>$password,\"project\"=>$project_path);\n\n    saveJSON($users, array($user_data));\n\n    //////////////////////////////////////////////////////////////////\n    // Create Active file\n    //////////////////////////////////////////////////////////////////\n\n    saveJSON($active, array(''));\n    \n    //////////////////////////////////////////////////////////////////\n    // Create Config\n    //////////////////////////////////////////////////////////////////\n\n\n    $config_data = '<?php\n\n/*\n*  Copyright (c) Codiad & Kent Safranski (codiad.com), distributed\n*  as-is and without warranty under the MIT License. See\n*  [root]/license.txt for more. This information must remain intact.\n*/\n\n//////////////////////////////////////////////////////////////////\n// CONFIG\n//////////////////////////////////////////////////////////////////\n\n// PATH TO CODIAD\ndefine(\"BASE_PATH\", \"' . $path . '\");\n\n// BASE URL TO CODIAD (without trailing slash)\ndefine(\"BASE_URL\", \"' . $_SERVER[\"HTTP_HOST\"] . $rel . '\");\n\n// THEME : default, modern or clear (look at /themes)\ndefine(\"THEME\", \"default\");\n\n// ABSOLUTE PATH\ndefine(\"WHITEPATHS\", BASE_PATH . \",/home\");\n\n// SESSIONS (e.g. 7200)\n$cookie_lifetime = \"0\";\n\n// TIMEZONE\ndate_default_timezone_set(\"' . $_POST['timezone'] . '\");\n\n// External Authentification\n//define(\"AUTH_PATH\", \"/path/to/customauth.php\");\n\n//////////////////////////////////////////////////////////////////\n// ** DO NOT EDIT CONFIG BELOW **\n//////////////////////////////////////////////////////////////////\n\n// PATHS\ndefine(\"COMPONENTS\", BASE_PATH . \"/components\");\ndefine(\"PLUGINS\", BASE_PATH . \"/plugins\");\ndefine(\"THEMES\", BASE_PATH . \"/themes\");\ndefine(\"DATA\", BASE_PATH . \"/data\");\ndefine(\"WORKSPACE\", BASE_PATH . \"/workspace\");\n\n// URLS\ndefine(\"WSURL\", BASE_URL . \"/workspace\");\n\n// Marketplace\n//define(\"MARKETURL\", \"http://market.codiad.com/json\");\n\n// Update Check\n//define(\"UPDATEURL\", \"http://update.codiad.com/?v={VER}&o={OS}&p={PHP}&w={WEB}&a={ACT}\");\n//define(\"ARCHIVEURL\", \"https://github.com/Codiad/Codiad/archive/master.zip\");\n//define(\"COMMITURL\", \"https://api.github.com/repos/Codiad/Codiad/commits\");\n';\n\n    saveFile($config, $config_data);\n\n    echo(\"success\");\n}\n"], "filenames": ["components/install/process.php"], "buggy_code_start_loc": [36], "buggy_code_end_loc": [37], "fixing_code_start_loc": [36], "fixing_code_end_loc": [37], "type": "NVD-CWE-noinfo", "message": "** UNSUPPPORTED WHEN ASSIGNED **** UNSUPPORTED WHEN ASSIGNED ** A vulnerability was found in Codiad 2.8.0. It has been rated as problematic. Affected by this issue is the function saveJSON of the file components/install/process.php. The manipulation of the argument data leads to information disclosure. The attack may be launched remotely. Upgrading to version 2.8.1 is able to address this issue. The name of the patch is 517119de673e62547ee472a730be0604f44342b5. It is recommended to upgrade the affected component. VDB-221498 is the identifier assigned to this vulnerability. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.", "other": {"cve": {"id": "CVE-2017-20178", "sourceIdentifier": "cna@vuldb.com", "published": "2023-02-21T18:15:11.600", "lastModified": "2023-03-02T22:51:38.910", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "** UNSUPPPORTED WHEN ASSIGNED **** UNSUPPORTED WHEN ASSIGNED ** A vulnerability was found in Codiad 2.8.0. It has been rated as problematic. Affected by this issue is the function saveJSON of the file components/install/process.php. The manipulation of the argument data leads to information disclosure. The attack may be launched remotely. Upgrading to version 2.8.1 is able to address this issue. The name of the patch is 517119de673e62547ee472a730be0604f44342b5. It is recommended to upgrade the affected component. VDB-221498 is the identifier assigned to this vulnerability. NOTE: This vulnerability only affects products that are no longer supported by the maintainer."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 3.1, "baseSeverity": "LOW"}, "exploitabilityScore": 1.6, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:S/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-200"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:codiad:codiad:2.8.0:*:*:*:*:*:*:*", "matchCriteriaId": "AD34E0F4-64F8-4452-B546-39C98361B3F1"}]}]}], "references": [{"url": "https://github.com/Codiad/Codiad/commit/517119de673e62547ee472a730be0604f44342b5", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://github.com/Codiad/Codiad/pull/974", "source": "cna@vuldb.com", "tags": ["Issue Tracking", "Patch"]}, {"url": "https://github.com/Codiad/Codiad/releases/tag/v.2.8.1", "source": "cna@vuldb.com", "tags": ["Release Notes"]}, {"url": "https://vuldb.com/?ctiid.221498", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.221498", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Codiad/Codiad/commit/517119de673e62547ee472a730be0604f44342b5"}}