{"buggy_code": ["<?php\n/*+********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n ********************************************************************************/\nrequire_once 'include/logging.php';\nrequire_once 'modules/Users/Users.php';\nrequire_once 'include/database/PearDatabase.php';\nrequire_once 'Smarty_setup.php';\nglobal $adb ,$mod_strings, $current_user, $currentModule, $app_strings, $theme;\n\n$smarty = new vtigerCRM_Smarty();\n$local_log = LoggerManager::getLogger('UsersAjax');\n$ajaxaction = vtlib_purify($_REQUEST['ajxaction']);\nif ($ajaxaction == 'DETAILVIEW') {\n\t$userid = vtlib_purify($_REQUEST['recordid']);\n\t$fieldname = vtlib_purify($_REQUEST['fldName']);\n\t$fieldvalue = utf8RawUrlDecode(vtlib_purify($_REQUEST['fieldValue']));\n\tif (empty($_SESSION['Users_FORM_TOKEN']) || $_SESSION['Users_FORM_TOKEN'] !== (int)$_REQUEST['form_token'] ||\n\t\t(!is_admin($current_user) && $current_user->id != $userid)) {\n\t\techo ':#:ERR'.($app_strings['LBL_PERMISSION']);\n\t\tdie;\n\t}\n\tif ($userid != '') {\n\t\t$userObj = new Users();\n\t\t$userObj->retrieve_entity_info($userid, 'Users');\n\t\t$userObj->column_fields[$fieldname] = $fieldvalue;\n\n\t\tif ($fieldname=='asterisk_extension' && trim($fieldvalue)!='') {\n\t\t\t$query = \"select userid from vtiger_asteriskextensions\n\t\t\t\tinner join vtiger_users on vtiger_users.id=vtiger_asteriskextensions.userid\n\t\t\t\twhere status='Active' and asterisk_extension =? and vtiger_users.id!=?\";\n\t\t\t$params = array(trim($fieldvalue),$userid);\n\t\t\t$result = $adb->pquery($query, $params);\n\t\t\tif ($adb->num_rows($result) > 0) {\n\t\t\t\techo ':#:ERR'.$mod_strings['LBL_ASTERISKEXTENSIONS_EXIST'].$mod_strings['LBL_FORUSER'].getUserFullName($result->fields['userid']);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (($fieldname=='currency_grouping_separator' || $fieldname=='currency_decimal_separator')\n\t\t\t&& $userObj->column_fields['currency_grouping_separator']==$userObj->column_fields['currency_decimal_separator']\n\t\t) {\n\t\t\techo ':#:ERR'.$mod_strings['LBL_CURRENCY_SEPARATORS_INCORRECT'];\n\t\t\treturn false;\n\t\t}\n\t\tif ($fieldname == 'internal_mailer' && isset($_SESSION['internal_mailer']) && $_SESSION['internal_mailer'] != $userObj->column_fields['internal_mailer']) {\n\t\t\tcoreBOS_Session::set('internal_mailer', $userObj->column_fields['internal_mailer']);\n\t\t}\n\t\t$userObj->id = $userid;\n\t\t$userObj->mode = 'edit';\n\t\t$userObj->homeorder_array[] = 'Tag Cloud';\n\t\t$homeStuffOrder = $userObj->getHomeStuffOrder($userid);\n\t\tforeach ($homeStuffOrder as $widget => $visible) {\n\t\t\t$_REQUEST[$widget] = $visible;\n\t\t}\n\t\t$_REQUEST['tagcloudview'] = $homeStuffOrder['Tag Cloud'];\n\t\t$userObj->save('Users');\n\t\tif ($userObj->id != '') {\n\t\t\techo ':#:SUCCESS:#:';\n\t\t\t$_REQUEST['action'] = $currentModule;\n\t\t\tdecide_to_html();\n\t\t\trequire_once 'modules/'.$currentModule.'/DetailView.php';\n\t\t\t$_REQUEST['action'] = $currentModule.'Ajax';\n\t\t\tdecide_to_html();\n\t\t} else {\n\t\t\techo ':#:FAILURE';\n\t\t}\n\t} else {\n\t\techo ':#:FAILURE';\n\t}\n}\n?>", "<?php\n/*+**********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n ************************************************************************************/\nrequire_once 'Smarty_setup.php';\nrequire_once 'modules/Users/Users.php';\nrequire_once 'include/logging.php';\nrequire_once 'include/utils/UserInfoUtil.php';\n$log = LoggerManager::getLogger('index');\n\nglobal $adb;\n$user_name = empty($_REQUEST['userName']) ? '' : vtlib_purify($_REQUEST['userName']);\nif (isset($_REQUEST['status']) && $_REQUEST['status'] != '') {\n\t$_REQUEST['status']= vtlib_purify($_REQUEST['status']);\n} else {\n\t$_REQUEST['status']='Active';\n}\n\nif (isset($_REQUEST['dup_check']) && $_REQUEST['dup_check'] != '') {\n\t$user_query = 'SELECT user_name FROM vtiger_users WHERE user_name =?';\n\t$user_result = $adb->pquery($user_query, array($user_name));\n\t$group_query = 'SELECT groupname FROM vtiger_groups WHERE groupname =?';\n\t$group_result = $adb->pquery($group_query, array($user_name));\n\tif ($adb->num_rows($user_result) > 0) {\n\t\techo $mod_strings['LBL_USERNAME_EXIST'];\n\t\tdie;\n\t} elseif ($adb->num_rows($group_result) > 0) {\n\t\techo $mod_strings['LBL_GROUPNAME_EXIST'];\n\t\tdie;\n\t} else {\n\t\techo 'SUCCESS';\n\t\tdie;\n\t}\n}\nif (!empty($_REQUEST['user_role']) && !is_admin($current_user) && $_REQUEST['user_role'] != $current_user->roleid) {\n\t$log->fatal('SECURITY:Non-Admin user:'. $current_user->id . ' attempted to change user role');\n\t$smarty = new vtigerCRM_Smarty();\n\t$smarty->assign('APP', $app_strings);\n\t$smarty->assign('ERROR_MESSAGE_CLASS', 'cb-alert-danger');\n\t$smarty->assign('ERROR_MESSAGE', 'SECURITY: Non-Admin user attempted to change user role.');\n\t$smarty->display('applicationmessage.tpl');\n\texit;\n}\n\nif ((empty($_SESSION['Users_FORM_TOKEN']) || $_SESSION['Users_FORM_TOKEN']!==(int)$_REQUEST['form_token'])\n\t\t&& $_REQUEST['deleteImage'] != 'true' && $_REQUEST['changepassword'] != 'true'\n\t) {\n\theader('Location: index.php?action=index&module=Users&error_string='.urlencode(getTranslatedString('FORM_TOKEN_EXPIRED', 'Users')));\n\tdie;\n}\n\nif ((isset($_POST['record']) && !is_admin($current_user) && $_POST['record'] != $current_user->id) || (!isset($_POST['record']) && !is_admin($current_user))) {\n\t$smarty = new vtigerCRM_Smarty();\n\t$smarty->assign('APP', $app_strings);\n\t$smarty->assign('ERROR_MESSAGE_CLASS', 'cb-alert-danger');\n\t$smarty->assign('ERROR_MESSAGE', 'Unauthorized access to user administration.');\n\t$smarty->display('applicationmessage.tpl');\n\texit;\n}\n\n$focus = new Users();\nif (isset($_REQUEST['record']) && $_REQUEST['record'] != '') {\n\t$focus->mode='edit';\n\t$focus->id = vtlib_purify($_REQUEST['record']);\n\t$userrs = $adb->pquery('SELECT user_name FROM vtiger_users WHERE id=?', array($focus->id));\n\t$user_name = $adb->query_result($userrs, 0, 0);\n\tif ($current_user->id != $focus->id && in_array($user_name, $cbodBlockedUsers)) {\n\t\theader('Location: index.php?action=index&module=Users&error_string='.urlencode(getTranslatedString('ERR_CANNOTEDITUSER', 'Users')));\n\t\tdie();\n\t}\n} else {\n\t$focus->mode='';\n}\n\nif (isset($_REQUEST['deleteImage']) && $_REQUEST['deleteImage'] == 'true') {\n\t$focus->id = vtlib_purify($_REQUEST['recordid']);\n\t$focus->deleteImage();\n\techo 'SUCCESS';\n\texit;\n}\n\nif (isset($_REQUEST['changepassword']) && $_REQUEST['changepassword'] == 'true') {\n\t$focus->retrieve_entity_info($_REQUEST['record'], 'Users');\n\t$focus->id = vtlib_purify($_REQUEST['record']);\n\tif (isset($_REQUEST['new_password']) && !$focus->change_password(vtlib_purify($_REQUEST['old_password']), vtlib_purify(substr($_REQUEST['new_password'], 0, 1024)))) {\n\t\theader('Location: index.php?action=DetailView&module=Users&record='.$focus->id.'&error_string='.urlencode($focus->error_string));\n\t\texit;\n\t}\n}\n\nif (empty($_REQUEST['changepassword']) || $_REQUEST['changepassword'] != 'true') {\n\tif (strtolower($current_user->is_admin) == 'off' && $current_user->id != $focus->id) {\n\t\t$log->fatal('SECURITY:Non-Admin '. $current_user->id . ' attempted to change settings for user:'. $focus->id);\n\t\theader('Location: index.php?module=Users&action=Logout');\n\t\texit;\n\t}\n\tif (strtolower($current_user->is_admin) == 'off' && isset($_POST['is_admin']) && strtolower($_POST['is_admin']) == 'on') {\n\t\t$log->fatal('SECURITY:Non-Admin '. $current_user->id . ' attempted to change is_admin settings for user:'. $focus->id);\n\t\theader('Location: index.php?module=Users&action=Logout');\n\t\texit;\n\t}\n\n\tif (!isset($_POST['is_admin'])) {\n\t\t$_REQUEST['is_admin'] = 'off';\n\t}\n\t// rearrange the home page and tab\n\tif (!isset($_POST['deleted'])) {\n\t\t$_REQUEST['deleted'] = '0';\n\t}\n\tif (!isset($_POST['homeorder']) || $_POST['homeorder'] == '') {\n\t\t$_REQUEST['homeorder'] = 'ILTI,QLTQ,ALVT,PLVT,CVLVT,HLT,OLV,GRT,OLTSO';\n\t}\n\tif (isset($_REQUEST['internal_mailer']) && $_REQUEST['internal_mailer'] == 'on') {\n\t\t$focus->column_fields['internal_mailer'] = 1;\n\t} else {\n\t\t$focus->column_fields['internal_mailer'] = 0;\n\t}\n\tif (isset($_SESSION['internal_mailer']) && $_SESSION['internal_mailer'] != $focus->column_fields['internal_mailer']) {\n\t\tcoreBOS_Session::set('internal_mailer', $focus->column_fields['internal_mailer']);\n\t}\n\tsetObjectValuesFromRequest($focus);\n\t$focus->column_fields['email1'] = filter_var($focus->column_fields['email1'], FILTER_SANITIZE_EMAIL);\n\t$focus->column_fields['email2'] = filter_var($focus->column_fields['email2'], FILTER_SANITIZE_EMAIL);\n\t$focus->column_fields['secondaryemail'] = filter_var($focus->column_fields['secondaryemail'], FILTER_SANITIZE_EMAIL);\n\n\tif (empty($focus->column_fields['roleid']) && !empty($_POST['user_role'])) {\n\t\t$focus->column_fields['roleid'] = $_POST['user_role'];\n\t}\n\t$focus->save('Users');\n\n\t$return_id = $focus->id;\n\n\tif (isset($focus->id) && $focus->id != '' && isset($_POST['group_name']) && $_POST['group_name'] != '') {\n\t\tupdateUsers2GroupMapping($_POST['group_name'], $focus->id);\n\t}\n}\nif (isset($_POST['return_module']) && $_POST['return_module'] != '') {\n\t$return_module = vtlib_purify($_REQUEST['return_module']);\n} else {\n\t$return_module = 'Users';\n}\nif (isset($_POST['return_action']) && $_POST['return_action'] != '') {\n\t$return_action = vtlib_purify($_REQUEST['return_action']);\n} else {\n\t$return_action = 'DetailView';\n}\nif (!empty($_REQUEST['return_id'])) {\n\t$return_id = vtlib_purify($_REQUEST['return_id']);\n}\n\n// Check to see if the mode is User Creation and if yes, then sending the email notification to the User with Login details.\n$error_str = '';\nif (isset($_REQUEST['mode']) && $_REQUEST['mode'] == 'create') {\n\tglobal $app_strings, $mod_strings, $default_charset;\n\trequire_once 'modules/Emails/mail.php';\n\t$user_emailid = $focus->column_fields['email1'];\n\n\t$subject = $mod_strings['User Login Details'];\n\t$email_body = $app_strings['MSG_DEAR'].' '. $focus->column_fields['last_name'] .',<br><br>';\n\t$email_body .= $app_strings['LBL_PLEASE_CLICK'] . \" <a href='\" . $site_URL . \"' target='_blank'>\"\n\t\t\t\t. $app_strings['LBL_HERE'] . '</a> ' . $mod_strings['LBL_TO_LOGIN'] . '<br><br>';\n\t$email_body .= $mod_strings['LBL_USER_NAME'] . ' : ' . $focus->column_fields['user_name'] . '<br>';\n\t$email_body .= $mod_strings['LBL_PASSWORD'] . ' : ' . $focus->column_fields['user_password'] . '<br>';\n\t$email_body .= $mod_strings['LBL_ROLE_NAME'] . ' : ' . getRoleName($_POST['user_role']) . '<br>';\n\t$email_body .= '<br>' . $app_strings['MSG_THANKS'] . '<br>' . $current_user->user_name;\n\n\t$HELPDESK_SUPPORT_EMAIL_ID = GlobalVariable::getVariable('HelpDesk_Support_EMail', 'support@your_support_domain.tld', 'HelpDesk');\n\t$HELPDESK_SUPPORT_NAME = GlobalVariable::getVariable('HelpDesk_Support_Name', 'your-support name', 'HelpDesk');\n\t$mail_status = send_mail('Users', $user_emailid, $HELPDESK_SUPPORT_NAME, $HELPDESK_SUPPORT_EMAIL_ID, $subject, $email_body);\n\tif ($mail_status != 1) {\n\t\t$mail_status_str = $user_emailid.'='.$mail_status.'&&&';\n\t\t$error_str = getMailErrorString($mail_status_str);\n\t}\n}\n$location = 'Location: index.php?action='.urlencode(vtlib_purify($return_action)).\n\t'&module='.urlencode(vtlib_purify($return_module)).\n\t'&record='.urlencode(vtlib_purify($return_id));\n\nif ($error_str != '') {\n\t$user = $focus->column_fields['user_name'];\n\t$location .= '&user=' . urlencode($user) . '&' . $error_str;\n}\n\nheader($location);\n?>\n"], "fixing_code": ["<?php\n/*+********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n ********************************************************************************/\nrequire_once 'include/logging.php';\nrequire_once 'modules/Users/Users.php';\nrequire_once 'include/database/PearDatabase.php';\nrequire_once 'Smarty_setup.php';\nglobal $adb ,$mod_strings, $current_user, $currentModule, $app_strings, $theme;\n\n$smarty = new vtigerCRM_Smarty();\n$local_log = LoggerManager::getLogger('UsersAjax');\n$ajaxaction = vtlib_purify($_REQUEST['ajxaction']);\nif ($ajaxaction == 'DETAILVIEW') {\n\t$userid = vtlib_purify($_REQUEST['recordid']);\n\t$fieldname = vtlib_purify($_REQUEST['fldName']);\n\t$fieldvalue = utf8RawUrlDecode(vtlib_purify($_REQUEST['fieldValue']));\n\tif (empty($_SESSION['Users_FORM_TOKEN']) || $_SESSION['Users_FORM_TOKEN'] !== (int)$_REQUEST['form_token'] ||\n\t\t(!is_admin($current_user) && $current_user->id != $userid)) {\n\t\techo ':#:ERR'.($app_strings['LBL_PERMISSION']);\n\t\tdie;\n\t}\n\tif ($userid != '') {\n\t\t$userObj = new Users();\n\t\t$userObj->retrieve_entity_info($userid, 'Users');\n\t\t$userObj->column_fields[$fieldname] = $fieldvalue;\n\n\t\tif ($fieldname=='asterisk_extension' && trim($fieldvalue)!='') {\n\t\t\t$query = \"select userid from vtiger_asteriskextensions\n\t\t\t\tinner join vtiger_users on vtiger_users.id=vtiger_asteriskextensions.userid\n\t\t\t\twhere status='Active' and asterisk_extension =? and vtiger_users.id!=?\";\n\t\t\t$params = array(trim($fieldvalue),$userid);\n\t\t\t$result = $adb->pquery($query, $params);\n\t\t\tif ($adb->num_rows($result) > 0) {\n\t\t\t\techo ':#:ERR'.$mod_strings['LBL_ASTERISKEXTENSIONS_EXIST'].$mod_strings['LBL_FORUSER'].getUserFullName($result->fields['userid']);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (($fieldname=='currency_grouping_separator' || $fieldname=='currency_decimal_separator')\n\t\t\t&& $userObj->column_fields['currency_grouping_separator']==$userObj->column_fields['currency_decimal_separator']\n\t\t) {\n\t\t\techo ':#:ERR'.$mod_strings['LBL_CURRENCY_SEPARATORS_INCORRECT'];\n\t\t\treturn false;\n\t\t}\n\t\tif ($fieldname == 'internal_mailer' && isset($_SESSION['internal_mailer']) && $_SESSION['internal_mailer'] != $userObj->column_fields['internal_mailer']) {\n\t\t\tcoreBOS_Session::set('internal_mailer', $userObj->column_fields['internal_mailer']);\n\t\t}\n\t\t$userObj->id = $userid;\n\t\t$userObj->mode = 'edit';\n\t\t$userObj->homeorder_array[] = 'Tag Cloud';\n\t\t$homeStuffOrder = $userObj->getHomeStuffOrder($userid);\n\t\tforeach ($homeStuffOrder as $widget => $visible) {\n\t\t\t$_REQUEST[$widget] = $visible;\n\t\t}\n\t\t$_REQUEST['tagcloudview'] = $homeStuffOrder['Tag Cloud'];\n\t\t$userObj->column_fields['first_name'] = vtlib_purify($userObj->column_fields['first_name']);\n\t\t$userObj->column_fields['last_name'] = vtlib_purify($userObj->column_fields['last_name']);\n\t\t$userObj->column_fields['email1'] = filter_var($userObj->column_fields['email1'], FILTER_SANITIZE_EMAIL);\n\t\t$userObj->column_fields['email2'] = filter_var($userObj->column_fields['email2'], FILTER_SANITIZE_EMAIL);\n\t\t$userObj->column_fields['secondaryemail'] = filter_var($userObj->column_fields['secondaryemail'], FILTER_SANITIZE_EMAIL);\n\t\t$userObj->save('Users');\n\t\tif ($userObj->id != '') {\n\t\t\techo ':#:SUCCESS:#:';\n\t\t\t$_REQUEST['action'] = $currentModule;\n\t\t\tdecide_to_html();\n\t\t\trequire_once 'modules/'.$currentModule.'/DetailView.php';\n\t\t\t$_REQUEST['action'] = $currentModule.'Ajax';\n\t\t\tdecide_to_html();\n\t\t} else {\n\t\t\techo ':#:FAILURE';\n\t\t}\n\t} else {\n\t\techo ':#:FAILURE';\n\t}\n}\n?>", "<?php\n/*+**********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n ************************************************************************************/\nrequire_once 'Smarty_setup.php';\nrequire_once 'modules/Users/Users.php';\nrequire_once 'include/logging.php';\nrequire_once 'include/utils/UserInfoUtil.php';\n$log = LoggerManager::getLogger('index');\n\nglobal $adb;\n$user_name = empty($_REQUEST['userName']) ? '' : vtlib_purify($_REQUEST['userName']);\nif (isset($_REQUEST['status']) && $_REQUEST['status'] != '') {\n\t$_REQUEST['status']= vtlib_purify($_REQUEST['status']);\n} else {\n\t$_REQUEST['status']='Active';\n}\n\nif (isset($_REQUEST['dup_check']) && $_REQUEST['dup_check'] != '') {\n\t$user_query = 'SELECT user_name FROM vtiger_users WHERE user_name =?';\n\t$user_result = $adb->pquery($user_query, array($user_name));\n\t$group_query = 'SELECT groupname FROM vtiger_groups WHERE groupname =?';\n\t$group_result = $adb->pquery($group_query, array($user_name));\n\tif ($adb->num_rows($user_result) > 0) {\n\t\techo $mod_strings['LBL_USERNAME_EXIST'];\n\t\tdie;\n\t} elseif ($adb->num_rows($group_result) > 0) {\n\t\techo $mod_strings['LBL_GROUPNAME_EXIST'];\n\t\tdie;\n\t} else {\n\t\techo 'SUCCESS';\n\t\tdie;\n\t}\n}\nif (!empty($_REQUEST['user_role']) && !is_admin($current_user) && $_REQUEST['user_role'] != $current_user->roleid) {\n\t$log->fatal('SECURITY:Non-Admin user:'. $current_user->id . ' attempted to change user role');\n\t$smarty = new vtigerCRM_Smarty();\n\t$smarty->assign('APP', $app_strings);\n\t$smarty->assign('ERROR_MESSAGE_CLASS', 'cb-alert-danger');\n\t$smarty->assign('ERROR_MESSAGE', 'SECURITY: Non-Admin user attempted to change user role.');\n\t$smarty->display('applicationmessage.tpl');\n\texit;\n}\n\nif ((empty($_SESSION['Users_FORM_TOKEN']) || $_SESSION['Users_FORM_TOKEN']!==(int)$_REQUEST['form_token'])\n\t\t&& $_REQUEST['deleteImage'] != 'true' && $_REQUEST['changepassword'] != 'true'\n\t) {\n\theader('Location: index.php?action=index&module=Users&error_string='.urlencode(getTranslatedString('FORM_TOKEN_EXPIRED', 'Users')));\n\tdie;\n}\n\nif ((isset($_POST['record']) && !is_admin($current_user) && $_POST['record'] != $current_user->id) || (!isset($_POST['record']) && !is_admin($current_user))) {\n\t$smarty = new vtigerCRM_Smarty();\n\t$smarty->assign('APP', $app_strings);\n\t$smarty->assign('ERROR_MESSAGE_CLASS', 'cb-alert-danger');\n\t$smarty->assign('ERROR_MESSAGE', 'Unauthorized access to user administration.');\n\t$smarty->display('applicationmessage.tpl');\n\texit;\n}\n\n$focus = new Users();\nif (isset($_REQUEST['record']) && $_REQUEST['record'] != '') {\n\t$focus->mode='edit';\n\t$focus->id = vtlib_purify($_REQUEST['record']);\n\t$userrs = $adb->pquery('SELECT user_name FROM vtiger_users WHERE id=?', array($focus->id));\n\t$user_name = $adb->query_result($userrs, 0, 0);\n\tif ($current_user->id != $focus->id && in_array($user_name, $cbodBlockedUsers)) {\n\t\theader('Location: index.php?action=index&module=Users&error_string='.urlencode(getTranslatedString('ERR_CANNOTEDITUSER', 'Users')));\n\t\tdie();\n\t}\n} else {\n\t$focus->mode='';\n}\n\nif (isset($_REQUEST['deleteImage']) && $_REQUEST['deleteImage'] == 'true') {\n\t$focus->id = vtlib_purify($_REQUEST['recordid']);\n\t$focus->deleteImage();\n\techo 'SUCCESS';\n\texit;\n}\n\nif (isset($_REQUEST['changepassword']) && $_REQUEST['changepassword'] == 'true') {\n\t$focus->retrieve_entity_info($_REQUEST['record'], 'Users');\n\t$focus->id = vtlib_purify($_REQUEST['record']);\n\tif (isset($_REQUEST['new_password']) && !$focus->change_password(vtlib_purify($_REQUEST['old_password']), vtlib_purify(substr($_REQUEST['new_password'], 0, 1024)))) {\n\t\theader('Location: index.php?action=DetailView&module=Users&record='.$focus->id.'&error_string='.urlencode($focus->error_string));\n\t\texit;\n\t}\n}\n\nif (empty($_REQUEST['changepassword']) || $_REQUEST['changepassword'] != 'true') {\n\tif (strtolower($current_user->is_admin) == 'off' && $current_user->id != $focus->id) {\n\t\t$log->fatal('SECURITY:Non-Admin '. $current_user->id . ' attempted to change settings for user:'. $focus->id);\n\t\theader('Location: index.php?module=Users&action=Logout');\n\t\texit;\n\t}\n\tif (strtolower($current_user->is_admin) == 'off' && isset($_POST['is_admin']) && strtolower($_POST['is_admin']) == 'on') {\n\t\t$log->fatal('SECURITY:Non-Admin '. $current_user->id . ' attempted to change is_admin settings for user:'. $focus->id);\n\t\theader('Location: index.php?module=Users&action=Logout');\n\t\texit;\n\t}\n\n\tif (!isset($_POST['is_admin'])) {\n\t\t$_REQUEST['is_admin'] = 'off';\n\t}\n\t// rearrange the home page and tab\n\tif (!isset($_POST['deleted'])) {\n\t\t$_REQUEST['deleted'] = '0';\n\t}\n\tif (!isset($_POST['homeorder']) || $_POST['homeorder'] == '') {\n\t\t$_REQUEST['homeorder'] = 'ILTI,QLTQ,ALVT,PLVT,CVLVT,HLT,OLV,GRT,OLTSO';\n\t}\n\tif (isset($_REQUEST['internal_mailer']) && $_REQUEST['internal_mailer'] == 'on') {\n\t\t$focus->column_fields['internal_mailer'] = 1;\n\t} else {\n\t\t$focus->column_fields['internal_mailer'] = 0;\n\t}\n\tif (isset($_SESSION['internal_mailer']) && $_SESSION['internal_mailer'] != $focus->column_fields['internal_mailer']) {\n\t\tcoreBOS_Session::set('internal_mailer', $focus->column_fields['internal_mailer']);\n\t}\n\tsetObjectValuesFromRequest($focus);\n\t$focus->column_fields['first_name'] = vtlib_purify($focus->column_fields['first_name']);\n\t$focus->column_fields['last_name'] = vtlib_purify($focus->column_fields['last_name']);\n\t$focus->column_fields['email1'] = filter_var($focus->column_fields['email1'], FILTER_SANITIZE_EMAIL);\n\t$focus->column_fields['email2'] = filter_var($focus->column_fields['email2'], FILTER_SANITIZE_EMAIL);\n\t$focus->column_fields['secondaryemail'] = filter_var($focus->column_fields['secondaryemail'], FILTER_SANITIZE_EMAIL);\n\n\tif (empty($focus->column_fields['roleid']) && !empty($_POST['user_role'])) {\n\t\t$focus->column_fields['roleid'] = $_POST['user_role'];\n\t}\n\t$focus->save('Users');\n\n\t$return_id = $focus->id;\n\n\tif (isset($focus->id) && $focus->id != '' && isset($_POST['group_name']) && $_POST['group_name'] != '') {\n\t\tupdateUsers2GroupMapping($_POST['group_name'], $focus->id);\n\t}\n}\nif (isset($_POST['return_module']) && $_POST['return_module'] != '') {\n\t$return_module = vtlib_purify($_REQUEST['return_module']);\n} else {\n\t$return_module = 'Users';\n}\nif (isset($_POST['return_action']) && $_POST['return_action'] != '') {\n\t$return_action = vtlib_purify($_REQUEST['return_action']);\n} else {\n\t$return_action = 'DetailView';\n}\nif (!empty($_REQUEST['return_id'])) {\n\t$return_id = vtlib_purify($_REQUEST['return_id']);\n}\n\n// Check to see if the mode is User Creation and if yes, then sending the email notification to the User with Login details.\n$error_str = '';\nif (isset($_REQUEST['mode']) && $_REQUEST['mode'] == 'create') {\n\tglobal $app_strings, $mod_strings, $default_charset;\n\trequire_once 'modules/Emails/mail.php';\n\t$user_emailid = $focus->column_fields['email1'];\n\n\t$subject = $mod_strings['User Login Details'];\n\t$email_body = $app_strings['MSG_DEAR'].' '. $focus->column_fields['last_name'] .',<br><br>';\n\t$email_body .= $app_strings['LBL_PLEASE_CLICK'] . \" <a href='\" . $site_URL . \"' target='_blank'>\"\n\t\t\t\t. $app_strings['LBL_HERE'] . '</a> ' . $mod_strings['LBL_TO_LOGIN'] . '<br><br>';\n\t$email_body .= $mod_strings['LBL_USER_NAME'] . ' : ' . $focus->column_fields['user_name'] . '<br>';\n\t$email_body .= $mod_strings['LBL_PASSWORD'] . ' : ' . $focus->column_fields['user_password'] . '<br>';\n\t$email_body .= $mod_strings['LBL_ROLE_NAME'] . ' : ' . getRoleName($_POST['user_role']) . '<br>';\n\t$email_body .= '<br>' . $app_strings['MSG_THANKS'] . '<br>' . $current_user->user_name;\n\n\t$HELPDESK_SUPPORT_EMAIL_ID = GlobalVariable::getVariable('HelpDesk_Support_EMail', 'support@your_support_domain.tld', 'HelpDesk');\n\t$HELPDESK_SUPPORT_NAME = GlobalVariable::getVariable('HelpDesk_Support_Name', 'your-support name', 'HelpDesk');\n\t$mail_status = send_mail('Users', $user_emailid, $HELPDESK_SUPPORT_NAME, $HELPDESK_SUPPORT_EMAIL_ID, $subject, $email_body);\n\tif ($mail_status != 1) {\n\t\t$mail_status_str = $user_emailid.'='.$mail_status.'&&&';\n\t\t$error_str = getMailErrorString($mail_status_str);\n\t}\n}\n$location = 'Location: index.php?action='.urlencode(vtlib_purify($return_action)).\n\t'&module='.urlencode(vtlib_purify($return_module)).\n\t'&record='.urlencode(vtlib_purify($return_id));\n\nif ($error_str != '') {\n\t$user = $focus->column_fields['user_name'];\n\t$location .= '&user=' . urlencode($user) . '&' . $error_str;\n}\n\nheader($location);\n?>\n"], "filenames": ["modules/Users/DetailViewAjax.php", "modules/Users/Save.php"], "buggy_code_start_loc": [60, 126], "buggy_code_end_loc": [60, 126], "fixing_code_start_loc": [61, 127], "fixing_code_end_loc": [66, 129], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository tsolucio/corebos prior to 8.", "other": {"cve": {"id": "CVE-2023-3074", "sourceIdentifier": "security@huntr.dev", "published": "2023-06-02T18:15:09.650", "lastModified": "2023-06-08T17:42:27.113", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository tsolucio/corebos prior to 8."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 8.6, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 4.7}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:corebos:corebos:*:*:*:*:*:*:*:*", "versionEndExcluding": "8.0", "matchCriteriaId": "2ED1C4A9-9F39-4663-9E1B-6270C9CC2539"}]}]}], "references": [{"url": "https://github.com/tsolucio/corebos/commit/659e328c06a127249e651100d2bc7ec1d2dd8533", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/6132f557-3f0f-465d-990f-4329313349a4", "source": "security@huntr.dev", "tags": ["Exploit", "Patch"]}]}, "github_commit_url": "https://github.com/tsolucio/corebos/commit/659e328c06a127249e651100d2bc7ec1d2dd8533"}}