{"buggy_code": ["//\n// jQuery MiniColors: A tiny color picker built on jQuery\n//\n// Developed by Cory LaViska for A Beautiful Site, LLC\n//\n// Licensed under the MIT license: http://opensource.org/licenses/MIT\n//\n(function (factory) {\n  if(typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['jquery'], factory);\n  } else if(typeof exports === 'object') {\n    // Node/CommonJS\n    module.exports = factory(require('jquery'));\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n}(function ($) {\n  'use strict';\n\n  // Defaults\n  $.minicolors = {\n    defaults: {\n      animationSpeed: 50,\n      animationEasing: 'swing',\n      change: null,\n      changeDelay: 0,\n      control: 'hue',\n      defaultValue: '',\n      format: 'hex',\n      hide: null,\n      hideSpeed: 100,\n      inline: false,\n      keywords: '',\n      letterCase: 'lowercase',\n      opacity: false,\n      position: 'bottom',\n      show: null,\n      showSpeed: 100,\n      theme: 'default',\n      swatches: []\n    }\n  };\n\n  // Public methods\n  $.extend($.fn, {\n    minicolors: function(method, data) {\n\n      switch(method) {\n        // Destroy the control\n        case 'destroy':\n          $(this).each(function() {\n            destroy($(this));\n          });\n          return $(this);\n\n        // Hide the color picker\n        case 'hide':\n          hide();\n          return $(this);\n\n        // Get/set opacity\n        case 'opacity':\n          // Getter\n          if(data === undefined) {\n            // Getter\n            return $(this).attr('data-opacity');\n          } else {\n            // Setter\n            $(this).each(function() {\n              updateFromInput($(this).attr('data-opacity', data));\n            });\n          }\n          return $(this);\n\n        // Get an RGB(A) object based on the current color/opacity\n        case 'rgbObject':\n          return rgbObject($(this), method === 'rgbaObject');\n\n        // Get an RGB(A) string based on the current color/opacity\n        case 'rgbString':\n        case 'rgbaString':\n          return rgbString($(this), method === 'rgbaString');\n\n        // Get/set settings on the fly\n        case 'settings':\n          if(data === undefined) {\n            return $(this).data('minicolors-settings');\n          } else {\n            // Setter\n            $(this).each(function() {\n              var settings = $(this).data('minicolors-settings') || {};\n              destroy($(this));\n              $(this).minicolors($.extend(true, settings, data));\n            });\n          }\n          return $(this);\n\n        // Show the color picker\n        case 'show':\n          show($(this).eq(0));\n          return $(this);\n\n        // Get/set the hex color value\n        case 'value':\n          if(data === undefined) {\n            // Getter\n            return $(this).val();\n          } else {\n            // Setter\n            $(this).each(function() {\n              if(typeof(data) === 'object' && data !== null) {\n                if(data.opacity !== undefined) {\n                  $(this).attr('data-opacity', keepWithin(data.opacity, 0, 1));\n                }\n                if(data.color) {\n                  $(this).val(data.color);\n                }\n              } else {\n                $(this).val(data);\n              }\n              updateFromInput($(this));\n            });\n          }\n          return $(this);\n\n        // Initializes the control\n        default:\n          if(method !== 'create') data = method;\n          $(this).each(function() {\n            init($(this), data);\n          });\n          return $(this);\n\n      }\n\n    }\n  });\n\n  // Initialize input elements\n  function init(input, settings) {\n    var minicolors = $('<div class=\"minicolors\" />');\n    var defaults = $.minicolors.defaults;\n    var name;\n    var size;\n    var swatches;\n    var swatch;\n    var swatchString;\n    var panel;\n    var i;\n\n    // Do nothing if already initialized\n    if(input.data('minicolors-initialized')) return;\n\n    // Handle settings\n    settings = $.extend(true, {}, defaults, settings);\n\n    // The wrapper\n    minicolors\n      .addClass('minicolors-theme-' + settings.theme)\n      .toggleClass('minicolors-with-opacity', settings.opacity);\n\n    // Custom positioning\n    if(settings.position !== undefined) {\n      $.each(settings.position.split(' '), function() {\n        minicolors.addClass('minicolors-position-' + this);\n      });\n    }\n\n    // Input size\n    if(settings.format === 'rgb') {\n      size = settings.opacity ? '25' : '20';\n    } else {\n      size = settings.keywords ? '11' : '7';\n    }\n\n    // The input\n    input\n      .addClass('minicolors-input')\n      .data('minicolors-initialized', false)\n      .data('minicolors-settings', settings)\n      .prop('size', size)\n      .wrap(minicolors)\n      .after(\n        '<div class=\"minicolors-panel minicolors-slider-' + settings.control + '\">' +\n                '<div class=\"minicolors-slider minicolors-sprite\">' +\n                  '<div class=\"minicolors-picker\"></div>' +\n                '</div>' +\n                '<div class=\"minicolors-opacity-slider minicolors-sprite\">' +\n                  '<div class=\"minicolors-picker\"></div>' +\n                '</div>' +\n                '<div class=\"minicolors-grid minicolors-sprite\">' +\n                  '<div class=\"minicolors-grid-inner\"></div>' +\n                  '<div class=\"minicolors-picker\"><div></div></div>' +\n                '</div>' +\n              '</div>'\n      );\n\n    // The swatch\n    if(!settings.inline) {\n      input.after('<span class=\"minicolors-swatch minicolors-sprite minicolors-input-swatch\"><span class=\"minicolors-swatch-color\"></span></span>');\n      input.next('.minicolors-input-swatch').on('click', function(event) {\n        event.preventDefault();\n        input.trigger('focus');\n      });\n    }\n\n    // Prevent text selection in IE\n    panel = input.parent().find('.minicolors-panel');\n    panel.on('selectstart', function() { return false; }).end();\n\n    // Swatches\n    if(settings.swatches && settings.swatches.length !== 0) {\n      panel.addClass('minicolors-with-swatches');\n      swatches = $('<ul class=\"minicolors-swatches\"></ul>')\n        .appendTo(panel);\n      for(i = 0; i < settings.swatches.length; ++i) {\n        // allow for custom objects as swatches\n        if(typeof settings.swatches[i] === 'object') {\n          name = settings.swatches[i].name;\n          swatch = settings.swatches[i].color;\n        } else {\n          name = '';\n          swatch = settings.swatches[i];\n        }\n        swatchString = swatch;\n        swatch = isRgb(swatch) ? parseRgb(swatch, true) : hex2rgb(parseHex(swatch, true));\n        $('<li class=\"minicolors-swatch minicolors-sprite\"><span class=\"minicolors-swatch-color\" title=\"' + name + '\"></span></li>')\n          .appendTo(swatches)\n          .data('swatch-color', swatchString)\n          .find('.minicolors-swatch-color')\n          .css({\n            backgroundColor: ((swatchString !== 'transparent') ? rgb2hex(swatch) : 'transparent'),\n            opacity: String(swatch.a)\n          });\n        settings.swatches[i] = swatch;\n      }\n    }\n\n    // Inline controls\n    if(settings.inline) input.parent().addClass('minicolors-inline');\n\n    updateFromInput(input, false);\n\n    input.data('minicolors-initialized', true);\n  }\n\n  // Returns the input back to its original state\n  function destroy(input) {\n    var minicolors = input.parent();\n\n    // Revert the input element\n    input\n      .removeData('minicolors-initialized')\n      .removeData('minicolors-settings')\n      .removeProp('size')\n      .removeClass('minicolors-input');\n\n    // Remove the wrap and destroy whatever remains\n    minicolors.before(input).remove();\n  }\n\n  // Shows the specified dropdown panel\n  function show(input) {\n    var minicolors = input.parent();\n    var panel = minicolors.find('.minicolors-panel');\n    var settings = input.data('minicolors-settings');\n\n    // Do nothing if uninitialized, disabled, inline, or already open\n    if(\n      !input.data('minicolors-initialized') ||\n      input.prop('disabled') ||\n      minicolors.hasClass('minicolors-inline') ||\n      minicolors.hasClass('minicolors-focus')\n    ) return;\n\n    hide();\n\n    minicolors.addClass('minicolors-focus');\n    if (panel.animate) {\n      panel\n        .stop(true, true)\n        .fadeIn(settings.showSpeed, function () {\n          if (settings.show) settings.show.call(input.get(0));\n        });\n    } else {\n      panel.show();\n      if (settings.show) settings.show.call(input.get(0));\n    }\n  }\n\n  // Hides all dropdown panels\n  function hide() {\n    $('.minicolors-focus').each(function() {\n      var minicolors = $(this);\n      var input = minicolors.find('.minicolors-input');\n      var panel = minicolors.find('.minicolors-panel');\n      var settings = input.data('minicolors-settings');\n\n      if (panel.animate) {\n        panel.fadeOut(settings.hideSpeed, function () {\n          if (settings.hide) settings.hide.call(input.get(0));\n          minicolors.removeClass('minicolors-focus');\n        });\n      } else {\n        panel.hide();\n        if (settings.hide) settings.hide.call(input.get(0));\n        minicolors.removeClass('minicolors-focus');\n      }\n    });\n  }\n\n  // Moves the selected picker\n  function move(target, event, animate) {\n    var input = target.parents('.minicolors').find('.minicolors-input');\n    var settings = input.data('minicolors-settings');\n    var picker = target.find('[class$=-picker]');\n    var offsetX = target.offset().left;\n    var offsetY = target.offset().top;\n    var x = Math.round(event.pageX - offsetX);\n    var y = Math.round(event.pageY - offsetY);\n    var duration = animate ? settings.animationSpeed : 0;\n    var wx, wy, r, phi, styles;\n\n    // Touch support\n    if(event.originalEvent.changedTouches) {\n      x = event.originalEvent.changedTouches[0].pageX - offsetX;\n      y = event.originalEvent.changedTouches[0].pageY - offsetY;\n    }\n\n    // Constrain picker to its container\n    if(x < 0) x = 0;\n    if(y < 0) y = 0;\n    if(x > target.width()) x = target.width();\n    if(y > target.height()) y = target.height();\n\n    // Constrain color wheel values to the wheel\n    if(target.parent().is('.minicolors-slider-wheel') && picker.parent().is('.minicolors-grid')) {\n      wx = 75 - x;\n      wy = 75 - y;\n      r = Math.sqrt(wx * wx + wy * wy);\n      phi = Math.atan2(wy, wx);\n      if(phi < 0) phi += Math.PI * 2;\n      if(r > 75) {\n        r = 75;\n        x = 75 - (75 * Math.cos(phi));\n        y = 75 - (75 * Math.sin(phi));\n      }\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    // Move the picker\n    styles = {\n      top: y + 'px'\n    };\n    if(target.is('.minicolors-grid')) {\n      styles.left = x + 'px';\n    }\n    if (picker.animate) {\n      picker\n        .stop(true)\n        .animate(styles, duration, settings.animationEasing, function() {\n          updateFromControl(input, target);\n        });\n    } else {\n      picker\n        .css(styles);\n      updateFromControl(input, target);\n    }\n  }\n\n  // Sets the input based on the color picker values\n  function updateFromControl(input, target) {\n\n    function getCoords(picker, container) {\n      var left, top;\n      if(!picker.length || !container) return null;\n      left = picker.offset().left;\n      top = picker.offset().top;\n\n      return {\n        x: left - container.offset().left + (picker.outerWidth() / 2),\n        y: top - container.offset().top + (picker.outerHeight() / 2)\n      };\n    }\n\n    var hue, saturation, brightness, x, y, r, phi;\n    var hex = input.val();\n    var opacity = input.attr('data-opacity');\n\n    // Helpful references\n    var minicolors = input.parent();\n    var settings = input.data('minicolors-settings');\n    var swatch = minicolors.find('.minicolors-input-swatch');\n\n    // Panel objects\n    var grid = minicolors.find('.minicolors-grid');\n    var slider = minicolors.find('.minicolors-slider');\n    var opacitySlider = minicolors.find('.minicolors-opacity-slider');\n\n    // Picker objects\n    var gridPicker = grid.find('[class$=-picker]');\n    var sliderPicker = slider.find('[class$=-picker]');\n    var opacityPicker = opacitySlider.find('[class$=-picker]');\n\n    // Picker positions\n    var gridPos = getCoords(gridPicker, grid);\n    var sliderPos = getCoords(sliderPicker, slider);\n    var opacityPos = getCoords(opacityPicker, opacitySlider);\n\n    // Handle colors\n    if(target.is('.minicolors-grid, .minicolors-slider, .minicolors-opacity-slider')) {\n\n      // Determine HSB values\n      switch(settings.control) {\n        case 'wheel':\n          // Calculate hue, saturation, and brightness\n          x = (grid.width() / 2) - gridPos.x;\n          y = (grid.height() / 2) - gridPos.y;\n          r = Math.sqrt(x * x + y * y);\n          phi = Math.atan2(y, x);\n          if(phi < 0) phi += Math.PI * 2;\n          if(r > 75) {\n            r = 75;\n            gridPos.x = 69 - (75 * Math.cos(phi));\n            gridPos.y = 69 - (75 * Math.sin(phi));\n          }\n          saturation = keepWithin(r / 0.75, 0, 100);\n          hue = keepWithin(phi * 180 / Math.PI, 0, 360);\n          brightness = keepWithin(100 - Math.floor(sliderPos.y * (100 / slider.height())), 0, 100);\n          hex = hsb2hex({\n            h: hue,\n            s: saturation,\n            b: brightness\n          });\n\n          // Update UI\n          slider.css('backgroundColor', hsb2hex({ h: hue, s: saturation, b: 100 }));\n          break;\n\n        case 'saturation':\n          // Calculate hue, saturation, and brightness\n          hue = keepWithin(parseInt(gridPos.x * (360 / grid.width()), 10), 0, 360);\n          saturation = keepWithin(100 - Math.floor(sliderPos.y * (100 / slider.height())), 0, 100);\n          brightness = keepWithin(100 - Math.floor(gridPos.y * (100 / grid.height())), 0, 100);\n          hex = hsb2hex({\n            h: hue,\n            s: saturation,\n            b: brightness\n          });\n\n          // Update UI\n          slider.css('backgroundColor', hsb2hex({ h: hue, s: 100, b: brightness }));\n          minicolors.find('.minicolors-grid-inner').css('opacity', saturation / 100);\n          break;\n\n        case 'brightness':\n          // Calculate hue, saturation, and brightness\n          hue = keepWithin(parseInt(gridPos.x * (360 / grid.width()), 10), 0, 360);\n          saturation = keepWithin(100 - Math.floor(gridPos.y * (100 / grid.height())), 0, 100);\n          brightness = keepWithin(100 - Math.floor(sliderPos.y * (100 / slider.height())), 0, 100);\n          hex = hsb2hex({\n            h: hue,\n            s: saturation,\n            b: brightness\n          });\n\n          // Update UI\n          slider.css('backgroundColor', hsb2hex({ h: hue, s: saturation, b: 100 }));\n          minicolors.find('.minicolors-grid-inner').css('opacity', 1 - (brightness / 100));\n          break;\n\n        default:\n          // Calculate hue, saturation, and brightness\n          hue = keepWithin(360 - parseInt(sliderPos.y * (360 / slider.height()), 10), 0, 360);\n          saturation = keepWithin(Math.floor(gridPos.x * (100 / grid.width())), 0, 100);\n          brightness = keepWithin(100 - Math.floor(gridPos.y * (100 / grid.height())), 0, 100);\n          hex = hsb2hex({\n            h: hue,\n            s: saturation,\n            b: brightness\n          });\n\n          // Update UI\n          grid.css('backgroundColor', hsb2hex({ h: hue, s: 100, b: 100 }));\n          break;\n      }\n\n      // Handle opacity\n      if(settings.opacity) {\n        opacity = parseFloat(1 - (opacityPos.y / opacitySlider.height())).toFixed(2);\n      } else {\n        opacity = 1;\n      }\n\n      updateInput(input, hex, opacity);\n    }\n    else {\n      // Set swatch color\n      swatch.find('span').css({\n        backgroundColor: hex,\n        opacity: String(opacity)\n      });\n\n      // Handle change event\n      doChange(input, hex, opacity);\n    }\n  }\n\n  // Sets the value of the input and does the appropriate conversions\n  // to respect settings, also updates the swatch\n  function updateInput(input, value, opacity) {\n    var rgb;\n\n    // Helpful references\n    var minicolors = input.parent();\n    var settings = input.data('minicolors-settings');\n    var swatch = minicolors.find('.minicolors-input-swatch');\n\n    if(settings.opacity) input.attr('data-opacity', opacity);\n\n    // Set color string\n    if(settings.format === 'rgb') {\n      // Returns RGB(A) string\n\n      // Checks for input format and does the conversion\n      if(isRgb(value)) {\n        rgb = parseRgb(value, true);\n      }\n      else {\n        rgb = hex2rgb(parseHex(value, true));\n      }\n\n      opacity = input.attr('data-opacity') === '' ? 1 : keepWithin(parseFloat(input.attr('data-opacity')).toFixed(2), 0, 1);\n      if(isNaN(opacity) || !settings.opacity) opacity = 1;\n\n      if(input.minicolors('rgbObject').a <= 1 && rgb && settings.opacity) {\n        // Set RGBA string if alpha\n        value = 'rgba(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ', ' + parseFloat(opacity) + ')';\n      } else {\n        // Set RGB string (alpha = 1)\n        value = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n      }\n    } else {\n      // Returns hex color\n\n      // Checks for input format and does the conversion\n      if(isRgb(value)) {\n        value = rgbString2hex(value);\n      }\n\n      value = convertCase(value, settings.letterCase);\n    }\n\n    // Update value from picker\n    input.val(value);\n\n    // Set swatch color\n    swatch.find('span').css({\n      backgroundColor: value,\n      opacity: String(opacity)\n    });\n\n    // Handle change event\n    doChange(input, value, opacity);\n  }\n\n  // Sets the color picker values from the input\n  function updateFromInput(input, preserveInputValue) {\n    var hex, hsb, opacity, keywords, alpha, value, x, y, r, phi;\n\n    // Helpful references\n    var minicolors = input.parent();\n    var settings = input.data('minicolors-settings');\n    var swatch = minicolors.find('.minicolors-input-swatch');\n\n    // Panel objects\n    var grid = minicolors.find('.minicolors-grid');\n    var slider = minicolors.find('.minicolors-slider');\n    var opacitySlider = minicolors.find('.minicolors-opacity-slider');\n\n    // Picker objects\n    var gridPicker = grid.find('[class$=-picker]');\n    var sliderPicker = slider.find('[class$=-picker]');\n    var opacityPicker = opacitySlider.find('[class$=-picker]');\n\n    // Determine hex/HSB values\n    if(isRgb(input.val())) {\n      // If input value is a rgb(a) string, convert it to hex color and update opacity\n      hex = rgbString2hex(input.val());\n      alpha = keepWithin(parseFloat(getAlpha(input.val())).toFixed(2), 0, 1);\n      if(alpha) {\n        input.attr('data-opacity', alpha);\n      }\n    } else {\n      hex = convertCase(parseHex(input.val(), true), settings.letterCase);\n    }\n\n    if(!hex){\n      hex = convertCase(parseInput(settings.defaultValue, true), settings.letterCase);\n    }\n    hsb = hex2hsb(hex);\n\n    // Get array of lowercase keywords\n    keywords = !settings.keywords ? [] : $.map(settings.keywords.split(','), function(a) {\n      return a.toLowerCase().trim();\n    });\n\n    // Set color string\n    if(input.val() !== '' && $.inArray(input.val().toLowerCase(), keywords) > -1) {\n      value = convertCase(input.val());\n    } else {\n      value = isRgb(input.val()) ? parseRgb(input.val()) : hex;\n    }\n\n    // Update input value\n    if(!preserveInputValue) input.val(value);\n\n    // Determine opacity value\n    if(settings.opacity) {\n      // Get from data-opacity attribute and keep within 0-1 range\n      opacity = input.attr('data-opacity') === '' ? 1 : keepWithin(parseFloat(input.attr('data-opacity')).toFixed(2), 0, 1);\n      if(isNaN(opacity)) opacity = 1;\n      input.attr('data-opacity', opacity);\n      swatch.find('span').css('opacity', String(opacity));\n\n      // Set opacity picker position\n      y = keepWithin(opacitySlider.height() - (opacitySlider.height() * opacity), 0, opacitySlider.height());\n      opacityPicker.css('top', y + 'px');\n    }\n\n    // Set opacity to zero if input value is transparent\n    if(input.val().toLowerCase() === 'transparent') {\n      swatch.find('span').css('opacity', String(0));\n    }\n\n    // Update swatch\n    swatch.find('span').css('backgroundColor', hex);\n\n    // Determine picker locations\n    switch(settings.control) {\n      case 'wheel':\n        // Set grid position\n        r = keepWithin(Math.ceil(hsb.s * 0.75), 0, grid.height() / 2);\n        phi = hsb.h * Math.PI / 180;\n        x = keepWithin(75 - Math.cos(phi) * r, 0, grid.width());\n        y = keepWithin(75 - Math.sin(phi) * r, 0, grid.height());\n        gridPicker.css({\n          top: y + 'px',\n          left: x + 'px'\n        });\n\n        // Set slider position\n        y = 150 - (hsb.b / (100 / grid.height()));\n        if(hex === '') y = 0;\n        sliderPicker.css('top', y + 'px');\n        \n        // Update panel color\n        slider.css('backgroundColor', hsb2hex({ h: hsb.h, s: hsb.s, b: 100 }));\n        break;\n\n      case 'saturation':\n        // Set grid position\n        x = keepWithin((5 * hsb.h) / 12, 0, 150);\n        y = keepWithin(grid.height() - Math.ceil(hsb.b / (100 / grid.height())), 0, grid.height());\n        gridPicker.css({\n          top: y + 'px',\n          left: x + 'px'\n        });\n\n        // Set slider position\n        y = keepWithin(slider.height() - (hsb.s * (slider.height() / 100)), 0, slider.height());\n        sliderPicker.css('top', y + 'px');\n\n        // Update UI\n        slider.css('backgroundColor', hsb2hex({ h: hsb.h, s: 100, b: hsb.b }));\n        minicolors.find('.minicolors-grid-inner').css('opacity', hsb.s / 100);\n        break;\n\n      case 'brightness':\n        // Set grid position\n        x = keepWithin((5 * hsb.h) / 12, 0, 150);\n        y = keepWithin(grid.height() - Math.ceil(hsb.s / (100 / grid.height())), 0, grid.height());\n        gridPicker.css({\n          top: y + 'px',\n          left: x + 'px'\n        });\n\n        // Set slider position\n        y = keepWithin(slider.height() - (hsb.b * (slider.height() / 100)), 0, slider.height());\n        sliderPicker.css('top', y + 'px');\n\n        // Update UI\n        slider.css('backgroundColor', hsb2hex({ h: hsb.h, s: hsb.s, b: 100 }));\n        minicolors.find('.minicolors-grid-inner').css('opacity', 1 - (hsb.b / 100));\n        break;\n\n      default:\n        // Set grid position\n        x = keepWithin(Math.ceil(hsb.s / (100 / grid.width())), 0, grid.width());\n        y = keepWithin(grid.height() - Math.ceil(hsb.b / (100 / grid.height())), 0, grid.height());\n        gridPicker.css({\n          top: y + 'px',\n          left: x + 'px'\n        });\n\n        // Set slider position\n        y = keepWithin(slider.height() - (hsb.h / (360 / slider.height())), 0, slider.height());\n        sliderPicker.css('top', y + 'px');\n\n        // Update panel color\n        grid.css('backgroundColor', hsb2hex({ h: hsb.h, s: 100, b: 100 }));\n        break;\n    }\n\n    // Fire change event, but only if minicolors is fully initialized\n    if(input.data('minicolors-initialized')) {\n      doChange(input, value, opacity);\n    }\n  }\n\n  // Runs the change and changeDelay callbacks\n  function doChange(input, value, opacity) {\n    var settings = input.data('minicolors-settings');\n    var lastChange = input.data('minicolors-lastChange');\n    var obj, sel, i;\n\n    // Only run if it actually changed\n    if(!lastChange || lastChange.value !== value || lastChange.opacity !== opacity) {\n\n      // Remember last-changed value\n      input.data('minicolors-lastChange', {\n        value: value,\n        opacity: opacity\n      });\n\n      // Check and select applicable swatch\n      if(settings.swatches && settings.swatches.length !== 0) {\n        if(!isRgb(value)) {\n          obj = hex2rgb(value);\n        }\n        else {\n          obj = parseRgb(value, true);\n        }\n        sel = -1;\n        for(i = 0; i < settings.swatches.length; ++i) {\n          if(obj.r === settings.swatches[i].r && obj.g === settings.swatches[i].g && obj.b === settings.swatches[i].b && obj.a === settings.swatches[i].a) {\n            sel = i;\n            break;\n          }\n        }\n\n        input.parent().find('.minicolors-swatches .minicolors-swatch').removeClass('selected');\n        if(sel !== -1) {\n          input.parent().find('.minicolors-swatches .minicolors-swatch').eq(i).addClass('selected');\n        }\n      }\n\n      // Fire change event\n      if(settings.change) {\n        if(settings.changeDelay) {\n          // Call after a delay\n          clearTimeout(input.data('minicolors-changeTimeout'));\n          input.data('minicolors-changeTimeout', setTimeout(function() {\n            settings.change.call(input.get(0), value, opacity);\n          }, settings.changeDelay));\n        } else {\n          // Call immediately\n          settings.change.call(input.get(0), value, opacity);\n        }\n      }\n      input.trigger('change').trigger('input');\n    }\n  }\n\n  // Generates an RGB(A) object based on the input's value\n  function rgbObject(input) {\n    var rgb,\n      opacity = $(input).attr('data-opacity');\n    if( isRgb($(input).val()) ) {\n      rgb = parseRgb($(input).val(), true);\n    } else {\n      var hex = parseHex($(input).val(), true);\n      rgb = hex2rgb(hex);\n    }\n    if( !rgb ) return null;\n    if( opacity !== undefined ) $.extend(rgb, { a: parseFloat(opacity) });\n    return rgb;\n  }\n\n  // Generates an RGB(A) string based on the input's value\n  function rgbString(input, alpha) {\n    var rgb,\n      opacity = $(input).attr('data-opacity');\n    if( isRgb($(input).val()) ) {\n      rgb = parseRgb($(input).val(), true);\n    } else {\n      var hex = parseHex($(input).val(), true);\n      rgb = hex2rgb(hex);\n    }\n    if( !rgb ) return null;\n    if( opacity === undefined ) opacity = 1;\n    if( alpha ) {\n      return 'rgba(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ', ' + parseFloat(opacity) + ')';\n    } else {\n      return 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n    }\n  }\n\n  // Converts to the letter case specified in settings\n  function convertCase(string, letterCase) {\n    return letterCase === 'uppercase' ? string.toUpperCase() : string.toLowerCase();\n  }\n\n  // Parses a string and returns a valid hex string when possible\n  function parseHex(string, expand) {\n    string = string.replace(/^#/g, '');\n    if(!string.match(/^[A-F0-9]{3,6}/ig)) return '';\n    if(string.length !== 3 && string.length !== 6) return '';\n    if(string.length === 3 && expand) {\n      string = string[0] + string[0] + string[1] + string[1] + string[2] + string[2];\n    }\n    return '#' + string;\n  }\n\n  // Parses a string and returns a valid RGB(A) string when possible\n  function parseRgb(string, obj) {\n    var values = string.replace(/[^\\d,.]/g, '');\n    var rgba = values.split(',');\n\n    rgba[0] = keepWithin(parseInt(rgba[0], 10), 0, 255);\n    rgba[1] = keepWithin(parseInt(rgba[1], 10), 0, 255);\n    rgba[2] = keepWithin(parseInt(rgba[2], 10), 0, 255);\n    if(rgba[3] !== undefined) {\n      rgba[3] = keepWithin(parseFloat(rgba[3], 10), 0, 1);\n    }\n\n    // Return RGBA object\n    if( obj ) {\n      if (rgba[3] !== undefined) {\n        return {\n          r: rgba[0],\n          g: rgba[1],\n          b: rgba[2],\n          a: rgba[3]\n        };\n      } else {\n        return {\n          r: rgba[0],\n          g: rgba[1],\n          b: rgba[2]\n        };\n      }\n    }\n\n    // Return RGBA string\n    if(typeof(rgba[3]) !== 'undefined' && rgba[3] <= 1) {\n      return 'rgba(' + rgba[0] + ', ' + rgba[1] + ', ' + rgba[2] + ', ' + rgba[3] + ')';\n    } else {\n      return 'rgb(' + rgba[0] + ', ' + rgba[1] + ', ' + rgba[2] + ')';\n    }\n\n  }\n\n  // Parses a string and returns a valid color string when possible\n  function parseInput(string, expand) {\n    if(isRgb(string)) {\n      // Returns a valid rgb(a) string\n      return parseRgb(string);\n    } else {\n      return parseHex(string, expand);\n    }\n  }\n\n  // Keeps value within min and max\n  function keepWithin(value, min, max) {\n    if(value < min) value = min;\n    if(value > max) value = max;\n    return value;\n  }\n\n  // Checks if a string is a valid RGB(A) string\n  function isRgb(string) {\n    var rgb = string.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n    return (rgb && rgb.length === 4) ? true : false;\n  }\n\n  // Function to get alpha from a RGB(A) string\n  function getAlpha(rgba) {\n    rgba = rgba.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+(\\.\\d{1,2})?|\\.\\d{1,2})[\\s+]?/i);\n    return (rgba && rgba.length === 6) ? rgba[4] : '1';\n  }\n\n  // Converts an HSB object to an RGB object\n  function hsb2rgb(hsb) {\n    var rgb = {};\n    var h = Math.round(hsb.h);\n    var s = Math.round(hsb.s * 255 / 100);\n    var v = Math.round(hsb.b * 255 / 100);\n    if(s === 0) {\n      rgb.r = rgb.g = rgb.b = v;\n    } else {\n      var t1 = v;\n      var t2 = (255 - s) * v / 255;\n      var t3 = (t1 - t2) * (h % 60) / 60;\n      if(h === 360) h = 0;\n      if(h < 60) { rgb.r = t1; rgb.b = t2; rgb.g = t2 + t3; }\n      else if(h < 120) {rgb.g = t1; rgb.b = t2; rgb.r = t1 - t3; }\n      else if(h < 180) {rgb.g = t1; rgb.r = t2; rgb.b = t2 + t3; }\n      else if(h < 240) {rgb.b = t1; rgb.r = t2; rgb.g = t1 - t3; }\n      else if(h < 300) {rgb.b = t1; rgb.g = t2; rgb.r = t2 + t3; }\n      else if(h < 360) {rgb.r = t1; rgb.g = t2; rgb.b = t1 - t3; }\n      else { rgb.r = 0; rgb.g = 0; rgb.b = 0; }\n    }\n    return {\n      r: Math.round(rgb.r),\n      g: Math.round(rgb.g),\n      b: Math.round(rgb.b)\n    };\n  }\n\n  // Converts an RGB string to a hex string\n  function rgbString2hex(rgb){\n    rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n    return (rgb && rgb.length === 4) ? '#' +\n      ('0' + parseInt(rgb[1],10).toString(16)).slice(-2) +\n      ('0' + parseInt(rgb[2],10).toString(16)).slice(-2) +\n      ('0' + parseInt(rgb[3],10).toString(16)).slice(-2) : '';\n  }\n\n  // Converts an RGB object to a hex string\n  function rgb2hex(rgb) {\n    var hex = [\n      rgb.r.toString(16),\n      rgb.g.toString(16),\n      rgb.b.toString(16)\n    ];\n    $.each(hex, function(nr, val) {\n      if(val.length === 1) hex[nr] = '0' + val;\n    });\n    return '#' + hex.join('');\n  }\n\n  // Converts an HSB object to a hex string\n  function hsb2hex(hsb) {\n    return rgb2hex(hsb2rgb(hsb));\n  }\n\n  // Converts a hex string to an HSB object\n  function hex2hsb(hex) {\n    var hsb = rgb2hsb(hex2rgb(hex));\n    if(hsb.s === 0) hsb.h = 360;\n    return hsb;\n  }\n\n  // Converts an RGB object to an HSB object\n  function rgb2hsb(rgb) {\n    var hsb = { h: 0, s: 0, b: 0 };\n    var min = Math.min(rgb.r, rgb.g, rgb.b);\n    var max = Math.max(rgb.r, rgb.g, rgb.b);\n    var delta = max - min;\n    hsb.b = max;\n    hsb.s = max !== 0 ? 255 * delta / max : 0;\n    if(hsb.s !== 0) {\n      if(rgb.r === max) {\n        hsb.h = (rgb.g - rgb.b) / delta;\n      } else if(rgb.g === max) {\n        hsb.h = 2 + (rgb.b - rgb.r) / delta;\n      } else {\n        hsb.h = 4 + (rgb.r - rgb.g) / delta;\n      }\n    } else {\n      hsb.h = -1;\n    }\n    hsb.h *= 60;\n    if(hsb.h < 0) {\n      hsb.h += 360;\n    }\n    hsb.s *= 100/255;\n    hsb.b *= 100/255;\n    return hsb;\n  }\n\n  // Converts a hex string to an RGB object\n  function hex2rgb(hex) {\n    hex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n    return {\n      r: hex >> 16,\n      g: (hex & 0x00FF00) >> 8,\n      b: (hex & 0x0000FF)\n    };\n  }\n\n  // Handle events\n  $([document])\n    // Hide on clicks outside of the control\n    .on('mousedown.minicolors touchstart.minicolors', function(event) {\n      if(!$(event.target).parents().add(event.target).hasClass('minicolors')) {\n        hide();\n      }\n    })\n    // Start moving\n    .on('mousedown.minicolors touchstart.minicolors', '.minicolors-grid, .minicolors-slider, .minicolors-opacity-slider', function(event) {\n      var target = $(this);\n      event.preventDefault();\n      $(event.delegateTarget).data('minicolors-target', target);\n      move(target, event, true);\n    })\n    // Move pickers\n    .on('mousemove.minicolors touchmove.minicolors', function(event) {\n      var target = $(event.delegateTarget).data('minicolors-target');\n      if(target) move(target, event);\n    })\n    // Stop moving\n    .on('mouseup.minicolors touchend.minicolors', function() {\n      $(this).removeData('minicolors-target');\n    })\n    // Selected a swatch\n    .on('click.minicolors', '.minicolors-swatches li', function(event) {\n      event.preventDefault();\n      var target = $(this), input = target.parents('.minicolors').find('.minicolors-input'), color = target.data('swatch-color');\n      updateInput(input, color, getAlpha(color));\n      updateFromInput(input);\n    })\n    // Show panel when swatch is clicked\n    .on('mousedown.minicolors touchstart.minicolors', '.minicolors-input-swatch', function(event) {\n      var input = $(this).parent().find('.minicolors-input');\n      event.preventDefault();\n      show(input);\n    })\n    // Show on focus\n    .on('focus.minicolors', '.minicolors-input', function() {\n      var input = $(this);\n      if(!input.data('minicolors-initialized')) return;\n      show(input);\n    })\n    // Update value on blur\n    .on('blur.minicolors', '.minicolors-input', function() {\n      var input = $(this);\n      var settings = input.data('minicolors-settings');\n      var keywords;\n      var hex;\n      var rgba;\n      var swatchOpacity;\n      var value;\n\n      if(!input.data('minicolors-initialized')) return;\n\n      // Get array of lowercase keywords\n      keywords = !settings.keywords ? [] : $.map(settings.keywords.split(','), function(a) {\n        return a.toLowerCase().trim();\n      });\n\n      // Set color string\n      if(input.val() !== '' && $.inArray(input.val().toLowerCase(), keywords) > -1) {\n        value = input.val();\n      } else {\n        // Get RGBA values for easy conversion\n        if(isRgb(input.val())) {\n          rgba = parseRgb(input.val(), true);\n        } else {\n          hex = parseHex(input.val(), true);\n          rgba = hex ? hex2rgb(hex) : null;\n        }\n\n        // Convert to format\n        if(rgba === null) {\n          value = settings.defaultValue;\n        } else if(settings.format === 'rgb') {\n          value = settings.opacity ?\n            parseRgb('rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' + input.attr('data-opacity') + ')') :\n            parseRgb('rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')');\n        } else {\n          value = rgb2hex(rgba);\n        }\n      }\n\n      // Update swatch opacity\n      swatchOpacity = settings.opacity ? input.attr('data-opacity') : 1;\n      if(value.toLowerCase() === 'transparent') swatchOpacity = 0;\n      input\n        .closest('.minicolors')\n        .find('.minicolors-input-swatch > span')\n        .css('opacity', String(swatchOpacity));\n\n      // Set input value\n      input.val(value);\n\n      // Is it blank?\n      if(input.val() === '') input.val(parseInput(settings.defaultValue, true));\n\n      // Adjust case\n      input.val(convertCase(input.val(), settings.letterCase));\n\n    })\n    // Handle keypresses\n    .on('keydown.minicolors', '.minicolors-input', function(event) {\n      var input = $(this);\n      if(!input.data('minicolors-initialized')) return;\n      switch(event.which) {\n        case 9: // tab\n          hide();\n          break;\n        case 13: // enter\n        case 27: // esc\n          hide();\n          input.blur();\n          break;\n      }\n    })\n    // Update on keyup\n    .on('keyup.minicolors', '.minicolors-input', function() {\n      var input = $(this);\n      if(!input.data('minicolors-initialized')) return;\n      updateFromInput(input, true);\n    })\n    // Update on paste\n    .on('paste.minicolors', '.minicolors-input', function() {\n      var input = $(this);\n      if(!input.data('minicolors-initialized')) return;\n      setTimeout(function() {\n        updateFromInput(input, true);\n      }, 1);\n    });\n}));\n", "//\n// jQuery MiniColors: A tiny color picker built on jQuery\n//\n// Developed by Cory LaViska for A Beautiful Site, LLC\n//\n// Licensed under the MIT license: http://opensource.org/licenses/MIT\n//\n!function(i){\"function\"==typeof define&&define.amd?define([\"jquery\"],i):\"object\"==typeof exports?module.exports=i(require(\"jquery\")):i(jQuery)}(function(C){\"use strict\";function o(i){var t=i.parent();i.removeData(\"minicolors-initialized\").removeData(\"minicolors-settings\").removeProp(\"size\").removeClass(\"minicolors-input\"),t.before(i).remove()}function s(i){var t=i.parent(),o=t.find(\".minicolors-panel\"),s=i.data(\"minicolors-settings\");!i.data(\"minicolors-initialized\")||i.prop(\"disabled\")||t.hasClass(\"minicolors-inline\")||t.hasClass(\"minicolors-focus\")||(a(),t.addClass(\"minicolors-focus\"),o.animate?o.stop(!0,!0).fadeIn(s.showSpeed,function(){s.show&&s.show.call(i.get(0))}):(o.show(),s.show&&s.show.call(i.get(0))))}function a(){C(\".minicolors-focus\").each(function(){var i=C(this),t=i.find(\".minicolors-input\"),o=i.find(\".minicolors-panel\"),s=t.data(\"minicolors-settings\");o.animate?o.fadeOut(s.hideSpeed,function(){s.hide&&s.hide.call(t.get(0)),i.removeClass(\"minicolors-focus\")}):(o.hide(),s.hide&&s.hide.call(t.get(0)),i.removeClass(\"minicolors-focus\"))})}function n(i,t,o){var s,a,n,r,e,c=i.parents(\".minicolors\").find(\".minicolors-input\"),l=c.data(\"minicolors-settings\"),h=i.find(\"[class$=-picker]\"),d=i.offset().left,p=i.offset().top,u=Math.round(t.pageX-d),g=Math.round(t.pageY-p),m=o?l.animationSpeed:0;t.originalEvent.changedTouches&&(u=t.originalEvent.changedTouches[0].pageX-d,g=t.originalEvent.changedTouches[0].pageY-p),u<0&&(u=0),g<0&&(g=0),u>i.width()&&(u=i.width()),g>i.height()&&(g=i.height()),i.parent().is(\".minicolors-slider-wheel\")&&h.parent().is(\".minicolors-grid\")&&(s=75-u,a=75-g,n=Math.sqrt(s*s+a*a),(r=Math.atan2(a,s))<0&&(r+=2*Math.PI),75<n&&(u=(n=75)-75*Math.cos(r),g=75-75*Math.sin(r)),u=Math.round(u),g=Math.round(g)),e={top:g+\"px\"},i.is(\".minicolors-grid\")&&(e.left=u+\"px\"),h.animate?h.stop(!0).animate(e,m,l.animationEasing,function(){f(c,i)}):(h.css(e),f(c,i))}function f(i,t){function o(i,t){var o,s;return i.length&&t?(o=i.offset().left,s=i.offset().top,{x:o-t.offset().left+i.outerWidth()/2,y:s-t.offset().top+i.outerHeight()/2}):null}var s,a,n,r,e,c,l,h=i.val(),d=i.attr(\"data-opacity\"),p=i.parent(),u=i.data(\"minicolors-settings\"),g=p.find(\".minicolors-input-swatch\"),m=p.find(\".minicolors-grid\"),f=p.find(\".minicolors-slider\"),v=p.find(\".minicolors-opacity-slider\"),b=m.find(\"[class$=-picker]\"),w=f.find(\"[class$=-picker]\"),y=v.find(\"[class$=-picker]\"),C=o(b,m),k=o(w,f),M=o(y,v);if(t.is(\".minicolors-grid, .minicolors-slider, .minicolors-opacity-slider\")){switch(u.control){case\"wheel\":r=m.width()/2-C.x,e=m.height()/2-C.y,c=Math.sqrt(r*r+e*e),(l=Math.atan2(e,r))<0&&(l+=2*Math.PI),75<c&&(c=75,C.x=69-75*Math.cos(l),C.y=69-75*Math.sin(l)),a=F(c/.75,0,100),h=q({h:s=F(180*l/Math.PI,0,360),s:a,b:n=F(100-Math.floor(k.y*(100/f.height())),0,100)}),f.css(\"backgroundColor\",q({h:s,s:a,b:100}));break;case\"saturation\":h=q({h:s=F(parseInt(C.x*(360/m.width()),10),0,360),s:a=F(100-Math.floor(k.y*(100/f.height())),0,100),b:n=F(100-Math.floor(C.y*(100/m.height())),0,100)}),f.css(\"backgroundColor\",q({h:s,s:100,b:n})),p.find(\".minicolors-grid-inner\").css(\"opacity\",a/100);break;case\"brightness\":h=q({h:s=F(parseInt(C.x*(360/m.width()),10),0,360),s:a=F(100-Math.floor(C.y*(100/m.height())),0,100),b:n=F(100-Math.floor(k.y*(100/f.height())),0,100)}),f.css(\"backgroundColor\",q({h:s,s:a,b:100})),p.find(\".minicolors-grid-inner\").css(\"opacity\",1-n/100);break;default:h=q({h:s=F(360-parseInt(k.y*(360/f.height()),10),0,360),s:a=F(Math.floor(C.x*(100/m.width())),0,100),b:n=F(100-Math.floor(C.y*(100/m.height())),0,100)}),m.css(\"backgroundColor\",q({h:s,s:100,b:100}))}x(i,h,d=u.opacity?parseFloat(1-M.y/v.height()).toFixed(2):1)}else g.find(\"span\").css({backgroundColor:h,opacity:String(d)}),S(i,h,d)}function x(i,t,o){var s,a=i.parent(),n=i.data(\"minicolors-settings\"),r=a.find(\".minicolors-input-swatch\");n.opacity&&i.attr(\"data-opacity\",o),t=\"rgb\"===n.format?(s=T(t)?I(t,!0):L(M(t,!0)),o=\"\"===i.attr(\"data-opacity\")?1:F(parseFloat(i.attr(\"data-opacity\")).toFixed(2),0,1),!isNaN(o)&&n.opacity||(o=1),i.minicolors(\"rgbObject\").a<=1&&s&&n.opacity?\"rgba(\"+s.r+\", \"+s.g+\", \"+s.b+\", \"+parseFloat(o)+\")\":\"rgb(\"+s.r+\", \"+s.g+\", \"+s.b+\")\"):(T(t)&&(t=j(t)),k(t,n.letterCase)),i.val(t),r.find(\"span\").css({backgroundColor:t,opacity:String(o)}),S(i,t,o)}function d(i,t){var o,s,a,n,r,e,c,l,h,d,p=i.parent(),u=i.data(\"minicolors-settings\"),g=p.find(\".minicolors-input-swatch\"),m=p.find(\".minicolors-grid\"),f=p.find(\".minicolors-slider\"),v=p.find(\".minicolors-opacity-slider\"),b=m.find(\"[class$=-picker]\"),w=f.find(\"[class$=-picker]\"),y=v.find(\"[class$=-picker]\");switch(T(i.val())?(o=j(i.val()),(r=F(parseFloat(D(i.val())).toFixed(2),0,1))&&i.attr(\"data-opacity\",r)):o=k(M(i.val(),!0),u.letterCase),s=function(i){var t=function(i){var t={h:0,s:0,b:0},o=Math.min(i.r,i.g,i.b),s=Math.max(i.r,i.g,i.b),a=s-o;t.b=s,t.s=0!==s?255*a/s:0,0!==t.s?i.r===s?t.h=(i.g-i.b)/a:i.g===s?t.h=2+(i.b-i.r)/a:t.h=4+(i.r-i.g)/a:t.h=-1;t.h*=60,t.h<0&&(t.h+=360);return t.s*=100/255,t.b*=100/255,t}(L(i));0===t.s&&(t.h=360);return t}(o=o||k(z(u.defaultValue,!0),u.letterCase)),n=u.keywords?C.map(u.keywords.split(\",\"),function(i){return i.toLowerCase().trim()}):[],e=\"\"!==i.val()&&-1<C.inArray(i.val().toLowerCase(),n)?k(i.val()):T(i.val())?I(i.val()):o,t||i.val(e),u.opacity&&(a=\"\"===i.attr(\"data-opacity\")?1:F(parseFloat(i.attr(\"data-opacity\")).toFixed(2),0,1),isNaN(a)&&(a=1),i.attr(\"data-opacity\",a),g.find(\"span\").css(\"opacity\",String(a)),l=F(v.height()-v.height()*a,0,v.height()),y.css(\"top\",l+\"px\")),\"transparent\"===i.val().toLowerCase()&&g.find(\"span\").css(\"opacity\",String(0)),g.find(\"span\").css(\"backgroundColor\",o),u.control){case\"wheel\":h=F(Math.ceil(.75*s.s),0,m.height()/2),d=s.h*Math.PI/180,c=F(75-Math.cos(d)*h,0,m.width()),l=F(75-Math.sin(d)*h,0,m.height()),b.css({top:l+\"px\",left:c+\"px\"}),l=150-s.b/(100/m.height()),\"\"===o&&(l=0),w.css(\"top\",l+\"px\"),f.css(\"backgroundColor\",q({h:s.h,s:s.s,b:100}));break;case\"saturation\":c=F(5*s.h/12,0,150),l=F(m.height()-Math.ceil(s.b/(100/m.height())),0,m.height()),b.css({top:l+\"px\",left:c+\"px\"}),l=F(f.height()-s.s*(f.height()/100),0,f.height()),w.css(\"top\",l+\"px\"),f.css(\"backgroundColor\",q({h:s.h,s:100,b:s.b})),p.find(\".minicolors-grid-inner\").css(\"opacity\",s.s/100);break;case\"brightness\":c=F(5*s.h/12,0,150),l=F(m.height()-Math.ceil(s.s/(100/m.height())),0,m.height()),b.css({top:l+\"px\",left:c+\"px\"}),l=F(f.height()-s.b*(f.height()/100),0,f.height()),w.css(\"top\",l+\"px\"),f.css(\"backgroundColor\",q({h:s.h,s:s.s,b:100})),p.find(\".minicolors-grid-inner\").css(\"opacity\",1-s.b/100);break;default:c=F(Math.ceil(s.s/(100/m.width())),0,m.width()),l=F(m.height()-Math.ceil(s.b/(100/m.height())),0,m.height()),b.css({top:l+\"px\",left:c+\"px\"}),l=F(f.height()-s.h/(360/f.height()),0,f.height()),w.css(\"top\",l+\"px\"),m.css(\"backgroundColor\",q({h:s.h,s:100,b:100}))}i.data(\"minicolors-initialized\")&&S(i,e,a)}function S(i,t,o){var s,a,n,r=i.data(\"minicolors-settings\"),e=i.data(\"minicolors-lastChange\");if(!e||e.value!==t||e.opacity!==o){if(i.data(\"minicolors-lastChange\",{value:t,opacity:o}),r.swatches&&0!==r.swatches.length){for(s=T(t)?I(t,!0):L(t),a=-1,n=0;n<r.swatches.length;++n)if(s.r===r.swatches[n].r&&s.g===r.swatches[n].g&&s.b===r.swatches[n].b&&s.a===r.swatches[n].a){a=n;break}i.parent().find(\".minicolors-swatches .minicolors-swatch\").removeClass(\"selected\"),-1!==a&&i.parent().find(\".minicolors-swatches .minicolors-swatch\").eq(n).addClass(\"selected\")}r.change&&(r.changeDelay?(clearTimeout(i.data(\"minicolors-changeTimeout\")),i.data(\"minicolors-changeTimeout\",setTimeout(function(){r.change.call(i.get(0),t,o)},r.changeDelay))):r.change.call(i.get(0),t,o)),i.trigger(\"change\").trigger(\"input\")}}function k(i,t){return\"uppercase\"===t?i.toUpperCase():i.toLowerCase()}function M(i,t){return!(i=i.replace(/^#/g,\"\")).match(/^[A-F0-9]{3,6}/gi)||3!==i.length&&6!==i.length?\"\":(3===i.length&&t&&(i=i[0]+i[0]+i[1]+i[1]+i[2]+i[2]),\"#\"+i)}function I(i,t){var o=i.replace(/[^\\d,.]/g,\"\").split(\",\");return o[0]=F(parseInt(o[0],10),0,255),o[1]=F(parseInt(o[1],10),0,255),o[2]=F(parseInt(o[2],10),0,255),void 0!==o[3]&&(o[3]=F(parseFloat(o[3],10),0,1)),t?void 0!==o[3]?{r:o[0],g:o[1],b:o[2],a:o[3]}:{r:o[0],g:o[1],b:o[2]}:void 0!==o[3]&&o[3]<=1?\"rgba(\"+o[0]+\", \"+o[1]+\", \"+o[2]+\", \"+o[3]+\")\":\"rgb(\"+o[0]+\", \"+o[1]+\", \"+o[2]+\")\"}function z(i,t){return T(i)?I(i):M(i,t)}function F(i,t,o){return i<t&&(i=t),o<i&&(i=o),i}function T(i){var t=i.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);return!(!t||4!==t.length)}function D(i){return(i=i.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+(\\.\\d{1,2})?|\\.\\d{1,2})[\\s+]?/i))&&6===i.length?i[4]:\"1\"}function j(i){return(i=i.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i))&&4===i.length?\"#\"+(\"0\"+parseInt(i[1],10).toString(16)).slice(-2)+(\"0\"+parseInt(i[2],10).toString(16)).slice(-2)+(\"0\"+parseInt(i[3],10).toString(16)).slice(-2):\"\"}function p(i){var o=[i.r.toString(16),i.g.toString(16),i.b.toString(16)];return C.each(o,function(i,t){1===t.length&&(o[i]=\"0\"+t)}),\"#\"+o.join(\"\")}function q(i){return p((t=i,n={},r=Math.round(t.h),e=Math.round(255*t.s/100),c=Math.round(255*t.b/100),0===e?n.r=n.g=n.b=c:(a=r%60*((o=c)-(s=(255-e)*c/255))/60,360===r&&(r=0),r<60?(n.r=o,n.b=s,n.g=s+a):r<120?(n.g=o,n.b=s,n.r=o-a):r<180?(n.g=o,n.r=s,n.b=s+a):r<240?(n.b=o,n.r=s,n.g=o-a):r<300?(n.b=o,n.g=s,n.r=s+a):r<360?(n.r=o,n.g=s,n.b=o-a):(n.r=0,n.g=0,n.b=0)),{r:Math.round(n.r),g:Math.round(n.g),b:Math.round(n.b)}));var t,o,s,a,n,r,e,c}function L(i){return{r:(i=parseInt(-1<i.indexOf(\"#\")?i.substring(1):i,16))>>16,g:(65280&i)>>8,b:255&i}}C.minicolors={defaults:{animationSpeed:50,animationEasing:\"swing\",change:null,changeDelay:0,control:\"hue\",defaultValue:\"\",format:\"hex\",hide:null,hideSpeed:100,inline:!1,keywords:\"\",letterCase:\"lowercase\",opacity:!1,position:\"bottom\",show:null,showSpeed:100,theme:\"default\",swatches:[]}},C.extend(C.fn,{minicolors:function(i,t){switch(i){case\"destroy\":return C(this).each(function(){o(C(this))}),C(this);case\"hide\":return a(),C(this);case\"opacity\":return void 0===t?C(this).attr(\"data-opacity\"):(C(this).each(function(){d(C(this).attr(\"data-opacity\",t))}),C(this));case\"rgbObject\":return function(i){var t,o=C(i).attr(\"data-opacity\");{var s;t=T(C(i).val())?I(C(i).val(),!0):(s=M(C(i).val(),!0),L(s))}if(!t)return null;void 0!==o&&C.extend(t,{a:parseFloat(o)});return t}(C(this));case\"rgbString\":case\"rgbaString\":return function(i,t){var o,s=C(i).attr(\"data-opacity\");{var a;o=T(C(i).val())?I(C(i).val(),!0):(a=M(C(i).val(),!0),L(a))}if(!o)return null;void 0===s&&(s=1);return t?\"rgba(\"+o.r+\", \"+o.g+\", \"+o.b+\", \"+parseFloat(s)+\")\":\"rgb(\"+o.r+\", \"+o.g+\", \"+o.b+\")\"}(C(this),\"rgbaString\"===i);case\"settings\":return void 0===t?C(this).data(\"minicolors-settings\"):(C(this).each(function(){var i=C(this).data(\"minicolors-settings\")||{};o(C(this)),C(this).minicolors(C.extend(!0,i,t))}),C(this));case\"show\":return s(C(this).eq(0)),C(this);case\"value\":return void 0===t?C(this).val():(C(this).each(function(){\"object\"==typeof t&&null!==t?(void 0!==t.opacity&&C(this).attr(\"data-opacity\",F(t.opacity,0,1)),t.color&&C(this).val(t.color)):C(this).val(t),d(C(this))}),C(this));default:return\"create\"!==i&&(t=i),C(this).each(function(){!function(t,i){var o,s,a,n,r,e,c,l=C('<div class=\"minicolors\" />'),h=C.minicolors.defaults;if(t.data(\"minicolors-initialized\"))return;i=C.extend(!0,{},h,i),l.addClass(\"minicolors-theme-\"+i.theme).toggleClass(\"minicolors-with-opacity\",i.opacity),void 0!==i.position&&C.each(i.position.split(\" \"),function(){l.addClass(\"minicolors-position-\"+this)});s=\"rgb\"===i.format?i.opacity?\"25\":\"20\":i.keywords?\"11\":\"7\";t.addClass(\"minicolors-input\").data(\"minicolors-initialized\",!1).data(\"minicolors-settings\",i).prop(\"size\",s).wrap(l).after('<div class=\"minicolors-panel minicolors-slider-'+i.control+'\"><div class=\"minicolors-slider minicolors-sprite\"><div class=\"minicolors-picker\"></div></div><div class=\"minicolors-opacity-slider minicolors-sprite\"><div class=\"minicolors-picker\"></div></div><div class=\"minicolors-grid minicolors-sprite\"><div class=\"minicolors-grid-inner\"></div><div class=\"minicolors-picker\"><div></div></div></div></div>'),i.inline||(t.after('<span class=\"minicolors-swatch minicolors-sprite minicolors-input-swatch\"><span class=\"minicolors-swatch-color\"></span></span>'),t.next(\".minicolors-input-swatch\").on(\"click\",function(i){i.preventDefault(),t.trigger(\"focus\")}));if((e=t.parent().find(\".minicolors-panel\")).on(\"selectstart\",function(){return!1}).end(),i.swatches&&0!==i.swatches.length)for(e.addClass(\"minicolors-with-swatches\"),a=C('<ul class=\"minicolors-swatches\"></ul>').appendTo(e),c=0;c<i.swatches.length;++c)n=\"object\"==typeof i.swatches[c]?(o=i.swatches[c].name,i.swatches[c].color):(o=\"\",i.swatches[c]),n=T(r=n)?I(n,!0):L(M(n,!0)),C('<li class=\"minicolors-swatch minicolors-sprite\"><span class=\"minicolors-swatch-color\" title=\"'+o+'\"></span></li>').appendTo(a).data(\"swatch-color\",r).find(\".minicolors-swatch-color\").css({backgroundColor:\"transparent\"!==r?p(n):\"transparent\",opacity:String(n.a)}),i.swatches[c]=n;i.inline&&t.parent().addClass(\"minicolors-inline\");d(t,!1),t.data(\"minicolors-initialized\",!0)}(C(this),t)}),C(this)}}}),C([document]).on(\"mousedown.minicolors touchstart.minicolors\",function(i){C(i.target).parents().add(i.target).hasClass(\"minicolors\")||a()}).on(\"mousedown.minicolors touchstart.minicolors\",\".minicolors-grid, .minicolors-slider, .minicolors-opacity-slider\",function(i){var t=C(this);i.preventDefault(),C(i.delegateTarget).data(\"minicolors-target\",t),n(t,i,!0)}).on(\"mousemove.minicolors touchmove.minicolors\",function(i){var t=C(i.delegateTarget).data(\"minicolors-target\");t&&n(t,i)}).on(\"mouseup.minicolors touchend.minicolors\",function(){C(this).removeData(\"minicolors-target\")}).on(\"click.minicolors\",\".minicolors-swatches li\",function(i){i.preventDefault();var t=C(this),o=t.parents(\".minicolors\").find(\".minicolors-input\"),s=t.data(\"swatch-color\");x(o,s,D(s)),d(o)}).on(\"mousedown.minicolors touchstart.minicolors\",\".minicolors-input-swatch\",function(i){var t=C(this).parent().find(\".minicolors-input\");i.preventDefault(),s(t)}).on(\"focus.minicolors\",\".minicolors-input\",function(){var i=C(this);i.data(\"minicolors-initialized\")&&s(i)}).on(\"blur.minicolors\",\".minicolors-input\",function(){var i,t,o,s,a,n=C(this),r=n.data(\"minicolors-settings\");n.data(\"minicolors-initialized\")&&(i=r.keywords?C.map(r.keywords.split(\",\"),function(i){return i.toLowerCase().trim()}):[],a=\"\"!==n.val()&&-1<C.inArray(n.val().toLowerCase(),i)?n.val():null===(o=T(n.val())?I(n.val(),!0):(t=M(n.val(),!0))?L(t):null)?r.defaultValue:\"rgb\"===r.format?r.opacity?I(\"rgba(\"+o.r+\",\"+o.g+\",\"+o.b+\",\"+n.attr(\"data-opacity\")+\")\"):I(\"rgb(\"+o.r+\",\"+o.g+\",\"+o.b+\")\"):p(o),s=r.opacity?n.attr(\"data-opacity\"):1,\"transparent\"===a.toLowerCase()&&(s=0),n.closest(\".minicolors\").find(\".minicolors-input-swatch > span\").css(\"opacity\",String(s)),n.val(a),\"\"===n.val()&&n.val(z(r.defaultValue,!0)),n.val(k(n.val(),r.letterCase)))}).on(\"keydown.minicolors\",\".minicolors-input\",function(i){var t=C(this);if(t.data(\"minicolors-initialized\"))switch(i.which){case 9:a();break;case 13:case 27:a(),t.blur()}}).on(\"keyup.minicolors\",\".minicolors-input\",function(){var i=C(this);i.data(\"minicolors-initialized\")&&d(i,!0)}).on(\"paste.minicolors\",\".minicolors-input\",function(){var i=C(this);i.data(\"minicolors-initialized\")&&setTimeout(function(){d(i,!0)},1)})});"], "fixing_code": ["//\n// jQuery MiniColors: A tiny color picker built on jQuery\n//\n// Developed by Cory LaViska for A Beautiful Site, LLC\n//\n// Licensed under the MIT license: http://opensource.org/licenses/MIT\n//\n(function (factory) {\n  if(typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['jquery'], factory);\n  } else if(typeof exports === 'object') {\n    // Node/CommonJS\n    module.exports = factory(require('jquery'));\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n}(function ($) {\n  'use strict';\n\n  // Defaults\n  $.minicolors = {\n    defaults: {\n      animationSpeed: 50,\n      animationEasing: 'swing',\n      change: null,\n      changeDelay: 0,\n      control: 'hue',\n      defaultValue: '',\n      format: 'hex',\n      hide: null,\n      hideSpeed: 100,\n      inline: false,\n      keywords: '',\n      letterCase: 'lowercase',\n      opacity: false,\n      position: 'bottom',\n      show: null,\n      showSpeed: 100,\n      theme: 'default',\n      swatches: []\n    }\n  };\n\n  // Public methods\n  $.extend($.fn, {\n    minicolors: function(method, data) {\n\n      switch(method) {\n        // Destroy the control\n        case 'destroy':\n          $(this).each(function() {\n            destroy($(this));\n          });\n          return $(this);\n\n        // Hide the color picker\n        case 'hide':\n          hide();\n          return $(this);\n\n        // Get/set opacity\n        case 'opacity':\n          // Getter\n          if(data === undefined) {\n            // Getter\n            return $(this).attr('data-opacity');\n          } else {\n            // Setter\n            $(this).each(function() {\n              updateFromInput($(this).attr('data-opacity', data));\n            });\n          }\n          return $(this);\n\n        // Get an RGB(A) object based on the current color/opacity\n        case 'rgbObject':\n          return rgbObject($(this), method === 'rgbaObject');\n\n        // Get an RGB(A) string based on the current color/opacity\n        case 'rgbString':\n        case 'rgbaString':\n          return rgbString($(this), method === 'rgbaString');\n\n        // Get/set settings on the fly\n        case 'settings':\n          if(data === undefined) {\n            return $(this).data('minicolors-settings');\n          } else {\n            // Setter\n            $(this).each(function() {\n              var settings = $(this).data('minicolors-settings') || {};\n              destroy($(this));\n              $(this).minicolors($.extend(true, settings, data));\n            });\n          }\n          return $(this);\n\n        // Show the color picker\n        case 'show':\n          show($(this).eq(0));\n          return $(this);\n\n        // Get/set the hex color value\n        case 'value':\n          if(data === undefined) {\n            // Getter\n            return $(this).val();\n          } else {\n            // Setter\n            $(this).each(function() {\n              if(typeof(data) === 'object' && data !== null) {\n                if(data.opacity !== undefined) {\n                  $(this).attr('data-opacity', keepWithin(data.opacity, 0, 1));\n                }\n                if(data.color) {\n                  $(this).val(data.color);\n                }\n              } else {\n                $(this).val(data);\n              }\n              updateFromInput($(this));\n            });\n          }\n          return $(this);\n\n        // Initializes the control\n        default:\n          if(method !== 'create') data = method;\n          $(this).each(function() {\n            init($(this), data);\n          });\n          return $(this);\n\n      }\n\n    }\n  });\n\n  // Initialize input elements\n  function init(input, settings) {\n    var minicolors = $('<div class=\"minicolors\" />');\n    var defaults = $.minicolors.defaults;\n    var name;\n    var size;\n    var swatches;\n    var swatch;\n    var swatchString;\n    var panel;\n    var i;\n\n    // Do nothing if already initialized\n    if(input.data('minicolors-initialized')) return;\n\n    // Handle settings\n    settings = $.extend(true, {}, defaults, settings);\n\n    // The wrapper\n    minicolors\n      .addClass('minicolors-theme-' + settings.theme)\n      .toggleClass('minicolors-with-opacity', settings.opacity);\n\n    // Custom positioning\n    if(settings.position !== undefined) {\n      $.each(settings.position.split(' '), function() {\n        minicolors.addClass('minicolors-position-' + this);\n      });\n    }\n\n    // Input size\n    if(settings.format === 'rgb') {\n      size = settings.opacity ? '25' : '20';\n    } else {\n      size = settings.keywords ? '11' : '7';\n    }\n\n    // The input\n    input\n      .addClass('minicolors-input')\n      .data('minicolors-initialized', false)\n      .data('minicolors-settings', settings)\n      .prop('size', size)\n      .wrap(minicolors)\n      .after(\n        '<div class=\"minicolors-panel minicolors-slider-' + settings.control + '\">' +\n                '<div class=\"minicolors-slider minicolors-sprite\">' +\n                  '<div class=\"minicolors-picker\"></div>' +\n                '</div>' +\n                '<div class=\"minicolors-opacity-slider minicolors-sprite\">' +\n                  '<div class=\"minicolors-picker\"></div>' +\n                '</div>' +\n                '<div class=\"minicolors-grid minicolors-sprite\">' +\n                  '<div class=\"minicolors-grid-inner\"></div>' +\n                  '<div class=\"minicolors-picker\"><div></div></div>' +\n                '</div>' +\n              '</div>'\n      );\n\n    // The swatch\n    if(!settings.inline) {\n      input.after('<span class=\"minicolors-swatch minicolors-sprite minicolors-input-swatch\"><span class=\"minicolors-swatch-color\"></span></span>');\n      input.next('.minicolors-input-swatch').on('click', function(event) {\n        event.preventDefault();\n        input.trigger('focus');\n      });\n    }\n\n    // Prevent text selection in IE\n    panel = input.parent().find('.minicolors-panel');\n    panel.on('selectstart', function() { return false; }).end();\n\n    // Swatches\n    if(settings.swatches && settings.swatches.length !== 0) {\n      panel.addClass('minicolors-with-swatches');\n      swatches = $('<ul class=\"minicolors-swatches\"></ul>')\n        .appendTo(panel);\n      for(i = 0; i < settings.swatches.length; ++i) {\n        // allow for custom objects as swatches\n        if(typeof settings.swatches[i] === 'object') {\n          name = settings.swatches[i].name;\n          swatch = settings.swatches[i].color;\n        } else {\n          name = '';\n          swatch = settings.swatches[i];\n        }\n        swatchString = swatch;\n        swatch = isRgb(swatch) ? parseRgb(swatch, true) : hex2rgb(parseHex(swatch, true));\n        $('<li class=\"minicolors-swatch minicolors-sprite\"><span class=\"minicolors-swatch-color\"></span></li>')\n          .attr(\"title\", name)\n          .appendTo(swatches)\n          .data('swatch-color', swatchString)\n          .find('.minicolors-swatch-color')\n          .css({\n            backgroundColor: ((swatchString !== 'transparent') ? rgb2hex(swatch) : 'transparent'),\n            opacity: String(swatch.a)\n          });\n        settings.swatches[i] = swatch;\n      }\n    }\n\n    // Inline controls\n    if(settings.inline) input.parent().addClass('minicolors-inline');\n\n    updateFromInput(input, false);\n\n    input.data('minicolors-initialized', true);\n  }\n\n  // Returns the input back to its original state\n  function destroy(input) {\n    var minicolors = input.parent();\n\n    // Revert the input element\n    input\n      .removeData('minicolors-initialized')\n      .removeData('minicolors-settings')\n      .removeProp('size')\n      .removeClass('minicolors-input');\n\n    // Remove the wrap and destroy whatever remains\n    minicolors.before(input).remove();\n  }\n\n  // Shows the specified dropdown panel\n  function show(input) {\n    var minicolors = input.parent();\n    var panel = minicolors.find('.minicolors-panel');\n    var settings = input.data('minicolors-settings');\n\n    // Do nothing if uninitialized, disabled, inline, or already open\n    if(\n      !input.data('minicolors-initialized') ||\n      input.prop('disabled') ||\n      minicolors.hasClass('minicolors-inline') ||\n      minicolors.hasClass('minicolors-focus')\n    ) return;\n\n    hide();\n\n    minicolors.addClass('minicolors-focus');\n    if (panel.animate) {\n      panel\n        .stop(true, true)\n        .fadeIn(settings.showSpeed, function () {\n          if (settings.show) settings.show.call(input.get(0));\n        });\n    } else {\n      panel.show();\n      if (settings.show) settings.show.call(input.get(0));\n    }\n  }\n\n  // Hides all dropdown panels\n  function hide() {\n    $('.minicolors-focus').each(function() {\n      var minicolors = $(this);\n      var input = minicolors.find('.minicolors-input');\n      var panel = minicolors.find('.minicolors-panel');\n      var settings = input.data('minicolors-settings');\n\n      if (panel.animate) {\n        panel.fadeOut(settings.hideSpeed, function () {\n          if (settings.hide) settings.hide.call(input.get(0));\n          minicolors.removeClass('minicolors-focus');\n        });\n      } else {\n        panel.hide();\n        if (settings.hide) settings.hide.call(input.get(0));\n        minicolors.removeClass('minicolors-focus');\n      }\n    });\n  }\n\n  // Moves the selected picker\n  function move(target, event, animate) {\n    var input = target.parents('.minicolors').find('.minicolors-input');\n    var settings = input.data('minicolors-settings');\n    var picker = target.find('[class$=-picker]');\n    var offsetX = target.offset().left;\n    var offsetY = target.offset().top;\n    var x = Math.round(event.pageX - offsetX);\n    var y = Math.round(event.pageY - offsetY);\n    var duration = animate ? settings.animationSpeed : 0;\n    var wx, wy, r, phi, styles;\n\n    // Touch support\n    if(event.originalEvent.changedTouches) {\n      x = event.originalEvent.changedTouches[0].pageX - offsetX;\n      y = event.originalEvent.changedTouches[0].pageY - offsetY;\n    }\n\n    // Constrain picker to its container\n    if(x < 0) x = 0;\n    if(y < 0) y = 0;\n    if(x > target.width()) x = target.width();\n    if(y > target.height()) y = target.height();\n\n    // Constrain color wheel values to the wheel\n    if(target.parent().is('.minicolors-slider-wheel') && picker.parent().is('.minicolors-grid')) {\n      wx = 75 - x;\n      wy = 75 - y;\n      r = Math.sqrt(wx * wx + wy * wy);\n      phi = Math.atan2(wy, wx);\n      if(phi < 0) phi += Math.PI * 2;\n      if(r > 75) {\n        r = 75;\n        x = 75 - (75 * Math.cos(phi));\n        y = 75 - (75 * Math.sin(phi));\n      }\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    // Move the picker\n    styles = {\n      top: y + 'px'\n    };\n    if(target.is('.minicolors-grid')) {\n      styles.left = x + 'px';\n    }\n    if (picker.animate) {\n      picker\n        .stop(true)\n        .animate(styles, duration, settings.animationEasing, function() {\n          updateFromControl(input, target);\n        });\n    } else {\n      picker\n        .css(styles);\n      updateFromControl(input, target);\n    }\n  }\n\n  // Sets the input based on the color picker values\n  function updateFromControl(input, target) {\n\n    function getCoords(picker, container) {\n      var left, top;\n      if(!picker.length || !container) return null;\n      left = picker.offset().left;\n      top = picker.offset().top;\n\n      return {\n        x: left - container.offset().left + (picker.outerWidth() / 2),\n        y: top - container.offset().top + (picker.outerHeight() / 2)\n      };\n    }\n\n    var hue, saturation, brightness, x, y, r, phi;\n    var hex = input.val();\n    var opacity = input.attr('data-opacity');\n\n    // Helpful references\n    var minicolors = input.parent();\n    var settings = input.data('minicolors-settings');\n    var swatch = minicolors.find('.minicolors-input-swatch');\n\n    // Panel objects\n    var grid = minicolors.find('.minicolors-grid');\n    var slider = minicolors.find('.minicolors-slider');\n    var opacitySlider = minicolors.find('.minicolors-opacity-slider');\n\n    // Picker objects\n    var gridPicker = grid.find('[class$=-picker]');\n    var sliderPicker = slider.find('[class$=-picker]');\n    var opacityPicker = opacitySlider.find('[class$=-picker]');\n\n    // Picker positions\n    var gridPos = getCoords(gridPicker, grid);\n    var sliderPos = getCoords(sliderPicker, slider);\n    var opacityPos = getCoords(opacityPicker, opacitySlider);\n\n    // Handle colors\n    if(target.is('.minicolors-grid, .minicolors-slider, .minicolors-opacity-slider')) {\n\n      // Determine HSB values\n      switch(settings.control) {\n        case 'wheel':\n          // Calculate hue, saturation, and brightness\n          x = (grid.width() / 2) - gridPos.x;\n          y = (grid.height() / 2) - gridPos.y;\n          r = Math.sqrt(x * x + y * y);\n          phi = Math.atan2(y, x);\n          if(phi < 0) phi += Math.PI * 2;\n          if(r > 75) {\n            r = 75;\n            gridPos.x = 69 - (75 * Math.cos(phi));\n            gridPos.y = 69 - (75 * Math.sin(phi));\n          }\n          saturation = keepWithin(r / 0.75, 0, 100);\n          hue = keepWithin(phi * 180 / Math.PI, 0, 360);\n          brightness = keepWithin(100 - Math.floor(sliderPos.y * (100 / slider.height())), 0, 100);\n          hex = hsb2hex({\n            h: hue,\n            s: saturation,\n            b: brightness\n          });\n\n          // Update UI\n          slider.css('backgroundColor', hsb2hex({ h: hue, s: saturation, b: 100 }));\n          break;\n\n        case 'saturation':\n          // Calculate hue, saturation, and brightness\n          hue = keepWithin(parseInt(gridPos.x * (360 / grid.width()), 10), 0, 360);\n          saturation = keepWithin(100 - Math.floor(sliderPos.y * (100 / slider.height())), 0, 100);\n          brightness = keepWithin(100 - Math.floor(gridPos.y * (100 / grid.height())), 0, 100);\n          hex = hsb2hex({\n            h: hue,\n            s: saturation,\n            b: brightness\n          });\n\n          // Update UI\n          slider.css('backgroundColor', hsb2hex({ h: hue, s: 100, b: brightness }));\n          minicolors.find('.minicolors-grid-inner').css('opacity', saturation / 100);\n          break;\n\n        case 'brightness':\n          // Calculate hue, saturation, and brightness\n          hue = keepWithin(parseInt(gridPos.x * (360 / grid.width()), 10), 0, 360);\n          saturation = keepWithin(100 - Math.floor(gridPos.y * (100 / grid.height())), 0, 100);\n          brightness = keepWithin(100 - Math.floor(sliderPos.y * (100 / slider.height())), 0, 100);\n          hex = hsb2hex({\n            h: hue,\n            s: saturation,\n            b: brightness\n          });\n\n          // Update UI\n          slider.css('backgroundColor', hsb2hex({ h: hue, s: saturation, b: 100 }));\n          minicolors.find('.minicolors-grid-inner').css('opacity', 1 - (brightness / 100));\n          break;\n\n        default:\n          // Calculate hue, saturation, and brightness\n          hue = keepWithin(360 - parseInt(sliderPos.y * (360 / slider.height()), 10), 0, 360);\n          saturation = keepWithin(Math.floor(gridPos.x * (100 / grid.width())), 0, 100);\n          brightness = keepWithin(100 - Math.floor(gridPos.y * (100 / grid.height())), 0, 100);\n          hex = hsb2hex({\n            h: hue,\n            s: saturation,\n            b: brightness\n          });\n\n          // Update UI\n          grid.css('backgroundColor', hsb2hex({ h: hue, s: 100, b: 100 }));\n          break;\n      }\n\n      // Handle opacity\n      if(settings.opacity) {\n        opacity = parseFloat(1 - (opacityPos.y / opacitySlider.height())).toFixed(2);\n      } else {\n        opacity = 1;\n      }\n\n      updateInput(input, hex, opacity);\n    }\n    else {\n      // Set swatch color\n      swatch.find('span').css({\n        backgroundColor: hex,\n        opacity: String(opacity)\n      });\n\n      // Handle change event\n      doChange(input, hex, opacity);\n    }\n  }\n\n  // Sets the value of the input and does the appropriate conversions\n  // to respect settings, also updates the swatch\n  function updateInput(input, value, opacity) {\n    var rgb;\n\n    // Helpful references\n    var minicolors = input.parent();\n    var settings = input.data('minicolors-settings');\n    var swatch = minicolors.find('.minicolors-input-swatch');\n\n    if(settings.opacity) input.attr('data-opacity', opacity);\n\n    // Set color string\n    if(settings.format === 'rgb') {\n      // Returns RGB(A) string\n\n      // Checks for input format and does the conversion\n      if(isRgb(value)) {\n        rgb = parseRgb(value, true);\n      }\n      else {\n        rgb = hex2rgb(parseHex(value, true));\n      }\n\n      opacity = input.attr('data-opacity') === '' ? 1 : keepWithin(parseFloat(input.attr('data-opacity')).toFixed(2), 0, 1);\n      if(isNaN(opacity) || !settings.opacity) opacity = 1;\n\n      if(input.minicolors('rgbObject').a <= 1 && rgb && settings.opacity) {\n        // Set RGBA string if alpha\n        value = 'rgba(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ', ' + parseFloat(opacity) + ')';\n      } else {\n        // Set RGB string (alpha = 1)\n        value = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n      }\n    } else {\n      // Returns hex color\n\n      // Checks for input format and does the conversion\n      if(isRgb(value)) {\n        value = rgbString2hex(value);\n      }\n\n      value = convertCase(value, settings.letterCase);\n    }\n\n    // Update value from picker\n    input.val(value);\n\n    // Set swatch color\n    swatch.find('span').css({\n      backgroundColor: value,\n      opacity: String(opacity)\n    });\n\n    // Handle change event\n    doChange(input, value, opacity);\n  }\n\n  // Sets the color picker values from the input\n  function updateFromInput(input, preserveInputValue) {\n    var hex, hsb, opacity, keywords, alpha, value, x, y, r, phi;\n\n    // Helpful references\n    var minicolors = input.parent();\n    var settings = input.data('minicolors-settings');\n    var swatch = minicolors.find('.minicolors-input-swatch');\n\n    // Panel objects\n    var grid = minicolors.find('.minicolors-grid');\n    var slider = minicolors.find('.minicolors-slider');\n    var opacitySlider = minicolors.find('.minicolors-opacity-slider');\n\n    // Picker objects\n    var gridPicker = grid.find('[class$=-picker]');\n    var sliderPicker = slider.find('[class$=-picker]');\n    var opacityPicker = opacitySlider.find('[class$=-picker]');\n\n    // Determine hex/HSB values\n    if(isRgb(input.val())) {\n      // If input value is a rgb(a) string, convert it to hex color and update opacity\n      hex = rgbString2hex(input.val());\n      alpha = keepWithin(parseFloat(getAlpha(input.val())).toFixed(2), 0, 1);\n      if(alpha) {\n        input.attr('data-opacity', alpha);\n      }\n    } else {\n      hex = convertCase(parseHex(input.val(), true), settings.letterCase);\n    }\n\n    if(!hex){\n      hex = convertCase(parseInput(settings.defaultValue, true), settings.letterCase);\n    }\n    hsb = hex2hsb(hex);\n\n    // Get array of lowercase keywords\n    keywords = !settings.keywords ? [] : $.map(settings.keywords.split(','), function(a) {\n      return a.toLowerCase().trim();\n    });\n\n    // Set color string\n    if(input.val() !== '' && $.inArray(input.val().toLowerCase(), keywords) > -1) {\n      value = convertCase(input.val());\n    } else {\n      value = isRgb(input.val()) ? parseRgb(input.val()) : hex;\n    }\n\n    // Update input value\n    if(!preserveInputValue) input.val(value);\n\n    // Determine opacity value\n    if(settings.opacity) {\n      // Get from data-opacity attribute and keep within 0-1 range\n      opacity = input.attr('data-opacity') === '' ? 1 : keepWithin(parseFloat(input.attr('data-opacity')).toFixed(2), 0, 1);\n      if(isNaN(opacity)) opacity = 1;\n      input.attr('data-opacity', opacity);\n      swatch.find('span').css('opacity', String(opacity));\n\n      // Set opacity picker position\n      y = keepWithin(opacitySlider.height() - (opacitySlider.height() * opacity), 0, opacitySlider.height());\n      opacityPicker.css('top', y + 'px');\n    }\n\n    // Set opacity to zero if input value is transparent\n    if(input.val().toLowerCase() === 'transparent') {\n      swatch.find('span').css('opacity', String(0));\n    }\n\n    // Update swatch\n    swatch.find('span').css('backgroundColor', hex);\n\n    // Determine picker locations\n    switch(settings.control) {\n      case 'wheel':\n        // Set grid position\n        r = keepWithin(Math.ceil(hsb.s * 0.75), 0, grid.height() / 2);\n        phi = hsb.h * Math.PI / 180;\n        x = keepWithin(75 - Math.cos(phi) * r, 0, grid.width());\n        y = keepWithin(75 - Math.sin(phi) * r, 0, grid.height());\n        gridPicker.css({\n          top: y + 'px',\n          left: x + 'px'\n        });\n\n        // Set slider position\n        y = 150 - (hsb.b / (100 / grid.height()));\n        if(hex === '') y = 0;\n        sliderPicker.css('top', y + 'px');\n        \n        // Update panel color\n        slider.css('backgroundColor', hsb2hex({ h: hsb.h, s: hsb.s, b: 100 }));\n        break;\n\n      case 'saturation':\n        // Set grid position\n        x = keepWithin((5 * hsb.h) / 12, 0, 150);\n        y = keepWithin(grid.height() - Math.ceil(hsb.b / (100 / grid.height())), 0, grid.height());\n        gridPicker.css({\n          top: y + 'px',\n          left: x + 'px'\n        });\n\n        // Set slider position\n        y = keepWithin(slider.height() - (hsb.s * (slider.height() / 100)), 0, slider.height());\n        sliderPicker.css('top', y + 'px');\n\n        // Update UI\n        slider.css('backgroundColor', hsb2hex({ h: hsb.h, s: 100, b: hsb.b }));\n        minicolors.find('.minicolors-grid-inner').css('opacity', hsb.s / 100);\n        break;\n\n      case 'brightness':\n        // Set grid position\n        x = keepWithin((5 * hsb.h) / 12, 0, 150);\n        y = keepWithin(grid.height() - Math.ceil(hsb.s / (100 / grid.height())), 0, grid.height());\n        gridPicker.css({\n          top: y + 'px',\n          left: x + 'px'\n        });\n\n        // Set slider position\n        y = keepWithin(slider.height() - (hsb.b * (slider.height() / 100)), 0, slider.height());\n        sliderPicker.css('top', y + 'px');\n\n        // Update UI\n        slider.css('backgroundColor', hsb2hex({ h: hsb.h, s: hsb.s, b: 100 }));\n        minicolors.find('.minicolors-grid-inner').css('opacity', 1 - (hsb.b / 100));\n        break;\n\n      default:\n        // Set grid position\n        x = keepWithin(Math.ceil(hsb.s / (100 / grid.width())), 0, grid.width());\n        y = keepWithin(grid.height() - Math.ceil(hsb.b / (100 / grid.height())), 0, grid.height());\n        gridPicker.css({\n          top: y + 'px',\n          left: x + 'px'\n        });\n\n        // Set slider position\n        y = keepWithin(slider.height() - (hsb.h / (360 / slider.height())), 0, slider.height());\n        sliderPicker.css('top', y + 'px');\n\n        // Update panel color\n        grid.css('backgroundColor', hsb2hex({ h: hsb.h, s: 100, b: 100 }));\n        break;\n    }\n\n    // Fire change event, but only if minicolors is fully initialized\n    if(input.data('minicolors-initialized')) {\n      doChange(input, value, opacity);\n    }\n  }\n\n  // Runs the change and changeDelay callbacks\n  function doChange(input, value, opacity) {\n    var settings = input.data('minicolors-settings');\n    var lastChange = input.data('minicolors-lastChange');\n    var obj, sel, i;\n\n    // Only run if it actually changed\n    if(!lastChange || lastChange.value !== value || lastChange.opacity !== opacity) {\n\n      // Remember last-changed value\n      input.data('minicolors-lastChange', {\n        value: value,\n        opacity: opacity\n      });\n\n      // Check and select applicable swatch\n      if(settings.swatches && settings.swatches.length !== 0) {\n        if(!isRgb(value)) {\n          obj = hex2rgb(value);\n        }\n        else {\n          obj = parseRgb(value, true);\n        }\n        sel = -1;\n        for(i = 0; i < settings.swatches.length; ++i) {\n          if(obj.r === settings.swatches[i].r && obj.g === settings.swatches[i].g && obj.b === settings.swatches[i].b && obj.a === settings.swatches[i].a) {\n            sel = i;\n            break;\n          }\n        }\n\n        input.parent().find('.minicolors-swatches .minicolors-swatch').removeClass('selected');\n        if(sel !== -1) {\n          input.parent().find('.minicolors-swatches .minicolors-swatch').eq(i).addClass('selected');\n        }\n      }\n\n      // Fire change event\n      if(settings.change) {\n        if(settings.changeDelay) {\n          // Call after a delay\n          clearTimeout(input.data('minicolors-changeTimeout'));\n          input.data('minicolors-changeTimeout', setTimeout(function() {\n            settings.change.call(input.get(0), value, opacity);\n          }, settings.changeDelay));\n        } else {\n          // Call immediately\n          settings.change.call(input.get(0), value, opacity);\n        }\n      }\n      input.trigger('change').trigger('input');\n    }\n  }\n\n  // Generates an RGB(A) object based on the input's value\n  function rgbObject(input) {\n    var rgb,\n      opacity = $(input).attr('data-opacity');\n    if( isRgb($(input).val()) ) {\n      rgb = parseRgb($(input).val(), true);\n    } else {\n      var hex = parseHex($(input).val(), true);\n      rgb = hex2rgb(hex);\n    }\n    if( !rgb ) return null;\n    if( opacity !== undefined ) $.extend(rgb, { a: parseFloat(opacity) });\n    return rgb;\n  }\n\n  // Generates an RGB(A) string based on the input's value\n  function rgbString(input, alpha) {\n    var rgb,\n      opacity = $(input).attr('data-opacity');\n    if( isRgb($(input).val()) ) {\n      rgb = parseRgb($(input).val(), true);\n    } else {\n      var hex = parseHex($(input).val(), true);\n      rgb = hex2rgb(hex);\n    }\n    if( !rgb ) return null;\n    if( opacity === undefined ) opacity = 1;\n    if( alpha ) {\n      return 'rgba(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ', ' + parseFloat(opacity) + ')';\n    } else {\n      return 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n    }\n  }\n\n  // Converts to the letter case specified in settings\n  function convertCase(string, letterCase) {\n    return letterCase === 'uppercase' ? string.toUpperCase() : string.toLowerCase();\n  }\n\n  // Parses a string and returns a valid hex string when possible\n  function parseHex(string, expand) {\n    string = string.replace(/^#/g, '');\n    if(!string.match(/^[A-F0-9]{3,6}/ig)) return '';\n    if(string.length !== 3 && string.length !== 6) return '';\n    if(string.length === 3 && expand) {\n      string = string[0] + string[0] + string[1] + string[1] + string[2] + string[2];\n    }\n    return '#' + string;\n  }\n\n  // Parses a string and returns a valid RGB(A) string when possible\n  function parseRgb(string, obj) {\n    var values = string.replace(/[^\\d,.]/g, '');\n    var rgba = values.split(',');\n\n    rgba[0] = keepWithin(parseInt(rgba[0], 10), 0, 255);\n    rgba[1] = keepWithin(parseInt(rgba[1], 10), 0, 255);\n    rgba[2] = keepWithin(parseInt(rgba[2], 10), 0, 255);\n    if(rgba[3] !== undefined) {\n      rgba[3] = keepWithin(parseFloat(rgba[3], 10), 0, 1);\n    }\n\n    // Return RGBA object\n    if( obj ) {\n      if (rgba[3] !== undefined) {\n        return {\n          r: rgba[0],\n          g: rgba[1],\n          b: rgba[2],\n          a: rgba[3]\n        };\n      } else {\n        return {\n          r: rgba[0],\n          g: rgba[1],\n          b: rgba[2]\n        };\n      }\n    }\n\n    // Return RGBA string\n    if(typeof(rgba[3]) !== 'undefined' && rgba[3] <= 1) {\n      return 'rgba(' + rgba[0] + ', ' + rgba[1] + ', ' + rgba[2] + ', ' + rgba[3] + ')';\n    } else {\n      return 'rgb(' + rgba[0] + ', ' + rgba[1] + ', ' + rgba[2] + ')';\n    }\n\n  }\n\n  // Parses a string and returns a valid color string when possible\n  function parseInput(string, expand) {\n    if(isRgb(string)) {\n      // Returns a valid rgb(a) string\n      return parseRgb(string);\n    } else {\n      return parseHex(string, expand);\n    }\n  }\n\n  // Keeps value within min and max\n  function keepWithin(value, min, max) {\n    if(value < min) value = min;\n    if(value > max) value = max;\n    return value;\n  }\n\n  // Checks if a string is a valid RGB(A) string\n  function isRgb(string) {\n    var rgb = string.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n    return (rgb && rgb.length === 4) ? true : false;\n  }\n\n  // Function to get alpha from a RGB(A) string\n  function getAlpha(rgba) {\n    rgba = rgba.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+(\\.\\d{1,2})?|\\.\\d{1,2})[\\s+]?/i);\n    return (rgba && rgba.length === 6) ? rgba[4] : '1';\n  }\n\n  // Converts an HSB object to an RGB object\n  function hsb2rgb(hsb) {\n    var rgb = {};\n    var h = Math.round(hsb.h);\n    var s = Math.round(hsb.s * 255 / 100);\n    var v = Math.round(hsb.b * 255 / 100);\n    if(s === 0) {\n      rgb.r = rgb.g = rgb.b = v;\n    } else {\n      var t1 = v;\n      var t2 = (255 - s) * v / 255;\n      var t3 = (t1 - t2) * (h % 60) / 60;\n      if(h === 360) h = 0;\n      if(h < 60) { rgb.r = t1; rgb.b = t2; rgb.g = t2 + t3; }\n      else if(h < 120) {rgb.g = t1; rgb.b = t2; rgb.r = t1 - t3; }\n      else if(h < 180) {rgb.g = t1; rgb.r = t2; rgb.b = t2 + t3; }\n      else if(h < 240) {rgb.b = t1; rgb.r = t2; rgb.g = t1 - t3; }\n      else if(h < 300) {rgb.b = t1; rgb.g = t2; rgb.r = t2 + t3; }\n      else if(h < 360) {rgb.r = t1; rgb.g = t2; rgb.b = t1 - t3; }\n      else { rgb.r = 0; rgb.g = 0; rgb.b = 0; }\n    }\n    return {\n      r: Math.round(rgb.r),\n      g: Math.round(rgb.g),\n      b: Math.round(rgb.b)\n    };\n  }\n\n  // Converts an RGB string to a hex string\n  function rgbString2hex(rgb){\n    rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n    return (rgb && rgb.length === 4) ? '#' +\n      ('0' + parseInt(rgb[1],10).toString(16)).slice(-2) +\n      ('0' + parseInt(rgb[2],10).toString(16)).slice(-2) +\n      ('0' + parseInt(rgb[3],10).toString(16)).slice(-2) : '';\n  }\n\n  // Converts an RGB object to a hex string\n  function rgb2hex(rgb) {\n    var hex = [\n      rgb.r.toString(16),\n      rgb.g.toString(16),\n      rgb.b.toString(16)\n    ];\n    $.each(hex, function(nr, val) {\n      if(val.length === 1) hex[nr] = '0' + val;\n    });\n    return '#' + hex.join('');\n  }\n\n  // Converts an HSB object to a hex string\n  function hsb2hex(hsb) {\n    return rgb2hex(hsb2rgb(hsb));\n  }\n\n  // Converts a hex string to an HSB object\n  function hex2hsb(hex) {\n    var hsb = rgb2hsb(hex2rgb(hex));\n    if(hsb.s === 0) hsb.h = 360;\n    return hsb;\n  }\n\n  // Converts an RGB object to an HSB object\n  function rgb2hsb(rgb) {\n    var hsb = { h: 0, s: 0, b: 0 };\n    var min = Math.min(rgb.r, rgb.g, rgb.b);\n    var max = Math.max(rgb.r, rgb.g, rgb.b);\n    var delta = max - min;\n    hsb.b = max;\n    hsb.s = max !== 0 ? 255 * delta / max : 0;\n    if(hsb.s !== 0) {\n      if(rgb.r === max) {\n        hsb.h = (rgb.g - rgb.b) / delta;\n      } else if(rgb.g === max) {\n        hsb.h = 2 + (rgb.b - rgb.r) / delta;\n      } else {\n        hsb.h = 4 + (rgb.r - rgb.g) / delta;\n      }\n    } else {\n      hsb.h = -1;\n    }\n    hsb.h *= 60;\n    if(hsb.h < 0) {\n      hsb.h += 360;\n    }\n    hsb.s *= 100/255;\n    hsb.b *= 100/255;\n    return hsb;\n  }\n\n  // Converts a hex string to an RGB object\n  function hex2rgb(hex) {\n    hex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n    return {\n      r: hex >> 16,\n      g: (hex & 0x00FF00) >> 8,\n      b: (hex & 0x0000FF)\n    };\n  }\n\n  // Handle events\n  $([document])\n    // Hide on clicks outside of the control\n    .on('mousedown.minicolors touchstart.minicolors', function(event) {\n      if(!$(event.target).parents().add(event.target).hasClass('minicolors')) {\n        hide();\n      }\n    })\n    // Start moving\n    .on('mousedown.minicolors touchstart.minicolors', '.minicolors-grid, .minicolors-slider, .minicolors-opacity-slider', function(event) {\n      var target = $(this);\n      event.preventDefault();\n      $(event.delegateTarget).data('minicolors-target', target);\n      move(target, event, true);\n    })\n    // Move pickers\n    .on('mousemove.minicolors touchmove.minicolors', function(event) {\n      var target = $(event.delegateTarget).data('minicolors-target');\n      if(target) move(target, event);\n    })\n    // Stop moving\n    .on('mouseup.minicolors touchend.minicolors', function() {\n      $(this).removeData('minicolors-target');\n    })\n    // Selected a swatch\n    .on('click.minicolors', '.minicolors-swatches li', function(event) {\n      event.preventDefault();\n      var target = $(this), input = target.parents('.minicolors').find('.minicolors-input'), color = target.data('swatch-color');\n      updateInput(input, color, getAlpha(color));\n      updateFromInput(input);\n    })\n    // Show panel when swatch is clicked\n    .on('mousedown.minicolors touchstart.minicolors', '.minicolors-input-swatch', function(event) {\n      var input = $(this).parent().find('.minicolors-input');\n      event.preventDefault();\n      show(input);\n    })\n    // Show on focus\n    .on('focus.minicolors', '.minicolors-input', function() {\n      var input = $(this);\n      if(!input.data('minicolors-initialized')) return;\n      show(input);\n    })\n    // Update value on blur\n    .on('blur.minicolors', '.minicolors-input', function() {\n      var input = $(this);\n      var settings = input.data('minicolors-settings');\n      var keywords;\n      var hex;\n      var rgba;\n      var swatchOpacity;\n      var value;\n\n      if(!input.data('minicolors-initialized')) return;\n\n      // Get array of lowercase keywords\n      keywords = !settings.keywords ? [] : $.map(settings.keywords.split(','), function(a) {\n        return a.toLowerCase().trim();\n      });\n\n      // Set color string\n      if(input.val() !== '' && $.inArray(input.val().toLowerCase(), keywords) > -1) {\n        value = input.val();\n      } else {\n        // Get RGBA values for easy conversion\n        if(isRgb(input.val())) {\n          rgba = parseRgb(input.val(), true);\n        } else {\n          hex = parseHex(input.val(), true);\n          rgba = hex ? hex2rgb(hex) : null;\n        }\n\n        // Convert to format\n        if(rgba === null) {\n          value = settings.defaultValue;\n        } else if(settings.format === 'rgb') {\n          value = settings.opacity ?\n            parseRgb('rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' + input.attr('data-opacity') + ')') :\n            parseRgb('rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')');\n        } else {\n          value = rgb2hex(rgba);\n        }\n      }\n\n      // Update swatch opacity\n      swatchOpacity = settings.opacity ? input.attr('data-opacity') : 1;\n      if(value.toLowerCase() === 'transparent') swatchOpacity = 0;\n      input\n        .closest('.minicolors')\n        .find('.minicolors-input-swatch > span')\n        .css('opacity', String(swatchOpacity));\n\n      // Set input value\n      input.val(value);\n\n      // Is it blank?\n      if(input.val() === '') input.val(parseInput(settings.defaultValue, true));\n\n      // Adjust case\n      input.val(convertCase(input.val(), settings.letterCase));\n\n    })\n    // Handle keypresses\n    .on('keydown.minicolors', '.minicolors-input', function(event) {\n      var input = $(this);\n      if(!input.data('minicolors-initialized')) return;\n      switch(event.which) {\n        case 9: // tab\n          hide();\n          break;\n        case 13: // enter\n        case 27: // esc\n          hide();\n          input.blur();\n          break;\n      }\n    })\n    // Update on keyup\n    .on('keyup.minicolors', '.minicolors-input', function() {\n      var input = $(this);\n      if(!input.data('minicolors-initialized')) return;\n      updateFromInput(input, true);\n    })\n    // Update on paste\n    .on('paste.minicolors', '.minicolors-input', function() {\n      var input = $(this);\n      if(!input.data('minicolors-initialized')) return;\n      setTimeout(function() {\n        updateFromInput(input, true);\n      }, 1);\n    });\n}));\n", "//\n// jQuery MiniColors: A tiny color picker built on jQuery\n//\n// Developed by Cory LaViska for A Beautiful Site, LLC\n//\n// Licensed under the MIT license: http://opensource.org/licenses/MIT\n//\n!function(i){\"function\"==typeof define&&define.amd?define([\"jquery\"],i):\"object\"==typeof exports?module.exports=i(require(\"jquery\")):i(jQuery)}(function(C){\"use strict\";function o(i){var t=i.parent();i.removeData(\"minicolors-initialized\").removeData(\"minicolors-settings\").removeProp(\"size\").removeClass(\"minicolors-input\"),t.before(i).remove()}function s(i){var t=i.parent(),o=t.find(\".minicolors-panel\"),s=i.data(\"minicolors-settings\");!i.data(\"minicolors-initialized\")||i.prop(\"disabled\")||t.hasClass(\"minicolors-inline\")||t.hasClass(\"minicolors-focus\")||(a(),t.addClass(\"minicolors-focus\"),o.animate?o.stop(!0,!0).fadeIn(s.showSpeed,function(){s.show&&s.show.call(i.get(0))}):(o.show(),s.show&&s.show.call(i.get(0))))}function a(){C(\".minicolors-focus\").each(function(){var i=C(this),t=i.find(\".minicolors-input\"),o=i.find(\".minicolors-panel\"),s=t.data(\"minicolors-settings\");o.animate?o.fadeOut(s.hideSpeed,function(){s.hide&&s.hide.call(t.get(0)),i.removeClass(\"minicolors-focus\")}):(o.hide(),s.hide&&s.hide.call(t.get(0)),i.removeClass(\"minicolors-focus\"))})}function n(i,t,o){var s,a,n,r,e,c=i.parents(\".minicolors\").find(\".minicolors-input\"),l=c.data(\"minicolors-settings\"),h=i.find(\"[class$=-picker]\"),d=i.offset().left,p=i.offset().top,u=Math.round(t.pageX-d),g=Math.round(t.pageY-p),m=o?l.animationSpeed:0;t.originalEvent.changedTouches&&(u=t.originalEvent.changedTouches[0].pageX-d,g=t.originalEvent.changedTouches[0].pageY-p),u<0&&(u=0),g<0&&(g=0),u>i.width()&&(u=i.width()),g>i.height()&&(g=i.height()),i.parent().is(\".minicolors-slider-wheel\")&&h.parent().is(\".minicolors-grid\")&&(s=75-u,a=75-g,n=Math.sqrt(s*s+a*a),(r=Math.atan2(a,s))<0&&(r+=2*Math.PI),75<n&&(u=(n=75)-75*Math.cos(r),g=75-75*Math.sin(r)),u=Math.round(u),g=Math.round(g)),e={top:g+\"px\"},i.is(\".minicolors-grid\")&&(e.left=u+\"px\"),h.animate?h.stop(!0).animate(e,m,l.animationEasing,function(){f(c,i)}):(h.css(e),f(c,i))}function f(i,t){function o(i,t){var o,s;return i.length&&t?(o=i.offset().left,s=i.offset().top,{x:o-t.offset().left+i.outerWidth()/2,y:s-t.offset().top+i.outerHeight()/2}):null}var s,a,n,r,e,c,l,h=i.val(),d=i.attr(\"data-opacity\"),p=i.parent(),u=i.data(\"minicolors-settings\"),g=p.find(\".minicolors-input-swatch\"),m=p.find(\".minicolors-grid\"),f=p.find(\".minicolors-slider\"),v=p.find(\".minicolors-opacity-slider\"),b=m.find(\"[class$=-picker]\"),w=f.find(\"[class$=-picker]\"),y=v.find(\"[class$=-picker]\"),C=o(b,m),k=o(w,f),M=o(y,v);if(t.is(\".minicolors-grid, .minicolors-slider, .minicolors-opacity-slider\")){switch(u.control){case\"wheel\":r=m.width()/2-C.x,e=m.height()/2-C.y,c=Math.sqrt(r*r+e*e),(l=Math.atan2(e,r))<0&&(l+=2*Math.PI),75<c&&(c=75,C.x=69-75*Math.cos(l),C.y=69-75*Math.sin(l)),a=F(c/.75,0,100),h=q({h:s=F(180*l/Math.PI,0,360),s:a,b:n=F(100-Math.floor(k.y*(100/f.height())),0,100)}),f.css(\"backgroundColor\",q({h:s,s:a,b:100}));break;case\"saturation\":h=q({h:s=F(parseInt(C.x*(360/m.width()),10),0,360),s:a=F(100-Math.floor(k.y*(100/f.height())),0,100),b:n=F(100-Math.floor(C.y*(100/m.height())),0,100)}),f.css(\"backgroundColor\",q({h:s,s:100,b:n})),p.find(\".minicolors-grid-inner\").css(\"opacity\",a/100);break;case\"brightness\":h=q({h:s=F(parseInt(C.x*(360/m.width()),10),0,360),s:a=F(100-Math.floor(C.y*(100/m.height())),0,100),b:n=F(100-Math.floor(k.y*(100/f.height())),0,100)}),f.css(\"backgroundColor\",q({h:s,s:a,b:100})),p.find(\".minicolors-grid-inner\").css(\"opacity\",1-n/100);break;default:h=q({h:s=F(360-parseInt(k.y*(360/f.height()),10),0,360),s:a=F(Math.floor(C.x*(100/m.width())),0,100),b:n=F(100-Math.floor(C.y*(100/m.height())),0,100)}),m.css(\"backgroundColor\",q({h:s,s:100,b:100}))}x(i,h,d=u.opacity?parseFloat(1-M.y/v.height()).toFixed(2):1)}else g.find(\"span\").css({backgroundColor:h,opacity:String(d)}),S(i,h,d)}function x(i,t,o){var s,a=i.parent(),n=i.data(\"minicolors-settings\"),r=a.find(\".minicolors-input-swatch\");n.opacity&&i.attr(\"data-opacity\",o),t=\"rgb\"===n.format?(s=T(t)?I(t,!0):L(M(t,!0)),o=\"\"===i.attr(\"data-opacity\")?1:F(parseFloat(i.attr(\"data-opacity\")).toFixed(2),0,1),!isNaN(o)&&n.opacity||(o=1),i.minicolors(\"rgbObject\").a<=1&&s&&n.opacity?\"rgba(\"+s.r+\", \"+s.g+\", \"+s.b+\", \"+parseFloat(o)+\")\":\"rgb(\"+s.r+\", \"+s.g+\", \"+s.b+\")\"):(T(t)&&(t=j(t)),k(t,n.letterCase)),i.val(t),r.find(\"span\").css({backgroundColor:t,opacity:String(o)}),S(i,t,o)}function d(i,t){var o,s,a,n,r,e,c,l,h,d,p=i.parent(),u=i.data(\"minicolors-settings\"),g=p.find(\".minicolors-input-swatch\"),m=p.find(\".minicolors-grid\"),f=p.find(\".minicolors-slider\"),v=p.find(\".minicolors-opacity-slider\"),b=m.find(\"[class$=-picker]\"),w=f.find(\"[class$=-picker]\"),y=v.find(\"[class$=-picker]\");switch(T(i.val())?(o=j(i.val()),(r=F(parseFloat(D(i.val())).toFixed(2),0,1))&&i.attr(\"data-opacity\",r)):o=k(M(i.val(),!0),u.letterCase),s=function(i){var t=function(i){var t={h:0,s:0,b:0},o=Math.min(i.r,i.g,i.b),s=Math.max(i.r,i.g,i.b),a=s-o;t.b=s,t.s=0!==s?255*a/s:0,0!==t.s?i.r===s?t.h=(i.g-i.b)/a:i.g===s?t.h=2+(i.b-i.r)/a:t.h=4+(i.r-i.g)/a:t.h=-1;t.h*=60,t.h<0&&(t.h+=360);return t.s*=100/255,t.b*=100/255,t}(L(i));0===t.s&&(t.h=360);return t}(o=o||k(z(u.defaultValue,!0),u.letterCase)),n=u.keywords?C.map(u.keywords.split(\",\"),function(i){return i.toLowerCase().trim()}):[],e=\"\"!==i.val()&&-1<C.inArray(i.val().toLowerCase(),n)?k(i.val()):T(i.val())?I(i.val()):o,t||i.val(e),u.opacity&&(a=\"\"===i.attr(\"data-opacity\")?1:F(parseFloat(i.attr(\"data-opacity\")).toFixed(2),0,1),isNaN(a)&&(a=1),i.attr(\"data-opacity\",a),g.find(\"span\").css(\"opacity\",String(a)),l=F(v.height()-v.height()*a,0,v.height()),y.css(\"top\",l+\"px\")),\"transparent\"===i.val().toLowerCase()&&g.find(\"span\").css(\"opacity\",String(0)),g.find(\"span\").css(\"backgroundColor\",o),u.control){case\"wheel\":h=F(Math.ceil(.75*s.s),0,m.height()/2),d=s.h*Math.PI/180,c=F(75-Math.cos(d)*h,0,m.width()),l=F(75-Math.sin(d)*h,0,m.height()),b.css({top:l+\"px\",left:c+\"px\"}),l=150-s.b/(100/m.height()),\"\"===o&&(l=0),w.css(\"top\",l+\"px\"),f.css(\"backgroundColor\",q({h:s.h,s:s.s,b:100}));break;case\"saturation\":c=F(5*s.h/12,0,150),l=F(m.height()-Math.ceil(s.b/(100/m.height())),0,m.height()),b.css({top:l+\"px\",left:c+\"px\"}),l=F(f.height()-s.s*(f.height()/100),0,f.height()),w.css(\"top\",l+\"px\"),f.css(\"backgroundColor\",q({h:s.h,s:100,b:s.b})),p.find(\".minicolors-grid-inner\").css(\"opacity\",s.s/100);break;case\"brightness\":c=F(5*s.h/12,0,150),l=F(m.height()-Math.ceil(s.s/(100/m.height())),0,m.height()),b.css({top:l+\"px\",left:c+\"px\"}),l=F(f.height()-s.b*(f.height()/100),0,f.height()),w.css(\"top\",l+\"px\"),f.css(\"backgroundColor\",q({h:s.h,s:s.s,b:100})),p.find(\".minicolors-grid-inner\").css(\"opacity\",1-s.b/100);break;default:c=F(Math.ceil(s.s/(100/m.width())),0,m.width()),l=F(m.height()-Math.ceil(s.b/(100/m.height())),0,m.height()),b.css({top:l+\"px\",left:c+\"px\"}),l=F(f.height()-s.h/(360/f.height()),0,f.height()),w.css(\"top\",l+\"px\"),m.css(\"backgroundColor\",q({h:s.h,s:100,b:100}))}i.data(\"minicolors-initialized\")&&S(i,e,a)}function S(i,t,o){var s,a,n,r=i.data(\"minicolors-settings\"),e=i.data(\"minicolors-lastChange\");if(!e||e.value!==t||e.opacity!==o){if(i.data(\"minicolors-lastChange\",{value:t,opacity:o}),r.swatches&&0!==r.swatches.length){for(s=T(t)?I(t,!0):L(t),a=-1,n=0;n<r.swatches.length;++n)if(s.r===r.swatches[n].r&&s.g===r.swatches[n].g&&s.b===r.swatches[n].b&&s.a===r.swatches[n].a){a=n;break}i.parent().find(\".minicolors-swatches .minicolors-swatch\").removeClass(\"selected\"),-1!==a&&i.parent().find(\".minicolors-swatches .minicolors-swatch\").eq(n).addClass(\"selected\")}r.change&&(r.changeDelay?(clearTimeout(i.data(\"minicolors-changeTimeout\")),i.data(\"minicolors-changeTimeout\",setTimeout(function(){r.change.call(i.get(0),t,o)},r.changeDelay))):r.change.call(i.get(0),t,o)),i.trigger(\"change\").trigger(\"input\")}}function k(i,t){return\"uppercase\"===t?i.toUpperCase():i.toLowerCase()}function M(i,t){return!(i=i.replace(/^#/g,\"\")).match(/^[A-F0-9]{3,6}/gi)||3!==i.length&&6!==i.length?\"\":(3===i.length&&t&&(i=i[0]+i[0]+i[1]+i[1]+i[2]+i[2]),\"#\"+i)}function I(i,t){var o=i.replace(/[^\\d,.]/g,\"\").split(\",\");return o[0]=F(parseInt(o[0],10),0,255),o[1]=F(parseInt(o[1],10),0,255),o[2]=F(parseInt(o[2],10),0,255),void 0!==o[3]&&(o[3]=F(parseFloat(o[3],10),0,1)),t?void 0!==o[3]?{r:o[0],g:o[1],b:o[2],a:o[3]}:{r:o[0],g:o[1],b:o[2]}:void 0!==o[3]&&o[3]<=1?\"rgba(\"+o[0]+\", \"+o[1]+\", \"+o[2]+\", \"+o[3]+\")\":\"rgb(\"+o[0]+\", \"+o[1]+\", \"+o[2]+\")\"}function z(i,t){return T(i)?I(i):M(i,t)}function F(i,t,o){return i<t&&(i=t),o<i&&(i=o),i}function T(i){var t=i.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);return!(!t||4!==t.length)}function D(i){return(i=i.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+(\\.\\d{1,2})?|\\.\\d{1,2})[\\s+]?/i))&&6===i.length?i[4]:\"1\"}function j(i){return(i=i.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i))&&4===i.length?\"#\"+(\"0\"+parseInt(i[1],10).toString(16)).slice(-2)+(\"0\"+parseInt(i[2],10).toString(16)).slice(-2)+(\"0\"+parseInt(i[3],10).toString(16)).slice(-2):\"\"}function p(i){var o=[i.r.toString(16),i.g.toString(16),i.b.toString(16)];return C.each(o,function(i,t){1===t.length&&(o[i]=\"0\"+t)}),\"#\"+o.join(\"\")}function q(i){return p((t=i,n={},r=Math.round(t.h),e=Math.round(255*t.s/100),c=Math.round(255*t.b/100),0===e?n.r=n.g=n.b=c:(a=r%60*((o=c)-(s=(255-e)*c/255))/60,360===r&&(r=0),r<60?(n.r=o,n.b=s,n.g=s+a):r<120?(n.g=o,n.b=s,n.r=o-a):r<180?(n.g=o,n.r=s,n.b=s+a):r<240?(n.b=o,n.r=s,n.g=o-a):r<300?(n.b=o,n.g=s,n.r=s+a):r<360?(n.r=o,n.g=s,n.b=o-a):(n.r=0,n.g=0,n.b=0)),{r:Math.round(n.r),g:Math.round(n.g),b:Math.round(n.b)}));var t,o,s,a,n,r,e,c}function L(i){return{r:(i=parseInt(-1<i.indexOf(\"#\")?i.substring(1):i,16))>>16,g:(65280&i)>>8,b:255&i}}C.minicolors={defaults:{animationSpeed:50,animationEasing:\"swing\",change:null,changeDelay:0,control:\"hue\",defaultValue:\"\",format:\"hex\",hide:null,hideSpeed:100,inline:!1,keywords:\"\",letterCase:\"lowercase\",opacity:!1,position:\"bottom\",show:null,showSpeed:100,theme:\"default\",swatches:[]}},C.extend(C.fn,{minicolors:function(i,t){switch(i){case\"destroy\":return C(this).each(function(){o(C(this))}),C(this);case\"hide\":return a(),C(this);case\"opacity\":return void 0===t?C(this).attr(\"data-opacity\"):(C(this).each(function(){d(C(this).attr(\"data-opacity\",t))}),C(this));case\"rgbObject\":return function(i){var t,o=C(i).attr(\"data-opacity\");{var s;t=T(C(i).val())?I(C(i).val(),!0):(s=M(C(i).val(),!0),L(s))}if(!t)return null;void 0!==o&&C.extend(t,{a:parseFloat(o)});return t}(C(this));case\"rgbString\":case\"rgbaString\":return function(i,t){var o,s=C(i).attr(\"data-opacity\");{var a;o=T(C(i).val())?I(C(i).val(),!0):(a=M(C(i).val(),!0),L(a))}if(!o)return null;void 0===s&&(s=1);return t?\"rgba(\"+o.r+\", \"+o.g+\", \"+o.b+\", \"+parseFloat(s)+\")\":\"rgb(\"+o.r+\", \"+o.g+\", \"+o.b+\")\"}(C(this),\"rgbaString\"===i);case\"settings\":return void 0===t?C(this).data(\"minicolors-settings\"):(C(this).each(function(){var i=C(this).data(\"minicolors-settings\")||{};o(C(this)),C(this).minicolors(C.extend(!0,i,t))}),C(this));case\"show\":return s(C(this).eq(0)),C(this);case\"value\":return void 0===t?C(this).val():(C(this).each(function(){\"object\"==typeof t&&null!==t?(void 0!==t.opacity&&C(this).attr(\"data-opacity\",F(t.opacity,0,1)),t.color&&C(this).val(t.color)):C(this).val(t),d(C(this))}),C(this));default:return\"create\"!==i&&(t=i),C(this).each(function(){!function(t,i){var o,s,a,n,r,e,c,l=C('<div class=\"minicolors\" />'),h=C.minicolors.defaults;if(t.data(\"minicolors-initialized\"))return;i=C.extend(!0,{},h,i),l.addClass(\"minicolors-theme-\"+i.theme).toggleClass(\"minicolors-with-opacity\",i.opacity),void 0!==i.position&&C.each(i.position.split(\" \"),function(){l.addClass(\"minicolors-position-\"+this)});s=\"rgb\"===i.format?i.opacity?\"25\":\"20\":i.keywords?\"11\":\"7\";t.addClass(\"minicolors-input\").data(\"minicolors-initialized\",!1).data(\"minicolors-settings\",i).prop(\"size\",s).wrap(l).after('<div class=\"minicolors-panel minicolors-slider-'+i.control+'\"><div class=\"minicolors-slider minicolors-sprite\"><div class=\"minicolors-picker\"></div></div><div class=\"minicolors-opacity-slider minicolors-sprite\"><div class=\"minicolors-picker\"></div></div><div class=\"minicolors-grid minicolors-sprite\"><div class=\"minicolors-grid-inner\"></div><div class=\"minicolors-picker\"><div></div></div></div></div>'),i.inline||(t.after('<span class=\"minicolors-swatch minicolors-sprite minicolors-input-swatch\"><span class=\"minicolors-swatch-color\"></span></span>'),t.next(\".minicolors-input-swatch\").on(\"click\",function(i){i.preventDefault(),t.trigger(\"focus\")}));if((e=t.parent().find(\".minicolors-panel\")).on(\"selectstart\",function(){return!1}).end(),i.swatches&&0!==i.swatches.length)for(e.addClass(\"minicolors-with-swatches\"),a=C('<ul class=\"minicolors-swatches\"></ul>').appendTo(e),c=0;c<i.swatches.length;++c)n=\"object\"==typeof i.swatches[c]?(o=i.swatches[c].name,i.swatches[c].color):(o=\"\",i.swatches[c]),n=T(r=n)?I(n,!0):L(M(n,!0)),C('<li class=\"minicolors-swatch minicolors-sprite\"><span class=\"minicolors-swatch-color\"></span></li>').attr(\"title\",o).appendTo(a).data(\"swatch-color\",r).find(\".minicolors-swatch-color\").css({backgroundColor:\"transparent\"!==r?p(n):\"transparent\",opacity:String(n.a)}),i.swatches[c]=n;i.inline&&t.parent().addClass(\"minicolors-inline\");d(t,!1),t.data(\"minicolors-initialized\",!0)}(C(this),t)}),C(this)}}}),C([document]).on(\"mousedown.minicolors touchstart.minicolors\",function(i){C(i.target).parents().add(i.target).hasClass(\"minicolors\")||a()}).on(\"mousedown.minicolors touchstart.minicolors\",\".minicolors-grid, .minicolors-slider, .minicolors-opacity-slider\",function(i){var t=C(this);i.preventDefault(),C(i.delegateTarget).data(\"minicolors-target\",t),n(t,i,!0)}).on(\"mousemove.minicolors touchmove.minicolors\",function(i){var t=C(i.delegateTarget).data(\"minicolors-target\");t&&n(t,i)}).on(\"mouseup.minicolors touchend.minicolors\",function(){C(this).removeData(\"minicolors-target\")}).on(\"click.minicolors\",\".minicolors-swatches li\",function(i){i.preventDefault();var t=C(this),o=t.parents(\".minicolors\").find(\".minicolors-input\"),s=t.data(\"swatch-color\");x(o,s,D(s)),d(o)}).on(\"mousedown.minicolors touchstart.minicolors\",\".minicolors-input-swatch\",function(i){var t=C(this).parent().find(\".minicolors-input\");i.preventDefault(),s(t)}).on(\"focus.minicolors\",\".minicolors-input\",function(){var i=C(this);i.data(\"minicolors-initialized\")&&s(i)}).on(\"blur.minicolors\",\".minicolors-input\",function(){var i,t,o,s,a,n=C(this),r=n.data(\"minicolors-settings\");n.data(\"minicolors-initialized\")&&(i=r.keywords?C.map(r.keywords.split(\",\"),function(i){return i.toLowerCase().trim()}):[],a=\"\"!==n.val()&&-1<C.inArray(n.val().toLowerCase(),i)?n.val():null===(o=T(n.val())?I(n.val(),!0):(t=M(n.val(),!0))?L(t):null)?r.defaultValue:\"rgb\"===r.format?r.opacity?I(\"rgba(\"+o.r+\",\"+o.g+\",\"+o.b+\",\"+n.attr(\"data-opacity\")+\")\"):I(\"rgb(\"+o.r+\",\"+o.g+\",\"+o.b+\")\"):p(o),s=r.opacity?n.attr(\"data-opacity\"):1,\"transparent\"===a.toLowerCase()&&(s=0),n.closest(\".minicolors\").find(\".minicolors-input-swatch > span\").css(\"opacity\",String(s)),n.val(a),\"\"===n.val()&&n.val(z(r.defaultValue,!0)),n.val(k(n.val(),r.letterCase)))}).on(\"keydown.minicolors\",\".minicolors-input\",function(i){var t=C(this);if(t.data(\"minicolors-initialized\"))switch(i.which){case 9:a();break;case 13:case 27:a(),t.blur()}}).on(\"keyup.minicolors\",\".minicolors-input\",function(){var i=C(this);i.data(\"minicolors-initialized\")&&d(i,!0)}).on(\"paste.minicolors\",\".minicolors-input\",function(){var i=C(this);i.data(\"minicolors-initialized\")&&setTimeout(function(){d(i,!0)},1)})});"], "filenames": ["jquery.minicolors.js", "jquery.minicolors.min.js"], "buggy_code_start_loc": [229, 8], "buggy_code_end_loc": [230, 9], "fixing_code_start_loc": [229, 8], "fixing_code_end_loc": [231, 9], "type": "CWE-79", "message": "jQuery MiniColors is a color picker built on jQuery. Prior to version 2.3.6, jQuery MiniColors is prone to cross-site scripting when handling untrusted color names. This issue is patched in version 2.3.6.", "other": {"cve": {"id": "CVE-2021-32850", "sourceIdentifier": "security-advisories@github.com", "published": "2023-02-20T22:15:10.970", "lastModified": "2023-06-11T04:15:46.650", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "jQuery MiniColors is a color picker built on jQuery. Prior to version 2.3.6, jQuery MiniColors is prone to cross-site scripting when handling untrusted color names. This issue is patched in version 2.3.6."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jquery-minicolors_project:jquery-minicolors:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.3.6", "matchCriteriaId": "D1819C3F-9E7E-48E5-B795-144B3414F9FA"}]}]}], "references": [{"url": "https://github.com/claviska/jquery-minicolors/commit/ef134824a7f4110ada53ea6c173111a4fa2f48f3", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/claviska/jquery-minicolors/releases/tag/2.3.6", "source": "security-advisories@github.com", "tags": ["Release Notes"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MC5HV4ESLV2E23YGHNJ542QEZBH6YE2F/", "source": "security-advisories@github.com"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UDXBWA54A7D6HMR2TN5BAYNCU7HO2PUO/", "source": "security-advisories@github.com"}, {"url": "https://securitylab.github.com/advisories/GHSL-2021-1045_jQuery_MiniColors_Plugin/", "source": "security-advisories@github.com", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/claviska/jquery-minicolors/commit/ef134824a7f4110ada53ea6c173111a4fa2f48f3"}}