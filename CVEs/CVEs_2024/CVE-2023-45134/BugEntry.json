{"buggy_code": ["## ---------------------------------------------------------------------------\n## See the NOTICE file distributed with this work for additional\n## information regarding copyright ownership.\n##\n## This is free software; you can redistribute it and/or modify it\n## under the terms of the GNU Lesser General Public License as\n## published by the Free Software Foundation; either version 2.1 of\n## the License, or (at your option) any later version.\n##\n## This software is distributed in the hope that it will be useful,\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n## Lesser General Public License for more details.\n##\n## You should have received a copy of the GNU Lesser General Public\n## License along with this software; if not, write to the Free\n## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n## 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n## ---------------------------------------------------------------------------\n## ---------------------------------------------------------------------------------------------------------\n## This template is called by the create action which binds some context variables as it executes, based on\n## the request and the current document. These variables can be used in this template:\n## * $spaceReference - the space reference of the new document, read from the \"spaceReference\" parameter\n## * $name - the name to use for the new document, read from the \"name\" parameter\n## * $isSpace - true if we are creating a non-terminal document ($name is the space name), false if we are\n##              creating a terminal document ($name is the document name). Determined by the create action\n## * $availableTemplateProviders - list of template provider documents available from the current space\n##\n## Note: Make sure to use these bindings instead of directly using the request parameters, as the bindings\n## also consider backwards compatibility and convert older \"space\" and \"page\" parameters if they are passed.\n## ---------------------------------------------------------------------------------------------------------\n\n## ---------------------------------------------------------------------------------------------------------\n## This template can be passed a parent document reference in parameter (using the \"parent\" parameter).\n## If a parent parameter is passed, use it to set the parent when creating the new page.\n## If no parent parameter was passed, the create action will determine it to be the current document if it\n## exists or the Main space's webhome if the current document does not exist.\n## ---------------------------------------------------------------------------------------------------------\n#set ($parent = \"$!request.getParameter('parent')\")\n\n## ---------------------------------------------------------------------------------------------------------\n## This parent can be passed a title for the document to create (using the \"title\" parameter).\n## The title is used to automatically compute a page name, which can then be customized by the user.\n## If no title is given, the page name (if set) will be used as title.\n## ---------------------------------------------------------------------------------------------------------\n#if (\"$!request.title\" != '')\n  #set ($title = \"$!request.title\")\n#else\n  #set ($title = \"$!{escapetool.velocity($name)}\")\n#end\n\n## ---------------------------------------------------------------------------------------------------------\n## Get the passed template provider, if any\n## ---------------------------------------------------------------------------------------------------------\n#set($templateProvider = \"$!request.templateprovider\")\n## Get the template as well, since in case template provider is missing, template should be used, \n## to allow creation from template directly, without necessarily going through template provider.\n#set($template = \"$!request.template\")\n\n## ---------------------------------------------------------------------------------------------------------\n## If there was an exception creating the page because of invalid space, notify. \n## Should set the other variables only if there is no exception. Otherwise, if there's an exception other than the \n## 11016 one, nothing will be displayed, depending on the other passed parameters.\n## ---------------------------------------------------------------------------------------------------------\n#set($exception = $createException)\n## check if the exception is about the non-allowed spaces for template\n#if(\"$!exception\" != '' && $exception.code == 11016)\n  <div class=\"box errormessage\">\n    #set($allowedSpaces = $createAllowedSpaces)\n    #if ($allowedSpaces.size() == 1)\n      $services.localization.render('core.create.template.allowedspace.inline', [$templateProvider, $allowedSpaces.get(0)])\n    #else\n      $services.localization.render('core.create.template.allowedspaces.inline', [$templateProvider, $allowedSpaces.toString()])\n    #end\n  </div>\n#end\n## check if the exception is about the document which already exists\n#if(\"$!exception\" != '' && $exception.code == 11002)\n  <div class='box errormessage'>\n      ## Use the 'existingDocumentReference' context binding set by the create action for this case.\n      $services.localization.render('core.create.page.error.docalreadyexists',\n        [$escapetool.xml(\"${existingDocumentReference}\"),\n         $xwiki.getURL($existingDocumentReference, 'view', ''),\n         $xwiki.getURL($existingDocumentReference, 'edit', '')\n        ]\n      )\n  </div>\n#end\n## check if the exception is about the document name being invalid\n#if(\"$!exception\" != '' && $exception.code == 11018)\n<div class='box errormessage'>\n  ## Use the 'invalidNameReference' context binding set by the create action for this case.\n  $escapetool.xml($services.localization.render('entitynamevalidation.create.invalidname', [$invalidNameReference]))\n</div>\n#end\n\n## check if the exception is about the document having a path too long\n#template('hierarchy_macros.vm')\n#if(\"$!exception\" != '' && $exception.code == 11017)\n  #set ($options = {})\n  #set ($documentReference = $services.model.resolveDocument($tooLongPath))\n  <div class='box errormessage'>\n      $services.localization.render('core.create.page.error.docpathtoolong',\n        [\"<p>#hierarchy($documentReference, $options)</p>\",\n          $doc.getLocalReferenceMaxLength(),\n          $tooLongPath.length()\n        ]\n      )\n  </div>\n#end\n\n## ---------------------------------------------------------------------------------------------------------\n## Determine if we need to do extra checks for a deprecated, pre-NestedSpaces request to create a space.\n## ---------------------------------------------------------------------------------------------------------\n#set ($deprecatedSpaceCreate = \"$!request.tocreate\" == 'space')\n\n## ---------------------------------------------------------------------------------------------------------\n## Note: The list of available template providers is computed in the action and set on the context under\n## the \"availableTemplateProviders\" binding.\n## ---------------------------------------------------------------------------------------------------------\n\n## ---------------------------------------------------------------------------------------------------------\n## Macro for displaying the available types and templates and changing target space rules accordingly\n## ---------------------------------------------------------------------------------------------------------\n#macro (displayTypes)\n  #if ($template == '')\n    #set ($blankTerminalState = !$isSpace)\n    #set ($options = [\n      { \n        'name': $services.localization.render('core.create.type.default'),\n        'options': [\n          {\n            'name': $services.localization.render('core.create.type.blank'),\n            'value': 'blank',\n            'description': $services.localization.render('core.create.type.blank.description'),\n            'icon': 'file-white',\n            'data': {\n              'type': 'blank',\n              'terminal' : \"$blankTerminalState\"\n            }\n          }\n        ]\n      }])\n    #if ($xwiki.exists($services.model.createDocumentReference('', 'XWiki', 'OfficeImporter')) && $services.officemanager.isConnected())\n      ## TODO: handle this use case with an extension point\n      #set ($discard = $options[0].options.add({\n        'name': $services.localization.render('office.createForm.type.name'),\n        'value': 'office',\n        'description': $services.localization.render('office.createForm.type.description'),\n        'icon': 'file-word',\n        'data': {\n          'type':'office'\n        }\n      }))\n    #end\n    #if (!$availableTemplateProviders.isEmpty())\n      #set ($templateOptions = [])\n      #set ($discard = $options.add({'name': $services.localization.render('core.create.type.templates'), 'options': $templateOptions}))\n      #foreach($tpdoc in $availableTemplateProviders)\n        #set ($tpobj = $tpdoc.getObject('XWiki.TemplateProviderClass'))\n        #set ($tpdocRef = $services.model.serialize($tpdoc.documentReference, 'local'))\n        ##\n        ## Extract and save in data-* attributes list of allowed spaces to be used in the JavaScript validation of the spaceReference input.\n        ##\n        #set($jsAllowedSpacesArray = '[]')## Reset any previous value\n        #set($allowedSpaces = $tpobj.getValue('creationRestrictions'))\n        #if($allowedSpaces.size() == 0)\n          ## Backwards compatibility for Template Providers created before 8.3M2.\n          #set($allowedSpaces = $tpobj.getValue('spaces'))\n        #end\n        ## Reset to an empty list when no restrictions are set.\n        #if (\"$!allowedSpaces\" == '')\n          #set ($allowedSpaces = [])\n        #end\n        #if($allowedSpaces.size() > 0)\n          #set($jsAllowedSpacesArray = $jsontool.serialize($allowedSpaces))\n        #end\n        ## Compute the error message.\n        #set ($templateProviderName = $services.localization.render($tpobj.getValue('name')))\n        #if($allowedSpaces.isEmpty())\n          #set($message = '')\n        #elseif($allowedSpaces.size() == 1)\n          #set($message = $services.localization.render('core.create.template.allowedspace.inline', [$templateProviderName, $jsAllowedSpacesArray]))\n        #else\n          #set($message = $services.localization.render('core.create.template.allowedspaces.inline', [$templateProviderName, $jsAllowedSpacesArray]))\n        #end\n        ##\n        ## Determine if the creation restrictions are just suggestions\n        ##\n        #set ($restrictionsAreSuggestions = ($tpobj.getValue('creationRestrictionsAreSuggestions') == 1))\n        ##\n        ## Determine if it's a terminal page template\n        ##\n        #set ($isTerminalProvider = $tpobj.getValue('terminal'))\n        ## Check if this is an old template provider that has not been migrated (the 'type' property has not been\n        ## replaced by the 'terminal' property).\n        #set ($type = $tpobj.getValue('type'))\n        #if (\"$!isTerminalProvider\" == '' && (\"$!type\" != '' || $type == ''))\n          ## This must be an old template provider because the 'terminal' property is not set (or it was set to '---'\n          ## from the UI) and the 'type' property is still present.\n          #if ($type == 'space')\n            #set ($isTerminalProvider = false)\n          #else\n            ## 'page' or '' both resolve to true, for backwards compatibility reasons.\n            #set ($isTerminalProvider = true)\n          #end\n        #else\n          #set ($isTerminalProvider = ($isTerminalProvider == 1))\n        #end\n        ##\n        ## Display the template provider field option in the form.\n        ##\n        #set ($inputId = \"xwiki-create-form-${foreach.count}\")\n        #set ($icon = $tpobj.getValue('icon'))\n        #if (\"$!icon\" == '')\n          #set($icon = 'file-white')\n        #end\n        #set ($discard = $templateOptions.add({\n          'name': $services.localization.render($tpobj.getValue('name')),\n          'value': \"$tpdocRef\",\n          'description': $services.localization.render($tpobj.getValue('description')),\n          'icon': $icon,\n          'data': {\n            'allowed-spaces': $jsAllowedSpacesArray,\n            'allowed-spaces-message': $message,\n            'restrictions-are-suggestions': $restrictionsAreSuggestions,\n            'type': 'template',\n            'terminal' : $isTerminalProvider\n          }\n        }))\n      #end\n    #end\n    <dt>\n      <label>$services.localization.render('core.create.type')</label>\n      <span class=\"xHint\">$escapetool.xml($services.localization.render('core.create.type.hint'))</span>\n    </dt>\n    #set ($defaultValue = $request.type)\n    #if (\"$!defaultValue\" == '')\n      #if ($recommendedTemplateProviders.size() > 0)\n        #set ($defaultValue = $services.model.serialize($recommendedTemplateProviders[0].documentReference, 'local'))\n      #else\n        #set ($defaultValue = 'blank')\n      #end\n    #end\n    <dd>#xwikiSelect('type', $options, $defaultValue, false, 'xwiki-select-adaptable-medium page-type', '', true)</dd>\n  #else\n    <input type=\"hidden\" name=\"template\" value=\"$escapetool.xml($template)\" />\n  #end\n#end\n#set ($discard = $xwiki.jsfx.use('js/xwiki/create.js', {'forceSkinAction': true}))\n\n## ---------------------------------------------------------------------------------------------------------\n## Macro used to extract a wiki's homepage reference.\n## ---------------------------------------------------------------------------------------------------------\n#macro (getWikiHomePageReference $wiki $return)\n  #set ($_wikiHomePageReference = $services.wiki.getById($wiki).mainPageReference)\n  #if (!$_wikiHomePageReference)\n    #set ($wikiReference = $services.model.createWikiReference($wiki))\n    #set ($_wikiHomePageReference = $services.model.resolveDocument('', 'default', $wikiReference))\n  #end\n  #set ($return = $NULL)\n  #setVariable(\"$return\" $_wikiHomePageReference)\n#end\n\n## ---------------------------------------------------------------------------------------------------------\n## Display the form.\n## ---------------------------------------------------------------------------------------------------------\n#set ($isAjaxRequest = $request.getHeader('X-Requested-With') == 'XMLHttpRequest')\n<form action=\"$doc.getURL('create')\" method=\"post\" id=\"create\" class=\"xform\">\n  <fieldset>\n\n  ## Deprecated: Pass along any received page parent.\n  <input type='hidden' name='parent' value=\"$!{escapetool.xml($parent)}\"/>\n\n  ## The \"templateprovider\" field is needed by the CreateAction, even empty.\n  ## By the past, it was \"xwiki/create.js\" which created this field, but it was causing problems when the user sent the\n  ## form before the JavaScript code was executed.\n  <input type=\"hidden\" name=\"templateprovider\" id=\"templateprovider\" value=\"\" />\n  <input type=\"hidden\" name=\"form_token\" value=\"$!{escapetool.xml($services.csrf.getToken())}\"/>\n\n  <div class='row'>\n    ## Hide the first column when displayed in an AJAX call by clicking on a Wanted Link, because we know the target\n    ## location from the link reference.\n    #if (!$isAjaxRequest)\n      ## Determine the parent reference for the new document.\n      #set ($parentReference = $spaceReference)\n      #if (!$parentReference)\n        ## No parent reference specified.\n        #if ($doc.isNew())\n          ## Encourage the user to create the current document.\n          #set ($parentReference = $doc.documentReference.parent)\n          #if ($doc.documentReference.name == 'WebHome')\n            #set ($parentReference = $parentReference.parent)\n          #end\n        #else\n          #getWikiHomePageReference($doc.wiki $homeReference)\n          #if ($doc.documentReference.equals($homeReference) || $deprecatedSpaceCreate)\n            ## Encourage the user to create top level documents from the home page.\n            #set ($parentReference = $doc.documentReference.wikiReference)\n          #else\n            ## Encourage the user to create a child or sibling of the current document.\n            #set ($parentReference = $doc.documentReference.lastSpaceReference)\n          #end\n        #end\n      #end\n\n      ## Display the location picker.\n      <div class='col-xs-12 col-lg-6'>\n        #template('locationPicker_macros.vm')\n        ## The create action doesn't support changing the location when the current document doesn't exist (i.e. it\n        ## forces you to create the current document that is missing). For this reason we make the name and parent fields\n        ## read-only when the current document is new.\n        #locationPicker({\n          'id': 'target',\n          'title': {\n            'label': 'core.create.title',\n            'hint': 'core.create.title.hint',\n            'name': 'title',\n            'value': $title,\n            'placeholder': 'core.create.name.placeholder'\n          },\n          'preview': {\n            'label': 'core.create.locationPreview.label',\n            'hint': 'core.create.locationPreview.hint'\n          },\n          'parent': {\n            'label': 'core.create.spaceReference.label',\n            'hint': 'core.create.spaceReference.hint',\n            'name': 'spaceReference',\n            'reference': $parentReference,\n            'placeholder': 'core.create.spaceReference.placeholder',\n            'readOnly': $doc.isNew()\n          },\n          'name': {\n            'label': 'core.create.name.label',\n            'hint': 'core.create.name.hint',\n            'name': 'name',\n            'value': $name,\n            'placeholder': 'core.create.name.placeholder',\n            'readOnly': $doc.isNew()\n          }\n        })\n      </div>\n    #else\n      ## First column is hidden.\n      ## Pass along the known values as hidden inputs.\n      ##\n      <input type='hidden' name='title' value=\"$!{escapetool.xml($title)}\"/>\n      <input type='hidden' id='name' name='name' value=\"$!{escapetool.xml($name)}\" />\n      #set ($spaceReferenceLocalString = $services.model.serialize($spaceReference, 'local'))\n      <input type='hidden' id='spaceReference' name='spaceReference' value=\"$!{escapetool.xml($spaceReferenceLocalString)}\" />\n    #end\n    <div class='col-xs-12#if (!$isAjaxRequest) col-lg-6#end'>\n      <dl>\n        #if ($isAjaxRequest)\n          ## The first column that shows the location preview is hidden when creating a new page from a Wanted Link so we\n          ## need to show this information elsewhere. Even if the target page reference can't be modified by the user,\n          ## they should still see where the page is going to be created.\n          <dt>\n            <label>$escapetool.xml($services.localization.render('core.create.pageTitle'))</label>\n          </dt>\n          <dl>\n            #set ($targetDocumentReference = $services.model.createDocumentReference($name, $spaceReference))\n            #hierarchy($targetDocumentReference)\n          </dl>\n        #end\n        ## ---------------------------------------------------------------------------------------------------------\n        ## Page type\n        ## ---------------------------------------------------------------------------------------------------------\n        #displayTypes()\n        ## ---------------------------------------------------------------------------------------------------------\n        ## Terminal page - Advanced users\n        ## ---------------------------------------------------------------------------------------------------------\n        #set ($hidden = '')\n        ## Top level documents cannot be terminal.\n        #set ($isTopLevelDoc = $doc.documentReference.name == 'WebHome' &&\n          $doc.documentReference.lastSpaceReference.parent.type == 'WIKI')\n        #if (!($isAdvancedUser || $isSuperAdmin) || $deprecatedSpaceCreate || ($doc.isNew() && $isTopLevelDoc))\n          #set ($hidden = 'hidden')\n        #end\n        <dt class=\"$hidden\">\n          <input type=\"checkbox\" id=\"terminal\" name=\"tocreate\" value=\"terminal\" #if(!$isSpace)checked=\"checked\"#end/>\n          <label for=\"terminal\">$services.localization.render('core.create.terminal.label')</label>\n          ## Hidden input used to ensure that an unchecked terminal checkbox means non-terminal and that the default is not used by mistake.\n          <input type=\"hidden\" name=\"tocreate\" value=\"nonterminal\" />\n        </dt>\n        <dd class=\"$hidden\">\n          <span class=\"xHint\">$services.localization.render('core.create.terminal.hint')</span>\n        </dd>\n      </dl>\n    </div>\n  </div>\n\n  <div class='buttons'>\n    <span class='buttonwrapper'>\n      <input type='submit' class='button' value=\"$services.localization.render('create')\"/>\n    </span>\n    <span class=\"buttonwrapper\">\n      <a class=\"secondary button\" href=\"$doc.getURL()\">$services.localization.render('cancel')</a>\n    </span>\n  </div>\n\n  </fieldset>\n</form>\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.web;\n\nimport java.util.List;\n\nimport javax.inject.Inject;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.xwiki.template.TemplateManager;\nimport org.xwiki.test.page.PageTest;\nimport org.xwiki.velocity.VelocityManager;\n\nimport com.xpn.xwiki.XWikiException;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\n\n/**\n * Tests the {@code createinline.vm} template.\n *\n * @version $Id$\n * @since 14.10.12\n * @since 15.5RC1\n */\nclass CreateInlinePageTest extends PageTest\n{\n    /**\n     * The name of the template to test.\n     */\n    private static final String CREATE_INLINE_VM = \"createinline.vm\";\n\n    private static final String DOCUMENT_REFERENCE = \"xwiki:space.</div>page\";\n\n    private static final String CREATE_EXCEPTION_VELOCITY_KEY = \"createException\";\n\n    private static final String ERROR_MESSAGE_CLASS = \"errormessage\";\n\n    private VelocityManager velocityManager;\n\n    @Inject\n    private TemplateManager templateManager;\n\n    @BeforeEach\n    void setup() throws Exception\n    {\n        this.velocityManager = this.oldcore.getMocker().getInstance(VelocityManager.class);\n        // Set an empty list of recommended template providers to avoid a Velocity error.\n        this.velocityManager.getVelocityContext().put(\"recommendedTemplateProviders\", List.of());\n    }\n\n    /**\n     * Test that when there is a name validation error, the name is correctly escaped.\n     */\n    @Test\n    void testNameValidationError() throws Exception\n    {\n        // Set \"createException\" to an XWikiException to simulate a validation error.\n        Object[] args = { DOCUMENT_REFERENCE };\n        XWikiException invalidNameException = new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n            XWikiException.ERROR_XWIKI_APP_DOCUMENT_NAME_INVALID,\n            \"Cannot create document {0} because its name does not respect the name strategy of the wiki.\", null,\n            args);\n        this.velocityManager.getVelocityContext().put(CREATE_EXCEPTION_VELOCITY_KEY, invalidNameException);\n        this.velocityManager.getVelocityContext().put(\"invalidNameReference\", DOCUMENT_REFERENCE);\n\n        // Render the template.\n        Document document = Jsoup.parse(this.templateManager.render(CREATE_INLINE_VM));\n        Element errormessage = document.getElementsByClass(ERROR_MESSAGE_CLASS).first();\n        assertNotNull(errormessage);\n        String expectedMessage = String.format(\"entitynamevalidation.create.invalidname [%s]\", DOCUMENT_REFERENCE);\n        assertEquals(expectedMessage, errormessage.text());\n    }\n\n    /**\n     * Test that when there is an exception about the document already existing, the name is correctly escaped.\n     */\n    @Test\n    void testDocumentAlreadyExistsError() throws Exception\n    {\n        // Set \"createException\" to an XWikiException to simulate a document exists already error.\n        String urlToDocument = \"space/%3C%2Fdiv%3Epage\";\n        Object[] args = { DOCUMENT_REFERENCE };\n        XWikiException documentAlreadyExistsException = new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n            XWikiException.ERROR_XWIKI_APP_DOCUMENT_NOT_EMPTY,\n            \"Cannot create document {0} because it already has content\", null, args);\n        this.velocityManager.getVelocityContext().put(CREATE_EXCEPTION_VELOCITY_KEY, documentAlreadyExistsException);\n        this.velocityManager.getVelocityContext().put(\"existingDocumentReference\", DOCUMENT_REFERENCE);\n\n        // Render the template.\n        Document document = Jsoup.parse(this.templateManager.render(CREATE_INLINE_VM));\n        Element errormessage = document.getElementsByClass(ERROR_MESSAGE_CLASS).first();\n        assertNotNull(errormessage);\n        String viewURL = String.format(\"/xwiki/bin/view/%s\", urlToDocument);\n        String editURL = String.format(\"/xwiki/bin/edit/%s\", urlToDocument);\n        String expectedMessage = String.format(\"core.create.page.error.docalreadyexists [%s, %s, %s]\",\n            DOCUMENT_REFERENCE, viewURL, editURL);\n        assertEquals(expectedMessage, errormessage.text());\n    }\n}\n"], "fixing_code": ["## ---------------------------------------------------------------------------\n## See the NOTICE file distributed with this work for additional\n## information regarding copyright ownership.\n##\n## This is free software; you can redistribute it and/or modify it\n## under the terms of the GNU Lesser General Public License as\n## published by the Free Software Foundation; either version 2.1 of\n## the License, or (at your option) any later version.\n##\n## This software is distributed in the hope that it will be useful,\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n## Lesser General Public License for more details.\n##\n## You should have received a copy of the GNU Lesser General Public\n## License along with this software; if not, write to the Free\n## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n## 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n## ---------------------------------------------------------------------------\n## ---------------------------------------------------------------------------------------------------------\n## This template is called by the create action which binds some context variables as it executes, based on\n## the request and the current document. These variables can be used in this template:\n## * $spaceReference - the space reference of the new document, read from the \"spaceReference\" parameter\n## * $name - the name to use for the new document, read from the \"name\" parameter\n## * $isSpace - true if we are creating a non-terminal document ($name is the space name), false if we are\n##              creating a terminal document ($name is the document name). Determined by the create action\n## * $availableTemplateProviders - list of template provider documents available from the current space\n##\n## Note: Make sure to use these bindings instead of directly using the request parameters, as the bindings\n## also consider backwards compatibility and convert older \"space\" and \"page\" parameters if they are passed.\n## ---------------------------------------------------------------------------------------------------------\n\n## ---------------------------------------------------------------------------------------------------------\n## This template can be passed a parent document reference in parameter (using the \"parent\" parameter).\n## If a parent parameter is passed, use it to set the parent when creating the new page.\n## If no parent parameter was passed, the create action will determine it to be the current document if it\n## exists or the Main space's webhome if the current document does not exist.\n## ---------------------------------------------------------------------------------------------------------\n#set ($parent = \"$!request.getParameter('parent')\")\n\n## ---------------------------------------------------------------------------------------------------------\n## This parent can be passed a title for the document to create (using the \"title\" parameter).\n## The title is used to automatically compute a page name, which can then be customized by the user.\n## If no title is given, the page name (if set) will be used as title.\n## ---------------------------------------------------------------------------------------------------------\n#if (\"$!request.title\" != '')\n  #set ($title = \"$!request.title\")\n#else\n  #set ($title = \"$!{escapetool.velocity($name)}\")\n#end\n\n## ---------------------------------------------------------------------------------------------------------\n## Get the passed template provider, if any\n## ---------------------------------------------------------------------------------------------------------\n#set($templateProvider = \"$!request.templateprovider\")\n## Get the template as well, since in case template provider is missing, template should be used, \n## to allow creation from template directly, without necessarily going through template provider.\n#set($template = \"$!request.template\")\n\n## ---------------------------------------------------------------------------------------------------------\n## If there was an exception creating the page because of invalid space, notify. \n## Should set the other variables only if there is no exception. Otherwise, if there's an exception other than the \n## 11016 one, nothing will be displayed, depending on the other passed parameters.\n## ---------------------------------------------------------------------------------------------------------\n#set($exception = $createException)\n## check if the exception is about the non-allowed spaces for template\n#if(\"$!exception\" != '' && $exception.code == 11016)\n  <div class=\"box errormessage\">\n    #set($allowedSpaces = $createAllowedSpaces)\n    #if ($allowedSpaces.size() == 1)\n      $escapetool.xml($services.localization.render('core.create.template.allowedspace.inline', [$templateProvider,\n        $allowedSpaces.get(0)]))\n    #else\n      $escapetool.xml($services.localization.render('core.create.template.allowedspaces.inline', [$templateProvider,\n        $allowedSpaces.toString()]))\n    #end\n  </div>\n#end\n## check if the exception is about the document which already exists\n#if(\"$!exception\" != '' && $exception.code == 11002)\n  <div class='box errormessage'>\n      ## Use the 'existingDocumentReference' context binding set by the create action for this case.\n      $services.localization.render('core.create.page.error.docalreadyexists',\n        [$escapetool.xml(\"${existingDocumentReference}\"),\n         $xwiki.getURL($existingDocumentReference, 'view', ''),\n         $xwiki.getURL($existingDocumentReference, 'edit', '')\n        ]\n      )\n  </div>\n#end\n## check if the exception is about the document name being invalid\n#if(\"$!exception\" != '' && $exception.code == 11018)\n<div class='box errormessage'>\n  ## Use the 'invalidNameReference' context binding set by the create action for this case.\n  $escapetool.xml($services.localization.render('entitynamevalidation.create.invalidname', [$invalidNameReference]))\n</div>\n#end\n\n## check if the exception is about the document having a path too long\n#template('hierarchy_macros.vm')\n#if(\"$!exception\" != '' && $exception.code == 11017)\n  #set ($options = {})\n  #set ($documentReference = $services.model.resolveDocument($tooLongPath))\n  <div class='box errormessage'>\n      $services.localization.render('core.create.page.error.docpathtoolong',\n        [\"<p>#hierarchy($documentReference, $options)</p>\",\n          $doc.getLocalReferenceMaxLength(),\n          $tooLongPath.length()\n        ]\n      )\n  </div>\n#end\n\n## ---------------------------------------------------------------------------------------------------------\n## Determine if we need to do extra checks for a deprecated, pre-NestedSpaces request to create a space.\n## ---------------------------------------------------------------------------------------------------------\n#set ($deprecatedSpaceCreate = \"$!request.tocreate\" == 'space')\n\n## ---------------------------------------------------------------------------------------------------------\n## Note: The list of available template providers is computed in the action and set on the context under\n## the \"availableTemplateProviders\" binding.\n## ---------------------------------------------------------------------------------------------------------\n\n## ---------------------------------------------------------------------------------------------------------\n## Macro for displaying the available types and templates and changing target space rules accordingly\n## ---------------------------------------------------------------------------------------------------------\n#macro (displayTypes)\n  #if ($template == '')\n    #set ($blankTerminalState = !$isSpace)\n    #set ($options = [\n      { \n        'name': $services.localization.render('core.create.type.default'),\n        'options': [\n          {\n            'name': $services.localization.render('core.create.type.blank'),\n            'value': 'blank',\n            'description': $services.localization.render('core.create.type.blank.description'),\n            'icon': 'file-white',\n            'data': {\n              'type': 'blank',\n              'terminal' : \"$blankTerminalState\"\n            }\n          }\n        ]\n      }])\n    #if ($xwiki.exists($services.model.createDocumentReference('', 'XWiki', 'OfficeImporter')) && $services.officemanager.isConnected())\n      ## TODO: handle this use case with an extension point\n      #set ($discard = $options[0].options.add({\n        'name': $services.localization.render('office.createForm.type.name'),\n        'value': 'office',\n        'description': $services.localization.render('office.createForm.type.description'),\n        'icon': 'file-word',\n        'data': {\n          'type':'office'\n        }\n      }))\n    #end\n    #if (!$availableTemplateProviders.isEmpty())\n      #set ($templateOptions = [])\n      #set ($discard = $options.add({'name': $services.localization.render('core.create.type.templates'), 'options': $templateOptions}))\n      #foreach($tpdoc in $availableTemplateProviders)\n        #set ($tpobj = $tpdoc.getObject('XWiki.TemplateProviderClass'))\n        #set ($tpdocRef = $services.model.serialize($tpdoc.documentReference, 'local'))\n        ##\n        ## Extract and save in data-* attributes list of allowed spaces to be used in the JavaScript validation of the spaceReference input.\n        ##\n        #set($jsAllowedSpacesArray = '[]')## Reset any previous value\n        #set($allowedSpaces = $tpobj.getValue('creationRestrictions'))\n        #if($allowedSpaces.size() == 0)\n          ## Backwards compatibility for Template Providers created before 8.3M2.\n          #set($allowedSpaces = $tpobj.getValue('spaces'))\n        #end\n        ## Reset to an empty list when no restrictions are set.\n        #if (\"$!allowedSpaces\" == '')\n          #set ($allowedSpaces = [])\n        #end\n        #if($allowedSpaces.size() > 0)\n          #set($jsAllowedSpacesArray = $jsontool.serialize($allowedSpaces))\n        #end\n        ## Compute the error message.\n        #set ($templateProviderName = $services.localization.render($tpobj.getValue('name')))\n        #if($allowedSpaces.isEmpty())\n          #set($message = '')\n        #elseif($allowedSpaces.size() == 1)\n          #set($message = $services.localization.render('core.create.template.allowedspace.inline', [$templateProviderName, $jsAllowedSpacesArray]))\n        #else\n          #set($message = $services.localization.render('core.create.template.allowedspaces.inline', [$templateProviderName, $jsAllowedSpacesArray]))\n        #end\n        ##\n        ## Determine if the creation restrictions are just suggestions\n        ##\n        #set ($restrictionsAreSuggestions = ($tpobj.getValue('creationRestrictionsAreSuggestions') == 1))\n        ##\n        ## Determine if it's a terminal page template\n        ##\n        #set ($isTerminalProvider = $tpobj.getValue('terminal'))\n        ## Check if this is an old template provider that has not been migrated (the 'type' property has not been\n        ## replaced by the 'terminal' property).\n        #set ($type = $tpobj.getValue('type'))\n        #if (\"$!isTerminalProvider\" == '' && (\"$!type\" != '' || $type == ''))\n          ## This must be an old template provider because the 'terminal' property is not set (or it was set to '---'\n          ## from the UI) and the 'type' property is still present.\n          #if ($type == 'space')\n            #set ($isTerminalProvider = false)\n          #else\n            ## 'page' or '' both resolve to true, for backwards compatibility reasons.\n            #set ($isTerminalProvider = true)\n          #end\n        #else\n          #set ($isTerminalProvider = ($isTerminalProvider == 1))\n        #end\n        ##\n        ## Display the template provider field option in the form.\n        ##\n        #set ($inputId = \"xwiki-create-form-${foreach.count}\")\n        #set ($icon = $tpobj.getValue('icon'))\n        #if (\"$!icon\" == '')\n          #set($icon = 'file-white')\n        #end\n        #set ($discard = $templateOptions.add({\n          'name': $services.localization.render($tpobj.getValue('name')),\n          'value': \"$tpdocRef\",\n          'description': $services.localization.render($tpobj.getValue('description')),\n          'icon': $icon,\n          'data': {\n            'allowed-spaces': $jsAllowedSpacesArray,\n            'allowed-spaces-message': $message,\n            'restrictions-are-suggestions': $restrictionsAreSuggestions,\n            'type': 'template',\n            'terminal' : $isTerminalProvider\n          }\n        }))\n      #end\n    #end\n    <dt>\n      <label>$services.localization.render('core.create.type')</label>\n      <span class=\"xHint\">$escapetool.xml($services.localization.render('core.create.type.hint'))</span>\n    </dt>\n    #set ($defaultValue = $request.type)\n    #if (\"$!defaultValue\" == '')\n      #if ($recommendedTemplateProviders.size() > 0)\n        #set ($defaultValue = $services.model.serialize($recommendedTemplateProviders[0].documentReference, 'local'))\n      #else\n        #set ($defaultValue = 'blank')\n      #end\n    #end\n    <dd>#xwikiSelect('type', $options, $defaultValue, false, 'xwiki-select-adaptable-medium page-type', '', true)</dd>\n  #else\n    <input type=\"hidden\" name=\"template\" value=\"$escapetool.xml($template)\" />\n  #end\n#end\n#set ($discard = $xwiki.jsfx.use('js/xwiki/create.js', {'forceSkinAction': true}))\n\n## ---------------------------------------------------------------------------------------------------------\n## Macro used to extract a wiki's homepage reference.\n## ---------------------------------------------------------------------------------------------------------\n#macro (getWikiHomePageReference $wiki $return)\n  #set ($_wikiHomePageReference = $services.wiki.getById($wiki).mainPageReference)\n  #if (!$_wikiHomePageReference)\n    #set ($wikiReference = $services.model.createWikiReference($wiki))\n    #set ($_wikiHomePageReference = $services.model.resolveDocument('', 'default', $wikiReference))\n  #end\n  #set ($return = $NULL)\n  #setVariable(\"$return\" $_wikiHomePageReference)\n#end\n\n## ---------------------------------------------------------------------------------------------------------\n## Display the form.\n## ---------------------------------------------------------------------------------------------------------\n#set ($isAjaxRequest = $request.getHeader('X-Requested-With') == 'XMLHttpRequest')\n<form action=\"$doc.getURL('create')\" method=\"post\" id=\"create\" class=\"xform\">\n  <fieldset>\n\n  ## Deprecated: Pass along any received page parent.\n  <input type='hidden' name='parent' value=\"$!{escapetool.xml($parent)}\"/>\n\n  ## The \"templateprovider\" field is needed by the CreateAction, even empty.\n  ## By the past, it was \"xwiki/create.js\" which created this field, but it was causing problems when the user sent the\n  ## form before the JavaScript code was executed.\n  <input type=\"hidden\" name=\"templateprovider\" id=\"templateprovider\" value=\"\" />\n  <input type=\"hidden\" name=\"form_token\" value=\"$!{escapetool.xml($services.csrf.getToken())}\"/>\n\n  <div class='row'>\n    ## Hide the first column when displayed in an AJAX call by clicking on a Wanted Link, because we know the target\n    ## location from the link reference.\n    #if (!$isAjaxRequest)\n      ## Determine the parent reference for the new document.\n      #set ($parentReference = $spaceReference)\n      #if (!$parentReference)\n        ## No parent reference specified.\n        #if ($doc.isNew())\n          ## Encourage the user to create the current document.\n          #set ($parentReference = $doc.documentReference.parent)\n          #if ($doc.documentReference.name == 'WebHome')\n            #set ($parentReference = $parentReference.parent)\n          #end\n        #else\n          #getWikiHomePageReference($doc.wiki $homeReference)\n          #if ($doc.documentReference.equals($homeReference) || $deprecatedSpaceCreate)\n            ## Encourage the user to create top level documents from the home page.\n            #set ($parentReference = $doc.documentReference.wikiReference)\n          #else\n            ## Encourage the user to create a child or sibling of the current document.\n            #set ($parentReference = $doc.documentReference.lastSpaceReference)\n          #end\n        #end\n      #end\n\n      ## Display the location picker.\n      <div class='col-xs-12 col-lg-6'>\n        #template('locationPicker_macros.vm')\n        ## The create action doesn't support changing the location when the current document doesn't exist (i.e. it\n        ## forces you to create the current document that is missing). For this reason we make the name and parent fields\n        ## read-only when the current document is new.\n        #locationPicker({\n          'id': 'target',\n          'title': {\n            'label': 'core.create.title',\n            'hint': 'core.create.title.hint',\n            'name': 'title',\n            'value': $title,\n            'placeholder': 'core.create.name.placeholder'\n          },\n          'preview': {\n            'label': 'core.create.locationPreview.label',\n            'hint': 'core.create.locationPreview.hint'\n          },\n          'parent': {\n            'label': 'core.create.spaceReference.label',\n            'hint': 'core.create.spaceReference.hint',\n            'name': 'spaceReference',\n            'reference': $parentReference,\n            'placeholder': 'core.create.spaceReference.placeholder',\n            'readOnly': $doc.isNew()\n          },\n          'name': {\n            'label': 'core.create.name.label',\n            'hint': 'core.create.name.hint',\n            'name': 'name',\n            'value': $name,\n            'placeholder': 'core.create.name.placeholder',\n            'readOnly': $doc.isNew()\n          }\n        })\n      </div>\n    #else\n      ## First column is hidden.\n      ## Pass along the known values as hidden inputs.\n      ##\n      <input type='hidden' name='title' value=\"$!{escapetool.xml($title)}\"/>\n      <input type='hidden' id='name' name='name' value=\"$!{escapetool.xml($name)}\" />\n      #set ($spaceReferenceLocalString = $services.model.serialize($spaceReference, 'local'))\n      <input type='hidden' id='spaceReference' name='spaceReference' value=\"$!{escapetool.xml($spaceReferenceLocalString)}\" />\n    #end\n    <div class='col-xs-12#if (!$isAjaxRequest) col-lg-6#end'>\n      <dl>\n        #if ($isAjaxRequest)\n          ## The first column that shows the location preview is hidden when creating a new page from a Wanted Link so we\n          ## need to show this information elsewhere. Even if the target page reference can't be modified by the user,\n          ## they should still see where the page is going to be created.\n          <dt>\n            <label>$escapetool.xml($services.localization.render('core.create.pageTitle'))</label>\n          </dt>\n          <dl>\n            #set ($targetDocumentReference = $services.model.createDocumentReference($name, $spaceReference))\n            #hierarchy($targetDocumentReference)\n          </dl>\n        #end\n        ## ---------------------------------------------------------------------------------------------------------\n        ## Page type\n        ## ---------------------------------------------------------------------------------------------------------\n        #displayTypes()\n        ## ---------------------------------------------------------------------------------------------------------\n        ## Terminal page - Advanced users\n        ## ---------------------------------------------------------------------------------------------------------\n        #set ($hidden = '')\n        ## Top level documents cannot be terminal.\n        #set ($isTopLevelDoc = $doc.documentReference.name == 'WebHome' &&\n          $doc.documentReference.lastSpaceReference.parent.type == 'WIKI')\n        #if (!($isAdvancedUser || $isSuperAdmin) || $deprecatedSpaceCreate || ($doc.isNew() && $isTopLevelDoc))\n          #set ($hidden = 'hidden')\n        #end\n        <dt class=\"$hidden\">\n          <input type=\"checkbox\" id=\"terminal\" name=\"tocreate\" value=\"terminal\" #if(!$isSpace)checked=\"checked\"#end/>\n          <label for=\"terminal\">$services.localization.render('core.create.terminal.label')</label>\n          ## Hidden input used to ensure that an unchecked terminal checkbox means non-terminal and that the default is not used by mistake.\n          <input type=\"hidden\" name=\"tocreate\" value=\"nonterminal\" />\n        </dt>\n        <dd class=\"$hidden\">\n          <span class=\"xHint\">$services.localization.render('core.create.terminal.hint')</span>\n        </dd>\n      </dl>\n    </div>\n  </div>\n\n  <div class='buttons'>\n    <span class='buttonwrapper'>\n      <input type='submit' class='button' value=\"$services.localization.render('create')\"/>\n    </span>\n    <span class=\"buttonwrapper\">\n      <a class=\"secondary button\" href=\"$doc.getURL()\">$services.localization.render('cancel')</a>\n    </span>\n  </div>\n\n  </fieldset>\n</form>\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.web;\n\nimport java.util.List;\nimport java.util.stream.Stream;\n\nimport javax.inject.Inject;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.params.ParameterizedTest;\nimport org.junit.jupiter.params.provider.MethodSource;\nimport org.xwiki.template.TemplateManager;\nimport org.xwiki.test.page.PageTest;\nimport org.xwiki.velocity.VelocityManager;\n\nimport com.xpn.xwiki.XWikiException;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\n\n/**\n * Tests the {@code createinline.vm} template.\n *\n * @version $Id$\n * @since 14.10.12\n * @since 15.5RC1\n */\nclass CreateInlinePageTest extends PageTest\n{\n    /**\n     * The name of the template to test.\n     */\n    private static final String CREATE_INLINE_VM = \"createinline.vm\";\n\n    private static final String DOCUMENT_REFERENCE = \"xwiki:space.</div>page\";\n\n    private static final String CREATE_EXCEPTION_VELOCITY_KEY = \"createException\";\n\n    private static final String ERROR_MESSAGE_CLASS = \"errormessage\";\n\n    private VelocityManager velocityManager;\n\n    @Inject\n    private TemplateManager templateManager;\n\n    @BeforeEach\n    void setup() throws Exception\n    {\n        this.velocityManager = this.oldcore.getMocker().getInstance(VelocityManager.class);\n        // Set an empty list of recommended template providers to avoid a Velocity error.\n        this.velocityManager.getVelocityContext().put(\"recommendedTemplateProviders\", List.of());\n    }\n\n    /**\n     * Test that when there is a name validation error, the name is correctly escaped.\n     */\n    @Test\n    void testNameValidationError() throws Exception\n    {\n        // Set \"createException\" to an XWikiException to simulate a validation error.\n        Object[] args = { DOCUMENT_REFERENCE };\n        XWikiException invalidNameException = new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n            XWikiException.ERROR_XWIKI_APP_DOCUMENT_NAME_INVALID,\n            \"Cannot create document {0} because its name does not respect the name strategy of the wiki.\", null,\n            args);\n        this.velocityManager.getVelocityContext().put(CREATE_EXCEPTION_VELOCITY_KEY, invalidNameException);\n        this.velocityManager.getVelocityContext().put(\"invalidNameReference\", DOCUMENT_REFERENCE);\n\n        // Render the template.\n        Document document = Jsoup.parse(this.templateManager.render(CREATE_INLINE_VM));\n        Element errormessage = document.getElementsByClass(ERROR_MESSAGE_CLASS).first();\n        assertNotNull(errormessage);\n        String expectedMessage = String.format(\"entitynamevalidation.create.invalidname [%s]\", DOCUMENT_REFERENCE);\n        assertEquals(expectedMessage, errormessage.text());\n    }\n\n    /**\n     * Test that when there is an exception about the document already existing, the name is correctly escaped.\n     */\n    @Test\n    void testDocumentAlreadyExistsError() throws Exception\n    {\n        // Set \"createException\" to an XWikiException to simulate a document exists already error.\n        String urlToDocument = \"space/%3C%2Fdiv%3Epage\";\n        Object[] args = { DOCUMENT_REFERENCE };\n        XWikiException documentAlreadyExistsException = new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n            XWikiException.ERROR_XWIKI_APP_DOCUMENT_NOT_EMPTY,\n            \"Cannot create document {0} because it already has content\", null, args);\n        this.velocityManager.getVelocityContext().put(CREATE_EXCEPTION_VELOCITY_KEY, documentAlreadyExistsException);\n        this.velocityManager.getVelocityContext().put(\"existingDocumentReference\", DOCUMENT_REFERENCE);\n\n        // Render the template.\n        Document document = Jsoup.parse(this.templateManager.render(CREATE_INLINE_VM));\n        Element errormessage = document.getElementsByClass(ERROR_MESSAGE_CLASS).first();\n        assertNotNull(errormessage);\n        String viewURL = String.format(\"/xwiki/bin/view/%s\", urlToDocument);\n        String editURL = String.format(\"/xwiki/bin/edit/%s\", urlToDocument);\n        String expectedMessage = String.format(\"core.create.page.error.docalreadyexists [%s, %s, %s]\",\n            DOCUMENT_REFERENCE, viewURL, editURL);\n        assertEquals(expectedMessage, errormessage.text());\n    }\n\n    /**\n     * Test that when there is an exception about the template provider not allowing the chosen space, the allowed\n     * spaces are correctly escaped.\n     */\n    @ParameterizedTest\n    @MethodSource(\"allowedSpacesProvider\")\n    void templateProviderRestrictionErrorEscaping(List<String> allowedSpaces) throws Exception\n    {\n        String provider = \"\\\"provider</div>\";\n        this.request.put(\"templateprovider\", provider);\n        String template = \"template</div>\";\n\n        // Set \"createException\" to an XWikiException to simulate a template provider restriction error.\n        Object[] args = { template, DOCUMENT_REFERENCE, DOCUMENT_REFERENCE };\n        XWikiException exception = new XWikiException(XWikiException.MODULE_XWIKI_STORE,\n            XWikiException.ERROR_XWIKI_APP_TEMPLATE_NOT_AVAILABLE,\n            \"Template {0} cannot be used in space {1} when creating page {2}\", null, args);\n        this.velocityManager.getVelocityContext().put(CREATE_EXCEPTION_VELOCITY_KEY, exception);\n        // Set the allowed spaces to a list containing some HTML.\n        this.velocityManager.getVelocityContext().put(\"createAllowedSpaces\", allowedSpaces);\n\n        // Render the template.\n        Document document = Jsoup.parse(this.templateManager.render(CREATE_INLINE_VM));\n        Element errormessage = document.getElementsByClass(ERROR_MESSAGE_CLASS).first();\n        assertNotNull(errormessage);\n\n        String expectedMessage;\n        if (allowedSpaces.size() == 1) {\n            expectedMessage = String.format(\"core.create.template.allowedspace.inline [%s, %s]\",\n                provider, allowedSpaces.get(0));\n        } else {\n            expectedMessage = String.format(\"core.create.template.allowedspaces.inline [%s, %s]\",\n                provider, allowedSpaces);\n        }\n        assertEquals(expectedMessage, errormessage.text());\n    }\n\n    static Stream<List<String>> allowedSpacesProvider()\n    {\n        return Stream.of(\n            List.of(\"allowedSpace</div>\"),\n            List.of(\"allowedSpace1</div>\", \"allowedSpace2</div>\")\n        );\n    }\n}\n"], "filenames": ["xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/src/main/resources/templates/createinline.vm", "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/src/test/java/org/xwiki/web/CreateInlinePageTest.java"], "buggy_code_start_loc": [71, 22], "buggy_code_end_loc": [74, 120], "fixing_code_start_loc": [71, 23], "fixing_code_end_loc": [76, 169], "type": "CWE-79", "message": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. `org.xwiki.platform:xwiki-platform-web` starting in version 3.1-milestone-1 and prior to 13.4-rc-1, `org.xwiki.platform:xwiki-platform-web-templates` prior to versions 14.10.2 and 15.5-rc-1, and `org.xwiki.platform:xwiki-web-standard` starting in version 2.4-milestone-2 and prior to version 3.1-milestone-1 are vulnerable to cross-site scripting. An attacker can create a template provider on any document that is part of the wiki (could be the attacker's user profile) that contains malicious code. This code is executed when this template provider is selected during document creation which can be triggered by sending the user to a URL. For the attacker, the only requirement is to have an account as by default the own user profile is editable. This allows an attacker to execute arbitrary actions with the rights of the user opening the malicious link. Depending on the rights of the user, this may allow remote code execution and full read and write access to the whole XWiki installation. This has been patched in `org.xwiki.platform:xwiki-platform-web` 13.4-rc-1, `org.xwiki.platform:xwiki-platform-web-templates` 14.10.2 and 15.5-rc-1, and `org.xwiki.platform:xwiki-web-standard` 3.1-milestone-1 by adding the appropriate escaping. The vulnerable template file createinline.vm is part of XWiki's WAR and can be patched by manually applying the changes from the fix.", "other": {"cve": {"id": "CVE-2023-45134", "sourceIdentifier": "security-advisories@github.com", "published": "2023-10-25T20:15:11.860", "lastModified": "2023-11-02T18:06:10.833", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. `org.xwiki.platform:xwiki-platform-web` starting in version 3.1-milestone-1 and prior to 13.4-rc-1, `org.xwiki.platform:xwiki-platform-web-templates` prior to versions 14.10.2 and 15.5-rc-1, and `org.xwiki.platform:xwiki-web-standard` starting in version 2.4-milestone-2 and prior to version 3.1-milestone-1 are vulnerable to cross-site scripting. An attacker can create a template provider on any document that is part of the wiki (could be the attacker's user profile) that contains malicious code. This code is executed when this template provider is selected during document creation which can be triggered by sending the user to a URL. For the attacker, the only requirement is to have an account as by default the own user profile is editable. This allows an attacker to execute arbitrary actions with the rights of the user opening the malicious link. Depending on the rights of the user, this may allow remote code execution and full read and write access to the whole XWiki installation. This has been patched in `org.xwiki.platform:xwiki-platform-web` 13.4-rc-1, `org.xwiki.platform:xwiki-platform-web-templates` 14.10.2 and 15.5-rc-1, and `org.xwiki.platform:xwiki-web-standard` 3.1-milestone-1 by adding the appropriate escaping. The vulnerable template file createinline.vm is part of XWiki's WAR and can be patched by manually applying the changes from the fix."}, {"lang": "es", "value": "XWiki Platform es una plataforma wiki gen\u00e9rica que ofrece servicios de ejecuci\u00f3n para aplicaciones creadas sobre ella. `org.xwiki.platform:xwiki-platform-web` a partir de la versi\u00f3n 3.1-milestone-1 y anteriores a 13.4-rc-1, `org.xwiki.platform:xwiki-platform-web-templates` anteriores a las versiones 14.10. 2 y 15.5-rc-1, y `org.xwiki.platform:xwiki-web-standard` a partir de la versi\u00f3n 2.4-milestone-2 y anteriores a la versi\u00f3n 3.1-milestone-1 son vulnerables a Cross-Site Scripting (XSS). Un atacante puede crear un proveedor de plantilla en cualquier documento que forme parte de la wiki (podr\u00eda ser el perfil de usuario del atacante) que contenga c\u00f3digo malicioso. Este c\u00f3digo se ejecuta cuando se selecciona este proveedor de plantilla durante la creaci\u00f3n del documento, lo que se puede activar enviando al usuario a una URL. Para el atacante, el \u00fanico requisito es tener una cuenta ya que, de forma predeterminada, el perfil de usuario es editable. Esto permite a un atacante ejecutar acciones arbitrarias con los derechos del usuario que abre el enlace malicioso. Dependiendo de los derechos del usuario, esto puede permitir la ejecuci\u00f3n remota de c\u00f3digo y acceso completo de lectura y escritura a toda la instalaci\u00f3n de XWiki. Esto se ha parcheado en `org.xwiki.platform:xwiki-platform-web` 13.4-rc-1, `org.xwiki.platform:xwiki-platform-web-templates` 14.10.2 y 15.5-rc-1, y `org.xwiki.platform:xwiki-web-standard` 3.1-milestone-1 agregando el escape apropiado. El archivo de plantilla vulnerable createinline.vm es parte de WAR de XWiki y se puede parchear aplicando manualmente los cambios de la soluci\u00f3n."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.3, "impactScore": 6.0}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.3, "impactScore": 6.0}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:*:*:*:*:*:*:*:*", "versionStartIncluding": "3.1.1", "versionEndExcluding": "13.4", "matchCriteriaId": "8A146D81-B4C9-40D7-9780-8E4DFF51951A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:*:*:*:*:*:*:*:*", "versionStartIncluding": "14.10", "versionEndExcluding": "14.10.2", "matchCriteriaId": "5338BB78-3138-4025-8C58-C1F500A716B2"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:2.4:milestone2:*:*:*:*:*:*", "matchCriteriaId": "9FAFF67A-3777-44B7-B460-7A309D8B0CA2"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:2.5:milestone2:*:*:*:*:*:*", "matchCriteriaId": "37D367C2-4799-4133-AEAC-18B6269481FB"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:3.0:-:*:*:*:*:*:*", "matchCriteriaId": "B80CC851-2324-437A-B4A5-06A5EB2FE180"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:3.0:milestone_2:*:*:*:*:*:*", "matchCriteriaId": "F5F1C457-1591-4025-BD49-BABB9BA9762F"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:3.0:milestone1:*:*:*:*:*:*", "matchCriteriaId": "7BEE764B-ED54-43D8-9748-DE57B5F1D701"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:3.0:milestone2:*:*:*:*:*:*", "matchCriteriaId": "90C4A1EA-8B6A-4FE8-985B-EB924DA3A826"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:3.0:milestone3:*:*:*:*:*:*", "matchCriteriaId": "A45A230D-909F-42D3-836D-95660805B094"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:3.0:rc1:*:*:*:*:*:*", "matchCriteriaId": "6400CA62-5250-4BA5-A94B-7D529CDBE38E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:3.0.1:*:*:*:*:*:*:*", "matchCriteriaId": "354538B6-6468-4BFE-AA82-62664F8F17A5"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:3.1:-:*:*:*:*:*:*", "matchCriteriaId": "DEEE5DB5-54FC-40D2-891C-70E41115A464"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:3.1:milestone1:*:*:*:*:*:*", "matchCriteriaId": "951DC6B5-F7BE-4FF4-9B2B-5ECCD2A07FE1"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:3.1:milestone2:*:*:*:*:*:*", "matchCriteriaId": "E4D018E2-67B9-4D5A-AF97-4804EE834B68"}]}]}], "references": [{"url": "https://github.com/xwiki/xwiki-platform/commit/ba56fda175156dd35035f2b8c86cbd8ef1f90c2e", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-gr82-8fj2-ggc3", "source": "security-advisories@github.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://jira.xwiki.org/browse/XWIKI-20962", "source": "security-advisories@github.com", "tags": ["Exploit", "Issue Tracking", "Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/xwiki/xwiki-platform/commit/ba56fda175156dd35035f2b8c86cbd8ef1f90c2e"}}