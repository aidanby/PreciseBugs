{"buggy_code": ["<?php\n\n/**\n * Used for detecting the environment.\n * @package default\n */\nclass Environments {\n    const DEVELOPMENT = 'development';\n    const DEVELOPMENT_TEST = 'development_test';\n    const STAGING = 'staging';\n    const PRODUCTION = 'production';\n\n    /**\n     * Returns the current environment\n     * @return string\n     */\n    public static function detect() {\n        if (file_exists(__DIR__ . '/../tmp/testing.txt')) {\n            $environment = self::DEVELOPMENT_TEST;\n        } else if (PHP_SAPI == 'cli') {\n            $environment = Environments::_detectCli();\n        } else {\n            $environment = Environments::_detectHttp();\n        }\n\n        return $environment;\n    }\n\n    /**\n     * Detects the environment when called via Console\n     * @return string\n     */\n    protected static function _detectCli() {\n        $environment = self::DEVELOPMENT;\n        $uname = php_uname('n');\n        if (strpos($uname, 'master') !== false) {\n            $environment = self::PRODUCTION;\n        } else if (strpos($uname, 'stage') !== false) {\n            $environment = self::STAGING;\n        }\n\n        return $environment;\n    }\n\n    /**\n     * Detects the environment when called via HTTP\n     * @return string\n     */\n    protected static function _detectHttp() {\n        $host = env('HTTP_HOST');\n\n        if (substr($host, 0, 4) == 'dev.') {\n            $environment = self::DEVELOPMENT;\n        } else if (substr($host, 0, 4) == 'dev-') {\n            $environment = self::DEVELOPMENT;\n        } else if (substr($host, 0, 8) == 'staging.') {\n            $environment = self::STAGING;\n        } else {\n            $environment = self::PRODUCTION;\n        }\n\n        return $environment;\n\n    }\n}"], "fixing_code": ["<?php\n\n/**\n * Used for detecting the environment.\n * @package default\n */\nclass Environments {\n    const DEVELOPMENT = 'development';\n    const DEVELOPMENT_TEST = 'development_test';\n    const STAGING = 'staging';\n    const PRODUCTION = 'production';\n\n    /**\n     * Returns the current environment\n     * @return string\n     */\n    public static function detect() {\n        if (file_exists(__DIR__ . '/../tmp/testing.txt')) {\n            $environment = self::DEVELOPMENT_TEST;\n        } else if (PHP_SAPI == 'cli') {\n            $environment = Environments::_detectCli();\n        } else {\n            $environment = Environments::_detectHttp();\n        }\n\n        return $environment;\n    }\n\n    /**\n     * Detects the environment when called via Console\n     * @return string\n     */\n    protected static function _detectCli() {\n        $environment = self::DEVELOPMENT;\n        $uname = php_uname('n');\n        if (strpos($uname, 'master') !== false) {\n            $environment = self::PRODUCTION;\n        } else if (strpos($uname, 'stage') !== false) {\n            $environment = self::STAGING;\n        }\n\n        return $environment;\n    }\n\n    /**\n     * Detects the environment when called via HTTP\n     * @return string\n     */\n    protected static function _detectHttp() {\n        $environment = self::PRODUCTION;\n\n        // To enable debug mode please add\n        // fastcgi_param OITC_DEBUG 1;\n        // to your nginx config\n\n        if (isset($_SERVER['OITC_DEBUG'])) {\n            if ($_SERVER['OITC_DEBUG'] === '1') {\n                $environment = self::DEVELOPMENT;\n            }\n        }\n        \n        return $environment;\n    }\n}"], "filenames": ["app/Config/Environments.php"], "buggy_code_start_loc": [50], "buggy_code_end_loc": [64], "fixing_code_start_loc": [50], "fixing_code_end_loc": [62], "type": "CWE-276", "message": "openITCOCKPIT through 3.7.2 allows remote attackers to configure the self::DEVELOPMENT or self::STAGING option by placing a hostname containing \"dev\" or \"staging\" in the HTTP Host header.", "other": {"cve": {"id": "CVE-2020-10792", "sourceIdentifier": "cve@mitre.org", "published": "2020-03-20T18:15:13.997", "lastModified": "2020-03-25T19:35:21.490", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "openITCOCKPIT through 3.7.2 allows remote attackers to configure the self::DEVELOPMENT or self::STAGING option by placing a hostname containing \"dev\" or \"staging\" in the HTTP Host header."}, {"lang": "es", "value": "openITCOCKPIT versiones hasta 3.7.2, permite a atacantes remotos configurar la opci\u00f3n self::DEVELOPMENT o self::STAGING al colocar un nombre de host que contenga \"dev\" o \"staging\" en el encabezado HTTP Host."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-276"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:it-novum:openitcockpit:*:*:*:*:*:*:*:*", "versionEndIncluding": "3.7.2", "matchCriteriaId": "6399F5A8-DAF4-4352-B889-EB9E5D7A8579"}]}]}], "references": [{"url": "https://github.com/it-novum/openITCOCKPIT/commit/719410b9ffff7d7b29dba7aad58faceb5eff789f", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://openitcockpit.io/2020/2020/03/23/openitcockpit-3-7-3-released/", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/it-novum/openITCOCKPIT/commit/719410b9ffff7d7b29dba7aad58faceb5eff789f"}}