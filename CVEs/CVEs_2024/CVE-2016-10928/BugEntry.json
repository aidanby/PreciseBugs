{"buggy_code": ["<?php\n\n// Make sure we don't expose any info if called directly\nif ( !function_exists( 'add_action' ) ) {\n\techo 'Hi there!  I\\'m just a plugin, not much I can do when called directly.';\n\texit;\n}\n\nfunction saml_checker() {\n\tif (isset($_GET['saml_acs'])) {\n\t\tsaml_acs();\n\t}\n\telse if (isset($_GET['saml_sls'])) {\n\t\tsaml_sls();\n\t} else if (isset($_GET['saml_metadata'])) {\n\t\tsaml_metadata();\n\t} else if (isset($_GET['saml_validate_config'])) {\n\t\tsaml_validate_config();\n\t}\n}\n\nfunction saml_load_translations() {\n\t$domain = 'onelogin-saml-sso';\n\t$mo_file = plugin_dir_path(dirname(__FILE__)) . 'lang/'.get_locale() . '/' . $domain  . '.mo';\n\n\tload_textdomain($domain, $mo_file ); \n\tload_plugin_textdomain($domain, false, dirname( plugin_basename( __FILE__ ) ) . '/lang/'. get_locale() . '/' );\n}\n\nfunction saml_lostpassword() {\n\t$target = get_option('onelogin_saml_customize_links_lost_password');\n\tif (!empty($target)) {\n\t\twp_redirect($target);\n\t\treturn false;\n\t}\n}\n\nfunction saml_user_register() {\n\t$target = get_option('onelogin_saml_customize_links_user_registration');\n\tif (!empty($target)) {\n\t\twp_redirect($target);\n\t\treturn false;\n\t}\n}\n\nfunction saml_sso() {\n\tif (is_user_logged_in()) {\n\t\treturn true;\n\t}\n\t$auth = initialize_saml();\n\tif (isset($_SERVER['REQUEST_URI'])) {\n\t\t$auth->login($_SERVER['REQUEST_URI']);\n\t} else {\n\t\t$auth->login();\n\t}\n\texit();\n}\n\nfunction saml_slo() {\n\t$slo = get_option('onelogin_saml_slo');\n\n\tif (isset($_GET['action']) && $_GET['action']  == 'logout') {\n\t\tif (!$slo) {\n\t\t\twp_logout();\n\t\t\treturn false;\n\t\t} else {\n\t\t\t$nameId = null;\n\t\t\t$sessionIndex = null;\n\t\t\tif (isset($_COOKIE['saml_nameid'])) {\n\t\t\t\t$nameId = $_COOKIE['saml_nameid']; \n\t\t\t}\n\t\t\tif (isset($_COOKIE['saml_sessionindex'])) {\n\t\t\t\t$sessionIndex = $_COOKIE['saml_sessionindex'];\n\t\t\t}\n\t\t\t\n\t\t\t$auth = initialize_saml();\n\t\t\t$auth->logout(home_url(), array(), $nameId, $sessionIndex);\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\nfunction saml_acs() {\n\t$auth = initialize_saml();\n\n\t$auth->processResponse();\n\n\t$errors = $auth->getErrors();\n\tif (!empty($errors)) {\n\t\techo '<br>'.__(\"There was at least one error processing the SAML Response\").': ';\n\t\techo implode(\"<br>\", $errors);\n\t\techo '<br>'.__(\"Contact the administrator\");\n\t\texit();\n\t}\n\n\tsetcookie('saml_nameid', $auth->getNameId(), time() + YEAR_IN_SECONDS, SITECOOKIEPATH );\n\tsetcookie('saml_sessionindex', $auth->getSessionIndex(), time() + YEAR_IN_SECONDS, SITECOOKIEPATH );\n\n\t$attrs = $auth->getAttributes();\n\n\tif (empty($attrs)) {\n\t\t$username = $auth->getNameId();\n\t\t$email = $username;\n\t} else {\n\t\t$usernameMapping = get_option('onelogin_saml_attr_mapping_username');\n\t\t$mailMapping =  get_option('onelogin_saml_attr_mapping_mail'); \n\n\t\tif (!empty($usernameMapping) && isset($attrs[$usernameMapping]) && !empty($attrs[$usernameMapping][0])){\n\t\t\t$username = $attrs[$usernameMapping][0];\n\t\t}\n\t\tif (!empty($mailMapping) && isset($attrs[$mailMapping])  && !empty($attrs[$mailMapping][0])){\n\t\t\t$email = $attrs[$mailMapping][0];\n\t\t}\n\t}\n\n\tif (empty($username)) {\n\t\techo __(\"The username could not be retrieved from the IdP and is required\");\n\t\texit();\n\t}\n\telse if (empty($email)) {\n\t\techo __(\"The email could not be retrieved from the IdP and is required\");\n\t\texit();\t\n\t} else {\n\t\t$userdata = array();\n\t\t$userdata['user_login'] = wp_slash($username);\n\t\t$userdata['user_email'] = wp_slash($email);\n\t}\n\n\tif (!empty($attrs)) {\n\t\t$firstNameMapping = get_option('onelogin_saml_attr_mapping_firstname');\n\t\t$lastNameMapping = get_option('onelogin_saml_attr_mapping_lastname');\n\t\t$roleMapping = get_option('onelogin_saml_attr_mapping_role');\n\n\t\tif (!empty($firstNameMapping) && isset($attrs[$firstNameMapping]) && !empty($attrs[$firstNameMapping][0])){\n\t\t\t$userdata['first_name'] = $attrs[$firstNameMapping][0];\n\t\t}\n\n\t\tif (!empty($lastNameMapping) && isset($attrs[$lastNameMapping])  && !empty($attrs[$lastNameMapping][0])){\n\t\t\t$userdata['last_name'] = $attrs[$lastNameMapping][0];\n\t\t}\n\n\t\tif (!empty($roleMapping) && isset($attrs[$roleMapping])){\n\t\t\t$multiValued = get_option('onelogin_saml_role_mapping_multivalued_in_one_attribute_value', false);\n\t\t\tif ($multiValued && count($attrs[$roleMapping]) == 1) {\n\t\t\t\t$roleValues = array();\n\t\t\t\t$pattern = get_option('onelogin_saml_role_mapping_multivalued_pattern');\n\t\t\t\tif (!empty($pattern)) {\n\t\t\t\t\tpreg_match_all($pattern, $attrs[$roleMapping][0], $roleValues);\n\t\t\t\t\tif (!empty($roleValues)) {\n    \t\t\t\t\t$attrs[$roleMapping] = $roleValues[1];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$roleValues = explode(';', $attrs[$roleMapping][0]);\n\t\t\t\t\t$attrs[$roleMapping] = $roleValues;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$adminsRole = explode(',', get_option('onelogin_saml_role_mapping_administrator'));\n\t\t\t$editorsRole = explode(',', get_option('onelogin_saml_role_mapping_editor'));\n\t\t\t$authorsRole = explode(',', get_option('onelogin_saml_role_mapping_author'));\n\t\t\t$contributorsRole = explode(',', get_option('onelogin_saml_role_mapping_contributor'));\n\t\t\t$subscribersRole = explode(',', get_option('onelogin_saml_role_mapping_subscriber'));\n\n\t\t\t/* In order to use custom roles, you only need to uncomment those lines and replace the values\n\t\t\t *  First we assign possible OneLogin roles that we want to map with Wordpress Roles\n\t\t\t *  Then we asigned to the $userdata['role'] the name of the Wordpress role\n\t\t\t */\n\n\t\t\t//$customRole1 = array('value1', 'value2');  // value1 and value2 are roles of OneLogin platform that will be mapped to customRole1\n\t\t\t//$customRole2 = array('value3');  // value3 is a role of OneLogin platformthat will be mapped to customRole2\n\n\t\t\t$foundCustomizedRole = false;\n\n\t\t\t/*\n\t\t\tforeach ($attrs[$roleMapping] as $samlRole) {\n\t\t\t\tif (in_array($samlRole, $customRole1)) {\n\t\t\t\t\t$userdata['role'] = 'customrole1'; // Name of the role -> customrole1\n\t\t\t\t\t$foundCustomized = true;\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (in_array($samlRole, $customRole2)) {\n\t\t\t\t\t$userdata['role'] = 'customrole2'; // Name of the role -> customrole2\n\t\t\t\t\t$foundCustomized = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t*/\n\n\t\t\tif (!$foundCustomizedRole) {\n\t\t\t\t$role = 0;\n\n\t\t\t\tforeach ($attrs[$roleMapping] as $samlRole) {\n\t\t\t\t\t$samlRole = trim($samlRole);\n\t\t\t\t\tif (empty($samlRole)) {\n\t\t\t\t\t\tbreak;\t\n\t\t\t\t\t}\n\t\t\t\t\telse if (in_array($samlRole, $adminsRole)) {\n\t\t\t\t\t\tif ($role < 5) {\n\t\t\t\t\t\t\t$role = 5;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (in_array($samlRole, $editorsRole)) {\n\t\t\t\t\t\tif ($role < 4) {\n\t\t\t\t\t\t\t$role = 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (in_array($samlRole, $authorsRole)) {\n\t\t\t\t\t\tif ($role < 3) {\n\t\t\t\t\t\t\t$role = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (in_array($samlRole, $contributorsRole)) {\n\t\t\t\t\t\tif ($role < 2) {\n\t\t\t\t\t\t\t$role = 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (in_array($samlRole, $subscribersRole)) {\n\t\t\t\t\t\tif ($role < 1) {\n\t\t\t\t\t\t\t$role = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tswitch ($role) {\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\t$userdata['role'] = 'administrator';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\t$userdata['role'] = 'editor';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\t$userdata['role'] = 'author';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\t$userdata['role'] = 'contributor';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t$userdata['role'] = 'subscriber';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 0:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t$userdata['role'] = get_option('default_role');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t$matcher = get_option('onelogin_saml_account_matcher');\n\n\tif (empty($matcher) || $matcher == 'username') {\n\t\t$matcherValue = $userdata['user_login'];\n\t\t$user_id = username_exists($matcherValue);\t\t\n\t} else {\n\t\t$matcherValue = $userdata['user_email'];\n\t\t$user_id = email_exists($matcherValue);\n\t}\n\n\tif ($user_id) {\n\t\tif (get_option('onelogin_saml_updateuser')) {\n\t\t\t$userdata['ID'] = $user_id;\n\t\t\tunset($userdata['$user_pass']);\n\n\t\t\t// Prevent to change the role to the superuser (id=1)\n\t\t\tif ($user_id == 1 && isset($userdata['role'])) {\n\t\t\t\tunset($userdata['role']);\n\t\t\t}\n\n\t\t\t$user_id = wp_update_user($userdata);\n\t\t}\n\t} else if (get_option('onelogin_saml_autocreate')) {\n\t\tif (!validate_username($username)) {\n\t\t\techo __(\"The username provided by the IdP\"). ' \"'. $username. '\" '. __(\"is not valid and can't create the user at wordpress\");\n\t\t\texit();\n\t\t}\n\t\t$userdata['user_pass'] = '@@@nopass@@@';\n\t\t$user_id = wp_insert_user($userdata);\n\t} else {\n\t\techo __(\"User provided by the IdP \"). ' \"'. $matcherValue. '\" '. __(\"does not exist in wordpress and auto-provisioning is disabled.\");\n\t\texit();\n\t}\n\n\tif (is_a($user_id, 'WP_Error')) {\n\t\t$error = $user_id->get_error_messages();\n\t\techo implode('<br>', $error);\n\t\texit();\n\t} else if ($user_id) {\n\t\twp_set_current_user($user_id);\n\t\twp_set_auth_cookie($user_id);\n\t\tsetcookie('saml_login', 1, time() + YEAR_IN_SECONDS, SITECOOKIEPATH );\n\t\t\t\t#do_action('wp_login', $user_id);\n\t\t#wp_signon($user_id);\n\t}\n\n\tif (isset($_REQUEST['RelayState'])) {\n\t\tif (!empty($_REQUEST['RelayState']) && (substr($_REQUEST['RelayState'], -strlen('/wp-login.php')) === '/wp-login.php')) {\n\t\t\twp_redirect(home_url());\n\t\t} else {\n\t\t\tif (strpos($_REQUEST['RelayState'], 'redirect_to') !== false) {\n\t\t\t\t$urlinfo = parse_url($_REQUEST['RelayState']);\n\t\t\t\t$parameters = array();\n\t\t\t\tparse_str($urlinfo['query'], $parameters);\n\t\t\t\t$target = urldecode($parameters['redirect_to']);\n\t\t\t\twp_redirect(urldecode($parameters['redirect_to']));\n\t\t\t}  else {\n\t\t\t\twp_redirect($_REQUEST['RelayState']);\n\t\t\t}\n\t\t}\n\t} else {\n\t\twp_redirect(home_url());\n\t}\n\texit();\n}\n\nfunction saml_sls() {\n\t$auth = initialize_saml();\n\t$retrieve_parameters_from_server = get_option('onelogin_saml_advanced_settings_retrieve_parameters_from_server', false);\n\t$auth->processSLO(false, null, $retrieve_parameters_from_server);\n\t\t$errors = $auth->getErrors();\n\tif (empty($errors)) {\n\t\twp_logout();\n\t\tsetcookie('saml_login', 0, time() - 3600, SITECOOKIEPATH );\n\t\tsetcookie('saml_nameid', null, time() - 3600, SITECOOKIEPATH );\n\t\tsetcookie('saml_sessionindex', null, time() - 3600, SITECOOKIEPATH );\n\n\t\tif (get_option('onelogin_saml_forcelogin') && get_option('onelogin_saml_customize_stay_in_wordpress_after_slo')) {\n\t\t\twp_redirect(home_url().'/wp-login.php?loggedout=true');\n\t\t} else {\n\t\t\tif (isset($_REQUEST['RelayState'])) {\n\t\t\t\twp_redirect($_REQUEST['RelayState']);\n\t\t\t} else {\n\t\t\t\twp_redirect(home_url());\n\t\t\t}\n\t\t}\n\t\texit();\n\t} else {\n\t\techo __(\"SLS endpoint found an error.\").$auth->getLastErrorReason();\n\t\texit();\n\t}\n}\n\nfunction saml_metadata() {\n\t$auth = initialize_saml();\n\t$settings = $auth->getSettings();\n\t$metadata = $settings->getSPMetadata();\n\t\n\theader('Content-Type: text/xml');\n\techo $metadata;\n\texit();\n}\n\n\nfunction saml_validate_config() {\n\tsaml_load_translations();\n\trequire_once plugin_dir_path(__FILE__).'_toolkit_loader.php';\n\trequire plugin_dir_path(__FILE__).'settings.php';\n\trequire_once plugin_dir_path(__FILE__).\"validate.php\";\n\texit();\n}\n\nfunction initialize_saml() {\n\trequire_once plugin_dir_path(__FILE__).'_toolkit_loader.php';\n\trequire plugin_dir_path(__FILE__).'settings.php';\n\n\ttry {\n\t\t$auth = new Onelogin_Saml2_Auth($settings);\n\t} catch (Exception $e) {\n\t\techo '<br>'.__(\"The Onelogin SSO/SAML plugin is not correctly configured.\", 'onelogin-saml-sso').'<br>';\n\t\tprint_r($e->getMessage());\n\t\techo '<br>'.__(\"If you are the administrator\", 'onelogin-saml-sso').', <a href=\"'.get_site_url().'/wp-login.php?normal\">'.__(\"access using your wordpress credentials\", 'onelogin-saml-sso').'</a> '.__(\"and fix the problem\", 'onelogin-saml-sso');\n\t\texit();\n\t}\n\n\treturn $auth;\n}\n\n// Prevent that the user change important fields\nclass preventLocalChanges\n{\n\tfunction __construct()\n\t{\n\t\tif (get_option('onelogin_saml_customize_action_prevent_change_mail', false)) {\n\t\t\tadd_action('admin_footer', array($this, 'disable_email'));\n\t\t}\n\t\tif (get_option('onelogin_saml_customize_action_prevent_change_password', false)) {\n\t\t\tadd_action('admin_footer', array($this, 'disable_password'));\n\t\t}\n\t}\n\n\tfunction disable_email()\n\t{\n\t\tglobal $pagenow;\n\t\tif ($pagenow == 'profile.php' && !current_user_can( 'manage_options' )) {\n\n\t\t\t?>\n\t\t\t<script>\n\t\t\t\tjQuery(document).ready(function ($) {\n\t\t\t\t\tif ($('input[name=email]').length) {\n\t\t\t\t\t\t$('input[name=email]').attr(\"disabled\", \"disabled\");\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t</script>\n\t\t<?php\n\t\t}\n\t}\n\n\tfunction disable_password()\n\t{\n\t\tglobal $pagenow;\n\t\tif ($pagenow == 'profile.php' && !current_user_can( 'manage_options' )) {\n\n\t\t\t?>\n\t\t\t<script>\n\t\t\t\tjQuery(document).ready(function ($) {\n\t\t\t\t\t$('tr[id=password]').hide();\n\t\t\t\t\t$('tr[id=password]').next().hide();\n\t\t\t\t});\n\t\t\t</script>\n\t\t<?php\n\t\t}\n\t}\n\n}\n\n$preventLocalChanges = new preventLocalChanges();\n"], "fixing_code": ["<?php\n\n// Make sure we don't expose any info if called directly\nif ( !function_exists( 'add_action' ) ) {\n\techo 'Hi there!  I\\'m just a plugin, not much I can do when called directly.';\n\texit;\n}\n\nfunction saml_checker() {\n\tif (isset($_GET['saml_acs'])) {\n\t\tsaml_acs();\n\t}\n\telse if (isset($_GET['saml_sls'])) {\n\t\tsaml_sls();\n\t} else if (isset($_GET['saml_metadata'])) {\n\t\tsaml_metadata();\n\t} else if (isset($_GET['saml_validate_config'])) {\n\t\tsaml_validate_config();\n\t}\n}\n\nfunction saml_load_translations() {\n\t$domain = 'onelogin-saml-sso';\n\t$mo_file = plugin_dir_path(dirname(__FILE__)) . 'lang/'.get_locale() . '/' . $domain  . '.mo';\n\n\tload_textdomain($domain, $mo_file ); \n\tload_plugin_textdomain($domain, false, dirname( plugin_basename( __FILE__ ) ) . '/lang/'. get_locale() . '/' );\n}\n\nfunction saml_lostpassword() {\n\t$target = get_option('onelogin_saml_customize_links_lost_password');\n\tif (!empty($target)) {\n\t\twp_redirect($target);\n\t\treturn false;\n\t}\n}\n\nfunction saml_user_register() {\n\t$target = get_option('onelogin_saml_customize_links_user_registration');\n\tif (!empty($target)) {\n\t\twp_redirect($target);\n\t\treturn false;\n\t}\n}\n\nfunction saml_sso() {\n\tif (is_user_logged_in()) {\n\t\treturn true;\n\t}\n\t$auth = initialize_saml();\n\tif (isset($_SERVER['REQUEST_URI'])) {\n\t\t$auth->login($_SERVER['REQUEST_URI']);\n\t} else {\n\t\t$auth->login();\n\t}\n\texit();\n}\n\nfunction saml_slo() {\n\t$slo = get_option('onelogin_saml_slo');\n\n\tif (isset($_GET['action']) && $_GET['action']  == 'logout') {\n\t\tif (!$slo) {\n\t\t\twp_logout();\n\t\t\treturn false;\n\t\t} else {\n\t\t\t$nameId = null;\n\t\t\t$sessionIndex = null;\n\t\t\tif (isset($_COOKIE['saml_nameid'])) {\n\t\t\t\t$nameId = $_COOKIE['saml_nameid']; \n\t\t\t}\n\t\t\tif (isset($_COOKIE['saml_sessionindex'])) {\n\t\t\t\t$sessionIndex = $_COOKIE['saml_sessionindex'];\n\t\t\t}\n\t\t\t\n\t\t\t$auth = initialize_saml();\n\t\t\t$auth->logout(home_url(), array(), $nameId, $sessionIndex);\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\nfunction saml_acs() {\n\t$auth = initialize_saml();\n\n\t$auth->processResponse();\n\n\t$errors = $auth->getErrors();\n\tif (!empty($errors)) {\n\t\techo '<br>'.__(\"There was at least one error processing the SAML Response\").': ';\n\t\techo implode(\"<br>\", $errors);\n\t\techo '<br>'.__(\"Contact the administrator\");\n\t\texit();\n\t}\n\n\tsetcookie('saml_nameid', $auth->getNameId(), time() + YEAR_IN_SECONDS, SITECOOKIEPATH );\n\tsetcookie('saml_sessionindex', $auth->getSessionIndex(), time() + YEAR_IN_SECONDS, SITECOOKIEPATH );\n\n\t$attrs = $auth->getAttributes();\n\n\tif (empty($attrs)) {\n\t\t$username = $auth->getNameId();\n\t\t$email = $username;\n\t} else {\n\t\t$usernameMapping = get_option('onelogin_saml_attr_mapping_username');\n\t\t$mailMapping =  get_option('onelogin_saml_attr_mapping_mail'); \n\n\t\tif (!empty($usernameMapping) && isset($attrs[$usernameMapping]) && !empty($attrs[$usernameMapping][0])){\n\t\t\t$username = $attrs[$usernameMapping][0];\n\t\t}\n\t\tif (!empty($mailMapping) && isset($attrs[$mailMapping])  && !empty($attrs[$mailMapping][0])){\n\t\t\t$email = $attrs[$mailMapping][0];\n\t\t}\n\t}\n\n\tif (empty($username)) {\n\t\techo __(\"The username could not be retrieved from the IdP and is required\");\n\t\texit();\n\t}\n\telse if (empty($email)) {\n\t\techo __(\"The email could not be retrieved from the IdP and is required\");\n\t\texit();\t\n\t} else {\n\t\t$userdata = array();\n\t\t$userdata['user_login'] = wp_slash($username);\n\t\t$userdata['user_email'] = wp_slash($email);\n\t}\n\n\tif (!empty($attrs)) {\n\t\t$firstNameMapping = get_option('onelogin_saml_attr_mapping_firstname');\n\t\t$lastNameMapping = get_option('onelogin_saml_attr_mapping_lastname');\n\t\t$roleMapping = get_option('onelogin_saml_attr_mapping_role');\n\n\t\tif (!empty($firstNameMapping) && isset($attrs[$firstNameMapping]) && !empty($attrs[$firstNameMapping][0])){\n\t\t\t$userdata['first_name'] = $attrs[$firstNameMapping][0];\n\t\t}\n\n\t\tif (!empty($lastNameMapping) && isset($attrs[$lastNameMapping])  && !empty($attrs[$lastNameMapping][0])){\n\t\t\t$userdata['last_name'] = $attrs[$lastNameMapping][0];\n\t\t}\n\n\t\tif (!empty($roleMapping) && isset($attrs[$roleMapping])){\n\t\t\t$multiValued = get_option('onelogin_saml_role_mapping_multivalued_in_one_attribute_value', false);\n\t\t\tif ($multiValued && count($attrs[$roleMapping]) == 1) {\n\t\t\t\t$roleValues = array();\n\t\t\t\t$pattern = get_option('onelogin_saml_role_mapping_multivalued_pattern');\n\t\t\t\tif (!empty($pattern)) {\n\t\t\t\t\tpreg_match_all($pattern, $attrs[$roleMapping][0], $roleValues);\n\t\t\t\t\tif (!empty($roleValues)) {\n    \t\t\t\t\t$attrs[$roleMapping] = $roleValues[1];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$roleValues = explode(';', $attrs[$roleMapping][0]);\n\t\t\t\t\t$attrs[$roleMapping] = $roleValues;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$adminsRole = explode(',', get_option('onelogin_saml_role_mapping_administrator'));\n\t\t\t$editorsRole = explode(',', get_option('onelogin_saml_role_mapping_editor'));\n\t\t\t$authorsRole = explode(',', get_option('onelogin_saml_role_mapping_author'));\n\t\t\t$contributorsRole = explode(',', get_option('onelogin_saml_role_mapping_contributor'));\n\t\t\t$subscribersRole = explode(',', get_option('onelogin_saml_role_mapping_subscriber'));\n\n\t\t\t/* In order to use custom roles, you only need to uncomment those lines and replace the values\n\t\t\t *  First we assign possible OneLogin roles that we want to map with Wordpress Roles\n\t\t\t *  Then we asigned to the $userdata['role'] the name of the Wordpress role\n\t\t\t */\n\n\t\t\t//$customRole1 = array('value1', 'value2');  // value1 and value2 are roles of OneLogin platform that will be mapped to customRole1\n\t\t\t//$customRole2 = array('value3');  // value3 is a role of OneLogin platformthat will be mapped to customRole2\n\n\t\t\t$foundCustomizedRole = false;\n\n\t\t\t/*\n\t\t\tforeach ($attrs[$roleMapping] as $samlRole) {\n\t\t\t\tif (in_array($samlRole, $customRole1)) {\n\t\t\t\t\t$userdata['role'] = 'customrole1'; // Name of the role -> customrole1\n\t\t\t\t\t$foundCustomized = true;\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (in_array($samlRole, $customRole2)) {\n\t\t\t\t\t$userdata['role'] = 'customrole2'; // Name of the role -> customrole2\n\t\t\t\t\t$foundCustomized = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t*/\n\n\t\t\tif (!$foundCustomizedRole) {\n\t\t\t\t$role = 0;\n\n\t\t\t\tforeach ($attrs[$roleMapping] as $samlRole) {\n\t\t\t\t\t$samlRole = trim($samlRole);\n\t\t\t\t\tif (empty($samlRole)) {\n\t\t\t\t\t\tbreak;\t\n\t\t\t\t\t}\n\t\t\t\t\telse if (in_array($samlRole, $adminsRole)) {\n\t\t\t\t\t\tif ($role < 5) {\n\t\t\t\t\t\t\t$role = 5;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (in_array($samlRole, $editorsRole)) {\n\t\t\t\t\t\tif ($role < 4) {\n\t\t\t\t\t\t\t$role = 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (in_array($samlRole, $authorsRole)) {\n\t\t\t\t\t\tif ($role < 3) {\n\t\t\t\t\t\t\t$role = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (in_array($samlRole, $contributorsRole)) {\n\t\t\t\t\t\tif ($role < 2) {\n\t\t\t\t\t\t\t$role = 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (in_array($samlRole, $subscribersRole)) {\n\t\t\t\t\t\tif ($role < 1) {\n\t\t\t\t\t\t\t$role = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tswitch ($role) {\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\t$userdata['role'] = 'administrator';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\t$userdata['role'] = 'editor';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\t$userdata['role'] = 'author';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\t$userdata['role'] = 'contributor';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t$userdata['role'] = 'subscriber';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 0:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t$userdata['role'] = get_option('default_role');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t$matcher = get_option('onelogin_saml_account_matcher');\n\n\tif (empty($matcher) || $matcher == 'username') {\n\t\t$matcherValue = $userdata['user_login'];\n\t\t$user_id = username_exists($matcherValue);\t\t\n\t} else {\n\t\t$matcherValue = $userdata['user_email'];\n\t\t$user_id = email_exists($matcherValue);\n\t}\n\n\tif ($user_id) {\n\t\tif (get_option('onelogin_saml_updateuser')) {\n\t\t\t$userdata['ID'] = $user_id;\n\t\t\tunset($userdata['$user_pass']);\n\n\t\t\t// Prevent to change the role to the superuser (id=1)\n\t\t\tif ($user_id == 1 && isset($userdata['role'])) {\n\t\t\t\tunset($userdata['role']);\n\t\t\t}\n\n\t\t\t$user_id = wp_update_user($userdata);\n\t\t}\n\t} else if (get_option('onelogin_saml_autocreate')) {\n\t\tif (!validate_username($username)) {\n\t\t\techo __(\"The username provided by the IdP\"). ' \"'. $username. '\" '. __(\"is not valid and can't create the user at wordpress\");\n\t\t\texit();\n\t\t}\n\t\t$userdata['user_pass'] = wp_generate_password();\n\t\t$user_id = wp_insert_user($userdata);\n\t} else {\n\t\techo __(\"User provided by the IdP \"). ' \"'. $matcherValue. '\" '. __(\"does not exist in wordpress and auto-provisioning is disabled.\");\n\t\texit();\n\t}\n\n\tif (is_a($user_id, 'WP_Error')) {\n\t\t$error = $user_id->get_error_messages();\n\t\techo implode('<br>', $error);\n\t\texit();\n\t} else if ($user_id) {\n\t\twp_set_current_user($user_id);\n\t\twp_set_auth_cookie($user_id);\n\t\tsetcookie('saml_login', 1, time() + YEAR_IN_SECONDS, SITECOOKIEPATH );\n\t\t\t\t#do_action('wp_login', $user_id);\n\t\t#wp_signon($user_id);\n\t}\n\n\tif (isset($_REQUEST['RelayState'])) {\n\t\tif (!empty($_REQUEST['RelayState']) && (substr($_REQUEST['RelayState'], -strlen('/wp-login.php')) === '/wp-login.php')) {\n\t\t\twp_redirect(home_url());\n\t\t} else {\n\t\t\tif (strpos($_REQUEST['RelayState'], 'redirect_to') !== false) {\n\t\t\t\t$urlinfo = parse_url($_REQUEST['RelayState']);\n\t\t\t\t$parameters = array();\n\t\t\t\tparse_str($urlinfo['query'], $parameters);\n\t\t\t\t$target = urldecode($parameters['redirect_to']);\n\t\t\t\twp_redirect(urldecode($parameters['redirect_to']));\n\t\t\t}  else {\n\t\t\t\twp_redirect($_REQUEST['RelayState']);\n\t\t\t}\n\t\t}\n\t} else {\n\t\twp_redirect(home_url());\n\t}\n\texit();\n}\n\nfunction saml_sls() {\n\t$auth = initialize_saml();\n\t$retrieve_parameters_from_server = get_option('onelogin_saml_advanced_settings_retrieve_parameters_from_server', false);\n\t$auth->processSLO(false, null, $retrieve_parameters_from_server);\n\t\t$errors = $auth->getErrors();\n\tif (empty($errors)) {\n\t\twp_logout();\n\t\tsetcookie('saml_login', 0, time() - 3600, SITECOOKIEPATH );\n\t\tsetcookie('saml_nameid', null, time() - 3600, SITECOOKIEPATH );\n\t\tsetcookie('saml_sessionindex', null, time() - 3600, SITECOOKIEPATH );\n\n\t\tif (get_option('onelogin_saml_forcelogin') && get_option('onelogin_saml_customize_stay_in_wordpress_after_slo')) {\n\t\t\twp_redirect(home_url().'/wp-login.php?loggedout=true');\n\t\t} else {\n\t\t\tif (isset($_REQUEST['RelayState'])) {\n\t\t\t\twp_redirect($_REQUEST['RelayState']);\n\t\t\t} else {\n\t\t\t\twp_redirect(home_url());\n\t\t\t}\n\t\t}\n\t\texit();\n\t} else {\n\t\techo __(\"SLS endpoint found an error.\").$auth->getLastErrorReason();\n\t\texit();\n\t}\n}\n\nfunction saml_metadata() {\n\t$auth = initialize_saml();\n\t$settings = $auth->getSettings();\n\t$metadata = $settings->getSPMetadata();\n\t\n\theader('Content-Type: text/xml');\n\techo $metadata;\n\texit();\n}\n\n\nfunction saml_validate_config() {\n\tsaml_load_translations();\n\trequire_once plugin_dir_path(__FILE__).'_toolkit_loader.php';\n\trequire plugin_dir_path(__FILE__).'settings.php';\n\trequire_once plugin_dir_path(__FILE__).\"validate.php\";\n\texit();\n}\n\nfunction initialize_saml() {\n\trequire_once plugin_dir_path(__FILE__).'_toolkit_loader.php';\n\trequire plugin_dir_path(__FILE__).'settings.php';\n\n\ttry {\n\t\t$auth = new Onelogin_Saml2_Auth($settings);\n\t} catch (Exception $e) {\n\t\techo '<br>'.__(\"The Onelogin SSO/SAML plugin is not correctly configured.\", 'onelogin-saml-sso').'<br>';\n\t\tprint_r($e->getMessage());\n\t\techo '<br>'.__(\"If you are the administrator\", 'onelogin-saml-sso').', <a href=\"'.get_site_url().'/wp-login.php?normal\">'.__(\"access using your wordpress credentials\", 'onelogin-saml-sso').'</a> '.__(\"and fix the problem\", 'onelogin-saml-sso');\n\t\texit();\n\t}\n\n\treturn $auth;\n}\n\n// Prevent that the user change important fields\nclass preventLocalChanges\n{\n\tfunction __construct()\n\t{\n\t\tif (get_option('onelogin_saml_customize_action_prevent_change_mail', false)) {\n\t\t\tadd_action('admin_footer', array($this, 'disable_email'));\n\t\t}\n\t\tif (get_option('onelogin_saml_customize_action_prevent_change_password', false)) {\n\t\t\tadd_action('admin_footer', array($this, 'disable_password'));\n\t\t}\n\t}\n\n\tfunction disable_email()\n\t{\n\t\tglobal $pagenow;\n\t\tif ($pagenow == 'profile.php' && !current_user_can( 'manage_options' )) {\n\n\t\t\t?>\n\t\t\t<script>\n\t\t\t\tjQuery(document).ready(function ($) {\n\t\t\t\t\tif ($('input[name=email]').length) {\n\t\t\t\t\t\t$('input[name=email]').attr(\"disabled\", \"disabled\");\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t</script>\n\t\t<?php\n\t\t}\n\t}\n\n\tfunction disable_password()\n\t{\n\t\tglobal $pagenow;\n\t\tif ($pagenow == 'profile.php' && !current_user_can( 'manage_options' )) {\n\n\t\t\t?>\n\t\t\t<script>\n\t\t\t\tjQuery(document).ready(function ($) {\n\t\t\t\t\t$('tr[id=password]').hide();\n\t\t\t\t\t$('tr[id=password]').next().hide();\n\t\t\t\t});\n\t\t\t</script>\n\t\t<?php\n\t\t}\n\t}\n\n}\n\n$preventLocalChanges = new preventLocalChanges();\n"], "filenames": ["onelogin-saml-sso/php/functions.php"], "buggy_code_start_loc": [277], "buggy_code_end_loc": [278], "fixing_code_start_loc": [277], "fixing_code_end_loc": [278], "type": "CWE-798", "message": "The onelogin-saml-sso plugin before 2.2.0 for WordPress has a hardcoded @@@nopass@@@ password for just-in-time provisioned users.", "other": {"cve": {"id": "CVE-2016-10928", "sourceIdentifier": "cve@mitre.org", "published": "2019-08-22T20:15:11.440", "lastModified": "2019-08-29T12:57:17.380", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The onelogin-saml-sso plugin before 2.2.0 for WordPress has a hardcoded @@@nopass@@@ password for just-in-time provisioned users."}, {"lang": "es", "value": "El plugin onelogin-saml-sso anterior a la versi\u00f3n 2.2.0 para WordPress tiene una contrase\u00f1a codificada @@@ nopass @@@ para usuarios aprovisionados justo a tiempo."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-798"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:onelogin:onelogin_saml_sso:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "2.2.0", "matchCriteriaId": "5DCB4BCE-6D3E-4CF5-9F4D-2D64EE10BB3B"}]}]}], "references": [{"url": "https://github.com/onelogin/wordpress-saml/commit/fbe808e2fd8fde8cb7e6bf365c5334b5702262da", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://wordpress.org/plugins/onelogin-saml-sso/#developers", "source": "cve@mitre.org", "tags": ["Release Notes"]}]}, "github_commit_url": "https://github.com/onelogin/wordpress-saml/commit/fbe808e2fd8fde8cb7e6bf365c5334b5702262da"}}