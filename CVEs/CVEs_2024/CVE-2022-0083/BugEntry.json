{"buggy_code": ["<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpasswordsent','Password reminder');?></h1>\n<p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpasswordsent','E-mail sent. Click the link in the email and You will be able to set a new password.')?></p>\n", "<?php\n\nheader('X-Frame-Options: DENY');\n\n$tpl = erLhcoreClassTemplate::getInstance( 'lhuser/forgotpassword.tpl.php');\n\n$currentUser = erLhcoreClassUser::instance();\n\nif (isset($_POST['Forgotpassword'])) {\n\n\t$definition = array(\n        'Email' => new ezcInputFormDefinitionElement(\n            ezcInputFormDefinitionElement::REQUIRED, 'validate_email'\n        )\n    );\n\n    $form = new ezcInputForm( INPUT_POST, $definition );\n\n    $Errors = array();\n    \n    if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\n        erLhcoreClassModule::redirect('user/forgotpassword');\n        exit;\n    }\n    \n    if ( !$form->hasValidData( 'Email' ) )\n    {\n        $Errors[] =  erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Invalid e-mail address!');\n    }\n\n    $recaptchaData = erLhcoreClassModelChatConfig::fetch('recaptcha_data')->data_value;\n\n    if (is_array($recaptchaData) && isset($recaptchaData['enabled']) && $recaptchaData['enabled'] == 1) {\n        $params = [\n            'secret'    => $recaptchaData['secret_key'],\n            'response'  => $_POST['g-recaptcha']\n        ];\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, 'https://www.google.com/recaptcha/api/siteverify');\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 5);\n        curl_setopt($ch,CURLOPT_POST,1);\n        curl_setopt($ch,CURLOPT_POSTFIELDS,$params);\n        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT , 5);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        @curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true); // Some hostings produces warning...\n        $res = curl_exec($ch);\n\n        $res = json_decode($res,true);\n\n        if (!(isset($res['success']) && $res['success'] == 1 && isset($res['score']) && $res['score'] >= 0.1 && $res['action'] == 'login_action')) {\n            $Errors[] = 'Invalid recaptcha!';\n        }\n    }\n\n\tif (count($Errors) == 0) {\n\n\t\tif (($userID = erLhcoreClassModelUser::fetchUserByEmail($form->Email)) !== false) {\n\n\t\t\t$host = $_SERVER['HTTP_HOST'];\n\n\t\t\t$adminEmail = erConfigClassLhConfig::getInstance()->getSetting( 'site', 'site_admin_email' );\n\n\t\t\t$UserData = erLhcoreClassUser::getSession()->load( 'erLhcoreClassModelUser', $userID );\n\n\t\t\t$hash = erLhcoreClassModelForgotPassword::randomPassword(40);\n\n\t\t\terLhcoreClassModelForgotPassword::setRemindHash($UserData->id,$hash);\n\n\t\t\t$mail = new PHPMailer();\n\t\t\t$mail->CharSet = \"UTF-8\";\n\t\t\t$mail->From = $adminEmail;\n\n\t\t\t$mail->FromName = erConfigClassLhConfig::getInstance()->getSetting( 'site', 'title' );\n\t\t\t$mail->Subject = erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Password remind');\n\n\t\t\t// HTML body\n\t\t\t$body  = erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Click this link and You will be able to change a password').' </br><a href=\"' . (erLhcoreClassSystem::$httpsMode == true ? 'https://' : 'http://') . $host . erLhcoreClassDesign::baseurl('user/remindpassword').'/'.$hash.'\">Restore password</a>';\n\n\t\t\t// Plain text body\n\t\t\t$text_body  = erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Click this link and You will be able to change a password').' - ' . (erLhcoreClassSystem::$httpsMode == true ? 'https://' : 'http://') . $host . erLhcoreClassDesign::baseurl('user/remindpassword').'/'.$hash;\n\n\t\t\t$mail->Body    = $body;\n\t\t\t$mail->AltBody = $text_body;\n\t\t\t$mail->AddAddress( $UserData->email, $UserData->username);\n\n\t\t\terLhcoreClassChatMail::setupSMTP($mail);\n\n\t\t\t$mail->Send();\n\t\t\t$mail->ClearAddresses();\n\n\t\t\t$tpl = erLhcoreClassTemplate::getInstance( 'lhuser/forgotpasswordsent.tpl.php');\n\n\t\t} else {\n\t\t\terLhcoreClassModule::redirect('user/forgotpassword');\n\t\t\texit;\n\t\t}\n    }  else {\n        $tpl->set('errors',$Errors);\n    }\n}\n\n$Result['content'] = $tpl->fetch();\n$Result['pagelayout'] = 'login';\n\n?>"], "fixing_code": ["<h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpasswordsent','Password reminder');?></h1>\n<p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpasswordsent','If this e-mail exists we have send password remind link. Click the link in the email and You will be able to set a new password.')?></p>\n", "<?php\n\nheader('X-Frame-Options: DENY');\n\n$tpl = erLhcoreClassTemplate::getInstance( 'lhuser/forgotpassword.tpl.php');\n\n$currentUser = erLhcoreClassUser::instance();\n\nif (isset($_POST['Forgotpassword'])) {\n\n\t$definition = array(\n        'Email' => new ezcInputFormDefinitionElement(\n            ezcInputFormDefinitionElement::REQUIRED, 'validate_email'\n        )\n    );\n\n    $form = new ezcInputForm( INPUT_POST, $definition );\n\n    $Errors = array();\n    \n    if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\n        erLhcoreClassModule::redirect('user/forgotpassword');\n        exit;\n    }\n    \n    if ( !$form->hasValidData( 'Email' ) )\n    {\n        $Errors[] =  erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Invalid e-mail address!');\n    }\n\n    $recaptchaData = erLhcoreClassModelChatConfig::fetch('recaptcha_data')->data_value;\n\n    if (is_array($recaptchaData) && isset($recaptchaData['enabled']) && $recaptchaData['enabled'] == 1) {\n        $params = [\n            'secret'    => $recaptchaData['secret_key'],\n            'response'  => $_POST['g-recaptcha']\n        ];\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, 'https://www.google.com/recaptcha/api/siteverify');\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 5);\n        curl_setopt($ch,CURLOPT_POST,1);\n        curl_setopt($ch,CURLOPT_POSTFIELDS,$params);\n        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT , 5);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        @curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true); // Some hostings produces warning...\n        $res = curl_exec($ch);\n\n        $res = json_decode($res,true);\n\n        if (!(isset($res['success']) && $res['success'] == 1 && isset($res['score']) && $res['score'] >= 0.1 && $res['action'] == 'login_action')) {\n            $Errors[] = 'Invalid recaptcha!';\n        }\n    }\n\n\tif (count($Errors) == 0) {\n\n\t\tif (($userID = erLhcoreClassModelUser::fetchUserByEmail($form->Email)) !== false) {\n\n\t\t\t$host = $_SERVER['HTTP_HOST'];\n\n\t\t\t$adminEmail = erConfigClassLhConfig::getInstance()->getSetting( 'site', 'site_admin_email' );\n\n\t\t\t$UserData = erLhcoreClassUser::getSession()->load( 'erLhcoreClassModelUser', $userID );\n\n\t\t\t$hash = erLhcoreClassModelForgotPassword::randomPassword(40);\n\n\t\t\terLhcoreClassModelForgotPassword::setRemindHash($UserData->id,$hash);\n\n\t\t\t$mail = new PHPMailer();\n\t\t\t$mail->CharSet = \"UTF-8\";\n\t\t\t$mail->From = $adminEmail;\n\n\t\t\t$mail->FromName = erConfigClassLhConfig::getInstance()->getSetting( 'site', 'title' );\n\t\t\t$mail->Subject = erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Password remind');\n\n\t\t\t// HTML body\n\t\t\t$body  = erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Click this link and You will be able to change a password').' </br><a href=\"' . (erLhcoreClassSystem::$httpsMode == true ? 'https://' : 'http://') . $host . erLhcoreClassDesign::baseurl('user/remindpassword').'/'.$hash.'\">Restore password</a>';\n\n\t\t\t// Plain text body\n\t\t\t$text_body  = erTranslationClassLhTranslation::getInstance()->getTranslation('user/forgotpassword','Click this link and You will be able to change a password').' - ' . (erLhcoreClassSystem::$httpsMode == true ? 'https://' : 'http://') . $host . erLhcoreClassDesign::baseurl('user/remindpassword').'/'.$hash;\n\n\t\t\t$mail->Body    = $body;\n\t\t\t$mail->AltBody = $text_body;\n\t\t\t$mail->AddAddress( $UserData->email, $UserData->username);\n\n\t\t\terLhcoreClassChatMail::setupSMTP($mail);\n\n\t\t\t$mail->Send();\n\t\t\t$mail->ClearAddresses();\n\n\t\t\t$tpl = erLhcoreClassTemplate::getInstance( 'lhuser/forgotpasswordsent.tpl.php');\n\n\t\t} else {\n            $tpl = erLhcoreClassTemplate::getInstance( 'lhuser/forgotpasswordsent.tpl.php');\n\t\t}\n\n    }  else {\n        $tpl->set('errors',$Errors);\n    }\n}\n\n$Result['content'] = $tpl->fetch();\n$Result['pagelayout'] = 'login';\n\n?>"], "filenames": ["lhc_web/design/defaulttheme/tpl/lhuser/forgotpasswordsent.tpl.php", "lhc_web/modules/lhuser/forgotpassword.php"], "buggy_code_start_loc": [2, 97], "buggy_code_end_loc": [3, 99], "fixing_code_start_loc": [2, 97], "fixing_code_end_loc": [3, 100], "type": "CWE-209", "message": "livehelperchat is vulnerable to Generation of Error Message Containing Sensitive Information", "other": {"cve": {"id": "CVE-2022-0083", "sourceIdentifier": "security@huntr.dev", "published": "2022-01-04T07:15:07.153", "lastModified": "2022-01-11T20:09:15.753", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "livehelperchat is vulnerable to Generation of Error Message Containing Sensitive Information"}, {"lang": "es", "value": "livehelperchat es vulnerable a una Generaci\u00f3n de Mensajes de Error que Contienen Informaci\u00f3n Confidencial"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 7.3, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-209"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:livehelperchat:live_helper_chat:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.91", "matchCriteriaId": "744AB687-C4FD-47D3-BE0A-186C84B8E942"}]}]}], "references": [{"url": "https://github.com/livehelperchat/livehelperchat/commit/fbed8728be59040a7218610e72f6eceb5f8bc152", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/4c477440-3b03-42eb-a6e2-a31b55090736", "source": "security@huntr.dev", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/livehelperchat/livehelperchat/commit/fbed8728be59040a7218610e72f6eceb5f8bc152"}}