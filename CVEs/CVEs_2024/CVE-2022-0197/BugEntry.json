{"buggy_code": ["<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2010 - 2022, Phoronix Media\n\tCopyright (C) 2010 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass pts_strings\n{\n\tconst CHAR_LETTER = 2;\n\tconst CHAR_NUMERIC = 4;\n\tconst CHAR_DECIMAL = 8;\n\tconst CHAR_SPACE = 16;\n\tconst CHAR_DASH = 32;\n\tconst CHAR_UNDERSCORE = 64;\n\tconst CHAR_COLON = 128;\n\tconst CHAR_COMMA = 256;\n\tconst CHAR_SLASH = 512;\n\tconst CHAR_AT = 1024;\n\tconst CHAR_PLUS = 2048;\n\tconst CHAR_SEMICOLON = 4096;\n\tconst CHAR_EQUAL = 8192;\n\n\tpublic static function is_url($string)\n\t{\n\t\t$components = parse_url($string);\n\t\treturn $components != false && isset($components['scheme']) && isset($components['host']);\n\t}\n\tpublic static function is_version($string)\n\t{\n\t\t// Only numeric or decimal, and at least a decimal (not int)\n\t\treturn pts_strings::string_only_contains($string, (pts_strings::CHAR_NUMERIC | pts_strings::CHAR_DECIMAL)) && pts_strings::string_contains($string, pts_strings::CHAR_DECIMAL);\n\t}\n\tpublic static function is_alnum($string)\n\t{\n\t\treturn function_exists('ctype_alnum') ? ctype_alnum($string) : pts_strings::string_only_contains($string, (pts_strings::CHAR_NUMERIC | pts_strings::CHAR_LETTER));\n\t}\n\tpublic static function is_alpha($string)\n\t{\n\t\treturn function_exists('ctype_alpha') ? ctype_alpha($string) : pts_strings::string_only_contains($string, pts_strings::CHAR_LETTER);\n\t}\n\tpublic static function is_digit($string)\n\t{\n\t\treturn function_exists('ctype_digit') ? ctype_digit($string) : is_numeric($string);\n\t}\n\tpublic static function is_upper($string)\n\t{\n\t\treturn function_exists('ctype_upper') ? ctype_upper($string) : ($string == strtoupper($string));\n\t}\n\tpublic static function trim_search_query_leave_hdd_size($value)\n\t{\n\t\treturn pts_strings::trim_search_query($value, false, true);\n\t}\n\tpublic static function trim_search_query($value, $remove_multipliers = false, $keep_hdd_size = false)\n\t{\n\t\t$search_break_characters = array('@', '(', '/', '+', '[', '<', '*', '\"');\n\t\tfor($i = 0, $x = strlen($value); $i < $x; $i++)\n\t\t{\n\t\t\tif(in_array($value[$i], $search_break_characters))\n\t\t\t{\n\t\t\t\t$value = substr($value, 0, $i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif((is_numeric($value) && substr($value, 0, 2) != '0x') || $value == null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove multiplier if prepended to string\n\t\tif($remove_multipliers)\n\t\t{\n\t\t\t$multiplier = strpos($value, ' x ');\n\t\t\tif($multiplier !== false && is_numeric(substr($value, 0, $multiplier)))\n\t\t\t{\n\t\t\t\t$value = substr($value, ($multiplier + 3));\n\t\t\t}\n\t\t}\n\n\t\t$value = str_replace('& ', '', $value);\n\n\t\tif(substr($value, -1) == '.')\n\t\t{\n\t\t\t$value = substr($value, 0, -1);\n\t\t}\n\n\t\tif(($w = stripos($value, 'WARNING')) !== false)\n\t\t{\n\t\t\t// to get rid of Scheisse like 'Gtk-WARNING **: Unable'\n\t\t\t$value = substr($value, 0, strrpos($value, ' ', (0 - (strlen($value) - $w))));\n\t\t}\n\n\t\t// Remove other beginning or ending words based upon conditions\n\t\t$words = explode(' ', trim($value));\n\t\t$c = count($words);\n\t\tswitch($c)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\tif(isset($words[0][2]) && in_array(substr($words[0], -2), array('MB', 'GB', '0W')))\n\t\t\t\t{\n\t\t\t\t\t// Just searching a disk / memory size or a power supply wattage\n\t\t\t\t\t$words = array();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$last_index = ($c - 1);\n\t\t\t\tif(strpos($words[$last_index], 'v1') !== false || strpos($words[$last_index], 'MB') !== false || strpos($words[$last_index], 'GB') !== false)\n\t\t\t\t{\n\t\t\t\t\t// Version number being appended to product (some mobos) or the MB/GB size for GPUs\n\t\t\t\t\tarray_pop($words);\n\t\t\t\t}\n\t\t\t\telse if(!$keep_hdd_size && strpos($words[0], 'GB') !== false)\n\t\t\t\t{\n\t\t\t\t\t// Likely disk size in front of string\n\t\t\t\t\tarray_shift($words);\n\t\t\t\t}\n\t\t\t\telse if(!$keep_hdd_size && strpos($words[0], 'TB') !== false)\n\t\t\t\t{\n\t\t\t\t\t// Likely disk size in front of string\n\t\t\t\t\tarray_shift($words);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn implode(' ', $words);\n\t}\n\tpublic static function parse_for_home_directory($path)\n\t{\n\t\t// Find home directory if needed\n\t\tif(strpos($path, '~/') !== false)\n\t\t{\n\t\t\t$path = str_replace('~/', pts_core::user_home_directory(), $path);\n\t\t}\n\n\t\treturn pts_strings::add_trailing_slash($path);\n\t}\n\tpublic static function string_bool($string)\n\t{\n\t\t// Used for evaluating if the user inputted a string that evaluates to true\n\t\tif(function_exists('filter_var'))\n\t\t{\n\t\t\treturn $string != null && filter_var($string, FILTER_VALIDATE_BOOLEAN);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn $string != null && ($string === true || $string == 1 || strtolower($string) == 'true' || strtolower($string) == 'yes');\n\t\t}\n\t}\n\tpublic static function add_trailing_slash($path)\n\t{\n\t\tif(PTS_IS_CLIENT && phodevi::is_windows() && strpos($path, ':\\\\') === 1)\n\t\t{\n\t\t\treturn $path . (substr($path, -1) == '\\\\' ? null : '\\\\');\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn $path . (substr($path, -1) == '/' ? null : '/');\n\t\t}\n\t}\n\tpublic static function trim_explode($delimiter, $to_explode, $limit = PHP_INT_MAX)\n\t{\n\t\tif(is_array($to_explode))\n\t\t{\n\t\t\treturn $to_explode;\n\t\t}\n\n\t\treturn empty($to_explode) ? array() : array_map('trim', explode($delimiter, $to_explode, $limit));\n\t}\n\tpublic static function comma_explode($to_explode)\n\t{\n\t\treturn self::trim_explode(',', $to_explode);\n\t}\n\tpublic static function colon_explode($to_explode)\n\t{\n\t\treturn self::trim_explode(':', $to_explode);\n\t}\n\tpublic static function first_in_string($string, $delimited_by = ' ')\n\t{\n\t\treturn ($string != null && ($t = strpos($string, $delimited_by))) ? substr($string, 0, $t) : $string;\n\t}\n\tpublic static function last_in_string($string, $delimited_by = ' ')\n\t{\n\t\treturn !empty($string) && ($t = strrpos($string, $delimited_by)) ? substr($string, ($t + 1)) : $string;\n\t}\n\tpublic static function has_in_string($string, $r)\n\t{\n\t\t$has_in_string = false;\n\n\t\tforeach($r as $string_to_check)\n\t\t{\n\t\t\tif(strpos($string, $string_to_check) !== false)\n\t\t\t{\n\t\t\t\t$has_in_string = $string_to_check;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $has_in_string;\n\t}\n\tpublic static function has_in_istring($string, $r)\n\t{\n\t\t$has_in_string = false;\n\n\t\tforeach($r as $string_to_check)\n\t\t{\n\t\t\tif(stripos($string, $string_to_check) !== false)\n\t\t\t{\n\t\t\t\t$has_in_string = $string_to_check;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $has_in_string;\n\t}\n\tpublic static function random_characters($length, $with_numbers = false)\n\t{\n\t\t$random = null;\n\n\t\tif($with_numbers)\n\t\t{\n\t\t\tfor($i = 0; $i < $length; $i++)\n\t\t\t{\n\t\t\t\t$r = rand(0, 35);\n\t\t\t\tif($r < 10)\n\t\t\t\t\t$random .= $r;\n\t\t\t\telse\n\t\t\t\t\t$random .= chr(55 + $r);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor($i = 0; $i < $length; $i++)\n\t\t\t{\n\t\t\t\t$random .= chr(rand(65, 90));\n\t\t\t}\n\t\t}\n\n\t\treturn $random;\n\t}\n\tpublic static function find_longest_string(&$string_r)\n\t{\n\t\tif(!is_array($string_r))\n\t\t{\n\t\t\treturn $string_r;\n\t\t}\n\n\t\t$longest_string = null;\n\t\t$longest_string_length = 0;\n\n\t\tforeach($string_r as $one_string)\n\t\t{\n\t\t\tif(is_array($one_string))\n\t\t\t{\n\t\t\t\t$one_string = self::find_longest_string($one_string);\n\t\t\t}\n\n\t\t\t$one_string = strval($one_string);\n\t\t\tif(isset($one_string[$longest_string_length]))\n\t\t\t{\n\t\t\t\t$longest_string = $one_string;\n\t\t\t\t$longest_string_length = strlen($one_string);\n\t\t\t}\n\t\t}\n\n\t\treturn $longest_string;\n\t}\n\tpublic static function char_is_of_type($char, $attributes)\n\t{\n\t\t$i = ord($char);\n\n\t\tif(($attributes & self::CHAR_LETTER) && (($i > 64 && $i < 91) || ($i > 96 && $i < 123)))\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_NUMERIC) && $i > 47 && $i < 58)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_DECIMAL) && $i == 46)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_DASH) && $i == 45)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_UNDERSCORE) && $i == 95)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_COLON) && $i == 58)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_SPACE) && $i == 32)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_COMMA) && $i == 44)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_AT) && $i == 64)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_PLUS) && $i == 43)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_SEMICOLON) && $i == 59)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_EQUAL) && $i == 61)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_SLASH) && ($i == 47 || $i == 92))\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$is_of_type = false;\n\t\t}\n\n\t\treturn $is_of_type;\n\t}\n\tpublic static function trim_spaces($str)\n\t{\n\t\t// get rid of multiple/redundant spaces that are next to each other\n\t\t$new_str = null;\n\t\tfor($i = strlen($str); $i > 0; $i--)\n\t\t{\n\t\t\t// 32 is a ASCII space\n\t\t\tif(ord($str[($i - 1)]) != 32 || ($i < 2 || ord($str[($i - 2)]) != 32))\n\t\t\t{\n\t\t\t\t$new_str = $str[$i - 1] . $new_str;\n\t\t\t}\n\t\t}\n\n\t\treturn $new_str != null ? trim($new_str) : '';\n\t}\n\tpublic static function remove_redundant($string, $redundant_char)\n\t{\n\t\tif(empty($string))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\t$prev_char = null;\n\t\t$new_string = '';\n\n\t\tfor($i = 0, $l = strlen($string); $i < $l; $i++)\n\t\t{\n\t\t\t$this_char = $string[$i];\n\n\t\t\tif($this_char != $redundant_char || $prev_char != $redundant_char)\n\t\t\t{\n\t\t\t\t$new_string .= $this_char;\n\t\t\t}\n\n\t\t\t$prev_char = $this_char;\n\t\t}\n\n\t\treturn trim($new_string);\n\t}\n\tpublic static function strip_string($str)\n\t{\n\t\t// Clean a string containing hardware information of some common things to change/strip out\n\t\t$change_phrases = array(\n\t\t\t'MCH' => 'Memory Controller Hub',\n\t\t\t'AMD' => 'Advanced Micro Devices',\n\t\t\t'MSI' => 'MICRO-STAR INTERNATIONAL',\n\t\t\t'SiS' => 'Silicon Integrated Systems',\n\t\t\t'Abit' => 'http://www.abit.com.tw/',\n\t\t\t'ASUS' => 'ASUSTeK',\n\t\t\t'HP' => 'Hewlett-Packard',\n\t\t\t'NVIDIA' => 'nVidia',\n\t\t\t'HDD' => 'HARDDISK',\n\t\t\t'Intel' => 'Intel64',\n\t\t\t'HD' => 'High Definition',\n\t\t\t'IGP' => array('Integrated Graphics Controller', 'Express Graphics Controller', 'Integrated Graphics Device', 'Chipset Integrated')\n\t\t\t);\n\n\t\tforeach($change_phrases as $new_phrase => $original_phrase)\n\t\t{\n\t\t\t$str = str_ireplace($original_phrase, $new_phrase, $str);\n\t\t}\n\n\t\t$remove_phrases = array('incorporation', 'corporation', 'corp.', 'invalid', 'technologies', 'technology', ' version', ' project ', 'computer', 'To Be Filled By', 'ODM', 'O.E.M.', 'Desktop Reference Platform', 'small form factor', 'convertible', ' group', 'chipset', 'community', 'reference', 'communications', 'semiconductor', 'processor', 'host bridge', 'adapter', ' CPU', 'platform', 'international', 'express', 'graphics', ' none', 'electronics', 'integrated', 'alternate', 'quad-core', 'memory', 'series', 'network', 'motherboard', 'electric ', 'industrial ', 'serverengines', 'Manufacturer', 'x86/mmx/sse2', '/AGP/SSE/3DNOW!', '/AGP/SSE2', 'controller', '(extreme graphics innovation)', 'pci-e_gfx and ht3 k8 part', 'pci-e_gfx and ht1 k8 part', 'Northbridge only', 'dual slot', 'dual-core', 'dual core', 'microsystems', 'not specified', 'single slot', 'genuine', 'unknown device', 'systemberatung', 'gmbh', 'graphics adapter', 'video device', 'http://', 'www.', '.com', '.tw/', '/pci/sse2/3dnow!', '/pcie/sse2', '/pci/sse2', 'balloon', 'network connection', 'ethernet', ' to ', ' fast ', 'limited.', ' systems', ' system', 'compliant', 'co. ltd', 'co.', 'ltd.', 'LTD ', ' LTD', '\\AE', '(r)', '(tm)', 'inc.', 'inc', '6.00 PG', ',', '\\'', '_ ', '_ ', 'corp', 'product name', 'base board', 'mainboard', 'pci to pci', ' release ', 'nee ', 'default string', ' AG ', '/DRAM', 'shared ', ' sram', 'and subsidiaries', ' SCSI', 'Disk Device', ' ATA', 'Daughter Card', 'Gigabit Connection', 'altivec supported', ' family', ' ing');\n\t\t$str = str_ireplace($remove_phrases, ' ', $str . ' ');\n\n\t\tif(($w = stripos($str, 'WARNING')) !== false)\n\t\t{\n\t\t\t// to get rid of Scheisse like 'Gtk-WARNING **: Unable'\n\t\t\t$str = substr($str, 0, strrpos($str, ' ', (0 - (strlen($str) - $w))));\n\t\t}\n\t\tif(($w = stripos($str, ' with Radeon')) !== false || ($w = stripos($str, ' w/ Radeon')) !== false)\n\t\t{\n\t\t\t$str = substr($str, 0, $w);\n\t\t}\n\n\t\t$str = pts_strings::trim_spaces($str);\n\n\t\t// Fixes an AMD string issue like 'FX -4100' due to stripping (TM) from in between characters, possibly other cases too\n\t\t$str = str_replace(' -', '-', $str);\n\t\t$str = str_replace('- ', ' ', $str);\n\n\t\tif(stripos($str, ' + ') === false)\n\t\t{\n\t\t\t// Remove any duplicate words\n\t\t\t$str = implode(' ', array_unique(explode(' ', $str)));\n\t\t}\n\n\t\treturn $str;\n\t}\n\tpublic static function has_element_in_string($haystack, $array_to_check)\n\t{\n\t\tforeach($array_to_check as $ch)\n\t\t{\n\t\t\tif(stripos($haystack, $ch) !== false)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic static function remove_line_timestamps($log)\n\t{\n\t\t// Try to strip out timestamps from lines like Xorg.0.log and dmesg, e.g.:\n\t\t// [  326.390358] EXT4-fs (dm-1): initial error at 1306235400: ext4_journal_start_sb:251\n\t\tif($log === null)\n\t\t{\n\t\t\t$log = '';\n\t\t}\n\t\t$log = explode(PHP_EOL, $log);\n\t\tforeach($log as &$line)\n\t\t{\n\t\t\tif(substr($line, 0, 1) == '[' && ($t = strpos($line, '] ', 2)) !== false)\n\t\t\t{\n\t\t\t\t$encased_segment = trim(substr($line, 1, ($t - 1)));\n\n\t\t\t\tif(is_numeric($encased_segment))\n\t\t\t\t{\n\t\t\t\t\t$line = substr($line, ($t + 2));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$log = implode(PHP_EOL, $log);\n\n\t\treturn $log;\n\t}\n\tpublic static function remove_lines_containing($contents, $contains)\n\t{\n\t\tforeach($contains as $needle)\n\t\t{\n\t\t\twhile(($x = stripos($contents, $needle)) !== false)\n\t\t\t{\n\t\t\t\t$affected_line_begins = strrpos($contents, PHP_EOL, (0 - strlen($contents) + $x));\n\t\t\t\t$affected_line_ends = strpos($contents, PHP_EOL, $x);\n\t\t\t\t$contents = substr($contents, 0, $affected_line_begins) . ($affected_line_ends === false ? null : substr($contents, $affected_line_ends));\n\t\t\t}\n\t\t}\n\n\t\treturn $contents;\n\t}\n\tpublic static function remove_from_string($string, $attributes)\n\t{\n\t\t$string_r = str_split($string);\n\t\t$new_string = null;\n\n\t\tforeach($string_r as $char)\n\t\t{\n\t\t\tif(pts_strings::char_is_of_type($char, $attributes) == false)\n\t\t\t{\n\t\t\t\t$new_string .= $char;\n\t\t\t}\n\t\t}\n\n\t\treturn $new_string;\n\t}\n\tpublic static function keep_in_string($string, $attributes)\n\t{\n\t\t$string_r = str_split($string);\n\t\t$new_string = null;\n\n\t\tforeach($string_r as $char)\n\t\t{\n\t\t\tif(pts_strings::char_is_of_type($char, $attributes) == true)\n\t\t\t{\n\t\t\t\t$new_string .= $char;\n\t\t\t}\n\t\t}\n\n\t\treturn $new_string;\n\t}\n\tpublic static function string_only_contains($string, $attributes)\n\t{\n\t\t$string_r = str_split($string);\n\n\t\tforeach($string_r as $char)\n\t\t{\n\t\t\tif(pts_strings::char_is_of_type($char, $attributes) == false)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\tpublic static function string_contains($string, $attributes)\n\t{\n\t\t$string_r = str_split($string);\n\n\t\tforeach($string_r as $char)\n\t\t{\n\t\t\tif(pts_strings::char_is_of_type($char, $attributes) == true)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic static function times_occurred($string, $attributes)\n\t{\n\t\t$string_r = str_split($string);\n\t\t$times_matched = 0;\n\n\t\tforeach($string_r as $char)\n\t\t{\n\t\t\tif(pts_strings::char_is_of_type($char, $attributes) == true)\n\t\t\t{\n\t\t\t\t$times_matched++;\n\t\t\t}\n\t\t}\n\n\t\treturn $times_matched;\n\t}\n\tpublic static function proximity_match($search, $match_to)\n\t{\n\t\t// Proximity search in $search string for * against $match_to\n\t\t$search = explode('*', $search);\n\t\t$is_match = true;\n\n\t\tif(count($search) == 1)\n\t\t{\n\t\t\t$is_match = false;\n\t\t}\n\n\t\tfor($i = 0; $i < count($search) && $is_match && !empty($search[$i]); $i++)\n\t\t{\n\t\t\tif(($match_point = strpos($match_to, $search[$i])) !== false && ($i > 0 || $match_point == 0))\n\t\t\t{\n\t\t\t\t$match_to = substr($match_to, ($match_point + strlen($search[$i])));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$is_match = false;\n\t\t\t}\n\t\t}\n\n\t\treturn $is_match;\n\t}\n\tpublic static function result_quantifier_to_string($quantifier)\n\t{\n\t\t$quantifiers = array('MAX' => 'Maximum', 'MIN' => 'Minimum', 'NULL' => null, 'AVG' => 'Average');\n\t\treturn isset($quantifiers[$quantifier]) ? $quantifiers[$quantifier] : 'Average';\n\t}\n\tpublic static function format_time($time, $input_format = 'SECONDS', $standard_version = true, $round_to = 0)\n\t{\n\t\tswitch($input_format)\n\t\t{\n\t\t\tcase 'MINUTES':\n\t\t\t\t$time_in_seconds = $time * 60;\n\t\t\t\tbreak;\n\t\t\tcase 'SECONDS':\n\t\t\tdefault:\n\t\t\t\t$time_in_seconds = $time;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$time_in_seconds = (int)$time_in_seconds;\n\t\tif($round_to > 0)\n\t\t{\n\t\t\t$time_in_seconds += $round_to - ($time_in_seconds % $round_to);\n\t\t}\n\n\t\t$formatted_time = array();\n\n\t\tif($time_in_seconds > 0)\n\t\t{\n\t\t\t$time_r = array();\n\t\t\t$time_r[0] = array(floor($time_in_seconds / 86400), 'Day');\n\t\t\t$time_r[1] = array(floor(($time_in_seconds % 86400) / 3600), 'Hour');\n\t\t\t$time_r[2] = array(floor(($time_in_seconds % 3600) / 60), 'Minute');\n\t\t\t$time_r[3] = array($time_in_seconds % 60, 'Second');\n\n\t\t\tforeach($time_r as $time_segment)\n\t\t\t{\n\t\t\t\tif($time_segment[0] > 0)\n\t\t\t\t{\n\t\t\t\t\t$formatted_part = $time_segment[0];\n\n\t\t\t\t\tif($standard_version)\n\t\t\t\t\t{\n\t\t\t\t\t\t$formatted_part .= ' ' . $time_segment[1];\n\n\t\t\t\t\t\tif($time_segment[0] > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$formatted_part .= 's';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$formatted_part .= strtolower(substr($time_segment[1], 0, 1));\n\t\t\t\t\t}\n\n\t\t\t\t\t$formatted_time[] = $formatted_part;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn implode(($standard_version ? ', ' : ''), $formatted_time);\n\t}\n\tpublic static function number_suffix_handler($n)\n\t{\n\t\t$suffix = 'th';\n\t\t$r = $n % 100;\n\t\tif($r < 11 || $r > 13)\n\t\t{\n\t\t\tswitch($r % 10)\n\t\t\t{\n\t\t\t\tcase 1:\n\t\t\t\t\t$suffix = 'st';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\t$suffix = 'nd';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\t$suffix = 'rd';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t    return $n . $suffix;\n\t}\n\tpublic static function plural_handler($count, $base)\n\t{\n\t\treturn $count . ' ' . $base . ($count != 1 ? 's' : null);\n\t}\n\tpublic static function days_ago_format_string($days_ago)\n\t{\n\t\tif($days_ago < 30)\n\t\t{\n\t\t\t$days_ago = pts_strings::plural_handler($days_ago, 'day');\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$days_ago = floor($days_ago / 30);\n\n\t\t\tif($days_ago >= 12)\n\t\t\t{\n\t\t\t\t$year = floor($days_ago / 12);\n\t\t\t\t$months = $days_ago % 12;\n\n\t\t\t\t$days_ago = pts_strings::plural_handler($year, 'year');\n\n\t\t\t\tif($months > 0)\n\t\t\t\t{\n\t\t\t\t\t$days_ago .= ', ' . pts_strings::plural_handler($months, 'month');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$days_ago = pts_strings::plural_handler($days_ago, 'month');\n\t\t\t}\n\t\t}\n\n\t\treturn $days_ago;\n\t}\n\tpublic static function system_category_to_openbenchmark_category($category)\n\t{\n\t\t$categories = array('Graphics' => 'GPU', 'Processor' => 'CPU', 'System' => 'CPU', 'File-System' => 'File System');\n\t\treturn isset($categories[$category]) ? $categories[$category] : $category;\n\t}\n\tpublic static function parse_value_string_vars($value_string)\n\t{\n\t\t$values = array();\n\t\tforeach(explode(';', $value_string) as $preset)\n\t\t{\n\t\t\tif(count($preset = pts_strings::trim_explode('=', $preset)) == 2)\n\t\t\t{\n\t\t\t\t$values[$preset[0]] = $preset[1];\n\t\t\t}\n\t\t}\n\n\t\treturn $values;\n\t}\n\tpublic static function simplify_string_for_file_handling($str)\n\t{\n\t\treturn $str == null ? '' : pts_strings::keep_in_string(trim(str_replace(array('/', '\\\\'), '_', $str)), pts_strings::CHAR_LETTER | pts_strings::CHAR_NUMERIC | pts_strings::CHAR_DASH | pts_strings::CHAR_DECIMAL | pts_strings::CHAR_SPACE | pts_strings::CHAR_UNDERSCORE | pts_strings::CHAR_COMMA | pts_strings::CHAR_AT | pts_strings::CHAR_PLUS | pts_strings::CHAR_SEMICOLON | pts_strings::CHAR_EQUAL);\n\t}\n\tpublic static function highlight_words_with_colon($str, $pre = '<strong>', $post = '</strong>')\n\t{\n\t\tif($str == null)\n\t\t{\n\t\t\treturn $str;\n\t\t}\n\n\t\t$str_r = explode(' ', $str);\n\t\tforeach($str_r as &$word)\n\t\t{\n\t\t\tif(substr($word, -1) == ':')\n\t\t\t{\n\t\t\t\t$word = $pre . $word . $post;\n\t\t\t}\n\t\t}\n\t\treturn implode(' ', $str_r);\n\t}\n\tpublic static function highlight_diff_two_structured_strings($str1, $str2, $pre = '<span style=\"color: #FF0000;\">', $post = '</span>')\n\t{\n\t\tif($str2 == null)\n\t\t{\n\t\t\treturn $str1;\n\t\t}\n\n\t\t$str1 = explode(', ', $str1);\n\t\t$str2 = explode(', ', $str2);\n\t\tforeach($str1 as $i => &$word)\n\t\t{\n\t\t\tif(isset($str2[$i]) && $str2[$i] != $str1[$i])\n\t\t\t{\n\t\t\t\t$word = $pre . $word . $post;\n\t\t\t}\n\t\t}\n\t\treturn implode(', ', $str1);\n\t}\n\tpublic static function is_text_string($str_check)\n\t{\n\t\t$is_text = false;\n\n                if(function_exists('mb_detect_encoding'))\n                {\n                        $is_text = mb_detect_encoding((string)$str_check, null, true) !== false;\n                }\n                else\n                {\n\t\t\t// Not necessarily perfect but better than nothing...\n\t\t\t$is_text = strpos($str_check, \"\\0\") === false;\n                }\n\n\t\t/*\n\t\t// This former code tends to have false positives..\n\t\tif(function_exists('ctype_print'))\n\t\t{\n\t\t\t$str_check = str_replace(\"\\t\", '', $str_check);\n\t\t\t$str_check = str_replace(\"\\r\", '', $str_check);\n\t\t\t$str_check = str_replace(\"\\n\", '', $str_check);\n\t\t\t$is_text = ctype_print($str_check);\n\t\t}*/\n\n\t\treturn $is_text;\n\t}\n\tpublic static function sanitize($input)\n\t{\n\t\treturn htmlspecialchars($input, ENT_NOQUOTES, 'UTF-8');\n\t}\n\tpublic static function simple($input)\n\t{\n\t\treturn empty($str) ? '' : pts_strings::keep_in_string($input, pts_strings::CHAR_LETTER | pts_strings::CHAR_NUMERIC | pts_strings::CHAR_DASH | pts_strings::CHAR_DECIMAL | pts_strings::CHAR_SPACE | pts_strings::CHAR_UNDERSCORE | pts_strings::CHAR_COMMA | pts_strings::CHAR_AT | pts_strings::CHAR_COLON);\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2015 - 2016, Phoronix Media\n\tCopyright (C) 2015 - 2016, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_local_suites implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'Local Test Suite';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\t$suite_dir = phoromatic_server::phoromatic_account_suite_path($_SESSION['AccountID']);\n\t\t$main = '<h1>Local Suites</h1><p>These are test suites created by you or another account within your group. Suites are an easy collection of test profiles. New suits can be trivially made via the <a href=\"/?build_suite\">build suite</a> page.</p>';\n\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && isset($PATH[0]) && $PATH[0] == 'delete')\n\t\t{\n\t\t\tforeach(explode(',', $PATH[1]) as $id)\n\t\t\t{\n\t\t\t\tif(is_file($suite_dir . $id . '/suite-definition.xml'))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<p><strong>Deleting:</strong> ' . $id . '</p>';\n\t\t\t\t\tunlink($suite_dir . $id . '/suite-definition.xml');\n\t\t\t\t\tpts_file_io::delete($suite_dir . $id, null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$suite_count = 0;\n\t\tforeach(pts_file_io::glob($suite_dir . '*/suite-definition.xml') as $xml_path)\n\t\t{\n\t\t\t$suite_count++;\n\t\t\t$id = basename(dirname($xml_path));\n\t\t\t$test_suite = new pts_test_suite($xml_path);\n\n\t\t\t$main .= '<a name=\"' . $id . '\"></a><h1>' . pts_strings::sanitize($test_suite->get_title()) . ' [' . $id . ']</h1>';\n\t\t\t$main .= '<p><strong>' . pts_strings::sanitize($test_suite->get_maintainer()) . '</strong></p>';\n\t\t\t$main .= '<p><em>' . pts_strings::sanitize($test_suite->get_description()) . '</em></p>';\n\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t{\n\t\t\t\t$main .= '<p><a href=\"?build_suite/' . $id . '\">Edit Suite</a> - <a href=\"?local_suites/delete/' . $id . '\">Delete Suite</a></p>';\n\t\t\t}\n\t\t\t$main .= '<div style=\"max-height: 400px; width: 80%; overflow-y: scroll;\">';\n\t\t\t$test_suite->sort_contained_tests();\n\t\t\tforeach($test_suite->get_contained_test_result_objects() as $tro)\n\t\t\t{\n\t\t\t\t$main .= '<h3>' . $tro->test_profile->get_title() . ' [' . $tro->test_profile->get_identifier() . ']</h3>';\n\t\t\t\t$main .= '<p>' . $tro->get_arguments_description() . '</p>';\n\t\t\t}\n\t\t\t$main .= '</div>';\n\t\t\t$main .= '<hr />';\n\t\t}\n\n\t\tif($suite_count == 0)\n\t\t\t$main .= '<h1>No Test Suites Found</h1>';\n\n\t\techo phoromatic_webui_header_logged_in();\n\t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n\t\techo phoromatic_webui_footer();\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2008 - 2022, Phoronix Media\n\tCopyright (C) 2008 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_schedules implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'Test Schedules';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\t$main = null;\n\t\techo phoromatic_webui_header_logged_in();\n\n\t\tif(!empty($PATH[0]) && is_numeric($PATH[0]))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_schedules WHERE AccountID = :account_id AND ScheduleID = :schedule_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t$result = $stmt->execute();\n\t\t\t$row = $result->fetchArray();\n\n\t\t\tif(empty($row))\n\t\t\t{\n\t\t\t\t$main = '<h1>Test Schedules</h1>';\n\t\t\t\t$main .= '<h3>No Resource Found</h3>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\n\t\t\t\t\tif(isset($_POST['add_to_schedule_select_test']))\n\t\t\t\t\t{\n\t\t\t\t\t\tphoromatic_quit_if_invalid_input_found(array('add_to_schedule_select_test'));\n\t\t\t\t\t\t$name = $_POST['add_to_schedule_select_test'];\n\t\t\t\t\t\t$args = array();\n\t\t\t\t\t\t$args_name = array();\n\n\t\t\t\t\t\tforeach($_POST as $i => $v)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(substr($i, 0, 12) == 'test_option_' && substr($i, -9) != '_selected')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tphoromatic_quit_if_invalid_input_found(array($i, $i . '_selected'));\n\t\t\t\t\t\t\t\tarray_push($args, $v);\n\t\t\t\t\t\t\t\tarray_push($args_name, $_POST[$i . '_selected']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$args_name = implode(' - ', $args_name);\n\t\t\t\t\t\t$args = implode(' ', $args);\n\n\t\t\t\t\t\tif(!empty($name))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_tests (AccountID, ScheduleID, TestProfile, TestArguments, TestDescription) VALUES (:account_id, :schedule_id, :test_profile, :test_arguments, :test_description)');\n\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t\t$stmt->bindValue(':test_profile', $name);\n\t\t\t\t\t\t\t$stmt->bindValue(':test_arguments', $args);\n\t\t\t\t\t\t\t$stmt->bindValue(':test_description', $args_name);\n\t\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\t\tphoromatic_add_activity_stream_event('tests_for_schedule', $PATH[0], 'added');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($_POST['suite_add']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$test_suite = phoromatic_server::find_suite_file($_SESSION['AccountID'], $_POST['suite_add']);\n\t\t\t\t\t\tif(is_file($test_suite))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$test_suite = new pts_test_suite($test_suite);\n\t\t\t\t\t\t\tforeach($test_suite->get_contained_test_result_objects() as $tro)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_tests (AccountID, ScheduleID, TestProfile, TestArguments, TestDescription) VALUES (:account_id, :schedule_id, :test_profile, :test_arguments, :test_description)');\n\t\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t\t\t$stmt->bindValue(':test_profile', $tro->test_profile->get_identifier());\n\t\t\t\t\t\t\t\t$stmt->bindValue(':test_arguments', $tro->get_arguments());\n\t\t\t\t\t\t\t\t$stmt->bindValue(':test_description', $tro->get_arguments_description());\n\t\t\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\t\t\tphoromatic_add_activity_stream_event('tests_for_schedule', $PATH[0], 'added');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($PATH[1]) && $PATH[1] == 'remove' && !empty($PATH[2]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// REMOVE TEST\n\t\t\t\t\t\t$to_remove = explode(PHP_EOL, base64_decode($PATH[2]));\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id AND TestProfile = :test AND TestArguments = :test_args');\n\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':test', $to_remove[0]);\n\t\t\t\t\t\t$stmt->bindValue(':test_args', $to_remove[1]);\n\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\tphoromatic_add_activity_stream_event('tests_for_schedule', $to_remove[0] . ' - ' . $to_remove[1], 'removed');\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($PATH[1]) && $PATH[1] == 'delete-trigger' && !empty($PATH[2]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// REMOVE TRIGGER\n\t\t\t\t\t\t$trigger = base64_decode($PATH[2]);\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_schedules_triggers WHERE AccountID = :account_id AND Trigger = :trigger AND ScheduleID = :schedule_id');\n\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':trigger', $trigger);\n\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\tif($result)\n\t\t\t\t\t\t\t$main .= '<h2 style=\"color: red;\">Trigger Removed: ' . $trigger . '</h2>';\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($PATH[1]) && in_array($PATH[1], array('activate', 'deactivate')))\n\t\t\t\t\t{\n\t\t\t\t\t\tswitch($PATH[1])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'deactivate':\n\t\t\t\t\t\t\t\t$new_state = 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'activate':\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t$new_state = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// REMOVE TEST\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_schedules SET State = :new_state WHERE AccountID = :account_id AND ScheduleID = :schedule_id');\n\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':new_state', $new_state);\n\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\t$row['State'] = $new_state;\n\t\t\t\t\t\tphoromatic_add_activity_stream_event('schedule', $PATH[0], $PATH[1]);\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($_POST['do_manual_test_run']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_triggers (AccountID, ScheduleID, Trigger, TriggeredOn) VALUES (:account_id, :schedule_id, :trigger, :triggered_on)');\n\t\t\t\t\t\t$stmt->bindValue(':account_id',\t$_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':trigger', $_SESSION['UserName'] . ' - Manual Test Run - ' . date('H:i j M Y'));\n\t\t\t\t\t\t$stmt->bindValue(':triggered_on', phoromatic_server::current_time());\n\t\t\t\t\t\t$stmt->execute();\n\t\t\t\t\t\t$main .= '<h2 style=\"color: red;\">Manual Test Run Triggered</h2>';\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($_POST['skip_current_ticket']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_trigger_skips (AccountID, ScheduleID, Trigger) VALUES (:account_id, :schedule_id, :trigger)');\n\t\t\t\t\t\t$stmt->bindValue(':account_id',\t$_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':trigger', date('Y-m-d'));\n\t\t\t\t\t\t$stmt->execute();\n\t\t\t\t\t\t$main .= '<h2 style=\"color: red;\">Current Trigger To Be Ignored</h2>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$main .= '<h1>' . $row['Title'] . '</h1>';\n\t\t\t\t$main .= '<h3>' . $row['Description'] . '</h3>';\n\t\t\t\tswitch($row['RunPriority'])\n\t\t\t\t{\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t$prio = 'Low Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 100:\n\t\t\t\t\t\t$prio = 'Default Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 200:\n\t\t\t\t\t\t$prio = 'High Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t$prio = $row['RunPriority'] . ' Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t$main .= '<p>Priority: ' . $prio . '</p><p>This schedule was last modified on <strong>' . date('j F Y \\a\\t H:i', strtotime($row['LastModifiedOn'])) . '</strong> by <strong>' . $row['LastModifiedBy'] . '</strong>.';\n\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<p><a href=\"?sched/' . $PATH[0] . '\">Edit Schedule</a> | ';\n\n\t\t\t\t\tif($row['State'] == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a href=\"?schedules/' . $PATH[0] . '/deactivate\">Deactivate Schedule</a>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a href=\"?schedules/' . $PATH[0] . '/activate\">Activate Schedule</a>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '</p>';\n\t\t\t\t}\n\n\t\t\t\t$main .= '<hr />';\n\t\t\t\t$main .= '<h2>Schedule</h2>';\n\t\t\t\tif(!empty($row['ActiveOn']))\n\t\t\t\t{\n\t\t\t\t\t$active_days = explode(',', $row['ActiveOn']);\n\t\t\t\t\t$week = array('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');\n\t\t\t\t\tforeach($active_days as $i => &$day)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!isset($week[$day]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tunset($active_days[$i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$day = $week[$day];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch(count($active_days))\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t$day_show = implode(' and ', $active_days);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t$day_show = implode(', ', $active_days);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '<p>This test is scheduled to run every <strong>' . $day_show . '</strong> at <strong>' . str_replace('.', ':', $row['RunAt']) . '</strong>.</p>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$main .= '<p>This test schedule is not currently set to run a pre-defined time-based schedule.</p>';\n\t\t\t\t}\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\t\t\t\t\t$trigger_url = 'http://' . phoromatic_web_socket_server_ip() . '/event.php?type=trigger&user=' . $_SESSION['UserName'] . '&public_key=' . $row['PublicKey'] . '&trigger=XXX';\n\t\t\t\t\t$main .= '<p>This test schedule can be manually triggered to run at any time by calling <strong>' . $trigger_url . '</strong> where <em>XXX</em> is the trigger value to be used (if relevant, such as a time-stamp, Git/SVN commit number or hash, etc). There\\'s also the option of sub-targeting system(s) part of this schedule. One option is appending <em>&sub_target_this_ip</em> if this URL is being called from one of the client test systems to only sub-target the triggered testing on that client, among other options.</p>';\n\t\t\t\t\t$main .= '<p>If you wish to run this test schedule now, click the following button and the schedule will be run on all intended systems at their next earliest possible convenience.</p>';\n\t\t\t\t\t$main .= '<p><form action=\"?schedules/' . $PATH[0] . '\" name=\"manual_run\" method=\"post\">';\n\t\t\t\t\t$main .= '<input type=\"hidden\" name=\"do_manual_test_run\" value=\"1\" /><input type=\"submit\" value=\"Run Test Schedule Now\" onclick=\"return confirm(\\'Run this test schedule now?\\');\" />';\n\t\t\t\t\t$main .= '</form></p>';\n\t\t\t\t\t$main .= '<p><form action=\"?schedules/' . $PATH[0] . '\" name=\"skip_run\" method=\"post\">';\n\t\t\t\t\t$main .= '<input type=\"hidden\" name=\"skip_current_ticket\" value=\"1\" /><input type=\"submit\" value=\"Skip Current Test Ticket\" onclick=\"return confirm(\\'Skip any currently active test ticket on all systems?\\');\" />';\n\t\t\t\t\t$main .= '</form></p>';\n\t\t\t\t}\n\n\t\t\t\t$main .= '<hr />';\n\n\t\t\t\t$contexts = array('SetContextPreInstall' => 'Pre-Install', 'SetContextPostInstall' => 'Post-Install', 'SetContextPreRun' => 'Pre-Test-Run', 'SetContextPostRun' => 'Post-Test-Run');\n\t\t\t\t$scripts = 0;\n\t\t\t\tforeach($contexts as $context => $v)\n\t\t\t\t{\n\t\t\t\t\tif(isset($row[$context]) && !empty($row[$context]) && is_file(phoromatic_server::phoromatic_account_path($_SESSION['AccountID']) . 'context_' . $row[$context]))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scripts++;\n\t\t\t\t\t\t$main .= '<h2>' . $v . ' Context Script</h2>';\n\t\t\t\t\t\t$main .= '<blockquote>' . str_replace(PHP_EOL, '<br />', htmlentities(file_get_contents(phoromatic_server::phoromatic_account_path($_SESSION['AccountID']) . 'context_' . $row[$context]))) . '</blockquote>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(!empty($row['EnvironmentVariables']))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h1>Environment Variables</h1><ol>';\n\n\t\t\t\t\tforeach(explode(';', $row['EnvironmentVariables']) as $env)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<li><strong>' . $env . '</strong></li>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</ol>';\n\t\t\t\t}\n\n\t\t\t\tif($scripts > 0)\n\t\t\t\t\t$main .= '<hr />';\n\n\t\t\t\t$main .= '<h2>Tests To Run</h2>';\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t$result = $stmt->execute();\n\n\t\t\t\t$test_count = 0;\n\t\t\t\t$main .= '<p>';\n\t\t\t\twhile($row = $result->fetchArray())\n\t\t\t\t{\n\t\t\t\t\t$test_count++;\n\t\t\t\t\t$main .= $row['TestProfile'] . ($row['TestDescription'] != null ? ' - <em>' . $row['TestDescription'] . '</em>' : '') . (!PHOROMATIC_USER_IS_VIEWER ? ' <a href=\"?schedules/' . $PATH[0] . '/remove/' . base64_encode(implode(PHP_EOL, array($row['TestProfile'], $row['TestArguments']))) . '\">Remove Test</a>' : null) . '<br />';\n\n\t\t\t\t\t/*\n\t\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER && isset($_REQUEST['make_version_lock_tests']))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(strpos($row['TestProfile'], '.') == false)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$test_profile = new pts_test_profile($row['TestProfile']);\n\t\t\t\t\t\t\t$full_identifier = $test_profile->get_identifier(true);\n\n\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_schedules_tests SET TestProfile = :version_locked_tp WHERE AccountID = :account_id AND ScheduleID = :schedule_id AND TestProfile = :test');\n\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t\t$stmt->bindValue(':test', $row['TestProfile']);\n\t\t\t\t\t\t\t$stmt->bindValue(':version_locked_tp', $full_identifier);\n\t\t\t\t\t\t\t$result2 = $stmt->execute();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t}\n\t\t\t\t$main .= '</p>';\n\n\t\t\t\tif($test_count == 0)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<h3 style=\"text-transform: uppercase;\">No tests have been added yet for this test schedule.</h3>';\n\t\t\t\t}\n\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Add A Test</h2>';\n\t\t\t\t\t$main .= '<form action=\"?schedules/' . $PATH[0] . '\" name=\"add_test\" id=\"add_test\" method=\"post\">';\n\t\t\t\t\t$main .= '<select name=\"add_to_schedule_select_test\" id=\"add_to_schedule_select_test\" onchange=\"phoromatic_schedule_test_details(\\'\\');\">';\n\t\t\t\t\t$dc = pts_client::download_cache_path();\n\t\t\t\t\t$dc_exists = is_file($dc . 'pts-download-cache.json');\n\t\t\t\t\tif($dc_exists)\n\t\t\t\t\t{\n\t\t\t\t\t\t$cache_json = file_get_contents($dc . 'pts-download-cache.json');\n\t\t\t\t\t\t$cache_json = json_decode($cache_json, true);\n\t\t\t\t\t}\n\t\t\t\t\tforeach(array_merge(pts_tests::local_tests(), pts_openbenchmarking::available_tests(false, isset($_COOKIE['list_show_all_test_versions']) && $_COOKIE['list_show_all_test_versions'])) as $test)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(phoromatic_server::read_setting('show_local_tests_only'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$cache_checked = false;\n\t\t\t\t\t\t\tif($dc_exists)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif($cache_json && isset($cache_json['phoronix-test-suite']['cached-tests']))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(in_array($test, $cache_json['phoronix-test-suite']['cached-tests']))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$cache_checked = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!$cache_checked && pts_test_install_request::test_files_available_on_local_system($test) == false)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$main .= '<option value=\"' . $test . '\">' . $test . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</select>';\n\t\t\t\t\t$main .= pts_web_embed::cookie_checkbox_option_helper('list_show_all_test_versions', 'Show all available test profile versions.');\n\t\t\t\t\t$main .= '<p><div id=\"test_details\"></div></p>';\n\t\t\t\t\t$main .= '</form>';\n\n\t\t\t\t\t$local_suites = array();\n\t\t\t\t\tforeach(pts_file_io::glob(phoromatic_server::phoromatic_account_suite_path($_SESSION['AccountID']) . '*/suite-definition.xml') as $xml_path)\n\t\t\t\t\t{\n\t\t\t\t\t\t$id = basename(dirname($xml_path));\n\t\t\t\t\t\t$test_suite = new pts_test_suite($xml_path);\n\t\t\t\t\t\t$local_suites[$test_suite->get_title() . ' - ' . $id] = $id;\n\t\t\t\t\t}\n\t\t\t\t\t$official_suites = pts_test_suites::suites_on_disk(false, true);\n\n\t\t\t\t\t$main .= '<hr /><h2>Add A Suite:</h2>';\n\t\t\t\t\t$main .= '<form action=\"?schedules/' . $PATH[0] . '\" name=\"add_suite\" id=\"add_suite\" method=\"post\">';\n\t\t\t\t\t$main .= '<p><select name=\"suite_to_run\" id=\"suite_to_run_identifier\" onchange=\"phoromatic_show_basic_suite_details(\\'\\');\">';\n\t\t\t\t\tforeach(array_merge($local_suites, $official_suites) as $title => $id)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<option value=\"' . $id . '\">' . $title . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</select></p>';\n\t\t\t\t\t$main .= '<p><div id=\"suite_details\"></div></p>';\n\t\t\t\t\t$main .= '</form>';\n\t\t\t\t}\n\n\t\t\t\t$systems_in_schedule = phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $PATH[0]);\n\t\t\t\tif(!empty($systems_in_schedule))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Systems In Schedule</h2>';\n\t\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<p>To run this schedule on more systems, <a href=\"?sched/' . $PATH[0] . '\">edit the schedule</a>.</p>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\"><ul><li><h1>Systems</h1></li>';\n\n\t\t\t\t\tforeach($systems_in_schedule as $system_id)\n\t\t\t\t\t{\n\t\t\t\t\t\t$row = phoromatic_server::get_system_details($_SESSION['AccountID'], $system_id);\n\t\t\t\t\t\t$main .= '<a href=\"?systems/' . $row['SystemID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . $row['LocalIP'] . '</td><td><strong>' . $row['CurrentTask'] . '</strong></td><td><strong>Last Communication:</strong> ' . date('j F Y H:i', strtotime($row['LastCommunication'])) . '</td></tr></table></li></a>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</ul></div><hr />';\n\t\t\t\t}\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Trigger, TriggeredOn FROM phoromatic_schedules_triggers WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TriggeredOn DESC LIMIT 10');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t$test_result_result = $stmt->execute();\n\t\t\t\t$test_result_row = $test_result_result->fetchArray();\n\n\t\t\t\tif($test_result_row)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\">';\n\t\t\t\t\t$main .= '<ul><li><h1>Recent Triggers For This Schedule</h1></li>';\n\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a onclick=\"\"><li>' . $test_result_row['Trigger'] . '<br /><table><tr><td>' . phoromatic_server::user_friendly_timedate($test_result_row['TriggeredOn']) . '</td><td><a href=\"?schedules/' . $PATH[0] . '/delete-trigger/' . base64_encode($test_result_row['Trigger']) . '\">Remove Trigger</a></td></tr></table></li></a>';\n\n\t\t\t\t\t}\n\t\t\t\t\twhile($test_result_row = $test_result_result->fetchArray());\n\t\t\t\t\t$main .= '</ul>';\n\t\t\t\t\t$main .= '</div>';\n\t\t\t\t}\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY UploadTime DESC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t$test_result_result = $stmt->execute();\n\t\t\t\t$test_result_row = $test_result_result->fetchArray();\n\t\t\t\t$oldest_upload_time = 0;\n\n\t\t\t\tif($test_result_row)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\">';\n\t\t\t\t\t$main .= '<ul><li><h1>Recent Test Results For This Schedule</h1></li>';\n\t\t\t\t\t$results = 0;\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$oldest_upload_time = $test_result_row['UploadTime'];\n\t\t\t\t\t\tif($results > 100)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '<a href=\"?result/' . $test_result_row['PPRID'] . '\"><li>' . $test_result_row['Title'] . '<br /><table><tr><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_server::user_friendly_timedate($test_result_row['UploadTime']) .  '</td></tr></table></li></a>';\n\t\t\t\t\t\t$results++;\n\n\t\t\t\t\t}\n\t\t\t\t\twhile($test_result_row = $test_result_result->fetchArray());\n\t\t\t\t\t$main .= '</ul>';\n\t\t\t\t\t$main .= '</div>';\n\t\t\t\t}\n\t\t\t\t$num_results = phoromatic_results_for_schedule($PATH[0]);\n\n\t\t\t\tif($num_results > 1)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<p>Jump to the latest results from the past: ';\n\t\t\t\t\t$main .= '<select name=\"view_results_from_past\" id=\"view_results_from_past\" onchange=\"phoromatic_jump_to_results_from(\\'' . $PATH[0] . '\\', \\'view_results_from_past\\');\">';\n\t\t\t\t\t$oldest_upload_time = !empty($oldest_upload_time) ? strtotime($oldest_upload_time) : 0;\n\t\t\t\t\t$opts = array(\n\t\t\t\t\t\t'Week' => 7,\n\t\t\t\t\t\t'Three Weeks' => 21,\n\t\t\t\t\t\t'Month' => 30,\n\t\t\t\t\t\t'Quarter' => 90,\n\t\t\t\t\t\t'Six Months' => 180,\n\t\t\t\t\t\t'Year' => 365,\n\t\t\t\t\t\t);\n\t\t\t\t\tforeach($opts as $str_name => $time_offset)\n\t\t\t\t\t{\n\t\t\t\t\t\tif($oldest_upload_time > (time() - (86400 * $time_offset)))\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t$main .= '<option value=\"' . $time_offset . '\">' . $str_name . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '<option value=\"all\">All Results</option>';\n\t\t\t\t\t$main .= '</select>';\n\t\t\t\t\t$main .= '</p><hr />';\n\t\t\t\t}\n\t\t\t\t$main .= '<p><strong>' . $num_results . ' Test Results Available For This Schedule.</strong></p>';\n\t\t\t}\n\n\t\t\techo phoromatic_webui_main($main, phoromatic_webui_right_panel_logged_in());\n\t\t\techo phoromatic_webui_footer();\n\t\t\treturn;\n\t\t}\n\n\n\t\t$main = '<h1>Test Schedules</h1>\n\t\t<p>Test schedules are used for tests that are intended to be run on a recurring basis -- either daily or other defined time period -- or whenever a trigger/event occurs, like a new Git commit to a software repository being tracked. Test schedules can be run on any given system(s)/group(s) and can be later edited.</p>';\n\n\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t{\n\t\t\t$main .= '\n\t\t\t<hr />\n\t\t\t<h2>Create A Schedule</h2>\n\t\t\t<p><a href=\"?sched\">Create a schedule</a> followed by adding tests/suites to run for that schedule on the selected systems.</p>';\n\t\t}\n\n\t\t$main .= '<hr /><h2>Current Schedules</h2>';\n\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n\t\t\t<ul>\n\t\t\t<li><h1>Active Test Schedules</h1></li>';\n\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, Description, RunTargetSystems, RunTargetGroups, RunAt, ActiveOn FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 ORDER BY Title ASC');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\n\t\tif($row == false)\n\t\t{\n\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Schedules Found</li>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\t$stmt_tests = phoromatic_server::$db->prepare('SELECT COUNT(*) AS TestCount FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n\t\t\t\t$stmt_tests->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt_tests->bindValue(':schedule_id', $row['ScheduleID']);\n\t\t\t\t$result_tests = $stmt_tests->execute();\n\t\t\t\t$row_tests = $result_tests->fetchArray();\n\t\t\t\t$test_count = !empty($row_tests) ? $row_tests['TestCount'] : 0;\n\n\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler($test_count, 'Test') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . ' Total</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID'], 'TODAY'), 'Result') . ' Today</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n\t\t\t}\n\t\t\twhile($row = $result->fetchArray());\n\t\t}\n\n\t\t$main .= '</ul>\n\t\t</div>';\n\n\t\t$main .= '<hr /><h2>Schedule Overview</h2>';\n\t\t$week = array('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');\n\n\t\tforeach($week as $i => $day)\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, RunAt, RunTargetGroups, RunTargetSystems FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 AND ActiveOn LIKE :active_on ORDER BY RunAt,ActiveOn,Title ASC');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':active_on', '%' . $i . '%');\n\t\t\t$result = $stmt->execute();\n\t\t\t$has_matched = false;\n\t\t\twhile($row = $result->fetchArray())\n\t\t\t{\n\t\t\t\tif(!$has_matched)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<h3>' . $day . '</h3>' . PHP_EOL . '<p>';\n\t\t\t\t\t$has_matched = true;\n\t\t\t\t}\n\t\t\t\t$main .= '<em>' . $row['RunAt'] . '</em> <a href=\"?schedules/' . $row['ScheduleID'] . '\">' . $row['Title'] . '</a>';\n\t\t\t\t//$main .= $row['RunTargetSystems'] . ' ' . $row['RunTargetGroups'];\n\t\t\t\t$main .= '<br />';\n\t\t\t}\n\n\t\t\tif($has_matched)\n\t\t\t\t$main .= '</p>' . PHP_EOL;\n\t\t}\n\n\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n\t\t\t\t<ul>\n\t\t\t\t<li><h1>Deactivated Test Schedules</h1></li>';\n\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, Description, RunTargetSystems, RunTargetGroups, RunAt, ActiveOn FROM phoromatic_schedules WHERE AccountID = :account_id AND State < 1 ORDER BY Title ASC');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\n\t\tif($row == false)\n\t\t{\n\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Schedules Found</li>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\t$stmt_tests = phoromatic_server::$db->prepare('SELECT COUNT(*) AS TestCount FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n\t\t\t\t$stmt_tests->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt_tests->bindValue(':schedule_id', $row['ScheduleID']);\n\t\t\t\t$result_tests = $stmt_tests->execute();\n\t\t\t\t$row_tests = $result_tests->fetchArray();\n\t\t\t\t$test_count = !empty($row_tests) ? $row_tests['TestCount'] : 0;\n\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler($test_count, 'Test') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . ' Total</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID'], 'TODAY'), 'Result') . ' Today</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n\t\t\t}\n\t\t\twhile($row = $result->fetchArray());\n\t\t}\n\n\t\t$main .= '</ul>\n\t\t</div>';\n\n\t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n\t\techo phoromatic_webui_footer();\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2014 - 2022, Phoronix Media\n\tCopyright (C) 2014 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_users implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'Account Administrator';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\tif($_SESSION['AdminLevel'] > 3)\n\t\t{\n\t\t\techo phoromatic_error_page('Unauthorized Access', 'You aren\\'t an account administrator!');\n\t\t\treturn;\n\t\t}\n\n\t\tif(isset($_POST['group_name']))\n\t\t{\n\t\t\tphoromatic_quit_if_invalid_input_found(array('group_name'));\n\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_accounts SET GroupName = :group_name WHERE AccountID = :account_id');\n\t\t\t$stmt->bindValue(':group_name', pts_strings::simple($_POST['group_name']));\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$result = $stmt->execute();\n\t\t}\n\t\tif(isset($_POST['username']) && isset($_POST['password']) && isset($_POST['confirm_password']) && isset($_POST['email']))\n\t\t{\n\t\t\tphoromatic_quit_if_invalid_input_found(array('username', 'email'));\n\t\t\t// REGISTER NEW USER\n\t\t\tif(strlen($_POST['username']) < 4 || strpos($_POST['username'], ' ') !== false)\n\t\t\t{\n\t\t\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied username is at least four characters long and contains no spaces.');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(in_array(strtolower($_POST['username']), array('admin', 'administrator')))\n\t\t\t{\n\t\t\t\tphoromatic_error_page('Oops!', $_POST['username'] . ' is a reserved and common username that may be used for other purposes, please make a different selection.');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(strlen($_POST['password']) < 6)\n\t\t\t{\n\t\t\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied password is at least six characters long.');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif($_POST['password'] != $_POST['confirm_password'])\n\t\t\t{\n\t\t\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied password matches the password confirmation.');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif($_POST['email'] == null || filter_var($_POST['email'], FILTER_VALIDATE_EMAIL) == false)\n\t\t\t{\n\t\t\t\tphoromatic_error_page('Oops!', 'Please enter a valid email address.');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$valid_user_name_chars = '1234567890-_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t\t\tfor($i = 0; $i < count($_POST['username']); $i++)\n\t\t\t{\n\t\t\t\tif(strpos($valid_user_name_chars, substr($_POST['username'], $i, 1)) === false)\n\t\t\t\t{\n\t\t\t\t\tphoromatic_error_page('Oops!', 'Please go back and ensure a valid user-name. The character <em>' . substr($_POST['username'], $i, 1) . '</em> is not allowed.');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$matching_users = phoromatic_server::$db->querySingle('SELECT UserName FROM phoromatic_users WHERE UserName = \\'' . SQLite3::escapeString($_POST['username']) . '\\'');\n\t\t\tif(!empty($matching_users))\n\t\t\t{\n\t\t\t\tphoromatic_error_page('Oops!', 'The user-name is already taken.');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif(!isset($_POST['admin_level']) || $_POST['admin_level'] == 1 || !is_numeric($_POST['admin_level']))\n\t\t\t{\n\t\t\t\tphoromatic_error_page('Oops!', 'Invalid administration level.');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Salt FROM phoromatic_accounts WHERE AccountID = :account_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$result = $stmt->execute();\n\t\t\t$row = $result->fetchArray();\n\t\t\t$account_salt = $row['Salt'];\n\t\t\t$user_id = pts_strings::random_characters(4, true);\n\t\t\t$salted_password = hash('sha256', $account_salt . $_POST['password']);\n\n\t\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' created a new account: ' . $user_id . ' - ' . $_SESSION['AccountID']);\n\n\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_users (UserID, AccountID, UserName, Email, Password, CreatedOn, LastIP, AdminLevel) VALUES (:user_id, :account_id, :user_name, :email, :password, :current_time, :last_ip, :admin_level)');\n\t\t\t$stmt->bindValue(':user_id', $user_id);\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':user_name', $_POST['username']);\n\t\t\t$stmt->bindValue(':email', $_POST['email']);\n\t\t\t$stmt->bindValue(':password', $salted_password);\n\t\t\t$stmt->bindValue(':last_ip', $_SERVER['REMOTE_ADDR']);\n\t\t\t$stmt->bindValue(':current_time', phoromatic_server::current_time());\n\t\t\t$stmt->bindValue(':admin_level', $_POST['admin_level']);\n\t\t\t$result = $stmt->execute();\n\n\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_user_settings (UserID, AccountID) VALUES (:user_id, :account_id)');\n\t\t\t$stmt->bindValue(':user_id', $user_id);\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$result = $stmt->execute();\n\n\t\t\tphoromatic_add_activity_stream_event('users', $_POST['username'], 'added');\n\t\t}\n\t\tif($_SESSION['AdminLevel'] == 1 && isset($_POST['update_user_levels']))\n\t\t{\n\t\t\tforeach(explode(',', $_POST['update_user_levels']) as $user_id)\n\t\t\t{\n\t\t\t\tif(isset($_POST['admin_level_' . $user_id]) && is_numeric($_POST['admin_level_' . $user_id]))\n\t\t\t\t{\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_users SET AdminLevel = :admin_level WHERE AccountID = :account_id AND UserID = :user_id');\n\t\t\t\t\t$stmt->bindValue(':admin_level', $_POST['admin_level_' . $user_id]);\n\t\t\t\t\t$stmt->bindValue(':user_id', $user_id);\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$main = '<h2>Users</h2>\n\t\t\t<p>Users associated with this account. Phoromatic users can be one of several tiers with varying privileges:</p>\n\t\t\t<ol>\n\t\t\t\t<li><strong>Group Administrator:</strong> The user with full control over the account, the one who originally signed up for the Phoromatic account.</li>\n\t\t\t\t<li><strong>Administrator:</strong> Additional users created by the group administrator with the same access rights as the group administrator.</li>\n\t\t\t\t<li><strong>Power Users:</strong> Additional users created by the group administrator with read/write/modify access to all standard Phoromatic functionality, aside from being able to create additional users.</li>\n\t\t\t\t<li><strong>Viewer:</strong> Additional users created by the group administrator that have access to view data but not to create new schedules, alter system settings, etc.</li>\n\t\t\t</ol>\n\t\t\t<div class=\"pts_phoromatic_info_box_area\">\n\n\t\t\t\t<div style=\"margin: 0 1%;\"><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"edit_user\" id=\"edit_user\" method=\"post\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><h1>All Users</h1></li>';\n\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_users WHERE AccountID = :account_id ORDER BY UserName ASC');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t$row = $result->fetchArray();\n\t\t\t\t\t$user_ids = array();\n\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\tswitch($row['AdminLevel'])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t$level = 'Group Administrator';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t$level = 'Administrator';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t$level = 'Power User';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 10:\n\t\t\t\t\t\t\t\t$level = 'Viewer';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tif($row['AdminLevel'] < 1)\n\t\t\t\t\t\t\t\t\t$level = 'Disabled';\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t$level = 'Unknown';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$main .= '<a href=\"#\"><li>' . $row['UserName'] . '<br /><table><tr><td>';\n\n\t\t\t\t\t\tif($row['AdminLevel'] == 1 || $_SESSION['AdminLevel'] != 1)\n\t\t\t\t\t\t\t$main .= '<strong>' . $level . '</strong>';\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$main .= '<select name=\"admin_level_' . $row['UserID'] . '\">';\n\n\t\t\t\t\t\t\tforeach(array(($row['AdminLevel'] * -1) => 'Disabled', 2 => 'Administrator', 3 => 'Power User', 10 => 'Viewer') as $level_id => $level_string)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$main .= '<option value=\"' . $level_id . '\"' . ($row['AdminLevel'] == $level_id ? ' selected=\"selected\"' : null) . '>' . $level_string . '</option>';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$main .= '</select>';\n\t\t\t\t\t\t\tarray_push($user_ids, $row['UserID']);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '</td><td>Last Login: ' . (empty($row['LastLogin']) ? 'Never' : date('j F Y H:i', strtotime($row['LastLogin']))) . '</td></tr></table></li></a>';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\n\n\t\t\t$main .= '</ul> &nbsp; <input type=\"hidden\" name=\"update_user_levels\" value=\"' . implode(',', $user_ids) . '\" /> <input name=\"submit\" value=\"Update User Levels\" type=\"submit\" /></form>\n\t\t\t\t</div>\n\t\t\t</div>';\n\n\t\t$main .= '<hr /><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"add_user\" id=\"add_user\" method=\"post\" onsubmit=\"return validate_new_user();\"><h2>Create Additional Account</h2>\n\t\t\t<p>Administrators can create extra accounts to be associated with this account\\'s systems, schedules, and test data.</p>\n\t\t\t<h3>User</h3>\n\t\t\t<p><input type=\"text\" name=\"username\" /></p>\n\t\t\t<h3>Password</h3>\n\t\t\t<p><input type=\"password\" name=\"password\" /></p>\n\t\t\t<h3>Confirm Password</h3>\n\t\t\t<p><input type=\"password\" name=\"confirm_password\" /></p>\n\t\t\t<h3>Email</h3>\n\t\t\t<p><input type=\"text\" name=\"email\" /></p>\n\t\t\t<h3>Administration Level</h3>\n\t\t\t<p><select name=\"admin_level\">';\n\n\t\tif($_SESSION['AdminLevel'] == 1)\n\t\t\t$main .= '<option value=\"2\">Administrator</option>';\n\n\t\tif($_SESSION['AdminLevel'] <= 2)\n\t\t\t$main .= '<option value=\"3\">Power User</option>';\n\t\tif($_SESSION['AdminLevel'] <= 3)\n\t\t\t$main .= '<option value=\"10\">Viewer</option>';\n\n\t\t$main .= '\n\t\t\t</select></p>\n\t\t\t<p><input name=\"submit\" value=\"Add User\" type=\"submit\" /></p>\n\t\t\t</form>';\n\n\t\t$group_name = phoromatic_server::account_id_to_group_name($_SESSION['AccountID']);\n\t\t$main .= '<hr /><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"group_name\" id=\"group_name\" method=\"post\"><h2>Group Name</h2>\n\t\t\t<p>A group name is an alternative, user-facing name for this set of accounts. The group name feature is primarily useful for being able to better distinguish results between groups when sharing of data within a large organization, etc. The group name is showed next to test results when viewing results from multiple groups/accounts.</p>\n\t\t\t<h3>Group Name</h3>\n\t\t\t<p><input type=\"text\" name=\"group_name\" value=\"' . $group_name . '\" /></p>\n\t\t\t<p><input name=\"submit\" value=\"Update Group Name\" type=\"submit\" /></p>\n\t\t\t</form>';\n\n\t\techo phoromatic_webui_header_logged_in();\n\t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n\t\techo phoromatic_webui_footer();\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2008 - 2022, Phoronix Media\n\tCopyright (C) 2008 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_welcome implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'Welcome';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\t$account_creation_string = phoromatic_server::read_setting('account_creation_alt');\n\t\t$account_creation_enabled = $account_creation_string == null;\n\n\t\tif($account_creation_enabled && isset($_POST['register_username']) && isset($_POST['register_password']) && isset($_POST['register_password_confirm']) && isset($_POST['register_email']))\n\t\t{\n\t\t\tphoromatic_quit_if_invalid_input_found(array('register_username', 'register_email'));\n\t\t\t$new_account = create_new_phoromatic_account($_POST['register_username'], $_POST['register_password'], $_POST['register_password_confirm'], $_POST['register_email'], (isset($_POST['seed_accountid']) ? $_POST['seed_accountid'] : null));\n\n\t\t\tif($new_account)\n\t\t\t{\n\t\t\t\techo phoromatic_webui_header(array('Account Created'), '');\n\t\t\t\t$box = '<h1>Account Created</h1>\n\t\t\t\t<p>Your account has been created. You may now log-in to begin utilizing the Phoronix Test Suite\\'s Phoromatic.</p>\n\t\t\t\t<form name=\"login_form\" id=\"login_form\" action=\"?login\" method=\"post\" onsubmit=\"return phoromatic_login(this);\">\n\t\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">User:</div> <input type=\"text\" name=\"username\" /></p>\n\t\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">Password:</div> <input type=\"password\" name=\"password\" /></p>\n\t\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">&nbsp;</div> <input type=\"submit\" value=\"Submit\" /></p>\n\t\t\t\t</form>';\n\t\t\t\techo phoromatic_webui_box($box);\n\t\t\t\techo phoromatic_webui_footer();\n\t\t\t}\n\t\t}\n\t\telse if(isset($_POST['username']) && isset($_POST['password']) && strtolower($_POST['username']) == 'rootadmin')\n\t\t{\n\t\t\tphoromatic_quit_if_invalid_input_found(array('username'));\n\t\t\t$admin_pw = phoromatic_server::read_setting('root_admin_pw');\n\t\t\tif(empty($admin_pw))\n\t\t\t{\n\t\t\t\techo phoromatic_webui_header(array('Action Required'), '');\n\t\t\t\t$box = '<h1>Root Admin Password Not Set</h1>\n\t\t\t\t<p>The root admin password has not yet been set for this system. It can be set by running on the system: <strong>phoronix-test-suite phoromatic.set-root-admin-password</strong>.</p>';\n\t\t\t\techo phoromatic_webui_box($box);\n\t\t\t\techo phoromatic_webui_footer();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if(hash('sha256', 'PTS' . $_POST['password']) != $admin_pw)\n\t\t\t{\n\t\t\t\techo phoromatic_webui_header(array('Invalid Password'), '');\n\t\t\t\t$box = '<h1>Root Admin Password Incorrect</h1>\n\t\t\t\t<p>The root admin password is incorrect.</p>';\n\t\t\t\techo phoromatic_webui_box($box);\n\t\t\t\techo phoromatic_webui_footer();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsession_regenerate_id();\n\t\t\t\t$_SESSION['UserID'] = 0;\n\t\t\t\t$_SESSION['UserName'] = 'RootAdmin';\n\t\t\t\t$_SESSION['AccountID'] = 0;\n\t\t\t\t$_SESSION['AdminLevel'] = -40;\n\t\t\t\t$_SESSION['CreatedOn'] = null;\n\t\t\t\t$_SESSION['CoreVersionOnSignOn'] = PTS_CORE_VERSION;\n\t\t\t\tsession_write_close();\n\t\t\t\theader('Location: /?admin');\n\t\t\t}\n\t\t}\n\t\telse if(isset($_POST['username']) && isset($_POST['password']))\n\t\t{\n\t\t\tphoromatic_quit_if_invalid_input_found(array('username'));\n\t\t\t$matching_user = phoromatic_server::$db->querySingle('SELECT UserName, Password, AccountID, UserID, AdminLevel, CreatedOn FROM phoromatic_users WHERE UserName = \\'' . SQLite3::escapeString($_POST['username']) . '\\'', true);\n\t\t\tif(!empty($matching_user))\n\t\t\t{\n\t\t\t\t$user_id = $matching_user['UserID'];\n\t\t\t\t$created_on = $matching_user['CreatedOn'];\n\t\t\t\t$user = $matching_user['UserName'];\n\t\t\t\t$hashed_password = $matching_user['Password'];\n\t\t\t\t$account_id = $matching_user['AccountID'];\n\t\t\t\t$admin_level = $matching_user['AdminLevel'];\n\n\t\t\t\tif($admin_level < 1)\n\t\t\t\t{\n\t\t\t\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' attempted to log-in to a disabled account: ' . $_POST['username']);\n\t\t\t\t\tphoromatic_error_page('Disabled Account', 'The log-in is not possible as this account has been disabled.');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif($user == $_POST['username'])\n\t\t\t\t{\n\t\t\t\t\t$account_salt = phoromatic_server::$db->querySingle('SELECT Salt FROM phoromatic_accounts WHERE AccountID = \\'' . $account_id . '\\'');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$account_salt = null;\n\t\t\t\t}\n\n\t\t\t\tif($account_salt != null && hash('sha256', $account_salt . $_POST['password']) == $hashed_password)\n\t\t\t\t{\n\t\t\t\t\tsession_regenerate_id();\n\t\t\t\t\t$_SESSION['UserID'] = $user_id;\n\t\t\t\t\t$_SESSION['UserName'] = $user;\n\t\t\t\t\t$_SESSION['AccountID'] = $account_id;\n\t\t\t\t\t$_SESSION['AdminLevel'] = $admin_level;\n\t\t\t\t\t$_SESSION['CreatedOn'] = $created_on;\n\t\t\t\t\t$_SESSION['CoreVersionOnSignOn'] = PTS_CORE_VERSION;\n\t\t\t\t\t$account_salt = phoromatic_server::$db->exec('UPDATE phoromatic_users SET LastIP = \\'' . $_SERVER['REMOTE_ADDR'] . '\\', LastLogin = \\'' . phoromatic_server::current_time() . '\\' WHERE UserName = \"' . $matching_user['UserName'] . '\"');\n\t\t\t\t\tsession_write_close();\n\n\t\t\t\t\tpts_file_io::mkdir(phoromatic_server::phoromatic_account_path($account_id));\n\t\t\t\t\tpts_file_io::mkdir(phoromatic_server::phoromatic_account_result_path($account_id));\n\t\t\t\t\tpts_file_io::mkdir(phoromatic_server::phoromatic_account_system_path($account_id));\n\t\t\t\t\tpts_file_io::mkdir(phoromatic_server::phoromatic_account_suite_path($account_id));\n\n\t\t\t\t\techo phoromatic_webui_header(array('Welcome, ' . $user), '');\n\t\t\t\t\t$box = '<h1>Log-In Successful</h1>\n\t\t\t\t\t<p><strong>' . $user . '</strong>, we are now redirecting you to your account portal. If you are not redirected within a few seconds, please <a href=\"?main\">click here</a>.<script type=\"text/javascript\">window.location.href = \"?main\";</script></p>';\n\t\t\t\t\techo phoromatic_webui_box($box);\n\t\t\t\t\techo phoromatic_webui_footer();\n\t\t\t\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' successfully logged in as user: ' . $user);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' failed a log-in attempt as: ' . $_POST['username']);\n\t\t\t\t\tphoromatic_error_page('Invalid Information', 'The user-name or password did not match our records.');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' failed a log-in attempt as: ' . $_POST['username']);\n\t\t\t\tphoromatic_error_page('Invalid Information', 'The user-name was not found within our system.');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\techo phoromatic_webui_header(array(), '');\n\n\t\t\t$box = '<h1>Welcome</h1>\n\t\t\t<p>You must log-in to your Phoromatic account or create an account to access this service.</p>\n\t\t\t<p>Phoromatic is the remote management and test orchestration system for the <a href=\"https://github.com/phoronix-test-suite/phoronix-test-suite\">Phoronix Test Suite</a>. Phoromatic allows the automatic scheduling of tests, remote installation of new tests, and the management of multiple test systems over a network (LAN/WAN) all through an intuitive, easy-to-use web interface. Tests can be scheduled to automatically run on a routine basis across multiple test systems. The test results are then available from this centralized location along with other features for interacting with Phoronix Test Suite systems.</p>\n\t\t\t<p>Phoromatic makes it very easy to provide for automated scheduling of tests on multiple systems, is extremely extensible, allows various remote testing possibilities, makes it very trivial to manage multiple systems, and centralizes result management within an organization.</p>\n\t\t\t<p id=\"features_link\"><a onclick=\"javascript:document.getElementById(\\'features\\').style.display = \\'block\\'; document.getElementById(\\'features_link\\').style.display = \\'none\\';\">Learn more about Phoromatic</a>.</p>\n\t\t\t<div style=\"display: none;\" id=\"features\">\n\n<h1>Phoromatic Benefits</h1>\n<h3>Automated Scheduling</h3>\n<p>Whether it be every evening at 6:00PM, once every Thursday at 10:00AM or somewhere in between, Phoromatic can schedule tests to be run at user-defined intervals. The testing schedules can be updated through Phoromatic web interface. After the test(s) have run, the results will be immediately uploaded to Phoromatic. Phoromatic also allows external &quot;triggers&quot; that can be initiated via a URL if wanting to automatically initiate testing when a Git commit occurs or some other external event.</p>\n<h3>Extensible</h3>\n<p>Any test profile or test suite that is compliant with the Phoronix Test Suite specifications will work with Phoromatic. Phoromatic is able to leverage the hundreds of test profiles and dozens of test suites currently in the Phoronix Test Suite via <a href=\"http://openbenchmarking.org/\">OpenBenchmarking.org</a>, along with any custom/proprietary test profiles you or your company utilize.</p>\n<h3>Remote Testing</h3>\n<p>Once the test system is setup, all testing and management of that system can be done remotely. There is no need to excute Phoronix Test Suite commands locally using the GUI or command line version, but instead nearly all of the same features are accessible from the Phoromatic interface. The Phoromatic Server can also control waking systems via WoL when tests are issued, shutting down systems when idling, and other management tasks.</p>\n<h3>Multi-System Support</h3>\n<p>A single Phoromatic account is able to manage multiple test systems running the Phoronix Test Suite. Phoromatic supports grouping together test systems, tagging, and other features to support effectively managing many test systems. From the Phoromatic interface, installed system hardware and software from a given system can also be viewed. Systems can be spread across a private LAN or spread across several locations via the Internet.</p>\n<h3>Turn-Key Deployment</h3>\n<p>No additional software needs to be installed to support Phoromatic; all that is needed is the Phoronix Test Suite and its dependencies. New test systems can easily be synced with a given Phoromatic account by running a single command from the Phoronix Test Suite client.</p>\n<p>The Phoromatic Server can be quickly and easily deployed with the only new presented dependency compared to Phoronix Test Suite clients is on PHP SQLite support. With modern versions of PHP-CLI, the Phoromatic Server is completely self-hosting for its web service.</p>\n<p>Phoronix Test Suite client systems with Avahi / zero-conf networking support can automatically find Phoromatic Servers on their LAN for connecting to accounts, obtaining download caches, and utilizing other Phoromatic functionality.</p>\n<h3>Result Management</h3>\n<p>Test results are automatically uploaded to the Phoromatic account and remain private unless you opt to upload them to OpenBenchmarking.org for public reference. From the Phoromatic interface, results from multiple test systems can easily be compared and multiple results from the same systems can be used to track performance over time. There are also options to look at the statistical significance of the results and other features to efficienctly and effectively analyze the system performance.</p>\n<h3>Multi-User Support</h3>\n<p>If deploying a Phoromatic Server within an organization, there is also support for allowing multiple user accounts to be associated with the same data and other systems.</p>\n<h3>Local Caching</h3>\n<p>The Phoromatic Server automatically allows for caching of Phoronix Test Suite files and OpenBenchmarking.org test profile/suite caches. This allows for the Phoronix Test Suite to be more easily deployed within organizations where the systems otherwise do not have Internet access for obtaining the necessary support files.</p>\n<h3>Dashboard</h3>\n<p>The Phoromatic dashboard allows viewing the state of all connected systems in one concise view from seeing their test state to hardware/software details, estimated time to completion, and other system information.</p>\n<h3>E-Mail Notifications</h3>\n<p>The Phoromatic Server is able to send out notifications of new results being available, systems that appear hung, immediate alerts of system errors, and other important information so that it can be dealt with in a timely manner (assuming your Phoromatic server has a working mail server).</p>\n<h1>Getting Started</h1>\n<p>Getting started can be as easy as <strong>phoronix-test-suite start-phoromatic-server</strong> to deploy a Phoromatic Server with HTTP access for the UI. Setting up client systems can be as simple as <strong>phoronix-test-suite phoromatic.connect</strong> and there are systemd files available for easy access to. <strong>More details can be found via the <a href=\"https://github.com/phoronix-test-suite/phoronix-test-suite/blob/master/documentation/phoronix-test-suite.md#phoronix-test-suite-phoromatic\"><strong>Phoronix Test Suite documentation</strong></a>.</strong></p>\n<p>The Phoronix Test Suite source-code is <a href=\"https://github.com/phoronix-test-suite/phoronix-test-suite/\">hosted via GitHub</a>.</p>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<h1>Log-In</h1>\n\t\t\t<form name=\"login_form\" id=\"login_form\" action=\"?login\" method=\"post\" onsubmit=\"return phoromatic_login(this);\">\n\t\t\t<ul class=\"r_form_wrapper\">\n\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t<label for=\"u_username\">Username</label>\n\t\t\t\t\t<input type=\"text\" name=\"username\" id=\"u_username\" required/>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t<label for=\"u_password\">Password</label>\n\t\t\t\t\t<input type=\"password\" name=\"password\" id=\"u_password\" required/>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t<input type=\"submit\" value=\"Submit\" />\n\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</form>\n\t\t\t<hr />\n\t\t\t<h1>Register</h1>';\n\n\t\t\tif(!empty($account_creation_string))\n\t\t\t{\n\t\t\t\t$box .= '<p>' . $account_creation_string . '</p>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\n\t\t\t\t$box .= '<p id=\"register_link\"><a onclick=\"javascript:document.getElementById(\\'register\\').style.display = \\'block\\'; document.getElementById(\\'register_link\\').style.display = \\'none\\';\">Create A New Account</a></p>\n\t\t\t<div style=\"display: none;\" id=\"register\">\n\n\n\t\t\t\t\t<p>To create a new account for this Phoromatic server, simply fill out the form below. Phoromatic also allows multi-user accounts. If wishing to be added to an existing Phoromatic account as a separate user, contact the appropriate party and request said access. Within a Phoromatic account with appropriate credentials, additional sub-accounts can be created/managed from the &quot;Users&quot; page.</p>';\n\t\t\t\t\t$box .= '<form name=\"register_form\" id=\"register_form\" action=\"?register\" method=\"post\" onsubmit=\"return phoromatic_initial_registration(this);\">\n\n\t\t\t\t\t<ul class=\"r_form_wrapper\">\n\t\t\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t\t\t<label for=\"r_username\">Username</label>\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"seed_accountid\" value=\"' . (isset($_GET['seed_accountid']) ? $_GET['seed_accountid'] : null) . '\" />\n\t\t\t\t\t\t\t<input type=\"text\" name=\"register_username\" id=\"r_username\" required/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t\t\t<label for=\"r_password\">Password</label>\n\t\t\t\t\t\t\t<input type=\"password\" name=\"register_password\" id=\"r_password\" required/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t\t\t<label for=\"c_password\">Confirm Password</label>\n\t\t\t\t\t\t\t<input type=\"password\" name=\"register_password_confirm\" id=\"c_password\" required/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t\t\t<label for=\"r_email\">Email Address</label>\n\t\t\t\t\t\t\t<input type=\"email\" name=\"register_email\" id=\"r_email\" required/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t\t\t<input type=\"submit\" value=\"Create Account\" />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\n\t\t\t\t\t</form></div>';\n\t\t\t}\n\t\t\t$box .= '<hr />\n\t\t\t<h1>View Public Results</h1>\n\t\t\t<p>For accounts that opted to share their test results publicly, you can directly <a href=\"public.php\">view the public test results</a>.</p><hr />';\n\n\t\t\techo phoromatic_webui_box($box);\n\t\t\techo phoromatic_webui_footer();\n\t\t}\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2013 - 2022, Phoronix Media\n\tCopyright (C) 2013 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\ndefine('PHOROMATIC_SERVER_WEB_INTERFACE', true);\ndefine('PAGE_LOAD_START_TIME', microtime(true));\n\nfunction phoromatic_quit_if_invalid_input_found($input_keys = null)\n{\n\tif(empty($input_keys))\n\t{\n\t\t// Check them all if not being selective about what keys to check\n\t\t$input_keys = array_keys($_REQUEST);\n\t}\n\t// backup as to sanitization and stripping elsewhere, safeguard namely check for things like < for fields that shouldn't have it\n\t// plus a few simple backups as safeguards for words that really have no legit relevance within Phoromatic...\n\n\tforeach(array('<', 'document.write', '../', 'onerror', 'onload', 'alert(') as $invalid_string)\n\t{\n\t\tforeach($input_keys as $key)\n\t\t{\n\t\t\tif(isset($_REQUEST[$key]) && !empty($_REQUEST[$key]))\n\t\t\t{\n\t\t\t\tforeach(pts_arrays::to_array($_REQUEST[$key]) as $val_to_check)\n\t\t\t\t{\n\t\t\t\t\tif(stripos($val_to_check, $invalid_string) !== false)\n\t\t\t\t\t{\n\t\t\t\t\t\techo '<strong>Exited due to invalid input ( ' . $invalid_string . ') attempted:</strong> ' . htmlspecialchars($val_to_check);\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nfunction phoromatic_init_web_page_setup()\n{\n\tif(session_save_path() == null || !is_writable(session_save_path()))\n\t{\n\t\t// This is needed since on at least EL6 by default there is no session_save_path set\n\t\tif(is_writable('/var/lib/php') && is_dir('/var/lib/php'))\n\t\t{\n\t\t\tsession_save_path('/var/lib/php');\n\t\t}\n\t\telse if(is_writable('/var/lib/php5') && is_dir('/var/lib/php5'))\n\t\t{\n\t\t\tsession_save_path('/var/lib/php5');\n\t\t}\n\t\telse if(is_writable('/tmp'))\n\t\t{\n\t\t\tsession_save_path('/tmp');\n\t\t}\n\t\telse if(is_writable('.'))\n\t\t{\n\t\t\tsession_save_path('.');\n\t\t}\n\t}\n\n\tdefine('PHOROMATIC_SERVER', true);\n\tif(defined('PTS_IS_DEV_BUILD') && PTS_IS_DEV_BUILD)\n\t{\n\t\terror_reporting(E_ALL);\n\t}\n\tsession_start();\n\n\tdefine('PTS_MODE', 'WEB_CLIENT');\n\tdefine('PTS_AUTO_LOAD_OBJECTS', true);\n\tdefine('PHOROMATIC_USER_IS_VIEWER', !isset($_SESSION['AdminLevel']) || $_SESSION['AdminLevel'] >= 10 || $_SESSION['AdminLevel'] < 1 ? true : false);\n\n\tinclude('../../pts-core.php');\n\tpts_core::init();\n}\nfunction phoromatic_webui_header($left_items, $right = null)\n{\n\t$ret = PHP_EOL . '<div id=\"pts_phoromatic_top_header\">\n\t<ul>\n\t<li><a href=\"?\"><img style=\"vertical-align: middle;\" class=\"img_logo_pg\" src=\"images/phoromatic_logo.svg\" /></a>';\n\n\tif(isset($_SESSION['AdminLevel']) &&$_SESSION['AdminLevel'] > 0 && isset($_SESSION['AccountID']) && !empty($_SESSION['AccountID']))\n\t{\n\t\t$ret .= '<ul id=\"pts_phoromatic_info\">';\n\t\t$ret .= '<li><a class=\"ph_date\" href=\"#\">' . date('H:i T - j F') . '</a></li>';\n\t\t$group_name = phoromatic_server::account_id_to_group_name($_SESSION['AccountID']);\n\t\tif($group_name != null)\n\t\t{\n\t\t\t$ret .= '<li><a href=\"#\">' . $group_name . '</a></li>';\n\t\t}\n\t\t$ret .= '</ul>';\n\t}\n\t$ret .= '</li>';\n\n\t//$ret .= '<ul>';\n\tforeach($left_items as $i => $item)\n\t{\n\t\tif(is_array($item))\n\t\t{\n\t\t\t$ret .= '<li>' . $i;\n\n\t\t\tif(!empty($item))\n\t\t\t{\n\t\t\t\t$ret .= '<ul>';\n\t\t\t\tforeach($item as $sub_item)\n\t\t\t\t{\n\t\t\t\t\t$ret .= '<li>' . $sub_item . '</li>';\n\t\t\t\t}\n\t\t\t\t$ret .= '</ul>';\n\t\t\t}\n\t\t\t$ret .= '</li>' . PHP_EOL;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$ret .= '<li>' . $item . '</li>' . PHP_EOL;\n\t\t}\n\t}\n\t$ret .= '<li><div id=\"phoromatic_result_selected_info_box\"></div> <a href=\"#\" onclick=\"javascript:phoromatic_generate_comparison(\\'?result/\\');\"><div id=\"phoromatic_result_compare_info_box\">Compare</div></a> <a href=\"#\" onclick=\"javascript:phoromatic_delete_results(\\'?results/delete/\\'); return false;\"><div id=\"phoromatic_result_delete_box\">Delete</div></a></li>';\n\t$ret .= '</ul>';\n\n\tif($right != null)\n\t{\n\t\t$ret .= '<div id=\"pts_phoromatic_top_header_right\">' . $right .'</div>';\n\t}\n\n\t$ret .=' </div>';\n\n\treturn $ret;\n}\nfunction phoromatic_get_posted_var($name, $default_value = null)\n{\n\tif(isset($_POST[$name]))\n\t{\n\t\tphoromatic_quit_if_invalid_input_found(array($name));\n\t}\n\n\treturn isset($_POST[$name]) ? $_POST[$name] : null;\n}\nfunction phoromatic_webui_main($main, $right = null)\n{\n\treturn '<div id=\"pts_phoromatic_main\">' . ($right != null ? '<div id=\"pts_phoromatic_menu_right\">' . $right . '</div>' : null) . '<div id=\"pts_phoromatic_main_area\">' . $main . '</div><div style=\"clear: both;\"></div></div>';\n}\nfunction phoromatic_webui_box(&$box)\n{\n\treturn '<div id=\"pts_phoromatic_main_box\"><div id=\"pts_phoromatic_main_box_inside\">' . $box . '</div></div>';\n}\nfunction phoromatic_results_for_schedule($schedule_id, $limit_results = false)\n{\n\tswitch($limit_results)\n\t{\n\t\tcase 'TODAY':\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(UploadID) As UploadCount FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id AND UploadTime LIKE :today_date');\n\t\t\t$stmt->bindValue(':today_date', date('Y-m-d') . '%');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(UploadID) As UploadCount FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id');\n\t\t\tbreak;\n\t}\n\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$stmt->bindValue(':schedule_id', $schedule_id);\n\t$test_result_result = $stmt->execute();\n\t$row = $test_result_result->fetchArray();\n\n\treturn empty($row) ? 0 : $row['UploadCount'];\n}\nfunction phoromatic_schedule_activeon_string($active_on, $active_at = null)\n{\n\tif(!empty($active_on))\n\t{\n\t\t$active_days = explode(',', $active_on);\n\t\t$week = array('M', 'T', 'W', 'TH', 'F', 'S', 'SU');\n\t\tforeach($active_days as $i => &$day)\n\t\t{\n\t\t\tif(!isset($week[$day]))\n\t\t\t{\n\t\t\t\tunset($active_days[$i]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$day = $week[$day];\n\t\t\t}\n\t\t}\n\t\treturn implode(' ', $active_days) . (!empty($active_at) ? ' @ ' . str_replace('.', ':', $active_at) : null );\n\t}\n}\nfunction phoromatic_webui_footer()\n{\n\treturn '<div id=\"pts_phoromatic_bottom_footer\">\n\t<div style=\"float: left; padding: 5px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewbox=\"0 0 76 41\" width=\"76\" height=\"41\" preserveAspectRatio=\"xMinYMin meet\">\n  <path d=\"m74 22v9m-5-16v16m-5-28v28m-23-2h12.5c2.485281 0 4.5-2.014719 4.5-4.5s-2.014719-4.5-4.5-4.5h-8c-2.485281 0-4.5-2.014719-4.5-4.5s2.014719-4.5 4.5-4.5h12.5m-21 5h-11m11 13h-2c-4.970563 0-9-4.029437-9-9v-20m-24 40v-20c0-4.970563 4.0294373-9 9-9 4.970563 0 9 4.029437 9 9s-4.029437 9-9 9h-9\" stroke=\"#696969\" stroke-width=\"4\" fill=\"none\" />\n</svg> &nbsp;</div>\n<p style=\"margin: 6px 15px;\"><strong>' . date('H:i T - j F Y') . '</strong>' . (PTS_IS_DEV_BUILD ? ' &nbsp; [' . round(microtime(true) - PAGE_LOAD_START_TIME, 2) . 's Page Load Time]' : null) . '<br />Copyright &copy; 2008 - ' . date('Y') . ' by <a href=\"http://www.phoronix-media.com/\">Phoronix Media</a>. All rights reserved.<br />\nAll trademarks used are properties of their respective owners.<br />' . pts_core::program_title() . ' (PHP ' . PHP_VERSION . ')</p></div> <script type=\"text/javascript\"> phoromatic_checkbox_toggle_result_comparison(\\'\\'); </script>';\n}\nfunction phoromatic_add_activity_stream_event($activity_event, $activity_event_id, $activity_event_type)\n{\n\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_activity_stream (AccountID, ActivityTime, ActivityCreator, ActivityCreatorType, ActivityEvent, ActivityEventID, ActivityEventType) VALUES (:account_id, :activity_time, :activity_creator, :activity_creator_type, :activity_event, :activity_event_id, :activity_event_type)');\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$stmt->bindValue(':activity_time', phoromatic_server::current_time());\n\t$stmt->bindValue(':activity_creator', $_SESSION['UserName']);\n\t$stmt->bindValue(':activity_creator_type', 'USER');\n\t$stmt->bindValue(':activity_event', $activity_event);\n\t$stmt->bindValue(':activity_event_id', $activity_event_id);\n\t$stmt->bindValue(':activity_event_type', $activity_event_type);\n\treturn $stmt->execute();\n}\nfunction phoromatic_tracker_page_relevant()\n{\n\t$stmt = phoromatic_server::$db->prepare('SELECT RunTargetSystems, RunTargetGroups, (SELECT COUNT(*) FROM phoromatic_results WHERE ScheduleID = phoromatic_schedules.ScheduleID) AS UploadedResultCount FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 ORDER BY Title ASC');\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$result = $stmt->execute();\n\t$row = $result->fetchArray();\n\n\tif($row)\n\t{\n\t\tdo\n\t\t{\n\t\t\tif(is_numeric($row['RunTargetSystems']) && $row['UploadedResultCount'] > (($row['RunTargetSystems'] + $row['RunTargetGroups'] + 1) * 7))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\twhile($row = $result->fetchArray());\n\t}\n\n\treturn false;\n}\nfunction phoromatic_webui_header_logged_in()\n{\n\t$html_links = array();\n\tif($_SESSION['AdminLevel'] == -40)\n\t{\n\t\t$pages = array('Admin', 'Admin_Config', 'Admin_Data', 'Logout');\n\t}\n\telse if($_SESSION['AdminLevel'] > 0)\n\t{\n\t\t$sub_main_menu = array();\n\t\t$sub_tests_menu = array();\n\t\t$sub_systems_menu = array();\n\t\t$sub_testing_menu = array();\n\t\t$sub_results_menu = array();\n\n\t\tif(phoromatic_account_system_count() > 0)\n\t\t{\n\t\t\t$sub_systems_menu[] = 'Dashboard';\n\t\t\t$sub_systems_menu[] = 'Maintenance Table';\n\t\t\t$sub_systems_menu[] = 'Component Table';\n\t\t}\n\n\t\t//$sub_main_menu[] = '<a href=\"?tests\">Test Profiles</a>';\n\t\tif(isset($_SESSION['AdminLevel']) && $_SESSION['AdminLevel'] < 4)\n\t\t{\n\t\t\t$sub_main_menu[] = 'Users';\n\t\t}\n\n\t\tarray_push($sub_main_menu, 'Settings', '<a href=\"?account_activity\">Account Activity</a>', 'Logout');\n\t\t$sub_testing_menu[] = '<a href=\"?schedules\">Test Schedules</a>';\n\n\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t{\n\t\t\tif(phoromatic_server::read_setting('allow_test_profile_creation') == 1)\n\t\t\t{\n\t\t\t\tarray_push($sub_tests_menu, '<a href=\"?create_test\">Create New Test Profile</a>');\n\t\t\t}\n\t\t\tarray_push($sub_tests_menu, '<a href=\"?build_suite\">Build Test Suite</a>');\n\t\t\tarray_push($sub_testing_menu, '<a href=\"?sched\">Create A Schedule</a>', '<a href=\"?benchmark\">Run A Benchmark</a>');\n\t\t}\n\n\t\tif(phoromatic_tracker_page_relevant())\n\t\t{\n\t\t\t$sub_results_menu[] = 'Tracker';\n\t\t}\n\t\t$sub_results_menu[] = '<a href=\"/rss.php?user=' . $_SESSION['UserID'] . '&amp;v=' . sha1($_SESSION['CreatedOn']) . '\">Results Feed <img src=\"images/rss.svg\" width=\"16\" height=\"16\" /></a>';\n\n\t\t$pages = array('Main' => $sub_main_menu, 'Systems' => $sub_systems_menu, 'Tests' => $sub_tests_menu, '<a href=\"/?testing\">Testing</a>' => $sub_testing_menu, 'Results' => $sub_results_menu, '<form action=\"/?search\" method=\"post\" id=\"search\"><input type=\"search\" name=\"search\" id=\"seach_input\" size=\"16\" /> <input type=\"submit\" name=\"sa\" value=\"Search\" /><div class=\"search_expander\"></div></form>');\n\t}\n\n\tforeach($pages as $title => $page)\n\t{\n\t\tif(is_array($page) || empty($page))\n\t\t{\n\t\t\t$menu_row = array();\n\t\t\tforeach($page as $sub_page)\n\t\t\t{\n\t\t\t\t$menu_row[] = menu_item_to_html($sub_page);\n\t\t\t}\n\t\t\t$html_links[menu_item_to_html($title)] = $menu_row;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$html_links[] = menu_item_to_html($page);\n\t\t}\n\t}\n\n\treturn phoromatic_webui_header($html_links, null);\n}\nfunction menu_item_to_html($page)\n{\n\tif(strpos($page, '</') !== false)\n\t\treturn $page;\n\n\t$page_link = strtolower($page);\n\tif(($x = strpos($page_link, '<br />')) !== false)\n\t{\n\t\t$page_link = trim(substr($page_link, $x + 6));\n\t}\n\t$page_link = str_replace(' ', '_', $page_link);\n\n\tif(strtolower($page) == PAGE_REQUEST)\n\t{\n\t\treturn '<a href=\"?' . $page_link . '\"><u>' . str_replace('_', ' ', $page) . '</u></a>';\n\t}\n\telse\n\t{\n\t\treturn '<a href=\"?' . $page_link . '\">' . str_replace('_', ' ', $page) . '</a>';\n\t}\n}\nfunction phoromatic_webui_right_panel_logged_in($add = null)\n{\n\t$right = null;\n\tif($_SESSION['AdminLevel'] == -40)\n\t{\n\t\t$right .= '<h3>Phoromatic Server</h3><hr /><p><strong>' . date('H:i T - j F Y') . '</p>';\n\t}\n\telse if($_SESSION['AdminLevel'] > 0)\n\t{\n\t\t//$right .= '<a href=\"#\" onclick=\"javascript:phoromatic_generate_comparison(\\'?result/\\');\"><div id=\"phoromatic_result_compare_info_box\"></div></a> <a href=\"#\" onclick=\"javascript:phoromatic_delete_results(\\'?results/delete/\\'); return false;\"><div id=\"phoromatic_result_delete_box\">Delete Selected Results</div></a>';\n\t\tif(($bad_systems = phoromatic_server::systems_appearing_down()) != false)\n\t\t{\n\t\t\t$right .= '<ul><li><span class=\"alert\">Systems Needing Attention</span></li>';\n\t\t\tforeach($bad_systems as $system)\n\t\t\t{\n\t\t\t\t$right .= '<li><a href=\"?systems/' . $system . '\">' . phoromatic_server::system_id_to_name($system) . '</a></li>';\n\t\t\t}\n\t\t\t$right .= '</ul><hr />';\n\t\t}\n\n\t\t$right .= $add;\n\n\t\tif($add == null)\n\t\t{\n\t\t\t$recently_active_systems = phoromatic_server::recently_active_systems($_SESSION['AccountID']);\n\t\t\tif(!empty($recently_active_systems))\n\t\t\t{\n\t\t\t\t$right .= '<ul><li>Recently Active Systems</li>';\n\n\t\t\t\tforeach($recently_active_systems as &$row)\n\t\t\t\t{\n\t\t\t\t\t$right .= '<li><a href=\"?systems/' . $row['SystemID'] . '\">' . $row['Title'] . '</a></li>';\n\t\t\t\t}\n\n\t\t\t\t$right .= '</ul><hr />';\n\t\t\t}\n\n\t\t\t$right .= '\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Today\\'s Scheduled Events</li>';\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, RunAt FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1  AND ActiveOn LIKE :active_on ORDER BY RunAt,Title ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':active_on', '%' . (date('N') - 1) . '%');\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\t$row = $result->fetchArray();\n\n\t\t\t\tif($row == false)\n\t\t\t\t{\n\t\t\t\t\t$right .= '</ul><p style=\"text-align: left; margin: 6px 10px;\">No Events Found</p>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$right .= '<li>' . $row['RunAt'] . ' <a href=\"?schedules/' . $row['ScheduleID'] . '\">' . $row['Title'] . '</a></li>';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t\t$right .= '</ul>';\n\t\t\t\t}\n\t\t}\n\n\t\t$system_count = phoromatic_account_system_count();\n\t\t$schedule_count = phoromatic_account_schedule_count();\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(UploadID) AS ResultCount FROM phoromatic_results WHERE AccountID = :account_id');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$result_count = $row['ResultCount'];\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(ActivityTime) AS ActivityCount FROM phoromatic_activity_stream WHERE AccountID = :account_id AND ActivityTime LIKE :today_date');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$stmt->bindValue(':today_date', date('Y-m-d') . '%');\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$activity_count = $row['ActivityCount'];\n\n\t\t$group_name = phoromatic_server::account_id_to_group_name($_SESSION['AccountID']);\n\t\tif($group_name != null)\n\t\t{\n\t\t\t$group_name = '<strong>' . $group_name . '</strong><br />';\n\t\t}\n\n\t\t$right .= '<hr /><p><strong>' . date('H:i T - j F Y') . '</strong><br />' . $group_name . '<a href=\"?systems\">' . $system_count . ' System' . ($system_count == 1 ? '' : 's') . '</a><br /><a href=\"?schedules\">' . $schedule_count . ' Schedule' . ($schedule_count == 1 ? '' : 's') . '</a><br /><a href=\"?results\">' . $result_count . ' Result' . ($result_count == 1 ? '' : 's') . '</a>';\n\t\t$right .= ' <a href=\"/rss.php?user=' . $_SESSION['UserID'] . '&amp;v=' . sha1($_SESSION['CreatedOn']) . '\"><img src=\"images/rss.svg\" width=\"16\" height=\"16\" /></a>';\n\t\t$right .= '<br /><a href=\"?account_activity\">' . $activity_count . ' Activity Events Today</a></p>';\n\t}\n\n\treturn $right;\n}\nfunction phoromatic_account_schedule_count()\n{\n\tstatic $schedule_count = 0;\n\n\tif($schedule_count == 0)\n\t{\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(Title) AS ScheduleCount FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$schedule_count = $row['ScheduleCount'];\n\t}\n\treturn $schedule_count;\n}\nfunction phoromatic_account_system_count()\n{\n\tstatic $sys_count = 0;\n\n\tif($sys_count == 0)\n\t{\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(Title) AS SystemCount FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$sys_count = $row['SystemCount'];\n\t}\n\treturn $sys_count;\n}\nfunction phoromatic_web_socket_server_ip()\n{\n\t$server_ip = $_SERVER['HTTP_HOST'];\n\tif(($x = strpos($server_ip, ':')) !== false)\n\t{\n\t\t$server_ip = substr($server_ip, 0, $x);\n\t}\n\n\tif($server_ip == 'localhost' || $server_ip == '0.0.0.0')\n\t{\n\t\t$local_ip = phodevi::read_property('network', 'ip');\n\t\tif($local_ip)\n\t\t{\n\t\t\t$server_ip = $local_ip;\n\t\t}\n\t}\n\t// getenv('PTS_WEBSOCKET_PORT')\n\treturn $server_ip . ':' . $_SERVER['SERVER_PORT'];\n}\nfunction phoromatic_web_socket_server_addr()\n{\n\t// getenv('PTS_WEBSOCKET_PORT')\n\treturn phoromatic_web_socket_server_ip() . '/' . $_SESSION['AccountID'];\n}\nfunction phoromatic_error_page($title, $description)\n{\n\techo phoromatic_webui_header(array(''), '');\n\t$box = '<h1>' . $title . '</h1>\n\t\t<h2>' . $description . '</h2>';\n\techo phoromatic_webui_box($box);\n\techo phoromatic_webui_footer();\n}\nfunction phoromatic_systems_needing_attention()\n{\n\t$main = null;\n\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, State, LastIP, LocalIP, LastCommunication FROM phoromatic_systems WHERE AccountID = :account_id AND State = 0 ORDER BY LastCommunication DESC');\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$result = $stmt->execute();\n\tif($row = $result->fetchArray())\n\t{\n\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\"><div style=\"float: left; width: 100%;\"><ul><li><h1>Systems Needing Attention</h1></li><li class=\"light\" style=\"font-weight: normal;\">The following systems have attempted to sync with this Phoromatic account but have not been validated. When clicking on them you are able to approve or disable them from your account along with editing the system information.</li>';\n\n\t\tdo\n\t\t{\n\t\t\t$ip = $row['LocalIP'];\n\t\t\tif($row['LastIP'] != $row['LocalIP'])\n\t\t\t{\n\t\t\t\t$ip .= ' / ' . $row['LastIP'];\n\t\t\t}\n\n\t\t\t$main .= '<a href=\"?systems/' . $row['SystemID'] . '/edit\"><li>' . $row['Title'] . '<br /><em><strong>IP:</strong> ' . $ip . ' <strong>Last Communication:</strong> ' . $row['LastCommunication'] . '</em></li></a>';\n\t\t}\n\t\twhile($row = $result->fetchArray());\n\n\t\t$main .= '</ul></div></div>';\n\t}\n\n\treturn $main;\n}\nfunction phoromatic_oldest_result_for_schedule($schedule_id)\n{\n\tstatic $old_time;\n\n\tif(!isset($old_time[$schedule_id]))\n\t{\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT UploadTime FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY UploadTime ASC LIMIT 1');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$stmt->bindValue(':schedule_id', $schedule_id);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$old_time[$schedule_id] = $row['UploadTime'];\n\t}\n\n\treturn $old_time[$schedule_id];\n}\nfunction create_new_phoromatic_account($register_username, $register_password, $register_password_confirm, $register_email, $seed_accountid = null)\n{\n\t// REGISTER NEW USER\n\tif(strlen($register_username) < 4 || strpos($register_username, ' ') !== false)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied username is at least four characters long and contains no spaces.');\n\t\treturn false;\n\t}\n\tif(in_array(strtolower($register_username), array('admin', 'administrator', 'rootadmin')))\n\t{\n\t\tphoromatic_error_page('Oops!', $register_username . ' is a reserved and common username that may be used for other purposes, please make a different selection.');\n\t\treturn false;\n\t}\n\tif(strlen($register_password) < 6)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied password is at least six characters long.');\n\t\treturn false;\n\t}\n\tif($register_password != $register_password_confirm)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied password matches the password confirmation.');\n\t\treturn false;\n\t}\n\tif($register_email == null || filter_var($register_email, FILTER_VALIDATE_EMAIL) == false)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please enter a valid email address.');\n\t\treturn false;\n\t}\n\n\t$valid_user_name_chars = '1234567890-_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\tfor($i = 0; $i < strlen($register_username); $i++)\n\t{\n\t\tif(strpos($valid_user_name_chars, substr($register_username, $i, 1)) === false)\n\t\t{\n\t\t\tphoromatic_error_page('Oops!', 'Please go back and ensure a valid user-name. The character <em>' . substr($register_username, $i, 1) . '</em> is not allowed.');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t$matching_users = phoromatic_server::$db->querySingle('SELECT UserName FROM phoromatic_users WHERE UserName = \\'' . SQLite3::escapeString($register_username) . '\\'');\n\tif(!empty($matching_users))\n\t{\n\t\tphoromatic_error_page('Oops!', 'The user-name is already taken.');\n\t\treturn false;\n\t}\n\n\tif(phoromatic_server::read_setting('add_new_users_to_account') != null)\n\t{\n\t\t$account_id = phoromatic_server::read_setting('add_new_users_to_account');\n\t\t$is_new_account = false;\n\t}\n\telse\n\t{\n\t\t$id_tries = 0;\n\t\tdo\n\t\t{\n\t\t\tif($id_tries == 0 && $seed_accountid != null && isset($seed_accountid[5]))\n\t\t\t{\n\t\t\t\t$account_id = strtoupper(substr($seed_accountid, 0, 6));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$account_id = pts_strings::random_characters(6, true);\n\t\t\t}\n\t\t\t$matching_accounts = phoromatic_server::$db->querySingle('SELECT AccountID FROM phoromatic_accounts WHERE AccountID = \\'' . $account_id . '\\'');\n\t\t\t$id_tries++;\n\t\t}\n\t\twhile(!empty($matching_accounts));\n\t\t$is_new_account = true;\n\t}\n\n\t$user_id = pts_strings::random_characters(4, true);\n\n\tif($is_new_account)\n\t{\n\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' created a new account: ' . $user_id . ' - ' . $account_id);\n\t\t$account_salt = pts_strings::random_characters(12, true);\n\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_accounts (AccountID, ValidateID, CreatedOn, Salt) VALUES (:account_id, :validate_id, :current_time, :salt)');\n\t\t$stmt->bindValue(':account_id', $account_id);\n\t\t$stmt->bindValue(':validate_id', pts_strings::random_characters(4, true));\n\t\t$stmt->bindValue(':salt', $account_salt);\n\t\t$stmt->bindValue(':current_time', phoromatic_server::current_time());\n\t\t$result = $stmt->execute();\n\n\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_account_settings (AccountID) VALUES (:account_id)');\n\t\t$stmt->bindValue(':account_id', $account_id);\n\t\t$result = $stmt->execute();\n\n\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_user_settings (UserID, AccountID) VALUES (:user_id, :account_id)');\n\t\t$stmt->bindValue(':user_id', $user_id);\n\t\t$stmt->bindValue(':account_id', $account_id);\n\t\t$result = $stmt->execute();\n\t}\n\telse\n\t{\n\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' being added to an account: ' . $user_id . ' - ' . $account_id);\n\t\t$account_salt = phoromatic_server::$db->querySingle('SELECT Salt FROM phoromatic_accounts WHERE AccountID = \\'' . $account_id . '\\'');\n\t}\n\n\t$salted_password = hash('sha256', $account_salt . $register_password);\n\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_users (UserID, AccountID, UserName, Email, Password, CreatedOn, LastIP, AdminLevel) VALUES (:user_id, :account_id, :user_name, :email, :password, :current_time, :last_ip, :admin_level)');\n\t$stmt->bindValue(':user_id', $user_id);\n\t$stmt->bindValue(':account_id', $account_id);\n\t$stmt->bindValue(':user_name', $register_username);\n\t$stmt->bindValue(':email', $register_email);\n\t$stmt->bindValue(':password', $salted_password);\n\t$stmt->bindValue(':last_ip', $_SERVER['REMOTE_ADDR']);\n\t$stmt->bindValue(':current_time', phoromatic_server::current_time());\n\t$stmt->bindValue(':admin_level', ($is_new_account ? 1 : 10));\n\t$result = $stmt->execute();\n\n\tpts_file_io::mkdir(phoromatic_server::phoromatic_account_path($account_id));\n\tphoromatic_server::send_email($register_email, 'Phoromatic Account Registration', (($e = phoromatic_server::read_setting('admin_support_email')) != null ? $e : 'no-reply@phoromatic.com'), '<p><strong>' . $register_username . '</strong>:</p><p>Your Phoromatic account has been created and is now active.</p>');\n\treturn true;\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2009 - 2014, Phoronix Media\n\tCopyright (C) 2009 - 2014, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// INIT\ndefine('PHOROMATIC_SERVER', true);\n//ini_set('memory_limit', '64M');\ndefine('PTS_MODE', 'WEB_CLIENT');\ndefine('PTS_AUTO_LOAD_OBJECTS', true);\nerror_reporting(E_ALL);\n\ninclude('../../pts-core.php');\npts_core::init();\n\nphoromatic_server::prepare_database();\n\nif(!isset($_GET['type']))\n{\n\techo 'Missing type.';\n\treturn;\n}\n\nswitch($_GET['type'])\n{\n\tcase 'trigger':\n\t\tif(!isset($_GET['user']) || !isset($_GET['public_key']) || !isset($_GET['trigger']))\n\t\t{\n\t\t\techo 'Missing user, public_key, or trigger.';\n\t\t\treturn;\n\t\t}\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT AccountID FROM phoromatic_users WHERE UserName = :user_name');\n\t\t$stmt->bindValue(':user_name', $_GET['user']);\n\t\t$result = $stmt->execute();\n\t\tif(empty($result))\n\t\t{\n\t\t\techo 'Incorrect user information.';\n\t\t\treturn;\n\t\t}\n\t\t$user_row = $result->fetchArray();\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT ScheduleID FROM phoromatic_schedules WHERE AccountID = :account_id AND PublicKey = :public_key');\n\t\t$stmt->bindValue(':account_id', $user_row['AccountID']);\n\t\t$stmt->bindValue(':public_key', $_GET['public_key']);\n\t\t$result = $stmt->execute();\n\t\tif(empty($result))\n\t\t{\n\t\t\techo 'Incorrect schedule information.';\n\t\t\treturn;\n\t\t}\n\t\t$schedule_row = $result->fetchArray();\n\t\t$sub_target = null;\n\n\t\tif(isset($_GET['sub_target_this_ip']))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT SystemID FROM phoromatic_systems WHERE AccountID = :account_id AND LastIP = :this_ip');\n\t\t\t$stmt->bindValue(':account_id', $user_row['AccountID']);\n\t\t\t$stmt->bindValue(':this_ip', $_SERVER['REMOTE_ADDR']);\n\t\t\t$result = $stmt->execute();\n\t\t\tif(empty($result))\n\t\t\t{\n\t\t\t\techo 'No system found associated to this IP address [' . $_SERVER['REMOTE_ADDR'] . '].';\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$sys_row = $result->fetchArray();\n\t\t\t\t$sub_target = $sys_row['SystemID'];\n\t\t\t}\n\t\t}\n\n\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_triggers (AccountID, ScheduleID, Trigger, TriggeredOn, SubTarget) VALUES (:account_id, :schedule_id, :trigger, :triggered_on, :sub_target)');\n\t\t$stmt->bindValue(':account_id',\t$user_row['AccountID']);\n\t\t$stmt->bindValue(':schedule_id', $schedule_row['ScheduleID']);\n\t\t$stmt->bindValue(':trigger', $_GET['trigger']);\n\t\t$stmt->bindValue(':triggered_on', phoromatic_server::current_time());\n\t\t$stmt->bindValue(':sub_target', $sub_target);\n\t\tif($stmt->execute())\n\t\t{\n\t\t\techo 'Trigger ' . htmlspecialchars($_GET['trigger']) . ' added!';\n\t\t}\n\t\tbreak;\n\n}\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2008 - 2022, Phoronix Media\n\tCopyright (C) 2008 - 2022, Michael Larabel\n\tpts-core.php: To boot-strap the Phoronix Test Suite start-up\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass pts_core\n{\n\tpublic static function init()\n\t{\n\t\t//set_time_limit(0);\n\t\tpts_define_directories(); // Define directories\n\n\t\tpts_define('PTS_INIT_TIME', time());\n\n\t\tif(!defined('PHP_VERSION_ID'))\n\t\t{\n\t\t\t$php_version = explode('.', PHP_VERSION);\n\t\t\tpts_define('PHP_VERSION_ID', ($php_version[0] * 10000 + $php_version[1] * 100 + $php_version[2]));\n\t\t}\n\t}\n\tpublic static function user_home_directory()\n\t{\n\t\t// Gets the system user's home directory\n\t\tstatic $userhome = null;\n\n\t\tif($userhome == null)\n\t\t{\n\t\t\tif(function_exists('posix_getpwuid') && function_exists('posix_getuid'))\n\t\t\t{\n\t\t\t\t$userinfo = posix_getpwuid(posix_getuid());\n\t\t\t\t$userhome = $userinfo['dir'];\n\t\t\t}\n\t\t\telse if(($home = getenv('HOME')))\n\t\t\t{\n\t\t\t\t$userhome = $home;\n\t\t\t}\n\t\t\telse if(($home = getenv('HOMEPATH')))\n\t\t\t{\n\t\t\t\t$userhome = getenv('HOMEDRIVE') . $home;\n\t\t\t}\n\t\t\telse if(PTS_IS_DAEMONIZED_SERVER_PROCESS)\n\t\t\t{\n\t\t\t\t$userhome = PTS_USER_PATH;\n\t\t\t}\n\t\t\telse if(substr(__FILE__, 0, 6) == '/home/')\n\t\t\t{\n\t\t\t\t$home_dir = substr(__FILE__, 0, strpos(__FILE__, '/', 7)) . '/';\n\t\t\t\tif(is_dir($home_dir) && is_dir($home_dir . '.phoronix-test-suite'))\n\t\t\t\t{\n\t\t\t\t\t$userhome = $home_dir;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(!is_writable('/'))\n\t\t\t\t{\n\t\t\t\t\techo PHP_EOL . 'ERROR: Cannot find home directory.' . PHP_EOL;\n\t\t\t\t}\n\t\t\t\t$userhome = null;\n\t\t\t}\n\n\t\t\t$userhome = pts_strings::add_trailing_slash($userhome);\n\t\t}\n\n\t\treturn $userhome;\n\t}\n\tpublic static function program_title()\n\t{\n\t\t// First argument was originally $show_codename, but no longer used/honored\n\t\treturn 'Phoronix Test Suite v' . PTS_VERSION;\n\t}\n}\nfunction pts_define($name, $value = null)\n{\n\tstatic $defines;\n\n\tif($name === -1)\n\t{\n\t\treturn $defines;\n\t}\n\telse if(isset($defines[$name]))\n\t{\n\t\treturn false;\n\t}\n\n\t$defines[$name] = $value;\n\tdefine($name, $value);\n}\nfunction pts_define_directories()\n{\n\t// User's home directory for storing results, module files, test installations, etc.\n\tpts_define('PTS_CORE_PATH', PTS_PATH . 'pts-core/');\n\n\tif(is_dir(PTS_PATH . 'ob-cache/'))\n\t{\n\t\tpts_define('PTS_INTERNAL_OB_CACHE', PTS_PATH . 'ob-cache/');\n\t}\n\telse\n\t{\n\t\tpts_define('PTS_INTERNAL_OB_CACHE', false);\n\t}\n\n\tpts_define('PTS_IS_DAEMONIZED_SERVER_PROCESS', PTS_IS_CLIENT && is_writable('/var/lib/') && is_writable('/etc') ? true : false);\n\n\tif(($user_path_override = getenv('PTS_USER_PATH_OVERRIDE')) != false && is_dir($user_path_override))\n\t{\n\t\tpts_define('PTS_USER_PATH', $user_path_override);\n\t}\n\n\tif(PTS_IS_DAEMONIZED_SERVER_PROCESS)\n\t{\n\t\tif(!is_dir('/var/cache/phoronix-test-suite/'))\n\t\t{\n\t\t\tmkdir('/var/cache/phoronix-test-suite/');\n\t\t}\n\n\t\tpts_define('PTS_USER_PATH', '/var/lib/phoronix-test-suite/');\n\t\tpts_define('PTS_CORE_STORAGE', PTS_USER_PATH . 'core.pt2so');\n\t\tpts_define('PTS_DOWNLOAD_CACHE_PATH', '/var/cache/phoronix-test-suite/download-cache/');\n\t\tpts_define('PTS_OPENBENCHMARKING_SCRATCH_PATH', '/var/cache/phoronix-test-suite/openbenchmarking.org/');\n\t\tpts_define('PTS_TEST_PROFILE_PATH', PTS_USER_PATH . 'test-profiles/');\n\t\tpts_define('PTS_TEST_SUITE_PATH', PTS_USER_PATH . 'test-suites/');\n\t}\n\telse if(PTS_IS_CLIENT)\n\t{\n\t\t/* if(!is_dir(pts_core::user_home_directory() . '.phoronix-test-suite') && stripos(PHP_OS, 'win') !== false && getenv('AppData'))\n\t\t{\n\t\t\tpts_define('PTS_USER_PATH', getenv('AppData') . DIRECTORY_SEPARATOR . 'phoronix-test-suite' . DIRECTORY_SEPARATOR);\n\t\t}\n\t\telse\n\t\t{ */\n\t\t\tpts_define('PTS_USER_PATH', pts_core::user_home_directory() . '.phoronix-test-suite' . DIRECTORY_SEPARATOR);\n\t\t//}\n\t\tpts_define('PTS_CORE_STORAGE', PTS_USER_PATH . 'core.pt2so');\n\t\tpts_define('PTS_DOWNLOAD_CACHE_PATH', PTS_USER_PATH . 'download-cache/');\n\t\tpts_define('PTS_OPENBENCHMARKING_SCRATCH_PATH', PTS_USER_PATH . 'openbenchmarking.org/');\n\t\tpts_define('PTS_TEST_PROFILE_PATH', PTS_USER_PATH . 'test-profiles/');\n\t\tpts_define('PTS_TEST_SUITE_PATH', PTS_USER_PATH . 'test-suites/');\n\t}\n\telse if(defined('PTS_STORAGE_PATH'))\n\t{\n\t\t// e.g. OpenBenchmarking.org\n\t\tpts_define('PTS_OPENBENCHMARKING_SCRATCH_PATH', PTS_STORAGE_PATH . 'openbenchmarking.org/');\n\t\tpts_define('PTS_TEST_PROFILE_PATH', PTS_STORAGE_PATH . 'test-profiles/');\n\t\tpts_define('PTS_TEST_SUITE_PATH', PTS_STORAGE_PATH . 'test-suites/');\n\t}\n\telse if(defined('PATH_TO_PHOROMATIC_STORAGE'))\n\t{\n\t\tpts_define('PTS_OPENBENCHMARKING_SCRATCH_PATH', PATH_TO_PHOROMATIC_STORAGE . 'openbenchmarking.org/');\n\t\tpts_define('PTS_TEST_PROFILE_PATH', PATH_TO_PHOROMATIC_STORAGE . 'test-profiles/');\n\t\tpts_define('PTS_TEST_SUITE_PATH', PATH_TO_PHOROMATIC_STORAGE . 'test-suites/');\n\t}\n\n\t// Misc Locations\n\tpts_define('PTS_CORE_STATIC_PATH', PTS_CORE_PATH . 'static/');\n\n\tif(is_dir('/usr/local/share/phoronix-test-suite/'))\n\t{\n\t\tpts_define('PTS_SHARE_PATH', '/usr/local/share/phoronix-test-suite/');\n\t}\n\telse if(is_dir('/usr/share/'))\n\t{\n\t\tpts_define('PTS_SHARE_PATH', '/usr/share/phoronix-test-suite/');\n\t\tif(is_writable('/usr/share') && !is_dir(PTS_SHARE_PATH))\n\t\t{\n\t\t\tmkdir(PTS_SHARE_PATH);\n\t\t}\n\t}\n\telse\n\t{\n\t\tpts_define('PTS_SHARE_PATH', false);\n\t}\n\n\t// Fallbacks below for dynamic result viewer\n\tif(!defined('PTS_TEST_SUITE_PATH') && defined('PTS_INTERNAL_OB_CACHE') && is_dir(PTS_INTERNAL_OB_CACHE . 'test-suites/'))\n\t{\n\t\tpts_define('PTS_TEST_SUITE_PATH', PTS_INTERNAL_OB_CACHE . 'test-suites/');\n\t}\n\n\tif(!defined('PTS_TEST_PROFILE_PATH') && defined('PTS_INTERNAL_OB_CACHE') && is_dir(PTS_INTERNAL_OB_CACHE . 'test-profiles/'))\n\t{\n\t\tpts_define('PTS_TEST_PROFILE_PATH', PTS_INTERNAL_OB_CACHE . 'test-profiles/');\n\t}\n\n\tif(!defined('PTS_OPENBENCHMARKING_SCRATCH_PATH') && defined('PTS_INTERNAL_OB_CACHE') && is_dir(PTS_INTERNAL_OB_CACHE . 'openbenchmarking.org/'))\n\t{\n\t\tpts_define('PTS_OPENBENCHMARKING_SCRATCH_PATH', PTS_INTERNAL_OB_CACHE . 'openbenchmarking.org/');\n\t}\n}\nfunction pts_needed_extensions()\n{\n\treturn array(\n\t\t// Required? - The Check If In Place - Name - Description\n\t\t// Required extesnions denoted by 1 at [0]\n\t\tarray(1, extension_loaded('dom'), 'DOM', 'The Document Object Model is required for XML operations.'),\n\t\tarray(1, extension_loaded('zip') || extension_loaded('zlib'), 'ZIP', 'ZIP support is required for file compression.'),\n\t\tarray(1, function_exists('json_decode'), 'JSON', 'JSON support is required for OpenBenchmarking.org.'),\n\t\tarray(1, function_exists('simplexml_load_string'), 'SimpleXML', 'SimpleXML is required for XML operations.'),\n\t\t// Optional but recommended extensions\n\t\tarray(0, extension_loaded('openssl'), 'OpenSSL', 'OpenSSL support is recommended to support HTTPS traffic.'),\n\t\tarray(0, extension_loaded('gd'), 'GD', 'The GD library is recommended for improved graph rendering.'),\n\t\tarray(0, extension_loaded('zlib'), 'Zlib', 'The Zlib extension can be used for greater file compression.'),\n\t\tarray(0, function_exists('bzcompress'), 'Bzip2', 'The bzcompress/bzip2 support can be used for greater file compression.'),\n\t\tarray(0, extension_loaded('sqlite3'), 'SQLite3', 'SQLite3 is required when running a Phoromatic server.'),\n\t\tarray(0, function_exists('pcntl_fork'), 'PCNTL', 'PCNTL is highly recommended as it is required by some tests.'),\n\t\tarray(0, function_exists('posix_getpwuid'), 'POSIX', 'POSIX support is highly recommended.'),\n\t\tarray(0, function_exists('curl_init'), 'CURL', 'CURL is recommended for an enhanced download experience.'),\n\t\tarray(0, function_exists('socket_create_listen'), 'Sockets', 'Sockets is needed when running the Phoromatic Server.'),\n\t\tarray(0, function_exists('readline'), 'Readline', 'Readline support is useful for tab-based auto-completion support.'),\n\t\t);\n}\n\npts_define('PTS_VERSION', '10.8.0');\npts_define('PTS_CORE_VERSION', 10800);\npts_define('PTS_RELEASE_DATE', '2021125');\npts_define('PTS_CODENAME', 'Nesseby');\n\npts_define('PTS_IS_CLIENT', (defined('PTS_MODE') && strstr(PTS_MODE, 'CLIENT') !== false));\npts_define('PTS_IS_WEB_CLIENT', (defined('PTS_MODE') && PTS_MODE == 'WEB_CLIENT'));\npts_define('PTS_IS_DEV_BUILD', (substr(PTS_VERSION, -2, 1) == 'm'));\n\nif(!defined('PTS_PATH'))\n{\n\tpts_define('PTS_PATH', dirname(dirname(__FILE__)) . '/');\n}\n\npts_define('PTS_PHP_VERSION', phpversion());\n\nif(PTS_IS_CLIENT || defined('PTS_AUTO_LOAD_OBJECTS'))\n{\n\tfunction pts_build_dir_php_list($dir, &$files)\n\t{\n\t\tif($dh = opendir($dir))\n\t\t{\n\t\t\twhile(($file = readdir($dh)) !== false)\n\t\t\t{\n\t\t\t\tif($file != '.' && $file != '..')\n\t\t\t\t{\n\t\t\t\t\tif(is_dir($dir . '/' . $file) && ((PTS_IS_CLIENT || defined('PTS_AUTO_LOAD_ALL_OBJECTS')) || $file != 'client'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// The client folder should contain classes exclusively used by the client\n\t\t\t\t\t\tpts_build_dir_php_list($dir . '/' . $file, $files);\n\t\t\t\t\t}\n\t\t\t\t\telse if(substr($file, -4) == '.php')\n\t\t\t\t\t{\n\t\t\t\t\t\t$files[substr($file, 0, -4)] = $dir . '/' . $file;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tclosedir($dh);\n\t}\n\tfunction pts_auto_load_class($to_load)\n\t{\n\t\tstatic $obj_files = null;\n\n\t\tif($obj_files == null)\n\t\t{\n\t\t\tpts_build_dir_php_list(PTS_PATH . 'pts-core/objects', $obj_files);\n\t\t}\n\n\t\tif(isset($obj_files[$to_load]))\n\t\t{\n\t\t\tinclude($obj_files[$to_load]);\n\t\t\tunset($obj_files[$to_load]);\n\t\t}\n\n\t\treturn class_exists($to_load, false);\n\t}\n\tspl_autoload_register('pts_auto_load_class');\n}\nif(PTS_IS_CLIENT && ini_get('date.timezone') == null)\n{\n\t$tz = null;\n\n\t// timezone_name_from_abbr was added in PHP 5.1.3. pre-5.2 really isn't supported by PTS, but don't at least error out here but let it get to proper checks...\n\tif(is_executable('/bin/date') && function_exists('timezone_name_from_abbr'))\n\t{\n\t\t$tz = timezone_name_from_abbr(trim(shell_exec('date +%Z 2> /dev/null')));\n\t}\n\telse if(strtoupper(substr(PHP_OS, 0, 3)) == 'WIN')\n\t{\n\t\t$tz = trim(shell_exec('powershell -NoProfile \"(Get-TimeZone).BaseUtcOffset.Hours\"'));\n\t\t$tz = is_numeric($tz) ? timezone_name_from_abbr('', ($tz * 60 * 60), 0) : null;\n\t}\n\n\tif($tz == null || !in_array($tz, timezone_identifiers_list()))\n\t{\n\t\t$tz = 'UTC';\n\t}\n\n\tdate_default_timezone_set($tz);\n}\n\n?>\n"], "fixing_code": ["<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2010 - 2022, Phoronix Media\n\tCopyright (C) 2010 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass pts_strings\n{\n\tconst CHAR_LETTER = 2;\n\tconst CHAR_NUMERIC = 4;\n\tconst CHAR_DECIMAL = 8;\n\tconst CHAR_SPACE = 16;\n\tconst CHAR_DASH = 32;\n\tconst CHAR_UNDERSCORE = 64;\n\tconst CHAR_COLON = 128;\n\tconst CHAR_COMMA = 256;\n\tconst CHAR_SLASH = 512;\n\tconst CHAR_AT = 1024;\n\tconst CHAR_PLUS = 2048;\n\tconst CHAR_SEMICOLON = 4096;\n\tconst CHAR_EQUAL = 8192;\n\n\tpublic static function is_url($string)\n\t{\n\t\t$components = parse_url($string);\n\t\treturn $components != false && isset($components['scheme']) && isset($components['host']);\n\t}\n\tpublic static function is_version($string)\n\t{\n\t\t// Only numeric or decimal, and at least a decimal (not int)\n\t\treturn pts_strings::string_only_contains($string, (pts_strings::CHAR_NUMERIC | pts_strings::CHAR_DECIMAL)) && pts_strings::string_contains($string, pts_strings::CHAR_DECIMAL);\n\t}\n\tpublic static function is_alnum($string)\n\t{\n\t\treturn function_exists('ctype_alnum') ? ctype_alnum($string) : pts_strings::string_only_contains($string, (pts_strings::CHAR_NUMERIC | pts_strings::CHAR_LETTER));\n\t}\n\tpublic static function is_alpha($string)\n\t{\n\t\treturn function_exists('ctype_alpha') ? ctype_alpha($string) : pts_strings::string_only_contains($string, pts_strings::CHAR_LETTER);\n\t}\n\tpublic static function is_digit($string)\n\t{\n\t\treturn function_exists('ctype_digit') ? ctype_digit($string) : is_numeric($string);\n\t}\n\tpublic static function is_upper($string)\n\t{\n\t\treturn function_exists('ctype_upper') ? ctype_upper($string) : ($string == strtoupper($string));\n\t}\n\tpublic static function trim_search_query_leave_hdd_size($value)\n\t{\n\t\treturn pts_strings::trim_search_query($value, false, true);\n\t}\n\tpublic static function trim_search_query($value, $remove_multipliers = false, $keep_hdd_size = false)\n\t{\n\t\t$search_break_characters = array('@', '(', '/', '+', '[', '<', '*', '\"');\n\t\tfor($i = 0, $x = strlen($value); $i < $x; $i++)\n\t\t{\n\t\t\tif(in_array($value[$i], $search_break_characters))\n\t\t\t{\n\t\t\t\t$value = substr($value, 0, $i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif((is_numeric($value) && substr($value, 0, 2) != '0x') || $value == null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove multiplier if prepended to string\n\t\tif($remove_multipliers)\n\t\t{\n\t\t\t$multiplier = strpos($value, ' x ');\n\t\t\tif($multiplier !== false && is_numeric(substr($value, 0, $multiplier)))\n\t\t\t{\n\t\t\t\t$value = substr($value, ($multiplier + 3));\n\t\t\t}\n\t\t}\n\n\t\t$value = str_replace('& ', '', $value);\n\n\t\tif(substr($value, -1) == '.')\n\t\t{\n\t\t\t$value = substr($value, 0, -1);\n\t\t}\n\n\t\tif(($w = stripos($value, 'WARNING')) !== false)\n\t\t{\n\t\t\t// to get rid of Scheisse like 'Gtk-WARNING **: Unable'\n\t\t\t$value = substr($value, 0, strrpos($value, ' ', (0 - (strlen($value) - $w))));\n\t\t}\n\n\t\t// Remove other beginning or ending words based upon conditions\n\t\t$words = explode(' ', trim($value));\n\t\t$c = count($words);\n\t\tswitch($c)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\tif(isset($words[0][2]) && in_array(substr($words[0], -2), array('MB', 'GB', '0W')))\n\t\t\t\t{\n\t\t\t\t\t// Just searching a disk / memory size or a power supply wattage\n\t\t\t\t\t$words = array();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$last_index = ($c - 1);\n\t\t\t\tif(strpos($words[$last_index], 'v1') !== false || strpos($words[$last_index], 'MB') !== false || strpos($words[$last_index], 'GB') !== false)\n\t\t\t\t{\n\t\t\t\t\t// Version number being appended to product (some mobos) or the MB/GB size for GPUs\n\t\t\t\t\tarray_pop($words);\n\t\t\t\t}\n\t\t\t\telse if(!$keep_hdd_size && strpos($words[0], 'GB') !== false)\n\t\t\t\t{\n\t\t\t\t\t// Likely disk size in front of string\n\t\t\t\t\tarray_shift($words);\n\t\t\t\t}\n\t\t\t\telse if(!$keep_hdd_size && strpos($words[0], 'TB') !== false)\n\t\t\t\t{\n\t\t\t\t\t// Likely disk size in front of string\n\t\t\t\t\tarray_shift($words);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn implode(' ', $words);\n\t}\n\tpublic static function parse_for_home_directory($path)\n\t{\n\t\t// Find home directory if needed\n\t\tif(strpos($path, '~/') !== false)\n\t\t{\n\t\t\t$path = str_replace('~/', pts_core::user_home_directory(), $path);\n\t\t}\n\n\t\treturn pts_strings::add_trailing_slash($path);\n\t}\n\tpublic static function string_bool($string)\n\t{\n\t\t// Used for evaluating if the user inputted a string that evaluates to true\n\t\tif(function_exists('filter_var'))\n\t\t{\n\t\t\treturn $string != null && filter_var($string, FILTER_VALIDATE_BOOLEAN);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn $string != null && ($string === true || $string == 1 || strtolower($string) == 'true' || strtolower($string) == 'yes');\n\t\t}\n\t}\n\tpublic static function add_trailing_slash($path)\n\t{\n\t\tif(PTS_IS_CLIENT && phodevi::is_windows() && strpos($path, ':\\\\') === 1)\n\t\t{\n\t\t\treturn $path . (substr($path, -1) == '\\\\' ? null : '\\\\');\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn $path . (substr($path, -1) == '/' ? null : '/');\n\t\t}\n\t}\n\tpublic static function trim_explode($delimiter, $to_explode, $limit = PHP_INT_MAX)\n\t{\n\t\tif(is_array($to_explode))\n\t\t{\n\t\t\treturn $to_explode;\n\t\t}\n\n\t\treturn empty($to_explode) ? array() : array_map('trim', explode($delimiter, $to_explode, $limit));\n\t}\n\tpublic static function comma_explode($to_explode)\n\t{\n\t\treturn self::trim_explode(',', $to_explode);\n\t}\n\tpublic static function colon_explode($to_explode)\n\t{\n\t\treturn self::trim_explode(':', $to_explode);\n\t}\n\tpublic static function first_in_string($string, $delimited_by = ' ')\n\t{\n\t\treturn ($string != null && ($t = strpos($string, $delimited_by))) ? substr($string, 0, $t) : $string;\n\t}\n\tpublic static function last_in_string($string, $delimited_by = ' ')\n\t{\n\t\treturn !empty($string) && ($t = strrpos($string, $delimited_by)) ? substr($string, ($t + 1)) : $string;\n\t}\n\tpublic static function has_in_string($string, $r)\n\t{\n\t\t$has_in_string = false;\n\n\t\tforeach($r as $string_to_check)\n\t\t{\n\t\t\tif(strpos($string, $string_to_check) !== false)\n\t\t\t{\n\t\t\t\t$has_in_string = $string_to_check;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $has_in_string;\n\t}\n\tpublic static function has_in_istring($string, $r)\n\t{\n\t\t$has_in_string = false;\n\n\t\tforeach($r as $string_to_check)\n\t\t{\n\t\t\tif(stripos($string, $string_to_check) !== false)\n\t\t\t{\n\t\t\t\t$has_in_string = $string_to_check;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $has_in_string;\n\t}\n\tpublic static function random_characters($length, $with_numbers = false)\n\t{\n\t\t$random = null;\n\n\t\tif($with_numbers)\n\t\t{\n\t\t\tfor($i = 0; $i < $length; $i++)\n\t\t\t{\n\t\t\t\t$r = rand(0, 35);\n\t\t\t\tif($r < 10)\n\t\t\t\t\t$random .= $r;\n\t\t\t\telse\n\t\t\t\t\t$random .= chr(55 + $r);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor($i = 0; $i < $length; $i++)\n\t\t\t{\n\t\t\t\t$random .= chr(rand(65, 90));\n\t\t\t}\n\t\t}\n\n\t\treturn $random;\n\t}\n\tpublic static function find_longest_string(&$string_r)\n\t{\n\t\tif(!is_array($string_r))\n\t\t{\n\t\t\treturn $string_r;\n\t\t}\n\n\t\t$longest_string = null;\n\t\t$longest_string_length = 0;\n\n\t\tforeach($string_r as $one_string)\n\t\t{\n\t\t\tif(is_array($one_string))\n\t\t\t{\n\t\t\t\t$one_string = self::find_longest_string($one_string);\n\t\t\t}\n\n\t\t\t$one_string = strval($one_string);\n\t\t\tif(isset($one_string[$longest_string_length]))\n\t\t\t{\n\t\t\t\t$longest_string = $one_string;\n\t\t\t\t$longest_string_length = strlen($one_string);\n\t\t\t}\n\t\t}\n\n\t\treturn $longest_string;\n\t}\n\tpublic static function char_is_of_type($char, $attributes)\n\t{\n\t\t$i = ord($char);\n\n\t\tif(($attributes & self::CHAR_LETTER) && (($i > 64 && $i < 91) || ($i > 96 && $i < 123)))\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_NUMERIC) && $i > 47 && $i < 58)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_DECIMAL) && $i == 46)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_DASH) && $i == 45)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_UNDERSCORE) && $i == 95)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_COLON) && $i == 58)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_SPACE) && $i == 32)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_COMMA) && $i == 44)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_AT) && $i == 64)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_PLUS) && $i == 43)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_SEMICOLON) && $i == 59)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_EQUAL) && $i == 61)\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse if(($attributes & self::CHAR_SLASH) && ($i == 47 || $i == 92))\n\t\t{\n\t\t\t$is_of_type = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$is_of_type = false;\n\t\t}\n\n\t\treturn $is_of_type;\n\t}\n\tpublic static function trim_spaces($str)\n\t{\n\t\t// get rid of multiple/redundant spaces that are next to each other\n\t\t$new_str = null;\n\t\tfor($i = strlen($str); $i > 0; $i--)\n\t\t{\n\t\t\t// 32 is a ASCII space\n\t\t\tif(ord($str[($i - 1)]) != 32 || ($i < 2 || ord($str[($i - 2)]) != 32))\n\t\t\t{\n\t\t\t\t$new_str = $str[$i - 1] . $new_str;\n\t\t\t}\n\t\t}\n\n\t\treturn $new_str != null ? trim($new_str) : '';\n\t}\n\tpublic static function remove_redundant($string, $redundant_char)\n\t{\n\t\tif(empty($string))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\t$prev_char = null;\n\t\t$new_string = '';\n\n\t\tfor($i = 0, $l = strlen($string); $i < $l; $i++)\n\t\t{\n\t\t\t$this_char = $string[$i];\n\n\t\t\tif($this_char != $redundant_char || $prev_char != $redundant_char)\n\t\t\t{\n\t\t\t\t$new_string .= $this_char;\n\t\t\t}\n\n\t\t\t$prev_char = $this_char;\n\t\t}\n\n\t\treturn trim($new_string);\n\t}\n\tpublic static function strip_string($str)\n\t{\n\t\t// Clean a string containing hardware information of some common things to change/strip out\n\t\t$change_phrases = array(\n\t\t\t'MCH' => 'Memory Controller Hub',\n\t\t\t'AMD' => 'Advanced Micro Devices',\n\t\t\t'MSI' => 'MICRO-STAR INTERNATIONAL',\n\t\t\t'SiS' => 'Silicon Integrated Systems',\n\t\t\t'Abit' => 'http://www.abit.com.tw/',\n\t\t\t'ASUS' => 'ASUSTeK',\n\t\t\t'HP' => 'Hewlett-Packard',\n\t\t\t'NVIDIA' => 'nVidia',\n\t\t\t'HDD' => 'HARDDISK',\n\t\t\t'Intel' => 'Intel64',\n\t\t\t'HD' => 'High Definition',\n\t\t\t'IGP' => array('Integrated Graphics Controller', 'Express Graphics Controller', 'Integrated Graphics Device', 'Chipset Integrated')\n\t\t\t);\n\n\t\tforeach($change_phrases as $new_phrase => $original_phrase)\n\t\t{\n\t\t\t$str = str_ireplace($original_phrase, $new_phrase, $str);\n\t\t}\n\n\t\t$remove_phrases = array('incorporation', 'corporation', 'corp.', 'invalid', 'technologies', 'technology', ' version', ' project ', 'computer', 'To Be Filled By', 'ODM', 'O.E.M.', 'Desktop Reference Platform', 'small form factor', 'convertible', ' group', 'chipset', 'community', 'reference', 'communications', 'semiconductor', 'processor', 'host bridge', 'adapter', ' CPU', 'platform', 'international', 'express', 'graphics', ' none', 'electronics', 'integrated', 'alternate', 'quad-core', 'memory', 'series', 'network', 'motherboard', 'electric ', 'industrial ', 'serverengines', 'Manufacturer', 'x86/mmx/sse2', '/AGP/SSE/3DNOW!', '/AGP/SSE2', 'controller', '(extreme graphics innovation)', 'pci-e_gfx and ht3 k8 part', 'pci-e_gfx and ht1 k8 part', 'Northbridge only', 'dual slot', 'dual-core', 'dual core', 'microsystems', 'not specified', 'single slot', 'genuine', 'unknown device', 'systemberatung', 'gmbh', 'graphics adapter', 'video device', 'http://', 'www.', '.com', '.tw/', '/pci/sse2/3dnow!', '/pcie/sse2', '/pci/sse2', 'balloon', 'network connection', 'ethernet', ' to ', ' fast ', 'limited.', ' systems', ' system', 'compliant', 'co. ltd', 'co.', 'ltd.', 'LTD ', ' LTD', '\\AE', '(r)', '(tm)', 'inc.', 'inc', '6.00 PG', ',', '\\'', '_ ', '_ ', 'corp', 'product name', 'base board', 'mainboard', 'pci to pci', ' release ', 'nee ', 'default string', ' AG ', '/DRAM', 'shared ', ' sram', 'and subsidiaries', ' SCSI', 'Disk Device', ' ATA', 'Daughter Card', 'Gigabit Connection', 'altivec supported', ' family', ' ing');\n\t\t$str = str_ireplace($remove_phrases, ' ', $str . ' ');\n\n\t\tif(($w = stripos($str, 'WARNING')) !== false)\n\t\t{\n\t\t\t// to get rid of Scheisse like 'Gtk-WARNING **: Unable'\n\t\t\t$str = substr($str, 0, strrpos($str, ' ', (0 - (strlen($str) - $w))));\n\t\t}\n\t\tif(($w = stripos($str, ' with Radeon')) !== false || ($w = stripos($str, ' w/ Radeon')) !== false)\n\t\t{\n\t\t\t$str = substr($str, 0, $w);\n\t\t}\n\n\t\t$str = pts_strings::trim_spaces($str);\n\n\t\t// Fixes an AMD string issue like 'FX -4100' due to stripping (TM) from in between characters, possibly other cases too\n\t\t$str = str_replace(' -', '-', $str);\n\t\t$str = str_replace('- ', ' ', $str);\n\n\t\tif(stripos($str, ' + ') === false)\n\t\t{\n\t\t\t// Remove any duplicate words\n\t\t\t$str = implode(' ', array_unique(explode(' ', $str)));\n\t\t}\n\n\t\treturn $str;\n\t}\n\tpublic static function has_element_in_string($haystack, $array_to_check)\n\t{\n\t\tforeach($array_to_check as $ch)\n\t\t{\n\t\t\tif(stripos($haystack, $ch) !== false)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic static function remove_line_timestamps($log)\n\t{\n\t\t// Try to strip out timestamps from lines like Xorg.0.log and dmesg, e.g.:\n\t\t// [  326.390358] EXT4-fs (dm-1): initial error at 1306235400: ext4_journal_start_sb:251\n\t\tif($log === null)\n\t\t{\n\t\t\t$log = '';\n\t\t}\n\t\t$log = explode(PHP_EOL, $log);\n\t\tforeach($log as &$line)\n\t\t{\n\t\t\tif(substr($line, 0, 1) == '[' && ($t = strpos($line, '] ', 2)) !== false)\n\t\t\t{\n\t\t\t\t$encased_segment = trim(substr($line, 1, ($t - 1)));\n\n\t\t\t\tif(is_numeric($encased_segment))\n\t\t\t\t{\n\t\t\t\t\t$line = substr($line, ($t + 2));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$log = implode(PHP_EOL, $log);\n\n\t\treturn $log;\n\t}\n\tpublic static function remove_lines_containing($contents, $contains)\n\t{\n\t\tforeach($contains as $needle)\n\t\t{\n\t\t\twhile(($x = stripos($contents, $needle)) !== false)\n\t\t\t{\n\t\t\t\t$affected_line_begins = strrpos($contents, PHP_EOL, (0 - strlen($contents) + $x));\n\t\t\t\t$affected_line_ends = strpos($contents, PHP_EOL, $x);\n\t\t\t\t$contents = substr($contents, 0, $affected_line_begins) . ($affected_line_ends === false ? null : substr($contents, $affected_line_ends));\n\t\t\t}\n\t\t}\n\n\t\treturn $contents;\n\t}\n\tpublic static function remove_from_string($string, $attributes)\n\t{\n\t\t$string_r = str_split($string);\n\t\t$new_string = null;\n\n\t\tforeach($string_r as $char)\n\t\t{\n\t\t\tif(pts_strings::char_is_of_type($char, $attributes) == false)\n\t\t\t{\n\t\t\t\t$new_string .= $char;\n\t\t\t}\n\t\t}\n\n\t\treturn $new_string;\n\t}\n\tpublic static function keep_in_string($string, $attributes)\n\t{\n\t\t$string_r = str_split($string);\n\t\t$new_string = null;\n\n\t\tforeach($string_r as $char)\n\t\t{\n\t\t\tif(pts_strings::char_is_of_type($char, $attributes) == true)\n\t\t\t{\n\t\t\t\t$new_string .= $char;\n\t\t\t}\n\t\t}\n\n\t\treturn $new_string;\n\t}\n\tpublic static function string_only_contains($string, $attributes)\n\t{\n\t\t$string_r = str_split($string);\n\n\t\tforeach($string_r as $char)\n\t\t{\n\t\t\tif(pts_strings::char_is_of_type($char, $attributes) == false)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\tpublic static function string_contains($string, $attributes)\n\t{\n\t\t$string_r = str_split($string);\n\n\t\tforeach($string_r as $char)\n\t\t{\n\t\t\tif(pts_strings::char_is_of_type($char, $attributes) == true)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic static function times_occurred($string, $attributes)\n\t{\n\t\t$string_r = str_split($string);\n\t\t$times_matched = 0;\n\n\t\tforeach($string_r as $char)\n\t\t{\n\t\t\tif(pts_strings::char_is_of_type($char, $attributes) == true)\n\t\t\t{\n\t\t\t\t$times_matched++;\n\t\t\t}\n\t\t}\n\n\t\treturn $times_matched;\n\t}\n\tpublic static function proximity_match($search, $match_to)\n\t{\n\t\t// Proximity search in $search string for * against $match_to\n\t\t$search = explode('*', $search);\n\t\t$is_match = true;\n\n\t\tif(count($search) == 1)\n\t\t{\n\t\t\t$is_match = false;\n\t\t}\n\n\t\tfor($i = 0; $i < count($search) && $is_match && !empty($search[$i]); $i++)\n\t\t{\n\t\t\tif(($match_point = strpos($match_to, $search[$i])) !== false && ($i > 0 || $match_point == 0))\n\t\t\t{\n\t\t\t\t$match_to = substr($match_to, ($match_point + strlen($search[$i])));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$is_match = false;\n\t\t\t}\n\t\t}\n\n\t\treturn $is_match;\n\t}\n\tpublic static function result_quantifier_to_string($quantifier)\n\t{\n\t\t$quantifiers = array('MAX' => 'Maximum', 'MIN' => 'Minimum', 'NULL' => null, 'AVG' => 'Average');\n\t\treturn isset($quantifiers[$quantifier]) ? $quantifiers[$quantifier] : 'Average';\n\t}\n\tpublic static function format_time($time, $input_format = 'SECONDS', $standard_version = true, $round_to = 0)\n\t{\n\t\tswitch($input_format)\n\t\t{\n\t\t\tcase 'MINUTES':\n\t\t\t\t$time_in_seconds = $time * 60;\n\t\t\t\tbreak;\n\t\t\tcase 'SECONDS':\n\t\t\tdefault:\n\t\t\t\t$time_in_seconds = $time;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$time_in_seconds = (int)$time_in_seconds;\n\t\tif($round_to > 0)\n\t\t{\n\t\t\t$time_in_seconds += $round_to - ($time_in_seconds % $round_to);\n\t\t}\n\n\t\t$formatted_time = array();\n\n\t\tif($time_in_seconds > 0)\n\t\t{\n\t\t\t$time_r = array();\n\t\t\t$time_r[0] = array(floor($time_in_seconds / 86400), 'Day');\n\t\t\t$time_r[1] = array(floor(($time_in_seconds % 86400) / 3600), 'Hour');\n\t\t\t$time_r[2] = array(floor(($time_in_seconds % 3600) / 60), 'Minute');\n\t\t\t$time_r[3] = array($time_in_seconds % 60, 'Second');\n\n\t\t\tforeach($time_r as $time_segment)\n\t\t\t{\n\t\t\t\tif($time_segment[0] > 0)\n\t\t\t\t{\n\t\t\t\t\t$formatted_part = $time_segment[0];\n\n\t\t\t\t\tif($standard_version)\n\t\t\t\t\t{\n\t\t\t\t\t\t$formatted_part .= ' ' . $time_segment[1];\n\n\t\t\t\t\t\tif($time_segment[0] > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$formatted_part .= 's';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$formatted_part .= strtolower(substr($time_segment[1], 0, 1));\n\t\t\t\t\t}\n\n\t\t\t\t\t$formatted_time[] = $formatted_part;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn implode(($standard_version ? ', ' : ''), $formatted_time);\n\t}\n\tpublic static function number_suffix_handler($n)\n\t{\n\t\t$suffix = 'th';\n\t\t$r = $n % 100;\n\t\tif($r < 11 || $r > 13)\n\t\t{\n\t\t\tswitch($r % 10)\n\t\t\t{\n\t\t\t\tcase 1:\n\t\t\t\t\t$suffix = 'st';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\t$suffix = 'nd';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\t$suffix = 'rd';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t    return $n . $suffix;\n\t}\n\tpublic static function plural_handler($count, $base)\n\t{\n\t\treturn $count . ' ' . $base . ($count != 1 ? 's' : null);\n\t}\n\tpublic static function days_ago_format_string($days_ago)\n\t{\n\t\tif($days_ago < 30)\n\t\t{\n\t\t\t$days_ago = pts_strings::plural_handler($days_ago, 'day');\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$days_ago = floor($days_ago / 30);\n\n\t\t\tif($days_ago >= 12)\n\t\t\t{\n\t\t\t\t$year = floor($days_ago / 12);\n\t\t\t\t$months = $days_ago % 12;\n\n\t\t\t\t$days_ago = pts_strings::plural_handler($year, 'year');\n\n\t\t\t\tif($months > 0)\n\t\t\t\t{\n\t\t\t\t\t$days_ago .= ', ' . pts_strings::plural_handler($months, 'month');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$days_ago = pts_strings::plural_handler($days_ago, 'month');\n\t\t\t}\n\t\t}\n\n\t\treturn $days_ago;\n\t}\n\tpublic static function system_category_to_openbenchmark_category($category)\n\t{\n\t\t$categories = array('Graphics' => 'GPU', 'Processor' => 'CPU', 'System' => 'CPU', 'File-System' => 'File System');\n\t\treturn isset($categories[$category]) ? $categories[$category] : $category;\n\t}\n\tpublic static function parse_value_string_vars($value_string)\n\t{\n\t\t$values = array();\n\t\tforeach(explode(';', $value_string) as $preset)\n\t\t{\n\t\t\tif(count($preset = pts_strings::trim_explode('=', $preset)) == 2)\n\t\t\t{\n\t\t\t\t$values[$preset[0]] = $preset[1];\n\t\t\t}\n\t\t}\n\n\t\treturn $values;\n\t}\n\tpublic static function simplify_string_for_file_handling($str)\n\t{\n\t\treturn $str == null ? '' : pts_strings::keep_in_string(trim(str_replace(array('/', '\\\\'), '_', $str)), pts_strings::CHAR_LETTER | pts_strings::CHAR_NUMERIC | pts_strings::CHAR_DASH | pts_strings::CHAR_DECIMAL | pts_strings::CHAR_SPACE | pts_strings::CHAR_UNDERSCORE | pts_strings::CHAR_COMMA | pts_strings::CHAR_AT | pts_strings::CHAR_PLUS | pts_strings::CHAR_SEMICOLON | pts_strings::CHAR_EQUAL);\n\t}\n\tpublic static function highlight_words_with_colon($str, $pre = '<strong>', $post = '</strong>')\n\t{\n\t\tif($str == null)\n\t\t{\n\t\t\treturn $str;\n\t\t}\n\n\t\t$str_r = explode(' ', $str);\n\t\tforeach($str_r as &$word)\n\t\t{\n\t\t\tif(substr($word, -1) == ':')\n\t\t\t{\n\t\t\t\t$word = $pre . $word . $post;\n\t\t\t}\n\t\t}\n\t\treturn implode(' ', $str_r);\n\t}\n\tpublic static function highlight_diff_two_structured_strings($str1, $str2, $pre = '<span style=\"color: #FF0000;\">', $post = '</span>')\n\t{\n\t\tif($str2 == null)\n\t\t{\n\t\t\treturn $str1;\n\t\t}\n\n\t\t$str1 = explode(', ', $str1);\n\t\t$str2 = explode(', ', $str2);\n\t\tforeach($str1 as $i => &$word)\n\t\t{\n\t\t\tif(isset($str2[$i]) && $str2[$i] != $str1[$i])\n\t\t\t{\n\t\t\t\t$word = $pre . $word . $post;\n\t\t\t}\n\t\t}\n\t\treturn implode(', ', $str1);\n\t}\n\tpublic static function is_text_string($str_check)\n\t{\n\t\t$is_text = false;\n\n                if(function_exists('mb_detect_encoding'))\n                {\n                        $is_text = mb_detect_encoding((string)$str_check, null, true) !== false;\n                }\n                else\n                {\n\t\t\t// Not necessarily perfect but better than nothing...\n\t\t\t$is_text = strpos($str_check, \"\\0\") === false;\n                }\n\n\t\t/*\n\t\t// This former code tends to have false positives..\n\t\tif(function_exists('ctype_print'))\n\t\t{\n\t\t\t$str_check = str_replace(\"\\t\", '', $str_check);\n\t\t\t$str_check = str_replace(\"\\r\", '', $str_check);\n\t\t\t$str_check = str_replace(\"\\n\", '', $str_check);\n\t\t\t$is_text = ctype_print($str_check);\n\t\t}*/\n\n\t\treturn $is_text;\n\t}\n\tpublic static function sanitize($input)\n\t{\n\t\treturn htmlspecialchars($input, ENT_NOQUOTES, 'UTF-8');\n\t}\n\tpublic static function simple($input)\n\t{\n\t\treturn empty($input) ? '' : pts_strings::keep_in_string($input, pts_strings::CHAR_LETTER | pts_strings::CHAR_NUMERIC | pts_strings::CHAR_DASH | pts_strings::CHAR_DECIMAL | pts_strings::CHAR_SPACE | pts_strings::CHAR_UNDERSCORE | pts_strings::CHAR_COMMA | pts_strings::CHAR_AT | pts_strings::CHAR_COLON);\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2015 - 2016, Phoronix Media\n\tCopyright (C) 2015 - 2016, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_local_suites implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'Local Test Suite';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\t$suite_dir = phoromatic_server::phoromatic_account_suite_path($_SESSION['AccountID']);\n\t\t$main = '<h1>Local Suites</h1><p>These are test suites created by you or another account within your group. Suites are an easy collection of test profiles. New suits can be trivially made via the <a href=\"/?build_suite\">build suite</a> page.</p>';\n\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && isset($PATH[0]) && $PATH[0] == 'delete' && verify_submission_token())\n\t\t{\n\t\t\tforeach(explode(',', $PATH[1]) as $id)\n\t\t\t{\n\t\t\t\tif(is_file($suite_dir . $id . '/suite-definition.xml'))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<p><strong>Deleting:</strong> ' . $id . '</p>';\n\t\t\t\t\tunlink($suite_dir . $id . '/suite-definition.xml');\n\t\t\t\t\tpts_file_io::delete($suite_dir . $id, null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$suite_count = 0;\n\t\tforeach(pts_file_io::glob($suite_dir . '*/suite-definition.xml') as $xml_path)\n\t\t{\n\t\t\t$suite_count++;\n\t\t\t$id = basename(dirname($xml_path));\n\t\t\t$test_suite = new pts_test_suite($xml_path);\n\n\t\t\t$main .= '<a name=\"' . $id . '\"></a><h1>' . pts_strings::sanitize($test_suite->get_title()) . ' [' . $id . ']</h1>';\n\t\t\t$main .= '<p><strong>' . pts_strings::sanitize($test_suite->get_maintainer()) . '</strong></p>';\n\t\t\t$main .= '<p><em>' . pts_strings::sanitize($test_suite->get_description()) . '</em></p>';\n\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t{\n\t\t\t\t$main .= '<p><a href=\"?build_suite/' . $id . '\">Edit Suite</a> - <a href=\"?local_suites/delete/' . $id . append_token_to_url() . '\">Delete Suite</a></p>';\n\t\t\t}\n\t\t\t$main .= '<div style=\"max-height: 400px; width: 80%; overflow-y: scroll;\">';\n\t\t\t$test_suite->sort_contained_tests();\n\t\t\tforeach($test_suite->get_contained_test_result_objects() as $tro)\n\t\t\t{\n\t\t\t\t$main .= '<h3>' . $tro->test_profile->get_title() . ' [' . $tro->test_profile->get_identifier() . ']</h3>';\n\t\t\t\t$main .= '<p>' . $tro->get_arguments_description() . '</p>';\n\t\t\t}\n\t\t\t$main .= '</div>';\n\t\t\t$main .= '<hr />';\n\t\t}\n\n\t\tif($suite_count == 0)\n\t\t\t$main .= '<h1>No Test Suites Found</h1>';\n\n\t\techo phoromatic_webui_header_logged_in();\n\t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n\t\techo phoromatic_webui_footer();\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2008 - 2022, Phoronix Media\n\tCopyright (C) 2008 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_schedules implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'Test Schedules';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\t$main = null;\n\t\techo phoromatic_webui_header_logged_in();\n\n\t\tif(!empty($PATH[0]) && is_numeric($PATH[0]))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_schedules WHERE AccountID = :account_id AND ScheduleID = :schedule_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t$result = $stmt->execute();\n\t\t\t$row = $result->fetchArray();\n\n\t\t\tif(empty($row))\n\t\t\t{\n\t\t\t\t$main = '<h1>Test Schedules</h1>';\n\t\t\t\t$main .= '<h3>No Resource Found</h3>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\n\t\t\t\t\tif(isset($_POST['add_to_schedule_select_test']))\n\t\t\t\t\t{\n\t\t\t\t\t\tphoromatic_quit_if_invalid_input_found(array('add_to_schedule_select_test'));\n\t\t\t\t\t\t$name = $_POST['add_to_schedule_select_test'];\n\t\t\t\t\t\t$args = array();\n\t\t\t\t\t\t$args_name = array();\n\n\t\t\t\t\t\tforeach($_POST as $i => $v)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(substr($i, 0, 12) == 'test_option_' && substr($i, -9) != '_selected')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tphoromatic_quit_if_invalid_input_found(array($i, $i . '_selected'));\n\t\t\t\t\t\t\t\tarray_push($args, $v);\n\t\t\t\t\t\t\t\tarray_push($args_name, $_POST[$i . '_selected']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$args_name = implode(' - ', $args_name);\n\t\t\t\t\t\t$args = implode(' ', $args);\n\n\t\t\t\t\t\tif(!empty($name))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_tests (AccountID, ScheduleID, TestProfile, TestArguments, TestDescription) VALUES (:account_id, :schedule_id, :test_profile, :test_arguments, :test_description)');\n\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t\t$stmt->bindValue(':test_profile', $name);\n\t\t\t\t\t\t\t$stmt->bindValue(':test_arguments', $args);\n\t\t\t\t\t\t\t$stmt->bindValue(':test_description', $args_name);\n\t\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\t\tphoromatic_add_activity_stream_event('tests_for_schedule', $PATH[0], 'added');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($_POST['suite_add']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$test_suite = phoromatic_server::find_suite_file($_SESSION['AccountID'], $_POST['suite_add']);\n\t\t\t\t\t\tif(is_file($test_suite))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$test_suite = new pts_test_suite($test_suite);\n\t\t\t\t\t\t\tforeach($test_suite->get_contained_test_result_objects() as $tro)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_tests (AccountID, ScheduleID, TestProfile, TestArguments, TestDescription) VALUES (:account_id, :schedule_id, :test_profile, :test_arguments, :test_description)');\n\t\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t\t\t$stmt->bindValue(':test_profile', $tro->test_profile->get_identifier());\n\t\t\t\t\t\t\t\t$stmt->bindValue(':test_arguments', $tro->get_arguments());\n\t\t\t\t\t\t\t\t$stmt->bindValue(':test_description', $tro->get_arguments_description());\n\t\t\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\t\t\tphoromatic_add_activity_stream_event('tests_for_schedule', $PATH[0], 'added');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($PATH[1]) && $PATH[1] == 'remove' && !empty($PATH[2]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// REMOVE TEST\n\t\t\t\t\t\t$to_remove = explode(PHP_EOL, base64_decode($PATH[2]));\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id AND TestProfile = :test AND TestArguments = :test_args');\n\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':test', $to_remove[0]);\n\t\t\t\t\t\t$stmt->bindValue(':test_args', $to_remove[1]);\n\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\tphoromatic_add_activity_stream_event('tests_for_schedule', $to_remove[0] . ' - ' . $to_remove[1], 'removed');\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($PATH[1]) && $PATH[1] == 'delete-trigger' && !empty($PATH[2]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// REMOVE TRIGGER\n\t\t\t\t\t\t$trigger = pts_strings::sanitize(base64_decode($PATH[2]));\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_schedules_triggers WHERE AccountID = :account_id AND Trigger = :trigger AND ScheduleID = :schedule_id');\n\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':trigger', $trigger);\n\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\tif($result)\n\t\t\t\t\t\t\t$main .= '<h2 style=\"color: red;\">Trigger Removed: ' . $trigger . '</h2>';\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($PATH[1]) && in_array($PATH[1], array('activate', 'deactivate')) && verify_submission_token())\n\t\t\t\t\t{\n\t\t\t\t\t\tswitch($PATH[1])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'deactivate':\n\t\t\t\t\t\t\t\t$new_state = 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'activate':\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t$new_state = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// REMOVE TEST\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_schedules SET State = :new_state WHERE AccountID = :account_id AND ScheduleID = :schedule_id');\n\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':new_state', $new_state);\n\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\t$row['State'] = $new_state;\n\t\t\t\t\t\tphoromatic_add_activity_stream_event('schedule', $PATH[0], $PATH[1]);\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($_POST['do_manual_test_run']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_triggers (AccountID, ScheduleID, Trigger, TriggeredOn) VALUES (:account_id, :schedule_id, :trigger, :triggered_on)');\n\t\t\t\t\t\t$stmt->bindValue(':account_id',\t$_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':trigger', $_SESSION['UserName'] . ' - Manual Test Run - ' . date('H:i j M Y'));\n\t\t\t\t\t\t$stmt->bindValue(':triggered_on', phoromatic_server::current_time());\n\t\t\t\t\t\t$stmt->execute();\n\t\t\t\t\t\t$main .= '<h2 style=\"color: red;\">Manual Test Run Triggered</h2>';\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($_POST['skip_current_ticket']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_trigger_skips (AccountID, ScheduleID, Trigger) VALUES (:account_id, :schedule_id, :trigger)');\n\t\t\t\t\t\t$stmt->bindValue(':account_id',\t$_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':trigger', date('Y-m-d'));\n\t\t\t\t\t\t$stmt->execute();\n\t\t\t\t\t\t$main .= '<h2 style=\"color: red;\">Current Trigger To Be Ignored</h2>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$main .= '<h1>' . $row['Title'] . '</h1>';\n\t\t\t\t$main .= '<h3>' . $row['Description'] . '</h3>';\n\t\t\t\tswitch($row['RunPriority'])\n\t\t\t\t{\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t$prio = 'Low Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 100:\n\t\t\t\t\t\t$prio = 'Default Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 200:\n\t\t\t\t\t\t$prio = 'High Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t$prio = $row['RunPriority'] . ' Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t$main .= '<p>Priority: ' . $prio . '</p><p>This schedule was last modified on <strong>' . date('j F Y \\a\\t H:i', strtotime($row['LastModifiedOn'])) . '</strong> by <strong>' . $row['LastModifiedBy'] . '</strong>.';\n\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<p><a href=\"?sched/' . $PATH[0] . '\">Edit Schedule</a> | ';\n\n\t\t\t\t\tif($row['State'] == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a href=\"?schedules/' . $PATH[0] . '/deactivate' . append_token_to_url()  . '\">Deactivate Schedule</a>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a href=\"?schedules/' . $PATH[0] . '/activate' . append_token_to_url()  . '\">Activate Schedule</a>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '</p>';\n\t\t\t\t}\n\n\t\t\t\t$main .= '<hr />';\n\t\t\t\t$main .= '<h2>Schedule</h2>';\n\t\t\t\tif(!empty($row['ActiveOn']))\n\t\t\t\t{\n\t\t\t\t\t$active_days = explode(',', $row['ActiveOn']);\n\t\t\t\t\t$week = array('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');\n\t\t\t\t\tforeach($active_days as $i => &$day)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!isset($week[$day]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tunset($active_days[$i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$day = $week[$day];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch(count($active_days))\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t$day_show = implode(' and ', $active_days);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t$day_show = implode(', ', $active_days);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '<p>This test is scheduled to run every <strong>' . $day_show . '</strong> at <strong>' . str_replace('.', ':', $row['RunAt']) . '</strong>.</p>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$main .= '<p>This test schedule is not currently set to run a pre-defined time-based schedule.</p>';\n\t\t\t\t}\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\t\t\t\t\t$trigger_url = 'http://' . phoromatic_web_socket_server_ip() . '/event.php?type=trigger&user=' . $_SESSION['UserName'] . '&public_key=' . $row['PublicKey'] . '&trigger=XXX';\n\t\t\t\t\t$main .= '<p>This test schedule can be manually triggered to run at any time by calling <strong>' . $trigger_url . '</strong> where <em>XXX</em> is the trigger value to be used (if relevant, such as a time-stamp, Git/SVN commit number or hash, etc). There\\'s also the option of sub-targeting system(s) part of this schedule. One option is appending <em>&sub_target_this_ip</em> if this URL is being called from one of the client test systems to only sub-target the triggered testing on that client, among other options.</p>';\n\t\t\t\t\t$main .= '<p>If you wish to run this test schedule now, click the following button and the schedule will be run on all intended systems at their next earliest possible convenience.</p>';\n\t\t\t\t\t$main .= '<p><form action=\"?schedules/' . $PATH[0] . '\" name=\"manual_run\" method=\"post\">';\n\t\t\t\t\t$main .= '<input type=\"hidden\" name=\"do_manual_test_run\" value=\"1\" /><input type=\"submit\" value=\"Run Test Schedule Now\" onclick=\"return confirm(\\'Run this test schedule now?\\');\" />';\n\t\t\t\t\t$main .= '</form></p>';\n\t\t\t\t\t$main .= '<p><form action=\"?schedules/' . $PATH[0] . '\" name=\"skip_run\" method=\"post\">';\n\t\t\t\t\t$main .= '<input type=\"hidden\" name=\"skip_current_ticket\" value=\"1\" /><input type=\"submit\" value=\"Skip Current Test Ticket\" onclick=\"return confirm(\\'Skip any currently active test ticket on all systems?\\');\" />';\n\t\t\t\t\t$main .= '</form></p>';\n\t\t\t\t}\n\n\t\t\t\t$main .= '<hr />';\n\n\t\t\t\t$contexts = array('SetContextPreInstall' => 'Pre-Install', 'SetContextPostInstall' => 'Post-Install', 'SetContextPreRun' => 'Pre-Test-Run', 'SetContextPostRun' => 'Post-Test-Run');\n\t\t\t\t$scripts = 0;\n\t\t\t\tforeach($contexts as $context => $v)\n\t\t\t\t{\n\t\t\t\t\tif(isset($row[$context]) && !empty($row[$context]) && is_file(phoromatic_server::phoromatic_account_path($_SESSION['AccountID']) . 'context_' . $row[$context]))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scripts++;\n\t\t\t\t\t\t$main .= '<h2>' . $v . ' Context Script</h2>';\n\t\t\t\t\t\t$main .= '<blockquote>' . str_replace(PHP_EOL, '<br />', htmlentities(file_get_contents(phoromatic_server::phoromatic_account_path($_SESSION['AccountID']) . 'context_' . $row[$context]))) . '</blockquote>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(!empty($row['EnvironmentVariables']))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h1>Environment Variables</h1><ol>';\n\n\t\t\t\t\tforeach(explode(';', $row['EnvironmentVariables']) as $env)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<li><strong>' . $env . '</strong></li>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</ol>';\n\t\t\t\t}\n\n\t\t\t\tif($scripts > 0)\n\t\t\t\t\t$main .= '<hr />';\n\n\t\t\t\t$main .= '<h2>Tests To Run</h2>';\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t$result = $stmt->execute();\n\n\t\t\t\t$test_count = 0;\n\t\t\t\t$main .= '<p>';\n\t\t\t\twhile($row = $result->fetchArray())\n\t\t\t\t{\n\t\t\t\t\t$test_count++;\n\t\t\t\t\t$main .= $row['TestProfile'] . ($row['TestDescription'] != null ? ' - <em>' . $row['TestDescription'] . '</em>' : '') . (!PHOROMATIC_USER_IS_VIEWER ? ' <a href=\"?schedules/' . $PATH[0] . '/remove/' . base64_encode(implode(PHP_EOL, array($row['TestProfile'], $row['TestArguments']))) . '\">Remove Test</a>' : null) . '<br />';\n\n\t\t\t\t\t/*\n\t\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER && isset($_REQUEST['make_version_lock_tests']))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(strpos($row['TestProfile'], '.') == false)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$test_profile = new pts_test_profile($row['TestProfile']);\n\t\t\t\t\t\t\t$full_identifier = $test_profile->get_identifier(true);\n\n\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_schedules_tests SET TestProfile = :version_locked_tp WHERE AccountID = :account_id AND ScheduleID = :schedule_id AND TestProfile = :test');\n\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t\t$stmt->bindValue(':test', $row['TestProfile']);\n\t\t\t\t\t\t\t$stmt->bindValue(':version_locked_tp', $full_identifier);\n\t\t\t\t\t\t\t$result2 = $stmt->execute();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t}\n\t\t\t\t$main .= '</p>';\n\n\t\t\t\tif($test_count == 0)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<h3 style=\"text-transform: uppercase;\">No tests have been added yet for this test schedule.</h3>';\n\t\t\t\t}\n\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Add A Test</h2>';\n\t\t\t\t\t$main .= '<form action=\"?schedules/' . $PATH[0] . '\" name=\"add_test\" id=\"add_test\" method=\"post\">';\n\t\t\t\t\t$main .= '<select name=\"add_to_schedule_select_test\" id=\"add_to_schedule_select_test\" onchange=\"phoromatic_schedule_test_details(\\'\\');\">';\n\t\t\t\t\t$dc = pts_client::download_cache_path();\n\t\t\t\t\t$dc_exists = is_file($dc . 'pts-download-cache.json');\n\t\t\t\t\tif($dc_exists)\n\t\t\t\t\t{\n\t\t\t\t\t\t$cache_json = file_get_contents($dc . 'pts-download-cache.json');\n\t\t\t\t\t\t$cache_json = json_decode($cache_json, true);\n\t\t\t\t\t}\n\t\t\t\t\tforeach(array_merge(pts_tests::local_tests(), pts_openbenchmarking::available_tests(false, isset($_COOKIE['list_show_all_test_versions']) && $_COOKIE['list_show_all_test_versions'])) as $test)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(phoromatic_server::read_setting('show_local_tests_only'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$cache_checked = false;\n\t\t\t\t\t\t\tif($dc_exists)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif($cache_json && isset($cache_json['phoronix-test-suite']['cached-tests']))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(in_array($test, $cache_json['phoronix-test-suite']['cached-tests']))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$cache_checked = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!$cache_checked && pts_test_install_request::test_files_available_on_local_system($test) == false)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$main .= '<option value=\"' . $test . '\">' . $test . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</select>';\n\t\t\t\t\t$main .= pts_web_embed::cookie_checkbox_option_helper('list_show_all_test_versions', 'Show all available test profile versions.');\n\t\t\t\t\t$main .= '<p><div id=\"test_details\"></div></p>';\n\t\t\t\t\t$main .= '</form>';\n\n\t\t\t\t\t$local_suites = array();\n\t\t\t\t\tforeach(pts_file_io::glob(phoromatic_server::phoromatic_account_suite_path($_SESSION['AccountID']) . '*/suite-definition.xml') as $xml_path)\n\t\t\t\t\t{\n\t\t\t\t\t\t$id = basename(dirname($xml_path));\n\t\t\t\t\t\t$test_suite = new pts_test_suite($xml_path);\n\t\t\t\t\t\t$local_suites[$test_suite->get_title() . ' - ' . $id] = $id;\n\t\t\t\t\t}\n\t\t\t\t\t$official_suites = pts_test_suites::suites_on_disk(false, true);\n\n\t\t\t\t\t$main .= '<hr /><h2>Add A Suite:</h2>';\n\t\t\t\t\t$main .= '<form action=\"?schedules/' . $PATH[0] . '\" name=\"add_suite\" id=\"add_suite\" method=\"post\">';\n\t\t\t\t\t$main .= '<p><select name=\"suite_to_run\" id=\"suite_to_run_identifier\" onchange=\"phoromatic_show_basic_suite_details(\\'\\');\">';\n\t\t\t\t\tforeach(array_merge($local_suites, $official_suites) as $title => $id)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<option value=\"' . $id . '\">' . $title . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</select></p>';\n\t\t\t\t\t$main .= '<p><div id=\"suite_details\"></div></p>';\n\t\t\t\t\t$main .= '</form>';\n\t\t\t\t}\n\n\t\t\t\t$systems_in_schedule = phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $PATH[0]);\n\t\t\t\tif(!empty($systems_in_schedule))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Systems In Schedule</h2>';\n\t\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<p>To run this schedule on more systems, <a href=\"?sched/' . $PATH[0] . '\">edit the schedule</a>.</p>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\"><ul><li><h1>Systems</h1></li>';\n\n\t\t\t\t\tforeach($systems_in_schedule as $system_id)\n\t\t\t\t\t{\n\t\t\t\t\t\t$row = phoromatic_server::get_system_details($_SESSION['AccountID'], $system_id);\n\t\t\t\t\t\t$main .= '<a href=\"?systems/' . $row['SystemID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . $row['LocalIP'] . '</td><td><strong>' . $row['CurrentTask'] . '</strong></td><td><strong>Last Communication:</strong> ' . date('j F Y H:i', strtotime($row['LastCommunication'])) . '</td></tr></table></li></a>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</ul></div><hr />';\n\t\t\t\t}\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Trigger, TriggeredOn FROM phoromatic_schedules_triggers WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TriggeredOn DESC LIMIT 10');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t$test_result_result = $stmt->execute();\n\t\t\t\t$test_result_row = $test_result_result->fetchArray();\n\n\t\t\t\tif($test_result_row)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\">';\n\t\t\t\t\t$main .= '<ul><li><h1>Recent Triggers For This Schedule</h1></li>';\n\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a onclick=\"\"><li>' . $test_result_row['Trigger'] . '<br /><table><tr><td>' . phoromatic_server::user_friendly_timedate($test_result_row['TriggeredOn']) . '</td><td><a href=\"?schedules/' . $PATH[0] . '/delete-trigger/' . base64_encode($test_result_row['Trigger']) . '\">Remove Trigger</a></td></tr></table></li></a>';\n\n\t\t\t\t\t}\n\t\t\t\t\twhile($test_result_row = $test_result_result->fetchArray());\n\t\t\t\t\t$main .= '</ul>';\n\t\t\t\t\t$main .= '</div>';\n\t\t\t\t}\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY UploadTime DESC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t$test_result_result = $stmt->execute();\n\t\t\t\t$test_result_row = $test_result_result->fetchArray();\n\t\t\t\t$oldest_upload_time = 0;\n\n\t\t\t\tif($test_result_row)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\">';\n\t\t\t\t\t$main .= '<ul><li><h1>Recent Test Results For This Schedule</h1></li>';\n\t\t\t\t\t$results = 0;\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$oldest_upload_time = $test_result_row['UploadTime'];\n\t\t\t\t\t\tif($results > 100)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '<a href=\"?result/' . $test_result_row['PPRID'] . '\"><li>' . $test_result_row['Title'] . '<br /><table><tr><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_server::user_friendly_timedate($test_result_row['UploadTime']) .  '</td></tr></table></li></a>';\n\t\t\t\t\t\t$results++;\n\n\t\t\t\t\t}\n\t\t\t\t\twhile($test_result_row = $test_result_result->fetchArray());\n\t\t\t\t\t$main .= '</ul>';\n\t\t\t\t\t$main .= '</div>';\n\t\t\t\t}\n\t\t\t\t$num_results = phoromatic_results_for_schedule($PATH[0]);\n\n\t\t\t\tif($num_results > 1)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<p>Jump to the latest results from the past: ';\n\t\t\t\t\t$main .= '<select name=\"view_results_from_past\" id=\"view_results_from_past\" onchange=\"phoromatic_jump_to_results_from(\\'' . $PATH[0] . '\\', \\'view_results_from_past\\');\">';\n\t\t\t\t\t$oldest_upload_time = !empty($oldest_upload_time) ? strtotime($oldest_upload_time) : 0;\n\t\t\t\t\t$opts = array(\n\t\t\t\t\t\t'Week' => 7,\n\t\t\t\t\t\t'Three Weeks' => 21,\n\t\t\t\t\t\t'Month' => 30,\n\t\t\t\t\t\t'Quarter' => 90,\n\t\t\t\t\t\t'Six Months' => 180,\n\t\t\t\t\t\t'Year' => 365,\n\t\t\t\t\t\t);\n\t\t\t\t\tforeach($opts as $str_name => $time_offset)\n\t\t\t\t\t{\n\t\t\t\t\t\tif($oldest_upload_time > (time() - (86400 * $time_offset)))\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t$main .= '<option value=\"' . $time_offset . '\">' . $str_name . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '<option value=\"all\">All Results</option>';\n\t\t\t\t\t$main .= '</select>';\n\t\t\t\t\t$main .= '</p><hr />';\n\t\t\t\t}\n\t\t\t\t$main .= '<p><strong>' . $num_results . ' Test Results Available For This Schedule.</strong></p>';\n\t\t\t}\n\n\t\t\techo phoromatic_webui_main($main, phoromatic_webui_right_panel_logged_in());\n\t\t\techo phoromatic_webui_footer();\n\t\t\treturn;\n\t\t}\n\n\n\t\t$main = '<h1>Test Schedules</h1>\n\t\t<p>Test schedules are used for tests that are intended to be run on a recurring basis -- either daily or other defined time period -- or whenever a trigger/event occurs, like a new Git commit to a software repository being tracked. Test schedules can be run on any given system(s)/group(s) and can be later edited.</p>';\n\n\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t{\n\t\t\t$main .= '\n\t\t\t<hr />\n\t\t\t<h2>Create A Schedule</h2>\n\t\t\t<p><a href=\"?sched\">Create a schedule</a> followed by adding tests/suites to run for that schedule on the selected systems.</p>';\n\t\t}\n\n\t\t$main .= '<hr /><h2>Current Schedules</h2>';\n\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n\t\t\t<ul>\n\t\t\t<li><h1>Active Test Schedules</h1></li>';\n\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, Description, RunTargetSystems, RunTargetGroups, RunAt, ActiveOn FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 ORDER BY Title ASC');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\n\t\tif($row == false)\n\t\t{\n\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Schedules Found</li>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\t$stmt_tests = phoromatic_server::$db->prepare('SELECT COUNT(*) AS TestCount FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n\t\t\t\t$stmt_tests->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt_tests->bindValue(':schedule_id', $row['ScheduleID']);\n\t\t\t\t$result_tests = $stmt_tests->execute();\n\t\t\t\t$row_tests = $result_tests->fetchArray();\n\t\t\t\t$test_count = !empty($row_tests) ? $row_tests['TestCount'] : 0;\n\n\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler($test_count, 'Test') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . ' Total</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID'], 'TODAY'), 'Result') . ' Today</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n\t\t\t}\n\t\t\twhile($row = $result->fetchArray());\n\t\t}\n\n\t\t$main .= '</ul>\n\t\t</div>';\n\n\t\t$main .= '<hr /><h2>Schedule Overview</h2>';\n\t\t$week = array('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');\n\n\t\tforeach($week as $i => $day)\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, RunAt, RunTargetGroups, RunTargetSystems FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 AND ActiveOn LIKE :active_on ORDER BY RunAt,ActiveOn,Title ASC');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':active_on', '%' . $i . '%');\n\t\t\t$result = $stmt->execute();\n\t\t\t$has_matched = false;\n\t\t\twhile($row = $result->fetchArray())\n\t\t\t{\n\t\t\t\tif(!$has_matched)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<h3>' . $day . '</h3>' . PHP_EOL . '<p>';\n\t\t\t\t\t$has_matched = true;\n\t\t\t\t}\n\t\t\t\t$main .= '<em>' . $row['RunAt'] . '</em> <a href=\"?schedules/' . $row['ScheduleID'] . '\">' . $row['Title'] . '</a>';\n\t\t\t\t//$main .= $row['RunTargetSystems'] . ' ' . $row['RunTargetGroups'];\n\t\t\t\t$main .= '<br />';\n\t\t\t}\n\n\t\t\tif($has_matched)\n\t\t\t\t$main .= '</p>' . PHP_EOL;\n\t\t}\n\n\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n\t\t\t\t<ul>\n\t\t\t\t<li><h1>Deactivated Test Schedules</h1></li>';\n\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, Description, RunTargetSystems, RunTargetGroups, RunAt, ActiveOn FROM phoromatic_schedules WHERE AccountID = :account_id AND State < 1 ORDER BY Title ASC');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\n\t\tif($row == false)\n\t\t{\n\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Schedules Found</li>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\t$stmt_tests = phoromatic_server::$db->prepare('SELECT COUNT(*) AS TestCount FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n\t\t\t\t$stmt_tests->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt_tests->bindValue(':schedule_id', $row['ScheduleID']);\n\t\t\t\t$result_tests = $stmt_tests->execute();\n\t\t\t\t$row_tests = $result_tests->fetchArray();\n\t\t\t\t$test_count = !empty($row_tests) ? $row_tests['TestCount'] : 0;\n\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler($test_count, 'Test') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . ' Total</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID'], 'TODAY'), 'Result') . ' Today</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n\t\t\t}\n\t\t\twhile($row = $result->fetchArray());\n\t\t}\n\n\t\t$main .= '</ul>\n\t\t</div>';\n\n\t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n\t\techo phoromatic_webui_footer();\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2014 - 2022, Phoronix Media\n\tCopyright (C) 2014 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_users implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'Account Administrator';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\tif($_SESSION['AdminLevel'] > 3)\n\t\t{\n\t\t\techo phoromatic_error_page('Unauthorized Access', 'You aren\\'t an account administrator!');\n\t\t\treturn;\n\t\t}\n\n\t\tif(isset($_POST['group_name']) && verify_submission_token())\n\t\t{\n\t\t\tphoromatic_quit_if_invalid_input_found(array('group_name'));\n\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_accounts SET GroupName = :group_name WHERE AccountID = :account_id');\n\t\t\t$stmt->bindValue(':group_name', pts_strings::simple($_POST['group_name']));\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$result = $stmt->execute();\n\t\t}\n\t\tif(isset($_POST['username']) && isset($_POST['password']) && isset($_POST['confirm_password']) && isset($_POST['email']))\n\t\t{\n\t\t\tphoromatic_quit_if_invalid_input_found(array('username', 'email'));\n\t\t\t// REGISTER NEW USER\n\t\t\tif(strlen($_POST['username']) < 4 || strpos($_POST['username'], ' ') !== false)\n\t\t\t{\n\t\t\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied username is at least four characters long and contains no spaces.');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(in_array(strtolower($_POST['username']), array('admin', 'administrator')))\n\t\t\t{\n\t\t\t\tphoromatic_error_page('Oops!', $_POST['username'] . ' is a reserved and common username that may be used for other purposes, please make a different selection.');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(strlen($_POST['password']) < 6)\n\t\t\t{\n\t\t\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied password is at least six characters long.');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif($_POST['password'] != $_POST['confirm_password'])\n\t\t\t{\n\t\t\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied password matches the password confirmation.');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif($_POST['email'] == null || filter_var($_POST['email'], FILTER_VALIDATE_EMAIL) == false)\n\t\t\t{\n\t\t\t\tphoromatic_error_page('Oops!', 'Please enter a valid email address.');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$valid_user_name_chars = '1234567890-_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t\t\tfor($i = 0; $i < count($_POST['username']); $i++)\n\t\t\t{\n\t\t\t\tif(strpos($valid_user_name_chars, substr($_POST['username'], $i, 1)) === false)\n\t\t\t\t{\n\t\t\t\t\tphoromatic_error_page('Oops!', 'Please go back and ensure a valid user-name. The character <em>' . substr($_POST['username'], $i, 1) . '</em> is not allowed.');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$matching_users = phoromatic_server::$db->querySingle('SELECT UserName FROM phoromatic_users WHERE UserName = \\'' . SQLite3::escapeString($_POST['username']) . '\\'');\n\t\t\tif(!empty($matching_users))\n\t\t\t{\n\t\t\t\tphoromatic_error_page('Oops!', 'The user-name is already taken.');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif(!isset($_POST['admin_level']) || $_POST['admin_level'] == 1 || !is_numeric($_POST['admin_level']))\n\t\t\t{\n\t\t\t\tphoromatic_error_page('Oops!', 'Invalid administration level.');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Salt FROM phoromatic_accounts WHERE AccountID = :account_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$result = $stmt->execute();\n\t\t\t$row = $result->fetchArray();\n\t\t\t$account_salt = $row['Salt'];\n\t\t\t$user_id = pts_strings::random_characters(4, true);\n\t\t\t$salted_password = hash('sha256', $account_salt . $_POST['password']);\n\n\t\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' created a new account: ' . $user_id . ' - ' . $_SESSION['AccountID']);\n\n\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_users (UserID, AccountID, UserName, Email, Password, CreatedOn, LastIP, AdminLevel) VALUES (:user_id, :account_id, :user_name, :email, :password, :current_time, :last_ip, :admin_level)');\n\t\t\t$stmt->bindValue(':user_id', $user_id);\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':user_name', $_POST['username']);\n\t\t\t$stmt->bindValue(':email', $_POST['email']);\n\t\t\t$stmt->bindValue(':password', $salted_password);\n\t\t\t$stmt->bindValue(':last_ip', $_SERVER['REMOTE_ADDR']);\n\t\t\t$stmt->bindValue(':current_time', phoromatic_server::current_time());\n\t\t\t$stmt->bindValue(':admin_level', $_POST['admin_level']);\n\t\t\t$result = $stmt->execute();\n\n\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_user_settings (UserID, AccountID) VALUES (:user_id, :account_id)');\n\t\t\t$stmt->bindValue(':user_id', $user_id);\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$result = $stmt->execute();\n\n\t\t\tphoromatic_add_activity_stream_event('users', $_POST['username'], 'added');\n\t\t}\n\t\tif($_SESSION['AdminLevel'] == 1 && isset($_POST['update_user_levels']))\n\t\t{\n\t\t\tforeach(explode(',', $_POST['update_user_levels']) as $user_id)\n\t\t\t{\n\t\t\t\tif(isset($_POST['admin_level_' . $user_id]) && is_numeric($_POST['admin_level_' . $user_id]))\n\t\t\t\t{\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_users SET AdminLevel = :admin_level WHERE AccountID = :account_id AND UserID = :user_id');\n\t\t\t\t\t$stmt->bindValue(':admin_level', $_POST['admin_level_' . $user_id]);\n\t\t\t\t\t$stmt->bindValue(':user_id', $user_id);\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$main = '<h2>Users</h2>\n\t\t\t<p>Users associated with this account. Phoromatic users can be one of several tiers with varying privileges:</p>\n\t\t\t<ol>\n\t\t\t\t<li><strong>Group Administrator:</strong> The user with full control over the account, the one who originally signed up for the Phoromatic account.</li>\n\t\t\t\t<li><strong>Administrator:</strong> Additional users created by the group administrator with the same access rights as the group administrator.</li>\n\t\t\t\t<li><strong>Power Users:</strong> Additional users created by the group administrator with read/write/modify access to all standard Phoromatic functionality, aside from being able to create additional users.</li>\n\t\t\t\t<li><strong>Viewer:</strong> Additional users created by the group administrator that have access to view data but not to create new schedules, alter system settings, etc.</li>\n\t\t\t</ol>\n\t\t\t<div class=\"pts_phoromatic_info_box_area\">\n\n\t\t\t\t<div style=\"margin: 0 1%;\"><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"edit_user\" id=\"edit_user\" method=\"post\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><h1>All Users</h1></li>';\n\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_users WHERE AccountID = :account_id ORDER BY UserName ASC');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t$row = $result->fetchArray();\n\t\t\t\t\t$user_ids = array();\n\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\tswitch($row['AdminLevel'])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t$level = 'Group Administrator';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t$level = 'Administrator';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t$level = 'Power User';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 10:\n\t\t\t\t\t\t\t\t$level = 'Viewer';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tif($row['AdminLevel'] < 1)\n\t\t\t\t\t\t\t\t\t$level = 'Disabled';\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t$level = 'Unknown';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$main .= '<a href=\"#\"><li>' . $row['UserName'] . '<br /><table><tr><td>';\n\n\t\t\t\t\t\tif($row['AdminLevel'] == 1 || $_SESSION['AdminLevel'] != 1)\n\t\t\t\t\t\t\t$main .= '<strong>' . $level . '</strong>';\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$main .= '<select name=\"admin_level_' . $row['UserID'] . '\">';\n\n\t\t\t\t\t\t\tforeach(array(($row['AdminLevel'] * -1) => 'Disabled', 2 => 'Administrator', 3 => 'Power User', 10 => 'Viewer') as $level_id => $level_string)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$main .= '<option value=\"' . $level_id . '\"' . ($row['AdminLevel'] == $level_id ? ' selected=\"selected\"' : null) . '>' . $level_string . '</option>';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$main .= '</select>';\n\t\t\t\t\t\t\tarray_push($user_ids, $row['UserID']);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '</td><td>Last Login: ' . (empty($row['LastLogin']) ? 'Never' : date('j F Y H:i', strtotime($row['LastLogin']))) . '</td></tr></table></li></a>';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\n\n\t\t\t$main .= '</ul> &nbsp; <input type=\"hidden\" name=\"update_user_levels\" value=\"' . implode(',', $user_ids) . '\" /> <input name=\"submit\" value=\"Update User Levels\" type=\"submit\" /></form>\n\t\t\t\t</div>\n\t\t\t</div>';\n\n\t\t$main .= '<hr /><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"add_user\" id=\"add_user\" method=\"post\" onsubmit=\"return validate_new_user();\"><h2>Create Additional Account</h2>\n\t\t\t<p>Administrators can create extra accounts to be associated with this account\\'s systems, schedules, and test data.</p>\n\t\t\t<h3>User</h3>\n\t\t\t<p><input type=\"text\" name=\"username\" /></p>\n\t\t\t<h3>Password</h3>\n\t\t\t<p><input type=\"password\" name=\"password\" /></p>\n\t\t\t<h3>Confirm Password</h3>\n\t\t\t<p><input type=\"password\" name=\"confirm_password\" /></p>\n\t\t\t<h3>Email</h3>\n\t\t\t<p><input type=\"text\" name=\"email\" /></p>\n\t\t\t<h3>Administration Level</h3>\n\t\t\t<p><select name=\"admin_level\">';\n\n\t\tif($_SESSION['AdminLevel'] == 1)\n\t\t\t$main .= '<option value=\"2\">Administrator</option>';\n\n\t\tif($_SESSION['AdminLevel'] <= 2)\n\t\t\t$main .= '<option value=\"3\">Power User</option>';\n\t\tif($_SESSION['AdminLevel'] <= 3)\n\t\t\t$main .= '<option value=\"10\">Viewer</option>';\n\n\t\t$main .= '\n\t\t\t</select></p>\n\t\t\t<p><input name=\"submit\" value=\"Add User\" type=\"submit\" /></p>\n\t\t\t</form>';\n\n\t\t$group_name = phoromatic_server::account_id_to_group_name($_SESSION['AccountID']);\n\t\t$main .= '<hr /><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"group_name\" id=\"group_name\" method=\"post\"><h2>Group Name</h2>' . write_token_in_form() . '\n\t\t\t<p>A group name is an alternative, user-facing name for this set of accounts. The group name feature is primarily useful for being able to better distinguish results between groups when sharing of data within a large organization, etc. The group name is showed next to test results when viewing results from multiple groups/accounts.</p>\n\t\t\t<h3>Group Name</h3>\n\t\t\t<p><input type=\"text\" name=\"group_name\" value=\"' . $group_name . '\" /></p>\n\t\t\t<p><input name=\"submit\" value=\"Update Group Name\" type=\"submit\" /></p>\n\t\t\t</form>';\n\n\t\techo phoromatic_webui_header_logged_in();\n\t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n\t\techo phoromatic_webui_footer();\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2008 - 2022, Phoronix Media\n\tCopyright (C) 2008 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_welcome implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'Welcome';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\t$account_creation_string = phoromatic_server::read_setting('account_creation_alt');\n\t\t$account_creation_enabled = $account_creation_string == null;\n\n\t\tif($account_creation_enabled && isset($_POST['register_username']) && isset($_POST['register_password']) && isset($_POST['register_password_confirm']) && isset($_POST['register_email']))\n\t\t{\n\t\t\tphoromatic_quit_if_invalid_input_found(array('register_username', 'register_email'));\n\t\t\t$new_account = create_new_phoromatic_account($_POST['register_username'], $_POST['register_password'], $_POST['register_password_confirm'], $_POST['register_email'], (isset($_POST['seed_accountid']) ? $_POST['seed_accountid'] : null));\n\n\t\t\tif($new_account)\n\t\t\t{\n\t\t\t\techo phoromatic_webui_header(array('Account Created'), '');\n\t\t\t\t$box = '<h1>Account Created</h1>\n\t\t\t\t<p>Your account has been created. You may now log-in to begin utilizing the Phoronix Test Suite\\'s Phoromatic.</p>\n\t\t\t\t<form name=\"login_form\" id=\"login_form\" action=\"?login\" method=\"post\" onsubmit=\"return phoromatic_login(this);\">\n\t\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">User:</div> <input type=\"text\" name=\"username\" /></p>\n\t\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">Password:</div> <input type=\"password\" name=\"password\" /></p>\n\t\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">&nbsp;</div> <input type=\"submit\" value=\"Submit\" /></p>\n\t\t\t\t</form>';\n\t\t\t\techo phoromatic_webui_box($box);\n\t\t\t\techo phoromatic_webui_footer();\n\t\t\t}\n\t\t}\n\t\telse if(isset($_POST['username']) && isset($_POST['password']) && strtolower($_POST['username']) == 'rootadmin')\n\t\t{\n\t\t\tphoromatic_quit_if_invalid_input_found(array('username'));\n\t\t\t$admin_pw = phoromatic_server::read_setting('root_admin_pw');\n\t\t\tif(empty($admin_pw))\n\t\t\t{\n\t\t\t\techo phoromatic_webui_header(array('Action Required'), '');\n\t\t\t\t$box = '<h1>Root Admin Password Not Set</h1>\n\t\t\t\t<p>The root admin password has not yet been set for this system. It can be set by running on the system: <strong>phoronix-test-suite phoromatic.set-root-admin-password</strong>.</p>';\n\t\t\t\techo phoromatic_webui_box($box);\n\t\t\t\techo phoromatic_webui_footer();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if(hash('sha256', 'PTS' . $_POST['password']) != $admin_pw)\n\t\t\t{\n\t\t\t\techo phoromatic_webui_header(array('Invalid Password'), '');\n\t\t\t\t$box = '<h1>Root Admin Password Incorrect</h1>\n\t\t\t\t<p>The root admin password is incorrect.</p>';\n\t\t\t\techo phoromatic_webui_box($box);\n\t\t\t\techo phoromatic_webui_footer();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsession_regenerate_id();\n\t\t\t\t$_SESSION['UserID'] = 0;\n\t\t\t\t$_SESSION['UserName'] = 'RootAdmin';\n\t\t\t\t$_SESSION['AccountID'] = 0;\n\t\t\t\t$_SESSION['AdminLevel'] = -40;\n\t\t\t\t$_SESSION['CreatedOn'] = null;\n\t\t\t\t$_SESSION['CoreVersionOnSignOn'] = PTS_CORE_VERSION;\n\t\t\t\tsession_write_close();\n\t\t\t\theader('Location: /?admin');\n\t\t\t}\n\t\t}\n\t\telse if(isset($_POST['username']) && isset($_POST['password']))\n\t\t{\n\t\t\tphoromatic_quit_if_invalid_input_found(array('username'));\n\t\t\t$matching_user = phoromatic_server::$db->querySingle('SELECT UserName, Password, AccountID, UserID, AdminLevel, CreatedOn FROM phoromatic_users WHERE UserName = \\'' . SQLite3::escapeString($_POST['username']) . '\\'', true);\n\t\t\tif(!empty($matching_user))\n\t\t\t{\n\t\t\t\t$user_id = $matching_user['UserID'];\n\t\t\t\t$created_on = $matching_user['CreatedOn'];\n\t\t\t\t$user = $matching_user['UserName'];\n\t\t\t\t$hashed_password = $matching_user['Password'];\n\t\t\t\t$account_id = $matching_user['AccountID'];\n\t\t\t\t$admin_level = $matching_user['AdminLevel'];\n\n\t\t\t\tif($admin_level < 1)\n\t\t\t\t{\n\t\t\t\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' attempted to log-in to a disabled account: ' . $_POST['username']);\n\t\t\t\t\tphoromatic_error_page('Disabled Account', 'The log-in is not possible as this account has been disabled.');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif($user == $_POST['username'])\n\t\t\t\t{\n\t\t\t\t\t$account_salt = phoromatic_server::$db->querySingle('SELECT Salt FROM phoromatic_accounts WHERE AccountID = \\'' . $account_id . '\\'');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$account_salt = null;\n\t\t\t\t}\n\n\t\t\t\tif($account_salt != null && hash('sha256', $account_salt . $_POST['password']) == $hashed_password)\n\t\t\t\t{\n\t\t\t\t\tsession_regenerate_id();\n\t\t\t\t\t$_SESSION['UserID'] = $user_id;\n\t\t\t\t\t$_SESSION['UserName'] = $user;\n\t\t\t\t\t$_SESSION['AccountID'] = $account_id;\n\t\t\t\t\t$_SESSION['AdminLevel'] = $admin_level;\n\t\t\t\t\t$_SESSION['CreatedOn'] = $created_on;\n\t\t\t\t\t$_SESSION['Token'] = sha1($account_salt . (function_exists('random_bytes') ? bin2hex(random_bytes(32)) : rand()) . PTS_CORE_VERSION . time());\n\t\t\t\t\t$_SESSION['CoreVersionOnSignOn'] = PTS_CORE_VERSION;\n\t\t\t\t\t$account_salt = phoromatic_server::$db->exec('UPDATE phoromatic_users SET LastIP = \\'' . $_SERVER['REMOTE_ADDR'] . '\\', LastLogin = \\'' . phoromatic_server::current_time() . '\\' WHERE UserName = \"' . $matching_user['UserName'] . '\"');\n\t\t\t\t\tsession_write_close();\n\n\t\t\t\t\tpts_file_io::mkdir(phoromatic_server::phoromatic_account_path($account_id));\n\t\t\t\t\tpts_file_io::mkdir(phoromatic_server::phoromatic_account_result_path($account_id));\n\t\t\t\t\tpts_file_io::mkdir(phoromatic_server::phoromatic_account_system_path($account_id));\n\t\t\t\t\tpts_file_io::mkdir(phoromatic_server::phoromatic_account_suite_path($account_id));\n\n\t\t\t\t\techo phoromatic_webui_header(array('Welcome, ' . $user), '');\n\t\t\t\t\t$box = '<h1>Log-In Successful</h1>\n\t\t\t\t\t<p><strong>' . $user . '</strong>, we are now redirecting you to your account portal. If you are not redirected within a few seconds, please <a href=\"?main\">click here</a>.<script type=\"text/javascript\">window.location.href = \"?main\";</script></p>';\n\t\t\t\t\techo phoromatic_webui_box($box);\n\t\t\t\t\techo phoromatic_webui_footer();\n\t\t\t\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' successfully logged in as user: ' . $user);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' failed a log-in attempt as: ' . $_POST['username']);\n\t\t\t\t\tphoromatic_error_page('Invalid Information', 'The user-name or password did not match our records.');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' failed a log-in attempt as: ' . $_POST['username']);\n\t\t\t\tphoromatic_error_page('Invalid Information', 'The user-name was not found within our system.');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\techo phoromatic_webui_header(array(), '');\n\n\t\t\t$box = '<h1>Welcome</h1>\n\t\t\t<p>You must log-in to your Phoromatic account or create an account to access this service.</p>\n\t\t\t<p>Phoromatic is the remote management and test orchestration system for the <a href=\"https://github.com/phoronix-test-suite/phoronix-test-suite\">Phoronix Test Suite</a>. Phoromatic allows the automatic scheduling of tests, remote installation of new tests, and the management of multiple test systems over a network (LAN/WAN) all through an intuitive, easy-to-use web interface. Tests can be scheduled to automatically run on a routine basis across multiple test systems. The test results are then available from this centralized location along with other features for interacting with Phoronix Test Suite systems.</p>\n\t\t\t<p>Phoromatic makes it very easy to provide for automated scheduling of tests on multiple systems, is extremely extensible, allows various remote testing possibilities, makes it very trivial to manage multiple systems, and centralizes result management within an organization.</p>\n\t\t\t<p id=\"features_link\"><a onclick=\"javascript:document.getElementById(\\'features\\').style.display = \\'block\\'; document.getElementById(\\'features_link\\').style.display = \\'none\\';\">Learn more about Phoromatic</a>.</p>\n\t\t\t<div style=\"display: none;\" id=\"features\">\n\n<h1>Phoromatic Benefits</h1>\n<h3>Automated Scheduling</h3>\n<p>Whether it be every evening at 6:00PM, once every Thursday at 10:00AM or somewhere in between, Phoromatic can schedule tests to be run at user-defined intervals. The testing schedules can be updated through Phoromatic web interface. After the test(s) have run, the results will be immediately uploaded to Phoromatic. Phoromatic also allows external &quot;triggers&quot; that can be initiated via a URL if wanting to automatically initiate testing when a Git commit occurs or some other external event.</p>\n<h3>Extensible</h3>\n<p>Any test profile or test suite that is compliant with the Phoronix Test Suite specifications will work with Phoromatic. Phoromatic is able to leverage the hundreds of test profiles and dozens of test suites currently in the Phoronix Test Suite via <a href=\"http://openbenchmarking.org/\">OpenBenchmarking.org</a>, along with any custom/proprietary test profiles you or your company utilize.</p>\n<h3>Remote Testing</h3>\n<p>Once the test system is setup, all testing and management of that system can be done remotely. There is no need to excute Phoronix Test Suite commands locally using the GUI or command line version, but instead nearly all of the same features are accessible from the Phoromatic interface. The Phoromatic Server can also control waking systems via WoL when tests are issued, shutting down systems when idling, and other management tasks.</p>\n<h3>Multi-System Support</h3>\n<p>A single Phoromatic account is able to manage multiple test systems running the Phoronix Test Suite. Phoromatic supports grouping together test systems, tagging, and other features to support effectively managing many test systems. From the Phoromatic interface, installed system hardware and software from a given system can also be viewed. Systems can be spread across a private LAN or spread across several locations via the Internet.</p>\n<h3>Turn-Key Deployment</h3>\n<p>No additional software needs to be installed to support Phoromatic; all that is needed is the Phoronix Test Suite and its dependencies. New test systems can easily be synced with a given Phoromatic account by running a single command from the Phoronix Test Suite client.</p>\n<p>The Phoromatic Server can be quickly and easily deployed with the only new presented dependency compared to Phoronix Test Suite clients is on PHP SQLite support. With modern versions of PHP-CLI, the Phoromatic Server is completely self-hosting for its web service.</p>\n<p>Phoronix Test Suite client systems with Avahi / zero-conf networking support can automatically find Phoromatic Servers on their LAN for connecting to accounts, obtaining download caches, and utilizing other Phoromatic functionality.</p>\n<h3>Result Management</h3>\n<p>Test results are automatically uploaded to the Phoromatic account and remain private unless you opt to upload them to OpenBenchmarking.org for public reference. From the Phoromatic interface, results from multiple test systems can easily be compared and multiple results from the same systems can be used to track performance over time. There are also options to look at the statistical significance of the results and other features to efficienctly and effectively analyze the system performance.</p>\n<h3>Multi-User Support</h3>\n<p>If deploying a Phoromatic Server within an organization, there is also support for allowing multiple user accounts to be associated with the same data and other systems.</p>\n<h3>Local Caching</h3>\n<p>The Phoromatic Server automatically allows for caching of Phoronix Test Suite files and OpenBenchmarking.org test profile/suite caches. This allows for the Phoronix Test Suite to be more easily deployed within organizations where the systems otherwise do not have Internet access for obtaining the necessary support files.</p>\n<h3>Dashboard</h3>\n<p>The Phoromatic dashboard allows viewing the state of all connected systems in one concise view from seeing their test state to hardware/software details, estimated time to completion, and other system information.</p>\n<h3>E-Mail Notifications</h3>\n<p>The Phoromatic Server is able to send out notifications of new results being available, systems that appear hung, immediate alerts of system errors, and other important information so that it can be dealt with in a timely manner (assuming your Phoromatic server has a working mail server).</p>\n<h1>Getting Started</h1>\n<p>Getting started can be as easy as <strong>phoronix-test-suite start-phoromatic-server</strong> to deploy a Phoromatic Server with HTTP access for the UI. Setting up client systems can be as simple as <strong>phoronix-test-suite phoromatic.connect</strong> and there are systemd files available for easy access to. <strong>More details can be found via the <a href=\"https://github.com/phoronix-test-suite/phoronix-test-suite/blob/master/documentation/phoronix-test-suite.md#phoronix-test-suite-phoromatic\"><strong>Phoronix Test Suite documentation</strong></a>.</strong></p>\n<p>The Phoronix Test Suite source-code is <a href=\"https://github.com/phoronix-test-suite/phoronix-test-suite/\">hosted via GitHub</a>.</p>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<h1>Log-In</h1>\n\t\t\t<form name=\"login_form\" id=\"login_form\" action=\"?login\" method=\"post\" onsubmit=\"return phoromatic_login(this);\">\n\t\t\t<ul class=\"r_form_wrapper\">\n\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t<label for=\"u_username\">Username</label>\n\t\t\t\t\t<input type=\"text\" name=\"username\" id=\"u_username\" required/>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t<label for=\"u_password\">Password</label>\n\t\t\t\t\t<input type=\"password\" name=\"password\" id=\"u_password\" required/>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t<input type=\"submit\" value=\"Submit\" />\n\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</form>\n\t\t\t<hr />\n\t\t\t<h1>Register</h1>';\n\n\t\t\tif(!empty($account_creation_string))\n\t\t\t{\n\t\t\t\t$box .= '<p>' . $account_creation_string . '</p>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\n\t\t\t\t$box .= '<p id=\"register_link\"><a onclick=\"javascript:document.getElementById(\\'register\\').style.display = \\'block\\'; document.getElementById(\\'register_link\\').style.display = \\'none\\';\">Create A New Account</a></p>\n\t\t\t<div style=\"display: none;\" id=\"register\">\n\n\n\t\t\t\t\t<p>To create a new account for this Phoromatic server, simply fill out the form below. Phoromatic also allows multi-user accounts. If wishing to be added to an existing Phoromatic account as a separate user, contact the appropriate party and request said access. Within a Phoromatic account with appropriate credentials, additional sub-accounts can be created/managed from the &quot;Users&quot; page.</p>';\n\t\t\t\t\t$box .= '<form name=\"register_form\" id=\"register_form\" action=\"?register\" method=\"post\" onsubmit=\"return phoromatic_initial_registration(this);\">\n\n\t\t\t\t\t<ul class=\"r_form_wrapper\">\n\t\t\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t\t\t<label for=\"r_username\">Username</label>\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"seed_accountid\" value=\"' . (isset($_GET['seed_accountid']) ? $_GET['seed_accountid'] : null) . '\" />\n\t\t\t\t\t\t\t<input type=\"text\" name=\"register_username\" id=\"r_username\" required/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t\t\t<label for=\"r_password\">Password</label>\n\t\t\t\t\t\t\t<input type=\"password\" name=\"register_password\" id=\"r_password\" required/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t\t\t<label for=\"c_password\">Confirm Password</label>\n\t\t\t\t\t\t\t<input type=\"password\" name=\"register_password_confirm\" id=\"c_password\" required/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t\t\t<label for=\"r_email\">Email Address</label>\n\t\t\t\t\t\t\t<input type=\"email\" name=\"register_email\" id=\"r_email\" required/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class=\"label_input_wrapper\">\n\t\t\t\t\t\t\t<input type=\"submit\" value=\"Create Account\" />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\n\t\t\t\t\t</form></div>';\n\t\t\t}\n\t\t\t$box .= '<hr />\n\t\t\t<h1>View Public Results</h1>\n\t\t\t<p>For accounts that opted to share their test results publicly, you can directly <a href=\"public.php\">view the public test results</a>.</p><hr />';\n\n\t\t\techo phoromatic_webui_box($box);\n\t\t\techo phoromatic_webui_footer();\n\t\t}\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2013 - 2022, Phoronix Media\n\tCopyright (C) 2013 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\ndefine('PHOROMATIC_SERVER_WEB_INTERFACE', true);\ndefine('PAGE_LOAD_START_TIME', microtime(true));\n\nfunction phoromatic_quit_if_invalid_input_found($input_keys = null)\n{\n\tif(empty($input_keys))\n\t{\n\t\t// Check them all if not being selective about what keys to check\n\t\t$input_keys = array_keys($_REQUEST);\n\t}\n\t// backup as to sanitization and stripping elsewhere, safeguard namely check for things like < for fields that shouldn't have it\n\t// plus a few simple backups as safeguards for words that really have no legit relevance within Phoromatic...\n\n\tforeach(array('<', 'document.write', '../', 'onerror', 'onload', 'alert(') as $invalid_string)\n\t{\n\t\tforeach($input_keys as $key)\n\t\t{\n\t\t\tif(isset($_REQUEST[$key]) && !empty($_REQUEST[$key]))\n\t\t\t{\n\t\t\t\tforeach(pts_arrays::to_array($_REQUEST[$key]) as $val_to_check)\n\t\t\t\t{\n\t\t\t\t\tif(stripos($val_to_check, $invalid_string) !== false)\n\t\t\t\t\t{\n\t\t\t\t\t\techo '<strong>Exited due to invalid input ( ' . $invalid_string . ') attempted:</strong> ' . htmlspecialchars($val_to_check);\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nfunction phoromatic_init_web_page_setup()\n{\n\tif(session_save_path() == null || !is_writable(session_save_path()))\n\t{\n\t\t// This is needed since on at least EL6 by default there is no session_save_path set\n\t\tif(is_writable('/var/lib/php') && is_dir('/var/lib/php'))\n\t\t{\n\t\t\tsession_save_path('/var/lib/php');\n\t\t}\n\t\telse if(is_writable('/var/lib/php5') && is_dir('/var/lib/php5'))\n\t\t{\n\t\t\tsession_save_path('/var/lib/php5');\n\t\t}\n\t\telse if(is_writable('/tmp'))\n\t\t{\n\t\t\tsession_save_path('/tmp');\n\t\t}\n\t\telse if(is_writable('.'))\n\t\t{\n\t\t\tsession_save_path('.');\n\t\t}\n\t}\n\n\tdefine('PHOROMATIC_SERVER', true);\n\tif(defined('PTS_IS_DEV_BUILD') && PTS_IS_DEV_BUILD)\n\t{\n\t\terror_reporting(E_ALL);\n\t}\n\tsession_start();\n\n\tdefine('PTS_MODE', 'WEB_CLIENT');\n\tdefine('PTS_AUTO_LOAD_OBJECTS', true);\n\tdefine('PHOROMATIC_USER_IS_VIEWER', !isset($_SESSION['AdminLevel']) || $_SESSION['AdminLevel'] >= 10 || $_SESSION['AdminLevel'] < 1 ? true : false);\n\n\tinclude('../../pts-core.php');\n\tpts_core::init();\n}\nfunction phoromatic_webui_header($left_items, $right = null)\n{\n\t$ret = PHP_EOL . '<div id=\"pts_phoromatic_top_header\">\n\t<ul>\n\t<li><a href=\"?\"><img style=\"vertical-align: middle;\" class=\"img_logo_pg\" src=\"images/phoromatic_logo.svg\" /></a>';\n\n\tif(isset($_SESSION['AdminLevel']) &&$_SESSION['AdminLevel'] > 0 && isset($_SESSION['AccountID']) && !empty($_SESSION['AccountID']))\n\t{\n\t\t$ret .= '<ul id=\"pts_phoromatic_info\">';\n\t\t$ret .= '<li><a class=\"ph_date\" href=\"#\">' . date('H:i T - j F') . '</a></li>';\n\t\t$group_name = phoromatic_server::account_id_to_group_name($_SESSION['AccountID']);\n\t\tif($group_name != null)\n\t\t{\n\t\t\t$ret .= '<li><a href=\"#\">' . $group_name . '</a></li>';\n\t\t}\n\t\t$ret .= '</ul>';\n\t}\n\t$ret .= '</li>';\n\n\t//$ret .= '<ul>';\n\tforeach($left_items as $i => $item)\n\t{\n\t\tif(is_array($item))\n\t\t{\n\t\t\t$ret .= '<li>' . $i;\n\n\t\t\tif(!empty($item))\n\t\t\t{\n\t\t\t\t$ret .= '<ul>';\n\t\t\t\tforeach($item as $sub_item)\n\t\t\t\t{\n\t\t\t\t\t$ret .= '<li>' . $sub_item . '</li>';\n\t\t\t\t}\n\t\t\t\t$ret .= '</ul>';\n\t\t\t}\n\t\t\t$ret .= '</li>' . PHP_EOL;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$ret .= '<li>' . $item . '</li>' . PHP_EOL;\n\t\t}\n\t}\n\t$ret .= '<li><div id=\"phoromatic_result_selected_info_box\"></div> <a href=\"#\" onclick=\"javascript:phoromatic_generate_comparison(\\'?result/\\');\"><div id=\"phoromatic_result_compare_info_box\">Compare</div></a> <a href=\"#\" onclick=\"javascript:phoromatic_delete_results(\\'?results/delete/\\'); return false;\"><div id=\"phoromatic_result_delete_box\">Delete</div></a></li>';\n\t$ret .= '</ul>';\n\n\tif($right != null)\n\t{\n\t\t$ret .= '<div id=\"pts_phoromatic_top_header_right\">' . $right .'</div>';\n\t}\n\n\t$ret .=' </div>';\n\n\treturn $ret;\n}\nfunction phoromatic_get_posted_var($name, $default_value = null)\n{\n\tif(isset($_POST[$name]))\n\t{\n\t\tphoromatic_quit_if_invalid_input_found(array($name));\n\t}\n\n\treturn isset($_POST[$name]) ? $_POST[$name] : null;\n}\nfunction phoromatic_webui_main($main, $right = null)\n{\n\treturn '<div id=\"pts_phoromatic_main\">' . ($right != null ? '<div id=\"pts_phoromatic_menu_right\">' . $right . '</div>' : null) . '<div id=\"pts_phoromatic_main_area\">' . $main . '</div><div style=\"clear: both;\"></div></div>';\n}\nfunction phoromatic_webui_box(&$box)\n{\n\treturn '<div id=\"pts_phoromatic_main_box\"><div id=\"pts_phoromatic_main_box_inside\">' . $box . '</div></div>';\n}\nfunction phoromatic_results_for_schedule($schedule_id, $limit_results = false)\n{\n\tswitch($limit_results)\n\t{\n\t\tcase 'TODAY':\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(UploadID) As UploadCount FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id AND UploadTime LIKE :today_date');\n\t\t\t$stmt->bindValue(':today_date', date('Y-m-d') . '%');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(UploadID) As UploadCount FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id');\n\t\t\tbreak;\n\t}\n\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$stmt->bindValue(':schedule_id', $schedule_id);\n\t$test_result_result = $stmt->execute();\n\t$row = $test_result_result->fetchArray();\n\n\treturn empty($row) ? 0 : $row['UploadCount'];\n}\nfunction phoromatic_schedule_activeon_string($active_on, $active_at = null)\n{\n\tif(!empty($active_on))\n\t{\n\t\t$active_days = explode(',', $active_on);\n\t\t$week = array('M', 'T', 'W', 'TH', 'F', 'S', 'SU');\n\t\tforeach($active_days as $i => &$day)\n\t\t{\n\t\t\tif(!isset($week[$day]))\n\t\t\t{\n\t\t\t\tunset($active_days[$i]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$day = $week[$day];\n\t\t\t}\n\t\t}\n\t\treturn implode(' ', $active_days) . (!empty($active_at) ? ' @ ' . str_replace('.', ':', $active_at) : null );\n\t}\n}\nfunction phoromatic_webui_footer()\n{\n\treturn '<div id=\"pts_phoromatic_bottom_footer\">\n\t<div style=\"float: left; padding: 5px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewbox=\"0 0 76 41\" width=\"76\" height=\"41\" preserveAspectRatio=\"xMinYMin meet\">\n  <path d=\"m74 22v9m-5-16v16m-5-28v28m-23-2h12.5c2.485281 0 4.5-2.014719 4.5-4.5s-2.014719-4.5-4.5-4.5h-8c-2.485281 0-4.5-2.014719-4.5-4.5s2.014719-4.5 4.5-4.5h12.5m-21 5h-11m11 13h-2c-4.970563 0-9-4.029437-9-9v-20m-24 40v-20c0-4.970563 4.0294373-9 9-9 4.970563 0 9 4.029437 9 9s-4.029437 9-9 9h-9\" stroke=\"#696969\" stroke-width=\"4\" fill=\"none\" />\n</svg> &nbsp;</div>\n<p style=\"margin: 6px 15px;\"><strong>' . date('H:i T - j F Y') . '</strong>' . (PTS_IS_DEV_BUILD ? ' &nbsp; [' . round(microtime(true) - PAGE_LOAD_START_TIME, 2) . 's Page Load Time]' : null) . '<br />Copyright &copy; 2008 - ' . date('Y') . ' by <a href=\"http://www.phoronix-media.com/\">Phoronix Media</a>. All rights reserved.<br />\nAll trademarks used are properties of their respective owners.<br />' . pts_core::program_title() . ' (PHP ' . PHP_VERSION . ')</p></div> <script type=\"text/javascript\"> phoromatic_checkbox_toggle_result_comparison(\\'\\'); </script>';\n}\nfunction phoromatic_add_activity_stream_event($activity_event, $activity_event_id, $activity_event_type)\n{\n\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_activity_stream (AccountID, ActivityTime, ActivityCreator, ActivityCreatorType, ActivityEvent, ActivityEventID, ActivityEventType) VALUES (:account_id, :activity_time, :activity_creator, :activity_creator_type, :activity_event, :activity_event_id, :activity_event_type)');\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$stmt->bindValue(':activity_time', phoromatic_server::current_time());\n\t$stmt->bindValue(':activity_creator', $_SESSION['UserName']);\n\t$stmt->bindValue(':activity_creator_type', 'USER');\n\t$stmt->bindValue(':activity_event', $activity_event);\n\t$stmt->bindValue(':activity_event_id', $activity_event_id);\n\t$stmt->bindValue(':activity_event_type', $activity_event_type);\n\treturn $stmt->execute();\n}\nfunction phoromatic_tracker_page_relevant()\n{\n\t$stmt = phoromatic_server::$db->prepare('SELECT RunTargetSystems, RunTargetGroups, (SELECT COUNT(*) FROM phoromatic_results WHERE ScheduleID = phoromatic_schedules.ScheduleID) AS UploadedResultCount FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 ORDER BY Title ASC');\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$result = $stmt->execute();\n\t$row = $result->fetchArray();\n\n\tif($row)\n\t{\n\t\tdo\n\t\t{\n\t\t\tif(is_numeric($row['RunTargetSystems']) && $row['UploadedResultCount'] > (($row['RunTargetSystems'] + $row['RunTargetGroups'] + 1) * 7))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\twhile($row = $result->fetchArray());\n\t}\n\n\treturn false;\n}\nfunction phoromatic_webui_header_logged_in()\n{\n\t$html_links = array();\n\tif($_SESSION['AdminLevel'] == -40)\n\t{\n\t\t$pages = array('Admin', 'Admin_Config', 'Admin_Data', 'Logout');\n\t}\n\telse if($_SESSION['AdminLevel'] > 0)\n\t{\n\t\t$sub_main_menu = array();\n\t\t$sub_tests_menu = array();\n\t\t$sub_systems_menu = array();\n\t\t$sub_testing_menu = array();\n\t\t$sub_results_menu = array();\n\n\t\tif(phoromatic_account_system_count() > 0)\n\t\t{\n\t\t\t$sub_systems_menu[] = 'Dashboard';\n\t\t\t$sub_systems_menu[] = 'Maintenance Table';\n\t\t\t$sub_systems_menu[] = 'Component Table';\n\t\t}\n\n\t\t//$sub_main_menu[] = '<a href=\"?tests\">Test Profiles</a>';\n\t\tif(isset($_SESSION['AdminLevel']) && $_SESSION['AdminLevel'] < 4)\n\t\t{\n\t\t\t$sub_main_menu[] = 'Users';\n\t\t}\n\n\t\tarray_push($sub_main_menu, 'Settings', '<a href=\"?account_activity\">Account Activity</a>', 'Logout');\n\t\t$sub_testing_menu[] = '<a href=\"?schedules\">Test Schedules</a>';\n\n\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t{\n\t\t\tif(phoromatic_server::read_setting('allow_test_profile_creation') == 1)\n\t\t\t{\n\t\t\t\tarray_push($sub_tests_menu, '<a href=\"?create_test\">Create New Test Profile</a>');\n\t\t\t}\n\t\t\tarray_push($sub_tests_menu, '<a href=\"?build_suite\">Build Test Suite</a>');\n\t\t\tarray_push($sub_testing_menu, '<a href=\"?sched\">Create A Schedule</a>', '<a href=\"?benchmark\">Run A Benchmark</a>');\n\t\t}\n\n\t\tif(phoromatic_tracker_page_relevant())\n\t\t{\n\t\t\t$sub_results_menu[] = 'Tracker';\n\t\t}\n\t\t$sub_results_menu[] = '<a href=\"/rss.php?user=' . $_SESSION['UserID'] . '&amp;v=' . sha1($_SESSION['CreatedOn']) . '\">Results Feed <img src=\"images/rss.svg\" width=\"16\" height=\"16\" /></a>';\n\n\t\t$pages = array('Main' => $sub_main_menu, 'Systems' => $sub_systems_menu, 'Tests' => $sub_tests_menu, '<a href=\"/?testing\">Testing</a>' => $sub_testing_menu, 'Results' => $sub_results_menu, '<form action=\"/?search\" method=\"post\" id=\"search\"><input type=\"search\" name=\"search\" id=\"seach_input\" size=\"16\" /> <input type=\"submit\" name=\"sa\" value=\"Search\" /><div class=\"search_expander\"></div></form>');\n\t}\n\n\tforeach($pages as $title => $page)\n\t{\n\t\tif(is_array($page) || empty($page))\n\t\t{\n\t\t\t$menu_row = array();\n\t\t\tforeach($page as $sub_page)\n\t\t\t{\n\t\t\t\t$menu_row[] = menu_item_to_html($sub_page);\n\t\t\t}\n\t\t\t$html_links[menu_item_to_html($title)] = $menu_row;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$html_links[] = menu_item_to_html($page);\n\t\t}\n\t}\n\n\treturn phoromatic_webui_header($html_links, null);\n}\nfunction menu_item_to_html($page)\n{\n\tif(strpos($page, '</') !== false)\n\t\treturn $page;\n\n\t$page_link = strtolower($page);\n\tif(($x = strpos($page_link, '<br />')) !== false)\n\t{\n\t\t$page_link = trim(substr($page_link, $x + 6));\n\t}\n\t$page_link = str_replace(' ', '_', $page_link);\n\n\tif(strtolower($page) == PAGE_REQUEST)\n\t{\n\t\treturn '<a href=\"?' . $page_link . '\"><u>' . str_replace('_', ' ', $page) . '</u></a>';\n\t}\n\telse\n\t{\n\t\treturn '<a href=\"?' . $page_link . '\">' . str_replace('_', ' ', $page) . '</a>';\n\t}\n}\nfunction phoromatic_webui_right_panel_logged_in($add = null)\n{\n\t$right = null;\n\tif($_SESSION['AdminLevel'] == -40)\n\t{\n\t\t$right .= '<h3>Phoromatic Server</h3><hr /><p><strong>' . date('H:i T - j F Y') . '</p>';\n\t}\n\telse if($_SESSION['AdminLevel'] > 0)\n\t{\n\t\t//$right .= '<a href=\"#\" onclick=\"javascript:phoromatic_generate_comparison(\\'?result/\\');\"><div id=\"phoromatic_result_compare_info_box\"></div></a> <a href=\"#\" onclick=\"javascript:phoromatic_delete_results(\\'?results/delete/\\'); return false;\"><div id=\"phoromatic_result_delete_box\">Delete Selected Results</div></a>';\n\t\tif(($bad_systems = phoromatic_server::systems_appearing_down()) != false)\n\t\t{\n\t\t\t$right .= '<ul><li><span class=\"alert\">Systems Needing Attention</span></li>';\n\t\t\tforeach($bad_systems as $system)\n\t\t\t{\n\t\t\t\t$right .= '<li><a href=\"?systems/' . $system . '\">' . phoromatic_server::system_id_to_name($system) . '</a></li>';\n\t\t\t}\n\t\t\t$right .= '</ul><hr />';\n\t\t}\n\n\t\t$right .= $add;\n\n\t\tif($add == null)\n\t\t{\n\t\t\t$recently_active_systems = phoromatic_server::recently_active_systems($_SESSION['AccountID']);\n\t\t\tif(!empty($recently_active_systems))\n\t\t\t{\n\t\t\t\t$right .= '<ul><li>Recently Active Systems</li>';\n\n\t\t\t\tforeach($recently_active_systems as &$row)\n\t\t\t\t{\n\t\t\t\t\t$right .= '<li><a href=\"?systems/' . $row['SystemID'] . '\">' . $row['Title'] . '</a></li>';\n\t\t\t\t}\n\n\t\t\t\t$right .= '</ul><hr />';\n\t\t\t}\n\n\t\t\t$right .= '\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Today\\'s Scheduled Events</li>';\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, RunAt FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1  AND ActiveOn LIKE :active_on ORDER BY RunAt,Title ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':active_on', '%' . (date('N') - 1) . '%');\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\t$row = $result->fetchArray();\n\n\t\t\t\tif($row == false)\n\t\t\t\t{\n\t\t\t\t\t$right .= '</ul><p style=\"text-align: left; margin: 6px 10px;\">No Events Found</p>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$right .= '<li>' . $row['RunAt'] . ' <a href=\"?schedules/' . $row['ScheduleID'] . '\">' . $row['Title'] . '</a></li>';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t\t$right .= '</ul>';\n\t\t\t\t}\n\t\t}\n\n\t\t$system_count = phoromatic_account_system_count();\n\t\t$schedule_count = phoromatic_account_schedule_count();\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(UploadID) AS ResultCount FROM phoromatic_results WHERE AccountID = :account_id');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$result_count = $row['ResultCount'];\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(ActivityTime) AS ActivityCount FROM phoromatic_activity_stream WHERE AccountID = :account_id AND ActivityTime LIKE :today_date');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$stmt->bindValue(':today_date', date('Y-m-d') . '%');\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$activity_count = $row['ActivityCount'];\n\n\t\t$group_name = phoromatic_server::account_id_to_group_name($_SESSION['AccountID']);\n\t\tif($group_name != null)\n\t\t{\n\t\t\t$group_name = '<strong>' . $group_name . '</strong><br />';\n\t\t}\n\n\t\t$right .= '<hr /><p><strong>' . date('H:i T - j F Y') . '</strong><br />' . $group_name . '<a href=\"?systems\">' . $system_count . ' System' . ($system_count == 1 ? '' : 's') . '</a><br /><a href=\"?schedules\">' . $schedule_count . ' Schedule' . ($schedule_count == 1 ? '' : 's') . '</a><br /><a href=\"?results\">' . $result_count . ' Result' . ($result_count == 1 ? '' : 's') . '</a>';\n\t\t$right .= ' <a href=\"/rss.php?user=' . $_SESSION['UserID'] . '&amp;v=' . sha1($_SESSION['CreatedOn']) . '\"><img src=\"images/rss.svg\" width=\"16\" height=\"16\" /></a>';\n\t\t$right .= '<br /><a href=\"?account_activity\">' . $activity_count . ' Activity Events Today</a></p>';\n\t}\n\n\treturn $right;\n}\nfunction phoromatic_account_schedule_count()\n{\n\tstatic $schedule_count = 0;\n\n\tif($schedule_count == 0)\n\t{\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(Title) AS ScheduleCount FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$schedule_count = $row['ScheduleCount'];\n\t}\n\treturn $schedule_count;\n}\nfunction phoromatic_account_system_count()\n{\n\tstatic $sys_count = 0;\n\n\tif($sys_count == 0)\n\t{\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(Title) AS SystemCount FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$sys_count = $row['SystemCount'];\n\t}\n\treturn $sys_count;\n}\nfunction phoromatic_web_socket_server_ip()\n{\n\t$server_ip = $_SERVER['HTTP_HOST'];\n\tif(($x = strpos($server_ip, ':')) !== false)\n\t{\n\t\t$server_ip = substr($server_ip, 0, $x);\n\t}\n\n\tif($server_ip == 'localhost' || $server_ip == '0.0.0.0')\n\t{\n\t\t$local_ip = phodevi::read_property('network', 'ip');\n\t\tif($local_ip)\n\t\t{\n\t\t\t$server_ip = $local_ip;\n\t\t}\n\t}\n\t// getenv('PTS_WEBSOCKET_PORT')\n\treturn $server_ip . ':' . $_SERVER['SERVER_PORT'];\n}\nfunction phoromatic_web_socket_server_addr()\n{\n\t// getenv('PTS_WEBSOCKET_PORT')\n\treturn phoromatic_web_socket_server_ip() . '/' . $_SESSION['AccountID'];\n}\nfunction phoromatic_error_page($title, $description)\n{\n\techo phoromatic_webui_header(array(''), '');\n\t$box = '<h1>' . $title . '</h1>\n\t\t<h2>' . $description . '</h2>';\n\techo phoromatic_webui_box($box);\n\techo phoromatic_webui_footer();\n}\nfunction phoromatic_systems_needing_attention()\n{\n\t$main = null;\n\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, State, LastIP, LocalIP, LastCommunication FROM phoromatic_systems WHERE AccountID = :account_id AND State = 0 ORDER BY LastCommunication DESC');\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$result = $stmt->execute();\n\tif($row = $result->fetchArray())\n\t{\n\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\"><div style=\"float: left; width: 100%;\"><ul><li><h1>Systems Needing Attention</h1></li><li class=\"light\" style=\"font-weight: normal;\">The following systems have attempted to sync with this Phoromatic account but have not been validated. When clicking on them you are able to approve or disable them from your account along with editing the system information.</li>';\n\n\t\tdo\n\t\t{\n\t\t\t$ip = $row['LocalIP'];\n\t\t\tif($row['LastIP'] != $row['LocalIP'])\n\t\t\t{\n\t\t\t\t$ip .= ' / ' . $row['LastIP'];\n\t\t\t}\n\n\t\t\t$main .= '<a href=\"?systems/' . $row['SystemID'] . '/edit\"><li>' . $row['Title'] . '<br /><em><strong>IP:</strong> ' . $ip . ' <strong>Last Communication:</strong> ' . $row['LastCommunication'] . '</em></li></a>';\n\t\t}\n\t\twhile($row = $result->fetchArray());\n\n\t\t$main .= '</ul></div></div>';\n\t}\n\n\treturn $main;\n}\nfunction phoromatic_oldest_result_for_schedule($schedule_id)\n{\n\tstatic $old_time;\n\n\tif(!isset($old_time[$schedule_id]))\n\t{\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT UploadTime FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY UploadTime ASC LIMIT 1');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$stmt->bindValue(':schedule_id', $schedule_id);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$old_time[$schedule_id] = $row['UploadTime'];\n\t}\n\n\treturn $old_time[$schedule_id];\n}\nfunction write_token_in_form()\n{\n\treturn '<input type=\"hidden\" name=\"token_submit\" value=\"' . $_SESSION['Token'] . '\" />';\n}\nfunction append_token_to_url()\n{\n\treturn '/&token_submit=' . $_SESSION['Token'];\n}\nfunction verify_submission_token()\n{\n\treturn isset($_REQUEST['token_submit']) && $_REQUEST['token_submit'] == $_SESSION['Token'];\n}\nfunction create_new_phoromatic_account($register_username, $register_password, $register_password_confirm, $register_email, $seed_accountid = null)\n{\n\t// REGISTER NEW USER\n\tif(strlen($register_username) < 4 || strpos($register_username, ' ') !== false)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied username is at least four characters long and contains no spaces.');\n\t\treturn false;\n\t}\n\tif(in_array(strtolower($register_username), array('admin', 'administrator', 'rootadmin')))\n\t{\n\t\tphoromatic_error_page('Oops!', $register_username . ' is a reserved and common username that may be used for other purposes, please make a different selection.');\n\t\treturn false;\n\t}\n\tif(strlen($register_password) < 6)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied password is at least six characters long.');\n\t\treturn false;\n\t}\n\tif($register_password != $register_password_confirm)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied password matches the password confirmation.');\n\t\treturn false;\n\t}\n\tif($register_email == null || filter_var($register_email, FILTER_VALIDATE_EMAIL) == false)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please enter a valid email address.');\n\t\treturn false;\n\t}\n\n\t$valid_user_name_chars = '1234567890-_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\tfor($i = 0; $i < strlen($register_username); $i++)\n\t{\n\t\tif(strpos($valid_user_name_chars, substr($register_username, $i, 1)) === false)\n\t\t{\n\t\t\tphoromatic_error_page('Oops!', 'Please go back and ensure a valid user-name. The character <em>' . substr($register_username, $i, 1) . '</em> is not allowed.');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t$matching_users = phoromatic_server::$db->querySingle('SELECT UserName FROM phoromatic_users WHERE UserName = \\'' . SQLite3::escapeString($register_username) . '\\'');\n\tif(!empty($matching_users))\n\t{\n\t\tphoromatic_error_page('Oops!', 'The user-name is already taken.');\n\t\treturn false;\n\t}\n\n\tif(phoromatic_server::read_setting('add_new_users_to_account') != null)\n\t{\n\t\t$account_id = phoromatic_server::read_setting('add_new_users_to_account');\n\t\t$is_new_account = false;\n\t}\n\telse\n\t{\n\t\t$id_tries = 0;\n\t\tdo\n\t\t{\n\t\t\tif($id_tries == 0 && $seed_accountid != null && isset($seed_accountid[5]))\n\t\t\t{\n\t\t\t\t$account_id = strtoupper(substr($seed_accountid, 0, 6));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$account_id = pts_strings::random_characters(6, true);\n\t\t\t}\n\t\t\t$matching_accounts = phoromatic_server::$db->querySingle('SELECT AccountID FROM phoromatic_accounts WHERE AccountID = \\'' . $account_id . '\\'');\n\t\t\t$id_tries++;\n\t\t}\n\t\twhile(!empty($matching_accounts));\n\t\t$is_new_account = true;\n\t}\n\n\t$user_id = pts_strings::random_characters(4, true);\n\n\tif($is_new_account)\n\t{\n\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' created a new account: ' . $user_id . ' - ' . $account_id);\n\t\t$account_salt = pts_strings::random_characters(12, true);\n\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_accounts (AccountID, ValidateID, CreatedOn, Salt) VALUES (:account_id, :validate_id, :current_time, :salt)');\n\t\t$stmt->bindValue(':account_id', $account_id);\n\t\t$stmt->bindValue(':validate_id', pts_strings::random_characters(4, true));\n\t\t$stmt->bindValue(':salt', $account_salt);\n\t\t$stmt->bindValue(':current_time', phoromatic_server::current_time());\n\t\t$result = $stmt->execute();\n\n\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_account_settings (AccountID) VALUES (:account_id)');\n\t\t$stmt->bindValue(':account_id', $account_id);\n\t\t$result = $stmt->execute();\n\n\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_user_settings (UserID, AccountID) VALUES (:user_id, :account_id)');\n\t\t$stmt->bindValue(':user_id', $user_id);\n\t\t$stmt->bindValue(':account_id', $account_id);\n\t\t$result = $stmt->execute();\n\t}\n\telse\n\t{\n\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' being added to an account: ' . $user_id . ' - ' . $account_id);\n\t\t$account_salt = phoromatic_server::$db->querySingle('SELECT Salt FROM phoromatic_accounts WHERE AccountID = \\'' . $account_id . '\\'');\n\t}\n\n\t$salted_password = hash('sha256', $account_salt . $register_password);\n\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_users (UserID, AccountID, UserName, Email, Password, CreatedOn, LastIP, AdminLevel) VALUES (:user_id, :account_id, :user_name, :email, :password, :current_time, :last_ip, :admin_level)');\n\t$stmt->bindValue(':user_id', $user_id);\n\t$stmt->bindValue(':account_id', $account_id);\n\t$stmt->bindValue(':user_name', $register_username);\n\t$stmt->bindValue(':email', $register_email);\n\t$stmt->bindValue(':password', $salted_password);\n\t$stmt->bindValue(':last_ip', $_SERVER['REMOTE_ADDR']);\n\t$stmt->bindValue(':current_time', phoromatic_server::current_time());\n\t$stmt->bindValue(':admin_level', ($is_new_account ? 1 : 10));\n\t$result = $stmt->execute();\n\n\tpts_file_io::mkdir(phoromatic_server::phoromatic_account_path($account_id));\n\tphoromatic_server::send_email($register_email, 'Phoromatic Account Registration', (($e = phoromatic_server::read_setting('admin_support_email')) != null ? $e : 'no-reply@phoromatic.com'), '<p><strong>' . $register_username . '</strong>:</p><p>Your Phoromatic account has been created and is now active.</p>');\n\treturn true;\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2009 - 2014, Phoronix Media\n\tCopyright (C) 2009 - 2014, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// INIT\ndefine('PHOROMATIC_SERVER', true);\n//ini_set('memory_limit', '64M');\ndefine('PTS_MODE', 'WEB_CLIENT');\ndefine('PTS_AUTO_LOAD_OBJECTS', true);\nerror_reporting(E_ALL);\n\ninclude('../../pts-core.php');\npts_core::init();\n\nphoromatic_server::prepare_database();\n\nif(!isset($_GET['type']))\n{\n\techo 'Missing type.';\n\treturn;\n}\n\nswitch($_GET['type'])\n{\n\tcase 'trigger':\n\t\tif(!isset($_GET['user']) || !isset($_GET['public_key']) || !isset($_GET['trigger']))\n\t\t{\n\t\t\techo 'Missing user, public_key, or trigger.';\n\t\t\treturn;\n\t\t}\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT AccountID FROM phoromatic_users WHERE UserName = :user_name');\n\t\t$stmt->bindValue(':user_name', $_GET['user']);\n\t\t$result = $stmt->execute();\n\t\tif(empty($result))\n\t\t{\n\t\t\techo 'Incorrect user information.';\n\t\t\treturn;\n\t\t}\n\t\t$user_row = $result->fetchArray();\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT ScheduleID FROM phoromatic_schedules WHERE AccountID = :account_id AND PublicKey = :public_key');\n\t\t$stmt->bindValue(':account_id', $user_row['AccountID']);\n\t\t$stmt->bindValue(':public_key', $_GET['public_key']);\n\t\t$result = $stmt->execute();\n\t\tif(empty($result))\n\t\t{\n\t\t\techo 'Incorrect schedule information.';\n\t\t\treturn;\n\t\t}\n\t\t$schedule_row = $result->fetchArray();\n\t\t$sub_target = null;\n\n\t\tif(isset($_GET['sub_target_this_ip']))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT SystemID FROM phoromatic_systems WHERE AccountID = :account_id AND LastIP = :this_ip');\n\t\t\t$stmt->bindValue(':account_id', $user_row['AccountID']);\n\t\t\t$stmt->bindValue(':this_ip', $_SERVER['REMOTE_ADDR']);\n\t\t\t$result = $stmt->execute();\n\t\t\tif(empty($result))\n\t\t\t{\n\t\t\t\techo 'No system found associated to this IP address [' . $_SERVER['REMOTE_ADDR'] . '].';\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$sys_row = $result->fetchArray();\n\t\t\t\t$sub_target = $sys_row['SystemID'];\n\t\t\t}\n\t\t}\n\n\t\t$trigger = pts_strings::sanitize($_GET['trigger']);\n\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_triggers (AccountID, ScheduleID, Trigger, TriggeredOn, SubTarget) VALUES (:account_id, :schedule_id, :trigger, :triggered_on, :sub_target)');\n\t\t$stmt->bindValue(':account_id',\t$user_row['AccountID']);\n\t\t$stmt->bindValue(':schedule_id', $schedule_row['ScheduleID']);\n\t\t$stmt->bindValue(':trigger', $trigger);\n\t\t$stmt->bindValue(':triggered_on', phoromatic_server::current_time());\n\t\t$stmt->bindValue(':sub_target', $sub_target);\n\t\tif($stmt->execute())\n\t\t{\n\t\t\techo 'Trigger ' . $trigger . ' added!';\n\t\t}\n\t\tbreak;\n\n}\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2008 - 2022, Phoronix Media\n\tCopyright (C) 2008 - 2022, Michael Larabel\n\tpts-core.php: To boot-strap the Phoronix Test Suite start-up\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass pts_core\n{\n\tpublic static function init()\n\t{\n\t\t//set_time_limit(0);\n\t\tpts_define_directories(); // Define directories\n\n\t\tpts_define('PTS_INIT_TIME', time());\n\n\t\tif(!defined('PHP_VERSION_ID'))\n\t\t{\n\t\t\t$php_version = explode('.', PHP_VERSION);\n\t\t\tpts_define('PHP_VERSION_ID', ($php_version[0] * 10000 + $php_version[1] * 100 + $php_version[2]));\n\t\t}\n\t}\n\tpublic static function user_home_directory()\n\t{\n\t\t// Gets the system user's home directory\n\t\tstatic $userhome = null;\n\n\t\tif($userhome == null)\n\t\t{\n\t\t\tif(function_exists('posix_getpwuid') && function_exists('posix_getuid'))\n\t\t\t{\n\t\t\t\t$userinfo = posix_getpwuid(posix_getuid());\n\t\t\t\t$userhome = $userinfo['dir'];\n\t\t\t}\n\t\t\telse if(($home = getenv('HOME')))\n\t\t\t{\n\t\t\t\t$userhome = $home;\n\t\t\t}\n\t\t\telse if(($home = getenv('HOMEPATH')))\n\t\t\t{\n\t\t\t\t$userhome = getenv('HOMEDRIVE') . $home;\n\t\t\t}\n\t\t\telse if(PTS_IS_DAEMONIZED_SERVER_PROCESS)\n\t\t\t{\n\t\t\t\t$userhome = PTS_USER_PATH;\n\t\t\t}\n\t\t\telse if(substr(__FILE__, 0, 6) == '/home/')\n\t\t\t{\n\t\t\t\t$home_dir = substr(__FILE__, 0, strpos(__FILE__, '/', 7)) . '/';\n\t\t\t\tif(is_dir($home_dir) && is_dir($home_dir . '.phoronix-test-suite'))\n\t\t\t\t{\n\t\t\t\t\t$userhome = $home_dir;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(!is_writable('/'))\n\t\t\t\t{\n\t\t\t\t\techo PHP_EOL . 'ERROR: Cannot find home directory.' . PHP_EOL;\n\t\t\t\t}\n\t\t\t\t$userhome = null;\n\t\t\t}\n\n\t\t\t$userhome = pts_strings::add_trailing_slash($userhome);\n\t\t}\n\n\t\treturn $userhome;\n\t}\n\tpublic static function program_title()\n\t{\n\t\t// First argument was originally $show_codename, but no longer used/honored\n\t\treturn 'Phoronix Test Suite v' . PTS_VERSION;\n\t}\n}\nfunction pts_define($name, $value = null)\n{\n\tstatic $defines;\n\n\tif($name === -1)\n\t{\n\t\treturn $defines;\n\t}\n\telse if(isset($defines[$name]))\n\t{\n\t\treturn false;\n\t}\n\n\t$defines[$name] = $value;\n\tdefine($name, $value);\n}\nfunction pts_define_directories()\n{\n\t// User's home directory for storing results, module files, test installations, etc.\n\tpts_define('PTS_CORE_PATH', PTS_PATH . 'pts-core/');\n\n\tif(is_dir(PTS_PATH . 'ob-cache/'))\n\t{\n\t\tpts_define('PTS_INTERNAL_OB_CACHE', PTS_PATH . 'ob-cache/');\n\t}\n\telse\n\t{\n\t\tpts_define('PTS_INTERNAL_OB_CACHE', false);\n\t}\n\n\tpts_define('PTS_IS_DAEMONIZED_SERVER_PROCESS', PTS_IS_CLIENT && is_writable('/var/lib/') && is_writable('/etc') ? true : false);\n\n\tif(($user_path_override = getenv('PTS_USER_PATH_OVERRIDE')) != false && is_dir($user_path_override))\n\t{\n\t\tpts_define('PTS_USER_PATH', $user_path_override);\n\t}\n\n\tif(PTS_IS_DAEMONIZED_SERVER_PROCESS)\n\t{\n\t\tif(!is_dir('/var/cache/phoronix-test-suite/'))\n\t\t{\n\t\t\tmkdir('/var/cache/phoronix-test-suite/');\n\t\t}\n\n\t\tpts_define('PTS_USER_PATH', '/var/lib/phoronix-test-suite/');\n\t\tpts_define('PTS_CORE_STORAGE', PTS_USER_PATH . 'core.pt2so');\n\t\tpts_define('PTS_DOWNLOAD_CACHE_PATH', '/var/cache/phoronix-test-suite/download-cache/');\n\t\tpts_define('PTS_OPENBENCHMARKING_SCRATCH_PATH', '/var/cache/phoronix-test-suite/openbenchmarking.org/');\n\t\tpts_define('PTS_TEST_PROFILE_PATH', PTS_USER_PATH . 'test-profiles/');\n\t\tpts_define('PTS_TEST_SUITE_PATH', PTS_USER_PATH . 'test-suites/');\n\t}\n\telse if(PTS_IS_CLIENT)\n\t{\n\t\t/* if(!is_dir(pts_core::user_home_directory() . '.phoronix-test-suite') && stripos(PHP_OS, 'win') !== false && getenv('AppData'))\n\t\t{\n\t\t\tpts_define('PTS_USER_PATH', getenv('AppData') . DIRECTORY_SEPARATOR . 'phoronix-test-suite' . DIRECTORY_SEPARATOR);\n\t\t}\n\t\telse\n\t\t{ */\n\t\t\tpts_define('PTS_USER_PATH', pts_core::user_home_directory() . '.phoronix-test-suite' . DIRECTORY_SEPARATOR);\n\t\t//}\n\t\tpts_define('PTS_CORE_STORAGE', PTS_USER_PATH . 'core.pt2so');\n\t\tpts_define('PTS_DOWNLOAD_CACHE_PATH', PTS_USER_PATH . 'download-cache/');\n\t\tpts_define('PTS_OPENBENCHMARKING_SCRATCH_PATH', PTS_USER_PATH . 'openbenchmarking.org/');\n\t\tpts_define('PTS_TEST_PROFILE_PATH', PTS_USER_PATH . 'test-profiles/');\n\t\tpts_define('PTS_TEST_SUITE_PATH', PTS_USER_PATH . 'test-suites/');\n\t}\n\telse if(defined('PTS_STORAGE_PATH'))\n\t{\n\t\t// e.g. OpenBenchmarking.org\n\t\tpts_define('PTS_OPENBENCHMARKING_SCRATCH_PATH', PTS_STORAGE_PATH . 'openbenchmarking.org/');\n\t\tpts_define('PTS_TEST_PROFILE_PATH', PTS_STORAGE_PATH . 'test-profiles/');\n\t\tpts_define('PTS_TEST_SUITE_PATH', PTS_STORAGE_PATH . 'test-suites/');\n\t}\n\telse if(defined('PATH_TO_PHOROMATIC_STORAGE'))\n\t{\n\t\tpts_define('PTS_OPENBENCHMARKING_SCRATCH_PATH', PATH_TO_PHOROMATIC_STORAGE . 'openbenchmarking.org/');\n\t\tpts_define('PTS_TEST_PROFILE_PATH', PATH_TO_PHOROMATIC_STORAGE . 'test-profiles/');\n\t\tpts_define('PTS_TEST_SUITE_PATH', PATH_TO_PHOROMATIC_STORAGE . 'test-suites/');\n\t}\n\n\t// Misc Locations\n\tpts_define('PTS_CORE_STATIC_PATH', PTS_CORE_PATH . 'static/');\n\n\tif(is_dir('/usr/local/share/phoronix-test-suite/'))\n\t{\n\t\tpts_define('PTS_SHARE_PATH', '/usr/local/share/phoronix-test-suite/');\n\t}\n\telse if(is_dir('/usr/share/'))\n\t{\n\t\tpts_define('PTS_SHARE_PATH', '/usr/share/phoronix-test-suite/');\n\t\tif(is_writable('/usr/share') && !is_dir(PTS_SHARE_PATH))\n\t\t{\n\t\t\tmkdir(PTS_SHARE_PATH);\n\t\t}\n\t}\n\telse\n\t{\n\t\tpts_define('PTS_SHARE_PATH', false);\n\t}\n\n\t// Fallbacks below for dynamic result viewer\n\tif(!defined('PTS_TEST_SUITE_PATH') && defined('PTS_INTERNAL_OB_CACHE') && is_dir(PTS_INTERNAL_OB_CACHE . 'test-suites/'))\n\t{\n\t\tpts_define('PTS_TEST_SUITE_PATH', PTS_INTERNAL_OB_CACHE . 'test-suites/');\n\t}\n\n\tif(!defined('PTS_TEST_PROFILE_PATH') && defined('PTS_INTERNAL_OB_CACHE') && is_dir(PTS_INTERNAL_OB_CACHE . 'test-profiles/'))\n\t{\n\t\tpts_define('PTS_TEST_PROFILE_PATH', PTS_INTERNAL_OB_CACHE . 'test-profiles/');\n\t}\n\n\tif(!defined('PTS_OPENBENCHMARKING_SCRATCH_PATH') && defined('PTS_INTERNAL_OB_CACHE') && is_dir(PTS_INTERNAL_OB_CACHE . 'openbenchmarking.org/'))\n\t{\n\t\tpts_define('PTS_OPENBENCHMARKING_SCRATCH_PATH', PTS_INTERNAL_OB_CACHE . 'openbenchmarking.org/');\n\t}\n}\nfunction pts_needed_extensions()\n{\n\treturn array(\n\t\t// Required? - The Check If In Place - Name - Description\n\t\t// Required extesnions denoted by 1 at [0]\n\t\tarray(1, extension_loaded('dom'), 'DOM', 'The Document Object Model is required for XML operations.'),\n\t\tarray(1, extension_loaded('zip') || extension_loaded('zlib'), 'ZIP', 'ZIP support is required for file compression.'),\n\t\tarray(1, function_exists('json_decode'), 'JSON', 'JSON support is required for OpenBenchmarking.org.'),\n\t\tarray(1, function_exists('simplexml_load_string'), 'SimpleXML', 'SimpleXML is required for XML operations.'),\n\t\t// Optional but recommended extensions\n\t\tarray(0, extension_loaded('openssl'), 'OpenSSL', 'OpenSSL support is recommended to support HTTPS traffic.'),\n\t\tarray(0, extension_loaded('gd'), 'GD', 'The GD library is recommended for improved graph rendering.'),\n\t\tarray(0, extension_loaded('zlib'), 'Zlib', 'The Zlib extension can be used for greater file compression.'),\n\t\tarray(0, function_exists('bzcompress'), 'Bzip2', 'The bzcompress/bzip2 support can be used for greater file compression.'),\n\t\tarray(0, extension_loaded('sqlite3'), 'SQLite3', 'SQLite3 is required when running a Phoromatic server.'),\n\t\tarray(0, function_exists('pcntl_fork'), 'PCNTL', 'PCNTL is highly recommended as it is required by some tests.'),\n\t\tarray(0, function_exists('posix_getpwuid'), 'POSIX', 'POSIX support is highly recommended.'),\n\t\tarray(0, function_exists('curl_init'), 'CURL', 'CURL is recommended for an enhanced download experience.'),\n\t\tarray(0, function_exists('socket_create_listen'), 'Sockets', 'Sockets is needed when running the Phoromatic Server.'),\n\t\tarray(0, function_exists('readline'), 'Readline', 'Readline support is useful for tab-based auto-completion support.'),\n\t\t);\n}\n\npts_define('PTS_VERSION', '10.8.0');\npts_define('PTS_CORE_VERSION', 10801);\npts_define('PTS_RELEASE_DATE', '2021125');\npts_define('PTS_CODENAME', 'Nesseby');\n\npts_define('PTS_IS_CLIENT', (defined('PTS_MODE') && strstr(PTS_MODE, 'CLIENT') !== false));\npts_define('PTS_IS_WEB_CLIENT', (defined('PTS_MODE') && PTS_MODE == 'WEB_CLIENT'));\npts_define('PTS_IS_DEV_BUILD', (substr(PTS_VERSION, -2, 1) == 'm'));\n\nif(!defined('PTS_PATH'))\n{\n\tpts_define('PTS_PATH', dirname(dirname(__FILE__)) . '/');\n}\n\npts_define('PTS_PHP_VERSION', phpversion());\n\nif(PTS_IS_CLIENT || defined('PTS_AUTO_LOAD_OBJECTS'))\n{\n\tfunction pts_build_dir_php_list($dir, &$files)\n\t{\n\t\tif($dh = opendir($dir))\n\t\t{\n\t\t\twhile(($file = readdir($dh)) !== false)\n\t\t\t{\n\t\t\t\tif($file != '.' && $file != '..')\n\t\t\t\t{\n\t\t\t\t\tif(is_dir($dir . '/' . $file) && ((PTS_IS_CLIENT || defined('PTS_AUTO_LOAD_ALL_OBJECTS')) || $file != 'client'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// The client folder should contain classes exclusively used by the client\n\t\t\t\t\t\tpts_build_dir_php_list($dir . '/' . $file, $files);\n\t\t\t\t\t}\n\t\t\t\t\telse if(substr($file, -4) == '.php')\n\t\t\t\t\t{\n\t\t\t\t\t\t$files[substr($file, 0, -4)] = $dir . '/' . $file;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tclosedir($dh);\n\t}\n\tfunction pts_auto_load_class($to_load)\n\t{\n\t\tstatic $obj_files = null;\n\n\t\tif($obj_files == null)\n\t\t{\n\t\t\tpts_build_dir_php_list(PTS_PATH . 'pts-core/objects', $obj_files);\n\t\t}\n\n\t\tif(isset($obj_files[$to_load]))\n\t\t{\n\t\t\tinclude($obj_files[$to_load]);\n\t\t\tunset($obj_files[$to_load]);\n\t\t}\n\n\t\treturn class_exists($to_load, false);\n\t}\n\tspl_autoload_register('pts_auto_load_class');\n}\nif(PTS_IS_CLIENT && ini_get('date.timezone') == null)\n{\n\t$tz = null;\n\n\t// timezone_name_from_abbr was added in PHP 5.1.3. pre-5.2 really isn't supported by PTS, but don't at least error out here but let it get to proper checks...\n\tif(is_executable('/bin/date') && function_exists('timezone_name_from_abbr'))\n\t{\n\t\t$tz = timezone_name_from_abbr(trim(shell_exec('date +%Z 2> /dev/null')));\n\t}\n\telse if(strtoupper(substr(PHP_OS, 0, 3)) == 'WIN')\n\t{\n\t\t$tz = trim(shell_exec('powershell -NoProfile \"(Get-TimeZone).BaseUtcOffset.Hours\"'));\n\t\t$tz = is_numeric($tz) ? timezone_name_from_abbr('', ($tz * 60 * 60), 0) : null;\n\t}\n\n\tif($tz == null || !in_array($tz, timezone_identifiers_list()))\n\t{\n\t\t$tz = 'UTC';\n\t}\n\n\tdate_default_timezone_set($tz);\n}\n\n?>\n"], "filenames": ["pts-core/objects/pts_strings.php", "pts-core/phoromatic/pages/phoromatic_local_suites.php", "pts-core/phoromatic/pages/phoromatic_schedules.php", "pts-core/phoromatic/pages/phoromatic_users.php", "pts-core/phoromatic/pages/phoromatic_welcome.php", "pts-core/phoromatic/phoromatic_functions.php", "pts-core/phoromatic/public_html/event.php", "pts-core/pts-core.php"], "buggy_code_start_loc": [788, 42, 126, 45, 132, 525, 87, 232], "buggy_code_end_loc": [789, 68, 209, 246, 132, 525, 97, 233], "fixing_code_start_loc": [788, 42, 126, 45, 133, 526, 88, 232], "fixing_code_end_loc": [789, 68, 209, 246, 134, 538, 98, 233], "type": "CWE-352", "message": "phoronix-test-suite is vulnerable to Cross-Site Request Forgery (CSRF)", "other": {"cve": {"id": "CVE-2022-0197", "sourceIdentifier": "security@huntr.dev", "published": "2022-01-13T01:15:08.437", "lastModified": "2022-02-22T10:22:56.763", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "phoronix-test-suite is vulnerable to Cross-Site Request Forgery (CSRF)"}, {"lang": "es", "value": "phoronix-test-suite es vulnerable a un ataque de tipo Cross-Site Request Forgery (CSRF)"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phoronix-media:phoronix_test_suite:*:*:*:*:*:*:*:*", "versionEndExcluding": "10.8.0", "matchCriteriaId": "631A75BD-498B-4319-B19F-A6A3BA4A9DD5"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:34:*:*:*:*:*:*:*", "matchCriteriaId": "A930E247-0B43-43CB-98FF-6CE7B8189835"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:35:*:*:*:*:*:*:*", "matchCriteriaId": "80E516C0-98A4-4ADE-B69F-66A772E2BAAA"}]}]}], "references": [{"url": "https://github.com/phoronix-test-suite/phoronix-test-suite/commit/4f18296a1862fe54a4c58701a1f5ec6bd62a4d94", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/5abb7915-32f4-4fb1-afa7-bb6d8c4c5ad2", "source": "security@huntr.dev", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/57V2CSFU5MKWKL6RJUKMXSD4PCRFTMMQ/", "source": "security@huntr.dev", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BU7E6OOZCXS3ZWHOQ2AR7MKM56IN2R6R/", "source": "security@huntr.dev", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/phoronix-test-suite/phoronix-test-suite/commit/4f18296a1862fe54a4c58701a1f5ec6bd62a4d94"}}