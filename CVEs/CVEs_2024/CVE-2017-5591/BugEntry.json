{"buggy_code": ["\"\"\"\n    Slixmpp: The Slick XMPP Library\n    Copyright (C) 2012 Nathanael C. Fritz, Lance J.T. Stout\n    This file is part of Slixmpp.\n\n    See the file LICENSE for copying permissio\n\"\"\"\n\nimport logging\n\nimport slixmpp\nfrom slixmpp.stanza import Message, Iq\nfrom slixmpp.xmlstream.handler import Callback\nfrom slixmpp.xmlstream.matcher import StanzaPath\nfrom slixmpp.xmlstream import register_stanza_plugin\nfrom slixmpp.plugins import BasePlugin\nfrom slixmpp.plugins.xep_0280 import stanza\n\n\nlog = logging.getLogger(__name__)\n\n\nclass XEP_0280(BasePlugin):\n\n    \"\"\"\n    XEP-0280 Message Carbons\n    \"\"\"\n\n    name = 'xep_0280'\n    description = 'XEP-0280: Message Carbons'\n    dependencies = {'xep_0030', 'xep_0297'}\n    stanza = stanza\n\n    def plugin_init(self):\n        self.xmpp.register_handler(\n            Callback('Carbon Received',\n                     StanzaPath('message/carbon_received'),\n                     self._handle_carbon_received))\n        self.xmpp.register_handler(\n            Callback('Carbon Sent',\n                     StanzaPath('message/carbon_sent'),\n                     self._handle_carbon_sent))\n\n        register_stanza_plugin(Message, stanza.ReceivedCarbon)\n        register_stanza_plugin(Message, stanza.SentCarbon)\n        register_stanza_plugin(Message, stanza.PrivateCarbon)\n        register_stanza_plugin(Iq, stanza.CarbonEnable)\n        register_stanza_plugin(Iq, stanza.CarbonDisable)\n\n        register_stanza_plugin(stanza.ReceivedCarbon,\n                               self.xmpp['xep_0297'].stanza.Forwarded)\n        register_stanza_plugin(stanza.SentCarbon,\n                               self.xmpp['xep_0297'].stanza.Forwarded)\n\n    def plugin_end(self):\n        self.xmpp.remove_handler('Carbon Received')\n        self.xmpp.remove_handler('Carbon Sent')\n        self.xmpp.plugin['xep_0030'].del_feature(feature='urn:xmpp:carbons:2')\n\n    def session_bind(self, jid):\n        self.xmpp.plugin['xep_0030'].add_feature('urn:xmpp:carbons:2')\n\n    def _handle_carbon_received(self, msg):\n        self.xmpp.event('carbon_received', msg)\n\n    def _handle_carbon_sent(self, msg):\n        self.xmpp.event('carbon_sent', msg)\n\n    def enable(self, ifrom=None, timeout=None, callback=None,\n               timeout_callback=None):\n        iq = self.xmpp.Iq()\n        iq['type'] = 'set'\n        iq['from'] = ifrom\n        iq.enable('carbon_enable')\n        return iq.send(timeout_callback=timeout_callback, timeout=timeout,\n                       callback=callback)\n\n    def disable(self, ifrom=None, timeout=None, callback=None,\n                timeout_callback=None):\n        iq = self.xmpp.Iq()\n        iq['type'] = 'set'\n        iq['from'] = ifrom\n        iq.enable('carbon_disable')\n        return iq.send(timeout_callback=timeout_callback, timeout=timeout,\n                       callback=callback)\n"], "fixing_code": ["\"\"\"\n    Slixmpp: The Slick XMPP Library\n    Copyright (C) 2012 Nathanael C. Fritz, Lance J.T. Stout\n    This file is part of Slixmpp.\n\n    See the file LICENSE for copying permissio\n\"\"\"\n\nimport logging\n\nimport slixmpp\nfrom slixmpp.stanza import Message, Iq\nfrom slixmpp.xmlstream.handler import Callback\nfrom slixmpp.xmlstream.matcher import StanzaPath\nfrom slixmpp.xmlstream import register_stanza_plugin\nfrom slixmpp.plugins import BasePlugin\nfrom slixmpp.plugins.xep_0280 import stanza\n\n\nlog = logging.getLogger(__name__)\n\n\nclass XEP_0280(BasePlugin):\n\n    \"\"\"\n    XEP-0280 Message Carbons\n    \"\"\"\n\n    name = 'xep_0280'\n    description = 'XEP-0280: Message Carbons'\n    dependencies = {'xep_0030', 'xep_0297'}\n    stanza = stanza\n\n    def plugin_init(self):\n        self.xmpp.register_handler(\n            Callback('Carbon Received',\n                     StanzaPath('message/carbon_received'),\n                     self._handle_carbon_received))\n        self.xmpp.register_handler(\n            Callback('Carbon Sent',\n                     StanzaPath('message/carbon_sent'),\n                     self._handle_carbon_sent))\n\n        register_stanza_plugin(Message, stanza.ReceivedCarbon)\n        register_stanza_plugin(Message, stanza.SentCarbon)\n        register_stanza_plugin(Message, stanza.PrivateCarbon)\n        register_stanza_plugin(Iq, stanza.CarbonEnable)\n        register_stanza_plugin(Iq, stanza.CarbonDisable)\n\n        register_stanza_plugin(stanza.ReceivedCarbon,\n                               self.xmpp['xep_0297'].stanza.Forwarded)\n        register_stanza_plugin(stanza.SentCarbon,\n                               self.xmpp['xep_0297'].stanza.Forwarded)\n\n    def plugin_end(self):\n        self.xmpp.remove_handler('Carbon Received')\n        self.xmpp.remove_handler('Carbon Sent')\n        self.xmpp.plugin['xep_0030'].del_feature(feature='urn:xmpp:carbons:2')\n\n    def session_bind(self, jid):\n        self.xmpp.plugin['xep_0030'].add_feature('urn:xmpp:carbons:2')\n\n    def _handle_carbon_received(self, msg):\n        if msg['from'].bare == self.xmpp.boundjid.bare:\n            self.xmpp.event('carbon_received', msg)\n\n    def _handle_carbon_sent(self, msg):\n        if msg['from'].bare == self.xmpp.boundjid.bare:\n            self.xmpp.event('carbon_sent', msg)\n\n    def enable(self, ifrom=None, timeout=None, callback=None,\n               timeout_callback=None):\n        iq = self.xmpp.Iq()\n        iq['type'] = 'set'\n        iq['from'] = ifrom\n        iq.enable('carbon_enable')\n        return iq.send(timeout_callback=timeout_callback, timeout=timeout,\n                       callback=callback)\n\n    def disable(self, ifrom=None, timeout=None, callback=None,\n                timeout_callback=None):\n        iq = self.xmpp.Iq()\n        iq['type'] = 'set'\n        iq['from'] = ifrom\n        iq.enable('carbon_disable')\n        return iq.send(timeout_callback=timeout_callback, timeout=timeout,\n                       callback=callback)\n"], "filenames": ["slixmpp/plugins/xep_0280/carbons.py"], "buggy_code_start_loc": [64], "buggy_code_end_loc": [68], "fixing_code_start_loc": [64], "fixing_code_end_loc": [70], "type": "CWE-20", "message": "An incorrect implementation of \"XEP-0280: Message Carbons\" in multiple XMPP clients allows a remote attacker to impersonate any user, including contacts, in the vulnerable application's display. This allows for various kinds of social engineering attacks. This CVE is for SleekXMPP up to 1.3.1 and Slixmpp all versions up to 1.2.3, as bundled in poezio (0.8 - 0.10) and other products.", "other": {"cve": {"id": "CVE-2017-5591", "sourceIdentifier": "cve@mitre.org", "published": "2017-02-09T20:59:00.230", "lastModified": "2020-01-22T14:13:45.397", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "An incorrect implementation of \"XEP-0280: Message Carbons\" in multiple XMPP clients allows a remote attacker to impersonate any user, including contacts, in the vulnerable application's display. This allows for various kinds of social engineering attacks. This CVE is for SleekXMPP up to 1.3.1 and Slixmpp all versions up to 1.2.3, as bundled in poezio (0.8 - 0.10) and other products."}, {"lang": "es", "value": "Una implementaci\u00f3n incorrecta de \"XEP-0280: Message Carbons\" en m\u00faltiples clientes XMPP permite a un atacante remoto personificar cualquier usuario, incluidos los contactos, en la pantalla de la aplicaci\u00f3n vulnerable. Esto permite varios tipos de ataques de ingenier\u00eda social. Esta CVE es para SleekXMPPP hasta la versi\u00f3n 1.3.1 y SliXMPPp todas las versiones hasta la 1.2.3, como empaquetados en poezio (0.8 - 0.10) y otros productos."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 5.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.2, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}, {"lang": "en", "value": "CWE-346"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:sleekxmpp_project:sleekxmpp:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.3.1", "matchCriteriaId": "5B7A0758-5BBF-4E2E-8FFD-555B023DCD5A"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:slixmpp_project:slixmpp:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.2.3", "matchCriteriaId": "44475E86-A847-4531-BA49-0B73771D43AD"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:poezio:poezio:0.8:*:*:*:*:*:*:*", "matchCriteriaId": "B4E30A4E-C906-406E-89CD-AB193CBDD0C3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:poezio:poezio:0.8.1:*:*:*:*:*:*:*", "matchCriteriaId": "929839C5-3E52-4CBA-BD28-868B1A94CC8C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:poezio:poezio:0.9:*:*:*:*:*:*:*", "matchCriteriaId": "BC4B1EA2-7B93-4E16-9CA7-C290B9DA2263"}, {"vulnerable": true, "criteria": "cpe:2.3:a:poezio:poezio:0.10:*:*:*:*:*:*:*", "matchCriteriaId": "32CDDB71-E7BE-4E25-9E39-8B5E22F77E0E"}]}]}], "references": [{"url": "http://openwall.com/lists/oss-security/2017/02/09/29", "source": "cve@mitre.org", "tags": ["Exploit", "Mailing List", "Third Party Advisory"]}, {"url": "http://www.securityfocus.com/bid/96166", "source": "cve@mitre.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/poezio/slixmpp/commit/22664ee7b86c8e010f312b66d12590fb47160ad8", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://rt-solutions.de/en/2017/02/CVE-2017-5589_xmpp_carbons/", "source": "cve@mitre.org", "tags": ["Exploit", "Technical Description", "Third Party Advisory"]}, {"url": "https://rt-solutions.de/wp-content/uploads/2017/02/CVE-2017-5589_xmpp_carbons.pdf", "source": "cve@mitre.org", "tags": ["Exploit", "Technical Description", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/poezio/slixmpp/commit/22664ee7b86c8e010f312b66d12590fb47160ad8"}}