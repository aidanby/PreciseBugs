{"buggy_code": ["{% extends \"admin/change_form.html\" %}\n{% load static %}\n{% load i18n %}\n\n\n{% block extrastyle %}\n    {{ block.super }}\n    <link rel=\"stylesheet\" href=\"{% static 'select2-3.4.8/select2.css' %}\">\n{% endblock %}\n\n{% block extrahead %}\n    {{ block.super }}\n    <script src=\"{% static 'jquery-1.11.1.min.js' %}\"></script>\n    <script src=\"{% static 'select2-3.4.8/select2.min.js' %}\"></script>\n{% endblock %}\n\n{% block form_top %}\n    <p>Add a new group. The autocomplete field searches by group name or group id in the lookup service of the\n        University of Cambridge.</p>\n{% endblock %}\n\n{% block after_field_sets %}\n<script type=\"text/javascript\">\n\n    /**\n     * ID of the last AJAX search request we sent.\n     */\n    searchId_g = 0;\n\n    $(document).ready(function() {\n        $(\"#id_lookup_id\").select2({\n            placeholder: \"Search for a group\",\n            minimumInputLength: 3,\n            multiple: false,\n            ajax: {\n                url: \"{%  url 'ucamlookup_find_groups' %}\",\n                dataType: 'json',\n                data: function (term, page) {\n                    return {\n                        query: term,\n                        searchId_g: ++searchId_g\n                    };\n                },\n                results: function (data, page) {\n                    if (data.searchId_g != searchId_g)\n                        return;\n                    return {results: data.groups};\n                }\n            },\n            formatResult: function(group) {\n                return group.title;\n            },\n            formatSelection: function(group) {\n                return group.title;\n            },\n            id: function(group) {\n                return group.groupid;\n            },\n            dropdownCssClass: \"bigdrop\", // apply css that makes the dropdown taller\n            escapeMarkup: function (m) { return m; },\n            // we do not want to escape markup since we are displaying html in results\n            width: '100%'\n        });\n    });\n</script>\n{% endblock %}", "{% extends \"admin/change_form.html\" %}\n{% load static %}\n{% load i18n %}\n\n\n{% block extrastyle %}\n    {{ block.super }}\n    <link rel=\"stylesheet\" href=\"{% static 'select2-3.4.8/select2.css' %}\">\n{% endblock %}\n\n{% block extrahead %}\n    {{ block.super }}\n    <script src=\"{% static 'jquery-1.11.1.min.js' %}\"></script>\n    <script src=\"{% static 'select2-3.4.8/select2.min.js' %}\"></script>\n{% endblock %}\n\n{% block form_top %}\n    <p>The autocomplete field searches by name or crsid in the lookup service of the University of Cambridge.</p>\n{% endblock %}\n\n{% block after_field_sets %}\n<script type=\"text/javascript\">\n\n    /**\n     * ID of the last AJAX search request we sent.\n     */\n    searchId_u = 0;\n\n    $(document).ready(function() {\n        $(\"#id_username\").select2({\n            placeholder: \"Search for a University of Cambridge user\",\n            minimumInputLength: 3,\n            multiple: false,\n            ajax: {\n                url: \"{%  url 'ucamlookup_find_people' %}\",\n                dataType: 'json',\n                data: function (term, page) {\n                    return {\n                        query: term,\n                        searchId_u: ++searchId_u\n                    };\n                },\n                results: function (data, page) {\n                    if (data.searchId_u != searchId_u)\n                        return;\n                    return {results: data.persons};\n                }\n            },\n            formatResult: function(person) {\n                return person.visibleName+\" (\"+person.crsid+\") \";\n            },\n            formatSelection: function(person) {\n                return person.visibleName+\" (\"+person.crsid+\") \";\n            },\n            id: function(person) {\n                return person.crsid;\n            },\n            dropdownCssClass: \"bigdrop\", // apply css that makes the dropdown taller\n            escapeMarkup: function (m) { return m; },\n            // we do not want to escape markup since we are displaying html in results\n            width: '50%'\n        });\n    });\n</script>\n{% endblock %}", "{% load dictionary_tag %}\n<script>\n    /**\n     * ID of the last AJAX search request we sent.\n     */\n    searchId_g = 0;\n\n    $(document).ready(function() {\n        $(\"#{{ input_tag_id }}\").select2({\n            placeholder: \"Search for groups\",\n            minimumInputLength: 3,\n            multiple: {{ multiple }},\n            ajax: {\n                url: \"{%  url 'ucamlookup_find_groups' %}\",\n                dataType: 'json',\n                data: function (term, page) {\n                    return {\n                        query: term,\n                        searchId_g: ++searchId_g\n                    };\n                },\n                results: function (data, page) {\n                    if (data.searchId_g != searchId_g)\n                        return;\n                    return {results: data.groups};\n                }\n            },\n            formatResult: function(group) {\n                return group.title;\n            },\n            formatSelection: function(group) {\n                return group.title;\n            },\n            id: function(group) {\n                return group.groupid;\n            },\n            dropdownCssClass: \"bigdrop\", // apply css that makes the dropdown taller\n            escapeMarkup: function (m) { return m; }\n            // we do not want to escape markup since we are displaying html in results\n        });\n\n        $(\"#{{ input_tag_id }}\").select2(\"data\", [\n            {% for authorised_group in lookup_lists|get_item:group_list %}\n                {\n                    groupid: \"{{ authorised_group.lookup_id }}\",\n                    title: \"{{ authorised_group.name }}\"\n                },\n            {% endfor %}\n        ]);\n    });\n</script>", "{% load dictionary_tag %}\n<script>\n    /**\n     * ID of the last AJAX search request we sent.\n     */\n    searchId_u = 0;\n\n    $(document).ready(function() {\n        $(\"#{{ input_tag_id }}\").select2({\n            placeholder: \"Search for user\",\n            minimumInputLength: 3,\n            multiple: {{ multiple }},\n            ajax: {\n                url: \"{%  url 'ucamlookup_find_people' %}\",\n                dataType: 'json',\n                data: function (term, page) {\n                    return {\n                        query: term,\n                        searchId_u: ++searchId_u\n                    };\n                },\n                results: function (data, page) {\n                    if (data.searchId_u != searchId_u)\n                        return;\n                    return {results: data.persons};\n                }\n            },\n            formatResult: function(person) {\n                return person.visibleName+\" (\"+person.crsid+\") \";\n            },\n            formatSelection: function(person) {\n                return person.visibleName+\" (\"+person.crsid+\") \";\n            },\n            id: function(person) {\n                return person.crsid;\n            },\n            dropdownCssClass: \"bigdrop\", // apply css that makes the dropdown taller\n            escapeMarkup: function (m) { return m; }\n            // we do not want to escape markup since we are displaying html in results\n        });\n\n        $(\"#{{ input_tag_id }}\").select2(\"data\", [\n            {% for authorised_user in lookup_lists|get_item:user_list %}\n                {\n                    crsid: \"{{ authorised_user.username }}\",\n                    visibleName: \"{{ authorised_user.last_name }}\",\n                    {% if request.user.username == authorised_user.username %}\n                        locked: true\n                    {% endif %}\n                },\n            {% endfor %}\n        ]);\n    });\n</script>"], "fixing_code": ["{% extends \"admin/change_form.html\" %}\n{% load static %}\n{% load i18n %}\n\n\n{% block extrastyle %}\n    {{ block.super }}\n    <link rel=\"stylesheet\" href=\"{% static 'select2-3.4.8/select2.css' %}\">\n{% endblock %}\n\n{% block extrahead %}\n    {{ block.super }}\n    <script src=\"{% static 'jquery-1.11.1.min.js' %}\"></script>\n    <script src=\"{% static 'select2-3.4.8/select2.min.js' %}\"></script>\n{% endblock %}\n\n{% block form_top %}\n    <p>Add a new group. The autocomplete field searches by group name or group id in the lookup service of the\n        University of Cambridge.</p>\n{% endblock %}\n\n{% block after_field_sets %}\n<script type=\"text/javascript\">\n\n    /**\n     * ID of the last AJAX search request we sent.\n     */\n    searchId_g = 0;\n\n    $(document).ready(function() {\n        $(\"#id_lookup_id\").select2({\n            placeholder: \"Search for a group\",\n            minimumInputLength: 3,\n            multiple: false,\n            ajax: {\n                url: \"{%  url 'ucamlookup_find_groups' %}\",\n                dataType: 'json',\n                data: function (term, page) {\n                    return {\n                        query: term,\n                        searchId_g: ++searchId_g\n                    };\n                },\n                results: function (data, page) {\n                    if (data.searchId_g != searchId_g)\n                        return;\n                    return {results: data.groups};\n                }\n            },\n            formatResult: function(group, container, query, escapeMarkup) {\n                return escapeMarkup(group.title);\n            },\n            formatSelection: function(group, container, escapeMarkup) {\n                return escapeMarkup(group.title);\n            },\n            id: function(group) {\n                return group.groupid;\n            },\n            dropdownCssClass: \"bigdrop\", // apply css that makes the dropdown taller\n            width: '100%'\n        });\n    });\n</script>\n{% endblock %}\n", "{% extends \"admin/change_form.html\" %}\n{% load static %}\n{% load i18n %}\n\n\n{% block extrastyle %}\n    {{ block.super }}\n    <link rel=\"stylesheet\" href=\"{% static 'select2-3.4.8/select2.css' %}\">\n{% endblock %}\n\n{% block extrahead %}\n    {{ block.super }}\n    <script src=\"{% static 'jquery-1.11.1.min.js' %}\"></script>\n    <script src=\"{% static 'select2-3.4.8/select2.min.js' %}\"></script>\n{% endblock %}\n\n{% block form_top %}\n    <p>The autocomplete field searches by name or crsid in the lookup service of the University of Cambridge.</p>\n{% endblock %}\n\n{% block after_field_sets %}\n<script type=\"text/javascript\">\n\n    /**\n     * ID of the last AJAX search request we sent.\n     */\n    searchId_u = 0;\n\n    $(document).ready(function() {\n        $(\"#id_username\").select2({\n            placeholder: \"Search for a University of Cambridge user\",\n            minimumInputLength: 3,\n            multiple: false,\n            ajax: {\n                url: \"{%  url 'ucamlookup_find_people' %}\",\n                dataType: 'json',\n                data: function (term, page) {\n                    return {\n                        query: term,\n                        searchId_u: ++searchId_u\n                    };\n                },\n                results: function (data, page) {\n                    if (data.searchId_u != searchId_u)\n                        return;\n                    return {results: data.persons};\n                }\n            },\n            formatResult: function(person, container, query, escapeMarkup) {\n                return escapeMarkup(person.visibleName+\" (\"+person.crsid+\") \");\n            },\n            formatSelection: function(person, container, escapeMarkup) {\n                return escapeMarkup(person.visibleName+\" (\"+person.crsid+\") \");\n            },\n            id: function(person) {\n                return person.crsid;\n            },\n            dropdownCssClass: \"bigdrop\", // apply css that makes the dropdown taller\n            width: '50%'\n        });\n    });\n</script>\n{% endblock %}\n", "{% load dictionary_tag %}\n<script>\n    /**\n     * ID of the last AJAX search request we sent.\n     */\n    searchId_g = 0;\n\n    $(document).ready(function() {\n        $(\"#{{ input_tag_id }}\").select2({\n            placeholder: \"Search for groups\",\n            minimumInputLength: 3,\n            multiple: {{ multiple }},\n            ajax: {\n                url: \"{%  url 'ucamlookup_find_groups' %}\",\n                dataType: 'json',\n                data: function (term, page) {\n                    return {\n                        query: term,\n                        searchId_g: ++searchId_g\n                    };\n                },\n                results: function (data, page) {\n                    if (data.searchId_g != searchId_g)\n                        return;\n                    return {results: data.groups};\n                }\n            },\n            formatResult: function(group, container, query, escapeMarkup) {\n                return escapeMarkup(group.title);\n            },\n            formatSelection: function(group, container, escapeMarkup) {\n                return escapeMarkup(group.title);\n            },\n            id: function(group) {\n                return group.groupid;\n            },\n            dropdownCssClass: \"bigdrop\", // apply css that makes the dropdown taller\n        });\n\n        $(\"#{{ input_tag_id }}\").select2(\"data\", [\n            {% for authorised_group in lookup_lists|get_item:group_list %}\n                {\n                    groupid: \"{{ authorised_group.lookup_id }}\",\n                    title: \"{{ authorised_group.name }}\"\n                },\n            {% endfor %}\n        ]);\n    });\n</script>\n", "{% load dictionary_tag %}\n<script>\n    /**\n     * ID of the last AJAX search request we sent.\n     */\n    searchId_u = 0;\n\n    $(document).ready(function() {\n        $(\"#{{ input_tag_id }}\").select2({\n            placeholder: \"Search for user\",\n            minimumInputLength: 3,\n            multiple: {{ multiple }},\n            ajax: {\n                url: \"{%  url 'ucamlookup_find_people' %}\",\n                dataType: 'json',\n                data: function (term, page) {\n                    return {\n                        query: term,\n                        searchId_u: ++searchId_u\n                    };\n                },\n                results: function (data, page) {\n                    if (data.searchId_u != searchId_u)\n                        return;\n                    return {results: data.persons};\n                }\n            },\n            formatResult: function(person, container, wuery, escapeMarkup) {\n                return escapeMarkup(person.visibleName+\" (\"+person.crsid+\") \");\n            },\n            formatSelection: function(person, container, escapeMarkup) {\n                return escapeMarkup(person.visibleName+\" (\"+person.crsid+\") \");\n            },\n            id: function(person) {\n                return person.crsid;\n            },\n            dropdownCssClass: \"bigdrop\", // apply css that makes the dropdown taller\n        });\n\n        $(\"#{{ input_tag_id }}\").select2(\"data\", [\n            {% for authorised_user in lookup_lists|get_item:user_list %}\n                {\n                    crsid: \"{{ authorised_user.username }}\",\n                    visibleName: \"{{ authorised_user.last_name }}\",\n                    {% if request.user.username == authorised_user.username %}\n                        locked: true\n                    {% endif %}\n                },\n            {% endfor %}\n        ]);\n    });\n</script>\n"], "filenames": ["ucamlookup/templates/admin/auth/lookup_group/add_form.html", "ucamlookup/templates/admin/auth/lookup_user/add_form.html", "ucamlookup/templates/ucamlookup_groups.html", "ucamlookup/templates/ucamlookup_users.html"], "buggy_code_start_loc": [50, 49, 28, 28], "buggy_code_end_loc": [67, 66, 52, 55], "fixing_code_start_loc": [50, 49, 28, 28], "fixing_code_end_loc": [65, 64, 50, 53], "type": "CWE-79", "message": "** UNSUPPPORTED WHEN ASSIGNED **** UNSUPPORTED WHEN ASSIGNED ** A vulnerability classified as problematic was found in University of Cambridge django-ucamlookup up to 1.9.1. Affected by this vulnerability is an unknown functionality of the component Lookup Handler. The manipulation leads to cross site scripting. The attack can be launched remotely. Upgrading to version 1.9.2 is able to address this issue. The name of the patch is 5e25e4765637ea4b9e0bf5fcd5e9a922abee7eb3. It is recommended to upgrade the affected component. The identifier VDB-217441 was assigned to this vulnerability. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.", "other": {"cve": {"id": "CVE-2016-15010", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-05T09:15:08.380", "lastModified": "2023-01-11T18:07:10.877", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "** UNSUPPPORTED WHEN ASSIGNED **** UNSUPPORTED WHEN ASSIGNED ** A vulnerability classified as problematic was found in University of Cambridge django-ucamlookup up to 1.9.1. Affected by this vulnerability is an unknown functionality of the component Lookup Handler. The manipulation leads to cross site scripting. The attack can be launched remotely. Upgrading to version 1.9.2 is able to address this issue. The name of the patch is 5e25e4765637ea4b9e0bf5fcd5e9a922abee7eb3. It is recommended to upgrade the affected component. The identifier VDB-217441 was assigned to this vulnerability. NOTE: This vulnerability only affects products that are no longer supported by the maintainer."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:django-ucamlookup_project:django-ucamlookup:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.9.2", "matchCriteriaId": "DC10A621-F547-44A7-8307-EA46C638D0B6"}]}]}], "references": [{"url": "https://github.com/uisautomation/django-ucamlookup/commit/5e25e4765637ea4b9e0bf5fcd5e9a922abee7eb3", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/uisautomation/django-ucamlookup/releases/tag/1.9.2", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217441", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217441", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/uisautomation/django-ucamlookup/commit/5e25e4765637ea4b9e0bf5fcd5e9a922abee7eb3"}}