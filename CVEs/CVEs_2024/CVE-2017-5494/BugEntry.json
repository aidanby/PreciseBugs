{"buggy_code": ["<?php\n/**\n * This is b2evolution's application config file.\n *\n * @package conf\n */\nif( !defined('EVO_CONFIG_LOADED') ) die( 'Please, do not access this page directly.' );\n\n\n$app_name = 'b2evolution';\n$app_shortname = 'b2evo';\n\n/**\n * The version of the application.\n * Note: This has to be compatible with {@link http://us2.php.net/en/version-compare}.\n * @global string\n */\n$app_version = '6.7.10-stable';\n\n/**\n * Release date (ISO)\n * @global string\n */\n$app_date = '2017-01-11';\n\n/**\n * Long version string for checking differences\n */\n$app_version_long = $app_version.'-'.$app_date;\n\n/**\n * This is used to check if the database is up to date.\n *\n * This will be incrememented by 5 with each change in {@link upgrade_b2evo_tables()}\n * in order to leave space for maintenance releases.\n *\n * {@internal Before changing this in CVS, it should be discussed! }}\n */\n$new_db_version = 11810;\n\n/**\n * Minimum PHP version required for b2evolution to function properly. It will contain each module own minimum PHP version as well.\n * @global array\n */\n$required_php_version = array( 'application' => '5.2' );\n\n/**\n * Minimum MYSQL version required for b2evolution to function properly. It will contain each module own minimum MYSQL version as well.\n * @global array\n */\n$required_mysql_version = array( 'application' => '5.0.3' );\n\n/**\n * Is displayed on the login screen:\n */\n$app_footer_text = '<a href=\"http://b2evolution.net/\" title=\"visit b2evolution\\'s website\"><strong>b2evolution '.$app_version.'</strong></a>\n\t\t&ndash;\n\t\t<a href=\"http://b2evolution.net/about/gnu-gpl-license\" class=\"nobr\">GPL License</a>';\n\n$copyright_text = '<span class=\"nobr\">&copy;2003-2016 by <a href=\"http://fplanque.net/\">Fran&ccedil;ois</a> <a href=\"http://fplanque.com/\">Planque</a> &amp; <a href=\"http://b2evolution.net/about/about-us\">others</a>.</span>';\n\n/**\n * Do you want to display the help links to online documentation?\n *\n * @global boolean\n */\n$online_help_links = true;\n\n/**\n * Modules to load\n *\n * This is most useful when extending evoCore with features beyond what b2evolution does and when those features do not\n * fit nicely into a plugin, mostly when they are too large or too complex.\n *\n * Note: a long term goal is to be able to disable some b2evolution feature sets that would not be needed. This should\n * however only be used for large enough feature sets to make it worth the trouble. NO MICROMANAGING here.\n * Try commenting out the 'collections' module to revert to pretty much just evocore.\n */\n$modules = array(\n\t\t'_core',\n\t\t'collections',  // TODO: installer won't work without this module\n\t\t'polls',\n\t\t'files',\n\t\t'sessions',\n\t\t'messaging',\n\t\t'maintenance',\n\t);\n?>\n", "<?php\n/**\n * This file implements creation of DB tables\n *\n * b2evolution - {@link http://b2evolution.net/}\n * Released under GNU GPL License - {@link http://b2evolution.net/about/gnu-gpl-license}\n * @copyright (c)2003-2016 by Francois Planque - {@link http://fplanque.com/}\n * Parts of this file are copyright (c)2004 by Vegar BERG GULDAL - {@link http://funky-m.com/}\n * Parts of this file are copyright (c)2005 by Jason EDGECOMBE\n *\n * @package install\n */\nif( !defined('EVO_MAIN_INIT') ) die( 'Please, do not access this page directly.' );\n\nload_class( 'users/model/_group.class.php', 'Group' );\nload_funcs( 'collections/model/_category.funcs.php' );\nload_class( 'users/model/_organization.class.php', 'Organization' );\n\n/**\n * Used for fresh install\n */\nfunction create_tables()\n{\n\tglobal $inc_path;\n\n\t// Load DB schema from modules\n\tload_db_schema();\n\n\t// Update the progress bar status\n\tupdate_install_progress_bar();\n\n\tload_funcs('_core/model/db/_upgrade.funcs.php');\n\n\t// Alter DB to match DB schema:\n\tinstall_make_db_schema_current( true );\n}\n\n\n/**\n * Insert all default data:\n */\nfunction create_default_data()\n{\n\tglobal $admins_Group, $moderators_Group, $editors_Group, $users_Group, $suspect_Group, $spam_Group, $blogb_Group;\n\tglobal $DB, $locales, $current_locale, $baseurl;\n\t// This will install all sorts of additional things... for testing purposes:\n\tglobal $install_test_features, $create_sample_contents;\n\n\t// Inserting sample data triggers events: instead of checking if $Plugins is an object there, just use a fake one..\n\tload_class('plugins/model/_plugins_admin_no_db.class.php', 'Plugins_admin_no_DB' );\n\tglobal $Plugins;\n\t$Plugins = new Plugins_admin_no_DB(); // COPY\n\n\t// added in 0.8.7\n\ttask_begin( 'Creating default blacklist entries... ' );\n\t// This string contains antispam information that is obfuscated because some hosting\n\t// companies prevent uploading PHP files containing \"spam\" strings.\n\t// pre_dump(get_antispam_query());\n\t$query = get_antispam_query();\n\t$DB->query( $query );\n\ttask_end();\n\n\ttask_begin( 'Creating default antispam IP ranges... ' );\n\t$DB->query( '\n\t\tINSERT INTO T_antispam__iprange ( aipr_IPv4start, aipr_IPv4end, aipr_status )\n\t\tVALUES ( '.$DB->quote( ip2int( '127.0.0.0' ) ).', '.$DB->quote( ip2int( '127.0.0.255' ) ).', \"trusted\" ),\n\t\t\t( '.$DB->quote( ip2int( '10.0.0.0' ) ).', '.$DB->quote( ip2int( '10.255.255.255' ) ).', \"trusted\" ),\n\t\t\t( '.$DB->quote( ip2int( '172.16.0.0' ) ).', '.$DB->quote( ip2int( '172.31.255.255' ) ).', \"trusted\" ),\n\t\t\t( '.$DB->quote( ip2int( '192.168.0.0' ) ).', '.$DB->quote( ip2int( '192.168.255.255' ) ).', \"trusted\" )\n\t\t' );\n\ttask_end();\n\n\t// added in 0.8.9\n\ttask_begin( 'Creating default groups... ' );\n\t$admins_Group = new Group(); // COPY !\n\t$admins_Group->set( 'name', 'Administrators' );\n\t$admins_Group->set( 'level', 10 );\n\t$admins_Group->set( 'perm_blogs', 'editall' );\n\t$admins_Group->set( 'perm_stats', 'edit' );\n\t$admins_Group->set( 'perm_xhtml_css_tweaks', 1 );\n\t$admins_Group->dbinsert();\n\n\t$moderators_Group = new Group(); // COPY !\n\t$moderators_Group->set( 'name', 'Moderators' );\n\t$moderators_Group->set( 'level', 8 );\n\t$moderators_Group->set( 'perm_blogs', 'viewall' );\n\t$moderators_Group->set( 'perm_stats', 'user' );\n\t$moderators_Group->set( 'perm_xhtml_css_tweaks', 1 );\n\t$moderators_Group->dbinsert();\n\n\t$editors_Group = new Group(); // COPY !\n\t$editors_Group->set( 'name', 'Editors' );\n\t$editors_Group->set( 'level', 6 );\n\t$editors_Group->set( 'perm_blogs', 'user' );\n\t$editors_Group->set( 'perm_stats', 'none' );\n\t$editors_Group->set( 'perm_xhtml_css_tweaks', 1 );\n\t$editors_Group->dbinsert();\n\n\t$users_Group = new Group(); // COPY !\n\t$users_Group->set( 'name', 'Normal Users' );\n\t$users_Group->set( 'level', 4 );\n\t$users_Group->set( 'perm_blogs', 'user' );\n\t$users_Group->set( 'perm_stats', 'none' );\n\t$users_Group->dbinsert();\n\n\t$suspect_Group = new Group(); // COPY !\n\t$suspect_Group->set( 'name', 'Misbehaving/Suspect Users' );\n\t$suspect_Group->set( 'level', 2 );\n\t$suspect_Group->set( 'perm_blogs', 'user' );\n\t$suspect_Group->set( 'perm_stats', 'none' );\n\t$suspect_Group->dbinsert();\n\n\t$spam_Group = new Group(); // COPY !\n\t$spam_Group->set( 'name', 'Spammers/Restricted Users' );\n\t$spam_Group->set( 'level', 1 );\n\t$spam_Group->set( 'perm_blogs', 'user' );\n\t$spam_Group->set( 'perm_stats', 'none' );\n\t$spam_Group->dbinsert();\n\n\t$blogb_Group = new Group(); // COPY !\n\t$blogb_Group->set( 'name', 'Blog B Members' );\n\t$blogb_Group->set( 'usage', 'secondary' );\n\t$blogb_Group->set( 'level', 1 );\n\t$blogb_Group->set( 'perm_blogs', 'user' );\n\t$blogb_Group->set( 'perm_stats', 'none' );\n\t$blogb_Group->dbinsert();\n\ttask_end();\n\n\ttask_begin( 'Creating groups for user field definitions... ' );\n\t$DB->query( \"\n\t\tINSERT INTO T_users__fieldgroups ( ufgp_name, ufgp_order )\n\t\tVALUES ( 'About me', '1' ),\n\t\t\t\t\t ( 'Instant Messaging', '2' ),\n\t\t\t\t\t ( 'Phone', '3' ),\n\t\t\t\t\t ( 'Web', '4' ),\n\t\t\t\t\t ( 'Address', '5' )\" );\n\ttask_end();\n\n\ttask_begin( 'Creating user field definitions... ' );\n\t// fp> Anyone, please add anything you can think of. It's better to start with a large list that update it progressively.\n\t$DB->query( \"\n\t\tINSERT INTO T_users__fielddefs (ufdf_ufgp_ID, ufdf_type, ufdf_name, ufdf_options, ufdf_required, ufdf_duplicated, ufdf_order, ufdf_suggest, ufdf_code, ufdf_icon_name)\n\t\t VALUES ( 1, 'text',   'Micro bio',     NULL, 'recommended', 'forbidden', '1',  '0', 'microbio',     'fa fa-info-circle' ),\n\t\t\t\t\t\t( 1, 'word',   'I like',        NULL, 'recommended', 'list',      '2',  '1', 'ilike',        'fa fa-thumbs-o-up' ),\n\t\t\t\t\t\t( 1, 'word',   'I don\\'t like', NULL, 'recommended', 'list',      '3',  '1', 'idontlike',    'fa fa-thumbs-o-down' ),\n\t\t\t\t\t\t( 2, 'email',  'MSN/Live IM',   NULL, 'optional',    'allowed',   '1',  '0', 'msnliveim',    NULL ),\n\t\t\t\t\t\t( 2, 'word',   'Yahoo IM',      NULL, 'optional',    'allowed',   '2',  '0', 'yahooim',      'fa fa-yahoo' ),\n\t\t\t\t\t\t( 2, 'word',   'AOL AIM',       NULL, 'optional',    'allowed',   '3',  '0', 'aolaim',       NULL ),\n\t\t\t\t\t\t( 2, 'number', 'ICQ ID',        NULL, 'optional',    'allowed',   '4',  '0', 'icqid',        NULL ),\n\t\t\t\t\t\t( 2, 'phone',  'Skype',         NULL, 'optional',    'allowed',   '5',  '0', 'skype',        'fa fa-skype' ),\n\t\t\t\t\t\t( 3, 'phone',  'Main phone',    NULL, 'optional',    'forbidden', '1',  '0', 'mainphone',    'fa fa-phone' ),\n\t\t\t\t\t\t( 3, 'phone',  'Cell phone',    NULL, 'optional',    'allowed',   '2',  '0', 'cellphone',    'fa fa-mobile-phone' ),\n\t\t\t\t\t\t( 3, 'phone',  'Office phone',  NULL, 'optional',    'allowed',   '3',  '0', 'officephone',  'fa fa-phone' ),\n\t\t\t\t\t\t( 3, 'phone',  'Home phone',    NULL, 'optional',    'allowed',   '4',  '0', 'homephone',    'fa fa-phone' ),\n\t\t\t\t\t\t( 3, 'phone',  'Office FAX',    NULL, 'optional',    'allowed',   '5',  '0', 'officefax',    'fa fa-fax' ),\n\t\t\t\t\t\t( 3, 'phone',  'Home FAX',      NULL, 'optional',    'allowed',   '6',  '0', 'homefax',      'fa fa-fax' ),\n\t\t\t\t\t\t( 4, 'url',    'Twitter',       NULL, 'recommended', 'forbidden', '1',  '0', 'twitter',      'fa fa-twitter' ),\n\t\t\t\t\t\t( 4, 'url',    'Facebook',      NULL, 'recommended', 'forbidden', '2',  '0', 'facebook',     'fa fa-facebook' ),\n\t\t\t\t\t\t( 4, 'url',    'Google Plus',   NULL, 'optional',    'forbidden', '3',  '0', 'googleplus',   'fa fa-google-plus fa-x-google-plus--nudge' ),\n\t\t\t\t\t\t( 4, 'url',    'Linkedin',      NULL, 'optional',    'forbidden', '4',  '0', 'linkedin',     'fa fa-linkedin fa-x-linkedin--nudge' ),\n\t\t\t\t\t\t( 4, 'url',    'GitHub',        NULL, 'optional',    'forbidden', '5',  '0', 'github',       'fa fa-github-alt' ),\n\t\t\t\t\t\t( 4, 'url',    'Website',       NULL, 'recommended', 'allowed',   '6',  '0', 'website',      NULL ),\n\t\t\t\t\t\t( 4, 'url',    'Blog',          NULL, 'optional',    'allowed',   '7',  '0', 'blog',         NULL ),\n\t\t\t\t\t\t( 4, 'url',    'Myspace',       NULL, 'optional',    'forbidden', '8',  '0', 'myspace',      NULL ),\n\t\t\t\t\t\t( 4, 'url',    'Flickr',        NULL, 'optional',    'forbidden', '9',  '0', 'flickr',       'fa fa-flickr' ),\n\t\t\t\t\t\t( 4, 'url',    'YouTube',       NULL, 'optional',    'forbidden', '10', '0', 'youtube',      'fa fa-youtube' ),\n\t\t\t\t\t\t( 4, 'url',    'Digg',          NULL, 'optional',    'forbidden', '11', '0', 'digg',         'fa fa-digg' ),\n\t\t\t\t\t\t( 4, 'url',    'StumbleUpon',   NULL, 'optional',    'forbidden', '12', '0', 'stumbleupon',  'fa fa-stumbleupon' ),\n\t\t\t\t\t\t( 4, 'url',    'Pinterest',     NULL, 'optional',    'forbidden', '13', '0', 'pinterest',    'fa fa-pinterest-p' ),\n\t\t\t\t\t\t( 5, 'text',   'Main address',  NULL, 'optional',    'forbidden', '1',  '0', 'mainaddress',  'fa fa-building' ),\n\t\t\t\t\t\t( 5, 'text',   'Home address',  NULL, 'optional',    'forbidden', '2',  '0', 'homeaddress',  'fa fa-home' )\" );\n\ttask_end();\n\n\n\t// don't change order of the following two functions as countries has relations to currencies\n\tcreate_default_currencies();\n\tcreate_default_countries();\n\n\tcreate_default_regions();\n\tcreate_default_subregions();\n\n\n\ttask_begin( 'Creating admin user... ' );\n\tglobal $timestamp, $admin_email, $default_locale, $default_country, $install_login, $install_password;\n\tglobal $random_password;\n\n\t// Create organization\n\tglobal $user_org_IDs;\n\t$user_org_IDs = NULL;\n\n\t// A default organization will be created so that there will be something to\n\t// display in the homepage's organization members widget\n\t$Organization = new Organization();\n\t$Organization->set( 'owner_user_ID', '1' );\n\t$Organization->set( 'name', 'Company XYZ' );\n\t$Organization->set( 'url', 'http://b2evolution.net/' );\n\tif( $Organization->dbinsert() )\n\t{ // Use this organization for new created users\n\t\t$user_org_IDs = array( $Organization->ID );\n\t}\n\n\t// Set default country from locale code\n\t$country_code = explode( '-', $default_locale );\n\tif( isset( $country_code[1] ) )\n\t{\n\t\t$default_country = $DB->get_var( '\n\t\t\tSELECT ctry_ID\n\t\t\t  FROM T_regional__country\n\t\t\t WHERE ctry_code = '.$DB->quote( strtolower( $country_code[1] ) ) );\n\t}\n\n\tif( !isset( $install_password ) )\n\t{\n\t\t$random_password = generate_random_passwd(); // no ambiguous chars\n\t}\n\telse\n\t{\n\t\t$random_password = $install_password;\n\t}\n\n\tcreate_user( array(\n\t\t\t'login'     => isset( $install_login ) ? $install_login : 'admin',\n\t\t\t'firstname' => 'Johnny',\n\t\t\t'lastname'  => 'Admin',\n\t\t\t'level'     => 10,\n\t\t\t'gender'    => 'M',\n\t\t\t'Group'     => $admins_Group,\n\t\t\t'org_IDs'   => $user_org_IDs,\n\t\t\t'fields'    => array(\n\t\t\t\t\t'Micro bio'   => 'I am the demo administrator of this site.'.\"\\n\".'I love having so much power!',\n\t\t\t\t\t'Website'     => 'http://b2evolution.net/',\n\t\t\t\t\t'Twitter'     => 'https://twitter.com/b2evolution/',\n\t\t\t\t\t'Facebook'    => 'https://www.facebook.com/b2evolution',\n\t\t\t\t\t'Linkedin'    => 'https://www.linkedin.com/company/b2evolution-net',\n\t\t\t\t\t'GitHub'      => 'https://github.com/b2evolution/b2evolution',\n\t\t\t\t\t'Google Plus' => 'https://plus.google.com/+b2evolution/posts',\n\t\t\t\t)\n\t\t) );\n\ttask_end();\n\n\t// Activating multiple sessions and email message form for administrator, and set other user settings\n\ttask_begin( 'Set settings for administrator user... ' );\n\t$DB->query( \"\n\t\tINSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\tVALUES ( 1, 'login_multiple_sessions', '1' ),\n\t\t\t\t( 1, 'enable_email', '1' ),\n\t\t\t\t( 1, 'created_fromIPv4', '\".ip2int( '127.0.0.1' ).\"' ),\n\t\t\t\t( 1, 'user_domain', 'localhost' )\" );\n\ttask_end();\n\n\n\t// added in Phoenix-Alpha\n\ttask_begin( 'Creating default Post Types... ' );\n\t$post_types = array();\n\t$post_types[] = array(\n\t\t\t'name'           => 'Post',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Podcast Episode',\n\t\t\t'podcast'        => 1,\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Post with Custom Fields',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Child Post',\n\t\t\t'use_parent'     => 'required',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Manual Page',\n\t\t\t'allow_html'     => 0,\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Forum Topic',\n\t\t\t'allow_html'     => 0,\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Photo Album',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Standalone Page',\n\t\t\t'usage'          => 'page',\n\t\t\t'template_name'  => 'page',\n\t\t\t'perm_level'     => 'restricted',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Intro-Front',\n\t\t\t'usage'          => 'intro-front',\n\t\t\t'template_name'  => NULL,\n\t\t\t'allow_breaks'   => 0,\n\t\t\t'allow_featured' => 0,\n\t\t\t'perm_level'     => 'restricted',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Intro-Main',\n\t\t\t'usage'          => 'intro-main',\n\t\t\t'template_name'  => NULL,\n\t\t\t'allow_breaks'   => 0,\n\t\t\t'allow_featured' => 0,\n\t\t\t'perm_level'     => 'restricted',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Intro-Cat',\n\t\t\t'usage'          => 'intro-cat',\n\t\t\t'template_name'  => NULL,\n\t\t\t'allow_breaks'   => 0,\n\t\t\t'allow_featured' => 0,\n\t\t\t'perm_level'     => 'restricted',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Intro-Tag',\n\t\t\t'usage'          => 'intro-tag',\n\t\t\t'template_name'  => NULL,\n\t\t\t'allow_breaks'   => 0,\n\t\t\t'allow_featured' => 0,\n\t\t\t'perm_level'     => 'restricted',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Intro-Sub',\n\t\t\t'usage'          => 'intro-sub',\n\t\t\t'template_name'  => NULL,\n\t\t\t'allow_breaks'   => 0,\n\t\t\t'allow_featured' => 0,\n\t\t\t'perm_level'     => 'restricted',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Intro-All',\n\t\t\t'usage'          => 'intro-all',\n\t\t\t'template_name'  => NULL,\n\t\t\t'allow_breaks'   => 0,\n\t\t\t'allow_featured' => 0,\n\t\t\t'perm_level'     => 'restricted',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Sidebar link',\n\t\t\t'usage'          => 'special',\n\t\t\t'template_name'  => NULL,\n\t\t\t'perm_level'     => 'admin',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Advertisement',\n\t\t\t'usage'          => 'special',\n\t\t\t'template_name'  => NULL,\n\t\t\t'perm_level'     => 'admin',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'                   => 'Terms & Conditions',\n\t\t\t'usage'                  => 'special',\n\t\t\t'template_name'          => NULL,\n\t\t\t'allow_breaks'           => 0,\n\t\t\t'allow_featured'         => 0,\n\t\t\t'perm_level'             => 'admin',\n\t\t\t'description'            => 'Use this post type for terms & conditions of the site.',\n\t\t\t'use_text'               => 'required',\n\t\t\t'use_tags'               => 'never',\n\t\t\t'use_excerpt'            => 'never',\n\t\t\t'use_url'                => 'never',\n\t\t\t'use_parent'             => 'never',\n\t\t\t'use_title_tag'          => 'never',\n\t\t\t'use_meta_desc'          => 'never',\n\t\t\t'use_meta_keywds'        => 'never',\n\t\t\t'use_comments'           => 0,\n\t\t\t'allow_closing_comments' => 0,\n\t\t\t'use_comment_expiration' => 'never',\n\t\t\t'use_custom_fields'      => 0,\n\t\t);\n\t// Default settings:\n\t$post_type_default_settings = array(\n\t\t\t'name'                   => '',\n\t\t\t'description'            => NULL,\n\t\t\t'usage'                  => 'post',\n\t\t\t'template_name'          => 'single',\n\t\t\t'perm_level'             => 'standard',\n\t\t\t'allow_html'             => 1,\n\t\t\t'allow_breaks'           => 1,\n\t\t\t'allow_featured'         => 1,\n\t\t\t'use_text'               => 'optional',\n\t\t\t'use_tags'               => 'optional',\n\t\t\t'use_excerpt'            => 'optional',\n\t\t\t'use_url'                => 'optional',\n\t\t\t'podcast'                => 0,\n\t\t\t'use_parent'             => 'never',\n\t\t\t'use_title_tag'          => 'optional',\n\t\t\t'use_meta_desc'          => 'optional',\n\t\t\t'use_meta_keywds'        => 'optional',\n\t\t\t'use_comments'           => 1,\n\t\t\t'allow_closing_comments' => 1,\n\t\t\t'use_comment_expiration' => 'optional',\n\t\t\t'use_custom_fields'      => 1,\n\t\t);\n\t$post_types_sql = 'INSERT INTO T_items__type ( ityp_'.implode( ', ityp_', array_keys( $post_type_default_settings ) ).' ) VALUES ';\n\tforeach( $post_types as $p => $post_type )\n\t{\n\t\t$post_type = array_merge( $post_type_default_settings, $post_type );\n\t\t$post_types_sql .= '( '.$DB->quote( $post_type ).' )';\n\t\tif( $p != count( $post_types ) - 1 )\n\t\t{\n\t\t\t$post_types_sql .= ',';\n\t\t}\n\t}\n\t// Insert item types:\n\t$DB->query( $post_types_sql );\n\n\t$DB->query( 'INSERT INTO T_items__type_custom_field ( itcf_ityp_ID, itcf_label, itcf_name, itcf_type )\n\t\t\tVALUES ( 3, \"First numeric field\", \"first_numeric_field\", \"double\" ),\n\t\t\t\t\t\t ( 3, \"Second numeric field\", \"second_numeric_field\", \"double\" ),\n\t\t\t\t\t\t ( 3, \"First text field\", \"first_text_field\", \"varchar\" ),\n\t\t\t\t\t\t ( 3, \"Define you own labels\", \"define_you_own_labels\", \"varchar\" )' );\n\ttask_end();\n\n\n\ttask_begin( 'Creating default Post Statuses... ' );\n\t$DB->query( \"\n\t\tINSERT INTO T_items__status ( pst_name )\n\t\tVALUES ( 'New' ),\n\t\t\t\t\t ( 'In Progress' ),\n\t\t\t\t\t ( 'Duplicate' ),\n\t\t\t\t\t ( 'Not A Bug' ),\n\t\t\t\t\t ( 'In Review' ),\n\t\t\t\t\t ( 'Fixed' ),\n\t\t\t\t\t ( 'Closed' )\" );\n\ttask_end();\n\n\n\t// added in Phoenix-Beta\n\ttask_begin( 'Creating default file types... ' );\n\t// Contribs: feel free to add more types here...\n\t// TODO: dh> shouldn't they get localized to the app's default locale? fp> ftyp_name, yes\n\t$DB->query( \"INSERT INTO T_filetypes\n\t\t\t(ftyp_ID, ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed)\n\t\tVALUES\n\t\t\t(1, 'gif', 'GIF image', 'image/gif', 'file_image', 'image', 'any'),\n\t\t\t(2, 'png', 'PNG image', 'image/png', 'file_image', 'image', 'any'),\n\t\t\t(3, 'jpg jpeg', 'JPEG image', 'image/jpeg', 'file_image', 'image', 'any'),\n\t\t\t(4, 'txt', 'Text file', 'text/plain', 'file_document', 'text', 'registered'),\n\t\t\t(5, 'htm html', 'HTML file', 'text/html', 'file_www', 'browser', 'admin'),\n\t\t\t(6, 'pdf', 'PDF file', 'application/pdf', 'file_pdf', 'browser', 'registered'),\n\t\t\t(7, 'doc docx', 'Microsoft Word file', 'application/msword', 'file_doc', 'external', 'registered'),\n\t\t\t(8, 'xls xlsx', 'Microsoft Excel file', 'application/vnd.ms-excel', 'file_xls', 'external', 'registered'),\n\t\t\t(9, 'ppt pptx', 'Powerpoint', 'application/vnd.ms-powerpoint', 'file_ppt', 'external', 'registered'),\n\t\t\t(10, 'pps', 'Slideshow', 'pps', 'file_pps', 'external', 'registered'),\n\t\t\t(11, 'zip', 'ZIP archive', 'application/zip', 'file_zip', 'external', 'registered'),\n\t\t\t(12, 'php php3 php4 php5 php6', 'PHP script', 'application/x-httpd-php', 'file_php', 'text', 'admin'),\n\t\t\t(13, 'css', 'Style sheet', 'text/css', 'file_document', 'text', 'registered'),\n\t\t\t(14, 'mp3', 'MPEG audio file', 'audio/mpeg', 'file_sound', 'browser', 'registered'),\n\t\t\t(15, 'm4a', 'MPEG audio file', 'audio/x-m4a', 'file_sound', 'browser', 'registered'),\n\t\t\t(16, 'mp4 f4v', 'MPEG video', 'video/mp4', 'file_video', 'browser', 'registered'),\n\t\t\t(17, 'mov', 'Quicktime video', 'video/quicktime', 'file_video', 'browser', 'registered'),\n\t\t\t(18, 'm4v', 'MPEG video file', 'video/x-m4v', 'file_video', 'browser', 'registered'),\n\t\t\t(19, 'flv', 'Flash video file', 'video/x-flv', 'file_video', 'browser', 'registered'),\n\t\t\t(20, 'swf', 'Flash video file', 'application/x-shockwave-flash', 'file_video', 'browser', 'registered'),\n\t\t\t(21, 'webm', 'WebM video file', 'video/webm', 'file_video', 'browser', 'registered'),\n\t\t\t(22, 'ogv', 'Ogg video file', 'video/ogg', 'file_video', 'browser', 'registered'),\n\t\t\t(23, 'm3u8', 'M3U8 video file', 'application/x-mpegurl', 'file_video', 'browser', 'registered'),\n\t\t\t(24, 'xml', 'XML file', 'application/xml', 'file_www', 'browser', 'admin')\n\t\t\" );\n\ttask_end();\n\n\t// Insert default locales into T_locales.\n\tcreate_default_locales();\n\n\t// Insert default settings into T_settings.\n\tcreate_default_settings();\n\n\t// Create default scheduled jobs\n\tcreate_default_jobs();\n\n\ttask_begin( 'Creating default \"help\" slug... ' );\n\t$DB->query( '\n\t\tINSERT INTO T_slug( slug_title, slug_type )\n\t\tVALUES( \"help\", \"help\" )', 'Add \"help\" slug' );\n\ttask_end();\n\n\t// Create the 'Default' goal category which must always exists and which is not deletable\n\t// The 'Default' category ID will be always 1 because it will be always the first entry in the T_track__goalcat table\n\ttask_begin( 'Creating default goal category... ' );\n\t$DB->query( 'INSERT INTO T_track__goalcat ( gcat_name, gcat_color )\n\t\tVALUES ( '.$DB->quote( 'Default' ).', '.$DB->quote( '#999999' ).' )' );\n\ttask_end();\n\n\n\ttask_begin( 'Creating default polls... ' );\n\t$DB->query( 'INSERT INTO T_polls__question ( pqst_owner_user_ID, pqst_question_text )\n\t\tVALUES ( 1, \"What is your favorite b2evolution feature?\" )' );\n\t$DB->query( 'INSERT INTO T_polls__option ( popt_pqst_ID, popt_option_text, popt_order )\n\t\tVALUES ( 1, \"Multiple blogs\",          1 ),\n\t\t       ( 1, \"Photo Galleries\",         2 ),\n\t\t       ( 1, \"Forums\",                  3 ),\n\t\t       ( 1, \"Online Manuals\",          4 ),\n\t\t       ( 1, \"Newsletters / E-mailing\", 5 ),\n\t\t       ( 1, \"Easy Maintenance\",        6 )' );\n\t$DB->query( 'INSERT INTO T_polls__answer ( pans_pqst_ID, pans_user_ID, pans_popt_ID )\n\t\tVALUES ( 1, 5, 1 ),\n\t\t       ( 1, 6, 2 ),\n\t\t       ( 1, 7, 2 ),\n\t\t       ( 1, 2, 2 ),\n\t\t       ( 1, 3, 3 ),\n\t\t       ( 1, 4, 3 ),\n\t\t       ( 1, 1, 6 )' );\n\ttask_end();\n\n\t// Update the progress bar status\n\tupdate_install_progress_bar();\n\n\tinstall_basic_skins();\n\n\tinstall_basic_plugins();\n\n\treturn true;\n}\n\n/**\n * Create default currencies\n *\n */\nfunction create_default_currencies( $table_name = 'T_regional__currency' )\n{\n\tglobal $DB;\n\n\ttask_begin( 'Creating default currencies... ' );\n\t$DB->query( \"\n\t\tINSERT INTO $table_name (curr_ID, curr_code, curr_shortcut, curr_name)\n\t\t VALUES\n\t\t\t(1, 'AFN', '&#x60b;', 'Afghani'),\n\t\t\t(2, 'EUR', '&euro;', 'Euro'),\n\t\t\t(3, 'ALL', 'Lek', 'Lek'),\n\t\t\t(4, 'DZD', 'DZD', 'Algerian Dinar'),\n\t\t\t(5, 'USD', '$', 'US Dollar'),\n\t\t\t(6, 'AOA', 'AOA', 'Kwanza'),\n\t\t\t(7, 'XCD', '$', 'East Caribbean Dollar'),\n\t\t\t(8, 'ARS', '$', 'Argentine Peso'),\n\t\t\t(9, 'AMD', 'AMD', 'Armenian Dram'),\n\t\t\t(10, 'AWG', '&fnof;', 'Aruban Guilder'),\n\t\t\t(11, 'AUD', '$', 'Australian Dollar'),\n\t\t\t(12, 'AZN', '&#x43c;&#x430;&#x43d;', 'Azerbaijanian Manat'),\n\t\t\t(13, 'BSD', '$', 'Bahamian Dollar'),\n\t\t\t(14, 'BHD', 'BHD', 'Bahraini Dinar'),\n\t\t\t(15, 'BDT', 'BDT', 'Taka'),\n\t\t\t(16, 'BBD', '$', 'Barbados Dollar'),\n\t\t\t(17, 'BYR', 'p.', 'Belarussian Ruble'),\n\t\t\t(18, 'BZD', 'BZ$', 'Belize Dollar'),\n\t\t\t(19, 'XOF', 'XOF', 'CFA Franc BCEAO'),\n\t\t\t(20, 'BMD', '$', 'Bermudian Dollar'),\n\t\t\t(21, 'BAM', 'KM', 'Convertible Marks'),\n\t\t\t(22, 'BWP', 'P', 'Pula'),\n\t\t\t(23, 'NOK', 'kr', 'Norwegian Krone'),\n\t\t\t(24, 'BRL', 'R$', 'Brazilian Real'),\n\t\t\t(25, 'BND', '$', 'Brunei Dollar'),\n\t\t\t(26, 'BGN', '&#x43b;&#x432;', 'Bulgarian Lev'),\n\t\t\t(27, 'BIF', 'BIF', 'Burundi Franc'),\n\t\t\t(28, 'KHR', '&#x17db;', 'Riel'),\n\t\t\t(29, 'XAF', 'XAF', 'CFA Franc BEAC'),\n\t\t\t(30, 'CAD', '$', 'Canadian Dollar'),\n\t\t\t(31, 'CVE', 'CVE', 'Cape Verde Escudo'),\n\t\t\t(32, 'KYD', '$', 'Cayman Islands Dollar'),\n\t\t\t(33, 'CNY', '&yen;', 'Yuan Renminbi'),\n\t\t\t(34, 'KMF', 'KMF', 'Comoro Franc'),\n\t\t\t(35, 'CDF', 'CDF', 'Congolese Franc'),\n\t\t\t(36, 'NZD', '$', 'New Zealand Dollar'),\n\t\t\t(37, 'CRC', '&#x20a1;', 'Costa Rican Colon'),\n\t\t\t(38, 'HRK', 'kn', 'Croatian Kuna'),\n\t\t\t(39, 'CZK', 'K&#x10d;', 'Czech Koruna'),\n\t\t\t(40, 'DKK', 'kr', 'Danish Krone'),\n\t\t\t(41, 'DJF', 'DJF', 'Djibouti Franc'),\n\t\t\t(42, 'DOP', 'RD$', 'Dominican Peso'),\n\t\t\t(43, 'EGP', '&pound;', 'Egyptian Pound'),\n\t\t\t(44, 'ERN', 'ERN', 'Nakfa'),\n\t\t\t(45, 'EEK', 'EEK', 'Kroon'),\n\t\t\t(46, 'ETB', 'ETB', 'Ethiopian Birr'),\n\t\t\t(47, 'FKP', '&pound;', 'Falkland Islands Pound'),\n\t\t\t(48, 'FJD', '$', 'Fiji Dollar'),\n\t\t\t(49, 'XPF', 'XPF', 'CFP Franc'),\n\t\t\t(50, 'GMD', 'GMD', 'Dalasi'),\n\t\t\t(51, 'GEL', 'GEL', 'Lari'),\n\t\t\t(52, 'GHS', 'GHS', 'Cedi'),\n\t\t\t(53, 'GIP', '&pound;', 'Gibraltar Pound'),\n\t\t\t(54, 'GTQ', 'Q', 'Quetzal'),\n\t\t\t(55, 'GBP', '&pound;', 'Pound Sterling'),\n\t\t\t(56, 'GNF', 'GNF', 'Guinea Franc'),\n\t\t\t(57, 'GYD', '$', 'Guyana Dollar'),\n\t\t\t(58, 'HNL', 'L', 'Lempira'),\n\t\t\t(59, 'HKD', '$', 'Hong Kong Dollar'),\n\t\t\t(60, 'HUF', 'Ft', 'Forint'),\n\t\t\t(61, 'ISK', 'kr', 'Iceland Krona'),\n\t\t\t(62, 'INR', 'Rs', 'Indian Rupee'),\n\t\t\t(63, 'IDR', 'Rp', 'Rupiah'),\n\t\t\t(64, 'IRR', '&#xfdfc;', 'Iranian Rial'),\n\t\t\t(65, 'IQD', 'IQD', 'Iraqi Dinar'),\n\t\t\t(66, 'ILS', '&#x20aa;', 'New Israeli Sheqel'),\n\t\t\t(67, 'JMD', 'J$', 'Jamaican Dollar'),\n\t\t\t(68, 'JPY', '&yen;', 'Yen'),\n\t\t\t(69, 'JOD', 'JOD', 'Jordanian Dinar'),\n\t\t\t(70, 'KZT', '&#x43b;&#x432;', 'Tenge'),\n\t\t\t(71, 'KES', 'KES', 'Kenyan Shilling'),\n\t\t\t(72, 'KPW', '&#x20a9;', 'North Korean Won'),\n\t\t\t(73, 'KRW', '&#x20a9;', 'Won'),\n\t\t\t(74, 'KWD', 'KWD', 'Kuwaiti Dinar'),\n\t\t\t(75, 'KGS', '&#x43b;&#x432;', 'Som'),\n\t\t\t(76, 'LAK', '&#x20ad;', 'Kip'),\n\t\t\t(77, 'LVL', 'Ls', 'Latvian Lats'),\n\t\t\t(78, 'LBP', '&pound;', 'Lebanese Pound'),\n\t\t\t(79, 'LRD', '$', 'Liberian Dollar'),\n\t\t\t(80, 'LYD', 'LYD', 'Libyan Dinar'),\n\t\t\t(81, 'CHF', 'CHF', 'Swiss Franc'),\n\t\t\t(82, 'LTL', 'Lt', 'Lithuanian Litas'),\n\t\t\t(83, 'MOP', 'MOP', 'Pataca'),\n\t\t\t(84, 'MKD', '&#x434;&#x435;&#x43d;', 'Denar'),\n\t\t\t(85, 'MGA', 'MGA', 'Malagasy Ariary'),\n\t\t\t(86, 'MWK', 'MWK', 'Kwacha'),\n\t\t\t(87, 'MYR', 'RM', 'Malaysian Ringgit'),\n\t\t\t(88, 'MVR', 'MVR', 'Rufiyaa'),\n\t\t\t(89, 'MRO', 'MRO', 'Ouguiya'),\n\t\t\t(90, 'MUR', 'Rs', 'Mauritius Rupee'),\n\t\t\t(91, 'MDL', 'MDL', 'Moldovan Leu'),\n\t\t\t(92, 'MNT', '&#x20ae;', 'Tugrik'),\n\t\t\t(93, 'MAD', 'MAD', 'Moroccan Dirham'),\n\t\t\t(94, 'MZN', 'MT', 'Metical'),\n\t\t\t(95, 'MMK', 'MMK', 'Kyat'),\n\t\t\t(96, 'NPR', 'Rs', 'Nepalese Rupee'),\n\t\t\t(97, 'ANG', '&fnof;', 'Netherlands Antillian Guilder'),\n\t\t\t(98, 'NIO', 'C$', 'Cordoba Oro'),\n\t\t\t(99, 'NGN', '&#x20a6;', 'Naira'),\n\t\t\t(100, 'OMR', '&#xfdfc;', 'Rial Omani'),\n\t\t\t(101, 'PKR', 'Rs', 'Pakistan Rupee'),\n\t\t\t(102, 'PGK', 'PGK', 'Kina'),\n\t\t\t(103, 'PYG', 'Gs', 'Guarani'),\n\t\t\t(104, 'PEN', 'S/.', 'Nuevo Sol'),\n\t\t\t(105, 'PHP', 'Php', 'Philippine Peso'),\n\t\t\t(106, 'PLN', 'z&#x142;', 'Zloty'),\n\t\t\t(107, 'QAR', '&#xfdfc;', 'Qatari Rial'),\n\t\t\t(108, 'RON', 'lei', 'New Leu'),\n\t\t\t(109, 'RUB', '&#x440;&#x443;&#x431;', 'Russian Ruble'),\n\t\t\t(110, 'RWF', 'RWF', 'Rwanda Franc'),\n\t\t\t(111, 'SHP', '&pound;', 'Saint Helena Pound'),\n\t\t\t(112, 'WST', 'WST', 'Tala'),\n\t\t\t(113, 'STD', 'STD', 'Dobra'),\n\t\t\t(114, 'SAR', '&#xfdfc;', 'Saudi Riyal'),\n\t\t\t(115, 'RSD', '&#x414;&#x438;&#x43d;.', 'Serbian Dinar'),\n\t\t\t(116, 'SCR', 'Rs', 'Seychelles Rupee'),\n\t\t\t(117, 'SLL', 'SLL', 'Leone'),\n\t\t\t(118, 'SGD', '$', 'Singapore Dollar'),\n\t\t\t(119, 'SBD', '$', 'Solomon Islands Dollar'),\n\t\t\t(120, 'SOS', 'S', 'Somali Shilling'),\n\t\t\t(121, 'ZAR', 'R', 'Rand'),\n\t\t\t(122, 'LKR', 'Rs', 'Sri Lanka Rupee'),\n\t\t\t(123, 'SDG', 'SDG', 'Sudanese Pound'),\n\t\t\t(124, 'SRD', '$', 'Surinam Dollar'),\n\t\t\t(125, 'SZL', 'SZL', 'Lilangeni'),\n\t\t\t(126, 'SEK', 'kr', 'Swedish Krona'),\n\t\t\t(127, 'SYP', '&pound;', 'Syrian Pound'),\n\t\t\t(128, 'TWD', '$', 'New Taiwan Dollar'),\n\t\t\t(129, 'TJS', 'TJS', 'Somoni'),\n\t\t\t(130, 'TZS', 'TZS', 'Tanzanian Shilling'),\n\t\t\t(131, 'THB', 'THB', 'Baht'),\n\t\t\t(132, 'TOP', 'TOP', 'Pa'),\n\t\t\t(133, 'TTD', 'TT$', 'Trinidad and Tobago Dollar'),\n\t\t\t(134, 'TND', 'TND', 'Tunisian Dinar'),\n\t\t\t(135, 'TRY', 'TL', 'Turkish Lira'),\n\t\t\t(136, 'TMT', 'TMT', 'Manat'),\n\t\t\t(137, 'UGX', 'UGX', 'Uganda Shilling'),\n\t\t\t(138, 'UAH', '&#x20b4;', 'Hryvnia'),\n\t\t\t(139, 'AED', 'AED', 'UAE Dirham'),\n\t\t\t(140, 'UZS', '&#x43b;&#x432;', 'Uzbekistan Sum'),\n\t\t\t(141, 'VUV', 'VUV', 'Vatu'),\n\t\t\t(142, 'VEF', 'Bs', 'Bolivar Fuerte'),\n\t\t\t(143, 'VND', '&#x20ab;', 'Dong'),\n\t\t\t(144, 'YER', '&#xfdfc;', 'Yemeni Rial'),\n\t\t\t(145, 'ZMK', 'ZMK', 'Zambian Kwacha'),\n\t\t\t(146, 'ZWL', 'Z$', 'Zimbabwe Dollar'),\n\t\t\t(147, 'XAU', 'XAU', 'Gold'),\n\t\t\t(148, 'XBA', 'XBA', 'EURCO'),\n\t\t\t(149, 'XBB', 'XBB', 'European Monetary Unit'),\n\t\t\t(150, 'XBC', 'XBC', 'European Unit of Account 9'),\n\t\t\t(151, 'XBD', 'XBD', 'European Unit of Account 17'),\n\t\t\t(152, 'XDR', 'XDR', 'SDR'),\n\t\t\t(153, 'XPD', 'XPD', 'Palladium'),\n\t\t\t(154, 'XPT', 'XPT', 'Platinum'),\n\t\t\t(155, 'XAG', 'XAG', 'Silver'),\n\t\t\t(156, 'COP', '$', 'Colombian peso'),\n\t\t\t(157, 'CUP', '$', 'Cuban peso'),\n\t\t\t(158, 'SVC', 'SVC', 'Salvadoran colon'),\n\t\t\t(159, 'CLP', '$', 'Chilean peso'),\n\t\t\t(160, 'HTG', 'G', 'Haitian gourde'),\n\t\t\t(161, 'MXN', '$', 'Mexican peso'),\n\t\t\t(162, 'PAB', 'PAB', 'Panamanian balboa'),\n\t\t\t(163, 'UYU', '$', 'Uruguayan peso')\n\t\t\t\" );\n\ttask_end();\n}\n\n/**\n * Create default countries with relations to currencies\n *\n */\nfunction create_default_countries( $table_name = 'T_regional__country', $set_preferred_country = true )\n{\n\tglobal $DB, $current_locale;\n\n\ttask_begin( 'Creating default countries... ' );\n\t$DB->query( \"\n\t\tINSERT INTO $table_name ( ctry_ID, ctry_code, ctry_name, ctry_curr_ID)\n\t\tVALUES\n\t\t\t(1, 'af', 'Afghanistan', 1),\n\t\t\t(2, 'ax', 'Aland Islands', 2),\n\t\t\t(3, 'al', 'Albania', 3),\n\t\t\t(4, 'dz', 'Algeria', 4),\n\t\t\t(5, 'as', 'American Samoa', 5),\n\t\t\t(6, 'ad', 'Andorra', 2),\n\t\t\t(7, 'ao', 'Angola', 6),\n\t\t\t(8, 'ai', 'Anguilla', 7),\n\t\t\t(9, 'aq', 'Antarctica', NULL),\n\t\t\t(10, 'ag', 'Antigua And Barbuda', 7),\n\t\t\t(11, 'ar', 'Argentina', 8),\n\t\t\t(12, 'am', 'Armenia', 9),\n\t\t\t(13, 'aw', 'Aruba', 10),\n\t\t\t(14, 'au', 'Australia', 11),\n\t\t\t(15, 'at', 'Austria', 2),\n\t\t\t(16, 'az', 'Azerbaijan', 12),\n\t\t\t(17, 'bs', 'Bahamas', 13),\n\t\t\t(18, 'bh', 'Bahrain', 14),\n\t\t\t(19, 'bd', 'Bangladesh', 15),\n\t\t\t(20, 'bb', 'Barbados', 16),\n\t\t\t(21, 'by', 'Belarus', 17),\n\t\t\t(22, 'be', 'Belgium', 2),\n\t\t\t(23, 'bz', 'Belize', 18),\n\t\t\t(24, 'bj', 'Benin', 19),\n\t\t\t(25, 'bm', 'Bermuda', 20),\n\t\t\t(26, 'bt', 'Bhutan', 62),\n\t\t\t(27, 'bo', 'Bolivia', NULL),\n\t\t\t(28, 'ba', 'Bosnia And Herzegovina', 21),\n\t\t\t(29, 'bw', 'Botswana', 22),\n\t\t\t(30, 'bv', 'Bouvet Island', 23),\n\t\t\t(31, 'br', 'Brazil', 24),\n\t\t\t(32, 'io', 'British Indian Ocean Territory', 5),\n\t\t\t(33, 'bn', 'Brunei Darussalam', 25),\n\t\t\t(34, 'bg', 'Bulgaria', 26),\n\t\t\t(35, 'bf', 'Burkina Faso', 19),\n\t\t\t(36, 'bi', 'Burundi', 27),\n\t\t\t(37, 'kh', 'Cambodia', 28),\n\t\t\t(38, 'cm', 'Cameroon', 29),\n\t\t\t(39, 'ca', 'Canada', 30),\n\t\t\t(40, 'cv', 'Cape Verde', 31),\n\t\t\t(41, 'ky', 'Cayman Islands', 32),\n\t\t\t(42, 'cf', 'Central African Republic', 29),\n\t\t\t(43, 'td', 'Chad', 29),\n\t\t\t(44, 'cl', 'Chile', 159),\n\t\t\t(45, 'cn', 'China', 33),\n\t\t\t(46, 'cx', 'Christmas Island', 11),\n\t\t\t(47, 'cc', 'Cocos Islands', 11),\n\t\t\t(48, 'co', 'Colombia', 156),\n\t\t\t(49, 'km', 'Comoros', 34),\n\t\t\t(50, 'cg', 'Congo', 29),\n\t\t\t(51, 'cd', 'Congo Republic', 35),\n\t\t\t(52, 'ck', 'Cook Islands', 36),\n\t\t\t(53, 'cr', 'Costa Rica', 37),\n\t\t\t(54, 'ci', 'Cote Divoire', 19),\n\t\t\t(55, 'hr', 'Croatia', 38),\n\t\t\t(56, 'cu', 'Cuba', 157),\n\t\t\t(57, 'cy', 'Cyprus', 2),\n\t\t\t(58, 'cz', 'Czech Republic', 39),\n\t\t\t(59, 'dk', 'Denmark', 40),\n\t\t\t(60, 'dj', 'Djibouti', 41),\n\t\t\t(61, 'dm', 'Dominica', 7),\n\t\t\t(62, 'do', 'Dominican Republic', 42),\n\t\t\t(63, 'ec', 'Ecuador', 5),\n\t\t\t(64, 'eg', 'Egypt', 43),\n\t\t\t(65, 'sv', 'El Salvador', 158),\n\t\t\t(66, 'gq', 'Equatorial Guinea', 29),\n\t\t\t(67, 'er', 'Eritrea', 44),\n\t\t\t(68, 'ee', 'Estonia', 45),\n\t\t\t(69, 'et', 'Ethiopia', 46),\n\t\t\t(70, 'fk', 'Falkland Islands (Malvinas)', 47),\n\t\t\t(71, 'fo', 'Faroe Islands', 40),\n\t\t\t(72, 'fj', 'Fiji', 48),\n\t\t\t(73, 'fi', 'Finland', 2),\n\t\t\t(74, 'fr', 'France', 2),\n\t\t\t(75, 'gf', 'French Guiana', 2),\n\t\t\t(76, 'pf', 'French Polynesia', 49),\n\t\t\t(77, 'tf', 'French Southern Territories', 2),\n\t\t\t(78, 'ga', 'Gabon', 29),\n\t\t\t(79, 'gm', 'Gambia', 50),\n\t\t\t(80, 'ge', 'Georgia', 51),\n\t\t\t(81, 'de', 'Germany', 2),\n\t\t\t(82, 'gh', 'Ghana', 52),\n\t\t\t(83, 'gi', 'Gibraltar', 53),\n\t\t\t(84, 'gr', 'Greece', 2),\n\t\t\t(85, 'gl', 'Greenland', 40),\n\t\t\t(86, 'gd', 'Grenada', 7),\n\t\t\t(87, 'gp', 'Guadeloupe', 2),\n\t\t\t(88, 'gu', 'Guam', 5),\n\t\t\t(89, 'gt', 'Guatemala', 54),\n\t\t\t(90, 'gg', 'Guernsey', 55),\n\t\t\t(91, 'gn', 'Guinea', 56),\n\t\t\t(92, 'gw', 'Guinea-bissau', 19),\n\t\t\t(93, 'gy', 'Guyana', 57),\n\t\t\t(94, 'ht', 'Haiti', 160),\n\t\t\t(95, 'hm', 'Heard Island And Mcdonald Islands', 11),\n\t\t\t(96, 'va', 'Holy See (vatican City State)', 2),\n\t\t\t(97, 'hn', 'Honduras', 58),\n\t\t\t(98, 'hk', 'Hong Kong', 59),\n\t\t\t(99, 'hu', 'Hungary', 60),\n\t\t\t(100, 'is', 'Iceland', 61),\n\t\t\t(101, 'in', 'India', 62),\n\t\t\t(102, 'id', 'Indonesia', 63),\n\t\t\t(103, 'ir', 'Iran', 64),\n\t\t\t(104, 'iq', 'Iraq', 65),\n\t\t\t(105, 'ie', 'Ireland', 2),\n\t\t\t(106, 'im', 'Isle Of Man', NULL),\n\t\t\t(107, 'il', 'Israel', 66),\n\t\t\t(108, 'it', 'Italy', 2),\n\t\t\t(109, 'jm', 'Jamaica', 67),\n\t\t\t(110, 'jp', 'Japan', 68),\n\t\t\t(111, 'je', 'Jersey', 55),\n\t\t\t(112, 'jo', 'Jordan', 69),\n\t\t\t(113, 'kz', 'Kazakhstan', 70),\n\t\t\t(114, 'ke', 'Kenya', 71),\n\t\t\t(115, 'ki', 'Kiribati', 11),\n\t\t\t(116, 'kp', 'Korea', 72),\n\t\t\t(117, 'kr', 'Korea', 73),\n\t\t\t(118, 'kw', 'Kuwait', 74),\n\t\t\t(119, 'kg', 'Kyrgyzstan', 75),\n\t\t\t(120, 'la', 'Lao', 76),\n\t\t\t(121, 'lv', 'Latvia', 77),\n\t\t\t(122, 'lb', 'Lebanon', 78),\n\t\t\t(123, 'ls', 'Lesotho', 121),\n\t\t\t(124, 'lr', 'Liberia', 79),\n\t\t\t(125, 'ly', 'Libyan Arab Jamahiriya', 80),\n\t\t\t(126, 'li', 'Liechtenstein', 81),\n\t\t\t(127, 'lt', 'Lithuania', 82),\n\t\t\t(128, 'lu', 'Luxembourg', 2),\n\t\t\t(129, 'mo', 'Macao', 83),\n\t\t\t(130, 'mk', 'Macedonia', 84),\n\t\t\t(131, 'mg', 'Madagascar', 85),\n\t\t\t(132, 'mw', 'Malawi', 86),\n\t\t\t(133, 'my', 'Malaysia', 87),\n\t\t\t(134, 'mv', 'Maldives', 88),\n\t\t\t(135, 'ml', 'Mali', 19),\n\t\t\t(136, 'mt', 'Malta', 2),\n\t\t\t(137, 'mh', 'Marshall Islands', 5),\n\t\t\t(138, 'mq', 'Martinique', 2),\n\t\t\t(139, 'mr', 'Mauritania', 89),\n\t\t\t(140, 'mu', 'Mauritius', 90),\n\t\t\t(141, 'yt', 'Mayotte', 2),\n\t\t\t(142, 'mx', 'Mexico', 161),\n\t\t\t(143, 'fm', 'Micronesia', 2),\n\t\t\t(144, 'md', 'Moldova', 91),\n\t\t\t(145, 'mc', 'Monaco', 2),\n\t\t\t(146, 'mn', 'Mongolia', 92),\n\t\t\t(147, 'me', 'Montenegro', 2),\n\t\t\t(148, 'ms', 'Montserrat', 7),\n\t\t\t(149, 'ma', 'Morocco', 93),\n\t\t\t(150, 'mz', 'Mozambique', 94),\n\t\t\t(151, 'mm', 'Myanmar', 95),\n\t\t\t(152, 'na', 'Namibia', 121),\n\t\t\t(153, 'nr', 'Nauru', 11),\n\t\t\t(154, 'np', 'Nepal', 96),\n\t\t\t(155, 'nl', 'Netherlands', 2),\n\t\t\t(156, 'an', 'Netherlands Antilles', 97),\n\t\t\t(157, 'nc', 'New Caledonia', 49),\n\t\t\t(158, 'nz', 'New Zealand', 36),\n\t\t\t(159, 'ni', 'Nicaragua', 98),\n\t\t\t(160, 'ne', 'Niger', 19),\n\t\t\t(161, 'ng', 'Nigeria', 99),\n\t\t\t(162, 'nu', 'Niue', 36),\n\t\t\t(163, 'nf', 'Norfolk Island', 11),\n\t\t\t(164, 'mp', 'Northern Mariana Islands', 5),\n\t\t\t(165, 'no', 'Norway', 23),\n\t\t\t(166, 'om', 'Oman', 100),\n\t\t\t(167, 'pk', 'Pakistan', 101),\n\t\t\t(168, 'pw', 'Palau', 5),\n\t\t\t(169, 'ps', 'Palestinian Territory', NULL),\n\t\t\t(170, 'pa', 'Panama', 162),\n\t\t\t(171, 'pg', 'Papua New Guinea', 102),\n\t\t\t(172, 'py', 'Paraguay', 103),\n\t\t\t(173, 'pe', 'Peru', 104),\n\t\t\t(174, 'ph', 'Philippines', 105),\n\t\t\t(175, 'pn', 'Pitcairn', 36),\n\t\t\t(176, 'pl', 'Poland', 106),\n\t\t\t(177, 'pt', 'Portugal', 2),\n\t\t\t(178, 'pr', 'Puerto Rico', 5),\n\t\t\t(179, 'qa', 'Qatar', 107),\n\t\t\t(180, 're', 'Reunion', 2),\n\t\t\t(181, 'ro', 'Romania', 108),\n\t\t\t(182, 'ru', 'Russian Federation', 109),\n\t\t\t(183, 'rw', 'Rwanda', 110),\n\t\t\t(184, 'bl', 'Saint Barthelemy', 2),\n\t\t\t(185, 'sh', 'Saint Helena', 111),\n\t\t\t(186, 'kn', 'Saint Kitts And Nevis', 7),\n\t\t\t(187, 'lc', 'Saint Lucia', 7),\n\t\t\t(188, 'mf', 'Saint Martin', 2),\n\t\t\t(189, 'pm', 'Saint Pierre And Miquelon', 2),\n\t\t\t(190, 'vc', 'Saint Vincent And The Grenadines', 7),\n\t\t\t(191, 'ws', 'Samoa', 112),\n\t\t\t(192, 'sm', 'San Marino', 2),\n\t\t\t(193, 'st', 'Sao Tome And Principe', 113),\n\t\t\t(194, 'sa', 'Saudi Arabia', 114),\n\t\t\t(195, 'sn', 'Senegal', 19),\n\t\t\t(196, 'rs', 'Serbia', 115),\n\t\t\t(197, 'sc', 'Seychelles', 116),\n\t\t\t(198, 'sl', 'Sierra Leone', 117),\n\t\t\t(199, 'sg', 'Singapore', 118),\n\t\t\t(200, 'sk', 'Slovakia', 2),\n\t\t\t(201, 'si', 'Slovenia', 2),\n\t\t\t(202, 'sb', 'Solomon Islands', 119),\n\t\t\t(203, 'so', 'Somalia', 120),\n\t\t\t(204, 'za', 'South Africa', 121),\n\t\t\t(205, 'gs', 'South Georgia', NULL),\n\t\t\t(206, 'es', 'Spain', 2),\n\t\t\t(207, 'lk', 'Sri Lanka', 122),\n\t\t\t(208, 'sd', 'Sudan', 123),\n\t\t\t(209, 'sr', 'Suriname', 124),\n\t\t\t(210, 'sj', 'Svalbard And Jan Mayen', 23),\n\t\t\t(211, 'sz', 'Swaziland', 125),\n\t\t\t(212, 'se', 'Sweden', 126),\n\t\t\t(213, 'ch', 'Switzerland', 81),\n\t\t\t(214, 'sy', 'Syrian Arab Republic', 127),\n\t\t\t(215, 'tw', 'Taiwan, Province Of China', 128),\n\t\t\t(216, 'tj', 'Tajikistan', 129),\n\t\t\t(217, 'tz', 'Tanzania', 130),\n\t\t\t(218, 'th', 'Thailand', 131),\n\t\t\t(219, 'tl', 'Timor-leste', 5),\n\t\t\t(220, 'tg', 'Togo', 19),\n\t\t\t(221, 'tk', 'Tokelau', 36),\n\t\t\t(222, 'to', 'Tonga', 132),\n\t\t\t(223, 'tt', 'Trinidad And Tobago', 133),\n\t\t\t(224, 'tn', 'Tunisia', 134),\n\t\t\t(225, 'tr', 'Turkey', 135),\n\t\t\t(226, 'tm', 'Turkmenistan', 136),\n\t\t\t(227, 'tc', 'Turks And Caicos Islands', 5),\n\t\t\t(228, 'tv', 'Tuvalu', 11),\n\t\t\t(229, 'ug', 'Uganda', 137),\n\t\t\t(230, 'ua', 'Ukraine', 138),\n\t\t\t(231, 'ae', 'United Arab Emirates', 139),\n\t\t\t(232, 'gb', 'United Kingdom', 55),\n\t\t\t(233, 'us', 'United States', 5),\n\t\t\t(234, 'um', 'United States Minor Outlying Islands', 5),\n\t\t\t(235, 'uy', 'Uruguay', 163),\n\t\t\t(236, 'uz', 'Uzbekistan', 140),\n\t\t\t(237, 'vu', 'Vanuatu', 141),\n\t\t\t(239, 've', 'Venezuela', 142),\n\t\t\t(240, 'vn', 'Viet Nam', 143),\n\t\t\t(241, 'vg', 'Virgin Islands, British', 5),\n\t\t\t(242, 'vi', 'Virgin Islands, U.s.', 5),\n\t\t\t(243, 'wf', 'Wallis And Futuna', 49),\n\t\t\t(244, 'eh', 'Western Sahara', 93),\n\t\t\t(245, 'ye', 'Yemen', 144),\n\t\t\t(246, 'zm', 'Zambia', 145),\n\t\t\t(247, 'zw', 'Zimbabwe', 146),\n\t\t\t(248, 'ct', 'Catalonia', 2)\" );\n\n\tif( $set_preferred_country && !empty( $current_locale ) )\n\t{\t// Set default preferred country from current locale\n\t\t$result = array();\n\t\tpreg_match('#.*?-(.*)#', strtolower($current_locale),$result);\n\n\t\t$DB->query( \"UPDATE $table_name\n\t\t\tSET ctry_preferred = 1, ctry_status = 'trusted'\n\t\t\tWHERE ctry_code = '\".$DB->escape($result[1]).\"'\" );\n\t}\n\ttask_end();\n}\n\n/**\n * Create default regions\n *\n */\nfunction create_default_regions()\n{\n\tglobal $DB, $current_charset;\n\n\ttask_begin( 'Creating default regions... ' );\n\t$DB->query( convert_charset(\"\n\t\tINSERT INTO T_regional__region ( rgn_ID, rgn_ctry_ID, rgn_code, rgn_name )\n\t\tVALUES\".\n\t\t\t/* United States */\"\n\t\t\t(1, 233, 'AL', 'Alabama'),\n\t\t\t(2, 233, 'AK', 'Alaska'),\n\t\t\t(3, 233, 'AZ', 'Arizona'),\n\t\t\t(4, 233, 'AR', 'Arkansas'),\n\t\t\t(5, 233, 'CA', 'California'),\n\t\t\t(6, 233, 'CO', 'Colorado'),\n\t\t\t(7, 233, 'CT', 'Connecticut'),\n\t\t\t(8, 233, 'DE', 'Delaware'),\n\t\t\t(9, 233, 'FL', 'Florida'),\n\t\t\t(10, 233, 'GA', 'Georgia'),\n\t\t\t(11, 233, 'HI', 'Hawaii'),\n\t\t\t(12, 233, 'ID', 'Idaho'),\n\t\t\t(13, 233, 'IL', 'Illinois'),\n\t\t\t(14, 233, 'IN', 'Indiana'),\n\t\t\t(15, 233, 'IA', 'Iowa'),\n\t\t\t(16, 233, 'KS', 'Kansas'),\n\t\t\t(17, 233, 'KY', 'Kentucky'),\n\t\t\t(18, 233, 'LA', 'Louisiana'),\n\t\t\t(19, 233, 'ME', 'Maine'),\n\t\t\t(20, 233, 'MD', 'Maryland'),\n\t\t\t(21, 233, 'MA', 'Massachusetts'),\n\t\t\t(22, 233, 'MI', 'Michigan'),\n\t\t\t(23, 233, 'MN', 'Minnesota'),\n\t\t\t(24, 233, 'MS', 'Mississippi'),\n\t\t\t(25, 233, 'MO', 'Missouri'),\n\t\t\t(26, 233, 'MT', 'Montana'),\n\t\t\t(27, 233, 'NE', 'Nebraska'),\n\t\t\t(28, 233, 'NV', 'Nevada'),\n\t\t\t(29, 233, 'NH', 'New Hampshire'),\n\t\t\t(30, 233, 'NJ', 'New Jersey'),\n\t\t\t(31, 233, 'NM', 'New Mexico'),\n\t\t\t(32, 233, 'NY', 'New York'),\n\t\t\t(33, 233, 'NC', 'North Carolina'),\n\t\t\t(34, 233, 'ND', 'North Dakota'),\n\t\t\t(35, 233, 'OH', 'Ohio'),\n\t\t\t(36, 233, 'OK', 'Oklahoma'),\n\t\t\t(37, 233, 'OR', 'Oregon'),\n\t\t\t(38, 233, 'PA', 'Pennsylvania'),\n\t\t\t(39, 233, 'RI', 'Rhode Island'),\n\t\t\t(40, 233, 'SC', 'South Carolina'),\n\t\t\t(41, 233, 'SD', 'South Dakota'),\n\t\t\t(42, 233, 'TN', 'Tennessee'),\n\t\t\t(43, 233, 'TX', 'Texas'),\n\t\t\t(44, 233, 'UT', 'Utah'),\n\t\t\t(45, 233, 'VT', 'Vermont'),\n\t\t\t(46, 233, 'VA', 'Virginia'),\n\t\t\t(47, 233, 'WA', 'Washington'),\n\t\t\t(48, 233, 'WV', 'West Virginia'),\n\t\t\t(49, 233, 'WI', 'Wisconsin'),\n\t\t\t(50, 233, 'WY', 'Wyoming'),\".\n\t\t\t/* France */\"\n\t\t\t(51, 74, '42', 'Alsace'),\n\t\t\t(52, 74, '72', 'Aquitaine'),\n\t\t\t(53, 74, '83', 'Auvergne'),\n\t\t\t(54, 74, '26', 'Bourgogne'),\n\t\t\t(55, 74, '53', 'Bretagne'),\n\t\t\t(56, 74, '24', 'Centre'),\n\t\t\t(57, 74, '21', 'Champagne-Ardenne'),\n\t\t\t(58, 74, '94', 'Corse'),\n\t\t\t(59, 74, '43', 'Franche-Comt\\xE9'),\n\t\t\t(60, 74, '11', '\\xCEle-de-France'),\n\t\t\t(61, 74, '91', 'Languedoc-Roussillon'),\n\t\t\t(62, 74, '74', 'Limousin'),\n\t\t\t(63, 74, '41', 'Lorraine'),\n\t\t\t(64, 74, '73', 'Midi-Pyr\\xE9n\\xE9es'),\n\t\t\t(65, 74, '31', 'Nord-Pas-de-Calais'),\n\t\t\t(66, 74, '25', 'Basse-Normandie'),\n\t\t\t(67, 74, '23', 'Haute-Normandie'),\n\t\t\t(68, 74, '52', 'Pays de la Loire'),\n\t\t\t(69, 74, '22', 'Picardie'),\n\t\t\t(70, 74, '54', 'Poitou-Charentes'),\n\t\t\t(71, 74, '93', 'Provence-Alpes-C\\xF4te d\\'Azur'),\n\t\t\t(72, 74, '82', 'Rh\\xF4ne-Alpes'),\n\t\t\t(73, 74, '01', 'Guadeloupe'),\n\t\t\t(74, 74, '02', 'Martinique'),\n\t\t\t(75, 74, '03', 'Guyane'),\n\t\t\t(76, 74, '04', 'La R\\xE9union'),\n\t\t\t(77, 74, '05', 'Mayotte'),\n\t\t\t(78, 74, '09', 'Outre-Mer'),\n\t\t\t(79, 74, '99', 'Monaco')\", $current_charset, 'iso-8859-1' ) );\n\n\ttask_end();\n}\n\n/**\n * Create default sub-regions\n *\n */\nfunction create_default_subregions()\n{\n\tglobal $DB, $current_charset;\n\n\ttask_begin( 'Creating default sub-regions... ' );\n\t$DB->query( convert_charset(\"\n\t\tINSERT INTO T_regional__subregion ( subrg_ID, subrg_rgn_ID, subrg_code, subrg_name )\n\t\tVALUES\".\n\t\t\t/* France */\"\n\t\t\t(1, 72, '01', 'Ain'),\n\t\t\t(2, 69, '02', 'Aisne'),\n\t\t\t(3, 53, '03', 'Allier'),\n\t\t\t(4, 71, '04', 'Alpes-de-Haute-Provence'),\n\t\t\t(5, 71, '05', 'Hautes-Alpes'),\n\t\t\t(6, 71, '06', 'Alpes-Maritimes'),\n\t\t\t(7, 72, '07', 'Ard\\xE8che'),\n\t\t\t(8, 57, '08', 'Ardennes'),\n\t\t\t(9, 64, '09', 'Ari\\xE8ge'),\n\t\t\t(10, 57, '10', 'Aube'),\n\t\t\t(11, 61, '11', 'Aude'),\n\t\t\t(12, 64, '12', 'Aveyron'),\n\t\t\t(13, 71, '13', 'Bouches-du-Rh\\xF4ne'),\n\t\t\t(14, 66, '14', 'Calvados'),\n\t\t\t(15, 53, '15', 'Cantal'),\n\t\t\t(16, 70, '16', 'Charente'),\n\t\t\t(17, 70, '17', 'Charente-Maritime'),\n\t\t\t(18, 56, '18', 'Cher'),\n\t\t\t(19, 62, '19', 'Corr\\xE8ze'),\n\t\t\t(20, 58, '2A', 'Corse-du-Sud'),\n\t\t\t(21, 58, '2B', 'Haute-Corse'),\n\t\t\t(22, 54, '21', 'C\\xF4te-d\\'Or'),\n\t\t\t(23, 55, '22', 'C\\xF4tes-d\\'Armor'),\n\t\t\t(24, 62, '23', 'Creuse'),\n\t\t\t(25, 52, '24', 'Dordogne'),\n\t\t\t(26, 59, '25', 'Doubs'),\n\t\t\t(27, 72, '26', 'Dr\\xF4me'),\n\t\t\t(28, 67, '27', 'Eure'),\n\t\t\t(29, 56, '28', 'Eure-et-Loir'),\n\t\t\t(30, 55, '29', 'Finist\\xE8re'),\n\t\t\t(31, 61, '30', 'Gard'),\n\t\t\t(32, 64, '31', 'Haute-Garonne'),\n\t\t\t(33, 64, '32', 'Gers'),\n\t\t\t(34, 52, '33', 'Gironde'),\n\t\t\t(35, 61, '34', 'H\\xE9rault'),\n\t\t\t(36, 55, '35', 'Ille-et-Vilaine'),\n\t\t\t(37, 56, '36', 'Indre'),\n\t\t\t(38, 56, '37', 'Indre-et-Loire'),\n\t\t\t(39, 72, '38', 'Is\\xE8re'),\n\t\t\t(40, 59, '39', 'Jura'),\n\t\t\t(41, 52, '40', 'Landes'),\n\t\t\t(42, 56, '41', 'Loir-et-Cher'),\n\t\t\t(43, 72, '42', 'Loire'),\n\t\t\t(44, 53, '43', 'Haute-Loire'),\n\t\t\t(45, 68, '44', 'Loire-Atlantique'),\n\t\t\t(46, 56, '45', 'Loiret'),\n\t\t\t(47, 64, '46', 'Lot'),\n\t\t\t(48, 52, '47', 'Lot-et-Garonne'),\n\t\t\t(49, 61, '48', 'Loz\\xE8re'),\n\t\t\t(50, 68, '49', 'Maine-et-Loire'),\n\t\t\t(51, 66, '50', 'Manche'),\n\t\t\t(52, 57, '51', 'Marne'),\n\t\t\t(53, 57, '52', 'Haute-Marne'),\n\t\t\t(54, 68, '53', 'Mayenne'),\n\t\t\t(55, 63, '54', 'Meurthe-et-Moselle'),\n\t\t\t(56, 63, '55', 'Meuse'),\n\t\t\t(57, 55, '56', 'Morbihan'),\n\t\t\t(58, 63, '57', 'Moselle'),\n\t\t\t(59, 54, '58', 'Ni\\xE8vre'),\n\t\t\t(60, 65, '59', 'Nord'),\n\t\t\t(61, 69, '60', 'Oise'),\n\t\t\t(62, 66, '61', 'Orne'),\n\t\t\t(63, 65, '62', 'Pas-de-Calais'),\n\t\t\t(64, 53, '63', 'Puy-de-D\\xF4me'),\n\t\t\t(65, 52, '64', 'Pyr\\xE9n\\xE9es-Atlantiques'),\n\t\t\t(66, 64, '65', 'Hautes-Pyr\\xE9n\\xE9es'),\n\t\t\t(67, 61, '66', 'Pyr\\xE9n\\xE9es-Orientales'),\n\t\t\t(68, 51, '67', 'Bas-Rhin'),\n\t\t\t(69, 51, '68', 'Haut-Rhin'),\n\t\t\t(70, 72, '69', 'Rh\\xF4ne'),\n\t\t\t(71, 59, '70', 'Haute-Sa\\xF4ne'),\n\t\t\t(72, 54, '71', 'Sa\\xF4ne-et-Loire'),\n\t\t\t(73, 68, '72', 'Sarthe'),\n\t\t\t(74, 72, '73', 'Savoie'),\n\t\t\t(75, 72, '74', 'Haute-Savoie'),\n\t\t\t(76, 60, '75', 'Paris'),\n\t\t\t(77, 67, '76', 'Seine-Maritime'),\n\t\t\t(78, 60, '77', 'Seine-et-Marne'),\n\t\t\t(79, 60, '78', 'Yvelines'),\n\t\t\t(80, 70, '79', 'Deux-S\\xE8vres'),\n\t\t\t(81, 69, '80', 'Somme'),\n\t\t\t(82, 64, '81', 'Tarn'),\n\t\t\t(83, 64, '82', 'Tarn-et-Garonne'),\n\t\t\t(84, 71, '83', 'Var'),\n\t\t\t(85, 71, '84', 'Vaucluse'),\n\t\t\t(86, 68, '85', 'Vend\\xE9e'),\n\t\t\t(87, 70, '86', 'Vienne'),\n\t\t\t(88, 62, '87', 'Haute-Vienne'),\n\t\t\t(89, 63, '88', 'Vosges'),\n\t\t\t(90, 54, '89', 'Yonne'),\n\t\t\t(91, 59, '90', 'Territoire de Belfort'),\n\t\t\t(92, 60, '91', 'Essonne'),\n\t\t\t(93, 60, '92', 'Hauts-de-Seine'),\n\t\t\t(94, 60, '93', 'Seine-Saint-Denis'),\n\t\t\t(95, 60, '94', 'Val-de-Marne'),\n\t\t\t(96, 60, '95', 'Val-d\\'Oise'),\n\t\t\t(97, 73, '971', 'Guadeloupe'),\n\t\t\t(98, 74, '972', 'Martinique'),\n\t\t\t(99, 75, '973', 'Guyane'),\n\t\t\t(100, 76, '974', 'La R\\xE9union'),\n\t\t\t(101, 77, '976', 'Mayotte'),\n\t\t\t(102, 78, '975', 'Saint-Pierre-et-Miquelon'),\n\t\t\t(103, 78, '986', 'Wallis-et-Futuna'),\n\t\t\t(104, 78, '987', 'Polyn\\xE9sie fran\\xE7aise'),\n\t\t\t(105, 78, '988', 'Nouvelle-Cal\\xE9donie'),\n\t\t\t(106, 79, '99', 'Monaco')\", $current_charset, 'iso-8859-1') );\n\n\ttask_end();\n}\n\n/**\n * Create default scheduled jobs that don't exist yet:\n * - Prune page cache\n * - Prune hit log & session log from stats\n * - Poll antispam blacklist\n *\n * @param boolean true if it's called from the ugrade script, false if it's called from the install script\n */\nfunction create_default_jobs( $is_upgrade = false )\n{\n\tglobal $DB, $localtimenow;\n\n\t// get tomorrow date\n\t$date = date2mysql( $localtimenow + 86400 );\n\t$ctsk_params = $DB->quote( 'N;' );\n\t$next_sunday = date2mysql( strtotime( 'next Sunday',  $localtimenow + 86400 ) );\n\n\t$cleanup_jobs_key         = 'cleanup-scheduled-jobs';\n\t$heavy_db_maintenance_key = 'heavy-db-maintenance';\n\t$light_db_maintenance_key = 'light-db-maintenance';\n\t$poll_antispam_key        = 'poll-antispam-blacklist';\n\t$process_hitlog_key       = 'process-hit-log';\n\t$prune_pagecache_key      = 'prune-old-files-from-page-cache';\n\t$prune_sessions_key       = 'prune-old-hits-and-sessions';\n\t$prune_comments_key       = 'prune-recycled-comments';\n\t$activate_reminder_key    = 'send-non-activated-account-reminders';\n\t$comment_reminder_key     = 'send-unmoderated-comments-reminders';\n\t$messages_reminder_key    = 'send-unread-messages-reminders';\n\t$post_reminder_key        = 'send-unmoderated-posts-reminders';\n\n\t// init insert values\n\t$insert_values = array(\n\t\t\t// run unread messages reminder in every 29 minutes\n\t\t\t$messages_reminder_key    => \"( \".$DB->quote( form_date( $date, '01:00:00' ) ).\", 1740,  \".$DB->quote( $messages_reminder_key ).\", \".$ctsk_params.\" )\",\n\t\t\t// run activate account reminder in every 31 minutes\n\t\t\t$activate_reminder_key    => \"( \".$DB->quote( form_date( $date, '01:30:00' ) ).\", 1860,  \".$DB->quote( $activate_reminder_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$prune_pagecache_key      => \"( \".$DB->quote( form_date( $date, '02:00:00' ) ).\", 86400, \".$DB->quote( $prune_pagecache_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$process_hitlog_key       => \"( \".$DB->quote( form_date( $date, '02:30:00' ) ).\", 86400, \".$DB->quote( $process_hitlog_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$prune_sessions_key       => \"( \".$DB->quote( form_date( $date, '03:00:00' ) ).\", 86400, \".$DB->quote( $prune_sessions_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$poll_antispam_key        => \"( \".$DB->quote( form_date( $date, '04:00:00' ) ).\", 86400, \".$DB->quote( $poll_antispam_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$comment_reminder_key     => \"( \".$DB->quote( form_date( $date, '04:30:00' ) ).\", 86400, \".$DB->quote( $comment_reminder_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$cleanup_jobs_key         => \"( \".$DB->quote( form_date( $date, '05:00:00' ) ).\", 86400, \".$DB->quote( $cleanup_jobs_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$prune_comments_key       => \"( \".$DB->quote( form_date( $date, '05:30:00' ) ).\", 86400, \".$DB->quote( $prune_comments_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$light_db_maintenance_key => \"( \".$DB->quote( form_date( $date, '06:00:00' ) ).\", 86400, \".$DB->quote( $light_db_maintenance_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$heavy_db_maintenance_key => \"( \".$DB->quote( form_date( $next_sunday, '06:30:00' ) ).\", 604800, \".$DB->quote( $heavy_db_maintenance_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$post_reminder_key        => \"( \".$DB->quote( form_date( $date, '07:00:00' ) ).\", 86400, \".$DB->quote( $post_reminder_key ).\", \".$ctsk_params.\" )\",\n\t\t);\n\tif( $is_upgrade )\n\t{ // Check if these jobs already exist, and don't create another\n\t\t$SQL = new SQL();\n\t\t$SQL->SELECT( 'COUNT( ctsk_ID ) AS job_number, ctsk_key' );\n\t\t$SQL->FROM( 'T_cron__task' );\n\t\t$SQL->FROM_add( 'LEFT JOIN T_cron__log ON ctsk_ID = clog_ctsk_ID' );\n\t\t$SQL->WHERE( 'clog_status IS NULL' );\n\t\t$SQL->WHERE_and( 'ctsk_key IN ( '.$DB->quote( array_keys( $insert_values ) ).' )' );\n\t\t$SQL->GROUP_BY( 'ctsk_key' );\n\t\t$result = $DB->get_results( $SQL->get() );\n\t\tforeach( $result as $row )\n\t\t{ // clear existing jobs insert values\n\t\t\tunset( $insert_values[ $row->ctsk_key ] );\n\t\t}\n\t}\n\n\t$values = implode( ', ', $insert_values );\n\tif( empty( $values ) )\n\t{ // nothing to create\n\t\treturn;\n\t}\n\n\ttask_begin( T_( 'Creating default scheduled jobs... ' ) );\n\t$DB->query( '\n\t\tINSERT INTO T_cron__task ( ctsk_start_datetime, ctsk_repeat_after, ctsk_key, ctsk_params )\n\t\tVALUES '.$values, T_( 'Create default scheduled jobs' ) );\n\ttask_end();\n}\n\n/**\n * Create a new blog\n * This funtion has to handle all needed DB dependencies!\n *\n * @todo move this to Blog object (only half done here)\n */\nfunction create_blog(\n\t$blog_name,\n\t$blog_shortname,\n\t$blog_urlname,\n\t$blog_tagline = '',\n\t$blog_longdesc = '',\n\t$blog_skin_ID = 1,\n\t$kind = 'std', // standard blog; notorious variations: \"photo\", \"group\", \"forum\"\n\t$allow_rating_items = '',\n\t$use_inskin_login = 0,\n\t$blog_access_type = 'relative', // Deprecated param for this func, because it is defined in $Blog->dbinsert()\n\t$allow_html = true,\n\t$in_bloglist = 'public',\n\t$owner_user_ID = 1 )\n{\n\tglobal $default_locale, $install_test_features, $local_installation, $Plugins;\n\n\t$Blog = new Blog( NULL );\n\n\t$Blog->init_by_kind( $kind, $blog_name, $blog_shortname, $blog_urlname );\n\n\tif( ( $kind == 'forum' || $kind == 'manual' ) && ( $Plugin = & $Plugins->get_by_code( 'b2evMark' ) ) !== false )\n\t{ // Initialize special Markdown plugin settings for Forums and Manual blogs\n\t\t$Blog->set_setting( 'plugin'.$Plugin->ID.'_coll_apply_comment_rendering', 'opt-out' );\n\t\t$Blog->set_setting( 'plugin'.$Plugin->ID.'_links', '1' );\n\t\t$Blog->set_setting( 'plugin'.$Plugin->ID.'_images', '1' );\n\t}\n\tif( $kind == 'photo' )\n\t{ // Display category directory on front page for photo blogs\n\t\t$Blog->set_setting( 'front_disp', 'catdir' );\n\t}\n\n\t$Blog->set( 'tagline', $blog_tagline );\n\t$Blog->set( 'longdesc', $blog_longdesc );\n\t$Blog->set( 'locale', $default_locale );\n\t$Blog->set( 'in_bloglist', $in_bloglist );\n\t$Blog->set( 'owner_user_ID', $owner_user_ID );\n\t$Blog->set_setting( 'normal_skin_ID', $blog_skin_ID );\n\tif( $local_installation )\n\t{ // Turn off all ping plugins if the installation is local/test/intranet\n\t\t$Blog->set_setting( 'ping_plugins', '' );\n\t}\n\n\t$Blog->dbinsert();\n\n\tif( $install_test_features )\n\t{\n\t\t$allow_rating_items = 'any';\n\t\t$Blog->set_setting( 'skin'.$blog_skin_ID.'_bubbletip', '1' );\n\t\techo_install_log( 'TEST FEATURE: Activating username bubble tips on skin of collection #'.$Blog->ID );\n\t\t$Blog->set_setting( 'skin'.$blog_skin_ID.'_gender_colored', '1' );\n\t\techo_install_log( 'TEST FEATURE: Activating gender colored usernames on skin of collection #'.$Blog->ID );\n\t\t$Blog->set_setting( 'in_skin_editing', '1' );\n\t\techo_install_log( 'TEST FEATURE: Activating in-skin editing on collection #'.$Blog->ID );\n\n\t\tif( $kind == 'manual' )\n\t\t{\t// Set a posts ordering by 'post_order ASC'\n\t\t\t$Blog->set_setting( 'orderby', 'order' );\n\t\t\t$Blog->set_setting( 'orderdir', 'ASC' );\n\t\t\techo_install_log( 'TEST FEATURE: Setting a posts ordering by asceding post order field on collection #'.$Blog->ID );\n\t\t}\n\n\t\t$Blog->set_setting( 'use_workflow', 1 );\n\t\techo_install_log( 'TEST FEATURE: Activating workflow on collection #'.$Blog->ID );\n\t}\n\tif( $allow_rating_items != '' )\n\t{\n\t\t$Blog->set_setting( 'allow_rating_items', $allow_rating_items );\n\t}\n\tif( $use_inskin_login || $install_test_features )\n\t{\n\t\t$Blog->set_setting( 'in_skin_login', 1 );\n\t}\n\n\tif( !$allow_html )\n\t{\n\t\t$Blog->set_setting( 'allow_html_comment', 0 );\n\t}\n\n\t$Blog->set( 'order', $Blog->ID );\n\n\t$Blog->dbupdate();\n\n\t// Insert default group permissions:\n\t$Blog->insert_default_group_permissions();\n\n\treturn $Blog->ID;\n}\n\n/**\n * Create a new User\n *\n * @param array Params\n * @return integer User ID\n */\nfunction create_user( $params = array() )\n{\n\tglobal $timestamp;\n\tglobal $random_password, $admin_email;\n\tglobal $default_locale, $default_country;\n\n\t$params = array_merge( array(\n\t\t\t'login'     => '',\n\t\t\t'firstname' => NULL,\n\t\t\t'lastname'  => NULL,\n\t\t\t'pass'    => $random_password, // random\n\t\t\t'email'   => $admin_email,\n\t\t\t'status'  => 'autoactivated', // assume it's active\n\t\t\t'level'   => 0,\n\t\t\t'locale'  => $default_locale,\n\t\t\t'ctry_ID' => $default_country,\n\t\t\t'gender'  => 'M',\n\t\t\t'Group'   => NULL,\n\t\t\t'org_IDs' => NULL, // array of organization IDs\n\t\t\t'fields'  => NULL, // array of additional user fields\n\t\t), $params );\n\n\t$User = new User();\n\t$User->set( 'login', $params['login'] );\n\t$User->set( 'firstname', $params['firstname'] );\n\t$User->set( 'lastname', $params['lastname'] );\n\t$User->set_password( $params['pass'] );\n\t$User->set_email( $params['email'] );\n\t$User->set( 'status', $params['status'] );\n\t$User->set( 'level', $params['level'] );\n\t$User->set( 'locale', $params['locale'] );\n\tif( !empty( $params['ctry_ID'] ) )\n\t{ // Set country\n\t\t$User->set( 'ctry_ID', $params['ctry_ID'] );\n\t}\n\t$User->set( 'gender', $params['gender'] );\n\t$User->set_datecreated( $timestamp++ );\n\t$User->set_Group( $params['Group'] );\n\tif( ! $User->dbinsert( false ) )\n\t{ // Don't continue if user creating has been failed\n\t\treturn false;\n\t}\n\n\tif( ! empty( $params['org_IDs'] ) )\n\t{ // Add user to organizations\n\t\t$User->update_organizations( $params['org_IDs'], array(), true );\n\t}\n\n\tif( ! empty( $params['fields'] ) )\n\t{ // Additional user fields\n\t\tglobal $DB;\n\t\t$fields_SQL = new SQL();\n\t\t$fields_SQL->SELECT( 'ufdf_ID, ufdf_name' );\n\t\t$fields_SQL->FROM( 'T_users__fielddefs' );\n\t\t$fields_SQL->WHERE( 'ufdf_name IN ( '.$DB->quote( array_keys( $params['fields'] ) ).' )' );\n\t\t$fields = $DB->get_assoc( $fields_SQL->get() );\n\t\t$user_field_records = array();\n\t\tforeach( $fields as $field_ID => $field_name )\n\t\t{\n\t\t\tif( ! isset( $params['fields'][ $field_name ] ) )\n\t\t\t{ // Skip wrong field\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( is_string( $params['fields'][ $field_name ] ) )\n\t\t\t{\n\t\t\t\t$params['fields'][ $field_name ] = array( $params['fields'][ $field_name ] );\n\t\t\t}\n\n\t\t\tforeach( $params['fields'][ $field_name ] as $field_value )\n\t\t\t{ // SQL record for each field value\n\t\t\t\t$user_field_records[] = '( '.$User->ID.', '.$field_ID.', '.$DB->quote( $field_value ).' )';\n\t\t\t}\n\t\t}\n\t\tif( count( $user_field_records ) )\n\t\t{ // Insert all user fields by single SQL query\n\t\t\t$DB->query( 'INSERT INTO T_users__fields ( uf_user_ID, uf_ufdf_ID, uf_varchar ) VALUES '\n\t\t\t\t.implode( ', ', $user_field_records ) );\n\t\t}\n\t}\n\n\treturn $User->ID;\n}\n\n\n/**\n * Associate a profile picture with a user.\n *\n * @param object User\n * @param string File name, NULL to use user login as file name\n */\nfunction assign_profile_picture( & $User, $login = NULL )\n{\n\t$File = new File( 'user', $User->ID, ( is_null( $login ) ? $User->login : $login ).'.jpg' );\n\n\t// Load meta data AND MAKE SURE IT IS CREATED IN DB:\n\t$File->load_meta( true );\n\t$User->set( 'avatar_file_ID', $File->ID );\n\t$User->dbupdate();\n\n\t// Set link between user and avatar file\n\t$LinkOwner = new LinkUser( $User );\n\t$File->link_to_Object( $LinkOwner );\n}\n\n\n/**\n * Assign secondary groups to user\n *\n * @param integer User ID\n * @param array IDs of groups\n */\nfunction assign_secondary_groups( $user_ID, $secondary_group_IDs )\n{\n\tif( empty( $secondary_group_IDs ) )\n\t{\t// Nothing to assign, Exit here:\n\t\treturn;\n\t}\n\n\tglobal $DB;\n\n\t$DB->query( 'INSERT INTO T_users__secondary_user_groups ( sug_user_ID, sug_grp_ID )\n\t\t\tVALUES ( '.$user_ID.', '.implode( ' ), ( '.$user_ID.', ', $secondary_group_IDs ).' )',\n\t\t'Assign secondary groups ('.implode( ', ', $secondary_group_IDs ).') to User #'.$user_ID );\n}\n\n\n/**\n * This is called only for fresh installs and fills the tables with\n * demo/tutorial things.\n */\nfunction create_demo_contents()\n{\n\tglobal $baseurl, $admin_url, $new_db_version;\n\tglobal $random_password, $query;\n\tglobal $timestamp, $admin_email;\n\tglobal $admins_Group, $moderators_Group, $editors_Group, $users_Group, $suspect_Group, $blogb_Group;\n\tglobal $blog_all_ID, $blog_home_ID, $blog_a_ID, $blog_b_ID;\n\tglobal $DB;\n\tglobal $default_locale, $default_country;\n\tglobal $Plugins, $Settings;\n\tglobal $install_test_features;\n\tglobal $user_org_IDs;\n\n\t/**\n\t * @var FileRootCache\n\t */\n\tglobal $FileRootCache;\n\n\t$lorem_1paragraph = \"\\n\\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\";\n\n\t$lorem_2more = \"\\n\\n<p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</p>\\n\\n\"\n\t\t.\"<p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.</p>\";\n\n\tload_class( 'collections/model/_blog.class.php', 'Blog' );\n\tload_class( 'files/model/_file.class.php', 'File' );\n\tload_class( 'files/model/_filetype.class.php', 'FileType' );\n\tload_class( 'links/model/_link.class.php', 'Link' );\n\n\n\ttask_begin('Assigning avatar to Admin... ');\n\t$UserCache = & get_UserCache();\n\t$User_Admin = & $UserCache->get_by_ID( 1 );\n\n\tglobal $media_path;\n\t$src_admin_dir = $media_path.'users/admin';\n\t$dest_admin_dir = $media_path.'users/'.$User_Admin->login;\n\tif( $User_Admin->login != 'admin' )\n\t{ // If admin login is not \"admin\" we should try to rename folder of the admin avatars\n\t\tif( ! file_exists( $src_admin_dir ) ||\n\t\t    ! is_dir( $src_admin_dir ) ||\n\t\t    ! @rename( $src_admin_dir, $dest_admin_dir ) )\n\t\t{ // Impossible to rename the admin folder to another name\n\n\t\t\t// Display the errors:\n\t\t\techo get_install_format_text( '<span class=\"text-danger\"><evo:error>'.sprintf( 'ERROR: Impossible to rename <code>%s</code> to <code>%s</code>.', $src_admin_dir, $dest_admin_dir ).'</evo:error></span> ' );\n\t\t\techo get_install_format_text( '<span class=\"text-danger\"><evo:error>'.sprintf( 'ERROR: Impossible to use \"%s\" for the admin account. Using \"admin\" instead.', $User_Admin->login ).'</evo:error></span> ' );\n\n\t\t\t// Change admin login to \"admin\":\n\t\t\t$User_Admin->set( 'login', 'admin' );\n\t\t\tif( $User_Admin->dbupdate() )\n\t\t\t{ // Change global var of admin login for report:\n\t\t\t\tglobal $install_login;\n\t\t\t\t$install_login = 'admin';\n\t\t\t}\n\t\t}\n\t}\n\n\tif( file_exists( $media_path.'users/'.$User_Admin->login ) )\n\t{ // Do assign avatars to admin only if it the admin folder exists on the disk\n\t\tassign_profile_picture( $User_Admin, 'admin' );\n\n\t\t// Associate secondary picture:\n\t\t$File = new File( 'user', $User_Admin->ID, 'faceyourmanga_admin_boy.png' );\n\t\t// Load meta data AND MAKE SURE IT IS CREATED IN DB:\n\t\t$File->load_meta( true );\n\t\t// Set link between user and avatar file\n\t\t$LinkOwner = new LinkUser( $User_Admin );\n\t\t$File->link_to_Object( $LinkOwner );\n\n\t\t// Associate secondary picture:\n\t\t$File = new File( 'user', $User_Admin->ID, 'faceyourmanga_admin_girl.png' );\n\t\t// Load meta data AND MAKE SURE IT IS CREATED IN DB:\n\t\t$File->load_meta( true );\n\t\t// Set link between user and avatar file\n\t\t$LinkOwner = new LinkUser( $User_Admin );\n\t\t$File->link_to_Object( $LinkOwner );\n\t}\n\n\ttask_end();\n\n\ttask_begin('Creating demo user mary... ');\n\t$mary_moderator_ID = create_user( array(\n\t\t\t'login'     => 'mary',\n\t\t\t'firstname' => 'Mary',\n\t\t\t'lastname'  => 'Wilson',\n\t\t\t'level'     => 4,\t\t// NOTE: these levels define the order of display in the Organization memebers widget\n\t\t\t'gender'    => 'F',\n\t\t\t'Group'     => $moderators_Group,\n\t\t\t'org_IDs'   => $user_org_IDs,\n\t\t\t'fields'    => array(\n\t\t\t\t\t'Micro bio'   => 'I am a demo moderator for this site.'.\"\\n\".'I love it when things are neat!',\n\t\t\t\t\t'Website'     => 'http://b2evolution.net/',\n\t\t\t\t\t'Twitter'     => 'https://twitter.com/b2evolution/',\n\t\t\t\t\t'Facebook'    => 'https://www.facebook.com/b2evolution',\n\t\t\t\t\t'Linkedin'    => 'https://www.linkedin.com/company/b2evolution-net',\n\t\t\t\t\t'GitHub'      => 'https://github.com/b2evolution/b2evolution',\n\t\t\t\t\t'Google Plus' => 'https://plus.google.com/+b2evolution/posts',\n\t\t\t\t)\n\t\t) );\n\tassign_profile_picture( $UserCache->get_by_ID( $mary_moderator_ID ) );\n\ttask_end();\n\n\ttask_begin('Creating demo user jay... ');\n\t$jay_moderator_ID = create_user( array(\n\t\t\t'login'     => 'jay',\n\t\t\t'firstname' => 'Jay',\n\t\t\t'lastname'  => 'Parker',\n\t\t\t'level'     => 3,\n\t\t\t'gender'    => 'M',\n\t\t\t'Group'     => $moderators_Group,\n\t\t\t'org_IDs'   => $user_org_IDs,\n\t\t\t'fields'    => array(\n\t\t\t\t\t'Micro bio'   => 'I am a demo moderator for this site.'.\"\\n\".'I like to keep things clean!',\n\t\t\t\t\t'Website'     => 'http://b2evolution.net/',\n\t\t\t\t\t'Twitter'     => 'https://twitter.com/b2evolution/',\n\t\t\t\t\t'Facebook'    => 'https://www.facebook.com/b2evolution',\n\t\t\t\t\t'Linkedin'    => 'https://www.linkedin.com/company/b2evolution-net',\n\t\t\t\t\t'GitHub'      => 'https://github.com/b2evolution/b2evolution',\n\t\t\t\t\t'Google Plus' => 'https://plus.google.com/+b2evolution/posts',\n\t\t\t\t)\n\t\t) );\n\tassign_profile_picture( $UserCache->get_by_ID( $jay_moderator_ID ) );\n\ttask_end();\n\n\ttask_begin('Creating demo user mark... ');\n\t$dave_blogger_ID = create_user( array(\n\t\t\t'login'     => 'dave',\n\t\t\t'firstname' => 'David',\n\t\t\t'lastname'  => 'Miller',\n\t\t\t'level'     => 2,\n\t\t\t'gender'    => 'M',\n\t\t\t'Group'     => $editors_Group,\n\t\t\t'org_IDs'   => $user_org_IDs,\n\t\t\t'fields'    => array(\n\t\t\t\t\t'Micro bio'   => 'I\\'m a demo author.'.\"\\n\".'I like to write!',\n\t\t\t\t\t'Website'     => 'http://b2evolution.net/',\n\t\t\t\t\t'Twitter'     => 'https://twitter.com/b2evolution/',\n\t\t\t\t\t'Facebook'    => 'https://www.facebook.com/b2evolution',\n\t\t\t\t\t'Linkedin'    => 'https://www.linkedin.com/company/b2evolution-net',\n\t\t\t\t\t'GitHub'      => 'https://github.com/b2evolution/b2evolution',\n\t\t\t\t\t'Google Plus' => 'https://plus.google.com/+b2evolution/posts',\n\t\t\t\t)\n\t\t) );\n\tassign_profile_picture( $UserCache->get_by_ID( $dave_blogger_ID ) );\n\ttask_end();\n\n\ttask_begin('Creating demo user paul... ');\n\t$paul_blogger_ID = create_user( array(\n\t\t\t'login'     => 'paul',\n\t\t\t'firstname' => 'Paul',\n\t\t\t'lastname'  => 'Jones',\n\t\t\t'level'     => 1,\n\t\t\t'gender'    => 'M',\n\t\t\t'Group'     => $editors_Group,\n\t\t\t'org_IDs'   => $user_org_IDs,\n\t\t\t'fields'    => array(\n\t\t\t\t\t'Micro bio'   => 'I\\'m a demo author.'.\"\\n\".'I like to think before I write ;)',\n\t\t\t\t\t'Website'     => 'http://b2evolution.net/',\n\t\t\t\t\t'Twitter'     => 'https://twitter.com/b2evolution/',\n\t\t\t\t\t'Facebook'    => 'https://www.facebook.com/b2evolution',\n\t\t\t\t\t'Linkedin'    => 'https://www.linkedin.com/company/b2evolution-net',\n\t\t\t\t\t'GitHub'      => 'https://github.com/b2evolution/b2evolution',\n\t\t\t\t\t'Google Plus' => 'https://plus.google.com/+b2evolution/posts',\n\t\t\t\t)\n\t\t) );\n\tassign_profile_picture( $UserCache->get_by_ID( $paul_blogger_ID ) );\n\ttask_end();\n\n\ttask_begin('Creating demo user larry... ');\n\t$larry_user_ID = create_user( array(\n\t\t\t'login'     => 'larry',\n\t\t\t'firstname' => 'Larry',\n\t\t\t'lastname'  => 'Smith',\n\t\t\t'level'     => 0,\n\t\t\t'gender'    => 'M',\n\t\t\t'Group'     => $users_Group,\n\t\t\t'fields'    => array(\n\t\t\t\t\t'Micro bio' => 'Hi there!',\n\t\t\t\t)\n\t\t) );\n\t$larry_User = & $UserCache->get_by_ID( $larry_user_ID );\n\tassign_profile_picture( $larry_User );\n\tassign_secondary_groups( $larry_User->ID, array( $blogb_Group->ID ) );\n\ttask_end();\n\n\ttask_begin('Creating demo user kate... ');\n\t$kate_user_ID = create_user( array(\n\t\t\t'login'     => 'kate',\n\t\t\t'firstname' => 'Kate',\n\t\t\t'lastname'  => 'Adams',\n\t\t\t'level'     => 0,\n\t\t\t'gender'    => 'F',\n\t\t\t'Group'     => $users_Group,\n\t\t\t'fields'    => array(\n\t\t\t\t\t'Micro bio' => 'Just me!',\n\t\t\t\t)\n\t\t) );\n\tassign_profile_picture( $UserCache->get_by_ID( $kate_user_ID ) );\n\ttask_end();\n\n\t// Use only these users to create the demo comments, @see create_demo_comment()\n\tglobal $b2evo_demo_comment_users;\n\t$b2evo_demo_comment_users = array( $larry_user_ID, $kate_user_ID, 0 );\n\n\ttask_begin( 'Set settings for demo users... ' );\n\t$DB->query( \"\n\t\tINSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\tVALUES ( 2, 'created_fromIPv4', '\".ip2int( '127.0.0.1' ).\"' ),\n\t\t\t\t( 2, 'user_domain', 'localhost' ),\n\t\t\t\t( 3, 'created_fromIPv4', '\".ip2int( '127.0.0.1' ).\"' ),\n\t\t\t\t( 3, 'user_domain', 'localhost' ),\n\t\t\t\t( 4, 'created_fromIPv4', '\".ip2int( '127.0.0.1' ).\"' ),\n\t\t\t\t( 4, 'user_domain', 'localhost' ),\n\t\t\t\t( 5, 'created_fromIPv4', '\".ip2int( '127.0.0.1' ).\"' ),\n\t\t\t\t( 5, 'user_domain', 'localhost' ),\n\t\t\t\t( 6, 'created_fromIPv4', '\".ip2int( '127.0.0.1' ).\"' ),\n\t\t\t\t( 6, 'user_domain', 'localhost' ),\n\t\t\t\t( 7, 'created_fromIPv4', '\".ip2int( '127.0.0.1' ).\"' ),\n\t\t\t\t( 7, 'user_domain', 'localhost' )\" );\n\ttask_end();\n\n\tglobal $default_locale, $query, $timestamp;\n\tglobal $blog_all_ID, $blog_home_ID, $blog_a_ID, $blog_b_ID, $blog_photoblog_ID, $blog_forums_ID, $blog_manual_ID;\n\n\t$default_blog_longdesc = T_('This is the long description for the blog named \\'%s\\'. %s');\n\t$default_blog_access_type = 'relative';\n\n\t$create_sample_contents = param( 'create_sample_contents', 'string', '' );\n\tif( $create_sample_contents == 'all' )\n\t{\t// Array contains which collections should be installed\n\t\t$install_collection_home =   1;\n\t\t$install_collection_bloga =  1;\n\t\t$install_collection_blogb =  1;\n\t\t$install_collection_photos = 1;\n\t\t$install_collection_forums = 1;\n\t\t$install_collection_manual = 1;\n\t}\n\telse\n\t{\t// Array contains which collections should be installed\n\t\t$collections = param( 'collections', 'array:string', array() );\n\t\t$install_collection_home = in_array( 'home', $collections );\n\t\t$install_collection_bloga = in_array( 'a', $collections );\n\t\t$install_collection_blogb = in_array( 'b', $collections );\n\t\t$install_collection_photos = in_array( 'photos', $collections );\n\t\t$install_collection_forums = in_array( 'forums', $collections );\n\t\t$install_collection_manual = in_array( 'manual', $collections );\n\t}\n\n\ttask_begin( 'Creating default blogs... ' );\n\n\t// Store the item IDs in this array in order to create additional comments\n\t$additional_comments_item_IDs = array();\n\n\tif( $install_collection_home )\n\t{ // Install Home blog\n\t\t$blog_shortname = T_('Home');\n\t\t$blog_home_access_type = ( $install_test_features ) ? 'default' : $default_blog_access_type;\n\t\t$blog_more_longdesc = '<br />\n<br />\n<strong>'.T_('The main purpose for this blog is to be included as a side item to other blogs where it will display your favorite/related links.').'</strong>';\n\t\t$blog_home_ID = create_blog(\n\t\t\tT_('Homepage Title'),\n\t\t\t$blog_shortname,\n\t\t\t'home',\n\t\t\tT_('Change this as you like'),\n\t\t\tsprintf( $default_blog_longdesc, $blog_shortname, $blog_more_longdesc ),\n\t\t\t2, // Skin ID\n\t\t\t'main',\n\t\t\t'any',\n\t\t\t1,\n\t\t\t$blog_home_access_type,\n\t\t\ttrue,\n\t\t\t'never',\n\t\t\t$jay_moderator_ID );\n\n\t\tif( ! empty( $blog_home_ID ) )\n\t\t{ // Save ID of this blog in settings table, It is used on top menu, file \"/skins_site/_site_body_header.inc.php\"\n\t\t\t$DB->query( 'INSERT INTO T_settings ( set_name, set_value )\n\t\t\t\tVALUES ( '.$DB->quote( 'info_blog_ID' ).', '.$DB->quote( $blog_home_ID ).' )' );\n\t\t}\n\t}\n\n\tif( $install_collection_bloga )\n\t{ // Install Blog A\n\t\t$blog_shortname = 'Blog A';\n\t\t$blog_a_access_type = ( $install_test_features ) ? 'default' : $default_blog_access_type;\n\t\t$blog_stub = 'a';\n\t\t$blog_a_ID = create_blog(\n\t\t\tT_('Public Blog'),\n\t\t\t$blog_shortname,\n\t\t\t$blog_stub,\n\t\t\tT_('This blog is completely public...'),\n\t\t\tsprintf( $default_blog_longdesc, $blog_shortname, '' ),\n\t\t\t1, // Skin ID\n\t\t\t'std',\n\t\t\t'any',\n\t\t\t1,\n\t\t\t$blog_a_access_type,\n\t\t\ttrue,\n\t\t\t'public',\n\t\t\t$jay_moderator_ID );\n\t}\n\n\tif( $install_collection_blogb )\n\t{ // Install Blog B\n\t\t$blog_shortname = 'Blog B';\n\t\t$blog_b_access_type = ( $install_test_features ) ? 'index.php' : $default_blog_access_type;\n\t\t$blog_stub = 'b';\n\t\t$blog_b_ID = create_blog(\n\t\t\tT_('Members-Only Blog'),\n\t\t\t$blog_shortname,\n\t\t\t$blog_stub,\n\t\t\tT_('This blog has restricted access...'),\n\t\t\tsprintf( $default_blog_longdesc, $blog_shortname, '' ),\n\t\t\t1, // Skin ID\n\t\t\t'std',\n\t\t\t'',\n\t\t\t0,\n\t\t\t$blog_b_access_type,\n\t\t\ttrue,\n\t\t\t'public',\n\t\t\t$paul_blogger_ID );\n\n\t\t$BlogCache = & get_BlogCache();\n\t\tif( $b_Blog = $BlogCache->get_by_ID( $blog_b_ID, false, false ) )\n\t\t{\n\t\t\t$b_Blog->set_setting( 'front_disp', 'front' );\n\t\t\t$b_Blog->set_setting( 'skin2_layout', 'single_column' );\n\t\t\t$b_Blog->set( 'advanced_perms', 1 );\n\t\t\t$b_Blog->set_setting( 'allow_access', 'members' );\n\t\t\t$b_Blog->dbupdate();\n\t\t}\n\t}\n\n\tif( $install_collection_photos )\n\t{ // Install Photos blog\n\t\t$blog_shortname = 'Photos';\n\t\t$blog_stub = 'photos';\n\t\t$blog_more_longdesc = '<br />\n<br />\n<strong>'.T_(\"This is a photoblog, optimized for displaying photos.\").'</strong>';\n\t\t$blog_photoblog_ID = create_blog(\n\t\t\t'Photos',\n\t\t\t$blog_shortname,\n\t\t\t$blog_stub,\n\t\t\tT_('This blog shows photos...'),\n\t\t\tsprintf( $default_blog_longdesc, $blog_shortname, $blog_more_longdesc ),\n\t\t\t3, // Skin ID\n\t\t\t'photo', '', 0, 'relative', true, 'public',\n\t\t\t$dave_blogger_ID );\n\t}\n\n\tif( $install_collection_forums )\n\t{ // Install Forums blog\n\t\t$blog_shortname = 'Forums';\n\t\t$blog_stub = 'forums';\n\t\t$blog_forums_ID = create_blog(\n\t\t\tT_('Forums Title'),\n\t\t\t$blog_shortname,\n\t\t\t$blog_stub,\n\t\t\tT_('Tagline for Forums'),\n\t\t\tsprintf( $default_blog_longdesc, $blog_shortname, '' ),\n\t\t\t4, // Skin ID\n\t\t\t'forum', 'any', 1, 'relative', false, 'public',\n\t\t\t$paul_blogger_ID );\n\t}\n\n\tif( $install_collection_manual )\n\t{ // Install Manual blog\n\t\t$blog_shortname = 'Manual';\n\t\t$blog_stub = 'manual';\n\t\t$blog_manual_ID = create_blog(\n\t\t\tT_('Manual Title'),\n\t\t\t$blog_shortname,\n\t\t\t$blog_stub,\n\t\t\tT_('Tagline for this online manual'),\n\t\t\tsprintf( $default_blog_longdesc, $blog_shortname, '' ),\n\t\t\t5, // Skin ID\n\t\t\t'manual', 'any', 1, $default_blog_access_type, false, 'public',\n\t\t\t$dave_blogger_ID );\n\t}\n\n\t$BlogCache = & get_BlogCache();\n\tif( $first_Blog = & $BlogCache->get_by_ID( 1, false, false ) )\n\t{ // Set first blog as default login and default messaging collection\n\t\t$DB->query( 'INSERT INTO T_settings ( set_name, set_value )\n\t\t\tVALUES ( '.$DB->quote( 'login_blog_ID' ).', '.$DB->quote( $first_Blog->ID ).' ),\n\t\t\t\t\t\t ( '.$DB->quote( 'msg_blog_ID' ).', '.$DB->quote( $first_Blog->ID ).' )' );\n\t}\n\n\ttask_end();\n\n\tglobal $query, $timestamp;\n\n\ttask_begin( 'Creating sample categories... ' );\n\n\tif( $install_collection_bloga )\n\t{ // Create categories for blog A\n\t\t$cat_ann_a = cat_create( T_('Welcome'), 'NULL', $blog_a_ID );\n\t\t$cat_news = cat_create( T_('News'), 'NULL', $blog_a_ID );\n\t\t$cat_bg = cat_create( T_('Background'), 'NULL', $blog_a_ID );\n\t\t$cat_fun = cat_create( T_('Fun'), 'NULL', $blog_a_ID );\n\t\t$cat_life = cat_create( T_('In real life'), $cat_fun, $blog_a_ID );\n\t\t$cat_web = cat_create( T_('On the web'), $cat_fun, $blog_a_ID );\n\t\t$cat_sports = cat_create( T_('Sports'), $cat_life, $blog_a_ID );\n\t\t$cat_movies = cat_create( T_('Movies'), $cat_life, $blog_a_ID );\n\t\t$cat_music = cat_create( T_('Music'), $cat_life, $blog_a_ID );\n\n\t\tif( $a_Blog = $BlogCache->get_by_ID( $blog_a_ID, false, false ) )\n\t\t{\n\t\t\t$a_Blog->set_setting( 'default_cat_ID', $cat_ann_a );\n\t\t\t$a_Blog->dbupdate();\n\t\t}\n\t}\n\n\tif( $install_collection_blogb )\n\t{ // Create categories for blog B\n\t\t$cat_ann_b = cat_create( T_('Announcements'), 'NULL', $blog_b_ID );\n\t\t$cat_b2evo = cat_create( T_('b2evolution Tips'), 'NULL', $blog_b_ID );\n\t\t$cat_additional_skins = cat_create( T_('Get additional skins'), 'NULL', $blog_b_ID );\n\n\t\tif( $b_Blog = $BlogCache->get_by_ID( $blog_b_ID, false, false ) )\n\t\t{\n\t\t\t$b_Blog->set_setting( 'default_cat_ID', $cat_ann_b );\n\t\t\t$b_Blog->dbupdate();\n\t\t}\n\t}\n\n\tif( $install_collection_home )\n\t{ // Create categories for home blog\n\t\t$cat_home_b2evo = cat_create( 'b2evolution', 'NULL', $blog_home_ID );\n\t\t$cat_home_contrib = cat_create( T_('Contributors'), 'NULL', $blog_home_ID );\n\n\t\tif( $home_Blog = $BlogCache->get_by_ID( $blog_home_ID, false, false ) )\n\t\t{\n\t\t\t$home_Blog->set_setting( 'default_cat_ID', $cat_home_b2evo );\n\t\t\t$home_Blog->dbupdate();\n\t\t}\n\t}\n\n\tif( $install_collection_photos )\n\t{ // Create categories for photoblog\n\t\t$cat_photo_album = cat_create( T_('Landscapes'), 'NULL', $blog_photoblog_ID );\n\n\t\tif( $photoblog_Blog = $BlogCache->get_by_ID( $blog_photoblog_ID, false, false ) )\n\t\t{\n\t\t\t$photoblog_Blog->set_setting( 'default_cat_ID', $cat_photo_album );\n\t\t\t$photoblog_Blog->dbupdate();\n\t\t}\n\t}\n\n\tif( $install_collection_forums )\n\t{ // Create categories for forums\n\t\t$cat_forums_forum_group = cat_create( T_('A forum group'), 'NULL', $blog_forums_ID, NULL, false, 1, NULL, true );\n\t\t\t$cat_forums_ann = cat_create( T_('Welcome'), $cat_forums_forum_group, $blog_forums_ID, T_('Welcome description'), false, 1 );\n\t\t\t$cat_forums_aforum = cat_create( T_('A forum'), $cat_forums_forum_group, $blog_forums_ID, T_('Short description of this forum'), false, 2 );\n\t\t\t$cat_forums_anforum = cat_create( T_('Another forum'), $cat_forums_forum_group, $blog_forums_ID, T_('Short description of this forum'), false, 3 );\n\t\t$cat_forums_another_group = cat_create( T_('Another group'), 'NULL', $blog_forums_ID, NULL, false, 2, NULL, true );\n\t\t\t$cat_forums_bg = cat_create( T_('Background'), $cat_forums_another_group, $blog_forums_ID, T_('Background description'), false, 1 );\n\t\t\t$cat_forums_news = cat_create( T_('News'), $cat_forums_another_group, $blog_forums_ID, T_('News description'), false, 2 );\n\t\t\t$cat_forums_fun = cat_create( T_('Fun'), $cat_forums_another_group, $blog_forums_ID, T_('Fun description'), false, 3 );\n\t\t\t\t$cat_forums_life = cat_create( T_('In real life'), $cat_forums_fun, $blog_forums_ID, NULL, false, 4, 'alpha' );\n\t\t\t\t\t$cat_forums_movies = cat_create( T_('Movies'), $cat_forums_life, $blog_forums_ID );\n\t\t\t\t\t$cat_forums_music = cat_create( T_('Music'), $cat_forums_life, $blog_forums_ID );\n\t\t\t\t\t$cat_forums_sports = cat_create( T_('Sports'), $cat_forums_life, $blog_forums_ID );\n\t\t\t\t$cat_forums_web = cat_create( T_('On the web'), $cat_forums_fun, $blog_forums_ID, NULL, false, 5 );\n\n\t\tif( $forums_Blog = $BlogCache->get_by_ID( $blog_forums_ID, false, false ) )\n\t\t{\n\t\t\t$forums_Blog->set_setting( 'default_cat_ID', $cat_forums_forum_group );\n\t\t\t$forums_Blog->dbupdate();\n\t\t}\n\t}\n\n\tif( $install_collection_manual )\n\t{ // Create categories for manual\n\t\t$cat_manual_intro = cat_create( T_('Introduction'), NULL, $blog_manual_ID, NULL, false, 10 );\n\t\t$cat_manual_getstarted = cat_create( T_('Getting Started'), NULL, $blog_manual_ID, NULL, false, 20 );\n\t\t$cat_manual_userguide = cat_create( T_('User Guide'), NULL, $blog_manual_ID, NULL, false, 30 );\n\t\t$cat_manual_reference = cat_create( T_('Reference'), NULL, $blog_manual_ID, NULL, false, 40, 'alpha' );\n\n\t\t$cat_manual_everyday = cat_create( T_('Collections'), $cat_manual_reference, $blog_manual_ID, NULL, false, 10 );\n\t\t$cat_manual_advanced = cat_create( T_('Other'), $cat_manual_reference, $blog_manual_ID, NULL, false, 5 );\n\n\t\t$cat_manual_blogs = cat_create( T_('Blogs'), $cat_manual_everyday, $blog_manual_ID, NULL, false, 35 );\n\t\t$cat_manual_photos = cat_create( T_('Photo Albums'), $cat_manual_everyday, $blog_manual_ID, NULL, false, 25 );\n\t\t$cat_manual_forums = cat_create( T_('Forums'), $cat_manual_everyday, $blog_manual_ID, NULL, false, 5 );\n\n\t\tif( $manual_Blog = $BlogCache->get_by_ID( $blog_manual_ID, false, false ) )\n\t\t{\n\t\t\t$manual_Blog->set_setting( 'default_cat_ID', $cat_manual_intro );\n\t\t\t$manual_Blog->dbupdate();\n\t\t}\n\t}\n\n\ttask_end();\n\n\n\t$info_page = T_('<p>This website is powered by b2evolution.</p>\n\n<p>You are currently looking at an info page about \"%s\".</p>\n\n<p>Info pages are very much like regular posts, except that they do not appear in the regular flow of posts. They appear as info pages in the menu instead.</p>\n\n<p>If needed, skins can format info pages differently from regular posts.</p>');\n\n\n\t// Update the progress bar status\n\tupdate_install_progress_bar();\n\n\t// Use this var to shift the posts of the collections in time below:\n\t$timeshift = 0;\n\n\tif( $install_collection_home )\n\t{ // ---------------- Insert the POSTS for Home blog ---------------- //\n\t\ttask_begin( 'Creating sample posts for Collection Home... ' );\n\n\t\t// Insert three ADVERTISEMENTS for home blog:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $jay_moderator_ID, /* TRANS: sample ad content */ T_('b2evo: The software for blog pros!'), /* TRANS: sample ad content */ T_('The software for blog pros!'), $now, $cat_home_b2evo,\n\t\t\tarray(), 'published', '#', '', 'http://b2evolution.net', 'open', array('default'), 'Advertisement' );\n\t\t$edit_File = new File( 'shared', 0, 'banners/b2evo-125-pros.png' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $jay_moderator_ID, /* TRANS: sample ad content */ T_('b2evo: Better Blog Software!'), /* TRANS: sample ad content */ T_('Better Blog Software!'), $now, $cat_home_b2evo,\n\t\t\tarray(), 'published', '#', '', 'http://b2evolution.net', 'open', array('default'), 'Advertisement' );\n\t\t$edit_File = new File( 'shared', 0, 'banners/b2evo-125-better.png' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $jay_moderator_ID, /* TRANS: sample ad content */ T_('b2evo: The other blog tool!'), /* TRANS: sample ad content */ T_('The other blog tool!'), $now, $cat_home_b2evo,\n\t\t\tarray(), 'published', '#', '', 'http://b2evolution.net', 'open', array('default'), 'Advertisement' );\n\t\t$edit_File = new File( 'shared', 0, 'banners/b2evo-125-other.png' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t// Insert a post into info blog:\n\t\t// walter : a weird line of code to create a post in the home a minute after the others.\n\t\t// It will show a bug on home agregation by category\n\t\t$timestamp++;\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, 'Evo Factory', '', $now, $cat_home_contrib, array(), 'published', 'en-US', '', 'http://evofactory.com/', 'disabled', array(), 'Sidebar link' );\n\n\t\t// Insert a post into home:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, 'Francois', '', $now, $cat_home_contrib, array(), 'published', 'fr-FR', '', 'http://fplanque.com/', 'disabled', array(), 'Sidebar link' );\n\n\t\t// Insert a post into home:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, 'Blog news', '', $now, $cat_home_b2evo, array(), 'published', 'en-US', '', 'http://b2evolution.net/news.php', 'disabled', array(), 'Sidebar link' );\n\n\t\t// Insert a post into home:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, 'Web hosting', '', $now, $cat_home_b2evo, array(), 'published', 'en-US', '', 'http://b2evolution.net/web-hosting/blog/', 'disabled', array(), 'Sidebar link' );\n\n\t\t// Insert a post into home:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, 'Manual', '', $now, $cat_home_b2evo, array(), 'published',\t'en-US', '', get_manual_url( NULL ), 'disabled', array(), 'Sidebar link' );\n\n\t\t// Insert a post into home:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, 'Support', '', $now, $cat_home_b2evo, array(), 'published', 'en-US', '', 'http://forums.b2evolution.net/', 'disabled', array(), 'Sidebar link' );\n\n\t\t// Insert a PAGE:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_(\"About this site\"), T_(\"<p>This blog platform is powered by b2evolution.</p>\n\n<p>You are currently looking at an info page about this site.</p>\n\n<p>Info pages are very much like regular posts, except that they do not appear in the regular flow of posts. They appear as info pages in the menu instead.</p>\n\n<p>If needed, skins can format info pages differently from regular posts.</p>\"), $now, $cat_home_b2evo,\n\t\t\tarray( $cat_home_b2evo ), 'published', '#', '', '', 'open', array('default'), 'Standalone Page' );\n\t\t$edit_File = new File( 'shared', 1, 'logos/b2evolution_1016x208_wbg.png' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Homepage post'), T_('<p>This is the Home page of this site.</p>\n\n<p>More specifically it is the \"Front page\" of the first collection of this site. This first collection is called \"Home\". Other sample collections have been created. You can access them by clicking \"Blog A\", \"Blog B\", \"Photos\", etc. in the menu bar at the top of this page.</p>\n\n<p>You can add collections at will. You can also remove them (including this \"Home\" collection) if you don\\'t need one.</p>'),\n\t\t\t$now, $cat_home_b2evo, array(), 'published', '#', '', '', 'open', array( 'default' ), 'Intro-Front' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Terms & Conditions'), '<p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n\n<p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>',\n\t\t\t$now, $cat_home_b2evo, array(), 'published', '#', '', '', 'open', array( 'default' ), 'Terms & Conditions' );\n\t\tif( $edited_Item->ID > 0 )\n\t\t{\t// Use this post as default terms & conditions:\n\t\t\t$Settings->set( 'site_terms', $edited_Item->ID );\n\t\t\t$Settings->dbupdate();\n\t\t}\n\n\t\t// Update the progress bar status\n\t\tupdate_install_progress_bar();\n\n\t\ttask_end();\n\t}\n\n\tif( $install_collection_bloga )\n\t{ // ---------------- Insert the POSTS for Blog A ---------------- //\n\t\ttask_begin( 'Creating sample posts for Collection Blog A... ' );\n\n\t\t// Set all posts of this collection with 24 hours ago relating on previous collection:\n\t\t$timeshift += 86400;\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Main Intro post'), T_('This is the main intro post. It appears on the homepage only.'),\n\t\t\t$now, $cat_ann_a, array(), 'published', '#', '', '', 'open', array('default'), 'Intro-Main' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('First Post'), T_('<p>This is the first post.</p>\n\n<p>It appears in a single category.</p>'), $now, $cat_ann_a );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Second post'), T_('<p>This is the second post.</p>\n\n<p>It appears in multiple categories.</p>'), $now, $cat_news, array( $cat_ann_a ) );\n\n\t\t// Insert a PAGE:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, T_(\"About Blog A\"), sprintf( $info_page, T_('Blog A') ), $now, $cat_ann_a,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Standalone Page' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('This is a multipage post'), T_('<p>This is page 1 of a multipage post.</p>\n\n<blockquote><p>This is a Block Quote.</p></blockquote>\n\n<p>You can see the other pages by clicking on the links below the text.</p>').'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 2 ).$lorem_2more.'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 3 ).$lorem_1paragraph.'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 4 ).'\n\n'.T_('<p>It is the last page.</p>'), $now, $cat_bg );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Extended post with no teaser'), T_('<p>This is an extended post with no teaser. This means that you won\\'t see this teaser any more when you click the \"more\" link.</p>').$lorem_1paragraph\n\t.'[teaserbreak]\n\n'.T_('<p>This is the extended text. You only see it when you have clicked the \"more\" link.</p>').$lorem_2more, $now, $cat_bg );\n\t\t$edited_Item->set_setting( 'hide_teaser', '1' );\n\t\t$edited_Item->dbsave();\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set( 'featured', 1 );\n\t\t$edited_Item->set_tags_from_string( 'photo,demo' );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Extended post'), T_('<p>This is an extended post. This means you only see this small teaser by default and you must click on the link below to see more.</p>').$lorem_1paragraph\n\t.'[teaserbreak]\n\n'.T_('<p>This is the extended text. You only see it when you have clicked the \"more\" link.</p>').$lorem_2more, $now, $cat_bg );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/john-ford-point.jpg' );\n\t\t$edit_File->link_to_Object( $LinkOwner, 1, 'cover' );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monument-valley-road.jpg' );\n\t\t$edit_File->link_to_Object( $LinkOwner, 2, 'teaser' );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monuments.jpg' );\n\t\t$edit_File->link_to_Object( $LinkOwner, 3, 'aftermore' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->set_setting( 'custom_double_1', '123' );\n\t\t$edited_Item->set_setting( 'custom_double_2', '456' );\n\t\t$edited_Item->set_setting( 'custom_varchar_3', 'abc' );\n\t\t$edited_Item->set_setting( 'custom_varchar_4', 'Enter your own values' );\n\t\t$post_custom_fields_ID = $edited_Item->insert( $jay_moderator_ID, T_('Custom Fields Example'), T_('<p>This post has a special post type called \"Post with custom fields\".</p>')\n\t\t\t\t.T_('<p>This post type defines 4 custom fields.</p>')\n\t\t\t\t.T_('<p>This post has sample values for these for 4 fields. You can see them below</p>'),\n\t\t\t$now, $cat_bg, array(), 'published', '#', '', '', 'open', array('default'), 'Post with Custom Fields' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->set( 'parent_ID', $post_custom_fields_ID ); // Set parent post ID\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Child Post Example'), T_('<p>This post has a special post type called \"Child Post\".</p>'),\n\t\t\t$now, $cat_bg, array(), 'published', '#', '', '', 'open', array('default'), 'Child Post' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo,demo' );\n\t\t$edited_Item->set( 'featured', 1 );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Image post'), T_('<p>This post has several images attached to it. Each one uses a different Attachment Position. Each may be displayed differently depending on the skin they are viewed in.</p>\n\n<p>Check out the photoblog (accessible through the links at the top) to see a completely different skin focused more on the photos than on the blog text.</p>'), $now, $cat_bg );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monument-valley.jpg' );\n\t\t$edit_File->link_to_Object( $LinkOwner, 1, 'cover' );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monuments.jpg' );\n\t\t$edit_File->link_to_Object( $LinkOwner, 2, 'teaser' );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley' );\n\t\t$edit_File->link_to_Object( $LinkOwner, 3, 'teaser' );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/bus-stop-ahead.jpg' );\n\t\t$edit_File->link_to_Object( $LinkOwner, 4, 'aftermore' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$additional_comments_item_IDs[] = $edited_Item->insert( $jay_moderator_ID, T_(\"Welcome to your b2evolution-powered website!\"),\n\t\t\tT_(\"<p>To get you started, the installer has automatically created several sample collections and populated them with some sample contents. Of course, this starter structure is all yours to edit. Until you do that, though, here's what you will find on this site:</p>\n\n<ul>\n<li><strong>Blog A</strong>: You are currently looking at it. It contains a few sample posts, using simple features of b2evolution.</li>\n<li><strong>Blog B</strong>: You can access it from the link at the top of the page. It contains information about more advanced features. Note that it is deliberately using a different skin from Blog A to give you an idea of what's possible.</li>\n<li><strong>Photos</strong>: This collection is an example of how you can use b2evolution to showcase photos, with photos grouped into photo albums.</li>\n<li><strong>Forums</strong>: This collection is a discussion forum (a.k.a. bulletin board) allowing your users to discuss among themselves.</li>\n<li><strong>Manual</strong>: This showcases how b2evolution can be used to publish structured content such as an online manual or book.</li>\n\n</ul>\n\n<p>You can add new collections of any type (blog, photos, forums, etc.), delete unwanted one and customize existing collections (title, sidebar, blog skin, widgets, etc.) from the admin interface.</p>\"), $now, $cat_ann_a );\n\t\t$edit_File = new File( 'shared', 0, 'logos/b2evolution_1016x208_wbg.png' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t// Update the progress bar status\n\t\tupdate_install_progress_bar();\n\n\t\ttask_end();\n\t}\n\n\tif( $install_collection_blogb )\n\t{ // ---------------- Insert the POSTS for Blog B ---------------- //\n\t\ttask_begin( 'Creating sample posts for Collection Blog B... ' );\n\n\t\t// Set all posts of this collection with 24 hours ago relating on previous collection:\n\t\t$timeshift += 86400;\n\n\t\t// Insert sidebar links into Blog B\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $paul_blogger_ID, 'Skin Faktory', '', $now, $cat_additional_skins, array(), 'published', 'en-US', '', 'http://www.skinfaktory.com/', 'open', array('default'), 'Sidebar link' );\n\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $paul_blogger_ID, T_('b2evo skins repository'), '', $now, $cat_additional_skins, array(), 'published', 'en-US', '', 'http://skins.b2evolution.net/', 'open', array('default'), 'Sidebar link' );\n\n\t\t// Insert a PAGE:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"About Blog B\"), sprintf( $info_page, T_('Blog B') ), $now, $cat_ann_b,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Standalone Page' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $paul_blogger_ID, T_('Welcome to Blog B'), sprintf( T_('<p>This is the intro post for the front page of Blog B.</p>\n\n<p>Blog B is currently configured to show a front page like this one instead of directly showing the blog\\'s posts.</p>\n\n<ul>\n<li>To view the blog\\'s posts, click on \"News\" in the menu above.</li>\n<li>If you don\\'t want to have such a front page, you can disable it in the Blog\\'s settings > Features > <a %s>Front Page</a>. You can also see an example of a blog without a Front Page in Blog A</li>\n</ul>'), 'href=\"'.$admin_url.'?ctrl=coll_settings&amp;tab=home&amp;blog='.$blog_a_ID.'\"' ),\n\t\t\t\t$now, $cat_b2evo, array(), 'published', '#', '', '', 'open', array('default'), 'Intro-Front' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"b2evolution tips category &ndash; Sub Intro post\"), T_(\"This uses post type \\\"Intro-Cat\\\" and is attached to the desired Category(ies).\"),\n\t\t\t$now, $cat_b2evo, array(), 'published', '#', '', '', 'open', array('default'), 'Intro-Cat' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'widgets,intro' );\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"Widgets tag &ndash; Sub Intro post\"), T_(\"This uses post type \\\"Intro-Tag\\\" and is tagged with the desired Tag(s).\"),\n\t\t\t$now, $cat_b2evo, array(), 'published', '#', '', '', 'open', array('default'), 'Intro-Tag' );\n\n\t\t// Insert a post:\n\t\t// TODO: move to Blog A\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"Featured post\"), T_(\"<p>This is a demo of a featured post.</p>\n\n<p>It will be featured whenever we have no specific \\\"Intro\\\" post to display for the current request. To see it in action, try displaying the \\\"Announcements\\\" category.</p>\n\n<p>Also note that when the post is featured, it does not appear in the regular post flow.</p>\").$lorem_1paragraph,\n\t\t\t$now, $cat_b2evo, array( $cat_ann_b ) );\n\t\t$edited_Item->set( 'featured', 1 );\n\t\t$edited_Item->dbsave();\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"Apache optimization...\"), sprintf( T_(\"<p>b2evolution comes with an <code>.htaccess</code> file destined to optimize the way b2evolution is handled by your webseerver (if you are using Apache). In some circumstances, that file may not be automatically activated at setup. Please se the man page about <a %s>Tricky Stuff</a> for more information.</p>\n\n<p>For further optimization, please review the manual page about <a %s>Performance optimization</a>. Depending on your current configuration and on what your <a %s>web hosting</a> company allows you to do, you may increase the speed of b2evolution by up to a factor of 10!</p>\"),\n'href=\"'.get_manual_url( 'tricky-stuff' ).'\"',\n'href=\"'.get_manual_url( 'performance-optimization' ).'\"',\n'href=\"http://b2evolution.net/web-hosting/\"' ),\n\t\t\t$now, $cat_b2evo, array( $cat_ann_b ) );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'skins' );\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"Skins, Stubs, Templates &amp; website integration...\"), T_(\"<p>By default, blogs are displayed using an evoskin. (More on skins in another post.)</p>\n\n<p>This means, blogs are accessed through '<code>index.php</code>', which loads default parameters from the database and then passes on the display job to a skin.</p>\n\n<p>Alternatively, if you don't want to use the default DB parameters and want to, say, force a skin, a category or a specific linkblog, you can create a stub file like the provided '<code>a_stub.php</code>' and call your blog through this stub instead of index.php .</p>\n\n<p>Finally, if you need to do some very specific customizations to your blog, you may use plain templates instead of skins. In this case, call your blog through a full template, like the provided '<code>a_noskin.php</code>'.</p>\n\n<p>If you want to integrate a b2evolution blog into a complex website, you'll probably want to do it by copy/pasting code from <code>a_noskin.php</code> into a page of your website.</p>\n\n<p>You will find more information in the stub/template files themselves. Open them in a text editor and read the comments in there.</p>\n\n<p>Either way, make sure you go to the blogs admin and set the correct access method/URL for your blog. Otherwise, the permalinks will not function properly.</p>\"), $now, $cat_b2evo );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'widgets' );\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"About widgets...\"), T_('<p>b2evolution blogs are installed with a default selection of Widgets. For example, the sidebar of this blog includes widgets like a calendar, a search field, a list of categories, a list of XML feeds, etc.</p>\n\n<p>You can add, remove and reorder widgets from the Blog Settings tab in the admin interface.</p>\n\n<p>Note: in order to be displayed, widgets are placed in containers. Each container appears in a specific place in an evoskin. If you change your blog skin, the new skin may not use the same containers as the previous one. Make sure you place your widgets in containers that exist in the specific skin you are using.</p>'), $now, $cat_b2evo );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'skins' );\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"About skins...\"), sprintf( T_('<p>By default, b2evolution blogs are displayed using an evoskin.</p>\n\n<p>You can change the skin used by any blog by editing the blog settings in the admin interface.</p>\n\n<p>You can download additional skins from the <a href=\"http://skins.b2evolution.net/\" target=\"_blank\">skin site</a>. To install them, unzip them in the /blogs/skins directory, then go to General Settings &gt; Skins in the admin interface and click on \"Install new\".</p>\n\n<p>You can also create your own skins by duplicating, renaming and customizing any existing skin folder from the /blogs/skins directory.</p>\n\n<p>To start customizing a skin, open its \"<code>index.main.php</code>\" file in an editor and read the comments in there. Note: you can also edit skins in the \"Files\" tab of the admin interface.</p>\n\n<p>And, of course, read the <a href=\"%s\" target=\"_blank\">manual on skins</a>!</p>'), get_manual_url( 'skin-structure' ) ), $now, $cat_b2evo );\n\t\t$edited_Item->dbsave();\n\t\t// $edited_Item->insert_update_tags( 'update' );\n\n\t\t// Update the progress bar status\n\t\tupdate_install_progress_bar();\n\n\t\ttask_end();\n\t}\n\n\tif( $install_collection_photos )\n\t{ // ---------------- Insert the POSTS for Photos blog ---------------- //\n\t\ttask_begin( 'Creating sample posts for Collection Photos... ' );\n\n\t\t// Set all posts of this collection with 24 hours ago relating on previous collection:\n\t\t$timeshift += 86400;\n\n\t\t// Insert a PAGE:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('About Photos'), sprintf( $info_page, T_('Photos') ), $now, $cat_photo_album,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Standalone Page' );\n\n\t\t// Insert a post into photoblog:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Sunset'), '',\n\t\t\t$now, $cat_photo_album, array(), 'published','en-US' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File = new File( 'shared', 0, 'sunset/sunset.jpg' );\n\t\t$photo_link_1_ID = $edit_File->link_to_Object( $LinkOwner, 1 );\n\n\t\t// Insert a post into photoblog:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Bus Stop Ahead'), 'In the middle of nowhere: a school bus stop where you wouldn\\'t really expect it!',\n\t\t\t$now, $cat_photo_album, array(), 'published','en-US', '', 'http://fplanque.com/photo/monument-valley' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/bus-stop-ahead.jpg' );\n\t\t$photo_link_1_ID = $edit_File->link_to_Object( $LinkOwner, 1 );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/john-ford-point.jpg' );\n\t\t$photo_link_2_ID = $edit_File->link_to_Object( $LinkOwner, 2 );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monuments.jpg' );\n\t\t$photo_link_3_ID = $edit_File->link_to_Object( $LinkOwner, 3 );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monument-valley-road.jpg' );\n\t\t$photo_link_4_ID = $edit_File->link_to_Object( $LinkOwner, 4 );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monument-valley.jpg' );\n\t\t$photo_link_5_ID = $edit_File->link_to_Object( $LinkOwner, 5 );\n\n\t\tif( $install_test_features )\n\t\t{ // Add examples for infodots plugin\n\t\t\t$edited_Item->set_tags_from_string( 'photo,demo' );\n\t\t\t$edited_Item->set( 'content', $edited_Item->get( 'content' )\n\t\t\t\t.sprintf( '\n[infodot:%s:191:36:100px]School bus [b]here[/b]\n\n#### In the middle of nowhere:\na school bus stop where you wouldn\\'t really expect it!\n\n1. Item 1\n2. Item 2\n3. Item 3\n\n[enddot]\n[infodot:%s:104:99]cowboy and horse[enddot]\n[infodot:%s:207:28:15em]Red planet[enddot]', $photo_link_1_ID, $photo_link_2_ID, $photo_link_4_ID ) );\n\t\t\t$edited_Item->dbupdate();\n\t\t\techo_install_log( 'TEST FEATURE: Adding examples for plugin \"Info dots renderer\" on item #'.$edited_Item->ID );\n\t\t}\n\n\t\t// Update the progress bar status\n\t\tupdate_install_progress_bar();\n\n\t\ttask_end();\n\t}\n\n\tif( $install_collection_forums || $install_collection_manual )\n\t{ // Init a content for post with markdown examples\n\t\t$markdown_examples_content = T_('Heading\n=======\n\nSub-heading\n-----------\n\n### H3 header\n\n#### H4 header ####\n\n> Email-style angle brackets\n> are used for blockquotes.\n\n> > And, they can be nested.\n\n> ##### Headers in blockquotes\n>\n> * You can quote a list.\n> * Etc.\n\n[This is a link](http://b2evolution.net/) if Links are turned on in the markdown plugin settings\n\nParagraphs are separated by a blank line.\n\n    This is a preformatted\n    code block.\n\nText attributes *Italic*, **bold**, `monospace`.\n\nShopping list:\n\n* apples\n* oranges\n* pears\n\nThe rain---not the reign---in Spain.');\n\t}\n\n\tif( $install_collection_forums )\n\t{ // ---------------- Insert the POSTS for Forums Collection ---------------- //\n\t\ttask_begin( 'Creating sample posts for Collection Forums... ' );\n\n\t\t// Set all posts of this collection with 24 hours ago relating on previous collection:\n\t\t$timeshift += 86400;\n\n\t\t// Insert a PAGE:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( 1, T_(\"About Forums\"), sprintf( $info_page, T_('Forums') ), $now, $cat_forums_ann,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Standalone Page' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $mary_moderator_ID, T_('First Topic'), T_('<p>This is the first topic.</p>\n\n<p>It appears in a single category.</p>').$lorem_2more, $now, $cat_forums_ann );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Second topic'), T_('<p>This is the second topic.</p>\n\n<p>It appears in multiple categories.</p>').$lorem_2more, $now, $cat_forums_news, array( $cat_forums_ann ) );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Image topic'), T_('<p>This topic has an image attached to it. The image is automatically resized to fit the current blog skin. You can zoom in by clicking on the thumbnail.</p>\n\n<p>Check out the photoblog (accessible through the links at the top) to see a completely different skin focused more on the photos than on the blog text.</p>'), $now, $cat_forums_bg );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monuments.jpg' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $paul_blogger_ID, T_('This is a multipage topic'), T_('<p>This is page 1 of a multipage topic.</p>\n\n<blockquote><p>This is a Block Quote.</p></blockquote>\n\n<p>You can see the other pages by clicking on the links below the text.</p>').'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 2 ).$lorem_2more.'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 3 ).$lorem_1paragraph.'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 4 ).'\n\n'.T_('<p>It is the last page.</p>'), $now, $cat_forums_bg );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $larry_user_ID, T_('Extended topic with no teaser'), T_('<p>This is an extended topic with no teaser. This means that you won\\'t see this teaser any more when you click the \"more\" link.</p>\n\n[teaserbreak]\n\n<p>This is the extended text. You only see it when you have clicked the \"more\" link.</p>'), $now, $cat_forums_bg );\n\t\t$edited_Item->set_setting( 'hide_teaser', '1' );\n\t\t$edited_Item->dbsave();\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $kate_user_ID, T_('Extended topic'), T_('<p>This is an extended topic. This means you only see this small teaser by default and you must click on the link below to see more.</p>\n\n[teaserbreak]\n\n<p>This is the extended text. You only see it when you have clicked the \"more\" link.</p>'), $now, $cat_forums_bg );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$additional_comments_item_IDs[] = $edited_Item->insert( 1, T_(\"Welcome to your b2evolution-powered website!\"),\n\t\t\tT_(\"<p>To get you started, the installer has automatically created several sample collections and populated them with some sample contents. Of course, this starter structure is all yours to edit. Until you do that, though, here's what you will find on this site:</p>\n\n<ul>\n<li><strong>Blog A</strong>: You are currently looking at it. It contains a few sample posts, using simple features of b2evolution.</li>\n<li><strong>Blog B</strong>: You can access it from the link at the top of the page. It contains information about more advanced features. Note that it is deliberately using a different skin from Blog A to give you an idea of what's possible.</li>\n<li><strong>Photos</strong>: This collection is an example of how you can use b2evolution to showcase photos, with photos grouped into photo albums.</li>\n<li><strong>Forums</strong>: This collection is a discussion forum (a.k.a. bulletin board) allowing your users to discuss among themselves.</li>\n<li><strong>Manual</strong>: This showcases how b2evolution can be used to publish structured content such as an online manual or book.</li>\n\n</ul>\n\n<p>You can add new collections of any type (blog, photos, forums, etc.), delete unwanted one and customize existing collections (title, sidebar, blog skin, widgets, etc.) from the admin interface.</p>\"), $now, $cat_forums_ann );\n\t\t$edit_File = new File( 'shared', 0, 'logos/b2evolution_1016x208_wbg.png' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t// Insert Markdown example post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $mary_moderator_ID, T_('Markdown examples'), $markdown_examples_content, $now, $cat_forums_news );\n\n\t\t// Update the progress bar status\n\t\tupdate_install_progress_bar();\n\n\t\ttask_end();\n\t}\n\n\tif( $install_collection_manual )\n\t{ // ---------------- Insert the POSTS for Manual collection ---------------- //\n\t\ttask_begin( 'Creating sample posts for Collection Manual... ' );\n\n\t\t// Set all posts of this collection with 24 hours ago relating on previous collection:\n\t\t$timeshift += 86400;\n\n\t\t// Insert a main intro:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_(\"Welcome here!\"), T_('This is the main introduction for this demo online manual. It is a post using the type \"Intro-Front\". It will only appear on the front page of the manual.\n\nYou may delete this post if you don\\'t want such an introduction.\n\nJust to be clear: this is a **demo** of a manual. The user manual for b2evolution is here: http://b2evolution.net/man/.'), $now, $cat_manual_intro,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Intro-Front' );\n\n\t\t// Insert a cat intro:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_(\"Chapter Intro\"), T_('This is an introduction for this chapter. It is a post using the \"intro-cat\" type.'), $now, $cat_manual_intro,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Intro-Cat' );\n\n\t\t// Insert a cat intro:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_(\"Chapter Intro\"), T_('This is an introduction for this chapter. It is a post using the \"intro-cat\" type.')\n\t\t\t.\"\\n\\n\".T_('Contrary to the other sections which are explictely sorted by default, this section is sorted alphabetically by default.'), $now, $cat_manual_reference,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Intro-Cat' );\n\n\t\t// Insert a PAGE:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $dave_blogger_ID, T_(\"About this manual\"), sprintf( $info_page, T_('Manual') ), $now, $cat_manual_intro,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Standalone Page' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('First Page'), T_('<p>This is the first page.</p>\n\n<p>It appears in a single category.</p>'), $now, $cat_manual_intro, array(),\n\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 10 );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Second Page'), T_('<p>This is the second page.</p>\n\n<p>It appears in multiple categories.</p>'), $now, $cat_manual_intro, array( $cat_manual_getstarted ),\n\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 20 );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Wiki Tables'), /* DO NOT TRANSLATE - TOO COMPLEX */ '<p>This is the topic with samples of the wiki tables.</p>\n\n{|\n|Orange\n|Apple\n|-\n|Bread\n|Pie\n|-\n|Butter\n|Ice cream\n|}\n\n{|\n|Orange||Apple||more\n|-\n|Bread||Pie||more\n|-\n|Butter||Ice<br />cream||and<br />more\n|}\n\n{|\n|Lorem ipsum dolor sit amet,\nconsetetur sadipscing elitr,\nsed diam nonumy eirmod tempor invidunt\nut labore et dolore magna aliquyam erat,\nsed diam voluptua.\n\nAt vero eos et accusam et justo duo dolores\net ea rebum. Stet clita kasd gubergren,\nno sea takimata sanctus est Lorem ipsum\ndolor sit amet.\n|\n* Lorem ipsum dolor sit amet\n* consetetur sadipscing elitr\n* sed diam nonumy eirmod tempor invidunt\n|}\n\n{|\n! align=\"left\"| Item\n! Amount\n! Cost\n|-\n|Orange\n|10\n|7.00\n|-\n|Bread\n|4\n|3.00\n|-\n|Butter\n|1\n|5.00\n|-\n!Total\n|\n|15.00\n|}\n\n<br />\n\n{|\n|+Food complements\n|-\n|Orange\n|Apple\n|-\n|Bread\n|Pie\n|-\n|Butter\n|Ice cream\n|}\n\n{| class=\"wikitable\"\n|+Food complements\n|-\n|Orange\n|Apple\n|-\n|Bread\n|Pie\n|-\n|Butter\n|Ice cream\n|}\n\n{| class=\"wikitable\" style=\"text-align: center; color: green;\"\n|Orange\n|Apple\n|12,333.00\n|-\n|Bread\n|Pie\n|500.00\n|-\n|Butter\n|Ice cream\n|1.00\n|}\n\n{| class=\"wikitable\"\n| Orange\n| Apple\n| align=\"right\"| 12,333.00\n|-\n| Bread\n| Pie\n| align=\"right\"| 500.00\n|-\n| Butter\n| Ice cream\n| align=\"right\"| 1.00\n|}\n\n{| class=\"wikitable\"\n| Orange || Apple     || align=\"right\" | 12,333.00\n|-\n| Bread  || Pie       || align=\"right\" | 500.00\n|-\n| Butter || Ice cream || align=\"right\" | 1.00\n|}\n\n{| class=\"wikitable\"\n| Orange\n| Apple\n| align=\"right\"| 12,333.00\n|-\n| Bread\n| Pie\n| align=\"right\"| 500.00\n|- style=\"font-style: italic; color: green;\"\n| Butter\n| Ice cream\n| align=\"right\"| 1.00\n|}\n\n{| style=\"border-collapse: separate; border-spacing: 0; border: 1px solid #000; padding: 0\"\n|-\n| style=\"border-style: solid; border-width: 0 1px 1px 0\"|\nOrange\n| style=\"border-style: solid; border-width: 0 0 1px 0\"|\nApple\n|-\n| style=\"border-style: solid; border-width: 0 1px 0 0\"|\nBread\n| style=\"border-style: solid; border-width: 0\"|\nPie\n|}\n\n{| style=\"border-collapse: collapse; border: 1px solid #000\"\n|-\n| style=\"border-style: solid; border-width: 1px\"|\nOrange\n| style=\"border-style: solid; border-width: 1px\"|\nApple\n|-\n| style=\"border-style: solid; border-width: 1px\"|\nBread\n| style=\"border-style: solid; border-width: 1px\"|\nPie\n|}\n\n{|style=\"border-style: solid; border-width: 20px\"\n|\nHello\n|}\n\n{|style=\"border-style: solid; border-width: 10px 20px 100px 0\"\n|\nHello\n|}\n\n{| class=\"wikitable\"\n!colspan=\"6\"|Shopping List\n|-\n|rowspan=\"2\"|Bread &amp; Butter\n|Pie\n|Buns\n|Danish\n|colspan=\"2\"|Croissant\n|-\n|Cheese\n|colspan=\"2\"|Ice cream\n|Butter\n|Yogurt\n|}\n\n{| class=\"wikitable\" style=\"color:green; background-color:#ffffcc;\" cellpadding=\"10\"\n|Orange\n|Apple\n|-\n|Bread\n|Pie\n|-\n|Butter\n|Ice cream\n|}\n\n{| class=\"wikitable\"\n|+ align=\"bottom\" style=\"color:#e76700;\"|\\'\\'Food complements\\'\\'\n|-\n|Orange\n|Apple\n|-\n|Bread\n|Pie\n|-\n|Butter\n|Ice cream\n|}\n\n{| style=\"color: black; background-color: #ffffcc;\" width=\"85%\"\n| colspan=\"2\" | This column width is 85% of the screen width (and has a background color)\n|-\n| style=\"width: 30%; background-color: white;\"|\n\\'\\'\\'This column is 30% counted from 85% of the screen width\\'\\'\\'\n| style=\"width: 70%; background-color: orange;\"|\n\\'\\'\\'This column is 70% counted from 85% of the screen width (and has a background color)\\'\\'\\'\n|}\n\n{| class=\"wikitable\"\n|-\n! scope=\"col\"| Item\n! scope=\"col\"| Quantity\n! scope=\"col\"| Price\n|-\n! scope=\"row\"| Bread\n| 0.3 kg\n| $0.65\n|-\n! scope=\"row\"| Butter\n| 0.125 kg\n| $1.25\n|-\n! scope=\"row\" colspan=\"2\"| Total\n| $1.90\n|}', $now, $cat_manual_reference, array( $cat_manual_userguide ),\n\t\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 50 );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Image topic'), T_('<p>This topic has an image attached to it. The image is automatically resized to fit the current blog skin. You can zoom in by clicking on the thumbnail.</p>\n\n<p>Check out the photoblog (accessible through the links at the top) to see a completely different skin focused more on the photos than on the blog text.</p>'), $now, $cat_manual_getstarted, array( $cat_manual_blogs ),\n\t\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 10 );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monuments.jpg' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('This is a multipage topic'), T_('<p>This is page 1 of a multipage topic.</p>\n\n<blockquote><p>This is a Block Quote.</p></blockquote>\n\n<p>You can see the other pages by clicking on the links below the text.</p>').'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 2 ).$lorem_2more.'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 3 ).$lorem_1paragraph.'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 4 ).'\n\n'.T_('<p>It is the last page.</p>'), $now, $cat_manual_userguide, array(),\n\t\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 30 );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Extended topic with no teaser'), T_('<p>This is an extended topic with no teaser. This means that you won\\'t see this teaser any more when you click the \"more\" link.</p>\n\n[teaserbreak]\n\n<p>This is the extended text. You only see it when you have clicked the \"more\" link.</p>'), $now, $cat_manual_userguide, array(),\n\t\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 20 );\n\t\t$edited_Item->set_setting( 'hide_teaser', '1' );\n\t\t$edited_Item->dbsave();\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Extended topic'), T_('<p>This is an extended topic. This means you only see this small teaser by default and you must click on the link below to see more.</p>\n\n[teaserbreak]\n\n<p>This is the extended text. You only see it when you have clicked the \"more\" link.</p>'), $now, $cat_manual_userguide, array(),\n\t\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 10 );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$additional_comments_item_IDs[] = $edited_Item->insert( $dave_blogger_ID, T_(\"Welcome to your b2evolution-powered website!\"),\n\t\t\tT_(\"<p>To get you started, the installer has automatically created several sample collections and populated them with some sample contents. Of course, this starter structure is all yours to edit. Until you do that, though, here's what you will find on this site:</p>\n\n<ul>\n<li><strong>Blog A</strong>: You are currently looking at it. It contains a few sample posts, using simple features of b2evolution.</li>\n<li><strong>Blog B</strong>: You can access it from the link at the top of the page. It contains information about more advanced features. Note that it is deliberately using a different skin from Blog A to give you an idea of what's possible.</li>\n<li><strong>Photos</strong>: This collection is an example of how you can use b2evolution to showcase photos, with photos grouped into photo albums.</li>\n<li><strong>Forums</strong>: This collection is a discussion forum (a.k.a. bulletin board) allowing your users to discuss among themselves.</li>\n<li><strong>Manual</strong>: This showcases how b2evolution can be used to publish structured content such as an online manual or book.</li>\n\n</ul>\n\n<p>You can add new collections of any type (blog, photos, forums, etc.), delete unwanted one and customize existing collections (title, sidebar, blog skin, widgets, etc.) from the admin interface.</p>\"), $now, $cat_manual_intro, array( $cat_manual_everyday ),\n\t\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 30 );\n\t\t$edit_File = new File( 'shared', 0, 'logos/b2evolution_1016x208_wbg.png' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Sports post'), T_('<p>This is the sports post.</p>\n\n<p>It appears in sports category.</p>'), $now, $cat_manual_blogs, array(),\n\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 15 );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Second sports post'), T_('<p>This is the second sports post.</p>\n\n<p>It appears in sports category.</p>'), $now, $cat_manual_blogs, array(),\n\t\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 5 );\n\n\t\t// Insert Markdown example post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Markdown examples'), $markdown_examples_content, $now, $cat_manual_userguide );\n\n\t\t// Update the progress bar status\n\t\tupdate_install_progress_bar();\n\n\t\ttask_end();\n\t}\n\n\n\n\ttask_begin( 'Creating sample comments... ' );\n\n\t// Create two demo comments for each new created item\n\t$new_created_item_IDs = $DB->get_col( 'SELECT post_ID FROM T_items__item ORDER BY post_ID' );\n\tforeach( $new_created_item_IDs as $new_created_item_ID )\n\t{\n\t\tcreate_demo_comment( $new_created_item_ID, 'published' );\n\t\tcreate_demo_comment( $new_created_item_ID, 'draft' );\n\t}\n\n\tif( $install_test_features && count( $additional_comments_item_IDs ) )\n\t{ // Create the additional comments when we install all features\n\t\tforeach( $additional_comments_item_IDs as $additional_comments_item_ID )\n\t\t{\n\t\t\t// Restrict comment status by parent item:\n\t\t\t$comment_status = 'published';\n\t\t\t$Comment = new Comment();\n\t\t\t$Comment->set( 'item_ID', $additional_comments_item_ID );\n\t\t\t$Comment->set( 'status', $comment_status );\n\t\t\t$Comment->restrict_status( true );\n\t\t\t$comment_status = $Comment->get( 'status' );\n\n\t\t\tfor( $i_user_ID = 1; $i_user_ID <= 7; $i_user_ID++ )\n\t\t\t{ // Insert the comments from each user\n\t\t\t\t$now = date( 'Y-m-d H:i:s' );\n\t\t\t\t$DB->query( 'INSERT INTO T_comments( comment_item_ID, comment_status, comment_author_user_ID, comment_author_IP,\n\t\t\t\t\t\tcomment_date, comment_last_touched_ts, comment_content, comment_renderers, comment_notif_status, comment_notif_flags )\n\t\t\t\t\tVALUES( '.$DB->quote( $additional_comments_item_ID ).', '.$DB->quote( $comment_status ).', '.$DB->quote( $i_user_ID ).', \"127.0.0.1\", '\n\t\t\t\t\t\t.$DB->quote( $now ).', '.$DB->quote( $now ).', '.$DB->quote( T_('Hi!\n\nThis is a sample comment that has been approved by default!\nAdmins and moderators can very quickly approve or reject comments from the collection dashboard.') ).', \"default\", \"finished\", \"moderators_notified,members_notified,community_notified\" )' );\n\t\t\t}\n\t\t}\n\t\techo_install_log( 'TEST FEATURE: Creating additional comments on items ('.implode( ', ', $additional_comments_item_IDs ).')' );\n\t}\n\n\ttask_end();\n\n\n\tif( $install_test_features )\n\t{\n\t\techo_install_log( 'TEST FEATURE: Creating fake hit statistics' );\n\t\ttask_begin( 'Creating fake hit statistics... ' );\n\t\tload_funcs('sessions/model/_hitlog.funcs.php');\n\t\tload_funcs('_core/_url.funcs.php');\n\t\t$insert_data_count = generate_hit_stat(10, 0, 5000);\n\t\techo sprintf( '%d test hits are added.', $insert_data_count );\n\t\ttask_end();\n\t}\n\n\t/*\n\t// Note: we don't really need this any longer, but we might use it for a better default setup later...\n\techo 'Creating default user/blog permissions... ';\n\t// Admin for blog A:\n\t$query = \"INSERT INTO T_coll_user_perms( bloguser_blog_ID, bloguser_user_ID, bloguser_ismember,\n\t\t\t\t\t\t\tbloguser_perm_poststatuses, bloguser_perm_delpost, bloguser_perm_comments,\n\t\t\t\t\t\t\tbloguser_perm_meta_comment, bloguser_perm_cats, bloguser_perm_properties,\n\t\t\t\t\t\t\tbloguser_perm_media_upload, bloguser_perm_media_browse, bloguser_perm_media_change )\n\t\t\t\t\t\tVALUES\n\t\t\t\t\t\t\t( $blog_a_ID, \".$User_Demo->ID.\", 1,\n\t\t\t\t\t\t\t'published,deprecated,protected,private,draft', 1, 1, 1, 0, 0, 1, 1, 1 )\";\n\t$DB->query( $query );\n\techo \"OK.<br />\\n\";\n\t*/\n\n\t// Allow all modules to create their own demo contents:\n\tmodules_call_method( 'create_demo_contents' );\n\n\t// Set default locations for each post in test mode installation\n\tcreate_default_posts_location();\n\n\tinstall_basic_widgets( $new_db_version );\n\n\tload_funcs( 'tools/model/_system.funcs.php' );\n\tsystem_init_caches( true, true ); // Outputs messages\n}\n\n\n/**\n * Create a demo comment\n *\n * @param integer Item ID\n * @param string Comment status\n */\nfunction create_demo_comment( $item_ID, $status )\n{\n\tglobal $DB, $b2evo_demo_comment_users, $b2evo_demo_comment_user_num;\n\n\t// Get next user ID for new creating comment\n\tif( ! isset( $b2evo_demo_comment_user_num ) )\n\t{\n\t\t$b2evo_demo_comment_user_num = 0;\n\t}\n\telse\n\t{\n\t\t$b2evo_demo_comment_user_num++;\n\t\tif( $b2evo_demo_comment_user_num > count( $b2evo_demo_comment_users ) - 1 )\n\t\t{\n\t\t\t$b2evo_demo_comment_user_num = 0;\n\t\t}\n\t}\n\t$user_ID = $b2evo_demo_comment_users[ $b2evo_demo_comment_user_num ];\n\tif( $user_ID > 0 )\n\t{ // An existing user\n\t\t$author = NULL;\n\t\t$author_email = NULL;\n\t\t$author_email_url = NULL;\n\t}\n\telse\n\t{ // Anonymous user\n\t\t$user_ID = NULL;\n\t\t$author = 'miss b2';\n\t\t$author_email = 'missb2@example.com';\n\t\t$author_email_url = 'http://example.com';\n\t}\n\n\t// Restrict comment status by parent item:\n\t$Comment = new Comment();\n\t$Comment->set( 'item_ID', $item_ID );\n\t$Comment->set( 'status', $status );\n\t$Comment->restrict_status( true );\n\t$status = $Comment->get( 'status' );\n\n\t// Set demo content depending on status\n\tif( $status == 'published' )\n\t{\n\t\t$content = T_('Hi!\n\nThis is a sample comment that has been approved by default!\nAdmins and moderators can very quickly approve or reject comments from the collection dashboard.');\n\t}\n\telse\n\t{ // draft\n\t\t$content = T_('Hi!\n\nThis is a sample comment that has **not** been approved by default!\nAdmins and moderators can very quickly approve or reject comments from the collection dashboard.');\n\t}\n\n\t$now = date( 'Y-m-d H:i:s' );\n\n\t$DB->query( 'INSERT INTO T_comments( comment_item_ID, comment_status,\n\t\t\tcomment_author_user_ID, comment_author, comment_author_email, comment_author_url, comment_author_IP,\n\t\t\tcomment_date, comment_last_touched_ts, comment_content, comment_renderers, comment_notif_status, comment_notif_flags )\n\t\tVALUES( '.$DB->quote( $item_ID ).', '.$DB->quote( $status ).', '\n\t\t\t.$DB->quote( $user_ID ).', '.$DB->quote( $author ).', '.$DB->quote( $author_email ).', '.$DB->quote( $author_email_url ).', \"127.0.0.1\", '\n\t\t\t.$DB->quote( $now ).', '.$DB->quote( $now ).', '.$DB->quote( $content ).', \"default\", \"finished\", \"moderators_notified,members_notified,community_notified\" )' );\n}\n\n\n/**\n * Create default location for all posts\n */\nfunction create_default_posts_location()\n{\n\tglobal $install_test_features;\n\n\tif( $install_test_features )\n\t{\t// Set default location in test mode installation\n\t\tglobal $DB;\n\n\t\t$DB->query( 'UPDATE T_items__item SET\n\t\t\tpost_ctry_ID = '.$DB->quote( '74'/* France */ ).',\n\t\t\tpost_rgn_ID = '.$DB->quote( '60'/* \u00cele-de-France */ ).',\n\t\t\tpost_subrg_ID = '.$DB->quote( '76'/* Paris */ ) );\n\n\t\techo_install_log( 'TEST FEATURE: Defining default location \"France, \u00cele-de-France, Paris\" for all posts' );\n\t}\n}\n\n\n/**\n * Create default email campaigns\n */\nfunction create_default_email_campaigns()\n{\n\tglobal $DB, $create_sample_contents;\n\n\ttask_begin( 'Creating default email campaigns... ' );\n\n\tload_class( 'email_campaigns/model/_emailcampaign.class.php', 'EmailCampaign' );\n\tload_funcs( 'email_campaigns/model/_emailcampaign.funcs.php' );\n\n\tif( $create_sample_contents )\n\t{\n\t\t$EmailCampaign = new EmailCampaign();\n\t\t$EmailCampaign->set( 'name', T_('Markdown Example') );\n\t\t$EmailCampaign->set( 'email_title', T_('Markdown Example') );\n\t\t$EmailCampaign->set( 'email_text', T_('Heading\n=======\n\nSub-heading\n-----------\n\n### H3 header\n\n#### H4 header ####\n\n> Email-style angle brackets\n> are used for blockquotes.\n\n> > And, they can be nested.\n\n> ##### Headers in blockquotes\n>\n> * You can quote a list.\n> * Etc.\n\n[This is a link](http://b2evolution.net/) if Links are turned on in the markdown plugin settings\n\nParagraphs are separated by a blank line.\n\n    This is a preformatted\n    code block.\n\nText attributes *Italic*, **bold**, `monospace`.\n\nShopping list:\n\n* apples\n* oranges\n* pears\n\nThe rain---not the reign---in Spain.') );\n\n\t\tif( $EmailCampaign->dbinsert() )\n\t\t{\t// Add recipients after successfull email campaign creating:\n\t\t\t$user_IDs = $DB->get_col( 'SELECT user_ID FROM T_users' );\n\t\t\tif( ! empty( $user_IDs ) )\n\t\t\t{\t// Only if we have found the users in DB\n\t\t\t\t$EmailCampaign->add_users( $user_IDs );\n\t\t\t}\n\t\t}\n\t}\n\n\ttask_end();\n}\n?>", "<?php\n/**\n * This file implements upgrading of DB tables\n *\n * b2evolution - {@link http://b2evolution.net/}\n * Released under GNU GPL License - {@link http://b2evolution.net/about/gnu-gpl-license}\n * @copyright (c)2003-2016 by Francois Planque - {@link http://fplanque.com/}\n *\n * @package install\n */\nif( !defined('EVO_MAIN_INIT') ) die( 'Please, do not access this page directly.' );\n\nload_funcs('_core/_param.funcs.php');\n\n\n/**\n * Create a DB version checkpoint\n *\n * This is useful when the next operation might timeout or fail!\n * The checkpoint will allow to restart the script and continue where it stopped\n *\n * @param string version of DB at checkpoint\n */\nfunction set_upgrade_checkpoint( $version )\n{\n\tglobal $DB, $script_start_time, $locale, $action;\n\n\tglobal $recreate_autogenerated_excerpts;\n\n\techo get_install_format_text( '<span class=\"text-muted\">Creating DB schema version checkpoint at '.$version.'... ' );\n\n\tif( $version < 8060 )\n\t{\n\t\t$query = 'UPDATE T_settings SET db_version = '.$version;\n\t}\n\telse\n\t{\n\t\t$query = \"UPDATE T_settings\n\t\t\t\t\t\t\t\tSET set_value = '$version'\n\t\t\t\t\t\t\t\tWHERE set_name = 'db_version'\";\n\t}\n\t$DB->query( $query );\n\n\n\t$elapsed_time = time() - $script_start_time;\n\n\techo get_install_format_text( \"OK. (Elapsed upgrade time: $elapsed_time seconds)</span><br />\\n\", 'br' );\n\n\t// Update the progress bar status\n\tupdate_install_progress_bar();\n\n\tevo_flush();\n\n\t$max_exe_time = ini_get( 'max_execution_time' );\n\tif( $max_exe_time && ( $elapsed_time > ( $max_exe_time - 20 ) ) )\n\t{ // Max exe time not disabled and we're recahing the end\n\t\t$upgrade_action = ( ( $action == 'svn_upgrade' ) || ( $action == 'auto_upgrade' ) ) ? $action : 'evoupgrade';\n\t\t$recreate_excerpts = $recreate_autogenerated_excerpts ? '&amp;recreate_excerpts=1' : '';\n\t\techo get_install_format_text( 'We are reaching the time limit for this script. Please click <a href=\"index.php?locale='.$locale.'&amp;action='.$upgrade_action.$recreate_excerpts.'\">continue</a>...' );\n\t\t// Dirty temporary solution:\n\t\texit(0);\n\t}\n}\n\n\n/**\n * Start upgrade task\n *\n * @param integer Version of DB at checkpoint\n * @param string Task title\n * @return boolean TRUE if task has been started\n */\nfunction upg_task_start( $version, $title = '' )\n{\n\tglobal $old_db_version, $upgrade_db_version;\n\n\tif( $old_db_version < $version )\n\t{\t// Only if current DB version is older than current requested\n\n\t\t// Set upgrade version to use this in function upg_task_end():\n\t\t$upgrade_db_version = $version;\n\n\t\tif( ! empty( $title ) )\n\t\t{\t// Start task (Display a title):\n\t\t\ttask_begin( $title );\n\t\t}\n\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\n\n\n/**\n * End upgrade task\n *\n * @param boolean TRUE to print out a result of task ending\n */\nfunction upg_task_end( $print_result = true )\n{\n\tglobal $upgrade_db_version;\n\n\tif( ! empty( $upgrade_db_version ) )\n\t{\t// Only if the upgrade task is not ended yet:\n\n\t\tif( $print_result )\n\t\t{\t// Print out the end of task:\n\t\t\ttask_end();\n\t\t}\n\n\t\t// Create a DB version checkpoint:\n\t\tset_upgrade_checkpoint( $upgrade_db_version );\n\n\t\t// Unset the current version because task is ended:\n\t\tunset( $upgrade_db_version );\n\t}\n}\n\n\n/**\n * Create DB table\n *\n * @param string Table name\n * @param string Fields\n * @param string Options\n */\nfunction db_create_table( $table, $fields, $options = 'ENGINE = innodb' )\n{\n\tglobal $DB, $db_config;\n\n\tif( isset( $db_config, $db_config['aliases'], $db_config['aliases'][ $table ] ) )\n\t{\t// Use table name with real prefix instead of T_:\n\t\t$table = $db_config['aliases'][ $table ];\n\t}\n\n\t// Check if the creating table doesn't exist in DB:\n\t$unique_table = $table;\n\t$next_table_index = 1;\n\twhile( $DB->get_var( 'SHOW TABLES LIKE '.$DB->quote( $unique_table ) ) )\n\t{\t// This table already exists in DB, try to find what next table name is free:\n\t\t$unique_table = $table.'_'.$next_table_index;\n\t\t$next_table_index++;\n\t}\n\tif( $unique_table != $table )\n\t{\t// Backup the existing table, in order to create the requeired table without error:\n\t\t$DB->query( 'RENAME TABLE '.$table.' TO '.$unique_table );\n\t}\n\n\t// Create new table with requested table:\n\t$DB->query( 'CREATE TABLE '.$table.' ( '.$fields.' ) '.$options );\n}\n\n\n/**\n * @return boolean Does a given index key name exist in DB?\n */\nfunction db_index_exists( $table, $index_name )\n{\n\tglobal $DB;\n\n\t$index_name = strtolower($index_name);\n\n\t$DB->query('SHOW INDEX FROM '.$table);\n\twhile( $row = $DB->get_row() )\n\t{\n\t\tif( strtolower($row->Key_name) == $index_name )\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n\n/**\n * @param string Table name\n * @param array Column names\n * @return boolean Does a list of given column names exist in DB?\n */\nfunction db_cols_exist( $table, $col_names )\n{\n\tglobal $DB;\n\n\tforeach( $col_names as $k => $v )\n\t\t$col_names[$k] = strtolower($v);\n\n\tforeach( $DB->get_results('SHOW COLUMNS FROM '.$table) as $row )\n\t\tif( ($key = array_search(strtolower($row->Field), $col_names)) !== false )\n\t\t\tunset( $col_names[$key] );\n\n\treturn count($col_names) == 0;\n}\n\n/**\n * Drops a column, if it exists.\n */\nfunction db_drop_col( $table, $col_name )\n{\n\tglobal $DB;\n\n\tif( ! db_col_exists($table, $col_name) )\n\t\treturn false;\n\n\t$DB->query( 'ALTER TABLE '.$table.' DROP COLUMN '.$col_name );\n}\n\n/**\n * Add a column, if it does not already exist.\n * If it exists already, a \"ALTER TABLE\" statement will get executed instead.\n *\n * @return boolean True if the column has been added, False if not.\n */\nfunction db_add_col( $table, $col_name, $col_desc )\n{\n\tglobal $DB;\n\n\tif( db_col_exists($table, $col_name) )\n\t{ // Column exists already, make sure it's the same.\n\t\t$DB->query( 'ALTER TABLE '.$table.' MODIFY COLUMN '.$col_name.' '.$col_desc );\n\t\treturn false;\n\t}\n\n\t$DB->query( 'ALTER TABLE '.$table.' ADD COLUMN '.$col_name.' '.$col_desc );\n}\n\n\n/**\n * Add an INDEX. If another index with the same name already exists, it will\n * get dropped before.\n */\nfunction db_add_index( $table, $name, $def, $type = 'INDEX' )\n{\n\tglobal $DB;\n\tif( db_index_exists($table, $name) )\n\t{\n\t\t$DB->query( 'ALTER TABLE '.$table.' DROP INDEX '.$name );\n\t}\n\t$DB->query( 'ALTER TABLE '.$table.' ADD '.$type.' '.$name.' ('.$def.')' );\n}\n\n\n/**\n * Check if a key item value already exists on database\n */\nfunction db_key_exists( $table, $field_name, $field_value )\n{\n\tglobal $DB;\n\treturn $DB->get_var( '\n\t\tSELECT COUNT('.$field_name.')\n\t\tFROM '.$table.'\n\t\tWHERE '.$field_name.' = '.$field_value );\n}\n\n/**\n * Add a Foreign Key constraint.\n * If another foreign key exists between these two fields then the old FK will be deleted and a new will be created.\n * If the table engine is not InnoDB, then it will be changed automatically.\n * If the FK table contains data which would prevent foreign key creation then these records will be deleted.\n *\n * @param string foreign key table\n * @param string foreing key column name\n * @param string foreign key refrence table name\n * @param string reference column name in the reference table\n * @param string foreign key definition ( e.g. \"ON DELETE CASCADE\" or \"ON UPDATE RESTRICT\" )\n */\nfunction db_add_foreign_key( $table, $field_name, $reference_table, $reference_field_name, $definition )\n{\n\tglobal $DB;\n\t$table = preg_replace( $DB->dbaliases, $DB->dbreplaces, $table );\n\t$reference_table = preg_replace( $DB->dbaliases, $DB->dbreplaces, $reference_table );\n\t$foreign_key_fields = array( array(\n\t\t\t'fk_fields' => $field_name,\n\t\t\t'reference_table' => $reference_table,\n\t\t\t'reference_columns' => $reference_field_name,\n\t\t\t'fk_definition' => $definition,\n\t\t\t'create' => true, // This FK should be created if not exists\n\t\t) );\n\tdb_delta_foreign_keys( $foreign_key_fields, $table, true, 'add' );\n}\n\n/**\n * Drop a Foreign Key constraint.\n * If this foreign key not exists the function won't give error.\n *\n * @param string foreign key table\n * @param string foreing key column name\n * @param string foreign key refrence table name\n * @param string reference column name in the reference table\n */\nfunction db_drop_foreign_key( $table, $field_name, $reference_table, $reference_field_name )\n{\n\tglobal $DB;\n\t$table = preg_replace( $DB->dbaliases, $DB->dbreplaces, $table );\n\t$reference_table = preg_replace( $DB->dbaliases, $DB->dbreplaces, $reference_table );\n\t$foreign_key_fields = array( array(\n\t\t\t'fk_fields' => $field_name,\n\t\t\t'reference_table' => $reference_table,\n\t\t\t'reference_columns' => $reference_field_name,\n\t\t\t'fk_definition' => '',\n\t\t\t'create' => false, // This FK shouldn't be created if not exists\n\t\t) );\n\tdb_delta_foreign_keys( $foreign_key_fields, $table, true, 'drop' );\n}\n\n/**\n * Converts languages in a given table into according locales\n *\n * @param string name of the table\n * @param string name of the column where lang is stored\n * @param string name of the table's ID column\n */\nfunction convert_lang_to_locale( $table, $columnlang, $columnID )\n{\n\tglobal $DB, $locales, $default_locale;\n\n\tif( !preg_match('/[a-z]{2}-[A-Z]{2}(-.{1,14})?/', $default_locale) )\n\t{ // we want a valid locale\n\t\t$default_locale = 'en-EU';\n\t}\n\n\techo get_install_format_text( 'Converting langs to locales for '. $table. '...<br />', 'br' );\n\n\t// query given languages in $table\n\t$query = \"SELECT $columnID, $columnlang FROM $table\";\n\t$languagestoconvert = array();\n\tforeach( $DB->get_results( $query, ARRAY_A ) as $row )\n\t{\n\t\t// remember the ID for that locale\n\t\t$languagestoconvert[ $row[ $columnlang ] ][] = $row[ $columnID ];\n\t}\n\n\tforeach( $languagestoconvert as $lkey => $lIDs)\n\t{ // converting the languages we've found\n\t\t$converted = false;\n\t\techo get_install_format_text( '&nbsp; Converting lang \\''. $lkey. '\\' ' ); // (with IDs: '. implode( ', ', $lIDs ). ').. ';\n\n\t\tif( preg_match('/[a-z]{2}-[A-Z]{2}(-.{1,14})?/', $lkey) )\n\t\t{ // Already valid\n\t\t\techo get_install_format_text( 'nothing to update, already valid!<br />', 'br' );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( (strlen($lkey) == 2) && ( substr( $default_locale, 0, 2 ) != $lkey ) )\n\t\t{ // we have an old two letter lang code to convert\n\t\t\t// and it doesn't match the default locale\n\t\t\tforeach( $locales as $newlkey => $v )\n\t\t\t{  // loop given locales\n\t\t\t\tif( substr($newlkey, 0, 2) == strtolower($lkey) ) # TODO: check if valid/suitable\n\t\t\t\t{  // if language matches, update\n\t\t\t\t\t$converted = $DB->query( \"\n\t\t\t\t\t\tUPDATE $table\n\t\t\t\t\t\t   SET $columnlang = '$newlkey'\n\t\t\t\t\t\t WHERE $columnlang = '$lkey'\" );\n\t\t\t\t\techo get_install_format_text( 'to locale \\''. $newlkey. '\\'<br />', 'br' );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !$converted )\n\t\t{ // we have nothing converted yet, setting default:\n\t\t\t$DB->query( \"UPDATE $table\n\t\t\t\t\t\t\t\t\t\t\tSET $columnlang = '$default_locale'\n\t\t\t\t\t\t\t\t\t\tWHERE $columnlang = '$lkey'\" );\n\t\t\techo get_install_format_text( 'forced to default locale \\''. $default_locale. '\\'<br />', 'br' );\n\t\t}\n\t}\n\techo \"\\n\";\n}  // convert_lang_to_locale(-)\n\n\n/**\n * upgrade_b2evo_tables(-)\n *\n * @param string the action param value corresponding the current upgrade process ( evoupgrade, svn_upgrade, auto_upgrade )\n */\nfunction upgrade_b2evo_tables( $upgrade_action = 'evoupgrade' )\n{\n\tglobal $db_config, $tableprefix;\n\tglobal $baseurl, $old_db_version, $new_db_version;\n\tglobal $Group_Admins, $Group_Privileged, $Group_Bloggers, $Group_Users;\n\tglobal $locales, $locale;\n\tglobal $DB;\n\tglobal $admin_url;\n\tglobal $Settings, $Plugins;\n\n\t// used for defaults, when upgrading to 1.6\n\tglobal $use_fileupload, $fileupload_allowedtypes, $fileupload_maxk, $doubleCheckReferers;\n\n\t// new DB-delta functionality\n\tglobal $schema_queries, $inc_path;\n\n\t// used to check script time before starting to create db delta\n\tglobal $script_start_time;\n\n\t// Create an option which can be turned on if we need to regenerate the autogenerated excerpts in the end of the upgrade script\n\tglobal $recreate_autogenerated_excerpts;\n\t$recreate_autogenerated_excerpts = param( 'recreate_excerpts', 'boolean', 0 );\n\n\t// Load DB schema from modules\n\tload_db_schema();\n\n\t// Update the progress bar status\n\tupdate_install_progress_bar();\n\n\tload_funcs('_core/model/db/_upgrade.funcs.php');\n\n\t// Force MySQL strict mode:\n\t$DB->query( 'SET sql_mode = \"\"', 'REMOVE MySQL \"strict\" mode in order not to worry about missing defaults until the end of the upgrade.' );\n\n\techo get_install_format_text( '<p>'.T_('Checking DB schema version...').' ', 'p-start' );\n\t$old_db_version = get_db_version();\n\n\tif( empty($old_db_version) )\n\t{\n\t\techo get_install_format_text( '<p><strong>OOPS! b2evolution doesn\\'t seem to be installed yet.</strong></p>', 'p' );\n\t\treturn false;\n\t}\n\n\techo $old_db_version, ' : ';\n\n\tif( $old_db_version < 8000 ) debug_die( T_('This version is too old!') );\n\tif( $old_db_version > $new_db_version ) debug_die( T_('This version is too recent! We cannot downgrade to the version you are trying to install...') );\n\techo get_install_format_text( \"OK.<br />\\n\", 'br' );\n\n\tif( $old_db_version < 8010 )\n\t{\n\t\techo 'Upgrading users table... ';\n\t\t$query = \"ALTER TABLE T_users\n\t\t\t\t\t\t\tMODIFY COLUMN user_pass CHAR(32) NOT NULL\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading blogs table... ';\n\t\t$query = \"ALTER TABLE T_blogs\n\t\t\t\t\t\t\tMODIFY COLUMN blog_lang VARCHAR(20) NOT NULL DEFAULT 'en_US',\n\t\t\t\t\t\t\tMODIFY COLUMN blog_longdesc TEXT NULL DEFAULT NULL\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading categories table... ';\n\t\t$query = \"ALTER TABLE T_categories\n\t\t\t\t\t\t\tADD COLUMN cat_description VARCHAR(250) NULL DEFAULT NULL,\n\t\t\t\t\t\t\tADD COLUMN cat_longdesc TEXT NULL DEFAULT NULL,\n\t\t\t\t\t\t\tADD COLUMN cat_icon VARCHAR(30) NULL DEFAULT NULL\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading posts table... ';\n\t\t$query = \"ALTER TABLE {$tableprefix}posts\n\t\t\t\t\t\t\tMODIFY COLUMN post_lang VARCHAR(20) NOT NULL DEFAULT 'en_US',\n\t\t\t\t\t\t\tADD COLUMN post_urltitle VARCHAR(50) NULL DEFAULT NULL AFTER post_title,\n\t\t\t\t\t\t\tADD COLUMN post_url VARCHAR(250) NULL DEFAULT NULL AFTER post_urltitle,\n\t\t\t\t\t\t\tADD COLUMN post_comments ENUM('disabled', 'open', 'closed') NOT NULL DEFAULT 'open' AFTER post_wordcount\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Generating wordcounts... ';\n\t\tload_funcs('items/model/_item.funcs.php');\n\t\t$query = \"SELECT ID, post_content FROM {$tableprefix}posts WHERE post_wordcount IS NULL\";\n\t\t$i = 0;\n\t\tforeach( $DB->get_results( $query, ARRAY_A ) as $row )\n\t\t{\n\t\t\t$query_update_wordcount = \"UPDATE {$tableprefix}posts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSET post_wordcount = \" . bpost_count_words($row['post_content']) . \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHERE ID = \" . $row['ID'];\n\t\t\t$DB->query($query_update_wordcount);\n\t\t\t$i++;\n\t\t}\n\t\techo \"OK. ($i rows updated)<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8010' );\n\t}\n\n\n\tif( $old_db_version < 8020 )\n\t{\n\t\techo 'Encoding passwords... ';\n\t\t$query = \"UPDATE T_users\n\t\t\t\t\t\t\tSET user_pass = MD5(user_pass)\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8020' );\n\t}\n\n\n\tif( $old_db_version < 8030 )\n\t{\n\t\techo 'Deleting unecessary logs... ';\n\t\t$query = \"DELETE FROM T_hitlog\n\t\t\t\t\t\t\tWHERE hit_ignore = 'badchar'\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Updating blog urls... ';\n\t\t$query = \"SELECT blog_ID, blog_siteurl FROM T_blogs\";\n\t\t$i = 0;\n\t\tforeach( $DB->get_results( $query, ARRAY_A ) as $row )\n\t\t{\n\t\t\t$blog_ID = $row['blog_ID'];\n\t\t\t$blog_siteurl = $row['blog_siteurl'];\n\t\t\t// echo $blog_ID.':'.$blog_siteurl;\n\t\t\tif( strpos( $blog_siteurl.'/', $baseurl ) !== 0 )\n\t\t\t{ // If not found at position 0\n\t\t\t\techo ' <strong>WARNING: please check blog #', $blog_ID, ' manually.</strong><br /> ';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// crop off the baseurl:\n\t\t\t$blog_siteurl = utf8_substr( $blog_siteurl.'/', utf8_strlen($baseurl) );\n\t\t\t// echo ' -> ', $blog_siteurl,'<br />';\n\n\t\t\t$query_update_blog = \"UPDATE T_blogs SET blog_siteurl = '$blog_siteurl' WHERE blog_ID = $blog_ID\";\n\t\t\t// echo $query_update_blog, '<br />';\n\t\t\t$DB->query( $query_update_blog );\n\t\t\t$i++;\n\t\t}\n\t\techo \"OK. ($i rows updated)<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8030' );\n\t}\n\n\n\tif( $old_db_version < 8040 )\n\t{ // upgrade to 0.8.7\n\t\techo 'Creating table for Antispam Blackist... ';\n\t\t$query = \"CREATE TABLE {$tableprefix}antispam (\n\t\t\taspm_ID bigint(11) NOT NULL auto_increment,\n\t\t\taspm_string varchar(80) NOT NULL,\n\t\t\taspm_source enum( 'local','reported','central' ) NOT NULL default 'reported',\n\t\t\tPRIMARY KEY aspm_ID (aspm_ID),\n\t\t\tUNIQUE aspm_string (aspm_string)\n\t\t)\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Creating default blacklist entries... ';\n\t\t// This string contains antispam information that is obfuscated because some hosting\n\t\t// companies prevent uploading PHP files containing \"spam\" strings.\n\t\t// pre_dump(get_antispam_query());\n\t\t$query = get_antispam_query();\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading Settings table... ';\n\t\t$query = \"ALTER TABLE T_settings\n\t\t\t\t\t\t\tADD COLUMN last_antispam_update datetime NOT NULL default '2000-01-01 00:00:00'\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8040' );\n\t}\n\n\n\tif( $old_db_version < 8050 )\n\t{ // upgrade to 0.8.9\n\t\techo 'Upgrading blogs table... ';\n\t\t$query = \"ALTER TABLE T_blogs\n\t\t\t\t\t\t\tADD COLUMN blog_allowtrackbacks tinyint(1) NOT NULL default 1,\n\t\t\t\t\t\t\tADD COLUMN blog_allowpingbacks tinyint(1) NOT NULL default 0,\n\t\t\t\t\t\t\tADD COLUMN blog_pingb2evonet tinyint(1) NOT NULL default 0,\n\t\t\t\t\t\t\tADD COLUMN blog_pingtechnorati tinyint(1) NOT NULL default 0,\n\t\t\t\t\t\t\tADD COLUMN blog_pingweblogs tinyint(1) NOT NULL default 0,\n\t\t\t\t\t\t\tADD COLUMN blog_pingblodotgs tinyint(1) NOT NULL default 0,\n\t\t\t\t\t\t\tADD COLUMN blog_disp_bloglist tinyint NOT NULL DEFAULT 1\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\t// Create User Groups\n\t\tglobal $Group_Admins, $Group_Privileged, $Group_Bloggers, $Group_Users;\n\t\techo 'Creating table for Groups... ';\n\t\t$query = \"CREATE TABLE T_groups (\n\t\t\tgrp_ID int(11) NOT NULL auto_increment,\n\t\t\tgrp_name varchar(50) NOT NULL default '',\n\t\t\tgrp_perm_admin enum('none','hidden','visible') NOT NULL default 'visible',\n\t\t\tgrp_perm_blogs enum('user','viewall','editall') NOT NULL default 'user',\n\t\t\tgrp_perm_stats enum('none','view','edit') NOT NULL default 'none',\n\t\t\tgrp_perm_spamblacklist enum('none','view','edit') NOT NULL default 'none',\n\t\t\tgrp_perm_options enum('none','view','edit') NOT NULL default 'none',\n\t\t\tgrp_perm_users enum('none','view','edit') NOT NULL default 'none',\n\t\t\tgrp_perm_templates TINYINT NOT NULL DEFAULT 0,\n\t\t\tgrp_perm_files enum('none','view','add','edit','all') NOT NULL default 'none',\n\t\t\tPRIMARY KEY grp_ID (grp_ID)\n\t\t)\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\t// This table needs to be created here for proper group insertion\n\t\ttask_begin( 'Creating table for Group Settings... ' );\n\t\t$DB->query( \"CREATE TABLE T_groups__groupsettings (\n\t\t\tgset_grp_ID INT(11) UNSIGNED NOT NULL,\n\t\t\tgset_name VARCHAR(30) NOT NULL,\n\t\t\tgset_value VARCHAR(255) NULL,\n\t\t\tPRIMARY KEY (gset_grp_ID, gset_name)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\techo 'Creating default groups... ';\n\t\t$Group_Admins = new Group(); // COPY !\n\t\t$Group_Admins->set( 'name', 'Administrators' );\n\t\t$Group_Admins->set( 'perm_admin', 'visible' );\n\t\t$Group_Admins->set( 'perm_blogs', 'editall' );\n\t\t$Group_Admins->set( 'perm_stats', 'edit' );\n\t\t$Group_Admins->set( 'perm_spamblacklist', 'edit' );\n\t\t$Group_Admins->set( 'perm_files', 'all' );\n\t\t$Group_Admins->set( 'perm_options', 'edit' );\n\t\t$Group_Admins->set( 'perm_templates', 1 );\n\t\t$Group_Admins->set( 'perm_users', 'edit' );\n\t\t$Group_Admins->dbinsert();\n\n\t\t$Group_Privileged = new Group(); // COPY !\n\t\t$Group_Privileged->set( 'name', 'Privileged Bloggers' );\n\t\t$Group_Privileged->set( 'perm_admin', 'visible' );\n\t\t$Group_Privileged->set( 'perm_blogs', 'viewall' );\n\t\t$Group_Privileged->set( 'perm_stats', 'view' );\n\t\t$Group_Privileged->set( 'perm_spamblacklist', 'edit' );\n\t\t$Group_Privileged->set( 'perm_files', 'add' );\n\t\t$Group_Privileged->set( 'perm_options', 'view' );\n\t\t$Group_Privileged->set( 'perm_templates', 0 );\n\t\t$Group_Privileged->set( 'perm_users', 'view' );\n\t\t$Group_Privileged->dbinsert();\n\n\t\t$Group_Bloggers = new Group(); // COPY !\n\t\t$Group_Bloggers->set( 'name', 'Bloggers' );\n\t\t$Group_Bloggers->set( 'perm_admin', 'visible' );\n\t\t$Group_Bloggers->set( 'perm_blogs', 'user' );\n\t\t$Group_Bloggers->set( 'perm_stats', 'none' );\n\t\t$Group_Bloggers->set( 'perm_spamblacklist', 'view' );\n\t\t$Group_Bloggers->set( 'perm_files', 'view' );\n\t\t$Group_Bloggers->set( 'perm_options', 'none' );\n\t\t$Group_Bloggers->set( 'perm_templates', 0 );\n\t\t$Group_Bloggers->set( 'perm_users', 'none' );\n\t\t$Group_Bloggers->dbinsert();\n\n\t\t$Group_Users = new Group(); // COPY !\n\t\t$Group_Users->set( 'name', 'Basic Users' );\n\t\t$Group_Users->set( 'perm_admin', 'none' );\n\t\t$Group_Users->set( 'perm_blogs', 'user' );\n\t\t$Group_Users->set( 'perm_stats', 'none' );\n\t\t$Group_Users->set( 'perm_spamblacklist', 'none' );\n\t\t$Group_Users->set( 'perm_files', 'none' );\n\t\t$Group_Users->set( 'perm_options', 'none' );\n\t\t$Group_Users->set( 'perm_templates', 0 );\n\t\t$Group_Users->set( 'perm_users', 'none' );\n\t\t$Group_Users->dbinsert();\n\t\techo \"OK.<br />\\n\";\n\n\n\t\techo 'Creating table for Blog-User permissions... ';\n\t\t$query = \"CREATE TABLE T_coll_user_perms (\n\t\t\tbloguser_blog_ID int(11) unsigned NOT NULL default 0,\n\t\t\tbloguser_user_ID int(11) unsigned NOT NULL default 0,\n\t\t\tbloguser_ismember tinyint NOT NULL default 0,\n\t\t\tbloguser_perm_poststatuses set('published','deprecated','protected','private','draft') NOT NULL default '',\n\t\t\tbloguser_perm_delpost tinyint NOT NULL default 0,\n\t\t\tbloguser_perm_comments tinyint NOT NULL default 0,\n\t\t\tbloguser_perm_cats tinyint NOT NULL default 0,\n\t\t\tbloguser_perm_properties tinyint NOT NULL default 0,\n\t\t\tbloguser_perm_media_upload tinyint NOT NULL default 0,\n\t\t\tbloguser_perm_media_browse tinyint NOT NULL default 0,\n\t\t\tbloguser_perm_media_change tinyint NOT NULL default 0,\n\t\t\tPRIMARY KEY bloguser_pk (bloguser_blog_ID,bloguser_user_ID)\n\t\t)\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\t\t$tablegroups_isuptodate = true;\n\t\t$tableblogusers_isuptodate = true;\n\n\t\techo 'Creating user blog permissions... ';\n\t\t// Admin: full rights for all blogs (look 'ma, doing a natural join! :>)\n\t\t$query = \"INSERT INTO T_coll_user_perms( bloguser_blog_ID, bloguser_user_ID, bloguser_ismember,\n\t\t\t\t\t\t\t\tbloguser_perm_poststatuses, bloguser_perm_delpost, bloguser_perm_comments,\n\t\t\t\t\t\t\t\tbloguser_perm_cats, bloguser_perm_properties)\n\t\t\t\t\t\t\tSELECT blog_ID, ID, 1, 'published,deprecated,protected,private,draft', 1, 1, 1, 1\n\t\t\t\t\t\t\tFROM T_users, T_blogs\n\t\t\t\t\t\t\tWHERE user_level = 10\";\n\t\t$DB->query( $query );\n\n\t\t// Normal users: basic rights for all blogs (can't stop doing joins :P)\n\t\t$query = \"INSERT INTO T_coll_user_perms( bloguser_blog_ID, bloguser_user_ID, bloguser_ismember,\n\t\t\t\t\t\t\t\tbloguser_perm_poststatuses, bloguser_perm_delpost, bloguser_perm_comments,\n\t\t\t\t\t\t\t\tbloguser_perm_cats, bloguser_perm_properties)\n\t\t\t\t\t\t\tSELECT blog_ID, ID, 1, 'published,protected,private,draft', 0, 1, 0, 0\n\t\t\t\t\t\t\tFROM T_users, T_blogs\n\t\t\t\t\t\t\tWHERE user_level > 0 AND user_level < 10\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading users table... ';\n\t\t$DB->query( 'UPDATE T_users\n\t\t\t\t\t\t\t\t\t  SET dateYMDhour = \\'2000-01-01 00:00:00\\'\n\t\t\t\t\t\t\t\t\tWHERE ( dateYMDhour = \\'0000-00-00 00:00:00\\' OR dateYMDhour = \\'2000-00-00 00:00:01\\' )' );\n\t\t$DB->query( 'ALTER TABLE T_users\n\t\t\t\t\t\t\tMODIFY COLUMN dateYMDhour DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$query = \"ALTER TABLE T_users\n\t\t\t\t\t\t\tADD COLUMN user_notify tinyint(1) NOT NULL default 1,\n\t\t\t\t\t\t\tADD COLUMN user_grp_ID int(4) NOT NULL default 1,\n\t\t\t\t\t\t\tMODIFY COLUMN user_idmode varchar(20) NOT NULL DEFAULT 'login'\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"ALTER TABLE T_users\n\t\t\t\t\t\t\tADD KEY user_grp_ID (user_grp_ID)\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Assigning user groups... ';\n\n\t\t// Default is 1, so admins are already set.\n\n\t\t// Basic Users:\n\t\t$query = \"UPDATE T_users\n\t\t\t\t\t\t\tSET user_grp_ID = $Group_Users->ID\n\t\t\t\t\t\t\tWHERE user_level = 0\";\n\t\t$DB->query( $query );\n\n\t\t// Bloggers:\n\t\t$query = \"UPDATE T_users\n\t\t\t\t\t\t\tSET user_grp_ID = $Group_Bloggers->ID\n\t\t\t\t\t\t\tWHERE user_level > 0 AND user_level < 10\";\n\t\t$DB->query( $query );\n\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading settings table... ';\n\t\t$query = \"ALTER TABLE T_settings\n\t\t\t\t\t\t\tDROP COLUMN time_format,\n\t\t\t\t\t\t\tDROP COLUMN date_format,\n\t\t\t\t\t\t\tADD COLUMN pref_newusers_grp_ID int unsigned DEFAULT 4 NOT NULL,\n\t\t\t\t\t\t\tADD COLUMN pref_newusers_level tinyint unsigned DEFAULT 1 NOT NULL,\n\t\t\t\t\t\t\tADD COLUMN pref_newusers_canregister tinyint unsigned DEFAULT 0 NOT NULL\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8050' );\n\t}\n\n\n\tif( $old_db_version < 8060 )\n\t{ // upgrade to 0.9\n\t\t// Important check:\n\t\t$stub_list = $DB->get_col( \"\n\t\t\tSELECT blog_stub\n\t\t\t  FROM T_blogs\n\t\t\t GROUP BY blog_stub\n\t\t\tHAVING COUNT(*) > 1\" );\n\t\tif( !empty($stub_list) )\n\t\t{\n\t\t\techo '<div class=\"error\"><p class=\"error\">';\n\t\t\tprintf( T_(\"It appears that the following blog stub names are used more than once: ['%s']\" ), implode( \"','\", $stub_list ) );\n\t\t\techo '</p><p>';\n\t\t\tprintf( T_(\"I can't upgrade until you make them unique. DB field: [%s]\" ), $db_config['aliases']['T_blogs'].'.blog_stub' );\n\t\t\techo '</p></div>';\n\t\t\treturn false;\n\t\t}\n\n\t\t// Create locales\n\t\techo 'Creating table for Locales... ';\n\t\t$query = \"CREATE TABLE T_locales (\n\t\t\t\tloc_locale varchar(20) NOT NULL default '',\n\t\t\t\tloc_charset varchar(15) NOT NULL default 'iso-8859-1',\n\t\t\t\tloc_datefmt varchar(10) NOT NULL default 'y-m-d',\n\t\t\t\tloc_timefmt varchar(10) NOT NULL default 'H:i:s',\n\t\t\t\tloc_name varchar(40) NOT NULL default '',\n\t\t\t\tloc_messages varchar(20) NOT NULL default '',\n\t\t\t\tloc_priority tinyint(4) UNSIGNED NOT NULL default '0',\n\t\t\t\tloc_enabled tinyint(4) NOT NULL default '1',\n\t\t\t\tPRIMARY KEY loc_locale( loc_locale )\n\t\t\t) COMMENT='saves available locales'\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading posts table... ';\n\t\t$query = \"UPDATE {$tableprefix}posts\n\t\t\t\t\t\t\tSET post_urltitle = NULL\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"ALTER TABLE {$tableprefix}posts\n\t\t\t\t\t\t\tCHANGE COLUMN post_date post_issue_date datetime NOT NULL default '1000-01-01 00:00:00',\n\t\t\t\t\t\t\tADD COLUMN post_mod_date datetime NOT NULL default '1000-01-01 00:00:00'\n\t\t\t\t\t\t\t\t\t\tAFTER post_issue_date,\n\t\t\t\t\t\t\tCHANGE COLUMN post_lang post_locale varchar(20) NOT NULL default 'en-EU',\n\t\t\t\t\t\t\tDROP COLUMN post_url,\n\t\t\t\t\t\t\tCHANGE COLUMN post_trackbacks post_url varchar(250) NULL default NULL,\n\t\t\t\t\t\t\tADD COLUMN post_renderers VARCHAR(179) NOT NULL default 'default'\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"ALTER TABLE {$tableprefix}posts\n\t\t\t\t\t\t\tADD INDEX post_issue_date( post_issue_date ),\n\t\t\t\t\t\t\tADD UNIQUE post_urltitle( post_urltitle )\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"ALTER TABLE {$tableprefix}posts\n\t\t\t\t\tDROP INDEX post_date\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"UPDATE {$tableprefix}posts\n\t\t\t\t\t\t\tSET post_mod_date = post_issue_date\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\t// convert given languages to locales\n\t\tconvert_lang_to_locale( \"{$tableprefix}posts\", 'post_locale', 'ID' );\n\n\t\techo 'Upgrading blogs table... ';\n\t\t$query = \"ALTER TABLE T_blogs\n\t\t\t\t\t\t\tCHANGE blog_lang blog_locale varchar(20) NOT NULL default 'en-EU',\n\t\t\t\t\t\t\tCHANGE blog_roll blog_notes TEXT NULL,\n\t\t\t\t\t\t\tMODIFY COLUMN blog_default_skin VARCHAR(30) NOT NULL DEFAULT 'custom',\n\t\t\t\t\t\t\tDROP COLUMN blog_filename,\n\t\t\t\t\t\t\tADD COLUMN blog_access_type VARCHAR(10) NOT NULL DEFAULT 'index.php' AFTER blog_locale,\n\t\t\t\t\t\t\tADD COLUMN blog_force_skin tinyint(1) NOT NULL default 0 AFTER blog_default_skin,\n\t\t\t\t\t\t\tADD COLUMN blog_in_bloglist tinyint(1) NOT NULL DEFAULT 1 AFTER blog_disp_bloglist,\n\t\t\t\t\t\t\tADD COLUMN blog_links_blog_ID INT(4) NOT NULL DEFAULT 0,\n\t\t\t\t\t\t\tADD UNIQUE KEY blog_stub (blog_stub)\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"UPDATE T_blogs\n\t\t\t\t\t\t\tSET blog_access_type = 'stub',\n\t\t\t\t\t\t\t\t\tblog_default_skin = 'custom'\";\n\t\t$DB->query( $query );\n\n\t\techo \"OK.<br />\\n\";\n\n\t\t// convert given languages to locales\n\t\tconvert_lang_to_locale( 'T_blogs', 'blog_locale', 'blog_ID' );\n\n\n\t\techo 'Converting settings table... ';\n\n\t\t// get old settings\n\t\t$query = 'SELECT * FROM T_settings';\n\t\t$row = $DB->get_row( $query, ARRAY_A );\n\n\t\t#echo 'oldrow:<br />'; pre_dump($row);\n\t\t$transform = array(\n\t\t\t'posts_per_page' => array(5),      // note: moved to blogsettings in 2.0\n\t\t\t'what_to_show' => array('posts'),  // note: moved to blogsettings in 2.0\n\t\t\t'archive_mode' => array('monthly'),// note: moved to blogsettings in 2.0\n\t\t\t'time_difference' => array(0),\n\t\t\t'AutoBR' => array(0),\n\t\t\t'last_antispam_update' => array('2000-01-01 00:00:00', 'antispam_last_update'),\n\t\t\t'pref_newusers_grp_ID' => array($Group_Users->ID, 'newusers_grp_ID'),\n\t\t\t'pref_newusers_level'  => array(1, 'newusers_level'),\n\t\t\t'pref_newusers_canregister' => array(0, 'newusers_canregister'),\n\t\t);\n\n\t\t$_trans = array();\n\t\tforeach( $transform as $oldkey => $newarr )\n\t\t{\n\t\t\t$newname = ( isset($newarr[1]) ? $newarr[1] : $oldkey );\n\t\t\tif( !isset( $row[$oldkey] ) )\n\t\t\t{\n\t\t\t\techo '&nbsp;&middot;Setting '.$oldkey.' not found, using defaults.<br />';\n\t\t\t\t$_trans[ $newname ] = $newarr[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$_trans[ $newname ] = $row[$oldkey];\n\t\t\t}\n\t\t}\n\n\t\t// drop old table\n\t\t$DB->query( 'DROP TABLE IF EXISTS T_settings' );\n\n\t\t// create new table\n\t\t$DB->query(\n\t\t\t'CREATE TABLE T_settings (\n\t\t\t\tset_name VARCHAR( 30 ) NOT NULL ,\n\t\t\t\tset_value VARCHAR( 255 ) NULL ,\n\t\t\t\tPRIMARY KEY ( set_name )\n\t\t\t)');\n\n\t\t// insert defaults and use transformed settings\n\t\tcreate_default_settings( $_trans );\n\n\t\tif( !isset( $tableblogusers_isuptodate ) )\n\t\t{\n\t\t\techo 'Upgrading Blog-User permissions table... ';\n\t\t\t$query = \"ALTER TABLE T_coll_user_perms\n\t\t\t\t\t\t\t\tADD COLUMN bloguser_ismember tinyint NOT NULL default 0 AFTER bloguser_user_ID\";\n\t\t\t$DB->query( $query );\n\n\t\t\t// Any row that is created holds at least one permission,\n\t\t\t// minimum permsission is to be a member, so we add that one too, to all existing rows.\n\t\t\t$DB->query( \"UPDATE T_coll_user_perms\n\t\t\t\t\t\t\t\t\t\t\tSET bloguser_ismember = 1\" );\n\t\t\techo \"OK.<br />\\n\";\n\t\t}\n\n\t\techo 'Upgrading Comments table... ';\n\t\t$DB->query( 'UPDATE T_comments\n\t\t\t\t\t\t\t\t\t  SET comment_date = \\'2000-01-01 00:00:00\\'\n\t\t\t\t\t\t\t\t\tWHERE comment_date = \\'0000-00-00 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\t\t\t\t\tMODIFY COLUMN comment_date DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$query = \"ALTER TABLE T_comments\n\t\t\t\t\t\t\tADD COLUMN comment_author_ID int unsigned NULL default NULL AFTER comment_status,\n\t\t\t\t\t\t\tMODIFY COLUMN comment_author varchar(100) NULL,\n\t\t\t\t\t\t\tMODIFY COLUMN comment_author_email varchar(100) NULL,\n\t\t\t\t\t\t\tMODIFY COLUMN comment_author_url varchar(100) NULL,\n\t\t\t\t\t\t\tMODIFY COLUMN comment_author_IP varchar(23) NOT NULL default ''\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading Users table... ';\n\t\t$query = \"ALTER TABLE T_users ADD user_locale VARCHAR( 20 ) DEFAULT 'en-EU' NOT NULL AFTER user_yim\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8060' );\n\t}\n\n\n\tif( $old_db_version < 8062 )\n\t{ // upgrade to 0.9.0.4\n\t\techo \"Checking for extra quote escaping in posts... \";\n\t\t$query = \"SELECT ID, post_title, post_content\n\t\t\t\t\t\t\t\tFROM {$tableprefix}posts\n\t\t\t\t\t\t\t WHERE post_title LIKE '%\\\\\\\\\\\\\\\\\\'%'\n\t\t\t\t\t\t\t\t\tOR post_title LIKE '%\\\\\\\\\\\\\\\\\\\"%'\n\t\t\t\t\t\t\t\t\tOR post_content LIKE '%\\\\\\\\\\\\\\\\\\'%'\n\t\t\t\t\t\t\t\t\tOR post_content LIKE '%\\\\\\\\\\\\\\\\\\\"%' \";\n\t\t/* FP: the above looks overkill, but MySQL is really full of surprises...\n\t\t\t\t\t\ttested on 4.0.14-nt */\n\t\t// echo $query;\n\t\t$rows = $DB->get_results( $query, ARRAY_A );\n\t\tif( $DB->num_rows )\n\t\t{\n\t\t\techo 'Updating '.$DB->num_rows.' posts... ';\n\t\t\tforeach( $rows as $row )\n\t\t\t{\n\t\t\t\t// echo '<br />'.$row['post_title'];\n\t\t\t\t$query = \"UPDATE {$tableprefix}posts\n\t\t\t\t\t\t\t\t\tSET post_title = \".$DB->quote( stripslashes( $row['post_title'] ) ).\",\n\t\t\t\t\t\t\t\t\t\t\tpost_content = \".$DB->quote( stripslashes( $row['post_content'] ) ).\"\n\t\t\t\t\t\t\t\t\tWHERE ID = \".$row['ID'];\n\t\t\t\t// echo '<br />'.$query;\n\t\t\t\t$DB->query( $query );\n\t\t\t}\n\t\t}\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8062' );\n\t}\n\n\n\tif( $old_db_version < 8064 )\n\t{ // upgrade to 0.9.0.6\n\t\tcleanup_comment_quotes();\n\n\t\tset_upgrade_checkpoint( '8064' );\n\t}\n\n\n\tif( $old_db_version < 8066 )\n\t{\t// upgrade to 0.9.1\n\t\techo 'Adding catpost index... ';\n\t\t$DB->query( 'ALTER TABLE T_postcats ADD UNIQUE catpost ( postcat_cat_ID, postcat_post_ID )' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8066' );\n\t}\n\n\n\tif( $old_db_version < 8800 )\n\t{ // ---------------------------------- upgrade to 1.6 \"phoenix ALPHA\"\n\n\t\techo 'Dropping old Hitlog table... ';\n\t\t$DB->query( 'DROP TABLE IF EXISTS T_hitlog' );\n\t\techo \"OK.<br />\\n\";\n\n\t\t// New tables:\n\t\t\techo 'Creating table for active sessions... ';\n\t\t\t$DB->query( \"CREATE TABLE T_sessions (\n\t\t\t\t\t\t\t\t\t\t\tsess_ID        INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\t\t\tsess_key       CHAR(32) NULL,\n\t\t\t\t\t\t\t\t\t\t\tsess_lastseen  DATETIME NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\tsess_ipaddress VARCHAR(15) NOT NULL DEFAULT '',\n\t\t\t\t\t\t\t\t\t\t\tsess_user_ID   INT(10) DEFAULT NULL,\n\t\t\t\t\t\t\t\t\t\t\tsess_agnt_ID   INT UNSIGNED NULL,\n\t\t\t\t\t\t\t\t\t\t\tsess_data      TEXT DEFAULT NULL,\n\t\t\t\t\t\t\t\t\t\t\tPRIMARY KEY( sess_ID )\n\t\t\t\t\t\t\t\t\t\t)\" );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating user settings table... ';\n\t\t\t$DB->query( \"CREATE TABLE {$tableprefix}usersettings (\n\t\t\t\t\t\t\t\t\t\t\tuset_user_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\tuset_name    VARCHAR( 30 ) NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\tuset_value   VARCHAR( 255 ) NULL,\n\t\t\t\t\t\t\t\t\t\t\tPRIMARY KEY ( uset_user_ID, uset_name )\n\t\t\t\t\t\t\t\t\t\t)\");\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating plugins table... ';\n\t\t\t$DB->query( \"CREATE TABLE T_plugins (\n\t\t\t\t\t\t\t\t\t\t\tplug_ID        INT(11) UNSIGNED NOT NULL auto_increment,\n\t\t\t\t\t\t\t\t\t\t\tplug_priority  INT(11) NOT NULL default 50,\n\t\t\t\t\t\t\t\t\t\t\tplug_classname VARCHAR(40) NOT NULL default '',\n\t\t\t\t\t\t\t\t\t\t\tPRIMARY KEY ( plug_ID )\n\t\t\t\t\t\t\t\t\t\t)\");\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating table for Post Statuses... ';\n\t\t\t$query=\"CREATE TABLE {$tableprefix}poststatuses (\n\t\t\t\t\t\t\t\t\t\t\tpst_ID   int(11) unsigned not null AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\t\t\tpst_name varchar(30)      not null,\n\t\t\t\t\t\t\t\t\t\t\tprimary key ( pst_ID )\n\t\t\t\t\t\t\t\t\t\t)\";\n\t\t\t$DB->query( $query );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating table for Post Types... ';\n\t\t\t$query=\"CREATE TABLE {$tableprefix}posttypes (\n\t\t\t\t\t\t\t\t\t\t\tptyp_ID   int(11) unsigned not null AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\t\t\tptyp_name varchar(30)      not null,\n\t\t\t\t\t\t\t\t\t\t\tprimary key (ptyp_ID)\n\t\t\t\t\t\t\t\t\t\t)\";\n\t\t\t$DB->query( $query );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating table for File Meta Data... ';\n\t\t\t$DB->query( \"CREATE TABLE T_files (\n\t\t\t\t\t\t\t\t\t\t file_ID        int(11) unsigned  not null AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\t\t file_root_type enum('absolute','user','group','collection') not null default 'absolute',\n\t\t\t\t\t\t\t\t\t\t file_root_ID   int(11) unsigned  not null default 0,\n\t\t\t\t\t\t\t\t\t\t file_path      varchar(255)      not null default '',\n\t\t\t\t\t\t\t\t\t\t file_title     varchar(255),\n\t\t\t\t\t\t\t\t\t\t file_alt       varchar(255),\n\t\t\t\t\t\t\t\t\t\t file_desc      text,\n\t\t\t\t\t\t\t\t\t\t primary key (file_ID),\n\t\t\t\t\t\t\t\t\t\t unique file (file_root_type, file_root_ID, file_path)\n\t\t\t\t\t\t\t\t\t)\" );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating table for base domains... ';\n\t\t\t$DB->query( \"CREATE TABLE T_basedomains (\n\t\t\t\t\t\t\t\t\t\tdom_ID     INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\t\tdom_name   VARCHAR(250) NOT NULL DEFAULT '',\n\t\t\t\t\t\t\t\t\t\tdom_status ENUM('unknown','whitelist','blacklist') NOT NULL DEFAULT 'unknown',\n\t\t\t\t\t\t\t\t\t\tdom_type   ENUM('unknown','normal','searcheng','aggregator') NOT NULL DEFAULT 'unknown',\n\t\t\t\t\t\t\t\t\t\tPRIMARY KEY (dom_ID),\n\t\t\t\t\t\t\t\t\t\tUNIQUE dom_name (dom_name)\n\t\t\t\t\t\t\t\t\t)\" );\t// fp> the unique key was only named in version 1.9. Crap. Put the name back here to save as many souls as possible. bulk has not upgraded from 0.9 yet :/\n\t\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8820' );\n\t}\n\n\n\tif( $old_db_version < 8840 )\n\t{\n\n\t\t\techo 'Creating table for user agents... ';\n\t\t\t$DB->query( \"CREATE TABLE {$tableprefix}useragents (\n\t\t\t\t\t\t\t\t\t\tagnt_ID        INT UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\t\tagnt_signature VARCHAR(250) NOT NULL,\n\t\t\t\t\t\t\t\t\t\tagnt_type      ENUM('rss','robot','browser','unknown') DEFAULT 'unknown' NOT NULL,\n\t\t\t\t\t\t\t\t\t\tPRIMARY KEY (agnt_ID) )\" );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating table for Hit-Logs... ';\n\t\t\t$query = \"CREATE TABLE T_hitlog (\n\t\t\t\t\t\t\t\t\thit_ID             INT(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\thit_sess_ID        INT UNSIGNED,\n\t\t\t\t\t\t\t\t\thit_datetime       DATETIME NOT NULL,\n\t\t\t\t\t\t\t\t\thit_uri            VARCHAR(250) DEFAULT NULL,\n\t\t\t\t\t\t\t\t\thit_referer_type   ENUM('search','blacklist','referer','direct','spam') NOT NULL,\n\t\t\t\t\t\t\t\t\thit_referer        VARCHAR(250) DEFAULT NULL,\n\t\t\t\t\t\t\t\t\thit_referer_dom_ID INT UNSIGNED DEFAULT NULL,\n\t\t\t\t\t\t\t\t\thit_blog_ID        int(11) UNSIGNED NULL DEFAULT NULL,\n\t\t\t\t\t\t\t\t\thit_remote_addr    VARCHAR(40) DEFAULT NULL,\n\t\t\t\t\t\t\t\t\tPRIMARY KEY (hit_ID),\n\t\t\t\t\t\t\t\t\tINDEX hit_datetime ( hit_datetime ),\n\t\t\t\t\t\t\t\t\tINDEX hit_blog_ID (hit_blog_ID)\n\t\t\t\t\t\t\t\t)\";\n\t\t\t$DB->query( $query );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating table for subscriptions... ';\n\t\t\t$DB->query( \"CREATE TABLE T_subscriptions (\n\t\t\t\t\t\t\t\t\t\t sub_coll_ID     int(11) unsigned    not null,\n\t\t\t\t\t\t\t\t\t\t sub_user_ID     int(11) unsigned    not null,\n\t\t\t\t\t\t\t\t\t\t sub_items       tinyint(1)          not null,\n\t\t\t\t\t\t\t\t\t\t sub_comments    tinyint(1)          not null,\n\t\t\t\t\t\t\t\t\t\t primary key (sub_coll_ID, sub_user_ID)\n\t\t\t\t\t\t\t\t\t\t)\" );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating table for blog-group permissions... ';\n\t\t\t$DB->query( \"CREATE TABLE T_coll_group_perms (\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_blog_ID int(11) unsigned NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_group_ID int(11) unsigned NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_ismember tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_poststatuses set('published','deprecated','protected','private','draft') NOT NULL default '',\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_delpost tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_comments tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_cats tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_properties tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_media_upload tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_media_browse tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_media_change tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tPRIMARY KEY bloggroup_pk (bloggroup_blog_ID,bloggroup_group_ID) )\" );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\techo 'Upgrading blogs table... ';\n\t\t$query = \"ALTER TABLE T_blogs\n\t\t\t\t\t\t\tMODIFY COLUMN blog_ID int(11) unsigned NOT NULL auto_increment,\n\t\t\t\t\t\t\tMODIFY COLUMN blog_links_blog_ID INT(11) NULL DEFAULT NULL,\n\t\t\t\t\t\t\tCHANGE COLUMN blog_stub blog_urlname VARCHAR(255) NOT NULL DEFAULT 'urlname',\n\t\t\t\t\t\t\tADD COLUMN blog_allowcomments VARCHAR(20) NOT NULL default 'post_by_post' AFTER blog_keywords,\n\t\t\t\t\t\t\tADD COLUMN blog_allowblogcss TINYINT(1) NOT NULL default 1 AFTER blog_allowpingbacks,\n\t\t\t\t\t\t\tADD COLUMN blog_allowusercss TINYINT(1) NOT NULL default 1 AFTER blog_allowblogcss,\n\t\t\t\t\t\t\tDROP INDEX blog_stub,\n\t\t\t\t\t\t\tADD COLUMN blog_stub VARCHAR(255) NOT NULL DEFAULT 'stub' AFTER blog_staticfilename,\n\t\t\t\t\t\t\tADD COLUMN blog_commentsexpire INT(4) NOT NULL DEFAULT 0 AFTER blog_links_blog_ID,\n\t\t\t\t\t\t\tADD COLUMN blog_media_location ENUM( 'default', 'subdir', 'custom', 'none' ) DEFAULT 'default' NOT NULL AFTER blog_commentsexpire,\n\t\t\t\t\t\t\tADD COLUMN blog_media_subdir VARCHAR( 255 ) NOT NULL AFTER blog_media_location,\n\t\t\t\t\t\t\tADD COLUMN blog_media_fullpath VARCHAR( 255 ) NOT NULL AFTER blog_media_subdir,\n\t\t\t\t\t\t\tADD COLUMN blog_media_url VARCHAR(255) NOT NULL AFTER blog_media_fullpath\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"ALTER TABLE T_blogs\n\t\t\t\t\t\t\tADD UNIQUE blog_urlname ( blog_urlname )\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8840' );\n\t}\n\n\n\t// sam2kb>fp: We need to make sure there are no values like \"blog_a.php\" in blog_urlname,\n\t//\t\t\tafter this upgrade blog URLs look like $baseurl.'blog_a.php' which might be OK in 0.x version,\n\t//\t\t\tbut this config will not work in b2evo 4. Blog URLs will be broken!\n\tif( $old_db_version < 8850 )\n\t{\n\t\techo 'Updating relative URLs... ';\n\t\t// We need to move the slashes to the end:\n\t\t$query = \"UPDATE T_blogs\n\t\t\t\t\t\t\t\t SET blog_siteurl = CONCAT( SUBSTRING(blog_siteurl,2) , '/' )\n\t\t\t\t\t\t\t WHERE blog_siteurl LIKE '/%'\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Copying urlnames to stub names... ';\n\t\t$query = 'UPDATE T_blogs\n\t\t\t\t\t\t\tSET blog_stub = blog_urlname';\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8850' );\n\t}\n\n\n\tif( $old_db_version < 8855 )\n\t{\n\t\techo 'Upgrading posts table... ';\n\t\t$query = \"ALTER TABLE {$tableprefix}posts\n\t\t\t\t\t\t\tDROP INDEX post_author,\n\t\t\t\t\t\t\tDROP INDEX post_issue_date,\n\t\t\t\t\t\t\tDROP INDEX post_category\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"ALTER TABLE {$tableprefix}posts\n\t\t\t\t\t\t\tDROP COLUMN post_karma,\n\t\t\t\t\t\t\tDROP COLUMN post_autobr,\n\t\t\t\t\t\t\tCHANGE COLUMN ID post_ID int(11) unsigned NOT NULL auto_increment,\n\t\t\t\t\t\t\tCHANGE COLUMN post_author\tpost_creator_user_ID int(11) unsigned NOT NULL,\n\t\t\t\t\t\t\tCHANGE COLUMN post_issue_date\tpost_datestart datetime NOT NULL,\n\t\t\t\t\t\t\tCHANGE COLUMN post_mod_date\tpost_datemodified datetime NOT NULL,\n\t\t\t\t\t\t\tCHANGE COLUMN post_category post_main_cat_ID int(11) unsigned NOT NULL,\n\t\t\t\t\t\t\tADD post_parent_ID\t\t\t\tint(11) unsigned NULL AFTER post_ID,\n\t\t\t\t\t\t\tADD post_lastedit_user_ID\tint(11) unsigned NULL AFTER post_creator_user_ID,\n\t\t\t\t\t\t\tADD post_assigned_user_ID\tint(11) unsigned NULL AFTER post_lastedit_user_ID,\n\t\t\t\t\t\t\tADD post_datedeadline \t\tdatetime NULL AFTER post_datestart,\n\t\t\t\t\t\t\tADD post_datecreated\t\t\tdatetime NULL AFTER post_datedeadline,\n\t\t\t\t\t\t\tADD post_pst_ID\t\t\t\t\t\tint(11) unsigned NULL AFTER post_status,\n\t\t\t\t\t\t\tADD post_ptyp_ID\t\t\t\t\tint(11) unsigned NULL AFTER post_pst_ID,\n\t\t\t\t\t\t\tADD post_views\t\t\t\t\t\tint(11) unsigned NOT NULL DEFAULT 0 AFTER post_flags,\n\t\t\t\t\t\t\tADD post_commentsexpire\t\tdatetime DEFAULT NULL AFTER post_comments,\n\t\t\t\t\t\t\tADD post_priority\t\t\t\t\tint(11) unsigned null\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"ALTER TABLE {$tableprefix}posts\n\t\t\t\t\t\t\tADD INDEX post_creator_user_ID( post_creator_user_ID ),\n\t\t\t\t\t\t\tADD INDEX post_parent_ID( post_parent_ID ),\n\t\t\t\t\t\t\tADD INDEX post_assigned_user_ID( post_assigned_user_ID ),\n\t\t\t\t\t\t\tADD INDEX post_datestart( post_datestart ),\n\t\t\t\t\t\t\tADD INDEX post_main_cat_ID( post_main_cat_ID ),\n\t\t\t\t\t\t\tADD INDEX post_ptyp_ID( post_ptyp_ID ),\n\t\t\t\t\t\t\tADD INDEX post_pst_ID( post_pst_ID ) \";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8855' );\n\t}\n\n\n\tif( $old_db_version < 8860 )\n\t{\n\t\techo 'Updating post data... ';\n\t\t$query = \"UPDATE {$tableprefix}posts\n\t\t\t\t\t\t\tSET post_lastedit_user_ID = post_creator_user_ID,\n\t\t\t\t\t\t\t\t\tpost_datecreated = post_datestart\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\ttask_begin( 'Upgrading users table... ' );\n\t\t$DB->query( 'UPDATE T_users\n\t\t\t\t\t\t\t\t\t  SET dateYMDhour = \\'2000-01-01 00:00:00\\'\n\t\t\t\t\t\t\t\t\tWHERE dateYMDhour = \\'0000-00-00 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_users\n\t\t\t\t\t\t\tMODIFY COLUMN dateYMDhour DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\t\t\t\t\tCHANGE COLUMN ID user_ID int(11) unsigned NOT NULL auto_increment,\n\t\t\t\t\t\t\tMODIFY COLUMN user_icq int(11) unsigned DEFAULT 0 NOT NULL,\n\t\t\t\t\t\t\tADD COLUMN user_showonline tinyint(1) NOT NULL default 1 AFTER user_notify' );\n\t\ttask_end();\n\n\n\t\tset_upgrade_checkpoint( '8860' );\n\t}\n\n\n\tif( $old_db_version < 8900 )\n\t{\n\n\t\techo 'Setting new defaults... ';\n\t\t$query = 'INSERT INTO T_settings (set_name, set_value)\n\t\t\t\t\t\t\tVALUES\n\t\t\t\t\t\t\t\t( \"reloadpage_timeout\", \"300\" ),\n\t\t\t\t\t\t\t\t( \"upload_enabled\", \"'.(isset($use_fileupload) ? (int)$use_fileupload : '1').'\" ),\n\t\t\t\t\t\t\t\t( \"upload_allowedext\", \"'.(isset($fileupload_allowedtypes) ? $fileupload_allowedtypes : 'jpg gif png').'\" ),\n\t\t\t\t\t\t\t\t( \"upload_maxkb\", \"'.(isset($fileupload_maxk) ? (int)$fileupload_maxk : '96').'\" )\n\t\t\t\t\t\t\t';\n\t\t$DB->query( $query );\n\t\t// Replace \"paged\" mode with \"posts\" // note: moved to blogsettings in 2.0\n\t\t$DB->query( 'UPDATE T_settings\n\t\t\t\t\t\t\t\t\t\tSET set_value = \"posts\"\n\t\t\t\t\t\t\t\t\tWHERE set_name = \"what_to_show\"\n\t\t\t\t\t\t\t\t\t  AND set_value = \"paged\"' );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\tif( !isset( $tableblogusers_isuptodate ) )\n\t\t{\t// We have created the blogusers table before and it's already clean!\n\t\t\techo 'Altering table for Blog-User permissions... ';\n\t\t\t$DB->query( 'ALTER TABLE T_coll_user_perms\n\t\t\t\t\t\t\t\t\t\tMODIFY COLUMN bloguser_blog_ID int(11) unsigned NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\tMODIFY COLUMN bloguser_user_ID int(11) unsigned NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN bloguser_perm_media_upload tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN bloguser_perm_media_browse tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN bloguser_perm_media_change tinyint NOT NULL default 0' );\n\t\t\techo \"OK.<br />\\n\";\n\t\t}\n\n\n\t\ttask_begin( 'Altering comments table...' );\n\t\t$DB->query( 'UPDATE T_comments\n\t\t\t\t\t\t\t\t\t  SET comment_date = \\'2000-01-01 00:00:00\\'\n\t\t\t\t\t\t\t\t\tWHERE comment_date = \\'0000-00-00 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN comment_date DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN comment_post_ID\t\tint(11) unsigned NOT NULL default 0' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '8900' );\n\t}\n\n\tif( $old_db_version < 9000 )\n\t{\n\t\techo 'Altering Posts to Categories table... ';\n\t\t$DB->query( \"ALTER TABLE T_postcats\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN postcat_post_ID int(11) unsigned NOT NULL,\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN postcat_cat_ID int(11) unsigned NOT NULL\" );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\techo 'Altering Categories table... ';\n\t\t$DB->query( \"ALTER TABLE T_categories\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN cat_ID int(11) unsigned NOT NULL auto_increment,\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN cat_parent_ID int(11) unsigned NULL,\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN cat_blog_ID int(11) unsigned NOT NULL default 2\" );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\techo 'Altering Locales table... ';\n\t\t$DB->query( 'ALTER TABLE T_locales\n\t\t\t\t\t\t\t\t\tADD loc_startofweek TINYINT UNSIGNED NOT NULL DEFAULT 1 AFTER loc_timefmt' );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\tif( !isset( $tablegroups_isuptodate ) )\n\t\t{\t// We have created the groups table before and it's already clean!\n\t\t\techo 'Altering Groups table... ';\n\t\t\t$DB->query( \"ALTER TABLE T_groups\n\t\t\t\t\t\t\t\t\t\tADD COLUMN grp_perm_admin enum('none','hidden','visible') NOT NULL default 'visible' AFTER grp_name,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN grp_perm_files enum('none','view','add','edit') NOT NULL default 'none'\" );\n\t\t\techo \"OK.<br />\\n\";\n\t\t}\n\n\n\t\techo 'Creating table for Post Links... ';\n\t\t$DB->query( \"CREATE TABLE T_links (\n\t\t\t\t\t\t\t\t\tlink_ID               int(11) unsigned  not null AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\tlink_datecreated      datetime          not null,\n\t\t\t\t\t\t\t\t\tlink_datemodified     datetime          not null,\n\t\t\t\t\t\t\t\t\tlink_creator_user_ID  int(11) unsigned  not null,\n\t\t\t\t\t\t\t\t\tlink_lastedit_user_ID int(11) unsigned  not null,\n\t\t\t\t\t\t\t\t\tlink_item_ID          int(11) unsigned  NOT NULL,\n\t\t\t\t\t\t\t\t\tlink_dest_item_ID     int(11) unsigned  NULL,\n\t\t\t\t\t\t\t\t\tlink_file_ID          int(11) unsigned  NULL,\n\t\t\t\t\t\t\t\t\tlink_ltype_ID         int(11) unsigned  NOT NULL default 1,\n\t\t\t\t\t\t\t\t\tlink_external_url     VARCHAR(255)      NULL,\n\t\t\t\t\t\t\t\t\tlink_title            TEXT              NULL,\n\t\t\t\t\t\t\t\t\tPRIMARY KEY (link_ID),\n\t\t\t\t\t\t\t\t\tINDEX link_item_ID( link_item_ID ),\n\t\t\t\t\t\t\t\t\tINDEX link_dest_item_ID (link_dest_item_ID),\n\t\t\t\t\t\t\t\t\tINDEX link_file_ID (link_file_ID)\n\t\t\t\t\t\t\t\t)\" );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\techo 'Creating default Post Types... ';\n\t\t$DB->query( \"\n\t\t\tINSERT INTO {$tableprefix}posttypes ( ptyp_ID, ptyp_name )\n\t\t\tVALUES ( 1, 'Post' ),\n\t\t\t       ( 2, 'Link' )\" );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\tset_upgrade_checkpoint( '9000' );\n\t}\n\n\n\tif( $old_db_version < 9100 )\n\t{\t// 1.8 ALPHA\n\n\t\techo 'Creating table for plugin events... ';\n\t\t$DB->query( '\n\t\t\tCREATE TABLE T_pluginevents(\n\t\t\t\t\tpevt_plug_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\tpevt_event VARCHAR(40) NOT NULL,\n\t\t\t\t\tpevt_enabled TINYINT NOT NULL DEFAULT 1,\n\t\t\t\t\tPRIMARY KEY( pevt_plug_ID, pevt_event )\n\t\t\t\t)' );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\techo 'Altering Links table... ';\n\t\t$DB->query( 'ALTER TABLE T_links\n\t\t             CHANGE link_item_ID link_itm_ID INT( 11 ) UNSIGNED NOT NULL,\n\t\t             CHANGE link_dest_item_ID link_dest_itm_ID INT( 11 ) UNSIGNED NULL' );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\tif( $old_db_version >= 9000 )\n\t\t{ // sess_agnt_ID used in Phoenix-Alpha\n\t\t\techo 'Altering sessions table... ';\n\t\t\t$query = \"\n\t\t\t\t\tALTER TABLE T_sessions\n\t\t\t\t\t DROP COLUMN sess_agnt_ID\";\n\t\t\t$DB->query( $query );\n\t\t\techo \"OK.<br />\\n\";\n\t\t}\n\n\t\techo 'Creating table for file types... ';\n\t\t$DB->query( '\n\t\t\t\tCREATE TABLE T_filetypes (\n\t\t\t\t\tftyp_ID int(11) unsigned NOT NULL auto_increment,\n\t\t\t\t\tftyp_extensions varchar(30) NOT NULL,\n\t\t\t\t\tftyp_name varchar(30) NOT NULL,\n\t\t\t\t\tftyp_mimetype varchar(50) NOT NULL,\n\t\t\t\t\tftyp_icon varchar(20) default NULL,\n\t\t\t\t\tftyp_viewtype varchar(10) NOT NULL,\n\t\t\t\t\tftyp_allowed tinyint(1) NOT NULL default 0,\n\t\t\t\t\tPRIMARY KEY (ftyp_ID)\n\t\t\t\t)' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Creating default file types... ';\n\t\t$DB->query( \"INSERT INTO T_filetypes\n\t\t\t\t(ftyp_ID, ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed)\n\t\t\tVALUES\n\t\t\t\t(1, 'gif', 'GIF image', 'image/gif', 'image2.png', 'image', 1),\n\t\t\t\t(2, 'png', 'PNG image', 'image/png', 'image2.png', 'image', 1),\n\t\t\t\t(3, 'jpg jpeg', 'JPEG image', 'image/jpeg', 'image2.png', 'image', 1),\n\t\t\t\t(4, 'txt', 'Text file', 'text/plain', 'document.png', 'text', 1),\n\t\t\t\t(5, 'htm html', 'HTML file', 'text/html', 'html.png', 'browser', 0),\n\t\t\t\t(6, 'pdf', 'PDF file', 'application/pdf', 'pdf.png', 'browser', 1),\n\t\t\t\t(7, 'doc', 'Microsoft Word file', 'application/msword', 'doc.gif', 'external', 1),\n\t\t\t\t(8, 'xls', 'Microsoft Excel file', 'application/vnd.ms-excel', 'xls.gif', 'external', 1),\n\t\t\t\t(9, 'ppt', 'Powerpoint', 'application/vnd.ms-powerpoint', 'ppt.gif', 'external', 1),\n\t\t\t\t(10, 'pps', 'Slideshow', 'pps', 'pps.gif', 'external', 1),\n\t\t\t\t(11, 'zip', 'ZIP archive', 'application/zip', 'zip.gif', 'external', 1),\n\t\t\t\t(12, 'php php3 php4 php5 php6', 'PHP script', 'application/x-httpd-php', 'php.gif', 'text', 0),\n\t\t\t\t(13, 'css', 'Style sheet', 'text/css', '', 'text', 1)\n\t\t\t\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Giving Administrator Group edit perms on files... ';\n\t\t$DB->query( 'UPDATE T_groups\n\t\t             SET grp_perm_files = \"edit\"\n\t\t             WHERE grp_ID = 1' );\n\t \t// Later versions give 'all' on install, but we won't upgrade to that for security.\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Giving Administrator Group full perms on media for all blogs... ';\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t             SET bloggroup_perm_media_upload = 1,\n\t\t                 bloggroup_perm_media_browse = 1,\n\t\t                 bloggroup_perm_media_change = 1\n\t\t             WHERE bloggroup_group_ID = 1' );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\tif( $old_db_version >= 9000 )\n\t\t{ // Uninstall all ALPHA (potentially incompatible) plugins\n\t\t\techo 'Uninstalling all existing plugins... ';\n\t\t\t$DB->query( 'DELETE FROM T_plugins WHERE 1=1' );\n\t\t\techo \"OK.<br />\\n\";\n\t\t}\n\n\t\t// NOTE: basic plugins get installed separatly for upgrade and install..\n\n\n\t\tset_upgrade_checkpoint( '9100' );\n\t}\n\n\n\tif( $old_db_version < 9190 ) // Note: changed from 9200, to include the block below, if DB is not yet on 1.8\n\t{\t// 1.8 ALPHA (block #2)\n\t\techo 'Altering Posts table... ';\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}posts\n\t\t             CHANGE post_comments post_comment_status ENUM('disabled', 'open', 'closed') NOT NULL DEFAULT 'open'\" );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\tset_upgrade_checkpoint( '9190' );\n\t}\n\n\n\tif( $old_db_version < 9192 )\n\t{ // 1.8 ALPHA (block #3) - The payload that db_delta() handled before\n\n\t\t// This is a fix, which broke upgrade to 1.8 (from 1.6) in MySQL strict mode (inserted after 1.8 got released!):\n\t\tif( $DB->get_row( 'SHOW COLUMNS FROM T_hitlog LIKE \"hit_referer_type\"' ) )\n\t\t{ // a niiiiiiiice extra check :p\n\t\t\ttask_begin( 'Deleting all \"spam\" hitlog entries... ' );\n\t\t\t$DB->query( '\n\t\t\t\t\tDELETE FROM T_hitlog\n\t\t\t\t\t WHERE hit_referer_type = \"spam\"' );\n\t\t\ttask_end();\n\t\t}\n\n\t\ttask_begin( 'Upgrading users table... ' );\n\t\t$DB->query( 'ALTER TABLE T_users\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_firstname user_firstname varchar(50) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_lastname user_lastname varchar(50) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_nickname user_nickname varchar(50) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_icq user_icq int(11) unsigned NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_email user_email varchar(255) NOT NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_url user_url varchar(255) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_ip user_ip varchar(15) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_domain user_domain varchar(200) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_browser user_browser varchar(200) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_aim user_aim varchar(50) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_msn user_msn varchar(100) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_yim user_yim varchar(50) NULL,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN user_allow_msgform TINYINT NOT NULL DEFAULT \\'1\\' AFTER user_idmode,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN user_validated TINYINT(1) NOT NULL DEFAULT 0 AFTER user_grp_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating blog settings...' );\n\t\t$DB->query( 'CREATE TABLE T_coll_settings (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcset_coll_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcset_name    VARCHAR( 30 ) NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcset_value   VARCHAR( 255 ) NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPRIMARY KEY ( cset_coll_ID, cset_name )\n\t\t\t\t\t\t\t\t\t\t\t)' );\n\t\ttask_end();\n\t\tset_upgrade_checkpoint( '9192' );\n\t}\n\n\n\tif( $old_db_version < 9195 )\n\t{\n\t\ttask_begin( 'Upgrading posts table... ' );\n\t\t$DB->query( 'ALTER TABLE '.$tableprefix.'posts\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN post_content post_content         text NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN post_url post_url              \t\tVARCHAR(255) NULL DEFAULT NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN post_renderers post_renderers     TEXT NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading comments table... ' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN comment_author_email comment_author_email varchar(255) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN comment_author_url comment_author_url varchar(255) NULL,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN comment_spam_karma TINYINT NULL AFTER comment_karma,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN comment_allow_msgform TINYINT NOT NULL DEFAULT 0 AFTER comment_spam_karma' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9195' );\n\t}\n\n\n\tif( $old_db_version < 9200 )\n\t{\n\t\ttask_begin( 'Upgrading hitlog table... ' );\n\t\t$DB->query( 'ALTER TABLE T_hitlog\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN hit_referer_type hit_referer_type   ENUM(\\'search\\',\\'blacklist\\',\\'referer\\',\\'direct\\') NOT NULL,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN hit_agnt_ID        INT UNSIGNED NULL AFTER hit_remote_addr' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading post links table... ' );\n\t\t$DB->query( 'ALTER TABLE T_links\n\t\t\t\t\t\t\t\t\t\tADD INDEX link_itm_ID( link_itm_ID ),\n\t\t\t\t\t\t\t\t\t\tADD INDEX link_dest_itm_ID (link_dest_itm_ID)' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading plugins table... ' );\n\t\t$DB->query( 'ALTER TABLE T_plugins\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN plug_priority plug_priority        TINYINT NOT NULL default 50,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN plug_code            VARCHAR(32) NULL AFTER plug_classname,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN plug_apply_rendering ENUM( \\'stealth\\', \\'always\\', \\'opt-out\\', \\'opt-in\\', \\'lazy\\', \\'never\\' ) NOT NULL DEFAULT \\'never\\' AFTER plug_code,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN plug_version         VARCHAR(42) NOT NULL default \\'0\\' AFTER plug_apply_rendering,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN plug_status          ENUM( \\'enabled\\', \\'disabled\\', \\'needs_config\\', \\'broken\\' ) NOT NULL AFTER plug_version,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN plug_spam_weight     TINYINT UNSIGNED NOT NULL DEFAULT 1 AFTER plug_status');\n\t\t$DB->query( 'ALTER TABLE T_plugins\n\t\t\t\t\t\t\t\t\t\tADD UNIQUE plug_code( plug_code ),\n\t\t\t\t\t\t\t\t\t\tADD INDEX plug_status( plug_status )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating plugin settings table... ' );\n\t\t$DB->query( 'CREATE TABLE T_pluginsettings (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpset_plug_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpset_name VARCHAR( 30 ) NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpset_value TEXT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPRIMARY KEY ( pset_plug_ID, pset_name )\n\t\t\t\t\t\t\t\t\t\t\t)' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating plugin user settings table... ' );\n\t\t$DB->query( 'CREATE TABLE T_pluginusersettings (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpuset_plug_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpuset_user_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpuset_name VARCHAR( 30 ) NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpuset_value TEXT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPRIMARY KEY ( puset_plug_ID, puset_user_ID, puset_name )\n\t\t\t\t\t\t\t\t\t\t\t)' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating scheduled tasks table... ' );\n\t\t$DB->query( 'CREATE TABLE T_cron__task(\n\t\t\t\t\t\t\t\t\t\t\t\t ctsk_ID              int(10) unsigned      not null AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\t\t\t\t ctsk_start_datetime  datetime              not null,\n\t\t\t\t\t\t\t\t\t\t\t\t ctsk_repeat_after    int(10) unsigned,\n\t\t\t\t\t\t\t\t\t\t\t\t ctsk_name            varchar(50)           not null,\n\t\t\t\t\t\t\t\t\t\t\t\t ctsk_controller      varchar(50)           not null,\n\t\t\t\t\t\t\t\t\t\t\t\t ctsk_params          text,\n\t\t\t\t\t\t\t\t\t\t\t\t primary key (ctsk_ID)\n\t\t\t\t\t\t\t\t\t\t\t)' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating cron log table... ' );\n\t\t$DB->query( 'CREATE TABLE T_cron__log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t clog_ctsk_ID              int(10) unsigned   not null,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t clog_realstart_datetime   datetime           not null,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t clog_realstop_datetime    datetime,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t clog_status               enum(\\'started\\',\\'finished\\',\\'error\\',\\'timeout\\') not null default \\'started\\',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t clog_messages             text,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t primary key (clog_ctsk_ID)\n\t\t\t\t\t\t\t\t\t\t\t)' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs table... ' );\n\t\t// blog_allowpingbacks is \"DEFAULT 1\" in the 0.9.0.11 dump.. - changed in 0.9.2?!\n\t\t$DB->query( 'ALTER TABLE T_blogs\n\t\t\t\t\t\t\t\t\t\tALTER COLUMN blog_allowpingbacks SET DEFAULT 0,\n    \t\t\t\t\t\t\t\tCHANGE COLUMN blog_media_subdir blog_media_subdir VARCHAR( 255 ) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN blog_media_fullpath blog_media_fullpath VARCHAR( 255 ) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN blog_media_url blog_media_url VARCHAR( 255 ) NULL' );\n\t\ttask_end();\n\n\n\t\tset_upgrade_checkpoint( '9200' ); // at 1.8 \"Summer Beta\" release\n\t}\n\n\n\t// ____________________________ 1.9: ____________________________\n\n\tif( $old_db_version < 9290 )\n\t{\n\t\techo 'Post-fix hit_referer_type == NULL... ';\n\t\t// If you've upgraded from 1.6 to 1.8 and it did not break because of strict mode, there are now NULL values for what \"spam\" was:\n\t\t$DB->query( '\n\t\t\t\t\tDELETE FROM T_hitlog\n\t\t\t\t\t WHERE hit_referer_type IS NULL' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Marking administrator accounts as validated... ';\n\t\t$DB->query( '\n\t\t\t\tUPDATE T_users\n\t\t\t\t   SET user_validated = 1\n\t\t\t\t WHERE user_grp_ID = 1' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Converting auto_prune_stats setting... ';\n\t\t$old_auto_prune_stats = $DB->get_var( '\n\t\t\t\tSELECT set_value\n\t\t\t\t  FROM T_settings\n\t\t\t\t WHERE set_name = \"auto_prune_stats\"' );\n\t\tif( ! is_null($old_auto_prune_stats) && $old_auto_prune_stats < 1 )\n\t\t{ // This means it has been disabled before, so set auto_prune_stats_mode to \"off\"!\n\t\t\t$DB->query( '\n\t\t\t\t\tREPLACE INTO T_settings ( set_name, set_value )\n\t\t\t\t\t VALUES ( \"auto_prune_stats_mode\", \"off\" )' );\n\t\t}\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Converting time_difference from hours to seconds... ';\n\t\t$DB->query( 'UPDATE T_settings SET set_value = set_value*3600 WHERE set_name = \"time_difference\"' );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\techo 'Updating hitlog capabilities... ';\n\t\t$DB->query( '\n\t\t\t\tALTER TABLE '.$tableprefix.'useragents ADD INDEX agnt_type ( agnt_type )' );\n\t\t$DB->query( '\n\t\t\t\tALTER TABLE T_hitlog\n\t\t\t\t  CHANGE COLUMN hit_referer_type hit_referer_type ENUM(\\'search\\',\\'blacklist\\',\\'referer\\',\\'direct\\',\\'self\\',\\'admin\\') NOT NULL' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Updating plugin capabilities... ';\n\t\t$DB->query( '\n\t\t\t\tALTER TABLE T_plugins\n\t\t\t\t\tMODIFY COLUMN plug_status ENUM( \\'enabled\\', \\'disabled\\', \\'needs_config\\', \\'broken\\' ) NOT NULL' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9290' );\n\t}\n\n\n\tif( $old_db_version < 9300 )\n\t{\n\t\t// This can be so long, it needs its own checkpoint protected block in case of failure\n\t\techo 'Updating hitlog indexes... ';\n\t\t$DB->query( '\n\t\t\t\tALTER TABLE T_hitlog\n\t\t\t\t  ADD INDEX hit_agnt_ID        ( hit_agnt_ID ),\n\t\t\t\t  ADD INDEX hit_uri            ( hit_uri ),\n\t\t\t\t  ADD INDEX hit_referer_dom_ID ( hit_referer_dom_ID )\n\t\t\t\t' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9300' );\n\t}\n\n\n\tif( $old_db_version < 9310 )\n\t{\n\t\techo 'Updating basedomains... ';\n\t\t$DB->query( '\n\t\t\t\tUPDATE T_basedomains\n\t\t\t\t   SET dom_status = \"unknown\"' );\t\t// someone has filled this up with junk blacklists before\n\t\t$DB->query( '\n\t\t\t\tALTER TABLE T_basedomains  ADD INDEX dom_type (dom_type)' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9310' );\n\t}\n\n\n\tif( $old_db_version < 9315 )\n\t{\n\t\techo 'Altering locales table... ';\n\t\t$DB->query( \"ALTER TABLE T_locales CHANGE COLUMN loc_datefmt loc_datefmt varchar(20) NOT NULL default 'y-m-d'\" );\n\t\t$DB->query( \"ALTER TABLE T_locales CHANGE COLUMN loc_timefmt loc_timefmt varchar(20) NOT NULL default 'H:i:s'\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Creating item prerendering cache table... ';\n\t\t$DB->query( \"\n\t\t\t\tCREATE TABLE {$tableprefix}item__prerendering(\n\t\t\t\t\titpr_itm_ID                   INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\titpr_format                   ENUM('htmlbody', 'entityencoded', 'xml', 'text') NOT NULL,\n\t\t\t\t\titpr_renderers                TEXT NOT NULL,\n\t\t\t\t\titpr_content_prerendered      TEXT NULL,\n\t\t\t\t\titpr_datemodified             TIMESTAMP NOT NULL,\n\t\t\t\t\tPRIMARY KEY (itpr_itm_ID, itpr_format)\n\t\t\t\t)\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Altering plugins table... ';\n\t\t$DB->query( \"ALTER TABLE T_plugins ADD COLUMN plug_name            VARCHAR(255) NULL default NULL AFTER plug_version\" );\n\t\t$DB->query( \"ALTER TABLE T_plugins ADD COLUMN plug_shortdesc       VARCHAR(255) NULL default NULL AFTER plug_name\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9315' );\n\t}\n\n\n\tif( $old_db_version < 9320 )\n\t{ // Dropping hit_datetime because it's very slow on INSERT (dh)\n\t\t// This can be so long, it needs its own checkpoint protected block in case of failure\n\t\tif( db_index_exists( 'T_hitlog', 'hit_datetime' ) )\n\t\t{ // only drop, if it still exists (may have been removed manually)\n\t\t\techo 'Updating hitlog indexes... ';\n\t\t\t$DB->query( '\n\t\t\t\t\tALTER TABLE T_hitlog\n\t\t\t\t\t\tDROP INDEX hit_datetime\n\t\t\t\t\t' );\n\t\t\techo \"OK.<br />\\n\";\n\t\t}\n\n\t\tset_upgrade_checkpoint( '9320' );\n\t}\n\n\n\tif( $old_db_version < 9326 )\n\t{\n\t\techo 'Removing obsolete settings... ';\n\t\t$DB->query( 'DELETE FROM T_settings WHERE set_name = \"upload_allowedext\"' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Updating blogs... ';\n\t\tdb_drop_col( 'T_blogs', 'blog_allowpingbacks' );\n\n\t\t// Remove and transform obsolete fields blog_pingb2evonet, blog_pingtechnorati, blog_pingweblogs, blog_pingblodotgs\n\t\tif( db_cols_exist( 'T_blogs', array('blog_pingb2evonet', 'blog_pingtechnorati', 'blog_pingweblogs', 'blog_pingblodotgs') ) )\n\t\t{\n\t\t\tforeach( $DB->get_results( '\n\t\t\t\t\tSELECT blog_ID, blog_pingb2evonet, blog_pingtechnorati, blog_pingweblogs, blog_pingblodotgs\n\t\t\t\t\t\tFROM T_blogs' ) as $row )\n\t\t\t{\n\t\t\t\t$ping_plugins = $DB->get_var( 'SELECT cset_value FROM T_coll_settings WHERE cset_coll_ID = '.$row->blog_ID.' AND cset_name = \"ping_plugins\"' );\n\t\t\t\t$ping_plugins = explode(',', $ping_plugins);\n\t\t\t\tif( $row->blog_pingb2evonet )\n\t\t\t\t{\n\t\t\t\t\t$ping_plugins[] = 'ping_b2evonet';\n\t\t\t\t}\n\t\t\t\tif( $row->blog_pingtechnorati || $row->blog_pingweblogs || $row->blog_pingblodotgs )\n\t\t\t\t{ // if either one of the previous pingers was enabled, add ping-o-matic:\n\t\t\t\t\t$ping_plugins[] = 'ping_pingomatic';\n\t\t\t\t}\n\n\t\t\t\t// Insert transformed/generated ping plugins collection setting:\n\t\t\t\t$ping_plugins = array_unique($ping_plugins);\n\t\t\t\t$DB->query( 'REPLACE INTO T_coll_settings\n\t\t\t\t\t\t( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\tVALUES ( '.$row->blog_ID.', \"ping_plugins\", \"'.implode( ',', $ping_plugins ).'\" )' );\n\t\t\t}\n\t\t\t$DB->query( 'ALTER TABLE T_blogs\n\t\t\t\t\tDROP COLUMN blog_pingb2evonet,\n\t\t\t\t\tDROP COLUMN blog_pingtechnorati,\n\t\t\t\t\tDROP COLUMN blog_pingweblogs,\n\t\t\t\t\tDROP COLUMN blog_pingblodotgs' );\n\t\t}\n\t\techo \"OK.<br />\\n\";\n\n\n\t\tset_upgrade_checkpoint( '9326' );\n\t}\n\n\n\tif( $old_db_version < 9328 )\n\t{\n\t\techo 'Updating posts... ';\n\t\tdb_add_col( \"{$tableprefix}posts\", 'post_notifications_status',  'ENUM(\"noreq\",\"todo\",\"started\",\"finished\") NOT NULL DEFAULT \"noreq\" AFTER post_flags' );\n\t\tdb_add_col( \"{$tableprefix}posts\", 'post_notifications_ctsk_ID', 'INT(10) unsigned NULL DEFAULT NULL AFTER post_notifications_status' );\n\t\techo \"OK.<br />\\n\";\n\t\tset_upgrade_checkpoint( '9328' );\n\t}\n\n\n\tif( $old_db_version < 9330 )\n\t{\n\t\tif( db_col_exists( \"{$tableprefix}posts\", 'post_flags') )\n\t\t{\n\t\t\techo 'Updating post notifications... ';\n\t\t\t$DB->query( \"\n\t\t\t\tUPDATE {$tableprefix}posts\n\t\t\t\t\t SET post_notifications_status = 'finished'\n\t\t\t\t WHERE post_flags LIKE '%pingsdone%'\" );\n\t\t\tdb_drop_col( \"{$tableprefix}posts\", 'post_flags' );\n\t\t\techo \"OK.<br />\\n\";\n\t\t}\n\t\tset_upgrade_checkpoint( '9330' );\n\t}\n\n\n\tif( $old_db_version < 9340 )\n\t{\n\t\techo 'Removing duplicate post link indexes... ';\n\t\tif( db_index_exists( 'T_links', 'link_item_ID' ) )\n\t\t{ // only drop, if it still exists (may have been removed manually)\n\t\t\t$DB->query( '\n\t\t\t\t\tALTER TABLE T_links\n\t\t\t\t\t\tDROP INDEX link_item_ID\n\t\t\t\t\t' );\n\t\t}\n\t\tif( db_index_exists( 'T_links', 'link_dest_item_ID' ) )\n\t\t{ // only drop, if it still exists (may have been removed manually)\n\t\t\t$DB->query( '\n\t\t\t\t\tALTER TABLE T_links\n\t\t\t\t\t\tDROP INDEX link_dest_item_ID\n\t\t\t\t\t' );\n\t\t}\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9340' );\n\t}\n\n\t// ____________________________ 1.10: ____________________________\n\n\tif( $old_db_version < 9345 )\n\t{\n\t\techo 'Updating post table... ';\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}posts CHANGE COLUMN post_content post_content MEDIUMTEXT NULL\" );\n\t\techo \"OK.<br />\\n\";\n\t\tset_upgrade_checkpoint( '9345' );\n\t}\n\n\tif( $old_db_version < 9346 )\n\t{\n\t\techo 'Updating prerendering table... ';\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}item__prerendering CHANGE COLUMN itpr_content_prerendered itpr_content_prerendered MEDIUMTEXT NULL\" );\n\t\techo \"OK.<br />\\n\";\n\t\tset_upgrade_checkpoint( '9346' );\n\t}\n\n\tif( $old_db_version < 9348 )\n\t{\n\t\techo 'Updating sessions table... ';\n\t\t$DB->query( 'ALTER TABLE T_sessions CHANGE COLUMN sess_data sess_data MEDIUMBLOB DEFAULT NULL' );\n\t\techo \"OK.<br />\\n\";\n\t\tset_upgrade_checkpoint( '9348' );\n\t}\n\n\tif( $old_db_version < 9350 )\n\t{\n\t\techo 'Updating hitlog table... ';\n\t\t$DB->query( 'ALTER TABLE T_hitlog CHANGE COLUMN hit_referer_type hit_referer_type   ENUM(\\'search\\',\\'blacklist\\',\\'spam\\',\\'referer\\',\\'direct\\',\\'self\\',\\'admin\\') NOT NULL' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9350' );\n\t}\n\n\n\t// TODO: \"If a user has permission to edit a blog, he should be able to put files in the media folder for that blog.\" - see http://forums.b2evolution.net/viewtopic.php?p=36417#36417\n\t/*\n\t// blueyed>> I've came up with the following, but it's too generic IMHO\n\tif( $old_db_version < 9300 )\n\t{\n\t\techo 'Setting automatic media perms on blogs (members can upload)... ';\n\t\t$users = $DB->query( '\n\t\t\t\tUPDATE T_users\n\t\t\t\t   SET bloguser_perm_media_upload = 1\n\t\t\t\t WHERE bloguser_ismember = 1' );\n\t\techo \"OK.<br />\\n\";\n\t}\n\t*/\n\n\n\t// ____________________________ 2.0: ____________________________\n\n\tif( $old_db_version < 9406 )\n\t{\n\t\techo 'Updating chapter url names... ';\n\t\t$DB->query( '\n\t\t\tALTER TABLE T_categories\n\t\t\t\tADD COLUMN cat_urlname VARCHAR(255) NOT NULL' );\n\n\t\t// Create cat_urlname from cat_name:\n\t\t// TODO: Also use it for cafelog upgrade.\n\t\tload_funcs('locales/_charset.funcs.php');\n\t\tforeach( $DB->get_results('SELECT cat_ID, cat_name FROM T_categories') as $cat )\n\t\t{\n\t\t\t$cat_name = trim($cat->cat_name);\n\t\t\tif( strlen($cat_name) )\n\t\t\t{\n\t\t\t\t// TODO: dh> pass locale (useful for transliteration). From main blog?\n\t\t\t\t$cat_urlname = urltitle_validate('', $cat_name, $cat->cat_ID, false, 'cat_urlname', 'cat_ID', 'T_categories');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$cat_urlname = 'c'.$cat->cat_ID;\n\t\t\t}\n\n\t\t\t$DB->query( '\n\t\t\t\tUPDATE T_categories\n\t\t\t\t\t SET cat_urlname = '.$DB->quote($cat_urlname).'\n\t\t\t\t WHERE cat_ID = '.$cat->cat_ID );\n\t\t}\n\n\t\t$DB->query( '\n\t\t\tALTER TABLE T_categories\n\t\t\t\tADD UNIQUE cat_urlname ( cat_urlname )' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Updating Settings... ';\n\t\t$DB->query( '\n      UPDATE T_settings\n         SET set_value = \"disabled\"\n       WHERE set_name = \"links_extrapath\"\n         AND set_value = 0' );\n\t\t$DB->query( '\n      UPDATE T_settings\n         SET set_value = \"ymd\"\n       WHERE set_name = \"links_extrapath\"\n         AND set_value <> 0' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9406' );\n\t}\n\n\n\tif( $old_db_version < 9407 )\n\t{\n\t\techo 'Moving general settings to blog settings... ';\n\t\t$DB->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t             SELECT blog_ID, set_name, set_value\n\t\t\t\t\t\t\t\t\t FROM T_blogs, T_settings\n\t\t\t\t\t\t\t\t\tWHERE set_name = \"posts_per_page\"\n\t\t\t\t\t\t\t\t\t   OR set_name = \"what_to_show\"\n\t\t\t\t\t\t\t\t\t   OR set_name = \"archive_mode\"' );\n\t\t$DB->query( 'DELETE FROM T_settings\n\t\t\t\t\t\t\t\t\tWHERE set_name = \"posts_per_page\"\n\t\t\t\t\t\t\t\t\t   OR set_name = \"what_to_show\"\n\t\t\t\t\t\t\t\t\t   OR set_name = \"archive_mode\"' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading blogs table... ';\n\t\t$query = \"ALTER TABLE T_blogs\n\t\t\t\t\t\t\tDROP COLUMN blog_force_skin\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading groups table... ';\n\t\t$query = \"ALTER TABLE T_groups\n\t\t\t\t\t\t\tCHANGE COLUMN grp_perm_files grp_perm_files enum('none','view','add','edit','all') NOT NULL default 'none'\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading files table... ';\n\t\t$query = \"ALTER TABLE T_files\n\t\t\t\t\t\t\tCHANGE COLUMN file_root_type file_root_type enum('absolute','user','group','collection','skins') not null default 'absolute'\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Updating file types... ';\n\t\t// Only change this if it's close enough to a default install (non customized)\n\t\t$DB->query( \"UPDATE T_filetypes\n\t\t\t\t\t\t\t\t\t\tSET ftyp_viewtype = 'text'\n\t\t\t\t\t\t\t\t\tWHERE ftyp_ID = 12\n\t\t\t\t\t\t\t\t\t\tAND ftyp_extensions = 'php php3 php4 php5 php6'\n\t\t\t\t\t\t\t\t\t\tAND ftyp_mimetype ='application/x-httpd-php'\n\t\t\t\t\t\t\t\t\t\tAND ftyp_icon = 'php.gif'\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Remove obsolete user settings... ';\n\t\t$DB->query( 'DELETE FROM '.$tableprefix.'usersettings\n\t\t\t\t\t\t\t\t\tWHERE uset_name = \"plugins_disp_avail\"' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9407' );\n\t}\n\n\n\tif( $old_db_version < 9408 )\n\t{\n\t\techo 'Creating skins table... ';\n\t\t$DB->query( 'CREATE TABLE T_skins__skin (\n              skin_ID      int(10) unsigned      NOT NULL auto_increment,\n              skin_name    varchar(32)           NOT NULL,\n              skin_type    enum(\\'normal\\',\\'feed\\') NOT NULL default \\'normal\\',\n              skin_folder  varchar(32)           NOT NULL,\n              PRIMARY KEY skin_ID (skin_ID),\n              UNIQUE skin_folder( skin_folder ),\n              KEY skin_name( skin_name )\n            )' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Creating skin containers table... ';\n\t\t$DB->query( 'CREATE TABLE T_skins__container (\n              sco_skin_ID   int(10) unsigned      NOT NULL,\n              sco_name      varchar(40)           NOT NULL,\n              PRIMARY KEY (sco_skin_ID, sco_name)\n            )' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Creating widgets table... ';\n\t\t$DB->query( 'CREATE TABLE T_widget (\n \t\t\t\t\t\twi_ID\t\t\t\t\tINT(10) UNSIGNED auto_increment,\n\t\t\t\t\t\twi_coll_ID    INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\t\twi_sco_name   VARCHAR( 40 ) NOT NULL,\n\t\t\t\t\t\twi_order\t\t\tINT(10) UNSIGNED NOT NULL,\n\t\t\t\t\t\twi_type       ENUM( \\'core\\', \\'plugin\\' ) NOT NULL DEFAULT \\'core\\',\n\t\t\t\t\t\twi_code       VARCHAR(32) NOT NULL,\n\t\t\t\t\t\twi_params     TEXT NULL,\n\t\t\t\t\t\tPRIMARY KEY ( wi_ID ),\n\t\t\t\t\t\tUNIQUE wi_order( wi_coll_ID, wi_sco_name, wi_order )\n          )' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tinstall_basic_skins( false );\n\n\t\techo 'Updating blogs table... ';\n\t\t$DB->query( 'ALTER TABLE T_blogs\n\t\t\t\t\t\t\t\t ALTER COLUMN blog_allowtrackbacks SET DEFAULT 0,\n\t\t\t\t\t\t\t\t\tDROP COLUMN blog_default_skin,\n\t\t\t\t\t\t\t\t\t ADD COLUMN blog_owner_user_ID   int(11) unsigned NOT NULL default 1 AFTER blog_name,\n\t\t\t\t\t\t\t\t\t ADD COLUMN blog_skin_ID INT(10) UNSIGNED NOT NULL DEFAULT 1 AFTER blog_allowusercss' );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\t/**\n\t\t* Install basic widgets.\n\t\t*/\n\t\tfunction install_basic_widgets_9408()\n\t\t{\n\t\t\t/**\n\t\t\t* @var DB\n\t\t\t*/\n\t\t\tglobal $DB;\n\n\t\t\tload_funcs( 'widgets/_widgets.funcs.php' );\n\n\t\t\t$blog_ids = $DB->get_assoc( 'SELECT blog_ID, \"std\" FROM T_blogs' );\n\n\t\t\tforeach( $blog_ids as $blog_id => $blog_type )\n\t\t\t{\n\t\t\t\ttask_begin( 'Installing default widgets for blog #'.$blog_id.'... ' );\n\t\t\t\tinsert_basic_widgets_9408( $blog_id, true, $blog_type );\n\t\t\t\ttask_end();\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Add a widget to global array in order to insert it in DB by single SQL query later\n\t\t *\n\t\t * @param integer Blog ID\n\t\t * @param string Container name\n\t\t * @param string Type\n\t\t * @param string Code\n\t\t * @param integer Order\n\t\t * @param array|string|NULL Widget params\n\t\t */\n\t\tfunction add_basic_widget_9408( $blog_ID, $container_name, $code, $type, $order, $params = NULL )\n\t\t{\n\t\t\tglobal $basic_widgets_insert_sql_rows, $DB;\n\n\t\t\tif( is_null( $params ) )\n\t\t\t{ // NULL\n\t\t\t\t$params = 'NULL';\n\t\t\t}\n\t\t\telseif( is_array( $params ) )\n\t\t\t{ // array\n\t\t\t\t$params = $DB->quote( serialize( $params ) );\n\t\t\t}\n\t\t\telse\n\t\t\t{ // string\n\t\t\t\t$params = $DB->quote( $params );\n\t\t\t}\n\n\t\t\t$basic_widgets_insert_sql_rows[] = '( '\n\t\t\t\t.$blog_ID.', '\n\t\t\t\t.$DB->quote( $container_name ).', '\n\t\t\t\t.$order.', '\n\t\t\t\t.$DB->quote( $type ).', '\n\t\t\t\t.$DB->quote( $code ).', '\n\t\t\t\t.$params.' )';\n\t\t}\n\t\t/**\n\t\t * Insert the widgets for the blog\n\t\t *\n\t\t * @param integer should never be 0\n\t\t * @param boolean should be true only when it's called after initial install\n\t\t * @param string Kind of blog ( 'std', 'photo', 'group', 'forum' )\n\t\t */\n\t\tfunction insert_basic_widgets_9408( $blog_id, $initial_install = false, $kind = '' )\n\t\t{\n\t\t\tglobal $DB, $install_test_features, $basic_widgets_insert_sql_rows;\n\n\t\t\t// Initialize this array first time and clear after previous call of this function\n\t\t\t$basic_widgets_insert_sql_rows = array();\n\n\t\t\t// Handle all blog IDs which can go from function create_demo_contents()\n\t\t\tglobal $blog_home_ID, $blog_a_ID, $blog_b_ID, $blog_photoblog_ID, $blog_forums_ID, $blog_manual_ID, $events_blog_ID;\n\t\t\t$blog_home_ID = intval( $blog_home_ID );\n\t\t\t$blog_a_ID = intval( $blog_a_ID );\n\t\t\t$blog_b_ID = intval( $blog_b_ID );\n\t\t\t$blog_photoblog_ID = intval( $blog_photoblog_ID );\n\t\t\t$blog_forums_ID = intval( $blog_forums_ID );\n\t\t\t$blog_manual_ID = intval( $blog_manual_ID );\n\t\t\t$events_blog_ID = intval( $events_blog_ID );\n\n\t\t\t$default_blog_param = 's:7:\"blog_ID\";s:0:\"\";';\n\t\t\tif( $initial_install && ! empty( $blog_photoblog_ID ) )\n\t\t\t{ // In the case of initial install, we grab photos out of the photoblog (Blog #4)\n\t\t\t\t$default_blog_param = 's:7:\"blog_ID\";s:1:\"'.intval( $blog_photoblog_ID ).'\";';\n\t\t\t}\n\n\n\t\t\t/* Header */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Header', 'coll_title', 'core', 1 );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Header', 'coll_tagline', 'core', 2 );\n\n\n\t\t\t/* Menu */\n\t\t\tif( $kind != 'main' )\n\t\t\t{ // Don't add widgets to Menu container for Main collections\n\t\t\t\t// Home page\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 5, array( 'link_type' => 'home' ) );\n\t\t\t\tif( $blog_id == $blog_b_ID )\n\t\t\t\t{ // Recent Posts\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 10, array( 'link_type' => 'recentposts', 'link_text' => T_('News') ) );\n\t\t\t\t}\n\t\t\t\tif( $kind == 'forum' )\n\t\t\t\t{ // Latest Topics and Replies ONLY for forum\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 13, array( 'link_type' => 'recentposts', 'link_text' => T_('Latest topics') ) );\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 15, array( 'link_type' => 'latestcomments', 'link_text' => T_('Latest replies') ) );\n\t\t\t\t}\n\t\t\t\tif( $kind == 'manual' )\n\t\t\t\t{ // Latest Topics and Replies ONLY for forum\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 13, array( 'link_type' => 'recentposts', 'link_text' => T_('Latest pages') ) );\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 15, array( 'link_type' => 'latestcomments', 'link_text' => T_('Latest comments') ) );\n\t\t\t\t}\n\t\t\t\tif( $kind == 'photo' )\n\t\t\t\t{ // Add menu with Photo index\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 18, array( 'link_type' => 'mediaidx', 'link_text' => T_('Index') ) );\n\t\t\t\t}\n\t\t\t\tif( $kind == 'forum' )\n\t\t\t\t{ // Add menu with User Directory\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 20, array( 'link_type' => 'users' ) );\n\t\t\t\t}\n\t\t\t\t// Pages list:\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'coll_page_list', 'core', 25 );\n\t\t\t\tif( $kind == 'forum' )\n\t\t\t\t{ // My Profile\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 30, array( 'link_type' => 'myprofile' ) );\n\t\t\t\t}\n\t\t\t\tif( $kind == 'std' )\n\t\t\t\t{ // Categories\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 33, array( 'link_type' => 'catdir' ) );\n\t\t\t\t\t// Archives\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 35, array( 'link_type' => 'arcdir' ) );\n\t\t\t\t\t// Latest comments\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 37, array( 'link_type' => 'latestcomments' ) );\n\t\t\t\t}\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'msg_menu_link', 'core', 50, array( 'link_type' => 'messages' ) );\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'msg_menu_link', 'core', 60, array( 'link_type' => 'contacts', 'show_badge' => 0 ) );\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 70, array( 'link_type' => 'login' ) );\n\t\t\t\tif( $kind == 'forum' )\n\t\t\t\t{ // Register\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 80, array( 'link_type' => 'register' ) );\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t/* Item Single */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Item Single', 'item_content', 'core', 10 );\n\t\t\tif( $blog_id != $blog_a_ID && $kind != 'forum' && ( empty( $events_blog_ID ) || $blog_id != $events_blog_ID ) )\n\t\t\t{ // Item Tags\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Item Single', 'item_tags', 'core', 20 );\n\t\t\t}\n\t\t\tif( $blog_id == $blog_b_ID )\n\t\t\t{ // About Author\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Item Single', 'item_about_author', 'core', 25 );\n\t\t\t}\n\t\t\tif( ( $blog_id == $blog_a_ID || ( ! empty( $events_blog_ID ) && $blog_id == $events_blog_ID ) ) && ! empty( $install_test_features ) )\n\t\t\t{ // Google Maps\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Item Single', 'evo_Gmaps', 'plugin', 30 );\n\t\t\t}\n\t\t\tif( $blog_id == $blog_a_ID || $kind == 'manual' )\n\t\t\t{ // Small Print\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Item Single', 'item_small_print', 'core', 40, array( 'format' => ( $blog_id == $blog_a_ID ? 'standard' : 'revision' ) ) );\n\t\t\t}\n\n\n\t\t\t/* Page Top */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Page Top', 'user_links', 'core', 10 );\n\n\n\t\t\t/* Sidebar */\n\t\t\tif( $kind == 'manual' )\n\t\t\t{\n\t\t\t\t$search_form_params = array( 'title' => T_('Search this manual:') );\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_search_form', 'core', 10, $search_form_params );\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'content_hierarchy', 'core', 20 );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif( ! empty( $install_test_features ) )\n\t\t\t\t{\n\t\t\t\t\tif( $kind != 'forum' && $kind != 'manual' )\n\t\t\t\t\t{ // Current filters widget\n\t\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_current_filters', 'core', 5 );\n\t\t\t\t\t}\n\t\t\t\t\t// User login widget\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'user_login', 'core', 10 );\n\t\t\t\t}\n\t\t\t\tif( ( !$initial_install || $blog_id != $blog_forums_ID ) && $kind != 'forum' )\n\t\t\t\t{ // Don't install these Sidebar widgets for blog 'Forums'\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_avatar', 'core', 20 );\n\t\t\t\t\tif( $blog_id > $blog_a_ID )\n\t\t\t\t\t{\n\t\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'evo_Calr', 'plugin', 30 );\n\t\t\t\t\t}\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_longdesc', 'core', 40, array( 'title' => '$title$' ) );\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_search_form', 'core', 50 );\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_category_list', 'core', 60 );\n\n\t\t\t\t\tif( $blog_id == $blog_home_ID )\n\t\t\t\t\t{ // Advertisements, Install only for blog #1 home blog\n\t\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_item_list', 'core', 70, array(\n\t\t\t\t\t\t\t\t'title' => 'Advertisement (Demo)',\n\t\t\t\t\t\t\t\t'item_type' => 4000,\n\t\t\t\t\t\t\t\t'blog_ID' => $blog_id,\n\t\t\t\t\t\t\t\t'order_by' => 'RAND',\n\t\t\t\t\t\t\t\t'limit' => 1,\n\t\t\t\t\t\t\t\t'disp_title' => false,\n\t\t\t\t\t\t\t\t'item_title_link_type' => 'linkto_url',\n\t\t\t\t\t\t\t\t'attached_pics' => 'first',\n\t\t\t\t\t\t\t\t'item_pic_link_type' => 'linkto_url',\n\t\t\t\t\t\t\t\t'thumb_size' => 'fit-160x160',\n\t\t\t\t\t\t\t) );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( $blog_id != $blog_b_ID )\n\t\t\t\t\t{\n\t\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_media_index', 'core', 80, 'a:11:{s:5:\"title\";s:12:\"Random photo\";s:10:\"thumb_size\";s:11:\"fit-160x120\";s:12:\"thumb_layout\";s:4:\"grid\";s:12:\"grid_nb_cols\";s:1:\"1\";s:5:\"limit\";s:1:\"1\";s:8:\"order_by\";s:4:\"RAND\";s:9:\"order_dir\";s:3:\"ASC\";'.$default_blog_param.'s:11:\"widget_name\";s:12:\"Random photo\";s:16:\"widget_css_class\";s:0:\"\";s:9:\"widget_ID\";s:0:\"\";}' );\n\t\t\t\t\t}\n\t\t\t\t\tif( ! empty( $blog_home_ID ) && ( $blog_id == $blog_a_ID || $blog_id == $blog_b_ID ) )\n\t\t\t\t\t{\n\t\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'linkblog', 'core', 90, array( 'blog_ID' => $blog_home_ID, 'item_type' => '3000' ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_xml_feeds', 'core', 100 );\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'mobile_skin_switcher', 'core', 110 );\n\t\t\t}\n\n\n\t\t\t/* Sidebar 2 */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar 2', 'coll_post_list', 'core', 1 );\n\t\t\tif( $blog_id == $blog_b_ID )\n\t\t\t{\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar 2', 'coll_link_list', 'core', 5, array( 'title' => 'Sidebar links', 'order_by' => 'RAND' ) );\n\t\t\t}\n\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar 2', 'coll_comment_list', 'core', 10 );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar 2', 'coll_media_index', 'core', 15, 'a:11:{s:5:\"title\";s:13:\"Recent photos\";s:10:\"thumb_size\";s:10:\"crop-80x80\";s:12:\"thumb_layout\";s:4:\"flow\";s:12:\"grid_nb_cols\";s:1:\"3\";s:5:\"limit\";s:1:\"9\";s:8:\"order_by\";s:9:\"datestart\";s:9:\"order_dir\";s:4:\"DESC\";'.$default_blog_param.'s:11:\"widget_name\";s:11:\"Photo index\";s:16:\"widget_css_class\";s:0:\"\";s:9:\"widget_ID\";s:0:\"\";}' );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar 2', 'free_html', 'core', 20, 'a:5:{s:5:\"title\";s:9:\"Sidebar 2\";s:7:\"content\";s:162:\"This is the \"Sidebar 2\" container. You can place any widget you like in here. In the evo toolbar at the top of this page, select \"Customize\", then \"Blog Widgets\".\";s:11:\"widget_name\";s:9:\"Free HTML\";s:16:\"widget_css_class\";s:0:\"\";s:9:\"widget_ID\";s:0:\"\";}' );\n\n\n\t\t\t/* Front Page Main Area */\n\t\t\tif( $kind == 'main' )\n\t\t\t{ // Display blog title and tagline for main blogs\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Front Page Main Area', 'coll_title', 'core', 1 );\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Front Page Main Area', 'coll_tagline', 'core', 2 );\n\t\t\t}\n\t\t\t$featured_intro_params = NULL;\n\t\t\tif( $kind == 'main' )\n\t\t\t{ // Hide a title of the front intro post\n\t\t\t\t$featured_intro_params = array( 'disp_title' => 0 );\n\t\t\t}\n\t\t\tadd_basic_widget_9408( $blog_id, 'Front Page Main Area', 'coll_featured_intro', 'core', 10, $featured_intro_params );\n\t\t\tif( $kind == 'main' )\n\t\t\t{ // Add user links widget only for main kind blogs\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Front Page Main Area', 'user_links', 'core', 15 );\n\t\t\t}\n\t\t\t$post_list_params = NULL;\n\t\t\tif( $kind == 'main' )\n\t\t\t{ // Display the posts from all other blogs if it is allowed by blogs setting \"Collections to aggregate\"\n\t\t\t\t$post_list_params = array(\n\t\t\t\t\t\t'blog_ID'          => '',\n\t\t\t\t\t\t'limit'            => 50,\n\t\t\t\t\t\t'attached_pics'    => 'first',\n\t\t\t\t\t\t'disp_first_image' => 'special',\n\t\t\t\t\t);\n\t\t\t}\n\t\t\tadd_basic_widget_9408( $blog_id, 'Front Page Main Area', 'coll_post_list', 'core', 20, $post_list_params );\n\t\t\tif( $kind != 'main' )\n\t\t\t{ // Don't install the \"Recent Commnets\" widget for Main blogs\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Front Page Main Area', 'coll_comment_list', 'core', 30 );\n\t\t\t}\n\n\n\t\t\t/* Front Page Secondary Area */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Front Page Secondary Area', 'org_members', 'core', 10 );\n\n\n\t\t\t/* Mobile Footer */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Footer', 'coll_longdesc', 'core', 10 );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Footer', 'mobile_skin_switcher', 'core', 20 );\n\n\n\t\t\t/* Mobile Navigation Menu */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Navigation Menu', 'coll_page_list', 'core', 10 );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Navigation Menu', 'menu_link', 'core', 20, array( 'link_type' => 'ownercontact' ) );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Navigation Menu', 'menu_link', 'core', 30, array( 'link_type' => 'home' ) );\n\t\t\tif( $kind == 'forum' )\n\t\t\t{ // Add menu with User Directory\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Navigation Menu', 'menu_link', 'core', 40, array( 'link_type' => 'users' ) );\n\t\t\t}\n\n\n\t\t\t/* Mobile Tools Menu */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Tools Menu', 'menu_link', 'core', 10, array( 'link_type' => 'login' ) );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Tools Menu', 'msg_menu_link', 'core', 20, array( 'link_type' => 'messages' ) );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Tools Menu', 'msg_menu_link', 'core', 30, array( 'link_type' => 'contacts', 'show_badge' => 0 ) );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Tools Menu', 'menu_link', 'core', 50, array( 'link_type' => 'logout' ) );\n\n\n\t\t\t// Check if there are widgets to create\n\t\t\tif( ! empty( $basic_widgets_insert_sql_rows ) )\n\t\t\t{ // Insert the widget records by single SQL query\n\t\t\t\t$DB->query( 'INSERT INTO T_widget( wi_coll_ID, wi_sco_name, wi_order, wi_type, wi_code, wi_params ) '\n\t\t\t\t\t\t\t\t\t .'VALUES '.implode( ', ', $basic_widgets_insert_sql_rows ) );\n\t\t\t}\n\t\t}\n\n\n\t\t// Install basic widgets:\n\t\tinstall_basic_widgets_9408();\n\n\t\tset_upgrade_checkpoint( '9408' );\n\t}\n\n\n\tif( $old_db_version < 9409 )\n\t{\n\t\t// Upgrade the blog access types:\n\t\techo 'Updating blogs access types... ';\n\t\t$DB->query( 'UPDATE T_blogs\n\t\t\t\t\t\t\t\t\t\tSET blog_access_type = \"absolute\"\n\t\t\t\t\t\t\t\t\tWHERE blog_siteurl LIKE \"http://%\"\n\t\t\t\t\t\t\t\t\t   OR blog_siteurl LIKE \"https://%\"' );\n\n\t\t$DB->query( 'UPDATE T_blogs\n\t\t\t\t\t\t\t\t\t\tSET blog_access_type = \"relative\",\n\t\t\t\t\t\t\t\t\t\t\t\tblog_siteurl = CONCAT( blog_siteurl, blog_stub )\n\t\t\t\t\t\t\t\t\tWHERE blog_access_type = \"stub\"' );\n\n\t\tdb_drop_col( 'T_blogs', 'blog_stub' );\n\n\t\techo \"OK.<br />\\n\";\n\n\n \t\techo 'Updating columns... ';\n\t\t$DB->query( \"ALTER TABLE T_groups CHANGE COLUMN grp_perm_stats grp_perm_stats enum('none','user','view','edit') NOT NULL default 'none'\" );\n\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms CHANGE COLUMN bloguser_perm_poststatuses bloguser_perm_poststatuses set('published','deprecated','protected','private','draft','redirected') NOT NULL default ''\" );\n\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms CHANGE COLUMN bloggroup_perm_poststatuses bloggroup_perm_poststatuses set('published','deprecated','protected','private','draft','redirected') NOT NULL default ''\" );\n\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}posts CHANGE COLUMN post_status post_status enum('published','deprecated','protected','private','draft','redirected') NOT NULL default 'published'\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9409' );\n\t}\n\n\n\tif( $old_db_version < 9410 )\n\t{\n \t\techo 'Updating columns... ';\n\t\t$DB->query( \"ALTER TABLE T_comments CHANGE COLUMN comment_status comment_status ENUM('published','deprecated','protected','private','draft','redirected') DEFAULT 'published' NOT NULL\" );\n\n\t\t$DB->query( \"ALTER TABLE T_sessions CHANGE COLUMN sess_data sess_data MEDIUMBLOB DEFAULT NULL\" );\n\n\t\t$DB->query( \"ALTER TABLE T_hitlog CHANGE COLUMN hit_referer_type hit_referer_type ENUM('search','blacklist','spam','referer','direct','self','admin') NOT NULL\" );\n\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9410' );\n\t}\n\n\n\tif( $old_db_version < 9411 )\n\t{\n\t\techo 'Adding default Post Types... ';\n\t\t$DB->query( \"\n\t\t\tREPLACE INTO {$tableprefix}posttypes ( ptyp_ID, ptyp_name )\n\t\t\tVALUES ( 1000, 'Page' ),\n\t\t\t\t\t\t ( 2000, 'Reserved' ),\n\t\t\t\t\t\t ( 3000, 'Reserved' ),\n\t\t\t\t\t\t ( 4000, 'Reserved' ),\n\t\t\t\t\t\t ( 5000, 'Reserved' ) \" );\n\t\techo \"OK.<br />\\n\";\n\t\tset_upgrade_checkpoint( '9411' );\n\t}\n\n\n\tif( $old_db_version < 9412 )\n\t{\n\t\techo 'Adding field for post excerpts... ';\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}posts ADD COLUMN post_excerpt  text NULL AFTER post_content\" );\n\t\techo \"OK.<br />\\n\";\n\t\tset_upgrade_checkpoint( '9412' );\n\t}\n\n\tif( $old_db_version < 9414 )\n\t{\n\t\techo \"Renaming tables...\";\n\t\t$DB->query( \"RENAME TABLE {$tableprefix}item__prerendering TO T_items__prerendering\" );\n\t\t$DB->query( \"RENAME TABLE {$tableprefix}poststatuses TO T_items__status\" );\n\t\t$DB->query( \"RENAME TABLE {$tableprefix}posttypes TO T_items__type\" );\n\t\t$DB->query( \"RENAME TABLE {$tableprefix}posts TO T_items__item\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo \"Creating Tag tables...\";\n\t\t$DB->query( \"CREATE TABLE T_items__tag (\n\t\t      tag_ID   int(11) unsigned not null AUTO_INCREMENT,\n\t\t      tag_name varchar(50) not null,\n\t\t      primary key (tag_ID),\n\t\t      UNIQUE tag_name( tag_name )\n\t\t    )\" );\n\n\t\t$DB->query( \"CREATE TABLE T_items__itemtag (\n\t\t      itag_itm_ID int(11) unsigned NOT NULL,\n\t\t      itag_tag_ID int(11) unsigned NOT NULL,\n\t\t      PRIMARY KEY (itag_itm_ID, itag_tag_ID),\n\t\t      UNIQUE tagitem ( itag_tag_ID, itag_itm_ID )\n\t\t    )\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9414' );\n\t}\n\n\n\tif( $old_db_version < 9416 )\n\t{\n\t\techo \"Updating blogs table...\";\n\t\t$DB->query( \"ALTER TABLE T_blogs\n\t\t\t\t\t\t\t\t\tADD COLUMN blog_advanced_perms  TINYINT(1) NOT NULL default 0 AFTER blog_owner_user_ID,\n\t\t\t\t\t\t\t\t\tDROP COLUMN blog_staticfilename\" );\n\t\t$DB->query( \"UPDATE T_blogs\n\t\t\t\t\t\t\t\t\t  SET blog_advanced_perms = 1\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo \"Additionnal blog permissions...\";\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms\n\t\t\t\t\t\t\t\t\tADD COLUMN bloguser_perm_admin tinyint NOT NULL default 0 AFTER bloguser_perm_properties,\n\t\t\t\t\t\t\t\t\tADD COLUMN bloguser_perm_edit  ENUM('no','own','lt','le','all','redirected') NOT NULL default 'no' AFTER bloguser_perm_poststatuses\" );\n\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms\n\t\t\t\t\t\t\t\t\tADD COLUMN bloggroup_perm_admin tinyint NOT NULL default 0 AFTER bloggroup_perm_properties,\n\t\t\t\t\t\t\t\t\tADD COLUMN bloggroup_perm_edit  ENUM('no','own','lt','le','all','redirected') NOT NULL default 'no' AFTER bloggroup_perm_poststatuses\" );\n\n\t\t// Preserve full admin perms:\n\t\t$DB->query( \"UPDATE T_coll_user_perms\n\t\t\t\t\t\t\t\t\t\tSET bloguser_perm_admin = 1\n\t\t\t\t\t\t\t\t\tWHERE bloguser_perm_properties <> 0\" );\n\t\t$DB->query( \"UPDATE T_coll_group_perms\n\t\t\t\t\t\t\t\t\t\tSET bloggroup_perm_admin = 1\n\t\t\t\t\t\t\t\t\tWHERE bloggroup_perm_properties <> 0\" );\n\n\t\t// Preserve full edit perms:\n\t\t$DB->query( \"UPDATE T_coll_user_perms\n\t\t\t\t\t\t\t\t\t\tSET bloguser_perm_edit = 'all'\" );\n\t\t$DB->query( \"UPDATE T_coll_group_perms\n\t\t\t\t\t\t\t\t\t\tSET bloggroup_perm_edit = 'all'\" );\n\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9416' );\n\t}\n\n\n\tif( $old_db_version < 9500 )\n\t{\n\t\ttask_begin( 'Normalizing columns...' );\n\t\t$DB->query( 'ALTER TABLE T_blogs\n\t\t\t\t\t\t\t\t\t\tALTER COLUMN blog_shortname SET DEFAULT \\'\\',\n\t\t\t\t\t\t\t\t\t\tALTER COLUMN blog_tagline SET DEFAULT \\'\\',\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN blog_description blog_description     varchar(250) NULL default \\'\\',\n\t\t\t\t\t\t\t\t\t\tALTER COLUMN blog_siteurl SET DEFAULT \\'\\'' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Normalizing dates...' );\n\t\t$DB->query( 'UPDATE T_users\n\t\t\t\t\t\t\t\t\t\tSET dateYMDhour = \\'2000-01-01 00:00:00\\'\n\t\t\t\t\t\t\t\t\tWHERE dateYMDhour = \\'0000-00-00 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_users\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN dateYMDhour DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'UPDATE T_comments\n\t\t\t\t\t\t\t\t\t\tSET comment_date = \\'2000-01-01 00:00:00\\'\n\t\t\t\t\t\t\t\t\tWHERE comment_date = \\'0000-00-00 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN comment_date DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Normalizing cron jobs...' );\n\t\t$DB->query( 'UPDATE T_cron__task\n\t\t\t\t\t\t\t\t\t\tSET ctsk_controller = REPLACE(ctsk_controller, \"cron/_\", \"cron/jobs/_\" )\n\t\t\t\t\t\t\t\t\tWHERE ctsk_controller LIKE \"cron/_%\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Extending comments table...' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\t\t\t\t\t\t\tADD COLUMN comment_rating     TINYINT(1) NULL DEFAULT NULL AFTER comment_content,\n\t\t\t\t\t\t\t\t\tADD COLUMN comment_featured   TINYINT(1) NOT NULL DEFAULT 0 AFTER comment_rating,\n\t\t\t\t\t\t\t\t\tADD COLUMN comment_nofollow   TINYINT(1) NOT NULL DEFAULT 1 AFTER comment_featured;');\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9500' );\n\t}\n\n\n\tif( $old_db_version < 9600 )\n\t{\t// 2.2.0\n\t\ttask_begin( 'Creating global cache table...' );\n\t\t$DB->query( 'CREATE TABLE T_global__cache (\n\t\t\t\t\t\t\t      cach_name VARCHAR( 30 ) NOT NULL ,\n\t\t\t\t\t\t\t      cach_cache MEDIUMBLOB NULL ,\n\t\t\t\t\t\t\t      PRIMARY KEY ( cach_name )\n\t\t\t\t\t\t\t    )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Altering posts table...' );\n\t\t$DB->query( 'ALTER TABLE T_items__item\n\t\t\t\t\t\t\t\t\t\tMODIFY COLUMN post_datestart DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\t\t\t\t\t\t\t\tMODIFY COLUMN post_datemodified DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\t\t\t\t\t\t\t\tADD COLUMN post_order    float NULL AFTER post_priority,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN post_featured tinyint(1) NOT NULL DEFAULT 0 AFTER post_order');\n\t\t$DB->query( 'ALTER TABLE T_items__item\n\t\t\t\t\t\t\t\t\t\tADD INDEX post_order( post_order )' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9600' );\n\t}\n\n\n\tif( $old_db_version < 9700 )\n\t{\t// 2.3.2\n\t  echo 'Creating PodCast Post Type... ';\n\t\t$DB->query( \"\n\t\t\tREPLACE INTO T_items__type ( ptyp_ID, ptyp_name )\n\t\t\tVALUES ( 2000, 'Podcast' )\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\t// 2.4.0\n\t  echo 'Adding additional group permissions... ';\n\t\t$DB->query( \"\n\t      ALTER TABLE T_groups\n\t\t\t\t\tADD COLUMN grp_perm_bypass_antispam         TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_blogs,\n\t\t\t\t\tADD COLUMN grp_perm_xhtmlvalidation         VARCHAR(10) NOT NULL default 'always' AFTER grp_perm_bypass_antispam,\n\t\t\t\t\tADD COLUMN grp_perm_xhtmlvalidation_xmlrpc  VARCHAR(10) NOT NULL default 'always' AFTER grp_perm_xhtmlvalidation,\n\t\t\t\t\tADD COLUMN grp_perm_xhtml_css_tweaks        TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_xhtmlvalidation_xmlrpc,\n      \t\tADD COLUMN grp_perm_xhtml_iframes           TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_xhtml_css_tweaks,\n      \t\tADD COLUMN grp_perm_xhtml_javascript        TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_xhtml_iframes,\n\t\t\t\t\tADD COLUMN grp_perm_xhtml_objects           TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_xhtml_javascript \" );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9700' );\n\t}\n\n\n\tif( $old_db_version < 9800 )\n\t{\t// 2.5.0\n\t\techo 'Upgrading blogs table... ';\n\t\tdb_drop_col( 'T_blogs', 'blog_commentsexpire' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading items table... ';\n\t\t$DB->query( \"ALTER TABLE T_items__item\n\t\t\tCHANGE COLUMN post_urltitle post_urltitle VARCHAR(210) NULL DEFAULT NULL,\n\t\t\tCHANGE COLUMN post_order    post_order DOUBLE NULL,\n\t\t\tADD COLUMN post_titletag  VARCHAR(255) NULL DEFAULT NULL AFTER post_urltitle,\n\t\t\tADD COLUMN post_double1   DOUBLE NULL COMMENT 'Custom double value 1' AFTER post_priority,\n\t\t\tADD COLUMN post_double2   DOUBLE NULL COMMENT 'Custom double value 2' AFTER post_double1,\n\t\t\tADD COLUMN post_double3   DOUBLE NULL COMMENT 'Custom double value 3' AFTER post_double2,\n\t\t\tADD COLUMN post_double4   DOUBLE NULL COMMENT 'Custom double value 4' AFTER post_double3,\n\t\t\tADD COLUMN post_double5   DOUBLE NULL COMMENT 'Custom double value 5' AFTER post_double4,\n\t\t\tADD COLUMN post_varchar1  VARCHAR(255) NULL COMMENT 'Custom varchar value 1' AFTER post_double5,\n\t\t\tADD COLUMN post_varchar2  VARCHAR(255) NULL COMMENT 'Custom varchar value 2' AFTER post_varchar1,\n\t\t\tADD COLUMN post_varchar3  VARCHAR(255) NULL COMMENT 'Custom varchar value 3' AFTER post_varchar2\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Creating keyphrase table... ';\n\t\t$query = \"CREATE TABLE T_track__keyphrase (\n            keyp_ID      INT UNSIGNED NOT NULL AUTO_INCREMENT,\n            keyp_phrase  VARCHAR( 255 ) NOT NULL,\n            PRIMARY KEY        ( keyp_ID ),\n            UNIQUE keyp_phrase ( keyp_phrase )\n          )\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading hitlog table... ';\n\t\tevo_flush();\n\t\t$query = \"ALTER TABLE T_hitlog\n\t\t\t CHANGE COLUMN hit_ID hit_ID              INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\t CHANGE COLUMN hit_datetime hit_datetime  DATETIME NOT NULL DEFAULT '2000-01-01 00:00:00',\n\t\t\t ADD COLUMN hit_keyphrase_keyp_ID         INT UNSIGNED DEFAULT NULL AFTER hit_referer_dom_ID,\n\t\t\t ADD INDEX hit_remote_addr ( hit_remote_addr ),\n\t\t\t ADD INDEX hit_sess_ID        ( hit_sess_ID )\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading sessions table... ';\n\t\t$DB->query( \"ALTER TABLE T_sessions\n\t\t\tALTER COLUMN sess_lastseen SET DEFAULT '2000-01-01 00:00:00',\n\t\t\tADD COLUMN sess_hitcount  INT(10) UNSIGNED NOT NULL DEFAULT 1 AFTER sess_key,\n\t\t\tADD KEY sess_user_ID (sess_user_ID)\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Creating goal tracking table... ';\n    $DB->query( \"CREATE TABLE T_track__goal(\n\t\t\t\t\t  goal_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\t\t\t  goal_name varchar(50) default NULL,\n\t\t\t\t\t  goal_key varchar(32) default NULL,\n\t\t\t\t\t  goal_redir_url varchar(255) default NULL,\n\t\t\t\t\t  goal_default_value double default NULL,\n\t\t\t\t\t  PRIMARY KEY (goal_ID),\n\t\t\t\t\t  UNIQUE KEY goal_key (goal_key)\n          )\" );\n\n    $DB->query( \"CREATE TABLE T_track__goalhit (\n\t\t\t\t\t  ghit_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\t\t\t  ghit_goal_ID    int(10) unsigned NOT NULL,\n\t\t\t\t\t  ghit_hit_ID     int(10) unsigned NOT NULL,\n\t\t\t\t\t  ghit_params     TEXT default NULL,\n\t\t\t\t\t  PRIMARY KEY  (ghit_ID),\n\t\t\t\t\t  KEY ghit_goal_ID (ghit_goal_ID),\n\t\t\t\t\t  KEY ghit_hit_ID (ghit_hit_ID)\n         )\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9800' );\n\t}\n\n\n\tif( $old_db_version < 9900 )\n\t{\t// 3.0 part 1\n\t\ttask_begin( 'Updating keyphrases in hitlog table... ' );\n\t\tload_class( 'sessions/model/_hit.class.php', 'Hit' );\n\t\t// New Hit object creation was added later, to fix upgrades from very old versions.\n\t\t// We create a new temp Hit object to be able to call the Hit::extract_params_from_referer() function which was static when this upgrade block was created.\n\t\t$tempHit = new Hit();\n\t\t$sql = 'SELECT SQL_NO_CACHE hit_ID, hit_referer\n  \t\t          FROM T_hitlog\n   \t\t         WHERE hit_referer_type = \"search\"\n\t\t           AND hit_keyphrase_keyp_ID IS NULL'; // this line just in case we crashed in the middle, so we restart where we stopped\n\t\t$rows = $DB->get_results( $sql, OBJECT, 'get all search hits' );\n\t\tforeach( $rows as $row )\n\t\t{\n\t\t\t$params = $tempHit->extract_params_from_referer( $row->hit_referer );\n\t\t\tif( empty( $params['keyphrase'] ) )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$DB->begin();\n\n\t\t\t$sql = 'SELECT keyp_ID\n\t\t\t          FROM T_track__keyphrase\n\t\t\t         WHERE keyp_phrase = '.$DB->quote($params['keyphrase']);\n\t\t\t$keyp_ID = $DB->get_var( $sql, 0, 0, 'Get keyphrase ID' );\n\n\t\t\tif( empty( $keyp_ID ) )\n\t\t\t{\n\t\t\t\t$sql = 'INSERT INTO T_track__keyphrase( keyp_phrase )\n\t\t\t\t        VALUES ('.$DB->quote($params['keyphrase']).')';\n\t\t\t\t$DB->query( $sql, 'Add new keyphrase' );\n\t\t\t\t$keyp_ID = $DB->insert_id;\n\t\t\t}\n\n\t\t\t$DB->query( 'UPDATE T_hitlog\n\t\t\t                SET hit_keyphrase_keyp_ID = '.$keyp_ID.'\n\t\t\t              WHERE hit_ID = '.$row->hit_ID, 'Update hit' );\n\n\t\t\t$DB->commit();\n\t\t\techo \". \\n\";\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading widgets table... ' );\n\t\t$DB->query( \"ALTER TABLE T_widget\n\t\t\tCHANGE COLUMN wi_order wi_order INT(10) NOT NULL\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Files table... ' );\n\t\t$DB->query( \"ALTER TABLE T_files\n\t\t\t\t\t\t\t\tCHANGE COLUMN file_root_type file_root_type enum('absolute','user','collection','shared','skins') not null default 'absolute'\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9900' );\n\t}\n\n\tif( $old_db_version < 9910 )\n\t{\t// 3.0 part 2\n\n\t\ttask_begin( 'Upgrading Blogs table... ' );\n\t\t$DB->query( \"ALTER TABLE T_blogs CHANGE COLUMN blog_name blog_name varchar(255) NOT NULL default ''\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding new Post Types...' );\n\t\t$DB->query( \"\n\t\t\tREPLACE INTO T_items__type( ptyp_ID, ptyp_name )\n\t\t\tVALUES ( 1500, 'Intro-Main' ),\n\t\t\t\t\t\t ( 1520, 'Intro-Cat' ),\n\t\t\t\t\t\t ( 1530, 'Intro-Tag' ),\n\t\t\t\t\t\t ( 1570, 'Intro-Sub' ),\n\t\t\t\t\t\t ( 1600, 'Intro-All' ) \" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating User table' );\n\t\t$DB->query( \"ALTER TABLE T_users\n\t\t\t\t\t\t\t\t\tADD COLUMN user_avatar_file_ID int(10) unsigned default NULL AFTER user_validated\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for User field definitions' );\n\t\t$DB->query( \"CREATE TABLE T_users__fielddefs (\n\t\t\t\tufdf_ID int(10) unsigned NOT NULL,\n\t\t\t\tufdf_type char(8) NOT NULL,\n\t\t\t\tufdf_name varchar(255) collate latin1_general_ci NOT NULL,\n\t\t\t\tPRIMARY KEY  (ufdf_ID)\n\t\t\t)\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating default field definitions...' );\n\t\t$DB->query( \"\n\t    INSERT INTO T_users__fielddefs (ufdf_ID, ufdf_type, ufdf_name)\n\t\t\t VALUES ( 10000, 'email',    'MSN/Live IM'),\n\t\t\t\t\t\t\t( 10100, 'word',     'Yahoo IM'),\n\t\t\t\t\t\t\t( 10200, 'word',     'AOL AIM'),\n\t\t\t\t\t\t\t( 10300, 'number',   'ICQ ID'),\n\t\t\t\t\t\t\t( 40000, 'phone',    'Skype'),\n\t\t\t\t\t\t\t( 50000, 'phone',    'Main phone'),\n\t\t\t\t\t\t\t( 50100, 'phone',    'Cell phone'),\n\t\t\t\t\t\t\t( 50200, 'phone',    'Office phone'),\n\t\t\t\t\t\t\t( 50300, 'phone',    'Home phone'),\n\t\t\t\t\t\t\t( 60000, 'phone',    'Office FAX'),\n\t\t\t\t\t\t\t( 60100, 'phone',    'Home FAX'),\n\t\t\t\t\t\t\t(100000, 'url',      'Website'),\n\t\t\t\t\t\t\t(100100, 'url',      'Blog'),\n\t\t\t\t\t\t\t(110000, 'url',      'Linkedin'),\n\t\t\t\t\t\t\t(120000, 'url',      'Twitter'),\n\t\t\t\t\t\t\t(130100, 'url',      'Facebook'),\n\t\t\t\t\t\t\t(130200, 'url',      'Myspace'),\n\t\t\t\t\t\t\t(140000, 'url',      'Flickr'),\n\t\t\t\t\t\t\t(150000, 'url',      'YouTube'),\n\t\t\t\t\t\t\t(160000, 'url',      'Digg'),\n\t\t\t\t\t\t\t(160100, 'url',      'StumbleUpon'),\n\t\t\t\t\t\t\t(200000, 'text',     'Role'),\n\t\t\t\t\t\t\t(200100, 'text',     'Company/Org.'),\n\t\t\t\t\t\t\t(200200, 'text',     'Division'),\n\t\t\t\t\t\t\t(211000, 'text',     'VAT ID'),\n\t\t\t\t\t\t\t(300000, 'text',     'Main address'),\n\t\t\t\t\t\t\t(300300, 'text',     'Home address');\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for User fields...' );\n\t\t$DB->query( \"CREATE TABLE {$tableprefix}users_fields (\n\t\t\t\tuf_ID      int(10) unsigned NOT NULL auto_increment,\n\t\t\t  uf_user_ID int(10) unsigned NOT NULL,\n\t\t\t  uf_ufdf_ID int(10) unsigned NOT NULL,\n\t\t\t  uf_varchar varchar(255) NOT NULL,\n\t\t\t  PRIMARY KEY (uf_ID)\n\t\t\t)\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9910' );\n\t}\n\n\tif( $old_db_version < 9920 )\n\t{\t// 3.1\n\t\ttask_begin( 'Upgrading Posts table... ' );\n\t\t// This is for old posts that may have a post type of NULL which should never happen. ptyp 1 is for regular posts\n\t\t$DB->query( \"UPDATE T_items__item\n\t\t\t\t\t\t\t\t\t\tSET post_ptyp_ID = 1\n\t\t\t\t\t\t\t\t\tWHERE post_ptyp_ID IS NULL\" );\n\t\t$DB->query( \"ALTER TABLE T_items__item\n\t\t\t\t\t\t\tCHANGE COLUMN post_ptyp_ID post_ptyp_ID int(10) unsigned NOT NULL DEFAULT 1\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Categories table... ' );\n\t\t$DB->query( \"ALTER TABLE T_categories\n\t\t\tCHANGE COLUMN cat_name cat_name varchar(255) NOT NULL,\n\t\t\tCHANGE COLUMN cat_description cat_description varchar(255) NULL DEFAULT NULL\" );\n\t\tdb_add_col( 'T_categories', 'cat_order', 'int(11) NULL DEFAULT NULL AFTER cat_description' );\n\t\tdb_add_index( 'T_categories', 'cat_order', 'cat_order' );\n\n\t\t$DB->query( \"UPDATE T_categories\n\t\t\t\t\tSET cat_order = cat_ID\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading widgets table... ' );\n\t\tdb_add_col( 'T_widget', 'wi_enabled', 'tinyint(1) NOT NULL DEFAULT 1 AFTER wi_order' );\n\t\ttask_end();\n\t}\n\tif( $old_db_version < 9930 )\n\t{\t// 3.1 continued\n\t\ttask_begin( 'Updating Post Types...' );\n\t\t$DB->query( \"\n\t\t\tREPLACE INTO T_items__type ( ptyp_ID, ptyp_name )\n\t\t\tVALUES ( 3000, 'Sidebar link' )\" );\n\t\techo \"OK.<br />\\n\";\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating items table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__item ENGINE=innodb\" );\t// fp> hum... this originally was a test :)\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating versions table...' );\n\t\t$DB->query( \"CREATE TABLE T_items__version (\n\t            iver_itm_ID        INT UNSIGNED NOT NULL ,\n\t            iver_edit_user_ID  INT UNSIGNED NOT NULL ,\n\t            iver_edit_datetime DATETIME NOT NULL ,\n\t            iver_status        ENUM('published','deprecated','protected','private','draft','redirected') NULL ,\n\t            iver_title         TEXT NULL ,\n\t            iver_content       MEDIUMTEXT NULL ,\n\t            INDEX iver_itm_ID ( iver_itm_ID )\n\t            ) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating group permissions...' );\n\t\t$DB->query( \"UPDATE T_groups\n\t\t\t\t\t\t\t\t\t\tSET grp_perm_xhtml_css_tweaks = 1\n\t\t\t\t\t\t\t\t\tWHERE grp_ID <= 3\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9930' );\n\t}\n\n\tif( $old_db_version < 9940 )\n\t{\t// 3.2\n\t\ttask_begin( 'Updating hitlog table...' );\n\t\t$DB->query( \"ALTER TABLE T_hitlog ADD COLUMN hit_serprank INT UNSIGNED DEFAULT NULL AFTER hit_keyphrase_keyp_ID\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating versions table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__version\n\t\t\t\t\t\t\t\tCHANGE COLUMN iver_edit_user_ID iver_edit_user_ID  INT UNSIGNED NULL\" );\n\t\ttask_end();\n\t}\n\n\tif( $old_db_version < 9950 )\n\t{\t// 3.3\n\t\ttask_begin( 'Altering Blogs table... ' );\n\t\t$DB->query( \"ALTER TABLE T_blogs CHANGE COLUMN blog_shortname blog_shortname varchar(255) default ''\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Altering default dates... ' );\n\t\t$DB->query( \"ALTER TABLE T_links\n      ALTER COLUMN link_datecreated SET DEFAULT '2000-01-01 00:00:00',\n      ALTER COLUMN link_datemodified SET DEFAULT '2000-01-01 00:00:00'\" );\n\t\t$DB->query( \"ALTER TABLE T_cron__task\n      ALTER COLUMN ctsk_start_datetime SET DEFAULT '2000-01-01 00:00:00'\" );\n\t\t$DB->query( \"ALTER TABLE T_cron__log\n      ALTER COLUMN clog_realstart_datetime SET DEFAULT '2000-01-01 00:00:00'\" );\n\t\ttask_end();\n\n \t\ttask_begin( 'Altering Items table... ' );\n\t\t$DB->query( \"ALTER TABLE T_items__item\n\t\t\tADD COLUMN post_metadesc VARCHAR(255) NULL DEFAULT NULL AFTER post_titletag,\n\t\t\tADD COLUMN post_metakeywords VARCHAR(255) NULL DEFAULT NULL AFTER post_metadesc,\n\t\t\tADD COLUMN post_editor_code VARCHAR(32) NULL COMMENT 'Plugin code of the editor used to edit this post' AFTER post_varchar3\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Forcing AutoP posts to html editor...' );\n\t\t$DB->query( 'UPDATE T_items__item\n\t\t\t\t\t\t\t\t\t\t\tSET post_editor_code = \"html\"\n\t\t\t\t\t\t\t\t\t\tWHERE post_renderers = \"default\"\n\t\t\t\t\t\t\t\t\t\t\t OR post_renderers LIKE \"%b2WPAutP%\"' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9950' );\n\t}\n\n\tif( $old_db_version < 9960 )\n\t{\t// 3.3\n\n\t\techo \"Renaming tables...\";\n\t\t$DB->save_error_state();\n\t\t$DB->halt_on_error = false;\n\t\t$DB->show_errors = false;\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}users_fields RENAME TO T_users__fields\" );\n\t\t$DB->restore_error_state();\n\t\techo \"OK.<br />\\n\";\n\n\t\t// fp> The following is more tricky to do with CHARACTER SET. During upgrade, we don't know what the admin actually wants.\n\t\ttask_begin( 'Making sure all tables use desired storage ENGINE as specified in the b2evo schema...' );\n\t\tforeach( $schema_queries as $table_name=>$table_def )\n\t\t{\n\t\t\tif( $DB->query( 'SHOW TABLES LIKE \\''.$table_name.'\\'' )\n\t\t\t\t&& preg_match( '/\\sENGINE\\s*=\\s*([a-z]+)/is', $table_def[1], $matches ) )\n\t\t\t{\t// If the table exists and has an ENGINE definition:\n\t\t\t\techo $table_name.':'.$matches[1].'<br />';\n\t\t\t\t$DB->query( \"ALTER TABLE $table_name ENGINE = \".$matches[1] );\n\t\t\t}\n\t\t}\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9960' );\n\t}\n\n\tif( $old_db_version < 9970 )\n\t{\t// 4.0 part 1\n\n\t\t// For create_default_currencies() and create_default_countries():\n\t\trequire_once dirname(__FILE__).'/_functions_create.php';\n\n\t\ttask_begin( 'Creating table for default currencies... ' );\n\t\t$DB->query( 'CREATE TABLE '.$tableprefix.'currency (\n\t\t\t\tcurr_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\t\tcurr_code char(3) NOT NULL,\n\t\t\t\tcurr_shortcut varchar(30) NOT NULL,\n\t\t\t\tcurr_name varchar(40) NOT NULL,\n\t\t\t\tPRIMARY KEY curr_ID (curr_ID),\n\t\t\t\tUNIQUE curr_code (curr_code)\n\t\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\tcreate_default_currencies( $tableprefix.'currency' );\n\n\t\ttask_begin( 'Creating table for default countries... ' );\n\t\t$DB->query( 'CREATE TABLE '.$tableprefix.'country (\n\t\t\t\tctry_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\t\tctry_code char(2) NOT NULL,\n\t\t\t\tctry_name varchar(40) NOT NULL,\n\t\t\t\tctry_curr_ID int(10) unsigned,\n\t\t\t\tPRIMARY KEY ctry_ID (ctry_ID),\n\t\t\t\tUNIQUE ctry_code (ctry_code)\n\t\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\tcreate_default_countries( $tableprefix.'country', false );\n\n\t\ttask_begin( 'Upgrading user permissions table... ' );\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms\n\t\t\tADD COLUMN bloguser_perm_page\t\ttinyint NOT NULL default 0 AFTER bloguser_perm_media_change,\n\t\t\tADD COLUMN bloguser_perm_intro\t\ttinyint NOT NULL default 0 AFTER bloguser_perm_page,\n\t\t\tADD COLUMN bloguser_perm_podcast\ttinyint NOT NULL default 0 AFTER bloguser_perm_intro,\n\t\t\tADD COLUMN bloguser_perm_sidebar\ttinyint NOT NULL default 0 AFTER bloguser_perm_podcast\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading group permissions table... ' );\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms\n\t\t\tADD COLUMN bloggroup_perm_page\t\ttinyint NOT NULL default 0 AFTER bloggroup_perm_media_change,\n\t\t\tADD COLUMN bloggroup_perm_intro\t\ttinyint NOT NULL default 0 AFTER bloggroup_perm_page,\n\t\t\tADD COLUMN bloggroup_perm_podcast\ttinyint NOT NULL default 0 AFTER bloggroup_perm_intro,\n\t\t\tADD COLUMN bloggroup_perm_sidebar\ttinyint NOT NULL default 0 AFTER bloggroup_perm_podcast\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users table... ' );\n\t\t$DB->query( \"ALTER TABLE T_users\n\t\t\tADD COLUMN user_ctry_ID int(10) unsigned NULL AFTER user_avatar_file_ID\" );\n\t\ttask_end();\n\n\t\t// Creating tables for messaging module\n\n\t\ttask_begin( 'Creating table for message threads... ' );\n\t\t$DB->query( \"CREATE TABLE T_messaging__thread (\n\t\t\tthrd_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\tthrd_title varchar(255) NOT NULL,\n\t\t\tthrd_datemodified datetime NOT NULL,\n\t\t\tPRIMARY KEY thrd_ID (thrd_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for messagee... ' );\n\t\t$DB->query( \"CREATE TABLE T_messaging__message (\n\t\t\tmsg_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\tmsg_author_user_ID int(10) unsigned NOT NULL,\n\t\t\tmsg_datetime datetime NOT NULL,\n\t\t\tmsg_thread_ID int(10) unsigned NOT NULL,\n\t\t\tmsg_text text NULL,\n\t\t\tPRIMARY KEY msg_ID (msg_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for message thread statuses... ' );\n\t\t$DB->query( \"CREATE TABLE T_messaging__threadstatus (\n\t\t\ttsta_thread_ID int(10) unsigned NOT NULL,\n\t\t\ttsta_user_ID int(10) unsigned NOT NULL,\n\t\t\ttsta_first_unread_msg_ID int(10) unsigned NULL,\n\t\t\tINDEX(tsta_user_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for messaging contacts... ' );\n\t\t$DB->query( \"CREATE TABLE T_messaging__contact (\n\t\t\tmct_from_user_ID int(10) unsigned NOT NULL,\n\t\t\tmct_to_user_ID int(10) unsigned NOT NULL,\n\t\t\tmct_blocked tinyint(1) default 0,\n\t\t\tmct_last_contact_datetime datetime NOT NULL,\n\t\t\tPRIMARY KEY mct_PK (mct_from_user_ID, mct_to_user_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading skins table... ' );\n\t\t$DB->query( \"ALTER TABLE T_skins__skin\n\t\t\t\t\t\tMODIFY skin_type enum('normal','feed','sitemap') NOT NULL default 'normal'\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Setting skin type of sitemap skin to \"sitemap\"... ' );\n\t\t$DB->query( \"UPDATE T_skins__skin\n\t\t\t\t\t\tSET skin_type = 'sitemap'\n\t\t\t\t\t\tWHERE skin_folder = '_sitemap'\" );\n\t\ttask_end();\n\n\t\t// Creating table for pluggable permissions\n\n\t\t// This table gets created during upgrade to v0.8.9 at checkpoint 8050\n\t\ttask_begin( 'Creating table for Group Settings... ' );\n\t\t$DB->query( \"CREATE TABLE IF NOT EXISTS T_groups__groupsettings (\n\t\t\tgset_grp_ID INT(11) UNSIGNED NOT NULL,\n\t\t\tgset_name VARCHAR(30) NOT NULL,\n\t\t\tgset_value VARCHAR(255) NULL,\n\t\t\tPRIMARY KEY (gset_grp_ID, gset_name)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\t// Rename T_usersettings table to T_users__usersettings\n\t\ttask_begin( 'Rename T_usersettings table to T_users__usersettings... ' );\n\t\t$DB->query( 'ALTER TABLE '.$tableprefix.'usersettings RENAME TO T_users__usersettings' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9970' );\n\t}\n\n\n\tif( $old_db_version < 9980 )\n\t{\t// 4.0 part 2\n\n\t\ttask_begin( 'Upgrading posts... ' );\n\t\t$DB->query( '\n\t\t\tUPDATE T_items__item\n\t\t\t   SET post_datestart = FROM_UNIXTIME( FLOOR(UNIX_TIMESTAMP(post_datestart)/60)*60 )\n\t\t\t WHERE post_datestart > NOW()' );\n\t\tdb_add_col( 'T_items__item', 'post_excerpt_autogenerated', 'TINYINT NULL DEFAULT NULL AFTER post_excerpt' );\n\t\tdb_add_col( 'T_items__item', 'post_dateset', 'tinyint(1) NOT NULL DEFAULT 1 AFTER post_assigned_user_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading countries... ' );\n\t\tdb_add_col( $tableprefix.'country', 'ctry_enabled', 'tinyint(1) NOT NULL DEFAULT 1 AFTER ctry_curr_ID' );\n\t\ttask_end();\n\n\n\t\ttask_begin( 'Upgrading links... ' );\n\n\t\t// Add link_position. Temporary allow NULL, set compatibility default, then do not allow NULL.\n\t\t// TODO: dh> actually, using \"teaser\" for the first link and \"aftermore\" for the rest would make more sense (and \"aftermore\" should get displayed with \"no-more\" posts anyway).\n\t\t//           Opinions? Could be heavy to transform this though..\n\t\t// fp> no, don't change past posts unexpectedly.\n\t\tdb_add_col( 'T_links', 'link_position', \"varchar(10) NULL AFTER link_title\" );\n\t\t$DB->query( \"UPDATE T_links SET link_position = 'teaser' WHERE link_position IS NULL\" );\n\t\tdb_add_col( 'T_links', 'link_position', \"varchar(10) NOT NULL AFTER link_title\" ); // change to NOT NULL\n\n\t\t// Add link_order. Temporary allow NULL, use order from ID, then do not allow NULL and add UNIQUE index.\n\t\tdb_add_col( 'T_links', 'link_order', 'int(11) unsigned NULL AFTER link_position' );\n\t\t$DB->query( \"UPDATE T_links SET link_order = link_ID WHERE link_order IS NULL\" );\n\t\tdb_add_col( 'T_links', 'link_order', 'int(11) unsigned NOT NULL AFTER link_position' ); // change to NOT NULL\n\t\tdb_add_index( 'T_links', 'link_itm_ID_order', 'link_itm_ID, link_order', 'UNIQUE' );\n\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading sessions... ' );\n\t\t$DB->query( \"ALTER TABLE T_sessions CHANGE COLUMN sess_ipaddress sess_ipaddress VARCHAR(39) NOT NULL DEFAULT ''\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9980' );\n\t}\n\n\tif( $old_db_version < 9990 )\n\t{\t// 4.0 part 3\n\n\t\ttask_begin( 'Upgrading hitlog... ' );\n\n\t\tdb_add_col( 'T_hitlog', 'hit_agent_type', \"ENUM('rss','robot','browser','unknown') DEFAULT 'unknown' NOT NULL AFTER hit_remote_addr\" );\n\n\t\tif( db_col_exists('T_hitlog', 'hit_agnt_ID') )\n\t\t{\n\t\t\t$DB->query( 'UPDATE T_hitlog, '.$tableprefix.'useragents\n\t\t\t                SET hit_agent_type = agnt_type\n\t\t\t              WHERE hit_agnt_ID = agnt_ID\n\t\t\t                AND agnt_type <> \"unknown\"' ); // We already have the unknown as default\n\t\t\tdb_drop_col( 'T_hitlog', 'hit_agnt_ID' );\n\t\t}\n\t\t$DB->query( 'DROP TABLE IF EXISTS '.$tableprefix.'useragents' );\n\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9990' );\n\t}\n\n\tif( $old_db_version < 10000 )\n\t{\t// 4.0 part 4\n\t\t// Integrate comment_secret\n\t\ttask_begin( 'Extending Comment table... ' );\n\t\tdb_add_col( 'T_comments', 'comment_secret', 'varchar(32) NULL default NULL' );\n\t\ttask_end();\n\n\t\t// Create T_slug table and, Insert all slugs from T_items\n\t\ttask_begin( 'Create Slugs table... ' );\n\t\t$DB->query( 'CREATE TABLE IF NOT EXISTS T_slug (\n\t\t\t\t\t\tslug_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\t\t\t\tslug_title varchar(255) NOT NULL COLLATE ascii_bin,\n\t\t\t\t\t\tslug_type char(6) NOT NULL DEFAULT \"item\",\n\t\t\t\t\t\tslug_itm_ID int(11) unsigned,\n\t\t\t\t\t\tPRIMARY KEY slug_ID (slug_ID),\n\t\t\t\t\t\tUNIQUE\tslug_title (slug_title)\n\t\t\t\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Making sure all posts have a slug...' );\n\t\t// Get posts with empty urltitle:\n\t\t$sql = 'SELECT post_ID, post_title\n\t\t\t\t      FROM T_items__item\n\t\t\t\t     WHERE post_urltitle IS NULL OR post_urltitle = \"\"';\n\t\t$rows = $DB->get_results( $sql, OBJECT, 'Get posts with empty urltitle' );\n\t\t// Create URL titles when non existent:\n\t\tforeach( $rows as $row )\n\t\t{\n\t\t\t// TODO: dh> pass locale (useful for transliteration).\n\t\t\t$DB->query( 'UPDATE T_items__item\n\t\t\t\t              SET post_urltitle = \"'.urltitle_validate( '', $row->post_title, 0 ).'\"\n\t\t                WHERE post_ID = '.$row->post_ID, 'Set posts urltitle' );\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Populating Slugs table... ' );\n\t\t$DB->query( 'REPLACE INTO T_slug( slug_title, slug_type, slug_itm_ID)\n\t\t              SELECT post_urltitle, \"item\", post_ID\n\t\t\t\t\t\t\t      FROM T_items__item' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Add canonical and tiny slug IDs to post table...' );\n\t\t// modify post_urltitle column -> Not allow NULL value\n\t\tdb_add_col( 'T_items__item', 'post_urltitle', 'VARCHAR(210) NOT NULL' );\n\t\tdb_add_col( 'T_items__item', 'post_canonical_slug_ID', 'int(10) unsigned NULL default NULL after post_urltitle' );\n\t\tdb_add_col( 'T_items__item', 'post_tiny_slug_ID', 'int(10) unsigned NULL default NULL after post_canonical_slug_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading posts...' );\n\t\t$DB->query( 'UPDATE T_items__item, T_slug\n\t\t\t              SET post_canonical_slug_ID = slug_ID\n\t\t\t            WHERE CONVERT( post_urltitle USING ASCII ) COLLATE ascii_bin = slug_title' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding \"help\" slug...' );\n\t\tif( db_key_exists( 'T_slug', 'slug_title', '\"help\"' ) )\n\t\t{\n\t\t\techo '<strong>Warning: \"help\" slug already exists!</strong><br /> ';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$DB->query( 'INSERT INTO T_slug( slug_title, slug_type )\n\t\t\t             VALUES( \"help\", \"help\" )', 'Add \"help\" slug' );\n\t\t\ttask_end();\n\t\t}\n\n\t\t// fp> Next time we should use pluggable permissions instead.\n\t\ttask_begin( 'Updgrading groups: Giving Administrators Group edit perms on slugs...' );\n\t\tdb_add_col( 'T_groups', 'grp_perm_slugs', \"enum('none','view','edit') NOT NULL default 'none'\" );\n\t\t$DB->query( 'UPDATE T_groups\n\t\t             SET grp_perm_slugs = \"edit\"\n\t\t             WHERE grp_ID = 1' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading settings table... ');\n\t\t$DB->query( 'UPDATE T_settings\n\t\t                SET set_value = 1\n\t\t              WHERE set_name = \"fm_enable_roots_user\"\n\t\t                    AND set_value = 0' );\n\t\ttask_end();\n\n\t\t// New perms for comment moderation depending on status:\n\t\ttask_begin( 'Upgrading Blog-User permissions...' );\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_draft_cmts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_comments' );\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_publ_cmts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_comments' );\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_depr_cmts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_comments' );\n\n\t\tif( db_col_exists( 'T_coll_user_perms', 'bloguser_perm_comments' ) )\n\t\t{ // if user had perm_comments he now gets all 3 new perms also:\n\t\t\t$DB->query( 'UPDATE T_coll_user_perms\n\t\t\t\t\t\tSET bloguser_perm_draft_cmts = bloguser_perm_comments,\n\t\t\t\t\t\t\tbloguser_perm_publ_cmts = bloguser_perm_comments,\n\t\t\t\t\t\t\tbloguser_perm_depr_cmts = bloguser_perm_comments');\n\t\t\tdb_drop_col( 'T_coll_user_perms', 'bloguser_perm_comments' );\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Blog-Group permissions...' );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_draft_cmts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_comments' );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_publ_cmts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_comments' );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_depr_cmts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_comments' );\n\n\t\tif( db_col_exists( 'T_coll_group_perms', 'bloggroup_perm_comments' ) )\n\t\t{ // if group had perm_comments he now gets all 3 new perms also:\n\t\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t\t\t\tSET bloggroup_perm_draft_cmts = bloggroup_perm_comments,\n\t\t\t\t\t\t\tbloggroup_perm_publ_cmts = bloggroup_perm_comments,\n\t\t\t\t\t\t\tbloggroup_perm_depr_cmts = bloggroup_perm_comments');\n\t\t\tdb_drop_col( 'T_coll_group_perms', 'bloggroup_perm_comments' );\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading messaging permissions...' );\n\t\t$DB->query( 'ALTER TABLE T_users ALTER COLUMN user_allow_msgform SET DEFAULT \"2\"' );\n\t\t$DB->query( 'UPDATE T_users\n\t\t\t\t\tSET user_allow_msgform = 3\n\t\t\t\t\tWHERE user_allow_msgform = 1');\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading currency table...' );\n\t\t$DB->query( 'ALTER TABLE '.$tableprefix.'currency ADD COLUMN curr_enabled tinyint(1) NOT NULL DEFAULT 1 AFTER curr_name' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading default blog access type for new blogs...' );\n\t\t$DB->query( 'ALTER TABLE T_blogs ALTER COLUMN blog_access_type SET DEFAULT \"extrapath\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading tags table...' );\n\t\t$DB->query( 'ALTER TABLE T_items__tag CHANGE COLUMN tag_name tag_name varbinary(50) not null' );\n\t\ttask_end();\n\n\t\t// fp> I don't understand why we need to carry this out \"again\" but I observed the installer barking on\n\t\t// this setting missing when upgrading from older 2.x versions. I figured it would be no big deal to do it twice...\n\t\ttask_begin( 'Makin sure usersettings table is InnoDB...' );\n\t\t$DB->query( 'ALTER TABLE T_users__usersettings ENGINE=innodb' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10000' );\n\t}\n\n\tif( $old_db_version < 10100 )\n\t{\t// 4.1\n\t\ttask_begin( 'Convert group permissions to pluggable permissions...' );\n\t\t// asimo>This delete query needs just in case if this version of b2evo was used, before upgrade process call\n\t\t$DB->query( 'DELETE FROM T_groups__groupsettings\n\t\t\t\t\t\tWHERE gset_name = \"perm_files\" OR gset_name = \"perm_options\" OR gset_name = \"perm_templates\"' );\n\t\t// Get current permission values from groups table\n\t\t$sql = 'SELECT grp_ID, grp_perm_spamblacklist, grp_perm_slugs, grp_perm_files, grp_perm_options, grp_perm_templates\n\t\t\t\t      FROM T_groups';\n\t\t$rows = $DB->get_results( $sql, OBJECT, 'Get groups converted permissions' );\n\t\t// Insert values into groupsettings table\n\t\tforeach( $rows as $row )\n\t\t{\t// \"IGNORE\" is needed if we already created T_groups__groupsettings during upgrade to v0.8.9 at checkpoint 8050\n\t\t\t$DB->query( 'INSERT IGNORE INTO T_groups__groupsettings( gset_grp_ID, gset_name, gset_value )\n\t\t\t\t\t\t\tVALUES( '.$row->grp_ID.', \"perm_spamblacklist\", \"'.$row->grp_perm_spamblacklist.'\" ),\n\t\t\t\t\t\t\t\t( '.$row->grp_ID.', \"perm_slugs\", \"'.$row->grp_perm_slugs.'\" ),\n\t\t\t\t\t\t\t\t( '.$row->grp_ID.', \"perm_files\", \"'.$row->grp_perm_files.'\" ),\n\t\t\t\t\t\t\t\t( '.$row->grp_ID.', \"perm_options\", \"'.$row->grp_perm_options.'\" ),\n\t\t\t\t\t\t\t\t( '.$row->grp_ID.', \"perm_templates\", \"'.$row->grp_perm_templates.'\" )' );\n\t\t}\n\n\t\t// Drop all converted permissin colums from groups table\n\t\tdb_drop_col( 'T_groups', 'grp_perm_spamblacklist' );\n\t\tdb_drop_col( 'T_groups', 'grp_perm_slugs' );\n\t\tdb_drop_col( 'T_groups', 'grp_perm_files' );\n\t\tdb_drop_col( 'T_groups', 'grp_perm_options' );\n\t\tdb_drop_col( 'T_groups', 'grp_perm_templates' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users table, adding user gender...' );\n\t\tdb_add_col( 'T_users', 'user_gender', 'char(1) NULL DEFAULT NULL AFTER user_showonline' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading edit timpestamp blog-user permission...' );\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_edit_ts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_delpost' );\n\t\t$DB->query( 'UPDATE T_coll_user_perms, T_users\n\t\t\t\t\t\t\tSET bloguser_perm_edit_ts = 1\n\t\t\t\t\t\t\tWHERE bloguser_user_ID = user_ID  AND user_level > 4' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading edit timpestamp blog-group permission...' );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_edit_ts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_delpost' );\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t\t\t\t\tSET bloggroup_perm_edit_ts = 1\n\t\t\t\t\t\t\tWHERE bloggroup_group_ID = 1' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading comments table, add trash status...' );\n\t\t$DB->query( \"ALTER TABLE T_comments MODIFY COLUMN comment_status ENUM('published','deprecated','draft', 'trash') DEFAULT 'published' NOT NULL\");\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading groups admin access permission...' );\n\t\t$sql = 'SELECT grp_ID, grp_perm_admin\n\t\t\t\t\tFROM T_groups';\n\t\t$rows = $DB->get_results( $sql, OBJECT, 'Get groups admin perms' );\n\t\tforeach( $rows as $row )\n\t\t{\n\t\t\tswitch( $row->grp_perm_admin )\n\t\t\t{\n\t\t\t\tcase 'visible':\n\t\t\t\t\t$value = 'normal';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'hidden':\n\t\t\t\t\t$value = 'restricted';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t$value = 'none';\n\t\t\t}\n\t\t\t// \"IGNORE\" is needed if we already created T_groups__groupsettings during upgrade to v0.8.9 at checkpoint 8050\n\t\t\t$DB->query( 'INSERT IGNORE INTO T_groups__groupsettings( gset_grp_ID, gset_name, gset_value )\n\t\t\t\t\t\t\tVALUES( '.$row->grp_ID.', \"perm_admin\", \"'.$value.'\" )' );\n\t\t}\n\t\tdb_drop_col( 'T_groups', 'grp_perm_admin' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users table, add users source...' );\n\t\tdb_add_col( 'T_users', 'user_source', 'varchar(30) NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs table: more granularity for comment allowing...' );\n\t\t$DB->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\tSELECT blog_ID, \"allow_comments\", \"never\"\n\t\t\t\t\t\t\tFROM T_blogs\n\t\t\t\t\t\t\tWHERE blog_allowcomments = \"never\"' );\n\t\tdb_drop_col( 'T_blogs', 'blog_allowcomments' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs table: allow_rating fields...' );\n\t\t$DB->query( 'UPDATE T_coll_settings\n\t\t\t\t\t\tSET cset_value = \"any\"\n\t\t\t\t\t\tWHERE cset_value = \"always\" AND cset_name = \"allow_rating\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading links table, add link_cmt_ID...' );\n\t\t$DB->query( 'ALTER TABLE T_links\n\t\t\t\t\t\tMODIFY COLUMN link_itm_ID int(11) unsigned NULL,\n\t\t\t\t\t\tMODIFY COLUMN link_creator_user_ID int(11) unsigned NULL,\n\t\t\t\t\t\tMODIFY COLUMN link_lastedit_user_ID int(11) unsigned NULL,\n\t\t\t\t\t\tADD COLUMN link_cmt_ID int(11) unsigned NULL COMMENT \"Used for linking files to comments (comment attachments)\" AFTER link_itm_ID');\n\t\t$DB->query( 'ALTER TABLE T_links\n\t\t\t\t\t\tADD INDEX link_cmt_ID ( link_cmt_ID )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading filetypes table...' );\n\t\t// get allowed filetype ids\n\t\t$sql = 'SELECT ftyp_ID\n\t\t\t\t\tFROM T_filetypes\n\t\t\t\t\tWHERE ftyp_allowed != 0';\n\t\t$allowed_ids = implode( ',', $DB->get_col( $sql, 0, 'Get allowed filetypes' ) );\n\n\t\t// update table column  -- this column is about who can edit the filetype: any user, registered users or only admins.\n\t\t$DB->query( 'ALTER TABLE T_filetypes\n\t\t\t\t\t\tMODIFY COLUMN ftyp_allowed enum(\"any\",\"registered\",\"admin\") NOT NULL default \"admin\"' );\n\n\t\t// update ftyp_allowed column content\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_allowed = \"registered\"\n\t\t\t\t\t\tWHERE ftyp_ID IN ('.$allowed_ids.')' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_allowed = \"admin\"\n\t\t\t\t\t\tWHERE ftyp_ID NOT IN ('.$allowed_ids.')' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_allowed = \"any\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"gif\" OR ftyp_extensions = \"png\" OR ftyp_extensions LIKE \"%jpg%\"' );\n\n\t\t// Add m4v file type if not exists\n\t\tif( !db_key_exists( 'T_filetypes', 'ftyp_extensions', '\"m4v\"' ) )\n\t\t{\n\t\t\t$DB->query( 'INSERT INTO T_filetypes (ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed)\n\t\t\t\t             VALUES (\"m4v\", \"MPEG video file\", \"video/x-m4v\", \"\", \"browser\", \"registered\")', 'Add \"m4v\" file type' );\n\t\t}\n\t\ttask_end();\n\n\t\t// The AdSense plugin needs to store quite long strings of data...\n\t\ttask_begin( 'Upgrading collection settings table, change cset_value type...' );\n\t\t$DB->query( 'ALTER TABLE T_coll_settings\n\t\t\t\t\t\t\t\t MODIFY COLUMN cset_name VARCHAR(50) NOT NULL,\n\t\t\t\t\t\t\t\t MODIFY COLUMN cset_value VARCHAR(10000) NULL' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10100' );\n\t}\n\n\tif( $old_db_version < 10200 )\n\t{\t// 4.1b\n\t\ttask_begin( 'Creating table for a specific blog post subscriptions...' );\n\t\t$DB->query( \"CREATE TABLE T_items__subscriptions (\n\t\t\t\t\t\tisub_item_ID  int(11) unsigned NOT NULL,\n\t\t\t\t\t\tisub_user_ID  int(11) unsigned NOT NULL,\n\t\t\t\t\t\tisub_comments tinyint(1) NOT NULL default 0 COMMENT 'The user wants to receive notifications for new comments on this post',\n\t\t\t\t\t\tPRIMARY KEY (isub_item_ID, isub_user_ID )\n\t\t\t\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading comments table, add subscription fields...' );\n\t\tdb_add_col( 'T_comments', 'comment_notif_status', 'ENUM(\"noreq\",\"todo\",\"started\",\"finished\") NOT NULL DEFAULT \"noreq\" COMMENT \"Have notifications been sent for this comment? How far are we in the process?\" AFTER comment_secret' );\n\t\tdb_add_col( 'T_comments', 'comment_notif_ctsk_ID', 'INT(10) unsigned NULL DEFAULT NULL COMMENT \"When notifications for this comment are sent through a scheduled job, what is the job ID?\" AFTER comment_notif_status' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users table...' );\n\t\tdb_add_col( 'T_users', 'user_notify_moderation', 'tinyint(1) NOT NULL default 0 COMMENT \"Notify me by email whenever a comment is awaiting moderation on one of my blogs\" AFTER user_notify' );\n\t\tdb_add_col( 'T_users', 'user_unsubscribe_key', 'varchar(32) NOT NULL default \"\" COMMENT \"A specific key, it is used when a user wants to unsubscribe from a post comments without signing in\" AFTER user_notify_moderation' );\n\t\t// Set unsubscribe keys for existing users with no unsubscribe key\n\t\t$sql = 'SELECT user_ID\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t WHERE user_unsubscribe_key = \"\"';\n\t\t$rows = $DB->get_results( $sql, OBJECT, 'Get users with no unsubscribe key' );\n\t\tforeach( $rows as $row )\n\t\t{\n\t\t\t$DB->query( 'UPDATE T_users\n\t\t\t\t\t\t\tSET user_unsubscribe_key = \"'.generate_random_key().'\"\n\t\t\t\t\t\t\tWHERE user_ID = '.$row->user_ID );\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading settings table... ');\n\t\t// This query was removed later, to avoid performance issue because of the smart view counting\n\t\t/*$DB->query( 'INSERT INTO T_settings (set_name, set_value)\n\t\t\t\t\t\tVALUES ( \"smart_hit_count\", 1 )' );*/\n\t\t$DB->query( 'ALTER TABLE T_coll_settings\n\t\t\t\t\t\t\t\t\tCHANGE COLUMN cset_value cset_value   VARCHAR( 10000 ) NULL COMMENT \"The AdSense plugin wants to store very long snippets of HTML\"' );\n  \t\ttask_end();\n\n  \t\t// The following two upgrade task were created subsequently to \"Make sure DB schema is up to date\".\n  \t\t// Note: These queries don't modify the correct databases\n\t\ttask_begin( 'Upgrading users table, no notification by default...');\n\t\t$DB->query( 'ALTER TABLE T_users ALTER COLUMN user_notify SET DEFAULT 0' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading items table...');\n\t\t$DB->query( 'ALTER TABLE T_items__item CHANGE COLUMN post_priority post_priority int(11) unsigned null COMMENT \"Task priority in workflow\"' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10200' );\n\t}\n\n\n\tif( $old_db_version < 10300 )\n\t{\t// 4.2\n\t\ttask_begin( 'Upgrading user fields...' );\n\t\t$DB->query( 'ALTER TABLE T_users__fielddefs\n\t\t\t\t\t\t\t\t\tADD COLUMN ufdf_required enum(\"hidden\",\"optional\",\"recommended\",\"require\") NOT NULL default \"optional\"');\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\t\t\t\t\tSET ufdf_required = \"recommended\"\n\t\t\t\t\t\t\t\t\tWHERE ufdf_name in (\"Website\", \"Twitter\", \"Facebook\") ' );\n\t\t$DB->query( \"REPLACE INTO T_users__fielddefs (ufdf_ID, ufdf_type, ufdf_name, ufdf_required)\n\t\t\t \t\t\t\t\t\tVALUES (400000, 'text', 'About me', 'recommended');\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Moving data to user fields...' );\n\t\t$DB->query( 'INSERT INTO T_users__fields( uf_user_ID, uf_ufdf_ID, uf_varchar )\n\t\t\t\t\t\t\t\t SELECT user_ID, 10300, user_icq\n\t\t\t\t\t\t\t\t\t FROM T_users\n\t\t\t\t\t\t\t\t  WHERE user_icq IS NOT NULL AND TRIM(user_icq) <> \"\"' );\n\t\t$DB->query( 'INSERT INTO T_users__fields( uf_user_ID, uf_ufdf_ID, uf_varchar )\n\t\t\t\t\t\t\t\t SELECT user_ID, 10200, user_aim\n\t\t\t\t\t\t\t\t\t FROM T_users\n\t\t\t\t\t\t\t\t  WHERE user_aim IS NOT NULL AND TRIM(user_aim) <> \"\"' );\n\t\t$DB->query( 'INSERT INTO T_users__fields( uf_user_ID, uf_ufdf_ID, uf_varchar )\n\t\t\t\t\t\t\t\t SELECT user_ID, 10000, user_msn\n\t\t\t\t\t\t\t\t\t FROM T_users\n\t\t\t\t\t\t\t\t  WHERE user_msn IS NOT NULL AND TRIM(user_msn) <> \"\"' );\n\t\t$DB->query( 'INSERT INTO T_users__fields( uf_user_ID, uf_ufdf_ID, uf_varchar )\n\t\t\t\t\t\t\t\t SELECT user_ID, 10100, user_yim\n\t\t\t\t\t\t\t\t\t FROM T_users\n\t\t\t\t\t\t\t\t  WHERE user_yim IS NOT NULL AND TRIM(user_yim) <> \"\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Dropping obsolete user columns...' );\n\t\t$DB->query( 'ALTER TABLE T_users\n\t\t\t\t\t\t\t\t\tDROP COLUMN user_icq,\n\t\t\t\t\t\t\t\t\tDROP COLUMN user_aim,\n\t\t\t\t\t\t\t\t\tDROP COLUMN user_msn,\n\t\t\t\t\t\t\t\t\tDROP COLUMN user_yim' );\n\t\ttask_end();\n\n\t\t// ---\n\n\t\ttask_begin( 'Adding new user columns...' );\n\t\t$DB->query( 'ALTER TABLE T_users\n\t\t\t\t\t\t\t\t\tADD COLUMN user_postcode varchar(12) NULL AFTER user_ID,\n\t\t\t\t\t\t\t\t\tADD COLUMN user_age_min int unsigned NULL AFTER user_postcode,\n\t\t\t\t\t\t\t\t\tADD COLUMN user_age_max int unsigned NULL AFTER user_age_min' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading item table for hide teaser...' );\n\t\t$DB->query( 'ALTER TABLE T_items__item\n\t\t\t\t\t\tADD COLUMN post_hideteaser tinyint(1) NOT NULL DEFAULT 0 AFTER post_featured');\n\t\t$DB->query( 'UPDATE T_items__item\n\t\t\t\t\t\t\t\t\t\tSET post_hideteaser = 1\n\t\t\t\t\t\t\t\t\tWHERE post_content LIKE \"%<!--noteaser-->%\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for a specific post settings...' );\n\t\t$DB->query( \"CREATE TABLE T_items__item_settings (\n\t\t\t\t\t\tiset_item_ID  int(10) unsigned NOT NULL,\n\t\t\t\t\t\tiset_name     varchar( 50 ) NOT NULL,\n\t\t\t\t\t\tiset_value    varchar( 2000 ) NULL,\n\t\t\t\t\t\tPRIMARY KEY ( iset_item_ID, iset_name )\n\t\t\t\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding new column to comments...' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\t\t\t\t\t\t\tADD COLUMN comment_in_reply_to_cmt_ID INT(10) unsigned NULL AFTER comment_status' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for internal searches...' );\n\t\t$DB->query( 'CREATE TABLE T_logs__internal_searches (\n\t\t\t\t\t\tisrch_ID bigint(20) NOT NULL auto_increment,\n\t\t\t\t\t\tisrch_coll_ID bigint(20) NOT NULL,\n\t\t\t\t\t\tisrch_hit_ID bigint(20) NOT NULL,\n\t\t\t\t\t\tisrch_keywords varchar(255) NOT NULL,\n\t\t\t\t\t\tPRIMARY KEY (isrch_ID)\n\t\t\t\t\t) ENGINE = MyISAM' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for comments votes...' );\n\t\t$DB->query( 'CREATE TABLE T_comments__votes (\n\t\t\t\t\t\tcmvt_cmt_ID  int(10) unsigned NOT NULL,\n\t\t\t\t\t\tcmvt_user_ID int(10) unsigned NOT NULL,\n\t\t\t\t\t\tcmvt_helpful TINYINT(1) NULL DEFAULT NULL,\n\t\t\t\t\t\tcmvt_spam    TINYINT(1) NULL DEFAULT NULL,\n\t\t\t\t\t\tPRIMARY KEY (cmvt_cmt_ID, cmvt_user_ID),\n\t\t\t\t\t\tKEY cmvt_cmt_ID (cmvt_cmt_ID),\n\t\t\t\t\t\tKEY cmvt_user_ID (cmvt_user_ID)\n\t\t\t\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding new comments columns...' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\t\t\t\t\t\t\tADD comment_helpful_addvotes INT NOT NULL DEFAULT 0 AFTER comment_nofollow ,\n\t\t\t\t\t\t\t\t\tADD comment_helpful_countvotes INT UNSIGNED NOT NULL DEFAULT 0 AFTER comment_helpful_addvotes ,\n\t\t\t\t\t\t\t\t\tADD comment_spam_addvotes INT NOT NULL DEFAULT 0 AFTER comment_helpful_countvotes ,\n\t\t\t\t\t\t\t\t\tADD comment_spam_countvotes INT UNSIGNED NOT NULL DEFAULT 0 AFTER comment_spam_addvotes ,\n\t\t\t\t\t\t\t\t\tCHANGE COLUMN comment_notif_ctsk_ID comment_notif_ctsk_ID      INT(10) unsigned NULL DEFAULT NULL COMMENT \"When notifications for this comment are sent through a scheduled job, what is the job ID?\"');\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding new user permission for spam voting...' );\n\t\t$DB->query( 'ALTER TABLE T_coll_user_perms\n\t\t\t\t\t\t\t\t\tADD bloguser_perm_vote_spam_cmts tinyint NOT NULL default 0 AFTER bloguser_perm_edit_ts' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding new group permission for spam voting...' );\n\t\t$DB->query( 'ALTER TABLE T_coll_group_perms\n\t\t\t\t\t\t\t\t\tADD bloggroup_perm_vote_spam_cmts tinyint NOT NULL default 0 AFTER bloggroup_perm_edit_ts' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading countries table...' );\n\t\t$DB->query( 'ALTER TABLE '.$tableprefix.'country ADD COLUMN ctry_preferred tinyint(1) NOT NULL DEFAULT 0 AFTER ctry_enabled' );\n\t\ttask_end();\n\n\t\t$DB->query( 'ALTER TABLE T_items__subscriptions CHANGE COLUMN isub_comments isub_comments   tinyint(1) NOT NULL DEFAULT 0 COMMENT \"The user wants to receive notifications for new comments on this post\"' );\n\n\t\tset_upgrade_checkpoint( '10300' );\n\t}\n\n\n\tif( $old_db_version < 10400 )\n\t{\t// 4.2 part 2\n\t\ttask_begin( 'Updating \"Post by Email\" settings...' );\n\t\t$DB->query( 'UPDATE T_settings SET set_name = \"eblog_autobr\" WHERE set_name = \"AutoBR\"' );\n\t\ttask_end();\n\n\t\tif( $DB->get_var('SELECT set_value FROM T_settings WHERE set_name = \"eblog_enabled\"') )\n\t\t{\t// eblog enabled, let's create a scheduled job for it\n\t\t\ttask_begin( 'Creating \"Post by Email\" scheduled job...' );\n\t\t\t$start_date = form_date( date2mysql($GLOBALS['localtimenow'] + 86400), '05:00:00' ); // start tomorrow\n\t\t\t$DB->query( '\n\t\t\t\tINSERT INTO T_cron__task ( ctsk_start_datetime, ctsk_repeat_after, ctsk_name, ctsk_controller, ctsk_params )\n\t\t\t\tVALUES ( '.$DB->quote( $start_date ).', 86400, '.$DB->quote( T_('Create posts by email') ).', '.$DB->quote( 'cron/jobs/_post_by_email.job.php' ).', '.$DB->quote( 'N;' ).' )' );\n\t\t\ttask_end();\n\t\t}\n\n\t\ttask_begin( 'Upgrading hitlog table...' );\n\t\t$DB->query( 'ALTER TABLE T_hitlog\n\t\t\t\t\t\t\t\tADD COLUMN hit_disp        VARCHAR(30) DEFAULT NULL AFTER hit_uri,\n\t\t\t\t\t\t\t\tADD COLUMN hit_ctrl        VARCHAR(30) DEFAULT NULL AFTER hit_disp,\n\t\t\t\t\t\t\t\tADD COLUMN hit_response_code     INT DEFAULT NULL AFTER hit_agent_type ' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading file types...' );\n\t\t// Update ftyp_icon column\n\t\t// Previous versions used a image file name for this field,\n\t\t// but from now we should use a icon name from the file /conf/_icons.php\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_image\"\n\t\t\t\t\t\tWHERE ftyp_extensions IN ( \"gif\", \"png\", \"jpg jpeg\" )' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_document\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"txt\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_www\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"htm html\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_pdf\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"pdf\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_doc\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"doc\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_xls\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"xls\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_ppt\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"ppt\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_pps\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"pps\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_zip\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"zip\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_php\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"php php3 php4 php5 php6\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"css\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_sound\"\n\t\t\t\t\t\tWHERE ftyp_extensions IN ( \"mp3\", \"m4a\" )' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_video\"\n\t\t\t\t\t\tWHERE ftyp_extensions IN ( \"mp4\", \"mov\", \"m4v\" )' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10400' );\n\t}\n\n\n\tif( $old_db_version < 10500 )\n\t{\t//  part 3\n\t\ttask_begin( 'Upgrading hitlog table...' );\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\t\t\t\t\t\tCHANGE COLUMN hit_referer_type  hit_referer_type ENUM(  'search',  'special',  'spam',  'referer',  'direct',  'self',  'admin', 'blacklist' ) NOT NULL,\n\t\t\t\t\t\t\t\tADD COLUMN hit_type ENUM('standard','rss','admin','ajax', 'service') DEFAULT 'standard' NOT NULL AFTER hit_ctrl,\n\t\t\t\t\t\t\t\tADD COLUMN hit_action VARCHAR(30) DEFAULT NULL AFTER hit_ctrl\" );\n\t\t$DB->query( 'UPDATE T_hitlog SET hit_referer_type = \"special\" WHERE hit_referer_type = \"blacklist\"' );\n\t\t$DB->query( 'UPDATE T_hitlog SET hit_type = \"admin\", hit_referer_type = \"direct\"  WHERE hit_referer_type = \"admin\"' );\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\t\t\t\t\t\tCHANGE COLUMN hit_referer_type  hit_referer_type ENUM(  'search',  'special',  'spam',  'referer',  'direct',  'self' ) NOT NULL\");\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for Groups of user field definitions...' );\n\t\t$DB->query( 'CREATE TABLE T_users__fieldgroups (\n\t\t\t\tufgp_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\t\tufgp_name varchar(255) NOT NULL,\n\t\t\t\tufgp_order int(11) NOT NULL,\n\t\t\t\tPRIMARY KEY (ufgp_ID)\n\t\t\t) ENGINE = innodb' );\n\t\t$DB->query( 'INSERT INTO T_users__fieldgroups ( ufgp_name, ufgp_order )\n\t\t\t\tVALUES ( \"Instant Messaging\", \"1\" ),\n\t\t\t\t\t\t\t ( \"Phone\", \"2\" ),\n\t\t\t\t\t\t\t ( \"Web\", \"3\" ),\n\t\t\t\t\t\t\t ( \"Organization\", \"4\" ),\n\t\t\t\t\t\t\t ( \"Address\", \"5\" ),\n\t\t\t\t\t\t\t ( \"Other\", \"6\" ) ' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading user field definitions...' );\n\t\t// Add new fields:\n\t\t// \t\t\"ufdf_options\" to save a values of the Option list\n\t\t// \t\t\"ufdf_duplicated\" to add a several instances\n\t\t// \t\t\"ufdf_ufgp_ID\" - Group ID\n\t\t// \t\t\"ufdf_order\" - Order number\n\t\t// \t\t\"ufdf_suggest\" - Suggest values\n\t\t$DB->query( 'ALTER TABLE T_users__fielddefs\n\t\t\t\t\t\tADD ufdf_options    TEXT NOT NULL AFTER ufdf_name,\n\t\t\t\t\t\tADD ufdf_duplicated enum(\"forbidden\",\"allowed\",\"list\") NOT NULL default \"allowed\",\n\t\t\t\t\t\tADD ufdf_ufgp_ID    int(10) unsigned NOT NULL AFTER ufdf_ID,\n\t\t\t\t\t\tADD ufdf_order      int(11) NOT NULL,\n\t\t\t\t\t\tADD ufdf_suggest    tinyint(1) NOT NULL DEFAULT 0,\n\t\t\t\t\t\tCHANGE ufdf_ID ufdf_ID int(10) UNSIGNED NOT NULL AUTO_INCREMENT' );\n\t\t// Set default values of the field \"ufdf_duplicated\"\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_duplicated = \"allowed\"\n\t\t\t\t\t\tWHERE ufdf_ID IN ( 10000, 10100, 10200, 10300, 50100, 50200, 100000, 100100 )' );\n\t\t// Group fields by default\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_ufgp_ID = \"1\"\n\t\t\t\t\t\tWHERE ufdf_ID <= 40000 ' );\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_ufgp_ID = \"2\"\n\t\t\t\t\t\tWHERE ufdf_ID > 40000 AND ufdf_ID <= 60100' );\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_ufgp_ID = \"3\"\n\t\t\t\t\t\tWHERE ufdf_ID > 60100 AND ufdf_ID <= 160100' );\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_ufgp_ID = \"4\"\n\t\t\t\t\t\tWHERE ufdf_ID > 160100 AND ufdf_ID <= 211000' );\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_ufgp_ID = \"5\"\n\t\t\t\t\t\tWHERE ufdf_ID > 211000 AND ufdf_ID <= 300300' );\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_ufgp_ID = \"6\"\n\t\t\t\t\t\tWHERE ufdf_ID > 300300' );\n\t\t// Set order field\n\t\t$userfields = $DB->get_results( 'SELECT ufdf_ID, ufdf_ufgp_ID\n\t\t\t\tFROM T_users__fielddefs\n\t\t\t\tORDER BY ufdf_ufgp_ID, ufdf_ID' );\n\t\t$userfield_order = 1;\n\t\tforeach( $userfields as $uf => $userfield )\n\t\t{\n\t\t\tif( $uf > 0 )\n\t\t\t{\n\t\t\t\tif( $userfields[$uf-1]->ufdf_ufgp_ID != $userfield->ufdf_ufgp_ID )\n\t\t\t\t{\t// New group is starting, reset $userfield_order\n\t\t\t\t\t$userfield_order = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_order = \"'.$userfield_order.'\"\n\t\t\t\t\t\tWHERE ufdf_ID = '.$userfield->ufdf_ID );\n\t\t\t$userfield_order++;\n\t\t}\n\t\t// Change field type for Group 'Organization' (group_ID=4)\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\tSET ufdf_type = \"word\"\n\t\t\t\t\tWHERE ufdf_ufgp_ID = \"4\"' );\n\t\t// Create a default additional info for administrator (user_ID=1)\n\t\t$DB->query( 'INSERT INTO T_users__fields ( uf_user_ID, uf_ufdf_ID, uf_varchar )\n\t\t\tVALUES ( 1, 200000, \"Site administrator\" ),\n\t\t\t\t\t\t ( 1, 200000, \"Moderator\" ),\n\t\t\t\t\t\t ( 1, 100000, \"'.$baseurl.'\" )' );\n\t\t// Add Indexes\n\t\t$DB->query( 'ALTER TABLE T_users__fields\n\t\t\t\t\t\tADD INDEX uf_ufdf_ID ( uf_ufdf_ID ),\n\t\t\t\t\t\tADD INDEX uf_varchar ( uf_varchar ) ' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading permissions...' );\n\t\t// Group permissions\n\t\t$DB->query( 'ALTER TABLE T_coll_group_perms\n\t\t\t\t\t\tADD bloggroup_perm_own_cmts tinyint NOT NULL default 0 AFTER bloggroup_perm_edit_ts' );\n\t\t// Set default values for Administrators & Privileged Bloggers groups\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t\t\t\tSET bloggroup_perm_own_cmts = \"1\"\n\t\t\t\t\t\tWHERE bloggroup_group_ID IN ( 1, 2 )' );\n\t\t// User permissions\n\t\t$DB->query( 'ALTER TABLE T_coll_user_perms\n\t\t\t\t\t\tADD bloguser_perm_own_cmts tinyint NOT NULL default 0 AFTER bloguser_perm_edit_ts' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10500' );\n\t}\n\n\n\tif( $old_db_version < 10600 )\n\t{\t//  part 4\n\n\t\t// For create_default_regions() and create_default_subregions():\n\t\trequire_once dirname(__FILE__).'/_functions_create.php';\n\n\t\ttask_begin( 'Renaming Countries table...' );\n\t\t$DB->query( 'RENAME TABLE '.$tableprefix.'country TO T_regional__country' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Renaming Currencies table...' );\n\t\t$DB->query( 'RENAME TABLE '.$tableprefix.'currency TO T_regional__currency' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating Regions table...' );\n\t\t$DB->query( 'CREATE TABLE T_regional__region (\n\t\t\trgn_ID        int(10) unsigned NOT NULL auto_increment,\n\t\t\trgn_ctry_ID   int(10) unsigned NOT NULL,\n\t\t\trgn_code      char(6) NOT NULL,\n\t\t\trgn_name      varchar(40) NOT NULL,\n\t\t\trgn_enabled   tinyint(1) NOT NULL DEFAULT 1,\n\t\t\trgn_preferred tinyint(1) NOT NULL DEFAULT 0,\n\t\t\tPRIMARY KEY rgn_ID (rgn_ID),\n\t\t\tUNIQUE rgn_ctry_ID_code (rgn_ctry_ID, rgn_code)\n\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\tcreate_default_regions();\n\n\t\ttask_begin( 'Creating Sub-regions table...' );\n\t\t$DB->query( 'CREATE TABLE T_regional__subregion (\n\t\t\tsubrg_ID        int(10) unsigned NOT NULL auto_increment,\n\t\t\tsubrg_rgn_ID    int(10) unsigned NOT NULL,\n\t\t\tsubrg_code      char(6) NOT NULL,\n\t\t\tsubrg_name      varchar(40) NOT NULL,\n\t\t\tsubrg_enabled   tinyint(1) NOT NULL DEFAULT 1,\n\t\t\tsubrg_preferred tinyint(1) NOT NULL DEFAULT 0,\n\t\t\tPRIMARY KEY subrg_ID (subrg_ID),\n\t\t\tUNIQUE subrg_rgn_ID_code (subrg_rgn_ID, subrg_code)\n\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\tcreate_default_subregions();\n\n\t\ttask_begin( 'Creating Cities table...' );\n\t\t$DB->query( 'CREATE TABLE T_regional__city (\n\t\t\tcity_ID         int(10) unsigned NOT NULL auto_increment,\n\t\t\tcity_ctry_ID    int(10) unsigned NOT NULL,\n\t\t\tcity_rgn_ID     int(10) unsigned NULL,\n\t\t\tcity_subrg_ID   int(10) unsigned NULL,\n\t\t\tcity_postcode   char(12) NOT NULL,\n\t\t\tcity_name       varchar(40) NOT NULL,\n\t\t\tcity_enabled    tinyint(1) NOT NULL DEFAULT 1,\n\t\t\tcity_preferred  tinyint(1) NOT NULL DEFAULT 0,\n\t\t\tPRIMARY KEY city_ID (city_ID),\n\t\t\tINDEX city_ctry_ID_postcode ( city_ctry_ID, city_postcode ),\n\t\t\tINDEX city_rgn_ID_postcode ( city_rgn_ID, city_postcode ),\n\t\t\tINDEX city_subrg_ID_postcode ( city_subrg_ID, city_postcode )\n\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Update Item Settings...' );\n\t\t// Admin: full rights for all blogs (look 'ma, doing a natural join! :>)\n\t\t$query = \"INSERT INTO T_items__item_settings( iset_item_ID, iset_name, iset_value )\n\t\t\t\t\t\tSELECT post_ID, 'hide_teaser', post_hideteaser\n\t\t\t\t\t\t\tFROM T_items__item\";\n\t\t$DB->query( $query );\n\n\t\tdb_drop_col( 'T_items__item', 'post_hideteaser' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading hitlog table...' );\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\t\t\t\tADD COLUMN hit_keyphrase VARCHAR(255) DEFAULT NULL AFTER hit_keyphrase_keyp_ID\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading track__keyphrase...' );\n\t\t$DB->query( \"ALTER TABLE T_track__keyphrase\n\t\t\t\t\t\tADD COLUMN keyp_count_refered_searches INT UNSIGNED DEFAULT 0 AFTER keyp_phrase,\n\t\t\t\t\t\tADD COLUMN keyp_count_internal_searches INT UNSIGNED DEFAULT 0 AFTER keyp_count_refered_searches\" );\n\t\ttask_end();\n\n\n\n\t\ttask_begin( 'Droping table internal searches...' );\n\n\t\t$DB->query( \"DROP TABLE T_logs__internal_searches\" );\n\t\ttask_end();\n\n\n\t\ttask_begin( 'Upgrading users table...' );\n\t\tdb_add_col( 'T_users', 'user_rgn_ID', 'int(10) unsigned NULL AFTER user_ctry_ID' );\n\t\tdb_add_col( 'T_users', 'user_subrg_ID', 'int(10) unsigned NULL AFTER user_rgn_ID' );\n\t\tdb_add_col( 'T_users', 'user_city_ID', 'int(10) unsigned NULL AFTER user_subrg_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading hitlog table...' );\n\t\t$DB->query( 'UPDATE T_hitlog\n\t\t\t\t\t\tSET hit_type = \"rss\",\n\t\t\t\t\t\t\thit_agent_type = \"unknown\"\n\t\t\t\t\t\tWHERE hit_agent_type = \"rss\"' );\n\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\t\t\t\t\t\tCHANGE COLUMN hit_agent_type hit_agent_type ENUM('robot','browser','unknown') DEFAULT 'unknown' NOT NULL\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating mail log table...' );\n\t\t$DB->query( 'CREATE TABLE '.$tableprefix.'mail__log (\n\t\t  emlog_ID        INT(10) UNSIGNED NOT NULL auto_increment,\n\t\t  emlog_timestamp TIMESTAMP NOT NULL,\n\t\t  emlog_to        VARCHAR(255) DEFAULT NULL,\n\t\t  emlog_success   TINYINT(1) NOT NULL DEFAULT 0,\n\t\t  emlog_subject   VARCHAR(255) DEFAULT NULL,\n\t\t  emlog_headers   TEXT DEFAULT NULL,\n\t\t  emlog_message   TEXT DEFAULT NULL,\n\t\t  PRIMARY KEY     (emlog_ID)\n\t\t) ENGINE = myisam' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10600' );\n\t}\n\n\n\tif( $old_db_version < 10700 )\n\t{\t// part 5\n\n\t\ttask_begin( 'Upgrading user notifications settings...' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"notify_published_comments\", user_notify\n\t\t\t\t\t\t\tFROM T_users', 'Move notify settings from users to users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"notify_comment_moderation\", user_notify_moderation\n\t\t\t\t\t\t\tFROM T_users', 'Move notify moderation settings from users to users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"enable_PM\", 1\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_allow_msgform = 1 OR user_allow_msgform = 3', 'Set enable PM on users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"enable_PM\", 0\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_allow_msgform = 0 OR user_allow_msgform = 2', 'Set enable PM on users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"enable_email\", 1\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_allow_msgform > 1', 'Set enable email true on users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"enable_email\", 0\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_allow_msgform < 2', 'Set enable email false on users_usersettings' );\n\t\tdb_drop_col( 'T_users', 'user_notify' );\n\t\tdb_drop_col( 'T_users', 'user_notify_moderation' );\n\t\tdb_drop_col( 'T_users', 'user_allow_msgform' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Item table...' );\n\t\tdb_add_col( 'T_items__item', 'post_ctry_ID', 'INT(10) UNSIGNED NULL' );\n\t\tdb_add_col( 'T_items__item', 'post_rgn_ID', 'INT(10) UNSIGNED NULL' );\n\t\tdb_add_col( 'T_items__item', 'post_subrg_ID', 'INT(10) UNSIGNED NULL' );\n\t\tdb_add_col( 'T_items__item', 'post_city_ID', 'INT(10) UNSIGNED NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users table...' );\n\t\tdb_drop_col( 'T_users', 'user_postcode' );\t// Previously obsoleted\n\t\tdb_drop_col( 'T_users', 'user_idmode' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users fields table...' );\n\t\tdb_add_col( 'T_users__fielddefs', 'ufdf_bubbletip', 'varchar(2000) NULL' );\n\t\ttask_end();\n\n\n\t\ttask_begin( 'Creating table for groups of messaging contacts...' );\n\t\t$DB->query( \"CREATE TABLE IF NOT EXISTS T_messaging__contact_groups (\n\t\t\tcgr_ID      int(10) unsigned NOT NULL auto_increment,\n\t\t\tcgr_user_ID int(10) unsigned NOT NULL,\n\t\t\tcgr_name    varchar(50) NOT NULL,\n\t\t\tPRIMARY KEY cgr_ID (cgr_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for group users of messaging contacts...' );\n\t\t$DB->query( \"CREATE TABLE T_messaging__contact_groupusers (\n\t\t\tcgu_user_ID int(10) unsigned NOT NULL,\n\t\t\tcgu_cgr_ID  int(10) unsigned NOT NULL,\n\t\t\tPRIMARY KEY cgu_PK (cgu_user_ID, cgu_cgr_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading mail log table...' );\n\t\tdb_add_col( $tableprefix.'mail__log', 'emlog_user_ID', 'INT(10) UNSIGNED DEFAULT NULL AFTER emlog_timestamp' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10700' );\n\t}\n\n\tif( $old_db_version < 10800 )\n\t{\t// part 6 aka between \"i1-i2\" and \"i2\"\n\n\t\ttask_begin( 'Upgrading users table, add user status...' );\n\t\tdb_add_col( 'T_users', 'user_status', 'enum( \"activated\", \"autoactivated\", \"closed\", \"deactivated\", \"emailchanged\", \"new\" ) NOT NULL default \"new\" AFTER user_validated' );\n\t\t$update_user_status_query = 'UPDATE T_users SET user_status = ';\n\t\t// check if new users must activate their account. If users are not required to activate their account, then all existing users will be considerated as activated user.\n\t\t$new_users_must_validate = $DB->get_var( 'SELECT set_value FROM T_settings WHERE set_name = '.$DB->quote( 'newusers_mustvalidate' ) );\n\t\tif( $new_users_must_validate || ( $new_users_must_validate == NULL ) )\n\t\t{ // newusers_mustvalidate setting is set to true, or it is not set at all. If it is not set, we know that the default value is true!\n\t\t\t// set activated status only for validated users\n\t\t\t$update_user_status_query .= $DB->quote( 'activated' );\n\t\t\t$update_user_status_query .= ' WHERE user_validated = 1';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$update_user_status_query .= $DB->quote( 'autoactivated' );\n\t\t}\n\t\t// set activated status for corresponding users\n\t\t$DB->query( $update_user_status_query );\n\t\tdb_drop_col( 'T_users', 'user_validated' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10800' );\n\t}\n\n\tif( $old_db_version < 10900 )\n\t{\t// part 7 aka \"i3\"\n\n\t\ttask_begin( 'Upgrading user settings table...' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"show_online\", 0\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_showonline = 0', 'Set show online on users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"user_ip\", user_ip\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_ip IS NOT NULL', 'Set user ip on users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"user_domain\", user_domain\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_domain IS NOT NULL', 'Set user domain on users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"user_browser\", user_browser\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_browser IS NOT NULL', 'Set user browser on users_usersettings' );\n\t\tdb_drop_col( 'T_users', 'user_showonline' );\n\t\tdb_drop_col( 'T_users', 'user_ip' );\n\t\tdb_drop_col( 'T_users', 'user_domain' );\n\t\tdb_drop_col( 'T_users', 'user_browser' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading user activation settings...' );\n\t\t// Remove all last_activation_email timestamps because we will use date instead of them\n\t\t$DB->query( 'DELETE FROM T_users__usersettings WHERE uset_name = \"last_activation_email\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Users table...' );\n\t\t// Update user_status column add 'failedactivation' status\n\t\t$DB->query( 'ALTER TABLE T_users CHANGE user_status\n\t\t\t\t\tuser_status enum( \"activated\", \"autoactivated\", \"closed\", \"deactivated\", \"emailchanged\", \"failedactivation\", \"new\" ) NOT NULL default \"new\"' );\n\t\tdb_add_col( 'T_users', 'user_created_fromIPv4', 'int(10) unsigned NOT NULL' );\n\t\tdb_add_col( 'T_users', 'user_email_dom_ID', 'int(10) unsigned NULL' );\n\t\t$DB->query( 'ALTER TABLE T_users CHANGE dateYMDhour user_created_datetime DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\tdb_add_col( 'T_users', 'user_reg_ctry_ID', 'int(10) unsigned NULL AFTER user_age_max' );\n\t\tdb_add_col( 'T_users', 'user_profileupdate_ts', 'TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP' );\n\t\t$DB->query( 'ALTER TABLE T_users ADD INDEX user_email ( user_email )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Renaming Email log table...' );\n\t\t$DB->query( 'RENAME TABLE '.$tableprefix.'mail__log TO T_email__log' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating email returns table...' );\n\t\t$DB->query( \"CREATE TABLE T_email__returns (\n\t\t\t  emret_ID        INT(10) UNSIGNED NOT NULL auto_increment,\n\t\t\t  emret_address   VARCHAR(255) DEFAULT NULL,\n\t\t\t  emret_errormsg  VARCHAR(255) DEFAULT NULL,\n\t\t\t  emret_timestamp TIMESTAMP NOT NULL,\n\t\t\t  emret_headers   TEXT DEFAULT NULL,\n\t\t\t  emret_message   TEXT DEFAULT NULL,\n\t\t\t  emret_errtype   CHAR(1) NOT NULL DEFAULT 'U',\n\t\t\t  PRIMARY KEY     (emret_ID)\n\t\t\t) ENGINE = myisam\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading general settings table...' );\n\t\t$DB->query( 'ALTER TABLE T_settings CHANGE set_value set_value VARCHAR( 5000 ) NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading sessions table...' );\n\t\tdb_add_col( 'T_sessions', 'sess_device', 'VARCHAR(8) NOT NULL DEFAULT \\'\\'' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for Antispam IP Ranges...' );\n\t\t$DB->query( \"CREATE TABLE T_antispam__iprange (\n\t\t\taipr_ID         int(10) unsigned NOT NULL auto_increment,\n\t\t\taipr_IPv4start  int(10) unsigned NOT NULL,\n\t\t\taipr_IPv4end    int(10) unsigned NOT NULL,\n\t\t\taipr_user_count int(10) unsigned DEFAULT 0,\n\t\t\tPRIMARY KEY aipr_ID (aipr_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading base domains table...' );\n\t\t$DB->query( \"ALTER TABLE T_basedomains CHANGE dom_type dom_type ENUM( 'unknown', 'normal', 'searcheng', 'aggregator', 'email' ) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL DEFAULT 'unknown'\" );\n\t\t$DB->query( 'ALTER TABLE T_basedomains DROP INDEX dom_name' );\n\t\t$DB->query( 'ALTER TABLE T_basedomains DROP INDEX dom_type' );\n\t\t$DB->query( 'ALTER TABLE T_basedomains ADD UNIQUE dom_type_name ( dom_type, dom_name )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading base domains table...' );\n\t\t$DB->query( \"ALTER TABLE T_basedomains\n\t\t\tMODIFY dom_name VARCHAR(250) COLLATE utf8_bin NOT NULL DEFAULT ''\" );\n\t\ttask_end();\n\n\t\t/*** Update user_email_dom_ID for all already existing users ***/\n\t\ttask_begin( 'Upgrading users email domains...' );\n\t\t$DB->begin();\n\t\t// Get the users\n\t\t$uemails_SQL = new SQL();\n\t\t$uemails_SQL->SELECT( 'user_ID, user_email' );\n\t\t$uemails_SQL->FROM( 'T_users' );\n\t\t$users_emails = $DB->get_assoc( $uemails_SQL->get() );\n\n\t\tif( count( $users_emails ) > 0 )\n\t\t{\n\t\t\t// Get all email domains\n\t\t\t$edoms_SQL = new SQL();\n\t\t\t$edoms_SQL->SELECT( 'dom_ID, dom_name' );\n\t\t\t$edoms_SQL->FROM( 'T_basedomains' );\n\t\t\t$edoms_SQL->WHERE( 'dom_type = \\'email\\'' );\n\t\t\t$email_domains = $DB->get_assoc( $edoms_SQL->get() );\n\n\t\t\tforeach( $users_emails as $user_ID => $user_email )\n\t\t\t{\n\t\t\t\tif( preg_match( '#@(.+)#i', strtolower($user_email), $ematch ) )\n\t\t\t\t{\t// Get email domain from user's email address\n\t\t\t\t\t$email_domain = trim( $ematch[1] );\n\t\t\t\t\t$dom_ID = array_search( $email_domain, $email_domains );\n\n\t\t\t\t\tif( ! $dom_ID )\n\t\t\t\t\t{\t// Insert new email domain\n\t\t\t\t\t\t$DB->query( 'INSERT INTO T_basedomains ( dom_type, dom_name )\n\t\t\t\t\t\t\tVALUES ( \\'email\\', '.$DB->quote( $email_domain ).' )' );\n\t\t\t\t\t\t$dom_ID = $DB->insert_id;\n\n\t\t\t\t\t\t// Memorize inserted domain to prevent duplicates\n\t\t\t\t\t\t$email_domains[$dom_ID] = $email_domain;\n\t\t\t\t\t\t// pre_dump( $dom_ID, $email_domain );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update user_email_dom_ID\n\t\t\t\t\t$DB->query( 'UPDATE T_users\n\t\t\t\t\t\tSET user_email_dom_ID = '.$DB->quote( $dom_ID ).'\n\t\t\t\t\t\tWHERE user_ID = '.$DB->quote( $user_ID ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$DB->commit();\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users fields table...' );\n\t\t// Drop index before increasing a size to avoid an error about \"max key length is 767 bytes\"\n\t\t$DB->query( 'ALTER TABLE T_users__fields DROP INDEX uf_varchar' );\n\t\t// Modify field size\n\t\t$DB->query( 'ALTER TABLE T_users__fields CHANGE uf_varchar uf_varchar VARCHAR( 10000 ) NOT NULL' );\n\t\t// Add index again with limited size in 255 because of utf8 == 765\n\t\t$DB->query( 'ALTER TABLE T_users__fields ADD INDEX uf_varchar ( uf_varchar(255) )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading cron tasks table...' );\n\t\t$DB->query( 'ALTER TABLE T_cron__task CHANGE ctsk_name ctsk_name VARCHAR(255) NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading comments table...' );\n\t\tdb_add_col( 'T_comments', 'comment_IP_ctry_ID', 'int(10) unsigned NULL AFTER comment_author_IP' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for Blocked Email Addreses...' );\n\t\t$DB->query( \"CREATE TABLE {$tableprefix}email__blocked (\n\t\t\temblk_ID                    INT(10) UNSIGNED NOT NULL auto_increment,\n\t\t\temblk_address               VARCHAR(255) DEFAULT NULL,\n\t\t\temblk_status                ENUM ( 'unknown', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) NOT NULL DEFAULT 'unknown',\n\t\t\temblk_sent_count            INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\temblk_sent_last_returnerror INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\temblk_prmerror_count        INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\temblk_tmperror_count        INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\temblk_spamerror_count       INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\temblk_othererror_count      INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\temblk_last_sent_ts          TIMESTAMP NULL,\n\t\t\temblk_last_error_ts         TIMESTAMP NULL,\n\t\t\tPRIMARY KEY                 (emblk_ID),\n\t\t\tUNIQUE                      emblk_address (emblk_address)\n\t\t) ENGINE = myisam\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading email log table...' );\n\t\t// Get old values of emlog_success field\n\t\t$SQL = new SQL();\n\t\t$SQL->SELECT( 'emlog_ID' );\n\t\t$SQL->FROM( 'T_email__log' );\n\t\t$SQL->WHERE( 'emlog_success = 0' );\n\t\t$email_failed_logs = $DB->get_col( $SQL->get() );\n\t\t// Change a field emlog_success to new format\n\t\t$DB->query( 'ALTER TABLE T_email__log CHANGE emlog_success emlog_result ENUM ( \"ok\", \"error\", \"blocked\" ) NOT NULL DEFAULT \"ok\"' );\n\t\tif( !empty( $email_failed_logs ) )\n\t\t{\t// Update only the failed email logs to new values\n\t\t\t// Do NOT update the success email logs, because we already have a result type 'ok' as default\n\t\t\t$DB->query( 'UPDATE T_email__log\n\t\t\t\t\tSET emlog_result = '.$DB->quote( 'error' ).'\n\t\t\t\tWHERE emlog_ID IN ( '.$DB->quote( $email_failed_logs ).' )' );\n\t\t}\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10900' );\n\t}\n\n\tif( $old_db_version < 10970 )\n\t{\t// part 8/a trunk aka first part of \"i4\"\n\n\t\ttask_begin( 'Upgrading Locales table...' );\n\t\tdb_add_col( 'T_locales', 'loc_transliteration_map', 'VARCHAR(10000) NOT NULL default \\'\\' AFTER loc_priority' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading general settings table...' );\n\t\t$DB->query( 'UPDATE T_settings SET set_name = '.$DB->quote( 'smart_view_count' ).' WHERE set_name = '.$DB->quote( 'smart_hit_count' ) );\n\t\t// This query below was added later to turn OFF smart view counting on upgrade from v4 to v5 for better performance\n\t\t$DB->query( 'DELETE FROM T_settings WHERE set_name = '.$DB->quote( 'smart_view_count' ) );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading sessions table...' );\n\t\t$DB->query( \"UPDATE T_sessions SET sess_lastseen = concat( '2000-01-01 ', time( sess_lastseen ) )\n\t\t\t\t\t\tWHERE date( sess_lastseen ) = '1970-01-01'\" );\n\t\t$DB->query( \"ALTER TABLE T_sessions CHANGE COLUMN sess_lastseen sess_lastseen_ts TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00' COMMENT 'User last logged activation time. Value may be off by up to 60 seconds'\" );\n\t\tdb_add_col( 'T_sessions', 'sess_start_ts', \"TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00' AFTER sess_hitcount\" );\n\t\t$DB->query( 'UPDATE T_sessions SET sess_start_ts = TIMESTAMPADD( SECOND, -1, sess_lastseen_ts )' );\n\t\tdb_drop_col( 'T_sessions', 'sess_hitcount' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users table...' );\n\t\tdb_add_col( 'T_users', 'user_lastseen_ts', 'TIMESTAMP NULL AFTER user_created_datetime' );\n\t\t$DB->query( 'UPDATE T_users SET user_lastseen_ts = ( SELECT MAX( sess_lastseen_ts ) FROM T_sessions WHERE sess_user_ID = user_ID )' );\n\t\t$DB->query( 'UPDATE T_users SET user_profileupdate_ts = user_created_datetime WHERE user_profileupdate_ts < user_created_datetime' );\n\t\t$DB->query( \"ALTER TABLE T_users CHANGE COLUMN user_profileupdate_ts user_profileupdate_date DATE NOT NULL DEFAULT '2000-01-01' COMMENT 'Last day when the user has updated some visible field in his profile.'\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating versions table...' );\n\t\tdb_add_col( 'T_items__version', 'iver_ID', 'INT UNSIGNED NOT NULL FIRST' );\n\t\t$DB->query( 'ALTER TABLE T_items__version DROP INDEX iver_itm_ID, ADD INDEX iver_ID_itm_ID ( iver_ID , iver_itm_ID )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading messaging contact group users...' );\n\t\tdb_add_foreign_key( 'T_messaging__contact_groupusers', 'cgu_cgr_ID', 'T_messaging__contact_groups', 'cgr_ID', 'ON DELETE CASCADE' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for a latest version of the POT file...' );\n\t\t$DB->query( \"CREATE TABLE T_i18n_original_string (\n\t\t\tiost_ID        int(10) unsigned NOT NULL auto_increment,\n\t\t\tiost_string    varchar(10000) NOT NULL default '',\n\t\t\tiost_inpotfile tinyint(1) NOT NULL DEFAULT 0,\n\t\t\tPRIMARY KEY (iost_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for a latest versions of the PO files...' );\n\t\t$DB->query( \"CREATE TABLE T_i18n_translated_string (\n\t\t\titst_ID       int(10) unsigned NOT NULL auto_increment,\n\t\t\titst_iost_ID  int(10) unsigned NOT NULL,\n\t\t\titst_locale   varchar(20) NOT NULL default '',\n\t\t\titst_standard varchar(10000) NOT NULL default '',\n\t\t\titst_custom   varchar(10000) NULL,\n\t\t\titst_inpofile tinyint(1) NOT NULL DEFAULT 0,\n\t\t\tPRIMARY KEY (itst_ID)\n\t\t) ENGINE = innodb DEFAULT CHARSET = utf8\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating Antispam IP Ranges table...' );\n\t\tdb_add_col( 'T_antispam__iprange', 'aipr_status', 'enum( \\'trusted\\', \\'suspect\\', \\'blocked\\' ) NULL DEFAULT NULL' );\n\t\tdb_add_col( 'T_antispam__iprange', 'aipr_block_count', 'int(10) unsigned DEFAULT 0' );\n\t\t$DB->query( \"ALTER TABLE T_antispam__iprange CHANGE COLUMN aipr_user_count aipr_user_count int(10) unsigned DEFAULT 0\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10970' );\n\t}\n\n\tif( $old_db_version < 10975 )\n\t{\t// part 8/b trunk aka first part of \"i4\"\n\n\t\ttask_begin( 'Creating default antispam IP ranges... ' );\n\t\t$DB->query( '\n\t\t\tINSERT INTO T_antispam__iprange ( aipr_IPv4start, aipr_IPv4end, aipr_status )\n\t\t\tVALUES ( '.$DB->quote( ip2int( '127.0.0.0' ) ).', '.$DB->quote( ip2int( '127.0.0.255' ) ).', \"trusted\" ),\n\t\t\t\t( '.$DB->quote( ip2int( '10.0.0.0' ) ).', '.$DB->quote( ip2int( '10.255.255.255' ) ).', \"trusted\" ),\n\t\t\t\t( '.$DB->quote( ip2int( '172.16.0.0' ) ).', '.$DB->quote( ip2int( '172.31.255.255' ) ).', \"trusted\" ),\n\t\t\t\t( '.$DB->quote( ip2int( '192.168.0.0' ) ).', '.$DB->quote( ip2int( '192.168.255.255' ) ).', \"trusted\" )\n\t\t\t' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10975' );\n\t}\n\n\tif( $old_db_version < 11000 )\n\t{\t// part 8/c trunk aka first part of \"i4\"\n\n\t\ttask_begin( 'Adding new countries...' );\n\t\t// IGNORE is needed for upgrades from DB version 9970 or later\n\t\t$DB->query( 'INSERT IGNORE INTO T_regional__country ( ctry_code, ctry_name, ctry_curr_ID ) VALUES ( \\'ct\\', \\'Catalonia\\', \\'2\\' )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading message thread statuses table...' );\n\t\tdb_add_col( 'T_messaging__threadstatus', 'tsta_thread_leave_msg_ID', 'int(10) unsigned NULL DEFAULT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Item Settings...' );\n\t\t// Convert item custom fields to custom item settings ( move custom fields from T_items__item table to T_items__item_settings table )\n\t\t$query = \"INSERT INTO T_items__item_settings( iset_item_ID, iset_name, iset_value ) \";\n\t\tfor( $i = 1; $i <= 8; $i++ )\n\t\t{ // For each custom fields:\n\t\t\tif( $i > 1 )\n\t\t\t{\n\t\t\t\t$query .= ' UNION';\n\t\t\t}\n\t\t\t$field_name = ( $i > 5 ) ? 'varchar'.( $i - 5 ) : 'double'.$i;\n\t\t\t$query .= \" SELECT post_ID, 'custom_\".$field_name.\"', post_\".$field_name.\"\n\t\t\t\t\t\t\tFROM T_items__item WHERE post_\".$field_name.\" IS NOT NULL\";\n\t\t}\n\t\t$DB->query( $query );\n\n\t\tfor( $i = 1; $i <= 5; $i++ )\n\t\t{ // drop custom double columns from items tabe\n\t\t\tdb_drop_col( 'T_items__item', 'post_double'.$i );\n\t\t}\n\t\tfor( $i = 1; $i <= 3; $i++ )\n\t\t{ // drop custom varchar columns from items tabe\n\t\t\tdb_drop_col( 'T_items__item', 'post_varchar'.$i );\n\t\t}\n\n\t\t// Convert post_editor_code item field to item settings\n\t\t$DB->query( 'INSERT INTO T_items__item_settings ( iset_item_ID, iset_name, iset_value )\n\t\t\t\t\t\tSELECT post_ID, \"editor_code\", post_editor_code\n\t\t\t\t\t\t\tFROM T_items__item\n\t\t\t\t\t\t\tWHERE post_editor_code IS NOT NULL' );\n\t\tdb_drop_col( 'T_items__item', 'post_editor_code' );\n\n\t\t// Convert post_metadesc item field to item settings\n\t\t$DB->query( 'INSERT INTO T_items__item_settings ( iset_item_ID, iset_name, iset_value )\n\t\t\t\t\t\tSELECT post_ID, \"post_metadesc\", post_metadesc\n\t\t\t\t\t\t\tFROM T_items__item\n\t\t\t\t\t\t\tWHERE post_metadesc IS NOT NULL' );\n\t\tdb_drop_col( 'T_items__item', 'post_metadesc' );\n\n\t\t// Convert and rename post_metakeywords item field to post_custom_headers item settings\n\t\t$DB->query( 'INSERT INTO T_items__item_settings ( iset_item_ID, iset_name, iset_value )\n\t\t\t\t\t\tSELECT post_ID, \"post_custom_headers\", post_metakeywords\n\t\t\t\t\t\t\tFROM T_items__item\n\t\t\t\t\t\t\tWHERE post_metakeywords IS NOT NULL' );\n\t\tdb_drop_col( 'T_items__item', 'post_metakeywords' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading items table...' );\n\t\t// Drop not used column\n\t\tdb_drop_col( 'T_items__item', 'post_commentsexpire' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding new video file types...' );\n\t\t$ftyp = $DB->get_row('SELECT ftyp_ID, ftyp_extensions\n\t\t\t\t\t\t\t\t\tFROM T_filetypes\n\t\t\t\t\t\t\t\t\tWHERE ftyp_mimetype = \"video/mp4\"\n\t\t\t\t\t\t\t\t\tAND ftyp_extensions NOT LIKE \"%f4v%\"\n\t\t\t\t\t\t\t\t\tLIMIT 1');\n\n\t\tif( $ftyp )\n\t\t{\t// Add f4v extension to mp4 file type, if not exists\n\t\t\t$DB->query( 'UPDATE T_filetypes SET ftyp_extensions = \"'.$DB->escape($ftyp->ftyp_extensions.' f4v').'\"\n\t\t\t\t\t\t\tWHERE ftyp_ID = '.$DB->quote($ftyp->ftyp_ID) );\n\t\t}\n\t\t// Add flv file type if not exists\n\t\tif( !db_key_exists( 'T_filetypes', 'ftyp_extensions', '\"flv\"' ) )\n\t\t{\n\t\t\t$DB->query( 'INSERT INTO T_filetypes (ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed)\n\t\t\t\t             VALUES (\"flv\", \"Flash video file\", \"video/x-flv\", \"\", \"browser\", \"registered\")', 'Add \"flv\" file type' );\n\t\t}\n\t\t// Add swf file type if not exists\n\t\tif( !db_key_exists( 'T_filetypes', 'ftyp_extensions', '\"swf\"' ) )\n\t\t{\n\t\t\t$DB->query( 'INSERT INTO T_filetypes (ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed)\n\t\t\t\t             VALUES (\"swf\", \"Flash video file\", \"application/x-shockwave-flash\", \"\", \"browser\", \"registered\")', 'Add \"swf\" file type' );\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading custom item settings...' );\n\t\t$DB->begin();\n\t\t// Convert latitude and longitude from custom setting to normal item settings\n\t\t// Get those blog ids where Latitude and Longitude are both set\n\t\t$result = $DB->get_col( 'SELECT cs_left.cset_coll_ID\n\t\t\t\t\t\t\t\t\tFROM T_coll_settings as cs_left\n\t\t\t\t\t\t\t\t\tINNER JOIN T_coll_settings as cs_right ON cs_left.cset_coll_ID = cs_right.cset_coll_ID\n\t\t\t\t\t\t\t\t\tWHERE cs_left.cset_name = \"custom_double3\" AND cs_left.cset_value = \"Latitude\" AND\n\t\t\t\t\t\t\t\t\t\tcs_right.cset_name = \"custom_double4\" AND cs_right.cset_value = \"Longitude\"' );\n\t\tif( $result )\n\t\t{ // blogs were found where Latitude and Longitude custom fields were set for google maps plugin\n\t\t\t// Set \"Show location coordinates\" on where Latitude and Longitude were set\n\t\t\t$query_values = '( '.implode( ', \"show_location_coordinates\", 1 ), ( ', $result ).', \"show_location_coordinates\", 1 )';\n\t\t\t$DB->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\t\tVALUES '.$query_values );\n\n\t\t\t$coll_ids = implode( ', ', $result );\n\t\t\t// Update latitude Item settings\n\t\t\t$DB->query( 'UPDATE T_items__item_settings SET iset_name = \"latitude\"\n\t\t\t\t\t\t\tWHERE iset_name = \"custom_double3\" AND iset_item_ID IN (\n\t\t\t\t\t\t\t\tSELECT post_ID FROM T_items__item\n\t\t\t\t\t\t\t\tINNER JOIN T_categories ON post_main_cat_ID = cat_ID\n\t\t\t\t\t\t\t\tWHERE cat_blog_ID IN ( '.$coll_ids.' )\n\t\t\t\t\t\t\t)' );\n\t\t\t// Update longitude Item settings\n\t\t\t$DB->query( 'UPDATE T_items__item_settings SET iset_name = \"longitude\"\n\t\t\t\t\t\t\tWHERE iset_name = \"custom_double4\" AND iset_item_ID IN (\n\t\t\t\t\t\t\t\tSELECT post_ID FROM T_items__item\n\t\t\t\t\t\t\t\tINNER JOIN T_categories ON post_main_cat_ID = cat_ID\n\t\t\t\t\t\t\t\tWHERE cat_blog_ID IN ( '.$coll_ids.' )\n\t\t\t\t\t\t\t)' );\n\t\t\t// Delete proessed latitude & longitude custom fields from collection settings\n\t\t\t$DB->query( 'DELETE FROM T_coll_settings\n\t\t\t\t\t\tWHERE ( cset_name = \"custom_double3\" OR cset_name = \"custom_double4\" ) AND\n\t\t\t\t\t\t\tcset_coll_ID IN ( '.$coll_ids.' )' );\n\t\t}\n\t\t$DB->commit(); // End convert latitude and longitude\n\n\t\t$DB->begin(); // Convert custom fields\n\t\t// Delete not used custom fields\n\t\t$DB->query( 'DELETE FROM T_coll_settings WHERE ( cset_value IS NULL OR cset_value = \"\" ) AND cset_name LIKE \"custom\\_%\"' );\n\t\t// Set custom double fields count\n\t\t$DB->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\tSELECT cset_coll_ID, \"count_custom_double\", COUNT( cset_name )\n\t\t\t\t\t\tFROM T_coll_settings\n\t\t\t\t\t\tWHERE cset_name LIKE \"custom\\_double%\"\n\t\t\t\t\t\tGROUP BY cset_coll_ID' );\n\t\t// Set custom varchar fields count\n\t\t$DB->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\tSELECT cset_coll_ID, \"count_custom_varchar\", COUNT( cset_name )\n\t\t\t\t\t\tFROM T_coll_settings\n\t\t\t\t\t\tWHERE cset_name LIKE \"custom\\_varchar%\"\n\t\t\t\t\t\tGROUP BY cset_coll_ID' );\n\t\t// Select all custom fields from all blog, to create converted field values\n\t\t$result = $DB->get_results( 'SELECT cset_coll_ID as coll_ID, cset_name as name, cset_value as value\n\t\t\t\t\t\t\t\t\t\tFROM T_coll_settings\n\t\t\t\t\t\t\t\t\t\tWHERE cset_name LIKE \"custom\\_%\"\n\t\t\t\t\t\t\t\t\t\tORDER BY cset_coll_ID, cset_name' );\n\t\tif( !empty( $result ) )\n\t\t{ // There are custom fields in blog settings\n\t\t\t$convert_field_values = '';\n\t\t\t$reorder_field_values = '';\n\t\t\t$old_prefix = \"\";\n\t\t\t$old_coll_ID = \"\";\n\t\t\tforeach( $result as $row )\n\t\t\t{ // process each custom field\n\t\t\t\t$custom_id = uniqid( '' );\n\t\t\t\t$prefix = ( substr( $row->name, 7, 6 ) === 'double' ) ? 'custom_double' : 'custom_varchar';\n\t\t\t\t// replace custom_double{N} and custom_varchar{N} values with a custom_id where N is number\n\t\t\t\t$convert_field_values .= '( '.$row->coll_ID.', \"'.$row->name.'\", \"'.$custom_id.'\" ), ';\n\t\t\t\t// add new custom_double_{customid} and custom_varchar_{customid} entries with the old correspinding custom field values\n\t\t\t\t$convert_field_values .= '( '.$row->coll_ID.', \"'.$prefix.'_'.$custom_id.'\", \"'.$row->value.'\" ), ';\n\n\t\t\t\t// create reorder values to replace e.g. custom_double2 to custom_double1 if custom_double1 doesn't exists yet\n\t\t\t\t$index = ( ( $old_prefix == $prefix ) && ( $old_coll_ID == $row->coll_ID ) ) ? $index + 1 : 1;\n\t\t\t\t$reorder_field_values .= '( '.$row->coll_ID.', \"'.$prefix.$index.'\", \"'.$custom_id.'\" ), ';\n\t\t\t\t$old_prefix = $prefix;\n\t\t\t\t$old_coll_ID = $row->coll_ID;\n\t\t\t}\n\t\t\t$convert_field_values = substr( $convert_field_values, 0, -2 );\n\t\t\t$reorder_field_values = substr( $reorder_field_values, 0, -2 );\n\t\t\t// Convert custom fields in collection setting\n\t\t\t$DB->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\t\tVALUES '.$convert_field_values );\n\t\t\t// Update double custom field name_ids in item settings table\n\t\t\t$DB->query( 'UPDATE T_items__item_settings SET iset_name = (\n\t\t\t\t\t\t\t\tSELECT CONCAT( \"custom_double_\", cset_value ) FROM T_coll_settings\n\t\t\t\t\t\t\t\t\tINNER JOIN T_categories ON cset_coll_ID = cat_blog_ID\n\t\t\t\t\t\t\t\t\tINNER JOIN T_items__item ON cat_ID = post_main_cat_ID\n\t\t\t\t\t\t\t\t\tWHERE cset_name = iset_name AND post_ID  = iset_item_ID )\n\t\t\t\t\t\t\tWHERE iset_name LIKE \"custom\\_double%\"' );\n\t\t\t// Update varchar custom field name_ids in item settings table\n\t\t\t$DB->query( 'UPDATE T_items__item_settings SET iset_name = (\n\t\t\t\t\t\t\t\tSELECT CONCAT( \"custom_varchar_\", cset_value ) FROM T_coll_settings\n\t\t\t\t\t\t\t\t\tINNER JOIN T_categories ON cset_coll_ID = cat_blog_ID\n\t\t\t\t\t\t\t\t\tINNER JOIN T_items__item ON cat_ID = post_main_cat_ID\n\t\t\t\t\t\t\t\t\tWHERE cset_name = iset_name AND post_ID  = iset_item_ID )\n\t\t\t\t\t\t\tWHERE iset_name LIKE \"custom\\_varchar%\"' );\n\t\t\t// Reorder custom fields in collection settings\n\t\t\t$DB->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\t\tVALUES '.$reorder_field_values );\n\t\t}\n\t\t$DB->commit(); // End convert custom fields\n\t\ttask_end();\n\n\t\ttask_begin( 'Convert group users permissions to pluggable permissions...' );\n\t\t$DB->query( 'REPLACE INTO T_groups__groupsettings( gset_grp_ID, gset_name, gset_value )\n\t\t\t\t\t\tSELECT grp_ID, \"perm_users\", grp_perm_users\n\t\t\t\t\t\t\tFROM T_groups' );\n\t\tdb_drop_col( 'T_groups', 'grp_perm_users' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Update Post Types... ' );\n\t\t$DB->query( \"REPLACE INTO T_items__type ( ptyp_ID, ptyp_name )\n\t\t\tVALUES ( 4000, 'Advertisement' )\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Update files table... ' );\n\t\tdb_add_col( 'T_files', 'file_hash', 'char(32) default NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for files voting...' );\n\t\t$DB->query( 'CREATE TABLE '.$tableprefix.'files__vote (\n\t\t\t\tfvot_file_ID       int(11) UNSIGNED NOT NULL,\n\t\t\t\tfvot_user_ID       int(11) UNSIGNED NOT NULL,\n\t\t\t\tfvot_like          tinyint(1),\n\t\t\t\tfvot_inappropriate tinyint(1),\n\t\t\t\tfvot_spam          tinyint(1),\n\t\t\t\tprimary key (fvot_file_ID, fvot_user_ID)\n\t\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for users reporting...' );\n\t\t$DB->query( \"CREATE TABLE T_users__reports (\n\t\t\turep_target_user_ID int(11) unsigned NOT NULL,\n\t\t\turep_reporter_ID    int(11) unsigned NOT NULL,\n\t\t\turep_status         enum( 'fake', 'guidelines', 'harass', 'spam', 'other' ),\n\t\t\turep_info           varchar(240),\n\t\t\turep_datetime\t\tdatetime NOT NULL,\n\t\t\tPRIMARY KEY ( urep_target_user_ID, urep_reporter_ID )\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading skins type...' );\n\t\t$DB->query( \"ALTER TABLE T_skins__skin MODIFY COLUMN skin_type enum('normal','feed','sitemap','mobile','tablet') NOT NULL default 'normal'\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs skins...' );\n\t\t// Convert blog skin ID to blog settings\n\t\t$DB->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\tSELECT blog_ID, \"normal_skin_ID\", blog_skin_ID\n\t\t\t\t\t\tFROM T_blogs' );\n\t\tdb_drop_col( 'T_blogs', 'blog_skin_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Update categories table... ' );\n\t\tdb_add_col( 'T_categories', 'cat_meta', 'tinyint(1) NOT NULL DEFAULT 0' );\n\t\tdb_add_col( 'T_categories', 'cat_lock', 'tinyint(1) NOT NULL DEFAULT 0' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Plugin settings update...' );\n\t\t$all_blog_ids = $DB->get_col( 'SELECT blog_ID FROM T_blogs' );\n\t\t$plugin_ids = $DB->get_assoc( 'SELECT pset_plug_ID, pset_value FROM T_pluginsettings WHERE pset_name = \"render_comments\"' );\n\t\t$insert_values = '';\n\t\tforeach( $all_blog_ids as $blog_ID )\n\t\t{\n\t\t\tforeach( $plugin_ids as $plugin_ID => $setting_value )\n\t\t\t{\n\t\t\t\t$apply_comment_rendering = $setting_value ? 'stealth' : 'never';\n\t\t\t\t$insert_values .= '( '.$blog_ID.', \"plugin'.$plugin_ID.'_coll_apply_comment_rendering\", \"'.$apply_comment_rendering.'\" ),';\n\t\t\t}\n\t\t}\n\t\tif( !empty( $insert_values ) )\n\t\t{\n\t\t\t$DB->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\tVALUES '.substr( $insert_values, 0, strlen( $insert_values ) - 1 ) );\n\t\t}\n\t\t$DB->query( 'DELETE FROM T_pluginsettings WHERE pset_name = \"render_comments\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating comment prerendering cache table...' );\n\t\t$DB->query( \"CREATE TABLE T_comments__prerendering (\n\t\t\tcmpr_cmt_ID INT(11) UNSIGNED NOT NULL,\n\t\t\tcmpr_format ENUM('htmlbody','entityencoded','xml','text') NOT NULL,\n\t\t\tcmpr_renderers TEXT NOT NULL,\n\t\t\tcmpr_content_prerendered MEDIUMTEXT NULL,\n\t\t\tcmpr_datemodified TIMESTAMP NOT NULL,\n\t\t\tPRIMARY KEY (cmpr_cmt_ID, cmpr_format)\n\t\t) ENGINE = innodb\" );\n\t\tdb_add_col( 'T_comments', 'comment_renderers', \"TEXT NOT NULL AFTER comment_content\" );\n\t\t$DB->query( 'UPDATE T_comments SET comment_renderers = \"default\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading plugins table...' );\n\t\tdb_drop_col( 'T_plugins', 'plug_apply_rendering' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Auto_P plugin...' );\n\t\t$blog_settings = $DB->get_assoc( 'SELECT cset_coll_ID, cset_value FROM T_coll_settings WHERE cset_name = \"comment_autobr\"' );\n\t\t$insert_values = array();\n\t\t$plugin_ids = $DB->get_col( 'SELECT plug_ID FROM T_plugins WHERE plug_code = \"b2WPAutP\"' );\n\t\tforeach( $blog_settings as $blog_ID => $blog_setting_value )\n\t\t{\n\t\t\tforeach( $plugin_ids as $plugin_ID )\n\t\t\t{\n\t\t\t\tswitch( $blog_setting_value )\n\t\t\t\t{\n\t\t\t\t\tcase 'never':\n\t\t\t\t\t\t$apply_comment_rendering = 'never';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'optional':\n\t\t\t\t\t\t$apply_comment_rendering = 'opt-out';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'always':\n\t\t\t\t\t\t$apply_comment_rendering = 'stealth';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak 2;\n\t\t\t\t}\n\t\t\t\t$insert_values[] = '( '.$blog_ID.', \"plugin'.$plugin_ID.'_coll_apply_comment_rendering\", \"'.$apply_comment_rendering.'\" )';\n\t\t\t}\n\t\t}\n\t\tif( count( $insert_values ) > 0 )\n\t\t{\n\t\t\t$DB->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\tVALUES '.implode( ',', $insert_values ) );\n\t\t}\n\t\t$DB->query( 'DELETE FROM T_coll_settings WHERE cset_name = \"comment_autobr\"' );\n\t\t$DB->query( 'UPDATE T_comments SET comment_content = REPLACE( REPLACE( comment_content, \"<br>\\n\", \"\\n\" ), \"<br />\\n\", \"\\n\" )' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11000' );\n\t}\n\n\tif( $old_db_version < 11010 )\n\t{\t// part 9 trunk aka second part of \"i4\"\n\n\t\ttask_begin( 'Upgrading post statuses...' );\n\t\t$DB->query( \"ALTER TABLE T_items__item CHANGE COLUMN post_status post_status enum('published','community','deprecated','protected','private','review','draft','redirected') NOT NULL default 'published'\" );\n\t\t$DB->query( \"ALTER TABLE T_items__version CHANGE COLUMN iver_status iver_status ENUM('published','community','deprecated','protected','private','review','draft','redirected') NULL\" );\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms CHANGE COLUMN bloguser_perm_poststatuses bloguser_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') NOT NULL default ''\" );\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms CHANGE COLUMN bloggroup_perm_poststatuses bloggroup_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') NOT NULL default ''\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading groups table...' );\n\t\t$pbloggers_renamed_to_moderators = $DB->query( 'UPDATE T_groups SET grp_name = \"Moderators\" WHERE grp_ID = 2 AND grp_name = \"Privileged Bloggers\"' );\n\t\t// Update administrators and moderators users coll setting permissions with new permissions\n\t\t// Note we can change moderators permission if the group name and ID was not changed after the original install\n\t\t$moderators_condition = $pbloggers_renamed_to_moderators ? ' OR bloggroup_group_ID = 2' : '';\n\t\t$DB->query( \"UPDATE T_coll_group_perms SET bloggroup_perm_poststatuses = 'published,community,deprecated,protected,private,review,draft' WHERE bloggroup_group_ID = 1\".$moderators_condition );\n\t\t// Change groups name\n\t\t$DB->query( 'UPDATE T_groups SET grp_name = \"Trusted Users\" WHERE grp_ID = 3 AND grp_name = \"Bloggers\"' );\n\t\t$DB->query( 'UPDATE T_groups SET grp_name = \"Normal Users\" WHERE grp_ID = 4 AND grp_name = \"Basic Users\"' );\n\n\t\t// Get \"Misbehaving/Suspect Users\" group ID\n\t\t$suspect_query = 'SELECT grp_ID\n\t\t\t\t\t\tFROM T_groups\n\t\t\t\t\t\tWHERE grp_name = \"Misbehaving/Suspect Users\"\n\t\t\t\t\t\tORDER BY grp_ID DESC\n\t\t\t\t\t\tLIMIT 1';\n\t\t$suspect_group_ID = $DB->get_var( $suspect_query );\n\t\tif( empty( $suspect_group_ID ) )\n\t\t{ // suspect group doesn't exists, check spammers because probably it does not exists either\n\t\t\t$insert_values = '( \"Misbehaving/Suspect Users\" )';\n\t\t\t// Get \"Spammers/Restricted Users\" group ID\n\t\t\t$query = 'SELECT grp_ID\n\t\t\t\t\tFROM T_groups\n\t\t\t\t\tWHERE grp_name = \"Spammers/Restricted Users\"\n\t\t\t\t\tORDER BY grp_ID DESC\n\t\t\t\t\tLIMIT 1';\n\t\t\t$spammers_group_ID = $DB->get_var( $query );\n\t\t\tif( empty( $spammers_group_ID ) )\n\t\t\t{\n\t\t\t\t$insert_values .= ', ( \"Spammers/Restricted Users\" )';\n\t\t\t}\n\t\t\t// Insert two new group\n\t\t\t$DB->query( 'INSERT INTO T_groups ( grp_name )\n\t\t\t\t\t\tVALUES '.$insert_values );\n\n\t\t\t$suspect_group_ID = $DB->get_var( $suspect_query );\n\t\t\tif( $suspect_group_ID )\n\t\t\t{ // Set coll setting permissions for Misbehaving/Suspect Users in Forums\n\t\t\t\t$query = \"\n\t\t\t\t\tINSERT INTO T_coll_group_perms( bloggroup_blog_ID, bloggroup_group_ID, bloggroup_ismember,\n\t\t\t\t\t\tbloggroup_perm_poststatuses, bloggroup_perm_delpost, bloggroup_perm_edit_ts,\n\t\t\t\t\t\tbloggroup_perm_own_cmts, bloggroup_perm_vote_spam_cmts, bloggroup_perm_draft_cmts, bloggroup_perm_publ_cmts, bloggroup_perm_depr_cmts,\n\t\t\t\t\t\tbloggroup_perm_cats, bloggroup_perm_properties,\n\t\t\t\t\t\tbloggroup_perm_media_upload, bloggroup_perm_media_browse, bloggroup_perm_media_change )\n\t\t\t\t\tSELECT blog_ID, \".$suspect_group_ID.\", 1, 'review,draft', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n\t\t\t\t\t\tFROM T_blogs WHERE blog_ID = 5 AND blog_shortname = 'Forums'\";\n\t\t\t\t$DB->query( $query );\n\t\t\t}\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs table...' );\n\t\tdb_add_col( 'T_blogs', 'blog_type', 'ENUM( \"std\", \"photo\", \"group\", \"forum\", \"manual\" ) DEFAULT \"std\" NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading comment statuses...' );\n\t\t$DB->query( \"ALTER TABLE T_comments CHANGE COLUMN comment_status comment_status ENUM('published','community','deprecated','protected','private','review','draft','trash') DEFAULT 'published' NOT NULL\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating collection user/group permissions...' );\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_cmtstatuses', \"set('review','draft','private','protected','deprecated','community','published') NOT NULL default '' AFTER bloguser_perm_vote_spam_cmts\" );\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_edit_cmt', \"ENUM('no','own','anon','lt','le','all') NOT NULL default 'no' AFTER bloguser_perm_cmtstatuses\" );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_cmtstatuses', \"set('review','draft','private','protected','deprecated','community','published') NOT NULL default '' AFTER bloggroup_perm_vote_spam_cmts\" );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_edit_cmt', \"ENUM('no','own','anon','lt','le','all') NOT NULL default 'no' AFTER bloggroup_perm_cmtstatuses\" );\n\n\t\t// Add access to those comment statuses for what user had before\n\t\t$DB->query( 'UPDATE T_coll_user_perms\n\t\t\t\t\tSET bloguser_perm_cmtstatuses = ( bloguser_perm_publ_cmts * 1 ) | ( bloguser_perm_depr_cmts * 4 ) | ( bloguser_perm_draft_cmts * 64 )' );\n\t\t// Add access to all cmt statuses for those users which had edit permission on all comment statuses\n\t\t$DB->query( 'UPDATE T_coll_user_perms\n\t\t\t\t\tSET bloguser_perm_cmtstatuses = \"published,community,deprecated,protected,private,review,draft\", bloguser_perm_edit_cmt = \"all\"\n\t\t\t\t\tWHERE bloguser_perm_publ_cmts <> 0 AND bloguser_perm_depr_cmts <> 0 AND bloguser_perm_draft_cmts <> 0' );\n\t\t// Add \"lower then\" edit permission to those users who had permission to edit published or draft comments\n\t\t$DB->query( 'UPDATE T_coll_user_perms\n\t\t\t\t\tSET bloguser_perm_edit_cmt = \"lt\"\n\t\t\t\t\tWHERE ( bloguser_perm_cmtstatuses & 65 ) != 0 AND bloguser_perm_edit_cmt = \"no\"' );\n\n\t\t// Add access to those comment statuses for what group had before\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t\t\tSET bloggroup_perm_cmtstatuses = ( bloggroup_perm_publ_cmts * 1 ) | ( bloggroup_perm_depr_cmts * 4 ) | ( bloggroup_perm_draft_cmts * 64 )' );\n\t\t// Add access to all cmt statuses for those groups which had edit permission on all comment statuses\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t\t\tSET bloggroup_perm_cmtstatuses = \"published,community,deprecated,protected,private,review,draft\", bloggroup_perm_edit_cmt = \"all\"\n\t\t\t\t\tWHERE bloggroup_perm_publ_cmts <> 0 AND bloggroup_perm_depr_cmts <> 0 AND bloggroup_perm_draft_cmts <> 0' );\n\t\t// Add \"lower then\" edit permission to those groups who had permission to edit published or draft comments\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t\t\tSET bloggroup_perm_edit_cmt = \"lt\"\n\t\t\t\t\tWHERE ( bloggroup_perm_cmtstatuses & 65 ) != 0 AND bloggroup_perm_edit_cmt = \"no\"' );\n\n\t\tdb_drop_col( 'T_coll_user_perms', 'bloguser_perm_draft_cmts' );\n\t\tdb_drop_col( 'T_coll_user_perms', 'bloguser_perm_publ_cmts' );\n\t\tdb_drop_col( 'T_coll_user_perms', 'bloguser_perm_depr_cmts' );\n\t\tdb_drop_col( 'T_coll_group_perms', 'bloggroup_perm_draft_cmts' );\n\t\tdb_drop_col( 'T_coll_group_perms', 'bloggroup_perm_publ_cmts' );\n\t\tdb_drop_col( 'T_coll_group_perms', 'bloggroup_perm_depr_cmts' );\n\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_delcmts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_edit_ts' );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_delcmts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_edit_ts' );\n\t\t// GRANT delete comment perms for moderators\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t\t\tSET bloggroup_perm_delcmts = 1\n\t\t\t\t\tWHERE bloggroup_perm_edit_cmt = \"le\" OR bloggroup_perm_edit_cmt = \"all\"' );\n\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms CHANGE COLUMN bloguser_perm_own_cmts bloguser_perm_recycle_owncmts tinyint NOT NULL default 0\" );\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms CHANGE COLUMN bloggroup_perm_own_cmts bloggroup_perm_recycle_owncmts tinyint NOT NULL default 0\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating blogs settings...' );\n\t\t$DB->query( 'UPDATE T_coll_settings SET cset_value = \"blog\" WHERE cset_name = \"enable_goto_blog\" AND cset_value = \"1\"' );\n\t\t$DB->query( 'UPDATE T_coll_settings SET cset_value = \"no\" WHERE cset_name = \"enable_goto_blog\" AND cset_value = \"0\"' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11010' );\n\t}\n\n\tif( $old_db_version < 11020 )\n\t{\t// part 10 trunk aka third part of \"i4\"\n\n\t\ttask_begin( 'Upgrading users table...' );\n\t\t// Get all users with defined IPs\n\t\t$users_SQL = new SQL();\n\t\t$users_SQL->SELECT( 'user_ID, user_created_fromIPv4' );\n\t\t$users_SQL->FROM( 'T_users' );\n\t\t$users_SQL->WHERE( 'user_created_fromIPv4 IS NOT NULL' );\n\t\t$users_SQL->WHERE_and( 'user_created_fromIPv4 != '.$DB->quote( ip2int( '0.0.0.0' ) ) );\n\t\t$users_SQL->WHERE_and( 'user_created_fromIPv4 != '.$DB->quote( ip2int( '127.0.0.1' ) ) );\n\t\t$users = $DB->get_assoc( $users_SQL->get() );\n\t\t// Get user's IPs from settings table\n\t\t$settings_SQL = new SQL();\n\t\t$settings_SQL->SELECT( 'uset_user_ID, uset_value' );\n\t\t$settings_SQL->FROM( 'T_users__usersettings' );\n\t\t$settings_SQL->WHERE( 'uset_name = \"user_ip\"' );\n\t\tif( count( $users ) > 0 )\n\t\t{\t// Get IPs only for users which have not IP in T_users table\n\t\t\t$settings_SQL->WHERE_and( 'uset_user_ID NOT IN ('.$DB->quote( array_keys( $users ) ).')' );\n\t\t}\n\t\t$settings = $DB->get_assoc( $settings_SQL->get() );\n\t\tif( count( $users ) > 0 || count( $settings ) > 0 )\n\t\t{\n\t\t\t$users_settings_insert_sql = array();\n\t\t\tforeach( $users as $user_ID => $user_IP )\n\t\t\t{\n\t\t\t\t$users_settings_insert_sql[] = '( '.$DB->quote( $user_ID ).', \"created_fromIPv4\", '.$DB->quote( $user_IP ).' )';\n\t\t\t}\n\t\t\tforeach( $settings as $user_ID => $user_IP )\n\t\t\t{\n\t\t\t\t$users_settings_insert_sql[] = '( '.$DB->quote( $user_ID ).', \"created_fromIPv4\", '.$DB->quote( ip2int( $user_IP ) ).' )';\n\t\t\t}\n\t\t\t// Insert IPs values into settings table\n\t\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\tVALUES '.implode( ', ', $users_settings_insert_sql ) );\n\t\t}\n\t\t// Remove old IPs from settings table\n\t\t$DB->query( 'DELETE FROM T_users__usersettings\n\t\t\tWHERE uset_name = \"user_ip\"' );\n\t\tdb_drop_col( 'T_users', 'user_created_fromIPv4' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11020' );\n\t}\n\n\tif( $old_db_version < 11025 )\n\t{\t// part 11 trunk aka fourth part of \"i4\"\n\n\t\ttask_begin( 'Upgrading items table...' );\n\t\t$DB->query( \"UPDATE T_items__item SET post_datecreated = concat( '2000-01-01 ', time( post_datecreated ) )\n\t\t\t\t\t\tWHERE date( post_datecreated ) = '1970-01-01'\" );\n\t\t$DB->query( \"UPDATE T_items__item SET post_datemodified = concat( '2000-01-01 ', time( post_datemodified ) )\n\t\t\t\t\t\tWHERE date( post_datemodified ) = '1970-01-01'\" );\n\t\t$DB->query( \"ALTER TABLE T_items__item CHANGE COLUMN post_datecreated post_datecreated TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00'\" );\n\t\t$DB->query( \"ALTER TABLE T_items__item CHANGE COLUMN post_datemodified post_datemodified TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00'\" );\n\t\tdb_add_col( 'T_items__item', 'post_last_touched_ts', \"TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00' AFTER post_datemodified\" );\n\t\t$DB->query( 'UPDATE T_items__item SET post_last_touched_ts = post_datemodified' );\n\t\ttask_end();\n\n\t\t/*\n\t\t * ADD UPGRADES FOR i4 BRANCH __ABOVE__ IN THIS BLOCK.\n\t\t *\n\t\t * This part will be included in trunk and i4 branches\n\t\t */\n\n\t\tset_upgrade_checkpoint( '11025' );\n\t}\n\n\t// In some upgrade versions ( currently only in \"i5\" ) we would like to create profile pictures links from the user's files in the profile pictures folder\n\t// To be able to do that we need an up to date database version, so we will create profile pictures after the ugrade script run successfully.\n\t// Set this $create_profile_picture_links to true only in those upgrade block where it's required.\n\t$create_profile_picture_links = false;\n\n\tif( $old_db_version < 11100 )\n\t{\t// part 12 trunk aka \"i5\"\n\n\t\ttask_begin( 'Update links table...' );\n\t\tdb_add_col( 'T_links', 'link_usr_ID', 'int(11) unsigned  NULL COMMENT \"Used for linking files to users (user profile picture)\" AFTER link_cmt_ID' );\n\t\tdb_add_index( 'T_links', 'link_usr_ID', 'link_usr_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating links for users profile pictures...' );\n\t\t// Create links for main profile pictures\n\t\t$link_create_date = date2mysql( time() );\n\t\t$DB->query( 'INSERT INTO T_links( link_datecreated, link_datemodified, link_usr_ID, link_file_ID, link_position, link_order )\n\t\t\t\t\t\tSELECT '.$DB->quote( $link_create_date ).', '.$DB->quote( $link_create_date ).', user_ID, user_avatar_file_ID, \"\", 1\n\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\tWHERE user_avatar_file_ID IS NOT NULL' );\n\t\t// Set $create_profile_picture_links to true to create links for all files from the users profile_pictures folder\n\t\t$create_profile_picture_links = true;\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading custom item settings...' );\n\t\t$DB->begin(); // Add names for custom fields\n\t\t// Select all custom fields from all blogs, to create field names\n\t\t$result = $DB->get_results( 'SELECT cset_coll_ID as coll_ID, cset_name as name, cset_value as value\n\t\t\t\t\t\t\t\t\t\tFROM T_coll_settings\n\t\t\t\t\t\t\t\t\t\tWHERE cset_name LIKE \"custom\\_double\\_%\"\n\t\t\t\t\t\t\t\t\t\t   OR cset_name LIKE \"custom\\_varchar\\_%\"\n\t\t\t\t\t\t\t\t\t\tORDER BY cset_coll_ID, cset_name' );\n\t\tif( !empty( $result ) )\n\t\t{ // There are custom fields in blog settings\n\t\t\t$insert_field_names = '';\n\t\t\tforeach( $result as $row )\n\t\t\t{ // process each custom field\n\t\t\t\t$field_guid = preg_replace( '/^custom_(double|varchar)_([a-f0-9\\-]+)$/', '$2', $row->name );\n\t\t\t\t// Replace special chars/umlauts, if we can convert charsets:\n\t\t\t\tload_funcs('locales/_charset.funcs.php');\n\t\t\t\t$field_name = strtolower( preg_replace( '/[^a-z0-9\\-_]+/i', '_', $row->value ) );\n\t\t\t\t$field_name = replace_special_chars( $field_name );\n\n\t\t\t\t$insert_field_names .= '( '.$row->coll_ID.', \"custom_fname_'.$field_guid.'\", \"'.$field_name.'\" ), ';\n\t\t\t}\n\t\t\t// Insert names for custom fields in collection settings\n\t\t\t$DB->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\t\tVALUES '.substr( $insert_field_names, 0, -2 ) );\n\t\t}\n\t\t$DB->commit(); // End adding of names for custom fields\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading comments table...' );\n\t\tdb_add_index( 'T_comments', 'comment_status', 'comment_status' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11100' );\n\t}\n\n\tif( $old_db_version < 11110 )\n\t{ // part 13 trunk aka second part of \"i5\"\n\n\t\t// Add new settings for antispam groups\n\t\t$antispam_group_settings = $DB->get_assoc( 'SELECT set_name, set_value\n\t\t\t FROM T_settings\n\t\t\tWHERE set_name IN ( '.$DB->quote( array( 'antispam_suspicious_group', 'antispam_trust_groups' ) ).')' );\n\t\tif( count( $antispam_group_settings ) < 2 )\n\t\t{ // Insert new settings only if don't exist in DB\n\t\t\ttask_begin( 'Updating general settings...' );\n\t\t\t// Set antispam suspicious group\n\t\t\tif( !isset( $antispam_group_settings['antispam_suspicious_group'] ) )\n\t\t\t{ // Insert new value, Don't rewrite value if it already defined before\n\t\t\t\t$suspect_group_SQL = new SQL();\n\t\t\t\t$suspect_group_SQL->SELECT( 'grp_ID' );\n\t\t\t\t$suspect_group_SQL->FROM( 'T_groups' );\n\t\t\t\t$suspect_group_SQL->WHERE( 'grp_name = '.$DB->quote( 'Misbehaving/Suspect Users' ) );\n\t\t\t\t$suspect_group_ID = $DB->get_var( $suspect_group_SQL->get() );\n\t\t\t\tif( !empty( $suspect_group_ID ) )\n\t\t\t\t{ // Save setting value\n\t\t\t\t\t$DB->query( 'INSERT INTO T_settings ( set_name, set_value ) VALUES\n\t\t\t\t\t\t\t( '.$DB->quote( 'antispam_suspicious_group' ).', '.$DB->quote( $suspect_group_ID ).' )' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Set antispam trust groups\n\t\t\tif( !isset( $antispam_group_settings['antispam_trust_groups'] ) )\n\t\t\t{ // Insert new value, Don't rewrite value if it already defined before\n\t\t\t\t$trust_groups = array( 'Administrators', 'Moderators', 'Trusted Users', 'Spammers/Restricted Users' );\n\t\t\t\t$trust_groups_SQL = new SQL();\n\t\t\t\t$trust_groups_SQL->SELECT( 'grp_ID' );\n\t\t\t\t$trust_groups_SQL->FROM( 'T_groups' );\n\t\t\t\t$trust_groups_SQL->WHERE( 'grp_name IN ( '.$DB->quote( $trust_groups ).')' );\n\t\t\t\t$trust_groups_IDs = $DB->get_col( $trust_groups_SQL->get() );\n\t\t\t\tif( !empty( $trust_groups_IDs ) )\n\t\t\t\t{ // Save setting value\n\t\t\t\t\t$DB->query( 'INSERT INTO T_settings ( set_name, set_value ) VALUES\n\t\t\t\t\t\t\t( '.$DB->quote( 'antispam_trust_groups' ).', '.$DB->quote( implode( ',', $trust_groups_IDs ) ).' )' );\n\t\t\t\t}\n\t\t\t}\n\t\t\ttask_end();\n\t\t}\n\n\t\tset_upgrade_checkpoint( '11110' );\n\t}\n\n\tif( $old_db_version < 11200 )\n\t{ // part 14 trunk aka \"i6\"\n\n\t\ttask_begin( 'Upgrading comments table...' );\n\t\tdb_add_col( 'T_comments', 'comment_last_touched_ts', \"TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00' AFTER comment_date\" );\n\t\t$DB->query( 'UPDATE T_comments\n\t\t                SET comment_last_touched_ts = comment_date' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Convert email addresses to lowercase... ' );\n\t\t$DB->query( 'UPDATE T_users SET user_email = LOWER( user_email )' );\n\t\t$DB->query( 'UPDATE '.$tableprefix.'email__blocked SET emblk_address = LOWER( emblk_address )' );\n\t\t$DB->query( 'UPDATE T_email__returns SET emret_address = LOWER( emret_address )' );\n\t\t$DB->query( 'UPDATE T_email__log SET emlog_to = LOWER( emlog_to )' );\n\t\t$DB->query( 'UPDATE T_comments\n\t\t\t  SET comment_author_email = LOWER( comment_author_email )\n\t\t\tWHERE comment_author_email IS NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs table...' );\n\t\tdb_add_col( 'T_blogs', 'blog_order', 'int(11) NULL DEFAULT NULL' );\n\t\t$DB->query( 'UPDATE T_blogs\n\t\t                SET blog_order = blog_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating general settings...' );\n\t\t$site_skins_enabled = $DB->get_var( 'SELECT set_value\n\t\t\t FROM T_settings\n\t\t\tWHERE set_name = '.$DB->quote( 'site_skins_enabled' ) );\n\t\tif( is_null( $site_skins_enabled ) )\n\t\t{ // Insert new setting to disable site skins\n\t\t\t$DB->query( 'INSERT INTO T_settings ( set_name, set_value )\n\t\t\t\tVALUES ( '.$DB->quote( 'site_skins_enabled' ).', '.$DB->quote( '0' ).' )' );\n\t\t}\n\t\telseif( $site_skins_enabled == '1' )\n\t\t{ // Disable site skins if it is enabled\n\t\t\t$DB->query( 'UPDATE T_settings\n\t\t\t\t  SET set_value = '.$DB->quote( '0' ).'\n\t\t\t\tWHERE set_name = '.$DB->quote( 'site_skins_enabled' ) );\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs table...' );\n\t\tdb_add_col( 'T_blogs', 'blog_favorite', 'TINYINT(1) NOT NULL DEFAULT 1' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table of base domains... ' );\n\t\t$DB->query( \"ALTER TABLE T_basedomains CHANGE COLUMN dom_status dom_status ENUM('unknown','trusted','suspect','blocked') NOT NULL DEFAULT 'unknown'\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for file links voting... ' );\n\t\tdb_create_table( $tableprefix.'links__vote', '\n\t\t\tlvot_link_ID       int(11) UNSIGNED NOT NULL,\n\t\t\tlvot_user_ID       int(11) UNSIGNED NOT NULL,\n\t\t\tlvot_like          tinyint(1),\n\t\t\tlvot_inappropriate tinyint(1),\n\t\t\tlvot_spam          tinyint(1),\n\t\t\tprimary key (lvot_link_ID, lvot_user_ID)' );\n\n\t\t// Convert all file votes to link votes\n\t\t$DB->query( 'INSERT INTO '.$tableprefix.'links__vote ( lvot_link_ID, lvot_user_ID, lvot_like, lvot_inappropriate, lvot_spam )\n\t\t\t\t\t\tSELECT link_ID, fvot_user_ID, fvot_like, fvot_inappropriate, fvot_spam\n\t\t\t\t\t\tFROM '.$tableprefix.'files__vote\n\t\t\t\t\t\tLEFT JOIN T_links ON link_file_ID = fvot_file_ID\n\t\t\t\t\t\tWHERE link_ID IS NOT NULL' );\n\n\t\t// Delete old file voting table\n\t\t$DB->query( 'DROP TABLE IF EXISTS '.$tableprefix.'files__vote' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for goal categories... ' );\n\t\tdb_create_table( 'T_track__goalcat', '\n\t\t\tgcat_ID     int(10) unsigned NOT NULL auto_increment,\n\t\t\tgcat_name   varchar(50) default NULL,\n\t\t\tgcat_color  char(7) default NULL,\n\t\t\tPRIMARY KEY (gcat_ID)',\n\t\t\t'ENGINE = myisam' );\n\t\t// Insert default goal category\n\t\t$DB->query( 'INSERT INTO T_track__goalcat ( gcat_name, gcat_color )\n\t\t\tVALUES ( '.$DB->quote( 'Default' ).', '.$DB->quote( '#999999' ).' )' );\n\t\t$default_goalcat_ID = $DB->insert_id;\n\n\t\tdb_add_col( 'T_track__goal', 'goal_gcat_ID', 'int(10) unsigned NOT NULL DEFAULT \"'.$default_goalcat_ID.'\" AFTER goal_ID' );\n\t\t$DB->query( 'ALTER TABLE T_track__goal\n\t\t\tCHANGE goal_gcat_ID goal_gcat_ID int(10) unsigned NOT NULL' );\n\t\ttask_end();\n\n\t\t// This task was not required, but we would like to make sure that we have future proof link_datecreated and link_datemodified fields.\n\t\t// There were previous versions, when these fields were set to '1970-01-01' because the $localtimenow was not initialized during the install script\n\t\ttask_begin( 'Update links table...' );\n\t\t$DB->query( \"UPDATE T_links SET link_datecreated = concat( '2000-01-01 ', time( link_datecreated ) )\n\t\t\t\t\t\tWHERE date( link_datecreated ) = '1970-01-01'\" );\n\t\t$DB->query( \"UPDATE T_links SET link_datemodified = concat( '2000-01-01 ', time( link_datemodified ) )\n\t\t\t\t\t\tWHERE date( link_datemodified ) = '1970-01-01'\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Blogs table...' );\n\t\t$DB->query( 'ALTER TABLE T_blogs CHANGE blog_description blog_shortdesc varchar(250) NULL default \"\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Comments table...' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\tCHANGE comment_post_ID   comment_item_ID        int(11) unsigned NOT NULL default 0,\n\t\t\tCHANGE comment_author_ID comment_author_user_ID int unsigned NULL default NULL');\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\tDROP INDEX comment_post_ID');\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\tADD KEY comment_item_ID ( comment_item_ID )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Files table...' );\n\t\t$DB->query( 'ALTER TABLE T_files\n\t\t\tDROP INDEX file,\n\t\t\tADD COLUMN file_path_hash char(32) default NULL' );\n\t\t// Change file path length to the max allowed value\n\t\t$DB->query( \"ALTER TABLE T_files CHANGE COLUMN file_path file_path VARCHAR(767) NOT NULL DEFAULT ''\" );\n\t\t$DB->query( 'UPDATE T_files SET file_path_hash = MD5( CONCAT( file_root_type, file_root_ID, file_path ) )');\n\t\t$DB->query( 'ALTER TABLE T_files ADD UNIQUE file_path (file_path_hash)' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for email campaigns... ' );\n\t\tdb_create_table( 'T_email__campaign', '\n\t\t\tecmp_ID          INT NOT NULL AUTO_INCREMENT,\n\t\t\tecmp_date_ts     TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\tecmp_name        VARCHAR(255) NOT NULL,\n\t\t\tecmp_email_title VARCHAR(255) NULL,\n\t\t\tecmp_email_html  TEXT NULL,\n\t\t\tecmp_email_text  TEXT NULL,\n\t\t\tecmp_sent_ts     TIMESTAMP NULL,\n\t\t\tPRIMARY KEY      (ecmp_ID)',\n\t\t\t'ENGINE = myisam' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for email campaign send data... ' );\n\t\tdb_create_table( 'T_email__campaign_send', '\n\t\t\tcsnd_camp_ID  INT(11) UNSIGNED NOT NULL,\n\t\t\tcsnd_user_ID  INT(11) UNSIGNED NOT NULL,\n\t\t\tcsnd_emlog_ID INT(11) UNSIGNED NULL,\n\t\t\tPRIMARY KEY   csnd_PK ( csnd_camp_ID, csnd_user_ID )',\n\t\t\t'ENGINE = myisam' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Rename table \"email blocked\" to \"email address\"... ' );\n\t\t$DB->query( 'RENAME TABLE '.$tableprefix.'email__blocked TO T_email__address' );\n\t\t$DB->query( \"ALTER TABLE T_email__address\n\t\t\tCHANGE emblk_ID                    emadr_ID                    INT(10) UNSIGNED NOT NULL auto_increment,\n\t\t\tCHANGE emblk_address               emadr_address               VARCHAR(255) DEFAULT NULL,\n\t\t\tCHANGE emblk_status                emadr_status                ENUM ( 'unknown', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) NOT NULL DEFAULT 'unknown',\n\t\t\tCHANGE emblk_sent_count            emadr_sent_count            INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\tCHANGE emblk_sent_last_returnerror emadr_sent_last_returnerror INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\tCHANGE emblk_prmerror_count        emadr_prmerror_count        INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\tCHANGE emblk_tmperror_count        emadr_tmperror_count        INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\tCHANGE emblk_spamerror_count       emadr_spamerror_count       INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\tCHANGE emblk_othererror_count      emadr_othererror_count      INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\tCHANGE emblk_last_sent_ts          emadr_last_sent_ts          TIMESTAMP NULL,\n\t\t\tCHANGE emblk_last_error_ts         emadr_last_error_ts         TIMESTAMP NULL\");\n\t\t$DB->query( \"ALTER TABLE T_email__address\n\t\t\tADD UNIQUE emadr_address ( emadr_address )\" );\n\t\t$DB->query( \"ALTER TABLE T_email__address\n\t\t\tDROP INDEX emblk_address\");\n\t\ttask_end();\n\n\t\t// Add new email status 'redemption'\n\t\ttask_begin( 'Upgrading table of email addresses...' );\n\t\t$DB->query( \"ALTER TABLE T_email__address\n\t\t\tCHANGE emadr_status   emadr_status ENUM ( 'unknown', 'redemption', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) NOT NULL DEFAULT 'unknown'\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blog-group permissions table...' );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_can_be_assignee', 'tinyint NOT NULL default 0 AFTER bloggroup_ismember' );\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t  SET bloggroup_can_be_assignee = 1\n\t\t\tWHERE bloggroup_group_ID IN ( 1, 2 )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blog-user permissions table...' );\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_can_be_assignee', 'tinyint NOT NULL default 0 AFTER bloguser_ismember' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Dropping obsolete columns from table Links...' );\n\t\t$DB->query( 'ALTER TABLE T_links\n\t\t\t\t\t\t\t\t\tDROP COLUMN link_external_url,\n\t\t\t\t\t\t\t\t\tDROP COLUMN link_title,\n\t\t\t\t\t\t\t\t\tDROP COLUMN link_dest_itm_ID' );\n\t\ttask_end();\n\n\t\t// This task was added later to turn OFF smart view counting on upgrade from v5.0 to v5.1 for better performance\n\t\ttask_begin( 'Turn off smart view counting...' );\n\t\t$DB->query( 'DELETE FROM T_settings WHERE set_name = '.$DB->quote( 'smart_view_count' ) );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Posts table...' );\n\t\tdb_drop_col( 'T_items__item', 'post_views' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Files table... ' );\n\t\t$DB->query( \"ALTER TABLE T_files\n\t\t\tCHANGE COLUMN file_root_type file_root_type enum('absolute','user','collection','shared','skins','import') not null default 'absolute'\" );\n\t\ttask_end();\n\n\t\t// Set flag to recreate autogenerated excerpts due to modifications on the excerpt generation\n\t\t// Note: We need to generate this in the end of the upgrade script, because the database must be up to date\n\t\t$recreate_autogenerated_excerpts = true;\n\n\t\tset_upgrade_checkpoint( '11200' );\n\t}\n\n\tif( $old_db_version < 11208 )\n\t{ // part 15.a trunk aka second part of \"i6\"\n\n\t\t// Note create a separate block for the hitlog upgrade because it may require very long time\n\t\ttask_begin( 'Upgrade hitlog table...' );\n\t\t$DB->query( 'ALTER TABLE T_hitlog\n\t\t\tCHANGE COLUMN hit_ID            hit_ID            INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\tCHANGE COLUMN hit_datetime      hit_datetime      TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\tCHANGE COLUMN hit_serprank      hit_serprank      SMALLINT UNSIGNED DEFAULT NULL,\n\t\t\tCHANGE COLUMN hit_blog_ID       hit_coll_ID       INT(10) UNSIGNED NULL DEFAULT NULL,\n\t\t\tCHANGE COLUMN hit_response_code hit_response_code SMALLINT DEFAULT NULL,\n\t\t\tADD COLUMN hit_agent_ID SMALLINT UNSIGNED NULL DEFAULT NULL AFTER hit_agent_type' );\n\t\t$DB->query( 'ALTER TABLE T_hitlog\n\t\t\tDROP INDEX hit_blog_ID');\n\t\t$DB->query( 'ALTER TABLE T_hitlog\n\t\t\tADD KEY hit_coll_ID ( hit_coll_ID )' );\n\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11208' );\n\t}\n\n\tif( $old_db_version < 11210 )\n\t{ // part 15.b trunk aka third part of \"i6\"\n\n\t\ttask_begin( 'Updating widgets setting...' );\n\t\t// Unset those widgets allow blockcache value which current settings allow blockcache but the caching is always forbidden on runtime;\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t\tSET wi_params = REPLACE( wi_params, \\'s:16:\"allow_blockcache\";i:1\\', \\'s:16:\"allow_blockcache\";i:0\\' )\n\t\t\t\tWHERE wi_params LIKE \\'%s:16:\"allow_blockcache\";i:1%\\' AND (\n\t\t\t\t\twi_code = \"user_tools\" OR wi_code = \"user_login\" OR ( wi_code = \"msg_menu_link\" AND wi_params LIKE \\'%s:9:\"link_type\";s:8:\"messages\"%\\' )\n\t\t\t\t\tOR ( wi_code = \"menu_link\" AND ( wi_params LIKE \\'%s:9:\"link_type\";s:5:\"login\"%\\' OR wi_params LIKE \\'%s:9:\"link_type\";s:8:\"register\"%\\' ) )\n\t\t\t\t\t)' );\n\t\t// Unset 'show_badge' setting in case of msg_menu_link widgets where the link_type is contacts\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t\tSET wi_params = REPLACE( wi_params, \\'s:10:\"show_badge\";i:1\\', \\'s:10:\"show_badge\";i:0\\' )\n\t\t\t\tWHERE wi_code = \"msg_menu_link\" AND wi_params LIKE \\'%s:9:\"link_type\";s:8:\"contacts\"%\\' AND wi_params LIKE \\'%s:10:\"show_badge\";i:1%\\'' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating files hash values...' );\n\t\t$DB->query( 'ALTER TABLE T_files MODIFY COLUMN file_hash VARBINARY(32), MODIFY COLUMN file_path_hash VARBINARY(32)' );\n\t\t$DB->query( 'UPDATE T_files SET file_hash = UNHEX( file_hash ), file_path_hash = UNHEX( file_path_hash )' );\n\t\t$DB->query( 'ALTER TABLE T_files MODIFY COLUMN file_hash BINARY(16) default NULL, MODIFY COLUMN file_path_hash BINARY(16) default NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading goals table...' );\n\t\t$DB->query( 'ALTER TABLE T_track__goal\n\t\t\tADD COLUMN goal_temp_redir_url varchar(255) default NULL AFTER goal_redir_url,\n\t\t\tADD COLUMN goal_temp_start_ts  TIMESTAMP NULL            AFTER goal_temp_redir_url,\n\t\t\tADD COLUMN goal_temp_end_ts    TIMESTAMP NULL            AFTER goal_temp_start_ts,\n\t\t\tADD COLUMN goal_notes          TEXT DEFAULT NULL' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11210' );\n\t}\n\n\tif( $old_db_version < 11220 )\n\t{ // part 16.a trunk aka fourth part of \"i6\"\n\t\ttask_begin( 'Upgrading countries table...' );\n\t\t$DB->query( 'ALTER TABLE T_regional__country\n\t\t\tADD COLUMN ctry_status      enum( \\'trusted\\', \\'suspect\\', \\'blocked\\' ) NULL DEFAULT NULL,\n\t\t\tADD COLUMN ctry_block_count int(10) unsigned DEFAULT 0' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11220' );\n\t}\n\n\tif( $old_db_version < 11240 )\n\t{ // part 16.d trunk aka seventh part of \"i6\"\n\n\t\ttask_begin( 'Updating general settings...' );\n\t\t$DB->query( 'UPDATE T_settings SET\n\t\t\tset_name = CASE\n\t\t\t\tWHEN set_name = \"user_closing_allow\" THEN \"account_close_enabled\"\n\t\t\t\tWHEN set_name = \"user_closing_intro\" THEN \"account_close_intro\"\n\t\t\t\tWHEN set_name = \"user_closing_reasons\" THEN \"account_close_reasons\"\n\t\t\t\tWHEN set_name = \"user_closing_byemsg\" THEN \"account_close_byemsg\"\n\t\t\t\tELSE set_name\n\t\t\tEND' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11240' );\n\t}\n\n\tif( $old_db_version < 11245 )\n\t{ // part 16.e trunk aka eighth part of \"i6\"\n\n\t\ttask_begin( 'Updating Antispam IP Ranges table...' );\n\t\tdb_add_col( 'T_antispam__iprange', 'aipr_contact_email_count', 'int(10) unsigned DEFAULT 0 AFTER aipr_user_count' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating invalid locale settings...' );\n\t\t$current_default_locale = $DB->get_var( 'SELECT set_value FROM T_settings WHERE set_name = \"default_locale\"' );\n\t\tif( empty( $current_default_locale ) )\n\t\t{ // The default locale is not set in the database, use the one from the config file\n\t\t\tglobal $default_locale;\n\t\t\t$current_default_locale = $default_locale;\n\t\t}\n\t\tif( $DB->get_var( 'SELECT loc_enabled FROM T_locales WHERE loc_locale = '.$DB->quote( $current_default_locale ) ) )\n\t\t{ // Update invalid user and collection locales to the default, but only if the default exists and it is enabled\n\t\t\t$DB->query( 'UPDATE T_users\n\t\t\t\tSET user_locale = '.$DB->quote( $current_default_locale ).'\n\t\t\t\tWHERE  user_locale NOT IN ( SELECT loc_locale FROM T_locales WHERE loc_enabled = 1 )'\n\t\t\t);\n\t\t\t$DB->query( 'UPDATE T_blogs\n\t\t\t\tSET blog_locale = '.$DB->quote( $current_default_locale ).'\n\t\t\t\tWHERE  blog_locale NOT IN ( SELECT loc_locale FROM T_locales WHERE loc_enabled = 1 )'\n\t\t\t);\n\t\t}\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11245' );\n\t}\n\n\tif( $old_db_version < 11250 )\n\t{ // part 16.f trunk aka ninth part of \"i6\"\n\n\t\t// Convert item content separators to new format\n\t\tload_funcs('tools/model/_maintenance.funcs.php');\n\t\tdbm_convert_item_content_separators();\n\t\tset_upgrade_checkpoint( '11250' );\n\t}\n\n\tif( $old_db_version < 11255 )\n\t{ // part 16.g trunk aka tenth part of \"i6\"\n\n\t\ttask_begin( 'Updating post types...' );\n\t\t$DB->query( \"INSERT INTO T_items__type ( ptyp_ID, ptyp_name )\n\t\t\tVALUES ( 1400, 'Intro-Front' )\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11255' );\n\t}\n\n\tif( $old_db_version < 11260 )\n\t{ // part 16.h trunk aka eleventh part of \"i6\"\n\n\t\t// This upgrade block updates all field collations from 'ascii_bin' to 'ascii_general_ci' except of slugs table.\n\n\t\ttask_begin( 'Clean up comment emails...' );\n\t\t$DB->query( \"UPDATE T_comments\n\t\t\t\t\t\tSET comment_author_email = CONVERT(comment_author_email USING ascii)\" );\n\t\t$DB->commit();\n\t\ttask_end();\n\n\n\t\ttask_begin( 'Convert the field collations from ascii_bin to ascii_general_ci... <br />' );\n\t\t// fp> why would we need a transaction here?\t$DB->begin();\n\t\ttask_begin( '- Converting skins table...' );\n\t\t$DB->query( \"ALTER TABLE T_skins__skin\n\t\t\tMODIFY skin_type enum('normal','feed','sitemap','mobile','tablet') COLLATE ascii_general_ci NOT NULL default 'normal'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting blogs table...' );\n\t\t$DB->query( \"ALTER TABLE T_blogs\n\t\t\tMODIFY blog_access_type    VARCHAR(10) COLLATE ascii_general_ci NOT NULL DEFAULT 'extrapath',\n\t\t\tMODIFY blog_urlname        VARCHAR(255) COLLATE ascii_general_ci NOT NULL DEFAULT 'urlname',\n\t\t\tMODIFY blog_media_location ENUM( 'default', 'subdir', 'custom', 'none' ) COLLATE ascii_general_ci DEFAULT 'default' NOT NULL,\n\t\t\tMODIFY blog_type           ENUM( 'std', 'photo', 'group', 'forum', 'manual' ) COLLATE ascii_general_ci DEFAULT 'std' NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting blog settings table...' );\n\t\t$DB->query( 'ALTER TABLE T_coll_settings\n\t\t\tMODIFY cset_name VARCHAR( 50 ) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\t\ttask_begin( '- Converting widgets table...' );\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}widget\n\t\t\tMODIFY wi_type ENUM( 'core', 'plugin' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'core',\n\t\t\tMODIFY wi_code VARCHAR(32) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting categories table...' );\n\t\t$DB->query( \"ALTER TABLE T_categories\n\t\t\tMODIFY cat_urlname varchar(255) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting posts table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__item\n\t\t\tMODIFY post_status               enum('published','community','deprecated','protected','private','review','draft','redirected') COLLATE ascii_general_ci NOT NULL default 'published',\n\t\t\tMODIFY post_urltitle             VARCHAR(210) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY post_notifications_status ENUM('noreq','todo','started','finished') COLLATE ascii_general_ci NOT NULL DEFAULT 'noreq',\n\t\t\tMODIFY post_comment_status       ENUM('disabled', 'open', 'closed') COLLATE ascii_general_ci NOT NULL DEFAULT 'open',\n\t\t\tMODIFY post_renderers            TEXT COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting comments table...' );\n\t\t$DB->query( \"ALTER TABLE T_comments\n\t\t\tMODIFY comment_type         enum('comment','linkback','trackback','pingback') COLLATE ascii_general_ci NOT NULL default 'comment',\n\t\t\tMODIFY comment_status       ENUM('published','community','deprecated','protected','private','review','draft','trash') COLLATE ascii_general_ci DEFAULT 'published' NOT NULL,\n\t\t\tMODIFY comment_author_email varchar(255) COLLATE ascii_general_ci NULL,\n\t\t\tMODIFY comment_author_IP    varchar(23) COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY comment_renderers    TEXT COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY comment_secret       CHAR(32) COLLATE ascii_general_ci NULL default NULL,\n\t\t\tMODIFY comment_notif_status ENUM('noreq','todo','started','finished') COLLATE ascii_general_ci NOT NULL DEFAULT 'noreq' COMMENT 'Have notifications been sent for this comment? How far are we in the process?'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post prerendered contents table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__prerendering\n\t\t\tMODIFY itpr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY itpr_renderers TEXT COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting comment prerendered contents table...' );\n\t\t$DB->query( \"ALTER TABLE T_comments__prerendering\n\t\t\tMODIFY cmpr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY cmpr_renderers TEXT COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post versions table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__version\n\t\t\tMODIFY iver_status ENUM('published','community','deprecated','protected','private','review','draft','redirected') COLLATE ascii_general_ci NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__item_settings\n\t\t\tMODIFY iset_name varchar( 50 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user permissions table...' );\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms\n\t\t\tMODIFY bloguser_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloguser_perm_edit         ENUM('no','own','lt','le','all','redirected') COLLATE ascii_general_ci NOT NULL default 'no',\n\t\t\tMODIFY bloguser_perm_cmtstatuses  set('review','draft','private','protected','deprecated','community','published') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloguser_perm_edit_cmt     ENUM('no','own','anon','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting group permissions table...' );\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms\n\t\t\tMODIFY bloggroup_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloggroup_perm_edit         ENUM('no','own','lt','le','all','redirected') COLLATE ascii_general_ci NOT NULL default 'no',\n\t\t\tMODIFY bloggroup_perm_cmtstatuses  set('review','draft','private','protected','deprecated','community','published') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloggroup_perm_edit_cmt     ENUM('no','own','anon','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting links table...' );\n\t\t$DB->query( \"ALTER TABLE T_links\n\t\t\tMODIFY link_position varchar(10) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting files table...' );\n\t\t$DB->query( \"ALTER TABLE T_files\n\t\t\tMODIFY file_root_type enum('absolute','user','collection','shared','skins','import') COLLATE ascii_general_ci NOT NULL DEFAULT 'absolute'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting file types table...' );\n\t\t$DB->query( \"ALTER TABLE T_filetypes\n\t\t\tMODIFY ftyp_extensions varchar(30) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ftyp_viewtype   varchar(10) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ftyp_allowed    enum('any','registered','admin') COLLATE ascii_general_ci NOT NULL default 'admin'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting sessions table...' );\n\t\t$DB->query( \"ALTER TABLE T_sessions\n\t\t\tMODIFY sess_key       CHAR(32) COLLATE ascii_general_ci NULL,\n\t\t\tMODIFY sess_ipaddress VARCHAR(39) COLLATE ascii_general_ci NOT NULL DEFAULT '',\n\t\t\tMODIFY sess_device    VARCHAR(8) COLLATE ascii_general_ci NOT NULL DEFAULT ''\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting domains table...' );\n\t\t$DB->query( \"ALTER TABLE T_basedomains\n\t\t\tMODIFY dom_status ENUM('unknown','trusted','suspect','blocked') COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown',\n\t\t\tMODIFY dom_type   ENUM('unknown','normal','searcheng','aggregator','email') COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting logs table...' );\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\tMODIFY hit_ctrl         VARCHAR(30) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY hit_type         ENUM('standard','rss','admin','ajax', 'service') COLLATE ascii_general_ci DEFAULT 'standard' NOT NULL,\n\t\t\tMODIFY hit_referer_type ENUM('search','special','spam','referer','direct','self') COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY hit_remote_addr  VARCHAR(40) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY hit_agent_type   ENUM('robot','browser','unknown') COLLATE ascii_general_ci DEFAULT 'unknown' NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting goal categories table...' );\n\t\t$DB->query( \"ALTER TABLE T_track__goalcat\n\t\t\tMODIFY gcat_color  char(7) COLLATE ascii_general_ci default NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting groups table...' );\n\t\t$DB->query( \"ALTER TABLE T_groups\n\t\t\tMODIFY grp_perm_blogs                  enum('user','viewall','editall') COLLATE ascii_general_ci NOT NULL default 'user',\n\t\t\tMODIFY grp_perm_xhtmlvalidation        VARCHAR(10) COLLATE ascii_general_ci NOT NULL default 'always',\n\t\t\tMODIFY grp_perm_xhtmlvalidation_xmlrpc VARCHAR(10) COLLATE ascii_general_ci NOT NULL default 'always',\n\t\t\tMODIFY grp_perm_stats                  enum('none','user','view','edit') COLLATE ascii_general_ci NOT NULL default 'none'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting group settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_groups__groupsettings\n\t\t\tMODIFY gset_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_settings\n\t\t\tMODIFY set_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting cache table...' );\n\t\t$DB->query( \"ALTER TABLE T_global__cache\n\t\t\tMODIFY cach_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting users table...' );\n\t\t$DB->query( \"ALTER TABLE T_users\n\t\t\tMODIFY user_email           varchar(255) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY user_status          enum( 'activated', 'autoactivated', 'closed', 'deactivated', 'emailchanged', 'failedactivation', 'new' ) COLLATE ascii_general_ci NOT NULL default 'new',\n\t\t\tMODIFY user_unsubscribe_key CHAR(32) COLLATE ascii_general_ci NOT NULL default '' COMMENT 'A specific key, it is used when a user wants to unsubscribe from a post comments without signing in',\n\t\t\tMODIFY user_gender          char(1) COLLATE ascii_general_ci NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user fields table...' );\n\t\t$DB->query( \"ALTER TABLE T_users__fielddefs\n\t\t\tMODIFY ufdf_type       char(8) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ufdf_required   enum('hidden','optional','recommended','require') COLLATE ascii_general_ci NOT NULL default 'optional',\n\t\t\tMODIFY ufdf_duplicated enum('forbidden','allowed','list') COLLATE ascii_general_ci NOT NULL default 'allowed'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user reports table...' );\n\t\t$DB->query( \"ALTER TABLE T_users__reports\n\t\t\tMODIFY urep_status enum( 'fake', 'guidelines', 'harass', 'spam', 'other' ) COLLATE ascii_general_ci\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting locales table...' );\n\t\t$DB->query( \"ALTER TABLE T_locales\n\t\t\tMODIFY loc_charset varchar(15) COLLATE ascii_general_ci NOT NULL default 'iso-8859-1',\n\t\t\tMODIFY loc_datefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'y-m-d',\n\t\t\tMODIFY loc_timefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'H:i:s'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting antispam table...' );\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}antispam\n\t\t\tMODIFY aspm_source enum( 'local','reported','central' ) COLLATE ascii_general_ci NOT NULL default 'reported'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting IP ranges table...' );\n\t\t$DB->query( \"ALTER TABLE T_antispam__iprange\n\t\t\tMODIFY aipr_status enum( 'trusted', 'suspect', 'blocked' ) COLLATE ascii_general_ci NULL DEFAULT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_users__usersettings\n\t\t\tMODIFY uset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugins table...' );\n\t\t$DB->query( \"ALTER TABLE T_plugins\n\t\t\tMODIFY plug_classname VARCHAR(40) COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY plug_code      VARCHAR(32) COLLATE ascii_general_ci NULL,\n\t\t\tMODIFY plug_version   VARCHAR(42) COLLATE ascii_general_ci NOT NULL default '0',\n\t\t\tMODIFY plug_status    ENUM( 'enabled', 'disabled', 'needs_config', 'broken' ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugin settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_pluginsettings\n\t\t\tMODIFY pset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugin user settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_pluginusersettings\n\t\t\tMODIFY puset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugin events table...' );\n\t\t$DB->query( \"ALTER TABLE T_pluginevents\n\t\t\tMODIFY pevt_event VARCHAR(40) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting cron logs table...' );\n\t\t$DB->query( \"ALTER TABLE T_cron__log\n\t\t\tMODIFY clog_status enum('started','finished','error','timeout') COLLATE ascii_general_ci not null default 'started'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting countries table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__country\n\t\t\tMODIFY ctry_code   char(2) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ctry_status enum( 'trusted', 'suspect', 'blocked' ) COLLATE ascii_general_ci NULL DEFAULT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting regions table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__region\n\t\t\tMODIFY rgn_code char(6) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting subregions table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__subregion\n\t\t\tMODIFY subrg_code char(6) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting cities table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__city\n\t\t\tMODIFY city_postcode char(12) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting currencies table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__currency\n\t\t\tMODIFY curr_code char(3) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting email logs table...' );\n\t\t$DB->query( \"ALTER TABLE T_email__log\n\t\t\tMODIFY emlog_to     VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY emlog_result ENUM( 'ok', 'error', 'blocked' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'ok'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting email returns table...' );\n\t\t$DB->query( \"ALTER TABLE T_email__returns\n\t\t\tMODIFY emret_address   VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY emret_errtype   CHAR(1) COLLATE ascii_general_ci NOT NULL DEFAULT 'U'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting email addresses table...' );\n\t\t$DB->query( \"ALTER TABLE T_email__address\n\t\t\tMODIFY emadr_address VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY emadr_status  ENUM( 'unknown', 'redemption', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown'\" );\n\t\ttask_end();\n\t\t//\t$DB->commit();\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11260' );\n\t}\n\n\tif( $old_db_version < 11270 )\n\t{ // part 16.i trunk aka 12th part of \"i6\"\n\n\t\t// IPv4 mapped IPv6 addresses maximum length is 45 chars: ex. ABCD:ABCD:ABCD:ABCD:ABCD:ABCD:192.168.158.190\n\t\ttask_begin( 'Upgrading comments table...' );\n\t\t$DB->query( \"ALTER TABLE T_comments\n\t\t\tMODIFY comment_author_IP varchar(45) COLLATE ascii_general_ci NOT NULL default ''\" );\n\t\ttask_end();\n\t\ttask_begin( 'Upgrading sessions table...' );\n\t\t$DB->query( \"ALTER TABLE T_sessions\n\t\t\tMODIFY sess_ipaddress VARCHAR(45) COLLATE ascii_general_ci NOT NULL DEFAULT ''\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11270' );\n\t}\n\n\tif( $old_db_version < 11280 )\n\t{ // part 16.j trunk aka 12th part of \"i6\"\n\n\t\ttask_begin( 'Upgrading hit logs table...' );\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\tMODIFY hit_remote_addr VARCHAR(45) COLLATE ascii_general_ci DEFAULT NULL\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs table...' );\n\t\tdb_drop_col( 'T_blogs', 'blog_UID' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11280' );\n\t}\n\n\tif( $old_db_version < 11285 )\n\t{ // part 16.k trunk aka 13th part of \"i6\"\n\n\t\ttask_begin( 'Updating plugins table...' );\n\t\t$DB->query( 'UPDATE T_plugins SET\n\t\t\tplug_code = CASE\n\t\t\t\tWHEN plug_classname = \"generic_ping_plugin\"         THEN \"b2evGPing\"\n\t\t\t\tWHEN plug_classname = \"basic_antispam_plugin\"       THEN \"b2evBAspm\"\n\t\t\t\tWHEN plug_classname = \"flowplayer_plugin\"           THEN \"b2evFlwP\"\n\t\t\t\tWHEN plug_classname = \"html5_mediaelementjs_plugin\" THEN \"b2evH5MP\"\n\t\t\t\tWHEN plug_classname = \"html5_videojs_plugin\"        THEN \"b2evH5VJSP\"\n\t\t\t\tELSE plug_code\n\t\t\tEND' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11285' );\n\t}\n\n\tif( $old_db_version < 11286 )\n\t{\t// part 16.l trunk aka 14th part of \"i6\"\n\n\t\ttask_begin( 'Upgrade timestamp fields... ' );\n\t\t$DB->query( 'ALTER TABLE T_email__log\n\t\t\tMODIFY emlog_timestamp TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_email__returns\n\t\t\tMODIFY emret_timestamp TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_items__prerendering\n\t\t\tMODIFY itpr_datemodified TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_comments__prerendering\n\t\t\tMODIFY cmpr_datemodified TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_users__reports\n\t\t\tMODIFY urep_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_items__version\n\t\t\tMODIFY iver_edit_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__thread\n\t\t\tMODIFY thrd_datemodified datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__message\n\t\t\tMODIFY msg_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__contact\n\t\t\tMODIFY mct_last_contact_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11286' );\n\t}\n\n\tif( $old_db_version < 11300 )\n\t{ // part 17 trunk aka \"i7\"\n\n\t\ttask_begin( 'Upgrading locales table...' );\n\t\tdb_add_col( 'T_locales', 'loc_shorttimefmt', 'varchar(20) COLLATE ascii_general_ci NOT NULL default \"H:i\" AFTER loc_timefmt' );\n\t\ttask_end();\n\t\ttask_begin( 'Creating message prerendering cache table... ' );\n\t\tdb_create_table( 'T_messaging__prerendering', '\n\t\t\tmspr_msg_ID              INT(11) UNSIGNED NOT NULL,\n\t\t\tmspr_format              ENUM(\"htmlbody\",\"entityencoded\",\"xml\",\"text\") COLLATE ascii_general_ci NOT NULL,\n\t\t\tmspr_renderers           TEXT NOT NULL,\n\t\t\tmspr_content_prerendered MEDIUMTEXT NULL,\n\t\t\tmspr_datemodified        TIMESTAMP NOT NULL,\n\t\t\tPRIMARY KEY (mspr_msg_ID, mspr_format)' );\n\t\tdb_add_col( 'T_messaging__message', 'msg_renderers', 'TEXT NOT NULL' );\n\t\t$DB->query( 'UPDATE T_messaging__message SET msg_renderers = \"default\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading categories table...' );\n\t\tdb_add_col( 'T_categories', 'cat_last_touched_ts', \"TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00'\" );\n\t\t$DB->query( 'UPDATE T_categories SET cat_last_touched_ts = (\n\t\t\tSELECT post_last_touched_ts\n\t\t\t  FROM T_items__item\n\t\t\t       INNER JOIN T_postcats ON postcat_post_ID = post_ID\n\t\t\t WHERE postcat_cat_ID = cat_ID\n\t\t\t ORDER BY post_last_touched_ts DESC\n\t\t\t LIMIT 1 )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for User post read status... ' );\n\t\tdb_create_table( 'T_users__postreadstatus', '\n\t\t\tuprs_user_ID int(11) unsigned NOT NULL,\n\t\t\tuprs_post_ID int(11) unsigned NOT NULL,\n\t\t\tuprs_read_post_ts TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\tuprs_read_comment_ts TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\tPRIMARY KEY ( uprs_user_ID, uprs_post_ID )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for System log... ' );\n\t\tdb_create_table( 'T_syslog', \"\n\t\t\tslg_ID        INT NOT NULL AUTO_INCREMENT,\n\t\t\tslg_timestamp TIMESTAMP NOT NULL,\n\t\t\tslg_origin    ENUM('core', 'plugin') COLLATE ascii_general_ci,\n\t\t\tslg_origin_ID INT UNSIGNED NULL,\n\t\t\tslg_object    ENUM('comment', 'item', 'user') COLLATE ascii_general_ci,\n\t\t\tslg_object_ID INT UNSIGNED NOT NULL,\n\t\t\tslg_message   VARCHAR(255) NOT NULL,\n\t\t\tPRIMARY KEY   (slg_ID),\n\t\t\tINDEX         slg_object (slg_object, slg_object_ID)\",\n\t\t\t'ENGINE = myisam' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11300' );\n\t}\n\n\tif( $old_db_version < 11310 )\n\t{ // part 18 trunk aka second part of \"i7\"\n\n\t\ttask_begin( 'Upgrading cron tasks table...' );\n\t\tload_funcs( 'cron/_cron.funcs.php' );\n\t\t$DB->begin();\n\t\t$DB->query( 'ALTER TABLE T_cron__task\n\t\t\tCHANGE COLUMN ctsk_controller ctsk_key varchar(50) COLLATE ascii_general_ci NOT NULL AFTER ctsk_repeat_after,\n\t\t\tCHANGE COLUMN ctsk_name ctsk_name varchar(255) null COMMENT \"Specific name of this task. This value is set only if this job name was modified by an admin user\"' );\n\t\t// Update keys from controllers\n\t\t// Important: Cron job sql query result must be converted to ascii charset since the ctsk_key is already ascii( ascii_bin collation )\n\t\t$DB->query( 'UPDATE T_cron__task\n\t\t\tINNER JOIN ( '.cron_job_sql_query( 'key,ctrl' ).' ) AS temp\n\t\t\t       ON ctsk_key = CONVERT( temp.task_ctrl USING ascii )\n\t\t\tSET ctsk_key = temp.task_key' );\n\t\t// Reset names to NULL if its are default\n\t\t$DB->query( $sql = 'UPDATE T_cron__task\n\t\t\tINNER JOIN ( '.cron_job_sql_query().' ) AS temp\n\t\t\t        ON ctsk_key = CONVERT( temp.task_key USING ascii ) AND ctsk_name = CONVERT( temp.task_name USING '.$DB->connection_charset.' )\n\t\t\tSET ctsk_name = NULL' );\n\t\t$DB->commit();\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table system log... ' );\n\t\t$DB->query( 'ALTER TABLE T_syslog\n\t\t\tCHANGE COLUMN slg_object slg_object ENUM(\\'comment\\', \\'item\\', \\'user\\', \\'file\\') COLLATE ascii_general_ci,\n\t\t\tCHANGE COLUMN slg_object_ID slg_object_ID INT UNSIGNED NULL,\n\t\t\tADD    COLUMN slg_user_ID INT UNSIGNED NULL AFTER slg_timestamp,\n\t\t\tADD    COLUMN slg_type ENUM(\\'info\\', \\'warning\\', \\'error\\', \\'critical_error\\') COLLATE ascii_general_ci NOT NULL DEFAULT \\'info\\' AFTER slg_user_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade groups table... ' );\n\t\tdb_add_col( 'T_groups', 'grp_level', 'int unsigned DEFAULT 0 NOT NULL AFTER grp_name' );\n\t\t$default_groups_levels = array(\n\t\t\t\t'Administrators' => 10,\n\t\t\t\t'Moderators' => 8,\n\t\t\t\t'Trusted Users' => 6,\n\t\t\t\t'Normal Users' => 4,\n\t\t\t\t'Misbehaving/Suspect Users' => 2,\n\t\t\t\t'Spammers/Restricted Users' => 1\n\t\t\t);\n\t\t// Build sql query to update group level depending on name\n\t\t$group_level_query = 'SELECT group_name, group_level FROM (';\n\t\t$first_task = true;\n\t\tforeach( $default_groups_levels as $def_group_name => $def_group_level )\n\t\t{\n\t\t\tif( $first_task )\n\t\t\t{\n\t\t\t\t$group_level_query .= 'SELECT '.$DB->quote( $def_group_name ).' AS group_name, '.$DB->quote( $def_group_level ).' AS group_level';\n\t\t\t\t$first_task = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$group_level_query .= ' UNION SELECT '.$DB->quote( $def_group_name ).', '.$DB->quote( $def_group_level );\n\t\t\t}\n\t\t}\n\t\t$group_level_query .= ') AS inner_temp';\n\t\t// Set default levels depending on name\n\t\t$DB->query( 'UPDATE T_groups\n\t\t\tINNER JOIN ( '.$group_level_query.' ) AS temp\n\t\t\t       ON grp_name = CONVERT( temp.group_name USING '.$DB->connection_charset.' )\n\t\t\t  SET grp_level = temp.group_level' );\n\t\t// Set default '4' level for all other groups\n\t\t$DB->query( 'UPDATE T_groups\n\t\t\t  SET grp_level = 4\n\t\t\tWHERE grp_level = 0' );\n\t\t// Set default user permissions for Moderators group\n\t\t$DB->query( 'UPDATE T_groups__groupsettings\n\t\t\t  SET gset_value = \"moderate\"\n\t\t\tWHERE gset_name = \"perm_users\"\n\t\t\t  AND gset_grp_ID = (SELECT grp_ID FROM T_groups WHERE grp_name = \"Moderators\")' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating general settings...' );\n\t\t$DB->query( 'UPDATE T_settings\n\t\t\t\tSET set_value = '.$DB->quote( 'yes' ).'\n\t\t\tWHERE set_name = '.$DB->quote( 'newusers_canregister' ).'\n\t\t\t\tAND set_value = '.$DB->quote( '1' ) );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for User invitation codes... ' );\n\t\tdb_create_table( 'T_users__invitation_code', '\n\t\t\tivc_ID        int(11) unsigned NOT NULL auto_increment,\n\t\t\tivc_code      varchar(32) COLLATE ascii_general_ci NOT NULL,\n\t\t\tivc_expire_ts TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\tivc_source    varchar(30) NULL,\n\t\t\tivc_grp_ID    int(4) NOT NULL,\n\t\t\tPRIMARY KEY ( ivc_ID ),\n\t\t\tUNIQUE ivc_code ( ivc_code )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for User organizations... ' );\n\t\tdb_create_table( 'T_users__organization', '\n\t\t\torg_ID   INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\torg_name VARCHAR(255) NOT NULL,\n\t\t\torg_url  VARCHAR(2000) NULL,\n\t\t\tPRIMARY KEY ( org_ID ),\n\t\t\tUNIQUE org_name ( org_name )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for relations users with organizations... ' );\n\t\tdb_create_table( 'T_users__user_org', '\n\t\t\tuorg_user_ID  INT(11) UNSIGNED NOT NULL,\n\t\t\tuorg_org_ID   INT(11) UNSIGNED NOT NULL,\n\t\t\tuorg_accepted TINYINT(1) DEFAULT 0,\n\t\t\tPRIMARY KEY ( uorg_user_ID, uorg_org_ID )' );\n\t\ttask_end();\n\n\t\t// Rename item settings:\n\t\t//   \"post_custom_headers\" to \"metakeywords\"\n\t\t//   \"post_metadesc\" to \"metadesc\"\n\t\t//   \"post_expiry_delay\" to \"comment_expiry_delay\"\n\t\ttask_begin( 'Upgrading Item Settings...' );\n\t\t$DB->query( 'UPDATE T_items__item_settings\n\t\t\t\t  SET iset_name = \"metakeywords\"\n\t\t\t\tWHERE iset_name = \"post_custom_headers\"' );\n\t\t$DB->query( 'UPDATE T_items__item_settings\n\t\t\t\t  SET iset_name = \"metadesc\"\n\t\t\t\tWHERE iset_name = \"post_metadesc\"' );\n\t\t$DB->query( 'UPDATE T_items__item_settings\n\t\t\t\t  SET iset_name = \"comment_expiry_delay\"\n\t\t\t\tWHERE iset_name = \"post_expiry_delay\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table files... ' );\n\t\tdb_add_col( 'T_files', 'file_type', \"enum('image', 'audio', 'other') COLLATE ascii_general_ci NULL DEFAULT NULL AFTER file_ID\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table posts... ' );\n\t\t$DB->query( 'ALTER TABLE T_items__item\n\t\t\tCHANGE post_title     post_title     VARCHAR(255) NOT NULL,\n\t\t\tCHANGE post_renderers post_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table post prerendering cache... ' );\n\t\t$DB->query( 'ALTER TABLE T_items__prerendering\n\t\t\tCHANGE itpr_renderers itpr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table post versions... ' );\n\t\t$DB->query( 'ALTER TABLE T_items__version\n\t\t\tCHANGE iver_title iver_title VARCHAR(255) NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table comments... ' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\tCHANGE comment_renderers comment_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table comment prerendering cache... ' );\n\t\t$DB->query( 'ALTER TABLE T_comments__prerendering\n\t\t\tCHANGE cmpr_renderers cmpr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table messages... ' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__message\n\t\t\tCHANGE msg_renderers msg_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table message prerendering cache... ' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__prerendering\n\t\t\tCHANGE mspr_renderers mspr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table user field definitions... ' );\n\t\t$DB->query( 'ALTER TABLE T_users__fielddefs\n\t\t\tCHANGE ufdf_options ufdf_options VARCHAR(255) NULL DEFAULT NULL' );\n\t\t// Change emtpy ufdf_options to NULL, since it must/may be defined only in case of the list ufdf_type\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\tSET ufdf_options = NULL\n\t\t\tWHERE ufdf_options = \"\" AND ufdf_type != \"list\"');\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table cron tasks... ' );\n\t\t$DB->query( 'ALTER TABLE T_cron__task\n\t\t\tCHANGE ctsk_params ctsk_params varchar(255)' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users table...' );\n\t\tdb_add_col( 'T_users', 'user_salt', 'CHAR(8) NOT NULL default \"\" AFTER user_pass' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating users pass storage...' );\n\t\t$DB->query( 'ALTER TABLE T_users MODIFY COLUMN user_pass VARBINARY(32)' );\n\t\t$DB->query( 'UPDATE T_users SET user_pass = UNHEX( user_pass )' );\n\t\t$DB->query( 'ALTER TABLE T_users MODIFY COLUMN user_pass BINARY(16) NOT NULL' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11310' );\n\t}\n\n\tif( $old_db_version < 11320 )\n\t{ // part 18.a trunk aka third part of \"i7\"\n\n\t\ttask_begin( 'Update locales to utf-8 charset...' );\n\t\tdb_drop_col( 'T_locales', 'loc_charset' );\n\t\t$DB->query( 'UPDATE T_locales\n\t\t\tSET loc_name = REPLACE( loc_name, \"latin1\", \"utf8\" )\n\t\t\tWHERE loc_locale IN ( \"en-US\", \"en-AU\", \"en-CA\", \"en-GB\", \"en-IL\", \"en-NZ\", \"en-SG\" )' );\n\t\t$DB->query( 'UPDATE T_users SET user_locale = \"en-US\" WHERE user_locale = \"en-US-utf8\"' );\n\t\t$DB->query( 'UPDATE T_blogs SET blog_locale = \"en-US\" WHERE blog_locale = \"en-US-utf8\"' );\n\t\t$DB->query( 'UPDATE T_items__item SET post_locale = \"en-US\" WHERE post_locale = \"en-US-utf8\"' );\n\t\t$DB->query( 'UPDATE T_settings SET set_value = \"en-US\" WHERE set_name = \"default_locale\" AND set_value = \"en-US-utf8\"' );\n\t\t// Check if the 'en-US-utf8' locale is enabled\n\t\t$en_us_utf8_enabled = $DB->get_var( 'SELECT loc_enabled FROM T_locales WHERE loc_locale = \"en-US-utf8\"' );\n\t\tif( $en_us_utf8_enabled !== NULL )\n\t\t{ // The 'en-US-utf8' was enabled we must enable the 'en-US' even if it was not enabled before because we merged the two locales into one\n\t\t\t$en_us_enabled = $DB->get_var( 'SELECT loc_enabled FROM T_locales WHERE loc_locale = \"en-US\"' );\n\t\t\tif( $en_us_enabled === NULL )\n\t\t\t{ // Update \"en-US-utf8\" to \"en-US\"\n\t\t\t\t$DB->query( 'UPDATE T_locales SET loc_locale = \"en-US\" WHERE loc_locale = \"en-US-utf8\"' );\n\t\t\t}\n\t\t\telseif( $en_us_utf8_enabled && ( ! $en_us_enabled ) )\n\t\t\t{ // Enable the \"en-US\" locale because it was not enabled but the \"en-US-utf8\" was\n\t\t\t\t$DB->query( 'UPDATE T_locales SET loc_enabled = 1 WHERE loc_locale = \"en-US\"' );\n\t\t\t}\n\n\t\t\tif( $en_us_enabled !== NULL )\n\t\t\t{ // Remove the \"en-US-utf8\" locale if the \"en_US\" locale is already in the database\n\t\t\t\t$DB->query( 'DELETE FROM T_locales WHERE loc_locale = \"en-US-utf8\"' );\n\t\t\t}\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table files... ' );\n\t\tdb_add_col( 'T_files', 'file_can_be_main_profile', 'TINYINT(1) NOT NULL DEFAULT 1' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Add new video file types... ' );\n\t\t$video_types = array(\n\t\t\t\t'webm' => \"( 'webm', 'WebM video file', 'video/webm', 'file_video', 'browser', 'registered' )\",\n\t\t\t\t'ogv'  => \"( 'ogv', 'Ogg video file', 'video/ogg', 'file_video', 'browser', 'registered' )\",\n\t\t\t\t'm3u8' => \"( 'm3u8', 'M3U8 video file', 'application/x-mpegurl', 'file_video', 'browser', 'registered' )\"\n\t\t\t);\n\t\t$SQL = new SQL();\n\t\t$SQL->SELECT( 'ftyp_extensions' );\n\t\t$SQL->FROM( 'T_filetypes' );\n\t\t$SQL->WHERE( 'ftyp_extensions LIKE \"%'.implode( '%\" OR ftyp_extensions LIKE \"%', array_keys( $video_types ) ).'%\"' );\n\t\t$existing_video_types = $DB->get_col( $SQL->get() );\n\t\tif( ! empty( $existing_video_types ) )\n\t\t{ // Some video types arleady exist in DB, Exclude them from inserting\n\t\t\tforeach( $existing_video_types as $vtype )\n\t\t\t{\n\t\t\t\tunset( $video_types[ $vtype ] );\n\t\t\t}\n\t\t}\n\t\tif( count( $video_types ) )\n\t\t{ // Insert new video file types\n\t\t\t$DB->query( \"INSERT INTO T_filetypes\n\t\t\t\t( ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed )\n\t\t\t\tVALUES \".implode( ', ', $video_types ) );\n\t\t}\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11320' );\n\t}\n\n\tif( $old_db_version < 11330 )\n\t{ // part 18.b trunk aka 4th part of \"i7\"\n\n\t\ttask_begin( 'Upgrade table blogs... ' );\n\t\t$DB->query( 'UPDATE T_blogs\n\t\t\t  SET blog_in_bloglist = \"1\"\n\t\t\tWHERE blog_in_bloglist > 0' );\n\t\t$DB->query( 'ALTER TABLE T_blogs\n\t\t\tCHANGE blog_in_bloglist blog_in_bloglist ENUM( \"public\", \"logged\", \"member\", \"never\" ) COLLATE ascii_general_ci DEFAULT \"public\" NOT NULL' );\n\t\t$DB->query( 'UPDATE T_blogs\n\t\t\t  SET blog_in_bloglist = \"never\"\n\t\t\tWHERE blog_in_bloglist = \"\"' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11330' );\n\t}\n\n\tif( $old_db_version < 11340 )\n\t{ // part 18.c trunk aka 5th part of \"i7\"\n\n\t\ttask_begin( 'Upgrading blogs table...' );\n\t\t$DB->query( \"ALTER TABLE T_blogs\n\t\t\tMODIFY blog_type ENUM( 'main', 'std', 'photo', 'group', 'forum', 'manual' ) COLLATE ascii_general_ci DEFAULT 'std' NOT NULL\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11340' );\n\t}\n\n\tif( $old_db_version < 11350 )\n\t{ // part 18.d trunk aka 6th part of \"i7\"\n\n\t\ttask_begin( 'Update category ordering...' );\n\t\t$DB->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\tSELECT blog_ID, \"category_ordering\", IFNULL( set_value, \"alpha\" )\n\t\t\t\tFROM T_blogs LEFT JOIN T_settings ON set_name = \"chapter_ordering\"' );\n\t\t$DB->query( 'DELETE FROM T_settings WHERE set_name = \"chapter_ordering\"');\n\t\tdb_add_col( 'T_categories', 'cat_subcat_ordering', \"enum('parent', 'alpha', 'manual') COLLATE ascii_general_ci NULL DEFAULT NULL AFTER cat_order\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11350' );\n\t}\n\n\tif( $old_db_version < 11360 )\n\t{ // part 18.e trunk aka 7th part of \"i7\"\n\n\t\ttask_begin( 'Upgrade table posts... ' );\n\t\t$DB->query( 'ALTER TABLE T_items__item\n            CHANGE post_ptyp_ID post_ityp_ID int(10) unsigned NOT NULL DEFAULT 1');\n        $DB->query( 'ALTER TABLE T_items__item\n            DROP INDEX post_ptyp_ID');\n\t\t$DB->query( 'ALTER TABLE T_items__item\n            ADD INDEX post_ityp_ID ( post_ityp_ID )');\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table post types... ' );\n\t\t$DB->query( \"ALTER TABLE T_items__type\n\t\t\tCHANGE ptyp_ID   ityp_ID   INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\tCHANGE ptyp_name ityp_name VARCHAR(30) NOT NULL,\n\t\t\tADD ityp_description       TEXT NULL DEFAULT NULL,\n\t\t\tADD ityp_backoffice_tab    VARCHAR(30) NULL DEFAULT NULL,\n\t\t\tADD ityp_template_name     VARCHAR(40) NULL DEFAULT NULL,\n\t\t\tADD ityp_use_title         ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'required',\n\t\t\tADD ityp_use_url           ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tADD ityp_use_text          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tADD ityp_allow_html        TINYINT DEFAULT 1,\n\t\t\tADD ityp_allow_attachments TINYINT DEFAULT 1,\n\t\t\tADD ityp_use_excerpt       ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tADD ityp_use_title_tag     ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tADD ityp_use_meta_desc     ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tADD ityp_use_meta_keywds   ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tADD ityp_use_tags          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tADD ityp_allow_featured    TINYINT DEFAULT 1,\n\t\t\tADD ityp_use_country       ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tADD ityp_use_region        ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tADD ityp_use_sub_region    ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tADD ityp_use_city          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tADD ityp_use_coordinates   ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tADD ityp_use_custom_fields TINYINT DEFAULT 1,\n\t\t\tADD ityp_use_comments      TINYINT DEFAULT 1,\n\t\t\tADD ityp_allow_closing_comments   TINYINT DEFAULT 1,\n\t\t\tADD ityp_allow_disabling_comments TINYINT DEFAULT 0,\n\t\t\tADD ityp_use_comment_expiration   ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional'\" );\n\t\t$DB->query( 'UPDATE T_items__type SET\n\t\t\tityp_backoffice_tab = CASE\n\t\t\t\tWHEN ityp_ID = 1    THEN \"Posts\"\n\t\t\t\tWHEN ityp_ID = 1000 THEN \"Pages\"\n\t\t\t\tWHEN ityp_ID >= 1400 AND ityp_ID <= 1600 THEN \"Intros\"\n\t\t\t\tWHEN ityp_ID = 2000 THEN \"Podcasts\"\n\t\t\t\tWHEN ityp_ID = 3000 THEN \"Sidebar links\"\n\t\t\t\tWHEN ityp_ID = 4000 THEN \"Advertisement\"\n\t\t\t\tWHEN ityp_ID = 5000 THEN NULL\n\t\t\t\tELSE \"Posts\"\n\t\t\tEND,\n\t\t\tityp_template_name = CASE\n\t\t\t\tWHEN ityp_ID = 1 OR ityp_ID = 2000 THEN \"single\"\n\t\t\t\tWHEN ityp_ID = 1000 THEN \"page\"\n\t\t\t\tELSE NULL\n\t\t\tEND' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding new post types...' );\n\t\t$DB->begin();\n\t\t$new_item_types = array(\n\t\t\t\t/* 'blog type' => array( 'min post type ID', 'title for new type' ) */\n\t\t\t\t'manual' => array( 'type_ID' => 100, 'title' => 'Manual Page' ),\n\t\t\t\t'forum'  => array( 'type_ID' => 200, 'title' => 'Forum Topic' ),\n\t\t\t);\n\t\t$item_types_insert_data = array();\n\t\tforeach( $new_item_types as $blog_type => $item_type_data )\n\t\t{\n\t\t\t$item_type_ID = $new_item_types[ $blog_type ]['type_ID'];\n\t\t\twhile( $item_type_ID !== NULL )\n\t\t\t{ // Find first free post type ID starting with 100\n\t\t\t\t$free_item_type_ID = $item_type_ID;\n\t\t\t\t$item_type_ID = $DB->get_var( 'SELECT ityp_ID FROM T_items__type WHERE ityp_ID = '.$DB->quote( $item_type_ID ) );\n\t\t\t\tif( $item_type_ID === NULL )\n\t\t\t\t{ // Use this free ID for new type\n\t\t\t\t\t$item_types_insert_data[] = '( '.$free_item_type_ID.', '.$DB->quote( $new_item_types[ $blog_type ]['title'] ).', \"Posts\", \"single\", 0 )';\n\t\t\t\t\t$new_item_types[ $blog_type ]['new_type_ID'] = $free_item_type_ID;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$item_type_ID++;\n\t\t\t}\n\t\t}\n\t\tif( count( $item_types_insert_data ) )\n\t\t{\n\t\t\t// Insert new post types\n\t\t\t$DB->query( 'INSERT INTO T_items__type ( ityp_ID, ityp_name, ityp_backoffice_tab, ityp_template_name, ityp_allow_html )\n\t\t\t\t\t\tVALUES '.implode( ', ', $item_types_insert_data ) );\n\t\t\t// Update types of all post with \"Post\" type to new created (only for blogs with type 'forum' and 'manual')\n\t\t\tforeach( $new_item_types as $blog_type => $item_type_data )\n\t\t\t{\n\t\t\t\t$DB->query( 'UPDATE T_items__item\n\t\t\t\t\tINNER JOIN T_categories\n\t\t\t\t\t   ON post_main_cat_ID = cat_ID\n\t\t\t\t\t  AND post_ityp_ID = 1\n\t\t\t\t\tINNER JOIN T_blogs\n\t\t\t\t\t   ON cat_blog_ID = blog_ID\n\t\t\t\t\t  AND blog_type = '.$DB->quote( $blog_type ).'\n\t\t\t\t\t  SET post_ityp_ID = '.$DB->quote( $item_type_data['new_type_ID'] ) );\n\t\t\t}\n\t\t}\n\t\t$DB->commit();\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table comments... ' );\n\t\t$DB->query( \"ALTER TABLE T_comments\n\t\t\tCHANGE comment_type comment_type enum('comment','linkback','trackback','pingback','meta') COLLATE ascii_general_ci NOT NULL default 'comment'\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for custom fields of Post Types... ' );\n\t\tdb_create_table( 'T_items__type_custom_field', '\n\t\t\titcf_ID      INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\titcf_ityp_ID INT(11) UNSIGNED NOT NULL,\n\t\t\titcf_label   VARCHAR(255) NOT NULL,\n\t\t\titcf_name    VARCHAR(255) COLLATE ascii_general_ci NOT NULL,\n\t\t\titcf_type    ENUM( \\'double\\', \\'varchar\\' ) COLLATE ascii_general_ci NOT NULL,\n\t\t\titcf_order   INT NULL,\n\t\t\tPRIMARY KEY ( itcf_ID ),\n\t\t\tUNIQUE itcf_ityp_ID_name( itcf_ityp_ID, itcf_name )' );\n\n\t\t// Create post types for each blog that has at aleast one custom field\n\t\t$SQL = new SQL();\n\t\t$SQL->SELECT( '*' );\n\t\t$SQL->FROM( 'T_coll_settings' );\n\t\t$SQL->WHERE( 'cset_name LIKE '.$DB->quote( 'custom_%' ) );\n\t\t$SQL->ORDER_BY( 'cset_coll_ID' );\n\t\t$setting_rows = $DB->get_results( $SQL->get() );\n\t\t$custom_fields = array();\n\t\t$blog_setting_delete_data = array();\n\t\t$blog_setting_item_types = array();\n\t\tif( count( $setting_rows ) )\n\t\t{ // Initialize an array of custom fields from blog settings\n\t\t\tforeach( $setting_rows as $setting_row )\n\t\t\t{\n\t\t\t\tif( preg_match( '/custom_(double|varchar)\\d+/', $setting_row->cset_name, $matches ) )\n\t\t\t\t{ // It is a custom field\n\t\t\t\t\tif( ! isset( $custom_fields[ $setting_row->cset_coll_ID ] ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t$custom_fields[ $setting_row->cset_coll_ID ] = array();\n\t\t\t\t\t}\n\t\t\t\t\t// Delete this blog setting\n\t\t\t\t\t$blog_setting_delete_data[] = 'cset_coll_ID = '.$DB->quote( $setting_row->cset_coll_ID ).' AND cset_name = '.$DB->quote( $setting_row->cset_name );\n\n\t\t\t\t\t$cf_type = $matches[1];\n\t\t\t\t\t$cf_key = $setting_row->cset_value;\n\t\t\t\t\t$cf_label = '';\n\t\t\t\t\t$cf_name = '';\n\t\t\t\t\tforeach( $setting_rows as $s_row )\n\t\t\t\t\t{\n\t\t\t\t\t\tif( $s_row->cset_name == 'custom_'.$cf_type.'_'.$cf_key )\n\t\t\t\t\t\t{ // Label\n\t\t\t\t\t\t\t$cf_label = $s_row->cset_value;\n\t\t\t\t\t\t\t// Delete this blog setting\n\t\t\t\t\t\t\t$blog_setting_delete_data[] = 'cset_coll_ID = '.$DB->quote( $s_row->cset_coll_ID ).' AND cset_name = '.$DB->quote( $s_row->cset_name );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( $s_row->cset_name == 'custom_fname_'.$cf_key )\n\t\t\t\t\t\t{ // Name\n\t\t\t\t\t\t\t$cf_name = $s_row->cset_value;\n\t\t\t\t\t\t\t// Delete this blog setting\n\t\t\t\t\t\t\t$blog_setting_delete_data[] = 'cset_coll_ID = '.$DB->quote( $s_row->cset_coll_ID ).' AND cset_name = '.$DB->quote( $s_row->cset_name );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$custom_fields[ $setting_row->cset_coll_ID ][] = array(\n\t\t\t\t\t\t\t'type'  => $cf_type,\n\t\t\t\t\t\t\t'key'   => $cf_key,\n\t\t\t\t\t\t\t'label' => $cf_label,\n\t\t\t\t\t\t\t'name'  => $cf_name\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( count( $custom_fields ) )\n\t\t\t{ // Create post type for each blog with custom fields\n\t\t\t\t$BlogCache = & get_BlogCache();\n\t\t\t\t$itypes_insert_data = array();\n\t\t\t\t$item_type_max_ID = $DB->get_var( 'SELECT MAX( ityp_ID ) FROM T_items__type' ) + 1;\n\t\t\t\tforeach( $custom_fields as $blog_ID => $c_fields )\n\t\t\t\t{\n\t\t\t\t\tif( ! ( $cf_Blog = $BlogCache->get_by_ID( $blog_ID, false, false ) ) )\n\t\t\t\t\t{ // Skip incorrect blog ID\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t$itypes_insert_data[] = '( '.$item_type_max_ID.', '\n\t\t\t\t\t\t.$DB->quote( 'custom_'.$cf_Blog->get( 'shortname' ) ).', '\n\t\t\t\t\t\t.'\"Posts\", '\n\t\t\t\t\t\t.'\"single\", '\n\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'require_title' ) == 'none' ? 'never' : $cf_Blog->get_setting( 'require_title' ) ).', '\n\t\t\t\t\t\t.$DB->quote( intval( $cf_Blog->get_setting( 'allow_html_post' ) ) ).', '\n\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_country' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_country' ) ).', '\n\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_region' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_region' ) ).', '\n\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_subregion' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_subregion' ) ).', '\n\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_city' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_city' ) ).', '\n\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'show_location_coordinates' ) ? 'optional' : 'never' ).', '\n\t\t\t\t\t\t.$DB->quote( intval( $cf_Blog->get_setting( 'disable_comments_bypost' ) ) ).' )';\n\t\t\t\t\t// Update default post type\n\t\t\t\t\t$blog_setting_item_types[ $cf_Blog->ID ] = $item_type_max_ID;\n\t\t\t\t\t$blog_categories = $DB->get_col( 'SELECT cat_ID FROM T_categories WHERE cat_blog_ID = '.$cf_Blog->ID );\n\t\t\t\t\tif( count( $blog_categories ) )\n\t\t\t\t\t{ // Set new post type for each post\n\t\t\t\t\t\t$DB->query( 'UPDATE T_items__item SET post_ityp_ID = '.$item_type_max_ID.'\n\t\t\t\t\t\t\tWHERE post_ityp_ID = 1\n\t\t\t\t\t\t\t  AND post_main_cat_ID IN ( '.implode( ', ', $blog_categories ).' )' );\n\n\t\t\t\t\t\t// Find the Pages that have at least one defined custom field:\n\t\t\t\t\t\t$pages_SQL = new SQL();\n\t\t\t\t\t\t$pages_SQL->SELECT( 'post_ID' );\n\t\t\t\t\t\t$pages_SQL->FROM( 'T_items__item' );\n\t\t\t\t\t\t$pages_SQL->FROM_add( 'INNER JOIN T_items__item_settings ON post_ID = iset_item_ID' );\n\t\t\t\t\t\t$pages_SQL->WHERE( 'post_main_cat_ID IN ( '.implode( ', ', $blog_categories ).' )' );\n\t\t\t\t\t\t$pages_SQL->WHERE_and( 'post_ityp_ID = 1000' );\n\t\t\t\t\t\t$pages_SQL->WHERE_and( 'iset_name LIKE '.$DB->quote( 'custom_double_%' )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.' OR iset_name LIKE '.$DB->quote( 'custom_varchar_%' ) );\n\t\t\t\t\t\t$pages_SQL->WHERE_and( 'iset_value != \"\"' );\n\t\t\t\t\t\t$pages_SQL->GROUP_BY( 'post_ID' );\n\t\t\t\t\t\t$pages_IDs = $DB->get_col( $pages_SQL->get() );\n\t\t\t\t\t\t$page_type_max_ID = 0;\n\t\t\t\t\t\tif( count( $pages_IDs ) > 0 )\n\t\t\t\t\t\t{ // We have the Pages that have the defined custom fields\n\t\t\t\t\t\t\t// Increase post type ID for new special post type for pages\n\t\t\t\t\t\t\t$page_type_max_ID = $item_type_max_ID + 1;\n\t\t\t\t\t\t\t$itypes_insert_data[] = '( '.$page_type_max_ID.', '\n\t\t\t\t\t\t\t\t.$DB->quote( 'page_'.$cf_Blog->get( 'shortname' ) ).', '\n\t\t\t\t\t\t\t\t.'\"Pages\", '\n\t\t\t\t\t\t\t\t.'\"page\", '\n\t\t\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'require_title' ) == 'none' ? 'never' : $cf_Blog->get_setting( 'require_title' ) ).', '\n\t\t\t\t\t\t\t\t.$DB->quote( intval( $cf_Blog->get_setting( 'allow_html_post' ) ) ).', '\n\t\t\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_country' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_country' ) ).', '\n\t\t\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_region' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_region' ) ).', '\n\t\t\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_subregion' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_subregion' ) ).', '\n\t\t\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_city' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_city' ) ).', '\n\t\t\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'show_location_coordinates' ) ? 'optional' : 'never' ).', '\n\t\t\t\t\t\t\t\t.$DB->quote( intval( $cf_Blog->get_setting( 'disable_comments_bypost' ) ) ).' )';\n\t\t\t\t\t\t\tforeach( $c_fields as $c_field )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Insert custom field to get new ID\n\t\t\t\t\t\t\t\t$DB->query( 'INSERT INTO T_items__type_custom_field ( itcf_ityp_ID, itcf_label, itcf_name, itcf_type )\n\t\t\t\t\t\t\t\t\tVALUES ( '.$page_type_max_ID.', '\n\t\t\t\t\t\t\t\t\t.$DB->quote( $c_field['label'] ).', '\n\t\t\t\t\t\t\t\t\t.$DB->quote( $c_field['name'] ).', '\n\t\t\t\t\t\t\t\t\t.$DB->quote( $c_field['type'] ).' )' );\n\t\t\t\t\t\t\t\t$itcf_ID = $DB->insert_id;\n\t\t\t\t\t\t\t\t// Change the UID of the item settings to the new inserted itcf_ID (ID of the custom field)\n\t\t\t\t\t\t\t\t$DB->query( 'UPDATE T_items__item_settings\n\t\t\t\t\t\t\t\t\t\tSET iset_name = '.$DB->quote( 'custom_'.$c_field['type'].'_'.$itcf_ID ).'\n\t\t\t\t\t\t\t\t\tWHERE iset_item_ID IN ( '.implode( ', ', $pages_IDs ).' )\n\t\t\t\t\t\t\t\t\t\tAND iset_name = '.$DB->quote( 'custom_'.$c_field['type'].'_'.$c_field['key'] ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Set new post type for each page\n\t\t\t\t\t\t\t$DB->query( 'UPDATE T_items__item SET post_ityp_ID = '.$page_type_max_ID.'\n\t\t\t\t\t\t\t\tWHERE post_ID IN ( '.implode( ', ', $pages_IDs ).' )' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Insert custom fields for standard posts (not pages)\n\t\t\t\t\tforeach( $c_fields as $c_field )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Insert custom field to get new ID\n\t\t\t\t\t\t$DB->query( 'INSERT INTO T_items__type_custom_field ( itcf_ityp_ID, itcf_label, itcf_name, itcf_type )\n\t\t\t\t\t\t\tVALUES ( '.$item_type_max_ID.', '\n\t\t\t\t\t\t\t.$DB->quote( $c_field['label'] ).', '\n\t\t\t\t\t\t\t.$DB->quote( $c_field['name'] ).', '\n\t\t\t\t\t\t\t.$DB->quote( $c_field['type'] ).' )' );\n\t\t\t\t\t\t$itcf_ID = $DB->insert_id;\n\t\t\t\t\t\t// Change the UID of the item settings to the new inserted itcf_ID (ID of the custom field)\n\t\t\t\t\t\t$DB->query( 'UPDATE T_items__item_settings\n\t\t\t\t\t\t\t\tSET iset_name = '.$DB->quote( 'custom_'.$c_field['type'].'_'.$itcf_ID ).'\n\t\t\t\t\t\t\tWHERE iset_name = '.$DB->quote( 'custom_'.$c_field['type'].'_'.$c_field['key'] ) );\n\t\t\t\t\t}\n\t\t\t\t\t// Increase post type ID for next\n\t\t\t\t\t$item_type_max_ID += $page_type_max_ID > 0 ? 2 : 1;\n\t\t\t\t}\n\t\t\t\t// Insert post types\n\t\t\t\t$DB->query( 'INSERT INTO T_items__type ( ityp_ID, ityp_name, ityp_backoffice_tab, ityp_template_name, ityp_use_title, ityp_allow_html, ityp_use_country, ityp_use_region, ityp_use_sub_region, ityp_use_city, ityp_use_coordinates, ityp_allow_disabling_comments )\n\t\t\t\t\tVALUES '.implode( ', ', $itypes_insert_data ) );\n\t\t\t\t// Delete old blog settings from DB (custom fields)\n\t\t\t\t$blog_setting_delete_data[] = 'cset_name LIKE \"count_custom_%\"';\n\t\t\t\t$DB->query( 'DELETE FROM T_coll_settings\n\t\t\t\t\tWHERE ( '.implode( ') OR (', $blog_setting_delete_data ).' )' );\n\t\t\t}\n\t\t}\n\n\t\t// Update default post types\n\t\t$blogs = $DB->get_col( 'SELECT blog_ID FROM T_blogs' );\n\t\t$sql_update_blog_settings = array();\n\t\tforeach( $blogs as $blog_ID )\n\t\t{\n\t\t\tif( isset( $blog_setting_item_types[ $blog_ID ] ) )\n\t\t\t{ // Set it from custom post type\n\t\t\t\t$current_item_type = $blog_setting_item_types[ $blog_ID ];\n\t\t\t}\n\t\t\telse\n\t\t\t{ // Set it from first non reserved post type\n\t\t\t\tif( ! isset( $first_item_type ) )\n\t\t\t\t{\n\t\t\t\t\t$SQL = new SQL();\n\t\t\t\t\t$SQL->SELECT( 'ityp_ID' );\n\t\t\t\t\t$SQL->FROM( 'T_items__type' );\n\t\t\t\t\t$SQL->WHERE( 'ityp_ID NOT IN (1000,1400,1500,1520,1530,1570,1600,2000,3000,4000,5000)' );\n\t\t\t\t\t$SQL->ORDER_BY( 'ityp_ID' );\n\t\t\t\t\t$SQL->LIMIT( '1' );\n\t\t\t\t\t$first_item_type = $DB->get_var( $SQL->get() );;\n\t\t\t\t}\n\t\t\t\t$current_item_type = $first_item_type;\n\t\t\t}\n\t\t\t$sql_update_blog_settings[] = '( '.$DB->quote( $blog_ID ).', \"default_post_type\", '.$DB->quote( $current_item_type ).' )';\n\t\t}\n\t\tif( ! empty( $sql_update_blog_settings ) )\n\t\t{ // Execute a query to update the blog settings\n\t\t\t$DB->query( 'REPLACE INTO T_coll_settings ( cset_coll_ID, cset_name, cset_value )\n\t\t\t\tVALUES '.implode( ', ', $sql_update_blog_settings ) );\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating site settings... ' );\n\t\tif( $DB->get_var( 'SELECT set_value FROM T_settings WHERE set_name = \"site_color\"' ) === NULL )\n\t\t{ // Set default site color only when it is not defined yet\n\t\t\t$DB->query( 'INSERT INTO T_settings ( set_name, set_value )'\n\t\t\t\t\t\t\t\t.' VALUES ( \"site_color\", \"#ff8c0f\" )' );\n\t\t}\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11360' );\n\t}\n\n\tif( $old_db_version < 11370 )\n\t{ // part 18.f trunk aka 8th part of \"i7\"\n\n\t\ttask_begin( 'Updating user settings... ' );\n\t\t$DB->query( 'DELETE FROM T_users__usersettings WHERE uset_name = \"admin_skin\"' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11370' );\n\t}\n\n\tif( $old_db_version < 11375 )\n\t{ // part 18.g trunk aka 9th part of \"i7\"\n\n\t\ttask_begin( 'Upgrade table user field definitions... ' );\n\t\t$DB->query( 'ALTER TABLE T_users__fielddefs\n\t\t\tADD ufdf_icon_name varchar(100) COLLATE ascii_general_ci NULL' );\n\t\t$DB->query( 'UPDATE T_users__fielddefs SET\n\t\t\tufdf_icon_name = CASE\n\t\t\t\tWHEN ufdf_name = \"Yahoo IM\"      THEN \"fa fa-yahoo\"\n\t\t\t\tWHEN ufdf_name = \"Skype\"         THEN \"fa fa-skype\"\n\t\t\t\tWHEN ufdf_name = \"Main phone\"    THEN \"fa fa-phone\"\n\t\t\t\tWHEN ufdf_name = \"Cell phone\"    THEN \"fa fa-mobile-phone\"\n\t\t\t\tWHEN ufdf_name = \"Office phone\"  THEN \"fa fa-phone\"\n\t\t\t\tWHEN ufdf_name = \"Home phone\"    THEN \"fa fa-phone\"\n\t\t\t\tWHEN ufdf_name = \"Office FAX\"    THEN \"fa fa-fax\"\n\t\t\t\tWHEN ufdf_name = \"Home FAX\"      THEN \"fa fa-fax\"\n\t\t\t\tWHEN ufdf_name = \"Linkedin\"      THEN \"fa fa-linkedin fa-x-linkedin--nudge\"\n\t\t\t\tWHEN ufdf_name = \"Twitter\"       THEN \"fa fa-twitter\"\n\t\t\t\tWHEN ufdf_name = \"Facebook\"      THEN \"fa fa-facebook\"\n\t\t\t\tWHEN ufdf_name = \"Flickr\"        THEN \"fa fa-flickr\"\n\t\t\t\tWHEN ufdf_name = \"YouTube\"       THEN \"fa fa-youtube\"\n\t\t\t\tWHEN ufdf_name = \"Digg\"          THEN \"fa fa-digg\"\n\t\t\t\tWHEN ufdf_name = \"StumbleUpon\"   THEN \"fa fa-stumbleupon\"\n\t\t\t\tWHEN ufdf_name = \"GitHub\"        THEN \"fa fa-github-alt\"\n\t\t\t\tWHEN ufdf_name = \"Google Plus\"   THEN \"fa fa-google-plus fa-x-google-plus--nudge\"\n\t\t\t\tWHEN ufdf_name = \"Pinterest\"     THEN \"fa fa-pinterest-p\"\n\t\t\t\tWHEN ufdf_name = \"Main address\"  THEN \"fa fa-building\"\n\t\t\t\tWHEN ufdf_name = \"Home address\"  THEN \"fa fa-home\"\n\t\t\t\tWHEN ufdf_name = \"About me\"      THEN \"fa fa-info-circle\"\n\t\t\t\tWHEN ufdf_name = \"I like\"        THEN \"fa fa-thumbs-o-up\"\n\t\t\t\tWHEN ufdf_name = \"I don\\'t like\" THEN \"fa fa-thumbs-o-down\"\n\t\t\t\tELSE ufdf_icon_name\n\t\t\tEND' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11375' );\n\t}\n\n\tif( $old_db_version < 11380 )\n\t{ // part 18.h trunk aka 10th part of \"i7\"\n\n\t\ttask_begin( 'Update links table... ' );\n\t\t$DB->query( 'UPDATE T_links\n\t\t\t  SET link_position = \"cover\"\n\t\t\tWHERE link_position = \"albumart\"' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11380' );\n\t}\n\n\tif( $old_db_version < 11390 )\n\t{ // part 18.i trunk aka 11th part of \"i7\"\n\n\t\ttask_begin( 'Upgrading table of relations users with organizations... ' );\n\t\t$DB->query( 'ALTER TABLE T_users__user_org\n\t\t\tADD COLUMN uorg_role VARCHAR(255) NULL' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11390' );\n\t}\n\n\tif( $old_db_version < 11400 )\n\t{ // part 18.j trunk aka 12th part of \"i7\"\n\n\t\ttask_begin( 'Upgrade table user field definitions... ' );\n\t\t$DB->query( 'ALTER TABLE T_users__fielddefs\n\t\t\tADD ufdf_code varchar(20) COLLATE ascii_general_ci NULL' );\n\t\t$update_user_fields = array(\n\t\t\t\t'Micro bio'     => 'microbio',\n\t\t\t\t'I like'        => 'ilike',\n\t\t\t\t'I don\\'t like' => 'idontlike',\n\t\t\t\t'MSN/Live IM'   => 'msnliveim',\n\t\t\t\t'Yahoo IM'      => 'yahooim',\n\t\t\t\t'AOL AIM'       => 'aolaim',\n\t\t\t\t'ICQ ID'        => 'icqid',\n\t\t\t\t'Skype'         => 'skype',\n\t\t\t\t'Main phone'    => 'mainphone',\n\t\t\t\t'Cell phone'    => 'cellphone',\n\t\t\t\t'Office phone'  => 'officephone',\n\t\t\t\t'Home phone'    => 'homephone',\n\t\t\t\t'Office FAX'    => 'officefax',\n\t\t\t\t'Home FAX'      => 'homefax',\n\t\t\t\t'Twitter'       => 'twitter',\n\t\t\t\t'Facebook'      => 'facebook',\n\t\t\t\t'Google Plus'   => 'googleplus',\n\t\t\t\t'Linkedin'      => 'linkedin',\n\t\t\t\t'GitHub'        => 'github',\n\t\t\t\t'Website'       => 'website',\n\t\t\t\t'Blog'          => 'blog',\n\t\t\t\t'Myspace'       => 'myspace',\n\t\t\t\t'Flickr'        => 'flickr',\n\t\t\t\t'YouTube'       => 'youtube',\n\t\t\t\t'Digg'          => 'digg',\n\t\t\t\t'StumbleUpon'   => 'stumbleupon',\n\t\t\t\t'Pinterest'     => 'pinterest',\n\t\t\t\t'Role'          => 'role',\n\t\t\t\t'Organization'  => 'organization',\n\t\t\t\t'Division'      => 'division',\n\t\t\t\t'VAT ID'        => 'vatid',\n\t\t\t\t'Main address'  => 'mainaddress',\n\t\t\t\t'Home address'  => 'homeaddress',\n\t\t\t);\n\t\tforeach( $update_user_fields as $update_user_field_name => $update_user_field_code )\n\t\t{\n\t\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t  SET ufdf_code = '.$DB->quote( $update_user_field_code ).'\n\t\t\t\tWHERE ufdf_name = '.$DB->quote( $update_user_field_name ).'\n\t\t\t\tLIMIT 1' ); // limit by 1 in order to update only first record to avoid the duplicate codes\n\t\t}\n\t\t// Update codes for all other unknown fields\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\tSET ufdf_code = CONCAT( \"code_\", ufdf_ID )\n\t\t\tWHERE ufdf_code IS NULL' );\n\t\t// Make code field unique\n\t\t$DB->query( 'ALTER TABLE T_users__fielddefs\n\t\t\tMODIFY ufdf_code varchar(20) COLLATE ascii_general_ci UNIQUE NOT NULL' );\n\t\ttask_end();\n\n\t\t/*\n\t\t * ADD UPGRADES FOR i7 BRANCH __ABOVE__ IN THIS BLOCK.\n\t\t *\n\t\t * This part will be included in trunk and i7 branches\n\t\t */\n\n\t\tset_upgrade_checkpoint( '11400' );\n\t}\n\n\tif( $old_db_version < 11410 )\n\t{ // part 18.k trunk aka 13th part of \"i7\"\n\n\t\ttask_begin( 'Upgrading skin names... ' );\n\t\t$DB->query( 'UPDATE T_skins__skin\n\t\t\t\t\t\t\t SET skin_folder = CASE\n\t\t\t\t\t\t\t\t\tWHEN skin_folder = \"bootstrap\"        THEN \"bootstrap_blog_skin\"\n\t\t\t\t\t\t\t\t\tWHEN skin_folder = \"bootstrap_main\"   THEN \"bootstrap_main_skin\"\n\t\t\t\t\t\t\t\t\tWHEN skin_folder = \"bootstrap_manual\" THEN \"bootstrap_manual_skin\"\n\t\t\t\t\t\t\t\t\tELSE skin_folder\n\t\t\tEND' );\n\t\ttask_end();\n\n\t\t/*\n\t\t * ADD UPGRADES FOR i7 BRANCH __ABOVE__ IN THIS BLOCK.\n\t\t *\n\t\t * This part will be included in trunk and i7 branches\n\t\t */\n\n\t\tset_upgrade_checkpoint( '11410' );\n\t}\n\n\tif( $old_db_version < 11420 )\n\t{ // part 18.l trunk aka 14th part of \"i7\"\n\n\t\t// This upgrade block restores all field collations that may have been broken by the back-office DB convert tool\n\t\t// to 'ascii_bin' and 'ascii_general_ci'\n\n\t\ttask_begin( 'Updating hit log keyphrases table...' );\n\t\t$DB->query( 'ALTER TABLE T_track__keyphrase\n\t\t\tMODIFY keyp_phrase  VARCHAR( 255 ) COLLATE utf8_bin NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Check and normalize the ASCII charsets/collations... <br />' );\n\t\ttask_begin( '- Converting skins table...' );\n\t\t$DB->query( \"ALTER TABLE T_skins__skin\n\t\t\tMODIFY skin_type enum('normal','feed','sitemap','mobile','tablet') COLLATE ascii_general_ci NOT NULL default 'normal'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting blogs table...' );\n\t\t$DB->query( \"ALTER TABLE T_blogs\n\t\t\tMODIFY blog_access_type    VARCHAR(10) COLLATE ascii_general_ci NOT NULL DEFAULT 'extrapath',\n\t\t\tMODIFY blog_urlname        VARCHAR(255) COLLATE ascii_general_ci NOT NULL DEFAULT 'urlname',\n\t\t\tMODIFY blog_in_bloglist    ENUM( 'public', 'logged', 'member', 'never' ) COLLATE ascii_general_ci DEFAULT 'public' NOT NULL,\n\t\t\tMODIFY blog_media_location ENUM( 'default', 'subdir', 'custom', 'none' ) COLLATE ascii_general_ci DEFAULT 'default' NOT NULL,\n\t\t\tMODIFY blog_type           ENUM( 'main', 'std', 'photo', 'group', 'forum', 'manual' ) COLLATE ascii_general_ci DEFAULT 'std' NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting blog settings table...' );\n\t\t$DB->query( 'ALTER TABLE T_coll_settings\n\t\t\tMODIFY cset_name VARCHAR( 50 ) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\t\ttask_begin( '- Converting widgets table...' );\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}widget\n\t\t\tMODIFY wi_type ENUM( 'core', 'plugin' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'core',\n\t\t\tMODIFY wi_code VARCHAR(32) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting categories table...' );\n\t\t$DB->query( \"ALTER TABLE T_categories\n\t\t\tMODIFY cat_urlname varchar(255) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY cat_subcat_ordering enum('parent', 'alpha', 'manual') COLLATE ascii_general_ci NULL DEFAULT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting posts table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__item\n\t\t\tMODIFY post_status               enum('published','community','deprecated','protected','private','review','draft','redirected') COLLATE ascii_general_ci NOT NULL default 'published',\n\t\t\tMODIFY post_urltitle             VARCHAR(210) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY post_notifications_status ENUM('noreq','todo','started','finished') COLLATE ascii_general_ci NOT NULL DEFAULT 'noreq',\n\t\t\tMODIFY post_comment_status       ENUM('disabled', 'open', 'closed') COLLATE ascii_general_ci NOT NULL DEFAULT 'open',\n\t\t\tMODIFY post_renderers            VARCHAR(255) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting comments table...' );\n\t\t$DB->query( \"ALTER TABLE T_comments\n\t\t\tMODIFY comment_type         enum('comment','linkback','trackback','pingback','meta') COLLATE ascii_general_ci NOT NULL default 'comment',\n\t\t\tMODIFY comment_status       ENUM('published','community','deprecated','protected','private','review','draft','trash') COLLATE ascii_general_ci DEFAULT 'published' NOT NULL,\n\t\t\tMODIFY comment_author_email varchar(255) COLLATE ascii_general_ci NULL,\n\t\t\tMODIFY comment_author_IP    varchar(45) COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY comment_renderers    VARCHAR(255) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY comment_secret       CHAR(32) COLLATE ascii_general_ci NULL default NULL,\n\t\t\tMODIFY comment_notif_status ENUM('noreq','todo','started','finished') COLLATE ascii_general_ci NOT NULL DEFAULT 'noreq' COMMENT 'Have notifications been sent for this comment? How far are we in the process?'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post prerendered contents table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__prerendering\n\t\t\tMODIFY itpr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY itpr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting comment prerendered contents table...' );\n\t\t$DB->query( \"ALTER TABLE T_comments__prerendering\n\t\t\tMODIFY cmpr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY cmpr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post versions table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__version\n\t\t\tMODIFY iver_status ENUM('published','community','deprecated','protected','private','review','draft','redirected') COLLATE ascii_general_ci NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post types table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__type\n\t\t\tMODIFY ityp_use_title              ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'required',\n\t\t\tMODIFY ityp_use_url                ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tMODIFY ityp_use_text               ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tMODIFY ityp_use_excerpt            ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tMODIFY ityp_use_title_tag          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tMODIFY ityp_use_meta_desc          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tMODIFY ityp_use_meta_keywds        ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tMODIFY ityp_use_tags               ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tMODIFY ityp_use_country            ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tMODIFY ityp_use_region             ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tMODIFY ityp_use_sub_region         ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tMODIFY ityp_use_city               ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tMODIFY ityp_use_coordinates        ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tMODIFY ityp_use_comment_expiration ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post types custom fields table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__type_custom_field\n\t\t\tMODIFY itcf_name VARCHAR(255) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY itcf_type ENUM( 'double', 'varchar' ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__item_settings\n\t\t\tMODIFY iset_name varchar( 50 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user permissions table...' );\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms\n\t\t\tMODIFY bloguser_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloguser_perm_edit         ENUM('no','own','lt','le','all','redirected') COLLATE ascii_general_ci NOT NULL default 'no',\n\t\t\tMODIFY bloguser_perm_cmtstatuses  set('review','draft','private','protected','deprecated','community','published') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloguser_perm_edit_cmt     ENUM('no','own','anon','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting group permissions table...' );\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms\n\t\t\tMODIFY bloggroup_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloggroup_perm_edit         ENUM('no','own','lt','le','all','redirected') COLLATE ascii_general_ci NOT NULL default 'no',\n\t\t\tMODIFY bloggroup_perm_cmtstatuses  set('review','draft','private','protected','deprecated','community','published') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloggroup_perm_edit_cmt     ENUM('no','own','anon','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting links table...' );\n\t\t$DB->query( \"ALTER TABLE T_links\n\t\t\tMODIFY link_position varchar(10) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting files table...' );\n\t\t$DB->query( \"ALTER TABLE T_files\n\t\t\tMODIFY file_type      enum('image', 'audio', 'other') COLLATE ascii_general_ci NULL DEFAULT NULL,\n\t\t\tMODIFY file_root_type enum('absolute','user','collection','shared','skins','import') COLLATE ascii_general_ci NOT NULL DEFAULT 'absolute'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting file types table...' );\n\t\t$DB->query( \"ALTER TABLE T_filetypes\n\t\t\tMODIFY ftyp_extensions varchar(30) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ftyp_viewtype   varchar(10) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ftyp_allowed    enum('any','registered','admin') COLLATE ascii_general_ci NOT NULL default 'admin'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting messages table...' );\n\t\t$DB->query( \"ALTER TABLE T_messaging__message\n\t\t\tMODIFY msg_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting message prerendering contents table...' );\n\t\t$DB->query( \"ALTER TABLE T_messaging__prerendering\n\t\t\tMODIFY mspr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY mspr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting sessions table...' );\n\t\t$DB->query( \"ALTER TABLE T_sessions\n\t\t\tMODIFY sess_key       CHAR(32) COLLATE ascii_general_ci NULL,\n\t\t\tMODIFY sess_ipaddress VARCHAR(45) COLLATE ascii_general_ci NOT NULL DEFAULT '',\n\t\t\tMODIFY sess_device    VARCHAR(8) COLLATE ascii_general_ci NOT NULL DEFAULT ''\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting domains table...' );\n\t\t$DB->query( \"ALTER TABLE T_basedomains\n\t\t\tMODIFY dom_status ENUM('unknown','trusted','suspect','blocked') COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown',\n\t\t\tMODIFY dom_type   ENUM('unknown','normal','searcheng','aggregator','email') COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting logs table...' );\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\tMODIFY hit_ctrl         VARCHAR(30) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY hit_type         ENUM('standard','rss','admin','ajax', 'service') COLLATE ascii_general_ci DEFAULT 'standard' NOT NULL,\n\t\t\tMODIFY hit_referer_type ENUM('search','special','spam','referer','direct','self') COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY hit_remote_addr  VARCHAR(45) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY hit_agent_type   ENUM('robot','browser','unknown') COLLATE ascii_general_ci DEFAULT 'unknown' NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting goal categories table...' );\n\t\t$DB->query( \"ALTER TABLE T_track__goalcat\n\t\t\tMODIFY gcat_color  char(7) COLLATE ascii_general_ci default NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting groups table...' );\n\t\t$DB->query( \"ALTER TABLE T_groups\n\t\t\tMODIFY grp_perm_blogs                  enum('user','viewall','editall') COLLATE ascii_general_ci NOT NULL default 'user',\n\t\t\tMODIFY grp_perm_xhtmlvalidation        VARCHAR(10) COLLATE ascii_general_ci NOT NULL default 'always',\n\t\t\tMODIFY grp_perm_xhtmlvalidation_xmlrpc VARCHAR(10) COLLATE ascii_general_ci NOT NULL default 'always',\n\t\t\tMODIFY grp_perm_stats                  enum('none','user','view','edit') COLLATE ascii_general_ci NOT NULL default 'none'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting group settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_groups__groupsettings\n\t\t\tMODIFY gset_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_settings\n\t\t\tMODIFY set_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting cache table...' );\n\t\t$DB->query( \"ALTER TABLE T_global__cache\n\t\t\tMODIFY cach_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting users table...' );\n\t\t$DB->query( \"ALTER TABLE T_users\n\t\t\tMODIFY user_email           varchar(255) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY user_status          enum( 'activated', 'autoactivated', 'closed', 'deactivated', 'emailchanged', 'failedactivation', 'new' ) COLLATE ascii_general_ci NOT NULL default 'new',\n\t\t\tMODIFY user_unsubscribe_key CHAR(32) COLLATE ascii_general_ci NOT NULL default '' COMMENT 'A specific key, it is used when a user wants to unsubscribe from a post comments without signing in',\n\t\t\tMODIFY user_gender          char(1) COLLATE ascii_general_ci NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user fields table...' );\n\t\t$DB->query( \"ALTER TABLE T_users__fielddefs\n\t\t\tMODIFY ufdf_type       char(8) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ufdf_required   enum('hidden','optional','recommended','require') COLLATE ascii_general_ci NOT NULL default 'optional',\n\t\t\tMODIFY ufdf_duplicated enum('forbidden','allowed','list') COLLATE ascii_general_ci NOT NULL default 'allowed',\n\t\t\tMODIFY ufdf_icon_name  varchar(100) COLLATE ascii_general_ci NULL,\n\t\t\tMODIFY ufdf_code       varchar(20) COLLATE ascii_general_ci UNIQUE NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user reports table...' );\n\t\t$DB->query( \"ALTER TABLE T_users__reports\n\t\t\tMODIFY urep_status enum( 'fake', 'guidelines', 'harass', 'spam', 'other' ) COLLATE ascii_general_ci\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user invitation codes table...' );\n\t\t$DB->query( \"ALTER TABLE T_users__invitation_code\n\t\t\tMODIFY ivc_code varchar(32) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting locales table...' );\n\t\t$DB->query( \"ALTER TABLE T_locales\n\t\t\tMODIFY loc_datefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'y-m-d',\n\t\t\tMODIFY loc_timefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'H:i:s',\n\t\t\tMODIFY loc_shorttimefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'H:i'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting antispam table...' );\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}antispam\n\t\t\tMODIFY aspm_source enum( 'local','reported','central' ) COLLATE ascii_general_ci NOT NULL default 'reported'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting IP ranges table...' );\n\t\t$DB->query( \"ALTER TABLE T_antispam__iprange\n\t\t\tMODIFY aipr_status enum( 'trusted', 'suspect', 'blocked' ) COLLATE ascii_general_ci NULL DEFAULT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_users__usersettings\n\t\t\tMODIFY uset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugins table...' );\n\t\t$DB->query( \"ALTER TABLE T_plugins\n\t\t\tMODIFY plug_classname VARCHAR(40) COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY plug_code      VARCHAR(32) COLLATE ascii_general_ci NULL,\n\t\t\tMODIFY plug_version   VARCHAR(42) COLLATE ascii_general_ci NOT NULL default '0',\n\t\t\tMODIFY plug_status    ENUM( 'enabled', 'disabled', 'needs_config', 'broken' ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugin settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_pluginsettings\n\t\t\tMODIFY pset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugin user settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_pluginusersettings\n\t\t\tMODIFY puset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugin events table...' );\n\t\t$DB->query( \"ALTER TABLE T_pluginevents\n\t\t\tMODIFY pevt_event VARCHAR(40) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting cron tasks table...' );\n\t\t$DB->query( \"ALTER TABLE T_cron__task\n\t\t\tMODIFY ctsk_key varchar(50) COLLATE ascii_general_ci not null\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting cron logs table...' );\n\t\t$DB->query( \"ALTER TABLE T_cron__log\n\t\t\tMODIFY clog_status enum('started','finished','error','timeout') COLLATE ascii_general_ci not null default 'started'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting countries table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__country\n\t\t\tMODIFY ctry_code   char(2) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ctry_status enum( 'trusted', 'suspect', 'blocked' ) COLLATE ascii_general_ci NULL DEFAULT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting regions table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__region\n\t\t\tMODIFY rgn_code char(6) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting subregions table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__subregion\n\t\t\tMODIFY subrg_code char(6) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting cities table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__city\n\t\t\tMODIFY city_postcode char(12) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting currencies table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__currency\n\t\t\tMODIFY curr_code char(3) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting slugs table...' );\n\t\t$DB->query( \"ALTER TABLE T_slug\n\t\t\tMODIFY slug_title varchar(255) COLLATE ascii_bin NOT NULL,\n\t\t\tMODIFY slug_type\tchar(6) COLLATE ascii_bin NOT NULL DEFAULT 'item'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting email logs table...' );\n\t\t$DB->query( \"ALTER TABLE T_email__log\n\t\t\tMODIFY emlog_to     VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY emlog_result ENUM( 'ok', 'error', 'blocked' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'ok'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting email returns table...' );\n\t\t$DB->query( \"ALTER TABLE T_email__returns\n\t\t\tMODIFY emret_address   VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY emret_errtype   CHAR(1) COLLATE ascii_general_ci NOT NULL DEFAULT 'U'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting email addresses table...' );\n\t\t$DB->query( \"ALTER TABLE T_email__address\n\t\t\tMODIFY emadr_address VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY emadr_status  ENUM( 'unknown', 'redemption', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting system log table...' );\n\t\t$DB->query( \"ALTER TABLE T_syslog\n\t\t\tMODIFY slg_type   ENUM('info', 'warning', 'error', 'critical_error') COLLATE ascii_general_ci NOT NULL DEFAULT 'info',\n\t\t\tMODIFY slg_origin ENUM('core', 'plugin') COLLATE ascii_general_ci,\n\t\t\tMODIFY slg_object ENUM('comment', 'item', 'user', 'file') COLLATE ascii_general_ci\" );\n\t\ttask_end();\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11420' );\n\t}\n\n\tif( $old_db_version < 11430 )\n\t{ // part 18.m trunk aka 15th part of \"i7\"\n\n\t\ttask_begin( 'Upgrading tags table...' );\n\t\t// Get all tags that contain not ascii chars, because some mysql versions cannot convert them correctly to utf8_bin\n\t\t$not_ascii_tags = $DB->get_results( 'SELECT *\n\t\t\t FROM T_items__tag\n\t\t\tWHERE tag_name NOT REGEXP \"^[A-Za-z0-9_\\-\\s]+$\"' );\n\t\tforeach( $not_ascii_tags as $not_ascii_tag )\n\t\t{ // Replace each not ascii char with \"_\" in tag name in order to avoid error on below table upgrading\n\t\t\t$ascii_tag_name = preg_replace( '/[^A-Za-z0-9_\\-\\s]/', '_', $not_ascii_tag->tag_name );\n\t\t\t$ascii_tag_name = str_replace( '__', '_', $ascii_tag_name );\n\n\t\t\tif( $ascii_tag_name == $not_ascii_tag->tag_name )\n\t\t\t{ // Skip this tag name because it doesn't contain not ascii chars really\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check tag name for uniqueness\n\t\t\t$c = 1;\n\t\t\t$new_tag_name = $ascii_tag_name;\n\t\t\twhile( $DB->get_var( 'SELECT tag_ID\n\t\t\t\t FROM T_items__tag\n\t\t\t\tWHERE tag_name = '.$DB->quote( $new_tag_name ) ) )\n\t\t\t{\n\t\t\t\t$new_tag_name = $ascii_tag_name.$c;\n\t\t\t\t$c++;\n\t\t\t}\n\n\t\t\t// Update tag name to new value without not ascii chars\n\t\t\t$DB->query( 'UPDATE T_items__tag\n\t\t\t\t  SET tag_name = '.$DB->quote( $new_tag_name ).'\n\t\t\t\tWHERE tag_ID = '.$not_ascii_tag->tag_ID );\n\t\t}\n\t\t// Remove the empty tags\n\t\t$empty_tag_IDs = $DB->get_col( 'SELECT tag_ID FROM T_items__tag\n\t\t\tWHERE tag_name = \"\"' );\n\t\tif( ! empty( $empty_tag_IDs ) )\n\t\t{\n\t\t\t$DB->query( 'DELETE FROM T_items__tag\n\t\t\t\tWHERE tag_ID IN ( '.$DB->quote( $empty_tag_IDs ).' ) ' );\n\t\t\t$DB->query( 'DELETE FROM T_items__itemtag\n\t\t\t\tWHERE itag_tag_ID IN ( '.$DB->quote( $empty_tag_IDs ).' ) ' );\n\t\t}\n\t\t// Upgrade field \"tag_name\" from varbinary to varchar utf8_bin\n\t\t$DB->query( 'ALTER TABLE T_items__tag\n\t\t\tMODIFY tag_name VARCHAR(50) COLLATE utf8_bin NOT NULL' ); // Allow multiple special char variations for each tag\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading collection user/group permissions tables...' );\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms\n\t\t\tMODIFY bloguser_perm_edit ENUM('no','own','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'\" );\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms\n\t\t\tMODIFY bloggroup_perm_edit ENUM('no','own','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'\" );\n\t\ttask_end();\n\n\t\t// fp> Note: do NOT put back and \"add upgrades\" comment here. The comment is OUTSIDE of the block now!\n\n\t\tset_upgrade_checkpoint( '11430' );\n\t}\n\n\tif( upg_task_start( 11440, 'Upgrading base domains table...' ) )\n\t{\t// part of 6.5.0\n\t\t$DB->query( \"ALTER TABLE T_basedomains\n\t\t\tMODIFY dom_name VARCHAR(250) COLLATE utf8_bin NOT NULL DEFAULT ''\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11450, 'Upgrading blog-group permissions table...' ) )\n\t{\t// part of 6.6.0\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms\n\t\t\tADD COLUMN bloggroup_perm_item_type ENUM('standard','restricted','admin') COLLATE ascii_general_ci NOT NULL default 'standard' AFTER bloggroup_perm_poststatuses,\n\t\t\tDROP COLUMN bloggroup_perm_page,\n\t\t\tDROP COLUMN bloggroup_perm_intro,\n\t\t\tDROP COLUMN bloggroup_perm_podcast,\n\t\t\tDROP COLUMN bloggroup_perm_sidebar\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11453, 'Upgrading blog-user permissions table...' ) )\n\t{\t// part of 6.6.0\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms\n\t\t\tADD COLUMN bloguser_perm_item_type ENUM('standard','restricted','admin') COLLATE ascii_general_ci NOT NULL default 'standard' AFTER bloguser_perm_poststatuses,\n\t\t\tDROP COLUMN bloguser_perm_page,\n\t\t\tDROP COLUMN bloguser_perm_intro,\n\t\t\tDROP COLUMN bloguser_perm_podcast,\n\t\t\tDROP COLUMN bloguser_perm_sidebar\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11456, 'Upgrade post types table...' ) )\n\t{\t// part of 6.6.0\n\t\t$DB->query( \"ALTER TABLE T_items__type\n\t\t\tADD COLUMN ityp_perm_level ENUM( 'standard', 'restricted', 'admin' ) COLLATE ascii_general_ci NOT NULL default 'standard'\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11460, 'Creating table for PostType-to-Collection relationships...' ) )\n\t{\t// part of 6.6.0\n\t\tdb_create_table( 'T_items__type_coll', '\n\t\t\titc_ityp_ID int(11) unsigned NOT NULL,\n\t\t\titc_coll_ID int(11) unsigned NOT NULL,\n\t\t\tPRIMARY KEY (itc_ityp_ID, itc_coll_ID),\n\t\t\tUNIQUE itemtypecoll ( itc_ityp_ID, itc_coll_ID )' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11463, 'Updating collection permissions...' ) )\n\t{\t// part of 6.6.0\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t  SET bloggroup_perm_item_type = \"restricted\"\n\t\t\tWHERE bloggroup_perm_item_type = \"standard\"' );\n\t\t$DB->query( 'UPDATE T_coll_user_perms\n\t\t\t  SET bloguser_perm_item_type = \"restricted\"\n\t\t\tWHERE bloguser_perm_item_type = \"standard\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11466, 'Updating post types table...' ) )\n\t{\t// part of 6.6.0\n\t\t$DB->query( 'UPDATE T_items__type SET\n\t\t\tityp_perm_level = CASE\n\t\t\t\tWHEN ityp_ID = \"1\"    THEN \"standard\"\n\t\t\t\tWHEN ityp_ID = \"100\"  THEN \"standard\"\n\t\t\t\tWHEN ityp_ID = \"200\"  THEN \"standard\"\n\t\t\t\tWHEN ityp_ID = \"1000\" THEN \"restricted\"\n\t\t\t\tWHEN ityp_ID = \"1400\" THEN \"restricted\"\n\t\t\t\tWHEN ityp_ID = \"1500\" THEN \"restricted\"\n\t\t\t\tWHEN ityp_ID = \"1520\" THEN \"restricted\"\n\t\t\t\tWHEN ityp_ID = \"1530\" THEN \"restricted\"\n\t\t\t\tWHEN ityp_ID = \"1570\" THEN \"restricted\"\n\t\t\t\tWHEN ityp_ID = \"1600\" THEN \"restricted\"\n\t\t\t\tWHEN ityp_ID = \"2000\" THEN \"standard\"\n\t\t\t\tWHEN ityp_ID = \"3000\" THEN \"admin\"\n\t\t\t\tWHEN ityp_ID = \"4000\" THEN \"admin\"\n\t\t\t\tELSE ityp_perm_level\n\t\t\tEND' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11470, 'Updating widgets table...' ) )\n\t{\t// part of 6.6.0\n\t\t// Disable all widgets of Menu container for all \"Main\" collections\n\t\t$DB->query( 'UPDATE '.$tableprefix.'widget\n\t\t\tINNER JOIN T_blogs ON blog_ID = wi_coll_ID AND blog_type = \"main\"\n\t\t\t  SET wi_enabled = 0\n\t\t\tWHERE wi_sco_name = \"Menu\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11480, 'Updating table for PostType-to-Collection relationships...' ) )\n\t{\t// part of 6.6.1\n\t\t// Get all collections:\n\t\t$collections_SQL = new SQL();\n\t\t$collections_SQL->SELECT( 'blog_ID, blog_type' );\n\t\t$collections_SQL->FROM( 'T_blogs' );\n\t\t$collections = $DB->get_assoc( $collections_SQL->get() );\n\t\t// Get all post types:\n\t\t$posttypes_SQL = new SQL();\n\t\t$posttypes_SQL->SELECT( 'ityp_ID' );\n\t\t$posttypes_SQL->FROM( 'T_items__type' );\n\t\t$posttypes = $DB->get_col( $posttypes_SQL->get() );\n\t\t// Enable post types for the collections:\n\t\t$posttypes_collections = array();\n\t\tforeach( $collections as $collection_ID => $collection_type )\n\t\t{\n\t\t\tswitch( $collection_type )\n\t\t\t{ // Set what post types should not be enabled depending on the collection type:\n\t\t\t\tcase 'main':\n\t\t\t\tcase 'photo':\n\t\t\t\t\t$skip_posttypes = array( 100, 200, 2000, 5000 );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'forum':\n\t\t\t\t\t$skip_posttypes = array( 1, 100, 2000, 5000 );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'manual':\n\t\t\t\t\t$skip_posttypes = array( 1, 200, 2000, 5000 );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: // 'std'\n\t\t\t\t\t$skip_posttypes = array( 100, 200, 5000 );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tforeach( $posttypes as $posttype_ID )\n\t\t\t{\n\t\t\t\tif( in_array( $posttype_ID, $skip_posttypes ) )\n\t\t\t\t{ // Skip(Don't enable) this post type for the collection:\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t$posttypes_collections[] = '( '.$posttype_ID.', '.$collection_ID.' )';\n\t\t\t}\n\t\t}\n\t\tif( count( $posttypes_collections ) )\n\t\t{ // Update the relationships only when at least one is required:\n\t\t\t$DB->query( 'REPLACE INTO T_items__type_coll\n\t\t\t\t( itc_ityp_ID, itc_coll_ID )\n\t\t\t\tVALUES '.implode( ', ', $posttypes_collections ) );\n\t\t}\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11482, 'Updating default post types for forums and manual collections...' ) )\n\t{\t// part of 6.6.3\n\t\t$item_types = array(\n\t\t\t\t'manual' => array( 'ID' => 100, 'name' => 'Manual Page' ),\n\t\t\t\t'forum'  => array( 'ID' => 200, 'name' => 'Forum Topic' ),\n\t\t\t);\n\t\t$update_default_type_sql = array();\n\t\tforeach( $item_types as $collection_type => $item_type )\n\t\t{\n\t\t\t// Try to find an item type by ID or name:\n\t\t\t$item_type_ID = $DB->get_var( 'SELECT ityp_ID\n\t\t\t\t FROM T_items__type\n\t\t\t\tWHERE ityp_ID = '.$item_type['ID'].'\n\t\t\t\t   OR ityp_name = '.$DB->quote( $item_type['name'] ) );\n\t\t\tif( empty( $item_type_ID ) )\n\t\t\t{ // Item type is not found in DB, Skip it:\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Get all collections with type:\n\t\t\t$type_collection_IDs = $DB->get_col( 'SELECT blog_ID\n\t\t\t\t FROM T_blogs\n\t\t\t\tWHERE blog_type = '.$DB->quote( $collection_type ) );\n\t\t\tforeach( $type_collection_IDs as $type_collection_ID )\n\t\t\t{\n\t\t\t\t$update_default_type_sql[] = '( '.$type_collection_ID.', \"default_post_type\", '.$DB->quote( $item_type_ID ).' )';\n\t\t\t}\n\t\t}\n\t\tif( count( $update_default_type_sql ) > 0 )\n\t\t{ // Update default post types of collections:\n\t\t\t$DB->query( 'REPLACE INTO T_coll_settings ( cset_coll_ID, cset_name, cset_value )\n\t\t\t\tVALUES '.implode( ',', $update_default_type_sql ) );\n\t\t}\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11483, 'Updating general settings...' ) )\n\t{\t// part of 6.6.4\n\t\t$DB->query( 'UPDATE T_settings\n\t\t\t\tSET set_value = '.$DB->quote( 'no' ).'\n\t\t\tWHERE set_name = '.$DB->quote( 'newusers_canregister' ).'\n\t\t\t\tAND set_value = '.$DB->quote( '0' ) );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating user settings...' );\n\t\t$DB->query( 'ALTER TABLE T_users__usersettings CHANGE COLUMN uset_name uset_name VARCHAR( 50 ) COLLATE ascii_general_ci NOT NULL' );\n\t\t$DB->query( 'ALTER TABLE T_pluginusersettings CHANGE COLUMN puset_name puset_name VARCHAR( 50 ) COLLATE ascii_general_ci NOT NULL' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11484, 'Upgrade table item types...' ) )\n\t{\t// part of 6.6.4\n\t\t$DB->query( \"ALTER TABLE T_items__type\n\t\t\tADD ityp_use_parent ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never' AFTER ityp_use_url\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11485, 'Upgrade table item types...' ) )\n\t{\t// part of 6.6.6\n\t\t$DB->query( 'ALTER TABLE T_items__type\n\t\t\tADD ityp_allow_breaks TINYINT DEFAULT 1 AFTER ityp_allow_html' );\n\t\t$DB->query( 'UPDATE T_items__type\n\t\t\tSET ityp_allow_breaks = 0,\n\t\t\t    ityp_allow_featured = 0\n\t\t\tWHERE ityp_ID >= 1400\n\t\t\t  AND ityp_ID <= 1600' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11486, 'Upgrade timestamp fields...' ) )\n\t{\t// part of 6.6.6\n\t\t$DB->query( 'ALTER TABLE T_email__log\n\t\t\tMODIFY emlog_timestamp TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_email__returns\n\t\t\tMODIFY emret_timestamp TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_syslog\n\t\t\tMODIFY slg_timestamp TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_items__prerendering\n\t\t\tMODIFY itpr_datemodified TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_comments__prerendering\n\t\t\tMODIFY cmpr_datemodified TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__prerendering\n\t\t\tMODIFY mspr_datemodified TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_users__reports\n\t\t\tMODIFY urep_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_items__version\n\t\t\tMODIFY iver_edit_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__thread\n\t\t\tMODIFY thrd_datemodified datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__message\n\t\t\tMODIFY msg_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__contact\n\t\t\tMODIFY mct_last_contact_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11600, 'Updating blogs settings...' ) )\n\t{\t// part of 6.7.0\n\n\t\t// Update the assets urls to 'relative' type of the blogs that have absolute base url:\n\t\t// (All other blogs will have the 'basic' url type by default)\n\t\t$blogs_abs_url_SQL = new SQL();\n\t\t$blogs_abs_url_SQL->SELECT( 'blog_ID' );\n\t\t$blogs_abs_url_SQL->FROM( 'T_blogs' );\n\t\t$blogs_abs_url_SQL->WHERE( 'blog_access_type = \"absolute\"' );\n\t\t$blogs_abs_url = $DB->get_col( $blogs_abs_url_SQL->get() );\n\t\tif( count( $blogs_abs_url ) )\n\t\t{ // Update only when at least one blog has an absolute base url\n\t\t\t$blogs_abs_url_values = '';\n\t\t\tforeach( $blogs_abs_url as $b => $blog_abs_url_ID )\n\t\t\t{\n\t\t\t\tif( $b != 0 )\n\t\t\t\t{\n\t\t\t\t\t$blogs_abs_url_values .= ', ';\n\t\t\t\t}\n\t\t\t\t$blogs_abs_url_values .= '( '.$blog_abs_url_ID.', \"rsc_assets_url_type\", \"relative\" ), '\n\t\t\t\t\t.'( '.$blog_abs_url_ID.', \"media_assets_url_type\", \"relative\" ), '\n\t\t\t\t\t.'( '.$blog_abs_url_ID.', \"skins_assets_url_type\", \"relative\" )';\n\t\t\t}\n\t\t\t$DB->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\tVALUES '.$blogs_abs_url_values );\n\t\t}\n\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11605, 'Upgrading cron logs table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( \"ALTER TABLE T_cron__log\n\t\t\tCHANGE clog_status clog_status enum('started','finished','error','timeout','warning') COLLATE ascii_general_ci not null default 'started'\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11610, 'Upgrading cron tasks table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'ALTER TABLE T_cron__task\n\t\t\tADD COLUMN ctsk_repeat_variation int(10) unsigned DEFAULT 0 AFTER ctsk_repeat_after' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11615, 'Upgrading email log table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'ALTER TABLE T_email__log\n\t\t\tMODIFY emlog_result ENUM( \"ok\", \"error\", \"blocked\", \"simulated\" ) COLLATE ascii_general_ci NOT NULL DEFAULT \"ok\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11620, 'Upgrading hitlog table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\tMODIFY COLUMN hit_type ENUM('standard','rss','admin','ajax', 'service', 'api') COLLATE ascii_general_ci DEFAULT 'standard' NOT NULL\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11625, 'Update plugins table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'UPDATE T_plugins\n\t\t\t  SET plug_classname = \"shortlinks_plugin\"\n\t\t\tWHERE plug_classname = \"wikilinks_plugin\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11630, 'Upgrading plugin settings table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'ALTER TABLE T_pluginsettings\n\t\t\tMODIFY pset_name VARCHAR( 60 ) COLLATE ascii_general_ci NOT NULL' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11635, 'Upgrading email campaigns table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'ALTER TABLE T_email__campaign\n\t\t\tADD COLUMN ecmp_email_plaintext TEXT NULL AFTER ecmp_email_text,\n\t\t\tADD COLUMN ecmp_renderers       VARCHAR(255) COLLATE ascii_general_ci NOT NULL,\n\t\t\tADD COLUMN ecmp_use_wysiwyg     TINYINT(1) NOT NULL DEFAULT 0' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11640, 'Upgrading hitlog table...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_add_col( 'T_hitlog', 'hit_method', \"ENUM('unknown','GET','POST','PUT','PATCH','DELETE','COPY','HEAD','OPTIONS','LINK','UNLINK','PURGE','LOCK','UNLOCK','PROPFIND','VIEW') COLLATE ascii_general_ci DEFAULT 'unknown' NOT NULL\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11645 ) )\n\t{\t// part of 6.7.0\n\n\t\t/* ---- Install basic widgets for container \"Item Single\": ---- START */\n\t\tglobal $basic_widgets_insert_sql_rows;\n\t\t$basic_widgets_insert_sql_rows = array();\n\n\t\t/**\n\t\t * Add a widget to global array in order to insert it in DB by single SQL query later\n\t\t *\n\t\t * @param integer Blog ID\n\t\t * @param string Container name\n\t\t * @param string Type\n\t\t * @param string Code\n\t\t * @param integer Order\n\t\t * @param array|string|NULL Widget params\n\t\t * @param integer 1 - enabled, 0 - disabled\n\t\t */\n\t\tfunction add_basic_widget_11670( $blog_ID, $container_name, $code, $type, $order, $params = NULL, $enabled = 1 )\n\t\t{\n\t\t\tglobal $basic_widgets_insert_sql_rows, $DB;\n\n\t\t\tif( is_null( $params ) )\n\t\t\t{ // NULL\n\t\t\t\t$params = 'NULL';\n\t\t\t}\n\t\t\telseif( is_array( $params ) )\n\t\t\t{ // array\n\t\t\t\t$params = $DB->quote( serialize( $params ) );\n\t\t\t}\n\t\t\telse\n\t\t\t{ // string\n\t\t\t\t$params = $DB->quote( $params );\n\t\t\t}\n\n\t\t\t$basic_widgets_insert_sql_rows[] = '( '\n\t\t\t\t.$blog_ID.', '\n\t\t\t\t.$DB->quote( $container_name ).', '\n\t\t\t\t.$order.', '\n\t\t\t\t.$enabled.', '\n\t\t\t\t.$DB->quote( $type ).', '\n\t\t\t\t.$DB->quote( $code ).', '\n\t\t\t\t.$params.' )';\n\t\t}\n\n\t\t$collections = $DB->get_assoc( 'SELECT blog_ID, blog_type FROM T_blogs ORDER BY blog_ID' );\n\t\tforeach( $collections as $coll_ID => $coll_type )\n\t\t{\n\t\t\ttask_begin( 'Installing default \"Item Single\" widgets for collection #'.$coll_ID.'... ' );\n\t\t\tadd_basic_widget_11670( $coll_ID, 'Item Single', 'item_content', 'core', 20 );\n\t\t\tif( $coll_type != 'forum' )\n\t\t\t{\t// Item Tags:\n\t\t\t\tadd_basic_widget_11670( $coll_ID, 'Item Single', 'item_tags', 'core', 30 );\n\t\t\t}\n\t\t\tif( $coll_type == 'std' )\n\t\t\t{\t// About Author:\n\t\t\t\tadd_basic_widget_11670( $coll_ID, 'Item Single', 'item_about_author', 'core', 40 );\n\t\t\t}\n\t\t\tif( $coll_type == 'std' || $coll_type == 'manual' )\n\t\t\t{\t// Small Print:\n\t\t\t\tadd_basic_widget_11670( $coll_ID, 'Item Single', 'item_small_print', 'core', 50, array( 'format' => ( $coll_type == 'std' ? 'standard' : 'revision' ) ) );\n\t\t\t}\n\t\t\t// Seen by:\n\t\t\tadd_basic_widget_11670( $coll_ID, 'Item Single', 'item_seen_by', 'core', 60, NULL,\n\t\t\t\t// Disable this widget for \"forum\" collections by default:\n\t\t\t\t$coll_type == 'forum' ? 0 : 1 );\n\t\t\ttask_end();\n\t\t}\n\n\t\tif( ! empty( $basic_widgets_insert_sql_rows ) )\n\t\t{\t// Insert the widget records by single SQL query:\n\t\t\t$DB->query( 'INSERT INTO T_widget( wi_coll_ID, wi_sco_name, wi_order, wi_enabled, wi_type, wi_code, wi_params ) '\n\t\t\t\t\t\t\t\t .'VALUES '.implode( ', ', $basic_widgets_insert_sql_rows ) );\n\t\t}\n\t\t/* ---- Install basic widgets for container \"Item Single\": ---- END */\n\n\t\tupg_task_end( false );\n\t}\n\n\tif( upg_task_start( 11650, 'Upgrading user organizations table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'ALTER TABLE T_users__organization\n\t\t\tADD COLUMN org_owner_user_ID INT(11) UNSIGNED NOT NULL AFTER org_ID,\n\t\t\tADD COLUMN org_accept        ENUM( \"yes\", \"owner\", \"no\" ) COLLATE ascii_general_ci NOT NULL DEFAULT \"owner\"' );\n\t\t$DB->query( 'UPDATE T_users__organization SET org_owner_user_ID = 1' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11655, 'Creating table for Poll questions...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_create_table( 'T_polls__question', '\n\t\t\tpqst_ID            INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\tpqst_owner_user_ID INT(11) UNSIGNED NOT NULL,\n\t\t\tpqst_question_text VARCHAR(2000) NULL,\n\t\t\tPRIMARY KEY (pqst_ID)' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11660, 'Creating table for Poll options...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_create_table( 'T_polls__option', '\n\t\t\tpopt_ID          INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\tpopt_pqst_ID     INT(11) UNSIGNED NOT NULL,\n\t\t\tpopt_option_text VARCHAR(2000) NULL,\n\t\t\tpopt_order       INT(11) NOT NULL,\n\t\t\tPRIMARY KEY (popt_ID)' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11665, 'Creating table for Poll answers...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_create_table( 'T_polls__answer', '\n\t\t\tpans_ID      INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\tpans_pqst_ID INT(11) UNSIGNED NOT NULL,\n\t\t\tpans_user_ID INT(11) UNSIGNED NOT NULL,\n\t\t\tpans_popt_ID INT(11) UNSIGNED NOT NULL,\n\t\t\tPRIMARY KEY (pans_ID),\n\t\t\tUNIQUE pans_pqst_user_ID ( pans_pqst_ID, pans_user_ID )' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11670, 'Creating default polls...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'INSERT INTO T_polls__question ( pqst_owner_user_ID, pqst_question_text )\n\t\t\tVALUES ( 1, \"What is your favorite b2evolution feature?\" )' );\n\t\t$DB->query( 'INSERT INTO T_polls__option ( popt_pqst_ID, popt_option_text, popt_order )\n\t\t\tVALUES ( 1, \"Multiple blogs\",          1 ),\n\t\t\t\t\t\t ( 1, \"Photo Galleries\",         2 ),\n\t\t\t\t\t\t ( 1, \"Forums\",                  3 ),\n\t\t\t\t\t\t ( 1, \"Online Manuals\",          4 ),\n\t\t\t\t\t\t ( 1, \"Newsletters / E-mailing\", 5 ),\n\t\t\t\t\t\t ( 1, \"Easy Maintenance\",        6 )' );\n\t\t$DB->query( 'INSERT INTO T_polls__answer ( pans_pqst_ID, pans_user_ID, pans_popt_ID )\n\t\t\tVALUES ( 1, 5, 1 ),\n\t\t\t\t\t\t ( 1, 6, 2 ),\n\t\t\t\t\t\t ( 1, 7, 2 ),\n\t\t\t\t\t\t ( 1, 2, 2 ),\n\t\t\t\t\t\t ( 1, 3, 3 ),\n\t\t\t\t\t\t ( 1, 4, 3 ),\n\t\t\t\t\t\t ( 1, 1, 6 )' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11675, 'Creating table for secondary user groups...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_create_table( 'T_users__secondary_user_groups', '\n\t\t\t\tsug_user_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\tsug_grp_ID  INT(11) UNSIGNED NOT NULL,\n\t\t\t\tPRIMARY KEY ( sug_user_ID, sug_grp_ID )' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11680, 'Upgrading groups table...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_add_col( 'T_groups', 'grp_usage', \"ENUM('primary','secondary') COLLATE ascii_general_ci NOT NULL DEFAULT 'primary' AFTER grp_name\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11685, 'Upgrading files table...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_add_col( 'T_files', 'file_download_count', 'INT(10) UNSIGNED NOT NULL DEFAULT 0 AFTER file_can_be_main_profile' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11690, 'Updating collection user/group permissions...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_meta_comment', 'tinyint NOT NULL default 0 AFTER bloguser_perm_edit_cmt' );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_meta_comment', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_edit_cmt' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11695, 'Upgrade table item types...' ) )\n\t{\t// part of 6.7.0\n\t\t// Add item type usage field and new setting \"Treat as Podcast Media\" to use it specially for \"Podcast\" item type:\n\t\t$DB->query( 'ALTER TABLE T_items__type\n\t\t\tADD COLUMN ityp_usage   VARCHAR(20) COLLATE ascii_general_ci NOT NULL DEFAULT \"post\" AFTER ityp_backoffice_tab,\n\t\t\tADD COLUMN ityp_podcast TINYINT(1) DEFAULT 0 AFTER ityp_use_url' );\n\t\t// Replace old field \"ityp_backoffice_tab\" with new \"ityp_usage\":\n\t\t$DB->query( 'UPDATE T_items__type SET\n\t\t\tityp_usage = CASE\n\t\t\t\tWHEN ( ityp_backoffice_tab = \"Pages\" OR ityp_name = \"Page\" ) THEN \"page\"\n\t\t\t\tWHEN ityp_name = \"Intro-Front\"   THEN \"intro-front\"\n\t\t\t\tWHEN ityp_name = \"Intro-Main\"    THEN \"intro-main\"\n\t\t\t\tWHEN ityp_name = \"Intro-Cat\"     THEN \"intro-cat\"\n\t\t\t\tWHEN ityp_name = \"Intro-Tag\"     THEN \"intro-tag\"\n\t\t\t\tWHEN ityp_name = \"Intro-Sub\"     THEN \"intro-sub\"\n\t\t\t\tWHEN ityp_name = \"Intro-All\"     THEN \"intro-all\"\n\t\t\t\tWHEN ityp_name = \"Sidebar link\"  THEN \"special\"\n\t\t\t\tWHEN ityp_name = \"Advertisement\" THEN \"special\"\n\t\t\t\tELSE \"post\"\n\t\t\tEND' );\n\t\tdb_drop_col( 'T_items__type', 'ityp_backoffice_tab' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11700, 'Update item types for new created fields...' ) )\n\t{\t// part of 6.7.0\n\t\t// Update name of podcast item type:\n\t\t$DB->query( 'UPDATE T_items__type\n\t\t\t  SET ityp_name = \"Podcast Episode\"\n\t\t\tWHERE ityp_name = \"Podcast\"' );\n\t\t// Enable new podcast setting for item type \"Podcast\"\n\t\t$DB->query( 'UPDATE T_items__type\n\t\t\t  SET ityp_podcast = \"1\"\n\t\t\tWHERE ityp_ID = \"2000\"' );\n\t\t// Delete the reserved item type:\n\t\t$DB->query( 'DELETE FROM T_items__type\n\t\t\tWHERE ityp_ID = \"5000\"' );\n\t\t// Update name of page item type:\n\t\t$DB->query( 'UPDATE T_items__type\n\t\t\t  SET ityp_name = \"Standalone Page\"\n\t\t\tWHERE ityp_usage = \"page\"\n\t\t\t  AND ityp_name = \"Page\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11705, 'Upgrading users organization table...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_add_col( 'T_users__organization', 'org_perm_role', \"ENUM('owner and member', 'owner') COLLATE ascii_general_ci NOT NULL DEFAULT 'owner and member' AFTER org_accept\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11710, 'Deleting back-office skin \"chicago\"...' ) )\n\t{\t// part of 6.7.0\n\t\t// Update the back-office skin of all users to default \"bootstrap\":\n\t\t$DB->query( 'DELETE FROM T_users__usersettings WHERE uset_name = \"admin_skin\"' );\n\t\t// Try to delete skin folder:\n\t\tglobal $adminskins_path;\n\t\t$skin_chicago_path = $adminskins_path.'chicago/';\n\t\tif( file_exists( $skin_chicago_path ) && ! rmdir_r( $skin_chicago_path ) )\n\t\t{\t// Display a warning if no permissions to delete the skin folder:\n\t\t\techo get_install_format_text( '<span class=\"text-warning\"><evo:warning>'\n\t\t\t\t\t.'WARNING: the Chicago admin skin is no longer supported. Please delete the folder <code>'.$skin_chicago_path.'</code>'\n\t\t\t\t.'</evo:warning></span>' );\n\t\t}\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11715, 'Replace widgets \"Simple Sidebar Links list\" and \"Simple Linkblog Links list\" with \"Universal Item list\"...' ) )\n\t{\t// part of 6.7.0\n\t\t$old_widgets = $DB->get_results( 'SELECT wi_ID, wi_code, wi_params\n\t\t\t FROM T_widget\n\t\t\tWHERE wi_type = \"core\"\n\t\t\t  AND wi_code IN ( \"linkblog\", \"coll_link_list\" )', OBJECT,\n\t\t\t'Get widgets \"linkblog\" and \"coll_link_list\" to replace them with \"coll_item_list\"' );\n\t\tforeach( $old_widgets as $old_widget )\n\t\t{\n\t\t\t// Get current params of each widget to don't miss default settings:\n\t\t\t$widget_params = empty( $old_widget->wi_params ) ? array() : unserialize( $old_widget->wi_params );\n\t\t\t// Rewrite default params with existing widget params from DB:\n\t\t\tswitch( $old_widget->wi_code )\n\t\t\t{\n\t\t\t\tcase 'linkblog':\n\t\t\t\t\t// Keep default params for old widget \"Simple Linkblog Links list\":\n\t\t\t\t\t$widget_params = array_merge( array(\n\t\t\t\t\t\t\t'title'                => T_('Linkblog'),\n\t\t\t\t\t\t\t'item_group_by'        => 'chapter',\n\t\t\t\t\t\t\t'item_title_link_type' => 'auto',\n\t\t\t\t\t\t\t'item_type'            => '',\n\t\t\t\t\t\t\t'item_type_usage'      => 'special',\n\t\t\t\t\t\t), $widget_params );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'coll_link_list':\n\t\t\t\t\t// Keep default params for old widget \"Simple Sidebar Links list\":\n\t\t\t\t\t$widget_params = array_merge( array(\n\t\t\t\t\t\t\t'title'                => T_('Links'),\n\t\t\t\t\t\t\t'item_title_link_type' => 'auto',\n\t\t\t\t\t\t\t'item_type'            => '',\n\t\t\t\t\t\t\t'item_type_usage'      => 'special',\n\t\t\t\t\t\t), $widget_params );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$DB->query( 'UPDATE T_widget\n\t\t\t\t\tSET wi_code = \"coll_item_list\", wi_params = '.$DB->quote( serialize( $widget_params ) ).'\n\t\t\t\tWHERE wi_ID = '.$old_widget->wi_ID );\n\t\t}\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11720, 'Replace renamed widgets...' ) )\n\t{\t// part of 6.7.0\n\t\t// It's ok to run several queries in a single block because they don't change the DB structure, so they practically can't fail:\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t  SET wi_code = \"item_seen_by\"\n\t\t\tWHERE wi_type = \"core\"\n\t\t\t  AND wi_code = \"coll_seen_by\"' );\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t  SET wi_code = \"item_small_print\"\n\t\t\tWHERE wi_type = \"core\"\n\t\t\t  AND wi_code = \"coll_small_print\"' );\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t  SET wi_code = \"item_tags\"\n\t\t\tWHERE wi_type = \"core\"\n\t\t\t  AND wi_code = \"coll_item_tags\"' );\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t  SET wi_code = \"item_content\"\n\t\t\tWHERE wi_type = \"core\"\n\t\t\t  AND wi_code = \"coll_item_content\"' );\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t  SET wi_code = \"item_about_author\"\n\t\t\tWHERE wi_type = \"core\"\n\t\t\t  AND wi_code = \"coll_about_author\"' );\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t  SET wi_code = \"coll_member_count\"\n\t\t\tWHERE wi_type = \"core\"\n\t\t\t  AND wi_code = \"member_count\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11725, 'Upgrade table post type...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_add_col( 'T_items__type', 'ityp_front_instruction', 'tinyint default 0 AFTER ityp_template_name' );\n\t\tdb_add_col( 'T_items__type', 'ityp_back_instruction', 'tinyint default 0 AFTER ityp_front_instruction' );\n\t\tdb_add_col( 'T_items__type', 'ityp_instruction', 'text NULL default NULL AFTER ityp_back_instruction' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11730, 'Upgrade table invitation codes...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_add_col( 'T_users__invitation_code', 'ivc_level', 'int unsigned NULL' );\n\t\t$DB->query( 'ALTER TABLE T_users__invitation_code\n\t\t\tMODIFY COLUMN ivc_grp_ID int(4) NULL' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11735, 'Upgrade table files...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'ALTER TABLE T_files\n\t\t\tMODIFY file_type ENUM( \"image\", \"audio\", \"video\", \"other\" ) COLLATE ascii_general_ci NULL DEFAULT NULL' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11740, 'Update table user settings for new post/comment moderation settings...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\tSELECT uset_user_ID, IF( uset_name = \"notify_comment_moderation\", \"notify_edit_cmt_moderation\", \"notify_edit_pst_moderation\" ), uset_value\n\t\t\t  FROM T_users__usersettings\n\t\t\t WHERE uset_name IN ( \"notify_comment_moderation\", \"notify_post_moderation\" )' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11745, 'Upgrading items table...' ) )\n\t{\t// part of 6.7.1\n\t\tdb_add_col( 'T_items__item', 'post_notifications_flags', \"SET('moderators_notified','members_notified','community_notified','pings_sent') NOT NULL DEFAULT '' AFTER post_notifications_ctsk_ID\" );\n\t\t$DB->query( 'UPDATE T_items__item\n\t\t\t  SET post_notifications_flags = \"moderators_notified,members_notified,community_notified,pings_sent\"\n\t\t\tWHERE post_notifications_status = \"finished\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11750, 'Upgrading comments table...' ) )\n\t{\t// part of 6.7.1\n\t\tdb_add_col( 'T_comments', 'comment_notif_flags', \"SET('moderators_notified','members_notified','community_notified') NOT NULL DEFAULT ''\" );\n\t\t$DB->query( 'UPDATE T_comments\n\t\t\t  SET comment_notif_flags = \"moderators_notified,members_notified,community_notified\"\n\t\t\tWHERE comment_notif_status = \"finished\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11755, 'Creating collection user favorites table...' ) )\n\t{\t// part of 6.7.1-beta\n\t\tdb_create_table( 'T_coll_user_favs', '\n\t\t\t\tcufv_user_ID INT(10) UNSIGNED NOT NULL,\n\t\t\t\tcufv_blog_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\tPRIMARY KEY cufv_pk ( cufv_user_ID, cufv_blog_ID )' );\n\n\t\t// If system user count is less than or equal to 10, Add favorites based on previous blog_favorite settings\n\t\tload_funcs( 'tools/model/_system.funcs.php' );\n\t\t$user_IDs = system_get_user_IDs();\n\n\t\t$colls_SQL = new SQL( 'Get ALL collections' );\n\t\t$colls_SQL->SELECT( 'blog_ID, blog_owner_user_ID, blog_favorite' );\n\t\t$colls_SQL->FROM( 'T_blogs' );\n\t\t$colls_SQL->ORDER_BY( 'blog_ID' );\n\t\t$colls = $DB->get_results( $colls_SQL->get() );\n\n\t\t$user_colls_count = array();\n\t\t$insert_values = array();\n\t\tforeach( $colls as $coll )\n\t\t{\t// Collection owners will automatically favorite their collections:\n\t\t\tif( ! isset( $user_colls_count[ $coll->blog_owner_user_ID ] ) )\n\t\t\t{\t// Initialize a count of favorite collections for each user:\n\t\t\t\t$user_colls_count[ $coll->blog_owner_user_ID ] = 1;\n\t\t\t}\n\t\t\tif( $user_colls_count[ $coll->blog_owner_user_ID ] <= 7 )\n\t\t\t{\t// Make favorite only first 7 collections for each user:\n\t\t\t\t$insert_values[] = '( '.$coll->blog_ID.', '.$coll->blog_owner_user_ID.' )';\n\t\t\t\t$user_colls_count[ $coll->blog_owner_user_ID ]++;\n\t\t\t}\n\t\t}\n\n\t\tif( count( $user_IDs ) <= 10 )\n\t\t{\t// Make collections favorite for other users only if system has <= 10 users:\n\t\t\tforeach( $user_IDs as $user_ID )\n\t\t\t{\n\t\t\t\tif( ! isset( $user_colls_count[ $user_ID ] ) )\n\t\t\t\t{\t// Initialize a count of favorite collections for each user:\n\t\t\t\t\t$user_colls_count[ $user_ID ] = 1;\n\t\t\t\t}\n\t\t\t\tforeach( $colls as $coll )\n\t\t\t\t{\n\t\t\t\t\tif( $user_colls_count[ $user_ID ] > 7 )\n\t\t\t\t\t{\t// Make favorite only first 7 collections for each user:\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif( $coll->blog_favorite && $user_ID != $coll->blog_owner_user_ID )\n\t\t\t\t\t{\t// Skip collection owner, because it has this collection as favorite automatically above:\n\t\t\t\t\t\t$insert_values[] = '( '.$coll->blog_ID.', '.$user_ID.' )';\n\t\t\t\t\t\t$user_colls_count[ $user_ID ]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( count( $insert_values ) )\n\t\t{\t// Insert rows of favorite collections per users in DB:\n\t\t\t$DB->query( 'INSERT INTO T_coll_user_favs ( cufv_blog_ID, cufv_user_ID ) VALUES '.implode( ', ', $insert_values ) );\n\t\t}\n\n\t\t// Drop blog_favorite column:\n\t\tdb_drop_col( 'T_blogs', 'blog_favorite' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11760, 'Upgrading email campaigns table...' ) )\n\t{\t// part of 6.7.1-beta\n\t\tdb_add_col( 'T_email__campaign', 'ecmp_send_ctsk_ID', 'INT(10) UNSIGNED NULL DEFAULT NULL' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11765, 'Upgrading files table...' ) )\n\t{ // part of 6.7.1-beta\n\t\tdb_add_col( 'T_files', 'file_creator_user_ID', 'int(10) unsigned NULL default NULL AFTER file_ID' );\n\n\t\t// Update file_creator_user_ID with the owner of the first link to a comment/post/message\n\t\t$SQL = 'UPDATE T_files AS t1,\n\t\t\t\t(\n\t\t\t\t\tSELECT a.link_file_ID, a.link_creator_user_ID\n\t\t\t\t\tFROM T_links AS a\n\t\t\t\t\tINNER JOIN\n\t\t\t\t\t(\n\t\t\t\t\t\tSELECT link_file_ID, MIN( link_ID ) AS min_ID\n\t\t\t\t\t\tFROM T_links\n\t\t\t\t\t\tGROUP BY link_file_ID\n\t\t\t\t\t) AS b\n\t\t\t\t\t\tON a.link_file_ID = b.link_file_ID AND a.link_ID = b.min_ID\n\t\t\t\t) AS t2\n\t\t\t\tSET\n\t\t\t\t\tt1.file_creator_user_ID = t2.link_creator_user_ID\n\t\t\t\tWHERE\n\t\t\t\t\tt1.file_ID = t2.link_file_ID';\n\t\t$DB->query( $SQL );\n\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11770, 'Upgrading files table...' ) )\n\t{ // part of 6.7.3-beta\n\t\tdb_add_index( 'T_files', 'file_creator_user_id', 'file_creator_user_id' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11775, 'Upgrading posts and comments statuses depeding on max allowed status by their collections...' ) )\n\t{\t// part of 6.7.4-stable\n\t\t$BlogCache = & get_BlogCache();\n\t\t$BlogCache->load_all( 'ID', 'ASC' );\n\t\tforeach( $BlogCache->cache as $Blog )\n\t\t{\n\t\t\t$Blog->update_reduced_status_data();\n\t\t}\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11780, 'Upgrading subscription settings of collections...' ) )\n\t{\t// part of 6.7.4-stable\n\t\t$DB->query( 'REPLACE INTO T_coll_settings ( cset_coll_ID, cset_name, cset_value )\n\t\t\t\tSELECT cset_coll_ID, \"allow_comment_subscriptions\", 1\n\t\t\t\t  FROM T_coll_settings\n\t\t\t\t WHERE cset_name = \"allow_subscriptions\"\n\t\t\t\t   AND cset_value = 1' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11785, 'Upgrading email log table...' ) )\n\t{\t// part of 6.7.7-stable\n\t\t$DB->query( 'ALTER TABLE T_email__log\n\t\t\tMODIFY emlog_message MEDIUMTEXT DEFAULT NULL' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11790, 'Fix number of favorite collections per each user...' ) )\n\t{\t// part of 6.7.7-stable\n\t\t// Get users which have more than 20 favorite collections:\n\t\t$more_fav_coll_users_SQL = new SQL();\n\t\t$more_fav_coll_users_SQL->SELECT( 'cufv_user_ID' );\n\t\t$more_fav_coll_users_SQL->FROM( 'T_coll_user_favs' );\n\t\t$more_fav_coll_users_SQL->GROUP_BY( 'cufv_user_ID' );\n\t\t$more_fav_coll_users_SQL->HAVING( 'COUNT( cufv_blog_ID ) > 20' );\n\t\t$more_fav_coll_user_IDs = $DB->get_col( $more_fav_coll_users_SQL->get() );\n\n\t\tforeach( $more_fav_coll_user_IDs as $more_fav_coll_user_ID )\n\t\t{\n\t\t\t// Get first 7 collections which should be kept as favorite after upgrade:\n\t\t\t$first_colls_SQL = new SQL();\n\t\t\t$first_colls_SQL->SELECT( 'cufv_blog_ID' );\n\t\t\t$first_colls_SQL->FROM( 'T_coll_user_favs' );\n\t\t\t$first_colls_SQL->WHERE( 'cufv_user_ID = '.$more_fav_coll_user_ID );\n\t\t\t$first_colls_SQL->ORDER_BY( 'cufv_blog_ID' );\n\t\t\t$first_colls_SQL->LIMIT( '7' );\n\t\t\t$first_coll_IDs = $DB->get_col( $first_colls_SQL->get() );\n\n\t\t\tif( count( $first_coll_IDs ) )\n\t\t\t{\t// Delete collections from favorite list:\n\t\t\t\t$DB->query( 'DELETE FROM T_coll_user_favs\n\t\t\t\t\tWHERE cufv_user_ID = '.$more_fav_coll_user_ID.'\n\t\t\t\t\t  AND cufv_blog_ID NOT IN ( '.$DB->quote( $first_coll_IDs ).' )' );\n\t\t\t}\n\t\t}\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11795, 'Upgrading posts table...' ) )\n\t{\t// part of 6.7.7-stable\n\t\t$DB->query( 'ALTER TABLE T_items__item\n\t\t\tMODIFY post_excerpt_autogenerated  TINYINT(1) NOT NULL DEFAULT 1' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11800, 'Upgrading collection-user permissions table...' ) )\n\t{\t// part of 6.7.7-stable\n\t\t$DB->query( 'ALTER TABLE T_coll_user_perms\n\t\t\tADD bloguser_perm_analytics tinyint NOT NULL default 0' );\n\t\t$DB->query( 'UPDATE T_coll_user_perms\n\t\t\t  SET bloguser_perm_analytics = 1\n\t\t\tWHERE bloguser_perm_properties = 1' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11805, 'Upgrading collection-group permissions table...' ) )\n\t{\t// part of 6.7.7-stable\n\t\t$DB->query( 'ALTER TABLE T_coll_group_perms\n\t\t\tADD bloggroup_perm_analytics tinyint NOT NULL default 0' );\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t  SET bloggroup_perm_analytics = 1\n\t\t\tWHERE bloggroup_perm_properties = 1' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11810, 'Upgrading plugins table...' ) )\n\t{\t// part of 6.7.7-stable\n\t\t$DB->query( 'ALTER TABLE T_plugins\n\t\t\tMODIFY plug_priority TINYINT UNSIGNED NOT NULL default 50' );\n\t\tupg_task_end();\n\t}\n\n\t/*\n\t * ADD UPGRADES __ABOVE__ IN A NEW UPGRADE BLOCK.\n\t *\n\t * YOU MUST USE:\n\t * task_begin( 'Descriptive text about action...' );\n\t * task_end();\n\t *\n\t * ALL DB CHANGES MUST BE EXPLICITLY CARRIED OUT. DO NOT RELY ON SCHEMA UPDATES!\n\t * Schema updates do not survive after several incremental changes.\n\t *\n\t * NOTE: every change that gets done here, should bump {@link $new_db_version} (by 100).\n\t */\n\n\t// Execute general upgrade tasks.\n\t// These tasks needs to be called after every upgrade process, except if they were already executed but the upgrade was not finished because of the max execution time check.\n\tif( param( 'exec_general_tasks', 'boolean', 1 ) )\n\t{\t// We haven't executed these general tasks yet:\n\n\t\t// Update modules own b2evo tables\n\t\techo get_install_format_text( \"Calling modules for individual upgrades...<br>\\n\", 'br' );\n\t\tevo_flush();\n\t\tmodules_call_method( 'upgrade_b2evo_tables' );\n\n\t\t// We're going to need some environment in order to init caches and create profile picture links...\n\t\tif( ! is_object( $Settings ) )\n\t\t{ // create Settings object\n\t\t\tload_class( 'settings/model/_generalsettings.class.php', 'GeneralSettings' );\n\t\t\t$Settings = new GeneralSettings();\n\t\t}\n\t\tif( ! is_object( $Plugins ) )\n\t\t{ // create Plugins object\n\t\t\tload_class( 'plugins/model/_plugins.class.php', 'Plugins' );\n\t\t\t$Plugins = new Plugins();\n\t\t}\n\n\t\t// Init Caches:\n\t\tload_funcs('tools/model/_system.funcs.php');\n\t\tsystem_init_caches( true, ($old_db_version <= 11410) ); // Only force enabling the caches if we upgrade from a version older or equal to 11410 (6.4.2-beta)\n\t\t// note: the above outputs messages\n\n\t\t// Check/Repair Caches:\n\t\ttask_begin( 'Checking &amp; repairing caches...' );\n\t\tload_funcs('tools/model/_system.funcs.php');\n\t\t// Check all cache folders if exist and work properly. Try to repair cache folders if they aren't ready for operation.\n\t\t$check_cache_messages = system_check_caches( true );\n\t\tif( is_array( $check_cache_messages ) && count( $check_cache_messages ) )\n\t\t{ // Display errors of the cache checking\n\t\t\tforeach( $check_cache_messages as $check_cache_message )\n\t\t\t{\n\t\t\t\techo get_install_format_text( '<br />', 'br' );\n\t\t\t\techo get_install_format_text( '<span class=\"text-danger\"><evo:error>'.$check_cache_message.'</evo:error></span>' );\n\t\t\t}\n\t\t\techo get_install_format_text( '<br />', 'br' );\n\t\t}\n\t\ttask_end();\n\n\t\t// Check if profile picture links should be recreated. It won't be executed in each upgrade, but only in those cases when it is required.\n\t\t// This requires an up to date database, and also $Plugins and $GeneralSettings objects must be initialized before this.\n\t\t// Note: Check $create_profile_picture_links intialization and usage above to get more information.\n\t\tif( $create_profile_picture_links )\n\t\t{ // Create links for all files from the users profile_pictures folder\n\t\t\ttask_begin( 'Creating profile picture links...' );\n\t\t\tcreate_profile_picture_links();\n\t\t\ttask_end();\n\t\t}\n\n\t\t// Invalidate all page caches after every upgrade.\n\t\t// A new version of b2evolution may not use the same links to access special pages.\n\t\t// We want to play it safe here so that people don't think that upgrading broke their blog!\n\t\ttask_begin( 'Invalidating all page caches to make sure they don\\'t contain old action links...' );\n\t\tinvalidate_pagecaches();\n\t\ttask_end();\n\n\n\t\t// Reload plugins after every upgrade, to detect even those changes on plugins which didn't require db modifications\n\t\ttask_begin( 'Reloading installed plugins to make sure their config is up to date...' );\n\t\t$Plugins_admin = & get_Plugins_admin();\n\t\t$Plugins_admin->reload_plugins();\n\t\ttask_end();\n\n\n\t\t// This has to be at the end because plugin install may fail if the DB schema is not current (matching Plugins class).\n\t\t// Only new default plugins will be installed, based on $old_db_version.\n\t\t// dh> NOTE: if this fails (e.g. fatal error in one of the plugins), it will not get repeated\n\t\ttask_begin( 'Installing new default plugins (if any)...' );\n\t\tinstall_basic_plugins( $old_db_version );\n\t\ttask_end();\n\n\t\t// Create default cron jobs (this can be done at each upgrade):\n\t\techo get_install_format_text( \"Checking if some default cron jobs need to be installed...<br/>\\n\", 'br' );\n\t\tevo_flush();\n\t\trequire_once dirname(__FILE__).'/_functions_create.php';\n\t\tcreate_default_jobs( true );\n\n\t\t// \"Time running low\" test: Check if the upgrade script elapsed time is close to the max execution time.\n\t\t// Note: This should not really happen except the case when many plugins must be installed.\n\t\ttask_begin( 'Checking timing of upgrade...' );\n\t\t$elapsed_time = time() - $script_start_time;\n\t\t$max_exe_time = ini_get( 'max_execution_time' );\n\t\tif( $max_exe_time && ( $elapsed_time > ( $max_exe_time - 20 ) ) )\n\t\t{ // Max exe time not disabled and we're recahing the end\n\t\t\t// URL to continue the upgrade process from install folder\n\t\t\t$recreate_excerpts = $recreate_autogenerated_excerpts ? '&amp;recreate_excerpts=1' : '';\n\t\t\t$upgrade_continue_url = $baseurl.'install/index.php?locale='.$locale.'&amp;action='.$upgrade_action.'&amp;exec_general_tasks=0'.$recreate_excerpts;\n\t\t\techo get_install_format_text( 'We are reaching the time limit for this script. Please click <a href=\"'.$upgrade_continue_url.'\">continue</a>...' );\n\t\t\t// Dirty temporary solution:\n\t\t\texit(0);\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Checking default locale...' );\n\t\tlocale_check_default();\n\t\ttask_end();\n\t}\n\n\tif( $recreate_autogenerated_excerpts )\n\t{\n\t\tif( ! is_object( $Settings ) )\n\t\t{ // create Settings object\n\t\t\tload_class( 'settings/model/_generalsettings.class.php', 'GeneralSettings' );\n\t\t\t$Settings = new GeneralSettings();\n\t\t}\n\t\tif( ! is_object( $Plugins ) )\n\t\t{ // create Plugins object\n\t\t\tload_class( 'plugins/model/_plugins.class.php', 'Plugins' );\n\t\t\t$Plugins = new Plugins();\n\t\t}\n\n\t\ttask_begin( 'Recreate autogenerated post excerpts...' );\n\t\t$upgrade_continue_url = $baseurl.'install/index.php?locale='.$locale.'&amp;action='.$upgrade_action.'&amp;exec_general_tasks=0&amp;recreate_excerpts=1';\n\t\t$all_excerpt = param( 'all_excerpt', 'integer', 0 );\n\t\trecreate_autogenerated_excerpts( $upgrade_continue_url, $all_excerpt == 0 );\n\t\ttask_end();\n\t}\n\n\n\t// Update the progress bar status\n\tupdate_install_progress_bar();\n\n\t/*\n\t * -----------------------------------------------\n\t * Check to make sure the DB schema is up to date:\n\t * -----------------------------------------------\n\t */\n\techo get_install_format_text( \"Starting to check DB...<br/>\\n\", 'br' );\n\tevo_flush();\n\n\t$upgrade_db_deltas = array(); // This holds changes to make, if any (just all queries)\n\n\tglobal $debug;\n\n\tforeach( $schema_queries as $table => $query_info )\n\t{\t// For each table in the schema, check diffs...\n\t\tif( $debug )\n\t\t{\n\t\t\techo get_install_format_text( '<br />', 'br' );\n\t\t\techo get_install_format_text( 'Checking table: '.$table.': ' );\n\t\t}\n\t\t$updates = db_delta( $query_info[1], array('drop_column', 'drop_index'), false, true );\n\t\tif( empty($updates) )\n\t\t{\n\t\t\tif( $debug ) echo 'ok';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif( $debug ) echo 'NEEDS UPDATE!';\n\t\t\tforeach( $updates as $table => $queries )\n\t\t\t{\n\t\t\t\tforeach( $queries as $qinfo )\n\t\t\t\t{\n\t\t\t\t\tforeach( $qinfo['queries'] as $query )\n\t\t\t\t\t{ // subqueries for this query (usually one, but may include required other queries)\n\t\t\t\t\t\t$upgrade_db_deltas[] = $query;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif( $debug )\n\t{\n\t\techo get_install_format_text( '<br />', 'br' );\n\t}\n\n\tif( empty($upgrade_db_deltas) )\n\t{\t// no upgrades needed:\n\t\techo get_install_format_text( '<p>'.T_('The database schema is up to date.').'</p>', 'p' );\n\t}\n\telse\n\t{\t// Upgrades are needed:\n\n\t\t$confirmed_db_upgrade = param('confirmed', 'integer', 0); // force confirmation\n\t\t$upgrade_db_deltas_confirm_md5 = param( 'upgrade_db_deltas_confirm_md5', 'string', '' );\n\n\t\tif( ! $confirmed_db_upgrade )\n\t\t{\n\t\t\tif( ! empty($upgrade_db_deltas_confirm_md5) )\n\t\t\t{ // received confirmation from form\n\t\t\t\tif( $upgrade_db_deltas_confirm_md5 != md5( implode('', $upgrade_db_deltas) ) )\n\t\t\t\t{ // unlikely to happen\n\t\t\t\t\techo get_install_format_text( '<p class=\"text-danger\"><evo:error>'\n\t\t\t\t\t\t.T_('The DB schema has been changed since confirmation.')\n\t\t\t\t\t\t.'</evo:error></p>', 'p' );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$confirmed_db_upgrade = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( ! $confirmed_db_upgrade )\n\t\t{\n\t\t\tglobal $action, $form_action, $display;\n\t\t\tload_class( '_core/ui/forms/_form.class.php', 'Form' );\n\n\t\t\tif( empty( $display ) || $display != 'cli' )\n\t\t\t{\t// Don't print form on CLI mode:\n\t\t\t\tif( !empty( $form_action ) )\n\t\t\t\t{\n\t\t\t\t\t$Form = new Form( $form_action, '', 'post' );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$Form = new Form( NULL, '', 'post' );\n\t\t\t\t}\n\n\t\t\t\t$Form->begin_form( 'fform', T_('Upgrade database') );\n\n\t\t\t\t$Form->begin_fieldset();\n\t\t\t\t$Form->hidden( 'upgrade_db_deltas_confirm_md5', md5(implode( '', $upgrade_db_deltas )) );\n\t\t\t\t$Form->hidden( 'action', $action );\n\t\t\t\t$Form->hidden( 'locale', $locale );\n\t\t\t}\n\n\n\t\t\techo get_install_format_text( '<p>'.T_('The version number is correct, but we have detected changes in the database schema. This can happen if you\\'ve been using development versions directly off GitHub...').'</p>', 'p' );\n\n\t\t\techo get_install_format_text( '<p>'.T_('The following database changes will be carried out. If you are not sure what this means, it will probably be alright.').'</p>', 'p' );\n\n\t\t\techo get_install_format_text( '<ul>' );\n\t\t\tforeach( $upgrade_db_deltas as $l_delta )\n\t\t\t{\n\t\t\t\t#echo '<li><code>'.nl2br($l_delta).'</code></li>';\n\t\t\t\techo get_install_format_text( '<li><pre>'.str_replace( \"\\t\", '  ', $l_delta ).'</pre></li>', 'li' );\n\t\t\t}\n\t\t\techo get_install_format_text( '</ul>' );\n\n\t\t\tif( empty( $display ) || $display != 'cli' )\n\t\t\t{\t// Don't print form on CLI mode:\n\t\t\t\t$Form->submit( array( '', T_('Try to Repair/Upgrade database now!'), 'btn-warning' ) );\n\t\t\t\t$Form->end_form();\n\t\t\t}\n\n\t\t\treturn 'need-fix';\n\t\t}\n\n\t\t// Alter DB to match DB schema:\n\t\tinstall_make_db_schema_current( true );\n\t}\n\n\t// Force MySQL strict mode\n\t$DB->query( 'SET sql_mode = \"TRADITIONAL\"', 'Force MySQL \"strict\" mode (and make sure server is not configured with a weird incompatible mode)' );\n\n\ttrack_step( 'upgrade-success' );\n\n\treturn true;\n}\n\n?>"], "fixing_code": ["<?php\n/**\n * This is b2evolution's application config file.\n *\n * @package conf\n */\nif( !defined('EVO_CONFIG_LOADED') ) die( 'Please, do not access this page directly.' );\n\n\n$app_name = 'b2evolution';\n$app_shortname = 'b2evo';\n\n/**\n * The version of the application.\n * Note: This has to be compatible with {@link http://us2.php.net/en/version-compare}.\n * @global string\n */\n$app_version = '6.7.10-stable';\n\n/**\n * Release date (ISO)\n * @global string\n */\n$app_date = '2017-01-11';\n\n/**\n * Long version string for checking differences\n */\n$app_version_long = $app_version.'-'.$app_date;\n\n/**\n * This is used to check if the database is up to date.\n *\n * This will be incrememented by 5 with each change in {@link upgrade_b2evo_tables()}\n * in order to leave space for maintenance releases.\n *\n * {@internal Before changing this in CVS, it should be discussed! }}\n */\n$new_db_version = 11815;\n\n/**\n * Minimum PHP version required for b2evolution to function properly. It will contain each module own minimum PHP version as well.\n * @global array\n */\n$required_php_version = array( 'application' => '5.2' );\n\n/**\n * Minimum MYSQL version required for b2evolution to function properly. It will contain each module own minimum MYSQL version as well.\n * @global array\n */\n$required_mysql_version = array( 'application' => '5.0.3' );\n\n/**\n * Is displayed on the login screen:\n */\n$app_footer_text = '<a href=\"http://b2evolution.net/\" title=\"visit b2evolution\\'s website\"><strong>b2evolution '.$app_version.'</strong></a>\n\t\t&ndash;\n\t\t<a href=\"http://b2evolution.net/about/gnu-gpl-license\" class=\"nobr\">GPL License</a>';\n\n$copyright_text = '<span class=\"nobr\">&copy;2003-2016 by <a href=\"http://fplanque.net/\">Fran&ccedil;ois</a> <a href=\"http://fplanque.com/\">Planque</a> &amp; <a href=\"http://b2evolution.net/about/about-us\">others</a>.</span>';\n\n/**\n * Do you want to display the help links to online documentation?\n *\n * @global boolean\n */\n$online_help_links = true;\n\n/**\n * Modules to load\n *\n * This is most useful when extending evoCore with features beyond what b2evolution does and when those features do not\n * fit nicely into a plugin, mostly when they are too large or too complex.\n *\n * Note: a long term goal is to be able to disable some b2evolution feature sets that would not be needed. This should\n * however only be used for large enough feature sets to make it worth the trouble. NO MICROMANAGING here.\n * Try commenting out the 'collections' module to revert to pretty much just evocore.\n */\n$modules = array(\n\t\t'_core',\n\t\t'collections',  // TODO: installer won't work without this module\n\t\t'polls',\n\t\t'files',\n\t\t'sessions',\n\t\t'messaging',\n\t\t'maintenance',\n\t);\n?>\n", "<?php\n/**\n * This file implements creation of DB tables\n *\n * b2evolution - {@link http://b2evolution.net/}\n * Released under GNU GPL License - {@link http://b2evolution.net/about/gnu-gpl-license}\n * @copyright (c)2003-2016 by Francois Planque - {@link http://fplanque.com/}\n * Parts of this file are copyright (c)2004 by Vegar BERG GULDAL - {@link http://funky-m.com/}\n * Parts of this file are copyright (c)2005 by Jason EDGECOMBE\n *\n * @package install\n */\nif( !defined('EVO_MAIN_INIT') ) die( 'Please, do not access this page directly.' );\n\nload_class( 'users/model/_group.class.php', 'Group' );\nload_funcs( 'collections/model/_category.funcs.php' );\nload_class( 'users/model/_organization.class.php', 'Organization' );\n\n/**\n * Used for fresh install\n */\nfunction create_tables()\n{\n\tglobal $inc_path;\n\n\t// Load DB schema from modules\n\tload_db_schema();\n\n\t// Update the progress bar status\n\tupdate_install_progress_bar();\n\n\tload_funcs('_core/model/db/_upgrade.funcs.php');\n\n\t// Alter DB to match DB schema:\n\tinstall_make_db_schema_current( true );\n}\n\n\n/**\n * Insert all default data:\n */\nfunction create_default_data()\n{\n\tglobal $admins_Group, $moderators_Group, $editors_Group, $users_Group, $suspect_Group, $spam_Group, $blogb_Group;\n\tglobal $DB, $locales, $current_locale, $baseurl;\n\t// This will install all sorts of additional things... for testing purposes:\n\tglobal $install_test_features, $create_sample_contents;\n\n\t// Inserting sample data triggers events: instead of checking if $Plugins is an object there, just use a fake one..\n\tload_class('plugins/model/_plugins_admin_no_db.class.php', 'Plugins_admin_no_DB' );\n\tglobal $Plugins;\n\t$Plugins = new Plugins_admin_no_DB(); // COPY\n\n\t// added in 0.8.7\n\ttask_begin( 'Creating default blacklist entries... ' );\n\t// This string contains antispam information that is obfuscated because some hosting\n\t// companies prevent uploading PHP files containing \"spam\" strings.\n\t// pre_dump(get_antispam_query());\n\t$query = get_antispam_query();\n\t$DB->query( $query );\n\ttask_end();\n\n\ttask_begin( 'Creating default antispam IP ranges... ' );\n\t$DB->query( '\n\t\tINSERT INTO T_antispam__iprange ( aipr_IPv4start, aipr_IPv4end, aipr_status )\n\t\tVALUES ( '.$DB->quote( ip2int( '127.0.0.0' ) ).', '.$DB->quote( ip2int( '127.0.0.255' ) ).', \"trusted\" ),\n\t\t\t( '.$DB->quote( ip2int( '10.0.0.0' ) ).', '.$DB->quote( ip2int( '10.255.255.255' ) ).', \"trusted\" ),\n\t\t\t( '.$DB->quote( ip2int( '172.16.0.0' ) ).', '.$DB->quote( ip2int( '172.31.255.255' ) ).', \"trusted\" ),\n\t\t\t( '.$DB->quote( ip2int( '192.168.0.0' ) ).', '.$DB->quote( ip2int( '192.168.255.255' ) ).', \"trusted\" )\n\t\t' );\n\ttask_end();\n\n\t// added in 0.8.9\n\ttask_begin( 'Creating default groups... ' );\n\t$admins_Group = new Group(); // COPY !\n\t$admins_Group->set( 'name', 'Administrators' );\n\t$admins_Group->set( 'level', 10 );\n\t$admins_Group->set( 'perm_blogs', 'editall' );\n\t$admins_Group->set( 'perm_stats', 'edit' );\n\t$admins_Group->set( 'perm_xhtml_css_tweaks', 1 );\n\t$admins_Group->dbinsert();\n\n\t$moderators_Group = new Group(); // COPY !\n\t$moderators_Group->set( 'name', 'Moderators' );\n\t$moderators_Group->set( 'level', 8 );\n\t$moderators_Group->set( 'perm_blogs', 'viewall' );\n\t$moderators_Group->set( 'perm_stats', 'user' );\n\t$moderators_Group->set( 'perm_xhtml_css_tweaks', 1 );\n\t$moderators_Group->dbinsert();\n\n\t$editors_Group = new Group(); // COPY !\n\t$editors_Group->set( 'name', 'Editors' );\n\t$editors_Group->set( 'level', 6 );\n\t$editors_Group->set( 'perm_blogs', 'user' );\n\t$editors_Group->set( 'perm_stats', 'none' );\n\t$editors_Group->set( 'perm_xhtml_css_tweaks', 1 );\n\t$editors_Group->dbinsert();\n\n\t$users_Group = new Group(); // COPY !\n\t$users_Group->set( 'name', 'Normal Users' );\n\t$users_Group->set( 'level', 4 );\n\t$users_Group->set( 'perm_blogs', 'user' );\n\t$users_Group->set( 'perm_stats', 'none' );\n\t$users_Group->dbinsert();\n\n\t$suspect_Group = new Group(); // COPY !\n\t$suspect_Group->set( 'name', 'Misbehaving/Suspect Users' );\n\t$suspect_Group->set( 'level', 2 );\n\t$suspect_Group->set( 'perm_blogs', 'user' );\n\t$suspect_Group->set( 'perm_stats', 'none' );\n\t$suspect_Group->dbinsert();\n\n\t$spam_Group = new Group(); // COPY !\n\t$spam_Group->set( 'name', 'Spammers/Restricted Users' );\n\t$spam_Group->set( 'level', 1 );\n\t$spam_Group->set( 'perm_blogs', 'user' );\n\t$spam_Group->set( 'perm_stats', 'none' );\n\t$spam_Group->dbinsert();\n\n\t$blogb_Group = new Group(); // COPY !\n\t$blogb_Group->set( 'name', 'Blog B Members' );\n\t$blogb_Group->set( 'usage', 'secondary' );\n\t$blogb_Group->set( 'level', 1 );\n\t$blogb_Group->set( 'perm_blogs', 'user' );\n\t$blogb_Group->set( 'perm_stats', 'none' );\n\t$blogb_Group->dbinsert();\n\ttask_end();\n\n\ttask_begin( 'Creating groups for user field definitions... ' );\n\t$DB->query( \"\n\t\tINSERT INTO T_users__fieldgroups ( ufgp_name, ufgp_order )\n\t\tVALUES ( 'About me', '1' ),\n\t\t\t\t\t ( 'Instant Messaging', '2' ),\n\t\t\t\t\t ( 'Phone', '3' ),\n\t\t\t\t\t ( 'Web', '4' ),\n\t\t\t\t\t ( 'Address', '5' )\" );\n\ttask_end();\n\n\ttask_begin( 'Creating user field definitions... ' );\n\t// fp> Anyone, please add anything you can think of. It's better to start with a large list that update it progressively.\n\t$DB->query( \"\n\t\tINSERT INTO T_users__fielddefs (ufdf_ufgp_ID, ufdf_type, ufdf_name, ufdf_options, ufdf_required, ufdf_duplicated, ufdf_order, ufdf_suggest, ufdf_code, ufdf_icon_name)\n\t\t VALUES ( 1, 'text',   'Micro bio',     NULL, 'recommended', 'forbidden', '1',  '0', 'microbio',     'fa fa-info-circle' ),\n\t\t\t\t\t\t( 1, 'word',   'I like',        NULL, 'recommended', 'list',      '2',  '1', 'ilike',        'fa fa-thumbs-o-up' ),\n\t\t\t\t\t\t( 1, 'word',   'I don\\'t like', NULL, 'recommended', 'list',      '3',  '1', 'idontlike',    'fa fa-thumbs-o-down' ),\n\t\t\t\t\t\t( 2, 'email',  'MSN/Live IM',   NULL, 'optional',    'allowed',   '1',  '0', 'msnliveim',    NULL ),\n\t\t\t\t\t\t( 2, 'word',   'Yahoo IM',      NULL, 'optional',    'allowed',   '2',  '0', 'yahooim',      'fa fa-yahoo' ),\n\t\t\t\t\t\t( 2, 'word',   'AOL AIM',       NULL, 'optional',    'allowed',   '3',  '0', 'aolaim',       NULL ),\n\t\t\t\t\t\t( 2, 'number', 'ICQ ID',        NULL, 'optional',    'allowed',   '4',  '0', 'icqid',        NULL ),\n\t\t\t\t\t\t( 2, 'phone',  'Skype',         NULL, 'optional',    'allowed',   '5',  '0', 'skype',        'fa fa-skype' ),\n\t\t\t\t\t\t( 3, 'phone',  'Main phone',    NULL, 'optional',    'forbidden', '1',  '0', 'mainphone',    'fa fa-phone' ),\n\t\t\t\t\t\t( 3, 'phone',  'Cell phone',    NULL, 'optional',    'allowed',   '2',  '0', 'cellphone',    'fa fa-mobile-phone' ),\n\t\t\t\t\t\t( 3, 'phone',  'Office phone',  NULL, 'optional',    'allowed',   '3',  '0', 'officephone',  'fa fa-phone' ),\n\t\t\t\t\t\t( 3, 'phone',  'Home phone',    NULL, 'optional',    'allowed',   '4',  '0', 'homephone',    'fa fa-phone' ),\n\t\t\t\t\t\t( 3, 'phone',  'Office FAX',    NULL, 'optional',    'allowed',   '5',  '0', 'officefax',    'fa fa-fax' ),\n\t\t\t\t\t\t( 3, 'phone',  'Home FAX',      NULL, 'optional',    'allowed',   '6',  '0', 'homefax',      'fa fa-fax' ),\n\t\t\t\t\t\t( 4, 'url',    'Twitter',       NULL, 'recommended', 'forbidden', '1',  '0', 'twitter',      'fa fa-twitter' ),\n\t\t\t\t\t\t( 4, 'url',    'Facebook',      NULL, 'recommended', 'forbidden', '2',  '0', 'facebook',     'fa fa-facebook' ),\n\t\t\t\t\t\t( 4, 'url',    'Google Plus',   NULL, 'optional',    'forbidden', '3',  '0', 'googleplus',   'fa fa-google-plus fa-x-google-plus--nudge' ),\n\t\t\t\t\t\t( 4, 'url',    'Linkedin',      NULL, 'optional',    'forbidden', '4',  '0', 'linkedin',     'fa fa-linkedin fa-x-linkedin--nudge' ),\n\t\t\t\t\t\t( 4, 'url',    'GitHub',        NULL, 'optional',    'forbidden', '5',  '0', 'github',       'fa fa-github-alt' ),\n\t\t\t\t\t\t( 4, 'url',    'Website',       NULL, 'recommended', 'allowed',   '6',  '0', 'website',      NULL ),\n\t\t\t\t\t\t( 4, 'url',    'Blog',          NULL, 'optional',    'allowed',   '7',  '0', 'blog',         NULL ),\n\t\t\t\t\t\t( 4, 'url',    'Myspace',       NULL, 'optional',    'forbidden', '8',  '0', 'myspace',      NULL ),\n\t\t\t\t\t\t( 4, 'url',    'Flickr',        NULL, 'optional',    'forbidden', '9',  '0', 'flickr',       'fa fa-flickr' ),\n\t\t\t\t\t\t( 4, 'url',    'YouTube',       NULL, 'optional',    'forbidden', '10', '0', 'youtube',      'fa fa-youtube' ),\n\t\t\t\t\t\t( 4, 'url',    'Digg',          NULL, 'optional',    'forbidden', '11', '0', 'digg',         'fa fa-digg' ),\n\t\t\t\t\t\t( 4, 'url',    'StumbleUpon',   NULL, 'optional',    'forbidden', '12', '0', 'stumbleupon',  'fa fa-stumbleupon' ),\n\t\t\t\t\t\t( 4, 'url',    'Pinterest',     NULL, 'optional',    'forbidden', '13', '0', 'pinterest',    'fa fa-pinterest-p' ),\n\t\t\t\t\t\t( 5, 'text',   'Main address',  NULL, 'optional',    'forbidden', '1',  '0', 'mainaddress',  'fa fa-building' ),\n\t\t\t\t\t\t( 5, 'text',   'Home address',  NULL, 'optional',    'forbidden', '2',  '0', 'homeaddress',  'fa fa-home' )\" );\n\ttask_end();\n\n\n\t// don't change order of the following two functions as countries has relations to currencies\n\tcreate_default_currencies();\n\tcreate_default_countries();\n\n\tcreate_default_regions();\n\tcreate_default_subregions();\n\n\n\ttask_begin( 'Creating admin user... ' );\n\tglobal $timestamp, $admin_email, $default_locale, $default_country, $install_login, $install_password;\n\tglobal $random_password;\n\n\t// Create organization\n\tglobal $user_org_IDs;\n\t$user_org_IDs = NULL;\n\n\t// A default organization will be created so that there will be something to\n\t// display in the homepage's organization members widget\n\t$Organization = new Organization();\n\t$Organization->set( 'owner_user_ID', '1' );\n\t$Organization->set( 'name', 'Company XYZ' );\n\t$Organization->set( 'url', 'http://b2evolution.net/' );\n\tif( $Organization->dbinsert() )\n\t{ // Use this organization for new created users\n\t\t$user_org_IDs = array( $Organization->ID );\n\t}\n\n\t// Set default country from locale code\n\t$country_code = explode( '-', $default_locale );\n\tif( isset( $country_code[1] ) )\n\t{\n\t\t$default_country = $DB->get_var( '\n\t\t\tSELECT ctry_ID\n\t\t\t  FROM T_regional__country\n\t\t\t WHERE ctry_code = '.$DB->quote( strtolower( $country_code[1] ) ) );\n\t}\n\n\tif( !isset( $install_password ) )\n\t{\n\t\t$random_password = generate_random_passwd(); // no ambiguous chars\n\t}\n\telse\n\t{\n\t\t$random_password = $install_password;\n\t}\n\n\tcreate_user( array(\n\t\t\t'login'     => isset( $install_login ) ? $install_login : 'admin',\n\t\t\t'firstname' => 'Johnny',\n\t\t\t'lastname'  => 'Admin',\n\t\t\t'level'     => 10,\n\t\t\t'gender'    => 'M',\n\t\t\t'Group'     => $admins_Group,\n\t\t\t'org_IDs'   => $user_org_IDs,\n\t\t\t'fields'    => array(\n\t\t\t\t\t'Micro bio'   => 'I am the demo administrator of this site.'.\"\\n\".'I love having so much power!',\n\t\t\t\t\t'Website'     => 'http://b2evolution.net/',\n\t\t\t\t\t'Twitter'     => 'https://twitter.com/b2evolution/',\n\t\t\t\t\t'Facebook'    => 'https://www.facebook.com/b2evolution',\n\t\t\t\t\t'Linkedin'    => 'https://www.linkedin.com/company/b2evolution-net',\n\t\t\t\t\t'GitHub'      => 'https://github.com/b2evolution/b2evolution',\n\t\t\t\t\t'Google Plus' => 'https://plus.google.com/+b2evolution/posts',\n\t\t\t\t)\n\t\t) );\n\ttask_end();\n\n\t// Activating multiple sessions and email message form for administrator, and set other user settings\n\ttask_begin( 'Set settings for administrator user... ' );\n\t$DB->query( \"\n\t\tINSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\tVALUES ( 1, 'login_multiple_sessions', '1' ),\n\t\t\t\t( 1, 'enable_email', '1' ),\n\t\t\t\t( 1, 'created_fromIPv4', '\".ip2int( '127.0.0.1' ).\"' ),\n\t\t\t\t( 1, 'user_domain', 'localhost' )\" );\n\ttask_end();\n\n\n\t// added in Phoenix-Alpha\n\ttask_begin( 'Creating default Post Types... ' );\n\t$post_types = array();\n\t$post_types[] = array(\n\t\t\t'name'           => 'Post',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Podcast Episode',\n\t\t\t'podcast'        => 1,\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Post with Custom Fields',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Child Post',\n\t\t\t'use_parent'     => 'required',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Manual Page',\n\t\t\t'allow_html'     => 0,\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Forum Topic',\n\t\t\t'allow_html'     => 0,\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Photo Album',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Standalone Page',\n\t\t\t'usage'          => 'page',\n\t\t\t'template_name'  => 'page',\n\t\t\t'perm_level'     => 'restricted',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Intro-Front',\n\t\t\t'usage'          => 'intro-front',\n\t\t\t'template_name'  => NULL,\n\t\t\t'allow_breaks'   => 0,\n\t\t\t'allow_featured' => 0,\n\t\t\t'perm_level'     => 'restricted',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Intro-Main',\n\t\t\t'usage'          => 'intro-main',\n\t\t\t'template_name'  => NULL,\n\t\t\t'allow_breaks'   => 0,\n\t\t\t'allow_featured' => 0,\n\t\t\t'perm_level'     => 'restricted',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Intro-Cat',\n\t\t\t'usage'          => 'intro-cat',\n\t\t\t'template_name'  => NULL,\n\t\t\t'allow_breaks'   => 0,\n\t\t\t'allow_featured' => 0,\n\t\t\t'perm_level'     => 'restricted',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Intro-Tag',\n\t\t\t'usage'          => 'intro-tag',\n\t\t\t'template_name'  => NULL,\n\t\t\t'allow_breaks'   => 0,\n\t\t\t'allow_featured' => 0,\n\t\t\t'perm_level'     => 'restricted',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Intro-Sub',\n\t\t\t'usage'          => 'intro-sub',\n\t\t\t'template_name'  => NULL,\n\t\t\t'allow_breaks'   => 0,\n\t\t\t'allow_featured' => 0,\n\t\t\t'perm_level'     => 'restricted',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Intro-All',\n\t\t\t'usage'          => 'intro-all',\n\t\t\t'template_name'  => NULL,\n\t\t\t'allow_breaks'   => 0,\n\t\t\t'allow_featured' => 0,\n\t\t\t'perm_level'     => 'restricted',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Sidebar link',\n\t\t\t'usage'          => 'special',\n\t\t\t'template_name'  => NULL,\n\t\t\t'perm_level'     => 'admin',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'           => 'Advertisement',\n\t\t\t'usage'          => 'special',\n\t\t\t'template_name'  => NULL,\n\t\t\t'perm_level'     => 'admin',\n\t\t);\n\t$post_types[] = array(\n\t\t\t'name'                   => 'Terms & Conditions',\n\t\t\t'usage'                  => 'special',\n\t\t\t'template_name'          => NULL,\n\t\t\t'allow_breaks'           => 0,\n\t\t\t'allow_featured'         => 0,\n\t\t\t'perm_level'             => 'admin',\n\t\t\t'description'            => 'Use this post type for terms & conditions of the site.',\n\t\t\t'use_text'               => 'required',\n\t\t\t'use_tags'               => 'never',\n\t\t\t'use_excerpt'            => 'never',\n\t\t\t'use_url'                => 'never',\n\t\t\t'use_parent'             => 'never',\n\t\t\t'use_title_tag'          => 'never',\n\t\t\t'use_meta_desc'          => 'never',\n\t\t\t'use_meta_keywds'        => 'never',\n\t\t\t'use_comments'           => 0,\n\t\t\t'allow_closing_comments' => 0,\n\t\t\t'use_comment_expiration' => 'never',\n\t\t\t'use_custom_fields'      => 0,\n\t\t);\n\t// Default settings:\n\t$post_type_default_settings = array(\n\t\t\t'name'                   => '',\n\t\t\t'description'            => NULL,\n\t\t\t'usage'                  => 'post',\n\t\t\t'template_name'          => 'single',\n\t\t\t'perm_level'             => 'standard',\n\t\t\t'allow_html'             => 1,\n\t\t\t'allow_breaks'           => 1,\n\t\t\t'allow_featured'         => 1,\n\t\t\t'use_text'               => 'optional',\n\t\t\t'use_tags'               => 'optional',\n\t\t\t'use_excerpt'            => 'optional',\n\t\t\t'use_url'                => 'optional',\n\t\t\t'podcast'                => 0,\n\t\t\t'use_parent'             => 'never',\n\t\t\t'use_title_tag'          => 'optional',\n\t\t\t'use_meta_desc'          => 'optional',\n\t\t\t'use_meta_keywds'        => 'optional',\n\t\t\t'use_comments'           => 1,\n\t\t\t'allow_closing_comments' => 1,\n\t\t\t'use_comment_expiration' => 'optional',\n\t\t\t'use_custom_fields'      => 1,\n\t\t);\n\t$post_types_sql = 'INSERT INTO T_items__type ( ityp_'.implode( ', ityp_', array_keys( $post_type_default_settings ) ).' ) VALUES ';\n\tforeach( $post_types as $p => $post_type )\n\t{\n\t\t$post_type = array_merge( $post_type_default_settings, $post_type );\n\t\t$post_types_sql .= '( '.$DB->quote( $post_type ).' )';\n\t\tif( $p != count( $post_types ) - 1 )\n\t\t{\n\t\t\t$post_types_sql .= ',';\n\t\t}\n\t}\n\t// Insert item types:\n\t$DB->query( $post_types_sql );\n\n\t$DB->query( 'INSERT INTO T_items__type_custom_field ( itcf_ityp_ID, itcf_label, itcf_name, itcf_type )\n\t\t\tVALUES ( 3, \"First numeric field\", \"first_numeric_field\", \"double\" ),\n\t\t\t\t\t\t ( 3, \"Second numeric field\", \"second_numeric_field\", \"double\" ),\n\t\t\t\t\t\t ( 3, \"First text field\", \"first_text_field\", \"varchar\" ),\n\t\t\t\t\t\t ( 3, \"Define you own labels\", \"define_you_own_labels\", \"varchar\" )' );\n\ttask_end();\n\n\n\ttask_begin( 'Creating default Post Statuses... ' );\n\t$DB->query( \"\n\t\tINSERT INTO T_items__status ( pst_name )\n\t\tVALUES ( 'New' ),\n\t\t\t\t\t ( 'In Progress' ),\n\t\t\t\t\t ( 'Duplicate' ),\n\t\t\t\t\t ( 'Not A Bug' ),\n\t\t\t\t\t ( 'In Review' ),\n\t\t\t\t\t ( 'Fixed' ),\n\t\t\t\t\t ( 'Closed' )\" );\n\ttask_end();\n\n\n\t// added in Phoenix-Beta\n\ttask_begin( 'Creating default file types... ' );\n\t// Contribs: feel free to add more types here...\n\t// TODO: dh> shouldn't they get localized to the app's default locale? fp> ftyp_name, yes\n\t$DB->query( \"INSERT INTO T_filetypes\n\t\t\t(ftyp_ID, ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed)\n\t\tVALUES\n\t\t\t(1, 'gif', 'GIF image', 'image/gif', 'file_image', 'image', 'any'),\n\t\t\t(2, 'png', 'PNG image', 'image/png', 'file_image', 'image', 'any'),\n\t\t\t(3, 'jpg jpeg', 'JPEG image', 'image/jpeg', 'file_image', 'image', 'any'),\n\t\t\t(4, 'txt', 'Text file', 'text/plain', 'file_document', 'text', 'registered'),\n\t\t\t(5, 'htm html', 'HTML file', 'text/html', 'file_www', 'browser', 'admin'),\n\t\t\t(6, 'pdf', 'PDF file', 'application/pdf', 'file_pdf', 'browser', 'registered'),\n\t\t\t(7, 'doc docx', 'Microsoft Word file', 'application/msword', 'file_doc', 'external', 'registered'),\n\t\t\t(8, 'xls xlsx', 'Microsoft Excel file', 'application/vnd.ms-excel', 'file_xls', 'external', 'registered'),\n\t\t\t(9, 'ppt pptx', 'Powerpoint', 'application/vnd.ms-powerpoint', 'file_ppt', 'external', 'registered'),\n\t\t\t(10, 'pps', 'Slideshow', 'pps', 'file_pps', 'external', 'registered'),\n\t\t\t(11, 'zip', 'ZIP archive', 'application/zip', 'file_zip', 'external', 'registered'),\n\t\t\t(12, 'php php3 php4 php5 php6', 'PHP script', 'application/x-httpd-php', 'file_php', 'text', 'admin'),\n\t\t\t(13, 'css', 'Style sheet', 'text/css', 'file_document', 'text', 'registered'),\n\t\t\t(14, 'mp3', 'MPEG audio file', 'audio/mpeg', 'file_sound', 'browser', 'registered'),\n\t\t\t(15, 'm4a', 'MPEG audio file', 'audio/x-m4a', 'file_sound', 'browser', 'registered'),\n\t\t\t(16, 'mp4 f4v', 'MPEG video', 'video/mp4', 'file_video', 'browser', 'registered'),\n\t\t\t(17, 'mov', 'Quicktime video', 'video/quicktime', 'file_video', 'browser', 'registered'),\n\t\t\t(18, 'm4v', 'MPEG video file', 'video/x-m4v', 'file_video', 'browser', 'registered'),\n\t\t\t(19, 'flv', 'Flash video file', 'video/x-flv', 'file_video', 'browser', 'registered'),\n\t\t\t(20, 'swf', 'Flash video file', 'application/x-shockwave-flash', 'file_video', 'browser', 'admin'),\n\t\t\t(21, 'webm', 'WebM video file', 'video/webm', 'file_video', 'browser', 'registered'),\n\t\t\t(22, 'ogv', 'Ogg video file', 'video/ogg', 'file_video', 'browser', 'registered'),\n\t\t\t(23, 'm3u8', 'M3U8 video file', 'application/x-mpegurl', 'file_video', 'browser', 'registered'),\n\t\t\t(24, 'xml', 'XML file', 'application/xml', 'file_www', 'browser', 'admin')\n\t\t\" );\n\ttask_end();\n\n\t// Insert default locales into T_locales.\n\tcreate_default_locales();\n\n\t// Insert default settings into T_settings.\n\tcreate_default_settings();\n\n\t// Create default scheduled jobs\n\tcreate_default_jobs();\n\n\ttask_begin( 'Creating default \"help\" slug... ' );\n\t$DB->query( '\n\t\tINSERT INTO T_slug( slug_title, slug_type )\n\t\tVALUES( \"help\", \"help\" )', 'Add \"help\" slug' );\n\ttask_end();\n\n\t// Create the 'Default' goal category which must always exists and which is not deletable\n\t// The 'Default' category ID will be always 1 because it will be always the first entry in the T_track__goalcat table\n\ttask_begin( 'Creating default goal category... ' );\n\t$DB->query( 'INSERT INTO T_track__goalcat ( gcat_name, gcat_color )\n\t\tVALUES ( '.$DB->quote( 'Default' ).', '.$DB->quote( '#999999' ).' )' );\n\ttask_end();\n\n\n\ttask_begin( 'Creating default polls... ' );\n\t$DB->query( 'INSERT INTO T_polls__question ( pqst_owner_user_ID, pqst_question_text )\n\t\tVALUES ( 1, \"What is your favorite b2evolution feature?\" )' );\n\t$DB->query( 'INSERT INTO T_polls__option ( popt_pqst_ID, popt_option_text, popt_order )\n\t\tVALUES ( 1, \"Multiple blogs\",          1 ),\n\t\t       ( 1, \"Photo Galleries\",         2 ),\n\t\t       ( 1, \"Forums\",                  3 ),\n\t\t       ( 1, \"Online Manuals\",          4 ),\n\t\t       ( 1, \"Newsletters / E-mailing\", 5 ),\n\t\t       ( 1, \"Easy Maintenance\",        6 )' );\n\t$DB->query( 'INSERT INTO T_polls__answer ( pans_pqst_ID, pans_user_ID, pans_popt_ID )\n\t\tVALUES ( 1, 5, 1 ),\n\t\t       ( 1, 6, 2 ),\n\t\t       ( 1, 7, 2 ),\n\t\t       ( 1, 2, 2 ),\n\t\t       ( 1, 3, 3 ),\n\t\t       ( 1, 4, 3 ),\n\t\t       ( 1, 1, 6 )' );\n\ttask_end();\n\n\t// Update the progress bar status\n\tupdate_install_progress_bar();\n\n\tinstall_basic_skins();\n\n\tinstall_basic_plugins();\n\n\treturn true;\n}\n\n/**\n * Create default currencies\n *\n */\nfunction create_default_currencies( $table_name = 'T_regional__currency' )\n{\n\tglobal $DB;\n\n\ttask_begin( 'Creating default currencies... ' );\n\t$DB->query( \"\n\t\tINSERT INTO $table_name (curr_ID, curr_code, curr_shortcut, curr_name)\n\t\t VALUES\n\t\t\t(1, 'AFN', '&#x60b;', 'Afghani'),\n\t\t\t(2, 'EUR', '&euro;', 'Euro'),\n\t\t\t(3, 'ALL', 'Lek', 'Lek'),\n\t\t\t(4, 'DZD', 'DZD', 'Algerian Dinar'),\n\t\t\t(5, 'USD', '$', 'US Dollar'),\n\t\t\t(6, 'AOA', 'AOA', 'Kwanza'),\n\t\t\t(7, 'XCD', '$', 'East Caribbean Dollar'),\n\t\t\t(8, 'ARS', '$', 'Argentine Peso'),\n\t\t\t(9, 'AMD', 'AMD', 'Armenian Dram'),\n\t\t\t(10, 'AWG', '&fnof;', 'Aruban Guilder'),\n\t\t\t(11, 'AUD', '$', 'Australian Dollar'),\n\t\t\t(12, 'AZN', '&#x43c;&#x430;&#x43d;', 'Azerbaijanian Manat'),\n\t\t\t(13, 'BSD', '$', 'Bahamian Dollar'),\n\t\t\t(14, 'BHD', 'BHD', 'Bahraini Dinar'),\n\t\t\t(15, 'BDT', 'BDT', 'Taka'),\n\t\t\t(16, 'BBD', '$', 'Barbados Dollar'),\n\t\t\t(17, 'BYR', 'p.', 'Belarussian Ruble'),\n\t\t\t(18, 'BZD', 'BZ$', 'Belize Dollar'),\n\t\t\t(19, 'XOF', 'XOF', 'CFA Franc BCEAO'),\n\t\t\t(20, 'BMD', '$', 'Bermudian Dollar'),\n\t\t\t(21, 'BAM', 'KM', 'Convertible Marks'),\n\t\t\t(22, 'BWP', 'P', 'Pula'),\n\t\t\t(23, 'NOK', 'kr', 'Norwegian Krone'),\n\t\t\t(24, 'BRL', 'R$', 'Brazilian Real'),\n\t\t\t(25, 'BND', '$', 'Brunei Dollar'),\n\t\t\t(26, 'BGN', '&#x43b;&#x432;', 'Bulgarian Lev'),\n\t\t\t(27, 'BIF', 'BIF', 'Burundi Franc'),\n\t\t\t(28, 'KHR', '&#x17db;', 'Riel'),\n\t\t\t(29, 'XAF', 'XAF', 'CFA Franc BEAC'),\n\t\t\t(30, 'CAD', '$', 'Canadian Dollar'),\n\t\t\t(31, 'CVE', 'CVE', 'Cape Verde Escudo'),\n\t\t\t(32, 'KYD', '$', 'Cayman Islands Dollar'),\n\t\t\t(33, 'CNY', '&yen;', 'Yuan Renminbi'),\n\t\t\t(34, 'KMF', 'KMF', 'Comoro Franc'),\n\t\t\t(35, 'CDF', 'CDF', 'Congolese Franc'),\n\t\t\t(36, 'NZD', '$', 'New Zealand Dollar'),\n\t\t\t(37, 'CRC', '&#x20a1;', 'Costa Rican Colon'),\n\t\t\t(38, 'HRK', 'kn', 'Croatian Kuna'),\n\t\t\t(39, 'CZK', 'K&#x10d;', 'Czech Koruna'),\n\t\t\t(40, 'DKK', 'kr', 'Danish Krone'),\n\t\t\t(41, 'DJF', 'DJF', 'Djibouti Franc'),\n\t\t\t(42, 'DOP', 'RD$', 'Dominican Peso'),\n\t\t\t(43, 'EGP', '&pound;', 'Egyptian Pound'),\n\t\t\t(44, 'ERN', 'ERN', 'Nakfa'),\n\t\t\t(45, 'EEK', 'EEK', 'Kroon'),\n\t\t\t(46, 'ETB', 'ETB', 'Ethiopian Birr'),\n\t\t\t(47, 'FKP', '&pound;', 'Falkland Islands Pound'),\n\t\t\t(48, 'FJD', '$', 'Fiji Dollar'),\n\t\t\t(49, 'XPF', 'XPF', 'CFP Franc'),\n\t\t\t(50, 'GMD', 'GMD', 'Dalasi'),\n\t\t\t(51, 'GEL', 'GEL', 'Lari'),\n\t\t\t(52, 'GHS', 'GHS', 'Cedi'),\n\t\t\t(53, 'GIP', '&pound;', 'Gibraltar Pound'),\n\t\t\t(54, 'GTQ', 'Q', 'Quetzal'),\n\t\t\t(55, 'GBP', '&pound;', 'Pound Sterling'),\n\t\t\t(56, 'GNF', 'GNF', 'Guinea Franc'),\n\t\t\t(57, 'GYD', '$', 'Guyana Dollar'),\n\t\t\t(58, 'HNL', 'L', 'Lempira'),\n\t\t\t(59, 'HKD', '$', 'Hong Kong Dollar'),\n\t\t\t(60, 'HUF', 'Ft', 'Forint'),\n\t\t\t(61, 'ISK', 'kr', 'Iceland Krona'),\n\t\t\t(62, 'INR', 'Rs', 'Indian Rupee'),\n\t\t\t(63, 'IDR', 'Rp', 'Rupiah'),\n\t\t\t(64, 'IRR', '&#xfdfc;', 'Iranian Rial'),\n\t\t\t(65, 'IQD', 'IQD', 'Iraqi Dinar'),\n\t\t\t(66, 'ILS', '&#x20aa;', 'New Israeli Sheqel'),\n\t\t\t(67, 'JMD', 'J$', 'Jamaican Dollar'),\n\t\t\t(68, 'JPY', '&yen;', 'Yen'),\n\t\t\t(69, 'JOD', 'JOD', 'Jordanian Dinar'),\n\t\t\t(70, 'KZT', '&#x43b;&#x432;', 'Tenge'),\n\t\t\t(71, 'KES', 'KES', 'Kenyan Shilling'),\n\t\t\t(72, 'KPW', '&#x20a9;', 'North Korean Won'),\n\t\t\t(73, 'KRW', '&#x20a9;', 'Won'),\n\t\t\t(74, 'KWD', 'KWD', 'Kuwaiti Dinar'),\n\t\t\t(75, 'KGS', '&#x43b;&#x432;', 'Som'),\n\t\t\t(76, 'LAK', '&#x20ad;', 'Kip'),\n\t\t\t(77, 'LVL', 'Ls', 'Latvian Lats'),\n\t\t\t(78, 'LBP', '&pound;', 'Lebanese Pound'),\n\t\t\t(79, 'LRD', '$', 'Liberian Dollar'),\n\t\t\t(80, 'LYD', 'LYD', 'Libyan Dinar'),\n\t\t\t(81, 'CHF', 'CHF', 'Swiss Franc'),\n\t\t\t(82, 'LTL', 'Lt', 'Lithuanian Litas'),\n\t\t\t(83, 'MOP', 'MOP', 'Pataca'),\n\t\t\t(84, 'MKD', '&#x434;&#x435;&#x43d;', 'Denar'),\n\t\t\t(85, 'MGA', 'MGA', 'Malagasy Ariary'),\n\t\t\t(86, 'MWK', 'MWK', 'Kwacha'),\n\t\t\t(87, 'MYR', 'RM', 'Malaysian Ringgit'),\n\t\t\t(88, 'MVR', 'MVR', 'Rufiyaa'),\n\t\t\t(89, 'MRO', 'MRO', 'Ouguiya'),\n\t\t\t(90, 'MUR', 'Rs', 'Mauritius Rupee'),\n\t\t\t(91, 'MDL', 'MDL', 'Moldovan Leu'),\n\t\t\t(92, 'MNT', '&#x20ae;', 'Tugrik'),\n\t\t\t(93, 'MAD', 'MAD', 'Moroccan Dirham'),\n\t\t\t(94, 'MZN', 'MT', 'Metical'),\n\t\t\t(95, 'MMK', 'MMK', 'Kyat'),\n\t\t\t(96, 'NPR', 'Rs', 'Nepalese Rupee'),\n\t\t\t(97, 'ANG', '&fnof;', 'Netherlands Antillian Guilder'),\n\t\t\t(98, 'NIO', 'C$', 'Cordoba Oro'),\n\t\t\t(99, 'NGN', '&#x20a6;', 'Naira'),\n\t\t\t(100, 'OMR', '&#xfdfc;', 'Rial Omani'),\n\t\t\t(101, 'PKR', 'Rs', 'Pakistan Rupee'),\n\t\t\t(102, 'PGK', 'PGK', 'Kina'),\n\t\t\t(103, 'PYG', 'Gs', 'Guarani'),\n\t\t\t(104, 'PEN', 'S/.', 'Nuevo Sol'),\n\t\t\t(105, 'PHP', 'Php', 'Philippine Peso'),\n\t\t\t(106, 'PLN', 'z&#x142;', 'Zloty'),\n\t\t\t(107, 'QAR', '&#xfdfc;', 'Qatari Rial'),\n\t\t\t(108, 'RON', 'lei', 'New Leu'),\n\t\t\t(109, 'RUB', '&#x440;&#x443;&#x431;', 'Russian Ruble'),\n\t\t\t(110, 'RWF', 'RWF', 'Rwanda Franc'),\n\t\t\t(111, 'SHP', '&pound;', 'Saint Helena Pound'),\n\t\t\t(112, 'WST', 'WST', 'Tala'),\n\t\t\t(113, 'STD', 'STD', 'Dobra'),\n\t\t\t(114, 'SAR', '&#xfdfc;', 'Saudi Riyal'),\n\t\t\t(115, 'RSD', '&#x414;&#x438;&#x43d;.', 'Serbian Dinar'),\n\t\t\t(116, 'SCR', 'Rs', 'Seychelles Rupee'),\n\t\t\t(117, 'SLL', 'SLL', 'Leone'),\n\t\t\t(118, 'SGD', '$', 'Singapore Dollar'),\n\t\t\t(119, 'SBD', '$', 'Solomon Islands Dollar'),\n\t\t\t(120, 'SOS', 'S', 'Somali Shilling'),\n\t\t\t(121, 'ZAR', 'R', 'Rand'),\n\t\t\t(122, 'LKR', 'Rs', 'Sri Lanka Rupee'),\n\t\t\t(123, 'SDG', 'SDG', 'Sudanese Pound'),\n\t\t\t(124, 'SRD', '$', 'Surinam Dollar'),\n\t\t\t(125, 'SZL', 'SZL', 'Lilangeni'),\n\t\t\t(126, 'SEK', 'kr', 'Swedish Krona'),\n\t\t\t(127, 'SYP', '&pound;', 'Syrian Pound'),\n\t\t\t(128, 'TWD', '$', 'New Taiwan Dollar'),\n\t\t\t(129, 'TJS', 'TJS', 'Somoni'),\n\t\t\t(130, 'TZS', 'TZS', 'Tanzanian Shilling'),\n\t\t\t(131, 'THB', 'THB', 'Baht'),\n\t\t\t(132, 'TOP', 'TOP', 'Pa'),\n\t\t\t(133, 'TTD', 'TT$', 'Trinidad and Tobago Dollar'),\n\t\t\t(134, 'TND', 'TND', 'Tunisian Dinar'),\n\t\t\t(135, 'TRY', 'TL', 'Turkish Lira'),\n\t\t\t(136, 'TMT', 'TMT', 'Manat'),\n\t\t\t(137, 'UGX', 'UGX', 'Uganda Shilling'),\n\t\t\t(138, 'UAH', '&#x20b4;', 'Hryvnia'),\n\t\t\t(139, 'AED', 'AED', 'UAE Dirham'),\n\t\t\t(140, 'UZS', '&#x43b;&#x432;', 'Uzbekistan Sum'),\n\t\t\t(141, 'VUV', 'VUV', 'Vatu'),\n\t\t\t(142, 'VEF', 'Bs', 'Bolivar Fuerte'),\n\t\t\t(143, 'VND', '&#x20ab;', 'Dong'),\n\t\t\t(144, 'YER', '&#xfdfc;', 'Yemeni Rial'),\n\t\t\t(145, 'ZMK', 'ZMK', 'Zambian Kwacha'),\n\t\t\t(146, 'ZWL', 'Z$', 'Zimbabwe Dollar'),\n\t\t\t(147, 'XAU', 'XAU', 'Gold'),\n\t\t\t(148, 'XBA', 'XBA', 'EURCO'),\n\t\t\t(149, 'XBB', 'XBB', 'European Monetary Unit'),\n\t\t\t(150, 'XBC', 'XBC', 'European Unit of Account 9'),\n\t\t\t(151, 'XBD', 'XBD', 'European Unit of Account 17'),\n\t\t\t(152, 'XDR', 'XDR', 'SDR'),\n\t\t\t(153, 'XPD', 'XPD', 'Palladium'),\n\t\t\t(154, 'XPT', 'XPT', 'Platinum'),\n\t\t\t(155, 'XAG', 'XAG', 'Silver'),\n\t\t\t(156, 'COP', '$', 'Colombian peso'),\n\t\t\t(157, 'CUP', '$', 'Cuban peso'),\n\t\t\t(158, 'SVC', 'SVC', 'Salvadoran colon'),\n\t\t\t(159, 'CLP', '$', 'Chilean peso'),\n\t\t\t(160, 'HTG', 'G', 'Haitian gourde'),\n\t\t\t(161, 'MXN', '$', 'Mexican peso'),\n\t\t\t(162, 'PAB', 'PAB', 'Panamanian balboa'),\n\t\t\t(163, 'UYU', '$', 'Uruguayan peso')\n\t\t\t\" );\n\ttask_end();\n}\n\n/**\n * Create default countries with relations to currencies\n *\n */\nfunction create_default_countries( $table_name = 'T_regional__country', $set_preferred_country = true )\n{\n\tglobal $DB, $current_locale;\n\n\ttask_begin( 'Creating default countries... ' );\n\t$DB->query( \"\n\t\tINSERT INTO $table_name ( ctry_ID, ctry_code, ctry_name, ctry_curr_ID)\n\t\tVALUES\n\t\t\t(1, 'af', 'Afghanistan', 1),\n\t\t\t(2, 'ax', 'Aland Islands', 2),\n\t\t\t(3, 'al', 'Albania', 3),\n\t\t\t(4, 'dz', 'Algeria', 4),\n\t\t\t(5, 'as', 'American Samoa', 5),\n\t\t\t(6, 'ad', 'Andorra', 2),\n\t\t\t(7, 'ao', 'Angola', 6),\n\t\t\t(8, 'ai', 'Anguilla', 7),\n\t\t\t(9, 'aq', 'Antarctica', NULL),\n\t\t\t(10, 'ag', 'Antigua And Barbuda', 7),\n\t\t\t(11, 'ar', 'Argentina', 8),\n\t\t\t(12, 'am', 'Armenia', 9),\n\t\t\t(13, 'aw', 'Aruba', 10),\n\t\t\t(14, 'au', 'Australia', 11),\n\t\t\t(15, 'at', 'Austria', 2),\n\t\t\t(16, 'az', 'Azerbaijan', 12),\n\t\t\t(17, 'bs', 'Bahamas', 13),\n\t\t\t(18, 'bh', 'Bahrain', 14),\n\t\t\t(19, 'bd', 'Bangladesh', 15),\n\t\t\t(20, 'bb', 'Barbados', 16),\n\t\t\t(21, 'by', 'Belarus', 17),\n\t\t\t(22, 'be', 'Belgium', 2),\n\t\t\t(23, 'bz', 'Belize', 18),\n\t\t\t(24, 'bj', 'Benin', 19),\n\t\t\t(25, 'bm', 'Bermuda', 20),\n\t\t\t(26, 'bt', 'Bhutan', 62),\n\t\t\t(27, 'bo', 'Bolivia', NULL),\n\t\t\t(28, 'ba', 'Bosnia And Herzegovina', 21),\n\t\t\t(29, 'bw', 'Botswana', 22),\n\t\t\t(30, 'bv', 'Bouvet Island', 23),\n\t\t\t(31, 'br', 'Brazil', 24),\n\t\t\t(32, 'io', 'British Indian Ocean Territory', 5),\n\t\t\t(33, 'bn', 'Brunei Darussalam', 25),\n\t\t\t(34, 'bg', 'Bulgaria', 26),\n\t\t\t(35, 'bf', 'Burkina Faso', 19),\n\t\t\t(36, 'bi', 'Burundi', 27),\n\t\t\t(37, 'kh', 'Cambodia', 28),\n\t\t\t(38, 'cm', 'Cameroon', 29),\n\t\t\t(39, 'ca', 'Canada', 30),\n\t\t\t(40, 'cv', 'Cape Verde', 31),\n\t\t\t(41, 'ky', 'Cayman Islands', 32),\n\t\t\t(42, 'cf', 'Central African Republic', 29),\n\t\t\t(43, 'td', 'Chad', 29),\n\t\t\t(44, 'cl', 'Chile', 159),\n\t\t\t(45, 'cn', 'China', 33),\n\t\t\t(46, 'cx', 'Christmas Island', 11),\n\t\t\t(47, 'cc', 'Cocos Islands', 11),\n\t\t\t(48, 'co', 'Colombia', 156),\n\t\t\t(49, 'km', 'Comoros', 34),\n\t\t\t(50, 'cg', 'Congo', 29),\n\t\t\t(51, 'cd', 'Congo Republic', 35),\n\t\t\t(52, 'ck', 'Cook Islands', 36),\n\t\t\t(53, 'cr', 'Costa Rica', 37),\n\t\t\t(54, 'ci', 'Cote Divoire', 19),\n\t\t\t(55, 'hr', 'Croatia', 38),\n\t\t\t(56, 'cu', 'Cuba', 157),\n\t\t\t(57, 'cy', 'Cyprus', 2),\n\t\t\t(58, 'cz', 'Czech Republic', 39),\n\t\t\t(59, 'dk', 'Denmark', 40),\n\t\t\t(60, 'dj', 'Djibouti', 41),\n\t\t\t(61, 'dm', 'Dominica', 7),\n\t\t\t(62, 'do', 'Dominican Republic', 42),\n\t\t\t(63, 'ec', 'Ecuador', 5),\n\t\t\t(64, 'eg', 'Egypt', 43),\n\t\t\t(65, 'sv', 'El Salvador', 158),\n\t\t\t(66, 'gq', 'Equatorial Guinea', 29),\n\t\t\t(67, 'er', 'Eritrea', 44),\n\t\t\t(68, 'ee', 'Estonia', 45),\n\t\t\t(69, 'et', 'Ethiopia', 46),\n\t\t\t(70, 'fk', 'Falkland Islands (Malvinas)', 47),\n\t\t\t(71, 'fo', 'Faroe Islands', 40),\n\t\t\t(72, 'fj', 'Fiji', 48),\n\t\t\t(73, 'fi', 'Finland', 2),\n\t\t\t(74, 'fr', 'France', 2),\n\t\t\t(75, 'gf', 'French Guiana', 2),\n\t\t\t(76, 'pf', 'French Polynesia', 49),\n\t\t\t(77, 'tf', 'French Southern Territories', 2),\n\t\t\t(78, 'ga', 'Gabon', 29),\n\t\t\t(79, 'gm', 'Gambia', 50),\n\t\t\t(80, 'ge', 'Georgia', 51),\n\t\t\t(81, 'de', 'Germany', 2),\n\t\t\t(82, 'gh', 'Ghana', 52),\n\t\t\t(83, 'gi', 'Gibraltar', 53),\n\t\t\t(84, 'gr', 'Greece', 2),\n\t\t\t(85, 'gl', 'Greenland', 40),\n\t\t\t(86, 'gd', 'Grenada', 7),\n\t\t\t(87, 'gp', 'Guadeloupe', 2),\n\t\t\t(88, 'gu', 'Guam', 5),\n\t\t\t(89, 'gt', 'Guatemala', 54),\n\t\t\t(90, 'gg', 'Guernsey', 55),\n\t\t\t(91, 'gn', 'Guinea', 56),\n\t\t\t(92, 'gw', 'Guinea-bissau', 19),\n\t\t\t(93, 'gy', 'Guyana', 57),\n\t\t\t(94, 'ht', 'Haiti', 160),\n\t\t\t(95, 'hm', 'Heard Island And Mcdonald Islands', 11),\n\t\t\t(96, 'va', 'Holy See (vatican City State)', 2),\n\t\t\t(97, 'hn', 'Honduras', 58),\n\t\t\t(98, 'hk', 'Hong Kong', 59),\n\t\t\t(99, 'hu', 'Hungary', 60),\n\t\t\t(100, 'is', 'Iceland', 61),\n\t\t\t(101, 'in', 'India', 62),\n\t\t\t(102, 'id', 'Indonesia', 63),\n\t\t\t(103, 'ir', 'Iran', 64),\n\t\t\t(104, 'iq', 'Iraq', 65),\n\t\t\t(105, 'ie', 'Ireland', 2),\n\t\t\t(106, 'im', 'Isle Of Man', NULL),\n\t\t\t(107, 'il', 'Israel', 66),\n\t\t\t(108, 'it', 'Italy', 2),\n\t\t\t(109, 'jm', 'Jamaica', 67),\n\t\t\t(110, 'jp', 'Japan', 68),\n\t\t\t(111, 'je', 'Jersey', 55),\n\t\t\t(112, 'jo', 'Jordan', 69),\n\t\t\t(113, 'kz', 'Kazakhstan', 70),\n\t\t\t(114, 'ke', 'Kenya', 71),\n\t\t\t(115, 'ki', 'Kiribati', 11),\n\t\t\t(116, 'kp', 'Korea', 72),\n\t\t\t(117, 'kr', 'Korea', 73),\n\t\t\t(118, 'kw', 'Kuwait', 74),\n\t\t\t(119, 'kg', 'Kyrgyzstan', 75),\n\t\t\t(120, 'la', 'Lao', 76),\n\t\t\t(121, 'lv', 'Latvia', 77),\n\t\t\t(122, 'lb', 'Lebanon', 78),\n\t\t\t(123, 'ls', 'Lesotho', 121),\n\t\t\t(124, 'lr', 'Liberia', 79),\n\t\t\t(125, 'ly', 'Libyan Arab Jamahiriya', 80),\n\t\t\t(126, 'li', 'Liechtenstein', 81),\n\t\t\t(127, 'lt', 'Lithuania', 82),\n\t\t\t(128, 'lu', 'Luxembourg', 2),\n\t\t\t(129, 'mo', 'Macao', 83),\n\t\t\t(130, 'mk', 'Macedonia', 84),\n\t\t\t(131, 'mg', 'Madagascar', 85),\n\t\t\t(132, 'mw', 'Malawi', 86),\n\t\t\t(133, 'my', 'Malaysia', 87),\n\t\t\t(134, 'mv', 'Maldives', 88),\n\t\t\t(135, 'ml', 'Mali', 19),\n\t\t\t(136, 'mt', 'Malta', 2),\n\t\t\t(137, 'mh', 'Marshall Islands', 5),\n\t\t\t(138, 'mq', 'Martinique', 2),\n\t\t\t(139, 'mr', 'Mauritania', 89),\n\t\t\t(140, 'mu', 'Mauritius', 90),\n\t\t\t(141, 'yt', 'Mayotte', 2),\n\t\t\t(142, 'mx', 'Mexico', 161),\n\t\t\t(143, 'fm', 'Micronesia', 2),\n\t\t\t(144, 'md', 'Moldova', 91),\n\t\t\t(145, 'mc', 'Monaco', 2),\n\t\t\t(146, 'mn', 'Mongolia', 92),\n\t\t\t(147, 'me', 'Montenegro', 2),\n\t\t\t(148, 'ms', 'Montserrat', 7),\n\t\t\t(149, 'ma', 'Morocco', 93),\n\t\t\t(150, 'mz', 'Mozambique', 94),\n\t\t\t(151, 'mm', 'Myanmar', 95),\n\t\t\t(152, 'na', 'Namibia', 121),\n\t\t\t(153, 'nr', 'Nauru', 11),\n\t\t\t(154, 'np', 'Nepal', 96),\n\t\t\t(155, 'nl', 'Netherlands', 2),\n\t\t\t(156, 'an', 'Netherlands Antilles', 97),\n\t\t\t(157, 'nc', 'New Caledonia', 49),\n\t\t\t(158, 'nz', 'New Zealand', 36),\n\t\t\t(159, 'ni', 'Nicaragua', 98),\n\t\t\t(160, 'ne', 'Niger', 19),\n\t\t\t(161, 'ng', 'Nigeria', 99),\n\t\t\t(162, 'nu', 'Niue', 36),\n\t\t\t(163, 'nf', 'Norfolk Island', 11),\n\t\t\t(164, 'mp', 'Northern Mariana Islands', 5),\n\t\t\t(165, 'no', 'Norway', 23),\n\t\t\t(166, 'om', 'Oman', 100),\n\t\t\t(167, 'pk', 'Pakistan', 101),\n\t\t\t(168, 'pw', 'Palau', 5),\n\t\t\t(169, 'ps', 'Palestinian Territory', NULL),\n\t\t\t(170, 'pa', 'Panama', 162),\n\t\t\t(171, 'pg', 'Papua New Guinea', 102),\n\t\t\t(172, 'py', 'Paraguay', 103),\n\t\t\t(173, 'pe', 'Peru', 104),\n\t\t\t(174, 'ph', 'Philippines', 105),\n\t\t\t(175, 'pn', 'Pitcairn', 36),\n\t\t\t(176, 'pl', 'Poland', 106),\n\t\t\t(177, 'pt', 'Portugal', 2),\n\t\t\t(178, 'pr', 'Puerto Rico', 5),\n\t\t\t(179, 'qa', 'Qatar', 107),\n\t\t\t(180, 're', 'Reunion', 2),\n\t\t\t(181, 'ro', 'Romania', 108),\n\t\t\t(182, 'ru', 'Russian Federation', 109),\n\t\t\t(183, 'rw', 'Rwanda', 110),\n\t\t\t(184, 'bl', 'Saint Barthelemy', 2),\n\t\t\t(185, 'sh', 'Saint Helena', 111),\n\t\t\t(186, 'kn', 'Saint Kitts And Nevis', 7),\n\t\t\t(187, 'lc', 'Saint Lucia', 7),\n\t\t\t(188, 'mf', 'Saint Martin', 2),\n\t\t\t(189, 'pm', 'Saint Pierre And Miquelon', 2),\n\t\t\t(190, 'vc', 'Saint Vincent And The Grenadines', 7),\n\t\t\t(191, 'ws', 'Samoa', 112),\n\t\t\t(192, 'sm', 'San Marino', 2),\n\t\t\t(193, 'st', 'Sao Tome And Principe', 113),\n\t\t\t(194, 'sa', 'Saudi Arabia', 114),\n\t\t\t(195, 'sn', 'Senegal', 19),\n\t\t\t(196, 'rs', 'Serbia', 115),\n\t\t\t(197, 'sc', 'Seychelles', 116),\n\t\t\t(198, 'sl', 'Sierra Leone', 117),\n\t\t\t(199, 'sg', 'Singapore', 118),\n\t\t\t(200, 'sk', 'Slovakia', 2),\n\t\t\t(201, 'si', 'Slovenia', 2),\n\t\t\t(202, 'sb', 'Solomon Islands', 119),\n\t\t\t(203, 'so', 'Somalia', 120),\n\t\t\t(204, 'za', 'South Africa', 121),\n\t\t\t(205, 'gs', 'South Georgia', NULL),\n\t\t\t(206, 'es', 'Spain', 2),\n\t\t\t(207, 'lk', 'Sri Lanka', 122),\n\t\t\t(208, 'sd', 'Sudan', 123),\n\t\t\t(209, 'sr', 'Suriname', 124),\n\t\t\t(210, 'sj', 'Svalbard And Jan Mayen', 23),\n\t\t\t(211, 'sz', 'Swaziland', 125),\n\t\t\t(212, 'se', 'Sweden', 126),\n\t\t\t(213, 'ch', 'Switzerland', 81),\n\t\t\t(214, 'sy', 'Syrian Arab Republic', 127),\n\t\t\t(215, 'tw', 'Taiwan, Province Of China', 128),\n\t\t\t(216, 'tj', 'Tajikistan', 129),\n\t\t\t(217, 'tz', 'Tanzania', 130),\n\t\t\t(218, 'th', 'Thailand', 131),\n\t\t\t(219, 'tl', 'Timor-leste', 5),\n\t\t\t(220, 'tg', 'Togo', 19),\n\t\t\t(221, 'tk', 'Tokelau', 36),\n\t\t\t(222, 'to', 'Tonga', 132),\n\t\t\t(223, 'tt', 'Trinidad And Tobago', 133),\n\t\t\t(224, 'tn', 'Tunisia', 134),\n\t\t\t(225, 'tr', 'Turkey', 135),\n\t\t\t(226, 'tm', 'Turkmenistan', 136),\n\t\t\t(227, 'tc', 'Turks And Caicos Islands', 5),\n\t\t\t(228, 'tv', 'Tuvalu', 11),\n\t\t\t(229, 'ug', 'Uganda', 137),\n\t\t\t(230, 'ua', 'Ukraine', 138),\n\t\t\t(231, 'ae', 'United Arab Emirates', 139),\n\t\t\t(232, 'gb', 'United Kingdom', 55),\n\t\t\t(233, 'us', 'United States', 5),\n\t\t\t(234, 'um', 'United States Minor Outlying Islands', 5),\n\t\t\t(235, 'uy', 'Uruguay', 163),\n\t\t\t(236, 'uz', 'Uzbekistan', 140),\n\t\t\t(237, 'vu', 'Vanuatu', 141),\n\t\t\t(239, 've', 'Venezuela', 142),\n\t\t\t(240, 'vn', 'Viet Nam', 143),\n\t\t\t(241, 'vg', 'Virgin Islands, British', 5),\n\t\t\t(242, 'vi', 'Virgin Islands, U.s.', 5),\n\t\t\t(243, 'wf', 'Wallis And Futuna', 49),\n\t\t\t(244, 'eh', 'Western Sahara', 93),\n\t\t\t(245, 'ye', 'Yemen', 144),\n\t\t\t(246, 'zm', 'Zambia', 145),\n\t\t\t(247, 'zw', 'Zimbabwe', 146),\n\t\t\t(248, 'ct', 'Catalonia', 2)\" );\n\n\tif( $set_preferred_country && !empty( $current_locale ) )\n\t{\t// Set default preferred country from current locale\n\t\t$result = array();\n\t\tpreg_match('#.*?-(.*)#', strtolower($current_locale),$result);\n\n\t\t$DB->query( \"UPDATE $table_name\n\t\t\tSET ctry_preferred = 1, ctry_status = 'trusted'\n\t\t\tWHERE ctry_code = '\".$DB->escape($result[1]).\"'\" );\n\t}\n\ttask_end();\n}\n\n/**\n * Create default regions\n *\n */\nfunction create_default_regions()\n{\n\tglobal $DB, $current_charset;\n\n\ttask_begin( 'Creating default regions... ' );\n\t$DB->query( convert_charset(\"\n\t\tINSERT INTO T_regional__region ( rgn_ID, rgn_ctry_ID, rgn_code, rgn_name )\n\t\tVALUES\".\n\t\t\t/* United States */\"\n\t\t\t(1, 233, 'AL', 'Alabama'),\n\t\t\t(2, 233, 'AK', 'Alaska'),\n\t\t\t(3, 233, 'AZ', 'Arizona'),\n\t\t\t(4, 233, 'AR', 'Arkansas'),\n\t\t\t(5, 233, 'CA', 'California'),\n\t\t\t(6, 233, 'CO', 'Colorado'),\n\t\t\t(7, 233, 'CT', 'Connecticut'),\n\t\t\t(8, 233, 'DE', 'Delaware'),\n\t\t\t(9, 233, 'FL', 'Florida'),\n\t\t\t(10, 233, 'GA', 'Georgia'),\n\t\t\t(11, 233, 'HI', 'Hawaii'),\n\t\t\t(12, 233, 'ID', 'Idaho'),\n\t\t\t(13, 233, 'IL', 'Illinois'),\n\t\t\t(14, 233, 'IN', 'Indiana'),\n\t\t\t(15, 233, 'IA', 'Iowa'),\n\t\t\t(16, 233, 'KS', 'Kansas'),\n\t\t\t(17, 233, 'KY', 'Kentucky'),\n\t\t\t(18, 233, 'LA', 'Louisiana'),\n\t\t\t(19, 233, 'ME', 'Maine'),\n\t\t\t(20, 233, 'MD', 'Maryland'),\n\t\t\t(21, 233, 'MA', 'Massachusetts'),\n\t\t\t(22, 233, 'MI', 'Michigan'),\n\t\t\t(23, 233, 'MN', 'Minnesota'),\n\t\t\t(24, 233, 'MS', 'Mississippi'),\n\t\t\t(25, 233, 'MO', 'Missouri'),\n\t\t\t(26, 233, 'MT', 'Montana'),\n\t\t\t(27, 233, 'NE', 'Nebraska'),\n\t\t\t(28, 233, 'NV', 'Nevada'),\n\t\t\t(29, 233, 'NH', 'New Hampshire'),\n\t\t\t(30, 233, 'NJ', 'New Jersey'),\n\t\t\t(31, 233, 'NM', 'New Mexico'),\n\t\t\t(32, 233, 'NY', 'New York'),\n\t\t\t(33, 233, 'NC', 'North Carolina'),\n\t\t\t(34, 233, 'ND', 'North Dakota'),\n\t\t\t(35, 233, 'OH', 'Ohio'),\n\t\t\t(36, 233, 'OK', 'Oklahoma'),\n\t\t\t(37, 233, 'OR', 'Oregon'),\n\t\t\t(38, 233, 'PA', 'Pennsylvania'),\n\t\t\t(39, 233, 'RI', 'Rhode Island'),\n\t\t\t(40, 233, 'SC', 'South Carolina'),\n\t\t\t(41, 233, 'SD', 'South Dakota'),\n\t\t\t(42, 233, 'TN', 'Tennessee'),\n\t\t\t(43, 233, 'TX', 'Texas'),\n\t\t\t(44, 233, 'UT', 'Utah'),\n\t\t\t(45, 233, 'VT', 'Vermont'),\n\t\t\t(46, 233, 'VA', 'Virginia'),\n\t\t\t(47, 233, 'WA', 'Washington'),\n\t\t\t(48, 233, 'WV', 'West Virginia'),\n\t\t\t(49, 233, 'WI', 'Wisconsin'),\n\t\t\t(50, 233, 'WY', 'Wyoming'),\".\n\t\t\t/* France */\"\n\t\t\t(51, 74, '42', 'Alsace'),\n\t\t\t(52, 74, '72', 'Aquitaine'),\n\t\t\t(53, 74, '83', 'Auvergne'),\n\t\t\t(54, 74, '26', 'Bourgogne'),\n\t\t\t(55, 74, '53', 'Bretagne'),\n\t\t\t(56, 74, '24', 'Centre'),\n\t\t\t(57, 74, '21', 'Champagne-Ardenne'),\n\t\t\t(58, 74, '94', 'Corse'),\n\t\t\t(59, 74, '43', 'Franche-Comt\\xE9'),\n\t\t\t(60, 74, '11', '\\xCEle-de-France'),\n\t\t\t(61, 74, '91', 'Languedoc-Roussillon'),\n\t\t\t(62, 74, '74', 'Limousin'),\n\t\t\t(63, 74, '41', 'Lorraine'),\n\t\t\t(64, 74, '73', 'Midi-Pyr\\xE9n\\xE9es'),\n\t\t\t(65, 74, '31', 'Nord-Pas-de-Calais'),\n\t\t\t(66, 74, '25', 'Basse-Normandie'),\n\t\t\t(67, 74, '23', 'Haute-Normandie'),\n\t\t\t(68, 74, '52', 'Pays de la Loire'),\n\t\t\t(69, 74, '22', 'Picardie'),\n\t\t\t(70, 74, '54', 'Poitou-Charentes'),\n\t\t\t(71, 74, '93', 'Provence-Alpes-C\\xF4te d\\'Azur'),\n\t\t\t(72, 74, '82', 'Rh\\xF4ne-Alpes'),\n\t\t\t(73, 74, '01', 'Guadeloupe'),\n\t\t\t(74, 74, '02', 'Martinique'),\n\t\t\t(75, 74, '03', 'Guyane'),\n\t\t\t(76, 74, '04', 'La R\\xE9union'),\n\t\t\t(77, 74, '05', 'Mayotte'),\n\t\t\t(78, 74, '09', 'Outre-Mer'),\n\t\t\t(79, 74, '99', 'Monaco')\", $current_charset, 'iso-8859-1' ) );\n\n\ttask_end();\n}\n\n/**\n * Create default sub-regions\n *\n */\nfunction create_default_subregions()\n{\n\tglobal $DB, $current_charset;\n\n\ttask_begin( 'Creating default sub-regions... ' );\n\t$DB->query( convert_charset(\"\n\t\tINSERT INTO T_regional__subregion ( subrg_ID, subrg_rgn_ID, subrg_code, subrg_name )\n\t\tVALUES\".\n\t\t\t/* France */\"\n\t\t\t(1, 72, '01', 'Ain'),\n\t\t\t(2, 69, '02', 'Aisne'),\n\t\t\t(3, 53, '03', 'Allier'),\n\t\t\t(4, 71, '04', 'Alpes-de-Haute-Provence'),\n\t\t\t(5, 71, '05', 'Hautes-Alpes'),\n\t\t\t(6, 71, '06', 'Alpes-Maritimes'),\n\t\t\t(7, 72, '07', 'Ard\\xE8che'),\n\t\t\t(8, 57, '08', 'Ardennes'),\n\t\t\t(9, 64, '09', 'Ari\\xE8ge'),\n\t\t\t(10, 57, '10', 'Aube'),\n\t\t\t(11, 61, '11', 'Aude'),\n\t\t\t(12, 64, '12', 'Aveyron'),\n\t\t\t(13, 71, '13', 'Bouches-du-Rh\\xF4ne'),\n\t\t\t(14, 66, '14', 'Calvados'),\n\t\t\t(15, 53, '15', 'Cantal'),\n\t\t\t(16, 70, '16', 'Charente'),\n\t\t\t(17, 70, '17', 'Charente-Maritime'),\n\t\t\t(18, 56, '18', 'Cher'),\n\t\t\t(19, 62, '19', 'Corr\\xE8ze'),\n\t\t\t(20, 58, '2A', 'Corse-du-Sud'),\n\t\t\t(21, 58, '2B', 'Haute-Corse'),\n\t\t\t(22, 54, '21', 'C\\xF4te-d\\'Or'),\n\t\t\t(23, 55, '22', 'C\\xF4tes-d\\'Armor'),\n\t\t\t(24, 62, '23', 'Creuse'),\n\t\t\t(25, 52, '24', 'Dordogne'),\n\t\t\t(26, 59, '25', 'Doubs'),\n\t\t\t(27, 72, '26', 'Dr\\xF4me'),\n\t\t\t(28, 67, '27', 'Eure'),\n\t\t\t(29, 56, '28', 'Eure-et-Loir'),\n\t\t\t(30, 55, '29', 'Finist\\xE8re'),\n\t\t\t(31, 61, '30', 'Gard'),\n\t\t\t(32, 64, '31', 'Haute-Garonne'),\n\t\t\t(33, 64, '32', 'Gers'),\n\t\t\t(34, 52, '33', 'Gironde'),\n\t\t\t(35, 61, '34', 'H\\xE9rault'),\n\t\t\t(36, 55, '35', 'Ille-et-Vilaine'),\n\t\t\t(37, 56, '36', 'Indre'),\n\t\t\t(38, 56, '37', 'Indre-et-Loire'),\n\t\t\t(39, 72, '38', 'Is\\xE8re'),\n\t\t\t(40, 59, '39', 'Jura'),\n\t\t\t(41, 52, '40', 'Landes'),\n\t\t\t(42, 56, '41', 'Loir-et-Cher'),\n\t\t\t(43, 72, '42', 'Loire'),\n\t\t\t(44, 53, '43', 'Haute-Loire'),\n\t\t\t(45, 68, '44', 'Loire-Atlantique'),\n\t\t\t(46, 56, '45', 'Loiret'),\n\t\t\t(47, 64, '46', 'Lot'),\n\t\t\t(48, 52, '47', 'Lot-et-Garonne'),\n\t\t\t(49, 61, '48', 'Loz\\xE8re'),\n\t\t\t(50, 68, '49', 'Maine-et-Loire'),\n\t\t\t(51, 66, '50', 'Manche'),\n\t\t\t(52, 57, '51', 'Marne'),\n\t\t\t(53, 57, '52', 'Haute-Marne'),\n\t\t\t(54, 68, '53', 'Mayenne'),\n\t\t\t(55, 63, '54', 'Meurthe-et-Moselle'),\n\t\t\t(56, 63, '55', 'Meuse'),\n\t\t\t(57, 55, '56', 'Morbihan'),\n\t\t\t(58, 63, '57', 'Moselle'),\n\t\t\t(59, 54, '58', 'Ni\\xE8vre'),\n\t\t\t(60, 65, '59', 'Nord'),\n\t\t\t(61, 69, '60', 'Oise'),\n\t\t\t(62, 66, '61', 'Orne'),\n\t\t\t(63, 65, '62', 'Pas-de-Calais'),\n\t\t\t(64, 53, '63', 'Puy-de-D\\xF4me'),\n\t\t\t(65, 52, '64', 'Pyr\\xE9n\\xE9es-Atlantiques'),\n\t\t\t(66, 64, '65', 'Hautes-Pyr\\xE9n\\xE9es'),\n\t\t\t(67, 61, '66', 'Pyr\\xE9n\\xE9es-Orientales'),\n\t\t\t(68, 51, '67', 'Bas-Rhin'),\n\t\t\t(69, 51, '68', 'Haut-Rhin'),\n\t\t\t(70, 72, '69', 'Rh\\xF4ne'),\n\t\t\t(71, 59, '70', 'Haute-Sa\\xF4ne'),\n\t\t\t(72, 54, '71', 'Sa\\xF4ne-et-Loire'),\n\t\t\t(73, 68, '72', 'Sarthe'),\n\t\t\t(74, 72, '73', 'Savoie'),\n\t\t\t(75, 72, '74', 'Haute-Savoie'),\n\t\t\t(76, 60, '75', 'Paris'),\n\t\t\t(77, 67, '76', 'Seine-Maritime'),\n\t\t\t(78, 60, '77', 'Seine-et-Marne'),\n\t\t\t(79, 60, '78', 'Yvelines'),\n\t\t\t(80, 70, '79', 'Deux-S\\xE8vres'),\n\t\t\t(81, 69, '80', 'Somme'),\n\t\t\t(82, 64, '81', 'Tarn'),\n\t\t\t(83, 64, '82', 'Tarn-et-Garonne'),\n\t\t\t(84, 71, '83', 'Var'),\n\t\t\t(85, 71, '84', 'Vaucluse'),\n\t\t\t(86, 68, '85', 'Vend\\xE9e'),\n\t\t\t(87, 70, '86', 'Vienne'),\n\t\t\t(88, 62, '87', 'Haute-Vienne'),\n\t\t\t(89, 63, '88', 'Vosges'),\n\t\t\t(90, 54, '89', 'Yonne'),\n\t\t\t(91, 59, '90', 'Territoire de Belfort'),\n\t\t\t(92, 60, '91', 'Essonne'),\n\t\t\t(93, 60, '92', 'Hauts-de-Seine'),\n\t\t\t(94, 60, '93', 'Seine-Saint-Denis'),\n\t\t\t(95, 60, '94', 'Val-de-Marne'),\n\t\t\t(96, 60, '95', 'Val-d\\'Oise'),\n\t\t\t(97, 73, '971', 'Guadeloupe'),\n\t\t\t(98, 74, '972', 'Martinique'),\n\t\t\t(99, 75, '973', 'Guyane'),\n\t\t\t(100, 76, '974', 'La R\\xE9union'),\n\t\t\t(101, 77, '976', 'Mayotte'),\n\t\t\t(102, 78, '975', 'Saint-Pierre-et-Miquelon'),\n\t\t\t(103, 78, '986', 'Wallis-et-Futuna'),\n\t\t\t(104, 78, '987', 'Polyn\\xE9sie fran\\xE7aise'),\n\t\t\t(105, 78, '988', 'Nouvelle-Cal\\xE9donie'),\n\t\t\t(106, 79, '99', 'Monaco')\", $current_charset, 'iso-8859-1') );\n\n\ttask_end();\n}\n\n/**\n * Create default scheduled jobs that don't exist yet:\n * - Prune page cache\n * - Prune hit log & session log from stats\n * - Poll antispam blacklist\n *\n * @param boolean true if it's called from the ugrade script, false if it's called from the install script\n */\nfunction create_default_jobs( $is_upgrade = false )\n{\n\tglobal $DB, $localtimenow;\n\n\t// get tomorrow date\n\t$date = date2mysql( $localtimenow + 86400 );\n\t$ctsk_params = $DB->quote( 'N;' );\n\t$next_sunday = date2mysql( strtotime( 'next Sunday',  $localtimenow + 86400 ) );\n\n\t$cleanup_jobs_key         = 'cleanup-scheduled-jobs';\n\t$heavy_db_maintenance_key = 'heavy-db-maintenance';\n\t$light_db_maintenance_key = 'light-db-maintenance';\n\t$poll_antispam_key        = 'poll-antispam-blacklist';\n\t$process_hitlog_key       = 'process-hit-log';\n\t$prune_pagecache_key      = 'prune-old-files-from-page-cache';\n\t$prune_sessions_key       = 'prune-old-hits-and-sessions';\n\t$prune_comments_key       = 'prune-recycled-comments';\n\t$activate_reminder_key    = 'send-non-activated-account-reminders';\n\t$comment_reminder_key     = 'send-unmoderated-comments-reminders';\n\t$messages_reminder_key    = 'send-unread-messages-reminders';\n\t$post_reminder_key        = 'send-unmoderated-posts-reminders';\n\n\t// init insert values\n\t$insert_values = array(\n\t\t\t// run unread messages reminder in every 29 minutes\n\t\t\t$messages_reminder_key    => \"( \".$DB->quote( form_date( $date, '01:00:00' ) ).\", 1740,  \".$DB->quote( $messages_reminder_key ).\", \".$ctsk_params.\" )\",\n\t\t\t// run activate account reminder in every 31 minutes\n\t\t\t$activate_reminder_key    => \"( \".$DB->quote( form_date( $date, '01:30:00' ) ).\", 1860,  \".$DB->quote( $activate_reminder_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$prune_pagecache_key      => \"( \".$DB->quote( form_date( $date, '02:00:00' ) ).\", 86400, \".$DB->quote( $prune_pagecache_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$process_hitlog_key       => \"( \".$DB->quote( form_date( $date, '02:30:00' ) ).\", 86400, \".$DB->quote( $process_hitlog_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$prune_sessions_key       => \"( \".$DB->quote( form_date( $date, '03:00:00' ) ).\", 86400, \".$DB->quote( $prune_sessions_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$poll_antispam_key        => \"( \".$DB->quote( form_date( $date, '04:00:00' ) ).\", 86400, \".$DB->quote( $poll_antispam_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$comment_reminder_key     => \"( \".$DB->quote( form_date( $date, '04:30:00' ) ).\", 86400, \".$DB->quote( $comment_reminder_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$cleanup_jobs_key         => \"( \".$DB->quote( form_date( $date, '05:00:00' ) ).\", 86400, \".$DB->quote( $cleanup_jobs_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$prune_comments_key       => \"( \".$DB->quote( form_date( $date, '05:30:00' ) ).\", 86400, \".$DB->quote( $prune_comments_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$light_db_maintenance_key => \"( \".$DB->quote( form_date( $date, '06:00:00' ) ).\", 86400, \".$DB->quote( $light_db_maintenance_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$heavy_db_maintenance_key => \"( \".$DB->quote( form_date( $next_sunday, '06:30:00' ) ).\", 604800, \".$DB->quote( $heavy_db_maintenance_key ).\", \".$ctsk_params.\" )\",\n\t\t\t$post_reminder_key        => \"( \".$DB->quote( form_date( $date, '07:00:00' ) ).\", 86400, \".$DB->quote( $post_reminder_key ).\", \".$ctsk_params.\" )\",\n\t\t);\n\tif( $is_upgrade )\n\t{ // Check if these jobs already exist, and don't create another\n\t\t$SQL = new SQL();\n\t\t$SQL->SELECT( 'COUNT( ctsk_ID ) AS job_number, ctsk_key' );\n\t\t$SQL->FROM( 'T_cron__task' );\n\t\t$SQL->FROM_add( 'LEFT JOIN T_cron__log ON ctsk_ID = clog_ctsk_ID' );\n\t\t$SQL->WHERE( 'clog_status IS NULL' );\n\t\t$SQL->WHERE_and( 'ctsk_key IN ( '.$DB->quote( array_keys( $insert_values ) ).' )' );\n\t\t$SQL->GROUP_BY( 'ctsk_key' );\n\t\t$result = $DB->get_results( $SQL->get() );\n\t\tforeach( $result as $row )\n\t\t{ // clear existing jobs insert values\n\t\t\tunset( $insert_values[ $row->ctsk_key ] );\n\t\t}\n\t}\n\n\t$values = implode( ', ', $insert_values );\n\tif( empty( $values ) )\n\t{ // nothing to create\n\t\treturn;\n\t}\n\n\ttask_begin( T_( 'Creating default scheduled jobs... ' ) );\n\t$DB->query( '\n\t\tINSERT INTO T_cron__task ( ctsk_start_datetime, ctsk_repeat_after, ctsk_key, ctsk_params )\n\t\tVALUES '.$values, T_( 'Create default scheduled jobs' ) );\n\ttask_end();\n}\n\n/**\n * Create a new blog\n * This funtion has to handle all needed DB dependencies!\n *\n * @todo move this to Blog object (only half done here)\n */\nfunction create_blog(\n\t$blog_name,\n\t$blog_shortname,\n\t$blog_urlname,\n\t$blog_tagline = '',\n\t$blog_longdesc = '',\n\t$blog_skin_ID = 1,\n\t$kind = 'std', // standard blog; notorious variations: \"photo\", \"group\", \"forum\"\n\t$allow_rating_items = '',\n\t$use_inskin_login = 0,\n\t$blog_access_type = 'relative', // Deprecated param for this func, because it is defined in $Blog->dbinsert()\n\t$allow_html = true,\n\t$in_bloglist = 'public',\n\t$owner_user_ID = 1 )\n{\n\tglobal $default_locale, $install_test_features, $local_installation, $Plugins;\n\n\t$Blog = new Blog( NULL );\n\n\t$Blog->init_by_kind( $kind, $blog_name, $blog_shortname, $blog_urlname );\n\n\tif( ( $kind == 'forum' || $kind == 'manual' ) && ( $Plugin = & $Plugins->get_by_code( 'b2evMark' ) ) !== false )\n\t{ // Initialize special Markdown plugin settings for Forums and Manual blogs\n\t\t$Blog->set_setting( 'plugin'.$Plugin->ID.'_coll_apply_comment_rendering', 'opt-out' );\n\t\t$Blog->set_setting( 'plugin'.$Plugin->ID.'_links', '1' );\n\t\t$Blog->set_setting( 'plugin'.$Plugin->ID.'_images', '1' );\n\t}\n\tif( $kind == 'photo' )\n\t{ // Display category directory on front page for photo blogs\n\t\t$Blog->set_setting( 'front_disp', 'catdir' );\n\t}\n\n\t$Blog->set( 'tagline', $blog_tagline );\n\t$Blog->set( 'longdesc', $blog_longdesc );\n\t$Blog->set( 'locale', $default_locale );\n\t$Blog->set( 'in_bloglist', $in_bloglist );\n\t$Blog->set( 'owner_user_ID', $owner_user_ID );\n\t$Blog->set_setting( 'normal_skin_ID', $blog_skin_ID );\n\tif( $local_installation )\n\t{ // Turn off all ping plugins if the installation is local/test/intranet\n\t\t$Blog->set_setting( 'ping_plugins', '' );\n\t}\n\n\t$Blog->dbinsert();\n\n\tif( $install_test_features )\n\t{\n\t\t$allow_rating_items = 'any';\n\t\t$Blog->set_setting( 'skin'.$blog_skin_ID.'_bubbletip', '1' );\n\t\techo_install_log( 'TEST FEATURE: Activating username bubble tips on skin of collection #'.$Blog->ID );\n\t\t$Blog->set_setting( 'skin'.$blog_skin_ID.'_gender_colored', '1' );\n\t\techo_install_log( 'TEST FEATURE: Activating gender colored usernames on skin of collection #'.$Blog->ID );\n\t\t$Blog->set_setting( 'in_skin_editing', '1' );\n\t\techo_install_log( 'TEST FEATURE: Activating in-skin editing on collection #'.$Blog->ID );\n\n\t\tif( $kind == 'manual' )\n\t\t{\t// Set a posts ordering by 'post_order ASC'\n\t\t\t$Blog->set_setting( 'orderby', 'order' );\n\t\t\t$Blog->set_setting( 'orderdir', 'ASC' );\n\t\t\techo_install_log( 'TEST FEATURE: Setting a posts ordering by asceding post order field on collection #'.$Blog->ID );\n\t\t}\n\n\t\t$Blog->set_setting( 'use_workflow', 1 );\n\t\techo_install_log( 'TEST FEATURE: Activating workflow on collection #'.$Blog->ID );\n\t}\n\tif( $allow_rating_items != '' )\n\t{\n\t\t$Blog->set_setting( 'allow_rating_items', $allow_rating_items );\n\t}\n\tif( $use_inskin_login || $install_test_features )\n\t{\n\t\t$Blog->set_setting( 'in_skin_login', 1 );\n\t}\n\n\tif( !$allow_html )\n\t{\n\t\t$Blog->set_setting( 'allow_html_comment', 0 );\n\t}\n\n\t$Blog->set( 'order', $Blog->ID );\n\n\t$Blog->dbupdate();\n\n\t// Insert default group permissions:\n\t$Blog->insert_default_group_permissions();\n\n\treturn $Blog->ID;\n}\n\n/**\n * Create a new User\n *\n * @param array Params\n * @return integer User ID\n */\nfunction create_user( $params = array() )\n{\n\tglobal $timestamp;\n\tglobal $random_password, $admin_email;\n\tglobal $default_locale, $default_country;\n\n\t$params = array_merge( array(\n\t\t\t'login'     => '',\n\t\t\t'firstname' => NULL,\n\t\t\t'lastname'  => NULL,\n\t\t\t'pass'    => $random_password, // random\n\t\t\t'email'   => $admin_email,\n\t\t\t'status'  => 'autoactivated', // assume it's active\n\t\t\t'level'   => 0,\n\t\t\t'locale'  => $default_locale,\n\t\t\t'ctry_ID' => $default_country,\n\t\t\t'gender'  => 'M',\n\t\t\t'Group'   => NULL,\n\t\t\t'org_IDs' => NULL, // array of organization IDs\n\t\t\t'fields'  => NULL, // array of additional user fields\n\t\t), $params );\n\n\t$User = new User();\n\t$User->set( 'login', $params['login'] );\n\t$User->set( 'firstname', $params['firstname'] );\n\t$User->set( 'lastname', $params['lastname'] );\n\t$User->set_password( $params['pass'] );\n\t$User->set_email( $params['email'] );\n\t$User->set( 'status', $params['status'] );\n\t$User->set( 'level', $params['level'] );\n\t$User->set( 'locale', $params['locale'] );\n\tif( !empty( $params['ctry_ID'] ) )\n\t{ // Set country\n\t\t$User->set( 'ctry_ID', $params['ctry_ID'] );\n\t}\n\t$User->set( 'gender', $params['gender'] );\n\t$User->set_datecreated( $timestamp++ );\n\t$User->set_Group( $params['Group'] );\n\tif( ! $User->dbinsert( false ) )\n\t{ // Don't continue if user creating has been failed\n\t\treturn false;\n\t}\n\n\tif( ! empty( $params['org_IDs'] ) )\n\t{ // Add user to organizations\n\t\t$User->update_organizations( $params['org_IDs'], array(), true );\n\t}\n\n\tif( ! empty( $params['fields'] ) )\n\t{ // Additional user fields\n\t\tglobal $DB;\n\t\t$fields_SQL = new SQL();\n\t\t$fields_SQL->SELECT( 'ufdf_ID, ufdf_name' );\n\t\t$fields_SQL->FROM( 'T_users__fielddefs' );\n\t\t$fields_SQL->WHERE( 'ufdf_name IN ( '.$DB->quote( array_keys( $params['fields'] ) ).' )' );\n\t\t$fields = $DB->get_assoc( $fields_SQL->get() );\n\t\t$user_field_records = array();\n\t\tforeach( $fields as $field_ID => $field_name )\n\t\t{\n\t\t\tif( ! isset( $params['fields'][ $field_name ] ) )\n\t\t\t{ // Skip wrong field\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( is_string( $params['fields'][ $field_name ] ) )\n\t\t\t{\n\t\t\t\t$params['fields'][ $field_name ] = array( $params['fields'][ $field_name ] );\n\t\t\t}\n\n\t\t\tforeach( $params['fields'][ $field_name ] as $field_value )\n\t\t\t{ // SQL record for each field value\n\t\t\t\t$user_field_records[] = '( '.$User->ID.', '.$field_ID.', '.$DB->quote( $field_value ).' )';\n\t\t\t}\n\t\t}\n\t\tif( count( $user_field_records ) )\n\t\t{ // Insert all user fields by single SQL query\n\t\t\t$DB->query( 'INSERT INTO T_users__fields ( uf_user_ID, uf_ufdf_ID, uf_varchar ) VALUES '\n\t\t\t\t.implode( ', ', $user_field_records ) );\n\t\t}\n\t}\n\n\treturn $User->ID;\n}\n\n\n/**\n * Associate a profile picture with a user.\n *\n * @param object User\n * @param string File name, NULL to use user login as file name\n */\nfunction assign_profile_picture( & $User, $login = NULL )\n{\n\t$File = new File( 'user', $User->ID, ( is_null( $login ) ? $User->login : $login ).'.jpg' );\n\n\t// Load meta data AND MAKE SURE IT IS CREATED IN DB:\n\t$File->load_meta( true );\n\t$User->set( 'avatar_file_ID', $File->ID );\n\t$User->dbupdate();\n\n\t// Set link between user and avatar file\n\t$LinkOwner = new LinkUser( $User );\n\t$File->link_to_Object( $LinkOwner );\n}\n\n\n/**\n * Assign secondary groups to user\n *\n * @param integer User ID\n * @param array IDs of groups\n */\nfunction assign_secondary_groups( $user_ID, $secondary_group_IDs )\n{\n\tif( empty( $secondary_group_IDs ) )\n\t{\t// Nothing to assign, Exit here:\n\t\treturn;\n\t}\n\n\tglobal $DB;\n\n\t$DB->query( 'INSERT INTO T_users__secondary_user_groups ( sug_user_ID, sug_grp_ID )\n\t\t\tVALUES ( '.$user_ID.', '.implode( ' ), ( '.$user_ID.', ', $secondary_group_IDs ).' )',\n\t\t'Assign secondary groups ('.implode( ', ', $secondary_group_IDs ).') to User #'.$user_ID );\n}\n\n\n/**\n * This is called only for fresh installs and fills the tables with\n * demo/tutorial things.\n */\nfunction create_demo_contents()\n{\n\tglobal $baseurl, $admin_url, $new_db_version;\n\tglobal $random_password, $query;\n\tglobal $timestamp, $admin_email;\n\tglobal $admins_Group, $moderators_Group, $editors_Group, $users_Group, $suspect_Group, $blogb_Group;\n\tglobal $blog_all_ID, $blog_home_ID, $blog_a_ID, $blog_b_ID;\n\tglobal $DB;\n\tglobal $default_locale, $default_country;\n\tglobal $Plugins, $Settings;\n\tglobal $install_test_features;\n\tglobal $user_org_IDs;\n\n\t/**\n\t * @var FileRootCache\n\t */\n\tglobal $FileRootCache;\n\n\t$lorem_1paragraph = \"\\n\\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\";\n\n\t$lorem_2more = \"\\n\\n<p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</p>\\n\\n\"\n\t\t.\"<p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.</p>\";\n\n\tload_class( 'collections/model/_blog.class.php', 'Blog' );\n\tload_class( 'files/model/_file.class.php', 'File' );\n\tload_class( 'files/model/_filetype.class.php', 'FileType' );\n\tload_class( 'links/model/_link.class.php', 'Link' );\n\n\n\ttask_begin('Assigning avatar to Admin... ');\n\t$UserCache = & get_UserCache();\n\t$User_Admin = & $UserCache->get_by_ID( 1 );\n\n\tglobal $media_path;\n\t$src_admin_dir = $media_path.'users/admin';\n\t$dest_admin_dir = $media_path.'users/'.$User_Admin->login;\n\tif( $User_Admin->login != 'admin' )\n\t{ // If admin login is not \"admin\" we should try to rename folder of the admin avatars\n\t\tif( ! file_exists( $src_admin_dir ) ||\n\t\t    ! is_dir( $src_admin_dir ) ||\n\t\t    ! @rename( $src_admin_dir, $dest_admin_dir ) )\n\t\t{ // Impossible to rename the admin folder to another name\n\n\t\t\t// Display the errors:\n\t\t\techo get_install_format_text( '<span class=\"text-danger\"><evo:error>'.sprintf( 'ERROR: Impossible to rename <code>%s</code> to <code>%s</code>.', $src_admin_dir, $dest_admin_dir ).'</evo:error></span> ' );\n\t\t\techo get_install_format_text( '<span class=\"text-danger\"><evo:error>'.sprintf( 'ERROR: Impossible to use \"%s\" for the admin account. Using \"admin\" instead.', $User_Admin->login ).'</evo:error></span> ' );\n\n\t\t\t// Change admin login to \"admin\":\n\t\t\t$User_Admin->set( 'login', 'admin' );\n\t\t\tif( $User_Admin->dbupdate() )\n\t\t\t{ // Change global var of admin login for report:\n\t\t\t\tglobal $install_login;\n\t\t\t\t$install_login = 'admin';\n\t\t\t}\n\t\t}\n\t}\n\n\tif( file_exists( $media_path.'users/'.$User_Admin->login ) )\n\t{ // Do assign avatars to admin only if it the admin folder exists on the disk\n\t\tassign_profile_picture( $User_Admin, 'admin' );\n\n\t\t// Associate secondary picture:\n\t\t$File = new File( 'user', $User_Admin->ID, 'faceyourmanga_admin_boy.png' );\n\t\t// Load meta data AND MAKE SURE IT IS CREATED IN DB:\n\t\t$File->load_meta( true );\n\t\t// Set link between user and avatar file\n\t\t$LinkOwner = new LinkUser( $User_Admin );\n\t\t$File->link_to_Object( $LinkOwner );\n\n\t\t// Associate secondary picture:\n\t\t$File = new File( 'user', $User_Admin->ID, 'faceyourmanga_admin_girl.png' );\n\t\t// Load meta data AND MAKE SURE IT IS CREATED IN DB:\n\t\t$File->load_meta( true );\n\t\t// Set link between user and avatar file\n\t\t$LinkOwner = new LinkUser( $User_Admin );\n\t\t$File->link_to_Object( $LinkOwner );\n\t}\n\n\ttask_end();\n\n\ttask_begin('Creating demo user mary... ');\n\t$mary_moderator_ID = create_user( array(\n\t\t\t'login'     => 'mary',\n\t\t\t'firstname' => 'Mary',\n\t\t\t'lastname'  => 'Wilson',\n\t\t\t'level'     => 4,\t\t// NOTE: these levels define the order of display in the Organization memebers widget\n\t\t\t'gender'    => 'F',\n\t\t\t'Group'     => $moderators_Group,\n\t\t\t'org_IDs'   => $user_org_IDs,\n\t\t\t'fields'    => array(\n\t\t\t\t\t'Micro bio'   => 'I am a demo moderator for this site.'.\"\\n\".'I love it when things are neat!',\n\t\t\t\t\t'Website'     => 'http://b2evolution.net/',\n\t\t\t\t\t'Twitter'     => 'https://twitter.com/b2evolution/',\n\t\t\t\t\t'Facebook'    => 'https://www.facebook.com/b2evolution',\n\t\t\t\t\t'Linkedin'    => 'https://www.linkedin.com/company/b2evolution-net',\n\t\t\t\t\t'GitHub'      => 'https://github.com/b2evolution/b2evolution',\n\t\t\t\t\t'Google Plus' => 'https://plus.google.com/+b2evolution/posts',\n\t\t\t\t)\n\t\t) );\n\tassign_profile_picture( $UserCache->get_by_ID( $mary_moderator_ID ) );\n\ttask_end();\n\n\ttask_begin('Creating demo user jay... ');\n\t$jay_moderator_ID = create_user( array(\n\t\t\t'login'     => 'jay',\n\t\t\t'firstname' => 'Jay',\n\t\t\t'lastname'  => 'Parker',\n\t\t\t'level'     => 3,\n\t\t\t'gender'    => 'M',\n\t\t\t'Group'     => $moderators_Group,\n\t\t\t'org_IDs'   => $user_org_IDs,\n\t\t\t'fields'    => array(\n\t\t\t\t\t'Micro bio'   => 'I am a demo moderator for this site.'.\"\\n\".'I like to keep things clean!',\n\t\t\t\t\t'Website'     => 'http://b2evolution.net/',\n\t\t\t\t\t'Twitter'     => 'https://twitter.com/b2evolution/',\n\t\t\t\t\t'Facebook'    => 'https://www.facebook.com/b2evolution',\n\t\t\t\t\t'Linkedin'    => 'https://www.linkedin.com/company/b2evolution-net',\n\t\t\t\t\t'GitHub'      => 'https://github.com/b2evolution/b2evolution',\n\t\t\t\t\t'Google Plus' => 'https://plus.google.com/+b2evolution/posts',\n\t\t\t\t)\n\t\t) );\n\tassign_profile_picture( $UserCache->get_by_ID( $jay_moderator_ID ) );\n\ttask_end();\n\n\ttask_begin('Creating demo user mark... ');\n\t$dave_blogger_ID = create_user( array(\n\t\t\t'login'     => 'dave',\n\t\t\t'firstname' => 'David',\n\t\t\t'lastname'  => 'Miller',\n\t\t\t'level'     => 2,\n\t\t\t'gender'    => 'M',\n\t\t\t'Group'     => $editors_Group,\n\t\t\t'org_IDs'   => $user_org_IDs,\n\t\t\t'fields'    => array(\n\t\t\t\t\t'Micro bio'   => 'I\\'m a demo author.'.\"\\n\".'I like to write!',\n\t\t\t\t\t'Website'     => 'http://b2evolution.net/',\n\t\t\t\t\t'Twitter'     => 'https://twitter.com/b2evolution/',\n\t\t\t\t\t'Facebook'    => 'https://www.facebook.com/b2evolution',\n\t\t\t\t\t'Linkedin'    => 'https://www.linkedin.com/company/b2evolution-net',\n\t\t\t\t\t'GitHub'      => 'https://github.com/b2evolution/b2evolution',\n\t\t\t\t\t'Google Plus' => 'https://plus.google.com/+b2evolution/posts',\n\t\t\t\t)\n\t\t) );\n\tassign_profile_picture( $UserCache->get_by_ID( $dave_blogger_ID ) );\n\ttask_end();\n\n\ttask_begin('Creating demo user paul... ');\n\t$paul_blogger_ID = create_user( array(\n\t\t\t'login'     => 'paul',\n\t\t\t'firstname' => 'Paul',\n\t\t\t'lastname'  => 'Jones',\n\t\t\t'level'     => 1,\n\t\t\t'gender'    => 'M',\n\t\t\t'Group'     => $editors_Group,\n\t\t\t'org_IDs'   => $user_org_IDs,\n\t\t\t'fields'    => array(\n\t\t\t\t\t'Micro bio'   => 'I\\'m a demo author.'.\"\\n\".'I like to think before I write ;)',\n\t\t\t\t\t'Website'     => 'http://b2evolution.net/',\n\t\t\t\t\t'Twitter'     => 'https://twitter.com/b2evolution/',\n\t\t\t\t\t'Facebook'    => 'https://www.facebook.com/b2evolution',\n\t\t\t\t\t'Linkedin'    => 'https://www.linkedin.com/company/b2evolution-net',\n\t\t\t\t\t'GitHub'      => 'https://github.com/b2evolution/b2evolution',\n\t\t\t\t\t'Google Plus' => 'https://plus.google.com/+b2evolution/posts',\n\t\t\t\t)\n\t\t) );\n\tassign_profile_picture( $UserCache->get_by_ID( $paul_blogger_ID ) );\n\ttask_end();\n\n\ttask_begin('Creating demo user larry... ');\n\t$larry_user_ID = create_user( array(\n\t\t\t'login'     => 'larry',\n\t\t\t'firstname' => 'Larry',\n\t\t\t'lastname'  => 'Smith',\n\t\t\t'level'     => 0,\n\t\t\t'gender'    => 'M',\n\t\t\t'Group'     => $users_Group,\n\t\t\t'fields'    => array(\n\t\t\t\t\t'Micro bio' => 'Hi there!',\n\t\t\t\t)\n\t\t) );\n\t$larry_User = & $UserCache->get_by_ID( $larry_user_ID );\n\tassign_profile_picture( $larry_User );\n\tassign_secondary_groups( $larry_User->ID, array( $blogb_Group->ID ) );\n\ttask_end();\n\n\ttask_begin('Creating demo user kate... ');\n\t$kate_user_ID = create_user( array(\n\t\t\t'login'     => 'kate',\n\t\t\t'firstname' => 'Kate',\n\t\t\t'lastname'  => 'Adams',\n\t\t\t'level'     => 0,\n\t\t\t'gender'    => 'F',\n\t\t\t'Group'     => $users_Group,\n\t\t\t'fields'    => array(\n\t\t\t\t\t'Micro bio' => 'Just me!',\n\t\t\t\t)\n\t\t) );\n\tassign_profile_picture( $UserCache->get_by_ID( $kate_user_ID ) );\n\ttask_end();\n\n\t// Use only these users to create the demo comments, @see create_demo_comment()\n\tglobal $b2evo_demo_comment_users;\n\t$b2evo_demo_comment_users = array( $larry_user_ID, $kate_user_ID, 0 );\n\n\ttask_begin( 'Set settings for demo users... ' );\n\t$DB->query( \"\n\t\tINSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\tVALUES ( 2, 'created_fromIPv4', '\".ip2int( '127.0.0.1' ).\"' ),\n\t\t\t\t( 2, 'user_domain', 'localhost' ),\n\t\t\t\t( 3, 'created_fromIPv4', '\".ip2int( '127.0.0.1' ).\"' ),\n\t\t\t\t( 3, 'user_domain', 'localhost' ),\n\t\t\t\t( 4, 'created_fromIPv4', '\".ip2int( '127.0.0.1' ).\"' ),\n\t\t\t\t( 4, 'user_domain', 'localhost' ),\n\t\t\t\t( 5, 'created_fromIPv4', '\".ip2int( '127.0.0.1' ).\"' ),\n\t\t\t\t( 5, 'user_domain', 'localhost' ),\n\t\t\t\t( 6, 'created_fromIPv4', '\".ip2int( '127.0.0.1' ).\"' ),\n\t\t\t\t( 6, 'user_domain', 'localhost' ),\n\t\t\t\t( 7, 'created_fromIPv4', '\".ip2int( '127.0.0.1' ).\"' ),\n\t\t\t\t( 7, 'user_domain', 'localhost' )\" );\n\ttask_end();\n\n\tglobal $default_locale, $query, $timestamp;\n\tglobal $blog_all_ID, $blog_home_ID, $blog_a_ID, $blog_b_ID, $blog_photoblog_ID, $blog_forums_ID, $blog_manual_ID;\n\n\t$default_blog_longdesc = T_('This is the long description for the blog named \\'%s\\'. %s');\n\t$default_blog_access_type = 'relative';\n\n\t$create_sample_contents = param( 'create_sample_contents', 'string', '' );\n\tif( $create_sample_contents == 'all' )\n\t{\t// Array contains which collections should be installed\n\t\t$install_collection_home =   1;\n\t\t$install_collection_bloga =  1;\n\t\t$install_collection_blogb =  1;\n\t\t$install_collection_photos = 1;\n\t\t$install_collection_forums = 1;\n\t\t$install_collection_manual = 1;\n\t}\n\telse\n\t{\t// Array contains which collections should be installed\n\t\t$collections = param( 'collections', 'array:string', array() );\n\t\t$install_collection_home = in_array( 'home', $collections );\n\t\t$install_collection_bloga = in_array( 'a', $collections );\n\t\t$install_collection_blogb = in_array( 'b', $collections );\n\t\t$install_collection_photos = in_array( 'photos', $collections );\n\t\t$install_collection_forums = in_array( 'forums', $collections );\n\t\t$install_collection_manual = in_array( 'manual', $collections );\n\t}\n\n\ttask_begin( 'Creating default blogs... ' );\n\n\t// Store the item IDs in this array in order to create additional comments\n\t$additional_comments_item_IDs = array();\n\n\tif( $install_collection_home )\n\t{ // Install Home blog\n\t\t$blog_shortname = T_('Home');\n\t\t$blog_home_access_type = ( $install_test_features ) ? 'default' : $default_blog_access_type;\n\t\t$blog_more_longdesc = '<br />\n<br />\n<strong>'.T_('The main purpose for this blog is to be included as a side item to other blogs where it will display your favorite/related links.').'</strong>';\n\t\t$blog_home_ID = create_blog(\n\t\t\tT_('Homepage Title'),\n\t\t\t$blog_shortname,\n\t\t\t'home',\n\t\t\tT_('Change this as you like'),\n\t\t\tsprintf( $default_blog_longdesc, $blog_shortname, $blog_more_longdesc ),\n\t\t\t2, // Skin ID\n\t\t\t'main',\n\t\t\t'any',\n\t\t\t1,\n\t\t\t$blog_home_access_type,\n\t\t\ttrue,\n\t\t\t'never',\n\t\t\t$jay_moderator_ID );\n\n\t\tif( ! empty( $blog_home_ID ) )\n\t\t{ // Save ID of this blog in settings table, It is used on top menu, file \"/skins_site/_site_body_header.inc.php\"\n\t\t\t$DB->query( 'INSERT INTO T_settings ( set_name, set_value )\n\t\t\t\tVALUES ( '.$DB->quote( 'info_blog_ID' ).', '.$DB->quote( $blog_home_ID ).' )' );\n\t\t}\n\t}\n\n\tif( $install_collection_bloga )\n\t{ // Install Blog A\n\t\t$blog_shortname = 'Blog A';\n\t\t$blog_a_access_type = ( $install_test_features ) ? 'default' : $default_blog_access_type;\n\t\t$blog_stub = 'a';\n\t\t$blog_a_ID = create_blog(\n\t\t\tT_('Public Blog'),\n\t\t\t$blog_shortname,\n\t\t\t$blog_stub,\n\t\t\tT_('This blog is completely public...'),\n\t\t\tsprintf( $default_blog_longdesc, $blog_shortname, '' ),\n\t\t\t1, // Skin ID\n\t\t\t'std',\n\t\t\t'any',\n\t\t\t1,\n\t\t\t$blog_a_access_type,\n\t\t\ttrue,\n\t\t\t'public',\n\t\t\t$jay_moderator_ID );\n\t}\n\n\tif( $install_collection_blogb )\n\t{ // Install Blog B\n\t\t$blog_shortname = 'Blog B';\n\t\t$blog_b_access_type = ( $install_test_features ) ? 'index.php' : $default_blog_access_type;\n\t\t$blog_stub = 'b';\n\t\t$blog_b_ID = create_blog(\n\t\t\tT_('Members-Only Blog'),\n\t\t\t$blog_shortname,\n\t\t\t$blog_stub,\n\t\t\tT_('This blog has restricted access...'),\n\t\t\tsprintf( $default_blog_longdesc, $blog_shortname, '' ),\n\t\t\t1, // Skin ID\n\t\t\t'std',\n\t\t\t'',\n\t\t\t0,\n\t\t\t$blog_b_access_type,\n\t\t\ttrue,\n\t\t\t'public',\n\t\t\t$paul_blogger_ID );\n\n\t\t$BlogCache = & get_BlogCache();\n\t\tif( $b_Blog = $BlogCache->get_by_ID( $blog_b_ID, false, false ) )\n\t\t{\n\t\t\t$b_Blog->set_setting( 'front_disp', 'front' );\n\t\t\t$b_Blog->set_setting( 'skin2_layout', 'single_column' );\n\t\t\t$b_Blog->set( 'advanced_perms', 1 );\n\t\t\t$b_Blog->set_setting( 'allow_access', 'members' );\n\t\t\t$b_Blog->dbupdate();\n\t\t}\n\t}\n\n\tif( $install_collection_photos )\n\t{ // Install Photos blog\n\t\t$blog_shortname = 'Photos';\n\t\t$blog_stub = 'photos';\n\t\t$blog_more_longdesc = '<br />\n<br />\n<strong>'.T_(\"This is a photoblog, optimized for displaying photos.\").'</strong>';\n\t\t$blog_photoblog_ID = create_blog(\n\t\t\t'Photos',\n\t\t\t$blog_shortname,\n\t\t\t$blog_stub,\n\t\t\tT_('This blog shows photos...'),\n\t\t\tsprintf( $default_blog_longdesc, $blog_shortname, $blog_more_longdesc ),\n\t\t\t3, // Skin ID\n\t\t\t'photo', '', 0, 'relative', true, 'public',\n\t\t\t$dave_blogger_ID );\n\t}\n\n\tif( $install_collection_forums )\n\t{ // Install Forums blog\n\t\t$blog_shortname = 'Forums';\n\t\t$blog_stub = 'forums';\n\t\t$blog_forums_ID = create_blog(\n\t\t\tT_('Forums Title'),\n\t\t\t$blog_shortname,\n\t\t\t$blog_stub,\n\t\t\tT_('Tagline for Forums'),\n\t\t\tsprintf( $default_blog_longdesc, $blog_shortname, '' ),\n\t\t\t4, // Skin ID\n\t\t\t'forum', 'any', 1, 'relative', false, 'public',\n\t\t\t$paul_blogger_ID );\n\t}\n\n\tif( $install_collection_manual )\n\t{ // Install Manual blog\n\t\t$blog_shortname = 'Manual';\n\t\t$blog_stub = 'manual';\n\t\t$blog_manual_ID = create_blog(\n\t\t\tT_('Manual Title'),\n\t\t\t$blog_shortname,\n\t\t\t$blog_stub,\n\t\t\tT_('Tagline for this online manual'),\n\t\t\tsprintf( $default_blog_longdesc, $blog_shortname, '' ),\n\t\t\t5, // Skin ID\n\t\t\t'manual', 'any', 1, $default_blog_access_type, false, 'public',\n\t\t\t$dave_blogger_ID );\n\t}\n\n\t$BlogCache = & get_BlogCache();\n\tif( $first_Blog = & $BlogCache->get_by_ID( 1, false, false ) )\n\t{ // Set first blog as default login and default messaging collection\n\t\t$DB->query( 'INSERT INTO T_settings ( set_name, set_value )\n\t\t\tVALUES ( '.$DB->quote( 'login_blog_ID' ).', '.$DB->quote( $first_Blog->ID ).' ),\n\t\t\t\t\t\t ( '.$DB->quote( 'msg_blog_ID' ).', '.$DB->quote( $first_Blog->ID ).' )' );\n\t}\n\n\ttask_end();\n\n\tglobal $query, $timestamp;\n\n\ttask_begin( 'Creating sample categories... ' );\n\n\tif( $install_collection_bloga )\n\t{ // Create categories for blog A\n\t\t$cat_ann_a = cat_create( T_('Welcome'), 'NULL', $blog_a_ID );\n\t\t$cat_news = cat_create( T_('News'), 'NULL', $blog_a_ID );\n\t\t$cat_bg = cat_create( T_('Background'), 'NULL', $blog_a_ID );\n\t\t$cat_fun = cat_create( T_('Fun'), 'NULL', $blog_a_ID );\n\t\t$cat_life = cat_create( T_('In real life'), $cat_fun, $blog_a_ID );\n\t\t$cat_web = cat_create( T_('On the web'), $cat_fun, $blog_a_ID );\n\t\t$cat_sports = cat_create( T_('Sports'), $cat_life, $blog_a_ID );\n\t\t$cat_movies = cat_create( T_('Movies'), $cat_life, $blog_a_ID );\n\t\t$cat_music = cat_create( T_('Music'), $cat_life, $blog_a_ID );\n\n\t\tif( $a_Blog = $BlogCache->get_by_ID( $blog_a_ID, false, false ) )\n\t\t{\n\t\t\t$a_Blog->set_setting( 'default_cat_ID', $cat_ann_a );\n\t\t\t$a_Blog->dbupdate();\n\t\t}\n\t}\n\n\tif( $install_collection_blogb )\n\t{ // Create categories for blog B\n\t\t$cat_ann_b = cat_create( T_('Announcements'), 'NULL', $blog_b_ID );\n\t\t$cat_b2evo = cat_create( T_('b2evolution Tips'), 'NULL', $blog_b_ID );\n\t\t$cat_additional_skins = cat_create( T_('Get additional skins'), 'NULL', $blog_b_ID );\n\n\t\tif( $b_Blog = $BlogCache->get_by_ID( $blog_b_ID, false, false ) )\n\t\t{\n\t\t\t$b_Blog->set_setting( 'default_cat_ID', $cat_ann_b );\n\t\t\t$b_Blog->dbupdate();\n\t\t}\n\t}\n\n\tif( $install_collection_home )\n\t{ // Create categories for home blog\n\t\t$cat_home_b2evo = cat_create( 'b2evolution', 'NULL', $blog_home_ID );\n\t\t$cat_home_contrib = cat_create( T_('Contributors'), 'NULL', $blog_home_ID );\n\n\t\tif( $home_Blog = $BlogCache->get_by_ID( $blog_home_ID, false, false ) )\n\t\t{\n\t\t\t$home_Blog->set_setting( 'default_cat_ID', $cat_home_b2evo );\n\t\t\t$home_Blog->dbupdate();\n\t\t}\n\t}\n\n\tif( $install_collection_photos )\n\t{ // Create categories for photoblog\n\t\t$cat_photo_album = cat_create( T_('Landscapes'), 'NULL', $blog_photoblog_ID );\n\n\t\tif( $photoblog_Blog = $BlogCache->get_by_ID( $blog_photoblog_ID, false, false ) )\n\t\t{\n\t\t\t$photoblog_Blog->set_setting( 'default_cat_ID', $cat_photo_album );\n\t\t\t$photoblog_Blog->dbupdate();\n\t\t}\n\t}\n\n\tif( $install_collection_forums )\n\t{ // Create categories for forums\n\t\t$cat_forums_forum_group = cat_create( T_('A forum group'), 'NULL', $blog_forums_ID, NULL, false, 1, NULL, true );\n\t\t\t$cat_forums_ann = cat_create( T_('Welcome'), $cat_forums_forum_group, $blog_forums_ID, T_('Welcome description'), false, 1 );\n\t\t\t$cat_forums_aforum = cat_create( T_('A forum'), $cat_forums_forum_group, $blog_forums_ID, T_('Short description of this forum'), false, 2 );\n\t\t\t$cat_forums_anforum = cat_create( T_('Another forum'), $cat_forums_forum_group, $blog_forums_ID, T_('Short description of this forum'), false, 3 );\n\t\t$cat_forums_another_group = cat_create( T_('Another group'), 'NULL', $blog_forums_ID, NULL, false, 2, NULL, true );\n\t\t\t$cat_forums_bg = cat_create( T_('Background'), $cat_forums_another_group, $blog_forums_ID, T_('Background description'), false, 1 );\n\t\t\t$cat_forums_news = cat_create( T_('News'), $cat_forums_another_group, $blog_forums_ID, T_('News description'), false, 2 );\n\t\t\t$cat_forums_fun = cat_create( T_('Fun'), $cat_forums_another_group, $blog_forums_ID, T_('Fun description'), false, 3 );\n\t\t\t\t$cat_forums_life = cat_create( T_('In real life'), $cat_forums_fun, $blog_forums_ID, NULL, false, 4, 'alpha' );\n\t\t\t\t\t$cat_forums_movies = cat_create( T_('Movies'), $cat_forums_life, $blog_forums_ID );\n\t\t\t\t\t$cat_forums_music = cat_create( T_('Music'), $cat_forums_life, $blog_forums_ID );\n\t\t\t\t\t$cat_forums_sports = cat_create( T_('Sports'), $cat_forums_life, $blog_forums_ID );\n\t\t\t\t$cat_forums_web = cat_create( T_('On the web'), $cat_forums_fun, $blog_forums_ID, NULL, false, 5 );\n\n\t\tif( $forums_Blog = $BlogCache->get_by_ID( $blog_forums_ID, false, false ) )\n\t\t{\n\t\t\t$forums_Blog->set_setting( 'default_cat_ID', $cat_forums_forum_group );\n\t\t\t$forums_Blog->dbupdate();\n\t\t}\n\t}\n\n\tif( $install_collection_manual )\n\t{ // Create categories for manual\n\t\t$cat_manual_intro = cat_create( T_('Introduction'), NULL, $blog_manual_ID, NULL, false, 10 );\n\t\t$cat_manual_getstarted = cat_create( T_('Getting Started'), NULL, $blog_manual_ID, NULL, false, 20 );\n\t\t$cat_manual_userguide = cat_create( T_('User Guide'), NULL, $blog_manual_ID, NULL, false, 30 );\n\t\t$cat_manual_reference = cat_create( T_('Reference'), NULL, $blog_manual_ID, NULL, false, 40, 'alpha' );\n\n\t\t$cat_manual_everyday = cat_create( T_('Collections'), $cat_manual_reference, $blog_manual_ID, NULL, false, 10 );\n\t\t$cat_manual_advanced = cat_create( T_('Other'), $cat_manual_reference, $blog_manual_ID, NULL, false, 5 );\n\n\t\t$cat_manual_blogs = cat_create( T_('Blogs'), $cat_manual_everyday, $blog_manual_ID, NULL, false, 35 );\n\t\t$cat_manual_photos = cat_create( T_('Photo Albums'), $cat_manual_everyday, $blog_manual_ID, NULL, false, 25 );\n\t\t$cat_manual_forums = cat_create( T_('Forums'), $cat_manual_everyday, $blog_manual_ID, NULL, false, 5 );\n\n\t\tif( $manual_Blog = $BlogCache->get_by_ID( $blog_manual_ID, false, false ) )\n\t\t{\n\t\t\t$manual_Blog->set_setting( 'default_cat_ID', $cat_manual_intro );\n\t\t\t$manual_Blog->dbupdate();\n\t\t}\n\t}\n\n\ttask_end();\n\n\n\t$info_page = T_('<p>This website is powered by b2evolution.</p>\n\n<p>You are currently looking at an info page about \"%s\".</p>\n\n<p>Info pages are very much like regular posts, except that they do not appear in the regular flow of posts. They appear as info pages in the menu instead.</p>\n\n<p>If needed, skins can format info pages differently from regular posts.</p>');\n\n\n\t// Update the progress bar status\n\tupdate_install_progress_bar();\n\n\t// Use this var to shift the posts of the collections in time below:\n\t$timeshift = 0;\n\n\tif( $install_collection_home )\n\t{ // ---------------- Insert the POSTS for Home blog ---------------- //\n\t\ttask_begin( 'Creating sample posts for Collection Home... ' );\n\n\t\t// Insert three ADVERTISEMENTS for home blog:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $jay_moderator_ID, /* TRANS: sample ad content */ T_('b2evo: The software for blog pros!'), /* TRANS: sample ad content */ T_('The software for blog pros!'), $now, $cat_home_b2evo,\n\t\t\tarray(), 'published', '#', '', 'http://b2evolution.net', 'open', array('default'), 'Advertisement' );\n\t\t$edit_File = new File( 'shared', 0, 'banners/b2evo-125-pros.png' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $jay_moderator_ID, /* TRANS: sample ad content */ T_('b2evo: Better Blog Software!'), /* TRANS: sample ad content */ T_('Better Blog Software!'), $now, $cat_home_b2evo,\n\t\t\tarray(), 'published', '#', '', 'http://b2evolution.net', 'open', array('default'), 'Advertisement' );\n\t\t$edit_File = new File( 'shared', 0, 'banners/b2evo-125-better.png' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $jay_moderator_ID, /* TRANS: sample ad content */ T_('b2evo: The other blog tool!'), /* TRANS: sample ad content */ T_('The other blog tool!'), $now, $cat_home_b2evo,\n\t\t\tarray(), 'published', '#', '', 'http://b2evolution.net', 'open', array('default'), 'Advertisement' );\n\t\t$edit_File = new File( 'shared', 0, 'banners/b2evo-125-other.png' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t// Insert a post into info blog:\n\t\t// walter : a weird line of code to create a post in the home a minute after the others.\n\t\t// It will show a bug on home agregation by category\n\t\t$timestamp++;\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, 'Evo Factory', '', $now, $cat_home_contrib, array(), 'published', 'en-US', '', 'http://evofactory.com/', 'disabled', array(), 'Sidebar link' );\n\n\t\t// Insert a post into home:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, 'Francois', '', $now, $cat_home_contrib, array(), 'published', 'fr-FR', '', 'http://fplanque.com/', 'disabled', array(), 'Sidebar link' );\n\n\t\t// Insert a post into home:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, 'Blog news', '', $now, $cat_home_b2evo, array(), 'published', 'en-US', '', 'http://b2evolution.net/news.php', 'disabled', array(), 'Sidebar link' );\n\n\t\t// Insert a post into home:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, 'Web hosting', '', $now, $cat_home_b2evo, array(), 'published', 'en-US', '', 'http://b2evolution.net/web-hosting/blog/', 'disabled', array(), 'Sidebar link' );\n\n\t\t// Insert a post into home:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, 'Manual', '', $now, $cat_home_b2evo, array(), 'published',\t'en-US', '', get_manual_url( NULL ), 'disabled', array(), 'Sidebar link' );\n\n\t\t// Insert a post into home:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, 'Support', '', $now, $cat_home_b2evo, array(), 'published', 'en-US', '', 'http://forums.b2evolution.net/', 'disabled', array(), 'Sidebar link' );\n\n\t\t// Insert a PAGE:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_(\"About this site\"), T_(\"<p>This blog platform is powered by b2evolution.</p>\n\n<p>You are currently looking at an info page about this site.</p>\n\n<p>Info pages are very much like regular posts, except that they do not appear in the regular flow of posts. They appear as info pages in the menu instead.</p>\n\n<p>If needed, skins can format info pages differently from regular posts.</p>\"), $now, $cat_home_b2evo,\n\t\t\tarray( $cat_home_b2evo ), 'published', '#', '', '', 'open', array('default'), 'Standalone Page' );\n\t\t$edit_File = new File( 'shared', 1, 'logos/b2evolution_1016x208_wbg.png' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Homepage post'), T_('<p>This is the Home page of this site.</p>\n\n<p>More specifically it is the \"Front page\" of the first collection of this site. This first collection is called \"Home\". Other sample collections have been created. You can access them by clicking \"Blog A\", \"Blog B\", \"Photos\", etc. in the menu bar at the top of this page.</p>\n\n<p>You can add collections at will. You can also remove them (including this \"Home\" collection) if you don\\'t need one.</p>'),\n\t\t\t$now, $cat_home_b2evo, array(), 'published', '#', '', '', 'open', array( 'default' ), 'Intro-Front' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Terms & Conditions'), '<p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n\n<p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>',\n\t\t\t$now, $cat_home_b2evo, array(), 'published', '#', '', '', 'open', array( 'default' ), 'Terms & Conditions' );\n\t\tif( $edited_Item->ID > 0 )\n\t\t{\t// Use this post as default terms & conditions:\n\t\t\t$Settings->set( 'site_terms', $edited_Item->ID );\n\t\t\t$Settings->dbupdate();\n\t\t}\n\n\t\t// Update the progress bar status\n\t\tupdate_install_progress_bar();\n\n\t\ttask_end();\n\t}\n\n\tif( $install_collection_bloga )\n\t{ // ---------------- Insert the POSTS for Blog A ---------------- //\n\t\ttask_begin( 'Creating sample posts for Collection Blog A... ' );\n\n\t\t// Set all posts of this collection with 24 hours ago relating on previous collection:\n\t\t$timeshift += 86400;\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Main Intro post'), T_('This is the main intro post. It appears on the homepage only.'),\n\t\t\t$now, $cat_ann_a, array(), 'published', '#', '', '', 'open', array('default'), 'Intro-Main' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('First Post'), T_('<p>This is the first post.</p>\n\n<p>It appears in a single category.</p>'), $now, $cat_ann_a );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Second post'), T_('<p>This is the second post.</p>\n\n<p>It appears in multiple categories.</p>'), $now, $cat_news, array( $cat_ann_a ) );\n\n\t\t// Insert a PAGE:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, T_(\"About Blog A\"), sprintf( $info_page, T_('Blog A') ), $now, $cat_ann_a,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Standalone Page' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('This is a multipage post'), T_('<p>This is page 1 of a multipage post.</p>\n\n<blockquote><p>This is a Block Quote.</p></blockquote>\n\n<p>You can see the other pages by clicking on the links below the text.</p>').'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 2 ).$lorem_2more.'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 3 ).$lorem_1paragraph.'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 4 ).'\n\n'.T_('<p>It is the last page.</p>'), $now, $cat_bg );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Extended post with no teaser'), T_('<p>This is an extended post with no teaser. This means that you won\\'t see this teaser any more when you click the \"more\" link.</p>').$lorem_1paragraph\n\t.'[teaserbreak]\n\n'.T_('<p>This is the extended text. You only see it when you have clicked the \"more\" link.</p>').$lorem_2more, $now, $cat_bg );\n\t\t$edited_Item->set_setting( 'hide_teaser', '1' );\n\t\t$edited_Item->dbsave();\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set( 'featured', 1 );\n\t\t$edited_Item->set_tags_from_string( 'photo,demo' );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Extended post'), T_('<p>This is an extended post. This means you only see this small teaser by default and you must click on the link below to see more.</p>').$lorem_1paragraph\n\t.'[teaserbreak]\n\n'.T_('<p>This is the extended text. You only see it when you have clicked the \"more\" link.</p>').$lorem_2more, $now, $cat_bg );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/john-ford-point.jpg' );\n\t\t$edit_File->link_to_Object( $LinkOwner, 1, 'cover' );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monument-valley-road.jpg' );\n\t\t$edit_File->link_to_Object( $LinkOwner, 2, 'teaser' );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monuments.jpg' );\n\t\t$edit_File->link_to_Object( $LinkOwner, 3, 'aftermore' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->set_setting( 'custom_double_1', '123' );\n\t\t$edited_Item->set_setting( 'custom_double_2', '456' );\n\t\t$edited_Item->set_setting( 'custom_varchar_3', 'abc' );\n\t\t$edited_Item->set_setting( 'custom_varchar_4', 'Enter your own values' );\n\t\t$post_custom_fields_ID = $edited_Item->insert( $jay_moderator_ID, T_('Custom Fields Example'), T_('<p>This post has a special post type called \"Post with custom fields\".</p>')\n\t\t\t\t.T_('<p>This post type defines 4 custom fields.</p>')\n\t\t\t\t.T_('<p>This post has sample values for these for 4 fields. You can see them below</p>'),\n\t\t\t$now, $cat_bg, array(), 'published', '#', '', '', 'open', array('default'), 'Post with Custom Fields' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->set( 'parent_ID', $post_custom_fields_ID ); // Set parent post ID\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Child Post Example'), T_('<p>This post has a special post type called \"Child Post\".</p>'),\n\t\t\t$now, $cat_bg, array(), 'published', '#', '', '', 'open', array('default'), 'Child Post' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo,demo' );\n\t\t$edited_Item->set( 'featured', 1 );\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Image post'), T_('<p>This post has several images attached to it. Each one uses a different Attachment Position. Each may be displayed differently depending on the skin they are viewed in.</p>\n\n<p>Check out the photoblog (accessible through the links at the top) to see a completely different skin focused more on the photos than on the blog text.</p>'), $now, $cat_bg );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monument-valley.jpg' );\n\t\t$edit_File->link_to_Object( $LinkOwner, 1, 'cover' );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monuments.jpg' );\n\t\t$edit_File->link_to_Object( $LinkOwner, 2, 'teaser' );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley' );\n\t\t$edit_File->link_to_Object( $LinkOwner, 3, 'teaser' );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/bus-stop-ahead.jpg' );\n\t\t$edit_File->link_to_Object( $LinkOwner, 4, 'aftermore' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$additional_comments_item_IDs[] = $edited_Item->insert( $jay_moderator_ID, T_(\"Welcome to your b2evolution-powered website!\"),\n\t\t\tT_(\"<p>To get you started, the installer has automatically created several sample collections and populated them with some sample contents. Of course, this starter structure is all yours to edit. Until you do that, though, here's what you will find on this site:</p>\n\n<ul>\n<li><strong>Blog A</strong>: You are currently looking at it. It contains a few sample posts, using simple features of b2evolution.</li>\n<li><strong>Blog B</strong>: You can access it from the link at the top of the page. It contains information about more advanced features. Note that it is deliberately using a different skin from Blog A to give you an idea of what's possible.</li>\n<li><strong>Photos</strong>: This collection is an example of how you can use b2evolution to showcase photos, with photos grouped into photo albums.</li>\n<li><strong>Forums</strong>: This collection is a discussion forum (a.k.a. bulletin board) allowing your users to discuss among themselves.</li>\n<li><strong>Manual</strong>: This showcases how b2evolution can be used to publish structured content such as an online manual or book.</li>\n\n</ul>\n\n<p>You can add new collections of any type (blog, photos, forums, etc.), delete unwanted one and customize existing collections (title, sidebar, blog skin, widgets, etc.) from the admin interface.</p>\"), $now, $cat_ann_a );\n\t\t$edit_File = new File( 'shared', 0, 'logos/b2evolution_1016x208_wbg.png' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t// Update the progress bar status\n\t\tupdate_install_progress_bar();\n\n\t\ttask_end();\n\t}\n\n\tif( $install_collection_blogb )\n\t{ // ---------------- Insert the POSTS for Blog B ---------------- //\n\t\ttask_begin( 'Creating sample posts for Collection Blog B... ' );\n\n\t\t// Set all posts of this collection with 24 hours ago relating on previous collection:\n\t\t$timeshift += 86400;\n\n\t\t// Insert sidebar links into Blog B\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $paul_blogger_ID, 'Skin Faktory', '', $now, $cat_additional_skins, array(), 'published', 'en-US', '', 'http://www.skinfaktory.com/', 'open', array('default'), 'Sidebar link' );\n\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $paul_blogger_ID, T_('b2evo skins repository'), '', $now, $cat_additional_skins, array(), 'published', 'en-US', '', 'http://skins.b2evolution.net/', 'open', array('default'), 'Sidebar link' );\n\n\t\t// Insert a PAGE:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"About Blog B\"), sprintf( $info_page, T_('Blog B') ), $now, $cat_ann_b,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Standalone Page' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $paul_blogger_ID, T_('Welcome to Blog B'), sprintf( T_('<p>This is the intro post for the front page of Blog B.</p>\n\n<p>Blog B is currently configured to show a front page like this one instead of directly showing the blog\\'s posts.</p>\n\n<ul>\n<li>To view the blog\\'s posts, click on \"News\" in the menu above.</li>\n<li>If you don\\'t want to have such a front page, you can disable it in the Blog\\'s settings > Features > <a %s>Front Page</a>. You can also see an example of a blog without a Front Page in Blog A</li>\n</ul>'), 'href=\"'.$admin_url.'?ctrl=coll_settings&amp;tab=home&amp;blog='.$blog_a_ID.'\"' ),\n\t\t\t\t$now, $cat_b2evo, array(), 'published', '#', '', '', 'open', array('default'), 'Intro-Front' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"b2evolution tips category &ndash; Sub Intro post\"), T_(\"This uses post type \\\"Intro-Cat\\\" and is attached to the desired Category(ies).\"),\n\t\t\t$now, $cat_b2evo, array(), 'published', '#', '', '', 'open', array('default'), 'Intro-Cat' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'widgets,intro' );\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"Widgets tag &ndash; Sub Intro post\"), T_(\"This uses post type \\\"Intro-Tag\\\" and is tagged with the desired Tag(s).\"),\n\t\t\t$now, $cat_b2evo, array(), 'published', '#', '', '', 'open', array('default'), 'Intro-Tag' );\n\n\t\t// Insert a post:\n\t\t// TODO: move to Blog A\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"Featured post\"), T_(\"<p>This is a demo of a featured post.</p>\n\n<p>It will be featured whenever we have no specific \\\"Intro\\\" post to display for the current request. To see it in action, try displaying the \\\"Announcements\\\" category.</p>\n\n<p>Also note that when the post is featured, it does not appear in the regular post flow.</p>\").$lorem_1paragraph,\n\t\t\t$now, $cat_b2evo, array( $cat_ann_b ) );\n\t\t$edited_Item->set( 'featured', 1 );\n\t\t$edited_Item->dbsave();\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"Apache optimization...\"), sprintf( T_(\"<p>b2evolution comes with an <code>.htaccess</code> file destined to optimize the way b2evolution is handled by your webseerver (if you are using Apache). In some circumstances, that file may not be automatically activated at setup. Please se the man page about <a %s>Tricky Stuff</a> for more information.</p>\n\n<p>For further optimization, please review the manual page about <a %s>Performance optimization</a>. Depending on your current configuration and on what your <a %s>web hosting</a> company allows you to do, you may increase the speed of b2evolution by up to a factor of 10!</p>\"),\n'href=\"'.get_manual_url( 'tricky-stuff' ).'\"',\n'href=\"'.get_manual_url( 'performance-optimization' ).'\"',\n'href=\"http://b2evolution.net/web-hosting/\"' ),\n\t\t\t$now, $cat_b2evo, array( $cat_ann_b ) );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'skins' );\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"Skins, Stubs, Templates &amp; website integration...\"), T_(\"<p>By default, blogs are displayed using an evoskin. (More on skins in another post.)</p>\n\n<p>This means, blogs are accessed through '<code>index.php</code>', which loads default parameters from the database and then passes on the display job to a skin.</p>\n\n<p>Alternatively, if you don't want to use the default DB parameters and want to, say, force a skin, a category or a specific linkblog, you can create a stub file like the provided '<code>a_stub.php</code>' and call your blog through this stub instead of index.php .</p>\n\n<p>Finally, if you need to do some very specific customizations to your blog, you may use plain templates instead of skins. In this case, call your blog through a full template, like the provided '<code>a_noskin.php</code>'.</p>\n\n<p>If you want to integrate a b2evolution blog into a complex website, you'll probably want to do it by copy/pasting code from <code>a_noskin.php</code> into a page of your website.</p>\n\n<p>You will find more information in the stub/template files themselves. Open them in a text editor and read the comments in there.</p>\n\n<p>Either way, make sure you go to the blogs admin and set the correct access method/URL for your blog. Otherwise, the permalinks will not function properly.</p>\"), $now, $cat_b2evo );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'widgets' );\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"About widgets...\"), T_('<p>b2evolution blogs are installed with a default selection of Widgets. For example, the sidebar of this blog includes widgets like a calendar, a search field, a list of categories, a list of XML feeds, etc.</p>\n\n<p>You can add, remove and reorder widgets from the Blog Settings tab in the admin interface.</p>\n\n<p>Note: in order to be displayed, widgets are placed in containers. Each container appears in a specific place in an evoskin. If you change your blog skin, the new skin may not use the same containers as the previous one. Make sure you place your widgets in containers that exist in the specific skin you are using.</p>'), $now, $cat_b2evo );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'skins' );\n\t\t$edited_Item->insert( $paul_blogger_ID, T_(\"About skins...\"), sprintf( T_('<p>By default, b2evolution blogs are displayed using an evoskin.</p>\n\n<p>You can change the skin used by any blog by editing the blog settings in the admin interface.</p>\n\n<p>You can download additional skins from the <a href=\"http://skins.b2evolution.net/\" target=\"_blank\">skin site</a>. To install them, unzip them in the /blogs/skins directory, then go to General Settings &gt; Skins in the admin interface and click on \"Install new\".</p>\n\n<p>You can also create your own skins by duplicating, renaming and customizing any existing skin folder from the /blogs/skins directory.</p>\n\n<p>To start customizing a skin, open its \"<code>index.main.php</code>\" file in an editor and read the comments in there. Note: you can also edit skins in the \"Files\" tab of the admin interface.</p>\n\n<p>And, of course, read the <a href=\"%s\" target=\"_blank\">manual on skins</a>!</p>'), get_manual_url( 'skin-structure' ) ), $now, $cat_b2evo );\n\t\t$edited_Item->dbsave();\n\t\t// $edited_Item->insert_update_tags( 'update' );\n\n\t\t// Update the progress bar status\n\t\tupdate_install_progress_bar();\n\n\t\ttask_end();\n\t}\n\n\tif( $install_collection_photos )\n\t{ // ---------------- Insert the POSTS for Photos blog ---------------- //\n\t\ttask_begin( 'Creating sample posts for Collection Photos... ' );\n\n\t\t// Set all posts of this collection with 24 hours ago relating on previous collection:\n\t\t$timeshift += 86400;\n\n\t\t// Insert a PAGE:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('About Photos'), sprintf( $info_page, T_('Photos') ), $now, $cat_photo_album,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Standalone Page' );\n\n\t\t// Insert a post into photoblog:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Sunset'), '',\n\t\t\t$now, $cat_photo_album, array(), 'published','en-US' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File = new File( 'shared', 0, 'sunset/sunset.jpg' );\n\t\t$photo_link_1_ID = $edit_File->link_to_Object( $LinkOwner, 1 );\n\n\t\t// Insert a post into photoblog:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Bus Stop Ahead'), 'In the middle of nowhere: a school bus stop where you wouldn\\'t really expect it!',\n\t\t\t$now, $cat_photo_album, array(), 'published','en-US', '', 'http://fplanque.com/photo/monument-valley' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/bus-stop-ahead.jpg' );\n\t\t$photo_link_1_ID = $edit_File->link_to_Object( $LinkOwner, 1 );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/john-ford-point.jpg' );\n\t\t$photo_link_2_ID = $edit_File->link_to_Object( $LinkOwner, 2 );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monuments.jpg' );\n\t\t$photo_link_3_ID = $edit_File->link_to_Object( $LinkOwner, 3 );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monument-valley-road.jpg' );\n\t\t$photo_link_4_ID = $edit_File->link_to_Object( $LinkOwner, 4 );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monument-valley.jpg' );\n\t\t$photo_link_5_ID = $edit_File->link_to_Object( $LinkOwner, 5 );\n\n\t\tif( $install_test_features )\n\t\t{ // Add examples for infodots plugin\n\t\t\t$edited_Item->set_tags_from_string( 'photo,demo' );\n\t\t\t$edited_Item->set( 'content', $edited_Item->get( 'content' )\n\t\t\t\t.sprintf( '\n[infodot:%s:191:36:100px]School bus [b]here[/b]\n\n#### In the middle of nowhere:\na school bus stop where you wouldn\\'t really expect it!\n\n1. Item 1\n2. Item 2\n3. Item 3\n\n[enddot]\n[infodot:%s:104:99]cowboy and horse[enddot]\n[infodot:%s:207:28:15em]Red planet[enddot]', $photo_link_1_ID, $photo_link_2_ID, $photo_link_4_ID ) );\n\t\t\t$edited_Item->dbupdate();\n\t\t\techo_install_log( 'TEST FEATURE: Adding examples for plugin \"Info dots renderer\" on item #'.$edited_Item->ID );\n\t\t}\n\n\t\t// Update the progress bar status\n\t\tupdate_install_progress_bar();\n\n\t\ttask_end();\n\t}\n\n\tif( $install_collection_forums || $install_collection_manual )\n\t{ // Init a content for post with markdown examples\n\t\t$markdown_examples_content = T_('Heading\n=======\n\nSub-heading\n-----------\n\n### H3 header\n\n#### H4 header ####\n\n> Email-style angle brackets\n> are used for blockquotes.\n\n> > And, they can be nested.\n\n> ##### Headers in blockquotes\n>\n> * You can quote a list.\n> * Etc.\n\n[This is a link](http://b2evolution.net/) if Links are turned on in the markdown plugin settings\n\nParagraphs are separated by a blank line.\n\n    This is a preformatted\n    code block.\n\nText attributes *Italic*, **bold**, `monospace`.\n\nShopping list:\n\n* apples\n* oranges\n* pears\n\nThe rain---not the reign---in Spain.');\n\t}\n\n\tif( $install_collection_forums )\n\t{ // ---------------- Insert the POSTS for Forums Collection ---------------- //\n\t\ttask_begin( 'Creating sample posts for Collection Forums... ' );\n\n\t\t// Set all posts of this collection with 24 hours ago relating on previous collection:\n\t\t$timeshift += 86400;\n\n\t\t// Insert a PAGE:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( 1, T_(\"About Forums\"), sprintf( $info_page, T_('Forums') ), $now, $cat_forums_ann,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Standalone Page' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $mary_moderator_ID, T_('First Topic'), T_('<p>This is the first topic.</p>\n\n<p>It appears in a single category.</p>').$lorem_2more, $now, $cat_forums_ann );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $jay_moderator_ID, T_('Second topic'), T_('<p>This is the second topic.</p>\n\n<p>It appears in multiple categories.</p>').$lorem_2more, $now, $cat_forums_news, array( $cat_forums_ann ) );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Image topic'), T_('<p>This topic has an image attached to it. The image is automatically resized to fit the current blog skin. You can zoom in by clicking on the thumbnail.</p>\n\n<p>Check out the photoblog (accessible through the links at the top) to see a completely different skin focused more on the photos than on the blog text.</p>'), $now, $cat_forums_bg );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monuments.jpg' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $paul_blogger_ID, T_('This is a multipage topic'), T_('<p>This is page 1 of a multipage topic.</p>\n\n<blockquote><p>This is a Block Quote.</p></blockquote>\n\n<p>You can see the other pages by clicking on the links below the text.</p>').'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 2 ).$lorem_2more.'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 3 ).$lorem_1paragraph.'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 4 ).'\n\n'.T_('<p>It is the last page.</p>'), $now, $cat_forums_bg );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $larry_user_ID, T_('Extended topic with no teaser'), T_('<p>This is an extended topic with no teaser. This means that you won\\'t see this teaser any more when you click the \"more\" link.</p>\n\n[teaserbreak]\n\n<p>This is the extended text. You only see it when you have clicked the \"more\" link.</p>'), $now, $cat_forums_bg );\n\t\t$edited_Item->set_setting( 'hide_teaser', '1' );\n\t\t$edited_Item->dbsave();\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $kate_user_ID, T_('Extended topic'), T_('<p>This is an extended topic. This means you only see this small teaser by default and you must click on the link below to see more.</p>\n\n[teaserbreak]\n\n<p>This is the extended text. You only see it when you have clicked the \"more\" link.</p>'), $now, $cat_forums_bg );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$additional_comments_item_IDs[] = $edited_Item->insert( 1, T_(\"Welcome to your b2evolution-powered website!\"),\n\t\t\tT_(\"<p>To get you started, the installer has automatically created several sample collections and populated them with some sample contents. Of course, this starter structure is all yours to edit. Until you do that, though, here's what you will find on this site:</p>\n\n<ul>\n<li><strong>Blog A</strong>: You are currently looking at it. It contains a few sample posts, using simple features of b2evolution.</li>\n<li><strong>Blog B</strong>: You can access it from the link at the top of the page. It contains information about more advanced features. Note that it is deliberately using a different skin from Blog A to give you an idea of what's possible.</li>\n<li><strong>Photos</strong>: This collection is an example of how you can use b2evolution to showcase photos, with photos grouped into photo albums.</li>\n<li><strong>Forums</strong>: This collection is a discussion forum (a.k.a. bulletin board) allowing your users to discuss among themselves.</li>\n<li><strong>Manual</strong>: This showcases how b2evolution can be used to publish structured content such as an online manual or book.</li>\n\n</ul>\n\n<p>You can add new collections of any type (blog, photos, forums, etc.), delete unwanted one and customize existing collections (title, sidebar, blog skin, widgets, etc.) from the admin interface.</p>\"), $now, $cat_forums_ann );\n\t\t$edit_File = new File( 'shared', 0, 'logos/b2evolution_1016x208_wbg.png' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t// Insert Markdown example post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $mary_moderator_ID, T_('Markdown examples'), $markdown_examples_content, $now, $cat_forums_news );\n\n\t\t// Update the progress bar status\n\t\tupdate_install_progress_bar();\n\n\t\ttask_end();\n\t}\n\n\tif( $install_collection_manual )\n\t{ // ---------------- Insert the POSTS for Manual collection ---------------- //\n\t\ttask_begin( 'Creating sample posts for Collection Manual... ' );\n\n\t\t// Set all posts of this collection with 24 hours ago relating on previous collection:\n\t\t$timeshift += 86400;\n\n\t\t// Insert a main intro:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_(\"Welcome here!\"), T_('This is the main introduction for this demo online manual. It is a post using the type \"Intro-Front\". It will only appear on the front page of the manual.\n\nYou may delete this post if you don\\'t want such an introduction.\n\nJust to be clear: this is a **demo** of a manual. The user manual for b2evolution is here: http://b2evolution.net/man/.'), $now, $cat_manual_intro,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Intro-Front' );\n\n\t\t// Insert a cat intro:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_(\"Chapter Intro\"), T_('This is an introduction for this chapter. It is a post using the \"intro-cat\" type.'), $now, $cat_manual_intro,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Intro-Cat' );\n\n\t\t// Insert a cat intro:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'intro' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_(\"Chapter Intro\"), T_('This is an introduction for this chapter. It is a post using the \"intro-cat\" type.')\n\t\t\t.\"\\n\\n\".T_('Contrary to the other sections which are explictely sorted by default, this section is sorted alphabetically by default.'), $now, $cat_manual_reference,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Intro-Cat' );\n\n\t\t// Insert a PAGE:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $dave_blogger_ID, T_(\"About this manual\"), sprintf( $info_page, T_('Manual') ), $now, $cat_manual_intro,\n\t\t\tarray(), 'published', '#', '', '', 'open', array('default'), 'Standalone Page' );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('First Page'), T_('<p>This is the first page.</p>\n\n<p>It appears in a single category.</p>'), $now, $cat_manual_intro, array(),\n\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 10 );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Second Page'), T_('<p>This is the second page.</p>\n\n<p>It appears in multiple categories.</p>'), $now, $cat_manual_intro, array( $cat_manual_getstarted ),\n\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 20 );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Wiki Tables'), /* DO NOT TRANSLATE - TOO COMPLEX */ '<p>This is the topic with samples of the wiki tables.</p>\n\n{|\n|Orange\n|Apple\n|-\n|Bread\n|Pie\n|-\n|Butter\n|Ice cream\n|}\n\n{|\n|Orange||Apple||more\n|-\n|Bread||Pie||more\n|-\n|Butter||Ice<br />cream||and<br />more\n|}\n\n{|\n|Lorem ipsum dolor sit amet,\nconsetetur sadipscing elitr,\nsed diam nonumy eirmod tempor invidunt\nut labore et dolore magna aliquyam erat,\nsed diam voluptua.\n\nAt vero eos et accusam et justo duo dolores\net ea rebum. Stet clita kasd gubergren,\nno sea takimata sanctus est Lorem ipsum\ndolor sit amet.\n|\n* Lorem ipsum dolor sit amet\n* consetetur sadipscing elitr\n* sed diam nonumy eirmod tempor invidunt\n|}\n\n{|\n! align=\"left\"| Item\n! Amount\n! Cost\n|-\n|Orange\n|10\n|7.00\n|-\n|Bread\n|4\n|3.00\n|-\n|Butter\n|1\n|5.00\n|-\n!Total\n|\n|15.00\n|}\n\n<br />\n\n{|\n|+Food complements\n|-\n|Orange\n|Apple\n|-\n|Bread\n|Pie\n|-\n|Butter\n|Ice cream\n|}\n\n{| class=\"wikitable\"\n|+Food complements\n|-\n|Orange\n|Apple\n|-\n|Bread\n|Pie\n|-\n|Butter\n|Ice cream\n|}\n\n{| class=\"wikitable\" style=\"text-align: center; color: green;\"\n|Orange\n|Apple\n|12,333.00\n|-\n|Bread\n|Pie\n|500.00\n|-\n|Butter\n|Ice cream\n|1.00\n|}\n\n{| class=\"wikitable\"\n| Orange\n| Apple\n| align=\"right\"| 12,333.00\n|-\n| Bread\n| Pie\n| align=\"right\"| 500.00\n|-\n| Butter\n| Ice cream\n| align=\"right\"| 1.00\n|}\n\n{| class=\"wikitable\"\n| Orange || Apple     || align=\"right\" | 12,333.00\n|-\n| Bread  || Pie       || align=\"right\" | 500.00\n|-\n| Butter || Ice cream || align=\"right\" | 1.00\n|}\n\n{| class=\"wikitable\"\n| Orange\n| Apple\n| align=\"right\"| 12,333.00\n|-\n| Bread\n| Pie\n| align=\"right\"| 500.00\n|- style=\"font-style: italic; color: green;\"\n| Butter\n| Ice cream\n| align=\"right\"| 1.00\n|}\n\n{| style=\"border-collapse: separate; border-spacing: 0; border: 1px solid #000; padding: 0\"\n|-\n| style=\"border-style: solid; border-width: 0 1px 1px 0\"|\nOrange\n| style=\"border-style: solid; border-width: 0 0 1px 0\"|\nApple\n|-\n| style=\"border-style: solid; border-width: 0 1px 0 0\"|\nBread\n| style=\"border-style: solid; border-width: 0\"|\nPie\n|}\n\n{| style=\"border-collapse: collapse; border: 1px solid #000\"\n|-\n| style=\"border-style: solid; border-width: 1px\"|\nOrange\n| style=\"border-style: solid; border-width: 1px\"|\nApple\n|-\n| style=\"border-style: solid; border-width: 1px\"|\nBread\n| style=\"border-style: solid; border-width: 1px\"|\nPie\n|}\n\n{|style=\"border-style: solid; border-width: 20px\"\n|\nHello\n|}\n\n{|style=\"border-style: solid; border-width: 10px 20px 100px 0\"\n|\nHello\n|}\n\n{| class=\"wikitable\"\n!colspan=\"6\"|Shopping List\n|-\n|rowspan=\"2\"|Bread &amp; Butter\n|Pie\n|Buns\n|Danish\n|colspan=\"2\"|Croissant\n|-\n|Cheese\n|colspan=\"2\"|Ice cream\n|Butter\n|Yogurt\n|}\n\n{| class=\"wikitable\" style=\"color:green; background-color:#ffffcc;\" cellpadding=\"10\"\n|Orange\n|Apple\n|-\n|Bread\n|Pie\n|-\n|Butter\n|Ice cream\n|}\n\n{| class=\"wikitable\"\n|+ align=\"bottom\" style=\"color:#e76700;\"|\\'\\'Food complements\\'\\'\n|-\n|Orange\n|Apple\n|-\n|Bread\n|Pie\n|-\n|Butter\n|Ice cream\n|}\n\n{| style=\"color: black; background-color: #ffffcc;\" width=\"85%\"\n| colspan=\"2\" | This column width is 85% of the screen width (and has a background color)\n|-\n| style=\"width: 30%; background-color: white;\"|\n\\'\\'\\'This column is 30% counted from 85% of the screen width\\'\\'\\'\n| style=\"width: 70%; background-color: orange;\"|\n\\'\\'\\'This column is 70% counted from 85% of the screen width (and has a background color)\\'\\'\\'\n|}\n\n{| class=\"wikitable\"\n|-\n! scope=\"col\"| Item\n! scope=\"col\"| Quantity\n! scope=\"col\"| Price\n|-\n! scope=\"row\"| Bread\n| 0.3 kg\n| $0.65\n|-\n! scope=\"row\"| Butter\n| 0.125 kg\n| $1.25\n|-\n! scope=\"row\" colspan=\"2\"| Total\n| $1.90\n|}', $now, $cat_manual_reference, array( $cat_manual_userguide ),\n\t\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 50 );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Image topic'), T_('<p>This topic has an image attached to it. The image is automatically resized to fit the current blog skin. You can zoom in by clicking on the thumbnail.</p>\n\n<p>Check out the photoblog (accessible through the links at the top) to see a completely different skin focused more on the photos than on the blog text.</p>'), $now, $cat_manual_getstarted, array( $cat_manual_blogs ),\n\t\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 10 );\n\t\t$edit_File = new File( 'shared', 0, 'monument-valley/monuments.jpg' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('This is a multipage topic'), T_('<p>This is page 1 of a multipage topic.</p>\n\n<blockquote><p>This is a Block Quote.</p></blockquote>\n\n<p>You can see the other pages by clicking on the links below the text.</p>').'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 2 ).$lorem_2more.'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 3 ).$lorem_1paragraph.'\n\n[pagebreak]\n\n'.sprintf( T_(\"<p>This is page %d.</p>\"), 4 ).'\n\n'.T_('<p>It is the last page.</p>'), $now, $cat_manual_userguide, array(),\n\t\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 30 );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Extended topic with no teaser'), T_('<p>This is an extended topic with no teaser. This means that you won\\'t see this teaser any more when you click the \"more\" link.</p>\n\n[teaserbreak]\n\n<p>This is the extended text. You only see it when you have clicked the \"more\" link.</p>'), $now, $cat_manual_userguide, array(),\n\t\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 20 );\n\t\t$edited_Item->set_setting( 'hide_teaser', '1' );\n\t\t$edited_Item->dbsave();\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Extended topic'), T_('<p>This is an extended topic. This means you only see this small teaser by default and you must click on the link below to see more.</p>\n\n[teaserbreak]\n\n<p>This is the extended text. You only see it when you have clicked the \"more\" link.</p>'), $now, $cat_manual_userguide, array(),\n\t\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 10 );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'photo' );\n\t\t$additional_comments_item_IDs[] = $edited_Item->insert( $dave_blogger_ID, T_(\"Welcome to your b2evolution-powered website!\"),\n\t\t\tT_(\"<p>To get you started, the installer has automatically created several sample collections and populated them with some sample contents. Of course, this starter structure is all yours to edit. Until you do that, though, here's what you will find on this site:</p>\n\n<ul>\n<li><strong>Blog A</strong>: You are currently looking at it. It contains a few sample posts, using simple features of b2evolution.</li>\n<li><strong>Blog B</strong>: You can access it from the link at the top of the page. It contains information about more advanced features. Note that it is deliberately using a different skin from Blog A to give you an idea of what's possible.</li>\n<li><strong>Photos</strong>: This collection is an example of how you can use b2evolution to showcase photos, with photos grouped into photo albums.</li>\n<li><strong>Forums</strong>: This collection is a discussion forum (a.k.a. bulletin board) allowing your users to discuss among themselves.</li>\n<li><strong>Manual</strong>: This showcases how b2evolution can be used to publish structured content such as an online manual or book.</li>\n\n</ul>\n\n<p>You can add new collections of any type (blog, photos, forums, etc.), delete unwanted one and customize existing collections (title, sidebar, blog skin, widgets, etc.) from the admin interface.</p>\"), $now, $cat_manual_intro, array( $cat_manual_everyday ),\n\t\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 30 );\n\t\t$edit_File = new File( 'shared', 0, 'logos/b2evolution_1016x208_wbg.png' );\n\t\t$LinkOwner = new LinkItem( $edited_Item );\n\t\t$edit_File->link_to_Object( $LinkOwner );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Sports post'), T_('<p>This is the sports post.</p>\n\n<p>It appears in sports category.</p>'), $now, $cat_manual_blogs, array(),\n\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 15 );\n\n\t\t// Insert a post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Second sports post'), T_('<p>This is the second sports post.</p>\n\n<p>It appears in sports category.</p>'), $now, $cat_manual_blogs, array(),\n\t\t\t'published', '#', '', '', 'open', array('default'), 'Manual Page', NULL, 5 );\n\n\t\t// Insert Markdown example post:\n\t\t$now = date( 'Y-m-d H:i:s', ( $timestamp++ - $timeshift ) );\n\t\t$edited_Item = new Item();\n\t\t$edited_Item->set_tags_from_string( 'demo' );\n\t\t$edited_Item->insert( $dave_blogger_ID, T_('Markdown examples'), $markdown_examples_content, $now, $cat_manual_userguide );\n\n\t\t// Update the progress bar status\n\t\tupdate_install_progress_bar();\n\n\t\ttask_end();\n\t}\n\n\n\n\ttask_begin( 'Creating sample comments... ' );\n\n\t// Create two demo comments for each new created item\n\t$new_created_item_IDs = $DB->get_col( 'SELECT post_ID FROM T_items__item ORDER BY post_ID' );\n\tforeach( $new_created_item_IDs as $new_created_item_ID )\n\t{\n\t\tcreate_demo_comment( $new_created_item_ID, 'published' );\n\t\tcreate_demo_comment( $new_created_item_ID, 'draft' );\n\t}\n\n\tif( $install_test_features && count( $additional_comments_item_IDs ) )\n\t{ // Create the additional comments when we install all features\n\t\tforeach( $additional_comments_item_IDs as $additional_comments_item_ID )\n\t\t{\n\t\t\t// Restrict comment status by parent item:\n\t\t\t$comment_status = 'published';\n\t\t\t$Comment = new Comment();\n\t\t\t$Comment->set( 'item_ID', $additional_comments_item_ID );\n\t\t\t$Comment->set( 'status', $comment_status );\n\t\t\t$Comment->restrict_status( true );\n\t\t\t$comment_status = $Comment->get( 'status' );\n\n\t\t\tfor( $i_user_ID = 1; $i_user_ID <= 7; $i_user_ID++ )\n\t\t\t{ // Insert the comments from each user\n\t\t\t\t$now = date( 'Y-m-d H:i:s' );\n\t\t\t\t$DB->query( 'INSERT INTO T_comments( comment_item_ID, comment_status, comment_author_user_ID, comment_author_IP,\n\t\t\t\t\t\tcomment_date, comment_last_touched_ts, comment_content, comment_renderers, comment_notif_status, comment_notif_flags )\n\t\t\t\t\tVALUES( '.$DB->quote( $additional_comments_item_ID ).', '.$DB->quote( $comment_status ).', '.$DB->quote( $i_user_ID ).', \"127.0.0.1\", '\n\t\t\t\t\t\t.$DB->quote( $now ).', '.$DB->quote( $now ).', '.$DB->quote( T_('Hi!\n\nThis is a sample comment that has been approved by default!\nAdmins and moderators can very quickly approve or reject comments from the collection dashboard.') ).', \"default\", \"finished\", \"moderators_notified,members_notified,community_notified\" )' );\n\t\t\t}\n\t\t}\n\t\techo_install_log( 'TEST FEATURE: Creating additional comments on items ('.implode( ', ', $additional_comments_item_IDs ).')' );\n\t}\n\n\ttask_end();\n\n\n\tif( $install_test_features )\n\t{\n\t\techo_install_log( 'TEST FEATURE: Creating fake hit statistics' );\n\t\ttask_begin( 'Creating fake hit statistics... ' );\n\t\tload_funcs('sessions/model/_hitlog.funcs.php');\n\t\tload_funcs('_core/_url.funcs.php');\n\t\t$insert_data_count = generate_hit_stat(10, 0, 5000);\n\t\techo sprintf( '%d test hits are added.', $insert_data_count );\n\t\ttask_end();\n\t}\n\n\t/*\n\t// Note: we don't really need this any longer, but we might use it for a better default setup later...\n\techo 'Creating default user/blog permissions... ';\n\t// Admin for blog A:\n\t$query = \"INSERT INTO T_coll_user_perms( bloguser_blog_ID, bloguser_user_ID, bloguser_ismember,\n\t\t\t\t\t\t\tbloguser_perm_poststatuses, bloguser_perm_delpost, bloguser_perm_comments,\n\t\t\t\t\t\t\tbloguser_perm_meta_comment, bloguser_perm_cats, bloguser_perm_properties,\n\t\t\t\t\t\t\tbloguser_perm_media_upload, bloguser_perm_media_browse, bloguser_perm_media_change )\n\t\t\t\t\t\tVALUES\n\t\t\t\t\t\t\t( $blog_a_ID, \".$User_Demo->ID.\", 1,\n\t\t\t\t\t\t\t'published,deprecated,protected,private,draft', 1, 1, 1, 0, 0, 1, 1, 1 )\";\n\t$DB->query( $query );\n\techo \"OK.<br />\\n\";\n\t*/\n\n\t// Allow all modules to create their own demo contents:\n\tmodules_call_method( 'create_demo_contents' );\n\n\t// Set default locations for each post in test mode installation\n\tcreate_default_posts_location();\n\n\tinstall_basic_widgets( $new_db_version );\n\n\tload_funcs( 'tools/model/_system.funcs.php' );\n\tsystem_init_caches( true, true ); // Outputs messages\n}\n\n\n/**\n * Create a demo comment\n *\n * @param integer Item ID\n * @param string Comment status\n */\nfunction create_demo_comment( $item_ID, $status )\n{\n\tglobal $DB, $b2evo_demo_comment_users, $b2evo_demo_comment_user_num;\n\n\t// Get next user ID for new creating comment\n\tif( ! isset( $b2evo_demo_comment_user_num ) )\n\t{\n\t\t$b2evo_demo_comment_user_num = 0;\n\t}\n\telse\n\t{\n\t\t$b2evo_demo_comment_user_num++;\n\t\tif( $b2evo_demo_comment_user_num > count( $b2evo_demo_comment_users ) - 1 )\n\t\t{\n\t\t\t$b2evo_demo_comment_user_num = 0;\n\t\t}\n\t}\n\t$user_ID = $b2evo_demo_comment_users[ $b2evo_demo_comment_user_num ];\n\tif( $user_ID > 0 )\n\t{ // An existing user\n\t\t$author = NULL;\n\t\t$author_email = NULL;\n\t\t$author_email_url = NULL;\n\t}\n\telse\n\t{ // Anonymous user\n\t\t$user_ID = NULL;\n\t\t$author = 'miss b2';\n\t\t$author_email = 'missb2@example.com';\n\t\t$author_email_url = 'http://example.com';\n\t}\n\n\t// Restrict comment status by parent item:\n\t$Comment = new Comment();\n\t$Comment->set( 'item_ID', $item_ID );\n\t$Comment->set( 'status', $status );\n\t$Comment->restrict_status( true );\n\t$status = $Comment->get( 'status' );\n\n\t// Set demo content depending on status\n\tif( $status == 'published' )\n\t{\n\t\t$content = T_('Hi!\n\nThis is a sample comment that has been approved by default!\nAdmins and moderators can very quickly approve or reject comments from the collection dashboard.');\n\t}\n\telse\n\t{ // draft\n\t\t$content = T_('Hi!\n\nThis is a sample comment that has **not** been approved by default!\nAdmins and moderators can very quickly approve or reject comments from the collection dashboard.');\n\t}\n\n\t$now = date( 'Y-m-d H:i:s' );\n\n\t$DB->query( 'INSERT INTO T_comments( comment_item_ID, comment_status,\n\t\t\tcomment_author_user_ID, comment_author, comment_author_email, comment_author_url, comment_author_IP,\n\t\t\tcomment_date, comment_last_touched_ts, comment_content, comment_renderers, comment_notif_status, comment_notif_flags )\n\t\tVALUES( '.$DB->quote( $item_ID ).', '.$DB->quote( $status ).', '\n\t\t\t.$DB->quote( $user_ID ).', '.$DB->quote( $author ).', '.$DB->quote( $author_email ).', '.$DB->quote( $author_email_url ).', \"127.0.0.1\", '\n\t\t\t.$DB->quote( $now ).', '.$DB->quote( $now ).', '.$DB->quote( $content ).', \"default\", \"finished\", \"moderators_notified,members_notified,community_notified\" )' );\n}\n\n\n/**\n * Create default location for all posts\n */\nfunction create_default_posts_location()\n{\n\tglobal $install_test_features;\n\n\tif( $install_test_features )\n\t{\t// Set default location in test mode installation\n\t\tglobal $DB;\n\n\t\t$DB->query( 'UPDATE T_items__item SET\n\t\t\tpost_ctry_ID = '.$DB->quote( '74'/* France */ ).',\n\t\t\tpost_rgn_ID = '.$DB->quote( '60'/* \u00cele-de-France */ ).',\n\t\t\tpost_subrg_ID = '.$DB->quote( '76'/* Paris */ ) );\n\n\t\techo_install_log( 'TEST FEATURE: Defining default location \"France, \u00cele-de-France, Paris\" for all posts' );\n\t}\n}\n\n\n/**\n * Create default email campaigns\n */\nfunction create_default_email_campaigns()\n{\n\tglobal $DB, $create_sample_contents;\n\n\ttask_begin( 'Creating default email campaigns... ' );\n\n\tload_class( 'email_campaigns/model/_emailcampaign.class.php', 'EmailCampaign' );\n\tload_funcs( 'email_campaigns/model/_emailcampaign.funcs.php' );\n\n\tif( $create_sample_contents )\n\t{\n\t\t$EmailCampaign = new EmailCampaign();\n\t\t$EmailCampaign->set( 'name', T_('Markdown Example') );\n\t\t$EmailCampaign->set( 'email_title', T_('Markdown Example') );\n\t\t$EmailCampaign->set( 'email_text', T_('Heading\n=======\n\nSub-heading\n-----------\n\n### H3 header\n\n#### H4 header ####\n\n> Email-style angle brackets\n> are used for blockquotes.\n\n> > And, they can be nested.\n\n> ##### Headers in blockquotes\n>\n> * You can quote a list.\n> * Etc.\n\n[This is a link](http://b2evolution.net/) if Links are turned on in the markdown plugin settings\n\nParagraphs are separated by a blank line.\n\n    This is a preformatted\n    code block.\n\nText attributes *Italic*, **bold**, `monospace`.\n\nShopping list:\n\n* apples\n* oranges\n* pears\n\nThe rain---not the reign---in Spain.') );\n\n\t\tif( $EmailCampaign->dbinsert() )\n\t\t{\t// Add recipients after successfull email campaign creating:\n\t\t\t$user_IDs = $DB->get_col( 'SELECT user_ID FROM T_users' );\n\t\t\tif( ! empty( $user_IDs ) )\n\t\t\t{\t// Only if we have found the users in DB\n\t\t\t\t$EmailCampaign->add_users( $user_IDs );\n\t\t\t}\n\t\t}\n\t}\n\n\ttask_end();\n}\n?>", "<?php\n/**\n * This file implements upgrading of DB tables\n *\n * b2evolution - {@link http://b2evolution.net/}\n * Released under GNU GPL License - {@link http://b2evolution.net/about/gnu-gpl-license}\n * @copyright (c)2003-2016 by Francois Planque - {@link http://fplanque.com/}\n *\n * @package install\n */\nif( !defined('EVO_MAIN_INIT') ) die( 'Please, do not access this page directly.' );\n\nload_funcs('_core/_param.funcs.php');\n\n\n/**\n * Create a DB version checkpoint\n *\n * This is useful when the next operation might timeout or fail!\n * The checkpoint will allow to restart the script and continue where it stopped\n *\n * @param string version of DB at checkpoint\n */\nfunction set_upgrade_checkpoint( $version )\n{\n\tglobal $DB, $script_start_time, $locale, $action;\n\n\tglobal $recreate_autogenerated_excerpts;\n\n\techo get_install_format_text( '<span class=\"text-muted\">Creating DB schema version checkpoint at '.$version.'... ' );\n\n\tif( $version < 8060 )\n\t{\n\t\t$query = 'UPDATE T_settings SET db_version = '.$version;\n\t}\n\telse\n\t{\n\t\t$query = \"UPDATE T_settings\n\t\t\t\t\t\t\t\tSET set_value = '$version'\n\t\t\t\t\t\t\t\tWHERE set_name = 'db_version'\";\n\t}\n\t$DB->query( $query );\n\n\n\t$elapsed_time = time() - $script_start_time;\n\n\techo get_install_format_text( \"OK. (Elapsed upgrade time: $elapsed_time seconds)</span><br />\\n\", 'br' );\n\n\t// Update the progress bar status\n\tupdate_install_progress_bar();\n\n\tevo_flush();\n\n\t$max_exe_time = ini_get( 'max_execution_time' );\n\tif( $max_exe_time && ( $elapsed_time > ( $max_exe_time - 20 ) ) )\n\t{ // Max exe time not disabled and we're recahing the end\n\t\t$upgrade_action = ( ( $action == 'svn_upgrade' ) || ( $action == 'auto_upgrade' ) ) ? $action : 'evoupgrade';\n\t\t$recreate_excerpts = $recreate_autogenerated_excerpts ? '&amp;recreate_excerpts=1' : '';\n\t\techo get_install_format_text( 'We are reaching the time limit for this script. Please click <a href=\"index.php?locale='.$locale.'&amp;action='.$upgrade_action.$recreate_excerpts.'\">continue</a>...' );\n\t\t// Dirty temporary solution:\n\t\texit(0);\n\t}\n}\n\n\n/**\n * Start upgrade task\n *\n * @param integer Version of DB at checkpoint\n * @param string Task title\n * @return boolean TRUE if task has been started\n */\nfunction upg_task_start( $version, $title = '' )\n{\n\tglobal $old_db_version, $upgrade_db_version;\n\n\tif( $old_db_version < $version )\n\t{\t// Only if current DB version is older than current requested\n\n\t\t// Set upgrade version to use this in function upg_task_end():\n\t\t$upgrade_db_version = $version;\n\n\t\tif( ! empty( $title ) )\n\t\t{\t// Start task (Display a title):\n\t\t\ttask_begin( $title );\n\t\t}\n\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\n\n\n/**\n * End upgrade task\n *\n * @param boolean TRUE to print out a result of task ending\n */\nfunction upg_task_end( $print_result = true )\n{\n\tglobal $upgrade_db_version;\n\n\tif( ! empty( $upgrade_db_version ) )\n\t{\t// Only if the upgrade task is not ended yet:\n\n\t\tif( $print_result )\n\t\t{\t// Print out the end of task:\n\t\t\ttask_end();\n\t\t}\n\n\t\t// Create a DB version checkpoint:\n\t\tset_upgrade_checkpoint( $upgrade_db_version );\n\n\t\t// Unset the current version because task is ended:\n\t\tunset( $upgrade_db_version );\n\t}\n}\n\n\n/**\n * Create DB table\n *\n * @param string Table name\n * @param string Fields\n * @param string Options\n */\nfunction db_create_table( $table, $fields, $options = 'ENGINE = innodb' )\n{\n\tglobal $DB, $db_config;\n\n\tif( isset( $db_config, $db_config['aliases'], $db_config['aliases'][ $table ] ) )\n\t{\t// Use table name with real prefix instead of T_:\n\t\t$table = $db_config['aliases'][ $table ];\n\t}\n\n\t// Check if the creating table doesn't exist in DB:\n\t$unique_table = $table;\n\t$next_table_index = 1;\n\twhile( $DB->get_var( 'SHOW TABLES LIKE '.$DB->quote( $unique_table ) ) )\n\t{\t// This table already exists in DB, try to find what next table name is free:\n\t\t$unique_table = $table.'_'.$next_table_index;\n\t\t$next_table_index++;\n\t}\n\tif( $unique_table != $table )\n\t{\t// Backup the existing table, in order to create the requeired table without error:\n\t\t$DB->query( 'RENAME TABLE '.$table.' TO '.$unique_table );\n\t}\n\n\t// Create new table with requested table:\n\t$DB->query( 'CREATE TABLE '.$table.' ( '.$fields.' ) '.$options );\n}\n\n\n/**\n * @return boolean Does a given index key name exist in DB?\n */\nfunction db_index_exists( $table, $index_name )\n{\n\tglobal $DB;\n\n\t$index_name = strtolower($index_name);\n\n\t$DB->query('SHOW INDEX FROM '.$table);\n\twhile( $row = $DB->get_row() )\n\t{\n\t\tif( strtolower($row->Key_name) == $index_name )\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n\n/**\n * @param string Table name\n * @param array Column names\n * @return boolean Does a list of given column names exist in DB?\n */\nfunction db_cols_exist( $table, $col_names )\n{\n\tglobal $DB;\n\n\tforeach( $col_names as $k => $v )\n\t\t$col_names[$k] = strtolower($v);\n\n\tforeach( $DB->get_results('SHOW COLUMNS FROM '.$table) as $row )\n\t\tif( ($key = array_search(strtolower($row->Field), $col_names)) !== false )\n\t\t\tunset( $col_names[$key] );\n\n\treturn count($col_names) == 0;\n}\n\n/**\n * Drops a column, if it exists.\n */\nfunction db_drop_col( $table, $col_name )\n{\n\tglobal $DB;\n\n\tif( ! db_col_exists($table, $col_name) )\n\t\treturn false;\n\n\t$DB->query( 'ALTER TABLE '.$table.' DROP COLUMN '.$col_name );\n}\n\n/**\n * Add a column, if it does not already exist.\n * If it exists already, a \"ALTER TABLE\" statement will get executed instead.\n *\n * @return boolean True if the column has been added, False if not.\n */\nfunction db_add_col( $table, $col_name, $col_desc )\n{\n\tglobal $DB;\n\n\tif( db_col_exists($table, $col_name) )\n\t{ // Column exists already, make sure it's the same.\n\t\t$DB->query( 'ALTER TABLE '.$table.' MODIFY COLUMN '.$col_name.' '.$col_desc );\n\t\treturn false;\n\t}\n\n\t$DB->query( 'ALTER TABLE '.$table.' ADD COLUMN '.$col_name.' '.$col_desc );\n}\n\n\n/**\n * Add an INDEX. If another index with the same name already exists, it will\n * get dropped before.\n */\nfunction db_add_index( $table, $name, $def, $type = 'INDEX' )\n{\n\tglobal $DB;\n\tif( db_index_exists($table, $name) )\n\t{\n\t\t$DB->query( 'ALTER TABLE '.$table.' DROP INDEX '.$name );\n\t}\n\t$DB->query( 'ALTER TABLE '.$table.' ADD '.$type.' '.$name.' ('.$def.')' );\n}\n\n\n/**\n * Check if a key item value already exists on database\n */\nfunction db_key_exists( $table, $field_name, $field_value )\n{\n\tglobal $DB;\n\treturn $DB->get_var( '\n\t\tSELECT COUNT('.$field_name.')\n\t\tFROM '.$table.'\n\t\tWHERE '.$field_name.' = '.$field_value );\n}\n\n/**\n * Add a Foreign Key constraint.\n * If another foreign key exists between these two fields then the old FK will be deleted and a new will be created.\n * If the table engine is not InnoDB, then it will be changed automatically.\n * If the FK table contains data which would prevent foreign key creation then these records will be deleted.\n *\n * @param string foreign key table\n * @param string foreing key column name\n * @param string foreign key refrence table name\n * @param string reference column name in the reference table\n * @param string foreign key definition ( e.g. \"ON DELETE CASCADE\" or \"ON UPDATE RESTRICT\" )\n */\nfunction db_add_foreign_key( $table, $field_name, $reference_table, $reference_field_name, $definition )\n{\n\tglobal $DB;\n\t$table = preg_replace( $DB->dbaliases, $DB->dbreplaces, $table );\n\t$reference_table = preg_replace( $DB->dbaliases, $DB->dbreplaces, $reference_table );\n\t$foreign_key_fields = array( array(\n\t\t\t'fk_fields' => $field_name,\n\t\t\t'reference_table' => $reference_table,\n\t\t\t'reference_columns' => $reference_field_name,\n\t\t\t'fk_definition' => $definition,\n\t\t\t'create' => true, // This FK should be created if not exists\n\t\t) );\n\tdb_delta_foreign_keys( $foreign_key_fields, $table, true, 'add' );\n}\n\n/**\n * Drop a Foreign Key constraint.\n * If this foreign key not exists the function won't give error.\n *\n * @param string foreign key table\n * @param string foreing key column name\n * @param string foreign key refrence table name\n * @param string reference column name in the reference table\n */\nfunction db_drop_foreign_key( $table, $field_name, $reference_table, $reference_field_name )\n{\n\tglobal $DB;\n\t$table = preg_replace( $DB->dbaliases, $DB->dbreplaces, $table );\n\t$reference_table = preg_replace( $DB->dbaliases, $DB->dbreplaces, $reference_table );\n\t$foreign_key_fields = array( array(\n\t\t\t'fk_fields' => $field_name,\n\t\t\t'reference_table' => $reference_table,\n\t\t\t'reference_columns' => $reference_field_name,\n\t\t\t'fk_definition' => '',\n\t\t\t'create' => false, // This FK shouldn't be created if not exists\n\t\t) );\n\tdb_delta_foreign_keys( $foreign_key_fields, $table, true, 'drop' );\n}\n\n/**\n * Converts languages in a given table into according locales\n *\n * @param string name of the table\n * @param string name of the column where lang is stored\n * @param string name of the table's ID column\n */\nfunction convert_lang_to_locale( $table, $columnlang, $columnID )\n{\n\tglobal $DB, $locales, $default_locale;\n\n\tif( !preg_match('/[a-z]{2}-[A-Z]{2}(-.{1,14})?/', $default_locale) )\n\t{ // we want a valid locale\n\t\t$default_locale = 'en-EU';\n\t}\n\n\techo get_install_format_text( 'Converting langs to locales for '. $table. '...<br />', 'br' );\n\n\t// query given languages in $table\n\t$query = \"SELECT $columnID, $columnlang FROM $table\";\n\t$languagestoconvert = array();\n\tforeach( $DB->get_results( $query, ARRAY_A ) as $row )\n\t{\n\t\t// remember the ID for that locale\n\t\t$languagestoconvert[ $row[ $columnlang ] ][] = $row[ $columnID ];\n\t}\n\n\tforeach( $languagestoconvert as $lkey => $lIDs)\n\t{ // converting the languages we've found\n\t\t$converted = false;\n\t\techo get_install_format_text( '&nbsp; Converting lang \\''. $lkey. '\\' ' ); // (with IDs: '. implode( ', ', $lIDs ). ').. ';\n\n\t\tif( preg_match('/[a-z]{2}-[A-Z]{2}(-.{1,14})?/', $lkey) )\n\t\t{ // Already valid\n\t\t\techo get_install_format_text( 'nothing to update, already valid!<br />', 'br' );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( (strlen($lkey) == 2) && ( substr( $default_locale, 0, 2 ) != $lkey ) )\n\t\t{ // we have an old two letter lang code to convert\n\t\t\t// and it doesn't match the default locale\n\t\t\tforeach( $locales as $newlkey => $v )\n\t\t\t{  // loop given locales\n\t\t\t\tif( substr($newlkey, 0, 2) == strtolower($lkey) ) # TODO: check if valid/suitable\n\t\t\t\t{  // if language matches, update\n\t\t\t\t\t$converted = $DB->query( \"\n\t\t\t\t\t\tUPDATE $table\n\t\t\t\t\t\t   SET $columnlang = '$newlkey'\n\t\t\t\t\t\t WHERE $columnlang = '$lkey'\" );\n\t\t\t\t\techo get_install_format_text( 'to locale \\''. $newlkey. '\\'<br />', 'br' );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !$converted )\n\t\t{ // we have nothing converted yet, setting default:\n\t\t\t$DB->query( \"UPDATE $table\n\t\t\t\t\t\t\t\t\t\t\tSET $columnlang = '$default_locale'\n\t\t\t\t\t\t\t\t\t\tWHERE $columnlang = '$lkey'\" );\n\t\t\techo get_install_format_text( 'forced to default locale \\''. $default_locale. '\\'<br />', 'br' );\n\t\t}\n\t}\n\techo \"\\n\";\n}  // convert_lang_to_locale(-)\n\n\n/**\n * upgrade_b2evo_tables(-)\n *\n * @param string the action param value corresponding the current upgrade process ( evoupgrade, svn_upgrade, auto_upgrade )\n */\nfunction upgrade_b2evo_tables( $upgrade_action = 'evoupgrade' )\n{\n\tglobal $db_config, $tableprefix;\n\tglobal $baseurl, $old_db_version, $new_db_version;\n\tglobal $Group_Admins, $Group_Privileged, $Group_Bloggers, $Group_Users;\n\tglobal $locales, $locale;\n\tglobal $DB;\n\tglobal $admin_url;\n\tglobal $Settings, $Plugins;\n\n\t// used for defaults, when upgrading to 1.6\n\tglobal $use_fileupload, $fileupload_allowedtypes, $fileupload_maxk, $doubleCheckReferers;\n\n\t// new DB-delta functionality\n\tglobal $schema_queries, $inc_path;\n\n\t// used to check script time before starting to create db delta\n\tglobal $script_start_time;\n\n\t// Create an option which can be turned on if we need to regenerate the autogenerated excerpts in the end of the upgrade script\n\tglobal $recreate_autogenerated_excerpts;\n\t$recreate_autogenerated_excerpts = param( 'recreate_excerpts', 'boolean', 0 );\n\n\t// Load DB schema from modules\n\tload_db_schema();\n\n\t// Update the progress bar status\n\tupdate_install_progress_bar();\n\n\tload_funcs('_core/model/db/_upgrade.funcs.php');\n\n\t// Force MySQL strict mode:\n\t$DB->query( 'SET sql_mode = \"\"', 'REMOVE MySQL \"strict\" mode in order not to worry about missing defaults until the end of the upgrade.' );\n\n\techo get_install_format_text( '<p>'.T_('Checking DB schema version...').' ', 'p-start' );\n\t$old_db_version = get_db_version();\n\n\tif( empty($old_db_version) )\n\t{\n\t\techo get_install_format_text( '<p><strong>OOPS! b2evolution doesn\\'t seem to be installed yet.</strong></p>', 'p' );\n\t\treturn false;\n\t}\n\n\techo $old_db_version, ' : ';\n\n\tif( $old_db_version < 8000 ) debug_die( T_('This version is too old!') );\n\tif( $old_db_version > $new_db_version ) debug_die( T_('This version is too recent! We cannot downgrade to the version you are trying to install...') );\n\techo get_install_format_text( \"OK.<br />\\n\", 'br' );\n\n\tif( $old_db_version < 8010 )\n\t{\n\t\techo 'Upgrading users table... ';\n\t\t$query = \"ALTER TABLE T_users\n\t\t\t\t\t\t\tMODIFY COLUMN user_pass CHAR(32) NOT NULL\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading blogs table... ';\n\t\t$query = \"ALTER TABLE T_blogs\n\t\t\t\t\t\t\tMODIFY COLUMN blog_lang VARCHAR(20) NOT NULL DEFAULT 'en_US',\n\t\t\t\t\t\t\tMODIFY COLUMN blog_longdesc TEXT NULL DEFAULT NULL\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading categories table... ';\n\t\t$query = \"ALTER TABLE T_categories\n\t\t\t\t\t\t\tADD COLUMN cat_description VARCHAR(250) NULL DEFAULT NULL,\n\t\t\t\t\t\t\tADD COLUMN cat_longdesc TEXT NULL DEFAULT NULL,\n\t\t\t\t\t\t\tADD COLUMN cat_icon VARCHAR(30) NULL DEFAULT NULL\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading posts table... ';\n\t\t$query = \"ALTER TABLE {$tableprefix}posts\n\t\t\t\t\t\t\tMODIFY COLUMN post_lang VARCHAR(20) NOT NULL DEFAULT 'en_US',\n\t\t\t\t\t\t\tADD COLUMN post_urltitle VARCHAR(50) NULL DEFAULT NULL AFTER post_title,\n\t\t\t\t\t\t\tADD COLUMN post_url VARCHAR(250) NULL DEFAULT NULL AFTER post_urltitle,\n\t\t\t\t\t\t\tADD COLUMN post_comments ENUM('disabled', 'open', 'closed') NOT NULL DEFAULT 'open' AFTER post_wordcount\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Generating wordcounts... ';\n\t\tload_funcs('items/model/_item.funcs.php');\n\t\t$query = \"SELECT ID, post_content FROM {$tableprefix}posts WHERE post_wordcount IS NULL\";\n\t\t$i = 0;\n\t\tforeach( $DB->get_results( $query, ARRAY_A ) as $row )\n\t\t{\n\t\t\t$query_update_wordcount = \"UPDATE {$tableprefix}posts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSET post_wordcount = \" . bpost_count_words($row['post_content']) . \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHERE ID = \" . $row['ID'];\n\t\t\t$DB->query($query_update_wordcount);\n\t\t\t$i++;\n\t\t}\n\t\techo \"OK. ($i rows updated)<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8010' );\n\t}\n\n\n\tif( $old_db_version < 8020 )\n\t{\n\t\techo 'Encoding passwords... ';\n\t\t$query = \"UPDATE T_users\n\t\t\t\t\t\t\tSET user_pass = MD5(user_pass)\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8020' );\n\t}\n\n\n\tif( $old_db_version < 8030 )\n\t{\n\t\techo 'Deleting unecessary logs... ';\n\t\t$query = \"DELETE FROM T_hitlog\n\t\t\t\t\t\t\tWHERE hit_ignore = 'badchar'\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Updating blog urls... ';\n\t\t$query = \"SELECT blog_ID, blog_siteurl FROM T_blogs\";\n\t\t$i = 0;\n\t\tforeach( $DB->get_results( $query, ARRAY_A ) as $row )\n\t\t{\n\t\t\t$blog_ID = $row['blog_ID'];\n\t\t\t$blog_siteurl = $row['blog_siteurl'];\n\t\t\t// echo $blog_ID.':'.$blog_siteurl;\n\t\t\tif( strpos( $blog_siteurl.'/', $baseurl ) !== 0 )\n\t\t\t{ // If not found at position 0\n\t\t\t\techo ' <strong>WARNING: please check blog #', $blog_ID, ' manually.</strong><br /> ';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// crop off the baseurl:\n\t\t\t$blog_siteurl = utf8_substr( $blog_siteurl.'/', utf8_strlen($baseurl) );\n\t\t\t// echo ' -> ', $blog_siteurl,'<br />';\n\n\t\t\t$query_update_blog = \"UPDATE T_blogs SET blog_siteurl = '$blog_siteurl' WHERE blog_ID = $blog_ID\";\n\t\t\t// echo $query_update_blog, '<br />';\n\t\t\t$DB->query( $query_update_blog );\n\t\t\t$i++;\n\t\t}\n\t\techo \"OK. ($i rows updated)<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8030' );\n\t}\n\n\n\tif( $old_db_version < 8040 )\n\t{ // upgrade to 0.8.7\n\t\techo 'Creating table for Antispam Blackist... ';\n\t\t$query = \"CREATE TABLE {$tableprefix}antispam (\n\t\t\taspm_ID bigint(11) NOT NULL auto_increment,\n\t\t\taspm_string varchar(80) NOT NULL,\n\t\t\taspm_source enum( 'local','reported','central' ) NOT NULL default 'reported',\n\t\t\tPRIMARY KEY aspm_ID (aspm_ID),\n\t\t\tUNIQUE aspm_string (aspm_string)\n\t\t)\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Creating default blacklist entries... ';\n\t\t// This string contains antispam information that is obfuscated because some hosting\n\t\t// companies prevent uploading PHP files containing \"spam\" strings.\n\t\t// pre_dump(get_antispam_query());\n\t\t$query = get_antispam_query();\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading Settings table... ';\n\t\t$query = \"ALTER TABLE T_settings\n\t\t\t\t\t\t\tADD COLUMN last_antispam_update datetime NOT NULL default '2000-01-01 00:00:00'\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8040' );\n\t}\n\n\n\tif( $old_db_version < 8050 )\n\t{ // upgrade to 0.8.9\n\t\techo 'Upgrading blogs table... ';\n\t\t$query = \"ALTER TABLE T_blogs\n\t\t\t\t\t\t\tADD COLUMN blog_allowtrackbacks tinyint(1) NOT NULL default 1,\n\t\t\t\t\t\t\tADD COLUMN blog_allowpingbacks tinyint(1) NOT NULL default 0,\n\t\t\t\t\t\t\tADD COLUMN blog_pingb2evonet tinyint(1) NOT NULL default 0,\n\t\t\t\t\t\t\tADD COLUMN blog_pingtechnorati tinyint(1) NOT NULL default 0,\n\t\t\t\t\t\t\tADD COLUMN blog_pingweblogs tinyint(1) NOT NULL default 0,\n\t\t\t\t\t\t\tADD COLUMN blog_pingblodotgs tinyint(1) NOT NULL default 0,\n\t\t\t\t\t\t\tADD COLUMN blog_disp_bloglist tinyint NOT NULL DEFAULT 1\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\t// Create User Groups\n\t\tglobal $Group_Admins, $Group_Privileged, $Group_Bloggers, $Group_Users;\n\t\techo 'Creating table for Groups... ';\n\t\t$query = \"CREATE TABLE T_groups (\n\t\t\tgrp_ID int(11) NOT NULL auto_increment,\n\t\t\tgrp_name varchar(50) NOT NULL default '',\n\t\t\tgrp_perm_admin enum('none','hidden','visible') NOT NULL default 'visible',\n\t\t\tgrp_perm_blogs enum('user','viewall','editall') NOT NULL default 'user',\n\t\t\tgrp_perm_stats enum('none','view','edit') NOT NULL default 'none',\n\t\t\tgrp_perm_spamblacklist enum('none','view','edit') NOT NULL default 'none',\n\t\t\tgrp_perm_options enum('none','view','edit') NOT NULL default 'none',\n\t\t\tgrp_perm_users enum('none','view','edit') NOT NULL default 'none',\n\t\t\tgrp_perm_templates TINYINT NOT NULL DEFAULT 0,\n\t\t\tgrp_perm_files enum('none','view','add','edit','all') NOT NULL default 'none',\n\t\t\tPRIMARY KEY grp_ID (grp_ID)\n\t\t)\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\t// This table needs to be created here for proper group insertion\n\t\ttask_begin( 'Creating table for Group Settings... ' );\n\t\t$DB->query( \"CREATE TABLE T_groups__groupsettings (\n\t\t\tgset_grp_ID INT(11) UNSIGNED NOT NULL,\n\t\t\tgset_name VARCHAR(30) NOT NULL,\n\t\t\tgset_value VARCHAR(255) NULL,\n\t\t\tPRIMARY KEY (gset_grp_ID, gset_name)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\techo 'Creating default groups... ';\n\t\t$Group_Admins = new Group(); // COPY !\n\t\t$Group_Admins->set( 'name', 'Administrators' );\n\t\t$Group_Admins->set( 'perm_admin', 'visible' );\n\t\t$Group_Admins->set( 'perm_blogs', 'editall' );\n\t\t$Group_Admins->set( 'perm_stats', 'edit' );\n\t\t$Group_Admins->set( 'perm_spamblacklist', 'edit' );\n\t\t$Group_Admins->set( 'perm_files', 'all' );\n\t\t$Group_Admins->set( 'perm_options', 'edit' );\n\t\t$Group_Admins->set( 'perm_templates', 1 );\n\t\t$Group_Admins->set( 'perm_users', 'edit' );\n\t\t$Group_Admins->dbinsert();\n\n\t\t$Group_Privileged = new Group(); // COPY !\n\t\t$Group_Privileged->set( 'name', 'Privileged Bloggers' );\n\t\t$Group_Privileged->set( 'perm_admin', 'visible' );\n\t\t$Group_Privileged->set( 'perm_blogs', 'viewall' );\n\t\t$Group_Privileged->set( 'perm_stats', 'view' );\n\t\t$Group_Privileged->set( 'perm_spamblacklist', 'edit' );\n\t\t$Group_Privileged->set( 'perm_files', 'add' );\n\t\t$Group_Privileged->set( 'perm_options', 'view' );\n\t\t$Group_Privileged->set( 'perm_templates', 0 );\n\t\t$Group_Privileged->set( 'perm_users', 'view' );\n\t\t$Group_Privileged->dbinsert();\n\n\t\t$Group_Bloggers = new Group(); // COPY !\n\t\t$Group_Bloggers->set( 'name', 'Bloggers' );\n\t\t$Group_Bloggers->set( 'perm_admin', 'visible' );\n\t\t$Group_Bloggers->set( 'perm_blogs', 'user' );\n\t\t$Group_Bloggers->set( 'perm_stats', 'none' );\n\t\t$Group_Bloggers->set( 'perm_spamblacklist', 'view' );\n\t\t$Group_Bloggers->set( 'perm_files', 'view' );\n\t\t$Group_Bloggers->set( 'perm_options', 'none' );\n\t\t$Group_Bloggers->set( 'perm_templates', 0 );\n\t\t$Group_Bloggers->set( 'perm_users', 'none' );\n\t\t$Group_Bloggers->dbinsert();\n\n\t\t$Group_Users = new Group(); // COPY !\n\t\t$Group_Users->set( 'name', 'Basic Users' );\n\t\t$Group_Users->set( 'perm_admin', 'none' );\n\t\t$Group_Users->set( 'perm_blogs', 'user' );\n\t\t$Group_Users->set( 'perm_stats', 'none' );\n\t\t$Group_Users->set( 'perm_spamblacklist', 'none' );\n\t\t$Group_Users->set( 'perm_files', 'none' );\n\t\t$Group_Users->set( 'perm_options', 'none' );\n\t\t$Group_Users->set( 'perm_templates', 0 );\n\t\t$Group_Users->set( 'perm_users', 'none' );\n\t\t$Group_Users->dbinsert();\n\t\techo \"OK.<br />\\n\";\n\n\n\t\techo 'Creating table for Blog-User permissions... ';\n\t\t$query = \"CREATE TABLE T_coll_user_perms (\n\t\t\tbloguser_blog_ID int(11) unsigned NOT NULL default 0,\n\t\t\tbloguser_user_ID int(11) unsigned NOT NULL default 0,\n\t\t\tbloguser_ismember tinyint NOT NULL default 0,\n\t\t\tbloguser_perm_poststatuses set('published','deprecated','protected','private','draft') NOT NULL default '',\n\t\t\tbloguser_perm_delpost tinyint NOT NULL default 0,\n\t\t\tbloguser_perm_comments tinyint NOT NULL default 0,\n\t\t\tbloguser_perm_cats tinyint NOT NULL default 0,\n\t\t\tbloguser_perm_properties tinyint NOT NULL default 0,\n\t\t\tbloguser_perm_media_upload tinyint NOT NULL default 0,\n\t\t\tbloguser_perm_media_browse tinyint NOT NULL default 0,\n\t\t\tbloguser_perm_media_change tinyint NOT NULL default 0,\n\t\t\tPRIMARY KEY bloguser_pk (bloguser_blog_ID,bloguser_user_ID)\n\t\t)\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\t\t$tablegroups_isuptodate = true;\n\t\t$tableblogusers_isuptodate = true;\n\n\t\techo 'Creating user blog permissions... ';\n\t\t// Admin: full rights for all blogs (look 'ma, doing a natural join! :>)\n\t\t$query = \"INSERT INTO T_coll_user_perms( bloguser_blog_ID, bloguser_user_ID, bloguser_ismember,\n\t\t\t\t\t\t\t\tbloguser_perm_poststatuses, bloguser_perm_delpost, bloguser_perm_comments,\n\t\t\t\t\t\t\t\tbloguser_perm_cats, bloguser_perm_properties)\n\t\t\t\t\t\t\tSELECT blog_ID, ID, 1, 'published,deprecated,protected,private,draft', 1, 1, 1, 1\n\t\t\t\t\t\t\tFROM T_users, T_blogs\n\t\t\t\t\t\t\tWHERE user_level = 10\";\n\t\t$DB->query( $query );\n\n\t\t// Normal users: basic rights for all blogs (can't stop doing joins :P)\n\t\t$query = \"INSERT INTO T_coll_user_perms( bloguser_blog_ID, bloguser_user_ID, bloguser_ismember,\n\t\t\t\t\t\t\t\tbloguser_perm_poststatuses, bloguser_perm_delpost, bloguser_perm_comments,\n\t\t\t\t\t\t\t\tbloguser_perm_cats, bloguser_perm_properties)\n\t\t\t\t\t\t\tSELECT blog_ID, ID, 1, 'published,protected,private,draft', 0, 1, 0, 0\n\t\t\t\t\t\t\tFROM T_users, T_blogs\n\t\t\t\t\t\t\tWHERE user_level > 0 AND user_level < 10\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading users table... ';\n\t\t$DB->query( 'UPDATE T_users\n\t\t\t\t\t\t\t\t\t  SET dateYMDhour = \\'2000-01-01 00:00:00\\'\n\t\t\t\t\t\t\t\t\tWHERE ( dateYMDhour = \\'0000-00-00 00:00:00\\' OR dateYMDhour = \\'2000-00-00 00:00:01\\' )' );\n\t\t$DB->query( 'ALTER TABLE T_users\n\t\t\t\t\t\t\tMODIFY COLUMN dateYMDhour DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$query = \"ALTER TABLE T_users\n\t\t\t\t\t\t\tADD COLUMN user_notify tinyint(1) NOT NULL default 1,\n\t\t\t\t\t\t\tADD COLUMN user_grp_ID int(4) NOT NULL default 1,\n\t\t\t\t\t\t\tMODIFY COLUMN user_idmode varchar(20) NOT NULL DEFAULT 'login'\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"ALTER TABLE T_users\n\t\t\t\t\t\t\tADD KEY user_grp_ID (user_grp_ID)\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Assigning user groups... ';\n\n\t\t// Default is 1, so admins are already set.\n\n\t\t// Basic Users:\n\t\t$query = \"UPDATE T_users\n\t\t\t\t\t\t\tSET user_grp_ID = $Group_Users->ID\n\t\t\t\t\t\t\tWHERE user_level = 0\";\n\t\t$DB->query( $query );\n\n\t\t// Bloggers:\n\t\t$query = \"UPDATE T_users\n\t\t\t\t\t\t\tSET user_grp_ID = $Group_Bloggers->ID\n\t\t\t\t\t\t\tWHERE user_level > 0 AND user_level < 10\";\n\t\t$DB->query( $query );\n\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading settings table... ';\n\t\t$query = \"ALTER TABLE T_settings\n\t\t\t\t\t\t\tDROP COLUMN time_format,\n\t\t\t\t\t\t\tDROP COLUMN date_format,\n\t\t\t\t\t\t\tADD COLUMN pref_newusers_grp_ID int unsigned DEFAULT 4 NOT NULL,\n\t\t\t\t\t\t\tADD COLUMN pref_newusers_level tinyint unsigned DEFAULT 1 NOT NULL,\n\t\t\t\t\t\t\tADD COLUMN pref_newusers_canregister tinyint unsigned DEFAULT 0 NOT NULL\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8050' );\n\t}\n\n\n\tif( $old_db_version < 8060 )\n\t{ // upgrade to 0.9\n\t\t// Important check:\n\t\t$stub_list = $DB->get_col( \"\n\t\t\tSELECT blog_stub\n\t\t\t  FROM T_blogs\n\t\t\t GROUP BY blog_stub\n\t\t\tHAVING COUNT(*) > 1\" );\n\t\tif( !empty($stub_list) )\n\t\t{\n\t\t\techo '<div class=\"error\"><p class=\"error\">';\n\t\t\tprintf( T_(\"It appears that the following blog stub names are used more than once: ['%s']\" ), implode( \"','\", $stub_list ) );\n\t\t\techo '</p><p>';\n\t\t\tprintf( T_(\"I can't upgrade until you make them unique. DB field: [%s]\" ), $db_config['aliases']['T_blogs'].'.blog_stub' );\n\t\t\techo '</p></div>';\n\t\t\treturn false;\n\t\t}\n\n\t\t// Create locales\n\t\techo 'Creating table for Locales... ';\n\t\t$query = \"CREATE TABLE T_locales (\n\t\t\t\tloc_locale varchar(20) NOT NULL default '',\n\t\t\t\tloc_charset varchar(15) NOT NULL default 'iso-8859-1',\n\t\t\t\tloc_datefmt varchar(10) NOT NULL default 'y-m-d',\n\t\t\t\tloc_timefmt varchar(10) NOT NULL default 'H:i:s',\n\t\t\t\tloc_name varchar(40) NOT NULL default '',\n\t\t\t\tloc_messages varchar(20) NOT NULL default '',\n\t\t\t\tloc_priority tinyint(4) UNSIGNED NOT NULL default '0',\n\t\t\t\tloc_enabled tinyint(4) NOT NULL default '1',\n\t\t\t\tPRIMARY KEY loc_locale( loc_locale )\n\t\t\t) COMMENT='saves available locales'\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading posts table... ';\n\t\t$query = \"UPDATE {$tableprefix}posts\n\t\t\t\t\t\t\tSET post_urltitle = NULL\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"ALTER TABLE {$tableprefix}posts\n\t\t\t\t\t\t\tCHANGE COLUMN post_date post_issue_date datetime NOT NULL default '1000-01-01 00:00:00',\n\t\t\t\t\t\t\tADD COLUMN post_mod_date datetime NOT NULL default '1000-01-01 00:00:00'\n\t\t\t\t\t\t\t\t\t\tAFTER post_issue_date,\n\t\t\t\t\t\t\tCHANGE COLUMN post_lang post_locale varchar(20) NOT NULL default 'en-EU',\n\t\t\t\t\t\t\tDROP COLUMN post_url,\n\t\t\t\t\t\t\tCHANGE COLUMN post_trackbacks post_url varchar(250) NULL default NULL,\n\t\t\t\t\t\t\tADD COLUMN post_renderers VARCHAR(179) NOT NULL default 'default'\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"ALTER TABLE {$tableprefix}posts\n\t\t\t\t\t\t\tADD INDEX post_issue_date( post_issue_date ),\n\t\t\t\t\t\t\tADD UNIQUE post_urltitle( post_urltitle )\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"ALTER TABLE {$tableprefix}posts\n\t\t\t\t\tDROP INDEX post_date\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"UPDATE {$tableprefix}posts\n\t\t\t\t\t\t\tSET post_mod_date = post_issue_date\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\t// convert given languages to locales\n\t\tconvert_lang_to_locale( \"{$tableprefix}posts\", 'post_locale', 'ID' );\n\n\t\techo 'Upgrading blogs table... ';\n\t\t$query = \"ALTER TABLE T_blogs\n\t\t\t\t\t\t\tCHANGE blog_lang blog_locale varchar(20) NOT NULL default 'en-EU',\n\t\t\t\t\t\t\tCHANGE blog_roll blog_notes TEXT NULL,\n\t\t\t\t\t\t\tMODIFY COLUMN blog_default_skin VARCHAR(30) NOT NULL DEFAULT 'custom',\n\t\t\t\t\t\t\tDROP COLUMN blog_filename,\n\t\t\t\t\t\t\tADD COLUMN blog_access_type VARCHAR(10) NOT NULL DEFAULT 'index.php' AFTER blog_locale,\n\t\t\t\t\t\t\tADD COLUMN blog_force_skin tinyint(1) NOT NULL default 0 AFTER blog_default_skin,\n\t\t\t\t\t\t\tADD COLUMN blog_in_bloglist tinyint(1) NOT NULL DEFAULT 1 AFTER blog_disp_bloglist,\n\t\t\t\t\t\t\tADD COLUMN blog_links_blog_ID INT(4) NOT NULL DEFAULT 0,\n\t\t\t\t\t\t\tADD UNIQUE KEY blog_stub (blog_stub)\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"UPDATE T_blogs\n\t\t\t\t\t\t\tSET blog_access_type = 'stub',\n\t\t\t\t\t\t\t\t\tblog_default_skin = 'custom'\";\n\t\t$DB->query( $query );\n\n\t\techo \"OK.<br />\\n\";\n\n\t\t// convert given languages to locales\n\t\tconvert_lang_to_locale( 'T_blogs', 'blog_locale', 'blog_ID' );\n\n\n\t\techo 'Converting settings table... ';\n\n\t\t// get old settings\n\t\t$query = 'SELECT * FROM T_settings';\n\t\t$row = $DB->get_row( $query, ARRAY_A );\n\n\t\t#echo 'oldrow:<br />'; pre_dump($row);\n\t\t$transform = array(\n\t\t\t'posts_per_page' => array(5),      // note: moved to blogsettings in 2.0\n\t\t\t'what_to_show' => array('posts'),  // note: moved to blogsettings in 2.0\n\t\t\t'archive_mode' => array('monthly'),// note: moved to blogsettings in 2.0\n\t\t\t'time_difference' => array(0),\n\t\t\t'AutoBR' => array(0),\n\t\t\t'last_antispam_update' => array('2000-01-01 00:00:00', 'antispam_last_update'),\n\t\t\t'pref_newusers_grp_ID' => array($Group_Users->ID, 'newusers_grp_ID'),\n\t\t\t'pref_newusers_level'  => array(1, 'newusers_level'),\n\t\t\t'pref_newusers_canregister' => array(0, 'newusers_canregister'),\n\t\t);\n\n\t\t$_trans = array();\n\t\tforeach( $transform as $oldkey => $newarr )\n\t\t{\n\t\t\t$newname = ( isset($newarr[1]) ? $newarr[1] : $oldkey );\n\t\t\tif( !isset( $row[$oldkey] ) )\n\t\t\t{\n\t\t\t\techo '&nbsp;&middot;Setting '.$oldkey.' not found, using defaults.<br />';\n\t\t\t\t$_trans[ $newname ] = $newarr[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$_trans[ $newname ] = $row[$oldkey];\n\t\t\t}\n\t\t}\n\n\t\t// drop old table\n\t\t$DB->query( 'DROP TABLE IF EXISTS T_settings' );\n\n\t\t// create new table\n\t\t$DB->query(\n\t\t\t'CREATE TABLE T_settings (\n\t\t\t\tset_name VARCHAR( 30 ) NOT NULL ,\n\t\t\t\tset_value VARCHAR( 255 ) NULL ,\n\t\t\t\tPRIMARY KEY ( set_name )\n\t\t\t)');\n\n\t\t// insert defaults and use transformed settings\n\t\tcreate_default_settings( $_trans );\n\n\t\tif( !isset( $tableblogusers_isuptodate ) )\n\t\t{\n\t\t\techo 'Upgrading Blog-User permissions table... ';\n\t\t\t$query = \"ALTER TABLE T_coll_user_perms\n\t\t\t\t\t\t\t\tADD COLUMN bloguser_ismember tinyint NOT NULL default 0 AFTER bloguser_user_ID\";\n\t\t\t$DB->query( $query );\n\n\t\t\t// Any row that is created holds at least one permission,\n\t\t\t// minimum permsission is to be a member, so we add that one too, to all existing rows.\n\t\t\t$DB->query( \"UPDATE T_coll_user_perms\n\t\t\t\t\t\t\t\t\t\t\tSET bloguser_ismember = 1\" );\n\t\t\techo \"OK.<br />\\n\";\n\t\t}\n\n\t\techo 'Upgrading Comments table... ';\n\t\t$DB->query( 'UPDATE T_comments\n\t\t\t\t\t\t\t\t\t  SET comment_date = \\'2000-01-01 00:00:00\\'\n\t\t\t\t\t\t\t\t\tWHERE comment_date = \\'0000-00-00 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\t\t\t\t\tMODIFY COLUMN comment_date DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$query = \"ALTER TABLE T_comments\n\t\t\t\t\t\t\tADD COLUMN comment_author_ID int unsigned NULL default NULL AFTER comment_status,\n\t\t\t\t\t\t\tMODIFY COLUMN comment_author varchar(100) NULL,\n\t\t\t\t\t\t\tMODIFY COLUMN comment_author_email varchar(100) NULL,\n\t\t\t\t\t\t\tMODIFY COLUMN comment_author_url varchar(100) NULL,\n\t\t\t\t\t\t\tMODIFY COLUMN comment_author_IP varchar(23) NOT NULL default ''\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading Users table... ';\n\t\t$query = \"ALTER TABLE T_users ADD user_locale VARCHAR( 20 ) DEFAULT 'en-EU' NOT NULL AFTER user_yim\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8060' );\n\t}\n\n\n\tif( $old_db_version < 8062 )\n\t{ // upgrade to 0.9.0.4\n\t\techo \"Checking for extra quote escaping in posts... \";\n\t\t$query = \"SELECT ID, post_title, post_content\n\t\t\t\t\t\t\t\tFROM {$tableprefix}posts\n\t\t\t\t\t\t\t WHERE post_title LIKE '%\\\\\\\\\\\\\\\\\\'%'\n\t\t\t\t\t\t\t\t\tOR post_title LIKE '%\\\\\\\\\\\\\\\\\\\"%'\n\t\t\t\t\t\t\t\t\tOR post_content LIKE '%\\\\\\\\\\\\\\\\\\'%'\n\t\t\t\t\t\t\t\t\tOR post_content LIKE '%\\\\\\\\\\\\\\\\\\\"%' \";\n\t\t/* FP: the above looks overkill, but MySQL is really full of surprises...\n\t\t\t\t\t\ttested on 4.0.14-nt */\n\t\t// echo $query;\n\t\t$rows = $DB->get_results( $query, ARRAY_A );\n\t\tif( $DB->num_rows )\n\t\t{\n\t\t\techo 'Updating '.$DB->num_rows.' posts... ';\n\t\t\tforeach( $rows as $row )\n\t\t\t{\n\t\t\t\t// echo '<br />'.$row['post_title'];\n\t\t\t\t$query = \"UPDATE {$tableprefix}posts\n\t\t\t\t\t\t\t\t\tSET post_title = \".$DB->quote( stripslashes( $row['post_title'] ) ).\",\n\t\t\t\t\t\t\t\t\t\t\tpost_content = \".$DB->quote( stripslashes( $row['post_content'] ) ).\"\n\t\t\t\t\t\t\t\t\tWHERE ID = \".$row['ID'];\n\t\t\t\t// echo '<br />'.$query;\n\t\t\t\t$DB->query( $query );\n\t\t\t}\n\t\t}\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8062' );\n\t}\n\n\n\tif( $old_db_version < 8064 )\n\t{ // upgrade to 0.9.0.6\n\t\tcleanup_comment_quotes();\n\n\t\tset_upgrade_checkpoint( '8064' );\n\t}\n\n\n\tif( $old_db_version < 8066 )\n\t{\t// upgrade to 0.9.1\n\t\techo 'Adding catpost index... ';\n\t\t$DB->query( 'ALTER TABLE T_postcats ADD UNIQUE catpost ( postcat_cat_ID, postcat_post_ID )' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8066' );\n\t}\n\n\n\tif( $old_db_version < 8800 )\n\t{ // ---------------------------------- upgrade to 1.6 \"phoenix ALPHA\"\n\n\t\techo 'Dropping old Hitlog table... ';\n\t\t$DB->query( 'DROP TABLE IF EXISTS T_hitlog' );\n\t\techo \"OK.<br />\\n\";\n\n\t\t// New tables:\n\t\t\techo 'Creating table for active sessions... ';\n\t\t\t$DB->query( \"CREATE TABLE T_sessions (\n\t\t\t\t\t\t\t\t\t\t\tsess_ID        INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\t\t\tsess_key       CHAR(32) NULL,\n\t\t\t\t\t\t\t\t\t\t\tsess_lastseen  DATETIME NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\tsess_ipaddress VARCHAR(15) NOT NULL DEFAULT '',\n\t\t\t\t\t\t\t\t\t\t\tsess_user_ID   INT(10) DEFAULT NULL,\n\t\t\t\t\t\t\t\t\t\t\tsess_agnt_ID   INT UNSIGNED NULL,\n\t\t\t\t\t\t\t\t\t\t\tsess_data      TEXT DEFAULT NULL,\n\t\t\t\t\t\t\t\t\t\t\tPRIMARY KEY( sess_ID )\n\t\t\t\t\t\t\t\t\t\t)\" );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating user settings table... ';\n\t\t\t$DB->query( \"CREATE TABLE {$tableprefix}usersettings (\n\t\t\t\t\t\t\t\t\t\t\tuset_user_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\tuset_name    VARCHAR( 30 ) NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\tuset_value   VARCHAR( 255 ) NULL,\n\t\t\t\t\t\t\t\t\t\t\tPRIMARY KEY ( uset_user_ID, uset_name )\n\t\t\t\t\t\t\t\t\t\t)\");\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating plugins table... ';\n\t\t\t$DB->query( \"CREATE TABLE T_plugins (\n\t\t\t\t\t\t\t\t\t\t\tplug_ID        INT(11) UNSIGNED NOT NULL auto_increment,\n\t\t\t\t\t\t\t\t\t\t\tplug_priority  INT(11) NOT NULL default 50,\n\t\t\t\t\t\t\t\t\t\t\tplug_classname VARCHAR(40) NOT NULL default '',\n\t\t\t\t\t\t\t\t\t\t\tPRIMARY KEY ( plug_ID )\n\t\t\t\t\t\t\t\t\t\t)\");\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating table for Post Statuses... ';\n\t\t\t$query=\"CREATE TABLE {$tableprefix}poststatuses (\n\t\t\t\t\t\t\t\t\t\t\tpst_ID   int(11) unsigned not null AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\t\t\tpst_name varchar(30)      not null,\n\t\t\t\t\t\t\t\t\t\t\tprimary key ( pst_ID )\n\t\t\t\t\t\t\t\t\t\t)\";\n\t\t\t$DB->query( $query );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating table for Post Types... ';\n\t\t\t$query=\"CREATE TABLE {$tableprefix}posttypes (\n\t\t\t\t\t\t\t\t\t\t\tptyp_ID   int(11) unsigned not null AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\t\t\tptyp_name varchar(30)      not null,\n\t\t\t\t\t\t\t\t\t\t\tprimary key (ptyp_ID)\n\t\t\t\t\t\t\t\t\t\t)\";\n\t\t\t$DB->query( $query );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating table for File Meta Data... ';\n\t\t\t$DB->query( \"CREATE TABLE T_files (\n\t\t\t\t\t\t\t\t\t\t file_ID        int(11) unsigned  not null AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\t\t file_root_type enum('absolute','user','group','collection') not null default 'absolute',\n\t\t\t\t\t\t\t\t\t\t file_root_ID   int(11) unsigned  not null default 0,\n\t\t\t\t\t\t\t\t\t\t file_path      varchar(255)      not null default '',\n\t\t\t\t\t\t\t\t\t\t file_title     varchar(255),\n\t\t\t\t\t\t\t\t\t\t file_alt       varchar(255),\n\t\t\t\t\t\t\t\t\t\t file_desc      text,\n\t\t\t\t\t\t\t\t\t\t primary key (file_ID),\n\t\t\t\t\t\t\t\t\t\t unique file (file_root_type, file_root_ID, file_path)\n\t\t\t\t\t\t\t\t\t)\" );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating table for base domains... ';\n\t\t\t$DB->query( \"CREATE TABLE T_basedomains (\n\t\t\t\t\t\t\t\t\t\tdom_ID     INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\t\tdom_name   VARCHAR(250) NOT NULL DEFAULT '',\n\t\t\t\t\t\t\t\t\t\tdom_status ENUM('unknown','whitelist','blacklist') NOT NULL DEFAULT 'unknown',\n\t\t\t\t\t\t\t\t\t\tdom_type   ENUM('unknown','normal','searcheng','aggregator') NOT NULL DEFAULT 'unknown',\n\t\t\t\t\t\t\t\t\t\tPRIMARY KEY (dom_ID),\n\t\t\t\t\t\t\t\t\t\tUNIQUE dom_name (dom_name)\n\t\t\t\t\t\t\t\t\t)\" );\t// fp> the unique key was only named in version 1.9. Crap. Put the name back here to save as many souls as possible. bulk has not upgraded from 0.9 yet :/\n\t\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8820' );\n\t}\n\n\n\tif( $old_db_version < 8840 )\n\t{\n\n\t\t\techo 'Creating table for user agents... ';\n\t\t\t$DB->query( \"CREATE TABLE {$tableprefix}useragents (\n\t\t\t\t\t\t\t\t\t\tagnt_ID        INT UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\t\tagnt_signature VARCHAR(250) NOT NULL,\n\t\t\t\t\t\t\t\t\t\tagnt_type      ENUM('rss','robot','browser','unknown') DEFAULT 'unknown' NOT NULL,\n\t\t\t\t\t\t\t\t\t\tPRIMARY KEY (agnt_ID) )\" );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating table for Hit-Logs... ';\n\t\t\t$query = \"CREATE TABLE T_hitlog (\n\t\t\t\t\t\t\t\t\thit_ID             INT(11) NOT NULL AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\thit_sess_ID        INT UNSIGNED,\n\t\t\t\t\t\t\t\t\thit_datetime       DATETIME NOT NULL,\n\t\t\t\t\t\t\t\t\thit_uri            VARCHAR(250) DEFAULT NULL,\n\t\t\t\t\t\t\t\t\thit_referer_type   ENUM('search','blacklist','referer','direct','spam') NOT NULL,\n\t\t\t\t\t\t\t\t\thit_referer        VARCHAR(250) DEFAULT NULL,\n\t\t\t\t\t\t\t\t\thit_referer_dom_ID INT UNSIGNED DEFAULT NULL,\n\t\t\t\t\t\t\t\t\thit_blog_ID        int(11) UNSIGNED NULL DEFAULT NULL,\n\t\t\t\t\t\t\t\t\thit_remote_addr    VARCHAR(40) DEFAULT NULL,\n\t\t\t\t\t\t\t\t\tPRIMARY KEY (hit_ID),\n\t\t\t\t\t\t\t\t\tINDEX hit_datetime ( hit_datetime ),\n\t\t\t\t\t\t\t\t\tINDEX hit_blog_ID (hit_blog_ID)\n\t\t\t\t\t\t\t\t)\";\n\t\t\t$DB->query( $query );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating table for subscriptions... ';\n\t\t\t$DB->query( \"CREATE TABLE T_subscriptions (\n\t\t\t\t\t\t\t\t\t\t sub_coll_ID     int(11) unsigned    not null,\n\t\t\t\t\t\t\t\t\t\t sub_user_ID     int(11) unsigned    not null,\n\t\t\t\t\t\t\t\t\t\t sub_items       tinyint(1)          not null,\n\t\t\t\t\t\t\t\t\t\t sub_comments    tinyint(1)          not null,\n\t\t\t\t\t\t\t\t\t\t primary key (sub_coll_ID, sub_user_ID)\n\t\t\t\t\t\t\t\t\t\t)\" );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\t\techo 'Creating table for blog-group permissions... ';\n\t\t\t$DB->query( \"CREATE TABLE T_coll_group_perms (\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_blog_ID int(11) unsigned NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_group_ID int(11) unsigned NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_ismember tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_poststatuses set('published','deprecated','protected','private','draft') NOT NULL default '',\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_delpost tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_comments tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_cats tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_properties tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_media_upload tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_media_browse tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tbloggroup_perm_media_change tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\t\tPRIMARY KEY bloggroup_pk (bloggroup_blog_ID,bloggroup_group_ID) )\" );\n\t\t\techo \"OK.<br />\\n\";\n\n\n\t\techo 'Upgrading blogs table... ';\n\t\t$query = \"ALTER TABLE T_blogs\n\t\t\t\t\t\t\tMODIFY COLUMN blog_ID int(11) unsigned NOT NULL auto_increment,\n\t\t\t\t\t\t\tMODIFY COLUMN blog_links_blog_ID INT(11) NULL DEFAULT NULL,\n\t\t\t\t\t\t\tCHANGE COLUMN blog_stub blog_urlname VARCHAR(255) NOT NULL DEFAULT 'urlname',\n\t\t\t\t\t\t\tADD COLUMN blog_allowcomments VARCHAR(20) NOT NULL default 'post_by_post' AFTER blog_keywords,\n\t\t\t\t\t\t\tADD COLUMN blog_allowblogcss TINYINT(1) NOT NULL default 1 AFTER blog_allowpingbacks,\n\t\t\t\t\t\t\tADD COLUMN blog_allowusercss TINYINT(1) NOT NULL default 1 AFTER blog_allowblogcss,\n\t\t\t\t\t\t\tDROP INDEX blog_stub,\n\t\t\t\t\t\t\tADD COLUMN blog_stub VARCHAR(255) NOT NULL DEFAULT 'stub' AFTER blog_staticfilename,\n\t\t\t\t\t\t\tADD COLUMN blog_commentsexpire INT(4) NOT NULL DEFAULT 0 AFTER blog_links_blog_ID,\n\t\t\t\t\t\t\tADD COLUMN blog_media_location ENUM( 'default', 'subdir', 'custom', 'none' ) DEFAULT 'default' NOT NULL AFTER blog_commentsexpire,\n\t\t\t\t\t\t\tADD COLUMN blog_media_subdir VARCHAR( 255 ) NOT NULL AFTER blog_media_location,\n\t\t\t\t\t\t\tADD COLUMN blog_media_fullpath VARCHAR( 255 ) NOT NULL AFTER blog_media_subdir,\n\t\t\t\t\t\t\tADD COLUMN blog_media_url VARCHAR(255) NOT NULL AFTER blog_media_fullpath\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"ALTER TABLE T_blogs\n\t\t\t\t\t\t\tADD UNIQUE blog_urlname ( blog_urlname )\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8840' );\n\t}\n\n\n\t// sam2kb>fp: We need to make sure there are no values like \"blog_a.php\" in blog_urlname,\n\t//\t\t\tafter this upgrade blog URLs look like $baseurl.'blog_a.php' which might be OK in 0.x version,\n\t//\t\t\tbut this config will not work in b2evo 4. Blog URLs will be broken!\n\tif( $old_db_version < 8850 )\n\t{\n\t\techo 'Updating relative URLs... ';\n\t\t// We need to move the slashes to the end:\n\t\t$query = \"UPDATE T_blogs\n\t\t\t\t\t\t\t\t SET blog_siteurl = CONCAT( SUBSTRING(blog_siteurl,2) , '/' )\n\t\t\t\t\t\t\t WHERE blog_siteurl LIKE '/%'\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Copying urlnames to stub names... ';\n\t\t$query = 'UPDATE T_blogs\n\t\t\t\t\t\t\tSET blog_stub = blog_urlname';\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8850' );\n\t}\n\n\n\tif( $old_db_version < 8855 )\n\t{\n\t\techo 'Upgrading posts table... ';\n\t\t$query = \"ALTER TABLE {$tableprefix}posts\n\t\t\t\t\t\t\tDROP INDEX post_author,\n\t\t\t\t\t\t\tDROP INDEX post_issue_date,\n\t\t\t\t\t\t\tDROP INDEX post_category\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"ALTER TABLE {$tableprefix}posts\n\t\t\t\t\t\t\tDROP COLUMN post_karma,\n\t\t\t\t\t\t\tDROP COLUMN post_autobr,\n\t\t\t\t\t\t\tCHANGE COLUMN ID post_ID int(11) unsigned NOT NULL auto_increment,\n\t\t\t\t\t\t\tCHANGE COLUMN post_author\tpost_creator_user_ID int(11) unsigned NOT NULL,\n\t\t\t\t\t\t\tCHANGE COLUMN post_issue_date\tpost_datestart datetime NOT NULL,\n\t\t\t\t\t\t\tCHANGE COLUMN post_mod_date\tpost_datemodified datetime NOT NULL,\n\t\t\t\t\t\t\tCHANGE COLUMN post_category post_main_cat_ID int(11) unsigned NOT NULL,\n\t\t\t\t\t\t\tADD post_parent_ID\t\t\t\tint(11) unsigned NULL AFTER post_ID,\n\t\t\t\t\t\t\tADD post_lastedit_user_ID\tint(11) unsigned NULL AFTER post_creator_user_ID,\n\t\t\t\t\t\t\tADD post_assigned_user_ID\tint(11) unsigned NULL AFTER post_lastedit_user_ID,\n\t\t\t\t\t\t\tADD post_datedeadline \t\tdatetime NULL AFTER post_datestart,\n\t\t\t\t\t\t\tADD post_datecreated\t\t\tdatetime NULL AFTER post_datedeadline,\n\t\t\t\t\t\t\tADD post_pst_ID\t\t\t\t\t\tint(11) unsigned NULL AFTER post_status,\n\t\t\t\t\t\t\tADD post_ptyp_ID\t\t\t\t\tint(11) unsigned NULL AFTER post_pst_ID,\n\t\t\t\t\t\t\tADD post_views\t\t\t\t\t\tint(11) unsigned NOT NULL DEFAULT 0 AFTER post_flags,\n\t\t\t\t\t\t\tADD post_commentsexpire\t\tdatetime DEFAULT NULL AFTER post_comments,\n\t\t\t\t\t\t\tADD post_priority\t\t\t\t\tint(11) unsigned null\";\n\t\t$DB->query( $query );\n\n\t\t$query = \"ALTER TABLE {$tableprefix}posts\n\t\t\t\t\t\t\tADD INDEX post_creator_user_ID( post_creator_user_ID ),\n\t\t\t\t\t\t\tADD INDEX post_parent_ID( post_parent_ID ),\n\t\t\t\t\t\t\tADD INDEX post_assigned_user_ID( post_assigned_user_ID ),\n\t\t\t\t\t\t\tADD INDEX post_datestart( post_datestart ),\n\t\t\t\t\t\t\tADD INDEX post_main_cat_ID( post_main_cat_ID ),\n\t\t\t\t\t\t\tADD INDEX post_ptyp_ID( post_ptyp_ID ),\n\t\t\t\t\t\t\tADD INDEX post_pst_ID( post_pst_ID ) \";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '8855' );\n\t}\n\n\n\tif( $old_db_version < 8860 )\n\t{\n\t\techo 'Updating post data... ';\n\t\t$query = \"UPDATE {$tableprefix}posts\n\t\t\t\t\t\t\tSET post_lastedit_user_ID = post_creator_user_ID,\n\t\t\t\t\t\t\t\t\tpost_datecreated = post_datestart\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\ttask_begin( 'Upgrading users table... ' );\n\t\t$DB->query( 'UPDATE T_users\n\t\t\t\t\t\t\t\t\t  SET dateYMDhour = \\'2000-01-01 00:00:00\\'\n\t\t\t\t\t\t\t\t\tWHERE dateYMDhour = \\'0000-00-00 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_users\n\t\t\t\t\t\t\tMODIFY COLUMN dateYMDhour DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\t\t\t\t\tCHANGE COLUMN ID user_ID int(11) unsigned NOT NULL auto_increment,\n\t\t\t\t\t\t\tMODIFY COLUMN user_icq int(11) unsigned DEFAULT 0 NOT NULL,\n\t\t\t\t\t\t\tADD COLUMN user_showonline tinyint(1) NOT NULL default 1 AFTER user_notify' );\n\t\ttask_end();\n\n\n\t\tset_upgrade_checkpoint( '8860' );\n\t}\n\n\n\tif( $old_db_version < 8900 )\n\t{\n\n\t\techo 'Setting new defaults... ';\n\t\t$query = 'INSERT INTO T_settings (set_name, set_value)\n\t\t\t\t\t\t\tVALUES\n\t\t\t\t\t\t\t\t( \"reloadpage_timeout\", \"300\" ),\n\t\t\t\t\t\t\t\t( \"upload_enabled\", \"'.(isset($use_fileupload) ? (int)$use_fileupload : '1').'\" ),\n\t\t\t\t\t\t\t\t( \"upload_allowedext\", \"'.(isset($fileupload_allowedtypes) ? $fileupload_allowedtypes : 'jpg gif png').'\" ),\n\t\t\t\t\t\t\t\t( \"upload_maxkb\", \"'.(isset($fileupload_maxk) ? (int)$fileupload_maxk : '96').'\" )\n\t\t\t\t\t\t\t';\n\t\t$DB->query( $query );\n\t\t// Replace \"paged\" mode with \"posts\" // note: moved to blogsettings in 2.0\n\t\t$DB->query( 'UPDATE T_settings\n\t\t\t\t\t\t\t\t\t\tSET set_value = \"posts\"\n\t\t\t\t\t\t\t\t\tWHERE set_name = \"what_to_show\"\n\t\t\t\t\t\t\t\t\t  AND set_value = \"paged\"' );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\tif( !isset( $tableblogusers_isuptodate ) )\n\t\t{\t// We have created the blogusers table before and it's already clean!\n\t\t\techo 'Altering table for Blog-User permissions... ';\n\t\t\t$DB->query( 'ALTER TABLE T_coll_user_perms\n\t\t\t\t\t\t\t\t\t\tMODIFY COLUMN bloguser_blog_ID int(11) unsigned NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\tMODIFY COLUMN bloguser_user_ID int(11) unsigned NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN bloguser_perm_media_upload tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN bloguser_perm_media_browse tinyint NOT NULL default 0,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN bloguser_perm_media_change tinyint NOT NULL default 0' );\n\t\t\techo \"OK.<br />\\n\";\n\t\t}\n\n\n\t\ttask_begin( 'Altering comments table...' );\n\t\t$DB->query( 'UPDATE T_comments\n\t\t\t\t\t\t\t\t\t  SET comment_date = \\'2000-01-01 00:00:00\\'\n\t\t\t\t\t\t\t\t\tWHERE comment_date = \\'0000-00-00 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN comment_date DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN comment_post_ID\t\tint(11) unsigned NOT NULL default 0' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '8900' );\n\t}\n\n\tif( $old_db_version < 9000 )\n\t{\n\t\techo 'Altering Posts to Categories table... ';\n\t\t$DB->query( \"ALTER TABLE T_postcats\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN postcat_post_ID int(11) unsigned NOT NULL,\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN postcat_cat_ID int(11) unsigned NOT NULL\" );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\techo 'Altering Categories table... ';\n\t\t$DB->query( \"ALTER TABLE T_categories\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN cat_ID int(11) unsigned NOT NULL auto_increment,\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN cat_parent_ID int(11) unsigned NULL,\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN cat_blog_ID int(11) unsigned NOT NULL default 2\" );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\techo 'Altering Locales table... ';\n\t\t$DB->query( 'ALTER TABLE T_locales\n\t\t\t\t\t\t\t\t\tADD loc_startofweek TINYINT UNSIGNED NOT NULL DEFAULT 1 AFTER loc_timefmt' );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\tif( !isset( $tablegroups_isuptodate ) )\n\t\t{\t// We have created the groups table before and it's already clean!\n\t\t\techo 'Altering Groups table... ';\n\t\t\t$DB->query( \"ALTER TABLE T_groups\n\t\t\t\t\t\t\t\t\t\tADD COLUMN grp_perm_admin enum('none','hidden','visible') NOT NULL default 'visible' AFTER grp_name,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN grp_perm_files enum('none','view','add','edit') NOT NULL default 'none'\" );\n\t\t\techo \"OK.<br />\\n\";\n\t\t}\n\n\n\t\techo 'Creating table for Post Links... ';\n\t\t$DB->query( \"CREATE TABLE T_links (\n\t\t\t\t\t\t\t\t\tlink_ID               int(11) unsigned  not null AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\tlink_datecreated      datetime          not null,\n\t\t\t\t\t\t\t\t\tlink_datemodified     datetime          not null,\n\t\t\t\t\t\t\t\t\tlink_creator_user_ID  int(11) unsigned  not null,\n\t\t\t\t\t\t\t\t\tlink_lastedit_user_ID int(11) unsigned  not null,\n\t\t\t\t\t\t\t\t\tlink_item_ID          int(11) unsigned  NOT NULL,\n\t\t\t\t\t\t\t\t\tlink_dest_item_ID     int(11) unsigned  NULL,\n\t\t\t\t\t\t\t\t\tlink_file_ID          int(11) unsigned  NULL,\n\t\t\t\t\t\t\t\t\tlink_ltype_ID         int(11) unsigned  NOT NULL default 1,\n\t\t\t\t\t\t\t\t\tlink_external_url     VARCHAR(255)      NULL,\n\t\t\t\t\t\t\t\t\tlink_title            TEXT              NULL,\n\t\t\t\t\t\t\t\t\tPRIMARY KEY (link_ID),\n\t\t\t\t\t\t\t\t\tINDEX link_item_ID( link_item_ID ),\n\t\t\t\t\t\t\t\t\tINDEX link_dest_item_ID (link_dest_item_ID),\n\t\t\t\t\t\t\t\t\tINDEX link_file_ID (link_file_ID)\n\t\t\t\t\t\t\t\t)\" );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\techo 'Creating default Post Types... ';\n\t\t$DB->query( \"\n\t\t\tINSERT INTO {$tableprefix}posttypes ( ptyp_ID, ptyp_name )\n\t\t\tVALUES ( 1, 'Post' ),\n\t\t\t       ( 2, 'Link' )\" );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\tset_upgrade_checkpoint( '9000' );\n\t}\n\n\n\tif( $old_db_version < 9100 )\n\t{\t// 1.8 ALPHA\n\n\t\techo 'Creating table for plugin events... ';\n\t\t$DB->query( '\n\t\t\tCREATE TABLE T_pluginevents(\n\t\t\t\t\tpevt_plug_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\tpevt_event VARCHAR(40) NOT NULL,\n\t\t\t\t\tpevt_enabled TINYINT NOT NULL DEFAULT 1,\n\t\t\t\t\tPRIMARY KEY( pevt_plug_ID, pevt_event )\n\t\t\t\t)' );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\techo 'Altering Links table... ';\n\t\t$DB->query( 'ALTER TABLE T_links\n\t\t             CHANGE link_item_ID link_itm_ID INT( 11 ) UNSIGNED NOT NULL,\n\t\t             CHANGE link_dest_item_ID link_dest_itm_ID INT( 11 ) UNSIGNED NULL' );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\tif( $old_db_version >= 9000 )\n\t\t{ // sess_agnt_ID used in Phoenix-Alpha\n\t\t\techo 'Altering sessions table... ';\n\t\t\t$query = \"\n\t\t\t\t\tALTER TABLE T_sessions\n\t\t\t\t\t DROP COLUMN sess_agnt_ID\";\n\t\t\t$DB->query( $query );\n\t\t\techo \"OK.<br />\\n\";\n\t\t}\n\n\t\techo 'Creating table for file types... ';\n\t\t$DB->query( '\n\t\t\t\tCREATE TABLE T_filetypes (\n\t\t\t\t\tftyp_ID int(11) unsigned NOT NULL auto_increment,\n\t\t\t\t\tftyp_extensions varchar(30) NOT NULL,\n\t\t\t\t\tftyp_name varchar(30) NOT NULL,\n\t\t\t\t\tftyp_mimetype varchar(50) NOT NULL,\n\t\t\t\t\tftyp_icon varchar(20) default NULL,\n\t\t\t\t\tftyp_viewtype varchar(10) NOT NULL,\n\t\t\t\t\tftyp_allowed tinyint(1) NOT NULL default 0,\n\t\t\t\t\tPRIMARY KEY (ftyp_ID)\n\t\t\t\t)' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Creating default file types... ';\n\t\t$DB->query( \"INSERT INTO T_filetypes\n\t\t\t\t(ftyp_ID, ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed)\n\t\t\tVALUES\n\t\t\t\t(1, 'gif', 'GIF image', 'image/gif', 'image2.png', 'image', 1),\n\t\t\t\t(2, 'png', 'PNG image', 'image/png', 'image2.png', 'image', 1),\n\t\t\t\t(3, 'jpg jpeg', 'JPEG image', 'image/jpeg', 'image2.png', 'image', 1),\n\t\t\t\t(4, 'txt', 'Text file', 'text/plain', 'document.png', 'text', 1),\n\t\t\t\t(5, 'htm html', 'HTML file', 'text/html', 'html.png', 'browser', 0),\n\t\t\t\t(6, 'pdf', 'PDF file', 'application/pdf', 'pdf.png', 'browser', 1),\n\t\t\t\t(7, 'doc', 'Microsoft Word file', 'application/msword', 'doc.gif', 'external', 1),\n\t\t\t\t(8, 'xls', 'Microsoft Excel file', 'application/vnd.ms-excel', 'xls.gif', 'external', 1),\n\t\t\t\t(9, 'ppt', 'Powerpoint', 'application/vnd.ms-powerpoint', 'ppt.gif', 'external', 1),\n\t\t\t\t(10, 'pps', 'Slideshow', 'pps', 'pps.gif', 'external', 1),\n\t\t\t\t(11, 'zip', 'ZIP archive', 'application/zip', 'zip.gif', 'external', 1),\n\t\t\t\t(12, 'php php3 php4 php5 php6', 'PHP script', 'application/x-httpd-php', 'php.gif', 'text', 0),\n\t\t\t\t(13, 'css', 'Style sheet', 'text/css', '', 'text', 1)\n\t\t\t\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Giving Administrator Group edit perms on files... ';\n\t\t$DB->query( 'UPDATE T_groups\n\t\t             SET grp_perm_files = \"edit\"\n\t\t             WHERE grp_ID = 1' );\n\t \t// Later versions give 'all' on install, but we won't upgrade to that for security.\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Giving Administrator Group full perms on media for all blogs... ';\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t             SET bloggroup_perm_media_upload = 1,\n\t\t                 bloggroup_perm_media_browse = 1,\n\t\t                 bloggroup_perm_media_change = 1\n\t\t             WHERE bloggroup_group_ID = 1' );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\tif( $old_db_version >= 9000 )\n\t\t{ // Uninstall all ALPHA (potentially incompatible) plugins\n\t\t\techo 'Uninstalling all existing plugins... ';\n\t\t\t$DB->query( 'DELETE FROM T_plugins WHERE 1=1' );\n\t\t\techo \"OK.<br />\\n\";\n\t\t}\n\n\t\t// NOTE: basic plugins get installed separatly for upgrade and install..\n\n\n\t\tset_upgrade_checkpoint( '9100' );\n\t}\n\n\n\tif( $old_db_version < 9190 ) // Note: changed from 9200, to include the block below, if DB is not yet on 1.8\n\t{\t// 1.8 ALPHA (block #2)\n\t\techo 'Altering Posts table... ';\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}posts\n\t\t             CHANGE post_comments post_comment_status ENUM('disabled', 'open', 'closed') NOT NULL DEFAULT 'open'\" );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\tset_upgrade_checkpoint( '9190' );\n\t}\n\n\n\tif( $old_db_version < 9192 )\n\t{ // 1.8 ALPHA (block #3) - The payload that db_delta() handled before\n\n\t\t// This is a fix, which broke upgrade to 1.8 (from 1.6) in MySQL strict mode (inserted after 1.8 got released!):\n\t\tif( $DB->get_row( 'SHOW COLUMNS FROM T_hitlog LIKE \"hit_referer_type\"' ) )\n\t\t{ // a niiiiiiiice extra check :p\n\t\t\ttask_begin( 'Deleting all \"spam\" hitlog entries... ' );\n\t\t\t$DB->query( '\n\t\t\t\t\tDELETE FROM T_hitlog\n\t\t\t\t\t WHERE hit_referer_type = \"spam\"' );\n\t\t\ttask_end();\n\t\t}\n\n\t\ttask_begin( 'Upgrading users table... ' );\n\t\t$DB->query( 'ALTER TABLE T_users\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_firstname user_firstname varchar(50) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_lastname user_lastname varchar(50) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_nickname user_nickname varchar(50) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_icq user_icq int(11) unsigned NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_email user_email varchar(255) NOT NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_url user_url varchar(255) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_ip user_ip varchar(15) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_domain user_domain varchar(200) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_browser user_browser varchar(200) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_aim user_aim varchar(50) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_msn user_msn varchar(100) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN user_yim user_yim varchar(50) NULL,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN user_allow_msgform TINYINT NOT NULL DEFAULT \\'1\\' AFTER user_idmode,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN user_validated TINYINT(1) NOT NULL DEFAULT 0 AFTER user_grp_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating blog settings...' );\n\t\t$DB->query( 'CREATE TABLE T_coll_settings (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcset_coll_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcset_name    VARCHAR( 30 ) NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcset_value   VARCHAR( 255 ) NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPRIMARY KEY ( cset_coll_ID, cset_name )\n\t\t\t\t\t\t\t\t\t\t\t)' );\n\t\ttask_end();\n\t\tset_upgrade_checkpoint( '9192' );\n\t}\n\n\n\tif( $old_db_version < 9195 )\n\t{\n\t\ttask_begin( 'Upgrading posts table... ' );\n\t\t$DB->query( 'ALTER TABLE '.$tableprefix.'posts\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN post_content post_content         text NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN post_url post_url              \t\tVARCHAR(255) NULL DEFAULT NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN post_renderers post_renderers     TEXT NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading comments table... ' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN comment_author_email comment_author_email varchar(255) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN comment_author_url comment_author_url varchar(255) NULL,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN comment_spam_karma TINYINT NULL AFTER comment_karma,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN comment_allow_msgform TINYINT NOT NULL DEFAULT 0 AFTER comment_spam_karma' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9195' );\n\t}\n\n\n\tif( $old_db_version < 9200 )\n\t{\n\t\ttask_begin( 'Upgrading hitlog table... ' );\n\t\t$DB->query( 'ALTER TABLE T_hitlog\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN hit_referer_type hit_referer_type   ENUM(\\'search\\',\\'blacklist\\',\\'referer\\',\\'direct\\') NOT NULL,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN hit_agnt_ID        INT UNSIGNED NULL AFTER hit_remote_addr' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading post links table... ' );\n\t\t$DB->query( 'ALTER TABLE T_links\n\t\t\t\t\t\t\t\t\t\tADD INDEX link_itm_ID( link_itm_ID ),\n\t\t\t\t\t\t\t\t\t\tADD INDEX link_dest_itm_ID (link_dest_itm_ID)' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading plugins table... ' );\n\t\t$DB->query( 'ALTER TABLE T_plugins\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN plug_priority plug_priority        TINYINT NOT NULL default 50,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN plug_code            VARCHAR(32) NULL AFTER plug_classname,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN plug_apply_rendering ENUM( \\'stealth\\', \\'always\\', \\'opt-out\\', \\'opt-in\\', \\'lazy\\', \\'never\\' ) NOT NULL DEFAULT \\'never\\' AFTER plug_code,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN plug_version         VARCHAR(42) NOT NULL default \\'0\\' AFTER plug_apply_rendering,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN plug_status          ENUM( \\'enabled\\', \\'disabled\\', \\'needs_config\\', \\'broken\\' ) NOT NULL AFTER plug_version,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN plug_spam_weight     TINYINT UNSIGNED NOT NULL DEFAULT 1 AFTER plug_status');\n\t\t$DB->query( 'ALTER TABLE T_plugins\n\t\t\t\t\t\t\t\t\t\tADD UNIQUE plug_code( plug_code ),\n\t\t\t\t\t\t\t\t\t\tADD INDEX plug_status( plug_status )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating plugin settings table... ' );\n\t\t$DB->query( 'CREATE TABLE T_pluginsettings (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpset_plug_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpset_name VARCHAR( 30 ) NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpset_value TEXT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPRIMARY KEY ( pset_plug_ID, pset_name )\n\t\t\t\t\t\t\t\t\t\t\t)' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating plugin user settings table... ' );\n\t\t$DB->query( 'CREATE TABLE T_pluginusersettings (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpuset_plug_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpuset_user_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpuset_name VARCHAR( 30 ) NOT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpuset_value TEXT NULL,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPRIMARY KEY ( puset_plug_ID, puset_user_ID, puset_name )\n\t\t\t\t\t\t\t\t\t\t\t)' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating scheduled tasks table... ' );\n\t\t$DB->query( 'CREATE TABLE T_cron__task(\n\t\t\t\t\t\t\t\t\t\t\t\t ctsk_ID              int(10) unsigned      not null AUTO_INCREMENT,\n\t\t\t\t\t\t\t\t\t\t\t\t ctsk_start_datetime  datetime              not null,\n\t\t\t\t\t\t\t\t\t\t\t\t ctsk_repeat_after    int(10) unsigned,\n\t\t\t\t\t\t\t\t\t\t\t\t ctsk_name            varchar(50)           not null,\n\t\t\t\t\t\t\t\t\t\t\t\t ctsk_controller      varchar(50)           not null,\n\t\t\t\t\t\t\t\t\t\t\t\t ctsk_params          text,\n\t\t\t\t\t\t\t\t\t\t\t\t primary key (ctsk_ID)\n\t\t\t\t\t\t\t\t\t\t\t)' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating cron log table... ' );\n\t\t$DB->query( 'CREATE TABLE T_cron__log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t clog_ctsk_ID              int(10) unsigned   not null,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t clog_realstart_datetime   datetime           not null,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t clog_realstop_datetime    datetime,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t clog_status               enum(\\'started\\',\\'finished\\',\\'error\\',\\'timeout\\') not null default \\'started\\',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t clog_messages             text,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t primary key (clog_ctsk_ID)\n\t\t\t\t\t\t\t\t\t\t\t)' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs table... ' );\n\t\t// blog_allowpingbacks is \"DEFAULT 1\" in the 0.9.0.11 dump.. - changed in 0.9.2?!\n\t\t$DB->query( 'ALTER TABLE T_blogs\n\t\t\t\t\t\t\t\t\t\tALTER COLUMN blog_allowpingbacks SET DEFAULT 0,\n    \t\t\t\t\t\t\t\tCHANGE COLUMN blog_media_subdir blog_media_subdir VARCHAR( 255 ) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN blog_media_fullpath blog_media_fullpath VARCHAR( 255 ) NULL,\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN blog_media_url blog_media_url VARCHAR( 255 ) NULL' );\n\t\ttask_end();\n\n\n\t\tset_upgrade_checkpoint( '9200' ); // at 1.8 \"Summer Beta\" release\n\t}\n\n\n\t// ____________________________ 1.9: ____________________________\n\n\tif( $old_db_version < 9290 )\n\t{\n\t\techo 'Post-fix hit_referer_type == NULL... ';\n\t\t// If you've upgraded from 1.6 to 1.8 and it did not break because of strict mode, there are now NULL values for what \"spam\" was:\n\t\t$DB->query( '\n\t\t\t\t\tDELETE FROM T_hitlog\n\t\t\t\t\t WHERE hit_referer_type IS NULL' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Marking administrator accounts as validated... ';\n\t\t$DB->query( '\n\t\t\t\tUPDATE T_users\n\t\t\t\t   SET user_validated = 1\n\t\t\t\t WHERE user_grp_ID = 1' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Converting auto_prune_stats setting... ';\n\t\t$old_auto_prune_stats = $DB->get_var( '\n\t\t\t\tSELECT set_value\n\t\t\t\t  FROM T_settings\n\t\t\t\t WHERE set_name = \"auto_prune_stats\"' );\n\t\tif( ! is_null($old_auto_prune_stats) && $old_auto_prune_stats < 1 )\n\t\t{ // This means it has been disabled before, so set auto_prune_stats_mode to \"off\"!\n\t\t\t$DB->query( '\n\t\t\t\t\tREPLACE INTO T_settings ( set_name, set_value )\n\t\t\t\t\t VALUES ( \"auto_prune_stats_mode\", \"off\" )' );\n\t\t}\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Converting time_difference from hours to seconds... ';\n\t\t$DB->query( 'UPDATE T_settings SET set_value = set_value*3600 WHERE set_name = \"time_difference\"' );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\techo 'Updating hitlog capabilities... ';\n\t\t$DB->query( '\n\t\t\t\tALTER TABLE '.$tableprefix.'useragents ADD INDEX agnt_type ( agnt_type )' );\n\t\t$DB->query( '\n\t\t\t\tALTER TABLE T_hitlog\n\t\t\t\t  CHANGE COLUMN hit_referer_type hit_referer_type ENUM(\\'search\\',\\'blacklist\\',\\'referer\\',\\'direct\\',\\'self\\',\\'admin\\') NOT NULL' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Updating plugin capabilities... ';\n\t\t$DB->query( '\n\t\t\t\tALTER TABLE T_plugins\n\t\t\t\t\tMODIFY COLUMN plug_status ENUM( \\'enabled\\', \\'disabled\\', \\'needs_config\\', \\'broken\\' ) NOT NULL' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9290' );\n\t}\n\n\n\tif( $old_db_version < 9300 )\n\t{\n\t\t// This can be so long, it needs its own checkpoint protected block in case of failure\n\t\techo 'Updating hitlog indexes... ';\n\t\t$DB->query( '\n\t\t\t\tALTER TABLE T_hitlog\n\t\t\t\t  ADD INDEX hit_agnt_ID        ( hit_agnt_ID ),\n\t\t\t\t  ADD INDEX hit_uri            ( hit_uri ),\n\t\t\t\t  ADD INDEX hit_referer_dom_ID ( hit_referer_dom_ID )\n\t\t\t\t' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9300' );\n\t}\n\n\n\tif( $old_db_version < 9310 )\n\t{\n\t\techo 'Updating basedomains... ';\n\t\t$DB->query( '\n\t\t\t\tUPDATE T_basedomains\n\t\t\t\t   SET dom_status = \"unknown\"' );\t\t// someone has filled this up with junk blacklists before\n\t\t$DB->query( '\n\t\t\t\tALTER TABLE T_basedomains  ADD INDEX dom_type (dom_type)' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9310' );\n\t}\n\n\n\tif( $old_db_version < 9315 )\n\t{\n\t\techo 'Altering locales table... ';\n\t\t$DB->query( \"ALTER TABLE T_locales CHANGE COLUMN loc_datefmt loc_datefmt varchar(20) NOT NULL default 'y-m-d'\" );\n\t\t$DB->query( \"ALTER TABLE T_locales CHANGE COLUMN loc_timefmt loc_timefmt varchar(20) NOT NULL default 'H:i:s'\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Creating item prerendering cache table... ';\n\t\t$DB->query( \"\n\t\t\t\tCREATE TABLE {$tableprefix}item__prerendering(\n\t\t\t\t\titpr_itm_ID                   INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\titpr_format                   ENUM('htmlbody', 'entityencoded', 'xml', 'text') NOT NULL,\n\t\t\t\t\titpr_renderers                TEXT NOT NULL,\n\t\t\t\t\titpr_content_prerendered      TEXT NULL,\n\t\t\t\t\titpr_datemodified             TIMESTAMP NOT NULL,\n\t\t\t\t\tPRIMARY KEY (itpr_itm_ID, itpr_format)\n\t\t\t\t)\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Altering plugins table... ';\n\t\t$DB->query( \"ALTER TABLE T_plugins ADD COLUMN plug_name            VARCHAR(255) NULL default NULL AFTER plug_version\" );\n\t\t$DB->query( \"ALTER TABLE T_plugins ADD COLUMN plug_shortdesc       VARCHAR(255) NULL default NULL AFTER plug_name\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9315' );\n\t}\n\n\n\tif( $old_db_version < 9320 )\n\t{ // Dropping hit_datetime because it's very slow on INSERT (dh)\n\t\t// This can be so long, it needs its own checkpoint protected block in case of failure\n\t\tif( db_index_exists( 'T_hitlog', 'hit_datetime' ) )\n\t\t{ // only drop, if it still exists (may have been removed manually)\n\t\t\techo 'Updating hitlog indexes... ';\n\t\t\t$DB->query( '\n\t\t\t\t\tALTER TABLE T_hitlog\n\t\t\t\t\t\tDROP INDEX hit_datetime\n\t\t\t\t\t' );\n\t\t\techo \"OK.<br />\\n\";\n\t\t}\n\n\t\tset_upgrade_checkpoint( '9320' );\n\t}\n\n\n\tif( $old_db_version < 9326 )\n\t{\n\t\techo 'Removing obsolete settings... ';\n\t\t$DB->query( 'DELETE FROM T_settings WHERE set_name = \"upload_allowedext\"' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Updating blogs... ';\n\t\tdb_drop_col( 'T_blogs', 'blog_allowpingbacks' );\n\n\t\t// Remove and transform obsolete fields blog_pingb2evonet, blog_pingtechnorati, blog_pingweblogs, blog_pingblodotgs\n\t\tif( db_cols_exist( 'T_blogs', array('blog_pingb2evonet', 'blog_pingtechnorati', 'blog_pingweblogs', 'blog_pingblodotgs') ) )\n\t\t{\n\t\t\tforeach( $DB->get_results( '\n\t\t\t\t\tSELECT blog_ID, blog_pingb2evonet, blog_pingtechnorati, blog_pingweblogs, blog_pingblodotgs\n\t\t\t\t\t\tFROM T_blogs' ) as $row )\n\t\t\t{\n\t\t\t\t$ping_plugins = $DB->get_var( 'SELECT cset_value FROM T_coll_settings WHERE cset_coll_ID = '.$row->blog_ID.' AND cset_name = \"ping_plugins\"' );\n\t\t\t\t$ping_plugins = explode(',', $ping_plugins);\n\t\t\t\tif( $row->blog_pingb2evonet )\n\t\t\t\t{\n\t\t\t\t\t$ping_plugins[] = 'ping_b2evonet';\n\t\t\t\t}\n\t\t\t\tif( $row->blog_pingtechnorati || $row->blog_pingweblogs || $row->blog_pingblodotgs )\n\t\t\t\t{ // if either one of the previous pingers was enabled, add ping-o-matic:\n\t\t\t\t\t$ping_plugins[] = 'ping_pingomatic';\n\t\t\t\t}\n\n\t\t\t\t// Insert transformed/generated ping plugins collection setting:\n\t\t\t\t$ping_plugins = array_unique($ping_plugins);\n\t\t\t\t$DB->query( 'REPLACE INTO T_coll_settings\n\t\t\t\t\t\t( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\tVALUES ( '.$row->blog_ID.', \"ping_plugins\", \"'.implode( ',', $ping_plugins ).'\" )' );\n\t\t\t}\n\t\t\t$DB->query( 'ALTER TABLE T_blogs\n\t\t\t\t\tDROP COLUMN blog_pingb2evonet,\n\t\t\t\t\tDROP COLUMN blog_pingtechnorati,\n\t\t\t\t\tDROP COLUMN blog_pingweblogs,\n\t\t\t\t\tDROP COLUMN blog_pingblodotgs' );\n\t\t}\n\t\techo \"OK.<br />\\n\";\n\n\n\t\tset_upgrade_checkpoint( '9326' );\n\t}\n\n\n\tif( $old_db_version < 9328 )\n\t{\n\t\techo 'Updating posts... ';\n\t\tdb_add_col( \"{$tableprefix}posts\", 'post_notifications_status',  'ENUM(\"noreq\",\"todo\",\"started\",\"finished\") NOT NULL DEFAULT \"noreq\" AFTER post_flags' );\n\t\tdb_add_col( \"{$tableprefix}posts\", 'post_notifications_ctsk_ID', 'INT(10) unsigned NULL DEFAULT NULL AFTER post_notifications_status' );\n\t\techo \"OK.<br />\\n\";\n\t\tset_upgrade_checkpoint( '9328' );\n\t}\n\n\n\tif( $old_db_version < 9330 )\n\t{\n\t\tif( db_col_exists( \"{$tableprefix}posts\", 'post_flags') )\n\t\t{\n\t\t\techo 'Updating post notifications... ';\n\t\t\t$DB->query( \"\n\t\t\t\tUPDATE {$tableprefix}posts\n\t\t\t\t\t SET post_notifications_status = 'finished'\n\t\t\t\t WHERE post_flags LIKE '%pingsdone%'\" );\n\t\t\tdb_drop_col( \"{$tableprefix}posts\", 'post_flags' );\n\t\t\techo \"OK.<br />\\n\";\n\t\t}\n\t\tset_upgrade_checkpoint( '9330' );\n\t}\n\n\n\tif( $old_db_version < 9340 )\n\t{\n\t\techo 'Removing duplicate post link indexes... ';\n\t\tif( db_index_exists( 'T_links', 'link_item_ID' ) )\n\t\t{ // only drop, if it still exists (may have been removed manually)\n\t\t\t$DB->query( '\n\t\t\t\t\tALTER TABLE T_links\n\t\t\t\t\t\tDROP INDEX link_item_ID\n\t\t\t\t\t' );\n\t\t}\n\t\tif( db_index_exists( 'T_links', 'link_dest_item_ID' ) )\n\t\t{ // only drop, if it still exists (may have been removed manually)\n\t\t\t$DB->query( '\n\t\t\t\t\tALTER TABLE T_links\n\t\t\t\t\t\tDROP INDEX link_dest_item_ID\n\t\t\t\t\t' );\n\t\t}\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9340' );\n\t}\n\n\t// ____________________________ 1.10: ____________________________\n\n\tif( $old_db_version < 9345 )\n\t{\n\t\techo 'Updating post table... ';\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}posts CHANGE COLUMN post_content post_content MEDIUMTEXT NULL\" );\n\t\techo \"OK.<br />\\n\";\n\t\tset_upgrade_checkpoint( '9345' );\n\t}\n\n\tif( $old_db_version < 9346 )\n\t{\n\t\techo 'Updating prerendering table... ';\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}item__prerendering CHANGE COLUMN itpr_content_prerendered itpr_content_prerendered MEDIUMTEXT NULL\" );\n\t\techo \"OK.<br />\\n\";\n\t\tset_upgrade_checkpoint( '9346' );\n\t}\n\n\tif( $old_db_version < 9348 )\n\t{\n\t\techo 'Updating sessions table... ';\n\t\t$DB->query( 'ALTER TABLE T_sessions CHANGE COLUMN sess_data sess_data MEDIUMBLOB DEFAULT NULL' );\n\t\techo \"OK.<br />\\n\";\n\t\tset_upgrade_checkpoint( '9348' );\n\t}\n\n\tif( $old_db_version < 9350 )\n\t{\n\t\techo 'Updating hitlog table... ';\n\t\t$DB->query( 'ALTER TABLE T_hitlog CHANGE COLUMN hit_referer_type hit_referer_type   ENUM(\\'search\\',\\'blacklist\\',\\'spam\\',\\'referer\\',\\'direct\\',\\'self\\',\\'admin\\') NOT NULL' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9350' );\n\t}\n\n\n\t// TODO: \"If a user has permission to edit a blog, he should be able to put files in the media folder for that blog.\" - see http://forums.b2evolution.net/viewtopic.php?p=36417#36417\n\t/*\n\t// blueyed>> I've came up with the following, but it's too generic IMHO\n\tif( $old_db_version < 9300 )\n\t{\n\t\techo 'Setting automatic media perms on blogs (members can upload)... ';\n\t\t$users = $DB->query( '\n\t\t\t\tUPDATE T_users\n\t\t\t\t   SET bloguser_perm_media_upload = 1\n\t\t\t\t WHERE bloguser_ismember = 1' );\n\t\techo \"OK.<br />\\n\";\n\t}\n\t*/\n\n\n\t// ____________________________ 2.0: ____________________________\n\n\tif( $old_db_version < 9406 )\n\t{\n\t\techo 'Updating chapter url names... ';\n\t\t$DB->query( '\n\t\t\tALTER TABLE T_categories\n\t\t\t\tADD COLUMN cat_urlname VARCHAR(255) NOT NULL' );\n\n\t\t// Create cat_urlname from cat_name:\n\t\t// TODO: Also use it for cafelog upgrade.\n\t\tload_funcs('locales/_charset.funcs.php');\n\t\tforeach( $DB->get_results('SELECT cat_ID, cat_name FROM T_categories') as $cat )\n\t\t{\n\t\t\t$cat_name = trim($cat->cat_name);\n\t\t\tif( strlen($cat_name) )\n\t\t\t{\n\t\t\t\t// TODO: dh> pass locale (useful for transliteration). From main blog?\n\t\t\t\t$cat_urlname = urltitle_validate('', $cat_name, $cat->cat_ID, false, 'cat_urlname', 'cat_ID', 'T_categories');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$cat_urlname = 'c'.$cat->cat_ID;\n\t\t\t}\n\n\t\t\t$DB->query( '\n\t\t\t\tUPDATE T_categories\n\t\t\t\t\t SET cat_urlname = '.$DB->quote($cat_urlname).'\n\t\t\t\t WHERE cat_ID = '.$cat->cat_ID );\n\t\t}\n\n\t\t$DB->query( '\n\t\t\tALTER TABLE T_categories\n\t\t\t\tADD UNIQUE cat_urlname ( cat_urlname )' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Updating Settings... ';\n\t\t$DB->query( '\n      UPDATE T_settings\n         SET set_value = \"disabled\"\n       WHERE set_name = \"links_extrapath\"\n         AND set_value = 0' );\n\t\t$DB->query( '\n      UPDATE T_settings\n         SET set_value = \"ymd\"\n       WHERE set_name = \"links_extrapath\"\n         AND set_value <> 0' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9406' );\n\t}\n\n\n\tif( $old_db_version < 9407 )\n\t{\n\t\techo 'Moving general settings to blog settings... ';\n\t\t$DB->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t             SELECT blog_ID, set_name, set_value\n\t\t\t\t\t\t\t\t\t FROM T_blogs, T_settings\n\t\t\t\t\t\t\t\t\tWHERE set_name = \"posts_per_page\"\n\t\t\t\t\t\t\t\t\t   OR set_name = \"what_to_show\"\n\t\t\t\t\t\t\t\t\t   OR set_name = \"archive_mode\"' );\n\t\t$DB->query( 'DELETE FROM T_settings\n\t\t\t\t\t\t\t\t\tWHERE set_name = \"posts_per_page\"\n\t\t\t\t\t\t\t\t\t   OR set_name = \"what_to_show\"\n\t\t\t\t\t\t\t\t\t   OR set_name = \"archive_mode\"' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading blogs table... ';\n\t\t$query = \"ALTER TABLE T_blogs\n\t\t\t\t\t\t\tDROP COLUMN blog_force_skin\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading groups table... ';\n\t\t$query = \"ALTER TABLE T_groups\n\t\t\t\t\t\t\tCHANGE COLUMN grp_perm_files grp_perm_files enum('none','view','add','edit','all') NOT NULL default 'none'\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading files table... ';\n\t\t$query = \"ALTER TABLE T_files\n\t\t\t\t\t\t\tCHANGE COLUMN file_root_type file_root_type enum('absolute','user','group','collection','skins') not null default 'absolute'\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Updating file types... ';\n\t\t// Only change this if it's close enough to a default install (non customized)\n\t\t$DB->query( \"UPDATE T_filetypes\n\t\t\t\t\t\t\t\t\t\tSET ftyp_viewtype = 'text'\n\t\t\t\t\t\t\t\t\tWHERE ftyp_ID = 12\n\t\t\t\t\t\t\t\t\t\tAND ftyp_extensions = 'php php3 php4 php5 php6'\n\t\t\t\t\t\t\t\t\t\tAND ftyp_mimetype ='application/x-httpd-php'\n\t\t\t\t\t\t\t\t\t\tAND ftyp_icon = 'php.gif'\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Remove obsolete user settings... ';\n\t\t$DB->query( 'DELETE FROM '.$tableprefix.'usersettings\n\t\t\t\t\t\t\t\t\tWHERE uset_name = \"plugins_disp_avail\"' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9407' );\n\t}\n\n\n\tif( $old_db_version < 9408 )\n\t{\n\t\techo 'Creating skins table... ';\n\t\t$DB->query( 'CREATE TABLE T_skins__skin (\n              skin_ID      int(10) unsigned      NOT NULL auto_increment,\n              skin_name    varchar(32)           NOT NULL,\n              skin_type    enum(\\'normal\\',\\'feed\\') NOT NULL default \\'normal\\',\n              skin_folder  varchar(32)           NOT NULL,\n              PRIMARY KEY skin_ID (skin_ID),\n              UNIQUE skin_folder( skin_folder ),\n              KEY skin_name( skin_name )\n            )' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Creating skin containers table... ';\n\t\t$DB->query( 'CREATE TABLE T_skins__container (\n              sco_skin_ID   int(10) unsigned      NOT NULL,\n              sco_name      varchar(40)           NOT NULL,\n              PRIMARY KEY (sco_skin_ID, sco_name)\n            )' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Creating widgets table... ';\n\t\t$DB->query( 'CREATE TABLE T_widget (\n \t\t\t\t\t\twi_ID\t\t\t\t\tINT(10) UNSIGNED auto_increment,\n\t\t\t\t\t\twi_coll_ID    INT(11) UNSIGNED NOT NULL,\n\t\t\t\t\t\twi_sco_name   VARCHAR( 40 ) NOT NULL,\n\t\t\t\t\t\twi_order\t\t\tINT(10) UNSIGNED NOT NULL,\n\t\t\t\t\t\twi_type       ENUM( \\'core\\', \\'plugin\\' ) NOT NULL DEFAULT \\'core\\',\n\t\t\t\t\t\twi_code       VARCHAR(32) NOT NULL,\n\t\t\t\t\t\twi_params     TEXT NULL,\n\t\t\t\t\t\tPRIMARY KEY ( wi_ID ),\n\t\t\t\t\t\tUNIQUE wi_order( wi_coll_ID, wi_sco_name, wi_order )\n          )' );\n\t\techo \"OK.<br />\\n\";\n\n\t\tinstall_basic_skins( false );\n\n\t\techo 'Updating blogs table... ';\n\t\t$DB->query( 'ALTER TABLE T_blogs\n\t\t\t\t\t\t\t\t ALTER COLUMN blog_allowtrackbacks SET DEFAULT 0,\n\t\t\t\t\t\t\t\t\tDROP COLUMN blog_default_skin,\n\t\t\t\t\t\t\t\t\t ADD COLUMN blog_owner_user_ID   int(11) unsigned NOT NULL default 1 AFTER blog_name,\n\t\t\t\t\t\t\t\t\t ADD COLUMN blog_skin_ID INT(10) UNSIGNED NOT NULL DEFAULT 1 AFTER blog_allowusercss' );\n\t\techo \"OK.<br />\\n\";\n\n\n\t\t/**\n\t\t* Install basic widgets.\n\t\t*/\n\t\tfunction install_basic_widgets_9408()\n\t\t{\n\t\t\t/**\n\t\t\t* @var DB\n\t\t\t*/\n\t\t\tglobal $DB;\n\n\t\t\tload_funcs( 'widgets/_widgets.funcs.php' );\n\n\t\t\t$blog_ids = $DB->get_assoc( 'SELECT blog_ID, \"std\" FROM T_blogs' );\n\n\t\t\tforeach( $blog_ids as $blog_id => $blog_type )\n\t\t\t{\n\t\t\t\ttask_begin( 'Installing default widgets for blog #'.$blog_id.'... ' );\n\t\t\t\tinsert_basic_widgets_9408( $blog_id, true, $blog_type );\n\t\t\t\ttask_end();\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Add a widget to global array in order to insert it in DB by single SQL query later\n\t\t *\n\t\t * @param integer Blog ID\n\t\t * @param string Container name\n\t\t * @param string Type\n\t\t * @param string Code\n\t\t * @param integer Order\n\t\t * @param array|string|NULL Widget params\n\t\t */\n\t\tfunction add_basic_widget_9408( $blog_ID, $container_name, $code, $type, $order, $params = NULL )\n\t\t{\n\t\t\tglobal $basic_widgets_insert_sql_rows, $DB;\n\n\t\t\tif( is_null( $params ) )\n\t\t\t{ // NULL\n\t\t\t\t$params = 'NULL';\n\t\t\t}\n\t\t\telseif( is_array( $params ) )\n\t\t\t{ // array\n\t\t\t\t$params = $DB->quote( serialize( $params ) );\n\t\t\t}\n\t\t\telse\n\t\t\t{ // string\n\t\t\t\t$params = $DB->quote( $params );\n\t\t\t}\n\n\t\t\t$basic_widgets_insert_sql_rows[] = '( '\n\t\t\t\t.$blog_ID.', '\n\t\t\t\t.$DB->quote( $container_name ).', '\n\t\t\t\t.$order.', '\n\t\t\t\t.$DB->quote( $type ).', '\n\t\t\t\t.$DB->quote( $code ).', '\n\t\t\t\t.$params.' )';\n\t\t}\n\t\t/**\n\t\t * Insert the widgets for the blog\n\t\t *\n\t\t * @param integer should never be 0\n\t\t * @param boolean should be true only when it's called after initial install\n\t\t * @param string Kind of blog ( 'std', 'photo', 'group', 'forum' )\n\t\t */\n\t\tfunction insert_basic_widgets_9408( $blog_id, $initial_install = false, $kind = '' )\n\t\t{\n\t\t\tglobal $DB, $install_test_features, $basic_widgets_insert_sql_rows;\n\n\t\t\t// Initialize this array first time and clear after previous call of this function\n\t\t\t$basic_widgets_insert_sql_rows = array();\n\n\t\t\t// Handle all blog IDs which can go from function create_demo_contents()\n\t\t\tglobal $blog_home_ID, $blog_a_ID, $blog_b_ID, $blog_photoblog_ID, $blog_forums_ID, $blog_manual_ID, $events_blog_ID;\n\t\t\t$blog_home_ID = intval( $blog_home_ID );\n\t\t\t$blog_a_ID = intval( $blog_a_ID );\n\t\t\t$blog_b_ID = intval( $blog_b_ID );\n\t\t\t$blog_photoblog_ID = intval( $blog_photoblog_ID );\n\t\t\t$blog_forums_ID = intval( $blog_forums_ID );\n\t\t\t$blog_manual_ID = intval( $blog_manual_ID );\n\t\t\t$events_blog_ID = intval( $events_blog_ID );\n\n\t\t\t$default_blog_param = 's:7:\"blog_ID\";s:0:\"\";';\n\t\t\tif( $initial_install && ! empty( $blog_photoblog_ID ) )\n\t\t\t{ // In the case of initial install, we grab photos out of the photoblog (Blog #4)\n\t\t\t\t$default_blog_param = 's:7:\"blog_ID\";s:1:\"'.intval( $blog_photoblog_ID ).'\";';\n\t\t\t}\n\n\n\t\t\t/* Header */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Header', 'coll_title', 'core', 1 );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Header', 'coll_tagline', 'core', 2 );\n\n\n\t\t\t/* Menu */\n\t\t\tif( $kind != 'main' )\n\t\t\t{ // Don't add widgets to Menu container for Main collections\n\t\t\t\t// Home page\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 5, array( 'link_type' => 'home' ) );\n\t\t\t\tif( $blog_id == $blog_b_ID )\n\t\t\t\t{ // Recent Posts\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 10, array( 'link_type' => 'recentposts', 'link_text' => T_('News') ) );\n\t\t\t\t}\n\t\t\t\tif( $kind == 'forum' )\n\t\t\t\t{ // Latest Topics and Replies ONLY for forum\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 13, array( 'link_type' => 'recentposts', 'link_text' => T_('Latest topics') ) );\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 15, array( 'link_type' => 'latestcomments', 'link_text' => T_('Latest replies') ) );\n\t\t\t\t}\n\t\t\t\tif( $kind == 'manual' )\n\t\t\t\t{ // Latest Topics and Replies ONLY for forum\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 13, array( 'link_type' => 'recentposts', 'link_text' => T_('Latest pages') ) );\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 15, array( 'link_type' => 'latestcomments', 'link_text' => T_('Latest comments') ) );\n\t\t\t\t}\n\t\t\t\tif( $kind == 'photo' )\n\t\t\t\t{ // Add menu with Photo index\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 18, array( 'link_type' => 'mediaidx', 'link_text' => T_('Index') ) );\n\t\t\t\t}\n\t\t\t\tif( $kind == 'forum' )\n\t\t\t\t{ // Add menu with User Directory\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 20, array( 'link_type' => 'users' ) );\n\t\t\t\t}\n\t\t\t\t// Pages list:\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'coll_page_list', 'core', 25 );\n\t\t\t\tif( $kind == 'forum' )\n\t\t\t\t{ // My Profile\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 30, array( 'link_type' => 'myprofile' ) );\n\t\t\t\t}\n\t\t\t\tif( $kind == 'std' )\n\t\t\t\t{ // Categories\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 33, array( 'link_type' => 'catdir' ) );\n\t\t\t\t\t// Archives\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 35, array( 'link_type' => 'arcdir' ) );\n\t\t\t\t\t// Latest comments\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 37, array( 'link_type' => 'latestcomments' ) );\n\t\t\t\t}\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'msg_menu_link', 'core', 50, array( 'link_type' => 'messages' ) );\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'msg_menu_link', 'core', 60, array( 'link_type' => 'contacts', 'show_badge' => 0 ) );\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 70, array( 'link_type' => 'login' ) );\n\t\t\t\tif( $kind == 'forum' )\n\t\t\t\t{ // Register\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Menu', 'menu_link', 'core', 80, array( 'link_type' => 'register' ) );\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t/* Item Single */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Item Single', 'item_content', 'core', 10 );\n\t\t\tif( $blog_id != $blog_a_ID && $kind != 'forum' && ( empty( $events_blog_ID ) || $blog_id != $events_blog_ID ) )\n\t\t\t{ // Item Tags\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Item Single', 'item_tags', 'core', 20 );\n\t\t\t}\n\t\t\tif( $blog_id == $blog_b_ID )\n\t\t\t{ // About Author\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Item Single', 'item_about_author', 'core', 25 );\n\t\t\t}\n\t\t\tif( ( $blog_id == $blog_a_ID || ( ! empty( $events_blog_ID ) && $blog_id == $events_blog_ID ) ) && ! empty( $install_test_features ) )\n\t\t\t{ // Google Maps\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Item Single', 'evo_Gmaps', 'plugin', 30 );\n\t\t\t}\n\t\t\tif( $blog_id == $blog_a_ID || $kind == 'manual' )\n\t\t\t{ // Small Print\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Item Single', 'item_small_print', 'core', 40, array( 'format' => ( $blog_id == $blog_a_ID ? 'standard' : 'revision' ) ) );\n\t\t\t}\n\n\n\t\t\t/* Page Top */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Page Top', 'user_links', 'core', 10 );\n\n\n\t\t\t/* Sidebar */\n\t\t\tif( $kind == 'manual' )\n\t\t\t{\n\t\t\t\t$search_form_params = array( 'title' => T_('Search this manual:') );\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_search_form', 'core', 10, $search_form_params );\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'content_hierarchy', 'core', 20 );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif( ! empty( $install_test_features ) )\n\t\t\t\t{\n\t\t\t\t\tif( $kind != 'forum' && $kind != 'manual' )\n\t\t\t\t\t{ // Current filters widget\n\t\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_current_filters', 'core', 5 );\n\t\t\t\t\t}\n\t\t\t\t\t// User login widget\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'user_login', 'core', 10 );\n\t\t\t\t}\n\t\t\t\tif( ( !$initial_install || $blog_id != $blog_forums_ID ) && $kind != 'forum' )\n\t\t\t\t{ // Don't install these Sidebar widgets for blog 'Forums'\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_avatar', 'core', 20 );\n\t\t\t\t\tif( $blog_id > $blog_a_ID )\n\t\t\t\t\t{\n\t\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'evo_Calr', 'plugin', 30 );\n\t\t\t\t\t}\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_longdesc', 'core', 40, array( 'title' => '$title$' ) );\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_search_form', 'core', 50 );\n\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_category_list', 'core', 60 );\n\n\t\t\t\t\tif( $blog_id == $blog_home_ID )\n\t\t\t\t\t{ // Advertisements, Install only for blog #1 home blog\n\t\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_item_list', 'core', 70, array(\n\t\t\t\t\t\t\t\t'title' => 'Advertisement (Demo)',\n\t\t\t\t\t\t\t\t'item_type' => 4000,\n\t\t\t\t\t\t\t\t'blog_ID' => $blog_id,\n\t\t\t\t\t\t\t\t'order_by' => 'RAND',\n\t\t\t\t\t\t\t\t'limit' => 1,\n\t\t\t\t\t\t\t\t'disp_title' => false,\n\t\t\t\t\t\t\t\t'item_title_link_type' => 'linkto_url',\n\t\t\t\t\t\t\t\t'attached_pics' => 'first',\n\t\t\t\t\t\t\t\t'item_pic_link_type' => 'linkto_url',\n\t\t\t\t\t\t\t\t'thumb_size' => 'fit-160x160',\n\t\t\t\t\t\t\t) );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( $blog_id != $blog_b_ID )\n\t\t\t\t\t{\n\t\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_media_index', 'core', 80, 'a:11:{s:5:\"title\";s:12:\"Random photo\";s:10:\"thumb_size\";s:11:\"fit-160x120\";s:12:\"thumb_layout\";s:4:\"grid\";s:12:\"grid_nb_cols\";s:1:\"1\";s:5:\"limit\";s:1:\"1\";s:8:\"order_by\";s:4:\"RAND\";s:9:\"order_dir\";s:3:\"ASC\";'.$default_blog_param.'s:11:\"widget_name\";s:12:\"Random photo\";s:16:\"widget_css_class\";s:0:\"\";s:9:\"widget_ID\";s:0:\"\";}' );\n\t\t\t\t\t}\n\t\t\t\t\tif( ! empty( $blog_home_ID ) && ( $blog_id == $blog_a_ID || $blog_id == $blog_b_ID ) )\n\t\t\t\t\t{\n\t\t\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'linkblog', 'core', 90, array( 'blog_ID' => $blog_home_ID, 'item_type' => '3000' ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'coll_xml_feeds', 'core', 100 );\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar', 'mobile_skin_switcher', 'core', 110 );\n\t\t\t}\n\n\n\t\t\t/* Sidebar 2 */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar 2', 'coll_post_list', 'core', 1 );\n\t\t\tif( $blog_id == $blog_b_ID )\n\t\t\t{\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar 2', 'coll_link_list', 'core', 5, array( 'title' => 'Sidebar links', 'order_by' => 'RAND' ) );\n\t\t\t}\n\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar 2', 'coll_comment_list', 'core', 10 );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar 2', 'coll_media_index', 'core', 15, 'a:11:{s:5:\"title\";s:13:\"Recent photos\";s:10:\"thumb_size\";s:10:\"crop-80x80\";s:12:\"thumb_layout\";s:4:\"flow\";s:12:\"grid_nb_cols\";s:1:\"3\";s:5:\"limit\";s:1:\"9\";s:8:\"order_by\";s:9:\"datestart\";s:9:\"order_dir\";s:4:\"DESC\";'.$default_blog_param.'s:11:\"widget_name\";s:11:\"Photo index\";s:16:\"widget_css_class\";s:0:\"\";s:9:\"widget_ID\";s:0:\"\";}' );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Sidebar 2', 'free_html', 'core', 20, 'a:5:{s:5:\"title\";s:9:\"Sidebar 2\";s:7:\"content\";s:162:\"This is the \"Sidebar 2\" container. You can place any widget you like in here. In the evo toolbar at the top of this page, select \"Customize\", then \"Blog Widgets\".\";s:11:\"widget_name\";s:9:\"Free HTML\";s:16:\"widget_css_class\";s:0:\"\";s:9:\"widget_ID\";s:0:\"\";}' );\n\n\n\t\t\t/* Front Page Main Area */\n\t\t\tif( $kind == 'main' )\n\t\t\t{ // Display blog title and tagline for main blogs\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Front Page Main Area', 'coll_title', 'core', 1 );\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Front Page Main Area', 'coll_tagline', 'core', 2 );\n\t\t\t}\n\t\t\t$featured_intro_params = NULL;\n\t\t\tif( $kind == 'main' )\n\t\t\t{ // Hide a title of the front intro post\n\t\t\t\t$featured_intro_params = array( 'disp_title' => 0 );\n\t\t\t}\n\t\t\tadd_basic_widget_9408( $blog_id, 'Front Page Main Area', 'coll_featured_intro', 'core', 10, $featured_intro_params );\n\t\t\tif( $kind == 'main' )\n\t\t\t{ // Add user links widget only for main kind blogs\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Front Page Main Area', 'user_links', 'core', 15 );\n\t\t\t}\n\t\t\t$post_list_params = NULL;\n\t\t\tif( $kind == 'main' )\n\t\t\t{ // Display the posts from all other blogs if it is allowed by blogs setting \"Collections to aggregate\"\n\t\t\t\t$post_list_params = array(\n\t\t\t\t\t\t'blog_ID'          => '',\n\t\t\t\t\t\t'limit'            => 50,\n\t\t\t\t\t\t'attached_pics'    => 'first',\n\t\t\t\t\t\t'disp_first_image' => 'special',\n\t\t\t\t\t);\n\t\t\t}\n\t\t\tadd_basic_widget_9408( $blog_id, 'Front Page Main Area', 'coll_post_list', 'core', 20, $post_list_params );\n\t\t\tif( $kind != 'main' )\n\t\t\t{ // Don't install the \"Recent Commnets\" widget for Main blogs\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Front Page Main Area', 'coll_comment_list', 'core', 30 );\n\t\t\t}\n\n\n\t\t\t/* Front Page Secondary Area */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Front Page Secondary Area', 'org_members', 'core', 10 );\n\n\n\t\t\t/* Mobile Footer */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Footer', 'coll_longdesc', 'core', 10 );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Footer', 'mobile_skin_switcher', 'core', 20 );\n\n\n\t\t\t/* Mobile Navigation Menu */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Navigation Menu', 'coll_page_list', 'core', 10 );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Navigation Menu', 'menu_link', 'core', 20, array( 'link_type' => 'ownercontact' ) );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Navigation Menu', 'menu_link', 'core', 30, array( 'link_type' => 'home' ) );\n\t\t\tif( $kind == 'forum' )\n\t\t\t{ // Add menu with User Directory\n\t\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Navigation Menu', 'menu_link', 'core', 40, array( 'link_type' => 'users' ) );\n\t\t\t}\n\n\n\t\t\t/* Mobile Tools Menu */\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Tools Menu', 'menu_link', 'core', 10, array( 'link_type' => 'login' ) );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Tools Menu', 'msg_menu_link', 'core', 20, array( 'link_type' => 'messages' ) );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Tools Menu', 'msg_menu_link', 'core', 30, array( 'link_type' => 'contacts', 'show_badge' => 0 ) );\n\t\t\tadd_basic_widget_9408( $blog_id, 'Mobile: Tools Menu', 'menu_link', 'core', 50, array( 'link_type' => 'logout' ) );\n\n\n\t\t\t// Check if there are widgets to create\n\t\t\tif( ! empty( $basic_widgets_insert_sql_rows ) )\n\t\t\t{ // Insert the widget records by single SQL query\n\t\t\t\t$DB->query( 'INSERT INTO T_widget( wi_coll_ID, wi_sco_name, wi_order, wi_type, wi_code, wi_params ) '\n\t\t\t\t\t\t\t\t\t .'VALUES '.implode( ', ', $basic_widgets_insert_sql_rows ) );\n\t\t\t}\n\t\t}\n\n\n\t\t// Install basic widgets:\n\t\tinstall_basic_widgets_9408();\n\n\t\tset_upgrade_checkpoint( '9408' );\n\t}\n\n\n\tif( $old_db_version < 9409 )\n\t{\n\t\t// Upgrade the blog access types:\n\t\techo 'Updating blogs access types... ';\n\t\t$DB->query( 'UPDATE T_blogs\n\t\t\t\t\t\t\t\t\t\tSET blog_access_type = \"absolute\"\n\t\t\t\t\t\t\t\t\tWHERE blog_siteurl LIKE \"http://%\"\n\t\t\t\t\t\t\t\t\t   OR blog_siteurl LIKE \"https://%\"' );\n\n\t\t$DB->query( 'UPDATE T_blogs\n\t\t\t\t\t\t\t\t\t\tSET blog_access_type = \"relative\",\n\t\t\t\t\t\t\t\t\t\t\t\tblog_siteurl = CONCAT( blog_siteurl, blog_stub )\n\t\t\t\t\t\t\t\t\tWHERE blog_access_type = \"stub\"' );\n\n\t\tdb_drop_col( 'T_blogs', 'blog_stub' );\n\n\t\techo \"OK.<br />\\n\";\n\n\n \t\techo 'Updating columns... ';\n\t\t$DB->query( \"ALTER TABLE T_groups CHANGE COLUMN grp_perm_stats grp_perm_stats enum('none','user','view','edit') NOT NULL default 'none'\" );\n\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms CHANGE COLUMN bloguser_perm_poststatuses bloguser_perm_poststatuses set('published','deprecated','protected','private','draft','redirected') NOT NULL default ''\" );\n\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms CHANGE COLUMN bloggroup_perm_poststatuses bloggroup_perm_poststatuses set('published','deprecated','protected','private','draft','redirected') NOT NULL default ''\" );\n\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}posts CHANGE COLUMN post_status post_status enum('published','deprecated','protected','private','draft','redirected') NOT NULL default 'published'\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9409' );\n\t}\n\n\n\tif( $old_db_version < 9410 )\n\t{\n \t\techo 'Updating columns... ';\n\t\t$DB->query( \"ALTER TABLE T_comments CHANGE COLUMN comment_status comment_status ENUM('published','deprecated','protected','private','draft','redirected') DEFAULT 'published' NOT NULL\" );\n\n\t\t$DB->query( \"ALTER TABLE T_sessions CHANGE COLUMN sess_data sess_data MEDIUMBLOB DEFAULT NULL\" );\n\n\t\t$DB->query( \"ALTER TABLE T_hitlog CHANGE COLUMN hit_referer_type hit_referer_type ENUM('search','blacklist','spam','referer','direct','self','admin') NOT NULL\" );\n\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9410' );\n\t}\n\n\n\tif( $old_db_version < 9411 )\n\t{\n\t\techo 'Adding default Post Types... ';\n\t\t$DB->query( \"\n\t\t\tREPLACE INTO {$tableprefix}posttypes ( ptyp_ID, ptyp_name )\n\t\t\tVALUES ( 1000, 'Page' ),\n\t\t\t\t\t\t ( 2000, 'Reserved' ),\n\t\t\t\t\t\t ( 3000, 'Reserved' ),\n\t\t\t\t\t\t ( 4000, 'Reserved' ),\n\t\t\t\t\t\t ( 5000, 'Reserved' ) \" );\n\t\techo \"OK.<br />\\n\";\n\t\tset_upgrade_checkpoint( '9411' );\n\t}\n\n\n\tif( $old_db_version < 9412 )\n\t{\n\t\techo 'Adding field for post excerpts... ';\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}posts ADD COLUMN post_excerpt  text NULL AFTER post_content\" );\n\t\techo \"OK.<br />\\n\";\n\t\tset_upgrade_checkpoint( '9412' );\n\t}\n\n\tif( $old_db_version < 9414 )\n\t{\n\t\techo \"Renaming tables...\";\n\t\t$DB->query( \"RENAME TABLE {$tableprefix}item__prerendering TO T_items__prerendering\" );\n\t\t$DB->query( \"RENAME TABLE {$tableprefix}poststatuses TO T_items__status\" );\n\t\t$DB->query( \"RENAME TABLE {$tableprefix}posttypes TO T_items__type\" );\n\t\t$DB->query( \"RENAME TABLE {$tableprefix}posts TO T_items__item\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo \"Creating Tag tables...\";\n\t\t$DB->query( \"CREATE TABLE T_items__tag (\n\t\t      tag_ID   int(11) unsigned not null AUTO_INCREMENT,\n\t\t      tag_name varchar(50) not null,\n\t\t      primary key (tag_ID),\n\t\t      UNIQUE tag_name( tag_name )\n\t\t    )\" );\n\n\t\t$DB->query( \"CREATE TABLE T_items__itemtag (\n\t\t      itag_itm_ID int(11) unsigned NOT NULL,\n\t\t      itag_tag_ID int(11) unsigned NOT NULL,\n\t\t      PRIMARY KEY (itag_itm_ID, itag_tag_ID),\n\t\t      UNIQUE tagitem ( itag_tag_ID, itag_itm_ID )\n\t\t    )\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9414' );\n\t}\n\n\n\tif( $old_db_version < 9416 )\n\t{\n\t\techo \"Updating blogs table...\";\n\t\t$DB->query( \"ALTER TABLE T_blogs\n\t\t\t\t\t\t\t\t\tADD COLUMN blog_advanced_perms  TINYINT(1) NOT NULL default 0 AFTER blog_owner_user_ID,\n\t\t\t\t\t\t\t\t\tDROP COLUMN blog_staticfilename\" );\n\t\t$DB->query( \"UPDATE T_blogs\n\t\t\t\t\t\t\t\t\t  SET blog_advanced_perms = 1\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo \"Additionnal blog permissions...\";\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms\n\t\t\t\t\t\t\t\t\tADD COLUMN bloguser_perm_admin tinyint NOT NULL default 0 AFTER bloguser_perm_properties,\n\t\t\t\t\t\t\t\t\tADD COLUMN bloguser_perm_edit  ENUM('no','own','lt','le','all','redirected') NOT NULL default 'no' AFTER bloguser_perm_poststatuses\" );\n\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms\n\t\t\t\t\t\t\t\t\tADD COLUMN bloggroup_perm_admin tinyint NOT NULL default 0 AFTER bloggroup_perm_properties,\n\t\t\t\t\t\t\t\t\tADD COLUMN bloggroup_perm_edit  ENUM('no','own','lt','le','all','redirected') NOT NULL default 'no' AFTER bloggroup_perm_poststatuses\" );\n\n\t\t// Preserve full admin perms:\n\t\t$DB->query( \"UPDATE T_coll_user_perms\n\t\t\t\t\t\t\t\t\t\tSET bloguser_perm_admin = 1\n\t\t\t\t\t\t\t\t\tWHERE bloguser_perm_properties <> 0\" );\n\t\t$DB->query( \"UPDATE T_coll_group_perms\n\t\t\t\t\t\t\t\t\t\tSET bloggroup_perm_admin = 1\n\t\t\t\t\t\t\t\t\tWHERE bloggroup_perm_properties <> 0\" );\n\n\t\t// Preserve full edit perms:\n\t\t$DB->query( \"UPDATE T_coll_user_perms\n\t\t\t\t\t\t\t\t\t\tSET bloguser_perm_edit = 'all'\" );\n\t\t$DB->query( \"UPDATE T_coll_group_perms\n\t\t\t\t\t\t\t\t\t\tSET bloggroup_perm_edit = 'all'\" );\n\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9416' );\n\t}\n\n\n\tif( $old_db_version < 9500 )\n\t{\n\t\ttask_begin( 'Normalizing columns...' );\n\t\t$DB->query( 'ALTER TABLE T_blogs\n\t\t\t\t\t\t\t\t\t\tALTER COLUMN blog_shortname SET DEFAULT \\'\\',\n\t\t\t\t\t\t\t\t\t\tALTER COLUMN blog_tagline SET DEFAULT \\'\\',\n\t\t\t\t\t\t\t\t\t\tCHANGE COLUMN blog_description blog_description     varchar(250) NULL default \\'\\',\n\t\t\t\t\t\t\t\t\t\tALTER COLUMN blog_siteurl SET DEFAULT \\'\\'' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Normalizing dates...' );\n\t\t$DB->query( 'UPDATE T_users\n\t\t\t\t\t\t\t\t\t\tSET dateYMDhour = \\'2000-01-01 00:00:00\\'\n\t\t\t\t\t\t\t\t\tWHERE dateYMDhour = \\'0000-00-00 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_users\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN dateYMDhour DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'UPDATE T_comments\n\t\t\t\t\t\t\t\t\t\tSET comment_date = \\'2000-01-01 00:00:00\\'\n\t\t\t\t\t\t\t\t\tWHERE comment_date = \\'0000-00-00 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\t\t\t\t\t\t\tMODIFY COLUMN comment_date DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Normalizing cron jobs...' );\n\t\t$DB->query( 'UPDATE T_cron__task\n\t\t\t\t\t\t\t\t\t\tSET ctsk_controller = REPLACE(ctsk_controller, \"cron/_\", \"cron/jobs/_\" )\n\t\t\t\t\t\t\t\t\tWHERE ctsk_controller LIKE \"cron/_%\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Extending comments table...' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\t\t\t\t\t\t\tADD COLUMN comment_rating     TINYINT(1) NULL DEFAULT NULL AFTER comment_content,\n\t\t\t\t\t\t\t\t\tADD COLUMN comment_featured   TINYINT(1) NOT NULL DEFAULT 0 AFTER comment_rating,\n\t\t\t\t\t\t\t\t\tADD COLUMN comment_nofollow   TINYINT(1) NOT NULL DEFAULT 1 AFTER comment_featured;');\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9500' );\n\t}\n\n\n\tif( $old_db_version < 9600 )\n\t{\t// 2.2.0\n\t\ttask_begin( 'Creating global cache table...' );\n\t\t$DB->query( 'CREATE TABLE T_global__cache (\n\t\t\t\t\t\t\t      cach_name VARCHAR( 30 ) NOT NULL ,\n\t\t\t\t\t\t\t      cach_cache MEDIUMBLOB NULL ,\n\t\t\t\t\t\t\t      PRIMARY KEY ( cach_name )\n\t\t\t\t\t\t\t    )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Altering posts table...' );\n\t\t$DB->query( 'ALTER TABLE T_items__item\n\t\t\t\t\t\t\t\t\t\tMODIFY COLUMN post_datestart DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\t\t\t\t\t\t\t\tMODIFY COLUMN post_datemodified DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\t\t\t\t\t\t\t\tADD COLUMN post_order    float NULL AFTER post_priority,\n\t\t\t\t\t\t\t\t\t\tADD COLUMN post_featured tinyint(1) NOT NULL DEFAULT 0 AFTER post_order');\n\t\t$DB->query( 'ALTER TABLE T_items__item\n\t\t\t\t\t\t\t\t\t\tADD INDEX post_order( post_order )' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9600' );\n\t}\n\n\n\tif( $old_db_version < 9700 )\n\t{\t// 2.3.2\n\t  echo 'Creating PodCast Post Type... ';\n\t\t$DB->query( \"\n\t\t\tREPLACE INTO T_items__type ( ptyp_ID, ptyp_name )\n\t\t\tVALUES ( 2000, 'Podcast' )\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\t// 2.4.0\n\t  echo 'Adding additional group permissions... ';\n\t\t$DB->query( \"\n\t      ALTER TABLE T_groups\n\t\t\t\t\tADD COLUMN grp_perm_bypass_antispam         TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_blogs,\n\t\t\t\t\tADD COLUMN grp_perm_xhtmlvalidation         VARCHAR(10) NOT NULL default 'always' AFTER grp_perm_bypass_antispam,\n\t\t\t\t\tADD COLUMN grp_perm_xhtmlvalidation_xmlrpc  VARCHAR(10) NOT NULL default 'always' AFTER grp_perm_xhtmlvalidation,\n\t\t\t\t\tADD COLUMN grp_perm_xhtml_css_tweaks        TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_xhtmlvalidation_xmlrpc,\n      \t\tADD COLUMN grp_perm_xhtml_iframes           TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_xhtml_css_tweaks,\n      \t\tADD COLUMN grp_perm_xhtml_javascript        TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_xhtml_iframes,\n\t\t\t\t\tADD COLUMN grp_perm_xhtml_objects           TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_xhtml_javascript \" );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9700' );\n\t}\n\n\n\tif( $old_db_version < 9800 )\n\t{\t// 2.5.0\n\t\techo 'Upgrading blogs table... ';\n\t\tdb_drop_col( 'T_blogs', 'blog_commentsexpire' );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading items table... ';\n\t\t$DB->query( \"ALTER TABLE T_items__item\n\t\t\tCHANGE COLUMN post_urltitle post_urltitle VARCHAR(210) NULL DEFAULT NULL,\n\t\t\tCHANGE COLUMN post_order    post_order DOUBLE NULL,\n\t\t\tADD COLUMN post_titletag  VARCHAR(255) NULL DEFAULT NULL AFTER post_urltitle,\n\t\t\tADD COLUMN post_double1   DOUBLE NULL COMMENT 'Custom double value 1' AFTER post_priority,\n\t\t\tADD COLUMN post_double2   DOUBLE NULL COMMENT 'Custom double value 2' AFTER post_double1,\n\t\t\tADD COLUMN post_double3   DOUBLE NULL COMMENT 'Custom double value 3' AFTER post_double2,\n\t\t\tADD COLUMN post_double4   DOUBLE NULL COMMENT 'Custom double value 4' AFTER post_double3,\n\t\t\tADD COLUMN post_double5   DOUBLE NULL COMMENT 'Custom double value 5' AFTER post_double4,\n\t\t\tADD COLUMN post_varchar1  VARCHAR(255) NULL COMMENT 'Custom varchar value 1' AFTER post_double5,\n\t\t\tADD COLUMN post_varchar2  VARCHAR(255) NULL COMMENT 'Custom varchar value 2' AFTER post_varchar1,\n\t\t\tADD COLUMN post_varchar3  VARCHAR(255) NULL COMMENT 'Custom varchar value 3' AFTER post_varchar2\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Creating keyphrase table... ';\n\t\t$query = \"CREATE TABLE T_track__keyphrase (\n            keyp_ID      INT UNSIGNED NOT NULL AUTO_INCREMENT,\n            keyp_phrase  VARCHAR( 255 ) NOT NULL,\n            PRIMARY KEY        ( keyp_ID ),\n            UNIQUE keyp_phrase ( keyp_phrase )\n          )\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading hitlog table... ';\n\t\tevo_flush();\n\t\t$query = \"ALTER TABLE T_hitlog\n\t\t\t CHANGE COLUMN hit_ID hit_ID              INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\t CHANGE COLUMN hit_datetime hit_datetime  DATETIME NOT NULL DEFAULT '2000-01-01 00:00:00',\n\t\t\t ADD COLUMN hit_keyphrase_keyp_ID         INT UNSIGNED DEFAULT NULL AFTER hit_referer_dom_ID,\n\t\t\t ADD INDEX hit_remote_addr ( hit_remote_addr ),\n\t\t\t ADD INDEX hit_sess_ID        ( hit_sess_ID )\";\n\t\t$DB->query( $query );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Upgrading sessions table... ';\n\t\t$DB->query( \"ALTER TABLE T_sessions\n\t\t\tALTER COLUMN sess_lastseen SET DEFAULT '2000-01-01 00:00:00',\n\t\t\tADD COLUMN sess_hitcount  INT(10) UNSIGNED NOT NULL DEFAULT 1 AFTER sess_key,\n\t\t\tADD KEY sess_user_ID (sess_user_ID)\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\techo 'Creating goal tracking table... ';\n    $DB->query( \"CREATE TABLE T_track__goal(\n\t\t\t\t\t  goal_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\t\t\t  goal_name varchar(50) default NULL,\n\t\t\t\t\t  goal_key varchar(32) default NULL,\n\t\t\t\t\t  goal_redir_url varchar(255) default NULL,\n\t\t\t\t\t  goal_default_value double default NULL,\n\t\t\t\t\t  PRIMARY KEY (goal_ID),\n\t\t\t\t\t  UNIQUE KEY goal_key (goal_key)\n          )\" );\n\n    $DB->query( \"CREATE TABLE T_track__goalhit (\n\t\t\t\t\t  ghit_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\t\t\t  ghit_goal_ID    int(10) unsigned NOT NULL,\n\t\t\t\t\t  ghit_hit_ID     int(10) unsigned NOT NULL,\n\t\t\t\t\t  ghit_params     TEXT default NULL,\n\t\t\t\t\t  PRIMARY KEY  (ghit_ID),\n\t\t\t\t\t  KEY ghit_goal_ID (ghit_goal_ID),\n\t\t\t\t\t  KEY ghit_hit_ID (ghit_hit_ID)\n         )\" );\n\t\techo \"OK.<br />\\n\";\n\n\t\tset_upgrade_checkpoint( '9800' );\n\t}\n\n\n\tif( $old_db_version < 9900 )\n\t{\t// 3.0 part 1\n\t\ttask_begin( 'Updating keyphrases in hitlog table... ' );\n\t\tload_class( 'sessions/model/_hit.class.php', 'Hit' );\n\t\t// New Hit object creation was added later, to fix upgrades from very old versions.\n\t\t// We create a new temp Hit object to be able to call the Hit::extract_params_from_referer() function which was static when this upgrade block was created.\n\t\t$tempHit = new Hit();\n\t\t$sql = 'SELECT SQL_NO_CACHE hit_ID, hit_referer\n  \t\t          FROM T_hitlog\n   \t\t         WHERE hit_referer_type = \"search\"\n\t\t           AND hit_keyphrase_keyp_ID IS NULL'; // this line just in case we crashed in the middle, so we restart where we stopped\n\t\t$rows = $DB->get_results( $sql, OBJECT, 'get all search hits' );\n\t\tforeach( $rows as $row )\n\t\t{\n\t\t\t$params = $tempHit->extract_params_from_referer( $row->hit_referer );\n\t\t\tif( empty( $params['keyphrase'] ) )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$DB->begin();\n\n\t\t\t$sql = 'SELECT keyp_ID\n\t\t\t          FROM T_track__keyphrase\n\t\t\t         WHERE keyp_phrase = '.$DB->quote($params['keyphrase']);\n\t\t\t$keyp_ID = $DB->get_var( $sql, 0, 0, 'Get keyphrase ID' );\n\n\t\t\tif( empty( $keyp_ID ) )\n\t\t\t{\n\t\t\t\t$sql = 'INSERT INTO T_track__keyphrase( keyp_phrase )\n\t\t\t\t        VALUES ('.$DB->quote($params['keyphrase']).')';\n\t\t\t\t$DB->query( $sql, 'Add new keyphrase' );\n\t\t\t\t$keyp_ID = $DB->insert_id;\n\t\t\t}\n\n\t\t\t$DB->query( 'UPDATE T_hitlog\n\t\t\t                SET hit_keyphrase_keyp_ID = '.$keyp_ID.'\n\t\t\t              WHERE hit_ID = '.$row->hit_ID, 'Update hit' );\n\n\t\t\t$DB->commit();\n\t\t\techo \". \\n\";\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading widgets table... ' );\n\t\t$DB->query( \"ALTER TABLE T_widget\n\t\t\tCHANGE COLUMN wi_order wi_order INT(10) NOT NULL\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Files table... ' );\n\t\t$DB->query( \"ALTER TABLE T_files\n\t\t\t\t\t\t\t\tCHANGE COLUMN file_root_type file_root_type enum('absolute','user','collection','shared','skins') not null default 'absolute'\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9900' );\n\t}\n\n\tif( $old_db_version < 9910 )\n\t{\t// 3.0 part 2\n\n\t\ttask_begin( 'Upgrading Blogs table... ' );\n\t\t$DB->query( \"ALTER TABLE T_blogs CHANGE COLUMN blog_name blog_name varchar(255) NOT NULL default ''\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding new Post Types...' );\n\t\t$DB->query( \"\n\t\t\tREPLACE INTO T_items__type( ptyp_ID, ptyp_name )\n\t\t\tVALUES ( 1500, 'Intro-Main' ),\n\t\t\t\t\t\t ( 1520, 'Intro-Cat' ),\n\t\t\t\t\t\t ( 1530, 'Intro-Tag' ),\n\t\t\t\t\t\t ( 1570, 'Intro-Sub' ),\n\t\t\t\t\t\t ( 1600, 'Intro-All' ) \" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating User table' );\n\t\t$DB->query( \"ALTER TABLE T_users\n\t\t\t\t\t\t\t\t\tADD COLUMN user_avatar_file_ID int(10) unsigned default NULL AFTER user_validated\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for User field definitions' );\n\t\t$DB->query( \"CREATE TABLE T_users__fielddefs (\n\t\t\t\tufdf_ID int(10) unsigned NOT NULL,\n\t\t\t\tufdf_type char(8) NOT NULL,\n\t\t\t\tufdf_name varchar(255) collate latin1_general_ci NOT NULL,\n\t\t\t\tPRIMARY KEY  (ufdf_ID)\n\t\t\t)\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating default field definitions...' );\n\t\t$DB->query( \"\n\t    INSERT INTO T_users__fielddefs (ufdf_ID, ufdf_type, ufdf_name)\n\t\t\t VALUES ( 10000, 'email',    'MSN/Live IM'),\n\t\t\t\t\t\t\t( 10100, 'word',     'Yahoo IM'),\n\t\t\t\t\t\t\t( 10200, 'word',     'AOL AIM'),\n\t\t\t\t\t\t\t( 10300, 'number',   'ICQ ID'),\n\t\t\t\t\t\t\t( 40000, 'phone',    'Skype'),\n\t\t\t\t\t\t\t( 50000, 'phone',    'Main phone'),\n\t\t\t\t\t\t\t( 50100, 'phone',    'Cell phone'),\n\t\t\t\t\t\t\t( 50200, 'phone',    'Office phone'),\n\t\t\t\t\t\t\t( 50300, 'phone',    'Home phone'),\n\t\t\t\t\t\t\t( 60000, 'phone',    'Office FAX'),\n\t\t\t\t\t\t\t( 60100, 'phone',    'Home FAX'),\n\t\t\t\t\t\t\t(100000, 'url',      'Website'),\n\t\t\t\t\t\t\t(100100, 'url',      'Blog'),\n\t\t\t\t\t\t\t(110000, 'url',      'Linkedin'),\n\t\t\t\t\t\t\t(120000, 'url',      'Twitter'),\n\t\t\t\t\t\t\t(130100, 'url',      'Facebook'),\n\t\t\t\t\t\t\t(130200, 'url',      'Myspace'),\n\t\t\t\t\t\t\t(140000, 'url',      'Flickr'),\n\t\t\t\t\t\t\t(150000, 'url',      'YouTube'),\n\t\t\t\t\t\t\t(160000, 'url',      'Digg'),\n\t\t\t\t\t\t\t(160100, 'url',      'StumbleUpon'),\n\t\t\t\t\t\t\t(200000, 'text',     'Role'),\n\t\t\t\t\t\t\t(200100, 'text',     'Company/Org.'),\n\t\t\t\t\t\t\t(200200, 'text',     'Division'),\n\t\t\t\t\t\t\t(211000, 'text',     'VAT ID'),\n\t\t\t\t\t\t\t(300000, 'text',     'Main address'),\n\t\t\t\t\t\t\t(300300, 'text',     'Home address');\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for User fields...' );\n\t\t$DB->query( \"CREATE TABLE {$tableprefix}users_fields (\n\t\t\t\tuf_ID      int(10) unsigned NOT NULL auto_increment,\n\t\t\t  uf_user_ID int(10) unsigned NOT NULL,\n\t\t\t  uf_ufdf_ID int(10) unsigned NOT NULL,\n\t\t\t  uf_varchar varchar(255) NOT NULL,\n\t\t\t  PRIMARY KEY (uf_ID)\n\t\t\t)\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9910' );\n\t}\n\n\tif( $old_db_version < 9920 )\n\t{\t// 3.1\n\t\ttask_begin( 'Upgrading Posts table... ' );\n\t\t// This is for old posts that may have a post type of NULL which should never happen. ptyp 1 is for regular posts\n\t\t$DB->query( \"UPDATE T_items__item\n\t\t\t\t\t\t\t\t\t\tSET post_ptyp_ID = 1\n\t\t\t\t\t\t\t\t\tWHERE post_ptyp_ID IS NULL\" );\n\t\t$DB->query( \"ALTER TABLE T_items__item\n\t\t\t\t\t\t\tCHANGE COLUMN post_ptyp_ID post_ptyp_ID int(10) unsigned NOT NULL DEFAULT 1\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Categories table... ' );\n\t\t$DB->query( \"ALTER TABLE T_categories\n\t\t\tCHANGE COLUMN cat_name cat_name varchar(255) NOT NULL,\n\t\t\tCHANGE COLUMN cat_description cat_description varchar(255) NULL DEFAULT NULL\" );\n\t\tdb_add_col( 'T_categories', 'cat_order', 'int(11) NULL DEFAULT NULL AFTER cat_description' );\n\t\tdb_add_index( 'T_categories', 'cat_order', 'cat_order' );\n\n\t\t$DB->query( \"UPDATE T_categories\n\t\t\t\t\tSET cat_order = cat_ID\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading widgets table... ' );\n\t\tdb_add_col( 'T_widget', 'wi_enabled', 'tinyint(1) NOT NULL DEFAULT 1 AFTER wi_order' );\n\t\ttask_end();\n\t}\n\tif( $old_db_version < 9930 )\n\t{\t// 3.1 continued\n\t\ttask_begin( 'Updating Post Types...' );\n\t\t$DB->query( \"\n\t\t\tREPLACE INTO T_items__type ( ptyp_ID, ptyp_name )\n\t\t\tVALUES ( 3000, 'Sidebar link' )\" );\n\t\techo \"OK.<br />\\n\";\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating items table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__item ENGINE=innodb\" );\t// fp> hum... this originally was a test :)\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating versions table...' );\n\t\t$DB->query( \"CREATE TABLE T_items__version (\n\t            iver_itm_ID        INT UNSIGNED NOT NULL ,\n\t            iver_edit_user_ID  INT UNSIGNED NOT NULL ,\n\t            iver_edit_datetime DATETIME NOT NULL ,\n\t            iver_status        ENUM('published','deprecated','protected','private','draft','redirected') NULL ,\n\t            iver_title         TEXT NULL ,\n\t            iver_content       MEDIUMTEXT NULL ,\n\t            INDEX iver_itm_ID ( iver_itm_ID )\n\t            ) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating group permissions...' );\n\t\t$DB->query( \"UPDATE T_groups\n\t\t\t\t\t\t\t\t\t\tSET grp_perm_xhtml_css_tweaks = 1\n\t\t\t\t\t\t\t\t\tWHERE grp_ID <= 3\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9930' );\n\t}\n\n\tif( $old_db_version < 9940 )\n\t{\t// 3.2\n\t\ttask_begin( 'Updating hitlog table...' );\n\t\t$DB->query( \"ALTER TABLE T_hitlog ADD COLUMN hit_serprank INT UNSIGNED DEFAULT NULL AFTER hit_keyphrase_keyp_ID\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating versions table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__version\n\t\t\t\t\t\t\t\tCHANGE COLUMN iver_edit_user_ID iver_edit_user_ID  INT UNSIGNED NULL\" );\n\t\ttask_end();\n\t}\n\n\tif( $old_db_version < 9950 )\n\t{\t// 3.3\n\t\ttask_begin( 'Altering Blogs table... ' );\n\t\t$DB->query( \"ALTER TABLE T_blogs CHANGE COLUMN blog_shortname blog_shortname varchar(255) default ''\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Altering default dates... ' );\n\t\t$DB->query( \"ALTER TABLE T_links\n      ALTER COLUMN link_datecreated SET DEFAULT '2000-01-01 00:00:00',\n      ALTER COLUMN link_datemodified SET DEFAULT '2000-01-01 00:00:00'\" );\n\t\t$DB->query( \"ALTER TABLE T_cron__task\n      ALTER COLUMN ctsk_start_datetime SET DEFAULT '2000-01-01 00:00:00'\" );\n\t\t$DB->query( \"ALTER TABLE T_cron__log\n      ALTER COLUMN clog_realstart_datetime SET DEFAULT '2000-01-01 00:00:00'\" );\n\t\ttask_end();\n\n \t\ttask_begin( 'Altering Items table... ' );\n\t\t$DB->query( \"ALTER TABLE T_items__item\n\t\t\tADD COLUMN post_metadesc VARCHAR(255) NULL DEFAULT NULL AFTER post_titletag,\n\t\t\tADD COLUMN post_metakeywords VARCHAR(255) NULL DEFAULT NULL AFTER post_metadesc,\n\t\t\tADD COLUMN post_editor_code VARCHAR(32) NULL COMMENT 'Plugin code of the editor used to edit this post' AFTER post_varchar3\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Forcing AutoP posts to html editor...' );\n\t\t$DB->query( 'UPDATE T_items__item\n\t\t\t\t\t\t\t\t\t\t\tSET post_editor_code = \"html\"\n\t\t\t\t\t\t\t\t\t\tWHERE post_renderers = \"default\"\n\t\t\t\t\t\t\t\t\t\t\t OR post_renderers LIKE \"%b2WPAutP%\"' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9950' );\n\t}\n\n\tif( $old_db_version < 9960 )\n\t{\t// 3.3\n\n\t\techo \"Renaming tables...\";\n\t\t$DB->save_error_state();\n\t\t$DB->halt_on_error = false;\n\t\t$DB->show_errors = false;\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}users_fields RENAME TO T_users__fields\" );\n\t\t$DB->restore_error_state();\n\t\techo \"OK.<br />\\n\";\n\n\t\t// fp> The following is more tricky to do with CHARACTER SET. During upgrade, we don't know what the admin actually wants.\n\t\ttask_begin( 'Making sure all tables use desired storage ENGINE as specified in the b2evo schema...' );\n\t\tforeach( $schema_queries as $table_name=>$table_def )\n\t\t{\n\t\t\tif( $DB->query( 'SHOW TABLES LIKE \\''.$table_name.'\\'' )\n\t\t\t\t&& preg_match( '/\\sENGINE\\s*=\\s*([a-z]+)/is', $table_def[1], $matches ) )\n\t\t\t{\t// If the table exists and has an ENGINE definition:\n\t\t\t\techo $table_name.':'.$matches[1].'<br />';\n\t\t\t\t$DB->query( \"ALTER TABLE $table_name ENGINE = \".$matches[1] );\n\t\t\t}\n\t\t}\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9960' );\n\t}\n\n\tif( $old_db_version < 9970 )\n\t{\t// 4.0 part 1\n\n\t\t// For create_default_currencies() and create_default_countries():\n\t\trequire_once dirname(__FILE__).'/_functions_create.php';\n\n\t\ttask_begin( 'Creating table for default currencies... ' );\n\t\t$DB->query( 'CREATE TABLE '.$tableprefix.'currency (\n\t\t\t\tcurr_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\t\tcurr_code char(3) NOT NULL,\n\t\t\t\tcurr_shortcut varchar(30) NOT NULL,\n\t\t\t\tcurr_name varchar(40) NOT NULL,\n\t\t\t\tPRIMARY KEY curr_ID (curr_ID),\n\t\t\t\tUNIQUE curr_code (curr_code)\n\t\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\tcreate_default_currencies( $tableprefix.'currency' );\n\n\t\ttask_begin( 'Creating table for default countries... ' );\n\t\t$DB->query( 'CREATE TABLE '.$tableprefix.'country (\n\t\t\t\tctry_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\t\tctry_code char(2) NOT NULL,\n\t\t\t\tctry_name varchar(40) NOT NULL,\n\t\t\t\tctry_curr_ID int(10) unsigned,\n\t\t\t\tPRIMARY KEY ctry_ID (ctry_ID),\n\t\t\t\tUNIQUE ctry_code (ctry_code)\n\t\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\tcreate_default_countries( $tableprefix.'country', false );\n\n\t\ttask_begin( 'Upgrading user permissions table... ' );\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms\n\t\t\tADD COLUMN bloguser_perm_page\t\ttinyint NOT NULL default 0 AFTER bloguser_perm_media_change,\n\t\t\tADD COLUMN bloguser_perm_intro\t\ttinyint NOT NULL default 0 AFTER bloguser_perm_page,\n\t\t\tADD COLUMN bloguser_perm_podcast\ttinyint NOT NULL default 0 AFTER bloguser_perm_intro,\n\t\t\tADD COLUMN bloguser_perm_sidebar\ttinyint NOT NULL default 0 AFTER bloguser_perm_podcast\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading group permissions table... ' );\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms\n\t\t\tADD COLUMN bloggroup_perm_page\t\ttinyint NOT NULL default 0 AFTER bloggroup_perm_media_change,\n\t\t\tADD COLUMN bloggroup_perm_intro\t\ttinyint NOT NULL default 0 AFTER bloggroup_perm_page,\n\t\t\tADD COLUMN bloggroup_perm_podcast\ttinyint NOT NULL default 0 AFTER bloggroup_perm_intro,\n\t\t\tADD COLUMN bloggroup_perm_sidebar\ttinyint NOT NULL default 0 AFTER bloggroup_perm_podcast\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users table... ' );\n\t\t$DB->query( \"ALTER TABLE T_users\n\t\t\tADD COLUMN user_ctry_ID int(10) unsigned NULL AFTER user_avatar_file_ID\" );\n\t\ttask_end();\n\n\t\t// Creating tables for messaging module\n\n\t\ttask_begin( 'Creating table for message threads... ' );\n\t\t$DB->query( \"CREATE TABLE T_messaging__thread (\n\t\t\tthrd_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\tthrd_title varchar(255) NOT NULL,\n\t\t\tthrd_datemodified datetime NOT NULL,\n\t\t\tPRIMARY KEY thrd_ID (thrd_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for messagee... ' );\n\t\t$DB->query( \"CREATE TABLE T_messaging__message (\n\t\t\tmsg_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\tmsg_author_user_ID int(10) unsigned NOT NULL,\n\t\t\tmsg_datetime datetime NOT NULL,\n\t\t\tmsg_thread_ID int(10) unsigned NOT NULL,\n\t\t\tmsg_text text NULL,\n\t\t\tPRIMARY KEY msg_ID (msg_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for message thread statuses... ' );\n\t\t$DB->query( \"CREATE TABLE T_messaging__threadstatus (\n\t\t\ttsta_thread_ID int(10) unsigned NOT NULL,\n\t\t\ttsta_user_ID int(10) unsigned NOT NULL,\n\t\t\ttsta_first_unread_msg_ID int(10) unsigned NULL,\n\t\t\tINDEX(tsta_user_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for messaging contacts... ' );\n\t\t$DB->query( \"CREATE TABLE T_messaging__contact (\n\t\t\tmct_from_user_ID int(10) unsigned NOT NULL,\n\t\t\tmct_to_user_ID int(10) unsigned NOT NULL,\n\t\t\tmct_blocked tinyint(1) default 0,\n\t\t\tmct_last_contact_datetime datetime NOT NULL,\n\t\t\tPRIMARY KEY mct_PK (mct_from_user_ID, mct_to_user_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading skins table... ' );\n\t\t$DB->query( \"ALTER TABLE T_skins__skin\n\t\t\t\t\t\tMODIFY skin_type enum('normal','feed','sitemap') NOT NULL default 'normal'\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Setting skin type of sitemap skin to \"sitemap\"... ' );\n\t\t$DB->query( \"UPDATE T_skins__skin\n\t\t\t\t\t\tSET skin_type = 'sitemap'\n\t\t\t\t\t\tWHERE skin_folder = '_sitemap'\" );\n\t\ttask_end();\n\n\t\t// Creating table for pluggable permissions\n\n\t\t// This table gets created during upgrade to v0.8.9 at checkpoint 8050\n\t\ttask_begin( 'Creating table for Group Settings... ' );\n\t\t$DB->query( \"CREATE TABLE IF NOT EXISTS T_groups__groupsettings (\n\t\t\tgset_grp_ID INT(11) UNSIGNED NOT NULL,\n\t\t\tgset_name VARCHAR(30) NOT NULL,\n\t\t\tgset_value VARCHAR(255) NULL,\n\t\t\tPRIMARY KEY (gset_grp_ID, gset_name)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\t// Rename T_usersettings table to T_users__usersettings\n\t\ttask_begin( 'Rename T_usersettings table to T_users__usersettings... ' );\n\t\t$DB->query( 'ALTER TABLE '.$tableprefix.'usersettings RENAME TO T_users__usersettings' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9970' );\n\t}\n\n\n\tif( $old_db_version < 9980 )\n\t{\t// 4.0 part 2\n\n\t\ttask_begin( 'Upgrading posts... ' );\n\t\t$DB->query( '\n\t\t\tUPDATE T_items__item\n\t\t\t   SET post_datestart = FROM_UNIXTIME( FLOOR(UNIX_TIMESTAMP(post_datestart)/60)*60 )\n\t\t\t WHERE post_datestart > NOW()' );\n\t\tdb_add_col( 'T_items__item', 'post_excerpt_autogenerated', 'TINYINT NULL DEFAULT NULL AFTER post_excerpt' );\n\t\tdb_add_col( 'T_items__item', 'post_dateset', 'tinyint(1) NOT NULL DEFAULT 1 AFTER post_assigned_user_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading countries... ' );\n\t\tdb_add_col( $tableprefix.'country', 'ctry_enabled', 'tinyint(1) NOT NULL DEFAULT 1 AFTER ctry_curr_ID' );\n\t\ttask_end();\n\n\n\t\ttask_begin( 'Upgrading links... ' );\n\n\t\t// Add link_position. Temporary allow NULL, set compatibility default, then do not allow NULL.\n\t\t// TODO: dh> actually, using \"teaser\" for the first link and \"aftermore\" for the rest would make more sense (and \"aftermore\" should get displayed with \"no-more\" posts anyway).\n\t\t//           Opinions? Could be heavy to transform this though..\n\t\t// fp> no, don't change past posts unexpectedly.\n\t\tdb_add_col( 'T_links', 'link_position', \"varchar(10) NULL AFTER link_title\" );\n\t\t$DB->query( \"UPDATE T_links SET link_position = 'teaser' WHERE link_position IS NULL\" );\n\t\tdb_add_col( 'T_links', 'link_position', \"varchar(10) NOT NULL AFTER link_title\" ); // change to NOT NULL\n\n\t\t// Add link_order. Temporary allow NULL, use order from ID, then do not allow NULL and add UNIQUE index.\n\t\tdb_add_col( 'T_links', 'link_order', 'int(11) unsigned NULL AFTER link_position' );\n\t\t$DB->query( \"UPDATE T_links SET link_order = link_ID WHERE link_order IS NULL\" );\n\t\tdb_add_col( 'T_links', 'link_order', 'int(11) unsigned NOT NULL AFTER link_position' ); // change to NOT NULL\n\t\tdb_add_index( 'T_links', 'link_itm_ID_order', 'link_itm_ID, link_order', 'UNIQUE' );\n\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading sessions... ' );\n\t\t$DB->query( \"ALTER TABLE T_sessions CHANGE COLUMN sess_ipaddress sess_ipaddress VARCHAR(39) NOT NULL DEFAULT ''\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9980' );\n\t}\n\n\tif( $old_db_version < 9990 )\n\t{\t// 4.0 part 3\n\n\t\ttask_begin( 'Upgrading hitlog... ' );\n\n\t\tdb_add_col( 'T_hitlog', 'hit_agent_type', \"ENUM('rss','robot','browser','unknown') DEFAULT 'unknown' NOT NULL AFTER hit_remote_addr\" );\n\n\t\tif( db_col_exists('T_hitlog', 'hit_agnt_ID') )\n\t\t{\n\t\t\t$DB->query( 'UPDATE T_hitlog, '.$tableprefix.'useragents\n\t\t\t                SET hit_agent_type = agnt_type\n\t\t\t              WHERE hit_agnt_ID = agnt_ID\n\t\t\t                AND agnt_type <> \"unknown\"' ); // We already have the unknown as default\n\t\t\tdb_drop_col( 'T_hitlog', 'hit_agnt_ID' );\n\t\t}\n\t\t$DB->query( 'DROP TABLE IF EXISTS '.$tableprefix.'useragents' );\n\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '9990' );\n\t}\n\n\tif( $old_db_version < 10000 )\n\t{\t// 4.0 part 4\n\t\t// Integrate comment_secret\n\t\ttask_begin( 'Extending Comment table... ' );\n\t\tdb_add_col( 'T_comments', 'comment_secret', 'varchar(32) NULL default NULL' );\n\t\ttask_end();\n\n\t\t// Create T_slug table and, Insert all slugs from T_items\n\t\ttask_begin( 'Create Slugs table... ' );\n\t\t$DB->query( 'CREATE TABLE IF NOT EXISTS T_slug (\n\t\t\t\t\t\tslug_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\t\t\t\tslug_title varchar(255) NOT NULL COLLATE ascii_bin,\n\t\t\t\t\t\tslug_type char(6) NOT NULL DEFAULT \"item\",\n\t\t\t\t\t\tslug_itm_ID int(11) unsigned,\n\t\t\t\t\t\tPRIMARY KEY slug_ID (slug_ID),\n\t\t\t\t\t\tUNIQUE\tslug_title (slug_title)\n\t\t\t\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Making sure all posts have a slug...' );\n\t\t// Get posts with empty urltitle:\n\t\t$sql = 'SELECT post_ID, post_title\n\t\t\t\t      FROM T_items__item\n\t\t\t\t     WHERE post_urltitle IS NULL OR post_urltitle = \"\"';\n\t\t$rows = $DB->get_results( $sql, OBJECT, 'Get posts with empty urltitle' );\n\t\t// Create URL titles when non existent:\n\t\tforeach( $rows as $row )\n\t\t{\n\t\t\t// TODO: dh> pass locale (useful for transliteration).\n\t\t\t$DB->query( 'UPDATE T_items__item\n\t\t\t\t              SET post_urltitle = \"'.urltitle_validate( '', $row->post_title, 0 ).'\"\n\t\t                WHERE post_ID = '.$row->post_ID, 'Set posts urltitle' );\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Populating Slugs table... ' );\n\t\t$DB->query( 'REPLACE INTO T_slug( slug_title, slug_type, slug_itm_ID)\n\t\t              SELECT post_urltitle, \"item\", post_ID\n\t\t\t\t\t\t\t      FROM T_items__item' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Add canonical and tiny slug IDs to post table...' );\n\t\t// modify post_urltitle column -> Not allow NULL value\n\t\tdb_add_col( 'T_items__item', 'post_urltitle', 'VARCHAR(210) NOT NULL' );\n\t\tdb_add_col( 'T_items__item', 'post_canonical_slug_ID', 'int(10) unsigned NULL default NULL after post_urltitle' );\n\t\tdb_add_col( 'T_items__item', 'post_tiny_slug_ID', 'int(10) unsigned NULL default NULL after post_canonical_slug_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading posts...' );\n\t\t$DB->query( 'UPDATE T_items__item, T_slug\n\t\t\t              SET post_canonical_slug_ID = slug_ID\n\t\t\t            WHERE CONVERT( post_urltitle USING ASCII ) COLLATE ascii_bin = slug_title' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding \"help\" slug...' );\n\t\tif( db_key_exists( 'T_slug', 'slug_title', '\"help\"' ) )\n\t\t{\n\t\t\techo '<strong>Warning: \"help\" slug already exists!</strong><br /> ';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$DB->query( 'INSERT INTO T_slug( slug_title, slug_type )\n\t\t\t             VALUES( \"help\", \"help\" )', 'Add \"help\" slug' );\n\t\t\ttask_end();\n\t\t}\n\n\t\t// fp> Next time we should use pluggable permissions instead.\n\t\ttask_begin( 'Updgrading groups: Giving Administrators Group edit perms on slugs...' );\n\t\tdb_add_col( 'T_groups', 'grp_perm_slugs', \"enum('none','view','edit') NOT NULL default 'none'\" );\n\t\t$DB->query( 'UPDATE T_groups\n\t\t             SET grp_perm_slugs = \"edit\"\n\t\t             WHERE grp_ID = 1' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading settings table... ');\n\t\t$DB->query( 'UPDATE T_settings\n\t\t                SET set_value = 1\n\t\t              WHERE set_name = \"fm_enable_roots_user\"\n\t\t                    AND set_value = 0' );\n\t\ttask_end();\n\n\t\t// New perms for comment moderation depending on status:\n\t\ttask_begin( 'Upgrading Blog-User permissions...' );\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_draft_cmts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_comments' );\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_publ_cmts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_comments' );\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_depr_cmts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_comments' );\n\n\t\tif( db_col_exists( 'T_coll_user_perms', 'bloguser_perm_comments' ) )\n\t\t{ // if user had perm_comments he now gets all 3 new perms also:\n\t\t\t$DB->query( 'UPDATE T_coll_user_perms\n\t\t\t\t\t\tSET bloguser_perm_draft_cmts = bloguser_perm_comments,\n\t\t\t\t\t\t\tbloguser_perm_publ_cmts = bloguser_perm_comments,\n\t\t\t\t\t\t\tbloguser_perm_depr_cmts = bloguser_perm_comments');\n\t\t\tdb_drop_col( 'T_coll_user_perms', 'bloguser_perm_comments' );\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Blog-Group permissions...' );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_draft_cmts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_comments' );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_publ_cmts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_comments' );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_depr_cmts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_comments' );\n\n\t\tif( db_col_exists( 'T_coll_group_perms', 'bloggroup_perm_comments' ) )\n\t\t{ // if group had perm_comments he now gets all 3 new perms also:\n\t\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t\t\t\tSET bloggroup_perm_draft_cmts = bloggroup_perm_comments,\n\t\t\t\t\t\t\tbloggroup_perm_publ_cmts = bloggroup_perm_comments,\n\t\t\t\t\t\t\tbloggroup_perm_depr_cmts = bloggroup_perm_comments');\n\t\t\tdb_drop_col( 'T_coll_group_perms', 'bloggroup_perm_comments' );\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading messaging permissions...' );\n\t\t$DB->query( 'ALTER TABLE T_users ALTER COLUMN user_allow_msgform SET DEFAULT \"2\"' );\n\t\t$DB->query( 'UPDATE T_users\n\t\t\t\t\tSET user_allow_msgform = 3\n\t\t\t\t\tWHERE user_allow_msgform = 1');\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading currency table...' );\n\t\t$DB->query( 'ALTER TABLE '.$tableprefix.'currency ADD COLUMN curr_enabled tinyint(1) NOT NULL DEFAULT 1 AFTER curr_name' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading default blog access type for new blogs...' );\n\t\t$DB->query( 'ALTER TABLE T_blogs ALTER COLUMN blog_access_type SET DEFAULT \"extrapath\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading tags table...' );\n\t\t$DB->query( 'ALTER TABLE T_items__tag CHANGE COLUMN tag_name tag_name varbinary(50) not null' );\n\t\ttask_end();\n\n\t\t// fp> I don't understand why we need to carry this out \"again\" but I observed the installer barking on\n\t\t// this setting missing when upgrading from older 2.x versions. I figured it would be no big deal to do it twice...\n\t\ttask_begin( 'Makin sure usersettings table is InnoDB...' );\n\t\t$DB->query( 'ALTER TABLE T_users__usersettings ENGINE=innodb' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10000' );\n\t}\n\n\tif( $old_db_version < 10100 )\n\t{\t// 4.1\n\t\ttask_begin( 'Convert group permissions to pluggable permissions...' );\n\t\t// asimo>This delete query needs just in case if this version of b2evo was used, before upgrade process call\n\t\t$DB->query( 'DELETE FROM T_groups__groupsettings\n\t\t\t\t\t\tWHERE gset_name = \"perm_files\" OR gset_name = \"perm_options\" OR gset_name = \"perm_templates\"' );\n\t\t// Get current permission values from groups table\n\t\t$sql = 'SELECT grp_ID, grp_perm_spamblacklist, grp_perm_slugs, grp_perm_files, grp_perm_options, grp_perm_templates\n\t\t\t\t      FROM T_groups';\n\t\t$rows = $DB->get_results( $sql, OBJECT, 'Get groups converted permissions' );\n\t\t// Insert values into groupsettings table\n\t\tforeach( $rows as $row )\n\t\t{\t// \"IGNORE\" is needed if we already created T_groups__groupsettings during upgrade to v0.8.9 at checkpoint 8050\n\t\t\t$DB->query( 'INSERT IGNORE INTO T_groups__groupsettings( gset_grp_ID, gset_name, gset_value )\n\t\t\t\t\t\t\tVALUES( '.$row->grp_ID.', \"perm_spamblacklist\", \"'.$row->grp_perm_spamblacklist.'\" ),\n\t\t\t\t\t\t\t\t( '.$row->grp_ID.', \"perm_slugs\", \"'.$row->grp_perm_slugs.'\" ),\n\t\t\t\t\t\t\t\t( '.$row->grp_ID.', \"perm_files\", \"'.$row->grp_perm_files.'\" ),\n\t\t\t\t\t\t\t\t( '.$row->grp_ID.', \"perm_options\", \"'.$row->grp_perm_options.'\" ),\n\t\t\t\t\t\t\t\t( '.$row->grp_ID.', \"perm_templates\", \"'.$row->grp_perm_templates.'\" )' );\n\t\t}\n\n\t\t// Drop all converted permissin colums from groups table\n\t\tdb_drop_col( 'T_groups', 'grp_perm_spamblacklist' );\n\t\tdb_drop_col( 'T_groups', 'grp_perm_slugs' );\n\t\tdb_drop_col( 'T_groups', 'grp_perm_files' );\n\t\tdb_drop_col( 'T_groups', 'grp_perm_options' );\n\t\tdb_drop_col( 'T_groups', 'grp_perm_templates' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users table, adding user gender...' );\n\t\tdb_add_col( 'T_users', 'user_gender', 'char(1) NULL DEFAULT NULL AFTER user_showonline' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading edit timpestamp blog-user permission...' );\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_edit_ts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_delpost' );\n\t\t$DB->query( 'UPDATE T_coll_user_perms, T_users\n\t\t\t\t\t\t\tSET bloguser_perm_edit_ts = 1\n\t\t\t\t\t\t\tWHERE bloguser_user_ID = user_ID  AND user_level > 4' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading edit timpestamp blog-group permission...' );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_edit_ts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_delpost' );\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t\t\t\t\tSET bloggroup_perm_edit_ts = 1\n\t\t\t\t\t\t\tWHERE bloggroup_group_ID = 1' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading comments table, add trash status...' );\n\t\t$DB->query( \"ALTER TABLE T_comments MODIFY COLUMN comment_status ENUM('published','deprecated','draft', 'trash') DEFAULT 'published' NOT NULL\");\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading groups admin access permission...' );\n\t\t$sql = 'SELECT grp_ID, grp_perm_admin\n\t\t\t\t\tFROM T_groups';\n\t\t$rows = $DB->get_results( $sql, OBJECT, 'Get groups admin perms' );\n\t\tforeach( $rows as $row )\n\t\t{\n\t\t\tswitch( $row->grp_perm_admin )\n\t\t\t{\n\t\t\t\tcase 'visible':\n\t\t\t\t\t$value = 'normal';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'hidden':\n\t\t\t\t\t$value = 'restricted';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t$value = 'none';\n\t\t\t}\n\t\t\t// \"IGNORE\" is needed if we already created T_groups__groupsettings during upgrade to v0.8.9 at checkpoint 8050\n\t\t\t$DB->query( 'INSERT IGNORE INTO T_groups__groupsettings( gset_grp_ID, gset_name, gset_value )\n\t\t\t\t\t\t\tVALUES( '.$row->grp_ID.', \"perm_admin\", \"'.$value.'\" )' );\n\t\t}\n\t\tdb_drop_col( 'T_groups', 'grp_perm_admin' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users table, add users source...' );\n\t\tdb_add_col( 'T_users', 'user_source', 'varchar(30) NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs table: more granularity for comment allowing...' );\n\t\t$DB->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\tSELECT blog_ID, \"allow_comments\", \"never\"\n\t\t\t\t\t\t\tFROM T_blogs\n\t\t\t\t\t\t\tWHERE blog_allowcomments = \"never\"' );\n\t\tdb_drop_col( 'T_blogs', 'blog_allowcomments' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs table: allow_rating fields...' );\n\t\t$DB->query( 'UPDATE T_coll_settings\n\t\t\t\t\t\tSET cset_value = \"any\"\n\t\t\t\t\t\tWHERE cset_value = \"always\" AND cset_name = \"allow_rating\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading links table, add link_cmt_ID...' );\n\t\t$DB->query( 'ALTER TABLE T_links\n\t\t\t\t\t\tMODIFY COLUMN link_itm_ID int(11) unsigned NULL,\n\t\t\t\t\t\tMODIFY COLUMN link_creator_user_ID int(11) unsigned NULL,\n\t\t\t\t\t\tMODIFY COLUMN link_lastedit_user_ID int(11) unsigned NULL,\n\t\t\t\t\t\tADD COLUMN link_cmt_ID int(11) unsigned NULL COMMENT \"Used for linking files to comments (comment attachments)\" AFTER link_itm_ID');\n\t\t$DB->query( 'ALTER TABLE T_links\n\t\t\t\t\t\tADD INDEX link_cmt_ID ( link_cmt_ID )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading filetypes table...' );\n\t\t// get allowed filetype ids\n\t\t$sql = 'SELECT ftyp_ID\n\t\t\t\t\tFROM T_filetypes\n\t\t\t\t\tWHERE ftyp_allowed != 0';\n\t\t$allowed_ids = implode( ',', $DB->get_col( $sql, 0, 'Get allowed filetypes' ) );\n\n\t\t// update table column  -- this column is about who can edit the filetype: any user, registered users or only admins.\n\t\t$DB->query( 'ALTER TABLE T_filetypes\n\t\t\t\t\t\tMODIFY COLUMN ftyp_allowed enum(\"any\",\"registered\",\"admin\") NOT NULL default \"admin\"' );\n\n\t\t// update ftyp_allowed column content\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_allowed = \"registered\"\n\t\t\t\t\t\tWHERE ftyp_ID IN ('.$allowed_ids.')' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_allowed = \"admin\"\n\t\t\t\t\t\tWHERE ftyp_ID NOT IN ('.$allowed_ids.')' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_allowed = \"any\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"gif\" OR ftyp_extensions = \"png\" OR ftyp_extensions LIKE \"%jpg%\"' );\n\n\t\t// Add m4v file type if not exists\n\t\tif( !db_key_exists( 'T_filetypes', 'ftyp_extensions', '\"m4v\"' ) )\n\t\t{\n\t\t\t$DB->query( 'INSERT INTO T_filetypes (ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed)\n\t\t\t\t             VALUES (\"m4v\", \"MPEG video file\", \"video/x-m4v\", \"\", \"browser\", \"registered\")', 'Add \"m4v\" file type' );\n\t\t}\n\t\ttask_end();\n\n\t\t// The AdSense plugin needs to store quite long strings of data...\n\t\ttask_begin( 'Upgrading collection settings table, change cset_value type...' );\n\t\t$DB->query( 'ALTER TABLE T_coll_settings\n\t\t\t\t\t\t\t\t MODIFY COLUMN cset_name VARCHAR(50) NOT NULL,\n\t\t\t\t\t\t\t\t MODIFY COLUMN cset_value VARCHAR(10000) NULL' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10100' );\n\t}\n\n\tif( $old_db_version < 10200 )\n\t{\t// 4.1b\n\t\ttask_begin( 'Creating table for a specific blog post subscriptions...' );\n\t\t$DB->query( \"CREATE TABLE T_items__subscriptions (\n\t\t\t\t\t\tisub_item_ID  int(11) unsigned NOT NULL,\n\t\t\t\t\t\tisub_user_ID  int(11) unsigned NOT NULL,\n\t\t\t\t\t\tisub_comments tinyint(1) NOT NULL default 0 COMMENT 'The user wants to receive notifications for new comments on this post',\n\t\t\t\t\t\tPRIMARY KEY (isub_item_ID, isub_user_ID )\n\t\t\t\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading comments table, add subscription fields...' );\n\t\tdb_add_col( 'T_comments', 'comment_notif_status', 'ENUM(\"noreq\",\"todo\",\"started\",\"finished\") NOT NULL DEFAULT \"noreq\" COMMENT \"Have notifications been sent for this comment? How far are we in the process?\" AFTER comment_secret' );\n\t\tdb_add_col( 'T_comments', 'comment_notif_ctsk_ID', 'INT(10) unsigned NULL DEFAULT NULL COMMENT \"When notifications for this comment are sent through a scheduled job, what is the job ID?\" AFTER comment_notif_status' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users table...' );\n\t\tdb_add_col( 'T_users', 'user_notify_moderation', 'tinyint(1) NOT NULL default 0 COMMENT \"Notify me by email whenever a comment is awaiting moderation on one of my blogs\" AFTER user_notify' );\n\t\tdb_add_col( 'T_users', 'user_unsubscribe_key', 'varchar(32) NOT NULL default \"\" COMMENT \"A specific key, it is used when a user wants to unsubscribe from a post comments without signing in\" AFTER user_notify_moderation' );\n\t\t// Set unsubscribe keys for existing users with no unsubscribe key\n\t\t$sql = 'SELECT user_ID\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t WHERE user_unsubscribe_key = \"\"';\n\t\t$rows = $DB->get_results( $sql, OBJECT, 'Get users with no unsubscribe key' );\n\t\tforeach( $rows as $row )\n\t\t{\n\t\t\t$DB->query( 'UPDATE T_users\n\t\t\t\t\t\t\tSET user_unsubscribe_key = \"'.generate_random_key().'\"\n\t\t\t\t\t\t\tWHERE user_ID = '.$row->user_ID );\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading settings table... ');\n\t\t// This query was removed later, to avoid performance issue because of the smart view counting\n\t\t/*$DB->query( 'INSERT INTO T_settings (set_name, set_value)\n\t\t\t\t\t\tVALUES ( \"smart_hit_count\", 1 )' );*/\n\t\t$DB->query( 'ALTER TABLE T_coll_settings\n\t\t\t\t\t\t\t\t\tCHANGE COLUMN cset_value cset_value   VARCHAR( 10000 ) NULL COMMENT \"The AdSense plugin wants to store very long snippets of HTML\"' );\n  \t\ttask_end();\n\n  \t\t// The following two upgrade task were created subsequently to \"Make sure DB schema is up to date\".\n  \t\t// Note: These queries don't modify the correct databases\n\t\ttask_begin( 'Upgrading users table, no notification by default...');\n\t\t$DB->query( 'ALTER TABLE T_users ALTER COLUMN user_notify SET DEFAULT 0' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading items table...');\n\t\t$DB->query( 'ALTER TABLE T_items__item CHANGE COLUMN post_priority post_priority int(11) unsigned null COMMENT \"Task priority in workflow\"' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10200' );\n\t}\n\n\n\tif( $old_db_version < 10300 )\n\t{\t// 4.2\n\t\ttask_begin( 'Upgrading user fields...' );\n\t\t$DB->query( 'ALTER TABLE T_users__fielddefs\n\t\t\t\t\t\t\t\t\tADD COLUMN ufdf_required enum(\"hidden\",\"optional\",\"recommended\",\"require\") NOT NULL default \"optional\"');\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\t\t\t\t\tSET ufdf_required = \"recommended\"\n\t\t\t\t\t\t\t\t\tWHERE ufdf_name in (\"Website\", \"Twitter\", \"Facebook\") ' );\n\t\t$DB->query( \"REPLACE INTO T_users__fielddefs (ufdf_ID, ufdf_type, ufdf_name, ufdf_required)\n\t\t\t \t\t\t\t\t\tVALUES (400000, 'text', 'About me', 'recommended');\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Moving data to user fields...' );\n\t\t$DB->query( 'INSERT INTO T_users__fields( uf_user_ID, uf_ufdf_ID, uf_varchar )\n\t\t\t\t\t\t\t\t SELECT user_ID, 10300, user_icq\n\t\t\t\t\t\t\t\t\t FROM T_users\n\t\t\t\t\t\t\t\t  WHERE user_icq IS NOT NULL AND TRIM(user_icq) <> \"\"' );\n\t\t$DB->query( 'INSERT INTO T_users__fields( uf_user_ID, uf_ufdf_ID, uf_varchar )\n\t\t\t\t\t\t\t\t SELECT user_ID, 10200, user_aim\n\t\t\t\t\t\t\t\t\t FROM T_users\n\t\t\t\t\t\t\t\t  WHERE user_aim IS NOT NULL AND TRIM(user_aim) <> \"\"' );\n\t\t$DB->query( 'INSERT INTO T_users__fields( uf_user_ID, uf_ufdf_ID, uf_varchar )\n\t\t\t\t\t\t\t\t SELECT user_ID, 10000, user_msn\n\t\t\t\t\t\t\t\t\t FROM T_users\n\t\t\t\t\t\t\t\t  WHERE user_msn IS NOT NULL AND TRIM(user_msn) <> \"\"' );\n\t\t$DB->query( 'INSERT INTO T_users__fields( uf_user_ID, uf_ufdf_ID, uf_varchar )\n\t\t\t\t\t\t\t\t SELECT user_ID, 10100, user_yim\n\t\t\t\t\t\t\t\t\t FROM T_users\n\t\t\t\t\t\t\t\t  WHERE user_yim IS NOT NULL AND TRIM(user_yim) <> \"\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Dropping obsolete user columns...' );\n\t\t$DB->query( 'ALTER TABLE T_users\n\t\t\t\t\t\t\t\t\tDROP COLUMN user_icq,\n\t\t\t\t\t\t\t\t\tDROP COLUMN user_aim,\n\t\t\t\t\t\t\t\t\tDROP COLUMN user_msn,\n\t\t\t\t\t\t\t\t\tDROP COLUMN user_yim' );\n\t\ttask_end();\n\n\t\t// ---\n\n\t\ttask_begin( 'Adding new user columns...' );\n\t\t$DB->query( 'ALTER TABLE T_users\n\t\t\t\t\t\t\t\t\tADD COLUMN user_postcode varchar(12) NULL AFTER user_ID,\n\t\t\t\t\t\t\t\t\tADD COLUMN user_age_min int unsigned NULL AFTER user_postcode,\n\t\t\t\t\t\t\t\t\tADD COLUMN user_age_max int unsigned NULL AFTER user_age_min' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading item table for hide teaser...' );\n\t\t$DB->query( 'ALTER TABLE T_items__item\n\t\t\t\t\t\tADD COLUMN post_hideteaser tinyint(1) NOT NULL DEFAULT 0 AFTER post_featured');\n\t\t$DB->query( 'UPDATE T_items__item\n\t\t\t\t\t\t\t\t\t\tSET post_hideteaser = 1\n\t\t\t\t\t\t\t\t\tWHERE post_content LIKE \"%<!--noteaser-->%\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for a specific post settings...' );\n\t\t$DB->query( \"CREATE TABLE T_items__item_settings (\n\t\t\t\t\t\tiset_item_ID  int(10) unsigned NOT NULL,\n\t\t\t\t\t\tiset_name     varchar( 50 ) NOT NULL,\n\t\t\t\t\t\tiset_value    varchar( 2000 ) NULL,\n\t\t\t\t\t\tPRIMARY KEY ( iset_item_ID, iset_name )\n\t\t\t\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding new column to comments...' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\t\t\t\t\t\t\tADD COLUMN comment_in_reply_to_cmt_ID INT(10) unsigned NULL AFTER comment_status' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for internal searches...' );\n\t\t$DB->query( 'CREATE TABLE T_logs__internal_searches (\n\t\t\t\t\t\tisrch_ID bigint(20) NOT NULL auto_increment,\n\t\t\t\t\t\tisrch_coll_ID bigint(20) NOT NULL,\n\t\t\t\t\t\tisrch_hit_ID bigint(20) NOT NULL,\n\t\t\t\t\t\tisrch_keywords varchar(255) NOT NULL,\n\t\t\t\t\t\tPRIMARY KEY (isrch_ID)\n\t\t\t\t\t) ENGINE = MyISAM' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for comments votes...' );\n\t\t$DB->query( 'CREATE TABLE T_comments__votes (\n\t\t\t\t\t\tcmvt_cmt_ID  int(10) unsigned NOT NULL,\n\t\t\t\t\t\tcmvt_user_ID int(10) unsigned NOT NULL,\n\t\t\t\t\t\tcmvt_helpful TINYINT(1) NULL DEFAULT NULL,\n\t\t\t\t\t\tcmvt_spam    TINYINT(1) NULL DEFAULT NULL,\n\t\t\t\t\t\tPRIMARY KEY (cmvt_cmt_ID, cmvt_user_ID),\n\t\t\t\t\t\tKEY cmvt_cmt_ID (cmvt_cmt_ID),\n\t\t\t\t\t\tKEY cmvt_user_ID (cmvt_user_ID)\n\t\t\t\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding new comments columns...' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\t\t\t\t\t\t\tADD comment_helpful_addvotes INT NOT NULL DEFAULT 0 AFTER comment_nofollow ,\n\t\t\t\t\t\t\t\t\tADD comment_helpful_countvotes INT UNSIGNED NOT NULL DEFAULT 0 AFTER comment_helpful_addvotes ,\n\t\t\t\t\t\t\t\t\tADD comment_spam_addvotes INT NOT NULL DEFAULT 0 AFTER comment_helpful_countvotes ,\n\t\t\t\t\t\t\t\t\tADD comment_spam_countvotes INT UNSIGNED NOT NULL DEFAULT 0 AFTER comment_spam_addvotes ,\n\t\t\t\t\t\t\t\t\tCHANGE COLUMN comment_notif_ctsk_ID comment_notif_ctsk_ID      INT(10) unsigned NULL DEFAULT NULL COMMENT \"When notifications for this comment are sent through a scheduled job, what is the job ID?\"');\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding new user permission for spam voting...' );\n\t\t$DB->query( 'ALTER TABLE T_coll_user_perms\n\t\t\t\t\t\t\t\t\tADD bloguser_perm_vote_spam_cmts tinyint NOT NULL default 0 AFTER bloguser_perm_edit_ts' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding new group permission for spam voting...' );\n\t\t$DB->query( 'ALTER TABLE T_coll_group_perms\n\t\t\t\t\t\t\t\t\tADD bloggroup_perm_vote_spam_cmts tinyint NOT NULL default 0 AFTER bloggroup_perm_edit_ts' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading countries table...' );\n\t\t$DB->query( 'ALTER TABLE '.$tableprefix.'country ADD COLUMN ctry_preferred tinyint(1) NOT NULL DEFAULT 0 AFTER ctry_enabled' );\n\t\ttask_end();\n\n\t\t$DB->query( 'ALTER TABLE T_items__subscriptions CHANGE COLUMN isub_comments isub_comments   tinyint(1) NOT NULL DEFAULT 0 COMMENT \"The user wants to receive notifications for new comments on this post\"' );\n\n\t\tset_upgrade_checkpoint( '10300' );\n\t}\n\n\n\tif( $old_db_version < 10400 )\n\t{\t// 4.2 part 2\n\t\ttask_begin( 'Updating \"Post by Email\" settings...' );\n\t\t$DB->query( 'UPDATE T_settings SET set_name = \"eblog_autobr\" WHERE set_name = \"AutoBR\"' );\n\t\ttask_end();\n\n\t\tif( $DB->get_var('SELECT set_value FROM T_settings WHERE set_name = \"eblog_enabled\"') )\n\t\t{\t// eblog enabled, let's create a scheduled job for it\n\t\t\ttask_begin( 'Creating \"Post by Email\" scheduled job...' );\n\t\t\t$start_date = form_date( date2mysql($GLOBALS['localtimenow'] + 86400), '05:00:00' ); // start tomorrow\n\t\t\t$DB->query( '\n\t\t\t\tINSERT INTO T_cron__task ( ctsk_start_datetime, ctsk_repeat_after, ctsk_name, ctsk_controller, ctsk_params )\n\t\t\t\tVALUES ( '.$DB->quote( $start_date ).', 86400, '.$DB->quote( T_('Create posts by email') ).', '.$DB->quote( 'cron/jobs/_post_by_email.job.php' ).', '.$DB->quote( 'N;' ).' )' );\n\t\t\ttask_end();\n\t\t}\n\n\t\ttask_begin( 'Upgrading hitlog table...' );\n\t\t$DB->query( 'ALTER TABLE T_hitlog\n\t\t\t\t\t\t\t\tADD COLUMN hit_disp        VARCHAR(30) DEFAULT NULL AFTER hit_uri,\n\t\t\t\t\t\t\t\tADD COLUMN hit_ctrl        VARCHAR(30) DEFAULT NULL AFTER hit_disp,\n\t\t\t\t\t\t\t\tADD COLUMN hit_response_code     INT DEFAULT NULL AFTER hit_agent_type ' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading file types...' );\n\t\t// Update ftyp_icon column\n\t\t// Previous versions used a image file name for this field,\n\t\t// but from now we should use a icon name from the file /conf/_icons.php\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_image\"\n\t\t\t\t\t\tWHERE ftyp_extensions IN ( \"gif\", \"png\", \"jpg jpeg\" )' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_document\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"txt\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_www\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"htm html\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_pdf\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"pdf\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_doc\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"doc\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_xls\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"xls\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_ppt\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"ppt\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_pps\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"pps\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_zip\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"zip\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_php\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"php php3 php4 php5 php6\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"\"\n\t\t\t\t\t\tWHERE ftyp_extensions = \"css\"' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_sound\"\n\t\t\t\t\t\tWHERE ftyp_extensions IN ( \"mp3\", \"m4a\" )' );\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\t\t\tSET ftyp_icon = \"file_video\"\n\t\t\t\t\t\tWHERE ftyp_extensions IN ( \"mp4\", \"mov\", \"m4v\" )' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10400' );\n\t}\n\n\n\tif( $old_db_version < 10500 )\n\t{\t//  part 3\n\t\ttask_begin( 'Upgrading hitlog table...' );\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\t\t\t\t\t\tCHANGE COLUMN hit_referer_type  hit_referer_type ENUM(  'search',  'special',  'spam',  'referer',  'direct',  'self',  'admin', 'blacklist' ) NOT NULL,\n\t\t\t\t\t\t\t\tADD COLUMN hit_type ENUM('standard','rss','admin','ajax', 'service') DEFAULT 'standard' NOT NULL AFTER hit_ctrl,\n\t\t\t\t\t\t\t\tADD COLUMN hit_action VARCHAR(30) DEFAULT NULL AFTER hit_ctrl\" );\n\t\t$DB->query( 'UPDATE T_hitlog SET hit_referer_type = \"special\" WHERE hit_referer_type = \"blacklist\"' );\n\t\t$DB->query( 'UPDATE T_hitlog SET hit_type = \"admin\", hit_referer_type = \"direct\"  WHERE hit_referer_type = \"admin\"' );\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\t\t\t\t\t\tCHANGE COLUMN hit_referer_type  hit_referer_type ENUM(  'search',  'special',  'spam',  'referer',  'direct',  'self' ) NOT NULL\");\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for Groups of user field definitions...' );\n\t\t$DB->query( 'CREATE TABLE T_users__fieldgroups (\n\t\t\t\tufgp_ID int(10) unsigned NOT NULL auto_increment,\n\t\t\t\tufgp_name varchar(255) NOT NULL,\n\t\t\t\tufgp_order int(11) NOT NULL,\n\t\t\t\tPRIMARY KEY (ufgp_ID)\n\t\t\t) ENGINE = innodb' );\n\t\t$DB->query( 'INSERT INTO T_users__fieldgroups ( ufgp_name, ufgp_order )\n\t\t\t\tVALUES ( \"Instant Messaging\", \"1\" ),\n\t\t\t\t\t\t\t ( \"Phone\", \"2\" ),\n\t\t\t\t\t\t\t ( \"Web\", \"3\" ),\n\t\t\t\t\t\t\t ( \"Organization\", \"4\" ),\n\t\t\t\t\t\t\t ( \"Address\", \"5\" ),\n\t\t\t\t\t\t\t ( \"Other\", \"6\" ) ' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading user field definitions...' );\n\t\t// Add new fields:\n\t\t// \t\t\"ufdf_options\" to save a values of the Option list\n\t\t// \t\t\"ufdf_duplicated\" to add a several instances\n\t\t// \t\t\"ufdf_ufgp_ID\" - Group ID\n\t\t// \t\t\"ufdf_order\" - Order number\n\t\t// \t\t\"ufdf_suggest\" - Suggest values\n\t\t$DB->query( 'ALTER TABLE T_users__fielddefs\n\t\t\t\t\t\tADD ufdf_options    TEXT NOT NULL AFTER ufdf_name,\n\t\t\t\t\t\tADD ufdf_duplicated enum(\"forbidden\",\"allowed\",\"list\") NOT NULL default \"allowed\",\n\t\t\t\t\t\tADD ufdf_ufgp_ID    int(10) unsigned NOT NULL AFTER ufdf_ID,\n\t\t\t\t\t\tADD ufdf_order      int(11) NOT NULL,\n\t\t\t\t\t\tADD ufdf_suggest    tinyint(1) NOT NULL DEFAULT 0,\n\t\t\t\t\t\tCHANGE ufdf_ID ufdf_ID int(10) UNSIGNED NOT NULL AUTO_INCREMENT' );\n\t\t// Set default values of the field \"ufdf_duplicated\"\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_duplicated = \"allowed\"\n\t\t\t\t\t\tWHERE ufdf_ID IN ( 10000, 10100, 10200, 10300, 50100, 50200, 100000, 100100 )' );\n\t\t// Group fields by default\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_ufgp_ID = \"1\"\n\t\t\t\t\t\tWHERE ufdf_ID <= 40000 ' );\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_ufgp_ID = \"2\"\n\t\t\t\t\t\tWHERE ufdf_ID > 40000 AND ufdf_ID <= 60100' );\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_ufgp_ID = \"3\"\n\t\t\t\t\t\tWHERE ufdf_ID > 60100 AND ufdf_ID <= 160100' );\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_ufgp_ID = \"4\"\n\t\t\t\t\t\tWHERE ufdf_ID > 160100 AND ufdf_ID <= 211000' );\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_ufgp_ID = \"5\"\n\t\t\t\t\t\tWHERE ufdf_ID > 211000 AND ufdf_ID <= 300300' );\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_ufgp_ID = \"6\"\n\t\t\t\t\t\tWHERE ufdf_ID > 300300' );\n\t\t// Set order field\n\t\t$userfields = $DB->get_results( 'SELECT ufdf_ID, ufdf_ufgp_ID\n\t\t\t\tFROM T_users__fielddefs\n\t\t\t\tORDER BY ufdf_ufgp_ID, ufdf_ID' );\n\t\t$userfield_order = 1;\n\t\tforeach( $userfields as $uf => $userfield )\n\t\t{\n\t\t\tif( $uf > 0 )\n\t\t\t{\n\t\t\t\tif( $userfields[$uf-1]->ufdf_ufgp_ID != $userfield->ufdf_ufgp_ID )\n\t\t\t\t{\t// New group is starting, reset $userfield_order\n\t\t\t\t\t$userfield_order = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\t\tSET ufdf_order = \"'.$userfield_order.'\"\n\t\t\t\t\t\tWHERE ufdf_ID = '.$userfield->ufdf_ID );\n\t\t\t$userfield_order++;\n\t\t}\n\t\t// Change field type for Group 'Organization' (group_ID=4)\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t\tSET ufdf_type = \"word\"\n\t\t\t\t\tWHERE ufdf_ufgp_ID = \"4\"' );\n\t\t// Create a default additional info for administrator (user_ID=1)\n\t\t$DB->query( 'INSERT INTO T_users__fields ( uf_user_ID, uf_ufdf_ID, uf_varchar )\n\t\t\tVALUES ( 1, 200000, \"Site administrator\" ),\n\t\t\t\t\t\t ( 1, 200000, \"Moderator\" ),\n\t\t\t\t\t\t ( 1, 100000, \"'.$baseurl.'\" )' );\n\t\t// Add Indexes\n\t\t$DB->query( 'ALTER TABLE T_users__fields\n\t\t\t\t\t\tADD INDEX uf_ufdf_ID ( uf_ufdf_ID ),\n\t\t\t\t\t\tADD INDEX uf_varchar ( uf_varchar ) ' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading permissions...' );\n\t\t// Group permissions\n\t\t$DB->query( 'ALTER TABLE T_coll_group_perms\n\t\t\t\t\t\tADD bloggroup_perm_own_cmts tinyint NOT NULL default 0 AFTER bloggroup_perm_edit_ts' );\n\t\t// Set default values for Administrators & Privileged Bloggers groups\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t\t\t\tSET bloggroup_perm_own_cmts = \"1\"\n\t\t\t\t\t\tWHERE bloggroup_group_ID IN ( 1, 2 )' );\n\t\t// User permissions\n\t\t$DB->query( 'ALTER TABLE T_coll_user_perms\n\t\t\t\t\t\tADD bloguser_perm_own_cmts tinyint NOT NULL default 0 AFTER bloguser_perm_edit_ts' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10500' );\n\t}\n\n\n\tif( $old_db_version < 10600 )\n\t{\t//  part 4\n\n\t\t// For create_default_regions() and create_default_subregions():\n\t\trequire_once dirname(__FILE__).'/_functions_create.php';\n\n\t\ttask_begin( 'Renaming Countries table...' );\n\t\t$DB->query( 'RENAME TABLE '.$tableprefix.'country TO T_regional__country' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Renaming Currencies table...' );\n\t\t$DB->query( 'RENAME TABLE '.$tableprefix.'currency TO T_regional__currency' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating Regions table...' );\n\t\t$DB->query( 'CREATE TABLE T_regional__region (\n\t\t\trgn_ID        int(10) unsigned NOT NULL auto_increment,\n\t\t\trgn_ctry_ID   int(10) unsigned NOT NULL,\n\t\t\trgn_code      char(6) NOT NULL,\n\t\t\trgn_name      varchar(40) NOT NULL,\n\t\t\trgn_enabled   tinyint(1) NOT NULL DEFAULT 1,\n\t\t\trgn_preferred tinyint(1) NOT NULL DEFAULT 0,\n\t\t\tPRIMARY KEY rgn_ID (rgn_ID),\n\t\t\tUNIQUE rgn_ctry_ID_code (rgn_ctry_ID, rgn_code)\n\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\tcreate_default_regions();\n\n\t\ttask_begin( 'Creating Sub-regions table...' );\n\t\t$DB->query( 'CREATE TABLE T_regional__subregion (\n\t\t\tsubrg_ID        int(10) unsigned NOT NULL auto_increment,\n\t\t\tsubrg_rgn_ID    int(10) unsigned NOT NULL,\n\t\t\tsubrg_code      char(6) NOT NULL,\n\t\t\tsubrg_name      varchar(40) NOT NULL,\n\t\t\tsubrg_enabled   tinyint(1) NOT NULL DEFAULT 1,\n\t\t\tsubrg_preferred tinyint(1) NOT NULL DEFAULT 0,\n\t\t\tPRIMARY KEY subrg_ID (subrg_ID),\n\t\t\tUNIQUE subrg_rgn_ID_code (subrg_rgn_ID, subrg_code)\n\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\tcreate_default_subregions();\n\n\t\ttask_begin( 'Creating Cities table...' );\n\t\t$DB->query( 'CREATE TABLE T_regional__city (\n\t\t\tcity_ID         int(10) unsigned NOT NULL auto_increment,\n\t\t\tcity_ctry_ID    int(10) unsigned NOT NULL,\n\t\t\tcity_rgn_ID     int(10) unsigned NULL,\n\t\t\tcity_subrg_ID   int(10) unsigned NULL,\n\t\t\tcity_postcode   char(12) NOT NULL,\n\t\t\tcity_name       varchar(40) NOT NULL,\n\t\t\tcity_enabled    tinyint(1) NOT NULL DEFAULT 1,\n\t\t\tcity_preferred  tinyint(1) NOT NULL DEFAULT 0,\n\t\t\tPRIMARY KEY city_ID (city_ID),\n\t\t\tINDEX city_ctry_ID_postcode ( city_ctry_ID, city_postcode ),\n\t\t\tINDEX city_rgn_ID_postcode ( city_rgn_ID, city_postcode ),\n\t\t\tINDEX city_subrg_ID_postcode ( city_subrg_ID, city_postcode )\n\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Update Item Settings...' );\n\t\t// Admin: full rights for all blogs (look 'ma, doing a natural join! :>)\n\t\t$query = \"INSERT INTO T_items__item_settings( iset_item_ID, iset_name, iset_value )\n\t\t\t\t\t\tSELECT post_ID, 'hide_teaser', post_hideteaser\n\t\t\t\t\t\t\tFROM T_items__item\";\n\t\t$DB->query( $query );\n\n\t\tdb_drop_col( 'T_items__item', 'post_hideteaser' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading hitlog table...' );\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\t\t\t\tADD COLUMN hit_keyphrase VARCHAR(255) DEFAULT NULL AFTER hit_keyphrase_keyp_ID\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading track__keyphrase...' );\n\t\t$DB->query( \"ALTER TABLE T_track__keyphrase\n\t\t\t\t\t\tADD COLUMN keyp_count_refered_searches INT UNSIGNED DEFAULT 0 AFTER keyp_phrase,\n\t\t\t\t\t\tADD COLUMN keyp_count_internal_searches INT UNSIGNED DEFAULT 0 AFTER keyp_count_refered_searches\" );\n\t\ttask_end();\n\n\n\n\t\ttask_begin( 'Droping table internal searches...' );\n\n\t\t$DB->query( \"DROP TABLE T_logs__internal_searches\" );\n\t\ttask_end();\n\n\n\t\ttask_begin( 'Upgrading users table...' );\n\t\tdb_add_col( 'T_users', 'user_rgn_ID', 'int(10) unsigned NULL AFTER user_ctry_ID' );\n\t\tdb_add_col( 'T_users', 'user_subrg_ID', 'int(10) unsigned NULL AFTER user_rgn_ID' );\n\t\tdb_add_col( 'T_users', 'user_city_ID', 'int(10) unsigned NULL AFTER user_subrg_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading hitlog table...' );\n\t\t$DB->query( 'UPDATE T_hitlog\n\t\t\t\t\t\tSET hit_type = \"rss\",\n\t\t\t\t\t\t\thit_agent_type = \"unknown\"\n\t\t\t\t\t\tWHERE hit_agent_type = \"rss\"' );\n\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\t\t\t\t\t\tCHANGE COLUMN hit_agent_type hit_agent_type ENUM('robot','browser','unknown') DEFAULT 'unknown' NOT NULL\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating mail log table...' );\n\t\t$DB->query( 'CREATE TABLE '.$tableprefix.'mail__log (\n\t\t  emlog_ID        INT(10) UNSIGNED NOT NULL auto_increment,\n\t\t  emlog_timestamp TIMESTAMP NOT NULL,\n\t\t  emlog_to        VARCHAR(255) DEFAULT NULL,\n\t\t  emlog_success   TINYINT(1) NOT NULL DEFAULT 0,\n\t\t  emlog_subject   VARCHAR(255) DEFAULT NULL,\n\t\t  emlog_headers   TEXT DEFAULT NULL,\n\t\t  emlog_message   TEXT DEFAULT NULL,\n\t\t  PRIMARY KEY     (emlog_ID)\n\t\t) ENGINE = myisam' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10600' );\n\t}\n\n\n\tif( $old_db_version < 10700 )\n\t{\t// part 5\n\n\t\ttask_begin( 'Upgrading user notifications settings...' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"notify_published_comments\", user_notify\n\t\t\t\t\t\t\tFROM T_users', 'Move notify settings from users to users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"notify_comment_moderation\", user_notify_moderation\n\t\t\t\t\t\t\tFROM T_users', 'Move notify moderation settings from users to users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"enable_PM\", 1\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_allow_msgform = 1 OR user_allow_msgform = 3', 'Set enable PM on users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"enable_PM\", 0\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_allow_msgform = 0 OR user_allow_msgform = 2', 'Set enable PM on users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"enable_email\", 1\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_allow_msgform > 1', 'Set enable email true on users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"enable_email\", 0\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_allow_msgform < 2', 'Set enable email false on users_usersettings' );\n\t\tdb_drop_col( 'T_users', 'user_notify' );\n\t\tdb_drop_col( 'T_users', 'user_notify_moderation' );\n\t\tdb_drop_col( 'T_users', 'user_allow_msgform' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Item table...' );\n\t\tdb_add_col( 'T_items__item', 'post_ctry_ID', 'INT(10) UNSIGNED NULL' );\n\t\tdb_add_col( 'T_items__item', 'post_rgn_ID', 'INT(10) UNSIGNED NULL' );\n\t\tdb_add_col( 'T_items__item', 'post_subrg_ID', 'INT(10) UNSIGNED NULL' );\n\t\tdb_add_col( 'T_items__item', 'post_city_ID', 'INT(10) UNSIGNED NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users table...' );\n\t\tdb_drop_col( 'T_users', 'user_postcode' );\t// Previously obsoleted\n\t\tdb_drop_col( 'T_users', 'user_idmode' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users fields table...' );\n\t\tdb_add_col( 'T_users__fielddefs', 'ufdf_bubbletip', 'varchar(2000) NULL' );\n\t\ttask_end();\n\n\n\t\ttask_begin( 'Creating table for groups of messaging contacts...' );\n\t\t$DB->query( \"CREATE TABLE IF NOT EXISTS T_messaging__contact_groups (\n\t\t\tcgr_ID      int(10) unsigned NOT NULL auto_increment,\n\t\t\tcgr_user_ID int(10) unsigned NOT NULL,\n\t\t\tcgr_name    varchar(50) NOT NULL,\n\t\t\tPRIMARY KEY cgr_ID (cgr_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for group users of messaging contacts...' );\n\t\t$DB->query( \"CREATE TABLE T_messaging__contact_groupusers (\n\t\t\tcgu_user_ID int(10) unsigned NOT NULL,\n\t\t\tcgu_cgr_ID  int(10) unsigned NOT NULL,\n\t\t\tPRIMARY KEY cgu_PK (cgu_user_ID, cgu_cgr_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading mail log table...' );\n\t\tdb_add_col( $tableprefix.'mail__log', 'emlog_user_ID', 'INT(10) UNSIGNED DEFAULT NULL AFTER emlog_timestamp' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10700' );\n\t}\n\n\tif( $old_db_version < 10800 )\n\t{\t// part 6 aka between \"i1-i2\" and \"i2\"\n\n\t\ttask_begin( 'Upgrading users table, add user status...' );\n\t\tdb_add_col( 'T_users', 'user_status', 'enum( \"activated\", \"autoactivated\", \"closed\", \"deactivated\", \"emailchanged\", \"new\" ) NOT NULL default \"new\" AFTER user_validated' );\n\t\t$update_user_status_query = 'UPDATE T_users SET user_status = ';\n\t\t// check if new users must activate their account. If users are not required to activate their account, then all existing users will be considerated as activated user.\n\t\t$new_users_must_validate = $DB->get_var( 'SELECT set_value FROM T_settings WHERE set_name = '.$DB->quote( 'newusers_mustvalidate' ) );\n\t\tif( $new_users_must_validate || ( $new_users_must_validate == NULL ) )\n\t\t{ // newusers_mustvalidate setting is set to true, or it is not set at all. If it is not set, we know that the default value is true!\n\t\t\t// set activated status only for validated users\n\t\t\t$update_user_status_query .= $DB->quote( 'activated' );\n\t\t\t$update_user_status_query .= ' WHERE user_validated = 1';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$update_user_status_query .= $DB->quote( 'autoactivated' );\n\t\t}\n\t\t// set activated status for corresponding users\n\t\t$DB->query( $update_user_status_query );\n\t\tdb_drop_col( 'T_users', 'user_validated' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10800' );\n\t}\n\n\tif( $old_db_version < 10900 )\n\t{\t// part 7 aka \"i3\"\n\n\t\ttask_begin( 'Upgrading user settings table...' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"show_online\", 0\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_showonline = 0', 'Set show online on users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"user_ip\", user_ip\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_ip IS NOT NULL', 'Set user ip on users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"user_domain\", user_domain\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_domain IS NOT NULL', 'Set user domain on users_usersettings' );\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\t\t\tSELECT user_ID, \"user_browser\", user_browser\n\t\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\t\t\tWHERE user_browser IS NOT NULL', 'Set user browser on users_usersettings' );\n\t\tdb_drop_col( 'T_users', 'user_showonline' );\n\t\tdb_drop_col( 'T_users', 'user_ip' );\n\t\tdb_drop_col( 'T_users', 'user_domain' );\n\t\tdb_drop_col( 'T_users', 'user_browser' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading user activation settings...' );\n\t\t// Remove all last_activation_email timestamps because we will use date instead of them\n\t\t$DB->query( 'DELETE FROM T_users__usersettings WHERE uset_name = \"last_activation_email\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Users table...' );\n\t\t// Update user_status column add 'failedactivation' status\n\t\t$DB->query( 'ALTER TABLE T_users CHANGE user_status\n\t\t\t\t\tuser_status enum( \"activated\", \"autoactivated\", \"closed\", \"deactivated\", \"emailchanged\", \"failedactivation\", \"new\" ) NOT NULL default \"new\"' );\n\t\tdb_add_col( 'T_users', 'user_created_fromIPv4', 'int(10) unsigned NOT NULL' );\n\t\tdb_add_col( 'T_users', 'user_email_dom_ID', 'int(10) unsigned NULL' );\n\t\t$DB->query( 'ALTER TABLE T_users CHANGE dateYMDhour user_created_datetime DATETIME NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\tdb_add_col( 'T_users', 'user_reg_ctry_ID', 'int(10) unsigned NULL AFTER user_age_max' );\n\t\tdb_add_col( 'T_users', 'user_profileupdate_ts', 'TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP' );\n\t\t$DB->query( 'ALTER TABLE T_users ADD INDEX user_email ( user_email )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Renaming Email log table...' );\n\t\t$DB->query( 'RENAME TABLE '.$tableprefix.'mail__log TO T_email__log' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating email returns table...' );\n\t\t$DB->query( \"CREATE TABLE T_email__returns (\n\t\t\t  emret_ID        INT(10) UNSIGNED NOT NULL auto_increment,\n\t\t\t  emret_address   VARCHAR(255) DEFAULT NULL,\n\t\t\t  emret_errormsg  VARCHAR(255) DEFAULT NULL,\n\t\t\t  emret_timestamp TIMESTAMP NOT NULL,\n\t\t\t  emret_headers   TEXT DEFAULT NULL,\n\t\t\t  emret_message   TEXT DEFAULT NULL,\n\t\t\t  emret_errtype   CHAR(1) NOT NULL DEFAULT 'U',\n\t\t\t  PRIMARY KEY     (emret_ID)\n\t\t\t) ENGINE = myisam\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading general settings table...' );\n\t\t$DB->query( 'ALTER TABLE T_settings CHANGE set_value set_value VARCHAR( 5000 ) NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading sessions table...' );\n\t\tdb_add_col( 'T_sessions', 'sess_device', 'VARCHAR(8) NOT NULL DEFAULT \\'\\'' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for Antispam IP Ranges...' );\n\t\t$DB->query( \"CREATE TABLE T_antispam__iprange (\n\t\t\taipr_ID         int(10) unsigned NOT NULL auto_increment,\n\t\t\taipr_IPv4start  int(10) unsigned NOT NULL,\n\t\t\taipr_IPv4end    int(10) unsigned NOT NULL,\n\t\t\taipr_user_count int(10) unsigned DEFAULT 0,\n\t\t\tPRIMARY KEY aipr_ID (aipr_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading base domains table...' );\n\t\t$DB->query( \"ALTER TABLE T_basedomains CHANGE dom_type dom_type ENUM( 'unknown', 'normal', 'searcheng', 'aggregator', 'email' ) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL DEFAULT 'unknown'\" );\n\t\t$DB->query( 'ALTER TABLE T_basedomains DROP INDEX dom_name' );\n\t\t$DB->query( 'ALTER TABLE T_basedomains DROP INDEX dom_type' );\n\t\t$DB->query( 'ALTER TABLE T_basedomains ADD UNIQUE dom_type_name ( dom_type, dom_name )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading base domains table...' );\n\t\t$DB->query( \"ALTER TABLE T_basedomains\n\t\t\tMODIFY dom_name VARCHAR(250) COLLATE utf8_bin NOT NULL DEFAULT ''\" );\n\t\ttask_end();\n\n\t\t/*** Update user_email_dom_ID for all already existing users ***/\n\t\ttask_begin( 'Upgrading users email domains...' );\n\t\t$DB->begin();\n\t\t// Get the users\n\t\t$uemails_SQL = new SQL();\n\t\t$uemails_SQL->SELECT( 'user_ID, user_email' );\n\t\t$uemails_SQL->FROM( 'T_users' );\n\t\t$users_emails = $DB->get_assoc( $uemails_SQL->get() );\n\n\t\tif( count( $users_emails ) > 0 )\n\t\t{\n\t\t\t// Get all email domains\n\t\t\t$edoms_SQL = new SQL();\n\t\t\t$edoms_SQL->SELECT( 'dom_ID, dom_name' );\n\t\t\t$edoms_SQL->FROM( 'T_basedomains' );\n\t\t\t$edoms_SQL->WHERE( 'dom_type = \\'email\\'' );\n\t\t\t$email_domains = $DB->get_assoc( $edoms_SQL->get() );\n\n\t\t\tforeach( $users_emails as $user_ID => $user_email )\n\t\t\t{\n\t\t\t\tif( preg_match( '#@(.+)#i', strtolower($user_email), $ematch ) )\n\t\t\t\t{\t// Get email domain from user's email address\n\t\t\t\t\t$email_domain = trim( $ematch[1] );\n\t\t\t\t\t$dom_ID = array_search( $email_domain, $email_domains );\n\n\t\t\t\t\tif( ! $dom_ID )\n\t\t\t\t\t{\t// Insert new email domain\n\t\t\t\t\t\t$DB->query( 'INSERT INTO T_basedomains ( dom_type, dom_name )\n\t\t\t\t\t\t\tVALUES ( \\'email\\', '.$DB->quote( $email_domain ).' )' );\n\t\t\t\t\t\t$dom_ID = $DB->insert_id;\n\n\t\t\t\t\t\t// Memorize inserted domain to prevent duplicates\n\t\t\t\t\t\t$email_domains[$dom_ID] = $email_domain;\n\t\t\t\t\t\t// pre_dump( $dom_ID, $email_domain );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update user_email_dom_ID\n\t\t\t\t\t$DB->query( 'UPDATE T_users\n\t\t\t\t\t\tSET user_email_dom_ID = '.$DB->quote( $dom_ID ).'\n\t\t\t\t\t\tWHERE user_ID = '.$DB->quote( $user_ID ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$DB->commit();\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users fields table...' );\n\t\t// Drop index before increasing a size to avoid an error about \"max key length is 767 bytes\"\n\t\t$DB->query( 'ALTER TABLE T_users__fields DROP INDEX uf_varchar' );\n\t\t// Modify field size\n\t\t$DB->query( 'ALTER TABLE T_users__fields CHANGE uf_varchar uf_varchar VARCHAR( 10000 ) NOT NULL' );\n\t\t// Add index again with limited size in 255 because of utf8 == 765\n\t\t$DB->query( 'ALTER TABLE T_users__fields ADD INDEX uf_varchar ( uf_varchar(255) )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading cron tasks table...' );\n\t\t$DB->query( 'ALTER TABLE T_cron__task CHANGE ctsk_name ctsk_name VARCHAR(255) NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading comments table...' );\n\t\tdb_add_col( 'T_comments', 'comment_IP_ctry_ID', 'int(10) unsigned NULL AFTER comment_author_IP' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for Blocked Email Addreses...' );\n\t\t$DB->query( \"CREATE TABLE {$tableprefix}email__blocked (\n\t\t\temblk_ID                    INT(10) UNSIGNED NOT NULL auto_increment,\n\t\t\temblk_address               VARCHAR(255) DEFAULT NULL,\n\t\t\temblk_status                ENUM ( 'unknown', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) NOT NULL DEFAULT 'unknown',\n\t\t\temblk_sent_count            INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\temblk_sent_last_returnerror INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\temblk_prmerror_count        INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\temblk_tmperror_count        INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\temblk_spamerror_count       INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\temblk_othererror_count      INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\temblk_last_sent_ts          TIMESTAMP NULL,\n\t\t\temblk_last_error_ts         TIMESTAMP NULL,\n\t\t\tPRIMARY KEY                 (emblk_ID),\n\t\t\tUNIQUE                      emblk_address (emblk_address)\n\t\t) ENGINE = myisam\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading email log table...' );\n\t\t// Get old values of emlog_success field\n\t\t$SQL = new SQL();\n\t\t$SQL->SELECT( 'emlog_ID' );\n\t\t$SQL->FROM( 'T_email__log' );\n\t\t$SQL->WHERE( 'emlog_success = 0' );\n\t\t$email_failed_logs = $DB->get_col( $SQL->get() );\n\t\t// Change a field emlog_success to new format\n\t\t$DB->query( 'ALTER TABLE T_email__log CHANGE emlog_success emlog_result ENUM ( \"ok\", \"error\", \"blocked\" ) NOT NULL DEFAULT \"ok\"' );\n\t\tif( !empty( $email_failed_logs ) )\n\t\t{\t// Update only the failed email logs to new values\n\t\t\t// Do NOT update the success email logs, because we already have a result type 'ok' as default\n\t\t\t$DB->query( 'UPDATE T_email__log\n\t\t\t\t\tSET emlog_result = '.$DB->quote( 'error' ).'\n\t\t\t\tWHERE emlog_ID IN ( '.$DB->quote( $email_failed_logs ).' )' );\n\t\t}\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10900' );\n\t}\n\n\tif( $old_db_version < 10970 )\n\t{\t// part 8/a trunk aka first part of \"i4\"\n\n\t\ttask_begin( 'Upgrading Locales table...' );\n\t\tdb_add_col( 'T_locales', 'loc_transliteration_map', 'VARCHAR(10000) NOT NULL default \\'\\' AFTER loc_priority' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading general settings table...' );\n\t\t$DB->query( 'UPDATE T_settings SET set_name = '.$DB->quote( 'smart_view_count' ).' WHERE set_name = '.$DB->quote( 'smart_hit_count' ) );\n\t\t// This query below was added later to turn OFF smart view counting on upgrade from v4 to v5 for better performance\n\t\t$DB->query( 'DELETE FROM T_settings WHERE set_name = '.$DB->quote( 'smart_view_count' ) );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading sessions table...' );\n\t\t$DB->query( \"UPDATE T_sessions SET sess_lastseen = concat( '2000-01-01 ', time( sess_lastseen ) )\n\t\t\t\t\t\tWHERE date( sess_lastseen ) = '1970-01-01'\" );\n\t\t$DB->query( \"ALTER TABLE T_sessions CHANGE COLUMN sess_lastseen sess_lastseen_ts TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00' COMMENT 'User last logged activation time. Value may be off by up to 60 seconds'\" );\n\t\tdb_add_col( 'T_sessions', 'sess_start_ts', \"TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00' AFTER sess_hitcount\" );\n\t\t$DB->query( 'UPDATE T_sessions SET sess_start_ts = TIMESTAMPADD( SECOND, -1, sess_lastseen_ts )' );\n\t\tdb_drop_col( 'T_sessions', 'sess_hitcount' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users table...' );\n\t\tdb_add_col( 'T_users', 'user_lastseen_ts', 'TIMESTAMP NULL AFTER user_created_datetime' );\n\t\t$DB->query( 'UPDATE T_users SET user_lastseen_ts = ( SELECT MAX( sess_lastseen_ts ) FROM T_sessions WHERE sess_user_ID = user_ID )' );\n\t\t$DB->query( 'UPDATE T_users SET user_profileupdate_ts = user_created_datetime WHERE user_profileupdate_ts < user_created_datetime' );\n\t\t$DB->query( \"ALTER TABLE T_users CHANGE COLUMN user_profileupdate_ts user_profileupdate_date DATE NOT NULL DEFAULT '2000-01-01' COMMENT 'Last day when the user has updated some visible field in his profile.'\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating versions table...' );\n\t\tdb_add_col( 'T_items__version', 'iver_ID', 'INT UNSIGNED NOT NULL FIRST' );\n\t\t$DB->query( 'ALTER TABLE T_items__version DROP INDEX iver_itm_ID, ADD INDEX iver_ID_itm_ID ( iver_ID , iver_itm_ID )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading messaging contact group users...' );\n\t\tdb_add_foreign_key( 'T_messaging__contact_groupusers', 'cgu_cgr_ID', 'T_messaging__contact_groups', 'cgr_ID', 'ON DELETE CASCADE' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for a latest version of the POT file...' );\n\t\t$DB->query( \"CREATE TABLE T_i18n_original_string (\n\t\t\tiost_ID        int(10) unsigned NOT NULL auto_increment,\n\t\t\tiost_string    varchar(10000) NOT NULL default '',\n\t\t\tiost_inpotfile tinyint(1) NOT NULL DEFAULT 0,\n\t\t\tPRIMARY KEY (iost_ID)\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for a latest versions of the PO files...' );\n\t\t$DB->query( \"CREATE TABLE T_i18n_translated_string (\n\t\t\titst_ID       int(10) unsigned NOT NULL auto_increment,\n\t\t\titst_iost_ID  int(10) unsigned NOT NULL,\n\t\t\titst_locale   varchar(20) NOT NULL default '',\n\t\t\titst_standard varchar(10000) NOT NULL default '',\n\t\t\titst_custom   varchar(10000) NULL,\n\t\t\titst_inpofile tinyint(1) NOT NULL DEFAULT 0,\n\t\t\tPRIMARY KEY (itst_ID)\n\t\t) ENGINE = innodb DEFAULT CHARSET = utf8\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating Antispam IP Ranges table...' );\n\t\tdb_add_col( 'T_antispam__iprange', 'aipr_status', 'enum( \\'trusted\\', \\'suspect\\', \\'blocked\\' ) NULL DEFAULT NULL' );\n\t\tdb_add_col( 'T_antispam__iprange', 'aipr_block_count', 'int(10) unsigned DEFAULT 0' );\n\t\t$DB->query( \"ALTER TABLE T_antispam__iprange CHANGE COLUMN aipr_user_count aipr_user_count int(10) unsigned DEFAULT 0\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10970' );\n\t}\n\n\tif( $old_db_version < 10975 )\n\t{\t// part 8/b trunk aka first part of \"i4\"\n\n\t\ttask_begin( 'Creating default antispam IP ranges... ' );\n\t\t$DB->query( '\n\t\t\tINSERT INTO T_antispam__iprange ( aipr_IPv4start, aipr_IPv4end, aipr_status )\n\t\t\tVALUES ( '.$DB->quote( ip2int( '127.0.0.0' ) ).', '.$DB->quote( ip2int( '127.0.0.255' ) ).', \"trusted\" ),\n\t\t\t\t( '.$DB->quote( ip2int( '10.0.0.0' ) ).', '.$DB->quote( ip2int( '10.255.255.255' ) ).', \"trusted\" ),\n\t\t\t\t( '.$DB->quote( ip2int( '172.16.0.0' ) ).', '.$DB->quote( ip2int( '172.31.255.255' ) ).', \"trusted\" ),\n\t\t\t\t( '.$DB->quote( ip2int( '192.168.0.0' ) ).', '.$DB->quote( ip2int( '192.168.255.255' ) ).', \"trusted\" )\n\t\t\t' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '10975' );\n\t}\n\n\tif( $old_db_version < 11000 )\n\t{\t// part 8/c trunk aka first part of \"i4\"\n\n\t\ttask_begin( 'Adding new countries...' );\n\t\t// IGNORE is needed for upgrades from DB version 9970 or later\n\t\t$DB->query( 'INSERT IGNORE INTO T_regional__country ( ctry_code, ctry_name, ctry_curr_ID ) VALUES ( \\'ct\\', \\'Catalonia\\', \\'2\\' )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading message thread statuses table...' );\n\t\tdb_add_col( 'T_messaging__threadstatus', 'tsta_thread_leave_msg_ID', 'int(10) unsigned NULL DEFAULT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Item Settings...' );\n\t\t// Convert item custom fields to custom item settings ( move custom fields from T_items__item table to T_items__item_settings table )\n\t\t$query = \"INSERT INTO T_items__item_settings( iset_item_ID, iset_name, iset_value ) \";\n\t\tfor( $i = 1; $i <= 8; $i++ )\n\t\t{ // For each custom fields:\n\t\t\tif( $i > 1 )\n\t\t\t{\n\t\t\t\t$query .= ' UNION';\n\t\t\t}\n\t\t\t$field_name = ( $i > 5 ) ? 'varchar'.( $i - 5 ) : 'double'.$i;\n\t\t\t$query .= \" SELECT post_ID, 'custom_\".$field_name.\"', post_\".$field_name.\"\n\t\t\t\t\t\t\tFROM T_items__item WHERE post_\".$field_name.\" IS NOT NULL\";\n\t\t}\n\t\t$DB->query( $query );\n\n\t\tfor( $i = 1; $i <= 5; $i++ )\n\t\t{ // drop custom double columns from items tabe\n\t\t\tdb_drop_col( 'T_items__item', 'post_double'.$i );\n\t\t}\n\t\tfor( $i = 1; $i <= 3; $i++ )\n\t\t{ // drop custom varchar columns from items tabe\n\t\t\tdb_drop_col( 'T_items__item', 'post_varchar'.$i );\n\t\t}\n\n\t\t// Convert post_editor_code item field to item settings\n\t\t$DB->query( 'INSERT INTO T_items__item_settings ( iset_item_ID, iset_name, iset_value )\n\t\t\t\t\t\tSELECT post_ID, \"editor_code\", post_editor_code\n\t\t\t\t\t\t\tFROM T_items__item\n\t\t\t\t\t\t\tWHERE post_editor_code IS NOT NULL' );\n\t\tdb_drop_col( 'T_items__item', 'post_editor_code' );\n\n\t\t// Convert post_metadesc item field to item settings\n\t\t$DB->query( 'INSERT INTO T_items__item_settings ( iset_item_ID, iset_name, iset_value )\n\t\t\t\t\t\tSELECT post_ID, \"post_metadesc\", post_metadesc\n\t\t\t\t\t\t\tFROM T_items__item\n\t\t\t\t\t\t\tWHERE post_metadesc IS NOT NULL' );\n\t\tdb_drop_col( 'T_items__item', 'post_metadesc' );\n\n\t\t// Convert and rename post_metakeywords item field to post_custom_headers item settings\n\t\t$DB->query( 'INSERT INTO T_items__item_settings ( iset_item_ID, iset_name, iset_value )\n\t\t\t\t\t\tSELECT post_ID, \"post_custom_headers\", post_metakeywords\n\t\t\t\t\t\t\tFROM T_items__item\n\t\t\t\t\t\t\tWHERE post_metakeywords IS NOT NULL' );\n\t\tdb_drop_col( 'T_items__item', 'post_metakeywords' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading items table...' );\n\t\t// Drop not used column\n\t\tdb_drop_col( 'T_items__item', 'post_commentsexpire' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding new video file types...' );\n\t\t$ftyp = $DB->get_row('SELECT ftyp_ID, ftyp_extensions\n\t\t\t\t\t\t\t\t\tFROM T_filetypes\n\t\t\t\t\t\t\t\t\tWHERE ftyp_mimetype = \"video/mp4\"\n\t\t\t\t\t\t\t\t\tAND ftyp_extensions NOT LIKE \"%f4v%\"\n\t\t\t\t\t\t\t\t\tLIMIT 1');\n\n\t\tif( $ftyp )\n\t\t{\t// Add f4v extension to mp4 file type, if not exists\n\t\t\t$DB->query( 'UPDATE T_filetypes SET ftyp_extensions = \"'.$DB->escape($ftyp->ftyp_extensions.' f4v').'\"\n\t\t\t\t\t\t\tWHERE ftyp_ID = '.$DB->quote($ftyp->ftyp_ID) );\n\t\t}\n\t\t// Add flv file type if not exists\n\t\tif( !db_key_exists( 'T_filetypes', 'ftyp_extensions', '\"flv\"' ) )\n\t\t{\n\t\t\t$DB->query( 'INSERT INTO T_filetypes (ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed)\n\t\t\t\t             VALUES (\"flv\", \"Flash video file\", \"video/x-flv\", \"\", \"browser\", \"registered\")', 'Add \"flv\" file type' );\n\t\t}\n\t\t// Add swf file type if not exists\n\t\tif( !db_key_exists( 'T_filetypes', 'ftyp_extensions', '\"swf\"' ) )\n\t\t{\n\t\t\t$DB->query( 'INSERT INTO T_filetypes (ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed)\n\t\t\t\t             VALUES (\"swf\", \"Flash video file\", \"application/x-shockwave-flash\", \"\", \"browser\", \"registered\")', 'Add \"swf\" file type' );\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading custom item settings...' );\n\t\t$DB->begin();\n\t\t// Convert latitude and longitude from custom setting to normal item settings\n\t\t// Get those blog ids where Latitude and Longitude are both set\n\t\t$result = $DB->get_col( 'SELECT cs_left.cset_coll_ID\n\t\t\t\t\t\t\t\t\tFROM T_coll_settings as cs_left\n\t\t\t\t\t\t\t\t\tINNER JOIN T_coll_settings as cs_right ON cs_left.cset_coll_ID = cs_right.cset_coll_ID\n\t\t\t\t\t\t\t\t\tWHERE cs_left.cset_name = \"custom_double3\" AND cs_left.cset_value = \"Latitude\" AND\n\t\t\t\t\t\t\t\t\t\tcs_right.cset_name = \"custom_double4\" AND cs_right.cset_value = \"Longitude\"' );\n\t\tif( $result )\n\t\t{ // blogs were found where Latitude and Longitude custom fields were set for google maps plugin\n\t\t\t// Set \"Show location coordinates\" on where Latitude and Longitude were set\n\t\t\t$query_values = '( '.implode( ', \"show_location_coordinates\", 1 ), ( ', $result ).', \"show_location_coordinates\", 1 )';\n\t\t\t$DB->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\t\tVALUES '.$query_values );\n\n\t\t\t$coll_ids = implode( ', ', $result );\n\t\t\t// Update latitude Item settings\n\t\t\t$DB->query( 'UPDATE T_items__item_settings SET iset_name = \"latitude\"\n\t\t\t\t\t\t\tWHERE iset_name = \"custom_double3\" AND iset_item_ID IN (\n\t\t\t\t\t\t\t\tSELECT post_ID FROM T_items__item\n\t\t\t\t\t\t\t\tINNER JOIN T_categories ON post_main_cat_ID = cat_ID\n\t\t\t\t\t\t\t\tWHERE cat_blog_ID IN ( '.$coll_ids.' )\n\t\t\t\t\t\t\t)' );\n\t\t\t// Update longitude Item settings\n\t\t\t$DB->query( 'UPDATE T_items__item_settings SET iset_name = \"longitude\"\n\t\t\t\t\t\t\tWHERE iset_name = \"custom_double4\" AND iset_item_ID IN (\n\t\t\t\t\t\t\t\tSELECT post_ID FROM T_items__item\n\t\t\t\t\t\t\t\tINNER JOIN T_categories ON post_main_cat_ID = cat_ID\n\t\t\t\t\t\t\t\tWHERE cat_blog_ID IN ( '.$coll_ids.' )\n\t\t\t\t\t\t\t)' );\n\t\t\t// Delete proessed latitude & longitude custom fields from collection settings\n\t\t\t$DB->query( 'DELETE FROM T_coll_settings\n\t\t\t\t\t\tWHERE ( cset_name = \"custom_double3\" OR cset_name = \"custom_double4\" ) AND\n\t\t\t\t\t\t\tcset_coll_ID IN ( '.$coll_ids.' )' );\n\t\t}\n\t\t$DB->commit(); // End convert latitude and longitude\n\n\t\t$DB->begin(); // Convert custom fields\n\t\t// Delete not used custom fields\n\t\t$DB->query( 'DELETE FROM T_coll_settings WHERE ( cset_value IS NULL OR cset_value = \"\" ) AND cset_name LIKE \"custom\\_%\"' );\n\t\t// Set custom double fields count\n\t\t$DB->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\tSELECT cset_coll_ID, \"count_custom_double\", COUNT( cset_name )\n\t\t\t\t\t\tFROM T_coll_settings\n\t\t\t\t\t\tWHERE cset_name LIKE \"custom\\_double%\"\n\t\t\t\t\t\tGROUP BY cset_coll_ID' );\n\t\t// Set custom varchar fields count\n\t\t$DB->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\tSELECT cset_coll_ID, \"count_custom_varchar\", COUNT( cset_name )\n\t\t\t\t\t\tFROM T_coll_settings\n\t\t\t\t\t\tWHERE cset_name LIKE \"custom\\_varchar%\"\n\t\t\t\t\t\tGROUP BY cset_coll_ID' );\n\t\t// Select all custom fields from all blog, to create converted field values\n\t\t$result = $DB->get_results( 'SELECT cset_coll_ID as coll_ID, cset_name as name, cset_value as value\n\t\t\t\t\t\t\t\t\t\tFROM T_coll_settings\n\t\t\t\t\t\t\t\t\t\tWHERE cset_name LIKE \"custom\\_%\"\n\t\t\t\t\t\t\t\t\t\tORDER BY cset_coll_ID, cset_name' );\n\t\tif( !empty( $result ) )\n\t\t{ // There are custom fields in blog settings\n\t\t\t$convert_field_values = '';\n\t\t\t$reorder_field_values = '';\n\t\t\t$old_prefix = \"\";\n\t\t\t$old_coll_ID = \"\";\n\t\t\tforeach( $result as $row )\n\t\t\t{ // process each custom field\n\t\t\t\t$custom_id = uniqid( '' );\n\t\t\t\t$prefix = ( substr( $row->name, 7, 6 ) === 'double' ) ? 'custom_double' : 'custom_varchar';\n\t\t\t\t// replace custom_double{N} and custom_varchar{N} values with a custom_id where N is number\n\t\t\t\t$convert_field_values .= '( '.$row->coll_ID.', \"'.$row->name.'\", \"'.$custom_id.'\" ), ';\n\t\t\t\t// add new custom_double_{customid} and custom_varchar_{customid} entries with the old correspinding custom field values\n\t\t\t\t$convert_field_values .= '( '.$row->coll_ID.', \"'.$prefix.'_'.$custom_id.'\", \"'.$row->value.'\" ), ';\n\n\t\t\t\t// create reorder values to replace e.g. custom_double2 to custom_double1 if custom_double1 doesn't exists yet\n\t\t\t\t$index = ( ( $old_prefix == $prefix ) && ( $old_coll_ID == $row->coll_ID ) ) ? $index + 1 : 1;\n\t\t\t\t$reorder_field_values .= '( '.$row->coll_ID.', \"'.$prefix.$index.'\", \"'.$custom_id.'\" ), ';\n\t\t\t\t$old_prefix = $prefix;\n\t\t\t\t$old_coll_ID = $row->coll_ID;\n\t\t\t}\n\t\t\t$convert_field_values = substr( $convert_field_values, 0, -2 );\n\t\t\t$reorder_field_values = substr( $reorder_field_values, 0, -2 );\n\t\t\t// Convert custom fields in collection setting\n\t\t\t$DB->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\t\tVALUES '.$convert_field_values );\n\t\t\t// Update double custom field name_ids in item settings table\n\t\t\t$DB->query( 'UPDATE T_items__item_settings SET iset_name = (\n\t\t\t\t\t\t\t\tSELECT CONCAT( \"custom_double_\", cset_value ) FROM T_coll_settings\n\t\t\t\t\t\t\t\t\tINNER JOIN T_categories ON cset_coll_ID = cat_blog_ID\n\t\t\t\t\t\t\t\t\tINNER JOIN T_items__item ON cat_ID = post_main_cat_ID\n\t\t\t\t\t\t\t\t\tWHERE cset_name = iset_name AND post_ID  = iset_item_ID )\n\t\t\t\t\t\t\tWHERE iset_name LIKE \"custom\\_double%\"' );\n\t\t\t// Update varchar custom field name_ids in item settings table\n\t\t\t$DB->query( 'UPDATE T_items__item_settings SET iset_name = (\n\t\t\t\t\t\t\t\tSELECT CONCAT( \"custom_varchar_\", cset_value ) FROM T_coll_settings\n\t\t\t\t\t\t\t\t\tINNER JOIN T_categories ON cset_coll_ID = cat_blog_ID\n\t\t\t\t\t\t\t\t\tINNER JOIN T_items__item ON cat_ID = post_main_cat_ID\n\t\t\t\t\t\t\t\t\tWHERE cset_name = iset_name AND post_ID  = iset_item_ID )\n\t\t\t\t\t\t\tWHERE iset_name LIKE \"custom\\_varchar%\"' );\n\t\t\t// Reorder custom fields in collection settings\n\t\t\t$DB->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\t\tVALUES '.$reorder_field_values );\n\t\t}\n\t\t$DB->commit(); // End convert custom fields\n\t\ttask_end();\n\n\t\ttask_begin( 'Convert group users permissions to pluggable permissions...' );\n\t\t$DB->query( 'REPLACE INTO T_groups__groupsettings( gset_grp_ID, gset_name, gset_value )\n\t\t\t\t\t\tSELECT grp_ID, \"perm_users\", grp_perm_users\n\t\t\t\t\t\t\tFROM T_groups' );\n\t\tdb_drop_col( 'T_groups', 'grp_perm_users' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Update Post Types... ' );\n\t\t$DB->query( \"REPLACE INTO T_items__type ( ptyp_ID, ptyp_name )\n\t\t\tVALUES ( 4000, 'Advertisement' )\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Update files table... ' );\n\t\tdb_add_col( 'T_files', 'file_hash', 'char(32) default NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for files voting...' );\n\t\t$DB->query( 'CREATE TABLE '.$tableprefix.'files__vote (\n\t\t\t\tfvot_file_ID       int(11) UNSIGNED NOT NULL,\n\t\t\t\tfvot_user_ID       int(11) UNSIGNED NOT NULL,\n\t\t\t\tfvot_like          tinyint(1),\n\t\t\t\tfvot_inappropriate tinyint(1),\n\t\t\t\tfvot_spam          tinyint(1),\n\t\t\t\tprimary key (fvot_file_ID, fvot_user_ID)\n\t\t\t) ENGINE = innodb' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for users reporting...' );\n\t\t$DB->query( \"CREATE TABLE T_users__reports (\n\t\t\turep_target_user_ID int(11) unsigned NOT NULL,\n\t\t\turep_reporter_ID    int(11) unsigned NOT NULL,\n\t\t\turep_status         enum( 'fake', 'guidelines', 'harass', 'spam', 'other' ),\n\t\t\turep_info           varchar(240),\n\t\t\turep_datetime\t\tdatetime NOT NULL,\n\t\t\tPRIMARY KEY ( urep_target_user_ID, urep_reporter_ID )\n\t\t) ENGINE = innodb\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading skins type...' );\n\t\t$DB->query( \"ALTER TABLE T_skins__skin MODIFY COLUMN skin_type enum('normal','feed','sitemap','mobile','tablet') NOT NULL default 'normal'\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs skins...' );\n\t\t// Convert blog skin ID to blog settings\n\t\t$DB->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\tSELECT blog_ID, \"normal_skin_ID\", blog_skin_ID\n\t\t\t\t\t\tFROM T_blogs' );\n\t\tdb_drop_col( 'T_blogs', 'blog_skin_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Update categories table... ' );\n\t\tdb_add_col( 'T_categories', 'cat_meta', 'tinyint(1) NOT NULL DEFAULT 0' );\n\t\tdb_add_col( 'T_categories', 'cat_lock', 'tinyint(1) NOT NULL DEFAULT 0' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Plugin settings update...' );\n\t\t$all_blog_ids = $DB->get_col( 'SELECT blog_ID FROM T_blogs' );\n\t\t$plugin_ids = $DB->get_assoc( 'SELECT pset_plug_ID, pset_value FROM T_pluginsettings WHERE pset_name = \"render_comments\"' );\n\t\t$insert_values = '';\n\t\tforeach( $all_blog_ids as $blog_ID )\n\t\t{\n\t\t\tforeach( $plugin_ids as $plugin_ID => $setting_value )\n\t\t\t{\n\t\t\t\t$apply_comment_rendering = $setting_value ? 'stealth' : 'never';\n\t\t\t\t$insert_values .= '( '.$blog_ID.', \"plugin'.$plugin_ID.'_coll_apply_comment_rendering\", \"'.$apply_comment_rendering.'\" ),';\n\t\t\t}\n\t\t}\n\t\tif( !empty( $insert_values ) )\n\t\t{\n\t\t\t$DB->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\tVALUES '.substr( $insert_values, 0, strlen( $insert_values ) - 1 ) );\n\t\t}\n\t\t$DB->query( 'DELETE FROM T_pluginsettings WHERE pset_name = \"render_comments\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating comment prerendering cache table...' );\n\t\t$DB->query( \"CREATE TABLE T_comments__prerendering (\n\t\t\tcmpr_cmt_ID INT(11) UNSIGNED NOT NULL,\n\t\t\tcmpr_format ENUM('htmlbody','entityencoded','xml','text') NOT NULL,\n\t\t\tcmpr_renderers TEXT NOT NULL,\n\t\t\tcmpr_content_prerendered MEDIUMTEXT NULL,\n\t\t\tcmpr_datemodified TIMESTAMP NOT NULL,\n\t\t\tPRIMARY KEY (cmpr_cmt_ID, cmpr_format)\n\t\t) ENGINE = innodb\" );\n\t\tdb_add_col( 'T_comments', 'comment_renderers', \"TEXT NOT NULL AFTER comment_content\" );\n\t\t$DB->query( 'UPDATE T_comments SET comment_renderers = \"default\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading plugins table...' );\n\t\tdb_drop_col( 'T_plugins', 'plug_apply_rendering' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Auto_P plugin...' );\n\t\t$blog_settings = $DB->get_assoc( 'SELECT cset_coll_ID, cset_value FROM T_coll_settings WHERE cset_name = \"comment_autobr\"' );\n\t\t$insert_values = array();\n\t\t$plugin_ids = $DB->get_col( 'SELECT plug_ID FROM T_plugins WHERE plug_code = \"b2WPAutP\"' );\n\t\tforeach( $blog_settings as $blog_ID => $blog_setting_value )\n\t\t{\n\t\t\tforeach( $plugin_ids as $plugin_ID )\n\t\t\t{\n\t\t\t\tswitch( $blog_setting_value )\n\t\t\t\t{\n\t\t\t\t\tcase 'never':\n\t\t\t\t\t\t$apply_comment_rendering = 'never';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'optional':\n\t\t\t\t\t\t$apply_comment_rendering = 'opt-out';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'always':\n\t\t\t\t\t\t$apply_comment_rendering = 'stealth';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak 2;\n\t\t\t\t}\n\t\t\t\t$insert_values[] = '( '.$blog_ID.', \"plugin'.$plugin_ID.'_coll_apply_comment_rendering\", \"'.$apply_comment_rendering.'\" )';\n\t\t\t}\n\t\t}\n\t\tif( count( $insert_values ) > 0 )\n\t\t{\n\t\t\t$DB->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\tVALUES '.implode( ',', $insert_values ) );\n\t\t}\n\t\t$DB->query( 'DELETE FROM T_coll_settings WHERE cset_name = \"comment_autobr\"' );\n\t\t$DB->query( 'UPDATE T_comments SET comment_content = REPLACE( REPLACE( comment_content, \"<br>\\n\", \"\\n\" ), \"<br />\\n\", \"\\n\" )' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11000' );\n\t}\n\n\tif( $old_db_version < 11010 )\n\t{\t// part 9 trunk aka second part of \"i4\"\n\n\t\ttask_begin( 'Upgrading post statuses...' );\n\t\t$DB->query( \"ALTER TABLE T_items__item CHANGE COLUMN post_status post_status enum('published','community','deprecated','protected','private','review','draft','redirected') NOT NULL default 'published'\" );\n\t\t$DB->query( \"ALTER TABLE T_items__version CHANGE COLUMN iver_status iver_status ENUM('published','community','deprecated','protected','private','review','draft','redirected') NULL\" );\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms CHANGE COLUMN bloguser_perm_poststatuses bloguser_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') NOT NULL default ''\" );\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms CHANGE COLUMN bloggroup_perm_poststatuses bloggroup_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') NOT NULL default ''\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading groups table...' );\n\t\t$pbloggers_renamed_to_moderators = $DB->query( 'UPDATE T_groups SET grp_name = \"Moderators\" WHERE grp_ID = 2 AND grp_name = \"Privileged Bloggers\"' );\n\t\t// Update administrators and moderators users coll setting permissions with new permissions\n\t\t// Note we can change moderators permission if the group name and ID was not changed after the original install\n\t\t$moderators_condition = $pbloggers_renamed_to_moderators ? ' OR bloggroup_group_ID = 2' : '';\n\t\t$DB->query( \"UPDATE T_coll_group_perms SET bloggroup_perm_poststatuses = 'published,community,deprecated,protected,private,review,draft' WHERE bloggroup_group_ID = 1\".$moderators_condition );\n\t\t// Change groups name\n\t\t$DB->query( 'UPDATE T_groups SET grp_name = \"Trusted Users\" WHERE grp_ID = 3 AND grp_name = \"Bloggers\"' );\n\t\t$DB->query( 'UPDATE T_groups SET grp_name = \"Normal Users\" WHERE grp_ID = 4 AND grp_name = \"Basic Users\"' );\n\n\t\t// Get \"Misbehaving/Suspect Users\" group ID\n\t\t$suspect_query = 'SELECT grp_ID\n\t\t\t\t\t\tFROM T_groups\n\t\t\t\t\t\tWHERE grp_name = \"Misbehaving/Suspect Users\"\n\t\t\t\t\t\tORDER BY grp_ID DESC\n\t\t\t\t\t\tLIMIT 1';\n\t\t$suspect_group_ID = $DB->get_var( $suspect_query );\n\t\tif( empty( $suspect_group_ID ) )\n\t\t{ // suspect group doesn't exists, check spammers because probably it does not exists either\n\t\t\t$insert_values = '( \"Misbehaving/Suspect Users\" )';\n\t\t\t// Get \"Spammers/Restricted Users\" group ID\n\t\t\t$query = 'SELECT grp_ID\n\t\t\t\t\tFROM T_groups\n\t\t\t\t\tWHERE grp_name = \"Spammers/Restricted Users\"\n\t\t\t\t\tORDER BY grp_ID DESC\n\t\t\t\t\tLIMIT 1';\n\t\t\t$spammers_group_ID = $DB->get_var( $query );\n\t\t\tif( empty( $spammers_group_ID ) )\n\t\t\t{\n\t\t\t\t$insert_values .= ', ( \"Spammers/Restricted Users\" )';\n\t\t\t}\n\t\t\t// Insert two new group\n\t\t\t$DB->query( 'INSERT INTO T_groups ( grp_name )\n\t\t\t\t\t\tVALUES '.$insert_values );\n\n\t\t\t$suspect_group_ID = $DB->get_var( $suspect_query );\n\t\t\tif( $suspect_group_ID )\n\t\t\t{ // Set coll setting permissions for Misbehaving/Suspect Users in Forums\n\t\t\t\t$query = \"\n\t\t\t\t\tINSERT INTO T_coll_group_perms( bloggroup_blog_ID, bloggroup_group_ID, bloggroup_ismember,\n\t\t\t\t\t\tbloggroup_perm_poststatuses, bloggroup_perm_delpost, bloggroup_perm_edit_ts,\n\t\t\t\t\t\tbloggroup_perm_own_cmts, bloggroup_perm_vote_spam_cmts, bloggroup_perm_draft_cmts, bloggroup_perm_publ_cmts, bloggroup_perm_depr_cmts,\n\t\t\t\t\t\tbloggroup_perm_cats, bloggroup_perm_properties,\n\t\t\t\t\t\tbloggroup_perm_media_upload, bloggroup_perm_media_browse, bloggroup_perm_media_change )\n\t\t\t\t\tSELECT blog_ID, \".$suspect_group_ID.\", 1, 'review,draft', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n\t\t\t\t\t\tFROM T_blogs WHERE blog_ID = 5 AND blog_shortname = 'Forums'\";\n\t\t\t\t$DB->query( $query );\n\t\t\t}\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs table...' );\n\t\tdb_add_col( 'T_blogs', 'blog_type', 'ENUM( \"std\", \"photo\", \"group\", \"forum\", \"manual\" ) DEFAULT \"std\" NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading comment statuses...' );\n\t\t$DB->query( \"ALTER TABLE T_comments CHANGE COLUMN comment_status comment_status ENUM('published','community','deprecated','protected','private','review','draft','trash') DEFAULT 'published' NOT NULL\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating collection user/group permissions...' );\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_cmtstatuses', \"set('review','draft','private','protected','deprecated','community','published') NOT NULL default '' AFTER bloguser_perm_vote_spam_cmts\" );\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_edit_cmt', \"ENUM('no','own','anon','lt','le','all') NOT NULL default 'no' AFTER bloguser_perm_cmtstatuses\" );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_cmtstatuses', \"set('review','draft','private','protected','deprecated','community','published') NOT NULL default '' AFTER bloggroup_perm_vote_spam_cmts\" );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_edit_cmt', \"ENUM('no','own','anon','lt','le','all') NOT NULL default 'no' AFTER bloggroup_perm_cmtstatuses\" );\n\n\t\t// Add access to those comment statuses for what user had before\n\t\t$DB->query( 'UPDATE T_coll_user_perms\n\t\t\t\t\tSET bloguser_perm_cmtstatuses = ( bloguser_perm_publ_cmts * 1 ) | ( bloguser_perm_depr_cmts * 4 ) | ( bloguser_perm_draft_cmts * 64 )' );\n\t\t// Add access to all cmt statuses for those users which had edit permission on all comment statuses\n\t\t$DB->query( 'UPDATE T_coll_user_perms\n\t\t\t\t\tSET bloguser_perm_cmtstatuses = \"published,community,deprecated,protected,private,review,draft\", bloguser_perm_edit_cmt = \"all\"\n\t\t\t\t\tWHERE bloguser_perm_publ_cmts <> 0 AND bloguser_perm_depr_cmts <> 0 AND bloguser_perm_draft_cmts <> 0' );\n\t\t// Add \"lower then\" edit permission to those users who had permission to edit published or draft comments\n\t\t$DB->query( 'UPDATE T_coll_user_perms\n\t\t\t\t\tSET bloguser_perm_edit_cmt = \"lt\"\n\t\t\t\t\tWHERE ( bloguser_perm_cmtstatuses & 65 ) != 0 AND bloguser_perm_edit_cmt = \"no\"' );\n\n\t\t// Add access to those comment statuses for what group had before\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t\t\tSET bloggroup_perm_cmtstatuses = ( bloggroup_perm_publ_cmts * 1 ) | ( bloggroup_perm_depr_cmts * 4 ) | ( bloggroup_perm_draft_cmts * 64 )' );\n\t\t// Add access to all cmt statuses for those groups which had edit permission on all comment statuses\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t\t\tSET bloggroup_perm_cmtstatuses = \"published,community,deprecated,protected,private,review,draft\", bloggroup_perm_edit_cmt = \"all\"\n\t\t\t\t\tWHERE bloggroup_perm_publ_cmts <> 0 AND bloggroup_perm_depr_cmts <> 0 AND bloggroup_perm_draft_cmts <> 0' );\n\t\t// Add \"lower then\" edit permission to those groups who had permission to edit published or draft comments\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t\t\tSET bloggroup_perm_edit_cmt = \"lt\"\n\t\t\t\t\tWHERE ( bloggroup_perm_cmtstatuses & 65 ) != 0 AND bloggroup_perm_edit_cmt = \"no\"' );\n\n\t\tdb_drop_col( 'T_coll_user_perms', 'bloguser_perm_draft_cmts' );\n\t\tdb_drop_col( 'T_coll_user_perms', 'bloguser_perm_publ_cmts' );\n\t\tdb_drop_col( 'T_coll_user_perms', 'bloguser_perm_depr_cmts' );\n\t\tdb_drop_col( 'T_coll_group_perms', 'bloggroup_perm_draft_cmts' );\n\t\tdb_drop_col( 'T_coll_group_perms', 'bloggroup_perm_publ_cmts' );\n\t\tdb_drop_col( 'T_coll_group_perms', 'bloggroup_perm_depr_cmts' );\n\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_delcmts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_edit_ts' );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_delcmts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_edit_ts' );\n\t\t// GRANT delete comment perms for moderators\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t\t\tSET bloggroup_perm_delcmts = 1\n\t\t\t\t\tWHERE bloggroup_perm_edit_cmt = \"le\" OR bloggroup_perm_edit_cmt = \"all\"' );\n\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms CHANGE COLUMN bloguser_perm_own_cmts bloguser_perm_recycle_owncmts tinyint NOT NULL default 0\" );\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms CHANGE COLUMN bloggroup_perm_own_cmts bloggroup_perm_recycle_owncmts tinyint NOT NULL default 0\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating blogs settings...' );\n\t\t$DB->query( 'UPDATE T_coll_settings SET cset_value = \"blog\" WHERE cset_name = \"enable_goto_blog\" AND cset_value = \"1\"' );\n\t\t$DB->query( 'UPDATE T_coll_settings SET cset_value = \"no\" WHERE cset_name = \"enable_goto_blog\" AND cset_value = \"0\"' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11010' );\n\t}\n\n\tif( $old_db_version < 11020 )\n\t{\t// part 10 trunk aka third part of \"i4\"\n\n\t\ttask_begin( 'Upgrading users table...' );\n\t\t// Get all users with defined IPs\n\t\t$users_SQL = new SQL();\n\t\t$users_SQL->SELECT( 'user_ID, user_created_fromIPv4' );\n\t\t$users_SQL->FROM( 'T_users' );\n\t\t$users_SQL->WHERE( 'user_created_fromIPv4 IS NOT NULL' );\n\t\t$users_SQL->WHERE_and( 'user_created_fromIPv4 != '.$DB->quote( ip2int( '0.0.0.0' ) ) );\n\t\t$users_SQL->WHERE_and( 'user_created_fromIPv4 != '.$DB->quote( ip2int( '127.0.0.1' ) ) );\n\t\t$users = $DB->get_assoc( $users_SQL->get() );\n\t\t// Get user's IPs from settings table\n\t\t$settings_SQL = new SQL();\n\t\t$settings_SQL->SELECT( 'uset_user_ID, uset_value' );\n\t\t$settings_SQL->FROM( 'T_users__usersettings' );\n\t\t$settings_SQL->WHERE( 'uset_name = \"user_ip\"' );\n\t\tif( count( $users ) > 0 )\n\t\t{\t// Get IPs only for users which have not IP in T_users table\n\t\t\t$settings_SQL->WHERE_and( 'uset_user_ID NOT IN ('.$DB->quote( array_keys( $users ) ).')' );\n\t\t}\n\t\t$settings = $DB->get_assoc( $settings_SQL->get() );\n\t\tif( count( $users ) > 0 || count( $settings ) > 0 )\n\t\t{\n\t\t\t$users_settings_insert_sql = array();\n\t\t\tforeach( $users as $user_ID => $user_IP )\n\t\t\t{\n\t\t\t\t$users_settings_insert_sql[] = '( '.$DB->quote( $user_ID ).', \"created_fromIPv4\", '.$DB->quote( $user_IP ).' )';\n\t\t\t}\n\t\t\tforeach( $settings as $user_ID => $user_IP )\n\t\t\t{\n\t\t\t\t$users_settings_insert_sql[] = '( '.$DB->quote( $user_ID ).', \"created_fromIPv4\", '.$DB->quote( ip2int( $user_IP ) ).' )';\n\t\t\t}\n\t\t\t// Insert IPs values into settings table\n\t\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\t\tVALUES '.implode( ', ', $users_settings_insert_sql ) );\n\t\t}\n\t\t// Remove old IPs from settings table\n\t\t$DB->query( 'DELETE FROM T_users__usersettings\n\t\t\tWHERE uset_name = \"user_ip\"' );\n\t\tdb_drop_col( 'T_users', 'user_created_fromIPv4' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11020' );\n\t}\n\n\tif( $old_db_version < 11025 )\n\t{\t// part 11 trunk aka fourth part of \"i4\"\n\n\t\ttask_begin( 'Upgrading items table...' );\n\t\t$DB->query( \"UPDATE T_items__item SET post_datecreated = concat( '2000-01-01 ', time( post_datecreated ) )\n\t\t\t\t\t\tWHERE date( post_datecreated ) = '1970-01-01'\" );\n\t\t$DB->query( \"UPDATE T_items__item SET post_datemodified = concat( '2000-01-01 ', time( post_datemodified ) )\n\t\t\t\t\t\tWHERE date( post_datemodified ) = '1970-01-01'\" );\n\t\t$DB->query( \"ALTER TABLE T_items__item CHANGE COLUMN post_datecreated post_datecreated TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00'\" );\n\t\t$DB->query( \"ALTER TABLE T_items__item CHANGE COLUMN post_datemodified post_datemodified TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00'\" );\n\t\tdb_add_col( 'T_items__item', 'post_last_touched_ts', \"TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00' AFTER post_datemodified\" );\n\t\t$DB->query( 'UPDATE T_items__item SET post_last_touched_ts = post_datemodified' );\n\t\ttask_end();\n\n\t\t/*\n\t\t * ADD UPGRADES FOR i4 BRANCH __ABOVE__ IN THIS BLOCK.\n\t\t *\n\t\t * This part will be included in trunk and i4 branches\n\t\t */\n\n\t\tset_upgrade_checkpoint( '11025' );\n\t}\n\n\t// In some upgrade versions ( currently only in \"i5\" ) we would like to create profile pictures links from the user's files in the profile pictures folder\n\t// To be able to do that we need an up to date database version, so we will create profile pictures after the ugrade script run successfully.\n\t// Set this $create_profile_picture_links to true only in those upgrade block where it's required.\n\t$create_profile_picture_links = false;\n\n\tif( $old_db_version < 11100 )\n\t{\t// part 12 trunk aka \"i5\"\n\n\t\ttask_begin( 'Update links table...' );\n\t\tdb_add_col( 'T_links', 'link_usr_ID', 'int(11) unsigned  NULL COMMENT \"Used for linking files to users (user profile picture)\" AFTER link_cmt_ID' );\n\t\tdb_add_index( 'T_links', 'link_usr_ID', 'link_usr_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating links for users profile pictures...' );\n\t\t// Create links for main profile pictures\n\t\t$link_create_date = date2mysql( time() );\n\t\t$DB->query( 'INSERT INTO T_links( link_datecreated, link_datemodified, link_usr_ID, link_file_ID, link_position, link_order )\n\t\t\t\t\t\tSELECT '.$DB->quote( $link_create_date ).', '.$DB->quote( $link_create_date ).', user_ID, user_avatar_file_ID, \"\", 1\n\t\t\t\t\t\tFROM T_users\n\t\t\t\t\t\tWHERE user_avatar_file_ID IS NOT NULL' );\n\t\t// Set $create_profile_picture_links to true to create links for all files from the users profile_pictures folder\n\t\t$create_profile_picture_links = true;\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading custom item settings...' );\n\t\t$DB->begin(); // Add names for custom fields\n\t\t// Select all custom fields from all blogs, to create field names\n\t\t$result = $DB->get_results( 'SELECT cset_coll_ID as coll_ID, cset_name as name, cset_value as value\n\t\t\t\t\t\t\t\t\t\tFROM T_coll_settings\n\t\t\t\t\t\t\t\t\t\tWHERE cset_name LIKE \"custom\\_double\\_%\"\n\t\t\t\t\t\t\t\t\t\t   OR cset_name LIKE \"custom\\_varchar\\_%\"\n\t\t\t\t\t\t\t\t\t\tORDER BY cset_coll_ID, cset_name' );\n\t\tif( !empty( $result ) )\n\t\t{ // There are custom fields in blog settings\n\t\t\t$insert_field_names = '';\n\t\t\tforeach( $result as $row )\n\t\t\t{ // process each custom field\n\t\t\t\t$field_guid = preg_replace( '/^custom_(double|varchar)_([a-f0-9\\-]+)$/', '$2', $row->name );\n\t\t\t\t// Replace special chars/umlauts, if we can convert charsets:\n\t\t\t\tload_funcs('locales/_charset.funcs.php');\n\t\t\t\t$field_name = strtolower( preg_replace( '/[^a-z0-9\\-_]+/i', '_', $row->value ) );\n\t\t\t\t$field_name = replace_special_chars( $field_name );\n\n\t\t\t\t$insert_field_names .= '( '.$row->coll_ID.', \"custom_fname_'.$field_guid.'\", \"'.$field_name.'\" ), ';\n\t\t\t}\n\t\t\t// Insert names for custom fields in collection settings\n\t\t\t$DB->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\t\t\t\tVALUES '.substr( $insert_field_names, 0, -2 ) );\n\t\t}\n\t\t$DB->commit(); // End adding of names for custom fields\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading comments table...' );\n\t\tdb_add_index( 'T_comments', 'comment_status', 'comment_status' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11100' );\n\t}\n\n\tif( $old_db_version < 11110 )\n\t{ // part 13 trunk aka second part of \"i5\"\n\n\t\t// Add new settings for antispam groups\n\t\t$antispam_group_settings = $DB->get_assoc( 'SELECT set_name, set_value\n\t\t\t FROM T_settings\n\t\t\tWHERE set_name IN ( '.$DB->quote( array( 'antispam_suspicious_group', 'antispam_trust_groups' ) ).')' );\n\t\tif( count( $antispam_group_settings ) < 2 )\n\t\t{ // Insert new settings only if don't exist in DB\n\t\t\ttask_begin( 'Updating general settings...' );\n\t\t\t// Set antispam suspicious group\n\t\t\tif( !isset( $antispam_group_settings['antispam_suspicious_group'] ) )\n\t\t\t{ // Insert new value, Don't rewrite value if it already defined before\n\t\t\t\t$suspect_group_SQL = new SQL();\n\t\t\t\t$suspect_group_SQL->SELECT( 'grp_ID' );\n\t\t\t\t$suspect_group_SQL->FROM( 'T_groups' );\n\t\t\t\t$suspect_group_SQL->WHERE( 'grp_name = '.$DB->quote( 'Misbehaving/Suspect Users' ) );\n\t\t\t\t$suspect_group_ID = $DB->get_var( $suspect_group_SQL->get() );\n\t\t\t\tif( !empty( $suspect_group_ID ) )\n\t\t\t\t{ // Save setting value\n\t\t\t\t\t$DB->query( 'INSERT INTO T_settings ( set_name, set_value ) VALUES\n\t\t\t\t\t\t\t( '.$DB->quote( 'antispam_suspicious_group' ).', '.$DB->quote( $suspect_group_ID ).' )' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Set antispam trust groups\n\t\t\tif( !isset( $antispam_group_settings['antispam_trust_groups'] ) )\n\t\t\t{ // Insert new value, Don't rewrite value if it already defined before\n\t\t\t\t$trust_groups = array( 'Administrators', 'Moderators', 'Trusted Users', 'Spammers/Restricted Users' );\n\t\t\t\t$trust_groups_SQL = new SQL();\n\t\t\t\t$trust_groups_SQL->SELECT( 'grp_ID' );\n\t\t\t\t$trust_groups_SQL->FROM( 'T_groups' );\n\t\t\t\t$trust_groups_SQL->WHERE( 'grp_name IN ( '.$DB->quote( $trust_groups ).')' );\n\t\t\t\t$trust_groups_IDs = $DB->get_col( $trust_groups_SQL->get() );\n\t\t\t\tif( !empty( $trust_groups_IDs ) )\n\t\t\t\t{ // Save setting value\n\t\t\t\t\t$DB->query( 'INSERT INTO T_settings ( set_name, set_value ) VALUES\n\t\t\t\t\t\t\t( '.$DB->quote( 'antispam_trust_groups' ).', '.$DB->quote( implode( ',', $trust_groups_IDs ) ).' )' );\n\t\t\t\t}\n\t\t\t}\n\t\t\ttask_end();\n\t\t}\n\n\t\tset_upgrade_checkpoint( '11110' );\n\t}\n\n\tif( $old_db_version < 11200 )\n\t{ // part 14 trunk aka \"i6\"\n\n\t\ttask_begin( 'Upgrading comments table...' );\n\t\tdb_add_col( 'T_comments', 'comment_last_touched_ts', \"TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00' AFTER comment_date\" );\n\t\t$DB->query( 'UPDATE T_comments\n\t\t                SET comment_last_touched_ts = comment_date' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Convert email addresses to lowercase... ' );\n\t\t$DB->query( 'UPDATE T_users SET user_email = LOWER( user_email )' );\n\t\t$DB->query( 'UPDATE '.$tableprefix.'email__blocked SET emblk_address = LOWER( emblk_address )' );\n\t\t$DB->query( 'UPDATE T_email__returns SET emret_address = LOWER( emret_address )' );\n\t\t$DB->query( 'UPDATE T_email__log SET emlog_to = LOWER( emlog_to )' );\n\t\t$DB->query( 'UPDATE T_comments\n\t\t\t  SET comment_author_email = LOWER( comment_author_email )\n\t\t\tWHERE comment_author_email IS NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs table...' );\n\t\tdb_add_col( 'T_blogs', 'blog_order', 'int(11) NULL DEFAULT NULL' );\n\t\t$DB->query( 'UPDATE T_blogs\n\t\t                SET blog_order = blog_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating general settings...' );\n\t\t$site_skins_enabled = $DB->get_var( 'SELECT set_value\n\t\t\t FROM T_settings\n\t\t\tWHERE set_name = '.$DB->quote( 'site_skins_enabled' ) );\n\t\tif( is_null( $site_skins_enabled ) )\n\t\t{ // Insert new setting to disable site skins\n\t\t\t$DB->query( 'INSERT INTO T_settings ( set_name, set_value )\n\t\t\t\tVALUES ( '.$DB->quote( 'site_skins_enabled' ).', '.$DB->quote( '0' ).' )' );\n\t\t}\n\t\telseif( $site_skins_enabled == '1' )\n\t\t{ // Disable site skins if it is enabled\n\t\t\t$DB->query( 'UPDATE T_settings\n\t\t\t\t  SET set_value = '.$DB->quote( '0' ).'\n\t\t\t\tWHERE set_name = '.$DB->quote( 'site_skins_enabled' ) );\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs table...' );\n\t\tdb_add_col( 'T_blogs', 'blog_favorite', 'TINYINT(1) NOT NULL DEFAULT 1' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table of base domains... ' );\n\t\t$DB->query( \"ALTER TABLE T_basedomains CHANGE COLUMN dom_status dom_status ENUM('unknown','trusted','suspect','blocked') NOT NULL DEFAULT 'unknown'\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for file links voting... ' );\n\t\tdb_create_table( $tableprefix.'links__vote', '\n\t\t\tlvot_link_ID       int(11) UNSIGNED NOT NULL,\n\t\t\tlvot_user_ID       int(11) UNSIGNED NOT NULL,\n\t\t\tlvot_like          tinyint(1),\n\t\t\tlvot_inappropriate tinyint(1),\n\t\t\tlvot_spam          tinyint(1),\n\t\t\tprimary key (lvot_link_ID, lvot_user_ID)' );\n\n\t\t// Convert all file votes to link votes\n\t\t$DB->query( 'INSERT INTO '.$tableprefix.'links__vote ( lvot_link_ID, lvot_user_ID, lvot_like, lvot_inappropriate, lvot_spam )\n\t\t\t\t\t\tSELECT link_ID, fvot_user_ID, fvot_like, fvot_inappropriate, fvot_spam\n\t\t\t\t\t\tFROM '.$tableprefix.'files__vote\n\t\t\t\t\t\tLEFT JOIN T_links ON link_file_ID = fvot_file_ID\n\t\t\t\t\t\tWHERE link_ID IS NOT NULL' );\n\n\t\t// Delete old file voting table\n\t\t$DB->query( 'DROP TABLE IF EXISTS '.$tableprefix.'files__vote' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for goal categories... ' );\n\t\tdb_create_table( 'T_track__goalcat', '\n\t\t\tgcat_ID     int(10) unsigned NOT NULL auto_increment,\n\t\t\tgcat_name   varchar(50) default NULL,\n\t\t\tgcat_color  char(7) default NULL,\n\t\t\tPRIMARY KEY (gcat_ID)',\n\t\t\t'ENGINE = myisam' );\n\t\t// Insert default goal category\n\t\t$DB->query( 'INSERT INTO T_track__goalcat ( gcat_name, gcat_color )\n\t\t\tVALUES ( '.$DB->quote( 'Default' ).', '.$DB->quote( '#999999' ).' )' );\n\t\t$default_goalcat_ID = $DB->insert_id;\n\n\t\tdb_add_col( 'T_track__goal', 'goal_gcat_ID', 'int(10) unsigned NOT NULL DEFAULT \"'.$default_goalcat_ID.'\" AFTER goal_ID' );\n\t\t$DB->query( 'ALTER TABLE T_track__goal\n\t\t\tCHANGE goal_gcat_ID goal_gcat_ID int(10) unsigned NOT NULL' );\n\t\ttask_end();\n\n\t\t// This task was not required, but we would like to make sure that we have future proof link_datecreated and link_datemodified fields.\n\t\t// There were previous versions, when these fields were set to '1970-01-01' because the $localtimenow was not initialized during the install script\n\t\ttask_begin( 'Update links table...' );\n\t\t$DB->query( \"UPDATE T_links SET link_datecreated = concat( '2000-01-01 ', time( link_datecreated ) )\n\t\t\t\t\t\tWHERE date( link_datecreated ) = '1970-01-01'\" );\n\t\t$DB->query( \"UPDATE T_links SET link_datemodified = concat( '2000-01-01 ', time( link_datemodified ) )\n\t\t\t\t\t\tWHERE date( link_datemodified ) = '1970-01-01'\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Blogs table...' );\n\t\t$DB->query( 'ALTER TABLE T_blogs CHANGE blog_description blog_shortdesc varchar(250) NULL default \"\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Comments table...' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\tCHANGE comment_post_ID   comment_item_ID        int(11) unsigned NOT NULL default 0,\n\t\t\tCHANGE comment_author_ID comment_author_user_ID int unsigned NULL default NULL');\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\tDROP INDEX comment_post_ID');\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\tADD KEY comment_item_ID ( comment_item_ID )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Files table...' );\n\t\t$DB->query( 'ALTER TABLE T_files\n\t\t\tDROP INDEX file,\n\t\t\tADD COLUMN file_path_hash char(32) default NULL' );\n\t\t// Change file path length to the max allowed value\n\t\t$DB->query( \"ALTER TABLE T_files CHANGE COLUMN file_path file_path VARCHAR(767) NOT NULL DEFAULT ''\" );\n\t\t$DB->query( 'UPDATE T_files SET file_path_hash = MD5( CONCAT( file_root_type, file_root_ID, file_path ) )');\n\t\t$DB->query( 'ALTER TABLE T_files ADD UNIQUE file_path (file_path_hash)' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for email campaigns... ' );\n\t\tdb_create_table( 'T_email__campaign', '\n\t\t\tecmp_ID          INT NOT NULL AUTO_INCREMENT,\n\t\t\tecmp_date_ts     TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\tecmp_name        VARCHAR(255) NOT NULL,\n\t\t\tecmp_email_title VARCHAR(255) NULL,\n\t\t\tecmp_email_html  TEXT NULL,\n\t\t\tecmp_email_text  TEXT NULL,\n\t\t\tecmp_sent_ts     TIMESTAMP NULL,\n\t\t\tPRIMARY KEY      (ecmp_ID)',\n\t\t\t'ENGINE = myisam' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for email campaign send data... ' );\n\t\tdb_create_table( 'T_email__campaign_send', '\n\t\t\tcsnd_camp_ID  INT(11) UNSIGNED NOT NULL,\n\t\t\tcsnd_user_ID  INT(11) UNSIGNED NOT NULL,\n\t\t\tcsnd_emlog_ID INT(11) UNSIGNED NULL,\n\t\t\tPRIMARY KEY   csnd_PK ( csnd_camp_ID, csnd_user_ID )',\n\t\t\t'ENGINE = myisam' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Rename table \"email blocked\" to \"email address\"... ' );\n\t\t$DB->query( 'RENAME TABLE '.$tableprefix.'email__blocked TO T_email__address' );\n\t\t$DB->query( \"ALTER TABLE T_email__address\n\t\t\tCHANGE emblk_ID                    emadr_ID                    INT(10) UNSIGNED NOT NULL auto_increment,\n\t\t\tCHANGE emblk_address               emadr_address               VARCHAR(255) DEFAULT NULL,\n\t\t\tCHANGE emblk_status                emadr_status                ENUM ( 'unknown', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) NOT NULL DEFAULT 'unknown',\n\t\t\tCHANGE emblk_sent_count            emadr_sent_count            INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\tCHANGE emblk_sent_last_returnerror emadr_sent_last_returnerror INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\tCHANGE emblk_prmerror_count        emadr_prmerror_count        INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\tCHANGE emblk_tmperror_count        emadr_tmperror_count        INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\tCHANGE emblk_spamerror_count       emadr_spamerror_count       INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\tCHANGE emblk_othererror_count      emadr_othererror_count      INT(10) UNSIGNED NOT NULL DEFAULT 0,\n\t\t\tCHANGE emblk_last_sent_ts          emadr_last_sent_ts          TIMESTAMP NULL,\n\t\t\tCHANGE emblk_last_error_ts         emadr_last_error_ts         TIMESTAMP NULL\");\n\t\t$DB->query( \"ALTER TABLE T_email__address\n\t\t\tADD UNIQUE emadr_address ( emadr_address )\" );\n\t\t$DB->query( \"ALTER TABLE T_email__address\n\t\t\tDROP INDEX emblk_address\");\n\t\ttask_end();\n\n\t\t// Add new email status 'redemption'\n\t\ttask_begin( 'Upgrading table of email addresses...' );\n\t\t$DB->query( \"ALTER TABLE T_email__address\n\t\t\tCHANGE emadr_status   emadr_status ENUM ( 'unknown', 'redemption', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) NOT NULL DEFAULT 'unknown'\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blog-group permissions table...' );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_can_be_assignee', 'tinyint NOT NULL default 0 AFTER bloggroup_ismember' );\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t  SET bloggroup_can_be_assignee = 1\n\t\t\tWHERE bloggroup_group_ID IN ( 1, 2 )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blog-user permissions table...' );\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_can_be_assignee', 'tinyint NOT NULL default 0 AFTER bloguser_ismember' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Dropping obsolete columns from table Links...' );\n\t\t$DB->query( 'ALTER TABLE T_links\n\t\t\t\t\t\t\t\t\tDROP COLUMN link_external_url,\n\t\t\t\t\t\t\t\t\tDROP COLUMN link_title,\n\t\t\t\t\t\t\t\t\tDROP COLUMN link_dest_itm_ID' );\n\t\ttask_end();\n\n\t\t// This task was added later to turn OFF smart view counting on upgrade from v5.0 to v5.1 for better performance\n\t\ttask_begin( 'Turn off smart view counting...' );\n\t\t$DB->query( 'DELETE FROM T_settings WHERE set_name = '.$DB->quote( 'smart_view_count' ) );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Posts table...' );\n\t\tdb_drop_col( 'T_items__item', 'post_views' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading Files table... ' );\n\t\t$DB->query( \"ALTER TABLE T_files\n\t\t\tCHANGE COLUMN file_root_type file_root_type enum('absolute','user','collection','shared','skins','import') not null default 'absolute'\" );\n\t\ttask_end();\n\n\t\t// Set flag to recreate autogenerated excerpts due to modifications on the excerpt generation\n\t\t// Note: We need to generate this in the end of the upgrade script, because the database must be up to date\n\t\t$recreate_autogenerated_excerpts = true;\n\n\t\tset_upgrade_checkpoint( '11200' );\n\t}\n\n\tif( $old_db_version < 11208 )\n\t{ // part 15.a trunk aka second part of \"i6\"\n\n\t\t// Note create a separate block for the hitlog upgrade because it may require very long time\n\t\ttask_begin( 'Upgrade hitlog table...' );\n\t\t$DB->query( 'ALTER TABLE T_hitlog\n\t\t\tCHANGE COLUMN hit_ID            hit_ID            INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\tCHANGE COLUMN hit_datetime      hit_datetime      TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\tCHANGE COLUMN hit_serprank      hit_serprank      SMALLINT UNSIGNED DEFAULT NULL,\n\t\t\tCHANGE COLUMN hit_blog_ID       hit_coll_ID       INT(10) UNSIGNED NULL DEFAULT NULL,\n\t\t\tCHANGE COLUMN hit_response_code hit_response_code SMALLINT DEFAULT NULL,\n\t\t\tADD COLUMN hit_agent_ID SMALLINT UNSIGNED NULL DEFAULT NULL AFTER hit_agent_type' );\n\t\t$DB->query( 'ALTER TABLE T_hitlog\n\t\t\tDROP INDEX hit_blog_ID');\n\t\t$DB->query( 'ALTER TABLE T_hitlog\n\t\t\tADD KEY hit_coll_ID ( hit_coll_ID )' );\n\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11208' );\n\t}\n\n\tif( $old_db_version < 11210 )\n\t{ // part 15.b trunk aka third part of \"i6\"\n\n\t\ttask_begin( 'Updating widgets setting...' );\n\t\t// Unset those widgets allow blockcache value which current settings allow blockcache but the caching is always forbidden on runtime;\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t\tSET wi_params = REPLACE( wi_params, \\'s:16:\"allow_blockcache\";i:1\\', \\'s:16:\"allow_blockcache\";i:0\\' )\n\t\t\t\tWHERE wi_params LIKE \\'%s:16:\"allow_blockcache\";i:1%\\' AND (\n\t\t\t\t\twi_code = \"user_tools\" OR wi_code = \"user_login\" OR ( wi_code = \"msg_menu_link\" AND wi_params LIKE \\'%s:9:\"link_type\";s:8:\"messages\"%\\' )\n\t\t\t\t\tOR ( wi_code = \"menu_link\" AND ( wi_params LIKE \\'%s:9:\"link_type\";s:5:\"login\"%\\' OR wi_params LIKE \\'%s:9:\"link_type\";s:8:\"register\"%\\' ) )\n\t\t\t\t\t)' );\n\t\t// Unset 'show_badge' setting in case of msg_menu_link widgets where the link_type is contacts\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t\tSET wi_params = REPLACE( wi_params, \\'s:10:\"show_badge\";i:1\\', \\'s:10:\"show_badge\";i:0\\' )\n\t\t\t\tWHERE wi_code = \"msg_menu_link\" AND wi_params LIKE \\'%s:9:\"link_type\";s:8:\"contacts\"%\\' AND wi_params LIKE \\'%s:10:\"show_badge\";i:1%\\'' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating files hash values...' );\n\t\t$DB->query( 'ALTER TABLE T_files MODIFY COLUMN file_hash VARBINARY(32), MODIFY COLUMN file_path_hash VARBINARY(32)' );\n\t\t$DB->query( 'UPDATE T_files SET file_hash = UNHEX( file_hash ), file_path_hash = UNHEX( file_path_hash )' );\n\t\t$DB->query( 'ALTER TABLE T_files MODIFY COLUMN file_hash BINARY(16) default NULL, MODIFY COLUMN file_path_hash BINARY(16) default NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading goals table...' );\n\t\t$DB->query( 'ALTER TABLE T_track__goal\n\t\t\tADD COLUMN goal_temp_redir_url varchar(255) default NULL AFTER goal_redir_url,\n\t\t\tADD COLUMN goal_temp_start_ts  TIMESTAMP NULL            AFTER goal_temp_redir_url,\n\t\t\tADD COLUMN goal_temp_end_ts    TIMESTAMP NULL            AFTER goal_temp_start_ts,\n\t\t\tADD COLUMN goal_notes          TEXT DEFAULT NULL' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11210' );\n\t}\n\n\tif( $old_db_version < 11220 )\n\t{ // part 16.a trunk aka fourth part of \"i6\"\n\t\ttask_begin( 'Upgrading countries table...' );\n\t\t$DB->query( 'ALTER TABLE T_regional__country\n\t\t\tADD COLUMN ctry_status      enum( \\'trusted\\', \\'suspect\\', \\'blocked\\' ) NULL DEFAULT NULL,\n\t\t\tADD COLUMN ctry_block_count int(10) unsigned DEFAULT 0' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11220' );\n\t}\n\n\tif( $old_db_version < 11240 )\n\t{ // part 16.d trunk aka seventh part of \"i6\"\n\n\t\ttask_begin( 'Updating general settings...' );\n\t\t$DB->query( 'UPDATE T_settings SET\n\t\t\tset_name = CASE\n\t\t\t\tWHEN set_name = \"user_closing_allow\" THEN \"account_close_enabled\"\n\t\t\t\tWHEN set_name = \"user_closing_intro\" THEN \"account_close_intro\"\n\t\t\t\tWHEN set_name = \"user_closing_reasons\" THEN \"account_close_reasons\"\n\t\t\t\tWHEN set_name = \"user_closing_byemsg\" THEN \"account_close_byemsg\"\n\t\t\t\tELSE set_name\n\t\t\tEND' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11240' );\n\t}\n\n\tif( $old_db_version < 11245 )\n\t{ // part 16.e trunk aka eighth part of \"i6\"\n\n\t\ttask_begin( 'Updating Antispam IP Ranges table...' );\n\t\tdb_add_col( 'T_antispam__iprange', 'aipr_contact_email_count', 'int(10) unsigned DEFAULT 0 AFTER aipr_user_count' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating invalid locale settings...' );\n\t\t$current_default_locale = $DB->get_var( 'SELECT set_value FROM T_settings WHERE set_name = \"default_locale\"' );\n\t\tif( empty( $current_default_locale ) )\n\t\t{ // The default locale is not set in the database, use the one from the config file\n\t\t\tglobal $default_locale;\n\t\t\t$current_default_locale = $default_locale;\n\t\t}\n\t\tif( $DB->get_var( 'SELECT loc_enabled FROM T_locales WHERE loc_locale = '.$DB->quote( $current_default_locale ) ) )\n\t\t{ // Update invalid user and collection locales to the default, but only if the default exists and it is enabled\n\t\t\t$DB->query( 'UPDATE T_users\n\t\t\t\tSET user_locale = '.$DB->quote( $current_default_locale ).'\n\t\t\t\tWHERE  user_locale NOT IN ( SELECT loc_locale FROM T_locales WHERE loc_enabled = 1 )'\n\t\t\t);\n\t\t\t$DB->query( 'UPDATE T_blogs\n\t\t\t\tSET blog_locale = '.$DB->quote( $current_default_locale ).'\n\t\t\t\tWHERE  blog_locale NOT IN ( SELECT loc_locale FROM T_locales WHERE loc_enabled = 1 )'\n\t\t\t);\n\t\t}\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11245' );\n\t}\n\n\tif( $old_db_version < 11250 )\n\t{ // part 16.f trunk aka ninth part of \"i6\"\n\n\t\t// Convert item content separators to new format\n\t\tload_funcs('tools/model/_maintenance.funcs.php');\n\t\tdbm_convert_item_content_separators();\n\t\tset_upgrade_checkpoint( '11250' );\n\t}\n\n\tif( $old_db_version < 11255 )\n\t{ // part 16.g trunk aka tenth part of \"i6\"\n\n\t\ttask_begin( 'Updating post types...' );\n\t\t$DB->query( \"INSERT INTO T_items__type ( ptyp_ID, ptyp_name )\n\t\t\tVALUES ( 1400, 'Intro-Front' )\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11255' );\n\t}\n\n\tif( $old_db_version < 11260 )\n\t{ // part 16.h trunk aka eleventh part of \"i6\"\n\n\t\t// This upgrade block updates all field collations from 'ascii_bin' to 'ascii_general_ci' except of slugs table.\n\n\t\ttask_begin( 'Clean up comment emails...' );\n\t\t$DB->query( \"UPDATE T_comments\n\t\t\t\t\t\tSET comment_author_email = CONVERT(comment_author_email USING ascii)\" );\n\t\t$DB->commit();\n\t\ttask_end();\n\n\n\t\ttask_begin( 'Convert the field collations from ascii_bin to ascii_general_ci... <br />' );\n\t\t// fp> why would we need a transaction here?\t$DB->begin();\n\t\ttask_begin( '- Converting skins table...' );\n\t\t$DB->query( \"ALTER TABLE T_skins__skin\n\t\t\tMODIFY skin_type enum('normal','feed','sitemap','mobile','tablet') COLLATE ascii_general_ci NOT NULL default 'normal'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting blogs table...' );\n\t\t$DB->query( \"ALTER TABLE T_blogs\n\t\t\tMODIFY blog_access_type    VARCHAR(10) COLLATE ascii_general_ci NOT NULL DEFAULT 'extrapath',\n\t\t\tMODIFY blog_urlname        VARCHAR(255) COLLATE ascii_general_ci NOT NULL DEFAULT 'urlname',\n\t\t\tMODIFY blog_media_location ENUM( 'default', 'subdir', 'custom', 'none' ) COLLATE ascii_general_ci DEFAULT 'default' NOT NULL,\n\t\t\tMODIFY blog_type           ENUM( 'std', 'photo', 'group', 'forum', 'manual' ) COLLATE ascii_general_ci DEFAULT 'std' NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting blog settings table...' );\n\t\t$DB->query( 'ALTER TABLE T_coll_settings\n\t\t\tMODIFY cset_name VARCHAR( 50 ) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\t\ttask_begin( '- Converting widgets table...' );\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}widget\n\t\t\tMODIFY wi_type ENUM( 'core', 'plugin' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'core',\n\t\t\tMODIFY wi_code VARCHAR(32) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting categories table...' );\n\t\t$DB->query( \"ALTER TABLE T_categories\n\t\t\tMODIFY cat_urlname varchar(255) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting posts table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__item\n\t\t\tMODIFY post_status               enum('published','community','deprecated','protected','private','review','draft','redirected') COLLATE ascii_general_ci NOT NULL default 'published',\n\t\t\tMODIFY post_urltitle             VARCHAR(210) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY post_notifications_status ENUM('noreq','todo','started','finished') COLLATE ascii_general_ci NOT NULL DEFAULT 'noreq',\n\t\t\tMODIFY post_comment_status       ENUM('disabled', 'open', 'closed') COLLATE ascii_general_ci NOT NULL DEFAULT 'open',\n\t\t\tMODIFY post_renderers            TEXT COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting comments table...' );\n\t\t$DB->query( \"ALTER TABLE T_comments\n\t\t\tMODIFY comment_type         enum('comment','linkback','trackback','pingback') COLLATE ascii_general_ci NOT NULL default 'comment',\n\t\t\tMODIFY comment_status       ENUM('published','community','deprecated','protected','private','review','draft','trash') COLLATE ascii_general_ci DEFAULT 'published' NOT NULL,\n\t\t\tMODIFY comment_author_email varchar(255) COLLATE ascii_general_ci NULL,\n\t\t\tMODIFY comment_author_IP    varchar(23) COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY comment_renderers    TEXT COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY comment_secret       CHAR(32) COLLATE ascii_general_ci NULL default NULL,\n\t\t\tMODIFY comment_notif_status ENUM('noreq','todo','started','finished') COLLATE ascii_general_ci NOT NULL DEFAULT 'noreq' COMMENT 'Have notifications been sent for this comment? How far are we in the process?'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post prerendered contents table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__prerendering\n\t\t\tMODIFY itpr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY itpr_renderers TEXT COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting comment prerendered contents table...' );\n\t\t$DB->query( \"ALTER TABLE T_comments__prerendering\n\t\t\tMODIFY cmpr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY cmpr_renderers TEXT COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post versions table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__version\n\t\t\tMODIFY iver_status ENUM('published','community','deprecated','protected','private','review','draft','redirected') COLLATE ascii_general_ci NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__item_settings\n\t\t\tMODIFY iset_name varchar( 50 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user permissions table...' );\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms\n\t\t\tMODIFY bloguser_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloguser_perm_edit         ENUM('no','own','lt','le','all','redirected') COLLATE ascii_general_ci NOT NULL default 'no',\n\t\t\tMODIFY bloguser_perm_cmtstatuses  set('review','draft','private','protected','deprecated','community','published') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloguser_perm_edit_cmt     ENUM('no','own','anon','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting group permissions table...' );\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms\n\t\t\tMODIFY bloggroup_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloggroup_perm_edit         ENUM('no','own','lt','le','all','redirected') COLLATE ascii_general_ci NOT NULL default 'no',\n\t\t\tMODIFY bloggroup_perm_cmtstatuses  set('review','draft','private','protected','deprecated','community','published') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloggroup_perm_edit_cmt     ENUM('no','own','anon','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting links table...' );\n\t\t$DB->query( \"ALTER TABLE T_links\n\t\t\tMODIFY link_position varchar(10) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting files table...' );\n\t\t$DB->query( \"ALTER TABLE T_files\n\t\t\tMODIFY file_root_type enum('absolute','user','collection','shared','skins','import') COLLATE ascii_general_ci NOT NULL DEFAULT 'absolute'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting file types table...' );\n\t\t$DB->query( \"ALTER TABLE T_filetypes\n\t\t\tMODIFY ftyp_extensions varchar(30) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ftyp_viewtype   varchar(10) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ftyp_allowed    enum('any','registered','admin') COLLATE ascii_general_ci NOT NULL default 'admin'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting sessions table...' );\n\t\t$DB->query( \"ALTER TABLE T_sessions\n\t\t\tMODIFY sess_key       CHAR(32) COLLATE ascii_general_ci NULL,\n\t\t\tMODIFY sess_ipaddress VARCHAR(39) COLLATE ascii_general_ci NOT NULL DEFAULT '',\n\t\t\tMODIFY sess_device    VARCHAR(8) COLLATE ascii_general_ci NOT NULL DEFAULT ''\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting domains table...' );\n\t\t$DB->query( \"ALTER TABLE T_basedomains\n\t\t\tMODIFY dom_status ENUM('unknown','trusted','suspect','blocked') COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown',\n\t\t\tMODIFY dom_type   ENUM('unknown','normal','searcheng','aggregator','email') COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting logs table...' );\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\tMODIFY hit_ctrl         VARCHAR(30) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY hit_type         ENUM('standard','rss','admin','ajax', 'service') COLLATE ascii_general_ci DEFAULT 'standard' NOT NULL,\n\t\t\tMODIFY hit_referer_type ENUM('search','special','spam','referer','direct','self') COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY hit_remote_addr  VARCHAR(40) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY hit_agent_type   ENUM('robot','browser','unknown') COLLATE ascii_general_ci DEFAULT 'unknown' NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting goal categories table...' );\n\t\t$DB->query( \"ALTER TABLE T_track__goalcat\n\t\t\tMODIFY gcat_color  char(7) COLLATE ascii_general_ci default NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting groups table...' );\n\t\t$DB->query( \"ALTER TABLE T_groups\n\t\t\tMODIFY grp_perm_blogs                  enum('user','viewall','editall') COLLATE ascii_general_ci NOT NULL default 'user',\n\t\t\tMODIFY grp_perm_xhtmlvalidation        VARCHAR(10) COLLATE ascii_general_ci NOT NULL default 'always',\n\t\t\tMODIFY grp_perm_xhtmlvalidation_xmlrpc VARCHAR(10) COLLATE ascii_general_ci NOT NULL default 'always',\n\t\t\tMODIFY grp_perm_stats                  enum('none','user','view','edit') COLLATE ascii_general_ci NOT NULL default 'none'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting group settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_groups__groupsettings\n\t\t\tMODIFY gset_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_settings\n\t\t\tMODIFY set_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting cache table...' );\n\t\t$DB->query( \"ALTER TABLE T_global__cache\n\t\t\tMODIFY cach_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting users table...' );\n\t\t$DB->query( \"ALTER TABLE T_users\n\t\t\tMODIFY user_email           varchar(255) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY user_status          enum( 'activated', 'autoactivated', 'closed', 'deactivated', 'emailchanged', 'failedactivation', 'new' ) COLLATE ascii_general_ci NOT NULL default 'new',\n\t\t\tMODIFY user_unsubscribe_key CHAR(32) COLLATE ascii_general_ci NOT NULL default '' COMMENT 'A specific key, it is used when a user wants to unsubscribe from a post comments without signing in',\n\t\t\tMODIFY user_gender          char(1) COLLATE ascii_general_ci NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user fields table...' );\n\t\t$DB->query( \"ALTER TABLE T_users__fielddefs\n\t\t\tMODIFY ufdf_type       char(8) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ufdf_required   enum('hidden','optional','recommended','require') COLLATE ascii_general_ci NOT NULL default 'optional',\n\t\t\tMODIFY ufdf_duplicated enum('forbidden','allowed','list') COLLATE ascii_general_ci NOT NULL default 'allowed'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user reports table...' );\n\t\t$DB->query( \"ALTER TABLE T_users__reports\n\t\t\tMODIFY urep_status enum( 'fake', 'guidelines', 'harass', 'spam', 'other' ) COLLATE ascii_general_ci\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting locales table...' );\n\t\t$DB->query( \"ALTER TABLE T_locales\n\t\t\tMODIFY loc_charset varchar(15) COLLATE ascii_general_ci NOT NULL default 'iso-8859-1',\n\t\t\tMODIFY loc_datefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'y-m-d',\n\t\t\tMODIFY loc_timefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'H:i:s'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting antispam table...' );\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}antispam\n\t\t\tMODIFY aspm_source enum( 'local','reported','central' ) COLLATE ascii_general_ci NOT NULL default 'reported'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting IP ranges table...' );\n\t\t$DB->query( \"ALTER TABLE T_antispam__iprange\n\t\t\tMODIFY aipr_status enum( 'trusted', 'suspect', 'blocked' ) COLLATE ascii_general_ci NULL DEFAULT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_users__usersettings\n\t\t\tMODIFY uset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugins table...' );\n\t\t$DB->query( \"ALTER TABLE T_plugins\n\t\t\tMODIFY plug_classname VARCHAR(40) COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY plug_code      VARCHAR(32) COLLATE ascii_general_ci NULL,\n\t\t\tMODIFY plug_version   VARCHAR(42) COLLATE ascii_general_ci NOT NULL default '0',\n\t\t\tMODIFY plug_status    ENUM( 'enabled', 'disabled', 'needs_config', 'broken' ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugin settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_pluginsettings\n\t\t\tMODIFY pset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugin user settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_pluginusersettings\n\t\t\tMODIFY puset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugin events table...' );\n\t\t$DB->query( \"ALTER TABLE T_pluginevents\n\t\t\tMODIFY pevt_event VARCHAR(40) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting cron logs table...' );\n\t\t$DB->query( \"ALTER TABLE T_cron__log\n\t\t\tMODIFY clog_status enum('started','finished','error','timeout') COLLATE ascii_general_ci not null default 'started'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting countries table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__country\n\t\t\tMODIFY ctry_code   char(2) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ctry_status enum( 'trusted', 'suspect', 'blocked' ) COLLATE ascii_general_ci NULL DEFAULT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting regions table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__region\n\t\t\tMODIFY rgn_code char(6) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting subregions table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__subregion\n\t\t\tMODIFY subrg_code char(6) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting cities table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__city\n\t\t\tMODIFY city_postcode char(12) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting currencies table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__currency\n\t\t\tMODIFY curr_code char(3) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting email logs table...' );\n\t\t$DB->query( \"ALTER TABLE T_email__log\n\t\t\tMODIFY emlog_to     VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY emlog_result ENUM( 'ok', 'error', 'blocked' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'ok'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting email returns table...' );\n\t\t$DB->query( \"ALTER TABLE T_email__returns\n\t\t\tMODIFY emret_address   VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY emret_errtype   CHAR(1) COLLATE ascii_general_ci NOT NULL DEFAULT 'U'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting email addresses table...' );\n\t\t$DB->query( \"ALTER TABLE T_email__address\n\t\t\tMODIFY emadr_address VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY emadr_status  ENUM( 'unknown', 'redemption', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown'\" );\n\t\ttask_end();\n\t\t//\t$DB->commit();\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11260' );\n\t}\n\n\tif( $old_db_version < 11270 )\n\t{ // part 16.i trunk aka 12th part of \"i6\"\n\n\t\t// IPv4 mapped IPv6 addresses maximum length is 45 chars: ex. ABCD:ABCD:ABCD:ABCD:ABCD:ABCD:192.168.158.190\n\t\ttask_begin( 'Upgrading comments table...' );\n\t\t$DB->query( \"ALTER TABLE T_comments\n\t\t\tMODIFY comment_author_IP varchar(45) COLLATE ascii_general_ci NOT NULL default ''\" );\n\t\ttask_end();\n\t\ttask_begin( 'Upgrading sessions table...' );\n\t\t$DB->query( \"ALTER TABLE T_sessions\n\t\t\tMODIFY sess_ipaddress VARCHAR(45) COLLATE ascii_general_ci NOT NULL DEFAULT ''\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11270' );\n\t}\n\n\tif( $old_db_version < 11280 )\n\t{ // part 16.j trunk aka 12th part of \"i6\"\n\n\t\ttask_begin( 'Upgrading hit logs table...' );\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\tMODIFY hit_remote_addr VARCHAR(45) COLLATE ascii_general_ci DEFAULT NULL\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading blogs table...' );\n\t\tdb_drop_col( 'T_blogs', 'blog_UID' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11280' );\n\t}\n\n\tif( $old_db_version < 11285 )\n\t{ // part 16.k trunk aka 13th part of \"i6\"\n\n\t\ttask_begin( 'Updating plugins table...' );\n\t\t$DB->query( 'UPDATE T_plugins SET\n\t\t\tplug_code = CASE\n\t\t\t\tWHEN plug_classname = \"generic_ping_plugin\"         THEN \"b2evGPing\"\n\t\t\t\tWHEN plug_classname = \"basic_antispam_plugin\"       THEN \"b2evBAspm\"\n\t\t\t\tWHEN plug_classname = \"flowplayer_plugin\"           THEN \"b2evFlwP\"\n\t\t\t\tWHEN plug_classname = \"html5_mediaelementjs_plugin\" THEN \"b2evH5MP\"\n\t\t\t\tWHEN plug_classname = \"html5_videojs_plugin\"        THEN \"b2evH5VJSP\"\n\t\t\t\tELSE plug_code\n\t\t\tEND' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11285' );\n\t}\n\n\tif( $old_db_version < 11286 )\n\t{\t// part 16.l trunk aka 14th part of \"i6\"\n\n\t\ttask_begin( 'Upgrade timestamp fields... ' );\n\t\t$DB->query( 'ALTER TABLE T_email__log\n\t\t\tMODIFY emlog_timestamp TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_email__returns\n\t\t\tMODIFY emret_timestamp TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_items__prerendering\n\t\t\tMODIFY itpr_datemodified TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_comments__prerendering\n\t\t\tMODIFY cmpr_datemodified TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_users__reports\n\t\t\tMODIFY urep_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_items__version\n\t\t\tMODIFY iver_edit_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__thread\n\t\t\tMODIFY thrd_datemodified datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__message\n\t\t\tMODIFY msg_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__contact\n\t\t\tMODIFY mct_last_contact_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11286' );\n\t}\n\n\tif( $old_db_version < 11300 )\n\t{ // part 17 trunk aka \"i7\"\n\n\t\ttask_begin( 'Upgrading locales table...' );\n\t\tdb_add_col( 'T_locales', 'loc_shorttimefmt', 'varchar(20) COLLATE ascii_general_ci NOT NULL default \"H:i\" AFTER loc_timefmt' );\n\t\ttask_end();\n\t\ttask_begin( 'Creating message prerendering cache table... ' );\n\t\tdb_create_table( 'T_messaging__prerendering', '\n\t\t\tmspr_msg_ID              INT(11) UNSIGNED NOT NULL,\n\t\t\tmspr_format              ENUM(\"htmlbody\",\"entityencoded\",\"xml\",\"text\") COLLATE ascii_general_ci NOT NULL,\n\t\t\tmspr_renderers           TEXT NOT NULL,\n\t\t\tmspr_content_prerendered MEDIUMTEXT NULL,\n\t\t\tmspr_datemodified        TIMESTAMP NOT NULL,\n\t\t\tPRIMARY KEY (mspr_msg_ID, mspr_format)' );\n\t\tdb_add_col( 'T_messaging__message', 'msg_renderers', 'TEXT NOT NULL' );\n\t\t$DB->query( 'UPDATE T_messaging__message SET msg_renderers = \"default\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading categories table...' );\n\t\tdb_add_col( 'T_categories', 'cat_last_touched_ts', \"TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00'\" );\n\t\t$DB->query( 'UPDATE T_categories SET cat_last_touched_ts = (\n\t\t\tSELECT post_last_touched_ts\n\t\t\t  FROM T_items__item\n\t\t\t       INNER JOIN T_postcats ON postcat_post_ID = post_ID\n\t\t\t WHERE postcat_cat_ID = cat_ID\n\t\t\t ORDER BY post_last_touched_ts DESC\n\t\t\t LIMIT 1 )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for User post read status... ' );\n\t\tdb_create_table( 'T_users__postreadstatus', '\n\t\t\tuprs_user_ID int(11) unsigned NOT NULL,\n\t\t\tuprs_post_ID int(11) unsigned NOT NULL,\n\t\t\tuprs_read_post_ts TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\tuprs_read_comment_ts TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\tPRIMARY KEY ( uprs_user_ID, uprs_post_ID )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Create table for System log... ' );\n\t\tdb_create_table( 'T_syslog', \"\n\t\t\tslg_ID        INT NOT NULL AUTO_INCREMENT,\n\t\t\tslg_timestamp TIMESTAMP NOT NULL,\n\t\t\tslg_origin    ENUM('core', 'plugin') COLLATE ascii_general_ci,\n\t\t\tslg_origin_ID INT UNSIGNED NULL,\n\t\t\tslg_object    ENUM('comment', 'item', 'user') COLLATE ascii_general_ci,\n\t\t\tslg_object_ID INT UNSIGNED NOT NULL,\n\t\t\tslg_message   VARCHAR(255) NOT NULL,\n\t\t\tPRIMARY KEY   (slg_ID),\n\t\t\tINDEX         slg_object (slg_object, slg_object_ID)\",\n\t\t\t'ENGINE = myisam' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11300' );\n\t}\n\n\tif( $old_db_version < 11310 )\n\t{ // part 18 trunk aka second part of \"i7\"\n\n\t\ttask_begin( 'Upgrading cron tasks table...' );\n\t\tload_funcs( 'cron/_cron.funcs.php' );\n\t\t$DB->begin();\n\t\t$DB->query( 'ALTER TABLE T_cron__task\n\t\t\tCHANGE COLUMN ctsk_controller ctsk_key varchar(50) COLLATE ascii_general_ci NOT NULL AFTER ctsk_repeat_after,\n\t\t\tCHANGE COLUMN ctsk_name ctsk_name varchar(255) null COMMENT \"Specific name of this task. This value is set only if this job name was modified by an admin user\"' );\n\t\t// Update keys from controllers\n\t\t// Important: Cron job sql query result must be converted to ascii charset since the ctsk_key is already ascii( ascii_bin collation )\n\t\t$DB->query( 'UPDATE T_cron__task\n\t\t\tINNER JOIN ( '.cron_job_sql_query( 'key,ctrl' ).' ) AS temp\n\t\t\t       ON ctsk_key = CONVERT( temp.task_ctrl USING ascii )\n\t\t\tSET ctsk_key = temp.task_key' );\n\t\t// Reset names to NULL if its are default\n\t\t$DB->query( $sql = 'UPDATE T_cron__task\n\t\t\tINNER JOIN ( '.cron_job_sql_query().' ) AS temp\n\t\t\t        ON ctsk_key = CONVERT( temp.task_key USING ascii ) AND ctsk_name = CONVERT( temp.task_name USING '.$DB->connection_charset.' )\n\t\t\tSET ctsk_name = NULL' );\n\t\t$DB->commit();\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table system log... ' );\n\t\t$DB->query( 'ALTER TABLE T_syslog\n\t\t\tCHANGE COLUMN slg_object slg_object ENUM(\\'comment\\', \\'item\\', \\'user\\', \\'file\\') COLLATE ascii_general_ci,\n\t\t\tCHANGE COLUMN slg_object_ID slg_object_ID INT UNSIGNED NULL,\n\t\t\tADD    COLUMN slg_user_ID INT UNSIGNED NULL AFTER slg_timestamp,\n\t\t\tADD    COLUMN slg_type ENUM(\\'info\\', \\'warning\\', \\'error\\', \\'critical_error\\') COLLATE ascii_general_ci NOT NULL DEFAULT \\'info\\' AFTER slg_user_ID' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade groups table... ' );\n\t\tdb_add_col( 'T_groups', 'grp_level', 'int unsigned DEFAULT 0 NOT NULL AFTER grp_name' );\n\t\t$default_groups_levels = array(\n\t\t\t\t'Administrators' => 10,\n\t\t\t\t'Moderators' => 8,\n\t\t\t\t'Trusted Users' => 6,\n\t\t\t\t'Normal Users' => 4,\n\t\t\t\t'Misbehaving/Suspect Users' => 2,\n\t\t\t\t'Spammers/Restricted Users' => 1\n\t\t\t);\n\t\t// Build sql query to update group level depending on name\n\t\t$group_level_query = 'SELECT group_name, group_level FROM (';\n\t\t$first_task = true;\n\t\tforeach( $default_groups_levels as $def_group_name => $def_group_level )\n\t\t{\n\t\t\tif( $first_task )\n\t\t\t{\n\t\t\t\t$group_level_query .= 'SELECT '.$DB->quote( $def_group_name ).' AS group_name, '.$DB->quote( $def_group_level ).' AS group_level';\n\t\t\t\t$first_task = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$group_level_query .= ' UNION SELECT '.$DB->quote( $def_group_name ).', '.$DB->quote( $def_group_level );\n\t\t\t}\n\t\t}\n\t\t$group_level_query .= ') AS inner_temp';\n\t\t// Set default levels depending on name\n\t\t$DB->query( 'UPDATE T_groups\n\t\t\tINNER JOIN ( '.$group_level_query.' ) AS temp\n\t\t\t       ON grp_name = CONVERT( temp.group_name USING '.$DB->connection_charset.' )\n\t\t\t  SET grp_level = temp.group_level' );\n\t\t// Set default '4' level for all other groups\n\t\t$DB->query( 'UPDATE T_groups\n\t\t\t  SET grp_level = 4\n\t\t\tWHERE grp_level = 0' );\n\t\t// Set default user permissions for Moderators group\n\t\t$DB->query( 'UPDATE T_groups__groupsettings\n\t\t\t  SET gset_value = \"moderate\"\n\t\t\tWHERE gset_name = \"perm_users\"\n\t\t\t  AND gset_grp_ID = (SELECT grp_ID FROM T_groups WHERE grp_name = \"Moderators\")' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating general settings...' );\n\t\t$DB->query( 'UPDATE T_settings\n\t\t\t\tSET set_value = '.$DB->quote( 'yes' ).'\n\t\t\tWHERE set_name = '.$DB->quote( 'newusers_canregister' ).'\n\t\t\t\tAND set_value = '.$DB->quote( '1' ) );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for User invitation codes... ' );\n\t\tdb_create_table( 'T_users__invitation_code', '\n\t\t\tivc_ID        int(11) unsigned NOT NULL auto_increment,\n\t\t\tivc_code      varchar(32) COLLATE ascii_general_ci NOT NULL,\n\t\t\tivc_expire_ts TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\',\n\t\t\tivc_source    varchar(30) NULL,\n\t\t\tivc_grp_ID    int(4) NOT NULL,\n\t\t\tPRIMARY KEY ( ivc_ID ),\n\t\t\tUNIQUE ivc_code ( ivc_code )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for User organizations... ' );\n\t\tdb_create_table( 'T_users__organization', '\n\t\t\torg_ID   INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\torg_name VARCHAR(255) NOT NULL,\n\t\t\torg_url  VARCHAR(2000) NULL,\n\t\t\tPRIMARY KEY ( org_ID ),\n\t\t\tUNIQUE org_name ( org_name )' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for relations users with organizations... ' );\n\t\tdb_create_table( 'T_users__user_org', '\n\t\t\tuorg_user_ID  INT(11) UNSIGNED NOT NULL,\n\t\t\tuorg_org_ID   INT(11) UNSIGNED NOT NULL,\n\t\t\tuorg_accepted TINYINT(1) DEFAULT 0,\n\t\t\tPRIMARY KEY ( uorg_user_ID, uorg_org_ID )' );\n\t\ttask_end();\n\n\t\t// Rename item settings:\n\t\t//   \"post_custom_headers\" to \"metakeywords\"\n\t\t//   \"post_metadesc\" to \"metadesc\"\n\t\t//   \"post_expiry_delay\" to \"comment_expiry_delay\"\n\t\ttask_begin( 'Upgrading Item Settings...' );\n\t\t$DB->query( 'UPDATE T_items__item_settings\n\t\t\t\t  SET iset_name = \"metakeywords\"\n\t\t\t\tWHERE iset_name = \"post_custom_headers\"' );\n\t\t$DB->query( 'UPDATE T_items__item_settings\n\t\t\t\t  SET iset_name = \"metadesc\"\n\t\t\t\tWHERE iset_name = \"post_metadesc\"' );\n\t\t$DB->query( 'UPDATE T_items__item_settings\n\t\t\t\t  SET iset_name = \"comment_expiry_delay\"\n\t\t\t\tWHERE iset_name = \"post_expiry_delay\"' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table files... ' );\n\t\tdb_add_col( 'T_files', 'file_type', \"enum('image', 'audio', 'other') COLLATE ascii_general_ci NULL DEFAULT NULL AFTER file_ID\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table posts... ' );\n\t\t$DB->query( 'ALTER TABLE T_items__item\n\t\t\tCHANGE post_title     post_title     VARCHAR(255) NOT NULL,\n\t\t\tCHANGE post_renderers post_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table post prerendering cache... ' );\n\t\t$DB->query( 'ALTER TABLE T_items__prerendering\n\t\t\tCHANGE itpr_renderers itpr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table post versions... ' );\n\t\t$DB->query( 'ALTER TABLE T_items__version\n\t\t\tCHANGE iver_title iver_title VARCHAR(255) NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table comments... ' );\n\t\t$DB->query( 'ALTER TABLE T_comments\n\t\t\tCHANGE comment_renderers comment_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table comment prerendering cache... ' );\n\t\t$DB->query( 'ALTER TABLE T_comments__prerendering\n\t\t\tCHANGE cmpr_renderers cmpr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table messages... ' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__message\n\t\t\tCHANGE msg_renderers msg_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table message prerendering cache... ' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__prerendering\n\t\t\tCHANGE mspr_renderers mspr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table user field definitions... ' );\n\t\t$DB->query( 'ALTER TABLE T_users__fielddefs\n\t\t\tCHANGE ufdf_options ufdf_options VARCHAR(255) NULL DEFAULT NULL' );\n\t\t// Change emtpy ufdf_options to NULL, since it must/may be defined only in case of the list ufdf_type\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\tSET ufdf_options = NULL\n\t\t\tWHERE ufdf_options = \"\" AND ufdf_type != \"list\"');\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table cron tasks... ' );\n\t\t$DB->query( 'ALTER TABLE T_cron__task\n\t\t\tCHANGE ctsk_params ctsk_params varchar(255)' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading users table...' );\n\t\tdb_add_col( 'T_users', 'user_salt', 'CHAR(8) NOT NULL default \"\" AFTER user_pass' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating users pass storage...' );\n\t\t$DB->query( 'ALTER TABLE T_users MODIFY COLUMN user_pass VARBINARY(32)' );\n\t\t$DB->query( 'UPDATE T_users SET user_pass = UNHEX( user_pass )' );\n\t\t$DB->query( 'ALTER TABLE T_users MODIFY COLUMN user_pass BINARY(16) NOT NULL' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11310' );\n\t}\n\n\tif( $old_db_version < 11320 )\n\t{ // part 18.a trunk aka third part of \"i7\"\n\n\t\ttask_begin( 'Update locales to utf-8 charset...' );\n\t\tdb_drop_col( 'T_locales', 'loc_charset' );\n\t\t$DB->query( 'UPDATE T_locales\n\t\t\tSET loc_name = REPLACE( loc_name, \"latin1\", \"utf8\" )\n\t\t\tWHERE loc_locale IN ( \"en-US\", \"en-AU\", \"en-CA\", \"en-GB\", \"en-IL\", \"en-NZ\", \"en-SG\" )' );\n\t\t$DB->query( 'UPDATE T_users SET user_locale = \"en-US\" WHERE user_locale = \"en-US-utf8\"' );\n\t\t$DB->query( 'UPDATE T_blogs SET blog_locale = \"en-US\" WHERE blog_locale = \"en-US-utf8\"' );\n\t\t$DB->query( 'UPDATE T_items__item SET post_locale = \"en-US\" WHERE post_locale = \"en-US-utf8\"' );\n\t\t$DB->query( 'UPDATE T_settings SET set_value = \"en-US\" WHERE set_name = \"default_locale\" AND set_value = \"en-US-utf8\"' );\n\t\t// Check if the 'en-US-utf8' locale is enabled\n\t\t$en_us_utf8_enabled = $DB->get_var( 'SELECT loc_enabled FROM T_locales WHERE loc_locale = \"en-US-utf8\"' );\n\t\tif( $en_us_utf8_enabled !== NULL )\n\t\t{ // The 'en-US-utf8' was enabled we must enable the 'en-US' even if it was not enabled before because we merged the two locales into one\n\t\t\t$en_us_enabled = $DB->get_var( 'SELECT loc_enabled FROM T_locales WHERE loc_locale = \"en-US\"' );\n\t\t\tif( $en_us_enabled === NULL )\n\t\t\t{ // Update \"en-US-utf8\" to \"en-US\"\n\t\t\t\t$DB->query( 'UPDATE T_locales SET loc_locale = \"en-US\" WHERE loc_locale = \"en-US-utf8\"' );\n\t\t\t}\n\t\t\telseif( $en_us_utf8_enabled && ( ! $en_us_enabled ) )\n\t\t\t{ // Enable the \"en-US\" locale because it was not enabled but the \"en-US-utf8\" was\n\t\t\t\t$DB->query( 'UPDATE T_locales SET loc_enabled = 1 WHERE loc_locale = \"en-US\"' );\n\t\t\t}\n\n\t\t\tif( $en_us_enabled !== NULL )\n\t\t\t{ // Remove the \"en-US-utf8\" locale if the \"en_US\" locale is already in the database\n\t\t\t\t$DB->query( 'DELETE FROM T_locales WHERE loc_locale = \"en-US-utf8\"' );\n\t\t\t}\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table files... ' );\n\t\tdb_add_col( 'T_files', 'file_can_be_main_profile', 'TINYINT(1) NOT NULL DEFAULT 1' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Add new video file types... ' );\n\t\t$video_types = array(\n\t\t\t\t'webm' => \"( 'webm', 'WebM video file', 'video/webm', 'file_video', 'browser', 'registered' )\",\n\t\t\t\t'ogv'  => \"( 'ogv', 'Ogg video file', 'video/ogg', 'file_video', 'browser', 'registered' )\",\n\t\t\t\t'm3u8' => \"( 'm3u8', 'M3U8 video file', 'application/x-mpegurl', 'file_video', 'browser', 'registered' )\"\n\t\t\t);\n\t\t$SQL = new SQL();\n\t\t$SQL->SELECT( 'ftyp_extensions' );\n\t\t$SQL->FROM( 'T_filetypes' );\n\t\t$SQL->WHERE( 'ftyp_extensions LIKE \"%'.implode( '%\" OR ftyp_extensions LIKE \"%', array_keys( $video_types ) ).'%\"' );\n\t\t$existing_video_types = $DB->get_col( $SQL->get() );\n\t\tif( ! empty( $existing_video_types ) )\n\t\t{ // Some video types arleady exist in DB, Exclude them from inserting\n\t\t\tforeach( $existing_video_types as $vtype )\n\t\t\t{\n\t\t\t\tunset( $video_types[ $vtype ] );\n\t\t\t}\n\t\t}\n\t\tif( count( $video_types ) )\n\t\t{ // Insert new video file types\n\t\t\t$DB->query( \"INSERT INTO T_filetypes\n\t\t\t\t( ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed )\n\t\t\t\tVALUES \".implode( ', ', $video_types ) );\n\t\t}\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11320' );\n\t}\n\n\tif( $old_db_version < 11330 )\n\t{ // part 18.b trunk aka 4th part of \"i7\"\n\n\t\ttask_begin( 'Upgrade table blogs... ' );\n\t\t$DB->query( 'UPDATE T_blogs\n\t\t\t  SET blog_in_bloglist = \"1\"\n\t\t\tWHERE blog_in_bloglist > 0' );\n\t\t$DB->query( 'ALTER TABLE T_blogs\n\t\t\tCHANGE blog_in_bloglist blog_in_bloglist ENUM( \"public\", \"logged\", \"member\", \"never\" ) COLLATE ascii_general_ci DEFAULT \"public\" NOT NULL' );\n\t\t$DB->query( 'UPDATE T_blogs\n\t\t\t  SET blog_in_bloglist = \"never\"\n\t\t\tWHERE blog_in_bloglist = \"\"' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11330' );\n\t}\n\n\tif( $old_db_version < 11340 )\n\t{ // part 18.c trunk aka 5th part of \"i7\"\n\n\t\ttask_begin( 'Upgrading blogs table...' );\n\t\t$DB->query( \"ALTER TABLE T_blogs\n\t\t\tMODIFY blog_type ENUM( 'main', 'std', 'photo', 'group', 'forum', 'manual' ) COLLATE ascii_general_ci DEFAULT 'std' NOT NULL\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11340' );\n\t}\n\n\tif( $old_db_version < 11350 )\n\t{ // part 18.d trunk aka 6th part of \"i7\"\n\n\t\ttask_begin( 'Update category ordering...' );\n\t\t$DB->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\tSELECT blog_ID, \"category_ordering\", IFNULL( set_value, \"alpha\" )\n\t\t\t\tFROM T_blogs LEFT JOIN T_settings ON set_name = \"chapter_ordering\"' );\n\t\t$DB->query( 'DELETE FROM T_settings WHERE set_name = \"chapter_ordering\"');\n\t\tdb_add_col( 'T_categories', 'cat_subcat_ordering', \"enum('parent', 'alpha', 'manual') COLLATE ascii_general_ci NULL DEFAULT NULL AFTER cat_order\" );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11350' );\n\t}\n\n\tif( $old_db_version < 11360 )\n\t{ // part 18.e trunk aka 7th part of \"i7\"\n\n\t\ttask_begin( 'Upgrade table posts... ' );\n\t\t$DB->query( 'ALTER TABLE T_items__item\n            CHANGE post_ptyp_ID post_ityp_ID int(10) unsigned NOT NULL DEFAULT 1');\n        $DB->query( 'ALTER TABLE T_items__item\n            DROP INDEX post_ptyp_ID');\n\t\t$DB->query( 'ALTER TABLE T_items__item\n            ADD INDEX post_ityp_ID ( post_ityp_ID )');\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table post types... ' );\n\t\t$DB->query( \"ALTER TABLE T_items__type\n\t\t\tCHANGE ptyp_ID   ityp_ID   INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\tCHANGE ptyp_name ityp_name VARCHAR(30) NOT NULL,\n\t\t\tADD ityp_description       TEXT NULL DEFAULT NULL,\n\t\t\tADD ityp_backoffice_tab    VARCHAR(30) NULL DEFAULT NULL,\n\t\t\tADD ityp_template_name     VARCHAR(40) NULL DEFAULT NULL,\n\t\t\tADD ityp_use_title         ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'required',\n\t\t\tADD ityp_use_url           ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tADD ityp_use_text          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tADD ityp_allow_html        TINYINT DEFAULT 1,\n\t\t\tADD ityp_allow_attachments TINYINT DEFAULT 1,\n\t\t\tADD ityp_use_excerpt       ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tADD ityp_use_title_tag     ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tADD ityp_use_meta_desc     ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tADD ityp_use_meta_keywds   ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tADD ityp_use_tags          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tADD ityp_allow_featured    TINYINT DEFAULT 1,\n\t\t\tADD ityp_use_country       ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tADD ityp_use_region        ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tADD ityp_use_sub_region    ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tADD ityp_use_city          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tADD ityp_use_coordinates   ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tADD ityp_use_custom_fields TINYINT DEFAULT 1,\n\t\t\tADD ityp_use_comments      TINYINT DEFAULT 1,\n\t\t\tADD ityp_allow_closing_comments   TINYINT DEFAULT 1,\n\t\t\tADD ityp_allow_disabling_comments TINYINT DEFAULT 0,\n\t\t\tADD ityp_use_comment_expiration   ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional'\" );\n\t\t$DB->query( 'UPDATE T_items__type SET\n\t\t\tityp_backoffice_tab = CASE\n\t\t\t\tWHEN ityp_ID = 1    THEN \"Posts\"\n\t\t\t\tWHEN ityp_ID = 1000 THEN \"Pages\"\n\t\t\t\tWHEN ityp_ID >= 1400 AND ityp_ID <= 1600 THEN \"Intros\"\n\t\t\t\tWHEN ityp_ID = 2000 THEN \"Podcasts\"\n\t\t\t\tWHEN ityp_ID = 3000 THEN \"Sidebar links\"\n\t\t\t\tWHEN ityp_ID = 4000 THEN \"Advertisement\"\n\t\t\t\tWHEN ityp_ID = 5000 THEN NULL\n\t\t\t\tELSE \"Posts\"\n\t\t\tEND,\n\t\t\tityp_template_name = CASE\n\t\t\t\tWHEN ityp_ID = 1 OR ityp_ID = 2000 THEN \"single\"\n\t\t\t\tWHEN ityp_ID = 1000 THEN \"page\"\n\t\t\t\tELSE NULL\n\t\t\tEND' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Adding new post types...' );\n\t\t$DB->begin();\n\t\t$new_item_types = array(\n\t\t\t\t/* 'blog type' => array( 'min post type ID', 'title for new type' ) */\n\t\t\t\t'manual' => array( 'type_ID' => 100, 'title' => 'Manual Page' ),\n\t\t\t\t'forum'  => array( 'type_ID' => 200, 'title' => 'Forum Topic' ),\n\t\t\t);\n\t\t$item_types_insert_data = array();\n\t\tforeach( $new_item_types as $blog_type => $item_type_data )\n\t\t{\n\t\t\t$item_type_ID = $new_item_types[ $blog_type ]['type_ID'];\n\t\t\twhile( $item_type_ID !== NULL )\n\t\t\t{ // Find first free post type ID starting with 100\n\t\t\t\t$free_item_type_ID = $item_type_ID;\n\t\t\t\t$item_type_ID = $DB->get_var( 'SELECT ityp_ID FROM T_items__type WHERE ityp_ID = '.$DB->quote( $item_type_ID ) );\n\t\t\t\tif( $item_type_ID === NULL )\n\t\t\t\t{ // Use this free ID for new type\n\t\t\t\t\t$item_types_insert_data[] = '( '.$free_item_type_ID.', '.$DB->quote( $new_item_types[ $blog_type ]['title'] ).', \"Posts\", \"single\", 0 )';\n\t\t\t\t\t$new_item_types[ $blog_type ]['new_type_ID'] = $free_item_type_ID;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$item_type_ID++;\n\t\t\t}\n\t\t}\n\t\tif( count( $item_types_insert_data ) )\n\t\t{\n\t\t\t// Insert new post types\n\t\t\t$DB->query( 'INSERT INTO T_items__type ( ityp_ID, ityp_name, ityp_backoffice_tab, ityp_template_name, ityp_allow_html )\n\t\t\t\t\t\tVALUES '.implode( ', ', $item_types_insert_data ) );\n\t\t\t// Update types of all post with \"Post\" type to new created (only for blogs with type 'forum' and 'manual')\n\t\t\tforeach( $new_item_types as $blog_type => $item_type_data )\n\t\t\t{\n\t\t\t\t$DB->query( 'UPDATE T_items__item\n\t\t\t\t\tINNER JOIN T_categories\n\t\t\t\t\t   ON post_main_cat_ID = cat_ID\n\t\t\t\t\t  AND post_ityp_ID = 1\n\t\t\t\t\tINNER JOIN T_blogs\n\t\t\t\t\t   ON cat_blog_ID = blog_ID\n\t\t\t\t\t  AND blog_type = '.$DB->quote( $blog_type ).'\n\t\t\t\t\t  SET post_ityp_ID = '.$DB->quote( $item_type_data['new_type_ID'] ) );\n\t\t\t}\n\t\t}\n\t\t$DB->commit();\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrade table comments... ' );\n\t\t$DB->query( \"ALTER TABLE T_comments\n\t\t\tCHANGE comment_type comment_type enum('comment','linkback','trackback','pingback','meta') COLLATE ascii_general_ci NOT NULL default 'comment'\" );\n\t\ttask_end();\n\n\t\ttask_begin( 'Creating table for custom fields of Post Types... ' );\n\t\tdb_create_table( 'T_items__type_custom_field', '\n\t\t\titcf_ID      INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\titcf_ityp_ID INT(11) UNSIGNED NOT NULL,\n\t\t\titcf_label   VARCHAR(255) NOT NULL,\n\t\t\titcf_name    VARCHAR(255) COLLATE ascii_general_ci NOT NULL,\n\t\t\titcf_type    ENUM( \\'double\\', \\'varchar\\' ) COLLATE ascii_general_ci NOT NULL,\n\t\t\titcf_order   INT NULL,\n\t\t\tPRIMARY KEY ( itcf_ID ),\n\t\t\tUNIQUE itcf_ityp_ID_name( itcf_ityp_ID, itcf_name )' );\n\n\t\t// Create post types for each blog that has at aleast one custom field\n\t\t$SQL = new SQL();\n\t\t$SQL->SELECT( '*' );\n\t\t$SQL->FROM( 'T_coll_settings' );\n\t\t$SQL->WHERE( 'cset_name LIKE '.$DB->quote( 'custom_%' ) );\n\t\t$SQL->ORDER_BY( 'cset_coll_ID' );\n\t\t$setting_rows = $DB->get_results( $SQL->get() );\n\t\t$custom_fields = array();\n\t\t$blog_setting_delete_data = array();\n\t\t$blog_setting_item_types = array();\n\t\tif( count( $setting_rows ) )\n\t\t{ // Initialize an array of custom fields from blog settings\n\t\t\tforeach( $setting_rows as $setting_row )\n\t\t\t{\n\t\t\t\tif( preg_match( '/custom_(double|varchar)\\d+/', $setting_row->cset_name, $matches ) )\n\t\t\t\t{ // It is a custom field\n\t\t\t\t\tif( ! isset( $custom_fields[ $setting_row->cset_coll_ID ] ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t$custom_fields[ $setting_row->cset_coll_ID ] = array();\n\t\t\t\t\t}\n\t\t\t\t\t// Delete this blog setting\n\t\t\t\t\t$blog_setting_delete_data[] = 'cset_coll_ID = '.$DB->quote( $setting_row->cset_coll_ID ).' AND cset_name = '.$DB->quote( $setting_row->cset_name );\n\n\t\t\t\t\t$cf_type = $matches[1];\n\t\t\t\t\t$cf_key = $setting_row->cset_value;\n\t\t\t\t\t$cf_label = '';\n\t\t\t\t\t$cf_name = '';\n\t\t\t\t\tforeach( $setting_rows as $s_row )\n\t\t\t\t\t{\n\t\t\t\t\t\tif( $s_row->cset_name == 'custom_'.$cf_type.'_'.$cf_key )\n\t\t\t\t\t\t{ // Label\n\t\t\t\t\t\t\t$cf_label = $s_row->cset_value;\n\t\t\t\t\t\t\t// Delete this blog setting\n\t\t\t\t\t\t\t$blog_setting_delete_data[] = 'cset_coll_ID = '.$DB->quote( $s_row->cset_coll_ID ).' AND cset_name = '.$DB->quote( $s_row->cset_name );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( $s_row->cset_name == 'custom_fname_'.$cf_key )\n\t\t\t\t\t\t{ // Name\n\t\t\t\t\t\t\t$cf_name = $s_row->cset_value;\n\t\t\t\t\t\t\t// Delete this blog setting\n\t\t\t\t\t\t\t$blog_setting_delete_data[] = 'cset_coll_ID = '.$DB->quote( $s_row->cset_coll_ID ).' AND cset_name = '.$DB->quote( $s_row->cset_name );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$custom_fields[ $setting_row->cset_coll_ID ][] = array(\n\t\t\t\t\t\t\t'type'  => $cf_type,\n\t\t\t\t\t\t\t'key'   => $cf_key,\n\t\t\t\t\t\t\t'label' => $cf_label,\n\t\t\t\t\t\t\t'name'  => $cf_name\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( count( $custom_fields ) )\n\t\t\t{ // Create post type for each blog with custom fields\n\t\t\t\t$BlogCache = & get_BlogCache();\n\t\t\t\t$itypes_insert_data = array();\n\t\t\t\t$item_type_max_ID = $DB->get_var( 'SELECT MAX( ityp_ID ) FROM T_items__type' ) + 1;\n\t\t\t\tforeach( $custom_fields as $blog_ID => $c_fields )\n\t\t\t\t{\n\t\t\t\t\tif( ! ( $cf_Blog = $BlogCache->get_by_ID( $blog_ID, false, false ) ) )\n\t\t\t\t\t{ // Skip incorrect blog ID\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t$itypes_insert_data[] = '( '.$item_type_max_ID.', '\n\t\t\t\t\t\t.$DB->quote( 'custom_'.$cf_Blog->get( 'shortname' ) ).', '\n\t\t\t\t\t\t.'\"Posts\", '\n\t\t\t\t\t\t.'\"single\", '\n\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'require_title' ) == 'none' ? 'never' : $cf_Blog->get_setting( 'require_title' ) ).', '\n\t\t\t\t\t\t.$DB->quote( intval( $cf_Blog->get_setting( 'allow_html_post' ) ) ).', '\n\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_country' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_country' ) ).', '\n\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_region' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_region' ) ).', '\n\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_subregion' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_subregion' ) ).', '\n\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_city' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_city' ) ).', '\n\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'show_location_coordinates' ) ? 'optional' : 'never' ).', '\n\t\t\t\t\t\t.$DB->quote( intval( $cf_Blog->get_setting( 'disable_comments_bypost' ) ) ).' )';\n\t\t\t\t\t// Update default post type\n\t\t\t\t\t$blog_setting_item_types[ $cf_Blog->ID ] = $item_type_max_ID;\n\t\t\t\t\t$blog_categories = $DB->get_col( 'SELECT cat_ID FROM T_categories WHERE cat_blog_ID = '.$cf_Blog->ID );\n\t\t\t\t\tif( count( $blog_categories ) )\n\t\t\t\t\t{ // Set new post type for each post\n\t\t\t\t\t\t$DB->query( 'UPDATE T_items__item SET post_ityp_ID = '.$item_type_max_ID.'\n\t\t\t\t\t\t\tWHERE post_ityp_ID = 1\n\t\t\t\t\t\t\t  AND post_main_cat_ID IN ( '.implode( ', ', $blog_categories ).' )' );\n\n\t\t\t\t\t\t// Find the Pages that have at least one defined custom field:\n\t\t\t\t\t\t$pages_SQL = new SQL();\n\t\t\t\t\t\t$pages_SQL->SELECT( 'post_ID' );\n\t\t\t\t\t\t$pages_SQL->FROM( 'T_items__item' );\n\t\t\t\t\t\t$pages_SQL->FROM_add( 'INNER JOIN T_items__item_settings ON post_ID = iset_item_ID' );\n\t\t\t\t\t\t$pages_SQL->WHERE( 'post_main_cat_ID IN ( '.implode( ', ', $blog_categories ).' )' );\n\t\t\t\t\t\t$pages_SQL->WHERE_and( 'post_ityp_ID = 1000' );\n\t\t\t\t\t\t$pages_SQL->WHERE_and( 'iset_name LIKE '.$DB->quote( 'custom_double_%' )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.' OR iset_name LIKE '.$DB->quote( 'custom_varchar_%' ) );\n\t\t\t\t\t\t$pages_SQL->WHERE_and( 'iset_value != \"\"' );\n\t\t\t\t\t\t$pages_SQL->GROUP_BY( 'post_ID' );\n\t\t\t\t\t\t$pages_IDs = $DB->get_col( $pages_SQL->get() );\n\t\t\t\t\t\t$page_type_max_ID = 0;\n\t\t\t\t\t\tif( count( $pages_IDs ) > 0 )\n\t\t\t\t\t\t{ // We have the Pages that have the defined custom fields\n\t\t\t\t\t\t\t// Increase post type ID for new special post type for pages\n\t\t\t\t\t\t\t$page_type_max_ID = $item_type_max_ID + 1;\n\t\t\t\t\t\t\t$itypes_insert_data[] = '( '.$page_type_max_ID.', '\n\t\t\t\t\t\t\t\t.$DB->quote( 'page_'.$cf_Blog->get( 'shortname' ) ).', '\n\t\t\t\t\t\t\t\t.'\"Pages\", '\n\t\t\t\t\t\t\t\t.'\"page\", '\n\t\t\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'require_title' ) == 'none' ? 'never' : $cf_Blog->get_setting( 'require_title' ) ).', '\n\t\t\t\t\t\t\t\t.$DB->quote( intval( $cf_Blog->get_setting( 'allow_html_post' ) ) ).', '\n\t\t\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_country' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_country' ) ).', '\n\t\t\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_region' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_region' ) ).', '\n\t\t\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_subregion' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_subregion' ) ).', '\n\t\t\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'location_city' ) == 'hidden' ? 'never' : $cf_Blog->get_setting( 'location_city' ) ).', '\n\t\t\t\t\t\t\t\t.$DB->quote( $cf_Blog->get_setting( 'show_location_coordinates' ) ? 'optional' : 'never' ).', '\n\t\t\t\t\t\t\t\t.$DB->quote( intval( $cf_Blog->get_setting( 'disable_comments_bypost' ) ) ).' )';\n\t\t\t\t\t\t\tforeach( $c_fields as $c_field )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Insert custom field to get new ID\n\t\t\t\t\t\t\t\t$DB->query( 'INSERT INTO T_items__type_custom_field ( itcf_ityp_ID, itcf_label, itcf_name, itcf_type )\n\t\t\t\t\t\t\t\t\tVALUES ( '.$page_type_max_ID.', '\n\t\t\t\t\t\t\t\t\t.$DB->quote( $c_field['label'] ).', '\n\t\t\t\t\t\t\t\t\t.$DB->quote( $c_field['name'] ).', '\n\t\t\t\t\t\t\t\t\t.$DB->quote( $c_field['type'] ).' )' );\n\t\t\t\t\t\t\t\t$itcf_ID = $DB->insert_id;\n\t\t\t\t\t\t\t\t// Change the UID of the item settings to the new inserted itcf_ID (ID of the custom field)\n\t\t\t\t\t\t\t\t$DB->query( 'UPDATE T_items__item_settings\n\t\t\t\t\t\t\t\t\t\tSET iset_name = '.$DB->quote( 'custom_'.$c_field['type'].'_'.$itcf_ID ).'\n\t\t\t\t\t\t\t\t\tWHERE iset_item_ID IN ( '.implode( ', ', $pages_IDs ).' )\n\t\t\t\t\t\t\t\t\t\tAND iset_name = '.$DB->quote( 'custom_'.$c_field['type'].'_'.$c_field['key'] ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Set new post type for each page\n\t\t\t\t\t\t\t$DB->query( 'UPDATE T_items__item SET post_ityp_ID = '.$page_type_max_ID.'\n\t\t\t\t\t\t\t\tWHERE post_ID IN ( '.implode( ', ', $pages_IDs ).' )' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Insert custom fields for standard posts (not pages)\n\t\t\t\t\tforeach( $c_fields as $c_field )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Insert custom field to get new ID\n\t\t\t\t\t\t$DB->query( 'INSERT INTO T_items__type_custom_field ( itcf_ityp_ID, itcf_label, itcf_name, itcf_type )\n\t\t\t\t\t\t\tVALUES ( '.$item_type_max_ID.', '\n\t\t\t\t\t\t\t.$DB->quote( $c_field['label'] ).', '\n\t\t\t\t\t\t\t.$DB->quote( $c_field['name'] ).', '\n\t\t\t\t\t\t\t.$DB->quote( $c_field['type'] ).' )' );\n\t\t\t\t\t\t$itcf_ID = $DB->insert_id;\n\t\t\t\t\t\t// Change the UID of the item settings to the new inserted itcf_ID (ID of the custom field)\n\t\t\t\t\t\t$DB->query( 'UPDATE T_items__item_settings\n\t\t\t\t\t\t\t\tSET iset_name = '.$DB->quote( 'custom_'.$c_field['type'].'_'.$itcf_ID ).'\n\t\t\t\t\t\t\tWHERE iset_name = '.$DB->quote( 'custom_'.$c_field['type'].'_'.$c_field['key'] ) );\n\t\t\t\t\t}\n\t\t\t\t\t// Increase post type ID for next\n\t\t\t\t\t$item_type_max_ID += $page_type_max_ID > 0 ? 2 : 1;\n\t\t\t\t}\n\t\t\t\t// Insert post types\n\t\t\t\t$DB->query( 'INSERT INTO T_items__type ( ityp_ID, ityp_name, ityp_backoffice_tab, ityp_template_name, ityp_use_title, ityp_allow_html, ityp_use_country, ityp_use_region, ityp_use_sub_region, ityp_use_city, ityp_use_coordinates, ityp_allow_disabling_comments )\n\t\t\t\t\tVALUES '.implode( ', ', $itypes_insert_data ) );\n\t\t\t\t// Delete old blog settings from DB (custom fields)\n\t\t\t\t$blog_setting_delete_data[] = 'cset_name LIKE \"count_custom_%\"';\n\t\t\t\t$DB->query( 'DELETE FROM T_coll_settings\n\t\t\t\t\tWHERE ( '.implode( ') OR (', $blog_setting_delete_data ).' )' );\n\t\t\t}\n\t\t}\n\n\t\t// Update default post types\n\t\t$blogs = $DB->get_col( 'SELECT blog_ID FROM T_blogs' );\n\t\t$sql_update_blog_settings = array();\n\t\tforeach( $blogs as $blog_ID )\n\t\t{\n\t\t\tif( isset( $blog_setting_item_types[ $blog_ID ] ) )\n\t\t\t{ // Set it from custom post type\n\t\t\t\t$current_item_type = $blog_setting_item_types[ $blog_ID ];\n\t\t\t}\n\t\t\telse\n\t\t\t{ // Set it from first non reserved post type\n\t\t\t\tif( ! isset( $first_item_type ) )\n\t\t\t\t{\n\t\t\t\t\t$SQL = new SQL();\n\t\t\t\t\t$SQL->SELECT( 'ityp_ID' );\n\t\t\t\t\t$SQL->FROM( 'T_items__type' );\n\t\t\t\t\t$SQL->WHERE( 'ityp_ID NOT IN (1000,1400,1500,1520,1530,1570,1600,2000,3000,4000,5000)' );\n\t\t\t\t\t$SQL->ORDER_BY( 'ityp_ID' );\n\t\t\t\t\t$SQL->LIMIT( '1' );\n\t\t\t\t\t$first_item_type = $DB->get_var( $SQL->get() );;\n\t\t\t\t}\n\t\t\t\t$current_item_type = $first_item_type;\n\t\t\t}\n\t\t\t$sql_update_blog_settings[] = '( '.$DB->quote( $blog_ID ).', \"default_post_type\", '.$DB->quote( $current_item_type ).' )';\n\t\t}\n\t\tif( ! empty( $sql_update_blog_settings ) )\n\t\t{ // Execute a query to update the blog settings\n\t\t\t$DB->query( 'REPLACE INTO T_coll_settings ( cset_coll_ID, cset_name, cset_value )\n\t\t\t\tVALUES '.implode( ', ', $sql_update_blog_settings ) );\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating site settings... ' );\n\t\tif( $DB->get_var( 'SELECT set_value FROM T_settings WHERE set_name = \"site_color\"' ) === NULL )\n\t\t{ // Set default site color only when it is not defined yet\n\t\t\t$DB->query( 'INSERT INTO T_settings ( set_name, set_value )'\n\t\t\t\t\t\t\t\t.' VALUES ( \"site_color\", \"#ff8c0f\" )' );\n\t\t}\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11360' );\n\t}\n\n\tif( $old_db_version < 11370 )\n\t{ // part 18.f trunk aka 8th part of \"i7\"\n\n\t\ttask_begin( 'Updating user settings... ' );\n\t\t$DB->query( 'DELETE FROM T_users__usersettings WHERE uset_name = \"admin_skin\"' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11370' );\n\t}\n\n\tif( $old_db_version < 11375 )\n\t{ // part 18.g trunk aka 9th part of \"i7\"\n\n\t\ttask_begin( 'Upgrade table user field definitions... ' );\n\t\t$DB->query( 'ALTER TABLE T_users__fielddefs\n\t\t\tADD ufdf_icon_name varchar(100) COLLATE ascii_general_ci NULL' );\n\t\t$DB->query( 'UPDATE T_users__fielddefs SET\n\t\t\tufdf_icon_name = CASE\n\t\t\t\tWHEN ufdf_name = \"Yahoo IM\"      THEN \"fa fa-yahoo\"\n\t\t\t\tWHEN ufdf_name = \"Skype\"         THEN \"fa fa-skype\"\n\t\t\t\tWHEN ufdf_name = \"Main phone\"    THEN \"fa fa-phone\"\n\t\t\t\tWHEN ufdf_name = \"Cell phone\"    THEN \"fa fa-mobile-phone\"\n\t\t\t\tWHEN ufdf_name = \"Office phone\"  THEN \"fa fa-phone\"\n\t\t\t\tWHEN ufdf_name = \"Home phone\"    THEN \"fa fa-phone\"\n\t\t\t\tWHEN ufdf_name = \"Office FAX\"    THEN \"fa fa-fax\"\n\t\t\t\tWHEN ufdf_name = \"Home FAX\"      THEN \"fa fa-fax\"\n\t\t\t\tWHEN ufdf_name = \"Linkedin\"      THEN \"fa fa-linkedin fa-x-linkedin--nudge\"\n\t\t\t\tWHEN ufdf_name = \"Twitter\"       THEN \"fa fa-twitter\"\n\t\t\t\tWHEN ufdf_name = \"Facebook\"      THEN \"fa fa-facebook\"\n\t\t\t\tWHEN ufdf_name = \"Flickr\"        THEN \"fa fa-flickr\"\n\t\t\t\tWHEN ufdf_name = \"YouTube\"       THEN \"fa fa-youtube\"\n\t\t\t\tWHEN ufdf_name = \"Digg\"          THEN \"fa fa-digg\"\n\t\t\t\tWHEN ufdf_name = \"StumbleUpon\"   THEN \"fa fa-stumbleupon\"\n\t\t\t\tWHEN ufdf_name = \"GitHub\"        THEN \"fa fa-github-alt\"\n\t\t\t\tWHEN ufdf_name = \"Google Plus\"   THEN \"fa fa-google-plus fa-x-google-plus--nudge\"\n\t\t\t\tWHEN ufdf_name = \"Pinterest\"     THEN \"fa fa-pinterest-p\"\n\t\t\t\tWHEN ufdf_name = \"Main address\"  THEN \"fa fa-building\"\n\t\t\t\tWHEN ufdf_name = \"Home address\"  THEN \"fa fa-home\"\n\t\t\t\tWHEN ufdf_name = \"About me\"      THEN \"fa fa-info-circle\"\n\t\t\t\tWHEN ufdf_name = \"I like\"        THEN \"fa fa-thumbs-o-up\"\n\t\t\t\tWHEN ufdf_name = \"I don\\'t like\" THEN \"fa fa-thumbs-o-down\"\n\t\t\t\tELSE ufdf_icon_name\n\t\t\tEND' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11375' );\n\t}\n\n\tif( $old_db_version < 11380 )\n\t{ // part 18.h trunk aka 10th part of \"i7\"\n\n\t\ttask_begin( 'Update links table... ' );\n\t\t$DB->query( 'UPDATE T_links\n\t\t\t  SET link_position = \"cover\"\n\t\t\tWHERE link_position = \"albumart\"' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11380' );\n\t}\n\n\tif( $old_db_version < 11390 )\n\t{ // part 18.i trunk aka 11th part of \"i7\"\n\n\t\ttask_begin( 'Upgrading table of relations users with organizations... ' );\n\t\t$DB->query( 'ALTER TABLE T_users__user_org\n\t\t\tADD COLUMN uorg_role VARCHAR(255) NULL' );\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11390' );\n\t}\n\n\tif( $old_db_version < 11400 )\n\t{ // part 18.j trunk aka 12th part of \"i7\"\n\n\t\ttask_begin( 'Upgrade table user field definitions... ' );\n\t\t$DB->query( 'ALTER TABLE T_users__fielddefs\n\t\t\tADD ufdf_code varchar(20) COLLATE ascii_general_ci NULL' );\n\t\t$update_user_fields = array(\n\t\t\t\t'Micro bio'     => 'microbio',\n\t\t\t\t'I like'        => 'ilike',\n\t\t\t\t'I don\\'t like' => 'idontlike',\n\t\t\t\t'MSN/Live IM'   => 'msnliveim',\n\t\t\t\t'Yahoo IM'      => 'yahooim',\n\t\t\t\t'AOL AIM'       => 'aolaim',\n\t\t\t\t'ICQ ID'        => 'icqid',\n\t\t\t\t'Skype'         => 'skype',\n\t\t\t\t'Main phone'    => 'mainphone',\n\t\t\t\t'Cell phone'    => 'cellphone',\n\t\t\t\t'Office phone'  => 'officephone',\n\t\t\t\t'Home phone'    => 'homephone',\n\t\t\t\t'Office FAX'    => 'officefax',\n\t\t\t\t'Home FAX'      => 'homefax',\n\t\t\t\t'Twitter'       => 'twitter',\n\t\t\t\t'Facebook'      => 'facebook',\n\t\t\t\t'Google Plus'   => 'googleplus',\n\t\t\t\t'Linkedin'      => 'linkedin',\n\t\t\t\t'GitHub'        => 'github',\n\t\t\t\t'Website'       => 'website',\n\t\t\t\t'Blog'          => 'blog',\n\t\t\t\t'Myspace'       => 'myspace',\n\t\t\t\t'Flickr'        => 'flickr',\n\t\t\t\t'YouTube'       => 'youtube',\n\t\t\t\t'Digg'          => 'digg',\n\t\t\t\t'StumbleUpon'   => 'stumbleupon',\n\t\t\t\t'Pinterest'     => 'pinterest',\n\t\t\t\t'Role'          => 'role',\n\t\t\t\t'Organization'  => 'organization',\n\t\t\t\t'Division'      => 'division',\n\t\t\t\t'VAT ID'        => 'vatid',\n\t\t\t\t'Main address'  => 'mainaddress',\n\t\t\t\t'Home address'  => 'homeaddress',\n\t\t\t);\n\t\tforeach( $update_user_fields as $update_user_field_name => $update_user_field_code )\n\t\t{\n\t\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\t  SET ufdf_code = '.$DB->quote( $update_user_field_code ).'\n\t\t\t\tWHERE ufdf_name = '.$DB->quote( $update_user_field_name ).'\n\t\t\t\tLIMIT 1' ); // limit by 1 in order to update only first record to avoid the duplicate codes\n\t\t}\n\t\t// Update codes for all other unknown fields\n\t\t$DB->query( 'UPDATE T_users__fielddefs\n\t\t\t\tSET ufdf_code = CONCAT( \"code_\", ufdf_ID )\n\t\t\tWHERE ufdf_code IS NULL' );\n\t\t// Make code field unique\n\t\t$DB->query( 'ALTER TABLE T_users__fielddefs\n\t\t\tMODIFY ufdf_code varchar(20) COLLATE ascii_general_ci UNIQUE NOT NULL' );\n\t\ttask_end();\n\n\t\t/*\n\t\t * ADD UPGRADES FOR i7 BRANCH __ABOVE__ IN THIS BLOCK.\n\t\t *\n\t\t * This part will be included in trunk and i7 branches\n\t\t */\n\n\t\tset_upgrade_checkpoint( '11400' );\n\t}\n\n\tif( $old_db_version < 11410 )\n\t{ // part 18.k trunk aka 13th part of \"i7\"\n\n\t\ttask_begin( 'Upgrading skin names... ' );\n\t\t$DB->query( 'UPDATE T_skins__skin\n\t\t\t\t\t\t\t SET skin_folder = CASE\n\t\t\t\t\t\t\t\t\tWHEN skin_folder = \"bootstrap\"        THEN \"bootstrap_blog_skin\"\n\t\t\t\t\t\t\t\t\tWHEN skin_folder = \"bootstrap_main\"   THEN \"bootstrap_main_skin\"\n\t\t\t\t\t\t\t\t\tWHEN skin_folder = \"bootstrap_manual\" THEN \"bootstrap_manual_skin\"\n\t\t\t\t\t\t\t\t\tELSE skin_folder\n\t\t\tEND' );\n\t\ttask_end();\n\n\t\t/*\n\t\t * ADD UPGRADES FOR i7 BRANCH __ABOVE__ IN THIS BLOCK.\n\t\t *\n\t\t * This part will be included in trunk and i7 branches\n\t\t */\n\n\t\tset_upgrade_checkpoint( '11410' );\n\t}\n\n\tif( $old_db_version < 11420 )\n\t{ // part 18.l trunk aka 14th part of \"i7\"\n\n\t\t// This upgrade block restores all field collations that may have been broken by the back-office DB convert tool\n\t\t// to 'ascii_bin' and 'ascii_general_ci'\n\n\t\ttask_begin( 'Updating hit log keyphrases table...' );\n\t\t$DB->query( 'ALTER TABLE T_track__keyphrase\n\t\t\tMODIFY keyp_phrase  VARCHAR( 255 ) COLLATE utf8_bin NOT NULL' );\n\t\ttask_end();\n\n\t\ttask_begin( 'Check and normalize the ASCII charsets/collations... <br />' );\n\t\ttask_begin( '- Converting skins table...' );\n\t\t$DB->query( \"ALTER TABLE T_skins__skin\n\t\t\tMODIFY skin_type enum('normal','feed','sitemap','mobile','tablet') COLLATE ascii_general_ci NOT NULL default 'normal'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting blogs table...' );\n\t\t$DB->query( \"ALTER TABLE T_blogs\n\t\t\tMODIFY blog_access_type    VARCHAR(10) COLLATE ascii_general_ci NOT NULL DEFAULT 'extrapath',\n\t\t\tMODIFY blog_urlname        VARCHAR(255) COLLATE ascii_general_ci NOT NULL DEFAULT 'urlname',\n\t\t\tMODIFY blog_in_bloglist    ENUM( 'public', 'logged', 'member', 'never' ) COLLATE ascii_general_ci DEFAULT 'public' NOT NULL,\n\t\t\tMODIFY blog_media_location ENUM( 'default', 'subdir', 'custom', 'none' ) COLLATE ascii_general_ci DEFAULT 'default' NOT NULL,\n\t\t\tMODIFY blog_type           ENUM( 'main', 'std', 'photo', 'group', 'forum', 'manual' ) COLLATE ascii_general_ci DEFAULT 'std' NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting blog settings table...' );\n\t\t$DB->query( 'ALTER TABLE T_coll_settings\n\t\t\tMODIFY cset_name VARCHAR( 50 ) COLLATE ascii_general_ci NOT NULL' );\n\t\ttask_end();\n\t\ttask_begin( '- Converting widgets table...' );\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}widget\n\t\t\tMODIFY wi_type ENUM( 'core', 'plugin' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'core',\n\t\t\tMODIFY wi_code VARCHAR(32) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting categories table...' );\n\t\t$DB->query( \"ALTER TABLE T_categories\n\t\t\tMODIFY cat_urlname varchar(255) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY cat_subcat_ordering enum('parent', 'alpha', 'manual') COLLATE ascii_general_ci NULL DEFAULT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting posts table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__item\n\t\t\tMODIFY post_status               enum('published','community','deprecated','protected','private','review','draft','redirected') COLLATE ascii_general_ci NOT NULL default 'published',\n\t\t\tMODIFY post_urltitle             VARCHAR(210) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY post_notifications_status ENUM('noreq','todo','started','finished') COLLATE ascii_general_ci NOT NULL DEFAULT 'noreq',\n\t\t\tMODIFY post_comment_status       ENUM('disabled', 'open', 'closed') COLLATE ascii_general_ci NOT NULL DEFAULT 'open',\n\t\t\tMODIFY post_renderers            VARCHAR(255) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting comments table...' );\n\t\t$DB->query( \"ALTER TABLE T_comments\n\t\t\tMODIFY comment_type         enum('comment','linkback','trackback','pingback','meta') COLLATE ascii_general_ci NOT NULL default 'comment',\n\t\t\tMODIFY comment_status       ENUM('published','community','deprecated','protected','private','review','draft','trash') COLLATE ascii_general_ci DEFAULT 'published' NOT NULL,\n\t\t\tMODIFY comment_author_email varchar(255) COLLATE ascii_general_ci NULL,\n\t\t\tMODIFY comment_author_IP    varchar(45) COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY comment_renderers    VARCHAR(255) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY comment_secret       CHAR(32) COLLATE ascii_general_ci NULL default NULL,\n\t\t\tMODIFY comment_notif_status ENUM('noreq','todo','started','finished') COLLATE ascii_general_ci NOT NULL DEFAULT 'noreq' COMMENT 'Have notifications been sent for this comment? How far are we in the process?'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post prerendered contents table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__prerendering\n\t\t\tMODIFY itpr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY itpr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting comment prerendered contents table...' );\n\t\t$DB->query( \"ALTER TABLE T_comments__prerendering\n\t\t\tMODIFY cmpr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY cmpr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post versions table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__version\n\t\t\tMODIFY iver_status ENUM('published','community','deprecated','protected','private','review','draft','redirected') COLLATE ascii_general_ci NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post types table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__type\n\t\t\tMODIFY ityp_use_title              ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'required',\n\t\t\tMODIFY ityp_use_url                ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tMODIFY ityp_use_text               ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tMODIFY ityp_use_excerpt            ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tMODIFY ityp_use_title_tag          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tMODIFY ityp_use_meta_desc          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tMODIFY ityp_use_meta_keywds        ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tMODIFY ityp_use_tags               ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',\n\t\t\tMODIFY ityp_use_country            ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tMODIFY ityp_use_region             ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tMODIFY ityp_use_sub_region         ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tMODIFY ityp_use_city               ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tMODIFY ityp_use_coordinates        ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',\n\t\t\tMODIFY ityp_use_comment_expiration ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post types custom fields table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__type_custom_field\n\t\t\tMODIFY itcf_name VARCHAR(255) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY itcf_type ENUM( 'double', 'varchar' ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting post settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_items__item_settings\n\t\t\tMODIFY iset_name varchar( 50 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user permissions table...' );\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms\n\t\t\tMODIFY bloguser_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloguser_perm_edit         ENUM('no','own','lt','le','all','redirected') COLLATE ascii_general_ci NOT NULL default 'no',\n\t\t\tMODIFY bloguser_perm_cmtstatuses  set('review','draft','private','protected','deprecated','community','published') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloguser_perm_edit_cmt     ENUM('no','own','anon','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting group permissions table...' );\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms\n\t\t\tMODIFY bloggroup_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloggroup_perm_edit         ENUM('no','own','lt','le','all','redirected') COLLATE ascii_general_ci NOT NULL default 'no',\n\t\t\tMODIFY bloggroup_perm_cmtstatuses  set('review','draft','private','protected','deprecated','community','published') COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY bloggroup_perm_edit_cmt     ENUM('no','own','anon','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting links table...' );\n\t\t$DB->query( \"ALTER TABLE T_links\n\t\t\tMODIFY link_position varchar(10) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting files table...' );\n\t\t$DB->query( \"ALTER TABLE T_files\n\t\t\tMODIFY file_type      enum('image', 'audio', 'other') COLLATE ascii_general_ci NULL DEFAULT NULL,\n\t\t\tMODIFY file_root_type enum('absolute','user','collection','shared','skins','import') COLLATE ascii_general_ci NOT NULL DEFAULT 'absolute'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting file types table...' );\n\t\t$DB->query( \"ALTER TABLE T_filetypes\n\t\t\tMODIFY ftyp_extensions varchar(30) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ftyp_viewtype   varchar(10) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ftyp_allowed    enum('any','registered','admin') COLLATE ascii_general_ci NOT NULL default 'admin'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting messages table...' );\n\t\t$DB->query( \"ALTER TABLE T_messaging__message\n\t\t\tMODIFY msg_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting message prerendering contents table...' );\n\t\t$DB->query( \"ALTER TABLE T_messaging__prerendering\n\t\t\tMODIFY mspr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY mspr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting sessions table...' );\n\t\t$DB->query( \"ALTER TABLE T_sessions\n\t\t\tMODIFY sess_key       CHAR(32) COLLATE ascii_general_ci NULL,\n\t\t\tMODIFY sess_ipaddress VARCHAR(45) COLLATE ascii_general_ci NOT NULL DEFAULT '',\n\t\t\tMODIFY sess_device    VARCHAR(8) COLLATE ascii_general_ci NOT NULL DEFAULT ''\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting domains table...' );\n\t\t$DB->query( \"ALTER TABLE T_basedomains\n\t\t\tMODIFY dom_status ENUM('unknown','trusted','suspect','blocked') COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown',\n\t\t\tMODIFY dom_type   ENUM('unknown','normal','searcheng','aggregator','email') COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting logs table...' );\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\tMODIFY hit_ctrl         VARCHAR(30) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY hit_type         ENUM('standard','rss','admin','ajax', 'service') COLLATE ascii_general_ci DEFAULT 'standard' NOT NULL,\n\t\t\tMODIFY hit_referer_type ENUM('search','special','spam','referer','direct','self') COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY hit_remote_addr  VARCHAR(45) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY hit_agent_type   ENUM('robot','browser','unknown') COLLATE ascii_general_ci DEFAULT 'unknown' NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting goal categories table...' );\n\t\t$DB->query( \"ALTER TABLE T_track__goalcat\n\t\t\tMODIFY gcat_color  char(7) COLLATE ascii_general_ci default NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting groups table...' );\n\t\t$DB->query( \"ALTER TABLE T_groups\n\t\t\tMODIFY grp_perm_blogs                  enum('user','viewall','editall') COLLATE ascii_general_ci NOT NULL default 'user',\n\t\t\tMODIFY grp_perm_xhtmlvalidation        VARCHAR(10) COLLATE ascii_general_ci NOT NULL default 'always',\n\t\t\tMODIFY grp_perm_xhtmlvalidation_xmlrpc VARCHAR(10) COLLATE ascii_general_ci NOT NULL default 'always',\n\t\t\tMODIFY grp_perm_stats                  enum('none','user','view','edit') COLLATE ascii_general_ci NOT NULL default 'none'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting group settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_groups__groupsettings\n\t\t\tMODIFY gset_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_settings\n\t\t\tMODIFY set_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting cache table...' );\n\t\t$DB->query( \"ALTER TABLE T_global__cache\n\t\t\tMODIFY cach_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting users table...' );\n\t\t$DB->query( \"ALTER TABLE T_users\n\t\t\tMODIFY user_email           varchar(255) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY user_status          enum( 'activated', 'autoactivated', 'closed', 'deactivated', 'emailchanged', 'failedactivation', 'new' ) COLLATE ascii_general_ci NOT NULL default 'new',\n\t\t\tMODIFY user_unsubscribe_key CHAR(32) COLLATE ascii_general_ci NOT NULL default '' COMMENT 'A specific key, it is used when a user wants to unsubscribe from a post comments without signing in',\n\t\t\tMODIFY user_gender          char(1) COLLATE ascii_general_ci NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user fields table...' );\n\t\t$DB->query( \"ALTER TABLE T_users__fielddefs\n\t\t\tMODIFY ufdf_type       char(8) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ufdf_required   enum('hidden','optional','recommended','require') COLLATE ascii_general_ci NOT NULL default 'optional',\n\t\t\tMODIFY ufdf_duplicated enum('forbidden','allowed','list') COLLATE ascii_general_ci NOT NULL default 'allowed',\n\t\t\tMODIFY ufdf_icon_name  varchar(100) COLLATE ascii_general_ci NULL,\n\t\t\tMODIFY ufdf_code       varchar(20) COLLATE ascii_general_ci UNIQUE NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user reports table...' );\n\t\t$DB->query( \"ALTER TABLE T_users__reports\n\t\t\tMODIFY urep_status enum( 'fake', 'guidelines', 'harass', 'spam', 'other' ) COLLATE ascii_general_ci\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user invitation codes table...' );\n\t\t$DB->query( \"ALTER TABLE T_users__invitation_code\n\t\t\tMODIFY ivc_code varchar(32) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting locales table...' );\n\t\t$DB->query( \"ALTER TABLE T_locales\n\t\t\tMODIFY loc_datefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'y-m-d',\n\t\t\tMODIFY loc_timefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'H:i:s',\n\t\t\tMODIFY loc_shorttimefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'H:i'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting antispam table...' );\n\t\t$DB->query( \"ALTER TABLE {$tableprefix}antispam\n\t\t\tMODIFY aspm_source enum( 'local','reported','central' ) COLLATE ascii_general_ci NOT NULL default 'reported'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting IP ranges table...' );\n\t\t$DB->query( \"ALTER TABLE T_antispam__iprange\n\t\t\tMODIFY aipr_status enum( 'trusted', 'suspect', 'blocked' ) COLLATE ascii_general_ci NULL DEFAULT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting user settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_users__usersettings\n\t\t\tMODIFY uset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugins table...' );\n\t\t$DB->query( \"ALTER TABLE T_plugins\n\t\t\tMODIFY plug_classname VARCHAR(40) COLLATE ascii_general_ci NOT NULL default '',\n\t\t\tMODIFY plug_code      VARCHAR(32) COLLATE ascii_general_ci NULL,\n\t\t\tMODIFY plug_version   VARCHAR(42) COLLATE ascii_general_ci NOT NULL default '0',\n\t\t\tMODIFY plug_status    ENUM( 'enabled', 'disabled', 'needs_config', 'broken' ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugin settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_pluginsettings\n\t\t\tMODIFY pset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugin user settings table...' );\n\t\t$DB->query( \"ALTER TABLE T_pluginusersettings\n\t\t\tMODIFY puset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting plugin events table...' );\n\t\t$DB->query( \"ALTER TABLE T_pluginevents\n\t\t\tMODIFY pevt_event VARCHAR(40) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting cron tasks table...' );\n\t\t$DB->query( \"ALTER TABLE T_cron__task\n\t\t\tMODIFY ctsk_key varchar(50) COLLATE ascii_general_ci not null\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting cron logs table...' );\n\t\t$DB->query( \"ALTER TABLE T_cron__log\n\t\t\tMODIFY clog_status enum('started','finished','error','timeout') COLLATE ascii_general_ci not null default 'started'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting countries table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__country\n\t\t\tMODIFY ctry_code   char(2) COLLATE ascii_general_ci NOT NULL,\n\t\t\tMODIFY ctry_status enum( 'trusted', 'suspect', 'blocked' ) COLLATE ascii_general_ci NULL DEFAULT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting regions table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__region\n\t\t\tMODIFY rgn_code char(6) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting subregions table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__subregion\n\t\t\tMODIFY subrg_code char(6) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting cities table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__city\n\t\t\tMODIFY city_postcode char(12) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting currencies table...' );\n\t\t$DB->query( \"ALTER TABLE T_regional__currency\n\t\t\tMODIFY curr_code char(3) COLLATE ascii_general_ci NOT NULL\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting slugs table...' );\n\t\t$DB->query( \"ALTER TABLE T_slug\n\t\t\tMODIFY slug_title varchar(255) COLLATE ascii_bin NOT NULL,\n\t\t\tMODIFY slug_type\tchar(6) COLLATE ascii_bin NOT NULL DEFAULT 'item'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting email logs table...' );\n\t\t$DB->query( \"ALTER TABLE T_email__log\n\t\t\tMODIFY emlog_to     VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY emlog_result ENUM( 'ok', 'error', 'blocked' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'ok'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting email returns table...' );\n\t\t$DB->query( \"ALTER TABLE T_email__returns\n\t\t\tMODIFY emret_address   VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY emret_errtype   CHAR(1) COLLATE ascii_general_ci NOT NULL DEFAULT 'U'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting email addresses table...' );\n\t\t$DB->query( \"ALTER TABLE T_email__address\n\t\t\tMODIFY emadr_address VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,\n\t\t\tMODIFY emadr_status  ENUM( 'unknown', 'redemption', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown'\" );\n\t\ttask_end();\n\t\ttask_begin( '- Converting system log table...' );\n\t\t$DB->query( \"ALTER TABLE T_syslog\n\t\t\tMODIFY slg_type   ENUM('info', 'warning', 'error', 'critical_error') COLLATE ascii_general_ci NOT NULL DEFAULT 'info',\n\t\t\tMODIFY slg_origin ENUM('core', 'plugin') COLLATE ascii_general_ci,\n\t\t\tMODIFY slg_object ENUM('comment', 'item', 'user', 'file') COLLATE ascii_general_ci\" );\n\t\ttask_end();\n\t\ttask_end();\n\n\t\tset_upgrade_checkpoint( '11420' );\n\t}\n\n\tif( $old_db_version < 11430 )\n\t{ // part 18.m trunk aka 15th part of \"i7\"\n\n\t\ttask_begin( 'Upgrading tags table...' );\n\t\t// Get all tags that contain not ascii chars, because some mysql versions cannot convert them correctly to utf8_bin\n\t\t$not_ascii_tags = $DB->get_results( 'SELECT *\n\t\t\t FROM T_items__tag\n\t\t\tWHERE tag_name NOT REGEXP \"^[A-Za-z0-9_\\-\\s]+$\"' );\n\t\tforeach( $not_ascii_tags as $not_ascii_tag )\n\t\t{ // Replace each not ascii char with \"_\" in tag name in order to avoid error on below table upgrading\n\t\t\t$ascii_tag_name = preg_replace( '/[^A-Za-z0-9_\\-\\s]/', '_', $not_ascii_tag->tag_name );\n\t\t\t$ascii_tag_name = str_replace( '__', '_', $ascii_tag_name );\n\n\t\t\tif( $ascii_tag_name == $not_ascii_tag->tag_name )\n\t\t\t{ // Skip this tag name because it doesn't contain not ascii chars really\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check tag name for uniqueness\n\t\t\t$c = 1;\n\t\t\t$new_tag_name = $ascii_tag_name;\n\t\t\twhile( $DB->get_var( 'SELECT tag_ID\n\t\t\t\t FROM T_items__tag\n\t\t\t\tWHERE tag_name = '.$DB->quote( $new_tag_name ) ) )\n\t\t\t{\n\t\t\t\t$new_tag_name = $ascii_tag_name.$c;\n\t\t\t\t$c++;\n\t\t\t}\n\n\t\t\t// Update tag name to new value without not ascii chars\n\t\t\t$DB->query( 'UPDATE T_items__tag\n\t\t\t\t  SET tag_name = '.$DB->quote( $new_tag_name ).'\n\t\t\t\tWHERE tag_ID = '.$not_ascii_tag->tag_ID );\n\t\t}\n\t\t// Remove the empty tags\n\t\t$empty_tag_IDs = $DB->get_col( 'SELECT tag_ID FROM T_items__tag\n\t\t\tWHERE tag_name = \"\"' );\n\t\tif( ! empty( $empty_tag_IDs ) )\n\t\t{\n\t\t\t$DB->query( 'DELETE FROM T_items__tag\n\t\t\t\tWHERE tag_ID IN ( '.$DB->quote( $empty_tag_IDs ).' ) ' );\n\t\t\t$DB->query( 'DELETE FROM T_items__itemtag\n\t\t\t\tWHERE itag_tag_ID IN ( '.$DB->quote( $empty_tag_IDs ).' ) ' );\n\t\t}\n\t\t// Upgrade field \"tag_name\" from varbinary to varchar utf8_bin\n\t\t$DB->query( 'ALTER TABLE T_items__tag\n\t\t\tMODIFY tag_name VARCHAR(50) COLLATE utf8_bin NOT NULL' ); // Allow multiple special char variations for each tag\n\t\ttask_end();\n\n\t\ttask_begin( 'Upgrading collection user/group permissions tables...' );\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms\n\t\t\tMODIFY bloguser_perm_edit ENUM('no','own','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'\" );\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms\n\t\t\tMODIFY bloggroup_perm_edit ENUM('no','own','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'\" );\n\t\ttask_end();\n\n\t\t// fp> Note: do NOT put back and \"add upgrades\" comment here. The comment is OUTSIDE of the block now!\n\n\t\tset_upgrade_checkpoint( '11430' );\n\t}\n\n\tif( upg_task_start( 11440, 'Upgrading base domains table...' ) )\n\t{\t// part of 6.5.0\n\t\t$DB->query( \"ALTER TABLE T_basedomains\n\t\t\tMODIFY dom_name VARCHAR(250) COLLATE utf8_bin NOT NULL DEFAULT ''\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11450, 'Upgrading blog-group permissions table...' ) )\n\t{\t// part of 6.6.0\n\t\t$DB->query( \"ALTER TABLE T_coll_group_perms\n\t\t\tADD COLUMN bloggroup_perm_item_type ENUM('standard','restricted','admin') COLLATE ascii_general_ci NOT NULL default 'standard' AFTER bloggroup_perm_poststatuses,\n\t\t\tDROP COLUMN bloggroup_perm_page,\n\t\t\tDROP COLUMN bloggroup_perm_intro,\n\t\t\tDROP COLUMN bloggroup_perm_podcast,\n\t\t\tDROP COLUMN bloggroup_perm_sidebar\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11453, 'Upgrading blog-user permissions table...' ) )\n\t{\t// part of 6.6.0\n\t\t$DB->query( \"ALTER TABLE T_coll_user_perms\n\t\t\tADD COLUMN bloguser_perm_item_type ENUM('standard','restricted','admin') COLLATE ascii_general_ci NOT NULL default 'standard' AFTER bloguser_perm_poststatuses,\n\t\t\tDROP COLUMN bloguser_perm_page,\n\t\t\tDROP COLUMN bloguser_perm_intro,\n\t\t\tDROP COLUMN bloguser_perm_podcast,\n\t\t\tDROP COLUMN bloguser_perm_sidebar\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11456, 'Upgrade post types table...' ) )\n\t{\t// part of 6.6.0\n\t\t$DB->query( \"ALTER TABLE T_items__type\n\t\t\tADD COLUMN ityp_perm_level ENUM( 'standard', 'restricted', 'admin' ) COLLATE ascii_general_ci NOT NULL default 'standard'\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11460, 'Creating table for PostType-to-Collection relationships...' ) )\n\t{\t// part of 6.6.0\n\t\tdb_create_table( 'T_items__type_coll', '\n\t\t\titc_ityp_ID int(11) unsigned NOT NULL,\n\t\t\titc_coll_ID int(11) unsigned NOT NULL,\n\t\t\tPRIMARY KEY (itc_ityp_ID, itc_coll_ID),\n\t\t\tUNIQUE itemtypecoll ( itc_ityp_ID, itc_coll_ID )' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11463, 'Updating collection permissions...' ) )\n\t{\t// part of 6.6.0\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t  SET bloggroup_perm_item_type = \"restricted\"\n\t\t\tWHERE bloggroup_perm_item_type = \"standard\"' );\n\t\t$DB->query( 'UPDATE T_coll_user_perms\n\t\t\t  SET bloguser_perm_item_type = \"restricted\"\n\t\t\tWHERE bloguser_perm_item_type = \"standard\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11466, 'Updating post types table...' ) )\n\t{\t// part of 6.6.0\n\t\t$DB->query( 'UPDATE T_items__type SET\n\t\t\tityp_perm_level = CASE\n\t\t\t\tWHEN ityp_ID = \"1\"    THEN \"standard\"\n\t\t\t\tWHEN ityp_ID = \"100\"  THEN \"standard\"\n\t\t\t\tWHEN ityp_ID = \"200\"  THEN \"standard\"\n\t\t\t\tWHEN ityp_ID = \"1000\" THEN \"restricted\"\n\t\t\t\tWHEN ityp_ID = \"1400\" THEN \"restricted\"\n\t\t\t\tWHEN ityp_ID = \"1500\" THEN \"restricted\"\n\t\t\t\tWHEN ityp_ID = \"1520\" THEN \"restricted\"\n\t\t\t\tWHEN ityp_ID = \"1530\" THEN \"restricted\"\n\t\t\t\tWHEN ityp_ID = \"1570\" THEN \"restricted\"\n\t\t\t\tWHEN ityp_ID = \"1600\" THEN \"restricted\"\n\t\t\t\tWHEN ityp_ID = \"2000\" THEN \"standard\"\n\t\t\t\tWHEN ityp_ID = \"3000\" THEN \"admin\"\n\t\t\t\tWHEN ityp_ID = \"4000\" THEN \"admin\"\n\t\t\t\tELSE ityp_perm_level\n\t\t\tEND' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11470, 'Updating widgets table...' ) )\n\t{\t// part of 6.6.0\n\t\t// Disable all widgets of Menu container for all \"Main\" collections\n\t\t$DB->query( 'UPDATE '.$tableprefix.'widget\n\t\t\tINNER JOIN T_blogs ON blog_ID = wi_coll_ID AND blog_type = \"main\"\n\t\t\t  SET wi_enabled = 0\n\t\t\tWHERE wi_sco_name = \"Menu\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11480, 'Updating table for PostType-to-Collection relationships...' ) )\n\t{\t// part of 6.6.1\n\t\t// Get all collections:\n\t\t$collections_SQL = new SQL();\n\t\t$collections_SQL->SELECT( 'blog_ID, blog_type' );\n\t\t$collections_SQL->FROM( 'T_blogs' );\n\t\t$collections = $DB->get_assoc( $collections_SQL->get() );\n\t\t// Get all post types:\n\t\t$posttypes_SQL = new SQL();\n\t\t$posttypes_SQL->SELECT( 'ityp_ID' );\n\t\t$posttypes_SQL->FROM( 'T_items__type' );\n\t\t$posttypes = $DB->get_col( $posttypes_SQL->get() );\n\t\t// Enable post types for the collections:\n\t\t$posttypes_collections = array();\n\t\tforeach( $collections as $collection_ID => $collection_type )\n\t\t{\n\t\t\tswitch( $collection_type )\n\t\t\t{ // Set what post types should not be enabled depending on the collection type:\n\t\t\t\tcase 'main':\n\t\t\t\tcase 'photo':\n\t\t\t\t\t$skip_posttypes = array( 100, 200, 2000, 5000 );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'forum':\n\t\t\t\t\t$skip_posttypes = array( 1, 100, 2000, 5000 );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'manual':\n\t\t\t\t\t$skip_posttypes = array( 1, 200, 2000, 5000 );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: // 'std'\n\t\t\t\t\t$skip_posttypes = array( 100, 200, 5000 );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tforeach( $posttypes as $posttype_ID )\n\t\t\t{\n\t\t\t\tif( in_array( $posttype_ID, $skip_posttypes ) )\n\t\t\t\t{ // Skip(Don't enable) this post type for the collection:\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t$posttypes_collections[] = '( '.$posttype_ID.', '.$collection_ID.' )';\n\t\t\t}\n\t\t}\n\t\tif( count( $posttypes_collections ) )\n\t\t{ // Update the relationships only when at least one is required:\n\t\t\t$DB->query( 'REPLACE INTO T_items__type_coll\n\t\t\t\t( itc_ityp_ID, itc_coll_ID )\n\t\t\t\tVALUES '.implode( ', ', $posttypes_collections ) );\n\t\t}\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11482, 'Updating default post types for forums and manual collections...' ) )\n\t{\t// part of 6.6.3\n\t\t$item_types = array(\n\t\t\t\t'manual' => array( 'ID' => 100, 'name' => 'Manual Page' ),\n\t\t\t\t'forum'  => array( 'ID' => 200, 'name' => 'Forum Topic' ),\n\t\t\t);\n\t\t$update_default_type_sql = array();\n\t\tforeach( $item_types as $collection_type => $item_type )\n\t\t{\n\t\t\t// Try to find an item type by ID or name:\n\t\t\t$item_type_ID = $DB->get_var( 'SELECT ityp_ID\n\t\t\t\t FROM T_items__type\n\t\t\t\tWHERE ityp_ID = '.$item_type['ID'].'\n\t\t\t\t   OR ityp_name = '.$DB->quote( $item_type['name'] ) );\n\t\t\tif( empty( $item_type_ID ) )\n\t\t\t{ // Item type is not found in DB, Skip it:\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Get all collections with type:\n\t\t\t$type_collection_IDs = $DB->get_col( 'SELECT blog_ID\n\t\t\t\t FROM T_blogs\n\t\t\t\tWHERE blog_type = '.$DB->quote( $collection_type ) );\n\t\t\tforeach( $type_collection_IDs as $type_collection_ID )\n\t\t\t{\n\t\t\t\t$update_default_type_sql[] = '( '.$type_collection_ID.', \"default_post_type\", '.$DB->quote( $item_type_ID ).' )';\n\t\t\t}\n\t\t}\n\t\tif( count( $update_default_type_sql ) > 0 )\n\t\t{ // Update default post types of collections:\n\t\t\t$DB->query( 'REPLACE INTO T_coll_settings ( cset_coll_ID, cset_name, cset_value )\n\t\t\t\tVALUES '.implode( ',', $update_default_type_sql ) );\n\t\t}\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11483, 'Updating general settings...' ) )\n\t{\t// part of 6.6.4\n\t\t$DB->query( 'UPDATE T_settings\n\t\t\t\tSET set_value = '.$DB->quote( 'no' ).'\n\t\t\tWHERE set_name = '.$DB->quote( 'newusers_canregister' ).'\n\t\t\t\tAND set_value = '.$DB->quote( '0' ) );\n\t\ttask_end();\n\n\t\ttask_begin( 'Updating user settings...' );\n\t\t$DB->query( 'ALTER TABLE T_users__usersettings CHANGE COLUMN uset_name uset_name VARCHAR( 50 ) COLLATE ascii_general_ci NOT NULL' );\n\t\t$DB->query( 'ALTER TABLE T_pluginusersettings CHANGE COLUMN puset_name puset_name VARCHAR( 50 ) COLLATE ascii_general_ci NOT NULL' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11484, 'Upgrade table item types...' ) )\n\t{\t// part of 6.6.4\n\t\t$DB->query( \"ALTER TABLE T_items__type\n\t\t\tADD ityp_use_parent ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never' AFTER ityp_use_url\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11485, 'Upgrade table item types...' ) )\n\t{\t// part of 6.6.6\n\t\t$DB->query( 'ALTER TABLE T_items__type\n\t\t\tADD ityp_allow_breaks TINYINT DEFAULT 1 AFTER ityp_allow_html' );\n\t\t$DB->query( 'UPDATE T_items__type\n\t\t\tSET ityp_allow_breaks = 0,\n\t\t\t    ityp_allow_featured = 0\n\t\t\tWHERE ityp_ID >= 1400\n\t\t\t  AND ityp_ID <= 1600' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11486, 'Upgrade timestamp fields...' ) )\n\t{\t// part of 6.6.6\n\t\t$DB->query( 'ALTER TABLE T_email__log\n\t\t\tMODIFY emlog_timestamp TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_email__returns\n\t\t\tMODIFY emret_timestamp TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_syslog\n\t\t\tMODIFY slg_timestamp TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_items__prerendering\n\t\t\tMODIFY itpr_datemodified TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_comments__prerendering\n\t\t\tMODIFY cmpr_datemodified TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__prerendering\n\t\t\tMODIFY mspr_datemodified TIMESTAMP NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_users__reports\n\t\t\tMODIFY urep_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_items__version\n\t\t\tMODIFY iver_edit_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__thread\n\t\t\tMODIFY thrd_datemodified datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__message\n\t\t\tMODIFY msg_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\t$DB->query( 'ALTER TABLE T_messaging__contact\n\t\t\tMODIFY mct_last_contact_datetime datetime NOT NULL DEFAULT \\'2000-01-01 00:00:00\\'' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11600, 'Updating blogs settings...' ) )\n\t{\t// part of 6.7.0\n\n\t\t// Update the assets urls to 'relative' type of the blogs that have absolute base url:\n\t\t// (All other blogs will have the 'basic' url type by default)\n\t\t$blogs_abs_url_SQL = new SQL();\n\t\t$blogs_abs_url_SQL->SELECT( 'blog_ID' );\n\t\t$blogs_abs_url_SQL->FROM( 'T_blogs' );\n\t\t$blogs_abs_url_SQL->WHERE( 'blog_access_type = \"absolute\"' );\n\t\t$blogs_abs_url = $DB->get_col( $blogs_abs_url_SQL->get() );\n\t\tif( count( $blogs_abs_url ) )\n\t\t{ // Update only when at least one blog has an absolute base url\n\t\t\t$blogs_abs_url_values = '';\n\t\t\tforeach( $blogs_abs_url as $b => $blog_abs_url_ID )\n\t\t\t{\n\t\t\t\tif( $b != 0 )\n\t\t\t\t{\n\t\t\t\t\t$blogs_abs_url_values .= ', ';\n\t\t\t\t}\n\t\t\t\t$blogs_abs_url_values .= '( '.$blog_abs_url_ID.', \"rsc_assets_url_type\", \"relative\" ), '\n\t\t\t\t\t.'( '.$blog_abs_url_ID.', \"media_assets_url_type\", \"relative\" ), '\n\t\t\t\t\t.'( '.$blog_abs_url_ID.', \"skins_assets_url_type\", \"relative\" )';\n\t\t\t}\n\t\t\t$DB->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )\n\t\t\t\tVALUES '.$blogs_abs_url_values );\n\t\t}\n\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11605, 'Upgrading cron logs table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( \"ALTER TABLE T_cron__log\n\t\t\tCHANGE clog_status clog_status enum('started','finished','error','timeout','warning') COLLATE ascii_general_ci not null default 'started'\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11610, 'Upgrading cron tasks table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'ALTER TABLE T_cron__task\n\t\t\tADD COLUMN ctsk_repeat_variation int(10) unsigned DEFAULT 0 AFTER ctsk_repeat_after' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11615, 'Upgrading email log table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'ALTER TABLE T_email__log\n\t\t\tMODIFY emlog_result ENUM( \"ok\", \"error\", \"blocked\", \"simulated\" ) COLLATE ascii_general_ci NOT NULL DEFAULT \"ok\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11620, 'Upgrading hitlog table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( \"ALTER TABLE T_hitlog\n\t\t\tMODIFY COLUMN hit_type ENUM('standard','rss','admin','ajax', 'service', 'api') COLLATE ascii_general_ci DEFAULT 'standard' NOT NULL\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11625, 'Update plugins table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'UPDATE T_plugins\n\t\t\t  SET plug_classname = \"shortlinks_plugin\"\n\t\t\tWHERE plug_classname = \"wikilinks_plugin\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11630, 'Upgrading plugin settings table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'ALTER TABLE T_pluginsettings\n\t\t\tMODIFY pset_name VARCHAR( 60 ) COLLATE ascii_general_ci NOT NULL' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11635, 'Upgrading email campaigns table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'ALTER TABLE T_email__campaign\n\t\t\tADD COLUMN ecmp_email_plaintext TEXT NULL AFTER ecmp_email_text,\n\t\t\tADD COLUMN ecmp_renderers       VARCHAR(255) COLLATE ascii_general_ci NOT NULL,\n\t\t\tADD COLUMN ecmp_use_wysiwyg     TINYINT(1) NOT NULL DEFAULT 0' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11640, 'Upgrading hitlog table...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_add_col( 'T_hitlog', 'hit_method', \"ENUM('unknown','GET','POST','PUT','PATCH','DELETE','COPY','HEAD','OPTIONS','LINK','UNLINK','PURGE','LOCK','UNLOCK','PROPFIND','VIEW') COLLATE ascii_general_ci DEFAULT 'unknown' NOT NULL\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11645 ) )\n\t{\t// part of 6.7.0\n\n\t\t/* ---- Install basic widgets for container \"Item Single\": ---- START */\n\t\tglobal $basic_widgets_insert_sql_rows;\n\t\t$basic_widgets_insert_sql_rows = array();\n\n\t\t/**\n\t\t * Add a widget to global array in order to insert it in DB by single SQL query later\n\t\t *\n\t\t * @param integer Blog ID\n\t\t * @param string Container name\n\t\t * @param string Type\n\t\t * @param string Code\n\t\t * @param integer Order\n\t\t * @param array|string|NULL Widget params\n\t\t * @param integer 1 - enabled, 0 - disabled\n\t\t */\n\t\tfunction add_basic_widget_11670( $blog_ID, $container_name, $code, $type, $order, $params = NULL, $enabled = 1 )\n\t\t{\n\t\t\tglobal $basic_widgets_insert_sql_rows, $DB;\n\n\t\t\tif( is_null( $params ) )\n\t\t\t{ // NULL\n\t\t\t\t$params = 'NULL';\n\t\t\t}\n\t\t\telseif( is_array( $params ) )\n\t\t\t{ // array\n\t\t\t\t$params = $DB->quote( serialize( $params ) );\n\t\t\t}\n\t\t\telse\n\t\t\t{ // string\n\t\t\t\t$params = $DB->quote( $params );\n\t\t\t}\n\n\t\t\t$basic_widgets_insert_sql_rows[] = '( '\n\t\t\t\t.$blog_ID.', '\n\t\t\t\t.$DB->quote( $container_name ).', '\n\t\t\t\t.$order.', '\n\t\t\t\t.$enabled.', '\n\t\t\t\t.$DB->quote( $type ).', '\n\t\t\t\t.$DB->quote( $code ).', '\n\t\t\t\t.$params.' )';\n\t\t}\n\n\t\t$collections = $DB->get_assoc( 'SELECT blog_ID, blog_type FROM T_blogs ORDER BY blog_ID' );\n\t\tforeach( $collections as $coll_ID => $coll_type )\n\t\t{\n\t\t\ttask_begin( 'Installing default \"Item Single\" widgets for collection #'.$coll_ID.'... ' );\n\t\t\tadd_basic_widget_11670( $coll_ID, 'Item Single', 'item_content', 'core', 20 );\n\t\t\tif( $coll_type != 'forum' )\n\t\t\t{\t// Item Tags:\n\t\t\t\tadd_basic_widget_11670( $coll_ID, 'Item Single', 'item_tags', 'core', 30 );\n\t\t\t}\n\t\t\tif( $coll_type == 'std' )\n\t\t\t{\t// About Author:\n\t\t\t\tadd_basic_widget_11670( $coll_ID, 'Item Single', 'item_about_author', 'core', 40 );\n\t\t\t}\n\t\t\tif( $coll_type == 'std' || $coll_type == 'manual' )\n\t\t\t{\t// Small Print:\n\t\t\t\tadd_basic_widget_11670( $coll_ID, 'Item Single', 'item_small_print', 'core', 50, array( 'format' => ( $coll_type == 'std' ? 'standard' : 'revision' ) ) );\n\t\t\t}\n\t\t\t// Seen by:\n\t\t\tadd_basic_widget_11670( $coll_ID, 'Item Single', 'item_seen_by', 'core', 60, NULL,\n\t\t\t\t// Disable this widget for \"forum\" collections by default:\n\t\t\t\t$coll_type == 'forum' ? 0 : 1 );\n\t\t\ttask_end();\n\t\t}\n\n\t\tif( ! empty( $basic_widgets_insert_sql_rows ) )\n\t\t{\t// Insert the widget records by single SQL query:\n\t\t\t$DB->query( 'INSERT INTO T_widget( wi_coll_ID, wi_sco_name, wi_order, wi_enabled, wi_type, wi_code, wi_params ) '\n\t\t\t\t\t\t\t\t .'VALUES '.implode( ', ', $basic_widgets_insert_sql_rows ) );\n\t\t}\n\t\t/* ---- Install basic widgets for container \"Item Single\": ---- END */\n\n\t\tupg_task_end( false );\n\t}\n\n\tif( upg_task_start( 11650, 'Upgrading user organizations table...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'ALTER TABLE T_users__organization\n\t\t\tADD COLUMN org_owner_user_ID INT(11) UNSIGNED NOT NULL AFTER org_ID,\n\t\t\tADD COLUMN org_accept        ENUM( \"yes\", \"owner\", \"no\" ) COLLATE ascii_general_ci NOT NULL DEFAULT \"owner\"' );\n\t\t$DB->query( 'UPDATE T_users__organization SET org_owner_user_ID = 1' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11655, 'Creating table for Poll questions...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_create_table( 'T_polls__question', '\n\t\t\tpqst_ID            INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\tpqst_owner_user_ID INT(11) UNSIGNED NOT NULL,\n\t\t\tpqst_question_text VARCHAR(2000) NULL,\n\t\t\tPRIMARY KEY (pqst_ID)' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11660, 'Creating table for Poll options...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_create_table( 'T_polls__option', '\n\t\t\tpopt_ID          INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\tpopt_pqst_ID     INT(11) UNSIGNED NOT NULL,\n\t\t\tpopt_option_text VARCHAR(2000) NULL,\n\t\t\tpopt_order       INT(11) NOT NULL,\n\t\t\tPRIMARY KEY (popt_ID)' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11665, 'Creating table for Poll answers...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_create_table( 'T_polls__answer', '\n\t\t\tpans_ID      INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n\t\t\tpans_pqst_ID INT(11) UNSIGNED NOT NULL,\n\t\t\tpans_user_ID INT(11) UNSIGNED NOT NULL,\n\t\t\tpans_popt_ID INT(11) UNSIGNED NOT NULL,\n\t\t\tPRIMARY KEY (pans_ID),\n\t\t\tUNIQUE pans_pqst_user_ID ( pans_pqst_ID, pans_user_ID )' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11670, 'Creating default polls...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'INSERT INTO T_polls__question ( pqst_owner_user_ID, pqst_question_text )\n\t\t\tVALUES ( 1, \"What is your favorite b2evolution feature?\" )' );\n\t\t$DB->query( 'INSERT INTO T_polls__option ( popt_pqst_ID, popt_option_text, popt_order )\n\t\t\tVALUES ( 1, \"Multiple blogs\",          1 ),\n\t\t\t\t\t\t ( 1, \"Photo Galleries\",         2 ),\n\t\t\t\t\t\t ( 1, \"Forums\",                  3 ),\n\t\t\t\t\t\t ( 1, \"Online Manuals\",          4 ),\n\t\t\t\t\t\t ( 1, \"Newsletters / E-mailing\", 5 ),\n\t\t\t\t\t\t ( 1, \"Easy Maintenance\",        6 )' );\n\t\t$DB->query( 'INSERT INTO T_polls__answer ( pans_pqst_ID, pans_user_ID, pans_popt_ID )\n\t\t\tVALUES ( 1, 5, 1 ),\n\t\t\t\t\t\t ( 1, 6, 2 ),\n\t\t\t\t\t\t ( 1, 7, 2 ),\n\t\t\t\t\t\t ( 1, 2, 2 ),\n\t\t\t\t\t\t ( 1, 3, 3 ),\n\t\t\t\t\t\t ( 1, 4, 3 ),\n\t\t\t\t\t\t ( 1, 1, 6 )' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11675, 'Creating table for secondary user groups...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_create_table( 'T_users__secondary_user_groups', '\n\t\t\t\tsug_user_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\tsug_grp_ID  INT(11) UNSIGNED NOT NULL,\n\t\t\t\tPRIMARY KEY ( sug_user_ID, sug_grp_ID )' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11680, 'Upgrading groups table...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_add_col( 'T_groups', 'grp_usage', \"ENUM('primary','secondary') COLLATE ascii_general_ci NOT NULL DEFAULT 'primary' AFTER grp_name\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11685, 'Upgrading files table...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_add_col( 'T_files', 'file_download_count', 'INT(10) UNSIGNED NOT NULL DEFAULT 0 AFTER file_can_be_main_profile' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11690, 'Updating collection user/group permissions...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_add_col( 'T_coll_user_perms', 'bloguser_perm_meta_comment', 'tinyint NOT NULL default 0 AFTER bloguser_perm_edit_cmt' );\n\t\tdb_add_col( 'T_coll_group_perms', 'bloggroup_perm_meta_comment', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_edit_cmt' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11695, 'Upgrade table item types...' ) )\n\t{\t// part of 6.7.0\n\t\t// Add item type usage field and new setting \"Treat as Podcast Media\" to use it specially for \"Podcast\" item type:\n\t\t$DB->query( 'ALTER TABLE T_items__type\n\t\t\tADD COLUMN ityp_usage   VARCHAR(20) COLLATE ascii_general_ci NOT NULL DEFAULT \"post\" AFTER ityp_backoffice_tab,\n\t\t\tADD COLUMN ityp_podcast TINYINT(1) DEFAULT 0 AFTER ityp_use_url' );\n\t\t// Replace old field \"ityp_backoffice_tab\" with new \"ityp_usage\":\n\t\t$DB->query( 'UPDATE T_items__type SET\n\t\t\tityp_usage = CASE\n\t\t\t\tWHEN ( ityp_backoffice_tab = \"Pages\" OR ityp_name = \"Page\" ) THEN \"page\"\n\t\t\t\tWHEN ityp_name = \"Intro-Front\"   THEN \"intro-front\"\n\t\t\t\tWHEN ityp_name = \"Intro-Main\"    THEN \"intro-main\"\n\t\t\t\tWHEN ityp_name = \"Intro-Cat\"     THEN \"intro-cat\"\n\t\t\t\tWHEN ityp_name = \"Intro-Tag\"     THEN \"intro-tag\"\n\t\t\t\tWHEN ityp_name = \"Intro-Sub\"     THEN \"intro-sub\"\n\t\t\t\tWHEN ityp_name = \"Intro-All\"     THEN \"intro-all\"\n\t\t\t\tWHEN ityp_name = \"Sidebar link\"  THEN \"special\"\n\t\t\t\tWHEN ityp_name = \"Advertisement\" THEN \"special\"\n\t\t\t\tELSE \"post\"\n\t\t\tEND' );\n\t\tdb_drop_col( 'T_items__type', 'ityp_backoffice_tab' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11700, 'Update item types for new created fields...' ) )\n\t{\t// part of 6.7.0\n\t\t// Update name of podcast item type:\n\t\t$DB->query( 'UPDATE T_items__type\n\t\t\t  SET ityp_name = \"Podcast Episode\"\n\t\t\tWHERE ityp_name = \"Podcast\"' );\n\t\t// Enable new podcast setting for item type \"Podcast\"\n\t\t$DB->query( 'UPDATE T_items__type\n\t\t\t  SET ityp_podcast = \"1\"\n\t\t\tWHERE ityp_ID = \"2000\"' );\n\t\t// Delete the reserved item type:\n\t\t$DB->query( 'DELETE FROM T_items__type\n\t\t\tWHERE ityp_ID = \"5000\"' );\n\t\t// Update name of page item type:\n\t\t$DB->query( 'UPDATE T_items__type\n\t\t\t  SET ityp_name = \"Standalone Page\"\n\t\t\tWHERE ityp_usage = \"page\"\n\t\t\t  AND ityp_name = \"Page\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11705, 'Upgrading users organization table...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_add_col( 'T_users__organization', 'org_perm_role', \"ENUM('owner and member', 'owner') COLLATE ascii_general_ci NOT NULL DEFAULT 'owner and member' AFTER org_accept\" );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11710, 'Deleting back-office skin \"chicago\"...' ) )\n\t{\t// part of 6.7.0\n\t\t// Update the back-office skin of all users to default \"bootstrap\":\n\t\t$DB->query( 'DELETE FROM T_users__usersettings WHERE uset_name = \"admin_skin\"' );\n\t\t// Try to delete skin folder:\n\t\tglobal $adminskins_path;\n\t\t$skin_chicago_path = $adminskins_path.'chicago/';\n\t\tif( file_exists( $skin_chicago_path ) && ! rmdir_r( $skin_chicago_path ) )\n\t\t{\t// Display a warning if no permissions to delete the skin folder:\n\t\t\techo get_install_format_text( '<span class=\"text-warning\"><evo:warning>'\n\t\t\t\t\t.'WARNING: the Chicago admin skin is no longer supported. Please delete the folder <code>'.$skin_chicago_path.'</code>'\n\t\t\t\t.'</evo:warning></span>' );\n\t\t}\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11715, 'Replace widgets \"Simple Sidebar Links list\" and \"Simple Linkblog Links list\" with \"Universal Item list\"...' ) )\n\t{\t// part of 6.7.0\n\t\t$old_widgets = $DB->get_results( 'SELECT wi_ID, wi_code, wi_params\n\t\t\t FROM T_widget\n\t\t\tWHERE wi_type = \"core\"\n\t\t\t  AND wi_code IN ( \"linkblog\", \"coll_link_list\" )', OBJECT,\n\t\t\t'Get widgets \"linkblog\" and \"coll_link_list\" to replace them with \"coll_item_list\"' );\n\t\tforeach( $old_widgets as $old_widget )\n\t\t{\n\t\t\t// Get current params of each widget to don't miss default settings:\n\t\t\t$widget_params = empty( $old_widget->wi_params ) ? array() : unserialize( $old_widget->wi_params );\n\t\t\t// Rewrite default params with existing widget params from DB:\n\t\t\tswitch( $old_widget->wi_code )\n\t\t\t{\n\t\t\t\tcase 'linkblog':\n\t\t\t\t\t// Keep default params for old widget \"Simple Linkblog Links list\":\n\t\t\t\t\t$widget_params = array_merge( array(\n\t\t\t\t\t\t\t'title'                => T_('Linkblog'),\n\t\t\t\t\t\t\t'item_group_by'        => 'chapter',\n\t\t\t\t\t\t\t'item_title_link_type' => 'auto',\n\t\t\t\t\t\t\t'item_type'            => '',\n\t\t\t\t\t\t\t'item_type_usage'      => 'special',\n\t\t\t\t\t\t), $widget_params );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'coll_link_list':\n\t\t\t\t\t// Keep default params for old widget \"Simple Sidebar Links list\":\n\t\t\t\t\t$widget_params = array_merge( array(\n\t\t\t\t\t\t\t'title'                => T_('Links'),\n\t\t\t\t\t\t\t'item_title_link_type' => 'auto',\n\t\t\t\t\t\t\t'item_type'            => '',\n\t\t\t\t\t\t\t'item_type_usage'      => 'special',\n\t\t\t\t\t\t), $widget_params );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$DB->query( 'UPDATE T_widget\n\t\t\t\t\tSET wi_code = \"coll_item_list\", wi_params = '.$DB->quote( serialize( $widget_params ) ).'\n\t\t\t\tWHERE wi_ID = '.$old_widget->wi_ID );\n\t\t}\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11720, 'Replace renamed widgets...' ) )\n\t{\t// part of 6.7.0\n\t\t// It's ok to run several queries in a single block because they don't change the DB structure, so they practically can't fail:\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t  SET wi_code = \"item_seen_by\"\n\t\t\tWHERE wi_type = \"core\"\n\t\t\t  AND wi_code = \"coll_seen_by\"' );\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t  SET wi_code = \"item_small_print\"\n\t\t\tWHERE wi_type = \"core\"\n\t\t\t  AND wi_code = \"coll_small_print\"' );\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t  SET wi_code = \"item_tags\"\n\t\t\tWHERE wi_type = \"core\"\n\t\t\t  AND wi_code = \"coll_item_tags\"' );\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t  SET wi_code = \"item_content\"\n\t\t\tWHERE wi_type = \"core\"\n\t\t\t  AND wi_code = \"coll_item_content\"' );\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t  SET wi_code = \"item_about_author\"\n\t\t\tWHERE wi_type = \"core\"\n\t\t\t  AND wi_code = \"coll_about_author\"' );\n\t\t$DB->query( 'UPDATE T_widget\n\t\t\t  SET wi_code = \"coll_member_count\"\n\t\t\tWHERE wi_type = \"core\"\n\t\t\t  AND wi_code = \"member_count\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11725, 'Upgrade table post type...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_add_col( 'T_items__type', 'ityp_front_instruction', 'tinyint default 0 AFTER ityp_template_name' );\n\t\tdb_add_col( 'T_items__type', 'ityp_back_instruction', 'tinyint default 0 AFTER ityp_front_instruction' );\n\t\tdb_add_col( 'T_items__type', 'ityp_instruction', 'text NULL default NULL AFTER ityp_back_instruction' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11730, 'Upgrade table invitation codes...' ) )\n\t{\t// part of 6.7.0\n\t\tdb_add_col( 'T_users__invitation_code', 'ivc_level', 'int unsigned NULL' );\n\t\t$DB->query( 'ALTER TABLE T_users__invitation_code\n\t\t\tMODIFY COLUMN ivc_grp_ID int(4) NULL' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11735, 'Upgrade table files...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'ALTER TABLE T_files\n\t\t\tMODIFY file_type ENUM( \"image\", \"audio\", \"video\", \"other\" ) COLLATE ascii_general_ci NULL DEFAULT NULL' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11740, 'Update table user settings for new post/comment moderation settings...' ) )\n\t{\t// part of 6.7.0\n\t\t$DB->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )\n\t\t\tSELECT uset_user_ID, IF( uset_name = \"notify_comment_moderation\", \"notify_edit_cmt_moderation\", \"notify_edit_pst_moderation\" ), uset_value\n\t\t\t  FROM T_users__usersettings\n\t\t\t WHERE uset_name IN ( \"notify_comment_moderation\", \"notify_post_moderation\" )' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11745, 'Upgrading items table...' ) )\n\t{\t// part of 6.7.1\n\t\tdb_add_col( 'T_items__item', 'post_notifications_flags', \"SET('moderators_notified','members_notified','community_notified','pings_sent') NOT NULL DEFAULT '' AFTER post_notifications_ctsk_ID\" );\n\t\t$DB->query( 'UPDATE T_items__item\n\t\t\t  SET post_notifications_flags = \"moderators_notified,members_notified,community_notified,pings_sent\"\n\t\t\tWHERE post_notifications_status = \"finished\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11750, 'Upgrading comments table...' ) )\n\t{\t// part of 6.7.1\n\t\tdb_add_col( 'T_comments', 'comment_notif_flags', \"SET('moderators_notified','members_notified','community_notified') NOT NULL DEFAULT ''\" );\n\t\t$DB->query( 'UPDATE T_comments\n\t\t\t  SET comment_notif_flags = \"moderators_notified,members_notified,community_notified\"\n\t\t\tWHERE comment_notif_status = \"finished\"' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11755, 'Creating collection user favorites table...' ) )\n\t{\t// part of 6.7.1-beta\n\t\tdb_create_table( 'T_coll_user_favs', '\n\t\t\t\tcufv_user_ID INT(10) UNSIGNED NOT NULL,\n\t\t\t\tcufv_blog_ID INT(11) UNSIGNED NOT NULL,\n\t\t\t\tPRIMARY KEY cufv_pk ( cufv_user_ID, cufv_blog_ID )' );\n\n\t\t// If system user count is less than or equal to 10, Add favorites based on previous blog_favorite settings\n\t\tload_funcs( 'tools/model/_system.funcs.php' );\n\t\t$user_IDs = system_get_user_IDs();\n\n\t\t$colls_SQL = new SQL( 'Get ALL collections' );\n\t\t$colls_SQL->SELECT( 'blog_ID, blog_owner_user_ID, blog_favorite' );\n\t\t$colls_SQL->FROM( 'T_blogs' );\n\t\t$colls_SQL->ORDER_BY( 'blog_ID' );\n\t\t$colls = $DB->get_results( $colls_SQL->get() );\n\n\t\t$user_colls_count = array();\n\t\t$insert_values = array();\n\t\tforeach( $colls as $coll )\n\t\t{\t// Collection owners will automatically favorite their collections:\n\t\t\tif( ! isset( $user_colls_count[ $coll->blog_owner_user_ID ] ) )\n\t\t\t{\t// Initialize a count of favorite collections for each user:\n\t\t\t\t$user_colls_count[ $coll->blog_owner_user_ID ] = 1;\n\t\t\t}\n\t\t\tif( $user_colls_count[ $coll->blog_owner_user_ID ] <= 7 )\n\t\t\t{\t// Make favorite only first 7 collections for each user:\n\t\t\t\t$insert_values[] = '( '.$coll->blog_ID.', '.$coll->blog_owner_user_ID.' )';\n\t\t\t\t$user_colls_count[ $coll->blog_owner_user_ID ]++;\n\t\t\t}\n\t\t}\n\n\t\tif( count( $user_IDs ) <= 10 )\n\t\t{\t// Make collections favorite for other users only if system has <= 10 users:\n\t\t\tforeach( $user_IDs as $user_ID )\n\t\t\t{\n\t\t\t\tif( ! isset( $user_colls_count[ $user_ID ] ) )\n\t\t\t\t{\t// Initialize a count of favorite collections for each user:\n\t\t\t\t\t$user_colls_count[ $user_ID ] = 1;\n\t\t\t\t}\n\t\t\t\tforeach( $colls as $coll )\n\t\t\t\t{\n\t\t\t\t\tif( $user_colls_count[ $user_ID ] > 7 )\n\t\t\t\t\t{\t// Make favorite only first 7 collections for each user:\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif( $coll->blog_favorite && $user_ID != $coll->blog_owner_user_ID )\n\t\t\t\t\t{\t// Skip collection owner, because it has this collection as favorite automatically above:\n\t\t\t\t\t\t$insert_values[] = '( '.$coll->blog_ID.', '.$user_ID.' )';\n\t\t\t\t\t\t$user_colls_count[ $user_ID ]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( count( $insert_values ) )\n\t\t{\t// Insert rows of favorite collections per users in DB:\n\t\t\t$DB->query( 'INSERT INTO T_coll_user_favs ( cufv_blog_ID, cufv_user_ID ) VALUES '.implode( ', ', $insert_values ) );\n\t\t}\n\n\t\t// Drop blog_favorite column:\n\t\tdb_drop_col( 'T_blogs', 'blog_favorite' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11760, 'Upgrading email campaigns table...' ) )\n\t{\t// part of 6.7.1-beta\n\t\tdb_add_col( 'T_email__campaign', 'ecmp_send_ctsk_ID', 'INT(10) UNSIGNED NULL DEFAULT NULL' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11765, 'Upgrading files table...' ) )\n\t{ // part of 6.7.1-beta\n\t\tdb_add_col( 'T_files', 'file_creator_user_ID', 'int(10) unsigned NULL default NULL AFTER file_ID' );\n\n\t\t// Update file_creator_user_ID with the owner of the first link to a comment/post/message\n\t\t$SQL = 'UPDATE T_files AS t1,\n\t\t\t\t(\n\t\t\t\t\tSELECT a.link_file_ID, a.link_creator_user_ID\n\t\t\t\t\tFROM T_links AS a\n\t\t\t\t\tINNER JOIN\n\t\t\t\t\t(\n\t\t\t\t\t\tSELECT link_file_ID, MIN( link_ID ) AS min_ID\n\t\t\t\t\t\tFROM T_links\n\t\t\t\t\t\tGROUP BY link_file_ID\n\t\t\t\t\t) AS b\n\t\t\t\t\t\tON a.link_file_ID = b.link_file_ID AND a.link_ID = b.min_ID\n\t\t\t\t) AS t2\n\t\t\t\tSET\n\t\t\t\t\tt1.file_creator_user_ID = t2.link_creator_user_ID\n\t\t\t\tWHERE\n\t\t\t\t\tt1.file_ID = t2.link_file_ID';\n\t\t$DB->query( $SQL );\n\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11770, 'Upgrading files table...' ) )\n\t{ // part of 6.7.3-beta\n\t\tdb_add_index( 'T_files', 'file_creator_user_id', 'file_creator_user_id' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11775, 'Upgrading posts and comments statuses depeding on max allowed status by their collections...' ) )\n\t{\t// part of 6.7.4-stable\n\t\t$BlogCache = & get_BlogCache();\n\t\t$BlogCache->load_all( 'ID', 'ASC' );\n\t\tforeach( $BlogCache->cache as $Blog )\n\t\t{\n\t\t\t$Blog->update_reduced_status_data();\n\t\t}\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11780, 'Upgrading subscription settings of collections...' ) )\n\t{\t// part of 6.7.4-stable\n\t\t$DB->query( 'REPLACE INTO T_coll_settings ( cset_coll_ID, cset_name, cset_value )\n\t\t\t\tSELECT cset_coll_ID, \"allow_comment_subscriptions\", 1\n\t\t\t\t  FROM T_coll_settings\n\t\t\t\t WHERE cset_name = \"allow_subscriptions\"\n\t\t\t\t   AND cset_value = 1' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11785, 'Upgrading email log table...' ) )\n\t{\t// part of 6.7.7-stable\n\t\t$DB->query( 'ALTER TABLE T_email__log\n\t\t\tMODIFY emlog_message MEDIUMTEXT DEFAULT NULL' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11790, 'Fix number of favorite collections per each user...' ) )\n\t{\t// part of 6.7.7-stable\n\t\t// Get users which have more than 20 favorite collections:\n\t\t$more_fav_coll_users_SQL = new SQL();\n\t\t$more_fav_coll_users_SQL->SELECT( 'cufv_user_ID' );\n\t\t$more_fav_coll_users_SQL->FROM( 'T_coll_user_favs' );\n\t\t$more_fav_coll_users_SQL->GROUP_BY( 'cufv_user_ID' );\n\t\t$more_fav_coll_users_SQL->HAVING( 'COUNT( cufv_blog_ID ) > 20' );\n\t\t$more_fav_coll_user_IDs = $DB->get_col( $more_fav_coll_users_SQL->get() );\n\n\t\tforeach( $more_fav_coll_user_IDs as $more_fav_coll_user_ID )\n\t\t{\n\t\t\t// Get first 7 collections which should be kept as favorite after upgrade:\n\t\t\t$first_colls_SQL = new SQL();\n\t\t\t$first_colls_SQL->SELECT( 'cufv_blog_ID' );\n\t\t\t$first_colls_SQL->FROM( 'T_coll_user_favs' );\n\t\t\t$first_colls_SQL->WHERE( 'cufv_user_ID = '.$more_fav_coll_user_ID );\n\t\t\t$first_colls_SQL->ORDER_BY( 'cufv_blog_ID' );\n\t\t\t$first_colls_SQL->LIMIT( '7' );\n\t\t\t$first_coll_IDs = $DB->get_col( $first_colls_SQL->get() );\n\n\t\t\tif( count( $first_coll_IDs ) )\n\t\t\t{\t// Delete collections from favorite list:\n\t\t\t\t$DB->query( 'DELETE FROM T_coll_user_favs\n\t\t\t\t\tWHERE cufv_user_ID = '.$more_fav_coll_user_ID.'\n\t\t\t\t\t  AND cufv_blog_ID NOT IN ( '.$DB->quote( $first_coll_IDs ).' )' );\n\t\t\t}\n\t\t}\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11795, 'Upgrading posts table...' ) )\n\t{\t// part of 6.7.7-stable\n\t\t$DB->query( 'ALTER TABLE T_items__item\n\t\t\tMODIFY post_excerpt_autogenerated  TINYINT(1) NOT NULL DEFAULT 1' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11800, 'Upgrading collection-user permissions table...' ) )\n\t{\t// part of 6.7.7-stable\n\t\t$DB->query( 'ALTER TABLE T_coll_user_perms\n\t\t\tADD bloguser_perm_analytics tinyint NOT NULL default 0' );\n\t\t$DB->query( 'UPDATE T_coll_user_perms\n\t\t\t  SET bloguser_perm_analytics = 1\n\t\t\tWHERE bloguser_perm_properties = 1' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11805, 'Upgrading collection-group permissions table...' ) )\n\t{\t// part of 6.7.7-stable\n\t\t$DB->query( 'ALTER TABLE T_coll_group_perms\n\t\t\tADD bloggroup_perm_analytics tinyint NOT NULL default 0' );\n\t\t$DB->query( 'UPDATE T_coll_group_perms\n\t\t\t  SET bloggroup_perm_analytics = 1\n\t\t\tWHERE bloggroup_perm_properties = 1' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11810, 'Upgrading plugins table...' ) )\n\t{\t// part of 6.7.7-stable\n\t\t$DB->query( 'ALTER TABLE T_plugins\n\t\t\tMODIFY plug_priority TINYINT UNSIGNED NOT NULL default 50' );\n\t\tupg_task_end();\n\t}\n\n\tif( upg_task_start( 11815, 'Updating file types table...' ) )\n\t{ // part of 6.7.10-stable\n\t\t$DB->query( 'UPDATE T_filetypes\n\t\t\t\tSET ftyp_allowed = \"admin\"\n\t\t\tWHERE ftyp_extensions REGEXP \"[[:<:]]swf[[:>:]]\"' );\n\t\tupg_task_end();\n\t}\n\n\t/*\n\t * ADD UPGRADES __ABOVE__ IN A NEW UPGRADE BLOCK.\n\t *\n\t * YOU MUST USE:\n\t * task_begin( 'Descriptive text about action...' );\n\t * task_end();\n\t *\n\t * ALL DB CHANGES MUST BE EXPLICITLY CARRIED OUT. DO NOT RELY ON SCHEMA UPDATES!\n\t * Schema updates do not survive after several incremental changes.\n\t *\n\t * NOTE: every change that gets done here, should bump {@link $new_db_version} (by 100).\n\t */\n\n\t// Execute general upgrade tasks.\n\t// These tasks needs to be called after every upgrade process, except if they were already executed but the upgrade was not finished because of the max execution time check.\n\tif( param( 'exec_general_tasks', 'boolean', 1 ) )\n\t{\t// We haven't executed these general tasks yet:\n\n\t\t// Update modules own b2evo tables\n\t\techo get_install_format_text( \"Calling modules for individual upgrades...<br>\\n\", 'br' );\n\t\tevo_flush();\n\t\tmodules_call_method( 'upgrade_b2evo_tables' );\n\n\t\t// We're going to need some environment in order to init caches and create profile picture links...\n\t\tif( ! is_object( $Settings ) )\n\t\t{ // create Settings object\n\t\t\tload_class( 'settings/model/_generalsettings.class.php', 'GeneralSettings' );\n\t\t\t$Settings = new GeneralSettings();\n\t\t}\n\t\tif( ! is_object( $Plugins ) )\n\t\t{ // create Plugins object\n\t\t\tload_class( 'plugins/model/_plugins.class.php', 'Plugins' );\n\t\t\t$Plugins = new Plugins();\n\t\t}\n\n\t\t// Init Caches:\n\t\tload_funcs('tools/model/_system.funcs.php');\n\t\tsystem_init_caches( true, ($old_db_version <= 11410) ); // Only force enabling the caches if we upgrade from a version older or equal to 11410 (6.4.2-beta)\n\t\t// note: the above outputs messages\n\n\t\t// Check/Repair Caches:\n\t\ttask_begin( 'Checking &amp; repairing caches...' );\n\t\tload_funcs('tools/model/_system.funcs.php');\n\t\t// Check all cache folders if exist and work properly. Try to repair cache folders if they aren't ready for operation.\n\t\t$check_cache_messages = system_check_caches( true );\n\t\tif( is_array( $check_cache_messages ) && count( $check_cache_messages ) )\n\t\t{ // Display errors of the cache checking\n\t\t\tforeach( $check_cache_messages as $check_cache_message )\n\t\t\t{\n\t\t\t\techo get_install_format_text( '<br />', 'br' );\n\t\t\t\techo get_install_format_text( '<span class=\"text-danger\"><evo:error>'.$check_cache_message.'</evo:error></span>' );\n\t\t\t}\n\t\t\techo get_install_format_text( '<br />', 'br' );\n\t\t}\n\t\ttask_end();\n\n\t\t// Check if profile picture links should be recreated. It won't be executed in each upgrade, but only in those cases when it is required.\n\t\t// This requires an up to date database, and also $Plugins and $GeneralSettings objects must be initialized before this.\n\t\t// Note: Check $create_profile_picture_links intialization and usage above to get more information.\n\t\tif( $create_profile_picture_links )\n\t\t{ // Create links for all files from the users profile_pictures folder\n\t\t\ttask_begin( 'Creating profile picture links...' );\n\t\t\tcreate_profile_picture_links();\n\t\t\ttask_end();\n\t\t}\n\n\t\t// Invalidate all page caches after every upgrade.\n\t\t// A new version of b2evolution may not use the same links to access special pages.\n\t\t// We want to play it safe here so that people don't think that upgrading broke their blog!\n\t\ttask_begin( 'Invalidating all page caches to make sure they don\\'t contain old action links...' );\n\t\tinvalidate_pagecaches();\n\t\ttask_end();\n\n\n\t\t// Reload plugins after every upgrade, to detect even those changes on plugins which didn't require db modifications\n\t\ttask_begin( 'Reloading installed plugins to make sure their config is up to date...' );\n\t\t$Plugins_admin = & get_Plugins_admin();\n\t\t$Plugins_admin->reload_plugins();\n\t\ttask_end();\n\n\n\t\t// This has to be at the end because plugin install may fail if the DB schema is not current (matching Plugins class).\n\t\t// Only new default plugins will be installed, based on $old_db_version.\n\t\t// dh> NOTE: if this fails (e.g. fatal error in one of the plugins), it will not get repeated\n\t\ttask_begin( 'Installing new default plugins (if any)...' );\n\t\tinstall_basic_plugins( $old_db_version );\n\t\ttask_end();\n\n\t\t// Create default cron jobs (this can be done at each upgrade):\n\t\techo get_install_format_text( \"Checking if some default cron jobs need to be installed...<br/>\\n\", 'br' );\n\t\tevo_flush();\n\t\trequire_once dirname(__FILE__).'/_functions_create.php';\n\t\tcreate_default_jobs( true );\n\n\t\t// \"Time running low\" test: Check if the upgrade script elapsed time is close to the max execution time.\n\t\t// Note: This should not really happen except the case when many plugins must be installed.\n\t\ttask_begin( 'Checking timing of upgrade...' );\n\t\t$elapsed_time = time() - $script_start_time;\n\t\t$max_exe_time = ini_get( 'max_execution_time' );\n\t\tif( $max_exe_time && ( $elapsed_time > ( $max_exe_time - 20 ) ) )\n\t\t{ // Max exe time not disabled and we're recahing the end\n\t\t\t// URL to continue the upgrade process from install folder\n\t\t\t$recreate_excerpts = $recreate_autogenerated_excerpts ? '&amp;recreate_excerpts=1' : '';\n\t\t\t$upgrade_continue_url = $baseurl.'install/index.php?locale='.$locale.'&amp;action='.$upgrade_action.'&amp;exec_general_tasks=0'.$recreate_excerpts;\n\t\t\techo get_install_format_text( 'We are reaching the time limit for this script. Please click <a href=\"'.$upgrade_continue_url.'\">continue</a>...' );\n\t\t\t// Dirty temporary solution:\n\t\t\texit(0);\n\t\t}\n\t\ttask_end();\n\n\t\ttask_begin( 'Checking default locale...' );\n\t\tlocale_check_default();\n\t\ttask_end();\n\t}\n\n\tif( $recreate_autogenerated_excerpts )\n\t{\n\t\tif( ! is_object( $Settings ) )\n\t\t{ // create Settings object\n\t\t\tload_class( 'settings/model/_generalsettings.class.php', 'GeneralSettings' );\n\t\t\t$Settings = new GeneralSettings();\n\t\t}\n\t\tif( ! is_object( $Plugins ) )\n\t\t{ // create Plugins object\n\t\t\tload_class( 'plugins/model/_plugins.class.php', 'Plugins' );\n\t\t\t$Plugins = new Plugins();\n\t\t}\n\n\t\ttask_begin( 'Recreate autogenerated post excerpts...' );\n\t\t$upgrade_continue_url = $baseurl.'install/index.php?locale='.$locale.'&amp;action='.$upgrade_action.'&amp;exec_general_tasks=0&amp;recreate_excerpts=1';\n\t\t$all_excerpt = param( 'all_excerpt', 'integer', 0 );\n\t\trecreate_autogenerated_excerpts( $upgrade_continue_url, $all_excerpt == 0 );\n\t\ttask_end();\n\t}\n\n\n\t// Update the progress bar status\n\tupdate_install_progress_bar();\n\n\t/*\n\t * -----------------------------------------------\n\t * Check to make sure the DB schema is up to date:\n\t * -----------------------------------------------\n\t */\n\techo get_install_format_text( \"Starting to check DB...<br/>\\n\", 'br' );\n\tevo_flush();\n\n\t$upgrade_db_deltas = array(); // This holds changes to make, if any (just all queries)\n\n\tglobal $debug;\n\n\tforeach( $schema_queries as $table => $query_info )\n\t{\t// For each table in the schema, check diffs...\n\t\tif( $debug )\n\t\t{\n\t\t\techo get_install_format_text( '<br />', 'br' );\n\t\t\techo get_install_format_text( 'Checking table: '.$table.': ' );\n\t\t}\n\t\t$updates = db_delta( $query_info[1], array('drop_column', 'drop_index'), false, true );\n\t\tif( empty($updates) )\n\t\t{\n\t\t\tif( $debug ) echo 'ok';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif( $debug ) echo 'NEEDS UPDATE!';\n\t\t\tforeach( $updates as $table => $queries )\n\t\t\t{\n\t\t\t\tforeach( $queries as $qinfo )\n\t\t\t\t{\n\t\t\t\t\tforeach( $qinfo['queries'] as $query )\n\t\t\t\t\t{ // subqueries for this query (usually one, but may include required other queries)\n\t\t\t\t\t\t$upgrade_db_deltas[] = $query;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif( $debug )\n\t{\n\t\techo get_install_format_text( '<br />', 'br' );\n\t}\n\n\tif( empty($upgrade_db_deltas) )\n\t{\t// no upgrades needed:\n\t\techo get_install_format_text( '<p>'.T_('The database schema is up to date.').'</p>', 'p' );\n\t}\n\telse\n\t{\t// Upgrades are needed:\n\n\t\t$confirmed_db_upgrade = param('confirmed', 'integer', 0); // force confirmation\n\t\t$upgrade_db_deltas_confirm_md5 = param( 'upgrade_db_deltas_confirm_md5', 'string', '' );\n\n\t\tif( ! $confirmed_db_upgrade )\n\t\t{\n\t\t\tif( ! empty($upgrade_db_deltas_confirm_md5) )\n\t\t\t{ // received confirmation from form\n\t\t\t\tif( $upgrade_db_deltas_confirm_md5 != md5( implode('', $upgrade_db_deltas) ) )\n\t\t\t\t{ // unlikely to happen\n\t\t\t\t\techo get_install_format_text( '<p class=\"text-danger\"><evo:error>'\n\t\t\t\t\t\t.T_('The DB schema has been changed since confirmation.')\n\t\t\t\t\t\t.'</evo:error></p>', 'p' );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$confirmed_db_upgrade = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( ! $confirmed_db_upgrade )\n\t\t{\n\t\t\tglobal $action, $form_action, $display;\n\t\t\tload_class( '_core/ui/forms/_form.class.php', 'Form' );\n\n\t\t\tif( empty( $display ) || $display != 'cli' )\n\t\t\t{\t// Don't print form on CLI mode:\n\t\t\t\tif( !empty( $form_action ) )\n\t\t\t\t{\n\t\t\t\t\t$Form = new Form( $form_action, '', 'post' );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$Form = new Form( NULL, '', 'post' );\n\t\t\t\t}\n\n\t\t\t\t$Form->begin_form( 'fform', T_('Upgrade database') );\n\n\t\t\t\t$Form->begin_fieldset();\n\t\t\t\t$Form->hidden( 'upgrade_db_deltas_confirm_md5', md5(implode( '', $upgrade_db_deltas )) );\n\t\t\t\t$Form->hidden( 'action', $action );\n\t\t\t\t$Form->hidden( 'locale', $locale );\n\t\t\t}\n\n\n\t\t\techo get_install_format_text( '<p>'.T_('The version number is correct, but we have detected changes in the database schema. This can happen if you\\'ve been using development versions directly off GitHub...').'</p>', 'p' );\n\n\t\t\techo get_install_format_text( '<p>'.T_('The following database changes will be carried out. If you are not sure what this means, it will probably be alright.').'</p>', 'p' );\n\n\t\t\techo get_install_format_text( '<ul>' );\n\t\t\tforeach( $upgrade_db_deltas as $l_delta )\n\t\t\t{\n\t\t\t\t#echo '<li><code>'.nl2br($l_delta).'</code></li>';\n\t\t\t\techo get_install_format_text( '<li><pre>'.str_replace( \"\\t\", '  ', $l_delta ).'</pre></li>', 'li' );\n\t\t\t}\n\t\t\techo get_install_format_text( '</ul>' );\n\n\t\t\tif( empty( $display ) || $display != 'cli' )\n\t\t\t{\t// Don't print form on CLI mode:\n\t\t\t\t$Form->submit( array( '', T_('Try to Repair/Upgrade database now!'), 'btn-warning' ) );\n\t\t\t\t$Form->end_form();\n\t\t\t}\n\n\t\t\treturn 'need-fix';\n\t\t}\n\n\t\t// Alter DB to match DB schema:\n\t\tinstall_make_db_schema_current( true );\n\t}\n\n\t// Force MySQL strict mode\n\t$DB->query( 'SET sql_mode = \"TRADITIONAL\"', 'Force MySQL \"strict\" mode (and make sure server is not configured with a weird incompatible mode)' );\n\n\ttrack_step( 'upgrade-success' );\n\n\treturn true;\n}\n\n?>"], "filenames": ["conf/_application.php", "install/_functions_create.php", "install/_functions_evoupgrade.php"], "buggy_code_start_loc": [39, 451, 7594], "buggy_code_end_loc": [40, 452, 7594], "fixing_code_start_loc": [39, 451, 7595], "fixing_code_end_loc": [40, 452, 7603], "type": "CWE-79", "message": "Multiple cross-site scripting (XSS) vulnerabilities in the file types table in b2evolution through 6.8.3 allow remote authenticated users to inject arbitrary web script or HTML via a .swf file in a (1) comment frame or (2) avatar frame.", "other": {"cve": {"id": "CVE-2017-5494", "sourceIdentifier": "cve@mitre.org", "published": "2017-01-15T22:59:00.190", "lastModified": "2017-01-27T18:20:08.453", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Multiple cross-site scripting (XSS) vulnerabilities in the file types table in b2evolution through 6.8.3 allow remote authenticated users to inject arbitrary web script or HTML via a .swf file in a (1) comment frame or (2) avatar frame."}, {"lang": "es", "value": "M\u00faltiples vulnerabilidades de XSS en la tabla de tipos de archivo en b2evolution hasta la versi\u00f3n 6.8.3 permiten a usuarios remotos autenticados inyectar secuencias de comandos web o HTML arbitrarios a trav\u00e9s de un archivo .swf manipulado en un (1) marco del comentario o (2) marco del avatar."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:b2evolution:b2evolution:*:*:*:*:*:*:*:*", "versionEndIncluding": "6.8.3", "matchCriteriaId": "9C4446F5-9D08-412C-B4DB-3BFF3B7D7831"}]}]}], "references": [{"url": "http://www.securityfocus.com/bid/95452", "source": "cve@mitre.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/b2evolution/b2evolution/commit/261dbd5b294e707af766691e65a177a290314a6e", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/b2evolution/b2evolution/issues/34", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/b2evolution/b2evolution/commit/261dbd5b294e707af766691e65a177a290314a6e"}}