{"buggy_code": ["<?php\n//\u9644\u4ef6/\u56fe\u7247\u7b49\u7b49\nnamespace Api\\Controller;\nuse Think\\Controller;\nclass AttachmentController extends BaseController {\n\n    public function index(){\n        \n        echo 'Attachment';\n       \n    }\n\n    //\u6d4f\u89c8\u9644\u4ef6\n    public function visitFile(){\n      $sign = I(\"sign\");\n      $imageView2 = I(\"imageView2\");\n      $d = D(\"UploadFile\") ;\n      $ret = $d->where(\" sign = '%s' \",array($sign))->find();\n      if ($ret) {\n            $beyond_the_quota = 0 ;\n            $days = ceil(( time() -$ret['addtime'])/86400);//\u81ea\u6dfb\u52a0\u56fe\u7247\u4ee5\u6765\u7684\u5929\u6570\n            $adv_day_times = $ret['visit_times'] / $days  ; //\u5e73\u5747\u6bcf\u5929\u7684\u8bbf\u95ee\u6b21\u6570\n            $flow_rate = ( $ret['file_size'] * $ret['visit_times'] ) / $days ; //\u65e5\u5747\u6d41\u91cf\n\n\n            //\u5982\u679c\u662fapk\u6587\u4ef6\u4e14\u5728\u5fae\u4fe1\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\n            if ( strpos($_SERVER['HTTP_USER_AGENT'], 'MicroMessenger') !== false  && strpos($ret['real_url'] , '.apk') !== false ) {\n                header(\"Content-type: text/html; charset=utf-8\"); \n                echo \"<head><title>\u6e29\u99a8\u63d0\u793a</title></head>\";\n                echo \"<br><h1>\u5fae\u4fe1\u4e0d\u652f\u6301\u76f4\u63a5\u4e0b\u8f7d\uff0c\u8bf7\u70b9\u51fb\u53f3\u4e0a\u89d2\u201c---\u201d\u5728\u5916\u90e8\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00</h1>\";\n                return ;\n\n            }\n\n          $d->where(\" sign = '%s' \",array($sign))->save(array(\"visit_times\" => $ret['visit_times'] + 1  ,\"last_visit_time\"=>time()));\n            //\u8bb0\u5f55\u7528\u6237\u6d41\u91cf\n            D(\"Attachment\")->recordUserFlow($ret['uid'] , $ret['file_size']) ;\n\n            //$ret['cache_url'] = '' ; //\u628a\u8fd9\u4e2a\u53d8\u91cf\u8d4b\u503c\u4e3a\u7a7a\uff0c\u7981\u7528\u6389cache_url;\n            if ($ret['cache_url']) {\n                $url = $ret['cache_url'] ;\n            }else{\n                $url = $ret['real_url']  ;\n            }\n\n        $array = explode(\"/Public/Uploads/\", $url) ;\n        $file_path = \"../Public/Uploads/\".$array[1] ;\n        $oss_open = D(\"Options\")->get(\"oss_open\" ) ;\n        if (!$oss_open \n            && file_exists($file_path)\n            && $ret['display_name']\n            && !strstr(strtolower($file_path),'.bmp')\n            && !strstr(strtolower($file_path),'.jpg')\n            && !strstr(strtolower($file_path),'.png')\n            && !strstr(strtolower($file_path),'.pdf')\n         ) {\n                $this->_downloadFile($file_path, $ret['display_name']);\n        }else{\n                header(\"location:{$url}\");\n            }\n        \n      }else{\n        echo \"www.showdoc.cc\";\n      }\n    }\n\n    //\u4e0a\u4f20\u56fe\u7247\n    public function uploadImg(){\n        $login_user = $this->checkLogin();\n        $item_id = I(\"item_id/d\") ? I(\"item_id/d\") : 0 ;\n        $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;\n\n        \n        if ($_FILES['editormd-image-file']['name'] == 'blob') {\n            $_FILES['editormd-image-file']['name'] .= '.jpg';\n        }\n        \n        if (!$_FILES['editormd-image-file']) {\n           return false;\n        }\n\n        if(D(\"Attachment\")->isDangerFilename($_FILES['editormd-image-file']['name'])){\n            return false;\n        }\n\n        $url = D(\"Attachment\")->upload($_FILES , 'editormd-image-file' , $login_user['uid'] , $item_id , $page_id ) ;\n        if ($url) {\n            echo json_encode(array(\"url\"=>$url,\"success\"=>1));\n        }\n\n    }\n\n    //\u4e0a\u4f20\u9644\u4ef6\n    public function attachmentUpload(){\n        $login_user = $this->checkLogin();\n        $item_id = I(\"item_id/d\") ? I(\"item_id/d\") : 0 ;\n        $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;\n        $uploadFile = $_FILES['file'] ;\n \n        // \u5982\u679c\u9644\u4ef6\u662f\u8981\u4e0a\u4f20\u7ed1\u5b9a\u5230\u67d0\u4e2a\u9875\u9762\uff0c\u90a3\u4e48\u68c0\u9a8c\u9879\u76ee\u6743\u9650\u3002\u5982\u679c\u4e0d\u7ed1\u5b9a\uff0c\u53ea\u662f\u4e0a\u4f20\u5230\u81ea\u5df1\u7684\u6587\u4ef6\u5e93\uff0c\u5219\u4e0d\u9700\u8981\u6821\u9a8c\u9879\u76ee\u6743\u9650\n        if( $page_id > 0 || $item_id > 0){\n            if (!$this->checkItemEdit($login_user['uid'] , $item_id)) {\n                $this->sendError(10103);\n                return;\n            }\n        }\n        \n        if (!$uploadFile) {\n           return false;\n        }\n\n        if(D(\"Attachment\")->isDangerFilename($uploadFile['name'])){\n            $this->sendError(10100,'\u4e0d\u652f\u6301\u6b64\u6587\u4ef6\u7c7b\u578b');\n            return false;\n        }\n\n        $url = D(\"Attachment\")->upload($_FILES , 'file' , $login_user['uid'] , $item_id , $page_id ) ;\n        if ($url) {\n            echo json_encode(array(\"url\"=>$url,\"success\"=>1));\n        }\n\n    }\n    //\u9875\u9762\u7684\u4e0a\u4f20\u9644\u4ef6\u5217\u8868\n    public function pageAttachmentUploadList(){\n        $login_user = $this->checkLogin(false);\n        $item_id = I(\"item_id/d\") ? I(\"item_id/d\") : 0 ;\n        $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;\n        if (!$page_id) {\n            $this->sendError(10103,\"\u8bf7\u81f3\u5c11\u5148\u4fdd\u5b58\u4e00\u6b21\u9875\u9762\u5185\u5bb9\");\n            return;\n        }\n        $return = array() ;\n        $files = D(\"UploadFile\")->join(\" file_page on file_page.file_id = upload_file.file_id\")->field(\"upload_file.* , file_page.item_id as item_id ,file_page.page_id as page_id  \")->where(\"file_page.page_id = '$page_id' \")->order(\"file_page.addtime desc\")->select();\n        if ($files) {\n            $item_id = $files[0]['item_id'] ;\n            if (!$this->checkItemVisit($login_user['uid'] , $item_id)) {\n                $this->sendError(10103);\n                return;\n            }\n            foreach ($files as $key => $value) {\n                $url = '';\n                if($value['sign']){\n                   $url =  server_url(\"api/attachment/visitFile\",array(\"sign\" => $value['sign'])) ;\n                }else{\n                  $url =  $value['real_url'] ;\n                }\n                $return[] = array(\n                    \"file_id\"=>$value['file_id'],\n                    \"display_name\"=>$value['display_name'],\n                    \"url\"=>$url,\n                    \"addtime\"=> date(\"Y-m-d H:i:s\" , $value['addtime'] ),\n                    );\n            }\n\n        }\n        $this->sendResult($return);\n\n    }\n\n    //\u5220\u9664\u9875\u9762\u4e2d\u5df2\u4e0a\u4f20\u6587\u4ef6\n    public function deletePageUploadFile(){\n        $login_user = $this->checkLogin();\n        $file_id = I(\"file_id/d\") ? I(\"file_id/d\") : 0 ;\n        $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;\n        $count = D(\"FilePage\")->where(\" file_id = '$file_id' and page_id > 0   \")->count() ;\n        if($count <= 1 ){\n            $this->deleteMyAttachment();\n        }else{\n            $page = M(\"Page\")->where(\" page_id = '$page_id' \")->find();\n            if (!$this->checkItemEdit($login_user['uid'] , $page['item_id'])) {\n                $this->sendError(10103);\n                return;\n            }\n            $res = D(\"FilePage\")->where(\" file_id = '$file_id' and page_id = '$page_id'   \")->delete() ;\n            if($res){\n                $this->sendResult(array());\n            }else{\n                $this->sendError(10101,\"\u5220\u9664\u5931\u8d25\");\n            }\n\n        }\n        \n    }\n\n    //\u83b7\u53d6\u5168\u7ad9\u7684\u9644\u4ef6\u5217\u8868\u3002\u7ed9\u7ba1\u7406\u5458\u67e5\u770b\u9644\u4ef6\u7528\n    public function getAllList(){\n        $login_user = $this->checkLogin();\n        $this->checkAdmin(); //\u91cd\u8981\uff0c\u6821\u9a8c\u7ba1\u7406\u5458\u8eab\u4efd\n        $page = I(\"page/d\");\n        $count = I(\"count/d\");\n        $attachment_type = I(\"attachment_type/d\");\n        $display_name = I(\"display_name\");\n        $username = I(\"username\");\n        $return = array() ;\n        $where = ' 1 = 1 ';\n        if($attachment_type == 1 ){\n            $where .=\" and file_type like '%image%' \" ;\n        }\n        if($attachment_type == 2 ){\n            $where .=\" and file_type not like '%image%' \" ;\n        }\n        if($display_name){\n            $display_name =  \\SQLite3::escapeString($display_name) ;\n            $where .=\" and display_name  like '%{$display_name}%' \" ;\n        }\n        if($username){\n            $username =  \\SQLite3::escapeString($username) ;\n            $uid = D(\"User\")->where(\" username = '{$username}' \")->getField('uid') ;\n            $uid = $uid ? $uid  : -99 ;\n            $where .=\" and uid  = '{$uid}' \" ;\n        }\n        $files = D(\"UploadFile\")->where($where)->order(\"addtime desc\")->page($page ,$count)->select();\n        if ($files) {\n            foreach ($files as $key => $value) {\n                $username = '';\n                if($value['uid']){\n                    $username = D(\"User\")->where(\" uid = {$value['uid']} \")->getField('username') ;\n                }\n                $url = '';\n                if($value['sign']){\n                   $url =  server_url(\"api/attachment/visitFile\",array(\"sign\" => $value['sign'])) ;\n                }else{\n                  $url =  $value['real_url'] ;\n                }\n                $return['list'][] = array(\n                    \"file_id\"=>$value['file_id'],\n                    \"username\"=>$username,\n                    \"uid\"=>$value['uid'],\n                    \"file_type\"=>$value['file_type'],\n                    \"visit_times\"=>$value['visit_times'],\n                    \"file_size\"=>$value['file_size'],\n                    \"item_id\"=>$value['item_id'],\n                    \"page_id\"=>$value['page_id'],\n                    \"file_size_m\"=>round( $value['file_size']/(1024*1024),3),\n                    \"display_name\"=>$value['display_name']?$value['display_name']:'',\n                    \"url\"=>$url ,\n                    \"addtime\"=> date(\"Y-m-d H:i:s\" , $value['addtime'] ),\n                    \"last_visit_time\"=> date(\"Y-m-d H:i:s\" , $value['last_visit_time'] ),\n                    );\n            }\n\n        }\n        $return['total'] = D(\"UploadFile\")->where($where)->count();\n        $used = D(\"UploadFile\")->where($where)->getField('sum(file_size)');\n        $return['used'] = $used ;\n        $return['used_m'] = round( $used/(1024*1024),3) ;\n        $this->sendResult($return);\n    }\n\n    //\u5220\u9664\u9644\u4ef6\n    public function deleteAttachment(){\n        $login_user = $this->checkLogin();\n        $this->checkAdmin(); //\u91cd\u8981\uff0c\u6821\u9a8c\u7ba1\u7406\u5458\u8eab\u4efd\n        $file_id = I(\"file_id/d\") ? I(\"file_id/d\") : 0 ;\n\n        $file = D(\"UploadFile\")->where(\"file_id = '$file_id' \")->find();\n\n        $ret = D(\"Attachment\")->deleteFile($file_id);\n        if ($ret) {\n            $this->sendResult(array());\n        }else{\n            $this->sendError(10101,\"\u5220\u9664\u5931\u8d25\");\n        }\n    }\n\n    //\u83b7\u53d6\u6211\u7684\u9644\u4ef6\u5217\u8868\n    public function getMyList(){\n        $login_user = $this->checkLogin();\n        $page = I(\"page/d\");\n        $count = I(\"count/d\");\n        $attachment_type = I(\"attachment_type/d\");\n        $display_name = I(\"display_name\");\n        $username = I(\"username\");\n        $return = array() ;\n        $where = \" uid  = {$login_user['uid']} \";\n        if($attachment_type == 1 ){\n            $where .=\" and file_type like '%image%' \" ;\n        }\n        if($attachment_type == 2 ){\n            $where .=\" and file_type not like '%image%' \" ;\n        }\n        if($display_name){\n            $display_name =  \\SQLite3::escapeString($display_name) ;\n            $where .=\" and display_name  like '%{$display_name}%' \" ;\n        }\n        $files = D(\"UploadFile\")->where($where)->order(\"addtime desc\")->page($page ,$count)->select();\n        if ($files) {\n            foreach ($files as $key => $value) {\n                $username = '';\n                $return['list'][] = array(\n                    \"file_id\"=>$value['file_id'],\n                    \"uid\"=>$value['uid'],\n                    \"file_type\"=>$value['file_type'],\n                    \"visit_times\"=>$value['visit_times'],\n                    \"file_size\"=>$value['file_size'],\n                    \"item_id\"=>$value['item_id'],\n                    \"page_id\"=>$value['page_id'],\n                    \"file_size_m\"=>round( $value['file_size']/(1024*1024),3),\n                    \"display_name\"=>$value['display_name']?$value['display_name']:'',\n                    \"url\"=>server_url(\"api/attachment/visitFile\",array(\"sign\" => $value['sign'])),\n                    \"addtime\"=> date(\"Y-m-d H:i:s\" , $value['addtime'] ),\n                    \"last_visit_time\"=> date(\"Y-m-d H:i:s\" , $value['last_visit_time'] ),\n                    );\n            }\n\n        }\n        $return['total'] = D(\"UploadFile\")->where($where)->count();\n        $used = D(\"UploadFile\")->where($where)->getField('sum(file_size)');\n        $return['used'] = $used ;\n        $return['used_m'] = round( $used/(1024*1024),3) ;\n        $used_flow =  D(\"Attachment\")->getUserFlow($login_user['uid']) ; ; //\u8be5\u7528\u6237\u7684\u672c\u6708\u4f7f\u7528\u6d41\u91cf\n        $return['used_flow_m'] = round( $used_flow/(1024*1024),3) ;\n\n        $this->sendResult($return);\n    }\n\n    //\u5220\u9664\u9644\u4ef6\n    public function deleteMyAttachment(){\n        $login_user = $this->checkLogin();\n        $file_id = I(\"file_id/d\") ? I(\"file_id/d\") : 0 ;\n\n        $file = D(\"UploadFile\")->where(\"file_id = '$file_id' and uid ='$login_user[uid]' \")->find();\n\n        if($file){\n            $ret = D(\"Page\")->deleteFile($file_id);\n            if ($ret) {\n                $this->sendResult(array());\n                return ;\n            }\n        }\n        $this->sendError(10101,\"\u5220\u9664\u5931\u8d25\");\n    }\n\n    //\u5c06\u5df2\u4e0a\u4f20\u6587\u4ef6\u7ed1\u5b9a\u5230\u9875\u9762\u4e2d\n    public function bindingPage(){\n        $login_user = $this->checkLogin();\n        $file_id = I(\"file_id/d\") ? I(\"file_id/d\") : 0 ;\n        $page_id = I(\"page_id/d\");\n        $file = D(\"UploadFile\")->where(\"file_id = '$file_id' and uid ='$login_user[uid]' \")->find();\n        $page = M(\"Page\")->where(\" page_id = '$page_id' \")->find();\n        if (!$this->checkItemEdit($login_user['uid'] , $page['item_id'])) {\n            $this->sendError(10103);\n            return;\n        }\n        $insert = array(\n            \"file_id\" => $file_id,\n            \"item_id\" => $page['item_id'] ,\n            \"page_id\" => $page_id,\n            \"addtime\" => time(),\n            );\n        $ret = D(\"FilePage\")->add($insert);\n        if( $ret){\n            $this->sendResult(array());\n        }else{\n            $this->sendError(10101);\n        }\n\n    }\n\n    //\u8f93\u51fa\u672c\u5730\u6587\u4ef6\u5230\u6d4f\u89c8\u5668\n    public function _downloadFile($filename, $rename='showdoc') {\n\n    \n        //\u8bbe\u7f6e\u811a\u672c\u7684\u6700\u5927\u6267\u884c\u65f6\u95f4\uff0c\u8bbe\u7f6e\u4e3a0\u5219\u65e0\u65f6\u95f4\u9650\u5236\n        set_time_limit(3000);\n        ini_set('max_execution_time', '0');\n    \n        //\u901a\u8fc7header()\u53d1\u9001\u5934\u4fe1\u606f\n        //\u56e0\u4e3a\u4e0d\u77e5\u9053\u6587\u4ef6\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\uff0c\u544a\u8bc9\u6d4f\u89c8\u5668\u8f93\u51fa\u7684\u662f\u5b57\u8282\u6d41\n        header('content-type:application/octet-stream');\n    \n        //\u544a\u8bc9\u6d4f\u89c8\u5668\u8fd4\u56de\u7684\u6587\u4ef6\u5927\u5c0f\u7c7b\u578b\u662f\u5b57\u8282\n        header('Accept-Ranges:bytes');\n    \n        //\u83b7\u5f97\u6587\u4ef6\u5927\u5c0f\n        $filesize = filesize($filename);//(\u6b64\u65b9\u6cd5\u65e0\u6cd5\u83b7\u53d6\u5230\u8fdc\u7a0b\u6587\u4ef6\u5927\u5c0f)\uff0c\u8fdc\u7a0b\u6587\u4ef6\u7528\u4e0b\u9762get_headers\u65b9\u6cd5\n        //$header_array = get_headers($filename, true);\n        //$filesize = $header_array['Content-Length'];\n        //var_dump($header_array);exit();\n        //\u544a\u8bc9\u6d4f\u89c8\u5668\u8fd4\u56de\u7684\u6587\u4ef6\u5927\u5c0f\n        header('Accept-Length:'.$filesize);\n        //\u544a\u8bc9\u6d4f\u89c8\u5668\u6587\u4ef6\u4f5c\u4e3a\u9644\u4ef6\u5904\u7406\u5e76\u4e14\u8bbe\u5b9a\u6700\u7ec8\u4e0b\u8f7d\u5b8c\u6210\u7684\u6587\u4ef6\u540d\u79f0\n        header('content-disposition:attachment;filename='.basename($rename));\n    \n        //\u9488\u5bf9\u5927\u6587\u4ef6\uff0c\u89c4\u5b9a\u6bcf\u6b21\u8bfb\u53d6\u6587\u4ef6\u7684\u5b57\u8282\u6570\u4e3a4096\u5b57\u8282\uff0c\u76f4\u63a5\u8f93\u51fa\u6570\u636e\n        $read_buffer = 4096;\n        $handle = fopen($filename, 'rb');\n        //\u603b\u7684\u7f13\u51b2\u7684\u5b57\u8282\u6570\n        $sum_buffer = 0;\n        //\u53ea\u8981\u6ca1\u5230\u6587\u4ef6\u5c3e\uff0c\u5c31\u4e00\u76f4\u8bfb\u53d6\n        while(!feof($handle) && $sum_buffer<$filesize) {\n            echo fread($handle,$read_buffer);\n            $sum_buffer += $read_buffer;\n        }\n    \n        //\u5173\u95ed\u53e5\u67c4\n        fclose($handle);\n\n    }\n\n}\n", "<?php\nnamespace Api\\Model;\nuse Api\\Model\\BaseModel;\nuse AsyncAws\\S3\\S3Client;\n\n/**\n * \n * @author star7th      \n */\nclass AttachmentModel extends BaseModel {\n\n\tProtected $autoCheckFields = false;  //\u4e00\u5b9a\u8981\u5173\u95ed\u5b57\u6bb5\u7f13\u5b58\uff0c\u4e0d\u7136\u4f1a\u62a5\u627e\u4e0d\u5230\u8868\u7684\u9519\u8bef\n\n\t//\u83b7\u53d6\u67d0\u4e2a\u7528\u6237\u7684\u5f53\u524d\u5df2\u4f7f\u7528\u9644\u4ef6\u6d41\u91cf\n\tpublic function getUserFlow($uid){\n\t\t$month = Date(\"Y-m\") ;\n\t\t$file_flow = D(\"FileFlow\")->where(\" uid = '%s'  and date_month = '$month' \" , array($uid))->find() ;\n\t\tif($file_flow){\n\t\t\treturn intval($file_flow['used']) ;\n\t\t}else{\n\t\t\tD(\"FileFlow\")->add(array(\n\t\t\t\t\"uid\" => $uid ,\n\t\t\t\t\"used\" => 0  ,\n\t\t\t\t\"date_month\" => $month ,\n\n\t\t\t));\n\t\t\treturn 0 ;\n\t\t}\n\t}\n\n\t//\u8bb0\u5f55\u67d0\u4e2a\u7528\u6237\u6d41\u91cf\n\tpublic function recordUserFlow($uid , $file_size){\n\t\t$month = Date(\"Y-m\") ;\n\t\t$used = $this->getUserFlow($uid) ;\n\t\treturn D(\"FileFlow\")->where(\" uid = '%s'  and date_month = '$month' \" , array($uid))->save(array(\n\t\t\t\"used\" => $used + intval($file_size) \n\t\t));\n\t}\n\n\tpublic function deleteFile($file_id){\n\t\t$file_id = intval($file_id) ;\n\t\t$file = D(\"UploadFile\")->where(\"file_id = '$file_id' \")->find();\n\t\t$real_url = $file['real_url'] ;\n\t\t$array = explode(\"/Public/Uploads/\", $real_url) ;\n\t\t$file_path = \"../Public/Uploads/\".$array[1] ;\n\t\tif (file_exists($file_path)) {\n\t\t\t@unlink($file_path);\n\t\t}\n\t\t$this->deleteOss($real_url);\n\t\tD(\"UploadFile\")->where(\" file_id = '$file_id' \")->delete();\n\t\tD(\"FilePage\")->where(\" file_id = '$file_id' \")->delete();\n\t\treturn true ;\n\n\t}\n\n\t//\u4e0a\u4f20\u6587\u4ef6\uff0c\u8fd4\u56deurl\n\tpublic function upload($_files , $file_key , $uid , $item_id = 0  , $page_id = 0  ){\n\t\t$uploadFile = $_files[$file_key] ;\n\n\t\tif($this->isDangerFilename($uploadFile['name'])){\n\t\t\treturn false;\n\t\t}\n\n\t\t$oss_open = D(\"Options\")->get(\"oss_open\" ) ;\n\t\tif ($oss_open) {\n\t\t\t\t$url = $this->uploadOss($uploadFile);\n\t\t\t\tif ($url) {\n\t\t\t\t\t\t$sign = md5($url.time().rand()) ;\n\t\t\t\t\t\t$insert = array(\n\t\t\t\t\t\t\"sign\" => $sign,\n\t\t\t\t\t\t\"uid\" => $uid,\n\t\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\t\"display_name\" => $uploadFile['name'],\n\t\t\t\t\t\t\"file_type\" => $uploadFile['type'],\n\t\t\t\t\t\t\"file_size\" => $uploadFile['size'],\n\t\t\t\t\t\t\"real_url\" => $url,\n\t\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t\t);\n\t\t\t\t\t\t$file_id = D(\"UploadFile\")->add($insert);\n\t\t\t\t\t\t$insert = array(\n\t\t\t\t\t\t\t\"file_id\" => $file_id,\n\t\t\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t$ret = D(\"FilePage\")->add($insert);\n\t\t\t\t\t\t$url = server_url(\"api/attachment/visitFile\",array(\"sign\" => $sign)); \n\t\t\t\t\t  return $url ;\n\t\t\t\t}\n\t\t}else{\n\t\t\t$upload = new \\Think\\Upload();// \u5b9e\u4f8b\u5316\u4e0a\u4f20\u7c7b\n\t\t\t$upload->maxSize  = 1003145728 ;// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5927\u5c0f\n\t\t\t$upload->rootPath = './../Public/Uploads/';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u76ee\u5f55\n\t\t\t$upload->savePath = '';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5b50\u76ee\u5f55\n\t\t\t$info = $upload->uploadOne($uploadFile) ;\n\t\t\tif(!$info) {// \u4e0a\u4f20\u9519\u8bef\u63d0\u793a\u9519\u8bef\u4fe1\u606f\n\t\t\t\tvar_dump($upload->getError());\n\t\t\t\treturn;\n\t\t\t}else{// \u4e0a\u4f20\u6210\u529f \u83b7\u53d6\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f\n\t\t\t\t$url = site_url().'/Public/Uploads/'.$info['savepath'].$info['savename'] ;\n\t\t\t\t$sign = md5($url.time().rand()) ;\n\t\t\t\t$insert = array(\n\t\t\t\t\t\"sign\" => $sign,\n\t\t\t\t\t\"uid\" => $uid,\n\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\"display_name\" => $uploadFile['name'],\n\t\t\t\t\t\"file_type\" => $uploadFile['type'],\n\t\t\t\t\t\"file_size\" => $uploadFile['size'],\n\t\t\t\t\t\"real_url\" => $url,\n\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t);\n\t\t\t\t\t$file_id = D(\"UploadFile\")->add($insert);\n\t\t\t\t\t$insert = array(\n\t\t\t\t\t\t\"file_id\" => $file_id,\n\t\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t\t);\n\t\t\t\t\t$ret = D(\"FilePage\")->add($insert);\n\t\t\t\t$url = server_url(\"api/attachment/visitFile\",array(\"sign\" => $sign));\n\t\t\t\treturn $url ;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n  \t//\u4e0a\u4f20\u5230oss\u3002\u53c2\u6570$uploadFile\u662f\u6587\u4ef6\u4e0a\u4f20\u6d41\uff0c\u5982$_FILES['file'] .\u4e5f\u53ef\u4ee5\u81ea\u5df1\u62fc\u51d1\n\tpublic function uploadOss($uploadFile){\n\t\t$oss_setting_json = D(\"Options\")->get(\"oss_setting\") ;\n\t\t$oss_setting = json_decode($oss_setting_json,1);\n\n\t\tif ($oss_setting && $oss_setting['oss_type'] && ( $oss_setting['oss_type'] == 's3_storage' || $oss_setting['oss_type'] == 'aliyun') ) {\n\n\t\t\treturn $this->uploadS3($uploadFile , $oss_setting);\n\n\t\t}\n\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qiniu') {\n\n\t\t\t$oss_setting['endpoint'] = $this->getQiuniuEndpointByKey($oss_setting['key'] , $oss_setting['bucket']);\n\t\t\treturn $this->uploadS3($uploadFile , $oss_setting); \n\n\t\t}\n\t\t// \u817e\u8baf\u4e91\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qcloud') {\n\t\t\t// \u817e\u8baf\u4e91\uff0c\u4e00\u5f00\u59cb\u8ba9\u7528\u6237\u586b\u5199region\u800c\u6ca1\u586b\u5199endpoint\uff0c\u6240\u4ee5\u8981\u81ea\u5df1\u62fc\u63a5\n\t\t\t$oss_setting['endpoint'] = \"https://cos.{$oss_setting['region']}.myqcloud.com\";\n\t\t\t// \u817e\u8baf\u4e91\u7684SecretId\u76f8\u5f53\u4e8es3\u7684key\uff0c secretKey\u76f8\u5f53\u4e8es3\u7684secret\n\t\t\t$oss_setting['key'] = $oss_setting['secretId']  ;\n\t\t\t$oss_setting['secret'] = $oss_setting['secretKey']  ;\n\t\t\treturn $this->uploadS3($uploadFile , $oss_setting); \n\t\t}\n\n\n\t\treturn false ;\n\t}\n\n\t// \u901a\u8fc7s3\u534f\u8bae\u4e0a\u4f20\n\t// \u6ce8\u610f\u4f20\u8fdb\u6765\u7684oss_setting\u6570\u7ec4\u9700\u8981\u5148\u8f6c\u6362\u6210\u5408\u6cd5\u683c\u5f0f\n\tpublic function uploadS3($uploadFile , $oss_setting){\n\n\t\t$ext = strrchr($uploadFile['name'], '.'); //\u83b7\u53d6\u6269\u5c55\u540d\n\t\t$oss_path = \"showdoc_\".get_rand_str().$ext;\n\n\t\t// \u5982\u679c\u4e0d\u5305\u542b\u534f\u8bae\u5934\uff0c\u81ea\u5df1\u7ed9\u5b83\u8865\u5145\n\t\tif(!strstr($oss_setting['endpoint'] , '://')){\n\t\t\t$oss_setting['endpoint'] = 'https://'.$oss_setting['endpoint'] ;\n\t\t}\n\n\t\t$s3 = new S3Client([\n\t\t\t'accessKeyId' => $oss_setting['key'],\n\t\t\t'accessKeySecret' => $oss_setting['secret'] ,\n\t\t\t'endpoint' => $oss_setting['endpoint'] ,\n\t\t\t'sendChunkedBody' => false\n\t\t]);\n\t\n\t\t// Send a PutObject request and get the result object.\n\t\t$resObj = $s3->putObject([\n\t\t\t'Bucket' => $oss_setting['bucket'],\n\t\t\t'Key'    => $oss_path,\n\t\t\t'Body'   => fopen($uploadFile['tmp_name'], 'rb')\n\t\t]);\n\n\t\t// \u4e0d\u629b\u51fa\u5f02\u5e38\uff0c\u9ed8\u8ba4\u5c31\u662f\u6210\u529f\u7684\n\n\t\tif ($oss_setting['domain']) {\n\t\t\treturn $oss_setting['protocol'] . '://'.$oss_setting['domain'].\"/\".$oss_path ;\n\t\t}else{\n\t\t\t$tmp_array = parse_url($oss_setting['endpoint']);\n\t\t\t$endpoint_host = $tmp_array['host'] ;\n\t\t\treturn 'https://'.$oss_setting['bucket'].'.'.$endpoint_host.'/'.$oss_path;\n\t\t}\n\t}\n\n  \t//\u4eceoss\u4e2d\u5220\u9664\n\tpublic function deleteOss($file_url){\n\t\t$oss_setting_json = D(\"Options\")->get(\"oss_setting\") ;\n\t\t$oss_setting = json_decode($oss_setting_json,1);\n\t\tif ($oss_setting && $oss_setting['oss_type'] && ( $oss_setting['oss_type'] == 's3_storage' || $oss_setting['oss_type'] == 'aliyun') ) {\n\t\t\treturn $this->deleteS3($file_url , $oss_setting);\n\t\t}\n\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qiniu') {\n\t\t\t$oss_setting['endpoint'] = $this->getQiuniuEndpointByKey($oss_setting['key'] , $oss_setting['bucket']);\n\t\t\treturn $this->deleteS3($file_url , $oss_setting); \n\t\t}\n\t\t//var_dump($config);\n\t\t// \u817e\u8baf\u4e91\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qcloud') {\n\n\t\t\t// \u817e\u8baf\u4e91\uff0c\u4e00\u5f00\u59cb\u8ba9\u7528\u6237\u586b\u5199region\u800c\u6ca1\u586b\u5199endpoint\uff0c\u6240\u4ee5\u8981\u81ea\u5df1\u62fc\u63a5\n\t\t\t$oss_setting['endpoint'] = \"https://cos.{$oss_setting['region']}.myqcloud.com\";\n\t\t\t// \u817e\u8baf\u4e91\u7684SecretId\u76f8\u5f53\u4e8es3\u7684key\uff0c secretKey\u76f8\u5f53\u4e8es3\u7684secret\n\t\t\t$oss_setting['key'] = $oss_setting['secretId']  ;\n\t\t\t$oss_setting['secret'] = $oss_setting['secretKey']  ;\n\t\t\treturn $this->deleteS3($file_url , $oss_setting); \n\n\t\t}\n\n\n\t\treturn false ;\n\t}\n\n\t// \u901a\u8fc7s3\u534f\u8bae\u5220\u9664\n\t// \u6ce8\u610f\u4f20\u8fdb\u6765\u7684oss_setting\u6570\u7ec4\u9700\u8981\u5148\u8f6c\u6362\u6210\u5408\u6cd5\u683c\u5f0f\n\tpublic function deleteS3($file_url , $oss_setting){\n\n\t\t$array = parse_url($file_url) ;\n\t\t$file = $array['path'] ;  // \u5f97\u5230\u7684\u662furl\u4e2d\u7684\u8def\u5f84\uff0c\u4f8b\u5982/path_.txt\n\t\t$file = substr($file, 1); // \u8981\u628a\u8def\u5f84\u524d\u7684/\u53bb\u6389\uff0c\u624d\u662f\u5f97\u5230\u6587\u4ef6\u540dpath_.txt\n\t\t// \u5982\u679c\u4e0d\u5305\u542b\u534f\u8bae\u5934\uff0c\u81ea\u5df1\u7ed9\u5b83\u8865\u5145\n\t\tif(!strstr($oss_setting['endpoint'] , '://')){\n\t\t\t$oss_setting['endpoint'] = 'https://'.$oss_setting['endpoint'] ;\n\t\t}\n\n\t\t$s3 = new S3Client([\n\t\t\t'accessKeyId' => $oss_setting['key'],\n\t\t\t'accessKeySecret' => $oss_setting['secret'] ,\n\t\t\t'endpoint' => $oss_setting['endpoint'] ,\n\t\t]);\n\t\n\t\t// Send a PutObject request and get the result object.\n\t\t$resObj = $s3->deleteObject([\n\t\t\t'Bucket' => $oss_setting['bucket'],\n\t\t\t'Key'    => $file,\n\t\t]);\n\n\t\t// \u4e0d\u629b\u51fa\u5f02\u5e38\uff0c\u9ed8\u8ba4\u5c31\u662f\u6210\u529f\u7684\n\n\n\t}\n\n\t// \u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u5f53\u521d\u6ca1\u6709\u8ba9\u7528\u6237\u586b\u5199\u4e03\u725b\u4e91\u7684region\u3002\u800c\u4e14\u5373\u4f7f\u586b\u5199\u4e86\uff0c\u4e5f\u4e0d\u80fd\u76f4\u63a5\u83b7\u53d6\u5230\u4e03\u725b\u4e91s3\u517c\u5bb9\u534f\u8bae\u4e0a\u4f20\u7684endpoint\n\t// \u6240\u4ee5\uff0c\u9700\u8981\u81ea\u5df1\u8c03\u63a5\u53e3\u67e5\u8be2\u7136\u540e\u62fc\u51d1\u3002\u4e03\u725b\u8fd9\u4e2a\u5751\u8d27\u3002\n\tpublic function getQiuniuEndpointByKey($key,$bucket){\n\n\t\t$query_url = \"https://api.qiniu.com/v2/query?ak={$key}&bucket={$bucket}\";\n\t\t$res = http_post($query_url,array());\n\n\t\t$array = json_decode($res,true) ;\n\t\t// var_dump($array);exit();\n\t\tif($array && $array['region'] ){\n\t\t\tswitch ($array['region']) {\n\t\t\t\tcase 'z0':\n\t\t\t\t\treturn 'https://s3-cn-east-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'z1':\n\t\t\t\t\treturn 'https://s3-cn-north-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'z2':\n\t\t\t\t\treturn 'https://s3-cn-south-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'na0':\n\t\t\t\t\treturn 'https://s3-us-north-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'as0':\n\t\t\t\t\treturn 'https://s3-ap-southeast-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// \u5224\u65ad\u6587\u4ef6\u540d\u662f\u5426\u5305\u542b\u5371\u9669\u7684\u6269\u5c55\u540d\n\tpublic function isDangerFilename($filename){\n\n\t\t$isDangerStr = function ($filename , $keyword){\n\t\t\tif(strstr(strip_tags(strtolower( $filename )), $keyword) ){\n\t\t\t\treturn true ;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tif (\n\t\t\t $isDangerStr($filename , \".php\")\n\t\t\t|| $isDangerStr($filename , \".svg\")\n\t\t\t|| $isDangerStr($filename , \".htm\")\n\t\t\t|| $isDangerStr($filename , \".shtm\")\n\t\t\t|| $isDangerStr($filename , \"%\")\n\t\t\t|| $isDangerStr($filename , \".xml\")\n\t\t\t|| $isDangerStr($filename , \".xxhtml\")\n\t\t\t|| $isDangerStr($filename , \".asp\")\t\t\t\n\t\t\t|| $isDangerStr($filename , \".xsl\")\n\t\t\t|| $isDangerStr($filename , \".aspx\")\n\t\t\t|| $isDangerStr($filename , \".xsd\")\n\t\t\t|| $isDangerStr($filename , \".asa\")\n\t\t\t|| $isDangerStr($filename , \".cshtml\")\n\t\t\t|| $isDangerStr($filename , \".axd\")\n\t\t\t|| $isDangerStr($filename , \"htm\")\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t}\n\n\n\n}\n"], "fixing_code": ["<?php\n//\u9644\u4ef6/\u56fe\u7247\u7b49\u7b49\nnamespace Api\\Controller;\nuse Think\\Controller;\nclass AttachmentController extends BaseController {\n\n    public function index(){\n        \n        echo 'Attachment';\n       \n    }\n\n    //\u6d4f\u89c8\u9644\u4ef6\n    public function visitFile(){\n      $sign = I(\"sign\");\n      $imageView2 = I(\"imageView2\");\n      $d = D(\"UploadFile\") ;\n      $ret = $d->where(\" sign = '%s' \",array($sign))->find();\n      if ($ret) {\n            $beyond_the_quota = 0 ;\n            $days = ceil(( time() -$ret['addtime'])/86400);//\u81ea\u6dfb\u52a0\u56fe\u7247\u4ee5\u6765\u7684\u5929\u6570\n            $adv_day_times = $ret['visit_times'] / $days  ; //\u5e73\u5747\u6bcf\u5929\u7684\u8bbf\u95ee\u6b21\u6570\n            $flow_rate = ( $ret['file_size'] * $ret['visit_times'] ) / $days ; //\u65e5\u5747\u6d41\u91cf\n\n\n            //\u5982\u679c\u662fapk\u6587\u4ef6\u4e14\u5728\u5fae\u4fe1\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\n            if ( strpos($_SERVER['HTTP_USER_AGENT'], 'MicroMessenger') !== false  && strpos($ret['real_url'] , '.apk') !== false ) {\n                header(\"Content-type: text/html; charset=utf-8\"); \n                echo \"<head><title>\u6e29\u99a8\u63d0\u793a</title></head>\";\n                echo \"<br><h1>\u5fae\u4fe1\u4e0d\u652f\u6301\u76f4\u63a5\u4e0b\u8f7d\uff0c\u8bf7\u70b9\u51fb\u53f3\u4e0a\u89d2\u201c---\u201d\u5728\u5916\u90e8\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00</h1>\";\n                return ;\n\n            }\n\n          $d->where(\" sign = '%s' \",array($sign))->save(array(\"visit_times\" => $ret['visit_times'] + 1  ,\"last_visit_time\"=>time()));\n            //\u8bb0\u5f55\u7528\u6237\u6d41\u91cf\n            D(\"Attachment\")->recordUserFlow($ret['uid'] , $ret['file_size']) ;\n\n            //$ret['cache_url'] = '' ; //\u628a\u8fd9\u4e2a\u53d8\u91cf\u8d4b\u503c\u4e3a\u7a7a\uff0c\u7981\u7528\u6389cache_url;\n            if ($ret['cache_url']) {\n                $url = $ret['cache_url'] ;\n            }else{\n                $url = $ret['real_url']  ;\n            }\n\n        $array = explode(\"/Public/Uploads/\", $url) ;\n        $file_path = \"../Public/Uploads/\".$array[1] ;\n        $oss_open = D(\"Options\")->get(\"oss_open\" ) ;\n        if (!$oss_open \n            && file_exists($file_path)\n            && $ret['display_name']\n            && !strstr(strtolower($file_path),'.bmp')\n            && !strstr(strtolower($file_path),'.jpg')\n            && !strstr(strtolower($file_path),'.png')\n            && !strstr(strtolower($file_path),'.pdf')\n         ) {\n                $this->_downloadFile($file_path, $ret['display_name']);\n        }else{\n                header(\"location:{$url}\");\n            }\n        \n      }else{\n        echo \"www.showdoc.cc\";\n      }\n    }\n\n    //\u4e0a\u4f20\u56fe\u7247\n    public function uploadImg(){\n        $login_user = $this->checkLogin();\n        $item_id = I(\"item_id/d\") ? I(\"item_id/d\") : 0 ;\n        $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;\n\n        \n        if ($_FILES['editormd-image-file']['name'] == 'blob') {\n            $_FILES['editormd-image-file']['name'] .= '.jpg';\n        }\n        \n        if (!$_FILES['editormd-image-file']) {\n           return false;\n        }\n\n        if(!D(\"Attachment\")->isAllowedFilename($_FILES['editormd-image-file']['name'])){\n            $message = \"\u4e0d\u652f\u6301\u4e0a\u4f20\u8be5\u6587\u4ef6\u7c7b\u578b\u3002\u5982\u6709\u9700\u8981\u8bf7\u8054\u7cfb\u7f51\u7ad9\u7ba1\u7406\u5458\" ;\n            echo json_encode(array(\"message\"=>$message,\"success\"=>0));\n            return false;\n        }\n\n        $url = D(\"Attachment\")->upload($_FILES , 'editormd-image-file' , $login_user['uid'] , $item_id , $page_id ) ;\n        if ($url) {\n            echo json_encode(array(\"url\"=>$url,\"success\"=>1));\n        }\n\n    }\n\n    //\u4e0a\u4f20\u9644\u4ef6\n    public function attachmentUpload(){\n        $login_user = $this->checkLogin();\n        $item_id = I(\"item_id/d\") ? I(\"item_id/d\") : 0 ;\n        $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;\n        $uploadFile = $_FILES['file'] ;\n \n        // \u5982\u679c\u9644\u4ef6\u662f\u8981\u4e0a\u4f20\u7ed1\u5b9a\u5230\u67d0\u4e2a\u9875\u9762\uff0c\u90a3\u4e48\u68c0\u9a8c\u9879\u76ee\u6743\u9650\u3002\u5982\u679c\u4e0d\u7ed1\u5b9a\uff0c\u53ea\u662f\u4e0a\u4f20\u5230\u81ea\u5df1\u7684\u6587\u4ef6\u5e93\uff0c\u5219\u4e0d\u9700\u8981\u6821\u9a8c\u9879\u76ee\u6743\u9650\n        if( $page_id > 0 || $item_id > 0){\n            if (!$this->checkItemEdit($login_user['uid'] , $item_id)) {\n                $this->sendError(10103);\n                return;\n            }\n        }\n        \n        if (!$uploadFile) {\n           return false;\n        }\n\n        if(!D(\"Attachment\")->isAllowedFilename($uploadFile['name'])){\n            $this->sendError(10101,'\u4e0d\u652f\u6301\u4e0a\u4f20\u8be5\u6587\u4ef6\u7c7b\u578b\u3002\u5982\u6709\u9700\u8981\u8bf7\u8054\u7cfb\u7f51\u7ad9\u7ba1\u7406\u5458');\n            return false;\n        }\n\n        $url = D(\"Attachment\")->upload($_FILES , 'file' , $login_user['uid'] , $item_id , $page_id ) ;\n        if ($url) {\n            echo json_encode(array(\"url\"=>$url,\"success\"=>1));\n        }\n\n    }\n    //\u9875\u9762\u7684\u4e0a\u4f20\u9644\u4ef6\u5217\u8868\n    public function pageAttachmentUploadList(){\n        $login_user = $this->checkLogin(false);\n        $item_id = I(\"item_id/d\") ? I(\"item_id/d\") : 0 ;\n        $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;\n        if (!$page_id) {\n            $this->sendError(10103,\"\u8bf7\u81f3\u5c11\u5148\u4fdd\u5b58\u4e00\u6b21\u9875\u9762\u5185\u5bb9\");\n            return;\n        }\n        $return = array() ;\n        $files = D(\"UploadFile\")->join(\" file_page on file_page.file_id = upload_file.file_id\")->field(\"upload_file.* , file_page.item_id as item_id ,file_page.page_id as page_id  \")->where(\"file_page.page_id = '$page_id' \")->order(\"file_page.addtime desc\")->select();\n        if ($files) {\n            $item_id = $files[0]['item_id'] ;\n            if (!$this->checkItemVisit($login_user['uid'] , $item_id)) {\n                $this->sendError(10103);\n                return;\n            }\n            foreach ($files as $key => $value) {\n                $url = '';\n                if($value['sign']){\n                   $url =  server_url(\"api/attachment/visitFile\",array(\"sign\" => $value['sign'])) ;\n                }else{\n                  $url =  $value['real_url'] ;\n                }\n                $return[] = array(\n                    \"file_id\"=>$value['file_id'],\n                    \"display_name\"=>$value['display_name'],\n                    \"url\"=>$url,\n                    \"addtime\"=> date(\"Y-m-d H:i:s\" , $value['addtime'] ),\n                    );\n            }\n\n        }\n        $this->sendResult($return);\n\n    }\n\n    //\u5220\u9664\u9875\u9762\u4e2d\u5df2\u4e0a\u4f20\u6587\u4ef6\n    public function deletePageUploadFile(){\n        $login_user = $this->checkLogin();\n        $file_id = I(\"file_id/d\") ? I(\"file_id/d\") : 0 ;\n        $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;\n        $count = D(\"FilePage\")->where(\" file_id = '$file_id' and page_id > 0   \")->count() ;\n        if($count <= 1 ){\n            $this->deleteMyAttachment();\n        }else{\n            $page = M(\"Page\")->where(\" page_id = '$page_id' \")->find();\n            if (!$this->checkItemEdit($login_user['uid'] , $page['item_id'])) {\n                $this->sendError(10103);\n                return;\n            }\n            $res = D(\"FilePage\")->where(\" file_id = '$file_id' and page_id = '$page_id'   \")->delete() ;\n            if($res){\n                $this->sendResult(array());\n            }else{\n                $this->sendError(10101,\"\u5220\u9664\u5931\u8d25\");\n            }\n\n        }\n        \n    }\n\n    //\u83b7\u53d6\u5168\u7ad9\u7684\u9644\u4ef6\u5217\u8868\u3002\u7ed9\u7ba1\u7406\u5458\u67e5\u770b\u9644\u4ef6\u7528\n    public function getAllList(){\n        $login_user = $this->checkLogin();\n        $this->checkAdmin(); //\u91cd\u8981\uff0c\u6821\u9a8c\u7ba1\u7406\u5458\u8eab\u4efd\n        $page = I(\"page/d\");\n        $count = I(\"count/d\");\n        $attachment_type = I(\"attachment_type/d\");\n        $display_name = I(\"display_name\");\n        $username = I(\"username\");\n        $return = array() ;\n        $where = ' 1 = 1 ';\n        if($attachment_type == 1 ){\n            $where .=\" and file_type like '%image%' \" ;\n        }\n        if($attachment_type == 2 ){\n            $where .=\" and file_type not like '%image%' \" ;\n        }\n        if($display_name){\n            $display_name =  \\SQLite3::escapeString($display_name) ;\n            $where .=\" and display_name  like '%{$display_name}%' \" ;\n        }\n        if($username){\n            $username =  \\SQLite3::escapeString($username) ;\n            $uid = D(\"User\")->where(\" username = '{$username}' \")->getField('uid') ;\n            $uid = $uid ? $uid  : -99 ;\n            $where .=\" and uid  = '{$uid}' \" ;\n        }\n        $files = D(\"UploadFile\")->where($where)->order(\"addtime desc\")->page($page ,$count)->select();\n        if ($files) {\n            foreach ($files as $key => $value) {\n                $username = '';\n                if($value['uid']){\n                    $username = D(\"User\")->where(\" uid = {$value['uid']} \")->getField('username') ;\n                }\n                $url = '';\n                if($value['sign']){\n                   $url =  server_url(\"api/attachment/visitFile\",array(\"sign\" => $value['sign'])) ;\n                }else{\n                  $url =  $value['real_url'] ;\n                }\n                $return['list'][] = array(\n                    \"file_id\"=>$value['file_id'],\n                    \"username\"=>$username,\n                    \"uid\"=>$value['uid'],\n                    \"file_type\"=>$value['file_type'],\n                    \"visit_times\"=>$value['visit_times'],\n                    \"file_size\"=>$value['file_size'],\n                    \"item_id\"=>$value['item_id'],\n                    \"page_id\"=>$value['page_id'],\n                    \"file_size_m\"=>round( $value['file_size']/(1024*1024),3),\n                    \"display_name\"=>$value['display_name']?$value['display_name']:'',\n                    \"url\"=>$url ,\n                    \"addtime\"=> date(\"Y-m-d H:i:s\" , $value['addtime'] ),\n                    \"last_visit_time\"=> date(\"Y-m-d H:i:s\" , $value['last_visit_time'] ),\n                    );\n            }\n\n        }\n        $return['total'] = D(\"UploadFile\")->where($where)->count();\n        $used = D(\"UploadFile\")->where($where)->getField('sum(file_size)');\n        $return['used'] = $used ;\n        $return['used_m'] = round( $used/(1024*1024),3) ;\n        $this->sendResult($return);\n    }\n\n    //\u5220\u9664\u9644\u4ef6\n    public function deleteAttachment(){\n        $login_user = $this->checkLogin();\n        $this->checkAdmin(); //\u91cd\u8981\uff0c\u6821\u9a8c\u7ba1\u7406\u5458\u8eab\u4efd\n        $file_id = I(\"file_id/d\") ? I(\"file_id/d\") : 0 ;\n\n        $file = D(\"UploadFile\")->where(\"file_id = '$file_id' \")->find();\n\n        $ret = D(\"Attachment\")->deleteFile($file_id);\n        if ($ret) {\n            $this->sendResult(array());\n        }else{\n            $this->sendError(10101,\"\u5220\u9664\u5931\u8d25\");\n        }\n    }\n\n    //\u83b7\u53d6\u6211\u7684\u9644\u4ef6\u5217\u8868\n    public function getMyList(){\n        $login_user = $this->checkLogin();\n        $page = I(\"page/d\");\n        $count = I(\"count/d\");\n        $attachment_type = I(\"attachment_type/d\");\n        $display_name = I(\"display_name\");\n        $username = I(\"username\");\n        $return = array() ;\n        $where = \" uid  = {$login_user['uid']} \";\n        if($attachment_type == 1 ){\n            $where .=\" and file_type like '%image%' \" ;\n        }\n        if($attachment_type == 2 ){\n            $where .=\" and file_type not like '%image%' \" ;\n        }\n        if($display_name){\n            $display_name =  \\SQLite3::escapeString($display_name) ;\n            $where .=\" and display_name  like '%{$display_name}%' \" ;\n        }\n        $files = D(\"UploadFile\")->where($where)->order(\"addtime desc\")->page($page ,$count)->select();\n        if ($files) {\n            foreach ($files as $key => $value) {\n                $username = '';\n                $return['list'][] = array(\n                    \"file_id\"=>$value['file_id'],\n                    \"uid\"=>$value['uid'],\n                    \"file_type\"=>$value['file_type'],\n                    \"visit_times\"=>$value['visit_times'],\n                    \"file_size\"=>$value['file_size'],\n                    \"item_id\"=>$value['item_id'],\n                    \"page_id\"=>$value['page_id'],\n                    \"file_size_m\"=>round( $value['file_size']/(1024*1024),3),\n                    \"display_name\"=>$value['display_name']?$value['display_name']:'',\n                    \"url\"=>server_url(\"api/attachment/visitFile\",array(\"sign\" => $value['sign'])),\n                    \"addtime\"=> date(\"Y-m-d H:i:s\" , $value['addtime'] ),\n                    \"last_visit_time\"=> date(\"Y-m-d H:i:s\" , $value['last_visit_time'] ),\n                    );\n            }\n\n        }\n        $return['total'] = D(\"UploadFile\")->where($where)->count();\n        $used = D(\"UploadFile\")->where($where)->getField('sum(file_size)');\n        $return['used'] = $used ;\n        $return['used_m'] = round( $used/(1024*1024),3) ;\n        $used_flow =  D(\"Attachment\")->getUserFlow($login_user['uid']) ; ; //\u8be5\u7528\u6237\u7684\u672c\u6708\u4f7f\u7528\u6d41\u91cf\n        $return['used_flow_m'] = round( $used_flow/(1024*1024),3) ;\n\n        $this->sendResult($return);\n    }\n\n    //\u5220\u9664\u9644\u4ef6\n    public function deleteMyAttachment(){\n        $login_user = $this->checkLogin();\n        $file_id = I(\"file_id/d\") ? I(\"file_id/d\") : 0 ;\n\n        $file = D(\"UploadFile\")->where(\"file_id = '$file_id' and uid ='$login_user[uid]' \")->find();\n\n        if($file){\n            $ret = D(\"Page\")->deleteFile($file_id);\n            if ($ret) {\n                $this->sendResult(array());\n                return ;\n            }\n        }\n        $this->sendError(10101,\"\u5220\u9664\u5931\u8d25\");\n    }\n\n    //\u5c06\u5df2\u4e0a\u4f20\u6587\u4ef6\u7ed1\u5b9a\u5230\u9875\u9762\u4e2d\n    public function bindingPage(){\n        $login_user = $this->checkLogin();\n        $file_id = I(\"file_id/d\") ? I(\"file_id/d\") : 0 ;\n        $page_id = I(\"page_id/d\");\n        $file = D(\"UploadFile\")->where(\"file_id = '$file_id' and uid ='$login_user[uid]' \")->find();\n        $page = M(\"Page\")->where(\" page_id = '$page_id' \")->find();\n        if (!$this->checkItemEdit($login_user['uid'] , $page['item_id'])) {\n            $this->sendError(10103);\n            return;\n        }\n        $insert = array(\n            \"file_id\" => $file_id,\n            \"item_id\" => $page['item_id'] ,\n            \"page_id\" => $page_id,\n            \"addtime\" => time(),\n            );\n        $ret = D(\"FilePage\")->add($insert);\n        if( $ret){\n            $this->sendResult(array());\n        }else{\n            $this->sendError(10101);\n        }\n\n    }\n\n    //\u8f93\u51fa\u672c\u5730\u6587\u4ef6\u5230\u6d4f\u89c8\u5668\n    public function _downloadFile($filename, $rename='showdoc') {\n\n    \n        //\u8bbe\u7f6e\u811a\u672c\u7684\u6700\u5927\u6267\u884c\u65f6\u95f4\uff0c\u8bbe\u7f6e\u4e3a0\u5219\u65e0\u65f6\u95f4\u9650\u5236\n        set_time_limit(3000);\n        ini_set('max_execution_time', '0');\n    \n        //\u901a\u8fc7header()\u53d1\u9001\u5934\u4fe1\u606f\n        //\u56e0\u4e3a\u4e0d\u77e5\u9053\u6587\u4ef6\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\uff0c\u544a\u8bc9\u6d4f\u89c8\u5668\u8f93\u51fa\u7684\u662f\u5b57\u8282\u6d41\n        header('content-type:application/octet-stream');\n    \n        //\u544a\u8bc9\u6d4f\u89c8\u5668\u8fd4\u56de\u7684\u6587\u4ef6\u5927\u5c0f\u7c7b\u578b\u662f\u5b57\u8282\n        header('Accept-Ranges:bytes');\n    \n        //\u83b7\u5f97\u6587\u4ef6\u5927\u5c0f\n        $filesize = filesize($filename);//(\u6b64\u65b9\u6cd5\u65e0\u6cd5\u83b7\u53d6\u5230\u8fdc\u7a0b\u6587\u4ef6\u5927\u5c0f)\uff0c\u8fdc\u7a0b\u6587\u4ef6\u7528\u4e0b\u9762get_headers\u65b9\u6cd5\n        //$header_array = get_headers($filename, true);\n        //$filesize = $header_array['Content-Length'];\n        //var_dump($header_array);exit();\n        //\u544a\u8bc9\u6d4f\u89c8\u5668\u8fd4\u56de\u7684\u6587\u4ef6\u5927\u5c0f\n        header('Accept-Length:'.$filesize);\n        //\u544a\u8bc9\u6d4f\u89c8\u5668\u6587\u4ef6\u4f5c\u4e3a\u9644\u4ef6\u5904\u7406\u5e76\u4e14\u8bbe\u5b9a\u6700\u7ec8\u4e0b\u8f7d\u5b8c\u6210\u7684\u6587\u4ef6\u540d\u79f0\n        header('content-disposition:attachment;filename='.basename($rename));\n    \n        //\u9488\u5bf9\u5927\u6587\u4ef6\uff0c\u89c4\u5b9a\u6bcf\u6b21\u8bfb\u53d6\u6587\u4ef6\u7684\u5b57\u8282\u6570\u4e3a4096\u5b57\u8282\uff0c\u76f4\u63a5\u8f93\u51fa\u6570\u636e\n        $read_buffer = 4096;\n        $handle = fopen($filename, 'rb');\n        //\u603b\u7684\u7f13\u51b2\u7684\u5b57\u8282\u6570\n        $sum_buffer = 0;\n        //\u53ea\u8981\u6ca1\u5230\u6587\u4ef6\u5c3e\uff0c\u5c31\u4e00\u76f4\u8bfb\u53d6\n        while(!feof($handle) && $sum_buffer<$filesize) {\n            echo fread($handle,$read_buffer);\n            $sum_buffer += $read_buffer;\n        }\n    \n        //\u5173\u95ed\u53e5\u67c4\n        fclose($handle);\n\n    }\n\n}\n", "<?php\nnamespace Api\\Model;\nuse Api\\Model\\BaseModel;\nuse AsyncAws\\S3\\S3Client;\n\n/**\n * \n * @author star7th      \n */\nclass AttachmentModel extends BaseModel {\n\n\tProtected $autoCheckFields = false;  //\u4e00\u5b9a\u8981\u5173\u95ed\u5b57\u6bb5\u7f13\u5b58\uff0c\u4e0d\u7136\u4f1a\u62a5\u627e\u4e0d\u5230\u8868\u7684\u9519\u8bef\n\n\t//\u83b7\u53d6\u67d0\u4e2a\u7528\u6237\u7684\u5f53\u524d\u5df2\u4f7f\u7528\u9644\u4ef6\u6d41\u91cf\n\tpublic function getUserFlow($uid){\n\t\t$month = Date(\"Y-m\") ;\n\t\t$file_flow = D(\"FileFlow\")->where(\" uid = '%s'  and date_month = '$month' \" , array($uid))->find() ;\n\t\tif($file_flow){\n\t\t\treturn intval($file_flow['used']) ;\n\t\t}else{\n\t\t\tD(\"FileFlow\")->add(array(\n\t\t\t\t\"uid\" => $uid ,\n\t\t\t\t\"used\" => 0  ,\n\t\t\t\t\"date_month\" => $month ,\n\n\t\t\t));\n\t\t\treturn 0 ;\n\t\t}\n\t}\n\n\t//\u8bb0\u5f55\u67d0\u4e2a\u7528\u6237\u6d41\u91cf\n\tpublic function recordUserFlow($uid , $file_size){\n\t\t$month = Date(\"Y-m\") ;\n\t\t$used = $this->getUserFlow($uid) ;\n\t\treturn D(\"FileFlow\")->where(\" uid = '%s'  and date_month = '$month' \" , array($uid))->save(array(\n\t\t\t\"used\" => $used + intval($file_size) \n\t\t));\n\t}\n\n\tpublic function deleteFile($file_id){\n\t\t$file_id = intval($file_id) ;\n\t\t$file = D(\"UploadFile\")->where(\"file_id = '$file_id' \")->find();\n\t\t$real_url = $file['real_url'] ;\n\t\t$array = explode(\"/Public/Uploads/\", $real_url) ;\n\t\t$file_path = \"../Public/Uploads/\".$array[1] ;\n\t\tif (file_exists($file_path)) {\n\t\t\t@unlink($file_path);\n\t\t}\n\t\t$this->deleteOss($real_url);\n\t\tD(\"UploadFile\")->where(\" file_id = '$file_id' \")->delete();\n\t\tD(\"FilePage\")->where(\" file_id = '$file_id' \")->delete();\n\t\treturn true ;\n\n\t}\n\n\t//\u4e0a\u4f20\u6587\u4ef6\uff0c\u8fd4\u56deurl\n\tpublic function upload($_files , $file_key , $uid , $item_id = 0  , $page_id = 0  ){\n\t\t$uploadFile = $_files[$file_key] ;\n\n\t\tif( !$this->isAllowedFilename($_files[$file_key]['name']) ){\n\t\t\treturn false;\n\t\t}\n\n\t\t$oss_open = D(\"Options\")->get(\"oss_open\" ) ;\n\t\tif ($oss_open) {\n\t\t\t\t$url = $this->uploadOss($uploadFile);\n\t\t\t\tif ($url) {\n\t\t\t\t\t\t$sign = md5($url.time().rand()) ;\n\t\t\t\t\t\t$insert = array(\n\t\t\t\t\t\t\"sign\" => $sign,\n\t\t\t\t\t\t\"uid\" => $uid,\n\t\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\t\"display_name\" => $uploadFile['name'],\n\t\t\t\t\t\t\"file_type\" => $uploadFile['type'],\n\t\t\t\t\t\t\"file_size\" => $uploadFile['size'],\n\t\t\t\t\t\t\"real_url\" => $url,\n\t\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t\t);\n\t\t\t\t\t\t$file_id = D(\"UploadFile\")->add($insert);\n\t\t\t\t\t\t$insert = array(\n\t\t\t\t\t\t\t\"file_id\" => $file_id,\n\t\t\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t$ret = D(\"FilePage\")->add($insert);\n\t\t\t\t\t\t$url = server_url(\"api/attachment/visitFile\",array(\"sign\" => $sign)); \n\t\t\t\t\t  return $url ;\n\t\t\t\t}\n\t\t}else{\n\t\t\t$upload = new \\Think\\Upload();// \u5b9e\u4f8b\u5316\u4e0a\u4f20\u7c7b\n\t\t\t$upload->maxSize  = 1003145728 ;// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5927\u5c0f\n\t\t\t$upload->rootPath = './../Public/Uploads/';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u76ee\u5f55\n\t\t\t$upload->savePath = '';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5b50\u76ee\u5f55\n\t\t\t$info = $upload->uploadOne($uploadFile) ;\n\t\t\tif(!$info) {// \u4e0a\u4f20\u9519\u8bef\u63d0\u793a\u9519\u8bef\u4fe1\u606f\n\t\t\t\tvar_dump($upload->getError());\n\t\t\t\treturn;\n\t\t\t}else{// \u4e0a\u4f20\u6210\u529f \u83b7\u53d6\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f\n\t\t\t\t$url = site_url().'/Public/Uploads/'.$info['savepath'].$info['savename'] ;\n\t\t\t\t$sign = md5($url.time().rand()) ;\n\t\t\t\t$insert = array(\n\t\t\t\t\t\"sign\" => $sign,\n\t\t\t\t\t\"uid\" => $uid,\n\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\"display_name\" => $uploadFile['name'],\n\t\t\t\t\t\"file_type\" => $uploadFile['type'],\n\t\t\t\t\t\"file_size\" => $uploadFile['size'],\n\t\t\t\t\t\"real_url\" => $url,\n\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t);\n\t\t\t\t\t$file_id = D(\"UploadFile\")->add($insert);\n\t\t\t\t\t$insert = array(\n\t\t\t\t\t\t\"file_id\" => $file_id,\n\t\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t\t);\n\t\t\t\t\t$ret = D(\"FilePage\")->add($insert);\n\t\t\t\t$url = server_url(\"api/attachment/visitFile\",array(\"sign\" => $sign));\n\t\t\t\treturn $url ;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n  \t//\u4e0a\u4f20\u5230oss\u3002\u53c2\u6570$uploadFile\u662f\u6587\u4ef6\u4e0a\u4f20\u6d41\uff0c\u5982$_FILES['file'] .\u4e5f\u53ef\u4ee5\u81ea\u5df1\u62fc\u51d1\n\tpublic function uploadOss($uploadFile){\n\t\t$oss_setting_json = D(\"Options\")->get(\"oss_setting\") ;\n\t\t$oss_setting = json_decode($oss_setting_json,1);\n\n\t\tif ($oss_setting && $oss_setting['oss_type'] && ( $oss_setting['oss_type'] == 's3_storage' || $oss_setting['oss_type'] == 'aliyun') ) {\n\n\t\t\treturn $this->uploadS3($uploadFile , $oss_setting);\n\n\t\t}\n\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qiniu') {\n\n\t\t\t$oss_setting['endpoint'] = $this->getQiuniuEndpointByKey($oss_setting['key'] , $oss_setting['bucket']);\n\t\t\treturn $this->uploadS3($uploadFile , $oss_setting); \n\n\t\t}\n\t\t// \u817e\u8baf\u4e91\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qcloud') {\n\t\t\t// \u817e\u8baf\u4e91\uff0c\u4e00\u5f00\u59cb\u8ba9\u7528\u6237\u586b\u5199region\u800c\u6ca1\u586b\u5199endpoint\uff0c\u6240\u4ee5\u8981\u81ea\u5df1\u62fc\u63a5\n\t\t\t$oss_setting['endpoint'] = \"https://cos.{$oss_setting['region']}.myqcloud.com\";\n\t\t\t// \u817e\u8baf\u4e91\u7684SecretId\u76f8\u5f53\u4e8es3\u7684key\uff0c secretKey\u76f8\u5f53\u4e8es3\u7684secret\n\t\t\t$oss_setting['key'] = $oss_setting['secretId']  ;\n\t\t\t$oss_setting['secret'] = $oss_setting['secretKey']  ;\n\t\t\treturn $this->uploadS3($uploadFile , $oss_setting); \n\t\t}\n\n\n\t\treturn false ;\n\t}\n\n\t// \u901a\u8fc7s3\u534f\u8bae\u4e0a\u4f20\n\t// \u6ce8\u610f\u4f20\u8fdb\u6765\u7684oss_setting\u6570\u7ec4\u9700\u8981\u5148\u8f6c\u6362\u6210\u5408\u6cd5\u683c\u5f0f\n\tpublic function uploadS3($uploadFile , $oss_setting){\n\n\t\t$ext = strrchr($uploadFile['name'], '.'); //\u83b7\u53d6\u6269\u5c55\u540d\n\t\t$oss_path = \"showdoc_\".get_rand_str().$ext;\n\n\t\t// \u5982\u679c\u4e0d\u5305\u542b\u534f\u8bae\u5934\uff0c\u81ea\u5df1\u7ed9\u5b83\u8865\u5145\n\t\tif(!strstr($oss_setting['endpoint'] , '://')){\n\t\t\t$oss_setting['endpoint'] = 'https://'.$oss_setting['endpoint'] ;\n\t\t}\n\n\t\t$s3 = new S3Client([\n\t\t\t'accessKeyId' => $oss_setting['key'],\n\t\t\t'accessKeySecret' => $oss_setting['secret'] ,\n\t\t\t'endpoint' => $oss_setting['endpoint'] ,\n\t\t\t'sendChunkedBody' => false\n\t\t]);\n\t\n\t\t// Send a PutObject request and get the result object.\n\t\t$resObj = $s3->putObject([\n\t\t\t'Bucket' => $oss_setting['bucket'],\n\t\t\t'Key'    => $oss_path,\n\t\t\t'Body'   => fopen($uploadFile['tmp_name'], 'rb')\n\t\t]);\n\n\t\t// \u4e0d\u629b\u51fa\u5f02\u5e38\uff0c\u9ed8\u8ba4\u5c31\u662f\u6210\u529f\u7684\n\n\t\tif ($oss_setting['domain']) {\n\t\t\treturn $oss_setting['protocol'] . '://'.$oss_setting['domain'].\"/\".$oss_path ;\n\t\t}else{\n\t\t\t$tmp_array = parse_url($oss_setting['endpoint']);\n\t\t\t$endpoint_host = $tmp_array['host'] ;\n\t\t\treturn 'https://'.$oss_setting['bucket'].'.'.$endpoint_host.'/'.$oss_path;\n\t\t}\n\t}\n\n  \t//\u4eceoss\u4e2d\u5220\u9664\n\tpublic function deleteOss($file_url){\n\t\t$oss_setting_json = D(\"Options\")->get(\"oss_setting\") ;\n\t\t$oss_setting = json_decode($oss_setting_json,1);\n\t\tif ($oss_setting && $oss_setting['oss_type'] && ( $oss_setting['oss_type'] == 's3_storage' || $oss_setting['oss_type'] == 'aliyun') ) {\n\t\t\treturn $this->deleteS3($file_url , $oss_setting);\n\t\t}\n\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qiniu') {\n\t\t\t$oss_setting['endpoint'] = $this->getQiuniuEndpointByKey($oss_setting['key'] , $oss_setting['bucket']);\n\t\t\treturn $this->deleteS3($file_url , $oss_setting); \n\t\t}\n\t\t//var_dump($config);\n\t\t// \u817e\u8baf\u4e91\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qcloud') {\n\n\t\t\t// \u817e\u8baf\u4e91\uff0c\u4e00\u5f00\u59cb\u8ba9\u7528\u6237\u586b\u5199region\u800c\u6ca1\u586b\u5199endpoint\uff0c\u6240\u4ee5\u8981\u81ea\u5df1\u62fc\u63a5\n\t\t\t$oss_setting['endpoint'] = \"https://cos.{$oss_setting['region']}.myqcloud.com\";\n\t\t\t// \u817e\u8baf\u4e91\u7684SecretId\u76f8\u5f53\u4e8es3\u7684key\uff0c secretKey\u76f8\u5f53\u4e8es3\u7684secret\n\t\t\t$oss_setting['key'] = $oss_setting['secretId']  ;\n\t\t\t$oss_setting['secret'] = $oss_setting['secretKey']  ;\n\t\t\treturn $this->deleteS3($file_url , $oss_setting); \n\n\t\t}\n\n\n\t\treturn false ;\n\t}\n\n\t// \u901a\u8fc7s3\u534f\u8bae\u5220\u9664\n\t// \u6ce8\u610f\u4f20\u8fdb\u6765\u7684oss_setting\u6570\u7ec4\u9700\u8981\u5148\u8f6c\u6362\u6210\u5408\u6cd5\u683c\u5f0f\n\tpublic function deleteS3($file_url , $oss_setting){\n\n\t\t$array = parse_url($file_url) ;\n\t\t$file = $array['path'] ;  // \u5f97\u5230\u7684\u662furl\u4e2d\u7684\u8def\u5f84\uff0c\u4f8b\u5982/path_.txt\n\t\t$file = substr($file, 1); // \u8981\u628a\u8def\u5f84\u524d\u7684/\u53bb\u6389\uff0c\u624d\u662f\u5f97\u5230\u6587\u4ef6\u540dpath_.txt\n\t\t// \u5982\u679c\u4e0d\u5305\u542b\u534f\u8bae\u5934\uff0c\u81ea\u5df1\u7ed9\u5b83\u8865\u5145\n\t\tif(!strstr($oss_setting['endpoint'] , '://')){\n\t\t\t$oss_setting['endpoint'] = 'https://'.$oss_setting['endpoint'] ;\n\t\t}\n\n\t\t$s3 = new S3Client([\n\t\t\t'accessKeyId' => $oss_setting['key'],\n\t\t\t'accessKeySecret' => $oss_setting['secret'] ,\n\t\t\t'endpoint' => $oss_setting['endpoint'] ,\n\t\t]);\n\t\n\t\t// Send a PutObject request and get the result object.\n\t\t$resObj = $s3->deleteObject([\n\t\t\t'Bucket' => $oss_setting['bucket'],\n\t\t\t'Key'    => $file,\n\t\t]);\n\n\t\t// \u4e0d\u629b\u51fa\u5f02\u5e38\uff0c\u9ed8\u8ba4\u5c31\u662f\u6210\u529f\u7684\n\n\n\t}\n\n\t// \u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u5f53\u521d\u6ca1\u6709\u8ba9\u7528\u6237\u586b\u5199\u4e03\u725b\u4e91\u7684region\u3002\u800c\u4e14\u5373\u4f7f\u586b\u5199\u4e86\uff0c\u4e5f\u4e0d\u80fd\u76f4\u63a5\u83b7\u53d6\u5230\u4e03\u725b\u4e91s3\u517c\u5bb9\u534f\u8bae\u4e0a\u4f20\u7684endpoint\n\t// \u6240\u4ee5\uff0c\u9700\u8981\u81ea\u5df1\u8c03\u63a5\u53e3\u67e5\u8be2\u7136\u540e\u62fc\u51d1\u3002\u4e03\u725b\u8fd9\u4e2a\u5751\u8d27\u3002\n\tpublic function getQiuniuEndpointByKey($key,$bucket){\n\n\t\t$query_url = \"https://api.qiniu.com/v2/query?ak={$key}&bucket={$bucket}\";\n\t\t$res = http_post($query_url,array());\n\n\t\t$array = json_decode($res,true) ;\n\t\t// var_dump($array);exit();\n\t\tif($array && $array['region'] ){\n\t\t\tswitch ($array['region']) {\n\t\t\t\tcase 'z0':\n\t\t\t\t\treturn 'https://s3-cn-east-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'z1':\n\t\t\t\t\treturn 'https://s3-cn-north-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'z2':\n\t\t\t\t\treturn 'https://s3-cn-south-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'na0':\n\t\t\t\t\treturn 'https://s3-us-north-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'as0':\n\t\t\t\t\treturn 'https://s3-ap-southeast-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// \u5224\u65ad\u6587\u4ef6\u540d\u662f\u5426\u5305\u542b\u5371\u9669\u7684\u6269\u5c55\u540d\n\t// \u51c6\u5907\u5f03\u7528\u3002\u56e0\u4e3a\u4e00\u4e2a\u4e2aban\u592a\u9ebb\u70e6\u4e86\u3002\u51c6\u5907\u6539\u7528\u767d\u540d\u5355\u673a\u5236\n\tpublic function isDangerFilename($filename){\n\n\t\t$isDangerStr = function ($filename , $keyword){\n\t\t\tif(strstr(strip_tags(strtolower( $filename )), $keyword) ){\n\t\t\t\treturn true ;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tif (\n\t\t\t $isDangerStr($filename , \".php\")\n\t\t\t|| $isDangerStr($filename , \".svg\")\n\t\t\t|| $isDangerStr($filename , \".htm\")\n\t\t\t|| $isDangerStr($filename , \".shtm\")\n\t\t\t|| $isDangerStr($filename , \"%\")\n\t\t\t|| $isDangerStr($filename , \".xml\")\n\t\t\t|| $isDangerStr($filename , \".xxhtml\")\n\t\t\t|| $isDangerStr($filename , \".asp\")\t\t\t\n\t\t\t|| $isDangerStr($filename , \".xsl\")\n\t\t\t|| $isDangerStr($filename , \".aspx\")\n\t\t\t|| $isDangerStr($filename , \".xsd\")\n\t\t\t|| $isDangerStr($filename , \".asa\")\n\t\t\t|| $isDangerStr($filename , \".cshtml\")\n\t\t\t|| $isDangerStr($filename , \".axd\")\n\t\t\t|| $isDangerStr($filename , \"htm\")\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t}\n\n\t// \u5224\u65ad\u4e0a\u4f20\u7684\u6587\u4ef6\u6269\u5c55\u540d\u662f\u5426\u5904\u4e8e\u767d\u540d\u5355\u5185\n\tpublic function isAllowedFilename($filename){\n\t\t$allow_array = array(\n\t\t\t'.jpg','.jpeg','.png','.bmp','.gif','.ico','.webp',\n\t\t\t'.mp3','.wav','.m4a','.ogg','.webma','.mp4','.flv',\n\t\t\t'.mov','.webmv','.m3u8a','.flac','.mkv',\n\t\t\t'.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso','.bz2','.epub',\n\t\t\t'.pdf','.ofd','.swf','.epub','.xps',\n\t\t\t'.doc','.docx','.odt','.rtf','.docm','.dotm','.dot','.dotx','.wps','.wpt',\n\t\t\t'.ppt','.pptx','.xls','.xlsx','.txt','.md','.psd','.csv',\n\t\t\t'.cer','.ppt','.pub','.properties','.json','.css',\n\t\t\t) ;\n\n\t\t$ext = strtolower(substr($filename,strripos($filename,'.')) ); //\u83b7\u53d6\u6587\u4ef6\u6269\u5c55\u540d\uff08\u8f6c\u4e3a\u5c0f\u5199\u540e\uff09\n\t\tif(in_array( $ext , $allow_array ) ){\n\t\t\treturn true ;\n\t\t}\n\t\treturn false;\n\t}\n\n}\n"], "filenames": ["server/Application/Api/Controller/AttachmentController.class.php", "server/Application/Api/Model/AttachmentModel.class.php"], "buggy_code_start_loc": [82, 60], "buggy_code_end_loc": [114, 323], "fixing_code_start_loc": [82, 60], "fixing_code_end_loc": [116, 342], "type": "CWE-79", "message": "Unrestricted Upload of File with Dangerous Type in GitHub repository star7th/showdoc prior to 2.10.4.", "other": {"cve": {"id": "CVE-2022-0950", "sourceIdentifier": "security@huntr.dev", "published": "2022-03-15T09:15:07.947", "lastModified": "2022-03-21T18:53:35.237", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Unrestricted Upload of File with Dangerous Type in GitHub repository star7th/showdoc prior to 2.10.4."}, {"lang": "es", "value": "Una Subida no Restringida de Archivos de Tipo Peligroso en el repositorio de GitHub star7th/showdoc versiones anteriores a 2.10.4"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 3.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-434"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:showdoc:showdoc:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.10.3", "matchCriteriaId": "EB841EBE-162B-4399-B2A5-B1EE3350CD36"}]}]}], "references": [{"url": "https://github.com/star7th/showdoc/commit/237ac6d43bf3728bf3587c486a23b4a48ea7acb3", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/acc23996-bd57-448f-9eb4-05a8a046c2dc", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/star7th/showdoc/commit/237ac6d43bf3728bf3587c486a23b4a48ea7acb3"}}