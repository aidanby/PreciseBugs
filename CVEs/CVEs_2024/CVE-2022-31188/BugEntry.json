{"buggy_code": ["# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## \\[2.0.0] - Unreleased\n### Added\n- Handle attributes comming from nuclio detectors (<https://github.com/openvinotoolkit/cvat/pull/3917>)\n- Add additional environment variables for Nuclio configuration (<https://github.com/openvinotoolkit/cvat/pull/3894>)\n- Add KITTI segmentation and detection format (<https://github.com/openvinotoolkit/cvat/pull/3757>)\n- Add LFW format (<https://github.com/openvinotoolkit/cvat/pull/3770>)\n- Add Cityscapes format (<https://github.com/openvinotoolkit/cvat/pull/3758>)\n- Add Open Images V6 format (<https://github.com/openvinotoolkit/cvat/pull/3679>)\n- Rotated bounding boxes (<https://github.com/openvinotoolkit/cvat/pull/3832>)\n- Player option: Smooth image when zoom-in, enabled by default (<https://github.com/openvinotoolkit/cvat/pull/3933>)\n- Google Cloud Storage support in UI (<https://github.com/openvinotoolkit/cvat/pull/3919>)\n- Add project tasks paginations (<https://github.com/openvinotoolkit/cvat/pull/3910>)\n- Add remove issue button (<https://github.com/openvinotoolkit/cvat/pull/3952>)\n- Data sorting option (<https://github.com/openvinotoolkit/cvat/pull/3937>)\n- Options to change font size & position of text labels on the canvas (<https://github.com/openvinotoolkit/cvat/pull/3972>)\n- Add \"tag\" return type for automatic annotation in Nuclio (<https://github.com/openvinotoolkit/cvat/pull/3896>)\n- Helm chart: Make user-data-permission-fix optional (<https://github.com/openvinotoolkit/cvat/pull/3994>)\n- Advanced identity access management system, using open policy agent (<https://github.com/openvinotoolkit/cvat/pull/3788>)\n- Organizations to create \"shared space\" for different groups of users (<https://github.com/openvinotoolkit/cvat/pull/3788>)\n- Dataset importing to a project (<https://github.com/openvinotoolkit/cvat/pull/3790>)\n- User is able to customize information that text labels show (<https://github.com/openvinotoolkit/cvat/pull/4029>)\n- Support for uploading manifest with any name (<https://github.com/openvinotoolkit/cvat/pull/4041>)\n- Added information about OpenVINO toolkit to login page (<https://github.com/openvinotoolkit/cvat/pull/4077>)\n- Support for working with ellipses (<https://github.com/openvinotoolkit/cvat/pull/4062>)\n- Add several flags to task creation CLI (<https://github.com/openvinotoolkit/cvat/pull/4119>)\n- Add YOLOv5 serverless function for automatic annotation (<https://github.com/openvinotoolkit/cvat/pull/4178>)\n- Add possibility to change git repository and git export format from already created task (<https://github.com/openvinotoolkit/cvat/pull/3886>)\n- Basic page with jobs list, basic filtration to this list (<https://github.com/openvinotoolkit/cvat/pull/4258>)\n- Added OpenCV.js TrackerMIL as tracking tool (<https://github.com/openvinotoolkit/cvat/pull/4200>)\n- Ability to continue working from the latest frame where an annotator was before (<https://github.com/openvinotoolkit/cvat/pull/4297>)\n- `GET /api/jobs/<id>/commits` was implemented (<https://github.com/openvinotoolkit/cvat/pull/4368>)\n- Advanced filtration and sorting for a list of jobs (<https://github.com/openvinotoolkit/cvat/pull/4319>)\n\n### Changed\n- Users don't have access to a task object anymore if they are assigneed only on some jobs of the task (<https://github.com/openvinotoolkit/cvat/pull/3788>)\n- Different resources (tasks, projects) are not visible anymore for all CVAT instance users by default (<https://github.com/openvinotoolkit/cvat/pull/3788>)\n- API versioning scheme: using accept header versioning instead of namespace versioning (<https://github.com/openvinotoolkit/cvat/pull/4239>)\n- Replaced 'django_sendfile' with 'django_sendfile2' (<https://github.com/openvinotoolkit/cvat/pull/4267>)\n- Use drf-spectacular instead of drf-yasg for swagger documentation (<https://github.com/openvinotoolkit/cvat/pull/4210>)\n\n### Deprecated\n- Job field \"status\" is not used in UI anymore, but it has not been removed from the database yet (<https://github.com/openvinotoolkit/cvat/pull/3788>)\n\n### Removed\n- Review rating, reviewer field from the job instance (use assignee field together with stage field instead) (<https://github.com/openvinotoolkit/cvat/pull/3788>)\n- Training django app (<https://github.com/openvinotoolkit/cvat/pull/4330>)\n- v1 api version support (<https://github.com/openvinotoolkit/cvat/pull/4332>)\n\n### Fixed\n- Fixed Interaction handler keyboard handlers (<https://github.com/openvinotoolkit/cvat/pull/3881>)\n- Points of invisible shapes are visible in autobordering (<https://github.com/openvinotoolkit/cvat/pull/3931>)\n- Order of the label attributes in the object item details(<https://github.com/openvinotoolkit/cvat/pull/3945>)\n- Order of labels in tasks and projects (<https://github.com/openvinotoolkit/cvat/pull/3987>)\n- Fixed task creating with large files via webpage (<https://github.com/openvinotoolkit/cvat/pull/3692>)\n- Added information to export CVAT_HOST when performing local installation for accessing over network (<https://github.com/openvinotoolkit/cvat/pull/4014>)\n- Fixed possible color collisions in the generated colormap (<https://github.com/openvinotoolkit/cvat/pull/4007>)\n- Original pdf file is deleted when using share (<https://github.com/openvinotoolkit/cvat/pull/3967>)\n- Order in an annotation file(<https://github.com/openvinotoolkit/cvat/pull/4087>)\n- Fixed task data upload progressbar (<https://github.com/openvinotoolkit/cvat/pull/4134>)\n- Email in org invitations is case sensitive (<https://github.com/openvinotoolkit/cvat/pull/4153>)\n- Caching for tasks and jobs can lead to an exception if its assignee user is removed (<https://github.com/openvinotoolkit/cvat/pull/4165>)\n- Added intelligent function when paste labels to another task (<https://github.com/openvinotoolkit/cvat/pull/4161>)\n- Uncaught TypeError: this.el.node.getScreenCTM() is null in Firefox (<https://github.com/openvinotoolkit/cvat/pull/4175>)\n- Bug: canvas is busy when start playing, start resizing a shape and do not release the mouse cursor (<https://github.com/openvinotoolkit/cvat/pull/4151>)\n- Bug: could not receive frame N. TypeError: Cannot read properties of undefined (reding \"filename\") (<https://github.com/openvinotoolkit/cvat/pull/4187>)\n- Cannot choose a dataset format for a linked repository if a task type is annotation (<https://github.com/openvinotoolkit/cvat/pull/4203>)\n- Fixed tus upload error over https (<https://github.com/openvinotoolkit/cvat/pull/4154>)\n- Issues disappear when rescale a browser (<https://github.com/openvinotoolkit/cvat/pull/4189>)\n- Auth token key is not returned when registering without email verification (<https://github.com/openvinotoolkit/cvat/pull/4092>)\n- Error in create project from backup for standard 3D annotation (<https://github.com/openvinotoolkit/cvat/pull/4160>)\n- Annotations search does not work correctly in some corner cases (when use complex properties with width, height) (<https://github.com/openvinotoolkit/cvat/pull/4198>)\n- Kibana requests are not proxied due to django-revproxy incompatibility with Django >3.2.x (<https://github.com/openvinotoolkit/cvat/issues/4085>)\n- Content type for getting frame with tasks/{id}/data/ endpoint (<https://github.com/openvinotoolkit/cvat/pull/4333>)\n\n### Security\n- Updated ELK to 6.8.23 which uses log4j 2.17.1 (<https://github.com/openvinotoolkit/cvat/pull/4206>)\n\n## \\[1.7.0] - 2021-11-15\n\n### Added\n\n- cvat-ui: support cloud storages (<https://github.com/openvinotoolkit/cvat/pull/3372>)\n- interactor: add HRNet interactive segmentation serverless function (<https://github.com/openvinotoolkit/cvat/pull/3740>)\n- Added GPU implementation for SiamMask, reworked tracking approach (<https://github.com/openvinotoolkit/cvat/pull/3571>)\n- Progress bar for manifest creating (<https://github.com/openvinotoolkit/cvat/pull/3712>)\n- IAM: Open Policy Agent integration (<https://github.com/openvinotoolkit/cvat/pull/3788>)\n- Add a tutorial on attaching cloud storage AWS-S3 (<https://github.com/openvinotoolkit/cvat/pull/3745>)\n  and Azure Blob Container (<https://github.com/openvinotoolkit/cvat/pull/3778>)\n- The feature to remove annotations in a specified range of frames (<https://github.com/openvinotoolkit/cvat/pull/3617>)\n- Project backup/restore (<https://github.com/openvinotoolkit/cvat/pull/3852>)\n\n### Changed\n\n- UI tracking has been reworked (<https://github.com/openvinotoolkit/cvat/pull/3571>)\n- Updated Django till 3.2.7 (automatic AppConfig discovery)\n- Manifest generation: Reduce creating time (<https://github.com/openvinotoolkit/cvat/pull/3712>)\n- Migration from NPM 6 to NPM 7 (<https://github.com/openvinotoolkit/cvat/pull/3773>)\n- Update Datumaro dependency to 0.2.0 (<https://github.com/openvinotoolkit/cvat/pull/3813>)\n\n### Fixed\n\n- Fixed JSON transform issues in network requests (<https://github.com/openvinotoolkit/cvat/pull/3706>)\n- Display a more user-friendly exception message (<https://github.com/openvinotoolkit/cvat/pull/3721>)\n- Exception `DataCloneError: The object could not be cloned` (<https://github.com/openvinotoolkit/cvat/pull/3733>)\n- Fixed extension comparison in task frames CLI (<https://github.com/openvinotoolkit/cvat/pull/3674>)\n- Incorrect work when copy job list with \"Copy\" button (<https://github.com/openvinotoolkit/cvat/pull/3749>)\n- Iterating over manifest (<https://github.com/openvinotoolkit/cvat/pull/3792>)\n- Manifest removing (<https://github.com/openvinotoolkit/cvat/pull/3791>)\n- Fixed project updated date (<https://github.com/openvinotoolkit/cvat/pull/3814>)\n- Fixed dextr deployment (<https://github.com/openvinotoolkit/cvat/pull/3820>)\n- Migration of `dataset_repo` application (<https://github.com/openvinotoolkit/cvat/pull/3827>)\n- Helm settings for external psql database were unused by backend (<https://github.com/openvinotoolkit/cvat/pull/3779>)\n- Updated WSL setup for development (<https://github.com/openvinotoolkit/cvat/pull/3828>)\n- Helm chart config (<https://github.com/openvinotoolkit/cvat/pull/3784>)\n\n### Security\n\n- Fix security issues on the documentation website unsafe use of target blank\n  and potential clickjacking on legacy browsers (<https://github.com/openvinotoolkit/cvat/pull/3789>)\n\n## \\[1.6.0] - 2021-09-17\n\n### Added\n\n- Added ability to import data from share with cli without copying the data (<https://github.com/openvinotoolkit/cvat/issues/2862>)\n- Notification if the browser does not support nesassary API\n- Added ability to export project as a dataset (<https://github.com/openvinotoolkit/cvat/pull/3365>)\n  and project with 3D tasks (<https://github.com/openvinotoolkit/cvat/pull/3502>)\n- Additional inline tips in interactors with demo gifs (<https://github.com/openvinotoolkit/cvat/pull/3473>)\n- Added intelligent scissors blocking feature (<https://github.com/openvinotoolkit/cvat/pull/3510>)\n- Support cloud storage status (<https://github.com/openvinotoolkit/cvat/pull/3386>)\n- Support cloud storage preview (<https://github.com/openvinotoolkit/cvat/pull/3386>)\n- cvat-core: support cloud storages (<https://github.com/openvinotoolkit/cvat/pull/3313>)\n\n### Changed\n\n- Non-blocking UI when using interactors (<https://github.com/openvinotoolkit/cvat/pull/3473>)\n- \"Selected opacity\" slider now defines opacity level for shapes being drawnSelected opacity (<https://github.com/openvinotoolkit/cvat/pull/3473>)\n- Cloud storage creating and updating (<https://github.com/openvinotoolkit/cvat/pull/3386>)\n- Way of working with cloud storage content (<https://github.com/openvinotoolkit/cvat/pull/3386>)\n\n### Removed\n\n- Support TEMP_KEY_SECRET_KEY_TOKEN_SET for AWS S3 cloud storage (<https://github.com/openvinotoolkit/cvat/pull/3386>)\n\n### Fixed\n\n- Fixed multiple tasks moving (<https://github.com/openvinotoolkit/cvat/pull/3517>)\n- Fixed task creating CLI parameter (<https://github.com/openvinotoolkit/cvat/pull/3519>)\n- Fixed import for MOTS format (<https://github.com/openvinotoolkit/cvat/pull/3612>)\n\n## \\[1.5.0] - 2021-08-02\n\n### Added\n\n- Support of context images for 2D image tasks (<https://github.com/openvinotoolkit/cvat/pull/3122>)\n- Support of cloud storage without copying data into CVAT: server part (<https://github.com/openvinotoolkit/cvat/pull/2620>)\n- Filter `is_active` for user list (<https://github.com/openvinotoolkit/cvat/pull/3235>)\n- Ability to export/import tasks (<https://github.com/openvinotoolkit/cvat/pull/3056>)\n- Add a tutorial for semi-automatic/automatic annotation (<https://github.com/openvinotoolkit/cvat/pull/3124>)\n- Explicit \"Done\" button when drawing any polyshapes (<https://github.com/openvinotoolkit/cvat/pull/3417>)\n- Histogram equalization with OpenCV javascript (<https://github.com/openvinotoolkit/cvat/pull/3447>)\n- Client-side polyshapes approximation when using semi-automatic interactors & scissors (<https://github.com/openvinotoolkit/cvat/pull/3450>)\n- Support of Google Cloud Storage for cloud storage (<https://github.com/openvinotoolkit/cvat/pull/3561>)\n\n### Changed\n\n- Updated manifest format, added meta with related images (<https://github.com/openvinotoolkit/cvat/pull/3122>)\n- Update of COCO format documentation (<https://github.com/openvinotoolkit/cvat/pull/3197>)\n- Updated Webpack Dev Server config to add proxy (<https://github.com/openvinotoolkit/cvat/pull/3368>)\n- Update to Django 3.1.12 (<https://github.com/openvinotoolkit/cvat/pull/3378>)\n- Updated visibility for removable points in AI tools (<https://github.com/openvinotoolkit/cvat/pull/3417>)\n- Updated UI handling for IOG serverless function (<https://github.com/openvinotoolkit/cvat/pull/3417>)\n- Changed Nginx proxy to Traefik in `docker-compose.yml` (<https://github.com/openvinotoolkit/cvat/pull/3409>)\n- Simplify the process of deploying CVAT with HTTPS (<https://github.com/openvinotoolkit/cvat/pull/3409>)\n\n### Fixed\n\n- Project page requests took a long time and did many DB queries (<https://github.com/openvinotoolkit/cvat/pull/3223>)\n- Fixed Python 3.6 support (<https://github.com/openvinotoolkit/cvat/pull/3258>)\n- Incorrect attribute import in tracks (<https://github.com/openvinotoolkit/cvat/pull/3229>)\n- Issue \"is not a constructor\" when create object, save, undo, save, redo save (<https://github.com/openvinotoolkit/cvat/pull/3292>)\n- Fix CLI create an infinite loop if git repository responds with failure (<https://github.com/openvinotoolkit/cvat/pull/3267>)\n- Bug with sidebar & fullscreen (<https://github.com/openvinotoolkit/cvat/pull/3289>)\n- 504 Gateway Time-out on `data/meta` requests (<https://github.com/openvinotoolkit/cvat/pull/3269>)\n- TypeError: Cannot read property 'clientX' of undefined when draw cuboids with hotkeys (<https://github.com/openvinotoolkit/cvat/pull/3308>)\n- Duplication of the cuboids when redraw them (<https://github.com/openvinotoolkit/cvat/pull/3308>)\n- Some code issues in Deep Extreme Cut handler code (<https://github.com/openvinotoolkit/cvat/pull/3325>)\n- UI fails when inactive user is assigned to a task/job (<https://github.com/openvinotoolkit/cvat/pull/3343>)\n- Calculate precise progress of decoding a video file (<https://github.com/openvinotoolkit/cvat/pull/3381>)\n- Falsely successful `cvat_ui` image build in case of OOM error that leads to the default nginx welcome page\n  (<https://github.com/openvinotoolkit/cvat/pull/3379>)\n- Fixed issue when save filtered object in AAM (<https://github.com/openvinotoolkit/cvat/pull/3401>)\n- Context image disappears after undo/redo (<https://github.com/openvinotoolkit/cvat/pull/3416>)\n- Using combined data sources (directory and image) when create a task (<https://github.com/openvinotoolkit/cvat/pull/3424>)\n- Creating task with labels in project (<https://github.com/openvinotoolkit/cvat/pull/3454>)\n- Move task and autoannotation modals were invisible from project page (<https://github.com/openvinotoolkit/cvat/pull/3475>)\n\n## \\[1.4.0] - 2021-05-18\n\n### Added\n\n- Documentation on mask annotation (<https://github.com/openvinotoolkit/cvat/pull/3044>)\n- Hotkeys to switch a label of existing object or to change default label (for objects created with N) (<https://github.com/openvinotoolkit/cvat/pull/3070>)\n- A script to convert some kinds of DICOM files to regular images (<https://github.com/openvinotoolkit/cvat/pull/3095>)\n- Helm chart prototype (<https://github.com/openvinotoolkit/cvat/pull/3102>)\n- Initial implementation of moving tasks between projects (<https://github.com/openvinotoolkit/cvat/pull/3164>)\n\n### Changed\n\n- Place of migration logger initialization (<https://github.com/openvinotoolkit/cvat/pull/3170>)\n\n### Removed\n\n- Kubernetes templates from (<https://github.com/openvinotoolkit/cvat/pull/1962>) due to helm charts (<https://github.com/openvinotoolkit/cvat/pull/3171>)\n\n### Fixed\n\n- Export of instance masks with holes (<https://github.com/openvinotoolkit/cvat/pull/3044>)\n- Changing a label on canvas does not work when 'Show object details' enabled (<https://github.com/openvinotoolkit/cvat/pull/3084>)\n- Make sure frame unzip web worker correctly terminates after unzipping all images in a requested chunk (<https://github.com/openvinotoolkit/cvat/pull/3096>)\n- Reset password link was unavailable before login (<https://github.com/openvinotoolkit/cvat/pull/3140>)\n- Manifest: migration (<https://github.com/openvinotoolkit/cvat/pull/3146>)\n- Fixed cropping polygon in some corner cases (<https://github.com/openvinotoolkit/cvat/pull/3184>)\n\n## \\[1.3.0] - 3/31/2021\n\n### Added\n\n- CLI: Add support for saving annotations in a git repository when creating a task.\n- CVAT-3D: support lidar data on the server side (<https://github.com/openvinotoolkit/cvat/pull/2534>)\n- GPU support for Mask-RCNN and improvement in its deployment time (<https://github.com/openvinotoolkit/cvat/pull/2714>)\n- CVAT-3D: Load all frames corresponding to the job instance\n  (<https://github.com/openvinotoolkit/cvat/pull/2645>)\n- Intelligent scissors with OpenCV javascript (<https://github.com/openvinotoolkit/cvat/pull/2689>)\n- CVAT-3D: Visualize 3D point cloud spaces in 3D View, Top View Side View and Front View (<https://github.com/openvinotoolkit/cvat/pull/2768>)\n- [Inside Outside Guidance](https://github.com/shiyinzhang/Inside-Outside-Guidance) serverless\n  function for interactive segmentation\n- Pre-built [cvat_server](https://hub.docker.com/r/openvino/cvat_server) and\n  [cvat_ui](https://hub.docker.com/r/openvino/cvat_ui) images were published on DockerHub (<https://github.com/openvinotoolkit/cvat/pull/2766>)\n- Project task subsets (<https://github.com/openvinotoolkit/cvat/pull/2774>)\n- Kubernetes templates and guide for their deployment (<https://github.com/openvinotoolkit/cvat/pull/1962>)\n- [WiderFace](http://shuoyang1213.me/WIDERFACE/) format support (<https://github.com/openvinotoolkit/cvat/pull/2864>)\n- [VGGFace2](https://github.com/ox-vgg/vgg_face2) format support (<https://github.com/openvinotoolkit/cvat/pull/2865>)\n- [Backup/Restore guide](cvat/apps/documentation/backup_guide.md) (<https://github.com/openvinotoolkit/cvat/pull/2964>)\n- Label deletion from tasks and projects (<https://github.com/openvinotoolkit/cvat/pull/2881>)\n- CVAT-3D: Implemented initial cuboid placement in 3D View and select cuboid in Top, Side and Front views\n  (<https://github.com/openvinotoolkit/cvat/pull/2891>)\n- [Market-1501](https://www.aitribune.com/dataset/2018051063) format support (<https://github.com/openvinotoolkit/cvat/pull/2869>)\n- Ability of upload manifest for dataset with images (<https://github.com/openvinotoolkit/cvat/pull/2763>)\n- Annotations filters UI using react-awesome-query-builder (<https://github.com/openvinotoolkit/cvat/issues/1418>)\n- Storing settings in local storage to keep them between browser sessions (<https://github.com/openvinotoolkit/cvat/pull/3017>)\n- [ICDAR](https://rrc.cvc.uab.es/?ch=2) format support (<https://github.com/openvinotoolkit/cvat/pull/2866>)\n- Added switcher to maintain polygon crop behavior (<https://github.com/openvinotoolkit/cvat/pull/3021>\n- Filters and sorting options for job list, added tooltip for tasks filters (<https://github.com/openvinotoolkit/cvat/pull/3030>)\n\n### Changed\n\n- CLI - task list now returns a list of current tasks. (<https://github.com/openvinotoolkit/cvat/pull/2863>)\n- Updated HTTPS install README section (cleanup and described more robust deploy)\n- Logstash is improved for using with configurable elasticsearch outputs (<https://github.com/openvinotoolkit/cvat/pull/2531>)\n- Bumped nuclio version to 1.5.16 (<https://github.com/openvinotoolkit/cvat/pull/2578>)\n- All methods for interactive segmentation accept negative points as well\n- Persistent queue added to logstash (<https://github.com/openvinotoolkit/cvat/pull/2744>)\n- Improved maintenance of popups visibility (<https://github.com/openvinotoolkit/cvat/pull/2809>)\n- Image visualizations settings on canvas for faster access (<https://github.com/openvinotoolkit/cvat/pull/2872>)\n- Better scale management of left panel when screen is too small (<https://github.com/openvinotoolkit/cvat/pull/2880>)\n- Improved error messages for annotation import (<https://github.com/openvinotoolkit/cvat/pull/2935>)\n- Using manifest support instead video meta information and dummy chunks (<https://github.com/openvinotoolkit/cvat/pull/2763>)\n\n### Fixed\n\n- More robust execution of nuclio GPU functions by limiting the GPU memory consumption per worker (<https://github.com/openvinotoolkit/cvat/pull/2714>)\n- Kibana startup initialization (<https://github.com/openvinotoolkit/cvat/pull/2659>)\n- The cursor jumps to the end of the line when renaming a task (<https://github.com/openvinotoolkit/cvat/pull/2669>)\n- SSLCertVerificationError when remote source is used (<https://github.com/openvinotoolkit/cvat/pull/2683>)\n- Fixed filters select overflow (<https://github.com/openvinotoolkit/cvat/pull/2614>)\n- Fixed tasks in project auto annotation (<https://github.com/openvinotoolkit/cvat/pull/2725>)\n- Cuboids are missed in annotations statistics (<https://github.com/openvinotoolkit/cvat/pull/2704>)\n- The list of files attached to the task is not displayed (<https://github.com/openvinotoolkit/cvat/pull/2706>)\n- A couple of css-related issues (top bar disappear, wrong arrow position on collapse elements) (<https://github.com/openvinotoolkit/cvat/pull/2736>)\n- Issue with point region doesn't work in Firefox (<https://github.com/openvinotoolkit/cvat/pull/2727>)\n- Fixed cuboid perspective change (<https://github.com/openvinotoolkit/cvat/pull/2733>)\n- Annotation page popups (ai tools, drawing) reset state after detecting, tracking, drawing (<https://github.com/openvinotoolkit/cvat/pull/2780>)\n- Polygon editing using trailing point (<https://github.com/openvinotoolkit/cvat/pull/2808>)\n- Updated the path to python for DL models inside automatic annotation documentation (<https://github.com/openvinotoolkit/cvat/pull/2847>)\n- Fixed of receiving function variable (<https://github.com/openvinotoolkit/cvat/pull/2860>)\n- Shortcuts with CAPSLOCK enabled and with non-US languages activated (<https://github.com/openvinotoolkit/cvat/pull/2872>)\n- Prevented creating several issues for the same object (<https://github.com/openvinotoolkit/cvat/pull/2868>)\n- Fixed label editor name field validator (<https://github.com/openvinotoolkit/cvat/pull/2879>)\n- An error about track shapes outside of the task frames during export (<https://github.com/openvinotoolkit/cvat/pull/2890>)\n- Fixed project search field updating (<https://github.com/openvinotoolkit/cvat/pull/2901>)\n- Fixed export error when invalid polygons are present in overlapping frames (<https://github.com/openvinotoolkit/cvat/pull/2852>)\n- Fixed image quality option for tasks created from images (<https://github.com/openvinotoolkit/cvat/pull/2963>)\n- Incorrect text on the warning when specifying an incorrect link to the issue tracker (<https://github.com/openvinotoolkit/cvat/pull/2971>)\n- Updating label attributes when label contains number attributes (<https://github.com/openvinotoolkit/cvat/pull/2969>)\n- Crop a polygon if its points are outside the bounds of the image (<https://github.com/openvinotoolkit/cvat/pull/3025>)\n\n## \\[1.2.0] - 2021-01-08\n\n### Fixed\n\n- Memory consumption for the task creation process (<https://github.com/openvinotoolkit/cvat/pull/2582>)\n- Frame preloading (<https://github.com/openvinotoolkit/cvat/pull/2608>)\n- Project cannot be removed from the project page (<https://github.com/openvinotoolkit/cvat/pull/2626>)\n\n## \\[1.2.0-beta] - 2020-12-15\n\n### Added\n\n- GPU support and improved documentation for auto annotation (<https://github.com/openvinotoolkit/cvat/pull/2546>)\n- Manual review pipeline: issues/comments/workspace (<https://github.com/openvinotoolkit/cvat/pull/2357>)\n- Basic projects implementation (<https://github.com/openvinotoolkit/cvat/pull/2255>)\n- Documentation on how to mount cloud starage(AWS S3 bucket, Azure container, Google Drive) as FUSE (<https://github.com/openvinotoolkit/cvat/pull/2377>)\n- Ability to work with share files without copying inside (<https://github.com/openvinotoolkit/cvat/pull/2377>)\n- Tooltips in label selectors (<https://github.com/openvinotoolkit/cvat/pull/2509>)\n- Page redirect after login using `next` query parameter (<https://github.com/openvinotoolkit/cvat/pull/2527>)\n- [ImageNet](http://www.image-net.org) format support (<https://github.com/openvinotoolkit/cvat/pull/2376>)\n- [CamVid](http://mi.eng.cam.ac.uk/research/projects/VideoRec/CamVid/) format support (<https://github.com/openvinotoolkit/cvat/pull/2559>)\n\n### Changed\n\n- PATCH requests from cvat-core submit only changed fields (<https://github.com/openvinotoolkit/cvat/pull/2445>)\n- deploy.sh in serverless folder is separated into deploy_cpu.sh and deploy_gpu.sh (<https://github.com/openvinotoolkit/cvat/pull/2546>)\n- Bumped nuclio version to 1.5.8\n- Migrated to Antd 4.9 (<https://github.com/openvinotoolkit/cvat/pull/2536>)\n\n### Fixed\n\n- Fixed FastRCNN inference bug for images with 4 channels i.e. png (<https://github.com/openvinotoolkit/cvat/pull/2546>)\n- Django templates for email and user guide (<https://github.com/openvinotoolkit/cvat/pull/2412>)\n- Saving relative paths in dummy chunks instead of absolute (<https://github.com/openvinotoolkit/cvat/pull/2424>)\n- Objects with a specific label cannot be displayed if at least one tag with the label exist (<https://github.com/openvinotoolkit/cvat/pull/2435>)\n- Wrong attribute can be removed in labels editor (<https://github.com/openvinotoolkit/cvat/pull/2436>)\n- UI fails with the error \"Cannot read property 'label' of undefined\" (<https://github.com/openvinotoolkit/cvat/pull/2442>)\n- Exception: \"Value must be a user instance\" (<https://github.com/openvinotoolkit/cvat/pull/2441>)\n- Reset zoom option doesn't work in tag annotation mode (<https://github.com/openvinotoolkit/cvat/pull/2443>)\n- Canvas is busy error (<https://github.com/openvinotoolkit/cvat/pull/2437>)\n- Projects view layout fix (<https://github.com/openvinotoolkit/cvat/pull/2503>)\n- Fixed the tasks view (infinite loading) when it is impossible to get a preview of the task (<https://github.com/openvinotoolkit/cvat/pull/2504>)\n- Empty frames navigation (<https://github.com/openvinotoolkit/cvat/pull/2505>)\n- TypeError: Cannot read property 'toString' of undefined (<https://github.com/openvinotoolkit/cvat/pull/2517>)\n- Extra shapes are drawn after Esc, or G pressed while drawing a region in grouping (<https://github.com/openvinotoolkit/cvat/pull/2507>)\n- Reset state (reviews, issues) after logout or changing a job (<https://github.com/openvinotoolkit/cvat/pull/2525>)\n- TypeError: Cannot read property 'id' of undefined when updating a task (<https://github.com/openvinotoolkit/cvat/pull/2544>)\n\n## \\[1.2.0-alpha] - 2020-11-09\n\n### Added\n\n- Ability to login into CVAT-UI with token from api/v1/auth/login (<https://github.com/openvinotoolkit/cvat/pull/2234>)\n- Added layout grids toggling ('ctrl + alt + Enter')\n- Added password reset functionality (<https://github.com/opencv/cvat/pull/2058>)\n- Ability to work with data on the fly (<https://github.com/opencv/cvat/pull/2007>)\n- Annotation in process outline color wheel (<https://github.com/opencv/cvat/pull/2084>)\n- On the fly annotation using DL detectors (<https://github.com/opencv/cvat/pull/2102>)\n- Displaying automatic annotation progress on a task view (<https://github.com/opencv/cvat/pull/2148>)\n- Automatic tracking of bounding boxes using serverless functions (<https://github.com/opencv/cvat/pull/2136>)\n- \\[Datumaro] CLI command for dataset equality comparison (<https://github.com/opencv/cvat/pull/1989>)\n- \\[Datumaro] Merging of datasets with different labels (<https://github.com/opencv/cvat/pull/2098>)\n- Add FBRS interactive segmentation serverless function (<https://github.com/openvinotoolkit/cvat/pull/2094>)\n- Ability to change default behaviour of previous/next buttons of a player.\n  It supports regular navigation, searching a frame according to annotations\n  filters and searching the nearest frame without any annotations (<https://github.com/openvinotoolkit/cvat/pull/2221>)\n- MacOS users notes in CONTRIBUTING.md\n- Ability to prepare meta information manually (<https://github.com/openvinotoolkit/cvat/pull/2217>)\n- Ability to upload prepared meta information along with a video when creating a task (<https://github.com/openvinotoolkit/cvat/pull/2217>)\n- Optional chaining plugin for cvat-canvas and cvat-ui (<https://github.com/openvinotoolkit/cvat/pull/2249>)\n- MOTS png mask format support (<https://github.com/openvinotoolkit/cvat/pull/2198>)\n- Ability to correct upload video with a rotation record in the metadata (<https://github.com/openvinotoolkit/cvat/pull/2218>)\n- User search field for assignee fields (<https://github.com/openvinotoolkit/cvat/pull/2370>)\n- Support of mxf videos (<https://github.com/openvinotoolkit/cvat/pull/2514>)\n\n### Changed\n\n- UI models (like DEXTR) were redesigned to be more interactive (<https://github.com/opencv/cvat/pull/2054>)\n- Used Ubuntu:20.04 as a base image for CVAT Dockerfile (<https://github.com/opencv/cvat/pull/2101>)\n- Right colors of label tags in label mapping when a user runs automatic detection (<https://github.com/openvinotoolkit/cvat/pull/2162>)\n- Nuclio became an optional component of CVAT (<https://github.com/openvinotoolkit/cvat/pull/2192>)\n- A key to remove a point from a polyshape (Ctrl => Alt) (<https://github.com/openvinotoolkit/cvat/pull/2204>)\n- Updated `docker-compose` file version from `2.3` to `3.3`(<https://github.com/openvinotoolkit/cvat/pull/2235>)\n- Added auto inference of url schema from host in CLI, if provided (<https://github.com/openvinotoolkit/cvat/pull/2240>)\n- Track frames in skips between annotation is presented in MOT and MOTS formats are marked `outside` (<https://github.com/openvinotoolkit/cvat/pull/2198>)\n- UI packages installation with `npm ci` instead of `npm install` (<https://github.com/openvinotoolkit/cvat/pull/2350>)\n\n### Removed\n\n- Removed Z-Order flag from task creation process\n\n### Fixed\n\n- Fixed multiple errors which arises when polygon is of length 5 or less (<https://github.com/opencv/cvat/pull/2100>)\n- Fixed task creation from PDF (<https://github.com/opencv/cvat/pull/2141>)\n- Fixed CVAT format import for frame stepped tasks (<https://github.com/openvinotoolkit/cvat/pull/2151>)\n- Fixed the reading problem with large PDFs (<https://github.com/openvinotoolkit/cvat/pull/2154>)\n- Fixed unnecessary pyhash dependency (<https://github.com/openvinotoolkit/cvat/pull/2170>)\n- Fixed Data is not getting cleared, even after deleting the Task from Django Admin App(<https://github.com/openvinotoolkit/cvat/issues/1925>)\n- Fixed blinking message: \"Some tasks have not been showed because they do not have any data\" (<https://github.com/openvinotoolkit/cvat/pull/2200>)\n- Fixed case when a task with 0 jobs is shown as \"Completed\" in UI (<https://github.com/openvinotoolkit/cvat/pull/2200>)\n- Fixed use case when UI throws exception: Cannot read property 'objectType' of undefined #2053 (<https://github.com/openvinotoolkit/cvat/pull/2203>)\n- Fixed use case when logs could be saved twice or more times #2202 (<https://github.com/openvinotoolkit/cvat/pull/2203>)\n- Fixed issues from #2112 (<https://github.com/openvinotoolkit/cvat/pull/2217>)\n- Git application name (renamed to dataset_repo) (<https://github.com/openvinotoolkit/cvat/pull/2243>)\n- A problem in exporting of tracks, where tracks could be truncated (<https://github.com/openvinotoolkit/cvat/issues/2129>)\n- Fixed CVAT startup process if the user has `umask 077` in .bashrc file (<https://github.com/openvinotoolkit/cvat/pull/2293>)\n- Exception: Cannot read property \"each\" of undefined after drawing a single point (<https://github.com/openvinotoolkit/cvat/pull/2307>)\n- Cannot read property 'label' of undefined (Fixed?) (<https://github.com/openvinotoolkit/cvat/pull/2311>)\n- Excluded track frames marked `outside` in `CVAT for Images` export (<https://github.com/openvinotoolkit/cvat/pull/2345>)\n- 'List of tasks' Kibana visualization (<https://github.com/openvinotoolkit/cvat/pull/2361>)\n- An error on exporting not `jpg` or `png` images in TF Detection API format (<https://github.com/openvinotoolkit/datumaro/issues/35>)\n\n## \\[1.1.0] - 2020-08-31\n\n### Added\n\n- Siammask tracker as DL serverless function (<https://github.com/opencv/cvat/pull/1988>)\n- \\[Datumaro] Added model info and source info commands (<https://github.com/opencv/cvat/pull/1973>)\n- \\[Datumaro] Dataset statistics (<https://github.com/opencv/cvat/pull/1668>)\n- Ability to change label color in tasks and predefined labels (<https://github.com/opencv/cvat/pull/2014>)\n- \\[Datumaro] Multi-dataset merge (<https://github.com/opencv/cvat/pull/1695>)\n- Ability to configure email verification for new users (<https://github.com/opencv/cvat/pull/1929>)\n- Link to django admin page from UI (<https://github.com/opencv/cvat/pull/2068>)\n- Notification message when users use wrong browser (<https://github.com/opencv/cvat/pull/2070>)\n\n### Changed\n\n- Shape coordinates are rounded to 2 digits in dumped annotations (<https://github.com/opencv/cvat/pull/1970>)\n- COCO format does not produce polygon points for bbox annotations (<https://github.com/opencv/cvat/pull/1953>)\n\n### Fixed\n\n- Issue loading openvino models for semi-automatic and automatic annotation (<https://github.com/opencv/cvat/pull/1996>)\n- Basic functions of CVAT works without activated nuclio dashboard\n- Fixed a case in which exported masks could have wrong color order (<https://github.com/opencv/cvat/issues/2032>)\n- Fixed error with creating task with labels with the same name (<https://github.com/opencv/cvat/pull/2031>)\n- Django RQ dashboard view (<https://github.com/opencv/cvat/pull/2069>)\n- Object's details menu settings (<https://github.com/opencv/cvat/pull/2084>)\n\n## \\[1.1.0-beta] - 2020-08-03\n\n### Added\n\n- DL models as serverless functions (<https://github.com/opencv/cvat/pull/1767>)\n- Source type support for tags, shapes and tracks (<https://github.com/opencv/cvat/pull/1192>)\n- Source type support for CVAT Dumper/Loader (<https://github.com/opencv/cvat/pull/1192>)\n- Intelligent polygon editing (<https://github.com/opencv/cvat/pull/1921>)\n- Support creating multiple jobs for each task through python cli (<https://github.com/opencv/cvat/pull/1950>)\n- python cli over https (<https://github.com/opencv/cvat/pull/1942>)\n- Error message when plugins weren't able to initialize instead of infinite loading (<https://github.com/opencv/cvat/pull/1966>)\n- Ability to change user password (<https://github.com/opencv/cvat/pull/1954>)\n\n### Changed\n\n- Smaller object details (<https://github.com/opencv/cvat/pull/1877>)\n- `COCO` format does not convert bboxes to polygons on export (<https://github.com/opencv/cvat/pull/1953>)\n- It is impossible to submit a DL model in OpenVINO format using UI.\n  Now you can deploy new models on the server using serverless functions\n  (<https://github.com/opencv/cvat/pull/1767>)\n- Files and folders under share path are now alphabetically sorted\n\n### Removed\n\n- Removed OpenVINO and CUDA components because they are not necessary anymore (<https://github.com/opencv/cvat/pull/1767>)\n- Removed the old UI code (<https://github.com/opencv/cvat/pull/1964>)\n\n### Fixed\n\n- Some objects aren't shown on canvas sometimes. For example after propagation on of objects is invisible (<https://github.com/opencv/cvat/pull/1834>)\n- CVAT doesn't offer to restore state after an error (<https://github.com/opencv/cvat/pull/1874>)\n- Cannot read property 'shapeType' of undefined because of zOrder related issues (<https://github.com/opencv/cvat/pull/1874>)\n- Cannot read property 'pinned' of undefined because of zOrder related issues (<https://github.com/opencv/cvat/pull/1874>)\n- Do not iterate over hidden objects in aam (which are invisible because of zOrder) (<https://github.com/opencv/cvat/pull/1874>)\n- Cursor position is reset after changing a text field (<https://github.com/opencv/cvat/pull/1874>)\n- Hidden points and cuboids can be selected to be grouped (<https://github.com/opencv/cvat/pull/1874>)\n- `outside` annotations should not be in exported images (<https://github.com/opencv/cvat/issues/1620>)\n- `CVAT for video format` import error with interpolation (<https://github.com/opencv/cvat/issues/1893>)\n- `Image compression` definition mismatch (<https://github.com/opencv/cvat/issues/1900>)\n- Points are duplicated during polygon interpolation sometimes (<https://github.com/opencv/cvat/pull/1892>)\n- When redraw a shape with activated autobordering, previous points are visible (<https://github.com/opencv/cvat/pull/1892>)\n- No mapping between side object element and context menu in some attributes (<https://github.com/opencv/cvat/pull/1923>)\n- Interpolated shapes exported as `keyframe = True` (<https://github.com/opencv/cvat/pull/1937>)\n- Stylelint filetype scans (<https://github.com/opencv/cvat/pull/1952>)\n- Fixed toolip closing issue (<https://github.com/opencv/cvat/pull/1955>)\n- Clearing frame cache when close a task (<https://github.com/opencv/cvat/pull/1966>)\n- Increase rate of throttling policy for unauthenticated users (<https://github.com/opencv/cvat/pull/1969>)\n\n## \\[1.1.0-alpha] - 2020-06-30\n\n### Added\n\n- Throttling policy for unauthenticated users (<https://github.com/opencv/cvat/pull/1531>)\n- Added default label color table for mask export (<https://github.com/opencv/cvat/pull/1549>)\n- Added environment variables for Redis and Postgres hosts for Kubernetes deployment support (<https://github.com/opencv/cvat/pull/1641>)\n- Added visual identification for unavailable formats (<https://github.com/opencv/cvat/pull/1567>)\n- Shortcut to change color of an activated shape in new UI (Enter) (<https://github.com/opencv/cvat/pull/1683>)\n- Shortcut to switch split mode (<https://github.com/opencv/cvat/pull/1683>)\n- Built-in search for labels when create an object or change a label (<https://github.com/opencv/cvat/pull/1683>)\n- Better validation of labels and attributes in raw viewer (<https://github.com/opencv/cvat/pull/1727>)\n- ClamAV antivirus integration (<https://github.com/opencv/cvat/pull/1712>)\n- Added canvas background color selector (<https://github.com/opencv/cvat/pull/1705>)\n- SCSS files linting with Stylelint tool (<https://github.com/opencv/cvat/pull/1766>)\n- Supported import and export or single boxes in MOT format (<https://github.com/opencv/cvat/pull/1764>)\n- \\[Datumaro] Added `stats` command, which shows some dataset statistics\n  like image mean and std (<https://github.com/opencv/cvat/pull/1734>)\n- Add option to upload annotations upon task creation on CLI\n- Polygon and polylines interpolation (<https://github.com/opencv/cvat/pull/1571>)\n- Ability to redraw shape from scratch (Shift + N) for an activated shape (<https://github.com/opencv/cvat/pull/1571>)\n- Highlights for the first point of a polygon/polyline and direction (<https://github.com/opencv/cvat/pull/1571>)\n- Ability to change orientation for poylgons/polylines in context menu (<https://github.com/opencv/cvat/pull/1571>)\n- Ability to set the first point for polygons in points context menu (<https://github.com/opencv/cvat/pull/1571>)\n- Added new tag annotation workspace (<https://github.com/opencv/cvat/pull/1570>)\n- Appearance block in attribute annotation mode (<https://github.com/opencv/cvat/pull/1820>)\n- Keyframe navigations and some switchers in attribute annotation mode (<https://github.com/opencv/cvat/pull/1820>)\n- \\[Datumaro] Added `convert` command to convert datasets directly (<https://github.com/opencv/cvat/pull/1837>)\n- \\[Datumaro] Added an option to specify image extension when exporting datasets (<https://github.com/opencv/cvat/pull/1799>)\n- \\[Datumaro] Added image copying when exporting datasets, if possible (<https://github.com/opencv/cvat/pull/1799>)\n\n### Changed\n\n- Removed information about e-mail from the basic user information (<https://github.com/opencv/cvat/pull/1627>)\n- Update https install manual. Makes it easier and more robust.\n  Includes automatic renewing of lets encrypt certificates.\n- Settings page move to the modal. (<https://github.com/opencv/cvat/pull/1705>)\n- Implemented import and export of annotations with relative image paths (<https://github.com/opencv/cvat/pull/1463>)\n- Using only single click to start editing or remove a point (<https://github.com/opencv/cvat/pull/1571>)\n- Added support for attributes in VOC XML format (<https://github.com/opencv/cvat/pull/1792>)\n- Added annotation attributes in COCO format (<https://github.com/opencv/cvat/pull/1782>)\n- Colorized object items in the side panel (<https://github.com/opencv/cvat/pull/1753>)\n- \\[Datumaro] Annotation-less files are not generated anymore in COCO format, unless tasks explicitly requested (<https://github.com/opencv/cvat/pull/1799>)\n\n### Fixed\n\n- Problem with exported frame stepped image task (<https://github.com/opencv/cvat/issues/1613>)\n- Fixed dataset filter item representation for imageless dataset items (<https://github.com/opencv/cvat/pull/1593>)\n- Fixed interpreter crash when trying to import `tensorflow` with no AVX instructions available (<https://github.com/opencv/cvat/pull/1567>)\n- Kibana wrong working time calculation with new annotation UI use (<https://github.com/opencv/cvat/pull/1654>)\n- Wrong rexex for account name validation (<https://github.com/opencv/cvat/pull/1667>)\n- Wrong description on register view for the username field (<https://github.com/opencv/cvat/pull/1667>)\n- Wrong resolution for resizing a shape (<https://github.com/opencv/cvat/pull/1667>)\n- React warning because of not unique keys in labels viewer (<https://github.com/opencv/cvat/pull/1727>)\n- Fixed issue tracker (<https://github.com/opencv/cvat/pull/1705>)\n- Fixed canvas fit after sidebar open/close event (<https://github.com/opencv/cvat/pull/1705>)\n- A couple of exceptions in AAM related with early object activation (<https://github.com/opencv/cvat/pull/1755>)\n- Propagation from the latest frame (<https://github.com/opencv/cvat/pull/1800>)\n- Number attribute value validation (didn't work well with floats) (<https://github.com/opencv/cvat/pull/1800>)\n- Logout doesn't work (<https://github.com/opencv/cvat/pull/1812>)\n- Annotations aren't updated after reopening a task (<https://github.com/opencv/cvat/pull/1753>)\n- Labels aren't updated after reopening a task (<https://github.com/opencv/cvat/pull/1753>)\n- Canvas isn't fitted after collapsing side panel in attribute annotation mode (<https://github.com/opencv/cvat/pull/1753>)\n- Error when interpolating polygons (<https://github.com/opencv/cvat/pull/1878>)\n\n### Security\n\n- SQL injection in Django `CVE-2020-9402` (<https://github.com/opencv/cvat/pull/1657>)\n\n## \\[1.0.0] - 2020-05-29\n\n### Added\n\n- cvat-ui: cookie policy drawer for login page (<https://github.com/opencv/cvat/pull/1511>)\n- `datumaro_project` export format (<https://github.com/opencv/cvat/pull/1352>)\n- Ability to configure user agreements for the user registration form (<https://github.com/opencv/cvat/pull/1464>)\n- Cuboid interpolation and cuboid drawing from rectangles (<https://github.com/opencv/cvat/pull/1560>)\n- Ability to configure custom pageViewHit, which can be useful for web analytics integration (<https://github.com/opencv/cvat/pull/1566>)\n- Ability to configure access to the analytics page based on roles (<https://github.com/opencv/cvat/pull/1592>)\n\n### Changed\n\n- Downloaded file name in annotations export became more informative (<https://github.com/opencv/cvat/pull/1352>)\n- Added auto trimming for trailing whitespaces style enforcement (<https://github.com/opencv/cvat/pull/1352>)\n- REST API: updated `GET /task/<id>/annotations`: parameters are `format`, `filename`\n  (now optional), `action` (optional) (<https://github.com/opencv/cvat/pull/1352>)\n- REST API: removed `dataset/formats`, changed format of `annotation/formats` (<https://github.com/opencv/cvat/pull/1352>)\n- Exported annotations are stored for N hours instead of indefinitely (<https://github.com/opencv/cvat/pull/1352>)\n- Formats: CVAT format now accepts ZIP and XML (<https://github.com/opencv/cvat/pull/1352>)\n- Formats: COCO format now accepts ZIP and JSON (<https://github.com/opencv/cvat/pull/1352>)\n- Formats: most of formats renamed, no extension in title (<https://github.com/opencv/cvat/pull/1352>)\n- Formats: definitions are changed, are not stored in DB anymore (<https://github.com/opencv/cvat/pull/1352>)\n- cvat-core: session.annotations.put() now returns ids of added objects (<https://github.com/opencv/cvat/pull/1493>)\n- Images without annotations now also included in dataset/annotations export (<https://github.com/opencv/cvat/issues/525>)\n\n### Removed\n\n- `annotation` application is replaced with `dataset_manager` (<https://github.com/opencv/cvat/pull/1352>)\n- `_DATUMARO_INIT_LOGLEVEL` env. variable is removed in favor of regular `--loglevel` cli parameter (<https://github.com/opencv/cvat/pull/1583>)\n\n### Fixed\n\n- Categories for empty projects with no sources are taken from own dataset (<https://github.com/opencv/cvat/pull/1352>)\n- Added directory removal on error during `extract` command (<https://github.com/opencv/cvat/pull/1352>)\n- Added debug error message on incorrect XPath (<https://github.com/opencv/cvat/pull/1352>)\n- Exporting frame stepped task\n  (<https://github.com/opencv/cvat/issues/1294>, <https://github.com/opencv/cvat/issues/1334>)\n- Fixed broken command line interface for `cvat` export format in Datumaro (<https://github.com/opencv/cvat/issues/1494>)\n- Updated Rest API document, Swagger document serving instruction issue (<https://github.com/opencv/cvat/issues/1495>)\n- Fixed cuboid occluded view (<https://github.com/opencv/cvat/pull/1500>)\n- Non-informative lock icon (<https://github.com/opencv/cvat/pull/1434>)\n- Sidebar in AAM has no hide/show button (<https://github.com/opencv/cvat/pull/1420>)\n- Task/Job buttons has no \"Open in new tab\" option (<https://github.com/opencv/cvat/pull/1419>)\n- Delete point context menu option has no shortcut hint (<https://github.com/opencv/cvat/pull/1416>)\n- Fixed issue with unnecessary tag activation in cvat-canvas (<https://github.com/opencv/cvat/issues/1540>)\n- Fixed an issue with large number of instances in instance mask (<https://github.com/opencv/cvat/issues/1539>)\n- Fixed full COCO dataset import error with conflicting labels in keypoints and detection (<https://github.com/opencv/cvat/pull/1548>)\n- Fixed COCO keypoints skeleton parsing and saving (<https://github.com/opencv/cvat/issues/1539>)\n- `tf.placeholder() is not compatible with eager execution` exception for auto_segmentation (<https://github.com/opencv/cvat/pull/1562>)\n- Canvas cannot be moved with move functionality on left mouse key (<https://github.com/opencv/cvat/pull/1573>)\n- Deep extreme cut request is sent when draw any shape with Make AI polygon option enabled (<https://github.com/opencv/cvat/pull/1573>)\n- Fixed an error when exporting a task with cuboids to any format except CVAT (<https://github.com/opencv/cvat/pull/1577>)\n- Synchronization with remote git repo (<https://github.com/opencv/cvat/pull/1582>)\n- A problem with mask to polygons conversion when polygons are too small (<https://github.com/opencv/cvat/pull/1581>)\n- Unable to upload video with uneven size (<https://github.com/opencv/cvat/pull/1594>)\n- Fixed an issue with `z_order` having no effect on segmentations (<https://github.com/opencv/cvat/pull/1589>)\n\n### Security\n\n- Permission group whitelist check for analytics view (<https://github.com/opencv/cvat/pull/1608>)\n\n## \\[1.0.0-beta.2] - 2020-04-30\n\n### Added\n\n- Re-Identification algorithm to merging bounding boxes automatically to the new UI (<https://github.com/opencv/cvat/pull/1406>)\n- Methods `import` and `export` to import/export raw annotations for Job and Task in `cvat-core` (<https://github.com/opencv/cvat/pull/1406>)\n- Versioning of client packages (`cvat-core`, `cvat-canvas`, `cvat-ui`). Initial versions are set to 1.0.0 (<https://github.com/opencv/cvat/pull/1448>)\n- Cuboids feature was migrated from old UI to new one. (<https://github.com/opencv/cvat/pull/1451>)\n\n### Removed\n\n- Annotation conversion utils, currently supported natively via Datumaro framework\n  (<https://github.com/opencv/cvat/pull/1477>)\n\n### Fixed\n\n- Auto annotation, TF annotation and Auto segmentation apps (<https://github.com/opencv/cvat/pull/1409>)\n- Import works with truncated images now: \"OSError:broken data stream\" on corrupt images\n  (<https://github.com/opencv/cvat/pull/1430>)\n- Hide functionality (H) doesn't work (<https://github.com/opencv/cvat/pull/1445>)\n- The highlighted attribute doesn't correspond to the chosen attribute in AAM (<https://github.com/opencv/cvat/pull/1445>)\n- Inconvinient image shaking while drawing a polygon (hold Alt key during drawing/editing/grouping to drag an image) (<https://github.com/opencv/cvat/pull/1445>)\n- Filter property \"shape\" doesn't work and extra operator in description (<https://github.com/opencv/cvat/pull/1445>)\n- Block of text information doesn't disappear after deactivating for locked shapes (<https://github.com/opencv/cvat/pull/1445>)\n- Annotation uploading fails in annotation view (<https://github.com/opencv/cvat/pull/1445>)\n- UI freezes after canceling pasting with escape (<https://github.com/opencv/cvat/pull/1445>)\n- Duplicating keypoints in COCO export (<https://github.com/opencv/cvat/pull/1435>)\n- CVAT new UI: add arrows on a mouse cursor (<https://github.com/opencv/cvat/pull/1391>)\n- Delete point bug (in new UI) (<https://github.com/opencv/cvat/pull/1440>)\n- Fix apache startup after PC restart (<https://github.com/opencv/cvat/pull/1467>)\n- Open task button doesn't work (<https://github.com/opencv/cvat/pull/1474>)\n\n## \\[1.0.0-beta.1] - 2020-04-15\n\n### Added\n\n- Special behaviour for attribute value `__undefined__` (invisibility, no shortcuts to be set in AAM)\n- Dialog window with some helpful information about using filters\n- Ability to display a bitmap in the new UI\n- Button to reset colors settings (brightness, saturation, contrast) in the new UI\n- Option to display shape text always\n- Dedicated message with clarifications when share is unmounted (<https://github.com/opencv/cvat/pull/1373>)\n- Ability to create one tracked point (<https://github.com/opencv/cvat/pull/1383>)\n- Ability to draw/edit polygons and polylines with automatic bordering feature\n  (<https://github.com/opencv/cvat/pull/1394>)\n- Tutorial: instructions for CVAT over HTTPS\n- Deep extreme cut (semi-automatic segmentation) to the new UI (<https://github.com/opencv/cvat/pull/1398>)\n\n### Changed\n\n- Increase preview size of a task till 256, 256 on the server\n- Public ssh-keys are displayed in a dedicated window instead of console when create a task with a repository\n- React UI is the primary UI\n\n### Fixed\n\n- Cleaned up memory in Auto Annotation to enable long running tasks on videos\n- New shape is added when press `esc` when drawing instead of cancellation\n- Dextr segmentation doesn't work.\n- `FileNotFoundError` during dump after moving format files\n- CVAT doesn't append outside shapes when merge polyshapes in old UI\n- Layout sometimes shows double scroll bars on create task, dashboard and settings pages\n- UI fails after trying to change frame during resizing, dragging, editing\n- Hidden points (or outsided) are visible after changing a frame\n- Merge is allowed for points, but clicks on points conflict with frame dragging logic\n- Removed objects are visible for search\n- Add missed task_id and job_id fields into exception logs for the new UI (<https://github.com/opencv/cvat/pull/1372>)\n- UI fails when annotations saving occurs during drag/resize/edit (<https://github.com/opencv/cvat/pull/1383>)\n- Multiple savings when hold Ctrl+S (a lot of the same copies of events were sent with the same working time)\n  (<https://github.com/opencv/cvat/pull/1383>)\n- UI doesn't have any reaction when git repos synchronization failed (<https://github.com/opencv/cvat/pull/1383>)\n- Bug when annotations cannot be saved after (delete - save - undo - save) (<https://github.com/opencv/cvat/pull/1383>)\n- VOC format exports Upper case labels correctly in lower case (<https://github.com/opencv/cvat/pull/1379>)\n- Fixed polygon exporting bug in COCO dataset (<https://github.com/opencv/cvat/issues/1387>)\n- Task creation from remote files (<https://github.com/opencv/cvat/pull/1392>)\n- Job cannot be opened in some cases when the previous job was failed during opening\n  (<https://github.com/opencv/cvat/issues/1403>)\n- Deactivated shape is still highlighted on the canvas (<https://github.com/opencv/cvat/issues/1403>)\n- AttributeError: 'tuple' object has no attribute 'read' in ReID algorithm (<https://github.com/opencv/cvat/issues/1403>)\n- Wrong semi-automatic segmentation near edges of an image (<https://github.com/opencv/cvat/issues/1403>)\n- Git repos paths (<https://github.com/opencv/cvat/pull/1400>)\n- Uploading annotations for tasks with multiple jobs (<https://github.com/opencv/cvat/pull/1396>)\n\n## \\[1.0.0-alpha] - 2020-03-31\n\n### Added\n\n- Data streaming using chunks (<https://github.com/opencv/cvat/pull/1007>)\n- New UI: showing file names in UI (<https://github.com/opencv/cvat/pull/1311>)\n- New UI: delete a point from context menu (<https://github.com/opencv/cvat/pull/1292>)\n\n### Fixed\n\n- Git app cannot clone a repository (<https://github.com/opencv/cvat/pull/1330>)\n- New UI: preview position in task details (<https://github.com/opencv/cvat/pull/1312>)\n- AWS deployment (<https://github.com/opencv/cvat/pull/1316>)\n\n## \\[0.6.1] - 2020-03-21\n\n### Changed\n\n- VOC task export now does not use official label map by default, but takes one\n  from the source task to avoid primary-class and class part name\n  clashing ([#1275](https://github.com/opencv/cvat/issues/1275))\n\n### Fixed\n\n- File names in LabelMe format export are no longer truncated ([#1259](https://github.com/opencv/cvat/issues/1259))\n- `occluded` and `z_order` annotation attributes are now correctly passed to Datumaro ([#1271](https://github.com/opencv/cvat/pull/1271))\n- Annotation-less tasks now can be exported as empty datasets in COCO ([#1277](https://github.com/opencv/cvat/issues/1277))\n- Frame name matching for video annotations import -\n  allowed `frame_XXXXXX[.ext]` format ([#1274](https://github.com/opencv/cvat/pull/1274))\n\n### Security\n\n- Bump acorn from 6.3.0 to 6.4.1 in /cvat-ui ([#1270](https://github.com/opencv/cvat/pull/1270))\n\n## \\[0.6.0] - 2020-03-15\n\n### Added\n\n- Server only support for projects. Extend REST API v1 (/api/v1/projects\\*)\n- Ability to get basic information about users without admin permissions ([#750](https://github.com/opencv/cvat/issues/750))\n- Changed REST API: removed PUT and added DELETE methods for /api/v1/users/ID\n- Mask-RCNN Auto Annotation Script in OpenVINO format\n- Yolo Auto Annotation Script\n- Auto segmentation using Mask_RCNN component (Keras+Tensorflow Mask R-CNN Segmentation)\n- REST API to export an annotation task (images + annotations)\n  [Datumaro](https://github.com/opencv/cvat/tree/develop/datumaro) -\n  a framework to build, analyze, debug and visualize datasets\n- Text Detection Auto Annotation Script in OpenVINO format for version 4\n- Added in OpenVINO Semantic Segmentation for roads\n- Ability to visualize labels when using Auto Annotation runner\n- MOT CSV format support ([#830](https://github.com/opencv/cvat/pull/830))\n- LabelMe format support ([#844](https://github.com/opencv/cvat/pull/844))\n- Segmentation MASK format import (as polygons) ([#1163](https://github.com/opencv/cvat/pull/1163))\n- Git repositories can be specified with IPv4 address ([#827](https://github.com/opencv/cvat/pull/827))\n\n### Changed\n\n- page_size parameter for all REST API methods\n- React & Redux & Antd based dashboard\n- Yolov3 interpretation script fix and changes to mapping.json\n- YOLO format support ([#1151](https://github.com/opencv/cvat/pull/1151))\n- Added support for OpenVINO 2020\n\n### Fixed\n\n- Exception in Git plugin [#826](https://github.com/opencv/cvat/issues/826)\n- Label ids in TFrecord format now start from 1 [#866](https://github.com/opencv/cvat/issues/866)\n- Mask problem in COCO JSON style [#718](https://github.com/opencv/cvat/issues/718)\n- Datasets (or tasks) can be joined and split to subsets with Datumaro [#791](https://github.com/opencv/cvat/issues/791)\n- Output labels for VOC format can be specified with Datumaro [#942](https://github.com/opencv/cvat/issues/942)\n- Annotations can be filtered before dumping with Datumaro [#994](https://github.com/opencv/cvat/issues/994)\n\n## \\[0.5.2] - 2019-12-15\n\n### Fixed\n\n- Frozen version of scikit-image==0.15 in requirements.txt because next releases don't support Python 3.5\n\n## \\[0.5.1] - 2019-10-17\n\n### Added\n\n- Integration with Zenodo.org (DOI)\n\n## \\[0.5.0] - 2019-09-12\n\n### Added\n\n- A converter to YOLO format\n- Installation guide\n- Linear interpolation for a single point\n- Video frame filter\n- Running functional tests for REST API during a build\n- Admins are no longer limited to a subset of python commands in the auto annotation application\n- Remote data source (list of URLs to create an annotation task)\n- Auto annotation using Faster R-CNN with Inception v2 (utils/open_model_zoo)\n- Auto annotation using Pixel Link mobilenet v2 - text detection (utils/open_model_zoo)\n- Ability to create a custom extractors for unsupported media types\n- Added in PDF extractor\n- Added in a command line model manager tester\n- Ability to dump/load annotations in several formats from UI (CVAT, Pascal VOC, YOLO, MS COCO, png mask, TFRecord)\n- Auth for REST API (api/v1/auth/): login, logout, register, ...\n- Preview for the new CVAT UI (dashboard only) is available: <http://localhost:9080/>\n- Added command line tool for performing common task operations (/utils/cli/)\n\n### Changed\n\n- Outside and keyframe buttons in the side panel for all interpolation shapes (they were only for boxes before)\n- Improved error messages on the client side (#511)\n\n### Removed\n\n- \"Flip images\" has been removed. UI now contains rotation features.\n\n### Fixed\n\n- Incorrect width of shapes borders in some cases\n- Annotation parser for tracks with a start frame less than the first segment frame\n- Interpolation on the server near outside frames\n- Dump for case when task name has a slash\n- Auto annotation fail for multijob tasks\n- Installation of CVAT with OpenVINO on the Windows platform\n- Background color was always black in utils/mask/converter.py\n- Exception in attribute annotation mode when a label are switched to a value without any attributes\n- Handling of wrong labelamp json file in auto annotation (<https://github.com/opencv/cvat/issues/554>)\n- No default attributes in dumped annotation (<https://github.com/opencv/cvat/issues/601>)\n- Required field \"Frame Filter\" on admin page during a task modifying (#666)\n- Dump annotation errors for a task with several segments (#610, #500)\n- Invalid label parsing during a task creating (#628)\n- Button \"Open Task\" in the annotation view\n- Creating a video task with 0 overlap\n\n### Security\n\n- Upgraded Django, djangorestframework, and other packages\n\n## \\[0.4.2] - 2019-06-03\n\n### Fixed\n\n- Fixed interaction with the server share in the auto annotation plugin\n\n## \\[0.4.1] - 2019-05-14\n\n### Fixed\n\n- JavaScript syntax incompatibility with Google Chrome versions less than 72\n\n## \\[0.4.0] - 2019-05-04\n\n### Added\n\n- OpenVINO auto annotation: it is possible to upload a custom model and annotate images automatically.\n- Ability to rotate images/video in the client part (Ctrl+R, Shift+Ctrl+R shortcuts) (#305)\n- The ReID application for automatic bounding box merging has been added (#299)\n- Keyboard shortcuts to switch next/previous default shape type (box, polygon etc) (Alt + <, Alt + >) (#316)\n- Converter for VOC now supports interpolation tracks\n- REST API (/api/v1/\\*, /api/docs)\n- Semi-automatic semantic segmentation with the [Deep Extreme Cut](http://www.vision.ee.ethz.ch/~cvlsegmentation/dextr/) work\n\n### Changed\n\n- Propagation setup has been moved from settings to bottom player panel\n- Additional events like \"Debug Info\" or \"Fit Image\" have been added for analitics\n- Optional using LFS for git annotation storages (#314)\n\n### Deprecated\n\n- \"Flip images\" flag in the create task dialog will be removed.\n  Rotation functionality in client part have been added instead.\n\n### Fixed\n\n- Django 2.1.5 (security fix, [CVE-2019-3498](https://nvd.nist.gov/vuln/detail/CVE-2019-3498))\n- Several scenarious which cause code 400 after undo/redo/save have been fixed (#315)\n\n## \\[0.3.0] - 2018-12-29\n\n### Added\n\n- Ability to copy Object URL and Frame URL via object context menu and player context menu respectively.\n- Ability to change opacity for selected shape with help \"Selected Fill Opacity\" slider.\n- Ability to remove polyshapes points by double click.\n- Ability to draw/change polyshapes (except for points) by slip method. Just press ENTER and moving a cursor.\n- Ability to switch lock/hide properties via label UI element (in right menu) for all objects with same label.\n- Shortcuts for outside/keyframe properties\n- Support of Intel OpenVINO for accelerated model inference\n- Tensorflow annotation now works without CUDA. It can use CPU only. OpenVINO and CUDA are supported optionally.\n- Incremental saving of annotations.\n- Tutorial for using polygons (screencast)\n- Silk profiler to improve development process\n- Admin panel can be used to edit labels and attributes for annotation tasks\n- Analytics component to manage a data annotation team, monitor exceptions, collect client and server logs\n- Changeable job and task statuses (annotation, validation, completed).\n  A job status can be changed manually, a task status is computed automatically based on job statuses (#153)\n- Backlink to a task from its job annotation view (#156)\n- Buttons lock/hide for labels. They work for all objects with the same label on a current frame (#116)\n\n### Changed\n\n- Polyshape editing method has been improved. You can redraw part of shape instead of points cloning.\n- Unified shortcut (Esc) for close any mode instead of different shortcuts (Alt+N, Alt+G, Alt+M etc.).\n- Dump file contains information about data source (e.g. video name, archive name, ...)\n- Update requests library due to [CVE-2018-18074](https://nvd.nist.gov/vuln/detail/CVE-2018-18074)\n- Per task/job permissions to create/access/change/delete tasks and annotations\n- Documentation was improved\n- Timeout for creating tasks was increased (from 1h to 4h) (#136)\n- Drawing has become more convenience. Now it is possible to draw outside an image.\n  Shapes will be automatically truncated after drawing process (#202)\n\n### Fixed\n\n- Performance bottleneck has been fixed during you create new objects (draw, copy, merge etc).\n- Label UI elements aren't updated after changelabel.\n- Attribute annotation mode can use invalid shape position after resize or move shapes.\n- Labels order is preserved now (#242)\n- Uploading large XML files (#123)\n- Django vulnerability (#121)\n- Grammatical cleanup of README.md (#107)\n- Dashboard loading has been accelerated (#156)\n- Text drawing outside of a frame in some cases (#202)\n\n## \\[0.2.0] - 2018-09-28\n\n### Added\n\n- New annotation shapes: polygons, polylines, points\n- Undo/redo feature\n- Grid to estimate size of objects\n- Context menu for shapes\n- A converter to PASCAL VOC format\n- A converter to MS COCO format\n- A converter to mask format\n- License header for most of all files\n- .gitattribute to avoid problems with bash scripts inside a container\n- CHANGELOG.md itself\n- Drawing size of a bounding box during resize\n- Color by instance, group, label\n- Group objects\n- Object propagation on next frames\n- Full screen view\n\n### Changed\n\n- Documentation, screencasts, the primary screenshot\n- Content-type for save_job request is application/json\n\n### Fixed\n\n- Player navigation if the browser's window is scrolled\n- Filter doesn't support dash (-)\n- Several memory leaks\n- Inconsistent extensions between filenames in an annotation file and real filenames\n\n## \\[0.1.2] - 2018-08-07\n\n### Added\n\n- 7z archive support when creating a task\n- .vscode/launch.json file for developing with VS code\n\n### Fixed\n\n- #14: docker-compose down command as written in the readme does not remove volumes\n- #15: all checkboxes in temporary attributes are checked when reopening job after saving the job\n- #18: extend CONTRIBUTING.md\n- #19: using the same attribute for label twice -> stuck\n\n### Changed\n\n- More strict verification for labels with attributes\n\n## \\[0.1.1] - 2018-07-6\n\n### Added\n\n- Links on a screenshot, documentation, screencasts into README.md\n- CONTRIBUTORS.md\n\n### Fixed\n\n- GitHub documentation\n\n## \\[0.1.0] - 2018-06-29\n\n### Added\n\n- Initial version\n\n## Template\n\n```\n## \\[Unreleased]\n### Added\n- TDB\n\n### Changed\n- TDB\n\n### Deprecated\n- TDB\n\n### Removed\n- TDB\n\n### Fixed\n- TDB\n\n### Security\n- TDB\n```\n", "\n# Copyright (C) 2018-2022 Intel Corporation\n#\n# SPDX-License-Identifier: MIT\n\nimport itertools\nimport os\nimport sys\nimport rq\nimport re\nimport shutil\nfrom distutils.dir_util import copy_tree\nfrom traceback import print_exception\nfrom urllib import parse as urlparse\nfrom urllib import request as urlrequest\nimport requests\nimport django_rq\n\nfrom django.conf import settings\nfrom django.db import transaction\n\nfrom cvat.apps.engine import models\nfrom cvat.apps.engine.log import slogger\nfrom cvat.apps.engine.media_extractors import (MEDIA_TYPES, Mpeg4ChunkWriter, Mpeg4CompressedChunkWriter,\n    ValidateDimension, ZipChunkWriter, ZipCompressedChunkWriter, get_mime, sort)\nfrom cvat.apps.engine.utils import av_scan_paths\nfrom utils.dataset_manifest import ImageManifestManager, VideoManifestManager, is_manifest\nfrom utils.dataset_manifest.core import VideoManifestValidator\nfrom utils.dataset_manifest.utils import detect_related_images\nfrom .cloud_provider import get_cloud_storage_instance, Credentials\n\n############################# Low Level server API\n\ndef create(tid, data):\n    \"\"\"Schedule the task\"\"\"\n    q = django_rq.get_queue('default')\n    q.enqueue_call(func=_create_thread, args=(tid, data),\n        job_id=\"/api/tasks/{}\".format(tid))\n\n@transaction.atomic\ndef rq_handler(job, exc_type, exc_value, traceback):\n    split = job.id.split('/')\n    tid = split[split.index('tasks') + 1]\n    try:\n        tid = int(tid)\n        db_task = models.Task.objects.select_for_update().get(pk=tid)\n        with open(db_task.get_log_path(), \"wt\") as log_file:\n            print_exception(exc_type, exc_value, traceback, file=log_file)\n    except (models.Task.DoesNotExist, ValueError):\n        pass # skip exceptions in the code\n\n    return False\n\n############################# Internal implementation for server API\n\ndef _copy_data_from_source(server_files, upload_dir, server_dir=None):\n    job = rq.get_current_job()\n    job.meta['status'] = 'Data are being copied from source..'\n    job.save_meta()\n\n    for path in server_files:\n        if server_dir is None:\n            source_path = os.path.join(settings.SHARE_ROOT, os.path.normpath(path))\n        else:\n            source_path = os.path.join(server_dir, os.path.normpath(path))\n        target_path = os.path.join(upload_dir, path)\n        if os.path.isdir(source_path):\n            copy_tree(source_path, target_path)\n        else:\n            target_dir = os.path.dirname(target_path)\n            if not os.path.exists(target_dir):\n                os.makedirs(target_dir)\n            shutil.copyfile(source_path, target_path)\n\ndef _save_task_to_db(db_task):\n    job = rq.get_current_job()\n    job.meta['status'] = 'Task is being saved in database'\n    job.save_meta()\n\n    segment_size = db_task.segment_size\n    segment_step = segment_size\n    if segment_size == 0 or segment_size > db_task.data.size:\n        segment_size = db_task.data.size\n        db_task.segment_size = segment_size\n\n        # Segment step must be more than segment_size + overlap in single-segment tasks\n        # Otherwise a task contains an extra segment\n        segment_step = sys.maxsize\n\n    default_overlap = 5 if db_task.mode == 'interpolation' else 0\n    if db_task.overlap is None:\n        db_task.overlap = default_overlap\n    db_task.overlap = min(db_task.overlap, segment_size  // 2)\n\n    segment_step -= db_task.overlap\n\n    for start_frame in range(0, db_task.data.size, segment_step):\n        stop_frame = min(start_frame + segment_size - 1, db_task.data.size - 1)\n\n        slogger.glob.info(\"New segment for task #{}: start_frame = {}, \\\n            stop_frame = {}\".format(db_task.id, start_frame, stop_frame))\n\n        db_segment = models.Segment()\n        db_segment.task = db_task\n        db_segment.start_frame = start_frame\n        db_segment.stop_frame = stop_frame\n        db_segment.save()\n\n        db_job = models.Job(segment=db_segment)\n        db_job.save()\n\n\n    db_task.data.save()\n    db_task.save()\n\ndef _count_files(data, manifest_files=None):\n    share_root = settings.SHARE_ROOT\n    server_files = []\n\n    for path in data[\"server_files\"]:\n        path = os.path.normpath(path).lstrip('/')\n        if '..' in path.split(os.path.sep):\n            raise ValueError(\"Don't use '..' inside file paths\")\n        full_path = os.path.abspath(os.path.join(share_root, path))\n        if os.path.commonprefix([share_root, full_path]) != share_root:\n            raise ValueError(\"Bad file path: \" + path)\n        server_files.append(path)\n\n    sorted_server_files = sorted(server_files, reverse=True)\n    # The idea of the code is trivial. After sort we will have files in the\n    # following order: 'a/b/c/d/2.txt', 'a/b/c/d/1.txt', 'a/b/c/d', 'a/b/c'\n    # Let's keep all items which aren't substrings of the previous item. In\n    # the example above only 2.txt and 1.txt files will be in the final list.\n    # Also need to correctly handle 'a/b/c0', 'a/b/c' case.\n    without_extra_dirs = [v[1] for v in zip([\"\"] + sorted_server_files, sorted_server_files)\n        if not os.path.dirname(v[0]).startswith(v[1])]\n\n    # we need to keep the original sequence of files\n    data['server_files'] = [f for f in server_files if f in without_extra_dirs]\n\n    def count_files(file_mapping, counter):\n        for rel_path, full_path in file_mapping.items():\n            mime = get_mime(full_path)\n            if mime in counter:\n                counter[mime].append(rel_path)\n            elif rel_path.endswith('.jsonl'):\n                manifest_files.append(rel_path)\n            else:\n                slogger.glob.warn(\"Skip '{}' file (its mime type doesn't \"\n                    \"correspond to supported MIME file type)\".format(full_path))\n\n    counter = { media_type: [] for media_type in MEDIA_TYPES.keys() }\n\n    count_files(\n        file_mapping={ f:f for f in data['remote_files'] or data['client_files']},\n        counter=counter,\n    )\n\n    count_files(\n        file_mapping={ f:os.path.abspath(os.path.join(share_root, f)) for f in data['server_files']},\n        counter=counter,\n    )\n\n    return counter\n\ndef _validate_data(counter, manifest_files=None):\n    unique_entries = 0\n    multiple_entries = 0\n    for media_type, media_config in MEDIA_TYPES.items():\n        if counter[media_type]:\n            if media_config['unique']:\n                unique_entries += len(counter[media_type])\n            else:\n                multiple_entries += len(counter[media_type])\n\n            if manifest_files and media_type not in ('video', 'image'):\n                raise Exception('File with meta information can only be uploaded with video/images ')\n\n    if unique_entries == 1 and multiple_entries > 0 or unique_entries > 1:\n        unique_types = ', '.join([k for k, v in MEDIA_TYPES.items() if v['unique']])\n        multiply_types = ', '.join([k for k, v in MEDIA_TYPES.items() if not v['unique']])\n        count = ', '.join(['{} {}(s)'.format(len(v), k) for k, v in counter.items()])\n        raise ValueError('Only one {} or many {} can be used simultaneously, \\\n            but {} found.'.format(unique_types, multiply_types, count))\n\n    if unique_entries == 0 and multiple_entries == 0:\n        raise ValueError('No media data found')\n\n    task_modes = [MEDIA_TYPES[media_type]['mode'] for media_type, media_files in counter.items() if media_files]\n\n    if not all(mode == task_modes[0] for mode in task_modes):\n        raise Exception('Could not combine different task modes for data')\n\n    return counter, task_modes[0]\n\ndef _validate_manifest(manifests, root_dir):\n    if manifests:\n        if len(manifests) != 1:\n            raise Exception('Only one manifest file can be attached with data')\n        full_manifest_path = os.path.join(root_dir, manifests[0])\n        if is_manifest(full_manifest_path):\n            return manifests[0]\n        raise Exception('Invalid manifest was uploaded')\n    return None\n\ndef _download_data(urls, upload_dir):\n    job = rq.get_current_job()\n    local_files = {}\n    for url in urls:\n        name = os.path.basename(urlrequest.url2pathname(urlparse.urlparse(url).path))\n        if name in local_files:\n            raise Exception(\"filename collision: {}\".format(name))\n        slogger.glob.info(\"Downloading: {}\".format(url))\n        job.meta['status'] = '{} is being downloaded..'.format(url)\n        job.save_meta()\n\n        response = requests.get(url, stream=True)\n        if response.status_code == 200:\n            response.raw.decode_content = True\n            with open(os.path.join(upload_dir, name), 'wb') as output_file:\n                shutil.copyfileobj(response.raw, output_file)\n        else:\n            raise Exception(\"Failed to download \" + url)\n\n        local_files[name] = True\n\n    return list(local_files.keys())\n\ndef _get_manifest_frame_indexer(start_frame=0, frame_step=1):\n    return lambda frame_id: start_frame + frame_id * frame_step\n\n\n@transaction.atomic\ndef _create_thread(db_task, data, isBackupRestore=False, isDatasetImport=False):\n    if isinstance(db_task, int):\n        db_task = models.Task.objects.select_for_update().get(pk=db_task)\n\n    slogger.glob.info(\"create task #{}\".format(db_task.id))\n\n    db_data = db_task.data\n    upload_dir = db_data.get_upload_dirname()\n\n    if data['remote_files'] and not isDatasetImport:\n        data['remote_files'] = _download_data(data['remote_files'], upload_dir)\n\n    manifest_files = []\n    media = _count_files(data, manifest_files)\n    media, task_mode = _validate_data(media, manifest_files)\n\n    if data['server_files']:\n        if db_data.storage == models.StorageChoice.LOCAL:\n            _copy_data_from_source(data['server_files'], upload_dir, data.get('server_files_path'))\n        elif db_data.storage == models.StorageChoice.SHARE:\n            upload_dir = settings.SHARE_ROOT\n\n    manifest_root = None\n    if db_data.storage in {models.StorageChoice.LOCAL, models.StorageChoice.SHARE}:\n        manifest_root = upload_dir\n    elif db_data.storage == models.StorageChoice.CLOUD_STORAGE:\n        manifest_root = db_data.cloud_storage.get_storage_dirname()\n\n    manifest_file = _validate_manifest(manifest_files, manifest_root)\n    if manifest_file and (not settings.USE_CACHE or db_data.storage_method != models.StorageMethodChoice.CACHE):\n        raise Exception(\"File with meta information can be uploaded if 'Use cache' option is also selected\")\n\n    if data['server_files'] and db_data.storage == models.StorageChoice.CLOUD_STORAGE:\n        if not manifest_file: raise Exception('A manifest file not found')\n        db_cloud_storage = db_data.cloud_storage\n        credentials = Credentials()\n        credentials.convert_from_db({\n            'type': db_cloud_storage.credentials_type,\n            'value': db_cloud_storage.credentials,\n        })\n\n        details = {\n            'resource': db_cloud_storage.resource,\n            'credentials': credentials,\n            'specific_attributes': db_cloud_storage.get_specific_attributes()\n        }\n        cloud_storage_instance = get_cloud_storage_instance(cloud_provider=db_cloud_storage.provider_type, **details)\n        sorted_media = sort(media['image'], data['sorting_method'])\n        first_sorted_media_image = sorted_media[0]\n        cloud_storage_instance.download_file(first_sorted_media_image, os.path.join(upload_dir, first_sorted_media_image))\n\n        # prepare task manifest file from cloud storage manifest file\n        # NOTE we should create manifest before defining chunk_size\n        # FIXME in the future when will be implemented archive support\n        manifest = ImageManifestManager(db_data.get_manifest_path())\n        cloud_storage_manifest = ImageManifestManager(\n            os.path.join(db_data.cloud_storage.get_storage_dirname(), manifest_file),\n            db_data.cloud_storage.get_storage_dirname()\n        )\n        cloud_storage_manifest.set_index()\n        sequence, content = cloud_storage_manifest.get_subset(sorted_media)\n        sorted_content = (i[1] for i in sorted(zip(sequence, content)))\n        manifest.create(sorted_content)\n\n    av_scan_paths(upload_dir)\n\n    job = rq.get_current_job()\n    job.meta['status'] = 'Media files are being extracted...'\n    job.save_meta()\n\n    db_images = []\n    extractor = None\n    manifest_index = _get_manifest_frame_indexer()\n\n    # If upload from server_files image and directories\n    # need to update images list by all found images in directories\n    if (data['server_files']) and len(media['directory']) and len(media['image']):\n        media['image'].extend(\n            [os.path.relpath(image, upload_dir) for image in\n                MEDIA_TYPES['directory']['extractor'](\n                    source_path=[os.path.join(upload_dir, f) for f in media['directory']],\n                ).absolute_source_paths\n            ]\n        )\n        media['directory'] = []\n\n    for media_type, media_files in media.items():\n        if media_files:\n            if extractor is not None:\n                raise Exception('Combined data types are not supported')\n            if (isDatasetImport or isBackupRestore) and media_type == 'image' and db_data.storage == models.StorageChoice.SHARE:\n                manifest_index = _get_manifest_frame_indexer(db_data.start_frame, db_data.get_frame_step())\n                db_data.start_frame = 0\n                data['stop_frame'] = None\n                db_data.frame_filter = ''\n            source_paths=[os.path.join(upload_dir, f) for f in media_files]\n            if manifest_file and not isBackupRestore and data['sorting_method'] in {models.SortingMethod.RANDOM, models.SortingMethod.PREDEFINED}:\n                raise Exception(\"It isn't supported to upload manifest file and use random sorting\")\n            if isBackupRestore and db_data.storage_method == models.StorageMethodChoice.FILE_SYSTEM and \\\n                    data['sorting_method'] in {models.SortingMethod.RANDOM, models.SortingMethod.PREDEFINED}:\n                raise Exception(\"It isn't supported to import the task that was created without cache but with random/predefined sorting\")\n\n            details = {\n                'source_path': source_paths,\n                'step': db_data.get_frame_step(),\n                'start': db_data.start_frame,\n                'stop': data['stop_frame'],\n            }\n            if media_type in {'archive', 'zip', 'pdf'} and db_data.storage == models.StorageChoice.SHARE:\n                details['extract_dir'] = db_data.get_upload_dirname()\n                upload_dir = db_data.get_upload_dirname()\n                db_data.storage = models.StorageChoice.LOCAL\n            if media_type != 'video':\n                details['sorting_method'] = data['sorting_method']\n            extractor = MEDIA_TYPES[media_type]['extractor'](**details)\n\n    validate_dimension = ValidateDimension()\n    if isinstance(extractor, MEDIA_TYPES['zip']['extractor']):\n        extractor.extract()\n\n    if db_data.storage == models.StorageChoice.LOCAL or \\\n            (db_data.storage == models.StorageChoice.SHARE and \\\n            isinstance(extractor, MEDIA_TYPES['zip']['extractor'])):\n        validate_dimension.set_path(upload_dir)\n        validate_dimension.validate()\n\n    if db_task.project is not None and db_task.project.tasks.count() > 1 and db_task.project.tasks.first().dimension != validate_dimension.dimension:\n        raise Exception(f'Dimension ({validate_dimension.dimension}) of the task must be the same as other tasks in project ({db_task.project.tasks.first().dimension})')\n\n    if validate_dimension.dimension == models.DimensionType.DIM_3D:\n        db_task.dimension = models.DimensionType.DIM_3D\n\n        keys_of_related_files = validate_dimension.related_files.keys()\n        absolute_keys_of_related_files = [os.path.join(upload_dir, f) for f in keys_of_related_files]\n        # When a task is created, the sorting method can be random and in this case, reinitialization will be with correct sorting\n        # but when a task is restored from a backup, a random sorting is changed to predefined and we need to manually sort files\n        # in the correct order.\n        source_files = absolute_keys_of_related_files if not isBackupRestore else \\\n            [item for item in extractor.absolute_source_paths if item in absolute_keys_of_related_files]\n        extractor.reconcile(\n            source_files=source_files,\n            step=db_data.get_frame_step(),\n            start=db_data.start_frame,\n            stop=data['stop_frame'],\n            dimension=models.DimensionType.DIM_3D,\n        )\n\n    related_images = {}\n    if isinstance(extractor, MEDIA_TYPES['image']['extractor']):\n        extractor.filter(lambda x: not re.search(r'(^|{0})related_images{0}'.format(os.sep), x))\n        related_images = detect_related_images(extractor.absolute_source_paths, upload_dir)\n\n    if isBackupRestore and not isinstance(extractor, MEDIA_TYPES['video']['extractor']) and db_data.storage_method == models.StorageMethodChoice.CACHE and \\\n            db_data.sorting_method in {models.SortingMethod.RANDOM, models.SortingMethod.PREDEFINED} and validate_dimension.dimension != models.DimensionType.DIM_3D:\n        # we should sort media_files according to the manifest content sequence\n        # and we should do this in general after validation step for 3D data and after filtering from related_images\n        manifest = ImageManifestManager(db_data.get_manifest_path())\n        manifest.set_index()\n        sorted_media_files = []\n\n        for idx in range(len(extractor.absolute_source_paths)):\n            properties = manifest[idx]\n            image_name = properties.get('name', None)\n            image_extension = properties.get('extension', None)\n\n            full_image_path = os.path.join(upload_dir, f\"{image_name}{image_extension}\") if image_name and image_extension else None\n            if full_image_path and full_image_path in extractor:\n                sorted_media_files.append(full_image_path)\n        media_files = sorted_media_files.copy()\n        del sorted_media_files\n        data['sorting_method'] = models.SortingMethod.PREDEFINED\n        extractor.reconcile(\n            source_files=media_files,\n            step=db_data.get_frame_step(),\n            start=db_data.start_frame,\n            stop=data['stop_frame'],\n            sorting_method=data['sorting_method'],\n        )\n\n    db_task.mode = task_mode\n    db_data.compressed_chunk_type = models.DataChoice.VIDEO if task_mode == 'interpolation' and not data['use_zip_chunks'] else models.DataChoice.IMAGESET\n    db_data.original_chunk_type = models.DataChoice.VIDEO if task_mode == 'interpolation' else models.DataChoice.IMAGESET\n\n    def update_progress(progress):\n        progress_animation = '|/-\\\\'\n        if not hasattr(update_progress, 'call_counter'):\n            update_progress.call_counter = 0\n\n        status_message = 'Images are being compressed'\n        if not progress:\n            status_message = '{} {}'.format(status_message, progress_animation[update_progress.call_counter])\n        job.meta['status'] = status_message\n        job.meta['task_progress'] = progress or 0.\n        job.save_meta()\n        update_progress.call_counter = (update_progress.call_counter + 1) % len(progress_animation)\n\n    compressed_chunk_writer_class = Mpeg4CompressedChunkWriter if db_data.compressed_chunk_type == models.DataChoice.VIDEO else ZipCompressedChunkWriter\n    if db_data.original_chunk_type == models.DataChoice.VIDEO:\n        original_chunk_writer_class = Mpeg4ChunkWriter\n        # Let's use QP=17 (that is 67 for 0-100 range) for the original chunks, which should be visually lossless or nearly so.\n        # A lower value will significantly increase the chunk size with a slight increase of quality.\n        original_quality = 67\n    else:\n        original_chunk_writer_class = ZipChunkWriter\n        original_quality = 100\n\n    kwargs = {}\n    if validate_dimension.dimension == models.DimensionType.DIM_3D:\n        kwargs[\"dimension\"] = validate_dimension.dimension\n    compressed_chunk_writer = compressed_chunk_writer_class(db_data.image_quality, **kwargs)\n    original_chunk_writer = original_chunk_writer_class(original_quality)\n\n    # calculate chunk size if it isn't specified\n    if db_data.chunk_size is None:\n        if isinstance(compressed_chunk_writer, ZipCompressedChunkWriter):\n            if not (db_data.storage == models.StorageChoice.CLOUD_STORAGE):\n                w, h = extractor.get_image_size(0)\n            else:\n                img_properties = manifest[0]\n                w, h = img_properties['width'], img_properties['height']\n            area = h * w\n            db_data.chunk_size = max(2, min(72, 36 * 1920 * 1080 // area))\n        else:\n            db_data.chunk_size = 36\n\n    video_path = \"\"\n    video_size = (0, 0)\n\n    def _update_status(msg):\n        job.meta['status'] = msg\n        job.save_meta()\n\n    if settings.USE_CACHE and db_data.storage_method == models.StorageMethodChoice.CACHE:\n       for media_type, media_files in media.items():\n\n            if not media_files:\n                continue\n\n            # replace manifest file (e.g was uploaded 'subdir/manifest.jsonl' or 'some_manifest.jsonl')\n            if manifest_file and not os.path.exists(db_data.get_manifest_path()):\n                shutil.copyfile(os.path.join(upload_dir, manifest_file),\n                    db_data.get_manifest_path())\n                if upload_dir != settings.SHARE_ROOT:\n                    os.remove(os.path.join(upload_dir, manifest_file))\n\n            if task_mode == MEDIA_TYPES['video']['mode']:\n                try:\n                    manifest_is_prepared = False\n                    if manifest_file:\n                        try:\n                            manifest = VideoManifestValidator(source_path=os.path.join(upload_dir, media_files[0]),\n                                                              manifest_path=db_data.get_manifest_path())\n                            manifest.init_index()\n                            manifest.validate_seek_key_frames()\n                            manifest.validate_frame_numbers()\n                            assert len(manifest) > 0, 'No key frames.'\n\n                            all_frames = manifest.video_length\n                            video_size = manifest.video_resolution\n                            manifest_is_prepared = True\n                        except Exception as ex:\n                            manifest.remove()\n                            if isinstance(ex, AssertionError):\n                                base_msg = str(ex)\n                            else:\n                                base_msg = 'Invalid manifest file was upload.'\n                                slogger.glob.warning(str(ex))\n                            _update_status('{} Start prepare a valid manifest file.'.format(base_msg))\n\n                    if not manifest_is_prepared:\n                        _update_status('Start prepare a manifest file')\n                        manifest = VideoManifestManager(db_data.get_manifest_path())\n                        manifest.link(\n                            media_file=media_files[0],\n                            upload_dir=upload_dir,\n                            chunk_size=db_data.chunk_size\n                        )\n                        manifest.create()\n                        _update_status('A manifest had been created')\n\n                        all_frames = len(manifest.reader)\n                        video_size = manifest.reader.resolution\n                        manifest_is_prepared = True\n\n                    db_data.size = len(range(db_data.start_frame, min(data['stop_frame'] + 1 \\\n                        if data['stop_frame'] else all_frames, all_frames), db_data.get_frame_step()))\n                    video_path = os.path.join(upload_dir, media_files[0])\n                except Exception as ex:\n                    db_data.storage_method = models.StorageMethodChoice.FILE_SYSTEM\n                    manifest.remove()\n                    del manifest\n                    base_msg = str(ex) if isinstance(ex, AssertionError) \\\n                        else \"Uploaded video does not support a quick way of task creating.\"\n                    _update_status(\"{} The task will be created using the old method\".format(base_msg))\n            else: # images, archive, pdf\n                db_data.size = len(extractor)\n                manifest = ImageManifestManager(db_data.get_manifest_path())\n                if not manifest_file:\n                    manifest.link(\n                        sources=extractor.absolute_source_paths,\n                        meta={ k: {'related_images': related_images[k] } for k in related_images },\n                        data_dir=upload_dir,\n                        DIM_3D=(db_task.dimension == models.DimensionType.DIM_3D),\n                    )\n                    manifest.create()\n                else:\n                    manifest.init_index()\n                counter = itertools.count()\n                for _, chunk_frames in itertools.groupby(extractor.frame_range, lambda x: next(counter) // db_data.chunk_size):\n                    chunk_paths = [(extractor.get_path(i), i) for i in chunk_frames]\n                    img_sizes = []\n\n                    for chunk_path, frame_id in chunk_paths:\n                        properties = manifest[manifest_index(frame_id)]\n\n                        # check mapping\n                        if not chunk_path.endswith(f\"{properties['name']}{properties['extension']}\"):\n                            raise Exception('Incorrect file mapping to manifest content')\n                        if db_task.dimension == models.DimensionType.DIM_2D:\n                            resolution = (properties['width'], properties['height'])\n                        else:\n                            resolution = extractor.get_image_size(frame_id)\n                        img_sizes.append(resolution)\n\n                    db_images.extend([\n                        models.Image(data=db_data,\n                            path=os.path.relpath(path, upload_dir),\n                            frame=frame, width=w, height=h)\n                        for (path, frame), (w, h) in zip(chunk_paths, img_sizes)\n                    ])\n\n    if db_data.storage_method == models.StorageMethodChoice.FILE_SYSTEM or not settings.USE_CACHE:\n        counter = itertools.count()\n        generator = itertools.groupby(extractor, lambda x: next(counter) // db_data.chunk_size)\n        for chunk_idx, chunk_data in generator:\n            chunk_data = list(chunk_data)\n            original_chunk_path = db_data.get_original_chunk_path(chunk_idx)\n            original_chunk_writer.save_as_chunk(chunk_data, original_chunk_path)\n\n            compressed_chunk_path = db_data.get_compressed_chunk_path(chunk_idx)\n            img_sizes = compressed_chunk_writer.save_as_chunk(chunk_data, compressed_chunk_path)\n\n            if db_task.mode == 'annotation':\n                db_images.extend([\n                    models.Image(\n                        data=db_data,\n                        path=os.path.relpath(data[1], upload_dir),\n                        frame=data[2],\n                        width=size[0],\n                        height=size[1])\n\n                    for data, size in zip(chunk_data, img_sizes)\n                ])\n            else:\n                video_size = img_sizes[0]\n                video_path = chunk_data[0][1]\n\n            db_data.size += len(chunk_data)\n            progress = extractor.get_progress(chunk_data[-1][2])\n            update_progress(progress)\n\n    if db_task.mode == 'annotation':\n        models.Image.objects.bulk_create(db_images)\n        created_images = models.Image.objects.filter(data_id=db_data.id)\n\n        db_related_files = [\n            models.RelatedFile(data=image.data, primary_image=image, path=os.path.join(upload_dir, related_file_path))\n            for image in created_images\n            for related_file_path in related_images.get(image.path, [])\n        ]\n        models.RelatedFile.objects.bulk_create(db_related_files)\n        db_images = []\n    else:\n        models.Video.objects.create(\n            data=db_data,\n            path=os.path.relpath(video_path, upload_dir),\n            width=video_size[0], height=video_size[1])\n\n    if db_data.stop_frame == 0:\n        db_data.stop_frame = db_data.start_frame + (db_data.size - 1) * db_data.get_frame_step()\n    else:\n        # validate stop_frame\n        db_data.stop_frame = min(db_data.stop_frame, \\\n            db_data.start_frame + (db_data.size - 1) * db_data.get_frame_step())\n\n    preview = extractor.get_preview()\n    preview.save(db_data.get_preview_path())\n\n    slogger.glob.info(\"Found frames {} for Data #{}\".format(db_data.size, db_data.id))\n    _save_task_to_db(db_task)\n", "attrs==21.2.0\nclick==7.1.2\nDjango==3.2.12\ndjango-appconf==1.0.4\ndjango-auth-ldap==2.2.0\ndjango-compressor==2.4\ndjango-rq==2.3.2\nEasyProcess==0.3\nPillow==9.0.1\nnumpy==1.22.0\npython-ldap==3.4.0\npytz==2020.1\npyunpack==0.2.1\nrcssmin==1.0.6\nredis==3.5.3\nrjsmin==1.1.0\nrequests==2.26.0\nrq==1.5.1\nrq-scheduler==0.10.0\nsqlparse==0.4.2\ndjango-sendfile2==0.6.1\ndj-pagination==2.5.0\npython-logstash-async==2.2.0\nrules==2.2\nGitPython==3.1.27\ncoreapi==2.3.3\ndjango-filter==2.4.0\nMarkdown==3.2.2\ndjangorestframework==3.12.4\nPygments==2.7.4\ndrf-spectacular==0.21.2\nShapely==1.7.1\npdf2image==1.14.0\ndjango-rest-auth[with_social]==0.9.5\nopencv-python-headless==4.4.0.42\nh5py==2.10.0\ndjango-cors-headers==3.5.0\nfurl==2.1.0\nav==8.0.2 --no-binary=av\ntensorflow==2.8.0 # Optional requirement of Datumaro\n# The package is used by pyunpack as a command line tool to support multiple\n# archives. Don't use as a python module because it has GPL license.\npatool==1.12\ndiskcache==5.0.2\nopen3d==0.11.2\nboto3==1.17.61\nazure-storage-blob==12.8.1\ngoogle-cloud-storage==1.42.0\n# --no-binary=datumaro: workaround for pip to install\n# opencv-headless instead of regular opencv, to actually run setup script\ndatumaro==0.2.0 --no-binary=datumaro\nurllib3>=1.26.5 # not directly required, pinned by Snyk to avoid a vulnerability\nnatsort==8.0.0\nmistune>=2.0.1 # not directly required, pinned by Snyk to avoid a vulnerability\n"], "fixing_code": ["# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## \\[2.0.0] - Unreleased\n### Added\n- Handle attributes comming from nuclio detectors (<https://github.com/openvinotoolkit/cvat/pull/3917>)\n- Add additional environment variables for Nuclio configuration (<https://github.com/openvinotoolkit/cvat/pull/3894>)\n- Add KITTI segmentation and detection format (<https://github.com/openvinotoolkit/cvat/pull/3757>)\n- Add LFW format (<https://github.com/openvinotoolkit/cvat/pull/3770>)\n- Add Cityscapes format (<https://github.com/openvinotoolkit/cvat/pull/3758>)\n- Add Open Images V6 format (<https://github.com/openvinotoolkit/cvat/pull/3679>)\n- Rotated bounding boxes (<https://github.com/openvinotoolkit/cvat/pull/3832>)\n- Player option: Smooth image when zoom-in, enabled by default (<https://github.com/openvinotoolkit/cvat/pull/3933>)\n- Google Cloud Storage support in UI (<https://github.com/openvinotoolkit/cvat/pull/3919>)\n- Add project tasks paginations (<https://github.com/openvinotoolkit/cvat/pull/3910>)\n- Add remove issue button (<https://github.com/openvinotoolkit/cvat/pull/3952>)\n- Data sorting option (<https://github.com/openvinotoolkit/cvat/pull/3937>)\n- Options to change font size & position of text labels on the canvas (<https://github.com/openvinotoolkit/cvat/pull/3972>)\n- Add \"tag\" return type for automatic annotation in Nuclio (<https://github.com/openvinotoolkit/cvat/pull/3896>)\n- Helm chart: Make user-data-permission-fix optional (<https://github.com/openvinotoolkit/cvat/pull/3994>)\n- Advanced identity access management system, using open policy agent (<https://github.com/openvinotoolkit/cvat/pull/3788>)\n- Organizations to create \"shared space\" for different groups of users (<https://github.com/openvinotoolkit/cvat/pull/3788>)\n- Dataset importing to a project (<https://github.com/openvinotoolkit/cvat/pull/3790>)\n- User is able to customize information that text labels show (<https://github.com/openvinotoolkit/cvat/pull/4029>)\n- Support for uploading manifest with any name (<https://github.com/openvinotoolkit/cvat/pull/4041>)\n- Added information about OpenVINO toolkit to login page (<https://github.com/openvinotoolkit/cvat/pull/4077>)\n- Support for working with ellipses (<https://github.com/openvinotoolkit/cvat/pull/4062>)\n- Add several flags to task creation CLI (<https://github.com/openvinotoolkit/cvat/pull/4119>)\n- Add YOLOv5 serverless function for automatic annotation (<https://github.com/openvinotoolkit/cvat/pull/4178>)\n- Add possibility to change git repository and git export format from already created task (<https://github.com/openvinotoolkit/cvat/pull/3886>)\n- Basic page with jobs list, basic filtration to this list (<https://github.com/openvinotoolkit/cvat/pull/4258>)\n- Added OpenCV.js TrackerMIL as tracking tool (<https://github.com/openvinotoolkit/cvat/pull/4200>)\n- Ability to continue working from the latest frame where an annotator was before (<https://github.com/openvinotoolkit/cvat/pull/4297>)\n- `GET /api/jobs/<id>/commits` was implemented (<https://github.com/openvinotoolkit/cvat/pull/4368>)\n- Advanced filtration and sorting for a list of jobs (<https://github.com/openvinotoolkit/cvat/pull/4319>)\n\n### Changed\n- Users don't have access to a task object anymore if they are assigneed only on some jobs of the task (<https://github.com/openvinotoolkit/cvat/pull/3788>)\n- Different resources (tasks, projects) are not visible anymore for all CVAT instance users by default (<https://github.com/openvinotoolkit/cvat/pull/3788>)\n- API versioning scheme: using accept header versioning instead of namespace versioning (<https://github.com/openvinotoolkit/cvat/pull/4239>)\n- Replaced 'django_sendfile' with 'django_sendfile2' (<https://github.com/openvinotoolkit/cvat/pull/4267>)\n- Use drf-spectacular instead of drf-yasg for swagger documentation (<https://github.com/openvinotoolkit/cvat/pull/4210>)\n\n### Deprecated\n- Job field \"status\" is not used in UI anymore, but it has not been removed from the database yet (<https://github.com/openvinotoolkit/cvat/pull/3788>)\n\n### Removed\n- Review rating, reviewer field from the job instance (use assignee field together with stage field instead) (<https://github.com/openvinotoolkit/cvat/pull/3788>)\n- Training django app (<https://github.com/openvinotoolkit/cvat/pull/4330>)\n- v1 api version support (<https://github.com/openvinotoolkit/cvat/pull/4332>)\n\n### Fixed\n- Fixed Interaction handler keyboard handlers (<https://github.com/openvinotoolkit/cvat/pull/3881>)\n- Points of invisible shapes are visible in autobordering (<https://github.com/openvinotoolkit/cvat/pull/3931>)\n- Order of the label attributes in the object item details(<https://github.com/openvinotoolkit/cvat/pull/3945>)\n- Order of labels in tasks and projects (<https://github.com/openvinotoolkit/cvat/pull/3987>)\n- Fixed task creating with large files via webpage (<https://github.com/openvinotoolkit/cvat/pull/3692>)\n- Added information to export CVAT_HOST when performing local installation for accessing over network (<https://github.com/openvinotoolkit/cvat/pull/4014>)\n- Fixed possible color collisions in the generated colormap (<https://github.com/openvinotoolkit/cvat/pull/4007>)\n- Original pdf file is deleted when using share (<https://github.com/openvinotoolkit/cvat/pull/3967>)\n- Order in an annotation file(<https://github.com/openvinotoolkit/cvat/pull/4087>)\n- Fixed task data upload progressbar (<https://github.com/openvinotoolkit/cvat/pull/4134>)\n- Email in org invitations is case sensitive (<https://github.com/openvinotoolkit/cvat/pull/4153>)\n- Caching for tasks and jobs can lead to an exception if its assignee user is removed (<https://github.com/openvinotoolkit/cvat/pull/4165>)\n- Added intelligent function when paste labels to another task (<https://github.com/openvinotoolkit/cvat/pull/4161>)\n- Uncaught TypeError: this.el.node.getScreenCTM() is null in Firefox (<https://github.com/openvinotoolkit/cvat/pull/4175>)\n- Bug: canvas is busy when start playing, start resizing a shape and do not release the mouse cursor (<https://github.com/openvinotoolkit/cvat/pull/4151>)\n- Bug: could not receive frame N. TypeError: Cannot read properties of undefined (reding \"filename\") (<https://github.com/openvinotoolkit/cvat/pull/4187>)\n- Cannot choose a dataset format for a linked repository if a task type is annotation (<https://github.com/openvinotoolkit/cvat/pull/4203>)\n- Fixed tus upload error over https (<https://github.com/openvinotoolkit/cvat/pull/4154>)\n- Issues disappear when rescale a browser (<https://github.com/openvinotoolkit/cvat/pull/4189>)\n- Auth token key is not returned when registering without email verification (<https://github.com/openvinotoolkit/cvat/pull/4092>)\n- Error in create project from backup for standard 3D annotation (<https://github.com/openvinotoolkit/cvat/pull/4160>)\n- Annotations search does not work correctly in some corner cases (when use complex properties with width, height) (<https://github.com/openvinotoolkit/cvat/pull/4198>)\n- Kibana requests are not proxied due to django-revproxy incompatibility with Django >3.2.x (<https://github.com/openvinotoolkit/cvat/issues/4085>)\n- Content type for getting frame with tasks/{id}/data/ endpoint (<https://github.com/openvinotoolkit/cvat/pull/4333>)\n\n### Security\n- Updated ELK to 6.8.23 which uses log4j 2.17.1 (<https://github.com/openvinotoolkit/cvat/pull/4206>)\n- Added validation for URLs which used as remote data source (<https://github.com/openvinotoolkit/cvat/pull/4387>)\n\n## \\[1.7.0] - 2021-11-15\n\n### Added\n\n- cvat-ui: support cloud storages (<https://github.com/openvinotoolkit/cvat/pull/3372>)\n- interactor: add HRNet interactive segmentation serverless function (<https://github.com/openvinotoolkit/cvat/pull/3740>)\n- Added GPU implementation for SiamMask, reworked tracking approach (<https://github.com/openvinotoolkit/cvat/pull/3571>)\n- Progress bar for manifest creating (<https://github.com/openvinotoolkit/cvat/pull/3712>)\n- IAM: Open Policy Agent integration (<https://github.com/openvinotoolkit/cvat/pull/3788>)\n- Add a tutorial on attaching cloud storage AWS-S3 (<https://github.com/openvinotoolkit/cvat/pull/3745>)\n  and Azure Blob Container (<https://github.com/openvinotoolkit/cvat/pull/3778>)\n- The feature to remove annotations in a specified range of frames (<https://github.com/openvinotoolkit/cvat/pull/3617>)\n- Project backup/restore (<https://github.com/openvinotoolkit/cvat/pull/3852>)\n\n### Changed\n\n- UI tracking has been reworked (<https://github.com/openvinotoolkit/cvat/pull/3571>)\n- Updated Django till 3.2.7 (automatic AppConfig discovery)\n- Manifest generation: Reduce creating time (<https://github.com/openvinotoolkit/cvat/pull/3712>)\n- Migration from NPM 6 to NPM 7 (<https://github.com/openvinotoolkit/cvat/pull/3773>)\n- Update Datumaro dependency to 0.2.0 (<https://github.com/openvinotoolkit/cvat/pull/3813>)\n\n### Fixed\n\n- Fixed JSON transform issues in network requests (<https://github.com/openvinotoolkit/cvat/pull/3706>)\n- Display a more user-friendly exception message (<https://github.com/openvinotoolkit/cvat/pull/3721>)\n- Exception `DataCloneError: The object could not be cloned` (<https://github.com/openvinotoolkit/cvat/pull/3733>)\n- Fixed extension comparison in task frames CLI (<https://github.com/openvinotoolkit/cvat/pull/3674>)\n- Incorrect work when copy job list with \"Copy\" button (<https://github.com/openvinotoolkit/cvat/pull/3749>)\n- Iterating over manifest (<https://github.com/openvinotoolkit/cvat/pull/3792>)\n- Manifest removing (<https://github.com/openvinotoolkit/cvat/pull/3791>)\n- Fixed project updated date (<https://github.com/openvinotoolkit/cvat/pull/3814>)\n- Fixed dextr deployment (<https://github.com/openvinotoolkit/cvat/pull/3820>)\n- Migration of `dataset_repo` application (<https://github.com/openvinotoolkit/cvat/pull/3827>)\n- Helm settings for external psql database were unused by backend (<https://github.com/openvinotoolkit/cvat/pull/3779>)\n- Updated WSL setup for development (<https://github.com/openvinotoolkit/cvat/pull/3828>)\n- Helm chart config (<https://github.com/openvinotoolkit/cvat/pull/3784>)\n\n### Security\n\n- Fix security issues on the documentation website unsafe use of target blank\n  and potential clickjacking on legacy browsers (<https://github.com/openvinotoolkit/cvat/pull/3789>)\n\n## \\[1.6.0] - 2021-09-17\n\n### Added\n\n- Added ability to import data from share with cli without copying the data (<https://github.com/openvinotoolkit/cvat/issues/2862>)\n- Notification if the browser does not support nesassary API\n- Added ability to export project as a dataset (<https://github.com/openvinotoolkit/cvat/pull/3365>)\n  and project with 3D tasks (<https://github.com/openvinotoolkit/cvat/pull/3502>)\n- Additional inline tips in interactors with demo gifs (<https://github.com/openvinotoolkit/cvat/pull/3473>)\n- Added intelligent scissors blocking feature (<https://github.com/openvinotoolkit/cvat/pull/3510>)\n- Support cloud storage status (<https://github.com/openvinotoolkit/cvat/pull/3386>)\n- Support cloud storage preview (<https://github.com/openvinotoolkit/cvat/pull/3386>)\n- cvat-core: support cloud storages (<https://github.com/openvinotoolkit/cvat/pull/3313>)\n\n### Changed\n\n- Non-blocking UI when using interactors (<https://github.com/openvinotoolkit/cvat/pull/3473>)\n- \"Selected opacity\" slider now defines opacity level for shapes being drawnSelected opacity (<https://github.com/openvinotoolkit/cvat/pull/3473>)\n- Cloud storage creating and updating (<https://github.com/openvinotoolkit/cvat/pull/3386>)\n- Way of working with cloud storage content (<https://github.com/openvinotoolkit/cvat/pull/3386>)\n\n### Removed\n\n- Support TEMP_KEY_SECRET_KEY_TOKEN_SET for AWS S3 cloud storage (<https://github.com/openvinotoolkit/cvat/pull/3386>)\n\n### Fixed\n\n- Fixed multiple tasks moving (<https://github.com/openvinotoolkit/cvat/pull/3517>)\n- Fixed task creating CLI parameter (<https://github.com/openvinotoolkit/cvat/pull/3519>)\n- Fixed import for MOTS format (<https://github.com/openvinotoolkit/cvat/pull/3612>)\n\n## \\[1.5.0] - 2021-08-02\n\n### Added\n\n- Support of context images for 2D image tasks (<https://github.com/openvinotoolkit/cvat/pull/3122>)\n- Support of cloud storage without copying data into CVAT: server part (<https://github.com/openvinotoolkit/cvat/pull/2620>)\n- Filter `is_active` for user list (<https://github.com/openvinotoolkit/cvat/pull/3235>)\n- Ability to export/import tasks (<https://github.com/openvinotoolkit/cvat/pull/3056>)\n- Add a tutorial for semi-automatic/automatic annotation (<https://github.com/openvinotoolkit/cvat/pull/3124>)\n- Explicit \"Done\" button when drawing any polyshapes (<https://github.com/openvinotoolkit/cvat/pull/3417>)\n- Histogram equalization with OpenCV javascript (<https://github.com/openvinotoolkit/cvat/pull/3447>)\n- Client-side polyshapes approximation when using semi-automatic interactors & scissors (<https://github.com/openvinotoolkit/cvat/pull/3450>)\n- Support of Google Cloud Storage for cloud storage (<https://github.com/openvinotoolkit/cvat/pull/3561>)\n\n### Changed\n\n- Updated manifest format, added meta with related images (<https://github.com/openvinotoolkit/cvat/pull/3122>)\n- Update of COCO format documentation (<https://github.com/openvinotoolkit/cvat/pull/3197>)\n- Updated Webpack Dev Server config to add proxy (<https://github.com/openvinotoolkit/cvat/pull/3368>)\n- Update to Django 3.1.12 (<https://github.com/openvinotoolkit/cvat/pull/3378>)\n- Updated visibility for removable points in AI tools (<https://github.com/openvinotoolkit/cvat/pull/3417>)\n- Updated UI handling for IOG serverless function (<https://github.com/openvinotoolkit/cvat/pull/3417>)\n- Changed Nginx proxy to Traefik in `docker-compose.yml` (<https://github.com/openvinotoolkit/cvat/pull/3409>)\n- Simplify the process of deploying CVAT with HTTPS (<https://github.com/openvinotoolkit/cvat/pull/3409>)\n\n### Fixed\n\n- Project page requests took a long time and did many DB queries (<https://github.com/openvinotoolkit/cvat/pull/3223>)\n- Fixed Python 3.6 support (<https://github.com/openvinotoolkit/cvat/pull/3258>)\n- Incorrect attribute import in tracks (<https://github.com/openvinotoolkit/cvat/pull/3229>)\n- Issue \"is not a constructor\" when create object, save, undo, save, redo save (<https://github.com/openvinotoolkit/cvat/pull/3292>)\n- Fix CLI create an infinite loop if git repository responds with failure (<https://github.com/openvinotoolkit/cvat/pull/3267>)\n- Bug with sidebar & fullscreen (<https://github.com/openvinotoolkit/cvat/pull/3289>)\n- 504 Gateway Time-out on `data/meta` requests (<https://github.com/openvinotoolkit/cvat/pull/3269>)\n- TypeError: Cannot read property 'clientX' of undefined when draw cuboids with hotkeys (<https://github.com/openvinotoolkit/cvat/pull/3308>)\n- Duplication of the cuboids when redraw them (<https://github.com/openvinotoolkit/cvat/pull/3308>)\n- Some code issues in Deep Extreme Cut handler code (<https://github.com/openvinotoolkit/cvat/pull/3325>)\n- UI fails when inactive user is assigned to a task/job (<https://github.com/openvinotoolkit/cvat/pull/3343>)\n- Calculate precise progress of decoding a video file (<https://github.com/openvinotoolkit/cvat/pull/3381>)\n- Falsely successful `cvat_ui` image build in case of OOM error that leads to the default nginx welcome page\n  (<https://github.com/openvinotoolkit/cvat/pull/3379>)\n- Fixed issue when save filtered object in AAM (<https://github.com/openvinotoolkit/cvat/pull/3401>)\n- Context image disappears after undo/redo (<https://github.com/openvinotoolkit/cvat/pull/3416>)\n- Using combined data sources (directory and image) when create a task (<https://github.com/openvinotoolkit/cvat/pull/3424>)\n- Creating task with labels in project (<https://github.com/openvinotoolkit/cvat/pull/3454>)\n- Move task and autoannotation modals were invisible from project page (<https://github.com/openvinotoolkit/cvat/pull/3475>)\n\n## \\[1.4.0] - 2021-05-18\n\n### Added\n\n- Documentation on mask annotation (<https://github.com/openvinotoolkit/cvat/pull/3044>)\n- Hotkeys to switch a label of existing object or to change default label (for objects created with N) (<https://github.com/openvinotoolkit/cvat/pull/3070>)\n- A script to convert some kinds of DICOM files to regular images (<https://github.com/openvinotoolkit/cvat/pull/3095>)\n- Helm chart prototype (<https://github.com/openvinotoolkit/cvat/pull/3102>)\n- Initial implementation of moving tasks between projects (<https://github.com/openvinotoolkit/cvat/pull/3164>)\n\n### Changed\n\n- Place of migration logger initialization (<https://github.com/openvinotoolkit/cvat/pull/3170>)\n\n### Removed\n\n- Kubernetes templates from (<https://github.com/openvinotoolkit/cvat/pull/1962>) due to helm charts (<https://github.com/openvinotoolkit/cvat/pull/3171>)\n\n### Fixed\n\n- Export of instance masks with holes (<https://github.com/openvinotoolkit/cvat/pull/3044>)\n- Changing a label on canvas does not work when 'Show object details' enabled (<https://github.com/openvinotoolkit/cvat/pull/3084>)\n- Make sure frame unzip web worker correctly terminates after unzipping all images in a requested chunk (<https://github.com/openvinotoolkit/cvat/pull/3096>)\n- Reset password link was unavailable before login (<https://github.com/openvinotoolkit/cvat/pull/3140>)\n- Manifest: migration (<https://github.com/openvinotoolkit/cvat/pull/3146>)\n- Fixed cropping polygon in some corner cases (<https://github.com/openvinotoolkit/cvat/pull/3184>)\n\n## \\[1.3.0] - 3/31/2021\n\n### Added\n\n- CLI: Add support for saving annotations in a git repository when creating a task.\n- CVAT-3D: support lidar data on the server side (<https://github.com/openvinotoolkit/cvat/pull/2534>)\n- GPU support for Mask-RCNN and improvement in its deployment time (<https://github.com/openvinotoolkit/cvat/pull/2714>)\n- CVAT-3D: Load all frames corresponding to the job instance\n  (<https://github.com/openvinotoolkit/cvat/pull/2645>)\n- Intelligent scissors with OpenCV javascript (<https://github.com/openvinotoolkit/cvat/pull/2689>)\n- CVAT-3D: Visualize 3D point cloud spaces in 3D View, Top View Side View and Front View (<https://github.com/openvinotoolkit/cvat/pull/2768>)\n- [Inside Outside Guidance](https://github.com/shiyinzhang/Inside-Outside-Guidance) serverless\n  function for interactive segmentation\n- Pre-built [cvat_server](https://hub.docker.com/r/openvino/cvat_server) and\n  [cvat_ui](https://hub.docker.com/r/openvino/cvat_ui) images were published on DockerHub (<https://github.com/openvinotoolkit/cvat/pull/2766>)\n- Project task subsets (<https://github.com/openvinotoolkit/cvat/pull/2774>)\n- Kubernetes templates and guide for their deployment (<https://github.com/openvinotoolkit/cvat/pull/1962>)\n- [WiderFace](http://shuoyang1213.me/WIDERFACE/) format support (<https://github.com/openvinotoolkit/cvat/pull/2864>)\n- [VGGFace2](https://github.com/ox-vgg/vgg_face2) format support (<https://github.com/openvinotoolkit/cvat/pull/2865>)\n- [Backup/Restore guide](cvat/apps/documentation/backup_guide.md) (<https://github.com/openvinotoolkit/cvat/pull/2964>)\n- Label deletion from tasks and projects (<https://github.com/openvinotoolkit/cvat/pull/2881>)\n- CVAT-3D: Implemented initial cuboid placement in 3D View and select cuboid in Top, Side and Front views\n  (<https://github.com/openvinotoolkit/cvat/pull/2891>)\n- [Market-1501](https://www.aitribune.com/dataset/2018051063) format support (<https://github.com/openvinotoolkit/cvat/pull/2869>)\n- Ability of upload manifest for dataset with images (<https://github.com/openvinotoolkit/cvat/pull/2763>)\n- Annotations filters UI using react-awesome-query-builder (<https://github.com/openvinotoolkit/cvat/issues/1418>)\n- Storing settings in local storage to keep them between browser sessions (<https://github.com/openvinotoolkit/cvat/pull/3017>)\n- [ICDAR](https://rrc.cvc.uab.es/?ch=2) format support (<https://github.com/openvinotoolkit/cvat/pull/2866>)\n- Added switcher to maintain polygon crop behavior (<https://github.com/openvinotoolkit/cvat/pull/3021>\n- Filters and sorting options for job list, added tooltip for tasks filters (<https://github.com/openvinotoolkit/cvat/pull/3030>)\n\n### Changed\n\n- CLI - task list now returns a list of current tasks. (<https://github.com/openvinotoolkit/cvat/pull/2863>)\n- Updated HTTPS install README section (cleanup and described more robust deploy)\n- Logstash is improved for using with configurable elasticsearch outputs (<https://github.com/openvinotoolkit/cvat/pull/2531>)\n- Bumped nuclio version to 1.5.16 (<https://github.com/openvinotoolkit/cvat/pull/2578>)\n- All methods for interactive segmentation accept negative points as well\n- Persistent queue added to logstash (<https://github.com/openvinotoolkit/cvat/pull/2744>)\n- Improved maintenance of popups visibility (<https://github.com/openvinotoolkit/cvat/pull/2809>)\n- Image visualizations settings on canvas for faster access (<https://github.com/openvinotoolkit/cvat/pull/2872>)\n- Better scale management of left panel when screen is too small (<https://github.com/openvinotoolkit/cvat/pull/2880>)\n- Improved error messages for annotation import (<https://github.com/openvinotoolkit/cvat/pull/2935>)\n- Using manifest support instead video meta information and dummy chunks (<https://github.com/openvinotoolkit/cvat/pull/2763>)\n\n### Fixed\n\n- More robust execution of nuclio GPU functions by limiting the GPU memory consumption per worker (<https://github.com/openvinotoolkit/cvat/pull/2714>)\n- Kibana startup initialization (<https://github.com/openvinotoolkit/cvat/pull/2659>)\n- The cursor jumps to the end of the line when renaming a task (<https://github.com/openvinotoolkit/cvat/pull/2669>)\n- SSLCertVerificationError when remote source is used (<https://github.com/openvinotoolkit/cvat/pull/2683>)\n- Fixed filters select overflow (<https://github.com/openvinotoolkit/cvat/pull/2614>)\n- Fixed tasks in project auto annotation (<https://github.com/openvinotoolkit/cvat/pull/2725>)\n- Cuboids are missed in annotations statistics (<https://github.com/openvinotoolkit/cvat/pull/2704>)\n- The list of files attached to the task is not displayed (<https://github.com/openvinotoolkit/cvat/pull/2706>)\n- A couple of css-related issues (top bar disappear, wrong arrow position on collapse elements) (<https://github.com/openvinotoolkit/cvat/pull/2736>)\n- Issue with point region doesn't work in Firefox (<https://github.com/openvinotoolkit/cvat/pull/2727>)\n- Fixed cuboid perspective change (<https://github.com/openvinotoolkit/cvat/pull/2733>)\n- Annotation page popups (ai tools, drawing) reset state after detecting, tracking, drawing (<https://github.com/openvinotoolkit/cvat/pull/2780>)\n- Polygon editing using trailing point (<https://github.com/openvinotoolkit/cvat/pull/2808>)\n- Updated the path to python for DL models inside automatic annotation documentation (<https://github.com/openvinotoolkit/cvat/pull/2847>)\n- Fixed of receiving function variable (<https://github.com/openvinotoolkit/cvat/pull/2860>)\n- Shortcuts with CAPSLOCK enabled and with non-US languages activated (<https://github.com/openvinotoolkit/cvat/pull/2872>)\n- Prevented creating several issues for the same object (<https://github.com/openvinotoolkit/cvat/pull/2868>)\n- Fixed label editor name field validator (<https://github.com/openvinotoolkit/cvat/pull/2879>)\n- An error about track shapes outside of the task frames during export (<https://github.com/openvinotoolkit/cvat/pull/2890>)\n- Fixed project search field updating (<https://github.com/openvinotoolkit/cvat/pull/2901>)\n- Fixed export error when invalid polygons are present in overlapping frames (<https://github.com/openvinotoolkit/cvat/pull/2852>)\n- Fixed image quality option for tasks created from images (<https://github.com/openvinotoolkit/cvat/pull/2963>)\n- Incorrect text on the warning when specifying an incorrect link to the issue tracker (<https://github.com/openvinotoolkit/cvat/pull/2971>)\n- Updating label attributes when label contains number attributes (<https://github.com/openvinotoolkit/cvat/pull/2969>)\n- Crop a polygon if its points are outside the bounds of the image (<https://github.com/openvinotoolkit/cvat/pull/3025>)\n\n## \\[1.2.0] - 2021-01-08\n\n### Fixed\n\n- Memory consumption for the task creation process (<https://github.com/openvinotoolkit/cvat/pull/2582>)\n- Frame preloading (<https://github.com/openvinotoolkit/cvat/pull/2608>)\n- Project cannot be removed from the project page (<https://github.com/openvinotoolkit/cvat/pull/2626>)\n\n## \\[1.2.0-beta] - 2020-12-15\n\n### Added\n\n- GPU support and improved documentation for auto annotation (<https://github.com/openvinotoolkit/cvat/pull/2546>)\n- Manual review pipeline: issues/comments/workspace (<https://github.com/openvinotoolkit/cvat/pull/2357>)\n- Basic projects implementation (<https://github.com/openvinotoolkit/cvat/pull/2255>)\n- Documentation on how to mount cloud starage(AWS S3 bucket, Azure container, Google Drive) as FUSE (<https://github.com/openvinotoolkit/cvat/pull/2377>)\n- Ability to work with share files without copying inside (<https://github.com/openvinotoolkit/cvat/pull/2377>)\n- Tooltips in label selectors (<https://github.com/openvinotoolkit/cvat/pull/2509>)\n- Page redirect after login using `next` query parameter (<https://github.com/openvinotoolkit/cvat/pull/2527>)\n- [ImageNet](http://www.image-net.org) format support (<https://github.com/openvinotoolkit/cvat/pull/2376>)\n- [CamVid](http://mi.eng.cam.ac.uk/research/projects/VideoRec/CamVid/) format support (<https://github.com/openvinotoolkit/cvat/pull/2559>)\n\n### Changed\n\n- PATCH requests from cvat-core submit only changed fields (<https://github.com/openvinotoolkit/cvat/pull/2445>)\n- deploy.sh in serverless folder is separated into deploy_cpu.sh and deploy_gpu.sh (<https://github.com/openvinotoolkit/cvat/pull/2546>)\n- Bumped nuclio version to 1.5.8\n- Migrated to Antd 4.9 (<https://github.com/openvinotoolkit/cvat/pull/2536>)\n\n### Fixed\n\n- Fixed FastRCNN inference bug for images with 4 channels i.e. png (<https://github.com/openvinotoolkit/cvat/pull/2546>)\n- Django templates for email and user guide (<https://github.com/openvinotoolkit/cvat/pull/2412>)\n- Saving relative paths in dummy chunks instead of absolute (<https://github.com/openvinotoolkit/cvat/pull/2424>)\n- Objects with a specific label cannot be displayed if at least one tag with the label exist (<https://github.com/openvinotoolkit/cvat/pull/2435>)\n- Wrong attribute can be removed in labels editor (<https://github.com/openvinotoolkit/cvat/pull/2436>)\n- UI fails with the error \"Cannot read property 'label' of undefined\" (<https://github.com/openvinotoolkit/cvat/pull/2442>)\n- Exception: \"Value must be a user instance\" (<https://github.com/openvinotoolkit/cvat/pull/2441>)\n- Reset zoom option doesn't work in tag annotation mode (<https://github.com/openvinotoolkit/cvat/pull/2443>)\n- Canvas is busy error (<https://github.com/openvinotoolkit/cvat/pull/2437>)\n- Projects view layout fix (<https://github.com/openvinotoolkit/cvat/pull/2503>)\n- Fixed the tasks view (infinite loading) when it is impossible to get a preview of the task (<https://github.com/openvinotoolkit/cvat/pull/2504>)\n- Empty frames navigation (<https://github.com/openvinotoolkit/cvat/pull/2505>)\n- TypeError: Cannot read property 'toString' of undefined (<https://github.com/openvinotoolkit/cvat/pull/2517>)\n- Extra shapes are drawn after Esc, or G pressed while drawing a region in grouping (<https://github.com/openvinotoolkit/cvat/pull/2507>)\n- Reset state (reviews, issues) after logout or changing a job (<https://github.com/openvinotoolkit/cvat/pull/2525>)\n- TypeError: Cannot read property 'id' of undefined when updating a task (<https://github.com/openvinotoolkit/cvat/pull/2544>)\n\n## \\[1.2.0-alpha] - 2020-11-09\n\n### Added\n\n- Ability to login into CVAT-UI with token from api/v1/auth/login (<https://github.com/openvinotoolkit/cvat/pull/2234>)\n- Added layout grids toggling ('ctrl + alt + Enter')\n- Added password reset functionality (<https://github.com/opencv/cvat/pull/2058>)\n- Ability to work with data on the fly (<https://github.com/opencv/cvat/pull/2007>)\n- Annotation in process outline color wheel (<https://github.com/opencv/cvat/pull/2084>)\n- On the fly annotation using DL detectors (<https://github.com/opencv/cvat/pull/2102>)\n- Displaying automatic annotation progress on a task view (<https://github.com/opencv/cvat/pull/2148>)\n- Automatic tracking of bounding boxes using serverless functions (<https://github.com/opencv/cvat/pull/2136>)\n- \\[Datumaro] CLI command for dataset equality comparison (<https://github.com/opencv/cvat/pull/1989>)\n- \\[Datumaro] Merging of datasets with different labels (<https://github.com/opencv/cvat/pull/2098>)\n- Add FBRS interactive segmentation serverless function (<https://github.com/openvinotoolkit/cvat/pull/2094>)\n- Ability to change default behaviour of previous/next buttons of a player.\n  It supports regular navigation, searching a frame according to annotations\n  filters and searching the nearest frame without any annotations (<https://github.com/openvinotoolkit/cvat/pull/2221>)\n- MacOS users notes in CONTRIBUTING.md\n- Ability to prepare meta information manually (<https://github.com/openvinotoolkit/cvat/pull/2217>)\n- Ability to upload prepared meta information along with a video when creating a task (<https://github.com/openvinotoolkit/cvat/pull/2217>)\n- Optional chaining plugin for cvat-canvas and cvat-ui (<https://github.com/openvinotoolkit/cvat/pull/2249>)\n- MOTS png mask format support (<https://github.com/openvinotoolkit/cvat/pull/2198>)\n- Ability to correct upload video with a rotation record in the metadata (<https://github.com/openvinotoolkit/cvat/pull/2218>)\n- User search field for assignee fields (<https://github.com/openvinotoolkit/cvat/pull/2370>)\n- Support of mxf videos (<https://github.com/openvinotoolkit/cvat/pull/2514>)\n\n### Changed\n\n- UI models (like DEXTR) were redesigned to be more interactive (<https://github.com/opencv/cvat/pull/2054>)\n- Used Ubuntu:20.04 as a base image for CVAT Dockerfile (<https://github.com/opencv/cvat/pull/2101>)\n- Right colors of label tags in label mapping when a user runs automatic detection (<https://github.com/openvinotoolkit/cvat/pull/2162>)\n- Nuclio became an optional component of CVAT (<https://github.com/openvinotoolkit/cvat/pull/2192>)\n- A key to remove a point from a polyshape (Ctrl => Alt) (<https://github.com/openvinotoolkit/cvat/pull/2204>)\n- Updated `docker-compose` file version from `2.3` to `3.3`(<https://github.com/openvinotoolkit/cvat/pull/2235>)\n- Added auto inference of url schema from host in CLI, if provided (<https://github.com/openvinotoolkit/cvat/pull/2240>)\n- Track frames in skips between annotation is presented in MOT and MOTS formats are marked `outside` (<https://github.com/openvinotoolkit/cvat/pull/2198>)\n- UI packages installation with `npm ci` instead of `npm install` (<https://github.com/openvinotoolkit/cvat/pull/2350>)\n\n### Removed\n\n- Removed Z-Order flag from task creation process\n\n### Fixed\n\n- Fixed multiple errors which arises when polygon is of length 5 or less (<https://github.com/opencv/cvat/pull/2100>)\n- Fixed task creation from PDF (<https://github.com/opencv/cvat/pull/2141>)\n- Fixed CVAT format import for frame stepped tasks (<https://github.com/openvinotoolkit/cvat/pull/2151>)\n- Fixed the reading problem with large PDFs (<https://github.com/openvinotoolkit/cvat/pull/2154>)\n- Fixed unnecessary pyhash dependency (<https://github.com/openvinotoolkit/cvat/pull/2170>)\n- Fixed Data is not getting cleared, even after deleting the Task from Django Admin App(<https://github.com/openvinotoolkit/cvat/issues/1925>)\n- Fixed blinking message: \"Some tasks have not been showed because they do not have any data\" (<https://github.com/openvinotoolkit/cvat/pull/2200>)\n- Fixed case when a task with 0 jobs is shown as \"Completed\" in UI (<https://github.com/openvinotoolkit/cvat/pull/2200>)\n- Fixed use case when UI throws exception: Cannot read property 'objectType' of undefined #2053 (<https://github.com/openvinotoolkit/cvat/pull/2203>)\n- Fixed use case when logs could be saved twice or more times #2202 (<https://github.com/openvinotoolkit/cvat/pull/2203>)\n- Fixed issues from #2112 (<https://github.com/openvinotoolkit/cvat/pull/2217>)\n- Git application name (renamed to dataset_repo) (<https://github.com/openvinotoolkit/cvat/pull/2243>)\n- A problem in exporting of tracks, where tracks could be truncated (<https://github.com/openvinotoolkit/cvat/issues/2129>)\n- Fixed CVAT startup process if the user has `umask 077` in .bashrc file (<https://github.com/openvinotoolkit/cvat/pull/2293>)\n- Exception: Cannot read property \"each\" of undefined after drawing a single point (<https://github.com/openvinotoolkit/cvat/pull/2307>)\n- Cannot read property 'label' of undefined (Fixed?) (<https://github.com/openvinotoolkit/cvat/pull/2311>)\n- Excluded track frames marked `outside` in `CVAT for Images` export (<https://github.com/openvinotoolkit/cvat/pull/2345>)\n- 'List of tasks' Kibana visualization (<https://github.com/openvinotoolkit/cvat/pull/2361>)\n- An error on exporting not `jpg` or `png` images in TF Detection API format (<https://github.com/openvinotoolkit/datumaro/issues/35>)\n\n## \\[1.1.0] - 2020-08-31\n\n### Added\n\n- Siammask tracker as DL serverless function (<https://github.com/opencv/cvat/pull/1988>)\n- \\[Datumaro] Added model info and source info commands (<https://github.com/opencv/cvat/pull/1973>)\n- \\[Datumaro] Dataset statistics (<https://github.com/opencv/cvat/pull/1668>)\n- Ability to change label color in tasks and predefined labels (<https://github.com/opencv/cvat/pull/2014>)\n- \\[Datumaro] Multi-dataset merge (<https://github.com/opencv/cvat/pull/1695>)\n- Ability to configure email verification for new users (<https://github.com/opencv/cvat/pull/1929>)\n- Link to django admin page from UI (<https://github.com/opencv/cvat/pull/2068>)\n- Notification message when users use wrong browser (<https://github.com/opencv/cvat/pull/2070>)\n\n### Changed\n\n- Shape coordinates are rounded to 2 digits in dumped annotations (<https://github.com/opencv/cvat/pull/1970>)\n- COCO format does not produce polygon points for bbox annotations (<https://github.com/opencv/cvat/pull/1953>)\n\n### Fixed\n\n- Issue loading openvino models for semi-automatic and automatic annotation (<https://github.com/opencv/cvat/pull/1996>)\n- Basic functions of CVAT works without activated nuclio dashboard\n- Fixed a case in which exported masks could have wrong color order (<https://github.com/opencv/cvat/issues/2032>)\n- Fixed error with creating task with labels with the same name (<https://github.com/opencv/cvat/pull/2031>)\n- Django RQ dashboard view (<https://github.com/opencv/cvat/pull/2069>)\n- Object's details menu settings (<https://github.com/opencv/cvat/pull/2084>)\n\n## \\[1.1.0-beta] - 2020-08-03\n\n### Added\n\n- DL models as serverless functions (<https://github.com/opencv/cvat/pull/1767>)\n- Source type support for tags, shapes and tracks (<https://github.com/opencv/cvat/pull/1192>)\n- Source type support for CVAT Dumper/Loader (<https://github.com/opencv/cvat/pull/1192>)\n- Intelligent polygon editing (<https://github.com/opencv/cvat/pull/1921>)\n- Support creating multiple jobs for each task through python cli (<https://github.com/opencv/cvat/pull/1950>)\n- python cli over https (<https://github.com/opencv/cvat/pull/1942>)\n- Error message when plugins weren't able to initialize instead of infinite loading (<https://github.com/opencv/cvat/pull/1966>)\n- Ability to change user password (<https://github.com/opencv/cvat/pull/1954>)\n\n### Changed\n\n- Smaller object details (<https://github.com/opencv/cvat/pull/1877>)\n- `COCO` format does not convert bboxes to polygons on export (<https://github.com/opencv/cvat/pull/1953>)\n- It is impossible to submit a DL model in OpenVINO format using UI.\n  Now you can deploy new models on the server using serverless functions\n  (<https://github.com/opencv/cvat/pull/1767>)\n- Files and folders under share path are now alphabetically sorted\n\n### Removed\n\n- Removed OpenVINO and CUDA components because they are not necessary anymore (<https://github.com/opencv/cvat/pull/1767>)\n- Removed the old UI code (<https://github.com/opencv/cvat/pull/1964>)\n\n### Fixed\n\n- Some objects aren't shown on canvas sometimes. For example after propagation on of objects is invisible (<https://github.com/opencv/cvat/pull/1834>)\n- CVAT doesn't offer to restore state after an error (<https://github.com/opencv/cvat/pull/1874>)\n- Cannot read property 'shapeType' of undefined because of zOrder related issues (<https://github.com/opencv/cvat/pull/1874>)\n- Cannot read property 'pinned' of undefined because of zOrder related issues (<https://github.com/opencv/cvat/pull/1874>)\n- Do not iterate over hidden objects in aam (which are invisible because of zOrder) (<https://github.com/opencv/cvat/pull/1874>)\n- Cursor position is reset after changing a text field (<https://github.com/opencv/cvat/pull/1874>)\n- Hidden points and cuboids can be selected to be grouped (<https://github.com/opencv/cvat/pull/1874>)\n- `outside` annotations should not be in exported images (<https://github.com/opencv/cvat/issues/1620>)\n- `CVAT for video format` import error with interpolation (<https://github.com/opencv/cvat/issues/1893>)\n- `Image compression` definition mismatch (<https://github.com/opencv/cvat/issues/1900>)\n- Points are duplicated during polygon interpolation sometimes (<https://github.com/opencv/cvat/pull/1892>)\n- When redraw a shape with activated autobordering, previous points are visible (<https://github.com/opencv/cvat/pull/1892>)\n- No mapping between side object element and context menu in some attributes (<https://github.com/opencv/cvat/pull/1923>)\n- Interpolated shapes exported as `keyframe = True` (<https://github.com/opencv/cvat/pull/1937>)\n- Stylelint filetype scans (<https://github.com/opencv/cvat/pull/1952>)\n- Fixed toolip closing issue (<https://github.com/opencv/cvat/pull/1955>)\n- Clearing frame cache when close a task (<https://github.com/opencv/cvat/pull/1966>)\n- Increase rate of throttling policy for unauthenticated users (<https://github.com/opencv/cvat/pull/1969>)\n\n## \\[1.1.0-alpha] - 2020-06-30\n\n### Added\n\n- Throttling policy for unauthenticated users (<https://github.com/opencv/cvat/pull/1531>)\n- Added default label color table for mask export (<https://github.com/opencv/cvat/pull/1549>)\n- Added environment variables for Redis and Postgres hosts for Kubernetes deployment support (<https://github.com/opencv/cvat/pull/1641>)\n- Added visual identification for unavailable formats (<https://github.com/opencv/cvat/pull/1567>)\n- Shortcut to change color of an activated shape in new UI (Enter) (<https://github.com/opencv/cvat/pull/1683>)\n- Shortcut to switch split mode (<https://github.com/opencv/cvat/pull/1683>)\n- Built-in search for labels when create an object or change a label (<https://github.com/opencv/cvat/pull/1683>)\n- Better validation of labels and attributes in raw viewer (<https://github.com/opencv/cvat/pull/1727>)\n- ClamAV antivirus integration (<https://github.com/opencv/cvat/pull/1712>)\n- Added canvas background color selector (<https://github.com/opencv/cvat/pull/1705>)\n- SCSS files linting with Stylelint tool (<https://github.com/opencv/cvat/pull/1766>)\n- Supported import and export or single boxes in MOT format (<https://github.com/opencv/cvat/pull/1764>)\n- \\[Datumaro] Added `stats` command, which shows some dataset statistics\n  like image mean and std (<https://github.com/opencv/cvat/pull/1734>)\n- Add option to upload annotations upon task creation on CLI\n- Polygon and polylines interpolation (<https://github.com/opencv/cvat/pull/1571>)\n- Ability to redraw shape from scratch (Shift + N) for an activated shape (<https://github.com/opencv/cvat/pull/1571>)\n- Highlights for the first point of a polygon/polyline and direction (<https://github.com/opencv/cvat/pull/1571>)\n- Ability to change orientation for poylgons/polylines in context menu (<https://github.com/opencv/cvat/pull/1571>)\n- Ability to set the first point for polygons in points context menu (<https://github.com/opencv/cvat/pull/1571>)\n- Added new tag annotation workspace (<https://github.com/opencv/cvat/pull/1570>)\n- Appearance block in attribute annotation mode (<https://github.com/opencv/cvat/pull/1820>)\n- Keyframe navigations and some switchers in attribute annotation mode (<https://github.com/opencv/cvat/pull/1820>)\n- \\[Datumaro] Added `convert` command to convert datasets directly (<https://github.com/opencv/cvat/pull/1837>)\n- \\[Datumaro] Added an option to specify image extension when exporting datasets (<https://github.com/opencv/cvat/pull/1799>)\n- \\[Datumaro] Added image copying when exporting datasets, if possible (<https://github.com/opencv/cvat/pull/1799>)\n\n### Changed\n\n- Removed information about e-mail from the basic user information (<https://github.com/opencv/cvat/pull/1627>)\n- Update https install manual. Makes it easier and more robust.\n  Includes automatic renewing of lets encrypt certificates.\n- Settings page move to the modal. (<https://github.com/opencv/cvat/pull/1705>)\n- Implemented import and export of annotations with relative image paths (<https://github.com/opencv/cvat/pull/1463>)\n- Using only single click to start editing or remove a point (<https://github.com/opencv/cvat/pull/1571>)\n- Added support for attributes in VOC XML format (<https://github.com/opencv/cvat/pull/1792>)\n- Added annotation attributes in COCO format (<https://github.com/opencv/cvat/pull/1782>)\n- Colorized object items in the side panel (<https://github.com/opencv/cvat/pull/1753>)\n- \\[Datumaro] Annotation-less files are not generated anymore in COCO format, unless tasks explicitly requested (<https://github.com/opencv/cvat/pull/1799>)\n\n### Fixed\n\n- Problem with exported frame stepped image task (<https://github.com/opencv/cvat/issues/1613>)\n- Fixed dataset filter item representation for imageless dataset items (<https://github.com/opencv/cvat/pull/1593>)\n- Fixed interpreter crash when trying to import `tensorflow` with no AVX instructions available (<https://github.com/opencv/cvat/pull/1567>)\n- Kibana wrong working time calculation with new annotation UI use (<https://github.com/opencv/cvat/pull/1654>)\n- Wrong rexex for account name validation (<https://github.com/opencv/cvat/pull/1667>)\n- Wrong description on register view for the username field (<https://github.com/opencv/cvat/pull/1667>)\n- Wrong resolution for resizing a shape (<https://github.com/opencv/cvat/pull/1667>)\n- React warning because of not unique keys in labels viewer (<https://github.com/opencv/cvat/pull/1727>)\n- Fixed issue tracker (<https://github.com/opencv/cvat/pull/1705>)\n- Fixed canvas fit after sidebar open/close event (<https://github.com/opencv/cvat/pull/1705>)\n- A couple of exceptions in AAM related with early object activation (<https://github.com/opencv/cvat/pull/1755>)\n- Propagation from the latest frame (<https://github.com/opencv/cvat/pull/1800>)\n- Number attribute value validation (didn't work well with floats) (<https://github.com/opencv/cvat/pull/1800>)\n- Logout doesn't work (<https://github.com/opencv/cvat/pull/1812>)\n- Annotations aren't updated after reopening a task (<https://github.com/opencv/cvat/pull/1753>)\n- Labels aren't updated after reopening a task (<https://github.com/opencv/cvat/pull/1753>)\n- Canvas isn't fitted after collapsing side panel in attribute annotation mode (<https://github.com/opencv/cvat/pull/1753>)\n- Error when interpolating polygons (<https://github.com/opencv/cvat/pull/1878>)\n\n### Security\n\n- SQL injection in Django `CVE-2020-9402` (<https://github.com/opencv/cvat/pull/1657>)\n\n## \\[1.0.0] - 2020-05-29\n\n### Added\n\n- cvat-ui: cookie policy drawer for login page (<https://github.com/opencv/cvat/pull/1511>)\n- `datumaro_project` export format (<https://github.com/opencv/cvat/pull/1352>)\n- Ability to configure user agreements for the user registration form (<https://github.com/opencv/cvat/pull/1464>)\n- Cuboid interpolation and cuboid drawing from rectangles (<https://github.com/opencv/cvat/pull/1560>)\n- Ability to configure custom pageViewHit, which can be useful for web analytics integration (<https://github.com/opencv/cvat/pull/1566>)\n- Ability to configure access to the analytics page based on roles (<https://github.com/opencv/cvat/pull/1592>)\n\n### Changed\n\n- Downloaded file name in annotations export became more informative (<https://github.com/opencv/cvat/pull/1352>)\n- Added auto trimming for trailing whitespaces style enforcement (<https://github.com/opencv/cvat/pull/1352>)\n- REST API: updated `GET /task/<id>/annotations`: parameters are `format`, `filename`\n  (now optional), `action` (optional) (<https://github.com/opencv/cvat/pull/1352>)\n- REST API: removed `dataset/formats`, changed format of `annotation/formats` (<https://github.com/opencv/cvat/pull/1352>)\n- Exported annotations are stored for N hours instead of indefinitely (<https://github.com/opencv/cvat/pull/1352>)\n- Formats: CVAT format now accepts ZIP and XML (<https://github.com/opencv/cvat/pull/1352>)\n- Formats: COCO format now accepts ZIP and JSON (<https://github.com/opencv/cvat/pull/1352>)\n- Formats: most of formats renamed, no extension in title (<https://github.com/opencv/cvat/pull/1352>)\n- Formats: definitions are changed, are not stored in DB anymore (<https://github.com/opencv/cvat/pull/1352>)\n- cvat-core: session.annotations.put() now returns ids of added objects (<https://github.com/opencv/cvat/pull/1493>)\n- Images without annotations now also included in dataset/annotations export (<https://github.com/opencv/cvat/issues/525>)\n\n### Removed\n\n- `annotation` application is replaced with `dataset_manager` (<https://github.com/opencv/cvat/pull/1352>)\n- `_DATUMARO_INIT_LOGLEVEL` env. variable is removed in favor of regular `--loglevel` cli parameter (<https://github.com/opencv/cvat/pull/1583>)\n\n### Fixed\n\n- Categories for empty projects with no sources are taken from own dataset (<https://github.com/opencv/cvat/pull/1352>)\n- Added directory removal on error during `extract` command (<https://github.com/opencv/cvat/pull/1352>)\n- Added debug error message on incorrect XPath (<https://github.com/opencv/cvat/pull/1352>)\n- Exporting frame stepped task\n  (<https://github.com/opencv/cvat/issues/1294>, <https://github.com/opencv/cvat/issues/1334>)\n- Fixed broken command line interface for `cvat` export format in Datumaro (<https://github.com/opencv/cvat/issues/1494>)\n- Updated Rest API document, Swagger document serving instruction issue (<https://github.com/opencv/cvat/issues/1495>)\n- Fixed cuboid occluded view (<https://github.com/opencv/cvat/pull/1500>)\n- Non-informative lock icon (<https://github.com/opencv/cvat/pull/1434>)\n- Sidebar in AAM has no hide/show button (<https://github.com/opencv/cvat/pull/1420>)\n- Task/Job buttons has no \"Open in new tab\" option (<https://github.com/opencv/cvat/pull/1419>)\n- Delete point context menu option has no shortcut hint (<https://github.com/opencv/cvat/pull/1416>)\n- Fixed issue with unnecessary tag activation in cvat-canvas (<https://github.com/opencv/cvat/issues/1540>)\n- Fixed an issue with large number of instances in instance mask (<https://github.com/opencv/cvat/issues/1539>)\n- Fixed full COCO dataset import error with conflicting labels in keypoints and detection (<https://github.com/opencv/cvat/pull/1548>)\n- Fixed COCO keypoints skeleton parsing and saving (<https://github.com/opencv/cvat/issues/1539>)\n- `tf.placeholder() is not compatible with eager execution` exception for auto_segmentation (<https://github.com/opencv/cvat/pull/1562>)\n- Canvas cannot be moved with move functionality on left mouse key (<https://github.com/opencv/cvat/pull/1573>)\n- Deep extreme cut request is sent when draw any shape with Make AI polygon option enabled (<https://github.com/opencv/cvat/pull/1573>)\n- Fixed an error when exporting a task with cuboids to any format except CVAT (<https://github.com/opencv/cvat/pull/1577>)\n- Synchronization with remote git repo (<https://github.com/opencv/cvat/pull/1582>)\n- A problem with mask to polygons conversion when polygons are too small (<https://github.com/opencv/cvat/pull/1581>)\n- Unable to upload video with uneven size (<https://github.com/opencv/cvat/pull/1594>)\n- Fixed an issue with `z_order` having no effect on segmentations (<https://github.com/opencv/cvat/pull/1589>)\n\n### Security\n\n- Permission group whitelist check for analytics view (<https://github.com/opencv/cvat/pull/1608>)\n\n## \\[1.0.0-beta.2] - 2020-04-30\n\n### Added\n\n- Re-Identification algorithm to merging bounding boxes automatically to the new UI (<https://github.com/opencv/cvat/pull/1406>)\n- Methods `import` and `export` to import/export raw annotations for Job and Task in `cvat-core` (<https://github.com/opencv/cvat/pull/1406>)\n- Versioning of client packages (`cvat-core`, `cvat-canvas`, `cvat-ui`). Initial versions are set to 1.0.0 (<https://github.com/opencv/cvat/pull/1448>)\n- Cuboids feature was migrated from old UI to new one. (<https://github.com/opencv/cvat/pull/1451>)\n\n### Removed\n\n- Annotation conversion utils, currently supported natively via Datumaro framework\n  (<https://github.com/opencv/cvat/pull/1477>)\n\n### Fixed\n\n- Auto annotation, TF annotation and Auto segmentation apps (<https://github.com/opencv/cvat/pull/1409>)\n- Import works with truncated images now: \"OSError:broken data stream\" on corrupt images\n  (<https://github.com/opencv/cvat/pull/1430>)\n- Hide functionality (H) doesn't work (<https://github.com/opencv/cvat/pull/1445>)\n- The highlighted attribute doesn't correspond to the chosen attribute in AAM (<https://github.com/opencv/cvat/pull/1445>)\n- Inconvinient image shaking while drawing a polygon (hold Alt key during drawing/editing/grouping to drag an image) (<https://github.com/opencv/cvat/pull/1445>)\n- Filter property \"shape\" doesn't work and extra operator in description (<https://github.com/opencv/cvat/pull/1445>)\n- Block of text information doesn't disappear after deactivating for locked shapes (<https://github.com/opencv/cvat/pull/1445>)\n- Annotation uploading fails in annotation view (<https://github.com/opencv/cvat/pull/1445>)\n- UI freezes after canceling pasting with escape (<https://github.com/opencv/cvat/pull/1445>)\n- Duplicating keypoints in COCO export (<https://github.com/opencv/cvat/pull/1435>)\n- CVAT new UI: add arrows on a mouse cursor (<https://github.com/opencv/cvat/pull/1391>)\n- Delete point bug (in new UI) (<https://github.com/opencv/cvat/pull/1440>)\n- Fix apache startup after PC restart (<https://github.com/opencv/cvat/pull/1467>)\n- Open task button doesn't work (<https://github.com/opencv/cvat/pull/1474>)\n\n## \\[1.0.0-beta.1] - 2020-04-15\n\n### Added\n\n- Special behaviour for attribute value `__undefined__` (invisibility, no shortcuts to be set in AAM)\n- Dialog window with some helpful information about using filters\n- Ability to display a bitmap in the new UI\n- Button to reset colors settings (brightness, saturation, contrast) in the new UI\n- Option to display shape text always\n- Dedicated message with clarifications when share is unmounted (<https://github.com/opencv/cvat/pull/1373>)\n- Ability to create one tracked point (<https://github.com/opencv/cvat/pull/1383>)\n- Ability to draw/edit polygons and polylines with automatic bordering feature\n  (<https://github.com/opencv/cvat/pull/1394>)\n- Tutorial: instructions for CVAT over HTTPS\n- Deep extreme cut (semi-automatic segmentation) to the new UI (<https://github.com/opencv/cvat/pull/1398>)\n\n### Changed\n\n- Increase preview size of a task till 256, 256 on the server\n- Public ssh-keys are displayed in a dedicated window instead of console when create a task with a repository\n- React UI is the primary UI\n\n### Fixed\n\n- Cleaned up memory in Auto Annotation to enable long running tasks on videos\n- New shape is added when press `esc` when drawing instead of cancellation\n- Dextr segmentation doesn't work.\n- `FileNotFoundError` during dump after moving format files\n- CVAT doesn't append outside shapes when merge polyshapes in old UI\n- Layout sometimes shows double scroll bars on create task, dashboard and settings pages\n- UI fails after trying to change frame during resizing, dragging, editing\n- Hidden points (or outsided) are visible after changing a frame\n- Merge is allowed for points, but clicks on points conflict with frame dragging logic\n- Removed objects are visible for search\n- Add missed task_id and job_id fields into exception logs for the new UI (<https://github.com/opencv/cvat/pull/1372>)\n- UI fails when annotations saving occurs during drag/resize/edit (<https://github.com/opencv/cvat/pull/1383>)\n- Multiple savings when hold Ctrl+S (a lot of the same copies of events were sent with the same working time)\n  (<https://github.com/opencv/cvat/pull/1383>)\n- UI doesn't have any reaction when git repos synchronization failed (<https://github.com/opencv/cvat/pull/1383>)\n- Bug when annotations cannot be saved after (delete - save - undo - save) (<https://github.com/opencv/cvat/pull/1383>)\n- VOC format exports Upper case labels correctly in lower case (<https://github.com/opencv/cvat/pull/1379>)\n- Fixed polygon exporting bug in COCO dataset (<https://github.com/opencv/cvat/issues/1387>)\n- Task creation from remote files (<https://github.com/opencv/cvat/pull/1392>)\n- Job cannot be opened in some cases when the previous job was failed during opening\n  (<https://github.com/opencv/cvat/issues/1403>)\n- Deactivated shape is still highlighted on the canvas (<https://github.com/opencv/cvat/issues/1403>)\n- AttributeError: 'tuple' object has no attribute 'read' in ReID algorithm (<https://github.com/opencv/cvat/issues/1403>)\n- Wrong semi-automatic segmentation near edges of an image (<https://github.com/opencv/cvat/issues/1403>)\n- Git repos paths (<https://github.com/opencv/cvat/pull/1400>)\n- Uploading annotations for tasks with multiple jobs (<https://github.com/opencv/cvat/pull/1396>)\n\n## \\[1.0.0-alpha] - 2020-03-31\n\n### Added\n\n- Data streaming using chunks (<https://github.com/opencv/cvat/pull/1007>)\n- New UI: showing file names in UI (<https://github.com/opencv/cvat/pull/1311>)\n- New UI: delete a point from context menu (<https://github.com/opencv/cvat/pull/1292>)\n\n### Fixed\n\n- Git app cannot clone a repository (<https://github.com/opencv/cvat/pull/1330>)\n- New UI: preview position in task details (<https://github.com/opencv/cvat/pull/1312>)\n- AWS deployment (<https://github.com/opencv/cvat/pull/1316>)\n\n## \\[0.6.1] - 2020-03-21\n\n### Changed\n\n- VOC task export now does not use official label map by default, but takes one\n  from the source task to avoid primary-class and class part name\n  clashing ([#1275](https://github.com/opencv/cvat/issues/1275))\n\n### Fixed\n\n- File names in LabelMe format export are no longer truncated ([#1259](https://github.com/opencv/cvat/issues/1259))\n- `occluded` and `z_order` annotation attributes are now correctly passed to Datumaro ([#1271](https://github.com/opencv/cvat/pull/1271))\n- Annotation-less tasks now can be exported as empty datasets in COCO ([#1277](https://github.com/opencv/cvat/issues/1277))\n- Frame name matching for video annotations import -\n  allowed `frame_XXXXXX[.ext]` format ([#1274](https://github.com/opencv/cvat/pull/1274))\n\n### Security\n\n- Bump acorn from 6.3.0 to 6.4.1 in /cvat-ui ([#1270](https://github.com/opencv/cvat/pull/1270))\n\n## \\[0.6.0] - 2020-03-15\n\n### Added\n\n- Server only support for projects. Extend REST API v1 (/api/v1/projects\\*)\n- Ability to get basic information about users without admin permissions ([#750](https://github.com/opencv/cvat/issues/750))\n- Changed REST API: removed PUT and added DELETE methods for /api/v1/users/ID\n- Mask-RCNN Auto Annotation Script in OpenVINO format\n- Yolo Auto Annotation Script\n- Auto segmentation using Mask_RCNN component (Keras+Tensorflow Mask R-CNN Segmentation)\n- REST API to export an annotation task (images + annotations)\n  [Datumaro](https://github.com/opencv/cvat/tree/develop/datumaro) -\n  a framework to build, analyze, debug and visualize datasets\n- Text Detection Auto Annotation Script in OpenVINO format for version 4\n- Added in OpenVINO Semantic Segmentation for roads\n- Ability to visualize labels when using Auto Annotation runner\n- MOT CSV format support ([#830](https://github.com/opencv/cvat/pull/830))\n- LabelMe format support ([#844](https://github.com/opencv/cvat/pull/844))\n- Segmentation MASK format import (as polygons) ([#1163](https://github.com/opencv/cvat/pull/1163))\n- Git repositories can be specified with IPv4 address ([#827](https://github.com/opencv/cvat/pull/827))\n\n### Changed\n\n- page_size parameter for all REST API methods\n- React & Redux & Antd based dashboard\n- Yolov3 interpretation script fix and changes to mapping.json\n- YOLO format support ([#1151](https://github.com/opencv/cvat/pull/1151))\n- Added support for OpenVINO 2020\n\n### Fixed\n\n- Exception in Git plugin [#826](https://github.com/opencv/cvat/issues/826)\n- Label ids in TFrecord format now start from 1 [#866](https://github.com/opencv/cvat/issues/866)\n- Mask problem in COCO JSON style [#718](https://github.com/opencv/cvat/issues/718)\n- Datasets (or tasks) can be joined and split to subsets with Datumaro [#791](https://github.com/opencv/cvat/issues/791)\n- Output labels for VOC format can be specified with Datumaro [#942](https://github.com/opencv/cvat/issues/942)\n- Annotations can be filtered before dumping with Datumaro [#994](https://github.com/opencv/cvat/issues/994)\n\n## \\[0.5.2] - 2019-12-15\n\n### Fixed\n\n- Frozen version of scikit-image==0.15 in requirements.txt because next releases don't support Python 3.5\n\n## \\[0.5.1] - 2019-10-17\n\n### Added\n\n- Integration with Zenodo.org (DOI)\n\n## \\[0.5.0] - 2019-09-12\n\n### Added\n\n- A converter to YOLO format\n- Installation guide\n- Linear interpolation for a single point\n- Video frame filter\n- Running functional tests for REST API during a build\n- Admins are no longer limited to a subset of python commands in the auto annotation application\n- Remote data source (list of URLs to create an annotation task)\n- Auto annotation using Faster R-CNN with Inception v2 (utils/open_model_zoo)\n- Auto annotation using Pixel Link mobilenet v2 - text detection (utils/open_model_zoo)\n- Ability to create a custom extractors for unsupported media types\n- Added in PDF extractor\n- Added in a command line model manager tester\n- Ability to dump/load annotations in several formats from UI (CVAT, Pascal VOC, YOLO, MS COCO, png mask, TFRecord)\n- Auth for REST API (api/v1/auth/): login, logout, register, ...\n- Preview for the new CVAT UI (dashboard only) is available: <http://localhost:9080/>\n- Added command line tool for performing common task operations (/utils/cli/)\n\n### Changed\n\n- Outside and keyframe buttons in the side panel for all interpolation shapes (they were only for boxes before)\n- Improved error messages on the client side (#511)\n\n### Removed\n\n- \"Flip images\" has been removed. UI now contains rotation features.\n\n### Fixed\n\n- Incorrect width of shapes borders in some cases\n- Annotation parser for tracks with a start frame less than the first segment frame\n- Interpolation on the server near outside frames\n- Dump for case when task name has a slash\n- Auto annotation fail for multijob tasks\n- Installation of CVAT with OpenVINO on the Windows platform\n- Background color was always black in utils/mask/converter.py\n- Exception in attribute annotation mode when a label are switched to a value without any attributes\n- Handling of wrong labelamp json file in auto annotation (<https://github.com/opencv/cvat/issues/554>)\n- No default attributes in dumped annotation (<https://github.com/opencv/cvat/issues/601>)\n- Required field \"Frame Filter\" on admin page during a task modifying (#666)\n- Dump annotation errors for a task with several segments (#610, #500)\n- Invalid label parsing during a task creating (#628)\n- Button \"Open Task\" in the annotation view\n- Creating a video task with 0 overlap\n\n### Security\n\n- Upgraded Django, djangorestframework, and other packages\n\n## \\[0.4.2] - 2019-06-03\n\n### Fixed\n\n- Fixed interaction with the server share in the auto annotation plugin\n\n## \\[0.4.1] - 2019-05-14\n\n### Fixed\n\n- JavaScript syntax incompatibility with Google Chrome versions less than 72\n\n## \\[0.4.0] - 2019-05-04\n\n### Added\n\n- OpenVINO auto annotation: it is possible to upload a custom model and annotate images automatically.\n- Ability to rotate images/video in the client part (Ctrl+R, Shift+Ctrl+R shortcuts) (#305)\n- The ReID application for automatic bounding box merging has been added (#299)\n- Keyboard shortcuts to switch next/previous default shape type (box, polygon etc) (Alt + <, Alt + >) (#316)\n- Converter for VOC now supports interpolation tracks\n- REST API (/api/v1/\\*, /api/docs)\n- Semi-automatic semantic segmentation with the [Deep Extreme Cut](http://www.vision.ee.ethz.ch/~cvlsegmentation/dextr/) work\n\n### Changed\n\n- Propagation setup has been moved from settings to bottom player panel\n- Additional events like \"Debug Info\" or \"Fit Image\" have been added for analitics\n- Optional using LFS for git annotation storages (#314)\n\n### Deprecated\n\n- \"Flip images\" flag in the create task dialog will be removed.\n  Rotation functionality in client part have been added instead.\n\n### Fixed\n\n- Django 2.1.5 (security fix, [CVE-2019-3498](https://nvd.nist.gov/vuln/detail/CVE-2019-3498))\n- Several scenarious which cause code 400 after undo/redo/save have been fixed (#315)\n\n## \\[0.3.0] - 2018-12-29\n\n### Added\n\n- Ability to copy Object URL and Frame URL via object context menu and player context menu respectively.\n- Ability to change opacity for selected shape with help \"Selected Fill Opacity\" slider.\n- Ability to remove polyshapes points by double click.\n- Ability to draw/change polyshapes (except for points) by slip method. Just press ENTER and moving a cursor.\n- Ability to switch lock/hide properties via label UI element (in right menu) for all objects with same label.\n- Shortcuts for outside/keyframe properties\n- Support of Intel OpenVINO for accelerated model inference\n- Tensorflow annotation now works without CUDA. It can use CPU only. OpenVINO and CUDA are supported optionally.\n- Incremental saving of annotations.\n- Tutorial for using polygons (screencast)\n- Silk profiler to improve development process\n- Admin panel can be used to edit labels and attributes for annotation tasks\n- Analytics component to manage a data annotation team, monitor exceptions, collect client and server logs\n- Changeable job and task statuses (annotation, validation, completed).\n  A job status can be changed manually, a task status is computed automatically based on job statuses (#153)\n- Backlink to a task from its job annotation view (#156)\n- Buttons lock/hide for labels. They work for all objects with the same label on a current frame (#116)\n\n### Changed\n\n- Polyshape editing method has been improved. You can redraw part of shape instead of points cloning.\n- Unified shortcut (Esc) for close any mode instead of different shortcuts (Alt+N, Alt+G, Alt+M etc.).\n- Dump file contains information about data source (e.g. video name, archive name, ...)\n- Update requests library due to [CVE-2018-18074](https://nvd.nist.gov/vuln/detail/CVE-2018-18074)\n- Per task/job permissions to create/access/change/delete tasks and annotations\n- Documentation was improved\n- Timeout for creating tasks was increased (from 1h to 4h) (#136)\n- Drawing has become more convenience. Now it is possible to draw outside an image.\n  Shapes will be automatically truncated after drawing process (#202)\n\n### Fixed\n\n- Performance bottleneck has been fixed during you create new objects (draw, copy, merge etc).\n- Label UI elements aren't updated after changelabel.\n- Attribute annotation mode can use invalid shape position after resize or move shapes.\n- Labels order is preserved now (#242)\n- Uploading large XML files (#123)\n- Django vulnerability (#121)\n- Grammatical cleanup of README.md (#107)\n- Dashboard loading has been accelerated (#156)\n- Text drawing outside of a frame in some cases (#202)\n\n## \\[0.2.0] - 2018-09-28\n\n### Added\n\n- New annotation shapes: polygons, polylines, points\n- Undo/redo feature\n- Grid to estimate size of objects\n- Context menu for shapes\n- A converter to PASCAL VOC format\n- A converter to MS COCO format\n- A converter to mask format\n- License header for most of all files\n- .gitattribute to avoid problems with bash scripts inside a container\n- CHANGELOG.md itself\n- Drawing size of a bounding box during resize\n- Color by instance, group, label\n- Group objects\n- Object propagation on next frames\n- Full screen view\n\n### Changed\n\n- Documentation, screencasts, the primary screenshot\n- Content-type for save_job request is application/json\n\n### Fixed\n\n- Player navigation if the browser's window is scrolled\n- Filter doesn't support dash (-)\n- Several memory leaks\n- Inconsistent extensions between filenames in an annotation file and real filenames\n\n## \\[0.1.2] - 2018-08-07\n\n### Added\n\n- 7z archive support when creating a task\n- .vscode/launch.json file for developing with VS code\n\n### Fixed\n\n- #14: docker-compose down command as written in the readme does not remove volumes\n- #15: all checkboxes in temporary attributes are checked when reopening job after saving the job\n- #18: extend CONTRIBUTING.md\n- #19: using the same attribute for label twice -> stuck\n\n### Changed\n\n- More strict verification for labels with attributes\n\n## \\[0.1.1] - 2018-07-6\n\n### Added\n\n- Links on a screenshot, documentation, screencasts into README.md\n- CONTRIBUTORS.md\n\n### Fixed\n\n- GitHub documentation\n\n## \\[0.1.0] - 2018-06-29\n\n### Added\n\n- Initial version\n\n## Template\n\n```\n## \\[Unreleased]\n### Added\n- TDB\n\n### Changed\n- TDB\n\n### Deprecated\n- TDB\n\n### Removed\n- TDB\n\n### Fixed\n- TDB\n\n### Security\n- TDB\n```\n", "\n# Copyright (C) 2018-2022 Intel Corporation\n#\n# SPDX-License-Identifier: MIT\n\nimport itertools\nimport os\nimport sys\nfrom rest_framework.serializers import ValidationError\nimport rq\nimport re\nimport shutil\nfrom distutils.dir_util import copy_tree\nfrom traceback import print_exception\nfrom urllib import parse as urlparse\nfrom urllib import request as urlrequest\nimport requests\nimport ipaddress\nimport dns.resolver\nimport django_rq\n\nfrom django.conf import settings\nfrom django.db import transaction\n\nfrom cvat.apps.engine import models\nfrom cvat.apps.engine.log import slogger\nfrom cvat.apps.engine.media_extractors import (MEDIA_TYPES, Mpeg4ChunkWriter, Mpeg4CompressedChunkWriter,\n    ValidateDimension, ZipChunkWriter, ZipCompressedChunkWriter, get_mime, sort)\nfrom cvat.apps.engine.utils import av_scan_paths\nfrom utils.dataset_manifest import ImageManifestManager, VideoManifestManager, is_manifest\nfrom utils.dataset_manifest.core import VideoManifestValidator\nfrom utils.dataset_manifest.utils import detect_related_images\nfrom .cloud_provider import get_cloud_storage_instance, Credentials\n\n############################# Low Level server API\n\ndef create(tid, data):\n    \"\"\"Schedule the task\"\"\"\n    q = django_rq.get_queue('default')\n    q.enqueue_call(func=_create_thread, args=(tid, data),\n        job_id=\"/api/tasks/{}\".format(tid))\n\n@transaction.atomic\ndef rq_handler(job, exc_type, exc_value, traceback):\n    split = job.id.split('/')\n    tid = split[split.index('tasks') + 1]\n    try:\n        tid = int(tid)\n        db_task = models.Task.objects.select_for_update().get(pk=tid)\n        with open(db_task.get_log_path(), \"wt\") as log_file:\n            print_exception(exc_type, exc_value, traceback, file=log_file)\n    except (models.Task.DoesNotExist, ValueError):\n        pass # skip exceptions in the code\n\n    return False\n\n############################# Internal implementation for server API\n\ndef _copy_data_from_source(server_files, upload_dir, server_dir=None):\n    job = rq.get_current_job()\n    job.meta['status'] = 'Data are being copied from source..'\n    job.save_meta()\n\n    for path in server_files:\n        if server_dir is None:\n            source_path = os.path.join(settings.SHARE_ROOT, os.path.normpath(path))\n        else:\n            source_path = os.path.join(server_dir, os.path.normpath(path))\n        target_path = os.path.join(upload_dir, path)\n        if os.path.isdir(source_path):\n            copy_tree(source_path, target_path)\n        else:\n            target_dir = os.path.dirname(target_path)\n            if not os.path.exists(target_dir):\n                os.makedirs(target_dir)\n            shutil.copyfile(source_path, target_path)\n\ndef _save_task_to_db(db_task):\n    job = rq.get_current_job()\n    job.meta['status'] = 'Task is being saved in database'\n    job.save_meta()\n\n    segment_size = db_task.segment_size\n    segment_step = segment_size\n    if segment_size == 0 or segment_size > db_task.data.size:\n        segment_size = db_task.data.size\n        db_task.segment_size = segment_size\n\n        # Segment step must be more than segment_size + overlap in single-segment tasks\n        # Otherwise a task contains an extra segment\n        segment_step = sys.maxsize\n\n    default_overlap = 5 if db_task.mode == 'interpolation' else 0\n    if db_task.overlap is None:\n        db_task.overlap = default_overlap\n    db_task.overlap = min(db_task.overlap, segment_size  // 2)\n\n    segment_step -= db_task.overlap\n\n    for start_frame in range(0, db_task.data.size, segment_step):\n        stop_frame = min(start_frame + segment_size - 1, db_task.data.size - 1)\n\n        slogger.glob.info(\"New segment for task #{}: start_frame = {}, \\\n            stop_frame = {}\".format(db_task.id, start_frame, stop_frame))\n\n        db_segment = models.Segment()\n        db_segment.task = db_task\n        db_segment.start_frame = start_frame\n        db_segment.stop_frame = stop_frame\n        db_segment.save()\n\n        db_job = models.Job(segment=db_segment)\n        db_job.save()\n\n\n    db_task.data.save()\n    db_task.save()\n\ndef _count_files(data, manifest_files=None):\n    share_root = settings.SHARE_ROOT\n    server_files = []\n\n    for path in data[\"server_files\"]:\n        path = os.path.normpath(path).lstrip('/')\n        if '..' in path.split(os.path.sep):\n            raise ValueError(\"Don't use '..' inside file paths\")\n        full_path = os.path.abspath(os.path.join(share_root, path))\n        if os.path.commonprefix([share_root, full_path]) != share_root:\n            raise ValueError(\"Bad file path: \" + path)\n        server_files.append(path)\n\n    sorted_server_files = sorted(server_files, reverse=True)\n    # The idea of the code is trivial. After sort we will have files in the\n    # following order: 'a/b/c/d/2.txt', 'a/b/c/d/1.txt', 'a/b/c/d', 'a/b/c'\n    # Let's keep all items which aren't substrings of the previous item. In\n    # the example above only 2.txt and 1.txt files will be in the final list.\n    # Also need to correctly handle 'a/b/c0', 'a/b/c' case.\n    without_extra_dirs = [v[1] for v in zip([\"\"] + sorted_server_files, sorted_server_files)\n        if not os.path.dirname(v[0]).startswith(v[1])]\n\n    # we need to keep the original sequence of files\n    data['server_files'] = [f for f in server_files if f in without_extra_dirs]\n\n    def count_files(file_mapping, counter):\n        for rel_path, full_path in file_mapping.items():\n            mime = get_mime(full_path)\n            if mime in counter:\n                counter[mime].append(rel_path)\n            elif rel_path.endswith('.jsonl'):\n                manifest_files.append(rel_path)\n            else:\n                slogger.glob.warn(\"Skip '{}' file (its mime type doesn't \"\n                    \"correspond to supported MIME file type)\".format(full_path))\n\n    counter = { media_type: [] for media_type in MEDIA_TYPES.keys() }\n\n    count_files(\n        file_mapping={ f:f for f in data['remote_files'] or data['client_files']},\n        counter=counter,\n    )\n\n    count_files(\n        file_mapping={ f:os.path.abspath(os.path.join(share_root, f)) for f in data['server_files']},\n        counter=counter,\n    )\n\n    return counter\n\ndef _validate_data(counter, manifest_files=None):\n    unique_entries = 0\n    multiple_entries = 0\n    for media_type, media_config in MEDIA_TYPES.items():\n        if counter[media_type]:\n            if media_config['unique']:\n                unique_entries += len(counter[media_type])\n            else:\n                multiple_entries += len(counter[media_type])\n\n            if manifest_files and media_type not in ('video', 'image'):\n                raise Exception('File with meta information can only be uploaded with video/images ')\n\n    if unique_entries == 1 and multiple_entries > 0 or unique_entries > 1:\n        unique_types = ', '.join([k for k, v in MEDIA_TYPES.items() if v['unique']])\n        multiply_types = ', '.join([k for k, v in MEDIA_TYPES.items() if not v['unique']])\n        count = ', '.join(['{} {}(s)'.format(len(v), k) for k, v in counter.items()])\n        raise ValueError('Only one {} or many {} can be used simultaneously, \\\n            but {} found.'.format(unique_types, multiply_types, count))\n\n    if unique_entries == 0 and multiple_entries == 0:\n        raise ValueError('No media data found')\n\n    task_modes = [MEDIA_TYPES[media_type]['mode'] for media_type, media_files in counter.items() if media_files]\n\n    if not all(mode == task_modes[0] for mode in task_modes):\n        raise Exception('Could not combine different task modes for data')\n\n    return counter, task_modes[0]\n\ndef _validate_manifest(manifests, root_dir):\n    if manifests:\n        if len(manifests) != 1:\n            raise Exception('Only one manifest file can be attached with data')\n        full_manifest_path = os.path.join(root_dir, manifests[0])\n        if is_manifest(full_manifest_path):\n            return manifests[0]\n        raise Exception('Invalid manifest was uploaded')\n    return None\n\ndef _validate_url(url):\n    def _validate_ip_address(ip_address):\n        if not ip_address.is_global:\n            raise ValidationError('Non public IP address \\'{}\\' is provided!'.format(ip_address))\n\n    ALLOWED_SCHEMES = ['http', 'https']\n\n    parsed_url = urlparse.urlparse(url)\n\n    if parsed_url.scheme not in ALLOWED_SCHEMES:\n        raise ValueError('Unsupported URL sheme: {}. Only http and https are supported'.format(parsed_url.scheme))\n\n    try:\n        ip_address = ipaddress.ip_address(parsed_url.hostname)\n        _validate_ip_address(ip_address)\n    except ValueError as _:\n        ip_v4_records = None\n        ip_v6_records = None\n        try:\n            ip_v4_records = dns.resolver.query(parsed_url.hostname, 'A')\n            for record in ip_v4_records:\n                _validate_ip_address(ipaddress.ip_address(record.to_text()))\n        except ValidationError:\n            raise\n        except Exception as e:\n            slogger.glob.info('Cannot get A record for domain \\'{}\\': {}'.format(parsed_url.hostname, e))\n\n        try:\n            ip_v6_records = dns.resolver.query(parsed_url.hostname, 'AAAA')\n            for record in ip_v6_records:\n                _validate_ip_address(ipaddress.ip_address(record.to_text()))\n        except ValidationError:\n            raise\n        except Exception as e:\n            slogger.glob.info('Cannot get AAAA record for domain \\'{}\\': {}'.format(parsed_url.hostname, e))\n\n        if not ip_v4_records and not ip_v6_records:\n            raise ValidationError('Cannot resolve IP address for domain \\'{}\\''.format(parsed_url.hostname))\n\ndef _download_data(urls, upload_dir):\n    job = rq.get_current_job()\n    local_files = {}\n    for url in urls:\n        name = os.path.basename(urlrequest.url2pathname(urlparse.urlparse(url).path))\n        if name in local_files:\n            raise Exception(\"filename collision: {}\".format(name))\n        _validate_url(url)\n        slogger.glob.info(\"Downloading: {}\".format(url))\n        job.meta['status'] = '{} is being downloaded..'.format(url)\n        job.save_meta()\n\n        response = requests.get(url, stream=True)\n        if response.status_code == 200:\n            response.raw.decode_content = True\n            with open(os.path.join(upload_dir, name), 'wb') as output_file:\n                shutil.copyfileobj(response.raw, output_file)\n        else:\n            raise Exception(\"Failed to download \" + url)\n\n        local_files[name] = True\n\n    return list(local_files.keys())\n\ndef _get_manifest_frame_indexer(start_frame=0, frame_step=1):\n    return lambda frame_id: start_frame + frame_id * frame_step\n\n\n@transaction.atomic\ndef _create_thread(db_task, data, isBackupRestore=False, isDatasetImport=False):\n    if isinstance(db_task, int):\n        db_task = models.Task.objects.select_for_update().get(pk=db_task)\n\n    slogger.glob.info(\"create task #{}\".format(db_task.id))\n\n    db_data = db_task.data\n    upload_dir = db_data.get_upload_dirname()\n\n    if data['remote_files'] and not isDatasetImport:\n        data['remote_files'] = _download_data(data['remote_files'], upload_dir)\n\n    manifest_files = []\n    media = _count_files(data, manifest_files)\n    media, task_mode = _validate_data(media, manifest_files)\n\n    if data['server_files']:\n        if db_data.storage == models.StorageChoice.LOCAL:\n            _copy_data_from_source(data['server_files'], upload_dir, data.get('server_files_path'))\n        elif db_data.storage == models.StorageChoice.SHARE:\n            upload_dir = settings.SHARE_ROOT\n\n    manifest_root = None\n    if db_data.storage in {models.StorageChoice.LOCAL, models.StorageChoice.SHARE}:\n        manifest_root = upload_dir\n    elif db_data.storage == models.StorageChoice.CLOUD_STORAGE:\n        manifest_root = db_data.cloud_storage.get_storage_dirname()\n\n    manifest_file = _validate_manifest(manifest_files, manifest_root)\n    if manifest_file and (not settings.USE_CACHE or db_data.storage_method != models.StorageMethodChoice.CACHE):\n        raise Exception(\"File with meta information can be uploaded if 'Use cache' option is also selected\")\n\n    if data['server_files'] and db_data.storage == models.StorageChoice.CLOUD_STORAGE:\n        if not manifest_file: raise Exception('A manifest file not found')\n        db_cloud_storage = db_data.cloud_storage\n        credentials = Credentials()\n        credentials.convert_from_db({\n            'type': db_cloud_storage.credentials_type,\n            'value': db_cloud_storage.credentials,\n        })\n\n        details = {\n            'resource': db_cloud_storage.resource,\n            'credentials': credentials,\n            'specific_attributes': db_cloud_storage.get_specific_attributes()\n        }\n        cloud_storage_instance = get_cloud_storage_instance(cloud_provider=db_cloud_storage.provider_type, **details)\n        sorted_media = sort(media['image'], data['sorting_method'])\n        first_sorted_media_image = sorted_media[0]\n        cloud_storage_instance.download_file(first_sorted_media_image, os.path.join(upload_dir, first_sorted_media_image))\n\n        # prepare task manifest file from cloud storage manifest file\n        # NOTE we should create manifest before defining chunk_size\n        # FIXME in the future when will be implemented archive support\n        manifest = ImageManifestManager(db_data.get_manifest_path())\n        cloud_storage_manifest = ImageManifestManager(\n            os.path.join(db_data.cloud_storage.get_storage_dirname(), manifest_file),\n            db_data.cloud_storage.get_storage_dirname()\n        )\n        cloud_storage_manifest.set_index()\n        sequence, content = cloud_storage_manifest.get_subset(sorted_media)\n        sorted_content = (i[1] for i in sorted(zip(sequence, content)))\n        manifest.create(sorted_content)\n\n    av_scan_paths(upload_dir)\n\n    job = rq.get_current_job()\n    job.meta['status'] = 'Media files are being extracted...'\n    job.save_meta()\n\n    db_images = []\n    extractor = None\n    manifest_index = _get_manifest_frame_indexer()\n\n    # If upload from server_files image and directories\n    # need to update images list by all found images in directories\n    if (data['server_files']) and len(media['directory']) and len(media['image']):\n        media['image'].extend(\n            [os.path.relpath(image, upload_dir) for image in\n                MEDIA_TYPES['directory']['extractor'](\n                    source_path=[os.path.join(upload_dir, f) for f in media['directory']],\n                ).absolute_source_paths\n            ]\n        )\n        media['directory'] = []\n\n    for media_type, media_files in media.items():\n        if media_files:\n            if extractor is not None:\n                raise Exception('Combined data types are not supported')\n            if (isDatasetImport or isBackupRestore) and media_type == 'image' and db_data.storage == models.StorageChoice.SHARE:\n                manifest_index = _get_manifest_frame_indexer(db_data.start_frame, db_data.get_frame_step())\n                db_data.start_frame = 0\n                data['stop_frame'] = None\n                db_data.frame_filter = ''\n            source_paths=[os.path.join(upload_dir, f) for f in media_files]\n            if manifest_file and not isBackupRestore and data['sorting_method'] in {models.SortingMethod.RANDOM, models.SortingMethod.PREDEFINED}:\n                raise Exception(\"It isn't supported to upload manifest file and use random sorting\")\n            if isBackupRestore and db_data.storage_method == models.StorageMethodChoice.FILE_SYSTEM and \\\n                    data['sorting_method'] in {models.SortingMethod.RANDOM, models.SortingMethod.PREDEFINED}:\n                raise Exception(\"It isn't supported to import the task that was created without cache but with random/predefined sorting\")\n\n            details = {\n                'source_path': source_paths,\n                'step': db_data.get_frame_step(),\n                'start': db_data.start_frame,\n                'stop': data['stop_frame'],\n            }\n            if media_type in {'archive', 'zip', 'pdf'} and db_data.storage == models.StorageChoice.SHARE:\n                details['extract_dir'] = db_data.get_upload_dirname()\n                upload_dir = db_data.get_upload_dirname()\n                db_data.storage = models.StorageChoice.LOCAL\n            if media_type != 'video':\n                details['sorting_method'] = data['sorting_method']\n            extractor = MEDIA_TYPES[media_type]['extractor'](**details)\n\n    validate_dimension = ValidateDimension()\n    if isinstance(extractor, MEDIA_TYPES['zip']['extractor']):\n        extractor.extract()\n\n    if db_data.storage == models.StorageChoice.LOCAL or \\\n            (db_data.storage == models.StorageChoice.SHARE and \\\n            isinstance(extractor, MEDIA_TYPES['zip']['extractor'])):\n        validate_dimension.set_path(upload_dir)\n        validate_dimension.validate()\n\n    if db_task.project is not None and db_task.project.tasks.count() > 1 and db_task.project.tasks.first().dimension != validate_dimension.dimension:\n        raise Exception(f'Dimension ({validate_dimension.dimension}) of the task must be the same as other tasks in project ({db_task.project.tasks.first().dimension})')\n\n    if validate_dimension.dimension == models.DimensionType.DIM_3D:\n        db_task.dimension = models.DimensionType.DIM_3D\n\n        keys_of_related_files = validate_dimension.related_files.keys()\n        absolute_keys_of_related_files = [os.path.join(upload_dir, f) for f in keys_of_related_files]\n        # When a task is created, the sorting method can be random and in this case, reinitialization will be with correct sorting\n        # but when a task is restored from a backup, a random sorting is changed to predefined and we need to manually sort files\n        # in the correct order.\n        source_files = absolute_keys_of_related_files if not isBackupRestore else \\\n            [item for item in extractor.absolute_source_paths if item in absolute_keys_of_related_files]\n        extractor.reconcile(\n            source_files=source_files,\n            step=db_data.get_frame_step(),\n            start=db_data.start_frame,\n            stop=data['stop_frame'],\n            dimension=models.DimensionType.DIM_3D,\n        )\n\n    related_images = {}\n    if isinstance(extractor, MEDIA_TYPES['image']['extractor']):\n        extractor.filter(lambda x: not re.search(r'(^|{0})related_images{0}'.format(os.sep), x))\n        related_images = detect_related_images(extractor.absolute_source_paths, upload_dir)\n\n    if isBackupRestore and not isinstance(extractor, MEDIA_TYPES['video']['extractor']) and db_data.storage_method == models.StorageMethodChoice.CACHE and \\\n            db_data.sorting_method in {models.SortingMethod.RANDOM, models.SortingMethod.PREDEFINED} and validate_dimension.dimension != models.DimensionType.DIM_3D:\n        # we should sort media_files according to the manifest content sequence\n        # and we should do this in general after validation step for 3D data and after filtering from related_images\n        manifest = ImageManifestManager(db_data.get_manifest_path())\n        manifest.set_index()\n        sorted_media_files = []\n\n        for idx in range(len(extractor.absolute_source_paths)):\n            properties = manifest[idx]\n            image_name = properties.get('name', None)\n            image_extension = properties.get('extension', None)\n\n            full_image_path = os.path.join(upload_dir, f\"{image_name}{image_extension}\") if image_name and image_extension else None\n            if full_image_path and full_image_path in extractor:\n                sorted_media_files.append(full_image_path)\n        media_files = sorted_media_files.copy()\n        del sorted_media_files\n        data['sorting_method'] = models.SortingMethod.PREDEFINED\n        extractor.reconcile(\n            source_files=media_files,\n            step=db_data.get_frame_step(),\n            start=db_data.start_frame,\n            stop=data['stop_frame'],\n            sorting_method=data['sorting_method'],\n        )\n\n    db_task.mode = task_mode\n    db_data.compressed_chunk_type = models.DataChoice.VIDEO if task_mode == 'interpolation' and not data['use_zip_chunks'] else models.DataChoice.IMAGESET\n    db_data.original_chunk_type = models.DataChoice.VIDEO if task_mode == 'interpolation' else models.DataChoice.IMAGESET\n\n    def update_progress(progress):\n        progress_animation = '|/-\\\\'\n        if not hasattr(update_progress, 'call_counter'):\n            update_progress.call_counter = 0\n\n        status_message = 'Images are being compressed'\n        if not progress:\n            status_message = '{} {}'.format(status_message, progress_animation[update_progress.call_counter])\n        job.meta['status'] = status_message\n        job.meta['task_progress'] = progress or 0.\n        job.save_meta()\n        update_progress.call_counter = (update_progress.call_counter + 1) % len(progress_animation)\n\n    compressed_chunk_writer_class = Mpeg4CompressedChunkWriter if db_data.compressed_chunk_type == models.DataChoice.VIDEO else ZipCompressedChunkWriter\n    if db_data.original_chunk_type == models.DataChoice.VIDEO:\n        original_chunk_writer_class = Mpeg4ChunkWriter\n        # Let's use QP=17 (that is 67 for 0-100 range) for the original chunks, which should be visually lossless or nearly so.\n        # A lower value will significantly increase the chunk size with a slight increase of quality.\n        original_quality = 67\n    else:\n        original_chunk_writer_class = ZipChunkWriter\n        original_quality = 100\n\n    kwargs = {}\n    if validate_dimension.dimension == models.DimensionType.DIM_3D:\n        kwargs[\"dimension\"] = validate_dimension.dimension\n    compressed_chunk_writer = compressed_chunk_writer_class(db_data.image_quality, **kwargs)\n    original_chunk_writer = original_chunk_writer_class(original_quality)\n\n    # calculate chunk size if it isn't specified\n    if db_data.chunk_size is None:\n        if isinstance(compressed_chunk_writer, ZipCompressedChunkWriter):\n            if not (db_data.storage == models.StorageChoice.CLOUD_STORAGE):\n                w, h = extractor.get_image_size(0)\n            else:\n                img_properties = manifest[0]\n                w, h = img_properties['width'], img_properties['height']\n            area = h * w\n            db_data.chunk_size = max(2, min(72, 36 * 1920 * 1080 // area))\n        else:\n            db_data.chunk_size = 36\n\n    video_path = \"\"\n    video_size = (0, 0)\n\n    def _update_status(msg):\n        job.meta['status'] = msg\n        job.save_meta()\n\n    if settings.USE_CACHE and db_data.storage_method == models.StorageMethodChoice.CACHE:\n       for media_type, media_files in media.items():\n\n            if not media_files:\n                continue\n\n            # replace manifest file (e.g was uploaded 'subdir/manifest.jsonl' or 'some_manifest.jsonl')\n            if manifest_file and not os.path.exists(db_data.get_manifest_path()):\n                shutil.copyfile(os.path.join(upload_dir, manifest_file),\n                    db_data.get_manifest_path())\n                if upload_dir != settings.SHARE_ROOT:\n                    os.remove(os.path.join(upload_dir, manifest_file))\n\n            if task_mode == MEDIA_TYPES['video']['mode']:\n                try:\n                    manifest_is_prepared = False\n                    if manifest_file:\n                        try:\n                            manifest = VideoManifestValidator(source_path=os.path.join(upload_dir, media_files[0]),\n                                                              manifest_path=db_data.get_manifest_path())\n                            manifest.init_index()\n                            manifest.validate_seek_key_frames()\n                            manifest.validate_frame_numbers()\n                            assert len(manifest) > 0, 'No key frames.'\n\n                            all_frames = manifest.video_length\n                            video_size = manifest.video_resolution\n                            manifest_is_prepared = True\n                        except Exception as ex:\n                            manifest.remove()\n                            if isinstance(ex, AssertionError):\n                                base_msg = str(ex)\n                            else:\n                                base_msg = 'Invalid manifest file was upload.'\n                                slogger.glob.warning(str(ex))\n                            _update_status('{} Start prepare a valid manifest file.'.format(base_msg))\n\n                    if not manifest_is_prepared:\n                        _update_status('Start prepare a manifest file')\n                        manifest = VideoManifestManager(db_data.get_manifest_path())\n                        manifest.link(\n                            media_file=media_files[0],\n                            upload_dir=upload_dir,\n                            chunk_size=db_data.chunk_size\n                        )\n                        manifest.create()\n                        _update_status('A manifest had been created')\n\n                        all_frames = len(manifest.reader)\n                        video_size = manifest.reader.resolution\n                        manifest_is_prepared = True\n\n                    db_data.size = len(range(db_data.start_frame, min(data['stop_frame'] + 1 \\\n                        if data['stop_frame'] else all_frames, all_frames), db_data.get_frame_step()))\n                    video_path = os.path.join(upload_dir, media_files[0])\n                except Exception as ex:\n                    db_data.storage_method = models.StorageMethodChoice.FILE_SYSTEM\n                    manifest.remove()\n                    del manifest\n                    base_msg = str(ex) if isinstance(ex, AssertionError) \\\n                        else \"Uploaded video does not support a quick way of task creating.\"\n                    _update_status(\"{} The task will be created using the old method\".format(base_msg))\n            else: # images, archive, pdf\n                db_data.size = len(extractor)\n                manifest = ImageManifestManager(db_data.get_manifest_path())\n                if not manifest_file:\n                    manifest.link(\n                        sources=extractor.absolute_source_paths,\n                        meta={ k: {'related_images': related_images[k] } for k in related_images },\n                        data_dir=upload_dir,\n                        DIM_3D=(db_task.dimension == models.DimensionType.DIM_3D),\n                    )\n                    manifest.create()\n                else:\n                    manifest.init_index()\n                counter = itertools.count()\n                for _, chunk_frames in itertools.groupby(extractor.frame_range, lambda x: next(counter) // db_data.chunk_size):\n                    chunk_paths = [(extractor.get_path(i), i) for i in chunk_frames]\n                    img_sizes = []\n\n                    for chunk_path, frame_id in chunk_paths:\n                        properties = manifest[manifest_index(frame_id)]\n\n                        # check mapping\n                        if not chunk_path.endswith(f\"{properties['name']}{properties['extension']}\"):\n                            raise Exception('Incorrect file mapping to manifest content')\n                        if db_task.dimension == models.DimensionType.DIM_2D:\n                            resolution = (properties['width'], properties['height'])\n                        else:\n                            resolution = extractor.get_image_size(frame_id)\n                        img_sizes.append(resolution)\n\n                    db_images.extend([\n                        models.Image(data=db_data,\n                            path=os.path.relpath(path, upload_dir),\n                            frame=frame, width=w, height=h)\n                        for (path, frame), (w, h) in zip(chunk_paths, img_sizes)\n                    ])\n\n    if db_data.storage_method == models.StorageMethodChoice.FILE_SYSTEM or not settings.USE_CACHE:\n        counter = itertools.count()\n        generator = itertools.groupby(extractor, lambda x: next(counter) // db_data.chunk_size)\n        for chunk_idx, chunk_data in generator:\n            chunk_data = list(chunk_data)\n            original_chunk_path = db_data.get_original_chunk_path(chunk_idx)\n            original_chunk_writer.save_as_chunk(chunk_data, original_chunk_path)\n\n            compressed_chunk_path = db_data.get_compressed_chunk_path(chunk_idx)\n            img_sizes = compressed_chunk_writer.save_as_chunk(chunk_data, compressed_chunk_path)\n\n            if db_task.mode == 'annotation':\n                db_images.extend([\n                    models.Image(\n                        data=db_data,\n                        path=os.path.relpath(data[1], upload_dir),\n                        frame=data[2],\n                        width=size[0],\n                        height=size[1])\n\n                    for data, size in zip(chunk_data, img_sizes)\n                ])\n            else:\n                video_size = img_sizes[0]\n                video_path = chunk_data[0][1]\n\n            db_data.size += len(chunk_data)\n            progress = extractor.get_progress(chunk_data[-1][2])\n            update_progress(progress)\n\n    if db_task.mode == 'annotation':\n        models.Image.objects.bulk_create(db_images)\n        created_images = models.Image.objects.filter(data_id=db_data.id)\n\n        db_related_files = [\n            models.RelatedFile(data=image.data, primary_image=image, path=os.path.join(upload_dir, related_file_path))\n            for image in created_images\n            for related_file_path in related_images.get(image.path, [])\n        ]\n        models.RelatedFile.objects.bulk_create(db_related_files)\n        db_images = []\n    else:\n        models.Video.objects.create(\n            data=db_data,\n            path=os.path.relpath(video_path, upload_dir),\n            width=video_size[0], height=video_size[1])\n\n    if db_data.stop_frame == 0:\n        db_data.stop_frame = db_data.start_frame + (db_data.size - 1) * db_data.get_frame_step()\n    else:\n        # validate stop_frame\n        db_data.stop_frame = min(db_data.stop_frame, \\\n            db_data.start_frame + (db_data.size - 1) * db_data.get_frame_step())\n\n    preview = extractor.get_preview()\n    preview.save(db_data.get_preview_path())\n\n    slogger.glob.info(\"Found frames {} for Data #{}\".format(db_data.size, db_data.id))\n    _save_task_to_db(db_task)\n", "attrs==21.2.0\nclick==7.1.2\nDjango==3.2.12\ndjango-appconf==1.0.4\ndjango-auth-ldap==2.2.0\ndjango-compressor==2.4\ndjango-rq==2.3.2\nEasyProcess==0.3\nPillow==9.0.1\nnumpy==1.22.0\npython-ldap==3.4.0\npytz==2020.1\npyunpack==0.2.1\nrcssmin==1.0.6\nredis==3.5.3\nrjsmin==1.1.0\nrequests==2.26.0\nrq==1.5.1\nrq-scheduler==0.10.0\nsqlparse==0.4.2\ndjango-sendfile2==0.6.1\ndj-pagination==2.5.0\npython-logstash-async==2.2.0\nrules==2.2\nGitPython==3.1.27\ncoreapi==2.3.3\ndjango-filter==2.4.0\nMarkdown==3.2.2\ndjangorestframework==3.12.4\nPygments==2.7.4\ndrf-spectacular==0.21.2\nShapely==1.7.1\npdf2image==1.14.0\ndjango-rest-auth[with_social]==0.9.5\nopencv-python-headless==4.4.0.42\nh5py==2.10.0\ndjango-cors-headers==3.5.0\nfurl==2.1.0\nav==8.0.2 --no-binary=av\ntensorflow==2.8.0 # Optional requirement of Datumaro\n# The package is used by pyunpack as a command line tool to support multiple\n# archives. Don't use as a python module because it has GPL license.\npatool==1.12\ndiskcache==5.0.2\nopen3d==0.11.2\nboto3==1.17.61\nazure-storage-blob==12.8.1\ngoogle-cloud-storage==1.42.0\n# --no-binary=datumaro: workaround for pip to install\n# opencv-headless instead of regular opencv, to actually run setup script\ndatumaro==0.2.0 --no-binary=datumaro\nurllib3>=1.26.5 # not directly required, pinned by Snyk to avoid a vulnerability\nnatsort==8.0.0\nmistune>=2.0.1 # not directly required, pinned by Snyk to avoid a vulnerability\ndnspython==2.2.0\n"], "filenames": ["CHANGELOG.md", "cvat/apps/engine/task.py", "cvat/requirements/base.txt"], "buggy_code_start_loc": [83, 8, 54], "buggy_code_end_loc": [83, 212, 54], "fixing_code_start_loc": [84, 9, 55], "fixing_code_end_loc": [85, 256, 56], "type": "CWE-918", "message": "CVAT is an opensource interactive video and image annotation tool for computer vision. Versions prior to 2.0.0 were found to be subject to a Server-side request forgery (SSRF) vulnerability. Validation has been added to urls used in the affected code path in version 2.0.0. Users are advised to upgrade. There are no known workarounds for this issue.", "other": {"cve": {"id": "CVE-2022-31188", "sourceIdentifier": "security-advisories@github.com", "published": "2022-08-01T20:15:08.650", "lastModified": "2022-12-08T22:35:16.617", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "CVAT is an opensource interactive video and image annotation tool for computer vision. Versions prior to 2.0.0 were found to be subject to a Server-side request forgery (SSRF) vulnerability. Validation has been added to urls used in the affected code path in version 2.0.0. Users are advised to upgrade. There are no known workarounds for this issue."}, {"lang": "es", "value": "CVAT es una herramienta de anotaci\u00f3n de v\u00eddeo e imagen interactiva de c\u00f3digo abierto para la visi\u00f3n por ordenador. Las versiones anteriores a 2.0.0, est\u00e1n sujetas a una vulnerabilidad de tipo Server-side request forgery (SSRF). Ha sido a\u00f1adida la comprobaci\u00f3n de las urls usadas en la ruta de c\u00f3digo afectada en versi\u00f3n 2.0.0. Es recomendado a usuarios actualizar. No se presentan mitigaciones conocidas para este problema"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 8.6, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 4.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-918"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-918"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:cvat:cvat:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.0.0", "matchCriteriaId": "29D76D4E-B25E-4AE9-86EC-887059DBA160"}]}]}], "references": [{"url": "http://packetstormsecurity.com/files/169814/CVAT-2.0-Server-Side-Request-Forgery.html", "source": "security-advisories@github.com", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/cvat-ai/cvat/commit/6fad1764efd922d99dbcda28c4ee72d071aa5a07", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/cvat-ai/cvat/security/advisories/GHSA-7vpj-j5xv-29pr", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/cvat-ai/cvat/commit/6fad1764efd922d99dbcda28c4ee72d071aa5a07"}}