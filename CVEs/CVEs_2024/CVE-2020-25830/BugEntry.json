{"buggy_code": ["<?php\n# MantisBT - A PHP based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This page allows actions to be performed on an array of bugs\n *\n * @package MantisBT\n * @copyright Copyright 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n * @copyright Copyright 2002  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n * @link http://www.mantisbt.org\n *\n * @uses core.php\n * @uses access_api.php\n * @uses authentication_api.php\n * @uses bug_api.php\n * @uses bug_group_action_api.php\n * @uses config_api.php\n * @uses constant_inc.php\n * @uses custom_field_api.php\n * @uses event_api.php\n * @uses form_api.php\n * @uses gpc_api.php\n * @uses helper_api.php\n * @uses lang_api.php\n * @uses print_api.php\n * @uses string_api.php\n * @uses utility_api.php\n * @uses version_api.php\n */\n\nrequire_once( 'core.php' );\nrequire_api( 'access_api.php' );\nrequire_api( 'authentication_api.php' );\nrequire_api( 'bug_api.php' );\nrequire_api( 'bug_group_action_api.php' );\nrequire_api( 'config_api.php' );\nrequire_api( 'constant_inc.php' );\nrequire_api( 'custom_field_api.php' );\nrequire_api( 'event_api.php' );\nrequire_api( 'form_api.php' );\nrequire_api( 'gpc_api.php' );\nrequire_api( 'helper_api.php' );\nrequire_api( 'lang_api.php' );\nrequire_api( 'print_api.php' );\nrequire_api( 'string_api.php' );\nrequire_api( 'utility_api.php' );\nrequire_api( 'version_api.php' );\n\nauth_ensure_user_authenticated();\n\n$f_action = gpc_get_string( 'action', '' );\n$f_bug_arr = gpc_get_int_array( 'bug_arr', array() );\n\n# redirects to all_bug_page if nothing is selected\nif( is_blank( $f_action ) || ( 0 == count( $f_bug_arr ) ) ) {\n\tprint_header_redirect( 'view_all_bug_page.php' );\n}\n\n# run through the issues to see if they are all from one project\n$t_project_id = ALL_PROJECTS;\n$t_multiple_projects = false;\n$t_projects = array();\n\n# Array of parameters to be used with plugin event\n$t_event_params = array();\n$t_event_params['bug_ids'] = $f_bug_arr;\n$t_event_params['action'] = $f_action;\n$t_event_params['has_bugnote'] = false;\n\nbug_cache_array_rows( $f_bug_arr );\n\nforeach( $f_bug_arr as $t_bug_id ) {\n\t$t_bug = bug_get( $t_bug_id );\n\tif( $t_project_id != $t_bug->project_id ) {\n\t\tif( ( $t_project_id != ALL_PROJECTS ) && !$t_multiple_projects ) {\n\t\t\t$t_multiple_projects = true;\n\t\t} else {\n\t\t\t$t_project_id = $t_bug->project_id;\n\t\t\t$t_projects[$t_project_id] = $t_project_id;\n\t\t}\n\t}\n}\n$t_event_params['multiple_projects'] = $t_multiple_projects;\n\nif( $t_multiple_projects ) {\n\t$t_project_id = ALL_PROJECTS;\n\t$t_projects[ALL_PROJECTS] = ALL_PROJECTS;\n}\n# override the project if necessary\nif( $t_project_id != helper_get_current_project() ) {\n\t# in case the current project is not the same project of the bug we are viewing...\n\t# ... override the current project. This to avoid problems with categories and handlers lists etc.\n\t$g_project_override = $t_project_id;\n}\n\ndefine( 'BUG_ACTIONGROUP_INC_ALLOW', true );\n\n$t_finished = false;\n$t_bugnote = false;\n\n$t_external_action_prefix = 'EXT_';\nif( strpos( $f_action, $t_external_action_prefix ) === 0 ) {\n\t$t_form_page = 'bug_actiongroup_ext_page.php';\n\trequire_once( $t_form_page );\n\texit;\n}\n\n$t_custom_group_actions = config_get( 'custom_group_actions' );\n\nforeach( $t_custom_group_actions as $t_custom_group_action ) {\n\tif( $f_action == $t_custom_group_action['action'] ) {\n\t\trequire_once( $t_custom_group_action['form_page'] );\n\t\texit;\n\t}\n}\n\n# Check if user selected to update a custom field.\n$t_custom_fields_prefix = 'custom_field_';\nif( strpos( $f_action, $t_custom_fields_prefix ) === 0 ) {\n\t$t_custom_field_id = (int)substr( $f_action, mb_strlen( $t_custom_fields_prefix ) );\n\t$f_action = 'CUSTOM';\n\t$t_event_params['action'] = $f_action;\n}\n\n# Form name\n$t_form_name = 'bug_actiongroup_' . $f_action;\n\nswitch( $f_action ) {\n\t# Use a simple confirmation page, if close or delete...\n\tcase 'CLOSE' :\n\t\t$t_finished \t\t\t= true;\n\t\t$t_question_title \t\t= lang_get( 'close_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'close_group_bugs_button' );\n\t\t$t_bugnote\t\t\t\t= true;\n\t\tbreak;\n\tcase 'DELETE' :\n\t\t$t_finished \t\t\t= true;\n\t\t$t_question_title\t\t= lang_get( 'delete_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'delete_group_bugs_button' );\n\t\tbreak;\n\tcase 'SET_STICKY' :\n\t\t$t_finished \t\t\t= true;\n\t\t$t_question_title\t\t= lang_get( 'set_sticky_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'set_sticky_group_bugs_button' );\n\t\tbreak;\n\t# ...else we define the variables used in the form\n\tcase 'MOVE' :\n\t\t$t_question_title \t\t= lang_get( 'move_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'move_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'project_id';\n\t\tbreak;\n\tcase 'COPY' :\n\t\t$t_question_title \t\t= lang_get( 'copy_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'copy_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'project_id';\n\t\tbreak;\n\tcase 'ASSIGN' :\n\t\t$t_question_title \t\t= lang_get( 'assign_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'assign_group_bugs_button' );\n\t\t$t_form \t\t\t\t= 'assign';\n\t\tbreak;\n\tcase 'RESOLVE' :\n\t\t$t_question_title \t\t= lang_get( 'resolve_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'resolve_group_bugs_button' );\n\t\t$t_form \t\t\t\t= 'resolution';\n\t\tif( ALL_PROJECTS != $t_project_id ) {\n\t\t\t$t_question_title2 = lang_get( 'fixed_in_version' );\n\t\t\t$t_form2 = 'fixed_in_version';\n\t\t}\n\t\t$t_bugnote\t\t\t\t= true;\n\t\tbreak;\n\tcase 'UP_PRIOR' :\n\t\t$t_question_title \t\t= lang_get( 'priority_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'priority_group_bugs_button' );\n\t\t$t_form \t\t\t\t= 'priority';\n\t\tbreak;\n\tcase 'UP_STATUS' :\n\t\t$t_question_title \t\t= lang_get( 'status_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'status_group_bugs_button' );\n\t\t$t_form \t\t\t\t= 'status';\n\t\t$t_bugnote\t\t\t\t= true;\n\t\tbreak;\n\tcase 'UP_CATEGORY' :\n\t\t$t_question_title\t\t= lang_get( 'category_bugs_conf_msg' );\n\t\t$t_button_title\t\t\t= lang_get( 'category_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'category';\n\t\tbreak;\n\tcase 'VIEW_STATUS' :\n\t\t$t_question_title\t\t= lang_get( 'view_status_bugs_conf_msg' );\n\t\t$t_button_title\t\t\t= lang_get( 'view_status_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'view_status';\n\t\tbreak;\n\tcase 'UP_PRODUCT_VERSION':\n\t\t$t_question_title\t\t= lang_get( 'product_version_bugs_conf_msg' );\n\t\t$t_button_title\t\t\t= lang_get( 'product_version_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'product_version';\n\t\tbreak;\n\tcase 'UP_FIXED_IN_VERSION':\n\t\t$t_question_title\t\t= lang_get( 'fixed_in_version_bugs_conf_msg' );\n\t\t$t_button_title\t\t\t= lang_get( 'fixed_in_version_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'fixed_in_version';\n\t\tbreak;\n\tcase 'UP_TARGET_VERSION':\n\t\t$t_question_title\t\t= lang_get( 'target_version_bugs_conf_msg' );\n\t\t$t_button_title\t\t\t= lang_get( 'target_version_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'target_version';\n\t\tbreak;\n\tcase 'UP_DUE_DATE':\n\t\t$t_question_title\t\t= lang_get( 'due_date_bugs_conf_msg' );\n\t\t$t_button_title\t\t\t= lang_get( 'due_date_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'due_date';\n\t\tbreak;\n\tcase 'CUSTOM' :\n\t\t$t_custom_field_def = custom_field_get_definition( $t_custom_field_id );\n\t\t$t_question_title = sprintf( lang_get( 'actiongroup_menu_update_field' ), lang_get_defaulted( $t_custom_field_def['name'] ) );\n\t\t$t_button_title = $t_question_title;\n\t\t$t_form = 'custom_field_' . $t_custom_field_id;\n\t\t$t_event_params['custom_field_id'] = $t_custom_field_id;\n\t\tbreak;\n\tdefault:\n\t\ttrigger_error( ERROR_GENERIC, ERROR );\n}\n$t_event_params['has_bugnote'] = $t_bugnote;\n\nbug_group_action_print_top();\n?>\n\n<div class=\"col-md-12 col-xs-12\">\n<?php\nif( $t_multiple_projects ) {\n\techo '<div class=\"alert alert-warning\"> <p class=\"bold\">' . lang_get( 'multiple_projects' ) . '</p> </div>';\n}\n?>\n<div id=\"action-group-div\" class=\"form-container\">\n\t<form method=\"post\" action=\"bug_actiongroup.php\">\n\t\t<?php echo form_security_field( $t_form_name ); ?>\n\t\t<input type=\"hidden\" name=\"action\" value=\"<?php echo string_attribute( $f_action ) ?>\" />\n<?php\n\tbug_group_action_print_hidden_fields( $f_bug_arr );\n\tif( $f_action === 'CUSTOM' ) {\n\t\techo \"<input type=\\\"hidden\\\" name=\\\"custom_field_id\\\" value=\\\"$t_custom_field_id\\\" />\";\n\t}\n?>\n<div class=\"widget-box widget-color-blue2\">\n<div class=\"widget-header widget-header-small\">\n\t<h4 class=\"widget-title lighter\">\n\t\t<?php echo $t_question_title ?>\n\t</h4>\n</div>\n<div class=\"widget-body\">\n\t<div class=\"widget-main no-padding\">\n\t\t<div class=\"table-responsive\">\n\t\t\t<table class=\"table table-bordered table-condensed table-striped\">\n\t\t\t<tbody>\n<?php\n\tif( !$t_finished ) {\n?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th class=\"category\">\n\t\t\t\t\t\t<?php echo $t_question_title ?>\n\t\t\t\t\t</th>\n\t\t\t\t\t<td>\n<?php\n\t\tif( $f_action === 'CUSTOM' ) {\n\t\t\t$t_custom_field_def = custom_field_get_definition( $t_custom_field_id );\n\n\t\t\t$t_bug_id = null;\n\n\t\t\t# if there is only one issue, use its current value as default, otherwise,\n\t\t\t# use the default value specified in custom field definition.\n\t\t\tif( count( $f_bug_arr ) == 1 ) {\n\t\t\t\t$t_bug_id = $f_bug_arr[0];\n\t\t\t}\n\n\t\t\tprint_custom_field_input( $t_custom_field_def, $t_bug_id );\n\t\t} else if ( $f_action === 'UP_DUE_DATE' ) {\n\t\t\t$t_date_to_display = '';\n\t\t\t# if there is only one issue, use its current value as default\n\t\t\tif( count( $f_bug_arr ) == 1 ) {\n\t\t\t\t$t_bug_id = $f_bug_arr[0];\n\t\t\t\t$t_bug = bug_get( $t_bug_id );\n\t\t\t\tif( !date_is_null( $t_bug->due_date ) ) {\n\t\t\t\t\t$t_date_to_display = date( config_get( 'normal_date_format' ), $t_bug->due_date );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\techo '<input type=\"text\" id=\"due_date\" name=\"due_date\" class=\"datetimepicker input-sm\" size=\"16\" maxlength=\"16\" ' .\n\t\t\t\t'data-picker-locale=\"' . lang_get_current_datetime_locale() .\n\t\t\t\t'\" data-picker-format=\"' . config_get( 'datetime_picker_format' ) . '\"' .\n\t\t\t\t'\" value=\"' . $t_date_to_display . '\" />';\n\t\t\techo '<i class=\"fa fa-calendar fa-xlg datetimepicker\"></i>';\n\t\t} else {\n\t\t\techo '<select name=\"' . $t_form . '\" class=\"input-sm\" required>';\n\n\t\t\tswitch( $f_action ) {\n\t\t\t\tcase 'COPY':\n\t\t\t\tcase 'MOVE':\n\t\t\t\t\tprint_project_option_list( null /* $p_project_id */, false /* $p_include_all_projects */,\n\t\t\t\t\t\t\tnull /* $p_filter_project_id */, false /* $p_trace */, true /* $p_can_report_only */ );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ASSIGN':\n\t\t\t\t\tprint_assign_to_option_list( 0, $t_project_id );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'RESOLVE':\n\t\t\t\t\tprint_enum_string_option_list( 'resolution', config_get( 'bug_resolution_fixed_threshold' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_PRIOR':\n\t\t\t\t\tprint_enum_string_option_list( 'priority', config_get( 'default_bug_priority' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_STATUS':\n\t\t\t\t\tprint_enum_string_option_list( 'status', config_get( 'bug_submit_status' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_CATEGORY':\n\t\t\t\t\tprint_category_option_list();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VIEW_STATUS':\n\t\t\t\t\tprint_enum_string_option_list( 'view_state', config_get( 'default_bug_view_status' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_TARGET_VERSION':\n\t\t\t\t\tprint_version_option_list( '', $t_projects, VERSION_FUTURE, true );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_PRODUCT_VERSION':\n\t\t\t\tcase 'UP_FIXED_IN_VERSION':\n\t\t\t\t\tprint_version_option_list( '', $t_projects, VERSION_ALL, true );\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\techo '</select>';\n\t\t}\n?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n<?php\n\t\tif( isset( $t_question_title2 ) ) {\n\t\t\tswitch( $f_action ) {\n\t\t\t\tcase 'RESOLVE':\n\t\t\t\t\t$t_show_product_version = ( ON == config_get( 'show_product_version' ) )\n\t\t\t\t\t\t|| ( ( AUTO == config_get( 'show_product_version' ) )\n\t\t\t\t\t\t\t\t\t&& ( count( version_get_all_rows( $t_project_id ) ) > 0 ) );\n\t\t\t\t\tif( $t_show_product_version ) {\n?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th class=\"category\">\n\t\t\t\t\t\t<?php echo $t_question_title2 ?>\n\t\t\t\t\t</th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select name=\"<?php echo $t_form2 ?>\" class=\"input-sm\">\n\t\t\t\t\t\t\t<?php print_version_option_list( '', null, VERSION_ALL );?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n<?php\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else {\n?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th class=\"category\" colspan=\"2\">\n\t\t\t\t\t\t<?php echo $t_question_title; ?>\n\t\t\t\t\t</th>\n\t\t\t\t</tr>\n<?php\n\t}\n\n\t# signal plugin event for additional fields\n\tevent_signal( 'EVENT_BUG_ACTIONGROUP_FORM', array( $t_event_params ) );\n\n\tif( $t_bugnote ) {\n\t\t$t_default_bugnote_view_status = config_get( 'default_bugnote_view_status' );\n\t\t$t_bugnote_private = $t_default_bugnote_view_status == VS_PRIVATE;\n\t\t$t_bugnote_class = $t_bugnote_private ? 'form-control bugnote-private' : 'form-control';\n\n?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th class=\"category\">\n\t\t\t\t\t\t<?php echo lang_get( 'add_bugnote_title' ); ?>\n\t\t\t\t\t</th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<textarea name=\"bugnote_text\" id=\"bugnote_text\" class=\"<?php echo $t_bugnote_class ?>\" cols=\"80\" rows=\"7\"></textarea>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n<?php\n\t\tif( access_has_project_level( config_get( 'private_bugnote_threshold' ), $t_project_id ) ) {\n?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th class=\"category\">\n\t\t\t\t\t\t<?php echo lang_get( 'view_status' ) ?>\n\t\t\t\t\t</th>\n\t\t\t\t\t<td>\n<?php\n\t\t\tif( access_has_project_level( config_get( 'set_view_status_threshold' ), $t_project_id ) ) {\n?>\n\t\t\t\t\t\t<input type=\"checkbox\" class=\"ace\" name=\"private\" <?php check_checked( $t_default_bugnote_view_status, VS_PRIVATE ); ?> />\n\t\t\t\t\t\t<label class=\"lbl padding-6\"><?php echo lang_get( 'private' ); ?></label>\n<?php\n\t\t\t} else {\n\t\t\t\techo get_enum_element( 'view_state', $t_default_bugnote_view_status );\n\t\t\t}\n?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n<?php\n\t\t}\n\t}\n?>\n\t\t<tr class=\"spacer\"></tr>\n\t\t<?php bug_group_action_print_bug_list( $f_bug_arr ); ?>\n\t\t<tr class=\"spacer\"></tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t</div>\n\t\t</div>\n\t\t<div class=\"widget-toolbox padding-8 clearfix\">\n\t\t\t<input type=\"submit\" class=\"btn btn-primary btn-white btn-round\" value=\"<?php echo $t_button_title ?>\" />\n\t\t</div>\n\t\t</div>\n\t\t</div>\n\t</form>\n</div>\n</div>\n\n<?php\nbug_group_action_print_bottom();\n"], "fixing_code": ["<?php\n# MantisBT - A PHP based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This page allows actions to be performed on an array of bugs\n *\n * @package MantisBT\n * @copyright Copyright 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n * @copyright Copyright 2002  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n * @link http://www.mantisbt.org\n *\n * @uses core.php\n * @uses access_api.php\n * @uses authentication_api.php\n * @uses bug_api.php\n * @uses bug_group_action_api.php\n * @uses config_api.php\n * @uses constant_inc.php\n * @uses custom_field_api.php\n * @uses event_api.php\n * @uses form_api.php\n * @uses gpc_api.php\n * @uses helper_api.php\n * @uses lang_api.php\n * @uses print_api.php\n * @uses string_api.php\n * @uses utility_api.php\n * @uses version_api.php\n */\n\nrequire_once( 'core.php' );\nrequire_api( 'access_api.php' );\nrequire_api( 'authentication_api.php' );\nrequire_api( 'bug_api.php' );\nrequire_api( 'bug_group_action_api.php' );\nrequire_api( 'config_api.php' );\nrequire_api( 'constant_inc.php' );\nrequire_api( 'custom_field_api.php' );\nrequire_api( 'event_api.php' );\nrequire_api( 'form_api.php' );\nrequire_api( 'gpc_api.php' );\nrequire_api( 'helper_api.php' );\nrequire_api( 'lang_api.php' );\nrequire_api( 'print_api.php' );\nrequire_api( 'string_api.php' );\nrequire_api( 'utility_api.php' );\nrequire_api( 'version_api.php' );\n\nauth_ensure_user_authenticated();\n\n$f_action = gpc_get_string( 'action', '' );\n$f_bug_arr = gpc_get_int_array( 'bug_arr', array() );\n\n# redirects to all_bug_page if nothing is selected\nif( is_blank( $f_action ) || ( 0 == count( $f_bug_arr ) ) ) {\n\tprint_header_redirect( 'view_all_bug_page.php' );\n}\n\n# run through the issues to see if they are all from one project\n$t_project_id = ALL_PROJECTS;\n$t_multiple_projects = false;\n$t_projects = array();\n\n# Array of parameters to be used with plugin event\n$t_event_params = array();\n$t_event_params['bug_ids'] = $f_bug_arr;\n$t_event_params['action'] = $f_action;\n$t_event_params['has_bugnote'] = false;\n\nbug_cache_array_rows( $f_bug_arr );\n\nforeach( $f_bug_arr as $t_bug_id ) {\n\t$t_bug = bug_get( $t_bug_id );\n\tif( $t_project_id != $t_bug->project_id ) {\n\t\tif( ( $t_project_id != ALL_PROJECTS ) && !$t_multiple_projects ) {\n\t\t\t$t_multiple_projects = true;\n\t\t} else {\n\t\t\t$t_project_id = $t_bug->project_id;\n\t\t\t$t_projects[$t_project_id] = $t_project_id;\n\t\t}\n\t}\n}\n$t_event_params['multiple_projects'] = $t_multiple_projects;\n\nif( $t_multiple_projects ) {\n\t$t_project_id = ALL_PROJECTS;\n\t$t_projects[ALL_PROJECTS] = ALL_PROJECTS;\n}\n# override the project if necessary\nif( $t_project_id != helper_get_current_project() ) {\n\t# in case the current project is not the same project of the bug we are viewing...\n\t# ... override the current project. This to avoid problems with categories and handlers lists etc.\n\t$g_project_override = $t_project_id;\n}\n\ndefine( 'BUG_ACTIONGROUP_INC_ALLOW', true );\n\n$t_finished = false;\n$t_bugnote = false;\n\n$t_external_action_prefix = 'EXT_';\nif( strpos( $f_action, $t_external_action_prefix ) === 0 ) {\n\t$t_form_page = 'bug_actiongroup_ext_page.php';\n\trequire_once( $t_form_page );\n\texit;\n}\n\n$t_custom_group_actions = config_get( 'custom_group_actions' );\n\nforeach( $t_custom_group_actions as $t_custom_group_action ) {\n\tif( $f_action == $t_custom_group_action['action'] ) {\n\t\trequire_once( $t_custom_group_action['form_page'] );\n\t\texit;\n\t}\n}\n\n# Check if user selected to update a custom field.\n$t_custom_fields_prefix = 'custom_field_';\nif( strpos( $f_action, $t_custom_fields_prefix ) === 0 ) {\n\t$t_custom_field_id = (int)substr( $f_action, mb_strlen( $t_custom_fields_prefix ) );\n\t$f_action = 'CUSTOM';\n\t$t_event_params['action'] = $f_action;\n}\n\n# Form name\n$t_form_name = 'bug_actiongroup_' . $f_action;\n\nswitch( $f_action ) {\n\t# Use a simple confirmation page, if close or delete...\n\tcase 'CLOSE' :\n\t\t$t_finished \t\t\t= true;\n\t\t$t_question_title \t\t= lang_get( 'close_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'close_group_bugs_button' );\n\t\t$t_bugnote\t\t\t\t= true;\n\t\tbreak;\n\tcase 'DELETE' :\n\t\t$t_finished \t\t\t= true;\n\t\t$t_question_title\t\t= lang_get( 'delete_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'delete_group_bugs_button' );\n\t\tbreak;\n\tcase 'SET_STICKY' :\n\t\t$t_finished \t\t\t= true;\n\t\t$t_question_title\t\t= lang_get( 'set_sticky_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'set_sticky_group_bugs_button' );\n\t\tbreak;\n\t# ...else we define the variables used in the form\n\tcase 'MOVE' :\n\t\t$t_question_title \t\t= lang_get( 'move_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'move_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'project_id';\n\t\tbreak;\n\tcase 'COPY' :\n\t\t$t_question_title \t\t= lang_get( 'copy_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'copy_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'project_id';\n\t\tbreak;\n\tcase 'ASSIGN' :\n\t\t$t_question_title \t\t= lang_get( 'assign_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'assign_group_bugs_button' );\n\t\t$t_form \t\t\t\t= 'assign';\n\t\tbreak;\n\tcase 'RESOLVE' :\n\t\t$t_question_title \t\t= lang_get( 'resolve_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'resolve_group_bugs_button' );\n\t\t$t_form \t\t\t\t= 'resolution';\n\t\tif( ALL_PROJECTS != $t_project_id ) {\n\t\t\t$t_question_title2 = lang_get( 'fixed_in_version' );\n\t\t\t$t_form2 = 'fixed_in_version';\n\t\t}\n\t\t$t_bugnote\t\t\t\t= true;\n\t\tbreak;\n\tcase 'UP_PRIOR' :\n\t\t$t_question_title \t\t= lang_get( 'priority_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'priority_group_bugs_button' );\n\t\t$t_form \t\t\t\t= 'priority';\n\t\tbreak;\n\tcase 'UP_STATUS' :\n\t\t$t_question_title \t\t= lang_get( 'status_bugs_conf_msg' );\n\t\t$t_button_title \t\t= lang_get( 'status_group_bugs_button' );\n\t\t$t_form \t\t\t\t= 'status';\n\t\t$t_bugnote\t\t\t\t= true;\n\t\tbreak;\n\tcase 'UP_CATEGORY' :\n\t\t$t_question_title\t\t= lang_get( 'category_bugs_conf_msg' );\n\t\t$t_button_title\t\t\t= lang_get( 'category_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'category';\n\t\tbreak;\n\tcase 'VIEW_STATUS' :\n\t\t$t_question_title\t\t= lang_get( 'view_status_bugs_conf_msg' );\n\t\t$t_button_title\t\t\t= lang_get( 'view_status_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'view_status';\n\t\tbreak;\n\tcase 'UP_PRODUCT_VERSION':\n\t\t$t_question_title\t\t= lang_get( 'product_version_bugs_conf_msg' );\n\t\t$t_button_title\t\t\t= lang_get( 'product_version_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'product_version';\n\t\tbreak;\n\tcase 'UP_FIXED_IN_VERSION':\n\t\t$t_question_title\t\t= lang_get( 'fixed_in_version_bugs_conf_msg' );\n\t\t$t_button_title\t\t\t= lang_get( 'fixed_in_version_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'fixed_in_version';\n\t\tbreak;\n\tcase 'UP_TARGET_VERSION':\n\t\t$t_question_title\t\t= lang_get( 'target_version_bugs_conf_msg' );\n\t\t$t_button_title\t\t\t= lang_get( 'target_version_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'target_version';\n\t\tbreak;\n\tcase 'UP_DUE_DATE':\n\t\t$t_question_title\t\t= lang_get( 'due_date_bugs_conf_msg' );\n\t\t$t_button_title\t\t\t= lang_get( 'due_date_group_bugs_button' );\n\t\t$t_form\t\t\t\t\t= 'due_date';\n\t\tbreak;\n\tcase 'CUSTOM' :\n\t\t$t_custom_field_def = custom_field_get_definition( $t_custom_field_id );\n\t\t$t_question_title = sprintf( lang_get( 'actiongroup_menu_update_field' ),\n\t\t\tstring_attribute( lang_get_defaulted( $t_custom_field_def['name'] ) )\n\t\t);\n\t\t$t_button_title = $t_question_title;\n\t\t$t_form = 'custom_field_' . $t_custom_field_id;\n\t\t$t_event_params['custom_field_id'] = $t_custom_field_id;\n\t\tbreak;\n\tdefault:\n\t\ttrigger_error( ERROR_GENERIC, ERROR );\n}\n$t_event_params['has_bugnote'] = $t_bugnote;\n\nbug_group_action_print_top();\n?>\n\n<div class=\"col-md-12 col-xs-12\">\n<?php\nif( $t_multiple_projects ) {\n\techo '<div class=\"alert alert-warning\"> <p class=\"bold\">' . lang_get( 'multiple_projects' ) . '</p> </div>';\n}\n?>\n<div id=\"action-group-div\" class=\"form-container\">\n\t<form method=\"post\" action=\"bug_actiongroup.php\">\n\t\t<?php echo form_security_field( $t_form_name ); ?>\n\t\t<input type=\"hidden\" name=\"action\" value=\"<?php echo string_attribute( $f_action ) ?>\" />\n<?php\n\tbug_group_action_print_hidden_fields( $f_bug_arr );\n\tif( $f_action === 'CUSTOM' ) {\n\t\techo \"<input type=\\\"hidden\\\" name=\\\"custom_field_id\\\" value=\\\"$t_custom_field_id\\\" />\";\n\t}\n?>\n<div class=\"widget-box widget-color-blue2\">\n<div class=\"widget-header widget-header-small\">\n\t<h4 class=\"widget-title lighter\">\n\t\t<?php echo $t_question_title ?>\n\t</h4>\n</div>\n<div class=\"widget-body\">\n\t<div class=\"widget-main no-padding\">\n\t\t<div class=\"table-responsive\">\n\t\t\t<table class=\"table table-bordered table-condensed table-striped\">\n\t\t\t<tbody>\n<?php\n\tif( !$t_finished ) {\n?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th class=\"category\">\n\t\t\t\t\t\t<?php echo $t_question_title ?>\n\t\t\t\t\t</th>\n\t\t\t\t\t<td>\n<?php\n\t\tif( $f_action === 'CUSTOM' ) {\n\t\t\t$t_custom_field_def = custom_field_get_definition( $t_custom_field_id );\n\n\t\t\t$t_bug_id = null;\n\n\t\t\t# if there is only one issue, use its current value as default, otherwise,\n\t\t\t# use the default value specified in custom field definition.\n\t\t\tif( count( $f_bug_arr ) == 1 ) {\n\t\t\t\t$t_bug_id = $f_bug_arr[0];\n\t\t\t}\n\n\t\t\tprint_custom_field_input( $t_custom_field_def, $t_bug_id );\n\t\t} else if ( $f_action === 'UP_DUE_DATE' ) {\n\t\t\t$t_date_to_display = '';\n\t\t\t# if there is only one issue, use its current value as default\n\t\t\tif( count( $f_bug_arr ) == 1 ) {\n\t\t\t\t$t_bug_id = $f_bug_arr[0];\n\t\t\t\t$t_bug = bug_get( $t_bug_id );\n\t\t\t\tif( !date_is_null( $t_bug->due_date ) ) {\n\t\t\t\t\t$t_date_to_display = date( config_get( 'normal_date_format' ), $t_bug->due_date );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\techo '<input type=\"text\" id=\"due_date\" name=\"due_date\" class=\"datetimepicker input-sm\" size=\"16\" maxlength=\"16\" ' .\n\t\t\t\t'data-picker-locale=\"' . lang_get_current_datetime_locale() .\n\t\t\t\t'\" data-picker-format=\"' . config_get( 'datetime_picker_format' ) . '\"' .\n\t\t\t\t'\" value=\"' . $t_date_to_display . '\" />';\n\t\t\techo '<i class=\"fa fa-calendar fa-xlg datetimepicker\"></i>';\n\t\t} else {\n\t\t\techo '<select name=\"' . $t_form . '\" class=\"input-sm\" required>';\n\n\t\t\tswitch( $f_action ) {\n\t\t\t\tcase 'COPY':\n\t\t\t\tcase 'MOVE':\n\t\t\t\t\tprint_project_option_list( null /* $p_project_id */, false /* $p_include_all_projects */,\n\t\t\t\t\t\t\tnull /* $p_filter_project_id */, false /* $p_trace */, true /* $p_can_report_only */ );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ASSIGN':\n\t\t\t\t\tprint_assign_to_option_list( 0, $t_project_id );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'RESOLVE':\n\t\t\t\t\tprint_enum_string_option_list( 'resolution', config_get( 'bug_resolution_fixed_threshold' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_PRIOR':\n\t\t\t\t\tprint_enum_string_option_list( 'priority', config_get( 'default_bug_priority' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_STATUS':\n\t\t\t\t\tprint_enum_string_option_list( 'status', config_get( 'bug_submit_status' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_CATEGORY':\n\t\t\t\t\tprint_category_option_list();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VIEW_STATUS':\n\t\t\t\t\tprint_enum_string_option_list( 'view_state', config_get( 'default_bug_view_status' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_TARGET_VERSION':\n\t\t\t\t\tprint_version_option_list( '', $t_projects, VERSION_FUTURE, true );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_PRODUCT_VERSION':\n\t\t\t\tcase 'UP_FIXED_IN_VERSION':\n\t\t\t\t\tprint_version_option_list( '', $t_projects, VERSION_ALL, true );\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\techo '</select>';\n\t\t}\n?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n<?php\n\t\tif( isset( $t_question_title2 ) ) {\n\t\t\tswitch( $f_action ) {\n\t\t\t\tcase 'RESOLVE':\n\t\t\t\t\t$t_show_product_version = ( ON == config_get( 'show_product_version' ) )\n\t\t\t\t\t\t|| ( ( AUTO == config_get( 'show_product_version' ) )\n\t\t\t\t\t\t\t\t\t&& ( count( version_get_all_rows( $t_project_id ) ) > 0 ) );\n\t\t\t\t\tif( $t_show_product_version ) {\n?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th class=\"category\">\n\t\t\t\t\t\t<?php echo $t_question_title2 ?>\n\t\t\t\t\t</th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select name=\"<?php echo $t_form2 ?>\" class=\"input-sm\">\n\t\t\t\t\t\t\t<?php print_version_option_list( '', null, VERSION_ALL );?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n<?php\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else {\n?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th class=\"category\" colspan=\"2\">\n\t\t\t\t\t\t<?php echo $t_question_title; ?>\n\t\t\t\t\t</th>\n\t\t\t\t</tr>\n<?php\n\t}\n\n\t# signal plugin event for additional fields\n\tevent_signal( 'EVENT_BUG_ACTIONGROUP_FORM', array( $t_event_params ) );\n\n\tif( $t_bugnote ) {\n\t\t$t_default_bugnote_view_status = config_get( 'default_bugnote_view_status' );\n\t\t$t_bugnote_private = $t_default_bugnote_view_status == VS_PRIVATE;\n\t\t$t_bugnote_class = $t_bugnote_private ? 'form-control bugnote-private' : 'form-control';\n\n?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th class=\"category\">\n\t\t\t\t\t\t<?php echo lang_get( 'add_bugnote_title' ); ?>\n\t\t\t\t\t</th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<textarea name=\"bugnote_text\" id=\"bugnote_text\" class=\"<?php echo $t_bugnote_class ?>\" cols=\"80\" rows=\"7\"></textarea>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n<?php\n\t\tif( access_has_project_level( config_get( 'private_bugnote_threshold' ), $t_project_id ) ) {\n?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th class=\"category\">\n\t\t\t\t\t\t<?php echo lang_get( 'view_status' ) ?>\n\t\t\t\t\t</th>\n\t\t\t\t\t<td>\n<?php\n\t\t\tif( access_has_project_level( config_get( 'set_view_status_threshold' ), $t_project_id ) ) {\n?>\n\t\t\t\t\t\t<input type=\"checkbox\" class=\"ace\" name=\"private\" <?php check_checked( $t_default_bugnote_view_status, VS_PRIVATE ); ?> />\n\t\t\t\t\t\t<label class=\"lbl padding-6\"><?php echo lang_get( 'private' ); ?></label>\n<?php\n\t\t\t} else {\n\t\t\t\techo get_enum_element( 'view_state', $t_default_bugnote_view_status );\n\t\t\t}\n?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n<?php\n\t\t}\n\t}\n?>\n\t\t<tr class=\"spacer\"></tr>\n\t\t<?php bug_group_action_print_bug_list( $f_bug_arr ); ?>\n\t\t<tr class=\"spacer\"></tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t</div>\n\t\t</div>\n\t\t<div class=\"widget-toolbox padding-8 clearfix\">\n\t\t\t<input type=\"submit\" class=\"btn btn-primary btn-white btn-round\" value=\"<?php echo $t_button_title ?>\" />\n\t\t</div>\n\t\t</div>\n\t\t</div>\n\t</form>\n</div>\n</div>\n\n<?php\nbug_group_action_print_bottom();\n"], "filenames": ["bug_actiongroup_page.php"], "buggy_code_start_loc": [228], "buggy_code_end_loc": [229], "fixing_code_start_loc": [228], "fixing_code_end_loc": [231], "type": "CWE-79", "message": "An issue was discovered in MantisBT before 2.24.3. Improper escaping of a custom field's name allows an attacker to inject HTML and, if CSP settings permit, achieve execution of arbitrary JavaScript when attempting to update said custom field via bug_actiongroup_page.php.", "other": {"cve": {"id": "CVE-2020-25830", "sourceIdentifier": "cve@mitre.org", "published": "2020-09-30T21:15:13.293", "lastModified": "2020-10-13T18:10:33.380", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "An issue was discovered in MantisBT before 2.24.3. Improper escaping of a custom field's name allows an attacker to inject HTML and, if CSP settings permit, achieve execution of arbitrary JavaScript when attempting to update said custom field via bug_actiongroup_page.php."}, {"lang": "es", "value": "Se detect\u00f3 un problema en MantisBT versiones anteriores a 2.24.3.&#xa0;Un escape inapropiado de un nombre de campo personalizado permite a un atacante inyectar HTML y, si la configuraci\u00f3n de CSP lo permite, lograr una ejecuci\u00f3n de JavaScript arbitrario cuando intenta actualizar dicho campo personalizado por medio del archivo bug_actiongroup_page.php"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.24.3", "matchCriteriaId": "AAC99001-43F4-461D-9C3A-AB33CA4B9F94"}]}]}], "references": [{"url": "http://github.com/mantisbt/mantisbt/commit/8c6f4d8859785b67fb80ac65100ac5259ed9237d", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://mantisbt.org/bugs/view.php?id=27304", "source": "cve@mitre.org", "tags": ["Exploit", "Patch", "Vendor Advisory"]}]}, "github_commit_url": "http://github.com/mantisbt/mantisbt/commit/8c6f4d8859785b67fb80ac65100ac5259ed9237d"}}