{"buggy_code": ["HOME_DIR/\\.yubico(/.*)?\t\t\t\t    gen_context(system_u:object_r:auth_home_t,s0)\nHOME_DIR/\\.google_authenticator\t\t\tgen_context(system_u:object_r:auth_home_t,s0)\nHOME_DIR/\\.google_authenticator~\t\tgen_context(system_u:object_r:auth_home_t,s0)\n/root/\\.yubico(/.*)?                    gen_context(system_u:object_r:auth_home_t,s0)\n/root/\\.google_authenticator\t\t\tgen_context(system_u:object_r:auth_home_t,s0)\n/root/\\.google_authenticator~\t\t\tgen_context(system_u:object_r:auth_home_t,s0)\n\n/bin/login\t\t--\tgen_context(system_u:object_r:login_exec_t,s0)\n\n/etc/group\\.lock\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n/etc/gshadow.*\t\t--\tgen_context(system_u:object_r:shadow_t,s0)\n/etc/nshadow.*\t\t--\tgen_context(system_u:object_r:shadow_t,s0)\n/etc/shadow.*\t\t--\tgen_context(system_u:object_r:shadow_t,s0)\n/etc/security/opasswd\t--\tgen_context(system_u:object_r:shadow_t,s0)\n/etc/security/opasswd\\.old\t--\tgen_context(system_u:object_r:shadow_t,s0)\n/etc/passwd\\.lock\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n/etc/passwd\\.adjunct.*\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n/etc/\\.pwd\\.lock\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n/etc/passwd[-\\+]?\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n/etc/passwd\\.OLD\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n/etc/ptmptmp\t\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n/etc/group[-\\+]?\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n\n/sbin/pam_console_apply\t --\tgen_context(system_u:object_r:pam_console_exec_t,s0)\n/sbin/pam_timestamp_check --\tgen_context(system_u:object_r:pam_timestamp_exec_t,s0)\n/sbin/unix_chkpwd\t--\tgen_context(system_u:object_r:chkpwd_exec_t,s0)\n/sbin/unix_update\t--\tgen_context(system_u:object_r:updpwd_exec_t,s0)\n/sbin/unix_verify\t--\tgen_context(system_u:object_r:chkpwd_exec_t,s0)\nifdef(`distro_suse', `\n/sbin/unix2_chkpwd\t--\tgen_context(system_u:object_r:chkpwd_exec_t,s0)\n')\n\n/usr/bin/login\t\t--\tgen_context(system_u:object_r:login_exec_t,s0)\n\n/usr/kerberos/sbin/login\\.krb5 -- gen_context(system_u:object_r:login_exec_t,s0)\n\n/usr/sbin/pam_console_apply\t --\tgen_context(system_u:object_r:pam_console_exec_t,s0)\n/usr/sbin/pam_timestamp_check\t --\tgen_context(system_u:object_r:pam_timestamp_exec_t,s0)\n/usr/sbin/pwhistory_helper  --  gen_context(system_u:object_r:updpwd_exec_t,s0)\n/usr/sbin/unix_chkpwd\t--\tgen_context(system_u:object_r:chkpwd_exec_t,s0)\n/usr/sbin/unix_update\t--\tgen_context(system_u:object_r:updpwd_exec_t,s0)\n/usr/sbin/unix_verify\t--\tgen_context(system_u:object_r:chkpwd_exec_t,s0)\nifdef(`distro_gentoo', `\n/usr/sbin/unix_chkpwd\t--\tgen_context(system_u:object_r:chkpwd_exec_t,s0)\n')\n/usr/sbin/utempter\t--\tgen_context(system_u:object_r:utempter_exec_t,s0)\n/usr/sbin/validate\t--\tgen_context(system_u:object_r:chkpwd_exec_t,s0)\n\n/usr/libexec/utempter/utempter \t--\tgen_context(system_u:object_r:utempter_exec_t,s0)\n\n/var/ace(/.*)?\t\t\tgen_context(system_u:object_r:var_auth_t,s0)\n\n/var/opt/quest/vas/vasd(/.*)?\tgen_context(system_u:object_r:var_auth_t,s0)\n\n/var/cache/coolkey(/.*)?\tgen_context(system_u:object_r:auth_cache_t,s0)\n\n/var/db/shadow.*\t--\tgen_context(system_u:object_r:shadow_t,s0)\n\n/var/lib/abl(/.*)?\t\tgen_context(system_u:object_r:var_auth_t,s0)\n/var/lib/pam_ssh(/.*)?\t\tgen_context(system_u:object_r:var_auth_t,s0)\n/var/lib/pam_shield(/.*)?\tgen_context(system_u:object_r:var_auth_t,s0)\n/var/lib/google-authenticator(/.*)?\tgen_context(system_u:object_r:var_auth_t,s0)\n\n/var/log/btmp.*\t\t--\tgen_context(system_u:object_r:faillog_t,s0)\n/var/log/dmesg\t\t--\tgen_context(system_u:object_r:var_log_t,s0)\n/var/log/faillog.*\t--\tgen_context(system_u:object_r:faillog_t,s0)\n/var/log/lastlog.*\t--\tgen_context(system_u:object_r:lastlog_t,s0)\n/var/log/syslog\t\t--\tgen_context(system_u:object_r:var_log_t,s0)\n/var/log/tallylog.*\t--\tgen_context(system_u:object_r:faillog_t,s0)\n/var/log/wtmp.*\t\t--\tgen_context(system_u:object_r:wtmp_t,s0)\n\n/var/lib/rsa(/.*)? \t\tgen_context(system_u:object_r:var_auth_t,s0)\n/var/rsa(/.*)?\t \t\tgen_context(system_u:object_r:var_auth_t,s0)\n\n/var/run/console(/.*)?\t \tgen_context(system_u:object_r:pam_var_console_t,s0)\n/var/run/faillock(/.*)?\t\tgen_context(system_u:object_r:faillog_t,s0)\n/var/run/motd\t\t--\tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/run/motd\\.d(/.*)?\t\tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/run/pam_mount(/.*)?\tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/run/pam_ssh(/.*)?\t\tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/run/pam_timestamp(/.*)?\tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/run/sepermit(/.*)? \tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/run/sudo(/.*)?\t\tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/(db|adm)/sudo(/.*)?\tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/lib/sudo(/.*)?\tgen_context(system_u:object_r:pam_var_run_t,s0)\n", "## <summary>Common policy for authentication and user login.</summary>\n\n########################################\n## <summary>\n##\tRole access for password authentication.\n## </summary>\n## <param name=\"role\">\n##\t<summary>\n##\tRole allowed access.\n##\t</summary>\n## </param>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_role',`\n\tgen_require(`\n\t\ttype chkpwd_t, chkpwd_exec_t, shadow_t;\n\t')\n\n\trole $1 types chkpwd_t;\n\n\t# Transition from the user domain to this domain.\n\tauth_domtrans_chkpwd($2)\n\n\tps_process_pattern($2, chkpwd_t)\n\n\tdontaudit $2 shadow_t:file read_file_perms;\n\n\tlogging_send_syslog_msg($2)\n\tlogging_send_audit_msgs($2)\n\n\tusermanage_read_crack_db($2)\n\n')\n\n########################################\n## <summary>\n##\tUse PAM for authentication.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_use_pam',`\n\n\t# for SSP/ProPolice\n\tdev_read_urand($1)\n\t# for encrypted homedir\n\tdev_read_sysfs($1)\n\n\tauth_domtrans_chk_passwd($1)\n\tauth_domtrans_upd_passwd($1)\n\tauth_dontaudit_read_shadow($1)\n\tauth_read_login_records($1)\n\tauth_append_login_records($1)\n\tauth_rw_lastlog($1)\n\tauth_create_lastlog($1)\n\tauth_manage_faillog($1)\n\tauth_exec_pam($1)\n\tauth_use_nsswitch($1)\n\n\tinit_rw_stream_sockets($1)\n\n\tlogging_send_audit_msgs($1)\n\tlogging_send_syslog_msg($1)\n\n\tuserdom_search_user_tmp_dirs($1)\n\n\toptional_policy(`\n\t\tdbus_system_bus_client($1)\n\n\t\toptional_policy(`\n\t\t\tconsolekit_dbus_chat($1)\n\t\t')\n\n\t\toptional_policy(`\n\t\t\tfprintd_dbus_chat($1)\n\t\t')\n\t')\n\n\toptional_policy(`\n\t\tkerberos_manage_host_rcache($1)\n\t\tkerberos_read_config($1)\n\t')\n\n\toptional_policy(`\n\t\tlocallogin_getattr_home_content($1)\n \t')\n\n\toptional_policy(`\n\t\tnis_authenticate($1)\n\t')\n\n\toptional_policy(`\n\t\tsystemd_dbus_chat_logind($1)\n\t\tsystemd_use_fds_logind($1)\n\t\tsystemd_write_inherited_logind_sessions_pipes($1)\n\t\tsystemd_read_logind_sessions_files($1)\n\t')\n')\n\n########################################\n## <summary>\n##\tMake the specified domain used for a login program.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain type used for a login program domain.\n##\t</summary>\n## </param>\n#\ninterface(`auth_login_pgm_domain',`\n\tgen_require(`\n\t\ttype var_auth_t, auth_cache_t;\n\t\tattribute polydomain;\n\t\tattribute login_pgm;\n\t')\n\n\tdomain_type($1)\n\ttypeattribute $1 polydomain;\n\ttypeattribute $1 login_pgm;\n\n\tdomain_subj_id_change_exemption($1)\n\tdomain_role_change_exemption($1)\n\tdomain_obj_id_change_exemption($1)\n\trole system_r types $1;\n\n\tselinux_get_fs_mount($1)\n\n\tmls_file_read_all_levels($1)\n\tmls_file_write_all_levels($1)\n\tmls_file_upgrade($1)\n\tmls_file_downgrade($1)\n\tmls_process_set_level($1)\n    mls_process_write_to_clearance($1)\n\tmls_fd_share_all_levels($1)\n\n\tauth_use_pam($1)\n')\n\n########################################\n## <summary>\n##\tRead authlogin state files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`authlogin_read_state',`\n\tgen_require(`\n\t\tattribute polydomain;\n\t')\n\n\tkernel_search_proc($1)\n\tps_process_pattern($1, polydomain)\n')\n\n########################################\n## <summary>\n##\tRead and write a authlogin unnamed pipe.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`authlogin_rw_pipes',`\n\tgen_require(`\n\t\tattribute polydomain;\n\t')\n\n\tallow $1 polydomain:fifo_file rw_inherited_fifo_file_perms;\n')\n\n########################################\n## <summary>\n##\tUse the login program as an entry point program.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_login_entry_type',`\n\tgen_require(`\n\t\ttype login_exec_t;\n\t')\n\n\tdomain_entry_file($1, login_exec_t)\n')\n\n########################################\n## <summary>\n##\tMake the specified type usable as a\n##\tlogin file.\n## </summary>\n## <desc>\n##\t<p>\n##\tMake the specified type usable as a login file,\n##\tThis type has restricted modification capabilities when used with\n##\tother interfaces that permit files_type access.\n##\tThe default type has properties similar to that of the shadow file.\n##\tThis will also make the type usable as a security file, making\n##\tcalls to files_security_file() redundant.\n##\t</p>\n## </desc>\n## <param name=\"type\">\n##\t<summary>\n##\tType to be used as a login file.\n##\t</summary>\n## </param>\n## <infoflow type=\"none\"/>\n#\ninterface(`auth_file',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_auth_file() instead.')\n\tfiles_auth_file($1)\n')\n\n########################################\n## <summary>\n##\tExecute a login_program in the target domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n## <param name=\"target_domain\">\n##\t<summary>\n##\tThe type of the login_program process.\n##\t</summary>\n## </param>\n#\ninterface(`auth_domtrans_login_program',`\n\tgen_require(`\n\t\ttype login_exec_t;\n\t')\n\n\tcorecmd_search_bin($1)\n\tdomtrans_pattern($1, login_exec_t, $2)\n    allow $1 login_exec_t:file map;\n')\n\n########################################\n## <summary>\n##\tExecute a login_program in the caller domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n#\ninterface(`auth_exec_login_program',`\n\tgen_require(`\n\t\ttype login_exec_t;\n\t')\n\n\tcorecmd_search_bin($1)\n\tcan_exec($1, login_exec_t)\n')\n\n########################################\n## <summary>\n##\tExecute a login_program in the target domain,\n##\twith a range transition.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n## <param name=\"target_domain\">\n##\t<summary>\n##\tThe type of the login_program process.\n##\t</summary>\n## </param>\n## <param name=\"range\">\n##\t<summary>\n##\tRange of the login program.\n##\t</summary>\n## </param>\n#\ninterface(`auth_ranged_domtrans_login_program',`\n\tgen_require(`\n\t\ttype login_exec_t;\n\t')\n\n\tauth_domtrans_login_program($1, $2)\n\n\tifdef(`enable_mcs',`\n\t\trange_transition $1 login_exec_t:process $3;\n\t')\n\n\tifdef(`enable_mls',`\n\t\trange_transition $1 login_exec_t:process $3;\n\t')\n')\n\n########################################\n## <summary>\n##\tSearch authentication cache\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_search_cache',`\n\tgen_require(`\n\t\ttype auth_cache_t;\n\t')\n\n\tallow $1 auth_cache_t:dir search_dir_perms;\n')\n\n########################################\n## <summary>\n##\tRead authentication cache\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_cache',`\n\tgen_require(`\n\t\ttype auth_cache_t;\n\t')\n\n\tread_files_pattern($1, auth_cache_t, auth_cache_t)\n')\n\n########################################\n## <summary>\n##\tRead/Write authentication cache\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_rw_cache',`\n\tgen_require(`\n\t\ttype auth_cache_t;\n\t')\n\n\trw_files_pattern($1, auth_cache_t, auth_cache_t)\n')\n\n########################################\n## <summary>\n##\tCreate authentication cache\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_create_cache',`\n\tgen_require(`\n\t\ttype auth_cache_t;\n\t')\n\n\tcreate_files_pattern($1, auth_cache_t, auth_cache_t)\n')\n\n########################################\n## <summary>\n##\tManage authentication cache\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_cache',`\n\tgen_require(`\n\t\ttype auth_cache_t;\n\t')\n\n\tmanage_dirs_pattern($1, auth_cache_t, auth_cache_t)\n\tmanage_files_pattern($1, auth_cache_t, auth_cache_t)\n    allow $1 auth_cache_t:file map;\n')\n\n#######################################\n## <summary>\n##\tAutomatic transition from cache_t to cache.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_var_filetrans_cache',`\n\tgen_require(`\n\t\ttype auth_cache_t;\n\t')\n\n\tfiles_var_filetrans($1, auth_cache_t, { file dir } )\n')\n\n########################################\n## <summary>\n##\tRun unix_chkpwd to check a password.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n#\ninterface(`auth_domtrans_chk_passwd',`\n\tgen_require(`\n\t\ttype chkpwd_t, chkpwd_exec_t, shadow_t;\n\t\ttype auth_cache_t;\n\t')\n\n\tallow $1 auth_cache_t:dir search_dir_perms;\n\n\tcorecmd_search_bin($1)\n\tdomtrans_pattern($1, chkpwd_exec_t, chkpwd_t)\n    allow $1 chkpwd_exec_t:file map;\n\n\tdontaudit $1 shadow_t:file read_file_perms;\n\n\tdev_read_rand($1)\n\tdev_read_urand($1)\n\n\tauth_use_nsswitch($1)\n\tauth_rw_faillog($1)\n\n\tlogging_send_audit_msgs($1)\n\n\tmiscfiles_read_generic_certs($1)\n\n\toptional_policy(`\n\t\tkerberos_read_keytab($1)\n\t')\n\n\toptional_policy(`\n\t\tpcscd_read_pid_files($1)\n\t\tpcscd_stream_connect($1)\n\t')\n\n\toptional_policy(`\n\t\tsamba_stream_connect_winbind($1)\n\t')\n\n\tauth_domtrans_upd_passwd($1)\n')\n\n########################################\n## <summary>\n##\tRun unix_chkpwd to check a password.\n## \tStripped down version to be called within boolean\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n#\ninterface(`auth_domtrans_chkpwd',`\n\tgen_require(`\n\t\ttype chkpwd_t, chkpwd_exec_t, shadow_t;\n\t')\n\n\tcorecmd_search_bin($1)\n\tdomtrans_pattern($1, chkpwd_exec_t, chkpwd_t)\n\tdontaudit $1 shadow_t:file { getattr read };\n\tauth_domtrans_upd_passwd($1)\n')\n\n########################################\n## <summary>\n##  Execute chkpwd in the caller domain.\n## </summary>\n## <param name=\"domain\">\n##  <summary>\n##  Domain allowed to transition.\n##  </summary>\n##  </param>\n#\ninterface(`auth_exec_chkpwd',`\n    gen_require(`\n        type chkpwd_exec_t;\n    ')\n\n    allow $1 chkpwd_exec_t:file execute;\n')\n\n########################################\n## <summary>\n##\tExecute chkpwd programs in the chkpwd domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n## <param name=\"role\">\n##\t<summary>\n##\tThe role to allow the chkpwd domain.\n##\t</summary>\n## </param>\n#\ninterface(`auth_run_chk_passwd',`\n\tgen_require(`\n\t\ttype chkpwd_t;\n\t')\n\n\tauth_domtrans_chk_passwd($1)\n\trole $2 types chkpwd_t;\n\tauth_run_upd_passwd($1, $2)\n')\n\n########################################\n## <summary>\n##\tSend generic signals to chkpwd processes.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_signal_chk_passwd',`\n\tgen_require(`\n\t\ttype chkpwd_t;\n\t')\n\n\tallow $1 chkpwd_t:process signal;\n')\n\n########################################\n## <summary>\n##\tExecute a domain transition to run unix_update.\n## </summary>\n## <param name=\"domain\">\n## <summary>\n##\tDomain allowed to transition.\n## </summary>\n## </param>\n#\ninterface(`auth_domtrans_upd_passwd',`\n\tgen_require(`\n\t\ttype updpwd_t, updpwd_exec_t;\n\t')\n\n\tdomtrans_pattern($1, updpwd_exec_t, updpwd_t)\n\tauth_dontaudit_read_shadow($1)\n')\n\n########################################\n## <summary>\n##\tExecute updpwd programs in the updpwd domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n## <param name=\"role\">\n##\t<summary>\n##\tThe role to allow the updpwd domain.\n##\t</summary>\n## </param>\n#\ninterface(`auth_run_upd_passwd',`\n\tgen_require(`\n\t\ttype updpwd_t;\n\t')\n\n\tauth_domtrans_upd_passwd($1)\n\trole $2 types updpwd_t;\n')\n\n########################################\n## <summary>\n##\tGet the attributes of the shadow passwords file.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_getattr_shadow',`\n\tgen_require(`\n\t\ttype shadow_t;\n\t')\n\n\tfiles_search_etc($1)\n\tallow $1 shadow_t:file getattr;\n')\n\n########################################\n## <summary>\n##\tDo not audit attempts to get the attributes\n##\tof the shadow passwords file.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n#\ninterface(`auth_dontaudit_getattr_shadow',`\n\tgen_require(`\n\t\ttype shadow_t;\n\t')\n\n\tdontaudit $1 shadow_t:file getattr;\n')\n\n########################################\n## <summary>\n## Mmap the shadow passwords file.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_map_shadow',`\n\tgen_require(`\n\t\ttype shadow_t;\n\t')\n\n\tallow $1 shadow_t:file map;\n')\n\n########################################\n## <summary>\n##\tRead the shadow passwords file (/etc/shadow)\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\n# cjp: these next three interfaces are split\n# since typeattribute does not work in conditionals\n# yet, otherwise they should be one interface.\n#\ninterface(`auth_read_shadow',`\n\tauth_can_read_shadow_passwords($1)\n\tauth_tunable_read_shadow($1)\n')\n\n########################################\n## <summary>\n##\tPass shadow assertion for reading.\n## </summary>\n## <desc>\n##\t<p>\n##\tPass shadow assertion for reading.\n##\tThis should only be used with\n##\tauth_tunable_read_shadow(), and\n##\tonly exists because typeattribute\n##\tdoes not work in conditionals.\n##\t</p>\n## </desc>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_can_read_shadow_passwords',`\n\tgen_require(`\n\t\tattribute can_read_shadow_passwords;\n\t')\n\n\ttypeattribute $1 can_read_shadow_passwords;\n')\n\n########################################\n## <summary>\n##\tRead the shadow password file.\n## </summary>\n## <desc>\n##\t<p>\n##\tRead the shadow password file.  This\n##\tshould only be used in a conditional;\n##\tit does not pass the reading shadow\n##\tassertion.\n##\t</p>\n## </desc>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_tunable_read_shadow',`\n\tgen_require(`\n\t\ttype shadow_t;\n\t')\n\n\tfiles_list_etc($1)\n\tallow $1 shadow_t:file read_file_perms;\n')\n\n########################################\n## <summary>\n##\tDo not audit attempts to read the shadow\n##\tpassword file (/etc/shadow).\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n#\ninterface(`auth_dontaudit_read_shadow',`\n\tgen_require(`\n\t\ttype shadow_t;\n\t')\n\n\tdontaudit $1 shadow_t:file read_file_perms;\n')\n\n########################################\n## <summary>\n##\tRead and write the shadow password file (/etc/shadow).\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_rw_shadow',`\n\tgen_require(`\n\t\tattribute can_read_shadow_passwords, can_write_shadow_passwords;\n\t\ttype shadow_t;\n\t')\n\n\tfiles_list_etc($1)\n\tallow $1 shadow_t:file rw_file_perms;\n\ttypeattribute $1 can_read_shadow_passwords, can_write_shadow_passwords;\n')\n\n########################################\n## <summary>\n##\tCreate, read, write, and delete the shadow\n##\tpassword file.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_shadow',`\n\tgen_require(`\n\t\tattribute can_read_shadow_passwords, can_write_shadow_passwords;\n\t\ttype shadow_t;\n\t')\n\n\tallow $1 shadow_t:file manage_file_perms;\n\ttypeattribute $1 can_read_shadow_passwords, can_write_shadow_passwords;\n\tfiles_var_filetrans($1, shadow_t, file, \"shadow\")\n\tfiles_var_filetrans($1, shadow_t, file, \"shadow-\")\n\tfiles_etc_filetrans($1, shadow_t, file, \"gshadow\")\n\tfiles_etc_filetrans($1, shadow_t, file, \"nshadow\")\n\tfiles_etc_filetrans($1, shadow_t, file, \"opasswd\")\n')\n\n#######################################\n## <summary>\n##\tAutomatic transition from etc to shadow.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_etc_filetrans_shadow',`\n\tgen_require(`\n\t\ttype shadow_t;\n\t')\n\n\tfiles_etc_filetrans($1, shadow_t, file)\n')\n\n#######################################\n## <summary>\n##\tRelabel to the shadow\n##\tpassword file type.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabelto_shadow',`\n\tgen_require(`\n\t\tattribute can_relabelto_shadow_passwords;\n\t\ttype shadow_t;\n\t')\n\n\tfiles_search_etc($1)\n\tallow $1 shadow_t:file relabelto;\n\ttypeattribute $1 can_relabelto_shadow_passwords;\n')\n\n#######################################\n## <summary>\n##\tRelabel from and to the shadow\n##\tpassword file type.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabel_shadow',`\n\tgen_require(`\n\t\tattribute can_relabelto_shadow_passwords;\n\t\ttype shadow_t;\n\t')\n\n\tfiles_search_etc($1)\n\tallow $1 shadow_t:file relabel_file_perms;\n\ttypeattribute $1 can_relabelto_shadow_passwords;\n')\n\n#######################################\n## <summary>\n##\tAppend to the login failure log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_append_faillog',`\n\tgen_require(`\n\t\ttype faillog_t;\n\t')\n\n\tlogging_search_logs($1)\n\tallow $1 faillog_t:file append_file_perms;\n')\n\n########################################\n## <summary>\n##\tRead and write the login failure log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_rw_faillog',`\n\tgen_require(`\n\t\ttype faillog_t;\n\t')\n\n\tlogging_search_logs($1)\n\trw_files_pattern($1, faillog_t, faillog_t)\n')\n\n########################################\n## <summary>\n##\tRelabel the login failure log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabel_faillog',`\n\tgen_require(`\n\t\ttype faillog_t;\n\t')\n\n\tallow $1 faillog_t:dir relabel_dir_perms;\n\tallow $1 faillog_t:file relabel_file_perms;\n')\n\n########################################\n## <summary>\n##\tManage the login failure log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_faillog',`\n\tgen_require(`\n\t\ttype faillog_t;\n\t')\n\n\tlogging_search_logs($1)\n\tfiles_search_pids($1)\n\tallow $1 faillog_t:dir manage_dir_perms;\n\tallow $1 faillog_t:file manage_file_perms;\n\tlogging_log_named_filetrans($1, faillog_t, file, \"tallylog\")\n\tlogging_log_named_filetrans($1, faillog_t, file, \"faillog\")\n\tlogging_log_named_filetrans($1, faillog_t, file, \"btmp\")\n')\n\n#######################################\n## <summary>\n##\tRead the last logins log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <rolecap/>\n#\ninterface(`auth_read_lastlog',`\n\tgen_require(`\n\t\ttype lastlog_t;\n\t')\n\n\tlogging_search_logs($1)\n\tallow $1 lastlog_t:file read_file_perms;\n')\n\n#######################################\n## <summary>\n##\tAppend only to the last logins log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_append_lastlog',`\n\tgen_require(`\n\t\ttype lastlog_t;\n\t')\n\n\tlogging_search_logs($1)\n\tallow $1 lastlog_t:file { append_file_perms lock };\n')\n\n#######################################\n## <summary>\n##\tRead and write to the last logins log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_rw_lastlog',`\n\tgen_require(`\n\t\ttype lastlog_t;\n\t')\n\n\tlogging_search_logs($1)\n\tallow $1 lastlog_t:file { rw_file_perms lock setattr };\n')\n\n#######################################\n## <summary>\n##\tManage create logins log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_create_lastlog',`\n\tgen_require(`\n\t\ttype lastlog_t;\n\t')\n\n\tlogging_search_logs($1)\n\tallow $1 lastlog_t:file create;\n\tlogging_log_named_filetrans($1, lastlog_t, file, \"lastlog\")\n')\n\n########################################\n## <summary>\n##\tExecute pam timestamp programs in the pam timestamp domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n#\ninterface(`auth_domtrans_pam_timestamp',`\n\tgen_require(`\n\t\ttype pam_timestamp_t, pam_timestamp_exec_t;\n\t')\n\n\tdomtrans_pattern($1, pam_timestamp_exec_t, pam_timestamp_t)\n')\n\n########################################\n## <summary>\n##\tExecute pam timestamp programs in the pam timestamp domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n#\ninterface(`auth_domtrans_pam',`\n\tauth_domtrans_pam_timestamp($1)\n\trefpolicywarn(`$0() has been deprecated, please use auth_domtrans_pam_timestamp() instead.')\n')\n\n########################################\n## <summary>\n##\tSend generic signals to pam processes.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_signal_pam',`\n\tgen_require(`\n\t\ttype pam_timestamp_t;\n\t')\n\n\tallow $1 pam_timestamp_t:process signal;\n')\n\n########################################\n## <summary>\n##\tExecute pam_timestamp programs in the PAM timestamp domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n## <param name=\"role\">\n##\t<summary>\n##\tThe role to allow the PAM domain.\n##\t</summary>\n## </param>\n#\ninterface(`auth_run_pam_timestamp',`\n\tgen_require(`\n\t\ttype pam_timestamp_t;\n\t')\n\n\tauth_domtrans_pam_timestamp($1)\n\trole $2 types pam_timestamp_t;\n')\n\n########################################\n## <summary>\n##\tExecute pam_timestamp programs in the PAM timestamp domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n## <param name=\"role\">\n##\t<summary>\n##\tThe role to allow the PAM domain.\n##\t</summary>\n## </param>\n#\ninterface(`auth_run_pam',`\n\tauth_run_pam_timestamp($1, $2)\n\trefpolicywarn(`$0() has been deprecated, please use auth_run_pam_timestamp.')\n')\n\n########################################\n## <summary>\n##\tExecute the pam program.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_exec_pam',`\n\tgen_require(`\n\t\ttype pam_exec_t;\n\t')\n\n\tcan_exec($1, pam_exec_t)\n')\n\n########################################\n## <summary>\n##\tRead var auth files. Used by various other applications\n##\tand pam applets etc.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_var_auth',`\n\tgen_require(`\n\t\ttype var_auth_t;\n\t')\n\n\tfiles_search_var($1)\n\tread_files_pattern($1, var_auth_t, var_auth_t)\n')\n\n#######################################\n## <summary>\n##  Read and write var auth files. Used by various other applications\n##  and pam applets etc.\n## </summary>\n## <param name=\"domain\">\n##  <summary>\n##  Domain allowed access.\n##  </summary>\n## </param>\n#\ninterface(`auth_rw_var_auth',`\n    gen_require(`\n\t\ttype var_auth_t;\n    ')\n\n    files_search_var($1)\n    rw_files_pattern($1, var_auth_t, var_auth_t)\n')\n\n########################################\n## <summary>\n##\tManage var auth files. Used by various other applications\n##\tand pam applets etc.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_var_auth',`\n\tgen_require(`\n\t\ttype var_auth_t;\n\t')\n\n\tfiles_search_var($1)\n\n\tmanage_dirs_pattern($1, var_auth_t, var_auth_t)\n\tmanage_files_pattern($1, var_auth_t, var_auth_t)\n\tmanage_lnk_files_pattern($1, var_auth_t, var_auth_t)\n')\n\n########################################\n## <summary>\n##\tRelabel all var auth files. Used by various other applications\n##\tand pam applets etc.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabel_var_auth_dirs',`\n\tgen_require(`\n\t\ttype var_auth_t;\n\t')\n\n\tfiles_search_var($1)\n\trelabel_dirs_pattern($1, var_auth_t, var_auth_t)\n')\n\n########################################\n## <summary>\n##\tRead PAM PID files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_pam_pid',`\n\tgen_require(`\n\t\ttype pam_var_run_t;\n\t')\n\n\tfiles_search_pids($1)\n\tallow $1 pam_var_run_t:dir list_dir_perms;\n\tallow $1 pam_var_run_t:file read_file_perms;\n')\n\n#######################################\n## <summary>\n##\tDo not audit attemps to read PAM PID files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n#\ninterface(`auth_dontaudit_read_pam_pid',`\n\tgen_require(`\n\t\ttype pam_var_run_t;\n\t')\n\n\tdontaudit $1 pam_var_run_t:file { getattr read };\n')\n\n########################################\n## <summary>\n##\tDelete pam PID files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_delete_pam_pid',`\n\tgen_require(`\n\t\ttype pam_var_run_t;\n\t')\n\n\tfiles_search_pids($1)\n\tallow $1 pam_var_run_t:dir del_entry_dir_perms;\n\tallow $1 pam_var_run_t:file delete_file_perms;\n')\n\n########################################\n## <summary>\n##\tManage pam PID files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_pam_pid',`\n\tgen_require(`\n\t\ttype pam_var_run_t;\n\t')\n\n\tfiles_search_pids($1)\n\tallow $1 pam_var_run_t:dir manage_dir_perms;\n\tallow $1 pam_var_run_t:file manage_file_perms;\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"pam_mount\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"pam_ssh\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"pam_timestamp\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"sepermit\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"sudo\")\n')\n\n########################################\n## <summary>\n##\tExecute pam_console with a domain transition.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n#\ninterface(`auth_domtrans_pam_console',`\n\tgen_require(`\n\t\ttype pam_console_t, pam_console_exec_t;\n\t')\n\n\tdomtrans_pattern($1, pam_console_exec_t, pam_console_t)\n')\n\n########################################\n## <summary>\n##\tSearch the contents of the\n##\tpam_console data directory.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_search_pam_console_data',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\tfiles_search_pids($1)\n\tallow $1 pam_var_console_t:dir search_dir_perms;\n')\n\n########################################\n## <summary>\n##\tList the contents of the pam_console\n##\tdata directory.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_list_pam_console_data',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\tfiles_search_pids($1)\n\tallow $1 pam_var_console_t:dir list_dir_perms;\n')\n\n########################################\n## <summary>\n##\tCreate pam var console pid directories.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_create_pam_console_data_dirs',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\tfiles_search_pids($1)\n\tallow $1 pam_var_console_t:dir create_dir_perms;\n')\n\n########################################\n## <summary>\n##\tRelabel pam_console data directories.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabel_pam_console_data_dirs',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\trelabel_dirs_pattern($1, pam_var_console_t, pam_var_console_t)\n')\n\n########################################\n## <summary>\n##\tRead pam_console data files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_pam_console_data',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\tfiles_search_pids($1)\n\tallow $1 pam_var_console_t:dir list_dir_perms;\n\tallow $1 pam_var_console_t:file read_file_perms;\n')\n\n########################################\n## <summary>\n##\tCreate, read, write, and delete\n##\tpam_console data files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_pam_console_data',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\tfiles_search_pids($1)\n\tmanage_files_pattern($1, pam_var_console_t, pam_var_console_t)\n\tmanage_lnk_files_pattern($1, pam_var_console_t, pam_var_console_t)\n\tfiles_pid_filetrans($1, pam_var_console_t, dir, \"console\")\n')\n\n#######################################\n## <summary>\n##\tDelete pam_console data.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_delete_pam_console_data',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\tfiles_search_var($1)\n\tfiles_search_pids($1)\n\tdelete_files_pattern($1, pam_var_console_t, pam_var_console_t)\n')\n\n########################################\n## <summary>\n##\tCreate specified objects in\n##\tpid directories with the pam var\n##      console pid file type using a\n##      file type transition.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"object_class\">\n##\t<summary>\n##\tClass of the object being created.\n##\t</summary>\n## </param>\n## <param name=\"name\" optional=\"true\">\n##\t<summary>\n##\tThe name of the object being created.\n##\t</summary>\n## </param>\n#\ninterface(`auth_pid_filetrans_pam_var_console',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\tfiles_pid_filetrans($1, pam_var_console_t, $2, $3)\n')\n\n########################################\n## <summary>\n##\tRead all directories on the filesystem, except\n##\tlogin files and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_all_dirs_except_auth_files',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_list_non_auth_dirs() instead.')\n\tfiles_list_non_auth_dirs($1)\n')\n\n########################################\n## <summary>\n##\tRead all directories on the filesystem, except\n##\tthe shadow passwords and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_all_dirs_except_shadow',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_list_non_auth_dirs() instead.')\n\tfiles_list_non_auth_dirs($1)\n')\n\n########################################\n## <summary>\n##\tRead all files on the filesystem, except\n##\tlogin files and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n## <rolecap/>\n#\ninterface(`auth_read_all_files_except_auth_files',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_read_non_auth_files() instead.')\n\tfiles_read_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tRead all files on the filesystem, except\n##\tthe shadow passwords and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n## <rolecap/>\n#\ninterface(`auth_read_all_files_except_shadow',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_read_non_auth_files() instead.')\n\tfiles_read_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tRead all symbolic links on the filesystem, except\n##\tlogin files and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_all_symlinks_except_auth_files',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_read_non_auth_symlinks() instead.')\n\tfiles_read_non_auth_symlinks($1)\n')\n\n########################################\n## <summary>\n##\tRead all symbolic links on the filesystem, except\n##\tthe shadow passwords and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_all_symlinks_except_shadow',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_read_non_auth_symlinks() instead.')\n\tfiles_read_non_auth_symlinks($1)\n')\n\n#######################################\n## <summary>\n##\tRelabel all files on the filesystem, except\n##\tlogin files and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabel_all_files_except_auth_files',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_relabel_non_auth_files() instead.')\n\tfiles_relabel_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tRelabel all files on the filesystem, except\n##\tthe shadow passwords and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabel_all_files_except_shadow',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_relabel_non_auth_files() instead.')\n\tfiles_relabel_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tRead and write all files on the filesystem, except\n##\tlogin files and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_rw_all_files_except_auth_files',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_rw_non_auth_files() instead.')\n\tfiles_rw_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tRead and write all files on the filesystem, except\n##\tthe shadow passwords and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_rw_all_files_except_shadow',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_rw_non_auth_files() instead.')\n\tfiles_rw_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tManage all files on the filesystem, except\n##\tlogin files passwords and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_all_files_except_auth_files',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_manage_non_auth_files() instead.')\n\tfiles_manage_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tManage all files on the filesystem, except\n##\tthe shadow passwords and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_all_files_except_shadow',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_manage_non_auth_files() instead.')\n\tfiles_manage_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tExecute utempter programs in the utempter domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n#\ninterface(`auth_domtrans_utempter',`\n\tgen_require(`\n\t\ttype utempter_t, utempter_exec_t;\n\t')\n\n\tdomtrans_pattern($1, utempter_exec_t, utempter_t)\n')\n\n########################################\n## <summary>\n##\tExecute utempter programs in the utempter domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n## <param name=\"role\">\n##\t<summary>\n##\tThe role to allow the utempter domain.\n##\t</summary>\n## </param>\n#\ninterface(`auth_run_utempter',`\n\tgen_require(`\n\t\ttype utempter_t;\n\t')\n\n\tauth_domtrans_utempter($1)\n\trole $2 types utempter_t;\n')\n\n#######################################\n## <summary>\n##\tDo not audit attemps to execute utempter executable.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n#\ninterface(`auth_dontaudit_exec_utempter',`\n\tgen_require(`\n\t\ttype utempter_exec_t;\n\t')\n\n\tdontaudit $1 utempter_exec_t:file { execute execute_no_trans };\n')\n\n########################################\n## <summary>\n##\tSet the attributes of login record files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_setattr_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tallow $1 wtmp_t:file setattr;\n\tlogging_search_logs($1)\n')\n\n########################################\n## <summary>\n##\tRelabel login record files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabel_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tallow $1 wtmp_t:file relabel_file_perms;\n')\n\n\n########################################\n## <summary>\n##\tRead login records files (/var/log/wtmp).\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <rolecap/>\n#\ninterface(`auth_read_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tlogging_search_logs($1)\n\tallow $1 wtmp_t:file read_file_perms;\n')\n\n########################################\n## <summary>\n##\tDo not audit attempts to read login records\n##\tfiles (/var/log/wtmp).\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n## <rolecap/>\n#\ninterface(`auth_dontaudit_read_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tdontaudit $1 wtmp_t:file read_file_perms;\n')\n\n########################################\n## <summary>\n##\tDo not audit attempts to write to\n##\tlogin records files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n#\ninterface(`auth_dontaudit_write_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tdontaudit $1 wtmp_t:file write;\n')\n\n#######################################\n## <summary>\n##\tAppend to login records (wtmp).\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_append_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tallow $1 wtmp_t:file append_file_perms;\n\tlogging_search_logs($1)\n')\n\n#######################################\n## <summary>\n##\tWrite to login records (wtmp).\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_write_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tallow $1 wtmp_t:file { write_file_perms lock };\n')\n\n########################################\n## <summary>\n##\tRead and write login records.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_rw_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tallow $1 wtmp_t:file rw_file_perms;\n\tlogging_search_logs($1)\n')\n\n########################################\n## <summary>\n##\tCreate a login records in the log directory\n##\tusing a type transition.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_log_filetrans_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tlogging_log_filetrans($1, wtmp_t, file)\n')\n\n########################################\n## <summary>\n##\tCreate, read, write, and delete login\n##\trecords files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tlogging_rw_generic_log_dirs($1)\n\tallow $1 wtmp_t:file manage_file_perms;\n\tlogging_log_named_filetrans($1, wtmp_t, file, \"wtmp\")\n')\n\n########################################\n## <summary>\n##\tRead access to the authlogin module.\n## </summary>\n## <desc>\n##\t<p>\n##\tRead access to the authlogin module.\n##\t</p>\n##\t<p>\n##\tCurrently, this only allows assertions for\n##\tthe shadow passwords file (/etc/shadow) to\n##\tbe passed.  No access is granted yet.\n##\t</p>\n## </desc>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_reader_shadow',`\n\tgen_require(`\n\t\tattribute can_read_shadow_passwords;\n\t')\n\n\ttypeattribute $1 can_read_shadow_passwords;\n')\n\n########################################\n## <summary>\n##\tWrite access to the authlogin module.\n## </summary>\n## <desc>\n##\t<p>\n##\tWrite access to the authlogin module.\n##\t</p>\n##\t<p>\n##\tCurrently, this only allows assertions for\n##\tthe shadow passwords file (/etc/shadow) to\n##\tbe passed.  No access is granted yet.\n##\t</p>\n## </desc>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_writer_shadow',`\n\tgen_require(`\n\t\tattribute can_write_shadow_passwords;\n\t')\n\n\ttypeattribute $1 can_write_shadow_passwords;\n')\n\n########################################\n## <summary>\n##\tUse nsswitch to look up user, password, group, or\n##\thost information.\n## </summary>\n## <desc>\n##\t<p>\n##\tAllow the specified domain to look up user, password,\n##\tgroup, or host information using the name service.\n##\tThe most common use of this interface is for services\n##\tthat do host name resolution (usually DNS resolution).\n##\t</p>\n## </desc>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <infoflow type=\"both\" weight=\"10\"/>\n#\ninterface(`auth_use_nsswitch',`\n\tgen_require(`\n\t\tattribute nsswitch_domain;\n\t')\n\n\ttypeattribute $1 nsswitch_domain;\n\n\tcorenet_all_recvfrom_netlabel($1)\n')\n\n########################################\n## <summary>\n##\tUnconfined access to the authlogin module.\n## </summary>\n## <desc>\n##\t<p>\n##\tUnconfined access to the authlogin module.\n##\t</p>\n##\t<p>\n##\tCurrently, this only allows assertions for\n##\tthe shadow passwords file (/etc/shadow) to\n##\tbe passed.  No access is granted yet.\n##\t</p>\n## </desc>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_unconfined',`\n\tgen_require(`\n\t\tattribute can_read_shadow_passwords;\n\t\tattribute can_write_shadow_passwords;\n\t\tattribute can_relabelto_shadow_passwords;\n\t')\n\n\ttypeattribute $1 can_read_shadow_passwords;\n\ttypeattribute $1 can_write_shadow_passwords;\n\ttypeattribute $1 can_relabelto_shadow_passwords;\n')\n\n########################################\n## <summary>\n##\tTransition to authlogin named content\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##      Domain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_filetrans_named_content',`\n\tgen_require(`\n\t\ttype shadow_t;\n\t\ttype passwd_file_t;\n\t\ttype faillog_t;\n\t\ttype lastlog_t;\n\t\ttype wtmp_t;\n\t\ttype pam_var_console_t;\n\t\ttype pam_var_run_t;\n\t\ttype auth_cache_t;\n\t')\n\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"group\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"group-\")\n\t#files_etc_filetrans($1, passwd_file_t, file, \"group+\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd-\")\n\t#files_etc_filetrans($1, passwd_file_t, file, \"passwd+\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd.OLD\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"ptmptmp\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd.lock\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"group.lock\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd.adjunct\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \".pwd.lock\")\n\tfiles_etc_filetrans($1, shadow_t, file, \"shadow\")\n\tfiles_etc_filetrans($1, shadow_t, file, \"shadow-\")\n\tfiles_etc_filetrans($1, shadow_t, file, \"gshadow\")\n\tfiles_etc_filetrans($1, shadow_t, file, \"opasswd\")\n\tlogging_log_named_filetrans($1, lastlog_t, file, \"lastlog\")\n\tlogging_log_named_filetrans($1, faillog_t, file, \"tallylog\")\n\tlogging_log_named_filetrans($1, faillog_t, file, \"faillog\")\n\tlogging_log_named_filetrans($1, faillog_t, file, \"btmp\")\n\tfiles_pid_filetrans($1, faillog_t, file, \"faillog\")\n\tfiles_pid_filetrans($1, faillog_t, dir, \"faillock\")\n\tfiles_pid_filetrans($1, pam_var_console_t, dir, \"console\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"pam_mount\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"pam_ssh\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"sepermit\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"sudo\")\n\tlogging_log_named_filetrans($1, wtmp_t, file, \"wtmp\")\n\tfiles_var_filetrans($1, auth_cache_t, dir, \"coolkey\")\n')\n\n########################################\n## <summary>\n##\tGet the attributes of the passwd passwords file.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_getattr_passwd',`\n\tgen_require(`\n\t\ttype passwd_file_t;\n\t')\n\n\tfiles_search_etc($1)\n\tallow $1 passwd_file_t:file getattr;\n')\n\n########################################\n## <summary>\n##\tDo not audit attempts to get the attributes\n##\tof the passwd passwords file.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n#\ninterface(`auth_dontaudit_getattr_passwd',`\n\tgen_require(`\n\t\ttype passwd_file_t;\n\t')\n\n\tdontaudit $1 passwd_file_t:file getattr;\n')\n\n########################################\n## <summary>\n##\tRead the passwd passwords file (/etc/passwd)\n##\tAllow to use sss nsswitch module for passwd and group.\n##\tAllow to use systemd nsswitch module for passwd and group\n##\twhich is used for dynamic users.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_passwd',`\n\tgen_require(`\n\t\ttype passwd_file_t;\n\t')\n\n\tallow $1 passwd_file_t:file read_file_perms;\n\toptional_policy(`\n\t\tsssd_read_public_files($1)\n\t\tsssd_stream_connect($1)\n\t')\n\tinit_dbus_chat($1)\n')\n\n########################################\n## <summary>\n##\tMmap the passwd passwords file (/etc/passwd)\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_map_passwd',`\n\tgen_require(`\n\t\ttype passwd_file_t;\n\t')\n\n\tallow $1 passwd_file_t:file map;\n')\n\n########################################\n## <summary>\n##\tDo not audit attempts to read the passwd\n##\tpassword file (/etc/passwd).\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n#\ninterface(`auth_dontaudit_read_passwd',`\n\tgen_require(`\n\t\ttype passwd_file_t;\n\t')\n\n\tdontaudit $1 passwd_file_t:file read_file_perms;\n')\n\n########################################\n## <summary>\n##\tCreate, read, write, and delete the passwd\n##\tpassword file.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_passwd',`\n\tgen_require(`\n\t\ttype passwd_file_t;\n\t')\n\n\tfiles_rw_etc_dirs($1)\n\tallow $1 passwd_file_t:file manage_file_perms;\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd-\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"ptmptmp\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"group\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"group-\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \".pwd.lock\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd.lock\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"group.lock\")\n')\n\n########################################\n## <summary>\n##\tCreate auth directory in the /root directory\n##\twith an correct label.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_filetrans_admin_home_content',`\n\tgen_require(`\n\t\ttype auth_home_t;\n\t')\n\n\tuserdom_admin_home_dir_filetrans($1, auth_home_t, file, \".google_authenticator\")\n\tuserdom_admin_home_dir_filetrans($1, auth_home_t, file, \".google_authenticator~\")\n\tuserdom_admin_home_dir_filetrans($1, auth_home_t, dir, \".yubico\")\n')\n\n\n########################################\n## <summary>\n##\tRead the authorization data in the user home directory\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_home_content',`\n\t\n\tgen_require(`\n\t\ttype auth_home_t;\n\t')\n\n\tuserdom_search_user_home_dirs($1)\n\tread_files_pattern($1, auth_home_t, auth_home_t)\n')\n\n########################################\n## <summary>\n##\tRead the authorization data in the user home directory\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_home_content',`\n\t\n\tgen_require(`\n\t\ttype auth_home_t;\n\t')\n\n\tuserdom_search_user_home_dirs($1)\n\tmanage_files_pattern($1, auth_home_t, auth_home_t)\n    manage_dirs_pattern($1, auth_home_t, auth_home_t)\n')\n\n########################################\n## <summary>\n##\tCreate auth directory in the user home directory\n##\twith an correct label.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_filetrans_home_content',`\n\t\n\tgen_require(`\n\t\ttype auth_home_t;\n\t')\n\n\tuserdom_user_home_dir_filetrans($1, auth_home_t, file, \".google_authenticator\")\n\tuserdom_user_home_dir_filetrans($1, auth_home_t, file, \".google_authenticator~\")\n\tuserdom_user_home_dir_filetrans($1, auth_home_t, dir, \".yubico\")\n')\n\n########################################\n## <summary>\n##\tSend a SIGCHLD signal to login programs.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_login_pgm_sigchld',`\n\tgen_require(`\n\t\tattribute login_pgm;\n\t')\n\n\tallow $1 login_pgm:process sigchld;\n')\n\n########################################\n## <summary>\n##\tManage the keyrings of all login programs\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_login_manage_key',`\n\tgen_require(`\n\t\tattribute login_pgm;\n\t')\n\n\tallow $1 login_pgm:key manage_key_perms;\n')\n"], "fixing_code": ["HOME_DIR/\\.yubico(/.*)?\t\t\t\t    gen_context(system_u:object_r:auth_home_t,s0)\nHOME_DIR/\\.config/Yubico(/.*)?\t\t\t    gen_context(system_u:object_r:auth_home_t,s0)\nHOME_DIR/\\.google_authenticator\t\t\tgen_context(system_u:object_r:auth_home_t,s0)\nHOME_DIR/\\.google_authenticator~\t\tgen_context(system_u:object_r:auth_home_t,s0)\n/root/\\.yubico(/.*)?                    gen_context(system_u:object_r:auth_home_t,s0)\n/root/\\.config/Yubico(/.*)?\t\tgen_context(system_u:object_r:auth_home_t,s0)\n/root/\\.google_authenticator\t\t\tgen_context(system_u:object_r:auth_home_t,s0)\n/root/\\.google_authenticator~\t\t\tgen_context(system_u:object_r:auth_home_t,s0)\n\n/bin/login\t\t--\tgen_context(system_u:object_r:login_exec_t,s0)\n\n/etc/group\\.lock\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n/etc/gshadow.*\t\t--\tgen_context(system_u:object_r:shadow_t,s0)\n/etc/nshadow.*\t\t--\tgen_context(system_u:object_r:shadow_t,s0)\n/etc/shadow.*\t\t--\tgen_context(system_u:object_r:shadow_t,s0)\n/etc/security/opasswd\t--\tgen_context(system_u:object_r:shadow_t,s0)\n/etc/security/opasswd\\.old\t--\tgen_context(system_u:object_r:shadow_t,s0)\n/etc/passwd\\.lock\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n/etc/passwd\\.adjunct.*\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n/etc/\\.pwd\\.lock\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n/etc/passwd[-\\+]?\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n/etc/passwd\\.OLD\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n/etc/ptmptmp\t\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n/etc/group[-\\+]?\t--\tgen_context(system_u:object_r:passwd_file_t,s0)\n\n/sbin/pam_console_apply\t --\tgen_context(system_u:object_r:pam_console_exec_t,s0)\n/sbin/pam_timestamp_check --\tgen_context(system_u:object_r:pam_timestamp_exec_t,s0)\n/sbin/unix_chkpwd\t--\tgen_context(system_u:object_r:chkpwd_exec_t,s0)\n/sbin/unix_update\t--\tgen_context(system_u:object_r:updpwd_exec_t,s0)\n/sbin/unix_verify\t--\tgen_context(system_u:object_r:chkpwd_exec_t,s0)\nifdef(`distro_suse', `\n/sbin/unix2_chkpwd\t--\tgen_context(system_u:object_r:chkpwd_exec_t,s0)\n')\n\n/usr/bin/login\t\t--\tgen_context(system_u:object_r:login_exec_t,s0)\n\n/usr/kerberos/sbin/login\\.krb5 -- gen_context(system_u:object_r:login_exec_t,s0)\n\n/usr/sbin/pam_console_apply\t --\tgen_context(system_u:object_r:pam_console_exec_t,s0)\n/usr/sbin/pam_timestamp_check\t --\tgen_context(system_u:object_r:pam_timestamp_exec_t,s0)\n/usr/sbin/pwhistory_helper  --  gen_context(system_u:object_r:updpwd_exec_t,s0)\n/usr/sbin/unix_chkpwd\t--\tgen_context(system_u:object_r:chkpwd_exec_t,s0)\n/usr/sbin/unix_update\t--\tgen_context(system_u:object_r:updpwd_exec_t,s0)\n/usr/sbin/unix_verify\t--\tgen_context(system_u:object_r:chkpwd_exec_t,s0)\nifdef(`distro_gentoo', `\n/usr/sbin/unix_chkpwd\t--\tgen_context(system_u:object_r:chkpwd_exec_t,s0)\n')\n/usr/sbin/utempter\t--\tgen_context(system_u:object_r:utempter_exec_t,s0)\n/usr/sbin/validate\t--\tgen_context(system_u:object_r:chkpwd_exec_t,s0)\n\n/usr/libexec/utempter/utempter \t--\tgen_context(system_u:object_r:utempter_exec_t,s0)\n\n/var/ace(/.*)?\t\t\tgen_context(system_u:object_r:var_auth_t,s0)\n\n/var/opt/quest/vas/vasd(/.*)?\tgen_context(system_u:object_r:var_auth_t,s0)\n\n/var/cache/coolkey(/.*)?\tgen_context(system_u:object_r:auth_cache_t,s0)\n\n/var/db/shadow.*\t--\tgen_context(system_u:object_r:shadow_t,s0)\n\n/var/lib/abl(/.*)?\t\tgen_context(system_u:object_r:var_auth_t,s0)\n/var/lib/pam_ssh(/.*)?\t\tgen_context(system_u:object_r:var_auth_t,s0)\n/var/lib/pam_shield(/.*)?\tgen_context(system_u:object_r:var_auth_t,s0)\n/var/lib/google-authenticator(/.*)?\tgen_context(system_u:object_r:var_auth_t,s0)\n\n/var/log/btmp.*\t\t--\tgen_context(system_u:object_r:faillog_t,s0)\n/var/log/dmesg\t\t--\tgen_context(system_u:object_r:var_log_t,s0)\n/var/log/faillog.*\t--\tgen_context(system_u:object_r:faillog_t,s0)\n/var/log/lastlog.*\t--\tgen_context(system_u:object_r:lastlog_t,s0)\n/var/log/syslog\t\t--\tgen_context(system_u:object_r:var_log_t,s0)\n/var/log/tallylog.*\t--\tgen_context(system_u:object_r:faillog_t,s0)\n/var/log/wtmp.*\t\t--\tgen_context(system_u:object_r:wtmp_t,s0)\n\n/var/lib/rsa(/.*)? \t\tgen_context(system_u:object_r:var_auth_t,s0)\n/var/rsa(/.*)?\t \t\tgen_context(system_u:object_r:var_auth_t,s0)\n\n/var/run/console(/.*)?\t \tgen_context(system_u:object_r:pam_var_console_t,s0)\n/var/run/faillock(/.*)?\t\tgen_context(system_u:object_r:faillog_t,s0)\n/var/run/motd\t\t--\tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/run/motd\\.d(/.*)?\t\tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/run/pam_mount(/.*)?\tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/run/pam_ssh(/.*)?\t\tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/run/pam_timestamp(/.*)?\tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/run/sepermit(/.*)? \tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/run/sudo(/.*)?\t\tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/(db|adm)/sudo(/.*)?\tgen_context(system_u:object_r:pam_var_run_t,s0)\n/var/lib/sudo(/.*)?\tgen_context(system_u:object_r:pam_var_run_t,s0)\n", "## <summary>Common policy for authentication and user login.</summary>\n\n########################################\n## <summary>\n##\tRole access for password authentication.\n## </summary>\n## <param name=\"role\">\n##\t<summary>\n##\tRole allowed access.\n##\t</summary>\n## </param>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_role',`\n\tgen_require(`\n\t\ttype chkpwd_t, chkpwd_exec_t, shadow_t;\n\t')\n\n\trole $1 types chkpwd_t;\n\n\t# Transition from the user domain to this domain.\n\tauth_domtrans_chkpwd($2)\n\n\tps_process_pattern($2, chkpwd_t)\n\n\tdontaudit $2 shadow_t:file read_file_perms;\n\n\tlogging_send_syslog_msg($2)\n\tlogging_send_audit_msgs($2)\n\n\tusermanage_read_crack_db($2)\n\n')\n\n########################################\n## <summary>\n##\tUse PAM for authentication.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_use_pam',`\n\n\t# for SSP/ProPolice\n\tdev_read_urand($1)\n\t# for encrypted homedir\n\tdev_read_sysfs($1)\n\n\tauth_domtrans_chk_passwd($1)\n\tauth_domtrans_upd_passwd($1)\n\tauth_dontaudit_read_shadow($1)\n\tauth_read_login_records($1)\n\tauth_append_login_records($1)\n\tauth_rw_lastlog($1)\n\tauth_create_lastlog($1)\n\tauth_manage_faillog($1)\n\tauth_exec_pam($1)\n\tauth_use_nsswitch($1)\n\n\tinit_rw_stream_sockets($1)\n\n\tlogging_send_audit_msgs($1)\n\tlogging_send_syslog_msg($1)\n\n\tuserdom_search_user_tmp_dirs($1)\n\n\toptional_policy(`\n\t\tdbus_system_bus_client($1)\n\n\t\toptional_policy(`\n\t\t\tconsolekit_dbus_chat($1)\n\t\t')\n\n\t\toptional_policy(`\n\t\t\tfprintd_dbus_chat($1)\n\t\t')\n\t')\n\n\toptional_policy(`\n\t\tkerberos_manage_host_rcache($1)\n\t\tkerberos_read_config($1)\n\t')\n\n\toptional_policy(`\n\t\tlocallogin_getattr_home_content($1)\n \t')\n\n\toptional_policy(`\n\t\tnis_authenticate($1)\n\t')\n\n\toptional_policy(`\n\t\tsystemd_dbus_chat_logind($1)\n\t\tsystemd_use_fds_logind($1)\n\t\tsystemd_write_inherited_logind_sessions_pipes($1)\n\t\tsystemd_read_logind_sessions_files($1)\n\t')\n')\n\n########################################\n## <summary>\n##\tMake the specified domain used for a login program.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain type used for a login program domain.\n##\t</summary>\n## </param>\n#\ninterface(`auth_login_pgm_domain',`\n\tgen_require(`\n\t\ttype var_auth_t, auth_cache_t;\n\t\tattribute polydomain;\n\t\tattribute login_pgm;\n\t')\n\n\tdomain_type($1)\n\ttypeattribute $1 polydomain;\n\ttypeattribute $1 login_pgm;\n\n\tdomain_subj_id_change_exemption($1)\n\tdomain_role_change_exemption($1)\n\tdomain_obj_id_change_exemption($1)\n\trole system_r types $1;\n\n\tselinux_get_fs_mount($1)\n\n\tmls_file_read_all_levels($1)\n\tmls_file_write_all_levels($1)\n\tmls_file_upgrade($1)\n\tmls_file_downgrade($1)\n\tmls_process_set_level($1)\n    mls_process_write_to_clearance($1)\n\tmls_fd_share_all_levels($1)\n\n\tauth_use_pam($1)\n')\n\n########################################\n## <summary>\n##\tRead authlogin state files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`authlogin_read_state',`\n\tgen_require(`\n\t\tattribute polydomain;\n\t')\n\n\tkernel_search_proc($1)\n\tps_process_pattern($1, polydomain)\n')\n\n########################################\n## <summary>\n##\tRead and write a authlogin unnamed pipe.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`authlogin_rw_pipes',`\n\tgen_require(`\n\t\tattribute polydomain;\n\t')\n\n\tallow $1 polydomain:fifo_file rw_inherited_fifo_file_perms;\n')\n\n########################################\n## <summary>\n##\tUse the login program as an entry point program.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_login_entry_type',`\n\tgen_require(`\n\t\ttype login_exec_t;\n\t')\n\n\tdomain_entry_file($1, login_exec_t)\n')\n\n########################################\n## <summary>\n##\tMake the specified type usable as a\n##\tlogin file.\n## </summary>\n## <desc>\n##\t<p>\n##\tMake the specified type usable as a login file,\n##\tThis type has restricted modification capabilities when used with\n##\tother interfaces that permit files_type access.\n##\tThe default type has properties similar to that of the shadow file.\n##\tThis will also make the type usable as a security file, making\n##\tcalls to files_security_file() redundant.\n##\t</p>\n## </desc>\n## <param name=\"type\">\n##\t<summary>\n##\tType to be used as a login file.\n##\t</summary>\n## </param>\n## <infoflow type=\"none\"/>\n#\ninterface(`auth_file',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_auth_file() instead.')\n\tfiles_auth_file($1)\n')\n\n########################################\n## <summary>\n##\tExecute a login_program in the target domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n## <param name=\"target_domain\">\n##\t<summary>\n##\tThe type of the login_program process.\n##\t</summary>\n## </param>\n#\ninterface(`auth_domtrans_login_program',`\n\tgen_require(`\n\t\ttype login_exec_t;\n\t')\n\n\tcorecmd_search_bin($1)\n\tdomtrans_pattern($1, login_exec_t, $2)\n    allow $1 login_exec_t:file map;\n')\n\n########################################\n## <summary>\n##\tExecute a login_program in the caller domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n#\ninterface(`auth_exec_login_program',`\n\tgen_require(`\n\t\ttype login_exec_t;\n\t')\n\n\tcorecmd_search_bin($1)\n\tcan_exec($1, login_exec_t)\n')\n\n########################################\n## <summary>\n##\tExecute a login_program in the target domain,\n##\twith a range transition.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n## <param name=\"target_domain\">\n##\t<summary>\n##\tThe type of the login_program process.\n##\t</summary>\n## </param>\n## <param name=\"range\">\n##\t<summary>\n##\tRange of the login program.\n##\t</summary>\n## </param>\n#\ninterface(`auth_ranged_domtrans_login_program',`\n\tgen_require(`\n\t\ttype login_exec_t;\n\t')\n\n\tauth_domtrans_login_program($1, $2)\n\n\tifdef(`enable_mcs',`\n\t\trange_transition $1 login_exec_t:process $3;\n\t')\n\n\tifdef(`enable_mls',`\n\t\trange_transition $1 login_exec_t:process $3;\n\t')\n')\n\n########################################\n## <summary>\n##\tSearch authentication cache\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_search_cache',`\n\tgen_require(`\n\t\ttype auth_cache_t;\n\t')\n\n\tallow $1 auth_cache_t:dir search_dir_perms;\n')\n\n########################################\n## <summary>\n##\tRead authentication cache\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_cache',`\n\tgen_require(`\n\t\ttype auth_cache_t;\n\t')\n\n\tread_files_pattern($1, auth_cache_t, auth_cache_t)\n')\n\n########################################\n## <summary>\n##\tRead/Write authentication cache\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_rw_cache',`\n\tgen_require(`\n\t\ttype auth_cache_t;\n\t')\n\n\trw_files_pattern($1, auth_cache_t, auth_cache_t)\n')\n\n########################################\n## <summary>\n##\tCreate authentication cache\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_create_cache',`\n\tgen_require(`\n\t\ttype auth_cache_t;\n\t')\n\n\tcreate_files_pattern($1, auth_cache_t, auth_cache_t)\n')\n\n########################################\n## <summary>\n##\tManage authentication cache\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_cache',`\n\tgen_require(`\n\t\ttype auth_cache_t;\n\t')\n\n\tmanage_dirs_pattern($1, auth_cache_t, auth_cache_t)\n\tmanage_files_pattern($1, auth_cache_t, auth_cache_t)\n    allow $1 auth_cache_t:file map;\n')\n\n#######################################\n## <summary>\n##\tAutomatic transition from cache_t to cache.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_var_filetrans_cache',`\n\tgen_require(`\n\t\ttype auth_cache_t;\n\t')\n\n\tfiles_var_filetrans($1, auth_cache_t, { file dir } )\n')\n\n########################################\n## <summary>\n##\tRun unix_chkpwd to check a password.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n#\ninterface(`auth_domtrans_chk_passwd',`\n\tgen_require(`\n\t\ttype chkpwd_t, chkpwd_exec_t, shadow_t;\n\t\ttype auth_cache_t;\n\t')\n\n\tallow $1 auth_cache_t:dir search_dir_perms;\n\n\tcorecmd_search_bin($1)\n\tdomtrans_pattern($1, chkpwd_exec_t, chkpwd_t)\n    allow $1 chkpwd_exec_t:file map;\n\n\tdontaudit $1 shadow_t:file read_file_perms;\n\n\tdev_read_rand($1)\n\tdev_read_urand($1)\n\n\tauth_use_nsswitch($1)\n\tauth_rw_faillog($1)\n\n\tlogging_send_audit_msgs($1)\n\n\tmiscfiles_read_generic_certs($1)\n\n\toptional_policy(`\n\t\tkerberos_read_keytab($1)\n\t')\n\n\toptional_policy(`\n\t\tpcscd_read_pid_files($1)\n\t\tpcscd_stream_connect($1)\n\t')\n\n\toptional_policy(`\n\t\tsamba_stream_connect_winbind($1)\n\t')\n\n\tauth_domtrans_upd_passwd($1)\n')\n\n########################################\n## <summary>\n##\tRun unix_chkpwd to check a password.\n## \tStripped down version to be called within boolean\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n#\ninterface(`auth_domtrans_chkpwd',`\n\tgen_require(`\n\t\ttype chkpwd_t, chkpwd_exec_t, shadow_t;\n\t')\n\n\tcorecmd_search_bin($1)\n\tdomtrans_pattern($1, chkpwd_exec_t, chkpwd_t)\n\tdontaudit $1 shadow_t:file { getattr read };\n\tauth_domtrans_upd_passwd($1)\n')\n\n########################################\n## <summary>\n##  Execute chkpwd in the caller domain.\n## </summary>\n## <param name=\"domain\">\n##  <summary>\n##  Domain allowed to transition.\n##  </summary>\n##  </param>\n#\ninterface(`auth_exec_chkpwd',`\n    gen_require(`\n        type chkpwd_exec_t;\n    ')\n\n    allow $1 chkpwd_exec_t:file execute;\n')\n\n########################################\n## <summary>\n##\tExecute chkpwd programs in the chkpwd domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n## <param name=\"role\">\n##\t<summary>\n##\tThe role to allow the chkpwd domain.\n##\t</summary>\n## </param>\n#\ninterface(`auth_run_chk_passwd',`\n\tgen_require(`\n\t\ttype chkpwd_t;\n\t')\n\n\tauth_domtrans_chk_passwd($1)\n\trole $2 types chkpwd_t;\n\tauth_run_upd_passwd($1, $2)\n')\n\n########################################\n## <summary>\n##\tSend generic signals to chkpwd processes.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_signal_chk_passwd',`\n\tgen_require(`\n\t\ttype chkpwd_t;\n\t')\n\n\tallow $1 chkpwd_t:process signal;\n')\n\n########################################\n## <summary>\n##\tExecute a domain transition to run unix_update.\n## </summary>\n## <param name=\"domain\">\n## <summary>\n##\tDomain allowed to transition.\n## </summary>\n## </param>\n#\ninterface(`auth_domtrans_upd_passwd',`\n\tgen_require(`\n\t\ttype updpwd_t, updpwd_exec_t;\n\t')\n\n\tdomtrans_pattern($1, updpwd_exec_t, updpwd_t)\n\tauth_dontaudit_read_shadow($1)\n')\n\n########################################\n## <summary>\n##\tExecute updpwd programs in the updpwd domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n## <param name=\"role\">\n##\t<summary>\n##\tThe role to allow the updpwd domain.\n##\t</summary>\n## </param>\n#\ninterface(`auth_run_upd_passwd',`\n\tgen_require(`\n\t\ttype updpwd_t;\n\t')\n\n\tauth_domtrans_upd_passwd($1)\n\trole $2 types updpwd_t;\n')\n\n########################################\n## <summary>\n##\tGet the attributes of the shadow passwords file.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_getattr_shadow',`\n\tgen_require(`\n\t\ttype shadow_t;\n\t')\n\n\tfiles_search_etc($1)\n\tallow $1 shadow_t:file getattr;\n')\n\n########################################\n## <summary>\n##\tDo not audit attempts to get the attributes\n##\tof the shadow passwords file.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n#\ninterface(`auth_dontaudit_getattr_shadow',`\n\tgen_require(`\n\t\ttype shadow_t;\n\t')\n\n\tdontaudit $1 shadow_t:file getattr;\n')\n\n########################################\n## <summary>\n## Mmap the shadow passwords file.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_map_shadow',`\n\tgen_require(`\n\t\ttype shadow_t;\n\t')\n\n\tallow $1 shadow_t:file map;\n')\n\n########################################\n## <summary>\n##\tRead the shadow passwords file (/etc/shadow)\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\n# cjp: these next three interfaces are split\n# since typeattribute does not work in conditionals\n# yet, otherwise they should be one interface.\n#\ninterface(`auth_read_shadow',`\n\tauth_can_read_shadow_passwords($1)\n\tauth_tunable_read_shadow($1)\n')\n\n########################################\n## <summary>\n##\tPass shadow assertion for reading.\n## </summary>\n## <desc>\n##\t<p>\n##\tPass shadow assertion for reading.\n##\tThis should only be used with\n##\tauth_tunable_read_shadow(), and\n##\tonly exists because typeattribute\n##\tdoes not work in conditionals.\n##\t</p>\n## </desc>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_can_read_shadow_passwords',`\n\tgen_require(`\n\t\tattribute can_read_shadow_passwords;\n\t')\n\n\ttypeattribute $1 can_read_shadow_passwords;\n')\n\n########################################\n## <summary>\n##\tRead the shadow password file.\n## </summary>\n## <desc>\n##\t<p>\n##\tRead the shadow password file.  This\n##\tshould only be used in a conditional;\n##\tit does not pass the reading shadow\n##\tassertion.\n##\t</p>\n## </desc>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_tunable_read_shadow',`\n\tgen_require(`\n\t\ttype shadow_t;\n\t')\n\n\tfiles_list_etc($1)\n\tallow $1 shadow_t:file read_file_perms;\n')\n\n########################################\n## <summary>\n##\tDo not audit attempts to read the shadow\n##\tpassword file (/etc/shadow).\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n#\ninterface(`auth_dontaudit_read_shadow',`\n\tgen_require(`\n\t\ttype shadow_t;\n\t')\n\n\tdontaudit $1 shadow_t:file read_file_perms;\n')\n\n########################################\n## <summary>\n##\tRead and write the shadow password file (/etc/shadow).\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_rw_shadow',`\n\tgen_require(`\n\t\tattribute can_read_shadow_passwords, can_write_shadow_passwords;\n\t\ttype shadow_t;\n\t')\n\n\tfiles_list_etc($1)\n\tallow $1 shadow_t:file rw_file_perms;\n\ttypeattribute $1 can_read_shadow_passwords, can_write_shadow_passwords;\n')\n\n########################################\n## <summary>\n##\tCreate, read, write, and delete the shadow\n##\tpassword file.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_shadow',`\n\tgen_require(`\n\t\tattribute can_read_shadow_passwords, can_write_shadow_passwords;\n\t\ttype shadow_t;\n\t')\n\n\tallow $1 shadow_t:file manage_file_perms;\n\ttypeattribute $1 can_read_shadow_passwords, can_write_shadow_passwords;\n\tfiles_var_filetrans($1, shadow_t, file, \"shadow\")\n\tfiles_var_filetrans($1, shadow_t, file, \"shadow-\")\n\tfiles_etc_filetrans($1, shadow_t, file, \"gshadow\")\n\tfiles_etc_filetrans($1, shadow_t, file, \"nshadow\")\n\tfiles_etc_filetrans($1, shadow_t, file, \"opasswd\")\n')\n\n#######################################\n## <summary>\n##\tAutomatic transition from etc to shadow.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_etc_filetrans_shadow',`\n\tgen_require(`\n\t\ttype shadow_t;\n\t')\n\n\tfiles_etc_filetrans($1, shadow_t, file)\n')\n\n#######################################\n## <summary>\n##\tRelabel to the shadow\n##\tpassword file type.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabelto_shadow',`\n\tgen_require(`\n\t\tattribute can_relabelto_shadow_passwords;\n\t\ttype shadow_t;\n\t')\n\n\tfiles_search_etc($1)\n\tallow $1 shadow_t:file relabelto;\n\ttypeattribute $1 can_relabelto_shadow_passwords;\n')\n\n#######################################\n## <summary>\n##\tRelabel from and to the shadow\n##\tpassword file type.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabel_shadow',`\n\tgen_require(`\n\t\tattribute can_relabelto_shadow_passwords;\n\t\ttype shadow_t;\n\t')\n\n\tfiles_search_etc($1)\n\tallow $1 shadow_t:file relabel_file_perms;\n\ttypeattribute $1 can_relabelto_shadow_passwords;\n')\n\n#######################################\n## <summary>\n##\tAppend to the login failure log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_append_faillog',`\n\tgen_require(`\n\t\ttype faillog_t;\n\t')\n\n\tlogging_search_logs($1)\n\tallow $1 faillog_t:file append_file_perms;\n')\n\n########################################\n## <summary>\n##\tRead and write the login failure log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_rw_faillog',`\n\tgen_require(`\n\t\ttype faillog_t;\n\t')\n\n\tlogging_search_logs($1)\n\trw_files_pattern($1, faillog_t, faillog_t)\n')\n\n########################################\n## <summary>\n##\tRelabel the login failure log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabel_faillog',`\n\tgen_require(`\n\t\ttype faillog_t;\n\t')\n\n\tallow $1 faillog_t:dir relabel_dir_perms;\n\tallow $1 faillog_t:file relabel_file_perms;\n')\n\n########################################\n## <summary>\n##\tManage the login failure log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_faillog',`\n\tgen_require(`\n\t\ttype faillog_t;\n\t')\n\n\tlogging_search_logs($1)\n\tfiles_search_pids($1)\n\tallow $1 faillog_t:dir manage_dir_perms;\n\tallow $1 faillog_t:file manage_file_perms;\n\tlogging_log_named_filetrans($1, faillog_t, file, \"tallylog\")\n\tlogging_log_named_filetrans($1, faillog_t, file, \"faillog\")\n\tlogging_log_named_filetrans($1, faillog_t, file, \"btmp\")\n')\n\n#######################################\n## <summary>\n##\tRead the last logins log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <rolecap/>\n#\ninterface(`auth_read_lastlog',`\n\tgen_require(`\n\t\ttype lastlog_t;\n\t')\n\n\tlogging_search_logs($1)\n\tallow $1 lastlog_t:file read_file_perms;\n')\n\n#######################################\n## <summary>\n##\tAppend only to the last logins log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_append_lastlog',`\n\tgen_require(`\n\t\ttype lastlog_t;\n\t')\n\n\tlogging_search_logs($1)\n\tallow $1 lastlog_t:file { append_file_perms lock };\n')\n\n#######################################\n## <summary>\n##\tRead and write to the last logins log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_rw_lastlog',`\n\tgen_require(`\n\t\ttype lastlog_t;\n\t')\n\n\tlogging_search_logs($1)\n\tallow $1 lastlog_t:file { rw_file_perms lock setattr };\n')\n\n#######################################\n## <summary>\n##\tManage create logins log.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_create_lastlog',`\n\tgen_require(`\n\t\ttype lastlog_t;\n\t')\n\n\tlogging_search_logs($1)\n\tallow $1 lastlog_t:file create;\n\tlogging_log_named_filetrans($1, lastlog_t, file, \"lastlog\")\n')\n\n########################################\n## <summary>\n##\tExecute pam timestamp programs in the pam timestamp domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n#\ninterface(`auth_domtrans_pam_timestamp',`\n\tgen_require(`\n\t\ttype pam_timestamp_t, pam_timestamp_exec_t;\n\t')\n\n\tdomtrans_pattern($1, pam_timestamp_exec_t, pam_timestamp_t)\n')\n\n########################################\n## <summary>\n##\tExecute pam timestamp programs in the pam timestamp domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n#\ninterface(`auth_domtrans_pam',`\n\tauth_domtrans_pam_timestamp($1)\n\trefpolicywarn(`$0() has been deprecated, please use auth_domtrans_pam_timestamp() instead.')\n')\n\n########################################\n## <summary>\n##\tSend generic signals to pam processes.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_signal_pam',`\n\tgen_require(`\n\t\ttype pam_timestamp_t;\n\t')\n\n\tallow $1 pam_timestamp_t:process signal;\n')\n\n########################################\n## <summary>\n##\tExecute pam_timestamp programs in the PAM timestamp domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n## <param name=\"role\">\n##\t<summary>\n##\tThe role to allow the PAM domain.\n##\t</summary>\n## </param>\n#\ninterface(`auth_run_pam_timestamp',`\n\tgen_require(`\n\t\ttype pam_timestamp_t;\n\t')\n\n\tauth_domtrans_pam_timestamp($1)\n\trole $2 types pam_timestamp_t;\n')\n\n########################################\n## <summary>\n##\tExecute pam_timestamp programs in the PAM timestamp domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n## <param name=\"role\">\n##\t<summary>\n##\tThe role to allow the PAM domain.\n##\t</summary>\n## </param>\n#\ninterface(`auth_run_pam',`\n\tauth_run_pam_timestamp($1, $2)\n\trefpolicywarn(`$0() has been deprecated, please use auth_run_pam_timestamp.')\n')\n\n########################################\n## <summary>\n##\tExecute the pam program.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_exec_pam',`\n\tgen_require(`\n\t\ttype pam_exec_t;\n\t')\n\n\tcan_exec($1, pam_exec_t)\n')\n\n########################################\n## <summary>\n##\tRead var auth files. Used by various other applications\n##\tand pam applets etc.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_var_auth',`\n\tgen_require(`\n\t\ttype var_auth_t;\n\t')\n\n\tfiles_search_var($1)\n\tread_files_pattern($1, var_auth_t, var_auth_t)\n')\n\n#######################################\n## <summary>\n##  Read and write var auth files. Used by various other applications\n##  and pam applets etc.\n## </summary>\n## <param name=\"domain\">\n##  <summary>\n##  Domain allowed access.\n##  </summary>\n## </param>\n#\ninterface(`auth_rw_var_auth',`\n    gen_require(`\n\t\ttype var_auth_t;\n    ')\n\n    files_search_var($1)\n    rw_files_pattern($1, var_auth_t, var_auth_t)\n')\n\n########################################\n## <summary>\n##\tManage var auth files. Used by various other applications\n##\tand pam applets etc.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_var_auth',`\n\tgen_require(`\n\t\ttype var_auth_t;\n\t')\n\n\tfiles_search_var($1)\n\n\tmanage_dirs_pattern($1, var_auth_t, var_auth_t)\n\tmanage_files_pattern($1, var_auth_t, var_auth_t)\n\tmanage_lnk_files_pattern($1, var_auth_t, var_auth_t)\n')\n\n########################################\n## <summary>\n##\tRelabel all var auth files. Used by various other applications\n##\tand pam applets etc.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabel_var_auth_dirs',`\n\tgen_require(`\n\t\ttype var_auth_t;\n\t')\n\n\tfiles_search_var($1)\n\trelabel_dirs_pattern($1, var_auth_t, var_auth_t)\n')\n\n########################################\n## <summary>\n##\tRead PAM PID files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_pam_pid',`\n\tgen_require(`\n\t\ttype pam_var_run_t;\n\t')\n\n\tfiles_search_pids($1)\n\tallow $1 pam_var_run_t:dir list_dir_perms;\n\tallow $1 pam_var_run_t:file read_file_perms;\n')\n\n#######################################\n## <summary>\n##\tDo not audit attemps to read PAM PID files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n#\ninterface(`auth_dontaudit_read_pam_pid',`\n\tgen_require(`\n\t\ttype pam_var_run_t;\n\t')\n\n\tdontaudit $1 pam_var_run_t:file { getattr read };\n')\n\n########################################\n## <summary>\n##\tDelete pam PID files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_delete_pam_pid',`\n\tgen_require(`\n\t\ttype pam_var_run_t;\n\t')\n\n\tfiles_search_pids($1)\n\tallow $1 pam_var_run_t:dir del_entry_dir_perms;\n\tallow $1 pam_var_run_t:file delete_file_perms;\n')\n\n########################################\n## <summary>\n##\tManage pam PID files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_pam_pid',`\n\tgen_require(`\n\t\ttype pam_var_run_t;\n\t')\n\n\tfiles_search_pids($1)\n\tallow $1 pam_var_run_t:dir manage_dir_perms;\n\tallow $1 pam_var_run_t:file manage_file_perms;\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"pam_mount\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"pam_ssh\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"pam_timestamp\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"sepermit\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"sudo\")\n')\n\n########################################\n## <summary>\n##\tExecute pam_console with a domain transition.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n#\ninterface(`auth_domtrans_pam_console',`\n\tgen_require(`\n\t\ttype pam_console_t, pam_console_exec_t;\n\t')\n\n\tdomtrans_pattern($1, pam_console_exec_t, pam_console_t)\n')\n\n########################################\n## <summary>\n##\tSearch the contents of the\n##\tpam_console data directory.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_search_pam_console_data',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\tfiles_search_pids($1)\n\tallow $1 pam_var_console_t:dir search_dir_perms;\n')\n\n########################################\n## <summary>\n##\tList the contents of the pam_console\n##\tdata directory.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_list_pam_console_data',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\tfiles_search_pids($1)\n\tallow $1 pam_var_console_t:dir list_dir_perms;\n')\n\n########################################\n## <summary>\n##\tCreate pam var console pid directories.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_create_pam_console_data_dirs',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\tfiles_search_pids($1)\n\tallow $1 pam_var_console_t:dir create_dir_perms;\n')\n\n########################################\n## <summary>\n##\tRelabel pam_console data directories.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabel_pam_console_data_dirs',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\trelabel_dirs_pattern($1, pam_var_console_t, pam_var_console_t)\n')\n\n########################################\n## <summary>\n##\tRead pam_console data files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_pam_console_data',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\tfiles_search_pids($1)\n\tallow $1 pam_var_console_t:dir list_dir_perms;\n\tallow $1 pam_var_console_t:file read_file_perms;\n')\n\n########################################\n## <summary>\n##\tCreate, read, write, and delete\n##\tpam_console data files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_pam_console_data',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\tfiles_search_pids($1)\n\tmanage_files_pattern($1, pam_var_console_t, pam_var_console_t)\n\tmanage_lnk_files_pattern($1, pam_var_console_t, pam_var_console_t)\n\tfiles_pid_filetrans($1, pam_var_console_t, dir, \"console\")\n')\n\n#######################################\n## <summary>\n##\tDelete pam_console data.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_delete_pam_console_data',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\tfiles_search_var($1)\n\tfiles_search_pids($1)\n\tdelete_files_pattern($1, pam_var_console_t, pam_var_console_t)\n')\n\n########################################\n## <summary>\n##\tCreate specified objects in\n##\tpid directories with the pam var\n##      console pid file type using a\n##      file type transition.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"object_class\">\n##\t<summary>\n##\tClass of the object being created.\n##\t</summary>\n## </param>\n## <param name=\"name\" optional=\"true\">\n##\t<summary>\n##\tThe name of the object being created.\n##\t</summary>\n## </param>\n#\ninterface(`auth_pid_filetrans_pam_var_console',`\n\tgen_require(`\n\t\ttype pam_var_console_t;\n\t')\n\n\tfiles_pid_filetrans($1, pam_var_console_t, $2, $3)\n')\n\n########################################\n## <summary>\n##\tRead all directories on the filesystem, except\n##\tlogin files and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_all_dirs_except_auth_files',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_list_non_auth_dirs() instead.')\n\tfiles_list_non_auth_dirs($1)\n')\n\n########################################\n## <summary>\n##\tRead all directories on the filesystem, except\n##\tthe shadow passwords and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_all_dirs_except_shadow',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_list_non_auth_dirs() instead.')\n\tfiles_list_non_auth_dirs($1)\n')\n\n########################################\n## <summary>\n##\tRead all files on the filesystem, except\n##\tlogin files and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n## <rolecap/>\n#\ninterface(`auth_read_all_files_except_auth_files',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_read_non_auth_files() instead.')\n\tfiles_read_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tRead all files on the filesystem, except\n##\tthe shadow passwords and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n## <rolecap/>\n#\ninterface(`auth_read_all_files_except_shadow',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_read_non_auth_files() instead.')\n\tfiles_read_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tRead all symbolic links on the filesystem, except\n##\tlogin files and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_all_symlinks_except_auth_files',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_read_non_auth_symlinks() instead.')\n\tfiles_read_non_auth_symlinks($1)\n')\n\n########################################\n## <summary>\n##\tRead all symbolic links on the filesystem, except\n##\tthe shadow passwords and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_all_symlinks_except_shadow',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_read_non_auth_symlinks() instead.')\n\tfiles_read_non_auth_symlinks($1)\n')\n\n#######################################\n## <summary>\n##\tRelabel all files on the filesystem, except\n##\tlogin files and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabel_all_files_except_auth_files',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_relabel_non_auth_files() instead.')\n\tfiles_relabel_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tRelabel all files on the filesystem, except\n##\tthe shadow passwords and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabel_all_files_except_shadow',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_relabel_non_auth_files() instead.')\n\tfiles_relabel_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tRead and write all files on the filesystem, except\n##\tlogin files and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_rw_all_files_except_auth_files',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_rw_non_auth_files() instead.')\n\tfiles_rw_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tRead and write all files on the filesystem, except\n##\tthe shadow passwords and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_rw_all_files_except_shadow',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_rw_non_auth_files() instead.')\n\tfiles_rw_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tManage all files on the filesystem, except\n##\tlogin files passwords and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_all_files_except_auth_files',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_manage_non_auth_files() instead.')\n\tfiles_manage_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tManage all files on the filesystem, except\n##\tthe shadow passwords and listed exceptions.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <param name=\"exception_types\" optional=\"true\">\n##\t<summary>\n##\tThe types to be excluded.  Each type or attribute\n##\tmust be negated by the caller.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_all_files_except_shadow',`\n\trefpolicywarn(`$0($*) has been deprecated, use files_manage_non_auth_files() instead.')\n\tfiles_manage_non_auth_files($1)\n')\n\n########################################\n## <summary>\n##\tExecute utempter programs in the utempter domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n#\ninterface(`auth_domtrans_utempter',`\n\tgen_require(`\n\t\ttype utempter_t, utempter_exec_t;\n\t')\n\n\tdomtrans_pattern($1, utempter_exec_t, utempter_t)\n')\n\n########################################\n## <summary>\n##\tExecute utempter programs in the utempter domain.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed to transition.\n##\t</summary>\n## </param>\n## <param name=\"role\">\n##\t<summary>\n##\tThe role to allow the utempter domain.\n##\t</summary>\n## </param>\n#\ninterface(`auth_run_utempter',`\n\tgen_require(`\n\t\ttype utempter_t;\n\t')\n\n\tauth_domtrans_utempter($1)\n\trole $2 types utempter_t;\n')\n\n#######################################\n## <summary>\n##\tDo not audit attemps to execute utempter executable.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n#\ninterface(`auth_dontaudit_exec_utempter',`\n\tgen_require(`\n\t\ttype utempter_exec_t;\n\t')\n\n\tdontaudit $1 utempter_exec_t:file { execute execute_no_trans };\n')\n\n########################################\n## <summary>\n##\tSet the attributes of login record files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_setattr_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tallow $1 wtmp_t:file setattr;\n\tlogging_search_logs($1)\n')\n\n########################################\n## <summary>\n##\tRelabel login record files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_relabel_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tallow $1 wtmp_t:file relabel_file_perms;\n')\n\n\n########################################\n## <summary>\n##\tRead login records files (/var/log/wtmp).\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <rolecap/>\n#\ninterface(`auth_read_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tlogging_search_logs($1)\n\tallow $1 wtmp_t:file read_file_perms;\n')\n\n########################################\n## <summary>\n##\tDo not audit attempts to read login records\n##\tfiles (/var/log/wtmp).\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n## <rolecap/>\n#\ninterface(`auth_dontaudit_read_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tdontaudit $1 wtmp_t:file read_file_perms;\n')\n\n########################################\n## <summary>\n##\tDo not audit attempts to write to\n##\tlogin records files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n#\ninterface(`auth_dontaudit_write_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tdontaudit $1 wtmp_t:file write;\n')\n\n#######################################\n## <summary>\n##\tAppend to login records (wtmp).\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_append_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tallow $1 wtmp_t:file append_file_perms;\n\tlogging_search_logs($1)\n')\n\n#######################################\n## <summary>\n##\tWrite to login records (wtmp).\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_write_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tallow $1 wtmp_t:file { write_file_perms lock };\n')\n\n########################################\n## <summary>\n##\tRead and write login records.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_rw_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tallow $1 wtmp_t:file rw_file_perms;\n\tlogging_search_logs($1)\n')\n\n########################################\n## <summary>\n##\tCreate a login records in the log directory\n##\tusing a type transition.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_log_filetrans_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tlogging_log_filetrans($1, wtmp_t, file)\n')\n\n########################################\n## <summary>\n##\tCreate, read, write, and delete login\n##\trecords files.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_login_records',`\n\tgen_require(`\n\t\ttype wtmp_t;\n\t')\n\n\tlogging_rw_generic_log_dirs($1)\n\tallow $1 wtmp_t:file manage_file_perms;\n\tlogging_log_named_filetrans($1, wtmp_t, file, \"wtmp\")\n')\n\n########################################\n## <summary>\n##\tRead access to the authlogin module.\n## </summary>\n## <desc>\n##\t<p>\n##\tRead access to the authlogin module.\n##\t</p>\n##\t<p>\n##\tCurrently, this only allows assertions for\n##\tthe shadow passwords file (/etc/shadow) to\n##\tbe passed.  No access is granted yet.\n##\t</p>\n## </desc>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_reader_shadow',`\n\tgen_require(`\n\t\tattribute can_read_shadow_passwords;\n\t')\n\n\ttypeattribute $1 can_read_shadow_passwords;\n')\n\n########################################\n## <summary>\n##\tWrite access to the authlogin module.\n## </summary>\n## <desc>\n##\t<p>\n##\tWrite access to the authlogin module.\n##\t</p>\n##\t<p>\n##\tCurrently, this only allows assertions for\n##\tthe shadow passwords file (/etc/shadow) to\n##\tbe passed.  No access is granted yet.\n##\t</p>\n## </desc>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_writer_shadow',`\n\tgen_require(`\n\t\tattribute can_write_shadow_passwords;\n\t')\n\n\ttypeattribute $1 can_write_shadow_passwords;\n')\n\n########################################\n## <summary>\n##\tUse nsswitch to look up user, password, group, or\n##\thost information.\n## </summary>\n## <desc>\n##\t<p>\n##\tAllow the specified domain to look up user, password,\n##\tgroup, or host information using the name service.\n##\tThe most common use of this interface is for services\n##\tthat do host name resolution (usually DNS resolution).\n##\t</p>\n## </desc>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n## <infoflow type=\"both\" weight=\"10\"/>\n#\ninterface(`auth_use_nsswitch',`\n\tgen_require(`\n\t\tattribute nsswitch_domain;\n\t')\n\n\ttypeattribute $1 nsswitch_domain;\n\n\tcorenet_all_recvfrom_netlabel($1)\n')\n\n########################################\n## <summary>\n##\tUnconfined access to the authlogin module.\n## </summary>\n## <desc>\n##\t<p>\n##\tUnconfined access to the authlogin module.\n##\t</p>\n##\t<p>\n##\tCurrently, this only allows assertions for\n##\tthe shadow passwords file (/etc/shadow) to\n##\tbe passed.  No access is granted yet.\n##\t</p>\n## </desc>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_unconfined',`\n\tgen_require(`\n\t\tattribute can_read_shadow_passwords;\n\t\tattribute can_write_shadow_passwords;\n\t\tattribute can_relabelto_shadow_passwords;\n\t')\n\n\ttypeattribute $1 can_read_shadow_passwords;\n\ttypeattribute $1 can_write_shadow_passwords;\n\ttypeattribute $1 can_relabelto_shadow_passwords;\n')\n\n########################################\n## <summary>\n##\tTransition to authlogin named content\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##      Domain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_filetrans_named_content',`\n\tgen_require(`\n\t\ttype shadow_t;\n\t\ttype passwd_file_t;\n\t\ttype faillog_t;\n\t\ttype lastlog_t;\n\t\ttype wtmp_t;\n\t\ttype pam_var_console_t;\n\t\ttype pam_var_run_t;\n\t\ttype auth_cache_t;\n\t')\n\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"group\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"group-\")\n\t#files_etc_filetrans($1, passwd_file_t, file, \"group+\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd-\")\n\t#files_etc_filetrans($1, passwd_file_t, file, \"passwd+\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd.OLD\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"ptmptmp\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd.lock\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"group.lock\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd.adjunct\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \".pwd.lock\")\n\tfiles_etc_filetrans($1, shadow_t, file, \"shadow\")\n\tfiles_etc_filetrans($1, shadow_t, file, \"shadow-\")\n\tfiles_etc_filetrans($1, shadow_t, file, \"gshadow\")\n\tfiles_etc_filetrans($1, shadow_t, file, \"opasswd\")\n\tlogging_log_named_filetrans($1, lastlog_t, file, \"lastlog\")\n\tlogging_log_named_filetrans($1, faillog_t, file, \"tallylog\")\n\tlogging_log_named_filetrans($1, faillog_t, file, \"faillog\")\n\tlogging_log_named_filetrans($1, faillog_t, file, \"btmp\")\n\tfiles_pid_filetrans($1, faillog_t, file, \"faillog\")\n\tfiles_pid_filetrans($1, faillog_t, dir, \"faillock\")\n\tfiles_pid_filetrans($1, pam_var_console_t, dir, \"console\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"pam_mount\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"pam_ssh\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"sepermit\")\n\tfiles_pid_filetrans($1, pam_var_run_t, dir, \"sudo\")\n\tlogging_log_named_filetrans($1, wtmp_t, file, \"wtmp\")\n\tfiles_var_filetrans($1, auth_cache_t, dir, \"coolkey\")\n')\n\n########################################\n## <summary>\n##\tGet the attributes of the passwd passwords file.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_getattr_passwd',`\n\tgen_require(`\n\t\ttype passwd_file_t;\n\t')\n\n\tfiles_search_etc($1)\n\tallow $1 passwd_file_t:file getattr;\n')\n\n########################################\n## <summary>\n##\tDo not audit attempts to get the attributes\n##\tof the passwd passwords file.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n#\ninterface(`auth_dontaudit_getattr_passwd',`\n\tgen_require(`\n\t\ttype passwd_file_t;\n\t')\n\n\tdontaudit $1 passwd_file_t:file getattr;\n')\n\n########################################\n## <summary>\n##\tRead the passwd passwords file (/etc/passwd)\n##\tAllow to use sss nsswitch module for passwd and group.\n##\tAllow to use systemd nsswitch module for passwd and group\n##\twhich is used for dynamic users.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_passwd',`\n\tgen_require(`\n\t\ttype passwd_file_t;\n\t')\n\n\tallow $1 passwd_file_t:file read_file_perms;\n\toptional_policy(`\n\t\tsssd_read_public_files($1)\n\t\tsssd_stream_connect($1)\n\t')\n\tinit_dbus_chat($1)\n')\n\n########################################\n## <summary>\n##\tMmap the passwd passwords file (/etc/passwd)\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_map_passwd',`\n\tgen_require(`\n\t\ttype passwd_file_t;\n\t')\n\n\tallow $1 passwd_file_t:file map;\n')\n\n########################################\n## <summary>\n##\tDo not audit attempts to read the passwd\n##\tpassword file (/etc/passwd).\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain to not audit.\n##\t</summary>\n## </param>\n#\ninterface(`auth_dontaudit_read_passwd',`\n\tgen_require(`\n\t\ttype passwd_file_t;\n\t')\n\n\tdontaudit $1 passwd_file_t:file read_file_perms;\n')\n\n########################################\n## <summary>\n##\tCreate, read, write, and delete the passwd\n##\tpassword file.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_passwd',`\n\tgen_require(`\n\t\ttype passwd_file_t;\n\t')\n\n\tfiles_rw_etc_dirs($1)\n\tallow $1 passwd_file_t:file manage_file_perms;\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd-\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"ptmptmp\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"group\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"group-\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \".pwd.lock\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"passwd.lock\")\n\tfiles_etc_filetrans($1, passwd_file_t, file, \"group.lock\")\n')\n\n########################################\n## <summary>\n##\tCreate auth directory in the /root directory\n##\twith an correct label.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_filetrans_admin_home_content',`\n\tgen_require(`\n\t\ttype auth_home_t;\n\t')\n\n\tuserdom_admin_home_dir_filetrans($1, auth_home_t, file, \".google_authenticator\")\n\tuserdom_admin_home_dir_filetrans($1, auth_home_t, file, \".google_authenticator~\")\n\tuserdom_admin_home_dir_filetrans($1, auth_home_t, dir, \".yubico\")\n\tuserdom_admin_home_dir_filetrans($1, auth_home_t, dir, \".config/Yubico\")\n')\n\n\n########################################\n## <summary>\n##\tRead the authorization data in the user home directory\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_read_home_content',`\n\t\n\tgen_require(`\n\t\ttype auth_home_t;\n\t')\n\n\tuserdom_search_user_home_dirs($1)\n\tread_files_pattern($1, auth_home_t, auth_home_t)\n')\n\n########################################\n## <summary>\n##\tRead the authorization data in the user home directory\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_manage_home_content',`\n\t\n\tgen_require(`\n\t\ttype auth_home_t;\n\t')\n\n\tuserdom_search_user_home_dirs($1)\n\tmanage_files_pattern($1, auth_home_t, auth_home_t)\n    manage_dirs_pattern($1, auth_home_t, auth_home_t)\n')\n\n########################################\n## <summary>\n##\tCreate auth directory in the user home directory\n##\twith an correct label.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_filetrans_home_content',`\n\t\n\tgen_require(`\n\t\ttype auth_home_t;\n\t')\n\n\tuserdom_user_home_dir_filetrans($1, auth_home_t, file, \".google_authenticator\")\n\tuserdom_user_home_dir_filetrans($1, auth_home_t, file, \".google_authenticator~\")\n\tuserdom_user_home_dir_filetrans($1, auth_home_t, dir, \".yubico\")\n\tuserdom_user_home_dir_filetrans($1, auth_home_t, dir, \".config/Yubico\")\n')\n\n########################################\n## <summary>\n##\tSend a SIGCHLD signal to login programs.\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_login_pgm_sigchld',`\n\tgen_require(`\n\t\tattribute login_pgm;\n\t')\n\n\tallow $1 login_pgm:process sigchld;\n')\n\n########################################\n## <summary>\n##\tManage the keyrings of all login programs\n## </summary>\n## <param name=\"domain\">\n##\t<summary>\n##\tDomain allowed access.\n##\t</summary>\n## </param>\n#\ninterface(`auth_login_manage_key',`\n\tgen_require(`\n\t\tattribute login_pgm;\n\t')\n\n\tallow $1 login_pgm:key manage_key_perms;\n')\n"], "filenames": ["policy/modules/system/authlogin.fc", "policy/modules/system/authlogin.if"], "buggy_code_start_loc": [1, 2315], "buggy_code_end_loc": [4, 2379], "fixing_code_start_loc": [2, 2316], "fixing_code_end_loc": [7, 2382], "type": "CWE-287", "message": "An issue was discovered in the selinux-policy (aka Reference Policy) package 3.14 through 2020-08-24 because the .config/Yubico directory is mishandled. Consequently, when SELinux is in enforced mode, pam-u2f is not allowed to read the user's U2F configuration file. If configured with the nouserok option (the default when configured by the authselect tool), and that file cannot be read, the second factor is disabled. An attacker with only the knowledge of the password can then log in, bypassing 2FA.", "other": {"cve": {"id": "CVE-2020-24612", "sourceIdentifier": "cve@mitre.org", "published": "2020-08-24T21:15:15.877", "lastModified": "2020-09-01T19:02:04.493", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "An issue was discovered in the selinux-policy (aka Reference Policy) package 3.14 through 2020-08-24 because the .config/Yubico directory is mishandled. Consequently, when SELinux is in enforced mode, pam-u2f is not allowed to read the user's U2F configuration file. If configured with the nouserok option (the default when configured by the authselect tool), and that file cannot be read, the second factor is disabled. An attacker with only the knowledge of the password can then log in, bypassing 2FA."}, {"lang": "es", "value": "Se detect\u00f3 un problema en el paquete selinux-policy (tambi\u00e9n se conoce como Reference Policy) versiones 3.14 hasta el 24-08-2020, porque el directorio .config/Yubico es manejado inapropiadamente. Por consiguiente, cuando SELinux est\u00e1 en modo forzado, pam-u2f no permite leer el archivo de configuraci\u00f3n U2F del usuario. Si se configura con la opci\u00f3n nouserok (el valor predeterminado cuando se configuraba por la herramienta authselect), y ese archivo no se puede leer, el segundo factor est\u00e1 deshabilitado. Un atacante que solo conozca la contrase\u00f1a puede iniciar sesi\u00f3n, omitiendo el 2FA."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N", "attackVector": "LOCAL", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.7, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.0, "impactScore": 3.6}, {"source": "cve@mitre.org", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N", "attackVector": "LOCAL", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 6.7, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.4, "impactScore": 5.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:M/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 1.9}, "baseSeverity": "LOW", "exploitabilityScore": 3.4, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-287"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:fedoraproject:selinux-policy:*:*:*:*:*:*:*:*", "versionStartIncluding": "3.14", "versionEndIncluding": "2020-08-24", "matchCriteriaId": "54DAD7B2-0120-49B5-BC25-D6A8BDCC8C3A"}]}]}], "references": [{"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1860888", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Third Party Advisory"]}, {"url": "https://github.com/fedora-selinux/selinux-policy/commit/71e1989028802c7875d3436fd3966c587fa383fb", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/fedora-selinux/selinux-policy/commit/71e1989028802c7875d3436fd3966c587fa383fb"}}