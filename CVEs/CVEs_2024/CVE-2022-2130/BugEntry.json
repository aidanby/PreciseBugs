{"buggy_code": ["/**\n * CSS-JSON Converter for JavaScript\n * Converts CSS to JSON and back.\n * Version 2.1\n *\n * Released under the MIT license.\n *\n * Copyright (c) 2013 Aram Kocharyan, http://aramk.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all copies or substantial portions\n of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n */\n\nvar CSSJSON = new function () {\n\n    var base = this;\n\n    base.init = function () {\n        // String functions\n        String.prototype.trim = function () {\n            return this.replace(/^\\s+|\\s+$/g, '');\n        };\n\n        String.prototype.repeat = function (n) {\n            return new Array(1 + n).join(this);\n        };\n    };\n    base.init();\n\n    var selX = /([^\\s\\;\\{\\}][^\\;\\{\\}]*)\\{/g;\n    var endX = /\\}/g;\n    var lineX = /([^\\;\\{\\}]*)\\;/g;\n    var commentX = /\\/\\*[\\s\\S]*?\\*\\//g;\n    var lineAttrX = /([^\\:]+):([^\\;]*);/;\n\n    // This is used, a concatenation of all above. We use alternation to\n    // capture.\n    var altX = /(\\/\\*[\\s\\S]*?\\*\\/)|([^\\s\\;\\{\\}][^\\;\\{\\}]*(?=\\{))|(\\})|([^\\;\\{\\}]+\\;(?!\\s*\\*\\/))/gmi;\n\n    // Capture groups\n    var capComment = 1;\n    var capSelector = 2;\n    var capEnd = 3;\n    var capAttr = 4;\n\n    var isEmpty = function (x) {\n        return typeof x == 'undefined' || x.length == 0 || x == null;\n    };\n\n    var isCssJson = function (node) {\n        return !isEmpty(node) ? (node.attributes && node.children) : false;\n    }\n\n    /**\n     * Input is css string and current pos, returns JSON object\n     *\n     * @param cssString\n     *            The CSS string.\n     * @param args\n     *            An optional argument object. ordered: Whether order of\n     *            comments and other nodes should be kept in the output. This\n     *            will return an object where all the keys are numbers and the\n     *            values are objects containing \"name\" and \"value\" keys for each\n     *            node. comments: Whether to capture comments. split: Whether to\n     *            split each comma separated list of selectors.\n     */\n    base.toJSON = function (cssString, args) {\n        var node = {\n            children: {},\n            attributes: {}\n        };\n        var match = null;\n        var count = 0;\n\n        if (typeof args == 'undefined') {\n            var args = {\n                ordered: false,\n                comments: false,\n                stripComments: false,\n                split: false\n            };\n        }\n        if (args.stripComments) {\n            args.comments = false;\n            cssString = cssString.replace(commentX, '');\n        }\n\n        while ((match = altX.exec(cssString)) != null) {\n            if (!isEmpty(match[capComment]) && args.comments) {\n                // Comment\n                var add = match[capComment].trim();\n                node[count++] = add;\n            } else if (!isEmpty(match[capSelector])) {\n                // New node, we recurse\n                var name = match[capSelector].trim();\n                // This will return when we encounter a closing brace\n                var newNode = base.toJSON(cssString, args);\n                if (args.ordered) {\n                    var obj = {};\n                    obj['name'] = name;\n                    obj['value'] = newNode;\n                    // Since we must use key as index to keep order and not\n                    // name, this will differentiate between a Rule Node and an\n                    // Attribute, since both contain a name and value pair.\n                    obj['type'] = 'rule';\n                    node[count++] = obj;\n                } else {\n                    if (args.split) {\n                        var bits = name.split(',');\n                    } else {\n                        var bits = [name];\n                    }\n                    for (var i = 0; i < bits.length; i++) {\n                        var sel = bits[i].trim();\n                        if (sel in node.children) {\n                            for (var att in newNode.attributes) {\n                                node.children[sel].attributes[att] = newNode.attributes[att];\n                            }\n                        } else {\n                            node.children[sel] = newNode;\n                        }\n                    }\n                }\n            } else if (!isEmpty(match[capEnd])) {\n                // Node has finished\n                return node;\n            } else if (!isEmpty(match[capAttr])) {\n                var line = match[capAttr].trim();\n                var attr = lineAttrX.exec(line);\n                if (attr) {\n                    // Attribute\n                    var name = attr[1].trim();\n                    var value = attr[2].trim();\n                    if (args.ordered) {\n                        var obj = {};\n                        obj['name'] = name;\n                        obj['value'] = value;\n                        obj['type'] = 'attr';\n                        node[count++] = obj;\n                    } else {\n                        if (name in node.attributes) {\n                            var currVal = node.attributes[name];\n                            if (!(currVal instanceof Array)) {\n                                node.attributes[name] = [currVal];\n                            }\n                            node.attributes[name].push(value);\n                        } else {\n                            node.attributes[name] = value;\n                        }\n                    }\n                } else {\n                    // Semicolon terminated line\n                    node[count++] = line;\n                }\n            }\n        }\n\n        return node;\n    };\n\n    /**\n     * @param node\n     *            A JSON node.\n     * @param depth\n     *            The depth of the current node; used for indentation and\n     *            optional.\n     * @param breaks\n     *            Whether to add line breaks in the output.\n     */\n    base.toCSS = function (node, depth, breaks) {\n        var cssString = '';\n        if (typeof depth == 'undefined') {\n            depth = 0;\n        }\n        if (typeof breaks == 'undefined') {\n            breaks = false;\n        }\n        if (node.attributes) {\n            for (i in node.attributes) {\n                var att = node.attributes[i];\n                if (att instanceof Array) {\n                    for (var j = 0; j < att.length; j++) {\n                        cssString += strAttr(i, att[j], depth);\n                    }\n                } else {\n                    cssString += strAttr(i, att, depth);\n                }\n            }\n        }\n        if (node.children) {\n            var first = true;\n            for (i in node.children) {\n                if (breaks && !first) {\n                    cssString += '\\n';\n                } else {\n                    first = false;\n                }\n                cssString += strNode(i, node.children[i], depth);\n            }\n        }\n        return cssString;\n    };\n\n    /**\n     * @param data\n     *            You can pass css string or the CSSJS.toJSON return value.\n     * @param id (Optional)\n     *            To identify and easy removable of the style element\n     * @param replace (Optional. defaults to TRUE)\n     *            Whether to remove or simply do nothing\n     * @return HTMLLinkElement\n     */\n    base.toHEAD = function (data, id, replace) {\n        var head = document.getElementsByTagName('head')[0];\n        var xnode = document.getElementById(id);\n        var _xnodeTest = (xnode !== null && xnode instanceof HTMLStyleElement);\n\n        if (isEmpty(data) || !(head instanceof HTMLHeadElement)) return;\n        if (_xnodeTest) {\n            if (replace === true || isEmpty(replace)) {\n                xnode.removeAttribute('id');\n            } else return;\n        }\n        if (isCssJson(data)) {\n            data = base.toCSS(data);\n        }\n\n        var node = document.createElement('style');\n        node.type = 'text/css';\n\n        if (!isEmpty(id)) {\n            node.id = id;\n        } else {\n            node.id = 'cssjson_' + timestamp();\n        }\n        if (node.styleSheet) {\n            node.styleSheet.cssText = data;\n        } else {\n            node.appendChild(document.createTextNode(data));\n        }\n\n        head.appendChild(node);\n\n        if (isValidStyleNode(node)) {\n            if (_xnodeTest) {\n                xnode.parentNode.removeChild(xnode);\n            }\n        } else {\n            node.parentNode.removeChild(node);\n            if (_xnodeTest) {\n                xnode.setAttribute('id', id);\n                node = xnode;\n            } else return;\n        }\n\n        return node;\n    };\n\n    // Alias\n\n    if (typeof window != 'undefined') {\n        window.createCSS = base.toHEAD;\n    }\n\n    // Helpers\n\n    var isValidStyleNode = function (node) {\n        return (node instanceof HTMLStyleElement) && node.sheet.cssRules.length > 0;\n    }\n\n    var timestamp = function () {\n        return Date.now() || +new Date();\n    };\n\n    var strAttr = function (name, value, depth) {\n        return '\\t'.repeat(depth) + name + ': ' + value + ';\\n';\n    };\n\n    var strNode = function (name, value, depth) {\n        var cssString = '\\t'.repeat(depth) + name + ' {\\n';\n        cssString += base.toCSS(value, depth + 1);\n        cssString += '\\t'.repeat(depth) + '}\\n';\n        return cssString;\n    };\n\n};\n\nif (typeof module === 'object') {\n    module.exports = CSSJSON;\n}\n", "mw.require('libs/cssjson/cssjson.js');\n\n\nmw.liveeditCSSEditor = function (config) {\n    var scope = this;\n    config = config || {};\n    config.document = config.document || document;\n    var node = document.querySelector('link[href*=\"live_edit\"]');\n    var defaults = {\n        cssUrl: node ? node.href : null,\n        saveUrl: mw.settings.api_url + \"current_template_save_custom_css\"\n    };\n    this.settings = $.extend({}, defaults, config);\n\n    this.json = null;\n\n    this.getByUrl = function (url, callback) {\n        return $.get(url, function (css) {\n            callback.call(this, css)\n        });\n    };\n\n    this.getLiveeditCSS = function () {\n        if( this.settings.cssUrl ) {\n            this.getByUrl( this.settings.cssUrl, function (css) {\n                if(/<\\/?[a-z][\\s\\S]*>/i.test(css)) {\n                    scope.json = {};\n                    scope._css = '';\n                } else {\n                    scope.json = CSSJSON.toJSON(css);\n                    scope._css = css;\n                }\n                $(scope).trigger('ready');\n            });\n        }\n        else {\n            scope.json = {};\n            scope._css = '';\n            $(scope).trigger('ready');\n        }\n    };\n\n\n    this._cssTemp = function (json) {\n        var css = CSSJSON.toCSS(json);\n        if(!mw.liveedit._cssTemp) {\n            mw.liveedit._cssTemp = mw.tools.createStyle('#mw-liveedit-dynamic-temp-style', css, document.body);\n            mw.liveedit._cssTemp.id = 'mw-liveedit-dynamic-temp-style';\n        } else {\n            mw.liveedit._cssTemp.innerHTML = css;\n        }\n    };\n\n    this.changed = false;\n    this._temp = {children: {}, attributes: {}};\n    this.temp = function (node, prop, val) {\n        this.changed = true;\n        if(node.length) {\n            node = node[0];\n        }\n        var sel = mw.tools.generateSelectorForNode(node);\n        if(!this._temp.children[sel]) {\n            this._temp.children[sel] = {};\n        }\n        if (!this._temp.children[sel].attributes ) {\n            this._temp.children[sel].attributes = {};\n        }\n        this._temp.children[sel].attributes[prop] = val;\n        this._cssTemp(this._temp);\n    };\n\n    this.timeOut = null;\n\n    this.save = function () {\n        this.json = $.extend(true, {}, this.json, this._temp);\n        this._css = CSSJSON.toCSS(this.json).replace(/\\.\\./g, '.').replace(/\\.\\./g, '.');\n    };\n\n    this.findBySelector = function (selector) {\n        var json = this.getJSONValue();\n        return json.children[selector];\n    }\n\n    this.publish = function (callback) {\n        var css = {\n            css_file_content: this.getValue()\n        };\n        $.post(this.settings.saveUrl, css, function (res) {\n            scope.changed = false;\n            if(callback) {\n                callback.call(this, res);\n            }\n        });\n    };\n\n    this.publishIfChanged = function (callback) {\n        if(this.changed) {\n            this.publish(callback);\n        }\n    };\n\n    this.getValue = function () {\n        this.save();\n        return this._css;\n    };\n\n    this.getJSONValue = function () {\n        this.save();\n        return this.json;\n    };\n\n    this.init = function () {\n        this.getLiveeditCSS();\n    };\n\n    this.init();\n\n};\n\n", "\n<div id=\"domtree\"></div>\n\n<style>\n    html,body{\n        overflow: hidden;\n\n    }\n    #css-editor-root .mw-accordion-title svg{\n        width:21px;\n        height: 21px;\n        margin-inline-end: 8px;\n    }\n    #css-editor-root .mw-accordion-title{\n        font-weight: bold;\n    }\n\n    #columns-edit .mw-field{\n        padding-bottom: 15px;\n    }\n    #columns-edit .mdi{\n        font-size: 19px;\n        position: relative;\n        top: 4px;\n        margin-inline-end: 15px;\n        margin-inline-start: 15px;\n    }\n\n    .default-values-list > span{\n        display:block;\n        padding:5px 10px;\n        cursor: pointer;\n    }\n    .default-values-list{\n        position: absolute;\n        top:-100%;\n        left:-100%;\n        padding: 10px;\n        z-index:1;\n        background: #fff;\n        box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n\n    }\n    .animation-clear-btn{\n        float: right;\n        margin: -30px 0 0 0;\n    }\n\n    html[dir=\"rtl\"] .animation-clear-btn{\n        float: left;\n     }\n\n    .mw-field .mw-range + .mw-range{\n        display: none;\n    }\n\n</style>\n<script>mw.require('prop_editor.js')</script>\n<script>mw.require('module_settings.js')</script>\n<script>mw.lib.require('colorpicker')</script>\n<script type=\"text/javascript\">\n\n    // mw.parent().require(\"external_callbacks.js\");\n    mw.require(\"jquery-ui.js\");\n    mw.require(\"events.js\");\n    mw.require(\"forms.js\");\n    mw.require(\"files.js\");\n    mw.require(\"url.js\");\n    mw.require('prop_editor.js');\n    mw.require('color.js');\n    mw.require('selector.js');\n    mw.require('tree.js');\n\n    mw.require('domtree.js');\n\n\n    mw.require('css_parser.js');\n\n    var colorPickers = [];\n\n    var positionSelector = function () {\n        var root = mw.element({props: { className: 'mw-position-selector'}})\n        var posTop = mw.element({props: { className: 'mw-position-selector-top'}});\n        var posRight = mw.element({props: { className: 'mw-position-selector-right'}});\n        var posBottom = mw.element({props: { className: 'mw-position-selector-bottom'}});\n        var posLeft = mw.element({props: { className: 'mw-position-selector-left'}});\n        var all = mw.element({props: { className: 'mw-position-selector-all'}});\n\n        root.append(posTop)\n        root.append(posRight)\n        root.append(posBottom)\n        root.append(posLeft)\n        root.append(all)\n\n        return {\n            root: root,\n            top: posTop,\n            right: posRight,\n            bottom: posBottom,\n            left: posLeft,\n            all: all,\n        };\n    }\n\n\n    $(window).on('load', function () {\n\n       setTimeout(function() {\n            mw.top().liveEditDomTree = new mw.DomTree({\n                element: '#domtree',\n                resizable:true,\n                targetDocument: mw.top().win.document,\n                canSelect: function (node, li) {\n                    var cant = (!mw.tools.isEditable(node) && !node.classList.contains('edit') && !node.id);\n                    return !cant;\n                    // return mw.tools.isEditable(node) || node.classList.contains('edit');\n                },\n                onHover: function (e, target, node, element) {\n                    mw.top().liveEditSelector.setItem(node, mw.top().liveEditSelector.interactors, false);\n                },\n                onSelect: function (e, target, node, element) {\n                     setTimeout(function () {\n                        mw.top().liveEditSelector.select(node);\n\n\n                        mw.top().tools.scrollTo(node, undefined, (mw.top().$('#live_edit_toolbar').height() + 10))\n                    })\n                }\n            });\n        }, 700);\n\n       $('.rte_css_editor_svg').each(function (img){\n           (function (img){\n\n               $.get(img.src, function (data){\n\n                    $(img).replaceWith(data.all[0])\n               })\n           })(this)\n       })\n\n        $('.mw-field.mw-field-flat.unit').each(function (){\n            if(!this.querySelector('.mw-range')) {\n                var sl = mw.element('<div class=\"mw-range default-values-list-slider\" />');\n                $('input', this).on('input', function () {\n                    var val = this.value;\n                    var slVal = this.value;\n                    var t = ['auto', 'normal', 'inherit', 'initial'];\n\n                    if(t.includes(val)) {\n                        slVal = 0\n                    }\n\n                    var num = parseFloat(slVal);\n                    if(isNaN(num)) {\n                        num = 0;\n                    }\n\n                    if(/^\\d+$/.test(val)) {\n                        val = this.value + 'px'\n                    }\n                    output(this.parentNode.dataset.prop, val);\n                    $(sl.get(0)).slider('value', num)\n                })\n                $(sl.get(0)).slider({\n                    min: 0,\n                    max: 100,\n                    step: 1,\n                    slide: function( event, ui ) {\n\n                        var dvalUnit = (/^\\d+$/.test(this.previousElementSibling.value) ?  'px' : this.previousElementSibling.value.replace(/[0-9]/g, '')).trim().toLowerCase();\n                        var units = ['cm','mm','q','in','pc','pt','px','em','ex','ch','rem','lh','vw','vh','vmin','vmax',]\n                        var dval = ui.value;\n\n                        dval += (units.indexOf(dvalUnit) !== -1 ? dvalUnit : 'px');\n\n                        console.log(dval)\n                        console.log(dvalUnit)\n\n                        this.previousElementSibling.value = dval;\n                        output(this.parentNode.dataset.prop, dval)\n\n                    }\n                })\n                $(this).append(sl.get(0));\n            }\n        })\n\n\n\n    })\n\n</script>\n<script>\n\nvar ActiveNode = null;\n\nvar reset = function(){\n    if(!ActiveNode){\n        return;\n    }\n    var sel = mw.tools.generateSelectorForNode(ActiveNode);\n    var data = {};\n    data[sel] = {\n        selector: sel,\n        value: \"reset\"\n    };\n\n    mw.top().$.post(mw.settings.api_url + \"current_template_save_custom_css\", data, function(data){\n        mw.notification.success('Element styles restored');\n        mw.tools.refresh(top.document.querySelector('link[href*=\"live_edit.css\"]'))\n    }).fail(function(){\n\n    });\n    mw.top().wysiwyg.change(ActiveNode)\n};\n\n\nvar CSSShadow;\n\nvar _activeTree = null;\nvar _pauseActiveTree = false;\nvar activeTree = function(){\n    if(!ActiveNode || _pauseActiveTree) {\n        return;\n    }\n    var getParent = function(node){\n        if(!node || node === document.body || !node.parentNode || mw.tools.hasClass(node, 'edit')){\n            return false;\n        }\n        if(node.parentNode.id){\n            return node.parentNode;\n        } else  if(mw.tools.hasClass(node.parentNode, 'edit')){\n            return node.parentNode;\n        } else {\n            return getParent(node.parentNode);\n        }\n    };\n    var data = [], curr = ActiveNode, count = 0;\n    while(curr && curr !== document.body){\n        var custom = !!curr.className;\n        if(curr.id || mw.tools.hasClass(curr, 'edit') || custom){\n            count++;\n            if (count > 4) {\n                break;\n            }\n            var parent = getParent(curr);\n            var selector = mw.tools.generateSelectorForNode(curr)\n                .replace(/\\[/g, 'mw')\n                .replace(/[\"']/g, '')\n                .replace(/\\]/g, 'mw');\n            var parent_selector = 0;\n\n            if(parent) {\n                parent_selector =  mw.tools.generateSelectorForNode(parent)\n                    .replace(/\\[/g, 'mw')\n                    .replace(/[\"']/g, '')\n                    .replace(/\\]/g, 'mw');\n            }\n            var ttitle = curr.tagName.toLowerCase() + (curr.classList.length ? ('.' + curr.className.split(' ').join('.')) : '');\n            if(mw.tools.hasClass(curr, 'module')) {\n                ttitle = curr.dataset.mwTitle || curr.dataset.type;\n            }\n            var item = {\n                id: selector,\n                type: 'page',\n                title: ttitle ,\n                parent_id: parent_selector,\n                parent_type: 'page',\n                element: curr\n            };\n\n            data.push(item)\n        }\n        else {\n            parent = null;\n        }\n        if(parent){\n            curr = parent;\n        }\n        else {\n            curr = null;\n        }\n\n    }\n    data = data.reverse();\n\n    $('#tree').empty();\n\n\n\n    _activeTree = new mw.tree({\n        element:'#tree',\n        data:data,\n        saveState: false,\n        selectable: true,\n        singleSelect:true,\n        contextMenu: [\n            {\n                title: 'Reset styles',\n                icon: 'mw-icon-reload',\n                action: function() {\n                    reset()\n                }\n            }\n        ]\n    });\n\n    _activeTree.openAll();\n    _activeTree.select($('#tree li:last')[0]);\n\n    $(_activeTree).on('selectionChange', function(e, data){\n        _pauseActiveTree = true;\n        if(data[0]){\n            mw.top().liveEditSelector.select(data[0].element);\n        }\n        setTimeout(function(){\n            _pauseActiveTree = false;\n        }, 10)\n    })\n\n\n};\n\n\nvar _prepare = {\n    shadow: function () {\n        var root = document.querySelector('#shadow');\n        if(!root) {\n            return;\n        }\n        CSSShadow = new mw.propEditor.schema({\n            schema: [\n                {\n                    interface: 'shadow',\n                    id: 'boxShadow',\n                    pickerPosition: 'top-left'\n                }\n            ],\n            element: root,\n            size:'medium'\n        });\n        $(CSSShadow).on('change', function(e, id, val){\n            output(id, val)\n        });\n        $('.mw-ui-field', root).addClass('mw-ui-field-medium');\n        $('.mw-ui-btn', root).addClass('mw-ui-btn-medium');\n    },\n    border: function () {\n\n        var bordercolor = document.querySelector('#border-color')\n        colorPickers.push(mw.colorPicker({\n            element: bordercolor,\n            position: bordercolor.dataset.position || 'top-right',\n            onchange: function (color){\n\n                    $(bordercolor).trigger('colorChange', color)\n\n            },\n            color: this.value\n        }));\n\n        var pos = positionSelector();\n\n        $('#border-size, #border-color, #border-type').on('change input colorChange', function(){\n\n            var prop = 'border',\n                propval = $('#border-position').val();\n            if(propval !== 'all') {\n                prop += (propval)\n            }\n            var color = $('#border-color').val() || '#111',\n                type = $('#border-type').val() || 'solid',\n                size = $('#border-size').val() || '1';\n            output( prop, size + 'px ' + type + ' ' + color);\n        });\n    },\n    units: function(){\n        var units = [\n            'px', '%', 'rem', 'em', 'vh', 'vw'\n        ];\n        units = [];// todo: add units\n        $('mw-accordion-item.mw-accordion-item-css .unit:not(.ready)').each(function(){\n            this.classList.add('ready')\n            // var select = $('<select style=\"width: 60px\"/>');\n            var select = $('<span class=\"reset-field  tip\" data-tipposition=\"top-right\" data-tip=\"Restore default value\"><i class=\"mdi mdi-history\"></i></span>');\n            select.on('click', function () {\n                var prev = $(this).prev();\n                var prop = prev.attr('data-prop');\n                var css = getComputedStyle(ActiveNode);\n                var val = '';\n                if(prop ) {\n                    output( prop, '');\n                    val = css[prop];\n                }\n\n\n\n\n                prev.find('input').val(val);\n                var n = parseFloat(val)\n                $('.mw-range.ui-slider', prev).slider('value', !isNaN(n) ? n : 0)\n            });\n            $('input', this)\n                .attr('type', 'range');\n\n                //.after('<input>')\n            $.each(units, function(){\n                select.append('<option value=\"'+this+'\">'+this+'</option>');\n            });\n            select.on('change', function(){\n                var prev = $(this).parent().prev();\n                var prop = prev.attr('data-prop');\n                if(prop ) {\n                    output(prop, prev.find('input').val() + this.value)\n\n                }\n            });\n\n            $(this).after(select);\n            $('input', this).on('input', function(){\n                var $el = $(this);\n                var parent = $el.parent()\n                 var val = $el.val().trim();\n                var prop = parent.attr('data-prop');\n                if(prop) {\n                    if(parseFloat(val) == val){\n                        output( prop, val ? val + 'px' : '');\n                    } else {\n                        output( prop, val ? val + 'px' : '');\n                    }\n                }\n\n            })\n        })\n    }\n};\nvar _populate = {\n    margin: function(css){\n        if(!css || !css.get) return;\n        var margin = css.get.margin(undefined, true);\n        mw.$('.margin-top').val(parseFloat(margin.top));\n        mw.$('.margin-right').val(parseFloat(margin.right));\n        mw.$('.margin-bottom').val(parseFloat(margin.bottom));\n        mw.$('.margin-left').val(parseFloat(margin.left));\n    },\n    border: function(css){\n        if(!css || !css.get) return;\n        var border = css.get.border(true);\n\n        var frst = {};\n        for (var i in border) {\n            if (border[i].width !== 0) {\n                frst = border[i];\n                break;\n            }\n        }\n        var size = frst.width || 0;\n        var color = frst.color || 'rgba(0,0,0,1)';\n        var style = frst.style || 'none';\n\n        mw.$('#border-position').val('all');\n        mw.$('#border-size').val(size);\n        mw.$('#border-color').val(color);\n        mw.$('#border-type').val(style);\n    },\n    padding: function(css){\n        var padding = css.get.padding(undefined, true);\n        mw.$('.padding-top').val(parseFloat(padding.top));\n        mw.$('.padding-right').val(parseFloat(padding.right));\n        mw.$('.padding-bottom').val(parseFloat(padding.bottom));\n        mw.$('.padding-left').val(parseFloat(padding.left))\n    },\n    common: function(css){\n        $('.unit').each(function(){\n            var val = css.css[this.dataset.prop];\n            var btn = $('.mw-ui-btn', this.parentNode)[0];\n            if (btn) {\n                btn._defaultValue = '';\n            }\n            if (val) {\n                var nval = parseFloat(val);\n                var isn = !isNaN(nval);\n                var unit = val.replace(/[0-9]/g, '').replace(/\\./g, '');\n                val = isn ? nval : val;\n                if (btn) {\n                    btn._defaultValue = val;\n                }\n                $('input', this).val(val);\n                $('.mw-range.ui-slider', this).slider('value', isn ? nval : 0)\n            }\n        });\n        $(\".colorField\").each(function(){\n            if(this.dataset.prop) {\n                var color = css.css[this.dataset.prop];\n                var hasColor = color !== 'rgba(0, 0, 0, 0)';\n                if(color) {\n                    if (hasColor) {\n                        this.value = mw.color.rgbOrRgbaToHex(color);\n                    } else {\n                        this.value = 'none';\n                        this.previousElementSibling.querySelector('.mw-field-color-indicator-display').style.backgroundColor = 'transparent'\n                    }\n                }\n\n                this.type = 'text'\n\n                var el = this;\n\n                el.placeholder = '#ffffff';\n                if(this.parentNode.querySelector('.mw-field-color-indicator') === null) {\n                    $(this).before('<span class=\"mw-field-color-indicator\"><span class=\"mw-field-color-indicator-display\"></span></span>')\n                }\n                var indikatorDisplay =  this.parentNode.querySelector('.mw-field-color-indicator-display');\n                indikatorDisplay.style.backgroundColor = this.value\n\n                colorPickers.push(mw.colorPicker({\n                    element: this,\n                    position: this.dataset.position || 'bottom-right',\n                    onchange: function (color){\n                         if(el.dataset.prop) {\n                            output(el.dataset.prop, color);\n                        } else if(el.dataset.func) {\n                            eval(el.dataset.func + '(' + color + ')');\n                        } else {\n                            $(el).trigger('colorChange', color)\n                        }\n                        indikatorDisplay.style.backgroundColor = color\n                    },\n                    color: this.value\n                }))\n\n            }\n        });\n        $(\".background-preview\").css('backgroundImage', css.css.backgroundImage)\n    },\n    textAlign: function(css){\n        var align = css.get.alignNormalize();\n        $(\".text-align .active\").removeClass('active');\n        $(\".text-align .ta-\" + align).addClass('active');\n    },\n    regular: function(css){\n        $(\".regular\").each(function(){\n            var propName = this.dataset.prop;\n            if(propName === 'fontFamily'){\n                var val = css.css[this.dataset.prop].replace(/\\\"/g, \"\");\n                var el = $(this)\n                el.val(val);\n                if(el.val() === null) {\n                    el.append('<option value=\"'+val+'\">'+val+'</option>');\n                    el.val(val);\n                }\n            } else {\n                $(this).val(css.css[this.dataset.prop])\n            }\n        });\n    }\n};\n\nvar populate = function(css){\n    $.each(_populate, function(){\n        this(css)\n    })\n};\n\nvar sccontainertype = function (value){\n    var cnt = mw.tools.firstParentOrCurrentWithAnyOfClasses(ActiveNode, ['container', 'container-fluid']);\n    if(cnt && mw.tools.isEditable(cnt)){\n        cnt.classList.remove('container');\n        cnt.classList.remove('container-fluid');\n        cnt.classList.add(value);\n        mw.top().wysiwyg.change(cnt);\n    }\n}\nvar scColumns = function (property, value){\n    var tg = ActiveNode;\n    while (tg && tg.classList) {\n        if(!tg.classList.contains('col') && !tg.className.contains('col-')) {\n            tg = tg.parentNode;\n        } else {\n            break\n        }\n    }\n\n    if(property === 'col-desktop') {\n        for (var i = 1; i <= 12; i++) {\n            tg.classList.remove('col-' + i)\n            tg.classList.remove('col-lg-' + i)\n        }\n        // tg.classList.add('col-' + value)\n        tg.classList.add('col-lg-' + value)\n    } else if(property === 'col-tablet') {\n        for (var i = 1; i <= 12; i++) {\n            tg.classList.remove('col-md-' + i)\n        }\n        tg.classList.add('col-md-' + value)\n    } else if(property === 'col-mobile') {\n        for (var i = 1; i <= 12; i++) {\n            tg.classList.remove('col-xs-' + i)\n            tg.classList.remove('col-sm-' + i)\n        }\n        tg.classList.add('col-sm-' + value)\n    }\n}\n\nvar OverlayNode = null;\n\nvar specialCases = function (property, value){\n    if(!property) return;\n    if(property.includes('col-')){\n        scColumns(property, value)\n        return true;\n    } else if(OverlayNode && property === 'overlay-color') {\n        OverlayNode.style.backgroundColor = value;\n        mw.top().wysiwyg.change(OverlayNode);\n        return true;\n    }  else if(OverlayNode && property === 'overlay-blend-mode') {\n        OverlayNode.style.mixBlendMode = value;\n        mw.top().wysiwyg.change(OverlayNode);\n        return true;\n    }\n\n}\n\nvar populateSpecials = function (css) {\n    var holder = document.getElementById('columns-edit');\n    var colDesktop = document.querySelector('[data-prop=\"col-desktop\"]')\n    var coltablet = document.querySelector('[data-prop=\"col-tablet\"]')\n    var colmobile = document.querySelector('[data-prop=\"col-mobile\"]')\n    colDesktop.value = ''\n    coltablet.value = ''\n    colmobile.value = ''\n    holder.style.display = 'none';\n\n    var containerType = document.querySelector('#container-type');\n    containerType.style.display = 'none';\n    var ol = document.getElementById('overlay-edit');\n    ol.style.display = 'none';\n    OverlayNode = null;\n\n    if(ActiveNode) {\n         var cnt = mw.tools.firstParentOrCurrentWithAnyOfClasses(ActiveNode, ['container', 'container-fluid']);\n        if(cnt && mw.tools.isEditable(cnt)){\n            containerType.style.display = '';\n            if(cnt.classList.contains('container-fluid')) {\n                document.querySelector('[name=\"containertype\"][value=\"container-fluid\"]').checked = true\n            } else  if(cnt.classList.contains('container')) {\n                document.querySelector('[name=\"containertype\"][value=\"container\"]').checked = true\n            }\n        }\n\n        var layout = mw.tools.firstParentOrCurrentWithAnyOfClasses(ActiveNode, ['module-layouts']);\n        if(layout) {\n            var overlay = layout.querySelector('.mw-layout-overlay');\n            OverlayNode = overlay;\n            if(overlay) {\n                var overlayCss = getComputedStyle(overlay);\n                var bgColor = overlayCss.backgroundColor;\n                var blend = overlayCss.mixBlendMode;\n                var oc = document.getElementById('overlay-color')\n                var blendfield = document.getElementById('overlay-blend-mode')\n                blendfield.value = blend\n                oc.value = bgColor\n                oc.parentNode.querySelector('.mw-field-color-indicator-display').style.backgroundColor = bgColor\n                ol.style.display = '';\n            }\n\n        }\n\n\n\n        var col = null;\n        var tg = ActiveNode;\n        while (tg && tg.classList) {\n            if(!tg.classList.contains('col') && !tg.className.contains('col-')) {\n                tg = tg.parentNode;\n            } else {\n                if(mw.tools.isEditable(tg)){\n                    col = tg;\n                    break\n                } else {\n                    tg = tg.parentNode;\n                }\n            }\n        }\n        if(col) {\n            holder.style.display = '';\n            var lg = col.className.split('col-lg-')[1] || '';\n            var md = col.className.split('col-md-')[1] || '';\n            var sm = col.className.split('col-sm-')[1] || '';\n            colDesktop.value = lg.split(' ')[0];\n            coltablet.value = md.split(' ')[0];\n            colmobile.value = sm.split(' ')[0];\n        }\n    }\n}\n\nvar output = function(property, value){\n    if(!ActiveNode) {\n        ActiveNode = mw.top().liveEditSelector.selected\n    }\n    if(ActiveNode.length) {\n        ActiveNode = ActiveNode[0]\n    }\n    if(ActiveNode) {\n        if(!specialCases(property, value)) {\n            //  ActiveNode.style[property] = value;\n            mw.top().liveedit.cssEditor.temp(ActiveNode, property.replace( /([a-z])([A-Z])/g, '$1-$2' ).toLowerCase(), value + '!important')\n            // ActiveNode.style.setProperty(property, value);\n            ActiveNode.setAttribute('staticdesign', true);\n        }\n        mw.top().wysiwyg.change(ActiveNode);\n        mw.top().liveEditSelector.positionSelected();\n    }\n};\n\nvar _defaultValuesArray = ['auto', 'inherit', 'unset'];\n\nvar numValue = function (value) {\n    if(/^\\d+$/.test(value)) {\n        return value + 'px';\n    }\n    return value;\n};\n\n\nvar defaultValuesUIProp = null\nvar defaultValuesUITarget = null;\nvar _defaultValuesUI;\nvar dfslider\nvar defaultValuesUI = function (prop, targetNode) {\n\n    if(!_defaultValuesUI) {\n        var node = mw.element('<div class=\"default-values-list\" />');\n        _defaultValuesUI = node.get(0);\n        dfslider = mw.element('<div class=\"mw-range default-values-list-slider\" />');\n        node.append(dfslider)\n        $(dfslider.get(0)).slider({\n            slide: function( event, ui ) {\n                var val = parseFloat(ui.value);\n                if(isNaN(val)) {\n                    val = 0;\n                }\n                output(defaultValuesUIProp, numValue(val))\n                defaultValuesUITarget.value = val\n            }\n        })\n        _defaultValuesArray.forEach(function (val){\n            var li = mw.element({\n                tag: 'span',\n                props:{\n                    innerHTML: val,\n\n                    dataset: {\n                        value: val\n                    }\n                },\n\n            })\n            li.on('click', function (){\n                output(prop, numValue(this.dataset.value))\n            })\n            node.append(li)\n        })\n        document.body.appendChild(node.get(0))\n        document.body.addEventListener('click', function (e){\n            if(e.target !== _defaultValuesUI && !_defaultValuesUI.contains(e.target) && e.target !== defaultValuesUITarget) {\n                _defaultValuesUI.style.display = 'none';\n            }\n        })\n    }\n\n    targetNode.addEventListener('focus', function (e){\n        var val = parseFloat(targetNode.value);\n        if(isNaN(val)) {\n            val = 0;\n        }\n        $(dfslider.get(0)).slider(\"value\", val)\n        defaultValuesUIProp = prop;\n        defaultValuesUITarget = e.target;\n        var rect = e.target.getBoundingClientRect();\n        _defaultValuesUI.style.top = (rect.top + scrollY + rect.height) + 'px'\n        var lft = (rect.left + scrollX);\n        if((lft + _defaultValuesUI.offsetWidth) > innerWidth) {\n            lft = innerWidth -  (_defaultValuesUI.offsetWidth + 10) ;\n        }\n        _defaultValuesUI.style.left = lft + 'px'\n        _defaultValuesUI.style.display = 'block';\n    })\n\n\n\n    return node;\n}\n\nvar init = function(){\n\n    var spacesFields = [\n        ['.margin-top', 'marginTop'],\n        ['.margin-right', 'marginRight'],\n        ['.margin-bottom', 'marginBottom'],\n        ['.margin-left', 'marginLeft'],\n\n        ['.padding-top', 'paddingTop'],\n        ['.padding-right', 'paddingRight'],\n        ['.padding-bottom', 'paddingBottom'],\n        ['.padding-left', 'paddingLeft'],\n    ];\n\n    spacesFields.forEach(function (item){\n        var node = mw.element(item[0])\n        node.on('input', function(){ output(item[1], numValue(this.value)) });\n        defaultValuesUI(item[1], node.get(0))\n    })\n\n\n\n\n\n\n\n    $('.text-align > span').on('click', function(){\n        output('textAlign', this.dataset.value);\n        $('.text-align > .active').removeClass('active');\n        $(this).addClass('active')\n    });\n    $(\".colorField\").each(function(){\n        var el = this;\n        el.oninput = function(){\n            var color = this.value;\n            if(el.dataset.prop) {\n                output(el.dataset.prop, color);\n            } else if(el.dataset.func) {\n                eval(el.dataset.func + '(' + color + ')');\n            } else {\n                $(el).trigger('colorChange', color)\n            }\n        }\n    });\n\n    $(\".regular\").on('input', function(){\n        output(this.dataset.prop, this.value)\n    });\n\n    $(\"#background-remove\").on(\"click\", function () {\n        $('.background-preview').css('backgroundImage', 'none');\n        output('backgroundImage', 'none')\n    });\n    $(\"#background-reset\").on(\"click\", function () {\n        output('backgroundImage', '');\n    });\n\n    $(\"#background-select-gradient\").on(\"click\", function () {\n\n        var mTitle = \"Pick gradient color\";\n        var defaults = {\n            url: mw.external_tool('gradient_picker'),\n            width: 500,\n            height: 500,\n            autoHeight:true,\n            overlay:true,\n            title: 'Gradient Picker',\n            className: 'mw-dialog-module-settings',\n            closeButtonAction: 'remove'\n        };\n        var options = {};\n        var settings = Object.assign({}, defaults, options)\n        return mw.top().dialogIframe(settings);\n\n    });\n    $(\"#background-select-item\").on(\"click\", function () {\n        var dialog;\n        var picker = new mw.filePicker({\n            type: 'images',\n            label: false,\n            autoSelect: false,\n            footer: true,\n            _frameMaxHeight: true,\n\n            onResult: function (data) {\n                if(!data) return;\n                var url = data.src ? data.src : data;\n                output('backgroundImage', 'url(' + url + ')');\n                $('.background-preview').css('backgroundImage', 'url(' + url + ')')\n                dialog.remove()\n            },\n            cancel: function () {\n                dialog.remove()\n            }\n        });\n        dialog = mw.top().dialog({\n            content: picker.root,\n            title: mw.lang('Select image'),\n            footer: false,\n            width: 1200\n        })\n\n\n    });\n\n    _prepare.units();\n    _prepare.border();\n    _prepare.shadow();\n\n    $('.mw-ui-box-header').on('click', function(){\n        setTimeout(function(){\n          $(document.body).trigger('click')\n        }, 400)\n    });\n\n\n\n\n};\n\n\n\nmw.top().$(mw.top().liveEditSelector).on('select', function(e, nodes){\n    if(nodes && nodes[0] && nodes[0].nodeType === 1){\n        var css = mw.CSSParser(nodes[0]);\n        populate(css);\n        ActiveNode = nodes[0];\n\n        populateSpecials(css);\n\n        var clsdata = [];\n        $.each(nodes[0].className.split(' '), function(){\n            var cls = this.trim();\n            if(cls) {\n                clsdata.push({title: cls})\n            }\n        });\n        ( window.classes || initClasses() ).setData(clsdata)\n    }\n\n    if(ActiveNode){\n        var can = ActiveNode.textContent === ActiveNode.innerHTML;\n        mw.$('#text-mask')[can ? 'show' : 'hide']();\n        mw.$('#text-mask-field')[0].checked = mw.tools.hasClass(ActiveNode, 'mw-bg-mask');\n        if(ActiveNode.classList.contains('module') || !mw.tools.parentsOrCurrentOrderMatchOrOnlyFirst(ActiveNode.parentNode, ['edit', 'module'])) {\n            $('#classtags-accordion').hide();\n        } else{\n            $('#classtags-accordion').show();\n        }\n    }\n\n    animationGUI.set()\n});\n\n    $(document).ready(function(){\n        mw.$('.mw-field input').attr('autocomplete', 'off')\n        mw.top().$(top.document.body).on('mousedown touchstart', function(e){\n            var node = mw.tools.firstMatchesOnNodeOrParent(e.target, ['.element', '.module']);\n            if( !node && !mw.tools.firstParentOrCurrentWithAnyOfClasses(e.target, ['mw-control-box', 'mw-defaults']) ){\n                ActiveNode = null;\n            }\n        });\n\n        $(\".mw-element-spacing-editor input\")\n            .on('focus', function(){\n\n                $(\".mw-ese-holder.active\").removeClass('active');\n                $(this).parent().addClass('active');\n            })\n            .on('blur', function(){\n                $(\".mw-ese-holder.active\").removeClass('active');\n        });\n\n\n            init();\n\n            var editorRoot = document.getElementById('css-editor-root');\n\n            setInterval(function(){\n                editorRoot.classList[ActiveNode ? 'remove' : 'add']('disabled');\n            }, 700)\n            mw.components._init();\n\n\n    });\n\n    $(window).on('load', function () {\n        if(mw.top().liveEditSelector.selected[0]){\n            ActiveNode = mw.top().liveEditSelector.selected[0];\n\n             if(ActiveNode){\n                var css = mw.CSSParser(ActiveNode);\n                populate(css);\n\n                var can = ActiveNode.innerText === ActiveNode.innerHTML;\n                mw.$('#text-mask')[can ? 'show' : 'hide']();\n\n                mw.$('#text-mask-field')[0].checked = mw.tools.hasClass(ActiveNode, 'mw-bg-mask');\n                 animationGUI.set()\n            }\n            populateSpecials(css);\n        }\n        mw.top().liveEditSelector.positionSelected();\n        setTimeout(function(){\n            $(document.body).trigger('click')\n        }, 400)\n        mw.top().win.document.body.addEventListener('click', function (){\n            colorPickers.forEach(function (cp) {\n                 if(cp.hide) {\n                    cp.hide()\n                } else {\n                    cp.style.display = 'none'\n                }\n\n            })\n        })\n\n    });\n</script>\n\n\n<style>\n\n    <?php include \"style.css\";  ?>\n    <?php\n        if (_lang_is_rtl()) {\n            include \"rtl.css\";\n        }\n    ?>\n\n</style>\n<div id=\"css-editor-root\">\n\n    <script>\n        mw.require('tags.js');\n\n        initClasses = function () {\n            if(!window.classes) {\n                window.classes = new mw.tags({\n                    element: '#classtags',\n                    data: [],\n                    inputField: true,\n                    wrap: true,\n                    hideItem: function(item) {\n                        return item.title.indexOf('module') !== -1\n                            || item.title.indexOf('element') !== -1\n                            || item.title.indexOf('allow-drop') !== -1\n                            || item.title.indexOf('cloneable') !== -1\n                            || item.title.indexOf('ui-draggable') !== -1\n                            || item.title.indexOf('ui-draggable-handle') !== -1\n                            || item.title === 'edit'\n                            || item.title === 'safe-mode'\n                            || item.title === 'parallax'\n                            || item.title === 'changed'\n                            || item.title === 'pull-left'\n                            || item.title === 'left'\n                            || item.title === 'right'\n                            || item.title === 'pull-right'\n                            || item.title === 'mw-bg-mask'\n                            || item.title === 'lipsum'\n                            || item.title.indexOf('nodrop') !== -1;\n                    }\n                });\n                $(classes).on('change', function(e, item, data){\n                    var cls = [];\n                    $.each(data, function(){\n                        cls.push(this.title);\n                    });\n                    ActiveNode.setAttribute('class', cls.join(' '))\n                    mw.top().wysiwyg.change(ActiveNode);\n                });\n            }\n            return window.classes;\n        };\n\n\n         $(window).on('load', function(){\n            initClasses()\n\n             mw.components._init();\n        })\n\n    </script>\n    <div data-mwcomponent=\"accordion\" class=\"mw-ui-box mw-accordion\" data-options=\"openFirst: false\">\n\n\n\n\n<mw-accordion-item class=\"mw-accordion-item-css\">\n    <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/background.svg\"> <?php _e(\"Background\"); ?></div>\n    <div class=\"mw-accordion-content mw-ui-box-content\">\n        <div class=\"s-field\">\n            <label><?php _e(\"Image\"); ?></label>\n            <div class=\"s-field-content\">\n            <div class=\"mw-ui-btn-nav\" id=\"background-image-nav\">\n\n                <span\n                    class=\"mw-ui-btn mw-ui-btn-outline mw-ui-btn-small tip mdi mdi-folder-image mdi-17px\" data-tip=\"Select background image\"\n                    id=\"background-select-item\"><span class=\"background-preview\"></span></span>\n\n                <span\n                    class=\"mw-ui-btn mw-ui-btn-outline mw-ui-btn-small tip mdi mdi-folder-image mdi-17px\" data-tip=\"Select gradient\"\n                    id=\"background-select-gradient\" style=\"display: none\"><span class=\"background-gradient\"></span></span>\n\n\n                <span id=\"background-remove\" class=\"mw-ui-btn mw-ui-btn-outline mw-ui-btn-small tip\" data-tip=\"Remove background\" data-tipposition=\"top-right\"><span class=\"mdi mdi-delete\"></span></span>\n                <span id=\"background-reset\" class=\"mw-ui-btn mw-ui-btn-outline mw-ui-btn-small tip\" data-tip=\"Reset background\" data-tipposition=\"top-right\"><span class=\"mdi mdi-history\"></span></span>\n            </div>\n            </div>\n        </div>\n        <div class=\"s-field\">\n            <label><?php _e(\"Color\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <span class=\"mw-field-color-indicator\"><span class=\"mw-field-color-indicator-display\"></span></span>\n                    <input type=\"text\" class=\"colorField unit\" data-prop=\"backgroundColor\">\n                </div>\n            </div>\n        </div>\n\n        <div class=\"s-field\">\n            <label><?php _e(\"Size\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <select type=\"text\" class=\"regular\" data-prop=\"backgroundSize\">\n                        <option value=\"auto\"><?php _e(\"Auto\"); ?></option>\n                        <option value=\"contain\"><?php _e(\"Fit\"); ?></option>\n                        <option value=\"cover\"><?php _e(\"Cover\"); ?></option>\n                        <option value=\"100% 100%\"><?php _e(\"Scale\"); ?></option>\n                    </select>\n                </div>\n            </div>\n        </div>\n        <div class=\"s-field\">\n            <label><?php _e(\"Repeat\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <select type=\"text\" class=\"regular\" data-prop=\"backgroundRepeat\">\n                        <option value=\"repeat\"><?php _e(\"repeat\"); ?></option>\n                        <option value=\"no-repeat\"><?php _e(\"no-repeat\"); ?></option>\n                        <option value=\"repeat-x\"><?php _e(\"repeat horizontally\"); ?></option>\n                        <option value=\"repeat-y\"><?php _e(\"repeat vertically \"); ?></option>\n                    </select>\n                </div>\n            </div>\n        </div>\n        <div class=\"s-field\" id=\"text-mask\">\n            <label>Text mask</label>\n            <script>\n                mask = function (val) {\n                    var $node = $(ActiveNode);\n                    var action = val ? 'addClass' : 'removeClass';\n                    $node[action]('mw-bg-mask');\n                    if (action === 'addClass') {\n                        output('color', 'transparent')\n                    } else {\n                        output('color', '')\n                    }\n                    mw.top().wysiwyg.change($node[0]);\n                }\n            </script>\n            <div class=\"s-field-content\">\n                <label class=\"mw-ui-check\">\n                    <input type=\"checkbox\" id=\"text-mask-field\"  onchange=\"mask(this.checked)\">\n                    <span></span><span></span>\n                </label>\n            </div>\n        </div>\n\n        <div class=\"s-field\">\n            <label><?php _e(\"Position\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <select class=\"regular\" data-prop=\"backgroundPosition\">\n                        <option value=\"0% 0%\"><?php _e(\"Left Top\"); ?></option>\n                        <option value=\"50% 0%\"><?php _e(\"Center Top\"); ?></option>\n                        <option value=\"100% 0%\"><?php _e(\"Right Top\"); ?></option>\n\n                        <option value=\"0% 50%\"><?php _e(\"Left Center\"); ?></option>\n                        <option value=\"50% 50%\"><?php _e(\"Center Center\"); ?></option>\n                        <option value=\"100% 50%\"><?php _e(\"Right Center\"); ?></option>\n\n                        <option value=\"0% 100%\"><?php _e(\"Left Bottom\"); ?></option>\n                        <option value=\"50% 100%\"><?php _e(\"Center Bottom\"); ?></option>\n                        <option value=\"100% 100%\"><?php _e(\"Right Bottom\"); ?></option>\n                    </select>\n                </div>\n            </div>\n        </div>\n    </div>\n</mw-accordion-item>\n\n        <mw-accordion-item class=\"mw-accordion-item-css\">\n\n            <?php $enabled_custom_fonts = get_option(\"enabled_custom_fonts\", \"template\");\n\n\n            $enabled_custom_fonts_array = array();\n\n            if (is_string($enabled_custom_fonts) and $enabled_custom_fonts) {\n                $enabled_custom_fonts_array = explode(',', $enabled_custom_fonts);\n            }\n\n            ?>\n\n\n            <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/typography.svg\"> <?php _e(\"Typography\"); ?></div>\n            <div class=\"mw-accordion-content mw-ui-box-content css-gui-element-typography\">\n\n                <div class=\"s-field\">\n                    <label><?php _e(\"Font Family\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                                <select class=\"regular\" data-prop=\"fontFamily\">\n                                    <option value=\"inherit\">Default</option>\n\n                                    <?php if($enabled_custom_fonts_array): ?>\n                                    <?php foreach ($enabled_custom_fonts_array as $font): ?>\n                                        <option value='<?php print $font; ?>'><?php print $font; ?></option>\n                                    <?php endforeach; ?>\n                                    <?php endif; ?>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div\n\n\n\n                <div class=\"s-field\">\n                    <label><?php _e(\"Text align\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"text-align\">\n                            <span class=\"ta-left\" data-value=\"left\"><span class=\"mdi mdi-format-align-left\"></span></span>\n                            <span class=\"ta-center\" data-value=\"center\"><span class=\"mdi mdi-format-align-center\"></span></span>\n                            <span class=\"ta-right\" data-value=\"right\"><span class=\"mdi mdi-format-align-right\"></span></span>\n                            <span class=\"ta-justify\" data-value=\"justify\"><span class=\"mdi mdi-format-align-justify\"></span></span>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Size\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"fontSize\" data-size=\"medium\"><input type=\"text\"></div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Line height\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"lineHeight\" data-size=\"medium\"><input type=\"text\"></div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Color\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                                <span class=\"mw-field-color-indicator\"><span class=\"mw-field-color-indicator-display\"></span></span>\n                                <input type=\"text\" class=\"colorField unit\" data-prop=\"color\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Style\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                                <select class=\"regular\" data-prop=\"fontStyle\">\n                                    <option value=\"normal\"><?php _e(\"normal\"); ?></option>\n                                    <option value=\"italic\"><?php _e(\"italic\"); ?></option>\n                                    <option value=\"oblique\"><?php _e(\"oblique\"); ?></option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Weight\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                                <select class=\"regular\" data-prop=\"fontWeight\">\n                                    <option value=\"normal\"><?php _e(\"normal\"); ?></option>\n                                    <option value=\"bold\"><?php _e(\"bold\"); ?></option>\n                                    <option value=\"bolder\"><?php _e(\"bolder\"); ?></option>\n                                    <option value=\"lighter\"><?php _e(\"lighter\"); ?></option>\n                                    <option value=\"100\">100</option>\n                                    <option value=\"200\">200</option>\n                                    <option value=\"300\">300</option>\n                                    <option value=\"400\">400</option>\n                                    <option value=\"500\">500</option>\n                                    <option value=\"600\">600</option>\n                                    <option value=\"700\">700</option>\n                                    <option value=\"800\">800</option>\n                                    <option value=\"900\">900</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Text transform\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                                <select class=\"regular\" data-prop=\"textTransform\">\n                                    <option value=\"none\"><?php _e(\"none\"); ?></option>\n                                    <option value=\"capitalize\"><?php _e(\"capitalize\"); ?></option>\n                                    <option value=\"uppercase\"><?php _e(\"uppercase\"); ?></option>\n                                    <option value=\"lowercase\"><?php _e(\"lowercase\"); ?></option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Word Spacing\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"wordSpacing\" data-size=\"medium\"><input type=\"text\"></div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Letter Spacing\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"letterSpacing\" data-size=\"medium\"><input type=\"text\"></div>\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        </mw-accordion-item>\n\n        <mw-accordion-item class=\"mw-accordion-item-css\" id=\"overlay-edit\">\n        <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/overlay.svg\"> <?php _e(\"Overlay\"); ?></div>\n        <div class=\"mw-accordion-content mw-ui-box-content\">\n            <div class=\"s-field\">\n                <label><?php _e(\"Color\"); ?></label>\n                <div class=\"s-field-content\">\n                    <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                        <span class=\"mw-field-color-indicator\"><span class=\"mw-field-color-indicator-display\"></span></span>\n                        <input type=\"text\" class=\"colorField unit\" id=\"overlay-color\" data-prop=\"overlay-color\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"s-field\">\n                <label><?php _e(\"Blend mode\"); ?></label>\n                <div class=\"s-field-content\">\n                    <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n\n                        <select data-prop=\"overlay-blend-mode\" id=\"overlay-blend-mode\" class=\"regular\">\n                            <option value='normal' selected><?php _e('None'); ?></option>\n                            <option value='multiply'>multiply</option>\n                            <option value='screen'>screen</option>\n                            <option value='overlay'>overlay</option>\n                            <option value='darken'>darken</option>\n                            <option value='lighten'>lighten</option>\n                            <option value='color-dodge'>color-dodge</option>\n                            <option value='color-burn'>color-burn</option>\n                            <option value='difference'>difference</option>\n                            <option value='exclusion'>exclusion</option>\n                            <option value='hue'>hue</option>\n                            <option value='saturation'>saturation</option>\n                            <option value='color'>color</option>\n                            <option value='luminosity'>luminosity</option>\n\n                        </select>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mw-accordion-item>\n        <mw-accordion-item class=\"mw-accordion-item-css\" id=\"container-type\">\n        <div class=\"mw-ui-box-header mw-accordion-title\">\n            <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/container.svg\"> <?php _e(\"Container\"); ?>\n        </div>\n        <div class=\"mw-accordion-content mw-ui-box-content\">\n\n        <div class=\"s-field\" id=\"field-conatiner-type\">\n            <label><?php _e(\"Container type\"); ?></label>\n            <div class=\"s-field-content\">\n                <label class=\"mw-ui-check\"> <input type=\"radio\" onchange=\"sccontainertype(this.value)\" name=\"containertype\" value=\"container\"/> <span></span><span> Fixed </span> </label>\n                <label class=\"mw-ui-check\"> <input type=\"radio\" onchange=\"sccontainertype(this.value)\" name=\"containertype\" value=\"container-fluid\"/> <span></span><span> Fluid </span> </label>\n\n            </div>\n        </div>\n        </div>\n    </mw-accordion-item>\n        <mw-accordion-item class=\"mw-accordion-item-css\" id=\"columns-edit\">\n\n        <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/grid.svg\"> <?php _e(\"Grid\"); ?></div>\n        <div class=\"mw-accordion-content mw-ui-box-content\">\n\n            <div class=\"s-field\">\n\n                <div class=\"s-field-content\">\n                    <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                        <label><?php _e('Desktop'); ?></label>\n                        <i class=\" mdi mdi-monitor\"></i>\n                        <select data-prop=\"col-desktop\" class=\"regular\">\n                            <option value='' selected disabled><?php _e('Choose'); ?></option>\n                            <?php foreach(template_field_size_options() as $optionKey=>$optionValue): ?>\n                                <option value=\"<?php echo $optionKey; ?>\"><?php echo $optionValue; ?></option>\n                            <?php endforeach; ?>\n                        </select>\n                    </div>\n                    <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                        <label><?php _e('Tablet'); ?></label>\n                        <i class=\" mdi mdi-tablet\"></i>\n                        <select data-prop=\"col-tablet\" class=\"regular\">\n                            <option value='' selected disabled><?php _e('Choose'); ?></option>\n                            <?php foreach(template_field_size_options() as $optionKey=>$optionValue): ?>\n                                <option value=\"<?php echo $optionKey; ?>\"><?php echo $optionValue; ?></option>\n                            <?php endforeach; ?>\n                        </select>\n                    </div>\n                    <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                        <label><?php _e('Mobile'); ?></label>\n                        <i class=\" mdi mdi-cellphone\"></i>\n                        <select data-prop=\"col-mobile\" class=\"regular\">\n                            <option value='' selected disabled><?php _e('Choose'); ?></option>\n                            <?php foreach(template_field_size_options() as $optionKey=>$optionValue): ?>\n                                <option value=\"<?php echo $optionKey; ?>\"><?php echo $optionValue; ?></option>\n                            <?php endforeach; ?>\n                        </select>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n\n\n    </mw-accordion-item>\n        <mw-accordion-item class=\"mw-accordion-item-css\"  id=\"size-box\" style=\"display: none\">\n        <div class=\"mw-ui-box-header mw-accordion-title\"><?php _e(\"Size\"); ?></div>\n        <div class=\"mw-accordion-content mw-ui-box-content\">\n            <div class=\"mw-esr-col\">\n                <div class=\"mw-esc\">\n                    <label><?php _e(\"Width\"); ?></label>\n                    <div class=\"mw-multiple-fields\">\n                        <div\n                            class=\"mw-field mw-field-flat unit\"\n                            data-prop=\"width\"\n                            data-size=\"medium\"\n                            >\n                            <input type=\"text\" data-options=\"min: 50, max: 2000\">\n                        </div>\n                        <span class=\"mw-ui-btn mw-ui-btn-medium\" onclick=\"output('width', 'auto')\">Auto</span>\n                    </div>\n                </div>\n                <div class=\"mw-esc\">\n                    <label><?php _e(\"Height\"); ?></label>\n                    <div class=\"mw-multiple-fields\">\n                        <div class=\"mw-field mw-field-flat unit\" data-prop=\"height\" data-size=\"medium\">\n                            <input type=\"text\" data-options=\"min: 50, max: 2000\">\n\n                        </div>\n                        <span class=\"mw-ui-btn mw-ui-btn-medium\" onclick=\"output('height', 'auto')\">Auto</span>\n\n                    </div>\n                </div>\n            </div>\n            <div class=\"size-advanced\" style=\"display: none;\">\n                <div class=\"mw-esr-col\">\n                    <div class=\"mw-esc\">\n                        <label><?php _e(\"Min Width\"); ?></label>\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"minWidth\" data-size=\"medium\"><input type=\"text\" data-options=\"min: 50, max: 2000\"></div>\n                            <span class=\"mw-ui-btn mw-ui-btn-medium\" onclick=\"output('minWidth', '0')\">None</span>\n\n                        </div>\n                    </div>\n                    <div class=\"mw-esc\">\n                        <label><?php _e(\"Min Height\"); ?></label>\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"minHeight\" data-size=\"medium\"><input type=\"text\" data-options=\"min: 50, max: 2000\"></div>\n                            <span class=\"mw-ui-btn mw-ui-btn-medium\" onclick=\"output('minHeight', '0')\">None</span>\n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"mw-esr-col\">\n                    <div class=\"mw-esc\">\n                        <label><?php _e(\"Max Width\"); ?></label>\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"maxWidth\" data-size=\"medium\"><input type=\"text\" data-options=\"min: 50, max: 2000\"></div>\n                            <span class=\"mw-ui-btn mw-ui-btn-medium\" onclick=\"output('maxWidth', 'none')\">None</span>\n                        </div>\n\n                    </div>\n                    <div class=\"mw-esc\">\n                        <label><?php _e(\"Max Height\"); ?></label>\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"maxHeight\" data-size=\"medium\"><input type=\"text\"></div>\n                            <span class=\"mw-ui-btn mw-ui-btn-medium\" onclick=\"output('maxHeight', 'none')\">None</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <span class=\"mw-ui-link\" onclick=\"mw.$('.size-advanced').slideToggle()\">Advanced</span>\n        </div>\n    </mw-accordion-item>\n\n        <mw-accordion-item class=\"mw-accordion-item-css\" >\n        <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/spacing.svg\"><?php _e(\"Spacing\"); ?></div>\n        <div class=\"mw-accordion-content mw-ui-box-content\">\n            <div class=\"mw-element-spacing-editor\">\n                <span class=\"mw-ese-label\"><?php _e(\"Margin\"); ?></span>\n                <div class=\"mw-ese-holder mw-ese-margin\">\n                    <span class=\"input mw-ese-top\"><input type=\"text\" class=\" margin-top\"></span>\n                    <span class=\"input mw-ese-right\"><input type=\"text\" class=\" margin-right\"></span>\n                    <span class=\"input mw-ese-bottom\"><input type=\"text\" class=\" margin-bottom\"></span>\n                    <span class=\"input mw-ese-left\"><input type=\"text\" class=\" margin-left\"></span>\n                    <div class=\"mw-ese-holder mw-ese-padding\">\n                        <span class=\"input mw-ese-top\"><input type=\"text\" min=\"0\" class=\" padding-top\"></span>\n                        <span class=\"input mw-ese-right\"><input type=\"text\" min=\"0\" class=\" padding-right\"></span>\n                        <span class=\"input mw-ese-bottom\"><input type=\"text\" min=\"0\" class=\" padding-bottom\"></span>\n                        <span class=\"input mw-ese-left\"><input type=\"text\" min=\"0\" class=\" padding-left\"></span>\n                        <span class=\"mw-ese-label\"><?php _e(\"Padding\"); ?></span>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </mw-accordion-item>\n\n\n        <mw-accordion-item class=\"mw-accordion-item-css\"  >\n    <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/border.svg\"><?php _e(\"Border\"); ?></div>\n    <div class=\"mw-accordion-content mw-ui-box-content\">\n        <div class=\"s-field\">\n            <label><?php _e(\"Position\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <select type=\"text\" id=\"border-position\">\n                        <option value=\"all\" selected><?php _e(\"All\"); ?></option>\n                        <option value=\"Top\"><?php _e(\"Top\"); ?></option>\n                        <option value=\"Right\"><?php _e(\"Right\"); ?></option>\n                        <option value=\"Bottom\"><?php _e(\"Bottom\"); ?></option>\n                        <option value=\"Left\"><?php _e(\"Left\"); ?></option>\n                    </select>\n                </div>\n            </div>\n        </div>\n        <div class=\"s-field\">\n            <label><?php _e(\"Size\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-multiple-fields\">\n                    <div class=\"mw-field mw-field-flat\" data-size=\"medium\"><input type=\"text\" id=\"border-size\"></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"s-field\">\n            <label><?php _e(\"Color\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <span class=\"mw-field-color-indicator\"><span class=\"mw-field-color-indicator-display\"></span></span>\n                    <input type=\"text\" placeholder=\"#ffffff\" class=\"colorField unit\" data-position=\"top-right\" id=\"border-color\">\n                </div>\n\n            </div>\n        </div>\n        <div class=\"s-field\">\n            <label>Type</label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <select type=\"text\" id=\"border-type\">\n                        <option value=\"\" disabled selected><?php _e(\"Choose\"); ?></option>\n                        <option value=\"none\"><?php _e(\"none\"); ?></option>\n                        <option value=\"solid\"><?php _e(\"solid\"); ?></option>\n                        <option value=\"dotted\"><?php _e(\"dotted\"); ?></option>\n                        <option value=\"dashed\"><?php _e(\"dashed\"); ?></option>\n                        <option value=\"double\"><?php _e(\"double\"); ?></option>\n                        <option value=\"groove\"><?php _e(\"groove\"); ?></option>\n                        <option value=\"ridge\"><?php _e(\"ridge\"); ?></option>\n                        <option value=\"inset\"><?php _e(\"inset\"); ?></option>\n                        <option value=\"outset\"><?php _e(\"outset\"); ?></option>\n                    </select>\n                </div>\n            </div>\n        </div>\n    </div>\n</mw-accordion-item>\n        <mw-accordion-item class=\"mw-accordion-item-css\" >\n    <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/miscellaneous.svg\"><?php _e(\"Miscellaneous\"); ?></div>\n    <div class=\"mw-accordion-content mw-ui-box-content\">\n        <div class=\"rouded-corners\" >\n            <label><?php _e(\"Rounded Corners\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <div class=\"mw-multiple-fields\">\n                        <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                            <input type=\"text\" class=\"regular order-1\" data-prop=\"borderTopLeftRadius\">\n                            <span class=\"mw-field mw-field-flat-prepend order-2\"><i class=\"angle angle-top-left\"></i></span>\n                        </div>\n                        <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                            <span class=\"mw-field mw-field-flat-prepend\"><i class=\"angle angle-top-right\"></i></span>\n                            <input class=\"regular\" type=\"text\" data-prop=\"borderTopRightRadius\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <div class=\"mw-multiple-fields\">\n                        <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                            <input class=\"regular order-1\" type=\"text\" data-prop=\"borderBottomLeftRadius\">\n                            <span class=\"mw-field mw-field-flat-prepend order-2\"><i class=\"angle angle-bottom-left\"></i></span>\n                        </div>\n                        <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                            <span class=\"mw-field mw-field-flat-prepend\"><i class=\"angle angle-bottom-right\"></i></span>\n                            <input class=\"regular\" type=\"text\" data-prop=\"borderBottomRightRadius\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</mw-accordion-item>\n        <mw-accordion-item class=\"mw-accordion-item-css\" id=\"classtags-accordion\">\n\n            <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/attributes.svg\"><?php _e(\"Attributes\"); ?></div>\n            <div class=\"mw-accordion-content mw-ui-box-content\">\n                <div class=\"mw-ui-field-holder\">\n                    <label class=\"mw-ui-label\"><?php _e(\"Classes\"); ?></label>\n                    <div class=\"mw-ui-field w100\" id=\"classtags\"></div>\n                </div>\n\n            </div>\n\n        </mw-accordion-item>\n\n        <mw-accordion-item id=\"animations-accordion\">\n\n            <style>\n                #animations {\n                    display: block;\n                }\n            </style>\n\n            <script>\n\n\n                var animations = {\n                    common: [\n                        'none',\n                        'bounce',\n                        'flash',\n                        'pulse',\n                        'rubberBand',\n                        'shakeX',\n                        'shakeY',\n                        'headShake',\n                        'swing',\n                        'tada',\n                        'wobble',\n                        'jello',\n                        'heartBeat',\n                        'flip',\n                        'flipInX',\n                        'flipInY',\n\n                        'hinge',\n                        'jackInTheBox',\n                        'rollIn'\n                    ],\n                    appear: [\n                        'backInDown',\n                        'backInLeft',\n                        'backInRight',\n                        'backInUp',\n                        'bounceIn',\n                        'bounceInDown',\n                        'bounceInLeft',\n                        'bounceInRight',\n                        'bounceInUp',\n                        'fadeIn',\n                        'fadeInDown',\n                        'fadeInDownBig',\n                        'fadeInLeft',\n                        'fadeInLeftBig',\n                        'fadeInRight',\n                        'fadeInRightBig',\n                        'fadeInUp',\n                        'fadeInUpBig',\n                        'fadeInTopLeft',\n                        'fadeInTopRight',\n                        'fadeInBottomLeft',\n                        'fadeInBottomRight',\n                        'lightSpeedInRight',\n                        'lightSpeedInLeft',\n                        'rotateIn',\n                        'rotateInDownLeft',\n                        'rotateInDownRight',\n                        'zoomIn',\n                        'zoomInDown',\n                        'zoomInLeft',\n                        'zoomInRight',\n                        'zoomInUp',\n                        'slideInDown',\n                        'slideInLeft',\n                        'slideInRight',\n                        'slideInUp'\n                    ]\n                };\n\n                ;(function(){\n                    var animationApi = {\n                        preview: function (animation) {\n                            return mw.top().__animate(animation)\n                        },\n                        remove: function (id) {\n\n                            var item = mw.top().__pageAnimations.find(function (item) {  return item.id === id });\n                            var citem = Object.assign({}, item)\n                            mw.top().__pageAnimations.splice(mw.top().__pageAnimations.indexOf(item), 1);\n                            Array.from(mw.top().doc.querySelectorAll(citem.selector)).forEach(function (node){\n                                if(node.$$mwAnimations && node.$$mwAnimations.length) {\n                                    var i = node.$$mwAnimations.findIndex(function(a){return a.id === id});\n                                    if(i > -1) {\n                                        node.$$mwAnimations.splice(i, 1);\n                                    }\n                                }\n                            })\n                        },\n                        add: function (node, obj) {\n                            var sel = mw.tools.generateSelectorForNode(node);\n                            var id = mw.id('animation');\n\n\n\n                            if (!node.$$mwAnimations) {\n                                node.$$mwAnimations = [];\n                            }\n\n                            var curr = node.$$mwAnimations.find(function (item) {\n                                return item.when === obj.when;\n                            });\n\n                            if (curr) {\n                                //this.remove(curr.id)\n                            }\n                            var config = Object.assign({selector: sel, id: id}, obj)\n                            node.$$mwAnimations.push(config)\n                            mw.top().__pageAnimations.push(config)\n                            animationApi.preview(config)\n\n                            return config;\n                        }\n                    };\n\n                    var textCase = function (text) {\n                        var result = text.replace(/([A-Z])/g, \" $1\");\n                        return result.charAt(0).toUpperCase() + result.slice(1);\n                    }\n\n                    window.animationGUI = {\n\n                        _types:  {\n                            animationSelector: function() {\n                                var wrap = mw.element({\n                                    props: { className: 's-field'},\n                                    content: [\n                                        {\n                                            tag: 'label',\n                                            props: { innerHTML: mw.lang('Motion')},\n                                        },\n                                        {\n\n                                            props: {  className: 'mw-field mw-field-flat'},\n                                        }\n                                    ]\n                                });\n                                var select = mw.element('<select />');\n                                for (var cat in animations) {\n                                    if (animations.hasOwnProperty(cat)) {\n                                         var group = document.createElement('optgroup');\n                                         group.label = textCase(cat)\n                                         select.append(group);\n                                         var groupAnims = animations[cat];\n                                         var i = 0;\n                                         for( ; i < groupAnims.length; i++) {\n                                             var option = document.createElement('option');\n                                             option.value = groupAnims[i];\n                                             option.innerHTML = textCase(groupAnims[i]);\n                                             group.appendChild(option)\n                                         }\n                                    }\n                                }\n                                mw.element('.mw-field', wrap).append(select)\n                                return wrap;\n\n                            },\n                            speed: function () {\n                                var root = mw.element({\n                                    props: { className: 's-field'},\n\n                                    content: [\n                                        {\n                                            tag: 'label',\n                                            props: { innerHTML: mw.lang('Speed')},\n                                        },\n                                        {\n                                            props: {\n                                                className: 'mw-field mw-field-flat unit',\n                                                dataset: {\n                                                    // after: 'sec.'\n                                                },\n                                            },\n                                            content: {\n                                                tag: 'input',\n                                                props: { type: 'text', placeholder: mw.lang('Speed in seconds') },\n                                            }\n                                        }\n\n                                    ]\n                                })\n                                var sl = mw.element('<div class=\"mw-range default-values-list-slider\" />');\n                                mw.element('.mw-field', root).append(sl)\n                                $(sl.get(0)).slider({\n                                    min: 0.1,\n                                    max: 5,\n                                    step: 0.1,\n                                    slide: function( event, ui ) {\n                                        // this.previousElementSibling.value = Math.round((ui.value / 1000) * 100) / 100;\n                                        this.previousElementSibling.value = ui.value;\n                                        $(this.previousElementSibling).trigger('input')\n                                    }\n                                })\n                                 return  root;\n                            },\n                            when: function () {\n                                return  mw.element(\n                                {\n\n                                    props: {\n                                        style: {\n                                            marginTop: '10px'\n                                        }\n                                    },\n                                    content: [\n                                        {\n                                            props: { className: 's-field'},\n                                            content: [\n                                                {\n                                                    tag: 'label',\n                                                    props: { innerHTML: mw.lang('Trigger')},\n                                                },\n                                                {\n                                                    props: {\n                                                        className: 'mw-field mw-field-flat',\n                                                    },\n                                                    content: [\n                                                        {\n                                                            tag: 'select',\n                                                            props: {  },\n                                                            content: [\n                                                                { tag: 'option', props: { value: 'onAppear', innerHTML: mw.lang('When element appears on screen')}},\n                                                                { tag: 'option', props: { value: 'onHover', innerHTML: mw.lang('When mouse is over')}},\n                                                                { tag: 'option', props: { value: 'onClick', innerHTML: mw.lang('When element is clicked')}},\n                                                            ]\n                                                        },\n                                                    ]\n                                                },\n                                            ]\n                                        },\n\n                                    ]\n                                }\n\n                                );\n                            }\n                        },\n                        renderSingle: function (anim) {\n                            var box = mw.element('<div class=\"mw-module-settings-box\" />');\n                            var del = mw.element('<a class=\"mw-ui-link animation-clear-btn\">Clear</a>')\n                            var typeSelect = animationGUI._types.animationSelector();\n                            var speed = animationGUI._types.speed();\n                            var when = animationGUI._types.when();\n\n                            del.on('click', function () {\n                                mw.element('select', typeSelect)\n                                    .val('none')\n                                    .get(0)\n                                    .dispatchEvent(new Event('input'));\n                            })\n\n                            box\n                                .append(del)\n                                .append(typeSelect)\n                                .append(speed)\n                                .append(when);\n\n                            mw.element('select', when).val(anim.when).on('input', function () {\n                                var curr = mw.__pageAnimations.find(function(a){\n                                    return !!anim.id || a.id === anim.id\n                                });\n                                anim.when = this.value;\n                                if(curr) {\n                                    curr.when = this.value;\n                                }\n                                mw.top().wysiwyg.change(ActiveNode)\n                            });\n\n                            $('.mw-range', speed.get(0)).slider('value', parseFloat(anim.speed))\n\n                            mw.element('select', typeSelect).val(anim.animation).on('input', function () {\n\n                                mw.element('select', when).get(0).disabled = this.value === 'none';\n                                mw.element('input', speed.get(0)).get(0).disabled = this.value === 'none';\n                                $( '.mw-range', speed.get(0) ).slider( this.value === 'none' ? \"disable\" : \"enable\" );\n\n\n                                anim.animation = this.value;\n                                mw.top().__animate(anim)\n                                var curr = mw.__pageAnimations.find(function(a){\n                                    return !!anim.id || a.id === anim.id\n                                });\n                                if(curr) {\n                                    curr.animation = this.value;\n                                }\n                                mw.top().wysiwyg.change(ActiveNode)\n\n                            });\n\n                            $('input', speed.get(0)).val(anim.speed).on('input', function () {\n                                 $('.mw-range', speed.get(0)).slider('value', parseFloat(this.value))\n                                 var val = this.value + 's';\n                                anim.speed = val;\n                                mw.top().__animate(anim);\n                                var curr = mw.__pageAnimations.find(function(a){\n                                    return !!anim.id || a.id === anim.id\n                                });\n                                if (curr) {\n                                    curr.speed = val;\n                                }\n                                mw.top().wysiwyg.change(ActiveNode)\n                            });\n\n                            mw.element('select', when).get(0).disabled = anim.animation === 'none';\n                            mw.element('input', speed.get(0)).get(0).disabled = anim.animation === 'none';\n                            $( '.mw-range', speed.get(0) ).slider( anim.animation === 'none' ? \"disable\" : \"enable\" );\n\n                            return box\n                        },\n                        add: function () {\n                            var el = document.querySelector('#animations');\n                            var anim = {\n                                selector: mw.tools.generateSelectorForNode(ActiveNode),\n                                animation: 'none',\n                                speed: 1,\n                                when: 'onAppear',\n                                id: mw.id('animation')\n                            }\n                            animationApi.add(ActiveNode, anim);\n                            el.appendChild(animationGUI.renderSingle(anim).get(0));\n                        },\n                        set: function () {\n                            var el = document.querySelector('#animations');\n                            while (el.firstChild) {\n                                el.removeChild(el.firstChild);\n                            }\n                            /* Add blank animation to each */\n                            if(!ActiveNode.$$mwAnimations) {\n\n                                 animationApi.add(ActiveNode, {\n                                     selector: mw.tools.generateSelectorForNode(ActiveNode),\n                                     animation: 'none',\n                                     speed: 1,\n                                     when: 'onAppear',\n                                     id: mw.id('animation')\n                                 });\n                            }\n\n                            if(ActiveNode && ActiveNode.$$mwAnimations) {\n                                ActiveNode.$$mwAnimations.forEach(function (anim){\n                                    el.appendChild(animationGUI.renderSingle(anim).get(0));\n                                });\n                            }\n\n                        }\n                    };\n\n                     window.animationGUI = animationGUI;\n\n                })();\n            </script>\n\n            <div class=\"mw-ui-box-header mw-accordion-title\">\n            <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/animations.svg\"><?php _e(\"Animations\"); ?></div>\n            <div class=\"mw-accordion-content mw-ui-box-content\">\n                <div class=\"mw-ui-field-holder\">\n                    <label class=\"mw-ui-label\"><?php _e(\"Animations\"); ?></label>\n\n\n                    <div class=\"w100\" id=\"animations\">\n\n                    </div>\n                </div>\n\n            </div>\n\n        </mw-accordion-item>\n</div>\n\n<div class=\"mw-css-editor\">\n\n</div>\n</div>\n"], "fixing_code": ["/**\n * CSS-JSON Converter for JavaScript\n * Converts CSS to JSON and back.\n * Version 2.1\n *\n * Released under the MIT license.\n *\n * Copyright (c) 2013 Aram Kocharyan, http://aramk.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all copies or substantial portions\n of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n */\n\nvar CSSJSON = new function () {\n\n    var base = this;\n\n    base.init = function () {\n        // String functions\n        String.prototype.trim = function () {\n            return this.replace(/^\\s+|\\s+$/g, '');\n        };\n\n        String.prototype.repeat = function (n) {\n            return new Array(1 + n).join(this);\n        };\n    };\n    base.init();\n\n    var selX = /([^\\s\\;\\{\\}][^\\;\\{\\}]*)\\{/g;\n    var endX = /\\}/g;\n    var lineX = /([^\\;\\{\\}]*)\\;/g;\n    var commentX = /\\/\\*[\\s\\S]*?\\*\\//g;\n    var lineAttrX = /([^\\:]+):([^\\;]*);/;\n\n    // This is used, a concatenation of all above. We use alternation to\n    // capture.\n    var altX = /(\\/\\*[\\s\\S]*?\\*\\/)|([^\\s\\;\\{\\}][^\\;\\{\\}]*(?=\\{))|(\\})|([^\\;\\{\\}]+\\;(?!\\s*\\*\\/))/gmi;\n\n    // Capture groups\n    var capComment = 1;\n    var capSelector = 2;\n    var capEnd = 3;\n    var capAttr = 4;\n\n    var isEmpty = function (x) {\n        return typeof x == 'undefined' || x.length == 0 || x == null;\n    };\n\n    var isCssJson = function (node) {\n        return !isEmpty(node) ? (node.attributes && node.children) : false;\n    }\n\n    /**\n     * Input is css string and current pos, returns JSON object\n     *\n     * @param cssString\n     *            The CSS string.\n     * @param args\n     *            An optional argument object. ordered: Whether order of\n     *            comments and other nodes should be kept in the output. This\n     *            will return an object where all the keys are numbers and the\n     *            values are objects containing \"name\" and \"value\" keys for each\n     *            node. comments: Whether to capture comments. split: Whether to\n     *            split each comma separated list of selectors.\n     */\n    base.toJSON = function (cssString, args) {\n        var node = {\n            children: {},\n            attributes: {}\n        };\n        var match = null;\n        var count = 0;\n\n        if (typeof args == 'undefined') {\n            var args = {\n                ordered: false,\n                comments: false,\n                stripComments: false,\n                split: false\n            };\n        }\n        if (args.stripComments) {\n            args.comments = false;\n            cssString = cssString.replace(commentX, '');\n        }\n\n        while ((match = altX.exec(cssString)) != null) {\n            if (!isEmpty(match[capComment]) && args.comments) {\n                // Comment\n                var add = match[capComment].trim();\n                node[count++] = add;\n            } else if (!isEmpty(match[capSelector])) {\n                // New node, we recurse\n                var name = match[capSelector].trim();\n                // This will return when we encounter a closing brace\n                var newNode = base.toJSON(cssString, args);\n                if (args.ordered) {\n                    var obj = {};\n                    obj['name'] = name;\n                    obj['value'] = newNode;\n                    // Since we must use key as index to keep order and not\n                    // name, this will differentiate between a Rule Node and an\n                    // Attribute, since both contain a name and value pair.\n                    obj['type'] = 'rule';\n                    node[count++] = obj;\n                } else {\n                    if (args.split) {\n                        var bits = name.split(',');\n                    } else {\n                        var bits = [name];\n                    }\n                    for (var i = 0; i < bits.length; i++) {\n                        var sel = bits[i].trim();\n                        if (sel in node.children) {\n                            for (var att in newNode.attributes) {\n                                node.children[sel].attributes[att] = newNode.attributes[att];\n                            }\n                        } else {\n                            node.children[sel] = newNode;\n                        }\n                    }\n                }\n            } else if (!isEmpty(match[capEnd])) {\n                // Node has finished\n                return node;\n            } else if (!isEmpty(match[capAttr])) {\n                var line = match[capAttr].trim();\n                var attr = lineAttrX.exec(line);\n                if (attr) {\n                    // Attribute\n                    var name = attr[1].trim();\n                    var value = attr[2].trim();\n                    if (args.ordered) {\n                        var obj = {};\n                        obj['name'] = name;\n                        obj['value'] = value;\n                        obj['type'] = 'attr';\n                        node[count++] = obj;\n                    } else {\n                        if (name in node.attributes) {\n                            var currVal = node.attributes[name];\n                            if (!(currVal instanceof Array)) {\n                                node.attributes[name] = [currVal];\n                            }\n                            node.attributes[name].push(value);\n                        } else {\n                            node.attributes[name] = value;\n                        }\n                    }\n                } else {\n                    // Semicolon terminated line\n                    node[count++] = line;\n                }\n            }\n        }\n\n        return node;\n    };\n\n    /**\n     * @param node\n     *            A JSON node.\n     * @param depth\n     *            The depth of the current node; used for indentation and\n     *            optional.\n     * @param breaks\n     *            Whether to add line breaks in the output.\n     */\n    base.toCSS = function (node, depth, breaks) {\n        var cssString = '';\n        if (typeof depth === 'undefined') {\n            depth = 0;\n        }\n        if (typeof breaks === 'undefined') {\n            breaks = false;\n        }\n        if (node.attributes) {\n            for (var i in node.attributes) {\n                var att = node.attributes[i];\n                if (att instanceof Array) {\n                    for (var j = 0; j < att.length; j++) {\n                        cssString += strAttr(i, att[j], depth);\n                    }\n                } else {\n                    cssString += strAttr(i, att, depth);\n                }\n            }\n        }\n        if (node.children) {\n            var first = true;\n            for (var i in node.children) {\n                console.log(node.children[i])\n                if (breaks && !first) {\n                    cssString += '\\n';\n                } else {\n                    first = false;\n                }\n                cssString += strNode(i, node.children[i], depth);\n            }\n        }\n        return cssString;\n    };\n\n    /**\n     * @param data\n     *            You can pass css string or the CSSJS.toJSON return value.\n     * @param id (Optional)\n     *            To identify and easy removable of the style element\n     * @param replace (Optional. defaults to TRUE)\n     *            Whether to remove or simply do nothing\n     * @return HTMLLinkElement\n     */\n    base.toHEAD = function (data, id, replace) {\n        var head = document.getElementsByTagName('head')[0];\n        var xnode = document.getElementById(id);\n        var _xnodeTest = (xnode !== null && xnode instanceof HTMLStyleElement);\n\n        if (isEmpty(data) || !(head instanceof HTMLHeadElement)) return;\n        if (_xnodeTest) {\n            if (replace === true || isEmpty(replace)) {\n                xnode.removeAttribute('id');\n            } else return;\n        }\n        if (isCssJson(data)) {\n            data = base.toCSS(data);\n        }\n\n        var node = document.createElement('style');\n        node.type = 'text/css';\n\n        if (!isEmpty(id)) {\n            node.id = id;\n        } else {\n            node.id = 'cssjson_' + timestamp();\n        }\n        if (node.styleSheet) {\n            node.styleSheet.cssText = data;\n        } else {\n            node.appendChild(document.createTextNode(data));\n        }\n\n        head.appendChild(node);\n\n        if (isValidStyleNode(node)) {\n            if (_xnodeTest) {\n                xnode.parentNode.removeChild(xnode);\n            }\n        } else {\n            node.parentNode.removeChild(node);\n            if (_xnodeTest) {\n                xnode.setAttribute('id', id);\n                node = xnode;\n            } else return;\n        }\n\n        return node;\n    };\n\n    // Alias\n\n    if (typeof window != 'undefined') {\n        window.createCSS = base.toHEAD;\n    }\n\n    // Helpers\n\n    var isValidStyleNode = function (node) {\n        return (node instanceof HTMLStyleElement) && node.sheet.cssRules.length > 0;\n    }\n\n    var timestamp = function () {\n        return Date.now() || +new Date();\n    };\n\n    var strAttr = function (name, value, depth) {\n        return '\\t'.repeat(depth) + name + ': ' + value + ';\\n';\n    };\n\n    var strNode = function (name, value, depth) {\n        var cssString = '\\t'.repeat(depth) + name + ' {\\n';\n        cssString += base.toCSS(value, depth + 1);\n        cssString += '\\t'.repeat(depth) + '}\\n';\n        return cssString;\n    };\n\n};\n\nif (typeof module === 'object') {\n    module.exports = CSSJSON;\n}\n", "mw.require('libs/cssjson/cssjson.js');\n\n\nmw.liveeditCSSEditor = function (config) {\n    var scope = this;\n    config = config || {};\n    config.document = config.document || document;\n    var node = document.querySelector('link[href*=\"live_edit\"]');\n    var defaults = {\n        cssUrl: node ? node.href : null,\n        saveUrl: mw.settings.api_url + \"current_template_save_custom_css\"\n    };\n    this.settings = $.extend({}, defaults, config);\n\n    this.json = null;\n\n    this.getByUrl = function (url, callback) {\n        return $.get(url, function (css) {\n            callback.call(this, css)\n        });\n    };\n\n    this.getLiveeditCSS = function () {\n        if( this.settings.cssUrl ) {\n            this.getByUrl( this.settings.cssUrl, function (css) {\n                if(/<\\/?[a-z][\\s\\S]*>/i.test(css)) {\n                    scope.json = {};\n                    scope._css = '';\n                } else {\n                    scope.json = CSSJSON.toJSON(css);\n                    scope._css = css;\n                }\n                $(scope).trigger('ready');\n            });\n        }\n        else {\n            scope.json = {};\n            scope._css = '';\n            $(scope).trigger('ready');\n        }\n    };\n\n\n    this._cssTemp = function (json) {\n\n        var css = CSSJSON.toCSS(json);\n        if(!mw.liveedit._cssTemp) {\n            mw.liveedit._cssTemp = mw.tools.createStyle('#mw-liveedit-dynamic-temp-style', css, document.body);\n            mw.liveedit._cssTemp.id = 'mw-liveedit-dynamic-temp-style';\n        } else {\n            mw.liveedit._cssTemp.innerHTML = css;\n        }\n    };\n\n    var removeSheetRuleProperty = function (selector, property) {\n        var sheet = document.querySelector('link#mw-template-settings').sheet;\n        var i = 0, l = sheet.cssRules.length;\n        for ( ; i < l ; i++) {\n            if(sheet.cssRules[i].selectorText === selector) {\n                sheet.cssRules[i].style.removeProperty(property);\n            }\n        }\n    };\n\n    this.changed = false;\n    this._temp = {children: {}, attributes: {}};\n    this.temp = function (node, prop, val) {\n        val = (val || '').trim();\n        this.changed = true;\n        if(node.length) {\n            node = node[0];\n        }\n        var sel = mw.tools.generateSelectorForNode(node);\n        if(!this._temp.children[sel]) {\n            this._temp.children[sel] = {};\n        }\n        if (!this._temp.children[sel].attributes ) {\n            this._temp.children[sel].attributes = {};\n        }\n\n\n        this._temp.children[sel].attributes[prop] = val;\n\n        if(val === '' || val === '!important') {\n            this._temp.children[sel].attributes[prop] = '';\n            // delete this._temp.children[sel].attributes[prop];\n            removeSheetRuleProperty (sel, prop);\n\n        }\n\n\n        this._cssTemp(this._temp);\n    };\n\n    this.timeOut = null;\n\n    this.save = function () {\n        this.json = $.extend(true, {}, this.json, this._temp);\n        this._css = CSSJSON.toCSS(this.json).replace(/\\.\\./g, '.').replace(/\\.\\./g, '.');\n    };\n\n    this.findBySelector = function (selector) {\n        var json = this.getJSONValue();\n        return json.children[selector];\n    }\n\n    this.publish = function (callback) {\n        var css = {\n            css_file_content: this.getValue()\n        };\n        $.post(this.settings.saveUrl, css, function (res) {\n            scope.changed = false;\n            if(callback) {\n                callback.call(this, res);\n            }\n        });\n    };\n\n    this.publishIfChanged = function (callback) {\n        if(this.changed) {\n            this.publish(callback);\n        }\n    };\n\n    this.getValue = function () {\n        this.save();\n        return this._css;\n    };\n\n    this.getJSONValue = function () {\n        this.save();\n        return this.json;\n    };\n\n    this.init = function () {\n        this.getLiveeditCSS();\n    };\n\n    this.init();\n\n};\n\n", "\n<div id=\"domtree\"></div>\n\n<style>\n    html,body{\n        overflow: hidden;\n\n    }\n    #css-editor-root .mw-accordion-title svg{\n        width:21px;\n        height: 21px;\n        margin-inline-end: 8px;\n    }\n    #css-editor-root .mw-accordion-title{\n        font-weight: bold;\n    }\n\n    #columns-edit .mw-field{\n        padding-bottom: 15px;\n    }\n    #columns-edit .mdi{\n        font-size: 19px;\n        position: relative;\n        top: 4px;\n        margin-inline-end: 15px;\n        margin-inline-start: 15px;\n    }\n\n    .default-values-list > span{\n        display:block;\n        padding:5px 10px;\n        cursor: pointer;\n    }\n    .default-values-list{\n        position: absolute;\n        top:-100%;\n        left:-100%;\n        padding: 10px;\n        z-index:1;\n        background: #fff;\n        box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n\n    }\n    .animation-clear-btn{\n        float: right;\n        margin: -30px 0 0 0;\n    }\n\n    html[dir=\"rtl\"] .animation-clear-btn{\n        float: left;\n     }\n\n    .mw-field .mw-range + .mw-range{\n        display: none;\n    }\n\n</style>\n<script>mw.require('prop_editor.js')</script>\n<script>mw.require('module_settings.js')</script>\n<script>mw.lib.require('colorpicker')</script>\n<script type=\"text/javascript\">\n\n    // mw.parent().require(\"external_callbacks.js\");\n    mw.require(\"jquery-ui.js\");\n    mw.require(\"events.js\");\n    mw.require(\"forms.js\");\n    mw.require(\"files.js\");\n    mw.require(\"url.js\");\n    mw.require('prop_editor.js');\n    mw.require('color.js');\n    mw.require('selector.js');\n    mw.require('tree.js');\n\n    mw.require('domtree.js');\n\n\n    mw.require('css_parser.js');\n\n    var colorPickers = [];\n\n    var positionSelector = function () {\n        var root = mw.element({props: { className: 'mw-position-selector'}})\n        var posTop = mw.element({props: { className: 'mw-position-selector-top'}});\n        var posRight = mw.element({props: { className: 'mw-position-selector-right'}});\n        var posBottom = mw.element({props: { className: 'mw-position-selector-bottom'}});\n        var posLeft = mw.element({props: { className: 'mw-position-selector-left'}});\n        var all = mw.element({props: { className: 'mw-position-selector-all'}});\n\n        root.append(posTop)\n        root.append(posRight)\n        root.append(posBottom)\n        root.append(posLeft)\n        root.append(all)\n\n        return {\n            root: root,\n            top: posTop,\n            right: posRight,\n            bottom: posBottom,\n            left: posLeft,\n            all: all,\n        };\n    }\n\n\n    $(window).on('load', function () {\n\n       setTimeout(function() {\n            mw.top().liveEditDomTree = new mw.DomTree({\n                element: '#domtree',\n                resizable:true,\n                targetDocument: mw.top().win.document,\n                canSelect: function (node, li) {\n                    var cant = (!mw.tools.isEditable(node) && !node.classList.contains('edit') && !node.id);\n                    return !cant;\n                    // return mw.tools.isEditable(node) || node.classList.contains('edit');\n                },\n                onHover: function (e, target, node, element) {\n                    mw.top().liveEditSelector.setItem(node, mw.top().liveEditSelector.interactors, false);\n                },\n                onSelect: function (e, target, node, element) {\n                     setTimeout(function () {\n                        mw.top().liveEditSelector.select(node);\n\n\n                        mw.top().tools.scrollTo(node, undefined, (mw.top().$('#live_edit_toolbar').height() + 10))\n                    })\n                }\n            });\n        }, 700);\n\n       $('.rte_css_editor_svg').each(function (img){\n           (function (img){\n\n               $.get(img.src, function (data){\n\n                    $(img).replaceWith(data.all[0])\n               })\n           })(this)\n       })\n\n        $('.mw-field.mw-field-flat.unit').each(function (){\n            if(!this.querySelector('.mw-range')) {\n                var sl = mw.element('<div class=\"mw-range default-values-list-slider\" />');\n                $('input', this).on('input', function () {\n                    var val = this.value;\n                    var slVal = this.value;\n                    var t = ['auto', 'normal', 'inherit', 'initial'];\n\n                    if(t.includes(val)) {\n                        slVal = 0\n                    }\n\n                    var num = parseFloat(slVal);\n                    if(isNaN(num)) {\n                        num = 0;\n                    }\n\n                    if(/^\\d+$/.test(val)) {\n                        val = this.value + 'px'\n                    }\n                    output(this.parentNode.dataset.prop, val);\n                    $(sl.get(0)).slider('value', num)\n                })\n                $(sl.get(0)).slider({\n                    min: 0,\n                    max: 100,\n                    step: 1,\n                    slide: function( event, ui ) {\n\n                        var dvalUnit = (/^\\d+$/.test(this.previousElementSibling.value) ?  'px' : this.previousElementSibling.value.replace(/[0-9]/g, '')).trim().toLowerCase();\n                        var units = ['cm','mm','q','in','pc','pt','px','em','ex','ch','rem','lh','vw','vh','vmin','vmax',]\n                        var dval = ui.value;\n\n                        dval += (units.indexOf(dvalUnit) !== -1 ? dvalUnit : 'px');\n\n                        console.log(dval)\n                        console.log(dvalUnit)\n\n                        this.previousElementSibling.value = dval;\n                        output(this.parentNode.dataset.prop, dval)\n\n                    }\n                })\n                $(this).append(sl.get(0));\n            }\n        })\n\n\n\n    })\n\n</script>\n<script>\n\nvar ActiveNode = null;\n\nvar reset = function(){\n    if(!ActiveNode){\n        return;\n    }\n    var sel = mw.tools.generateSelectorForNode(ActiveNode);\n    var data = {};\n    data[sel] = {\n        selector: sel,\n        value: \"reset\"\n    };\n\n    mw.top().$.post(mw.settings.api_url + \"current_template_save_custom_css\", data, function(data){\n        mw.notification.success('Element styles restored');\n        mw.tools.refresh(top.document.querySelector('link[href*=\"live_edit.css\"]'))\n    }).fail(function(){\n\n    });\n    mw.top().wysiwyg.change(ActiveNode)\n};\n\n\nvar CSSShadow;\n\nvar _activeTree = null;\nvar _pauseActiveTree = false;\nvar activeTree = function(){\n    if(!ActiveNode || _pauseActiveTree) {\n        return;\n    }\n    var getParent = function(node){\n        if(!node || node === document.body || !node.parentNode || mw.tools.hasClass(node, 'edit')){\n            return false;\n        }\n        if(node.parentNode.id){\n            return node.parentNode;\n        } else  if(mw.tools.hasClass(node.parentNode, 'edit')){\n            return node.parentNode;\n        } else {\n            return getParent(node.parentNode);\n        }\n    };\n    var data = [], curr = ActiveNode, count = 0;\n    while(curr && curr !== document.body){\n        var custom = !!curr.className;\n        if(curr.id || mw.tools.hasClass(curr, 'edit') || custom){\n            count++;\n            if (count > 4) {\n                break;\n            }\n            var parent = getParent(curr);\n            var selector = mw.tools.generateSelectorForNode(curr)\n                .replace(/\\[/g, 'mw')\n                .replace(/[\"']/g, '')\n                .replace(/\\]/g, 'mw');\n            var parent_selector = 0;\n\n            if(parent) {\n                parent_selector =  mw.tools.generateSelectorForNode(parent)\n                    .replace(/\\[/g, 'mw')\n                    .replace(/[\"']/g, '')\n                    .replace(/\\]/g, 'mw');\n            }\n            var ttitle = curr.tagName.toLowerCase() + (curr.classList.length ? ('.' + curr.className.split(' ').join('.')) : '');\n            if(mw.tools.hasClass(curr, 'module')) {\n                ttitle = curr.dataset.mwTitle || curr.dataset.type;\n            }\n            var item = {\n                id: selector,\n                type: 'page',\n                title: ttitle ,\n                parent_id: parent_selector,\n                parent_type: 'page',\n                element: curr\n            };\n\n            data.push(item)\n        }\n        else {\n            parent = null;\n        }\n        if(parent){\n            curr = parent;\n        }\n        else {\n            curr = null;\n        }\n\n    }\n    data = data.reverse();\n\n    $('#tree').empty();\n\n\n\n    _activeTree = new mw.tree({\n        element:'#tree',\n        data:data,\n        saveState: false,\n        selectable: true,\n        singleSelect:true,\n        contextMenu: [\n            {\n                title: 'Reset styles',\n                icon: 'mw-icon-reload',\n                action: function() {\n                    reset()\n                }\n            }\n        ]\n    });\n\n    _activeTree.openAll();\n    _activeTree.select($('#tree li:last')[0]);\n\n    $(_activeTree).on('selectionChange', function(e, data){\n        _pauseActiveTree = true;\n        if(data[0]){\n            mw.top().liveEditSelector.select(data[0].element);\n        }\n        setTimeout(function(){\n            _pauseActiveTree = false;\n        }, 10)\n    })\n\n\n};\n\n\nvar _prepare = {\n    shadow: function () {\n        var root = document.querySelector('#shadow');\n        if(!root) {\n            return;\n        }\n        CSSShadow = new mw.propEditor.schema({\n            schema: [\n                {\n                    interface: 'shadow',\n                    id: 'boxShadow',\n                    pickerPosition: 'top-left'\n                }\n            ],\n            element: root,\n            size:'medium'\n        });\n        $(CSSShadow).on('change', function(e, id, val){\n            output(id, val)\n        });\n        $('.mw-ui-field', root).addClass('mw-ui-field-medium');\n        $('.mw-ui-btn', root).addClass('mw-ui-btn-medium');\n    },\n    border: function () {\n\n        var bordercolor = document.querySelector('#border-color')\n        colorPickers.push(mw.colorPicker({\n            element: bordercolor,\n            position: bordercolor.dataset.position || 'top-right',\n            onchange: function (color){\n\n                    $(bordercolor).trigger('colorChange', color)\n\n            },\n            color: this.value\n        }));\n\n        var pos = positionSelector();\n\n        $('#border-size, #border-color, #border-type').on('change input colorChange', function(){\n\n            var prop = 'border',\n                propval = $('#border-position').val();\n            if(propval !== 'all') {\n                prop += (propval)\n            }\n            var color = $('#border-color').val() || '#111',\n                type = $('#border-type').val() || 'solid',\n                size = $('#border-size').val() || '1';\n            output( prop, size + 'px ' + type + ' ' + color);\n        });\n    },\n    units: function(){\n        var units = [\n            'px', '%', 'rem', 'em', 'vh', 'vw'\n        ];\n        units = [];// todo: add units\n        $('mw-accordion-item.mw-accordion-item-css .unit:not(.ready)').each(function(){\n            this.classList.add('ready')\n            // var select = $('<select style=\"width: 60px\"/>');\n            var select = $('<span class=\"reset-field  tip\" data-tipposition=\"top-right\" data-tip=\"Restore default value\"><i class=\"mdi mdi-history\"></i></span>');\n            select.on('click', function () {\n                var prev = $(this).prev();\n                var prop = prev.attr('data-prop');\n                var css = getComputedStyle(ActiveNode);\n                var val = '';\n                if(prop ) {\n                    output( prop, '');\n                    val = css[prop];\n                }\n\n\n\n                var isbg = prev.prev().find('.mw-field-color-indicator-display');\n                if(isbg.length) {\n                    isbg.css('backgroundColor', val);\n                }\n\n\n\n                prev.val(val);\n                prev.find('input').val(val);\n                var n = parseFloat(val)\n                $('.mw-range.ui-slider', prev).slider('value', !isNaN(n) ? n : 0)\n            });\n            $('input', this)\n                .attr('type', 'range');\n\n                //.after('<input>')\n            $.each(units, function(){\n                select.append('<option value=\"'+this+'\">'+this+'</option>');\n            });\n            select.on('change', function(){\n                var prev = $(this).parent().prev();\n                var prop = prev.attr('data-prop');\n                if(prop ) {\n                    output(prop, prev.find('input').val() + this.value)\n\n                }\n            });\n\n            $(this).after(select);\n            $('input', this).on('input', function(){\n                var $el = $(this);\n                var parent = $el.parent()\n                 var val = $el.val().trim();\n                var prop = parent.attr('data-prop');\n                if(prop) {\n                    if(parseFloat(val) == val){\n                        output( prop, val ? val + 'px' : '');\n                    } else {\n                        output( prop, val ? val + 'px' : '');\n                    }\n                }\n\n            })\n        })\n    }\n};\nvar _populate = {\n    margin: function(css){\n        if(!css || !css.get) return;\n        var margin = css.get.margin(undefined, true);\n        mw.$('.margin-top').val(parseFloat(margin.top));\n        mw.$('.margin-right').val(parseFloat(margin.right));\n        mw.$('.margin-bottom').val(parseFloat(margin.bottom));\n        mw.$('.margin-left').val(parseFloat(margin.left));\n    },\n    border: function(css){\n        if(!css || !css.get) return;\n        var border = css.get.border(true);\n\n        var frst = {};\n        for (var i in border) {\n            if (border[i].width !== 0) {\n                frst = border[i];\n                break;\n            }\n        }\n        var size = frst.width || 0;\n        var color = frst.color || 'rgba(0,0,0,1)';\n        var style = frst.style || 'none';\n\n        mw.$('#border-position').val('all');\n        mw.$('#border-size').val(size);\n        mw.$('#border-color').val(color);\n        mw.$('#border-type').val(style);\n    },\n    padding: function(css){\n        var padding = css.get.padding(undefined, true);\n        mw.$('.padding-top').val(parseFloat(padding.top));\n        mw.$('.padding-right').val(parseFloat(padding.right));\n        mw.$('.padding-bottom').val(parseFloat(padding.bottom));\n        mw.$('.padding-left').val(parseFloat(padding.left))\n    },\n    common: function(css){\n        $('.unit').each(function(){\n            var val = css.css[this.dataset.prop];\n            var btn = $('.mw-ui-btn', this.parentNode)[0];\n            if (btn) {\n                btn._defaultValue = '';\n            }\n            if (val) {\n                var nval = parseFloat(val);\n                var isn = !isNaN(nval);\n                var unit = val.replace(/[0-9]/g, '').replace(/\\./g, '');\n                val = isn ? nval : val;\n                if (btn) {\n                    btn._defaultValue = val;\n                }\n                $('input', this).val(val);\n                $('.mw-range.ui-slider', this).slider('value', isn ? nval : 0)\n            }\n        });\n        $(\".colorField\").each(function(){\n            if(this.dataset.prop) {\n                var color = css.css[this.dataset.prop];\n                var hasColor = color !== 'rgba(0, 0, 0, 0)';\n                if(color) {\n                    if (hasColor) {\n                        this.value = mw.color.rgbOrRgbaToHex(color);\n                    } else {\n                        this.value = 'none';\n                        this.previousElementSibling.querySelector('.mw-field-color-indicator-display').style.backgroundColor = 'transparent'\n                    }\n                }\n\n                this.type = 'text'\n\n                var el = this;\n\n                el.placeholder = '#ffffff';\n                if(this.parentNode.querySelector('.mw-field-color-indicator') === null) {\n                    $(this).before('<span class=\"mw-field-color-indicator\"><span class=\"mw-field-color-indicator-display\"></span></span>')\n                }\n                var indikatorDisplay =  this.parentNode.querySelector('.mw-field-color-indicator-display');\n                indikatorDisplay.style.backgroundColor = this.value\n\n                colorPickers.push(mw.colorPicker({\n                    element: this,\n                    position: this.dataset.position || 'bottom-right',\n                    onchange: function (color){\n                         if(el.dataset.prop) {\n                            output(el.dataset.prop, color);\n                        } else if(el.dataset.func) {\n                            eval(el.dataset.func + '(' + color + ')');\n                        } else {\n                            $(el).trigger('colorChange', color)\n                        }\n                        indikatorDisplay.style.backgroundColor = color\n                    },\n                    color: this.value\n                }))\n\n            }\n        });\n        $(\".background-preview\").css('backgroundImage', css.css.backgroundImage)\n    },\n    textAlign: function(css){\n        var align = css.get.alignNormalize();\n        $(\".text-align .active\").removeClass('active');\n        $(\".text-align .ta-\" + align).addClass('active');\n    },\n    regular: function(css){\n        $(\".regular\").each(function(){\n            var propName = this.dataset.prop;\n            if(propName === 'fontFamily'){\n                var val = css.css[this.dataset.prop].replace(/\\\"/g, \"\");\n                var el = $(this)\n                el.val(val);\n                if(el.val() === null) {\n                    el.append('<option value=\"'+val+'\">'+val+'</option>');\n                    el.val(val);\n                }\n            } else {\n                $(this).val(css.css[this.dataset.prop])\n            }\n        });\n    }\n};\n\nvar populate = function(css){\n    $.each(_populate, function(){\n        this(css)\n    })\n};\n\nvar sccontainertype = function (value){\n    var cnt = mw.tools.firstParentOrCurrentWithAnyOfClasses(ActiveNode, ['container', 'container-fluid']);\n    if(cnt && mw.tools.isEditable(cnt)){\n        cnt.classList.remove('container');\n        cnt.classList.remove('container-fluid');\n        cnt.classList.add(value);\n        mw.top().wysiwyg.change(cnt);\n    }\n}\nvar scColumns = function (property, value){\n    var tg = ActiveNode;\n    while (tg && tg.classList) {\n        if(!tg.classList.contains('col') && !tg.className.contains('col-')) {\n            tg = tg.parentNode;\n        } else {\n            break\n        }\n    }\n\n    if(property === 'col-desktop') {\n        for (var i = 1; i <= 12; i++) {\n            tg.classList.remove('col-' + i)\n            tg.classList.remove('col-lg-' + i)\n        }\n        // tg.classList.add('col-' + value)\n        tg.classList.add('col-lg-' + value)\n    } else if(property === 'col-tablet') {\n        for (var i = 1; i <= 12; i++) {\n            tg.classList.remove('col-md-' + i)\n        }\n        tg.classList.add('col-md-' + value)\n    } else if(property === 'col-mobile') {\n        for (var i = 1; i <= 12; i++) {\n            tg.classList.remove('col-xs-' + i)\n            tg.classList.remove('col-sm-' + i)\n        }\n        tg.classList.add('col-sm-' + value)\n    }\n}\n\nvar OverlayNode = null;\n\nvar specialCases = function (property, value){\n    if(!property) return;\n    if(property.includes('col-')){\n        scColumns(property, value)\n        return true;\n    } else if(OverlayNode && property === 'overlay-color') {\n        OverlayNode.style.backgroundColor = value;\n        mw.top().wysiwyg.change(OverlayNode);\n        return true;\n    }  else if(OverlayNode && property === 'overlay-blend-mode') {\n        OverlayNode.style.mixBlendMode = value;\n        mw.top().wysiwyg.change(OverlayNode);\n        return true;\n    }\n\n}\n\nvar populateSpecials = function (css) {\n    var holder = document.getElementById('columns-edit');\n    var colDesktop = document.querySelector('[data-prop=\"col-desktop\"]')\n    var coltablet = document.querySelector('[data-prop=\"col-tablet\"]')\n    var colmobile = document.querySelector('[data-prop=\"col-mobile\"]')\n    colDesktop.value = ''\n    coltablet.value = ''\n    colmobile.value = ''\n    holder.style.display = 'none';\n\n    var containerType = document.querySelector('#container-type');\n    containerType.style.display = 'none';\n    var ol = document.getElementById('overlay-edit');\n    ol.style.display = 'none';\n    OverlayNode = null;\n\n    if(ActiveNode) {\n         var cnt = mw.tools.firstParentOrCurrentWithAnyOfClasses(ActiveNode, ['container', 'container-fluid']);\n        if(cnt && mw.tools.isEditable(cnt)){\n            containerType.style.display = '';\n            if(cnt.classList.contains('container-fluid')) {\n                document.querySelector('[name=\"containertype\"][value=\"container-fluid\"]').checked = true\n            } else  if(cnt.classList.contains('container')) {\n                document.querySelector('[name=\"containertype\"][value=\"container\"]').checked = true\n            }\n        }\n\n        var layout = mw.tools.firstParentOrCurrentWithAnyOfClasses(ActiveNode, ['module-layouts']);\n        if(layout) {\n            var overlay = layout.querySelector('.mw-layout-overlay');\n            OverlayNode = overlay;\n            if(overlay) {\n                var overlayCss = getComputedStyle(overlay);\n                var bgColor = overlayCss.backgroundColor;\n                var blend = overlayCss.mixBlendMode;\n                var oc = document.getElementById('overlay-color')\n                var blendfield = document.getElementById('overlay-blend-mode')\n                blendfield.value = blend\n                oc.value = bgColor\n                oc.parentNode.querySelector('.mw-field-color-indicator-display').style.backgroundColor = bgColor\n                ol.style.display = '';\n            }\n\n        }\n\n\n\n        var col = null;\n        var tg = ActiveNode;\n        while (tg && tg.classList) {\n            if(!tg.classList.contains('col') && !tg.className.contains('col-')) {\n                tg = tg.parentNode;\n            } else {\n                if(mw.tools.isEditable(tg)){\n                    col = tg;\n                    break\n                } else {\n                    tg = tg.parentNode;\n                }\n            }\n        }\n        if(col) {\n            holder.style.display = '';\n            var lg = col.className.split('col-lg-')[1] || '';\n            var md = col.className.split('col-md-')[1] || '';\n            var sm = col.className.split('col-sm-')[1] || '';\n            colDesktop.value = lg.split(' ')[0];\n            coltablet.value = md.split(' ')[0];\n            colmobile.value = sm.split(' ')[0];\n        }\n    }\n}\n\nvar output = function(property, value){\n    if(!ActiveNode) {\n        ActiveNode = mw.top().liveEditSelector.selected\n    }\n    if(ActiveNode.length) {\n        ActiveNode = ActiveNode[0]\n    }\n    if(ActiveNode) {\n        if(!specialCases(property, value)) {\n            //  ActiveNode.style[property] = value;\n            mw.top().liveedit.cssEditor.temp(ActiveNode, property.replace( /([a-z])([A-Z])/g, '$1-$2' ).toLowerCase(), value + '!important')\n            // ActiveNode.style.setProperty(property, value);\n            ActiveNode.setAttribute('staticdesign', true);\n        }\n        mw.top().wysiwyg.change(ActiveNode);\n        mw.top().liveEditSelector.positionSelected();\n    }\n};\n\nvar _defaultValuesArray = ['auto', 'inherit', 'unset'];\n\nvar numValue = function (value) {\n    if(/^\\d+$/.test(value)) {\n        return value + 'px';\n    }\n    return value;\n};\n\n\nvar defaultValuesUIProp = null\nvar defaultValuesUITarget = null;\nvar _defaultValuesUI;\nvar dfslider\nvar defaultValuesUI = function (prop, targetNode) {\n\n    if(!_defaultValuesUI) {\n        var node = mw.element('<div class=\"default-values-list\" />');\n        _defaultValuesUI = node.get(0);\n        dfslider = mw.element('<div class=\"mw-range default-values-list-slider\" />');\n        node.append(dfslider)\n        $(dfslider.get(0)).slider({\n            slide: function( event, ui ) {\n                var val = parseFloat(ui.value);\n                if(isNaN(val)) {\n                    val = 0;\n                }\n                output(defaultValuesUIProp, numValue(val))\n                defaultValuesUITarget.value = val\n            }\n        })\n        _defaultValuesArray.forEach(function (val){\n            var li = mw.element({\n                tag: 'span',\n                props:{\n                    innerHTML: val,\n\n                    dataset: {\n                        value: val\n                    }\n                },\n\n            })\n            li.on('click', function (){\n                output(prop, numValue(this.dataset.value))\n            })\n            node.append(li)\n        })\n        document.body.appendChild(node.get(0))\n        document.body.addEventListener('click', function (e){\n            if(e.target !== _defaultValuesUI && !_defaultValuesUI.contains(e.target) && e.target !== defaultValuesUITarget) {\n                _defaultValuesUI.style.display = 'none';\n            }\n        })\n    }\n\n    targetNode.addEventListener('focus', function (e){\n        var val = parseFloat(targetNode.value);\n        if(isNaN(val)) {\n            val = 0;\n        }\n        $(dfslider.get(0)).slider(\"value\", val)\n        defaultValuesUIProp = prop;\n        defaultValuesUITarget = e.target;\n        var rect = e.target.getBoundingClientRect();\n        _defaultValuesUI.style.top = (rect.top + scrollY + rect.height) + 'px'\n        var lft = (rect.left + scrollX);\n        if((lft + _defaultValuesUI.offsetWidth) > innerWidth) {\n            lft = innerWidth -  (_defaultValuesUI.offsetWidth + 10) ;\n        }\n        _defaultValuesUI.style.left = lft + 'px'\n        _defaultValuesUI.style.display = 'block';\n    })\n\n\n\n    return node;\n}\n\nvar init = function(){\n\n    var spacesFields = [\n        ['.margin-top', 'marginTop'],\n        ['.margin-right', 'marginRight'],\n        ['.margin-bottom', 'marginBottom'],\n        ['.margin-left', 'marginLeft'],\n\n        ['.padding-top', 'paddingTop'],\n        ['.padding-right', 'paddingRight'],\n        ['.padding-bottom', 'paddingBottom'],\n        ['.padding-left', 'paddingLeft'],\n    ];\n\n    spacesFields.forEach(function (item){\n        var node = mw.element(item[0])\n        node.on('input', function(){ output(item[1], numValue(this.value)) });\n        defaultValuesUI(item[1], node.get(0))\n    })\n\n\n\n\n\n\n\n    $('.text-align > span').on('click', function(){\n        output('textAlign', this.dataset.value);\n        $('.text-align > .active').removeClass('active');\n        $(this).addClass('active')\n    });\n    $(\".colorField\").each(function(){\n        var el = this;\n        el.oninput = function(){\n            var color = this.value;\n            if(el.dataset.prop) {\n                output(el.dataset.prop, color);\n            } else if(el.dataset.func) {\n                eval(el.dataset.func + '(' + color + ')');\n            } else {\n                $(el).trigger('colorChange', color)\n            }\n        }\n    });\n\n    $(\".regular\").on('input', function(){\n        output(this.dataset.prop, this.value)\n    });\n\n    $(\"#background-remove\").on(\"click\", function () {\n        $('.background-preview').css('backgroundImage', 'none');\n        output('backgroundImage', 'none')\n    });\n    $(\"#background-reset\").on(\"click\", function () {\n        output('backgroundImage', '');\n    });\n\n    $(\"#background-select-gradient\").on(\"click\", function () {\n\n        var mTitle = \"Pick gradient color\";\n        var defaults = {\n            url: mw.external_tool('gradient_picker'),\n            width: 500,\n            height: 500,\n            autoHeight:true,\n            overlay:true,\n            title: 'Gradient Picker',\n            className: 'mw-dialog-module-settings',\n            closeButtonAction: 'remove'\n        };\n        var options = {};\n        var settings = Object.assign({}, defaults, options)\n        return mw.top().dialogIframe(settings);\n\n    });\n    $(\"#background-select-item\").on(\"click\", function () {\n        var dialog;\n        var picker = new mw.filePicker({\n            type: 'images',\n            label: false,\n            autoSelect: false,\n            footer: true,\n            _frameMaxHeight: true,\n\n            onResult: function (data) {\n                if(!data) return;\n                var url = data.src ? data.src : data;\n                output('backgroundImage', 'url(' + url + ')');\n                $('.background-preview').css('backgroundImage', 'url(' + url + ')')\n                dialog.remove()\n            },\n            cancel: function () {\n                dialog.remove()\n            }\n        });\n        dialog = mw.top().dialog({\n            content: picker.root,\n            title: mw.lang('Select image'),\n            footer: false,\n            width: 1200\n        })\n\n\n    });\n\n    _prepare.units();\n    _prepare.border();\n    _prepare.shadow();\n\n    $('.mw-ui-box-header').on('click', function(){\n        setTimeout(function(){\n          $(document.body).trigger('click')\n        }, 400)\n    });\n\n\n\n\n};\n\n\n\nmw.top().$(mw.top().liveEditSelector).on('select', function(e, nodes){\n    if(nodes && nodes[0] && nodes[0].nodeType === 1){\n        var css = mw.CSSParser(nodes[0]);\n        populate(css);\n        ActiveNode = nodes[0];\n\n        populateSpecials(css);\n\n        var clsdata = [];\n        $.each(nodes[0].className.split(' '), function(){\n            var cls = this.trim();\n            if(cls) {\n                clsdata.push({title: cls})\n            }\n        });\n        ( window.classes || initClasses() ).setData(clsdata)\n    }\n\n    if(ActiveNode){\n        var can = ActiveNode.textContent === ActiveNode.innerHTML;\n        mw.$('#text-mask')[can ? 'show' : 'hide']();\n        mw.$('#text-mask-field')[0].checked = mw.tools.hasClass(ActiveNode, 'mw-bg-mask');\n        if(ActiveNode.classList.contains('module') || !mw.tools.parentsOrCurrentOrderMatchOrOnlyFirst(ActiveNode.parentNode, ['edit', 'module'])) {\n            $('#classtags-accordion').hide();\n        } else{\n            $('#classtags-accordion').show();\n        }\n    }\n\n    animationGUI.set()\n});\n\n    $(document).ready(function(){\n        mw.$('.mw-field input').attr('autocomplete', 'off')\n        mw.top().$(top.document.body).on('mousedown touchstart', function(e){\n            var node = mw.tools.firstMatchesOnNodeOrParent(e.target, ['.element', '.module']);\n            if( !node && !mw.tools.firstParentOrCurrentWithAnyOfClasses(e.target, ['mw-control-box', 'mw-defaults']) ){\n                ActiveNode = null;\n            }\n        });\n\n        $(\".mw-element-spacing-editor input\")\n            .on('focus', function(){\n\n                $(\".mw-ese-holder.active\").removeClass('active');\n                $(this).parent().addClass('active');\n            })\n            .on('blur', function(){\n                $(\".mw-ese-holder.active\").removeClass('active');\n        });\n\n\n            init();\n\n            var editorRoot = document.getElementById('css-editor-root');\n\n            setInterval(function(){\n                editorRoot.classList[ActiveNode ? 'remove' : 'add']('disabled');\n            }, 700)\n            mw.components._init();\n\n\n    });\n\n    $(window).on('load', function () {\n        if(mw.top().liveEditSelector.selected[0]){\n            ActiveNode = mw.top().liveEditSelector.selected[0];\n\n             if(ActiveNode){\n                var css = mw.CSSParser(ActiveNode);\n                populate(css);\n\n                var can = ActiveNode.innerText === ActiveNode.innerHTML;\n                mw.$('#text-mask')[can ? 'show' : 'hide']();\n\n                mw.$('#text-mask-field')[0].checked = mw.tools.hasClass(ActiveNode, 'mw-bg-mask');\n                 animationGUI.set()\n            }\n            populateSpecials(css);\n        }\n        mw.top().liveEditSelector.positionSelected();\n        setTimeout(function(){\n            $(document.body).trigger('click')\n        }, 400)\n        mw.top().win.document.body.addEventListener('click', function (){\n            colorPickers.forEach(function (cp) {\n                 if(cp.hide) {\n                    cp.hide()\n                } else {\n                    cp.style.display = 'none'\n                }\n\n            })\n        })\n\n    });\n</script>\n\n\n<style>\n\n    <?php include \"style.css\";  ?>\n    <?php\n        if (_lang_is_rtl()) {\n            include \"rtl.css\";\n        }\n    ?>\n\n</style>\n<div id=\"css-editor-root\">\n\n    <script>\n        mw.require('tags.js');\n\n        initClasses = function () {\n            if(!window.classes) {\n                window.classes = new mw.tags({\n                    element: '#classtags',\n                    data: [],\n                    inputField: true,\n                    wrap: true,\n                    hideItem: function(item) {\n                        return item.title.indexOf('module') !== -1\n                            || item.title.indexOf('element') !== -1\n                            || item.title.indexOf('allow-drop') !== -1\n                            || item.title.indexOf('cloneable') !== -1\n                            || item.title.indexOf('ui-draggable') !== -1\n                            || item.title.indexOf('ui-draggable-handle') !== -1\n                            || item.title === 'edit'\n                            || item.title === 'safe-mode'\n                            || item.title === 'parallax'\n                            || item.title === 'changed'\n                            || item.title === 'pull-left'\n                            || item.title === 'left'\n                            || item.title === 'right'\n                            || item.title === 'pull-right'\n                            || item.title === 'mw-bg-mask'\n                            || item.title === 'lipsum'\n                            || item.title.indexOf('nodrop') !== -1;\n                    }\n                });\n                $(classes).on('change', function(e, item, data){\n                    var cls = [];\n                    $.each(data, function(){\n                        cls.push(this.title);\n                    });\n                    ActiveNode.setAttribute('class', cls.join(' '))\n                    mw.top().wysiwyg.change(ActiveNode);\n                });\n            }\n            return window.classes;\n        };\n\n\n         $(window).on('load', function(){\n            initClasses()\n\n             mw.components._init();\n        })\n\n    </script>\n    <div data-mwcomponent=\"accordion\" class=\"mw-ui-box mw-accordion\" data-options=\"openFirst: false\">\n\n\n\n\n<mw-accordion-item class=\"mw-accordion-item-css\">\n    <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/background.svg\"> <?php _e(\"Background\"); ?></div>\n    <div class=\"mw-accordion-content mw-ui-box-content\">\n        <div class=\"s-field\">\n            <label><?php _e(\"Image\"); ?></label>\n            <div class=\"s-field-content\">\n            <div class=\"mw-ui-btn-nav\" id=\"background-image-nav\">\n\n                <span\n                    class=\"mw-ui-btn mw-ui-btn-outline mw-ui-btn-small tip mdi mdi-folder-image mdi-17px\" data-tip=\"Select background image\"\n                    id=\"background-select-item\"><span class=\"background-preview\"></span></span>\n\n                <span\n                    class=\"mw-ui-btn mw-ui-btn-outline mw-ui-btn-small tip mdi mdi-folder-image mdi-17px\" data-tip=\"Select gradient\"\n                    id=\"background-select-gradient\" style=\"display: none\"><span class=\"background-gradient\"></span></span>\n\n\n                <span id=\"background-remove\" class=\"mw-ui-btn mw-ui-btn-outline mw-ui-btn-small tip\" data-tip=\"Remove background\" data-tipposition=\"top-right\"><span class=\"mdi mdi-delete\"></span></span>\n                <span id=\"background-reset\" class=\"mw-ui-btn mw-ui-btn-outline mw-ui-btn-small tip\" data-tip=\"Reset background\" data-tipposition=\"top-right\"><span class=\"mdi mdi-history\"></span></span>\n            </div>\n            </div>\n        </div>\n        <div class=\"s-field\">\n            <label><?php _e(\"Color\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <span class=\"mw-field-color-indicator\"><span class=\"mw-field-color-indicator-display\"></span></span>\n                    <input type=\"text\" class=\"colorField unit\" data-prop=\"backgroundColor\">\n                </div>\n            </div>\n        </div>\n\n        <div class=\"s-field\">\n            <label><?php _e(\"Size\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <select type=\"text\" class=\"regular\" data-prop=\"backgroundSize\">\n                        <option value=\"auto\"><?php _e(\"Auto\"); ?></option>\n                        <option value=\"contain\"><?php _e(\"Fit\"); ?></option>\n                        <option value=\"cover\"><?php _e(\"Cover\"); ?></option>\n                        <option value=\"100% 100%\"><?php _e(\"Scale\"); ?></option>\n                    </select>\n                </div>\n            </div>\n        </div>\n        <div class=\"s-field\">\n            <label><?php _e(\"Repeat\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <select type=\"text\" class=\"regular\" data-prop=\"backgroundRepeat\">\n                        <option value=\"repeat\"><?php _e(\"repeat\"); ?></option>\n                        <option value=\"no-repeat\"><?php _e(\"no-repeat\"); ?></option>\n                        <option value=\"repeat-x\"><?php _e(\"repeat horizontally\"); ?></option>\n                        <option value=\"repeat-y\"><?php _e(\"repeat vertically \"); ?></option>\n                    </select>\n                </div>\n            </div>\n        </div>\n        <div class=\"s-field\" id=\"text-mask\">\n            <label>Text mask</label>\n            <script>\n                mask = function (val) {\n                    var $node = $(ActiveNode);\n                    var action = val ? 'addClass' : 'removeClass';\n                    $node[action]('mw-bg-mask');\n                    if (action === 'addClass') {\n                        output('color', 'transparent')\n                    } else {\n                        output('color', '')\n                    }\n                    mw.top().wysiwyg.change($node[0]);\n                }\n            </script>\n            <div class=\"s-field-content\">\n                <label class=\"mw-ui-check\">\n                    <input type=\"checkbox\" id=\"text-mask-field\"  onchange=\"mask(this.checked)\">\n                    <span></span><span></span>\n                </label>\n            </div>\n        </div>\n\n        <div class=\"s-field\">\n            <label><?php _e(\"Position\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <select class=\"regular\" data-prop=\"backgroundPosition\">\n                        <option value=\"0% 0%\"><?php _e(\"Left Top\"); ?></option>\n                        <option value=\"50% 0%\"><?php _e(\"Center Top\"); ?></option>\n                        <option value=\"100% 0%\"><?php _e(\"Right Top\"); ?></option>\n\n                        <option value=\"0% 50%\"><?php _e(\"Left Center\"); ?></option>\n                        <option value=\"50% 50%\"><?php _e(\"Center Center\"); ?></option>\n                        <option value=\"100% 50%\"><?php _e(\"Right Center\"); ?></option>\n\n                        <option value=\"0% 100%\"><?php _e(\"Left Bottom\"); ?></option>\n                        <option value=\"50% 100%\"><?php _e(\"Center Bottom\"); ?></option>\n                        <option value=\"100% 100%\"><?php _e(\"Right Bottom\"); ?></option>\n                    </select>\n                </div>\n            </div>\n        </div>\n    </div>\n</mw-accordion-item>\n\n        <mw-accordion-item class=\"mw-accordion-item-css\">\n\n            <?php $enabled_custom_fonts = get_option(\"enabled_custom_fonts\", \"template\");\n\n\n            $enabled_custom_fonts_array = array();\n\n            if (is_string($enabled_custom_fonts) and $enabled_custom_fonts) {\n                $enabled_custom_fonts_array = explode(',', $enabled_custom_fonts);\n            }\n\n            ?>\n\n\n            <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/typography.svg\"> <?php _e(\"Typography\"); ?></div>\n            <div class=\"mw-accordion-content mw-ui-box-content css-gui-element-typography\">\n\n                <div class=\"s-field\">\n                    <label><?php _e(\"Font Family\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                                <select class=\"regular\" data-prop=\"fontFamily\">\n                                    <option value=\"inherit\">Default</option>\n\n                                    <?php if($enabled_custom_fonts_array): ?>\n                                    <?php foreach ($enabled_custom_fonts_array as $font): ?>\n                                        <option value='<?php print $font; ?>'><?php print $font; ?></option>\n                                    <?php endforeach; ?>\n                                    <?php endif; ?>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div\n\n\n\n                <div class=\"s-field\">\n                    <label><?php _e(\"Text align\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"text-align\">\n                            <span class=\"ta-left\" data-value=\"left\"><span class=\"mdi mdi-format-align-left\"></span></span>\n                            <span class=\"ta-center\" data-value=\"center\"><span class=\"mdi mdi-format-align-center\"></span></span>\n                            <span class=\"ta-right\" data-value=\"right\"><span class=\"mdi mdi-format-align-right\"></span></span>\n                            <span class=\"ta-justify\" data-value=\"justify\"><span class=\"mdi mdi-format-align-justify\"></span></span>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Size\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"fontSize\" data-size=\"medium\"><input type=\"text\"></div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Line height\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"lineHeight\" data-size=\"medium\"><input type=\"text\"></div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Color\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                                <span class=\"mw-field-color-indicator\"><span class=\"mw-field-color-indicator-display\"></span></span>\n                                <input type=\"text\" class=\"colorField unit\" data-prop=\"color\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Style\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                                <select class=\"regular\" data-prop=\"fontStyle\">\n                                    <option value=\"normal\"><?php _e(\"normal\"); ?></option>\n                                    <option value=\"italic\"><?php _e(\"italic\"); ?></option>\n                                    <option value=\"oblique\"><?php _e(\"oblique\"); ?></option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Weight\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                                <select class=\"regular\" data-prop=\"fontWeight\">\n                                    <option value=\"normal\"><?php _e(\"normal\"); ?></option>\n                                    <option value=\"bold\"><?php _e(\"bold\"); ?></option>\n                                    <option value=\"bolder\"><?php _e(\"bolder\"); ?></option>\n                                    <option value=\"lighter\"><?php _e(\"lighter\"); ?></option>\n                                    <option value=\"100\">100</option>\n                                    <option value=\"200\">200</option>\n                                    <option value=\"300\">300</option>\n                                    <option value=\"400\">400</option>\n                                    <option value=\"500\">500</option>\n                                    <option value=\"600\">600</option>\n                                    <option value=\"700\">700</option>\n                                    <option value=\"800\">800</option>\n                                    <option value=\"900\">900</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Text transform\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                                <select class=\"regular\" data-prop=\"textTransform\">\n                                    <option value=\"none\"><?php _e(\"none\"); ?></option>\n                                    <option value=\"capitalize\"><?php _e(\"capitalize\"); ?></option>\n                                    <option value=\"uppercase\"><?php _e(\"uppercase\"); ?></option>\n                                    <option value=\"lowercase\"><?php _e(\"lowercase\"); ?></option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Word Spacing\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"wordSpacing\" data-size=\"medium\"><input type=\"text\"></div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"s-field\">\n                    <label><?php _e(\"Letter Spacing\"); ?></label>\n                    <div class=\"s-field-content\">\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"letterSpacing\" data-size=\"medium\"><input type=\"text\"></div>\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        </mw-accordion-item>\n\n        <mw-accordion-item class=\"mw-accordion-item-css\" id=\"overlay-edit\">\n        <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/overlay.svg\"> <?php _e(\"Overlay\"); ?></div>\n        <div class=\"mw-accordion-content mw-ui-box-content\">\n            <div class=\"s-field\">\n                <label><?php _e(\"Color\"); ?></label>\n                <div class=\"s-field-content\">\n                    <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                        <span class=\"mw-field-color-indicator\"><span class=\"mw-field-color-indicator-display\"></span></span>\n                        <input type=\"text\" class=\"colorField unit\" id=\"overlay-color\" data-prop=\"overlay-color\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"s-field\">\n                <label><?php _e(\"Blend mode\"); ?></label>\n                <div class=\"s-field-content\">\n                    <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n\n                        <select data-prop=\"overlay-blend-mode\" id=\"overlay-blend-mode\" class=\"regular\">\n                            <option value='normal' selected><?php _e('None'); ?></option>\n                            <option value='multiply'>multiply</option>\n                            <option value='screen'>screen</option>\n                            <option value='overlay'>overlay</option>\n                            <option value='darken'>darken</option>\n                            <option value='lighten'>lighten</option>\n                            <option value='color-dodge'>color-dodge</option>\n                            <option value='color-burn'>color-burn</option>\n                            <option value='difference'>difference</option>\n                            <option value='exclusion'>exclusion</option>\n                            <option value='hue'>hue</option>\n                            <option value='saturation'>saturation</option>\n                            <option value='color'>color</option>\n                            <option value='luminosity'>luminosity</option>\n\n                        </select>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mw-accordion-item>\n        <mw-accordion-item class=\"mw-accordion-item-css\" id=\"container-type\">\n        <div class=\"mw-ui-box-header mw-accordion-title\">\n            <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/container.svg\"> <?php _e(\"Container\"); ?>\n        </div>\n        <div class=\"mw-accordion-content mw-ui-box-content\">\n\n        <div class=\"s-field\" id=\"field-conatiner-type\">\n            <label><?php _e(\"Container type\"); ?></label>\n            <div class=\"s-field-content\">\n                <label class=\"mw-ui-check\"> <input type=\"radio\" onchange=\"sccontainertype(this.value)\" name=\"containertype\" value=\"container\"/> <span></span><span> Fixed </span> </label>\n                <label class=\"mw-ui-check\"> <input type=\"radio\" onchange=\"sccontainertype(this.value)\" name=\"containertype\" value=\"container-fluid\"/> <span></span><span> Fluid </span> </label>\n\n            </div>\n        </div>\n        </div>\n    </mw-accordion-item>\n        <mw-accordion-item class=\"mw-accordion-item-css\" id=\"columns-edit\">\n\n        <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/grid.svg\"> <?php _e(\"Grid\"); ?></div>\n        <div class=\"mw-accordion-content mw-ui-box-content\">\n\n            <div class=\"s-field\">\n\n                <div class=\"s-field-content\">\n                    <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                        <label><?php _e('Desktop'); ?></label>\n                        <i class=\" mdi mdi-monitor\"></i>\n                        <select data-prop=\"col-desktop\" class=\"regular\">\n                            <option value='' selected disabled><?php _e('Choose'); ?></option>\n                            <?php foreach(template_field_size_options() as $optionKey=>$optionValue): ?>\n                                <option value=\"<?php echo $optionKey; ?>\"><?php echo $optionValue; ?></option>\n                            <?php endforeach; ?>\n                        </select>\n                    </div>\n                    <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                        <label><?php _e('Tablet'); ?></label>\n                        <i class=\" mdi mdi-tablet\"></i>\n                        <select data-prop=\"col-tablet\" class=\"regular\">\n                            <option value='' selected disabled><?php _e('Choose'); ?></option>\n                            <?php foreach(template_field_size_options() as $optionKey=>$optionValue): ?>\n                                <option value=\"<?php echo $optionKey; ?>\"><?php echo $optionValue; ?></option>\n                            <?php endforeach; ?>\n                        </select>\n                    </div>\n                    <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                        <label><?php _e('Mobile'); ?></label>\n                        <i class=\" mdi mdi-cellphone\"></i>\n                        <select data-prop=\"col-mobile\" class=\"regular\">\n                            <option value='' selected disabled><?php _e('Choose'); ?></option>\n                            <?php foreach(template_field_size_options() as $optionKey=>$optionValue): ?>\n                                <option value=\"<?php echo $optionKey; ?>\"><?php echo $optionValue; ?></option>\n                            <?php endforeach; ?>\n                        </select>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n\n\n    </mw-accordion-item>\n        <mw-accordion-item class=\"mw-accordion-item-css\"  id=\"size-box\" style=\"display: none\">\n        <div class=\"mw-ui-box-header mw-accordion-title\"><?php _e(\"Size\"); ?></div>\n        <div class=\"mw-accordion-content mw-ui-box-content\">\n            <div class=\"mw-esr-col\">\n                <div class=\"mw-esc\">\n                    <label><?php _e(\"Width\"); ?></label>\n                    <div class=\"mw-multiple-fields\">\n                        <div\n                            class=\"mw-field mw-field-flat unit\"\n                            data-prop=\"width\"\n                            data-size=\"medium\"\n                            >\n                            <input type=\"text\" data-options=\"min: 50, max: 2000\">\n                        </div>\n                        <span class=\"mw-ui-btn mw-ui-btn-medium\" onclick=\"output('width', 'auto')\">Auto</span>\n                    </div>\n                </div>\n                <div class=\"mw-esc\">\n                    <label><?php _e(\"Height\"); ?></label>\n                    <div class=\"mw-multiple-fields\">\n                        <div class=\"mw-field mw-field-flat unit\" data-prop=\"height\" data-size=\"medium\">\n                            <input type=\"text\" data-options=\"min: 50, max: 2000\">\n\n                        </div>\n                        <span class=\"mw-ui-btn mw-ui-btn-medium\" onclick=\"output('height', 'auto')\">Auto</span>\n\n                    </div>\n                </div>\n            </div>\n            <div class=\"size-advanced\" style=\"display: none;\">\n                <div class=\"mw-esr-col\">\n                    <div class=\"mw-esc\">\n                        <label><?php _e(\"Min Width\"); ?></label>\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"minWidth\" data-size=\"medium\"><input type=\"text\" data-options=\"min: 50, max: 2000\"></div>\n                            <span class=\"mw-ui-btn mw-ui-btn-medium\" onclick=\"output('minWidth', '0')\">None</span>\n\n                        </div>\n                    </div>\n                    <div class=\"mw-esc\">\n                        <label><?php _e(\"Min Height\"); ?></label>\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"minHeight\" data-size=\"medium\"><input type=\"text\" data-options=\"min: 50, max: 2000\"></div>\n                            <span class=\"mw-ui-btn mw-ui-btn-medium\" onclick=\"output('minHeight', '0')\">None</span>\n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"mw-esr-col\">\n                    <div class=\"mw-esc\">\n                        <label><?php _e(\"Max Width\"); ?></label>\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"maxWidth\" data-size=\"medium\"><input type=\"text\" data-options=\"min: 50, max: 2000\"></div>\n                            <span class=\"mw-ui-btn mw-ui-btn-medium\" onclick=\"output('maxWidth', 'none')\">None</span>\n                        </div>\n\n                    </div>\n                    <div class=\"mw-esc\">\n                        <label><?php _e(\"Max Height\"); ?></label>\n                        <div class=\"mw-multiple-fields\">\n                            <div class=\"mw-field mw-field-flat unit\" data-prop=\"maxHeight\" data-size=\"medium\"><input type=\"text\"></div>\n                            <span class=\"mw-ui-btn mw-ui-btn-medium\" onclick=\"output('maxHeight', 'none')\">None</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <span class=\"mw-ui-link\" onclick=\"mw.$('.size-advanced').slideToggle()\">Advanced</span>\n        </div>\n    </mw-accordion-item>\n\n        <mw-accordion-item class=\"mw-accordion-item-css\" >\n        <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/spacing.svg\"><?php _e(\"Spacing\"); ?></div>\n        <div class=\"mw-accordion-content mw-ui-box-content\">\n            <div class=\"mw-element-spacing-editor\">\n                <span class=\"mw-ese-label\"><?php _e(\"Margin\"); ?></span>\n                <div class=\"mw-ese-holder mw-ese-margin\">\n                    <span class=\"input mw-ese-top\"><input type=\"text\" class=\" margin-top\"></span>\n                    <span class=\"input mw-ese-right\"><input type=\"text\" class=\" margin-right\"></span>\n                    <span class=\"input mw-ese-bottom\"><input type=\"text\" class=\" margin-bottom\"></span>\n                    <span class=\"input mw-ese-left\"><input type=\"text\" class=\" margin-left\"></span>\n                    <div class=\"mw-ese-holder mw-ese-padding\">\n                        <span class=\"input mw-ese-top\"><input type=\"text\" min=\"0\" class=\" padding-top\"></span>\n                        <span class=\"input mw-ese-right\"><input type=\"text\" min=\"0\" class=\" padding-right\"></span>\n                        <span class=\"input mw-ese-bottom\"><input type=\"text\" min=\"0\" class=\" padding-bottom\"></span>\n                        <span class=\"input mw-ese-left\"><input type=\"text\" min=\"0\" class=\" padding-left\"></span>\n                        <span class=\"mw-ese-label\"><?php _e(\"Padding\"); ?></span>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </mw-accordion-item>\n\n\n        <mw-accordion-item class=\"mw-accordion-item-css\"  >\n    <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/border.svg\"><?php _e(\"Border\"); ?></div>\n    <div class=\"mw-accordion-content mw-ui-box-content\">\n        <div class=\"s-field\">\n            <label><?php _e(\"Position\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <select type=\"text\" id=\"border-position\">\n                        <option value=\"all\" selected><?php _e(\"All\"); ?></option>\n                        <option value=\"Top\"><?php _e(\"Top\"); ?></option>\n                        <option value=\"Right\"><?php _e(\"Right\"); ?></option>\n                        <option value=\"Bottom\"><?php _e(\"Bottom\"); ?></option>\n                        <option value=\"Left\"><?php _e(\"Left\"); ?></option>\n                    </select>\n                </div>\n            </div>\n        </div>\n        <div class=\"s-field\">\n            <label><?php _e(\"Size\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-multiple-fields\">\n                    <div class=\"mw-field mw-field-flat\" data-size=\"medium\"><input type=\"text\" id=\"border-size\"></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"s-field\">\n            <label><?php _e(\"Color\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <span class=\"mw-field-color-indicator\"><span class=\"mw-field-color-indicator-display\"></span></span>\n                    <input type=\"text\" placeholder=\"#ffffff\" class=\"colorField unit\" data-position=\"top-right\" id=\"border-color\">\n                </div>\n\n            </div>\n        </div>\n        <div class=\"s-field\">\n            <label>Type</label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <select type=\"text\" id=\"border-type\">\n                        <option value=\"\" disabled selected><?php _e(\"Choose\"); ?></option>\n                        <option value=\"none\"><?php _e(\"none\"); ?></option>\n                        <option value=\"solid\"><?php _e(\"solid\"); ?></option>\n                        <option value=\"dotted\"><?php _e(\"dotted\"); ?></option>\n                        <option value=\"dashed\"><?php _e(\"dashed\"); ?></option>\n                        <option value=\"double\"><?php _e(\"double\"); ?></option>\n                        <option value=\"groove\"><?php _e(\"groove\"); ?></option>\n                        <option value=\"ridge\"><?php _e(\"ridge\"); ?></option>\n                        <option value=\"inset\"><?php _e(\"inset\"); ?></option>\n                        <option value=\"outset\"><?php _e(\"outset\"); ?></option>\n                    </select>\n                </div>\n            </div>\n        </div>\n    </div>\n</mw-accordion-item>\n        <mw-accordion-item class=\"mw-accordion-item-css\" >\n    <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/miscellaneous.svg\"><?php _e(\"Miscellaneous\"); ?></div>\n    <div class=\"mw-accordion-content mw-ui-box-content\">\n        <div class=\"rouded-corners\" >\n            <label><?php _e(\"Rounded Corners\"); ?></label>\n            <div class=\"s-field-content\">\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <div class=\"mw-multiple-fields\">\n                        <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                            <input type=\"text\" class=\"regular order-1\" data-prop=\"borderTopLeftRadius\">\n                            <span class=\"mw-field mw-field-flat-prepend order-2\"><i class=\"angle angle-top-left\"></i></span>\n                        </div>\n                        <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                            <span class=\"mw-field mw-field-flat-prepend\"><i class=\"angle angle-top-right\"></i></span>\n                            <input class=\"regular\" type=\"text\" data-prop=\"borderTopRightRadius\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                    <div class=\"mw-multiple-fields\">\n                        <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                            <input class=\"regular order-1\" type=\"text\" data-prop=\"borderBottomLeftRadius\">\n                            <span class=\"mw-field mw-field-flat-prepend order-2\"><i class=\"angle angle-bottom-left\"></i></span>\n                        </div>\n                        <div class=\"mw-field mw-field-flat\" data-size=\"medium\">\n                            <span class=\"mw-field mw-field-flat-prepend\"><i class=\"angle angle-bottom-right\"></i></span>\n                            <input class=\"regular\" type=\"text\" data-prop=\"borderBottomRightRadius\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</mw-accordion-item>\n        <mw-accordion-item class=\"mw-accordion-item-css\" id=\"classtags-accordion\">\n\n            <div class=\"mw-ui-box-header mw-accordion-title\"> <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/attributes.svg\"><?php _e(\"Attributes\"); ?></div>\n            <div class=\"mw-accordion-content mw-ui-box-content\">\n                <div class=\"mw-ui-field-holder\">\n                    <label class=\"mw-ui-label\"><?php _e(\"Classes\"); ?></label>\n                    <div class=\"mw-ui-field w100\" id=\"classtags\"></div>\n                </div>\n\n            </div>\n\n        </mw-accordion-item>\n\n        <mw-accordion-item id=\"animations-accordion\">\n\n            <style>\n                #animations {\n                    display: block;\n                }\n            </style>\n\n            <script>\n\n\n                var animations = {\n                    common: [\n                        'none',\n                        'bounce',\n                        'flash',\n                        'pulse',\n                        'rubberBand',\n                        'shakeX',\n                        'shakeY',\n                        'headShake',\n                        'swing',\n                        'tada',\n                        'wobble',\n                        'jello',\n                        'heartBeat',\n                        'flip',\n                        'flipInX',\n                        'flipInY',\n\n                        'hinge',\n                        'jackInTheBox',\n                        'rollIn'\n                    ],\n                    appear: [\n                        'backInDown',\n                        'backInLeft',\n                        'backInRight',\n                        'backInUp',\n                        'bounceIn',\n                        'bounceInDown',\n                        'bounceInLeft',\n                        'bounceInRight',\n                        'bounceInUp',\n                        'fadeIn',\n                        'fadeInDown',\n                        'fadeInDownBig',\n                        'fadeInLeft',\n                        'fadeInLeftBig',\n                        'fadeInRight',\n                        'fadeInRightBig',\n                        'fadeInUp',\n                        'fadeInUpBig',\n                        'fadeInTopLeft',\n                        'fadeInTopRight',\n                        'fadeInBottomLeft',\n                        'fadeInBottomRight',\n                        'lightSpeedInRight',\n                        'lightSpeedInLeft',\n                        'rotateIn',\n                        'rotateInDownLeft',\n                        'rotateInDownRight',\n                        'zoomIn',\n                        'zoomInDown',\n                        'zoomInLeft',\n                        'zoomInRight',\n                        'zoomInUp',\n                        'slideInDown',\n                        'slideInLeft',\n                        'slideInRight',\n                        'slideInUp'\n                    ]\n                };\n\n                ;(function(){\n                    var animationApi = {\n                        preview: function (animation) {\n                            return mw.top().__animate(animation)\n                        },\n                        remove: function (id) {\n\n                            var item = mw.top().__pageAnimations.find(function (item) {  return item.id === id });\n                            var citem = Object.assign({}, item)\n                            mw.top().__pageAnimations.splice(mw.top().__pageAnimations.indexOf(item), 1);\n                            Array.from(mw.top().doc.querySelectorAll(citem.selector)).forEach(function (node){\n                                if(node.$$mwAnimations && node.$$mwAnimations.length) {\n                                    var i = node.$$mwAnimations.findIndex(function(a){return a.id === id});\n                                    if(i > -1) {\n                                        node.$$mwAnimations.splice(i, 1);\n                                    }\n                                }\n                            })\n                        },\n                        add: function (node, obj) {\n                            var sel = mw.tools.generateSelectorForNode(node);\n                            var id = mw.id('animation');\n\n\n\n                            if (!node.$$mwAnimations) {\n                                node.$$mwAnimations = [];\n                            }\n\n                            var curr = node.$$mwAnimations.find(function (item) {\n                                return item.when === obj.when;\n                            });\n\n                            if (curr) {\n                                //this.remove(curr.id)\n                            }\n                            var config = Object.assign({selector: sel, id: id}, obj)\n                            node.$$mwAnimations.push(config)\n                            mw.top().__pageAnimations.push(config)\n                            animationApi.preview(config)\n\n                            return config;\n                        }\n                    };\n\n                    var textCase = function (text) {\n                        var result = text.replace(/([A-Z])/g, \" $1\");\n                        return result.charAt(0).toUpperCase() + result.slice(1);\n                    }\n\n                    window.animationGUI = {\n\n                        _types:  {\n                            animationSelector: function() {\n                                var wrap = mw.element({\n                                    props: { className: 's-field'},\n                                    content: [\n                                        {\n                                            tag: 'label',\n                                            props: { innerHTML: mw.lang('Motion')},\n                                        },\n                                        {\n\n                                            props: {  className: 'mw-field mw-field-flat'},\n                                        }\n                                    ]\n                                });\n                                var select = mw.element('<select />');\n                                for (var cat in animations) {\n                                    if (animations.hasOwnProperty(cat)) {\n                                         var group = document.createElement('optgroup');\n                                         group.label = textCase(cat)\n                                         select.append(group);\n                                         var groupAnims = animations[cat];\n                                         var i = 0;\n                                         for( ; i < groupAnims.length; i++) {\n                                             var option = document.createElement('option');\n                                             option.value = groupAnims[i];\n                                             option.innerHTML = textCase(groupAnims[i]);\n                                             group.appendChild(option)\n                                         }\n                                    }\n                                }\n                                mw.element('.mw-field', wrap).append(select)\n                                return wrap;\n\n                            },\n                            speed: function () {\n                                var root = mw.element({\n                                    props: { className: 's-field'},\n\n                                    content: [\n                                        {\n                                            tag: 'label',\n                                            props: { innerHTML: mw.lang('Speed')},\n                                        },\n                                        {\n                                            props: {\n                                                className: 'mw-field mw-field-flat unit',\n                                                dataset: {\n                                                    // after: 'sec.'\n                                                },\n                                            },\n                                            content: {\n                                                tag: 'input',\n                                                props: { type: 'text', placeholder: mw.lang('Speed in seconds') },\n                                            }\n                                        }\n\n                                    ]\n                                })\n                                var sl = mw.element('<div class=\"mw-range default-values-list-slider\" />');\n                                mw.element('.mw-field', root).append(sl)\n                                $(sl.get(0)).slider({\n                                    min: 0.1,\n                                    max: 5,\n                                    step: 0.1,\n                                    slide: function( event, ui ) {\n                                        // this.previousElementSibling.value = Math.round((ui.value / 1000) * 100) / 100;\n                                        this.previousElementSibling.value = ui.value;\n                                        $(this.previousElementSibling).trigger('input')\n                                    }\n                                })\n                                 return  root;\n                            },\n                            when: function () {\n                                return  mw.element(\n                                {\n\n                                    props: {\n                                        style: {\n                                            marginTop: '10px'\n                                        }\n                                    },\n                                    content: [\n                                        {\n                                            props: { className: 's-field'},\n                                            content: [\n                                                {\n                                                    tag: 'label',\n                                                    props: { innerHTML: mw.lang('Trigger')},\n                                                },\n                                                {\n                                                    props: {\n                                                        className: 'mw-field mw-field-flat',\n                                                    },\n                                                    content: [\n                                                        {\n                                                            tag: 'select',\n                                                            props: {  },\n                                                            content: [\n                                                                { tag: 'option', props: { value: 'onAppear', innerHTML: mw.lang('When element appears on screen')}},\n                                                                { tag: 'option', props: { value: 'onHover', innerHTML: mw.lang('When mouse is over')}},\n                                                                { tag: 'option', props: { value: 'onClick', innerHTML: mw.lang('When element is clicked')}},\n                                                            ]\n                                                        },\n                                                    ]\n                                                },\n                                            ]\n                                        },\n\n                                    ]\n                                }\n\n                                );\n                            }\n                        },\n                        renderSingle: function (anim) {\n                            var box = mw.element('<div class=\"mw-module-settings-box\" />');\n                            var del = mw.element('<a class=\"mw-ui-link animation-clear-btn\">Clear</a>')\n                            var typeSelect = animationGUI._types.animationSelector();\n                            var speed = animationGUI._types.speed();\n                            var when = animationGUI._types.when();\n\n                            del.on('click', function () {\n                                mw.element('select', typeSelect)\n                                    .val('none')\n                                    .get(0)\n                                    .dispatchEvent(new Event('input'));\n                            })\n\n                            box\n                                .append(del)\n                                .append(typeSelect)\n                                .append(speed)\n                                .append(when);\n\n                            mw.element('select', when).val(anim.when).on('input', function () {\n                                var curr = mw.__pageAnimations.find(function(a){\n                                    return !!anim.id || a.id === anim.id\n                                });\n                                anim.when = this.value;\n                                if(curr) {\n                                    curr.when = this.value;\n                                }\n                                mw.top().wysiwyg.change(ActiveNode)\n                            });\n\n                            $('.mw-range', speed.get(0)).slider('value', parseFloat(anim.speed))\n\n                            mw.element('select', typeSelect).val(anim.animation).on('input', function () {\n\n                                mw.element('select', when).get(0).disabled = this.value === 'none';\n                                mw.element('input', speed.get(0)).get(0).disabled = this.value === 'none';\n                                $( '.mw-range', speed.get(0) ).slider( this.value === 'none' ? \"disable\" : \"enable\" );\n\n\n                                anim.animation = this.value;\n                                mw.top().__animate(anim)\n                                var curr = mw.__pageAnimations.find(function(a){\n                                    return !!anim.id || a.id === anim.id\n                                });\n                                if(curr) {\n                                    curr.animation = this.value;\n                                }\n                                mw.top().wysiwyg.change(ActiveNode)\n\n                            });\n\n                            $('input', speed.get(0)).val(anim.speed).on('input', function () {\n                                 $('.mw-range', speed.get(0)).slider('value', parseFloat(this.value))\n                                 var val = this.value + 's';\n                                anim.speed = val;\n                                mw.top().__animate(anim);\n                                var curr = mw.__pageAnimations.find(function(a){\n                                    return !!anim.id || a.id === anim.id\n                                });\n                                if (curr) {\n                                    curr.speed = val;\n                                }\n                                mw.top().wysiwyg.change(ActiveNode)\n                            });\n\n                            mw.element('select', when).get(0).disabled = anim.animation === 'none';\n                            mw.element('input', speed.get(0)).get(0).disabled = anim.animation === 'none';\n                            $( '.mw-range', speed.get(0) ).slider( anim.animation === 'none' ? \"disable\" : \"enable\" );\n\n                            return box\n                        },\n                        add: function () {\n                            var el = document.querySelector('#animations');\n                            var anim = {\n                                selector: mw.tools.generateSelectorForNode(ActiveNode),\n                                animation: 'none',\n                                speed: 1,\n                                when: 'onAppear',\n                                id: mw.id('animation')\n                            }\n                            animationApi.add(ActiveNode, anim);\n                            el.appendChild(animationGUI.renderSingle(anim).get(0));\n                        },\n                        set: function () {\n                            var el = document.querySelector('#animations');\n                            while (el.firstChild) {\n                                el.removeChild(el.firstChild);\n                            }\n                            /* Add blank animation to each */\n                            if(!ActiveNode.$$mwAnimations) {\n\n                                 animationApi.add(ActiveNode, {\n                                     selector: mw.tools.generateSelectorForNode(ActiveNode),\n                                     animation: 'none',\n                                     speed: 1,\n                                     when: 'onAppear',\n                                     id: mw.id('animation')\n                                 });\n                            }\n\n                            if(ActiveNode && ActiveNode.$$mwAnimations) {\n                                ActiveNode.$$mwAnimations.forEach(function (anim){\n                                    el.appendChild(animationGUI.renderSingle(anim).get(0));\n                                });\n                            }\n\n                        }\n                    };\n\n                     window.animationGUI = animationGUI;\n\n                })();\n            </script>\n\n            <div class=\"mw-ui-box-header mw-accordion-title\">\n            <img class=\"rte_css_editor_svg svg\" width=\"20px\" src=\"<?php print mw_includes_url(); ?>img/animations.svg\"><?php _e(\"Animations\"); ?></div>\n            <div class=\"mw-accordion-content mw-ui-box-content\">\n                <div class=\"mw-ui-field-holder\">\n                    <label class=\"mw-ui-label\"><?php _e(\"Animations\"); ?></label>\n\n\n                    <div class=\"w100\" id=\"animations\">\n\n                    </div>\n                </div>\n\n            </div>\n\n        </mw-accordion-item>\n</div>\n\n<div class=\"mw-css-editor\">\n\n</div>\n</div>\n"], "filenames": ["userfiles/modules/microweber/api/libs/cssjson/cssjson.js", "userfiles/modules/microweber/api/stylesheet.editor.js", "userfiles/modules/microweber/toolbar/editor_tools/rte_css_editor/index.php"], "buggy_code_start_loc": [183, 44, 399], "buggy_code_end_loc": [204, 68, 400], "fixing_code_start_loc": [183, 45, 399], "fixing_code_end_loc": [205, 92, 407], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Reflected in GitHub repository microweber/microweber prior to 1.2.17.", "other": {"cve": {"id": "CVE-2022-2130", "sourceIdentifier": "security@huntr.dev", "published": "2022-06-20T09:15:08.067", "lastModified": "2022-06-28T16:31:28.690", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Reflected in GitHub repository microweber/microweber prior to 1.2.17."}, {"lang": "es", "value": "Una vulnerabilidad de tipo Cross-site Scripting (XSS) - Reflejado en el repositorio de GitHub microweber/microweber versiones anteriores a 1.2.17"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 2.5}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:microweber:microweber:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.2.17", "matchCriteriaId": "4820BBEC-8C87-4DC2-AAE3-CF449C3DA0C1"}]}]}], "references": [{"url": "https://github.com/microweber/microweber/commit/dbd37dda91911360db23269897c737e0abae2c24", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/0142970a-5cb8-4dba-8bbc-4fa2f3bee65c", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/microweber/microweber/commit/dbd37dda91911360db23269897c737e0abae2c24"}}