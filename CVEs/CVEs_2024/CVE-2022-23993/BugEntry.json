{"buggy_code": ["<?php\n/*\n * pkg.php\n *\n * part of pfSense (https://www.pfsense.org)\n * Copyright (c) 2004-2013 BSD Perimeter\n * Copyright (c) 2013-2016 Electric Sheep Fencing\n * Copyright (c) 2014-2022 Rubicon Communications, LLC (Netgate)\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n##|+PRIV\n##|*IDENT=page-package-settings\n##|*NAME=Package: Settings\n##|*DESCR=Allow access to the 'Package: Settings' page.\n##|*MATCH=pkg.php*\n##|-PRIV\n\nrequire_once(\"guiconfig.inc\");\nrequire_once(\"pkg-utils.inc\");\n\nfunction domTT_title($title_msg) {\n\tprint \"onmouseout=\\\"this.style.color = ''; domTT_mouseout(this, event);\\\" onmouseover=\\\"domTT_activate(this, event, 'content', '\".gettext($title_msg).\"', 'trail', true, 'delay', 0, 'fade', 'both', 'fadeMax', 93, 'styleClass', 'niceTitle');\\\"\";\n}\n\n$xml = $_REQUEST['xml'];\n\nif ($xml == \"\") {\n\t$pgtitle = array(gettext(\"Package\"), gettext(\"Editor\"));\n\t$pglinks = array(\"\", \"@self\");\n\tinclude(\"head.inc\");\n\tprint_info_box(gettext(\"No valid package defined.\"), 'danger', false);\n\tinclude(\"foot.inc\");\n\texit;\n} else {\n\t$pkg_xml_prefix = \"/usr/local/pkg/\";\n\t$pkg_full_path = \"{$pkg_xml_prefix}/{$xml}\";\n\t$pkg_realpath = realpath($pkg_full_path);\n\tif (empty($pkg_realpath)) {\n\t\t$path_error = sprintf(gettext(\"Package path %s not found.\"), htmlspecialchars($pkg_full_path));\n\t} else if (substr_compare($pkg_realpath, $pkg_xml_prefix, 0, strlen($pkg_xml_prefix))) {\n\t\t$path_error = sprintf(gettext(\"Invalid path %s specified.\"), htmlspecialchars($pkg_full_path));\n\t}\n\n\tif (!empty($path_error)) {\n\t\tinclude(\"head.inc\");\n\t\tprint_info_box($path_error . \"<br />\" . gettext(\"Try reinstalling the package.\"), 'danger', false);\n\t\tinclude(\"foot.inc\");\n\t\tdie;\n\t}\n\n\tif (file_exists($pkg_full_path)) {\n\t\t$pkg = parse_xml_config_pkg($pkg_full_path, \"packagegui\");\n\t} else {\n\t\tinclude(\"head.inc\");\n\t\tprint_info_box(sprintf(gettext(\"File not found %s.\"), htmlspecialchars($xml)), 'danger', false);\n\t\tinclude(\"foot.inc\");\n\t\texit;\n\t}\n}\n\nif ($pkg['donotsave'] != \"\") {\n\theader(\"Location: pkg_edit.php?xml=\" . $xml);\n\texit;\n}\n\nif ($pkg['include_file'] != \"\") {\n\trequire_once($pkg['include_file']);\n}\n\nif ($_REQUEST['startdisplayingat']) {\n\t$startdisplayingat = $_REQUEST['startdisplayingat'];\n}\n\nif ($_REQUEST['display_maximum_rows']) {\n\tif ($_REQUEST['display_maximum_rows']) {\n\t\t$display_maximum_rows = $_REQUEST['display_maximum_rows'];\n\t}\n}\n\n$evaledvar = $config['installedpackages'][xml_safe_fieldname($pkg['name'])]['config'];\n\nif ($_REQUEST['act'] == \"update\") {\n\n\tif (is_array($config['installedpackages'][$pkg['name']]) && $pkg['name'] != \"\" && $_REQUEST['ids'] !=\"\") {\n\t\t// get current values\n\t\t$current_values=$config['installedpackages'][$pkg['name']]['config'];\n\t\t// get updated ids\n\t\tparse_str($_REQUEST['ids'], $update_list);\n\t\t// sort ids to know what to change\n\t\t// useful to do not lose data when using sorting and paging\n\t\t$sort_list=$update_list['ids'];\n\t\tsort($sort_list);\n\t\t// apply updates\n\t\tforeach ($update_list['ids'] as $key=> $value) {\n\t\t\t$config['installedpackages'][$pkg['name']]['config'][$sort_list[$key]]=$current_values[$update_list['ids'][$key]];\n\t\t}\n\t\t// save current config\n\t\twrite_config(gettext(\"Package configuration changes saved from package settings page.\"));\n\t\t// sync package\n\t\teval (\"{$pkg['custom_php_resync_config_command']}\");\n\t}\n\t// function called via jquery, no need to continue after save changes.\n\texit;\n}\nif ($_REQUEST['act'] == \"del\") {\n\t// loop through our fieldnames and automatically setup the fieldnames\n\t// in the environment.\tie: a fieldname of username with a value of\n\t// testuser would automatically eval $username = \"testuser\";\n\tforeach ($evaledvar as $ip) {\n\t\tif ($pkg['adddeleteeditpagefields']['columnitem']) {\n\t\t\tforeach ($pkg['adddeleteeditpagefields']['columnitem'] as $column) {\n\t\t\t\t${xml_safe_fieldname($column['fielddescr'])} = $ip[xml_safe_fieldname($column['fieldname'])];\n\t\t\t}\n\t\t}\n\t}\n\n\tinit_config_arr(array('installedpackages', xml_safe_fieldname($pkg['name']), 'config'));\n\t$a_pkg = &$config['installedpackages'][xml_safe_fieldname($pkg['name'])]['config'];\n\n\tif ($a_pkg[$_REQUEST['id']]) {\n\t\tunset($a_pkg[$_REQUEST['id']]);\n\t\twrite_config(gettext(\"Package configuration item deleted from package settings page.\"));\n\t\tif ($pkg['custom_delete_php_command'] != \"\") {\n\t\t\tif ($pkg['custom_php_command_before_form'] != \"\") {\n\t\t\t\teval($pkg['custom_php_command_before_form']);\n\t\t\t}\n\t\t\teval($pkg['custom_delete_php_command']);\n\t\t}\n\t\theader(\"Location:  pkg.php?xml=\" . $xml);\n\t\texit;\n\t}\n}\n\nob_start();\n\n$iflist = get_configured_interface_with_descr(true);\n$evaledvar = $config['installedpackages'][xml_safe_fieldname($pkg['name'])]['config'];\n\nif ($pkg['custom_php_global_functions'] != \"\") {\n\teval($pkg['custom_php_global_functions']);\n}\n\nif ($pkg['custom_php_command_before_form'] != \"\") {\n\teval($pkg['custom_php_command_before_form']);\n}\n\n// Breadcrumb\nif ($pkg['title'] != \"\") {\n\t/*if (!$only_edit) {\t\t\t\t\t\t// Is any package still making use of this?? Is this something that is still wanted, considering the breadcrumb policy https://redmine.pfsense.org/issues/5527\n \t\t$pkg['title'] = $pkg['title'] . '/Edit';\t\t// If this needs to live on, then it has to be moved to run AFTER \"foreach ($pkg['tabs']['tab'] as $tab)\"-loop. This due to $pgtitle[] = $tab['text'];\n\t}*/\n\tif (strpos($pkg['title'], '/')) {\n\t\t$title = explode('/', $pkg['title']);\n\n\t\tforeach ($title as $subtitle) {\n\t\t\t$pgtitle[] = gettext($subtitle);\n\t\t\t$pglinks[] = \"@self\";\n\t\t}\n\t} else {\n\t\t$pgtitle = array(gettext(\"Package\"), gettext($pkg['title']));\n\t\t$pglinks = array(\"\", \"@self\");\n\t}\n} else {\n\t$pgtitle = array(gettext(\"Package\"), gettext(\"Editor\"));\n\t$pglinks = array(\"\", \"@self\");\n}\n\nif ($pkg['tabs'] != \"\") {\n\t$tab_array = array();\n\tforeach ($pkg['tabs']['tab'] as $tab) {\n\t\tif ($tab['tab_level']) {\n\t\t\t$tab_level = $tab['tab_level'];\n\t\t} else {\n\t\t\t$tab_level = 1;\n\t\t}\n\t\tif (isset($tab['active'])) {\n\t\t\t$active = true;\n\t\t\t$pgtitle[] = $tab['text'];\n\t\t\t$pglinks[] = \"@self\";\n\t\t} else {\n\t\t\t$active = false;\n\t\t}\n\t\t$urltmp = \"\";\n\t\tif ($tab['url'] != \"\") {\n\t\t\t$urltmp = $tab['url'];\n\t\t}\n\t\tif ($tab['xml'] != \"\") {\n\t\t\t$urltmp = \"pkg_edit.php?xml=\" . $tab['xml'];\n\t\t}\n\n\t\t$addresswithport = getenv(\"HTTP_HOST\");\n\t\t$colonpos = strpos($addresswithport, \":\");\n\t\tif ($colonpos !== False) {\n\t\t\t//my url is actually just the IP address of the pfsense box\n\t\t\t$myurl = substr($addresswithport, 0, $colonpos);\n\t\t} else {\n\t\t\t$myurl = $addresswithport;\n\t\t}\n\t\t// eval url so that above $myurl item can be processed if need be.\n\t\t$url = str_replace('$myurl', $myurl, $urltmp);\n\n\t\t$tab_array[$tab_level][] = array(\n\t\t\t$tab['text'],\n\t\t\t$active,\n\t\t\t$url\n\t\t);\n\t}\n\n\tksort($tab_array);\n}\n\nif (!empty($pkg['tabs'])) {\n\t$shortcut_section = $pkg['shortcut_section'];\n}\n\ninclude(\"head.inc\");\nif (isset($tab_array)) {\n\tforeach ($tab_array as $tabid => $tab) {\n\t\tdisplay_top_tabs($tab);\n\t}\n}\n\n?>\n\n<script type=\"text/javascript\">\n//<![CDATA[\nevents.push(function() {\n\n\tfunction setFilter(filtertext) {\n\t\t$('#pkg_filter').val(filtertext);\n\t\tdocument.pkgform.submit();\n\t}\n\n<?php\n\tif ($pkg['adddeleteeditpagefields']['movable']) {\n?>\n\t\t$('#mainarea table tbody').sortable({\n\t\titems: 'tr.sortable',\n\t\t\tcursor: 'move',\n\t\t\tdistance: 10,\n\t\t\topacity: 0.8,\n\t\t\thelper: function(e, ui) {\n\t\t\t\tui.children().each(function() {\n\t\t\t\t\t$(this).width($(this).width());\n\t\t\t\t});\n\t\t\treturn ui;\n\t\t\t},\n\t\t});\n<?php\n\t}\n?>\n});\n\nfunction save_changes_to_xml(xml) {\n\tvar ids = $('#mainarea table tbody').sortable('serialize', {key:\"ids[]\"});\n\tvar strloading=\"<?=gettext('Saving changes...')?>\";\n\tif (confirm(\"<?=gettext(\"Confirmation Required to save changes.\")?>\")) {\n\t\t$.ajax({\n\t\t\ttype: 'get',\n\t\t\tcache: false,\n\t\t\turl: \"<?=$_SERVER['SCRIPT_NAME']?>\",\n\t\t\tdata: {xml:'<?=$xml?>', act:'update', ids: ids},\n\t\t\tbeforeSend: function() {\n\t\t\t\t$('#savemsg').empty().html(strloading);\n\t\t\t},\n\t\t\terror: function(data) {\n\t\t\t\t$('#savemsg').empty().html('Error:' + data);\n\t\t\t},\n\t\t\tsuccess: function(data) {\n\t\t\t\t$('#savemsg').empty().html(data);\n\t\t\t}\n\t\t});\n\t}\n}\n\n//]]>\n</script>\n\n<?php\nif ($_REQUEST['savemsg'] != \"\") {\n\t$savemsg = htmlspecialchars($_REQUEST['savemsg']);\n}\n\nif ($savemsg) {\n\tprint_info_box($savemsg, 'success');\n}\n?>\n\n<form action=\"pkg.php\" name=\"pkgform\" method=\"get\">\n\t<input type='hidden' name='xml' value='<?=$_REQUEST['xml']?>' />\n\t\t<div id=\"mainarea\" class=\"panel panel-default\">\n\t\t\t<table id=\"mainarea\" class=\"table table-striped table-hover table-condensed\">\n\t\t\t\t<thead>\n<?php\n\t/* Handle filtering bar A-Z */\n\t$include_filtering_inputbox = false;\n\t$colspan = 0;\n\tif ($pkg['adddeleteeditpagefields']['columnitem'] != \"\") {\n\t\tforeach ($pkg['adddeleteeditpagefields']['columnitem'] as $column) {\n\t\t\t$colspan++;\n\t\t}\n\t}\n\tif ($pkg['fields']['field']) {\n\t\t// First find the sorting type field if it exists\n\t\tforeach ($pkg['fields']['field'] as $field) {\n\t\t\tif ($field['type'] == \"sorting\") {\n\t\t\t\tif (isset($field['include_filtering_inputbox'])) {\n\t\t\t\t\t$include_filtering_inputbox = true;\n\t\t\t\t}\n\t\t\t\tif ($display_maximum_rows < 1) {\n\t\t\t\t\tif ($field['display_maximum_rows']) {\n\t\t\t\t\t\t$display_maximum_rows = $field['display_maximum_rows'];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\techo \"<tr><td colspan='$colspan' class='text-center'>\";\n\t\t\t\techo gettext(\"Filter by: \");\n\t\t\t\t$isfirst = true;\n\t\t\t\tfor ($char = 65; $char < 91; $char++) {\n\t\t\t\t\tif (!$isfirst) {\n\t\t\t\t\t\techo \" | \";\n\t\t\t\t\t}\n\t\t\t\t\techo \"<a href=\\\"#\\\" onclick=\\\"setFilter('\" . chr($char) . \"');\\\">\" . chr($char) . \"</a>\";\n\t\t\t\t\t$isfirst = false;\n\t\t\t\t}\n\t\t\t\techo \"</td></tr>\";\n\t\t\t\techo \"<tr><td colspan='$colspan' class='text-center'>\";\n\t\t\t\tif ($field['sortablefields']) {\n\t\t\t\t\techo gettext(\"Filter field: \") . \"<select name='pkg_filter_type'>\";\n\t\t\t\t\tforeach ($field['sortablefields']['item'] as $si) {\n\t\t\t\t\t\tif ($si['name'] == $_REQUEST['pkg_filter_type']) {\n\t\t\t\t\t\t\t$SELECTED = \"selected\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$SELECTED = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\techo \"<option value='{$si['name']}' {$SELECTED}>{$si['name']}</option>\";\n\t\t\t\t\t}\n\t\t\t\t\techo \"</select>\";\n\t\t\t\t}\n\t\t\t\tif ($include_filtering_inputbox) {\n\t\t\t\t\techo '&nbsp;&nbsp;' . gettext(\"Filter text: \") . '<input id=\"pkg_filter\" name=\"pkg_filter\" value=\"' . htmlspecialchars($_REQUEST['pkg_filter']) . '\" />';\n\t\t\t\t\techo '&nbsp;<button type=\"submit\" value=\"Filter\" class=\"btn btn-primary btn-xs\">';\n\t\t\t\t\techo '<i class=\"fa fa-filter icon-embed-btn\"></i>';\n\t\t\t\t\techo gettext(\"Filter\");\n\t\t\t\t\techo \"</button>\";\n\t\t\t\t}\n\t\t\t\techo \"</td></tr><tr><td><font size='-3'>&nbsp;</font></td></tr>\";\n\t\t\t}\n\t\t}\n\t}\n?>\n\t\t\t\t<tr>\n\n<?php\n\tif ($display_maximum_rows) {\n\t\t$totalpages = ceil(round((count($evaledvar) / $display_maximum_rows), 9));\n\t\t$page = 1;\n\t\t$tmpcount = 0;\n\t\t$tmppp = 0;\n\t\tif (is_array($evaledvar)) {\n\t\t\tforeach ($evaledvar as $ipa) {\n\t\t\t\tif ($tmpcount == $display_maximum_rows) {\n\t\t\t\t\t$page++;\n\t\t\t\t\t$tmpcount = 0;\n\t\t\t\t}\n\t\t\t\tif ($tmppp == $startdisplayingat) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$tmpcount++;\n\t\t\t\t$tmppp++;\n\t\t\t}\n\t\t}\n\t\techo \"<tr><th colspan='\" . count($pkg['adddeleteeditpagefields']['columnitem']) . \"'>\";\n\t\techo \"<table width='100%' summary=''>\";\n\t\techo \"<tr>\";\n\t\techo \"<td class='text-left'>\" . sprintf(gettext('Displaying page %1$s of %2$s'), $page, $totalpages) . \"</b></td>\";\n\t\techo \"<td class='text-right'>\" . gettext(\"Rows per page: \") . \"<select onchange='document.pkgform.submit();' name='display_maximum_rows'>\";\n\t\tfor ($x = 0; $x < 250; $x++) {\n\t\t\tif ($x == $display_maximum_rows) {\n\t\t\t\t$SELECTED = \"selected\";\n\t\t\t} else {\n\t\t\t\t$SELECTED = \"\";\n\t\t\t}\n\t\t\techo \"<option value='$x' $SELECTED>$x</option>\\n\";\n\t\t\t$x = $x + 4;\n\t\t}\n\t\techo \"</select></td></tr>\";\n\t\techo \"</table>\";\n\t\techo \"</th></tr>\";\n\t}\n\n\t$cols = 0;\n\tif ($pkg['adddeleteeditpagefields']['columnitem'] != \"\") {\n\t\tforeach ($pkg['adddeleteeditpagefields']['columnitem'] as $column) {\n\t\t\techo \"<th class=\\\"listhdrr\\\">\" . $column['fielddescr'] . \"</th>\";\n\t\t\t$cols++;\n\t\t}\n\t}\n?>\n\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n<?php\n\t$i = 0;\n\t$pagination_counter = 0;\n\tif ($evaledvar && is_array($evaledvar)) {\n\t\tforeach ($evaledvar as $ip) {\n\t\t\tif ($startdisplayingat) {\n\t\t\t\tif ($i < $startdisplayingat) {\n\t\t\t\t\t$i++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($_REQUEST['pkg_filter']) {\n\t\t\t\t// Handle filtered items\n\t\t\t\tif ($pkg['fields']['field'] && !$filter_regex) {\n\t\t\t\t\t// First find the sorting type field if it exists\n\t\t\t\t\tforeach ($pkg['fields']['field'] as $field) {\n\t\t\t\t\t\tif ($field['type'] == \"sorting\") {\n\t\t\t\t\t\t\tif ($field['sortablefields']['item']) {\n\t\t\t\t\t\t\t\tforeach ($field['sortablefields']['item'] as $sf) {\n\t\t\t\t\t\t\t\t\tif ($sf['name'] == $_REQUEST['pkg_filter_type']) {\n\t\t\t\t\t\t\t\t\t\t$filter_fieldname = $sf['fieldname'];\n\t\t\t\t\t\t\t\t\t\t#Use a default regex on sortable fields when none is declared\n\t\t\t\t\t\t\t\t\t\tif ($sf['regex']) {\n\t\t\t\t\t\t\t\t\t\t\t$filter_regex = str_replace(\"%FILTERTEXT%\", $_REQUEST['pkg_filter'], trim($sf['regex']));\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t$filter_regex = \"/{$_REQUEST['pkg_filter']}/i\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Do we have something to filter on?\n\t\t\t\tunset($filter_matches);\n\t\t\t\tif ($pkg['adddeleteeditpagefields']['columnitem'] != \"\") {\n\t\t\t\t\tforeach ($pkg['adddeleteeditpagefields']['columnitem'] as $column) {\n\t\t\t\t\t\t$fieldname = $ip[xml_safe_fieldname($column['fieldname'])];\n\t\t\t\t\t\tif ($column['fieldname'] == $filter_fieldname) {\n\t\t\t\t\t\t\tif ($filter_regex) {\n\t\t\t\t\t\t\t\t//echo \"$filter_regex - $fieldname<p/>\";\n\t\t\t\t\t\t\t\tpreg_match($filter_regex, $fieldname, $filter_matches);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!$filter_matches) {\n\t\t\t\t\t$i++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($pkg['adddeleteeditpagefields']['movable']) {\n\t\t\t\techo \"<tr style=\\\"vertical-align: top\\\" class=\\\"sortable\\\" id=\\\"id_{$i}\\\">\\n\";\n\t\t\t} else {\n\t\t\t\techo \"<tr style=\\\"vertical-align: top\\\">\\n\";\n\t\t\t}\n\t\t\tif ($pkg['adddeleteeditpagefields']['columnitem'] != \"\") {\n\t\t\t\tforeach ($pkg['adddeleteeditpagefields']['columnitem'] as $column) {\n\t\t\t\t\tif ($column['fieldname'] == \"description\") {\n\t\t\t\t\t\t$class = \"listbg\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$class = \"listlr\";\n\t\t\t\t\t}\n?>\n\t\t\t\t\t<td class=\"<?=$class?>\" ondblclick=\"document.location='pkg_edit.php?xml=<?=$xml?>&amp;act=edit&amp;id=<?=$i?>';\">\n<?php\n\t\t\t\t\t$fieldname = $ip[xml_safe_fieldname($column['fieldname'])];\n\t\t\t\t\t#Check if columnitem has a type field declared\n\t\t\t\t\tif ($column['type'] == \"checkbox\") {\n\t\t\t\t\t\tif ($fieldname == \"\") {\n\t\t\t\t\t\t\techo gettext(\"No\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\techo gettext(\"Yes\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ($column['type'] == \"interface\") {\n\t\t\t\t\t\techo $column['prefix'] . $iflist[$fieldname] . $column['suffix'];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$display_text = \"\";\n\t\t\t\t\t\t#Check if columnitem has an encoding field declared\n\t\t\t\t\t\tif ($column['encoding'] == \"base64\") {\n\t\t\t\t\t\t\t$display_text = $column['prefix'] . base64_decode($fieldname) . $column['suffix'];\n\t\t\t\t\t\t#Check if there is a custom info to show when $fieldname is not empty\n\t\t\t\t\t\t} else if ($column['listmodeon'] && $fieldname != \"\") {\n\t\t\t\t\t\t\t$display_text = $column['prefix'] . gettext($column['listmodeon']). $column['suffix'];\n\t\t\t\t\t\t#Check if there is a custom info to show when $fieldname is empty\n\t\t\t\t\t\t} else if ($column['listmodeoff'] && $fieldname == \"\") {\n\t\t\t\t\t\t\t$display_text = $column['prefix'] .gettext($column['listmodeoff']). $column['suffix'];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$display_text = $column['prefix'] . $fieldname .\" \". $column['suffix'];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isset($column['allow_html'])) {\n\t\t\t\t\t\t\t$display_text = htmlspecialchars($display_text);\n\t\t\t\t\t\t}\n\t\t\t\t\t\techo $display_text;\n\t\t\t\t\t}\n?>\n\t\t\t\t\t</td>\n<?php\n\t\t\t\t} // foreach columnitem\n\t\t\t} // if columnitem\n?>\n\t\t\t\t\t<td style=\"vertical-align: middle\" class=\"list text-nowrap\">\n\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"1\" summary=\"icons\">\n\t\t\t\t\t\t\t<tr>\n<?php\n\t\t\t#Show custom description to edit button if defined\n\t\t\t$edit_msg=($pkg['adddeleteeditpagefields']['edittext']?$pkg['adddeleteeditpagefields']['edittext']:gettext(\"Edit this item\"));\n?>\n\t\t\t\t\t\t\t\t<td><a class=\"fa fa-pencil\" href=\"pkg_edit.php?xml=<?=$xml?>&amp;act=edit&amp;id=<?=$i?>\" title=\"<?=$edit_msg?>\"></a></td>\n<?php\n\t\t\t#Show custom description to delete button if defined\n\t\t\t$delete_msg=($pkg['adddeleteeditpagefields']['deletetext']?$pkg['adddeleteeditpagefields']['deletetext']:gettext(\"Delete this item\"));\n?>\n\t\t\t\t\t\t\t\t<td>&nbsp;<a class=\"fa fa-trash\" href=\"pkg.php?xml=<?=$xml?>&amp;act=del&amp;id=<?=$i?>\" title=\"<?=$delete_msg?>\"></a></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</td>\n<?php\n\t\t\techo \"</tr>\\n\"; // Pairs with an echo tr some way above\n\t\t\t// Handle pagination and display_maximum_rows\n\t\t\tif ($display_maximum_rows) {\n\t\t\t\tif ($pagination_counter == ($display_maximum_rows-1) or\n\t\t\t\t\t$i == (count($evaledvar)-1)) {\n\t\t\t\t\t$colcount = count($pkg['adddeleteeditpagefields']['columnitem']);\n\t\t\t\t\t$final_footer = \"\";\n\t\t\t\t\t$final_footer .= \"<tr><td colspan='$colcount'>\";\n\t\t\t\t\t$final_footer .= \"<table width='100%' summary=''><tr>\";\n\t\t\t\t\t$final_footer .= \"<td class='text-left'>\";\n\t\t\t\t\t$startingat = $startdisplayingat - $display_maximum_rows;\n\t\t\t\t\tif ($startingat > -1) {\n\t\t\t\t\t\t$final_footer .= \"<a href='pkg.php?xml=\" . $_REQUEST['xml'] . \"&amp;startdisplayingat={$startingat}&amp;display_maximum_rows={$display_maximum_rows}'>\";\n\t\t\t\t\t} else if ($startdisplayingat > 1) {\n\t\t\t\t\t\t$final_footer .= \"<a href='pkg.php?xml=\" . $_REQUEST['xml'] . \"&amp;startdisplayingat=0&amp;display_maximum_rows={$display_maximum_rows}'>\";\n\t\t\t\t\t}\n\t\t\t\t\t$final_footer .= \"<font size='2'><< \" . gettext(\"Previous page\") . \"</font></a>\";\n\t\t\t\t\tif ($tmppp + $display_maximum_rows > count($evaledvar)) {\n\t\t\t\t\t\t$endingrecord = count($evaledvar);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$endingrecord = $tmppp + $display_maximum_rows;\n\t\t\t\t\t}\n\t\t\t\t\t$final_footer .= \"</td><td class='text-center'>\";\n\t\t\t\t\t$tmppp++;\n\t\t\t\t\t$final_footer .= \"<font size='2'>Displaying {$tmppp} - {$endingrecord} / \" . count($evaledvar) . \" records\";\n\t\t\t\t\t$final_footer .= \"</font></td><td class='text-right'>&nbsp;\";\n\t\t\t\t\tif (($i+1) < count($evaledvar)) {\n\t\t\t\t\t\t$final_footer .= \"<a href='pkg.php?xml=\" . $_REQUEST['xml'] . \"&amp;startdisplayingat=\" . ($startdisplayingat + $display_maximum_rows) . \"&amp;display_maximum_rows={$display_maximum_rows}'>\";\n\t\t\t\t\t}\n\t\t\t\t\t$final_footer .= \"<font size='2'>\" . gettext(\"Next page\") . \" >></font></a>\";\n\t\t\t\t\t$final_footer .= \"</td></tr></table></td></tr>\";\n\t\t\t\t\t$i = count($evaledvar);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$i++;\n\t\t\t$pagination_counter++;\n\t\t} // foreach evaledvar\n\t} // if evaledvar\n?>\n\t\t\t\t<tr>\n\t\t\t\t\t<td colspan=\"<?=$cols?>\"></td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"1\" summary=\"icons\">\n\t\t\t\t\t\t\t<tr>\n<?php\n\t#Show custom description to add button if defined\n\t$add_msg=($pkg['adddeleteeditpagefields']['addtext']?$pkg['adddeleteeditpagefields']['addtext']:gettext(\"Add a new item\"));\n?>\n\t\t\t\t\t\t\t\t<td><a href=\"pkg_edit.php?xml=<?=$xml?>&amp;id=<?=$i?>\" class=\"btn btn-sm btn-success\" title=\"<?=$add_msg?>\"><i class=\"fa fa-plus icon-embed-btn\"></i><?=gettext('Add')?></a></td>\n<?php\n\t#Show description button and info if defined\n\tif ($pkg['adddeleteeditpagefields']['description']) {\n?>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-info-circle\"><?=$pkg['adddeleteeditpagefields']['description']?></i>\n\t\t\t\t\t\t\t\t</td>\n<?php\n\t}\n?>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<?=$final_footer?>\n\t\t\t</table>\n\t\t\t</div>\n\t\t<button class=\"btn btn-primary\" type=\"button\" value=\"Save\" name=\"Submit\" onclick=\"save_changes_to_xml('<?=$xml?>')\"><i class=\"fa fa-save icon-embed-btn\"></i><?=gettext(\"Save\")?></button>\n\n</form>\n<?php\necho \"<!-- filter_fieldname: {$filter_fieldname} -->\";\necho \"<!-- filter_regex: {$filter_regex} -->\";\n\ninclude(\"foot.inc\"); ?>\n"], "fixing_code": ["<?php\n/*\n * pkg.php\n *\n * part of pfSense (https://www.pfsense.org)\n * Copyright (c) 2004-2013 BSD Perimeter\n * Copyright (c) 2013-2016 Electric Sheep Fencing\n * Copyright (c) 2014-2022 Rubicon Communications, LLC (Netgate)\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n##|+PRIV\n##|*IDENT=page-package-settings\n##|*NAME=Package: Settings\n##|*DESCR=Allow access to the 'Package: Settings' page.\n##|*MATCH=pkg.php*\n##|-PRIV\n\nrequire_once(\"guiconfig.inc\");\nrequire_once(\"pkg-utils.inc\");\n\nfunction domTT_title($title_msg) {\n\tprint \"onmouseout=\\\"this.style.color = ''; domTT_mouseout(this, event);\\\" onmouseover=\\\"domTT_activate(this, event, 'content', '\".gettext($title_msg).\"', 'trail', true, 'delay', 0, 'fade', 'both', 'fadeMax', 93, 'styleClass', 'niceTitle');\\\"\";\n}\n\n$xml = $_REQUEST['xml'];\n\nif ($xml == \"\") {\n\t$pgtitle = array(gettext(\"Package\"), gettext(\"Editor\"));\n\t$pglinks = array(\"\", \"@self\");\n\tinclude(\"head.inc\");\n\tprint_info_box(gettext(\"No valid package defined.\"), 'danger', false);\n\tinclude(\"foot.inc\");\n\texit;\n} else {\n\t$pkg_xml_prefix = \"/usr/local/pkg/\";\n\t$pkg_full_path = \"{$pkg_xml_prefix}/{$xml}\";\n\t$pkg_realpath = realpath($pkg_full_path);\n\tif (empty($pkg_realpath)) {\n\t\t$path_error = sprintf(gettext(\"Package path %s not found.\"), htmlspecialchars($pkg_full_path));\n\t} else if (substr_compare($pkg_realpath, $pkg_xml_prefix, 0, strlen($pkg_xml_prefix))) {\n\t\t$path_error = sprintf(gettext(\"Invalid path %s specified.\"), htmlspecialchars($pkg_full_path));\n\t}\n\n\tif (!empty($path_error)) {\n\t\tinclude(\"head.inc\");\n\t\tprint_info_box($path_error . \"<br />\" . gettext(\"Try reinstalling the package.\"), 'danger', false);\n\t\tinclude(\"foot.inc\");\n\t\tdie;\n\t}\n\n\tif (file_exists($pkg_full_path)) {\n\t\t$pkg = parse_xml_config_pkg($pkg_full_path, \"packagegui\");\n\t} else {\n\t\tinclude(\"head.inc\");\n\t\tprint_info_box(sprintf(gettext(\"File not found %s.\"), htmlspecialchars($xml)), 'danger', false);\n\t\tinclude(\"foot.inc\");\n\t\texit;\n\t}\n}\n\nif ($pkg['donotsave'] != \"\") {\n\theader(\"Location: pkg_edit.php?xml=\" . $xml);\n\texit;\n}\n\nif ($pkg['include_file'] != \"\") {\n\trequire_once($pkg['include_file']);\n}\n\nif ($_REQUEST['startdisplayingat']) {\n\t$startdisplayingat = $_REQUEST['startdisplayingat'];\n}\n\nif ($_REQUEST['display_maximum_rows']) {\n\tif ($_REQUEST['display_maximum_rows']) {\n\t\t$display_maximum_rows = $_REQUEST['display_maximum_rows'];\n\t}\n}\n\n$evaledvar = $config['installedpackages'][xml_safe_fieldname($pkg['name'])]['config'];\n\nif ($_REQUEST['act'] == \"update\") {\n\n\tif (is_array($config['installedpackages'][$pkg['name']]) && $pkg['name'] != \"\" && $_REQUEST['ids'] !=\"\") {\n\t\t// get current values\n\t\t$current_values=$config['installedpackages'][$pkg['name']]['config'];\n\t\t// get updated ids\n\t\tparse_str($_REQUEST['ids'], $update_list);\n\t\t// sort ids to know what to change\n\t\t// useful to do not lose data when using sorting and paging\n\t\t$sort_list=$update_list['ids'];\n\t\tsort($sort_list);\n\t\t// apply updates\n\t\tforeach ($update_list['ids'] as $key=> $value) {\n\t\t\t$config['installedpackages'][$pkg['name']]['config'][$sort_list[$key]]=$current_values[$update_list['ids'][$key]];\n\t\t}\n\t\t// save current config\n\t\twrite_config(gettext(\"Package configuration changes saved from package settings page.\"));\n\t\t// sync package\n\t\teval (\"{$pkg['custom_php_resync_config_command']}\");\n\t}\n\t// function called via jquery, no need to continue after save changes.\n\texit;\n}\nif ($_REQUEST['act'] == \"del\") {\n\t// loop through our fieldnames and automatically setup the fieldnames\n\t// in the environment.\tie: a fieldname of username with a value of\n\t// testuser would automatically eval $username = \"testuser\";\n\tforeach ($evaledvar as $ip) {\n\t\tif ($pkg['adddeleteeditpagefields']['columnitem']) {\n\t\t\tforeach ($pkg['adddeleteeditpagefields']['columnitem'] as $column) {\n\t\t\t\t${xml_safe_fieldname($column['fielddescr'])} = $ip[xml_safe_fieldname($column['fieldname'])];\n\t\t\t}\n\t\t}\n\t}\n\n\tinit_config_arr(array('installedpackages', xml_safe_fieldname($pkg['name']), 'config'));\n\t$a_pkg = &$config['installedpackages'][xml_safe_fieldname($pkg['name'])]['config'];\n\n\tif ($a_pkg[$_REQUEST['id']]) {\n\t\tunset($a_pkg[$_REQUEST['id']]);\n\t\twrite_config(gettext(\"Package configuration item deleted from package settings page.\"));\n\t\tif ($pkg['custom_delete_php_command'] != \"\") {\n\t\t\tif ($pkg['custom_php_command_before_form'] != \"\") {\n\t\t\t\teval($pkg['custom_php_command_before_form']);\n\t\t\t}\n\t\t\teval($pkg['custom_delete_php_command']);\n\t\t}\n\t\theader(\"Location:  pkg.php?xml=\" . $xml);\n\t\texit;\n\t}\n}\n\nob_start();\n\n$iflist = get_configured_interface_with_descr(true);\n$evaledvar = $config['installedpackages'][xml_safe_fieldname($pkg['name'])]['config'];\n\nif ($pkg['custom_php_global_functions'] != \"\") {\n\teval($pkg['custom_php_global_functions']);\n}\n\nif ($pkg['custom_php_command_before_form'] != \"\") {\n\teval($pkg['custom_php_command_before_form']);\n}\n\n// Breadcrumb\nif ($pkg['title'] != \"\") {\n\t/*if (!$only_edit) {\t\t\t\t\t\t// Is any package still making use of this?? Is this something that is still wanted, considering the breadcrumb policy https://redmine.pfsense.org/issues/5527\n \t\t$pkg['title'] = $pkg['title'] . '/Edit';\t\t// If this needs to live on, then it has to be moved to run AFTER \"foreach ($pkg['tabs']['tab'] as $tab)\"-loop. This due to $pgtitle[] = $tab['text'];\n\t}*/\n\tif (strpos($pkg['title'], '/')) {\n\t\t$title = explode('/', $pkg['title']);\n\n\t\tforeach ($title as $subtitle) {\n\t\t\t$pgtitle[] = gettext($subtitle);\n\t\t\t$pglinks[] = \"@self\";\n\t\t}\n\t} else {\n\t\t$pgtitle = array(gettext(\"Package\"), gettext($pkg['title']));\n\t\t$pglinks = array(\"\", \"@self\");\n\t}\n} else {\n\t$pgtitle = array(gettext(\"Package\"), gettext(\"Editor\"));\n\t$pglinks = array(\"\", \"@self\");\n}\n\nif ($pkg['tabs'] != \"\") {\n\t$tab_array = array();\n\tforeach ($pkg['tabs']['tab'] as $tab) {\n\t\tif ($tab['tab_level']) {\n\t\t\t$tab_level = $tab['tab_level'];\n\t\t} else {\n\t\t\t$tab_level = 1;\n\t\t}\n\t\tif (isset($tab['active'])) {\n\t\t\t$active = true;\n\t\t\t$pgtitle[] = $tab['text'];\n\t\t\t$pglinks[] = \"@self\";\n\t\t} else {\n\t\t\t$active = false;\n\t\t}\n\t\t$urltmp = \"\";\n\t\tif ($tab['url'] != \"\") {\n\t\t\t$urltmp = $tab['url'];\n\t\t}\n\t\tif ($tab['xml'] != \"\") {\n\t\t\t$urltmp = \"pkg_edit.php?xml=\" . $tab['xml'];\n\t\t}\n\n\t\t$addresswithport = getenv(\"HTTP_HOST\");\n\t\t$colonpos = strpos($addresswithport, \":\");\n\t\tif ($colonpos !== False) {\n\t\t\t//my url is actually just the IP address of the pfsense box\n\t\t\t$myurl = substr($addresswithport, 0, $colonpos);\n\t\t} else {\n\t\t\t$myurl = $addresswithport;\n\t\t}\n\t\t// eval url so that above $myurl item can be processed if need be.\n\t\t$url = str_replace('$myurl', $myurl, $urltmp);\n\n\t\t$tab_array[$tab_level][] = array(\n\t\t\t$tab['text'],\n\t\t\t$active,\n\t\t\t$url\n\t\t);\n\t}\n\n\tksort($tab_array);\n}\n\nif (!empty($pkg['tabs'])) {\n\t$shortcut_section = $pkg['shortcut_section'];\n}\n\ninclude(\"head.inc\");\nif (isset($tab_array)) {\n\tforeach ($tab_array as $tabid => $tab) {\n\t\tdisplay_top_tabs($tab);\n\t}\n}\n\n?>\n\n<script type=\"text/javascript\">\n//<![CDATA[\nevents.push(function() {\n\n\tfunction setFilter(filtertext) {\n\t\t$('#pkg_filter').val(filtertext);\n\t\tdocument.pkgform.submit();\n\t}\n\n<?php\n\tif ($pkg['adddeleteeditpagefields']['movable']) {\n?>\n\t\t$('#mainarea table tbody').sortable({\n\t\titems: 'tr.sortable',\n\t\t\tcursor: 'move',\n\t\t\tdistance: 10,\n\t\t\topacity: 0.8,\n\t\t\thelper: function(e, ui) {\n\t\t\t\tui.children().each(function() {\n\t\t\t\t\t$(this).width($(this).width());\n\t\t\t\t});\n\t\t\treturn ui;\n\t\t\t},\n\t\t});\n<?php\n\t}\n?>\n});\n\nfunction save_changes_to_xml(xml) {\n\tvar ids = $('#mainarea table tbody').sortable('serialize', {key:\"ids[]\"});\n\tvar strloading=\"<?=gettext('Saving changes...')?>\";\n\tif (confirm(\"<?=gettext(\"Confirmation Required to save changes.\")?>\")) {\n\t\t$.ajax({\n\t\t\ttype: 'get',\n\t\t\tcache: false,\n\t\t\turl: \"<?=$_SERVER['SCRIPT_NAME']?>\",\n\t\t\tdata: {xml:'<?=$xml?>', act:'update', ids: ids},\n\t\t\tbeforeSend: function() {\n\t\t\t\t$('#savemsg').empty().html(strloading);\n\t\t\t},\n\t\t\terror: function(data) {\n\t\t\t\t$('#savemsg').empty().html('Error:' + data);\n\t\t\t},\n\t\t\tsuccess: function(data) {\n\t\t\t\t$('#savemsg').empty().html(data);\n\t\t\t}\n\t\t});\n\t}\n}\n\n//]]>\n</script>\n\n<?php\nif ($_REQUEST['savemsg'] != \"\") {\n\t$savemsg = htmlspecialchars($_REQUEST['savemsg']);\n}\n\nif ($savemsg) {\n\tprint_info_box($savemsg, 'success');\n}\n?>\n\n<form action=\"pkg.php\" name=\"pkgform\" method=\"get\">\n\t<input type='hidden' name='xml' value='<?=$_REQUEST['xml']?>' />\n\t\t<div id=\"mainarea\" class=\"panel panel-default\">\n\t\t\t<table id=\"mainarea\" class=\"table table-striped table-hover table-condensed\">\n\t\t\t\t<thead>\n<?php\n\t/* Handle filtering bar A-Z */\n\t$include_filtering_inputbox = false;\n\t$colspan = 0;\n\tif ($pkg['adddeleteeditpagefields']['columnitem'] != \"\") {\n\t\tforeach ($pkg['adddeleteeditpagefields']['columnitem'] as $column) {\n\t\t\t$colspan++;\n\t\t}\n\t}\n\tif ($pkg['fields']['field']) {\n\t\t// First find the sorting type field if it exists\n\t\tforeach ($pkg['fields']['field'] as $field) {\n\t\t\tif ($field['type'] == \"sorting\") {\n\t\t\t\tif (isset($field['include_filtering_inputbox'])) {\n\t\t\t\t\t$include_filtering_inputbox = true;\n\t\t\t\t}\n\t\t\t\tif ($display_maximum_rows < 1) {\n\t\t\t\t\tif ($field['display_maximum_rows']) {\n\t\t\t\t\t\t$display_maximum_rows = $field['display_maximum_rows'];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\techo \"<tr><td colspan='$colspan' class='text-center'>\";\n\t\t\t\techo gettext(\"Filter by: \");\n\t\t\t\t$isfirst = true;\n\t\t\t\tfor ($char = 65; $char < 91; $char++) {\n\t\t\t\t\tif (!$isfirst) {\n\t\t\t\t\t\techo \" | \";\n\t\t\t\t\t}\n\t\t\t\t\techo \"<a href=\\\"#\\\" onclick=\\\"setFilter('\" . chr($char) . \"');\\\">\" . chr($char) . \"</a>\";\n\t\t\t\t\t$isfirst = false;\n\t\t\t\t}\n\t\t\t\techo \"</td></tr>\";\n\t\t\t\techo \"<tr><td colspan='$colspan' class='text-center'>\";\n\t\t\t\tif ($field['sortablefields']) {\n\t\t\t\t\techo gettext(\"Filter field: \") . \"<select name='pkg_filter_type'>\";\n\t\t\t\t\tforeach ($field['sortablefields']['item'] as $si) {\n\t\t\t\t\t\tif ($si['name'] == $_REQUEST['pkg_filter_type']) {\n\t\t\t\t\t\t\t$SELECTED = \"selected\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$SELECTED = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\techo \"<option value='{$si['name']}' {$SELECTED}>{$si['name']}</option>\";\n\t\t\t\t\t}\n\t\t\t\t\techo \"</select>\";\n\t\t\t\t}\n\t\t\t\tif ($include_filtering_inputbox) {\n\t\t\t\t\techo '&nbsp;&nbsp;' . gettext(\"Filter text: \") . '<input id=\"pkg_filter\" name=\"pkg_filter\" value=\"' . htmlspecialchars($_REQUEST['pkg_filter']) . '\" />';\n\t\t\t\t\techo '&nbsp;<button type=\"submit\" value=\"Filter\" class=\"btn btn-primary btn-xs\">';\n\t\t\t\t\techo '<i class=\"fa fa-filter icon-embed-btn\"></i>';\n\t\t\t\t\techo gettext(\"Filter\");\n\t\t\t\t\techo \"</button>\";\n\t\t\t\t}\n\t\t\t\techo \"</td></tr><tr><td><font size='-3'>&nbsp;</font></td></tr>\";\n\t\t\t}\n\t\t}\n\t}\n?>\n\t\t\t\t<tr>\n\n<?php\n\tif ($display_maximum_rows) {\n\t\t$totalpages = ceil(round((count($evaledvar) / $display_maximum_rows), 9));\n\t\t$page = 1;\n\t\t$tmpcount = 0;\n\t\t$tmppp = 0;\n\t\tif (is_array($evaledvar)) {\n\t\t\tforeach ($evaledvar as $ipa) {\n\t\t\t\tif ($tmpcount == $display_maximum_rows) {\n\t\t\t\t\t$page++;\n\t\t\t\t\t$tmpcount = 0;\n\t\t\t\t}\n\t\t\t\tif ($tmppp == $startdisplayingat) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$tmpcount++;\n\t\t\t\t$tmppp++;\n\t\t\t}\n\t\t}\n\t\techo \"<tr><th colspan='\" . count($pkg['adddeleteeditpagefields']['columnitem']) . \"'>\";\n\t\techo \"<table width='100%' summary=''>\";\n\t\techo \"<tr>\";\n\t\techo \"<td class='text-left'>\" . sprintf(gettext('Displaying page %1$s of %2$s'), $page, $totalpages) . \"</b></td>\";\n\t\techo \"<td class='text-right'>\" . gettext(\"Rows per page: \") . \"<select onchange='document.pkgform.submit();' name='display_maximum_rows'>\";\n\t\tfor ($x = 0; $x < 250; $x++) {\n\t\t\tif ($x == $display_maximum_rows) {\n\t\t\t\t$SELECTED = \"selected\";\n\t\t\t} else {\n\t\t\t\t$SELECTED = \"\";\n\t\t\t}\n\t\t\techo \"<option value='$x' $SELECTED>$x</option>\\n\";\n\t\t\t$x = $x + 4;\n\t\t}\n\t\techo \"</select></td></tr>\";\n\t\techo \"</table>\";\n\t\techo \"</th></tr>\";\n\t}\n\n\t$cols = 0;\n\tif ($pkg['adddeleteeditpagefields']['columnitem'] != \"\") {\n\t\tforeach ($pkg['adddeleteeditpagefields']['columnitem'] as $column) {\n\t\t\techo \"<th class=\\\"listhdrr\\\">\" . $column['fielddescr'] . \"</th>\";\n\t\t\t$cols++;\n\t\t}\n\t}\n?>\n\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n<?php\n\t$i = 0;\n\t$pagination_counter = 0;\n\tif ($evaledvar && is_array($evaledvar)) {\n\t\tforeach ($evaledvar as $ip) {\n\t\t\tif ($startdisplayingat) {\n\t\t\t\tif ($i < $startdisplayingat) {\n\t\t\t\t\t$i++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($_REQUEST['pkg_filter']) {\n\t\t\t\t// Handle filtered items\n\t\t\t\tif ($pkg['fields']['field'] && !$filter_regex) {\n\t\t\t\t\t// First find the sorting type field if it exists\n\t\t\t\t\tforeach ($pkg['fields']['field'] as $field) {\n\t\t\t\t\t\tif ($field['type'] == \"sorting\") {\n\t\t\t\t\t\t\tif ($field['sortablefields']['item']) {\n\t\t\t\t\t\t\t\tforeach ($field['sortablefields']['item'] as $sf) {\n\t\t\t\t\t\t\t\t\tif ($sf['name'] == $_REQUEST['pkg_filter_type']) {\n\t\t\t\t\t\t\t\t\t\t$filter_fieldname = $sf['fieldname'];\n\t\t\t\t\t\t\t\t\t\t#Use a default regex on sortable fields when none is declared\n\t\t\t\t\t\t\t\t\t\t$pkg_filter = cleanup_regex_pattern(htmlspecialchars(strip_tags($_REQUEST['pkg_filter'])));\n\t\t\t\t\t\t\t\t\t\tif ($sf['regex']) {\n\t\t\t\t\t\t\t\t\t\t\t$filter_regex = str_replace(\"%FILTERTEXT%\", $pkg_filter, trim($sf['regex']));\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t$filter_regex = \"/{$pkg_filter}/i\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Do we have something to filter on?\n\t\t\t\tunset($filter_matches);\n\t\t\t\tif ($pkg['adddeleteeditpagefields']['columnitem'] != \"\") {\n\t\t\t\t\tforeach ($pkg['adddeleteeditpagefields']['columnitem'] as $column) {\n\t\t\t\t\t\t$fieldname = $ip[xml_safe_fieldname($column['fieldname'])];\n\t\t\t\t\t\tif ($column['fieldname'] == $filter_fieldname) {\n\t\t\t\t\t\t\tif ($filter_regex) {\n\t\t\t\t\t\t\t\tpreg_match($filter_regex, $fieldname, $filter_matches);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!$filter_matches) {\n\t\t\t\t\t$i++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($pkg['adddeleteeditpagefields']['movable']) {\n\t\t\t\techo \"<tr style=\\\"vertical-align: top\\\" class=\\\"sortable\\\" id=\\\"id_{$i}\\\">\\n\";\n\t\t\t} else {\n\t\t\t\techo \"<tr style=\\\"vertical-align: top\\\">\\n\";\n\t\t\t}\n\t\t\tif ($pkg['adddeleteeditpagefields']['columnitem'] != \"\") {\n\t\t\t\tforeach ($pkg['adddeleteeditpagefields']['columnitem'] as $column) {\n\t\t\t\t\tif ($column['fieldname'] == \"description\") {\n\t\t\t\t\t\t$class = \"listbg\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$class = \"listlr\";\n\t\t\t\t\t}\n?>\n\t\t\t\t\t<td class=\"<?=$class?>\" ondblclick=\"document.location='pkg_edit.php?xml=<?=$xml?>&amp;act=edit&amp;id=<?=$i?>';\">\n<?php\n\t\t\t\t\t$fieldname = $ip[xml_safe_fieldname($column['fieldname'])];\n\t\t\t\t\t#Check if columnitem has a type field declared\n\t\t\t\t\tif ($column['type'] == \"checkbox\") {\n\t\t\t\t\t\tif ($fieldname == \"\") {\n\t\t\t\t\t\t\techo gettext(\"No\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\techo gettext(\"Yes\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ($column['type'] == \"interface\") {\n\t\t\t\t\t\techo $column['prefix'] . $iflist[$fieldname] . $column['suffix'];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$display_text = \"\";\n\t\t\t\t\t\t#Check if columnitem has an encoding field declared\n\t\t\t\t\t\tif ($column['encoding'] == \"base64\") {\n\t\t\t\t\t\t\t$display_text = $column['prefix'] . base64_decode($fieldname) . $column['suffix'];\n\t\t\t\t\t\t#Check if there is a custom info to show when $fieldname is not empty\n\t\t\t\t\t\t} else if ($column['listmodeon'] && $fieldname != \"\") {\n\t\t\t\t\t\t\t$display_text = $column['prefix'] . gettext($column['listmodeon']). $column['suffix'];\n\t\t\t\t\t\t#Check if there is a custom info to show when $fieldname is empty\n\t\t\t\t\t\t} else if ($column['listmodeoff'] && $fieldname == \"\") {\n\t\t\t\t\t\t\t$display_text = $column['prefix'] .gettext($column['listmodeoff']). $column['suffix'];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$display_text = $column['prefix'] . $fieldname .\" \". $column['suffix'];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isset($column['allow_html'])) {\n\t\t\t\t\t\t\t$display_text = htmlspecialchars($display_text);\n\t\t\t\t\t\t}\n\t\t\t\t\t\techo $display_text;\n\t\t\t\t\t}\n?>\n\t\t\t\t\t</td>\n<?php\n\t\t\t\t} // foreach columnitem\n\t\t\t} // if columnitem\n?>\n\t\t\t\t\t<td style=\"vertical-align: middle\" class=\"list text-nowrap\">\n\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"1\" summary=\"icons\">\n\t\t\t\t\t\t\t<tr>\n<?php\n\t\t\t#Show custom description to edit button if defined\n\t\t\t$edit_msg=($pkg['adddeleteeditpagefields']['edittext']?$pkg['adddeleteeditpagefields']['edittext']:gettext(\"Edit this item\"));\n?>\n\t\t\t\t\t\t\t\t<td><a class=\"fa fa-pencil\" href=\"pkg_edit.php?xml=<?=$xml?>&amp;act=edit&amp;id=<?=$i?>\" title=\"<?=$edit_msg?>\"></a></td>\n<?php\n\t\t\t#Show custom description to delete button if defined\n\t\t\t$delete_msg=($pkg['adddeleteeditpagefields']['deletetext']?$pkg['adddeleteeditpagefields']['deletetext']:gettext(\"Delete this item\"));\n?>\n\t\t\t\t\t\t\t\t<td>&nbsp;<a class=\"fa fa-trash\" href=\"pkg.php?xml=<?=$xml?>&amp;act=del&amp;id=<?=$i?>\" title=\"<?=$delete_msg?>\"></a></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</td>\n<?php\n\t\t\techo \"</tr>\\n\"; // Pairs with an echo tr some way above\n\t\t\t// Handle pagination and display_maximum_rows\n\t\t\tif ($display_maximum_rows) {\n\t\t\t\tif ($pagination_counter == ($display_maximum_rows-1) or\n\t\t\t\t\t$i == (count($evaledvar)-1)) {\n\t\t\t\t\t$colcount = count($pkg['adddeleteeditpagefields']['columnitem']);\n\t\t\t\t\t$final_footer = \"\";\n\t\t\t\t\t$final_footer .= \"<tr><td colspan='$colcount'>\";\n\t\t\t\t\t$final_footer .= \"<table width='100%' summary=''><tr>\";\n\t\t\t\t\t$final_footer .= \"<td class='text-left'>\";\n\t\t\t\t\t$startingat = $startdisplayingat - $display_maximum_rows;\n\t\t\t\t\tif ($startingat > -1) {\n\t\t\t\t\t\t$final_footer .= \"<a href='pkg.php?xml=\" . $_REQUEST['xml'] . \"&amp;startdisplayingat={$startingat}&amp;display_maximum_rows={$display_maximum_rows}'>\";\n\t\t\t\t\t} else if ($startdisplayingat > 1) {\n\t\t\t\t\t\t$final_footer .= \"<a href='pkg.php?xml=\" . $_REQUEST['xml'] . \"&amp;startdisplayingat=0&amp;display_maximum_rows={$display_maximum_rows}'>\";\n\t\t\t\t\t}\n\t\t\t\t\t$final_footer .= \"<font size='2'><< \" . gettext(\"Previous page\") . \"</font></a>\";\n\t\t\t\t\tif ($tmppp + $display_maximum_rows > count($evaledvar)) {\n\t\t\t\t\t\t$endingrecord = count($evaledvar);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$endingrecord = $tmppp + $display_maximum_rows;\n\t\t\t\t\t}\n\t\t\t\t\t$final_footer .= \"</td><td class='text-center'>\";\n\t\t\t\t\t$tmppp++;\n\t\t\t\t\t$final_footer .= \"<font size='2'>Displaying {$tmppp} - {$endingrecord} / \" . count($evaledvar) . \" records\";\n\t\t\t\t\t$final_footer .= \"</font></td><td class='text-right'>&nbsp;\";\n\t\t\t\t\tif (($i+1) < count($evaledvar)) {\n\t\t\t\t\t\t$final_footer .= \"<a href='pkg.php?xml=\" . $_REQUEST['xml'] . \"&amp;startdisplayingat=\" . ($startdisplayingat + $display_maximum_rows) . \"&amp;display_maximum_rows={$display_maximum_rows}'>\";\n\t\t\t\t\t}\n\t\t\t\t\t$final_footer .= \"<font size='2'>\" . gettext(\"Next page\") . \" >></font></a>\";\n\t\t\t\t\t$final_footer .= \"</td></tr></table></td></tr>\";\n\t\t\t\t\t$i = count($evaledvar);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$i++;\n\t\t\t$pagination_counter++;\n\t\t} // foreach evaledvar\n\t} // if evaledvar\n?>\n\t\t\t\t<tr>\n\t\t\t\t\t<td colspan=\"<?=$cols?>\"></td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"1\" summary=\"icons\">\n\t\t\t\t\t\t\t<tr>\n<?php\n\t#Show custom description to add button if defined\n\t$add_msg=($pkg['adddeleteeditpagefields']['addtext']?$pkg['adddeleteeditpagefields']['addtext']:gettext(\"Add a new item\"));\n?>\n\t\t\t\t\t\t\t\t<td><a href=\"pkg_edit.php?xml=<?=$xml?>&amp;id=<?=$i?>\" class=\"btn btn-sm btn-success\" title=\"<?=$add_msg?>\"><i class=\"fa fa-plus icon-embed-btn\"></i><?=gettext('Add')?></a></td>\n<?php\n\t#Show description button and info if defined\n\tif ($pkg['adddeleteeditpagefields']['description']) {\n?>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-info-circle\"><?=$pkg['adddeleteeditpagefields']['description']?></i>\n\t\t\t\t\t\t\t\t</td>\n<?php\n\t}\n?>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<?=$final_footer?>\n\t\t\t</table>\n\t\t\t</div>\n\t\t<button class=\"btn btn-primary\" type=\"button\" value=\"Save\" name=\"Submit\" onclick=\"save_changes_to_xml('<?=$xml?>')\"><i class=\"fa fa-save icon-embed-btn\"></i><?=gettext(\"Save\")?></button>\n\n</form>\n<?php\ninclude(\"foot.inc\"); ?>\n"], "filenames": ["src/usr/local/www/pkg.php"], "buggy_code_start_loc": [436], "buggy_code_end_loc": [609], "fixing_code_start_loc": [437], "fixing_code_end_loc": [605], "type": "CWE-79", "message": "/usr/local/www/pkg.php in pfSense CE before 2.6.0 and pfSense Plus before 22.01 uses $_REQUEST['pkg_filter'] in a PHP echo call, causing XSS.", "other": {"cve": {"id": "CVE-2022-23993", "sourceIdentifier": "cve@mitre.org", "published": "2022-01-26T19:15:08.570", "lastModified": "2022-04-29T19:32:26.793", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "/usr/local/www/pkg.php in pfSense CE before 2.6.0 and pfSense Plus before 22.01 uses $_REQUEST['pkg_filter'] in a PHP echo call, causing XSS."}, {"lang": "es", "value": "/usr/local/www/pkg.php en pfSense CE antes de 2.6.0 y pfSense Plus antes de 22.01 utiliza $_REQUEST['pkg_filter'] en una llamada de eco de PHP, lo que provoca XSS"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:pfsense:pfsense:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.6.0", "matchCriteriaId": "88FE560A-B7BB-4B25-96F1-FE7D0CD597C6"}, {"vulnerable": true, "criteria": "cpe:2.3:a:pfsense:pfsense_plus:*:*:*:*:*:*:*:*", "versionEndExcluding": "22.01", "matchCriteriaId": "6C0B7744-A7BA-410A-99BE-DEE372BB3C41"}]}]}], "references": [{"url": "https://docs.netgate.com/downloads/pfSense-SA-22_04.webgui.asc", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/pfsense/pfsense/commit/5d82cce0d615a76b738798577a28a15803e59aeb", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/pfsense/pfsense/commit/5d82cce0d615a76b738798577a28a15803e59aeb"}}