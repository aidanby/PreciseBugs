{"buggy_code": ["=== View All Post's Pages ===\nContributors: ethitter, thinkoomph\nDonate link: http://www.thinkoomph.com/plugins-modules/view-all-posts-pages/\nTags: view all, pages, paged, paged post, multipage, single view, single page, wp_link_pages, nextpage, next page, quicktag\nRequires at least: 3.2.1\nTested up to: 4.1\nStable tag: 0.9\nLicense: GPLv2 or later\nLicense URI: http://www.gnu.org/licenses/gpl-2.0.html\n\nProvides a \"view all\" (single page) option for content paged using WordPress' &lt;!--nextpage--&gt; Quicktag (multipage posts).\n== Description ==\n\nProvides a \"view all\" (single page) option for posts, pages, and custom post types paged using WordPress' <a href=\"http://codex.wordpress.org/Write_Post_SubPanel#Quicktags\" target=\"_blank\"><code>&lt;!--nextpage--&gt;</code> Quicktag</a> (multipage posts).\n\nYour theme must use `wp_link_pages()` to generate post page links, or you must use either the automatic or manual link capabilities provided in the plugin.\n\n**IMPORTANT**: There are certain plugins that may interfere with this plugin's functionality. See the **FAQ** for more information.\n\n== Installation ==\n\n1. Upload view-all-posts-pages.php to /wp-content/plugins/.\n2. Activate plugin through the WordPress Plugins menu.\n3. Navigate to Options > Permalinks and click *Save Changes* to update navigation.\n\n== Frequently Asked Questions ==\n\n= Links don't work =\nFirst, navigate to Options > Permalinks in WP Admin, click *Save Changes*, and try again.\n\nIf clicking on a link takes you back to the post or page where the link appeared, see the **Known Plugin Conflicts** item below.\n\nIf, after reviewing the remaining FAQ, you are still experiencing problems, visit [http://www.thinkoomph.com/plugins-modules/view-all-posts-pages/](http://www.thinkoomph.com/plugins-modules/view-all-posts-pages/) and leave a comment detailing the problem.\n\n= How do I add a link to my template? =\nThe function `vapp_the_link` will add a link to the full-content version of whatever page it appears on. This function accepts the following arguments:\n\n* **$link_text**: Set to text that should appear for the link. Defaults to *View All*.\n* **$class**: Specifies the CSS class for the link. Defaults to *vapp*.\n\n= Known Plugin Conflicts =\nThis plugin is known to conflict with certain plugins, many pertaining to SEO and permalinks. Conflicting plugins include, but are not limited to, the following:\n\n* **WordPress SEO by Yoast:** This plugin's `Permalink` options, particularly *Redirect attachment URL's to parent post URL* and *Redirect ugly URL's to clean permalinks. (Not recommended in many cases!)*, interfere with View All Post's Pages' ability to display full content. Both must be disabled, and the site's rewrite rules regenerated (by visiting Options > Permalinks and clicking *Save Changes*), for View All Post's Pages to function.\n\n== Changelog ==\n\n= 0.9 =\n* Move conditional registration of some filters to `init`, both to ensure external code can interact with filters and to avoid PHP notices.\n\n= 0.8.1 =\n* Correct translation implementation issue introduced in v0.8.\n\n= 0.8 =\n* When WordPress determines a request is a 404, don't activate the plugin's functionality.\n* Convert the plugin to a singleton.\n* Audit entire plugin for translation readyness.\n* Correct phpdoc.\n\n= 0.7 =\n* Further ensure that WordPress doesn't think a post is paged when viewing the full post content unpaged. Ensures that code checking the `$multipage` variable will function properly. Props @batmoo.\n\n= 0.6.1 =\n* Revert change in is_view_all() method made in version 0.6 as it breaks the method, rendering the plugin inoperable.\n\n= 0.6 =\n* Add additional rewrite rules for situations where verbose page rules are required.\n* Disable canonical redirect when print template is requested.\n* Update is_print() method to use WordPress API.\n* Correct translation string implementation.\n\n= 0.5 =\n* Change how post content is modified for View All display. Rather than using the `the_content` filter, global variables are overridden in the `the_post` action. Ensures that infinite loops don't result from shortcode processing and other uses of the `the_content` filter. Props to the WordPress.com VIP Support team (batmoo) and stevenkword.\n* Introduces the `vapp_display_link` filter to allow plugins and themes to suppress the automatic View All link on specific posts. Return `false` to suppress the link. Filter also passes post ID, plugin options, and post object.\n\n= 0.4.1 =\n* Eliminate use of plugins_loaded action since plugin has no dependencies on other plugins. All code previously located in the associated method has been moved to the class's constructor. Props danielbachhuber.\n\n= 0.4 =\n* Add filter to disable rewrite rules notice.\n* Apply esc_html() to link text during output.\n* Update code to conform to WordPress Coding Standards.\n\n= 0.3 =\n* Simplify rewrite rule creation, resolving 404 errors in most cases.\n\n= 0.2 =\n* Change how wp_link_pages arguments are filtered to better support as-needed filtering.\n\n= 0.1 =\n* Initial release\n\n== Upgrade Notice ==\n\n= 0.9 =\nRecommended update for anyone hoping to use plugin's filters to modify its behaviour.\n\n= 0.8.1 =\nRecommended upgrade for anyone translating plugin's interface.\n\n= 0.8 =\nPlugin won't unnecessarily execute its functionality if no posts are available and is now more thoroughly translatable.\n\n= 0.7 =\nFurther ensures plugins and themes correctly see a \"View All\" page as full post content.\n\n= 0.6.1 =\nResolves a problem where requests for view-all templates redirect to the article.\n\n= 0.6 =\nAdds better support for sites that use verbose page rules, resolving situations where requests for view-all template redirect to the post.\n\n= 0.5 =\nInfinite loops may result from previous method used to display entire post's content for the View All display. This update eliminates that possibility by using the the_post action rather than the the_content filter. Props to the WordPress.com VIP Support team (batmoo) and stevenkword.\n\n= 0.4.1 =\nEliminates use of plugins_loaded action since plugin has no dependencies on other plugins. All code previously located in the associated method has been moved to the class's constructor. props danielbachhuber.\n\n= 0.4 =\nAdds filter to disable rewrite rules notice. Also applies esc_html() to link text when output since HTML isn't permitted in the link text.\n\n= 0.3 =\nSimplifies rewrite rules, resolving 404 errors in most cases.\n\n= 0.2 =\nIntroduces helper function for wp_link_pages arguments and split filtering from plugin options.", "<?php\n/*\nPlugin Name: View All Post's Pages\nPlugin URI: http://www.thinkoomph.com/plugins-modules/view-all-posts-pages/\nDescription: Provides a \"view all\" (single page) option for posts, pages, and custom post types paged using WordPress' <a href=\"http://codex.wordpress.org/Write_Post_SubPanel#Quicktags\" target=\"_blank\"><code>&lt;!--nextpage--&gt;</code> Quicktag</a> (multipage posts).\nAuthor: Erick Hitter & Oomph, Inc.\nVersion: 0.9\nAuthor URI: http://www.thinkoomph.com/\nText Domain: view_all_posts_pages\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\nclass view_all_posts_pages {\n\t/**\n\t * Singleton\n\t */\n\tprivate static $__instance = null;\n\n\t/**\n\t * Class variables\n\t */\n\tprivate $query_var = 'view-all';\n\n\tprivate $ns = 'view_all_posts_pages';\n\n\tprivate $settings_key = 'vapp';\n\tprivate $settings_defaults = null;\n\n\tprivate $notice_key = 'vapp_admin_notice_dismissed';\n\n\t/**\n\t * Silence is golden\n\t */\n\tprivate function __construct() {}\n\n\t/**\n\t * Implement singleton\n\t *\n\t * @uses self::setup\n\t * @return self\n\t */\n\tpublic static function get_instance() {\n\t\tif ( ! is_a( self::$__instance, __CLASS__ ) ) {\n\t\t\tself::$__instance = new self;\n\n\t\t\tself::$__instance->setup();\n\t\t}\n\n\t\treturn self::$__instance;\n\t}\n\n\t/**\n\t * Register actions and filters.\n\t *\n\t * @uses register_deactivation_hook\n\t * @uses add_action\n\t * @return null\n\t */\n\tprivate function setup() {\n\t\tregister_deactivation_hook( __FILE__, array( $this, 'deactivation_hook' ) );\n\n\t\tadd_action( 'admin_init', array( $this, 'action_admin_init' ) );\n\t\tadd_action( 'admin_menu', array( $this, 'action_admin_menu' ) );\n\n\t\tadd_action( 'init', array( $this, 'action_init' ), 20 );\n\t\tadd_action( 'redirect_canonical', array( $this, 'filter_redirect_canonical' ) );\n\n\t\tadd_action( 'the_post', array( $this, 'action_the_post' ), 5 );\n\t}\n\n\t/**\n\t * Clean up after plugin deactivation.\n\t *\n\t * @uses flush_rewrite_rules\n\t * @uses delete_option\n\t * @action register_deactivation_hook\n\t * @return null\n\t */\n\tpublic function deactivation_hook() {\n\t\tflush_rewrite_rules();\n\n\t\tdelete_option( $this->settings_key );\n\t\tdelete_option( $this->notice_key );\n\t}\n\n\t/**\n\t * Register plugin option and disable rewrite rule flush warning.\n\t * @uses register_setting\n\t * @uses apply_filters\n\t * @uses update_option\n\t * @action admin_init\n\t * @return null\n\t */\n\tpublic function action_admin_init() {\n\t\tregister_setting( $this->settings_key, $this->settings_key, array( $this, 'admin_options_validate' ) );\n\n\t\tif ( isset( $_GET[ $this->notice_key ] ) && apply_filters( 'vapp_display_rewrite_rules_notice', true ) )\n\t\t\tupdate_option( $this->notice_key, 1 );\n\t}\n\n\t/**\n\t * Determine if full post view is being requested.\n\t *\n\t * @global $wp_query\n\t * @uses is_404\n\t * @return bool\n\t */\n\tpublic function is_view_all() {\n\t\tglobal $wp_query;\n\t\treturn is_array( $wp_query->query ) && array_key_exists( $this->query_var, $wp_query->query ) && ! is_404();\n\t}\n\n\t/**\n\t * Add rewrite endpoint, which sets query var and rewrite rules.\n\t *\n\t * @global $wp_rewrite\n\t * @uses __\n\t * @uses this::get_options\n\t * @uses add_filter\n\t * @uses apply_filters\n\t * @uses get_option\n\t * @uses add_action\n\t * @uses add_rewrite_endpoint\n\t * @action init\n\t * @return null\n\t */\n\tpublic function action_init() {\n\t\t// Populate default settings, with translation support\n\t\t$this->settings_defaults = array(\n\t\t\t'wlp'             => true,\n\t\t\t'wlp_text'        => __( 'View All', 'view_all_posts_pages' ),\n\t\t\t'wlp_class'       => 'vapp',\n\t\t\t'wlp_post_types'  => array(\n\t\t\t\t'post'\n\t\t\t),\n\t\t\t'link'            => false,\n\t\t\t'link_position'   => 'below',\n\t\t\t'link_text'       => __( 'View All', 'view_all_posts_pages' ),\n\t\t\t'link_class'      => 'vapp',\n\t\t\t'link_post_types' => array(\n\t\t\t\t'post'\n\t\t\t),\n\t\t\t'link_priority'   => 10,\n\t\t);\n\n\t\t// Register additional plugin actions if settings call for them.\n\t\t$options = $this->get_options();\n\n\t\tif ( array_key_exists( 'wlp', $options ) && true === $options[ 'wlp' ] )\n\t\t\tadd_filter( 'wp_link_pages_args', array( $this, 'filter_wp_link_pages_args_early' ), 0 );\n\n\t\tif ( $options[ 'link' ] )\n\t\t\tadd_filter( 'the_content', array( $this, 'filter_the_content_auto' ), $options[ 'link_priority' ] );\n\n\t\tif ( apply_filters( 'vapp_display_rewrite_rules_notice', true ) && ! get_option( $this->notice_key ) )\n\t\t\tadd_action( 'admin_notices', array( $this, 'action_admin_notices_activation' ) );\n\n\t\t// Register rewrite endpoint, which handles most of our rewrite needs\n\t\tadd_rewrite_endpoint( $this->query_var, EP_ALL );\n\n\t\t//Extra rules needed if verbose page rules are requested\n\t\tglobal $wp_rewrite;\n\t\tif ( $wp_rewrite->use_verbose_page_rules ) {\n\t\t\t//Build regex\n\t\t\t$regex = substr( str_replace( $wp_rewrite->rewritecode, $wp_rewrite->rewritereplace, $wp_rewrite->permalink_structure ), 1 );\n\t\t\t$regex = trailingslashit( $regex );\n\t\t\t$regex .= $this->query_var . '/?$';\n\n\t\t\t//Build corresponding query string\n\t\t\t$query = substr( str_replace( $wp_rewrite->rewritecode, $wp_rewrite->queryreplace, $wp_rewrite->permalink_structure ), 1 );\n\t\t\t$query = explode( '/', $query );\n\t\t\t$query = array_filter( $query );\n\n\t\t\t$i = 1;\n\t\t\tforeach ( $query as $key => $qv ) {\n\t\t\t\t$query[ $key ] .= '$matches[' . $i . ']';\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$query[] = $this->query_var . '=1';\n\n\t\t\t$query = implode( '&', $query );\n\n\t\t\t//Add rule\n\t\t\tadd_rewrite_rule( $regex, $wp_rewrite->index . '?' . $query, 'top' );\n\t\t}\n\t}\n\n\t/**\n\t * Prevent canonical redirect if full-post page is requested.\n\t *\n\t * @param string $url\n\t * @uses this::is_view_all\n\t * @filter redirect_canonical\n\t * @return string or false\n\t */\n\tpublic function filter_redirect_canonical( $url ) {\n\t\tif ( $this->is_view_all() )\n\t\t\t$url = false;\n\n\t\treturn $url;\n\t}\n\n\t/**\n\t * Modify post variables to display entire post on one page.\n\t *\n\t * @global $pages, $more\n\t * @param object $post\n\t * @uses this::is_view_all\n\t * @action the_post\n\t * @return null\n\t */\n\tpublic function action_the_post( $post ) {\n\t\tif ( $this->is_view_all() ) {\n\t\t\tglobal $pages, $more, $multipage;\n\n\t\t\t$post->post_content = str_replace( \"\\n<!--nextpage-->\\n\", \"\\n\\n\", $post->post_content );\n\t\t\t$post->post_content = str_replace( \"\\n<!--nextpage-->\", \"\\n\", $post->post_content );\n\t\t\t$post->post_content = str_replace( \"<!--nextpage-->\\n\", \"\\n\", $post->post_content );\n\t\t\t$post->post_content = str_replace( \"<!--nextpage-->\", ' ', $post->post_content );\n\n\t\t\t$pages = array( $post->post_content );\n\n\t\t\t$more = 1;\n\t\t\t$multipage = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Add wp_link_pages arguments filter if automatic inclusion is chosen for a given post type.\n\t * Automatic inclusion can be disabled by passing false through the vapp_display_link filter.\n\t *\n\t * @global $post\n\t * @param array $args\n\t * @uses this::get_options\n\t * @uses apply_filters\n\t * @uses add_filter\n\t * @filter wp_link_pages\n\t * @return array\n\t */\n\tpublic function filter_wp_link_pages_args_early( $args ) {\n\t\tglobal $post;\n\n\t\t$options = $this->get_options();\n\n\t\tif ( in_array( $post->post_type, $options[ 'wlp_post_types' ] ) && apply_filters( 'vapp_display_link', true, (int) $post->ID, $options, $post ) )\n\t\t\tadd_filter( 'wp_link_pages_args', array( $this, 'filter_wp_link_pages_args' ), 999 );\n\n\t\treturn $args;\n\t}\n\n\t/**\n\t * Filter wp_link_pages arguments to append \"View all\" link to output.\n\t *\n\t * @global $more\n\t * @param array $args\n\t * @uses this::get_options\n\t * @uses this::is_view_all\n\t * @uses esc_attr\n\t * @uses esc_url\n\t * @return array\n\t */\n\tpublic function filter_wp_link_pages_args( $args ) {\n\t\t$options = $this->get_options();\n\n\t\tif ( is_array( $options ) ) {\n\t\t\textract( $options );\n\n\t\t\t//Set global $more to false so that wp_link_pages outputs links for all pages when viewing full post page\n\t\t\tif ( $this->is_view_all() )\n\t\t\t\t$GLOBALS[ 'more' ] = false;\n\n\t\t\t//Process link text, respecting pagelink parameter.\n\t\t\t$link_text = str_replace( '%', $wlp_text, $args[ 'pagelink' ] );\n\n\t\t\t//View all\n\t\t\t$link = ' ' . $args[ 'link_before' ];\n\n\t\t\tif ( $this->is_view_all() )\n\t\t\t\t$link .= '<span class=\"' . esc_attr( $wlp_class ) . '\">' . $link_text . '</span><!-- .' . esc_attr( $wlp_class ) . ' -->';\n\t\t\telse\n\t\t\t\t$link .= '<a class=\"' . esc_attr( $wlp_class ) . '\" href=\"' . esc_url( $this->url() ) . '\">' . $link_text . '</a><!-- .' . esc_attr( $wlp_class ) . ' -->';\n\n\t\t\t$link .= $args[ 'link_after' ] . ' ';\n\n\t\t\t$args[ 'after' ] = $link . $args[ 'after' ];\n\t\t}\n\n\t\treturn $args;\n\t}\n\n\t/**\n\t * Filter the content if automatic link inclusion is selected.\n\t *\n\t * @global $post\n\t * @param string $content\n\t * @uses this::get_options\n\t * @uses this::is_view_all\n\t * @uses esc_attr\n\t * @uses esc_url\n\t * @uses this::url\n\t * @filter the_content\n\t * @return string\n\t */\n\tpublic function filter_the_content_auto( $content ) {\n\t\t$options = $this->get_options();\n\n\t\tglobal $post;\n\n\t\tif ( ! $this->is_view_all() && is_array( $options ) && array_key_exists( 'link', $options ) && true === $options[ 'link' ] && in_array( $post->post_type, $options[ 'link_post_types' ] ) ) {\n\t\t\textract( $options );\n\n\t\t\t$link = '<p class=\"vapp_wrapper\"><a class=\"' . esc_attr( $link_class ) . '\" href=\"' . esc_url( $this->url() ) . '\">' . esc_html( $link_text ) . '</a></p><!-- .vapp_wrapper -->';\n\n\t\t\tif ( 'above' == $link_position )\n\t\t\t\t$content = $link . $content;\n\t\t\telseif ( 'below' == $link_position )\n\t\t\t\t$content = $content . $link;\n\t\t\telseif ( 'both' == $link_position )\n\t\t\t\t$content = $link . $content . $link;\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Generate URL\n\t *\n\t * @global $post\n\t * @global $wp_rewrite\n\t * @param int $post_id\n\t * @uses is_singular\n\t * @uses in_the_loop\n\t * @uses get_permalink\n\t * @uses is_home\n\t * @uses is_front_page\n\t * @uses home_url\n\t * @uses is_category\n\t * @uses get_category_link\n\t * @uses get_query_var\n\t * @uses is_tag\n\t * @uses get_tag_link\n\t * @uses is_tax\n\t * @uses get_queried_object\n\t * @uses get_term_link\n\t * @uses path_join\n\t * @uses trailingslashit\n\t * @uses add_query_arg\n\t * @return string or bool\n\t */\n\tpublic function url( $post_id = false ) {\n\t\t$link = false;\n\n\t\t//Get link base specific to page type being viewed\n\t\tif ( is_singular() || in_the_loop() ) {\n\t\t\t$post_id = intval( $post_id );\n\n\t\t\tif ( ! $post_id ) {\n\t\t\t\tglobal $post;\n\t\t\t\t$post_id = $post->ID;\n\t\t\t}\n\n\t\t\tif ( ! $post_id )\n\t\t\t\treturn false;\n\n\t\t\t$link = get_permalink( $post_id );\n\t\t}\n\t\telseif ( is_home() || is_front_page() )\n\t\t\t$link = home_url( '/' );\n\t\telseif ( is_category() )\n\t\t\t$link = get_category_link( get_query_var( 'cat' ) );\n\t\telseif ( is_tag() )\n\t\t\t$link = get_tag_link( get_query_var( 'tag_id' ) );\n\t\t/** DISABLED FOR NOW AS PRINTING OF DATE-BASED ARCHIVES DOESN'T WORK YET\n\t\telseif ( is_date() ) {\n\t\t\t$year = get_query_var( 'year' );\n\t\t\t$monthnum = get_query_var( 'monthnum' );\n\t\t\t$day = get_query_var( 'day' );\n\n\t\t\tif ( $day )\n\t\t\t\t$link = get_day_link( $year, $monthnum, $day );\n\t\t\telseif ( $monthnum )\n\t\t\t\t$link = get_month_link( $year, $monthnum );\n\t\t\telse\n\t\t\t\t$link = get_year_link( $year );\n\t\t}*/\n\t\telseif ( is_tax() ) {\n\t\t\t$queried_object = get_queried_object();\n\n\t\t\tif ( is_object( $queried_object ) && property_exists( $queried_object, 'taxonomy' ) && property_exists( $queried_object, 'term_id' ) )\n\t\t\t\t$link = get_term_link( (int)$queried_object->term_id, $queried_object->taxonomy );\n\t\t}\n\n\t\t//If link base is set, build link\n\t\tif ( false !== $link ) {\n\t\t\tglobal $wp_rewrite;\n\n\t\t\tif ( $wp_rewrite->using_permalinks() ) {\n\t\t\t\t$link = path_join( $link, $this->query_var );\n\n\t\t\t\tif ( $wp_rewrite->use_trailing_slashes )\n\t\t\t\t\t$link = trailingslashit( $link );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$link = add_query_arg( $this->query_var, 1, $link );\n\t\t\t}\n\t\t}\n\n\t\treturn $link;\n\t}\n\n\t/**\n\t * Add menu item for options page\n\t *\n\t * @uses __\n\t * @uses add_options_page\n\t * @action admin_menu\n\t * @return null\n\t */\n\tpublic function action_admin_menu() {\n\t\tadd_options_page( sprintf( __( '%s Options', 'view_all_posts_pages' ), \"View All Post's Pages\" ), \"View All Post's Pages\", 'manage_options', $this->ns, array( $this, 'admin_options' ) );\n\t}\n\n\t/**\n\t * Render options page\n\t *\n\t * @uses settings_fields\n\t * @uses this::get_options\n\t * @uses this::post_types_array\n\t * @uses __\n\t * @uses _e\n\t * @uses checked\n\t * @uses esc_attr\n\t * @uses submit_button\n\t * @return string\n\t */\n\tpublic function admin_options() {\n\t?>\n\t\t<div class=\"wrap\">\n\t\t\t<h2>View All Post's Pages</h2>\n\n\t\t\t<form action=\"options.php\" method=\"post\">\n\t\t\t\t<?php\n\t\t\t\t\tsettings_fields( $this->settings_key );\n\t\t\t\t\t$options = $this->get_options();\n\n\t\t\t\t\t$post_types = $this->post_types_array();\n\t\t\t\t?>\n\n\t\t\t\t<h3><?php printf( __( '%s Options', 'view_all_posts_pages' ), '<em>wp_link_pages</em>' ); ?></h3>\n\n\t\t\t\t<p class=\"description\"><?php _e( 'A \"view all\" link can be appended to WordPress\\' standard page navigation using the options below.', 'view_all_posts_pages' ); ?></p>\n\n\t\t\t\t<table class=\"form-table\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><?php _e( 'Automatically append link to post\\'s page navigation?', 'view_all_posts_pages' ); ?></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"<?php echo $this->settings_key; ?>[wlp]\" id=\"wlp-true\" value=\"1\"<?php checked( $options[ 'wlp' ], true, true ); ?> /> <label for=\"wlp-true\"><?php _e( 'Yes', 'view_all_posts_pages' ); ?></label><br />\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"<?php echo $this->settings_key; ?>[wlp]\" id=\"wlp-false\" value=\"0\"<?php checked( $options[ 'wlp' ], false, true ); ?> /> <label for=\"wlp-false\"><?php _e( 'No', 'view_all_posts_pages' ); ?></label>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><label for=\"wlp_text\"><?php _e( 'Link text:', 'view_all_posts_pages' ); ?></label></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"<?php echo $this->settings_key; ?>[wlp_text]\" id=\"wlp_text\" value=\"<?php echo esc_attr( $options[ 'wlp_text' ] ); ?>\" class=\"regular-text\" />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><label for=\"wlp_class\"><?php _e( 'Link\\'s CSS class(es):', 'view_all_posts_pages' ); ?></label></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"<?php echo $this->settings_key;?>[wlp_class]\" id=\"wlp_class\" value=\"<?php echo esc_attr( $options[ 'wlp_class' ] ); ?>\" class=\"regular-text\" />\n\n\t\t\t\t\t\t\t<p class=\"description\"><?php _e( 'Be aware that Internet Explorer will only interpret the first two CSS classes.', 'view_all_posts_pages' ); ?></p>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><?php _e( 'Display automatically on:', 'view_all_posts_pages' ); ?></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php foreach ( $post_types as $post_type ) : ?>\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"<?php echo $this->settings_key; ?>[wlp_post_types][]\" id=\"wlp-pt-<?php echo $post_type->name; ?>\" value=\"<?php echo $post_type->name; ?>\"<?php if ( in_array( $post_type->name, $options[ 'wlp_post_types' ] ) ) echo ' checked=\"checked\"'; ?> /> <label for=\"wlp-pt-<?php echo $post_type->name; ?>\"><?php echo $post_type->labels->name; ?></label><br />\n\t\t\t\t\t\t\t<?php endforeach; ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\n\t\t\t\t<h3><?php _e( 'Standalone Link Options', 'view_all_posts_pages' ); ?></h3>\n\n\t\t\t\t<p class=\"description\"><?php _e( 'In addition to appending the \"view all\" link to WordPress\\' standard navigation, link(s) can be added above and below post content.', 'view_all_posts_pages' ); ?></p>\n\n\t\t\t\t<table class=\"form-table\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><?php _e( 'Automatically add links based on settings below?', 'view_all_posts_pages' ); ?></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"<?php echo $this->settings_key; ?>[link]\" id=\"link-true\" value=\"1\"<?php checked( $options[ 'link' ], true, true ); ?> /> <label for=\"link-true\"><?php _e( 'Yes', 'view_all_posts_pages' ); ?></label><br />\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"<?php echo $this->settings_key; ?>[link]\" id=\"link-false\" value=\"0\"<?php checked( $options[ 'link' ], false, true ); ?> /> <label for=\"link-false\"><?php _e( 'No', 'view_all_posts_pages' ); ?></label>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><?php _e( 'Automatically place link:', 'view_all_posts_pages' ); ?></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"<?php echo $this->settings_key; ?>[link_position]\" id=\"link_position-above\" value=\"above\"<?php checked( $options[ 'link_position' ], 'above', true ); ?> /> <label for=\"link_position-above\"><?php _e( 'Above content', 'view_all_posts_pages' ); ?></label><br />\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"<?php echo $this->settings_key; ?>[link_position]\" id=\"link_position-below\" value=\"below\"<?php checked( $options[ 'link_position' ], 'below', true ); ?> /> <label for=\"link_position-below\"><?php _e( 'Below content', 'view_all_posts_pages' ); ?></label><br />\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"<?php echo $this->settings_key; ?>[link_position]\" id=\"link_position-both\" value=\"both\"<?php checked( $options[ 'link_position' ], 'both', true ); ?> /> <label for=\"link_position-both\"><?php _e( 'Above and below content', 'view_all_posts_pages' ); ?></label>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><?php _e( 'Display automatically on:', 'view_all_posts_pages' ); ?></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php foreach ( $post_types as $post_type ) : ?>\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"<?php echo $this->settings_key; ?>[link_post_types][]\" id=\"link-pt-<?php echo $post_type->name; ?>\" value=\"<?php echo $post_type->name; ?>\"<?php if ( in_array( $post_type->name, $options[ 'link_post_types' ] ) ) echo ' checked=\"checked\"'; ?> /> <label for=\"link-pt-<?php echo $post_type->name; ?>\"><?php echo $post_type->labels->name; ?></label><br />\n\t\t\t\t\t\t\t<?php endforeach; ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><label for=\"link_text\"><?php _e( 'Link text:', 'view_all_posts_pages' ); ?></label></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"<?php echo $this->settings_key; ?>[link_text]\" id=\"link_text\" value=\"<?php echo esc_attr( $options[ 'link_text' ] ); ?>\" class=\"regular-text\" />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><label for=\"link_class\"><?php _e( 'Link\\'s CSS class(es):', 'view_all_posts_pages' ); ?></label></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"<?php echo $this->settings_key; ?>[link_class]\" id=\"link_class\" value=\"<?php echo esc_attr( $options[ 'link_class' ] ); ?>\" class=\"regular-text\" />\n\n\t\t\t\t\t\t\t<p class=\"description\"><?php _e( 'Be aware that Internet Explorer will only interpret the first two CSS classes.', 'view_all_posts_pages' ); ?></p>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><label for=\"link_priority\"><?php _e( 'Link\\'s priority:', 'view_all_posts_pages' ); ?></label></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"<?php echo $this->settings_key; ?>[link_priority]\" id=\"link_priority\" class=\"small-text code\" value=\"<?php echo esc_attr( $options[ 'link_priority' ] ); ?>\" />\n\n\t\t\t\t\t\t\t<p class=\"description\"><?php _e( 'Priority determines when the link is added to a post\\'s content. You can use the above setting to modulate the link\\'s placement.', 'view_all_posts_pages' ); ?></p>\n\t\t\t\t\t\t\t<p class=\"description\"><?php _e( 'The default value is <strong>10</strong>. Lower values mean the link will be added earlier, while higher values will add the link later.', 'view_all_posts_pages' ); ?></p>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\n\t\t\t\t<?php submit_button(); ?>\n\t\t\t</form>\n\n\t\t</div><!-- .wrap -->\n\t<?php\n\t}\n\n\t/**\n\t * Validate options\n\t *\n\t * @param array $options\n\t * @uses this::get_options\n\t * @uses this::post_types_array\n\t * @uses sanitize_text_field\n\t * @uses absint\n\t * @return array\n\t */\n\tpublic function admin_options_validate( $options ) {\n\t\t$new_options = array();\n\n\t\tif ( is_array( $options ) ) {\n\t\t\tforeach ( $options as $key => $value ) {\n\t\t\t\tswitch( $key ) {\n\t\t\t\t\tcase 'wlp':\n\t\t\t\t\tcase 'link':\n\t\t\t\t\t\t$new_options[ $key ] = (bool)$value;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'link_position':\n\t\t\t\t\t\t$placements = array(\n\t\t\t\t\t\t\t'above',\n\t\t\t\t\t\t\t'below',\n\t\t\t\t\t\t\t'both'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t$new_options[ $key ] = in_array( $value, $placements ) ? $value : 'below';\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'wlp_post_types':\n\t\t\t\t\tcase 'link_post_types':\n\t\t\t\t\t\t$post_types = $this->post_types_array();\n\n\t\t\t\t\t\t$new_options[ $key ] = array();\n\n\t\t\t\t\t\tif ( is_array( $value ) && is_array( $post_types ) ) {\n\t\t\t\t\t\t\tforeach ( $post_types as $post_type ) {\n\t\t\t\t\t\t\t\tif ( in_array( $post_type->name, $value ) )\n\t\t\t\t\t\t\t\t\t$new_options[ $key ][] = $post_type->name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'wlp_text':\n\t\t\t\t\tcase 'wlp_class':\n\t\t\t\t\tcase 'link_text':\n\t\t\t\t\tcase 'link_class':\n\t\t\t\t\t\t$value = sanitize_text_field( $value );\n\n\t\t\t\t\t\tif ( ( 'wlp_text' == $key || 'link_text' == $key ) && empty( $value ) )\n\t\t\t\t\t\t\t$value = 'View all';\n\n\t\t\t\t\t\t$new_options[ $key ] = $value;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'link_priority':\n\t\t\t\t\t\t$value = absint( $value );\n\n\t\t\t\t\t\t$new_options[ $key ] = $value;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $new_options;\n\t}\n\n\t/**\n\t * Return plugin options array parsed with default options\n\t *\n\t * @uses get_option\n\t * @uses wp_parse_args\n\t * @return array\n\t */\n\tprivate function get_options() {\n\t\t$options = get_option( $this->settings_key, $this->settings_defaults );\n\n\t\tif ( ! is_array( $options ) )\n\t\t\t$options = array();\n\n\t\tif ( ! array_key_exists( 'wlp_post_types', $options ) )\n\t\t\t$options[ 'wlp_post_types' ] = array();\n\n\t\tif ( ! array_key_exists( 'link_post_types', $options ) )\n\t\t\t$options[ 'link_post_types' ] = array();\n\n\t\treturn wp_parse_args( $options, $this->settings_defaults );\n\t}\n\n\t/**\n\t * Build array of available post types, excluding all built-in ones except 'post' and 'page'.\n\t *\n\t * @uses get_post_types\n\t * @return array\n\t */\n\tprivate function post_types_array() {\n\t\t$post_types = array();\n\t\tforeach ( get_post_types( array(), 'objects' ) as $post_type ) {\n\t\t\tif ( false == $post_type->_builtin || 'post' == $post_type->name || 'page' == $post_type->name )\n\t\t\t\t$post_types[] = $post_type;\n\t\t}\n\n\t\treturn $post_types;\n\t}\n\n\t/**\n\t * Display admin notice regarding rewrite rules flush.\n\t *\n\t * @uses get_option\n\t * @uses apply_filters\n\t * @uses _e\n\t * @uses __\n\t * @uses admin_url\n\t * @uses add_query_arg\n\t * @action admin_notices\n\t * @return html or null\n\t */\n\tpublic function action_admin_notices_activation() {\n\t\tif ( ! get_option( $this->notice_key ) && apply_filters( 'vapp_display_rewrite_rules_notice', true ) ) :\n\t\t?>\n\n\t\t<div id=\"wpf-rewrite-flush-warning\" class=\"error fade\">\n\t\t\t<p><strong><?php _e( 'View All Post\\'s Pages', 'view_all_posts_pages' ); ?></strong></p>\n\n\t\t\t<p><?php printf( __( 'You must refresh your site\\'s permalinks before <em>View All Post\\'s Pages</em> is fully activated. To do so, go to <a href=\"%s\">Permalinks</a> and click the <strong><em>Save Changes</em></strong> button at the bottom of the screen.', 'view_all_posts_pages' ), admin_url( 'options-permalink.php' ) ); ?></p>\n\n\t\t\t<p><?php printf( __( 'When finished, click <a href=\"%s\">here</a> to hide this message.', 'view_all_posts_pages' ), admin_url( add_query_arg( $this->notice_key, 1, 'index.php' ) ) ); ?></p>\n\t\t</div>\n\n\t\t<?php\n\t\tendif;\n\t}\n}\nview_all_posts_pages::get_instance();\n\n/**\n * Alias global variable used to hold instantiated plugin prior to singleton's introduction in version 0.7.\n */\n$GLOBALS['vapp'] = view_all_posts_pages::get_instance();\n\n/**\n * Shortcut to public function for generating full post view URL\n *\n * @param int $post_id\n * @uses view_all_posts_pages::get_instance\n * @return string or bool\n */\nfunction vapp_get_url( $post_id = false ) {\n\treturn view_all_posts_pages::get_instance()->url( intval( $post_id ) );\n}\n\n/**\n * Output link to full post view.\n *\n * @global $post\n * @param string $link_text\n * @param string $class\n * @uses vapp_get_url\n * @uses esc_attr\n * @uses esc_url\n * @uses esc_html\n * @return string or null\n */\nfunction vapp_the_link( $link_text = 'View All', $class = 'vapp' ) {\n\tglobal $post;\n\t$url = vapp_get_url( $post->ID );\n\n\tif ( $url ) {\n\t\t$link = '<a ' . ( $class ? 'class=\"' . esc_attr( $class ) . '\"' : '' ) . ' href=\"' . esc_url( $url ) . '\">' . esc_html( $link_text ) . '</a>';\n\n\t\techo $link;\n\t}\n}\n\n/**\n * Filter wp_link_pages args.\n * Function is a shortcut to class' filter.\n *\n * @param array $args\n * @uses view_all_posts_pages::get_instance\n * @return array\n */\nfunction vapp_filter_wp_link_pages_args( $args ) {\n\treturn view_all_posts_pages::get_instance()->filter_wp_link_pages_args( $args );\n}\n\nif ( ! function_exists( 'is_view_all' ) ) {\n\t/**\n\t * Conditional tag indicating if full post view was requested.\n\t *\n\t * @uses view_all_posts_pages::get_instance\n\t * @return bool\n\t */\n\tfunction is_view_all() {\n\t\treturn view_all_posts_pages::get_instance()->is_view_all();\n\t}\n}\n"], "fixing_code": ["=== View All Post's Pages ===\nContributors: ethitter, thinkoomph\nDonate link: http://www.thinkoomph.com/plugins-modules/view-all-posts-pages/\nTags: view all, pages, paged, paged post, multipage, single view, single page, wp_link_pages, nextpage, next page, quicktag\nRequires at least: 3.2.1\nTested up to: 4.2\nStable tag: 0.9.1\nLicense: GPLv2 or later\nLicense URI: http://www.gnu.org/licenses/gpl-2.0.html\n\nProvides a \"view all\" (single page) option for content paged using WordPress' &lt;!--nextpage--&gt; Quicktag (multipage posts).\n== Description ==\n\nProvides a \"view all\" (single page) option for posts, pages, and custom post types paged using WordPress' <a href=\"http://codex.wordpress.org/Write_Post_SubPanel#Quicktags\" target=\"_blank\"><code>&lt;!--nextpage--&gt;</code> Quicktag</a> (multipage posts).\n\nYour theme must use `wp_link_pages()` to generate post page links, or you must use either the automatic or manual link capabilities provided in the plugin.\n\n**IMPORTANT**: There are certain plugins that may interfere with this plugin's functionality. See the **FAQ** for more information.\n\n== Installation ==\n\n1. Upload view-all-posts-pages.php to /wp-content/plugins/.\n2. Activate plugin through the WordPress Plugins menu.\n3. Navigate to Options > Permalinks and click *Save Changes* to update navigation.\n\n== Frequently Asked Questions ==\n\n= Links don't work =\nFirst, navigate to Options > Permalinks in WP Admin, click *Save Changes*, and try again.\n\nIf clicking on a link takes you back to the post or page where the link appeared, see the **Known Plugin Conflicts** item below.\n\nIf, after reviewing the remaining FAQ, you are still experiencing problems, visit [http://www.thinkoomph.com/plugins-modules/view-all-posts-pages/](http://www.thinkoomph.com/plugins-modules/view-all-posts-pages/) and leave a comment detailing the problem.\n\n= How do I add a link to my template? =\nThe function `vapp_the_link` will add a link to the full-content version of whatever page it appears on. This function accepts the following arguments:\n\n* **$link_text**: Set to text that should appear for the link. Defaults to *View All*.\n* **$class**: Specifies the CSS class for the link. Defaults to *vapp*.\n\n= Known Plugin Conflicts =\nThis plugin is known to conflict with certain plugins, many pertaining to SEO and permalinks. Conflicting plugins include, but are not limited to, the following:\n\n* **WordPress SEO by Yoast:** This plugin's `Permalink` options, particularly *Redirect attachment URL's to parent post URL* and *Redirect ugly URL's to clean permalinks. (Not recommended in many cases!)*, interfere with View All Post's Pages' ability to display full content. Both must be disabled, and the site's rewrite rules regenerated (by visiting Options > Permalinks and clicking *Save Changes*), for View All Post's Pages to function.\n\n== Changelog ==\n\n= 0.9.1 =\n* Security update: correct misuse of `add_query_arg()` as identified by Sucuri: https://blog.sucuri.net/2015/04/security-advisory-xss-vulnerability-affecting-multiple-wordpress-plugins.html.\n\n= 0.9 =\n* Move conditional registration of some filters to `init`, both to ensure external code can interact with filters and to avoid PHP notices.\n\n= 0.8.1 =\n* Correct translation implementation issue introduced in v0.8.\n\n= 0.8 =\n* When WordPress determines a request is a 404, don't activate the plugin's functionality.\n* Convert the plugin to a singleton.\n* Audit entire plugin for translation readyness.\n* Correct phpdoc.\n\n= 0.7 =\n* Further ensure that WordPress doesn't think a post is paged when viewing the full post content unpaged. Ensures that code checking the `$multipage` variable will function properly. Props @batmoo.\n\n= 0.6.1 =\n* Revert change in is_view_all() method made in version 0.6 as it breaks the method, rendering the plugin inoperable.\n\n= 0.6 =\n* Add additional rewrite rules for situations where verbose page rules are required.\n* Disable canonical redirect when print template is requested.\n* Update is_print() method to use WordPress API.\n* Correct translation string implementation.\n\n= 0.5 =\n* Change how post content is modified for View All display. Rather than using the `the_content` filter, global variables are overridden in the `the_post` action. Ensures that infinite loops don't result from shortcode processing and other uses of the `the_content` filter. Props to the WordPress.com VIP Support team (batmoo) and stevenkword.\n* Introduces the `vapp_display_link` filter to allow plugins and themes to suppress the automatic View All link on specific posts. Return `false` to suppress the link. Filter also passes post ID, plugin options, and post object.\n\n= 0.4.1 =\n* Eliminate use of plugins_loaded action since plugin has no dependencies on other plugins. All code previously located in the associated method has been moved to the class's constructor. Props danielbachhuber.\n\n= 0.4 =\n* Add filter to disable rewrite rules notice.\n* Apply esc_html() to link text during output.\n* Update code to conform to WordPress Coding Standards.\n\n= 0.3 =\n* Simplify rewrite rule creation, resolving 404 errors in most cases.\n\n= 0.2 =\n* Change how wp_link_pages arguments are filtered to better support as-needed filtering.\n\n= 0.1 =\n* Initial release\n\n== Upgrade Notice ==\n\n= 0.9.1 =\nSecurity update: correct misuse of `add_query_arg()` as identified by Sucuri: https://blog.sucuri.net/2015/04/security-advisory-xss-vulnerability-affecting-multiple-wordpress-plugins.html.\n\n= 0.9 =\nRecommended update for anyone hoping to use plugin's filters to modify its behaviour.\n\n= 0.8.1 =\nRecommended upgrade for anyone translating plugin's interface.\n\n= 0.8 =\nPlugin won't unnecessarily execute its functionality if no posts are available and is now more thoroughly translatable.\n\n= 0.7 =\nFurther ensures plugins and themes correctly see a \"View All\" page as full post content.\n\n= 0.6.1 =\nResolves a problem where requests for view-all templates redirect to the article.\n\n= 0.6 =\nAdds better support for sites that use verbose page rules, resolving situations where requests for view-all template redirect to the post.\n\n= 0.5 =\nInfinite loops may result from previous method used to display entire post's content for the View All display. This update eliminates that possibility by using the the_post action rather than the the_content filter. Props to the WordPress.com VIP Support team (batmoo) and stevenkword.\n\n= 0.4.1 =\nEliminates use of plugins_loaded action since plugin has no dependencies on other plugins. All code previously located in the associated method has been moved to the class's constructor. props danielbachhuber.\n\n= 0.4 =\nAdds filter to disable rewrite rules notice. Also applies esc_html() to link text when output since HTML isn't permitted in the link text.\n\n= 0.3 =\nSimplifies rewrite rules, resolving 404 errors in most cases.\n\n= 0.2 =\nIntroduces helper function for wp_link_pages arguments and split filtering from plugin options.", "<?php\n/*\nPlugin Name: View All Post's Pages\nPlugin URI: http://www.oomphinc.com/plugins-modules/view-all-posts-pages/\nDescription: Provides a \"view all\" (single page) option for posts, pages, and custom post types paged using WordPress' <a href=\"http://codex.wordpress.org/Write_Post_SubPanel#Quicktags\" target=\"_blank\"><code>&lt;!--nextpage--&gt;</code> Quicktag</a> (multipage posts).\nAuthor: Erick Hitter & Oomph, Inc.\nVersion: 0.9.1\nAuthor URI: http://www.oomphinc.com/\nText Domain: view_all_posts_pages\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\nclass view_all_posts_pages {\n\t/**\n\t * Singleton\n\t */\n\tprivate static $__instance = null;\n\n\t/**\n\t * Class variables\n\t */\n\tprivate $query_var = 'view-all';\n\n\tprivate $ns = 'view_all_posts_pages';\n\n\tprivate $settings_key = 'vapp';\n\tprivate $settings_defaults = null;\n\n\tprivate $notice_key = 'vapp_admin_notice_dismissed';\n\n\t/**\n\t * Silence is golden\n\t */\n\tprivate function __construct() {}\n\n\t/**\n\t * Implement singleton\n\t *\n\t * @uses self::setup\n\t * @return self\n\t */\n\tpublic static function get_instance() {\n\t\tif ( ! is_a( self::$__instance, __CLASS__ ) ) {\n\t\t\tself::$__instance = new self;\n\n\t\t\tself::$__instance->setup();\n\t\t}\n\n\t\treturn self::$__instance;\n\t}\n\n\t/**\n\t * Register actions and filters.\n\t *\n\t * @uses register_deactivation_hook\n\t * @uses add_action\n\t * @return null\n\t */\n\tprivate function setup() {\n\t\tregister_deactivation_hook( __FILE__, array( $this, 'deactivation_hook' ) );\n\n\t\tadd_action( 'admin_init', array( $this, 'action_admin_init' ) );\n\t\tadd_action( 'admin_menu', array( $this, 'action_admin_menu' ) );\n\n\t\tadd_action( 'init', array( $this, 'action_init' ), 20 );\n\t\tadd_action( 'redirect_canonical', array( $this, 'filter_redirect_canonical' ) );\n\n\t\tadd_action( 'the_post', array( $this, 'action_the_post' ), 5 );\n\t}\n\n\t/**\n\t * Clean up after plugin deactivation.\n\t *\n\t * @uses flush_rewrite_rules\n\t * @uses delete_option\n\t * @action register_deactivation_hook\n\t * @return null\n\t */\n\tpublic function deactivation_hook() {\n\t\tflush_rewrite_rules();\n\n\t\tdelete_option( $this->settings_key );\n\t\tdelete_option( $this->notice_key );\n\t}\n\n\t/**\n\t * Register plugin option and disable rewrite rule flush warning.\n\t * @uses register_setting\n\t * @uses apply_filters\n\t * @uses update_option\n\t * @action admin_init\n\t * @return null\n\t */\n\tpublic function action_admin_init() {\n\t\tregister_setting( $this->settings_key, $this->settings_key, array( $this, 'admin_options_validate' ) );\n\n\t\tif ( isset( $_GET[ $this->notice_key ] ) && apply_filters( 'vapp_display_rewrite_rules_notice', true ) )\n\t\t\tupdate_option( $this->notice_key, 1 );\n\t}\n\n\t/**\n\t * Determine if full post view is being requested.\n\t *\n\t * @global $wp_query\n\t * @uses is_404\n\t * @return bool\n\t */\n\tpublic function is_view_all() {\n\t\tglobal $wp_query;\n\t\treturn is_array( $wp_query->query ) && array_key_exists( $this->query_var, $wp_query->query ) && ! is_404();\n\t}\n\n\t/**\n\t * Add rewrite endpoint, which sets query var and rewrite rules.\n\t *\n\t * @global $wp_rewrite\n\t * @uses __\n\t * @uses this::get_options\n\t * @uses add_filter\n\t * @uses apply_filters\n\t * @uses get_option\n\t * @uses add_action\n\t * @uses add_rewrite_endpoint\n\t * @action init\n\t * @return null\n\t */\n\tpublic function action_init() {\n\t\t// Populate default settings, with translation support\n\t\t$this->settings_defaults = array(\n\t\t\t'wlp'             => true,\n\t\t\t'wlp_text'        => __( 'View All', 'view_all_posts_pages' ),\n\t\t\t'wlp_class'       => 'vapp',\n\t\t\t'wlp_post_types'  => array(\n\t\t\t\t'post'\n\t\t\t),\n\t\t\t'link'            => false,\n\t\t\t'link_position'   => 'below',\n\t\t\t'link_text'       => __( 'View All', 'view_all_posts_pages' ),\n\t\t\t'link_class'      => 'vapp',\n\t\t\t'link_post_types' => array(\n\t\t\t\t'post'\n\t\t\t),\n\t\t\t'link_priority'   => 10,\n\t\t);\n\n\t\t// Register additional plugin actions if settings call for them.\n\t\t$options = $this->get_options();\n\n\t\tif ( array_key_exists( 'wlp', $options ) && true === $options[ 'wlp' ] )\n\t\t\tadd_filter( 'wp_link_pages_args', array( $this, 'filter_wp_link_pages_args_early' ), 0 );\n\n\t\tif ( $options[ 'link' ] )\n\t\t\tadd_filter( 'the_content', array( $this, 'filter_the_content_auto' ), $options[ 'link_priority' ] );\n\n\t\tif ( apply_filters( 'vapp_display_rewrite_rules_notice', true ) && ! get_option( $this->notice_key ) )\n\t\t\tadd_action( 'admin_notices', array( $this, 'action_admin_notices_activation' ) );\n\n\t\t// Register rewrite endpoint, which handles most of our rewrite needs\n\t\tadd_rewrite_endpoint( $this->query_var, EP_ALL );\n\n\t\t//Extra rules needed if verbose page rules are requested\n\t\tglobal $wp_rewrite;\n\t\tif ( $wp_rewrite->use_verbose_page_rules ) {\n\t\t\t//Build regex\n\t\t\t$regex = substr( str_replace( $wp_rewrite->rewritecode, $wp_rewrite->rewritereplace, $wp_rewrite->permalink_structure ), 1 );\n\t\t\t$regex = trailingslashit( $regex );\n\t\t\t$regex .= $this->query_var . '/?$';\n\n\t\t\t//Build corresponding query string\n\t\t\t$query = substr( str_replace( $wp_rewrite->rewritecode, $wp_rewrite->queryreplace, $wp_rewrite->permalink_structure ), 1 );\n\t\t\t$query = explode( '/', $query );\n\t\t\t$query = array_filter( $query );\n\n\t\t\t$i = 1;\n\t\t\tforeach ( $query as $key => $qv ) {\n\t\t\t\t$query[ $key ] .= '$matches[' . $i . ']';\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$query[] = $this->query_var . '=1';\n\n\t\t\t$query = implode( '&', $query );\n\n\t\t\t//Add rule\n\t\t\tadd_rewrite_rule( $regex, $wp_rewrite->index . '?' . $query, 'top' );\n\t\t}\n\t}\n\n\t/**\n\t * Prevent canonical redirect if full-post page is requested.\n\t *\n\t * @param string $url\n\t * @uses this::is_view_all\n\t * @filter redirect_canonical\n\t * @return string or false\n\t */\n\tpublic function filter_redirect_canonical( $url ) {\n\t\tif ( $this->is_view_all() )\n\t\t\t$url = false;\n\n\t\treturn $url;\n\t}\n\n\t/**\n\t * Modify post variables to display entire post on one page.\n\t *\n\t * @global $pages, $more\n\t * @param object $post\n\t * @uses this::is_view_all\n\t * @action the_post\n\t * @return null\n\t */\n\tpublic function action_the_post( $post ) {\n\t\tif ( $this->is_view_all() ) {\n\t\t\tglobal $pages, $more, $multipage;\n\n\t\t\t$post->post_content = str_replace( \"\\n<!--nextpage-->\\n\", \"\\n\\n\", $post->post_content );\n\t\t\t$post->post_content = str_replace( \"\\n<!--nextpage-->\", \"\\n\", $post->post_content );\n\t\t\t$post->post_content = str_replace( \"<!--nextpage-->\\n\", \"\\n\", $post->post_content );\n\t\t\t$post->post_content = str_replace( \"<!--nextpage-->\", ' ', $post->post_content );\n\n\t\t\t$pages = array( $post->post_content );\n\n\t\t\t$more = 1;\n\t\t\t$multipage = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Add wp_link_pages arguments filter if automatic inclusion is chosen for a given post type.\n\t * Automatic inclusion can be disabled by passing false through the vapp_display_link filter.\n\t *\n\t * @global $post\n\t * @param array $args\n\t * @uses this::get_options\n\t * @uses apply_filters\n\t * @uses add_filter\n\t * @filter wp_link_pages\n\t * @return array\n\t */\n\tpublic function filter_wp_link_pages_args_early( $args ) {\n\t\tglobal $post;\n\n\t\t$options = $this->get_options();\n\n\t\tif ( in_array( $post->post_type, $options[ 'wlp_post_types' ] ) && apply_filters( 'vapp_display_link', true, (int) $post->ID, $options, $post ) )\n\t\t\tadd_filter( 'wp_link_pages_args', array( $this, 'filter_wp_link_pages_args' ), 999 );\n\n\t\treturn $args;\n\t}\n\n\t/**\n\t * Filter wp_link_pages arguments to append \"View all\" link to output.\n\t *\n\t * @global $more\n\t * @param array $args\n\t * @uses this::get_options\n\t * @uses this::is_view_all\n\t * @uses esc_attr\n\t * @uses esc_url\n\t * @return array\n\t */\n\tpublic function filter_wp_link_pages_args( $args ) {\n\t\t$options = $this->get_options();\n\n\t\tif ( is_array( $options ) ) {\n\t\t\textract( $options );\n\n\t\t\t//Set global $more to false so that wp_link_pages outputs links for all pages when viewing full post page\n\t\t\tif ( $this->is_view_all() )\n\t\t\t\t$GLOBALS[ 'more' ] = false;\n\n\t\t\t//Process link text, respecting pagelink parameter.\n\t\t\t$link_text = str_replace( '%', $wlp_text, $args[ 'pagelink' ] );\n\n\t\t\t//View all\n\t\t\t$link = ' ' . $args[ 'link_before' ];\n\n\t\t\tif ( $this->is_view_all() )\n\t\t\t\t$link .= '<span class=\"' . esc_attr( $wlp_class ) . '\">' . $link_text . '</span><!-- .' . esc_attr( $wlp_class ) . ' -->';\n\t\t\telse\n\t\t\t\t$link .= '<a class=\"' . esc_attr( $wlp_class ) . '\" href=\"' . esc_url( $this->url() ) . '\">' . $link_text . '</a><!-- .' . esc_attr( $wlp_class ) . ' -->';\n\n\t\t\t$link .= $args[ 'link_after' ] . ' ';\n\n\t\t\t$args[ 'after' ] = $link . $args[ 'after' ];\n\t\t}\n\n\t\treturn $args;\n\t}\n\n\t/**\n\t * Filter the content if automatic link inclusion is selected.\n\t *\n\t * @global $post\n\t * @param string $content\n\t * @uses this::get_options\n\t * @uses this::is_view_all\n\t * @uses esc_attr\n\t * @uses esc_url\n\t * @uses this::url\n\t * @filter the_content\n\t * @return string\n\t */\n\tpublic function filter_the_content_auto( $content ) {\n\t\t$options = $this->get_options();\n\n\t\tglobal $post;\n\n\t\tif ( ! $this->is_view_all() && is_array( $options ) && array_key_exists( 'link', $options ) && true === $options[ 'link' ] && in_array( $post->post_type, $options[ 'link_post_types' ] ) ) {\n\t\t\textract( $options );\n\n\t\t\t$link = '<p class=\"vapp_wrapper\"><a class=\"' . esc_attr( $link_class ) . '\" href=\"' . esc_url( $this->url() ) . '\">' . esc_html( $link_text ) . '</a></p><!-- .vapp_wrapper -->';\n\n\t\t\tif ( 'above' == $link_position )\n\t\t\t\t$content = $link . $content;\n\t\t\telseif ( 'below' == $link_position )\n\t\t\t\t$content = $content . $link;\n\t\t\telseif ( 'both' == $link_position )\n\t\t\t\t$content = $link . $content . $link;\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Generate URL\n\t *\n\t * @global $post\n\t * @global $wp_rewrite\n\t * @param int $post_id\n\t * @uses is_singular\n\t * @uses in_the_loop\n\t * @uses get_permalink\n\t * @uses is_home\n\t * @uses is_front_page\n\t * @uses home_url\n\t * @uses is_category\n\t * @uses get_category_link\n\t * @uses get_query_var\n\t * @uses is_tag\n\t * @uses get_tag_link\n\t * @uses is_tax\n\t * @uses get_queried_object\n\t * @uses get_term_link\n\t * @uses path_join\n\t * @uses trailingslashit\n\t * @uses add_query_arg\n\t * @return string or bool\n\t */\n\tpublic function url( $post_id = false ) {\n\t\t$link = false;\n\n\t\t//Get link base specific to page type being viewed\n\t\tif ( is_singular() || in_the_loop() ) {\n\t\t\t$post_id = intval( $post_id );\n\n\t\t\tif ( ! $post_id ) {\n\t\t\t\tglobal $post;\n\t\t\t\t$post_id = $post->ID;\n\t\t\t}\n\n\t\t\tif ( ! $post_id )\n\t\t\t\treturn false;\n\n\t\t\t$link = get_permalink( $post_id );\n\t\t}\n\t\telseif ( is_home() || is_front_page() )\n\t\t\t$link = home_url( '/' );\n\t\telseif ( is_category() )\n\t\t\t$link = get_category_link( get_query_var( 'cat' ) );\n\t\telseif ( is_tag() )\n\t\t\t$link = get_tag_link( get_query_var( 'tag_id' ) );\n\t\t/** DISABLED FOR NOW AS PRINTING OF DATE-BASED ARCHIVES DOESN'T WORK YET\n\t\telseif ( is_date() ) {\n\t\t\t$year = get_query_var( 'year' );\n\t\t\t$monthnum = get_query_var( 'monthnum' );\n\t\t\t$day = get_query_var( 'day' );\n\n\t\t\tif ( $day )\n\t\t\t\t$link = get_day_link( $year, $monthnum, $day );\n\t\t\telseif ( $monthnum )\n\t\t\t\t$link = get_month_link( $year, $monthnum );\n\t\t\telse\n\t\t\t\t$link = get_year_link( $year );\n\t\t}*/\n\t\telseif ( is_tax() ) {\n\t\t\t$queried_object = get_queried_object();\n\n\t\t\tif ( is_object( $queried_object ) && property_exists( $queried_object, 'taxonomy' ) && property_exists( $queried_object, 'term_id' ) )\n\t\t\t\t$link = get_term_link( (int)$queried_object->term_id, $queried_object->taxonomy );\n\t\t}\n\n\t\t//If link base is set, build link\n\t\tif ( false !== $link ) {\n\t\t\tglobal $wp_rewrite;\n\n\t\t\tif ( $wp_rewrite->using_permalinks() ) {\n\t\t\t\t$link = path_join( $link, $this->query_var );\n\n\t\t\t\tif ( $wp_rewrite->use_trailing_slashes )\n\t\t\t\t\t$link = trailingslashit( $link );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$link = add_query_arg( $this->query_var, 1, $link );\n\t\t\t}\n\t\t}\n\n\t\treturn $link;\n\t}\n\n\t/**\n\t * Add menu item for options page\n\t *\n\t * @uses __\n\t * @uses add_options_page\n\t * @action admin_menu\n\t * @return null\n\t */\n\tpublic function action_admin_menu() {\n\t\tadd_options_page( sprintf( __( '%s Options', 'view_all_posts_pages' ), \"View All Post's Pages\" ), \"View All Post's Pages\", 'manage_options', $this->ns, array( $this, 'admin_options' ) );\n\t}\n\n\t/**\n\t * Render options page\n\t *\n\t * @uses settings_fields\n\t * @uses this::get_options\n\t * @uses this::post_types_array\n\t * @uses __\n\t * @uses _e\n\t * @uses checked\n\t * @uses esc_attr\n\t * @uses submit_button\n\t * @return string\n\t */\n\tpublic function admin_options() {\n\t?>\n\t\t<div class=\"wrap\">\n\t\t\t<h2>View All Post's Pages</h2>\n\n\t\t\t<form action=\"options.php\" method=\"post\">\n\t\t\t\t<?php\n\t\t\t\t\tsettings_fields( $this->settings_key );\n\t\t\t\t\t$options = $this->get_options();\n\n\t\t\t\t\t$post_types = $this->post_types_array();\n\t\t\t\t?>\n\n\t\t\t\t<h3><?php printf( __( '%s Options', 'view_all_posts_pages' ), '<em>wp_link_pages</em>' ); ?></h3>\n\n\t\t\t\t<p class=\"description\"><?php _e( 'A \"view all\" link can be appended to WordPress\\' standard page navigation using the options below.', 'view_all_posts_pages' ); ?></p>\n\n\t\t\t\t<table class=\"form-table\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><?php _e( 'Automatically append link to post\\'s page navigation?', 'view_all_posts_pages' ); ?></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"<?php echo $this->settings_key; ?>[wlp]\" id=\"wlp-true\" value=\"1\"<?php checked( $options[ 'wlp' ], true, true ); ?> /> <label for=\"wlp-true\"><?php _e( 'Yes', 'view_all_posts_pages' ); ?></label><br />\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"<?php echo $this->settings_key; ?>[wlp]\" id=\"wlp-false\" value=\"0\"<?php checked( $options[ 'wlp' ], false, true ); ?> /> <label for=\"wlp-false\"><?php _e( 'No', 'view_all_posts_pages' ); ?></label>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><label for=\"wlp_text\"><?php _e( 'Link text:', 'view_all_posts_pages' ); ?></label></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"<?php echo $this->settings_key; ?>[wlp_text]\" id=\"wlp_text\" value=\"<?php echo esc_attr( $options[ 'wlp_text' ] ); ?>\" class=\"regular-text\" />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><label for=\"wlp_class\"><?php _e( 'Link\\'s CSS class(es):', 'view_all_posts_pages' ); ?></label></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"<?php echo $this->settings_key;?>[wlp_class]\" id=\"wlp_class\" value=\"<?php echo esc_attr( $options[ 'wlp_class' ] ); ?>\" class=\"regular-text\" />\n\n\t\t\t\t\t\t\t<p class=\"description\"><?php _e( 'Be aware that Internet Explorer will only interpret the first two CSS classes.', 'view_all_posts_pages' ); ?></p>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><?php _e( 'Display automatically on:', 'view_all_posts_pages' ); ?></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php foreach ( $post_types as $post_type ) : ?>\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"<?php echo $this->settings_key; ?>[wlp_post_types][]\" id=\"wlp-pt-<?php echo $post_type->name; ?>\" value=\"<?php echo $post_type->name; ?>\"<?php if ( in_array( $post_type->name, $options[ 'wlp_post_types' ] ) ) echo ' checked=\"checked\"'; ?> /> <label for=\"wlp-pt-<?php echo $post_type->name; ?>\"><?php echo $post_type->labels->name; ?></label><br />\n\t\t\t\t\t\t\t<?php endforeach; ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\n\t\t\t\t<h3><?php _e( 'Standalone Link Options', 'view_all_posts_pages' ); ?></h3>\n\n\t\t\t\t<p class=\"description\"><?php _e( 'In addition to appending the \"view all\" link to WordPress\\' standard navigation, link(s) can be added above and below post content.', 'view_all_posts_pages' ); ?></p>\n\n\t\t\t\t<table class=\"form-table\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><?php _e( 'Automatically add links based on settings below?', 'view_all_posts_pages' ); ?></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"<?php echo $this->settings_key; ?>[link]\" id=\"link-true\" value=\"1\"<?php checked( $options[ 'link' ], true, true ); ?> /> <label for=\"link-true\"><?php _e( 'Yes', 'view_all_posts_pages' ); ?></label><br />\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"<?php echo $this->settings_key; ?>[link]\" id=\"link-false\" value=\"0\"<?php checked( $options[ 'link' ], false, true ); ?> /> <label for=\"link-false\"><?php _e( 'No', 'view_all_posts_pages' ); ?></label>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><?php _e( 'Automatically place link:', 'view_all_posts_pages' ); ?></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"<?php echo $this->settings_key; ?>[link_position]\" id=\"link_position-above\" value=\"above\"<?php checked( $options[ 'link_position' ], 'above', true ); ?> /> <label for=\"link_position-above\"><?php _e( 'Above content', 'view_all_posts_pages' ); ?></label><br />\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"<?php echo $this->settings_key; ?>[link_position]\" id=\"link_position-below\" value=\"below\"<?php checked( $options[ 'link_position' ], 'below', true ); ?> /> <label for=\"link_position-below\"><?php _e( 'Below content', 'view_all_posts_pages' ); ?></label><br />\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"<?php echo $this->settings_key; ?>[link_position]\" id=\"link_position-both\" value=\"both\"<?php checked( $options[ 'link_position' ], 'both', true ); ?> /> <label for=\"link_position-both\"><?php _e( 'Above and below content', 'view_all_posts_pages' ); ?></label>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><?php _e( 'Display automatically on:', 'view_all_posts_pages' ); ?></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php foreach ( $post_types as $post_type ) : ?>\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"<?php echo $this->settings_key; ?>[link_post_types][]\" id=\"link-pt-<?php echo $post_type->name; ?>\" value=\"<?php echo $post_type->name; ?>\"<?php if ( in_array( $post_type->name, $options[ 'link_post_types' ] ) ) echo ' checked=\"checked\"'; ?> /> <label for=\"link-pt-<?php echo $post_type->name; ?>\"><?php echo $post_type->labels->name; ?></label><br />\n\t\t\t\t\t\t\t<?php endforeach; ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><label for=\"link_text\"><?php _e( 'Link text:', 'view_all_posts_pages' ); ?></label></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"<?php echo $this->settings_key; ?>[link_text]\" id=\"link_text\" value=\"<?php echo esc_attr( $options[ 'link_text' ] ); ?>\" class=\"regular-text\" />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><label for=\"link_class\"><?php _e( 'Link\\'s CSS class(es):', 'view_all_posts_pages' ); ?></label></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"<?php echo $this->settings_key; ?>[link_class]\" id=\"link_class\" value=\"<?php echo esc_attr( $options[ 'link_class' ] ); ?>\" class=\"regular-text\" />\n\n\t\t\t\t\t\t\t<p class=\"description\"><?php _e( 'Be aware that Internet Explorer will only interpret the first two CSS classes.', 'view_all_posts_pages' ); ?></p>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\"><label for=\"link_priority\"><?php _e( 'Link\\'s priority:', 'view_all_posts_pages' ); ?></label></th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"<?php echo $this->settings_key; ?>[link_priority]\" id=\"link_priority\" class=\"small-text code\" value=\"<?php echo esc_attr( $options[ 'link_priority' ] ); ?>\" />\n\n\t\t\t\t\t\t\t<p class=\"description\"><?php _e( 'Priority determines when the link is added to a post\\'s content. You can use the above setting to modulate the link\\'s placement.', 'view_all_posts_pages' ); ?></p>\n\t\t\t\t\t\t\t<p class=\"description\"><?php _e( 'The default value is <strong>10</strong>. Lower values mean the link will be added earlier, while higher values will add the link later.', 'view_all_posts_pages' ); ?></p>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\n\t\t\t\t<?php submit_button(); ?>\n\t\t\t</form>\n\n\t\t</div><!-- .wrap -->\n\t<?php\n\t}\n\n\t/**\n\t * Validate options\n\t *\n\t * @param array $options\n\t * @uses this::get_options\n\t * @uses this::post_types_array\n\t * @uses sanitize_text_field\n\t * @uses absint\n\t * @return array\n\t */\n\tpublic function admin_options_validate( $options ) {\n\t\t$new_options = array();\n\n\t\tif ( is_array( $options ) ) {\n\t\t\tforeach ( $options as $key => $value ) {\n\t\t\t\tswitch( $key ) {\n\t\t\t\t\tcase 'wlp':\n\t\t\t\t\tcase 'link':\n\t\t\t\t\t\t$new_options[ $key ] = (bool)$value;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'link_position':\n\t\t\t\t\t\t$placements = array(\n\t\t\t\t\t\t\t'above',\n\t\t\t\t\t\t\t'below',\n\t\t\t\t\t\t\t'both'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t$new_options[ $key ] = in_array( $value, $placements ) ? $value : 'below';\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'wlp_post_types':\n\t\t\t\t\tcase 'link_post_types':\n\t\t\t\t\t\t$post_types = $this->post_types_array();\n\n\t\t\t\t\t\t$new_options[ $key ] = array();\n\n\t\t\t\t\t\tif ( is_array( $value ) && is_array( $post_types ) ) {\n\t\t\t\t\t\t\tforeach ( $post_types as $post_type ) {\n\t\t\t\t\t\t\t\tif ( in_array( $post_type->name, $value ) )\n\t\t\t\t\t\t\t\t\t$new_options[ $key ][] = $post_type->name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'wlp_text':\n\t\t\t\t\tcase 'wlp_class':\n\t\t\t\t\tcase 'link_text':\n\t\t\t\t\tcase 'link_class':\n\t\t\t\t\t\t$value = sanitize_text_field( $value );\n\n\t\t\t\t\t\tif ( ( 'wlp_text' == $key || 'link_text' == $key ) && empty( $value ) )\n\t\t\t\t\t\t\t$value = 'View all';\n\n\t\t\t\t\t\t$new_options[ $key ] = $value;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'link_priority':\n\t\t\t\t\t\t$value = absint( $value );\n\n\t\t\t\t\t\t$new_options[ $key ] = $value;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $new_options;\n\t}\n\n\t/**\n\t * Return plugin options array parsed with default options\n\t *\n\t * @uses get_option\n\t * @uses wp_parse_args\n\t * @return array\n\t */\n\tprivate function get_options() {\n\t\t$options = get_option( $this->settings_key, $this->settings_defaults );\n\n\t\tif ( ! is_array( $options ) )\n\t\t\t$options = array();\n\n\t\tif ( ! array_key_exists( 'wlp_post_types', $options ) )\n\t\t\t$options[ 'wlp_post_types' ] = array();\n\n\t\tif ( ! array_key_exists( 'link_post_types', $options ) )\n\t\t\t$options[ 'link_post_types' ] = array();\n\n\t\treturn wp_parse_args( $options, $this->settings_defaults );\n\t}\n\n\t/**\n\t * Build array of available post types, excluding all built-in ones except 'post' and 'page'.\n\t *\n\t * @uses get_post_types\n\t * @return array\n\t */\n\tprivate function post_types_array() {\n\t\t$post_types = array();\n\t\tforeach ( get_post_types( array(), 'objects' ) as $post_type ) {\n\t\t\tif ( false == $post_type->_builtin || 'post' == $post_type->name || 'page' == $post_type->name )\n\t\t\t\t$post_types[] = $post_type;\n\t\t}\n\n\t\treturn $post_types;\n\t}\n\n\t/**\n\t * Display admin notice regarding rewrite rules flush.\n\t *\n\t * @uses get_option\n\t * @uses apply_filters\n\t * @uses _e\n\t * @uses __\n\t * @uses admin_url\n\t * @uses add_query_arg\n\t * @action admin_notices\n\t * @return html or null\n\t */\n\tpublic function action_admin_notices_activation() {\n\t\tif ( ! get_option( $this->notice_key ) && apply_filters( 'vapp_display_rewrite_rules_notice', true ) ) :\n\t\t?>\n\n\t\t<div id=\"wpf-rewrite-flush-warning\" class=\"error fade\">\n\t\t\t<p><strong><?php _e( 'View All Post\\'s Pages', 'view_all_posts_pages' ); ?></strong></p>\n\n\t\t\t<p><?php printf( __( 'You must refresh your site\\'s permalinks before <em>View All Post\\'s Pages</em> is fully activated. To do so, go to <a href=\"%s\">Permalinks</a> and click the <strong><em>Save Changes</em></strong> button at the bottom of the screen.', 'view_all_posts_pages' ), esc_url( admin_url( 'options-permalink.php' ) ) ); ?></p>\n\n\t\t\t<p><?php printf( __( 'When finished, click <a href=\"%s\">here</a> to hide this message.', 'view_all_posts_pages' ), esc_url( admin_url( add_query_arg( $this->notice_key, 1, 'index.php' ) ) ) ); ?></p>\n\t\t</div>\n\n\t\t<?php\n\t\tendif;\n\t}\n}\nview_all_posts_pages::get_instance();\n\n/**\n * Alias global variable used to hold instantiated plugin prior to singleton's introduction in version 0.7.\n */\n$GLOBALS['vapp'] = view_all_posts_pages::get_instance();\n\n/**\n * Shortcut to public function for generating full post view URL\n *\n * @param int $post_id\n * @uses view_all_posts_pages::get_instance\n * @return string or bool\n */\nfunction vapp_get_url( $post_id = false ) {\n\treturn view_all_posts_pages::get_instance()->url( intval( $post_id ) );\n}\n\n/**\n * Output link to full post view.\n *\n * @global $post\n * @param string $link_text\n * @param string $class\n * @uses vapp_get_url\n * @uses esc_attr\n * @uses esc_url\n * @uses esc_html\n * @return string or null\n */\nfunction vapp_the_link( $link_text = 'View All', $class = 'vapp' ) {\n\tglobal $post;\n\t$url = vapp_get_url( $post->ID );\n\n\tif ( $url ) {\n\t\t$link = '<a ' . ( $class ? 'class=\"' . esc_attr( $class ) . '\"' : '' ) . ' href=\"' . esc_url( $url ) . '\">' . esc_html( $link_text ) . '</a>';\n\n\t\techo $link;\n\t}\n}\n\n/**\n * Filter wp_link_pages args.\n * Function is a shortcut to class' filter.\n *\n * @param array $args\n * @uses view_all_posts_pages::get_instance\n * @return array\n */\nfunction vapp_filter_wp_link_pages_args( $args ) {\n\treturn view_all_posts_pages::get_instance()->filter_wp_link_pages_args( $args );\n}\n\nif ( ! function_exists( 'is_view_all' ) ) {\n\t/**\n\t * Conditional tag indicating if full post view was requested.\n\t *\n\t * @uses view_all_posts_pages::get_instance\n\t * @return bool\n\t */\n\tfunction is_view_all() {\n\t\treturn view_all_posts_pages::get_instance()->is_view_all();\n\t}\n}\n"], "filenames": ["readme.txt", "view-all-posts-pages.php"], "buggy_code_start_loc": [6, 4], "buggy_code_end_loc": [94, 692], "fixing_code_start_loc": [6, 4], "fixing_code_end_loc": [101, 692], "type": "CWE-79", "message": "A vulnerability, which was classified as problematic, has been found in View All Posts Page Plugin up to 0.9.0 on WordPress. This issue affects the function action_admin_notices_activation of the file view-all-posts-pages.php. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 0.9.1 is able to address this issue. The patch is named bf914f3a59063fa4df8fd4925ae18a5d852396d7. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-233363.", "other": {"cve": {"id": "CVE-2015-10119", "sourceIdentifier": "cna@vuldb.com", "published": "2023-07-10T16:15:47.183", "lastModified": "2024-02-29T01:16:12.070", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as problematic, has been found in View All Posts Page Plugin up to 0.9.0 on WordPress. This issue affects the function action_admin_notices_activation of the file view-all-posts-pages.php. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 0.9.1 is able to address this issue. The patch is named bf914f3a59063fa4df8fd4925ae18a5d852396d7. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-233363."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:oomphinc:view_all_post\\'s_pages:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "0.9.4", "matchCriteriaId": "68744E8E-C81D-4615-91B9-8B5142CBD02A"}]}]}], "references": [{"url": "https://github.com/wp-plugins/view-all-posts-pages/commit/bf914f3a59063fa4df8fd4925ae18a5d852396d7", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://vuldb.com/?ctiid.233363", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory", "VDB Entry"]}, {"url": "https://vuldb.com/?id.233363", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory", "VDB Entry"]}]}, "github_commit_url": "https://github.com/wp-plugins/view-all-posts-pages/commit/bf914f3a59063fa4df8fd4925ae18a5d852396d7"}}